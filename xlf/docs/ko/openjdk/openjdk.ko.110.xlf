<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="1bd4f669b7c80b9d42c83e69a195441508ba6b9f" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; from a local date and time.</source>
          <target state="translated">현지 날짜와 시간에서 &lt;code&gt;ZonedDateTime&lt;/code&gt; 의 인스턴스를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="1e35b430aad31cdc4b7c4f3fdf9e9c388229ae4a" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; from a local date-time using the preferred offset if possible.</source>
          <target state="translated">가능한 경우 기본 오프셋을 사용하여 현지 날짜-시간에서 &lt;code&gt;ZonedDateTime&lt;/code&gt; 의 인스턴스를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="90e620ad40357c0ed6fabccd9fa0698844cc7f09" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; from a local date-time.</source>
          <target state="translated">현지 날짜-시간에서 &lt;code&gt;ZonedDateTime&lt;/code&gt; 의 인스턴스를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="daa7352efd20a4d5ce9ac3574e9875eed6e3abd7" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; from a temporal object.</source>
          <target state="translated">임시 개체에서 &lt;code&gt;ZonedDateTime&lt;/code&gt; 인스턴스를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="b053ac8c108f895fd83aba564572cf1e13e0f80b" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; from a text string such as &lt;code&gt;2007-12-03T10:15:30+01:00[Europe/Paris]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;2007-12-03T10:15:30+01:00[Europe/Paris]&lt;/code&gt; 와 같은 텍스트 문자열에서 &lt;code&gt;ZonedDateTime&lt;/code&gt; 의 인스턴스를 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="a1310eed28b093dd2b16b8a8e6489c5bbe73a75c" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; from a text string using a specific formatter.</source>
          <target state="translated">특정 포맷터를 사용하여 텍스트 문자열에서 &lt;code&gt;ZonedDateTime&lt;/code&gt; 의 인스턴스를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="311510ede1a6fcce1a6133495fa115efe0788e78" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; from a year, month, day, hour, minute, second, nanosecond and time-zone.</source>
          <target state="translated">년, 월, 일,시, 분, 초, 나노초 및 시간대에서 &lt;code&gt;ZonedDateTime&lt;/code&gt; 인스턴스를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="439e844b515221df651a082f7619a11332dc731a" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; from an &lt;code&gt;Instant&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; 에서 &lt;code&gt;ZonedDateTime&lt;/code&gt; 인스턴스를 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="9bdc9cf32b7467fa178f1cb23f3b9ee0276a60be" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; from the instant formed by combining the local date-time and offset.</source>
          <target state="translated">로컬 날짜-시간과 오프셋을 결합하여 형성된 순간에서 &lt;code&gt;ZonedDateTime&lt;/code&gt; 의 인스턴스를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="5709c655590fc8a3a1dc687db7144abfdcefeb5f" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; strictly validating the combination of local date-time, offset and zone ID.</source>
          <target state="translated">로컬 날짜-시간, 오프셋 및 영역 ID의 조합을 엄격하게 확인하는 &lt;code&gt;ZonedDateTime&lt;/code&gt; 인스턴스를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="838dfb236058641c2080940a840e5ce4f3ab77b3" translate="yes" xml:space="preserve">
          <source>Obtains an instance of ZoneRules that has fixed zone rules.</source>
          <target state="translated">고정 영역 규칙이있는 ZoneRules의 인스턴스를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6f877d06d7aae1497878242ead869b09bc386b9b" translate="yes" xml:space="preserve">
          <source>Obtains an instance of a ZoneRules.</source>
          <target state="translated">ZoneRules의 인스턴스를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="0506ad01f3b1921875266ec1facd91614a199d23" translate="yes" xml:space="preserve">
          <source>Obtains an instance of the device represented by the info object.</source>
          <target state="translated">info 객체가 나타내는 장치의 인스턴스를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6a4324003b1fbf28f78d682549fd0e1257c617b8" translate="yes" xml:space="preserve">
          <source>Obtains an instance of the mixer represented by the info object.</source>
          <target state="translated">info 객체가 나타내는 믹서의 인스턴스를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="925f2febbb34c84aef204d86e3f7a30f686cf0fa" translate="yes" xml:space="preserve">
          <source>Obtains an instance of the mixer represented by the info object. If &lt;code&gt;null&lt;/code&gt; is passed, then the default mixer will be returned.</source>
          <target state="translated">info 개체가 나타내는 믹서의 인스턴스를 가져옵니다. 경우 &lt;code&gt;null&lt;/code&gt; 전달되는, 디폴트 믹서가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="af2a3bb0a1bb46ca2bdb9c34d22ea2b69e2eaad0" translate="yes" xml:space="preserve">
          <source>Obtains and ignores the next task that the executor would otherwise execute, if one is immediately available, and then retries execution of task r, unless the executor is shut down, in which case task r is instead discarded.</source>
          <target state="translated">실행 프로그램이 즉시 사용 가능한 경우 실행 프로그램이 달리 실행할 다음 태스크를 확보하고 무시한 다음 실행 프로그램이 종료되지 않는 한 태스크 r 실행을 재 시도합니다.이 경우 태스크 r이 대신 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="34755b1184b7a1a53586f1827c4761c06bbced68" translate="yes" xml:space="preserve">
          <source>Obtains information about all source lines of a particular type that are supported by the installed mixers.</source>
          <target state="translated">설치된 믹서가 지원하는 특정 유형의 모든 소스 라인에 대한 정보를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="b237bf9463e75c6d7abbea7cac551b1787d891f6" translate="yes" xml:space="preserve">
          <source>Obtains information about all target lines of a particular type that are supported by the installed mixers.</source>
          <target state="translated">설치된 믹서가 지원하는 특정 유형의 모든 대상 라인에 대한 정보를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="0e1d63c30b084d9b19df9b91378d19562cf91b7c" translate="yes" xml:space="preserve">
          <source>Obtains information about source lines of a particular type supported by the mixer.</source>
          <target state="translated">믹서가 지원하는 특정 유형의 소스 라인에 대한 정보를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="1687d09bbe98e5d92e08fbd42b5de2105d9e9ec8" translate="yes" xml:space="preserve">
          <source>Obtains information about source lines of a particular type supported by the mixer. Some source lines may only be available when this mixer is open.</source>
          <target state="translated">믹서가 지원하는 특정 유형의 소스 라인에 대한 정보를 얻습니다. 일부 소스 라인은이 믹서가 열려있을 때만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a642c2226510768574d3a8353aa3c747c320e0b3" translate="yes" xml:space="preserve">
          <source>Obtains information about target lines of a particular type supported by the mixer.</source>
          <target state="translated">믹서가 지원하는 특정 유형의 대상 라인에 대한 정보를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="2f89093d691a03b62e6d1c8d68be0e22b7be6bbf" translate="yes" xml:space="preserve">
          <source>Obtains information about target lines of a particular type supported by the mixer. Some target lines may only be available when this mixer is open.</source>
          <target state="translated">믹서가 지원하는 특정 유형의 대상 라인에 대한 정보를 얻습니다. 일부 믹서는이 믹서가 열려있을 때만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5862ebecc90468a75732f3851f549d2f030353a" translate="yes" xml:space="preserve">
          <source>Obtains information about the device, including its Java class and &lt;code&gt;Strings&lt;/code&gt; containing its name, vendor, and description.</source>
          <target state="translated">이름, 공급 업체 및 설명이 포함 된 Java 클래스 및 &lt;code&gt;Strings&lt;/code&gt; 포함 하여 장치에 대한 정보를 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="997e261db921af6bd87fbdf4e0f17e808e7ba6b9" translate="yes" xml:space="preserve">
          <source>Obtains information about the set of source lines supported by this mixer.</source>
          <target state="translated">이 믹서가 지원하는 소스 라인 세트에 대한 정보를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="2e05c0250dd2ef8fce3346c7fd3120387d747e00" translate="yes" xml:space="preserve">
          <source>Obtains information about the set of source lines supported by this mixer. Some source lines may only be available when this mixer is open.</source>
          <target state="translated">이 믹서가 지원하는 소스 라인 세트에 관한 정보를 취득합니다. 일부 소스 라인은이 믹서가 열려있을 때만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="627093d5dd82a012fdf884024acff536a8b94546" translate="yes" xml:space="preserve">
          <source>Obtains information about the set of target lines supported by this mixer.</source>
          <target state="translated">이 믹서에서 지원하는 대상 라인 세트에 대한 정보를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="25e4cece4a8eb3c13d3687fc8756ca124448ac2f" translate="yes" xml:space="preserve">
          <source>Obtains information about the set of target lines supported by this mixer. Some target lines may only be available when this mixer is open.</source>
          <target state="translated">이 믹서가 지원하는 타겟 라인 세트에 관한 정보를 취득합니다. 일부 믹서는이 믹서가 열려있을 때만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5def9de893e95e0ddaf731d654a91f081696045" translate="yes" xml:space="preserve">
          <source>Obtains information about this mixer, including the product's name, version, vendor, etc.</source>
          <target state="translated">제품 이름, 버전, 공급 업체 등이 믹서에 대한 정보를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="287f118c5f33c813b1e61a07eaecba0af974efd1" translate="yes" xml:space="preserve">
          <source>Obtains the &lt;a href=&quot;typeinfoprovider&quot;&gt;&lt;code&gt;TypeInfoProvider&lt;/code&gt;&lt;/a&gt; implementation of this &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;typeinfoprovider&quot;&gt; &lt;code&gt;TypeInfoProvider&lt;/code&gt; &lt;/a&gt; 구현을 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="d39563d8cf73a6c4f1d3dc0b5dca96a9fa82d3d1" translate="yes" xml:space="preserve">
          <source>Obtains the &lt;code&gt;Line.Info&lt;/code&gt; object describing this line.</source>
          <target state="translated">이 라인을 기술 하는 &lt;code&gt;Line.Info&lt;/code&gt; 객체를 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="e19199c172a2c63cde746ad023170cb98150cf83" translate="yes" xml:space="preserve">
          <source>Obtains the &lt;code&gt;Patch&lt;/code&gt; object that indicates the bank and program numbers where this instrument is to be stored in the synthesizer.</source>
          <target state="translated">취득 &lt;code&gt;Patch&lt;/code&gt; 이 악기가되는 뱅크 번호와 프로그램 번호를 나타내는 개체가 신디사이저에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="866ca1b843dcc5124c0488b887fb96d46bb03e0d" translate="yes" xml:space="preserve">
          <source>Obtains the DecimalStyle for the default &lt;a href=&quot;../../util/locale.category#FORMAT&quot;&gt;&lt;code&gt;FORMAT&lt;/code&gt;&lt;/a&gt; locale.</source>
          <target state="translated">기본 &lt;a href=&quot;../../util/locale.category#FORMAT&quot;&gt; &lt;code&gt;FORMAT&lt;/code&gt; &lt;/a&gt; 로캘에 대한 DecimalStyle을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="aed36f20e3e9faa6ec5b0f031d431ef1f2bba9ef" translate="yes" xml:space="preserve">
          <source>Obtains the DecimalStyle for the specified locale.</source>
          <target state="translated">지정된 로케일에 대한 DecimalStyle을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6177b2afbdb7119b22c3ae04796e0300d7180c4a" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI channel associated with this event.</source>
          <target state="translated">이 이벤트와 관련된 MIDI 채널을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6002a183023c0a5535b130e708c387f22f519cec" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI channel associated with this event. This method assumes that the event is a MIDI channel message; if not, the return value will not be meaningful.</source>
          <target state="translated">이 이벤트에 관련한 MIDI 채널을 가져옵니다. 이 방법은 이벤트가 MIDI 채널 메시지라고 가정합니다. 그렇지 않으면 반환 값은 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="0b3b04dc9f2015db68f66197f5333a59ce7ea51b" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI command associated with this event.</source>
          <target state="translated">이 이벤트와 관련된 MIDI 명령을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d60c7d12355decd92516795017049872697fcaaf" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI command associated with this event. This method assumes that the event is a MIDI channel message; if not, the return value will not be meaningful.</source>
          <target state="translated">이 이벤트와 관련된 MIDI 명령을 가져옵니다. 이 방법은 이벤트가 MIDI 채널 메시지라고 가정합니다. 그렇지 않으면 반환 값은 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="54c6a3846464a9ac1055bea410a67091070ec4bf" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the &lt;code&gt;File&lt;/code&gt; provided.</source>
          <target state="translated">얻의 MIDI 파일 형식 &lt;code&gt;File&lt;/code&gt; 제공.</target>
        </trans-unit>
        <trans-unit id="8334eae69f7ce2fe6dbfe9b350872dd8339bb993" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the &lt;code&gt;File&lt;/code&gt; provided. The &lt;code&gt;File&lt;/code&gt; must point to valid MIDI file data.</source>
          <target state="translated">제공된 &lt;code&gt;File&lt;/code&gt; 의 MIDI 파일 형식을 가져옵니다 . &lt;code&gt;File&lt;/code&gt; 유효한 MIDI 파일 데이터를 나타낼 필요가 있습니다.</target>
        </trans-unit>
        <trans-unit id="b127c1ff90b9eafa3bf13b0e52ebdd5347d73846" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the &lt;code&gt;URL&lt;/code&gt; provided.</source>
          <target state="translated">제공된 &lt;code&gt;URL&lt;/code&gt; 의 MIDI 파일 형식을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="3665154cd0065a9280c198f6743338234da6785b" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the &lt;code&gt;URL&lt;/code&gt; provided. The &lt;code&gt;URL&lt;/code&gt; must point to valid MIDI file data.</source>
          <target state="translated">제공된 &lt;code&gt;URL&lt;/code&gt; 의 MIDI 파일 형식을 가져옵니다 . &lt;code&gt;URL&lt;/code&gt; 는 유효한 MIDI 파일 데이터를 나타낼 필요가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec7b9635c04904a6a613a805cb310a61fcc86b51" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the URL provided. The URL must point to valid MIDI file data.</source>
          <target state="translated">제공된 URL의 MIDI 파일 형식을 가져옵니다. URL은 유효한 MIDI 파일 데이터를 가리켜 야합니다.</target>
        </trans-unit>
        <trans-unit id="cad0491ae922cd67eb5fb295cfb54508c32f8e5e" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the data in the specified URL.</source>
          <target state="translated">지정된 URL에있는 데이터의 MIDI 파일 형식을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="594da249118253fa08cb7e16b797a02e62e8164c" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the data in the specified URL. The URL must point to valid MIDI file data for a file type recognized by the system.</source>
          <target state="translated">지정된 URL에서 데이터의 MIDI 파일 형식을 가져옵니다. URL은 시스템이 인식하는 파일 형식의 유효한 MIDI 파일 데이터를 가리켜 야합니다.</target>
        </trans-unit>
        <trans-unit id="423dd4fbb96b46d17c2873ed19327f259ad149e9" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the data in the specified input stream.</source>
          <target state="translated">지정된 입력 스트림에있는 데이터의 MIDI 파일 형식을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="cc6b502ad6faa22fbc33d8e5eceae6fba09ab077" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the data in the specified input stream. The stream must point to valid MIDI file data for a file type recognized by the system.</source>
          <target state="translated">지정된 입력 스트림에서 데이터의 MIDI 파일 형식을 가져옵니다. 스트림은 시스템이 인식하는 파일 형식에 대한 유효한 MIDI 파일 데이터를 가리켜 야합니다.</target>
        </trans-unit>
        <trans-unit id="4ec0fe79fabd3c11572565bc3b89c3817616f8b6" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the input stream provided.</source>
          <target state="translated">제공된 입력 스트림의 MIDI 파일 형식을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="3fef377b55f5d73fcb3cf88678ac50a2e3ef40f4" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the input stream provided. The stream must point to valid MIDI file data. In general, MIDI file readers may need to read some data from the stream before determining whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and, if not, reset the stream's read pointer to its original position. If the input stream does not support this, this method may fail with an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">제공된 입력 스트림의 MIDI 파일 형식을 가져옵니다. 스트림은 유효한 MIDI 파일 데이터를 가리켜 야합니다. 일반적으로 MIDI 파일 리더는 스트림을 지원하는지 여부를 결정하기 전에 스트림에서 일부 데이터를 읽어야 할 수도 있습니다. 이러한 파서는 스트림을 표시하고, 스트림을 지원하는지 여부를 결정하기에 충분한 데이터를 읽고, 그렇지 않은 경우 스트림의 읽기 포인터를 원래 위치로 재설정 할 수 있어야합니다. 입력 스트림이이를 지원하지 않으면이 메소드는 &lt;code&gt;IOException&lt;/code&gt; 으로 실패 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dcdfc22459e4e472cb8f76bd6d2635c854bae0f8" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the specified &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;File&lt;/code&gt; 의 MIDI 파일 형식을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="8367a131e88ac4b66d7a1da0414f7222035a6945" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the specified &lt;code&gt;File&lt;/code&gt;. The &lt;code&gt;File&lt;/code&gt; must point to valid MIDI file data for a file type recognized by the system.</source>
          <target state="translated">지정된 &lt;code&gt;File&lt;/code&gt; 의 MIDI 파일 형식을 가져옵니다 . &lt;code&gt;File&lt;/code&gt; 시스템이 인식 한 파일 타입에 유효한 MIDI 파일 데이터를 나타낼 필요가 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e9c0935f8a1407a86c8ffbf28863c848cfdb0d9" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file type.</source>
          <target state="translated">MIDI 파일 타입을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="621accf0e9130d6eee915a010dd071a6fe56e70a" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI message contained in the event.</source>
          <target state="translated">이벤트에 포함 된 MIDI 메시지를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="50f183b76954dfe5f6b28eaae750ee52a32e3ec4" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI message data.</source>
          <target state="translated">MIDI 메시지 데이터를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="66a72abedfe464b96e307d3d5260b7f2d88de59a" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI message data. The first byte of the returned byte array is the status byte of the message. Any subsequent bytes up to the length of the message are data bytes. The byte array may have a length which is greater than that of the actual message; the total length of the message in bytes is reported by the &lt;a href=&quot;#getLength()&quot;&gt;&lt;code&gt;getLength()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">MIDI 메시지 데이터를 얻습니다. 반환 된 바이트 배열의 첫 번째 바이트는 메시지의 상태 바이트입니다. 메시지 길이까지의 모든 후속 바이트는 데이터 바이트입니다. 바이트 배열은 실제 메시지의 길이보다 더 긴 길이를 가질 수 있습니다. 메시지의 총 길이 (바이트)는 &lt;a href=&quot;#getLength()&quot;&gt; &lt;code&gt;getLength()&lt;/code&gt; &lt;/a&gt; 메소드에 의해보고됩니다 .</target>
        </trans-unit>
        <trans-unit id="d610dc5bc4155dfa5f8f38219b2bf306c3f23b91" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI message data. The first byte of the returned byte array is the status byte of the message. Any subsequent bytes up to the length of the message are data bytes. The byte array may have a length which is greater than that of the actual message; the total length of the message in bytes is reported by the &lt;code&gt;&lt;a href=&quot;midimessage#getLength--&quot;&gt;&lt;code&gt;getLength()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">MIDI 메시지 데이터를 가져옵니다. 반환 된 바이트 배열의 첫 번째 바이트는 메시지의 상태 바이트입니다. 메시지 길이까지의 후속 바이트는 데이터 바이트입니다. 바이트 배열의 길이는 실제 메시지의 길이보다 길 수 있습니다. 메시지의 총 길이 (바이트)는 &lt;code&gt;&lt;a href=&quot;midimessage#getLength--&quot;&gt;&lt;code&gt;getLength()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드에 의해보고됩니다 .</target>
        </trans-unit>
        <trans-unit id="4a571759f900e8720f384f972fd99f945dbb75cd" translate="yes" xml:space="preserve">
          <source>Obtains the access mode type for this VarHandle and a given access mode.</source>
          <target state="translated">이 VarHandle 및 지정된 액세스 모드에 대한 액세스 모드 유형을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="38359d7b5536b885b41758a677aa7db3d6666458" translate="yes" xml:space="preserve">
          <source>Obtains the approximate maximum number of lines of the requested type that can be open simultaneously on the mixer.</source>
          <target state="translated">믹서에서 동시에 열 수있는 요청 된 유형의 대략적인 최대 라인 수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="80189b12b48b1a74aa12afe68097775ca4d3ce5c" translate="yes" xml:space="preserve">
          <source>Obtains the approximate maximum number of lines of the requested type that can be open simultaneously on the mixer. Certain types of mixers do not have a hard bound and may allow opening more lines. Since certain lines are a shared resource, a mixer may not be able to open the maximum number of lines if another process has opened lines of this mixer. The requested type is any line that matches the description in the provided &lt;code&gt;Line.Info&lt;/code&gt; object. For example, if the info object represents a speaker port, and the mixer supports exactly one speaker port, this method should return 1. If the info object represents a source data line and the mixer supports the use of 32 source data lines simultaneously, the return value should be 32. If there is no limit, this function returns &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;.</source>
          <target state="translated">믹서에서 동시에 열 수있는 요청 된 유형의 대략적인 최대 줄 수를 가져옵니다. 특정 유형의 믹서에는 하드 바운드가 없으며 더 많은 라인을 열 수 있습니다. 특정 라인은 공유 리소스이므로 다른 프로세스가이 믹서의 라인을 열면 믹서가 최대 라인 수를 열지 못할 수 있습니다. 요청 된 유형은 제공된 &lt;code&gt;Line.Info&lt;/code&gt; 객체 의 설명과 일치하는 모든 라인입니다 . 예를 들어 정보 객체가 스피커 포트를 나타내고 믹서가 정확히 하나의 스피커 포트를 지원하는 경우이 메서드는 1을 반환해야합니다. 정보 객체가 소스 데이터 라인을 나타내고 믹서가 32 개의 소스 데이터 라인 사용을 동시에 지원하는 경우 반환 값은 32 여야합니다. 제한이 없으면이 함수는 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 를 반환합니다 ..</target>
        </trans-unit>
        <trans-unit id="e585985b7d572e1468c9dc3d49c389be7c9f0636" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the &lt;code&gt;File&lt;/code&gt; provided.</source>
          <target state="translated">얻의 오디오 파일 형식 &lt;code&gt;File&lt;/code&gt; 제공.</target>
        </trans-unit>
        <trans-unit id="b8f174d936c167faf8bf2ac4ea1471dadb9f647a" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the &lt;code&gt;File&lt;/code&gt; provided. The &lt;code&gt;File&lt;/code&gt; must point to valid audio file data.</source>
          <target state="translated">얻의 오디오 파일 형식 &lt;code&gt;File&lt;/code&gt; 제공. &lt;code&gt;File&lt;/code&gt; 유효한 오디오 파일 데이터를 나타낼 필요가 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d7edbaf6999fb9972a40ccbc0ce0100bd3e594a" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the &lt;code&gt;URL&lt;/code&gt; provided.</source>
          <target state="translated">제공된 &lt;code&gt;URL&lt;/code&gt; 의 오디오 파일 형식을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="08c8c9bf7f3afe047ef7381a943ac9816d2085de" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the &lt;code&gt;URL&lt;/code&gt; provided. The &lt;code&gt;URL&lt;/code&gt; must point to valid audio file data.</source>
          <target state="translated">제공된 &lt;code&gt;URL&lt;/code&gt; 의 오디오 파일 형식을 가져옵니다 . &lt;code&gt;URL&lt;/code&gt; 는 유효한 오디오 파일 데이터를 나타낼 필요가 있습니다.</target>
        </trans-unit>
        <trans-unit id="03528fa61d9f89e9e17fad5c52f82d0832bbfd8c" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the URL provided. The URL must point to valid audio file data.</source>
          <target state="translated">제공된 URL의 오디오 파일 형식을 가져옵니다. URL은 유효한 오디오 파일 데이터를 가리켜 야합니다.</target>
        </trans-unit>
        <trans-unit id="a92d22dc24e5c109f09ac7b0094007112ee76326" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the input stream provided.</source>
          <target state="translated">제공된 입력 스트림의 오디오 파일 형식을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ee84bec4575ad5f997f00464f11d01e575d34f50" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the input stream provided. The stream must point to valid audio file data. In general, audio file readers may need to read some data from the stream before determining whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and reset the stream's read pointer to its original position. If the input stream does not support this, this method may fail with an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">제공된 입력 스트림의 오디오 파일 형식을 가져옵니다. 스트림은 유효한 오디오 파일 데이터를 가리켜 야합니다. 일반적으로 오디오 파일 판독기는 지원 여부를 결정하기 전에 스트림에서 일부 데이터를 읽어야 할 수 있습니다. 이러한 파서는 스트림을 표시하고, 스트림을 지원하는지 여부를 결정하기에 충분한 데이터를 읽고, 스트림의 읽기 포인터를 원래 위치로 재설정 할 수 있어야합니다. 입력 스트림이이를 지원하지 않으면이 메서드는 &lt;code&gt;IOException&lt;/code&gt; 과 함께 실패 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bc080b75208a3f48bf6102331df9ade12e067aa2" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the input stream provided. The stream must point to valid audio file data. In general, audio file readers may need to read some data from the stream before determining whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and, if not, reset the stream's read pointer to its original position. If the input stream does not support this, this method may fail with an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">제공된 입력 스트림의 오디오 파일 형식을 가져옵니다. 스트림은 유효한 오디오 파일 데이터를 가리켜 야합니다. 일반적으로 오디오 파일 리더는 스트림을 지원하는지 여부를 결정하기 전에 스트림에서 일부 데이터를 읽어야 할 수도 있습니다. 이러한 파서는 스트림을 표시하고, 스트림을 지원하는지 여부를 결정하기에 충분한 데이터를 읽고, 그렇지 않은 경우 스트림의 읽기 포인터를 원래 위치로 재설정 할 수 있어야합니다. 입력 스트림이이를 지원하지 않으면이 메소드는 &lt;code&gt;IOException&lt;/code&gt; 으로 실패 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7d39c4dc879cd77fd17653b42ff63ab18c77e11d" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the provided input stream.</source>
          <target state="translated">제공된 입력 스트림의 오디오 파일 형식을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d4e9dd8a413bc19a02c9acd73866bdc8f567c90c" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the provided input stream. The stream must point to valid audio file data. The implementation of this method may require multiple parsers to examine the stream to determine whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and reset the stream's read pointer to its original position. If the input stream does not support these operations, this method may fail with an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">제공된 입력 스트림의 오디오 파일 형식을 가져옵니다. 스트림은 유효한 오디오 파일 데이터를 가리켜 야합니다. 이 메서드를 구현하려면 스트림을 지원하는지 여부를 확인하기 위해 여러 파서가 필요할 수 있습니다. 이러한 파서는 스트림을 표시하고, 스트림을 지원하는지 여부를 결정하기에 충분한 데이터를 읽고, 스트림의 읽기 포인터를 원래 위치로 재설정 할 수 있어야합니다. 입력 스트림이 이러한 작업을 지원하지 않는 경우이 메서드는 &lt;code&gt;IOException&lt;/code&gt; 과 함께 실패 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3a86610b6404fc975b9b2a4a1ebe9f193d66a05a" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the provided input stream. The stream must point to valid audio file data. The implementation of this method may require multiple parsers to examine the stream to determine whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and, if not, reset the stream's read pointer to its original position. If the input stream does not support these operations, this method may fail with an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">제공된 입력 스트림의 오디오 파일 형식을 가져옵니다. 스트림은 유효한 오디오 파일 데이터를 가리켜 야합니다. 이 방법을 구현하려면 스트림을 검사하여 스트림을 지원하는지 여부를 결정하기 위해 여러 파서가 필요할 수 있습니다. 이러한 파서는 스트림을 표시하고, 스트림을 지원하는지 여부를 결정하기에 충분한 데이터를 읽고, 그렇지 않은 경우 스트림의 읽기 포인터를 원래 위치로 재설정 할 수 있어야합니다. 입력 스트림이 이러한 작업을 지원하지 않으면이 메서드는 &lt;code&gt;IOException&lt;/code&gt; 과 함께 실패 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7242b76f7d2ef489d7b39d49d97f4e51dec618b7" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the specified &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;File&lt;/code&gt; 의 오디오 파일 형식을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="b09a03fde8dcae0786283a6957b7cc779331ee29" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the specified &lt;code&gt;File&lt;/code&gt;. The &lt;code&gt;File&lt;/code&gt; must point to valid audio file data.</source>
          <target state="translated">지정된 &lt;code&gt;File&lt;/code&gt; 오디오 파일 형식을 가져옵니다 . &lt;code&gt;File&lt;/code&gt; 유효한 오디오 파일 데이터를 나타낼 필요가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c35de6d3af8fa01e44cf1b63a195740ca3a98b3b" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the specified &lt;code&gt;URL&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;URL&lt;/code&gt; 의 오디오 파일 형식을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="112ae938f17a3d9d8f2d0a73236ac71757b8b0c6" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the specified &lt;code&gt;URL&lt;/code&gt;. The &lt;code&gt;URL&lt;/code&gt; must point to valid audio file data.</source>
          <target state="translated">지정된 &lt;code&gt;URL&lt;/code&gt; 의 오디오 파일 형식을 가져옵니다 . &lt;code&gt;URL&lt;/code&gt; 는 유효한 오디오 파일 데이터를 나타낼 필요가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab0557131863b519d585882624812102b56bf051" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the specified URL. The URL must point to valid audio file data.</source>
          <target state="translated">지정된 URL의 오디오 파일 형식을 가져옵니다. URL은 유효한 오디오 파일 데이터를 가리켜 야합니다.</target>
        </trans-unit>
        <trans-unit id="2293c8af0003ed7730ec015d13273f98db30852d" translate="yes" xml:space="preserve">
          <source>Obtains the audio file type, such as &lt;code&gt;WAVE&lt;/code&gt; or &lt;code&gt;AU&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WAVE&lt;/code&gt; 또는 &lt;code&gt;AU&lt;/code&gt; 와 같은 오디오 파일 유형을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="7a7c8855705b1d4247296961e8d80b63bffa5dbe" translate="yes" xml:space="preserve">
          <source>Obtains the audio format of the sound data in this audio input stream.</source>
          <target state="translated">이 오디오 입력 스트림에서 사운드 데이터의 오디오 형식을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="86ffa217f7aef8a3a28cb0298847e3f8b4ed940b" translate="yes" xml:space="preserve">
          <source>Obtains the audio line that is the source of this event.</source>
          <target state="translated">이 이벤트의 소스 인 오디오 라인을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f7fdaede817b413f6721fca2f3660716c58a3981" translate="yes" xml:space="preserve">
          <source>Obtains the channel's keyboard pressure.</source>
          <target state="translated">채널의 키보드 압력을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="40fd35a866fc5ae0ff6bd957d1c1c7d5981dedfa" translate="yes" xml:space="preserve">
          <source>Obtains the channel's keyboard pressure. If the device does not support setting channel pressure, this method always returns 0. Calling &lt;code&gt;setChannelPressure&lt;/code&gt; will have no effect then.</source>
          <target state="translated">채널의 키보드 압력을 얻습니다. 장치가 채널 압력 설정을 지원하지 않으면이 메서드는 항상 0을 반환합니다. &lt;code&gt;setChannelPressure&lt;/code&gt; 호출 은 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f109655c9667b6feff5f250e44a1c93ce7101531" translate="yes" xml:space="preserve">
          <source>Obtains the class of the line that this &lt;code&gt;Line.Info&lt;/code&gt; object describes.</source>
          <target state="translated">이 &lt;code&gt;Line.Info&lt;/code&gt; 객체가 설명 하는 라인의 클래스를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="a95a719d69b1f5bd85d6f861d096ec45e91060ef" translate="yes" xml:space="preserve">
          <source>Obtains the class of the line that this Line.Info object describes.</source>
          <target state="translated">이 Line.Info 객체가 기술하는 라인의 클래스를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="af77cbacb9037345f5d5f8b979da96586aea2ef7" translate="yes" xml:space="preserve">
          <source>Obtains the class used by this sample to represent its data.</source>
          <target state="translated">이 샘플에서 데이터를 나타내는 데 사용하는 클래스를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d8568ac81ecdfa3fc7b0ee5af0f96c78d459e18d" translate="yes" xml:space="preserve">
          <source>Obtains the class used by this sample to represent its data. The object returned by &lt;code&gt;getData&lt;/code&gt; will be of this class. If this &lt;code&gt;SoundbankResource&lt;/code&gt; object does not support direct access to its data, returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 샘플이 데이터를 나타내는 데 사용하는 클래스를 가져옵니다. &lt;code&gt;getData&lt;/code&gt; 에 의해 리턴 된 오브젝트 는이 클래스의 것입니다. 이 &lt;code&gt;SoundbankResource&lt;/code&gt; 객체가 데이터에 대한 직접 액세스를 지원하지 않으면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="90455cad157c4b119c34c9b945be091632e560bb" translate="yes" xml:space="preserve">
          <source>Obtains the common file name extension for this file type.</source>
          <target state="translated">이 파일 타입의 공통 파일명 확장자를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7aad42c15f174dbf010548fb823ed563370590cb" translate="yes" xml:space="preserve">
          <source>Obtains the control's type.</source>
          <target state="translated">컨트롤의 타입을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7df36035dc28e27337cd625969600057fb951e74" translate="yes" xml:space="preserve">
          <source>Obtains the credentials delegated by the context initiator to the context acceptor.</source>
          <target state="translated">컨텍스트 개시자가 컨텍스트 수락 자에게 위임 한 자격 증명을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8dfadb754a58be5052ba32e5aea173e77137f80c" translate="yes" xml:space="preserve">
          <source>Obtains the credentials delegated by the context initiator to the context acceptor. It should be called only on the context acceptor's side, and once the context is fully established. The caller can use the method &lt;a href=&quot;#getCredDelegState()&quot;&gt;&lt;code&gt;getCredDelegState&lt;/code&gt;&lt;/a&gt; to determine if there are any delegated credentials.</source>
          <target state="translated">컨텍스트 개시자가 컨텍스트 수락 자에게 위임 한 자격 증명을 가져옵니다. 컨텍스트 수용자 측에서만 호출되어야하며 컨텍스트가 완전히 설정되면 호출되어야합니다. 호출자는 &lt;a href=&quot;#getCredDelegState()&quot;&gt; &lt;code&gt;getCredDelegState&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 위임 된 자격 증명이 있는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1b96a911e2bdfac9912af61bf69b9ac4211f85f" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;HijrahDate&lt;/code&gt; of the Islamic Umm Al-Qura calendar from the specified clock.</source>
          <target state="translated">지정된 시계에서 이슬람 Umm Al-Qura 달력 의 현재 &lt;code&gt;HijrahDate&lt;/code&gt; 를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="78bf9d52b687f4ebf2c29d2c7ab26ca5c9fe3c4a" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;HijrahDate&lt;/code&gt; of the Islamic Umm Al-Qura calendar in the default time-zone.</source>
          <target state="translated">기본 시간대에서 이슬람 Umm Al-Qura 캘린더 의 현재 &lt;code&gt;HijrahDate&lt;/code&gt; 를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="76c693a2d48e7ba7f7f852b52161202e5b85c0c6" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;HijrahDate&lt;/code&gt; of the Islamic Umm Al-Qura calendar in the specified time-zone.</source>
          <target state="translated">지정된 &lt;code&gt;HijrahDate&lt;/code&gt; 에서 이슬람 Umm Al-Qura 달력 의 현재 HijrahDate 를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="3e41eb5d1002ae828fea820d14b3b57d379ec499" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;JapaneseDate&lt;/code&gt; from the specified clock.</source>
          <target state="translated">지정된 시계에서 현재 &lt;code&gt;JapaneseDate&lt;/code&gt; 를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8855f6e6360df7e0301125152f3db92abae115e8" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;JapaneseDate&lt;/code&gt; from the system clock in the default time-zone.</source>
          <target state="translated">기본 시간대의 시스템 시계에서 현재 &lt;code&gt;JapaneseDate&lt;/code&gt; 를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="5c0eaa4f33e050bda28aedefb785f8c677387db0" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;JapaneseDate&lt;/code&gt; from the system clock in the specified time-zone.</source>
          <target state="translated">지정된 시간대의 시스템 시계에서 현재 &lt;code&gt;JapaneseDate&lt;/code&gt; 를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c1abd117542fe9b3854814db88ddc5efb27737a2" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;MinguoDate&lt;/code&gt; from the specified clock.</source>
          <target state="translated">지정된 시계에서 현재 &lt;code&gt;MinguoDate&lt;/code&gt; 를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="69915d33ab383de7792ed86f3db86022bf814716" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;MinguoDate&lt;/code&gt; from the system clock in the default time-zone.</source>
          <target state="translated">기본 시간대의 시스템 시계에서 현재 &lt;code&gt;MinguoDate&lt;/code&gt; 를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a3769c7be97b5f5961a3b06322519a89cc91b96b" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;MinguoDate&lt;/code&gt; from the system clock in the specified time-zone.</source>
          <target state="translated">지정된 시간대의 시스템 시계로부터 현재 &lt;code&gt;MinguoDate&lt;/code&gt; 를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="44f334fee7d7b15601192061b21534c699708e78" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; from the specified clock.</source>
          <target state="translated">지정된 시계에서 현재 &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; 를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="67756a4b52bb11661a50be18f5e956cb6386dfe9" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; from the system clock in the default time-zone.</source>
          <target state="translated">기본 시간대의 시스템 시계에서 현재 &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; 를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="17c9e32a688fd2943abea0422e6e2c2b66bb40d6" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; from the system clock in the specified time-zone.</source>
          <target state="translated">지정된 시간대의 시스템 시계로부터 현재 &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; 를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ab3be0d5c8fb66a5d56bffbbb0ed936472e9484b" translate="yes" xml:space="preserve">
          <source>Obtains the current ISO local date from the specified clock.</source>
          <target state="translated">지정된 시계에서 현재 ISO 현지 날짜를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8b5254d4f49135376bcf558f8374c5253e8428cf" translate="yes" xml:space="preserve">
          <source>Obtains the current ISO local date from the system clock in the default time-zone.</source>
          <target state="translated">기본 시간대의 시스템 시계에서 현재 ISO 현지 날짜를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="10ed5b0685938d5f0241c85a9490c11f9a3a4955" translate="yes" xml:space="preserve">
          <source>Obtains the current ISO local date from the system clock in the specified time-zone.</source>
          <target state="translated">지정된 시간대의 시스템 시계에서 현재 ISO 현지 날짜를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="488d9ceb431e400c791e5f3bcf4a79291942a327" translate="yes" xml:space="preserve">
          <source>Obtains the current date from the specified clock.</source>
          <target state="translated">지정된 시계에서 현재 날짜를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f6132be69b22df5d9e80f8312f0714643ff26727" translate="yes" xml:space="preserve">
          <source>Obtains the current date from the system clock in the default time-zone.</source>
          <target state="translated">기본 시간대의 시스템 시계에서 현재 날짜를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="21a39824fb9f5e9e2d04dc9028fcf8b8d94c8b80" translate="yes" xml:space="preserve">
          <source>Obtains the current date from the system clock in the specified time-zone.</source>
          <target state="translated">지정된 시간대의 시스템 시계에서 현재 날짜를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a2ef2832a469e078db9e28504b1bb3da8780dd8c" translate="yes" xml:space="preserve">
          <source>Obtains the current date-time from the specified clock.</source>
          <target state="translated">지정된 시계에서 현재 날짜-시간을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="aab0ce9224992418781f087511e1d8e6c25ceaa1" translate="yes" xml:space="preserve">
          <source>Obtains the current date-time from the system clock in the default time-zone.</source>
          <target state="translated">기본 시간대의 시스템 시계에서 현재 날짜-시간을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="297784e178ef897f46c14ea28efa14c74d95efc2" translate="yes" xml:space="preserve">
          <source>Obtains the current date-time from the system clock in the specified time-zone.</source>
          <target state="translated">지정된 시간대의 시스템 시계에서 현재 날짜-시간을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="83a355b3fa1f6a3620d0a264d9755c1ebf48e771" translate="yes" xml:space="preserve">
          <source>Obtains the current format (encoding, sample rate, number of channels, etc.) of the data line's audio data.</source>
          <target state="translated">데이터 라인 오디오 데이터의 현재 형식 (인코딩, 샘플 속도, 채널 수 등)을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="4c6e4c31a583504dcdc8b85f32a68170f7962abc" translate="yes" xml:space="preserve">
          <source>Obtains the current instant from the specified clock.</source>
          <target state="translated">지정된 시계에서 현재 순간을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="43bdb1fc125d77c3c602f03e36bc3cf355432cc8" translate="yes" xml:space="preserve">
          <source>Obtains the current instant from the system clock.</source>
          <target state="translated">시스템 시계에서 현재 순간을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="171af30ff51fbb67648ed675790bdbf3eb809349" translate="yes" xml:space="preserve">
          <source>Obtains the current local date in this chronology from the specified clock.</source>
          <target state="translated">이 시계에서 현재 시간을 지정된 시계에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="da4af5ae568b7c680cc65692d4ae930822a19df1" translate="yes" xml:space="preserve">
          <source>Obtains the current local date in this chronology from the system clock in the default time-zone.</source>
          <target state="translated">기본 시간대의 시스템 시계에서이 연대기의 현재 현지 날짜를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="45c47ffdab0486c1a4dcc82b36aaca3c0b88fec2" translate="yes" xml:space="preserve">
          <source>Obtains the current local date in this chronology from the system clock in the specified time-zone.</source>
          <target state="translated">지정된 시간대의 시스템 시계에서이 연대기의 현재 현지 날짜를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="53e2be5af6ad2803caa6d3657fa6f0d7a31714f1" translate="yes" xml:space="preserve">
          <source>Obtains the current master synchronization mode for this sequencer.</source>
          <target state="translated">이 시퀀서의 현재의 마스터 동기 모드를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e27ad7138ef1955255134d437e705d73a374805a" translate="yes" xml:space="preserve">
          <source>Obtains the current mono/poly mode.</source>
          <target state="translated">현재 독점 / 다중 모드를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="d7ad34c5c110c10c30852a786043281b9d6c24bd" translate="yes" xml:space="preserve">
          <source>Obtains the current mono/poly mode. Synthesizers that do not allow changing mono/poly mode will always return the same value, regardless of calls to &lt;code&gt;setMono&lt;/code&gt;.</source>
          <target state="translated">현재 모노 / 폴리 모드를 얻습니다. 모노 / 폴리 모드 변경을 허용하지 않는 신시사이저는 &lt;code&gt;setMono&lt;/code&gt; 호출에 관계없이 항상 동일한 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="486a6a82b4b83d60bdf798234ae14024c6fe7fa4" translate="yes" xml:space="preserve">
          <source>Obtains the current month-day from the specified clock.</source>
          <target state="translated">지정된 시계에서 현재 월-일을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="88b7aa16527b925eb4e8f711e0dad7b9dd49052d" translate="yes" xml:space="preserve">
          <source>Obtains the current month-day from the system clock in the default time-zone.</source>
          <target state="translated">기본 시간대의 시스템 시계에서 현재 월-일을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="135c2c167c074d43bcd296c0c58cfc2bf9c9db62" translate="yes" xml:space="preserve">
          <source>Obtains the current month-day from the system clock in the specified time-zone.</source>
          <target state="translated">지정된 시간대의 시스템 시계에서 현재 월-일을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="5bab2e20ec013d9ecf04a062d03a56ffd903f148" translate="yes" xml:space="preserve">
          <source>Obtains the current mute state for a track.</source>
          <target state="translated">트랙의 현재 음소거 상태를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="70d9b84bfdd8a4ac983dff67358e4f8cb3c239d8" translate="yes" xml:space="preserve">
          <source>Obtains the current mute state for a track. The default mute state for all tracks which have not been muted is false. In any case where the specified track has not been muted, this method should return false. This applies if the sequencer does not support muting of tracks, and if the specified track index is not valid.</source>
          <target state="translated">트랙의 현재 음소거 상태를 가져옵니다. 음소거되지 않은 모든 트랙의 기본 음소거 상태는 false입니다. 지정된 트랙이 뮤트되지 않은 경우이 메소드는 false를 리턴해야합니다. 시퀀서가 트랙의 뮤팅을 지원하지 않거나 지정된 트랙 인덱스가 유효하지 않은 경우에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="e3ede6a3f3d871347ac32cdc95a84b8f8e7bf91a" translate="yes" xml:space="preserve">
          <source>Obtains the current mute state for this channel.</source>
          <target state="translated">이 채널의 현재 음소거 상태를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="be9d506f2cb66aeefb283672b755ae5ba2f26b3a" translate="yes" xml:space="preserve">
          <source>Obtains the current mute state for this channel. If the underlying synthesizer does not support muting this channel, this method always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 채널의 현재 뮤트 상태를 가져옵니다. 기본 신디사이저가이 채널 뮤트를 지원하지 않는 경우이 메소드는 항상 &lt;code&gt;false&lt;/code&gt; 를 반환합니다. .</target>
        </trans-unit>
        <trans-unit id="cd83c9c43a99802192e03fd77ca7adf8e37e3225" translate="yes" xml:space="preserve">
          <source>Obtains the current omni mode.</source>
          <target state="translated">현재 옴니 모드를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="61375067e9c196158b7ff0c061c13fbc2550ca9c" translate="yes" xml:space="preserve">
          <source>Obtains the current omni mode. Synthesizers that do not allow changing the omni mode will always return the same value, regardless of calls to &lt;code&gt;setOmni&lt;/code&gt;.</source>
          <target state="translated">현재 옴니 모드를 가져옵니다. 옴니 모드 변경을 허용하지 않는 신시사이저는 &lt;code&gt;setOmni&lt;/code&gt; 호출에 관계없이 항상 동일한 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9a5c44a696fe4b10006c1a4ff3e18c82fe0ff5e0" translate="yes" xml:space="preserve">
          <source>Obtains the current position in the audio data, in microseconds.</source>
          <target state="translated">마이크로 초 단위로 오디오 데이터의 현재 위치를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1098cfd90e4d082843fc5695f1c7f4f4f904bafe" translate="yes" xml:space="preserve">
          <source>Obtains the current position in the audio data, in microseconds. The microsecond position measures the time corresponding to the number of sample frames captured by, or rendered from, the line since it was opened. The level of precision is not guaranteed. For example, an implementation might calculate the microsecond position from the current frame position and the audio sample frame rate. The precision in microseconds would then be limited to the number of microseconds per sample frame.</source>
          <target state="translated">오디오 데이터의 현재 위치를 마이크로 초 단위로 가져옵니다. 마이크로 초 위치는 라인이 열린 이후 캡처되거나 캡처 된 샘플 프레임 수에 해당하는 시간을 측정합니다. 정밀도는 보장되지 않습니다. 예를 들어, 구현에서는 현재 프레임 위치와 오디오 샘플 프레임 속도에서 마이크로 초 위치를 계산할 수 있습니다. 마이크로 초 단위의 정밀도는 샘플 프레임 당 마이크로 초 수로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="15adb48ca8aaa8a9f679bd0ae4bcf2d8581cb6f6" translate="yes" xml:space="preserve">
          <source>Obtains the current position in the audio data, in sample frames.</source>
          <target state="translated">샘플 프레임에서 오디오 데이터의 현재 위치를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b0a989c6d32ed5567daa0b704b2b6568685b43a5" translate="yes" xml:space="preserve">
          <source>Obtains the current position in the audio data, in sample frames. The frame position measures the number of sample frames captured by, or rendered from, the line since it was opened.</source>
          <target state="translated">샘플 데이터에서 오디오 데이터의 현재 위치를 가져옵니다. 프레임 위치는 라인이 열린 이후 캡처되거나 렌더링 된 샘플 프레임 수를 측정합니다.</target>
        </trans-unit>
        <trans-unit id="b02f96a543727353fc4a91c5d8791ffa2eef4990" translate="yes" xml:space="preserve">
          <source>Obtains the current position in the audio data, in sample frames. The frame position measures the number of sample frames captured by, or rendered from, the line since it was opened. This return value will wrap around after 2^31 frames. It is recommended to use &lt;code&gt;getLongFramePosition&lt;/code&gt; instead.</source>
          <target state="translated">샘플 데이터에서 오디오 데이터의 현재 위치를 가져옵니다. 프레임 위치는 라인이 열린 이후 캡처되거나 렌더링 된 샘플 프레임 수를 측정합니다. 이 반환 값은 2 ^ 31 프레임 후에 줄 바꿈됩니다. 대신 &lt;code&gt;getLongFramePosition&lt;/code&gt; 을 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="c04dc5cbec1a1e426605939ea5969417bfb502d8" translate="yes" xml:space="preserve">
          <source>Obtains the current position in the sequence, expressed in MIDI ticks.</source>
          <target state="translated">MIDI 틱으로 표현 된 시퀀스의 현재 위치를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="cbf3d3297152ce2afbffe3086e1a562424d7bc5b" translate="yes" xml:space="preserve">
          <source>Obtains the current position in the sequence, expressed in MIDI ticks. (The duration of a tick in seconds is determined both by the tempo and by the timing resolution stored in the &lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">MIDI 틱으로 표현 된 시퀀스의 현재 위치를 가져옵니다. (초 단위의 틱 지속 시간은 템포와 &lt;a href=&quot;sequence&quot;&gt; &lt;code&gt;Sequence&lt;/code&gt; &lt;/a&gt; 저장된 타이밍 해상도에 의해 결정됩니다 .)</target>
        </trans-unit>
        <trans-unit id="a35a5b40efcc43bd1ee9af5052a060c69f48ba7f" translate="yes" xml:space="preserve">
          <source>Obtains the current position in the sequence, expressed in MIDI ticks. (The duration of a tick in seconds is determined both by the tempo and by the timing resolution stored in the &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">MIDI 틱으로 표현 된 시퀀스의 현재 위치를 가져옵니다. (초 단위의 틱 지속 시간은 템포와 &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 저장된 타이밍 해상도에 의해 결정됩니다 .)</target>
        </trans-unit>
        <trans-unit id="2d7cdb5b336b10edcb46166fc53ec180648dd25f" translate="yes" xml:space="preserve">
          <source>Obtains the current position in the sequence, expressed in microseconds.</source>
          <target state="translated">시퀀스에서 현재 위치를 마이크로 초 단위로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d06e159f5bc977ff9aadbe4d8c251327a8a6457b" translate="yes" xml:space="preserve">
          <source>Obtains the current program number for this channel.</source>
          <target state="translated">이 채널의 현재 프로그램 번호를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="80cd9b712513dee66baa6c616fd194146c25fc42" translate="yes" xml:space="preserve">
          <source>Obtains the current receiver to which this transmitter will deliver MIDI messages.</source>
          <target state="translated">이 송신기가 MIDI 메시지를 전달할 현재 수신기를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="14f1f2b12005c9da865ddfc19d1d6b61f892a183" translate="yes" xml:space="preserve">
          <source>Obtains the current slave synchronization mode for this sequencer.</source>
          <target state="translated">이 시퀀서의 현재의 슬레이브 동기 모드를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e68006092c5ad8e0fcf212c19ce0c7093ac03550" translate="yes" xml:space="preserve">
          <source>Obtains the current solo state for a track.</source>
          <target state="translated">트랙의 현재 솔로 상태를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="549ae106a575905027c46178ff70d89b74d4ca9a" translate="yes" xml:space="preserve">
          <source>Obtains the current solo state for a track. The default mute state for all tracks which have not been solo'd is false. In any case where the specified track has not been solo'd, this method should return false. This applies if the sequencer does not support soloing of tracks, and if the specified track index is not valid.</source>
          <target state="translated">트랙의 현재 솔로 상태를 가져옵니다. 솔로되지 않은 모든 트랙의 기본 음소거 상태는 false입니다. 지정된 트랙이 솔로되지 않은 경우이 메서드는 false를 반환해야합니다. 시퀀서가 트랙 솔로를 지원하지 않고 지정된 트랙 인덱스가 유효하지 않은 경우에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="e69b49c24e34939f360fcbc1f729bd71a3e404a7" translate="yes" xml:space="preserve">
          <source>Obtains the current solo state for this channel.</source>
          <target state="translated">이 채널의 현재 솔로 상태를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="48a175775a8c8becb6c72f9e5a6f5911cb112ff3" translate="yes" xml:space="preserve">
          <source>Obtains the current solo state for this channel. If the underlying synthesizer does not support solo on this channel, this method always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 채널의 현재 솔로 상태를 가져옵니다. 기본 신디사이저가이 채널에서 솔로를 지원하지 않으면이 메소드는 항상 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="500fdaefdb34a8a03abefe35543f8636bf78c5af" translate="yes" xml:space="preserve">
          <source>Obtains the current status of the voices produced by this synthesizer.</source>
          <target state="translated">이 신디사이저에서 생성 된 음색의 현재 상태를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e73f5743a8a99ab4c563bba88cdcc111a3604932" translate="yes" xml:space="preserve">
          <source>Obtains the current status of the voices produced by this synthesizer. If this class of &lt;code&gt;Synthesizer&lt;/code&gt; does not provide voice information, the returned array will always be of length 0. Otherwise, its length is always equal to the total number of voices, as returned by &lt;code&gt;getMaxPolyphony()&lt;/code&gt;. (See the &lt;code&gt;VoiceStatus&lt;/code&gt; class description for an explanation of synthesizer voices.)</source>
          <target state="translated">이 신디사이저가 생성 한 음색의 현재 상태를 가져옵니다. 이 &lt;code&gt;Synthesizer&lt;/code&gt; 클래스가 음성 정보를 제공하지 않는 경우, 돌려 주어지는 배열의 길이는 항상 0입니다. 그렇지 않은 경우, 길이는 항상 &lt;code&gt;getMaxPolyphony()&lt;/code&gt; 의해 돌려 주어지는 총 음성 수와 같습니다 . ( &lt;code&gt;VoiceStatus&lt;/code&gt; 참조신디사이저 음색에 대한 설명은 클래스 설명을 .</target>
        </trans-unit>
        <trans-unit id="1103bbddd6d851f670c9fbbb769d54bc4f34c3de" translate="yes" xml:space="preserve">
          <source>Obtains the current tempo, expressed in beats per minute.</source>
          <target state="translated">분당 비트로 표시되는 현재 템포를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8350c4369dd025fdbdbf84dff10bf5b091e16d91" translate="yes" xml:space="preserve">
          <source>Obtains the current tempo, expressed in beats per minute. The actual tempo of playback is the product of the returned value and the tempo factor.</source>
          <target state="translated">분당 비트로 표현 된 현재 템포를 얻습니다. 실제 재생 템포는 반환 값과 템포 팩터의 곱입니다.</target>
        </trans-unit>
        <trans-unit id="3b71ef082885a372ebcdcf54f92e189bb917f528" translate="yes" xml:space="preserve">
          <source>Obtains the current tempo, expressed in microseconds per quarter note.</source>
          <target state="translated">4 분 음표 당 마이크로 초로 표시되는 현재 템포를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="df45ec9deeff29c356876cab2dad7476087b2ac9" translate="yes" xml:space="preserve">
          <source>Obtains the current tempo, expressed in microseconds per quarter note. The actual tempo of playback is the product of the returned value and the tempo factor.</source>
          <target state="translated">1/4 음당 마이크로 초로 표현 된 현재 템포를 얻습니다. 실제 재생 템포는 반환 값과 템포 팩터의 곱입니다.</target>
        </trans-unit>
        <trans-unit id="3846926824960ca49910cc2e541647c069378dd1" translate="yes" xml:space="preserve">
          <source>Obtains the current time from the specified clock.</source>
          <target state="translated">지정된 시계에서 현재 시간을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1b1a87c8528813b61ce5d892d209b12088ab0d84" translate="yes" xml:space="preserve">
          <source>Obtains the current time from the system clock in the default time-zone.</source>
          <target state="translated">기본 시간대의 시스템 시계에서 현재 시간을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="cb14438c07ddc179c1ef8ddf98aa40859b74aa37" translate="yes" xml:space="preserve">
          <source>Obtains the current time from the system clock in the specified time-zone.</source>
          <target state="translated">지정된 시간대의 시스템 시계에서 현재 시간을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="999c28905250b0e6674fed21668a0d691a301c2b" translate="yes" xml:space="preserve">
          <source>Obtains the current time-stamp of the device, in microseconds.</source>
          <target state="translated">장치의 현재 타임 스탬프 (마이크로 초)를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="399c8bd958eef647e720ce5358e53777088ea088" translate="yes" xml:space="preserve">
          <source>Obtains the current time-stamp of the device, in microseconds. If a device supports time-stamps, it should start counting at 0 when the device is opened and continue incrementing its time-stamp in microseconds until the device is closed. If it does not support time-stamps, it should always return -1.</source>
          <target state="translated">장치의 현재 타임 스탬프를 마이크로 초 단위로 가져옵니다. 장치가 타임 스탬프를 지원하는 경우 장치가 열릴 때 0부터 카운트를 시작하고 장치가 닫힐 때까지 타임 스탬프를 마이크로 초 단위로 계속 증가시켜야합니다. 타임 스탬프를 지원하지 않으면 항상 -1을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="269acf3f489836bad1865ce6baea78b8ebd7155b" translate="yes" xml:space="preserve">
          <source>Obtains the current transaction timeout value set for this XAResource instance.</source>
          <target state="translated">이 XAResource 인스턴스에 대해 설정된 현재 트랜잭션 제한 시간 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d78b2f00ef8a81097f483a44e42a3ecea93751e1" translate="yes" xml:space="preserve">
          <source>Obtains the current transaction timeout value set for this XAResource instance. If &lt;code&gt;XAResource.setTransactionTimeout&lt;/code&gt; was not used prior to invoking this method, the return value is the default timeout set for the resource manager; otherwise, the value used in the previous &lt;code&gt;setTransactionTimeout&lt;/code&gt; call is returned.</source>
          <target state="translated">이 XAResource 인스턴스에 대해 설정된 현재 트랜잭션 제한 시간 값을 가져옵니다. 이 메서드를 호출하기 전에 &lt;code&gt;XAResource.setTransactionTimeout&lt;/code&gt; 을 사용하지 않은 경우 반환 값은 리소스 관리자에 대해 설정된 기본 제한 시간입니다. 그렇지 않으면 이전 &lt;code&gt;setTransactionTimeout&lt;/code&gt; 호출에 사용 된 값 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="03b665ca77ffb7f5f7ccea977f9e4855a4aad24b" translate="yes" xml:space="preserve">
          <source>Obtains the current value of the specified controller.</source>
          <target state="translated">지정된 컨트롤러의 현재 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="9ca8e106a508a99b02615d22558aae17c600318b" translate="yes" xml:space="preserve">
          <source>Obtains the current value of the specified controller. The return value is represented with 7 bits. For 14-bit controllers, the MSB and LSB controller value needs to be obtained separately. For example, the 14-bit value of the volume controller can be calculated by multiplying the value of controller 7 (0x07, channel volume MSB) with 128 and adding the value of controller 39 (0x27, channel volume LSB).</source>
          <target state="translated">지정된 컨트롤러의 현재 값을 가져옵니다. 반환 값은 7 비트로 표시됩니다. 14 비트 컨트롤러의 경우 MSB 및 LSB 컨트롤러 값을 별도로 가져와야합니다. 예를 들어, 볼륨 컨트롤러의 14 비트 값은 컨트롤러 7 (0x07, 채널 볼륨 MSB)의 값에 128을 곱하고 컨트롤러 39 (0x27, 채널 볼륨 LSB)의 값을 더하여 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b5e170791c8a914160859ac21511c06d0deb434" translate="yes" xml:space="preserve">
          <source>Obtains the current value of the specified controller. The return value is represented with 7 bits. For 14-bit controllers, the MSB and LSB controller value needs to be obtained separately. For example, the 14-bit value of the volume controller can be calculated by multiplying the value of controller 7 (0x07, channel volume MSB) with 128 and adding the value of controller 39 (0x27, channel volume LSB). If the device does not support setting a specific controller, this method returns 0 for that controller. Calling &lt;code&gt;controlChange&lt;/code&gt; will have no effect then.</source>
          <target state="translated">지정된 컨트롤러의 현재 값을 가져옵니다. 리턴 값은 7 비트로 표시됩니다. 14 비트 컨트롤러의 경우 MSB 및 LSB 컨트롤러 값을 별도로 가져와야합니다. 예를 들어, 볼륨 컨트롤러의 14 비트 값은 컨트롤러 7 (0x07, 채널 볼륨 MSB)의 값에 128을 곱하고 컨트롤러 39의 값 (0x27, 채널 볼륨 LSB)을 더하여 계산할 수 있습니다. 장치가 특정 컨트롤러 설정을 지원하지 않으면이 메서드는 해당 컨트롤러에 대해 0을 반환합니다. &lt;code&gt;controlChange&lt;/code&gt; 호출 를 해도 아무런 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="1047269da4087ee1b98ff899ae5b1511e2237808" translate="yes" xml:space="preserve">
          <source>Obtains the current volume level for the line.</source>
          <target state="translated">라인의 현재 볼륨 레벨을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="8cebf78555fc0be8c145ae7fb9453cfc6e021940" translate="yes" xml:space="preserve">
          <source>Obtains the current volume level for the line. This level is a measure of the signal's current amplitude, and should not be confused with the current setting of a gain control. The range is from 0.0 (silence) to 1.0 (maximum possible amplitude for the sound waveform). The units measure linear amplitude, not decibels.</source>
          <target state="translated">회선의 현재 볼륨 레벨을 가져옵니다. 이 레벨은 신호의 전류 진폭을 측정 한 것으로, 게인 컨트롤의 현재 설정과 혼동해서는 안됩니다. 범위는 0.0 (사일런스)에서 1.0 (사운드 파형에 가능한 최대 진폭)입니다. 단위는 데시벨이 아닌 선형 진폭을 측정합니다.</target>
        </trans-unit>
        <trans-unit id="e210e6166302000fbbf4bf949de3e5338fee302f" translate="yes" xml:space="preserve">
          <source>Obtains the current year from the specified clock.</source>
          <target state="translated">지정된 시계에서 현재 연도를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="eccbbb4ca6fc761f042804ff5dc68f9c9f7b8663" translate="yes" xml:space="preserve">
          <source>Obtains the current year from the system clock in the default time-zone.</source>
          <target state="translated">기본 시간대의 시스템 시계에서 현재 연도를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="4abdc6b07fdad0d26b201bbcbb13c7b142b3010e" translate="yes" xml:space="preserve">
          <source>Obtains the current year from the system clock in the specified time-zone.</source>
          <target state="translated">지정된 시간대의 시스템 시계로부터 현재 연도를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="dab7a35340a71d871b24257e4db2d61197dd0786" translate="yes" xml:space="preserve">
          <source>Obtains the current year-month from the specified clock.</source>
          <target state="translated">지정된 시계에서 현재 년 월을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a5ee1d6ec52c1add5ecfc1e40c2f6421c5e12af0" translate="yes" xml:space="preserve">
          <source>Obtains the current year-month from the system clock in the default time-zone.</source>
          <target state="translated">기본 시간대의 시스템 시계에서 현재 연도를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a8e5483df25cdf51ef80bb2257dfc900a470fcfa" translate="yes" xml:space="preserve">
          <source>Obtains the current year-month from the system clock in the specified time-zone.</source>
          <target state="translated">지정된 시간대의 시스템 시계에서 현재 연도를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="3cf5627fbd98db6d20bfcd69d116b9d0e996b44f" translate="yes" xml:space="preserve">
          <source>Obtains the decay time, which is the amount of time over which the late reflections attenuate to effective zero.</source>
          <target state="translated">후기 반사가 유효 0으로 감쇠되는 시간 인 감쇠 시간을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="01ca1e75f8a1b4f3e85a22969cfbcd8dc499801a" translate="yes" xml:space="preserve">
          <source>Obtains the decay time, which is the amount of time over which the late reflections attenuate to effective zero. The effective zero value is implementation-dependent.</source>
          <target state="translated">감쇠 시간, 즉 늦은 반사가 유효 영점까지 감쇠하는 시간입니다. 유효 제로 값은 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="c8e58e567f2e364053c3802bbd9b5262f651057e" translate="yes" xml:space="preserve">
          <source>Obtains the default &lt;code&gt;Sequencer&lt;/code&gt;, connected to a default device.</source>
          <target state="translated">기본 장치에 연결된 기본 &lt;code&gt;Sequencer&lt;/code&gt; 를 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="d174f8b675017f776e822c3d661ced9d1dd6f430" translate="yes" xml:space="preserve">
          <source>Obtains the default &lt;code&gt;Sequencer&lt;/code&gt;, connected to a default device. The returned &lt;code&gt;Sequencer&lt;/code&gt; instance is connected to the default &lt;code&gt;Synthesizer&lt;/code&gt;, as returned by &lt;a href=&quot;#getSynthesizer()&quot;&gt;&lt;code&gt;getSynthesizer()&lt;/code&gt;&lt;/a&gt;. If there is no &lt;code&gt;Synthesizer&lt;/code&gt; available, or the default &lt;code&gt;Synthesizer&lt;/code&gt; cannot be opened, the &lt;code&gt;sequencer&lt;/code&gt; is connected to the default &lt;code&gt;Receiver&lt;/code&gt;, as returned by &lt;a href=&quot;#getReceiver()&quot;&gt;&lt;code&gt;getReceiver()&lt;/code&gt;&lt;/a&gt;. The connection is made by retrieving a &lt;code&gt;Transmitter&lt;/code&gt; instance from the &lt;code&gt;Sequencer&lt;/code&gt; and setting its &lt;code&gt;Receiver&lt;/code&gt;. Closing and re-opening the sequencer will restore the connection to the default device.</source>
          <target state="translated">기본 장치에 연결된 기본 &lt;code&gt;Sequencer&lt;/code&gt; 를 가져 옵니다 . 반환 된 &lt;code&gt;Sequencer&lt;/code&gt; 인스턴스는 &lt;a href=&quot;#getSynthesizer()&quot;&gt; &lt;code&gt;getSynthesizer()&lt;/code&gt; &lt;/a&gt; 의해 반환 된대로 기본 &lt;code&gt;Synthesizer&lt;/code&gt; 에 연결됩니다 . 사용 가능한 &lt;code&gt;Synthesizer&lt;/code&gt; 가 없거나 기본 &lt;code&gt;Synthesizer&lt;/code&gt; 를 열 수없는 경우 &lt;code&gt;sequencer&lt;/code&gt; 는 &lt;a href=&quot;#getReceiver()&quot;&gt; &lt;code&gt;getReceiver()&lt;/code&gt; &lt;/a&gt; 반환 한대로 기본 &lt;code&gt;Receiver&lt;/code&gt; 에 연결됩니다 . 연결은 &lt;code&gt;Sequencer&lt;/code&gt; 에서 &lt;code&gt;Transmitter&lt;/code&gt; 인스턴스를 검색 하고 &lt;code&gt;Receiver&lt;/code&gt; 를 설정하여 이루어 집니다. 시퀀서를 닫았다가 다시 열면 기본 장치에 대한 연결이 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="d2407b137a443cbe57bf1ec586e8cff94de27973" translate="yes" xml:space="preserve">
          <source>Obtains the default &lt;code&gt;Sequencer&lt;/code&gt;, connected to a default device. The returned &lt;code&gt;Sequencer&lt;/code&gt; instance is connected to the default &lt;code&gt;Synthesizer&lt;/code&gt;, as returned by &lt;a href=&quot;midisystem#getSynthesizer--&quot;&gt;&lt;code&gt;getSynthesizer()&lt;/code&gt;&lt;/a&gt;. If there is no &lt;code&gt;Synthesizer&lt;/code&gt; available, or the default &lt;code&gt;Synthesizer&lt;/code&gt; cannot be opened, the &lt;code&gt;sequencer&lt;/code&gt; is connected to the default &lt;code&gt;Receiver&lt;/code&gt;, as returned by &lt;a href=&quot;midisystem#getReceiver--&quot;&gt;&lt;code&gt;getReceiver()&lt;/code&gt;&lt;/a&gt;. The connection is made by retrieving a &lt;code&gt;Transmitter&lt;/code&gt; instance from the &lt;code&gt;Sequencer&lt;/code&gt; and setting its &lt;code&gt;Receiver&lt;/code&gt;. Closing and re-opening the sequencer will restore the connection to the default device.</source>
          <target state="translated">기본 장치에 연결된 기본 &lt;code&gt;Sequencer&lt;/code&gt; 옵니다 . 리턴 된 &lt;code&gt;Sequencer&lt;/code&gt; 인스턴스는 &lt;a href=&quot;midisystem#getSynthesizer--&quot;&gt; &lt;code&gt;getSynthesizer()&lt;/code&gt; &lt;/a&gt; 의해 리턴 된대로 기본 &lt;code&gt;Synthesizer&lt;/code&gt; 에 연결됩니다 . &lt;code&gt;Synthesizer&lt;/code&gt; 가없는 경우사용 가능한 기본 &lt;code&gt;Synthesizer&lt;/code&gt; 를 열 수없는 경우 &lt;a href=&quot;midisystem#getReceiver--&quot;&gt; &lt;code&gt;getReceiver()&lt;/code&gt; &lt;/a&gt; 리턴 한대로 &lt;code&gt;sequencer&lt;/code&gt; 가 기본 &lt;code&gt;Receiver&lt;/code&gt; 에 연결됩니다 . &lt;code&gt;Sequencer&lt;/code&gt; 에서 &lt;code&gt;Transmitter&lt;/code&gt; 인스턴스를 검색 하고 &lt;code&gt;Receiver&lt;/code&gt; 설정하여 연결합니다. 합니다. 시퀀서를 닫았다가 다시 열면 기본 장치에 대한 연결이 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="87e6bf759b7a21c9cc03d614e4a49dd0f19d1dad" translate="yes" xml:space="preserve">
          <source>Obtains the default &lt;code&gt;Sequencer&lt;/code&gt;, optionally connected to a default device.</source>
          <target state="translated">디폴트 &lt;code&gt;Sequencer&lt;/code&gt; 취득합니다선택적으로 기본 장치에 연결된 .</target>
        </trans-unit>
        <trans-unit id="b3eb5ba1c2cf2f630c479baa784ef4d8927426ec" translate="yes" xml:space="preserve">
          <source>Obtains the default KeyManagerFactory algorithm name.</source>
          <target state="translated">기본 KeyManagerFactory 알고리즘 이름을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="87bd032bf5bd7b04dc7b56393befae448a12e718" translate="yes" xml:space="preserve">
          <source>Obtains the default TrustManagerFactory algorithm name.</source>
          <target state="translated">기본 TrustManagerFactory 알고리즘 이름을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="42ed01df4b1d3bb04c9b6e7bc200ac83162bdb79" translate="yes" xml:space="preserve">
          <source>Obtains the default soundbank for the synthesizer, if one exists.</source>
          <target state="translated">신디사이저의 기본 사운드 뱅크가있는 경우 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="83329e21c8f5c4b6fa8e63753fcd01e91b12462e" translate="yes" xml:space="preserve">
          <source>Obtains the default soundbank for the synthesizer, if one exists. (Some synthesizers provide a default or built-in soundbank.) If a synthesizer doesn't have a default soundbank, instruments must be loaded explicitly from an external soundbank.</source>
          <target state="translated">신디사이저의 기본 사운드 뱅크가있는 경우이를 가져옵니다. (일부 신디사이저는 기본 또는 내장 사운드 뱅크를 제공합니다.) 신디사이저에 기본 사운드 뱅크가 없으면 악기를 외부 사운드 뱅크에서 명시 적으로로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="50a0dc770fb0c5bc44a8d9f42ab0e241826ce7ef" translate="yes" xml:space="preserve">
          <source>Obtains the default synthesizer.</source>
          <target state="translated">디폴트 신시사이저를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ebf94b55c71efdc3b853599fd997e7a8609c206c" translate="yes" xml:space="preserve">
          <source>Obtains the description of the device.</source>
          <target state="translated">장치의 설명을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="5f826cf61b9e60ff8f81d650cb10624d953dce60" translate="yes" xml:space="preserve">
          <source>Obtains the description of the mixer.</source>
          <target state="translated">믹서의 설명을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e424e2adfef4bd1cd8a228a69b871f0d2029bb47" translate="yes" xml:space="preserve">
          <source>Obtains the duration of this sequence, expressed in MIDI ticks.</source>
          <target state="translated">MIDI 틱으로 표현 된이 시퀀스의 지속 시간을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="42ba22f4c149dd2d5797548ecf5da60515eeba00" translate="yes" xml:space="preserve">
          <source>Obtains the duration of this sequence, expressed in microseconds.</source>
          <target state="translated">이 시퀀스의 지속 시간을 마이크로 초로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="f519e912b2553a16ba4b07f943532e9ced4a24ed" translate="yes" xml:space="preserve">
          <source>Obtains the encodings that the system can obtain from an audio input stream with the specified encoding using the set of installed format converters.</source>
          <target state="translated">설치된 형식 변환기 세트를 사용하여 시스템이 지정된 인코딩으로 오디오 입력 스트림에서 얻을 수있는 인코딩을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="2d426c9ec900d8175eded36e36d014478d27627f" translate="yes" xml:space="preserve">
          <source>Obtains the encodings that the system can obtain from an audio input stream with the specified format using the set of installed format converters.</source>
          <target state="translated">설치된 형식 변환기 세트를 사용하여 시스템이 지정된 형식의 오디오 입력 스트림에서 얻을 수있는 인코딩을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="feabed2f93d9d650ad53cd6a68dad72c8d5e0e60" translate="yes" xml:space="preserve">
          <source>Obtains the end position of the loop, in MIDI ticks.</source>
          <target state="translated">MIDI 틱으로 루프의 끝 위치를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7ebda0545c4ef87d53d6862245c8d0c4b742b40f" translate="yes" xml:space="preserve">
          <source>Obtains the event at the specified index.</source>
          <target state="translated">지정된 인덱스에서 이벤트를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="26f37b99e7bea1218177e589221bf3eb19cce439" translate="yes" xml:space="preserve">
          <source>Obtains the event's type.</source>
          <target state="translated">이벤트 타입을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="54a1bc8688bb3f55a9fa49b2dcaac72880750e33" translate="yes" xml:space="preserve">
          <source>Obtains the file types for which file writing support is provided by the system.</source>
          <target state="translated">시스템에서 파일 쓰기 지원을 제공하는 파일 유형을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e8a039e5ebfe19f945f67cf357a03db1589b1b75" translate="yes" xml:space="preserve">
          <source>Obtains the file types for which file writing support is provided by this audio file writer.</source>
          <target state="translated">이 오디오 파일 기록기에 의해 파일 쓰기 지원이 제공되는 파일 형식을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="3cd226d3bc3599eb7bab13e1191e9a8e973d8305" translate="yes" xml:space="preserve">
          <source>Obtains the file types that the system can write from the audio input stream specified.</source>
          <target state="translated">지정된 오디오 입력 스트림에서 시스템이 쓸 수있는 파일 유형을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="bc63762a1d26c2e63b8c0c8bb77b7e1df109cd78" translate="yes" xml:space="preserve">
          <source>Obtains the file types that this audio file writer can write from the audio input stream specified.</source>
          <target state="translated">이 오디오 파일 기록기가 지정된 오디오 입력 스트림에서 쓸 수있는 파일 형식을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="01d6475cb4949a339cdfa7620ddfbfaf9b060b9a" translate="yes" xml:space="preserve">
          <source>Obtains the file types that this file writer can write from the sequence specified.</source>
          <target state="translated">이 파일 라이터가 지정된 순서에서 쓸 수있는 파일 형식을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="621434a674b58fdadd9d600ec74140101c46102b" translate="yes" xml:space="preserve">
          <source>Obtains the first data byte in the message.</source>
          <target state="translated">메시지의 첫 번째 데이터 바이트를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="1b7bbd6154ce63d38df6e780b5085deb9b8c754c" translate="yes" xml:space="preserve">
          <source>Obtains the format of the audio data contained in the audio file.</source>
          <target state="translated">오디오 파일에 포함 된 오디오 데이터의 형식을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="62e21b8d8ab670e8f9d936d98c5cdbaf2d417246" translate="yes" xml:space="preserve">
          <source>Obtains the formats that have a particular encoding and that the system can obtain from a stream of the specified format using the set of installed format converters.</source>
          <target state="translated">특정 인코딩이 있고 설치된 형식 변환기 세트를 사용하여 시스템이 지정된 형식의 스트림에서 얻을 수있는 형식을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6bb4e650a5e63f48afd41467fb4c6367d8fffa0c" translate="yes" xml:space="preserve">
          <source>Obtains the frame rate in frames per second.</source>
          <target state="translated">프레임 속도 (초당 프레임 수)를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6615f1b1b5bdd4b158feb7b03e464feab5a45ef5" translate="yes" xml:space="preserve">
          <source>Obtains the frame rate in frames per second. When this &lt;code&gt;AudioFormat&lt;/code&gt; is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats()&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a frame rate of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any frame rate is acceptable. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; is also returned when the frame rate is not defined for this audio format.</source>
          <target state="translated">프레임 속도 (초당 프레임 수)를 가져옵니다. 이 &lt;code&gt;AudioFormat&lt;/code&gt; 이 쿼리 (예 : &lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; &lt;/a&gt; ) 또는 기능 (예 : &lt;a href=&quot;dataline.info#getFormats()&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; &lt;/a&gt; )에 사용되는 경우 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 의 프레임 속도는 모든 프레임 속도가 허용됨을 의미합니다. 이 오디오 형식에 대해 프레임 속도가 정의되지 않은 경우 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 도 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1bc8561628ecdd664c6ccf019d4196a07747de22" translate="yes" xml:space="preserve">
          <source>Obtains the frame rate in frames per second. When this AudioFormat is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats--&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a frame rate of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any frame rate is acceptable. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; is also returned when the frame rate is not defined for this audio format.</source>
          <target state="translated">초당 프레임 수로 프레임 속도를 가져옵니다. 이 AudioFormat이 쿼리 (예 : &lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; &lt;/a&gt; ) 또는 기능 (예 : &lt;a href=&quot;dataline.info#getFormats--&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; &lt;/a&gt; )에 사용되는 경우 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 의 프레임 속도는 모든 프레임 속도가 허용됨을 의미합니다. 이 오디오 형식에 대해 프레임 속도가 정의되지 않은 경우 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 도 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="df62a2cf5c6943f1f0ae13d54e2041d245c74c45" translate="yes" xml:space="preserve">
          <source>Obtains the frame size in bytes.</source>
          <target state="translated">프레임 크기 (바이트)를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="2e369a0f46de19963f12c9415048f93c5958b2ce" translate="yes" xml:space="preserve">
          <source>Obtains the frame size in bytes. When this &lt;code&gt;AudioFormat&lt;/code&gt; is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats()&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a frame size of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any frame size is acceptable. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; is also returned when the frame size is not defined for this audio format.</source>
          <target state="translated">프레임 크기 (바이트)를 가져옵니다. 이 &lt;code&gt;AudioFormat&lt;/code&gt; 이 쿼리 (예 : &lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; &lt;/a&gt; ) 또는 기능 (예 : &lt;a href=&quot;dataline.info#getFormats()&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; &lt;/a&gt; )에 사용되는 경우 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 의 프레임 크기는 모든 프레임 크기가 허용됨을 의미합니다. 이 오디오 형식에 대해 프레임 크기가 정의되지 않은 경우 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 도 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d39e05613a5bd2ab1877094767e00a947294da50" translate="yes" xml:space="preserve">
          <source>Obtains the frame size in bytes. When this AudioFormat is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats--&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a frame size of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any frame size is acceptable. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; is also returned when the frame size is not defined for this audio format.</source>
          <target state="translated">바이트 단위의 프레임 크기를 가져옵니다. 이 AudioFormat이 쿼리 (예 : &lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; &lt;/a&gt; ) 또는 기능 (예 : &lt;a href=&quot;dataline.info#getFormats--&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; &lt;/a&gt; )에 사용되는 경우 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 의 프레임 크기는 모든 프레임 크기가 허용됨을 의미합니다. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 이 오디오 형식에 대해 프레임 크기가 정의되지 않은 경우 도 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4f09e6b503f7e80fb80ec64034e3fa656c9acf41" translate="yes" xml:space="preserve">
          <source>Obtains the key as a localized string.</source>
          <target state="translated">키를 지역화 된 문자열로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7bb8f6a066349b980b07cee211334062fdc99ee0" translate="yes" xml:space="preserve">
          <source>Obtains the key as a localized string. If a localized string cannot be found for the key, the locale independent key stored in the role will be returned.</source>
          <target state="translated">키를 지역화 된 문자열로 가져옵니다. 키에 대해 현지화 된 문자열을 찾을 수없는 경우 역할에 저장된 로케일 독립 키가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d9123fffc9e4955a79a467b9a9d0b79973b426f0" translate="yes" xml:space="preserve">
          <source>Obtains the key as a localized string. If a localized string cannot be found for the key, the locale independent key stored in the role will be returned. This method is intended to be used only by subclasses so that they can specify their own resource bundles which contain localized strings for their keys.</source>
          <target state="translated">키를 지역화 된 문자열로 가져옵니다. 키에 대해 현지화 된 문자열을 찾을 수없는 경우 역할에 저장된 로케일 독립 키가 반환됩니다. 이 메소드는 키에 대한 현지화 된 문자열을 포함하는 자체 자원 번들을 지정할 수 있도록 서브 클래스에서만 사용하도록되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b1f742565383fa614ce728a2b9c4af8f6e3382e" translate="yes" xml:space="preserve">
          <source>Obtains the label for the maximum value, such as &quot;Right&quot; or &quot;Full&quot;.</source>
          <target state="translated">&quot;Right&quot;또는 &quot;Full&quot;과 같은 최대 값에 대한 레이블을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="cd548c616eb0fa9761310bd58310662470928b1a" translate="yes" xml:space="preserve">
          <source>Obtains the label for the maximum value, such as &quot;Right&quot; or &quot;Full.&quot;</source>
          <target state="translated">&quot;Right&quot;또는 &quot;Full&quot;과 같은 최대 값 레이블을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="524aa0c7743b912742cb671cbea6657572339737" translate="yes" xml:space="preserve">
          <source>Obtains the label for the mid-point value, such as &quot;Center&quot; or &quot;Default&quot;.</source>
          <target state="translated">&quot;Center&quot;또는 &quot;Default&quot;와 같은 중간 값의 레이블을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7db52036a3d1f266da251670a08cf5f414a193aa" translate="yes" xml:space="preserve">
          <source>Obtains the label for the mid-point value, such as &quot;Center&quot; or &quot;Default.&quot;</source>
          <target state="translated">&quot;중심&quot;또는 &quot;기본값&quot;과 같은 중간 점 값의 레이블을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="38803844b87d3afe261d0e80a73c77bbecb62c23" translate="yes" xml:space="preserve">
          <source>Obtains the label for the minimum value, such as &quot;Left&quot; or &quot;Off&quot;.</source>
          <target state="translated">&quot;Left&quot;또는 &quot;Off&quot;와 같은 최소값에 대한 레이블을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="2ed2dfb837394d5df09fc18880700fa5cf1eae1a" translate="yes" xml:space="preserve">
          <source>Obtains the label for the minimum value, such as &quot;Left&quot; or &quot;Off.&quot;</source>
          <target state="translated">&quot;Left&quot;또는 &quot;Off&quot;와 같은 최소값의 레이블을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d897abe722b74afed1e60e8553674563980676e9" translate="yes" xml:space="preserve">
          <source>Obtains the label for the specified state.</source>
          <target state="translated">지정된 상태의 라벨을 취득합니다.</target>
        </trans-unit>
        <trans-unit id="ba661a270c76dc50a1ca404b4c0c8ea4c0f35af0" translate="yes" xml:space="preserve">
          <source>Obtains the label for the units in which the control's values are expressed, such as &quot;dB&quot; or &quot;frames per second.&quot;</source>
          <target state="translated">&quot;dB&quot;또는 &quot;초당 프레임&quot;과 같이 컨트롤 값이 표현되는 단위의 레이블을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="10eb6c67cdbf7b45273e0ac45ad49b62c926eb05" translate="yes" xml:space="preserve">
          <source>Obtains the length of the MIDI file, expressed in 8-bit bytes.</source>
          <target state="translated">8 비트 바이트로 표현 된 MIDI 파일의 길이를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6a1e10540b747447164915e399fdb060d75a4be8" translate="yes" xml:space="preserve">
          <source>Obtains the length of the MIDI file, expressed in microseconds.</source>
          <target state="translated">마이크로 초로 표현 된 MIDI 파일의 길이를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="48bfb743d55e8902a858f6b2af89e3cb596f0a17" translate="yes" xml:space="preserve">
          <source>Obtains the length of the audio data contained in the file, expressed in sample frames.</source>
          <target state="translated">샘플 프레임으로 표현 된 파일에 포함 된 오디오 데이터의 길이를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="79ebbd3895a04ec7f1f36587e282d57b36080e60" translate="yes" xml:space="preserve">
          <source>Obtains the length of the current sequence, expressed in MIDI ticks, or 0 if no sequence is set.</source>
          <target state="translated">MIDI 틱으로 표현 된 현재 시퀀스의 길이를 얻거나 시퀀스가 ​​설정되지 않은 경우 0을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6725290cf79cd3fc0b18a015aee62929126b12fd" translate="yes" xml:space="preserve">
          <source>Obtains the length of the current sequence, expressed in microseconds, or 0 if no sequence is set.</source>
          <target state="translated">마이크로 초로 표현 된 현재 시퀀스의 길이를 가져 오거나 시퀀스가 ​​설정되지 않은 경우 0을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e71e1fb5e0aed78981b72db121778a3d7b30532b" translate="yes" xml:space="preserve">
          <source>Obtains the length of the stream, expressed in sample frames rather than bytes.</source>
          <target state="translated">바이트가 아닌 샘플 프레임으로 표현 된 스트림의 길이를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b4b4694d63ec361a56c4abd35937333d51d14325" translate="yes" xml:space="preserve">
          <source>Obtains the length of the track, expressed in MIDI ticks.</source>
          <target state="translated">MIDI 틱으로 표현 된 트랙의 길이를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7ddc9be39ab4a1e3d8861861f9d8829d1b313086" translate="yes" xml:space="preserve">
          <source>Obtains the length of the track, expressed in MIDI ticks. (The duration of a tick in seconds is determined by the timing resolution of the &lt;code&gt;Sequence&lt;/code&gt; containing this track, and also by the tempo of the music as set by the sequencer.)</source>
          <target state="translated">MIDI 틱으로 표현 된 트랙의 길이를 가져옵니다. (초 단위의 틱 지속 시간은 &lt;code&gt;Sequence&lt;/code&gt; 의 타이밍 해상도에 의해 결정됩니다. 이 트랙을 포함 의해 설정된 음악의 템포에 의해 결정됩니다.)</target>
        </trans-unit>
        <trans-unit id="8f2d99a712935bbc5d35140f12807d7b7579756d" translate="yes" xml:space="preserve">
          <source>Obtains the maximum buffer size supported by the data line.</source>
          <target state="translated">데이터 라인이 지원하는 최대 버퍼 크기를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="2eabfbc6e5d7d9caa40832c9c02221580d6917fe" translate="yes" xml:space="preserve">
          <source>Obtains the maximum number of MIDI IN connections available on this MIDI device for receiving MIDI data.</source>
          <target state="translated">MIDI 데이터를 수신하기 위해이 MIDI 장치에서 사용할 수있는 최대 MIDI IN 연결 수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="2f481af359a630b0ed996b69cc9b32c894a67afa" translate="yes" xml:space="preserve">
          <source>Obtains the maximum number of MIDI OUT connections available on this MIDI device for transmitting MIDI data.</source>
          <target state="translated">MIDI 데이터를 전송하기 위해이 MIDI 장치에서 사용할 수있는 최대 MIDI OUT 연결 수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8946def4d489c376321b5bca5ab605a29ad9965b" translate="yes" xml:space="preserve">
          <source>Obtains the maximum number of bytes of data that will fit in the data line's internal buffer.</source>
          <target state="translated">데이터 라인의 내부 버퍼에 들어갈 데이터의 최대 바이트 수를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="1ebdadee5ba0e331d4a7d8152a5eff7288a9b23f" translate="yes" xml:space="preserve">
          <source>Obtains the maximum number of bytes of data that will fit in the data line's internal buffer. For a source data line, this is the size of the buffer to which data can be written. For a target data line, it is the size of the buffer from which data can be read. Note that the units used are bytes, but will always correspond to an integral number of sample frames of audio data.</source>
          <target state="translated">데이터 라인의 내부 버퍼에 맞는 최대 데이터 바이트 수를 가져옵니다. 소스 데이터 라인의 경우 데이터를 쓸 수있는 버퍼 크기입니다. 대상 데이터 라인의 경우 데이터를 읽을 수있는 버퍼 크기입니다. 사용되는 단위는 바이트이지만 항상 오디오 데이터의 샘플 프레임의 정수에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="28d1b2f9c7de45ac316f0f686ec52dcc5fc471f5" translate="yes" xml:space="preserve">
          <source>Obtains the maximum number of notes that this synthesizer can sound simultaneously.</source>
          <target state="translated">이 신디사이저가 동시에 소리를 낼 수있는 최대 음 수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="17bd9cdebd97a4d3d18963a29e7a77abf22e1c0f" translate="yes" xml:space="preserve">
          <source>Obtains the maximum value permitted.</source>
          <target state="translated">허용 된 최대 값을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="0b7692c72c8291cb7a508d2c98803d9b6adc015b" translate="yes" xml:space="preserve">
          <source>Obtains the media duration in microseconds</source>
          <target state="translated">마이크로 초 단위의 미디어 지속 시간을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="526312c2a0e141e19c562b0f77145c6ff9a93556" translate="yes" xml:space="preserve">
          <source>Obtains the media duration in microseconds.</source>
          <target state="translated">미디어 기간 (마이크로 초)을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="04ed822942b7b57f39d7e316437d5b8fe3eb5def" translate="yes" xml:space="preserve">
          <source>Obtains the media length in sample frames.</source>
          <target state="translated">샘플 프레임에서 용지 길이를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="f67cc8efb6d1a0d2e15bb6378549949b987a659f" translate="yes" xml:space="preserve">
          <source>Obtains the minimum buffer size supported by the data line.</source>
          <target state="translated">데이터 라인이 지원하는 최소 버퍼 크기를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="35c18ae069b75a20beeb6c83ab780afff1907f5c" translate="yes" xml:space="preserve">
          <source>Obtains the minimum value permitted.</source>
          <target state="translated">허용 된 최소값을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="2fdaa5f23093025bb671e164fda43f9ae596eb1c" translate="yes" xml:space="preserve">
          <source>Obtains the name of the company who supplies the device.</source>
          <target state="translated">장치를 공급하는 회사의 이름을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="f36d305e4a469b23b1438c533e07d20df5f73959" translate="yes" xml:space="preserve">
          <source>Obtains the name of the device.</source>
          <target state="translated">장치의 이름을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="dcb553ed2268e50922072c27a4dc1b0ca79445a5" translate="yes" xml:space="preserve">
          <source>Obtains the name of the mixer.</source>
          <target state="translated">믹서의 이름을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="786f85babda405f57e1d66b149d21228a12e9027" translate="yes" xml:space="preserve">
          <source>Obtains the name of the port.</source>
          <target state="translated">포트 이름을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="c776f9b744dbd36bb472be4d969dc74e8460384b" translate="yes" xml:space="preserve">
          <source>Obtains the name of the resource.</source>
          <target state="translated">자원의 이름을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="83277e4c772f8d39421085282d00c893b1162407" translate="yes" xml:space="preserve">
          <source>Obtains the name of the resource. This should generally be a string descriptive of the resource.</source>
          <target state="translated">자원의 이름을 얻습니다. 일반적으로 리소스를 설명하는 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="d5eab0242ea57db1d4eb075427f1f690007188c2" translate="yes" xml:space="preserve">
          <source>Obtains the name of the sound bank.</source>
          <target state="translated">사운드 뱅크의 이름을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7b347cc2bd83388b79731c97bfa4f3d3129b39c8" translate="yes" xml:space="preserve">
          <source>Obtains the name of this reverb type.</source>
          <target state="translated">이 리버브 타입의 이름을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="4a4ffb19e916d54499093e41206363f8f96b8c49" translate="yes" xml:space="preserve">
          <source>Obtains the number of bytes of data currently available to the application for processing in the data line's internal buffer.</source>
          <target state="translated">데이터 라인의 내부 버퍼에서 처리하기 위해 현재 애플리케이션에서 사용할 수있는 데이터의 바이트 수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="198ff54b0baa27227e11bb5cf97b5812b6fa7447" translate="yes" xml:space="preserve">
          <source>Obtains the number of bytes of data currently available to the application for processing in the data line's internal buffer. For a source data line, this is the amount of data that can be written to the buffer without blocking. For a target data line, this is the amount of data available to be read by the application. For a clip, this value is always 0 because the audio data is loaded into the buffer when the clip is opened, and persists without modification until the clip is closed.</source>
          <target state="translated">데이터 라인의 내부 버퍼에서 처리하기 위해 응용 프로그램에서 현재 사용 가능한 데이터의 바이트 수를 가져옵니다. 소스 데이터 라인의 경우 이는 차단하지 않고 버퍼에 쓸 수있는 데이터의 양입니다. 대상 데이터 라인의 경우이 값은 응용 프로그램에서 읽을 수있는 데이터 양입니다. 클립의 경우, 클립을 열 때 오디오 데이터가 버퍼에로드되고 클립이 닫힐 때까지 수정없이 유지되므로이 값은 항상 0입니다.</target>
        </trans-unit>
        <trans-unit id="a98469c3827eb85f3a420e9ddbf16333f40afec1" translate="yes" xml:space="preserve">
          <source>Obtains the number of channels.</source>
          <target state="translated">채널 수를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="e89d8b6553859d5657ceb2112a13eb7292e469d1" translate="yes" xml:space="preserve">
          <source>Obtains the number of channels. When this &lt;code&gt;AudioFormat&lt;/code&gt; is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats()&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a return value of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any (positive) number of channels is acceptable.</source>
          <target state="translated">채널 수를 얻습니다. 이 &lt;code&gt;AudioFormat&lt;/code&gt; 이 쿼리 (예 : &lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; &lt;/a&gt; ) 또는 기능 (예 : &lt;a href=&quot;dataline.info#getFormats()&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; &lt;/a&gt; )에 사용되는 경우 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 의 반환 값은 모든 (양수) 채널이 허용됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="ad2e2e9db5dc627bcfeb77f9e58c7091336b4d2c" translate="yes" xml:space="preserve">
          <source>Obtains the number of channels. When this AudioFormat is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats--&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a return value of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any (positive) number of channels is acceptable.</source>
          <target state="translated">채널 수를 얻습니다. 이 AudioFormat을 쿼리 (예 : &lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; &lt;/a&gt; ) 또는 기능 (예 : &lt;a href=&quot;dataline.info#getFormats--&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; &lt;/a&gt; )에 사용하는 경우 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 의 반환 값은 (양수) 채널 수가 허용됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="84ae46779250d366809142e859e049a8a779600e" translate="yes" xml:space="preserve">
          <source>Obtains the number of events in this track.</source>
          <target state="translated">이 트랙 내의 이벤트 수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b03385cf7d59117d59cc31c2daff7b3a65dbbd59" translate="yes" xml:space="preserve">
          <source>Obtains the number of repetitions for playback.</source>
          <target state="translated">재생 반복 횟수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="224e2978b3cf6184e9ada15bae2155129664f6b1" translate="yes" xml:space="preserve">
          <source>Obtains the position in the line's audio data when the event occurred, expressed in sample frames.</source>
          <target state="translated">이벤트가 발생했을 때 라인의 오디오 데이터에서 위치를 가져옵니다. 샘플 프레임으로 표현됩니다.</target>
        </trans-unit>
        <trans-unit id="87ccf9927f2c9d6b0e36bdbe748b7cc89ad077c7" translate="yes" xml:space="preserve">
          <source>Obtains the position in the line's audio data when the event occurred, expressed in sample frames. For example, if a source line had already played back 14 sample frames at the time it was paused, the pause event would report the line's position as 14. The next frame to be processed would be frame number 14 using zero-based numbering, or 15 using one-based numbering.</source>
          <target state="translated">이벤트가 발생했을 때 라인의 오디오 데이터에서 샘플 프레임으로 표현 된 위치를 가져옵니다. 예를 들어, 소스 라인이 일시 정지 시점에서 14 개의 샘플 프레임을 이미 재생 한 경우 일시 정지 이벤트는 라인의 위치를 ​​14로보고합니다. 처리 될 다음 프레임은 0부터 시작하는 번호 매기기를 사용한 프레임 번호 14입니다. 또는 15 1부터 시작하는 번호 매기기 사용.</target>
        </trans-unit>
        <trans-unit id="a5235766874782ff4e00b425c21d038908d99993" translate="yes" xml:space="preserve">
          <source>Obtains the pressure with which the specified key is being depressed.</source>
          <target state="translated">지정된 키를 누르고있는 압력을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="12bde7485477bd4233d2ec0dd8cbe66902051ff0" translate="yes" xml:space="preserve">
          <source>Obtains the print data representation object that contains this doc object's piece of print data in the format corresponding to the supported doc flavor.</source>
          <target state="translated">지원되는 doc 플레이버에 해당하는 형식으로이 doc 오브젝트의 인쇄 데이터 조각을 포함하는 인쇄 데이터 표현 오브젝트를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="faa873771006d53f0de38e93af8aeb4c904712a2" translate="yes" xml:space="preserve">
          <source>Obtains the print data representation object that contains this doc object's piece of print data in the format corresponding to the supported doc flavor. The &lt;code&gt;getPrintData()&lt;/code&gt; method returns an instance of the representation class whose name is given by &lt;a href=&quot;#getDocFlavor()&quot;&gt;&lt;code&gt;getDocFlavor()&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;docflavor#getRepresentationClassName()&quot;&gt;&lt;code&gt;getRepresentationClassName()&lt;/code&gt;&lt;/a&gt;, and the return value can be cast from class &lt;code&gt;Object&lt;/code&gt; to that representation class.</source>
          <target state="translated">Obtains the print data representation object that contains this doc object's piece of print data in the format corresponding to the supported doc flavor. The &lt;code&gt;getPrintData()&lt;/code&gt; method returns an instance of the representation class whose name is given by &lt;a href=&quot;#getDocFlavor()&quot;&gt; &lt;code&gt;getDocFlavor()&lt;/code&gt; &lt;/a&gt;.&lt;a href=&quot;docflavor#getRepresentationClassName()&quot;&gt; &lt;code&gt;getRepresentationClassName()&lt;/code&gt; &lt;/a&gt;, and the return value can be cast from class &lt;code&gt;Object&lt;/code&gt; to that representation class.</target>
        </trans-unit>
        <trans-unit id="55203e03cca206c5f5ede28cffd3eba99bcc8416" translate="yes" xml:space="preserve">
          <source>Obtains the print data representation object that contains this doc object's piece of print data in the format corresponding to the supported doc flavor. The &lt;code&gt;getPrintData()&lt;/code&gt; method returns an instance of the representation class whose name is given by &lt;code&gt;&lt;a href=&quot;doc#getDocFlavor--&quot;&gt;&lt;code&gt;getDocFlavor()&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;docflavor#getRepresentationClassName--&quot;&gt;&lt;code&gt;getRepresentationClassName()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;, and the return value can be cast from class Object to that representation class.</source>
          <target state="translated">지원되는 doc 후 레이 바에 대응하는 형식에서이 doc 객체의 인쇄 데이터를 포함한 인쇄 데이터 표현 객체를 가져옵니다. &lt;code&gt;getPrintData()&lt;/code&gt; 메소드가 복귀 이름 주어진다 표현 클래스의 인스턴스 &lt;code&gt;&lt;a href=&quot;doc#getDocFlavor--&quot;&gt;&lt;code&gt;getDocFlavor()&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;docflavor#getRepresentationClassName--&quot;&gt;&lt;code&gt;getRepresentationClassName()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 이며 반환 값은 Object 클래스에서 해당 표현 클래스로 캐스트 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80617dc7d7f28cee040294e5bbf6387270d78aee" translate="yes" xml:space="preserve">
          <source>Obtains the print data representation object that contains this doc object's piece of print data in the format corresponding to the supported doc flavor. The &lt;code&gt;getPrintData()&lt;/code&gt; method returns an instance of the representation class whose name is given by&lt;a href=&quot;#getDocFlavor()&quot;&gt;&lt;code&gt;getDocFlavor()&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;docflavor#getRepresentationClassName()&quot;&gt;&lt;code&gt;getRepresentationClassName()&lt;/code&gt;&lt;/a&gt;, and the return value can be cast from class &lt;code&gt;Object&lt;/code&gt; to that representation class.</source>
          <target state="translated">Obtains the print data representation object that contains this doc object's piece of print data in the format corresponding to the supported doc flavor. The &lt;code&gt;getPrintData()&lt;/code&gt; method returns an instance of the representation class whose name is given by&lt;a href=&quot;#getDocFlavor()&quot;&gt; &lt;code&gt;getDocFlavor()&lt;/code&gt; &lt;/a&gt;.&lt;a href=&quot;docflavor#getRepresentationClassName()&quot;&gt; &lt;code&gt;getRepresentationClassName()&lt;/code&gt; &lt;/a&gt;, and the return value can be cast from class &lt;code&gt;Object&lt;/code&gt; to that representation class.</target>
        </trans-unit>
        <trans-unit id="b8c30e48603e9a4985ba1cadd57a7a99b9b45def" translate="yes" xml:space="preserve">
          <source>Obtains the processing latency incurred by this synthesizer, expressed in microseconds.</source>
          <target state="translated">Obtains the processing latency incurred by this synthesizer, expressed in microseconds.</target>
        </trans-unit>
        <trans-unit id="4d9b684a8af4b5a7358dc37dcc6e7bfc825282f8" translate="yes" xml:space="preserve">
          <source>Obtains the processing latency incurred by this synthesizer, expressed in microseconds. This latency measures the worst-case delay between the time a MIDI message is delivered to the synthesizer and the time that the synthesizer actually produces the corresponding result.</source>
          <target state="translated">이 신시사이저에서 발생한 처리 대기 시간을 마이크로 초로 가져옵니다. 이 지연 시간은 MIDI 메시지가 신시사이저에 전달되는 시간과 신시사이저가 실제로 해당 결과를 생성하는 시간 사이의 최악의 지연을 측정합니다.</target>
        </trans-unit>
        <trans-unit id="e97d7bd4b5ce67b4ff7e05cb55c8afb361ea05b1" translate="yes" xml:space="preserve">
          <source>Obtains the requested MIDI device.</source>
          <target state="translated">요청한 MIDI 장치를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="f9003a43bb5045e14eed3d62553bba173b216fcb" translate="yes" xml:space="preserve">
          <source>Obtains the requested audio mixer.</source>
          <target state="translated">요청한 오디오 믹서를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="bb6bb9dfe22fe2a5bd48415da68c47fb702fa3df" translate="yes" xml:space="preserve">
          <source>Obtains the resolution or granularity of the control, in the units that the control measures.</source>
          <target state="translated">Obtains the resolution or granularity of the control, in the units that the control measures.</target>
        </trans-unit>
        <trans-unit id="db0eb02c9d395ffe1ab02a103903d39180c3ae0f" translate="yes" xml:space="preserve">
          <source>Obtains the resolution or granularity of the control, in the units that the control measures. The precision is the size of the increment between discrete valid values for this control, over the set of supported floating-point values.</source>
          <target state="translated">컨트롤이 측정하는 단위로 컨트롤의 해상도 또는 세분성을 가져옵니다. 정밀도는 지원되는 부동 소수점 값 집합에 대해이 컨트롤에 대한 이산 유효 값 사이의 증분 크기입니다.</target>
        </trans-unit>
        <trans-unit id="3ef0f669572a153da982af6cf7912c93e2494b62" translate="yes" xml:space="preserve">
          <source>Obtains the sample rate.</source>
          <target state="translated">Obtains the sample rate.</target>
        </trans-unit>
        <trans-unit id="84c89b673b3ea9167d339060f488194faf34f1bf" translate="yes" xml:space="preserve">
          <source>Obtains the sample rate. For compressed formats, the return value is the sample rate of the uncompressed audio data. When this &lt;code&gt;AudioFormat&lt;/code&gt; is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats()&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a sample rate of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any sample rate is acceptable. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; is also returned when the sample rate is not defined for this audio format.</source>
          <target state="translated">Obtains the sample rate. For compressed formats, the return value is the sample rate of the uncompressed audio data. When this &lt;code&gt;AudioFormat&lt;/code&gt; is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; &lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats()&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; &lt;/a&gt;), a sample rate of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any sample rate is acceptable. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; is also returned when the sample rate is not defined for this audio format.</target>
        </trans-unit>
        <trans-unit id="916af48da0c2e5e0b8bea1d26957aa6de8314e6d" translate="yes" xml:space="preserve">
          <source>Obtains the sample rate. For compressed formats, the return value is the sample rate of the uncompressed audio data. When this AudioFormat is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats--&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a sample rate of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any sample rate is acceptable. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; is also returned when the sample rate is not defined for this audio format.</source>
          <target state="translated">샘플링 속도를 얻습니다. 압축 형식의 경우 반환 값은 압축되지 않은 오디오 데이터의 샘플 속도입니다. 이 AudioFormat을 쿼리 (예 : &lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; &lt;/a&gt; ) 또는 기능 (예 : &lt;a href=&quot;dataline.info#getFormats--&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; &lt;/a&gt; )에 사용하면 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 의 샘플 속도는 모든 샘플 속도가 허용됨을 의미합니다. 이 오디오 형식에 대해 샘플 속도가 정의되지 않은 경우 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 도 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="919819c59380eb017472b79d31bcec0cf2bd9c6a" translate="yes" xml:space="preserve">
          <source>Obtains the sampled audio that is stored in this &lt;code&gt;SoundbankResource&lt;/code&gt;.</source>
          <target state="translated">Obtains the sampled audio that is stored in this &lt;code&gt;SoundbankResource&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b44aaffea01cb4145a902804f8d89e46237d2c7" translate="yes" xml:space="preserve">
          <source>Obtains the sampled audio that is stored in this &lt;code&gt;SoundbankResource&lt;/code&gt;. The type of object returned depends on the implementation of the concrete class, and may be queried using &lt;code&gt;getDataClass&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;SoundbankResource&lt;/code&gt; 에 저장된 샘플링 된 오디오를 가져옵니다 . 리턴 된 오브젝트의 유형은 구체적 클래스의 구현에 따라 다르며 &lt;code&gt;getDataClass&lt;/code&gt; 를 사용하여 조회 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6d1ddc39d5f6863a0e018fe94387fb4f30a49b70" translate="yes" xml:space="preserve">
          <source>Obtains the second data byte in the message.</source>
          <target state="translated">메시지에서 두 번째 데이터 바이트를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="931803e17b44282ca95fd228ef8676ceab8e3621" translate="yes" xml:space="preserve">
          <source>Obtains the sequence on which the Sequencer is currently operating.</source>
          <target state="translated">시퀀서가 현재 동작하고있는 순서를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="91aef69c84facbcf5265ce514bdcb77dc3aab156" translate="yes" xml:space="preserve">
          <source>Obtains the set of MIDI channels controlled by this synthesizer.</source>
          <target state="translated">Obtains the set of MIDI channels controlled by this synthesizer.</target>
        </trans-unit>
        <trans-unit id="529ee7e045169b7502fcd358ef0dbb3a71889438" translate="yes" xml:space="preserve">
          <source>Obtains the set of MIDI channels controlled by this synthesizer. Each non-null element in the returned array is a &lt;code&gt;MidiChannel&lt;/code&gt; that receives the MIDI messages sent on that channel number.</source>
          <target state="translated">이 신디사이저로 제어되는 MIDI 채널 세트를 가져옵니다. 리턴 된 배열의 널이 아닌 각 요소는 해당 채널 번호로 전송 된 MIDI 메시지를 수신 하는 &lt;code&gt;MidiChannel&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="212a20062982077d3265d50d5e1d6199d0a40ae9" translate="yes" xml:space="preserve">
          <source>Obtains the set of MIDI file types for which file writing support is provided by the system.</source>
          <target state="translated">시스템에서 파일 쓰기 지원을 제공하는 MIDI 파일 유형 세트를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="32cf11fe93684bb01971acdec345e02214b6c889" translate="yes" xml:space="preserve">
          <source>Obtains the set of MIDI file types for which file writing support is provided by this file writer.</source>
          <target state="translated">이 파일 라이터가 파일 기입 지원을 제공하는 MIDI 파일 타입 세트를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7130d4b5f8044b29c144b6ee114569f1b6a42428" translate="yes" xml:space="preserve">
          <source>Obtains the set of MIDI file types that the system can write from the sequence specified.</source>
          <target state="translated">시스템이 지정된 시퀀스에서 쓸 수있는 MIDI 파일 형식 세트를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d6ac897cdaec55ba6f2c80a6439801976e790239" translate="yes" xml:space="preserve">
          <source>Obtains the set of all source lines currently open to this mixer.</source>
          <target state="translated">이 믹서에 현재 열려있는 모든 소스 라인 세트를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6b5cbca478504b7100a6c3a914bddedc1c25a58f" translate="yes" xml:space="preserve">
          <source>Obtains the set of all target lines currently open from this mixer.</source>
          <target state="translated">이 믹서로부터 현재 열려있는 모든 타겟 라인 세트를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1e1ef4eab169eb94de146ccee65196e55bc82afd" translate="yes" xml:space="preserve">
          <source>Obtains the set of controls associated with this line.</source>
          <target state="translated">Obtains the set of controls associated with this line.</target>
        </trans-unit>
        <trans-unit id="4068b2dcffafee66fda40f87326d1b3c1557a641" translate="yes" xml:space="preserve">
          <source>Obtains the set of controls associated with this line. Some controls may only be available when the line is open. If there are no controls, this method returns an array of length 0.</source>
          <target state="translated">이 행에 관련한 컨트롤 세트를 취득합니다. 일부 컨트롤은 라인이 열려있을 때만 사용할 수 있습니다. 컨트롤이없는 경우이 메서드는 길이가 0 인 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2dc770ac5095026b42ed7ac0cc5bc8bc4ee2feec" translate="yes" xml:space="preserve">
          <source>Obtains the set of info objects representing the device or devices provided by this &lt;code&gt;MidiDeviceProvider&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;MidiDeviceProvider&lt;/code&gt; 가 제공하는 디바이스를 나타내는 정보 객체 세트를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="97dfd1bf3fc431639eca3672d4373c0f3cbf2f7c" translate="yes" xml:space="preserve">
          <source>Obtains the set of info objects representing the mixer or mixers provided by this MixerProvider.</source>
          <target state="translated">이 MixerProvider가 제공하는 믹서를 나타내는 정보 객체 세트를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8ef7c9fd306e190f7bb570126b9cb667765a3650" translate="yes" xml:space="preserve">
          <source>Obtains the set of master synchronization modes supported by this sequencer.</source>
          <target state="translated">이 시퀀서가 지원하는 마스터 동기 모드 세트를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d54f70adeaaa2bf84bd53214b0c82da69d47b2f4" translate="yes" xml:space="preserve">
          <source>Obtains the set of printing attributes for this doc object.</source>
          <target state="translated">Obtains the set of printing attributes for this doc object.</target>
        </trans-unit>
        <trans-unit id="0c9cac1cfa9fe94fd5a78d11511c6fab9e4de620" translate="yes" xml:space="preserve">
          <source>Obtains the set of printing attributes for this doc object. If the returned attribute set includes an instance of a particular attribute</source>
          <target state="translated">이 doc 객체의 인쇄 속성 세트를 가져옵니다. 리턴 된 속성 세트에 특정 속성의 인스턴스가 포함 된 경우</target>
        </trans-unit>
        <trans-unit id="7812b9bd0b4bc272bb0139fa4b1f8bbff6377bf6" translate="yes" xml:space="preserve">
          <source>Obtains the set of slave synchronization modes supported by the sequencer.</source>
          <target state="translated">시퀀서가 지원하는 슬레이브 동기 모드 세트를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e264d04a8d3a81e92ca1bc198927173c722fd3ef" translate="yes" xml:space="preserve">
          <source>Obtains the set of source format encodings from which format conversion services are provided by this provider.</source>
          <target state="translated">이 프로 바이더가 형식 변환 서비스를 제공하는 소스 형식 인코딩 세트를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="082f41ad3b119c4ce63b80e3aac1d0419695b794" translate="yes" xml:space="preserve">
          <source>Obtains the set of target format encodings supported by the format converter given a particular source format.</source>
          <target state="translated">Obtains the set of target format encodings supported by the format converter given a particular source format.</target>
        </trans-unit>
        <trans-unit id="45fcc9f67944cbcbb519cc5f2208ed13260f6401" translate="yes" xml:space="preserve">
          <source>Obtains the set of target format encodings supported by the format converter given a particular source format. If no target format encodings are supported for this source format, an array of length 0 is returned.</source>
          <target state="translated">특정 소스 형식이 지정된 경우 형식 변환기에서 지원하는 대상 형식 인코딩 세트를 가져옵니다. 이 소스 형식에 대해 대상 형식 인코딩이 지원되지 않으면 길이가 0 인 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c4c9982a46e38c7650a0e4c86b409e7deba40b87" translate="yes" xml:space="preserve">
          <source>Obtains the set of target format encodings to which format conversion services are provided by this provider.</source>
          <target state="translated">이 프로 바이더가 형식 변환 서비스를 제공하는 타겟 형식 인코딩 세트를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="640a71cb3159ab2c8678069ae2e3abf7077dec23" translate="yes" xml:space="preserve">
          <source>Obtains the set of target formats with the encoding specified supported by the format converter If no target formats with the specified encoding are supported for this source format, an array of length 0 is returned.</source>
          <target state="translated">형식 변환기에서 지원하는 지정된 인코딩으로 대상 형식 세트를 가져옵니다.이 소스 형식에 대해 지정된 인코딩을 가진 대상 형식이 지원되지 않으면 길이가 0 인 배열이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="3c28bcd540b6266d353fc5f88df35b3f37db4176" translate="yes" xml:space="preserve">
          <source>Obtains the set of target formats with the encoding specified supported by the format converter.</source>
          <target state="translated">Obtains the set of target formats with the encoding specified supported by the format converter.</target>
        </trans-unit>
        <trans-unit id="e61226609d3b9ac454b1330661ee4bc2eec9fa78" translate="yes" xml:space="preserve">
          <source>Obtains the set of target formats with the encoding specified supported by the format converter. If no target formats with the specified encoding are supported for this source format, an array of length 0 is returned.</source>
          <target state="translated">Obtains the set of target formats with the encoding specified supported by the format converter. If no target formats with the specified encoding are supported for this source format, an array of length 0 is returned.</target>
        </trans-unit>
        <trans-unit id="7623e9c8d286bdde8d7daf962e8524f2079413cb" translate="yes" xml:space="preserve">
          <source>Obtains the size in bytes of the entire audio file (not just its audio data).</source>
          <target state="translated">오디오 데이터뿐만 아니라 전체 오디오 파일의 크기를 바이트 단위로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="29644b48f54ebe9df81d37c1f40475117f567872" translate="yes" xml:space="preserve">
          <source>Obtains the size of a sample.</source>
          <target state="translated">Obtains the size of a sample.</target>
        </trans-unit>
        <trans-unit id="baada877f6e14ebd54acd40e5142867155b0409e" translate="yes" xml:space="preserve">
          <source>Obtains the size of a sample. For compressed formats, the return value is the sample size of the uncompressed audio data. When this &lt;code&gt;AudioFormat&lt;/code&gt; is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats()&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a sample size of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any sample size is acceptable. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; is also returned when the sample size is not defined for this audio format.</source>
          <target state="translated">Obtains the size of a sample. For compressed formats, the return value is the sample size of the uncompressed audio data. When this &lt;code&gt;AudioFormat&lt;/code&gt; is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; &lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats()&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; &lt;/a&gt;), a sample size of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any sample size is acceptable. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; is also returned when the sample size is not defined for this audio format.</target>
        </trans-unit>
        <trans-unit id="b5c1ed610de2368e452723c0a72cd39ea3d08684" translate="yes" xml:space="preserve">
          <source>Obtains the size of a sample. For compressed formats, the return value is the sample size of the uncompressed audio data. When this AudioFormat is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats--&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a sample size of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any sample size is acceptable. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; is also returned when the sample size is not defined for this audio format.</source>
          <target state="translated">표본의 크기를 얻습니다. 압축 형식의 경우 반환 값은 압축되지 않은 오디오 데이터의 샘플 크기입니다. 이 AudioFormat을 쿼리 (예 : &lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; &lt;/a&gt; ) 또는 기능 (예 : &lt;a href=&quot;dataline.info#getFormats--&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; &lt;/a&gt; )에 사용하면 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 의 샘플 크기는 모든 샘플 크기가 허용됨을 의미합니다. 이 오디오 형식에 대해 샘플 크기가 정의되지 않은 경우 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 도 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="832e1ce998f09262bb3c9c5145d3e757353b4877" translate="yes" xml:space="preserve">
          <source>Obtains the smallest time interval, in microseconds, over which the control's value can change during a shift.</source>
          <target state="translated">Obtains the smallest time interval, in microseconds, over which the control's value can change during a shift.</target>
        </trans-unit>
        <trans-unit id="f38011fd2ed3d025ba757f317c8773115494d885" translate="yes" xml:space="preserve">
          <source>Obtains the smallest time interval, in microseconds, over which the control's value can change during a shift. The update period is the inverse of the frequency with which the control updates its value during a shift. If the implementation does not support value shifting over time, it should set the control's value to the final value immediately and return -1 from this method.</source>
          <target state="translated">시프트 동안 컨트롤 값이 변경 될 수있는 최소 시간 간격 (마이크로 초)을 가져옵니다. 업데이트주기는 시프트 동안 컨트롤이 값을 업데이트하는 빈도의 역수입니다. 구현이 시간에 따른 값 이동을 지원하지 않으면 컨트롤 값을 즉시 최종 값으로 설정하고이 메소드에서 -1을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="aa8e370de68ef8858a7552476717ca6f8301580c" translate="yes" xml:space="preserve">
          <source>Obtains the sound bank that contains this &lt;code&gt;SoundbankResource&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;SoundbankResource&lt;/code&gt; 가 포함 된 사운드 뱅크를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="0d8a2ec959503c4d45db87e974aa2c797012d004" translate="yes" xml:space="preserve">
          <source>Obtains the start position of the loop, in MIDI ticks.</source>
          <target state="translated">MIDI 틱으로 루프의 시작 위치를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="146c51e9eed7990fba501c56d354941e0e43216f" translate="yes" xml:space="preserve">
          <source>Obtains the status byte for the MIDI message.</source>
          <target state="translated">Obtains the status byte for the MIDI message.</target>
        </trans-unit>
        <trans-unit id="34ff015bf92d9367dc68e18471a1eadec0557a15" translate="yes" xml:space="preserve">
          <source>Obtains the status byte for the MIDI message. The status &quot;byte&quot; is represented as an integer; see the &lt;a href=&quot;#integersVsBytes&quot;&gt;discussion&lt;/a&gt; in the &lt;code&gt;MidiMessage&lt;/code&gt; class description.</source>
          <target state="translated">MIDI 메시지의 상태 바이트를 가져옵니다. 상태 &quot;바이트&quot;는 정수로 표시됩니다. &lt;code&gt;MidiMessage&lt;/code&gt; 클래스 설명 의 &lt;a href=&quot;#integersVsBytes&quot;&gt;토론&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cfb2a82b7632fa0993ad670d7d1dbb9d7b38eb5a" translate="yes" xml:space="preserve">
          <source>Obtains the time-stamp for the event, in MIDI ticks</source>
          <target state="translated">MIDI 틱으로 이벤트의 타임 스탬프를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="13bd33d9b5731c6ea31e6fade4d1d81b11ac2536" translate="yes" xml:space="preserve">
          <source>Obtains the time-stamp for the event, in MIDI ticks.</source>
          <target state="translated">Obtains the time-stamp for the event, in MIDI ticks.</target>
        </trans-unit>
        <trans-unit id="6345ccc570bcf9f415fbd397ea1d93711869534a" translate="yes" xml:space="preserve">
          <source>Obtains the timing division type for the MIDI file.</source>
          <target state="translated">MIDI 파일의 타이밍 분할 형식을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="fb7c60c35136ad3a2382a0bc25fd1046fd482513" translate="yes" xml:space="preserve">
          <source>Obtains the timing division type for this sequence.</source>
          <target state="translated">이 순서의 타이밍 분할 타입을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d4180acbed582f575fe10bf61043db97a4c4ea32" translate="yes" xml:space="preserve">
          <source>Obtains the timing resolution for the MIDI file.</source>
          <target state="translated">Obtains the timing resolution for the MIDI file.</target>
        </trans-unit>
        <trans-unit id="8bc4e900aac7cdb5cbc146cf25a2a65c58bd2001" translate="yes" xml:space="preserve">
          <source>Obtains the timing resolution for the MIDI file. If the division type is PPQ, the resolution is specified in ticks per beat. For SMTPE timing, the resolution is specified in ticks per frame.</source>
          <target state="translated">MIDI 파일의 타이밍 해상도를 가져옵니다. 나누기 유형이 PPQ 인 경우 해상도는 비트 당 틱으로 지정됩니다. SMTPE 타이밍의 경우 해상도는 프레임 당 틱 단위로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="d4e9471f6879f682fef813a0b6f8cba4da740e03" translate="yes" xml:space="preserve">
          <source>Obtains the timing resolution for this sequence.</source>
          <target state="translated">Obtains the timing resolution for this sequence.</target>
        </trans-unit>
        <trans-unit id="cb1d60b9bd10cb9e2648f13272062d391178cc39" translate="yes" xml:space="preserve">
          <source>Obtains the timing resolution for this sequence. If the sequence's division type is PPQ, the resolution is specified in ticks per beat. For SMTPE timing, the resolution is specified in ticks per frame.</source>
          <target state="translated">이 순서의 타이밍 해상도를 가져옵니다. 시퀀스의 나누기 유형이 PPQ 인 경우 해상도는 비트 당 틱으로 지정됩니다. SMTPE 타이밍의 경우 해상도는 프레임 당 틱 단위로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="bf6f8af4e6ccf1ed0e7e26420d14e2326d44577e" translate="yes" xml:space="preserve">
          <source>Obtains the total length of the MIDI message in bytes.</source>
          <target state="translated">Obtains the total length of the MIDI message in bytes.</target>
        </trans-unit>
        <trans-unit id="3f34e716470b806c3f24fa4263ae05c9f4cca4da" translate="yes" xml:space="preserve">
          <source>Obtains the total length of the MIDI message in bytes. A MIDI message consists of one status byte and zero or more data bytes. The return value ranges from 1 for system real-time messages, to 2 or 3 for channel messages, to any value for meta and system exclusive messages.</source>
          <target state="translated">MIDI 메시지의 전체 길이를 바이트 단위로 가져옵니다. MIDI 메시지는 하나의 상태 바이트와 0 개 이상의 데이터 바이트로 구성됩니다. 리턴 값의 범위는 시스템 실시간 메시지의 경우 1, 채널 메시지의 경우 2 또는 3, 메타 및 시스템 독점 메시지의 모든 값입니다.</target>
        </trans-unit>
        <trans-unit id="010c77ace25d05f1972540e9312e234d84b7d7c9" translate="yes" xml:space="preserve">
          <source>Obtains the type of encoding for sounds in this format.</source>
          <target state="translated">이 형식의 사운드 인코딩 타입을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7128a50ac49d3e8d3f237ffb78f06d9601027207" translate="yes" xml:space="preserve">
          <source>Obtains the type of the &lt;code&gt;MetaMessage&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MetaMessage&lt;/code&gt; 의 형태를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="2dbff2f3d5f02673d810e4940b0e9a02b4b4c48e" translate="yes" xml:space="preserve">
          <source>Obtains the upward or downward pitch offset for this channel.</source>
          <target state="translated">Obtains the upward or downward pitch offset for this channel.</target>
        </trans-unit>
        <trans-unit id="af95fda7ddbd85dada3b6e7d3e9795bea0c053ea" translate="yes" xml:space="preserve">
          <source>Obtains the upward or downward pitch offset for this channel. If the device does not support setting pitch bend, this method always returns 8192. Calling &lt;code&gt;setPitchBend&lt;/code&gt; will have no effect then.</source>
          <target state="translated">이 채널의 상하 피치 오프셋을 가져옵니다. 장치가 설정 피치 밴드를 지원하지 않는 경우,이 메소드는 항상 8192 콜링의 반환 &lt;code&gt;setPitchBend&lt;/code&gt; 가 다음 아무런 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bfca6b5d508e8cec708093a42994dfb27f232de3" translate="yes" xml:space="preserve">
          <source>Obtains the value associated with a key in a key property.</source>
          <target state="translated">키 속성에서 키와 관련된 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b8c22bb0bfa695769b04c4281d1ea5dc7eafbefa" translate="yes" xml:space="preserve">
          <source>Obtains the value of the DAYS field as an integer value, or 0 if not present.</source>
          <target state="translated">Obtains the value of the DAYS field as an integer value, or 0 if not present.</target>
        </trans-unit>
        <trans-unit id="c8c7a7c4b195aeef1c06cd77707fa39d1687b72a" translate="yes" xml:space="preserve">
          <source>Obtains the value of the DAYS field as an integer value, or 0 if not present. This method works just like &lt;a href=&quot;#getYears()&quot;&gt;&lt;code&gt;getYears()&lt;/code&gt;&lt;/a&gt; except that this method works on the DAYS field.</source>
          <target state="translated">Obtains the value of the DAYS field as an integer value, or 0 if not present. This method works just like &lt;a href=&quot;#getYears()&quot;&gt; &lt;code&gt;getYears()&lt;/code&gt; &lt;/a&gt; except that this method works on the DAYS field.</target>
        </trans-unit>
        <trans-unit id="e98c4be2e236f65728e31a023523d930b0ff6a1e" translate="yes" xml:space="preserve">
          <source>Obtains the value of the HOURS field as an integer value, or 0 if not present.</source>
          <target state="translated">Obtains the value of the HOURS field as an integer value, or 0 if not present.</target>
        </trans-unit>
        <trans-unit id="67de30556c5b9da711745b6809fb56a76461fa78" translate="yes" xml:space="preserve">
          <source>Obtains the value of the HOURS field as an integer value, or 0 if not present. This method works just like &lt;a href=&quot;#getYears()&quot;&gt;&lt;code&gt;getYears()&lt;/code&gt;&lt;/a&gt; except that this method works on the HOURS field.</source>
          <target state="translated">Obtains the value of the HOURS field as an integer value, or 0 if not present. This method works just like &lt;a href=&quot;#getYears()&quot;&gt; &lt;code&gt;getYears()&lt;/code&gt; &lt;/a&gt; except that this method works on the HOURS field.</target>
        </trans-unit>
        <trans-unit id="d8f3d470584b20282d1b3b6071e8c6c3108946bb" translate="yes" xml:space="preserve">
          <source>Obtains the value of the MINUTES field as an integer value, or 0 if not present.</source>
          <target state="translated">Obtains the value of the MINUTES field as an integer value, or 0 if not present.</target>
        </trans-unit>
        <trans-unit id="3efcd96f5ad9dc5327934405374402690fd7f8dd" translate="yes" xml:space="preserve">
          <source>Obtains the value of the MINUTES field as an integer value, or 0 if not present. This method works just like &lt;a href=&quot;#getYears()&quot;&gt;&lt;code&gt;getYears()&lt;/code&gt;&lt;/a&gt; except that this method works on the MINUTES field.</source>
          <target state="translated">Obtains the value of the MINUTES field as an integer value, or 0 if not present. This method works just like &lt;a href=&quot;#getYears()&quot;&gt; &lt;code&gt;getYears()&lt;/code&gt; &lt;/a&gt; except that this method works on the MINUTES field.</target>
        </trans-unit>
        <trans-unit id="d63eeaf95bdba336d75733a575837c2c5640cf07" translate="yes" xml:space="preserve">
          <source>Obtains the value of the MONTHS field as an integer value, or 0 if not present.</source>
          <target state="translated">Obtains the value of the MONTHS field as an integer value, or 0 if not present.</target>
        </trans-unit>
        <trans-unit id="33828746c5c1caff09a72ba1680ca4a5a2f312b1" translate="yes" xml:space="preserve">
          <source>Obtains the value of the MONTHS field as an integer value, or 0 if not present. This method works just like &lt;a href=&quot;#getYears()&quot;&gt;&lt;code&gt;getYears()&lt;/code&gt;&lt;/a&gt; except that this method works on the MONTHS field.</source>
          <target state="translated">Obtains the value of the MONTHS field as an integer value, or 0 if not present. This method works just like &lt;a href=&quot;#getYears()&quot;&gt; &lt;code&gt;getYears()&lt;/code&gt; &lt;/a&gt; except that this method works on the MONTHS field.</target>
        </trans-unit>
        <trans-unit id="e57bb1cb279a7acb1013dc7c7e38a1b3b7c4c80f" translate="yes" xml:space="preserve">
          <source>Obtains the value of the SECONDS field as an integer value, or 0 if not present.</source>
          <target state="translated">Obtains the value of the SECONDS field as an integer value, or 0 if not present.</target>
        </trans-unit>
        <trans-unit id="52fd2e913de93941e958949090eb166e93fdddf9" translate="yes" xml:space="preserve">
          <source>Obtains the value of the SECONDS field as an integer value, or 0 if not present. This method works just like &lt;a href=&quot;#getYears()&quot;&gt;&lt;code&gt;getYears()&lt;/code&gt;&lt;/a&gt; except that this method works on the SECONDS field.</source>
          <target state="translated">Obtains the value of the SECONDS field as an integer value, or 0 if not present. This method works just like &lt;a href=&quot;#getYears()&quot;&gt; &lt;code&gt;getYears()&lt;/code&gt; &lt;/a&gt; except that this method works on the SECONDS field.</target>
        </trans-unit>
        <trans-unit id="15cdb87771ec76c43709351158a9ad7cb9bcf43a" translate="yes" xml:space="preserve">
          <source>Obtains the vendor of the mixer.</source>
          <target state="translated">믹서의 벤더를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ef0fbc2eb74a02372e34da6b17c31a13514b526e" translate="yes" xml:space="preserve">
          <source>Obtains the version of the device.</source>
          <target state="translated">장치의 버전을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="681806e15cf00f92aaabb9518658e387de962927" translate="yes" xml:space="preserve">
          <source>Obtains the version of the mixer.</source>
          <target state="translated">믹서의 버전을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b12262b8fbdc4bf6f355143093691bdbbf2d9f59" translate="yes" xml:space="preserve">
          <source>Obtains the version string for the sound bank.</source>
          <target state="translated">사운드 뱅크의 버전 문자열을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="be3d4bcd123ef2916a1118f6b8f513e25269106b" translate="yes" xml:space="preserve">
          <source>Obtains this Print Job's set of printing attributes.</source>
          <target state="translated">Obtains this Print Job's set of printing attributes.</target>
        </trans-unit>
        <trans-unit id="8adaf718f9fcbb8f526cea52b469726f36db1185" translate="yes" xml:space="preserve">
          <source>Obtains this Print Job's set of printing attributes. The returned attribute set object is unmodifiable. The returned attribute set object is a &quot;snapshot&quot; of this Print Job's attribute set at the time of the &lt;a href=&quot;docprintjob#getAttributes--&quot;&gt;&lt;code&gt;getAttributes()&lt;/code&gt;&lt;/a&gt; method call; that is, the returned attribute set's object's contents will not be updated if this Print Job's attribute set's contents change in the future. To detect changes in attribute values, call &lt;code&gt;getAttributes()&lt;/code&gt; again and compare the new attribute set to the previous attribute set; alternatively, register a listener for print job events. The returned value may be an empty set but should not be null.</source>
          <target state="translated">이 인쇄 작업의 인쇄 속성 세트를 가져옵니다. 리턴 된 속성 세트 오브젝트는 수정할 수 없습니다. 리턴 된 속성 세트 오브젝트는 &lt;a href=&quot;docprintjob#getAttributes--&quot;&gt; &lt;code&gt;getAttributes()&lt;/code&gt; &lt;/a&gt; 메소드 호출 시이 인쇄 작업 속성 세트의 &quot;스냅 샷&quot;입니다 . 즉,이 인쇄 작업의 속성 세트의 내용이 나중에 변경 될 경우, 반환되는 속성 세트의 객체의 내용은 갱신되지 않습니다. 속성 값의 변경을 감지하려면 &lt;code&gt;getAttributes()&lt;/code&gt; 다시 호출 하고 새 속성 세트를 이전 속성 세트와 비교하십시오. 또는 인쇄 작업 이벤트에 대한 리스너를 등록하십시오. 리턴 된 값은 빈 세트 일 수 있지만 널이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="2d56f159a50c98ee5531097c6ab8ce5ac336397d" translate="yes" xml:space="preserve">
          <source>Obtains this Print Job's set of printing attributes. The returned attribute set object is unmodifiable. The returned attribute set object is a &quot;snapshot&quot; of this Print Job's attribute set at the time of the &lt;code&gt;getAttributes()&lt;/code&gt; method call; that is, the returned attribute set's object's contents will not be updated if this Print Job's attribute set's contents change in the future. To detect changes in attribute values, call &lt;code&gt;getAttributes()&lt;/code&gt; again and compare the new attribute set to the previous attribute set; alternatively, register a listener for print job events. The returned value may be an empty set but should not be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Obtains this Print Job's set of printing attributes. The returned attribute set object is unmodifiable. The returned attribute set object is a &quot;snapshot&quot; of this Print Job's attribute set at the time of the &lt;code&gt;getAttributes()&lt;/code&gt; method call; that is, the returned attribute set's object's contents will not be updated if this Print Job's attribute set's contents change in the future. To detect changes in attribute values, call &lt;code&gt;getAttributes()&lt;/code&gt; again and compare the new attribute set to the previous attribute set; alternatively, register a listener for print job events. The returned value may be an empty set but should not be &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0d6c4152a9fee98e44407a06a19d94459648680" translate="yes" xml:space="preserve">
          <source>Obtains this control's current value.</source>
          <target state="translated">이 컨트롤의 현재가를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e773a7ded424aee9677a20f60e21f56631728d90" translate="yes" xml:space="preserve">
          <source>Obtains this print service's set of printer description attributes giving this Print Service's status.</source>
          <target state="translated">Obtains this print service's set of printer description attributes giving this Print Service's status.</target>
        </trans-unit>
        <trans-unit id="521d500c5600e67f6b3ba4db6efc6089e93e37ef" translate="yes" xml:space="preserve">
          <source>Obtains this print service's set of printer description attributes giving this Print Service's status. The returned attribute set object is unmodifiable. The returned attribute set object is a &quot;snapshot&quot; of this Print Service's attribute set at the time of the &lt;code&gt;getAttributes()&lt;/code&gt; method call: that is, the returned attribute set's contents will</source>
          <target state="translated">이 인쇄 서비스의 상태를 제공하는이 인쇄 서비스의 프린터 설명 속성 세트를 가져옵니다. 리턴 된 속성 세트 오브젝트는 수정할 수 없습니다. 돌려 주어지는 속성 세트 객체는 &lt;code&gt;getAttributes()&lt;/code&gt; 메소드 호출 시에이 인쇄 서비스 속성 세트의 &quot;스냅 샷&quot;입니다 . 즉, 돌려 주어진 속성 세트의 내용은</target>
        </trans-unit>
        <trans-unit id="2d45a50d2cdef03d45eafbae2780b699bc617ec9" translate="yes" xml:space="preserve">
          <source>OceanTheme</source>
          <target state="translated">OceanTheme</target>
        </trans-unit>
        <trans-unit id="4ae976130c69a64ffea1f3542dd6f8504698df57" translate="yes" xml:space="preserve">
          <source>Octal escapes are not recognized.</source>
          <target state="translated">8 진 탈출은 인식되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f9ac86fef3f5dbbe1f7d1516906ede0f8592da1a" translate="yes" xml:space="preserve">
          <source>OctalDigits</source>
          <target state="translated">OctalDigits</target>
        </trans-unit>
        <trans-unit id="5fd7fac0f66d4b02450a79064f56d3806ab2f374" translate="yes" xml:space="preserve">
          <source>OctetStreamData</source>
          <target state="translated">OctetStreamData</target>
        </trans-unit>
        <trans-unit id="bc3885cfc5d77d6aefd8d1d592d25aaabc9176ec" translate="yes" xml:space="preserve">
          <source>Of course, interface &lt;code&gt;MultiDoc&lt;/code&gt; can be implemented in any way that fulfills the contract; it doesn't have to use a linked list in the implementation.</source>
          <target state="translated">Of course, interface &lt;code&gt;MultiDoc&lt;/code&gt; can be implemented in any way that fulfills the contract; it doesn't have to use a linked list in the implementation.</target>
        </trans-unit>
        <trans-unit id="23eb6111dc85f6fc053466e31e7bd1e912a6ed8f" translate="yes" xml:space="preserve">
          <source>Of course, interface MultiDoc can be implemented in any way that fulfills the contract; it doesn't have to use a linked list in the implementation.</source>
          <target state="translated">물론, MultiDoc 인터페이스는 계약을 이행하는 방식으로 구현 될 수 있습니다. 구현시 링크 된 목록을 사용할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="647543085659e19f7882eb64d2614e7283214f53" translate="yes" xml:space="preserve">
          <source>Of course, such operations can be readily implemented as simple sequential loops, as in:</source>
          <target state="translated">물론 이러한 작업은 다음과 같이 간단한 순차 루프로 쉽게 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74938e4f5f18c060fbc8ccc6312dde7c5a95278c" translate="yes" xml:space="preserve">
          <source>Of primary significance in this package is the &lt;a href=&quot;xmlsignature&quot;&gt;&lt;code&gt;XMLSignature&lt;/code&gt;&lt;/a&gt; class, which allows you to sign and validate an XML digital signature.</source>
          <target state="translated">Of primary significance in this package is the &lt;a href=&quot;xmlsignature&quot;&gt; &lt;code&gt;XMLSignature&lt;/code&gt; &lt;/a&gt; class, which allows you to sign and validate an XML digital signature.</target>
        </trans-unit>
        <trans-unit id="e8e6755ba1a75937de8b09f810ad12dd4d49977b" translate="yes" xml:space="preserve">
          <source>Of the form ::ffff:w.x.y.z, this IPv6 address is used to represent an IPv4 address. It allows the native program to use the same address data structure and also the same socket when communicating with both IPv4 and IPv6 nodes.</source>
          <target state="translated">Of the form ::ffff:w.x.y.z, this IPv6 address is used to represent an IPv4 address. It allows the native program to use the same address data structure and also the same socket when communicating with both IPv4 and IPv6 nodes.</target>
        </trans-unit>
        <trans-unit id="ce3dc80c4db739a6317fb7d492c83ea6842a25d1" translate="yes" xml:space="preserve">
          <source>Of the form::ffff:w.x.y.z, this IPv6 address is used to represent an IPv4 address. It allows the native program to use the same address data structure and also the same socket when communicating with both IPv4 and IPv6 nodes.</source>
          <target state="translated">:: ffff : wxyz 형식에서이 IPv6 주소는 IPv4 주소를 나타내는 데 사용됩니다. IPv4 및 IPv6 노드와 통신 할 때 기본 프로그램이 동일한 주소 데이터 구조와 동일한 소켓을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c438e271746106ce89f5a0cb2e491899f27ea6e4" translate="yes" xml:space="preserve">
          <source>Of the subtypes of Number, only Double, Integer and Long are supported.</source>
          <target state="translated">Of the subtypes of Number, only Double, Integer and Long are supported.</target>
        </trans-unit>
        <trans-unit id="2346e8295f86abb7be98a167973378a54914ec45" translate="yes" xml:space="preserve">
          <source>Offset into default (first) bank from which to get the first element.</source>
          <target state="translated">Offset into default (first) bank from which to get the first element.</target>
        </trans-unit>
        <trans-unit id="55d0e8dacf29036c87447053df41391cda04a4c7" translate="yes" xml:space="preserve">
          <source>Offset of field within instance data.</source>
          <target state="translated">인스턴스 데이터 내의 필드 오프셋</target>
        </trans-unit>
        <trans-unit id="14641d99380d595ab44ad4b4c4b5d8389f735373" translate="yes" xml:space="preserve">
          <source>Offset within instance data.</source>
          <target state="translated">인스턴스 데이터 내에서 오프셋.</target>
        </trans-unit>
        <trans-unit id="e80c498e4b8437e6cf72869d7bae745d591dd95e" translate="yes" xml:space="preserve">
          <source>Offset within the ending node of the Range.</source>
          <target state="translated">Offset within the ending node of the Range.</target>
        </trans-unit>
        <trans-unit id="d12dbca1f22338a8f7e4ee6b7eb2a0f17fa7f5c8" translate="yes" xml:space="preserve">
          <source>Offset within the starting node of the Range.</source>
          <target state="translated">Offset within the starting node of the Range.</target>
        </trans-unit>
        <trans-unit id="ac2b0b54660ddb4b995e020a9ebb1307a3076165" translate="yes" xml:space="preserve">
          <source>OffsetDateTime</source>
          <target state="translated">OffsetDateTime</target>
        </trans-unit>
        <trans-unit id="c41aec6c5f285744562cf406e0f45066662ab84b" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.adjustInto()</source>
          <target state="translated">OffsetDateTime.adjustInto()</target>
        </trans-unit>
        <trans-unit id="883406827d4ded7ce3851a69f8ef0efc4085c38a" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.atZoneSameInstant()</source>
          <target state="translated">OffsetDateTime.atZoneSameInstant()</target>
        </trans-unit>
        <trans-unit id="d45626cca634a1dc86b7e939b7784ab5c120e019" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.atZoneSimilarLocal()</source>
          <target state="translated">OffsetDateTime.atZoneSimilarLocal()</target>
        </trans-unit>
        <trans-unit id="3b39573cf3f06ad1f5deeab91d31f8375506a7aa" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.compareTo()</source>
          <target state="translated">OffsetDateTime.compareTo()</target>
        </trans-unit>
        <trans-unit id="7fbeb365e0778f202dbb1e179b44a614f16c9af7" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.equals()</source>
          <target state="translated">OffsetDateTime.equals()</target>
        </trans-unit>
        <trans-unit id="02974d87e1cd8eaa004ceb72fcb91682b33f7384" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.format()</source>
          <target state="translated">OffsetDateTime.format()</target>
        </trans-unit>
        <trans-unit id="68580f0c4113ee16f4444cd2610a1069d703afcc" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.from()</source>
          <target state="translated">OffsetDateTime.from()</target>
        </trans-unit>
        <trans-unit id="daf4d20f6a870fdd95b7b4f7fa9df9a0cb913aa9" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.get()</source>
          <target state="translated">OffsetDateTime.get()</target>
        </trans-unit>
        <trans-unit id="68e6ad9fde4d63d4493cb91c1d0db8206345cf61" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getDayOfMonth()</source>
          <target state="translated">OffsetDateTime.getDayOfMonth()</target>
        </trans-unit>
        <trans-unit id="3547e0c497db732528a8de9c5f9b749bd5f73ce1" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getDayOfWeek()</source>
          <target state="translated">OffsetDateTime.getDayOfWeek()</target>
        </trans-unit>
        <trans-unit id="99b1fc03d4a08c1b1b23eb12629d195f68e6f4e6" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getDayOfYear()</source>
          <target state="translated">OffsetDateTime.getDayOfYear()</target>
        </trans-unit>
        <trans-unit id="d5f6714040f964523f88a39d9e6e79e6e88c55bb" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getHour()</source>
          <target state="translated">OffsetDateTime.getHour()</target>
        </trans-unit>
        <trans-unit id="f6852ea8f63fdcd398c1781d8ca6aa75babeb2ef" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getLong()</source>
          <target state="translated">OffsetDateTime.getLong()</target>
        </trans-unit>
        <trans-unit id="d03ee6885edc4ce710d935d7608d05b0bf27be92" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getMinute()</source>
          <target state="translated">OffsetDateTime.getMinute()</target>
        </trans-unit>
        <trans-unit id="0e97766075a286ee99ba38c19865d49aabc4dad8" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getMonth()</source>
          <target state="translated">OffsetDateTime.getMonth()</target>
        </trans-unit>
        <trans-unit id="2bfd57c0fd564bece985a3c85b0a38d812ec7846" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getMonthValue()</source>
          <target state="translated">OffsetDateTime.getMonthValue()</target>
        </trans-unit>
        <trans-unit id="59e5be9d94b0142dde0441bfb4da1ff2feb32a00" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getNano()</source>
          <target state="translated">OffsetDateTime.getNano()</target>
        </trans-unit>
        <trans-unit id="d9f78b425218f81f1a97f44a02404a2c449bdcd8" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getOffset()</source>
          <target state="translated">OffsetDateTime.getOffset()</target>
        </trans-unit>
        <trans-unit id="b31a92f19bcbd29af1db98befa201114705588f3" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getSecond()</source>
          <target state="translated">OffsetDateTime.getSecond()</target>
        </trans-unit>
        <trans-unit id="623c529ae16c44c1c06f9e058d7c9472fc7f8d85" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getYear()</source>
          <target state="translated">OffsetDateTime.getYear()</target>
        </trans-unit>
        <trans-unit id="7e3d6098ef50c8b31a1162beea94d9e3868655b4" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.hashCode()</source>
          <target state="translated">OffsetDateTime.hashCode()</target>
        </trans-unit>
        <trans-unit id="4a2b28074c0e0768e001de2d739102be451d80d0" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.isAfter()</source>
          <target state="translated">OffsetDateTime.isAfter()</target>
        </trans-unit>
        <trans-unit id="e69c068c394bc741089d43c5d40898e456f5e2f6" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.isBefore()</source>
          <target state="translated">OffsetDateTime.isBefore()</target>
        </trans-unit>
        <trans-unit id="ecc14cccfcc604695ad3f6e23bcafc553434c375" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.isEqual()</source>
          <target state="translated">OffsetDateTime.isEqual()</target>
        </trans-unit>
        <trans-unit id="ba7e08e3edf5cefbc4c18210f044c32f76a70bde" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.isSupported()</source>
          <target state="translated">OffsetDateTime.isSupported()</target>
        </trans-unit>
        <trans-unit id="690b761ed8bde4699e10dd8dc360d843b0423996" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.minus()</source>
          <target state="translated">OffsetDateTime.minus()</target>
        </trans-unit>
        <trans-unit id="61b06a33117de29920567c6a0a042d08d63a6b70" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.minusDays()</source>
          <target state="translated">OffsetDateTime.minusDays()</target>
        </trans-unit>
        <trans-unit id="b59e2b69d011eaa79572944d35c9728ff743c515" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.minusHours()</source>
          <target state="translated">OffsetDateTime.minusHours()</target>
        </trans-unit>
        <trans-unit id="a0dd136fab7286dae499cf037e8b0d886e338489" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.minusMinutes()</source>
          <target state="translated">OffsetDateTime.minusMinutes()</target>
        </trans-unit>
        <trans-unit id="989b7c4bd2c1cdeecf2c644ebfcfb635fdd3b0de" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.minusMonths()</source>
          <target state="translated">OffsetDateTime.minusMonths()</target>
        </trans-unit>
        <trans-unit id="fabb642853f998ae5d66233c5d939e024fe260a0" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.minusNanos()</source>
          <target state="translated">OffsetDateTime.minusNanos()</target>
        </trans-unit>
        <trans-unit id="a4cac91160bd1cc5567a14f11fe161206657123c" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.minusSeconds()</source>
          <target state="translated">OffsetDateTime.minusSeconds()</target>
        </trans-unit>
        <trans-unit id="e2f6ce560dbdcbbdbddca8a9140e06a633b5ad31" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.minusWeeks()</source>
          <target state="translated">OffsetDateTime.minusWeeks()</target>
        </trans-unit>
        <trans-unit id="4fe85485925da310e27fcf3189bc21af26fe6b45" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.minusYears()</source>
          <target state="translated">OffsetDateTime.minusYears()</target>
        </trans-unit>
        <trans-unit id="ac0eadfdea16bda5b2c53879ce13a709de5b1a0e" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.now()</source>
          <target state="translated">OffsetDateTime.now()</target>
        </trans-unit>
        <trans-unit id="bad15dbddb712ecc4cb28a1464171de9f4ea9ec2" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.of()</source>
          <target state="translated">OffsetDateTime.of()</target>
        </trans-unit>
        <trans-unit id="590d30e887e46ee2f27641b040fc019ed82efb35" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.ofInstant()</source>
          <target state="translated">OffsetDateTime.ofInstant()</target>
        </trans-unit>
        <trans-unit id="f07d65432fdb839810b8f27fe42b13facbd68984" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.parse()</source>
          <target state="translated">OffsetDateTime.parse()</target>
        </trans-unit>
        <trans-unit id="f3200eda7283e9616deb63071d80818ef3aa1c24" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.plus()</source>
          <target state="translated">OffsetDateTime.plus()</target>
        </trans-unit>
        <trans-unit id="62b13d5bd9231a0cd0aa3a0375d6d9a9d1768af7" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.plusDays()</source>
          <target state="translated">OffsetDateTime.plusDays()</target>
        </trans-unit>
        <trans-unit id="cde980cb43435426b0ac362e28f4710e1f281fed" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.plusHours()</source>
          <target state="translated">OffsetDateTime.plusHours()</target>
        </trans-unit>
        <trans-unit id="697befe665e88c1752e23a7c7f58a770745043dd" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.plusMinutes()</source>
          <target state="translated">OffsetDateTime.plusMinutes()</target>
        </trans-unit>
        <trans-unit id="0870b88697b274da5aa2d9724355e1eccb1ecccf" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.plusMonths()</source>
          <target state="translated">OffsetDateTime.plusMonths()</target>
        </trans-unit>
        <trans-unit id="8f6e716f995d409f4f81b7259d435b628d1efceb" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.plusNanos()</source>
          <target state="translated">OffsetDateTime.plusNanos()</target>
        </trans-unit>
        <trans-unit id="13d3ddd0ca19f82f65157f364cd1fa8c36bf2cb4" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.plusSeconds()</source>
          <target state="translated">OffsetDateTime.plusSeconds()</target>
        </trans-unit>
        <trans-unit id="83d87d03b622bfacf770fed2a053167b07799fe4" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.plusWeeks()</source>
          <target state="translated">OffsetDateTime.plusWeeks()</target>
        </trans-unit>
        <trans-unit id="804a14fb5e04d522a9438f49e1639febbc6f4aa3" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.plusYears()</source>
          <target state="translated">OffsetDateTime.plusYears()</target>
        </trans-unit>
        <trans-unit id="1fad5fe05bfd9eb3f39cce1bf6dba3cb31c96f56" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.query()</source>
          <target state="translated">OffsetDateTime.query()</target>
        </trans-unit>
        <trans-unit id="19ab04f24bffe7594b773489b3d7c0acf1ece74f" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.range()</source>
          <target state="translated">OffsetDateTime.range()</target>
        </trans-unit>
        <trans-unit id="7623a002c9cbf41797585ee87fed57f546542cd6" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.timeLineOrder()</source>
          <target state="translated">OffsetDateTime.timeLineOrder()</target>
        </trans-unit>
        <trans-unit id="ceba7f83728a309654f486e0d3d87bf48e8fc8ff" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.toEpochSecond()</source>
          <target state="translated">OffsetDateTime.toEpochSecond()</target>
        </trans-unit>
        <trans-unit id="6b293f64b359c6f87f28c0d9c87c261a96d6e4b1" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.toInstant()</source>
          <target state="translated">OffsetDateTime.toInstant()</target>
        </trans-unit>
        <trans-unit id="af93128edb4894c49f5090d1500c805656278352" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.toLocalDate()</source>
          <target state="translated">OffsetDateTime.toLocalDate()</target>
        </trans-unit>
        <trans-unit id="7b11e36edd1d19cceca45b4863afaba11895932f" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.toLocalDateTime()</source>
          <target state="translated">OffsetDateTime.toLocalDateTime()</target>
        </trans-unit>
        <trans-unit id="4f45465e0d94ec9acf8979dc552d6daba781d1b1" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.toLocalTime()</source>
          <target state="translated">OffsetDateTime.toLocalTime()</target>
        </trans-unit>
        <trans-unit id="e65b6fb9df2be2044a248b61cbd94ae87dea7ed1" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.toOffsetTime()</source>
          <target state="translated">OffsetDateTime.toOffsetTime()</target>
        </trans-unit>
        <trans-unit id="8dcc138e658a0e7ab202d5e64ed7b1c005af2e69" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.toString()</source>
          <target state="translated">OffsetDateTime.toString()</target>
        </trans-unit>
        <trans-unit id="963ce2ee7bb6338dc7a03ea793fe34882b18392b" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.toZonedDateTime()</source>
          <target state="translated">OffsetDateTime.toZonedDateTime()</target>
        </trans-unit>
        <trans-unit id="c8c9ec38788f57f7abfc9844ba8e706ce8f5a50d" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.truncatedTo()</source>
          <target state="translated">OffsetDateTime.truncatedTo()</target>
        </trans-unit>
        <trans-unit id="f9bf957bf4caa5220ffa6131f857810a6f5a91e1" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.until()</source>
          <target state="translated">OffsetDateTime.until()</target>
        </trans-unit>
        <trans-unit id="df546baf5f3920f08817dd910a1617d31746bfdf" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.with()</source>
          <target state="translated">OffsetDateTime.with()</target>
        </trans-unit>
        <trans-unit id="5d12f3248d3982d3a88e7657591c2e407baf4753" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withDayOfMonth()</source>
          <target state="translated">OffsetDateTime.withDayOfMonth()</target>
        </trans-unit>
        <trans-unit id="54e7ce58c2f5b5afd8466ea6773e16d12d2ca7e6" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withDayOfYear()</source>
          <target state="translated">OffsetDateTime.withDayOfYear()</target>
        </trans-unit>
        <trans-unit id="a7a675c1dc1a5865dcdb9db22e2bb46089942207" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withHour()</source>
          <target state="translated">OffsetDateTime.withHour()</target>
        </trans-unit>
        <trans-unit id="64d4178db459f089ffd4f8ac11ca2358d3384c5b" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withMinute()</source>
          <target state="translated">OffsetDateTime.withMinute()</target>
        </trans-unit>
        <trans-unit id="552cba6a94bb27b0911a11040681364f8e43c8f5" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withMonth()</source>
          <target state="translated">OffsetDateTime.withMonth()</target>
        </trans-unit>
        <trans-unit id="ca20e8b871e8ce95b7f8458be246e185fef4befd" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withNano()</source>
          <target state="translated">OffsetDateTime.withNano()</target>
        </trans-unit>
        <trans-unit id="699c3998459062d47a5ee8012877adca4672e4dc" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withOffsetSameInstant()</source>
          <target state="translated">OffsetDateTime.withOffsetSameInstant()</target>
        </trans-unit>
        <trans-unit id="073ee38b7c62362ee31235682afebef1927cc619" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withOffsetSameLocal()</source>
          <target state="translated">OffsetDateTime.withOffsetSameLocal()</target>
        </trans-unit>
        <trans-unit id="e81acbcdfc6ac0c263baf3933bbe2f73c55addd2" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withSecond()</source>
          <target state="translated">OffsetDateTime.withSecond()</target>
        </trans-unit>
        <trans-unit id="541eed0abf3b607f01ef89a1b35d0babf5032a3a" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withYear()</source>
          <target state="translated">OffsetDateTime.withYear()</target>
        </trans-unit>
        <trans-unit id="6268d9a6f2437afd70fc260560fadb4b144986c7" translate="yes" xml:space="preserve">
          <source>OffsetId/Offset - the &lt;a href=&quot;../zoneoffset&quot;&gt;zone offset&lt;/a&gt;</source>
          <target state="translated">OffsetId / Offset- &lt;a href=&quot;../zoneoffset&quot;&gt;영역 오프셋&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f28365415fd289d5489db3a3d2dfb6e7e4298050" translate="yes" xml:space="preserve">
          <source>OffsetTime</source>
          <target state="translated">OffsetTime</target>
        </trans-unit>
        <trans-unit id="a13a2592cba0ebb271ae5ba013bc535a0d575c3a" translate="yes" xml:space="preserve">
          <source>OffsetTime.adjustInto()</source>
          <target state="translated">OffsetTime.adjustInto()</target>
        </trans-unit>
        <trans-unit id="0678fef803feb1af4f932a7a1c68f741d955d0cf" translate="yes" xml:space="preserve">
          <source>OffsetTime.atDate()</source>
          <target state="translated">OffsetTime.atDate()</target>
        </trans-unit>
        <trans-unit id="4c8d974e65c21b3dcf48d340f2730d1f881ff88c" translate="yes" xml:space="preserve">
          <source>OffsetTime.compareTo()</source>
          <target state="translated">OffsetTime.compareTo()</target>
        </trans-unit>
        <trans-unit id="03199b7ad7b8f9abc9ce24e52becd4613b8fa6a6" translate="yes" xml:space="preserve">
          <source>OffsetTime.equals()</source>
          <target state="translated">OffsetTime.equals()</target>
        </trans-unit>
        <trans-unit id="42921cb3a1bf6eb2bf1ede1d95d37057d633f225" translate="yes" xml:space="preserve">
          <source>OffsetTime.format()</source>
          <target state="translated">OffsetTime.format()</target>
        </trans-unit>
        <trans-unit id="2e2aecc8627d2b418b58c3e7fc5a60c97d3335f5" translate="yes" xml:space="preserve">
          <source>OffsetTime.from()</source>
          <target state="translated">OffsetTime.from()</target>
        </trans-unit>
        <trans-unit id="94a04bb07e3bdd7a60c754e4154ca7c632007a3d" translate="yes" xml:space="preserve">
          <source>OffsetTime.get()</source>
          <target state="translated">OffsetTime.get()</target>
        </trans-unit>
        <trans-unit id="a98ccada625bbc99491331060bdcd3da6d77a298" translate="yes" xml:space="preserve">
          <source>OffsetTime.getHour()</source>
          <target state="translated">OffsetTime.getHour()</target>
        </trans-unit>
        <trans-unit id="a3842312f2d07b8d529af4c12839c8f8cb166312" translate="yes" xml:space="preserve">
          <source>OffsetTime.getLong()</source>
          <target state="translated">OffsetTime.getLong()</target>
        </trans-unit>
        <trans-unit id="942c76847491de4fcf7a40430526654ee2a232dd" translate="yes" xml:space="preserve">
          <source>OffsetTime.getMinute()</source>
          <target state="translated">OffsetTime.getMinute()</target>
        </trans-unit>
        <trans-unit id="3a89044e99204979534ce8cd01d27059ebf6036e" translate="yes" xml:space="preserve">
          <source>OffsetTime.getNano()</source>
          <target state="translated">OffsetTime.getNano()</target>
        </trans-unit>
        <trans-unit id="44abe209c603f28f0d1f3a5abeef76d5ddb3fe94" translate="yes" xml:space="preserve">
          <source>OffsetTime.getOffset()</source>
          <target state="translated">OffsetTime.getOffset()</target>
        </trans-unit>
        <trans-unit id="6b9279dd9f42918422368a0c8c51a3ade74cf2df" translate="yes" xml:space="preserve">
          <source>OffsetTime.getSecond()</source>
          <target state="translated">OffsetTime.getSecond()</target>
        </trans-unit>
        <trans-unit id="2c865448a4ca4fea33f0da76ecbe673782053387" translate="yes" xml:space="preserve">
          <source>OffsetTime.hashCode()</source>
          <target state="translated">OffsetTime.hashCode()</target>
        </trans-unit>
        <trans-unit id="c4e7eeaca2b32e43f3beb4d902ad529870ddec01" translate="yes" xml:space="preserve">
          <source>OffsetTime.isAfter()</source>
          <target state="translated">OffsetTime.isAfter()</target>
        </trans-unit>
        <trans-unit id="96e3b83af4ebbf4dfb70a99bfd9223794a7d8a41" translate="yes" xml:space="preserve">
          <source>OffsetTime.isBefore()</source>
          <target state="translated">OffsetTime.isBefore()</target>
        </trans-unit>
        <trans-unit id="bd0f6c2c8bcef10666b9e435e329d0d511d8cdf6" translate="yes" xml:space="preserve">
          <source>OffsetTime.isEqual()</source>
          <target state="translated">OffsetTime.isEqual()</target>
        </trans-unit>
        <trans-unit id="2797e7eb99d115cee1ecc7685de3fe154124e353" translate="yes" xml:space="preserve">
          <source>OffsetTime.isSupported()</source>
          <target state="translated">OffsetTime.isSupported()</target>
        </trans-unit>
        <trans-unit id="cd7d73af67233d722882507d13242e38d059c140" translate="yes" xml:space="preserve">
          <source>OffsetTime.minus()</source>
          <target state="translated">OffsetTime.minus()</target>
        </trans-unit>
        <trans-unit id="79e64f90189f94cf9244718eba3ea84f1b9376a9" translate="yes" xml:space="preserve">
          <source>OffsetTime.minusHours()</source>
          <target state="translated">OffsetTime.minusHours()</target>
        </trans-unit>
        <trans-unit id="e0f9703bdd3786ed45ab2720017868a1f05de965" translate="yes" xml:space="preserve">
          <source>OffsetTime.minusMinutes()</source>
          <target state="translated">OffsetTime.minusMinutes()</target>
        </trans-unit>
        <trans-unit id="cf6dd6e18b921b3b68b65e9a1c9a9cadc2a49742" translate="yes" xml:space="preserve">
          <source>OffsetTime.minusNanos()</source>
          <target state="translated">OffsetTime.minusNanos()</target>
        </trans-unit>
        <trans-unit id="7e9df96581975c899599d8923c6d302214278aaf" translate="yes" xml:space="preserve">
          <source>OffsetTime.minusSeconds()</source>
          <target state="translated">OffsetTime.minusSeconds()</target>
        </trans-unit>
        <trans-unit id="4f0d692ad2bb64860314d5c4bda14a35b81fcc8e" translate="yes" xml:space="preserve">
          <source>OffsetTime.now()</source>
          <target state="translated">OffsetTime.now()</target>
        </trans-unit>
        <trans-unit id="22c87f74c85d68f18a74cb85d5a582ff3d2024a6" translate="yes" xml:space="preserve">
          <source>OffsetTime.of()</source>
          <target state="translated">OffsetTime.of()</target>
        </trans-unit>
        <trans-unit id="10edcabde1d15375d69a691f4b456037b3a682a3" translate="yes" xml:space="preserve">
          <source>OffsetTime.ofInstant()</source>
          <target state="translated">OffsetTime.ofInstant()</target>
        </trans-unit>
        <trans-unit id="ffe5cf6767c5efabcd313065583dd7f915b74b27" translate="yes" xml:space="preserve">
          <source>OffsetTime.parse()</source>
          <target state="translated">OffsetTime.parse()</target>
        </trans-unit>
        <trans-unit id="3705c2273ebeb8e26b877b2c0447013d5385a03a" translate="yes" xml:space="preserve">
          <source>OffsetTime.plus()</source>
          <target state="translated">OffsetTime.plus()</target>
        </trans-unit>
        <trans-unit id="6152019de4b90b9c0ee37bf444e481d083778c02" translate="yes" xml:space="preserve">
          <source>OffsetTime.plusHours()</source>
          <target state="translated">OffsetTime.plusHours()</target>
        </trans-unit>
        <trans-unit id="32e67193189b31e28c7282b5f87b8af61bf32936" translate="yes" xml:space="preserve">
          <source>OffsetTime.plusMinutes()</source>
          <target state="translated">OffsetTime.plusMinutes()</target>
        </trans-unit>
        <trans-unit id="e10d9152e738a449e54f5f1d6e33da5fed9b2adf" translate="yes" xml:space="preserve">
          <source>OffsetTime.plusNanos()</source>
          <target state="translated">OffsetTime.plusNanos()</target>
        </trans-unit>
        <trans-unit id="026eaab82b9ee6757faccfa25cfd6aabb396e2e3" translate="yes" xml:space="preserve">
          <source>OffsetTime.plusSeconds()</source>
          <target state="translated">OffsetTime.plusSeconds()</target>
        </trans-unit>
        <trans-unit id="2ea6b3297f5a80e4abd364be5c9592b348fba468" translate="yes" xml:space="preserve">
          <source>OffsetTime.query()</source>
          <target state="translated">OffsetTime.query()</target>
        </trans-unit>
        <trans-unit id="6826e78991f96d3e9136e4253dd4da6aadd821eb" translate="yes" xml:space="preserve">
          <source>OffsetTime.range()</source>
          <target state="translated">OffsetTime.range()</target>
        </trans-unit>
        <trans-unit id="22ea1005d8ae3ec5a982ef8628b6d1e5980d5e9c" translate="yes" xml:space="preserve">
          <source>OffsetTime.toLocalTime()</source>
          <target state="translated">OffsetTime.toLocalTime()</target>
        </trans-unit>
        <trans-unit id="02edb8261994af8580957550e0505065451f43ee" translate="yes" xml:space="preserve">
          <source>OffsetTime.toString()</source>
          <target state="translated">OffsetTime.toString()</target>
        </trans-unit>
        <trans-unit id="0534fa3f60bfb86f78fca7f0d3c04ef963ea700e" translate="yes" xml:space="preserve">
          <source>OffsetTime.truncatedTo()</source>
          <target state="translated">OffsetTime.truncatedTo()</target>
        </trans-unit>
        <trans-unit id="d7b9709c56ddf4b4ad82e280faf5973ddab97d92" translate="yes" xml:space="preserve">
          <source>OffsetTime.until()</source>
          <target state="translated">OffsetTime.until()</target>
        </trans-unit>
        <trans-unit id="e39a2e8bd3adb595e25291df904f9bc7f9ac9952" translate="yes" xml:space="preserve">
          <source>OffsetTime.with()</source>
          <target state="translated">OffsetTime.with()</target>
        </trans-unit>
        <trans-unit id="1152f4933bac7ed2259d179fc0591a5f84835ae6" translate="yes" xml:space="preserve">
          <source>OffsetTime.withHour()</source>
          <target state="translated">OffsetTime.withHour()</target>
        </trans-unit>
        <trans-unit id="d4ed4811fff3b6b90cace9b6348c19453796e45c" translate="yes" xml:space="preserve">
          <source>OffsetTime.withMinute()</source>
          <target state="translated">OffsetTime.withMinute()</target>
        </trans-unit>
        <trans-unit id="c5db9b88a02356cae1c59deb1796fc50261fbf0d" translate="yes" xml:space="preserve">
          <source>OffsetTime.withNano()</source>
          <target state="translated">OffsetTime.withNano()</target>
        </trans-unit>
        <trans-unit id="59ada4a315a5720c94c89a9f87cedc53db1fff27" translate="yes" xml:space="preserve">
          <source>OffsetTime.withOffsetSameInstant()</source>
          <target state="translated">OffsetTime.withOffsetSameInstant()</target>
        </trans-unit>
        <trans-unit id="a9109f4af1eb4cc40a29f132b4bfa9010789b10f" translate="yes" xml:space="preserve">
          <source>OffsetTime.withOffsetSameLocal()</source>
          <target state="translated">OffsetTime.withOffsetSameLocal()</target>
        </trans-unit>
        <trans-unit id="f2f1921de64083d780347c778ba880d6fede33fc" translate="yes" xml:space="preserve">
          <source>OffsetTime.withSecond()</source>
          <target state="translated">OffsetTime.withSecond()</target>
        </trans-unit>
        <trans-unit id="8733facc09513922bb7a0aee4a27eda6c933dbf6" translate="yes" xml:space="preserve">
          <source>Offsets for all bands in data array elements.</source>
          <target state="translated">Offsets for all bands in data array elements.</target>
        </trans-unit>
        <trans-unit id="811c6126ad46f9a37c140bbf155bdd6060b021a3" translate="yes" xml:space="preserve">
          <source>Offsets into all banks.</source>
          <target state="translated">Offsets into all banks.</target>
        </trans-unit>
        <trans-unit id="e885a56f59f01a52cd899ea78fc3e83e7f9e862f" translate="yes" xml:space="preserve">
          <source>Often, the</source>
          <target state="translated">Often, the</target>
        </trans-unit>
        <trans-unit id="431423baf1c171fef1ed0c3e1e1f826f45e0e3e3" translate="yes" xml:space="preserve">
          <source>Oid</source>
          <target state="translated">Oid</target>
        </trans-unit>
        <trans-unit id="fe4e7464bbfbdce1ed03749d27baaedc5db47cbf" translate="yes" xml:space="preserve">
          <source>Oid indicating a host-based service name form.</source>
          <target state="translated">Oid indicating a host-based service name form.</target>
        </trans-unit>
        <trans-unit id="2328ec453a162e7ae2e0b9c2c444576e980dda5c" translate="yes" xml:space="preserve">
          <source>Oid indicating a host-based service name form. It is used to represent services associated with host computers. This name form is constructed using two elements, &quot;service&quot; and &quot;hostname&quot;, as follows: service@hostname.</source>
          <target state="translated">Oid indicating a host-based service name form. It is used to represent services associated with host computers. This name form is constructed using two elements, &quot;service&quot; and &quot;hostname&quot;, as follows: service@hostname.</target>
        </trans-unit>
        <trans-unit id="9922eac122a4869c5a89f3cb3d1716a812194ee8" translate="yes" xml:space="preserve">
          <source>Oids are hierarchically globally-interpretable identifiers used within the GSS-API framework to identify mechanisms and name formats.</source>
          <target state="translated">Oids are hierarchically globally-interpretable identifiers used within the GSS-API framework to identify mechanisms and name formats.</target>
        </trans-unit>
        <trans-unit id="3ff672978ce9c46d0d6fcdf9be4c27ae67c2b40b" translate="yes" xml:space="preserve">
          <source>Old algorithm names used before JDK 9 are supported in the &lt;a href=&quot;#%3Cinit%3E(javax.security.auth.kerberos.KerberosPrincipal,char%5B%5D,java.lang.String)&quot;&gt;&lt;code&gt;KerberosKey(KerberosPrincipal, char[], String)&lt;/code&gt;&lt;/a&gt; constructor in this implementation for compatibility reasons, which are &quot;DES&quot; (and null) for &quot;des-cbc-md5&quot;, &quot;DESede&quot; for &quot;des3-cbc-sha1-kd&quot;, &quot;ArcFourHmac&quot; for &quot;rc4-hmac&quot;, &quot;AES128&quot; for &quot;aes128-cts-hmac-sha1-96&quot;, and &quot;AES256&quot; for &quot;aes256-cts-hmac-sha1-96&quot;.</source>
          <target state="translated">Old algorithm names used before JDK 9 are supported in the &lt;a href=&quot;#%3Cinit%3E(javax.security.auth.kerberos.KerberosPrincipal,char%5B%5D,java.lang.String)&quot;&gt; &lt;code&gt;KerberosKey(KerberosPrincipal, char[], String)&lt;/code&gt; &lt;/a&gt; constructor in this implementation for compatibility reasons, which are &quot;DES&quot; (and null) for &quot;des-cbc-md5&quot;, &quot;DESede&quot; for &quot;des3-cbc-sha1-kd&quot;, &quot;ArcFourHmac&quot; for &quot;rc4-hmac&quot;, &quot;AES128&quot; for &quot;aes128-cts-hmac-sha1-96&quot;, and &quot;AES256&quot; for &quot;aes256-cts-hmac-sha1-96&quot;.</target>
        </trans-unit>
        <trans-unit id="79d79ca9b1592790f41f9180ff660633b6f6c5c9" translate="yes" xml:space="preserve">
          <source>Omitted clause functions are ignored. (Equivalently, they are deemed to have empty parameter lists.)</source>
          <target state="translated">Omitted clause functions are ignored. (Equivalently, they are deemed to have empty parameter lists.)</target>
        </trans-unit>
        <trans-unit id="98ccc29895f61559eba0ebd405fe8464bba9ceb4" translate="yes" xml:space="preserve">
          <source>Omitting nodes from the logical view of a subtree can result in a structure that is substantially different from the same subtree in the complete, unfiltered document. Nodes that are siblings in the &lt;code&gt;TreeWalker&lt;/code&gt; view may be children of different, widely separated nodes in the original view. For instance, consider a &lt;code&gt;NodeFilter&lt;/code&gt; that skips all nodes except for Text nodes and the root node of a document. In the logical view that results, all text nodes will be siblings and appear as direct children of the root node, no matter how deeply nested the structure of the original document.</source>
          <target state="translated">Omitting nodes from the logical view of a subtree can result in a structure that is substantially different from the same subtree in the complete, unfiltered document. Nodes that are siblings in the &lt;code&gt;TreeWalker&lt;/code&gt; view may be children of different, widely separated nodes in the original view. For instance, consider a &lt;code&gt;NodeFilter&lt;/code&gt; that skips all nodes except for Text nodes and the root node of a document. In the logical view that results, all text nodes will be siblings and appear as direct children of the root node, no matter how deeply nested the structure of the original document.</target>
        </trans-unit>
        <trans-unit id="232c0c0993bc881715ba599b9b67f06ae810f7f5" translate="yes" xml:space="preserve">
          <source>On UNIX systems the alphabetic case of &lt;code&gt;name&lt;/code&gt; is typically significant, while on Microsoft Windows systems it is typically not. For example, the expression &lt;code&gt;System.getenv(&quot;FOO&quot;).equals(System.getenv(&quot;foo&quot;))&lt;/code&gt; is likely to be true on Microsoft Windows.</source>
          <target state="translated">UNIX 시스템에서는 &lt;code&gt;name&lt;/code&gt; 의 알파벳 문자 가 일반적으로 중요하지만 Microsoft Windows 시스템에서는 일반적으로 그렇지 않습니다. 예를 들어, &lt;code&gt;System.getenv(&quot;FOO&quot;).equals(System.getenv(&quot;foo&quot;))&lt;/code&gt; 식은 Microsoft Windows에서 true 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8540232f9031df68bbc8f1919d8354f9fb5d4eed" translate="yes" xml:space="preserve">
          <source>On UNIX systems, it returns &lt;code&gt;&quot;\n&quot;&lt;/code&gt;; on Microsoft Windows systems it returns &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt;.</source>
          <target state="translated">UNIX 시스템에서는 &lt;code&gt;&quot;\n&quot;&lt;/code&gt; 반환합니다 . Microsoft Windows 시스템에서는 &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="eac5e1c52c598a03cd27121ae9aeba5087192731" translate="yes" xml:space="preserve">
          <source>On Windows, a file can appear in multiple folders, other than its parent directory in the filesystem.</source>
          <target state="translated">On Windows, a file can appear in multiple folders, other than its parent directory in the filesystem.</target>
        </trans-unit>
        <trans-unit id="fb9fac545ac5b0edf4cd40280dce95442db9108f" translate="yes" xml:space="preserve">
          <source>On Windows, a file can appear in multiple folders, other than its parent directory in the filesystem. Folder could for example be the &quot;Desktop&quot; folder which is not the same as file.getParentFile().</source>
          <target state="translated">On Windows, a file can appear in multiple folders, other than its parent directory in the filesystem. Folder could for example be the &quot;Desktop&quot; folder which is not the same as file.getParentFile().</target>
        </trans-unit>
        <trans-unit id="b3d5df6ca1426823dad626b7a0ad499acd678cdb" translate="yes" xml:space="preserve">
          <source>On each logging call the Logger initially performs a cheap check of the request level (e.g., SEVERE or FINE) against the effective log level of the logger. If the request level is lower than the log level, the logging call returns immediately.</source>
          <target state="translated">각 로깅 호출에서 로거는 초기에 로거의 유효 로그 레벨에 대해 요청 레벨 (예 : SEVERE 또는 FINE)을 저렴하게 점검합니다. 요청 수준이 로그 수준보다 낮 으면 로깅 호출이 즉시 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1f64d724cf2877dba41d4ea6a74e08ac2e662a81" translate="yes" xml:space="preserve">
          <source>On every call to &lt;code&gt;canImport&lt;/code&gt;, the &lt;code&gt;TransferSupport&lt;/code&gt; contains fresh state. As such, any properties set on it must be set on every call. Upon a drop, &lt;code&gt;canImport&lt;/code&gt; is called one final time before calling into &lt;code&gt;importData&lt;/code&gt;. Any state set on the &lt;code&gt;TransferSupport&lt;/code&gt; during that last call will be available in &lt;code&gt;importData&lt;/code&gt;.</source>
          <target state="translated">On every call to &lt;code&gt;canImport&lt;/code&gt; , the &lt;code&gt;TransferSupport&lt;/code&gt; contains fresh state. As such, any properties set on it must be set on every call. Upon a drop, &lt;code&gt;canImport&lt;/code&gt; is called one final time before calling into &lt;code&gt;importData&lt;/code&gt; . Any state set on the &lt;code&gt;TransferSupport&lt;/code&gt; during that last call will be available in &lt;code&gt;importData&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a03949c2d89c4489d446e1ff0c7f85905a4413ca" translate="yes" xml:space="preserve">
          <source>On getting, no serialization is performed, the returned string does not contain any markup. No whitespace normalization is performed and the returned string does not contain the white spaces in element content (see the attribute &lt;code&gt;Text.isElementContentWhitespace&lt;/code&gt;). Similarly, on setting, no parsing is performed either, the input string is taken as pure textual content.</source>
          <target state="translated">On getting, no serialization is performed, the returned string does not contain any markup. No whitespace normalization is performed and the returned string does not contain the white spaces in element content (see the attribute &lt;code&gt;Text.isElementContentWhitespace&lt;/code&gt; ). Similarly, on setting, no parsing is performed either, the input string is taken as pure textual content.</target>
        </trans-unit>
        <trans-unit id="851bf7822d836ae8425a0447bc4f86d79d80cfc3" translate="yes" xml:space="preserve">
          <source>On key release?</source>
          <target state="translated">On key release?</target>
        </trans-unit>
        <trans-unit id="edcace2263423791ccc7fce7918b938adabb4aa8" translate="yes" xml:space="preserve">
          <source>On many devices the supported number of collated copies will be limited by the number of physical output bins on the device, and may be different from the number of uncollated copies which can be supported.</source>
          <target state="translated">많은 장치에서 지원되는 한 부씩 인쇄 된 복사본 수는 장치의 실제 출력 용지함 수에 의해 제한되며 지원 될 수있는 한 부씩 인쇄되지 않은 복사본 수와 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4bd0234528f52a9915ff343c4780f0afdeb1aea5" translate="yes" xml:space="preserve">
          <source>On many operating systems a process, such as a Java virtual machine, can be started in a manner that allows the process to inherit a channel from the entity that created the process. The manner in which this is done is system dependent, as are the possible entities to which the channel may be connected. For example, on UNIX systems, the Internet services daemon (</source>
          <target state="translated">많은 운영 체제에서 Java 가상 머신과 같은 프로세스를 프로세스가 작성된 엔티티에서 채널을 상속 할 수있는 방식으로 시작할 수 있습니다. 이것이 수행되는 방식은 채널이 연결될 수있는 가능한 엔티티와 마찬가지로 시스템에 의존한다. 예를 들어, UNIX 시스템에서 인터넷 서비스 디먼 (</target>
        </trans-unit>
        <trans-unit id="72b5d80466d6edf2be0d318877cf3e7067e502a2" translate="yes" xml:space="preserve">
          <source>On many platforms and file systems an entity requires appropriate access rights or permissions in order to access objects in a file system. The access rights are generally performed by checking the identity of the entity. For example, on implementations that use Access Control Lists (ACLs) to enforce privilege separation then a file in the file system may have an associated ACL that determines the access rights of identities specified in the ACL.</source>
          <target state="translated">많은 플랫폼 및 파일 시스템에서 파일 시스템의 객체에 액세스하려면 엔티티에 적절한 액세스 권한 또는 권한이 필요합니다. 액세스 권한은 일반적으로 엔터티의 ID를 확인하여 수행됩니다. 예를 들어, ACL (액세스 제어 목록)을 사용하여 권한 분리를 구현하는 구현에서 파일 시스템의 파일에는 ACL에 지정된 ID의 액세스 권한을 결정하는 관련 ACL이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="024d92e0b33adea5f0e7977c1c99bbda64151812" translate="yes" xml:space="preserve">
          <source>On platforms where the stacking order does not typically affect the focused window, this method will &lt;b&gt;probably&lt;/b&gt; leave the focused and active Windows unchanged.</source>
          <target state="translated">On platforms where the stacking order does not typically affect the focused window, this method will &lt;b&gt;probably&lt;/b&gt; leave the focused and active Windows unchanged.</target>
        </trans-unit>
        <trans-unit id="e3a796c0f8e97c2237846a5b99d3e17896a8f7e9" translate="yes" xml:space="preserve">
          <source>On retrieval, the default value of this attribute is the implementation specific default end-of-line sequence. DOM implementations should choose the default to match the usual convention for text files in the environment being used. Implementations must choose a default sequence that matches one of those allowed by XML 1.0 or XML 1.1, depending on the serialized content. Setting this attribute to &lt;code&gt;null&lt;/code&gt; will reset its value to the default value.</source>
          <target state="translated">On retrieval, the default value of this attribute is the implementation specific default end-of-line sequence. DOM implementations should choose the default to match the usual convention for text files in the environment being used. Implementations must choose a default sequence that matches one of those allowed by XML 1.0 or XML 1.1, depending on the serialized content. Setting this attribute to &lt;code&gt;null&lt;/code&gt; will reset its value to the default value.</target>
        </trans-unit>
        <trans-unit id="b34292a88a101f55a02d0744c3ca274828631fb8" translate="yes" xml:space="preserve">
          <source>On retrieval, the value of the attribute is returned as a string.</source>
          <target state="translated">On retrieval, the value of the attribute is returned as a string.</target>
        </trans-unit>
        <trans-unit id="fa0725825c25fcfec84557d57f63e3df01d91184" translate="yes" xml:space="preserve">
          <source>On retrieval, the value of the attribute is returned as a string. Character and general entity references are replaced with their values. See also the method &lt;code&gt;getAttribute&lt;/code&gt; on the &lt;code&gt;Element&lt;/code&gt; interface.</source>
          <target state="translated">On retrieval, the value of the attribute is returned as a string. Character and general entity references are replaced with their values. See also the method &lt;code&gt;getAttribute&lt;/code&gt; on the &lt;code&gt;Element&lt;/code&gt; interface.</target>
        </trans-unit>
        <trans-unit id="3177bf09a4050209ced0e2c771f73dc651d24d64" translate="yes" xml:space="preserve">
          <source>On setting, this creates a &lt;code&gt;Text&lt;/code&gt; node with the unparsed contents of the string, i.e. any characters that an XML processor would recognize as markup are instead treated as literal text. See also the method &lt;code&gt;Element.setAttribute()&lt;/code&gt;.</source>
          <target state="translated">On setting, this creates a &lt;code&gt;Text&lt;/code&gt; node with the unparsed contents of the string, i.e. any characters that an XML processor would recognize as markup are instead treated as literal text. See also the method &lt;code&gt;Element.setAttribute()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc6eddfcd60298338272e6a8b03154a5f8213d8d" translate="yes" xml:space="preserve">
          <source>On some operating systems it may not be possible to remove a file when it is open and in use by this Java virtual machine or other programs.</source>
          <target state="translated">일부 운영 체제에서는이 Java 가상 머신 또는 다른 프로그램에서 파일을 열고 사용중인 경우 파일을 제거하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5881b1736c49efe5c7206c5cd94698903d56268" translate="yes" xml:space="preserve">
          <source>On some platforms the system tray may not be present or may not be supported, in this case &lt;a href=&quot;#getSystemTray()&quot;&gt;&lt;code&gt;getSystemTray()&lt;/code&gt;&lt;/a&gt; throws &lt;a href=&quot;../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;. To detect whether the system tray is supported, use &lt;a href=&quot;#isSupported()&quot;&gt;&lt;code&gt;isSupported()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">On some platforms the system tray may not be present or may not be supported, in this case &lt;a href=&quot;#getSystemTray()&quot;&gt; &lt;code&gt;getSystemTray()&lt;/code&gt; &lt;/a&gt; throws &lt;a href=&quot;../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;. To detect whether the system tray is supported, use &lt;a href=&quot;#isSupported()&quot;&gt; &lt;code&gt;isSupported()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="53d29355ffc203d01f71cd51fbdb8fc5ccc4d48d" translate="yes" xml:space="preserve">
          <source>On some platforms, native applications are free to change the arguments array after startup and this method may only show the changed values.</source>
          <target state="translated">On some platforms, native applications are free to change the arguments array after startup and this method may only show the changed values.</target>
        </trans-unit>
        <trans-unit id="1707e8fc59e4af68b5318028fe70642c9ad64697" translate="yes" xml:space="preserve">
          <source>On some platforms, specifying a higher value for the &lt;code&gt;stackSize&lt;/code&gt; parameter may allow a thread to achieve greater recursion depth before throwing a &lt;a href=&quot;stackoverflowerror&quot;&gt;&lt;code&gt;StackOverflowError&lt;/code&gt;&lt;/a&gt;. Similarly, specifying a lower value may allow a greater number of threads to exist concurrently without throwing an &lt;a href=&quot;outofmemoryerror&quot;&gt;&lt;code&gt;OutOfMemoryError&lt;/code&gt;&lt;/a&gt; (or other internal error). The details of the relationship between the value of the &lt;code&gt;stackSize&lt;/code&gt; parameter and the maximum recursion depth and concurrency level are platform-dependent. &lt;b&gt;On some platforms, the value of the &lt;code&gt;stackSize&lt;/code&gt; parameter may have no effect whatsoever.&lt;/b&gt;</source>
          <target state="translated">일부 플랫폼에서 &lt;code&gt;stackSize&lt;/code&gt; 매개 변수에 더 높은 값을 지정 하면 &lt;a href=&quot;stackoverflowerror&quot;&gt; &lt;code&gt;StackOverflowError&lt;/code&gt; &lt;/a&gt; 를 throw하기 전에 스레드가 더 큰 재귀 깊이를 얻을 수 있습니다 . 마찬가지로 낮은 값을 지정하면 &lt;a href=&quot;outofmemoryerror&quot;&gt; &lt;code&gt;OutOfMemoryError&lt;/code&gt; &lt;/a&gt; (또는 다른 내부 오류)를 발생 시키지 않고 더 많은 수의 스레드가 동시에 존재할 수 있습니다 . &lt;code&gt;stackSize&lt;/code&gt; 매개 변수 값 과 최대 재귀 수준 및 동시성 수준 간의 관계에 대한 자세한 내용 은 플랫폼에 따라 다릅니다. &lt;b&gt;일부 플랫폼에서는 &lt;code&gt;stackSize&lt;/code&gt; 매개 변수 의 값 이 전혀 영향을 미치지 않을 수 있습니다.&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="77e681894db6c889d58a3a2929aa79a177e765c6" translate="yes" xml:space="preserve">
          <source>On some systems, acquiring a mandatory lock on a region of a file prevents that region from being &lt;a href=&quot;filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt;&lt;code&gt;&lt;i&gt;mapped into memory&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, and vice versa. Programs that combine locking and mapping should be prepared for this combination to fail.</source>
          <target state="translated">On some systems, acquiring a mandatory lock on a region of a file prevents that region from being &lt;a href=&quot;filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt; &lt;code&gt;&lt;i&gt;mapped into memory&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;, and vice versa. Programs that combine locking and mapping should be prepared for this combination to fail.</target>
        </trans-unit>
        <trans-unit id="b6529ca18bc4f8890043fa10e940b4821d51cdca" translate="yes" xml:space="preserve">
          <source>On some systems, acquiring a mandatory lock on a region of a file prevents that region from being &lt;a href=&quot;filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt;&lt;code&gt;&lt;i&gt;mapped into memory&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, and vice versa. Programs that combine locking and mapping should be prepared for this combination to fail.</source>
          <target state="translated">일부 시스템에서는 파일 영역에서 필수 잠금을 획득하면 해당 영역이 &lt;a href=&quot;filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt; &lt;code&gt;&lt;i&gt;mapped into memory&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 에 &lt;i&gt;매핑&lt;/i&gt; 되지 않으며 그 반대도 마찬가지입니다. 이 조합이 실패하려면 잠금 및 맵핑을 결합한 프로그램을 준비해야합니다.</target>
        </trans-unit>
        <trans-unit id="0714d700f0fd7c6db4138a7f92cdf74c381bac3a" translate="yes" xml:space="preserve">
          <source>On some systems, closing a channel releases all locks held by the Java virtual machine on the underlying file regardless of whether the locks were acquired via that channel or via another channel open on the same file. It is strongly recommended that, within a program, a unique channel be used to acquire all locks on any given file.</source>
          <target state="translated">일부 시스템에서 채널을 닫으면 잠금이 해당 채널을 통해 획득되었는지 또는 동일한 파일에서 열린 다른 채널을 통해 획득되었는지에 관계없이 기본 파일에서 Java 가상 머신이 보유한 모든 잠금을 해제합니다. 프로그램 내에서 고유 한 채널을 사용하여 특정 파일의 모든 잠금을 획득하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="9f13c2b03997e45bdee84ec9f6d0af9e1ffb5c00" translate="yes" xml:space="preserve">
          <source>On startup, the value is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">시작시 값이 &lt;code&gt;true&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="a638283a8477546e6d0afc175d9a48859c0f17af" translate="yes" xml:space="preserve">
          <source>On success, the position of the given &lt;code&gt;output&lt;/code&gt; byte buffer will be advanced by as many bytes as were produced by the operation, which is equal to the number returned by this method.</source>
          <target state="translated">On success, the position of the given &lt;code&gt;output&lt;/code&gt; byte buffer will be advanced by as many bytes as were produced by the operation, which is equal to the number returned by this method.</target>
        </trans-unit>
        <trans-unit id="67127d568e6b609d73fb12acc209c8cafd0dd8ef" translate="yes" xml:space="preserve">
          <source>On success, the position of the given &lt;code&gt;output&lt;/code&gt; byte buffer will be advanced by as many bytes as were produced by the operation, which is equal to the number returned by this method. Note that the position of the &lt;code&gt;output&lt;/code&gt; buffer will be advanced even in the event that a &lt;a href=&quot;dataformatexception&quot;&gt;&lt;code&gt;DataFormatException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">On success, the position of the given &lt;code&gt;output&lt;/code&gt; byte buffer will be advanced by as many bytes as were produced by the operation, which is equal to the number returned by this method. Note that the position of the &lt;code&gt;output&lt;/code&gt; buffer will be advanced even in the event that a &lt;a href=&quot;dataformatexception&quot;&gt; &lt;code&gt;DataFormatException&lt;/code&gt; &lt;/a&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="9f2a06dd3e9907f63132e8432910199ee3677f5a" translate="yes" xml:space="preserve">
          <source>On the other hand, if a DRBG implementation does not contain a constructor that has an &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; argument (not recommended), it can only be chosen by a &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; without a &lt;code&gt;SecureRandomParameters&lt;/code&gt; parameter, but will not be chosen if a &lt;code&gt;getInstance&lt;/code&gt; method with a &lt;code&gt;SecureRandomParameters&lt;/code&gt; parameter is called. If implemented this way, its &lt;a href=&quot;securerandom#getParameters()&quot;&gt;&lt;code&gt;SecureRandom.getParameters()&lt;/code&gt;&lt;/a&gt; must return &lt;code&gt;null&lt;/code&gt;, and it does not need to implement either &lt;a href=&quot;securerandomspi#engineNextBytes(byte%5B%5D,java.security.SecureRandomParameters)&quot;&gt;&lt;code&gt;SecureRandomSpi.engineNextBytes(byte[], SecureRandomParameters)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;securerandomspi#engineReseed(java.security.SecureRandomParameters)&quot;&gt;&lt;code&gt;SecureRandomSpi.engineReseed(SecureRandomParameters)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">On the other hand, if a DRBG implementation does not contain a constructor that has an &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; argument (not recommended), it can only be chosen by a &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; without a &lt;code&gt;SecureRandomParameters&lt;/code&gt; parameter, but will not be chosen if a &lt;code&gt;getInstance&lt;/code&gt; method with a &lt;code&gt;SecureRandomParameters&lt;/code&gt; parameter is called. If implemented this way, its &lt;a href=&quot;securerandom#getParameters()&quot;&gt; &lt;code&gt;SecureRandom.getParameters()&lt;/code&gt; &lt;/a&gt; must return &lt;code&gt;null&lt;/code&gt; , and it does not need to implement either &lt;a href=&quot;securerandomspi#engineNextBytes(byte%5B%5D,java.security.SecureRandomParameters)&quot;&gt; &lt;code&gt;SecureRandomSpi.engineNextBytes(byte[], SecureRandomParameters)&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;securerandomspi#engineReseed(java.security.SecureRandomParameters)&quot;&gt; &lt;code&gt;SecureRandomSpi.engineReseed(SecureRandomParameters)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="de159c7cf958aa1a47054cd99e69c6cd42f170f0" translate="yes" xml:space="preserve">
          <source>On the other hand, the 800-90Ar1 specification does have some configurable options, such as:</source>
          <target state="translated">On the other hand, the 800-90Ar1 specification does have some configurable options, such as:</target>
        </trans-unit>
        <trans-unit id="854932a1809fd6314af1fac1dbf30521c427cc1c" translate="yes" xml:space="preserve">
          <source>On the other hand, the following do not affect equality: the &lt;code&gt;ownerDocument&lt;/code&gt;, &lt;code&gt;baseURI&lt;/code&gt;, and &lt;code&gt;parentNode&lt;/code&gt; attributes, the &lt;code&gt;specified&lt;/code&gt; attribute for &lt;code&gt;Attr&lt;/code&gt; nodes, the &lt;code&gt;schemaTypeInfo&lt;/code&gt; attribute for &lt;code&gt;Attr&lt;/code&gt; and &lt;code&gt;Element&lt;/code&gt; nodes, the &lt;code&gt;Text.isElementContentWhitespace&lt;/code&gt; attribute for &lt;code&gt;Text&lt;/code&gt; nodes, as well as any user data or event listeners registered on the nodes.</source>
          <target state="translated">On the other hand, the following do not affect equality: the &lt;code&gt;ownerDocument&lt;/code&gt; , &lt;code&gt;baseURI&lt;/code&gt; , and &lt;code&gt;parentNode&lt;/code&gt; attributes, the &lt;code&gt;specified&lt;/code&gt; attribute for &lt;code&gt;Attr&lt;/code&gt; nodes, the &lt;code&gt;schemaTypeInfo&lt;/code&gt; attribute for &lt;code&gt;Attr&lt;/code&gt; and &lt;code&gt;Element&lt;/code&gt; nodes, the &lt;code&gt;Text.isElementContentWhitespace&lt;/code&gt; attribute for &lt;code&gt;Text&lt;/code&gt; nodes, as well as any user data or event listeners registered on the nodes.</target>
        </trans-unit>
        <trans-unit id="283588660a3934587690d8e1b3b6529e92ee877f" translate="yes" xml:space="preserve">
          <source>On-demand construction</source>
          <target state="translated">주문형 건설</target>
        </trans-unit>
        <trans-unit id="d158b76cb30297096f97ea3185a146c19c0aa713" translate="yes" xml:space="preserve">
          <source>Once &amp;lt;/html&amp;gt; is encountered, the Actions are no longer notified.</source>
          <target state="translated">Once &amp;lt;/html&amp;gt; is encountered, the Actions are no longer notified.</target>
        </trans-unit>
        <trans-unit id="88fb78745f80637dec92b6c9686ce7d188a45ac7" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;end&lt;/code&gt; has been invoked on an &lt;code&gt;UndoManager&lt;/code&gt; the superclass behavior is used for all &lt;code&gt;UndoableEdit&lt;/code&gt; methods. Refer to &lt;code&gt;CompoundEdit&lt;/code&gt; for more details on its behavior.</source>
          <target state="translated">Once &lt;code&gt;end&lt;/code&gt; has been invoked on an &lt;code&gt;UndoManager&lt;/code&gt; the superclass behavior is used for all &lt;code&gt;UndoableEdit&lt;/code&gt; methods. Refer to &lt;code&gt;CompoundEdit&lt;/code&gt; for more details on its behavior.</target>
        </trans-unit>
        <trans-unit id="cd0ec02472f84a817ffbf2b5519b9e40e85d2d53" translate="yes" xml:space="preserve">
          <source>Once a &lt;code&gt;CertPathBuilder&lt;/code&gt; object has been created, certification paths can be constructed by calling the &lt;a href=&quot;#build(java.security.cert.CertPathParameters)&quot;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt; method and passing it an algorithm-specific set of parameters. If successful, the result (including the &lt;code&gt;CertPath&lt;/code&gt; that was built) is returned in an object that implements the &lt;code&gt;CertPathBuilderResult&lt;/code&gt; interface.</source>
          <target state="translated">Once a &lt;code&gt;CertPathBuilder&lt;/code&gt; object has been created, certification paths can be constructed by calling the &lt;a href=&quot;#build(java.security.cert.CertPathParameters)&quot;&gt; &lt;code&gt;build&lt;/code&gt; &lt;/a&gt; method and passing it an algorithm-specific set of parameters. If successful, the result (including the &lt;code&gt;CertPath&lt;/code&gt; that was built) is returned in an object that implements the &lt;code&gt;CertPathBuilderResult&lt;/code&gt; interface.</target>
        </trans-unit>
        <trans-unit id="58378f9e086bd00657611f0ada9c83f32fb6eb1b" translate="yes" xml:space="preserve">
          <source>Once a &lt;code&gt;CertPathBuilder&lt;/code&gt; object has been created, certification paths can be constructed by calling the &lt;a href=&quot;certpathbuilder#build-java.security.cert.CertPathParameters-&quot;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt; method and passing it an algorithm-specific set of parameters. If successful, the result (including the &lt;code&gt;CertPath&lt;/code&gt; that was built) is returned in an object that implements the &lt;code&gt;CertPathBuilderResult&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;CertPathBuilder&lt;/code&gt; 객체가 작성 되면 (자) , &lt;a href=&quot;certpathbuilder#build-java.security.cert.CertPathParameters-&quot;&gt; &lt;code&gt;build&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 해 알고리즘 고유의 파라미터 세트를 건네 주어 증명서 패스를 구축 할 수 있습니다 . 성공 하면 &lt;code&gt;CertPathBuilderResult&lt;/code&gt; 인터페이스 를 구현하는 객체에 결과 ( 빌드 된 &lt;code&gt;CertPath&lt;/code&gt; 포함 )가 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="e3d0636867cb3d10bf7678ca02bddb1ad386454e" translate="yes" xml:space="preserve">
          <source>Once a &lt;code&gt;CertPathValidator&lt;/code&gt; object has been created, it can be used to validate certification paths by calling the &lt;a href=&quot;#validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)&quot;&gt;&lt;code&gt;validate&lt;/code&gt;&lt;/a&gt; method and passing it the &lt;code&gt;CertPath&lt;/code&gt; to be validated and an algorithm-specific set of parameters. If successful, the result is returned in an object that implements the &lt;code&gt;CertPathValidatorResult&lt;/code&gt; interface.</source>
          <target state="translated">Once a &lt;code&gt;CertPathValidator&lt;/code&gt; object has been created, it can be used to validate certification paths by calling the &lt;a href=&quot;#validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)&quot;&gt; &lt;code&gt;validate&lt;/code&gt; &lt;/a&gt; method and passing it the &lt;code&gt;CertPath&lt;/code&gt; to be validated and an algorithm-specific set of parameters. If successful, the result is returned in an object that implements the &lt;code&gt;CertPathValidatorResult&lt;/code&gt; interface.</target>
        </trans-unit>
        <trans-unit id="ce4e4b1fde9c697ca0523591f6b70feca268e589" translate="yes" xml:space="preserve">
          <source>Once a &lt;code&gt;CertPathValidator&lt;/code&gt; object has been created, it can be used to validate certification paths by calling the &lt;a href=&quot;certpathvalidator#validate-java.security.cert.CertPath-java.security.cert.CertPathParameters-&quot;&gt;&lt;code&gt;validate&lt;/code&gt;&lt;/a&gt; method and passing it the &lt;code&gt;CertPath&lt;/code&gt; to be validated and an algorithm-specific set of parameters. If successful, the result is returned in an object that implements the &lt;code&gt;CertPathValidatorResult&lt;/code&gt; interface.</source>
          <target state="translated">한번 &lt;code&gt;CertPathValidator&lt;/code&gt; 객체가 생성되어, 그것은 호출 유효성 인증 경로를 사용할 수있는 &lt;a href=&quot;certpathvalidator#validate-java.security.cert.CertPath-java.security.cert.CertPathParameters-&quot;&gt; &lt;code&gt;validate&lt;/code&gt; &lt;/a&gt; 방법 및 그것을 통과 &lt;code&gt;CertPath&lt;/code&gt; 를 검증하고 알고리즘 파라미터들의 특정 세트. 성공하면 &lt;code&gt;CertPathValidatorResult&lt;/code&gt; 인터페이스 를 구현하는 객체에 결과가 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="27e5a479774c39e31a32dc168ac987965aea2268" translate="yes" xml:space="preserve">
          <source>Once a &lt;code&gt;JFormattedTextField&lt;/code&gt; has been created, you can listen for editing changes by way of adding a &lt;code&gt;PropertyChangeListener&lt;/code&gt; and listening for &lt;code&gt;PropertyChangeEvent&lt;/code&gt;s with the property name &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">Once a &lt;code&gt;JFormattedTextField&lt;/code&gt; has been created, you can listen for editing changes by way of adding a &lt;code&gt;PropertyChangeListener&lt;/code&gt; and listening for &lt;code&gt;PropertyChangeEvent&lt;/code&gt; s with the property name &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9730cbdc7e23b0b18d0007553ab6f43731b75b33" translate="yes" xml:space="preserve">
          <source>Once a &lt;code&gt;PKIXParameters&lt;/code&gt; object has been created, other parameters can be specified (by calling &lt;a href=&quot;#setInitialPolicies(java.util.Set)&quot;&gt;&lt;code&gt;setInitialPolicies&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#setDate(java.util.Date)&quot;&gt;&lt;code&gt;setDate&lt;/code&gt;&lt;/a&gt;, for instance) and then the &lt;code&gt;PKIXParameters&lt;/code&gt; is passed along with the &lt;code&gt;CertPath&lt;/code&gt; to be validated to &lt;a href=&quot;certpathvalidator#validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)&quot;&gt;&lt;code&gt;CertPathValidator.validate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Once a &lt;code&gt;PKIXParameters&lt;/code&gt; object has been created, other parameters can be specified (by calling &lt;a href=&quot;#setInitialPolicies(java.util.Set)&quot;&gt; &lt;code&gt;setInitialPolicies&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#setDate(java.util.Date)&quot;&gt; &lt;code&gt;setDate&lt;/code&gt; &lt;/a&gt;, for instance) and then the &lt;code&gt;PKIXParameters&lt;/code&gt; is passed along with the &lt;code&gt;CertPath&lt;/code&gt; to be validated to &lt;a href=&quot;certpathvalidator#validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)&quot;&gt; &lt;code&gt;CertPathValidator.validate&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d5a9bd12321ed38288ee0b829c8e6f5e6eb500fc" translate="yes" xml:space="preserve">
          <source>Once a &lt;code&gt;PKIXParameters&lt;/code&gt; object has been created, other parameters can be specified (by calling &lt;a href=&quot;pkixparameters#setInitialPolicies-java.util.Set-&quot;&gt;&lt;code&gt;setInitialPolicies&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pkixparameters#setDate-java.util.Date-&quot;&gt;&lt;code&gt;setDate&lt;/code&gt;&lt;/a&gt;, for instance) and then the &lt;code&gt;PKIXParameters&lt;/code&gt; is passed along with the &lt;code&gt;CertPath&lt;/code&gt; to be validated to &lt;a href=&quot;certpathvalidator#validate-java.security.cert.CertPath-java.security.cert.CertPathParameters-&quot;&gt;&lt;code&gt;CertPathValidator.validate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">번 &lt;code&gt;PKIXParameters&lt;/code&gt; 오브젝트가 작성되어, 다른 파라미터 (호출하여 지정 될 수 &lt;a href=&quot;pkixparameters#setInitialPolicies-java.util.Set-&quot;&gt; &lt;code&gt;setInitialPolicies&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;pkixparameters#setDate-java.util.Date-&quot;&gt; &lt;code&gt;setDate&lt;/code&gt; &lt;/a&gt; 하고, 예를 들면,) &lt;code&gt;PKIXParameters&lt;/code&gt; 함께 전달 &lt;code&gt;CertPath&lt;/code&gt; 로 검증 될 &lt;a href=&quot;certpathvalidator#validate-java.security.cert.CertPath-java.security.cert.CertPathParameters-&quot;&gt; &lt;code&gt;CertPathValidator.validate&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5ace4e6d79e240a49fce4be793366ad7ba7ddd85" translate="yes" xml:space="preserve">
          <source>Once a &lt;code&gt;TransformService&lt;/code&gt; has been created, it can be used to process &lt;code&gt;Transform&lt;/code&gt; or &lt;code&gt;CanonicalizationMethod&lt;/code&gt; objects. If the &lt;code&gt;Transform&lt;/code&gt; or &lt;code&gt;CanonicalizationMethod&lt;/code&gt; exists in XML form (for example, when validating an existing &lt;code&gt;XMLSignature&lt;/code&gt;), the &lt;a href=&quot;#init(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)&quot;&gt;&lt;code&gt;init(XMLStructure, XMLCryptoContext)&lt;/code&gt;&lt;/a&gt; method must be first called to initialize the transform and provide document context (even if there are no parameters). Alternatively, if the &lt;code&gt;Transform&lt;/code&gt; or &lt;code&gt;CanonicalizationMethod&lt;/code&gt; is being created from scratch, the &lt;a href=&quot;#init(javax.xml.crypto.dsig.spec.TransformParameterSpec)&quot;&gt;&lt;code&gt;init(TransformParameterSpec)&lt;/code&gt;&lt;/a&gt; method is called to initialize the transform with parameters and the &lt;a href=&quot;#marshalParams(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)&quot;&gt;&lt;code&gt;marshalParams&lt;/code&gt;&lt;/a&gt; method is called to marshal the parameters to XML and provide the transform with document context. Finally, the &lt;a href=&quot;transform#transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt; method is called to perform the transformation.</source>
          <target state="translated">Once a &lt;code&gt;TransformService&lt;/code&gt; has been created, it can be used to process &lt;code&gt;Transform&lt;/code&gt; or &lt;code&gt;CanonicalizationMethod&lt;/code&gt; objects. If the &lt;code&gt;Transform&lt;/code&gt; or &lt;code&gt;CanonicalizationMethod&lt;/code&gt; exists in XML form (for example, when validating an existing &lt;code&gt;XMLSignature&lt;/code&gt; ), the &lt;a href=&quot;#init(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)&quot;&gt; &lt;code&gt;init(XMLStructure, XMLCryptoContext)&lt;/code&gt; &lt;/a&gt; method must be first called to initialize the transform and provide document context (even if there are no parameters). Alternatively, if the &lt;code&gt;Transform&lt;/code&gt; or &lt;code&gt;CanonicalizationMethod&lt;/code&gt; is being created from scratch, the &lt;a href=&quot;#init(javax.xml.crypto.dsig.spec.TransformParameterSpec)&quot;&gt; &lt;code&gt;init(TransformParameterSpec)&lt;/code&gt; &lt;/a&gt; method is called to initialize the transform with parameters and the &lt;a href=&quot;#marshalParams(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)&quot;&gt; &lt;code&gt;marshalParams&lt;/code&gt; &lt;/a&gt; method is called to marshal the parameters to XML and provide the transform with document context. Finally, the &lt;a href=&quot;transform#transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)&quot;&gt; &lt;code&gt;transform&lt;/code&gt; &lt;/a&gt; method is called to perform the transformation.</target>
        </trans-unit>
        <trans-unit id="4f81df5332360604134c364e0e2f34fcee292e81" translate="yes" xml:space="preserve">
          <source>Once a Policy instance has been installed (either by default, or by calling &lt;code&gt;setPolicy&lt;/code&gt;), the Java runtime invokes its &lt;code&gt;implies&lt;/code&gt; method when it needs to determine whether executing code (encapsulated in a ProtectionDomain) can perform SecurityManager-protected operations. How a Policy object retrieves its policy data is up to the Policy implementation itself. The policy data may be stored, for example, in a flat ASCII file, in a serialized binary file of the Policy class, or in a database.</source>
          <target state="translated">정책 인스턴스가 설치되면 (기본적으로 또는 &lt;code&gt;setPolicy&lt;/code&gt; 호출 ) Java 런타임은 실행 코드 (ProtectionDomain에 캡슐화 된)가 SecurityManager로 보호 된 작업을 수행 할 수 있는지 여부를 결정해야 할 때 해당 &lt;code&gt;implies&lt;/code&gt; 메소드를 호출 합니다. 정책 개체가 정책 데이터를 검색하는 방법은 정책 구현 자체에 달려 있습니다. 정책 데이터는 예를 들어 플랫 ASCII 파일, 정책 클래스의 직렬화 된 이진 파일 또는 데이터베이스에 저장 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="abbbf86942235cdaf7801e4b9f5861be3f9b36de" translate="yes" xml:space="preserve">
          <source>Once a connector server has been stopped, it cannot be started again.</source>
          <target state="translated">커넥터 서버가 중지되면 다시 시작할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1d244dbc5534e867507523c9cfacd6b833921ea3" translate="yes" xml:space="preserve">
          <source>Once a directory stream is closed, then further access to the directory, using the &lt;code&gt;Iterator&lt;/code&gt;, behaves as if the end of stream has been reached. Due to read-ahead, the &lt;code&gt;Iterator&lt;/code&gt; may return one or more elements after the directory stream has been closed. Once these buffered elements have been read, then subsequent calls to the &lt;code&gt;hasNext&lt;/code&gt; method returns &lt;code&gt;false&lt;/code&gt;, and subsequent calls to the &lt;code&gt;next&lt;/code&gt; method will throw &lt;code&gt;NoSuchElementException&lt;/code&gt;.</source>
          <target state="translated">디렉토리 스트림이 닫히면 &lt;code&gt;Iterator&lt;/code&gt; 를 사용하여 디렉토리에 대한 추가 액세스 는 스트림의 끝에 도달 한 것처럼 작동합니다. 미리 읽기로 인해 디렉토리 스트림이 닫힌 후 &lt;code&gt;Iterator&lt;/code&gt; 가 하나 이상의 요소를 리턴 할 수 있습니다. 버퍼링 된 요소를 읽은 후 &lt;code&gt;hasNext&lt;/code&gt; 메소드 에 대한 후속 호출 은 &lt;code&gt;false&lt;/code&gt; 를 리턴 하고 &lt;code&gt;next&lt;/code&gt; 메소드 에 대한 후속 호출 은 &lt;code&gt;NoSuchElementException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="f2a78494659603e5a806713bcb14546998fa5c8e" translate="yes" xml:space="preserve">
          <source>Once a file system created by this provider is &lt;a href=&quot;../filesystem#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt; it is provider-dependent if this method returns a reference to the closed file system or throws &lt;a href=&quot;../filesystemnotfoundexception&quot;&gt;&lt;code&gt;FileSystemNotFoundException&lt;/code&gt;&lt;/a&gt;. If the provider allows a new file system to be created with the same URI as a file system it previously created then this method throws the exception if invoked after the file system is closed (and before a new instance is created by the &lt;a href=&quot;#newFileSystem(java.net.URI,java.util.Map)&quot;&gt;&lt;code&gt;newFileSystem&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="translated">Once a file system created by this provider is &lt;a href=&quot;../filesystem#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt; it is provider-dependent if this method returns a reference to the closed file system or throws &lt;a href=&quot;../filesystemnotfoundexception&quot;&gt; &lt;code&gt;FileSystemNotFoundException&lt;/code&gt; &lt;/a&gt;. If the provider allows a new file system to be created with the same URI as a file system it previously created then this method throws the exception if invoked after the file system is closed (and before a new instance is created by the &lt;a href=&quot;#newFileSystem(java.net.URI,java.util.Map)&quot;&gt; &lt;code&gt;newFileSystem&lt;/code&gt; &lt;/a&gt; method).</target>
        </trans-unit>
        <trans-unit id="becd48649f138f6042350a6a58a87ca7a4518570" translate="yes" xml:space="preserve">
          <source>Once a file system created by this provider is &lt;a href=&quot;../filesystem#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt; it is provider-dependent if this method returns a reference to the closed file system or throws &lt;a href=&quot;../filesystemnotfoundexception&quot;&gt;&lt;code&gt;FileSystemNotFoundException&lt;/code&gt;&lt;/a&gt;. If the provider allows a new file system to be created with the same URI as a file system it previously created then this method throws the exception if invoked after the file system is closed (and before a new instance is created by the &lt;a href=&quot;filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="translated">이 제공자가 작성한 파일 시스템이 &lt;a href=&quot;../filesystem#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt; 이 메소드가 닫힌 파일 시스템에 대한 참조를 리턴하거나 &lt;a href=&quot;../filesystemnotfoundexception&quot;&gt; &lt;code&gt;FileSystemNotFoundException&lt;/code&gt; &lt;/a&gt; 을 발생시키는 경우 제공자에 따라 다릅니다 . 제공자가 이전에 작성한 파일 시스템과 동일한 URI를 사용하여 새 파일 시스템을 작성할 수있는 경우, 파일 시스템을 닫은 후 ( &lt;a href=&quot;filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem&lt;/code&gt; &lt;/a&gt; 메소드 로 새 인스턴스를 작성하기 전에)이 메소드를 호출하면 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="694ccc5a7502c8af87bc77476256cfc294f78ca1" translate="yes" xml:space="preserve">
          <source>Once a file system created by this provider is &lt;a href=&quot;filesystem#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt; it is provider-dependent if this method returns a reference to the closed file system or throws &lt;a href=&quot;filesystemnotfoundexception&quot;&gt;&lt;code&gt;FileSystemNotFoundException&lt;/code&gt;&lt;/a&gt;. If the provider allows a new file system to be created with the same URI as a file system it previously created then this method throws the exception if invoked after the file system is closed (and before a new instance is created by the &lt;a href=&quot;#newFileSystem(java.net.URI,java.util.Map)&quot;&gt;&lt;code&gt;newFileSystem&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="translated">Once a file system created by this provider is &lt;a href=&quot;filesystem#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt; it is provider-dependent if this method returns a reference to the closed file system or throws &lt;a href=&quot;filesystemnotfoundexception&quot;&gt; &lt;code&gt;FileSystemNotFoundException&lt;/code&gt; &lt;/a&gt;. If the provider allows a new file system to be created with the same URI as a file system it previously created then this method throws the exception if invoked after the file system is closed (and before a new instance is created by the &lt;a href=&quot;#newFileSystem(java.net.URI,java.util.Map)&quot;&gt; &lt;code&gt;newFileSystem&lt;/code&gt; &lt;/a&gt; method).</target>
        </trans-unit>
        <trans-unit id="014e640768fe01678f1fc730c556144f2e6f1405" translate="yes" xml:space="preserve">
          <source>Once a file system created by this provider is &lt;a href=&quot;filesystem#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt; it is provider-dependent if this method returns a reference to the closed file system or throws &lt;a href=&quot;filesystemnotfoundexception&quot;&gt;&lt;code&gt;FileSystemNotFoundException&lt;/code&gt;&lt;/a&gt;. If the provider allows a new file system to be created with the same URI as a file system it previously created then this method throws the exception if invoked after the file system is closed (and before a new instance is created by the &lt;a href=&quot;filesystems#newFileSystem-java.net.URI-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="translated">이 제공자가 작성한 파일 시스템이 &lt;a href=&quot;filesystem#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt; 이 메소드가 닫힌 파일 시스템에 대한 참조를 리턴하거나 &lt;a href=&quot;filesystemnotfoundexception&quot;&gt; &lt;code&gt;FileSystemNotFoundException&lt;/code&gt; &lt;/a&gt; 을 발생시키는 경우 제공자에 따라 다릅니다 . 제공자가 이전에 작성한 파일 시스템과 동일한 URI를 사용하여 새 파일 시스템을 작성할 수있는 경우, 파일 시스템을 닫은 후 ( &lt;a href=&quot;filesystems#newFileSystem-java.net.URI-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem&lt;/code&gt; &lt;/a&gt; 메소드 로 새 인스턴스를 작성하기 전에)이 메소드를 호출하면 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="b11506419310bee6e751875ef103be18ea7c6223" translate="yes" xml:space="preserve">
          <source>Once a file system is &lt;a href=&quot;filesystem#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt; it is provider-dependent if the provider allows a new file system to be created with the same URI as a file system it previously created.</source>
          <target state="translated">Once a file system is &lt;a href=&quot;filesystem#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt; it is provider-dependent if the provider allows a new file system to be created with the same URI as a file system it previously created.</target>
        </trans-unit>
        <trans-unit id="b1943cfe0689d738122573d10502257bcc2ccff3" translate="yes" xml:space="preserve">
          <source>Once a file system is &lt;a href=&quot;filesystem#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt; it is provider-dependent if the provider allows a new file system to be created with the same URI as a file system it previously created.</source>
          <target state="translated">파일 시스템이 &lt;a href=&quot;filesystem#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt; 제공자가 이전에 작성한 파일 시스템과 동일한 URI로 새 파일 시스템을 작성할 수 있도록하는 경우 제공자에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="14fa4d05a179f1cc2f0f08fa37ef860c1437702a" translate="yes" xml:space="preserve">
          <source>Once a group is created, subsequent calls to the &lt;code&gt;currentGroupID&lt;/code&gt; method will return the identifier for this group until the group becomes inactive.</source>
          <target state="translated">Once a group is created, subsequent calls to the &lt;code&gt;currentGroupID&lt;/code&gt; method will return the identifier for this group until the group becomes inactive.</target>
        </trans-unit>
        <trans-unit id="5fd6b880bff3b6b25a0a97c5d64f71cc215607dd" translate="yes" xml:space="preserve">
          <source>Once a prototype &lt;code&gt;EditorKit&lt;/code&gt; instance is successfully located, it is cloned and the clone is returned.</source>
          <target state="translated">Once a prototype &lt;code&gt;EditorKit&lt;/code&gt; instance is successfully located, it is cloned and the clone is returned.</target>
        </trans-unit>
        <trans-unit id="c744e6cb384e9dcedf836f1f81b20f3ce8dd21d4" translate="yes" xml:space="preserve">
          <source>Once a provider is found, the result of the &lt;code&gt;newJMXConnector&lt;/code&gt; method is the result of calling &lt;a href=&quot;jmxconnectorprovider#newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt;&lt;code&gt;newJMXConnector&lt;/code&gt;&lt;/a&gt; on the provider.</source>
          <target state="translated">Once a provider is found, the result of the &lt;code&gt;newJMXConnector&lt;/code&gt; method is the result of calling &lt;a href=&quot;jmxconnectorprovider#newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt; &lt;code&gt;newJMXConnector&lt;/code&gt; &lt;/a&gt; on the provider.</target>
        </trans-unit>
        <trans-unit id="d8aa88de54eea885381d82260da933836ff27e3d" translate="yes" xml:space="preserve">
          <source>Once a provider is found, the result of the &lt;code&gt;newJMXConnector&lt;/code&gt; method is the result of calling &lt;a href=&quot;jmxconnectorprovider#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt;&lt;code&gt;newJMXConnector&lt;/code&gt;&lt;/a&gt; on the provider.</source>
          <target state="translated">제공자를 찾으면 &lt;code&gt;newJMXConnector&lt;/code&gt; 메소드의 결과 는 제공자에서 &lt;a href=&quot;jmxconnectorprovider#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt; &lt;code&gt;newJMXConnector&lt;/code&gt; &lt;/a&gt; 를 호출 한 결과입니다 .</target>
        </trans-unit>
        <trans-unit id="cfa637bcb6b62d41604709ed483b229d0a580ee3" translate="yes" xml:space="preserve">
          <source>Once a provider is found, the result of the &lt;code&gt;newJMXConnectorServer&lt;/code&gt; method is the result of calling &lt;a href=&quot;jmxconnectorserverprovider#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt;&lt;code&gt;newJMXConnectorServer&lt;/code&gt;&lt;/a&gt; on the provider.</source>
          <target state="translated">Once a provider is found, the result of the &lt;code&gt;newJMXConnectorServer&lt;/code&gt; method is the result of calling &lt;a href=&quot;jmxconnectorserverprovider#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt; &lt;code&gt;newJMXConnectorServer&lt;/code&gt; &lt;/a&gt; on the provider.</target>
        </trans-unit>
        <trans-unit id="8c3656182695ec4f2d322db4f90634e76113bf56" translate="yes" xml:space="preserve">
          <source>Once a provider is found, the result of the &lt;code&gt;newJMXConnectorServer&lt;/code&gt; method is the result of calling &lt;a href=&quot;jmxconnectorserverprovider#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;newJMXConnectorServer&lt;/code&gt;&lt;/a&gt; on the provider.</source>
          <target state="translated">제공자를 찾으면 &lt;code&gt;newJMXConnectorServer&lt;/code&gt; 메소드의 결과 는 제공자에서 &lt;a href=&quot;jmxconnectorserverprovider#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;newJMXConnectorServer&lt;/code&gt; &lt;/a&gt; 를 호출 한 결과입니다 .</target>
        </trans-unit>
        <trans-unit id="b9b844ce22fefa03db1688b438ad18108c864fca" translate="yes" xml:space="preserve">
          <source>Once a reference to the &lt;code&gt;FileStore&lt;/code&gt; is obtained it is implementation specific if operations on the returned &lt;code&gt;FileStore&lt;/code&gt;, or &lt;a href=&quot;attribute/filestoreattributeview&quot;&gt;&lt;code&gt;FileStoreAttributeView&lt;/code&gt;&lt;/a&gt; objects obtained from it, continue to depend on the existence of the file. In particular the behavior is not defined for the case that the file is deleted or moved to a different file store.</source>
          <target state="translated">&lt;code&gt;FileStore&lt;/code&gt; 에 대한 참조 가 확보되면 리턴 된 &lt;code&gt;FileStore&lt;/code&gt; 또는 &lt;a href=&quot;attribute/filestoreattributeview&quot;&gt; &lt;code&gt;FileStoreAttributeView&lt;/code&gt; &lt;/a&gt; 오브젝트에서 얻은 조작 이 파일의 존재에 계속 의존하는 경우 구현 고유의 것입니다 . 특히 파일이 삭제되거나 다른 파일 저장소로 이동 된 경우 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="463356cdba46e29433cb59fc535236fd2db3e740" translate="yes" xml:space="preserve">
          <source>Once a remote object is registered (bound) with the RMI registry on the local host, callers on a remote (or local) host can lookup the remote object by name, obtain its reference, and then invoke remote methods on the object. A registry may be shared by all servers running on a host or an individual server process may create and use its own registry if desired (see &lt;code&gt;java.rmi.registry.LocateRegistry.createRegistry&lt;/code&gt; method for details).</source>
          <target state="translated">Once a remote object is registered (bound) with the RMI registry on the local host, callers on a remote (or local) host can lookup the remote object by name, obtain its reference, and then invoke remote methods on the object. A registry may be shared by all servers running on a host or an individual server process may create and use its own registry if desired (see &lt;code&gt;java.rmi.registry.LocateRegistry.createRegistry&lt;/code&gt; method for details).</target>
        </trans-unit>
        <trans-unit id="8fa2765d3f56e66fcaf89b84f2f63fcd8b9ebb4c" translate="yes" xml:space="preserve">
          <source>Once a result is passed to the combiner or finisher function, it is never passed to the accumulator function again.</source>
          <target state="translated">결과가 컴 바이 너 또는 피니셔 기능으로 전달되면 누적 기 기능으로 다시 전달되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3c0c01c1450012ea53703b43ba9476c9e4b4369d" translate="yes" xml:space="preserve">
          <source>Once a socket has been closed, it is not available for further networking use (i.e. can't be reconnected or rebound). A new socket needs to be created.</source>
          <target state="translated">소켓이 닫힌 후에는 더 이상 네트워킹에 사용할 수 없습니다 (즉, 다시 연결하거나 리바운드 할 수 없음). 새로운 소켓을 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="c18bbcc70f9e4e4a385b44280a15d0473cbdbce6" translate="yes" xml:space="preserve">
          <source>Once a thread has invoked &lt;code&gt;beginExclusive&lt;/code&gt;, only this thread is allowed to communicate with this card until it calls &lt;code&gt;endExclusive&lt;/code&gt;. Other threads attempting communication will receive a CardException.</source>
          <target state="translated">Once a thread has invoked &lt;code&gt;beginExclusive&lt;/code&gt; , only this thread is allowed to communicate with this card until it calls &lt;code&gt;endExclusive&lt;/code&gt; . Other threads attempting communication will receive a CardException.</target>
        </trans-unit>
        <trans-unit id="5cbef9fedf294f675061927c2526075e0406fa3b" translate="yes" xml:space="preserve">
          <source>Once a transformer has been registered with &lt;a href=&quot;instrumentation#addTransformer(java.lang.instrument.ClassFileTransformer,boolean)&quot;&gt;&lt;code&gt;addTransformer&lt;/code&gt;&lt;/a&gt;, the transformer will be called for every new class definition and every class redefinition. Retransformation capable transformers will also be called on every class retransformation. The request for a new class definition is made with &lt;a href=&quot;../../../../java.base/java/lang/classloader#defineClass(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;ClassLoader.defineClass&lt;/code&gt;&lt;/a&gt; or its native equivalents. The request for a class redefinition is made with &lt;a href=&quot;instrumentation#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt;&lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt;&lt;/a&gt; or its native equivalents. The request for a class retransformation is made with &lt;a href=&quot;instrumentation#retransformClasses(java.lang.Class...)&quot;&gt;&lt;code&gt;Instrumentation.retransformClasses&lt;/code&gt;&lt;/a&gt; or its native equivalents. The transformer is called during the processing of the request, before the class file bytes have been verified or applied. When there are multiple transformers, transformations are composed by chaining the &lt;code&gt;transform&lt;/code&gt; calls. That is, the byte array returned by one call to &lt;code&gt;transform&lt;/code&gt; becomes the input (via the &lt;code&gt;classfileBuffer&lt;/code&gt; parameter) to the next call.</source>
          <target state="translated">Once a transformer has been registered with &lt;a href=&quot;instrumentation#addTransformer(java.lang.instrument.ClassFileTransformer,boolean)&quot;&gt; &lt;code&gt;addTransformer&lt;/code&gt; &lt;/a&gt;, the transformer will be called for every new class definition and every class redefinition. Retransformation capable transformers will also be called on every class retransformation. The request for a new class definition is made with &lt;a href=&quot;../../../../java.base/java/lang/classloader#defineClass(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;ClassLoader.defineClass&lt;/code&gt; &lt;/a&gt; or its native equivalents. The request for a class redefinition is made with &lt;a href=&quot;instrumentation#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt; &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; &lt;/a&gt; or its native equivalents. The request for a class retransformation is made with &lt;a href=&quot;instrumentation#retransformClasses(java.lang.Class...)&quot;&gt; &lt;code&gt;Instrumentation.retransformClasses&lt;/code&gt; &lt;/a&gt; or its native equivalents. The transformer is called during the processing of the request, before the class file bytes have been verified or applied. When there are multiple transformers, transformations are composed by chaining the &lt;code&gt;transform&lt;/code&gt; calls. That is, the byte array returned by one call to &lt;code&gt;transform&lt;/code&gt; becomes the input (via the &lt;code&gt;classfileBuffer&lt;/code&gt; parameter) to the next call.</target>
        </trans-unit>
        <trans-unit id="533808e9b960d018349b493998d8e4212932c0cf" translate="yes" xml:space="preserve">
          <source>Once a transformer has been registered with &lt;a href=&quot;instrumentation#addTransformer-java.lang.instrument.ClassFileTransformer-boolean-&quot;&gt;&lt;code&gt;addTransformer&lt;/code&gt;&lt;/a&gt;, the transformer will be called for every new class definition and every class redefinition. Retransformation capable transformers will also be called on every class retransformation. The request for a new class definition is made with &lt;a href=&quot;../classloader#defineClass-byte:A-int-int-&quot;&gt;&lt;code&gt;ClassLoader.defineClass&lt;/code&gt;&lt;/a&gt; or its native equivalents. The request for a class redefinition is made with &lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt;&lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt;&lt;/a&gt; or its native equivalents. The request for a class retransformation is made with &lt;a href=&quot;instrumentation#retransformClasses-java.lang.Class...-&quot;&gt;&lt;code&gt;Instrumentation.retransformClasses&lt;/code&gt;&lt;/a&gt; or its native equivalents. The transformer is called during the processing of the request, before the class file bytes have been verified or applied. When there are multiple transformers, transformations are composed by chaining the &lt;code&gt;transform&lt;/code&gt; calls. That is, the byte array returned by one call to &lt;code&gt;transform&lt;/code&gt; becomes the input (via the &lt;code&gt;classfileBuffer&lt;/code&gt; parameter) to the next call.</source>
          <target state="translated">변환기가 &lt;a href=&quot;instrumentation#addTransformer-java.lang.instrument.ClassFileTransformer-boolean-&quot;&gt; &lt;code&gt;addTransformer&lt;/code&gt; &lt;/a&gt; 에 등록되면 모든 새 클래스 정의 및 모든 클래스 재정의에 대해 변환기가 호출됩니다. 모든 클래스 재 변환에서 재 변환 가능 변환기도 호출됩니다. 새 클래스 정의 요청은 &lt;a href=&quot;../classloader#defineClass-byte:A-int-int-&quot;&gt; &lt;code&gt;ClassLoader.defineClass&lt;/code&gt; &lt;/a&gt; 또는 해당 기본 클래스를 사용하여 수행 됩니다. 클래스 재정의 요청은 &lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt; &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; &lt;/a&gt; 또는 해당 기본 클래스를 사용하여 수행 됩니다. 클래스 재 변환 요청은 &lt;a href=&quot;instrumentation#retransformClasses-java.lang.Class...-&quot;&gt; &lt;code&gt;Instrumentation.retransformClasses&lt;/code&gt; &lt;/a&gt; 로 이루어집니다.또는 그와 동등한 것. 클래스 파일 바이트가 확인되거나 적용되기 전에 요청을 처리하는 동안 변환기가 호출됩니다. 변환기가 여러 개인 경우 &lt;code&gt;transform&lt;/code&gt; 호출 을 체인화하여 변환 이 구성됩니다 . 즉, 한 &lt;code&gt;transform&lt;/code&gt; 호출에 의해 리턴 된 바이트 배열 은 &lt;code&gt;classfileBuffer&lt;/code&gt; 매개 변수를 통해 다음 호출에 대한 입력이됩니다 .</target>
        </trans-unit>
        <trans-unit id="6285995b4edcbe4d142d4f23c1cde28c7bb503e4" translate="yes" xml:space="preserve">
          <source>Once an &lt;code&gt;AlgorithmParameters&lt;/code&gt; object is obtained, it must be initialized via a call to &lt;code&gt;init&lt;/code&gt;, using an appropriate parameter specification or parameter encoding.</source>
          <target state="translated">&lt;code&gt;AlgorithmParameters&lt;/code&gt; 객체가 얻어 지면 적절한 매개 변수 사양 또는 매개 변수 인코딩을 사용하여 &lt;code&gt;init&lt;/code&gt; 호출을 통해 초기화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8f3c38acbeb5c961f1cf10869b76bfa15075df0d" translate="yes" xml:space="preserve">
          <source>Once an agent acquires an &lt;code&gt;Instrumentation&lt;/code&gt; instance, the agent may call methods on the instance at any time.</source>
          <target state="translated">에이전트가 &lt;code&gt;Instrumentation&lt;/code&gt; 인스턴스를 획득하면 에이전트는 언제든지 인스턴스에서 메소드를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="105e2fc8f8ac4787e74b250ad7c145ecf20bb7e2" translate="yes" xml:space="preserve">
          <source>Once an application has obtained a reference to a &lt;code&gt;DatatypeFactory&lt;/code&gt; it can use the factory to configure and obtain datatype instances.</source>
          <target state="translated">Once an application has obtained a reference to a &lt;code&gt;DatatypeFactory&lt;/code&gt; it can use the factory to configure and obtain datatype instances.</target>
        </trans-unit>
        <trans-unit id="7d0ecb2178939f77d737b47649d17e788052ae4c" translate="yes" xml:space="preserve">
          <source>Once an application has obtained a reference to a &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; it can use the factory to configure and obtain parser instances.</source>
          <target state="translated">Once an application has obtained a reference to a &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; it can use the factory to configure and obtain parser instances.</target>
        </trans-unit>
        <trans-unit id="46c1eb47e2a4c711c6d9fa14f6116a89a2081f54" translate="yes" xml:space="preserve">
          <source>Once an application has obtained a reference to a &lt;code&gt;RowSetFactory&lt;/code&gt; it can use the factory to obtain RowSet instances.</source>
          <target state="translated">Once an application has obtained a reference to a &lt;code&gt;RowSetFactory&lt;/code&gt; it can use the factory to obtain RowSet instances.</target>
        </trans-unit>
        <trans-unit id="7216b985715c03a44ae0487dc3e4e7b975919d3a" translate="yes" xml:space="preserve">
          <source>Once an application has obtained a reference to a &lt;code&gt;RowSetFactory&lt;/code&gt;, it can use the factory to obtain RowSet instances.</source>
          <target state="translated">Once an application has obtained a reference to a &lt;code&gt;RowSetFactory&lt;/code&gt; , it can use the factory to obtain RowSet instances.</target>
        </trans-unit>
        <trans-unit id="fc0a2568645db3aae7b92a05e2afd99cc3258638" translate="yes" xml:space="preserve">
          <source>Once an application has obtained a reference to a &lt;code&gt;SAXParserFactory&lt;/code&gt; it can use the factory to configure and obtain parser instances.</source>
          <target state="translated">Once an application has obtained a reference to a &lt;code&gt;SAXParserFactory&lt;/code&gt; it can use the factory to configure and obtain parser instances.</target>
        </trans-unit>
        <trans-unit id="d2270caebb759fd71826e889b9a9723ba71451ba" translate="yes" xml:space="preserve">
          <source>Once an application has obtained a reference to a &lt;code&gt;TransformerFactory&lt;/code&gt; it can use the factory to configure and obtain transformer instances.</source>
          <target state="translated">Once an application has obtained a reference to a &lt;code&gt;TransformerFactory&lt;/code&gt; it can use the factory to configure and obtain transformer instances.</target>
        </trans-unit>
        <trans-unit id="8f3383865168f8512ccd9c6761c49001c0541182" translate="yes" xml:space="preserve">
          <source>Once an application has obtained a reference to a XMLEventFactory it can use the factory to configure and obtain stream instances.</source>
          <target state="translated">Once an application has obtained a reference to a XMLEventFactory it can use the factory to configure and obtain stream instances.</target>
        </trans-unit>
        <trans-unit id="e2d3c1dacaa7f6c57761da8ec7d67c9e116ea49e" translate="yes" xml:space="preserve">
          <source>Once an application has obtained a reference to a XMLInputFactory it can use the factory to configure and obtain stream instances.</source>
          <target state="translated">Once an application has obtained a reference to a XMLInputFactory it can use the factory to configure and obtain stream instances.</target>
        </trans-unit>
        <trans-unit id="6e9f2175fa24aeaf4bd99edcffe1f1ccb12e0cb6" translate="yes" xml:space="preserve">
          <source>Once an application has obtained a reference to a XMLOutputFactory it can use the factory to configure and obtain stream instances.</source>
          <target state="translated">Once an application has obtained a reference to a XMLOutputFactory it can use the factory to configure and obtain stream instances.</target>
        </trans-unit>
        <trans-unit id="7499396cfb53faab6699b6a955419afa19b5a03e" translate="yes" xml:space="preserve">
          <source>Once connected, a datagram channel remains connected until it is disconnected or closed. Whether or not a datagram channel is connected may be determined by invoking its &lt;a href=&quot;#isConnected()&quot;&gt;&lt;code&gt;isConnected&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Once connected, a datagram channel remains connected until it is disconnected or closed. Whether or not a datagram channel is connected may be determined by invoking its &lt;a href=&quot;#isConnected()&quot;&gt; &lt;code&gt;isConnected&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="6772a4e2e2e2c3c47599b1865b94970a1e3122de" translate="yes" xml:space="preserve">
          <source>Once connected, a datagram channel remains connected until it is disconnected or closed. Whether or not a datagram channel is connected may be determined by invoking its &lt;a href=&quot;datagramchannel#isConnected--&quot;&gt;&lt;code&gt;isConnected&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">연결되면 데이터 그램 채널은 연결이 끊어 지거나 닫힐 때까지 연결된 상태로 유지됩니다. 데이터 그램 채널의 연결 여부는 &lt;a href=&quot;datagramchannel#isConnected--&quot;&gt; &lt;code&gt;isConnected&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5c1fd5730a9d4a3652d31fa180ba578f51e2eb1c" translate="yes" xml:space="preserve">
          <source>Once constructed, a resolution attribute's value is immutable.</source>
          <target state="translated">생성 된 해상도 속성의 값은 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b2cb934649c0034b283a09e6bfbfcac15a1222a0" translate="yes" xml:space="preserve">
          <source>Once constructed, a two-dimensional size attribute's value is immutable.</source>
          <target state="translated">일단 구성되면, 2 차원 크기 속성의 값은 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="916fbe7ac094d27e9157dcffe6516e62afef9c11" translate="yes" xml:space="preserve">
          <source>Once created, a Bidi object can be queried to see if the text it represents is all left-to-right or all right-to-left. Such objects are very lightweight and this text is relatively easy to process.</source>
          <target state="translated">일단 작성된 Bidi 오브젝트를 조회하여 오브젝트가 나타내는 텍스트가 모두 왼쪽에서 오른쪽인지 또는 오른쪽에서 왼쪽인지를 확인할 수 있습니다. 이러한 객체는 매우 가벼우 며이 텍스트는 비교적 처리하기 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="bc960246521defc9017a8b6e6fe1833ef22c9b9a" translate="yes" xml:space="preserve">
          <source>Once deletion has been requested, it is not possible to cancel the request. This method should therefore be used with care.</source>
          <target state="translated">삭제가 요청되면 요청을 취소 할 수 없습니다. 따라서이 방법은주의해서 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="cc8e1eb787e5502d5be3002cd00c128868cedc5b" translate="yes" xml:space="preserve">
          <source>Once registered with a selector, a channel remains registered until it is</source>
          <target state="translated">셀렉터에 등록한 후에는 채널이</target>
        </trans-unit>
        <trans-unit id="b55948551ac491f4b8790edceec36bc861539faf" translate="yes" xml:space="preserve">
          <source>Once shutdown for reading then further reads on the channel will return &lt;code&gt;-1&lt;/code&gt;, the end-of-stream indication. If the input side of the connection is already shutdown then invoking this method has no effect.</source>
          <target state="translated">일단 읽기를 종료 한 다음 채널에서 추가 읽기를 수행하면 스트림 끝 표시 인 &lt;code&gt;-1&lt;/code&gt; 이 반환됩니다 . 연결의 입력 측이 이미 종료 된 경우이 방법을 호출해도 아무런 영향이 없습니다.</target>
        </trans-unit>
        <trans-unit id="7878ce15878fb5a9d0ff4cfc91f28b85a82ae013" translate="yes" xml:space="preserve">
          <source>Once shutdown for reading then further reads on the channel will return &lt;code&gt;-1&lt;/code&gt;, the end-of-stream indication. If the input side of the connection is already shutdown then invoking this method has no effect. The effect on an outstanding read operation is system dependent and therefore not specified. The effect, if any, when there is data in the socket receive buffer that has not been read, or data arrives subsequently, is also system dependent.</source>
          <target state="translated">일단 읽기를 종료 한 다음 채널에서 추가 읽기를 수행하면 스트림 끝 표시 인 &lt;code&gt;-1&lt;/code&gt; 이 반환됩니다 . 연결의 입력 측이 이미 종료 된 경우이 방법을 호출해도 아무런 영향이 없습니다. 미해결 읽기 작업에 대한 영향은 시스템에 따라 다르므로 지정되지 않았습니다. 소켓 수신 버퍼에 읽지 않은 데이터가 있거나 이후에 데이터가 도착할 때의 영향은 시스템에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="797f0609cda6a2a2c0156328e27050a84bd32447" translate="yes" xml:space="preserve">
          <source>Once shutdown for writing then further attempts to write to the channel will throw &lt;a href=&quot;closedchannelexception&quot;&gt;&lt;code&gt;ClosedChannelException&lt;/code&gt;&lt;/a&gt;. If the output side of the connection is already shutdown then invoking this method has no effect.</source>
          <target state="translated">쓰기를 종료 한 후 채널에 추가로 쓰려고하면 &lt;a href=&quot;closedchannelexception&quot;&gt; &lt;code&gt;ClosedChannelException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다. 연결의 출력 측이 이미 종료 된 경우이 방법을 호출해도 아무런 영향이 없습니다.</target>
        </trans-unit>
        <trans-unit id="a0b45c5832356af065c8f6bcaa3bd99d3d143e29" translate="yes" xml:space="preserve">
          <source>Once shutdown for writing then further attempts to write to the channel will throw &lt;a href=&quot;closedchannelexception&quot;&gt;&lt;code&gt;ClosedChannelException&lt;/code&gt;&lt;/a&gt;. If the output side of the connection is already shutdown then invoking this method has no effect. The effect on an outstanding write operation is system dependent and therefore not specified.</source>
          <target state="translated">쓰기를 종료 한 후 채널에 추가로 쓰려고하면 &lt;a href=&quot;closedchannelexception&quot;&gt; &lt;code&gt;ClosedChannelException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다. 연결의 출력 측이 이미 종료 된 경우이 방법을 호출해도 아무런 영향이 없습니다. 미해결 쓰기 작업에 대한 영향은 시스템에 따라 다르므로 지정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="9c75ba9809e3301868dc22c4282365bd23399080" translate="yes" xml:space="preserve">
          <source>Once some channels have been registered with a selector, a &lt;a href=&quot;selector#selop&quot;&gt;&lt;i&gt;selection operation&lt;/i&gt;&lt;/a&gt; can be performed in order to discover which channels, if any, have become ready to perform one or more of the operations in which interest was previously declared. If a channel is ready then the key returned when it was registered will be added to the selector's</source>
          <target state="translated">일부 채널이 셀렉터에 등록되면 &lt;a href=&quot;selector#selop&quot;&gt;&lt;i&gt;선택&lt;/i&gt;&lt;/a&gt; 채널이있는 경우 관심 채널이 이전에 선언 된 하나 이상의 작업을 수행 할 준비가 된 채널을 발견하기 위해 &lt;i&gt;선택 작업&lt;/i&gt; 을 수행 할 수 있습니다. 채널이 준비되면 등록시 반환 된 키가 선택기의 키에 추가됩니다</target>
        </trans-unit>
        <trans-unit id="3fc8522d50c299b14b7e1b3314145976cac8622b" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;CertStore&lt;/code&gt; has been created, it can be used to retrieve &lt;code&gt;Certificate&lt;/code&gt;s and &lt;code&gt;CRL&lt;/code&gt;s by calling its &lt;a href=&quot;#getCertificates(java.security.cert.CertSelector)&quot;&gt;&lt;code&gt;getCertificates&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getCRLs(java.security.cert.CRLSelector)&quot;&gt;&lt;code&gt;getCRLs&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">Once the &lt;code&gt;CertStore&lt;/code&gt; has been created, it can be used to retrieve &lt;code&gt;Certificate&lt;/code&gt; s and &lt;code&gt;CRL&lt;/code&gt; s by calling its &lt;a href=&quot;#getCertificates(java.security.cert.CertSelector)&quot;&gt; &lt;code&gt;getCertificates&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#getCRLs(java.security.cert.CRLSelector)&quot;&gt; &lt;code&gt;getCRLs&lt;/code&gt; &lt;/a&gt; methods.</target>
        </trans-unit>
        <trans-unit id="06e2ff94f2a311ede3ef18e5d3cb0eef95b09ad6" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;CertStore&lt;/code&gt; has been created, it can be used to retrieve &lt;code&gt;Certificate&lt;/code&gt;s and &lt;code&gt;CRL&lt;/code&gt;s by calling its &lt;a href=&quot;certstore#getCertificates-java.security.cert.CertSelector-&quot;&gt;&lt;code&gt;getCertificates&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;certstore#getCRLs-java.security.cert.CRLSelector-&quot;&gt;&lt;code&gt;getCRLs&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;code&gt;CertStore&lt;/code&gt; 가 작성 되면 (자), &lt;a href=&quot;certstore#getCertificates-java.security.cert.CertSelector-&quot;&gt; &lt;code&gt;getCertificates&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;certstore#getCRLs-java.security.cert.CRLSelector-&quot;&gt; &lt;code&gt;getCRLs&lt;/code&gt; &lt;/a&gt; 메소드를 호출하는 것으로 &lt;code&gt;Certificate&lt;/code&gt; 및 &lt;code&gt;CRL&lt;/code&gt; 를취득 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ea7bdb04a2d450593cad989d8f55ff73bc6270ac" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;DragGestureRecognizer&lt;/code&gt; identifies a sequence of events on the &lt;code&gt;Component&lt;/code&gt; as a drag initiating gesture, it will notify its unicast &lt;code&gt;DragGestureListener&lt;/code&gt; by invoking its &lt;a href=&quot;draggesturelistener#dragGestureRecognized(java.awt.dnd.DragGestureEvent)&quot;&gt;&lt;code&gt;gestureRecognized()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Once the &lt;code&gt;DragGestureRecognizer&lt;/code&gt; identifies a sequence of events on the &lt;code&gt;Component&lt;/code&gt; as a drag initiating gesture, it will notify its unicast &lt;code&gt;DragGestureListener&lt;/code&gt; by invoking its &lt;a href=&quot;draggesturelistener#dragGestureRecognized(java.awt.dnd.DragGestureEvent)&quot;&gt; &lt;code&gt;gestureRecognized()&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="2c8a5f87ffaffd84fcb7d68a96369f0d37908893" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;DragGestureRecognizer&lt;/code&gt; is associated with a particular &lt;code&gt;Component&lt;/code&gt; it will register the appropriate listener interfaces on that &lt;code&gt;Component&lt;/code&gt; in order to track the input events delivered to the &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">Once the &lt;code&gt;DragGestureRecognizer&lt;/code&gt; is associated with a particular &lt;code&gt;Component&lt;/code&gt; it will register the appropriate listener interfaces on that &lt;code&gt;Component&lt;/code&gt; in order to track the input events delivered to the &lt;code&gt;Component&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b742f7769eb6466189c037ce72b3f408e5e85da" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;DragSource&lt;/code&gt; is obtained, a &lt;code&gt;DragGestureRecognizer&lt;/code&gt; should also be obtained to associate the &lt;code&gt;DragSource&lt;/code&gt; with a particular &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">Once the &lt;code&gt;DragSource&lt;/code&gt; is obtained, a &lt;code&gt;DragGestureRecognizer&lt;/code&gt; should also be obtained to associate the &lt;code&gt;DragSource&lt;/code&gt; with a particular &lt;code&gt;Component&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56747c1fd145dcd111c610e13ca24792c4c586d3" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;XMLSignatureFactory&lt;/code&gt; has been created, objects can be instantiated by calling the appropriate method. For example, a &lt;a href=&quot;reference&quot;&gt;&lt;code&gt;Reference&lt;/code&gt;&lt;/a&gt; instance may be created by invoking one of the &lt;a href=&quot;#newReference(java.lang.String,javax.xml.crypto.dsig.DigestMethod)&quot;&gt;&lt;code&gt;newReference&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;code&gt;XMLSignatureFactory&lt;/code&gt; 가 생성 되면 적절한 메서드를 호출하여 개체를 인스턴스화 할 수 있습니다. 예를 들어, &lt;a href=&quot;#newReference(java.lang.String,javax.xml.crypto.dsig.DigestMethod)&quot;&gt; &lt;code&gt;newReference&lt;/code&gt; &lt;/a&gt; 중 하나를 호출 하여 &lt;a href=&quot;reference&quot;&gt; &lt;code&gt;Reference&lt;/code&gt; &lt;/a&gt; 인스턴스를 만들 수 있습니다. 메서드 .</target>
        </trans-unit>
        <trans-unit id="82a5584a782e5ebd42b31667bf0c0749ced5b696" translate="yes" xml:space="preserve">
          <source>Once the ModelMBean's ModelMBeanInfo (with Descriptors) are customized and set on the ModelMBean, the ModelMBean be registered with the MBeanServer.</source>
          <target state="translated">ModelMBean의 ModelMBeanInfo (설명자와 함께)가 사용자 정의되고 ModelMBean에서 설정되면 ModelMBean이 MBeanServer에 등록됩니다.</target>
        </trans-unit>
        <trans-unit id="ce6fb02ec72cd552df4bb8f61dd8d7c9e294bddc" translate="yes" xml:space="preserve">
          <source>Once the ModelMBean's ModelMBeanInfo (with Descriptors) are customized and set on the ModelMBean, the ModelMBean can be registered with the MBeanServer.</source>
          <target state="translated">ModelMBean의 ModelMBeanInfo (설명자와 함께)가 사용자 정의되고 ModelMBean에서 설정되면 ModelMBean을 MBeanServer에 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="121f42fde7403814ed31680c3122e82ad94e1946" translate="yes" xml:space="preserve">
          <source>Once the caller has instantiated a LoginContext, it invokes the &lt;code&gt;login&lt;/code&gt; method to authenticate a &lt;code&gt;Subject&lt;/code&gt;. The &lt;code&gt;login&lt;/code&gt; method invokes the configured modules to perform their respective types of authentication (username/password, smart card pin verification, etc.). Note that the LoginModules will not attempt authentication retries nor introduce delays if the authentication fails. Such tasks belong to the LoginContext caller.</source>
          <target state="translated">호출자가 LoginContext를 인스턴스화하면 (자), &lt;code&gt;login&lt;/code&gt; 메소드를 호출 해 &lt;code&gt;Subject&lt;/code&gt; 를 인증합니다 . &lt;code&gt;login&lt;/code&gt; 방법은 인증의 각 유형 (사용자 명 / 패스워드, 스마트 카드의 PIN 인증 등)을 수행하도록 구성된 모듈을 호출한다. LoginModule은 인증 재 시도를 시도하지 않으며 인증이 실패 할 경우 지연을 유발하지 않습니다. 이러한 작업은 LoginContext 호출자에 속합니다.</target>
        </trans-unit>
        <trans-unit id="059d9cd4915349bf49db8fe1a8d167d44a2ae816" translate="yes" xml:space="preserve">
          <source>Once the entire string s has been scanned, it is converted to a time result in one of two ways. If a time zone or time-zone offset has been recognized, then the year, month, day of month, hour, minute, and second are interpreted in UTC and then the time-zone offset is applied. Otherwise, the year, month, day of month, hour, minute, and second are interpreted in the local time zone.</source>
          <target state="translated">전체 문자열이 스캔되면 두 가지 방법 중 하나로 시간 결과로 변환됩니다. 시간대 또는 시간대 오프셋이 인식 된 경우 연도, 월, 일,시, 분 및 초가 UTC로 해석되고 시간대 오프셋이 적용됩니다. 그렇지 않으면 년, 월, 일,시, 분 및 초가 현지 시간대로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="ccec0bd228d1acda555ebe35c7f30eae53cb1b07" translate="yes" xml:space="preserve">
          <source>Once the keystore has been loaded, it is possible to read existing entries from the keystore, or to write new entries into the keystore:</source>
          <target state="translated">키 저장소가로드되면 키 저장소에서 기존 항목을 읽거나 키 저장소에 새 항목을 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aca067ea29aae660f0b18eebc2d265c317c10789" translate="yes" xml:space="preserve">
          <source>Once the labels have been set, this method calls &lt;a href=&quot;#updateLabelUIs()&quot;&gt;&lt;code&gt;updateLabelUIs()&lt;/code&gt;&lt;/a&gt;. Note that the labels are only painted if the &lt;code&gt;paintLabels&lt;/code&gt; property is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">레이블이 설정되면이 메서드는 &lt;a href=&quot;#updateLabelUIs()&quot;&gt; &lt;code&gt;updateLabelUIs()&lt;/code&gt; &lt;/a&gt; 호출합니다 . 레이블은 &lt;code&gt;paintLabels&lt;/code&gt; 속성이 &lt;code&gt;true&lt;/code&gt; 인 경우에만 페인트됩니다. .</target>
        </trans-unit>
        <trans-unit id="c486f9606f8e732e06c6d244bbc9d4c6b1f4327f" translate="yes" xml:space="preserve">
          <source>Once the look and feel has been changed it is imperative to invoke &lt;code&gt;updateUI&lt;/code&gt; on all &lt;code&gt;JComponents&lt;/code&gt;. The method &lt;a href=&quot;swingutilities#updateComponentTreeUI(java.awt.Component)&quot;&gt;&lt;code&gt;SwingUtilities.updateComponentTreeUI(java.awt.Component)&lt;/code&gt;&lt;/a&gt; makes it easy to apply &lt;code&gt;
 updateUI&lt;/code&gt; to a containment hierarchy. Refer to it for details. The exact behavior of not invoking &lt;code&gt;
 updateUI&lt;/code&gt; after changing the look and feel is unspecified. It is very possible to receive unexpected exceptions, painting problems, or worse.</source>
          <target state="translated">룩앤필이 변경되면 모든 &lt;code&gt;JComponents&lt;/code&gt; 에서 &lt;code&gt;updateUI&lt;/code&gt; 를 호출 해야합니다 . 방법 &lt;a href=&quot;swingutilities#updateComponentTreeUI(java.awt.Component)&quot;&gt; &lt;code&gt;SwingUtilities.updateComponentTreeUI(java.awt.Component)&lt;/code&gt; &lt;/a&gt; 쉽게 적용 할 수 있습니다 &lt;code&gt; updateUI&lt;/code&gt; 포함 계층 구조에. 자세한 내용은 그것을 참조하십시오. 모양과 느낌을 변경 한 후 &lt;code&gt; updateUI&lt;/code&gt; 를 호출하지 않는 정확한 동작은 지정되지 않았습니다 . 예상치 못한 예외, 페인팅 문제 또는 더 나쁜 경우가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01b2e071289d65f0c84dbafa94d91f100b47f7ea" translate="yes" xml:space="preserve">
          <source>Once the parent chain is complete, the bundle is returned.</source>
          <target state="translated">상위 체인이 완료되면 번들이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="1f2acb3894e9f86e85942e0492bf9b250e96f440" translate="yes" xml:space="preserve">
          <source>Once the printer starts processing the print job, additional information about the job becomes available, which might include: the job state (such as</source>
          <target state="translated">프린터가 인쇄 작업 처리를 시작하면 다음과 같은 작업에 대한 추가 정보를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="845ab2b792c0ef8d1ae0bcd896f549a565da9818" translate="yes" xml:space="preserve">
          <source>Once the shutdown sequence has begun it can be stopped only by invoking the &lt;a href=&quot;#halt(int)&quot;&gt;&lt;code&gt;halt&lt;/code&gt;&lt;/a&gt; method, which forcibly terminates the virtual machine.</source>
          <target state="translated">종료 시퀀스가 ​​시작되면 가상 머신을 강제로 종료하는 &lt;a href=&quot;#halt(int)&quot;&gt; &lt;code&gt;halt&lt;/code&gt; &lt;/a&gt; 메소드 를 호출해야만 중지 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="90579c9e627e7bde2f2e1f676098170028197986" translate="yes" xml:space="preserve">
          <source>Once the shutdown sequence has begun it can be stopped only by invoking the &lt;code&gt;&lt;a href=&quot;runtime#halt-int-&quot;&gt;&lt;code&gt;halt&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method, which forcibly terminates the virtual machine.</source>
          <target state="translated">종료 시퀀스가 ​​시작되면 &lt;code&gt;&lt;a href=&quot;runtime#halt-int-&quot;&gt;&lt;code&gt;halt&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 방법 을 호출해야만 중지 할 수 있습니다.이 방법은 가상 머신을 강제로 종료합니다.</target>
        </trans-unit>
        <trans-unit id="4c34fda8e0539fa0df5e1db2a1d3a001ddc7144a" translate="yes" xml:space="preserve">
          <source>Once the shutdown sequence has begun it is impossible to register a new shutdown hook or de-register a previously-registered hook. Attempting either of these operations will cause an &lt;a href=&quot;illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">종료 시퀀스가 ​​시작되면 새 종료 후크를 등록하거나 이전에 등록 된 후크를 등록 취소 할 수 없습니다. 이러한 작업 중 하나를 시도하면 &lt;a href=&quot;illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="a0c8bdafeda863a746cbb2b92727d31e67c0c1f1" translate="yes" xml:space="preserve">
          <source>Once the shutdown sequence has begun it is impossible to register a new shutdown hook or de-register a previously-registered hook. Attempting either of these operations will cause an &lt;code&gt;&lt;a href=&quot;illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; to be thrown.</source>
          <target state="translated">종료 시퀀스가 ​​시작되면 새 종료 후크를 등록하거나 이전에 등록 된 후크를 등록 취소 할 수 없습니다. 이러한 조작 중 하나를 시도하면 &lt;code&gt;&lt;a href=&quot;illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c08bd8c63374d82da99c32b9b245ace78a574cbf" translate="yes" xml:space="preserve">
          <source>Once the stream has been parsed, the callback is notified of the most likely end of line string. The end of line string will be one of \n, \r or \r\n, which ever is encountered the most in parsing the stream.</source>
          <target state="translated">스트림이 파싱되면 콜백은 가장 가능성이 높은 줄 문자열의 끝을 알립니다. 줄 문자열의 끝은 \ n, \ r 또는 \ r \ n 중 하나이며 스트림을 구문 분석 할 때 가장 많이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b98a1ed32c18890aab3a523921faed457f9a4bab" translate="yes" xml:space="preserve">
          <source>Once you create a persistence delegate, you register it using the &lt;code&gt;setPersistenceDelegate&lt;/code&gt; method of &lt;code&gt;XMLEncoder&lt;/code&gt;.</source>
          <target state="translated">지속성 대리자를 만든 &lt;code&gt;setPersistenceDelegate&lt;/code&gt; 는 &lt;code&gt;XMLEncoder&lt;/code&gt; 의 setPersistenceDelegate 메서드를 사용하여 등록합니다 .</target>
        </trans-unit>
        <trans-unit id="4f234b70d064507743e36c08ffa4218f59143081" translate="yes" xml:space="preserve">
          <source>Once you know the number of attributes, you can iterate through the list.</source>
          <target state="translated">속성 수를 알고 나면 목록을 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97f7fcac6241fe83cde072083f7ea90745257065" translate="yes" xml:space="preserve">
          <source>Once you've created a &lt;code&gt;Locale&lt;/code&gt; you can query it for information about itself. Use &lt;code&gt;getCountry&lt;/code&gt; to get the country (or region) code and &lt;code&gt;getLanguage&lt;/code&gt; to get the language code. You can use &lt;code&gt;getDisplayCountry&lt;/code&gt; to get the name of the country suitable for displaying to the user. Similarly, you can use &lt;code&gt;getDisplayLanguage&lt;/code&gt; to get the name of the language suitable for displaying to the user. Interestingly, the &lt;code&gt;getDisplayXXX&lt;/code&gt; methods are themselves locale-sensitive and have two versions: one that uses the default &lt;a href=&quot;locale.category#DISPLAY&quot;&gt;&lt;code&gt;DISPLAY&lt;/code&gt;&lt;/a&gt; locale and one that uses the locale specified as an argument.</source>
          <target state="translated">&lt;code&gt;Locale&lt;/code&gt; 을 만든 후에는 로캘에 대한 정보를 쿼리 할 수 ​​있습니다. &lt;code&gt;getCountry&lt;/code&gt; 를 사용 하여 국가 (또는 지역) 코드 를 얻고 &lt;code&gt;getLanguage&lt;/code&gt; 를 사용하여 언어 코드를 가져 오십시오. &lt;code&gt;getDisplayCountry&lt;/code&gt; 를 사용 하여 사용자에게 표시하기에 적합한 국가 이름을 얻을 수 있습니다 . 마찬가지로 &lt;code&gt;getDisplayLanguage&lt;/code&gt; 를 사용 하여 사용자에게 표시하기에 적합한 언어의 이름을 얻을 수 있습니다 . 흥미롭게도 &lt;code&gt;getDisplayXXX&lt;/code&gt; 메소드는 로케일에 민감하며 두 가지 버전이 있습니다. 하나는 기본 &lt;a href=&quot;locale.category#DISPLAY&quot;&gt; &lt;code&gt;DISPLAY&lt;/code&gt; &lt;/a&gt; 로케일을 사용하는 것과 다른 하나는 인수로 지정된 로케일을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7e034d4aa8247d4aa51ce0cb1311b322fd3147e7" translate="yes" xml:space="preserve">
          <source>One category of information found in directory schemas is &lt;em&gt;class definitions&lt;/em&gt;. An &quot;object class&quot; definition specifies the object's &lt;em&gt;type&lt;/em&gt; and what attributes (mandatory and optional) the object must/can have. Note that the term &quot;object class&quot; being referred to here is in the directory sense rather than in the Java sense. For example, if the named object is a directory object of &quot;Person&quot; class, &lt;code&gt;getSchemaClassDefinition()&lt;/code&gt; would return a &lt;code&gt;DirContext&lt;/code&gt; representing the (directory's) object class definition of &quot;Person&quot;.</source>
          <target state="translated">디렉토리 스키마에서 찾을 수있는 정보 범주는 &lt;em&gt;클래스 정의&lt;/em&gt; 입니다. &quot;객체 클래스&quot;정의는 객체의&lt;em&gt; 유형&lt;/em&gt; 과 객체가 가지고 있거나 가질 수있는 속성 (필수 및 선택)을 지정합니다. 여기서 언급되는 &quot;객체 클래스&quot;라는 용어는 Java 의미가 아니라 디렉토리 의미입니다. 예를 들어, 명명 된 객체가 &quot;Person&quot;클래스의 디렉토리 객체 인 경우 &lt;code&gt;getSchemaClassDefinition()&lt;/code&gt; 은 &quot;Person&quot; 의 (디렉토리의) 객체 클래스 정의를 나타내는 &lt;code&gt;DirContext&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9588f0f23f77b66b889c977d3af1cbc098d2973f" translate="yes" xml:space="preserve">
          <source>One digit for the &lt;a href=&quot;../temporal/chronofield#DAY_OF_WEEK&quot;&gt;&lt;code&gt;day-of-week&lt;/code&gt;&lt;/a&gt;. The value run from Monday (1) to Sunday (7).</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#DAY_OF_WEEK&quot;&gt; &lt;code&gt;day-of-week&lt;/code&gt; &lt;/a&gt; 한 자릿수 . 월요일 (1)부터 일요일 (7)까지의 값입니다.</target>
        </trans-unit>
        <trans-unit id="605bb12c493c6dd8d57aeac9d89cc3cdfabc4ba4" translate="yes" xml:space="preserve">
          <source>One field is used: week-of-month. The calculation ensures that weeks never overlap a month boundary. The month is divided into periods where each period starts on the defined first day-of-week. The earliest period is referred to as week 0 if it has less than the minimal number of days and week 1 if it has at least the minimal number of days.</source>
          <target state="translated">한 필드가 사용됩니다 : 매주. 계산은 주가 한 달 경계와 겹치지 않도록합니다. 월은 정의 된 요일에 각 기간이 시작되는 기간으로 나뉩니다. 최소 기간 (일)이 최소 인 경우 가장 이른 기간을 0 주로, 최소 기간 (일)이 최소 인 경우 1 주를 말합니다.</target>
        </trans-unit>
        <trans-unit id="5f6f45d2ed6281b8fd2a7a11fd1b8369a70d320a" translate="yes" xml:space="preserve">
          <source>One field is used: week-of-year. The calculation ensures that weeks never overlap a year boundary. The year is divided into periods where each period starts on the defined first day-of-week. The earliest period is referred to as week 0 if it has less than the minimal number of days and week 1 if it has at least the minimal number of days.</source>
          <target state="translated">일주일의 필드가 사용됩니다. 계산은 주가 연도 경계와 겹치지 않도록합니다. 연도는 각 기간이 정의 된 요일에 시작되는 기간으로 나뉩니다. 최소 기간 (일)이 최소 인 경우 가장 이른 기간을 0 주로, 최소 기간 (일)이 최소 인 경우 1 주를 말합니다.</target>
        </trans-unit>
        <trans-unit id="d576c21031c8a17aaa1f6bc7d6494418e656f2f6" translate="yes" xml:space="preserve">
          <source>One frame of the image is complete but there are more frames to be delivered.</source>
          <target state="translated">이미지의 한 프레임이 완성되었지만 전달할 프레임이 더 있습니다.</target>
        </trans-unit>
        <trans-unit id="87374168fe9f4173b4675432e3a7d16ff094e9f8" translate="yes" xml:space="preserve">
          <source>One method retrieves the &lt;code&gt;RowSet&lt;/code&gt; objects in the &lt;code&gt;JoinRowSet&lt;/code&gt; object, and another method retrieves the &lt;code&gt;RowSet&lt;/code&gt; names. A third method retrieves either the SQL &lt;code&gt;WHERE&lt;/code&gt; clause used behind the scenes to form the &lt;code&gt;JOIN&lt;/code&gt; or a text description of what the &lt;code&gt;WHERE&lt;/code&gt; clause does.</source>
          <target state="translated">한 메서드 는 &lt;code&gt;JoinRowSet&lt;/code&gt; 개체에서 &lt;code&gt;RowSet&lt;/code&gt; 개체를 검색하고 다른 메서드는 &lt;code&gt;RowSet&lt;/code&gt; 이름을 검색합니다 . 세 번째 방법 은 &lt;code&gt;JOIN&lt;/code&gt; 을 형성하기 위해 백그라운드에서 사용되는 SQL &lt;code&gt;WHERE&lt;/code&gt; 절 또는 &lt;code&gt;WHERE&lt;/code&gt; 절이 수행 하는 작업에 대한 텍스트 설명을 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="ae7e1865f86df866f7532868bf7ccb97725a5930" translate="yes" xml:space="preserve">
          <source>One method sets the &lt;code&gt;JOIN&lt;/code&gt; type, and five methods find out whether the &lt;code&gt;JoinRowSet&lt;/code&gt; object supports a given type.</source>
          <target state="translated">한 가지 방법은 &lt;code&gt;JOIN&lt;/code&gt; 유형을 설정 하고 다섯 가지 방법은 &lt;code&gt;JoinRowSet&lt;/code&gt; 객체가 주어진 유형을 지원 하는지 여부를 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="2e38101bf88d60f2a89b42ce2b98cda17d81ef39" translate="yes" xml:space="preserve">
          <source>One of &quot;constructor&quot;, &quot;operation&quot;, &quot;getter&quot;, or &quot;setter&quot;.</source>
          <target state="translated">&quot;생성자&quot;, &quot;작업&quot;, &quot;getter&quot;또는 &quot;setter&quot;중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="afbd86f36e0ef566a5063223390002afc56a1b34" translate="yes" xml:space="preserve">
          <source>One of &lt;code&gt;NONE&lt;/code&gt;, &lt;code&gt;FRAME&lt;/code&gt;, &lt;code&gt;PLAIN_DIALOG&lt;/code&gt;, &lt;code&gt;INFORMATION_DIALOG&lt;/code&gt;, &lt;code&gt;ERROR_DIALOG&lt;/code&gt;, &lt;code&gt;COLOR_CHOOSER_DIALOG&lt;/code&gt;, &lt;code&gt;FILE_CHOOSER_DIALOG&lt;/code&gt;, &lt;code&gt;QUESTION_DIALOG&lt;/code&gt; or &lt;code&gt;WARNING_DIALOG&lt;/code&gt;.</source>
          <target state="translated">하나 &lt;code&gt;NONE&lt;/code&gt; , &lt;code&gt;FRAME&lt;/code&gt; , &lt;code&gt;PLAIN_DIALOG&lt;/code&gt; , &lt;code&gt;INFORMATION_DIALOG&lt;/code&gt; , &lt;code&gt;ERROR_DIALOG&lt;/code&gt; , &lt;code&gt;COLOR_CHOOSER_DIALOG&lt;/code&gt; , &lt;code&gt;FILE_CHOOSER_DIALOG&lt;/code&gt; , &lt;code&gt;QUESTION_DIALOG&lt;/code&gt; 또는 &lt;code&gt;WARNING_DIALOG&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="922b78f8979ea6ecd5f6cbbf55303f6d562d9fe1" translate="yes" xml:space="preserve">
          <source>One of OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE.</source>
          <target state="translated">OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="b579d68beb5e3ec9fd63244ea9d4faf30b2f4f06" translate="yes" xml:space="preserve">
          <source>One of the &lt;code&gt;TIFFTag.TIFF_*&lt;/code&gt; constants or &lt;code&gt;-1&lt;/code&gt; if the name is not recognized.</source>
          <target state="translated">&lt;code&gt;TIFFTag.TIFF_*&lt;/code&gt; 상수 중 하나 또는 이름이 인식되지 않는 경우 &lt;code&gt;-1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4d4a71c8cd15b784ae4edf9921b152392f1885a1" translate="yes" xml:space="preserve">
          <source>One of the &lt;code&gt;setInput()&lt;/code&gt; methods should be called whenever &lt;code&gt;needsInput()&lt;/code&gt; returns true indicating that more input data is required.</source>
          <target state="translated">더 많은 입력 데이터가 필요함을 나타내는 &lt;code&gt;needsInput()&lt;/code&gt; 이 true를 리턴 할 때마다 &lt;code&gt;setInput()&lt;/code&gt; 메소드 중 하나를 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="82fef1f230d408705adc5e73d6d9a5bce626a8ab" translate="yes" xml:space="preserve">
          <source>One of the color space type constants defined in the &lt;code&gt;ColorSpace&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;ColorSpace&lt;/code&gt; 클래스에 정의 된 색 공간 유형 상수 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="2f608b50df9cf9230695c9fe8060b1949e456648" translate="yes" xml:space="preserve">
          <source>One of the essential characteristics of SAX2 is that it added feature flags which can be used to examine and perhaps modify parser modes, in particular modes such as validation. Since features are identified by (absolute) URIs, anyone can define such features. Currently defined standard feature URIs have the prefix &lt;code&gt;http://xml.org/sax/features/&lt;/code&gt; before an identifier such as &lt;code&gt;validation&lt;/code&gt;. Turn features on or off using &lt;em&gt;setFeature&lt;/em&gt;. Those standard identifiers are:</source>
          <target state="translated">SAX2의 필수 특성 중 하나는 유효성 검사와 같은 특정 모드에서 파서 모드를 검사하고 수정하는 데 사용할 수있는 기능 플래그를 추가했다는 것입니다. 기능은 (절대) URI로 식별되므로 누구나 이러한 기능을 정의 할 수 있습니다. 현재 정의 된 표준 기능 URI에는 &lt;code&gt;validation&lt;/code&gt; 과 같은 식별자 앞에 &lt;code&gt;http://xml.org/sax/features/&lt;/code&gt; 접두사가 있습니다 . &lt;em&gt;setFeature를&lt;/em&gt; 사용하여 기능을 켜거나 끕니다 . 이러한 표준 식별자는 다음과 같습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4405169701a92ab066203d0477e58d2deb67cde1" translate="yes" xml:space="preserve">
          <source>One of the following class constants: &lt;a href=&quot;datatypeconstants#DATETIME&quot;&gt;&lt;code&gt;DatatypeConstants.DATETIME&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypeconstants#TIME&quot;&gt;&lt;code&gt;DatatypeConstants.TIME&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypeconstants#DATE&quot;&gt;&lt;code&gt;DatatypeConstants.DATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypeconstants#GYEARMONTH&quot;&gt;&lt;code&gt;DatatypeConstants.GYEARMONTH&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypeconstants#GMONTHDAY&quot;&gt;&lt;code&gt;DatatypeConstants.GMONTHDAY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypeconstants#GYEAR&quot;&gt;&lt;code&gt;DatatypeConstants.GYEAR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypeconstants#GMONTH&quot;&gt;&lt;code&gt;DatatypeConstants.GMONTH&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;datatypeconstants#GDAY&quot;&gt;&lt;code&gt;DatatypeConstants.GDAY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 클래스 상수 중 하나 : &lt;a href=&quot;datatypeconstants#DATETIME&quot;&gt; &lt;code&gt;DatatypeConstants.DATETIME&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;datatypeconstants#TIME&quot;&gt; &lt;code&gt;DatatypeConstants.TIME&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;datatypeconstants#DATE&quot;&gt; &lt;code&gt;DatatypeConstants.DATE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;datatypeconstants#GYEARMONTH&quot;&gt; &lt;code&gt;DatatypeConstants.GYEARMONTH&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;datatypeconstants#GMONTHDAY&quot;&gt; &lt;code&gt;DatatypeConstants.GMONTHDAY&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;datatypeconstants#GYEAR&quot;&gt; &lt;code&gt;DatatypeConstants.GYEAR&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;datatypeconstants#GMONTH&quot;&gt; &lt;code&gt;DatatypeConstants.GMONTH&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;datatypeconstants#GDAY&quot;&gt; &lt;code&gt;DatatypeConstants.GDAY&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d7eb02b1f4b09774b7eb7e6dd992d595cd9f3ae8" translate="yes" xml:space="preserve">
          <source>One of the following constants defined in &lt;code&gt;SwingConstants&lt;/code&gt;: &lt;code&gt;LEFT&lt;/code&gt;, &lt;code&gt;CENTER&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt;, &lt;code&gt;LEADING&lt;/code&gt; or &lt;code&gt;TRAILING&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SwingConstants&lt;/code&gt; 에 정의 된 다음 상수 중 하나 : &lt;code&gt;LEFT&lt;/code&gt; , &lt;code&gt;CENTER&lt;/code&gt; , &lt;code&gt;RIGHT&lt;/code&gt; , &lt;code&gt;LEADING&lt;/code&gt; 또는 &lt;code&gt;TRAILING&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fbc89de7ccb30efcb5c930e1bc8e19abd549559" translate="yes" xml:space="preserve">
          <source>One of the following constants defined in &lt;code&gt;SwingConstants&lt;/code&gt;: &lt;code&gt;TOP&lt;/code&gt;, &lt;code&gt;CENTER&lt;/code&gt;, or &lt;code&gt;BOTTOM&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SwingConstants&lt;/code&gt; 에 정의 된 다음 상수 중 하나 : &lt;code&gt;TOP&lt;/code&gt; , &lt;code&gt;CENTER&lt;/code&gt; 또는 &lt;code&gt;BOTTOM&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="799c56d2c5e78b9e705bae6d8d0695eaf505126f" translate="yes" xml:space="preserve">
          <source>One of the integer constant closure types defined in this class.</source>
          <target state="translated">이 클래스에 정의 된 정수 상수 클로저 유형 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="a4a01191f3226f9b3e993b9743cad43d9d5ac4c8" translate="yes" xml:space="preserve">
          <source>One of the main reasons to use a &lt;code&gt;CachedRowSet&lt;/code&gt; object is to pass data between different components of an application. Because it is serializable, a &lt;code&gt;CachedRowSet&lt;/code&gt; object can be used, for example, to send the result of a query executed by an enterprise JavaBeans component running in a server environment over a network to a client running in a web browser.</source>
          <target state="translated">&lt;code&gt;CachedRowSet&lt;/code&gt; 개체 를 사용하는 주된 이유 중 하나 는 응용 프로그램의 서로 다른 구성 요소간에 데이터를 전달하는 것입니다. 직렬화 가능하기 때문에 &lt;code&gt;CachedRowSet&lt;/code&gt; 객체는 예를 들어 네트워크를 통해 서버 환경에서 실행되는 엔터프라이즈 JavaBeans 구성 요소에 의해 실행되는 쿼리 결과를 웹 브라우저에서 실행되는 클라이언트로 전송하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1580a3303814ba6dfac8ad8532aec704070d1bbb" translate="yes" xml:space="preserve">
          <source>One of the model change methods &amp;mdash; The view invokes a model change method when the underlying model has changed. There may be order dependencies in how the events are delivered, so a &lt;code&gt;RowSorter&lt;/code&gt; should not update its mapping until one of these methods is invoked.</source>
          <target state="translated">모델 변경 방법 중 하나 &amp;mdash; 기본 모델이 변경되면 뷰가 모델 변경 방법을 호출합니다. 이벤트가 전달되는 방식에 순서 종속성이있을 수 있으므로 &lt;code&gt;RowSorter&lt;/code&gt; 는 이러한 메서드 중 하나가 호출 될 때까지 매핑을 업데이트하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="fe4d8f7aaa6706a62ce85840f913a3efb08f059f" translate="yes" xml:space="preserve">
          <source>One of the outputs of the PKIX certification path validation algorithm is a valid policy tree, which includes the policies that were determined to be valid, how this determination was reached, and any policy qualifiers encountered. This tree is of depth</source>
          <target state="translated">PKIX 인증 경로 유효성 검증 알고리즘의 출력 중 하나는 유효한 정책 트리입니다. 여기에는 유효한 것으로 결정된 정책,이 결정 방법 및 정책 규정자가 포함됩니다. 이 나무는 깊이</target>
        </trans-unit>
        <trans-unit id="d52a9f16c0f1997b93147784ca86d41aaba7b263" translate="yes" xml:space="preserve">
          <source>One of the predefined profile class constants.</source>
          <target state="translated">미리 정의 된 프로필 클래스 상수 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="d20c8d68e4fa1c9bd5385a749c4f7d63db922558" translate="yes" xml:space="preserve">
          <source>One of the primary functions of a BeanContext is to act a as rendezvous between JavaBeans, and BeanContextServiceProviders.</source>
          <target state="translated">BeanContext의 주요 기능 중 하나는 JavaBeans와 BeanContextServiceProviders 사이의 랑데부 역할을하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a5be84e39d45f3119fac14867bd068de30f02ec9" translate="yes" xml:space="preserve">
          <source>One of: OnUpdate|OnTimer|NoMoreOftenThan|OnUnregister|Always|Never. See the section &quot;MBean Descriptor Fields&quot; in the JMX specification document.</source>
          <target state="translated">다음 중 하나 : OnUpdate | OnTimer | NoMoreOftenThan | OnUnregister | Always | Never. JMX 스펙 문서의 &quot;MBean 설명자 필드&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e8497a43da08b24bad6a75c0786424b8ff5600e4" translate="yes" xml:space="preserve">
          <source>One or more covers on the device are open.</source>
          <target state="translated">장치의 덮개가 열려 있습니다.</target>
        </trans-unit>
        <trans-unit id="11fb9b0a3d2e0a42dc8a562c50caca69bc446c74" translate="yes" xml:space="preserve">
          <source>One or more doors on the device are open.</source>
          <target state="translated">장치의 하나 이상의 문이 열려 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3320f9d2fbefb75351f2508a06475d97445eb5b" translate="yes" xml:space="preserve">
          <source>One or more icons that depict the function. These icons can be used for the images in a menu control, or for composite entries in a more sophisticated user interface.</source>
          <target state="translated">기능을 나타내는 하나 이상의 아이콘. 이러한 아이콘은 메뉴 컨트롤의 이미지 또는보다 정교한 사용자 인터페이스의 복합 항목에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1919c413a12680a075b2bc40301db08032dad900" translate="yes" xml:space="preserve">
          <source>One or more input trays are not in the device.</source>
          <target state="translated">장치에 하나 이상의 입력 용지함이 없습니다.</target>
        </trans-unit>
        <trans-unit id="4afe595d25b2ac7cb5647c31344cdf1ed9cc1f7b" translate="yes" xml:space="preserve">
          <source>One or more interlock devices on the printer are unlocked.</source>
          <target state="translated">프린터의 하나 이상의 인터록 장치가 잠금 해제되었습니다.</target>
        </trans-unit>
        <trans-unit id="36dd4588ecf004d570e951c9e81131fa205679a1" translate="yes" xml:space="preserve">
          <source>One or more of the &lt;code&gt;className&lt;/code&gt;, &lt;code&gt;member&lt;/code&gt;, or &lt;code&gt;objectName&lt;/code&gt; may be omitted. If the &lt;code&gt;member&lt;/code&gt; is omitted, the &lt;code&gt;#&lt;/code&gt; may be too (but does not have to be). If the &lt;code&gt;objectName&lt;/code&gt; is omitted, the &lt;code&gt;[]&lt;/code&gt; may be too (but does not have to be). It is not legal to omit all three items, that is to have a &lt;em&gt;name&lt;/em&gt; that is the empty string.</source>
          <target state="translated">&lt;code&gt;className&lt;/code&gt; , &lt;code&gt;member&lt;/code&gt; 또는 &lt;code&gt;objectName&lt;/code&gt; 중 하나 이상 이 생략 될 수 있습니다. 는 IF &lt;code&gt;member&lt;/code&gt; 생략되면, &lt;code&gt;#&lt;/code&gt; 은 너무 될 수있다 (그러나 일 필요는 없습니다). 상기 중간 &lt;code&gt;objectName&lt;/code&gt; 생략되면, &lt;code&gt;[]&lt;/code&gt; 도있을 수있다 (그러나 일 필요는 없다). 세 가지 항목을 모두 생략하는 것은 합법적이지 않습니다. 즉 &lt;em&gt;이름&lt;/em&gt; 이 있어야합니다.&lt;em&gt;&lt;/em&gt; 이 빈 문자열 인 것입니다.</target>
        </trans-unit>
        <trans-unit id="62414662d1e806d54e64ac5bfd4cc008d10527e4" translate="yes" xml:space="preserve">
          <source>One or more of the &lt;code&gt;className&lt;/code&gt;, &lt;code&gt;member&lt;/code&gt;, or &lt;code&gt;objectName&lt;/code&gt; may be the character &quot;&lt;code&gt;-&lt;/code&gt;&quot;, which is equivalent to a null value. A null value is implied by any value (including another null value) but does not imply any other value.</source>
          <target state="translated">&lt;code&gt;className&lt;/code&gt; , &lt;code&gt;member&lt;/code&gt; 또는 &lt;code&gt;objectName&lt;/code&gt; 중 하나 이상이 &quot; &lt;code&gt;-&lt;/code&gt; &quot; 이는 널값과 같습니다. 널 (NULL) 값은 다른 값 (다른 널 (NULL) 값 포함)에 의해 암시되지만 다른 값을 의미하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="05d823061698213b78514643ca748d36417b98ef" translate="yes" xml:space="preserve">
          <source>One or more output areas are almost full (e.g. tray, stacker, collator).</source>
          <target state="translated">하나 이상의 출력 영역이 거의 찼습니다 (예 : 용지함, 스태커, 한장).</target>
        </trans-unit>
        <trans-unit id="f7be48f84b2c6dcf946b85f933e8ad9284283b9c" translate="yes" xml:space="preserve">
          <source>One or more output areas are full (e.g. tray, stacker, collator).</source>
          <target state="translated">하나 이상의 출력 영역이 가득 찼습니다 (예 : 용지함, 스태커, 한 부씩 인쇄기).</target>
        </trans-unit>
        <trans-unit id="a9e06c77a0c1a8a842f59cb0648b671d229a9144" translate="yes" xml:space="preserve">
          <source>One or more output trays are not in the device.</source>
          <target state="translated">장치에 하나 이상의 출력 용지함이 없습니다.</target>
        </trans-unit>
        <trans-unit id="62904c1a27e242152b3b7e7c4be2bc5da8971a64" translate="yes" xml:space="preserve">
          <source>One or more site specific standard job sheets are printed. e.g. a single start sheet is printed, or both start and end sheets are printed.</source>
          <target state="translated">하나 이상의 사이트 별 표준 작업 시트가 인쇄됩니다. 예를 들어, 단일 시작 시트가 인쇄되거나 시작 및 종료 시트가 모두 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="d5a299feba161a1659588c3dea5de8b3c714120d" translate="yes" xml:space="preserve">
          <source>One or more text strings that describe the function. These strings can be used, for example, to display the flyover text for a button or to set the text in a menu item.</source>
          <target state="translated">함수를 설명하는 하나 이상의 텍스트 문자열입니다. 예를 들어, 이러한 문자열은 버튼의 플라이 오버 텍스트를 표시하거나 메뉴 항목의 텍스트를 설정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14b6ea1b859bd2e8e85ef1ead8c7480271e874f2" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain a running &lt;code&gt;double&lt;/code&gt; value updated using a supplied function.</source>
          <target state="translated">제공된 함수를 사용하여 업데이트 된 실행 &lt;code&gt;double&lt;/code&gt; 값 을 함께 유지하는 하나 이상의 변수</target>
        </trans-unit>
        <trans-unit id="c5b5cad5dd4a0ec8121f631a6a291b8d356c06e6" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain a running &lt;code&gt;double&lt;/code&gt; value updated using a supplied function. When updates (method &lt;a href=&quot;#accumulate(double)&quot;&gt;&lt;code&gt;accumulate(double)&lt;/code&gt;&lt;/a&gt;) are contended across threads, the set of variables may grow dynamically to reduce contention. Method &lt;a href=&quot;#get()&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; (or, equivalently, &lt;a href=&quot;#doubleValue()&quot;&gt;&lt;code&gt;doubleValue()&lt;/code&gt;&lt;/a&gt;) returns the current value across the variables maintaining updates.</source>
          <target state="translated">제공된 함수를 사용하여 업데이트 된 실행중인 &lt;code&gt;double&lt;/code&gt; 값 을 함께 유지하는 하나 이상의 변수 . 업데이트 (method &lt;a href=&quot;#accumulate(double)&quot;&gt; &lt;code&gt;accumulate(double)&lt;/code&gt; &lt;/a&gt; )가 스레드간에 경합되면 변수 집합이 동적으로 증가하여 경합을 줄일 수 있습니다. &lt;a href=&quot;#get()&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 메서드 (또는 마찬가지로 &lt;a href=&quot;#doubleValue()&quot;&gt; &lt;code&gt;doubleValue()&lt;/code&gt; &lt;/a&gt; )는 업데이트를 유지하는 변수에서 현재 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="df3399c4848e7fe7f15d3575ea7c9a014cc409ef" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain a running &lt;code&gt;double&lt;/code&gt; value updated using a supplied function. When updates (method &lt;a href=&quot;doubleaccumulator#accumulate-double-&quot;&gt;&lt;code&gt;accumulate(double)&lt;/code&gt;&lt;/a&gt;) are contended across threads, the set of variables may grow dynamically to reduce contention. Method &lt;a href=&quot;doubleaccumulator#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; (or, equivalently, &lt;a href=&quot;doubleaccumulator#doubleValue--&quot;&gt;&lt;code&gt;doubleValue()&lt;/code&gt;&lt;/a&gt;) returns the current value across the variables maintaining updates.</source>
          <target state="translated">제공된 함수를 사용하여 업데이트 된 실행 &lt;code&gt;double&lt;/code&gt; 값 을 함께 유지하는 하나 이상의 변수 스레드간에 업데이트 (method &lt;a href=&quot;doubleaccumulator#accumulate-double-&quot;&gt; &lt;code&gt;accumulate(double)&lt;/code&gt; &lt;/a&gt; )가 포함되면 경합을 줄이기 위해 변수 세트가 동적으로 커질 수 있습니다. &lt;a href=&quot;doubleaccumulator#get--&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 메소드 (또는 &lt;a href=&quot;doubleaccumulator#doubleValue--&quot;&gt; &lt;code&gt;doubleValue()&lt;/code&gt; &lt;/a&gt; )는 업데이트를 유지 보수하는 변수에서 현재 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e6c76666a455301a84486e7585dbccafff15949e" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain a running &lt;code&gt;long&lt;/code&gt; value updated using a supplied function.</source>
          <target state="translated">제공된 함수를 사용하여 업데이트 된 &lt;code&gt;long&lt;/code&gt; 실행 값 을 함께 유지하는 하나 이상의 변수</target>
        </trans-unit>
        <trans-unit id="7f805dc20c031c348a148276faee4f13f1629929" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain a running &lt;code&gt;long&lt;/code&gt; value updated using a supplied function. When updates (method &lt;a href=&quot;#accumulate(long)&quot;&gt;&lt;code&gt;accumulate(long)&lt;/code&gt;&lt;/a&gt;) are contended across threads, the set of variables may grow dynamically to reduce contention. Method &lt;a href=&quot;#get()&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; (or, equivalently, &lt;a href=&quot;#longValue()&quot;&gt;&lt;code&gt;longValue()&lt;/code&gt;&lt;/a&gt;) returns the current value across the variables maintaining updates.</source>
          <target state="translated">제공된 함수를 사용하여 업데이트 된 &lt;code&gt;long&lt;/code&gt; 실행 값 을 함께 유지하는 하나 이상의 변수입니다 . 업데이트 (method &lt;a href=&quot;#accumulate(long)&quot;&gt; &lt;code&gt;accumulate(long)&lt;/code&gt; &lt;/a&gt; )가 스레드간에 경합되면 경합을 줄이기 위해 변수 세트가 동적으로 증가 할 수 있습니다. &lt;a href=&quot;#get()&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 메서드 (또는 이와 동등하게 &lt;a href=&quot;#longValue()&quot;&gt; &lt;code&gt;longValue()&lt;/code&gt; &lt;/a&gt; )는 업데이트를 유지하는 변수에서 현재 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ddc884d062eca7046f414986dc223120cf5a29e8" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain a running &lt;code&gt;long&lt;/code&gt; value updated using a supplied function. When updates (method &lt;a href=&quot;longaccumulator#accumulate-long-&quot;&gt;&lt;code&gt;accumulate(long)&lt;/code&gt;&lt;/a&gt;) are contended across threads, the set of variables may grow dynamically to reduce contention. Method &lt;a href=&quot;longaccumulator#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; (or, equivalently, &lt;a href=&quot;longaccumulator#longValue--&quot;&gt;&lt;code&gt;longValue()&lt;/code&gt;&lt;/a&gt;) returns the current value across the variables maintaining updates.</source>
          <target state="translated">제공된 함수를 사용하여 업데이트 된 &lt;code&gt;long&lt;/code&gt; 실행 값 을 함께 유지하는 하나 이상의 변수 스레드간에 업데이트 (메소드 &lt;a href=&quot;longaccumulator#accumulate-long-&quot;&gt; &lt;code&gt;accumulate(long)&lt;/code&gt; &lt;/a&gt; )가 발생하면 경합을 줄이기 위해 변수 세트가 동적으로 커질 수 있습니다. &lt;a href=&quot;longaccumulator#get--&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 메소드 (또는 이와 동일하게 &lt;a href=&quot;longaccumulator#longValue--&quot;&gt; &lt;code&gt;longValue()&lt;/code&gt; &lt;/a&gt; )는 업데이트를 유지 보수하는 변수에서 현재 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="aee3b653ddae02320cc07c068d3337d68ff8b0f3" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain an initially zero &lt;code&gt;double&lt;/code&gt; sum.</source>
          <target state="translated">초기에 0의 &lt;code&gt;double&lt;/code&gt; 합을 유지하는 하나 이상의 변수 .</target>
        </trans-unit>
        <trans-unit id="2512325ad41d03a9434393ac6fb10abc4ef217de" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain an initially zero &lt;code&gt;double&lt;/code&gt; sum. When updates (method &lt;a href=&quot;#add(double)&quot;&gt;&lt;code&gt;add(double)&lt;/code&gt;&lt;/a&gt;) are contended across threads, the set of variables may grow dynamically to reduce contention. Method &lt;a href=&quot;#sum()&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt; (or, equivalently &lt;a href=&quot;#doubleValue()&quot;&gt;&lt;code&gt;doubleValue()&lt;/code&gt;&lt;/a&gt;) returns the current total combined across the variables maintaining the sum. The order of accumulation within or across threads is not guaranteed. Thus, this class may not be applicable if numerical stability is required, especially when combining values of substantially different orders of magnitude.</source>
          <target state="translated">함께 초기에 0 &lt;code&gt;double&lt;/code&gt; 합을 유지하는 하나 이상의 변수 . 업데이트 (method &lt;a href=&quot;#add(double)&quot;&gt; &lt;code&gt;add(double)&lt;/code&gt; &lt;/a&gt; )가 스레드간에 경합되면 변수 세트가 동적으로 증가하여 경합을 줄일 수 있습니다. &lt;a href=&quot;#sum()&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt; 메서드 (또는 동일하게 &lt;a href=&quot;#doubleValue()&quot;&gt; &lt;code&gt;doubleValue()&lt;/code&gt; &lt;/a&gt; )는 합계를 유지하는 변수에서 결합 된 현재 합계를 반환합니다. 스레드 내부 또는 스레드 간의 누적 순서는 보장되지 않습니다. 따라서이 등급은 수치 안정성이 필요한 경우 적용되지 않을 수 있습니다. 특히 크기가 상당히 다른 값을 결합 할 때 더욱 그렇습니다.</target>
        </trans-unit>
        <trans-unit id="93486468ee762688a897083f21b3d34104622c82" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain an initially zero &lt;code&gt;double&lt;/code&gt; sum. When updates (method &lt;a href=&quot;doubleadder#add-double-&quot;&gt;&lt;code&gt;add(double)&lt;/code&gt;&lt;/a&gt;) are contended across threads, the set of variables may grow dynamically to reduce contention. Method &lt;a href=&quot;doubleadder#sum--&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt; (or, equivalently &lt;a href=&quot;doubleadder#doubleValue--&quot;&gt;&lt;code&gt;doubleValue()&lt;/code&gt;&lt;/a&gt;) returns the current total combined across the variables maintaining the sum. The order of accumulation within or across threads is not guaranteed. Thus, this class may not be applicable if numerical stability is required, especially when combining values of substantially different orders of magnitude.</source>
          <target state="translated">초기에 0의 &lt;code&gt;double&lt;/code&gt; 합을 유지하는 하나 이상의 변수 . 스레드간에 업데이트 (method &lt;a href=&quot;doubleadder#add-double-&quot;&gt; &lt;code&gt;add(double)&lt;/code&gt; &lt;/a&gt; )가 포함되면 경합을 줄이기 위해 변수 세트가 동적으로 커질 수 있습니다. &lt;a href=&quot;doubleadder#sum--&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt; 메소드 (또는 동등하게 &lt;a href=&quot;doubleadder#doubleValue--&quot;&gt; &lt;code&gt;doubleValue()&lt;/code&gt; &lt;/a&gt; )는 합계를 유지하는 변수에서 결합 된 현재 총계를 리턴합니다. 스레드 내에서 또는 스레드 간 누적 순서는 보장되지 않습니다. 따라서 수치 안정성이 필요한 경우, 특히 실질적으로 다른 차수의 값을 결합 할 때이 등급을 적용 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="482bd10fb92d85cf87792c8c91c2d1093debca0b" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain an initially zero &lt;code&gt;long&lt;/code&gt; sum.</source>
          <target state="translated">초기에 제로 &lt;code&gt;long&lt;/code&gt; 합을 유지하는 하나 이상의 변수 .</target>
        </trans-unit>
        <trans-unit id="abf700d57956f6a19bc9c773bb19c9c16a60ba2a" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain an initially zero &lt;code&gt;long&lt;/code&gt; sum. When updates (method &lt;a href=&quot;#add(long)&quot;&gt;&lt;code&gt;add(long)&lt;/code&gt;&lt;/a&gt;) are contended across threads, the set of variables may grow dynamically to reduce contention. Method &lt;a href=&quot;#sum()&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt; (or, equivalently, &lt;a href=&quot;#longValue()&quot;&gt;&lt;code&gt;longValue()&lt;/code&gt;&lt;/a&gt;) returns the current total combined across the variables maintaining the sum.</source>
          <target state="translated">함께 초기에 0의 &lt;code&gt;long&lt;/code&gt; 합계를 유지하는 하나 이상의 변수 . 업데이트 (method &lt;a href=&quot;#add(long)&quot;&gt; &lt;code&gt;add(long)&lt;/code&gt; &lt;/a&gt; )가 스레드간에 경합되면 변수 세트가 동적으로 증가하여 경합을 줄일 수 있습니다. &lt;a href=&quot;#sum()&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt; 메서드 (또는 동등하게 &lt;a href=&quot;#longValue()&quot;&gt; &lt;code&gt;longValue()&lt;/code&gt; &lt;/a&gt; )는 합계를 유지하는 변수에서 결합 된 현재 합계를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c90db9d12bad959451d38dd280b1fc89cefc4d18" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain an initially zero &lt;code&gt;long&lt;/code&gt; sum. When updates (method &lt;a href=&quot;longadder#add-long-&quot;&gt;&lt;code&gt;add(long)&lt;/code&gt;&lt;/a&gt;) are contended across threads, the set of variables may grow dynamically to reduce contention. Method &lt;a href=&quot;longadder#sum--&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt; (or, equivalently, &lt;a href=&quot;longadder#longValue--&quot;&gt;&lt;code&gt;longValue()&lt;/code&gt;&lt;/a&gt;) returns the current total combined across the variables maintaining the sum.</source>
          <target state="translated">초기에 제로 &lt;code&gt;long&lt;/code&gt; 합을 유지하는 하나 이상의 변수 . 스레드간에 업데이트 (method &lt;a href=&quot;longadder#add-long-&quot;&gt; &lt;code&gt;add(long)&lt;/code&gt; &lt;/a&gt; )가 포함되면 경합을 줄이기 위해 변수 세트가 동적으로 커질 수 있습니다. &lt;a href=&quot;longadder#sum--&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt; 메소드 (또는 &lt;a href=&quot;longadder#longValue--&quot;&gt; &lt;code&gt;longValue()&lt;/code&gt; &lt;/a&gt; )는 합계를 유지하는 변수에서 결합 된 현재 총계를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="df52bff901e73f26e196485a26f3cc6072c39f2f" translate="yes" xml:space="preserve">
          <source>One or two digits for the &lt;a href=&quot;../temporal/chronofield#DAY_OF_MONTH&quot;&gt;&lt;code&gt;day-of-month&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#DAY_OF_MONTH&quot;&gt; &lt;code&gt;day-of-month&lt;/code&gt; &lt;/a&gt; 1-2 자리 숫자입니다 .</target>
        </trans-unit>
        <trans-unit id="342e740512323188f3a7753264a3207774c748bb" translate="yes" xml:space="preserve">
          <source>One pre-defined policy which accepts all cookies.</source>
          <target state="translated">모든 쿠키를 허용하는 하나의 사전 정의 된 정책.</target>
        </trans-unit>
        <trans-unit id="d737e4b4e581695d6dea7936ecc31820116cc54c" translate="yes" xml:space="preserve">
          <source>One pre-defined policy which accepts no cookies.</source>
          <target state="translated">쿠키를 허용하지 않는 하나의 사전 정의 된 정책.</target>
        </trans-unit>
        <trans-unit id="eeca32a30cc77fcde88c2c9e897ca86963ed16fe" translate="yes" xml:space="preserve">
          <source>One pre-defined policy which only accepts cookies from original server.</source>
          <target state="translated">원래 서버의 쿠키 만 허용하는 하나의 사전 정의 된 정책.</target>
        </trans-unit>
        <trans-unit id="5eac38ac4cdcc9d5d0a95b63354a94285d784b02" translate="yes" xml:space="preserve">
          <source>One reason that a throwable may have a cause is that the class that throws it is built atop a lower layered abstraction, and an operation on the upper layer fails due to a failure in the lower layer. It would be bad design to let the throwable thrown by the lower layer propagate outward, as it is generally unrelated to the abstraction provided by the upper layer. Further, doing so would tie the API of the upper layer to the details of its implementation, assuming the lower layer's exception was a checked exception. Throwing a &quot;wrapped exception&quot; (i.e., an exception containing a cause) allows the upper layer to communicate the details of the failure to its caller without incurring either of these shortcomings. It preserves the flexibility to change the implementation of the upper layer without changing its API (in particular, the set of exceptions thrown by its methods).</source>
          <target state="translated">Throwable이 원인을 가질 수있는 한 가지 이유는이를 던지는 클래스가 하위 계층 추상화 위에 빌드되고 하위 계층의 실패로 인해 상위 계층의 조작이 실패하기 때문입니다. 하위 계층에 의해 던져 질 수있는 던지는 것을 일반적으로 상위 계층에 의해 제공되는 추상화와 관련이 없기 때문에 외향으로 전파되게하는 것은 좋지 않은 설계 일 것이다. 또한 하위 계층의 예외가 확인 된 예외라고 가정하면 상위 계층의 API를 구현 세부 정보에 연결합니다. &quot;래핑 된 예외&quot;(즉, 원인이 포함 된 예외)를 발생 시키면 상위 계층에서 이러한 단점 중 하나를 발생시키지 않고 실패에 대한 세부 정보를 호출자에게 전달할 수 있습니다. API를 변경하지 않고 상위 계층의 구현을 변경할 수있는 유연성을 유지합니다 (특히메소드에 의해 발생되는 예외 세트).</target>
        </trans-unit>
        <trans-unit id="65428b090b961731452f54c2dd68b80e0388ea87" translate="yes" xml:space="preserve">
          <source>One solution has been to create a &quot;QName&quot; object that holds the namespace URI, as well as the prefix and local name, but this is not always an optimal solution, as when, for example, you want to use unique strings as keys in a dictionary object. Not having a string representation also makes it difficult to specify a namespaced identity outside the context of an XML document.</source>
          <target state="translated">한 가지 해결책은 네임 스페이스 URI와 접두사 및 로컬 이름을 포함하는 &quot;QName&quot;객체를 만드는 것이었지만, 예를 들어 고유 한 문자열을 키로 사용하려는 경우와 같이 항상 최적의 해결책은 아닙니다. 사전 객체. 문자열 표현이 없으면 XML 문서의 컨텍스트 외부에서 네임 스페이스 ID를 지정하기가 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="3f15c21abd7b28313d83091574e7b951a12eea99" translate="yes" xml:space="preserve">
          <source>One special note: the &quot;key&quot; passed to this method could be of the form &quot;background&quot; or &quot;Button.background&quot; where &quot;Button&quot; equals the prefix passed to the NimbusStyle constructor. In either case, it looks for &quot;background&quot;.</source>
          <target state="translated">한 가지 특별한 참고 사항 :이 메서드에 전달 된 &quot;키&quot;는 &quot;background&quot;또는 &quot;Button.background&quot;형식 일 수 있습니다. 여기서 &quot;Button&quot;은 NimbusStyle 생성자에 전달 된 접두사와 같습니다. 두 경우 모두 &quot;배경&quot;을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="7513ae5cee9027025cb754725a3d9bb52be2032c" translate="yes" xml:space="preserve">
          <source>One stage's execution may be triggered by completion of a single stage, or both of two stages, or either of two stages. Dependencies on a single stage are arranged using methods with prefix &lt;em&gt;then&lt;/em&gt;. Those triggered by completion of &lt;em&gt;both&lt;/em&gt; of two stages may &lt;em&gt;combine&lt;/em&gt; their results or effects, using correspondingly named methods. Those triggered by &lt;em&gt;either&lt;/em&gt; of two stages make no guarantees about which of the results or effects are used for the dependent stage's computation.</source>
          <target state="translated">한 단계의 실행은 단일 단계 또는 두 단계 모두 또는 두 단계 중 하나의 완료로 트리거 될 수 있습니다. 단일 단계의 종속성은 접두사 &lt;em&gt;다음에&lt;/em&gt; 메소드를 사용하여 정렬됩니다 . 두 단계 를 &lt;em&gt;모두&lt;/em&gt; 완료하여 트리거 된 결과는 해당 명명 된 방법을 사용하여 결과 또는 효과를 &lt;em&gt;결합&lt;/em&gt; 할 수 있습니다 . 두 단계 &lt;em&gt;중 하나&lt;/em&gt; 에 의해 트리거 된 결과는 종속 단계의 계산에 어떤 결과 또는 효과가 사용되는지를 보증하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="746ba70072bc5aacf7773ae2b181405d36771cef" translate="yes" xml:space="preserve">
          <source>One strategy is to simply redefine the ViewFactory interface in the UI. By default, this UI itself acts as the factory for View implementations. This is useful for simple factories. To do this reimplement the &lt;a href=&quot;#create(javax.swing.text.Element)&quot;&gt;&lt;code&gt;create(javax.swing.text.Element)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">한 가지 전략은 단순히 UI에서 ViewFactory 인터페이스를 재정의하는 것입니다. 기본적으로이 UI 자체는 View 구현을위한 팩토리 역할을합니다. 이것은 간단한 공장에 유용합니다. 이를 위해 &lt;a href=&quot;#create(javax.swing.text.Element)&quot;&gt; &lt;code&gt;create(javax.swing.text.Element)&lt;/code&gt; &lt;/a&gt; 메소드를 다시 구현하십시오 .</target>
        </trans-unit>
        <trans-unit id="0285338f54615968520f7082086f7eeea38ccc85" translate="yes" xml:space="preserve">
          <source>One such piece of information is a transform that scales typographical points to pixels. (A point is defined to be exactly 1/72 of an inch, which is slightly different than the traditional mechanical measurement of a point.) A character that is rendered at 12pt on a 600dpi device might have a different size than the same character rendered at 12pt on a 72dpi device because of such factors as rounding to pixel boundaries and hints that the font designer may have specified.</source>
          <target state="translated">이러한 정보 중 하나는 인쇄 지점을 픽셀로 조정하는 변환입니다. (포인트는 정확히 1/72 인치로 정의되며, 이는 포인트의 기존 기계적 측정과 약간 다릅니다.) 600dpi 장치에서 12pt로 렌더링 된 캐릭터는 렌더링 된 동일한 캐릭터와 크기가 다를 수 있습니다. 픽셀 경계로 반올림 및 글꼴 디자이너가 지정했을 수있는 힌트와 같은 요인으로 인해 72dpi 장치에서 12pt에서.</target>
        </trans-unit>
        <trans-unit id="e8c5b1bb7eac971a45a3549bb6dab872a104a61d" translate="yes" xml:space="preserve">
          <source>One to nine digits for the &lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;nano-of-second&lt;/code&gt;&lt;/a&gt;. As many digits will be output as required.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;nano-of-second&lt;/code&gt; &lt;/a&gt; 1-9 자리입니다 . 필요한만큼 많은 숫자가 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="0cd16547614b7a560f339bea1486cfcd939578a6" translate="yes" xml:space="preserve">
          <source>One ubiquitous type of audio encoding is pulse-code modulation (PCM), which is simply a linear (proportional) representation of the sound waveform. With PCM, the number stored in each sample is proportional to the instantaneous amplitude of the sound pressure at that point in time. The numbers may be signed or unsigned integers or floats. Besides PCM, other encodings include mu-law and a-law, which are nonlinear mappings of the sound amplitude that are often used for recording speech.</source>
          <target state="translated">유비쿼터스 유형의 오디오 인코딩 중 하나는 PCM (Pulse-code Modulation)인데, 이는 단순히 사운드 파형의 선형 (비례) 표현입니다. PCM을 사용하면 각 샘플에 저장된 수는 해당 시점에서의 음압의 순간 진폭에 비례합니다. 숫자는 부호있는 또는 부호없는 정수 또는 부동 소수점 일 수 있습니다. PCM 이외에도 다른 인코딩에는 mu-law 및 a-law가 포함되는데, 이는 음성 녹음에 자주 사용되는 사운드 진폭의 비선형 매핑입니다.</target>
        </trans-unit>
        <trans-unit id="3598d0194f717700fa4233f24772048e40e95afb" translate="yes" xml:space="preserve">
          <source>One use of fields in application code is to retrieve fields for which there is no convenience method. For example, getting the day-of-month is common enough that there is a method on &lt;code&gt;LocalDate&lt;/code&gt; called &lt;code&gt;getDayOfMonth()&lt;/code&gt;. However for more unusual fields it is necessary to use the field. For example, &lt;code&gt;date.get(ChronoField.ALIGNED_WEEK_OF_MONTH)&lt;/code&gt;. The fields also provide access to the range of valid values.</source>
          <target state="translated">응용 프로그램 코드에서 필드를 사용하는 한 가지 방법은 편리한 방법이없는 필드를 검색하는 것입니다. 예를 들어, 월을 얻는 것은 &lt;code&gt;getDayOfMonth()&lt;/code&gt; 라는 &lt;code&gt;LocalDate&lt;/code&gt; 에 메소드가있을 정도로 일반적 입니다. 그러나 더 특이한 필드의 경우 필드를 사용해야합니다. 예를 들어, &lt;code&gt;date.get(ChronoField.ALIGNED_WEEK_OF_MONTH)&lt;/code&gt; 입니다. 이 필드는 유효한 값 범위에 대한 액세스도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="420ef7124f50aa9676350c15080e64322160a61b" translate="yes" xml:space="preserve">
          <source>One version of the &lt;code&gt;format&lt;/code&gt; method in the various &lt;code&gt;Format&lt;/code&gt; classes requires a &lt;code&gt;FieldPosition&lt;/code&gt; object as an argument. You use this &lt;code&gt;format&lt;/code&gt; method to perform partial formatting or to get information about the formatted output (such as the position of a field).</source>
          <target state="translated">다양한 &lt;code&gt;Format&lt;/code&gt; 클래스 에서 &lt;code&gt;format&lt;/code&gt; 메소드 의 한 버전 에는 &lt;code&gt;FieldPosition&lt;/code&gt; 객체가 인수로 필요합니다 . 이 &lt;code&gt;format&lt;/code&gt; 방법을 사용하면 부분 형식화를 수행하거나 형식화 된 출력에 대한 정보 (예 : 필드 위치)를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="50b1da3385e66fa6c94789f8605e8cdd8e38d15b" translate="yes" xml:space="preserve">
          <source>One way is to specify the character set as a parameter of the MIME type. This will be established by a call to the &lt;a href=&quot;#setContentType(java.lang.String)&quot;&gt;&lt;code&gt;setContentType&lt;/code&gt;&lt;/a&gt; method. If the content is loaded by the &lt;a href=&quot;#setPage(java.net.URL)&quot;&gt;&lt;code&gt;setPage&lt;/code&gt;&lt;/a&gt; method the content type will have been set according to the specification of the URL. It the file is loaded directly, the content type would be expected to have been set prior to loading.</source>
          <target state="translated">한 가지 방법은 문자 세트를 MIME 유형의 매개 변수로 지정하는 것입니다. 이것은 &lt;a href=&quot;#setContentType(java.lang.String)&quot;&gt; &lt;code&gt;setContentType&lt;/code&gt; &lt;/a&gt; 메소드 에 대한 호출로 설정됩니다 . 콘텐츠가 &lt;a href=&quot;#setPage(java.net.URL)&quot;&gt; &lt;code&gt;setPage&lt;/code&gt; &lt;/a&gt; 메서드에 의해로드되는 경우 콘텐츠 유형은 URL 사양에 따라 설정됩니다. 파일이 직접로드되면로드하기 전에 콘텐츠 유형이 설정되었을 것입니다.</target>
        </trans-unit>
        <trans-unit id="adbab091f14eef40a566c8686a36cba189c185dd" translate="yes" xml:space="preserve">
          <source>One way to cause a set of threads to repeatedly perform actions for a given number of iterations is to override &lt;code&gt;onAdvance&lt;/code&gt;:</source>
          <target state="translated">주어진 수의 반복에 대해 일련의 스레드가 반복적으로 작업을 수행하게하는 한 가지 방법은 &lt;code&gt;onAdvance&lt;/code&gt; 를 재정의하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="a7180dc5427dce83f3a6bfd15c6d8cd14c1d7269" translate="yes" xml:space="preserve">
          <source>One with descriptor &lt;code&gt;&quot;name=GENERIC,descriptorType=notification,log=T,severity=6,displayName=jmx.modelmbean.generic&quot;&lt;/code&gt;</source>
          <target state="translated">디스크립터가 &lt;code&gt;&quot;name=GENERIC,descriptorType=notification,log=T,severity=6,displayName=jmx.modelmbean.generic&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ff6f3d315935e51afef097c55ff30e6b8dd66e9" translate="yes" xml:space="preserve">
          <source>One with descriptor name &quot;GENERIC&quot; and displayName &quot;jmx.modelmbean.generic&quot;</source>
          <target state="translated">디스크립터 이름이 &quot;GENERIC&quot;이고 displayName이 &quot;jmx.modelmbean.generic&quot;인 것</target>
        </trans-unit>
        <trans-unit id="5c2e2065b762e7263baf6479e9ae4df4f234f485" translate="yes" xml:space="preserve">
          <source>One would join a multicast group by first creating a MulticastSocket with the desired port, then invoking the &lt;code&gt;joinGroup(InetAddress groupAddr)&lt;/code&gt; method:</source>
          <target state="translated">먼저 원하는 포트로 MulticastSocket을 생성 한 다음 &lt;code&gt;joinGroup(InetAddress groupAddr)&lt;/code&gt; 메소드 를 호출하여 멀티 캐스트 그룹에 참여합니다 .</target>
        </trans-unit>
        <trans-unit id="de369079189fa781b1f07cb8ee88b598a0d385fc" translate="yes" xml:space="preserve">
          <source>One, but not both, of &lt;code&gt;rows&lt;/code&gt; and &lt;code&gt;cols&lt;/code&gt; can be zero, which means that any number of objects can be placed in a row or in a column.</source>
          <target state="translated">둘다는 아니지만 하나의 &lt;code&gt;rows&lt;/code&gt; 과 &lt;code&gt;cols&lt;/code&gt; 은 0이 될 수 있습니다. 즉, 행이나 열에 원하는 수의 개체를 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0a0b25a766d339d62e6ac98175c791ad516997a" translate="yes" xml:space="preserve">
          <source>Only IPv4 networks have broadcast address therefore, in the case of an IPv6 network, &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="translated">IPv4 네트워크 만 브로드 캐스트 주소를 가지므로 IPv6 네트워크의 경우 &lt;code&gt;null&lt;/code&gt; 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="62fd299298f7f7ca5a40abe88e824377c5523fc4" translate="yes" xml:space="preserve">
          <source>Only SEG_MOVETO, SEG_LINETO, and SEG_CLOSE point types are returned by the iterator.</source>
          <target state="translated">반복기에 의해 SEG_MOVETO, SEG_LINETO 및 SEG_CLOSE 포인트 유형 만 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="f78e8c45812d27eac9c65bc1520c62f3b43adfa7" translate="yes" xml:space="preserve">
          <source>Only SEG_MOVETO, SEG_LINETO, and SEG_CLOSE point types will be returned by the iterator.</source>
          <target state="translated">반복자는 SEG_MOVETO, SEG_LINETO 및 SEG_CLOSE 포인트 유형 만 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1d45daf40729b8c668479cc389535dbe22a2280a" translate="yes" xml:space="preserve">
          <source>Only a single 'u' character is allowed in a Unicode escape sequence.</source>
          <target state="translated">유니 코드 이스케이프 시퀀스에는 단일 'u'문자 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="233cd3e01418917aa25de83b86bb4eaf9a9fd92f" translate="yes" xml:space="preserve">
          <source>Only a single instance of a given leaf class (that is, the actual class returned by &lt;code&gt;getClass()&lt;/code&gt;, as opposed to any inherited classes or interfaces) may be registered. That is, suppose that the &lt;code&gt;com.mycompany.mypkg.GreenImageReaderProvider&lt;/code&gt; class is a subclass of &lt;code&gt;javax.imageio.spi.ImageReaderSpi&lt;/code&gt;. If a &lt;code&gt;GreenImageReaderProvider&lt;/code&gt; instance is registered, it will be stored in the category defined by the &lt;code&gt;ImageReaderSpi&lt;/code&gt; class. If a new instance of &lt;code&gt;GreenImageReaderProvider&lt;/code&gt; is registered, it will replace the previous instance. In practice, service provider objects are usually singletons so this behavior is appropriate.</source>
          <target state="translated">주어진 리프 클래스의 단일 인스턴스 (즉, 상속 된 클래스 또는 인터페이스와 반대로 &lt;code&gt;getClass()&lt;/code&gt; 반환하는 실제 클래스 ) 만 등록 할 수 있습니다. 즉, &lt;code&gt;com.mycompany.mypkg.GreenImageReaderProvider&lt;/code&gt; 클래스가 &lt;code&gt;javax.imageio.spi.ImageReaderSpi&lt;/code&gt; 의 하위 클래스 라고 가정합니다 . 경우 &lt;code&gt;GreenImageReaderProvider&lt;/code&gt; 의 인스턴스가 등록되며, 이것은에 의해 정의 된 카테고리에 저장 될 &lt;code&gt;ImageReaderSpi&lt;/code&gt; 클래스. &lt;code&gt;GreenImageReaderProvider&lt;/code&gt; 의 새 인스턴스 가 등록되면 이전 인스턴스를 대체합니다. 실제로 서비스 공급자 개체는 일반적으로 단일 항목이므로이 동작이 적절합니다.</target>
        </trans-unit>
        <trans-unit id="803dc8d5df618087742d7f194dd4083238edf49a" translate="yes" xml:space="preserve">
          <source>Only a single instance of a given leaf class (that is, the actual class returned by &lt;code&gt;getClass()&lt;/code&gt;, as opposed to any inherited classes or interfaces) may be registered. That is, suppose that the &lt;code&gt;com.mycompany.mypkg.GreenServiceProvider&lt;/code&gt; class implements the &lt;code&gt;com.mycompany.mypkg.MyService&lt;/code&gt; interface. If a &lt;code&gt;GreenServiceProvider&lt;/code&gt; instance is registered, it will be stored in the category defined by the &lt;code&gt;MyService&lt;/code&gt; class. If a new instance of &lt;code&gt;GreenServiceProvider&lt;/code&gt; is registered, it will replace the previous instance. In practice, service provider objects are usually singletons so this behavior is appropriate.</source>
          <target state="translated">주어진 리프 클래스의 단일 인스턴스 (즉, 상속 된 클래스 또는 인터페이스와 달리 &lt;code&gt;getClass()&lt;/code&gt; 에서 반환 한 실제 클래스 ) 만 등록 할 수 있습니다. 즉, &lt;code&gt;com.mycompany.mypkg.GreenServiceProvider&lt;/code&gt; 클래스가 &lt;code&gt;com.mycompany.mypkg.MyService&lt;/code&gt; 인터페이스를 구현 한다고 가정하십시오 . 경우 &lt;code&gt;GreenServiceProvider&lt;/code&gt; 인터페이스의 인스턴스가 등록되며, 이것은에 의해 정의 된 카테고리에 저장 될 &lt;code&gt;MyService&lt;/code&gt; 클래스. &lt;code&gt;GreenServiceProvider&lt;/code&gt; 의 새 인스턴스 가 등록되면 이전 인스턴스를 대체합니다. 실제로 서비스 공급자 개체는 일반적으로 싱글 톤이므로이 동작이 적합합니다.</target>
        </trans-unit>
        <trans-unit id="387f176b3fcddbfc7636123547b234757d8db4a9" translate="yes" xml:space="preserve">
          <source>Only a subset of units are accepted by this method. The unit must either have an &lt;a href=&quot;temporal/temporalunit#isDurationEstimated()&quot;&gt;exact duration&lt;/a&gt; or be &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;ChronoUnit.DAYS&lt;/code&gt;&lt;/a&gt; which is treated as 24 hours. Other units throw an exception.</source>
          <target state="translated">이 방법에서는 단위의 하위 집합 만 허용됩니다. 단위는 &lt;a href=&quot;temporal/temporalunit#isDurationEstimated()&quot;&gt;정확한 기간&lt;/a&gt; 이거나 24 시간으로 처리되는 &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;ChronoUnit.DAYS&lt;/code&gt; &lt;/a&gt; 여야합니다 . 다른 유닛은 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="3cab62ad1e2088792f04d14c3bb40f91b8e501f5" translate="yes" xml:space="preserve">
          <source>Only a subset of units are accepted by this method. The unit must either have an &lt;a href=&quot;temporal/temporalunit#isDurationEstimated--&quot;&gt;exact duration&lt;/a&gt; or be &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;ChronoUnit.DAYS&lt;/code&gt;&lt;/a&gt; which is treated as 24 hours. Other units throw an exception.</source>
          <target state="translated">이 방법에서는 단위의 하위 집합 만 허용됩니다. 단위는 &lt;a href=&quot;temporal/temporalunit#isDurationEstimated--&quot;&gt;정확한 지속 시간을&lt;/a&gt; 갖거나 &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;ChronoUnit.DAYS&lt;/code&gt; &lt;/a&gt; 24 시간으로 처리되는 . 다른 부대는 예외를 던진다.</target>
        </trans-unit>
        <trans-unit id="2dc351739410362c064be668bf4ed861ddd938cb" translate="yes" xml:space="preserve">
          <source>Only attributes implementing the &lt;code&gt;Attribute&lt;/code&gt; interface can be added to the set.</source>
          <target state="translated">&lt;code&gt;Attribute&lt;/code&gt; 인터페이스를 구현하는 속성 만 세트에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a84502df02eb40c74486c2d698c85b33ffa15468" translate="yes" xml:space="preserve">
          <source>Only check the revocation status of end-entity certificates.</source>
          <target state="translated">최종 엔터티 인증서의 해지 상태 만 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="178cb07ad6c341aac197f42243ada3ec40a238f5" translate="yes" xml:space="preserve">
          <source>Only closed paths and sub-paths are stored. &lt;code&gt;Area&lt;/code&gt; objects constructed from unclosed paths are implicitly closed during construction as if those paths had been filled by the &lt;code&gt;Graphics2D.fill&lt;/code&gt; method.</source>
          <target state="translated">닫힌 경로와 하위 경로 만 저장됩니다. 닫히지 않은 경로에서 생성 된 &lt;code&gt;Area&lt;/code&gt; 객체는 마치 &lt;code&gt;Graphics2D.fill&lt;/code&gt; 메서드에 의해 해당 경로가 채워진 것처럼 구성 중에 암시 적으로 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="efe893937d1c89d45f76e45f667de3d7e62496e9" translate="yes" xml:space="preserve">
          <source>Only column descriptions matching the catalog, schema, table and column name criteria are returned. They are ordered by &lt;code&gt;TABLE_CAT&lt;/code&gt;,&lt;code&gt;TABLE_SCHEM&lt;/code&gt;, &lt;code&gt;TABLE_NAME&lt;/code&gt; and &lt;code&gt;COLUMN_NAME&lt;/code&gt;.</source>
          <target state="translated">카탈로그, 스키마, 테이블 및 열 이름 기준과 일치하는 열 설명 만 반환됩니다. &lt;code&gt;TABLE_CAT&lt;/code&gt; , &lt;code&gt;TABLE_SCHEM&lt;/code&gt; , &lt;code&gt;TABLE_NAME&lt;/code&gt; 및 &lt;code&gt;COLUMN_NAME&lt;/code&gt; 에 의해 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="05c15bb3981e8030c7e2c23693b1ebef20c8f489" translate="yes" xml:space="preserve">
          <source>Only column descriptions matching the catalog, schema, table and column name criteria are returned. They are ordered by &lt;code&gt;TABLE_CAT&lt;/code&gt;,&lt;code&gt;TABLE_SCHEM&lt;/code&gt;, &lt;code&gt;TABLE_NAME&lt;/code&gt;, and &lt;code&gt;ORDINAL_POSITION&lt;/code&gt;.</source>
          <target state="translated">카탈로그, 스키마, 테이블 및 열 이름 기준과 일치하는 열 설명 만 반환됩니다. &lt;code&gt;TABLE_CAT&lt;/code&gt; , &lt;code&gt;TABLE_SCHEM&lt;/code&gt; , &lt;code&gt;TABLE_NAME&lt;/code&gt; 및 &lt;code&gt;ORDINAL_POSITION&lt;/code&gt; 에 의해 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="d9fd4ccab155dd21e0000b540e9c717cd1fc20fc" translate="yes" xml:space="preserve">
          <source>Only descriptions matching the schema, function and parameter name criteria are returned. They are ordered by &lt;code&gt;FUNCTION_CAT&lt;/code&gt;, &lt;code&gt;FUNCTION_SCHEM&lt;/code&gt;, &lt;code&gt;FUNCTION_NAME&lt;/code&gt; and &lt;code&gt;SPECIFIC_ NAME&lt;/code&gt;. Within this, the return value, if any, is first. Next are the parameter descriptions in call order. The column descriptions follow in column number order.</source>
          <target state="translated">스키마, 함수 및 매개 변수 이름 기준과 일치하는 설명 만 리턴됩니다. &lt;code&gt;FUNCTION_CAT&lt;/code&gt; , &lt;code&gt;FUNCTION_SCHEM&lt;/code&gt; , &lt;code&gt;FUNCTION_NAME&lt;/code&gt; 및 &lt;code&gt;SPECIFIC_ NAME&lt;/code&gt; 으로 정렬됩니다 . 이 내에서 반환 값 (있는 경우)이 첫 번째입니다. 다음은 호출 순서의 매개 변수 설명입니다. 열 설명은 열 번호 순서로 이어집니다.</target>
        </trans-unit>
        <trans-unit id="ec06522e7dbfb22a5424be19c8be97a403918d19" translate="yes" xml:space="preserve">
          <source>Only descriptions matching the schema, procedure and parameter name criteria are returned. They are ordered by PROCEDURE_CAT, PROCEDURE_SCHEM, PROCEDURE_NAME and SPECIFIC_NAME. Within this, the return value, if any, is first. Next are the parameter descriptions in call order. The column descriptions follow in column number order.</source>
          <target state="translated">스키마, 프로 시저 및 매개 변수 이름 기준과 일치하는 설명 만 리턴됩니다. PROCEDURE_CAT, PROCEDURE_SCHEM, PROCEDURE_NAME 및 SPECIFIC_NAME에서 주문합니다. 이 내에서 반환 값 (있는 경우)이 첫 번째입니다. 다음은 호출 순서의 매개 변수 설명입니다. 열 설명은 열 번호 순서에 따릅니다.</target>
        </trans-unit>
        <trans-unit id="7671b9481321265500543cd66375f32df4a713b3" translate="yes" xml:space="preserve">
          <source>Only developers who are defining new URL stream handler providers should need to make direct use of this package.</source>
          <target state="translated">새 URL 스트림 처리기 공급자를 정의하는 개발자 만이 패키지를 직접 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="4f34d995382198a641549ccf2fd49911f98a0fa1" translate="yes" xml:space="preserve">
          <source>Only developers who are defining new charsets should need to make direct use of this package.</source>
          <target state="translated">새로운 캐릭터 셋을 정의하는 개발자 만이이 패키지를 직접 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="e7afd4651b2f4e613d0b0d8e43da109e411b5d79" translate="yes" xml:space="preserve">
          <source>Only developers who are defining new file system providers or file type detectors should need to make direct use of this package.</source>
          <target state="translated">새로운 파일 시스템 공급자 또는 파일 유형 감지기를 정의하는 개발자 만이 패키지를 직접 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="01aff1661f79a75c6f6e52e097a4148bc5f2a014" translate="yes" xml:space="preserve">
          <source>Only developers who are defining new selector providers or asynchronous channel providers should need to make direct use of this package.</source>
          <target state="translated">새로운 선택기 공급자 또는 비동기 채널 공급자를 정의하는 개발자 만이 패키지를 직접 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="20ea6af08e9baa46c05d74433505c291179589a2" translate="yes" xml:space="preserve">
          <source>Only objects of type &lt;code&gt;HijrahDate&lt;/code&gt; are compared, other types return false. To compare the dates of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, including dates in two different chronologies, use &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">&lt;code&gt;HijrahDate&lt;/code&gt; 유형의 오브젝트 만 비교되고 다른 유형은 false를 리턴합니다. 두 개의 다른 연대기의 날짜를 포함하여 두 개의 &lt;code&gt;TemporalAccessor&lt;/code&gt; 인스턴스 의 날짜를 비교하려면 &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 사용 하십시오. 를 비교 .</target>
        </trans-unit>
        <trans-unit id="4a182c1d511008ca3c9f3e3bd3ebed103584b5fd" translate="yes" xml:space="preserve">
          <source>Only objects of type &lt;code&gt;JapaneseDate&lt;/code&gt; are compared, other types return false. To compare the dates of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, including dates in two different chronologies, use &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">&lt;code&gt;JapaneseDate&lt;/code&gt; 유형의 객체 만 비교되고 다른 유형은 false를 반환합니다. 두 개의 다른 연대기 날짜를 포함하여 두 &lt;code&gt;TemporalAccessor&lt;/code&gt; 인스턴스 의 날짜를 비교하려면 &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 를 비교 자로 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e06bd4d0740cb134454f2ec5e222712642659b00" translate="yes" xml:space="preserve">
          <source>Only objects of type &lt;code&gt;LocalDate&lt;/code&gt; are compared, other types return false. To compare the dates of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, including dates in two different chronologies, use &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">&lt;code&gt;LocalDate&lt;/code&gt; 유형의 객체 만 비교되고 다른 유형은 false를 반환합니다. 두 개의 다른 연대기 날짜를 포함하여 두 &lt;code&gt;TemporalAccessor&lt;/code&gt; 인스턴스 의 날짜를 비교하려면 &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 를 비교 자로 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="bcbeed77b05948419a2d059d38ba9af498058cce" translate="yes" xml:space="preserve">
          <source>Only objects of type &lt;code&gt;LocalTime&lt;/code&gt; are compared, other types return false. To compare the date of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, use &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; 유형의 객체 만 비교하고 다른 유형은 false를 반환합니다. 두 &lt;code&gt;TemporalAccessor&lt;/code&gt; 인스턴스 의 날짜를 비교하려면 &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt; &lt;/a&gt; 를 비교 자로 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c8baeee0f287a52ed6be2ba796df4867f466cf11" translate="yes" xml:space="preserve">
          <source>Only objects of type &lt;code&gt;MinguoDate&lt;/code&gt; are compared, other types return false. To compare the dates of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, including dates in two different chronologies, use &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">&lt;code&gt;MinguoDate&lt;/code&gt; 유형의 객체 만 비교되고 다른 유형은 false를 반환합니다. 두 개의 다른 연대기 날짜를 포함하여 두 &lt;code&gt;TemporalAccessor&lt;/code&gt; 인스턴스 의 날짜를 비교하려면 &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 를 비교 자로 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="3469990fc27d72ef60d78a42395da1d9f13d2b03" translate="yes" xml:space="preserve">
          <source>Only objects of type &lt;code&gt;OffsetTime&lt;/code&gt; are compared, other types return false. To compare the underlying local time of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, use &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">&lt;code&gt;OffsetTime&lt;/code&gt; 유형의 객체 만 비교하고 다른 유형은 false를 반환합니다. 두 &lt;code&gt;TemporalAccessor&lt;/code&gt; 인스턴스 의 기본 로컬 시간을 비교하려면 &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt; &lt;/a&gt; 를 비교 자로 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee6d7deb60e11b89828a3d8754b5c98e7786bdcb" translate="yes" xml:space="preserve">
          <source>Only objects of type &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; are compared, other types return false. To compare the dates of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, including dates in two different chronologies, use &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">&lt;code&gt;ThaiBuddhistDate&lt;/code&gt; 유형의 객체 만 비교하고 다른 유형은 false를 반환합니다. 두 날짜를 비교하려면 &lt;code&gt;TemporalAccessor&lt;/code&gt; 두 개의 다른 연대기 날짜를 포함하여 TemporalAccessor 인스턴스&lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 를 비교 자로 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="cbfd6aa06807271a5927c9d4b036b6918024ddc8" translate="yes" xml:space="preserve">
          <source>Only objects that support the java.io.Serializable interface can be written to streams. The class of each serializable object is encoded including the class name and signature of the class, the values of the object's fields and arrays, and the closure of any other objects referenced from the initial objects.</source>
          <target state="translated">java.io.Serializable 인터페이스를 지원하는 객체 만 스트림에 쓸 수 있습니다. 각 직렬화 가능 객체의 클래스는 클래스 이름 및 클래스의 서명, 객체 필드 및 배열의 ​​값, 초기 객체에서 참조 된 다른 객체의 폐쇄를 포함하여 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="bd8ced23d6b31657db08696f9b4dab409d97489b" translate="yes" xml:space="preserve">
          <source>Only objects that support the java.io.Serializable or java.io.Externalizable interface can be read from streams.</source>
          <target state="translated">java.io.Serializable 또는 java.io.Externalizable 인터페이스를 지원하는 오브젝트 만 스트림에서 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7459c7fbc2d84b723f18c286ea3e8195ebbad2fe" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per &lt;code&gt;TabPane&lt;/code&gt; instance since the event's only (read-only) state is the source property.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성 &lt;code&gt;TabPane&lt;/code&gt; 인스턴스 당 하나의 &lt;code&gt;ChangeEvent&lt;/code&gt; 만 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="8057159b92de5f755d97a9049aeaa8dfcd807438" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per &lt;code&gt;TabPane&lt;/code&gt; instance since the event's only (read-only) state is the source property. The source of events generated here is always &quot;this&quot;.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성 &lt;code&gt;TabPane&lt;/code&gt; 인스턴스 당 하나의 &lt;code&gt;ChangeEvent&lt;/code&gt; 만 필요 합니다. 여기에서 생성되는 이벤트의 소스는 항상 &quot;this&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="3168b0f2cf46c9fede633db91b22a8f7c639a24c" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per button instance since the event's only state is the source property.</source>
          <target state="translated">이벤트의 유일한 상태는 소스 속성 &lt;code&gt;ChangeEvent&lt;/code&gt; 버튼 인스턴스 당 하나의 ChangeEvent 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="eb0489d0a4517543b8b0ad364c18467ac40613a2" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per button instance since the event's only state is the source property. The source of events generated is always &quot;this&quot;.</source>
          <target state="translated">이벤트의 유일한 상태는 소스 속성 &lt;code&gt;ChangeEvent&lt;/code&gt; 버튼 인스턴스 당 하나의 ChangeEvent 만 필요합니다. 생성 된 이벤트의 소스는 항상 &quot;this&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="b65ebb729202ad258bac716293dd2bb8a9cfcfe4" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per button model instance since the event's only state is the source property.</source>
          <target state="translated">이벤트의 유일한 상태는 소스 속성 &lt;code&gt;ChangeEvent&lt;/code&gt; 버튼 모델 인스턴스 당 하나의 ChangeEvent 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="bbb2467994e89105b0a3aaef244c5af2990045b7" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per button model instance since the event's only state is the source property. The source of events generated is always &quot;this&quot;.</source>
          <target state="translated">이벤트의 유일한 상태는 소스 속성 &lt;code&gt;ChangeEvent&lt;/code&gt; 버튼 모델 인스턴스 당 하나의 ChangeEvent 만 필요합니다. 생성 된 이벤트의 소스는 항상 &quot;this&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="593339ea7af561cfcdb76a76eb1f015dc8fd5b27" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per instance since the event's only interesting property is the immutable source, which is the progress bar.</source>
          <target state="translated">이벤트의 유일한 흥미로운 속성은 진행률 표시 줄인 변경 불가능한 소스 &lt;code&gt;ChangeEvent&lt;/code&gt; 인스턴스 당 하나의 ChangeEvent 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="275e7440df82181b937f21f46814a8aa9ff66d2c" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per instance since the event's only interesting property is the immutable source, which is the progress bar. The event is lazily created the first time that an event notification is fired.</source>
          <target state="translated">이벤트의 유일한 흥미로운 속성은 진행률 표시 줄인 변경 불가능한 소스 &lt;code&gt;ChangeEvent&lt;/code&gt; 인스턴스 당 하나의 ChangeEvent 만 필요합니다. 이벤트 알림이 처음 발생하면 이벤트가 느리게 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="434b0452807b4c7b86ff363e585e0b82c14386d6" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per model instance since the event's only (read-only) state is the source property.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성 &lt;code&gt;ChangeEvent&lt;/code&gt; 모델 인스턴스 당 하나의 ChangeEvent 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="3ed8527b45a9d0c287333c4f0cccab667df50d45" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per model instance since the event's only (read-only) state is the source property. The source of events generated here is always &quot;this&quot;.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성 &lt;code&gt;ChangeEvent&lt;/code&gt; 모델 인스턴스 당 하나의 ChangeEvent 만 필요합니다. 여기에서 생성되는 이벤트의 소스는 항상 &quot;this&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="992c7f8b9f1b15021330becee36ce0c29b984e31" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per slider instance since the event's only (read-only) state is the source property.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성이기 때문에 슬라이더 인스턴스 당 하나의 &lt;code&gt;ChangeEvent&lt;/code&gt; 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="32b9ed054f4c3cdb7581827417cb5d70e12d8142" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per slider instance since the event's only (read-only) state is the source property. The source of events generated here is always &quot;this&quot;. The event is lazily created the first time that an event notification is fired.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성이기 때문에 슬라이더 인스턴스 당 하나의 &lt;code&gt;ChangeEvent&lt;/code&gt; 만 필요합니다. 여기에서 생성되는 이벤트의 소스는 항상 &quot;this&quot;입니다. 이벤트 알림이 처음 발생하면 이벤트가 느리게 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="3e12a96607cd013d9f8147ba67ff7990b29390c9" translate="yes" xml:space="preserve">
          <source>Only one ChangeEvent is needed per button model instance since the event's only state is the source property.</source>
          <target state="translated">이벤트의 유일한 상태가 소스 속성이기 때문에 버튼 모델 인스턴스 당 하나의 ChangeEvent 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="1b90c32779ae829c48044bb900094011a99fa226" translate="yes" xml:space="preserve">
          <source>Only one ChangeEvent is needed per button model instance since the event's only state is the source property. The source of events generated is always &quot;this&quot;.</source>
          <target state="translated">이벤트의 유일한 상태가 소스 속성이기 때문에 버튼 모델 인스턴스 당 하나의 ChangeEvent 만 필요합니다. 생성 된 이벤트의 소스는 항상 &quot;this&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="60deea2438d93dac9226752fea7c01cadbde96e7" translate="yes" xml:space="preserve">
          <source>Only one ChangeEvent is needed per model instance since the event's only (read-only) state is the source property.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성이므로 모델 인스턴스 당 하나의 ChangeEvent 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="296d2052fc8d8fc346aeed4dc35586037602ae89" translate="yes" xml:space="preserve">
          <source>Only one ChangeEvent is needed per model instance since the event's only (read-only) state is the source property. The source of events generated here is always &quot;this&quot;.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성이므로 모델 인스턴스 당 하나의 ChangeEvent 만 필요합니다. 여기에서 생성되는 이벤트의 소스는 항상 &quot;this&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="b3f07bd3e19903d9c9942a0fbde0a1d311141993" translate="yes" xml:space="preserve">
          <source>Only one ModelChangeEvent is needed per model instance since the event's only (read-only) state is the source property.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성이기 때문에 모델 인스턴스 당 하나의 ModelChangeEvent 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="fd8cca6a8389381bc55577ed89707e87c6c6818a" translate="yes" xml:space="preserve">
          <source>Only one ModelChangeEvent is needed per model instance since the event's only (read-only) state is the source property. The source of events generated here is always &quot;this&quot;.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성이기 때문에 모델 인스턴스 당 하나의 ModelChangeEvent 만 필요합니다. 여기에서 생성되는 이벤트의 소스는 항상 &quot;this&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="cb6ee051a22285ae526f0392247bc8a5f904ef63" translate="yes" xml:space="preserve">
          <source>Only one of ' ' or '-' may be used to separate fields in the input. The identified separator is the one closest to the end of the string which separates a valid pointsize, or a valid style name from the rest of the string. Null (empty) pointsize and style fields are treated as valid fields with the default value for that field.</source>
          <target state="translated">''또는 '-'중 하나만 입력에서 필드를 구분하는 데 사용할 수 있습니다. 식별 된 구분 기호는 유효한 pointize 또는 나머지 문자열과 유효한 스타일 이름을 구분하는 문자열의 끝에 가장 가까운 구분 기호입니다. Null (빈) 포인트 크기 및 스타일 필드는 해당 필드의 기본값을 사용하여 유효한 필드로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="fad9156c861080b4759730d96539f2bfceeee01c" translate="yes" xml:space="preserve">
          <source>Only one read operation upon a readable channel may be in progress at any given time. If one thread initiates a read operation upon a channel then any other thread that attempts to initiate another read operation will block until the first operation is complete. Whether or not other kinds of I/O operations may proceed concurrently with a read operation depends upon the type of the channel.</source>
          <target state="translated">판독 가능한 채널에 대한 하나의 판독 동작 만이 임의의 주어진 시간에 진행될 수있다. 한 스레드가 채널에서 읽기 작업을 시작하면 다른 읽기 작업을 시작하려는 다른 스레드는 첫 번째 작업이 완료 될 때까지 차단됩니다. 다른 종류의 I / O 작업이 읽기 작업과 동시에 진행될 수 있는지의 여부는 채널 유형에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="2b0189be4c9a305e8c87522a13dff830764b5c3b" translate="yes" xml:space="preserve">
          <source>Only one thread at a time can own an object's monitor.</source>
          <target state="translated">한 번에 하나의 스레드 만 객체의 모니터를 소유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15d6ee825e792b1c3637ce3a662de8604a88eb1a" translate="yes" xml:space="preserve">
          <source>Only one write operation upon a writable channel may be in progress at any given time. If one thread initiates a write operation upon a channel then any other thread that attempts to initiate another write operation will block until the first operation is complete. Whether or not other kinds of I/O operations may proceed concurrently with a write operation depends upon the type of the channel.</source>
          <target state="translated">쓰기 가능한 채널에 대해 한 번에 하나의 쓰기 작업 만 진행될 수 있습니다. 한 스레드가 채널에서 쓰기 작업을 시작하면 다른 쓰기 작업을 시작하려는 다른 스레드는 첫 번째 작업이 완료 될 때까지 차단됩니다. 다른 종류의 I / O 작업이 쓰기 작업과 동시에 진행될 수 있는지의 여부는 채널 유형에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="91c5a6481d7b0b2a0e505b17f9b693896f18290e" translate="yes" xml:space="preserve">
          <source>Only privileges matching the column name criteria are returned. They are ordered by COLUMN_NAME and PRIVILEGE.</source>
          <target state="translated">열 이름 기준과 일치하는 권한 만 반환됩니다. COLUMN_NAME 및 PRIVILEGE에서 주문합니다.</target>
        </trans-unit>
        <trans-unit id="6a58773429797ed196babe9a2081ddf174ea9bbb" translate="yes" xml:space="preserve">
          <source>Only privileges matching the schema and table name criteria are returned. They are ordered by &lt;code&gt;TABLE_CAT&lt;/code&gt;, &lt;code&gt;TABLE_SCHEM&lt;/code&gt;, &lt;code&gt;TABLE_NAME&lt;/code&gt;, and &lt;code&gt;PRIVILEGE&lt;/code&gt;.</source>
          <target state="translated">스키마 및 테이블 이름 기준과 일치하는 권한 만 반환됩니다. &lt;code&gt;TABLE_CAT&lt;/code&gt; , &lt;code&gt;TABLE_SCHEM&lt;/code&gt; , &lt;code&gt;TABLE_NAME&lt;/code&gt; 및 &lt;code&gt;PRIVILEGE&lt;/code&gt; 로 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="e09a6b8d6d534071e4a701aec07f2916291a280c" translate="yes" xml:space="preserve">
          <source>Only procedure descriptions matching the schema and procedure name criteria are returned. They are ordered by &lt;code&gt;PROCEDURE_CAT&lt;/code&gt;, &lt;code&gt;PROCEDURE_SCHEM&lt;/code&gt;, &lt;code&gt;PROCEDURE_NAME&lt;/code&gt; and &lt;code&gt;SPECIFIC_ NAME&lt;/code&gt;.</source>
          <target state="translated">스키마 및 프로 시저 이름 기준과 일치하는 프로 시저 설명 만 리턴됩니다. &lt;code&gt;PROCEDURE_CAT&lt;/code&gt; , &lt;code&gt;PROCEDURE_SCHEM&lt;/code&gt; , &lt;code&gt;PROCEDURE_NAME&lt;/code&gt; 및 &lt;code&gt;SPECIFIC_ NAME&lt;/code&gt; 의해 주문됩니다 .</target>
        </trans-unit>
        <trans-unit id="9b04015fd2a3dce622ec5460429f28c33af32e3b" translate="yes" xml:space="preserve">
          <source>Only supertable information for tables matching the catalog, schema and table name are returned. The table name parameter may be a fully- qualified name, in which case, the catalog and schemaPattern parameters are ignored. If a table does not have a super table, it is not listed here. Supertables have to be defined in the same catalog and schema as the sub tables. Therefore, the type description does not need to include this information for the supertable.</source>
          <target state="translated">카탈로그, 스키마 및 테이블 이름과 일치하는 테이블에 대한 상위 테이블 정보 만 리턴됩니다. 테이블 이름 매개 변수는 완전한 이름 일 수 있습니다.이 경우 catalog 및 schemaPattern 매개 변수는 무시됩니다. 테이블에 수퍼 테이블이 없으면 여기에 나열되지 않습니다. 수퍼 테이블은 하위 테이블과 동일한 카탈로그 및 스키마에 정의되어야합니다. 따라서 유형 설명에 수퍼 테이블에 대한이 정보를 포함 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="3b1983ee974a3067e1ce27d81ad64d8d120d3d82" translate="yes" xml:space="preserve">
          <source>Only supertype information for UDTs matching the catalog, schema, and type name is returned. The type name parameter may be a fully-qualified name. When the UDT name supplied is a fully-qualified name, the catalog and schemaPattern parameters are ignored.</source>
          <target state="translated">카탈로그, 스키마 및 유형 이름과 일치하는 UDT에 대한 상위 유형 정보 만 리턴됩니다. 유형 이름 매개 변수는 완전한 이름 일 수 있습니다. 제공된 UDT 이름이 완전한 이름 인 경우 catalog 및 schemaPattern 매개 변수는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="31763e63ef555e91c62e2d5f9ae8b04b8556f86b" translate="yes" xml:space="preserve">
          <source>Only system and user function descriptions matching the schema and function name criteria are returned. They are ordered by &lt;code&gt;FUNCTION_CAT&lt;/code&gt;, &lt;code&gt;FUNCTION_SCHEM&lt;/code&gt;, &lt;code&gt;FUNCTION_NAME&lt;/code&gt; and &lt;code&gt;SPECIFIC_ NAME&lt;/code&gt;.</source>
          <target state="translated">스키마 및 함수 이름 기준과 일치하는 시스템 및 사용자 함수 설명 만 반환됩니다. &lt;code&gt;FUNCTION_CAT&lt;/code&gt; , &lt;code&gt;FUNCTION_SCHEM&lt;/code&gt; , &lt;code&gt;FUNCTION_NAME&lt;/code&gt; 및 &lt;code&gt;SPECIFIC_ NAME&lt;/code&gt; 으로 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="bce72424ead74f1f1a0bce058d42ecee49eeb41f" translate="yes" xml:space="preserve">
          <source>Only the 1-byte, 2-byte, and 3-byte formats are used.</source>
          <target state="translated">1 바이트, 2 바이트 및 3 바이트 형식 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5d428d239390d6bafb20d2336f575fad83a558e2" translate="yes" xml:space="preserve">
          <source>Only the &lt;code&gt;EntityReference&lt;/code&gt; itself is copied, even if a &lt;code&gt;deep&lt;/code&gt; import is requested, since the source and destination documents might have defined the entity differently. If the document being imported into provides a definition for this entity name, its value is assigned.</source>
          <target state="translated">만 &lt;code&gt;EntityReference&lt;/code&gt; 자체는 경우에도 복사 &lt;code&gt;deep&lt;/code&gt; 소스 및 대상 문서로 엔티티의 정의가 다른 수 있기 때문에 수입이 요청됩니다. 가져올 문서가이 엔티티 이름에 대한 정의를 제공하는 경우 해당 값이 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="ab456a75a5e5f0e1d2f46cfe0e00c4053ff88912" translate="yes" xml:space="preserve">
          <source>Only the &lt;code&gt;EntityReference&lt;/code&gt; node itself is adopted, the descendants are discarded, since the source and destination documents might have defined the entity differently. If the document being imported into provides a definition for this entity name, its value is assigned.</source>
          <target state="translated">&lt;code&gt;EntityReference&lt;/code&gt; 노드 자체 만 채택되고 소스 및 대상 문서가 엔티티를 다르게 정의했을 수 있으므로 하위 항목은 삭제됩니다. 가져올 문서가이 엔티티 이름에 대한 정의를 제공하는 경우 해당 값이 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="aaecf9b8e261b11c90ba5636bd74c87e542b2a22" translate="yes" xml:space="preserve">
          <source>Only the activator can</source>
          <target state="translated">활성화 자만</target>
        </trans-unit>
        <trans-unit id="3b327c787d12188e4bf3e1ae2baec07499233edc" translate="yes" xml:space="preserve">
          <source>Only the effective (first) declaration for an attribute will be reported. The type will be one of the strings &quot;CDATA&quot;, &quot;ID&quot;, &quot;IDREF&quot;, &quot;IDREFS&quot;, &quot;NMTOKEN&quot;, &quot;NMTOKENS&quot;, &quot;ENTITY&quot;, &quot;ENTITIES&quot;, a parenthesized token group with the separator &quot;|&quot; and all whitespace removed, or the word &quot;NOTATION&quot; followed by a space followed by a parenthesized token group with all whitespace removed.</source>
          <target state="translated">속성에 대한 유효 (첫 번째) 선언 만보고됩니다. 유형은 문자열 &quot;CDATA&quot;, &quot;ID&quot;, &quot;IDREF&quot;, &quot;IDREFS&quot;, &quot;NMTOKEN&quot;, &quot;NMTOKENS&quot;, &quot;ENTITY&quot;, &quot;ENTITIES&quot;, 구분 기호 &quot;|&quot;가있는 괄호로 묶인 토큰 그룹 중 하나입니다. 그리고 모든 공백이 제거되거나 단어 &quot;NOTATION&quot;다음에 공백이 뒤 따르고 모든 공백이 제거 된 괄호로 묶인 토큰 그룹이 이어집니다.</target>
        </trans-unit>
        <trans-unit id="b1013799e513f7fc6de01d287bd2609e192de73d" translate="yes" xml:space="preserve">
          <source>Only the effective (first) declaration for each entity will be reported.</source>
          <target state="translated">각 엔티티에 대한 유효 (첫 번째) 선언 만보고됩니다.</target>
        </trans-unit>
        <trans-unit id="c4778fbd93207afe06ef7b352152980226f63783" translate="yes" xml:space="preserve">
          <source>Only the effective (first) declaration for each entity will be reported. All parameter entities in the value will be expanded, but general entities will not.</source>
          <target state="translated">각 엔티티에 대한 유효 (첫 번째) 선언 만보고됩니다. 값의 모든 매개 변수 엔티티가 확장되지만 일반 엔티티는 확장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4b3062744036cd4ed4a663c4c9dbf3bb6db97cf8" translate="yes" xml:space="preserve">
          <source>Only the first instance of a particular key and/or trust manager implementation type in the array is used. (For example, only the first javax.net.ssl.X509KeyManager in the array will be used.)</source>
          <target state="translated">배열에서 특정 키 및 / 또는 트러스트 관리자 구현 유형의 첫 번째 인스턴스 만 사용됩니다. 예를 들어, 배열의 첫 번째 javax.net.ssl.X509KeyManager 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1d7819b837ca1fc613aa431474d4c6fdc4eedbea" translate="yes" xml:space="preserve">
          <source>Only the first of these files to be located will be consulted. The requested service providers are specified by setting the &lt;code&gt;assistive_technologies=&lt;/code&gt; property. A single provider or a comma separated list of providers can be specified.</source>
          <target state="translated">이러한 파일 중 첫 번째 파일 만 참조됩니다. 요청 된 서비스 공급자는 &lt;code&gt;assistive_technologies=&lt;/code&gt; 속성 을 설정하여 지정됩니다 . 단일 공급자 또는 쉼표로 구분 된 공급자 목록을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="114744f803cb7992a75094cfc002f70edc71732f" translate="yes" xml:space="preserve">
          <source>Only the identity of the class of an Externalizable instance is written in the serialization stream and it is the responsibility of the class to save and restore the contents of its instances.</source>
          <target state="translated">Serializable 스트림에는 Externalizable 인스턴스 클래스의 ID 만 작성되며 인스턴스의 컨텐츠를 저장하고 복원하는 것은 클래스의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="8b5c9467d0d1e867b31e81627b601f1cac7da50a" translate="yes" xml:space="preserve">
          <source>Only the identity of the class of an Externalizable instance is written in the serialization stream and it is the responsibility of the class to save and restore the contents of its instances. The writeExternal and readExternal methods of the Externalizable interface are implemented by a class to give the class complete control over the format and contents of the stream for an object and its supertypes. These methods must explicitly coordinate with the supertype to save its state. These methods supersede customized implementations of writeObject and readObject methods.</source>
          <target state="translated">Serializable 스트림에는 Externalizable 인스턴스 클래스의 ID 만 작성되며 인스턴스의 컨텐츠를 저장하고 복원하는 것은 클래스의 책임입니다. Externalizable 인터페이스의 writeExternal 및 readExternal 메소드는 클래스에 의해 구현되어 객체와 그 슈퍼 타입에 대한 스트림의 형식과 내용을 클래스에 완전히 제어 할 수 있습니다. 이러한 메소드는 상태를 저장하기 위해 수퍼 타입과 명시 적으로 조정해야합니다. 이러한 메소드는 writeObject 및 readObject 메소드의 사용자 정의 된 구현을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="b3747fa9358f41943736ce9d4cfe794bfb48db60" translate="yes" xml:space="preserve">
          <source>Only the input method's primary locales should be returned. For example, if a Japanese input method also has a pass-through mode for Roman characters, typically still only Japanese would be returned. Thus, the list of locales returned is typically a subset of the locales for which the corresponding input method's implementation of &lt;a href=&quot;inputmethod#setLocale(java.util.Locale)&quot;&gt;&lt;code&gt;InputMethod.setLocale(java.util.Locale)&lt;/code&gt;&lt;/a&gt; returns true.</source>
          <target state="translated">입력 방법의 기본 로케일 만 반환되어야합니다. 예를 들어, 일본어 입력 방법에도 로마 문자에 대한 통과 모드가있는 경우 일반적으로 여전히 일본어 만 반환됩니다. 따라서 리턴 된 로케일 목록은 일반적으로 해당 입력 메소드의 &lt;a href=&quot;inputmethod#setLocale(java.util.Locale)&quot;&gt; &lt;code&gt;InputMethod.setLocale(java.util.Locale)&lt;/code&gt; &lt;/a&gt; 구현이 true를 리턴 하는 로케일의 서브 세트입니다 .</target>
        </trans-unit>
        <trans-unit id="cdcddd89fc55c9cff408c86eee23b85a6d46332d" translate="yes" xml:space="preserve">
          <source>Only the listeners in this context are returned.</source>
          <target state="translated">이 컨텍스트의 리스너 만 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="5f02735a28965b171ccbc2feaeb0e44568746fd4" translate="yes" xml:space="preserve">
          <source>Only the low eight bits of each character in the string are used by this class.</source>
          <target state="translated">문자열에서 각 문자의 하위 8 비트 만이 클래스에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ee5f844ad1ca78a9d279aeeeea5717b244e0fde3" translate="yes" xml:space="preserve">
          <source>Only the registry should call this method.</source>
          <target state="translated">레지스트리 만이 메소드를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="6586a77d9bef8ac9ceb03c3fbd05a92da0156e91" translate="yes" xml:space="preserve">
          <source>Only the return value of &lt;code&gt;false&lt;/code&gt; for the present method actually indicates that the given state is not supported. If the method returns &lt;code&gt;true&lt;/code&gt; the given state may still be unsupported and/or unavailable for a particular frame.</source>
          <target state="translated">현재 메서드에 대한 반환 값인 &lt;code&gt;false&lt;/code&gt; 만 실제로 주어진 상태가 지원되지 않음을 나타냅니다. 메서드가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 주어진 상태가 여전히 지원되지 않거나 특정 프레임에 대해 사용 불가능할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94c7d6e243c18e673a20692f5c1a4c08f4c5d9ac" translate="yes" xml:space="preserve">
          <source>Only types matching the catalog, schema, type name and type criteria are returned. They are ordered by &lt;code&gt;DATA_TYPE&lt;/code&gt;, &lt;code&gt;TYPE_CAT&lt;/code&gt;, &lt;code&gt;TYPE_SCHEM&lt;/code&gt; and &lt;code&gt;TYPE_NAME&lt;/code&gt;. The type name parameter may be a fully-qualified name. In this case, the catalog and schemaPattern parameters are ignored.</source>
          <target state="translated">카탈로그, 스키마, 유형 이름 및 유형 기준과 일치하는 유형 만 리턴됩니다. &lt;code&gt;DATA_TYPE&lt;/code&gt; , &lt;code&gt;TYPE_CAT&lt;/code&gt; , &lt;code&gt;TYPE_SCHEM&lt;/code&gt; 및 &lt;code&gt;TYPE_NAME&lt;/code&gt; 으로 정렬됩니다 . 유형 이름 매개 변수는 완전한 이름 일 수 있습니다. 이 경우 catalog 및 schemaPattern 매개 변수는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="82b6629478f30e84ad5f1c1efad9f9e824899e56" translate="yes" xml:space="preserve">
          <source>Open MBeans</source>
          <target state="translated">열린 MBean</target>
        </trans-unit>
        <trans-unit id="981f4196248a97f15ee35a9882e5941953bd9d8a" translate="yes" xml:space="preserve">
          <source>Open button mnemonic</source>
          <target state="translated">열기 버튼 니모닉</target>
        </trans-unit>
        <trans-unit id="06281825f2b9b89e9bcd588063e0360596282f86" translate="yes" xml:space="preserve">
          <source>Open button text</source>
          <target state="translated">열기 버튼 텍스트</target>
        </trans-unit>
        <trans-unit id="9e2c812fa9cbaf507b02cef9859a62bedbb99afe" translate="yes" xml:space="preserve">
          <source>Open button tool tip text</source>
          <target state="translated">열기 버튼 도구 설명 텍스트</target>
        </trans-unit>
        <trans-unit id="8e35c86ff5861a096dd9728b935211b8a3fce545" translate="yes" xml:space="preserve">
          <source>Open for read access.</source>
          <target state="translated">읽기 액세스를 위해 엽니 다.</target>
        </trans-unit>
        <trans-unit id="91b9c6177a3384ca8b2de5c65a9cdc3944d9e750" translate="yes" xml:space="preserve">
          <source>Open for reading and writing, as with &lt;code&gt;&quot;rw&quot;&lt;/code&gt;, and also require that every update to the file's content be written synchronously to the underlying storage device.</source>
          <target state="translated">&lt;code&gt;&quot;rw&quot;&lt;/code&gt; 와 같이 읽고 쓰기 위해 열고 파일 내용에 대한 모든 업데이트는 기본 저장 장치에 동기식으로 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="517a1b093056cea63e1b052bf44951bc7d277490" translate="yes" xml:space="preserve">
          <source>Open for reading and writing, as with &lt;code&gt;&quot;rw&quot;&lt;/code&gt;, and also require that every update to the file's content or metadata be written synchronously to the underlying storage device.</source>
          <target state="translated">&lt;code&gt;&quot;rw&quot;&lt;/code&gt; 와 같이 읽고 쓰기 위해 열고 파일의 컨텐츠 또는 메타 데이터에 대한 모든 업데이트는 기본 저장 장치에 동기식으로 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="bc0fccabde1b02c9dc314c7a7d93b418cd356046" translate="yes" xml:space="preserve">
          <source>Open for reading and writing. If the file does not already exist then an attempt will be made to create it.</source>
          <target state="translated">읽고 쓰기 위해 엽니 다. 파일이 존재하지 않으면 파일을 작성하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="b9f5f3c2d640e95b37c27fbcea2c35813dbce99e" translate="yes" xml:space="preserve">
          <source>Open for reading only. Invoking any of the &lt;code&gt;write&lt;/code&gt; methods of the resulting object will cause an &lt;a href=&quot;ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">읽기 전용으로 엽니 다. 결과 객체 의 &lt;code&gt;write&lt;/code&gt; 메소드를 호출하면 &lt;a href=&quot;ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="800fee0ca80892852c22354b14c38b2267f37e0d" translate="yes" xml:space="preserve">
          <source>Open for reading, a resource of the specified name from the search path used to load classes.</source>
          <target state="translated">클래스를로드하는 데 사용되는 검색 경로에서 지정된 이름의 리소스를 읽기 위해 엽니 다.</target>
        </trans-unit>
        <trans-unit id="c2f7ed5270c80b27fb2c4f5c966b7cd26f742b2f" translate="yes" xml:space="preserve">
          <source>Open for reading, a resource of the specified name from the search path used to load classes. This method locates the resource through the system class loader (see &lt;a href=&quot;#getSystemClassLoader()&quot;&gt;&lt;code&gt;getSystemClassLoader()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">클래스를로드하는 데 사용되는 검색 경로에서 지정된 이름의 리소스를 읽기 위해 엽니 다. 이 메서드는 시스템 클래스 로더를 통해 리소스를 찾습니다 ( &lt;a href=&quot;#getSystemClassLoader()&quot;&gt; &lt;code&gt;getSystemClassLoader()&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="ab871faeffd3bfbd383e55bef268cc77a0cb3f8b" translate="yes" xml:space="preserve">
          <source>Open for reading, a resource of the specified name from the search path used to load classes. This method locates the resource through the system class loader (see &lt;a href=&quot;classloader#getSystemClassLoader--&quot;&gt;&lt;code&gt;getSystemClassLoader()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">클래스를로드하는 데 사용되는 검색 경로에서 지정된 이름의 리소스를 읽기 위해 엽니 다. 이 메소드는 시스템 클래스 로더를 통해 자원을 찾습니다 ( &lt;a href=&quot;classloader#getSystemClassLoader--&quot;&gt; &lt;code&gt;getSystemClassLoader()&lt;/code&gt; &lt;/a&gt; 참조 ). ).</target>
        </trans-unit>
        <trans-unit id="5415684c54a7264914cdc9c6ee2b37eefb45d0e5" translate="yes" xml:space="preserve">
          <source>Open for write access.</source>
          <target state="translated">쓰기 액세스를 위해 엽니 다.</target>
        </trans-unit>
        <trans-unit id="f6fe5e669c912691ab1c8893d7e029d5751f591d" translate="yes" xml:space="preserve">
          <source>OpenAction</source>
          <target state="translated">OpenAction</target>
        </trans-unit>
        <trans-unit id="4eda38d434faf927560c26ea1be9a33439db939f" translate="yes" xml:space="preserve">
          <source>OpenDataException</source>
          <target state="translated">OpenDataException</target>
        </trans-unit>
        <trans-unit id="b54db5773f9c50fe7feca0be76355d9176716e50" translate="yes" xml:space="preserve">
          <source>OpenFilesEvent</source>
          <target state="translated">OpenFilesEvent</target>
        </trans-unit>
        <trans-unit id="8f8c858e7c7175504b71237a93bc458c4b4a22e2" translate="yes" xml:space="preserve">
          <source>OpenFilesHandler</source>
          <target state="translated">OpenFilesHandler</target>
        </trans-unit>
        <trans-unit id="d835399b13e370d2f8c102d2f428c018acc3276e" translate="yes" xml:space="preserve">
          <source>OpenJDK</source>
          <target state="translated">OpenJDK</target>
        </trans-unit>
        <trans-unit id="bdd633a84d6cefcc680ea075ac9cb22f4b9fef64" translate="yes" xml:space="preserve">
          <source>OpenJDK 11.0.9 Documentation</source>
          <target state="translated">OpenJDK 11.0.9 문서</target>
        </trans-unit>
        <trans-unit id="e83c70c203a7cbd96d46719a286d899c6c1fd66a" translate="yes" xml:space="preserve">
          <source>OpenJDK 8 Documentation</source>
          <target state="translated">OpenJDK 8 설명서</target>
        </trans-unit>
        <trans-unit id="5648d28a2f71365b7b3511f3ccffde472b125f63" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfo</source>
          <target state="translated">OpenMBeanAttributeInfo</target>
        </trans-unit>
        <trans-unit id="e979cffc0bc63d5f4d8374d91c66623901ac5a00" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfo.equals()</source>
          <target state="translated">OpenMBeanAttributeInfo.equals()</target>
        </trans-unit>
        <trans-unit id="143858f6964f9cdf3d8481886a014e7cc925fd7c" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfo.hashCode()</source>
          <target state="translated">OpenMBeanAttributeInfo.hashCode()</target>
        </trans-unit>
        <trans-unit id="a3fe6c12270aad271a38e46534b737a1b36d9802" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfo.isIs()</source>
          <target state="translated">OpenMBeanAttributeInfo.isIs()</target>
        </trans-unit>
        <trans-unit id="cce3a5fdf12f096af10c6675cd1f3120e3ab1e2c" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfo.isReadable()</source>
          <target state="translated">OpenMBeanAttributeInfo.isReadable()</target>
        </trans-unit>
        <trans-unit id="8b8a8edfa0ca609c64185b124c49fd4238c4b071" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfo.isWritable()</source>
          <target state="translated">OpenMBeanAttributeInfo.isWritable()</target>
        </trans-unit>
        <trans-unit id="6b9bc011527d2c6cf5e39690cdacc8162ac600a3" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfo.toString()</source>
          <target state="translated">OpenMBeanAttributeInfo.toString()</target>
        </trans-unit>
        <trans-unit id="189a7b1206205e1960d7bbe6bc48deeddf70008c" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport</source>
          <target state="translated">OpenMBeanAttributeInfoSupport</target>
        </trans-unit>
        <trans-unit id="41a88d8e4a773bd41a5c54f2ec09199a6a0335de" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.equals()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.equals()</target>
        </trans-unit>
        <trans-unit id="c5edf69cd911b6bcf744f05a74be016377379f33" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.getDefaultValue()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.getDefaultValue()</target>
        </trans-unit>
        <trans-unit id="3cfb1c8075c9d5f9106b9172dd484ca0c097621f" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.getLegalValues()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.getLegalValues()</target>
        </trans-unit>
        <trans-unit id="c9357cd96c501ab24aaf45063dc5423a356dbd02" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.getMaxValue()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.getMaxValue()</target>
        </trans-unit>
        <trans-unit id="65300e585245c30dff0a9e032b424f36592fcbe6" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.getMinValue()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.getMinValue()</target>
        </trans-unit>
        <trans-unit id="99cf5f2739da2e422820bf2464fbcd1e90853180" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.getOpenType()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.getOpenType()</target>
        </trans-unit>
        <trans-unit id="3bfed97ba9f18c98bbba2706a76914c2b300008e" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.hasDefaultValue()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.hasDefaultValue()</target>
        </trans-unit>
        <trans-unit id="51bc199da8ea52fcae4ef926dc723df8d88a3e25" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.hasLegalValues()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.hasLegalValues()</target>
        </trans-unit>
        <trans-unit id="bf560e90afd7312388b5253720c123ce336d98ac" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.hasMaxValue()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.hasMaxValue()</target>
        </trans-unit>
        <trans-unit id="d2873bfe41ef108d6774397b519804224e1180eb" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.hasMinValue()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.hasMinValue()</target>
        </trans-unit>
        <trans-unit id="9344e0d181e44a1b34cd7faa083d431f4b3cc8ee" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.hashCode()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.hashCode()</target>
        </trans-unit>
        <trans-unit id="e31fe01b9327e42abdb423a4190bbf8aa97ff556" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.isValue()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.isValue()</target>
        </trans-unit>
        <trans-unit id="aea6bccfed0db1a22d71acf156e48176f854b79a" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.toString()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.toString()</target>
        </trans-unit>
        <trans-unit id="7b9f03c631bad32f57c1d562a876fea900fd1abf" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfo</source>
          <target state="translated">OpenMBeanConstructorInfo</target>
        </trans-unit>
        <trans-unit id="6e648ec87f138d57da9fb38ded9512c86c45167e" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfo.equals()</source>
          <target state="translated">OpenMBeanConstructorInfo.equals()</target>
        </trans-unit>
        <trans-unit id="68a531b3ae656b47e3108f5427531daea6299efa" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfo.getDescription()</source>
          <target state="translated">OpenMBeanConstructorInfo.getDescription()</target>
        </trans-unit>
        <trans-unit id="d78d2d9e0c3a58775b8c5a9afbba4555bf0e6656" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfo.getName()</source>
          <target state="translated">OpenMBeanConstructorInfo.getName()</target>
        </trans-unit>
        <trans-unit id="85bb6c019014ff5113cbd55cc66b5af05f72268a" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfo.getSignature()</source>
          <target state="translated">OpenMBeanConstructorInfo.getSignature()</target>
        </trans-unit>
        <trans-unit id="3233ffb63c48d6ed2a0ed95c7aea24432a712f5f" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfo.hashCode()</source>
          <target state="translated">OpenMBeanConstructorInfo.hashCode()</target>
        </trans-unit>
        <trans-unit id="0237d229c54e40e65e6d180e0fb6f6c67c3cc98f" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfo.toString()</source>
          <target state="translated">OpenMBeanConstructorInfo.toString()</target>
        </trans-unit>
        <trans-unit id="50d1bb67f66ea13c3a061c67218b0b0d354ff82a" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfoSupport</source>
          <target state="translated">OpenMBeanConstructorInfoSupport</target>
        </trans-unit>
        <trans-unit id="bcdac0509b5077a31529cb37c103314087f57650" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfoSupport.equals()</source>
          <target state="translated">OpenMBeanConstructorInfoSupport.equals()</target>
        </trans-unit>
        <trans-unit id="54689f43222e74b640b4d0b6aab7968e4cf05648" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfoSupport.hashCode()</source>
          <target state="translated">OpenMBeanConstructorInfoSupport.hashCode()</target>
        </trans-unit>
        <trans-unit id="03448d91ec4f60f79d2b7883666e7425e15f373d" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfoSupport.toString()</source>
          <target state="translated">OpenMBeanConstructorInfoSupport.toString()</target>
        </trans-unit>
        <trans-unit id="ed54db99d804c519626baf6d7b8a8178be38702f" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo</source>
          <target state="translated">OpenMBeanInfo</target>
        </trans-unit>
        <trans-unit id="f524053898b552953014eb6edf16f1583ba7f15f" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo.equals()</source>
          <target state="translated">OpenMBeanInfo.equals()</target>
        </trans-unit>
        <trans-unit id="67e3aba7716a54606955c92c36f7ce8ce870c496" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo.getAttributes()</source>
          <target state="translated">OpenMBeanInfo.getAttributes()</target>
        </trans-unit>
        <trans-unit id="553286c9acf07b522a4e988959191f1817680ec6" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo.getClassName()</source>
          <target state="translated">OpenMBeanInfo.getClassName()</target>
        </trans-unit>
        <trans-unit id="23e5059de20f44acd3a7c7524935d1b6819a34c8" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo.getConstructors()</source>
          <target state="translated">OpenMBeanInfo.getConstructors()</target>
        </trans-unit>
        <trans-unit id="5ae6d4c531cf743b2226ac15ea9ca6c6164c2c9b" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo.getDescription()</source>
          <target state="translated">OpenMBeanInfo.getDescription()</target>
        </trans-unit>
        <trans-unit id="5bd5ba897cdc3fc61c2774c08a317f3c1ad00f94" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo.getNotifications()</source>
          <target state="translated">OpenMBeanInfo.getNotifications()</target>
        </trans-unit>
        <trans-unit id="50840e56dddd5d8951ef592a0096078d4f75ce6f" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo.getOperations()</source>
          <target state="translated">OpenMBeanInfo.getOperations()</target>
        </trans-unit>
        <trans-unit id="5b65a2378ed56cbcf362d9c3f89fc7559998e021" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo.hashCode()</source>
          <target state="translated">OpenMBeanInfo.hashCode()</target>
        </trans-unit>
        <trans-unit id="110e42e161c4b892087cdaab33119c7cfc940680" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo.toString()</source>
          <target state="translated">OpenMBeanInfo.toString()</target>
        </trans-unit>
        <trans-unit id="2daf62f3043f7491cd427664311134ea763557da" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfoSupport</source>
          <target state="translated">OpenMBeanInfoSupport</target>
        </trans-unit>
        <trans-unit id="34f5a6e4c03007ca4eed1339ebff2912df2782e5" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfoSupport.equals()</source>
          <target state="translated">OpenMBeanInfoSupport.equals()</target>
        </trans-unit>
        <trans-unit id="bb362fd555dddf5cebbf7e5d04e6dbaf4fbbbc6e" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfoSupport.hashCode()</source>
          <target state="translated">OpenMBeanInfoSupport.hashCode()</target>
        </trans-unit>
        <trans-unit id="85ec114aa475fd7af3eb988cfb5d83f3a5485c02" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfoSupport.toString()</source>
          <target state="translated">OpenMBeanInfoSupport.toString()</target>
        </trans-unit>
        <trans-unit id="4ef76634cf1d48ff19d5ad25a200797a1e1734c7" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo</source>
          <target state="translated">OpenMBeanOperationInfo</target>
        </trans-unit>
        <trans-unit id="055871ff400f33921ff17724e378426d926289eb" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo.equals()</source>
          <target state="translated">OpenMBeanOperationInfo.equals()</target>
        </trans-unit>
        <trans-unit id="71e64a828c14602bd402fd42ee32c4eb20297d33" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo.getDescription()</source>
          <target state="translated">OpenMBeanOperationInfo.getDescription()</target>
        </trans-unit>
        <trans-unit id="a5c12afbced219244a9cc5b9a07a83cbb39e3aa8" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo.getImpact()</source>
          <target state="translated">OpenMBeanOperationInfo.getImpact()</target>
        </trans-unit>
        <trans-unit id="9fc6bb8d56c0e1fe06cd129fc5be9d058c377a7f" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo.getName()</source>
          <target state="translated">OpenMBeanOperationInfo.getName()</target>
        </trans-unit>
        <trans-unit id="a54a54abb266848aae95407fe97c86db78708853" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo.getReturnOpenType()</source>
          <target state="translated">OpenMBeanOperationInfo.getReturnOpenType()</target>
        </trans-unit>
        <trans-unit id="f82cbf20e2f0ae94697426ce711787cbe012f947" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo.getReturnType()</source>
          <target state="translated">OpenMBeanOperationInfo.getReturnType()</target>
        </trans-unit>
        <trans-unit id="a1ae2c52433af38fe73f381b2cc96ea1fc5d3e64" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo.getSignature()</source>
          <target state="translated">OpenMBeanOperationInfo.getSignature()</target>
        </trans-unit>
        <trans-unit id="0e9e893319fded4886f903be081a13dc0667585d" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo.hashCode()</source>
          <target state="translated">OpenMBeanOperationInfo.hashCode()</target>
        </trans-unit>
        <trans-unit id="12e3d05e6a481f520a83c6849e71d3f765a40b9e" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo.toString()</source>
          <target state="translated">OpenMBeanOperationInfo.toString()</target>
        </trans-unit>
        <trans-unit id="9752d678e3e3ecc38443b50e3c1170e0fcca8661" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfoSupport</source>
          <target state="translated">OpenMBeanOperationInfoSupport</target>
        </trans-unit>
        <trans-unit id="0a75e6f335320f7dc93d1a4dbfbe733349b7a602" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfoSupport.equals()</source>
          <target state="translated">OpenMBeanOperationInfoSupport.equals()</target>
        </trans-unit>
        <trans-unit id="1206b8ae5b704ec2a4a7e66bca5ce4e2e5ecd586" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfoSupport.getReturnOpenType()</source>
          <target state="translated">OpenMBeanOperationInfoSupport.getReturnOpenType()</target>
        </trans-unit>
        <trans-unit id="8716ec99732bc25f30ea9a7a95b87ae125b521bd" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfoSupport.hashCode()</source>
          <target state="translated">OpenMBeanOperationInfoSupport.hashCode()</target>
        </trans-unit>
        <trans-unit id="57257e665e172a727054cdf36d3f3f2a5e8221ec" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfoSupport.toString()</source>
          <target state="translated">OpenMBeanOperationInfoSupport.toString()</target>
        </trans-unit>
        <trans-unit id="002546f6acd9c93b1fe0236b5258e207dfbd5d67" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo</source>
          <target state="translated">OpenMBeanParameterInfo</target>
        </trans-unit>
        <trans-unit id="5b332cc284a9648c9cd232fdd648bd9e84efb4b6" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.equals()</source>
          <target state="translated">OpenMBeanParameterInfo.equals()</target>
        </trans-unit>
        <trans-unit id="8a3373becc4bafefaaf924f4ab7606e4feccc702" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.getDefaultValue()</source>
          <target state="translated">OpenMBeanParameterInfo.getDefaultValue()</target>
        </trans-unit>
        <trans-unit id="fdd80ae84129a37f3490c91d5e5275f27751523d" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.getDescription()</source>
          <target state="translated">OpenMBeanParameterInfo.getDescription()</target>
        </trans-unit>
        <trans-unit id="b5f0be5d60a53a85627e9ba2950e52b0c31bad79" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.getLegalValues()</source>
          <target state="translated">OpenMBeanParameterInfo.getLegalValues()</target>
        </trans-unit>
        <trans-unit id="4e257b96b7d1189a2f8b4326850ee1264eb76429" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.getMaxValue()</source>
          <target state="translated">OpenMBeanParameterInfo.getMaxValue()</target>
        </trans-unit>
        <trans-unit id="053dc7458459661e740a19352cea2856f327b555" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.getMinValue()</source>
          <target state="translated">OpenMBeanParameterInfo.getMinValue()</target>
        </trans-unit>
        <trans-unit id="89f89b311d0b6b0b9114a518e43ec5e32842ded4" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.getName()</source>
          <target state="translated">OpenMBeanParameterInfo.getName()</target>
        </trans-unit>
        <trans-unit id="f4c92bb2417359b73a7bba89f181f954d209c647" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.getOpenType()</source>
          <target state="translated">OpenMBeanParameterInfo.getOpenType()</target>
        </trans-unit>
        <trans-unit id="c5efa0c1d42062776ad2df1cfb00eda86b588730" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.hasDefaultValue()</source>
          <target state="translated">OpenMBeanParameterInfo.hasDefaultValue()</target>
        </trans-unit>
        <trans-unit id="fdd9bfe03cc49e07b3ea1f6d1be6bc347ce8e5e7" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.hasLegalValues()</source>
          <target state="translated">OpenMBeanParameterInfo.hasLegalValues()</target>
        </trans-unit>
        <trans-unit id="2a4c95463394fb8a01bbedc9c63fba9ac2fee9f8" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.hasMaxValue()</source>
          <target state="translated">OpenMBeanParameterInfo.hasMaxValue()</target>
        </trans-unit>
        <trans-unit id="15f62d44bda077e9912097b481de475aa388fe3a" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.hasMinValue()</source>
          <target state="translated">OpenMBeanParameterInfo.hasMinValue()</target>
        </trans-unit>
        <trans-unit id="0fd2147a5e504b230addda5213c2e2826dceca68" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.hashCode()</source>
          <target state="translated">OpenMBeanParameterInfo.hashCode()</target>
        </trans-unit>
        <trans-unit id="320a7d0fd92432f25534c57f99c8882fa628e794" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.isValue()</source>
          <target state="translated">OpenMBeanParameterInfo.isValue()</target>
        </trans-unit>
        <trans-unit id="753cf959f0384c1ad955a669b525be9411af4f72" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.toString()</source>
          <target state="translated">OpenMBeanParameterInfo.toString()</target>
        </trans-unit>
        <trans-unit id="c94d109f62118081d4ab7ea942f2e6b6f5022278" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport</source>
          <target state="translated">OpenMBeanParameterInfoSupport</target>
        </trans-unit>
        <trans-unit id="e37f68e92df2eaf3d7eec15e4f00eefad0052998" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.equals()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.equals()</target>
        </trans-unit>
        <trans-unit id="9eb8d93b8542adfd213fb1a023a2d0f33e98bdc4" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.getDefaultValue()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.getDefaultValue()</target>
        </trans-unit>
        <trans-unit id="59ff7a7c508c4274b8d342034adeb476342df3cc" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.getLegalValues()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.getLegalValues()</target>
        </trans-unit>
        <trans-unit id="bacfbcf6f0affefa1bf7983a1f3bddbd9cea1e8c" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.getMaxValue()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.getMaxValue()</target>
        </trans-unit>
        <trans-unit id="c2656a12c25517559af18c1a48a141304d49c0ac" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.getMinValue()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.getMinValue()</target>
        </trans-unit>
        <trans-unit id="7a219c099313afe428a1e98b374a0a3271d96301" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.getOpenType()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.getOpenType()</target>
        </trans-unit>
        <trans-unit id="249db65bbe23ff7874c10eb894e110d2b7e356aa" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.hasDefaultValue()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.hasDefaultValue()</target>
        </trans-unit>
        <trans-unit id="d491fdc07ee5a0654fe41d19aac4a142b5a3b1b8" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.hasLegalValues()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.hasLegalValues()</target>
        </trans-unit>
        <trans-unit id="1c4d6d097ac3bec1810f7ad9b8a4c2b6fc90fc1e" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.hasMaxValue()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.hasMaxValue()</target>
        </trans-unit>
        <trans-unit id="5fa2a19ebdbe07a501f76fd91c9e7f3da9af5c5e" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.hasMinValue()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.hasMinValue()</target>
        </trans-unit>
        <trans-unit id="b1c76b7d06cd059ae096ad7d2d715555cb5e6cdb" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.hashCode()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.hashCode()</target>
        </trans-unit>
        <trans-unit id="de3ec16beca89984f5b7c67494017a1b84e42aef" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.isValue()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.isValue()</target>
        </trans-unit>
        <trans-unit id="06ab3e3abc57af092e66f1bb0228f14a2954a51e" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.toString()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.toString()</target>
        </trans-unit>
        <trans-unit id="844709189e961aa7a1b38cb711150fcb18ddf4b5" translate="yes" xml:space="preserve">
          <source>OpenOption</source>
          <target state="translated">OpenOption</target>
        </trans-unit>
        <trans-unit id="8685784375b47812244b4d0fa46475472dd05942" translate="yes" xml:space="preserve">
          <source>OpenType</source>
          <target state="translated">OpenType</target>
        </trans-unit>
        <trans-unit id="cda43f1b85bcad19232a292d45f13f9061aaae5b" translate="yes" xml:space="preserve">
          <source>OpenType.equals()</source>
          <target state="translated">OpenType.equals()</target>
        </trans-unit>
        <trans-unit id="6cb7599fca57608009f1d686881031a655545c1a" translate="yes" xml:space="preserve">
          <source>OpenType.getClassName()</source>
          <target state="translated">OpenType.getClassName()</target>
        </trans-unit>
        <trans-unit id="9dd7926efb40cce5fd6c70ed47ab6b00c8cf55ad" translate="yes" xml:space="preserve">
          <source>OpenType.getDescription()</source>
          <target state="translated">OpenType.getDescription()</target>
        </trans-unit>
        <trans-unit id="44c5471ddd01805ee7e0410f5155b562d28b0bd0" translate="yes" xml:space="preserve">
          <source>OpenType.getTypeName()</source>
          <target state="translated">OpenType.getTypeName()</target>
        </trans-unit>
        <trans-unit id="b9b260789aa0118f489ca992e3794a42c598e8a6" translate="yes" xml:space="preserve">
          <source>OpenType.hashCode()</source>
          <target state="translated">OpenType.hashCode()</target>
        </trans-unit>
        <trans-unit id="54795f7ba2c034c44c5108dea4107afab1b96237" translate="yes" xml:space="preserve">
          <source>OpenType.isArray()</source>
          <target state="translated">OpenType.isArray()</target>
        </trans-unit>
        <trans-unit id="93a367ba05906d32826449b2a6369f0a912cdf81" translate="yes" xml:space="preserve">
          <source>OpenType.isValue()</source>
          <target state="translated">OpenType.isValue()</target>
        </trans-unit>
        <trans-unit id="17daa75b2e4e01f5013e9963c24f0db5d682f4ac" translate="yes" xml:space="preserve">
          <source>OpenType.toString()</source>
          <target state="translated">OpenType.toString()</target>
        </trans-unit>
        <trans-unit id="ea9449b486d620e179c350e43dc16c1c604d2898" translate="yes" xml:space="preserve">
          <source>OpenURIEvent</source>
          <target state="translated">OpenURIEvent</target>
        </trans-unit>
        <trans-unit id="870c809895afb6319492f0bc2427815ebdb6fa4b" translate="yes" xml:space="preserve">
          <source>OpenURIHandler</source>
          <target state="translated">OpenURIHandler</target>
        </trans-unit>
        <trans-unit id="4b59d0b2fc2597ba7d0823a86d2eb8a544db1fb3" translate="yes" xml:space="preserve">
          <source>Opens a ZIP file for reading given the specified File object.</source>
          <target state="translated">지정된 File 객체에서 읽을 ZIP 파일을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="eb29046c156f33d54613ff5e38f953e4515dfa0c" translate="yes" xml:space="preserve">
          <source>Opens a communications link to the resource referenced by this URL, if such a connection has not already been established.</source>
          <target state="translated">연결이 아직 설정되지 않은 경우이 URL에서 참조하는 리소스에 대한 통신 링크를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="dcf2f96228db57eca0fb78992ce51fceb8fc845a" translate="yes" xml:space="preserve">
          <source>Opens a connection to the object referenced by the &lt;code&gt;URL&lt;/code&gt; argument.</source>
          <target state="translated">에서 참조하는 개체에 대한 연결을 엽니 다. &lt;code&gt;URL&lt;/code&gt; 인수가 .</target>
        </trans-unit>
        <trans-unit id="85494a54a540f64865f7014b49cdaf52a1e24e74" translate="yes" xml:space="preserve">
          <source>Opens a connection to the object referenced by the &lt;code&gt;URL&lt;/code&gt; argument. This method should be overridden by a subclass.</source>
          <target state="translated">&lt;code&gt;URL&lt;/code&gt; 인수가 참조하는 객체에 대한 연결을 엽니 다 . 이 메소드는 서브 클래스로 대체되어야합니다.</target>
        </trans-unit>
        <trans-unit id="813af086add13d317664661b5ab9be9096561ae2" translate="yes" xml:space="preserve">
          <source>Opens a connection to this &lt;code&gt;URL&lt;/code&gt; and returns an &lt;code&gt;InputStream&lt;/code&gt; for reading from that connection.</source>
          <target state="translated">이 &lt;code&gt;URL&lt;/code&gt; 에 대한 연결을 &lt;code&gt;InputStream&lt;/code&gt; 반환합니다. 해당 연결에서 읽기 을 합니다.</target>
        </trans-unit>
        <trans-unit id="900668e8ea95c7e918493f8bbf96165c505d62dd" translate="yes" xml:space="preserve">
          <source>Opens a connection to this &lt;code&gt;URL&lt;/code&gt; and returns an &lt;code&gt;InputStream&lt;/code&gt; for reading from that connection. This method is a shorthand for:</source>
          <target state="translated">이 &lt;code&gt;URL&lt;/code&gt; 에 대한 연결을 &lt;code&gt;InputStream&lt;/code&gt; 해당 연결에서 읽을 수 있는 InputStream 을 반환 합니다. 이 방법은 다음과 같은 속기입니다.</target>
        </trans-unit>
        <trans-unit id="314ad644c9eeeb6f040442885fdbbe534e84bc64" translate="yes" xml:space="preserve">
          <source>Opens a datagram channel.</source>
          <target state="translated">데이터 그램 채널을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="3e6c5489bb19bec447eaa8ee5f86408de767d734" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt; to iterate over all entries in the directory.</source>
          <target state="translated">디렉토리를 열고 &lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; 을&lt;/a&gt; 반환합니다. 를 열고 을 모든 항목을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="f7bd60601bf91ed3bc8c35727048688e17044159" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt; to iterate over all entries in the directory. The elements returned by the directory stream's &lt;a href=&quot;directorystream#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; are of type &lt;code&gt;
 Path&lt;/code&gt;, each one representing an entry in the directory. The &lt;code&gt;Path&lt;/code&gt; objects are obtained as if by &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the name of the directory entry against &lt;code&gt;dir&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; &lt;/a&gt; 를 열고 DirectoryStream 을 반환하여 디렉토리의 모든 항목을 반복합니다. 디렉토리 스트림의 &lt;a href=&quot;directorystream#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 가 반환하는 요소는 &lt;code&gt; Path&lt;/code&gt; 유형 이며, 각각은 디렉토리의 항목을 나타냅니다. &lt;code&gt;Path&lt;/code&gt; 객체는 경우와 같이 얻어진다 &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt; 에 대한 디렉토리 항목의 이름 &lt;code&gt;dir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b77fab3c3c199ebccb3d9ebe275988f120e9f67" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt; to iterate over all entries in the directory. The elements returned by the directory stream's &lt;a href=&quot;directorystream#iterator--&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; are of type &lt;code&gt;Path&lt;/code&gt;, each one representing an entry in the directory. The &lt;code&gt;Path&lt;/code&gt; objects are obtained as if by &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the name of the directory entry against &lt;code&gt;dir&lt;/code&gt;.</source>
          <target state="translated">디렉토리를 열어 디렉토리의 모든 항목을 반복하기 위해 &lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; &lt;/a&gt; 을 반환합니다 . 디렉토리 스트림의 &lt;a href=&quot;directorystream#iterator--&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 가 리턴 한 요소는 &lt;code&gt;Path&lt;/code&gt; 유형 이며, 각각은 디렉토리의 항목을 나타냅니다. &lt;code&gt;Path&lt;/code&gt; 객체는 경우와 같이 얻어진다 &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt; 에 대한 디렉토리 항목의 이름 &lt;code&gt;dir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29b35820fd9a5b44758bc550913beff2c9d38e29" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt; to iterate over the entries in the directory.</source>
          <target state="translated">디렉토리를 열고 &lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; 을&lt;/a&gt; 반환합니다. 를 열고 을 의 항목을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="11347ab02b02041eff311f62ea7ef551c8a4b8b2" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt; to iterate over the entries in the directory. The elements returned by the directory stream's &lt;a href=&quot;directorystream#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; are of type &lt;code&gt;
 Path&lt;/code&gt;, each one representing an entry in the directory. The &lt;code&gt;Path&lt;/code&gt; objects are obtained as if by &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the name of the directory entry against &lt;code&gt;dir&lt;/code&gt;. The entries returned by the iterator are filtered by matching the &lt;code&gt;String&lt;/code&gt; representation of their file names against the given &lt;em&gt;globbing&lt;/em&gt; pattern.</source>
          <target state="translated">&lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; &lt;/a&gt; 를 열고 DirectoryStream 을 반환하여 디렉토리 의 항목을 반복합니다. 디렉토리 스트림의 &lt;a href=&quot;directorystream#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 가 반환하는 요소는 &lt;code&gt; Path&lt;/code&gt; 유형 이며, 각각은 디렉토리의 항목을 나타냅니다. &lt;code&gt;Path&lt;/code&gt; 객체는 경우와 같이 얻어진다 &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt; 에 대한 디렉토리 항목의 이름 &lt;code&gt;dir&lt;/code&gt; . 반복기에 의해 반환 된 항목 은 주어진 &lt;em&gt;globbing&lt;/em&gt; 패턴 에 대해 파일 이름 의 &lt;code&gt;String&lt;/code&gt; 표현을 일치시켜 필터링됩니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="af1073af057fdc24c5eae62490a00d8ab444efc7" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt; to iterate over the entries in the directory. The elements returned by the directory stream's &lt;a href=&quot;directorystream#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; are of type &lt;code&gt;
 Path&lt;/code&gt;, each one representing an entry in the directory. The &lt;code&gt;Path&lt;/code&gt; objects are obtained as if by &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the name of the directory entry against &lt;code&gt;dir&lt;/code&gt;. The entries returned by the iterator are filtered by the given &lt;a href=&quot;directorystream.filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; &lt;/a&gt; 를 열고 DirectoryStream 을 반환하여 디렉토리 의 항목을 반복합니다. 디렉토리 스트림의 &lt;a href=&quot;directorystream#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 가 반환하는 요소는 &lt;code&gt; Path&lt;/code&gt; 유형 이며, 각각은 디렉토리의 항목을 나타냅니다. &lt;code&gt;Path&lt;/code&gt; 객체는 경우와 같이 얻어진다 &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt; 에 대한 디렉토리 항목의 이름 &lt;code&gt;dir&lt;/code&gt; . 반복자에 의해 반환 된 항목은 주어진 &lt;a href=&quot;directorystream.filter&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt; 의해 필터링됩니다 .</target>
        </trans-unit>
        <trans-unit id="5c4c049e219ecbb7be52594a91f4e114f312c656" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt; to iterate over the entries in the directory. The elements returned by the directory stream's &lt;a href=&quot;directorystream#iterator--&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; are of type &lt;code&gt;Path&lt;/code&gt;, each one representing an entry in the directory. The &lt;code&gt;Path&lt;/code&gt; objects are obtained as if by &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the name of the directory entry against &lt;code&gt;dir&lt;/code&gt;. The entries returned by the iterator are filtered by matching the &lt;code&gt;String&lt;/code&gt; representation of their file names against the given &lt;em&gt;globbing&lt;/em&gt; pattern.</source>
          <target state="translated">디렉토리를 열어 디렉토리 의 항목을 반복하기 위해 &lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; &lt;/a&gt; 을 반환합니다 . 디렉토리 스트림의 &lt;a href=&quot;directorystream#iterator--&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 가 리턴 한 요소는 &lt;code&gt;Path&lt;/code&gt; 유형 이며, 각각은 디렉토리의 항목을 나타냅니다. &lt;code&gt;Path&lt;/code&gt; 객체는 경우와 같이 얻어진다 &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt; 에 대한 디렉토리 항목의 이름 &lt;code&gt;dir&lt;/code&gt; . 반복자가 리턴 한 항목 은 주어진 글 &lt;em&gt;로빙&lt;/em&gt; 패턴 과 파일 이름 의 &lt;code&gt;String&lt;/code&gt; 표시를 일치시켜 필터링됩니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b2a32ef4c8c9533d893939b8b7c226951c5bc725" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt; to iterate over the entries in the directory. The elements returned by the directory stream's &lt;a href=&quot;directorystream#iterator--&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; are of type &lt;code&gt;Path&lt;/code&gt;, each one representing an entry in the directory. The &lt;code&gt;Path&lt;/code&gt; objects are obtained as if by &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the name of the directory entry against &lt;code&gt;dir&lt;/code&gt;. The entries returned by the iterator are filtered by the given &lt;a href=&quot;directorystream.filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">디렉토리를 열어 디렉토리 의 항목을 반복하기 위해 &lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; &lt;/a&gt; 을 반환합니다 . 디렉토리 스트림의 &lt;a href=&quot;directorystream#iterator--&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 가 리턴 한 요소는 &lt;code&gt;Path&lt;/code&gt; 유형 이며, 각각은 디렉토리의 항목을 나타냅니다. &lt;code&gt;Path&lt;/code&gt; 객체는 경우와 같이 얻어진다 &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt; 에 대한 디렉토리 항목의 이름 &lt;code&gt;dir&lt;/code&gt; . 반복자에 의해 리턴 된 항목은 주어진 &lt;a href=&quot;directorystream.filter&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt; 의해 필터링됩니다 .</target>
        </trans-unit>
        <trans-unit id="bbe0192e3fbaec56ee6946a0fa8d16a021835124" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;code&gt;DirectoryStream&lt;/code&gt; to iterate over the entries in the directory.</source>
          <target state="translated">&lt;code&gt;DirectoryStream&lt;/code&gt; 를 열고 DirectoryStream 을 반환하여 디렉토리 의 항목을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="70de01c4e7607c853831b2b2ac78e305aa9e14d6" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;code&gt;DirectoryStream&lt;/code&gt; to iterate over the entries in the directory. This method works in exactly the manner specified by the &lt;a href=&quot;../files#newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream.Filter)&quot;&gt;&lt;code&gt;Files.newDirectoryStream(java.nio.file.Path, java.nio.file.DirectoryStream.Filter)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;DirectoryStream&lt;/code&gt; 를 열고 DirectoryStream 을 반환하여 디렉토리 의 항목을 반복합니다. 이 메소드는 &lt;a href=&quot;../files#newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream.Filter)&quot;&gt; &lt;code&gt;Files.newDirectoryStream(java.nio.file.Path, java.nio.file.DirectoryStream.Filter)&lt;/code&gt; &lt;/a&gt; 지정된 방식으로 정확히 작동합니다. 메소드에 .</target>
        </trans-unit>
        <trans-unit id="1147eeb19b0a99e48dfffcaa24710a5987945a34" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;code&gt;DirectoryStream&lt;/code&gt; to iterate over the entries in the directory. This method works in exactly the manner specified by the &lt;a href=&quot;../files#newDirectoryStream-java.nio.file.Path-java.nio.file.DirectoryStream.Filter-&quot;&gt;&lt;code&gt;Files.newDirectoryStream(java.nio.file.Path, java.nio.file.DirectoryStream.Filter)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">디렉토리를 열어 디렉토리 의 항목을 반복하기 위해 &lt;code&gt;DirectoryStream&lt;/code&gt; 을 반환합니다 . 이 메소드는 &lt;a href=&quot;../files#newDirectoryStream-java.nio.file.Path-java.nio.file.DirectoryStream.Filter-&quot;&gt; &lt;code&gt;Files.newDirectoryStream(java.nio.file.Path, java.nio.file.DirectoryStream.Filter)&lt;/code&gt; &lt;/a&gt; 메소드로 지정된 방식으로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="76b1d8dafbdfe79d8f180db0cf2c5d7733a4fcef" translate="yes" xml:space="preserve">
          <source>Opens a file for reading, returning a &lt;code&gt;BufferedReader&lt;/code&gt; that may be used to read text from the file in an efficient manner.</source>
          <target state="translated">읽기 위해 파일을 &lt;code&gt;BufferedReader&lt;/code&gt; 파일에서 텍스트를 효율적으로 읽는 데 사용할 수 있는 BufferedReader 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="05455add1f3c5c1cab4e36b48991592d5f96b4e4" translate="yes" xml:space="preserve">
          <source>Opens a file for reading, returning a &lt;code&gt;BufferedReader&lt;/code&gt; that may be used to read text from the file in an efficient manner. Bytes from the file are decoded into characters using the specified charset. Reading commences at the beginning of the file.</source>
          <target state="translated">읽을 파일을 열어 효율적인 방식으로 파일에서 텍스트를 읽는 데 사용할 수 있는 &lt;code&gt;BufferedReader&lt;/code&gt; 를 반환합니다 . 파일의 바이트는 지정된 문자 세트를 사용하여 문자로 디코딩됩니다. 파일의 시작 부분에서 읽기가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="e1a250f721e42e61b0fd63bdd16791cca9c3be80" translate="yes" xml:space="preserve">
          <source>Opens a file for reading, returning a &lt;code&gt;BufferedReader&lt;/code&gt; to read text from the file in an efficient manner.</source>
          <target state="translated">읽기 위해 파일을 &lt;code&gt;BufferedReader&lt;/code&gt; 를 반환 하여 파일에서 텍스트를 효율적으로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="a0f7f4cb405fa9289913acec56a9cfc9e89f531f" translate="yes" xml:space="preserve">
          <source>Opens a file for reading, returning a &lt;code&gt;BufferedReader&lt;/code&gt; to read text from the file in an efficient manner. Bytes from the file are decoded into characters using the &lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt;&lt;code&gt;UTF-8&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">읽을 파일을 &lt;code&gt;BufferedReader&lt;/code&gt; 효율적인 방식으로 파일에서 텍스트를 읽을 수 있도록 BufferedReader 를 반환합니다 . 파일의 바이트는 &lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt; &lt;code&gt;UTF-8&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; 을&lt;/a&gt; 사용하여 문자로 디코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="51b6364ca2e6c22d34091bd3b1b86300a73ce80b" translate="yes" xml:space="preserve">
          <source>Opens a file, returning an input stream to read from the file.</source>
          <target state="translated">파일을 열고 파일에서 읽을 입력 스트림을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3e41df72adaea0e1dfd09800b3e18ccef2228cf3" translate="yes" xml:space="preserve">
          <source>Opens a file, returning an input stream to read from the file. The stream will not be buffered, and is not required to support the &lt;a href=&quot;../../io/inputstream#mark(int)&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../io/inputstream#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; methods. The stream will be safe for access by multiple concurrent threads. Reading commences at the beginning of the file. Whether the returned stream is</source>
          <target state="translated">파일을 열고 파일에서 읽을 입력 스트림을 반환합니다. 스트림은 버퍼링되지 않으며 &lt;a href=&quot;../../io/inputstream#mark(int)&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../io/inputstream#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt; 을 지원하는 데 필요하지 않습니다. 메서드 . 스트림은 여러 동시 스레드에 의한 액세스에 안전합니다. 읽기는 파일 시작 부분에서 시작됩니다. 반환 된 스트림이</target>
        </trans-unit>
        <trans-unit id="a83404a165b783bf67a5d97b83bfe35fc57436b6" translate="yes" xml:space="preserve">
          <source>Opens a file, returning an input stream to read from the file. The stream will not be buffered, and is not required to support the &lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../io/inputstream#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; methods. The stream will be safe for access by multiple concurrent threads. Reading commences at the beginning of the file. Whether the returned stream is</source>
          <target state="translated">파일을 열어 파일에서 읽을 입력 스트림을 반환합니다. 스트림은 버퍼링되지 않으며 &lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../io/inputstream#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt; 메소드 를 지원할 필요가 없습니다 . 스트림은 여러 개의 동시 스레드가 안전하게 액세스 할 수 있습니다. 파일의 시작 부분에서 읽기가 시작됩니다. 반환 된 스트림이</target>
        </trans-unit>
        <trans-unit id="c33f83b7e355574959758fa49122fb24dfcff8a3" translate="yes" xml:space="preserve">
          <source>Opens a file, returning an input stream to read from the file. This method works in exactly the manner specified by the &lt;a href=&quot;../files#newInputStream(java.nio.file.Path,java.nio.file.OpenOption...)&quot;&gt;&lt;code&gt;Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption...)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">파일을 열고 파일에서 읽을 입력 스트림을 반환합니다. 이 메소드는 &lt;a href=&quot;../files#newInputStream(java.nio.file.Path,java.nio.file.OpenOption...)&quot;&gt; &lt;code&gt;Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption...)&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 방식으로 정확히 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="26452db3f0b5527640459c36c4cdb0fa6c75d9fa" translate="yes" xml:space="preserve">
          <source>Opens a file, returning an input stream to read from the file. This method works in exactly the manner specified by the &lt;a href=&quot;../files#newInputStream-java.nio.file.Path-java.nio.file.OpenOption...-&quot;&gt;&lt;code&gt;Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption...)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">파일을 열어 파일에서 읽을 입력 스트림을 반환합니다. 이 메소드는 &lt;a href=&quot;../files#newInputStream-java.nio.file.Path-java.nio.file.OpenOption...-&quot;&gt; &lt;code&gt;Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption...)&lt;/code&gt; &lt;/a&gt; 메소드로 지정된 방식으로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="952e08f3e265f1148a81d1e32d464adf76689ab1" translate="yes" xml:space="preserve">
          <source>Opens a folder containing the &lt;code&gt;file&lt;/code&gt; and selects it in a default system file manager.</source>
          <target state="translated">포함 된 폴더를 엽니 다. &lt;code&gt;file&lt;/code&gt; 기본 시스템 파일 관리자에서 선택합니다.</target>
        </trans-unit>
        <trans-unit id="fad9911c5b4f053736424912d25741c81815ee9d" translate="yes" xml:space="preserve">
          <source>Opens a new &lt;code&gt;ZipFile&lt;/code&gt; to read from the specified &lt;code&gt;File&lt;/code&gt; object in the specified mode.</source>
          <target state="translated">지정된에서 읽을 새 &lt;code&gt;ZipFile&lt;/code&gt; 을 엽니 다. &lt;code&gt;File&lt;/code&gt; 지정된 모드에서 File 개체에서 .</target>
        </trans-unit>
        <trans-unit id="352045880476381250ac1e9ce7cada8d078846aa" translate="yes" xml:space="preserve">
          <source>Opens a new &lt;code&gt;ZipFile&lt;/code&gt; to read from the specified &lt;code&gt;File&lt;/code&gt; object in the specified mode. The mode argument must be either &lt;code&gt;OPEN_READ&lt;/code&gt; or &lt;code&gt;OPEN_READ | OPEN_DELETE&lt;/code&gt;.</source>
          <target state="translated">지정된 모드에서 지정된 &lt;code&gt;File&lt;/code&gt; 객체에서 읽을 새 &lt;code&gt;ZipFile&lt;/code&gt; 을 엽니 다 . 모드 인수는 &lt;code&gt;OPEN_READ&lt;/code&gt; 또는 &lt;code&gt;OPEN_READ | OPEN_DELETE&lt;/code&gt; OPEN_DELETE .</target>
        </trans-unit>
        <trans-unit id="2685f7a69452294936cbb3e14d59304f4e3a2d2d" translate="yes" xml:space="preserve">
          <source>Opens a new logical channel to the card and returns it.</source>
          <target state="translated">카드에 대한 새 논리 채널을 열고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c366d915ba63b0049fe8e85d2f51f5c7d3f4dbc6" translate="yes" xml:space="preserve">
          <source>Opens a new logical channel to the card and returns it. The channel is opened by issuing a &lt;code&gt;MANAGE CHANNEL&lt;/code&gt; command that should use the format &lt;code&gt;[00 70 00 00 01]&lt;/code&gt;.</source>
          <target state="translated">카드에 대한 새 논리 채널을 열고 반환합니다. 채널은 &lt;code&gt;[00 70 00 00 01]&lt;/code&gt; 형식을 사용해야 하는 &lt;code&gt;MANAGE CHANNEL&lt;/code&gt; 명령을 실행하여 열립니다 . .</target>
        </trans-unit>
        <trans-unit id="974d71a979c2e43470573e8010e347f733177e08" translate="yes" xml:space="preserve">
          <source>Opens a pipe.</source>
          <target state="translated">파이프를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="790b41cf43edb04c81f99db791e62aa43f853c45" translate="yes" xml:space="preserve">
          <source>Opens a resource, returning an input stream to read the resource in the module.</source>
          <target state="translated">리소스를 열고 모듈에서 리소스를 읽기위한 입력 스트림을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="772fd5e08ab4f27a41a17f10a206eb1772b054a3" translate="yes" xml:space="preserve">
          <source>Opens a selector.</source>
          <target state="translated">선택기를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="c9adc3cc27c07ec06b8f45a5a401f95b905bc56f" translate="yes" xml:space="preserve">
          <source>Opens a server-socket channel.</source>
          <target state="translated">서버 소켓 채널을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="c81fb8c8399c67058d0797a569f34a5a606f4375" translate="yes" xml:space="preserve">
          <source>Opens a socket channel and connects it to a remote address.</source>
          <target state="translated">소켓 채널을 열고 원격 주소에 연결합니다.</target>
        </trans-unit>
        <trans-unit id="b4efc99933e5a7accadf3e56e9dbe25ffbaa59ce" translate="yes" xml:space="preserve">
          <source>Opens a socket channel.</source>
          <target state="translated">소켓 채널을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="e28df3a29e665dff29414bcf65018da6aa30207e" translate="yes" xml:space="preserve">
          <source>Opens a zip file for reading.</source>
          <target state="translated">읽을 zip 파일을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="2b97b271c57b413e8fbb40e9cc59e4c4fee636be" translate="yes" xml:space="preserve">
          <source>Opens an asynchronous server-socket channel.</source>
          <target state="translated">비동기 서버 소켓 채널을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="5ed35af2285cf9373bbd158d4ee2c092a4789dde" translate="yes" xml:space="preserve">
          <source>Opens an asynchronous socket channel.</source>
          <target state="translated">비동기 소켓 채널을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="3e90a660dd6073386034178fefd9fc557c72b2af" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for reading and/or writing, returning a file channel to access the file.</source>
          <target state="translated">읽기 및 / 또는 쓰기 용 파일을 열거 나 생성하고 파일에 액세스하기위한 파일 채널을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ab05f03b5aa2663b30135dddcd41feb195f3222d" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for reading and/or writing, returning a file channel to access the file. This method works in exactly the manner specified by the &lt;a href=&quot;../../channels/filechannel#open(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;FileChannel.open&lt;/code&gt;&lt;/a&gt; method. A provider that does not support all the features required to construct a file channel throws &lt;code&gt;
 UnsupportedOperationException&lt;/code&gt;. The default provider is required to support the creation of file channels. When not overridden, the default implementation throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">읽기 및 / 또는 쓰기를위한 파일을 열거 나 만들고 파일에 액세스하기위한 파일 채널을 반환합니다. 이 메서드는 &lt;a href=&quot;../../channels/filechannel#open(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;FileChannel.open&lt;/code&gt; &lt;/a&gt; 메서드에 지정된 방식으로 정확하게 작동합니다 . 파일 채널을 구성하는 데 필요한 모든 기능을 지원하지 않는 공급자는 &lt;code&gt; UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다. 파일 채널 생성을 지원하려면 기본 공급자가 필요합니다. 재정의되지 않은 경우 기본 구현에서 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 이 발생합니다. 시킵니다.</target>
        </trans-unit>
        <trans-unit id="9800649bd08a6c3d04edfc2f55976a6d17ea7513" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for reading and/or writing, returning a file channel to access the file. This method works in exactly the manner specified by the &lt;a href=&quot;../../channels/filechannel#open-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;FileChannel.open&lt;/code&gt;&lt;/a&gt; method. A provider that does not support all the features required to construct a file channel throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. The default provider is required to support the creation of file channels. When not overridden, the default implementation throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">읽고 쓰기위한 파일을 열거 나 작성하여 파일에 액세스하기 위해 파일 채널을 리턴합니다. 이 메소드는 &lt;a href=&quot;../../channels/filechannel#open-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;FileChannel.open&lt;/code&gt; &lt;/a&gt; 메소드로 지정된 방식으로 정확하게 작동합니다 . 파일 채널을 구성하는 데 필요한 모든 기능을 지원하지 않는 공급자는 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다. 파일 채널 생성을 지원하려면 기본 공급자가 필요합니다. 재정의되지 않으면 기본 구현은 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="a7a7e95385e0af7cf39dc03388bac14553a6e5f6" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for reading and/or writing, returning an asynchronous file channel to access the file.</source>
          <target state="translated">읽기 및 / 또는 쓰기를위한 파일을 열거 나 작성하여 파일에 액세스하기 위해 비동기 파일 채널을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="b2eef1c12a3cef5f4a9971e683748b4f4aff9bdc" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for reading and/or writing, returning an asynchronous file channel to access the file. This method works in exactly the manner specified by the &lt;a href=&quot;../../channels/asynchronousfilechannel#open(java.nio.file.Path,java.util.Set,java.util.concurrent.ExecutorService,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;AsynchronousFileChannel.open&lt;/code&gt;&lt;/a&gt; method. A provider that does not support all the features required to construct an asynchronous file channel throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. The default provider is required to support the creation of asynchronous file channels. When not overridden, the default implementation of this method throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">읽기 및 / 또는 쓰기를위한 파일을 열거 나 만들고 파일에 액세스하기위한 비동기 파일 채널을 반환합니다. 이 메서드는 &lt;a href=&quot;../../channels/asynchronousfilechannel#open(java.nio.file.Path,java.util.Set,java.util.concurrent.ExecutorService,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;AsynchronousFileChannel.open&lt;/code&gt; &lt;/a&gt; 메서드에 지정된 방식으로 정확하게 작동합니다 . 비동기 파일 채널을 구성하는 데 필요한 모든 기능을 지원하지 않는 공급자는 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다. 비동기 파일 채널 생성을 지원하려면 기본 공급자가 필요합니다. 재정의되지 않은 경우이 메서드의 기본 구현은 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 throw합니다. 시킵니다.</target>
        </trans-unit>
        <trans-unit id="7b04706a0baf19d585c754362fca8e99bd601e95" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for reading and/or writing, returning an asynchronous file channel to access the file. This method works in exactly the manner specified by the &lt;a href=&quot;../../channels/asynchronousfilechannel#open-java.nio.file.Path-java.util.Set-java.util.concurrent.ExecutorService-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;AsynchronousFileChannel.open&lt;/code&gt;&lt;/a&gt; method. A provider that does not support all the features required to construct an asynchronous file channel throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. The default provider is required to support the creation of asynchronous file channels. When not overridden, the default implementation of this method throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">읽기 및 / 또는 쓰기를위한 파일을 열거 나 작성하여 파일에 액세스하기 위해 비동기 파일 채널을 리턴합니다. 이 메소드는 &lt;a href=&quot;../../channels/asynchronousfilechannel#open-java.nio.file.Path-java.util.Set-java.util.concurrent.ExecutorService-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;AsynchronousFileChannel.open&lt;/code&gt; &lt;/a&gt; 메소드로 지정된 방식으로 정확하게 작동합니다 . 비동기 파일 채널을 구성하는 데 필요한 모든 기능을 지원하지 않는 공급자는 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다. 기본 파일 제공자는 비동기 파일 채널 작성을 지원해야합니다. 재정의되지 않은 경우이 메소드의 기본 구현은 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="b533de0f88d7f6ff6612e119ddc75aaba5572f0a" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for writing, returning a &lt;code&gt;BufferedWriter&lt;/code&gt; that may be used to write text to the file in an efficient manner.</source>
          <target state="translated">쓰기 위해 파일을 열거 나 생성하고 &lt;code&gt;BufferedWriter&lt;/code&gt; 를 반환합니다. 효율적인 방식으로 파일에 텍스트를 쓰는 데 사용할 수 를 .</target>
        </trans-unit>
        <trans-unit id="7df395d7cd660a6ef7b1d21342a583600a68fd28" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for writing, returning a &lt;code&gt;BufferedWriter&lt;/code&gt; that may be used to write text to the file in an efficient manner. The &lt;code&gt;options&lt;/code&gt; parameter specifies how the file is created or opened. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;#isRegularFile(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt; if it exists.</source>
          <target state="translated">쓰기를 위해 파일을 열거 나 생성하고 효율적인 방식으로 파일에 텍스트를 쓰는 데 사용할 수 있는 &lt;code&gt;BufferedWriter&lt;/code&gt; 를 반환합니다 . &lt;code&gt;options&lt;/code&gt; 파일을 만들거나 열 방법을 지정하는 매개 변수입니다. 옵션이 없으면이 메서드는 &lt;a href=&quot;standardopenoption#CREATE&quot;&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt; &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt; 옵션이 있는 것처럼 작동합니다 . 즉, 쓰기 위해 파일을 열고, 파일이없는 경우 파일을 생성하거나, 기존 &lt;a href=&quot;#isRegularFile(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;regular-file&lt;/code&gt; &lt;/a&gt; 이 존재하는 경우 처음 에 &lt;code&gt;0&lt;/code&gt; 크기로 잘라 냅니다.</target>
        </trans-unit>
        <trans-unit id="15d507062e4e39e2c94d5f494239f71822026058" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for writing, returning a &lt;code&gt;BufferedWriter&lt;/code&gt; that may be used to write text to the file in an efficient manner. The &lt;code&gt;options&lt;/code&gt; parameter specifies how the the file is created or opened. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt; if it exists.</source>
          <target state="translated">쓰기 위해 파일을 열거 나 작성 하여 효율적인 방식으로 파일에 텍스트를 쓰는 데 사용될 수 있는 &lt;code&gt;BufferedWriter&lt;/code&gt; 를 반환합니다 . &lt;code&gt;options&lt;/code&gt; 하여 파일을 만들거나 열 방법을 지정하는 매개 변수입니다. 옵션이 없으면이 메소드는 &lt;a href=&quot;standardopenoption#CREATE&quot;&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt; &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt; 옵션이 있는 것처럼 작동합니다 . 즉, 파일을 작성하기 위해 파일을 열거 나 존재하지 않는 경우 파일을 작성하거나 기존 &lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;regular-file&lt;/code&gt; &lt;/a&gt; 을 존재하는 경우 크기를 &lt;code&gt;0&lt;/code&gt; 으로 자릅니다.</target>
        </trans-unit>
        <trans-unit id="32c8025e05d494ce1593d424475f21c0011dfbc0" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for writing, returning a &lt;code&gt;BufferedWriter&lt;/code&gt; to write text to the file in an efficient manner.</source>
          <target state="translated">쓰기위한 파일을 열거 나 생성하고 &lt;code&gt;BufferedWriter&lt;/code&gt; 를 반환 하여 효율적인 방식으로 파일에 텍스트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="17aa0f66d0979fd63e71bf5945ea0e6c5651d914" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for writing, returning a &lt;code&gt;BufferedWriter&lt;/code&gt; to write text to the file in an efficient manner. The text is encoded into bytes for writing using the &lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt;&lt;code&gt;UTF-8&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">쓰기위한 파일을 열거 나 작성 하여 효율적인 방식으로 파일에 텍스트를 쓰 도록 &lt;code&gt;BufferedWriter&lt;/code&gt; 를 리턴합니다 . 텍스트는 &lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt; &lt;code&gt;UTF-8&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; 을&lt;/a&gt; 사용하여 쓰기 위해 바이트로 인코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="806bc88a9e68cec10ed30aefec5f9f22fe2a9030" translate="yes" xml:space="preserve">
          <source>Opens or creates a file in this directory, returning a seekable byte channel to access the file.</source>
          <target state="translated">이 디렉토리에서 파일을 열거 나 작성하여 파일에 액세스하기 위해 검색 가능한 바이트 채널을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="2562345eff696e98ec72e55309ac2505168ce318" translate="yes" xml:space="preserve">
          <source>Opens or creates a file, returning a file channel to access the file.</source>
          <target state="translated">파일을 열거 나 작성하여 파일에 액세스하기 위해 파일 채널을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1578c32491189c336d4c884de7414170ed39eb88" translate="yes" xml:space="preserve">
          <source>Opens or creates a file, returning a seekable byte channel to access the file.</source>
          <target state="translated">파일을 열거 나 생성하여 파일에 액세스하기 위해 검색 가능한 바이트 채널을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ba6a438e8738497305bb557c3bb8409aff21d536" translate="yes" xml:space="preserve">
          <source>Opens or creates a file, returning a seekable byte channel to access the file. This method works in exactly the manner specified by the &lt;a href=&quot;../files#newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;Files.newByteChannel(Path,Set,FileAttribute[])&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">파일을 열거 나 생성하여 파일에 액세스하기위한 검색 가능한 바이트 채널을 반환합니다. 이 메서드는 &lt;a href=&quot;../files#newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;Files.newByteChannel(Path,Set,FileAttribute[])&lt;/code&gt; &lt;/a&gt; 메서드에 지정된 방식으로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="541af641138497e308c914ae241971043f5b0f7d" translate="yes" xml:space="preserve">
          <source>Opens or creates a file, returning a seekable byte channel to access the file. This method works in exactly the manner specified by the &lt;a href=&quot;../files#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;Files.newByteChannel(Path,Set,FileAttribute[])&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">파일을 열거 나 생성하여 파일에 액세스하기 위해 검색 가능한 바이트 채널을 반환합니다. 이 메소드는 &lt;a href=&quot;../files#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;Files.newByteChannel(Path,Set,FileAttribute[])&lt;/code&gt; &lt;/a&gt; 메소드로 지정된 방식으로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="9437d5b1476b422a1f58a1e9b3561c09cba8d601" translate="yes" xml:space="preserve">
          <source>Opens or creates a file, returning an output stream that may be used to write bytes to the file.</source>
          <target state="translated">파일을 열거 나 생성하여 파일에 바이트를 쓰는 데 사용할 수있는 출력 스트림을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="39ba70e8ad7ab77be9a1b0ee0ee0f23fead7c7b6" translate="yes" xml:space="preserve">
          <source>Opens or creates a file, returning an output stream that may be used to write bytes to the file. The resulting stream will not be buffered. The stream will be safe for access by multiple concurrent threads. Whether the returned stream is</source>
          <target state="translated">파일을 열거 나 작성하여 파일에 바이트를 쓰는 데 사용될 수있는 출력 스트림을 리턴합니다. 결과 스트림은 버퍼링되지 않습니다. 스트림은 여러 개의 동시 스레드가 안전하게 액세스 할 수 있습니다. 반환 된 스트림이</target>
        </trans-unit>
        <trans-unit id="a342a7c0726b1ebec3ad2241f423f62c6f69a58d" translate="yes" xml:space="preserve">
          <source>Opens or creates a file, returning an output stream that may be used to write bytes to the file. This method works in exactly the manner specified by the &lt;a href=&quot;../files#newOutputStream(java.nio.file.Path,java.nio.file.OpenOption...)&quot;&gt;&lt;code&gt;Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">파일을 열거 나 생성하여 파일에 바이트를 쓰는 데 사용할 수있는 출력 스트림을 반환합니다. 이 메소드는 &lt;a href=&quot;../files#newOutputStream(java.nio.file.Path,java.nio.file.OpenOption...)&quot;&gt; &lt;code&gt;Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 방식으로 정확히 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="2dab53d65cf6ecda786158b5647fae0e1935404a" translate="yes" xml:space="preserve">
          <source>Opens or creates a file, returning an output stream that may be used to write bytes to the file. This method works in exactly the manner specified by the &lt;a href=&quot;../files#newOutputStream-java.nio.file.Path-java.nio.file.OpenOption...-&quot;&gt;&lt;code&gt;Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">파일을 열거 나 작성하여 파일에 바이트를 쓰는 데 사용될 수있는 출력 스트림을 리턴합니다. 이 메소드는 &lt;a href=&quot;../files#newOutputStream-java.nio.file.Path-java.nio.file.OpenOption...-&quot;&gt; &lt;code&gt;Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)&lt;/code&gt; &lt;/a&gt; 메소드로 지정된 방식으로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="f5d502eefc9573ba8f32c2cdda9352ee4a2fb3fb" translate="yes" xml:space="preserve">
          <source>Opens the clip with the format and audio data present in the provided audio input stream.</source>
          <target state="translated">제공된 오디오 입력 스트림에있는 형식 및 오디오 데이터로 클립을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="12036391b9b4f98721f11061056efd459d02bbed" translate="yes" xml:space="preserve">
          <source>Opens the clip with the format and audio data present in the provided audio input stream. Opening a clip means that it should acquire any required system resources and become operational. If this operation input stream. If this operation succeeds, the line is marked open and an &lt;a href=&quot;lineevent.type#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt; event is dispatched to the line's listeners.</source>
          <target state="translated">제공된 오디오 입력 스트림에있는 형식 및 오디오 데이터로 클립을 엽니 다. 클립을 열면 필요한 시스템 리소스를 확보하고 작동하게됩니다. 이 작업 입력 스트림. 이 작업이 성공하면 해당 줄은 열린 상태로 표시되고 &lt;a href=&quot;lineevent.type#OPEN&quot;&gt; &lt;code&gt;OPEN&lt;/code&gt; &lt;/a&gt; 이벤트가 라인의 리스너에게 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="3cbb0f40ba6016150559757008977a0140089a0f" translate="yes" xml:space="preserve">
          <source>Opens the clip with the format and audio data present in the provided audio input stream. Opening a clip means that it should acquire any required system resources and become operational. If this operation input stream. If this operation succeeds, the line is marked open and an &lt;code&gt;&lt;a href=&quot;lineevent.type#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; event is dispatched to the line's listeners.</source>
          <target state="translated">제공된 오디오 입력 스트림에 형식 및 오디오 데이터가있는 클립을 엽니 다. 클립을 열면 필요한 시스템 리소스를 확보하고 작동해야합니다. 이 작업이 스트림 인 경우. 이 작업이 성공하면 회선이 열린 것으로 표시되고 &lt;code&gt;&lt;a href=&quot;lineevent.type#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 이벤트가 회선의 리스너로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="a60a11040ae43a37ee717ce2fd107bcc4b478ec6" translate="yes" xml:space="preserve">
          <source>Opens the clip, meaning that it should acquire any required system resources and become operational.</source>
          <target state="translated">클립을 엽니 다. 즉, 필요한 시스템 리소스를 획득하고 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="4619ae261334ef528ae44c2c45250242195a470f" translate="yes" xml:space="preserve">
          <source>Opens the clip, meaning that it should acquire any required system resources and become operational. The clip is opened with the format and audio data indicated. If this operation succeeds, the line is marked as open and an &lt;a href=&quot;lineevent.type#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt; event is dispatched to the line's listeners.</source>
          <target state="translated">클립을 엽니 다. 즉, 필요한 시스템 리소스를 획득하고 작동해야합니다. 표시된 형식 및 오디오 데이터로 클립이 열립니다. 이 작업이 성공하면 해당 줄은 열린 것으로 표시되고 &lt;a href=&quot;lineevent.type#OPEN&quot;&gt; &lt;code&gt;OPEN&lt;/code&gt; &lt;/a&gt; 이벤트가 해당 줄의 리스너에게 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="eea348600399f4d5e4325cab5f7dd718382b3154" translate="yes" xml:space="preserve">
          <source>Opens the clip, meaning that it should acquire any required system resources and become operational. The clip is opened with the format and audio data indicated. If this operation succeeds, the line is marked as open and an &lt;code&gt;&lt;a href=&quot;lineevent.type#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; event is dispatched to the line's listeners.</source>
          <target state="translated">클립을 엽니 다. 즉, 필요한 시스템 리소스를 확보하고 작동해야합니다. 형식과 오디오 데이터가 표시된 상태로 클립이 열립니다. 이 작업이 성공하면 회선이 열린 것으로 표시되고 &lt;code&gt;&lt;a href=&quot;lineevent.type#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 이벤트가 회선의 리스너로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="40166dcc708c3df898f71659885373af2685f2a2" translate="yes" xml:space="preserve">
          <source>Opens the device, indicating that it should now acquire any system resources it requires and become operational.</source>
          <target state="translated">장치를 열어 필요한 모든 시스템 리소스를 가져 와서 작동해야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="77940f8e64161262b2b50d1612c0b108378dfcba" translate="yes" xml:space="preserve">
          <source>Opens the directory identified by the given path, returning a &lt;code&gt;
 SecureDirectoryStream&lt;/code&gt; to iterate over the entries in the directory.</source>
          <target state="translated">주어진 경로로 식별되는 디렉토리를 &lt;code&gt; SecureDirectoryStream&lt;/code&gt; 반환합니다. 을 하여 디렉토리의 항목을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="db199ac89a53082d98b9259df975194b4472cc1d" translate="yes" xml:space="preserve">
          <source>Opens the directory identified by the given path, returning a &lt;code&gt;SecureDirectoryStream&lt;/code&gt; to iterate over the entries in the directory.</source>
          <target state="translated">주어진 경로로 식별 된 디렉토리를 &lt;code&gt;SecureDirectoryStream&lt;/code&gt; 디렉토리의 항목을 반복 하는 SecureDirectoryStream 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="7008dc1af7408bdfd7a38e1ec880ca5947e6e4cf" translate="yes" xml:space="preserve">
          <source>Opens the line with the specified format and requested buffer size, causing the line to acquire any required system resources and become operational.</source>
          <target state="translated">지정된 형식과 요청 된 버퍼 크기로 회선을 열어 회선이 필요한 시스템 자원을 확보하고 작동하게합니다.</target>
        </trans-unit>
        <trans-unit id="30f5963e7a4513fef8bf54c313aa7a102d9e6cfa" translate="yes" xml:space="preserve">
          <source>Opens the line with the specified format and suggested buffer size, causing the line to acquire any required system resources and become operational.</source>
          <target state="translated">지정된 형식과 제안 된 버퍼 크기로 라인을 열어 필요한 시스템 자원을 확보하고 작동하게합니다.</target>
        </trans-unit>
        <trans-unit id="addae188d4453b10bd2d2b6644a21dc74bd08507" translate="yes" xml:space="preserve">
          <source>Opens the line with the specified format, causing the line to acquire any required system resources and become operational.</source>
          <target state="translated">지정된 형식으로 회선을 열어 회선이 필요한 시스템 자원을 확보하고 작동하게합니다.</target>
        </trans-unit>
        <trans-unit id="904cbf0e43b55d8771af78f28ef5dc2e5cc6ecdf" translate="yes" xml:space="preserve">
          <source>Opens the line, indicating that it should acquire any required system resources and become operational.</source>
          <target state="translated">필요한 시스템 리소스를 확보하고 작동해야 함을 나타내는 줄을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="a218f32cc18db8a8c98e348593efa95ee420460a" translate="yes" xml:space="preserve">
          <source>Opens the line, indicating that it should acquire any required system resources and become operational. If this operation succeeds, the line is marked as open, and an &lt;code&gt;OPEN&lt;/code&gt; event is dispatched to the line's listeners.</source>
          <target state="translated">회선을 열어 필요한 시스템 자원을 확보하고 작동해야 함을 나타냅니다. 이 작업이 성공하면 회선이 열린 것으로 표시되고 &lt;code&gt;OPEN&lt;/code&gt; 이벤트가 회선의 리스너로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="806fbcad9ee52558c8d64de43ac1ad03e88355e6" translate="yes" xml:space="preserve">
          <source>Opens the module content for reading.</source>
          <target state="translated">읽을 모듈 콘텐츠를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="477dbd23cd06294f5fbd2b5e57c0ab0bbfd208b7" translate="yes" xml:space="preserve">
          <source>Opens the native help viewer application.</source>
          <target state="translated">기본 도움말 뷰어 애플리케이션을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="0c7b4e1ff412135b0216a5589c3cf6cf333a7fc8" translate="yes" xml:space="preserve">
          <source>Operating on a closed stream behaves as if the end of stream has been reached. Due to read-ahead, one or more elements may be returned after the stream has been closed.</source>
          <target state="translated">닫힌 스트림에서 작업하면 스트림 끝에 도달 한 것처럼 작동합니다. 미리 읽기로 인해 스트림이 닫힌 후 하나 이상의 요소가 반환 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf273ba59b9ed7fd1463a3dea59d4f402d07f8c4" translate="yes" xml:space="preserve">
          <source>Operating system architecture</source>
          <target state="translated">운영 체제 아키텍처</target>
        </trans-unit>
        <trans-unit id="5f6b6ec8214d5a37d84174d2b0ab86063020ec51" translate="yes" xml:space="preserve">
          <source>Operating system name</source>
          <target state="translated">운영 체제 이름</target>
        </trans-unit>
        <trans-unit id="d8623dd1b7e9d853708b7d57679c46236fb6c059" translate="yes" xml:space="preserve">
          <source>Operating system version</source>
          <target state="translated">운영 체제 버전</target>
        </trans-unit>
        <trans-unit id="850dd353734df5346b81639c337ec26ac5830f23" translate="yes" xml:space="preserve">
          <source>Operating systems that implement the &lt;a href=&quot;http://www.opengroup.org&quot;&gt; POSIX&lt;/a&gt; family of standards commonly use file systems that have a file &lt;em&gt;owner&lt;/em&gt;, &lt;em&gt;group-owner&lt;/em&gt;, and related &lt;em&gt;access permissions&lt;/em&gt;. This file attribute view provides read and write access to these attributes.</source>
          <target state="translated">&lt;a href=&quot;http://www.opengroup.org&quot;&gt;POSIX&lt;/a&gt; 표준 제품군 을 구현하는 운영 체제는 일반적으로 파일 &lt;em&gt;소유자&lt;/em&gt; , &lt;em&gt;그룹 소유자&lt;/em&gt; 및 관련 &lt;em&gt;액세스 권한&lt;/em&gt; 이있는 파일 시스템을 사용합니다 . 이 파일 속성보기는 이러한 속성에 대한 읽기 및 쓰기 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="81620b5ba38a8a4cc84857c276a912982c18c04d" translate="yes" xml:space="preserve">
          <source>OperatingSystemMXBean</source>
          <target state="translated">OperatingSystemMXBean</target>
        </trans-unit>
        <trans-unit id="654a2005cdab27ea113ac0befc67c8eb26a95172" translate="yes" xml:space="preserve">
          <source>OperatingSystemMXBean.getArch()</source>
          <target state="translated">OperatingSystemMXBean.getArch()</target>
        </trans-unit>
        <trans-unit id="8d3d350511a0e2e0e0663dd8917239feb612f36f" translate="yes" xml:space="preserve">
          <source>OperatingSystemMXBean.getAvailableProcessors()</source>
          <target state="translated">OperatingSystemMXBean.getAvailableProcessors()</target>
        </trans-unit>
        <trans-unit id="2429927bbc280d38ac598fb4d14f3500a56468cb" translate="yes" xml:space="preserve">
          <source>OperatingSystemMXBean.getName()</source>
          <target state="translated">OperatingSystemMXBean.getName()</target>
        </trans-unit>
        <trans-unit id="65284a438c25b865809988b8f61a8f0ade129da1" translate="yes" xml:space="preserve">
          <source>OperatingSystemMXBean.getSystemLoadAverage()</source>
          <target state="translated">OperatingSystemMXBean.getSystemLoadAverage()</target>
        </trans-unit>
        <trans-unit id="fa8ec9d5b4a13fe4113e0123c48ac646e8d900b6" translate="yes" xml:space="preserve">
          <source>OperatingSystemMXBean.getVersion()</source>
          <target state="translated">OperatingSystemMXBean.getVersion()</target>
        </trans-unit>
        <trans-unit id="430d32076eb256f0fb1db5fd1333254c368ef1ba" translate="yes" xml:space="preserve">
          <source>Operation</source>
          <target state="translated">Operation</target>
        </trans-unit>
        <trans-unit id="bb11af703cabdef2f32f8bb5ac9007dc4f0603e7" translate="yes" xml:space="preserve">
          <source>Operation name.</source>
          <target state="translated">작업 이름</target>
        </trans-unit>
        <trans-unit id="674b53284a30ce119efc25ee2e0aa59c924bf1aa" translate="yes" xml:space="preserve">
          <source>Operation unauthorized.</source>
          <target state="translated">권한이없는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="fb3c98349de1d1e6d879fe05ceb7157e8421ef65" translate="yes" xml:space="preserve">
          <source>Operation unavailable.</source>
          <target state="translated">사용할 수없는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="593bc24cd9e051fb6da61f695a35de2158082a1b" translate="yes" xml:space="preserve">
          <source>Operation-set bit for read operations.</source>
          <target state="translated">읽기 작업을위한 작업 세트 비트.</target>
        </trans-unit>
        <trans-unit id="87582597e58da90e9c254541e9814884798492f7" translate="yes" xml:space="preserve">
          <source>Operation-set bit for socket-accept operations.</source>
          <target state="translated">소켓 수락 조작을위한 조작 세트 비트.</target>
        </trans-unit>
        <trans-unit id="8154e7625762b13759970ea70151add6ea8d9235" translate="yes" xml:space="preserve">
          <source>Operation-set bit for socket-connect operations.</source>
          <target state="translated">소켓 연결 작업을위한 작업 세트 비트.</target>
        </trans-unit>
        <trans-unit id="d5a495f3decfc94f776ceb20271afba362182891" translate="yes" xml:space="preserve">
          <source>Operation-set bit for write operations.</source>
          <target state="translated">쓰기 작업을위한 작업 세트 비트.</target>
        </trans-unit>
        <trans-unit id="adc130598b41a94eabc5a97263406a6b5399dfc8" translate="yes" xml:space="preserve">
          <source>OperationNotSupportedException</source>
          <target state="translated">OperationNotSupportedException</target>
        </trans-unit>
        <trans-unit id="2be3ef663cbc5bbc8dad8cf0c4a9737ef3aa9bbf" translate="yes" xml:space="preserve">
          <source>Operational Attributes</source>
          <target state="translated">운영 속성</target>
        </trans-unit>
        <trans-unit id="0b275a6f26109226264308aeee264e9247442882" translate="yes" xml:space="preserve">
          <source>Operations on URI instances</source>
          <target state="translated">URI 인스턴스에 대한 작업</target>
        </trans-unit>
        <trans-unit id="fa07625dde73dbf45043b5e487602929523b7412" translate="yes" xml:space="preserve">
          <source>Operations on this class make no guarantees about the ordering of elements with equal priority. If you need to enforce an ordering, you can define custom classes or comparators that use a secondary key to break ties in primary priority values. For example, here is a class that applies first-in-first-out tie-breaking to comparable elements. To use it, you would insert a &lt;code&gt;new FIFOEntry(anEntry)&lt;/code&gt; instead of a plain entry object.</source>
          <target state="translated">이 클래스에서의 조작은 우선 순위가 동일한 요소의 순서를 보증하지 않습니다. 순서를 적용해야하는 경우 보조 키를 사용하여 기본 우선 순위 값으로 묶는 사용자 정의 클래스 또는 비교기를 정의 할 수 있습니다. 예를 들어, 다음은 선입 선출 방식을 유사한 요소에 적용하는 클래스입니다. 이를 사용하려면 일반 입력 개체 대신 &lt;code&gt;new FIFOEntry(anEntry)&lt;/code&gt; 를 삽입해야 합니다.</target>
        </trans-unit>
        <trans-unit id="180b43c66f97341ecbd004b08bb4c5c88dd48f0f" translate="yes" xml:space="preserve">
          <source>Operations over Duration</source>
          <target state="translated">기간에 따른 작업</target>
        </trans-unit>
        <trans-unit id="1869352dcb59a25610b5f146143cd64285939004" translate="yes" xml:space="preserve">
          <source>OperationsException</source>
          <target state="translated">OperationsException</target>
        </trans-unit>
        <trans-unit id="0db37efcd4e744eb036a7330ad91c33fb1585d75" translate="yes" xml:space="preserve">
          <source>Optical bounds.</source>
          <target state="translated">광학 경계.</target>
        </trans-unit>
        <trans-unit id="1259602ebad4b72b4a70febe11bd4e755b909cc4" translate="yes" xml:space="preserve">
          <source>Optical bounds. Table tag &quot;opbd&quot; in the Open Type Specification.</source>
          <target state="translated">광학 경계. Open Type 사양의 테이블 태그 「opbd」입니다.</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="f07fe85d489719b4ee47ff179173df36a9acce0c" translate="yes" xml:space="preserve">
          <source>Option Name</source>
          <target state="translated">옵션 이름</target>
        </trans-unit>
        <trans-unit id="58f8116360c2e1f6f2e05b5c3b946dfccdab7472" translate="yes" xml:space="preserve">
          <source>Option type, one of &lt;code&gt;DEFAULT_OPTION&lt;/code&gt;, &lt;code&gt;YES_NO_OPTION&lt;/code&gt;, &lt;code&gt;YES_NO_CANCEL_OPTION&lt;/code&gt; or &lt;code&gt;OK_CANCEL_OPTION&lt;/code&gt;.</source>
          <target state="translated">옵션 유형, &lt;code&gt;DEFAULT_OPTION&lt;/code&gt; , &lt;code&gt;YES_NO_OPTION&lt;/code&gt; , &lt;code&gt;YES_NO_CANCEL_OPTION&lt;/code&gt; 또는 &lt;code&gt;OK_CANCEL_OPTION&lt;/code&gt; 중 하나 .</target>
        </trans-unit>
        <trans-unit id="a8870bfd1a96f21835e2901900c4b14348dd1837" translate="yes" xml:space="preserve">
          <source>OptionChecker</source>
          <target state="translated">OptionChecker</target>
        </trans-unit>
        <trans-unit id="4764729cc3ddc326edf4ac7b502ef5b5bacbb380" translate="yes" xml:space="preserve">
          <source>OptionChecker.isSupportedOption()</source>
          <target state="translated">OptionChecker.isSupportedOption()</target>
        </trans-unit>
        <trans-unit id="56c5370ea18dba053b19080eb58d85ac53dabaa1" translate="yes" xml:space="preserve">
          <source>OptionDialogBorder</source>
          <target state="translated">OptionDialogBorder</target>
        </trans-unit>
        <trans-unit id="93152d03a89c12034974d7293f0cc9001a86dee1" translate="yes" xml:space="preserve">
          <source>OptionPane region.</source>
          <target state="translated">OptionPane 영역.</target>
        </trans-unit>
        <trans-unit id="f7b02ecf2bf05a638c506b87a97a82aad97c9361" translate="yes" xml:space="preserve">
          <source>OptionPane region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;OptionPane&lt;/code&gt;.</source>
          <target state="translated">OptionPane 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 &lt;code&gt;OptionPane&lt;/code&gt; 이라는 이름을 사용하십시오. .</target>
        </trans-unit>
        <trans-unit id="506b7147a18871e9747ff213e177f54f2b9e9fcd" translate="yes" xml:space="preserve">
          <source>OptionPaneUI</source>
          <target state="translated">OptionPaneUI</target>
        </trans-unit>
        <trans-unit id="0c6c4102d4dfec3b1aa41117e0e344046c58a151" translate="yes" xml:space="preserve">
          <source>Optional</source>
          <target state="translated">Optional</target>
        </trans-unit>
        <trans-unit id="15c3b5212c6f47ce3e7d3f05d2f219f6859d2ab7" translate="yes" xml:space="preserve">
          <source>Optional &lt;code&gt;LoginModule&lt;/code&gt;.</source>
          <target state="translated">선택적 &lt;code&gt;LoginModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f8adb8618d7fb5481d23e3acce7fb5f34c374b3" translate="yes" xml:space="preserve">
          <source>Optional Element</source>
          <target state="translated">선택적 요소</target>
        </trans-unit>
        <trans-unit id="35dfeb89683405beb4ab84d3bd1c4f5c265f2970" translate="yes" xml:space="preserve">
          <source>Optional Element Summary</source>
          <target state="translated">선택적 요소 요약</target>
        </trans-unit>
        <trans-unit id="b6cba1090ba1a4446942c531ee82576b48e30fb8" translate="yes" xml:space="preserve">
          <source>Optional Elements</source>
          <target state="translated">선택적 요소</target>
        </trans-unit>
        <trans-unit id="18c72782b7f58468994aea9f822d2b14797753a5" translate="yes" xml:space="preserve">
          <source>Optional Fields</source>
          <target state="translated">선택적 필드</target>
        </trans-unit>
        <trans-unit id="992951cbc83e62c8896c9573eca373fa8bb4705c" translate="yes" xml:space="preserve">
          <source>Optional Specific Exceptions</source>
          <target state="translated">선택적 특정 예외</target>
        </trans-unit>
        <trans-unit id="e24bb4e80521a5797d27ecb3c537f28e709c6c43" translate="yes" xml:space="preserve">
          <source>Optional for the Java SE Platform:</source>
          <target state="translated">Java SE 플랫폼의 경우 선택 사항 :</target>
        </trans-unit>
        <trans-unit id="c3054c73ad93a86af934a2bf769ab2dfee1519da" translate="yes" xml:space="preserve">
          <source>Optional.empty()</source>
          <target state="translated">Optional.empty()</target>
        </trans-unit>
        <trans-unit id="725eab4fcd984559f035f5b2ddf609341b8f7325" translate="yes" xml:space="preserve">
          <source>Optional.equals()</source>
          <target state="translated">Optional.equals()</target>
        </trans-unit>
        <trans-unit id="c730df5f126bf313a88f2b29abc280444a784f9a" translate="yes" xml:space="preserve">
          <source>Optional.filter()</source>
          <target state="translated">Optional.filter()</target>
        </trans-unit>
        <trans-unit id="3c598baddae83eeb68bf2cc52be141d992dc7223" translate="yes" xml:space="preserve">
          <source>Optional.flatMap()</source>
          <target state="translated">Optional.flatMap()</target>
        </trans-unit>
        <trans-unit id="ba5f0ce21dcc7c272b94dff7a1cd8f61b09109fb" translate="yes" xml:space="preserve">
          <source>Optional.get()</source>
          <target state="translated">Optional.get()</target>
        </trans-unit>
        <trans-unit id="3793603eb5e8edaf116ba96da4596d942386b71d" translate="yes" xml:space="preserve">
          <source>Optional.hashCode()</source>
          <target state="translated">Optional.hashCode()</target>
        </trans-unit>
        <trans-unit id="40d51e2a0c20e8964a307f910664b8eb110cfea9" translate="yes" xml:space="preserve">
          <source>Optional.ifPresent()</source>
          <target state="translated">Optional.ifPresent()</target>
        </trans-unit>
        <trans-unit id="3f0e46bc0da79c9ca69492881a26313548f08ede" translate="yes" xml:space="preserve">
          <source>Optional.isPresent()</source>
          <target state="translated">Optional.isPresent()</target>
        </trans-unit>
        <trans-unit id="79eb671f2b18eef1b822d62c55574042d6e0f2e5" translate="yes" xml:space="preserve">
          <source>Optional.map()</source>
          <target state="translated">Optional.map()</target>
        </trans-unit>
        <trans-unit id="bb51dc90e4e0a579aa58baea82d9c23f60a84b96" translate="yes" xml:space="preserve">
          <source>Optional.of()</source>
          <target state="translated">Optional.of()</target>
        </trans-unit>
        <trans-unit id="8484b92d158e810e31ee60deee3160b36e859310" translate="yes" xml:space="preserve">
          <source>Optional.ofNullable()</source>
          <target state="translated">Optional.ofNullable()</target>
        </trans-unit>
        <trans-unit id="2586f9e15e481fdc70cc8837e639a97e61ed85be" translate="yes" xml:space="preserve">
          <source>Optional.orElse()</source>
          <target state="translated">Optional.orElse()</target>
        </trans-unit>
        <trans-unit id="ded386df6ed0de7793a41181ac08cc17713a806d" translate="yes" xml:space="preserve">
          <source>Optional.orElseGet()</source>
          <target state="translated">Optional.orElseGet()</target>
        </trans-unit>
        <trans-unit id="a04733203428d6206635a216f4cd63846f600e15" translate="yes" xml:space="preserve">
          <source>Optional.orElseThrow()</source>
          <target state="translated">Optional.orElseThrow()</target>
        </trans-unit>
        <trans-unit id="0d4939db8772f2c3d94e585d9e293820d6f70920" translate="yes" xml:space="preserve">
          <source>Optional.toString()</source>
          <target state="translated">Optional.toString()</target>
        </trans-unit>
        <trans-unit id="2ef308a1aac80e6b35d1c07581c14e65bf1da953" translate="yes" xml:space="preserve">
          <source>OptionalDataException</source>
          <target state="translated">OptionalDataException</target>
        </trans-unit>
        <trans-unit id="81170f0eb9ccbbc5c07e1870fa10fb60cad5836a" translate="yes" xml:space="preserve">
          <source>OptionalDouble</source>
          <target state="translated">OptionalDouble</target>
        </trans-unit>
        <trans-unit id="49e52aa0125155484c365ecbdf71a38be1f4c58e" translate="yes" xml:space="preserve">
          <source>OptionalDouble.empty()</source>
          <target state="translated">OptionalDouble.empty()</target>
        </trans-unit>
        <trans-unit id="1d9a629a822e731de9cfc2b18b8cf044682578f0" translate="yes" xml:space="preserve">
          <source>OptionalDouble.equals()</source>
          <target state="translated">OptionalDouble.equals()</target>
        </trans-unit>
        <trans-unit id="73cb269b756d605a11f393a024761139f887f2ce" translate="yes" xml:space="preserve">
          <source>OptionalDouble.getAsDouble()</source>
          <target state="translated">OptionalDouble.getAsDouble()</target>
        </trans-unit>
        <trans-unit id="857c6f8f6c94dfb850de58cd08ffacebb6175990" translate="yes" xml:space="preserve">
          <source>OptionalDouble.hashCode()</source>
          <target state="translated">OptionalDouble.hashCode()</target>
        </trans-unit>
        <trans-unit id="273a9e91b5266d0e4283d1c96f01624bbca95d3e" translate="yes" xml:space="preserve">
          <source>OptionalDouble.ifPresent()</source>
          <target state="translated">OptionalDouble.ifPresent()</target>
        </trans-unit>
        <trans-unit id="d0675fbe33f0d259a584b4f700e922a1bb26bbb7" translate="yes" xml:space="preserve">
          <source>OptionalDouble.isPresent()</source>
          <target state="translated">OptionalDouble.isPresent()</target>
        </trans-unit>
        <trans-unit id="8b2b4123f7cad24e34492f91686188b5ed29c3d5" translate="yes" xml:space="preserve">
          <source>OptionalDouble.of()</source>
          <target state="translated">OptionalDouble.of()</target>
        </trans-unit>
        <trans-unit id="b7d20eb1c6280dfb1360c48422e74941500c7f87" translate="yes" xml:space="preserve">
          <source>OptionalDouble.orElse()</source>
          <target state="translated">OptionalDouble.orElse()</target>
        </trans-unit>
        <trans-unit id="37bb3b97f88e1b3b1923ed6cef3d7d72898ce53f" translate="yes" xml:space="preserve">
          <source>OptionalDouble.orElseGet()</source>
          <target state="translated">OptionalDouble.orElseGet()</target>
        </trans-unit>
        <trans-unit id="5b2ad43b86eb19408260f6cd086cffa9f3026428" translate="yes" xml:space="preserve">
          <source>OptionalDouble.orElseThrow()</source>
          <target state="translated">OptionalDouble.orElseThrow()</target>
        </trans-unit>
        <trans-unit id="9aaf2e2a396f5bfe24a206a6df0dc02f261e6640" translate="yes" xml:space="preserve">
          <source>OptionalDouble.toString()</source>
          <target state="translated">OptionalDouble.toString()</target>
        </trans-unit>
        <trans-unit id="31692c801230855bf73649987f3b096fcb0d3644" translate="yes" xml:space="preserve">
          <source>OptionalInt</source>
          <target state="translated">OptionalInt</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
