<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="f545a31d332fd214f9259a9d88e64957c2997f77" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;timeunit&quot;&gt;&lt;code&gt;TimeUnit&lt;/code&gt;&lt;/a&gt; class provides multiple granularities (including nanoseconds) for specifying and controlling time-out based operations. Most classes in the package contain operations based on time-outs in addition to indefinite waits. In all cases that time-outs are used, the time-out specifies the minimum time that the method should wait before indicating that it timed-out. Implementations make a &quot;best effort&quot; to detect time-outs as soon as possible after they occur. However, an indefinite amount of time may elapse between a time-out being detected and a thread actually executing again after that time-out. All methods that accept timeout parameters treat values less than or equal to zero to mean not to wait at all. To wait &quot;forever&quot;, you can use a value of &lt;code&gt;Long.MAX_VALUE&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;timeunit&quot;&gt; &lt;code&gt;TimeUnit&lt;/code&gt; 와의&lt;/a&gt; 클래스 지정 및 타임 아웃을 기반으로 동작을 제어 (나노초 포함한) 여러 입도를 제공한다. 패키지의 대부분의 클래스에는 무한 대기 외에 시간 종료를 기반으로하는 조작이 포함됩니다. 제한 시간이 사용되는 모든 경우에 제한 시간은 메소드가 제한 시간을 표시하기 전에 대기해야하는 최소 시간을 지정합니다. 구현은 시간 초과가 발생한 후 가능한 빨리 감지하기 위해 &quot;최선의 노력&quot;을합니다. 그러나 시간 종료가 감지되고 해당 시간 종료 후 실제로 다시 실행되는 스레드 사이에 무한한 시간이 경과 할 수 있습니다. 시간 종료 매개 변수를 허용하는 모든 메소드는 전혀 기다리지 않기 위해 0보다 작거나 같은 값을 처리합니다. &quot;영원히&quot;대기하기 위해 &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; 값을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6bc011c045314ae785385e0758aa43561f462e02" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;transformerhandler&quot;&gt;&lt;code&gt;TransformerHandler&lt;/code&gt;&lt;/a&gt; interface allows a transformation to be created from SAX2 parse events, which is a &quot;push&quot; model rather than the &quot;pull&quot; model that normally occurs for a transformation. Normal parse events are received through the &lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; interface, lexical events such as startCDATA and endCDATA are received through the &lt;a href=&quot;../../../../org/xml/sax/ext/lexicalhandler&quot;&gt;&lt;code&gt;LexicalHandler&lt;/code&gt;&lt;/a&gt; interface, and events that signal the start or end of disabling output escaping are received via &lt;a href=&quot;../../../../org/xml/sax/contenthandler#processingInstruction(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;ContentHandler.processingInstruction(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt;, with the target parameter being &lt;a href=&quot;../result#PI_DISABLE_OUTPUT_ESCAPING&quot;&gt;&lt;code&gt;Result.PI_DISABLE_OUTPUT_ESCAPING&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../result#PI_ENABLE_OUTPUT_ESCAPING&quot;&gt;&lt;code&gt;Result.PI_ENABLE_OUTPUT_ESCAPING&lt;/code&gt;&lt;/a&gt;. If parameters, output properties, or other features need to be set on the Transformer handler, a &lt;a href=&quot;../transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt; reference will need to be obtained from &lt;a href=&quot;transformerhandler#getTransformer()&quot;&gt;&lt;code&gt;TransformerHandler.getTransformer()&lt;/code&gt;&lt;/a&gt;, and the methods invoked from that reference.</source>
          <target state="translated">The &lt;a href=&quot;transformerhandler&quot;&gt; &lt;code&gt;TransformerHandler&lt;/code&gt; &lt;/a&gt; interface allows a transformation to be created from SAX2 parse events, which is a &quot;push&quot; model rather than the &quot;pull&quot; model that normally occurs for a transformation. Normal parse events are received through the &lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt; interface, lexical events such as startCDATA and endCDATA are received through the &lt;a href=&quot;../../../../org/xml/sax/ext/lexicalhandler&quot;&gt; &lt;code&gt;LexicalHandler&lt;/code&gt; &lt;/a&gt; interface, and events that signal the start or end of disabling output escaping are received via &lt;a href=&quot;../../../../org/xml/sax/contenthandler#processingInstruction(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;ContentHandler.processingInstruction(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt;, with the target parameter being &lt;a href=&quot;../result#PI_DISABLE_OUTPUT_ESCAPING&quot;&gt; &lt;code&gt;Result.PI_DISABLE_OUTPUT_ESCAPING&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;../result#PI_ENABLE_OUTPUT_ESCAPING&quot;&gt; &lt;code&gt;Result.PI_ENABLE_OUTPUT_ESCAPING&lt;/code&gt; &lt;/a&gt;. If parameters, output properties, or other features need to be set on the Transformer handler, a &lt;a href=&quot;../transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; &lt;/a&gt; reference will need to be obtained from &lt;a href=&quot;transformerhandler#getTransformer()&quot;&gt; &lt;code&gt;TransformerHandler.getTransformer()&lt;/code&gt; &lt;/a&gt;, and the methods invoked from that reference.</target>
        </trans-unit>
        <trans-unit id="8b0e3a5fd66bb193d4396df91f7f330610d51100" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt;single-argument constructor&lt;/a&gt; requires any illegal characters in its argument to be quoted and preserves any escaped octets and</source>
          <target state="translated">&lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt;단일 인수 생성자가&lt;/a&gt; 인용 될 인수에 불법 문자를 필요로하고 탈출 옥텟을 보존하고</target>
        </trans-unit>
        <trans-unit id="96d3a6675116e768726d899ee3f398538f8d3f5e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#URI-java.lang.String-java.lang.String-java.lang.String-int-java.lang.String-java.lang.String-java.lang.String-&quot;&gt;multi-argument constructors&lt;/a&gt; quote illegal characters as required by the components in which they appear. The percent character (&lt;code&gt;'%'&lt;/code&gt;) is always quoted by these constructors. Any</source>
          <target state="translated">&lt;a href=&quot;uri#URI-java.lang.String-java.lang.String-java.lang.String-int-java.lang.String-java.lang.String-java.lang.String-&quot;&gt;멀티 인수 생성자&lt;/a&gt; 가 표시되는 구성 요소에 필요한 불법 문자를 인용. 백분율 문자 ( &lt;code&gt;'%'&lt;/code&gt; )는 항상 이러한 생성자가 인용합니다. 어떤</target>
        </trans-unit>
        <trans-unit id="a5b18837b67d6da8cf5f631b9ddf3619afc39652" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#getRawUserInfo--&quot;&gt;&lt;code&gt;getRawUserInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getRawPath--&quot;&gt;&lt;code&gt;getRawPath&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getRawQuery--&quot;&gt;&lt;code&gt;getRawQuery&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getRawFragment--&quot;&gt;&lt;code&gt;getRawFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getRawAuthority--&quot;&gt;&lt;code&gt;getRawAuthority&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;uri#getRawSchemeSpecificPart--&quot;&gt;&lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; methods return the values of their corresponding components in raw form, without interpreting any escaped octets. The strings returned by these methods may contain both escaped octets and</source>
          <target state="translated">&lt;a href=&quot;uri#getRawUserInfo--&quot;&gt; &lt;code&gt;getRawUserInfo&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;uri#getRawPath--&quot;&gt; &lt;code&gt;getRawPath&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;uri#getRawQuery--&quot;&gt; &lt;code&gt;getRawQuery&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;uri#getRawFragment--&quot;&gt; &lt;code&gt;getRawFragment&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;uri#getRawAuthority--&quot;&gt; &lt;code&gt;getRawAuthority&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;uri#getRawSchemeSpecificPart--&quot;&gt; &lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt; 의&lt;/a&gt; 방법은 모든 탈출 옥텟을 해석하지 않고 원시 형태에서의 대응 구성 요소의 값을 반환한다. 이 메소드에 의해 리턴 된 문자열은 이스케이프 된 옥텟과</target>
        </trans-unit>
        <trans-unit id="c86bed47bbda7f711ebae1c96c0ca26487893480" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#getUserInfo--&quot;&gt;&lt;code&gt;getUserInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getPath--&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getQuery--&quot;&gt;&lt;code&gt;getQuery&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getFragment--&quot;&gt;&lt;code&gt;getFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getAuthority--&quot;&gt;&lt;code&gt;getAuthority&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;uri#getSchemeSpecificPart--&quot;&gt;&lt;code&gt;getSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; methods decode any escaped octets in their corresponding components. The strings returned by these methods may contain both</source>
          <target state="translated">&lt;a href=&quot;uri#getUserInfo--&quot;&gt; &lt;code&gt;getUserInfo&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;uri#getPath--&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;uri#getQuery--&quot;&gt; &lt;code&gt;getQuery&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;uri#getFragment--&quot;&gt; &lt;code&gt;getFragment&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;uri#getAuthority--&quot;&gt; &lt;code&gt;getAuthority&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;uri#getSchemeSpecificPart--&quot;&gt; &lt;code&gt;getSchemeSpecificPart&lt;/code&gt; 의&lt;/a&gt; 방법은 대응하는 부품에있는 이스케이프 옥텟을 디코딩. 이 메소드에 의해 리턴 된 문자열은 둘 다를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05633b3838426efa3462c8db4d61636d5eac4d0e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#toASCIIString--&quot;&gt;&lt;code&gt;toASCIIString&lt;/code&gt;&lt;/a&gt; method returns a fully quoted and encoded URI string that does not contain any</source>
          <target state="translated">&lt;a href=&quot;uri#toASCIIString--&quot;&gt; &lt;code&gt;toASCIIString&lt;/code&gt; 의&lt;/a&gt; 방법은 포함되지 않은 완전히 인용 인코딩 된 URI 문자열을 반환</target>
        </trans-unit>
        <trans-unit id="f7da3d6193bb224a3c925ce28355ba647aa44c83" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#toString--&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; method returns a URI string with all necessary quotation but which may contain</source>
          <target state="translated">&lt;a href=&quot;uri#toString--&quot;&gt; &lt;code&gt;toString&lt;/code&gt; &lt;/a&gt; 메소드는 모든 필요한 인용와 URI 문자열을 반환하지만 어느를 포함 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="483ec9540b5f90a13d5603b20efcda8d93a44c03" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;urlencoder&quot;&gt;&lt;code&gt;URLEncoder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;urldecoder&quot;&gt;&lt;code&gt;URLDecoder&lt;/code&gt;&lt;/a&gt; classes can also be used, but only for HTML form encoding, which is not the same as the encoding scheme defined in RFC2396.</source>
          <target state="translated">&lt;a href=&quot;urlencoder&quot;&gt; &lt;code&gt;URLEncoder&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;urldecoder&quot;&gt; &lt;code&gt;URLDecoder&lt;/code&gt; &lt;/a&gt; 클래스도 있지만 RFC2396에 정의 된 인코딩 방식과 동일하지 않습니다 HTML 양식 인코딩에 사용할 수있다.</target>
        </trans-unit>
        <trans-unit id="71f571d649e61ad2b45c6192eeeb015dbbe1495a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;GroupPrincipal&lt;/code&gt;&lt;/a&gt; interfaces represent an identity or group identity.</source>
          <target state="translated">&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;GroupPrincipal&lt;/code&gt; &lt;/a&gt; 인터페이스 식별자 또는 그룹 ID를 나타낸다.</target>
        </trans-unit>
        <trans-unit id="86bc860478e690457692e5c83357667c82fd5795" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;userprincipallookupservice&quot;&gt;&lt;code&gt;UserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; interface defines methods to lookup user or group principals.</source>
          <target state="translated">&lt;a href=&quot;userprincipallookupservice&quot;&gt; &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; &lt;/a&gt; 정의 방식 인터페이스는 사용자 또는 그룹에 사용자를 조회한다.</target>
        </trans-unit>
        <trans-unit id="e5ba21d66b0d3b93ec18ad331012b9b1ca1946a0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;watchevent#context()&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; for these events is the relative path between the directory located by this path, and the path that locates the directory entry that is created, deleted, or modified.</source>
          <target state="translated">The &lt;a href=&quot;watchevent#context()&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt; for these events is the relative path between the directory located by this path, and the path that locates the directory entry that is created, deleted, or modified.</target>
        </trans-unit>
        <trans-unit id="fde2227b0f31d201618a978dee14ccd29e9a589b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;watchevent#context()&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; for this event is implementation specific and may be &lt;code&gt;null&lt;/code&gt;. The event &lt;a href=&quot;watchevent#count()&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; may be greater than &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">The &lt;a href=&quot;watchevent#context()&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt; for this event is implementation specific and may be &lt;code&gt;null&lt;/code&gt; . The event &lt;a href=&quot;watchevent#count()&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt; may be greater than &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef147a7a54d7b0102550cbd209ac533ffc64556d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;watchevent#context--&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; for these events is the relative path between the directory located by this path, and the path that locates the directory entry that is created, deleted, or modified.</source>
          <target state="translated">이러한 이벤트 의 &lt;a href=&quot;watchevent#context--&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt; 는이 경로로 위치한 디렉토리와 작성, 삭제 또는 수정 된 디렉토리 항목을 찾는 경로 사이의 상대 경로입니다.</target>
        </trans-unit>
        <trans-unit id="bee2859efc1d0c9a918dc390dc05a7a666d1a2e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;watchevent#context--&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; for this event is implementation specific and may be &lt;code&gt;null&lt;/code&gt;. The event &lt;a href=&quot;watchevent#count--&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; may be greater than &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">이 이벤트 의 &lt;a href=&quot;watchevent#context--&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt; 은 구현 고유의 것으로 &lt;code&gt;null&lt;/code&gt; 일 가능성이 있습니다 . 이벤트 &lt;a href=&quot;watchevent#count--&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;1&lt;/code&gt; 보다 클 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e191eba2c61488a28e1a8036123cb6a2b3ef3c96" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;xpathfactory&quot;&gt;&lt;code&gt;XPathFactory&lt;/code&gt;&lt;/a&gt; class is not thread-safe. In other words, it is the application's responsibility to ensure that at most one thread is using a &lt;a href=&quot;xpathfactory&quot;&gt;&lt;code&gt;XPathFactory&lt;/code&gt;&lt;/a&gt; object at any given moment. Implementations are encouraged to mark methods as &lt;code&gt;synchronized&lt;/code&gt; to protect themselves from broken clients.</source>
          <target state="translated">The &lt;a href=&quot;xpathfactory&quot;&gt; &lt;code&gt;XPathFactory&lt;/code&gt; &lt;/a&gt; class is not thread-safe. In other words, it is the application's responsibility to ensure that at most one thread is using a &lt;a href=&quot;xpathfactory&quot;&gt; &lt;code&gt;XPathFactory&lt;/code&gt; &lt;/a&gt; object at any given moment. Implementations are encouraged to mark methods as &lt;code&gt;synchronized&lt;/code&gt; to protect themselves from broken clients.</target>
        </trans-unit>
        <trans-unit id="f03cb15a099a4644b24a61fcdbb5109f7974d51b" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;default-delimiter&quot;&gt;default whitespace delimiter&lt;/a&gt; used by a scanner is as recognized by &lt;a href=&quot;../lang/character#isWhitespace(char)&quot;&gt;&lt;code&gt;Character.isWhitespace()&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's delimiter to the default whitespace delimiter regardless of whether it was previously changed.</source>
          <target state="translated">The &lt;a id=&quot;default-delimiter&quot;&gt;default whitespace delimiter&lt;/a&gt; used by a scanner is as recognized by &lt;a href=&quot;../lang/character#isWhitespace(char)&quot;&gt; &lt;code&gt;Character.isWhitespace()&lt;/code&gt; &lt;/a&gt;. The &lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; method will reset the value of the scanner's delimiter to the default whitespace delimiter regardless of whether it was previously changed.</target>
        </trans-unit>
        <trans-unit id="83bba2b9bc41df62c4b5e232914061bbf686124f" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;floatDWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. This includes any signs, digits, grouping separators, decimal separators, exponential symbol, radix indicator, parentheses, and strings representing infinity and NaN as applicable. If the length of the converted value is less than the width then the output will be padded by spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals width. The padding is on the left by default. If the &lt;code&gt;'-'&lt;/code&gt; flag is given then the padding will be on the right. If width is not specified then there is no minimum.</source>
          <target state="translated">The &lt;a id=&quot;floatDWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. This includes any signs, digits, grouping separators, decimal separators, exponential symbol, radix indicator, parentheses, and strings representing infinity and NaN as applicable. If the length of the converted value is less than the width then the output will be padded by spaces ( &lt;code&gt;'\u0020'&lt;/code&gt; ) until the total number of characters equals width. The padding is on the left by default. If the &lt;code&gt;'-'&lt;/code&gt; flag is given then the padding will be on the right. If width is not specified then there is no minimum.</target>
        </trans-unit>
        <trans-unit id="ca1313ee0567ae6a3325e55423e970cd63c79430" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;genWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. If the length of the converted value is less than the width then the output will be padded by &lt;code&gt;'&amp;nbsp;&amp;nbsp;'&lt;/code&gt; (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals the width. The padding is on the left by default. If the &lt;code&gt;'-'&lt;/code&gt; flag is given, then the padding will be on the right. If the width is not specified then there is no minimum.</source>
          <target state="translated">The &lt;a id=&quot;genWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. If the length of the converted value is less than the width then the output will be padded by &lt;code&gt;'&amp;nbsp;&amp;nbsp;'&lt;/code&gt; ( &lt;code&gt;'\u0020'&lt;/code&gt; ) until the total number of characters equals the width. The padding is on the left by default. If the &lt;code&gt;'-'&lt;/code&gt; flag is given, then the padding will be on the right. If the width is not specified then there is no minimum.</target>
        </trans-unit>
        <trans-unit id="17eab65f50d2d6e5be7b33da78f51370b8e43a39" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;intWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. This includes any signs, digits, grouping separators, radix indicator, and parentheses. If the length of the converted value is less than the width then the output will be padded by spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals width. The padding is on the left by default. If &lt;code&gt;'-'&lt;/code&gt; flag is given then the padding will be on the right. If width is not specified then there is no minimum.</source>
          <target state="translated">The &lt;a id=&quot;intWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. This includes any signs, digits, grouping separators, radix indicator, and parentheses. If the length of the converted value is less than the width then the output will be padded by spaces ( &lt;code&gt;'\u0020'&lt;/code&gt; ) until the total number of characters equals width. The padding is on the left by default. If &lt;code&gt;'-'&lt;/code&gt; flag is given then the padding will be on the right. If width is not specified then there is no minimum.</target>
        </trans-unit>
        <trans-unit id="1b446ca4792047e9257ecea805dc721be67ff3ab" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; argument specifies the access mode in which the file is to be opened. The permitted values and their meanings are:</source>
          <target state="translated">The &lt;a id=&quot;mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt; argument specifies the access mode in which the file is to be opened. The permitted values and their meanings are:</target>
        </trans-unit>
        <trans-unit id="d7c6261bea4e77bf60d69292cc3f4a55c729b9b2" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;default-delimiter&quot;&gt;default whitespace delimiter&lt;/a&gt; used by a scanner is as recognized by &lt;a href=&quot;../lang/character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;../lang/character#isWhitespace-char-&quot;&gt;&lt;code&gt;isWhitespace&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;scanner#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's delimiter to the default whitespace delimiter regardless of whether it was previously changed.</source>
          <target state="translated">&lt;a name=&quot;default-delimiter&quot;&gt;기본 공백 구분 기호&lt;/a&gt; 스캐너에 의해 사용되는로 인식 &lt;a href=&quot;../lang/character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;../lang/character#isWhitespace-char-&quot;&gt; &lt;code&gt;isWhitespace&lt;/code&gt; &lt;/a&gt; 입니다. &lt;a href=&quot;scanner#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; 메소드는 관계없이 이전에 변경되었는지 여부의 기본 공백 구분 기호 스캐너의 구분의 값을 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="cdf992b6452b5c0645142b8150d07e858f599985" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;floatDWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. This includes any signs, digits, grouping separators, decimal separators, exponential symbol, radix indicator, parentheses, and strings representing infinity and NaN as applicable. If the length of the converted value is less than the width then the output will be padded by spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals width. The padding is on the left by default. If the &lt;code&gt;'-'&lt;/code&gt; flag is given then the padding will be on the right. If width is not specified then there is no minimum.</source>
          <target state="translated">&lt;a name=&quot;floatDWidth&quot;&gt;폭은&lt;/a&gt; 최소 문자 수는 출력에 기록 될 것입니다. 여기에는 모든 부호, 숫자, 그룹화 구분 기호, 소수 구분 기호, 지수 기호, 기수 표시기, 괄호 및 해당하는 경우 무한대 및 NaN을 나타내는 문자열이 포함됩니다. 변환 된 값의 길이가 너비보다 작 으면 총 문자 수가 너비와 같아 질 때까지 공백 ( &lt;code&gt;'\u0020'&lt;/code&gt; )으로 출력이 채워집니다 . 패딩은 기본적으로 왼쪽에 있습니다. 경우 &lt;code&gt;'-'&lt;/code&gt; 플래그가 지정되었을 경우, 우측으로 패딩됩니다. 너비를 지정하지 않으면 최소값이 없습니다.</target>
        </trans-unit>
        <trans-unit id="8a0cfd7eb208b940d0fafb3de1697cf536161c15" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;genWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. If the length of the converted value is less than the width then the output will be padded by &lt;code&gt;' '&lt;/code&gt; (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals the width. The padding is on the left by default. If the &lt;code&gt;'-'&lt;/code&gt; flag is given, then the padding will be on the right. If the width is not specified then there is no minimum.</source>
          <target state="translated">&lt;a name=&quot;genWidth&quot;&gt;폭은&lt;/a&gt; 최소 문자 수는 출력에 기록 될 것입니다. 변환 된 값의 길이가 너비보다 작 으면 총 문자 수가 너비와 같아 질 때까지 출력에 &lt;code&gt;' '&lt;/code&gt; ( &lt;code&gt;'\u0020'&lt;/code&gt; ) 이 채워집니다 . 패딩은 기본적으로 왼쪽에 있습니다. 경우 &lt;code&gt;'-'&lt;/code&gt; 플래그가 지정되고있는 경우, 우측으로 패딩됩니다. 너비를 지정하지 않으면 최소값이 없습니다.</target>
        </trans-unit>
        <trans-unit id="8fa9d205d462a4bfb3a26d4bc78316084693aa53" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;intWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. This includes any signs, digits, grouping separators, radix indicator, and parentheses. If the length of the converted value is less than the width then the output will be padded by spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals width. The padding is on the left by default. If &lt;code&gt;'-'&lt;/code&gt; flag is given then the padding will be on the right. If width is not specified then there is no minimum.</source>
          <target state="translated">&lt;a name=&quot;intWidth&quot;&gt;폭은&lt;/a&gt; 최소 문자 수는 출력에 기록 될 것입니다. 여기에는 모든 부호, 숫자, 그룹화 구분 기호, 기수 표시기 및 괄호가 포함됩니다. 변환 된 값의 길이가 너비보다 작 으면 총 문자 수가 너비와 같아 질 때까지 출력이 공백 ( &lt;code&gt;'\u0020'&lt;/code&gt; ) 으로 채워집니다 . 패딩은 기본적으로 왼쪽에 있습니다. 경우 &lt;code&gt;'-'&lt;/code&gt; 플래그가 지정되었을 경우, 우측으로 패딩됩니다. 너비를 지정하지 않으면 최소값이 없습니다.</target>
        </trans-unit>
        <trans-unit id="3e560a63da168303203b2b0de0e18b952b740b0d" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; argument specifies the access mode in which the file is to be opened. The permitted values and their meanings are:</source>
          <target state="translated">&lt;a name=&quot;mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt; 인수는 파일을 열 수 인 액세스 모드를 지정합니다. 허용되는 값과 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="145215dc44f9def357de3dab23a1f66f054c4d00" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#getClassAnnotation(java.lang.Class)&quot;&gt;&lt;code&gt;getClassAnnotation&lt;/code&gt;&lt;/a&gt;&lt;/b&gt; method returns a &lt;code&gt;String&lt;/code&gt; representing the codebase URL path that a remote party should use to download the definition for the specified class. The format of the returned string is a path of URLs separated by spaces. The codebase string returned depends on the defining class loader of the specified class:</source>
          <target state="translated">The &lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#getClassAnnotation(java.lang.Class)&quot;&gt; &lt;code&gt;getClassAnnotation&lt;/code&gt; &lt;/a&gt;&lt;/b&gt; method returns a &lt;code&gt;String&lt;/code&gt; representing the codebase URL path that a remote party should use to download the definition for the specified class. The format of the returned string is a path of URLs separated by spaces. The codebase string returned depends on the defining class loader of the specified class:</target>
        </trans-unit>
        <trans-unit id="66186e196d8e5241a2fcb4f702c74b0fc47b8afc" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#getClassLoader(java.lang.String)&quot;&gt;&lt;code&gt;getClassLoader&lt;/code&gt;&lt;/a&gt;&lt;/b&gt; method returns the codebase loader for the specified codebase URL path. If there is a security manager, then if the calling context does not have permission to connect to all of the URLs in the codebase URL path, a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown.</source>
          <target state="translated">The &lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#getClassLoader(java.lang.String)&quot;&gt; &lt;code&gt;getClassLoader&lt;/code&gt; &lt;/a&gt;&lt;/b&gt; method returns the codebase loader for the specified codebase URL path. If there is a security manager, then if the calling context does not have permission to connect to all of the URLs in the codebase URL path, a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown.</target>
        </trans-unit>
        <trans-unit id="30c066047ac9f5fbc1551a26a952f9784869ea3b" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt;&lt;/b&gt; method attempts to load the class with the specified name as follows:</source>
          <target state="translated">The &lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt;&lt;/b&gt; method attempts to load the class with the specified name as follows:</target>
        </trans-unit>
        <trans-unit id="8eea9c24656b997f30d79cc056342173a1531262" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#loadProxyClass(java.lang.String,java.lang.String%5B%5D,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;loadProxyClass&lt;/code&gt;&lt;/a&gt;&lt;/b&gt; method attempts to return a dynamic proxy class with the named interface as follows:</source>
          <target state="translated">The &lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#loadProxyClass(java.lang.String,java.lang.String%5B%5D,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;loadProxyClass&lt;/code&gt; &lt;/a&gt;&lt;/b&gt; method attempts to return a dynamic proxy class with the named interface as follows:</target>
        </trans-unit>
        <trans-unit id="d70755c800c2b720f9b2a4d9f93470f170f35163" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;all-at-once&lt;/b&gt; pattern: Get the doc from the current multidoc, and save the doc in a list. Get the next multidoc from the current multidoc, and repeat until there are no more. Then iterate over the list of saved docs. Get the print data representation object from the current doc. Get all the print data from the print data representation object. Go to the next doc in the list, and repeat until there are no more.</source>
          <target state="translated">는 &lt;b&gt;한꺼번에&lt;/b&gt; 패턴 : 현행의 multidoc로부터 doc를 취득 해리스트에 문서를 저장합니다. 현재 다중 문서에서 다음 다중 문서를 가져와 더 이상 없을 때까지 반복하십시오. 그런 다음 저장된 문서 목록을 반복합니다. 현재 문서에서 인쇄 데이터 표현 객체를 가져옵니다. 인쇄 데이터 표현 개체에서 모든 인쇄 데이터를 가져옵니다. 목록에서 다음 문서로 이동하여 더 이상 없을 때까지 반복하십시오.</target>
        </trans-unit>
        <trans-unit id="14f6267fa804e0d76a0763676c42485e1a9ce366" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;interleaved&lt;/b&gt; pattern: Get the doc from the current multidoc. Get the print data representation object from the current doc. Get all the print data from the print data representation object. Get the next multidoc from the current multidoc, and repeat until there are no more. (The code example above uses the interleaved pattern.)</source>
          <target state="translated">&lt;b&gt;인터리브&lt;/b&gt; 패턴 : 현행의 multidoc로부터 doc를 취득한다. 현재 문서에서 인쇄 데이터 표현 개체를 가져옵니다. 인쇄 데이터 표현 개체에서 모든 인쇄 데이터를 가져옵니다. 현재 다중 문서에서 다음 다중 문서를 가져와 더 이상 없을 때까지 반복하십시오. 위 코드 예제는 인터리브 패턴을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="80231fb01cbd9eea6cac573462b78797a00356f7" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;javax.management.builder.initial&lt;/b&gt; system property is consulted every time a new MBeanServer needs to be created, and the class pointed to by that property is loaded. If that class is different from that of the current MBeanServerBuilder, then a new MBeanServerBuilder is created. Otherwise, the MBeanServerFactory may create a new MBeanServerBuilder or reuse the current one.</source>
          <target state="translated">&lt;b&gt;javax.management.builder.initial의&lt;/b&gt; 시스템 프로퍼티는 새로운 MBeanServer를 작성해야 할 때마다 상담을하고, 해당 속성에 의해 지정된 클래스가로드됩니다. 해당 클래스가 현재 MBeanServerBuilder의 클래스와 다른 경우 새 MBeanServerBuilder가 작성됩니다. 그렇지 않으면, MBeanServerFactory는 새로운 MBeanServerBuilder를 작성하거나 현재 MBeanServerBuilder를 재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="133b14a15ab9a0721c864334bb5dcba8749ddb42" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-1935722590756516193L&lt;/code&gt;.</source>
          <target state="translated">이 클래스 의 &lt;b&gt;serialVersionUID&lt;/b&gt; 는 &lt;code&gt;-1935722590756516193L&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="622f4eec33d97ed2e8edad4e862e2ca5e8fc31cb" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-279985518429862552L&lt;/code&gt;.</source>
          <target state="translated">이 클래스 의 &lt;b&gt;serialVersionUID&lt;/b&gt; 는 &lt;code&gt;-279985518429862552L&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="59d67311624b4fef95e26ff51e0a9c6b2312c3c6" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-48350262537070138L&lt;/code&gt;.</source>
          <target state="translated">이 클래스 의 &lt;b&gt;serialVersionUID&lt;/b&gt; 는 &lt;code&gt;-48350262537070138L&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ab26041362e68fa2964d28d4745de355c08d29de" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-6292969195866300415L&lt;/code&gt;.</source>
          <target state="translated">이 클래스 의 &lt;b&gt;serialVersionUID&lt;/b&gt; 는 &lt;code&gt;-6292969195866300415L&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8f922ee070b5cc5ace54d4a0b9d3f07682e92469" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-6304063118040985512L&lt;/code&gt;.</source>
          <target state="translated">이 클래스 의 &lt;b&gt;serialVersionUID&lt;/b&gt; 는 &lt;code&gt;-6304063118040985512L&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="93f104d7169f5ba748ac71dc420f8f2b3490fac9" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-6871117877523310399L&lt;/code&gt;.</source>
          <target state="translated">이 클래스 의 &lt;b&gt;serialVersionUID&lt;/b&gt; 는 &lt;code&gt;-6871117877523310399L&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5c85e9f3228eea1cfaf1477d918140c111a3aa28" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-7445681389570207141L&lt;/code&gt;.</source>
          <target state="translated">이 클래스 의 &lt;b&gt;serialVersionUID&lt;/b&gt; 는 &lt;code&gt;-7445681389570207141L&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ffe47f8e6b033a46b369815e41c457527afba987" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-7516092053498031989L&lt;/code&gt;.</source>
          <target state="translated">이 클래스 의 &lt;b&gt;serialVersionUID&lt;/b&gt; 는 &lt;code&gt;-7516092053498031989L&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6e41f3c2dd2562ef1b180a361f4b55bf634bff02" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;1081892073854801359L&lt;/code&gt;.</source>
          <target state="translated">이 클래스 의 &lt;b&gt;serialVersionUID&lt;/b&gt; 는 &lt;code&gt;1081892073854801359L&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1ca4312b85a226720a17b2d5c731f010931d260d" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;1190536278266811217L&lt;/code&gt;.</source>
          <target state="translated">이 클래스 의 &lt;b&gt;serialVersionUID&lt;/b&gt; 는 &lt;code&gt;1190536278266811217L&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="072aec20483bdd007929c428e915e721c5ac25ae" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;2504952983494636987L&lt;/code&gt;.</source>
          <target state="translated">이 클래스 의 &lt;b&gt;serialVersionUID&lt;/b&gt; 는 &lt;code&gt;2504952983494636987L&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="836dfd3926b378790fd6604b2d4b322a25a61a21" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;2605900539589789736L&lt;/code&gt;.</source>
          <target state="translated">이 클래스 의 &lt;b&gt;serialVersionUID&lt;/b&gt; 는 &lt;code&gt;2605900539589789736L&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5105ab01988b46bcdb2ad68ccb972b352bbbf14f" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;3176664577895105181L&lt;/code&gt;.</source>
          <target state="translated">이 클래스 의 &lt;b&gt;serialVersionUID&lt;/b&gt; 는 &lt;code&gt;3176664577895105181L&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="63b961dbc4cf57cb42fe0df92a55437c8ee74ba1" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;3862947819818064362L&lt;/code&gt;.</source>
          <target state="translated">이 클래스 의 &lt;b&gt;serialVersionUID&lt;/b&gt; 는 &lt;code&gt;3862947819818064362L&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="194f95466a78a370966f9e904fcacd1a20dcddc8" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;4611072955724144607L&lt;/code&gt;.</source>
          <target state="translated">이 클래스 의 &lt;b&gt;serialVersionUID&lt;/b&gt; 는 &lt;code&gt;4611072955724144607L&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5f6ceca5a91a116ea11f104aaac88adefc6f654d" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;6181543027787327345L&lt;/code&gt;.</source>
          <target state="translated">이 클래스 의 &lt;b&gt;serialVersionUID&lt;/b&gt; 는 &lt;code&gt;6181543027787327345L&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5ab50df0639c6c2a445f4eb42deaf59f57cd4cea" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;6532732096650090465L&lt;/code&gt;.</source>
          <target state="translated">이 클래스 의 &lt;b&gt;serialVersionUID&lt;/b&gt; 는 &lt;code&gt;6532732096650090465L&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cf7d7ffcce3e481d53bebd9cf2aa7b4afe92bff9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt; TooManyListenersException &lt;/code&gt; Exception is used as part of the Java Event model to annotate and implement a unicast special case of a multicast Event Source.</source>
          <target state="translated">&lt;code&gt; TooManyListenersException &lt;/code&gt; 예외 주석 Java 이벤트 모델의 일부로서 사용되는 멀티 캐스트의 이벤트 소스를 유니 캐스트 특별한 경우를 구현한다.</target>
        </trans-unit>
        <trans-unit id="bb787bcc5a2d9591ebf6b45c48058c0e3ea10e61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt; java.security.acl &lt;/code&gt; package provides the interfaces to the ACL and related data structures (ACL entries, groups, permissions, etc.).</source>
          <target state="translated">The &lt;code&gt; java.security.acl &lt;/code&gt; package provides the interfaces to the ACL and related data structures (ACL entries, groups, permissions, etc.).</target>
        </trans-unit>
        <trans-unit id="f745d9767dfe7275935bfbda4ff48625b21cbb74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt; java.security.acl.Acl &lt;/code&gt; interface extends the &lt;code&gt; java.security.acl.Owner &lt;/code&gt; interface. The Owner interface is used to maintain a list of owners for each ACL. Only owners are allowed to modify an ACL. For example, only an owner can call the ACL's &lt;code&gt;addEntry&lt;/code&gt; method to add a new ACL entry to the ACL.</source>
          <target state="translated">The &lt;code&gt; java.security.acl.Acl &lt;/code&gt; interface extends the &lt;code&gt; java.security.acl.Owner &lt;/code&gt; interface. The Owner interface is used to maintain a list of owners for each ACL. Only owners are allowed to modify an ACL. For example, only an owner can call the ACL's &lt;code&gt;addEntry&lt;/code&gt; method to add a new ACL entry to the ACL.</target>
        </trans-unit>
        <trans-unit id="140c233f5b711ea49784f7bc7d8f708ede025961" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; mode can be used to reduce the number of I/O operations performed. Using &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; only requires updates to the file's content to be written to storage; using &lt;code&gt;&quot;rws&quot;&lt;/code&gt; requires updates to both the file's content and its metadata to be written, which generally requires at least one more low-level I/O operation.</source>
          <target state="translated">&lt;code&gt;&quot;rwd&quot;&lt;/code&gt; 모드 I의 수를 줄일 수 있습니다 / O 작업을 수행. &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; 를 사용 하려면 파일 내용에 대한 업데이트 만 저장 장치에 기록해야합니다. 사용 &lt;code&gt;&quot;rws&quot;&lt;/code&gt; 일반적으로 적어도 하나의 더 낮은 수준의 I / O 작업을 요구하는 기록 할 파일의 모두 컨텐츠와 메타 데이터에 대한 업데이트가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="5b1f93f3fa32832e03089b3885817033d0127da5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;rws&quot;&lt;/code&gt; and &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; modes work much like the &lt;a href=&quot;../nio/channels/filechannel#force(boolean)&quot;&gt;&lt;code&gt;force(boolean)&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../nio/channels/filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class, passing arguments of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;, respectively, except that they always apply to every I/O operation and are therefore often more efficient. If the file resides on a local storage device then when an invocation of a method of this class returns it is guaranteed that all changes made to the file by that invocation will have been written to that device. This is useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made.</source>
          <target state="translated">The &lt;code&gt;&quot;rws&quot;&lt;/code&gt; and &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; modes work much like the &lt;a href=&quot;../nio/channels/filechannel#force(boolean)&quot;&gt; &lt;code&gt;force(boolean)&lt;/code&gt; &lt;/a&gt; method of the &lt;a href=&quot;../nio/channels/filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt; class, passing arguments of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; , respectively, except that they always apply to every I/O operation and are therefore often more efficient. If the file resides on a local storage device then when an invocation of a method of this class returns it is guaranteed that all changes made to the file by that invocation will have been written to that device. This is useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made.</target>
        </trans-unit>
        <trans-unit id="0cfa334fcd18f47df7a744728a735885661d2393" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;rws&quot;&lt;/code&gt; and &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; modes work much like the &lt;a href=&quot;../nio/channels/filechannel#force-boolean-&quot;&gt;&lt;code&gt;force(boolean)&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../nio/channels/filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class, passing arguments of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;, respectively, except that they always apply to every I/O operation and are therefore often more efficient. If the file resides on a local storage device then when an invocation of a method of this class returns it is guaranteed that all changes made to the file by that invocation will have been written to that device. This is useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made.</source>
          <target state="translated">&lt;code&gt;&quot;rws&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; 모드는 많은처럼 작동 &lt;a href=&quot;../nio/channels/filechannel#force-boolean-&quot;&gt; &lt;code&gt;force(boolean)&lt;/code&gt; &lt;/a&gt; 의 방법 &lt;a href=&quot;../nio/channels/filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt; 의 인수를 전달, 클래스 &lt;code&gt;true&lt;/code&gt; 과 &lt;code&gt;false&lt;/code&gt; 그들은 항상 모든 I / O 작업에 적용하는 것을 제외하고, 각각 종종 있으므로 더 효율적입니다. 파일이 로컬 스토리지 장치에 상주하는 경우이 클래스의 메소드 호출이 리턴 될 때 해당 호출에 의해 파일에 대한 모든 변경 사항이 해당 장치에 기록되었음을 보장합니다. 시스템 충돌시 중요한 정보가 손실되지 않도록하는 데 유용합니다. 파일이 로컬 장치에 없으면 그러한 보증이 이루어지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="672103200add16df31276ac023df355f5dfbdb29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&lt;/code&gt; relation does not provide a total order on all double values: &lt;code&gt;-0.0d == 0.0d&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and a &lt;code&gt;Double.NaN&lt;/code&gt; value compares neither less than, greater than, nor equal to any value, even itself. This method uses the total order imposed by the method &lt;a href=&quot;../lang/double#compareTo(java.lang.Double)&quot;&gt;&lt;code&gt;Double.compareTo(java.lang.Double)&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;-0.0d&lt;/code&gt; is treated as less than value &lt;code&gt;0.0d&lt;/code&gt; and &lt;code&gt;Double.NaN&lt;/code&gt; is considered greater than any other value and all &lt;code&gt;Double.NaN&lt;/code&gt; values are considered equal.</source>
          <target state="translated">The &lt;code&gt;&amp;lt;&lt;/code&gt; relation does not provide a total order on all double values: &lt;code&gt;-0.0d == 0.0d&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and a &lt;code&gt;Double.NaN&lt;/code&gt; value compares neither less than, greater than, nor equal to any value, even itself. This method uses the total order imposed by the method &lt;a href=&quot;../lang/double#compareTo(java.lang.Double)&quot;&gt; &lt;code&gt;Double.compareTo(java.lang.Double)&lt;/code&gt; &lt;/a&gt;: &lt;code&gt;-0.0d&lt;/code&gt; is treated as less than value &lt;code&gt;0.0d&lt;/code&gt; and &lt;code&gt;Double.NaN&lt;/code&gt; is considered greater than any other value and all &lt;code&gt;Double.NaN&lt;/code&gt; values are considered equal.</target>
        </trans-unit>
        <trans-unit id="5aac2f6058d827131417bfcfef8dc2eb4bdbda46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&lt;/code&gt; relation does not provide a total order on all double values: &lt;code&gt;-0.0d == 0.0d&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and a &lt;code&gt;Double.NaN&lt;/code&gt; value compares neither less than, greater than, nor equal to any value, even itself. This method uses the total order imposed by the method &lt;a href=&quot;../lang/double#compareTo-java.lang.Double-&quot;&gt;&lt;code&gt;Double.compareTo(java.lang.Double)&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;-0.0d&lt;/code&gt; is treated as less than value &lt;code&gt;0.0d&lt;/code&gt; and &lt;code&gt;Double.NaN&lt;/code&gt; is considered greater than any other value and all &lt;code&gt;Double.NaN&lt;/code&gt; values are considered equal.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; 관계는 모든 두 값 전체 순서를 제공하지 않는다 : &lt;code&gt;-0.0d == 0.0d&lt;/code&gt; 인 &lt;code&gt;true&lt;/code&gt; 과 &lt;code&gt;Double.NaN&lt;/code&gt; 의 용 심지어 자체 값보다 큰,보다 적은 비교하지도 없으며 임의의 값과 동일. 이 메소드는 &lt;a href=&quot;../lang/double#compareTo-java.lang.Double-&quot;&gt; &lt;code&gt;Double.compareTo(java.lang.Double)&lt;/code&gt; &lt;/a&gt; 메소드에 의해 부과 된 총 순서를 사용합니다 . &lt;code&gt;-0.0d&lt;/code&gt; 는 0.0d 보다 작은 값으로 &lt;code&gt;0.0d&lt;/code&gt; 되고 &lt;code&gt;Double.NaN&lt;/code&gt; 은 다른 값보다 큰 것으로 간주되며 모든 &lt;code&gt;Double.NaN&lt;/code&gt; 값은 동등한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="9d5f206cf064cd395031f64090f39b8054760d79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&lt;/code&gt; relation does not provide a total order on all float values: &lt;code&gt;-0.0f == 0.0f&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and a &lt;code&gt;Float.NaN&lt;/code&gt; value compares neither less than, greater than, nor equal to any value, even itself. This method uses the total order imposed by the method &lt;a href=&quot;../lang/float#compareTo(java.lang.Float)&quot;&gt;&lt;code&gt;Float.compareTo(java.lang.Float)&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;-0.0f&lt;/code&gt; is treated as less than value &lt;code&gt;0.0f&lt;/code&gt; and &lt;code&gt;Float.NaN&lt;/code&gt; is considered greater than any other value and all &lt;code&gt;Float.NaN&lt;/code&gt; values are considered equal.</source>
          <target state="translated">The &lt;code&gt;&amp;lt;&lt;/code&gt; relation does not provide a total order on all float values: &lt;code&gt;-0.0f == 0.0f&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and a &lt;code&gt;Float.NaN&lt;/code&gt; value compares neither less than, greater than, nor equal to any value, even itself. This method uses the total order imposed by the method &lt;a href=&quot;../lang/float#compareTo(java.lang.Float)&quot;&gt; &lt;code&gt;Float.compareTo(java.lang.Float)&lt;/code&gt; &lt;/a&gt;: &lt;code&gt;-0.0f&lt;/code&gt; is treated as less than value &lt;code&gt;0.0f&lt;/code&gt; and &lt;code&gt;Float.NaN&lt;/code&gt; is considered greater than any other value and all &lt;code&gt;Float.NaN&lt;/code&gt; values are considered equal.</target>
        </trans-unit>
        <trans-unit id="6758eacaf6eafc7546dec5d6a98b3ed7630fdb8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&lt;/code&gt; relation does not provide a total order on all float values: &lt;code&gt;-0.0f == 0.0f&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and a &lt;code&gt;Float.NaN&lt;/code&gt; value compares neither less than, greater than, nor equal to any value, even itself. This method uses the total order imposed by the method &lt;a href=&quot;../lang/float#compareTo-java.lang.Float-&quot;&gt;&lt;code&gt;Float.compareTo(java.lang.Float)&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;-0.0f&lt;/code&gt; is treated as less than value &lt;code&gt;0.0f&lt;/code&gt; and &lt;code&gt;Float.NaN&lt;/code&gt; is considered greater than any other value and all &lt;code&gt;Float.NaN&lt;/code&gt; values are considered equal.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; 관계 모든 플로트 값 전체 순서를 제공하지 않는다 : &lt;code&gt;-0.0f == 0.0f&lt;/code&gt; 인 &lt;code&gt;true&lt;/code&gt; 과 &lt;code&gt;Float.NaN&lt;/code&gt; 도 자체 값보다 큰,보다 적은 비교하지도 없으며 임의의 값과 동일. 이 메소드는 &lt;a href=&quot;../lang/float#compareTo-java.lang.Float-&quot;&gt; &lt;code&gt;Float.compareTo(java.lang.Float)&lt;/code&gt; &lt;/a&gt; 메소드에 의해 부과 된 총 순서를 사용합니다 . &lt;code&gt;-0.0f&lt;/code&gt; 는 &lt;code&gt;0.0f&lt;/code&gt; 보다 작은 값으로 처리 되고 &lt;code&gt;Float.NaN&lt;/code&gt; 은 다른 값보다 큰 것으로 간주되며 모든 &lt;code&gt;Float.NaN&lt;/code&gt; 값은 동등한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="90432c8dfcfbf409f5a74fbfef303f20d153821a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;date&amp;gt;&lt;/code&gt; element will now contain the whole instant as formatted by the &lt;a href=&quot;../../../../java.base/java/time/format/datetimeformatter#ISO_INSTANT&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_INSTANT&lt;/code&gt;&lt;/a&gt; formatter.</source>
          <target state="translated">The &lt;code&gt;&amp;lt;date&amp;gt;&lt;/code&gt; element will now contain the whole instant as formatted by the &lt;a href=&quot;../../../../java.base/java/time/format/datetimeformatter#ISO_INSTANT&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_INSTANT&lt;/code&gt; &lt;/a&gt; formatter.</target>
        </trans-unit>
        <trans-unit id="19c7fcf4b0bd09ca778aaec398fff3533b85a624" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;widget&amp;gt;&lt;/code&gt; element can be selected with the following process:</source>
          <target state="translated">The &lt;code&gt;&amp;lt;widget&amp;gt;&lt;/code&gt; element can be selected with the following process:</target>
        </trans-unit>
        <trans-unit id="566defc53a29dd2c6f74968329502b0e504d1e15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'-'&lt;/code&gt; flag defined for &lt;a href=&quot;#dFlags&quot;&gt;General conversions&lt;/a&gt; applies. If any other flags are provided, then a &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">&lt;code&gt;'-'&lt;/code&gt; 에 대해 정의 플래그 &lt;a href=&quot;#dFlags&quot;&gt;일반 변환이&lt;/a&gt; 적용됩니다. 다른 플래그가 제공되면 &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ea48ab5aaeaf4194edab0eb91c4845bbde6ed392" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'-'&lt;/code&gt; flag defined for &lt;a href=&quot;#dFlags&quot;&gt;General conversions&lt;/a&gt; applies. If the &lt;code&gt;'#'&lt;/code&gt; flag is given, then a &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">&lt;code&gt;'-'&lt;/code&gt; 에 대해 정의 플래그 &lt;a href=&quot;#dFlags&quot;&gt;일반 변환이&lt;/a&gt; 적용됩니다. 경우 &lt;code&gt;'#'&lt;/code&gt; 플래그가 지정되고, 다음 &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; 가&lt;/a&gt; 슬로우됩니다.</target>
        </trans-unit>
        <trans-unit id="803c87810da3137c31c3b9569aa0cdd88a5236f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;**&lt;/code&gt; characters matches zero or more &lt;a href=&quot;../../lang/character&quot;&gt;&lt;code&gt;characters&lt;/code&gt;&lt;/a&gt; crossing directory boundaries.</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; 문자는 0 개 이상 일치하는 &lt;a href=&quot;../../lang/character&quot;&gt; &lt;code&gt;characters&lt;/code&gt; &lt;/a&gt; 디렉토리 경계를 교차합니다.</target>
        </trans-unit>
        <trans-unit id="43dd9a922339149a13fa5f34e0acbba85a8ef4ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;/code&gt; character matches zero or more &lt;a href=&quot;../../lang/character&quot;&gt;&lt;code&gt;characters&lt;/code&gt;&lt;/a&gt; of a &lt;a href=&quot;path#getName(int)&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; component without crossing directory boundaries.</source>
          <target state="translated">The &lt;code&gt;*&lt;/code&gt; character matches zero or more &lt;a href=&quot;../../lang/character&quot;&gt; &lt;code&gt;characters&lt;/code&gt; &lt;/a&gt; of a &lt;a href=&quot;path#getName(int)&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt; component without crossing directory boundaries.</target>
        </trans-unit>
        <trans-unit id="bdc9ec98d6c3e53fb7a51d01e995f914de002527" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;/code&gt; character matches zero or more &lt;a href=&quot;../../lang/character&quot;&gt;&lt;code&gt;characters&lt;/code&gt;&lt;/a&gt; of a &lt;a href=&quot;path#getName-int-&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; component without crossing directory boundaries.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; 문자는 0 개 이상의 일치 &lt;a href=&quot;../../lang/character&quot;&gt; &lt;code&gt;characters&lt;/code&gt; &lt;/a&gt; (A)의 &lt;a href=&quot;path#getName-int-&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt; 디렉토리 경계를 횡단하지 않고 구성 요소를.</target>
        </trans-unit>
        <trans-unit id="56b1e692364ff3d0377ffb97e33a6452576a382f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;AudioSystem&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class includes methods for determining the format of an audio file, obtaining an audio input stream from an audio file, and writing an audio file from an audio input stream.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;AudioSystem&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 클래스는 오디오 파일의 포맷을 결정하는 단계, 오디오 파일의 오디오 입력 스트림을 획득하고, 오디오 입력 스트림에서 오디오 파일을 기록하기위한 방법을 포함한다.</target>
        </trans-unit>
        <trans-unit id="bb56cab0d387af77b98e49727a7446f08b61aa9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;system#exit-int-&quot;&gt;&lt;code&gt;System.exit&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method is the conventional and convenient means of invoking this method.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system#exit-int-&quot;&gt;&lt;code&gt;System.exit&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 와의 메소드이 메소드를 호출하는 종래의 편리한 수단이다.</target>
        </trans-unit>
        <trans-unit id="b7e40741bd63e3e4d4e34f6ccfaaa185c2f108df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;ArbitraryText&lt;/em&gt;&lt;/code&gt; is any additional text that the connector server adds when creating the client id. At a minimum, it must be enough to distinguish this connection ID from the ID of any other connection currently opened by this connector server.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;ArbitraryText&lt;/em&gt;&lt;/code&gt; 는 클라이언트 ID를 만들 때 커넥터 서버가 추가되는 임의의 추가 텍스트입니다. 최소한이 연결 ID를이 커넥터 서버가 현재 열려있는 다른 연결의 ID와 구별하기에 충분해야합니다.</target>
        </trans-unit>
        <trans-unit id="57252451ad18df2276d94648faafb4c4918a4f22" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;ClientAddress&lt;/em&gt;&lt;/code&gt; is the address and port of the connecting client, if these can be determined, otherwise nothing. The &lt;code&gt;&lt;em&gt;HostAddress&lt;/em&gt;&lt;/code&gt; is the Internet address of the host that the client is connecting from, in numeric or DNS form. Numeric IPv6 addresses are enclosed in square brackets &lt;code&gt;[]&lt;/code&gt;. The &lt;code&gt;&lt;em&gt;HostPort&lt;/em&gt;&lt;/code&gt; is the decimal port number that the client is connecting from.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;ClientAddress&lt;/em&gt;&lt;/code&gt; 는 이러한 결정 할 수있는 경우 그렇지 않으면, 아무것도 접속 클라이언트의 주소 및 포트입니다. &lt;code&gt;&lt;em&gt;HostAddress&lt;/em&gt;&lt;/code&gt; 클라이언트가 숫자 또는 DNS 형태에서 연결되는 호스트의 인터넷 주소입니다. 숫자 IPv6 주소는 대괄호로 묶습니다 &lt;code&gt;[]&lt;/code&gt; . &lt;code&gt;&lt;em&gt;HostPort&lt;/em&gt;&lt;/code&gt; 는 클라이언트에서 연결되는 소수의 포트 번호입니다.</target>
        </trans-unit>
        <trans-unit id="82e61d9cf4e7e9707c96a7b88021832560e67b3d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;ClientId&lt;/em&gt;&lt;/code&gt; is the identity of the client entity, typically a string returned by &lt;a href=&quot;jmxprincipal#getName()&quot;&gt;&lt;code&gt;JMXPrincipal.getName()&lt;/code&gt;&lt;/a&gt;. This string must not contain spaces.</source>
          <target state="translated">The &lt;code&gt;&lt;em&gt;ClientId&lt;/em&gt;&lt;/code&gt; is the identity of the client entity, typically a string returned by &lt;a href=&quot;jmxprincipal#getName()&quot;&gt; &lt;code&gt;JMXPrincipal.getName()&lt;/code&gt; &lt;/a&gt;. This string must not contain spaces.</target>
        </trans-unit>
        <trans-unit id="531c08ac15a131c27029679adeb81cf5ad5bec7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;ClientId&lt;/em&gt;&lt;/code&gt; is the identity of the client entity, typically a string returned by &lt;a href=&quot;jmxprincipal#getName--&quot;&gt;&lt;code&gt;JMXPrincipal.getName()&lt;/code&gt;&lt;/a&gt;. This string must not contain spaces.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;ClientId&lt;/em&gt;&lt;/code&gt; 일반적으로 클라이언트 엔티티의 신원에 의해 반환 된 문자열 &lt;a href=&quot;jmxprincipal#getName--&quot;&gt; &lt;code&gt;JMXPrincipal.getName()&lt;/code&gt; &lt;/a&gt; . 이 문자열에는 공백이 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="e5ea1882020edd1476b0a71f1c9d73fd0f805d1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;Protocol&lt;/em&gt;&lt;/code&gt; is a protocol that would be recognized by &lt;a href=&quot;jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Protocol&lt;/em&gt;&lt;/code&gt; 에 의해 인식 될 수있는 프로토콜입니다 &lt;a href=&quot;jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; 에&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b824fdb77864355409db5ed994fa82e5b5e6ca93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; and &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; can be omitted. The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; cannot be supplied without a &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 생략 될 수있다. &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 없이 제공 할 수없는 &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a12722721e439b6dff600477a13341187efa0475" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; in a user-provided &lt;code&gt;serviceURL&lt;/code&gt; is optional. If present, it is copied into the generated &lt;code&gt;JMXServiceURL&lt;/code&gt; but otherwise ignored. If absent, the generated &lt;code&gt;JXMServiceURL&lt;/code&gt; will have the local host name.</source>
          <target state="translated">사용자 제공 &lt;code&gt;serviceURL&lt;/code&gt; 의 &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 는 선택 사항입니다. 존재하는 경우 생성 된 &lt;code&gt;JMXServiceURL&lt;/code&gt; 에 복사 되지만 그렇지 않으면 무시됩니다. 없는 경우 생성 된 &lt;code&gt;JXMServiceURL&lt;/code&gt; 은 로컬 호스트 이름을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="bfa23af48503c6623afb1ad1711fefdb1632d2c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; is a host name, an IPv4 numeric host address, or an IPv6 numeric address enclosed in square brackets.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 호스트 명, IPv4 수치 호스트 주소, IPv6 수치 주소입니다.</target>
        </trans-unit>
        <trans-unit id="8460511f507f18975285f87a75a8e4aef97a17f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; part of the returned string is the value returned by &lt;a href=&quot;#getHost()&quot;&gt;&lt;code&gt;getHost()&lt;/code&gt;&lt;/a&gt;. If that value specifies a numeric IPv6 address, it is surrounded by square brackets &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; part of the returned string is the value returned by &lt;a href=&quot;#getHost()&quot;&gt; &lt;code&gt;getHost()&lt;/code&gt; &lt;/a&gt;. If that value specifies a numeric IPv6 address, it is surrounded by square brackets &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b0d7cc7b25ad83d3037b4dc212df848a1f89cd0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; part of the returned string is the value returned by &lt;a href=&quot;jmxserviceurl#getHost--&quot;&gt;&lt;code&gt;getHost()&lt;/code&gt;&lt;/a&gt;. If that value specifies a numeric IPv6 address, it is surrounded by square brackets &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">리턴 된 문자열 의 &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 부분은 &lt;a href=&quot;jmxserviceurl#getHost--&quot;&gt; &lt;code&gt;getHost()&lt;/code&gt; &lt;/a&gt; 리턴 한 값 입니다. 해당 값이 숫자 IPv6 주소를 지정하면 대괄호 &lt;code&gt;[]&lt;/code&gt; 로 묶습니다 .</target>
        </trans-unit>
        <trans-unit id="55c0575a0a5f3a8a03451fbe7153260d3ab2702e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; in a user-provided &lt;code&gt;serviceURL&lt;/code&gt; is also optional. If present, it is also copied into the generated &lt;code&gt;JMXServiceURL&lt;/code&gt;; otherwise, the generated &lt;code&gt;JMXServiceURL&lt;/code&gt; has no port. For an &lt;code&gt;serviceURL&lt;/code&gt; using the &lt;code&gt;rmi&lt;/code&gt; protocol, the &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt;, if present, indicates what port the generated remote object should be exported on. It has no other effect.</source>
          <target state="translated">사용자 제공 &lt;code&gt;serviceURL&lt;/code&gt; 의 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 도 선택 사항입니다. 존재하는 경우 생성 된 &lt;code&gt;JMXServiceURL&lt;/code&gt; 에도 복사됩니다 . 그렇지 않으면 생성 된 &lt;code&gt;JMXServiceURL&lt;/code&gt; 에 포트가 없습니다. 내용 &lt;code&gt;serviceURL&lt;/code&gt; 은 USING &lt;code&gt;rmi&lt;/code&gt; 프로토콜의 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 있을 경우, 상기 생성 된 원격 개체 export되는 포트를 나타냅니다. 다른 효과는 없습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f0c8f3bfcebe38f9f7e404fcfe049e036b34bcb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; is a decimal port number. 0 means a default or anonymous port, depending on the protocol.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 소수의 포트 번호입니다. 0은 프로토콜에 따라 기본 또는 익명 포트를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="e64b24c6106b58d8f17aec775ecdc7be255a7b9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; part of the returned string is the value returned by &lt;a href=&quot;#getPort()&quot;&gt;&lt;code&gt;getPort()&lt;/code&gt;&lt;/a&gt; in its shortest decimal form. If the value is zero, it is omitted.</source>
          <target state="translated">The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; part of the returned string is the value returned by &lt;a href=&quot;#getPort()&quot;&gt; &lt;code&gt;getPort()&lt;/code&gt; &lt;/a&gt; in its shortest decimal form. If the value is zero, it is omitted.</target>
        </trans-unit>
        <trans-unit id="aed5089fcc06d0b24df1a0c3d314b9e78f48e5cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; part of the returned string is the value returned by &lt;a href=&quot;jmxserviceurl#getPort--&quot;&gt;&lt;code&gt;getPort()&lt;/code&gt;&lt;/a&gt; in its shortest decimal form. If the value is zero, it is omitted.</source>
          <target state="translated">리턴 된 문자열 의 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 부분은 &lt;a href=&quot;jmxserviceurl#getPort--&quot;&gt; &lt;code&gt;getPort()&lt;/code&gt; &lt;/a&gt; 에 의해 가장 짧은 10 진수 형식으로 리턴 된 값 입니다. 값이 0이면 생략됩니다.</target>
        </trans-unit>
        <trans-unit id="44dcc40e6319d73e55e0506b2a02c88d015d6e90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;protocol-version&lt;/em&gt;&lt;/code&gt; is a series of two or more non-negative integers separated by periods (&lt;code&gt;.&lt;/code&gt;). An implementation of the version described by this documentation must use the string &lt;code&gt;1.0&lt;/code&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;protocol-version&lt;/em&gt;&lt;/code&gt; 으로 구분 둘 이상의 음이 아닌 정수의 시리즈 ( &lt;code&gt;.&lt;/code&gt; ). 이 문서에서 설명하는 버전을 구현하려면 여기 에서 문자열 &lt;code&gt;1.0&lt;/code&gt; 을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="51e5d21d788500cd8258dd52116920bb8d78aa5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;url-path&lt;/em&gt;&lt;/code&gt;, if any, begins with a slash (&lt;code&gt;/&lt;/code&gt;) or a semicolon (&lt;code&gt;;&lt;/code&gt;) and continues to the end of the address. It can contain attributes using the semicolon syntax specified in RFC 2609. Those attributes are not parsed by this class and incorrect attribute syntax is not detected.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;url-path&lt;/em&gt;&lt;/code&gt; 있는 경우, 슬래시 (시작 &lt;code&gt;/&lt;/code&gt; () 또는 세미콜론 &lt;code&gt;;&lt;/code&gt; )과 어드레스의 끝까지 계속된다. RFC 2609에 지정된 세미콜론 구문을 사용하는 속성을 포함 할 수 있습니다. 이러한 속성은이 클래스에서 구문 분석되지 않으며 잘못된 속성 구문이 감지되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0cfefc52ce748f9328afa9b5dc72829a45465fa5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;?&lt;/code&gt; character matches exactly one character of a name component.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; 문자는 이름 구성 요소의 한 문자와 정확히 일치합니다.</target>
        </trans-unit>
        <trans-unit id="0efee80247743a6ac1ac9ba48df946cfc93c6410" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@Deprecated&lt;/code&gt; annotation should always be present if the &lt;code&gt;@deprecated&lt;/code&gt; javadoc tag is present, and vice-versa.</source>
          <target state="translated">The &lt;code&gt;@Deprecated&lt;/code&gt; annotation should always be present if the &lt;code&gt;@deprecated&lt;/code&gt; javadoc tag is present, and vice-versa.</target>
        </trans-unit>
        <trans-unit id="86179c7113b7ca3e72607b93d89e62c19020820b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessControlContext&lt;/code&gt; may contain many Subjects (from nested &lt;code&gt;doAs&lt;/code&gt; calls). In this situation, the most recent &lt;code&gt;Subject&lt;/code&gt; associated with the &lt;code&gt;AccessControlContext&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;AccessControlContext&lt;/code&gt; (중첩에서 많은 주제를 포함 할 수 있습니다 &lt;code&gt;doAs&lt;/code&gt; 와의 통화). 이 상황에서는 &lt;code&gt;AccessControlContext&lt;/code&gt; 와 연관된 가장 최근의 &lt;code&gt;Subject&lt;/code&gt; 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="3908e3e09d64afbffab80b454ad2cbe628a9babd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleAction&lt;/code&gt; interface should be supported by any object that can perform one or more actions.</source>
          <target state="translated">The &lt;code&gt;AccessibleAction&lt;/code&gt; interface should be supported by any object that can perform one or more actions.</target>
        </trans-unit>
        <trans-unit id="c473a7714248ebd12a4093fbc003adaa42921796" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleAction&lt;/code&gt; interface should be supported by any object that can perform one or more actions. This interface provides the standard mechanism for an assistive technology to determine what those actions are as well as tell the object to perform them. Any object that can be manipulated should support this interface. Applications can determine if an object supports the &lt;code&gt;AccessibleAction&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleAction()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleAction()&lt;/code&gt;&lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">The &lt;code&gt;AccessibleAction&lt;/code&gt; interface should be supported by any object that can perform one or more actions. This interface provides the standard mechanism for an assistive technology to determine what those actions are as well as tell the object to perform them. Any object that can be manipulated should support this interface. Applications can determine if an object supports the &lt;code&gt;AccessibleAction&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; &lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleAction()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleAction()&lt;/code&gt; &lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt; , the object supports this interface.</target>
        </trans-unit>
        <trans-unit id="f3d39ae4fbd7cfa1adcd02d16d8f7fb028c832c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleComponent&lt;/code&gt; interface should be supported by any object that is rendered on the screen.</source>
          <target state="translated">The &lt;code&gt;AccessibleComponent&lt;/code&gt; interface should be supported by any object that is rendered on the screen.</target>
        </trans-unit>
        <trans-unit id="aa3a9d732e80037f70ac2cb1c8411f49537df6c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleComponent&lt;/code&gt; interface should be supported by any object that is rendered on the screen. This interface provides the standard mechanism for an assistive technology to determine and set the graphical representation of an object. Applications can determine if an object supports the &lt;code&gt;AccessibleComponent&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleComponent()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleComponent()&lt;/code&gt;&lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">The &lt;code&gt;AccessibleComponent&lt;/code&gt; interface should be supported by any object that is rendered on the screen. This interface provides the standard mechanism for an assistive technology to determine and set the graphical representation of an object. Applications can determine if an object supports the &lt;code&gt;AccessibleComponent&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleComponent()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleComponent()&lt;/code&gt; &lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt; , the object supports this interface.</target>
        </trans-unit>
        <trans-unit id="f43849f68f67a0ecc780e13f5479f663a6daecd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleContext&lt;/code&gt; associated with this &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;AccessibleContext&lt;/code&gt; associated with this &lt;code&gt;Component&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cbf47d5695815d5e8118b745ccce459eece15483" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleContext&lt;/code&gt; for the &lt;code&gt;ProgressMonitor&lt;/code&gt;</source>
          <target state="translated">The &lt;code&gt;AccessibleContext&lt;/code&gt; for the &lt;code&gt;ProgressMonitor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2191b09f1d269f0606ec7d698a355f8c1f8b44f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleEditableText&lt;/code&gt; interface should be implemented by all classes that present editable textual information on the display.</source>
          <target state="translated">The &lt;code&gt;AccessibleEditableText&lt;/code&gt; interface should be implemented by all classes that present editable textual information on the display.</target>
        </trans-unit>
        <trans-unit id="1873fadd8e5a958c96e6454d288335bff6968316" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleEditableText&lt;/code&gt; interface should be implemented by all classes that present editable textual information on the display. Along with the &lt;code&gt;AccessibleText&lt;/code&gt; interface, this interface provides the standard mechanism for an assistive technology to access that text via its content, attributes, and spatial location. Applications can determine if an object supports the &lt;code&gt;AccessibleEditableText&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleEditableText()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleEditableText()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;AccessibleContext&lt;/code&gt;. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">The &lt;code&gt;AccessibleEditableText&lt;/code&gt; interface should be implemented by all classes that present editable textual information on the display. Along with the &lt;code&gt;AccessibleText&lt;/code&gt; interface, this interface provides the standard mechanism for an assistive technology to access that text via its content, attributes, and spatial location. Applications can determine if an object supports the &lt;code&gt;AccessibleEditableText&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; &lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleEditableText()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleEditableText()&lt;/code&gt; &lt;/a&gt; method of &lt;code&gt;AccessibleContext&lt;/code&gt; . If the return value is not &lt;code&gt;null&lt;/code&gt; , the object supports this interface.</target>
        </trans-unit>
        <trans-unit id="a8576c5c876c10480e7110724150efa8be9bdb83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; interface should be supported by any object that is rendered on the screen.</source>
          <target state="translated">The &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; interface should be supported by any object that is rendered on the screen.</target>
        </trans-unit>
        <trans-unit id="3247400137ced701b45d95c578a02703afb594a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; interface should be supported by any object that is rendered on the screen. This interface provides the standard mechanism for an assistive technology to determine the extended graphical representation of an object. Applications can determine if an object supports the &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleComponent()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleComponent()&lt;/code&gt;&lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt; and the type of the return value is &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">The &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; interface should be supported by any object that is rendered on the screen. This interface provides the standard mechanism for an assistive technology to determine the extended graphical representation of an object. Applications can determine if an object supports the &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleComponent()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleComponent()&lt;/code&gt; &lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt; and the type of the return value is &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; , the object supports this interface.</target>
        </trans-unit>
        <trans-unit id="35a7324acfe2b7d3d5addac091a782cc34ba08f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleExtendedText&lt;/code&gt; interface contains additional methods not provided by the &lt;code&gt;AccessibleText&lt;/code&gt; interface.</source>
          <target state="translated">The &lt;code&gt;AccessibleExtendedText&lt;/code&gt; interface contains additional methods not provided by the &lt;code&gt;AccessibleText&lt;/code&gt; interface.</target>
        </trans-unit>
        <trans-unit id="8e588342be007ce914be3da0e97873d18b180331" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleHypertext&lt;/code&gt; class is the base class for all classes that present hypertext information on the display.</source>
          <target state="translated">The &lt;code&gt;AccessibleHypertext&lt;/code&gt; class is the base class for all classes that present hypertext information on the display.</target>
        </trans-unit>
        <trans-unit id="7db43bacb2b362886b107ffd5c3074aee0f970bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleHypertext&lt;/code&gt; class is the base class for all classes that present hypertext information on the display. This class provides the standard mechanism for an assistive technology to access that text via its content, attributes, and spatial location. It also provides standard mechanisms for manipulating hyperlinks. Applications can determine if an object supports the &lt;code&gt;AccessibleHypertext&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleText()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleText()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;AccessibleContext&lt;/code&gt;. If the return value is a class which extends &lt;code&gt;AccessibleHypertext&lt;/code&gt;, then that object supports &lt;code&gt;AccessibleHypertext&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;AccessibleHypertext&lt;/code&gt; class is the base class for all classes that present hypertext information on the display. This class provides the standard mechanism for an assistive technology to access that text via its content, attributes, and spatial location. It also provides standard mechanisms for manipulating hyperlinks. Applications can determine if an object supports the &lt;code&gt;AccessibleHypertext&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; &lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleText()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleText()&lt;/code&gt; &lt;/a&gt; method of &lt;code&gt;AccessibleContext&lt;/code&gt; . If the return value is a class which extends &lt;code&gt;AccessibleHypertext&lt;/code&gt; , then that object supports &lt;code&gt;AccessibleHypertext&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="faf8435ce3a9fcd516db942cb8a2d354e93f118a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleIcon&lt;/code&gt; interface should be supported by any object that has an associated icon (e.g., buttons).</source>
          <target state="translated">The &lt;code&gt;AccessibleIcon&lt;/code&gt; interface should be supported by any object that has an associated icon (e.g., buttons).</target>
        </trans-unit>
        <trans-unit id="d3ba10fe38f58c559b6ec91711ac3b7362b581fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleIcon&lt;/code&gt; interface should be supported by any object that has an associated icon (e.g., buttons). This interface provides the standard mechanism for an assistive technology to get descriptive information about icons. Applications can determine if an object supports the &lt;code&gt;AccessibleIcon&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleIcon()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleIcon()&lt;/code&gt;&lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">The &lt;code&gt;AccessibleIcon&lt;/code&gt; interface should be supported by any object that has an associated icon (e.g., buttons). This interface provides the standard mechanism for an assistive technology to get descriptive information about icons. Applications can determine if an object supports the &lt;code&gt;AccessibleIcon&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; &lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleIcon()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleIcon()&lt;/code&gt; &lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt; , the object supports this interface.</target>
        </trans-unit>
        <trans-unit id="73130429098fda9c943a97d824e4e0d826f98015" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleKeyBinding&lt;/code&gt; interface should be supported by any object that has a keyboard bindings such as a keyboard mnemonic and/or keyboard shortcut which can be used to select the object.</source>
          <target state="translated">The &lt;code&gt;AccessibleKeyBinding&lt;/code&gt; interface should be supported by any object that has a keyboard bindings such as a keyboard mnemonic and/or keyboard shortcut which can be used to select the object.</target>
        </trans-unit>
        <trans-unit id="1e6d6cb06b5b9c263d4d45c3948efc266f8cb213" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleKeyBinding&lt;/code&gt; interface should be supported by any object that has a keyboard bindings such as a keyboard mnemonic and/or keyboard shortcut which can be used to select the object. This interface provides the standard mechanism for an assistive technology to determine the key bindings which exist for this object. Any object that has such key bindings should support this interface.</source>
          <target state="translated">The &lt;code&gt;AccessibleKeyBinding&lt;/code&gt; interface should be supported by any object that has a keyboard bindings such as a keyboard mnemonic and/or keyboard shortcut which can be used to select the object. This interface provides the standard mechanism for an assistive technology to determine the key bindings which exist for this object. Any object that has such key bindings should support this interface.</target>
        </trans-unit>
        <trans-unit id="b327de9d3fb9e0bf710b7abf2a2d35bcc20dd438" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleObject&lt;/code&gt; class is the base class for &lt;code&gt;Field&lt;/code&gt;, &lt;code&gt;Method&lt;/code&gt;, and &lt;code&gt;Constructor&lt;/code&gt; objects (known as &lt;em&gt;reflected objects&lt;/em&gt;).</source>
          <target state="translated">The &lt;code&gt;AccessibleObject&lt;/code&gt; class is the base class for &lt;code&gt;Field&lt;/code&gt; , &lt;code&gt;Method&lt;/code&gt; , and &lt;code&gt;Constructor&lt;/code&gt; objects (known as &lt;em&gt;reflected objects&lt;/em&gt;).</target>
        </trans-unit>
        <trans-unit id="504d93f898c7589525ac3642c5d6ef807175bb59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleObject&lt;/code&gt; class is the base class for &lt;code&gt;Field&lt;/code&gt;, &lt;code&gt;Method&lt;/code&gt;, and &lt;code&gt;Constructor&lt;/code&gt; objects (known as &lt;em&gt;reflected objects&lt;/em&gt;). It provides the ability to flag a reflected object as suppressing checks for Java language access control when it is used. This permits sophisticated applications with sufficient privilege, such as Java Object Serialization or other persistence mechanisms, to manipulate objects in a manner that would normally be prohibited.</source>
          <target state="translated">The &lt;code&gt;AccessibleObject&lt;/code&gt; class is the base class for &lt;code&gt;Field&lt;/code&gt; , &lt;code&gt;Method&lt;/code&gt; , and &lt;code&gt;Constructor&lt;/code&gt; objects (known as &lt;em&gt;reflected objects&lt;/em&gt;). It provides the ability to flag a reflected object as suppressing checks for Java language access control when it is used. This permits sophisticated applications with sufficient privilege, such as Java Object Serialization or other persistence mechanisms, to manipulate objects in a manner that would normally be prohibited.</target>
        </trans-unit>
        <trans-unit id="bebd10b8cada2d236bcee7f52d58570942a03df2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleStreamable&lt;/code&gt; interface should be implemented by the &lt;code&gt;AccessibleContext&lt;/code&gt; of any component that presents the raw stream behind a component on the display screen.</source>
          <target state="translated">The &lt;code&gt;AccessibleStreamable&lt;/code&gt; interface should be implemented by the &lt;code&gt;AccessibleContext&lt;/code&gt; of any component that presents the raw stream behind a component on the display screen.</target>
        </trans-unit>
        <trans-unit id="166dee8c08c12ffb7eee6d8d4a6709455e6484ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleStreamable&lt;/code&gt; interface should be implemented by the &lt;code&gt;AccessibleContext&lt;/code&gt; of any component that presents the raw stream behind a component on the display screen. Examples of such components are HTML, bitmap images and MathML. An object that implements &lt;code&gt;AccessibleStreamable&lt;/code&gt; provides two things: a list of MIME types supported by the object and a streaming interface for each MIME type to get the data.</source>
          <target state="translated">The &lt;code&gt;AccessibleStreamable&lt;/code&gt; interface should be implemented by the &lt;code&gt;AccessibleContext&lt;/code&gt; of any component that presents the raw stream behind a component on the display screen. Examples of such components are HTML, bitmap images and MathML. An object that implements &lt;code&gt;AccessibleStreamable&lt;/code&gt; provides two things: a list of MIME types supported by the object and a streaming interface for each MIME type to get the data.</target>
        </trans-unit>
        <trans-unit id="3c3cb31a1c741ff7a9b4761f3d8c38ef5c44d952" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleTableModelChange&lt;/code&gt; interface describes a change to the table model.</source>
          <target state="translated">The &lt;code&gt;AccessibleTableModelChange&lt;/code&gt; interface describes a change to the table model.</target>
        </trans-unit>
        <trans-unit id="4585d50b1f9770d23e6e5f1ce54330b4090f0b78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleTableModelChange&lt;/code&gt; interface describes a change to the table model. The attributes of the model change can be obtained by the following methods:</source>
          <target state="translated">The &lt;code&gt;AccessibleTableModelChange&lt;/code&gt; interface describes a change to the table model. The attributes of the model change can be obtained by the following methods:</target>
        </trans-unit>
        <trans-unit id="d1e504bfff18e5d05a112b9b15cb1a5fcbd06f58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleText&lt;/code&gt; interface should be implemented by all classes that present textual information on the display.</source>
          <target state="translated">The &lt;code&gt;AccessibleText&lt;/code&gt; interface should be implemented by all classes that present textual information on the display.</target>
        </trans-unit>
        <trans-unit id="bb6a238837c9f7f9a564586ec69e06cb5d566679" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleText&lt;/code&gt; interface should be implemented by all classes that present textual information on the display. This interface provides the standard mechanism for an assistive technology to access that text via its content, attributes, and spatial location. Applications can determine if an object supports the &lt;code&gt;AccessibleText&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleText()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleText()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;AccessibleContext&lt;/code&gt;. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">The &lt;code&gt;AccessibleText&lt;/code&gt; interface should be implemented by all classes that present textual information on the display. This interface provides the standard mechanism for an assistive technology to access that text via its content, attributes, and spatial location. Applications can determine if an object supports the &lt;code&gt;AccessibleText&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; &lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleText()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleText()&lt;/code&gt; &lt;/a&gt; method of &lt;code&gt;AccessibleContext&lt;/code&gt; . If the return value is not &lt;code&gt;null&lt;/code&gt; , the object supports this interface.</target>
        </trans-unit>
        <trans-unit id="056efc481e10c239791f1854c67f61a2f4664863" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleValue&lt;/code&gt; interface should be supported by any object that supports a numerical value (e.g., a scroll bar).</source>
          <target state="translated">The &lt;code&gt;AccessibleValue&lt;/code&gt; interface should be supported by any object that supports a numerical value (e.g., a scroll bar).</target>
        </trans-unit>
        <trans-unit id="c8b086610a18ed0e538e46c7f2a7634e69c1682c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleValue&lt;/code&gt; interface should be supported by any object that supports a numerical value (e.g., a scroll bar). This interface provides the standard mechanism for an assistive technology to determine and set the numerical value as well as get the minimum and maximum values. Applications can determine if an object supports the &lt;code&gt;AccessibleValue&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleValue()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleValue()&lt;/code&gt;&lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">The &lt;code&gt;AccessibleValue&lt;/code&gt; interface should be supported by any object that supports a numerical value (e.g., a scroll bar). This interface provides the standard mechanism for an assistive technology to determine and set the numerical value as well as get the minimum and maximum values. Applications can determine if an object supports the &lt;code&gt;AccessibleValue&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; &lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleValue()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleValue()&lt;/code&gt; &lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt; , the object supports this interface.</target>
        </trans-unit>
        <trans-unit id="44791f8e57ff8bfd891a67fc88014f58af70954a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Action&lt;/code&gt; interface provides a useful extension to the &lt;code&gt;ActionListener&lt;/code&gt; interface in cases where the same functionality may be accessed by several controls.</source>
          <target state="translated">The &lt;code&gt;Action&lt;/code&gt; interface provides a useful extension to the &lt;code&gt;ActionListener&lt;/code&gt; interface in cases where the same functionality may be accessed by several controls.</target>
        </trans-unit>
        <trans-unit id="34edfc98f1eaec6790f4628038524e8aca37a7f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Action&lt;/code&gt; is added as an &lt;code&gt;ActionListener&lt;/code&gt; to the component.</source>
          <target state="translated">The &lt;code&gt;Action&lt;/code&gt; is added as an &lt;code&gt;ActionListener&lt;/code&gt; to the component.</target>
        </trans-unit>
        <trans-unit id="30201ddb916bcc958215e7053ec1089b39082cd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActionListener&lt;/code&gt; will receive an &lt;code&gt;ActionEvent&lt;/code&gt; when a selection has been made. If the combo box is editable, then an &lt;code&gt;ActionEvent&lt;/code&gt; will be fired when editing has stopped.</source>
          <target state="translated">The &lt;code&gt;ActionListener&lt;/code&gt; will receive an &lt;code&gt;ActionEvent&lt;/code&gt; when a selection has been made. If the combo box is editable, then an &lt;code&gt;ActionEvent&lt;/code&gt; will be fired when editing has stopped.</target>
        </trans-unit>
        <trans-unit id="ef1938064c7852b953eb1b5cbb0d73a9e2febdc0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Activatable&lt;/code&gt; class provides support for remote objects that require persistent access over time and that can be activated by the system.</source>
          <target state="translated">The &lt;code&gt;Activatable&lt;/code&gt; class provides support for remote objects that require persistent access over time and that can be activated by the system.</target>
        </trans-unit>
        <trans-unit id="9911c89b0b276dc0f0fa74a32a5ec5f1ac847b7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActivationGroupID&lt;/code&gt; is returned from the call to &lt;code&gt;ActivationSystem.registerGroup&lt;/code&gt; and is used to identify the group within the activation system. This group id is passed as one of the arguments to the activation group's special constructor when an activation group is created/recreated.</source>
          <target state="translated">The &lt;code&gt;ActivationGroupID&lt;/code&gt; is returned from the call to &lt;code&gt;ActivationSystem.registerGroup&lt;/code&gt; and is used to identify the group within the activation system. This group id is passed as one of the arguments to the activation group's special constructor when an activation group is created/recreated.</target>
        </trans-unit>
        <trans-unit id="af4be72177e080360c18c9e2ed801cc0e3bbac04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActivationSystem&lt;/code&gt; provides a means for registering groups and &quot;activatable&quot; objects to be activated within those groups.</source>
          <target state="translated">The &lt;code&gt;ActivationSystem&lt;/code&gt; provides a means for registering groups and &quot;activatable&quot; objects to be activated within those groups.</target>
        </trans-unit>
        <trans-unit id="4987e1b2fb6cd9753ec845534af1b665b5ec3274" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActivationSystem&lt;/code&gt; provides a means for registering groups and &quot;activatable&quot; objects to be activated within those groups. The &lt;code&gt;ActivationSystem&lt;/code&gt; works closely with the &lt;code&gt;Activator&lt;/code&gt;, which activates objects registered via the &lt;code&gt;ActivationSystem&lt;/code&gt;, and the &lt;code&gt;ActivationMonitor&lt;/code&gt;, which obtains information about active and inactive objects, and inactive groups.</source>
          <target state="translated">The &lt;code&gt;ActivationSystem&lt;/code&gt; provides a means for registering groups and &quot;activatable&quot; objects to be activated within those groups. The &lt;code&gt;ActivationSystem&lt;/code&gt; works closely with the &lt;code&gt;Activator&lt;/code&gt; , which activates objects registered via the &lt;code&gt;ActivationSystem&lt;/code&gt; , and the &lt;code&gt;ActivationMonitor&lt;/code&gt; , which obtains information about active and inactive objects, and inactive groups.</target>
        </trans-unit>
        <trans-unit id="a2842a28fc68889440f54df9e9e48b8b8bfc10a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Activator&lt;/code&gt; facilitates remote object activation.</source>
          <target state="translated">The &lt;code&gt;Activator&lt;/code&gt; facilitates remote object activation.</target>
        </trans-unit>
        <trans-unit id="bac18c05f9f0c7333ef5e5514fde39347f479fbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Activator&lt;/code&gt; facilitates remote object activation. A &quot;faulting&quot; remote reference calls the activator's &lt;code&gt;activate&lt;/code&gt; method to obtain a &quot;live&quot; reference to a &quot;activatable&quot; remote object. Upon receiving a request for activation, the activator looks up the activation descriptor for the activation identifier, &lt;code&gt;id&lt;/code&gt;, determines the group in which the object should be activated initiates object re-creation via the group's &lt;code&gt;ActivationInstantiator&lt;/code&gt; (via a call to the &lt;code&gt;newInstance&lt;/code&gt; method). The activator initiates the execution of activation groups as necessary. For example, if an activation group for a specific group identifier is not already executing, the activator initiates the execution of a VM for the group.</source>
          <target state="translated">The &lt;code&gt;Activator&lt;/code&gt; facilitates remote object activation. A &quot;faulting&quot; remote reference calls the activator's &lt;code&gt;activate&lt;/code&gt; method to obtain a &quot;live&quot; reference to a &quot;activatable&quot; remote object. Upon receiving a request for activation, the activator looks up the activation descriptor for the activation identifier, &lt;code&gt;id&lt;/code&gt; , determines the group in which the object should be activated initiates object re-creation via the group's &lt;code&gt;ActivationInstantiator&lt;/code&gt; (via a call to the &lt;code&gt;newInstance&lt;/code&gt; method). The activator initiates the execution of activation groups as necessary. For example, if an activation group for a specific group identifier is not already executing, the activator initiates the execution of a VM for the group.</target>
        </trans-unit>
        <trans-unit id="d12dfcf933ffbb5c2ce81bf2caa66f1ab228fa02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Activator&lt;/code&gt; works closely with &lt;code&gt;ActivationSystem&lt;/code&gt;, which provides a means for registering groups and objects within those groups, and &lt;code&gt;ActivationMonitor&lt;/code&gt;, which receives information about active and inactive objects and inactive groups.</source>
          <target state="translated">The &lt;code&gt;Activator&lt;/code&gt; works closely with &lt;code&gt;ActivationSystem&lt;/code&gt; , which provides a means for registering groups and objects within those groups, and &lt;code&gt;ActivationMonitor&lt;/code&gt; , which receives information about active and inactive objects and inactive groups.</target>
        </trans-unit>
        <trans-unit id="11b89453476163752f40fae582d7c0e317141129" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AdjustmentEvent&lt;/code&gt; class defines five types of adjustment event, listed here:</source>
          <target state="translated">The &lt;code&gt;AdjustmentEvent&lt;/code&gt; class defines five types of adjustment event, listed here:</target>
        </trans-unit>
        <trans-unit id="77c9ef0e627c294d9d0956e59ce6bbbb1c929c91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AffineTransform&lt;/code&gt; associated with this op.</source>
          <target state="translated">The &lt;code&gt;AffineTransform&lt;/code&gt; associated with this op.</target>
        </trans-unit>
        <trans-unit id="ae7b7484bb6b8e85b994eb53c01929817f08df61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AffineTransform&lt;/code&gt; class represents a 2D affine transform that performs a linear mapping from 2D coordinates to other 2D coordinates that preserves the &quot;straightness&quot; and &quot;parallelness&quot; of lines.</source>
          <target state="translated">The &lt;code&gt;AffineTransform&lt;/code&gt; class represents a 2D affine transform that performs a linear mapping from 2D coordinates to other 2D coordinates that preserves the &quot;straightness&quot; and &quot;parallelness&quot; of lines.</target>
        </trans-unit>
        <trans-unit id="af074043aa33a9cdd8a8065a2a60108d9f48b311" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AffineTransform&lt;/code&gt; class represents a 2D affine transform that performs a linear mapping from 2D coordinates to other 2D coordinates that preserves the &quot;straightness&quot; and &quot;parallelness&quot; of lines. Affine transformations can be constructed using sequences of translations, scales, flips, rotations, and shears.</source>
          <target state="translated">The &lt;code&gt;AffineTransform&lt;/code&gt; class represents a 2D affine transform that performs a linear mapping from 2D coordinates to other 2D coordinates that preserves the &quot;straightness&quot; and &quot;parallelness&quot; of lines. Affine transformations can be constructed using sequences of translations, scales, flips, rotations, and shears.</target>
        </trans-unit>
        <trans-unit id="b449118f305afa855458cabeb18c4cb51488d864" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; class is used to generate a set of parameters to be used with a certain algorithm.</source>
          <target state="translated">&lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; 의의 클래스는 특정의 알고리즘으로 사용되는 파라미터 세트를 생성하는 데 사용된다.</target>
        </trans-unit>
        <trans-unit id="21b1b496ebb21c6a19e568343413c663744b5d29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; class is used to generate a set of parameters to be used with a certain algorithm. Parameter generators are constructed using the &lt;code&gt;getInstance&lt;/code&gt; factory methods (static methods that return instances of a given class).</source>
          <target state="translated">&lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; 의의 클래스는 특정의 알고리즘으로 사용되는 파라미터 세트를 생성하는 데 사용된다. 매개 변수 생성기는 &lt;code&gt;getInstance&lt;/code&gt; 팩토리 메소드 (주어진 클래스의 인스턴스를 리턴하는 정적 메소드)를 사용하여 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="c42bd8033c27af08a1c588db4f0dd64cf3f36f51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AlphaComposite&lt;/code&gt; class defines an additional alpha value that is applied to the source alpha. This value is applied as if an implicit SRC_IN rule were first applied to the source pixel against a pixel with the indicated alpha by multiplying both the raw source alpha and the raw source colors by the alpha in the &lt;code&gt;AlphaComposite&lt;/code&gt;. This leads to the following equation for producing the alpha used in the Porter and Duff blending equation:</source>
          <target state="translated">The &lt;code&gt;AlphaComposite&lt;/code&gt; class defines an additional alpha value that is applied to the source alpha. This value is applied as if an implicit SRC_IN rule were first applied to the source pixel against a pixel with the indicated alpha by multiplying both the raw source alpha and the raw source colors by the alpha in the &lt;code&gt;AlphaComposite&lt;/code&gt; . This leads to the following equation for producing the alpha used in the Porter and Duff blending equation:</target>
        </trans-unit>
        <trans-unit id="8e918d46c98df1a3d9e3b746487ab38f146ace52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AlphaComposite&lt;/code&gt; class implements basic alpha compositing rules for combining source and destination colors to achieve blending and transparency effects with graphics and images.</source>
          <target state="translated">The &lt;code&gt;AlphaComposite&lt;/code&gt; class implements basic alpha compositing rules for combining source and destination colors to achieve blending and transparency effects with graphics and images.</target>
        </trans-unit>
        <trans-unit id="de67ef924fdd6b848417ed0d9ded1b91dd826f21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AlphaComposite&lt;/code&gt; class implements basic alpha compositing rules for combining source and destination colors to achieve blending and transparency effects with graphics and images. The specific rules implemented by this class are the basic set of 12 rules described in T. Porter and T. Duff, &quot;Compositing Digital Images&quot;, SIGGRAPH 84, 253-259. The rest of this documentation assumes some familiarity with the definitions and concepts outlined in that paper.</source>
          <target state="translated">The &lt;code&gt;AlphaComposite&lt;/code&gt; class implements basic alpha compositing rules for combining source and destination colors to achieve blending and transparency effects with graphics and images. The specific rules implemented by this class are the basic set of 12 rules described in T. Porter and T. Duff, &quot;Compositing Digital Images&quot;, SIGGRAPH 84, 253-259. The rest of this documentation assumes some familiarity with the definitions and concepts outlined in that paper.</target>
        </trans-unit>
        <trans-unit id="7cc50dfb7754628bc00422be42d67644a04299c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Applet&lt;/code&gt; class must be the superclass of any applet that is to be embedded in a Web page or viewed by the Java Applet Viewer. The &lt;code&gt;Applet&lt;/code&gt; class provides a standard interface between applets and their environment.</source>
          <target state="translated">The &lt;code&gt;Applet&lt;/code&gt; class must be the superclass of any applet that is to be embedded in a Web page or viewed by the Java Applet Viewer. The &lt;code&gt;Applet&lt;/code&gt; class provides a standard interface between applets and their environment.</target>
        </trans-unit>
        <trans-unit id="3a902edebc7b4f38563beb1afba8ecdce5cc6b48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Area&lt;/code&gt; class creates an area geometry from the specified &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">The &lt;code&gt;Area&lt;/code&gt; class creates an area geometry from the specified &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; object.</target>
        </trans-unit>
        <trans-unit id="23b21875f411072bf5404801e4f8a1d9a057d41b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Area&lt;/code&gt; class creates an area geometry from the specified &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; object. The geometry is explicitly closed, if the &lt;code&gt;Shape&lt;/code&gt; is not already closed. The fill rule (even-odd or winding) specified by the geometry of the &lt;code&gt;Shape&lt;/code&gt; is used to determine the resulting enclosed area.</source>
          <target state="translated">The &lt;code&gt;Area&lt;/code&gt; class creates an area geometry from the specified &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; object. The geometry is explicitly closed, if the &lt;code&gt;Shape&lt;/code&gt; is not already closed. The fill rule (even-odd or winding) specified by the geometry of the &lt;code&gt;Shape&lt;/code&gt; is used to determine the resulting enclosed area.</target>
        </trans-unit>
        <trans-unit id="15cfc4f1dafa8c04a1323b78e0b2f5670bfae50e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Area&lt;/code&gt; class implements the &lt;code&gt;Shape&lt;/code&gt; interface and provides full support for all of its hit-testing and path iteration facilities, but an &lt;code&gt;Area&lt;/code&gt; is more specific than a generalized path in a number of ways:</source>
          <target state="translated">The &lt;code&gt;Area&lt;/code&gt; class implements the &lt;code&gt;Shape&lt;/code&gt; interface and provides full support for all of its hit-testing and path iteration facilities, but an &lt;code&gt;Area&lt;/code&gt; is more specific than a generalized path in a number of ways:</target>
        </trans-unit>
        <trans-unit id="60cf335e88d209716971b2d6c6b97342cea6ef52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Array&lt;/code&gt; class provides static methods to dynamically create and access Java arrays.</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; 클래스는 정적 동적으로 생성하는 방법과 접근 자바 배열을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6e200f02f8fff206f18ffef2f87fc1beac985865" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Array&lt;/code&gt; interface provides methods for bringing an SQL &lt;code&gt;ARRAY&lt;/code&gt; value's data to the client as either an array or a &lt;code&gt;ResultSet&lt;/code&gt; object. If the elements of the SQL &lt;code&gt;ARRAY&lt;/code&gt; are a UDT, they may be custom mapped. To create a custom mapping, a programmer must do two things:</source>
          <target state="translated">The &lt;code&gt;Array&lt;/code&gt; interface provides methods for bringing an SQL &lt;code&gt;ARRAY&lt;/code&gt; value's data to the client as either an array or a &lt;code&gt;ResultSet&lt;/code&gt; object. If the elements of the SQL &lt;code&gt;ARRAY&lt;/code&gt; are a UDT, they may be custom mapped. To create a custom mapping, a programmer must do two things:</target>
        </trans-unit>
        <trans-unit id="e11780a48e0c2628760a60beb9af58fed7a0350b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ArrayType&lt;/code&gt; class is the</source>
          <target state="translated">&lt;code&gt;ArrayType&lt;/code&gt; 의 클래스입니다</target>
        </trans-unit>
        <trans-unit id="3cc4395b5136dbdc8af1042a1b98b4cb4581b8c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; interface represents an attribute in an &lt;code&gt;Element&lt;/code&gt; object.</source>
          <target state="translated">The &lt;code&gt;Attr&lt;/code&gt; interface represents an attribute in an &lt;code&gt;Element&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="275c8f395f1beaba2f6f1d83bc7c14898a2596bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; interface represents an attribute in an &lt;code&gt;Element&lt;/code&gt; object. Typically the allowable values for the attribute are defined in a schema associated with the document.</source>
          <target state="translated">The &lt;code&gt;Attr&lt;/code&gt; interface represents an attribute in an &lt;code&gt;Element&lt;/code&gt; object. Typically the allowable values for the attribute are defined in a schema associated with the document.</target>
        </trans-unit>
        <trans-unit id="abaabe6886264c20f473fa5053a5d55bc337750d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; node that was removed.</source>
          <target state="translated">제거 된 &lt;code&gt;Attr&lt;/code&gt; 노드</target>
        </trans-unit>
        <trans-unit id="5ef50051305c491e51d826eece91f5a67a7debbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; node with the specified attribute local name and namespace URI or &lt;code&gt;null&lt;/code&gt; if there is no such attribute.</source>
          <target state="translated">&lt;code&gt;Attr&lt;/code&gt; 지정된 속성 로컬 명과 이름 공간 URI 또는을 가진 노드 &lt;code&gt;null&lt;/code&gt; 해당하는 속성이 존재하지 않는 경우.</target>
        </trans-unit>
        <trans-unit id="7652a895a29f2647e0b2dd18893f6b4dc0e428cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; node with the specified name ( &lt;code&gt;nodeName&lt;/code&gt;) or &lt;code&gt;null&lt;/code&gt; if there is no such attribute.</source>
          <target state="translated">&lt;code&gt;Attr&lt;/code&gt; 지정된 이름 (노드와 함께 &lt;code&gt;nodeName&lt;/code&gt; ) 또는 &lt;code&gt;null&lt;/code&gt; 해당하는 속성이 존재하지 않는 경우.</target>
        </trans-unit>
        <trans-unit id="7a69dfdb305ce85fbed13fda0e8e19810074205f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; value as a string, or the empty string if that attribute does not have a specified or default value.</source>
          <target state="translated">&lt;code&gt;Attr&lt;/code&gt; 문자열로 값 또는 빈 문자열은 그 속성이 지정되거나 디폴트 값이없는 경우.</target>
        </trans-unit>
        <trans-unit id="1d3bb6cf7d846d46a56db0af192df954b4ace57d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; was just added.</source>
          <target state="translated">The &lt;code&gt;Attr&lt;/code&gt; was just added.</target>
        </trans-unit>
        <trans-unit id="3980e98c449fdb090ee7e888258a1778ab128b82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; was just removed.</source>
          <target state="translated">The &lt;code&gt;Attr&lt;/code&gt; was just removed.</target>
        </trans-unit>
        <trans-unit id="2cc83d98a99f11a6638a57cb16b71fe7f4407a2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; was modified in place.</source>
          <target state="translated">The &lt;code&gt;Attr&lt;/code&gt; was modified in place.</target>
        </trans-unit>
        <trans-unit id="f3aadc19c893a1efadaa932321d03e00dc3fdf32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AttributeSet&lt;/code&gt; interface is similar to the &lt;a href=&quot;../../../java/util/map&quot;&gt;Map&lt;/a&gt; interface: it provides a map of key to values, in which each key is unique and can contain no more than one value. However, the &lt;code&gt;AttributeSet&lt;/code&gt; interface is designed to specifically support the needs of the Java Print Service API. An &lt;code&gt;AttributeSet&lt;/code&gt; requires that:</source>
          <target state="translated">&lt;code&gt;AttributeSet&lt;/code&gt; 인터페이스는 비슷합니다 &lt;a href=&quot;../../../java/util/map&quot;&gt;지도&lt;/a&gt; 인터페이스 : 각 키가 고유하지 않습니다 더 이상 하나 개의 값 이상 포함 할 수있는 값에 대한 키의 매핑을 제공합니다. 그러나 &lt;code&gt;AttributeSet&lt;/code&gt; 인터페이스는 Java 인쇄 서비스 API의 요구를 구체적으로 지원하도록 설계되었습니다. &lt;code&gt;AttributeSet&lt;/code&gt; 해야합니다 :</target>
        </trans-unit>
        <trans-unit id="ec3ca9a461283de7a024fe4370f4c8ea8d93045c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioClip&lt;/code&gt; interface is a simple abstraction for playing a sound clip. Multiple &lt;code&gt;AudioClip&lt;/code&gt; items can be playing at the same time, and the resulting sound is mixed together to produce a composite.</source>
          <target state="translated">The &lt;code&gt;AudioClip&lt;/code&gt; interface is a simple abstraction for playing a sound clip. Multiple &lt;code&gt;AudioClip&lt;/code&gt; items can be playing at the same time, and the resulting sound is mixed together to produce a composite.</target>
        </trans-unit>
        <trans-unit id="8af784200eedb9bf3ff696e5dfcb898cc72bbe54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioFormat&lt;/code&gt; class accommodates a number of common sound-file encoding techniques, including pulse-code modulation (PCM), mu-law encoding, and a-law encoding. These encoding techniques are predefined, but service providers can create new encoding types. The encoding that a specific format uses is named by its &lt;code&gt;encoding&lt;/code&gt; field.</source>
          <target state="translated">&lt;code&gt;AudioFormat&lt;/code&gt; 클래스는 펄스 부호 변조 (PCM), mu-law 인코딩 및 법칙 인코딩 음성을 포함한 일반적인 파일 인코딩 기술들을 수용한다. 이러한 인코딩 기술은 미리 정의되어 있지만 서비스 제공 업체는 새로운 인코딩 유형을 만들 수 있습니다. 특정 형식이 사용하는 &lt;code&gt;encoding&lt;/code&gt; 이름은 해당 인코딩 필드로 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="d7fd077369e0845cac37ae324fe142bf62bb88be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioPermission&lt;/code&gt; class represents access rights to the audio system resources.</source>
          <target state="translated">&lt;code&gt;AudioPermission&lt;/code&gt; 의 클래스는 오디오 시스템 리소스에 대한 액세스 권한을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="663f73601babca7fe9a3f57db471ad6b7380920c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioPermission&lt;/code&gt; class represents access rights to the audio system resources. An &lt;code&gt;AudioPermission&lt;/code&gt; contains a target name but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">&lt;code&gt;AudioPermission&lt;/code&gt; 의 클래스는 오디오 시스템 리소스에 대한 액세스 권한을 나타냅니다. &lt;code&gt;AudioPermission&lt;/code&gt; 은 대상 이름 만, 액션리스트는 포함 당신은 명명 된 권한이 있거나 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="64530a02f14561a54d873e43c58fb4f8735319fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioSystem&lt;/code&gt; class acts as the entry point to the sampled-audio system resources.</source>
          <target state="translated">&lt;code&gt;AudioSystem&lt;/code&gt; 클래스는 샘플링 된 오디오 시스템 자원에 대한 진입 점 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="8d0aeed0a30ef032e71643f03ade7a22188d197b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioSystem&lt;/code&gt; class acts as the entry point to the sampled-audio system resources. This class lets you query and access the mixers that are installed on the system. &lt;code&gt;AudioSystem&lt;/code&gt; includes a number of methods for converting audio data between different formats, and for translating between audio files and streams. It also provides a method for obtaining a &lt;a href=&quot;line&quot;&gt;&lt;code&gt;Line&lt;/code&gt;&lt;/a&gt; directly from the &lt;code&gt;AudioSystem&lt;/code&gt; without dealing explicitly with mixers.</source>
          <target state="translated">The &lt;code&gt;AudioSystem&lt;/code&gt; class acts as the entry point to the sampled-audio system resources. This class lets you query and access the mixers that are installed on the system. &lt;code&gt;AudioSystem&lt;/code&gt; includes a number of methods for converting audio data between different formats, and for translating between audio files and streams. It also provides a method for obtaining a &lt;a href=&quot;line&quot;&gt; &lt;code&gt;Line&lt;/code&gt; &lt;/a&gt; directly from the &lt;code&gt;AudioSystem&lt;/code&gt; without dealing explicitly with mixers.</target>
        </trans-unit>
        <trans-unit id="a212ac4197ad27334cc250327922918495c0a587" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioSystem&lt;/code&gt; class acts as the entry point to the sampled-audio system resources. This class lets you query and access the mixers that are installed on the system. &lt;code&gt;AudioSystem&lt;/code&gt; includes a number of methods for converting audio data between different formats, and for translating between audio files and streams. It also provides a method for obtaining a &lt;code&gt;&lt;a href=&quot;line&quot;&gt;&lt;code&gt;Line&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; directly from the &lt;code&gt;AudioSystem&lt;/code&gt; without dealing explicitly with mixers.</source>
          <target state="translated">&lt;code&gt;AudioSystem&lt;/code&gt; 클래스는 샘플링 된 오디오 시스템 자원에 대한 진입 점 역할을합니다. 이 클래스를 사용하면 시스템에 설치된 믹서를 쿼리하고 액세스 할 수 있습니다. &lt;code&gt;AudioSystem&lt;/code&gt; 에는 여러 형식간에 오디오 데이터를 변환하고 오디오 파일과 스트림간에 변환하는 여러 가지 방법이 있습니다. 믹서를 명시 적으로 다루지 않고 &lt;code&gt;AudioSystem&lt;/code&gt; 에서 직접 &lt;code&gt;&lt;a href=&quot;line&quot;&gt;&lt;code&gt;Line&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 을 얻는 방법도 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="7af5ce7a31e2d4a27612651aee35e3f53a096d39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioSystem&lt;/code&gt; class includes many methods that manipulate &lt;code&gt;AudioInputStream&lt;/code&gt; objects. For example, the methods let you:</source>
          <target state="translated">&lt;code&gt;AudioSystem&lt;/code&gt; 클래스는 조작 많은 방법이 포함 &lt;code&gt;AudioInputStream&lt;/code&gt; 를의 객체. 예를 들어, 방법을 사용하면</target>
        </trans-unit>
        <trans-unit id="33fe5e270dcc0cd446b3dbafe785b92d757d02dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Base&lt;/code&gt; property determines the URL against which relative URLs are resolved. By default, this will be the &lt;code&gt;Document.StreamDescriptionProperty&lt;/code&gt; if the value of the property is a URL. If a &amp;lt;BASE&amp;gt; tag is encountered, the base will become the URL specified by that tag. Because the base URL is a property, it can of course be set directly.</source>
          <target state="translated">The &lt;code&gt;Base&lt;/code&gt; property determines the URL against which relative URLs are resolved. By default, this will be the &lt;code&gt;Document.StreamDescriptionProperty&lt;/code&gt; if the value of the property is a URL. If a &amp;lt;BASE&amp;gt; tag is encountered, the base will become the URL specified by that tag. Because the base URL is a property, it can of course be set directly.</target>
        </trans-unit>
        <trans-unit id="f13fbb136b39778f02f7b89def3adfb0d84135ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the core functionality for all &lt;code&gt;RowSet&lt;/code&gt; implementations, and all standard implementations &lt;b&gt;may&lt;/b&gt; use this class in combination with one or more &lt;code&gt;RowSet&lt;/code&gt; interfaces in order to provide a standard vendor-specific implementation. To clarify, all implementations must implement at least one of the &lt;code&gt;RowSet&lt;/code&gt; interfaces (&lt;code&gt;JdbcRowSet&lt;/code&gt;, &lt;code&gt;CachedRowSet&lt;/code&gt;, &lt;code&gt;JoinRowSet&lt;/code&gt;, &lt;code&gt;FilteredRowSet&lt;/code&gt;, or &lt;code&gt;WebRowSet&lt;/code&gt;). This means that any implementation that extends the &lt;code&gt;BaseRowSet&lt;/code&gt; class must also implement one of the &lt;code&gt;RowSet&lt;/code&gt; interfaces.</source>
          <target state="translated">The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the core functionality for all &lt;code&gt;RowSet&lt;/code&gt; implementations, and all standard implementations &lt;b&gt;may&lt;/b&gt; use this class in combination with one or more &lt;code&gt;RowSet&lt;/code&gt; interfaces in order to provide a standard vendor-specific implementation. To clarify, all implementations must implement at least one of the &lt;code&gt;RowSet&lt;/code&gt; interfaces ( &lt;code&gt;JdbcRowSet&lt;/code&gt; , &lt;code&gt;CachedRowSet&lt;/code&gt; , &lt;code&gt;JoinRowSet&lt;/code&gt; , &lt;code&gt;FilteredRowSet&lt;/code&gt; , or &lt;code&gt;WebRowSet&lt;/code&gt; ). This means that any implementation that extends the &lt;code&gt;BaseRowSet&lt;/code&gt; class must also implement one of the &lt;code&gt;RowSet&lt;/code&gt; interfaces.</target>
        </trans-unit>
        <trans-unit id="08cddb31c69a10389f6bfead1831d310fe8b6e1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the event notification mechanism for rowsets. It contains the field &lt;code&gt;listeners&lt;/code&gt;, methods for adding and removing listeners, and methods for notifying listeners of changes.</source>
          <target state="translated">The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the event notification mechanism for rowsets. It contains the field &lt;code&gt;listeners&lt;/code&gt; , methods for adding and removing listeners, and methods for notifying listeners of changes.</target>
        </trans-unit>
        <trans-unit id="0f7e37f97a3b4be59f83e1bdba10267695408eda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the following:</source>
          <target state="translated">The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the following:</target>
        </trans-unit>
        <trans-unit id="a506dbdb25a76d2e4fd35080181c055d1c435da5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BaseRowSet&lt;/code&gt; method used for the notification indicates the type of event that has occurred. For example, the method &lt;code&gt;notifyRowChanged&lt;/code&gt; indicates that a row has been updated, deleted, or inserted. Each of the notification methods creates a &lt;code&gt;RowSetEvent&lt;/code&gt; object, which is supplied to the listener in order to identify the &lt;code&gt;RowSet&lt;/code&gt; object on which the event occurred. What the listener does with this information, which may be nothing, depends on how it was implemented.</source>
          <target state="translated">The &lt;code&gt;BaseRowSet&lt;/code&gt; method used for the notification indicates the type of event that has occurred. For example, the method &lt;code&gt;notifyRowChanged&lt;/code&gt; indicates that a row has been updated, deleted, or inserted. Each of the notification methods creates a &lt;code&gt;RowSetEvent&lt;/code&gt; object, which is supplied to the listener in order to identify the &lt;code&gt;RowSet&lt;/code&gt; object on which the event occurred. What the listener does with this information, which may be nothing, depends on how it was implemented.</target>
        </trans-unit>
        <trans-unit id="79cdc8d9c9f62ce1ec249481a0aed83f0d424285" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BasicAttribute&lt;/code&gt; class by default uses &lt;code&gt;Object.equals()&lt;/code&gt; to determine equality of attribute values when testing for equality or when searching for values, &lt;em&gt;except&lt;/em&gt; when the value is an array. For an array, each element of the array is checked using &lt;code&gt;Object.equals()&lt;/code&gt;. Subclasses of &lt;code&gt;BasicAttribute&lt;/code&gt; can make use of schema information when doing similar equality checks by overriding methods in which such use of schema is meaningful. Similarly, the &lt;code&gt;BasicAttribute&lt;/code&gt; class by default returns the values passed to its constructor and/or manipulated using the add/remove methods. Subclasses of &lt;code&gt;BasicAttribute&lt;/code&gt; can override &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;getAll()&lt;/code&gt; to get the values dynamically from the directory (or implement the &lt;code&gt;Attribute&lt;/code&gt; interface directly instead of subclassing &lt;code&gt;BasicAttribute&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;BasicAttribute&lt;/code&gt; 디폴트 클래스를 사용 &lt;code&gt;Object.equals()&lt;/code&gt; , 값을 검색 할 때 어떤지를 판정하거나 속성 값 어떤지를 결정하기 위해 &lt;em&gt;제외한&lt;/em&gt; 값이 배열 될 때. 배열의 경우 배열의 각 요소는 &lt;code&gt;Object.equals()&lt;/code&gt; 사용하여 확인됩니다 . &lt;code&gt;BasicAttribute&lt;/code&gt; 의 서브 클래스는 스키마 사용이 의미있는 메소드를 대체하여 유사한 동등 검사를 수행 할 때 스키마 정보를 사용할 수 있습니다. 마찬가지로 &lt;code&gt;BasicAttribute&lt;/code&gt; 클래스는 기본적으로 생성자에 전달되거나 add / remove 메서드를 사용하여 조작 된 값을 반환합니다. 의 서브 클래스 &lt;code&gt;BasicAttribute&lt;/code&gt; 의는 무시할 수 있습니다 &lt;code&gt;get()&lt;/code&gt; 하고 &lt;code&gt;getAll()&lt;/code&gt; 은 디렉토리에서 값을 동적으로 가져 오거나 &lt;code&gt;BasicAttribute&lt;/code&gt; 를 서브 클래 싱하는 대신 직접 &lt;code&gt;Attribute&lt;/code&gt; 인터페이스를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="ccfded134fb937873b65607b04903f6ace745c35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BasicStroke&lt;/code&gt; class defines a basic set of rendering attributes for the outlines of graphics primitives, which are rendered with a &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; object that has its Stroke attribute set to this &lt;code&gt;BasicStroke&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;BasicStroke&lt;/code&gt; class defines a basic set of rendering attributes for the outlines of graphics primitives, which are rendered with a &lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt; object that has its Stroke attribute set to this &lt;code&gt;BasicStroke&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa712ae35d56ccbbc492dc39a322352076b8983d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BasicStroke&lt;/code&gt; class defines a basic set of rendering attributes for the outlines of graphics primitives, which are rendered with a &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; object that has its Stroke attribute set to this &lt;code&gt;BasicStroke&lt;/code&gt;. The rendering attributes defined by &lt;code&gt;BasicStroke&lt;/code&gt; describe the shape of the mark made by a pen drawn along the outline of a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; and the decorations applied at the ends and joins of path segments of the &lt;code&gt;Shape&lt;/code&gt;. These rendering attributes include:</source>
          <target state="translated">The &lt;code&gt;BasicStroke&lt;/code&gt; class defines a basic set of rendering attributes for the outlines of graphics primitives, which are rendered with a &lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt; object that has its Stroke attribute set to this &lt;code&gt;BasicStroke&lt;/code&gt; . The rendering attributes defined by &lt;code&gt;BasicStroke&lt;/code&gt; describe the shape of the mark made by a pen drawn along the outline of a &lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; and the decorations applied at the ends and joins of path segments of the &lt;code&gt;Shape&lt;/code&gt; . These rendering attributes include:</target>
        </trans-unit>
        <trans-unit id="1e0315176a90eb1a609d30f4d425382cc748e5d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BeanContext&lt;/code&gt; from which this event was propagated</source>
          <target state="translated">이 이벤트가 전파 된 &lt;code&gt;BeanContext&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe4221cd8e13142dfdb7397e431e92d56077adb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BeanContext&lt;/code&gt; in which this &lt;code&gt;BeanContextChild&lt;/code&gt; is nested.</source>
          <target state="translated">&lt;code&gt;BeanContext&lt;/code&gt; 있는이 &lt;code&gt;BeanContextChild&lt;/code&gt; 에이 중첩이다.</target>
        </trans-unit>
        <trans-unit id="00c979e876274b193545569222391a96daaa9dd0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigDecimal&lt;/code&gt; class gives its user complete control over rounding behavior. If no rounding mode is specified and the exact result cannot be represented, an exception is thrown; otherwise, calculations can be carried out to a chosen precision and rounding mode by supplying an appropriate &lt;a href=&quot;mathcontext&quot;&gt;&lt;code&gt;MathContext&lt;/code&gt;&lt;/a&gt; object to the operation. In either case, eight &lt;em&gt;rounding modes&lt;/em&gt; are provided for the control of rounding. Using the integer fields in this class (such as &lt;a href=&quot;#ROUND_HALF_UP&quot;&gt;&lt;code&gt;ROUND_HALF_UP&lt;/code&gt;&lt;/a&gt;) to represent rounding mode is deprecated; the enumeration values of the &lt;code&gt;RoundingMode&lt;/code&gt;&lt;code&gt;enum&lt;/code&gt;, (such as &lt;a href=&quot;roundingmode#HALF_UP&quot;&gt;&lt;code&gt;RoundingMode.HALF_UP&lt;/code&gt;&lt;/a&gt;) should be used instead.</source>
          <target state="translated">The &lt;code&gt;BigDecimal&lt;/code&gt; class gives its user complete control over rounding behavior. If no rounding mode is specified and the exact result cannot be represented, an exception is thrown; otherwise, calculations can be carried out to a chosen precision and rounding mode by supplying an appropriate &lt;a href=&quot;mathcontext&quot;&gt; &lt;code&gt;MathContext&lt;/code&gt; &lt;/a&gt; object to the operation. In either case, eight &lt;em&gt;rounding modes&lt;/em&gt; are provided for the control of rounding. Using the integer fields in this class (such as &lt;a href=&quot;#ROUND_HALF_UP&quot;&gt; &lt;code&gt;ROUND_HALF_UP&lt;/code&gt; &lt;/a&gt;) to represent rounding mode is deprecated; the enumeration values of the &lt;code&gt;RoundingMode&lt;/code&gt; &lt;code&gt;enum&lt;/code&gt; , (such as &lt;a href=&quot;roundingmode#HALF_UP&quot;&gt; &lt;code&gt;RoundingMode.HALF_UP&lt;/code&gt; &lt;/a&gt;) should be used instead.</target>
        </trans-unit>
        <trans-unit id="7971f5d644f18176b75055fa2a5ace4dd309fa2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigDecimal&lt;/code&gt; class gives its user complete control over rounding behavior. If no rounding mode is specified and the exact result cannot be represented, an exception is thrown; otherwise, calculations can be carried out to a chosen precision and rounding mode by supplying an appropriate &lt;a href=&quot;mathcontext&quot;&gt;&lt;code&gt;MathContext&lt;/code&gt;&lt;/a&gt; object to the operation. In either case, eight &lt;em&gt;rounding modes&lt;/em&gt; are provided for the control of rounding. Using the integer fields in this class (such as &lt;a href=&quot;bigdecimal#ROUND_HALF_UP&quot;&gt;&lt;code&gt;ROUND_HALF_UP&lt;/code&gt;&lt;/a&gt;) to represent rounding mode is largely obsolete; the enumeration values of the &lt;code&gt;RoundingMode&lt;/code&gt;&lt;code&gt;enum&lt;/code&gt;, (such as &lt;a href=&quot;roundingmode#HALF_UP&quot;&gt;&lt;code&gt;RoundingMode.HALF_UP&lt;/code&gt;&lt;/a&gt;) should be used instead.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 클래스는 둥근 동작을 사용자가 완벽하게 제어 할 수 있습니다. 반올림 모드를 지정하지 않고 정확한 결과를 표현할 수 없으면 예외가 발생합니다. 그렇지 않으면 연산에 적절한 &lt;a href=&quot;mathcontext&quot;&gt; &lt;code&gt;MathContext&lt;/code&gt; &lt;/a&gt; 객체를 제공하여 선택한 정밀도 및 반올림 모드로 계산을 수행 할 수 있습니다 . 두 경우 모두 &lt;em&gt;반올림&lt;/em&gt; 제어를 위해 8 개의 &lt;em&gt;반올림 모드&lt;/em&gt; 가 제공됩니다. 이 클래스의 정수 필드 (예 : &lt;a href=&quot;bigdecimal#ROUND_HALF_UP&quot;&gt; &lt;code&gt;ROUND_HALF_UP&lt;/code&gt; &lt;/a&gt; )를 사용하여 반올림 모드를 나타내는 것은 대체로 사용되지 않습니다. 대신 &lt;code&gt;RoundingMode&lt;/code&gt; &lt;code&gt;enum&lt;/code&gt; 의 열거 값 (예 : &lt;a href=&quot;roundingmode#HALF_UP&quot;&gt; &lt;code&gt;RoundingMode.HALF_UP&lt;/code&gt; &lt;/a&gt; )을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="0f7131e752130ba71f1457ea575b0a9007dd1071" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigDecimal&lt;/code&gt; class provides operations for arithmetic, scale manipulation, rounding, comparison, hashing, and format conversion. The &lt;a href=&quot;#toString()&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method provides a canonical representation of a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 클래스 산술 스케일 조작, 둥근, 비교, 해시, 포맷 변환 연산을 제공한다. &lt;a href=&quot;#toString()&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt; 메소드는 정규 표현의 제공 &lt;code&gt;BigDecimal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fc7942056b3dd79609c5265cf98ecc9a0e3f371" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigDecimal&lt;/code&gt; class provides operations for arithmetic, scale manipulation, rounding, comparison, hashing, and format conversion. The &lt;a href=&quot;bigdecimal#toString--&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method provides a canonical representation of a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 클래스 산술 스케일 조작, 둥근, 비교, 해시, 포맷 변환 연산을 제공한다. &lt;a href=&quot;bigdecimal#toString--&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt; 메소드는 정규 표현의 제공 &lt;code&gt;BigDecimal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df5a7760f638121c128fa1a36ad30ea0b851b272" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Binding&lt;/code&gt; class is actually a subclass of &lt;code&gt;NameClassPair&lt;/code&gt;, which consists simply of the object's name and the object's class name. The &lt;code&gt;NameClassPair&lt;/code&gt; is useful when you only want information about the object's class and do not want to pay the extra cost of getting the object.</source>
          <target state="translated">&lt;code&gt;Binding&lt;/code&gt; 클래스는 실제의 서브 클래스 &lt;code&gt;NameClassPair&lt;/code&gt; 에 단순히 객체의 이름과 객체의 클래스 이름으로 구성됩니다. &lt;code&gt;NameClassPair&lt;/code&gt; 당신이 단지 객체의 클래스에 대한 정보를 원하는 객체를 얻기의 추가 비용을 지불하고 싶지 않을 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="0103dabbd8fe15655d49de0baddfafb3b9137bae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Binding&lt;/code&gt; class represents a name-to-object binding. It is a tuple containing the name of the bound object, the name of the object's class, and the object itself.</source>
          <target state="translated">&lt;code&gt;Binding&lt;/code&gt; 클래스는 이름 - 객체 바인딩을 나타냅니다. 바인딩 된 객체의 이름, 객체의 클래스 이름 및 객체 자체를 포함하는 튜플입니다.</target>
        </trans-unit>
        <trans-unit id="b8bb72f6e0722cb808bbfd786520a48b7182c75e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Bindings&lt;/code&gt; instances that are returned must be identical to those returned by the &lt;code&gt;getBindings&lt;/code&gt; method of &lt;code&gt;ScriptContext&lt;/code&gt; called with corresponding arguments on the default &lt;code&gt;ScriptContext&lt;/code&gt; of the &lt;code&gt;ScriptEngine&lt;/code&gt;.</source>
          <target state="translated">리턴 된 &lt;code&gt;Bindings&lt;/code&gt; 인스턴스 는 &lt;code&gt;ScriptEngine&lt;/code&gt; 의 기본 &lt;code&gt;ScriptContext&lt;/code&gt; 에서 해당 인수로 호출 된 &lt;code&gt;ScriptContext&lt;/code&gt; 의 &lt;code&gt;getBindings&lt;/code&gt; 메소드 가 리턴 한 인스턴스와 동일해야합니다 .</target>
        </trans-unit>
        <trans-unit id="05940c6482bc9cee8cceaf4e697300ed0675d5d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Bindings&lt;/code&gt; of key/value pairs, referred to as the &quot;Global Scope&quot; maintained by the manager is available to all instances of &lt;code&gt;ScriptEngine&lt;/code&gt; created by the &lt;code&gt;ScriptEngineManager&lt;/code&gt;. The values in the &lt;code&gt;Bindings&lt;/code&gt; are generally exposed in all scripts.</source>
          <target state="translated">&lt;code&gt;Bindings&lt;/code&gt; 의 모든 인스턴스에 관리자에 의해 유지되는 &quot;글로벌 범위가&quot;로 볼 수 있습니다이라 키 / 값 쌍의, &lt;code&gt;ScriptEngine&lt;/code&gt; 의은 에 의해 생성 &lt;code&gt;ScriptEngineManager&lt;/code&gt; 는 . &lt;code&gt;Bindings&lt;/code&gt; 의 값 은 일반적으로 모든 스크립트에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="c8872d0f95cad30df2b43f31fb08168cf4e82b4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Bindings&lt;/code&gt; with the specified scope.</source>
          <target state="translated">지정된 범위 의 &lt;code&gt;Bindings&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a769e9c66ca1b7bd668f50b4ffd3a1fb7830318" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BodyHandler&lt;/code&gt; interface allows inspection of the response code and headers, before the actual response body is received, and is responsible for creating the response &lt;a href=&quot;httpresponse.bodysubscriber&quot;&gt;&lt;code&gt;BodySubscriber&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;BodySubscriber&lt;/code&gt; consumes the actual response body bytes and, typically, converts them into a higher-level Java type.</source>
          <target state="translated">&lt;code&gt;BodyHandler&lt;/code&gt; 의 인터페이스는 실제 응답 체를 수신하기 전에 응답 코드 및 헤더 검사를 허용하고, 상기 응답 생성을 담당 &lt;a href=&quot;httpresponse.bodysubscriber&quot;&gt; &lt;code&gt;BodySubscriber&lt;/code&gt; 를&lt;/a&gt; . &lt;code&gt;BodySubscriber&lt;/code&gt; 는 더 높은 수준의 자바 타입으로 변환을, 일반적으로, 실제 응답 본문 바이트를 소모합니다.</target>
        </trans-unit>
        <trans-unit id="742f182e597aa7b5d077c9f7e1aa5aaa704913b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BodyPublisher&lt;/code&gt; interface extends &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.publisher&quot;&gt;&lt;code&gt;Flow.Publisher&amp;lt;ByteBuffer&amp;gt;&lt;/code&gt;&lt;/a&gt;, which means that a &lt;code&gt;BodyPublisher&lt;/code&gt; acts as a publisher of &lt;a href=&quot;../../../../java.base/java/nio/bytebuffer&quot;&gt;byte buffers&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;BodyPublisher&lt;/code&gt; 의 인터페이스는 확장 &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.publisher&quot;&gt; &lt;code&gt;Flow.Publisher&amp;lt;ByteBuffer&amp;gt;&lt;/code&gt; &lt;/a&gt; , 이는 것을 의미 &lt;code&gt;BodyPublisher&lt;/code&gt; 가 의 게시자 역할 &lt;a href=&quot;../../../../java.base/java/nio/bytebuffer&quot;&gt;바이트 버퍼&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aaef0cfb8ca49e559fec4e3d4a0b53c759d2a804" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Book&lt;/code&gt; class provides a representation of a document in which pages may have different page formats and page painters.</source>
          <target state="translated">&lt;code&gt;Book&lt;/code&gt; 클래스는 페이지 페이지 형식과 페이지 페인 다른를 가지는 문서의 표현을 제공한다.</target>
        </trans-unit>
        <trans-unit id="50a07040901ceb1a146df0db4c1a1a7103eb3760" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Book&lt;/code&gt; class provides a representation of a document in which pages may have different page formats and page painters. This class uses the &lt;a href=&quot;pageable&quot;&gt;&lt;code&gt;Pageable&lt;/code&gt;&lt;/a&gt; interface to interact with a &lt;a href=&quot;printerjob&quot;&gt;&lt;code&gt;PrinterJob&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Book&lt;/code&gt; 클래스는 페이지 페이지 형식과 페이지 페인 다른를 가지는 문서의 표현을 제공한다. 이 클래스는 &lt;a href=&quot;pageable&quot;&gt; &lt;code&gt;Pageable&lt;/code&gt; &lt;/a&gt; 인터페이스를 사용하여 &lt;a href=&quot;printerjob&quot;&gt; &lt;code&gt;PrinterJob&lt;/code&gt; &lt;/a&gt; 과 상호 작용합니다 .</target>
        </trans-unit>
        <trans-unit id="2d60a6b49fd7f6573e55ea030a9ceb3013e12f74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Boolean&lt;/code&gt; object corresponding to the primitive value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; 프리미티브 값에 대응하는 오브젝트 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa5f6e88af022d56af88b562fb37e5a9055bbd43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Boolean&lt;/code&gt; object corresponding to the primitive value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; 프리미티브 값에 대응하는 오브젝트 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea791e8f10fa9a037a59caa97302b3cd888b807e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BoundedRangeModel&lt;/code&gt; that holds the progress bar's data handles any issues that may arise from improperly setting the minimum, initial, and maximum values on the progress bar. See the &lt;code&gt;BoundedRangeModel&lt;/code&gt; documentation for details.</source>
          <target state="translated">&lt;code&gt;BoundedRangeModel&lt;/code&gt; 의 진척 바의 데이터를 보유하고 부적절하게 진행 표시 줄에 초기 최소 및 최대 값을 설정에서 발생할 수있는 모든 문제를 처리합니다. 자세한 내용은 &lt;code&gt;BoundedRangeModel&lt;/code&gt; 문서를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="2d7d426311b532ee1c5da031500efbfbb7191a7a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BoundedRangeModel&lt;/code&gt; that holds the slider's data handles any issues that may arise from improperly setting the minimum and maximum values on the slider. See the &lt;code&gt;BoundedRangeModel&lt;/code&gt; documentation for details.</source>
          <target state="translated">&lt;code&gt;BoundedRangeModel&lt;/code&gt; 의 슬라이더의 데이터를 보유 잘못 슬라이더의 최소 및 최대 값을 설정에서 발생할 수있는 모든 문제를 처리합니다. 자세한 내용은 &lt;code&gt;BoundedRangeModel&lt;/code&gt; 문서를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="1aafd4fda765db5560306e64069683846134ea1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BoundedRangeModel&lt;/code&gt; that holds the slider's data handles any issues that may arise from improperly setting the minimum, initial, and maximum values on the slider. See the &lt;code&gt;BoundedRangeModel&lt;/code&gt; documentation for details.</source>
          <target state="translated">&lt;code&gt;BoundedRangeModel&lt;/code&gt; 의 슬라이더의 데이터를 보유 잘못 슬라이더에 초기 최소 및 최대 값을 설정에서 발생할 수있는 모든 문제를 처리합니다. 자세한 내용은 &lt;code&gt;BoundedRangeModel&lt;/code&gt; 문서를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="3fa35874db63a06b37997dac65b42981a90d37a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Box&lt;/code&gt; class can create several kinds of invisible components that affect layout: glue, struts, and rigid areas. If all the components your &lt;code&gt;Box&lt;/code&gt; contains have a fixed size, you might want to use a glue component (returned by &lt;code&gt;createGlue&lt;/code&gt;) to control the components' positions. If you need a fixed amount of space between two components, try using a strut (&lt;code&gt;createHorizontalStrut&lt;/code&gt; or &lt;code&gt;createVerticalStrut&lt;/code&gt;). If you need an invisible component that always takes up the same amount of space, get it by invoking &lt;code&gt;createRigidArea&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Box&lt;/code&gt; 접착제, 스트럿, 경질 분야 : 클래스는 보이지 않는 레이아웃에 영향을 미치는 구성 요소의 여러 가지를 만들 수 있습니다. &lt;code&gt;Box&lt;/code&gt; 에 포함 된 모든 구성 요소의 크기가 고정 된 경우 접착제 구성 요소 ( &lt;code&gt;createGlue&lt;/code&gt; 에서 반환 됨 )를 사용하여 구성 요소의 위치를 ​​제어 할 수 있습니다. 두 구성 요소 사이에 고정 된 공간이 필요한 경우 스트럿 ( &lt;code&gt;createHorizontalStrut&lt;/code&gt; 또는 &lt;code&gt;createVerticalStrut&lt;/code&gt; )을 사용해보십시오 . 항상 같은 양의 공간을 차지하는 보이지 않는 구성 요소가 필요한 경우 &lt;code&gt;createRigidArea&lt;/code&gt; 를 호출하여 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="8e5bd3e90c98cafc96c3bffb7cdb5902ec05efc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BreakIterator&lt;/code&gt; class implements methods for finding the location of boundaries in text.</source>
          <target state="translated">&lt;code&gt;BreakIterator&lt;/code&gt; 텍스트 경계의 위치를 찾아내는 클래스가 구현하는 방법.</target>
        </trans-unit>
        <trans-unit id="da13029d818efd6f3b22a9f5835a453fd292a681" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BreakIterator&lt;/code&gt; class implements methods for finding the location of boundaries in text. Instances of &lt;code&gt;BreakIterator&lt;/code&gt; maintain a current position and scan over text returning the index of characters where boundaries occur. Internally, &lt;code&gt;BreakIterator&lt;/code&gt; scans text using a &lt;code&gt;CharacterIterator&lt;/code&gt;, and is thus able to scan text held by any object implementing that protocol. A &lt;code&gt;StringCharacterIterator&lt;/code&gt; is used to scan &lt;code&gt;String&lt;/code&gt; objects passed to &lt;code&gt;setText&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BreakIterator&lt;/code&gt; 텍스트 경계의 위치를 찾아내는 클래스가 구현하는 방법. &lt;code&gt;BreakIterator&lt;/code&gt; 인스턴스는 현재 위치를 유지하고 경계가 발생한 문자 색인을 반환하는 텍스트를 스캔합니다. 내부적으로 &lt;code&gt;BreakIterator&lt;/code&gt; 는 &lt;code&gt;CharacterIterator&lt;/code&gt; 를 사용하여 텍스트 를 스캔하므로 해당 프로토콜을 구현하는 모든 객체가 보유한 텍스트를 스캔 할 수 있습니다. &lt;code&gt;StringCharacterIterator&lt;/code&gt; 는 스캔하는 데 사용되는 &lt;code&gt;String&lt;/code&gt; 에 전달 된 객체 &lt;code&gt;setText&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8175672c5ab8c55357d73bfb557350df91b702a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BreakIterator&lt;/code&gt; instances returned by the factory methods of this class are intended for use with natural languages only, not for programming language text. It is however possible to define subclasses that tokenize a programming language.</source>
          <target state="translated">&lt;code&gt;BreakIterator&lt;/code&gt; 이 클래스의 팩토리 메소드에 의해 반환되는 인스턴스 만이 아닌 언어 텍스트를 프로그래밍하기위한 자연 언어를 사용하기위한 것입니다. 그러나 프로그래밍 언어를 토큰 화하는 서브 클래스를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9270e411d3022285e3f9a3af383e96f373b9f9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferStrategy&lt;/code&gt; class represents the mechanism with which to organize complex memory on a particular &lt;code&gt;Canvas&lt;/code&gt; or &lt;code&gt;Window&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BufferStrategy&lt;/code&gt; 가의 클래스는 특정의 복잡한 메모리를 편성하는 메카니즘 나타내는 &lt;code&gt;Canvas&lt;/code&gt; 또는 &lt;code&gt;Window&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51500b7c5def900ce9b750cca1c161e61c7a050b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferStrategy&lt;/code&gt; class represents the mechanism with which to organize complex memory on a particular &lt;code&gt;Canvas&lt;/code&gt; or &lt;code&gt;Window&lt;/code&gt;. Hardware and software limitations determine whether and how a particular buffer strategy can be implemented. These limitations are detectable through the capabilities of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; used when creating the &lt;code&gt;Canvas&lt;/code&gt; or &lt;code&gt;Window&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BufferStrategy&lt;/code&gt; 가의 클래스는 특정의 복잡한 메모리를 편성하는 메카니즘 나타내는 &lt;code&gt;Canvas&lt;/code&gt; 나 &lt;code&gt;Window&lt;/code&gt; . 하드웨어 및 소프트웨어 제한은 특정 버퍼 전략의 구현 여부와 방법을 결정합니다. 이러한 제한은 &lt;code&gt;Canvas&lt;/code&gt; 또는 &lt;code&gt;Window&lt;/code&gt; 를 만들 때 사용되는 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 의 기능을 통해 감지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1171918f57a224f2f1397f10d042cd09f26bc469" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferedImage&lt;/code&gt; subclass describes an &lt;a href=&quot;../image&quot;&gt;&lt;code&gt;Image&lt;/code&gt;&lt;/a&gt; with an accessible buffer of image data.</source>
          <target state="translated">&lt;code&gt;BufferedImage&lt;/code&gt; 서브 설명은 &lt;a href=&quot;../image&quot;&gt; &lt;code&gt;Image&lt;/code&gt; &lt;/a&gt; , 이미지 데이터의 액세스 버퍼.</target>
        </trans-unit>
        <trans-unit id="78ca11756050cfcc5470b4ddce6549ee1d9d015f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferedImage&lt;/code&gt; subclass describes an &lt;a href=&quot;../image&quot;&gt;&lt;code&gt;Image&lt;/code&gt;&lt;/a&gt; with an accessible buffer of image data. A &lt;code&gt;BufferedImage&lt;/code&gt; is comprised of a &lt;a href=&quot;colormodel&quot;&gt;&lt;code&gt;ColorModel&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;raster&quot;&gt;&lt;code&gt;Raster&lt;/code&gt;&lt;/a&gt; of image data. The number and types of bands in the &lt;a href=&quot;samplemodel&quot;&gt;&lt;code&gt;SampleModel&lt;/code&gt;&lt;/a&gt; of the &lt;code&gt;Raster&lt;/code&gt; must match the number and types required by the &lt;code&gt;ColorModel&lt;/code&gt; to represent its color and alpha components. All &lt;code&gt;BufferedImage&lt;/code&gt; objects have an upper left corner coordinate of (0, 0). Any &lt;code&gt;Raster&lt;/code&gt; used to construct a &lt;code&gt;BufferedImage&lt;/code&gt; must therefore have minX=0 and minY=0.</source>
          <target state="translated">&lt;code&gt;BufferedImage&lt;/code&gt; 서브 설명은 &lt;a href=&quot;../image&quot;&gt; &lt;code&gt;Image&lt;/code&gt; &lt;/a&gt; , 이미지 데이터의 액세스 버퍼. &lt;code&gt;BufferedImage&lt;/code&gt; (A)의 구성된다 &lt;a href=&quot;colormodel&quot;&gt; &lt;code&gt;ColorModel&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;raster&quot;&gt; &lt;code&gt;Raster&lt;/code&gt; &lt;/a&gt; 화상 데이터. &lt;code&gt;Raster&lt;/code&gt; 의 &lt;a href=&quot;samplemodel&quot;&gt; &lt;code&gt;SampleModel&lt;/code&gt; &lt;/a&gt; 에있는 밴드 의 수와 유형은 &lt;code&gt;ColorModel&lt;/code&gt; 이 색상 및 알파 구성 요소를 나타내는 데 필요한 수 및 유형과 일치해야합니다 . 모든 &lt;code&gt;BufferedImage&lt;/code&gt; 객체에는 (0, 0)의 왼쪽 위 모서리 좌표가 있습니다. &lt;code&gt;BufferedImage&lt;/code&gt; 를 생성하는 데 사용되는 모든 &lt;code&gt;Raster&lt;/code&gt; 따라서 는 minX = 0 및 minY = 0이어야합니다.</target>
        </trans-unit>
        <trans-unit id="57042ad4cff84a1b91359ce1289c5881d0a64bca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferedImageFilter&lt;/code&gt; class subclasses an &lt;code&gt;ImageFilter&lt;/code&gt; to provide a simple means of using a single-source/single-destination image operator (&lt;a href=&quot;bufferedimageop&quot;&gt;&lt;code&gt;BufferedImageOp&lt;/code&gt;&lt;/a&gt;) to filter a &lt;code&gt;BufferedImage&lt;/code&gt; in the Image Producer/Consumer/Observer paradigm.</source>
          <target state="translated">&lt;code&gt;BufferedImageFilter&lt;/code&gt; 된 클래스는 하위 클래스 &lt;code&gt;ImageFilter&lt;/code&gt; 단일 소스 / 단일 대상 이미지 연산자 (사용하는 간단한 수단을 제공하는 &lt;a href=&quot;bufferedimageop&quot;&gt; &lt;code&gt;BufferedImageOp&lt;/code&gt; 와를&lt;/a&gt; 필터하는) &lt;code&gt;BufferedImage&lt;/code&gt; 를 이미지 생산자 / 소비자 / 옵저버 패러다임을.</target>
        </trans-unit>
        <trans-unit id="b893ee2e0f33714ff252b8fd0fab7bade1b1a7c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferedImageFilter&lt;/code&gt; class subclasses an &lt;code&gt;ImageFilter&lt;/code&gt; to provide a simple means of using a single-source/single-destination image operator (&lt;a href=&quot;bufferedimageop&quot;&gt;&lt;code&gt;BufferedImageOp&lt;/code&gt;&lt;/a&gt;) to filter a &lt;code&gt;BufferedImage&lt;/code&gt; in the Image Producer/Consumer/Observer paradigm. Examples of these image operators are: &lt;a href=&quot;convolveop&quot;&gt;&lt;code&gt;ConvolveOp&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;affinetransformop&quot;&gt;&lt;code&gt;AffineTransformOp&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;lookupop&quot;&gt;&lt;code&gt;LookupOp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;BufferedImageFilter&lt;/code&gt; 된 클래스는 하위 클래스 &lt;code&gt;ImageFilter&lt;/code&gt; 단일 소스 / 단일 대상 이미지 연산자 (사용하는 간단한 수단을 제공하는 &lt;a href=&quot;bufferedimageop&quot;&gt; &lt;code&gt;BufferedImageOp&lt;/code&gt; 와를&lt;/a&gt; 필터하는) &lt;code&gt;BufferedImage&lt;/code&gt; 의 이미지 생산자 / 소비자 / 옵저버 패러다임을. 이러한 이미지 연산자의 예 : &lt;a href=&quot;convolveop&quot;&gt; &lt;code&gt;ConvolveOp&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;affinetransformop&quot;&gt; &lt;code&gt;AffineTransformOp&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;lookupop&quot;&gt; &lt;code&gt;LookupOp&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="26575ce7aa6f5dba044d1067a9237fc3d869b533" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Byte&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;byte&lt;/code&gt; in an object.</source>
          <target state="translated">&lt;code&gt;Byte&lt;/code&gt; 클래스 프리미티브 타입의 값 랩 &lt;code&gt;byte&lt;/code&gt; 객체하여.</target>
        </trans-unit>
        <trans-unit id="daee07dd88e16b4a70774f8e2ee84b6a66a8d825" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Byte&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;byte&lt;/code&gt; in an object. An object of type &lt;code&gt;Byte&lt;/code&gt; contains a single field whose type is &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Byte&lt;/code&gt; 클래스 프리미티브 타입의 값 랩 &lt;code&gt;byte&lt;/code&gt; 객체하여. &lt;code&gt;Byte&lt;/code&gt; 유형의 객체 에는 유형이 &lt;code&gt;byte&lt;/code&gt; 인 단일 필드가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="246a27bb52c9d19aae02b846fc0dc428cf5b127e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CDATASection&lt;/code&gt; interface inherits from the &lt;code&gt;CharacterData&lt;/code&gt; interface through the &lt;code&gt;Text&lt;/code&gt; interface. Adjacent &lt;code&gt;CDATASection&lt;/code&gt; nodes are not merged by use of the &lt;code&gt;normalize&lt;/code&gt; method of the &lt;code&gt;Node&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;CDATASection&lt;/code&gt; 로부터 인터페이스 상속 &lt;code&gt;CharacterData&lt;/code&gt; 를의 스루 인터페이스 &lt;code&gt;Text&lt;/code&gt; 인터페이스를 제공합니다. 인접한 &lt;code&gt;CDATASection&lt;/code&gt; 노드는 &lt;code&gt;Node&lt;/code&gt; 의 &lt;code&gt;normalize&lt;/code&gt; 메소드를 사용하여 병합되지 않습니다. 인터페이스 .</target>
        </trans-unit>
        <trans-unit id="45403e90906b6fa81b2360420a874f817c98e7b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CachedRowSet&lt;/code&gt; interface also defines the method &lt;code&gt;previousPage&lt;/code&gt;. Just as the method &lt;code&gt;nextPage&lt;/code&gt; is analogous to the &lt;code&gt;ResultSet&lt;/code&gt; method &lt;code&gt;next&lt;/code&gt;, the method &lt;code&gt;previousPage&lt;/code&gt; is analogous to the &lt;code&gt;ResultSet&lt;/code&gt; method &lt;code&gt;previous&lt;/code&gt;. Similar to the method &lt;code&gt;nextPage&lt;/code&gt;, &lt;code&gt;previousPage&lt;/code&gt; creates a &lt;code&gt;CachedRowSet&lt;/code&gt; object containing the number of rows set as the page size. So, for instance, the method &lt;code&gt;previousPage&lt;/code&gt; could be used in a &lt;code&gt;while&lt;/code&gt; loop at the end of the preceding code fragment to navigate back through the pages from the last page to the first page. The method &lt;code&gt;previousPage&lt;/code&gt; is also similar to &lt;code&gt;nextPage&lt;/code&gt; in that it can be used in a &lt;code&gt;while&lt;/code&gt; loop, except that it returns &lt;code&gt;true&lt;/code&gt; as long as there is another page preceding it and &lt;code&gt;false&lt;/code&gt; when there are no more pages ahead of it.</source>
          <target state="translated">&lt;code&gt;CachedRowSet&lt;/code&gt; 인터페이스는 메소드 정의 &lt;code&gt;previousPage&lt;/code&gt; 을 . &lt;code&gt;nextPage&lt;/code&gt; 메소드 가 &lt;code&gt;ResultSet&lt;/code&gt; 메소드 &lt;code&gt;next&lt;/code&gt; 와 유사 하듯이, &lt;code&gt;previousPage&lt;/code&gt; 메소드는 &lt;code&gt;previous&lt;/code&gt; &lt;code&gt;ResultSet&lt;/code&gt; 메소드 와 유사합니다 . 방법과 유사한 &lt;code&gt;nextPage&lt;/code&gt; , &lt;code&gt;previousPage&lt;/code&gt; 는 생성 &lt;code&gt;CachedRowSet&lt;/code&gt; 페이지 크기로 설정된 행의 수를 포함하는 개체. 예를 들어, &lt;code&gt;previousPage&lt;/code&gt; 메소드 는 &lt;code&gt;while&lt;/code&gt; 사용될 수 있습니다.앞의 코드 조각의 끝에서 루프를 실행하여 마지막 페이지에서 첫 번째 페이지로 페이지를 다시 탐색합니다. &lt;code&gt;previousPage&lt;/code&gt; 메서드 는 또한 &lt;code&gt;while&lt;/code&gt; 루프 에서 사용할 수 있다는 점에서 &lt;code&gt;nextPage&lt;/code&gt; 와 유사합니다 . 단, 앞에 다른 페이지가 있으면 &lt;code&gt;true&lt;/code&gt; 를 반환하고 앞에 페이지 가 더 이상 없으면 &lt;code&gt;false&lt;/code&gt; 를 반환한다는 점이 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="086daf6283fb4f73e97652af102c13277eb9b3cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Calendar&lt;/code&gt; class is an abstract class that provides methods for converting between a specific instant in time and a set of &lt;a href=&quot;#fields&quot;&gt;&lt;code&gt;calendar fields&lt;/code&gt;&lt;/a&gt; such as &lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH&lt;/code&gt;, &lt;code&gt;DAY_OF_MONTH&lt;/code&gt;, &lt;code&gt;HOUR&lt;/code&gt;, and so on, and for manipulating the calendar fields, such as getting the date of the next week. An instant in time can be represented by a millisecond value that is an offset from the &lt;a id=&quot;Epoch&quot;&gt;&lt;em&gt;Epoch&lt;/em&gt;&lt;/a&gt;, January 1, 1970 00:00:00.000 GMT (Gregorian).</source>
          <target state="translated">&lt;code&gt;Calendar&lt;/code&gt; 클래스는 특정 시간 인스턴트와 세트 사이에 변환하기위한 방법을 제공하는 추상 클래스입니다 &lt;a href=&quot;#fields&quot;&gt; &lt;code&gt;calendar fields&lt;/code&gt; &lt;/a&gt; 와 같은 &lt;code&gt;YEAR&lt;/code&gt; , &lt;code&gt;MONTH&lt;/code&gt; , &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; , &lt;code&gt;HOUR&lt;/code&gt; , 등등과 같은 날짜를 얻는 등의 달력 필드를 조작하기위한 다음 주. 순간은 &lt;a id=&quot;Epoch&quot;&gt;&lt;em&gt;Epoch&lt;/em&gt;&lt;/a&gt; 의 오프셋 인 밀리 초 값으로 표현 될 수 있습니다.&lt;em&gt;&lt;/em&gt; , 1970 년 1 월 1 일 00 : 00 : 00.000 GMT (Gregorian) .</target>
        </trans-unit>
        <trans-unit id="c827bcb764af6d14358870b4c02cf9f314c2a1cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Calendar&lt;/code&gt; class is an abstract class that provides methods for converting between a specific instant in time and a set of &lt;a href=&quot;calendar#fields&quot;&gt;&lt;code&gt;calendar fields&lt;/code&gt;&lt;/a&gt; such as &lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH&lt;/code&gt;, &lt;code&gt;DAY_OF_MONTH&lt;/code&gt;, &lt;code&gt;HOUR&lt;/code&gt;, and so on, and for manipulating the calendar fields, such as getting the date of the next week.</source>
          <target state="translated">&lt;code&gt;Calendar&lt;/code&gt; 클래스는 특정 시간 인스턴트와 세트 사이에 변환하기위한 방법을 제공하는 추상 클래스입니다 &lt;a href=&quot;calendar#fields&quot;&gt; &lt;code&gt;calendar fields&lt;/code&gt; &lt;/a&gt; 와 같은 &lt;code&gt;YEAR&lt;/code&gt; , &lt;code&gt;MONTH&lt;/code&gt; , &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; , &lt;code&gt;HOUR&lt;/code&gt; , 등등과 같은 날짜를 얻는 등의 달력 필드를 조작하기위한 다음 주에</target>
        </trans-unit>
        <trans-unit id="e16a5c9a51c0c49e784ca00cfe336ed3439953f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Calendar&lt;/code&gt; class is an abstract class that provides methods for converting between a specific instant in time and a set of &lt;a href=&quot;calendar#fields&quot;&gt;&lt;code&gt;calendar fields&lt;/code&gt;&lt;/a&gt; such as &lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH&lt;/code&gt;, &lt;code&gt;DAY_OF_MONTH&lt;/code&gt;, &lt;code&gt;HOUR&lt;/code&gt;, and so on, and for manipulating the calendar fields, such as getting the date of the next week. An instant in time can be represented by a millisecond value that is an offset from the &lt;a name=&quot;Epoch&quot;&gt;&lt;em&gt;Epoch&lt;/em&gt;&lt;/a&gt;, January 1, 1970 00:00:00.000 GMT (Gregorian).</source>
          <target state="translated">&lt;code&gt;Calendar&lt;/code&gt; 클래스는 특정 시간 인스턴트와 세트 사이에 변환하기위한 방법을 제공하는 추상 클래스입니다 &lt;a href=&quot;calendar#fields&quot;&gt; &lt;code&gt;calendar fields&lt;/code&gt; &lt;/a&gt; 와 같은 &lt;code&gt;YEAR&lt;/code&gt; , &lt;code&gt;MONTH&lt;/code&gt; , &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; , &lt;code&gt;HOUR&lt;/code&gt; , 등등과 같은 날짜를 얻는 등의 달력 필드를 조작하기위한 다음 주에 시간은 1970 년 1 월 1 일 00 : 00 : 00.000 GMT (그레고리 안) 의 &lt;a name=&quot;Epoch&quot;&gt;&lt;em&gt;Epoch&lt;/em&gt;&lt;/a&gt; 에서 오프셋 인 밀리 초 값으로 나타낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="46f676ce0c4f91d6ea5cdaa0c0eeb686651fe70a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Calendar&lt;/code&gt; parameters are the values represented by the &lt;code&gt;isLenient&lt;/code&gt;, &lt;code&gt;getFirstDayOfWeek&lt;/code&gt;, &lt;code&gt;getMinimalDaysInFirstWeek&lt;/code&gt; and &lt;code&gt;getTimeZone&lt;/code&gt; methods. If there is any difference in those parameters between the two &lt;code&gt;Calendar&lt;/code&gt;s, this method returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Calendar&lt;/code&gt; 매개 변수로 표시되는 값이다 &lt;code&gt;isLenient&lt;/code&gt; , &lt;code&gt;getFirstDayOfWeek&lt;/code&gt; ()로 , &lt;code&gt;getMinimalDaysInFirstWeek&lt;/code&gt; 및 &lt;code&gt;getTimeZone&lt;/code&gt; 의 방법. 두 &lt;code&gt;Calendar&lt;/code&gt; 간에 해당 매개 변수에 차이가 있으면 이 메서드는 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="03f65fae6f6d35c57712e1b5d06c5ce4521fef51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Callable&lt;/code&gt; interface is similar to &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt;, in that both are designed for classes whose instances are potentially executed by another thread. A &lt;code&gt;Runnable&lt;/code&gt;, however, does not return a result and cannot throw a checked exception.</source>
          <target state="translated">&lt;code&gt;Callable&lt;/code&gt; 인터페이스 비슷 &lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; 을&lt;/a&gt; 모두 가진 경우 잠재적으로 다른 스레드에 의해 실행되는 클래스 설계에 있음. &lt;code&gt;Runnable&lt;/code&gt; , 그러나, 그 결과를 반환하지 않습니다 및 체크 예외를 던질 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2fd30e66fda8ef1c3878a705a006694493584387" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CertPath&lt;/code&gt; specified must be of a type that is supported by the validation algorithm, otherwise an &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; will be thrown. For example, a &lt;code&gt;CertPathValidator&lt;/code&gt; that implements the PKIX algorithm validates &lt;code&gt;CertPath&lt;/code&gt; objects of type X.509.</source>
          <target state="translated">&lt;code&gt;CertPath&lt;/code&gt; 검증 알고리즘에 의해 지원되는 형식이어야 지정은, 그렇지 않은 경우 &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; 발생합니다. 예를 들어, PKIX 알고리즘을 구현 하는 &lt;code&gt;CertPathValidator&lt;/code&gt; 는 X.509 유형의 &lt;code&gt;CertPath&lt;/code&gt; 객체를 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="36926f67fdea989d87063408fa653e4dfdb427d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CertStore&lt;/code&gt; that is returned is initialized with the specified &lt;code&gt;CertStoreParameters&lt;/code&gt;. The type of parameters needed may vary between different types of &lt;code&gt;CertStore&lt;/code&gt;s. Note that the specified &lt;code&gt;CertStoreParameters&lt;/code&gt; object is cloned.</source>
          <target state="translated">리턴 된 &lt;code&gt;CertStore&lt;/code&gt; 는 지정된 &lt;code&gt;CertStoreParameters&lt;/code&gt; 로 초기화 됩니다 . 필요한 매개 변수 유형은 &lt;code&gt;CertStore&lt;/code&gt; 유형에 따라 다를 수 있습니다 . 지정된 &lt;code&gt;CertStoreParameters&lt;/code&gt; 객체가 복제됩니다.</target>
        </trans-unit>
        <trans-unit id="101822df3975adbcac61dad375ef170c3dd3f9ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Character&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;char&lt;/code&gt; in an object.</source>
          <target state="translated">&lt;code&gt;Character&lt;/code&gt; 클래스는 기본 입력 값 랩 &lt;code&gt;char&lt;/code&gt; 오브젝트하여.</target>
        </trans-unit>
        <trans-unit id="59ef79f44cd9b5450b6ba9539fe681757de0acb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Character&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;char&lt;/code&gt; in an object. An object of class &lt;code&gt;Character&lt;/code&gt; contains a single field whose type is &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Character&lt;/code&gt; 클래스는 기본 입력 값 랩 &lt;code&gt;char&lt;/code&gt; 오브젝트하여. &lt;code&gt;Character&lt;/code&gt; 클래스의 객체는 유형이 &lt;code&gt;char&lt;/code&gt; 인 단일 필드를 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="806bb96887766953bebd866e27ce9d8da08b4334" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Character&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;char&lt;/code&gt; in an object. An object of type &lt;code&gt;Character&lt;/code&gt; contains a single field whose type is &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Character&lt;/code&gt; 클래스는 기본 입력 값 랩 &lt;code&gt;char&lt;/code&gt; 오브젝트하여. &lt;code&gt;Character&lt;/code&gt; 유형의 객체 에는 유형이 &lt;code&gt;char&lt;/code&gt; 인 단일 필드가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="068ebf45f3b262fc7cfb61d8411795e62f12fe53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CharacterData.data&lt;/code&gt; attribute holds the text that is contained by the CDATA section. Note that this &lt;em&gt;may&lt;/em&gt; contain characters that need to be escaped outside of CDATA sections and that, depending on the character encoding (&quot;charset&quot;) chosen for serialization, it may be impossible to write out some characters as part of a CDATA section.</source>
          <target state="translated">&lt;code&gt;CharacterData.data&lt;/code&gt; 의 속성은 CDATA 섹션에 포함되는 텍스트를 보유하고 있습니다. 참고이 그 &lt;em&gt;수도&lt;/em&gt; 에는 CDATA 섹션 외부에서 이스케이프해야하는 문자 포함될 있으며 직렬화를 위해 선택한 문자 인코딩 ( &quot;charset&quot;)에 따라 일부 문자를 CDATA 섹션의 일부로 작성하는 것이 불가능할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d7639ef9026d824ebeafafaa00bc06da11cf51ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CharacterData&lt;/code&gt; interface extends Node with a set of attributes and methods for accessing character data in the DOM.</source>
          <target state="translated">&lt;code&gt;CharacterData&lt;/code&gt; 를의 인터페이스는 DOM 내의 문자 데이터에 액세스 속성 및 메소드 세트 노드를 확장한다.</target>
        </trans-unit>
        <trans-unit id="40ffb9de6c7b636f3605b56c1a0d9b79d969550c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CharacterData&lt;/code&gt; interface extends Node with a set of attributes and methods for accessing character data in the DOM. For clarity this set is defined here rather than on each object that uses these attributes and methods. No DOM objects correspond directly to &lt;code&gt;CharacterData&lt;/code&gt;, though &lt;code&gt;Text&lt;/code&gt; and others do inherit the interface from it. All &lt;code&gt;offsets&lt;/code&gt; in this interface start from &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CharacterData&lt;/code&gt; 를의 인터페이스는 DOM 내의 문자 데이터에 액세스 속성 및 메소드 세트 노드를 확장한다. 명확성을 위해이 집합은 이러한 특성과 메서드를 사용하는 각 개체가 아니라 여기에서 정의됩니다. 어떤 DOM 객체도 &lt;code&gt;CharacterData&lt;/code&gt; 에 직접 대응 하지 않지만 &lt;code&gt;Text&lt;/code&gt; 및 다른 객체 는 인터페이스를 상속합니다. 이 인터페이스의 모든 &lt;code&gt;offsets&lt;/code&gt; 은 &lt;code&gt;0&lt;/code&gt; 에서 시작 합니다.</target>
        </trans-unit>
        <trans-unit id="22f50e4a07350a988c3b8d5223aec95aff93c7ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CheckboxGroup&lt;/code&gt; class is used to group together a set of &lt;code&gt;Checkbox&lt;/code&gt; buttons.</source>
          <target state="translated">&lt;code&gt;CheckboxGroup&lt;/code&gt; 의 클래스 그룹화를 설정하는 데 사용되는 &lt;code&gt;Checkbox&lt;/code&gt; 버튼.</target>
        </trans-unit>
        <trans-unit id="4c6b961850ab9fa432a7eefe889be3fe47bd988d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Choice&lt;/code&gt; class presents a pop-up menu of choices.</source>
          <target state="translated">&lt;code&gt;Choice&lt;/code&gt; 클래스 선물 선택의 팝업 메뉴.</target>
        </trans-unit>
        <trans-unit id="b19af052bb34ceaf06a5ee3ac49af9e25d0f093a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Choice&lt;/code&gt; class presents a pop-up menu of choices. The current choice is displayed as the title of the menu.</source>
          <target state="translated">&lt;code&gt;Choice&lt;/code&gt; 클래스 선물 선택의 팝업 메뉴. 현재 선택 항목이 메뉴 제목으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="ba3268238d079e4b2a6a12991e41beae19670cb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ChronoField&lt;/code&gt; date and time fields are re-resolved. This allows fields in step four to produce &lt;code&gt;ChronoField&lt;/code&gt; values and have them be processed into dates and times.</source>
          <target state="translated">&lt;code&gt;ChronoField&lt;/code&gt; 의 날짜와 시간 필드가 다시 확인됩니다. 이를 통해 4 단계의 필드가 &lt;code&gt;ChronoField&lt;/code&gt; 값 을 생성 하고 날짜 및 시간으로 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="b0898653f339c4545cc086be6fd8ad09ad6ee506" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ChronoField&lt;/code&gt; date fields are resolved. This is achieved using &lt;a href=&quot;../chrono/chronology#resolveDate(java.util.Map,java.time.format.ResolverStyle)&quot;&gt;&lt;code&gt;Chronology.resolveDate(Map, ResolverStyle)&lt;/code&gt;&lt;/a&gt;. Documentation about field resolution is located in the implementation of &lt;code&gt;Chronology&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ChronoField&lt;/code&gt; 의 날짜 필드가 해결됩니다. 이것은 &lt;a href=&quot;../chrono/chronology#resolveDate(java.util.Map,java.time.format.ResolverStyle)&quot;&gt; &lt;code&gt;Chronology.resolveDate(Map, ResolverStyle)&lt;/code&gt; &lt;/a&gt; 사용하여 수행됩니다 . 필드 해결에 대한 문서는 &lt;code&gt;Chronology&lt;/code&gt; 구현에 있습니다.</target>
        </trans-unit>
        <trans-unit id="96e6680c1b998ca327d4d17aedbccdccc167dbcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ChronoField&lt;/code&gt; date fields are resolved. This is achieved using &lt;a href=&quot;../chrono/chronology#resolveDate-java.util.Map-java.time.format.ResolverStyle-&quot;&gt;&lt;code&gt;Chronology.resolveDate(Map, ResolverStyle)&lt;/code&gt;&lt;/a&gt;. Documentation about field resolution is located in the implementation of &lt;code&gt;Chronology&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ChronoField&lt;/code&gt; 의 날짜 필드가 해결됩니다. 이것은 &lt;a href=&quot;../chrono/chronology#resolveDate-java.util.Map-java.time.format.ResolverStyle-&quot;&gt; &lt;code&gt;Chronology.resolveDate(Map, ResolverStyle)&lt;/code&gt; &lt;/a&gt; 사용하여 달성됩니다 . 필드 분석에 대한 문서는 &lt;code&gt;Chronology&lt;/code&gt; 구현에 있습니다.</target>
        </trans-unit>
        <trans-unit id="89d1beeae57332f5351b6ab29fde209df635e987" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ChronoField&lt;/code&gt; time fields are resolved. This is documented on &lt;a href=&quot;../temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; and is the same for all chronologies.</source>
          <target state="translated">&lt;code&gt;ChronoField&lt;/code&gt; 의 시간 필드는 해결됩니다. 이것은 &lt;a href=&quot;../temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; 에&lt;/a&gt; 문서화되어 있으며 모든 연대기에서 동일합니다.</target>
        </trans-unit>
        <trans-unit id="82381a07b897d845e38a8fb6d968a572a981dcd1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Chronology&lt;/code&gt; instance provides a set of methods to create &lt;code&gt;ChronoLocalDate&lt;/code&gt; instances. The date classes are used to manipulate specific dates.</source>
          <target state="translated">&lt;code&gt;Chronology&lt;/code&gt; 인스턴스를 생성하는 메소드 세트 제공 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 의 인스턴스를. 날짜 클래스는 특정 날짜를 조작하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b67dfb19ed132a488f7220fb4dc014c909b089ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Chronology&lt;/code&gt; represents the calendar system in use. The ISO-8601 calendar system is the modern civil calendar system used today in most of the world. It is equivalent to the proleptic Gregorian calendar system, in which today's rules for leap years are applied for all time.</source>
          <target state="translated">&lt;code&gt;Chronology&lt;/code&gt; 사용하고있는 달력 시스템을 나타냅니다. ISO-8601 캘린더 시스템은 오늘날 대부분의 세계에서 사용되는 최신 민사 캘린더 시스템입니다. 그것은 윤년에 대한 오늘의 규칙이 모든 시간에 적용되는 다발성 그레고리력 시스템과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="4197e57743f21fd2a15f8483e9ed9b922aac9ed3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Chronology&lt;/code&gt; represents the calendar system in use. The era and other fields in &lt;a href=&quot;../temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; are defined by the chronology.</source>
          <target state="translated">&lt;code&gt;Chronology&lt;/code&gt; 사용하고있는 달력 시스템을 나타냅니다. &lt;a href=&quot;../temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; &lt;/a&gt; 의 시대와 다른 필드 는 연대기에 의해 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="9ec2677d771f2243453abd3744eafeaaa8cc23f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 원시적 형태 나타내는 예를 &lt;code&gt;byte&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5d8434bc0489103ac32d773f7b0d5d3c71265f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 원시적 형태 나타내는 경우 &lt;code&gt;char&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0b196d2877a10ae544eb517c91cdc98d354fe55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 원시적 형태를 나타내는 인스턴스를 &lt;code&gt;double&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fc9063456a087c6ae2a09f36b8c79ce72af8fe4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 원시적 형태 나타내는 예를 &lt;code&gt;float&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="843262d0d1248a1926078c82957df1906c06c701" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 원시적 형태 나타내는 예 &lt;code&gt;int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f85e50e9d096ed50998edbe6558f68b79f3e5d09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 원시적 형을 나타내는 예를 &lt;code&gt;long&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06ed2f03cfacda7175bed94156559a38e6923b0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 원시적 형태 나타내는 예 &lt;code&gt;short&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e8ca9880dd30af6f9980e4a0d93f1ee703afc95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object created from the data, and &lt;code&gt;ProtectionDomain&lt;/code&gt;.</source>
          <target state="translated">데이터에서 생성 된 &lt;code&gt;Class&lt;/code&gt; 객체 및 &lt;code&gt;ProtectionDomain&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0bddc54347ed58d9c0c85b45c41a02b37fd779ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object created from the data, and optional &lt;code&gt;ProtectionDomain&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 데이터로부터 생성 된 객체, 옵션 &lt;code&gt;ProtectionDomain&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e690995fffbb2c3b6c4761982fccbec41cd68fda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object for the specified &lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">지정된 &lt;code&gt;name&lt;/code&gt; 의 &lt;code&gt;Class&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="23dcb43f82d588ed515276419645673633932ecc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object representing the pseudo-type corresponding to the keyword &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 키워드에 해당하는 의사 형을 나타내는 개체 &lt;code&gt;void&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d08a4d00bff7d8642e575b877c58fa1bcc6f66c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object that represents the runtime class of this object.</source>
          <target state="translated">이 객체의 런타임 클래스를 나타내는 &lt;code&gt;Class&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="1a36611cde5a9560399b57b3e163d1767e367923" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object that was created from the specified class data</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 지정된 클래스 데이터로부터 작성된 오브젝트</target>
        </trans-unit>
        <trans-unit id="f80f806d21a19e64a5fdd872d0ac53f89e33de6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object that was created from the specified class data.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 지정된 클래스 데이터로부터 생성 된 객체입니다.</target>
        </trans-unit>
        <trans-unit id="4584f55b815597f64d3b967ed1a51e3f17ff42f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object, or &lt;code&gt;null&lt;/code&gt; if the class has not been loaded</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 객체 또는 &lt;code&gt;null&lt;/code&gt; 클래스가로드되어 있지 않은 경우</target>
        </trans-unit>
        <trans-unit id="53769dc20c24f269ab332a337f22729fbb2a017c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ClassLoader&lt;/code&gt; class uses a delegation model to search for classes and resources. Each instance of &lt;code&gt;ClassLoader&lt;/code&gt; has an associated parent class loader. When requested to find a class or resource, a &lt;code&gt;ClassLoader&lt;/code&gt; instance will delegate the search for the class or resource to its parent class loader before attempting to find the class or resource itself. The virtual machine's built-in class loader, called the &quot;bootstrap class loader&quot;, does not itself have a parent but may serve as the parent of a &lt;code&gt;ClassLoader&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;ClassLoader&lt;/code&gt; 클래스는 클래스 및 자원을 검색하기 위해 위임 모델을 사용합니다. &lt;code&gt;ClassLoader&lt;/code&gt; 의 각 인스턴스 에는 연결된 상위 클래스 로더가 있습니다. 클래스 또는 리소스를 찾도록 요청되면 &lt;code&gt;ClassLoader&lt;/code&gt; 인스턴스는 클래스 또는 리소스 자체를 찾기 전에 클래스 또는 리소스 검색을 부모 클래스 로더에 위임합니다. &quot;부트 스트랩 클래스 로더&quot;라고하는 가상 머신의 내장 클래스 로더에는 상위가 없지만 &lt;code&gt;ClassLoader&lt;/code&gt; 인스턴스 의 상위 역할을 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7675cfccc95d9f3e4a5e2b0b965767e502acc618" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ClassLoader&lt;/code&gt; class uses a delegation model to search for classes and resources. Each instance of &lt;code&gt;ClassLoader&lt;/code&gt; has an associated parent class loader. When requested to find a class or resource, a &lt;code&gt;ClassLoader&lt;/code&gt; instance will usually delegate the search for the class or resource to its parent class loader before attempting to find the class or resource itself.</source>
          <target state="translated">&lt;code&gt;ClassLoader&lt;/code&gt; 클래스는 클래스 및 자원을 검색하기 위해 위임 모델을 사용합니다. &lt;code&gt;ClassLoader&lt;/code&gt; 의 각 인스턴스 에는 연결된 상위 클래스 로더가 있습니다. 클래스 또는 리소스를 찾기 위해 요청되면 &lt;code&gt;ClassLoader&lt;/code&gt; 인스턴스는 일반적으로 클래스 또는 리소스 자체를 찾기 전에 클래스 또는 리소스에 대한 검색을 부모 클래스 로더에 위임합니다.</target>
        </trans-unit>
        <trans-unit id="7baf7494690c1ab3f8e2f12b250cac6e80e44abb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Clip&lt;/code&gt; interface represents a special kind of data line whose audio data can be loaded prior to playback, instead of being streamed in real time.</source>
          <target state="translated">&lt;code&gt;Clip&lt;/code&gt; 인터페이스는 존재가 실시간으로 스트리밍하는 대신, 오디오 데이터 재생 전에로드 할 수 있습니다 특수한 종류의 데이터 라인을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6af58165956634b3a8bd98f0b10e843e579a86b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Clob&lt;/code&gt; interface provides methods for getting the length of an SQL &lt;code&gt;CLOB&lt;/code&gt; (Character Large Object) value, for materializing a &lt;code&gt;CLOB&lt;/code&gt; value on the client, and for searching for a substring or &lt;code&gt;CLOB&lt;/code&gt; object within a &lt;code&gt;CLOB&lt;/code&gt; value. Methods in the interfaces &lt;a href=&quot;resultset&quot;&gt;&lt;code&gt;ResultSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;callablestatement&quot;&gt;&lt;code&gt;CallableStatement&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;preparedstatement&quot;&gt;&lt;code&gt;PreparedStatement&lt;/code&gt;&lt;/a&gt;, such as &lt;code&gt;getClob&lt;/code&gt; and &lt;code&gt;setClob&lt;/code&gt; allow a programmer to access an SQL &lt;code&gt;CLOB&lt;/code&gt; value. In addition, this interface has methods for updating a &lt;code&gt;CLOB&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;Clob&lt;/code&gt; 인터페이스는 SQL의 길이를 취득하기위한 방법을 제공 &lt;code&gt;CLOB&lt;/code&gt; 구체화를 들어, (문자 대형 오브젝트) 값을 &lt;code&gt;CLOB&lt;/code&gt; 의 , 그리고 문자열 또는 검색을 위해 클라이언트에서 값을 &lt;code&gt;CLOB&lt;/code&gt; 의 내에서 객체 &lt;code&gt;CLOB&lt;/code&gt; 의 값입니다. &lt;a href=&quot;resultset&quot;&gt; &lt;code&gt;ResultSet&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;callablestatement&quot;&gt; &lt;code&gt;CallableStatement&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;preparedstatement&quot;&gt; &lt;code&gt;PreparedStatement&lt;/code&gt; &lt;/a&gt; 인터페이스의 메소드 ( 예 : &lt;code&gt;getClob&lt;/code&gt; 및 &lt;code&gt;setClob&lt;/code&gt; )를 사용하면 프로그래머가 SQL &lt;code&gt;CLOB&lt;/code&gt; 값 에 액세스 할 수 있습니다 . 또한이 인터페이스에는 &lt;code&gt;CLOB&lt;/code&gt; 값 을 업데이트하는 메서드가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="07dd3f9173350c44103b58ad3909560986b18dcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CodecSet&lt;/code&gt; class creates and saves a single service instance at initialization:</source>
          <target state="translated">&lt;code&gt;CodecSet&lt;/code&gt; 의 클래스는 생성 및 초기화에 하나의 서비스 인스턴스를 저장합니다</target>
        </trans-unit>
        <trans-unit id="cf493d6742a6c242a0b1d360dfba83fb4b87d243" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CollationElementIterator&lt;/code&gt; class is used as an iterator to walk through each character of an international string.</source>
          <target state="translated">&lt;code&gt;CollationElementIterator&lt;/code&gt; 의 클래스는 국제 문자열의 각 문자를 처리 할 때의 반복자로서 사용된다.</target>
        </trans-unit>
        <trans-unit id="46ce50a913e7c2a368bfe8ae348e20f4b0760cdc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CollationElementIterator&lt;/code&gt; class is used as an iterator to walk through each character of an international string. Use the iterator to return the ordering priority of the positioned character. The ordering priority of a character, which we refer to as a key, defines how a character is collated in the given collation object.</source>
          <target state="translated">&lt;code&gt;CollationElementIterator&lt;/code&gt; 의 클래스는 국제 문자열의 각 문자를 처리 할 때의 반복자로서 사용된다. 반복자를 사용하여 배치 된 문자의 순서 우선 순위를 리턴하십시오. 키라고하는 문자의 순서 우선 순위는 주어진 데이터 정렬 개체에서 문자를 정렬하는 방법을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="7933f59bdf875c37eb441af7f9a60a666a8d3fcd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Collator&lt;/code&gt; class performs locale-sensitive &lt;code&gt;String&lt;/code&gt; comparison.</source>
          <target state="translated">&lt;code&gt;Collator&lt;/code&gt; 클래스의 수행은 로케일에 의존하는 &lt;code&gt;String&lt;/code&gt; 비교.</target>
        </trans-unit>
        <trans-unit id="bb398f128eef70308b7f92e45e6eb18ce6533c73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Collator&lt;/code&gt; class performs locale-sensitive &lt;code&gt;String&lt;/code&gt; comparison. You use this class to build searching and sorting routines for natural language text.</source>
          <target state="translated">&lt;code&gt;Collator&lt;/code&gt; 클래스의 수행은 로케일에 의존하는 &lt;code&gt;String&lt;/code&gt; 비교. 이 클래스를 사용하여 자연어 텍스트에 대한 검색 및 정렬 루틴을 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="ff9824bbcacb67b79596d130b57096444e5903bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Collection&lt;/code&gt; is &lt;b&gt;not&lt;/b&gt; copied. Instead, a reference is used. This allows the caller to subsequently add or remove &lt;code&gt;Certificates&lt;/code&gt; or &lt;code&gt;CRL&lt;/code&gt;s from the &lt;code&gt;Collection&lt;/code&gt;, thus changing the set of &lt;code&gt;Certificates&lt;/code&gt; or &lt;code&gt;CRL&lt;/code&gt;s available to the Collection &lt;code&gt;CertStore&lt;/code&gt;. The Collection &lt;code&gt;CertStore&lt;/code&gt; will not modify the contents of the &lt;code&gt;Collection&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Collection&lt;/code&gt; 되어 &lt;b&gt;있지&lt;/b&gt; 복사. 대신 참조가 사용됩니다. 이것에 의해, 호출 측은 , &lt;code&gt;Collection&lt;/code&gt; &lt;code&gt;Certificates&lt;/code&gt; 또는 &lt;code&gt;CRL&lt;/code&gt; 을 추가 또는 삭제할 수있어, Collection &lt;code&gt;CertStore&lt;/code&gt; 에 이용 가능한 &lt;code&gt;Certificates&lt;/code&gt; 또는 &lt;code&gt;CRL&lt;/code&gt; 세트가 변경 됩니다 . 컬렉션 &lt;code&gt;CertStore&lt;/code&gt; 의 내용을 수정하지 않습니다 &lt;code&gt;Collection&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c69073fb9b03a0f7c9780da4af3a0f3feb090b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Color&lt;/code&gt; class is used to encapsulate colors in the default sRGB color space or colors in arbitrary color spaces identified by a &lt;a href=&quot;color/colorspace&quot;&gt;&lt;code&gt;ColorSpace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Color&lt;/code&gt; 클래스는로 식별되는 임의의 컬러 영역에 디폴트의 sRGB 색 공간이나 색상에 캡슐화 색상에 사용되는 &lt;a href=&quot;color/colorspace&quot;&gt; &lt;code&gt;ColorSpace&lt;/code&gt; 로&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="21ae54b2b1e89c6da1ec6fc0b6d472592bb788c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Color&lt;/code&gt; class is used to encapsulate colors in the default sRGB color space or colors in arbitrary color spaces identified by a &lt;a href=&quot;color/colorspace&quot;&gt;&lt;code&gt;ColorSpace&lt;/code&gt;&lt;/a&gt;. Every color has an implicit alpha value of 1.0 or an explicit one provided in the constructor. The alpha value defines the transparency of a color and can be represented by a float value in the range 0.0 - 1.0 or 0 - 255. An alpha value of 1.0 or 255 means that the color is completely opaque and an alpha value of 0 or 0.0 means that the color is completely transparent. When constructing a &lt;code&gt;Color&lt;/code&gt; with an explicit alpha or getting the color/alpha components of a &lt;code&gt;Color&lt;/code&gt;, the color components are never premultiplied by the alpha component.</source>
          <target state="translated">&lt;code&gt;Color&lt;/code&gt; 클래스는로 식별되는 임의의 컬러 영역에 디폴트의 sRGB 색 공간이나 색상에 캡슐화 색상에 사용되는 &lt;a href=&quot;color/colorspace&quot;&gt; &lt;code&gt;ColorSpace&lt;/code&gt; 로&lt;/a&gt; . 모든 색상에는 1.0의 암시 적 알파 값 또는 생성자에서 제공되는 명시 적 알파 값이 있습니다. 알파 값은 색상의 투명도를 정의하며 0.0-1.0 또는 0-255 범위의 부동 값으로 나타낼 수 있습니다. 1.0 또는 255의 알파 값은 색상이 완전히 불투명하고 알파 값이 0 또는 0.0임을 의미합니다. 색상이 완전히 투명하다는 것을 의미합니다. 구성 할 때 &lt;code&gt;Color&lt;/code&gt; 명시 적으로 알파 또는 색상 / 알파 성분지고 &lt;code&gt;Color&lt;/code&gt; , 색상 구성 요소는 알파 성분에 의해 미리 곱셈되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d8df4ba8ae0dc0f5f0355942a0c009a9a2b405bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ColorModel&lt;/code&gt; abstract class encapsulates the methods for translating a pixel value to color components (for example, red, green, and blue) and an alpha component.</source>
          <target state="translated">&lt;code&gt;ColorModel&lt;/code&gt; 의 추상 클래스 (적색, 녹색, 청색, 예) 색성분의 화소 값을 변환하는 방법 및 알파 컴포넌트를 캡슐화한다.</target>
        </trans-unit>
        <trans-unit id="10d079471072cbc9898dcdd013b52a5be906fd2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ColorModel&lt;/code&gt; abstract class encapsulates the methods for translating a pixel value to color components (for example, red, green, and blue) and an alpha component. In order to render an image to the screen, a printer, or another image, pixel values must be converted to color and alpha components. As arguments to or return values from methods of this class, pixels are represented as 32-bit ints or as arrays of primitive types. The number, order, and interpretation of color components for a &lt;code&gt;ColorModel&lt;/code&gt; is specified by its &lt;code&gt;ColorSpace&lt;/code&gt;. A &lt;code&gt;ColorModel&lt;/code&gt; used with pixel data that does not include alpha information treats all pixels as opaque, which is an alpha value of 1.0.</source>
          <target state="translated">&lt;code&gt;ColorModel&lt;/code&gt; 의 추상 클래스 (적색, 녹색, 청색, 예) 색성분의 화소 값을 변환하는 방법 및 알파 컴포넌트를 캡슐화한다. 이미지를 화면, 프린터 또는 다른 이미지로 렌더링하려면 픽셀 값을 색상 및 알파 구성 요소로 변환해야합니다. 이 클래스의 메서드에 대한 인수 또는 반환 값으로 픽셀은 32 비트 정수 또는 기본 유형의 배열로 표시됩니다. &lt;code&gt;ColorModel&lt;/code&gt; 색상 구성 요소의 수, 순서 및 해석은 &lt;code&gt;ColorSpace&lt;/code&gt; 에 의해 지정됩니다 . &lt;code&gt;ColorModel&lt;/code&gt; 알파 정보 취급 1.0의 알파 값이 불투명 모든 화소를 포함하지 않는 화소 데이터에 사용된다.</target>
        </trans-unit>
        <trans-unit id="d35f3c2bfd2b65a30b65d760bed1b5a6fe2c1a67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ColorModel&lt;/code&gt; to be replaced by &lt;code&gt;newmodel&lt;/code&gt; when the user calls &lt;a href=&quot;#substituteColorModel(java.awt.image.ColorModel,java.awt.image.ColorModel)&quot;&gt;&lt;code&gt;substituteColorModel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ColorModel&lt;/code&gt; 로 대체 할 &lt;code&gt;newmodel&lt;/code&gt; 에 사용자가 호출 할 때 &lt;a href=&quot;#substituteColorModel(java.awt.image.ColorModel,java.awt.image.ColorModel)&quot;&gt; &lt;code&gt;substituteColorModel&lt;/code&gt; 를가&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e13ccfa1d055a7b6b34e9e36830f7d323272c74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ColorModel&lt;/code&gt; to be used as a prototype.</source>
          <target state="translated">&lt;code&gt;ColorModel&lt;/code&gt; 프로토 타입으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="07d67a2555eefc3e26bbb2290d72ad886426f461" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ColorModel&lt;/code&gt; with which to replace &lt;code&gt;origmodel&lt;/code&gt; when the user calls &lt;code&gt;substituteColorModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ColorModel&lt;/code&gt; 와 함께 대체 &lt;code&gt;origmodel&lt;/code&gt; 사용자가 호출 할 때 &lt;code&gt;substituteColorModel&lt;/code&gt; 를을 .</target>
        </trans-unit>
        <trans-unit id="c82336186c250b7812d70c226ebe5d94f5b9c56d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Compiler&lt;/code&gt; class is provided to support Java-to-native-code compilers and related services.</source>
          <target state="translated">&lt;code&gt;Compiler&lt;/code&gt; 클래스는 자바 --에 네이티브 코드를 지원하기 위해 컴파일러 및 관련 서비스를 제공한다.</target>
        </trans-unit>
        <trans-unit id="5baf789bd5f3f16f61d707fd5b133cbba7948544" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Compiler&lt;/code&gt; class is provided to support Java-to-native-code compilers and related services. By design, the &lt;code&gt;Compiler&lt;/code&gt; class does nothing; it serves as a placeholder for a JIT compiler implementation.</source>
          <target state="translated">&lt;code&gt;Compiler&lt;/code&gt; 클래스는 자바 --에 네이티브 코드를 지원하기 위해 컴파일러 및 관련 서비스를 제공한다. 설계 상 &lt;code&gt;Compiler&lt;/code&gt; 클래스는 아무 것도 수행하지 않습니다. JIT 컴파일러 구현을위한 자리 표시 자 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="95f3169e558b0c372a14747fccf5f156a6f82f30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Compiler&lt;/code&gt; class is provided to support Java-to-native-code compilers and related services. By design, the &lt;code&gt;Compiler&lt;/code&gt; class does nothing; it serves as a placeholder for a JIT compiler implementation. If no compiler is available, these methods do nothing.</source>
          <target state="translated">&lt;code&gt;Compiler&lt;/code&gt; 클래스는 자바 --에 네이티브 코드를 지원하기 위해 컴파일러 및 관련 서비스를 제공한다. 설계 상 &lt;code&gt;Compiler&lt;/code&gt; 클래스는 아무 작업도 수행하지 않습니다. JIT 컴파일러 구현을위한 자리 표시 자 역할을합니다. 컴파일러를 사용할 수없는 경우 이러한 메서드는 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1a6f291fb969665f5e6eb462efced79ed592de7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompletableFuture&lt;/code&gt; returned from this method can complete exceptionally with:</source>
          <target state="translated">이 메서드에서 반환 된 &lt;code&gt;CompletableFuture&lt;/code&gt; 는 다음과 같이 예외적으로 완료 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3febd1deaade91a8663540a2372771cb667def8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Component&lt;/code&gt; associated with this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Component&lt;/code&gt; 이와 관련 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2be0c7bbb7ec8789f37ff67646bc9f80f4ad1077" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Component&lt;/code&gt; class is the abstract superclass of the nonmenu-related Abstract Window Toolkit components. Class &lt;code&gt;Component&lt;/code&gt; can also be extended directly to create a lightweight component. A lightweight component is a component that is not associated with a native window. On the contrary, a heavyweight component is associated with a native window. The &lt;a href=&quot;#isLightweight()&quot;&gt;&lt;code&gt;isLightweight()&lt;/code&gt;&lt;/a&gt; method may be used to distinguish between the two kinds of the components.</source>
          <target state="translated">&lt;code&gt;Component&lt;/code&gt; 클래스는 메뉴에 관련하고 있지 않는 Abstract Window Toolkit 컴퍼넌트의 추상 슈퍼 클래스입니다. 클래스 &lt;code&gt;Component&lt;/code&gt; 를 직접 확장하여 경량 구성 요소를 만들 수도 있습니다. 경량 구성 요소는 기본 창과 연결되지 않은 구성 요소입니다. 반대로 무거운 구성 요소는 기본 창과 연결됩니다. &lt;a href=&quot;#isLightweight()&quot;&gt; &lt;code&gt;isLightweight()&lt;/code&gt; &lt;/a&gt; 메소드는 컴포넌트의 2 종류를 구별하는데 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="c1f89d364395518e9ac2aed1058cf59d2cb77a09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Component&lt;/code&gt; is displayed in the dialog.</source>
          <target state="translated">&lt;code&gt;Component&lt;/code&gt; 대화 상자에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="6b7b87975f3751926d2934ab14ea9733cdca5f0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Component&lt;/code&gt; object on which to draw.</source>
          <target state="translated">&lt;code&gt;Component&lt;/code&gt; 개체는립니다.</target>
        </trans-unit>
        <trans-unit id="acac5829c15b68b96fc4d36bd7f296d3d684ea47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Composite&lt;/code&gt; interface, along with &lt;a href=&quot;compositecontext&quot;&gt;&lt;code&gt;CompositeContext&lt;/code&gt;&lt;/a&gt;, defines the methods to compose a draw primitive with the underlying graphics area.</source>
          <target state="translated">&lt;code&gt;Composite&lt;/code&gt; 인터페이스와 함께 &lt;a href=&quot;compositecontext&quot;&gt; &lt;code&gt;CompositeContext&lt;/code&gt; 에는&lt;/a&gt; A는 기본적인 그래픽 영역 프리미티브 그리는 구도 방법을 정의한다.</target>
        </trans-unit>
        <trans-unit id="cf0d38b51f631ead3f513f247eb036d26256b308" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Composite&lt;/code&gt; interface, along with &lt;a href=&quot;compositecontext&quot;&gt;&lt;code&gt;CompositeContext&lt;/code&gt;&lt;/a&gt;, defines the methods to compose a draw primitive with the underlying graphics area. After the &lt;code&gt;Composite&lt;/code&gt; is set in the &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; context, it combines a shape, text, or an image being rendered with the colors that have already been rendered according to pre-defined rules. The classes implementing this interface provide the rules and a method to create the context for a particular operation. &lt;code&gt;CompositeContext&lt;/code&gt; is an environment used by the compositing operation, which is created by the &lt;code&gt;Graphics2D&lt;/code&gt; prior to the start of the operation. &lt;code&gt;CompositeContext&lt;/code&gt; contains private information and resources needed for a compositing operation. When the &lt;code&gt;CompositeContext&lt;/code&gt; is no longer needed, the &lt;code&gt;Graphics2D&lt;/code&gt; object disposes of it in order to reclaim resources allocated for the operation.</source>
          <target state="translated">&lt;code&gt;Composite&lt;/code&gt; 인터페이스와 함께 &lt;a href=&quot;compositecontext&quot;&gt; &lt;code&gt;CompositeContext&lt;/code&gt; 에는&lt;/a&gt; A는 기본적인 그래픽 영역 프리미티브 그리는 구도 방법을 정의한다. 애프터 &lt;code&gt;Composite&lt;/code&gt; 설정된다 &lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt; 컨텍스트는 형상 텍스트를 결합하거나 이미 화상에있어서, 미리 정의 된 규칙을 렌더링 된 컬러로 표현된다. 이 인터페이스를 구현하는 클래스는 특정 작업에 대한 컨텍스트를 만드는 규칙과 메서드를 제공합니다. &lt;code&gt;CompositeContext&lt;/code&gt; 는 컴 포지 팅 작업에 사용되는 환경 으로, 작업 시작 전에 &lt;code&gt;Graphics2D&lt;/code&gt; 에 의해 생성됩니다 . &lt;code&gt;CompositeContext&lt;/code&gt; 합성 작업에 필요한 개인 정보 및 리소스를 포함합니다. 때 &lt;code&gt;CompositeContext&lt;/code&gt; 는 더 이상 필요하지 않으며, &lt;code&gt;Graphics2D&lt;/code&gt; 객체는 작업에 할당 된 리소스를 회수하기 위해이를 폐기합니다.</target>
        </trans-unit>
        <trans-unit id="137379a42e103c94a23d7eb739b5b792b28cf148" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeContext&lt;/code&gt; interface defines the encapsulated and optimized environment for a compositing operation.</source>
          <target state="translated">&lt;code&gt;CompositeContext&lt;/code&gt; 인터페이스는 합성 작업에 대한 캡슐화 및 최적의 환경을 정의한다.</target>
        </trans-unit>
        <trans-unit id="990a0bd1e3d1934bd209638240fed6e170187493" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeContext&lt;/code&gt; interface defines the encapsulated and optimized environment for a compositing operation. &lt;code&gt;CompositeContext&lt;/code&gt; objects maintain state for compositing operations. In a multi-threaded environment, several contexts can exist simultaneously for a single &lt;a href=&quot;composite&quot;&gt;&lt;code&gt;Composite&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;CompositeContext&lt;/code&gt; 인터페이스는 합성 작업에 대한 캡슐화 및 최적의 환경을 정의한다. &lt;code&gt;CompositeContext&lt;/code&gt; 객체는 합성 작업의 상태를 유지합니다. 다중 스레드 환경에서는 단일 &lt;a href=&quot;composite&quot;&gt; &lt;code&gt;Composite&lt;/code&gt; &lt;/a&gt; 객체에 대해 여러 컨텍스트가 동시에 존재할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a10136967e2d7cca0ff7de90479711b3afa89dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeData&lt;/code&gt; interface specifies the behavior of a specific type of complex</source>
          <target state="translated">&lt;code&gt;CompositeData&lt;/code&gt; 인터페이스는 복잡한 특정 유형의 동작을 지정합니다</target>
        </trans-unit>
        <trans-unit id="430611e20757b0f69b3d3c4ac8a5e89a65ae2e00" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeDataSupport&lt;/code&gt; class is the</source>
          <target state="translated">&lt;code&gt;CompositeDataSupport&lt;/code&gt; 의 클래스입니다</target>
        </trans-unit>
        <trans-unit id="b09b9ac999e11e7f7254865f0fdfb600871077d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeType&lt;/code&gt; class is the</source>
          <target state="translated">&lt;code&gt;CompositeType&lt;/code&gt; 클래스 인</target>
        </trans-unit>
        <trans-unit id="c17feb321bde2a79f87864039c7202bea866d7a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeType&lt;/code&gt; that will appear in the &lt;code&gt;openType&lt;/code&gt; field of the &lt;a href=&quot;../descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt; for an attribute or operation of this type will show only the &lt;code&gt;units&lt;/code&gt; item, but the actual &lt;code&gt;CompositeData&lt;/code&gt; that is generated will have both &lt;code&gt;units&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">이 유형의 속성 또는 조작에 대해 &lt;a href=&quot;../descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt; 자의 &lt;code&gt;openType&lt;/code&gt; 필드에 표시 되는 &lt;code&gt;CompositeType&lt;/code&gt; 에는 &lt;code&gt;units&lt;/code&gt; 항목 만 표시 되지만 생성 된 실제 &lt;code&gt;CompositeData&lt;/code&gt; 에는 &lt;code&gt;units&lt;/code&gt; 와 &lt;code&gt;value&lt;/code&gt; 가 모두 있습니다.</target>
        </trans-unit>
        <trans-unit id="c202cf4fd37a3437bcc0030cec4facf3571e0c50" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Connection&lt;/code&gt; and &lt;code&gt;DataSource&lt;/code&gt; property &lt;code&gt;escapeProcessing&lt;/code&gt; may be used to change the default escape processing behavior. A value of true (the default) enables escape Processing for all &lt;code&gt;Statement&lt;/code&gt; objects. A value of false disables escape processing for all &lt;code&gt;Statement&lt;/code&gt; objects. The &lt;code&gt;setEscapeProcessing&lt;/code&gt; method may be used to specify the escape processing behavior for an individual &lt;code&gt;Statement&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Connection&lt;/code&gt; 및 &lt;code&gt;DataSource&lt;/code&gt; 속성 &lt;code&gt;escapeProcessing&lt;/code&gt; 은 기본 이스케이프 처리 동작을 변경하는 데 사용할 수 있습니다. true (기본값) 값은 모든 &lt;code&gt;Statement&lt;/code&gt; 오브젝트에 대해 이스케이프 처리를 사용 합니다. false 값은 모든 &lt;code&gt;Statement&lt;/code&gt; 객체에 대한 이스케이프 처리를 비활성화 합니다. &lt;code&gt;setEscapeProcessing&lt;/code&gt; 의 방법은 개인 이스케이프 처리 동작을 지정하는 데 사용될 수있다 &lt;code&gt;Statement&lt;/code&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="3a9eb916ae0e4a95b868817dcad27e5892ea6182" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ConnectionEventListener&lt;/code&gt; interface is implemented by a connection pooling component. A connection pooling component will usually be provided by a JDBC driver vendor or another system software vendor. A JDBC driver notifies a &lt;code&gt;ConnectionEventListener&lt;/code&gt; object when an application is finished using a pooled connection with which the listener has registered. The notification occurs after the application calls the method &lt;code&gt;close&lt;/code&gt; on its representation of a &lt;code&gt;PooledConnection&lt;/code&gt; object. A &lt;code&gt;ConnectionEventListener&lt;/code&gt; is also notified when a connection error occurs due to the fact that the &lt;code&gt;PooledConnection&lt;/code&gt; is unfit for future use---the server has crashed, for example. The listener is notified by the JDBC driver just before the driver throws an &lt;code&gt;SQLException&lt;/code&gt; to the application using the &lt;code&gt;PooledConnection&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;ConnectionEventListener&lt;/code&gt; 인터페이스는 연결 풀링 구성 요소에 의해 구현된다. 연결 풀링 구성 요소는 일반적으로 JDBC 드라이버 공급 업체 또는 다른 시스템 소프트웨어 공급 업체에서 제공합니다. JDBC 드라이버 는 리스너가 등록한 풀링 된 연결을 사용하여 애플리케이션이 완료되면 &lt;code&gt;ConnectionEventListener&lt;/code&gt; 객체에 알립니다 . 애플리케이션 이 &lt;code&gt;PooledConnection&lt;/code&gt; 객체 의 표현에 대해 &lt;code&gt;close&lt;/code&gt; 메소드를 호출 한 후에 알림이 발생 합니다. &lt;code&gt;ConnectionEventListener&lt;/code&gt; 연결 오류가 발생하는 경우도 사실로 인해 통지 그 &lt;code&gt;PooledConnection&lt;/code&gt; 에이향후 사용에는 적합하지 않습니다. 예를 들어 서버가 충돌했습니다. 리스너는 드라이버가 &lt;code&gt;PooledConnection&lt;/code&gt; 객체를 사용하여 애플리케이션에 &lt;code&gt;SQLException&lt;/code&gt; 을 발생시키기 직전에 JDBC 드라이버에 의해 알림을받습니다 .</target>
        </trans-unit>
        <trans-unit id="c4f8fc7d40062e4c808ea460664fdc3d048a2824" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ConsoleHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values).</source>
          <target state="translated">&lt;code&gt;ConsoleHandler&lt;/code&gt; 기반으로 구성되어 &lt;code&gt;LogManager&lt;/code&gt; 프로퍼티 (또는 기본값).</target>
        </trans-unit>
        <trans-unit id="468370b0a51ca057342fdb1fe58204389f4fdab1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Constructor&lt;/code&gt; object for the constructor with the specified parameter list</source>
          <target state="translated">지정된 파라미터리스트를 가지는 생성자 의 &lt;code&gt;Constructor&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="051ebba82902b4ec2086b2f151c93e0f826e2664" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Container&lt;/code&gt;, message, icon, and buttons are all determined from abstract methods.</source>
          <target state="translated">&lt;code&gt;Container&lt;/code&gt; , 메시지, 아이콘 및 버튼은 모든 추상 메소드에서 결정된다.</target>
        </trans-unit>
        <trans-unit id="bfe2741b9b06f16764928ba36a45cb667f568913" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ContentHandlerFactory&lt;/code&gt; instance is used to construct a content handler from a content type</source>
          <target state="translated">&lt;code&gt;ContentHandlerFactory&lt;/code&gt; 인스턴스는 콘텐츠 유형으로부터 콘텐트 핸들러를 생성하는 데 사용</target>
        </trans-unit>
        <trans-unit id="0bf6f4750ebb0cf949297967135c0fd9fe3656d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ContentHandlerFactory&lt;/code&gt; instance is used to construct a content handler from a content type.</source>
          <target state="translated">&lt;code&gt;ContentHandlerFactory&lt;/code&gt; 인스턴스는 콘텐츠 유형으로부터 콘텐츠 핸들러를 생성하는 데 사용된다.</target>
        </trans-unit>
        <trans-unit id="424256ecdb394f5cdc64e1890526b21ddcaf507b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ControllerEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt; has processed a requested type of MIDI control-change event.</source>
          <target state="translated">&lt;code&gt;ControllerEventListener&lt;/code&gt; 의 인터페이스는 필요가있는 인스턴스 때 알림 클래스가 구현되어야 &lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; &lt;/a&gt; MIDI 제어 변경 이벤트의 타입의 요청을 처리하고있다.</target>
        </trans-unit>
        <trans-unit id="35ef92f3ccc2d6c39a994a573270b73354f21f4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ControllerEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt; has processed a requested type of MIDI control-change event. To register a &lt;code&gt;ControllerEventListener&lt;/code&gt; object to receive such notifications, invoke the &lt;a href=&quot;sequencer#addControllerEventListener(javax.sound.midi.ControllerEventListener,int%5B%5D)&quot;&gt;&lt;code&gt;addControllerEventListener&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Sequencer&lt;/code&gt;, specifying the types of MIDI controllers about which you are interested in getting control-change notifications.</source>
          <target state="translated">&lt;code&gt;ControllerEventListener&lt;/code&gt; 의 인터페이스는 필요가있는 인스턴스 때 알림 클래스가 구현되어야 &lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; &lt;/a&gt; MIDI 제어 변경 이벤트의 타입의 요청을 처리하고있다. 이러한 알림을 수신하기 위해 &lt;code&gt;ControllerEventListener&lt;/code&gt; 객체 를 등록하려면 컨트롤 변경 알림을 받고자 하는 MIDI 컨트롤러 유형을 지정하여 &lt;code&gt;Sequencer&lt;/code&gt; 의 &lt;a href=&quot;sequencer#addControllerEventListener(javax.sound.midi.ControllerEventListener,int%5B%5D)&quot;&gt; &lt;code&gt;addControllerEventListener&lt;/code&gt; &lt;/a&gt; 메서드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="6e23ef999b2d94dd091ae6002a808cf050bfabb1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ControllerEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;code&gt;Sequencer&lt;/code&gt; has processed a requested type of MIDI control-change event.</source>
          <target state="translated">&lt;code&gt;ControllerEventListener&lt;/code&gt; 의 인터페이스는 필요가있는 인스턴스 때 알림 클래스가 구현되어야 &lt;code&gt;Sequencer&lt;/code&gt; MIDI 제어 변경 이벤트의 타입의 요청을 처리하고있다.</target>
        </trans-unit>
        <trans-unit id="f48b495c5fff66a44f844b4e81d54ec584a1e19d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ControllerEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;code&gt;Sequencer&lt;/code&gt; has processed a requested type of MIDI control-change event. To register a &lt;code&gt;ControllerEventListener&lt;/code&gt; object to receive such notifications, invoke the &lt;a href=&quot;sequencer#addControllerEventListener-javax.sound.midi.ControllerEventListener-int:A-&quot;&gt;&lt;code&gt;addControllerEventListener&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Sequencer&lt;/code&gt;, specifying the types of MIDI controllers about which you are interested in getting control-change notifications.</source>
          <target state="translated">&lt;code&gt;ControllerEventListener&lt;/code&gt; 의 인터페이스는 필요가있는 인스턴스 때 알림 클래스가 구현되어야 &lt;code&gt;Sequencer&lt;/code&gt; MIDI 제어 변경 이벤트의 타입의 요청을 처리하고있다. 이러한 알림을 받도록 &lt;code&gt;ControllerEventListener&lt;/code&gt; 객체 를 등록하려면 &lt;code&gt;Sequencer&lt;/code&gt; 의 &lt;a href=&quot;sequencer#addControllerEventListener-javax.sound.midi.ControllerEventListener-int:A-&quot;&gt; &lt;code&gt;addControllerEventListener&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 컨트롤 변경 알림을받는 데 관심이있는 MIDI 컨트롤러 유형을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="4a4fb62b40f1aa556d6f9a218a85349560049c32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CubicCurve2D&lt;/code&gt; class defines a cubic parametric curve segment in &lt;code&gt;(x,y)&lt;/code&gt; coordinate space.</source>
          <target state="translated">&lt;code&gt;CubicCurve2D&lt;/code&gt; 의 클래스의 차 파라 메트릭 곡선 세그먼트 정의 &lt;code&gt;(x,y)&lt;/code&gt; 공간 좌표.</target>
        </trans-unit>
        <trans-unit id="8c1e7fd606cd7d58420cac08a722d5a8762857c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CyclicBarrier&lt;/code&gt; uses an all-or-none breakage model for failed synchronization attempts: If a thread leaves a barrier point prematurely because of interruption, failure, or timeout, all other threads waiting at that barrier point will also leave abnormally via &lt;a href=&quot;brokenbarrierexception&quot;&gt;&lt;code&gt;BrokenBarrierException&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;../../lang/interruptedexception&quot;&gt;&lt;code&gt;InterruptedException&lt;/code&gt;&lt;/a&gt; if they too were interrupted at about the same time).</source>
          <target state="translated">&lt;code&gt;CyclicBarrier&lt;/code&gt; 실패한 동기화 시도에 대한 모 아니면 없음 파손 모델을 사용하여 조기에 때문에 중단, 실패, 또는 타임 아웃의 장벽 포인트가, 그 장벽 지점에서 대기하는 다른 스레드도를 통해 비정상적으로 떠나 스레드 잎 경우 &lt;a href=&quot;brokenbarrierexception&quot;&gt; &lt;code&gt;BrokenBarrierException&lt;/code&gt; &lt;/a&gt; (또는 &lt;a href=&quot;../../lang/interruptedexception&quot;&gt; &lt;code&gt;InterruptedException&lt;/code&gt; &lt;/a&gt; 그들도 거의 동시에 중단 된 경우).</target>
        </trans-unit>
        <trans-unit id="0c783e00b0bafedd1ae14f2bb7e2874a439670e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMConfiguration&lt;/code&gt; interface represents the configuration of a document and maintains a table of recognized parameters.</source>
          <target state="translated">&lt;code&gt;DOMConfiguration&lt;/code&gt; 인터페이스는 문서의 구성을 나타내고 인식 파라미터의 테이블을 유지한다.</target>
        </trans-unit>
        <trans-unit id="82b11a01b54776ee5001861460779f6d398ad23d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMConfiguration&lt;/code&gt; interface represents the configuration of a document and maintains a table of recognized parameters. Using the configuration, it is possible to change &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; behavior, such as replacing the &lt;code&gt;CDATASection&lt;/code&gt; nodes with &lt;code&gt;Text&lt;/code&gt; nodes or specifying the type of the schema that must be used when the validation of the &lt;code&gt;Document&lt;/code&gt; is requested. &lt;code&gt;DOMConfiguration&lt;/code&gt; objects are also used in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407&quot;&gt;DOM Level 3 Load and Save&lt;/a&gt;] in the &lt;code&gt;DOMParser&lt;/code&gt; and &lt;code&gt;DOMSerializer&lt;/code&gt; interfaces.</source>
          <target state="translated">&lt;code&gt;DOMConfiguration&lt;/code&gt; 인터페이스는 문서의 구성을 나타내고 인식 파라미터의 테이블을 유지한다. 구성을 사용하면 &lt;code&gt;CDATASection&lt;/code&gt; 노드를 &lt;code&gt;Text&lt;/code&gt; 노드 로 바꾸 거나 &lt;code&gt;Document&lt;/code&gt; 유효성 검사 가 요청 될 때 사용해야하는 스키마 유형을 지정하는 등 &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; 동작 을 변경할 수 있습니다 . &lt;code&gt;DOMConfiguration&lt;/code&gt; 객체는 &lt;code&gt;DOMParser&lt;/code&gt; 및 &lt;code&gt;DOMSerializer&lt;/code&gt; 인터페이스의 [ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407&quot;&gt;DOM 레벨 3로드 및 저장&lt;/a&gt; ] 에서도 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="434d1eb0d1e34777b50a09a3a9b1f4c4f63d9498" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMConfiguration&lt;/code&gt; object used by the &lt;code&gt;LSSerializer&lt;/code&gt; when serializing a DOM node.</source>
          <target state="translated">&lt;code&gt;DOMConfiguration&lt;/code&gt; 의해 사용 목적 &lt;code&gt;LSSerializer&lt;/code&gt; 에 DOM 노드의 직렬화.</target>
        </trans-unit>
        <trans-unit id="fb3314e745fe451cf0f5a36a430396ef9aeed08d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMConfiguration&lt;/code&gt; object used when parsing an input source.</source>
          <target state="translated">&lt;code&gt;DOMConfiguration&lt;/code&gt; 입력 소스를 분석 할 때 사용할 객체.</target>
        </trans-unit>
        <trans-unit id="71c48b09bc18768991965014c902a16366937d28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMConfiguration&lt;/code&gt; object used when parsing an input source. This &lt;code&gt;DOMConfiguration&lt;/code&gt; is specific to the parse operation. No parameter values from this &lt;code&gt;DOMConfiguration&lt;/code&gt; object are passed automatically to the &lt;code&gt;DOMConfiguration&lt;/code&gt; object on the &lt;code&gt;Document&lt;/code&gt; that is created, or used, by the parse operation. The DOM application is responsible for passing any needed parameter values from this &lt;code&gt;DOMConfiguration&lt;/code&gt; object to the &lt;code&gt;DOMConfiguration&lt;/code&gt; object referenced by the &lt;code&gt;Document&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;DOMConfiguration&lt;/code&gt; 입력 소스를 분석 할 때 사용할 객체. 이 &lt;code&gt;DOMConfiguration&lt;/code&gt; 은 구문 분석 작업에 고유합니다. 이 &lt;code&gt;DOMConfiguration&lt;/code&gt; 개체의 매개 변수 값 은 구문 분석 작업에 의해 생성되거나 사용되는 &lt;code&gt;Document&lt;/code&gt; 의 &lt;code&gt;DOMConfiguration&lt;/code&gt; 개체에 자동으로 전달 되지 않습니다 . DOM을 응용 프로그램이에서 모든 필요한 매개 변수 값을 전달하는 책임이 &lt;code&gt;DOMConfiguration&lt;/code&gt; 받는 객체 &lt;code&gt;DOMConfiguration&lt;/code&gt; 에 의해 참조 된 객체 &lt;code&gt;Document&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="5f940640249c3fa8bbdd06a679530451034e0110" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementation&lt;/code&gt; at the &lt;code&gt;index&lt;/code&gt; th position in the &lt;code&gt;DOMImplementationList&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if that is not a valid index.</source>
          <target state="translated">&lt;code&gt;DOMImplementation&lt;/code&gt; 상기 &lt;code&gt;index&lt;/code&gt; 번째에 위치 &lt;code&gt;DOMImplementationList&lt;/code&gt; 또는 &lt;code&gt;null&lt;/code&gt; 인덱스가 유효하지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="cb86f01320ceee768f292b60f82902619aeadbc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementation&lt;/code&gt; interface provides a number of methods for performing operations that are independent of any particular instance of the document object model.</source>
          <target state="translated">&lt;code&gt;DOMImplementation&lt;/code&gt; 인터페이스는 문서 객체 모델의 특정 인스턴스의 독립적 인 동작을 수행하기위한 방법을 제공한다.</target>
        </trans-unit>
        <trans-unit id="fa07a91096b79e4d54b620411a8b91c1db742167" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementation&lt;/code&gt; object that handles this document.</source>
          <target state="translated">이 문서를 처리 하는 &lt;code&gt;DOMImplementation&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="84eb8320fa82f23c232c3ec79be4e98b618b9c3e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementation&lt;/code&gt; object that handles this document. A DOM application may use objects from multiple implementations.</source>
          <target state="translated">이 문서를 처리 하는 &lt;code&gt;DOMImplementation&lt;/code&gt; 객체입니다. DOM 응용 프로그램은 여러 구현의 개체를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32d6f56247f926d99c1101675af47d5e1ee36e65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementationList&lt;/code&gt; interface provides the abstraction of an ordered collection of DOM implementations, without defining or constraining how this collection is implemented.</source>
          <target state="translated">&lt;code&gt;DOMImplementationList&lt;/code&gt; 의 인터페이스는이 컬렉션의 구현 방법을 정의 또는 구속없이 DOM 구현 정렬 컬렉션의 추상화를 제공한다.</target>
        </trans-unit>
        <trans-unit id="27185a00a607aada8160bc7bfee348df09ab860e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementationList&lt;/code&gt; interface provides the abstraction of an ordered collection of DOM implementations, without defining or constraining how this collection is implemented. The items in the &lt;code&gt;DOMImplementationList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">&lt;code&gt;DOMImplementationList&lt;/code&gt; 의 인터페이스는이 컬렉션의 구현 방법을 정의 또는 구속없이 DOM 구현 정렬 컬렉션의 추상화를 제공한다. &lt;code&gt;DOMImplementationList&lt;/code&gt; 의 항목 은 0부터 시작하는 정수 인덱스를 통해 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d13d556105ead36068d76418e8945d9d1dfc01f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMString&lt;/code&gt; at the &lt;code&gt;index&lt;/code&gt;th position in the &lt;code&gt;DOMStringList&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if that is not a valid index.</source>
          <target state="translated">&lt;code&gt;DOMString&lt;/code&gt; 에 상기 &lt;code&gt;index&lt;/code&gt; 번째 위치에서 상기 &lt;code&gt;DOMStringList&lt;/code&gt; 또는 &lt;code&gt;null&lt;/code&gt; 인덱스가 유효하지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="9da335a9af07ced964482feeab665d0da687a500" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMStringList&lt;/code&gt; interface provides the abstraction of an ordered collection of &lt;code&gt;DOMString&lt;/code&gt; values, without defining or constraining how this collection is implemented.</source>
          <target state="translated">&lt;code&gt;DOMStringList&lt;/code&gt; 의 인터페이스의 순서 컬렉션의 추상화 제공 &lt;code&gt;DOMString&lt;/code&gt; 이 컬렉션의 구현 방법을 정의 또는 구속없이, 값.</target>
        </trans-unit>
        <trans-unit id="3b5b4bd5bf71b89bdf22ce123898d7c89219fb1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMStringList&lt;/code&gt; interface provides the abstraction of an ordered collection of &lt;code&gt;DOMString&lt;/code&gt; values, without defining or constraining how this collection is implemented. The items in the &lt;code&gt;DOMStringList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">&lt;code&gt;DOMStringList&lt;/code&gt; 의 인터페이스의 순서 컬렉션의 추상화 제공 &lt;code&gt;DOMString&lt;/code&gt; 이 컬렉션의 구현 방법을 정의 또는 구속없이, 값. &lt;code&gt;DOMStringList&lt;/code&gt; 의 항목 은 0부터 시작하는 정수 인덱스를 통해 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26015e6375086abc108a98ed1191285ea4660c3a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataFlavor&lt;/code&gt; representing a Java Image class, where:</source>
          <target state="translated">&lt;code&gt;DataFlavor&lt;/code&gt; Java Image 클래스를 나타내는 :</target>
        </trans-unit>
        <trans-unit id="b33800b148f0b6f48b10a4b3a89f3169859a84bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataFlavor&lt;/code&gt; representing a Java Unicode String class, where:</source>
          <target state="translated">&lt;code&gt;DataFlavor&lt;/code&gt; Java Unicode String 클래스를 나타내는 :</target>
        </trans-unit>
        <trans-unit id="c6f306f1c242fb26d9a4ec3d96f2396980617873" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataFlavor&lt;/code&gt; representing plain text with Unicode encoding, where:</source>
          <target state="translated">&lt;code&gt;DataFlavor&lt;/code&gt; 의 유니 코드 인코딩으로 plaintext를 표현 :</target>
        </trans-unit>
        <trans-unit id="f41cc015a47378ec64cceb98239ef99d458497d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataInput&lt;/code&gt; interface provides for reading bytes from a binary stream and reconstructing from them data in any of the Java primitive types.</source>
          <target state="translated">&lt;code&gt;DataInput&lt;/code&gt; 인터페이스는, 바이너리 스트림로부터 바이트를 읽어 Java 프리미티브 유형 중 하나로 그 데이터로부터 재구성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="713665bba38945d968dff6d6d30215a3f4b01909" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataInput&lt;/code&gt; interface provides for reading bytes from a binary stream and reconstructing from them data in any of the Java primitive types. There is also a facility for reconstructing a &lt;code&gt;String&lt;/code&gt; from data in &lt;a href=&quot;#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; format.</source>
          <target state="translated">&lt;code&gt;DataInput&lt;/code&gt; 인터페이스는, 바이너리 스트림로부터 바이트를 읽어 Java 프리미티브 유형 중 하나로 그 데이터로부터 재구성을 제공합니다. &lt;a href=&quot;#modified-utf-8&quot;&gt;수정 된 UTF-8&lt;/a&gt; 형식의 데이터에서 &lt;code&gt;String&lt;/code&gt; 을 재구성하는 기능도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="55a2923cd40c06c6ccaeab383d62605e85c6dfc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataOutput&lt;/code&gt; interface provides for converting data from any of the Java primitive types to a series of bytes and writing these bytes to a binary stream.</source>
          <target state="translated">&lt;code&gt;DataOutput&lt;/code&gt; 인터페이스 이진 스트림이 바이트를 바이트 일련 자바 기본 유형의 데이터를 변환하여 기록을 제공한다.</target>
        </trans-unit>
        <trans-unit id="b1c1a548a4fef08005d8b50ede7de089c4162ad9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataOutput&lt;/code&gt; interface provides for converting data from any of the Java primitive types to a series of bytes and writing these bytes to a binary stream. There is also a facility for converting a &lt;code&gt;String&lt;/code&gt; into &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; format and writing the resulting series of bytes.</source>
          <target state="translated">&lt;code&gt;DataOutput&lt;/code&gt; 인터페이스 이진 스트림이 바이트를 바이트 일련 자바 기본 유형의 데이터를 변환하여 기록을 제공한다. &lt;code&gt;String&lt;/code&gt; 을 &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;수정 된 UTF-8&lt;/a&gt; 형식 으로 변환 하고 결과적인 일련의 바이트를 작성하는 기능도 있습니다.</target>
        </trans-unit>
        <trans-unit id="aace83782c4b7339832e081f06308b4b2c74e8e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataSource&lt;/code&gt; interface as a means of making a connection. The Java Naming and Directory Interface&amp;trade; (JNDI) is used for registering a &lt;code&gt;DataSource&lt;/code&gt; object with a naming service and also for retrieving it.</source>
          <target state="translated">&lt;code&gt;DataSource&lt;/code&gt; 에 연결하기위한 수단으로서 인터페이스. JNDI (Java Naming and Directory Interface &amp;trade;)는 이름 지정 서비스에 &lt;code&gt;DataSource&lt;/code&gt; 오브젝트 를 등록하고 검색하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9a0d3b357b082ea9e3cef0a9c703c9ff4ba87e0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataSource&lt;/code&gt; interface as an alternative to the &lt;code&gt;DriverManager&lt;/code&gt; for establishing a connection with a data source</source>
          <target state="translated">&lt;code&gt;DataSource&lt;/code&gt; 받는 대안으로서 인터페이스 &lt;code&gt;DriverManager&lt;/code&gt; 의 데이터 소스와의 접속을 확립하기위한</target>
        </trans-unit>
        <trans-unit id="7e888f0e387d5da74bbbdd521d7936f20c26d0bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataSource&lt;/code&gt; interface is implemented by a driver vendor. There are three types of implementations:</source>
          <target state="translated">&lt;code&gt;DataSource&lt;/code&gt; 인터페이스 드라이버 벤더에 의해 구현된다. 세 가지 유형의 구현이 있습니다.</target>
        </trans-unit>
        <trans-unit id="bae5d85b0a42eaf39decbc0f3619a5ca6e1c5bca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; is a concrete implementation of the abstract &lt;code&gt;PersistenceDelegate&lt;/code&gt; class and is the delegate used by default for classes about which no information is available.</source>
          <target state="translated">&lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; 추상의 구체적인 구현 &lt;code&gt;PersistenceDelegate&lt;/code&gt; 의 클래스와 정보를 얻을 수없는 클래스가 디폴트로 사용하는 위양입니다.</target>
        </trans-unit>
        <trans-unit id="75831a1da7576e44d5307c7a6c20301c7e176c73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; is a concrete implementation of the abstract &lt;code&gt;PersistenceDelegate&lt;/code&gt; class and is the delegate used by default for classes about which no information is available. The &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; provides, version resilient, public API-based persistence for classes that follow the JavaBeans&amp;trade; conventions without any class specific configuration.</source>
          <target state="translated">&lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; 추상의 구체적인 구현 &lt;code&gt;PersistenceDelegate&lt;/code&gt; 의 클래스와 정보를 얻을 수없는 클래스가 디폴트로 사용하는 위양입니다. &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; , 모든 클래스의 특정 구성없이 자바 빈즈 &amp;trade; 규칙을 따르는 클래스 버전 공개 API베이스의 지속성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="215a5bccdc3c3338493160d70673629e874e958f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultSelectionType&lt;/code&gt; instance to use for specifying that a range of pages of the job should be printed.</source>
          <target state="translated">&lt;code&gt;DefaultSelectionType&lt;/code&gt; 인스턴스는 작업의 페이지 범위가 인쇄되도록 지정하기위한합니다.</target>
        </trans-unit>
        <trans-unit id="87cb02d0585879539baa3952cfdd192574ff5ce1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultSelectionType&lt;/code&gt; instance to use for specifying that all pages of the job should be printed.</source>
          <target state="translated">&lt;code&gt;DefaultSelectionType&lt;/code&gt; 인스턴스는 작업의 모든 페이지가 인쇄되도록 지정하기위한합니다.</target>
        </trans-unit>
        <trans-unit id="7467f10a2bae08e57981d42475216700740fb33f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultSelectionType&lt;/code&gt; instance to use for specifying that the current selection should be printed.</source>
          <target state="translated">&lt;code&gt;DefaultSelectionType&lt;/code&gt; 인스턴스는 현재의 선택이 인쇄되도록 지정에 사용한다.</target>
        </trans-unit>
        <trans-unit id="19c0a619c4b42fee2219550878c9a024c390cb05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DependsOn&lt;/code&gt; example might be coded as follows.</source>
          <target state="translated">&lt;code&gt;DependsOn&lt;/code&gt; 예를 들어 다음과 같이 코딩 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="65ab9904319fac8d824298c966242d71776b1070" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Descriptor&lt;/code&gt; for each of these objects will also have a field &lt;code&gt;originalType&lt;/code&gt; that is a string representing the Java type that appeared in the MXBean interface. The format of this string is described in the section &lt;a href=&quot;#type-names&quot;&gt;Type Names&lt;/a&gt; below.</source>
          <target state="translated">&lt;code&gt;Descriptor&lt;/code&gt; 이러한 개체의 각도 필드 것 &lt;code&gt;originalType&lt;/code&gt; MXBean의 인터페이스에 등장하는 Java 유형을 나타내는 문자열입니다. 이 문자열의 형식은 아래 &lt;a href=&quot;#type-names&quot;&gt;유형 이름&lt;/a&gt; 섹션에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f443be3508a6b4f42f8d8c9fdea432ec155aa3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Descriptor&lt;/code&gt; for the &lt;code&gt;MBeanInfo&lt;/code&gt; will have a field &lt;code&gt;mxbean&lt;/code&gt; whose value is the string &quot;&lt;code&gt;true&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;code&gt;MBeanInfo&lt;/code&gt; 의 &lt;code&gt;Descriptor&lt;/code&gt; 는, 값이 캐릭터 라인 「 &lt;code&gt;true&lt;/code&gt; 」인 &lt;code&gt;mxbean&lt;/code&gt; 필드를 갖게됩니다 .</target>
        </trans-unit>
        <trans-unit id="1b680b80be304cce95a372170cb78cb2d5372791" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Desktop&lt;/code&gt; class allows interact with various desktop capabilities.</source>
          <target state="translated">&lt;code&gt;Desktop&lt;/code&gt; 클래스는 다양한 데스크탑 기능과 상호 작용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f1f0413a258864da533d8fd6089fe10d4346b6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DestinationType&lt;/code&gt; instance to use for specifying print to file.</source>
          <target state="translated">&lt;code&gt;DestinationType&lt;/code&gt; 인스턴스가 파일에의 인쇄를 지정하기 위해서 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b5ede1c0ce13d3f1b86dab91c946e088de1e4810" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DestinationType&lt;/code&gt; instance to use for specifying print to printer.</source>
          <target state="translated">&lt;code&gt;DestinationType&lt;/code&gt; 인스턴스는 프린터에의 인쇄를 지정하기 위해서 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f7866d7c1ad84ddbb686932e9c444832168e015e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DialogType&lt;/code&gt; instance to use for specifying no print dialog.</source>
          <target state="translated">&lt;code&gt;DialogType&lt;/code&gt; 인스턴스가 인쇄 다이얼로그 없음을 지정하기 위해서 사용합니다.</target>
        </trans-unit>
        <trans-unit id="48abce3f6c4158dea1664103a6b3d70f387042a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DialogType&lt;/code&gt; instance to use for specifying the cross-platform, pure Java print dialog.</source>
          <target state="translated">&lt;code&gt;DialogType&lt;/code&gt; 인스턴스는 크로스 플랫폼의 Pure Java 인쇄 다이얼로그를 지정하기 위해서 사용하는.</target>
        </trans-unit>
        <trans-unit id="3a6c6f8055f6a41037fe263aa6e4d4b8b6491751" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DialogType&lt;/code&gt; instance to use for specifying the platform's native print dialog.</source>
          <target state="translated">&lt;code&gt;DialogType&lt;/code&gt; 인스턴스는 플랫폼의 네이티브 인 인쇄 다이얼로그를 지정하기 위해서 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4f7dec71d977b06ccc515422e0d73eebb02b25d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dictionary&lt;/code&gt; class is the abstract parent of any class, such as &lt;code&gt;Hashtable&lt;/code&gt;, which maps keys to values.</source>
          <target state="translated">&lt;code&gt;Dictionary&lt;/code&gt; 클래스는 같은 클래스의 부모가되는 추상 클래스입니다 &lt;code&gt;Hashtable&lt;/code&gt; 키를 값에 맵합니다.</target>
        </trans-unit>
        <trans-unit id="699c289ae38cf13e2c3626e341eabeb096b9a84c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dictionary&lt;/code&gt; class is the abstract parent of any class, such as &lt;code&gt;Hashtable&lt;/code&gt;, which maps keys to values. Every key and every value is an object. In any one &lt;code&gt;Dictionary&lt;/code&gt; object, every key is associated with at most one value. Given a &lt;code&gt;Dictionary&lt;/code&gt; and a key, the associated element can be looked up. Any non-&lt;code&gt;null&lt;/code&gt; object can be used as a key and as a value.</source>
          <target state="translated">&lt;code&gt;Dictionary&lt;/code&gt; 클래스는 같은 클래스의 부모가되는 추상 클래스입니다 &lt;code&gt;Hashtable&lt;/code&gt; 키를 값에 맵합니다. 모든 키와 모든 값은 객체입니다. 하나의 &lt;code&gt;Dictionary&lt;/code&gt; 개체에서 모든 키는 최대 하나의 값과 연결됩니다. &lt;code&gt;Dictionary&lt;/code&gt; 과 키가 주어지면 관련 요소를 찾을 수 있습니다. &lt;code&gt;null&lt;/code&gt; 아닌 오브젝트는 키 및 값으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3ad2e80a7a32b62b60c202e22fbc509ccceb0d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dimension2D&lt;/code&gt; class is to encapsulate a width and a height dimension.</source>
          <target state="translated">그만큼 &lt;code&gt;Dimension2D&lt;/code&gt; 에의 클래스는 폭과 높이의 치수를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="0d0310edb8899af0030fb1287455e59dc2d5cfc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dimension&lt;/code&gt; class encapsulates the width and height of a component (in integer precision) in a single object.</source>
          <target state="translated">&lt;code&gt;Dimension&lt;/code&gt; 클래스는 단일의 오브젝트 (정수 정밀도) 구성 요소의 폭과 높이를 캡슐화한다.</target>
        </trans-unit>
        <trans-unit id="8fb5cd2dfe1f794fc509febd00afad290f14d0f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dimension&lt;/code&gt; class encapsulates the width and height of a component (in integer precision) in a single object. The class is associated with certain properties of components. Several methods defined by the &lt;code&gt;Component&lt;/code&gt; class and the &lt;code&gt;LayoutManager&lt;/code&gt; interface return a &lt;code&gt;Dimension&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Dimension&lt;/code&gt; 클래스는 단일의 오브젝트 (정수 정밀도) 구성 요소의 폭과 높이를 캡슐화한다. 클래스는 구성 요소의 특정 속성과 연결됩니다. &lt;code&gt;Component&lt;/code&gt; 클래스와 &lt;code&gt;LayoutManager&lt;/code&gt; 인터페이스에 의해 정의 된 여러 메서드 는 &lt;code&gt;Dimension&lt;/code&gt; 을 반환합니다. 객체를 합니다.</target>
        </trans-unit>
        <trans-unit id="ac8ca23a09be9f2d05c779e843421c46aa3ea44e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DirContext&lt;/code&gt; interface represents a &lt;em&gt;directory context&lt;/em&gt;. It defines methods for examining and updating attributes associated with a &lt;em&gt;directory object&lt;/em&gt;, or &lt;em&gt;directory entry&lt;/em&gt; as it is sometimes called.</source>
          <target state="translated">&lt;code&gt;DirContext&lt;/code&gt; 인터페이스는 표현 &lt;em&gt;디렉토리 컨텍스트를&lt;/em&gt; . &lt;em&gt;디렉토리 객체&lt;/em&gt; 또는 &lt;em&gt;디렉토리 항목&lt;/em&gt; 과 관련된 속성을 검사하고 업데이트하는 메소드를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="4f5f26151bcc82651095413443582e43d30057ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DirectColorModel&lt;/code&gt; class is a &lt;code&gt;ColorModel&lt;/code&gt; class that works with pixel values that represent RGB color and alpha information as separate samples and that pack all samples for a single pixel into a single int, short, or byte quantity.</source>
          <target state="translated">&lt;code&gt;DirectColorModel&lt;/code&gt; 를의 클래스는이다 &lt;code&gt;ColorModel&lt;/code&gt; 클래스 그 RGB 색 분리 샘플로서 알파 정보 팩하는 INT에 단일 픽셀의 모든 샘플 쇼트 또는 바이트 량을 나타내는 화소 값과 동작한다.</target>
        </trans-unit>
        <trans-unit id="867620aab0b989d77251241f205787cce5693818" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DirectColorModel&lt;/code&gt; class is a &lt;code&gt;ColorModel&lt;/code&gt; class that works with pixel values that represent RGB color and alpha information as separate samples and that pack all samples for a single pixel into a single int, short, or byte quantity. This class can be used only with ColorSpaces of type ColorSpace.TYPE_RGB. In addition, for each component of the ColorSpace, the minimum normalized component value obtained via the &lt;code&gt;getMinValue()&lt;/code&gt; method of ColorSpace must be 0.0, and the maximum value obtained via the &lt;code&gt;getMaxValue()&lt;/code&gt; method must be 1.0 (these min/max values are typical for RGB spaces). There must be three color samples in the pixel values and there can be a single alpha sample. For those methods that use a primitive array pixel representation of type &lt;code&gt;transferType&lt;/code&gt;, the array length is always one. The transfer types supported are DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, and DataBuffer.TYPE_INT. Color and alpha samples are stored in the single element of the array in bits indicated by bit masks. Each bit mask must be contiguous and masks must not overlap. The same masks apply to the single int pixel representation used by other methods. The correspondence of masks and color/alpha samples is as follows:</source>
          <target state="translated">&lt;code&gt;DirectColorModel&lt;/code&gt; 클래스가있다 &lt;code&gt;ColorModel&lt;/code&gt; 클래스 그 RGB 색 분리 샘플로서 알파 정보 팩하는 INT에 단일 픽셀의 모든 샘플 쇼트 또는 바이트 량을 나타내는 화소 값과 동작한다. 이 클래스는 ColorSpace.TYPE_RGB 유형의 ColorSpaces에만 사용할 수 있습니다. 또한 ColorSpace의 각 구성 요소에 대해 ColorSpace의 &lt;code&gt;getMinValue()&lt;/code&gt; 메서드를 통해 얻은 정규화 된 최소 구성 요소 값 은 0.0 하고 를 통해 얻은 &lt;code&gt;getMaxValue()&lt;/code&gt; method는 1.0이어야합니다 (이러한 최소 / 최대 값은 RGB 공간에 일반적 임). 픽셀 값에는 3 개의 색상 샘플이 있어야하며 단일 알파 샘플이있을 수 있습니다. 유형의 기본 배열 픽셀 표현을 사용하는 메소드의 &lt;code&gt;transferType&lt;/code&gt; , 배열 길이는 항상 1입니다. 지원되는 전송 유형은 DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT 및 DataBuffer.TYPE_INT입니다. 색상 및 알파 샘플은 비트 마스크로 표시된 비트 단위로 배열의 단일 요소에 저장됩니다. 각 비트 마스크는 연속적이어야하며 마스크는 겹치지 않아야합니다. 다른 메서드에서 사용하는 단일 int 픽셀 표현에도 동일한 마스크가 적용됩니다. 마스크와 색상 / 알파 샘플의 대응은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="116fdd7be681df744083396585fbcc59f22bf9ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DisplayMode&lt;/code&gt; class encapsulates the bit depth, height, width, and refresh rate of a &lt;code&gt;GraphicsDevice&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DisplayMode&lt;/code&gt; 를의 클래스는 비트 깊이, 높이, 너비 및 재생률의 캡슐화 &lt;code&gt;GraphicsDevice&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19d8de06d0560ad2d757b5196f0ee295518354f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DisplayMode&lt;/code&gt; class encapsulates the bit depth, height, width, and refresh rate of a &lt;code&gt;GraphicsDevice&lt;/code&gt;. The ability to change graphics device's display mode is platform- and configuration-dependent and may not always be available (see &lt;a href=&quot;graphicsdevice#isDisplayChangeSupported()&quot;&gt;&lt;code&gt;GraphicsDevice.isDisplayChangeSupported()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;DisplayMode&lt;/code&gt; 를의 클래스는 비트 깊이, 높이, 너비 및 재생률의 캡슐화 &lt;code&gt;GraphicsDevice&lt;/code&gt; . 그래픽 장치의 디스플레이 모드를 변경하는 기능은 플랫폼 및 구성에 따라 다르며 항상 사용 가능한 것은 아닙니다 ( &lt;a href=&quot;graphicsdevice#isDisplayChangeSupported()&quot;&gt; &lt;code&gt;GraphicsDevice.isDisplayChangeSupported()&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="4fb3b5b3b8f09e2d62efe297d30103c7df42ac62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Document&lt;/code&gt; interface represents the entire HTML or XML document.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; 인터페이스는 전체 HTML이나 XML 문서를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="529187b6ef833899d4c3fe664e30fd697bfbf6e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Document&lt;/code&gt; interface represents the entire HTML or XML document. Conceptually, it is the root of the document tree, and provides the primary access to the document's data.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; 인터페이스는 전체 HTML이나 XML 문서를 나타냅니다. 개념적으로 문서 트리의 루트이며 문서 데이터에 대한 기본 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="77b826e655118178902fe5ff860eeed0127a2cf4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Document&lt;/code&gt; is a container for text that serves as the model for swing text components.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; 스윙 텍스트 부품의 모델이되는 텍스트 컨테이너이다.</target>
        </trans-unit>
        <trans-unit id="b030057a42290c1393ddd1e1a7f09690aa85b082" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Document&lt;/code&gt; is a container for text that serves as the model for swing text components. The goal for this interface is to scale from very simple needs (a plain text textfield) to complex needs (an HTML or XML document, for example).</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; 스윙 텍스트 부품의 모델이되는 텍스트 컨테이너이다. 이 인터페이스의 목표는 매우 단순한 요구 사항 (일반 텍스트 텍스트 필드)에서 복잡한 요구 사항 (예 : HTML 또는 XML 문서)으로 확장하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="fb8a86827947eed5054d0b92cc87db4d596781ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Document&lt;/code&gt; object associated with this node.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; 이 노드와 연관된 오브젝트.</target>
        </trans-unit>
        <trans-unit id="3fb4c76953555bf6e63541fe62da2f11a2880575" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Document&lt;/code&gt; object associated with this node. This is also the &lt;code&gt;Document&lt;/code&gt; object used to create new nodes. When this node is a &lt;code&gt;Document&lt;/code&gt; or a &lt;code&gt;DocumentType&lt;/code&gt; which is not used with any &lt;code&gt;Document&lt;/code&gt; yet, this is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; 이 노드와 연관된 오브젝트. 이것은 또한 새 노드를 만드는 데 사용되는 &lt;code&gt;Document&lt;/code&gt; 개체입니다. 이 노드가 아직 &lt;code&gt;Document&lt;/code&gt; 와 함께 사용되지 않는 &lt;code&gt;Document&lt;/code&gt; 또는 &lt;code&gt;DocumentType&lt;/code&gt; &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="26a004a227df19ba0b28f836a76c1bed44daf5c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DocumentEvent&lt;/code&gt; interface provides a mechanism by which the user can create an Event of a type supported by the implementation.</source>
          <target state="translated">&lt;code&gt;DocumentEvent&lt;/code&gt; 인터페이스 구현에 의해 지원되는 유형의 이벤트를 생성 할 수있는 메커니즘을 제공한다.</target>
        </trans-unit>
        <trans-unit id="199332283596de73d645a3765aa17baba682d9ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DocumentEvent&lt;/code&gt; interface provides a mechanism by which the user can create an Event of a type supported by the implementation. It is expected that the &lt;code&gt;DocumentEvent&lt;/code&gt; interface will be implemented on the same object which implements the &lt;code&gt;Document&lt;/code&gt; interface in an implementation which supports the Event model.</source>
          <target state="translated">&lt;code&gt;DocumentEvent&lt;/code&gt; 인터페이스 구현에 의해 지원되는 유형의 이벤트를 생성 할 수있는 메커니즘을 제공한다. &lt;code&gt;DocumentEvent&lt;/code&gt; 인터페이스는 Event 모델을 지원 하는 구현에서 &lt;code&gt;Document&lt;/code&gt; 인터페이스 를 구현하는 동일한 객체에 구현 될 것으로 예상 됩니다 .</target>
        </trans-unit>
        <trans-unit id="384468ad54c38d729b48375adee37805e7c7400d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DocumentView&lt;/code&gt; interface is implemented by &lt;code&gt;Document&lt;/code&gt; objects in DOM implementations supporting DOM Views.</source>
          <target state="translated">&lt;code&gt;DocumentView&lt;/code&gt; 에 의해 구현되는 인터페이스 &lt;code&gt;Document&lt;/code&gt; DOM 뷰를 지원 DOM 구현의 개체.</target>
        </trans-unit>
        <trans-unit id="74e363801907d5d58d5de67ff49207cebfba94a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DocumentView&lt;/code&gt; interface is implemented by &lt;code&gt;Document&lt;/code&gt; objects in DOM implementations supporting DOM Views. It provides an attribute to retrieve the default view of a document.</source>
          <target state="translated">&lt;code&gt;DocumentView&lt;/code&gt; 에 의해 구현되는 인터페이스 &lt;code&gt;Document&lt;/code&gt; DOM 뷰를 지원 DOM 구현의 개체. 문서의 기본보기를 검색하는 속성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="47632e0ee471d6ff392a53397568f93dda81d8af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class defines a geometric path with coordinates stored in double precision floating point.</source>
          <target state="translated">&lt;code&gt;Double&lt;/code&gt; 클래스는 배정 밀도 부동 소수점에 저장된 좌표 기하 경로를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="017ba6ccfd5ef0c2e6010f2245960c644585fe90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class defines a point specified in &lt;code&gt;double&lt;/code&gt; precision.</source>
          <target state="translated">&lt;code&gt;Double&lt;/code&gt; 클래스로 지정된 점을 정의 &lt;code&gt;double&lt;/code&gt; 정밀도.</target>
        </trans-unit>
        <trans-unit id="d053ec0f24041ad204da5a3f15acb9d3c4182514" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class defines a rectangle specified in double coordinates.</source>
          <target state="translated">&lt;code&gt;Double&lt;/code&gt; 클래스는, double 좌표로 지정되는 구형을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="822e19dd4d622e1e3f2e386d97d2b753bdbef4ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class defines a rectangle with rounded corners all specified in &lt;code&gt;double&lt;/code&gt; coordinates.</source>
          <target state="translated">&lt;code&gt;Double&lt;/code&gt; 클래스 모두에 지정된 모서리가 둥근 사각형을 정의하는 &lt;code&gt;double&lt;/code&gt; 좌표를.</target>
        </trans-unit>
        <trans-unit id="81bdf6fd0c82e69be8a8a2d7b63a21805bc32c88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class defines an ellipse specified in &lt;code&gt;double&lt;/code&gt; precision.</source>
          <target state="translated">&lt;code&gt;Double&lt;/code&gt; 클래스는 지정된 타원을 정의 &lt;code&gt;double&lt;/code&gt; 정밀도.</target>
        </trans-unit>
        <trans-unit id="f0d66cda55834a4404c6ebd9f0fc24fcb8fcd600" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;double&lt;/code&gt; in an object.</source>
          <target state="translated">&lt;code&gt;Double&lt;/code&gt; 클래스는 원시적 형의 값 랩 &lt;code&gt;double&lt;/code&gt; 객체에 있습니다.</target>
        </trans-unit>
        <trans-unit id="d119dbf666fc6ea150e2c28f463b377c7a4b4f23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;double&lt;/code&gt; in an object. An object of type &lt;code&gt;Double&lt;/code&gt; contains a single field whose type is &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Double&lt;/code&gt; 클래스는 원시적 형의 값 랩 &lt;code&gt;double&lt;/code&gt; 객체에 있습니다. &lt;code&gt;Double&lt;/code&gt; 유형의 객체 에는 유형이 &lt;code&gt;double&lt;/code&gt; 인 단일 필드가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="fc7999e5f93a2ae9606da301019747ddf0ddb202" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragGestureListener&lt;/code&gt; associated with this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;DragGestureListener&lt;/code&gt; 관련된 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6fe201fb5b21786fce11d2dea41a8f6a73200d29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragGestureListener&lt;/code&gt; causes the &lt;code&gt;DragSource&lt;/code&gt; to initiate the Drag and Drop operation on behalf of the user, perhaps animating the GUI Cursor and/or rendering an &lt;code&gt;Image&lt;/code&gt; of the item(s) that are the subject of the operation.</source>
          <target state="translated">&lt;code&gt;DragGestureListener&lt;/code&gt; 에는 원인 &lt;code&gt;DragSource&lt;/code&gt; 에이 아마도 GUI 커서 애니메이션 및 / 또는 렌더링, 사용자 대신에 드래그 &amp;amp; 드롭 조작을 개시 할 &lt;code&gt;Image&lt;/code&gt; 조작의 대상이되는 항목 (들)을.</target>
        </trans-unit>
        <trans-unit id="c172123b5043f06b40fb19a64e6a11d4e9d26d67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragGestureRecognizer&lt;/code&gt; is an abstract base class for the specification of a platform-dependent listener that can be associated with a particular &lt;code&gt;Component&lt;/code&gt; in order to identify platform-dependent drag initiating gestures.</source>
          <target state="translated">&lt;code&gt;DragGestureRecognizer&lt;/code&gt; 특정과 연관 될 수있는 플랫폼 의존의 청취자를 지정하기위한 추상 기본 클래스입니다 &lt;code&gt;Component&lt;/code&gt; 플랫폼 의존의 드래그 개시 제스처 (gesture)를 식별하기 위해.</target>
        </trans-unit>
        <trans-unit id="743c929869d3da1e85b173832df8a167d0eee307" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSource&lt;/code&gt; associated with this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DragSource&lt;/code&gt; 에 이과 관련된 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 의 .</target>
        </trans-unit>
        <trans-unit id="0746520642e02ffbdf36d292090f49a2c350d172" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSource&lt;/code&gt; is the entity responsible for the initiation of the Drag and Drop operation, and may be used in a number of scenarios:</source>
          <target state="translated">&lt;code&gt;DragSource&lt;/code&gt; 에 드래그 &amp;amp; 드롭 조작의 개시를 담당하는 엔티티로, 그리고 시나리오로 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="792edd86c73a1bd56e5f3162af8a109f1c8f4ef4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSource&lt;/code&gt; is the entity responsible for the initiation of the Drag and Drop operation, and may be used in a number of scenarios: 1 default instance per JVM for the lifetime of that JVM.</source>
          <target state="translated">&lt;code&gt;DragSource&lt;/code&gt; 에 드래그 &amp;amp; 드롭 조작의 개시를 담당하는 엔티티와의 시나리오로 사용할 수 있습니다 : 그 JVM의 수명에 대한 JVM 당 1 개 기본 인스턴스.</target>
        </trans-unit>
        <trans-unit id="2f65ca8e9c306293912bec7fb7b044e7fe1b5243" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSource&lt;/code&gt; object manifests &quot;Drag Over&quot; feedback to the user, in the typical case by animating the GUI &lt;code&gt;Cursor&lt;/code&gt; associated with the logical cursor.</source>
          <target state="translated">&lt;code&gt;DragSource&lt;/code&gt; 에의 GUI를 애니메이션으로 전형적인 경우 오브젝트 매니페스트 사용자에게 피드백 &quot;위에 드래그&quot; &lt;code&gt;Cursor&lt;/code&gt; 논리 커서와 연관을.</target>
        </trans-unit>
        <trans-unit id="325a91f8655dca08a413883aa100c1009cbe6c94" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSourceContext&lt;/code&gt; class is responsible for managing the initiator side of the Drag and Drop protocol.</source>
          <target state="translated">&lt;code&gt;DragSourceContext&lt;/code&gt; 에 클래스는 드래그 &amp;amp; 드롭 프로토콜의 이니 씨 에이터 측을 관리합니다.</target>
        </trans-unit>
        <trans-unit id="ca76b9e0dd22f7be4d0016ce00a53938007ea043" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSourceContext&lt;/code&gt; class is responsible for managing the initiator side of the Drag and Drop protocol. In particular, it is responsible for managing drag event notifications to the &lt;a href=&quot;dragsourcelistener&quot;&gt;DragSourceListeners&lt;/a&gt; and &lt;a href=&quot;dragsourcemotionlistener&quot;&gt;DragSourceMotionListeners&lt;/a&gt;, and providing the &lt;a href=&quot;../../../../java.datatransfer/java/awt/datatransfer/transferable&quot;&gt;&lt;code&gt;Transferable&lt;/code&gt;&lt;/a&gt; representing the source data for the drag operation.</source>
          <target state="translated">&lt;code&gt;DragSourceContext&lt;/code&gt; 에의 클래스는 드래그 &amp;amp; 드롭 프로토콜의 이니 씨 에이터 측을 관리합니다. 특히 &lt;a href=&quot;dragsourcelistener&quot;&gt;DragSourceListeners&lt;/a&gt; 및 &lt;a href=&quot;dragsourcemotionlistener&quot;&gt;DragSourceMotionListeners&lt;/a&gt; 에 대한 드래그 이벤트 알림을 관리 하고 &lt;a href=&quot;../../../../java.datatransfer/java/awt/datatransfer/transferable&quot;&gt; &lt;code&gt;Transferable&lt;/code&gt; 을&lt;/a&gt; 제공합니다. 하고 드래그 작업에 대한 소스 데이터를 나타내는 .</target>
        </trans-unit>
        <trans-unit id="7b714ebd6de634fdba1f86515ab4bd0e35c46a23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSourceDragEvent&lt;/code&gt; is delivered from the &lt;code&gt;DragSourceContextPeer&lt;/code&gt;, via the &lt;code&gt;DragSourceContext&lt;/code&gt;, to the &lt;code&gt;DragSourceListener&lt;/code&gt; registered with that &lt;code&gt;DragSourceContext&lt;/code&gt; and with its associated &lt;code&gt;DragSource&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DragSourceDragEvent&lt;/code&gt; 에이 로부터 전달 &lt;code&gt;DragSourceContextPeer&lt;/code&gt; 를 비아, &lt;code&gt;DragSourceContext&lt;/code&gt; 의 사람, &lt;code&gt;DragSourceListener&lt;/code&gt; 를는 해당 등록 &lt;code&gt;DragSourceContext&lt;/code&gt; 와 함께 관련 &lt;code&gt;DragSource&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d31b1878f6e04bbd66b12f6d210c8503298cea5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSourceDragEvent&lt;/code&gt; reports the</source>
          <target state="translated">&lt;code&gt;DragSourceDragEvent&lt;/code&gt; 에는 를보고</target>
        </trans-unit>
        <trans-unit id="ac52ab45dff423a52b65a99453d257e77b17e615" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSourceDropEvent&lt;/code&gt; is delivered from the &lt;code&gt;DragSourceContextPeer&lt;/code&gt;, via the &lt;code&gt;DragSourceContext&lt;/code&gt;, to the &lt;code&gt;dragDropEnd&lt;/code&gt; method of &lt;code&gt;DragSourceListener&lt;/code&gt;s registered with that &lt;code&gt;DragSourceContext&lt;/code&gt; and with its associated &lt;code&gt;DragSource&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DragSourceDropEvent&lt;/code&gt; 로부터 전달 &lt;code&gt;DragSourceContextPeer&lt;/code&gt; 를 비아, &lt;code&gt;DragSourceContext&lt;/code&gt; 의 사람, &lt;code&gt;dragDropEnd&lt;/code&gt; 방법 &lt;code&gt;DragSourceListener&lt;/code&gt; 를 그 등록의 &lt;code&gt;DragSourceContext&lt;/code&gt; 에 그와 연관된 &lt;code&gt;DragSource&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e677218ceda78bbf903d55fdd8613920724c58b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSourceDropEvent&lt;/code&gt; is delivered from the &lt;code&gt;DragSourceContextPeer&lt;/code&gt;, via the &lt;code&gt;DragSourceContext&lt;/code&gt;, to the &lt;code&gt;dragDropEnd&lt;/code&gt; method of &lt;code&gt;DragSourceListener&lt;/code&gt;s registered with that &lt;code&gt;DragSourceContext&lt;/code&gt; and with its associated &lt;code&gt;DragSource&lt;/code&gt;. It contains sufficient information for the originator of the operation to provide appropriate feedback to the end user when the operation completes.</source>
          <target state="translated">&lt;code&gt;DragSourceDropEvent&lt;/code&gt; 로부터 전달 &lt;code&gt;DragSourceContextPeer&lt;/code&gt; 를 비아, &lt;code&gt;DragSourceContext&lt;/code&gt; 의 사람, &lt;code&gt;dragDropEnd&lt;/code&gt; 방법 &lt;code&gt;DragSourceListener&lt;/code&gt; 를 그 등록의 &lt;code&gt;DragSourceContext&lt;/code&gt; 의 그것과 연관된 &lt;code&gt;DragSource&lt;/code&gt; . 여기에는 작업이 완료 될 때 최종 사용자에게 적절한 피드백을 제공하기 위해 작업 작성자에게 충분한 정보가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9e3418fc8cdd49330b7f79abdc8904fb8722d38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSourceListener&lt;/code&gt; defines the event interface for originators of Drag and Drop operations to track the state of the user's gesture, and to provide appropriate &quot;drag over&quot; feedback to the user throughout the Drag and Drop operation.</source>
          <target state="translated">&lt;code&gt;DragSourceListener&lt;/code&gt; 를 사용자의 동작의 상태를 추적하고, 드래그 앤 드롭 동작에 걸쳐 사용자에게 적절한 피드백 &quot;위에 드래그&quot;를 제공하기 위해, 드래그 &amp;amp; 드롭 조작에 대한 이벤트 인터페이스를 정의한다.</target>
        </trans-unit>
        <trans-unit id="2f2d9115dd61845a24deb87877d315f3a9e4f165" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTarget&lt;/code&gt; is associated with a &lt;code&gt;Component&lt;/code&gt; when that &lt;code&gt;Component&lt;/code&gt; wishes to accept drops during Drag and Drop operations.</source>
          <target state="translated">&lt;code&gt;DropTarget&lt;/code&gt; 와 관련된 &lt;code&gt;Component&lt;/code&gt; 때 &lt;code&gt;Component&lt;/code&gt; 드래그 &amp;amp; 드롭 조작시 드롭을 받아들이려고.</target>
        </trans-unit>
        <trans-unit id="fc9ceb54981fdaa5275f1c3158775b7713926c80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTargetContext&lt;/code&gt; associated with this &lt;code&gt;DropTargetEvent&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;DropTargetContext&lt;/code&gt; 관련된 &lt;code&gt;DropTargetEvent&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3ffbaf633173a302e98991243b9280a1d21067be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTargetDragEvent&lt;/code&gt; is delivered to a &lt;code&gt;DropTargetListener&lt;/code&gt; via its dragEnter() and dragOver() methods.</source>
          <target state="translated">&lt;code&gt;DropTargetDragEvent&lt;/code&gt; 에은 (A)에 전달 &lt;code&gt;DropTargetListener&lt;/code&gt; 그것의 dragEnter () 메소드 및 dragOver () 메소드를 통해.</target>
        </trans-unit>
        <trans-unit id="7ca6b065fdcfefbc58d586632c9621c6336c3140" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTargetDragEvent&lt;/code&gt; reports the</source>
          <target state="translated">&lt;code&gt;DropTargetDragEvent&lt;/code&gt; 에는 를보고</target>
        </trans-unit>
        <trans-unit id="8cd604ebcf28e38aaec8a020404fd0ed59cb3f44" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTargetDropEvent&lt;/code&gt; is delivered via the &lt;code&gt;DropTargetListener&lt;/code&gt; drop() method.</source>
          <target state="translated">&lt;code&gt;DropTargetDropEvent&lt;/code&gt; 비아 전달 &lt;code&gt;DropTargetListener&lt;/code&gt; 강하 () 메소드.</target>
        </trans-unit>
        <trans-unit id="a7b814023f405a37ab935e9af73364cf929626ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTargetDropEvent&lt;/code&gt; reports the</source>
          <target state="translated">&lt;code&gt;DropTargetDropEvent&lt;/code&gt; 를보고</target>
        </trans-unit>
        <trans-unit id="777f975ce845ccbaea28145926d0360d15d674cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTargetEvent&lt;/code&gt; is the base class for both the &lt;code&gt;DropTargetDragEvent&lt;/code&gt; and the &lt;code&gt;DropTargetDropEvent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DropTargetEvent&lt;/code&gt; 에는 양쪽의 기본 클래스입니다 &lt;code&gt;DropTargetDragEvent&lt;/code&gt; 에 와 &lt;code&gt;DropTargetDropEvent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c3d2978f393b9a45819d66b22c6fef1c3b101b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTargetEvent&lt;/code&gt; is the base class for both the &lt;code&gt;DropTargetDragEvent&lt;/code&gt; and the &lt;code&gt;DropTargetDropEvent&lt;/code&gt;. It encapsulates the current state of the Drag and Drop operations, in particular the current &lt;code&gt;DropTargetContext&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DropTargetEvent&lt;/code&gt; 에는 양쪽의 기본 클래스입니다 &lt;code&gt;DropTargetDragEvent&lt;/code&gt; 에 와 &lt;code&gt;DropTargetDropEvent&lt;/code&gt; . 드래그 앤 드롭 작업의 현재 상태, 특히 현재 &lt;code&gt;DropTargetContext&lt;/code&gt; 를 캡슐화합니다 .</target>
        </trans-unit>
        <trans-unit id="d6f8032621bbb9de280649cd020af9e49c6c9b9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTargetListener&lt;/code&gt; interface is the callback interface used by the &lt;code&gt;DropTarget&lt;/code&gt; class to provide notification of DnD operations that involve the subject &lt;code&gt;DropTarget&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DropTargetListener&lt;/code&gt; 인터페이스는 사용하는 콜백 인터페이스입니다 &lt;code&gt;DropTarget&lt;/code&gt; 는 대상 포함 DnD 조작의 통지를 제공하는 클래스 &lt;code&gt;DropTarget&lt;/code&gt; 에 .</target>
        </trans-unit>
        <trans-unit id="f1ad4dc5e388ca41872cef2cc6ae867a25a15ca6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTargetListener&lt;/code&gt; interface is the callback interface used by the &lt;code&gt;DropTarget&lt;/code&gt; class to provide notification of DnD operations that involve the subject &lt;code&gt;DropTarget&lt;/code&gt;. Methods of this interface may be implemented to provide &quot;drag under&quot; visual feedback to the user throughout the Drag and Drop operation.</source>
          <target state="translated">&lt;code&gt;DropTargetListener&lt;/code&gt; 인터페이스는 사용하는 콜백 인터페이스입니다 &lt;code&gt;DropTarget&lt;/code&gt; 는 주제를 포함한 DnD 조작의 통지를 제공하는 클래스 &lt;code&gt;DropTarget&lt;/code&gt; 에 . 이 인터페이스의 메서드는 끌어서 놓기 작업을 통해 사용자에게 시각적 인 &quot;드래그&quot;피드백을 제공하도록 구현 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd923e66451c09da1d3d4e1f6626a2df5c8337ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ENGINE_SCOPE&lt;/code&gt;&lt;code&gt;Bindings&lt;/code&gt; of the &lt;code&gt;ScriptContext&lt;/code&gt; contains the bindings of scripting variables to application objects to be used during this script execution.</source>
          <target state="translated">&lt;code&gt;ENGINE_SCOPE&lt;/code&gt; &lt;code&gt;Bindings&lt;/code&gt; 의 &lt;code&gt;ScriptContext&lt;/code&gt; 응용 프로그램 개체에 대한 스크립트 변수의 바인딩이 스크립트의 실행 중에 사용되는 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ac2a2597218d88488760abbe3572d583515c44b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ERA&lt;/code&gt; field returns a range for the one valid Hijrah era.</source>
          <target state="translated">&lt;code&gt;ERA&lt;/code&gt; 의 필드는 하나의 유효한 신정 시대의 범위를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1a7ce34ce162da4ee98566ed04babff39297325b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Element&lt;/code&gt; interface represents an element in an HTML or XML document.</source>
          <target state="translated">&lt;code&gt;Element&lt;/code&gt; 인터페이스는 HTML 또는 XML 문서 의 요소 를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="56f8e7cbe7fedd44e71cad4abca86307c32d940a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Element&lt;/code&gt; interface represents an element in an HTML or XML document. Elements may have attributes associated with them; since the &lt;code&gt;Element&lt;/code&gt; interface inherits from &lt;code&gt;Node&lt;/code&gt;, the generic &lt;code&gt;Node&lt;/code&gt; interface attribute &lt;code&gt;attributes&lt;/code&gt; may be used to retrieve the set of all attributes for an element. There are methods on the &lt;code&gt;Element&lt;/code&gt; interface to retrieve either an &lt;code&gt;Attr&lt;/code&gt; object by name or an attribute value by name. In XML, where an attribute value may contain entity references, an &lt;code&gt;Attr&lt;/code&gt; object should be retrieved to examine the possibly fairly complex sub-tree representing the attribute value. On the other hand, in HTML, where all attributes have simple string values, methods to directly access an attribute value can safely be used as a convenience.</source>
          <target state="translated">&lt;code&gt;Element&lt;/code&gt; 인터페이스는 HTML 또는 XML 문서 의 요소 를 나타냅니다. 요소에는 연관된 속성이있을 수 있습니다. &lt;code&gt;Element&lt;/code&gt; 인터페이스는 &lt;code&gt;Node&lt;/code&gt; 에서 상속 되기 때문에 일반 &lt;code&gt;Node&lt;/code&gt; 인터페이스 속성 &lt;code&gt;attributes&lt;/code&gt; 사용하여 요소에 대한 모든 속성 집합을 검색 할 수 있습니다. &lt;code&gt;Element&lt;/code&gt; 인터페이스 에는 이름으로 &lt;code&gt;Attr&lt;/code&gt; 객체 를 검색하거나 이름으로 속성 값 을 검색 하는 메서드가 있습니다 . 속성 값에 엔티티 참조가 포함될 수있는 XML에서 &lt;code&gt;Attr&lt;/code&gt; 속성 값을 나타내는 상당히 복잡한 하위 트리를 검사하려면 개체를 검색해야합니다. 반면에 모든 속성이 단순한 문자열 값을 갖는 HTML에서는 속성 값에 직접 접근하는 메소드를 편리하게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="062646a7a70bae8b386d004ed0c24a7f5febaa0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Element&lt;/code&gt; node this attribute is attached to or &lt;code&gt;null&lt;/code&gt; if this attribute is not in use.</source>
          <target state="translated">&lt;code&gt;Element&lt;/code&gt; 노드는이 속성 또는 부착 &lt;code&gt;null&lt;/code&gt; 이 속성은 사용되지 않을 경우.</target>
        </trans-unit>
        <trans-unit id="aa0fc8a45db77f0c824cdd5135e6bc6d602e48de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ElementTraversal&lt;/code&gt; interface is a set of read-only attributes which allow an author to easily navigate between elements in a document.</source>
          <target state="translated">&lt;code&gt;ElementTraversal&lt;/code&gt; 의 인터페이스는 문서 내의 요소들 사이에 쉽게 탐색 저자 가능 판독 전용 속성의 집합이다.</target>
        </trans-unit>
        <trans-unit id="f29a430f06dd21d9a13b377efef42edf2992728c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Ellipse2D&lt;/code&gt; class describes an ellipse that is defined by a framing rectangle.</source>
          <target state="translated">&lt;code&gt;Ellipse2D&lt;/code&gt; 클래스는 구형에 의해 정의되는 타원을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="0000711917ddc5bd5d5eb440dd34fe945066b5e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Encoding&lt;/code&gt; class is static, so that all &lt;code&gt;AudioFormat&lt;/code&gt; objects that have the same encoding will refer to the same object (rather than different instances of the same class). This allows matches to be made by checking that two format's encodings are equal.</source>
          <target state="translated">&lt;code&gt;Encoding&lt;/code&gt; 클래스는 모든 그래서, 정적 &lt;code&gt;AudioFormat&lt;/code&gt; 을 된 동일한 인코딩이 물체 (오히려 동일한 클래스의 다른 인스턴스 이하) 같은 객체를 참조한다. 이를 통해 두 형식의 인코딩이 동일한 지 확인하여 일치시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a1ea0fb7e3f89b73df59f57bc0a3bb25057d04e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Encoding&lt;/code&gt; class names the specific type of data representation used for an audio stream.</source>
          <target state="translated">&lt;code&gt;Encoding&lt;/code&gt; 클래스는 오디오 스트림에 사용되는 데이터 표현의 특정 유형입니다.</target>
        </trans-unit>
        <trans-unit id="579a96ad9bfb2cbe0dbb67099e0bc3e08f52c25e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Encoding&lt;/code&gt; class names the specific type of data representation used for an audio stream. The encoding includes aspects of the sound format other than the number of channels, sample rate, sample size, frame rate, frame size, and byte order.</source>
          <target state="translated">&lt;code&gt;Encoding&lt;/code&gt; 클래스는 오디오 스트림에 사용되는 데이터 표현의 특정 유형입니다. 인코딩에는 채널 수, 샘플 속도, 샘플 크기, 프레임 속도, 프레임 크기 및 바이트 순서 이외의 사운드 형식 측면이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="70221ca9234977d1998bbe35ce71cb299b70251c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Event&lt;/code&gt; interface is used to provide contextual information about an event to the handler processing the event.</source>
          <target state="translated">&lt;code&gt;Event&lt;/code&gt; 인터페이스는 이벤트를 처리하는 이벤트 핸들러에 대한 컨텍스트 정보를 제공하는데 사용된다.</target>
        </trans-unit>
        <trans-unit id="ee720903ce1589882e864971326a615e0265b5cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Event&lt;/code&gt; interface is used to provide contextual information about an event to the handler processing the event. An object which implements the &lt;code&gt;Event&lt;/code&gt; interface is generally passed as the first parameter to an event handler. More specific context information is passed to event handlers by deriving additional interfaces from &lt;code&gt;Event&lt;/code&gt; which contain information directly relating to the type of event they accompany. These derived interfaces are also implemented by the object passed to the event listener.</source>
          <target state="translated">&lt;code&gt;Event&lt;/code&gt; 인터페이스는 이벤트를 처리하는 이벤트 핸들러에 대한 컨텍스트 정보를 제공하는데 사용된다. &lt;code&gt;Event&lt;/code&gt; 인터페이스 를 구현하는 객체 는 일반적으로 이벤트 핸들러에 첫 번째 매개 변수로 전달됩니다. 더 구체적인 컨텍스트 정보는 &lt;code&gt;Event&lt;/code&gt; 가 수반되는 이벤트 유형과 직접 관련된 정보를 포함 하는 추가 인터페이스를 이벤트 에서 파생시켜 이벤트 핸들러로 전달됩니다 . 이러한 파생 인터페이스는 이벤트 리스너에 전달 된 객체에 의해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="c57bc9aa7ce02ee33576a9afbd97413544332913" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventContext&lt;/code&gt; instance on which you invoke the registration methods is the &lt;em&gt;event source&lt;/em&gt; of the events that are (potentially) generated. The source is &lt;em&gt;not necessarily&lt;/em&gt; the object named by the target. Only when the target is the empty name is the object named by the target the source. In other words, the target, along with the scope parameter, are used to identify the object(s) that the listener is interested in, but the event source is the &lt;code&gt;EventContext&lt;/code&gt; instance with which the listener has registered.</source>
          <target state="translated">&lt;code&gt;EventContext&lt;/code&gt; 당신이 등록 메소드를 호출하는 인스턴스입니다 &lt;em&gt;이벤트 소스&lt;/em&gt; (잠재적으로) 생성되는 이벤트. 소스는 &lt;em&gt;반드시&lt;/em&gt; 대상에 의해 명명 된 오브젝트 일 &lt;em&gt;필요&lt;/em&gt; 는 &lt;em&gt;없습니다&lt;/em&gt; . 대상이 빈 이름 인 경우에만 대상이 소스로 명명 한 오브젝트입니다. 다시 말해, 대상은 scope 매개 변수와 함께 리스너가 관심있는 객체를 식별하는 데 사용되지만 이벤트 소스는 리스너가 등록한 &lt;code&gt;EventContext&lt;/code&gt; 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="0401b3ef0ddcd75a11b4100c749b173a19fed9a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventHandler&lt;/code&gt; class is intended to be used by interactive tools, such as application builders, that allow developers to make connections between beans. Typically connections are made from a user interface bean (the event &lt;em&gt;source&lt;/em&gt;) to an application logic bean (the &lt;em&gt;target&lt;/em&gt;). The most effective connections of this kind isolate the application logic from the user interface. For example, the &lt;code&gt;EventHandler&lt;/code&gt; for a connection from a &lt;code&gt;JCheckBox&lt;/code&gt; to a method that accepts a boolean value can deal with extracting the state of the check box and passing it directly to the method so that the method is isolated from the user interface layer.</source>
          <target state="translated">&lt;code&gt;EventHandler&lt;/code&gt; 클래스는 개발자가 Bean 간의 접속을 확립하기 위해서 애플리케이션 빌더와 같은 대화 형 툴로 사용하기위한 것입니다. 일반적으로 사용자 인터페이스 Bean (이벤트 &lt;em&gt;소스&lt;/em&gt; )에서 애플리케이션 로직 Bean ( &lt;em&gt;대상&lt;/em&gt; )으로 연결됩니다. 이러한 종류의 가장 효과적인 연결은 응용 프로그램 논리를 사용자 인터페이스에서 분리합니다. 예를 들어, &lt;code&gt;JCheckBox&lt;/code&gt; 에서 부울 값을 허용하는 메소드 로 연결하기위한 &lt;code&gt;EventHandler&lt;/code&gt; 는 선택란의 상태를 추출하여 메소드에 직접 전달하여 메소드가 사용자 인터페이스 계층에서 분리되도록 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="0a0c2cb5421950ae7ac855868e35820ff6dd57b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventHandler&lt;/code&gt; class provides support for dynamically generating event listeners whose methods execute a simple statement involving an incoming event object and a target object.</source>
          <target state="translated">&lt;code&gt;EventHandler&lt;/code&gt; 클래스는 동적으로 그 메소드 수신 이벤트 객체와 타겟 오브젝트를 포함한 단순한 문장을 실행하는 이벤트 리스너를 생성하기위한 지원을 제공한다.</target>
        </trans-unit>
        <trans-unit id="5746368fd39e97ecb130eef1d44079c51b10dd57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventListener&lt;/code&gt; interface is the primary method for handling events.</source>
          <target state="translated">&lt;code&gt;EventListener&lt;/code&gt; 인터페이스는 이벤트 처리의 중요한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="d5b8044a35f1030045e0fcb4786dab202a677cc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventListener&lt;/code&gt; interface is the primary method for handling events. Users implement the &lt;code&gt;EventListener&lt;/code&gt; interface and register their listener on an &lt;code&gt;EventTarget&lt;/code&gt; using the &lt;code&gt;AddEventListener&lt;/code&gt; method. The users should also remove their &lt;code&gt;EventListener&lt;/code&gt; from its &lt;code&gt;EventTarget&lt;/code&gt; after they have completed using the listener.</source>
          <target state="translated">&lt;code&gt;EventListener&lt;/code&gt; 인터페이스는 이벤트 처리의 중요한 방법입니다. 사용자는 &lt;code&gt;EventListener&lt;/code&gt; 인터페이스를 구현하고 &lt;code&gt;AddEventListener&lt;/code&gt; 메서드를 사용하여 &lt;code&gt;EventTarget&lt;/code&gt; 에 리스너를 등록합니다 . 사용자는 리스너 사용을 완료 한 후 &lt;code&gt;EventTarget&lt;/code&gt; 에서 &lt;code&gt;EventListener&lt;/code&gt; 를 제거해야합니다 .</target>
        </trans-unit>
        <trans-unit id="eba9a866ee0aa85057bfaa47d775f6b70445832f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventTarget&lt;/code&gt; interface is implemented by all &lt;code&gt;Nodes&lt;/code&gt; in an implementation which supports the DOM Event Model.</source>
          <target state="translated">&lt;code&gt;EventTarget&lt;/code&gt; 인터페이스는 모두에 의해 구현되는 &lt;code&gt;Nodes&lt;/code&gt; DOM 이벤트 모델을 지원하는 구현에.</target>
        </trans-unit>
        <trans-unit id="2b0f81e17db7dd6a51dcbe255542568c5bc70c5b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventTarget&lt;/code&gt; interface is implemented by all &lt;code&gt;Nodes&lt;/code&gt; in an implementation which supports the DOM Event Model. Therefore, this interface can be obtained by using binding-specific casting methods on an instance of the &lt;code&gt;Node&lt;/code&gt; interface. The interface allows registration and removal of &lt;code&gt;EventListeners&lt;/code&gt; on an &lt;code&gt;EventTarget&lt;/code&gt; and dispatch of events to that &lt;code&gt;EventTarget&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EventTarget&lt;/code&gt; 인터페이스는 모두에 의해 구현되는 &lt;code&gt;Nodes&lt;/code&gt; DOM 이벤트 모델을 지원하는 구현에. 따라서이 인터페이스는 &lt;code&gt;Node&lt;/code&gt; 인터페이스 의 인스턴스에서 바인딩 관련 캐스팅 메서드를 사용하여 얻을 수 있습니다 . 인터페이스를 사용 하면 &lt;code&gt;EventTarget&lt;/code&gt; 에 &lt;code&gt;EventListeners&lt;/code&gt; 를 등록 및 제거 하고 해당 &lt;code&gt;EventTarget&lt;/code&gt; 에 이벤트를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18ab01a7844cde2885367a84cc967515963ae74d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Executable&lt;/code&gt; declaring this parameter.</source>
          <target state="translated">이 매개 변수를 선언 하는 &lt;code&gt;Executable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="748442734a6da04d6ba765d11eb14f744d0ff842" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Executor&lt;/code&gt; implementations provided in this package implement &lt;a href=&quot;executorservice&quot;&gt;&lt;code&gt;ExecutorService&lt;/code&gt;&lt;/a&gt;, which is a more extensive interface. The &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; class provides an extensible thread pool implementation. The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class provides convenient factory methods for these Executors.</source>
          <target state="translated">&lt;code&gt;Executor&lt;/code&gt; 이 패키지로 제공 구현 구현 &lt;a href=&quot;executorservice&quot;&gt; &lt;code&gt;ExecutorService&lt;/code&gt; 를&lt;/a&gt; 보다 다양한 인터페이스이다. &lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt; 클래스는 확장 가능한 thread 풀 구현을 제공합니다. &lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt; 클래스는 이러한 Executor 용의 편리 성의 높은 팩토리 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cd7831d464cae2caf35d14c49bf37dcbd50928ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileDialog&lt;/code&gt; class displays a dialog window from which the user can select a file.</source>
          <target state="translated">&lt;code&gt;FileDialog&lt;/code&gt; 클래스는 사용자가 파일을 선택할 수있는 다이얼로그 윈도우를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="104e889b683697e2a1535a79c04ec73d00af897b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileHandler&lt;/code&gt; can either write to a specified file, or it can write to a rotating set of files.</source>
          <target state="translated">&lt;code&gt;FileHandler&lt;/code&gt; 지정된 파일을 하나 쓰기, 또는 파일의 로테이션 세트에 기록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c629d1686ef85f09a631d3c6d79e16eb2130db7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values) except that the given pattern argument is used as the filename pattern, the file limit is set to no limit, and the file count is set to one.</source>
          <target state="translated">&lt;code&gt;FileHandler&lt;/code&gt; 기반으로 구성된다 &lt;code&gt;LogManager&lt;/code&gt; 지정된 패턴 인수 파일명 패턴으로서 사용되는 것을 제외하고는 속성 (또는 디폴트 값) 파일 한계는 무제한으로 설정하고, 파일의 수는 1로 설정된다.</target>
        </trans-unit>
        <trans-unit id="1630482434078ed5febe3695c2cacb2c6ab11a76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values) except that the given pattern argument is used as the filename pattern, the file limit is set to no limit, the file count is set to one, and the append mode is set to the given &lt;code&gt;append&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;FileHandler&lt;/code&gt; 기반으로 구성된다 &lt;code&gt;LogManager&lt;/code&gt; 지정된 패턴 인수 파일명 패턴으로서 사용되는 것을 제외하고는 속성 (또는 디폴트 값) 파일 제한이 무제한으로 설정되어, 상기 파일의 카운트는 1로 설정되고, 추가 모드가 설정됩니다 주어진 &lt;code&gt;append&lt;/code&gt; 인수에.</target>
        </trans-unit>
        <trans-unit id="87b15897d52aed2848665ab23e99dca1351949cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values) except that the given pattern argument is used as the filename pattern, the file limit is set to the limit argument, and the file count is set to the given count argument, and the append mode is set to the given &lt;code&gt;append&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;FileHandler&lt;/code&gt; 기반으로 구성된다 &lt;code&gt;LogManager&lt;/code&gt; 지정된 패턴 인수 지정된 카운트 인수 파일 제한이 제한 인자로 설정 파일명 패턴으로서 사용하고, 파일 개수가 설정되어있는 것을 제외하고 속성 (또는 디폴트 값) 및 append 모드는 주어진 &lt;code&gt;append&lt;/code&gt; 인수로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="a5f603ee32e4c43503a06a42f3d23eed55051d61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values) except that the given pattern argument is used as the filename pattern, the file limit is set to the limit argument, and the file count is set to the given count argument.</source>
          <target state="translated">&lt;code&gt;FileHandler&lt;/code&gt; 기반으로 구성된다 &lt;code&gt;LogManager&lt;/code&gt; 지정된 패턴 인수 파일명 패턴으로서 사용되는 것을 제외하고는 속성 (또는 디폴트 값) 파일 제한은 제한 인자로 설정하고, 파일의 개수가 소정 개수의 인자로 설정된다.</target>
        </trans-unit>
        <trans-unit id="902ce54b56a8a7418be70ecf196fdc6d2abb61f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileReader&lt;/code&gt; is meant for reading streams of characters. For reading streams of raw bytes, consider using a &lt;code&gt;FileInputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileReader&lt;/code&gt; 문자의 스트림을 읽기위한 것입니다. 원시 바이트 스트림을 읽으 &lt;code&gt;FileInputStream&lt;/code&gt; 사용을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="5f9400ea004a66e78915fea0425d090fb09491e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileWriter&lt;/code&gt; is meant for writing streams of characters. For writing streams of raw bytes, consider using a &lt;code&gt;FileOutputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileWriter&lt;/code&gt; 는 문자의 스트림을 쓰기위한 것입니다. 원시 바이트 스트림을 작성하려면 &lt;code&gt;FileOutputStream&lt;/code&gt; 사용을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="531c96d389a16e6b4a111db536916683b490ba7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FilteredRowSet&lt;/code&gt; object will use this method internally while inserting new rows to a &lt;code&gt;FilteredRowSet&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;FilteredRowSet&lt;/code&gt; (A)에 새로운 행을 삽입하는 동안 객체는 내부적으로이 방법을 사용 &lt;code&gt;FilteredRowSet&lt;/code&gt; 인스턴스.</target>
        </trans-unit>
        <trans-unit id="6e9a4cae0012293bcacf3dcfa3a10773c155f830" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FilteredRowSet&lt;/code&gt; range criterion can be modified by applying a new &lt;code&gt;Predicate&lt;/code&gt; object to the &lt;code&gt;FilteredRowSet&lt;/code&gt; instance at any time. This is possible if no additional references to the &lt;code&gt;FilteredRowSet&lt;/code&gt; object are detected. A new filter has an immediate effect on criterion enforcement within the &lt;code&gt;FilteredRowSet&lt;/code&gt; object, and all subsequent views and updates will be subject to similar enforcement.</source>
          <target state="translated">&lt;code&gt;FilteredRowSet&lt;/code&gt; 범위 기준은 새로운 적용하여 수정 될 수 &lt;code&gt;Predicate&lt;/code&gt; 받는 개체 &lt;code&gt;FilteredRowSet&lt;/code&gt; 언제든지 인스턴스. &lt;code&gt;FilteredRowSet&lt;/code&gt; 개체에 대한 추가 참조 가 감지되지 않으면 가능합니다. 새 필터는 &lt;code&gt;FilteredRowSet&lt;/code&gt; 개체 내에서 기준 적용에 즉각적인 영향을 미치며 모든 후속보기 및 업데이트에는 유사한 적용이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="b9c1b7599d17536940e43f4891c13c30e31a414b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FlatteningPathIterator&lt;/code&gt; class returns a flattened view of another &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;FlatteningPathIterator&lt;/code&gt; 의 클래스는 다른 사람의 평탄화 된 뷰를 반환 &lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt; 객체를.</target>
        </trans-unit>
        <trans-unit id="d6995963af20174a405541621459a4cf42b76b4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FlatteningPathIterator&lt;/code&gt; class returns a flattened view of another &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; object. Other &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; classes can use this class to provide flattening behavior for their paths without having to perform the interpolation calculations themselves.</source>
          <target state="translated">&lt;code&gt;FlatteningPathIterator&lt;/code&gt; 의 클래스는 다른 사람의 평탄화 된 뷰를 반환 &lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt; 객체를. 다른 &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; 클래스는이 클래스를 사용하여 보간 계산을 직접 수행 할 필요없이 경로에 대한 평면화 동작을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbd40c49bd8d9a7324ed683644da8ab0fb15dde3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float&lt;/code&gt; class defines a geometric path with coordinates stored in single precision floating point.</source>
          <target state="translated">&lt;code&gt;Float&lt;/code&gt; 클래스는, 좌표가 단 정밀도 부동 소수점되는 기하학적 패스를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="72f4f159165d82d4c830d239bd204365474b1049" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float&lt;/code&gt; class defines a point specified in float precision.</source>
          <target state="translated">&lt;code&gt;Float&lt;/code&gt; 클래스는, float 정밀도로 지정된 점을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="9b4e57310345618e93b471ecd434a01eac973c59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float&lt;/code&gt; class defines a rectangle specified in float coordinates.</source>
          <target state="translated">&lt;code&gt;Float&lt;/code&gt; 클래스는, float 좌표로 지정되는 구형을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="9cf27054de1ce5624ddd4ab38383b55cc5d816b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float&lt;/code&gt; class defines a rectangle with rounded corners all specified in &lt;code&gt;float&lt;/code&gt; coordinates.</source>
          <target state="translated">&lt;code&gt;Float&lt;/code&gt; 클래스는 모든에 지정된 모서리가 둥근 사각형을 정의 &lt;code&gt;float&lt;/code&gt; 좌표를.</target>
        </trans-unit>
        <trans-unit id="35ae68551d0b26d10451461d73f146f494eb06cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float&lt;/code&gt; class defines an ellipse specified in &lt;code&gt;float&lt;/code&gt; precision.</source>
          <target state="translated">&lt;code&gt;Float&lt;/code&gt; 클래스는 지정된 타원을 정의 &lt;code&gt;float&lt;/code&gt; 정밀도를.</target>
        </trans-unit>
        <trans-unit id="d9aef651c660cc7e3ebf06c721651629cdc87d53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;float&lt;/code&gt; in an object.</source>
          <target state="translated">&lt;code&gt;Float&lt;/code&gt; 클래스는, 원시 형의 값 랩 &lt;code&gt;float&lt;/code&gt; 개체에 있습니다.</target>
        </trans-unit>
        <trans-unit id="faf56435fef80020d3a74b994d56ec27fef71d7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;float&lt;/code&gt; in an object. An object of type &lt;code&gt;Float&lt;/code&gt; contains a single field whose type is &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Float&lt;/code&gt; 클래스는, 원시 형의 값 랩 &lt;code&gt;float&lt;/code&gt; 개체에 있습니다. &lt;code&gt;Float&lt;/code&gt; 유형의 객체 에는 유형이 &lt;code&gt;float&lt;/code&gt; 인 단일 필드가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="ff1bf80c3497af61acd8a7e490e0a49fe5769bad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FloatControl&lt;/code&gt; abstract class provides methods to set and get the control's current floating-point value. Other methods obtain the possible range of values and the control's resolution (the smallest increment between returned values). Some float controls allow ramping to a new value over a specified period of time. &lt;code&gt;FloatControl&lt;/code&gt; also includes methods that return string labels for the minimum, maximum, and midpoint positions of the control.</source>
          <target state="translated">그만큼 &lt;code&gt;FloatControl&lt;/code&gt; 추상 클래스 설정하고 컨트롤의 현재의 부동 소수점 값을 얻을 수있는 방법을 제공합니다. 다른 방법은 가능한 값 범위와 컨트롤의 해상도 (반환 된 값 사이의 최소 증분)를 얻습니다. 일부 플로트 컨트롤을 사용하면 지정된 시간 동안 새로운 값으로 램핑 할 수 있습니다. &lt;code&gt;FloatControl&lt;/code&gt; 에는 컨트롤 의 최소, 최대 및 중간 지점 위치에 대한 문자열 레이블을 반환하는 메서드도 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1cd58efa168d666747712c3d3c73a1908978fecc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FloatControl&lt;/code&gt; class has methods to impose a maximum and minimum allowable value for gain. However, because an audio signal might already be at a high amplitude, the maximum setting does not guarantee that the signal will be undistorted when the gain is applied to it (unless the maximum is zero or negative). To avoid numeric overflow from excessively large gain settings, a gain control can implement clipping, meaning that the signal's amplitude will be limited to the maximum value representable by its audio format, instead of wrapping around.</source>
          <target state="translated">&lt;code&gt;FloatControl&lt;/code&gt; 클래스는 게인의 최대 허용치 및 최소 허용치를 규정하는 방법이있다. 그러나 오디오 신호의 진폭이 이미 높을 수 있으므로 최대 설정은 게인이 적용될 때 신호가 왜곡되지 않도록 보장하지 않습니다 (최대 값이 0 또는 음수가 아닌 한). 지나치게 큰 게인 설정으로 인한 숫자 오버플로를 피하기 위해 게인 컨트롤은 클리핑을 구현할 수 있습니다. 즉, 신호의 진폭이 줄 바꿈 대신 오디오 형식으로 표현할 수있는 최대 값으로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="6676912d1268dcad28777c51d6a9607e35cb86ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Font&lt;/code&gt; class defines constants for the logical font names &lt;a href=&quot;../font#DIALOG&quot;&gt;&lt;code&gt;DIALOG&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../font#DIALOG_INPUT&quot;&gt;&lt;code&gt;DIALOG_INPUT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../font#SANS_SERIF&quot;&gt;&lt;code&gt;SANS_SERIF&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../font#SERIF&quot;&gt;&lt;code&gt;SERIF&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../font#MONOSPACED&quot;&gt;&lt;code&gt;MONOSPACED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; 클래스는 논리 폰트 이름에 대한 상수를 정의 &lt;a href=&quot;../font#DIALOG&quot;&gt; &lt;code&gt;DIALOG&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../font#DIALOG_INPUT&quot;&gt; &lt;code&gt;DIALOG_INPUT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../font#SANS_SERIF&quot;&gt; &lt;code&gt;SANS_SERIF&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../font#SERIF&quot;&gt; &lt;code&gt;SERIF&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../font#MONOSPACED&quot;&gt; &lt;code&gt;MONOSPACED&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fb6290e56262770962d96129f1fce82b4b1128c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Font&lt;/code&gt; class represents an instance of a font face from a collection of font faces that are present in the system resources of the host system. As examples, Arial Bold and Courier Bold Italic are font faces. There can be several &lt;code&gt;Font&lt;/code&gt; objects associated with a font face, each differing in size, style, transform and font features.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; 클래스는 호스트 시스템의 시스템 리소스에 존재하는 얼굴의 폰트 컬렉션 폰트 페이스의 인스턴스를 나타낸다. 예를 들어 Arial Bold 및 Courier Bold Italic은 글꼴입니다. 각각 크기, 스타일, 변형 및 글꼴 기능이 다른 글꼴과 관련된 여러 &lt;code&gt;Font&lt;/code&gt; 개체 가있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9cd38989c33d64ddfb0afce3f4c2fbf8d931ab29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Font&lt;/code&gt; class represents fonts, which are used to render text in a visible way.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; 클래스는 텍스트를 눈에 보이는 형태에 렌더링하는 데 사용되는 폰트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d83ec2e9b9ceac56c5e640c82b8dd8628717bd67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Font&lt;/code&gt; class represents fonts, which are used to render text in a visible way. A font provides the information needed to map sequences of &lt;em&gt;characters&lt;/em&gt; to sequences of &lt;em&gt;glyphs&lt;/em&gt; and to render sequences of glyphs on &lt;code&gt;Graphics&lt;/code&gt; and &lt;code&gt;Component&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; 클래스는 텍스트를 눈에 보이는 형태에 렌더링하는 데 사용되는 폰트를 나타냅니다. 글꼴은 &lt;em&gt;문자&lt;/em&gt; 시퀀스를 &lt;em&gt;글리프&lt;/em&gt; 시퀀스에 매핑 하고 &lt;code&gt;Graphics&lt;/code&gt; 및 &lt;code&gt;Component&lt;/code&gt; 개체 에서 글리프 시퀀스를 렌더링하는 데 필요한 정보를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="c97092d779c669af47caf3ba85d4f1d8d8967679" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Font&lt;/code&gt; of the &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; 의 &lt;code&gt;Component&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="887095c238f859e81a69ba6f7ea7c6cf2748d66d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FontMetrics&lt;/code&gt; class defines a font metrics object, which encapsulates information about the rendering of a particular font on a particular screen.</source>
          <target state="translated">&lt;code&gt;FontMetrics&lt;/code&gt; 클래스는 특정 화면에서 특정 폰트의 렌더링 정보를 캡슐화하는 폰트 메트릭 객체를 정의한다.</target>
        </trans-unit>
        <trans-unit id="44a0a28784457c11b3b91e1981ce7b99133fce43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FontRenderContext&lt;/code&gt; class is a container for the information needed to correctly measure text.</source>
          <target state="translated">&lt;code&gt;FontRenderContext&lt;/code&gt; 를의 클래스는, 텍스트의 치수를 올바르게 측정하는데 필요한 정보의 컨테이너입니다.</target>
        </trans-unit>
        <trans-unit id="c15f2020faddaf638ec2b9664b545f192fb3ea3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FontRenderContext&lt;/code&gt; class is a container for the information needed to correctly measure text. The measurement of text can vary because of rules that map outlines to pixels, and rendering hints provided by an application.</source>
          <target state="translated">&lt;code&gt;FontRenderContext&lt;/code&gt; 를의 클래스는, 텍스트의 치수를 올바르게 측정하는데 필요한 정보의 컨테이너입니다. 윤곽선을 픽셀에 매핑하는 규칙과 응용 프로그램에서 제공하는 렌더링 힌트로 인해 텍스트 측정이 달라질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85f7d029dde3a2e7afbc7ce6cee578e8429c56f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Formattable&lt;/code&gt; interface must be implemented by any class that needs to perform custom formatting using the &lt;code&gt;'s'&lt;/code&gt; conversion specifier of &lt;a href=&quot;formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Formattable&lt;/code&gt; 가 인터페이스는 요구가 사용하는 커스텀 서식하는 것으로 모든 클래스에 의해 구현해야 &lt;code&gt;'s'&lt;/code&gt; 변환 지정자의를&lt;a href=&quot;formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e69e235b1c0bec2bb6332f7a9e5ede6debcaf8ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Formattable&lt;/code&gt; interface must be implemented by any class that needs to perform custom formatting using the &lt;code&gt;'s'&lt;/code&gt; conversion specifier of &lt;a href=&quot;formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt;. This interface allows basic control for formatting arbitrary objects. For example, the following class prints out different representations of a stock's name depending on the flags and length constraints:</source>
          <target state="translated">&lt;code&gt;Formattable&lt;/code&gt; 가 인터페이스는 요구가 사용하는 커스텀 서식하는 것으로 모든 클래스에 의해 구현되어야한다 &lt;code&gt;'s'&lt;/code&gt; 의 변환 지정자 &lt;a href=&quot;formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt; . 이 인터페이스를 사용하면 임의의 개체 서식을 기본적으로 제어 할 수 있습니다. 예를 들어 다음 클래스는 플래그 및 길이 제약에 따라 주식 이름의 다른 표현을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="fdc2f6ed9da54144faf7ffc672bbd4b1c6864d1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Formattable&lt;/code&gt; interface must be implemented by any class that needs to perform custom formatting using the &lt;code&gt;'s'&lt;/code&gt; conversion specifier of &lt;a href=&quot;formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt;. This interface allows basic control for formatting arbitrary objects. For example, the following class prints out different representations of a stock's name depending on the flags and length constraints: &lt;code&gt;import java.nio.CharBuffer;
   import java.util.Formatter;
   import java.util.Formattable;
   import java.util.Locale;
   import static java.util.FormattableFlags.*;

  ...

   public class StockName implements Formattable {
       private String symbol, companyName, frenchCompanyName;
       public StockName(String symbol, String companyName,
                        String frenchCompanyName) {
           ...
       }

       ...

       public void formatTo(Formatter fmt, int f, int width, int precision) {
           StringBuilder sb = new StringBuilder();

           // decide form of name
           String name = companyName;
           if (fmt.locale().equals(Locale.FRANCE))
               name = frenchCompanyName;
           boolean alternate = (f &amp;amp; ALTERNATE) == ALTERNATE;
           boolean usesymbol = alternate || (precision != -1 &amp;amp;&amp;amp; precision &amp;lt; 10);
           String out = (usesymbol ? symbol : name);

           // apply precision
           if (precision == -1 || out.length() &amp;lt; precision) {
               // write it all
               sb.append(out);
           } else {
               sb.append(out.substring(0, precision - 1)).append('*');
           }

           // apply width and justification
           int len = sb.length();
           if (len &amp;lt; width)
               for (int i = 0; i &amp;lt; width - len; i++)
                   if ((f &amp;amp; LEFT_JUSTIFY) == LEFT_JUSTIFY)
                       sb.append(' ');
                   else
                       sb.insert(0, ' ');

           fmt.format(sb.toString());
       }

       public String toString() {
           return String.format(&quot;%s - %s&quot;, symbol, companyName);
       }
   }
 &lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Formattable&lt;/code&gt; 가 인터페이스는 요구가 사용하는 커스텀 서식하는 것으로 모든 클래스에 의해 구현해야 &lt;code&gt;'s'&lt;/code&gt; 변환 지정자의를&lt;a href=&quot;formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt; . 이 인터페이스를 사용하면 임의의 객체를 포맷하기위한 기본 제어가 가능합니다. 예를 들어, 다음 클래스는 플래그 및 길이 제약 조건에 따라 주식 이름의 다른 표현을 인쇄합니다. &lt;code&gt;import java.nio.CharBuffer; import java.util.Formatter; import java.util.Formattable; import java.util.Locale; import static java.util.FormattableFlags.*; ... public class StockName implements Formattable { private String symbol, companyName, frenchCompanyName; public StockName(String symbol, String companyName, String frenchCompanyName) { ... } ... public void formatTo(Formatter fmt, int f, int width, int precision) { StringBuilder sb = new StringBuilder(); // decide form of name String name = companyName; if (fmt.locale().equals(Locale.FRANCE)) name = frenchCompanyName; boolean alternate = (f &amp;amp; ALTERNATE) == ALTERNATE; boolean usesymbol = alternate || (precision != -1 &amp;amp;&amp;amp; precision &amp;lt; 10); String out = (usesymbol ? symbol : name); // apply precision if (precision == -1 || out.length() &amp;lt; precision) { // write it all sb.append(out); } else { sb.append(out.substring(0, precision - 1)).append('*'); } // apply width and justification int len = sb.length(); if (len &amp;lt; width) for (int i = 0; i &amp;lt; width - len; i++) if ((f &amp;amp; LEFT_JUSTIFY) == LEFT_JUSTIFY) sb.append(' '); else sb.insert(0, ' '); fmt.format(sb.toString()); } public String toString() { return String.format(&quot;%s - %s&quot;, symbol, companyName); } } &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ded1b8b780654793fea0795f740f95473dfc0b75" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Formatter&lt;/code&gt;'s &quot;tail&quot; string is written to the stream before it is closed. In addition, if the &lt;code&gt;Formatter&lt;/code&gt;'s &quot;head&quot; string has not yet been written to the stream, it will be written before the &quot;tail&quot; string.</source>
          <target state="translated">&lt;code&gt;Formatter&lt;/code&gt; 가 닫히기 전에의 &quot;꼬리&quot;문자열을 스트림에 기록됩니다. 또한, &lt;code&gt;Formatter&lt;/code&gt; 의 &quot;head&quot;문자열이 아직 스트림에 기록되지 않은 경우 &quot;tail&quot;문자열 앞에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="75cc2d6f81ad7d65874276a5e2ad49a582a87e84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Future&lt;/code&gt; interface defines the &lt;a href=&quot;../../util/concurrent/future#cancel(boolean)&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method to cancel execution. This causes all threads waiting on the result of the I/O operation to throw &lt;a href=&quot;../../util/concurrent/cancellationexception&quot;&gt;&lt;code&gt;CancellationException&lt;/code&gt;&lt;/a&gt;. Whether the underlying I/O operation can be cancelled is highly implementation specific and therefore not specified. Where cancellation leaves the channel, or the entity to which it is connected, in an inconsistent state, then the channel is put into an implementation specific &lt;em&gt;error state&lt;/em&gt; that prevents further attempts to initiate I/O operations that are</source>
          <target state="translated">&lt;code&gt;Future&lt;/code&gt; (가) 인터페이스를 정의 &lt;a href=&quot;../../util/concurrent/future#cancel(boolean)&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt; 방법은 실행을 취소합니다. 이로 인해 I / O 작업의 결과를 기다리는 모든 스레드가 &lt;a href=&quot;../../util/concurrent/cancellationexception&quot;&gt; &lt;code&gt;CancellationException&lt;/code&gt; &lt;/a&gt; 을 throw 합니다. 기본 I / O 작업을 취소 할 수 있는지 여부는 구현에 따라 다르므로 지정되지 않습니다. 취소가 채널 또는 연결된 엔티티를 일관되지 않은 상태로 남겨두면 채널은 다음과 같은 I / O 작업을 시작하려는 추가 시도를 방지 하는 구현 특정 &lt;em&gt;오류 상태&lt;/em&gt; 가됩니다.</target>
        </trans-unit>
        <trans-unit id="5f0017742b86bb525c52b44a372868ba47f8c805" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Future&lt;/code&gt; interface defines the &lt;a href=&quot;../../util/concurrent/future#cancel-boolean-&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method to cancel execution. This causes all threads waiting on the result of the I/O operation to throw &lt;a href=&quot;../../util/concurrent/cancellationexception&quot;&gt;&lt;code&gt;CancellationException&lt;/code&gt;&lt;/a&gt;. Whether the underlying I/O operation can be cancelled is highly implementation specific and therefore not specified. Where cancellation leaves the channel, or the entity to which it is connected, in an inconsistent state, then the channel is put into an implementation specific &lt;em&gt;error state&lt;/em&gt; that prevents further attempts to initiate I/O operations that are</source>
          <target state="translated">&lt;code&gt;Future&lt;/code&gt; (가) 인터페이스를 정의 &lt;a href=&quot;../../util/concurrent/future#cancel-boolean-&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt; 방법은 실행을 취소합니다. 이로 인해 I / O 작업 결과를 기다리는 모든 스레드가 &lt;a href=&quot;../../util/concurrent/cancellationexception&quot;&gt; &lt;code&gt;CancellationException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다. 기본 I / O 작업을 취소 할 수 있는지 여부는 구현에 따라 다르므로 지정하지 않았습니다. 취소가 채널 또는 연결된 엔티티를 일관성이없는 상태로 두는 경우, 채널은 구현 특정 &lt;em&gt;오류 상태&lt;/em&gt; 가되어 I / O 작업을 시작하려는 추가 시도를 방해합니다.</target>
        </trans-unit>
        <trans-unit id="3602374c96f5a5c257635205a93086c90dc41df6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GSSManager&lt;/code&gt; class has two methods that enable these modes of usage: &lt;a href=&quot;#addProviderAtFront(java.security.Provider,org.ietf.jgss.Oid)&quot;&gt;&lt;code&gt;addProviderAtFront&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#addProviderAtEnd(java.security.Provider,org.ietf.jgss.Oid)&quot;&gt;&lt;code&gt;addProviderAtEnd&lt;/code&gt;&lt;/a&gt;. These methods have the effect of creating an ordered list of</source>
          <target state="translated">&lt;code&gt;GSSManager&lt;/code&gt; : 클래스는 사용의이 모드를 사용하는 두 가지 방법이있다 &lt;a href=&quot;#addProviderAtFront(java.security.Provider,org.ietf.jgss.Oid)&quot;&gt; &lt;code&gt;addProviderAtFront&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#addProviderAtEnd(java.security.Provider,org.ietf.jgss.Oid)&quot;&gt; &lt;code&gt;addProviderAtEnd&lt;/code&gt; 을&lt;/a&gt; . 이러한 방법은 정렬 된 목록을 만드는 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="70df597792a5d0c1f742f4bbc73443851469858e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GeneralPath&lt;/code&gt; class represents a geometric path constructed from straight lines, and quadratic and cubic (B&amp;eacute;zier) curves.</source>
          <target state="translated">&lt;code&gt;GeneralPath&lt;/code&gt; 의의 클래스는 직선과 차와 차 (베쥬) 곡선으로부터 작성된 기하학적 경로를 나타낸다.</target>
        </trans-unit>
        <trans-unit id="cb3e442cafe4b2435222cea3fefab94ec8d73d74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GeneralPath&lt;/code&gt; class represents a geometric path constructed from straight lines, and quadratic and cubic (B&amp;eacute;zier) curves. It can contain multiple subpaths.</source>
          <target state="translated">&lt;code&gt;GeneralPath&lt;/code&gt; 의의 클래스는 직선과 차와 차 (베쥬) 곡선으로부터 작성된 기하학적 경로를 나타낸다. 여러 하위 경로를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0794b1416bd199f56af33739272b109badf5de09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GeneralSecurityException&lt;/code&gt; class is a generic security exception class that provides type safety for all the security-related exception classes that extend from it.</source>
          <target state="translated">&lt;code&gt;GeneralSecurityException&lt;/code&gt; 의 클래스를 확장하는 모든 보안 관련 예외 클래스에 안전한 형태를 제공하는 일반적인 보안 예외 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="8c32683bb604a52bbbd12a72cd3f38b11977a353" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GetTimeRequest&lt;/code&gt; and &lt;code&gt;GetTimeResponse&lt;/code&gt; classes might be defined as follows:</source>
          <target state="translated">&lt;code&gt;GetTimeRequest&lt;/code&gt; 및 &lt;code&gt;GetTimeResponse&lt;/code&gt; 의 다음과 같이 클래스를 정의 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="13c0923d03901bd10b867c4df6e64615af99014f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GlyphJustificationInfo&lt;/code&gt; class represents information about the justification properties of a glyph.</source>
          <target state="translated">&lt;code&gt;GlyphJustificationInfo&lt;/code&gt; 의 클래스는 그래프의 정당화 속성에 대한 정보를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b927a0c2359e692e02f1706ffd35129affd6a872" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GlyphJustificationInfo&lt;/code&gt; class represents information about the justification properties of a glyph. A glyph is the visual representation of one or more characters. Many different glyphs can be used to represent a single character or combination of characters. The four justification properties represented by &lt;code&gt;GlyphJustificationInfo&lt;/code&gt; are weight, priority, absorb and limit.</source>
          <target state="translated">&lt;code&gt;GlyphJustificationInfo&lt;/code&gt; 의 클래스는 그래프의 정당화 속성에 대한 정보를 나타냅니다. 글리프는 하나 이상의 문자를 시각적으로 표현한 것입니다. 여러 다른 글리프를 사용하여 단일 문자 또는 문자 조합을 나타낼 수 있습니다. &lt;code&gt;GlyphJustificationInfo&lt;/code&gt; 가 나타내는 네 가지 정당화 속성 은 가중치, 우선 순위, 흡수 및 제한입니다.</target>
        </trans-unit>
        <trans-unit id="45abb7154dbefa102ab517801d557cf9f3c56346" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GlyphMetrics&lt;/code&gt; class represents information for a single glyph.</source>
          <target state="translated">&lt;code&gt;GlyphMetrics&lt;/code&gt; 클래스는 단일 문자 모양에 대한 정보를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4c21b3f44b58fec8cc03a6ae86f7fe0931c38e31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GlyphMetrics&lt;/code&gt; class represents information for a single glyph. A glyph is the visual representation of one or more characters. Many different glyphs can be used to represent a single character or combination of characters. &lt;code&gt;GlyphMetrics&lt;/code&gt; instances are produced by &lt;a href=&quot;../font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt; and are applicable to a specific glyph in a particular &lt;code&gt;Font&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GlyphMetrics&lt;/code&gt; 클래스는 단일 문자 모양에 대한 정보를 나타냅니다. 글리프는 하나 이상의 문자를 시각적으로 표현한 것입니다. 여러 다른 글리프를 사용하여 단일 문자 또는 문자 조합을 나타낼 수 있습니다. &lt;code&gt;GlyphMetrics&lt;/code&gt; 인스턴스는 &lt;a href=&quot;../font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; 에&lt;/a&gt; 의해 생성되며 특정 &lt;code&gt;Font&lt;/code&gt; 의 특정 글리프에 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d535761fb3907adf7a158ff9798deca3a7c2168" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GlyphVector&lt;/code&gt; does not attempt any interpretation of the sequence of glyphs it contains. Relationships between adjacent glyphs in sequence are solely used to determine the placement of the glyphs in the visual coordinate space.</source>
          <target state="translated">&lt;code&gt;GlyphVector&lt;/code&gt; 에는 포함 된 상형 문자의 순서의 해석을 시도하지 않습니다. 인접한 글리프 간의 관계는 시각적 좌표 공간에서 글리프의 배치를 결정하는 데만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="22c3fa3fa913d25f815a28b8e119f96a0555cab4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GradientPaint&lt;/code&gt; class provides a way to fill a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; with a linear color gradient pattern.</source>
          <target state="translated">&lt;code&gt;GradientPaint&lt;/code&gt; 클래스는 칠하는 수단 제공 &lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; 선형 색 그라데이션 패턴을.</target>
        </trans-unit>
        <trans-unit id="9b77696e16f3807289412d33d3f22fcce890f133" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GradientPaint&lt;/code&gt; class provides a way to fill a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; with a linear color gradient pattern. If &lt;a href=&quot;point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt; P1 with &lt;a href=&quot;color&quot;&gt;&lt;code&gt;Color&lt;/code&gt;&lt;/a&gt; C1 and &lt;code&gt;Point&lt;/code&gt; P2 with &lt;code&gt;Color&lt;/code&gt; C2 are specified in user space, the &lt;code&gt;Color&lt;/code&gt; on the P1, P2 connecting line is proportionally changed from C1 to C2. Any point P not on the extended P1, P2 connecting line has the color of the point P' that is the perpendicular projection of P on the extended P1, P2 connecting line. Points on the extended line outside of the P1, P2 segment can be colored in one of two ways.</source>
          <target state="translated">&lt;code&gt;GradientPaint&lt;/code&gt; 클래스는 칠하는 수단 제공 &lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; 선형 색 그라데이션 패턴을. 경우 &lt;a href=&quot;point&quot;&gt; &lt;code&gt;Point&lt;/code&gt; &lt;/a&gt; 와 P1 &lt;a href=&quot;color&quot;&gt; &lt;code&gt;Color&lt;/code&gt; &lt;/a&gt; C1 및 &lt;code&gt;Point&lt;/code&gt; 와 P2 &lt;code&gt;Color&lt;/code&gt; C2는 사용자 공간에서 지정되는 상기 &lt;code&gt;Color&lt;/code&gt; P1와는 P2를 연결하는 선상에 비례 C2 C1로 변경된다. 확장 된 P1, P2 연결선에없는 모든 점 P는 확장 된 P1, P2 연결선에서 P의 수직 투영 인 점 P '의 색상을 갖습니다. P1, P2 세그먼트 외부의 연장 된 선에있는 점은 두 가지 방법 중 하나로 색상을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32819e2ce29b3957db4a98ae15341d7630917a53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphicAttribute&lt;/code&gt; class represents a graphic embedded in text. Clients subclass this class to implement their own char replacement graphics. Clients wishing to embed shapes and images in text need not subclass this class. Instead, clients can use the &lt;a href=&quot;shapegraphicattribute&quot;&gt;&lt;code&gt;ShapeGraphicAttribute&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;imagegraphicattribute&quot;&gt;&lt;code&gt;ImageGraphicAttribute&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="translated">&lt;code&gt;GraphicAttribute&lt;/code&gt; 클래스는 텍스트에 포함 된 그래픽을 나타냅니다. 클라이언트는 자신의 문자 대체 그래픽을 구현하기 위해이 클래스를 하위 클래스로 만듭니다. 텍스트에 모양과 이미지를 포함하려는 클라이언트는이 클래스를 하위 클래스로 만들 필요가 없습니다. 대신 클라이언트는 &lt;a href=&quot;shapegraphicattribute&quot;&gt; &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;imagegraphicattribute&quot;&gt; &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; &lt;/a&gt; 클래스를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b392fe6147351913070567a0c9f057359947726a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Graphics&lt;/code&gt; class defines only the &lt;code&gt;setColor&lt;/code&gt; method to control the color to be painted. Since the Java 2D API extends the &lt;code&gt;Color&lt;/code&gt; object to implement the new &lt;code&gt;Paint&lt;/code&gt; interface, the existing &lt;code&gt;setColor&lt;/code&gt; method is now a convenience method for setting the current &lt;code&gt;Paint&lt;/code&gt; attribute to a &lt;code&gt;Color&lt;/code&gt; object. &lt;code&gt;setColor(c)&lt;/code&gt; is equivalent to &lt;code&gt;setPaint(c)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics&lt;/code&gt; 전용 클래스를 정의 &lt;code&gt;setColor&lt;/code&gt; 를의 색상을 제어하는 방법은 페인트합니다. Java 2D API 는 새로운 &lt;code&gt;Paint&lt;/code&gt; 인터페이스 를 구현하기 위해 &lt;code&gt;Color&lt;/code&gt; 객체를 확장하기 때문에 기존의 &lt;code&gt;setColor&lt;/code&gt; 메서드는 현재 &lt;code&gt;Paint&lt;/code&gt; 속성을 &lt;code&gt;Color&lt;/code&gt; 객체 로 설정하는 편리한 메서드입니다 . &lt;code&gt;setColor(c)&lt;/code&gt; 는 &lt;code&gt;setPaint(c)&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="e8427a2fc2ebce29422ab41b78d54daf8a407ffe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Graphics&lt;/code&gt; class defines two methods for controlling how colors are applied to the destination.</source>
          <target state="translated">&lt;code&gt;Graphics&lt;/code&gt; 클래스는 색을 목적지에 적용하는 방법을 제어하기위한 두 가지 방법을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="13125e55dc6ed960bfbfd2294776b370d2c21f49" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Graphics&lt;/code&gt; class is the abstract base class for all graphics contexts that allow an application to draw onto components that are realized on various devices, as well as onto off-screen images.</source>
          <target state="translated">&lt;code&gt;Graphics&lt;/code&gt; 클래스는 응용 프로그램이 다양한 장치에서 실현뿐만 아니라 오프 스크린 이미지 위에되는 구성 요소에 그릴 수 있도록 모든 그래픽 컨텍스트의 추상 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="a5e9745b4915a7b3ff47fc4c84d91228cd6e76fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Graphics&lt;/code&gt; object given is not initialized in any way. A view should set any settings needed.</source>
          <target state="translated">&lt;code&gt;Graphics&lt;/code&gt; 객체 주어진 어떤 식 으로든 초기화되지 않았습니다. 보기는 필요한 모든 설정을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="0a2ff97389f96fefc6b5f822679a56149d361216" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphicsConfigTemplate&lt;/code&gt; class is used to obtain a valid &lt;a href=&quot;graphicsconfiguration&quot;&gt;&lt;code&gt;GraphicsConfiguration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GraphicsConfigTemplate&lt;/code&gt; 로 클래스는 유효한 얻기 위해 사용 &lt;a href=&quot;graphicsconfiguration&quot;&gt; &lt;code&gt;GraphicsConfiguration&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ffb98ba7d72f93086adb8e667b98e30406027f45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphicsConfigTemplate&lt;/code&gt; class is used to obtain a valid &lt;a href=&quot;graphicsconfiguration&quot;&gt;&lt;code&gt;GraphicsConfiguration&lt;/code&gt;&lt;/a&gt;. A user instantiates one of these objects and then sets all non-default attributes as desired. The &lt;a href=&quot;graphicsdevice#getBestConfiguration(java.awt.GraphicsConfigTemplate)&quot;&gt;&lt;code&gt;GraphicsDevice.getBestConfiguration(java.awt.GraphicsConfigTemplate)&lt;/code&gt;&lt;/a&gt; method found in the &lt;a href=&quot;graphicsdevice&quot;&gt;&lt;code&gt;GraphicsDevice&lt;/code&gt;&lt;/a&gt; class is then called with this &lt;code&gt;GraphicsConfigTemplate&lt;/code&gt;. A valid &lt;code&gt;GraphicsConfiguration&lt;/code&gt; is returned that meets or exceeds what was requested in the &lt;code&gt;GraphicsConfigTemplate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GraphicsConfigTemplate&lt;/code&gt; 로 클래스는 유효한 얻기 위해 사용 &lt;a href=&quot;graphicsconfiguration&quot;&gt; &lt;code&gt;GraphicsConfiguration&lt;/code&gt; &lt;/a&gt; . 사용자는 이러한 개체 중 하나를 인스턴스화 한 다음 기본이 아닌 모든 속성을 원하는대로 설정합니다. &lt;a href=&quot;graphicsdevice#getBestConfiguration(java.awt.GraphicsConfigTemplate)&quot;&gt; &lt;code&gt;GraphicsDevice.getBestConfiguration(java.awt.GraphicsConfigTemplate)&lt;/code&gt; &lt;/a&gt; 방법은에서 찾을 수 &lt;a href=&quot;graphicsdevice&quot;&gt; &lt;code&gt;GraphicsDevice&lt;/code&gt; &lt;/a&gt; 다음이 불려 클래스 &lt;code&gt;GraphicsConfigTemplate&lt;/code&gt; 로 . 유효한 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 를가 만족 또는에서 요청 된 것을 초과 반환됩니다 &lt;code&gt;GraphicsConfigTemplate&lt;/code&gt; 로 .</target>
        </trans-unit>
        <trans-unit id="726b47b205fe0a661cf0370ba8da7a5b488fd925" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphicsConfiguration&lt;/code&gt; class describes the characteristics of a graphics destination such as a printer or monitor.</source>
          <target state="translated">&lt;code&gt;GraphicsConfiguration&lt;/code&gt; 클래스는 프린터 또는 모니터와 같은 그래픽 대상의 특성을 설명한다.</target>
        </trans-unit>
        <trans-unit id="a92ac41ae0dd8c36409cae0e9587878c5fb14003" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphicsConfiguration&lt;/code&gt; class describes the characteristics of a graphics destination such as a printer or monitor. There can be many &lt;code&gt;GraphicsConfiguration&lt;/code&gt; objects associated with a single graphics device, representing different drawing modes or capabilities. The corresponding native structure will vary from platform to platform. For example, on X11 windowing systems, each visual is a different &lt;code&gt;GraphicsConfiguration&lt;/code&gt;. On Microsoft Windows, &lt;code&gt;GraphicsConfiguration&lt;/code&gt;s represent PixelFormats available in the current resolution and color depth.</source>
          <target state="translated">&lt;code&gt;GraphicsConfiguration&lt;/code&gt; 클래스는 프린터 또는 모니터와 같은 그래픽 대상의 특성을 설명한다. 여러 그리기 모드 또는 기능을 나타내는 단일 그래픽 장치와 관련된 많은 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 개체 가있을 수 있습니다 . 해당 네이티브 구조는 플랫폼마다 다릅니다. 예를 들어 X11 윈도우 시스템에서 각 시각적 개체는 서로 다른 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 입니다. Microsoft Windows에서 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 은 현재 해상도 및 색 농도에서 사용할 수있는 PixelFormats를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="969d3be706bf8119db76442a54255ffe0dea0b26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphicsDevice&lt;/code&gt; class describes the graphics devices that might be available in a particular graphics environment.</source>
          <target state="translated">&lt;code&gt;GraphicsDevice&lt;/code&gt; 클래스는, 특정의 그래픽 환경에서 이용 가능한 그래픽스 디바이스를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="462d91ac3e0876dc7fa769bfba720acd5fae4a62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphicsDevice&lt;/code&gt; class describes the graphics devices that might be available in a particular graphics environment. These include screen and printer devices. Note that there can be many screens and many printers in an instance of &lt;a href=&quot;graphicsenvironment&quot;&gt;&lt;code&gt;GraphicsEnvironment&lt;/code&gt;&lt;/a&gt;. Each graphics device has one or more &lt;a href=&quot;graphicsconfiguration&quot;&gt;&lt;code&gt;GraphicsConfiguration&lt;/code&gt;&lt;/a&gt; objects associated with it. These objects specify the different configurations in which the &lt;code&gt;GraphicsDevice&lt;/code&gt; can be used.</source>
          <target state="translated">&lt;code&gt;GraphicsDevice&lt;/code&gt; 클래스는, 특정의 그래픽 환경에서 이용 가능한 그래픽스 디바이스를 설명합니다. 여기에는 화면 및 프린터 장치가 포함됩니다. &lt;a href=&quot;graphicsenvironment&quot;&gt; &lt;code&gt;GraphicsEnvironment&lt;/code&gt; &lt;/a&gt; 인스턴스에는 많은 화면과 많은 프린터가있을 수 있습니다 . 각 그래픽 장치에는 하나 이상의 &lt;a href=&quot;graphicsconfiguration&quot;&gt; &lt;code&gt;GraphicsConfiguration&lt;/code&gt; &lt;/a&gt; 개체가 연결되어 있습니다. 이러한 개체는 &lt;code&gt;GraphicsDevice&lt;/code&gt; 를 사용할 수있는 다양한 구성을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="35341cf36a040d8d479bdd8ded3520b65faf36e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphicsEnvironment&lt;/code&gt; class describes the collection of &lt;a href=&quot;graphicsdevice&quot;&gt;&lt;code&gt;GraphicsDevice&lt;/code&gt;&lt;/a&gt; objects and &lt;a href=&quot;font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt; objects available to a Java(tm) application on a particular platform.</source>
          <target state="translated">&lt;code&gt;GraphicsEnvironment&lt;/code&gt; 로의 클래스의 컬렉션을 설명 &lt;a href=&quot;graphicsdevice&quot;&gt; &lt;code&gt;GraphicsDevice&lt;/code&gt; &lt;/a&gt; 객체 및 &lt;a href=&quot;font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; &lt;/a&gt; 특정 플랫폼의 Java TM 어플리케이션으로 사용할 객체.</target>
        </trans-unit>
        <trans-unit id="7e5b963b9e15640f3032a326aa2be9cd04e50597" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphicsEnvironment&lt;/code&gt; class describes the collection of &lt;a href=&quot;graphicsdevice&quot;&gt;&lt;code&gt;GraphicsDevice&lt;/code&gt;&lt;/a&gt; objects and &lt;a href=&quot;font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt; objects available to a Java(tm) application on a particular platform. The resources in this &lt;code&gt;GraphicsEnvironment&lt;/code&gt; might be local or on a remote machine. &lt;code&gt;GraphicsDevice&lt;/code&gt; objects can be screens, printers or image buffers and are the destination of &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; drawing methods. Each &lt;code&gt;GraphicsDevice&lt;/code&gt; has a number of &lt;a href=&quot;graphicsconfiguration&quot;&gt;&lt;code&gt;GraphicsConfiguration&lt;/code&gt;&lt;/a&gt; objects associated with it. These objects specify the different configurations in which the &lt;code&gt;GraphicsDevice&lt;/code&gt; can be used.</source>
          <target state="translated">&lt;code&gt;GraphicsEnvironment&lt;/code&gt; 로의 클래스의 컬렉션을 설명 &lt;a href=&quot;graphicsdevice&quot;&gt; &lt;code&gt;GraphicsDevice&lt;/code&gt; &lt;/a&gt; 객체 및 &lt;a href=&quot;font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; &lt;/a&gt; 특정 플랫폼의 Java TM 어플리케이션으로 사용할 객체. 이 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; 의 리소스는 로컬 또는 원격 시스템에있을 수 있습니다. &lt;code&gt;GraphicsDevice&lt;/code&gt; 객체는 화면, 프린터 또는 이미지 버퍼가 될 수 있으며 &lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt; 드로잉 메서드 의 대상입니다 . 각 &lt;code&gt;GraphicsDevice&lt;/code&gt; 에는 연관된 여러 &lt;a href=&quot;graphicsconfiguration&quot;&gt; &lt;code&gt;GraphicsConfiguration&lt;/code&gt; &lt;/a&gt; 객체가 있습니다. 이러한 개체는 &lt;code&gt;GraphicsDevice&lt;/code&gt; 를 사용할 수있는 다양한 구성을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="fc511c77ada4c92e4f5e1047075dc3015a45c13a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GridBagConstraints&lt;/code&gt; class specifies constraints for components that are laid out using the &lt;code&gt;GridBagLayout&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;GridBagConstraints&lt;/code&gt; 사용하여 배치되어 구성 요소의 클래스를 지정 제약 &lt;code&gt;GridBagLayout&lt;/code&gt; 클래스를.</target>
        </trans-unit>
        <trans-unit id="054925047c5a9fd9ce6f93fbb0458416fc8717e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GridBagLayout&lt;/code&gt; class is a flexible layout manager that aligns components vertically, horizontally or along their baseline without requiring that the components be of the same size.</source>
          <target state="translated">&lt;code&gt;GridBagLayout&lt;/code&gt; 클래스 유연한 레이아웃 매니저하다 가지런 성분 수직 또는 수평 성분이 동일한 크기 일 필요없이 자신의 기준을 따라.</target>
        </trans-unit>
        <trans-unit id="574091ea4562c915fcd1fabbdb94abf8adc280e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GridBagLayout&lt;/code&gt; class is a flexible layout manager that aligns components vertically, horizontally or along their baseline without requiring that the components be of the same size. Each &lt;code&gt;GridBagLayout&lt;/code&gt; object maintains a dynamic, rectangular grid of cells, with each component occupying one or more cells, called its &lt;em&gt;display area&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;GridBagLayout&lt;/code&gt; 클래스 유연한 레이아웃 매니저하다 가지런 성분 수직 또는 수평 성분이 동일한 크기 일 필요없이 자신의 기준을 따라. 각 &lt;code&gt;GridBagLayout&lt;/code&gt; 객체는 각 구성 요소가 &lt;em&gt;표시 영역&lt;/em&gt; 이라고하는 하나 이상의 셀을 차지하는 동적 직사각형 셀 그리드를 유지합니다 .</target>
        </trans-unit>
        <trans-unit id="76062deb045ca36f22a85ceffeb0ad784b53d31e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GridBagLayout&lt;/code&gt; class requires a &lt;code&gt;GridBagConstraints&lt;/code&gt; object. Failure to pass the correct type of constraints object results in an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GridBagLayout&lt;/code&gt; 클래스는 필요 &lt;code&gt;GridBagConstraints&lt;/code&gt; 개체를. 올바른 유형의 제약 조건 객체를 전달하지 못하면 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="ac8ff2c00fb25b77e2b48357ae3e4d63bde879f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GridBagLayoutInfo&lt;/code&gt; is an utility class for &lt;code&gt;GridBagLayout&lt;/code&gt; layout manager.</source>
          <target state="translated">&lt;code&gt;GridBagLayoutInfo&lt;/code&gt; 는 을위한 유틸리티 클래스 &lt;code&gt;GridBagLayout&lt;/code&gt; 레이아웃 매니저.</target>
        </trans-unit>
        <trans-unit id="92b008e93189549a646aef66f3bffaf374962247" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GridBagLayoutInfo&lt;/code&gt; is an utility class for &lt;code&gt;GridBagLayout&lt;/code&gt; layout manager. It stores align, size and baseline parameters for every component within a container.</source>
          <target state="translated">&lt;code&gt;GridBagLayoutInfo&lt;/code&gt; 는 을위한 유틸리티 클래스 &lt;code&gt;GridBagLayout&lt;/code&gt; 레이아웃 매니저. 컨테이너 내의 모든 구성 요소에 대한 정렬, 크기 및 기준 매개 변수를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="67565b28b276bd69513394c4ddbf42066c068bfc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GridLayout&lt;/code&gt; class is a layout manager that lays out a container's components in a rectangular grid.</source>
          <target state="translated">&lt;code&gt;GridLayout&lt;/code&gt; 과의 클래스는 구형 구라 두에 컨테이너의 컴퍼넌트를 배치하는 레이아웃 매니저입니다.</target>
        </trans-unit>
        <trans-unit id="885be3d5e327ec2ad7dc7c689228f7bf0680ebe1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GridLayout&lt;/code&gt; class is a layout manager that lays out a container's components in a rectangular grid. The container is divided into equal-sized rectangles, and one component is placed in each rectangle. For example, the following is an applet that lays out six buttons into three rows and two columns:</source>
          <target state="translated">&lt;code&gt;GridLayout&lt;/code&gt; 과의 클래스는 구형 구라 두에 컨테이너의 컴퍼넌트를 배치하는 레이아웃 매니저입니다. 컨테이너는 동일한 크기의 사각형으로 분할되고 각 사각형에 하나의 구성 요소가 배치됩니다. 예를 들어, 다음은 6 개의 버튼을 3 개의 행과 2 개의 열로 배치하는 애플릿입니다.</target>
        </trans-unit>
        <trans-unit id="7b3db553a343fd330b52da577c5515316776d097" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Handler&lt;/code&gt; is responsible for formatting the message, when and if necessary. The formatting should include localization.</source>
          <target state="translated">&lt;code&gt;Handler&lt;/code&gt; 언제 필요한 경우 메시지를 포맷 할 책임이있다. 서식에는 현지화가 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="8da61bc9d927b3db75e7a43eb8fa3a67bb6d1f62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ICC_Profile getInstance&lt;/code&gt; method will return an &lt;code&gt;ICC_ProfileRGB&lt;/code&gt; object when these conditions are met. Three-component, matrix-based input profiles and RGB display profiles are examples of this type of profile.</source>
          <target state="translated">&lt;code&gt;ICC_Profile getInstance&lt;/code&gt; 메소드가 리턴 &lt;code&gt;ICC_ProfileRGB&lt;/code&gt; 의 이러한 조건이 충족 될 때 개체를. 3 성분, 매트릭스 기반 입력 프로필 및 RGB 디스플레이 프로필이 이러한 유형의 프로필 예입니다.</target>
        </trans-unit>
        <trans-unit id="91085e13e25b56334d0136ad6a6a3aeb2acef937" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOByteBuffer&lt;/code&gt; class provides an alternative way to perform reads of sequences of bytes that reduces the amount of internal data copying.</source>
          <target state="translated">&lt;code&gt;IIOByteBuffer&lt;/code&gt; 의 클래스가 수행 할 수있는 대안적인 방법은 내부 데이터 복사의 양을 감소 바이트 순서로 읽어 제공한다.</target>
        </trans-unit>
        <trans-unit id="5555691f6c07d9fa4101cfba1135746750fd08c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOMetadataController&lt;/code&gt; that will be used to provide settings for this &lt;code&gt;IIOMetadata&lt;/code&gt; object when the &lt;code&gt;activateController&lt;/code&gt; method is called.</source>
          <target state="translated">&lt;code&gt;IIOMetadataController&lt;/code&gt; 이 설정을 제공하는 데 사용됩니다 &lt;code&gt;IIOMetadata&lt;/code&gt; 때 객체 &lt;code&gt;activateController&lt;/code&gt; 의 방법이라고합니다.</target>
        </trans-unit>
        <trans-unit id="a9e351d66bd62ad441f8bd1a17f3defde63a80bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOMetadataController&lt;/code&gt; that will be used to provide settings for this &lt;code&gt;IIOMetadata&lt;/code&gt; object when the &lt;code&gt;activateController&lt;/code&gt; method is called. This value overrides any default controller, even when &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IIOMetadataController&lt;/code&gt; 이 설정을 제공하는 데 사용됩니다 &lt;code&gt;IIOMetadata&lt;/code&gt; 때 객체 &lt;code&gt;activateController&lt;/code&gt; 의 방법이라고합니다. 이 값은 &lt;code&gt;null&lt;/code&gt; 인 경우에도 기본 컨트롤러를 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="b86312023dda6b799b3a5f85701920c8a9e53282" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOParamController&lt;/code&gt; that will be used to provide settings for this &lt;code&gt;IIOParam&lt;/code&gt; object when the &lt;code&gt;activateController&lt;/code&gt; method is called.</source>
          <target state="translated">&lt;code&gt;IIOParamController&lt;/code&gt; 이 설정을 제공하는 데 사용됩니다 &lt;code&gt;IIOParam&lt;/code&gt; 의 때 객체 &lt;code&gt;activateController&lt;/code&gt; 의 방법이라고합니다.</target>
        </trans-unit>
        <trans-unit id="f17066ba75d42abb02e2b439c5a64a255a531a78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOParamController&lt;/code&gt; that will be used to provide settings for this &lt;code&gt;IIOParam&lt;/code&gt; object when the &lt;code&gt;activateController&lt;/code&gt; method is called. This value overrides any default controller, even when null.</source>
          <target state="translated">&lt;code&gt;IIOParamController&lt;/code&gt; 이 설정을 제공하는 데 사용됩니다 &lt;code&gt;IIOParam&lt;/code&gt; 의 경우 개체에 &lt;code&gt;activateController&lt;/code&gt; 방법이라고합니다. 이 값은 null 일 때도 기본 컨트롤러를 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="1373fac41a2c0fd6a7088e2e48cb2f69a0a7c602" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOReadProgressListener&lt;/code&gt; interface allows for notification of the percentage of an image that has been read successfully.</source>
          <target state="translated">&lt;code&gt;IIOReadProgressListener&lt;/code&gt; 인터페이스가 성공적으로 읽은 이미지의 비율의 통지를 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8efd925d40fc2c06f26f62362d2f5ad61bf84a89" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; interface allows for notification of the portions of an image that have been read. This is useful, for example, for implementing dynamic display of an image as it is loaded.</source>
          <target state="translated">&lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 인터페이스는 판독 된 화상의 부분의 통지를 허용한다. 예를 들어 이미지가로드 될 때 동적 표시를 구현하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d9b45fe43fb5e8f36d95b122d8bc0cf608973ea3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOReadWarningListener&lt;/code&gt; interface allows for notification of non-fatal errors during reading.</source>
          <target state="translated">&lt;code&gt;IIOReadWarningListener&lt;/code&gt; 에의 인터페이스를 읽는 동안 치명적 오류의 통지를 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b149ec0010741dabc593484f5a58f1f5bb765802" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; and &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; interfaces perform analogous functions for writers.</source>
          <target state="translated">&lt;code&gt;IIOWriteWarningListener&lt;/code&gt; 및 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 인터페이스 제작자에 대한 유사한 기능을 수행한다.</target>
        </trans-unit>
        <trans-unit id="5ebe107cde1d3bd9a79d28a4e17587461ce4d493" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; field will return a date-time with the specified instant. The offset and nano-of-second are unchanged. If the new instant value is outside the valid range then a &lt;code&gt;DateTimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">&lt;code&gt;INSTANT_SECONDS&lt;/code&gt; 의 필드는 지정된 순간에 날짜 - 시간을 반환합니다. 오프셋과 나노초는 변하지 않습니다. 새 인스턴트 값이 유효한 범위를 벗어나면 &lt;code&gt;DateTimeException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2471418c65939f74253b34d90116b39570d73512" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; field will return a date-time with the specified instant. The zone and nano-of-second are unchanged. The result will have an offset derived from the new instant and original zone. If the new instant value is outside the valid range then a &lt;code&gt;DateTimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">&lt;code&gt;INSTANT_SECONDS&lt;/code&gt; 의 필드는 지정된 순간에 날짜 - 시간을 반환합니다. 영역과 나노초는 변경되지 않습니다. 결과에는 새로운 인스턴트 및 원래 영역에서 파생 된 오프셋이 있습니다. 새 인스턴트 값이 유효한 범위를 벗어나면 &lt;code&gt;DateTimeException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="392613a8e6cca470b48fddf1528f1a7a4bb816c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Icon&lt;/code&gt; is wrapped in a &lt;code&gt;JLabel&lt;/code&gt; and displayed in the dialog.</source>
          <target state="translated">&lt;code&gt;Icon&lt;/code&gt; 에 싸여 &lt;code&gt;JLabel&lt;/code&gt; 의 및 대화 상자에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a965621559c252e432937665b61d466e33f20641" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IllegalPathStateException&lt;/code&gt; represents an exception that is thrown if an operation is performed on a path that is in an illegal state with respect to the particular operation being performed, such as appending a path segment to a &lt;a href=&quot;generalpath&quot;&gt;&lt;code&gt;GeneralPath&lt;/code&gt;&lt;/a&gt; without an initial moveto.</source>
          <target state="translated">&lt;code&gt;IllegalPathStateException&lt;/code&gt; 는 동작이 이러한 경로 세그먼트를 추가로 수행되는 특정 동작에 대해 잘못된 상태에있는 경로를 수행하는 경우 발생되는 예외 나타내는 &lt;a href=&quot;generalpath&quot;&gt; &lt;code&gt;GeneralPath&lt;/code&gt; 의을&lt;/a&gt; 초기의 moveTo 않고있다.</target>
        </trans-unit>
        <trans-unit id="9c18c56f19c3dcaf88dfb987620dbfd93d3a3c2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Image&lt;/code&gt; object determines what colors to render, sampled according to the source to destination coordinate mapping specified by the current &lt;code&gt;Transform&lt;/code&gt; and the optional image transform.</source>
          <target state="translated">&lt;code&gt;Image&lt;/code&gt; 객체는 색상이 전류에 의해 지정된 매핑 좌표 대상으로 소스에 따라 샘플링, 렌더링 작업을 결정 &lt;code&gt;Transform&lt;/code&gt; 및 옵션 이미지 변환.</target>
        </trans-unit>
        <trans-unit id="d0d2fd4edf3f38ee33c3e1c03e54afb17d287f78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; class is an implementation of &lt;a href=&quot;graphicattribute&quot;&gt;&lt;code&gt;GraphicAttribute&lt;/code&gt;&lt;/a&gt; which draws images in a &lt;a href=&quot;textlayout&quot;&gt;&lt;code&gt;TextLayout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ImageGraphicAttribute&lt;/code&gt; 에의 클래스의 구현입니다 &lt;a href=&quot;graphicattribute&quot;&gt; &lt;code&gt;GraphicAttribute&lt;/code&gt; 에&lt;/a&gt; A의 이미지를 그립니다 &lt;a href=&quot;textlayout&quot;&gt; &lt;code&gt;TextLayout&lt;/code&gt; 의&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="26f92023e5949c66d2da17553ce04c03b886aec5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageInputStream&lt;/code&gt; interface unifies streaming and file-based operations. An abstract base class, &lt;code&gt;ImageInputStreamImpl&lt;/code&gt; is provided to simplify writing a new &lt;code&gt;ImageInputStream&lt;/code&gt; class. Concrete implementation classes (&lt;code&gt;FileImageInputStream&lt;/code&gt;, &lt;code&gt;FileCacheImageInputStream&lt;/code&gt;, and &lt;code&gt;MemoryCacheImageInputStream&lt;/code&gt;) are provided that allow input to come from a &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;InputStream&lt;/code&gt; with or without the use of a temporary cache file.</source>
          <target state="translated">&lt;code&gt;ImageInputStream&lt;/code&gt; 의 스트리밍을 통합하여 및 파일 기반 작업 인터페이스를 제공합니다. 새로운 &lt;code&gt;ImageInputStream&lt;/code&gt; 클래스 작성을 단순화하기 위해 추상 기본 클래스 인 &lt;code&gt;ImageInputStreamImpl&lt;/code&gt; 이 제공됩니다 . &lt;code&gt;File&lt;/code&gt; 또는 &lt;code&gt;InputStream&lt;/code&gt; 에서 입력을 &lt;code&gt;FileImageInputStream&lt;/code&gt; 구체적 구현 클래스 ( FileImageInputStream , &lt;code&gt;FileCacheImageInputStream&lt;/code&gt; 및 &lt;code&gt;MemoryCacheImageInputStream&lt;/code&gt; )가 제공됩니다.임시 캐시 파일을 사용하거나 사용하지 않고 됩니다.</target>
        </trans-unit>
        <trans-unit id="5e27b2d4d15fde0cbc962afad6131561435419d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageInputStream&lt;/code&gt; or other &lt;code&gt;Object&lt;/code&gt; by &lt;code&gt;setInput&lt;/code&gt; and retrieved by &lt;code&gt;getInput&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageInputStream&lt;/code&gt; 또는 다른 &lt;code&gt;Object&lt;/code&gt; 에 의해 &lt;code&gt;setInput&lt;/code&gt; 에 의해 검색 &lt;code&gt;getInput&lt;/code&gt; 에 .</target>
        </trans-unit>
        <trans-unit id="23787e7b0f5233202db60183744cb5ba7ec81a77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageInputStream&lt;/code&gt; or other &lt;code&gt;Object&lt;/code&gt; by &lt;code&gt;setInput&lt;/code&gt; and retrieved by &lt;code&gt;getInput&lt;/code&gt;. By default it is initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageInputStream&lt;/code&gt; 또는 다른 &lt;code&gt;Object&lt;/code&gt; 에 의해 &lt;code&gt;setInput&lt;/code&gt; 에 의해 검색 &lt;code&gt;getInput&lt;/code&gt; 에 . 기본적으로 &lt;code&gt;null&lt;/code&gt; 로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="e870028a4bcce49d6ab74abb2d0fee3053be5245" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageOutputStream&lt;/code&gt; interface performs an analogous function for output. An abstract base class, &lt;code&gt;ImageOutputStreamImpl&lt;/code&gt; is provided, along with concrete implementation classes (&lt;code&gt;FileImageOutputStream&lt;/code&gt;, &lt;code&gt;FileCacheImageOutputStream&lt;/code&gt;, and &lt;code&gt;MemoryCacheImageOutputStream&lt;/code&gt;) are provided that allow output to go to a &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;OutputStream&lt;/code&gt; with or without the use of a temporary cache file.</source>
          <target state="translated">&lt;code&gt;ImageOutputStream&lt;/code&gt; 인터페이스 출력을 위해 유사한 기능을 수행한다. 출력이 &lt;code&gt;File&lt;/code&gt; 또는 &lt;code&gt;OutputStream&lt;/code&gt; 으로 이동할 수 있도록 하는 구체적인 구현 클래스 ( &lt;code&gt;FileImageOutputStream&lt;/code&gt; , &lt;code&gt;FileCacheImageOutputStream&lt;/code&gt; 및 &lt;code&gt;MemoryCacheImageOutputStream&lt;/code&gt; ) 와 함께 추상 기본 클래스 인 &lt;code&gt;ImageOutputStreamImpl&lt;/code&gt; 이 제공됩니다.임시 캐시 파일을 사용하거나 사용하지 않고 으로 됩니다.</target>
        </trans-unit>
        <trans-unit id="0ddae3bbe537c1a0be71cf41804a28a5a81e4fb3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageOutputStream&lt;/code&gt; or other &lt;code&gt;Object&lt;/code&gt; set by &lt;code&gt;setOutput&lt;/code&gt; and retrieved by &lt;code&gt;getOutput&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageOutputStream&lt;/code&gt; 또는 다른 &lt;code&gt;Object&lt;/code&gt; 세트로 &lt;code&gt;setOutput&lt;/code&gt; 에 의해 검색 &lt;code&gt;getOutput&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c654707cc8b01173251db888e4e9f1cadc54a60a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageOutputStream&lt;/code&gt; or other &lt;code&gt;Object&lt;/code&gt; set by &lt;code&gt;setOutput&lt;/code&gt; and retrieved by &lt;code&gt;getOutput&lt;/code&gt;. By default it is initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageOutputStream&lt;/code&gt; 또는 다른 &lt;code&gt;Object&lt;/code&gt; 세트로 &lt;code&gt;setOutput&lt;/code&gt; 에 의해 검색 &lt;code&gt;getOutput&lt;/code&gt; . 기본적으로 &lt;code&gt;null&lt;/code&gt; 로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="f70260567f0d2cbe6fe2d89e83724aa1bfc9a4e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageReaderSpi&lt;/code&gt; that instantiated this object, or &lt;code&gt;null&lt;/code&gt; if its identity is not known or none exists.</source>
          <target state="translated">이 개체를 인스턴스화 한 &lt;code&gt;ImageReaderSpi&lt;/code&gt; 입니다. ID를 알 수 없거나 존재하지 않는 경우 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="23d39dd66eefdd5b7e22c2d48611d45e7fe19e03" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageReaderSpi&lt;/code&gt; that instantiated this object, or &lt;code&gt;null&lt;/code&gt; if its identity is not known or none exists. By default it is initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 객체를 인스턴스화 한 &lt;code&gt;ImageReaderSpi&lt;/code&gt; . 식별 정보가 불명, 또는 존재하지 않는 경우는 &lt;code&gt;null&lt;/code&gt; 기본적으로 &lt;code&gt;null&lt;/code&gt; 로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="4704057a1cfa23bc9c1120bc0abf4de7efb1c23e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageWriterSpi&lt;/code&gt; that instantiated this object, or &lt;code&gt;null&lt;/code&gt; if its identity is not known or none exists.</source>
          <target state="translated">이 개체를 인스턴스화 한 &lt;code&gt;ImageWriterSpi&lt;/code&gt; 입니다. ID를 알 수 없거나 존재하지 않는 경우 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1558624413839f825eafd92b1012f6d775cab0ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageWriterSpi&lt;/code&gt; that instantiated this object, or &lt;code&gt;null&lt;/code&gt; if its identity is not known or none exists. By default it is initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 객체의 인스턴스를 생성 한 &lt;code&gt;ImageWriterSpi&lt;/code&gt; . 식별 정보를 모르거나 존재하지 않는 경우는 &lt;code&gt;null&lt;/code&gt; 기본적으로 &lt;code&gt;null&lt;/code&gt; 로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="d333f5cf1777f22147d636bd072217b0f829b493" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImagingOpException&lt;/code&gt; is thrown if one of the &lt;a href=&quot;bufferedimageop&quot;&gt;&lt;code&gt;BufferedImageOp&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;rasterop&quot;&gt;&lt;code&gt;RasterOp&lt;/code&gt;&lt;/a&gt; filter methods cannot process the image.</source>
          <target state="translated">&lt;code&gt;ImagingOpException&lt;/code&gt; 의 하나가 슬로우 &lt;a href=&quot;bufferedimageop&quot;&gt; &lt;code&gt;BufferedImageOp&lt;/code&gt; 와&lt;/a&gt; 또는 &lt;a href=&quot;rasterop&quot;&gt; &lt;code&gt;RasterOp&lt;/code&gt; 의&lt;/a&gt; 필터 방법은 이미지를 처리 할 수 없다.</target>
        </trans-unit>
        <trans-unit id="4d20fc48554b076450f5bcbb366190a701c2f94a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IndexColorModel&lt;/code&gt; class is a &lt;code&gt;ColorModel&lt;/code&gt; class that works with pixel values consisting of a single sample that is an index into a fixed colormap in the default sRGB color space.</source>
          <target state="translated">&lt;code&gt;IndexColorModel&lt;/code&gt; 클래스는이다 &lt;code&gt;ColorModel&lt;/code&gt; 클래스가 디폴트의 sRGB 색 공간의 고정 칼라 맵에 대한 인덱스 인, 단일의 샘플로부터되는 픽셀 값으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="c39e7b4238b4a83b33e75a19112d55d420ed74fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IndexColorModel&lt;/code&gt; class is a &lt;code&gt;ColorModel&lt;/code&gt; class that works with pixel values consisting of a single sample that is an index into a fixed colormap in the default sRGB color space. The colormap specifies red, green, blue, and optional alpha components corresponding to each index. All components are represented in the colormap as 8-bit unsigned integral values. Some constructors allow the caller to specify &quot;holes&quot; in the colormap by indicating which colormap entries are valid and which represent unusable colors via the bits set in a &lt;code&gt;BigInteger&lt;/code&gt; object. This color model is similar to an X11 PseudoColor visual.</source>
          <target state="translated">&lt;code&gt;IndexColorModel&lt;/code&gt; 클래스는이다 &lt;code&gt;ColorModel&lt;/code&gt; 클래스가 디폴트의 sRGB 색 공간의 고정 칼라 맵에 대한 인덱스 인, 단일의 샘플로부터되는 픽셀 값으로 작동합니다. 컬러 맵은 각 인덱스에 해당하는 빨강, 녹색, 파랑 및 선택적 알파 구성 요소를 지정합니다. 모든 구성 요소는 컬러 맵에서 8 비트 부호없는 정수 값으로 표시됩니다. 일부 생성자는 호출자가 &lt;code&gt;BigInteger&lt;/code&gt; 객체에 설정된 비트를 통해 유효한 컬러 맵 항목과 사용할 수없는 색을 나타내는 것을 표시하여 컬러 맵에 &quot;구멍&quot;을 지정할 수 있도록 합니다. 이 색상 모델은 X11 PseudoColor 비주얼과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="e251dbab4e4c6456b16648f06dec35662b5945d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;InputStream&lt;/code&gt; object that will be returned by the method &lt;code&gt;getAsciiStream&lt;/code&gt;, which is specified in the &lt;code&gt;ResultSet&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;InputStream&lt;/code&gt; 방법에 의해 반환되는 객체 &lt;code&gt;getAsciiStream&lt;/code&gt; 에 지정된된다 &lt;code&gt;ResultSet&lt;/code&gt; 인터페이스.</target>
        </trans-unit>
        <trans-unit id="a1bc6fa075667b1fa7aa96914f9db9e346cff621" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;InputStream&lt;/code&gt; object that will be returned by the method &lt;code&gt;getBinaryStream&lt;/code&gt;, which is specified in the &lt;code&gt;ResultSet&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;InputStream&lt;/code&gt; 방법에 의해 반환되는 객체 &lt;code&gt;getBinaryStream&lt;/code&gt; 을 에 지정된된다 &lt;code&gt;ResultSet&lt;/code&gt; 인터페이스.</target>
        </trans-unit>
        <trans-unit id="caeca15b76441775ba23041b93cdbba02f7befa7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;InputStream&lt;/code&gt; object that will be returned by the method &lt;code&gt;getUnicodeStream&lt;/code&gt;, which is specified in the &lt;code&gt;ResultSet&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;InputStream&lt;/code&gt; 방법에 의해 반환되는 객체 &lt;code&gt;getUnicodeStream&lt;/code&gt; 에 지정된된다 &lt;code&gt;ResultSet&lt;/code&gt; 인터페이스.</target>
        </trans-unit>
        <trans-unit id="c187ac2b0346d6275a729d49e9e4b70887e64296" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Integer&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;int&lt;/code&gt; in an object.</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; 클래스 프리미티브 타입의 값 랩 &lt;code&gt;int&lt;/code&gt; 오브젝트하여.</target>
        </trans-unit>
        <trans-unit id="62ec9068383653f569a3d3699ea099197809c35d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Integer&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;int&lt;/code&gt; in an object. An object of type &lt;code&gt;Integer&lt;/code&gt; contains a single field whose type is &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; 클래스 프리미티브 타입의 값 랩 &lt;code&gt;int&lt;/code&gt; 오브젝트하여. &lt;code&gt;Integer&lt;/code&gt; 유형의 객체 에는 유형이 &lt;code&gt;int&lt;/code&gt; 인 단일 필드가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="e3cc2ea1e526b831184aee5221e0c845f7fee4f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JApplet&lt;/code&gt; class is slightly incompatible with &lt;code&gt;java.applet.Applet&lt;/code&gt;. &lt;code&gt;JApplet&lt;/code&gt; contains a &lt;code&gt;JRootPane&lt;/code&gt; as its only child. The &lt;code&gt;contentPane&lt;/code&gt; should be the parent of any children of the &lt;code&gt;JApplet&lt;/code&gt;. As a convenience, the &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;setLayout&lt;/code&gt; methods of this class are overridden, so that they delegate calls to the corresponding methods of the &lt;code&gt;ContentPane&lt;/code&gt;. For example, you can add a child component to an applet as follows:</source>
          <target state="translated">&lt;code&gt;JApplet&lt;/code&gt; 에 클래스와 약간 호환되지 않습니다 &lt;code&gt;java.applet.Applet&lt;/code&gt; . &lt;code&gt;JApplet&lt;/code&gt; 은 &lt;code&gt;JRootPane&lt;/code&gt; 을 유일한 자식으로 포함합니다 . &lt;code&gt;contentPane&lt;/code&gt; 의 모든 아이의 부모가 될 필요가 &lt;code&gt;JApplet&lt;/code&gt; 에 . 편의상 이 클래스 의 &lt;code&gt;add&lt;/code&gt; , &lt;code&gt;remove&lt;/code&gt; 및 &lt;code&gt;setLayout&lt;/code&gt; 메서드는 재정의되어 &lt;code&gt;ContentPane&lt;/code&gt; 의 해당 메서드에 대한 호출을 위임합니다 . 예를 들어, 다음과 같이 애플릿에 하위 구성 요소를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c87e4f76b89a70ad69cce55f17acc2797e0c21d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JComponent&lt;/code&gt; class provides:</source>
          <target state="translated">&lt;code&gt;JComponent&lt;/code&gt; 의의 클래스를 제공합니다 :</target>
        </trans-unit>
        <trans-unit id="9664c24520dfd0acb583ed66d3f527d0092afdf0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JDBCType&lt;/code&gt; constant</source>
          <target state="translated">&lt;code&gt;JDBCType&lt;/code&gt; 의 일정</target>
        </trans-unit>
        <trans-unit id="a831a7ab2166f42212b45436e662aa3eac54b072" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JDialog&lt;/code&gt; component contains a &lt;code&gt;JRootPane&lt;/code&gt; as its only child. The &lt;code&gt;contentPane&lt;/code&gt; should be the parent of any children of the &lt;code&gt;JDialog&lt;/code&gt;. As a convenience, the &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;setLayout&lt;/code&gt; methods of this class are overridden, so that they delegate calls to the corresponding methods of the &lt;code&gt;ContentPane&lt;/code&gt;. For example, you can add a child component to a dialog as follows:</source>
          <target state="translated">&lt;code&gt;JDialog&lt;/code&gt; 구성 요소는 포함 &lt;code&gt;JRootPane&lt;/code&gt; 의 유일한 자식으로합니다. &lt;code&gt;contentPane&lt;/code&gt; 의 모든 아이의 부모가 될 필요가 &lt;code&gt;JDialog&lt;/code&gt; 를 . 편의상 이 클래스 의 &lt;code&gt;add&lt;/code&gt; , &lt;code&gt;remove&lt;/code&gt; 및 &lt;code&gt;setLayout&lt;/code&gt; 메서드는 재정의되어 &lt;code&gt;ContentPane&lt;/code&gt; 의 해당 메서드에 대한 호출을 위임합니다 . 예를 들어, 다음과 같이 대화 상자에 하위 구성 요소를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c6f8bb9754f43f02a3b0b1938083fdf7b145a73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JFrame&lt;/code&gt; class is slightly incompatible with &lt;code&gt;Frame&lt;/code&gt;. Like all other JFC/Swing top-level containers, a &lt;code&gt;JFrame&lt;/code&gt; contains a &lt;code&gt;JRootPane&lt;/code&gt; as its only child. The &lt;b&gt;content pane&lt;/b&gt; provided by the root pane should, as a rule, contain all the non-menu components displayed by the &lt;code&gt;JFrame&lt;/code&gt;. This is different from the AWT &lt;code&gt;Frame&lt;/code&gt; case. As a convenience, the &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;setLayout&lt;/code&gt; methods of this class are overridden, so that they delegate calls to the corresponding methods of the &lt;code&gt;ContentPane&lt;/code&gt;. For example, you can add a child component to a frame as follows:</source>
          <target state="translated">&lt;code&gt;JFrame&lt;/code&gt; 의의 클래스와 약간 호환되지 않는 &lt;code&gt;Frame&lt;/code&gt; . 다른 모든 JFC / Swing 최상위 컨테이너와 마찬가지로 &lt;code&gt;JFrame&lt;/code&gt; 은 &lt;code&gt;JRootPane&lt;/code&gt; 을 유일한 자식으로 포함합니다 . &lt;b&gt;컨텐츠 구획&lt;/b&gt; 루트 구획이 제공은 원칙적으로 메뉴 이외의 모든 구성 요소에 의해 표시가 포함되어야 &lt;code&gt;JFrame&lt;/code&gt; 의 . 이것은 AWT &lt;code&gt;Frame&lt;/code&gt; 케이스 와 다릅니다 . 편의상 이 클래스 의 &lt;code&gt;add&lt;/code&gt; , &lt;code&gt;remove&lt;/code&gt; 및 &lt;code&gt;setLayout&lt;/code&gt; 메서드는 재정의되어 &lt;code&gt;ContentPane&lt;/code&gt; 의 해당 메서드에 대한 호출을 위임합니다 . 예를 들어 다음과 같이 프레임에 하위 구성 요소를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d81a30c0184c34b3c691afdfe0e670e454d6d68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JInternalFrame&lt;/code&gt; content pane is where you add child components. As a convenience, the &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;setLayout&lt;/code&gt; methods of this class are overridden, so that they delegate calls to the corresponding methods of the &lt;code&gt;ContentPane&lt;/code&gt;. For example, you can add a child component to an internal frame as follows:</source>
          <target state="translated">&lt;code&gt;JInternalFrame&lt;/code&gt; 의 당신이 자식 구성 요소를 추가 할 경우 내용 창입니다. 편의상 이 클래스 의 &lt;code&gt;add&lt;/code&gt; , &lt;code&gt;remove&lt;/code&gt; 및 &lt;code&gt;setLayout&lt;/code&gt; 메서드는 재정의되어 &lt;code&gt;ContentPane&lt;/code&gt; 의 해당 메서드에 대한 호출을 위임합니다 . 예를 들어 다음과 같이 내부 프레임에 하위 구성 요소를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c23196121f172d1a13c98018c082ac9f69ce7b6b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JLayer&lt;/code&gt; overrides the default implementation of this method (in &lt;code&gt;JComponent&lt;/code&gt;) to return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JLayer&lt;/code&gt; 는 (이 메소드의 디폴트 구현 우선 &lt;code&gt;JComponent&lt;/code&gt; 의 반환에) &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9fdfd0369de3e98d177d6c9f03bc43faf0e048f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JLayer&lt;/code&gt; overrides the default implementation of this method (in &lt;code&gt;JComponent&lt;/code&gt;) to return &lt;code&gt;false&lt;/code&gt;. This ensures that the drawing machinery will call the &lt;code&gt;JLayer&lt;/code&gt;'s &lt;code&gt;paint&lt;/code&gt; implementation rather than messaging the &lt;code&gt;JLayer&lt;/code&gt;'s children directly.</source>
          <target state="translated">&lt;code&gt;JLayer&lt;/code&gt; 는 (이 메소드의 디폴트 구현 우선 &lt;code&gt;JComponent&lt;/code&gt; 의 반환에) &lt;code&gt;false&lt;/code&gt; . 이렇게하면 그리기 기계가 &lt;code&gt;JLayer&lt;/code&gt; 의 자식에게 직접 메시지를 보내는 대신 &lt;code&gt;JLayer&lt;/code&gt; 의 &lt;code&gt;paint&lt;/code&gt; 구현을 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b25ba63894710fd4b97499052886e621a382f62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JLayeredPane&lt;/code&gt; methods &lt;code&gt;moveToFront(Component)&lt;/code&gt;, &lt;code&gt;moveToBack(Component)&lt;/code&gt; and &lt;code&gt;setPosition&lt;/code&gt; can be used to reposition a component within its layer. The &lt;code&gt;setLayer&lt;/code&gt; method can also be used to change the component's current layer.</source>
          <target state="translated">&lt;code&gt;JLayeredPane&lt;/code&gt; 방법 &lt;code&gt;moveToFront(Component)&lt;/code&gt; , &lt;code&gt;moveToBack(Component)&lt;/code&gt; 및 &lt;code&gt;setPosition&lt;/code&gt; 를는 그 층 내의 구성 요소의 위치를 변경하기 위해 사용될 수있다. &lt;code&gt;setLayer&lt;/code&gt; 방법은 또한 컴포넌트의 현재의 레이어를 변경하는데 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="3fa5f36d971e7676ba7ab51f2c1dff644147234e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JList&lt;/code&gt; pluggable look and feel delegate.</source>
          <target state="translated">&lt;code&gt;JList&lt;/code&gt; 의 플러그 인 가능한 Look &amp;amp; Feel 위양.</target>
        </trans-unit>
        <trans-unit id="4049b86463133a049acc0748eb8f415baf880f7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JMenuItem&lt;/code&gt; subclasses only use &lt;code&gt;SMALL_ICON&lt;/code&gt;. All other buttons will use &lt;code&gt;LARGE_ICON_KEY&lt;/code&gt;; if the value is &lt;code&gt;null&lt;/code&gt; they use &lt;code&gt;SMALL_ICON&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JMenuItem&lt;/code&gt; 서브 클래스에서만 사용 &lt;code&gt;SMALL_ICON&lt;/code&gt; 를 . 다른 모든 버튼은 &lt;code&gt;LARGE_ICON_KEY&lt;/code&gt; 를 사용 합니다 . 값이 &lt;code&gt;null&lt;/code&gt; 이면 &lt;code&gt;SMALL_ICON&lt;/code&gt; 을 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="bad30b8acbde953843755f85584b7f2c2c30a621" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JRootPane&lt;/code&gt; instance that manages the &lt;code&gt;contentPane&lt;/code&gt; and optional &lt;code&gt;menuBar&lt;/code&gt; for this frame, as well as the &lt;code&gt;glassPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JRootPane&lt;/code&gt; 관리 인스턴스 &lt;code&gt;contentPane&lt;/code&gt; 및 옵션 &lt;code&gt;menuBar&lt;/code&gt; 이 프레임뿐만 아니라 대한 &lt;code&gt;glassPane&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e586e2a981f3a761025c512ea04c3022aef07c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JRootPane&lt;/code&gt; instance that manages the content pane and optional menu bar for this internal frame, as well as the glass pane.</source>
          <target state="translated">&lt;code&gt;JRootPane&lt;/code&gt; 이 내부 프레임의 컨텐츠 구획 및 옵션의 도구 모음을 관리하는 경우뿐만 아니라, 유리 창.</target>
        </trans-unit>
        <trans-unit id="0d07b328936474f5cbbebe738dfdc36bb3225929" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JTable&lt;/code&gt; can be set up to display any data model which implements the &lt;code&gt;TableModel&lt;/code&gt; interface with a couple of lines of code:</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 구현하는 데이터 모델을 표시하도록 설정할 수 있습니다 &lt;code&gt;TableModel&lt;/code&gt; 에의 몇 줄기의 코드와 인터페이스를 :</target>
        </trans-unit>
        <trans-unit id="a3d4d072368811da647b5501228f64bdae7b15e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JTable&lt;/code&gt; has many facilities that make it possible to customize its rendering and editing but provides defaults for these features so that simple tables can be set up easily. For example, to set up a table with 10 rows and 10 columns of numbers:</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 는, 가능의 렌더링을 사용자 정의 할 수 있도록 다양한 시설을 갖추고 편집 그러나이 간단한 테이블을 쉽게 설정할 수 있도록 기능을 기본적으로 제공합니다. 예를 들어 10 개의 행과 10 개의 숫자 열이있는 테이블을 설정하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="d75024b5e7e8d1ed02fdad9eaac5c7a8ad84f616" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JTable&lt;/code&gt; is used to display and edit regular two-dimensional tables of cells.</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 는, 셀의 통상의 2 차원 테이블을 표시하고 편집하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="95c8ac8d733cd5732fb777b006412d36181496a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JTable&lt;/code&gt; is used to display and edit regular two-dimensional tables of cells. See &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/table.html&quot;&gt;How to Use Tables&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt; for task-oriented documentation and examples of using &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 는, 셀의 통상의 2 차원 테이블을 표시하고 편집하는 데 사용됩니다. 태스크 지향 문서와 &lt;code&gt;JTable&lt;/code&gt; 사용 예제는 &lt;em&gt;Java Tutorial의 &lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/table.html&quot;&gt;How to Use Tables&lt;/a&gt; 를 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="52d2ad87ac37fdf47838a9cdfaacb2e8a02c95c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JTable&lt;/code&gt; uses integers exclusively to refer to both the rows and the columns of the model that it displays. The &lt;code&gt;JTable&lt;/code&gt; simply takes a tabular range of cells and uses &lt;code&gt;getValueAt(int, int)&lt;/code&gt; to retrieve the values from the model during painting. It is important to remember that the column and row indexes returned by various &lt;code&gt;JTable&lt;/code&gt; methods are in terms of the &lt;code&gt;JTable&lt;/code&gt; (the view) and are not necessarily the same indexes used by the model.</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 가 사용하는 정수 독점적 행과 그것이 표시하는 모델의 열을 모두 참조합니다. &lt;code&gt;JTable&lt;/code&gt; 는, 단순히 셀을 표 범위를 받아 사용 &lt;code&gt;getValueAt(int, int)&lt;/code&gt; 도장시에 모델로부터 값을 취득 할 수 있습니다. 다양한 &lt;code&gt;JTable&lt;/code&gt; 메서드에 의해 반환되는 열 및 행 인덱스 는 &lt;code&gt;JTable&lt;/code&gt; (뷰)과 관련이 있으며 반드시 모델에서 사용하는 인덱스와 동일하지 않다는 점을 기억하는 것이 중요합니다 .</target>
        </trans-unit>
        <trans-unit id="ff3cf78ab641e58b2c5ec4479c84cee89110d041" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JTableHeader&lt;/code&gt; that is delegating the painting to this UI.</source>
          <target state="translated">&lt;code&gt;JTableHeader&lt;/code&gt; 에 이 UI에 그림을 위임한다.</target>
        </trans-unit>
        <trans-unit id="eaa7c23e7e2bbbc13aa330255c3995984f627edd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JViewport&lt;/code&gt; overrides the default implementation of this method (in &lt;code&gt;JComponent&lt;/code&gt;) to return false.</source>
          <target state="translated">&lt;code&gt;JViewport&lt;/code&gt; (이 메소드의 디폴트 구현 우선 &lt;code&gt;JComponent&lt;/code&gt; 의 반환 false로)을.</target>
        </trans-unit>
        <trans-unit id="ec409845719307e978c8e91fb5b03ac6a0c35b35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JViewport&lt;/code&gt; overrides the default implementation of this method (in &lt;code&gt;JComponent&lt;/code&gt;) to return false. This ensures that the drawing machinery will call the &lt;code&gt;Viewport&lt;/code&gt;'s &lt;code&gt;paint&lt;/code&gt; implementation rather than messaging the &lt;code&gt;JViewport&lt;/code&gt;'s children directly.</source>
          <target state="translated">&lt;code&gt;JViewport&lt;/code&gt; (이 메소드의 디폴트 구현 우선 &lt;code&gt;JComponent&lt;/code&gt; 의 반환 false로)을. 이렇게하면 그리기 기계가 &lt;code&gt;JViewport&lt;/code&gt; 의 자식을 직접 메시징하는 대신 &lt;code&gt;Viewport&lt;/code&gt; 의 &lt;code&gt;paint&lt;/code&gt; 구현을 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="364d8fc3bc9081a3dc1c6702ea2ad91b7e71cea4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JViewport&lt;/code&gt; provides a window, or &quot;viewport&quot; onto a data source -- for example, a text file. That data source is the &quot;scrollable client&quot; (aka data model) displayed by the &lt;code&gt;JViewport&lt;/code&gt; view. A &lt;code&gt;JScrollPane&lt;/code&gt; basically consists of &lt;code&gt;JScrollBar&lt;/code&gt;s, a &lt;code&gt;JViewport&lt;/code&gt;, and the wiring between them, as shown in the diagram at right.</source>
          <target state="translated">&lt;code&gt;JViewport&lt;/code&gt; , 예를 들어 텍스트 파일을 - 데이터 소스 상에 윈도우 또는 &quot;뷰포트&quot;를 제공합니다. 해당 데이터 소스는 &lt;code&gt;JViewport&lt;/code&gt; 보기에 표시되는 &quot;스크롤 가능한 클라이언트&quot;(일명 데이터 모델) 입니다. &lt;code&gt;JScrollPane&lt;/code&gt; 기본적으로 구성 &lt;code&gt;JScrollBar&lt;/code&gt; S, A &lt;code&gt;JViewport&lt;/code&gt; 의 우측 도면에 도시 된 바와 같이, 그들 사이의 배선.</target>
        </trans-unit>
        <trans-unit id="911161a28dc237dab5002e98139e60480a1f84cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JWindow&lt;/code&gt; component contains a &lt;code&gt;JRootPane&lt;/code&gt; as its only child. The &lt;code&gt;contentPane&lt;/code&gt; should be the parent of any children of the &lt;code&gt;JWindow&lt;/code&gt;. As a convenience, the &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;setLayout&lt;/code&gt; methods of this class are overridden, so that they delegate calls to the corresponding methods of the &lt;code&gt;ContentPane&lt;/code&gt;. For example, you can add a child component to a window as follows:</source>
          <target state="translated">&lt;code&gt;JWindow&lt;/code&gt; 구성 요소는 포함 &lt;code&gt;JRootPane&lt;/code&gt; 의 유일한 자식으로합니다. &lt;code&gt;contentPane&lt;/code&gt; 의 모든 아이의 부모가 될 필요 &lt;code&gt;JWindow&lt;/code&gt; . 편의상 &lt;code&gt;add&lt;/code&gt; 이 클래스 , &lt;code&gt;remove&lt;/code&gt; 및 &lt;code&gt;setLayout&lt;/code&gt; 메서드는 재정의되어 &lt;code&gt;ContentPane&lt;/code&gt; 의 해당 메서드에 대한 호출을 위임합니다 . 예를 들어 다음과 같이 창에 하위 구성 요소를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10e129e33f3b53fc80b1e431c4205e048b0ed9d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarFile&lt;/code&gt; class is used to read the contents of a jar file from any file that can be opened with &lt;code&gt;java.io.RandomAccessFile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JarFile&lt;/code&gt; 를의 클래스를 열 수있는 임의의 파일로부터 jar 파일의 내용을 읽어 내는데 사용 &lt;code&gt;java.io.RandomAccessFile&lt;/code&gt; 의 .</target>
        </trans-unit>
        <trans-unit id="7d1581e89607230d16b5c39df532a61304a21e47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarFile&lt;/code&gt; class is used to read the contents of a jar file from any file that can be opened with &lt;code&gt;java.io.RandomAccessFile&lt;/code&gt;. It extends the class &lt;code&gt;java.util.zip.ZipFile&lt;/code&gt; with support for reading an optional &lt;code&gt;Manifest&lt;/code&gt; entry, and support for processing multi-release jar files. The &lt;code&gt;Manifest&lt;/code&gt; can be used to specify meta-information about the jar file and its entries.</source>
          <target state="translated">&lt;code&gt;JarFile&lt;/code&gt; 를의 클래스를 열 수있는 임의의 파일로부터 jar 파일의 내용을 읽어 내는데 사용 &lt;code&gt;java.io.RandomAccessFile&lt;/code&gt; 의 . 그것은 클래스를 확장합니다 &lt;code&gt;java.util.zip.ZipFile&lt;/code&gt; 선택적 &lt;code&gt;Manifest&lt;/code&gt; 항목 읽기를 지원하고 다중 릴리스 jar 파일 처리 를 지원하여 java.util.zip.ZipFile 합니다. &lt;code&gt;Manifest&lt;/code&gt; jar 파일과 그 항목에 대한 메타 정보를 지정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fc173f631c97a9b4dcc50fc6b42b14623acad99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarFile&lt;/code&gt; class is used to read the contents of a jar file from any file that can be opened with &lt;code&gt;java.io.RandomAccessFile&lt;/code&gt;. It extends the class &lt;code&gt;java.util.zip.ZipFile&lt;/code&gt; with support for reading an optional &lt;code&gt;Manifest&lt;/code&gt; entry. The &lt;code&gt;Manifest&lt;/code&gt; can be used to specify meta-information about the jar file and its entries.</source>
          <target state="translated">&lt;code&gt;JarFile&lt;/code&gt; 를의 클래스를 열 수있는 임의의 파일로부터 jar 파일의 내용을 읽어 내는데 사용 &lt;code&gt;java.io.RandomAccessFile&lt;/code&gt; 의 . 선택적 &lt;code&gt;Manifest&lt;/code&gt; 항목 을 읽을 수 있도록 &lt;code&gt;java.util.zip.ZipFile&lt;/code&gt; 클래스를 확장합니다 . &lt;code&gt;Manifest&lt;/code&gt; jar 파일과 그 항목에 대한 메타 정보를 지정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9792439c8b85ffb254058fa07ee9e18ecd9179ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarInputStream&lt;/code&gt; class is used to read the contents of a JAR file from any input stream.</source>
          <target state="translated">&lt;code&gt;JarInputStream&lt;/code&gt; 의 클래스는 임의의 입력 스트림으로부터 JAR 파일의 내용을 판독하기 위해 사용된다.</target>
        </trans-unit>
        <trans-unit id="69fcbab6dd2a8326db4e277f74e623e45080d92f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarInputStream&lt;/code&gt; class is used to read the contents of a JAR file from any input stream. It extends the class &lt;code&gt;java.util.zip.ZipInputStream&lt;/code&gt; with support for reading an optional &lt;code&gt;Manifest&lt;/code&gt; entry. The &lt;code&gt;Manifest&lt;/code&gt; can be used to store meta-information about the JAR file and its entries.</source>
          <target state="translated">&lt;code&gt;JarInputStream&lt;/code&gt; 의 클래스는 임의의 입력 스트림으로부터 JAR 파일의 내용을 판독하기 위해 사용된다. 선택적 &lt;code&gt;Manifest&lt;/code&gt; 항목 을 읽을 수 있도록 &lt;code&gt;java.util.zip.ZipInputStream&lt;/code&gt; 클래스를 확장합니다 . &lt;code&gt;Manifest&lt;/code&gt; JAR 파일과 그 항목에 대한 메타 정보를 저장하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b21ac43a5a90b457145ee7b48bcabedf9e126557" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarOutputStream&lt;/code&gt; class is used to write the contents of a JAR file to any output stream.</source>
          <target state="translated">&lt;code&gt;JarOutputStream&lt;/code&gt; 의 클래스는 모든 출력 스트림에 JAR 파일의 내용을 작성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8e11ba91a7108003e4972a4752848ed577893864" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarOutputStream&lt;/code&gt; class is used to write the contents of a JAR file to any output stream. It extends the class &lt;code&gt;java.util.zip.ZipOutputStream&lt;/code&gt; with support for writing an optional &lt;code&gt;Manifest&lt;/code&gt; entry. The &lt;code&gt;Manifest&lt;/code&gt; can be used to specify meta-information about the JAR file and its entries.</source>
          <target state="translated">&lt;code&gt;JarOutputStream&lt;/code&gt; 의 클래스는 모든 출력 스트림에 JAR 파일의 내용을 작성하는 데 사용됩니다. 선택적 &lt;code&gt;Manifest&lt;/code&gt; 항목 작성을 지원하여 &lt;code&gt;java.util.zip.ZipOutputStream&lt;/code&gt; 클래스를 확장합니다 . &lt;code&gt;Manifest&lt;/code&gt; JAR 파일과 그 항목에 대한 메타 정보를 지정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3aedd1952b22868e880c731ee5f88710d33b43b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JdbcRowSet&lt;/code&gt; describes a &lt;code&gt;RowSet&lt;/code&gt; object that &lt;b&gt;must&lt;/b&gt; always be connected to the originating data source. Implementations of the &lt;code&gt;JdbcRowSet&lt;/code&gt; should ensure that this connection is provided solely by a JDBC driver. Furthermore, &lt;code&gt;RowSet&lt;/code&gt; objects that are implementations of the &lt;code&gt;JdbcRowSet&lt;/code&gt; interface and are therefore operating in a connected environment do not use the &lt;code&gt;SyncFactory&lt;/code&gt; to obtain a &lt;code&gt;RowSetReader&lt;/code&gt; object or a &lt;code&gt;RowSetWriter&lt;/code&gt; object. They can safely rely on the JDBC driver to supply their needs by virtue of the presence of an underlying updatable and scrollable &lt;code&gt;ResultSet&lt;/code&gt; implementation.</source>
          <target state="translated">&lt;code&gt;JdbcRowSet&lt;/code&gt; 설명 &lt;code&gt;RowSet&lt;/code&gt; 객체 &lt;b&gt;한다&lt;/b&gt; 항상 원래 데이터 소스에 연결할 수 있습니다. &lt;code&gt;JdbcRowSet&lt;/code&gt; 의 구현은 이 연결이 JDBC 드라이버에 의해서만 제공되도록해야합니다. 또한 &lt;code&gt;JdbcRowSet&lt;/code&gt; 인터페이스의 구현 이므로 연결된 환경에서 작동 하는 &lt;code&gt;RowSet&lt;/code&gt; 객체 는 &lt;code&gt;SyncFactory&lt;/code&gt; 를 사용하여 &lt;code&gt;RowSetReader&lt;/code&gt; 를 얻지 않습니다. 오브젝트 또는 &lt;code&gt;RowSetWriter&lt;/code&gt; 의의 개체. 업데이트 및 스크롤 가능한 기본 &lt;code&gt;ResultSet&lt;/code&gt; 구현이 있으므로 JDBC 드라이버에 안전하게 의존하여 필요를 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="93d19fc52241eaae58b0fd1278f2e42630f9be60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JobImpressions&lt;/code&gt; attribute describes the size of the job. This attribute is not intended to be a counter; it is intended to be useful routing and scheduling information if known. The printer may try to compute the &lt;code&gt;JobImpressions&lt;/code&gt; attribute's value if it is not supplied in the Print Request. Even if the client does supply a value for the &lt;code&gt;JobImpressions&lt;/code&gt; attribute in the Print Request, the printer may choose to change the value if the printer is able to compute a value which is more accurate than the client supplied value. The printer may be able to determine the correct value for the &lt;code&gt;JobImpressions&lt;/code&gt; attribute either right at job submission time or at any later point in time.</source>
          <target state="translated">&lt;code&gt;JobImpressions&lt;/code&gt; 의 속성은 작업의 크기를 설명합니다. 이 속성은 카운터가 아닙니다. 알려진 경우 유용한 라우팅 및 스케줄링 정보가됩니다. 프린터가 &lt;code&gt;JobImpressions&lt;/code&gt; 계산을 시도 할 수 있습니다. 속성 값이 인쇄 요청에 제공되지 않은 경우 . 클라이언트가 인쇄 요청 의 &lt;code&gt;JobImpressions&lt;/code&gt; 속성 값을 제공하더라도 프린터가 클라이언트 제공 값보다 더 정확한 값을 계산할 수있는 경우 프린터는 값을 변경하도록 선택할 수 있습니다. 프린터는 작업 제출시 또는 나중에 언제든지 &lt;code&gt;JobImpressions&lt;/code&gt; 속성에 대한 올바른 값을 결정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e4bddb97de4263dfb682eb09a9a222bc995bd9ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; attribute describes the progress of the job. This attribute is intended to be a counter. That is, the &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; value for a job that has not started processing must be 0. When the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;PROCESSING&lt;/code&gt; or &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt;, the &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; value is intended to increase as the job is processed; it indicates the amount of the job that has been processed at the time the Print Job's attribute set is queried or at the time a print job event is reported. When the job enters the &lt;code&gt;COMPLETED&lt;/code&gt;, &lt;code&gt;CANCELED&lt;/code&gt;, or &lt;code&gt;ABORTED&lt;/code&gt; states, the &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; value is the final value for the job.</source>
          <target state="translated">&lt;code&gt;JobImpressionsCompleted&lt;/code&gt; 의 속성은 작업의 진행 상황을 설명합니다. 이 속성은 카운터 용입니다. 즉, 처리를 시작하지 않은 작업에 대한 &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; 값은 0이어야합니다. 작업의 &lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;PROCESSING&lt;/code&gt; 또는 &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; 인 경우 &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; 값은 작업이 처리됨에 따라 증가합니다. 인쇄 작업의 속성 세트가 조회 될 때 또는 인쇄 작업 이벤트가보고 될 때 처리 된 작업의 양을 나타냅니다. 작업이 &lt;code&gt;COMPLETED&lt;/code&gt; 에 진입하면 , &lt;code&gt;CANCELED&lt;/code&gt; 또는 &lt;code&gt;ABORTED&lt;/code&gt; 상태가되면 &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; 값은 작업의 최종 값입니다.</target>
        </trans-unit>
        <trans-unit id="9d42b11af45864561098fb5e73382d34ce4fcf25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JobKOctets&lt;/code&gt; attribute describes the size of the job. This attribute is not intended to be a counter; it is intended to be useful routing and scheduling information if known. The printer may try to compute the &lt;code&gt;JobKOctets&lt;/code&gt; attribute's value if it is not supplied in the Print Request. Even if the client does supply a value for the &lt;code&gt;JobKOctets&lt;/code&gt; attribute in the Print Request, the printer may choose to change the value if the printer is able to compute a value which is more accurate than the client supplied value. The printer may be able to determine the correct value for the &lt;code&gt;JobKOctets&lt;/code&gt; attribute either right at job submission time or at any later point in time.</source>
          <target state="translated">&lt;code&gt;JobKOctets&lt;/code&gt; 의 속성은 작업의 크기를 설명합니다. 이 속성은 카운터가 아닙니다. 알려진 경우 유용한 라우팅 및 스케줄링 정보가됩니다. 프린터는 &lt;code&gt;JobKOctets&lt;/code&gt; 속성의 값이 인쇄 요청에 제공되지 않은 경우 계산을 시도 할 수 있습니다 . 클라이언트가 인쇄 요청 의 &lt;code&gt;JobKOctets&lt;/code&gt; 속성 값을 제공하더라도 프린터가 클라이언트 제공 값보다 더 정확한 값을 계산할 수있는 경우 프린터는 값을 변경하도록 선택할 수 있습니다. 프린터는 작업 제출시 또는 나중에 언제든지 &lt;code&gt;JobKOctets&lt;/code&gt; 속성에 대한 올바른 값을 결정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f7855cd53d43de6e01d828f80467a04fb5f73419" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JobKOctets&lt;/code&gt; value must also not include the multiplicative factor due to a copies instruction embedded in the document data. If the document data actually includes replications of the document data, this value will include such replication. In other words, this value is always the size of the source document data, rather than a measure of the hardcopy output to be produced.</source>
          <target state="translated">그만큼 &lt;code&gt;JobKOctets&lt;/code&gt; 의 값은 문서 데이터에 포함 된 복사 명령에 곱셈 계수를 포함 할 수 없습니다. 문서 데이터에 실제로 문서 데이터의 복제가 포함 된 경우이 값에는 이러한 복제가 포함됩니다. 즉,이 값은 생성 될 하드 카피 출력의 척도가 아니라 항상 소스 문서 데이터의 크기입니다.</target>
        </trans-unit>
        <trans-unit id="2f05f1d9f8bcaade508d2f1e15f4c164149584d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JobKOctets&lt;/code&gt; value must not include the multiplicative factors contributed by the number of copies specified by the &lt;a href=&quot;copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute, independent of whether the device can process multiple copies without making multiple passes over the job or document data and independent of whether the output is collated or not. Thus the value is independent of the implementation and indicates the size of the document(s) measured in K octets independent of the number of copies.</source>
          <target state="translated">&lt;code&gt;JobKOctets&lt;/code&gt; 의 값에 의해 지정된 매수 기부 곱셈 인자를 포함하지 않아야&lt;a href=&quot;copies&quot;&gt; &lt;code&gt;Copies&lt;/code&gt; &lt;/a&gt; 출력 대조 여부 장치가 작업 또는 문서 데이터에 다중 패스 않고 여러 복사본을 처리 할 수 있는지 여부와 무관하고 독립적 특성을 . 따라서 값은 구현과 무관하며 사본 수에 관계없이 K 옥텟으로 측정 된 문서의 크기를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0fc8388eff666e0318b26f69b533a081e5ec0d2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; attribute describes the progress of the job. This attribute is intended to be a counter. That is, the JobKOctetsProcessed value for a job that has not started processing must be 0. When the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;PROCESSING&lt;/code&gt; or &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt;, the &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; value is intended to increase as the job is processed; it indicates the amount of the job that has been processed at the time the Print Job's attribute set is queried or at the time a print job event is reported. When the job enters the &lt;code&gt;COMPLETED&lt;/code&gt;, &lt;code&gt;CANCELED&lt;/code&gt;, or &lt;code&gt;ABORTED&lt;/code&gt; states, the &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; value is the final value for the job.</source>
          <target state="translated">&lt;code&gt;JobKOctetsProcessed&lt;/code&gt; 속성은 작업의 진행 상황을 설명합니다. 이 속성은 카운터 용입니다. 즉, 처리를 시작하지 않은 작업에 대한 JobKOctetsProcessed 값은 0이어야합니다. 작업의 &lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;PROCESSING&lt;/code&gt; 또는 &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; 인 경우 &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; 값은 작업이 처리됨에 따라 증가합니다. 인쇄 작업의 속성 세트가 조회 될 때 또는 인쇄 작업 이벤트가보고 될 때 처리 된 작업의 양을 나타냅니다. 작업이 &lt;code&gt;COMPLETED&lt;/code&gt; , &lt;code&gt;CANCELED&lt;/code&gt; 또는 &lt;code&gt;ABORTED&lt;/code&gt; 상태가되면 &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; value는 작업의 최종 값입니다.</target>
        </trans-unit>
        <trans-unit id="ab80f243ababcbf1f4897af7dc0b241257af280a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JobMediaSheets&lt;/code&gt; attribute describes the size of the job. This attribute is not intended to be a counter; it is intended to be useful routing and scheduling information if known. The printer may try to compute the &lt;code&gt;JobMediaSheets&lt;/code&gt; attribute's value if it is not supplied in the Print Request. Even if the client does supply a value for the &lt;code&gt;JobMediaSheets&lt;/code&gt; attribute in the Print Request, the printer may choose to change the value if the printer is able to compute a value which is more accurate than the client supplied value. The printer may be able to determine the correct value for the &lt;code&gt;JobMediaSheets&lt;/code&gt; attribute either right at job submission time or at any later point in time.</source>
          <target state="translated">&lt;code&gt;JobMediaSheets&lt;/code&gt; 의 속성은 작업의 크기를 설명합니다. 이 속성은 카운터가 아닙니다. 알려진 경우 유용한 라우팅 및 스케줄링 정보가됩니다. 프린터는 &lt;code&gt;JobMediaSheets&lt;/code&gt; 속성 값이 인쇄 요청에 제공되지 않은 경우 계산을 시도 할 수 있습니다 . 클라이언트가 인쇄 요청 의 &lt;code&gt;JobMediaSheets&lt;/code&gt; 속성 값을 제공하더라도 프린터가 클라이언트 제공 값보다 더 정확한 값을 계산할 수있는 경우 프린터는 값을 변경하도록 선택할 수 있습니다. 프린터는 작업 제출시 또는 나중에 언제든지 &lt;code&gt;JobMediaSheets&lt;/code&gt; 속성에 대한 올바른 값을 결정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a54724fe6880322ea331b2b691cec67ddf2633f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; attribute describes the progress of the job. This attribute is intended to be a counter. That is, the &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; value for a job that has not started processing must be 0. When the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;PROCESSING&lt;/code&gt; or &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt;, the &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; value is intended to increase as the job is processed; it indicates the amount of the job that has been processed at the time the Print Job's attribute set is queried or at the time a print job event is reported. When the job enters the &lt;code&gt;COMPLETED&lt;/code&gt;, &lt;code&gt;CANCELED&lt;/code&gt;, or &lt;code&gt;ABORTED&lt;/code&gt; states, the &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; value is the final value for the job.</source>
          <target state="translated">&lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; 의 속성은 작업의 진행 상황을 설명합니다. 이 속성은 카운터 용입니다. 즉, 처리를 시작하지 않은 작업에 대한 &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; 값은 0이어야합니다. 작업의 &lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;PROCESSING&lt;/code&gt; 또는 &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; 인 경우 &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; 값은 작업이 처리됨에 따라 증가합니다. 인쇄 작업의 속성 세트가 조회 될 때 또는 인쇄 작업 이벤트가보고 될 때 처리 된 작업의 양을 나타냅니다. 작업이 &lt;code&gt;COMPLETED&lt;/code&gt; , &lt;code&gt;CANCELED&lt;/code&gt; 또는 &lt;code&gt;ABORTED&lt;/code&gt; 상태가되면 &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; value는 작업의 최종 값입니다.</target>
        </trans-unit>
        <trans-unit id="c444c9917a86296778e0e6b08a2e582e7061c85a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JoinRowSet&lt;/code&gt; interface makes it possible to get data from one or more &lt;code&gt;RowSet&lt;/code&gt; objects consolidated into one table without having to incur the expense of creating a connection to a database. It is therefore ideally suited for use by disconnected &lt;code&gt;RowSet&lt;/code&gt; objects. Nevertheless, any &lt;code&gt;RowSet&lt;/code&gt; object &lt;b&gt;may&lt;/b&gt; implement this interface regardless of whether it is connected or disconnected. Note that a &lt;code&gt;JdbcRowSet&lt;/code&gt; object, being always connected to its data source, can become part of an SQL &lt;code&gt;JOIN&lt;/code&gt; directly without having to become part of a &lt;code&gt;JoinRowSet&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;JoinRowSet&lt;/code&gt; 인터페이스는 가능 하나 데이터를 얻을 수 이상의 수 &lt;code&gt;RowSet&lt;/code&gt; 데이터베이스에 대한 연결을 만드는 비용을 부담 할 필요없이 하나 개의 테이블로 통합 객체. 따라서 연결이 끊긴 &lt;code&gt;RowSet&lt;/code&gt; 개체 에서 사용하기에 이상적 입니다. 그럼에도 불구하고 모든 &lt;code&gt;RowSet&lt;/code&gt; 객체 는 연결 또는 연결 해제 여부에 관계없이이 인터페이스를 구현할 &lt;b&gt;수 있습니다&lt;/b&gt; . 항상 데이터 소스에 연결되어 있는 &lt;code&gt;JdbcRowSet&lt;/code&gt; 객체 는 &lt;code&gt;JoinRowSet&lt;/code&gt; 객체의 일부가 될 필요없이 직접 SQL &lt;code&gt;JOIN&lt;/code&gt; 의 일부가 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f89488be2cadf79b9f6dad30abbc989807edfe33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JoinRowSet&lt;/code&gt; interface provides a mechanism for combining related data from different &lt;code&gt;RowSet&lt;/code&gt; objects into one &lt;code&gt;JoinRowSet&lt;/code&gt; object, which represents an SQL &lt;code&gt;JOIN&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JoinRowSet&lt;/code&gt; 인터페이스에서 다른 관련 데이터를 결합하는기구 제공 &lt;code&gt;RowSet&lt;/code&gt; 하나에 오브젝트 &lt;code&gt;JoinRowSet&lt;/code&gt; 는 SQL 나타내는 객체 &lt;code&gt;JOIN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1857f2dbacd9a2f415961fff2f3fc95dd362417" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JoinRowSet&lt;/code&gt; interface provides a mechanism for combining related data from different &lt;code&gt;RowSet&lt;/code&gt; objects into one &lt;code&gt;JoinRowSet&lt;/code&gt; object, which represents an SQL &lt;code&gt;JOIN&lt;/code&gt;. In other words, a &lt;code&gt;JoinRowSet&lt;/code&gt; object acts as a container for the data from &lt;code&gt;RowSet&lt;/code&gt; objects that form an SQL &lt;code&gt;JOIN&lt;/code&gt; relationship.</source>
          <target state="translated">&lt;code&gt;JoinRowSet&lt;/code&gt; 인터페이스에서 다른 관련 데이터를 결합하는기구 제공 &lt;code&gt;RowSet&lt;/code&gt; 하나에 오브젝트 &lt;code&gt;JoinRowSet&lt;/code&gt; 는 SQL 나타내는 객체 &lt;code&gt;JOIN&lt;/code&gt; . 즉, &lt;code&gt;JoinRowSet&lt;/code&gt; 개체는 SQL &lt;code&gt;JOIN&lt;/code&gt; 관계 를 형성하는 &lt;code&gt;RowSet&lt;/code&gt; 개체 의 데이터에 대한 컨테이너 역할을합니다 .</target>
        </trans-unit>
        <trans-unit id="7578c4dd8747a98c2f27b38c1875d232348cb143" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JoinRowSet&lt;/code&gt; interface supplies several methods for adding &lt;code&gt;RowSet&lt;/code&gt; objects and for getting information about the &lt;code&gt;JoinRowSet&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;JoinRowSet&lt;/code&gt; 인터페이스를 추가하기위한 여러 가지 방법을 제공 &lt;code&gt;RowSet&lt;/code&gt; 객체를과에 대한 정보를 얻기 위해 &lt;code&gt;JoinRowSet&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="dc7199ca969d2a56a6e584a155cf8330e9b15154" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JoinRowSet&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;JoinRowSet&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="7a61ffc158a0daba9a2c2610781cd68fa97c1b0e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Joinable&lt;/code&gt; interface provides both connected and disconnected &lt;code&gt;RowSet&lt;/code&gt; objects with the capability to be added to a &lt;code&gt;JoinRowSet&lt;/code&gt; object in an SQL &lt;code&gt;JOIN&lt;/code&gt; operation. A &lt;code&gt;RowSet&lt;/code&gt; object that has implemented the &lt;code&gt;Joinable&lt;/code&gt; interface can set a match column, retrieve a match column, or unset a match column. A &lt;code&gt;JoinRowSet&lt;/code&gt; object can then use the &lt;code&gt;RowSet&lt;/code&gt; object's match column as a basis for adding the &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Joinable&lt;/code&gt; 인터페이스 모두에 접속이 끊긴 제공 &lt;code&gt;RowSet&lt;/code&gt; (A)에 첨가 될 수있는 기능을 가진 개체 &lt;code&gt;JoinRowSet&lt;/code&gt; 는 SQL 객체에 &lt;code&gt;JOIN&lt;/code&gt; 동작. &lt;code&gt;Joinable&lt;/code&gt; 인터페이스 를 구현 한 &lt;code&gt;RowSet&lt;/code&gt; 개체 는 일치 열을 설정하거나 일치 열을 검색하거나 일치 열을 설정 해제 할 수 있습니다. &lt;code&gt;JoinRowSet&lt;/code&gt; 오브젝트는 사용할 수 &lt;code&gt;RowSet&lt;/code&gt; , 가산의 기준으로 객체의 일치 열을 &lt;code&gt;RowSet&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="898a003c1a219e2ced5b5d58761137f53a86daf7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Joinable&lt;/code&gt; interface provides the methods for getting and setting a match column, which is the basis for forming the SQL &lt;code&gt;JOIN&lt;/code&gt; formed by adding &lt;code&gt;RowSet&lt;/code&gt; objects to a &lt;code&gt;JoinRowSet&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Joinable&lt;/code&gt; 인터페이스를 가져오고 SQL을 형성하는 기초가 치열, 설정하는 방법을 제공 &lt;code&gt;JOIN&lt;/code&gt; 첨가함으로써 형성 &lt;code&gt;RowSet&lt;/code&gt; (A)에 객체 &lt;code&gt;JoinRowSet&lt;/code&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="6c98ed7a0aa6729127f3b5355f11517cb27023e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Joinable&lt;/code&gt; interface provides the methods for setting, retrieving, and unsetting a match column, the basis for establishing an SQL &lt;code&gt;JOIN&lt;/code&gt; relationship. The match column may alternatively be set by supplying it to the appropriate version of the &lt;code&gt;JointRowSet&lt;/code&gt; method &lt;code&gt;addRowSet&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Joinable&lt;/code&gt; 인터페이스 치열을 입수 설정하고 해제하기위한 방법을 제공하여 SQL을 확립하기위한 기초가 &lt;code&gt;JOIN&lt;/code&gt; 관계. 일치 열은 적절한 버전의 &lt;code&gt;JointRowSet&lt;/code&gt; 메서드 &lt;code&gt;addRowSet&lt;/code&gt; 에 제공하여 대안으로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f1f4f673ec67c141b6306875c6fc5a1a9ed847e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Kernel&lt;/code&gt; class defines a matrix that describes how a specified pixel and its surrounding pixels affect the value computed for the pixel's position in the output image of a filtering operation.</source>
          <target state="translated">&lt;code&gt;Kernel&lt;/code&gt; 클래스는 특정 화소와 그 주변 화소가 필터링 동작의 출력 화상의 화소의 위치에 대한 값의 계산에 미치는 영향을 설명하는 행렬을 정의한다.</target>
        </trans-unit>
        <trans-unit id="aed135fe5a2836a7febd759a0b7dd3615e9857fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Kernel&lt;/code&gt; class defines a matrix that describes how a specified pixel and its surrounding pixels affect the value computed for the pixel's position in the output image of a filtering operation. The X origin and Y origin indicate the kernel matrix element that corresponds to the pixel position for which an output value is being computed.</source>
          <target state="translated">&lt;code&gt;Kernel&lt;/code&gt; 클래스는 특정 화소와 그 주변 화소가 필터링 동작의 출력 화상의 화소의 위치에 대한 값의 계산에 미치는 영향을 설명하는 행렬을 정의한다. X 원점과 Y 원점은 출력 값이 계산되는 픽셀 위치에 해당하는 커널 행렬 요소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="dbb5aa603ed056efc13af2d1e9ede1198ceeff82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;KeyListener&lt;/code&gt; listens to events.</source>
          <target state="translated">&lt;code&gt;KeyListener&lt;/code&gt; 이벤트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="d6b5e428374ca40e15cacba872157456e91fd39f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LSParser&lt;/code&gt; finishes to load the document. See also the definition of the &lt;code&gt;LSLoadEvent&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;LSParser&lt;/code&gt; 에이 문서를로드 완료. &lt;code&gt;LSLoadEvent&lt;/code&gt; 인터페이스 의 정의도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="24fb60957485d297ee80a09e8ce85ca8ca0ba39b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LSParser&lt;/code&gt; signals progress as data is parsed. This specification does not attempt to define exactly when progress events should be dispatched. That is intentionally left as implementation-dependent. Here is one example of how an application might dispatch progress events: Once the parser starts receiving data, a progress event is dispatched to indicate that the parsing starts. From there on, a progress event is dispatched for every 4096 bytes of data that is received and processed. This is only one example, though, and implementations can choose to dispatch progress events at any time while parsing, or not dispatch them at all. See also the definition of the &lt;code&gt;LSProgressEvent&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;LSParser&lt;/code&gt; 에의 데이터 파싱 신호로 진행. 이 사양은 진행 이벤트가 전달되어야하는시기를 정확히 정의하려고 시도하지 않습니다. 이는 구현에 따라 의도적으로 남겨집니다. 다음은 응용 프로그램이 progress 이벤트를 전달하는 방법에 대한 한 가지 예입니다. 파서가 데이터 수신을 시작하면 progress 이벤트가 전달되어 구문 분석이 시작되었음을 나타냅니다. 그 이후로 수신 및 처리되는 데이터의 4096 바이트마다 진행 이벤트가 전달됩니다. 그러나 이것은 하나의 예일 뿐이며 구현은 파싱하는 동안 언제든지 진행률 이벤트를 전달하거나 전혀 전달하지 않도록 선택할 수 있습니다. &lt;code&gt;LSProgressEvent&lt;/code&gt; 인터페이스 의 정의도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b5684589f50bcba0622244d4195787b54fb19754" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LSParser&lt;/code&gt; will call this method before opening any external resource, including the external DTD subset, external entities referenced within the DTD, and external entities referenced within the document element (however, the top-level document entity is not passed to this method). The application may then request that the &lt;code&gt;LSParser&lt;/code&gt; resolve the external resource itself, that it use an alternative URI, or that it use an entirely different input source.</source>
          <target state="translated">&lt;code&gt;LSParser&lt;/code&gt; 외부 DTD 서브셋의 DTD 내에서 참조되는 외부 엔티티, 및 문서 요소 (단, 최상위 원고 엔티티는 이러한 방법에 전달되지 않은) 내에서 참조되는 외부 엔티티 포함한 외부 리소스를 열기 전에이 메소드를 호출한다. 그런 다음 응용 프로그램은 &lt;code&gt;LSParser&lt;/code&gt; 가 외부 리소스 자체를 확인하거나 대체 URI를 사용하거나 완전히 다른 입력 소스를 사용하도록 요청할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fdd3b33932c3d78818e6cfefc7e1379df1e81cc2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LSParser&lt;/code&gt; will then allow the application to intercept any external entities, including the external DTD subset and external parameter entities, before including them. The top-level document entity is never passed to the &lt;code&gt;resolveResource&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;LSParser&lt;/code&gt; 에는 다음 외부 DTD 부분 집합, 외부 매개 변수 엔티티를 포함한 모든 외부 엔티티, 그것들을 포함하기 전에 요격에 응용 프로그램을 수 있습니다. 최상위 수준 문서 엔터티는 &lt;code&gt;resolveResource&lt;/code&gt; 메서드에 전달되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="85452716c344379ce6f46987e158daa17b45c892" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LSParser&lt;/code&gt; will use the &lt;code&gt;LSInput&lt;/code&gt; object to determine how to read data. The &lt;code&gt;LSParser&lt;/code&gt; will look at the different inputs specified in the &lt;code&gt;LSInput&lt;/code&gt; in the following order to know which one to read from, the first one that is not null and not an empty string will be used:</source>
          <target state="translated">&lt;code&gt;LSParser&lt;/code&gt; 에이 사용됩니다 &lt;code&gt;LSInput&lt;/code&gt; 에의 데이터를 읽는 방법을 결정하기 위해 개체를. &lt;code&gt;LSParser&lt;/code&gt; 에은 에 지정된 다른 입력을 볼 것이다 &lt;code&gt;LSInput&lt;/code&gt; 에 null가 아니고,하지 빈 문자열이 사용되는 첫 번째,에서 읽을 어느 알고 다음과 같은 순서로 :</target>
        </trans-unit>
        <trans-unit id="8385bbcd998f782ed6e1f77152400b1721a89972" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LSSerializer&lt;/code&gt; will use the &lt;code&gt;LSOutput&lt;/code&gt; object to determine where to serialize the output to. The &lt;code&gt;LSSerializer&lt;/code&gt; will look at the different outputs specified in the &lt;code&gt;LSOutput&lt;/code&gt; in the following order to know which one to output to, the first one that is not null and not an empty string will be used:</source>
          <target state="translated">&lt;code&gt;LSSerializer&lt;/code&gt; 에이 사용됩니다 &lt;code&gt;LSOutput&lt;/code&gt; 의 출력을 직렬화하는 장소를 결정하기 위해 개체를. &lt;code&gt;LSSerializer&lt;/code&gt; 에은 에 지정된 다른 출력을 볼 것이다 &lt;code&gt;LSOutput&lt;/code&gt; 로 출력, 널 (null)과 빈 문자열을 사용할 수 아닌 최초의 할 일을 알고 다음과 같은 순서로 :</target>
        </trans-unit>
        <trans-unit id="9290bae2dd98060748530a990a5b9934c224d813" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LayerUI&lt;/code&gt; differs from the UI delegates of the other components, because it is LookAndFeel independent and is not updated by default when the system LookAndFeel is changed.</source>
          <target state="translated">&lt;code&gt;LayerUI&lt;/code&gt; 의 그것의 LookAndFeel 독립적이며, 시스템의 LookAndFeel가 변경 될 때 디폴트로 갱신되지 않기 때문에, 다른 부품의 UI 위임 다르다.</target>
        </trans-unit>
        <trans-unit id="30a19dcac608ceb517d3a3561447251ee1e2014f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Line&lt;/code&gt; interface represents a mono or multi-channel audio feed.</source>
          <target state="translated">&lt;code&gt;Line&lt;/code&gt; 인터페이스는 모노 또는 멀티 채널 오디오 피드를 나타낸다.</target>
        </trans-unit>
        <trans-unit id="c0a9c7f256b3eaca5dedae690146aa91b18206a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Line&lt;/code&gt; interface represents a mono or multi-channel audio feed. A line is an element of the digital audio &quot;pipeline,&quot; such as a mixer, an input or output port, or a data path into or out of a mixer.</source>
          <target state="translated">&lt;code&gt;Line&lt;/code&gt; 인터페이스는 모노 또는 멀티 채널 오디오 피드를 나타낸다. 라인은 믹서, 입력 또는 출력 포트 또는 믹서 내외부 데이터 경로와 같은 디지털 오디오 &quot;파이프 라인&quot;의 요소입니다.</target>
        </trans-unit>
        <trans-unit id="12ff24d6407a52b7dc2753e301cab6bdaa7ab15a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LineBreakMeasurer&lt;/code&gt; class allows styled text to be broken into lines (or segments) that fit within a particular visual advance.</source>
          <target state="translated">&lt;code&gt;LineBreakMeasurer&lt;/code&gt; 에의 클래스는 텍스트 라인 (또는 세그먼트들)로 분할되는 특정 시각 사전 내의 그 착용감 스타일 허용한다.</target>
        </trans-unit>
        <trans-unit id="70b0f123d2e6f96d4d1b70fcd70bc4ae2d723f77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LineBreakMeasurer&lt;/code&gt; class allows styled text to be broken into lines (or segments) that fit within a particular visual advance. This is useful for clients who wish to display a paragraph of text that fits within a specific width, called the &lt;b&gt;wrapping width&lt;/b&gt;.</source>
          <target state="translated">&lt;code&gt;LineBreakMeasurer&lt;/code&gt; 에의 클래스는 텍스트 라인 (또는 세그먼트들)로 분할되는 특정 시각 사전 내의 그 착용감 스타일 허용한다. 이 기능은 &lt;b&gt;줄 바꿈 너비&lt;/b&gt; 라고하는 특정 너비에 맞는 텍스트 단락을 표시하려는 클라이언트에게 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="5d3a35d12e8c0c113e33da5350a5b5580d8cb3c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LineEvent&lt;/code&gt; class encapsulates information that a line sends its listeners whenever the line opens, closes, starts, or stops.</source>
          <target state="translated">&lt;code&gt;LineEvent&lt;/code&gt; 의 클래스는 라인이 닫히고, 시작, 또는 중지를 열 때마다 광고가 청취자에게 송신하는 정보를 캡슐화한다.</target>
        </trans-unit>
        <trans-unit id="1757f3f9d53b925c75021680d8beaafc5e2dbd56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LineEvent&lt;/code&gt; class encapsulates information that a line sends its listeners whenever the line opens, closes, starts, or stops. Each of these four state changes is represented by a corresponding type of event. A listener receives the event as a parameter to its &lt;a href=&quot;linelistener#update(javax.sound.sampled.LineEvent)&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt; method. By querying the event, the listener can learn the type of event, the line responsible for the event, and how much data the line had processed when the event occurred.</source>
          <target state="translated">&lt;code&gt;LineEvent&lt;/code&gt; 의 클래스는 라인이 닫히고, 시작, 또는 중지를 열 때마다 광고가 청취자에게 송신하는 정보를 캡슐화한다. 이러한 네 가지 상태 변경은 각각 해당 유형의 이벤트로 표시됩니다. 리스너는 이벤트를 &lt;a href=&quot;linelistener#update(javax.sound.sampled.LineEvent)&quot;&gt; &lt;code&gt;update&lt;/code&gt; &lt;/a&gt; 메소드에 대한 매개 변수로 수신합니다 . 이벤트를 쿼리함으로써 리스너는 이벤트 유형, 이벤트를 담당하는 라인 및 이벤트가 발생했을 때 라인이 처리 한 데이터의 양을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="537f7328063a159d8e4878b6fccbf45636c737b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LineEvent&lt;/code&gt; class encapsulates information that a line sends its listeners whenever the line opens, closes, starts, or stops. Each of these four state changes is represented by a corresponding type of event. A listener receives the event as a parameter to its &lt;a href=&quot;linelistener#update-javax.sound.sampled.LineEvent-&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt; method. By querying the event, the listener can learn the type of event, the line responsible for the event, and how much data the line had processed when the event occurred.</source>
          <target state="translated">&lt;code&gt;LineEvent&lt;/code&gt; 의 클래스는 라인이 닫히고, 시작, 또는 중지를 열 때마다 광고가 청취자에게 송신하는 정보를 캡슐화한다. 이 네 가지 상태 변경은 각각 해당하는 이벤트 유형으로 표시됩니다. 리스너는 &lt;a href=&quot;linelistener#update-javax.sound.sampled.LineEvent-&quot;&gt; &lt;code&gt;update&lt;/code&gt; &lt;/a&gt; 메소드에 대한 매개 변수로 이벤트를 수신합니다 . 리스너는 이벤트를 조회하여 이벤트 유형, 이벤트를 담당하는 회선 및 이벤트 발생시 회선이 처리 한 데이터 양을 학습 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a317f9411bdfedbd114bb89ebf0f60e340b551a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LineMetrics&lt;/code&gt; class allows access to the metrics needed to layout characters along a line and to layout of a set of lines.</source>
          <target state="translated">&lt;code&gt;LineMetrics&lt;/code&gt; 클래스는 선을 따라 행 세트를 레이아웃에 레이아웃 문자에 필요한 통계에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8c1ff382b3ddfcfd21eb439e247cc38410f25c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LineMetrics&lt;/code&gt; class allows access to the metrics needed to layout characters along a line and to layout of a set of lines. A &lt;code&gt;LineMetrics&lt;/code&gt; object encapsulates the measurement information associated with a run of text.</source>
          <target state="translated">&lt;code&gt;LineMetrics&lt;/code&gt; 클래스는 선을 따라 행 세트를 레이아웃에 레이아웃 문자에 필요한 통계에 액세스 할 수 있습니다. &lt;code&gt;LineMetrics&lt;/code&gt; 객체는 일련의 텍스트에 관련한 측정 정보를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="ec210c5e83962b1ca145d61862892dacceb18265" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LinearGradientPaint&lt;/code&gt; class provides a way to fill a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; with a linear color gradient pattern.</source>
          <target state="translated">&lt;code&gt;LinearGradientPaint&lt;/code&gt; 의 클래스는 칠하는 수단 제공 &lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; 선형 색 그라데이션 패턴을.</target>
        </trans-unit>
        <trans-unit id="33c4bb6b8473c6e7b6f098a98815d32e62391d30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LinearGradientPaint&lt;/code&gt; class provides a way to fill a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; with a linear color gradient pattern. The user may specify two or more gradient colors, and this paint will provide an interpolation between each color. The user also specifies start and end points which define where in user space the color gradient should begin and end.</source>
          <target state="translated">&lt;code&gt;LinearGradientPaint&lt;/code&gt; 의 클래스는 칠하는 수단 제공 &lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; 선형 색 그라데이션 패턴을. 사용자는 둘 이상의 그라디언트 색상을 지정할 수 있으며이 페인트는 각 색상 사이에 보간을 제공합니다. 사용자는 또한 사용자 공간에서 색상 그라디언트가 시작되고 끝나야하는 위치를 정의하는 시작점과 끝점을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c21b1c3905ebd125a9dff4a98c4563b298e71acf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; component presents the user with a scrolling list of text items.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; 구성 요소 선물 텍스트 항목의 스크롤 목록을 사용자.</target>
        </trans-unit>
        <trans-unit id="1cd681191d602e2ed6ce9e4db14238ca5d03680a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; component presents the user with a scrolling list of text items. The list can be set up so that the user can choose either one item or multiple items.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; 구성 요소 선물 텍스트 항목의 스크롤 목록을 사용자. 사용자가 한 항목 또는 여러 항목을 선택할 수 있도록 목록을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19683692a3cac37612a80dd55d3fd092b1967a4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; interface places additional stipulations, beyond those specified in the &lt;code&gt;Collection&lt;/code&gt; interface, on the contracts of the &lt;code&gt;iterator&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, and &lt;code&gt;hashCode&lt;/code&gt; methods. Declarations for other inherited methods are also included here for convenience.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; 인터페이스에서 규정 한 이상, 추가 규정을 배치 &lt;code&gt;Collection&lt;/code&gt; 의 계약에 인터페이스 &lt;code&gt;iterator&lt;/code&gt; , &lt;code&gt;add&lt;/code&gt; , &lt;code&gt;remove&lt;/code&gt; , &lt;code&gt;equals&lt;/code&gt; 및 &lt;code&gt;hashCode&lt;/code&gt; 방법. 편의상 다른 상속 된 메소드에 대한 선언도 여기에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="a0ba9a5b693daac5c19b3fccbb0faf8853cdabbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; interface provides a special iterator, called a &lt;code&gt;ListIterator&lt;/code&gt;, that allows element insertion and replacement, and bidirectional access in addition to the normal operations that the &lt;code&gt;Iterator&lt;/code&gt; interface provides. A method is provided to obtain a list iterator that starts at a specified position in the list.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; 인터페이스는라는 특별한 반복자 제공 &lt;code&gt;ListIterator&lt;/code&gt; 요소 삽입 및 교체하고있는 일반적인 작업뿐만 아니라 양방향 액세스 할 수 있습니다, &lt;code&gt;Iterator&lt;/code&gt; 인터페이스를 제공합니다. 리스트의 지정된 위치에서 시작하는리스트 반복자를 얻는 방법이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="2b090913d205b579f0fbce24a3f90785bc1ba625" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; interface provides four methods for positional (indexed) access to list elements. Lists (like Java arrays) are zero based. Note that these operations may execute in time proportional to the index value for some implementations (the &lt;code&gt;LinkedList&lt;/code&gt; class, for example). Thus, iterating over the elements in a list is typically preferable to indexing through it if the caller does not know the implementation.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; 인터페이스 목록에 대한 위치 요소 (인덱스) 액세스를위한 네 가지 방법을 제공한다. Java 배열과 같은 목록은 0부터 시작합니다. 이러한 작업은 일부 구현 ( 예 : &lt;code&gt;LinkedList&lt;/code&gt; 클래스) 의 인덱스 값에 비례하여 시간에 따라 실행될 수 있습니다 . 따라서, 호출자가 구현을 모르는 경우 목록의 요소를 반복하는 것이 일반적으로이를 통해 색인화하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="70355f014486445e2f19c1b1f444e1ecb381cd12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; interface provides two methods to efficiently insert and remove multiple elements at an arbitrary point in the list.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; 인터페이스를 효율적으로 삽입하고,리스트 내의 임의의 점에서 복수의 요소를 제거하는 두 가지 방법을 제공한다.</target>
        </trans-unit>
        <trans-unit id="fe82cde6eede4b779cf568cf70079098275cd445" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; interface provides two methods to search for a specified object. From a performance standpoint, these methods should be used with caution. In many implementations they will perform costly linear searches.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; 인터페이스는 지정된 객체를 검색하는 두 가지 방법을 제공합니다. 성능 관점에서 이러한 방법은주의해서 사용해야합니다. 많은 구현에서 그들은 값 비싼 선형 검색을 수행 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="d5f5959f322b845c985e2f025760b04b9f414ef2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ListDataListener&lt;/code&gt; that's added to the &lt;code&gt;JLists&lt;/code&gt; model at &lt;code&gt;installUI time&lt;/code&gt;, and whenever the JList.model property changes.</source>
          <target state="translated">&lt;code&gt;installUI time&lt;/code&gt; 및 JList.model 속성이 변경 될 때마다 &lt;code&gt;JLists&lt;/code&gt; 모델에 추가 되는 &lt;code&gt;ListDataListener&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="bf00cf318d8d3e87e034ff374fa7601d594536b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ListSelectionModel&lt;/code&gt; of the table, used to keep track of row selections.</source>
          <target state="translated">행 선택을 추적하는 데 사용되는 테이블 의 &lt;code&gt;ListSelectionModel&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="80c3e343f9a3334aa90fca73bdf887fa22a1c873" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Locale&lt;/code&gt; class also supports an extension mechanism that can be used to identify a calendar system. The mechanism is a form of key-value pairs, where the calendar system has the key &quot;ca&quot;. For example, the locale &quot;en-JP-u-ca-japanese&quot; represents the English language as used in Japan with the Japanese calendar system.</source>
          <target state="translated">&lt;code&gt;Locale&lt;/code&gt; 클래스는 달력 시스템을 식별하는 데 사용할 수있는 확장 메커니즘을 지원합니다. 이 메커니즘은 달력 시스템에 키 &quot;ca&quot;가있는 키-값 쌍의 형태입니다. 예를 들어 로케일 &quot;en-JP-u-ca-japanese&quot;는 일본어 달력 시스템과 함께 일본에서 사용되는 영어를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="df60f90896c3c9a6114af933224b8f6b6310599a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Locale&lt;/code&gt; class also supports language codes up to 8 characters in length. Therefore, the list returned by this method does not contain ALL valid codes that can be used to create Locales.</source>
          <target state="translated">&lt;code&gt;Locale&lt;/code&gt; 클래스는 길이가 8 자 언어 코드를 지원합니다. 따라서이 메서드가 반환 한 목록에는 로캘을 만드는 데 사용할 수있는 유효한 코드가 모두 포함되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ff489719e325fe97b92428c9169b9fa65846b849" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Locale&lt;/code&gt; class implements IETF BCP 47 which is composed of &lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647 &quot;Matching of Language Tags&quot;&lt;/a&gt; and &lt;a href=&quot;http://tools.ietf.org/html/rfc5646&quot;&gt;RFC 5646 &quot;Tags for Identifying Languages&quot;&lt;/a&gt; with support for the LDML (UTS#35, &quot;Unicode Locale Data Markup Language&quot;) BCP 47-compatible extensions for locale data exchange.</source>
          <target state="translated">&lt;code&gt;Locale&lt;/code&gt; 로 구성되어 클래스가 구현하는 IETF BCP 47 &lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647 &quot;언어 태그의 일치&quot;&lt;/a&gt; 와 &lt;a href=&quot;http://tools.ietf.org/html/rfc5646&quot;&gt;&quot;언어 식별 태그&quot;RFC 5646&lt;/a&gt; (UTS # 35, &quot;유니 코드 로케일 데이터 마크 업 언어&quot;) BCP 47 호환 LDML에 대한 지원 로케일 데이터 교환을위한 확장.</target>
        </trans-unit>
        <trans-unit id="b49e579633330874272c018a016eeeecd34916da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Locale&lt;/code&gt; class provides a number of convenient constants that you can use to create &lt;code&gt;Locale&lt;/code&gt; objects for commonly used locales. For example, the following creates a &lt;code&gt;Locale&lt;/code&gt; object for the United States:</source>
          <target state="translated">&lt;code&gt;Locale&lt;/code&gt; 클래스를 생성하는 데 사용할 수있는 편리한 상수의 숫자 제공 &lt;code&gt;Locale&lt;/code&gt; 일반적으로 사용되는 로케일 오브젝트를. 예를 들어 다음은 미국에 대한 &lt;code&gt;Locale&lt;/code&gt; 객체를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="fa1e07d1d615f3001a87ae91c2a0604617a8b571" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Locale&lt;/code&gt; class provides three constructors:</source>
          <target state="translated">&lt;code&gt;Locale&lt;/code&gt; 클래스는 세 개의 생성자를 제공합니다 :</target>
        </trans-unit>
        <trans-unit id="154dd3c2315f6100804c904415eeede9ad2a13fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Logger&lt;/code&gt; that has been specified for use by &lt;code&gt;SyncProvider&lt;/code&gt; implementations</source>
          <target state="translated">&lt;code&gt;Logger&lt;/code&gt; 로 사용하기 위해 지정되었습니다 &lt;code&gt;SyncProvider&lt;/code&gt; 구현</target>
        </trans-unit>
        <trans-unit id="29f650595b9f348aa19ea69fc4ffab1e764aac3d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LoggerFinder&lt;/code&gt; service is responsible for creating, managing, and configuring loggers to the underlying framework it uses.</source>
          <target state="translated">&lt;code&gt;LoggerFinder&lt;/code&gt; 의 서비스를 생성, 관리하고 사용하는 기본 프레임 워크 로거를 구성하기위한 책임이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d949a93c9d9a78edeb4d078a66d8ba0c9af79890" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LoggerFinder&lt;/code&gt; service is responsible for creating, managing, and configuring loggers to the underlying framework it uses. A logger finder is a concrete implementation of this class that has a zero-argument constructor and implements the abstract methods defined by this class. The loggers returned from a logger finder are capable of routing log messages to the logging backend this provider supports. A given invocation of the Java Runtime maintains a single system-wide LoggerFinder instance that is loaded as follows:</source>
          <target state="translated">&lt;code&gt;LoggerFinder&lt;/code&gt; 의 서비스를 생성, 관리하고 사용하는 기본 프레임 워크 로거를 구성하기위한 책임이 있습니다. 로거 파인더는 인수가없는 생성자를 갖고이 클래스에 의해 정의 된 추상 메서드를 구현하는이 클래스의 구체적인 구현입니다. 로거 파인더에서 반환 된 로거는이 공급자가 지원하는 로깅 백엔드로 로그 메시지를 라우팅 할 수 있습니다. Java 런타임의 지정된 호출은 다음과 같이로드되는 단일 시스템 전체 LoggerFinder 인스턴스를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="753e94e16d15c98e2261f7d3bdcddbdc2d027d5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LoginContext&lt;/code&gt; class describes the basic methods used to authenticate Subjects and provides a way to develop an application independent of the underlying authentication technology.</source>
          <target state="translated">&lt;code&gt;LoginContext&lt;/code&gt; 클래스는 인증 용 주제에 사용되는 기본적인 방법을 설명하고 기본 인증 기술에 의존하지 않는 어플리케이션 개발하는 방법을 제공한다.</target>
        </trans-unit>
        <trans-unit id="98c21b51d0ddf913deb3a4a49b2303d25a261498" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LoginContext&lt;/code&gt; class describes the basic methods used to authenticate Subjects and provides a way to develop an application independent of the underlying authentication technology. A &lt;code&gt;Configuration&lt;/code&gt; specifies the authentication technology, or &lt;code&gt;LoginModule&lt;/code&gt;, to be used with a particular application. Different LoginModules can be plugged in under an application without requiring any modifications to the application itself.</source>
          <target state="translated">&lt;code&gt;LoginContext&lt;/code&gt; 클래스는 인증 용 주제에 사용되는 기본적인 방법을 설명하고 기본 인증 기술에 의존하지 않는 어플리케이션 개발하는 방법을 제공한다. &lt;code&gt;Configuration&lt;/code&gt; 인증 기술 또는 지정 &lt;code&gt;LoginModule&lt;/code&gt; 의 특정 응용에 사용되는이. 응용 프로그램 자체를 수정하지 않고도 응용 프로그램에서 다른 LoginModule을 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24bd53fa001fd556da21468c145af7d9ff2e52d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LoginContext&lt;/code&gt; is responsible for reading the &lt;code&gt;Configuration&lt;/code&gt; and instantiating the appropriate LoginModules. Each &lt;code&gt;LoginModule&lt;/code&gt; is initialized with a &lt;code&gt;Subject&lt;/code&gt;, a &lt;code&gt;CallbackHandler&lt;/code&gt;, shared &lt;code&gt;LoginModule&lt;/code&gt; state, and LoginModule-specific options. The &lt;code&gt;Subject&lt;/code&gt; represents the &lt;code&gt;Subject&lt;/code&gt; currently being authenticated and is updated with relevant Credentials if authentication succeeds. LoginModules use the &lt;code&gt;CallbackHandler&lt;/code&gt; to communicate with users. The &lt;code&gt;CallbackHandler&lt;/code&gt; may be used to prompt for usernames and passwords, for example. Note that the &lt;code&gt;CallbackHandler&lt;/code&gt; may be null. LoginModules which absolutely require a &lt;code&gt;CallbackHandler&lt;/code&gt; to authenticate the &lt;code&gt;Subject&lt;/code&gt; may throw a &lt;code&gt;LoginException&lt;/code&gt;. LoginModules optionally use the shared state to share information or data among themselves.</source>
          <target state="translated">&lt;code&gt;LoginContext&lt;/code&gt; 판독에 대한 책임이 &lt;code&gt;Configuration&lt;/code&gt; 적절한 로그인 모듈 및 인스턴스화. 각 &lt;code&gt;LoginModule&lt;/code&gt; 은 &lt;code&gt;Subject&lt;/code&gt; , &lt;code&gt;CallbackHandler&lt;/code&gt; , 공유 &lt;code&gt;LoginModule&lt;/code&gt; 상태 및 LoginModule 관련 옵션 으로 초기화됩니다 . &lt;code&gt;Subject&lt;/code&gt; 대표하는 &lt;code&gt;Subject&lt;/code&gt; 현재 인증 된 인증이 성공하면 관련 자격 증명으로 업데이트됩니다. LoginModule은 &lt;code&gt;CallbackHandler&lt;/code&gt; 를 사용하여 사용자와 통신합니다. &lt;code&gt;CallbackHandler&lt;/code&gt; 예를 들어, 사용자 이름과 암호에 대한 프롬프트로 사용할 수있다. 참고 그 &lt;code&gt;CallbackHandler&lt;/code&gt; null 일 수 있습니다. &lt;code&gt;Subject&lt;/code&gt; 를 인증하기 위해 반드시 &lt;code&gt;CallbackHandler&lt;/code&gt; 가 필요한 LoginModule 은 &lt;code&gt;LoginException&lt;/code&gt; 을 던질 수 있습니다 . LoginModule은 선택적으로 공유 상태를 사용하여 정보 또는 데이터를 서로 공유합니다.</target>
        </trans-unit>
        <trans-unit id="b21ebcd0d4d483586ab3807b4d68805315158ccb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Long&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;
 long&lt;/code&gt; in an object.</source>
          <target state="translated">&lt;code&gt;Long&lt;/code&gt; 클래스는 원시적 형의 값을 감싸는 &lt;code&gt; long&lt;/code&gt; 물체에.</target>
        </trans-unit>
        <trans-unit id="d90c04bbbf4599ac5901e7f0958b186b8247c1b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Long&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;
 long&lt;/code&gt; in an object. An object of type &lt;code&gt;Long&lt;/code&gt; contains a single field whose type is &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Long&lt;/code&gt; 클래스는 원시적 형의 값을 감싸는 &lt;code&gt; long&lt;/code&gt; 물체에. &lt;code&gt;Long&lt;/code&gt; 유형의 객체 에는 유형이 &lt;code&gt;long&lt;/code&gt; 인 단일 필드가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="7801867034780a1c5fff70e8cc7e32057101d13e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Long&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;long&lt;/code&gt; in an object.</source>
          <target state="translated">&lt;code&gt;Long&lt;/code&gt; 클래스는 원시적 형의 값을 감싸는 &lt;code&gt;long&lt;/code&gt; 물체에.</target>
        </trans-unit>
        <trans-unit id="e7f5fb0211de99c25185ee45c0d498d693daf127" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Long&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;long&lt;/code&gt; in an object. An object of type &lt;code&gt;Long&lt;/code&gt; contains a single field whose type is &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Long&lt;/code&gt; 클래스는 원시적 형의 값을 감싸는 &lt;code&gt;long&lt;/code&gt; 물체에. &lt;code&gt;Long&lt;/code&gt; 유형의 객체 에는 유형이 &lt;code&gt;long&lt;/code&gt; 인 단일 필드가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="b73aaaf679d63a88eb466b691fdb58c718db13f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; class is used to describe the characteristics of the different notification instances emitted by an MBean, for a given Java class of notification.</source>
          <target state="translated">&lt;code&gt;MBeanNotificationInfo&lt;/code&gt; 클래스의 통지 Java 클래스 들면 MBean에 의해 방출 된 상이한 통지 경우의 특성을 설명하는 데 사용된다.</target>
        </trans-unit>
        <trans-unit id="8c0d93d2a05b2c51593dc81a25c6a33e58b7c2f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; class is used to describe the characteristics of the different notification instances emitted by an MBean, for a given Java class of notification. If an MBean emits notifications that can be instances of different Java classes, then the metadata for that MBean should provide an &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; object for each of these notification Java classes.</source>
          <target state="translated">&lt;code&gt;MBeanNotificationInfo&lt;/code&gt; 클래스의 통지 Java 클래스 들면 MBean에 의해 방출 된 상이한 통지 경우의 특성을 설명하는 데 사용된다. MBean이 다른 Java 클래스의 인스턴스 일 수있는 알림을 생성하는 경우 해당 MBean의 메타 데이터 는 이러한 각 알림 Java 클래스에 대해 &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; 오브젝트를 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="de572685114708d2dbbbf2708ab7dd9cc02d6fb3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MBeanServer&lt;/code&gt; to which this connector server is attached.</source>
          <target state="translated">&lt;code&gt;MBeanServer&lt;/code&gt; 되는이 커넥터 서버가 부착된다.</target>
        </trans-unit>
        <trans-unit id="d306b6b1cd1b367a72d76620a44c2997e616fcf2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MBeanServer&lt;/code&gt; to which this connector server is attached. This is the last value passed to &lt;a href=&quot;#setMBeanServer(javax.management.MBeanServer)&quot;&gt;&lt;code&gt;setMBeanServer(javax.management.MBeanServer)&lt;/code&gt;&lt;/a&gt; on this object, or null if that method has never been called.</source>
          <target state="translated">&lt;code&gt;MBeanServer&lt;/code&gt; 되는이 커넥터 서버가 부착된다. 이것은 이 오브젝트의 &lt;a href=&quot;#setMBeanServer(javax.management.MBeanServer)&quot;&gt; &lt;code&gt;setMBeanServer(javax.management.MBeanServer)&lt;/code&gt; &lt;/a&gt; 에 전달 된 마지막 값 이거나 해당 메소드가 호출 된 적이없는 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="ba64fec83d48a2cbf38343d1715ffb0852ef3636" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MBeanServer&lt;/code&gt; to which this connector server is attached. This is the last value passed to &lt;a href=&quot;rmiserverimpl#setMBeanServer-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;setMBeanServer(javax.management.MBeanServer)&lt;/code&gt;&lt;/a&gt; on this object, or null if that method has never been called.</source>
          <target state="translated">&lt;code&gt;MBeanServer&lt;/code&gt; 되는이 커넥터 서버가 부착된다. 이 객체의 &lt;a href=&quot;rmiserverimpl#setMBeanServer-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;setMBeanServer(javax.management.MBeanServer)&lt;/code&gt; &lt;/a&gt; 에 전달 된 마지막 값 이거나, 해당 메소드가 호출되지 않은 경우 널입니다.</target>
        </trans-unit>
        <trans-unit id="0a8a2b2991ac645b67698f44548fc7e282981c3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MLET&lt;/code&gt; tag has the following syntax:</source>
          <target state="translated">&lt;code&gt;MLET&lt;/code&gt; 태그의 구문은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="596a31ac86272faf93e710d63fa1745d1a5e9ca2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MODULE&lt;/code&gt; lookup mode serves to authenticate that the lookup object was created by code in the caller module (or derived from a lookup object originally created by the caller). A lookup object with the &lt;code&gt;MODULE&lt;/code&gt; lookup mode can be shared with trusted parties without giving away &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PACKAGE&lt;/code&gt; access to the caller.</source>
          <target state="translated">&lt;code&gt;MODULE&lt;/code&gt; 의 룩업 모드 룩업 객체 호출 코드 모듈에 의해 생성 된 (또는 원래 호출자에 의해 생성 된 조회 개체로부터 유래)되었는지를 인증하는 역할을한다. &lt;code&gt;MODULE&lt;/code&gt; 조회 모드를 사용하는 조회 개체 는 호출자 에게 &lt;code&gt;PRIVATE&lt;/code&gt; 및 &lt;code&gt;PACKAGE&lt;/code&gt; 액세스 권한을 주지 않고 신뢰할 수있는 당사자와 공유 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="41d6128d4ea5a41adf8b5c56d1c50b772d8bb991" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ManagementFactory&lt;/code&gt; class is a factory class for getting managed beans for the Java platform.</source>
          <target state="translated">&lt;code&gt;ManagementFactory&lt;/code&gt; 클래스는 Java 플랫폼의 관리 빈을 취득하기위한 팩토리 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="d71986942be1c54b6a6ae12607dd5829e664ceed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ManagementFactory&lt;/code&gt; class is a factory class for getting managed beans for the Java platform. This class consists of static methods each of which returns one or more</source>
          <target state="translated">&lt;code&gt;ManagementFactory&lt;/code&gt; 클래스는 Java 플랫폼의 관리 빈을 취득하기위한 팩토리 클래스입니다. 이 클래스는 정적 메소드로 구성되며 각 메소드는 하나 이상을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="da35ea78eb0bbad93818f873018df137e9342c23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map.Entry&lt;/code&gt; elements traversed by the &lt;code&gt;iterator&lt;/code&gt; or &lt;code&gt;spliterator&lt;/code&gt; do &lt;em&gt;not&lt;/em&gt; support the &lt;code&gt;setValue&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;Map.Entry&lt;/code&gt; 의해 횡단 요소 &lt;code&gt;iterator&lt;/code&gt; 또는 &lt;code&gt;spliterator&lt;/code&gt; 는 않습니다 &lt;em&gt;하지&lt;/em&gt; 지원 &lt;code&gt;setValue&lt;/code&gt; 작업을.</target>
        </trans-unit>
        <trans-unit id="227699f0dce7484c6d17e1d7babad6ee5858c1d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt; interface provides three</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 인터페이스는 세 가지를 제공합니다</target>
        </trans-unit>
        <trans-unit id="bc88794f3bfb66bef560415a38768466fee45791" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="d3587321566f5e4b877578d4a8ea85fc41c24c79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt; parameter passed to the &lt;code&gt;JMXConnectorProvider&lt;/code&gt; is a new read-only &lt;code&gt;Map&lt;/code&gt; that contains all the entries that were in the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;#newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt;&lt;code&gt;JMXConnectorFactory.newJMXConnector&lt;/code&gt;&lt;/a&gt;, if there was one. Additionally, if the &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; key is not present in the &lt;code&gt;environment&lt;/code&gt; parameter, it is added to the new read-only &lt;code&gt;Map&lt;/code&gt;. The associated value is the calling thread's context class loader.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 에 전달 된 매개 변수 &lt;code&gt;JMXConnectorProvider&lt;/code&gt; 는 A가 새로운 읽기 전용이다 &lt;code&gt;Map&lt;/code&gt; 가가에 있던 모든 항목이 포함되어 &lt;code&gt;environment&lt;/code&gt; 에 매개 변수 &lt;a href=&quot;#newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt; &lt;code&gt;JMXConnectorFactory.newJMXConnector&lt;/code&gt; &lt;/a&gt; 하나가 있다면을. 또한 &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; 키가 &lt;code&gt;environment&lt;/code&gt; 매개 변수 에 없으면 새 읽기 전용 &lt;code&gt;Map&lt;/code&gt; 에 추가됩니다 . 연관된 값은 호출 스레드의 컨텍스트 클래스 로더입니다.</target>
        </trans-unit>
        <trans-unit id="9428a88bd8c1667c06a6e1c738d06e6c61771810" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt; parameter passed to the &lt;code&gt;JMXConnectorProvider&lt;/code&gt; is a new read-only &lt;code&gt;Map&lt;/code&gt; that contains all the entries that were in the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;jmxconnectorfactory#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt;&lt;code&gt;JMXConnectorFactory.newJMXConnector&lt;/code&gt;&lt;/a&gt;, if there was one. Additionally, if the &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; key is not present in the &lt;code&gt;environment&lt;/code&gt; parameter, it is added to the new read-only &lt;code&gt;Map&lt;/code&gt;. The associated value is the calling thread's context class loader.</source>
          <target state="translated">&lt;code&gt;JMXConnectorProvider&lt;/code&gt; 에 전달 된 &lt;code&gt;Map&lt;/code&gt; 매개 변수 는 &lt;code&gt;environment&lt;/code&gt; 매개 변수 에있는 모든 항목 을 &lt;a href=&quot;jmxconnectorfactory#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt; &lt;code&gt;JMXConnectorFactory.newJMXConnector&lt;/code&gt; &lt;/a&gt; (있는 경우)에 포함 하는 새로운 읽기 전용 &lt;code&gt;Map&lt;/code&gt; 입니다 . 또한 &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; 키가 &lt;code&gt;environment&lt;/code&gt; 매개 변수 에 없으면 새 읽기 전용 &lt;code&gt;Map&lt;/code&gt; 에 추가됩니다 . 연관된 값은 호출 스레드의 컨텍스트 클래스 로더입니다.</target>
        </trans-unit>
        <trans-unit id="f3432ba54f4dce75c626f795ba794c66e77d0df3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt; parameter passed to the &lt;code&gt;JMXConnectorServerProvider&lt;/code&gt; is a new read-only &lt;code&gt;Map&lt;/code&gt; that contains all the entries that were in the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt;&lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt;&lt;/a&gt;, if there was one. Additionally, if the &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; key is not present in the &lt;code&gt;environment&lt;/code&gt; parameter, it is added to the new read-only &lt;code&gt;Map&lt;/code&gt;. The associated value is the calling thread's context class loader.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 에 전달 된 매개 변수 &lt;code&gt;JMXConnectorServerProvider&lt;/code&gt; 는 A가 새로운 읽기 전용이다 &lt;code&gt;Map&lt;/code&gt; 가가에 있던 모든 항목이 포함되어 &lt;code&gt;environment&lt;/code&gt; 에 매개 변수 &lt;a href=&quot;#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt; &lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt; &lt;/a&gt; 하나가 있다면을. 또한 &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; 키가 &lt;code&gt;environment&lt;/code&gt; 매개 변수 에 없으면 새 읽기 전용 &lt;code&gt;Map&lt;/code&gt; 에 추가됩니다 . 연관된 값은 호출 스레드의 컨텍스트 클래스 로더입니다.</target>
        </trans-unit>
        <trans-unit id="fccf20df23e6200637aa7b23e7388c8a9a88bb06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt; parameter passed to the &lt;code&gt;JMXConnectorServerProvider&lt;/code&gt; is a new read-only &lt;code&gt;Map&lt;/code&gt; that contains all the entries that were in the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt;&lt;/a&gt;, if there was one. Additionally, if the &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; key is not present in the &lt;code&gt;environment&lt;/code&gt; parameter, it is added to the new read-only &lt;code&gt;Map&lt;/code&gt;. The associated value is the calling thread's context class loader.</source>
          <target state="translated">&lt;code&gt;JMXConnectorServerProvider&lt;/code&gt; 에 전달 된 &lt;code&gt;Map&lt;/code&gt; 매개 변수 는 &lt;code&gt;environment&lt;/code&gt; 매개 변수 에있는 모든 항목 을 &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt; &lt;/a&gt; (있는 경우)에 포함 하는 새로운 읽기 전용 &lt;code&gt;Map&lt;/code&gt; 입니다 . 또한 &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; 키가 &lt;code&gt;environment&lt;/code&gt; 매개 변수 에 없으면 새 읽기 전용 &lt;code&gt;Map&lt;/code&gt; 에 추가됩니다 . 연관된 값은 호출 스레드의 컨텍스트 클래스 로더입니다.</target>
        </trans-unit>
        <trans-unit id="6c1109a26629152d8e80c4167284a5176959aab1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt;-based constructor and &lt;code&gt;deriveFont&lt;/code&gt; APIs ignore the FONT attribute, and it is not retained by the Font; the static &lt;a href=&quot;#getFont(java.util.Map)&quot;&gt;&lt;code&gt;getFont(java.util.Map&amp;lt;? extends java.text.AttributedCharacterIterator.Attribute, ?&amp;gt;)&lt;/code&gt;&lt;/a&gt; method should be used if the FONT attribute might be present. See &lt;a href=&quot;font/textattribute#FONT&quot;&gt;&lt;code&gt;TextAttribute.FONT&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 생성자 기반과 &lt;code&gt;deriveFont&lt;/code&gt; API는 FONT 속성을 무시하고이 글꼴에 의해 유지되지 않습니다; FONT 속성이있는 경우 정적 &lt;a href=&quot;#getFont(java.util.Map)&quot;&gt; &lt;code&gt;getFont(java.util.Map&amp;lt;? extends java.text.AttributedCharacterIterator.Attribute, ?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 메소드를 사용해야합니다. 자세한 내용은 &lt;a href=&quot;font/textattribute#FONT&quot;&gt; &lt;code&gt;TextAttribute.FONT&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5865a336095d84a9779ddde69b513d49e053e443" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MediaSize&lt;/code&gt; is in turn used to locate the &lt;code&gt;MediaSizeName&lt;/code&gt; object. This method may return &lt;code&gt;null&lt;/code&gt; if the closest matching &lt;code&gt;MediaSize&lt;/code&gt; has no corresponding &lt;code&gt;Media&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;MediaSize&lt;/code&gt; 차례로 찾는 데 사용됩니다 &lt;code&gt;MediaSizeName&lt;/code&gt; 객체. 이 메서드는 가장 가까운 일치하는 &lt;code&gt;MediaSize&lt;/code&gt; 에 해당하는 &lt;code&gt;Media&lt;/code&gt; 인스턴스 가없는 경우 &lt;code&gt;null&lt;/code&gt; 을 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a070dabcac26392a8318450e8b1d538eeddd0be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MediaTracker&lt;/code&gt; class is a utility class to track the status of a number of media objects.</source>
          <target state="translated">&lt;code&gt;MediaTracker&lt;/code&gt; 클래스는 몇개의 미디어 객체 상태를 감시하는 유틸리티 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="17601962e75c98c387ad4765276e1cdfa2694759" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MediaTracker&lt;/code&gt; class is a utility class to track the status of a number of media objects. Media objects could include audio clips as well as images, though currently only images are supported.</source>
          <target state="translated">&lt;code&gt;MediaTracker&lt;/code&gt; 클래스는 몇개의 미디어 객체 상태를 감시하는 유틸리티 클래스입니다. 미디어 개체에는 이미지뿐만 아니라 오디오 클립도 포함될 수 있지만 현재는 이미지 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="8b01e42df4caf57c30334c7ef0ef0673760d8b60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MemoryHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values) except that the given &lt;code&gt;pushLevel&lt;/code&gt; argument and buffer size argument are used.</source>
          <target state="translated">&lt;code&gt;MemoryHandler&lt;/code&gt; 을 기반으로 구성된다 &lt;code&gt;LogManager&lt;/code&gt; 지정된 것을 제외 특성 (또는 기본값) &lt;code&gt;pushLevel&lt;/code&gt; 의 인수 및 크기 인자 버퍼가 사용된다.</target>
        </trans-unit>
        <trans-unit id="5651aaa22c68d9ecf5c414f98e30a0e7dbf81cb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MemoryMXBean&lt;/code&gt; object returned by &lt;a href=&quot;managementfactory#getMemoryMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt;&lt;/a&gt; implements the &lt;a href=&quot;../../../javax/management/notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; interface that allows a listener to be registered within the &lt;code&gt;MemoryMXBean&lt;/code&gt; as a notification listener. Below is an example code that registers a &lt;code&gt;MyListener&lt;/code&gt; to handle notification emitted by the &lt;code&gt;MemoryMXBean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MemoryMXBean&lt;/code&gt; 에 의해 리턴 된 객체 &lt;a href=&quot;managementfactory#getMemoryMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt; &lt;/a&gt; 유단 &lt;a href=&quot;../../../javax/management/notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt; 리스너가 내에 등록 될 수 있도록 인터페이스 &lt;code&gt;MemoryMXBean&lt;/code&gt; 에 통지를 청취자로. 다음은 &lt;code&gt;MemoryMXBean&lt;/code&gt; 에서 발생하는 알림을 처리하기 위해 &lt;code&gt;MyListener&lt;/code&gt; 를 등록하는 예제 코드입니다 .</target>
        </trans-unit>
        <trans-unit id="8e6c1d6da906bc1b50ed3822bfcdb7ac20a1aee1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MemoryMXBean&lt;/code&gt; object returned by &lt;a href=&quot;managementfactory#getMemoryMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt;&lt;/a&gt; implements the &lt;a href=&quot;../../../javax/management/notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; interface that allows a listener to be registered within the &lt;code&gt;MemoryMXBean&lt;/code&gt; as a notification listener. Below is an example code that registers a &lt;code&gt;MyListener&lt;/code&gt; to handle notification emitted by the &lt;code&gt;MemoryMXBean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MemoryMXBean&lt;/code&gt; 에 의해 리턴 된 객체 &lt;a href=&quot;managementfactory#getMemoryMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt; &lt;/a&gt; 유단 &lt;a href=&quot;../../../javax/management/notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt; 리스너가 내에 등록 될 수 있도록 인터페이스 &lt;code&gt;MemoryMXBean&lt;/code&gt; 에 통지를 청취자로. 아래는 &lt;code&gt;MemoryMXBean&lt;/code&gt; 에 의해 생성 된 알림을 처리하기 위해 &lt;code&gt;MyListener&lt;/code&gt; 를 등록하는 예제 코드입니다 .</target>
        </trans-unit>
        <trans-unit id="33bb8679046b19786cafc3f83df011fe2fd08c26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MenuBar&lt;/code&gt; class encapsulates the platform's concept of a menu bar bound to a frame.</source>
          <target state="translated">&lt;code&gt;MenuBar&lt;/code&gt; 클래스는 프레임에 결합되는 도구 모음의 개념을 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="14b089e0c21d4e5f4b76d1c03ed79e79cce03f7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MenuBar&lt;/code&gt; class encapsulates the platform's concept of a menu bar bound to a frame. In order to associate the menu bar with a &lt;code&gt;Frame&lt;/code&gt; object, call the frame's &lt;code&gt;setMenuBar&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;MenuBar&lt;/code&gt; 클래스는 프레임에 결합되는 도구 모음의 개념을 캡슐화합니다. 메뉴 모음을 &lt;code&gt;Frame&lt;/code&gt; 객체 와 연결 하려면 프레임의 &lt;code&gt;setMenuBar&lt;/code&gt; 메서드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="dc83b8a910473a027cff1f2424c20667476e8789" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MenuShortcut&lt;/code&gt; class represents a keyboard accelerator for a MenuItem.</source>
          <target state="translated">&lt;code&gt;MenuShortcut&lt;/code&gt; 를의 클래스는 MenuItem의 키보드 가속기를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="82571554e721d419914c56f461c9899435b69ef0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MetaEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt; has processed a &lt;a href=&quot;metamessage&quot;&gt;&lt;code&gt;MetaMessage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MetaEventListener&lt;/code&gt; 의 인터페이스는 필요가있는 인스턴스 때 알림 클래스가 구현되어야 &lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; &lt;/a&gt; 가공했다 &lt;a href=&quot;metamessage&quot;&gt; &lt;code&gt;MetaMessage&lt;/code&gt; 의이&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b78a4c32d697abee0a6159e1d2a87909e03931ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MetaEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt; has processed a &lt;a href=&quot;metamessage&quot;&gt;&lt;code&gt;MetaMessage&lt;/code&gt;&lt;/a&gt;. To register a &lt;code&gt;MetaEventListener&lt;/code&gt; object to receive such notifications, pass it as the argument to the &lt;a href=&quot;sequencer#addMetaEventListener(javax.sound.midi.MetaEventListener)&quot;&gt;&lt;code&gt;addMetaEventListener&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Sequencer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MetaEventListener&lt;/code&gt; 의 인터페이스는 필요가있는 인스턴스 때 알림 클래스가 구현되어야 &lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; &lt;/a&gt; 가공했다 &lt;a href=&quot;metamessage&quot;&gt; &lt;code&gt;MetaMessage&lt;/code&gt; 의이&lt;/a&gt; . 이러한 알림을 수신하기 위해 &lt;code&gt;MetaEventListener&lt;/code&gt; 객체 를 등록하려면 &lt;code&gt;Sequencer&lt;/code&gt; 의 &lt;a href=&quot;sequencer#addMetaEventListener(javax.sound.midi.MetaEventListener)&quot;&gt; &lt;code&gt;addMetaEventListener&lt;/code&gt; &lt;/a&gt; 메서드에 인수로 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="5864b743917b0ab45bb87ab5b12728c29a56a04c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MetaEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; has processed a &lt;code&gt;&lt;a href=&quot;metamessage&quot;&gt;&lt;code&gt;MetaMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MetaEventListener&lt;/code&gt; 의 인터페이스는 필요가있는 인스턴스 때 알림 클래스가 구현되어야 &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 가공했다 &lt;code&gt;&lt;a href=&quot;metamessage&quot;&gt;&lt;code&gt;MetaMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 의이 .</target>
        </trans-unit>
        <trans-unit id="91e79b4c499b3f35a4dda98bb1b312a4085719a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MetaEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; has processed a &lt;code&gt;&lt;a href=&quot;metamessage&quot;&gt;&lt;code&gt;MetaMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;. To register a &lt;code&gt;MetaEventListener&lt;/code&gt; object to receive such notifications, pass it as the argument to the &lt;code&gt;&lt;a href=&quot;sequencer#addMetaEventListener-javax.sound.midi.MetaEventListener-&quot;&gt;&lt;code&gt;addMetaEventListener&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;Sequencer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MetaEventListener&lt;/code&gt; 의 인터페이스는 필요가있는 인스턴스 때 알림 클래스가 구현되어야 &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 가공했다 &lt;code&gt;&lt;a href=&quot;metamessage&quot;&gt;&lt;code&gt;MetaMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 의이 . 이러한 알림을 받도록 &lt;code&gt;MetaEventListener&lt;/code&gt; 객체 를 등록하려면 &lt;code&gt;Sequencer&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;sequencer#addMetaEventListener-javax.sound.midi.MetaEventListener-&quot;&gt;&lt;code&gt;addMetaEventListener&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드에 인수로 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="d01c40b457907a7d5e20ffd74ad4b85ee2009577" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MidiSystem&lt;/code&gt; class provides access to the installed MIDI system resources, including devices such as synthesizers, sequencers, and MIDI input and output ports.</source>
          <target state="translated">&lt;code&gt;MidiSystem&lt;/code&gt; 클래스는, 신디사이저, 시퀀서, MIDI 입출력 포트 등의 디바이스를 포함하는 설치 MIDI 시스템 자원에 대한 액세스를 제공한다.</target>
        </trans-unit>
        <trans-unit id="a80d68435a1b6165c900a036816b9bec6091ed82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MidiSystem&lt;/code&gt; class provides access to the installed MIDI system resources, including devices such as synthesizers, sequencers, and MIDI input and output ports. A typical simple MIDI application might begin by invoking one or more &lt;code&gt;MidiSystem&lt;/code&gt; methods to learn what devices are installed and to obtain the ones needed in that application.</source>
          <target state="translated">&lt;code&gt;MidiSystem&lt;/code&gt; 클래스는, 신디사이저, 시퀀서, MIDI 입출력 포트 등의 디바이스를 포함하는 설치 MIDI 시스템 자원에 대한 액세스를 제공한다. 일반적인 간단한 MIDI 응용 프로그램은 어떤 장치가 설치되어 있는지 알고 해당 응용 프로그램에 필요한 장치를 얻기 위해 하나 이상의 &lt;code&gt;MidiSystem&lt;/code&gt; 메서드를 호출하여 시작할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b52eb410a08736554d78710757e24ecd5480df64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mixer.Info&lt;/code&gt; class represents information about an audio mixer, including the product's name, version, and vendor, along with a textual description.</source>
          <target state="translated">&lt;code&gt;Mixer.Info&lt;/code&gt; 의 클래스는 텍스트 설명과 함께 제품의 이름, 버젼, 벤더 등, 오디오 믹서에 관한 정보를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2413f98f580324031afa36fa47e305da2ad575eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mixer.Info&lt;/code&gt; class represents information about an audio mixer, including the product's name, version, and vendor, along with a textual description. This information may be retrieved through the &lt;a href=&quot;mixer#getMixerInfo()&quot;&gt;&lt;code&gt;getMixerInfo&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;Mixer&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;Mixer.Info&lt;/code&gt; 의 클래스는 텍스트 설명과 함께 제품의 이름, 버젼, 벤더 등, 오디오 믹서에 관한 정보를 나타냅니다. 이 정보는 &lt;code&gt;Mixer&lt;/code&gt; 인터페이스 의 &lt;a href=&quot;mixer#getMixerInfo()&quot;&gt; &lt;code&gt;getMixerInfo&lt;/code&gt; &lt;/a&gt; 메소드를 통해 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e56a0592321beb830ad7682fabbd101887d52b64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mixer.Info&lt;/code&gt; class represents information about an audio mixer, including the product's name, version, and vendor, along with a textual description. This information may be retrieved through the &lt;a href=&quot;mixer#getMixerInfo--&quot;&gt;&lt;code&gt;getMixerInfo&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;Mixer&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;Mixer.Info&lt;/code&gt; 의 클래스는 텍스트 설명과 함께 제품의 이름, 버젼, 벤더 등, 오디오 믹서에 관한 정보를 나타냅니다. 이 정보는 &lt;code&gt;Mixer&lt;/code&gt; 인터페이스 의 &lt;a href=&quot;mixer#getMixerInfo--&quot;&gt; &lt;code&gt;getMixerInfo&lt;/code&gt; &lt;/a&gt; 메소드를 통해 검색 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb9a70e7236c1e2ff693bd4d1a815405e4adcc77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MouseEvent&lt;/code&gt; interface provides specific contextual information associated with Mouse events.</source>
          <target state="translated">&lt;code&gt;MouseEvent&lt;/code&gt; 인터페이스는 마우스 이벤트에 관련하는 고유의 문맥 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="29d1d5cbe4705a95fc4625d67c369d249af68cf2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MouseListener&lt;/code&gt; listens to events.</source>
          <target state="translated">&lt;code&gt;MouseListener&lt;/code&gt; 이벤트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="58edd9693b150e70063bc2843ee9db0174fe97ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MouseMotionListener&lt;/code&gt; listens to events.</source>
          <target state="translated">&lt;code&gt;MouseMotionListener&lt;/code&gt; 이벤트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="150ea102c83ed4ff8e936243516b257e232ff94f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MouseWheelEvent&lt;/code&gt; class includes methods for getting the number of &quot;clicks&quot; by which the mouse wheel is rotated. The &lt;a href=&quot;#getWheelRotation()&quot;&gt;&lt;code&gt;getWheelRotation()&lt;/code&gt;&lt;/a&gt; method returns the integer number of &quot;clicks&quot; corresponding to the number of notches by which the wheel was rotated. In addition to this method, the &lt;code&gt;MouseWheelEvent&lt;/code&gt; class provides the &lt;a href=&quot;#getPreciseWheelRotation()&quot;&gt;&lt;code&gt;getPreciseWheelRotation()&lt;/code&gt;&lt;/a&gt; method which returns a double number of &quot;clicks&quot; in case a partial rotation occurred. The &lt;a href=&quot;#getPreciseWheelRotation()&quot;&gt;&lt;code&gt;getPreciseWheelRotation()&lt;/code&gt;&lt;/a&gt; method is useful if a mouse supports a high-resolution wheel, such as a freely rotating wheel with no notches. Applications can benefit by using this method to process mouse wheel events more precisely, and thus, making visual perception smoother.</source>
          <target state="translated">&lt;code&gt;MouseWheelEvent&lt;/code&gt; 가의 클래스는 마우스 휠이 회전하는 「클릭」수를 얻는 방법을 포함한다. &lt;a href=&quot;#getWheelRotation()&quot;&gt; &lt;code&gt;getWheelRotation()&lt;/code&gt; &lt;/a&gt; 메소드는 바퀴 회전시켰다되는 노치의 개수에 대응하는 &quot;클릭&quot;의 정수를 반환한다. 이 메서드 외에도 &lt;code&gt;MouseWheelEvent&lt;/code&gt; 클래스는 부분 회전이 발생한 경우 두 배의 &quot;클릭&quot;을 반환하는 &lt;a href=&quot;#getPreciseWheelRotation()&quot;&gt; &lt;code&gt;getPreciseWheelRotation()&lt;/code&gt; &lt;/a&gt; 메서드를 제공합니다 . &lt;a href=&quot;#getPreciseWheelRotation()&quot;&gt; &lt;code&gt;getPreciseWheelRotation()&lt;/code&gt; &lt;/a&gt; 마우스는 노치없이 자유롭게 회전 휠과 같은 고해상도 휠을 지원하는 경우에있어서 유용하다. 응용 프로그램은이 방법을 사용하여 마우스 휠 이벤트를보다 정확하게 처리함으로써 시각적 인식을 더 부드럽게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7bdd496fed36950bc598bbd6ea56d02421a0688e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MultiPixelPackedSampleModel&lt;/code&gt; class represents one-banded images and can pack multiple one-sample pixels into one data element.</source>
          <target state="translated">&lt;code&gt;MultiPixelPackedSampleModel&lt;/code&gt; 클래스 이미지를 하나의 줄무늬와 하나 개의 데이터 요소에 여러 개의 원 화소 샘플 수를 포장 나타낸다.</target>
        </trans-unit>
        <trans-unit id="11bb803e4faf382111d8da7958e2a0219f9b2f28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MultiPixelPackedSampleModel&lt;/code&gt; class represents one-banded images and can pack multiple one-sample pixels into one data element. Pixels are not allowed to span data elements. The data type can be DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, or DataBuffer.TYPE_INT. Each pixel must be a power of 2 number of bits and a power of 2 number of pixels must fit exactly in one data element. Pixel bit stride is equal to the number of bits per pixel. Scanline stride is in data elements and the last several data elements might be padded with unused pixels. Data bit offset is the offset in bits from the beginning of the &lt;a href=&quot;databuffer&quot;&gt;&lt;code&gt;DataBuffer&lt;/code&gt;&lt;/a&gt; to the first pixel and must be a multiple of pixel bit stride.</source>
          <target state="translated">&lt;code&gt;MultiPixelPackedSampleModel&lt;/code&gt; 클래스 이미지를 하나의 줄무늬와 하나 개의 데이터 요소에 여러 개의 원 화소 샘플 수를 포장 나타낸다. 픽셀은 데이터 요소에 걸쳐있을 수 없습니다. 데이터 유형은 DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT 또는 DataBuffer.TYPE_INT 일 수 있습니다. 각 픽셀은 비트 수 2의 거듭 제곱이어야하며 픽셀 수 2의 거듭 제곱은 하나의 데이터 요소에 정확히 맞아야합니다. 픽셀 비트 보폭은 픽셀 당 비트 수와 같습니다. 스캔 라인 보폭은 데이터 요소에 있으며 마지막 여러 데이터 요소는 사용되지 않은 픽셀로 채워질 수 있습니다. 데이터 비트 오프셋은 &lt;a href=&quot;databuffer&quot;&gt; &lt;code&gt;DataBuffer&lt;/code&gt; &lt;/a&gt; 의 시작 에서 첫 번째 픽셀 까지의 비트 단위 오프셋 이며 픽셀 비트 스트라이드의 배수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="48b5e8ca00e67ac4765345cf8cb60a38e463c497" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MultiResolutionImage&lt;/code&gt; interface should be implemented by any subclass of &lt;code&gt;java.awt.Image&lt;/code&gt; whose instances are intended to provide image resolution variants according to the given image width and height. For convenience, toolkit images obtained from &lt;code&gt;Toolkit.getImage(String name)&lt;/code&gt; and &lt;code&gt;Toolkit.getImage(URL url)&lt;/code&gt; will implement this interface on platforms that support naming conventions for resolution variants of stored image media and the &lt;code&gt;AbstractMultiResolutionImage&lt;/code&gt; and &lt;code&gt;BaseMultiResolutionImage&lt;/code&gt; classes are provided to facilitate easy construction of custom multi-resolution images from a list of related images.</source>
          <target state="translated">&lt;code&gt;MultiResolutionImage&lt;/code&gt; 의 인터페이스 중 어느 서브 클래스가 구현되어야 &lt;code&gt;java.awt.Image&lt;/code&gt; 의 인스턴스를 가지는 이미지 해상도를 제공하기위한 소정의 화상의 폭과 높이에 따라 변형. 편의를 위해 &lt;code&gt;Toolkit.getImage(String name)&lt;/code&gt; 및 &lt;code&gt;Toolkit.getImage(URL url)&lt;/code&gt; 에서 얻은 툴킷 이미지 는 저장된 이미지 미디어의 해상도 변형에 대한 명명 규칙을 지원하는 플랫폼에서이 인터페이스를 구현하며, &lt;code&gt;AbstractMultiResolutionImage&lt;/code&gt; 및 &lt;code&gt;BaseMultiResolutionImage&lt;/code&gt; 클래스는 쉽게 사용할 수 있도록 제공됩니다. 관련 이미지 목록에서 사용자 지정 다중 해상도 이미지 구성.</target>
        </trans-unit>
        <trans-unit id="91f095d99b6510976c34e8d18d1a314c4fbc5507" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MultipleDocumentHandlingType&lt;/code&gt; instance to use for specifying that the job should be divided into separate, collated copies.</source>
          <target state="translated">&lt;code&gt;MultipleDocumentHandlingType&lt;/code&gt; 인스턴스는 작업이 별도의 부씩 복사로 나눌 수 지정하기 위해서 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3fb976389c7192bf00db15408f20e07ee4b0f8f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MultipleDocumentHandlingType&lt;/code&gt; instance to use for specifying that the job should be divided into separate, uncollated copies.</source>
          <target state="translated">The &lt;code&gt;MultipleDocumentHandlingType&lt;/code&gt; instance to use for specifying that the job should be divided into separate, uncollated copies.</target>
        </trans-unit>
        <trans-unit id="9b6e1370eae5cba21c51b71f67e35eac7aa4cee4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MultipleMaster&lt;/code&gt; interface represents Type 1 Multiple Master fonts.</source>
          <target state="translated">The &lt;code&gt;MultipleMaster&lt;/code&gt; interface represents Type 1 Multiple Master fonts.</target>
        </trans-unit>
        <trans-unit id="6d994d997ce673ebe643101f39b0acec5af2dd85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MultipleMaster&lt;/code&gt; interface represents Type 1 Multiple Master fonts. A particular &lt;a href=&quot;../font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt; object can implement this interface.</source>
          <target state="translated">The &lt;code&gt;MultipleMaster&lt;/code&gt; interface represents Type 1 Multiple Master fonts. A particular &lt;a href=&quot;../font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; &lt;/a&gt; object can implement this interface.</target>
        </trans-unit>
        <trans-unit id="de5f6eded86ee9d71d197fd648730d9fa992e076" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MutationEvent&lt;/code&gt; interface provides specific contextual information associated with Mutation events.</source>
          <target state="translated">The &lt;code&gt;MutationEvent&lt;/code&gt; interface provides specific contextual information associated with Mutation events.</target>
        </trans-unit>
        <trans-unit id="0480993326bc778542fae22556b604694f999249" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NClob&lt;/code&gt; interface extends the &lt;code&gt;Clob&lt;/code&gt; interface which provides methods for getting the length of an SQL &lt;code&gt;NCLOB&lt;/code&gt; value, for materializing a &lt;code&gt;NCLOB&lt;/code&gt; value on the client, and for searching for a substring or &lt;code&gt;NCLOB&lt;/code&gt; object within a &lt;code&gt;NCLOB&lt;/code&gt; value. A &lt;code&gt;NClob&lt;/code&gt; object, just like a &lt;code&gt;Clob&lt;/code&gt; object, is valid for the duration of the transaction in which it was created. Methods in the interfaces &lt;a href=&quot;resultset&quot;&gt;&lt;code&gt;ResultSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;callablestatement&quot;&gt;&lt;code&gt;CallableStatement&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;preparedstatement&quot;&gt;&lt;code&gt;PreparedStatement&lt;/code&gt;&lt;/a&gt;, such as &lt;code&gt;getNClob&lt;/code&gt; and &lt;code&gt;setNClob&lt;/code&gt; allow a programmer to access an SQL &lt;code&gt;NCLOB&lt;/code&gt; value. In addition, this interface has methods for updating a &lt;code&gt;NCLOB&lt;/code&gt; value.</source>
          <target state="translated">The &lt;code&gt;NClob&lt;/code&gt; interface extends the &lt;code&gt;Clob&lt;/code&gt; interface which provides methods for getting the length of an SQL &lt;code&gt;NCLOB&lt;/code&gt; value, for materializing a &lt;code&gt;NCLOB&lt;/code&gt; value on the client, and for searching for a substring or &lt;code&gt;NCLOB&lt;/code&gt; object within a &lt;code&gt;NCLOB&lt;/code&gt; value. A &lt;code&gt;NClob&lt;/code&gt; object, just like a &lt;code&gt;Clob&lt;/code&gt; object, is valid for the duration of the transaction in which it was created. Methods in the interfaces &lt;a href=&quot;resultset&quot;&gt; &lt;code&gt;ResultSet&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;callablestatement&quot;&gt; &lt;code&gt;CallableStatement&lt;/code&gt; &lt;/a&gt;, and &lt;a href=&quot;preparedstatement&quot;&gt; &lt;code&gt;PreparedStatement&lt;/code&gt; &lt;/a&gt;, such as &lt;code&gt;getNClob&lt;/code&gt; and &lt;code&gt;setNClob&lt;/code&gt; allow a programmer to access an SQL &lt;code&gt;NCLOB&lt;/code&gt; value. In addition, this interface has methods for updating a &lt;code&gt;NCLOB&lt;/code&gt; value.</target>
        </trans-unit>
        <trans-unit id="788c03b8eac033377287b7f6bcedc89c000e71cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Name&lt;/code&gt; describes a hierarchical name composed of attributes, such as country name, and corresponding values, such as US. The type of the &lt;code&gt;AttributeValue&lt;/code&gt; component is determined by the &lt;code&gt;AttributeType&lt;/code&gt;; in general it will be a &lt;code&gt;directoryString&lt;/code&gt;. A &lt;code&gt;directoryString&lt;/code&gt; is usually one of &lt;code&gt;PrintableString&lt;/code&gt;, &lt;code&gt;TeletexString&lt;/code&gt; or &lt;code&gt;UniversalString&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 같은 미국과 같은 나라 이름과 속성 및 해당 값으로 구성된 계층 이름을 설명합니다. 의 형식 &lt;code&gt;AttributeValue&lt;/code&gt; 성분에 의해 결정된다 &lt;code&gt;AttributeType&lt;/code&gt; 에 ; 일반적으로 &lt;code&gt;directoryString&lt;/code&gt; 이 됩니다. &lt;code&gt;directoryString&lt;/code&gt; 입니다은 보통 중 하나입니다 &lt;code&gt;PrintableString&lt;/code&gt; , &lt;code&gt;TeletexString&lt;/code&gt; 또는 &lt;code&gt;UniversalString&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5c1c5d6176d58d28e9f865eee359984e02049b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Name&lt;/code&gt; interface represents a generic name -- an ordered sequence of components.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 구성 요소의 정렬 순서 - 인터페이스는 일반적인 이름을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="99d457ffbc6e55d6f5c1d1e7729fba20a1b311b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Name&lt;/code&gt; interface represents a generic name -- an ordered sequence of components. It can be a composite name (names that span multiple namespaces), or a compound name (names that are used within individual hierarchical naming systems).</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 구성 요소의 정렬 순서 - 인터페이스는 일반적인 이름을 나타냅니다. 복합 이름 (여러 네임 스페이스에 걸쳐있는 이름) 또는 복합 이름 (개별 계층 이름 지정 시스템 내에서 사용되는 이름) 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="305015d8407a5fa406fab5e1b3d6d830add7a693" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NameList&lt;/code&gt; interface provides the abstraction of an ordered collection of parallel pairs of name and namespace values (which could be null values), without defining or constraining how this collection is implemented.</source>
          <target state="translated">The &lt;code&gt;NameList&lt;/code&gt; interface provides the abstraction of an ordered collection of parallel pairs of name and namespace values (which could be null values), without defining or constraining how this collection is implemented.</target>
        </trans-unit>
        <trans-unit id="7454486b923bccb0760d5b56990b0bc5f47c72ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NameList&lt;/code&gt; interface provides the abstraction of an ordered collection of parallel pairs of name and namespace values (which could be null values), without defining or constraining how this collection is implemented. The items in the &lt;code&gt;NameList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">The &lt;code&gt;NameList&lt;/code&gt; interface provides the abstraction of an ordered collection of parallel pairs of name and namespace values (which could be null values), without defining or constraining how this collection is implemented. The items in the &lt;code&gt;NameList&lt;/code&gt; are accessible via an integral index, starting from 0.</target>
        </trans-unit>
        <trans-unit id="cbfe1e053acf3330335dc5b7d73c7cc97d1d6123" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Naming&lt;/code&gt; class provides methods for storing and obtaining references to remote objects in a remote object registry.</source>
          <target state="translated">The &lt;code&gt;Naming&lt;/code&gt; class provides methods for storing and obtaining references to remote objects in a remote object registry.</target>
        </trans-unit>
        <trans-unit id="789eb0afc298960a48962d09cc4750cf72e0303a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Naming&lt;/code&gt; class provides methods for storing and obtaining references to remote objects in a remote object registry. Each method of the &lt;code&gt;Naming&lt;/code&gt; class takes as one of its arguments a name that is a &lt;code&gt;java.lang.String&lt;/code&gt; in URL format (without the scheme component) of the form:</source>
          <target state="translated">The &lt;code&gt;Naming&lt;/code&gt; class provides methods for storing and obtaining references to remote objects in a remote object registry. Each method of the &lt;code&gt;Naming&lt;/code&gt; class takes as one of its arguments a name that is a &lt;code&gt;java.lang.String&lt;/code&gt; in URL format (without the scheme component) of the form:</target>
        </trans-unit>
        <trans-unit id="7b6edeb494d6ac7e0b5caa00f1aa813d7ae827c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NamingEvent&lt;/code&gt;'s state consists of</source>
          <target state="translated">&lt;code&gt;NamingEvent&lt;/code&gt; 에 의 상태는 다음과 같이 구성</target>
        </trans-unit>
        <trans-unit id="c86cac2e51c5a47693977a50e2b8c6b5729d2050" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NetworkInterface&lt;/code&gt; this interface is attached to.</source>
          <target state="translated">&lt;code&gt;NetworkInterface&lt;/code&gt; 이 인터페이스에 부착된다.</target>
        </trans-unit>
        <trans-unit id="ec1a7f6d32baca20da17c927709e8d24c0aa30ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Node&lt;/code&gt; interface is the primary datatype for the entire Document Object Model.</source>
          <target state="translated">The &lt;code&gt;Node&lt;/code&gt; interface is the primary datatype for the entire Document Object Model.</target>
        </trans-unit>
        <trans-unit id="897563f996b4fd9e2640f2f9bbc27d935dea63b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Node&lt;/code&gt; interface is the primary datatype for the entire Document Object Model. It represents a single node in the document tree. While all objects implementing the &lt;code&gt;Node&lt;/code&gt; interface expose methods for dealing with children, not all objects implementing the &lt;code&gt;Node&lt;/code&gt; interface may have children. For example, &lt;code&gt;Text&lt;/code&gt; nodes may not have children, and adding children to such nodes results in a &lt;code&gt;DOMException&lt;/code&gt; being raised.</source>
          <target state="translated">The &lt;code&gt;Node&lt;/code&gt; interface is the primary datatype for the entire Document Object Model. It represents a single node in the document tree. While all objects implementing the &lt;code&gt;Node&lt;/code&gt; interface expose methods for dealing with children, not all objects implementing the &lt;code&gt;Node&lt;/code&gt; interface may have children. For example, &lt;code&gt;Text&lt;/code&gt; nodes may not have children, and adding children to such nodes results in a &lt;code&gt;DOMException&lt;/code&gt; being raised.</target>
        </trans-unit>
        <trans-unit id="c4f24312524d645707d6367d6e45b401e6f4d5c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Node&lt;/code&gt; that led to the parsing error, or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 파싱 오류, 또는 주도한다는 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d514acdf85277f67f4eec8dd90a565c433b8653d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NodeFilter&lt;/code&gt; used to screen nodes.</source>
          <target state="translated">The &lt;code&gt;NodeFilter&lt;/code&gt; used to screen nodes.</target>
        </trans-unit>
        <trans-unit id="83084c208299fa879aacdf9ab332c5751f1d57bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NodeList&lt;/code&gt; interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented.</source>
          <target state="translated">The &lt;code&gt;NodeList&lt;/code&gt; interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented.</target>
        </trans-unit>
        <trans-unit id="98e77cd2d040a57b84c12a03ebf2efec6b739714" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NodeList&lt;/code&gt; interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. &lt;code&gt;NodeList&lt;/code&gt; objects in the DOM are live.</source>
          <target state="translated">The &lt;code&gt;NodeList&lt;/code&gt; interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. &lt;code&gt;NodeList&lt;/code&gt; objects in the DOM are live.</target>
        </trans-unit>
        <trans-unit id="6e8cd1aac5ffc5b5216ef057ef34b1b290375af7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NoninvertibleTransformException&lt;/code&gt; class represents an exception that is thrown if an operation is performed requiring the inverse of an &lt;a href=&quot;affinetransform&quot;&gt;&lt;code&gt;AffineTransform&lt;/code&gt;&lt;/a&gt; object but the &lt;code&gt;AffineTransform&lt;/code&gt; is in a non-invertible state.</source>
          <target state="translated">The &lt;code&gt;NoninvertibleTransformException&lt;/code&gt; class represents an exception that is thrown if an operation is performed requiring the inverse of an &lt;a href=&quot;affinetransform&quot;&gt; &lt;code&gt;AffineTransform&lt;/code&gt; &lt;/a&gt; object but the &lt;code&gt;AffineTransform&lt;/code&gt; is in a non-invertible state.</target>
        </trans-unit>
        <trans-unit id="2b3873d2cdde65ea86bffbc4fce3ee8af89880c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NotificationListeners&lt;/code&gt; are identified by the IDs which were returned by the &lt;a href=&quot;#addNotificationListeners(javax.management.ObjectName%5B%5D,java.rmi.MarshalledObject%5B%5D,javax.security.auth.Subject%5B%5D)&quot;&gt;&lt;code&gt;addNotificationListeners(ObjectName[], MarshalledObject[],
 Subject[])&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">The &lt;code&gt;NotificationListeners&lt;/code&gt; are identified by the IDs which were returned by the &lt;a href=&quot;#addNotificationListeners(javax.management.ObjectName%5B%5D,java.rmi.MarshalledObject%5B%5D,javax.security.auth.Subject%5B%5D)&quot;&gt; &lt;code&gt;addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="1400dea5eb2e0f1d272329a6fddf1dde956ad2ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NotificationListeners&lt;/code&gt; are identified by the IDs which were returned by the &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt;&lt;code&gt;RMIConnection.addNotificationListeners(ObjectName[], MarshalledObject[],
 Subject[])&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;NotificationListeners&lt;/code&gt; 에 의해 반환 된 ID에 의해 식별된다 &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt; &lt;code&gt;RMIConnection.addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="e9f0f1aa295652b71a3e12c32b29eaa12cfad79e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NotificationListeners&lt;/code&gt; are identified by the IDs which were returned by the &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt;&lt;code&gt;addNotificationListeners(ObjectName[], MarshalledObject[],
 Subject[])&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;NotificationListeners&lt;/code&gt; 에 의해 반환 된 ID에 의해 식별된다 &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt; &lt;code&gt;addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="ccce0d9a8a12b3a7a535b35383d383994618eac6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number&lt;/code&gt; return type attempts to coalesce the text of a node to a &lt;code&gt;double&lt;/code&gt; data type.</source>
          <target state="translated">The &lt;code&gt;Number&lt;/code&gt; return type attempts to coalesce the text of a node to a &lt;code&gt;double&lt;/code&gt; data type.</target>
        </trans-unit>
        <trans-unit id="bc96d682dd5c52413c4fbf9e0e9e89a288bc4573" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NumericShaper&lt;/code&gt; class is used to convert Latin-1 (European) digits to other Unicode decimal digits.</source>
          <target state="translated">The &lt;code&gt;NumericShaper&lt;/code&gt; class is used to convert Latin-1 (European) digits to other Unicode decimal digits.</target>
        </trans-unit>
        <trans-unit id="b8d28052c532e291b766359b9a53299f626fbbd7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NumericShaper&lt;/code&gt; class is used to convert Latin-1 (European) digits to other Unicode decimal digits. Users of this class will primarily be people who wish to present data using national digit shapes, but find it more convenient to represent the data internally using Latin-1 (European) digits. This does not interpret the deprecated numeric shape selector character (U+206E).</source>
          <target state="translated">The &lt;code&gt;NumericShaper&lt;/code&gt; class is used to convert Latin-1 (European) digits to other Unicode decimal digits. Users of this class will primarily be people who wish to present data using national digit shapes, but find it more convenient to represent the data internally using Latin-1 (European) digits. This does not interpret the deprecated numeric shape selector character (U+206E).</target>
        </trans-unit>
        <trans-unit id="2c9376e7cc0383d27533cd38986f773a0a05e444" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; field will return a date-time with the specified offset. The local date-time is unaltered. If the new offset value is outside the valid range then a &lt;code&gt;DateTimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">&lt;code&gt;OFFSET_SECONDS&lt;/code&gt; 의 필드는 지정된 오프셋과 날짜 - 시간을 반환합니다. 현지 날짜-시간은 변경되지 않습니다. 새 오프셋 값이 유효한 범위를 벗어나면 &lt;code&gt;DateTimeException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1918dcc7fcc29b6bc425b2c6f7a8a0dcc372038d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; field will return a time with the specified offset. The local time is unaltered. If the new offset value is outside the valid range then a &lt;code&gt;DateTimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">&lt;code&gt;OFFSET_SECONDS&lt;/code&gt; 의 필드는 지정된 오프셋으로 시간을 반환합니다. 현지 시간은 변경되지 않습니다. 새 오프셋 값이 유효한 범위를 벗어나면 &lt;code&gt;DateTimeException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5b99274c982da4f70821c4ca9b3b72ad4b9daf7a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; field will typically be ignored. The offset of a &lt;code&gt;ZonedDateTime&lt;/code&gt; is controlled primarily by the time-zone. As such, changing the offset does not generally make sense, because there is only one valid offset for the local date-time and zone. If the zoned date-time is in a daylight savings overlap, then the offset is used to switch between the two valid offsets. In all other cases, the offset is ignored. If the new offset value is outside the valid range then a &lt;code&gt;DateTimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">&lt;code&gt;OFFSET_SECONDS&lt;/code&gt; 의 필드는 일반적으로 무시됩니다. &lt;code&gt;ZonedDateTime&lt;/code&gt; 의 오프셋은 주로 시간대에 의해 제어됩니다. 따라서 로컬 날짜-시간 및 영역에 대해 유효한 오프셋이 하나만 있기 때문에 오프셋을 변경하는 것은 일반적으로 의미가 없습니다. 존 날짜-시간이 일광 절약 시간제에 겹치는 경우 오프셋은 두 유효한 오프셋 사이를 전환하는 데 사용됩니다. 다른 모든 경우에는 오프셋이 무시됩니다. 새 오프셋 값이 유효한 범위를 벗어나면 &lt;code&gt;DateTimeException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dcf77ee080e78ac2d4bb93c007b8230ccb51fe01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object&lt;/code&gt; associated with a node that accepts enumerated values must be equal to one of the values returned by this method, as defined by the &lt;code&gt;==&lt;/code&gt; operator (as opposed to the &lt;code&gt;Object.equals&lt;/code&gt; method).</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 에 의해 정의 된 열거 된 값은이 방법에 의해 리턴 된 값 중 하나와 동일해야받는 노드와 연관된 &lt;code&gt;==&lt;/code&gt; 의 합니다 (반대로 작업자 &lt;code&gt;Object.equals&lt;/code&gt; 법).</target>
        </trans-unit>
        <trans-unit id="fea5e3bfa1c2ff38c60f4081955464c2179176f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object&lt;/code&gt; is converted to a string using its &lt;code&gt;toString&lt;/code&gt; method and the result is used to label a &lt;code&gt;JButton&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;Object&lt;/code&gt; is converted to a string using its &lt;code&gt;toString&lt;/code&gt; method and the result is used to label a &lt;code&gt;JButton&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed616c574e37d462ce3dc1a59d27e3a04084fb6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object&lt;/code&gt; that encapsulates the result of evaluating the expression.</source>
          <target state="translated">The &lt;code&gt;Object&lt;/code&gt; that encapsulates the result of evaluating the expression.</target>
        </trans-unit>
        <trans-unit id="423a928bc882303e9119de621878e89bd3ee2d1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object&lt;/code&gt; that is the result of evaluating the expression and converting the result to &lt;code&gt;returnType&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;Object&lt;/code&gt; that is the result of evaluating the expression and converting the result to &lt;code&gt;returnType&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0324a1f9879d4eda586224698a2a40120a519c02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectInstance&lt;/code&gt; associated with the MBean specified by &lt;var&gt;name&lt;/var&gt;. The contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;name&lt;/code&gt; and the contained class name is &lt;code&gt;&lt;a href=&quot;#getMBeanInfo(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;ObjectInstance&lt;/code&gt; associated with the MBean specified by &lt;var&gt;name&lt;/var&gt; . The contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;name&lt;/code&gt; and the contained class name is &lt;code&gt;&lt;a href=&quot;#getMBeanInfo(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b603e08da03f55ce9f9208ff360071d61f560e92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectInstance&lt;/code&gt; associated with the MBean specified by &lt;var&gt;name&lt;/var&gt;. The contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;name&lt;/code&gt; and the contained class name is &lt;code&gt;&lt;a href=&quot;#getMBeanInfo(javax.management.ObjectName,javax.security.auth.Subject)&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;ObjectInstance&lt;/code&gt; associated with the MBean specified by &lt;var&gt;name&lt;/var&gt; . The contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;name&lt;/code&gt; and the contained class name is &lt;code&gt;&lt;a href=&quot;#getMBeanInfo(javax.management.ObjectName,javax.security.auth.Subject)&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1119954570aff30608ab91b67db57a1edb87ff0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectInstance&lt;/code&gt; associated with the MBean specified by &lt;var&gt;name&lt;/var&gt;. The contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;name&lt;/code&gt; and the contained class name is &lt;code&gt;&lt;a href=&quot;mbeanserverconnection#getMBeanInfo-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ObjectInstance&lt;/code&gt; MBean에 관련된 의해 지정된 &lt;var&gt;name&lt;/var&gt; . 포함 된 &lt;code&gt;ObjectName&lt;/code&gt; 은 &lt;code&gt;name&lt;/code&gt; 이고 포함 된 클래스 이름은 &lt;code&gt;&lt;a href=&quot;mbeanserverconnection#getMBeanInfo-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b503bdd5bfbf40758607910f1e62bc31dd68e802" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectInstance&lt;/code&gt; associated with the MBean specified by &lt;var&gt;name&lt;/var&gt;. The contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;name&lt;/code&gt; and the contained class name is &lt;code&gt;&lt;a href=&quot;rmiconnection#getMBeanInfo-javax.management.ObjectName-javax.security.auth.Subject-&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ObjectInstance&lt;/code&gt; MBean에 관련된 의해 지정된 &lt;var&gt;name&lt;/var&gt; . 포함 된 &lt;code&gt;ObjectName&lt;/code&gt; 은 &lt;code&gt;name&lt;/code&gt; 이고 포함 된 클래스 이름은 &lt;code&gt;&lt;a href=&quot;rmiconnection#getMBeanInfo-javax.management.ObjectName-javax.security.auth.Subject-&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c4bb59ef2d57c5a36b82e56b3ef8695a22a0311d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for a garbage collector within an MBeanServer is:</source>
          <target state="translated">&lt;code&gt;ObjectName&lt;/code&gt; MBeanServer 내 가비지 컬렉터의 MXBean를 식별은 :</target>
        </trans-unit>
        <trans-unit id="0b9021e57442d401347cae33e09b53197bbb0b25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for a memory manager within an MBeanServer is:</source>
          <target state="translated">&lt;code&gt;ObjectName&lt;/code&gt; MBeanServer 내 메모리 관리자의 MXBean를 식별은 :</target>
        </trans-unit>
        <trans-unit id="bb1a05072aa2847772982c43cf0d890c7cae913a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for a memory pool within an &lt;code&gt;MBeanServer&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;ObjectName&lt;/code&gt; 는 고유 내에서 메모리 풀의 MXBean를 식별 &lt;code&gt;MBeanServer&lt;/code&gt; 있습니다 :</target>
        </trans-unit>
        <trans-unit id="db98f30b0477805218b1ae4bdb074256518e5803" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for the class loading system within an &lt;code&gt;MBeanServer&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;ObjectName&lt;/code&gt; 는 고유 내에서 클래스 로딩 시스템의 MXBean를 식별 &lt;code&gt;MBeanServer&lt;/code&gt; 있습니다 :</target>
        </trans-unit>
        <trans-unit id="55e8342fd743f84bda60cd36babb3e068a2e6ec7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for the compilation system within an MBeanServer is:</source>
          <target state="translated">&lt;code&gt;ObjectName&lt;/code&gt; MBeanServer 내 컴파일 시스템의 MXBean를 식별은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="70515004bb956a637a0eaf59af0413164c30fb86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for the memory system within an MBeanServer is:</source>
          <target state="translated">&lt;code&gt;ObjectName&lt;/code&gt; MBeanServer 내 메모리 시스템의 MXBean를 식별은 :</target>
        </trans-unit>
        <trans-unit id="c1f16184d09f51af30331c1389e9013ddc4a17df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for the operating system within an MBeanServer is:</source>
          <target state="translated">&lt;code&gt;ObjectName&lt;/code&gt; MBeanServer 내 운영 체제의 MXBean를 식별은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="07da8e2d7411da3d53f255c201b631c0ac856d81" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for the runtime system within an MBeanServer is:</source>
          <target state="translated">&lt;code&gt;ObjectName&lt;/code&gt; MBeanServer 내 런타임 시스템의 MXBean를 식별은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="e9552b5b6f9a739364bfe6b9bdedc853e8972846" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for the thread system within an MBeanServer is:</source>
          <target state="translated">&lt;code&gt;ObjectName&lt;/code&gt; MBeanServer 내에서 thread 시스템의 MXBean를 식별은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="9dcfa6a1fe8b9264f0661c006080ec7572ae4b83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; class describes the management information of an</source>
          <target state="translated">&lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; 의 클래스는의 관리 정보를 기술</target>
        </trans-unit>
        <trans-unit id="b203a779783192d8423055b7a1a9da6d91af0f3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OpenType&lt;/code&gt; class is the parent abstract class of all classes which describe the actual</source>
          <target state="translated">&lt;code&gt;OpenType&lt;/code&gt; 클래스는 실제를 설명하는 모든 클래스의 부모 추상 클래스입니다</target>
        </trans-unit>
        <trans-unit id="586067081baeca1b7bed47bc53574acbdf981084" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OpenType&lt;/code&gt; interface represents OpenType and TrueType fonts.</source>
          <target state="translated">The &lt;code&gt;OpenType&lt;/code&gt; interface represents OpenType and TrueType fonts.</target>
        </trans-unit>
        <trans-unit id="69a6dcd99d9214cc61611d6ad8120d0f1f893a75" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OpenType&lt;/code&gt; interface represents OpenType and TrueType fonts. This interface makes it possible to obtain</source>
          <target state="translated">The &lt;code&gt;OpenType&lt;/code&gt; interface represents OpenType and TrueType fonts. This interface makes it possible to obtain</target>
        </trans-unit>
        <trans-unit id="0d757ff4a6ac675a5b4871ec062085d8cdb8da98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PKIXReason&lt;/code&gt; enumerates the potential PKIX-specific reasons that an X.509 certification path may be invalid according to the PKIX (RFC 3280) standard.</source>
          <target state="translated">&lt;code&gt;PKIXReason&lt;/code&gt; 는 X.509 인증 경로가 PKIX (RFC 3280) 표준에 따라 유효하지 않을 수 있다는 가능성 PKIX 특정 이유를 열거합니다.</target>
        </trans-unit>
        <trans-unit id="42733b5171c383bf12f9d4a04e020e12857e5e60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PKIXReason&lt;/code&gt; enumerates the potential PKIX-specific reasons that an X.509 certification path may be invalid according to the PKIX (RFC 3280) standard. These reasons are in addition to those of the &lt;code&gt;CertPathValidatorException.BasicReason&lt;/code&gt; enumeration.</source>
          <target state="translated">&lt;code&gt;PKIXReason&lt;/code&gt; 는 X.509 인증 경로가 PKIX (RFC 3280) 표준에 따라 유효하지 않을 수 있다는 가능성 PKIX 특정 이유를 열거합니다. 이러한 이유는 &lt;code&gt;CertPathValidatorException.BasicReason&lt;/code&gt; 열거 의 이유에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="f124acf83d481115e57686fb8856022de3bb5ad5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PKIXReason&lt;/code&gt; enumerates the potential PKIX-specific reasons that an X.509 certification path may be invalid according to the PKIX (RFC 5280) standard.</source>
          <target state="translated">The &lt;code&gt;PKIXReason&lt;/code&gt; enumerates the potential PKIX-specific reasons that an X.509 certification path may be invalid according to the PKIX (RFC 5280) standard.</target>
        </trans-unit>
        <trans-unit id="b371276a9e0ecfdae4ef1d34db216930ee628001" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PKIXReason&lt;/code&gt; enumerates the potential PKIX-specific reasons that an X.509 certification path may be invalid according to the PKIX (RFC 5280) standard. These reasons are in addition to those of the &lt;code&gt;CertPathValidatorException.BasicReason&lt;/code&gt; enumeration.</source>
          <target state="translated">The &lt;code&gt;PKIXReason&lt;/code&gt; enumerates the potential PKIX-specific reasons that an X.509 certification path may be invalid according to the PKIX (RFC 5280) standard. These reasons are in addition to those of the &lt;code&gt;CertPathValidatorException.BasicReason&lt;/code&gt; enumeration.</target>
        </trans-unit>
        <trans-unit id="b88e3cb7dd76f092b2f7b4a5b2cc4c9436fd4cea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Package&lt;/code&gt; corresponding to the given name, or &lt;code&gt;null&lt;/code&gt; if not found</source>
          <target state="translated">&lt;code&gt;Package&lt;/code&gt; 지정된 이름, 또는에 해당하는 &lt;code&gt;null&lt;/code&gt; 이 발견되지 않는 경우는</target>
        </trans-unit>
        <trans-unit id="8cea7f9c2881d4122c6fe3725e32d9d4186f7d6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Package&lt;/code&gt; of the given name defined by the caller's class loader or its ancestors, or &lt;code&gt;null&lt;/code&gt; if not found.</source>
          <target state="translated">The &lt;code&gt;Package&lt;/code&gt; of the given name defined by the caller's class loader or its ancestors, or &lt;code&gt;null&lt;/code&gt; if not found.</target>
        </trans-unit>
        <trans-unit id="5fd1cc3ac16334cb12b0c4423d000ccc75f52c4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Package&lt;/code&gt; of the given name that has been defined by this class loader or its ancestors, or &lt;code&gt;null&lt;/code&gt; if not found.</source>
          <target state="translated">The &lt;code&gt;Package&lt;/code&gt; of the given name that has been defined by this class loader or its ancestors, or &lt;code&gt;null&lt;/code&gt; if not found.</target>
        </trans-unit>
        <trans-unit id="fd5390441ce6ec14e6a3933f1af826ecd94b5b2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Package&lt;/code&gt; of the given name that has been defined by this class loader, or &lt;code&gt;null&lt;/code&gt; if not found</source>
          <target state="translated">The &lt;code&gt;Package&lt;/code&gt; of the given name that has been defined by this class loader, or &lt;code&gt;null&lt;/code&gt; if not found</target>
        </trans-unit>
        <trans-unit id="ab4f5e9594dd010a91bd8b2874b0a810ea17e89a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PackedColorModel&lt;/code&gt; class is an abstract &lt;a href=&quot;colormodel&quot;&gt;&lt;code&gt;ColorModel&lt;/code&gt;&lt;/a&gt; class that works with pixel values which represent color and alpha information as separate samples and which pack all samples for a single pixel into a single int, short, or byte quantity.</source>
          <target state="translated">The &lt;code&gt;PackedColorModel&lt;/code&gt; class is an abstract &lt;a href=&quot;colormodel&quot;&gt; &lt;code&gt;ColorModel&lt;/code&gt; &lt;/a&gt; class that works with pixel values which represent color and alpha information as separate samples and which pack all samples for a single pixel into a single int, short, or byte quantity.</target>
        </trans-unit>
        <trans-unit id="4bb1a00bbfc9f1dea7433acd9bcaca03b5f9b242" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PackedColorModel&lt;/code&gt; class is an abstract &lt;a href=&quot;colormodel&quot;&gt;&lt;code&gt;ColorModel&lt;/code&gt;&lt;/a&gt; class that works with pixel values which represent color and alpha information as separate samples and which pack all samples for a single pixel into a single int, short, or byte quantity. This class can be used with an arbitrary &lt;a href=&quot;../color/colorspace&quot;&gt;&lt;code&gt;ColorSpace&lt;/code&gt;&lt;/a&gt;. The number of color samples in the pixel values must be the same as the number of color components in the &lt;code&gt;ColorSpace&lt;/code&gt;. There can be a single alpha sample. The array length is always 1 for those methods that use a primitive array pixel representation of type &lt;code&gt;transferType&lt;/code&gt;. The transfer types supported are DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, and DataBuffer.TYPE_INT. Color and alpha samples are stored in the single element of the array in bits indicated by bit masks. Each bit mask must be contiguous and masks must not overlap. The same masks apply to the single int pixel representation used by other methods. The correspondence of masks and color/alpha samples is as follows:</source>
          <target state="translated">The &lt;code&gt;PackedColorModel&lt;/code&gt; class is an abstract &lt;a href=&quot;colormodel&quot;&gt; &lt;code&gt;ColorModel&lt;/code&gt; &lt;/a&gt; class that works with pixel values which represent color and alpha information as separate samples and which pack all samples for a single pixel into a single int, short, or byte quantity. This class can be used with an arbitrary &lt;a href=&quot;../color/colorspace&quot;&gt; &lt;code&gt;ColorSpace&lt;/code&gt; &lt;/a&gt;. The number of color samples in the pixel values must be the same as the number of color components in the &lt;code&gt;ColorSpace&lt;/code&gt; . There can be a single alpha sample. The array length is always 1 for those methods that use a primitive array pixel representation of type &lt;code&gt;transferType&lt;/code&gt; . The transfer types supported are DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, and DataBuffer.TYPE_INT. Color and alpha samples are stored in the single element of the array in bits indicated by bit masks. Each bit mask must be contiguous and masks must not overlap. The same masks apply to the single int pixel representation used by other methods. The correspondence of masks and color/alpha samples is as follows:</target>
        </trans-unit>
        <trans-unit id="f4da8a295ef7ca55a2a21f98350ad99faeb3408c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PageFormat&lt;/code&gt; class describes the size and orientation of a page to be printed.</source>
          <target state="translated">The &lt;code&gt;PageFormat&lt;/code&gt; class describes the size and orientation of a page to be printed.</target>
        </trans-unit>
        <trans-unit id="3fc0c1151979adab271a2d4c8566c09fd4940b98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Pageable&lt;/code&gt; implementation represents a set of pages to be printed.</source>
          <target state="translated">The &lt;code&gt;Pageable&lt;/code&gt; implementation represents a set of pages to be printed.</target>
        </trans-unit>
        <trans-unit id="798364ebe516c1f54256e5ef56a58c4cd49a63b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Pageable&lt;/code&gt; implementation represents a set of pages to be printed. The &lt;code&gt;Pageable&lt;/code&gt; object returns the total number of pages in the set as well as the &lt;a href=&quot;pageformat&quot;&gt;&lt;code&gt;PageFormat&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;printable&quot;&gt;&lt;code&gt;Printable&lt;/code&gt;&lt;/a&gt; for a specified page.</source>
          <target state="translated">The &lt;code&gt;Pageable&lt;/code&gt; implementation represents a set of pages to be printed. The &lt;code&gt;Pageable&lt;/code&gt; object returns the total number of pages in the set as well as the &lt;a href=&quot;pageformat&quot;&gt; &lt;code&gt;PageFormat&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;printable&quot;&gt; &lt;code&gt;Printable&lt;/code&gt; &lt;/a&gt; for a specified page.</target>
        </trans-unit>
        <trans-unit id="51cf376b48f9b133d54960ed20a5a73b0da03e28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PaintContext&lt;/code&gt; interface defines the encapsulated and optimized environment to generate color patterns in device space for fill or stroke operations on a &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;PaintContext&lt;/code&gt; interface defines the encapsulated and optimized environment to generate color patterns in device space for fill or stroke operations on a &lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6ff20bc3121fcd0d6a6a114604f6c04390ebf621" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PaintContext&lt;/code&gt; interface defines the encapsulated and optimized environment to generate color patterns in device space for fill or stroke operations on a &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;PaintContext&lt;/code&gt; provides the necessary colors for &lt;code&gt;Graphics2D&lt;/code&gt; operations in the form of a &lt;a href=&quot;image/raster&quot;&gt;&lt;code&gt;Raster&lt;/code&gt;&lt;/a&gt; associated with a &lt;a href=&quot;image/colormodel&quot;&gt;&lt;code&gt;ColorModel&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;PaintContext&lt;/code&gt; maintains state for a particular paint operation. In a multi-threaded environment, several contexts can exist simultaneously for a single &lt;a href=&quot;paint&quot;&gt;&lt;code&gt;Paint&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">The &lt;code&gt;PaintContext&lt;/code&gt; interface defines the encapsulated and optimized environment to generate color patterns in device space for fill or stroke operations on a &lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt;. The &lt;code&gt;PaintContext&lt;/code&gt; provides the necessary colors for &lt;code&gt;Graphics2D&lt;/code&gt; operations in the form of a &lt;a href=&quot;image/raster&quot;&gt; &lt;code&gt;Raster&lt;/code&gt; &lt;/a&gt; associated with a &lt;a href=&quot;image/colormodel&quot;&gt; &lt;code&gt;ColorModel&lt;/code&gt; &lt;/a&gt;. The &lt;code&gt;PaintContext&lt;/code&gt; maintains state for a particular paint operation. In a multi-threaded environment, several contexts can exist simultaneously for a single &lt;a href=&quot;paint&quot;&gt; &lt;code&gt;Paint&lt;/code&gt; &lt;/a&gt; object.</target>
        </trans-unit>
        <trans-unit id="6da600e11920a8b9946bd8cf3002f1b4c14a63cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Paper&lt;/code&gt; class describes the physical characteristics of a piece of paper.</source>
          <target state="translated">The &lt;code&gt;Paper&lt;/code&gt; class describes the physical characteristics of a piece of paper.</target>
        </trans-unit>
        <trans-unit id="8e9f00d5d237f36cec15e4bb73bc5ff0ff6caccd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Path2D&lt;/code&gt; class provides a simple, yet flexible shape which represents an arbitrary geometric path.</source>
          <target state="translated">The &lt;code&gt;Path2D&lt;/code&gt; class provides a simple, yet flexible shape which represents an arbitrary geometric path.</target>
        </trans-unit>
        <trans-unit id="7bb4be9fd3e9cc76024c763ef9710898d308c15f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Path2D&lt;/code&gt; class provides a simple, yet flexible shape which represents an arbitrary geometric path. It can fully represent any path which can be iterated by the &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; interface including all of its segment types and winding rules and it implements all of the basic hit testing methods of the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">The &lt;code&gt;Path2D&lt;/code&gt; class provides a simple, yet flexible shape which represents an arbitrary geometric path. It can fully represent any path which can be iterated by the &lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt; interface including all of its segment types and winding rules and it implements all of the basic hit testing methods of the &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; interface.</target>
        </trans-unit>
        <trans-unit id="918982e89f589b2e61abc622e3fc1c886b57d8c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Path&lt;/code&gt; is obtained by invoking the &lt;a href=&quot;filesystem#getPath(java.lang.String,java.lang.String...)&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;filesystems#getDefault()&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;Path&lt;/code&gt; is obtained by invoking the &lt;a href=&quot;filesystem#getPath(java.lang.String,java.lang.String...)&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt; method of the &lt;a href=&quot;filesystems#getDefault()&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="90672781ed476b480c2d01bbaf4b2e5adafc4b2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Path&lt;/code&gt; is obtained by invoking the &lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;filesystems#getDefault--&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Path&lt;/code&gt; 호출에 의해 얻어진다 &lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; 의&lt;/a&gt; 의 방법 &lt;a href=&quot;filesystems#getDefault--&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c6a2d68919a75d0efae8c0507ff2d08e73f33e85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PathIterator&lt;/code&gt; interface provides the mechanism for objects that implement the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; interface to return the geometry of their boundary by allowing a caller to retrieve the path of that boundary a segment at a time.</source>
          <target state="translated">The &lt;code&gt;PathIterator&lt;/code&gt; interface provides the mechanism for objects that implement the &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; interface to return the geometry of their boundary by allowing a caller to retrieve the path of that boundary a segment at a time.</target>
        </trans-unit>
        <trans-unit id="c4cb1555c85d26e99433230af73509a9363c4989" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PathIterator&lt;/code&gt; interface provides the mechanism for objects that implement the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; interface to return the geometry of their boundary by allowing a caller to retrieve the path of that boundary a segment at a time. This interface allows these objects to retrieve the path of their boundary a segment at a time by using 1st through 3rd order B&amp;eacute;zier curves, which are lines and quadratic or cubic B&amp;eacute;zier splines.</source>
          <target state="translated">The &lt;code&gt;PathIterator&lt;/code&gt; interface provides the mechanism for objects that implement the &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; interface to return the geometry of their boundary by allowing a caller to retrieve the path of that boundary a segment at a time. This interface allows these objects to retrieve the path of their boundary a segment at a time by using 1st through 3rd order B&amp;eacute;zier curves, which are lines and quadratic or cubic B&amp;eacute;zier splines.</target>
        </trans-unit>
        <trans-unit id="5c79b8bbdbc6232b5734fc46d1a5e28d6bbf32c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Pattern&lt;/code&gt; engine performs traditional NFA-based matching with ordered alternation as occurs in Perl 5.</source>
          <target state="translated">&lt;code&gt;Pattern&lt;/code&gt; 펄 5 발생할 때 엔진은 명령 교대 전통적인 NFA 기반의 정합을 수행한다.</target>
        </trans-unit>
        <trans-unit id="92995c19fa227cf2ab96897ff5eedb351ff466d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Permission&lt;/code&gt; class for link creation operations.</source>
          <target state="translated">&lt;code&gt;Permission&lt;/code&gt; 링크 생성 작업을위한 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="41e0cea64632e3ca5603c6f64f2ba33a33ea2503" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; object is also registered with the platform &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;MBeanServer&lt;/a&gt;. The &lt;a href=&quot;../../../javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; for uniquely identifying the &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; within an MBeanServer is:</source>
          <target state="translated">The &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; object is also registered with the platform &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;MBeanServer&lt;/a&gt;. The &lt;a href=&quot;../../../javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt; for uniquely identifying the &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; within an MBeanServer is:</target>
        </trans-unit>
        <trans-unit id="b15cfab53ee2a0eadd7dc3e89c6e3054abf67006" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; object is also registered with the platform &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;MBeanServer&lt;/a&gt;. The &lt;a href=&quot;../../../javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; for uniquely identifying the &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; within an MBeanServer is:</source>
          <target state="translated">&lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; 목적은 플랫폼에 등록 &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;의 MBeanServer&lt;/a&gt; . &lt;a href=&quot;../../../javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; 를&lt;/a&gt; 고유하게 식별하는 &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; 의 MBeanServer 내에서이다 :</target>
        </trans-unit>
        <trans-unit id="0255ebf80bbcc8c5a2f44e9f14adb8567abeb8d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Point2D&lt;/code&gt; class defines a point representing a location in &lt;code&gt;(x,y)&lt;/code&gt; coordinate space.</source>
          <target state="translated">The &lt;code&gt;Point2D&lt;/code&gt; class defines a point representing a location in &lt;code&gt;(x,y)&lt;/code&gt; coordinate space.</target>
        </trans-unit>
        <trans-unit id="51fd15fd08c40e64c9f0a62e14caca8103322dfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Point2D&lt;/code&gt; in the destination image that corresponds to the specified point in the source image.</source>
          <target state="translated">The &lt;code&gt;Point2D&lt;/code&gt; in the destination image that corresponds to the specified point in the source image.</target>
        </trans-unit>
        <trans-unit id="e9db41020f8cfc583464f3b688783deb80a1748a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Point2D&lt;/code&gt; in the destination that corresponds to the specified point in the source.</source>
          <target state="translated">The &lt;code&gt;Point2D&lt;/code&gt; in the destination that corresponds to the specified point in the source.</target>
        </trans-unit>
        <trans-unit id="176ebc50958434620dc6e1fc7aedbf4aa4c19395" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Policy&lt;/code&gt; object consults the local policy and returns and appropriate &lt;code&gt;Permissions&lt;/code&gt; object with the Permissions granted to the Principals associated with the provided</source>
          <target state="translated">&lt;code&gt;Policy&lt;/code&gt; 객체는 로컬 정책을 협의하고 돌아 적절한 &lt;code&gt;Permissions&lt;/code&gt; 제공된에 관련 지을 수 있었던 Principal에 부여 된 권한 객체를</target>
        </trans-unit>
        <trans-unit id="bc0f88823ab6ae735668139d74c93498b75f7a38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Polygon&lt;/code&gt; class encapsulates a description of a closed, two-dimensional region within a coordinate space.</source>
          <target state="translated">The &lt;code&gt;Polygon&lt;/code&gt; class encapsulates a description of a closed, two-dimensional region within a coordinate space.</target>
        </trans-unit>
        <trans-unit id="d773293caf0f8c7512617d0ff6853b4e434dbc33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Polygon&lt;/code&gt; class encapsulates a description of a closed, two-dimensional region within a coordinate space. This region is bounded by an arbitrary number of line segments, each of which is one side of the polygon. Internally, a polygon comprises of a list of &lt;code&gt;(x,y)&lt;/code&gt; coordinate pairs, where each pair defines a</source>
          <target state="translated">The &lt;code&gt;Polygon&lt;/code&gt; class encapsulates a description of a closed, two-dimensional region within a coordinate space. This region is bounded by an arbitrary number of line segments, each of which is one side of the polygon. Internally, a polygon comprises of a list of &lt;code&gt;(x,y)&lt;/code&gt; coordinate pairs, where each pair defines a</target>
        </trans-unit>
        <trans-unit id="8f660c48a5927de5d279d0b4033c4ae98a5108f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Port.Info&lt;/code&gt; class extends &lt;code&gt;&lt;a href=&quot;line.info&quot;&gt;&lt;code&gt;Line.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; with additional information specific to ports, including the port's name and whether it is a source or a target for its mixer.</source>
          <target state="translated">&lt;code&gt;Port.Info&lt;/code&gt; 의 클래스는 확장 &lt;code&gt;&lt;a href=&quot;line.info&quot;&gt;&lt;code&gt;Line.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 를 포트의 이름을 포함하여 포트에 대한 자세한 내용을 구체적으로 그리고 여부 소스 또는 믹서의 대상이다.</target>
        </trans-unit>
        <trans-unit id="e65eb7e482423171ada7c491ef4eeceb1029407b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Port.Info&lt;/code&gt; class extends &lt;code&gt;&lt;a href=&quot;line.info&quot;&gt;&lt;code&gt;Line.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; with additional information specific to ports, including the port's name and whether it is a source or a target for its mixer. By definition, a port acts as either a source or a target to its mixer, but not both. (Audio input ports are sources; audio output ports are targets.)</source>
          <target state="translated">&lt;code&gt;Port.Info&lt;/code&gt; 의 클래스는 확장 &lt;code&gt;&lt;a href=&quot;line.info&quot;&gt;&lt;code&gt;Line.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 를 포트의 이름을 포함하여 포트에 대한 자세한 내용을 구체적으로 그리고 여부 소스 또는 믹서의 대상이다. 정의에 따르면 포트는 믹서의 소스 또는 대상 역할을하지만 둘다는 아닙니다. (오디오 입력 포트는 소스이고 오디오 출력 포트는 대상입니다.)</target>
        </trans-unit>
        <trans-unit id="5514700d1e658c5e68c6a9044f1218f55b233edd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Port.Info&lt;/code&gt; class extends &lt;code&gt;Line.Info&lt;/code&gt; with additional information specific to ports, including the port's name and whether it is a source or a target for its mixer.</source>
          <target state="translated">The &lt;code&gt;Port.Info&lt;/code&gt; class extends &lt;code&gt;Line.Info&lt;/code&gt; with additional information specific to ports, including the port's name and whether it is a source or a target for its mixer.</target>
        </trans-unit>
        <trans-unit id="2b7466b90e627fdcb19a669e4837c462e6d9a2de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Port.Info&lt;/code&gt; class extends &lt;code&gt;Line.Info&lt;/code&gt; with additional information specific to ports, including the port's name and whether it is a source or a target for its mixer. By definition, a port acts as either a source or a target to its mixer, but not both. (Audio input ports are sources; audio output ports are targets.)</source>
          <target state="translated">The &lt;code&gt;Port.Info&lt;/code&gt; class extends &lt;code&gt;Line.Info&lt;/code&gt; with additional information specific to ports, including the port's name and whether it is a source or a target for its mixer. By definition, a port acts as either a source or a target to its mixer, but not both. (Audio input ports are sources; audio output ports are targets.)</target>
        </trans-unit>
        <trans-unit id="5ae842ea749d43311b4ec5700e9104dcbbe1e761" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Predicate&lt;/code&gt; interface is a standard interface that applications can implement to define the filter they wish to apply to a a &lt;code&gt;FilteredRowSet&lt;/code&gt; object. A &lt;code&gt;FilteredRowSet&lt;/code&gt; object consumes implementations of this interface and enforces the constraints defined in the implementation of the method &lt;code&gt;evaluate&lt;/code&gt;. A &lt;code&gt;FilteredRowSet&lt;/code&gt; object enforces the filter constraints in a bi-directional manner: It outputs only rows that are within the constraints of the filter; and conversely, it inserts, modifies, or updates only rows that are within the constraints of the filter.</source>
          <target state="translated">The &lt;code&gt;Predicate&lt;/code&gt; interface is a standard interface that applications can implement to define the filter they wish to apply to a a &lt;code&gt;FilteredRowSet&lt;/code&gt; object. A &lt;code&gt;FilteredRowSet&lt;/code&gt; object consumes implementations of this interface and enforces the constraints defined in the implementation of the method &lt;code&gt;evaluate&lt;/code&gt; . A &lt;code&gt;FilteredRowSet&lt;/code&gt; object enforces the filter constraints in a bi-directional manner: It outputs only rows that are within the constraints of the filter; and conversely, it inserts, modifies, or updates only rows that are within the constraints of the filter.</target>
        </trans-unit>
        <trans-unit id="4c187a2ae24f6fe10978b472c34cc326cf74b873" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PreferencesFactory&lt;/code&gt; implementation is located as follows:</source>
          <target state="translated">The &lt;code&gt;PreferencesFactory&lt;/code&gt; implementation is located as follows:</target>
        </trans-unit>
        <trans-unit id="b8bf7442319d0465fd61692705002688a0ac045b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PreparedStatement&lt;/code&gt; that is being closed or is invalid</source>
          <target state="translated">The &lt;code&gt;PreparedStatement&lt;/code&gt; that is being closed or is invalid</target>
        </trans-unit>
        <trans-unit id="8ae1e13889514879c41f4b82a2786cc0c9953e18" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Printable&lt;/code&gt; can be requested in one of two printing modes. In both modes, it spreads table rows naturally in sequence across multiple pages, fitting as many rows as possible per page. &lt;code&gt;PrintMode.NORMAL&lt;/code&gt; specifies that the table be printed at its current size. In this mode, there may be a need to spread columns across pages in a similar manner to that of the rows. When the need arises, columns are distributed in an order consistent with the table's &lt;code&gt;ComponentOrientation&lt;/code&gt;. &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt; specifies that the output be scaled smaller, if necessary, to fit the table's entire width (and thereby all columns) on each page. Width and height are scaled equally, maintaining the aspect ratio of the output.</source>
          <target state="translated">The &lt;code&gt;Printable&lt;/code&gt; can be requested in one of two printing modes. In both modes, it spreads table rows naturally in sequence across multiple pages, fitting as many rows as possible per page. &lt;code&gt;PrintMode.NORMAL&lt;/code&gt; specifies that the table be printed at its current size. In this mode, there may be a need to spread columns across pages in a similar manner to that of the rows. When the need arises, columns are distributed in an order consistent with the table's &lt;code&gt;ComponentOrientation&lt;/code&gt; . &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt; specifies that the output be scaled smaller, if necessary, to fit the table's entire width (and thereby all columns) on each page. Width and height are scaled equally, maintaining the aspect ratio of the output.</target>
        </trans-unit>
        <trans-unit id="d90b7c1279ee9905eabe7667575548c1be503720" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Printable&lt;/code&gt; constrains what it draws to the printable area of each page that it prints. Under certain circumstances, it may find it impossible to fit all of a page's content into that area. In these cases the output may be clipped, but the implementation makes an effort to do something reasonable. Here are a few situations where this is known to occur, and how they may be handled by this particular implementation:</source>
          <target state="translated">The &lt;code&gt;Printable&lt;/code&gt; constrains what it draws to the printable area of each page that it prints. Under certain circumstances, it may find it impossible to fit all of a page's content into that area. In these cases the output may be clipped, but the implementation makes an effort to do something reasonable. Here are a few situations where this is known to occur, and how they may be handled by this particular implementation:</target>
        </trans-unit>
        <trans-unit id="0e87b2cf55076570d0eef346208270663ceba3b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Printable&lt;/code&gt; heads the portion of table on each page with the appropriate section from the table's &lt;code&gt;JTableHeader&lt;/code&gt;, if it has one.</source>
          <target state="translated">The &lt;code&gt;Printable&lt;/code&gt; heads the portion of table on each page with the appropriate section from the table's &lt;code&gt;JTableHeader&lt;/code&gt; , if it has one.</target>
        </trans-unit>
        <trans-unit id="62eaa3a13cc3c735099760a21c4a9cf9313e1105" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Printable&lt;/code&gt; interface is implemented by the &lt;code&gt;print&lt;/code&gt; methods of the current page painter, which is called by the printing system to render a page.</source>
          <target state="translated">The &lt;code&gt;Printable&lt;/code&gt; interface is implemented by the &lt;code&gt;print&lt;/code&gt; methods of the current page painter, which is called by the printing system to render a page.</target>
        </trans-unit>
        <trans-unit id="e0f2e75e809287fcbcd5cb33c34ad66a05a8d318" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Printable&lt;/code&gt; interface is implemented by the &lt;code&gt;print&lt;/code&gt; methods of the current page painter, which is called by the printing system to render a page. When building a &lt;a href=&quot;pageable&quot;&gt;&lt;code&gt;Pageable&lt;/code&gt;&lt;/a&gt;, pairs of &lt;a href=&quot;pageformat&quot;&gt;&lt;code&gt;PageFormat&lt;/code&gt;&lt;/a&gt; instances and instances that implement this interface are used to describe each page. The instance implementing &lt;code&gt;Printable&lt;/code&gt; is called to print the page's graphics.</source>
          <target state="translated">The &lt;code&gt;Printable&lt;/code&gt; interface is implemented by the &lt;code&gt;print&lt;/code&gt; methods of the current page painter, which is called by the printing system to render a page. When building a &lt;a href=&quot;pageable&quot;&gt; &lt;code&gt;Pageable&lt;/code&gt; &lt;/a&gt;, pairs of &lt;a href=&quot;pageformat&quot;&gt; &lt;code&gt;PageFormat&lt;/code&gt; &lt;/a&gt; instances and instances that implement this interface are used to describe each page. The instance implementing &lt;code&gt;Printable&lt;/code&gt; is called to print the page's graphics.</target>
        </trans-unit>
        <trans-unit id="ac0d71a3c6e84bf3a7b4ac2010bf6cb3d7c2f903" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PrinterAbortException&lt;/code&gt; class is a subclass of &lt;a href=&quot;printerexception&quot;&gt;&lt;code&gt;PrinterException&lt;/code&gt;&lt;/a&gt; and is used to indicate that a user or application has terminated the print job while it was in the process of printing.</source>
          <target state="translated">The &lt;code&gt;PrinterAbortException&lt;/code&gt; class is a subclass of &lt;a href=&quot;printerexception&quot;&gt; &lt;code&gt;PrinterException&lt;/code&gt; &lt;/a&gt; and is used to indicate that a user or application has terminated the print job while it was in the process of printing.</target>
        </trans-unit>
        <trans-unit id="8291fb13987bd51c6c24249e8d111d094c6d983f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PrinterException&lt;/code&gt; class and its subclasses are used to indicate that an exceptional condition has occurred in the print system.</source>
          <target state="translated">The &lt;code&gt;PrinterException&lt;/code&gt; class and its subclasses are used to indicate that an exceptional condition has occurred in the print system.</target>
        </trans-unit>
        <trans-unit id="d0286b3bdfead09b3ddabeab90a87f6c2dbe0b87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PrinterGraphics&lt;/code&gt; interface is implemented by &lt;a href=&quot;../graphics&quot;&gt;&lt;code&gt;Graphics&lt;/code&gt;&lt;/a&gt; objects that are passed to &lt;a href=&quot;printable&quot;&gt;&lt;code&gt;Printable&lt;/code&gt;&lt;/a&gt; objects to render a page.</source>
          <target state="translated">The &lt;code&gt;PrinterGraphics&lt;/code&gt; interface is implemented by &lt;a href=&quot;../graphics&quot;&gt; &lt;code&gt;Graphics&lt;/code&gt; &lt;/a&gt; objects that are passed to &lt;a href=&quot;printable&quot;&gt; &lt;code&gt;Printable&lt;/code&gt; &lt;/a&gt; objects to render a page.</target>
        </trans-unit>
        <trans-unit id="7c7b23e4c9e1c4b2853d8d828e50835dc408b873" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PrinterGraphics&lt;/code&gt; interface is implemented by &lt;a href=&quot;../graphics&quot;&gt;&lt;code&gt;Graphics&lt;/code&gt;&lt;/a&gt; objects that are passed to &lt;a href=&quot;printable&quot;&gt;&lt;code&gt;Printable&lt;/code&gt;&lt;/a&gt; objects to render a page. It allows an application to find the &lt;a href=&quot;printerjob&quot;&gt;&lt;code&gt;PrinterJob&lt;/code&gt;&lt;/a&gt; object that is controlling the printing.</source>
          <target state="translated">The &lt;code&gt;PrinterGraphics&lt;/code&gt; interface is implemented by &lt;a href=&quot;../graphics&quot;&gt; &lt;code&gt;Graphics&lt;/code&gt; &lt;/a&gt; objects that are passed to &lt;a href=&quot;printable&quot;&gt; &lt;code&gt;Printable&lt;/code&gt; &lt;/a&gt; objects to render a page. It allows an application to find the &lt;a href=&quot;printerjob&quot;&gt; &lt;code&gt;PrinterJob&lt;/code&gt; &lt;/a&gt; object that is controlling the printing.</target>
        </trans-unit>
        <trans-unit id="8c6e62b7cd391131d02c652075e5ac3c0a89e401" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PrinterIOException&lt;/code&gt; class is a subclass of &lt;a href=&quot;printerexception&quot;&gt;&lt;code&gt;PrinterException&lt;/code&gt;&lt;/a&gt; and is used to indicate that an IO error of some sort has occurred while printing.</source>
          <target state="translated">The &lt;code&gt;PrinterIOException&lt;/code&gt; class is a subclass of &lt;a href=&quot;printerexception&quot;&gt; &lt;code&gt;PrinterException&lt;/code&gt; &lt;/a&gt; and is used to indicate that an IO error of some sort has occurred while printing.</target>
        </trans-unit>
        <trans-unit id="82eaac5fa28704ebde927e11ea586b3e320c6f37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PrinterJob&lt;/code&gt; class is the principal class that controls printing.</source>
          <target state="translated">The &lt;code&gt;PrinterJob&lt;/code&gt; class is the principal class that controls printing.</target>
        </trans-unit>
        <trans-unit id="4b4fd4b60af924b1ba0d3eed68d2cf8f47f320d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PrinterJob&lt;/code&gt; class is the principal class that controls printing. An application calls methods in this class to set up a job, optionally to invoke a print dialog with the user, and then to print the pages of the job.</source>
          <target state="translated">The &lt;code&gt;PrinterJob&lt;/code&gt; class is the principal class that controls printing. An application calls methods in this class to set up a job, optionally to invoke a print dialog with the user, and then to print the pages of the job.</target>
        </trans-unit>
        <trans-unit id="933ffd1a10f5aa2494d07bcb8dab5fb76775151d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProcessHandle&lt;/code&gt; static factory methods return instances that are &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt;, immutable and thread-safe. Use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on these instances of &lt;code&gt;ProcessHandle&lt;/code&gt; may have unpredictable results and should be avoided. Use &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#compareTo(java.lang.ProcessHandle)&quot;&gt;&lt;code&gt;compareTo&lt;/code&gt;&lt;/a&gt; methods to compare ProcessHandles.</source>
          <target state="translated">The &lt;code&gt;ProcessHandle&lt;/code&gt; static factory methods return instances that are &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt;, immutable and thread-safe. Use of identity-sensitive operations (including reference equality ( &lt;code&gt;==&lt;/code&gt; ), identity hash code, or synchronization) on these instances of &lt;code&gt;ProcessHandle&lt;/code&gt; may have unpredictable results and should be avoided. Use &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#compareTo(java.lang.ProcessHandle)&quot;&gt; &lt;code&gt;compareTo&lt;/code&gt; &lt;/a&gt; methods to compare ProcessHandles.</target>
        </trans-unit>
        <trans-unit id="03f0e1b162793dcda086b30e64d17c70076f236a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProcessingInstruction&lt;/code&gt; interface represents a &quot;processing instruction&quot;, used in XML as a way to keep processor-specific information in the text of the document.</source>
          <target state="translated">The &lt;code&gt;ProcessingInstruction&lt;/code&gt; interface represents a &quot;processing instruction&quot;, used in XML as a way to keep processor-specific information in the text of the document.</target>
        </trans-unit>
        <trans-unit id="b1486c259ae3502fc3a329a70fbfe8ae9f08b495" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Properties&lt;/code&gt; argument can be used to pass arbitrary string tag/value pairs as connection arguments. Normally at least &quot;user&quot; and &quot;password&quot; properties should be included in the &lt;code&gt;Properties&lt;/code&gt; object.</source>
          <target state="translated">The &lt;code&gt;Properties&lt;/code&gt; argument can be used to pass arbitrary string tag/value pairs as connection arguments. Normally at least &quot;user&quot; and &quot;password&quot; properties should be included in the &lt;code&gt;Properties&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="75282c40a85213c64330ab76483127cc3ec01312" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Properties&lt;/code&gt; class does not inherit the concept of a load factor from its superclass, &lt;code&gt;Hashtable&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;Properties&lt;/code&gt; class does not inherit the concept of a load factor from its superclass, &lt;code&gt;Hashtable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d166a34742a6c6490e21ca168d2e6d673987afa3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Properties&lt;/code&gt; class represents a persistent set of properties.</source>
          <target state="translated">&lt;code&gt;Properties&lt;/code&gt; 클래스는 불변의 프로퍼티 세트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d09951cf74285f372797f262ca2d5541dfdf337c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Properties&lt;/code&gt; class represents a persistent set of properties. The &lt;code&gt;Properties&lt;/code&gt; can be saved to a stream or loaded from a stream. Each key and its corresponding value in the property list is a string.</source>
          <target state="translated">&lt;code&gt;Properties&lt;/code&gt; 클래스는 불변의 프로퍼티 세트를 나타냅니다. &lt;code&gt;Properties&lt;/code&gt; 스트림에 저장되거나 스트림에서로드 할 수 있습니다. 속성 목록의 각 키와 해당 값은 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="3b6c7ec85cd35e87cee3f3b62f08fa502097b985" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PropertyChangeListener&lt;/code&gt; must be from this context.</source>
          <target state="translated">The &lt;code&gt;PropertyChangeListener&lt;/code&gt; must be from this context.</target>
        </trans-unit>
        <trans-unit id="41efb79d3a1eca9cb5d81533032efc9675bf375a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PropertyChangeSupport&lt;/code&gt; associated with this &lt;code&gt;BeanContextChildSupport&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyChangeSupport&lt;/code&gt; 이와 관련된 &lt;code&gt;BeanContextChildSupport&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eace280cd8fbc57f7f7b6a31cb7bd7742834ba47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;QuadCurve2D&lt;/code&gt; class defines a quadratic parametric curve segment in &lt;code&gt;(x,y)&lt;/code&gt; coordinate space.</source>
          <target state="translated">The &lt;code&gt;QuadCurve2D&lt;/code&gt; class defines a quadratic parametric curve segment in &lt;code&gt;(x,y)&lt;/code&gt; coordinate space.</target>
        </trans-unit>
        <trans-unit id="61720eb2d433a3c828940b196eeb9541a74e0646" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Queue&lt;/code&gt; interface does not define the</source>
          <target state="translated">&lt;code&gt;Queue&lt;/code&gt; 인터페이스를 정의하지 않는다</target>
        </trans-unit>
        <trans-unit id="3c802a31a324ed954aac93983d5b047944141b7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RIXMLProvider&lt;/code&gt; implementation uses the lowest level of synchronization and just writes &lt;code&gt;RowSet&lt;/code&gt; changes to the data source.</source>
          <target state="translated">The &lt;code&gt;RIXMLProvider&lt;/code&gt; implementation uses the lowest level of synchronization and just writes &lt;code&gt;RowSet&lt;/code&gt; changes to the data source.</target>
        </trans-unit>
        <trans-unit id="ac0fe76fb8dd0ed97837541e8c347d6bc8203ec2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RadialGradientPaint&lt;/code&gt; class provides a way to fill a shape with a circular radial color gradient pattern.</source>
          <target state="translated">The &lt;code&gt;RadialGradientPaint&lt;/code&gt; class provides a way to fill a shape with a circular radial color gradient pattern.</target>
        </trans-unit>
        <trans-unit id="402bca490996bdd2abb2791c2ec477a47b69c5ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RadialGradientPaint&lt;/code&gt; class provides a way to fill a shape with a circular radial color gradient pattern. The user may specify 2 or more gradient colors, and this paint will provide an interpolation between each color.</source>
          <target state="translated">The &lt;code&gt;RadialGradientPaint&lt;/code&gt; class provides a way to fill a shape with a circular radial color gradient pattern. The user may specify 2 or more gradient colors, and this paint will provide an interpolation between each color.</target>
        </trans-unit>
        <trans-unit id="72a0a7aaeb78342dc06a7bdd5ddfc266a67e6825" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Range&lt;/code&gt; enum replaces the traditional bit mask-based values (e.g., &lt;a href=&quot;numericshaper#ARABIC&quot;&gt;&lt;code&gt;NumericShaper.ARABIC&lt;/code&gt;&lt;/a&gt;), and supports more Unicode ranges than the bit mask-based ones. For example, the following code using the bit mask:</source>
          <target state="translated">The &lt;code&gt;Range&lt;/code&gt; enum replaces the traditional bit mask-based values (e.g., &lt;a href=&quot;numericshaper#ARABIC&quot;&gt; &lt;code&gt;NumericShaper.ARABIC&lt;/code&gt; &lt;/a&gt;), and supports more Unicode ranges than the bit mask-based ones. For example, the following code using the bit mask:</target>
        </trans-unit>
        <trans-unit id="0dd9840df06924282664fc3e67ddabe9defd6274" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Raster&lt;/code&gt; being referenced.</source>
          <target state="translated">참조 되는 &lt;code&gt;Raster&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c6f82f0ae4c7c7b30125a9daf0c3db74dcf1b61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RasterFormatException&lt;/code&gt; is thrown if there is invalid layout information in the &lt;a href=&quot;raster&quot;&gt;&lt;code&gt;Raster&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;RasterFormatException&lt;/code&gt; is thrown if there is invalid layout information in the &lt;a href=&quot;raster&quot;&gt; &lt;code&gt;Raster&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a7d5ef2a80665b70e00f3dbb636dc72cbc088a21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reader&lt;/code&gt; methods that read from the file throw &lt;code&gt;
 IOException&lt;/code&gt; if a malformed or unmappable byte sequence is read.</source>
          <target state="translated">The &lt;code&gt;Reader&lt;/code&gt; methods that read from the file throw &lt;code&gt; IOException&lt;/code&gt; if a malformed or unmappable byte sequence is read.</target>
        </trans-unit>
        <trans-unit id="79a2cd06471b623d73bdbbd167ab48aee2097b40" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reader&lt;/code&gt; methods that read from the file throw &lt;code&gt;IOException&lt;/code&gt; if a malformed or unmappable byte sequence is read.</source>
          <target state="translated">&lt;code&gt;Reader&lt;/code&gt; 파일에서 읽어 방법은 던져 &lt;code&gt;IOException&lt;/code&gt; 가 잘못되었거나 맵 불가 바이트 시퀀스를 읽을 경우.</target>
        </trans-unit>
        <trans-unit id="180637fe735f25114352ee626b0787d96e82163f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reader&lt;/code&gt; object that will be returned by the method &lt;code&gt;getCharacterStream&lt;/code&gt;, which is specified in the &lt;code&gt;ResultSet&lt;/code&gt; interface.</source>
          <target state="translated">The &lt;code&gt;Reader&lt;/code&gt; object that will be returned by the method &lt;code&gt;getCharacterStream&lt;/code&gt; , which is specified in the &lt;code&gt;ResultSet&lt;/code&gt; interface.</target>
        </trans-unit>
        <trans-unit id="99baa6f6ac31a6957c69fb473938422fc78f374d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Reader&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63e032b900d34c7d460141383d0bab5c3879e7f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Rectangle2D&lt;/code&gt; class describes a rectangle defined by a location &lt;code&gt;(x,y)&lt;/code&gt; and dimension &lt;code&gt;(w x h)&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;Rectangle2D&lt;/code&gt; class describes a rectangle defined by a location &lt;code&gt;(x,y)&lt;/code&gt; and dimension &lt;code&gt;(w x h)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48e440d18cbeb470c2e070567bac333946a54aba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Rectangle2D&lt;/code&gt; representing the destination image's bounding box.</source>
          <target state="translated">The &lt;code&gt;Rectangle2D&lt;/code&gt; representing the destination image's bounding box.</target>
        </trans-unit>
        <trans-unit id="62ccf8df2768408a1c1674844bb46ef5f53b7825" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Rectangle2D&lt;/code&gt; representing the destination's bounding box.</source>
          <target state="translated">The &lt;code&gt;Rectangle2D&lt;/code&gt; representing the destination's bounding box.</target>
        </trans-unit>
        <trans-unit id="b09d8d74cfacaa1243813daf514eb38609152c3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Registry&lt;/code&gt; instance is exported as if the static &lt;a href=&quot;../server/unicastremoteobject#exportObject(java.rmi.Remote,int)&quot;&gt;&lt;code&gt;UnicastRemoteObject.exportObject&lt;/code&gt;&lt;/a&gt; method is invoked, passing the &lt;code&gt;Registry&lt;/code&gt; instance and the specified &lt;code&gt;port&lt;/code&gt; as arguments, except that the &lt;code&gt;Registry&lt;/code&gt; instance is exported with a well-known object identifier, an &lt;a href=&quot;../server/objid&quot;&gt;&lt;code&gt;ObjID&lt;/code&gt;&lt;/a&gt; instance constructed with the value &lt;a href=&quot;../server/objid#REGISTRY_ID&quot;&gt;&lt;code&gt;ObjID.REGISTRY_ID&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;Registry&lt;/code&gt; instance is exported as if the static &lt;a href=&quot;../server/unicastremoteobject#exportObject(java.rmi.Remote,int)&quot;&gt; &lt;code&gt;UnicastRemoteObject.exportObject&lt;/code&gt; &lt;/a&gt; method is invoked, passing the &lt;code&gt;Registry&lt;/code&gt; instance and the specified &lt;code&gt;port&lt;/code&gt; as arguments, except that the &lt;code&gt;Registry&lt;/code&gt; instance is exported with a well-known object identifier, an &lt;a href=&quot;../server/objid&quot;&gt; &lt;code&gt;ObjID&lt;/code&gt; &lt;/a&gt; instance constructed with the value &lt;a href=&quot;../server/objid#REGISTRY_ID&quot;&gt; &lt;code&gt;ObjID.REGISTRY_ID&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7544022a4002643648e99cb248dc3e1edf70eac7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Registry&lt;/code&gt; instance is exported as if the static &lt;a href=&quot;../server/unicastremoteobject#exportObject(java.rmi.Remote,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)&quot;&gt;&lt;code&gt;UnicastRemoteObject.exportObject&lt;/code&gt;&lt;/a&gt; method is invoked, passing the &lt;code&gt;Registry&lt;/code&gt; instance, the specified &lt;code&gt;port&lt;/code&gt;, the specified &lt;code&gt;RMIClientSocketFactory&lt;/code&gt;, and the specified &lt;code&gt;RMIServerSocketFactory&lt;/code&gt; as arguments, except that the &lt;code&gt;Registry&lt;/code&gt; instance is exported with a well-known object identifier, an &lt;a href=&quot;../server/objid&quot;&gt;&lt;code&gt;ObjID&lt;/code&gt;&lt;/a&gt; instance constructed with the value &lt;a href=&quot;../server/objid#REGISTRY_ID&quot;&gt;&lt;code&gt;ObjID.REGISTRY_ID&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;Registry&lt;/code&gt; instance is exported as if the static &lt;a href=&quot;../server/unicastremoteobject#exportObject(java.rmi.Remote,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)&quot;&gt; &lt;code&gt;UnicastRemoteObject.exportObject&lt;/code&gt; &lt;/a&gt; method is invoked, passing the &lt;code&gt;Registry&lt;/code&gt; instance, the specified &lt;code&gt;port&lt;/code&gt; , the specified &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; , and the specified &lt;code&gt;RMIServerSocketFactory&lt;/code&gt; as arguments, except that the &lt;code&gt;Registry&lt;/code&gt; instance is exported with a well-known object identifier, an &lt;a href=&quot;../server/objid&quot;&gt; &lt;code&gt;ObjID&lt;/code&gt; &lt;/a&gt; instance constructed with the value &lt;a href=&quot;../server/objid#REGISTRY_ID&quot;&gt; &lt;code&gt;ObjID.REGISTRY_ID&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a77e9ae2b2107d577c6cecf3ac83834ef29056d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Remote&lt;/code&gt; interface serves to identify interfaces whose methods may be invoked from a non-local virtual machine.</source>
          <target state="translated">The &lt;code&gt;Remote&lt;/code&gt; interface serves to identify interfaces whose methods may be invoked from a non-local virtual machine.</target>
        </trans-unit>
        <trans-unit id="79dd4ebe7717e3ca739dd65783e3b0cd2d2ad2b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Remote&lt;/code&gt; interface serves to identify interfaces whose methods may be invoked from a non-local virtual machine. Any object that is a remote object must directly or indirectly implement this interface. Only those methods specified in a &quot;remote interface&quot;, an interface that extends &lt;code&gt;java.rmi.Remote&lt;/code&gt; are available remotely.</source>
          <target state="translated">The &lt;code&gt;Remote&lt;/code&gt; interface serves to identify interfaces whose methods may be invoked from a non-local virtual machine. Any object that is a remote object must directly or indirectly implement this interface. Only those methods specified in a &quot;remote interface&quot;, an interface that extends &lt;code&gt;java.rmi.Remote&lt;/code&gt; are available remotely.</target>
        </trans-unit>
        <trans-unit id="9e1abc4fd1fdb1df6457b5ff98ccc8aecec8c9b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoteObject&lt;/code&gt; class implements the &lt;code&gt;java.lang.Object&lt;/code&gt; behavior for remote objects.</source>
          <target state="translated">The &lt;code&gt;RemoteObject&lt;/code&gt; class implements the &lt;code&gt;java.lang.Object&lt;/code&gt; behavior for remote objects.</target>
        </trans-unit>
        <trans-unit id="a0d6869267dfac5f76fcc33b3143f3ae5d0a24f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoteObject&lt;/code&gt; class implements the &lt;code&gt;java.lang.Object&lt;/code&gt; behavior for remote objects. &lt;code&gt;RemoteObject&lt;/code&gt; provides the remote semantics of Object by implementing methods for hashCode, equals, and toString.</source>
          <target state="translated">The &lt;code&gt;RemoteObject&lt;/code&gt; class implements the &lt;code&gt;java.lang.Object&lt;/code&gt; behavior for remote objects. &lt;code&gt;RemoteObject&lt;/code&gt; provides the remote semantics of Object by implementing methods for hashCode, equals, and toString.</target>
        </trans-unit>
        <trans-unit id="b05077cbaa2115faf813b944cba45ca60c9c6de1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoteServer&lt;/code&gt; class is the common superclass to server implementations and provides the framework to support a wide range of remote reference semantics.</source>
          <target state="translated">The &lt;code&gt;RemoteServer&lt;/code&gt; class is the common superclass to server implementations and provides the framework to support a wide range of remote reference semantics.</target>
        </trans-unit>
        <trans-unit id="792164c73f012a6eeb208eb8bd1c997b5b34f4ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoteServer&lt;/code&gt; class is the common superclass to server implementations and provides the framework to support a wide range of remote reference semantics. Specifically, the functions needed to create and export remote objects (i.e. to make them remotely available) are provided abstractly by &lt;code&gt;RemoteServer&lt;/code&gt; and concretely by its subclass(es).</source>
          <target state="translated">The &lt;code&gt;RemoteServer&lt;/code&gt; class is the common superclass to server implementations and provides the framework to support a wide range of remote reference semantics. Specifically, the functions needed to create and export remote objects (i.e. to make them remotely available) are provided abstractly by &lt;code&gt;RemoteServer&lt;/code&gt; and concretely by its subclass(es).</target>
        </trans-unit>
        <trans-unit id="fa93b21177eae717f290dacea22a21f97b8f1d72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoteStub&lt;/code&gt; class is the common superclass of statically generated client stubs and provides the framework to support a wide range of remote reference semantics. Stub objects are surrogates that support exactly the same set of remote interfaces defined by the actual implementation of the remote object.</source>
          <target state="translated">The &lt;code&gt;RemoteStub&lt;/code&gt; class is the common superclass of statically generated client stubs and provides the framework to support a wide range of remote reference semantics. Stub objects are surrogates that support exactly the same set of remote interfaces defined by the actual implementation of the remote object.</target>
        </trans-unit>
        <trans-unit id="9fb5c4efba8253cf833773d52f6ee715196af2f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RenderedImage&lt;/code&gt; being referenced.</source>
          <target state="translated">참조되고 있는 &lt;code&gt;RenderedImage&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff6444550237d5fb85d8a7c51d5efc98d5ae9185" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RenderingHints&lt;/code&gt; class defines and manages collections of keys and associated values which allow an application to provide input into the choice of algorithms used by other classes which perform rendering and image manipulation services.</source>
          <target state="translated">The &lt;code&gt;RenderingHints&lt;/code&gt; class defines and manages collections of keys and associated values which allow an application to provide input into the choice of algorithms used by other classes which perform rendering and image manipulation services.</target>
        </trans-unit>
        <trans-unit id="9887a53bebe132f40788e0d2065e4ecd783e3235" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RenderingHints&lt;/code&gt; class defines and manages collections of keys and associated values which allow an application to provide input into the choice of algorithms used by other classes which perform rendering and image manipulation services. The &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; class, and classes that implement &lt;a href=&quot;image/bufferedimageop&quot;&gt;&lt;code&gt;BufferedImageOp&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;image/rasterop&quot;&gt;&lt;code&gt;RasterOp&lt;/code&gt;&lt;/a&gt; all provide methods to get and possibly to set individual or groups of &lt;code&gt;RenderingHints&lt;/code&gt; keys and their associated values. When those implementations perform any rendering or image manipulation operations they should examine the values of any &lt;code&gt;RenderingHints&lt;/code&gt; that were requested by the caller and tailor the algorithms used accordingly and to the best of their ability.</source>
          <target state="translated">The &lt;code&gt;RenderingHints&lt;/code&gt; class defines and manages collections of keys and associated values which allow an application to provide input into the choice of algorithms used by other classes which perform rendering and image manipulation services. The &lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt; class, and classes that implement &lt;a href=&quot;image/bufferedimageop&quot;&gt; &lt;code&gt;BufferedImageOp&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;image/rasterop&quot;&gt; &lt;code&gt;RasterOp&lt;/code&gt; &lt;/a&gt; all provide methods to get and possibly to set individual or groups of &lt;code&gt;RenderingHints&lt;/code&gt; keys and their associated values. When those implementations perform any rendering or image manipulation operations they should examine the values of any &lt;code&gt;RenderingHints&lt;/code&gt; that were requested by the caller and tailor the algorithms used accordingly and to the best of their ability.</target>
        </trans-unit>
        <trans-unit id="698f6ce8695409c9c1d016b240fc277d2daf556f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RenderingHints&lt;/code&gt; object associated with this op.</source>
          <target state="translated">The &lt;code&gt;RenderingHints&lt;/code&gt; object associated with this op.</target>
        </trans-unit>
        <trans-unit id="77e24654175305f0a647c70b9c35f59becd0d1e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RenderingHints&lt;/code&gt; object associated with this operation. Returns null if no hints have been set.</source>
          <target state="translated">The &lt;code&gt;RenderingHints&lt;/code&gt; object associated with this operation. Returns null if no hints have been set.</target>
        </trans-unit>
        <trans-unit id="dcb353570992b66e098ee6f81b7550b5c291b768" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RenderingHints&lt;/code&gt; object for this &lt;code&gt;BufferedImageOp&lt;/code&gt;. Returns null if no hints have been set.</source>
          <target state="translated">The &lt;code&gt;RenderingHints&lt;/code&gt; object for this &lt;code&gt;BufferedImageOp&lt;/code&gt; . Returns null if no hints have been set.</target>
        </trans-unit>
        <trans-unit id="fb9d41c3fa3c99032ae09838bf89f6521b0c7d6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ResultSet&lt;/code&gt; interface provides</source>
          <target state="translated">The &lt;code&gt;ResultSet&lt;/code&gt; interface provides</target>
        </trans-unit>
        <trans-unit id="09f27659fdc1b9513eeb6b0754213ec48f2fa7c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ResultSet&lt;/code&gt; is sorted by the NAME column</source>
          <target state="translated">The &lt;code&gt;ResultSet&lt;/code&gt; is sorted by the NAME column</target>
        </trans-unit>
        <trans-unit id="887b6c862a54810bed3530170ef96026c940d025" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ResultSet&lt;/code&gt; object that is returned has the following columns:</source>
          <target state="translated">The &lt;code&gt;ResultSet&lt;/code&gt; object that is returned has the following columns:</target>
        </trans-unit>
        <trans-unit id="b9fc508b09fb91444f8aa155b416b9d56dbb1265" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ReverbType&lt;/code&gt; class provides methods for accessing various reverberation settings to be applied to an audio signal.</source>
          <target state="translated">&lt;code&gt;ReverbType&lt;/code&gt; 에의 클래스는 오디오 신호에 적용되는 다양한 바브 설정에 액세스하는 방법을 제공한다.</target>
        </trans-unit>
        <trans-unit id="2cd9cf5f4a30505ba459be4135f61441e2ae2fa6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RoundRectangle2D&lt;/code&gt; class defines a rectangle with rounded corners defined by a location &lt;code&gt;(x,y)&lt;/code&gt;, a dimension &lt;code&gt;(w x h)&lt;/code&gt;, and the width and height of an arc with which to round the corners.</source>
          <target state="translated">&lt;code&gt;RoundRectangle2D&lt;/code&gt; 클래스는 위치에 의해 정의 된 모서리가 둥근 직사각형 정의 &lt;code&gt;(x,y)&lt;/code&gt; , 치수 &lt;code&gt;(w x h)&lt;/code&gt; , 및 코너 라운딩 호의 폭과 높이.</target>
        </trans-unit>
        <trans-unit id="afe97ee9c3219412d61628980fe8432b9daaba4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RoundingMode&lt;/code&gt; used for this DecimalFormat.</source>
          <target state="translated">&lt;code&gt;RoundingMode&lt;/code&gt; 이에 DecimalFormat에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ffe20390fecad2daec079563f89bb0ffa523a1bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RoundingMode&lt;/code&gt; used for this NumberFormat.</source>
          <target state="translated">&lt;code&gt;RoundingMode&lt;/code&gt; 이 NumberFormat를 사용.</target>
        </trans-unit>
        <trans-unit id="2bf318326f683bc3130a7e47f41a597fb78b5f4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RowSet&lt;/code&gt; interface is unique in that it is intended to be implemented using the rest of the JDBC API. In other words, a &lt;code&gt;RowSet&lt;/code&gt; implementation is a layer of software that executes &quot;on top&quot; of a JDBC driver. Implementations of the &lt;code&gt;RowSet&lt;/code&gt; interface can be provided by anyone, including JDBC driver vendors who want to provide a &lt;code&gt;RowSet&lt;/code&gt; implementation as part of their JDBC products.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 인터페이스는이 JDBC API의 나머지 부분을 사용하여 구현하기위한 것입니다있는 것이 독특하다. 즉, &lt;code&gt;RowSet&lt;/code&gt; 구현은 JDBC 드라이버의 &quot;상위&quot;에서 실행되는 소프트웨어 계층입니다. &lt;code&gt;RowSet&lt;/code&gt; 인터페이스의 구현은 JDBC 제품의 일부로 &lt;code&gt;RowSet&lt;/code&gt; 구현 을 제공하려는 JDBC 드라이버 공급 업체를 포함하여 누구나 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6a660d92b53da40c64110ae03c4012f99aaf197b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RowSet&lt;/code&gt; interface may be implemented in any number of ways, and anyone may write an implementation. Developers are encouraged to use their imaginations in coming up with new ways to use rowsets.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 인터페이스는 많은 방법으로 구현할 수 있으며, 누구나가 구현을 작성할 수 있습니다. 개발자는 행 집합을 사용하는 새로운 방법을 생각 해낼 때 자신의 상상력을 사용하도록 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="6e183ab9ec4067e3978fb0f51f24da4f320d25d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RowSet&lt;/code&gt; interface provides a set of JavaBeans properties that allow a &lt;code&gt;RowSet&lt;/code&gt; instance to be configured to connect to a JDBC data source and read some data from the data source. A group of setter methods (&lt;code&gt;setInt&lt;/code&gt;, &lt;code&gt;setBytes&lt;/code&gt;, &lt;code&gt;setString&lt;/code&gt;, and so on) provide a way to pass input parameters to a rowset's command property. This command is the SQL query the rowset uses when it gets its data from a relational database, which is generally the case.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 인터페이스는 허용 자바빈 특성 세트 제공 &lt;code&gt;RowSet&lt;/code&gt; 인스턴스는 데이터 소스로부터 데이터를 JDBC 데이터 소스에 연결하고 판독하도록 구성된 것으로한다. setter 메서드 그룹 ( &lt;code&gt;setInt&lt;/code&gt; , &lt;code&gt;setBytes&lt;/code&gt; , &lt;code&gt;setString&lt;/code&gt; 등)은 입력 매개 변수를 행 집합의 명령 속성에 전달하는 방법을 제공합니다. 이 명령은 일반적으로 관계형 데이터베이스에서 데이터를 가져올 때 행 집합이 사용하는 SQL 쿼리입니다.</target>
        </trans-unit>
        <trans-unit id="7f4204c54cc12e00930766d695bcc0a0d93d8f28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RowSet&lt;/code&gt; interface supports JavaBeans events, allowing other components in an application to be notified when an event occurs on a rowset, such as a change in its value.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 이벤트가 같은 값의 변경으로, 행 집합에 발생하는 경우 응용 프로그램에서 다른 구성 요소를 허용 인터페이스를 지원하는 자바 빈즈 이벤트를 통지합니다.</target>
        </trans-unit>
        <trans-unit id="ff10a7bec4f9799f3f4222f05b3fb7ecfbe4c533" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RowSet&lt;/code&gt; interface works with various other classes and interfaces behind the scenes. These can be grouped into three categories.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 인터페이스는 다른 다양한 클래스 나 인터페이스와 함께 배후 작동합니다. 이들은 세 가지 범주로 그룹화 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed7467c598f02f617b848f30e8afc44cd8eee80c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RowSetMetaData&lt;/code&gt; interface differs from the &lt;code&gt;ResultSetMetaData&lt;/code&gt; interface in two ways.</source>
          <target state="translated">&lt;code&gt;RowSetMetaData&lt;/code&gt; 로부터 인터페이스 다릅니다 &lt;code&gt;ResultSetMetaData&lt;/code&gt; 에의 두 가지 방법으로 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="842bdaad38403a9056358dfffb5fed12b8ad0ac1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RowSetMetaData&lt;/code&gt; interface provides methods for setting the information about columns, but an application would not normally use these methods. When an application calls the &lt;code&gt;RowSet&lt;/code&gt; method &lt;code&gt;execute&lt;/code&gt;, the &lt;code&gt;RowSet&lt;/code&gt; object will contain a new set of rows, and its &lt;code&gt;RowSetMetaData&lt;/code&gt; object will have been internally updated to contain information about the new columns.</source>
          <target state="translated">&lt;code&gt;RowSetMetaData&lt;/code&gt; 인터페이스는 열에 관한 정보를 설정하는 방법을 제공하지만, 응용 프로그램은 일반적으로 이러한 방법을 사용하지 않을 것입니다. 응용 프로그램이 호출 할 때 &lt;code&gt;RowSet&lt;/code&gt; 방법은 &lt;code&gt;execute&lt;/code&gt; 의 &lt;code&gt;RowSet&lt;/code&gt; 객체는 행의 새로운 세트를 포함 해, 그 &lt;code&gt;RowSetMetaData&lt;/code&gt; 객체는 내부적으로 새로운 열에 관한 정보를 포함하도록 업데이트되었습니다됩니다.</target>
        </trans-unit>
        <trans-unit id="6a2e4c6f5a9389501138281dd4f3af7406e50bb2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RowSetWarning&lt;/code&gt; class provides warnings that can be set on &lt;code&gt;RowSet&lt;/code&gt; implementations. Similar to &lt;a href=&quot;../../../../java.sql/java/sql/sqlwarning&quot;&gt;SQLWarning&lt;/a&gt; objects, &lt;code&gt;RowSetWarning&lt;/code&gt; objects are silently chained to the object whose method caused the warning to be thrown. All &lt;code&gt;RowSet&lt;/code&gt; implementations &lt;b&gt;should&lt;/b&gt; ensure that this chaining occurs if a warning is generated and also ensure that the warnings are available via the &lt;code&gt;getRowSetWarnings&lt;/code&gt; method defined in either the &lt;code&gt;JdbcRowSet&lt;/code&gt; interface or the &lt;code&gt;CachedRowSet&lt;/code&gt; interface. After a warning has been retrieved with one of the &lt;code&gt;getRowSetWarnings&lt;/code&gt; methods, the &lt;code&gt;RowSetWarning&lt;/code&gt; method &lt;code&gt;getNextWarning&lt;/code&gt; can be called on it to retrieve any warnings that might be chained on it. If a warning is returned, &lt;code&gt;getNextWarning&lt;/code&gt; can be called on it, and so on until there are no more warnings.</source>
          <target state="translated">&lt;code&gt;RowSetWarning&lt;/code&gt; 클래스에서 설정할 수 있습니다 경고 제공 &lt;code&gt;RowSet&lt;/code&gt; 구현을. &lt;a href=&quot;../../../../java.sql/java/sql/sqlwarning&quot;&gt;SQLWarning&lt;/a&gt; 개체와 마찬가지로 &lt;code&gt;RowSetWarning&lt;/code&gt; 개체는 메서드가 경고를 발생시킨 개체에 자동으로 연결됩니다. 모든 &lt;code&gt;RowSet&lt;/code&gt; 구현 &lt;b&gt;은&lt;/b&gt; 경고가 생성 된 경우이 연결이 발생하는지 확인 하고 &lt;code&gt;JdbcRowSet&lt;/code&gt; 인터페이스 또는 &lt;code&gt;CachedRowSet&lt;/code&gt; 인터페이스에 정의 된 &lt;code&gt;getRowSetWarnings&lt;/code&gt; 메서드 를 통해 경고를 사용할 수 있는지 확인해야합니다 . &lt;code&gt;getRowSetWarnings&lt;/code&gt; 메소드 중 하나를 사용하여 경고를 검색 한 후 &lt;code&gt;RowSetWarning&lt;/code&gt; &lt;code&gt;getNextWarning&lt;/code&gt; 메소드를 호출하여 연결될 수있는 경고를 검색 할 수 있습니다. 경고가 리턴되면 &lt;code&gt;getNextWarning&lt;/code&gt; 이 호출 될 수 있으며 더 이상 경고가 없을 때까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="3ce1c50b3393b4ee8852b94258a4243c5413126c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RowsetMetaDataImpl&lt;/code&gt; class is a utility class that provides an implementation of the &lt;a href=&quot;../../../../java.sql/javax/sql/rowsetmetadata&quot;&gt;RowSetMetaData&lt;/a&gt; interface, supplying standard setter method implementations for metadata for both connected and disconnected &lt;code&gt;RowSet&lt;/code&gt; objects. All implementations are free to use this standard implementation but are not required to do so.</source>
          <target state="translated">&lt;code&gt;RowsetMetaDataImpl&lt;/code&gt; 클래스 구현 제공하는 유틸리티 클래스 &lt;a href=&quot;../../../../java.sql/javax/sql/rowsetmetadata&quot;&gt;에서 RowSetMetaData에&lt;/a&gt; 모두 연결하거나 분리 메타 데이터 표준 설정 메소드 구현 공급 인터페이스 &lt;code&gt;RowSet&lt;/code&gt; 오브젝트. 모든 구현은이 표준 구현을 무료로 사용할 수 있지만 반드시 그렇게 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="9a6c5472e51dff7ede55a06c630f405c31babb27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RuleBasedCollator&lt;/code&gt; class is a concrete subclass of &lt;code&gt;Collator&lt;/code&gt; that provides a simple, data-driven, table collator.</source>
          <target state="translated">&lt;code&gt;RuleBasedCollator&lt;/code&gt; 클래스의 구상 서브 클래스입니다 &lt;code&gt;Collator&lt;/code&gt; 간단한 데이터 드리븐의 테이블 Collator를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2ed8190679df509541420fb54e8aaab97382d51f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RuleBasedCollator&lt;/code&gt; class is a concrete subclass of &lt;code&gt;Collator&lt;/code&gt; that provides a simple, data-driven, table collator. With this class you can create a customized table-based &lt;code&gt;Collator&lt;/code&gt;. &lt;code&gt;RuleBasedCollator&lt;/code&gt; maps characters to sort keys.</source>
          <target state="translated">&lt;code&gt;RuleBasedCollator&lt;/code&gt; 클래스의 구상 서브 클래스입니다 &lt;code&gt;Collator&lt;/code&gt; 간단한 데이터 드리븐의 테이블 Collator를 제공합니다. 이 클래스를 사용하면 사용자 정의 된 테이블 기반 &lt;code&gt;Collator&lt;/code&gt; 를 작성할 수 있습니다 . &lt;code&gt;RuleBasedCollator&lt;/code&gt; 는 문자를 정렬하여 키를 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="5098c81b7457412bf4917d02e9a1dfef85b5fe26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Runnable&lt;/code&gt; interface should be implemented by any class whose instances are intended to be executed by a thread.</source>
          <target state="translated">&lt;code&gt;Runnable&lt;/code&gt; 인터페이스는 스레드가 해당 인스턴스를 실행하는 모든 클래스에 의해 구현되어야한다.</target>
        </trans-unit>
        <trans-unit id="d8f15f8d81c303338ba2b966d98884e4108ae0f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Runnable&lt;/code&gt; interface should be implemented by any class whose instances are intended to be executed by a thread. The class must define a method of no arguments called &lt;code&gt;run&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Runnable&lt;/code&gt; 인터페이스는 스레드가 해당 인스턴스를 실행하는 모든 클래스에 의해 구현되어야한다. 클래스는 &lt;code&gt;run&lt;/code&gt; 이라는 인수가없는 메소드를 정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d9f88a23d98de0fb1ab893f3f7409818a9bbc61d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SMART&lt;/code&gt; behaviour handles the common &quot;end of day&quot; 24:00 value. Processing in &lt;code&gt;LENIENT&lt;/code&gt; mode also produces the same result:</source>
          <target state="translated">&lt;code&gt;SMART&lt;/code&gt; 의 동작은 24:00 값 일반적인 &quot;하루의 끝을&quot;처리합니다. &lt;code&gt;LENIENT&lt;/code&gt; 모드 에서 처리해 도 동일한 결과가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="41ead63f7c6236fad7e6307adb65902f694060ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SQLException&lt;/code&gt; the driver is about to throw</source>
          <target state="translated">&lt;code&gt;SQLException&lt;/code&gt; 드라이버는 던져에 관한 것입니다</target>
        </trans-unit>
        <trans-unit id="1740ef1e8ee2276f649ff5e25da7294fc66b2bc6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SQLInputImpl&lt;/code&gt; class provides a set of reader methods analogous to the &lt;code&gt;ResultSet&lt;/code&gt; getter methods. These methods make it possible to read the values in an &lt;code&gt;SQLInputImpl&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;SQLInputImpl&lt;/code&gt; 클래스는 유사 리더 메소드 세트 제공 &lt;code&gt;ResultSet&lt;/code&gt; 게터 방법. 이 메소드를 사용하면 &lt;code&gt;SQLInputImpl&lt;/code&gt; 오브젝트 의 값을 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7e31e968e4e78d48b334cc0a2fd729e775d78ea9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SQLInputImpl&lt;/code&gt; class provides a set of reader methods analogous to the &lt;code&gt;ResultSet&lt;/code&gt; getter methods. These methods make it possible to read the values in an &lt;code&gt;SQLInputImpl&lt;/code&gt; object. The method &lt;code&gt;wasNull&lt;/code&gt; is used to determine whether the last value read was SQL NULL.</source>
          <target state="translated">&lt;code&gt;SQLInputImpl&lt;/code&gt; 클래스는 유사 리더 메소드 세트 제공 &lt;code&gt;ResultSet&lt;/code&gt; 게터 방법. 이 메소드를 사용하면 &lt;code&gt;SQLInputImpl&lt;/code&gt; 오브젝트 의 값을 읽을 수 있습니다 . &lt;code&gt;wasNull&lt;/code&gt; 메소드 는 마지막으로 읽은 값이 SQL NULL인지 판별하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="64049cd592e8eb0ec78aec4cd353b6f5aabba963" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; completed the operation, and is available to process similar calls.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 작업을 완료하고, 유사한 전화를 처리 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="077b184f78f7e5525918d7fe92403baaa5f9a42d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; has just finished handshaking.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 단지 핸드 쉐이크를 완료했습니다.</target>
        </trans-unit>
        <trans-unit id="df118613b41d79c011b7a0bc6c7f48652d896d51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; is not currently handshaking.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 현재 핸드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1926ac57988ad07ff17731c0dbc1dd707e5b1e02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; must send data to the remote side before handshaking can continue, so &lt;code&gt;SSLEngine.wrap()&lt;/code&gt; should be called.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; , 그래서 전에 핸드 쉐이크를 계속 원격 측에 데이터를 전송해야 &lt;code&gt;SSLEngine.wrap()&lt;/code&gt; 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="02fa5e3b89e2cea3ead9db69cbe845f18df35ab2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; needs the results of one (or more) delegated tasks before handshaking can continue.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 핸드 쉐이크를 계속하기 전에 하나 (또는 그 이상)의 위임 된 작업의 결과를 필요로한다.</target>
        </trans-unit>
        <trans-unit id="082a3cd7613f1264f8b5206e5fbed35f61a0dff0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; needs to receive data from the remote side before handshaking can continue.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 핸드 쉐이크를 계속하기 전에 원격 측으로부터 데이터를 수신 할 필요가있다.</target>
        </trans-unit>
        <trans-unit id="a7d5c985500f42653f476fc251500be91c49e1bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; needs to unwrap before handshaking can continue.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 핸드 쉐이크를 계속하기 전에 포장을 푸는 필요가있다.</target>
        </trans-unit>
        <trans-unit id="d352a14052137339f442e35be68221c08d8d1336" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; produces/consumes complete SSL/TLS packets only, and does not store application data internally between calls to &lt;code&gt;wrap()/unwrap()&lt;/code&gt;. Thus input and output &lt;code&gt;ByteBuffer&lt;/code&gt;s must be sized appropriately to hold the maximum record that can be produced. Calls to &lt;a href=&quot;sslsession#getPacketBufferSize--&quot;&gt;&lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sslsession#getApplicationBufferSize--&quot;&gt;&lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt;&lt;/a&gt; should be used to determine the appropriate buffer sizes. The size of the outbound application data buffer generally does not matter. If buffer conditions do not allow for the proper consumption/production of data, the application must determine (via &lt;a href=&quot;sslengineresult&quot;&gt;&lt;code&gt;SSLEngineResult&lt;/code&gt;&lt;/a&gt;) and correct the problem, and then try the call again.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 의이 / 생산에만 완전한 SSL / TLS 패킷을 소모하며, 호출시 내부 응용 프로그램 데이터를 저장하지 않습니다 &lt;code&gt;wrap()/unwrap()&lt;/code&gt; . 따라서 입력 및 출력 &lt;code&gt;ByteBuffer&lt;/code&gt; 의 크기는 생성 할 수있는 최대 레코드를 보유 할 수있는 적절한 크기 여야합니다. 적절한 버퍼 크기를 결정하려면 &lt;a href=&quot;sslsession#getPacketBufferSize--&quot;&gt; &lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;sslsession#getApplicationBufferSize--&quot;&gt; &lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt; &lt;/a&gt; 호출 해야합니다. 아웃 바운드 애플리케이션 데이터 버퍼의 크기는 일반적으로 중요하지 않습니다. 버퍼 조건이 데이터의 올바른 소비 / 생산을 허용하지 않는 경우 애플리케이션은 &lt;a href=&quot;sslengineresult&quot;&gt; &lt;code&gt;SSLEngineResult&lt;/code&gt; &lt;/a&gt; 를 통해 문제점을 판별 하고 수정 한 후 호출을 다시 시도해야합니다.</target>
        </trans-unit>
        <trans-unit id="d281a4755dd5b701c487bc1d549aca11bc928e84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; produces/consumes complete SSL/TLS/DTLS packets only, and does not store application data internally between calls to &lt;code&gt;wrap()/unwrap()&lt;/code&gt;. Thus input and output &lt;code&gt;ByteBuffer&lt;/code&gt;s must be sized appropriately to hold the maximum record that can be produced. Calls to &lt;a href=&quot;sslsession#getPacketBufferSize()&quot;&gt;&lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sslsession#getApplicationBufferSize()&quot;&gt;&lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt;&lt;/a&gt; should be used to determine the appropriate buffer sizes. The size of the outbound application data buffer generally does not matter. If buffer conditions do not allow for the proper consumption/production of data, the application must determine (via &lt;a href=&quot;sslengineresult&quot;&gt;&lt;code&gt;SSLEngineResult&lt;/code&gt;&lt;/a&gt;) and correct the problem, and then try the call again.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 의이 / 생산 완전한 SSL / TLS / DTLS 패킷만을 소모하며,에 호출 사이에 저장하지 응용 프로그램 데이터를 내부적으로 수행 &lt;code&gt;wrap()/unwrap()&lt;/code&gt; . 따라서 입력 및 출력 &lt;code&gt;ByteBuffer&lt;/code&gt; 는 생성 할 수있는 최대 레코드를 보유 할 수 있도록 적절한 크기를 지정해야합니다. &lt;a href=&quot;sslsession#getPacketBufferSize()&quot;&gt; &lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;sslsession#getApplicationBufferSize()&quot;&gt; &lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt; &lt;/a&gt; 호출을 사용하여 적절한 버퍼 크기를 결정해야합니다. 아웃 바운드 애플리케이션 데이터 버퍼의 크기는 일반적으로 중요하지 않습니다. 버퍼 조건이 데이터의 적절한 소비 / 생산을 허용하지 않는 경우 애플리케이션은 문제를 확인하고 ( &lt;a href=&quot;sslengineresult&quot;&gt; &lt;code&gt;SSLEngineResult&lt;/code&gt; &lt;/a&gt; 를 통해 ) 수정 한 다음 호출을 다시 시도해야합니다.</target>
        </trans-unit>
        <trans-unit id="b752ac795479df72fea9b170d743467ba0f0cfba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; was not able to process the operation because there are not enough bytes available in the destination buffer to hold the result.</source>
          <target state="translated">그만큼 &lt;code&gt;SSLEngine&lt;/code&gt; 결과를 저장하는 대상 버퍼에 충분한 바이트가 없기 때문에 작업을 처리 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="eaeaedd8a0decde5ead8adb6e73dcb183ff095c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; was not able to unwrap the incoming data because there were not enough source bytes available to make a complete packet.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 충분한 소스가 전체 패킷을 만들기 위해 사용할 수 바이트가 없었기 때문에 들어오는 데이터 랩을 해제 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="cbaeb5659c8aac8f7fee34b65d2504a15d654f38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLSocket&lt;/code&gt; class provides much of the same security functionality, but all of the inbound and outbound data is automatically transported using the underlying &lt;a href=&quot;../../../java/net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt;, which by design uses a blocking model. While this is appropriate for many applications, this model does not provide the scalability required by large servers.</source>
          <target state="translated">&lt;code&gt;SSLSocket&lt;/code&gt; 클래스는 거의 같은 보안 기능을 제공하지만, 인바운드 및 아웃 바운드의 모든 데이터가 자동으로 기본 사용하여 전송되는 &lt;a href=&quot;../../../java/net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt; 디자인에 의해 차단 모델을 사용합니다. 이것은 많은 응용 프로그램에 적합하지만이 모델은 대규모 서버에 필요한 확장 성을 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0096287b7ac27b301cefed5627b43cb896febf8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SchemaFactory&lt;/code&gt; builtin system-default implementation is only required to support the &lt;a href=&quot;http://www.w3.org/TR/xmlschema-1&quot;&gt;W3C XML Schema 1.0&lt;/a&gt;, but may support additional &lt;a href=&quot;#schemaLanguage&quot;&gt;schema languages&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SchemaFactory&lt;/code&gt; 를의 내장 시스템 디폴트의 구현 만 지원하는 데 필요한 &lt;a href=&quot;http://www.w3.org/TR/xmlschema-1&quot;&gt;W3C XML 스키마 1.0&lt;/a&gt; 만 추가 지원할 수 &lt;a href=&quot;#schemaLanguage&quot;&gt;스키마 언어&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="67002f2853371825d4f380e6151673d61fd862c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngine&lt;/code&gt; implementation version.</source>
          <target state="translated">&lt;code&gt;ScriptEngine&lt;/code&gt; 구현의 버젼.</target>
        </trans-unit>
        <trans-unit id="f25a0860dae0919f1e2c083b37f6094e4c1e6bad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngine&lt;/code&gt; that created this &lt;code&gt;CompiledScript&lt;/code&gt;</source>
          <target state="translated">이 &lt;code&gt;CompiledScript&lt;/code&gt; 를 생성 한 &lt;code&gt;ScriptEngine&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e21343e7ca5145a39ccb5bfd47f5b581373d98e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineFactory&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ScriptEngineFactory&lt;/code&gt; 에</target>
        </trans-unit>
        <trans-unit id="b665ef5d411bf64411a13e786d5fc2ae59afce43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineManager&lt;/code&gt; implements a discovery and instantiation mechanism for &lt;code&gt;ScriptEngine&lt;/code&gt; classes and also maintains a collection of key/value pairs storing state shared by all engines created by the Manager.</source>
          <target state="translated">&lt;code&gt;ScriptEngineManager&lt;/code&gt; 는를 위한 검색 및 인스턴스화기구 구현 &lt;code&gt;ScriptEngine&lt;/code&gt; 클래스 또한 관리자 작성한 모든 엔진에 의해 공유 상태를 저장하는 키 / 값 쌍의 컬렉션을 유지한다.</target>
        </trans-unit>
        <trans-unit id="bb930e4838810a193fdb5c27c289e1b3c97321a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineManager&lt;/code&gt; implements a discovery and instantiation mechanism for &lt;code&gt;ScriptEngine&lt;/code&gt; classes and also maintains a collection of key/value pairs storing state shared by all engines created by the Manager. This class uses the service provider mechanism described in the &lt;a href=&quot;../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class to enumerate all the implementations of &lt;code&gt;ScriptEngineFactory&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ScriptEngineManager&lt;/code&gt; 는를 위한 검색 및 인스턴스화기구 구현 &lt;code&gt;ScriptEngine&lt;/code&gt; 클래스 또한 관리자 작성한 모든 엔진에 의해 공유 상태를 저장하는 키 / 값 쌍의 컬렉션을 유지한다. 이 클래스는 &lt;a href=&quot;../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; 클래스에 설명 된 서비스 공급자 메커니즘을 사용하여 &lt;code&gt;ScriptEngineFactory&lt;/code&gt; 의 모든 구현을 열거합니다 .</target>
        </trans-unit>
        <trans-unit id="e8ac26f4b46b05f20c281cbfe3a63c1a0d4d63f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineManager&lt;/code&gt; implements a discovery and instantiation mechanism for &lt;code&gt;ScriptEngine&lt;/code&gt; classes and also maintains a collection of key/value pairs storing state shared by all engines created by the Manager. This class uses the service provider mechanism to enumerate all the implementations of &lt;code&gt;ScriptEngineFactory&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ScriptEngineManager&lt;/code&gt; 는를 위한 검색 및 인스턴스화기구 구현 &lt;code&gt;ScriptEngine&lt;/code&gt; 클래스 또한 관리자 작성한 모든 엔진에 의해 공유 상태를 저장하는 키 / 값 쌍의 컬렉션을 유지한다. 이 클래스는 서비스 제공 업체 메커니즘을 사용하여 모든 &lt;code&gt;ScriptEngineFactory&lt;/code&gt; 구현을 열거합니다 .</target>
        </trans-unit>
        <trans-unit id="c8f5248bd1e6ed1326e622b205ee4a45bbc651cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineManager&lt;/code&gt; provides a method to return a list of all these factories as well as utility methods which look up factories on the basis of language name, file extension and mime type.</source>
          <target state="translated">&lt;code&gt;ScriptEngineManager&lt;/code&gt; 는은 으로 잘 언어 이름, 파일 확장자 및 MIME 타입에 근거하여 공장을 찾아 유틸리티 방법으로 이러한 모든 공장의 목록을 반환하는 방법을 제공한다.</target>
        </trans-unit>
        <trans-unit id="901dec5a90ef8a0878213de32ad7798df415e097" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineManager&lt;/code&gt; uses the service provider mechanism described in the</source>
          <target state="translated">&lt;code&gt;ScriptEngineManager&lt;/code&gt; 는은 에 설명 서비스 제공자 메커니즘을 사용</target>
        </trans-unit>
        <trans-unit id="c74549e06bd34285399a1ea925354aef44983aef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineManager&lt;/code&gt; uses the service-provider loader mechanism described in the &lt;a href=&quot;../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class to obtain instances of &lt;code&gt;ScriptEngineFactory&lt;/code&gt; instances. See &lt;a href=&quot;scriptenginemanager#%3Cinit%3E()&quot;&gt;&lt;code&gt;ScriptEngineManager()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;scriptenginemanager#%3Cinit%3E(java.lang.ClassLoader)&quot;&gt;&lt;code&gt;ScriptEngineManager(java.lang.ClassLoader)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ScriptEngineManager&lt;/code&gt; 는은 에 설명 서비스 제공자 로더기구 사용 &lt;a href=&quot;../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; 의&lt;/a&gt; 인스턴스를 획득 할 클래스 &lt;code&gt;ScriptEngineFactory&lt;/code&gt; 인스턴스. &lt;a href=&quot;scriptenginemanager#%3Cinit%3E()&quot;&gt; &lt;code&gt;ScriptEngineManager()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;scriptenginemanager#%3Cinit%3E(java.lang.ClassLoader)&quot;&gt; &lt;code&gt;ScriptEngineManager(java.lang.ClassLoader)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="932ad5c0b4a4f7d61a4d48e2e85b2a5aec990bf2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Scrollbar&lt;/code&gt; class embodies a scroll bar, a familiar user-interface object.</source>
          <target state="translated">&lt;code&gt;Scrollbar&lt;/code&gt; 클래스는 스크롤 바, 친숙한 사용자 인터페이스 객체를 구현한다.</target>
        </trans-unit>
        <trans-unit id="5630c5e07781b19f55a9c82b7919e0cb4c1d7533" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Scrollbar&lt;/code&gt; class embodies a scroll bar, a familiar user-interface object. A scroll bar provides a convenient means for allowing a user to select from a range of values. The following three vertical scroll bars could be used as slider controls to pick the red, green, and blue components of a color:</source>
          <target state="translated">&lt;code&gt;Scrollbar&lt;/code&gt; 클래스는 스크롤 바, 친숙한 사용자 인터페이스 객체를 구현한다. 스크롤 막대는 사용자가 값 범위에서 선택할 수있는 편리한 수단을 제공합니다. 다음 세 개의 수직 스크롤 막대를 슬라이더 컨트롤로 사용하여 색상의 빨강, 녹색 및 파랑 구성 요소를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dcf2e0bf99eab15ad6a0fa15e39d7a6c2e33fef8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SearchResult&lt;/code&gt; may also contain attributes of the matching object if the &lt;code&gt;cons&lt;/code&gt; argument specifies that attributes be returned.</source>
          <target state="translated">&lt;code&gt;SearchResult&lt;/code&gt; 경우도 일치하는 객체의 속성을 포함 할 수있다 &lt;code&gt;cons&lt;/code&gt; 속성 인수 지정이 반환 될 수있다.</target>
        </trans-unit>
        <trans-unit id="eabc9dbc1a3de0e0e126d5d1a67a58df32a7962f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SecurityManager&lt;/code&gt; class contains many methods with names that begin with the word &lt;code&gt;check&lt;/code&gt;. These methods are called by various methods in the Java libraries before those methods perform certain potentially sensitive operations. The invocation of such a &lt;code&gt;check&lt;/code&gt; method typically looks like this:</source>
          <target state="translated">&lt;code&gt;SecurityManager&lt;/code&gt; 클래스는 단어로 시작하는 이름을 가진 많은 방법이 포함되어 &lt;code&gt;check&lt;/code&gt; . 이러한 메소드는 잠재적으로 민감한 특정 조작을 수행하기 전에 Java 라이브러리의 다양한 메소드에 의해 호출됩니다. 이러한 &lt;code&gt;check&lt;/code&gt; 메소드 의 호출은 일반적으로 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cdf333c83d829b3401cd3328628d6c609f64f31a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Sequencer&lt;/code&gt; interface includes methods for the following basic MIDI sequencer operations:</source>
          <target state="translated">&lt;code&gt;Sequencer&lt;/code&gt; 인터페이스는 다음과 같은 기본적인 MIDI 시퀀서 조작이 포함됩니다 :</target>
        </trans-unit>
        <trans-unit id="ca4629da4215ec3fb3d7c910ce572fca6f512771" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialArray&lt;/code&gt; class provides a constructor for creating a &lt;code&gt;SerialArray&lt;/code&gt; instance from an &lt;code&gt;Array&lt;/code&gt; object, methods for getting the base type and the SQL name for the base type, and methods for copying all or part of a &lt;code&gt;SerialArray&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;SerialArray&lt;/code&gt; 클래스는 생성하는 생성자를 제공 &lt;code&gt;SerialArray&lt;/code&gt; 에서 인스턴스를 &lt;code&gt;Array&lt;/code&gt; 객체, 기본 유형과 기본 유형의 SQL 이름 및 전부 또는 일부 복사하는 방법 취득하기위한 방법 &lt;code&gt;SerialArray&lt;/code&gt; 객체를.</target>
        </trans-unit>
        <trans-unit id="3613b9a6953562b14aa7159f20c01879def263ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialArray&lt;/code&gt; class provides a constructor for creating a &lt;code&gt;SerialArray&lt;/code&gt; instance from an Array object, methods for getting the base type and the SQL name for the base type, and methods for copying all or part of a &lt;code&gt;SerialArray&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;SerialArray&lt;/code&gt; 클래스는 생성하는 생성자를 제공 &lt;code&gt;SerialArray&lt;/code&gt; Array 객체로부터 인스턴스를 기본 유형과 기본 유형의 SQL 이름 및 전부 또는 일부 복사하는 방법 취득하기위한 방법 &lt;code&gt;SerialArray&lt;/code&gt; 객체를.</target>
        </trans-unit>
        <trans-unit id="b2b0eceea94ee3adc7c8249de1bfdf76c94557a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialBlob&lt;/code&gt; class provides a constructor for creating an instance from a &lt;code&gt;Blob&lt;/code&gt; object. Note that the &lt;code&gt;Blob&lt;/code&gt; object should have brought the SQL &lt;code&gt;BLOB&lt;/code&gt; value's data over to the client before a &lt;code&gt;SerialBlob&lt;/code&gt; object is constructed from it. The data of an SQL &lt;code&gt;BLOB&lt;/code&gt; value can be materialized on the client as an array of bytes (using the method &lt;code&gt;Blob.getBytes&lt;/code&gt;) or as a stream of uninterpreted bytes (using the method &lt;code&gt;Blob.getBinaryStream&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;SerialBlob&lt;/code&gt; 의 클래스는로부터 인스턴스를 작성하기위한 생성자 제공 &lt;code&gt;Blob&lt;/code&gt; 객체. 주의 &lt;code&gt;Blob&lt;/code&gt; 객체가 SQL 건네 줄 필요 &lt;code&gt;BLOB&lt;/code&gt; 의 사전이 클라이언트에 걸쳐 값의 데이터를 &lt;code&gt;SerialBlob&lt;/code&gt; 의 객체는로 구성된다. 는 SQL의 데이터 &lt;code&gt;BLOB&lt;/code&gt; 의 값 (메소드 사용 바이트의 배열로 클라이언트에 구체화 될 수 &lt;code&gt;Blob.getBytes&lt;/code&gt; 을 ) 또는 해석의 바이트 스트림으로 (있어서 사용 &lt;code&gt;Blob.getBinaryStream&lt;/code&gt; 을 ).</target>
        </trans-unit>
        <trans-unit id="a36b2be101ab96842813d3879e3c76a7ca051531" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialBlob&lt;/code&gt;class provides a constructor for creating an instance from a Blob object. Note that the Blob object should have brought the SQL BLOB value's data over to the client before a &lt;code&gt;SerialBlob&lt;/code&gt;object is constructed from it. The data of an SQL BLOB value can be materialized on the client as an array of bytes (using the method &lt;code&gt;Blob.getBytes&lt;/code&gt;) or as a stream of uninterpreted bytes (using the method &lt;code&gt;Blob.getBinaryStream&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;SerialBlob&lt;/code&gt; 의 클래스는 Blob 객체로부터 인스턴스를 작성하기위한 생성자를 제공한다. Blob 개체는 &lt;code&gt;SerialBlob&lt;/code&gt; 개체가 생성 되기 전에 SQL BLOB 값의 데이터를 클라이언트로 가져 왔어 야 합니다. 는 SQL BLOB 값의 데이터 (상기 방법에 사용 된 바이트의 배열로 클라이언트에서 구체화 될 수 &lt;code&gt;Blob.getBytes&lt;/code&gt; 을 ) 또는 해석의 바이트 스트림으로 (있어서 사용 &lt;code&gt;Blob.getBinaryStream&lt;/code&gt; 을 ).</target>
        </trans-unit>
        <trans-unit id="0878b5252f99568199e6ce8e7039ce8b4b616d65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialClob&lt;/code&gt; class provides a constructor for creating an instance from a &lt;code&gt;Clob&lt;/code&gt; object. Note that the &lt;code&gt;Clob&lt;/code&gt; object should have brought the SQL &lt;code&gt;CLOB&lt;/code&gt; value's data over to the client before a &lt;code&gt;SerialClob&lt;/code&gt; object is constructed from it. The data of an SQL &lt;code&gt;CLOB&lt;/code&gt; value can be materialized on the client as a stream of Unicode characters.</source>
          <target state="translated">&lt;code&gt;SerialClob&lt;/code&gt; 의 클래스는로부터 인스턴스를 작성하기위한 생성자 제공 &lt;code&gt;Clob&lt;/code&gt; 객체. 주의 &lt;code&gt;Clob&lt;/code&gt; 객체는 SQL에 건네 줄 필요 &lt;code&gt;CLOB&lt;/code&gt; 의 사전이 클라이언트에 걸쳐 값의 데이터를 &lt;code&gt;SerialClob&lt;/code&gt; 의 객체는로 구성된다. SQL &lt;code&gt;CLOB&lt;/code&gt; 값 의 데이터는 유니 코드 문자 스트림으로 클라이언트에서 구체화 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7407cdc2547618da6d7ac9d8e6b269f7ffc8487e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialClob&lt;/code&gt; class provides a constructor for creating an instance from a &lt;code&gt;Clob&lt;/code&gt; object. Note that the &lt;code&gt;Clob&lt;/code&gt; object should have brought the SQL CLOB value's data over to the client before a &lt;code&gt;SerialClob&lt;/code&gt; object is constructed from it. The data of an SQL CLOB value can be materialized on the client as a stream of Unicode characters.</source>
          <target state="translated">&lt;code&gt;SerialClob&lt;/code&gt; 의 클래스는로부터 인스턴스를 작성하기위한 생성자 제공 &lt;code&gt;Clob&lt;/code&gt; 객체. 주의 &lt;code&gt;Clob&lt;/code&gt; 객체가되기 전에 클라이언트에 SQL CLOB 값의 데이터를 건네 줄 필요 &lt;code&gt;SerialClob&lt;/code&gt; 의 객체는로 구성된다. SQL CLOB 값의 데이터는 유니 코드 문자 스트림으로 클라이언트에서 구체화 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="531569263cbf3f2d83fdebfe2dd7a42eb6537822" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialRef&lt;/code&gt; class provides a constructor for creating a &lt;code&gt;SerialRef&lt;/code&gt; instance from a &lt;code&gt;Ref&lt;/code&gt; object and provides methods for getting and setting the &lt;code&gt;Ref&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;SerialRef&lt;/code&gt; 의 클래스는 생성하는 생성자를 제공 &lt;code&gt;SerialRef&lt;/code&gt; 의 A로부터 인스턴스를 &lt;code&gt;Ref&lt;/code&gt; 객체와 가져오고 설정하는 방법을 제공합니다 &lt;code&gt;Ref&lt;/code&gt; 객체를.</target>
        </trans-unit>
        <trans-unit id="8a6014458943ef8b69cde5c3b67bcb9d35b9d8a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialRef&lt;/code&gt; class provides a constructor for creating a &lt;code&gt;SerialRef&lt;/code&gt; instance from a &lt;code&gt;Ref&lt;/code&gt; type and provides methods for getting and setting the &lt;code&gt;Ref&lt;/code&gt; object type.</source>
          <target state="translated">&lt;code&gt;SerialRef&lt;/code&gt; 의 클래스는 생성하는 생성자를 제공 &lt;code&gt;SerialRef&lt;/code&gt; 의 A로부터 인스턴스를 &lt;code&gt;Ref&lt;/code&gt; 유형과 가져오고 설정하는 방법을 제공합니다 &lt;code&gt;Ref&lt;/code&gt; 객체 유형을.</target>
        </trans-unit>
        <trans-unit id="331ac575055962225f9ade9cd92c609c9e5e6ec3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialStruct&lt;/code&gt; class provides a constructor for creating an instance from a &lt;code&gt;Struct&lt;/code&gt; object, a method for retrieving the SQL type name of the SQL structured type in the database, and methods for retrieving its attribute values.</source>
          <target state="translated">&lt;code&gt;SerialStruct&lt;/code&gt; 에의 클래스 A로부터 인스턴스를 생성하는 생성자 제공 &lt;code&gt;Struct&lt;/code&gt; 의 특성 값을 검색하는 개체 데이터베이스에 SQL 구조형의 SQL 타입 명을 검색하기위한 방법, 및 방법.</target>
        </trans-unit>
        <trans-unit id="2d6a25bea447e545dee0ec116fce9cf07f17df31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Set&lt;/code&gt; interface places additional stipulations, beyond those inherited from the &lt;code&gt;Collection&lt;/code&gt; interface, on the contracts of all constructors and on the contracts of the &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt; methods. Declarations for other inherited methods are also included here for convenience. (The specifications accompanying these declarations have been tailored to the &lt;code&gt;Set&lt;/code&gt; interface, but they do not contain any additional stipulations.)</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 인터페이스로부터 상속 능가하는 추가 규정을 배치 &lt;code&gt;Collection&lt;/code&gt; 모든 생성자의 계약에와의 계약에 인터페이스 &lt;code&gt;add&lt;/code&gt; , &lt;code&gt;equals&lt;/code&gt; 및 &lt;code&gt;hashCode&lt;/code&gt; 방법. 편의상 다른 상속 된 메소드에 대한 선언도 여기에 포함됩니다. (이 선언과 함께 제공되는 사양은 &lt;code&gt;Set&lt;/code&gt; 인터페이스 에 맞게 조정 되었지만 추가 규정은 포함되어 있지 않습니다.)</target>
        </trans-unit>
        <trans-unit id="ca2825253af57c9c2e6a3d7675526c2242a40a0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Set&lt;/code&gt; of Principals associated with this &lt;code&gt;Subject&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 이 관련 지을 수 있었던 Principal의 &lt;code&gt;Subject&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="875fbbb93524788cbec9d10a7f9b1d4a78fcb3af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SetOfIntegerSyntax&lt;/code&gt; object's value is actually stored in &quot;</source>
          <target state="translated">&lt;code&gt;SetOfIntegerSyntax&lt;/code&gt; 객체의 값은 실제로 &quot;에 저장됩니다</target>
        </trans-unit>
        <trans-unit id="9603523cfc3ca1974d98e9c77fcd84e7643b7407" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Shape.contains()&lt;/code&gt; method allows a &lt;code&gt;Shape&lt;/code&gt; implementation to conservatively return &lt;code&gt;false&lt;/code&gt; when:</source>
          <target state="translated">&lt;code&gt;Shape.contains()&lt;/code&gt; 방법은 허용 &lt;code&gt;Shape&lt;/code&gt; 보수적 반환에 구현 &lt;code&gt;false&lt;/code&gt; 때를 :</target>
        </trans-unit>
        <trans-unit id="a8defc0421e314237795f3e16a9ee691e29653b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Shape.intersects()&lt;/code&gt; method allows a &lt;code&gt;Shape&lt;/code&gt; implementation to conservatively return &lt;code&gt;true&lt;/code&gt; when:</source>
          <target state="translated">&lt;code&gt;Shape.intersects()&lt;/code&gt; 메서드를 사용하면 &lt;code&gt;Shape&lt;/code&gt; 구현 이 다음과 같은 경우 에 보수적으로 &lt;code&gt;true&lt;/code&gt; 를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3459b813a9488c53040b4772588afcffbba02ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Shape&lt;/code&gt; interface provides definitions for objects that represent some form of geometric shape.</source>
          <target state="translated">&lt;code&gt;Shape&lt;/code&gt; 인터페이스는 하등의 기하학적 인 형태를 나타내는 객체의 정의를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5a0a83f1111db09d21b3f0665dcf9e3f26c253a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Shape&lt;/code&gt; interface provides definitions for objects that represent some form of geometric shape. The &lt;code&gt;Shape&lt;/code&gt; is described by a &lt;a href=&quot;geom/pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; object, which can express the outline of the &lt;code&gt;Shape&lt;/code&gt; as well as a rule for determining how the outline divides the 2D plane into interior and exterior points. Each &lt;code&gt;Shape&lt;/code&gt; object provides callbacks to get the bounding box of the geometry, determine whether points or rectangles lie partly or entirely within the interior of the &lt;code&gt;Shape&lt;/code&gt;, and retrieve a &lt;code&gt;PathIterator&lt;/code&gt; object that describes the trajectory path of the &lt;code&gt;Shape&lt;/code&gt; outline.</source>
          <target state="translated">&lt;code&gt;Shape&lt;/code&gt; 인터페이스는 하등의 기하학적 인 형태를 나타내는 객체의 정의를 제공합니다. &lt;code&gt;Shape&lt;/code&gt; a로 설명 &lt;a href=&quot;geom/pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt; 의 윤곽을 표현할 수있는 객체 &lt;code&gt;Shape&lt;/code&gt; 결정뿐만 아니라, 어떻게 규칙을 내부 및 외부 지점에 윤곽 나누는 차원 평면. 각 &lt;code&gt;Shape&lt;/code&gt; 객체는 지오메트리의 경계 상자를 가져오고, 점 또는 사각형이 &lt;code&gt;Shape&lt;/code&gt; 내부에 부분적으로 또는 전체적으로 있는지 여부를 결정 하고 , &lt;code&gt;Shape&lt;/code&gt; 외곽선 의 궤적 경로를 설명 하는 &lt;code&gt;PathIterator&lt;/code&gt; 객체를 검색하는 콜백을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="91cb94f76bb487d7d5e8cf2114b6bb48e6030390" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Shape&lt;/code&gt; is transformed from user space to device space using the current &lt;code&gt;Transform&lt;/code&gt; in the &lt;code&gt;Graphics2D&lt;/code&gt; context.</source>
          <target state="translated">&lt;code&gt;Shape&lt;/code&gt; 전류를 이용하여 사용자 공간으로부터 디바이스 공간 변환 &lt;code&gt;Transform&lt;/code&gt; 에서 &lt;code&gt;Graphics2D&lt;/code&gt; 컨텍스트.</target>
        </trans-unit>
        <trans-unit id="d9ff50c0bd145a3782f8a408ac09f816b6f9f1af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; class is an implementation of &lt;a href=&quot;graphicattribute&quot;&gt;&lt;code&gt;GraphicAttribute&lt;/code&gt;&lt;/a&gt; that draws shapes in a &lt;a href=&quot;textlayout&quot;&gt;&lt;code&gt;TextLayout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; 에의 클래스의 구현입니다 &lt;a href=&quot;graphicattribute&quot;&gt; &lt;code&gt;GraphicAttribute&lt;/code&gt; 에&lt;/a&gt; A의 모양을 그립니다 &lt;a href=&quot;textlayout&quot;&gt; &lt;code&gt;TextLayout&lt;/code&gt; 의&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="373802f5789bc9daaea49a79a19d0057b2e71fa7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SheetCollate&lt;/code&gt; attribute interacts with the &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; attribute. The &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; attribute describes the collation of entire documents, and the &lt;code&gt;SheetCollate&lt;/code&gt; attribute describes the semantics of collating individual pages within a document.</source>
          <target state="translated">&lt;code&gt;SheetCollate&lt;/code&gt; 의 와 속성 상호 작용 &lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; &lt;/a&gt; 속성. &lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; &lt;/a&gt; 속성은 전체 문서의 정렬을 설명하고 &lt;code&gt;SheetCollate&lt;/code&gt; 의 속성은 문서 내에서 개별 페이지를 대조의 의미를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="82b5163b0072dd0db2fd3d68224c70635d6db4aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Short&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;
 short&lt;/code&gt; in an object.</source>
          <target state="translated">&lt;code&gt;Short&lt;/code&gt; 클래스는, 원시 형의 값 랩 &lt;code&gt; short&lt;/code&gt; 객체에 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d62b26c182893a6a548e476a18690b63d473252" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Short&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;
 short&lt;/code&gt; in an object. An object of type &lt;code&gt;Short&lt;/code&gt; contains a single field whose type is &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Short&lt;/code&gt; 클래스는, 원시 형의 값 랩 &lt;code&gt; short&lt;/code&gt; 객체에 있습니다. &lt;code&gt;Short&lt;/code&gt; 유형의 객체 에는 유형이 &lt;code&gt;short&lt;/code&gt; 인 단일 필드가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="61061520eba3a069412253fc6b718281a7764587" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Short&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;short&lt;/code&gt; in an object.</source>
          <target state="translated">&lt;code&gt;Short&lt;/code&gt; 클래스는, 원시 형의 값 랩 &lt;code&gt;short&lt;/code&gt; 객체에 있습니다.</target>
        </trans-unit>
        <trans-unit id="5bd6d5314769fa94b169cf6fd6d3a5c0f5803d61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Short&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;short&lt;/code&gt; in an object. An object of type &lt;code&gt;Short&lt;/code&gt; contains a single field whose type is &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Short&lt;/code&gt; 클래스는, 원시 형의 값 랩 &lt;code&gt;short&lt;/code&gt; 객체에 있습니다. 유형의 객체 &lt;code&gt;Short&lt;/code&gt; 그의 형의 단일 필드가 포함되어 &lt;code&gt;short&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e78848e4ddc01a11ae115fca5cd98b1816f40ede" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SidesType&lt;/code&gt; instance to use for specifying that consecutive job pages should be printed upon front and back sides of consecutive media sheets, such that the orientation of each pair of pages on the medium would be correct for the reader as if for binding on the long edge.</source>
          <target state="translated">&lt;code&gt;SidesType&lt;/code&gt; 의 그 연속 작업 페이지를 지정하기 위해서 사용하는 경우는 연속하는 용지의 앞면과 뒷면,에 인쇄되어야하는 매체의 페이지의 각각의 쌍의 방향은 독자 올바른 것 같은 길이가 긴 변에 바인딩 것처럼 .</target>
        </trans-unit>
        <trans-unit id="55cb688b8746b92ba5f7fe95abd002ba3e7f27dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SidesType&lt;/code&gt; instance to use for specifying that consecutive job pages should be printed upon front and back sides of consecutive media sheets, such that the orientation of each pair of pages on the medium would be correct for the reader as if for binding on the short edge.</source>
          <target state="translated">&lt;code&gt;SidesType&lt;/code&gt; 의 그 연속 작업 페이지를 지정하기 위해서 사용하는 경우는 연속하는 용지의 앞면과 뒷면,에 인쇄되어야하는 매체의 페이지의 각각의 쌍의 방향은 독자 올바른 것 같은 단변 바인딩 것처럼 .</target>
        </trans-unit>
        <trans-unit id="6c8b634d32bf6d2741e1de3fa5ce509b4fe3413b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SidesType&lt;/code&gt; instance to use for specifying that consecutive job pages should be printed upon the same side of consecutive media sheets.</source>
          <target state="translated">&lt;code&gt;SidesType&lt;/code&gt; 의 인스턴스는 연속 작업 페이지를 연속 용지의 같은면에 인쇄 지정하기 위해서 사용합니다.</target>
        </trans-unit>
        <trans-unit id="cf5e4c26203f886b6a7a4f1b81f96c02a0a29697" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SignedResultsControl&lt;/code&gt; class might be defined as follows:</source>
          <target state="translated">&lt;code&gt;SignedResultsControl&lt;/code&gt; 에 다음과 같이 클래스를 정의 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="3a917286530fabb04fa41fccacd2711f46f2bddd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleScriptContext&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SimpleScriptContext&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca03fd6be029ed8ca889a60a8a508d0a4a1babe2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; class is the</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 클래스 인</target>
        </trans-unit>
        <trans-unit id="f454eae06e8c8450f0d9941d0498c44514cf1e53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Boolean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; Java 클래스 이름 값을 설명하는 예이다 &lt;code&gt;java.lang.Boolean&lt;/code&gt; 에 .</target>
        </trans-unit>
        <trans-unit id="639c3ab3a04fd48b0812edf7c08168f9b2abfe76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Byte&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; Java 클래스 이름 값을 설명하는 예이다 &lt;code&gt;java.lang.Byte&lt;/code&gt; 에 .</target>
        </trans-unit>
        <trans-unit id="6779cad3872976416b8715cdc2cae03f34516e84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Character&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; Java 클래스 이름 값을 설명하는 예이다 &lt;code&gt;java.lang.Character&lt;/code&gt; 에 .</target>
        </trans-unit>
        <trans-unit id="ccc12a9229fa28b212383ee48e5d6d48b5829469" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; Java 클래스 이름 값을 설명하는 예이다 &lt;code&gt;java.lang.Double&lt;/code&gt; 에 .</target>
        </trans-unit>
        <trans-unit id="3b4dbe56be7eeb7407783a82c785c69757959537" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Float&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; Java 클래스 이름 값을 설명하는 예이다 &lt;code&gt;java.lang.Float&lt;/code&gt; 에 .</target>
        </trans-unit>
        <trans-unit id="950ad58636d59dcea09852f3de50a8b54e4ec126" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Integer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; Java 클래스 이름 값을 설명하는 예이다 &lt;code&gt;java.lang.Integer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38105e6f78986a670b722ab3d041a7ff3901722e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Long&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; Java 클래스 이름 값을 설명하는 예이다 &lt;code&gt;java.lang.Long&lt;/code&gt; 의 .</target>
        </trans-unit>
        <trans-unit id="a28cf8d0823e5eefc4a4e7fc0bee61dc5592a17e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Short&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; Java 클래스 이름 값을 설명하는 예이다 &lt;code&gt;java.lang.Short&lt;/code&gt; 의 .</target>
        </trans-unit>
        <trans-unit id="820c357e21a5bd82921b5bccd1f7a3db183c43be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; Java 클래스 이름 값을 설명하는 예이다 &lt;code&gt;java.lang.String&lt;/code&gt; 의 .</target>
        </trans-unit>
        <trans-unit id="36b771fc8f2baca3d65ff467300137e5fa46b87f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Void&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; Java 클래스 이름 값을 설명하는 예이다 &lt;code&gt;java.lang.Void&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dbd2a7b98eeeeb0df1e9367af1772ffa7a82ff9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.math.BigDecimal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; Java 클래스 이름 값을 설명하는 예이다 &lt;code&gt;java.math.BigDecimal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98c8cbacf6c530dcd5198d36051672cced797c4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.math.BigInteger&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; Java 클래스 이름 값을 설명하는 예이다 &lt;code&gt;java.math.BigInteger&lt;/code&gt; 에 .</target>
        </trans-unit>
        <trans-unit id="53ea91ec792b961906f05193441b86fc1c764ce1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.util.Date&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; Java 클래스 이름 값을 설명하는 예이다 &lt;code&gt;java.util.Date&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9f782c191b744e88038240ceea9bf9b47ef00d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;javax.management.ObjectName&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; Java 클래스 이름 값을 설명하는 예이다 &lt;code&gt;javax.management.ObjectName&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5089a0cfc6b78ca8c8064c53b5b247055a7d6437" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Skeleton&lt;/code&gt; interface is used solely by the RMI implementation.</source>
          <target state="translated">&lt;code&gt;Skeleton&lt;/code&gt; 인터페이스는 RMI 구현에 의해서만 사용된다.</target>
        </trans-unit>
        <trans-unit id="2f21653116680d7405660374ff050723b7344530" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SocketAddress&lt;/code&gt; that the socket is bound to, or the &lt;code&gt;SocketAddress&lt;/code&gt; representing the loopback address if denied by the security manager, or &lt;code&gt;null&lt;/code&gt; if the channel's socket is not bound</source>
          <target state="translated">&lt;code&gt;SocketAddress&lt;/code&gt; 소켓이 바인딩되는, 또는 &lt;code&gt;SocketAddress&lt;/code&gt; 를 보안 관리자 또는 거부하는 경우 루프백 주소를 나타내는 &lt;code&gt;null&lt;/code&gt; 이 채널의 소켓의 바인드되어 있지 않은 경우</target>
        </trans-unit>
        <trans-unit id="ffa196c777d84951c5a2d919e8b5f1e36bdc950e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SourceDataLine&lt;/code&gt; interface provides a method for writing audio data to the data line's buffer. Applications that play or mix audio should write data to the source data line quickly enough to keep the buffer from underflowing (emptying), which could cause discontinuities in the audio that are perceived as clicks. Applications can use the &lt;a href=&quot;dataline#available()&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt; method defined in the &lt;code&gt;DataLine&lt;/code&gt; interface to determine the amount of data currently queued in the data line's buffer. The amount of data which can be written to the buffer without blocking is the difference between the buffer size and the amount of queued data. If the delivery of audio output stops due to underflow, a &lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt; event is generated. A &lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt; event is generated when the audio output resumes.</source>
          <target state="translated">&lt;code&gt;SourceDataLine&lt;/code&gt; 인터페이스는 상기 데이터 라인의 버퍼에 오디오 데이터를 기록하기위한 방법을 제공한다. 오디오를 재생하거나 믹싱하는 애플리케이션은 버퍼가 언더 플로 (비우기)되지 않도록 충분히 빠르게 소스 데이터 라인에 데이터를 써야하므로 클릭으로 인식되는 오디오의 불연속성이 발생할 수 있습니다. 애플리케이션은 &lt;code&gt;DataLine&lt;/code&gt; 인터페이스에 정의 된 사용 &lt;a href=&quot;dataline#available()&quot;&gt; &lt;code&gt;available&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 현재 데이터 라인의 버퍼에 대기중인 데이터의 양을 확인할 수 있습니다. 차단하지 않고 버퍼에 쓸 수있는 데이터의 양은 버퍼 크기와 대기중인 데이터의 양의 차이입니다. 언더 플로로 인해 오디오 출력 전달이 중지되면 &lt;a href=&quot;lineevent.type#STOP&quot;&gt; &lt;code&gt;STOP&lt;/code&gt; &lt;/a&gt; 이벤트가 생성됩니다. &lt;a href=&quot;lineevent.type#START&quot;&gt; &lt;code&gt;START&lt;/code&gt; &lt;/a&gt; 오디오 출력이 다시 시작되면 이벤트가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="18e018252e244e834ac16d7592161dec68491d6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SourceDataLine&lt;/code&gt; interface provides a method for writing audio data to the data line's buffer. Applications that play or mix audio should write data to the source data line quickly enough to keep the buffer from underflowing (emptying), which could cause discontinuities in the audio that are perceived as clicks. Applications can use the &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method defined in the &lt;code&gt;DataLine&lt;/code&gt; interface to determine the amount of data currently queued in the data line's buffer. The amount of data which can be written to the buffer without blocking is the difference between the buffer size and the amount of queued data. If the delivery of audio output stops due to underflow, a &lt;code&gt;&lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; event is generated. A &lt;code&gt;&lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; event is generated when the audio output resumes.</source>
          <target state="translated">&lt;code&gt;SourceDataLine&lt;/code&gt; 인터페이스는 상기 데이터 라인의 버퍼에 오디오 데이터를 기록하기위한 방법을 제공한다. 오디오를 재생하거나 믹싱하는 응용 프로그램은 버퍼의 언더 플로 (빈)를 방지 할 수있을 정도로 빠르게 소스 데이터 라인에 데이터를 기록해야하므로 클릭으로 인식되는 오디오의 불연속성이 발생할 수 있습니다. 애플리케이션은 &lt;code&gt;DataLine&lt;/code&gt; 인터페이스에 정의 된 사용 &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드를 사용하여 현재 데이터 라인의 버퍼에 대기중인 데이터의 양을 판별 할 수 있습니다. 차단하지 않고 버퍼에 쓸 수있는 데이터 양은 버퍼 크기와 대기중인 데이터 양의 차이입니다. 언더 플로로 인해 오디오 출력 전달이 중지되면 &lt;code&gt;&lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 이벤트가 생성됩니다. &lt;code&gt;&lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 오디오 출력이 다시 시작되면 이벤트가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="bf9d261cb6bf1230f6b0ef1139ddd997740f585e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SplashScreen&lt;/code&gt; class provides the API for controlling the splash screen. This class may be used to close the splash screen, change the splash screen image, get the splash screen native window position/size, and paint in the splash screen. It cannot be used to create the splash screen. You should use the options provided by the Java implementation for that.</source>
          <target state="translated">&lt;code&gt;SplashScreen&lt;/code&gt; 클래스는, 스플래쉬 화면을 제어하는 API를 제공합니다. 이 클래스는 시작 화면을 닫고, 시작 화면 이미지를 변경하고, 시작 화면 기본 창 위치 / 크기를 가져오고, 시작 화면에서 페인트하는 데 사용할 수 있습니다. 시작 화면을 만드는 데 사용할 수 없습니다. 이를 위해 Java 구현에서 제공하는 옵션을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="7d6c5c0e9a62febf84bbb9141ee81024ed231a73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; additionally reports &lt;a href=&quot;../spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 는 추가로보고 &lt;a href=&quot;../spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a5cd94ecb80a03490b99bcd80e701c14fac87925" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; additionally reports &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt; and implements &lt;code&gt;trySplit&lt;/code&gt; to permit limited parallelism..</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 는 추가로보고 &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt; 및 구현이 &lt;code&gt;trySplit&lt;/code&gt; 제한된 병렬 처리를 허용하는 ..</target>
        </trans-unit>
        <trans-unit id="af784776c0cdc3b45691af7e034f88ace154b36b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; implements &lt;code&gt;trySplit&lt;/code&gt; to permit limited parallelism.</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 의 구현은 &lt;code&gt;trySplit&lt;/code&gt; 제한된 병렬 처리를 허용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc4bc484d5f7374b739600d18f54719d380be19e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, with an encounter order that is ascending order. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 는 보고 &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; 를&lt;/a&gt; 오름차순으로하는 만남의 주문. 재정의 구현은 추가 특성 값의보고를 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="f2950b171471656d176973c0cdbe156c00f2950c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 는 보고 &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f29dd54a6792c7ed4529600d96348a75bdd9555a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;. Implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 는 Spliterator.DISTINCT를 보고 &lt;a href=&quot;../spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt; . 구현시 추가 특성 값의보고를 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="d956efee01ea55ce995f06c420101ace333173f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#IMMUTABLE&quot;&gt;&lt;code&gt;Spliterator.IMMUTABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 는 보고 &lt;a href=&quot;../spliterator#IMMUTABLE&quot;&gt; &lt;code&gt;Spliterator.IMMUTABLE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e199c4eef228c77de88efe1878bd4a7a2d489af1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#IMMUTABLE&quot;&gt;&lt;code&gt;Spliterator.IMMUTABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 는 보고 &lt;a href=&quot;../spliterator#IMMUTABLE&quot;&gt; &lt;code&gt;Spliterator.IMMUTABLE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cbd59fa14ea73f85c3995572f64444c99c11f1eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 는 보고 &lt;a href=&quot;../spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c1e52439eecc198c689029f966c5a01b29d70971" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;. Implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 는 보고 &lt;a href=&quot;spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; 을&lt;/a&gt; . 구현시 추가 특성 값의보고를 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="a468b87aa57a000d104e16ad1ebfc71127bed7dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;. Implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 는 Spliterator.DISTINCT를 보고 &lt;a href=&quot;spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt; . 구현시 추가 특성 값의보고를 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="6ebf9e7f0b30959249ec16fdfe821371d93a4d56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 는 보고 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; 을&lt;/a&gt; . 재정의 구현은 추가 특성 값의보고를 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="5eb4148ceff758d730c061aadb07b3dfc29badab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;. Implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 는 보고 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; 을&lt;/a&gt; . 구현시 추가 특성 값의보고를 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="6117d3f9be68af61e863fb3ac62f3f48f2b55bd5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 는 보고 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; 을&lt;/a&gt; . 재정의 구현은 추가 특성 값의보고를 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="365bad875f0605d7a3f88de21373c4b2c02e8b6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 는 보고 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; 을&lt;/a&gt; . 재정의 구현은 추가 특성 값의보고를 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="c76f2bcfdf2668373b751457d6ab6afa52733599" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;ORDERED&lt;/code&gt;. Implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 는 보고서 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;ORDERED&lt;/code&gt; . 구현시 추가 특성 값의보고를 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="56ca63602e1e9a18ab8f45fd2c61e5f3e26c4da5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 는 보고 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; 을&lt;/a&gt; . 재정의 구현은 추가 특성 값의보고를 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="b7a7b7355ffd0c2f2072bfc12a5dfa9d5724f300" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 는 보고 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; 을&lt;/a&gt; . 재정의 구현은 추가 특성 값의보고를 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="69d1d467a5fec847db2c8830bffb8575def22c59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">&lt;code&gt;Spliterator&lt;/code&gt; 는 보고 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; 을&lt;/a&gt; . 재정의 구현은 추가 특성 값의보고를 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="6b2d2eb7eec8f743e4849d1097ca59c6f055d626" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spring&lt;/code&gt; object representing each constraint has a minimum, preferred, maximum, and current value. The current value of the spring is somewhere between the minimum and maximum values, according to the formula given in the &lt;a href=&quot;spring#sum(javax.swing.Spring,javax.swing.Spring)&quot;&gt;&lt;code&gt;Spring.sum(javax.swing.Spring, javax.swing.Spring)&lt;/code&gt;&lt;/a&gt; method description. When the minimum, preferred, and maximum values are the same, the current value is always equal to them; this inflexible spring is called a &lt;em&gt;strut&lt;/em&gt;. You can create struts using the factory method &lt;a href=&quot;spring#constant(int)&quot;&gt;&lt;code&gt;Spring.constant(int)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Spring&lt;/code&gt; class also provides factory methods for creating other kinds of springs, including springs that depend on other springs.</source>
          <target state="translated">&lt;code&gt;Spring&lt;/code&gt; 각 제약 조건을 나타내는 목적은 최소 바람직, 최대 전류 값을 갖는다. Spring의 현재 값은 &lt;a href=&quot;spring#sum(javax.swing.Spring,javax.swing.Spring)&quot;&gt; &lt;code&gt;Spring.sum(javax.swing.Spring, javax.swing.Spring)&lt;/code&gt; &lt;/a&gt; 메소드 설명에 제공된 공식에 따라 최소값과 최대 값 사이에 있습니다. 최소값, 기본 값 및 최대 값이 동일하면 현재 값은 항상 동일합니다. 이 유연하지 않은 스프링을 &lt;em&gt;스트럿&lt;/em&gt; 이라고합니다 . 팩토리 메서드 &lt;a href=&quot;spring#constant(int)&quot;&gt; &lt;code&gt;Spring.constant(int)&lt;/code&gt; &lt;/a&gt; 사용하여 스트럿을 만들 수 있습니다 . &lt;code&gt;Spring&lt;/code&gt; 클래스는 다른 스프링에 의존하는 스프링을 포함하여 스프링의 다른 종류를 만들기위한 팩토리 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a22bed6089a698314bd570d8dfea84ff3886d8de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stack&lt;/code&gt; class represents a last-in-first-out (LIFO) stack of objects.</source>
          <target state="translated">&lt;code&gt;Stack&lt;/code&gt; 클래스는 객체의 후입 선출 (LIFO) 스택을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="725a4ea6b7a05d02133053cfe135e8b021c0e333" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stack&lt;/code&gt; class represents a last-in-first-out (LIFO) stack of objects. It extends class &lt;code&gt;Vector&lt;/code&gt; with five operations that allow a vector to be treated as a stack. The usual &lt;code&gt;push&lt;/code&gt; and &lt;code&gt;pop&lt;/code&gt; operations are provided, as well as a method to &lt;code&gt;peek&lt;/code&gt; at the top item on the stack, a method to test for whether the stack is &lt;code&gt;empty&lt;/code&gt;, and a method to &lt;code&gt;search&lt;/code&gt; the stack for an item and discover how far it is from the top.</source>
          <target state="translated">&lt;code&gt;Stack&lt;/code&gt; 클래스는 객체의 후입 선출 (LIFO) 스택을 나타냅니다. 벡터를 스택으로 취급 할 수 있도록 5 가지 연산으로 &lt;code&gt;Vector&lt;/code&gt; 클래스를 확장 합니다. 일반적인 &lt;code&gt;push&lt;/code&gt; 와 &lt;code&gt;pop&lt;/code&gt; 작업은 물론하는 방법으로 &lt;code&gt;peek&lt;/code&gt; 스택의 맨 위 항목, 스택인지 여부를 테스트하는 방법에 &lt;code&gt;empty&lt;/code&gt; 및 방법은하기 &lt;code&gt;search&lt;/code&gt; 항목에 대한 스택을 어떻게 지금까지 발견이 맨 위에서입니다.</target>
        </trans-unit>
        <trans-unit id="fb03e73b86b7150e44b2730be4c2f42a308c7705" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;StackFrame&lt;/code&gt; stream will be closed when this method returns. When a closed &lt;code&gt;Stream&amp;lt;StackFrame&amp;gt;&lt;/code&gt; object is reused, &lt;code&gt;IllegalStateException&lt;/code&gt; will be thrown.</source>
          <target state="translated">&lt;code&gt;StackFrame&lt;/code&gt; 을의 스트림 때이 방법을 반환 종료됩니다. 닫힌 &lt;code&gt;Stream&amp;lt;StackFrame&amp;gt;&lt;/code&gt; 객체를 재사용하면 &lt;code&gt;IllegalStateException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="69d125feb060298f65a1bd48fbc45ef5e7d91c39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Statement.setQueryTimeout()&lt;/code&gt; timeout value is independent of the timeout value specified in &lt;code&gt;setNetworkTimeout&lt;/code&gt;. If the query timeout expires before the network timeout then the statement execution will be canceled. If the network is still active the result will be that both the statement and connection are still usable. However if the network timeout expires before the query timeout or if the statement timeout fails due to network problems, the connection will be marked as closed, any resources held by the connection will be released and both the connection and statement will be unusable.</source>
          <target state="translated">&lt;code&gt;Statement.setQueryTimeout()&lt;/code&gt; 타임 아웃 값에 지정된 타임 아웃 값과 무관 &lt;code&gt;setNetworkTimeout&lt;/code&gt; . 네트워크 시간 초과 전에 쿼리 시간 초과가 만료되면 명령문 실행이 취소됩니다. 네트워크가 여전히 활성 상태이면 명령문과 연결을 모두 사용할 수 있습니다. 그러나 쿼리 시간 초과 이전에 네트워크 시간 초과가 만료되거나 네트워크 문제로 인해 명령문 시간 초과가 실패하면 연결이 닫힌 것으로 표시되고 연결이 보유한 모든 리소스가 해제되며 연결과 명령문을 모두 사용할 수 없게됩니다.</target>
        </trans-unit>
        <trans-unit id="1390697c89353b590988a85571b01944397a5934" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stream&lt;/code&gt; describing the content of the directory</source>
          <target state="translated">&lt;code&gt;Stream&lt;/code&gt; 디렉토리의 내용을 설명</target>
        </trans-unit>
        <trans-unit id="c78c42072e63ca70c7ecefe4c83c75776bdbcfbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;StreamHandler&lt;/code&gt; first checks if there is an &lt;code&gt;OutputStream&lt;/code&gt; and if the given &lt;code&gt;LogRecord&lt;/code&gt; has at least the required log level. If not it silently returns. If so, it calls any associated &lt;code&gt;Filter&lt;/code&gt; to check if the record should be published. If so, it calls its &lt;code&gt;Formatter&lt;/code&gt; to format the record and then writes the result to the current output stream.</source>
          <target state="translated">&lt;code&gt;StreamHandler&lt;/code&gt; 먼저 확인 거기 경우 &lt;code&gt;OutputStream&lt;/code&gt; 에 주어진 경우 &lt;code&gt;LogRecord&lt;/code&gt; 적어도 필요한 로그 레벨을 갖는다. 그렇지 않으면 자동으로 리턴됩니다. 그렇다면 레코드를 게시해야하는지 확인하기 위해 연결된 &lt;code&gt;Filter&lt;/code&gt; 를 호출합니다 . 그렇다면 레코드를 포맷하기 위해 &lt;code&gt;Formatter&lt;/code&gt; 를 호출 한 다음 결과를 현재 출력 스트림에 씁니다.</target>
        </trans-unit>
        <trans-unit id="e6a8fe0d59891f6c0cc5fc356448e863867d876b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;StreamTokenizer&lt;/code&gt; class takes an input stream and parses it into &quot;tokens&quot;, allowing the tokens to be read one at a time.</source>
          <target state="translated">&lt;code&gt;StreamTokenizer&lt;/code&gt; 의 클래스 토큰이 한번에 판독 할 수있게 해주는 한, &quot;토큰&quot;으로 입력 스트림 파싱 걸립니다.</target>
        </trans-unit>
        <trans-unit id="90790abff6838151ec89277ddea3efa96bd3fd1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;StreamTokenizer&lt;/code&gt; class takes an input stream and parses it into &quot;tokens&quot;, allowing the tokens to be read one at a time. The parsing process is controlled by a table and a number of flags that can be set to various states. The stream tokenizer can recognize identifiers, numbers, quoted strings, and various comment styles.</source>
          <target state="translated">&lt;code&gt;StreamTokenizer&lt;/code&gt; 의 클래스 토큰이 한번에 판독 할 수있게 해주는 한, &quot;토큰&quot;으로 입력 스트림 파싱 걸립니다. 파싱 ​​프로세스는 다양한 상태로 설정할 수있는 테이블과 여러 플래그에 의해 제어됩니다. 스트림 토크 나이 저는 식별자, 숫자, 따옴표 붙은 문자열 및 다양한 주석 스타일을 인식 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cace10574531d43fd7350c7bbe816d7c0693ff93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; class provides methods for dealing with Unicode code points (i.e., characters), in addition to those for dealing with Unicode code units (i.e., &lt;code&gt;char&lt;/code&gt; values).</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 클래스는 유니 코드 단위 (즉, 다루는 그뿐만 아니라, 유니 코드 코드 포인트 (즉, 문자)를 처리하는 방법을 제공합니다 &lt;code&gt;char&lt;/code&gt; 값을).</target>
        </trans-unit>
        <trans-unit id="0d78a761f2944c5a20f9f6d6f41f724d053b8054" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; class represents character strings.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 클래스는 캐릭터 라인을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="cfaf0978cdd4182db5fdb416c1be5b9a10ec7e9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; class represents character strings. All string literals in Java programs, such as &lt;code&gt;&quot;abc&quot;&lt;/code&gt;, are implemented as instances of this class.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 클래스는 캐릭터 라인을 나타냅니다. &lt;code&gt;&quot;abc&quot;&lt;/code&gt; 와 같은 Java 프로그램의 모든 문자열 리터럴 은이 클래스의 인스턴스로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="bf9e88bafccff9dfb01a4ed99ca09de99632708e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; constructor, on the other hand, is perfectly predictable: writing &lt;code&gt;new BigDecimal(&quot;0.1&quot;)&lt;/code&gt; creates a &lt;code&gt;BigDecimal&lt;/code&gt; which is</source>
          <target state="translated">반면에 &lt;code&gt;String&lt;/code&gt; 생성자는 완벽하게 예측할 수 있습니다. &lt;code&gt;new BigDecimal(&quot;0.1&quot;)&lt;/code&gt; 을 작성하면 다음과 같은 &lt;code&gt;BigDecimal&lt;/code&gt; 이 작성 됩니다.</target>
        </trans-unit>
        <trans-unit id="eba1c9ced718a6fccfc3b47f5eccf166337b2690" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; constructor, on the other hand, is perfectly predictable: writing &lt;code&gt;new BigDecimal(&quot;0.1&quot;)&lt;/code&gt; creates a &lt;code&gt;BigDecimal&lt;/code&gt; which is &lt;em&gt;exactly&lt;/em&gt; equal to 0.1, as one would expect. Therefore, it is generally recommended that the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;String constructor&lt;/a&gt; be used in preference to this one.</source>
          <target state="translated">반면에 &lt;code&gt;String&lt;/code&gt; 생성자는 완벽하게 예측할 수 있습니다. &lt;code&gt;new BigDecimal(&quot;0.1&quot;)&lt;/code&gt; 을 작성하면 예상 &lt;em&gt;대로 정확히&lt;/em&gt; 0.1 인 &lt;code&gt;BigDecimal&lt;/code&gt; 이 생성 됩니다. 따라서 일반적 으로이 &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;생성자&lt;/a&gt; 보다 우선적으로 String 생성자 를 사용 하는 것이 좋습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e9a1f48716d930234c4028b885dfc7d2e82b1bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; must specify a single paragraph of text, because an entire paragraph is required for the bidirectional algorithm.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 쌍방향 알고리즘에서는, 단락 전체가 필요하기 때문에, 1 단락의 텍스트를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="c55bf2e26b50af06c11b42ae679e92277246f4b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; return type is a convenience for retrieving the character data from a text node, attribute node, comment node, or processing-instruction node. When used on an element node, the value of the child text nodes is returned.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 반환 형식은 텍스트 노드, 속성 노드, 코멘트 노드, 또는 처리의 지시 노드로부터 문자 데이터를 검색하기위한 편리합니다. 요소 노드에서 사용하면 자식 텍스트 노드의 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="956bd9122850fa6f6d4d702653c39ab65927afc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; that is the result of evaluating the expression and converting the result to a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 표현식을 평가하고 그 결과를 변환 한 결과 인 &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="823b29249d90cf89580a63e8a119c51fe8f500bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stroke&lt;/code&gt; interface allows a &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; object to obtain a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; that is the decorated outline, or stylistic representation of the outline, of the specified &lt;code&gt;Shape&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Stroke&lt;/code&gt; 인터페이스는 허용 &lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt; 수득 오브젝트 &lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; 지정된 장식의 윤곽 또는 윤곽의 문체 표현 인 &lt;code&gt;Shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83bcf3d2b0817137e4811b4de84a7b0136064065" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stroke&lt;/code&gt; interface allows a &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; object to obtain a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; that is the decorated outline, or stylistic representation of the outline, of the specified &lt;code&gt;Shape&lt;/code&gt;. Stroking a &lt;code&gt;Shape&lt;/code&gt; is like tracing its outline with a marking pen of the appropriate size and shape. The area where the pen would place ink is the area enclosed by the outline &lt;code&gt;Shape&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Stroke&lt;/code&gt; 인터페이스는 허용 &lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt; 수득 오브젝트 &lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; 지정된 장식의 윤곽 또는 윤곽의 문체 표현 인 &lt;code&gt;Shape&lt;/code&gt; . &lt;code&gt;Shape&lt;/code&gt; 쓰다듬는 것은 적절한 크기와 모양의 마킹 펜으로 윤곽선을 추적하는 것과 같습니다. 펜이 잉크를 배치하는 영역은 윤곽선 &lt;code&gt;Shape&lt;/code&gt; 둘러싸인 영역 입니다.</target>
        </trans-unit>
        <trans-unit id="3321e8f0312f5858bda4ed64210f57798ee8885f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SyncFactory&lt;/code&gt; checks this file and registers the &lt;code&gt;SyncProvider&lt;/code&gt; implementations that it contains. A developer or vendor can add other implementations to this file. For example, here is a possible addition:</source>
          <target state="translated">&lt;code&gt;SyncFactory&lt;/code&gt; 확인이 파일을 등록한다 &lt;code&gt;SyncProvider&lt;/code&gt; 가 포함되어 구현. 개발자 또는 공급 업체는이 파일에 다른 구현을 추가 할 수 있습니다. 예를 들어 가능한 추가는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1945e6ff1ad237ada972e0b52b7f53a60d373ca4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SyncFactory&lt;/code&gt; class provides accessor methods to assist applications in determining which synchronization providers are currently registered with the &lt;code&gt;SyncFactory&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SyncFactory&lt;/code&gt; 이 클래스는 동기 프로 바이더가 현재 등록되어있는 결정하는 응용 프로그램을 지원하는 방법 접근 제공 &lt;code&gt;SyncFactory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51bf79b59a85a53ec81dac29f70bcc5fab44290e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SyncFactory&lt;/code&gt; class provides an internal registry of available synchronization provider implementations (&lt;code&gt;SyncProvider&lt;/code&gt; objects). This registry may be queried to determine which synchronization providers are available. The following line of code gets an enumeration of the providers currently registered.</source>
          <target state="translated">&lt;code&gt;SyncFactory&lt;/code&gt; 클래스는, 사용 가능한 동기 프로 바이더 구현 (의 내부 레지스트리 제공 &lt;code&gt;SyncProvider&lt;/code&gt; 객체). 이 레지스트리를 쿼리하여 사용할 수있는 동기화 공급자를 확인할 수 있습니다. 다음 코드 줄은 현재 등록 된 공급자의 열거 형을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="cf8f6210713c173acff250f3a77234c48dec109c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SyncFactory&lt;/code&gt; generates a requested &lt;code&gt;SyncProvider&lt;/code&gt; object if the provider has been correctly registered. The following policies are adhered to when either a disconnected &lt;code&gt;RowSet&lt;/code&gt; object is instantiated with a specified &lt;code&gt;SyncProvider&lt;/code&gt; implementation or is reconfigured at runtime with an alternative &lt;code&gt;SyncProvider&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;SyncFactory&lt;/code&gt; 요청 생성 &lt;code&gt;SyncProvider&lt;/code&gt; 바이더가 정상적으로 등록되어 있으면, 오브젝트. 연결이 끊어진 &lt;code&gt;RowSet&lt;/code&gt; 개체가 지정된 &lt;code&gt;SyncProvider&lt;/code&gt; 구현으로 인스턴스화 되거나 런타임시 대체 &lt;code&gt;SyncProvider&lt;/code&gt; 개체로 재구성 될 때 다음 정책이 준수됩니다 .</target>
        </trans-unit>
        <trans-unit id="219eedc9af737d15c74f22846580254e66b4f7f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SyncProvider&lt;/code&gt; class provides three sets of constants that are used as return values or parameters for &lt;code&gt;SyncProvider&lt;/code&gt; methods. &lt;code&gt;SyncProvider&lt;/code&gt; objects may be implemented to perform synchronization between a &lt;code&gt;RowSet&lt;/code&gt; object and its underlying data source with varying degrees of care. The first group of constants indicate how synchronization is handled. For example, &lt;code&gt;GRADE_NONE&lt;/code&gt; indicates that a &lt;code&gt;SyncProvider&lt;/code&gt; object will not take any care to see what data is valid and will simply write the &lt;code&gt;RowSet&lt;/code&gt; data to the data source. &lt;code&gt;GRADE_MODIFIED_AT_COMMIT&lt;/code&gt; indicates that the provider will check only modified data for validity. Other grades check all data for validity or set locks when data is modified or loaded.</source>
          <target state="translated">&lt;code&gt;SyncProvider&lt;/code&gt; 클래스에 대한 리턴 값 또는 파라미터로서 사용되는 3 개의 정수 제공 &lt;code&gt;SyncProvider&lt;/code&gt; 방법. &lt;code&gt;SyncProvider&lt;/code&gt; 개체를 구현하여 다양한 정도의주의를 기울여 &lt;code&gt;RowSet&lt;/code&gt; 개체와 기본 데이터 소스 간의 동기화를 수행 할 수 있습니다 . 첫 번째 상수 그룹은 동기화가 처리되는 방식을 나타냅니다. 예를 들어, &lt;code&gt;GRADE_NONE&lt;/code&gt; 은 &lt;code&gt;SyncProvider&lt;/code&gt; 개체가 유효한 데이터를 확인하지 않고 단순히 &lt;code&gt;RowSet&lt;/code&gt; 데이터를 데이터 소스에 기록함을 나타냅니다 . &lt;code&gt;GRADE_MODIFIED_AT_COMMIT&lt;/code&gt; 공급자가 유효성을 위해 수정 된 데이터 만 확인 함을 나타냅니다. 다른 등급은 모든 데이터의 유효성을 확인하거나 데이터가 수정되거나로드 될 때 잠금을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c5a4913f6da797e9bb309247a92d563053d59bb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SyncProvider&lt;/code&gt; interface defines four constants describing states that may occur. Three constants describe the type of operation (update, delete, or insert) that a &lt;code&gt;RowSet&lt;/code&gt; object was attempting to perform when a conflict was discovered, and the fourth indicates that there is no conflict. These constants are the possible return values when a &lt;code&gt;SyncResolver&lt;/code&gt; object calls the method &lt;code&gt;getStatus&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SyncProvider&lt;/code&gt; 인터페이스 발생 상태를 나타내는 네 개의 상수를 정의한다. 세 개의 상수 는 충돌이 발견되었을 때 &lt;code&gt;RowSet&lt;/code&gt; 객체가 수행하려고 시도한 작업 유형 (업데이트, 삭제 또는 삽입)을 설명하고 네 번째 상수 는 충돌이 없음을 나타냅니다. 이러한 상수는 &lt;code&gt;SyncResolver&lt;/code&gt; 객체가 &lt;code&gt;getStatus&lt;/code&gt; 메서드를 호출 할 때 가능한 반환 값 입니다.</target>
        </trans-unit>
        <trans-unit id="eda1e4a93fcf2aa13352f9f34dfd369c2d588252" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SyncResolver&lt;/code&gt; interface also provides methods for doing the following:</source>
          <target state="translated">&lt;code&gt;SyncResolver&lt;/code&gt; 인터페이스는 다음을 수행하는 방법을 제공한다 :</target>
        </trans-unit>
        <trans-unit id="b7a04ac54f8fd8b47f995cd926d12c087226c4ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SyncResolver&lt;/code&gt; object may be used to examine and resolve each conflict in a row and then go to the next row with a conflict to repeat the procedure.</source>
          <target state="translated">&lt;code&gt;SyncResolver&lt;/code&gt; 객체가 검토하고 행에 각 충돌을 해결하고 절차를 반복 충돌에 다음 행으로 이동하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce0b1740d93a2f7b9c8861c54d628a73ff28cb12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Synthesizer&lt;/code&gt; interface includes methods for loading and unloading instruments from soundbanks. An instrument is a specification for synthesizing a certain type of sound, whether that sound emulates a traditional instrument or is some kind of sound effect or other imaginary sound. A soundbank is a collection of instruments, organized by bank and program number (via the instrument's &lt;code&gt;Patch&lt;/code&gt; object). Different &lt;code&gt;Synthesizer&lt;/code&gt; classes might implement different sound-synthesis techniques, meaning that some instruments and not others might be compatible with a given synthesizer. Also, synthesizers may have a limited amount of memory for instruments, meaning that not every soundbank and instrument can be used by every synthesizer, even if the synthesis technique is compatible. To see whether the instruments from a certain soundbank can be played by a given synthesizer, invoke the &lt;a href=&quot;#isSoundbankSupported(javax.sound.midi.Soundbank)&quot;&gt;&lt;code&gt;isSoundbankSupported&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Synthesizer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Synthesizer&lt;/code&gt; 인터페이스 사운드 뱅크에서 하역 장비에 대한 방법을 포함한다. 악기는 특정 유형의 사운드를 합성하기위한 사양입니다. 사운드가 전통적인 악기를 에뮬레이트하든, 일종의 음향 효과 또는 기타 가상의 음향이든 상관 없습니다. 사운드 뱅크는 (악기의 &lt;code&gt;Patch&lt;/code&gt; 객체 를 통해) 뱅크와 프로그램 번호로 구성된 악기 모음입니다 . 다른 &lt;code&gt;Synthesizer&lt;/code&gt; 클래스는 다른 사운드 합성 기술을 구현할 수 있습니다. 즉, 일부 악기는 특정 신디사이저와 호환되지 않을 수 있습니다. 또한 신디사이저는 악기에 대해 제한된 양의 메모리를 가질 수 있습니다. 즉, 합성 기술이 호환 되더라도 모든 신디사이저에서 모든 사운드 뱅크와 악기를 사용할 수있는 것은 아닙니다. 특정 사운드 뱅크의 악기를 특정 신디사이저에서 재생할 수 있는지 확인하려면 &lt;code&gt;Synthesizer&lt;/code&gt; 의 &lt;a href=&quot;#isSoundbankSupported(javax.sound.midi.Soundbank)&quot;&gt; &lt;code&gt;isSoundbankSupported&lt;/code&gt; &lt;/a&gt; 메서드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="79d62a9c1d3d1d0435af40a0f1b27c3991ef6251" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Synthesizer&lt;/code&gt; interface includes methods for loading and unloading instruments from soundbanks. An instrument is a specification for synthesizing a certain type of sound, whether that sound emulates a traditional instrument or is some kind of sound effect or other imaginary sound. A soundbank is a collection of instruments, organized by bank and program number (via the instrument's &lt;code&gt;Patch&lt;/code&gt; object). Different &lt;code&gt;Synthesizer&lt;/code&gt; classes might implement different sound-synthesis techniques, meaning that some instruments and not others might be compatible with a given synthesizer. Also, synthesizers may have a limited amount of memory for instruments, meaning that not every soundbank and instrument can be used by every synthesizer, even if the synthesis technique is compatible. To see whether the instruments from a certain soundbank can be played by a given synthesizer, invoke the &lt;a href=&quot;synthesizer#isSoundbankSupported-javax.sound.midi.Soundbank-&quot;&gt;&lt;code&gt;isSoundbankSupported&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Synthesizer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Synthesizer&lt;/code&gt; 인터페이스 사운드 뱅크에서 하역 장비에 대한 방법을 포함한다. 악기는 사운드가 전통적인 악기를 에뮬레이트하는지 또는 어떤 종류의 사운드 효과 또는 기타 가상 사운드인지에 관계없이 특정 유형의 사운드를 합성하기위한 사양입니다. 사운드 뱅크는 뱅크 및 프로그램 번호 (악기의 &lt;code&gt;Patch&lt;/code&gt; 객체 를 통해)로 구성된 악기 모음입니다 . 다른 &lt;code&gt;Synthesizer&lt;/code&gt; 클래스는 다른 사운드 합성 기술을 구현할 수 있습니다. 즉, 일부 악기는 특정 신시사이저와 호환되지 않을 수 있습니다. 또한 신디사이저에는 악기에 대한 메모리 양이 제한되어있을 수 있습니다. 즉, 합성 기술이 호환 되더라도 모든 사운드 뱅크와 악기를 모든 신디사이저에서 사용할 수있는 것은 아닙니다. 특정 신시사이저가 특정 사운드 뱅크의 악기를 연주 할 수 있는지 확인하려면 &lt;a href=&quot;synthesizer#isSoundbankSupported-javax.sound.midi.Soundbank-&quot;&gt; &lt;code&gt;isSoundbankSupported&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Synthesizer&lt;/code&gt; 메소드를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="cfaf0a0f81bd0eca9825b951309b3216299181ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;System&lt;/code&gt; class contains several useful class fields and methods.</source>
          <target state="translated">&lt;code&gt;System&lt;/code&gt; 클래스에는 유용한 클래스 필드 및 메서드가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e929acaa33491c9123dc823b9825fd21aa7ba63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;System&lt;/code&gt; class contains several useful class fields and methods. It cannot be instantiated.</source>
          <target state="translated">&lt;code&gt;System&lt;/code&gt; 클래스에는 유용한 클래스 필드 및 메서드가 포함되어 있습니다. 인스턴스화 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d62073397ee12d67177fbddcc6b841987af0c0f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;System&lt;/code&gt; class contains several useful class fields and methods. It cannot be instantiated. Among the facilities provided by the &lt;code&gt;System&lt;/code&gt; class are standard input, standard output, and error output streams; access to externally defined properties and environment variables; a means of loading files and libraries; and a utility method for quickly copying a portion of an array.</source>
          <target state="translated">&lt;code&gt;System&lt;/code&gt; 클래스에는 유용한 클래스 필드 및 메서드가 포함되어 있습니다. 인스턴스화 할 수 없습니다. &lt;code&gt;System&lt;/code&gt; 클래스에서 제공하는 기능 중에는 표준 입력, 표준 출력 및 오류 출력 스트림이 있습니다. 외부에서 정의 된 속성 및 환경 변수에 대한 액세스 파일 및 라이브러리를로드하는 수단; 및 어레이의 일부를 빠르게 복사하기위한 유틸리티 방법.</target>
        </trans-unit>
        <trans-unit id="71d124decf97343aaf190d7edff308e7f38aff09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SystemTray&lt;/code&gt; class represents the system tray for a desktop.</source>
          <target state="translated">&lt;code&gt;SystemTray&lt;/code&gt; 클래스는, 데스크탑의 시스템 트레이를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="86e2face305fc605953bea15297d20a4c46b82a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SystemTray&lt;/code&gt; class represents the system tray for a desktop. On Microsoft Windows it is referred to as the &quot;Taskbar Status Area&quot;, on Gnome it is referred to as the &quot;Notification Area&quot;, on KDE it is referred to as the &quot;System Tray&quot;. The system tray is shared by all applications running on the desktop.</source>
          <target state="translated">&lt;code&gt;SystemTray&lt;/code&gt; 클래스는, 데스크탑의 시스템 트레이를 나타냅니다. Microsoft Windows에서는 &quot;작업 표시 줄 상태 영역&quot;, Gnome에서는 &quot;알림 영역&quot;, KDE에서는 &quot;시스템 트레이&quot;라고합니다. 시스템 트레이는 데스크탑에서 실행되는 모든 응용 프로그램에서 공유됩니다.</target>
        </trans-unit>
        <trans-unit id="29f19d736a226155ec6c7bf812e7c0d11e8db7d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SystemTray&lt;/code&gt; may contain one or more &lt;a href=&quot;trayicon&quot;&gt;&lt;code&gt;TrayIcons&lt;/code&gt;&lt;/a&gt;, which are added to the tray using the &lt;a href=&quot;#add(java.awt.TrayIcon)&quot;&gt;&lt;code&gt;add(java.awt.TrayIcon)&lt;/code&gt;&lt;/a&gt; method, and removed when no longer needed, using the &lt;a href=&quot;#remove(java.awt.TrayIcon)&quot;&gt;&lt;code&gt;remove(java.awt.TrayIcon)&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;TrayIcon&lt;/code&gt; consists of an image, a popup menu and a set of associated listeners. Please see the &lt;a href=&quot;trayicon&quot;&gt;&lt;code&gt;TrayIcon&lt;/code&gt;&lt;/a&gt; class for details.</source>
          <target state="translated">&lt;code&gt;SystemTray&lt;/code&gt; 하나 이상 포함될 수 &lt;a href=&quot;trayicon&quot;&gt; &lt;code&gt;TrayIcons&lt;/code&gt; &lt;/a&gt; 은 USING 트레이에 추가되지 않으며, &lt;a href=&quot;#add(java.awt.TrayIcon)&quot;&gt; &lt;code&gt;add(java.awt.TrayIcon)&lt;/code&gt; &lt;/a&gt; 은 USING, 더 이상 필요하지 않을 때, 방법 및 제거를 &lt;a href=&quot;#remove(java.awt.TrayIcon)&quot;&gt; &lt;code&gt;remove(java.awt.TrayIcon)&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;TrayIcon&lt;/code&gt; 은 이미지, 팝업 메뉴 및 관련 리스너 세트로 구성됩니다. 자세한 내용은 &lt;a href=&quot;trayicon&quot;&gt; &lt;code&gt;TrayIcon&lt;/code&gt; &lt;/a&gt; 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c47132f451284747470a059592392ae52dd9e141" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SystemTray&lt;/code&gt;'s array of &lt;code&gt;TrayIcon&lt;/code&gt; objects. The array is accessed via the &lt;a href=&quot;#getTrayIcons()&quot;&gt;&lt;code&gt;getTrayIcons()&lt;/code&gt;&lt;/a&gt; method. This property is changed when a tray icon is added to (or removed from) the system tray. For example, this property is changed when the system tray becomes unavailable on the desktop and the tray icons are automatically removed.</source>
          <target state="translated">&lt;code&gt;SystemTray&lt;/code&gt; 중의 배열 &lt;code&gt;TrayIcon&lt;/code&gt; 에의 개체. 배열은 &lt;a href=&quot;#getTrayIcons()&quot;&gt; &lt;code&gt;getTrayIcons()&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 액세스됩니다 . 이 속성은 트레이 아이콘이 시스템 트레이에 추가 (또는 제거) 될 때 변경됩니다. 예를 들어,이 속성은 바탕 화면에서 시스템 트레이를 사용할 수 없게되고 트레이 아이콘이 자동으로 제거되면 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="a06dce3576df2efc44a53e99f5b0156477fc0f70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TIFFTagSet&lt;/code&gt;s associated with this &lt;code&gt;TIFFDirectory&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;TIFFTagSet&lt;/code&gt; 관련된 &lt;code&gt;TIFFDirectory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90342a4ec5ebd367ca721e299022f4ba7c4abcba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TYPE_USE&lt;/code&gt; constant includes type declarations and type parameter declarations as a convenience for designers of type checkers which give semantics to annotation types. For example, if the annotation type &lt;code&gt;NonNull&lt;/code&gt; is meta-annotated with &lt;code&gt;@Target(ElementType.TYPE_USE)&lt;/code&gt;, then &lt;code&gt;@NonNull&lt;/code&gt;&lt;code&gt;class C {...}&lt;/code&gt; could be treated by a type checker as indicating that all variables of class &lt;code&gt;C&lt;/code&gt; are non-null, while still allowing variables of other classes to be non-null or not non-null based on whether &lt;code&gt;@NonNull&lt;/code&gt; appears at the variable's declaration.</source>
          <target state="translated">&lt;code&gt;TYPE_USE&lt;/code&gt; 의 상수는 주석 유형에 의미를 부여 형 체커 디자이너의 편의 타입 선언과 형식 매개 변수 선언이 포함되어 있습니다. 예를 들어, 주석 유형 &lt;code&gt;NonNull&lt;/code&gt; 이 &lt;code&gt;@Target(ElementType.TYPE_USE)&lt;/code&gt; 로 메타 주석 처리 된 경우 &lt;code&gt;@NonNull&lt;/code&gt; &lt;code&gt;class C {...}&lt;/code&gt; 는 클래스 &lt;code&gt;C&lt;/code&gt; 의 모든 변수가 널이 아님을 나타내는 것으로 유형 검사기에서 처리 될 수 있습니다. &lt;code&gt;@NonNull&lt;/code&gt; 이 변수 선언에 나타나는지 여부에 따라 다른 클래스의 변수가 null이 아닌지 여부를 계속 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="a36f21255ac35c88f64ea122f094b24db294584b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TabbedPane&lt;/code&gt; uses a &lt;code&gt;SingleSelectionModel&lt;/code&gt; to represent the set of tab indices and the currently selected index. If the tab count is greater than 0, then there will always be a selected index, which by default will be initialized to the first tab. If the tab count is 0, then the selected index will be -1.</source>
          <target state="translated">&lt;code&gt;TabbedPane&lt;/code&gt; 사용 &lt;code&gt;SingleSelectionModel&lt;/code&gt; 과를 탭 인덱스 세트와 현재 선택된 인덱스를 표현. 탭 수가 0보다 크면 항상 선택된 인덱스가 있으며 기본적으로 첫 번째 탭으로 초기화됩니다. 탭 수가 0이면 선택한 인덱스는 -1이됩니다.</target>
        </trans-unit>
        <trans-unit id="aae188cb6fcd8f04afd29ffc5f91ebb63a2bec4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TableCellRenderer&lt;/code&gt; is also responsible for rendering the the cell representing the table's current DnD drop location if it has one. If this renderer cares about rendering the DnD drop location, it should query the table directly to see if the given row and column represent the drop location:</source>
          <target state="translated">&lt;code&gt;TableCellRenderer&lt;/code&gt; 또한 하나가있는 경우 테이블의 현재 드래그 &amp;amp; 드롭 위치를 나타내는 셀을 렌더링 할 책임이있다. 이 렌더러가 DnD 드롭 위치를 렌더링하는 데 관심이 있다면 테이블을 직접 쿼리하여 주어진 행과 열이 드롭 위치를 나타내는 지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="62730552d1826f5457ce3b3a464a101205ca119b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TableColumn&lt;/code&gt; stores the link between the columns in the &lt;code&gt;JTable&lt;/code&gt; and the columns in the &lt;code&gt;TableModel&lt;/code&gt;. The &lt;code&gt;modelIndex&lt;/code&gt; is the column in the &lt;code&gt;TableModel&lt;/code&gt;, which will be queried for the data values for the cells in this column. As the column moves around in the view this &lt;code&gt;modelIndex&lt;/code&gt; does not change.</source>
          <target state="translated">&lt;code&gt;TableColumn&lt;/code&gt; 의의 저장의 열 사이의 링크 &lt;code&gt;JTable&lt;/code&gt; 및 컬럼 &lt;code&gt;TableModel&lt;/code&gt; . &lt;code&gt;modelIndex&lt;/code&gt; 는 의 열이다 &lt;code&gt;TableModel&lt;/code&gt; 이 열의 셀의 데이터 값에 대해 질의 할 것이다. 열이 뷰에서 이동할 때이 &lt;code&gt;modelIndex&lt;/code&gt; 는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="513725efac09f3d3ebe41cdd1442b2526eb72e07" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TableColumnModel&lt;/code&gt; of the table header.</source>
          <target state="translated">테이블 헤더 의 &lt;code&gt;TableColumnModel&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="46b630f6f4ada6636db255ceeb6cbab86ddcc1d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TableColumnModel&lt;/code&gt; of the table.</source>
          <target state="translated">테이블 의 &lt;code&gt;TableColumnModel&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="40e8319f916c9c16cc953beb17d6b51b25096178" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TableHeader&lt;/code&gt; working with the table.</source>
          <target state="translated">테이블에서 작업 하는 &lt;code&gt;TableHeader&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1e1e1d2b9291e006ed2866178f2d5c50aeb49de2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TableModel&lt;/code&gt; interface specifies the methods the &lt;code&gt;JTable&lt;/code&gt; will use to interrogate a tabular data model.</source>
          <target state="translated">&lt;code&gt;TableModel&lt;/code&gt; 인터페이스 방법 지정 &lt;code&gt;JTable&lt;/code&gt; 테이블 데이터 모델을 조사하기 위해서 사용하는 것이다.</target>
        </trans-unit>
        <trans-unit id="9b297dff16c915aa557f64cbedacf58ef1c27aa6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TableModel&lt;/code&gt; of the table.</source>
          <target state="translated">테이블 의 &lt;code&gt;TableModel&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3ef83572b32113beb492c13117cd5dc2ac290774" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TabularData&lt;/code&gt; interface specifies the behavior of a specific type of complex</source>
          <target state="translated">&lt;code&gt;TabularData&lt;/code&gt; 의 인터페이스는 복잡한 특정 유형의 동작을 지정합니다</target>
        </trans-unit>
        <trans-unit id="7724aaad4c815a2f3d25835048c64655b5a959e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TabularDataSupport&lt;/code&gt; class is the</source>
          <target state="translated">그만큼 &lt;code&gt;TabularDataSupport&lt;/code&gt; 클래스 인</target>
        </trans-unit>
        <trans-unit id="d1a581b7f12d575f8065049692b39a4f8b425736" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TabularType&lt;/code&gt; class is the</source>
          <target state="translated">&lt;code&gt;TabularType&lt;/code&gt; 클래스입니다</target>
        </trans-unit>
        <trans-unit id="085fc399b3650257a22561fd8dbc65d069110b4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TargetDataLine&lt;/code&gt; interface provides a method for reading the captured data from the target data line's buffer. Applications that record audio should read data from the target data line quickly enough to keep the buffer from overflowing, which could cause discontinuities in the captured data that are perceived as clicks. Applications can use the &lt;a href=&quot;dataline#available()&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt; method defined in the &lt;code&gt;DataLine&lt;/code&gt; interface to determine the amount of data currently queued in the data line's buffer. If the buffer does overflow, the oldest queued data is discarded and replaced by new data.</source>
          <target state="translated">&lt;code&gt;TargetDataLine&lt;/code&gt; 인터페이스는 타겟 데이터 라인의 버퍼로부터 수집 된 데이터를 판독하기위한 방법을 제공한다. 오디오를 녹음하는 애플리케이션은 버퍼가 넘치지 않도록 충분히 빠르게 대상 데이터 라인에서 데이터를 읽어야합니다. 이로 인해 클릭으로 인식되는 캡처 된 데이터의 불연속성이 발생할 수 있습니다. 애플리케이션은 &lt;code&gt;DataLine&lt;/code&gt; 인터페이스에 정의 된 사용 &lt;a href=&quot;dataline#available()&quot;&gt; &lt;code&gt;available&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 현재 데이터 라인의 버퍼에 대기중인 데이터의 양을 확인할 수 있습니다. 버퍼가 오버플로되면 대기열에있는 가장 오래된 데이터가 삭제되고 새 데이터로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="2b88d977d84dfecfb709ca75951d725a6ab95a15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TargetDataLine&lt;/code&gt; interface provides a method for reading the captured data from the target data line's buffer.Applications that record audio should read data from the target data line quickly enough to keep the buffer from overflowing, which could cause discontinuities in the captured data that are perceived as clicks. Applications can use the &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method defined in the &lt;code&gt;DataLine&lt;/code&gt; interface to determine the amount of data currently queued in the data line's buffer. If the buffer does overflow, the oldest queued data is discarded and replaced by new data.</source>
          <target state="translated">&lt;code&gt;TargetDataLine&lt;/code&gt; 인터페이스는 오디오 녹음이 인식되고 캡처 된 데이터의 불연속을 야기 할 수있는 오버 플로우 버퍼를 유지하기 위해 신속하게 타겟 데이터 라인에서 데이터를 읽어야하는 타겟 데이터 라인의 buffer.Applications에서 캡처 된 데이터를 판독하는 방법을 제공한다 클릭으로. 응용 프로그램은 &lt;code&gt;DataLine&lt;/code&gt; 인터페이스에 정의 된 사용 &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 방법을 사용하여 현재 데이터 라인의 버퍼에 대기중인 데이터의 양을 결정할 수 있습니다. 버퍼가 오버 플로우되면 가장 오래된 큐에있는 데이터는 버리고 새 데이터로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="cd75a99a64bbe9c6e132833f8fb00cfec0994bdb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Taskbar&lt;/code&gt; class allows a Java application to interact with the system task area (taskbar, Dock, etc.).</source>
          <target state="translated">&lt;code&gt;Taskbar&lt;/code&gt; 클래스는 자바 응용 프로그램이 시스템 작업 영역 (작업 표시 줄, 독, 등)와 상호 작용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="019ba7c0388427e562540509ea17c83832b3dcd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;OffsetDateTime&lt;/code&gt; using &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. If the offset differs between the two date-times, the specified end date-time is normalized to have the same offset as this date-time.</source>
          <target state="translated">이 메서드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 은 &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;OffsetDateTime&lt;/code&gt; 으로 변환됩니다 . 오프셋이 두 날짜-시간간에 다른 경우 지정된 종료 날짜-시간이이 날짜-시간과 동일한 오프셋을 갖도록 정규화됩니다.</target>
        </trans-unit>
        <trans-unit id="3e0b1acfd21178efdd1911606a8891da6c388408" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;OffsetDateTime&lt;/code&gt; using &lt;a href=&quot;offsetdatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. If the offset differs between the two date-times, the specified end date-time is normalized to have the same offset as this date-time.</source>
          <target state="translated">이 메소드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 는 다음을 사용하여 &lt;code&gt;OffsetDateTime&lt;/code&gt; 으로 변환됩니다.&lt;a href=&quot;offsetdatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;. 두 날짜-시간간에 오프셋이 다른 경우 지정된 종료 날짜-시간은이 날짜-시간과 동일한 오프셋을 갖도록 정규화됩니다.</target>
        </trans-unit>
        <trans-unit id="d95776a3e565ebe5ce70d5bf195dcf050020297d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;OffsetTime&lt;/code&gt; using &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. If the offset differs between the two times, then the specified end time is normalized to have the same offset as this time.</source>
          <target state="translated">이 메서드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 은 &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;OffsetTime&lt;/code&gt; 으로 변환됩니다 . 오프셋이 두 시간 사이에 다른 경우 지정된 종료 시간이이 시간과 동일한 오프셋을 갖도록 정규화됩니다.</target>
        </trans-unit>
        <trans-unit id="3e06b07abdd9c26452543a4ee27b98a4f883116f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;OffsetTime&lt;/code&gt; using &lt;a href=&quot;offsettime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. If the offset differs between the two times, then the specified end time is normalized to have the same offset as this time.</source>
          <target state="translated">이 메소드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 는 &lt;a href=&quot;offsettime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;OffsetTime&lt;/code&gt; 시간으로 변환됩니다. . 오프셋이 두 번 서로 다른 경우 지정된 종료 시간이이 시간과 동일한 오프셋을 갖도록 정규화됩니다.</target>
        </trans-unit>
        <trans-unit id="16922692473cfbe52ef7b4a7d7019abc044672f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;ZonedDateTime&lt;/code&gt; using &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. If the time-zone differs between the two zoned date-times, the specified end date-time is normalized to have the same zone as this date-time.</source>
          <target state="translated">이 메서드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 은 &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 변환됩니다 . 시간대가 두 개의 존 날짜-시간간에 다른 경우 지정된 종료 날짜-시간이이 날짜-시간과 동일한 존을 갖도록 정규화됩니다.</target>
        </trans-unit>
        <trans-unit id="137e87a41dd6513a254139c8feaaab1e66487d95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;ZonedDateTime&lt;/code&gt; using &lt;a href=&quot;zoneddatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. If the time-zone differs between the two zoned date-times, the specified end date-time is normalized to have the same zone as this date-time.</source>
          <target state="translated">이 메소드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 는 &lt;a href=&quot;zoneddatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 변환됩니다. . 시간대가 두 개의 존 날짜-시간 사이에 다른 경우, 지정된 종료 날짜-시간은이 날짜-시간과 동일한 존을 갖도록 정규화됩니다.</target>
        </trans-unit>
        <trans-unit id="e5e2abe85585b946fe3143ade66a1eb51b565159" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TemporalAdjuster&lt;/code&gt; is based on the low level &lt;code&gt;Temporal&lt;/code&gt; interface. This method allows an adjustment from &lt;code&gt;LocalDate&lt;/code&gt; to &lt;code&gt;LocalDate&lt;/code&gt; to be wrapped to match the temporal-based interface. This is provided for convenience to make user-written adjusters simpler.</source>
          <target state="translated">&lt;code&gt;TemporalAdjuster&lt;/code&gt; 은 낮은 수준을 기반으로 &lt;code&gt;Temporal&lt;/code&gt; 인터페이스를 제공합니다. 이 방법에서 조정 허용 &lt;code&gt;LocalDate&lt;/code&gt; 에 &lt;code&gt;LocalDate&lt;/code&gt; 하면 시간 기반 인터페이스와 일치 랩핑 할 수 있습니다. 이는 사용자 작성 조정자를보다 간단하게하기 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="3abce6220a2a3d5ab9fef6cd6b43c0fc41bc4b97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TerminalFactory&lt;/code&gt; is initialized with the specified parameters Object. The type of parameters needed may vary between different types of &lt;code&gt;TerminalFactory&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;TerminalFactory&lt;/code&gt; 는 지정된 매개 변수 개체 초기화됩니다. 필요한 매개 변수의 유형은 &lt;code&gt;TerminalFactory&lt;/code&gt; 의 다른 유형에 따라 다를 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="19c02d28928b0971c51632836506fdb261eb44fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Text&lt;/code&gt; interface inherits from &lt;code&gt;CharacterData&lt;/code&gt; and represents the textual content (termed &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#syntax&quot;&gt;character data&lt;/a&gt; in XML) of an &lt;code&gt;Element&lt;/code&gt; or &lt;code&gt;Attr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Text&lt;/code&gt; 인터페이스에서 상속 &lt;code&gt;CharacterData&lt;/code&gt; 를 하고 (이라고 텍스트 형식의 콘텐츠 나타내는 &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#syntax&quot;&gt;문자 데이터&lt;/a&gt; 의 XML에서) &lt;code&gt;Element&lt;/code&gt; 또는 &lt;code&gt;Attr&lt;/code&gt; 의를 .</target>
        </trans-unit>
        <trans-unit id="703823749842fef8a2c75cc8cb3164c39a004c62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Text&lt;/code&gt; interface inherits from &lt;code&gt;CharacterData&lt;/code&gt; and represents the textual content (termed &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#syntax&quot;&gt;character data&lt;/a&gt; in XML) of an &lt;code&gt;Element&lt;/code&gt; or &lt;code&gt;Attr&lt;/code&gt;. If there is no markup inside an element's content, the text is contained in a single object implementing the &lt;code&gt;Text&lt;/code&gt; interface that is the only child of the element. If there is markup, it is parsed into the information items (elements, comments, etc.) and &lt;code&gt;Text&lt;/code&gt; nodes that form the list of children of the element.</source>
          <target state="translated">&lt;code&gt;Text&lt;/code&gt; 인터페이스에서 상속 &lt;code&gt;CharacterData&lt;/code&gt; 를 하고 (이라고 텍스트 형식의 콘텐츠 나타내는 &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#syntax&quot;&gt;문자 데이터&lt;/a&gt; 의 XML에서) &lt;code&gt;Element&lt;/code&gt; 또는 &lt;code&gt;Attr&lt;/code&gt; 의를 . 요소의 콘텐츠 내에 마크 업이없는 경우 텍스트는 요소의 유일한 자식 인 &lt;code&gt;Text&lt;/code&gt; 인터페이스를 구현하는 단일 개체에 포함됩니다 . 마크 업이 있으면 요소 의 하위 목록을 구성하는 정보 항목 (요소, 주석 등) 및 &lt;code&gt;Text&lt;/code&gt; 노드 로 구문 분석됩니다 .</target>
        </trans-unit>
        <trans-unit id="0b427ffefca649d6c2fde1f2d87275cd3cac181c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Text&lt;/code&gt; node created with the specified content.</source>
          <target state="translated">&lt;code&gt;Text&lt;/code&gt; 지정된 내용으로 생성 된 노드.</target>
        </trans-unit>
        <trans-unit id="cca479076c75edc689dd6ce78a057c1b17b31465" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextArea&lt;/code&gt; class defines four integer constants that are used to specify which scroll bars are available. &lt;code&gt;TextArea&lt;/code&gt; has one constructor that gives the application discretion over scroll bars.</source>
          <target state="translated">&lt;code&gt;TextArea&lt;/code&gt; 클래스는, 어느 스크롤 바가 이용 가능한가를 지정하기 위해서 사용되는 4 개 개의 정수 상수를 정의합니다. &lt;code&gt;TextArea&lt;/code&gt; 에는 스크롤 막대에 대한 애플리케이션 재량권을 제공하는 하나의 생성자가 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d48388689d22e97176bfbb9fb1fc79899bb9234" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextArea&lt;/code&gt; class defines several constants that can be supplied as values for the &lt;code&gt;scrollbars&lt;/code&gt; argument:</source>
          <target state="translated">&lt;code&gt;TextArea&lt;/code&gt; 클래스는 값으로 제공 할 수있는 몇 가지 상수를 정의 &lt;code&gt;scrollbars&lt;/code&gt; 인수를 :</target>
        </trans-unit>
        <trans-unit id="5336257f4025d0fea63716accbddc0218345d2f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextAttribute&lt;/code&gt; class defines attribute keys and attribute values used for text rendering.</source>
          <target state="translated">&lt;code&gt;TextAttribute&lt;/code&gt; 클래스를 정의 텍스트 렌더링에 사용되는 키와 속성 값을 속성.</target>
        </trans-unit>
        <trans-unit id="642b3c193ea2d3a105f24ceebe0c67d4450a709c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextComponent&lt;/code&gt; class is the superclass of any component that allows the editing of some text.</source>
          <target state="translated">&lt;code&gt;TextComponent&lt;/code&gt; 에의 클래스는, 텍스트의 편집을 가능하게하는 모든 컴퍼넌트의 슈퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="6e295e7fa9a8c0af844a002343da2aa129dfba05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextField&lt;/code&gt; class's &lt;code&gt;processEvent&lt;/code&gt; method examines the action event and passes it along to &lt;code&gt;processActionEvent&lt;/code&gt;. The latter method redirects the event to any &lt;code&gt;ActionListener&lt;/code&gt; objects that have registered to receive action events generated by this text field.</source>
          <target state="translated">&lt;code&gt;TextField&lt;/code&gt; 클래스의 &lt;code&gt;processEvent&lt;/code&gt; 를의 방법은 액션 이벤트를 검사하고에 따라 그 전달 &lt;code&gt;processActionEvent&lt;/code&gt; . 후자의 메서드 는이 텍스트 필드에서 생성 된 작업 이벤트를 수신하도록 등록 된 모든 &lt;code&gt;ActionListener&lt;/code&gt; 개체로 이벤트를 리디렉션합니다 .</target>
        </trans-unit>
        <trans-unit id="22b360ff64d31b8f19b1d96768ca46578b5f564f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextHitInfo&lt;/code&gt; class represents a character position in a text model, and a &lt;b&gt;bias&lt;/b&gt;, or &quot;side,&quot; of the character.</source>
          <target state="translated">&lt;code&gt;TextHitInfo&lt;/code&gt; 클래스는 텍스트 모델의 캐릭터의 위치와, 대표 &lt;b&gt;바이어스&lt;/b&gt; 특성의 또는 &quot;측면&quot;.</target>
        </trans-unit>
        <trans-unit id="b2a90ad498f0fc0ba3728afdf8f9ce9b1048e36c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextHitInfo&lt;/code&gt; class represents a character position in a text model, and a &lt;b&gt;bias&lt;/b&gt;, or &quot;side,&quot; of the character. Biases are either &lt;em&gt;leading&lt;/em&gt; (the left edge, for a left-to-right character) or &lt;em&gt;trailing&lt;/em&gt; (the right edge, for a left-to-right character). Instances of &lt;code&gt;TextHitInfo&lt;/code&gt; are used to specify caret and insertion positions within text.</source>
          <target state="translated">&lt;code&gt;TextHitInfo&lt;/code&gt; 클래스는 텍스트 모델의 캐릭터의 위치와, 대표 &lt;b&gt;바이어스&lt;/b&gt; 특성의 또는 &quot;측면&quot;. 편향은 &lt;em&gt;선행&lt;/em&gt; (왼쪽에서 오른쪽 문자의 경우 왼쪽 가장자리) 또는 &lt;em&gt;후행&lt;/em&gt; ( 왼쪽에서 오른쪽 문자의 경우 오른쪽 가장자리)입니다. &lt;code&gt;TextHitInfo&lt;/code&gt; 의 인스턴스는 텍스트 내의 캐럿 및 삽입 위치를 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c4b39e8c9816ef7ceb28fda873be1e28ff6d68cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextLayout&lt;/code&gt; instances returned by &lt;code&gt;LineBreakMeasurer&lt;/code&gt; treat tabs like 0-width spaces. Clients who wish to obtain tab-delimited segments for positioning should use the overload of &lt;code&gt;nextLayout&lt;/code&gt; which takes a limiting offset in the text. The limiting offset should be the first character after the tab. The &lt;code&gt;TextLayout&lt;/code&gt; objects returned from this method end at the limit provided (or before, if the text between the current position and the limit won't fit entirely within the wrapping width).</source>
          <target state="translated">&lt;code&gt;TextLayout&lt;/code&gt; 인스턴스가 리턴 &lt;code&gt;LineBreakMeasurer&lt;/code&gt; 에의 폭 0 구역처럼 취급 탭. 위치 지정을 위해 탭으로 구분 된 세그먼트를 얻으려는 클라이언트 는 텍스트에서 제한 오프셋을 사용하는 &lt;code&gt;nextLayout&lt;/code&gt; 의 오버로드를 사용해야합니다 . 제한 오프셋은 탭 뒤의 첫 번째 문자 여야합니다. 이 메서드에서 반환 된 &lt;code&gt;TextLayout&lt;/code&gt; 개체는 제공된 제한에서 끝납니다 (또는 현재 위치와 제한 사이의 텍스트가 줄 바꿈 너비에 완전히 맞지 않는 경우 이전).</target>
        </trans-unit>
        <trans-unit id="e54ec1da816a0aac8f63c3f5100992dba76c1e48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextMeasurer&lt;/code&gt; class provides the primitive operations needed for line break: measuring up to a given advance, determining the advance of a range of characters, and generating a &lt;code&gt;TextLayout&lt;/code&gt; for a range of characters.</source>
          <target state="translated">&lt;code&gt;TextMeasurer&lt;/code&gt; 클래스 개행에 필요한 기본 동작을 제공하는 소정의 사전 측정 최대 문자의 범위를 미리 결정하고, 생성 &lt;code&gt;TextLayout&lt;/code&gt; 와 문자의 범위.</target>
        </trans-unit>
        <trans-unit id="688cd5ad4fe72f4fb2a262796fd8215056bc8fb8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextMeasurer&lt;/code&gt; class provides the primitive operations needed for line break: measuring up to a given advance, determining the advance of a range of characters, and generating a &lt;code&gt;TextLayout&lt;/code&gt; for a range of characters. It also provides methods for incremental editing of paragraphs.</source>
          <target state="translated">&lt;code&gt;TextMeasurer&lt;/code&gt; 클래스 개행에 필요한 기본 동작을 제공하는 소정의 사전 측정 최대 문자의 범위를 미리 결정하고, 생성 &lt;code&gt;TextLayout&lt;/code&gt; 와 문자의 범위. 또한 단락의 증분 편집 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4e71e087399343a98483b9a617ee45738e959a19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TexturePaint&lt;/code&gt; class provides a way to fill a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; with a texture that is specified as a &lt;a href=&quot;image/bufferedimage&quot;&gt;&lt;code&gt;BufferedImage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;TexturePaint&lt;/code&gt; 의의 클래스는 칠하는 수단 제공 &lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; A와 지정된 텍스처로 &lt;a href=&quot;image/bufferedimage&quot;&gt; &lt;code&gt;BufferedImage&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b5dac04db526a9210cdabe62413aabab1e25b23f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TexturePaint&lt;/code&gt; class provides a way to fill a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; with a texture that is specified as a &lt;a href=&quot;image/bufferedimage&quot;&gt;&lt;code&gt;BufferedImage&lt;/code&gt;&lt;/a&gt;. The size of the &lt;code&gt;BufferedImage&lt;/code&gt; object should be small because the &lt;code&gt;BufferedImage&lt;/code&gt; data is copied by the &lt;code&gt;TexturePaint&lt;/code&gt; object. At construction time, the texture is anchored to the upper left corner of a &lt;a href=&quot;geom/rectangle2d&quot;&gt;&lt;code&gt;Rectangle2D&lt;/code&gt;&lt;/a&gt; that is specified in user space. Texture is computed for locations in the device space by conceptually replicating the specified &lt;code&gt;Rectangle2D&lt;/code&gt; infinitely in all directions in user space and mapping the &lt;code&gt;BufferedImage&lt;/code&gt; to each replicated &lt;code&gt;Rectangle2D&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TexturePaint&lt;/code&gt; 의의 클래스는 칠하는 수단 제공 &lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; A와 지정된 텍스처로 &lt;a href=&quot;image/bufferedimage&quot;&gt; &lt;code&gt;BufferedImage&lt;/code&gt; 를&lt;/a&gt; . &lt;code&gt;BufferedImage&lt;/code&gt; 데이터는 &lt;code&gt;TexturePaint&lt;/code&gt; 개체에 의해 복사 되므로 &lt;code&gt;BufferedImage&lt;/code&gt; 개체 의 크기는 작아야 합니다. 생성시 텍스처는 사용자 공간에 지정된 &lt;a href=&quot;geom/rectangle2d&quot;&gt; &lt;code&gt;Rectangle2D&lt;/code&gt; &lt;/a&gt; 의 왼쪽 상단 모서리에 고정됩니다 . 텍스처는 지정된 &lt;code&gt;Rectangle2D&lt;/code&gt; 를 사용자 공간의 모든 방향으로 개념적으로 무한대로 복제 하고 &lt;code&gt;BufferedImage&lt;/code&gt; 를 복제 된 각 &lt;code&gt;Rectangle2D&lt;/code&gt; 에 매핑하여 장치 공간의 위치에 대해 계산됩니다 .</target>
        </trans-unit>
        <trans-unit id="d01873bbcd9b0d6ed0700e4517af9e870acfb37f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ThreadMXBean&lt;/code&gt; interface provides the &lt;a href=&quot;#findMonitorDeadlockedThreads()&quot;&gt;&lt;code&gt;findMonitorDeadlockedThreads()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#findDeadlockedThreads()&quot;&gt;&lt;code&gt;findDeadlockedThreads()&lt;/code&gt;&lt;/a&gt; methods to find deadlocks in the running application.</source>
          <target state="translated">&lt;code&gt;ThreadMXBean&lt;/code&gt; 의 인터페이스는 제공 &lt;a href=&quot;#findMonitorDeadlockedThreads()&quot;&gt; &lt;code&gt;findMonitorDeadlockedThreads()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;#findDeadlockedThreads()&quot;&gt; &lt;code&gt;findDeadlockedThreads()&lt;/code&gt; &lt;/a&gt; 실행중인 응용 프로그램의 교착 상태를 찾을 방법.</target>
        </trans-unit>
        <trans-unit id="179bee4e4045d3f40705d1a933596e56a91b3268" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ThreadMXBean&lt;/code&gt; interface provides the &lt;a href=&quot;threadmxbean#findMonitorDeadlockedThreads--&quot;&gt;&lt;code&gt;findMonitorDeadlockedThreads()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;threadmxbean#findDeadlockedThreads--&quot;&gt;&lt;code&gt;findDeadlockedThreads()&lt;/code&gt;&lt;/a&gt; methods to find deadlocks in the running application.</source>
          <target state="translated">&lt;code&gt;ThreadMXBean&lt;/code&gt; 의 인터페이스가 제공 &lt;a href=&quot;threadmxbean#findMonitorDeadlockedThreads--&quot;&gt; &lt;code&gt;findMonitorDeadlockedThreads()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;threadmxbean#findDeadlockedThreads--&quot;&gt; &lt;code&gt;findDeadlockedThreads()&lt;/code&gt; &lt;/a&gt; 실행중인 응용 프로그램의 교착 상태를 찾을 방법.</target>
        </trans-unit>
        <trans-unit id="39917ae27e9e1229d50311719d5d54222afebd7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Throwable&lt;/code&gt; class is the superclass of all errors and exceptions in the Java language.</source>
          <target state="translated">&lt;code&gt;Throwable&lt;/code&gt; 클래스는 Java 언어의 모든 에러와 예외의 슈퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="9684e90dd9742fd93651a9cb50a8638d48f73ecd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Throwable&lt;/code&gt; class is the superclass of all errors and exceptions in the Java language. Only objects that are instances of this class (or one of its subclasses) are thrown by the Java Virtual Machine or can be thrown by the Java &lt;code&gt;throw&lt;/code&gt; statement. Similarly, only this class or one of its subclasses can be the argument type in a &lt;code&gt;catch&lt;/code&gt; clause. For the purposes of compile-time checking of exceptions, &lt;code&gt;
 Throwable&lt;/code&gt; and any subclass of &lt;code&gt;Throwable&lt;/code&gt; that is not also a subclass of either &lt;a href=&quot;runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; are regarded as checked exceptions.</source>
          <target state="translated">&lt;code&gt;Throwable&lt;/code&gt; 클래스는 Java 언어의 모든 에러와 예외의 슈퍼 클래스입니다. 이 클래스 (또는 하위 클래스 중 하나)의 인스턴스 인 객체 만 Java Virtual Machine에서 throw되거나 Java &lt;code&gt;throw&lt;/code&gt; 문 에서 throw 될 수 있습니다 . 마찬가지로이 클래스 또는 하위 클래스 중 하나만 &lt;code&gt;catch&lt;/code&gt; 절의 인수 유형이 될 수 있습니다 . 컴파일시 예외를 확인하기 위해 &lt;code&gt; Throwable&lt;/code&gt; 및 &lt;a href=&quot;runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 의 하위 클래스가 아닌 &lt;code&gt;Throwable&lt;/code&gt; 의 모든 하위 클래스는 확인 된 예외로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="08f3668a9e709259220f6210bae5df043abe1c67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Throwable&lt;/code&gt; class is the superclass of all errors and exceptions in the Java language. Only objects that are instances of this class (or one of its subclasses) are thrown by the Java Virtual Machine or can be thrown by the Java &lt;code&gt;throw&lt;/code&gt; statement. Similarly, only this class or one of its subclasses can be the argument type in a &lt;code&gt;catch&lt;/code&gt; clause. For the purposes of compile-time checking of exceptions, &lt;code&gt;Throwable&lt;/code&gt; and any subclass of &lt;code&gt;Throwable&lt;/code&gt; that is not also a subclass of either &lt;a href=&quot;runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; are regarded as checked exceptions.</source>
          <target state="translated">&lt;code&gt;Throwable&lt;/code&gt; 클래스는 Java 언어의 모든 에러와 예외의 슈퍼 클래스입니다. 이 클래스의 인스턴스 (또는 그 서브 클래스 중 하나) 인 객체 만 Java Virtual Machine에 의해 발생되거나 Java &lt;code&gt;throw&lt;/code&gt; 문에 의해 발생 될 수 있습니다 . 마찬가지로이 클래스 또는 해당 서브 클래스 중 하나만 &lt;code&gt;catch&lt;/code&gt; 절 에서 인수 유형이 될 수 있습니다 . 예외의 컴파일 타임 점검을 위해, &lt;a href=&quot;runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 의 서브 클래스가 아닌 &lt;code&gt;Throwable&lt;/code&gt; 및 &lt;code&gt;Throwable&lt;/code&gt; 의 서브 클래스는 Checked 예외로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="caaa27ee7d5ebe96563c4a7078bb2aeef3acb7d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TimeZone&lt;/code&gt; set by this method is overwritten by a &lt;a href=&quot;#setCalendar(java.util.Calendar)&quot;&gt;&lt;code&gt;setCalendar&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">&lt;code&gt;TimeZone&lt;/code&gt; 이 방법에 의해 설정이 덮어 쓰기된다 &lt;a href=&quot;#setCalendar(java.util.Calendar)&quot;&gt; &lt;code&gt;setCalendar&lt;/code&gt; &lt;/a&gt; 통화.</target>
        </trans-unit>
        <trans-unit id="4424bacaff9f769c17cab48ed5095a39891ea9af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TimeZone&lt;/code&gt; set by this method is overwritten by a &lt;a href=&quot;dateformat#setCalendar-java.util.Calendar-&quot;&gt;&lt;code&gt;setCalendar&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">&lt;code&gt;TimeZone&lt;/code&gt; 이 방법에 의해 설정은 덮어 쓰기이다 &lt;a href=&quot;dateformat#setCalendar-java.util.Calendar-&quot;&gt; &lt;code&gt;setCalendar&lt;/code&gt; 의&lt;/a&gt; 통화.</target>
        </trans-unit>
        <trans-unit id="ab6ef098a0e2b11a35d0346ab8d1c75fce3fa93c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TimeZone&lt;/code&gt; set by this method may be overwritten as a result of a call to the parse method.</source>
          <target state="translated">&lt;code&gt;TimeZone&lt;/code&gt; 이 방법에 의해 세트 parse 메소드 호출의 결과로 겹쳐 쓸 수있다.</target>
        </trans-unit>
        <trans-unit id="64856a2ea07154d8aca40a14f0b2a8f2b6235c3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Track&lt;/code&gt; class provides methods to edit the track by adding or removing &lt;code&gt;MidiEvent&lt;/code&gt; objects from it. These operations keep the event list in the correct time order. Methods are also included to obtain the track's size, in terms of either the number of events it contains or its duration in ticks.</source>
          <target state="translated">&lt;code&gt;Track&lt;/code&gt; 클래스 추가하거나 제거하여 수정하는 방법을 제공하는 선로 &lt;code&gt;MidiEvent&lt;/code&gt; 그것으로부터 개체. 이러한 작업은 이벤트 목록을 올바른 시간 순서로 유지합니다. 포함 된 이벤트 수 또는 틱 단위의 지속 시간 측면에서 트랙의 크기를 얻는 방법도 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="88c4d505c20b758c1cf067046de7a5f61b22c838" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TrailerFieldBC&lt;/code&gt; constant as defined in PKCS#1</source>
          <target state="translated">&lt;code&gt;TrailerFieldBC&lt;/code&gt; PKCS # 1에 정의 된 상수</target>
        </trans-unit>
        <trans-unit id="337a73862454b4e4ce4630d25f83783780da6507" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TransformAttribute&lt;/code&gt; class defines the constant &lt;a href=&quot;transformattribute#IDENTITY&quot;&gt;&lt;code&gt;IDENTITY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;TransformAttribute&lt;/code&gt; 의의 클래스는 상수를 정의 &lt;a href=&quot;transformattribute#IDENTITY&quot;&gt; &lt;code&gt;IDENTITY&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="242dd480e8d4e2f04c2a0aca2e1d2c2a437f9ab1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TransformAttribute&lt;/code&gt; class provides an immutable wrapper for a transform so that it is safe to use as an attribute.</source>
          <target state="translated">&lt;code&gt;TransformAttribute&lt;/code&gt; 의 클래스는 그것을 속성으로서 안전하게 사용할 수 있도록 변환하는 불변 래퍼를 제공한다.</target>
        </trans-unit>
        <trans-unit id="9a63fe4036fc39c3775af4983ad2d733adec1ad6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Transient&lt;/code&gt; annotation may be be used in any of the methods that are involved in a &lt;a href=&quot;featuredescriptor&quot;&gt;&lt;code&gt;FeatureDescriptor&lt;/code&gt;&lt;/a&gt; subclass to identify the transient feature in the annotated class and its subclasses. Normally, the method that starts with &quot;get&quot; is the best place to put the annotation and it is this declaration that takes precedence in the case of multiple annotations being defined for the same feature.</source>
          <target state="translated">&lt;code&gt;Transient&lt;/code&gt; 주석은에 참여하는 방법 중 하나에서 사용 할 수있다 &lt;a href=&quot;featuredescriptor&quot;&gt; &lt;code&gt;FeatureDescriptor&lt;/code&gt; 의&lt;/a&gt; 주석 클래스와 그 서브 클래스에 과도 기능을 식별하는 서브 클래스입니다. 일반적으로 &quot;get&quot;으로 시작하는 메소드는 주석을 넣는 가장 좋은 위치이며 동일한 피처에 대해 여러 주석이 정의 된 경우에 우선합니다.</target>
        </trans-unit>
        <trans-unit id="9e364de330948156d7b30fb226ad141e51151b6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Transient&lt;/code&gt; annotation may be used in any of the methods that are involved in a &lt;a href=&quot;featuredescriptor&quot;&gt;&lt;code&gt;FeatureDescriptor&lt;/code&gt;&lt;/a&gt; subclass to identify the transient feature in the annotated class and its subclasses. Normally, the method that starts with &quot;get&quot; is the best place to put the annotation and it is this declaration that takes precedence in the case of multiple annotations being defined for the same feature.</source>
          <target state="translated">&lt;code&gt;Transient&lt;/code&gt; 주석은에 참여하는 방법 중 하나에 사용될 수있다 &lt;a href=&quot;featuredescriptor&quot;&gt; &lt;code&gt;FeatureDescriptor&lt;/code&gt; &lt;/a&gt; 주석 클래스와 그 서브 클래스에 과도 기능을 식별하는 서브 클래스입니다. 일반적으로 &quot;get&quot;으로 시작하는 메서드는 주석을 배치하는 가장 좋은 위치이며 동일한 기능에 대해 여러 주석이 정의되는 경우이 선언이 우선합니다.</target>
        </trans-unit>
        <trans-unit id="c2b4f4a819eabca9398ff09bcfb81fad4870d846" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Transparency&lt;/code&gt; interface defines the common transparency modes for implementing classes.</source>
          <target state="translated">&lt;code&gt;Transparency&lt;/code&gt; 인터페이스는, 클래스를 구현하기위한 공통의 투명도 모드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="670b265b3329f65feda03a613696faba69159109" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TreeCellRenderer&lt;/code&gt; is also responsible for rendering the the cell representing the tree's current DnD drop location if it has one. If this renderer cares about rendering the DnD drop location, it should query the tree directly to see if the given row represents the drop location:</source>
          <target state="translated">&lt;code&gt;TreeCellRenderer&lt;/code&gt; 또한 하나가있는 경우 트리의 현재 드래그 &amp;amp; 드롭 위치를 나타내는 셀을 렌더링 할 책임이있다. 이 렌더러가 DnD 드롭 위치를 렌더링하는 데 관심이 있다면 주어진 행이 드롭 위치를 나타내는 지 확인하기 위해 트리를 직접 쿼리해야합니다.</target>
        </trans-unit>
        <trans-unit id="f50af3967242881f5d0eaaa88b167baaa991e4f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TreeMap&lt;/code&gt; type of collection guarantees that the map will be in ascending key order, sorted according to the natural order for the key's class. Each key references a &lt;code&gt;Vector&lt;/code&gt; object that corresponds to one row of a &lt;code&gt;RowSet&lt;/code&gt; object. Therefore, the size of each &lt;code&gt;Vector&lt;/code&gt; object must be exactly equal to the number of columns in the &lt;code&gt;RowSet&lt;/code&gt; object. The key used by the &lt;code&gt;TreeMap&lt;/code&gt; collection is determined by the implementation, which may choose to leverage a set key that is available within the internal &lt;code&gt;RowSet&lt;/code&gt; tabular structure by virtue of a key already set either on the &lt;code&gt;RowSet&lt;/code&gt; object itself or on the underlying SQL data.</source>
          <target state="translated">&lt;code&gt;TreeMap&lt;/code&gt; 수집 보장의 유형은 맵이 키의 승순으로 소트됩니다, 키의 클래스의 자연 순서에 따라 정렬. 각 키 는 &lt;code&gt;RowSet&lt;/code&gt; 객체 의 한 행에 해당 하는 &lt;code&gt;Vector&lt;/code&gt; 객체를 참조 합니다. 따라서 각 &lt;code&gt;Vector&lt;/code&gt; 객체 의 크기 는 &lt;code&gt;RowSet&lt;/code&gt; 객체 의 열 수와 정확히 같아야 합니다. &lt;code&gt;TreeMap&lt;/code&gt; 컬렉션에서 사용하는 키 는 구현에 의해 결정되며 , &lt;code&gt;RowSet&lt;/code&gt; 개체 자체 또는 기본 SQL 데이터에 이미 설정된 키를 통해 내부 &lt;code&gt;RowSet&lt;/code&gt; 테이블 형식 구조 내에서 사용할 수있는 키 설정을 활용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9bcd29228e53625367d091097491a39f7a4ef896" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TypeInfo&lt;/code&gt; interface represents a type referenced from &lt;code&gt;Element&lt;/code&gt; or &lt;code&gt;Attr&lt;/code&gt; nodes, specified in the schemas associated with the document.</source>
          <target state="translated">&lt;code&gt;TypeInfo&lt;/code&gt; 인터페이스에서 참조되는 형태 표현 &lt;code&gt;Element&lt;/code&gt; 또는 &lt;code&gt;Attr&lt;/code&gt; 의 문서에 관련하는 schema로 지정된 노드를.</target>
        </trans-unit>
        <trans-unit id="7f72026f83b83008f230de60a8ad4d2f4f72a6f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TypeInfo&lt;/code&gt; interface represents a type referenced from &lt;code&gt;Element&lt;/code&gt; or &lt;code&gt;Attr&lt;/code&gt; nodes, specified in the schemas associated with the document. The type is a pair of a namespace URI and name properties, and depends on the document's schema.</source>
          <target state="translated">&lt;code&gt;TypeInfo&lt;/code&gt; 인터페이스에서 참조되는 형태 표현 &lt;code&gt;Element&lt;/code&gt; 또는 &lt;code&gt;Attr&lt;/code&gt; 의 문서에 관련하는 schema로 지정된 노드를. 유형은 네임 스페이스 URI 및 이름 속성의 쌍이며 문서의 스키마에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="62f28efbdf19e84d13677fbf535fa72f87f95a0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UIEvent&lt;/code&gt; interface provides specific contextual information associated with User Interface events.</source>
          <target state="translated">&lt;code&gt;UIEvent&lt;/code&gt; 인터페이스는 사용자 인터페이스 이벤트에 관련하는 고유의 문맥 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="56b910f29830f7a046163f6e535cb7ed1fc9dd25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;URI&lt;/code&gt; passed as an argument specifies the intended use for the cookies. In particular the scheme should reflect whether the cookies will be sent over http, https or used in another context like javascript. The host part should reflect either the destination of the cookies or their origin in the case of javascript.</source>
          <target state="translated">인수로 전달 된 &lt;code&gt;URI&lt;/code&gt; 는 쿠키의 용도를 지정합니다. 특히이 체계는 쿠키가 http, https를 통해 전송 될지 아니면 javascript와 같은 다른 컨텍스트에서 사용될지를 반영해야합니다. 호스트 부분은 javascript의 경우 쿠키의 대상 또는 해당 출처를 반영해야합니다.</target>
        </trans-unit>
        <trans-unit id="4ba34cdf99e04c2d36d3c24cfdbaca9cd7b39e21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;URLStreamHandlerFactory&lt;/code&gt; instance is used to construct a stream protocol handler from a protocol name.</source>
          <target state="translated">&lt;code&gt;URLStreamHandlerFactory&lt;/code&gt; 의 인스턴스는, 프로토콜 명으로부터 스트림 프로토콜 핸들러를 구축하는데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1d60c3045667966fd5b30a25092dd1ae85ace600" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UTF-16&lt;/code&gt; charsets are specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2781.txt&quot;&gt;&lt;i&gt;RFC 2781&lt;/i&gt;&lt;/a&gt;; the transformation formats upon which they are based are specified in Amendment 1 of ISO 10646-1 and are also described in the &lt;a href=&quot;http://www.unicode.org/unicode/standard/standard.html&quot;&gt;&lt;i&gt;Unicode Standard&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;UTF-16&lt;/code&gt; 캐릭터 세트가 지정됩니다 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2781.txt&quot;&gt;&lt;i&gt;RFC 2781&lt;/i&gt;&lt;/a&gt; ; 기반이되는 변환 형식은 ISO 10646-1의 개정 1에 명시되어 있으며 &lt;a href=&quot;http://www.unicode.org/unicode/standard/standard.html&quot;&gt;&lt;i&gt;유니 코드 표준&lt;/i&gt;&lt;/a&gt; 에도 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e562ee77a3c77e7c3517890b43d086ebf2121c0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UTF-16&lt;/code&gt; charsets use sixteen-bit quantities and are therefore sensitive to byte order. In these encodings the byte order of a stream may be indicated by an initial</source>
          <target state="translated">&lt;code&gt;UTF-16&lt;/code&gt; 문자 세트는 16 비트의 양을 사용 바이트 순서에 따라서 민감하다. 이러한 인코딩에서 스트림의 바이트 순서는 이니셜로 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf273b4ec9d4f261c426075182f01ae5218ee7da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UTF-8&lt;/code&gt; charset is specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2279.txt&quot;&gt;&lt;i&gt;RFC 2279&lt;/i&gt;&lt;/a&gt;; the transformation format upon which it is based is specified in Amendment 2 of ISO 10646-1 and is also described in the &lt;a href=&quot;http://www.unicode.org/unicode/standard/standard.html&quot;&gt;&lt;i&gt;Unicode Standard&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;UTF-8&lt;/code&gt; 캐릭터 세트가 지정됩니다 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2279.txt&quot;&gt;&lt;i&gt;RFC 2279&lt;/i&gt;&lt;/a&gt; ; 기반이되는 변환 형식은 ISO 10646-1의 개정 2에 명시되어 있으며 &lt;a href=&quot;http://www.unicode.org/unicode/standard/standard.html&quot;&gt;&lt;i&gt;유니 코드 표준&lt;/i&gt;&lt;/a&gt; 에도 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="40e82979aa5d5e239e732f4633c110c90f289973" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UndefinedProperty&lt;/code&gt; object should be returned whenever a property which was not defined for a particular image is fetched.</source>
          <target state="translated">&lt;code&gt;UndefinedProperty&lt;/code&gt; 의 특정 이미지에 대해 정의하지 않은 속성 페치마다 객체가 리턴되어야한다.</target>
        </trans-unit>
        <trans-unit id="4d98c83e8fcbc979fcd257731475f0094c62618b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UndoManager&lt;/code&gt; makes use of &lt;code&gt;isSignificant&lt;/code&gt; to determine how many edits should be undone or redone. The &lt;code&gt;UndoManager&lt;/code&gt; will undo or redo all insignificant edits (&lt;code&gt;isSignificant&lt;/code&gt; returns false) between the current edit and the last or next significant edit. &lt;code&gt;addEdit&lt;/code&gt; and &lt;code&gt;replaceEdit&lt;/code&gt; can be used to treat multiple edits as a single edit, returning false from &lt;code&gt;isSignificant&lt;/code&gt; allows for treating can be used to have many smaller edits undone or redone at once. Similar functionality can also be done using the &lt;code&gt;addEdit&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;UndoManager&lt;/code&gt; 사용하게 &lt;code&gt;isSignificant&lt;/code&gt; 이 많은 편집이 취소 또는 재실행하는 방법을 결정 할 수 있습니다. &lt;code&gt;UndoManager&lt;/code&gt; 취소하거나 모든 의미가없는 편집 (재실행 &lt;code&gt;isSignificant&lt;/code&gt; 는 현재 편집 마지막 또는 다음의 편집 사이를 false를 돌려줍니다). &lt;code&gt;addEdit&lt;/code&gt; 및 &lt;code&gt;replaceEdit&lt;/code&gt; 를 사용하여 여러 편집을 단일 편집 으로 처리 할 수 ​​있습니다. &lt;code&gt;isSignificant&lt;/code&gt; 에서 false를 반환 하면 여러 작은 편집을 한 번에 취소하거나 다시 실행하는 데 사용할 수 있습니다. 비슷한 기능은 &lt;code&gt;addEdit&lt;/code&gt; 메서드를 사용하여 수행 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f3746255404c7a2b3ecfdce90d4c067951094108" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UnicodeBlock&lt;/code&gt; instance identified by &lt;code&gt;blockName&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;UnicodeBlock&lt;/code&gt; 에 의해 확인 된 예를 &lt;code&gt;blockName&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d896f7ed14163beb92e5724cc9e8050c6b43c4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UnicodeBlock&lt;/code&gt; instance representing the Unicode block of which this character is a member, or &lt;code&gt;null&lt;/code&gt; if the character is not a member of any Unicode block</source>
          <target state="translated">&lt;code&gt;UnicodeBlock&lt;/code&gt; 이 문자는 부재이거나, 또는 어느 유니 나타내는 블록 인스턴스 &lt;code&gt;null&lt;/code&gt; 문자 유니 코드 블록의 구성원이 아닌 경우</target>
        </trans-unit>
        <trans-unit id="3da0426647b35089008f837fbe22d127f746d93b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UnicodeScript&lt;/code&gt; constant identified by &lt;code&gt;scriptName&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;UnicodeScript&lt;/code&gt; 의 식별 일정 &lt;code&gt;scriptName&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="361aa86ab23e083f317e898d7085e206739f58ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UnicodeScript&lt;/code&gt; constant representing the Unicode script of which this character is assigned to.</source>
          <target state="translated">&lt;code&gt;UnicodeScript&lt;/code&gt; 의 이 문자가 할당되어있는 유니 코드 스크립트를 나타내는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="dff70a6a25ac748bc050f9064cb9cc771e6ae57b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Url&lt;/code&gt; property will be &lt;code&gt;null&lt;/code&gt; if the underlying data source is a non-SQL data source, such as a spreadsheet or an XML data source.</source>
          <target state="translated">&lt;code&gt;Url&lt;/code&gt; 속성이 될 것 &lt;code&gt;null&lt;/code&gt; 기본 데이터 소스는 스프레드 시트 또는 XML 데이터 원본으로, 비 SQL 데이터 소스 인 경우.</target>
        </trans-unit>
        <trans-unit id="6b22e15bc413740c6b41cef56f96b20ebfc3c2ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; for this file system</source>
          <target state="translated">이 파일 시스템 의 &lt;code&gt;UserPrincipalLookupService&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c0c0ad3a9196627434d4da0577e73a19e9ed982" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ValueExp&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ValueExp&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
