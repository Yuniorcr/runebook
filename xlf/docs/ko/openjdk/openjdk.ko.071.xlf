<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="f7c9623146033708c4faaa25925bac621d323c49" translate="yes" xml:space="preserve">
          <source>CannotProceedException.setAltName()</source>
          <target state="translated">CannotProceedException.setAltName()</target>
        </trans-unit>
        <trans-unit id="e45ec9c27362949f5ebc9dc38499145da1e1d1f3" translate="yes" xml:space="preserve">
          <source>CannotProceedException.setAltNameCtx()</source>
          <target state="translated">CannotProceedException.setAltNameCtx()</target>
        </trans-unit>
        <trans-unit id="f5ef226396a6a591ddabbb59cdd7d8b4e2773ea7" translate="yes" xml:space="preserve">
          <source>CannotProceedException.setEnvironment()</source>
          <target state="translated">CannotProceedException.setEnvironment()</target>
        </trans-unit>
        <trans-unit id="320bc7e81fc02eea9a8e8d701a0c374ec8d8c365" translate="yes" xml:space="preserve">
          <source>CannotProceedException.setRemainingNewName()</source>
          <target state="translated">CannotProceedException.setRemainingNewName()</target>
        </trans-unit>
        <trans-unit id="b2907cc345e7b66d2c377dc280e534e1412b1710" translate="yes" xml:space="preserve">
          <source>CannotRedoException</source>
          <target state="translated">CannotRedoException</target>
        </trans-unit>
        <trans-unit id="a05f113d48595b925f6d242c3b017e9bbf6e1d1c" translate="yes" xml:space="preserve">
          <source>CannotUndoException</source>
          <target state="translated">CannotUndoException</target>
        </trans-unit>
        <trans-unit id="48d00a84d26813f8c087c3276fda9aab42fda222" translate="yes" xml:space="preserve">
          <source>Canonical String format of Distinguished Names.</source>
          <target state="translated">고유 이름의 정식 문자열 형식.</target>
        </trans-unit>
        <trans-unit id="10316f9b7b66c9723f3fc774ada93d08db83e825" translate="yes" xml:space="preserve">
          <source>Canonical block names as defined by the Unicode Standard. For example, the standard defines a &quot;Basic Latin&quot; block. Therefore, this method accepts &quot;Basic Latin&quot; as a valid block name. The documentation of each UnicodeBlock provides the canonical name.</source>
          <target state="translated">유니 코드 표준에 의해 정의 된 정식 블록 이름 예를 들어, 표준에서는 &quot;기본 라틴어&quot;블록을 정의합니다. 따라서이 방법은 &quot;Basic Latin&quot;을 유효한 블록 이름으로 허용합니다. 각 UnicodeBlock의 설명서는 표준 이름을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2c5e448e4e3ba84497188b40292338560845d688" translate="yes" xml:space="preserve">
          <source>Canonical block names with all spaces removed. For example, &quot;BasicLatin&quot; is a valid block name for the &quot;Basic Latin&quot; block.</source>
          <target state="translated">모든 공백이 제거 된 정식 블록 이름 예를 들어 &quot;BasicLatin&quot;은 &quot;Basic Latin&quot;블록에 유효한 블록 이름입니다.</target>
        </trans-unit>
        <trans-unit id="f23e578f453e085aea288db8af120a3b913d1f43" translate="yes" xml:space="preserve">
          <source>Canonical decomposition, followed by canonical composition.</source>
          <target state="translated">정식 분해 후 정식 조성.</target>
        </trans-unit>
        <trans-unit id="b3ff714efaabf2382b9a14b9f2269548dbf5245f" translate="yes" xml:space="preserve">
          <source>Canonical decomposition.</source>
          <target state="translated">정식 분해.</target>
        </trans-unit>
        <trans-unit id="fc989792e3320080caf5566daa1a6005af2d81ad" translate="yes" xml:space="preserve">
          <source>CanonicalizationMethod</source>
          <target state="translated">CanonicalizationMethod</target>
        </trans-unit>
        <trans-unit id="a3f80b87a456136fc59c442bd1ee5b5eec2430f1" translate="yes" xml:space="preserve">
          <source>Canvas</source>
          <target state="translated">Canvas</target>
        </trans-unit>
        <trans-unit id="ca4813ed233ce2b20c5012cbadb1f46e40983a7e" translate="yes" xml:space="preserve">
          <source>Canvas.AccessibleAWTCanvas</source>
          <target state="translated">Canvas.AccessibleAWTCanvas</target>
        </trans-unit>
        <trans-unit id="ca09c54bff74a82bae543ebe259f7452ee8c5293" translate="yes" xml:space="preserve">
          <source>Capabilities</source>
          <target state="translated">Capabilities</target>
        </trans-unit>
        <trans-unit id="a616740bae2f0b23484038f8ab737dbcc456ace5" translate="yes" xml:space="preserve">
          <source>Capabilities and properties of buffers.</source>
          <target state="translated">Capabilities and properties of buffers.</target>
        </trans-unit>
        <trans-unit id="36c452c44bf311737e3c88b47e13ace844108140" translate="yes" xml:space="preserve">
          <source>Capabilities and properties of images.</source>
          <target state="translated">Capabilities and properties of images.</target>
        </trans-unit>
        <trans-unit id="f2f6829dfcadb86309ec529dd464cb3f71ec0377" translate="yes" xml:space="preserve">
          <source>Caption alignment with respect to the table.</source>
          <target state="translated">표에 대한 캡션 정렬.</target>
        </trans-unit>
        <trans-unit id="0975dac82666d04b41fcfbf651b3d79a3d00fc1a" translate="yes" xml:space="preserve">
          <source>Caption alignment with respect to the table. See the align attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">표에 대한 캡션 정렬. HTML 4.0의 align 속성 정의를 참조하십시오. 이 속성은 HTML 4.0에서 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4e2db8db8213152e8a6ff33d2673ad50fea7483d" translate="yes" xml:space="preserve">
          <source>Captures the current state of this MBean instance and writes it out to the persistent store.</source>
          <target state="translated">Captures the current state of this MBean instance and writes it out to the persistent store.</target>
        </trans-unit>
        <trans-unit id="3eddb75415e4a6828042e9ba3b6a91b4aff21b45" translate="yes" xml:space="preserve">
          <source>Captures the current state of this MBean instance and writes it out to the persistent store. The state stored could include attribute and operation values.</source>
          <target state="translated">이 MBean 인스턴스의 현재 상태를 캡쳐 해 퍼시 스턴트 스토어에 써냅니다. 저장된 상태에는 속성 및 작업 값이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="484df534cdef4ebf75133fdb68378b3415ee1e4d" translate="yes" xml:space="preserve">
          <source>Captures the current state of this MBean instance and writes it out to the persistent store. The state stored could include attribute and operation values. If one of these methods of persistence is not supported a &quot;serviceNotFound&quot; exception will be thrown.</source>
          <target state="translated">이 MBean 인스턴스의 현재 상태를 캡쳐 해 퍼시 스턴트 스토어에 써냅니다. 저장된 상태에는 속성 및 작업 값이 포함될 수 있습니다. 이러한 지속성 방법 중 하나가 지원되지 않으면 &quot;serviceNotFound&quot;예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5f99131d8f26d73ddf398914377998b8ff7b974d" translate="yes" xml:space="preserve">
          <source>Capturing groups are numbered by counting their opening parentheses from left to right. In the expression &lt;code&gt;((A)(B(C)))&lt;/code&gt;, for example, there are four such groups:</source>
          <target state="translated">캡처 그룹은 여는 괄호를 왼쪽에서 오른쪽으로 세어 번호를 매 깁니다. 예를 들어 &lt;code&gt;((A)(B(C)))&lt;/code&gt; 에는 다음과 같은 4 개의 그룹이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f7bfb0888dc6344b59dd2d029c7fdea4c9becd4" translate="yes" xml:space="preserve">
          <source>Capturing groups are so named because, during a match, each subsequence of the input sequence that matches such a group is saved. The captured subsequence may be used later in the expression, via a back reference, and may also be retrieved from the matcher once the match operation is complete.</source>
          <target state="translated">일치하는 동안 해당 그룹과 일치하는 입력 시퀀스의 각 하위 시퀀스가 ​​저장되므로 캡처 그룹의 이름이 지정됩니다. 캡처 된 서브 시퀀스는 역 참조를 통해 나중에 표현식에서 사용될 수 있으며, 매칭 동작이 완료되면 매칭 기로부터 검색 될 수도있다.</target>
        </trans-unit>
        <trans-unit id="4d4ce73b15660f20977ad7efab2283c51bdae008" translate="yes" xml:space="preserve">
          <source>Card</source>
          <target state="translated">Card</target>
        </trans-unit>
        <trans-unit id="045efa09ac3a18e4961cec181e673dd6cf53805e" translate="yes" xml:space="preserve">
          <source>CardChannel</source>
          <target state="translated">CardChannel</target>
        </trans-unit>
        <trans-unit id="ca16f0f80693f6f1e87902862fc9a3fe6fdb5f98" translate="yes" xml:space="preserve">
          <source>CardException</source>
          <target state="translated">CardException</target>
        </trans-unit>
        <trans-unit id="c5f35cf0e9d02562133731a74bab23e2f7fa0e60" translate="yes" xml:space="preserve">
          <source>CardLayout</source>
          <target state="translated">CardLayout</target>
        </trans-unit>
        <trans-unit id="f640d43ef1916f5374cd5a0102c550f7fb3fbbff" translate="yes" xml:space="preserve">
          <source>CardNotPresentException</source>
          <target state="translated">CardNotPresentException</target>
        </trans-unit>
        <trans-unit id="8f112cdb36ada27d432df1c03aebb1d540b696f8" translate="yes" xml:space="preserve">
          <source>CardPermission</source>
          <target state="translated">CardPermission</target>
        </trans-unit>
        <trans-unit id="e2e9ab6e1b4c09795ecbeb17a0a7a58c97e43921" translate="yes" xml:space="preserve">
          <source>CardTerminal</source>
          <target state="translated">CardTerminal</target>
        </trans-unit>
        <trans-unit id="19924218e0b53039020662bfa847198921eba5b0" translate="yes" xml:space="preserve">
          <source>CardTerminals</source>
          <target state="translated">CardTerminals</target>
        </trans-unit>
        <trans-unit id="f63b49afb378d3252c32d021f34177ce6b22aeeb" translate="yes" xml:space="preserve">
          <source>CardTerminals for which a card insertion was detected during the latest call to &lt;a href=&quot;cardterminals#waitForChange()&quot;&gt;waitForChange()&lt;/a&gt; call.</source>
          <target state="translated">CardTerminals for which a card insertion was detected during the latest call to &lt;a href=&quot;cardterminals#waitForChange()&quot;&gt;waitForChange()&lt;/a&gt; call.</target>
        </trans-unit>
        <trans-unit id="c94a962d0eaedcbc61c83b88935cbcd55d8114bb" translate="yes" xml:space="preserve">
          <source>CardTerminals for which a card removal was detected during the latest call to &lt;a href=&quot;cardterminals#waitForChange()&quot;&gt;waitForChange()&lt;/a&gt; call.</source>
          <target state="translated">CardTerminals for which a card removal was detected during the latest call to &lt;a href=&quot;cardterminals#waitForChange()&quot;&gt;waitForChange()&lt;/a&gt; call.</target>
        </trans-unit>
        <trans-unit id="1e630d288324e129d1bd0e7f1d134085ea2267e0" translate="yes" xml:space="preserve">
          <source>CardTerminals in which a card is not present.</source>
          <target state="translated">카드가없는 CardTerminals.</target>
        </trans-unit>
        <trans-unit id="ba0475f9b0895c462c461a0ac3194d71c00b0902" translate="yes" xml:space="preserve">
          <source>CardTerminals in which a card is present.</source>
          <target state="translated">카드가있는 CardTerminals.</target>
        </trans-unit>
        <trans-unit id="705bcd3ea80c5f244c79d18c2551af78580582d8" translate="yes" xml:space="preserve">
          <source>CardTerminals.State</source>
          <target state="translated">CardTerminals.State</target>
        </trans-unit>
        <trans-unit id="4ae333e134e3d26f7e2b7e560a7b209011dc62bf" translate="yes" xml:space="preserve">
          <source>Care must also be exercised when using collections that have restrictions on the elements that they may contain. Collection implementations are allowed to throw exceptions for any operation involving elements they deem ineligible. For absolute safety the specified collections should contain only elements which are eligible elements for both collections.</source>
          <target state="translated">포함 할 수있는 요소에 제한이있는 컬렉션을 사용할 때는주의를 기울여야합니다. 컬렉션 구현은 부적합한 것으로 간주되는 요소와 관련된 모든 작업에 대해 예외를 발생시킬 수 있습니다. 절대적인 안전을 위해 지정된 컬렉션에는 두 컬렉션 모두에 적합한 요소 만 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="e271e77bb6456e192d1e4d6bb782cfcb78872d53" translate="yes" xml:space="preserve">
          <source>Care must be exercised if this method is used on collections that do not comply with the general contract for &lt;code&gt;Collection&lt;/code&gt;. Implementations may elect to iterate over either collection and test for containment in the other collection (or to perform any equivalent computation). If either collection uses a nonstandard equality test (as does a &lt;a href=&quot;sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; whose ordering is not &lt;em&gt;compatible with equals&lt;/em&gt;, or the key set of an &lt;a href=&quot;identityhashmap&quot;&gt;&lt;code&gt;IdentityHashMap&lt;/code&gt;&lt;/a&gt;), both collections must use the same nonstandard equality test, or the result of this method is undefined.</source>
          <target state="translated">이 메소드의 범용 규약을 준수하지 않는 컬렉션에 사용하는 경우주의를 기울여야한다 &lt;code&gt;Collection&lt;/code&gt; . 구현은 수집을 반복하고 다른 수집의 격리를 테스트하거나 동등한 계산을 수행하도록 선택할 수 있습니다. (A처럼 하나 컬렉션 비표준 평등 테스트를 사용하는 경우 &lt;a href=&quot;sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; 의&lt;/a&gt; 그 주문하지 &lt;em&gt;equals와 호환&lt;/em&gt; , 또는의 키 세트 &lt;a href=&quot;identityhashmap&quot;&gt; &lt;code&gt;IdentityHashMap&lt;/code&gt; 의를&lt;/a&gt; ) 두 컬렉션은 같은 비표준 평등 테스트를 사용해야합니다, 또는이 메소드의 결과는 정의되지 않는다.</target>
        </trans-unit>
        <trans-unit id="c5e6abc67fc358c848b17d9a9f0c32c1b5ac28b6" translate="yes" xml:space="preserve">
          <source>Care must be taken when defining such a filter, as defining a white list too restrictive or a too wide a black list may prevent legitimate clients from interoperating with the &lt;code&gt;JMXConnectorServer&lt;/code&gt;.</source>
          <target state="translated">화이트리스트를 너무 제한적이거나 너무 넓은 블랙리스트로 정의하면 합법적 인 클라이언트가 &lt;code&gt;JMXConnectorServer&lt;/code&gt; 와 상호 운용되지 않을 수 있으므로 이러한 필터를 정의 할 때는주의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4757eeaf4c543dfa82e62f8c81c30e2a72f103b6" translate="yes" xml:space="preserve">
          <source>Care must be taken when multiple threads are accessing the same &lt;code&gt;EventContext&lt;/code&gt; concurrently. See the &lt;a href=&quot;package-summary#THREADING&quot;&gt;package description&lt;/a&gt; for more information on threading issues.</source>
          <target state="translated">여러 스레드가 동일한 &lt;code&gt;EventContext&lt;/code&gt; 에 동시에 액세스하는 경우주의해야합니다 . 스레딩 문제에 대한 자세한 내용은 &lt;a href=&quot;package-summary#THREADING&quot;&gt;패키지 설명&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="923c6b11e93245ac2f96ee574ed26b82da890982" translate="yes" xml:space="preserve">
          <source>Care should be exercised if &lt;code&gt;BigDecimal&lt;/code&gt; objects are used as keys in a &lt;a href=&quot;../util/sortedmap&quot;&gt;&lt;code&gt;SortedMap&lt;/code&gt;&lt;/a&gt; or elements in a &lt;a href=&quot;../util/sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; since &lt;code&gt;BigDecimal&lt;/code&gt;'s</source>
          <target state="translated">만약 관리 기울여야 &lt;code&gt;BigDecimal&lt;/code&gt; 오브젝트는 키로서 사용 &lt;a href=&quot;../util/sortedmap&quot;&gt; &lt;code&gt;SortedMap&lt;/code&gt; &lt;/a&gt; A의 요소 또는 &lt;a href=&quot;../util/sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; 의&lt;/a&gt; 사람 &lt;code&gt;BigDecimal&lt;/code&gt; 의</target>
        </trans-unit>
        <trans-unit id="6d9933ebfca70ad50e9ac00a9de917a65ce29f03" translate="yes" xml:space="preserve">
          <source>Care should be taken before granting code permission to access certain system properties. For example, granting permission to access the &quot;java.home&quot; system property gives potentially malevolent code sensitive information about the system environment (the Java installation directory). Also, granting permission to access the &quot;user.name&quot; and &quot;user.home&quot; system properties gives potentially malevolent code sensitive information about the user environment (the user's account name and home directory).</source>
          <target state="translated">특정 시스템 속성에 액세스 할 수있는 코드 권한을 부여하기 전에주의해야합니다. 예를 들어, &quot;java.home&quot;시스템 특성에 액세스 할 수있는 권한을 부여하면 잠재적으로 시스템 환경 (Java 설치 디렉토리)에 대한 중요한 코드 민감한 정보가 제공됩니다. 또한 &quot;user.name&quot;및 &quot;user.home&quot;시스템 특성에 액세스 할 수있는 권한을 부여하면 잠재적으로 사용자 환경 (사용자의 계정 이름 및 홈 디렉토리)에 대한 중요한 코드 정보가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="9605de2912ea1c47d664be8282b39ecfd39710ad" translate="yes" xml:space="preserve">
          <source>Care should be taken to ensure that a connected datagram socket is not shared with untrusted code. When a socket is connected, &lt;a href=&quot;#receive(java.net.DatagramPacket)&quot;&gt;&lt;code&gt;receive&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#send(java.net.DatagramPacket)&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt;&lt;b&gt;will not perform any security checks&lt;/b&gt; on incoming and outgoing packets, other than matching the packet's and the socket's address and port. On a send operation, if the packet's address is set and the packet's address and the socket's address do not match, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown. A socket connected to a multicast address may only be used to send packets. Datagrams in the socket's &lt;a href=&quot;standardsocketoptions#SO_RCVBUF&quot;&gt;socket receive buffer&lt;/a&gt;, which have not been &lt;a href=&quot;#receive(java.net.DatagramPacket)&quot;&gt;received&lt;/a&gt; before invoking this method, may be discarded.</source>
          <target state="translated">연결된 데이터 그램 소켓이 신뢰할 수없는 코드와 공유되지 않도록주의해야합니다. 소켓이 연결되면 &lt;a href=&quot;#receive(java.net.DatagramPacket)&quot;&gt; &lt;code&gt;receive&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#send(java.net.DatagramPacket)&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt;&lt;b&gt; 은&lt;/b&gt; 패킷과 소켓의 주소 및 포트 일치를 제외하고 수신 및 송신 패킷에 &lt;b&gt;대한 보안 검사&lt;/b&gt; 를 &lt;b&gt;수행하지 않습니다&lt;/b&gt; . 송신 동작에서 패킷의 주소가 설정되어 있고 패킷의 주소와 소켓의 주소가 일치하지 않으면 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 발생합니다. 멀티 캐스트 주소에 연결된 소켓은 패킷 전송에만 사용할 수 있습니다. 이 메소드를 호출하기 전에 &lt;a href=&quot;#receive(java.net.DatagramPacket)&quot;&gt;수신&lt;/a&gt; 되지 않은 소켓의 &lt;a href=&quot;standardsocketoptions#SO_RCVBUF&quot;&gt;소켓 수신 버퍼&lt;/a&gt; 에있는 데이터 그램은 폐기 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="346d5eb9c899631f8ee16759bd31b6f38a40cacf" translate="yes" xml:space="preserve">
          <source>Care should be taken when configuring the executor service. It should support &lt;em&gt;direct handoff&lt;/em&gt; or &lt;em&gt;unbounded queuing&lt;/em&gt; of submitted tasks, and the thread that invokes the &lt;a href=&quot;../../util/concurrent/executor#execute(java.lang.Runnable)&quot;&gt;&lt;code&gt;execute&lt;/code&gt;&lt;/a&gt; method should never invoke the task directly. An implementation may mandate additional constraints.</source>
          <target state="translated">실행기 서비스를 구성 할 때주의해야합니다. 제출 된 작업의 &lt;em&gt;직접 전달&lt;/em&gt; 또는 &lt;em&gt;제한되지 않은 대기열&lt;/em&gt; 을 지원해야 하며 &lt;a href=&quot;../../util/concurrent/executor#execute(java.lang.Runnable)&quot;&gt; &lt;code&gt;execute&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하는 스레드 는 작업을 직접 호출해서는 안됩니다. 구현은 추가 제약을 요구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c1860643e3e4f90e059ac4929fca0350c1fee9c" translate="yes" xml:space="preserve">
          <source>Care should be taken when configuring the executor service. It should support &lt;em&gt;direct handoff&lt;/em&gt; or &lt;em&gt;unbounded queuing&lt;/em&gt; of submitted tasks, and the thread that invokes the &lt;a href=&quot;../../util/concurrent/executor#execute-java.lang.Runnable-&quot;&gt;&lt;code&gt;execute&lt;/code&gt;&lt;/a&gt; method should never invoke the task directly. An implementation may mandate additional constraints.</source>
          <target state="translated">실행기 서비스를 구성 할 때는주의해야합니다. 제출 된 작업의 &lt;em&gt;직접 전달&lt;/em&gt; 또는 &lt;em&gt;무제한 큐잉&lt;/em&gt; 을 지원해야하며 , &lt;a href=&quot;../../util/concurrent/executor#execute-java.lang.Runnable-&quot;&gt; &lt;code&gt;execute&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하는 스레드 는 작업을 직접 호출하지 않아야합니다. 구현시 추가 제약 조건이 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a6ae974d23ec2f751a1915ab8af5de0a911efdc" translate="yes" xml:space="preserve">
          <source>Care should be taken with &lt;code&gt;Controller&lt;/code&gt; objects, they should never be shared with untrusted code.</source>
          <target state="translated">케어가 함께 이동해야 &lt;code&gt;Controller&lt;/code&gt; 객체, 그들은 신뢰할 수없는 코드를 공유해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="606e5f68d94057646677730f58202826db219688" translate="yes" xml:space="preserve">
          <source>Careful attention may be required if a listener is associated with more than a single &lt;code&gt;WebSocket&lt;/code&gt;. In this case invocations related to different instances of &lt;code&gt;WebSocket&lt;/code&gt; may not be ordered and may even happen concurrently.</source>
          <target state="translated">리스너가 둘 이상의 &lt;code&gt;WebSocket&lt;/code&gt; 과 연결되어있는 경우주의가 필요할 수 있습니다 . 이 경우 &lt;code&gt;WebSocket&lt;/code&gt; 의 다른 인스턴스와 관련된 호출이 주문되지 않을 수 있으며 동시에 발생할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9daf6bef99f447bfc89398170bddc979a688326f" translate="yes" xml:space="preserve">
          <source>Caret</source>
          <target state="translated">Caret</target>
        </trans-unit>
        <trans-unit id="db8f036131bb00d14d153c2e3fb454270c079cd2" translate="yes" xml:space="preserve">
          <source>Caret that is changing</source>
          <target state="translated">변화하는 캐럿</target>
        </trans-unit>
        <trans-unit id="3ce304075fd80797ae4b16d93dba30384606f04c" translate="yes" xml:space="preserve">
          <source>CaretEvent</source>
          <target state="translated">CaretEvent</target>
        </trans-unit>
        <trans-unit id="9b563f75480ca75080e46ce7e05d689e5a9c0f7e" translate="yes" xml:space="preserve">
          <source>CaretEvent is used to notify interested parties that the text caret has changed in the event source.</source>
          <target state="translated">CaretEvent는 이벤트 소스에서 텍스트 캐럿이 변경되었음을 이해 당사자에게 알리는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e77bd84467a318a69174f8c2d91cda5e4af84e38" translate="yes" xml:space="preserve">
          <source>CaretListener</source>
          <target state="translated">CaretListener</target>
        </trans-unit>
        <trans-unit id="c3baf0918507f1e388c0d117ba4b67826b797ddf" translate="yes" xml:space="preserve">
          <source>CaretPolicy</source>
          <target state="translated">CaretPolicy</target>
        </trans-unit>
        <trans-unit id="61ecee4b3950ca32a78cd330a1c38c79af640b48" translate="yes" xml:space="preserve">
          <source>Case is in the form: &lt;code&gt;case &amp;lt;expression&amp;gt; -&amp;gt; &amp;lt;expression&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">케이스 형식은 &lt;code&gt;case &amp;lt;expression&amp;gt; -&amp;gt; &amp;lt;expression&amp;gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1ef263ced13ab22d2fdf6ee1c15bf8ff16966fea" translate="yes" xml:space="preserve">
          <source>Case is in the form: &lt;code&gt;case &amp;lt;expression&amp;gt;: &amp;lt;statements&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">케이스 형식은 &lt;code&gt;case &amp;lt;expression&amp;gt;: &amp;lt;statements&amp;gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4777552ad27209e66b6aae06b3a4603eaf692f3f" translate="yes" xml:space="preserve">
          <source>Case is normalized except for variant tags, which are left unchanged. Language is normalized to lower case, script to title case, country to upper case, and extensions to lower case.</source>
          <target state="translated">변경되지 않은 변형 태그를 제외하고 사례가 정규화됩니다. 언어는 소문자로, 스크립트는 제목으로, 국가는 대문자로, 확장은 소문자로 정규화됩니다.</target>
        </trans-unit>
        <trans-unit id="cc7945904e4b0297310f19e4ba8b84ac99d17c44" translate="yes" xml:space="preserve">
          <source>Case is not significant in the initial &lt;code&gt;service:jmx:&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; string or in the host part of the address. Depending on the protocol, case can be significant in the &lt;code&gt;&lt;em&gt;url-path&lt;/em&gt;&lt;/code&gt;.</source>
          <target state="translated">초기 &lt;code&gt;service:jmx:&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; 문자열 또는 주소의 호스트 부분에서 대소 문자가 중요하지 않습니다 . 프로토콜에 따라 &lt;code&gt;&lt;em&gt;url-path&lt;/em&gt;&lt;/code&gt; 에서 대소 문자가 중요 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e8fdd4650bb321f55a20a48b3e35729a0ad7e254" translate="yes" xml:space="preserve">
          <source>Case-insensitive matching can also be enabled via the embedded flag expression &lt;code&gt;(?i)&lt;/code&gt;.</source>
          <target state="translated">임베디드 플래그 표현식 &lt;code&gt;(?i)&lt;/code&gt; 통해 대소 문자를 구분하지 않는 일치를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ecfbbc31e43900d536cbf1d020cb99ca0f03d229" translate="yes" xml:space="preserve">
          <source>CaseTree</source>
          <target state="translated">CaseTree</target>
        </trans-unit>
        <trans-unit id="88098ec9a59d382d925e7d13c0d699b2e4f9d87d" translate="yes" xml:space="preserve">
          <source>CaseTree.CaseKind</source>
          <target state="translated">CaseTree.CaseKind</target>
        </trans-unit>
        <trans-unit id="36f7b7446983b8d2515ff34551d4f91a3b42cf00" translate="yes" xml:space="preserve">
          <source>Cases where the close operation may fail require careful attention by implementers. It is strongly advised to relinquish the underlying resources and to internally &lt;em&gt;mark&lt;/em&gt; the resource as closed, prior to throwing the exception. The &lt;code&gt;
 close&lt;/code&gt; method is unlikely to be invoked more than once and so this ensures that the resources are released in a timely manner. Furthermore it reduces problems that could arise when the resource wraps, or is wrapped, by another resource.</source>
          <target state="translated">닫기 작업이 실패 할 수있는 경우 구현 자의주의가 필요합니다. 예외를 발생시키기 전에 기본 리소스를 포기하고 내부적 으로 리소스를 닫힌 것으로 &lt;em&gt;표시&lt;/em&gt; 하는 것이 좋습니다 . &lt;code&gt; close&lt;/code&gt; 방법은 번과 자원을 적시에 출시되는이 보장하지만 너무 이상 호출 할 가능성이있다. 또한 리소스가 다른 리소스에 의해 래핑되거나 래핑 될 때 발생할 수있는 문제를 줄입니다.</target>
        </trans-unit>
        <trans-unit id="c548aed9d95a9b03525f47024eb2d90e24306b42" translate="yes" xml:space="preserve">
          <source>Cases where the close operation may fail require careful attention by implementers. It is strongly advised to relinquish the underlying resources and to internally &lt;em&gt;mark&lt;/em&gt; the resource as closed, prior to throwing the exception. The &lt;code&gt;close&lt;/code&gt; method is unlikely to be invoked more than once and so this ensures that the resources are released in a timely manner. Furthermore it reduces problems that could arise when the resource wraps, or is wrapped, by another resource.</source>
          <target state="translated">닫기 작업이 실패 할 수있는 경우 구현자가주의를 기울여야합니다. 예외를 발생시키기 전에 기본 리소스를 포기하고 내부적 으로 리소스를 닫은 것으로 &lt;em&gt;표시&lt;/em&gt; 하는 것이 좋습니다 . &lt;code&gt;close&lt;/code&gt; 방법은 번과 자원을 적시에 출시되는이 보장하지만 너무 이상 호출 할 가능성이있다. 또한 자원이 다른 자원에 의해 랩핑되거나 랩핑 될 때 발생할 수있는 문제점을 줄입니다.</target>
        </trans-unit>
        <trans-unit id="74b7e215932052054836592b4663428025418e5c" translate="yes" xml:space="preserve">
          <source>Cast from Q to S</source>
          <target state="translated">Q에서 S로 캐스트</target>
        </trans-unit>
        <trans-unit id="b7a3ccee6eb3ee7c9b622c28c24d76df46183a21" translate="yes" xml:space="preserve">
          <source>Cast from Wrapper(Q) to S</source>
          <target state="translated">래퍼 (Q)에서 S로 캐스트</target>
        </trans-unit>
        <trans-unit id="f710b81a7097facc7f40abf5ae11b3b52b7e365d" translate="yes" xml:space="preserve">
          <source>Casts an object to the class or interface represented by this &lt;code&gt;Class&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;Class&lt;/code&gt; 객체가 나타내는 클래스 또는 인터페이스에 객체를 캐스트 합니다.</target>
        </trans-unit>
        <trans-unit id="a527f5f1e2eceb8807c3dfe09d68c8ce7fe5110d" translate="yes" xml:space="preserve">
          <source>Casts this &lt;code&gt;Class&lt;/code&gt; object to represent a subclass of the class represented by the specified class object.</source>
          <target state="translated">이 &lt;code&gt;Class&lt;/code&gt; 객체를 캐스팅 하여 지정된 클래스 객체가 나타내는 클래스의 서브 클래스를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="58913905cf99c5af03731ae6a2b6cfb6492e869e" translate="yes" xml:space="preserve">
          <source>Casts this &lt;code&gt;Class&lt;/code&gt; object to represent a subclass of the class represented by the specified class object. Checks that the cast is valid, and throws a &lt;code&gt;ClassCastException&lt;/code&gt; if it is not. If this method succeeds, it always returns a reference to this &lt;code&gt;Class&lt;/code&gt; object.</source>
          <target state="translated">지정된 클래스 오브젝트가 나타내는 클래스의 서브 클래스를 나타 내기 위해이 &lt;code&gt;Class&lt;/code&gt; 오브젝트를 캐스트 합니다. 캐스트가 유효한지 확인하고 그렇지 않은 경우 &lt;code&gt;ClassCastException&lt;/code&gt; 을 발생시킵니다. 이 메서드가 성공하면 항상이 &lt;code&gt;Class&lt;/code&gt; 객체에 대한 참조를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="381497cf544e7e3446c330d10ca90c47bc074564" translate="yes" xml:space="preserve">
          <source>Casts this &lt;code&gt;Class&lt;/code&gt; object to represent a subclass of the class represented by the specified class object. Checks that the cast is valid, and throws a &lt;code&gt;ClassCastException&lt;/code&gt; if it is not. If this method succeeds, it always returns a reference to this class object.</source>
          <target state="translated">지정된 &lt;code&gt;Class&lt;/code&gt; 객체가 나타내는 클래스의 서브 클래스를 나타 내기 위해서이 Class 객체를 캐스트 합니다. 캐스트가 유효한지 확인하고 유효 하지 않은 경우 &lt;code&gt;ClassCastException&lt;/code&gt; 을 발생시킵니다. 이 메소드가 성공하면 항상이 클래스 오브젝트에 대한 참조를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="4a88d27bbae1de4425c9fd8fbb9edc938773265d" translate="yes" xml:space="preserve">
          <source>Catalog</source>
          <target state="translated">Catalog</target>
        </trans-unit>
        <trans-unit id="702505905ae3cf4486a2b03e3dbbfbe3392abc32" translate="yes" xml:space="preserve">
          <source>Catalog Entry Type</source>
          <target state="translated">카탈로그 항목 유형</target>
        </trans-unit>
        <trans-unit id="67593a0e877bb446db1c1108dc2062860932b981" translate="yes" xml:space="preserve">
          <source>Catalog Features</source>
          <target state="translated">카탈로그 기능</target>
        </trans-unit>
        <trans-unit id="76cb05cfe12b2850834a257292191d9f000f9e22" translate="yes" xml:space="preserve">
          <source>CatalogException</source>
          <target state="translated">CatalogException</target>
        </trans-unit>
        <trans-unit id="dbba88769bb80ffc80020eb0f4d169aa025c12f6" translate="yes" xml:space="preserve">
          <source>CatalogFeatures</source>
          <target state="translated">CatalogFeatures</target>
        </trans-unit>
        <trans-unit id="775ea3bd563da4a7d4d0b0302db60e148058f1d0" translate="yes" xml:space="preserve">
          <source>CatalogFeatures.Builder</source>
          <target state="translated">CatalogFeatures.Builder</target>
        </trans-unit>
        <trans-unit id="7b17d7b4d4161b94d21bebd535128e915c7e45fd" translate="yes" xml:space="preserve">
          <source>CatalogFeatures.Feature</source>
          <target state="translated">CatalogFeatures.Feature</target>
        </trans-unit>
        <trans-unit id="2304a8eae87e9a725c7452fbd20088d5336e9f06" translate="yes" xml:space="preserve">
          <source>CatalogManager</source>
          <target state="translated">CatalogManager</target>
        </trans-unit>
        <trans-unit id="7d38f26adb570b2259e48959d718cadc8e3b6d32" translate="yes" xml:space="preserve">
          <source>CatalogResolver</source>
          <target state="translated">CatalogResolver</target>
        </trans-unit>
        <trans-unit id="27ddd118ebed34221384a0113c8804a85cb07225" translate="yes" xml:space="preserve">
          <source>CatchTree</source>
          <target state="translated">CatchTree</target>
        </trans-unit>
        <trans-unit id="07cd10fd6f445c5e8cd5302ee9f84779ef3cd9d3" translate="yes" xml:space="preserve">
          <source>Categories and lanes</source>
          <target state="translated">카테고리 및 차선</target>
        </trans-unit>
        <trans-unit id="a3c686e711e4720f99b4562bb3dbaae7ab658cf2" translate="yes" xml:space="preserve">
          <source>Category</source>
          <target state="translated">Category</target>
        </trans-unit>
        <trans-unit id="f6e4f91c42b4691002ace573f665eb106bf6922d" translate="yes" xml:space="preserve">
          <source>Category used to represent the default locale for displaying user interfaces.</source>
          <target state="translated">사용자 인터페이스를 표시하기위한 기본 로케일을 나타내는 데 사용되는 카테고리입니다.</target>
        </trans-unit>
        <trans-unit id="13cea1cfe88ffb91572b5da3711b54a8649b1a44" translate="yes" xml:space="preserve">
          <source>Category used to represent the default locale for formatting dates, numbers, and/or currencies.</source>
          <target state="translated">날짜, 숫자 및 / 또는 통화 형식을 지정하기위한 기본 로캘을 나타내는 데 사용되는 범주입니다.</target>
        </trans-unit>
        <trans-unit id="0035edb00f47107debb2a1260fa3603a74178e57" translate="yes" xml:space="preserve">
          <source>Cause of this XPathException.</source>
          <target state="translated">이 XPathException의 원인입니다.</target>
        </trans-unit>
        <trans-unit id="a4e0a75e85b4b29a1ef52d9d7f34f23219af7ec9" translate="yes" xml:space="preserve">
          <source>Cause the Compiler to cease operation.</source>
          <target state="translated">컴파일러가 작동을 멈 춥니 다.</target>
        </trans-unit>
        <trans-unit id="869b4cfffe2bec791d1b0232276aa81ba1f6de0a" translate="yes" xml:space="preserve">
          <source>Cause the Compiler to resume operation.</source>
          <target state="translated">컴파일러가 작동을 재개하도록하십시오.</target>
        </trans-unit>
        <trans-unit id="6bb469acd97fb239c699e5427d1b45aa7a8fb8ce" translate="yes" xml:space="preserve">
          <source>Cause the caret to be painted.</source>
          <target state="translated">캐럿이 그려 지도록합니다.</target>
        </trans-unit>
        <trans-unit id="96688ccdf8ed102b06bca517a33035640af038d1" translate="yes" xml:space="preserve">
          <source>Cause the caret to be painted. The repaint area is the bounding box of the caret (i.e. the caret rectangle or &lt;em&gt;this&lt;/em&gt;).</source>
          <target state="translated">캐럿이 그려 지도록합니다. 다시 칠하기 영역은 캐럿의 경계 상자입니다 (예 : 캐럿 사각형 또는 &lt;em&gt;this&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="5aea12fd289d3fe1a1632cf9252d216eb8738a39" translate="yes" xml:space="preserve">
          <source>Causes</source>
          <target state="translated">Causes</target>
        </trans-unit>
        <trans-unit id="8273ae9893a8a00a1f9fe977d73da308640c25b9" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;doRun.run()&lt;/code&gt; to be executed synchronously on the AWT event dispatching thread.</source>
          <target state="translated">원인 &lt;code&gt;doRun.run()&lt;/code&gt; , AWT 이벤트 발송 쓰레드로 비동기 적으로 실행시킵니다.</target>
        </trans-unit>
        <trans-unit id="0bd84247f34d9fe379860c7b19cb35e4d575291f" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;doRun.run()&lt;/code&gt; to be executed synchronously on the AWT event dispatching thread. This call blocks until all pending AWT events have been processed and (then) &lt;code&gt;doRun.run()&lt;/code&gt; returns. This method should be used when an application thread needs to update the GUI. It shouldn't be called from the event dispatching thread. Here's an example that creates a new application thread that uses &lt;code&gt;invokeAndWait&lt;/code&gt; to print a string from the event dispatching thread and then, when that's finished, print a string from the application thread.</source>
          <target state="translated">원인 &lt;code&gt;doRun.run()&lt;/code&gt; , AWT 이벤트 발송 쓰레드로 비동기 적으로 실행시킵니다. 이 호출은 보류중인 모든 AWT 이벤트가 처리되고 (그런 다음) &lt;code&gt;doRun.run()&lt;/code&gt; 반환 될 때까지 차단 됩니다. 이 방법은 애플리케이션 스레드가 GUI를 업데이트해야 할 때 사용해야합니다. 이벤트 디스패치 스레드에서 호출하면 안됩니다. 다음은 &lt;code&gt;invokeAndWait&lt;/code&gt; 를 사용 하여 이벤트 디스패치 스레드에서 문자열을 인쇄 한 다음 완료되면 애플리케이션 스레드에서 문자열을 인쇄 하는 새 응용 프로그램 스레드를 만드는 예제입니다 .</target>
        </trans-unit>
        <trans-unit id="b0e4aafbd5d0a504fe86c2ef85f0fc70388326fd" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;runnable&lt;/code&gt; to have its &lt;code&gt;run&lt;/code&gt; method called in the &lt;a href=&quot;#isDispatchThread()&quot;&gt;&lt;code&gt;dispatch thread&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;toolkit#getSystemEventQueue()&quot;&gt;&lt;code&gt;the system EventQueue&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">원인은 &lt;code&gt;runnable&lt;/code&gt; 그것 가지고 &lt;code&gt;run&lt;/code&gt; 에서 호출 방법 &lt;a href=&quot;#isDispatchThread()&quot;&gt; &lt;code&gt;dispatch thread&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;toolkit#getSystemEventQueue()&quot;&gt; &lt;code&gt;the system EventQueue&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6f9bfbc893f614ea9c298f9dd92cabcd0b12776a" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;runnable&lt;/code&gt; to have its &lt;code&gt;run&lt;/code&gt; method called in the &lt;a href=&quot;#isDispatchThread()&quot;&gt;&lt;code&gt;dispatch thread&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;toolkit#getSystemEventQueue()&quot;&gt;&lt;code&gt;the system EventQueue&lt;/code&gt;&lt;/a&gt;. This will happen after all pending events are processed.</source>
          <target state="translated">원인은 &lt;code&gt;runnable&lt;/code&gt; 그것 가지고 &lt;code&gt;run&lt;/code&gt; 에서 호출 방법 &lt;a href=&quot;#isDispatchThread()&quot;&gt; &lt;code&gt;dispatch thread&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;toolkit#getSystemEventQueue()&quot;&gt; &lt;code&gt;the system EventQueue&lt;/code&gt; &lt;/a&gt; . 보류중인 모든 이벤트가 처리 된 후에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="335c8a3e5bfccbe5f0ba7c3dc947bdb17df9c2b9" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;runnable&lt;/code&gt; to have its &lt;code&gt;run&lt;/code&gt; method called in the &lt;a href=&quot;#isDispatchThread()&quot;&gt;&lt;code&gt;dispatch thread&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;toolkit#getSystemEventQueue()&quot;&gt;&lt;code&gt;the system EventQueue&lt;/code&gt;&lt;/a&gt;. This will happen after all pending events are processed. The call blocks until this has happened. This method will throw an Error if called from the &lt;a href=&quot;#isDispatchThread()&quot;&gt;&lt;code&gt;event dispatcher thread&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">원인은 &lt;code&gt;runnable&lt;/code&gt; 그것 가지고 &lt;code&gt;run&lt;/code&gt; 에서 호출 방법 &lt;a href=&quot;#isDispatchThread()&quot;&gt; &lt;code&gt;dispatch thread&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;toolkit#getSystemEventQueue()&quot;&gt; &lt;code&gt;the system EventQueue&lt;/code&gt; &lt;/a&gt; . 보류중인 모든 이벤트가 처리 된 후에 발생합니다. 이것이 일어날 때까지 호출이 차단됩니다. 이 메서드는 &lt;a href=&quot;#isDispatchThread()&quot;&gt; &lt;code&gt;event dispatcher thread&lt;/code&gt; &lt;/a&gt; 에서 호출되면 오류를 발생시킵니다 .</target>
        </trans-unit>
        <trans-unit id="92d750e92f728bc7d2e7a2c2abb2911816c362e0" translate="yes" xml:space="preserve">
          <source>Causes a flush on the target &lt;code&gt;Handler&lt;/code&gt;.</source>
          <target state="translated">대상 &lt;code&gt;Handler&lt;/code&gt; 를 플러시합니다 .</target>
        </trans-unit>
        <trans-unit id="41c4331de96fc94ec98feec36dd2559da7915394" translate="yes" xml:space="preserve">
          <source>Causes a transfer from the given component to the given clipboard.</source>
          <target state="translated">지정된 구성 요소에서 지정된 클립 보드로 전송합니다.</target>
        </trans-unit>
        <trans-unit id="90d7b0ff2a335cb1dca37479fcad74c29c462bdc" translate="yes" xml:space="preserve">
          <source>Causes a transfer from the given component to the given clipboard. This method is called by the default cut and copy actions registered in a component's action map.</source>
          <target state="translated">지정된 구성 요소에서 지정된 클립 보드로 전송합니다. 이 메서드는 구성 요소의 작업 맵에 등록 된 기본 잘라 내기 및 복사 작업에 의해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2a8e2343120759037ca22ab140aed0b84a01d804" translate="yes" xml:space="preserve">
          <source>Causes a transfer to a component from a clipboard or a DND drop operation.</source>
          <target state="translated">클립 보드 또는 DND 삭제 작업에서 구성 요소로 전송합니다.</target>
        </trans-unit>
        <trans-unit id="9c0618237e1caa9a30ae3393a6d0cb0b5f42218f" translate="yes" xml:space="preserve">
          <source>Causes a transfer to a component from a clipboard or a DND drop operation. The &lt;code&gt;Transferable&lt;/code&gt; represents the data to be imported into the component.</source>
          <target state="translated">클립 보드 또는 DND 삭제 작업에서 구성 요소로 전송합니다. &lt;code&gt;Transferable&lt;/code&gt; 데이터가 구성 요소로 가져올 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f7940aa1bed9124032b9ea79eaf622170c11d2d7" translate="yes" xml:space="preserve">
          <source>Causes a transfer to occur from a clipboard or a drag and drop operation.</source>
          <target state="translated">클립 보드 또는 끌어서 놓기 작업에서 전송이 발생하도록합니다.</target>
        </trans-unit>
        <trans-unit id="e0ff19be9b3384e3ed0891ffa8aaed3696261452" translate="yes" xml:space="preserve">
          <source>Causes a transfer to occur from a clipboard or a drag and drop operation. The &lt;code&gt;Transferable&lt;/code&gt; to be imported and the component to transfer to are contained within the &lt;code&gt;TransferSupport&lt;/code&gt;.</source>
          <target state="translated">클립 보드 또는 끌어서 놓기 작업에서 전송이 발생하도록합니다. &lt;code&gt;Transferable&lt;/code&gt; 가져올 수 및 전송에 대한 구성 요소는 내에 포함하는 &lt;code&gt;TransferSupport&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="baef3315e468ce98035faa7733b54895c06bc282" translate="yes" xml:space="preserve">
          <source>Causes every child of the object to be selected if the object supports multiple selections.</source>
          <target state="translated">오브젝트가 다중 선택을 지원하는 경우 오브젝트의 모든 하위가 선택되도록합니다.</target>
        </trans-unit>
        <trans-unit id="1901fb4ecb8073ca572becb32edf715a4af79964" translate="yes" xml:space="preserve">
          <source>Causes every child of the object to be selected, but only if the &lt;code&gt;JTable&lt;/code&gt; supports multiple selections, and if individual cell selection is enabled.</source>
          <target state="translated">객체의 모든 자식이 선택되도록하지만 &lt;code&gt;JTable&lt;/code&gt; 이 다중 선택을 지원하고 개별 셀 선택이 활성화 된 경우 에만 해당됩니다 .</target>
        </trans-unit>
        <trans-unit id="5b01364fb2e6795474870470d30172cd5bae80d9" translate="yes" xml:space="preserve">
          <source>Causes every selected item in the object to be selected if the object supports multiple selections.</source>
          <target state="translated">오브젝트가 다중 선택을 지원하는 경우 오브젝트에서 선택된 모든 항목이 선택되도록합니다.</target>
        </trans-unit>
        <trans-unit id="027ce3077401fede3ee1e20a762aded1bcb9f475" translate="yes" xml:space="preserve">
          <source>Causes subcomponents of this &lt;code&gt;JInternalFrame&lt;/code&gt; to be laid out at their preferred size.</source>
          <target state="translated">이 &lt;code&gt;JInternalFrame&lt;/code&gt; 의 하위 구성 요소가 선호하는 크기로 배치되도록합니다.</target>
        </trans-unit>
        <trans-unit id="2a4b0bfade301461886f0dae2b19d890acc2120d" translate="yes" xml:space="preserve">
          <source>Causes subcomponents of this &lt;code&gt;JInternalFrame&lt;/code&gt; to be laid out at their preferred size. Internal frames that are iconized or maximized are first restored and then packed. If the internal frame is unable to be restored its state is not changed and will not be packed.</source>
          <target state="translated">이 &lt;code&gt;JInternalFrame&lt;/code&gt; 의 하위 구성 요소가 선호하는 크기로 배치되도록합니다. 아이콘 화되거나 최대화 된 내부 프레임이 먼저 복원 된 다음 압축됩니다. 내부 프레임을 복원 할 수없는 경우 상태가 변경되지 않고 패킹되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="af694d6482cc9a44d3ba2991020475ce5b4e4134" translate="yes" xml:space="preserve">
          <source>Causes the &lt;code&gt;CachedRowSet&lt;/code&gt; object's &lt;code&gt;SyncProvider&lt;/code&gt; to commit the changes when &lt;code&gt;acceptChanges()&lt;/code&gt; is called. If set to false, the changes will &lt;b&gt;not&lt;/b&gt; be committed until one of the &lt;code&gt;CachedRowSet&lt;/code&gt; interface transaction methods is called.</source>
          <target state="translated">원인 &lt;code&gt;CachedRowSet&lt;/code&gt; 객체의 &lt;code&gt;SyncProvider&lt;/code&gt; 할 때 변경 사항을 커밋 &lt;code&gt;acceptChanges()&lt;/code&gt; 호출된다. false로 설정 하면 &lt;code&gt;CachedRowSet&lt;/code&gt; 인터페이스 트랜잭션 메서드 중 하나 가 호출 될 때까지 변경 사항이 커밋 &lt;b&gt;되지 않습니다&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="e1c9b8e7b24fe53c2058d2b58cc78c3645c1cbdd" translate="yes" xml:space="preserve">
          <source>Causes the Subscriber to (eventually) stop receiving messages.</source>
          <target state="translated">구독자가 (결국) 메시지 수신을 중지하도록합니다.</target>
        </trans-unit>
        <trans-unit id="c0ebaa46c11f4bba495327278fd02436eef66ad1" translate="yes" xml:space="preserve">
          <source>Causes the Subscriber to (eventually) stop receiving messages. Implementation is best-effort -- additional messages may be received after invoking this method. A cancelled subscription need not ever receive an &lt;code&gt;onComplete&lt;/code&gt; or &lt;code&gt;onError&lt;/code&gt; signal.</source>
          <target state="translated">구독자가 (결국) 메시지 수신을 중지하도록합니다. 구현은 최선의 노력입니다.이 메서드를 호출 한 후 추가 메시지가 수신 될 수 있습니다. 취소 된 구독은 &lt;code&gt;onComplete&lt;/code&gt; 또는 &lt;code&gt;onError&lt;/code&gt; 신호를 받을 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="af302930d2a940fc2116475075765fbc0edd4cb1" translate="yes" xml:space="preserve">
          <source>Causes the Swing drag support to be initiated.</source>
          <target state="translated">스윙 드래그 지원이 시작되도록합니다.</target>
        </trans-unit>
        <trans-unit id="a41efcaef8c49fad009923454aebf0526dcf4927" translate="yes" xml:space="preserve">
          <source>Causes the Swing drag support to be initiated. This is called by the various UI implementations in the &lt;code&gt;javax.swing.plaf.basic&lt;/code&gt; package if the dragEnabled property is set on the component. This can be called by custom UI implementations to use the Swing drag support. This method can also be called by a Swing extension written as a subclass of &lt;code&gt;JComponent&lt;/code&gt; to take advantage of the Swing drag support.</source>
          <target state="translated">스윙 드래그 지원이 시작되도록합니다. 컴포넌트에 dragEnabled 속성이 설정되어있는 경우 &lt;code&gt;javax.swing.plaf.basic&lt;/code&gt; 패키지 의 다양한 UI 구현에 의해 호출됩니다 . 이것은 사용자 정의 UI 구현에서 호출하여 Swing 드래그 지원을 사용할 수 있습니다. 이 메서드는 Swing 드래그 지원을 활용하기 위해 &lt;code&gt;JComponent&lt;/code&gt; 의 하위 클래스로 작성된 Swing 확장에 의해 호출 될 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="be97aa2de8509e734d13cbf0075ee60d5c5fb57a" translate="yes" xml:space="preserve">
          <source>Causes the combo box to close its popup window.</source>
          <target state="translated">콤보 상자가 팝업 창을 닫도록합니다.</target>
        </trans-unit>
        <trans-unit id="5248fa6614a690ba624a9f1242ad868750562e05" translate="yes" xml:space="preserve">
          <source>Causes the combo box to display its popup window.</source>
          <target state="translated">콤보 상자가 팝업 창을 표시하도록합니다.</target>
        </trans-unit>
        <trans-unit id="1261bc4ca7b7074c68e86276bb9da8b866cd671b" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until another thread invokes the &lt;a href=&quot;object#notify--&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; method or the &lt;a href=&quot;object#notifyAll--&quot;&gt;&lt;code&gt;notifyAll()&lt;/code&gt;&lt;/a&gt; method for this object, or some other thread interrupts the current thread, or a certain amount of real time has elapsed.</source>
          <target state="translated">다른 스레드 가이 객체에 대해 &lt;a href=&quot;object#notifyAll--&quot;&gt; &lt;code&gt;notifyAll()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;object#notify--&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt; 메소드 또는 notifyAll () 메소드를 호출하거나 다른 스레드가 현재 스레드를 인터럽트하거나 일정량의 실시간이 경과 할 때까지 현재 스레드가 대기 하도록 합니다.</target>
        </trans-unit>
        <trans-unit id="a9c204cb8bff344243812cafebf4a4b1f92bc4d6" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until another thread invokes the &lt;a href=&quot;object#notify--&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; method or the &lt;a href=&quot;object#notifyAll--&quot;&gt;&lt;code&gt;notifyAll()&lt;/code&gt;&lt;/a&gt; method for this object. In other words, this method behaves exactly as if it simply performs the call &lt;code&gt;wait(0)&lt;/code&gt;.</source>
          <target state="translated">다른 스레드 가이 객체에 대해 &lt;a href=&quot;object#notifyAll--&quot;&gt; &lt;code&gt;notifyAll()&lt;/code&gt; &lt;/a&gt; 메소드 또는 notifyAll () 메소드를 호출 할 때까지 현재 스레드가 대기 &lt;a href=&quot;object#notify--&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt; 합니다. 즉,이 메소드는 단순히 &lt;code&gt;wait(0)&lt;/code&gt; 호출을 수행하는 것처럼 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="a344653a37a0a035d505a296f200cd99532e73b3" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until either another thread invokes the &lt;a href=&quot;object#notify--&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; method or the &lt;a href=&quot;object#notifyAll--&quot;&gt;&lt;code&gt;notifyAll()&lt;/code&gt;&lt;/a&gt; method for this object, or a specified amount of time has elapsed.</source>
          <target state="translated">다른 스레드 중 하나를 호출 할 때까지, 현재 스레드 발생 &lt;a href=&quot;object#notify--&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt; 법 &lt;a href=&quot;object#notifyAll--&quot;&gt; &lt;code&gt;notifyAll()&lt;/code&gt; &lt;/a&gt; 이 객체 방법, 또는 지정된 시간이 경과한다.</target>
        </trans-unit>
        <trans-unit id="1f1ceaad2267d9d6535d5d0a02e259119003f859" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until it is awakened, typically by being &lt;em&gt;notified&lt;/em&gt; or &lt;em&gt;interrupted&lt;/em&gt;, or until a certain amount of real time has elapsed.</source>
          <target state="translated">현재 스레드가 깨어날 때까지 (일반적으로 &lt;em&gt;알림&lt;/em&gt; 또는 &lt;em&gt;인터럽트&lt;/em&gt; 를 통해 또는 특정 실시간 시간이 경과 할 때까지) 대기하도록 합니다.</target>
        </trans-unit>
        <trans-unit id="068074052d82c35f1aab7fe30474ea68820052e8" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until it is awakened, typically by being &lt;em&gt;notified&lt;/em&gt; or &lt;em&gt;interrupted&lt;/em&gt;.</source>
          <target state="translated">일반적으로 &lt;em&gt;알림을&lt;/em&gt; 받거나 &lt;em&gt;중단&lt;/em&gt; 됨으로써 현재 스레드가 깨어날 때까지 대기합니다 .</target>
        </trans-unit>
        <trans-unit id="2ad76a9f95ad351a85a3a4bdd14aeac9f4d43d1e" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until it is signalled or &lt;a href=&quot;../../../lang/thread#interrupt()&quot;&gt;interrupted&lt;/a&gt;.</source>
          <target state="translated">현재 스레드가 신호를 받거나 &lt;a href=&quot;../../../lang/thread#interrupt()&quot;&gt;중단&lt;/a&gt; 될 때까지 대기하도록 합니다.</target>
        </trans-unit>
        <trans-unit id="9855ca7e76847bb045ee7d2f851ade37e50f9e5d" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until it is signalled or &lt;a href=&quot;../../../lang/thread#interrupt--&quot;&gt;interrupted&lt;/a&gt;.</source>
          <target state="translated">현재 스레드가 신호를 받거나 &lt;a href=&quot;../../../lang/thread#interrupt--&quot;&gt;중단&lt;/a&gt; 될 때까지 대기하도록 합니다.</target>
        </trans-unit>
        <trans-unit id="9822e820581e8fe12f1b9b226e2cccb429b12dc5" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until it is signalled or interrupted, or the specified deadline elapses.</source>
          <target state="translated">현재 스레드가 신호를 받거나 중단 될 때까지 또는 지정된 최종 기한이 경과 할 때까지 대기합니다.</target>
        </trans-unit>
        <trans-unit id="440d6ccaa8d3cc3468a5cf37a5138295fb1aae80" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until it is signalled or interrupted, or the specified waiting time elapses.</source>
          <target state="translated">현재 스레드가 신호를 받거나 중단 될 때까지 또는 지정된 대기 시간이 경과 할 때까지 대기합니다.</target>
        </trans-unit>
        <trans-unit id="4579924c44f0ee980dcde455a78615c60919e475" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until it is signalled or interrupted, or the specified waiting time elapses. This method is behaviorally equivalent to:</source>
          <target state="translated">현재 스레드가 신호를 받거나 중단 될 때까지 또는 지정된 대기 시간이 경과 할 때까지 대기합니다. 이 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a0fd4891a7a68553ed1384cf689d6f36fbb4e470" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until it is signalled.</source>
          <target state="translated">현재 스레드가 신호를 보낼 때까지 대기합니다.</target>
        </trans-unit>
        <trans-unit id="3139c627c89e6c62ec10136f1c0a1d75c2654c85" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until the latch has counted down to zero, unless the thread is &lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt;interrupted&lt;/a&gt;, or the specified waiting time elapses.</source>
          <target state="translated">스레드가 &lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt;인터럽트&lt;/a&gt; 되거나 지정된 대기 시간이 경과 하지 않는 한 래치가 0으로 카운트 다운 될 때까지 현재 스레드가 대기 하도록합니다.</target>
        </trans-unit>
        <trans-unit id="38a618ef392a914c0ba3f5c6bd103245edab3c20" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until the latch has counted down to zero, unless the thread is &lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt;interrupted&lt;/a&gt;.</source>
          <target state="translated">스레드가 &lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt;인터럽트&lt;/a&gt; 되지 않는 한 현재 스레드가 래치가 0이 될 때까지 대기하도록합니다 .</target>
        </trans-unit>
        <trans-unit id="d3b5e6710b0b0371978d5806fac16319f76c0331" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until the latch has counted down to zero, unless the thread is &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;interrupted&lt;/a&gt;, or the specified waiting time elapses.</source>
          <target state="translated">스레드가 &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;중단&lt;/a&gt; 되거나 지정된 대기 시간이 경과 하지 않으면 래치가 0으로 카운트 다운 될 때까지 현재 스레드가 대기 하도록합니다.</target>
        </trans-unit>
        <trans-unit id="4e88fe865939b2e19b2765b34e3579a1355d02ce" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until the latch has counted down to zero, unless the thread is &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;interrupted&lt;/a&gt;.</source>
          <target state="translated">스레드가 &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;중단&lt;/a&gt; 되지 않는 한 래치가 0으로 카운트 다운 될 때까지 현재 스레드가 대기하도록합니다 .</target>
        </trans-unit>
        <trans-unit id="8c64d746eb6ddd61cbe24b5fe17cbb8f9c391bc3" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait, if necessary, until the process represented by this &lt;code&gt;Process&lt;/code&gt; object has terminated, or the specified waiting time elapses.</source>
          <target state="translated">필요한 경우이 &lt;code&gt;Process&lt;/code&gt; 객체가 나타내는 프로세스 가 종료되거나 지정된 대기 시간이 경과 할 때까지 현재 스레드가 대기 하도록합니다.</target>
        </trans-unit>
        <trans-unit id="47e80d98c7174399054108c7b0143e0033a8e759" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait, if necessary, until the process represented by this &lt;code&gt;Process&lt;/code&gt; object has terminated.</source>
          <target state="translated">필요한 경우이 &lt;code&gt;Process&lt;/code&gt; 객체가 나타내는 프로세스 가 종료 될 때까지 현재 스레드가 대기하도록 합니다.</target>
        </trans-unit>
        <trans-unit id="978cafad2e47fab985056b032d46bca07475096e" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait, if necessary, until the process represented by this &lt;code&gt;Process&lt;/code&gt; object has terminated. This method returns immediately if the process has already terminated. If the process has not yet terminated, the calling thread will be blocked until the process exits.</source>
          <target state="translated">필요한 경우이 &lt;code&gt;Process&lt;/code&gt; 객체가 나타내는 프로세스 가 종료 될 때까지 현재 스레드가 대기하도록 합니다. 이 메서드는 프로세스가 이미 종료 된 경우 즉시 반환됩니다. 프로세스가 아직 종료되지 않은 경우 프로세스가 종료 될 때까지 호출 스레드가 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="5e0e2085d8f57bee364482a02042a4f1a145a954" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait, if necessary, until the process represented by this &lt;code&gt;Process&lt;/code&gt; object has terminated. This method returns immediately if the subprocess has already terminated. If the subprocess has not yet terminated, the calling thread will be blocked until the subprocess exits.</source>
          <target state="translated">필요한 경우이 &lt;code&gt;Process&lt;/code&gt; 객체가 나타내는 프로세스 가 종료 될 때까지 현재 스레드를 대기 시킵니다. 서브 프로세스가 이미 종료 된 경우이 메소드는 즉시 리턴합니다. 서브 프로세스가 아직 종료되지 않은 경우 서브 프로세스가 종료 될 때까지 호출 스레드가 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="a1da9146001b01245664d3c3aa725e30c7535f74" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait, if necessary, until the subprocess represented by this &lt;code&gt;Process&lt;/code&gt; object has terminated, or the specified waiting time elapses.</source>
          <target state="translated">필요한 경우이 &lt;code&gt;Process&lt;/code&gt; 객체가 나타내는 서브 프로세스 가 종료되거나 지정된 대기 시간이 경과 할 때까지 현재 스레드를 대기 시킵니다.</target>
        </trans-unit>
        <trans-unit id="239db192eadbd7b11a741f964774a2993d9e0e8e" translate="yes" xml:space="preserve">
          <source>Causes the currently executing thread to sleep (temporarily cease execution) for the specified number of milliseconds plus the specified number of nanoseconds, subject to the precision and accuracy of system timers and schedulers.</source>
          <target state="translated">시스템 타이머 및 스케줄러의 정밀도와 정확도에 따라 현재 실행중인 스레드가 지정된 밀리 초 수와 지정된 나노초 수 동안 휴면 (일시적으로 실행 중지)되도록합니다.</target>
        </trans-unit>
        <trans-unit id="a276acde29279f2bcece8323bf0479003267a4a5" translate="yes" xml:space="preserve">
          <source>Causes the currently executing thread to sleep (temporarily cease execution) for the specified number of milliseconds plus the specified number of nanoseconds, subject to the precision and accuracy of system timers and schedulers. The thread does not lose ownership of any monitors.</source>
          <target state="translated">시스템 타이머 및 스케줄러의 정밀도 및 정확성에 따라 현재 실행중인 스레드가 지정된 밀리 초에 지정된 나노초 수를 더한 시간 동안 휴면 (일시적으로 실행 중단)합니다. 스레드는 모니터의 소유권을 잃지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e9645ca9fee714f05e0c9f9eb6b1cf7f9cc7164a" translate="yes" xml:space="preserve">
          <source>Causes the currently executing thread to sleep (temporarily cease execution) for the specified number of milliseconds, subject to the precision and accuracy of system timers and schedulers.</source>
          <target state="translated">시스템 타이머 및 스케줄러의 정밀도 및 정확성에 따라 현재 실행중인 스레드가 지정된 시간 (밀리 초) 동안 휴면 (일시적으로 실행 중단)되도록합니다.</target>
        </trans-unit>
        <trans-unit id="962ae4b68afb04561124d97d7de93a49c692093f" translate="yes" xml:space="preserve">
          <source>Causes the currently executing thread to sleep (temporarily cease execution) for the specified number of milliseconds, subject to the precision and accuracy of system timers and schedulers. The thread does not lose ownership of any monitors.</source>
          <target state="translated">시스템 타이머 및 스케줄러의 정밀도 및 정확성에 따라 현재 실행중인 스레드가 지정된 시간 (밀리 초) 동안 휴면 (일시적으로 실행 중단)되도록합니다. 스레드는 모니터의 소유권을 잃지 않습니다.</target>
        </trans-unit>
        <trans-unit id="135151ded146cae815d8012ae78991aa1cf1fbd7" translate="yes" xml:space="preserve">
          <source>Causes the first selection operation that has not yet returned to return immediately.</source>
          <target state="translated">아직 반환되지 않은 첫 번째 선택 작업이 즉시 반환되도록합니다.</target>
        </trans-unit>
        <trans-unit id="933f26fbb507e07f04feec6e07558a2895fd8475" translate="yes" xml:space="preserve">
          <source>Causes the immediate execution of the script whose source is the String passed as the first argument.</source>
          <target state="translated">소스가 첫 번째 인수로 전달 된 문자열 인 스크립트를 즉시 실행합니다.</target>
        </trans-unit>
        <trans-unit id="e027e8530c17ef2aefe513d5d9b730ebf838c21b" translate="yes" xml:space="preserve">
          <source>Causes the immediate execution of the script whose source is the String passed as the first argument. The script may be reparsed or recompiled before execution. State left in the engine from previous executions, including variable values and compiled procedures may be visible during this execution.</source>
          <target state="translated">소스가 String 인 스크립트를 즉시 실행하여 첫 번째 인수로 전달합니다. 스크립트는 실행 전에 재분석되거나 재 컴파일 될 수 있습니다. 변수 값 및 컴파일 된 프로 시저를 포함하여 이전 실행에서 엔진에 남아있는 상태가이 실행 중에 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57af85bbce8273da551a705a779ac267c1598414" translate="yes" xml:space="preserve">
          <source>Causes the mirrored VM to terminate with the given error code.</source>
          <target state="translated">미러링 된 VM이 지정된 오류 코드와 함께 종료되도록합니다.</target>
        </trans-unit>
        <trans-unit id="b4d7b6d7fa708e7f29f697ebe9341653fb1d982e" translate="yes" xml:space="preserve">
          <source>Causes the mirrored VM to terminate with the given error code. All resources associated with this VirtualMachine are freed. If the mirrored VM is remote, the communication channel to it will be closed. Resources originating in this VirtualMachine (ObjectReferences, ReferenceTypes, etc.) will become invalid.</source>
          <target state="translated">미러링 된 VM이 지정된 오류 코드와 함께 종료되도록합니다. 이 VirtualMachine과 관련된 모든 리소스가 해제됩니다. 미러링 된 VM이 원격 인 경우 해당 VM에 대한 통신 채널이 닫힙니다. 이 VirtualMachine에서 시작된 리소스 (ObjectReferences, ReferenceTypes 등)는 유효하지 않게됩니다.</target>
        </trans-unit>
        <trans-unit id="351a26ab7a7296c94543eb7397f62dd035fc300c" translate="yes" xml:space="preserve">
          <source>Causes the next added printer/parser to pad to a fixed width using a space.</source>
          <target state="translated">다음에 추가 된 프린터 / 파서를 공백을 사용하여 고정 너비로 ​​채 웁니다.</target>
        </trans-unit>
        <trans-unit id="e41f860fd918d4185e9c931faaa252f1190dc946" translate="yes" xml:space="preserve">
          <source>Causes the next added printer/parser to pad to a fixed width.</source>
          <target state="translated">다음에 추가 된 프린터 / 파서가 고정 폭으로 패딩되도록합니다.</target>
        </trans-unit>
        <trans-unit id="d5936bab39659e68f245c32cd244a38041790c9f" translate="yes" xml:space="preserve">
          <source>Causes the next call to the &lt;code&gt;nextToken&lt;/code&gt; method of this tokenizer to return the current value in the &lt;code&gt;ttype&lt;/code&gt; field, and not to modify the value in the &lt;code&gt;nval&lt;/code&gt; or &lt;code&gt;sval&lt;/code&gt; field.</source>
          <target state="translated">이 토크 나이저 의 &lt;code&gt;nextToken&lt;/code&gt; 메소드에 대한 다음 호출 이 &lt;code&gt;ttype&lt;/code&gt; 필드 의 현재 값을 리턴 하고 &lt;code&gt;nval&lt;/code&gt; 또는 &lt;code&gt;sval&lt;/code&gt; 필드 의 값을 수정하지 않도록 합니다.</target>
        </trans-unit>
        <trans-unit id="6c7ab31e331b51262f501104a93e40692882d822" translate="yes" xml:space="preserve">
          <source>Causes the passed instance of &lt;code&gt;JLayer&lt;/code&gt; to lay out its components.</source>
          <target state="translated">전달 된 &lt;code&gt;JLayer&lt;/code&gt; 인스턴스가 구성 요소를 배치하도록합니다.</target>
        </trans-unit>
        <trans-unit id="32628e46d85925899a1c42c362364e146d8cc5c7" translate="yes" xml:space="preserve">
          <source>Causes the portion of the view responsible for the given part of the model to be repainted.</source>
          <target state="translated">모델의 주어진 부분을 담당하는 뷰 부분이 다시 그려 지도록합니다.</target>
        </trans-unit>
        <trans-unit id="dcb357ff48f04adfd529689ab84a0d278224401b" translate="yes" xml:space="preserve">
          <source>Causes the portion of the view responsible for the given part of the model to be repainted. Does nothing if the view is not currently painted.</source>
          <target state="translated">모델의 주어진 부분을 담당하는 뷰 부분이 다시 그려 지도록합니다. 뷰가 현재 그려지지 않은 경우 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="64cbf1f8d97f0f363b3d0af7dfb1f9f2606df6fb" translate="yes" xml:space="preserve">
          <source>Causes this Window to be sized to fit the preferred size and layouts of its subcomponents.</source>
          <target state="translated">이 창은 하위 구성 요소의 기본 크기 및 레이아웃에 맞게 크기가 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="832b85360a426d4e555b11da3499f850d041a9e1" translate="yes" xml:space="preserve">
          <source>Causes this Window to be sized to fit the preferred size and layouts of its subcomponents. The resulting width and height of the window are automatically enlarged if either of dimensions is less than the minimum size as specified by the previous call to the &lt;code&gt;setMinimumSize&lt;/code&gt; method.</source>
          <target state="translated">이 창은 하위 구성 요소의 기본 크기 및 레이아웃에 맞게 크기가 조정됩니다. 크기 중 하나가 &lt;code&gt;setMinimumSize&lt;/code&gt; 메서드 에 대한 이전 호출에서 지정한 최소 크기보다 작 으면 창의 결과 너비와 높이가 자동으로 확대됩니다 .</target>
        </trans-unit>
        <trans-unit id="37aa4d35d57403652b9309ce1c9ee5b2600a1133" translate="yes" xml:space="preserve">
          <source>Causes this character sequence to be replaced by the reverse of the sequence.</source>
          <target state="translated">이 문자 시퀀스가 ​​시퀀스의 역순으로 대체되도록합니다.</target>
        </trans-unit>
        <trans-unit id="3c7fa7b3b80db777ffea1c98ae5735865f3fbd54" translate="yes" xml:space="preserve">
          <source>Causes this character sequence to be replaced by the reverse of the sequence. If there are any surrogate pairs included in the sequence, these are treated as single characters for the reverse operation. Thus, the order of the high-low surrogates is never reversed. Let</source>
          <target state="translated">이 문자 순서를 순서의 역순으로 바꿉니다. 시퀀스에 포함 된 대리 쌍이있는 경우이 문자는 역 연산을 위해 단일 문자로 처리됩니다. 따라서, 고 임계 대리의 순서는 결코 바뀌지 않습니다. 허락하다</target>
        </trans-unit>
        <trans-unit id="c8909dd71e3c6b788063d650c35994e9c609fabe" translate="yes" xml:space="preserve">
          <source>Causes this container to lay out its components.</source>
          <target state="translated">이 컨테이너가 구성 요소를 배치하도록합니다.</target>
        </trans-unit>
        <trans-unit id="cf5aaa30af847f80668c474664ca22f6cb486dda" translate="yes" xml:space="preserve">
          <source>Causes this container to lay out its components. Most programs should not call this method directly, but should invoke the &lt;code&gt;validate&lt;/code&gt; method instead.</source>
          <target state="translated">이 컨테이너가 구성 요소를 배치하도록합니다. 대부분의 프로그램은이 메서드를 직접 호출해서는 안되지만 대신 &lt;code&gt;validate&lt;/code&gt; 메서드를 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="cd204e1163586b81f69e53d542a4eeadd5efce63" translate="yes" xml:space="preserve">
          <source>Causes this future to report an &lt;a href=&quot;executionexception&quot;&gt;&lt;code&gt;ExecutionException&lt;/code&gt;&lt;/a&gt; with the given throwable as its cause, unless this future has already been set or has been cancelled.</source>
          <target state="translated">이 미래가 이미 설정되어 있거나 취소되지 않은 한,이 미래가 지정된 Throwable을 원인으로 하여 &lt;a href=&quot;executionexception&quot;&gt; &lt;code&gt;ExecutionException&lt;/code&gt; &lt;/a&gt; 을보고합니다 .</target>
        </trans-unit>
        <trans-unit id="ca1a72c52dcb7fd6188b3859d29d822dd3e24d4a" translate="yes" xml:space="preserve">
          <source>Causes this piped input stream to be connected to the piped output stream &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="translated">이 파이프 된 입력 스트림이 파이프 된 출력 스트림 &lt;code&gt;src&lt;/code&gt; 에 연결되도록합니다 .</target>
        </trans-unit>
        <trans-unit id="18f1a8fa2620fce725900e976a4904a068be827b" translate="yes" xml:space="preserve">
          <source>Causes this piped input stream to be connected to the piped output stream &lt;code&gt;src&lt;/code&gt;. If this object is already connected to some other piped output stream, an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">이 파이프 된 입력 스트림을 파이프 된 출력 스트림 &lt;code&gt;src&lt;/code&gt; 에 연결합니다 . 이 오브젝트가 다른 파이프 된 출력 스트림에 이미 연결되어 있으면 &lt;code&gt;IOException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6d6cc036f2a8fd6c7a26f3cb0172a0ca93372d6c" translate="yes" xml:space="preserve">
          <source>Causes this piped reader to be connected to the piped writer &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="translated">이 파이프 된 판독기가 파이프 된 작성기 &lt;code&gt;src&lt;/code&gt; 에 연결되도록합니다 .</target>
        </trans-unit>
        <trans-unit id="e8d9a421fc82a1950a5a1b09004eb7dc509b3f85" translate="yes" xml:space="preserve">
          <source>Causes this piped reader to be connected to the piped writer &lt;code&gt;src&lt;/code&gt;. If this object is already connected to some other piped writer, an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">이 파이프 리더를 파이프 라이터 &lt;code&gt;src&lt;/code&gt; 에 연결합니다 . 이 오브젝트가 다른 파이프 라이터에 이미 연결되어 있으면 &lt;code&gt;IOException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3fd49c945a033becb81791fd00ec4ded6fed54f4" translate="yes" xml:space="preserve">
          <source>Causes this table to lay out its rows and columns.</source>
          <target state="translated">이 테이블이 행과 열을 배치하도록합니다.</target>
        </trans-unit>
        <trans-unit id="9ff6aa881a5b8d58f14beab0eea14af40c91b398" translate="yes" xml:space="preserve">
          <source>Causes this table to lay out its rows and columns. Overridden so that columns can be resized to accommodate a change in the size of a containing parent. Resizes one or more of the columns in the table so that the total width of all of this &lt;code&gt;JTable&lt;/code&gt;'s columns is equal to the width of the table.</source>
          <target state="translated">이 테이블이 행과 열을 배치하도록합니다. 포함하는 부모의 크기 변경을 수용하도록 열 크기를 조정할 수 있도록 재정의되었습니다. 이 &lt;code&gt;JTable&lt;/code&gt; 열의 전체 너비가 테이블 너비와 같도록 테이블에있는 하나 이상의 열 크기를 조정합니다.</target>
        </trans-unit>
        <trans-unit id="39c38f796c338580b8fb6fd0fcb1dc1b7ae8ca5b" translate="yes" xml:space="preserve">
          <source>Causes this thread to begin execution; the Java Virtual Machine calls the &lt;code&gt;run&lt;/code&gt; method of this thread.</source>
          <target state="translated">이 스레드가 실행을 시작하게합니다. Java Virtual Machine 은이 스레드 의 &lt;code&gt;run&lt;/code&gt; 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="8b927c77460197fb95dc32ea97ff8451281d1cf8" translate="yes" xml:space="preserve">
          <source>Caution should be exercised when using a comparator capable of imposing an ordering inconsistent with equals to order a sorted set (or sorted map). Suppose a sorted set (or sorted map) with an explicit comparator &lt;code&gt;c&lt;/code&gt; is used with elements (or keys) drawn from a set &lt;code&gt;S&lt;/code&gt;. If the ordering imposed by &lt;code&gt;c&lt;/code&gt; on &lt;code&gt;S&lt;/code&gt; is inconsistent with equals, the sorted set (or sorted map) will behave &quot;strangely.&quot; In particular the sorted set (or sorted map) will violate the general contract for set (or map), which is defined in terms of &lt;code&gt;equals&lt;/code&gt;.</source>
          <target state="translated">정렬 된 세트 (또는 정렬 된 맵)를 정렬하는 것과 같지 않은 순서로 정렬 할 수있는 비교기를 사용할 때는주의를 기울여야합니다. 명시 적 비교기 &lt;code&gt;c&lt;/code&gt; 가 있는 정렬 된 세트 (또는 정렬 된 맵)가 세트 &lt;code&gt;S&lt;/code&gt; 에서 가져온 요소 (또는 키)와 함께 사용 된다고 가정하십시오 . &lt;code&gt;S&lt;/code&gt; 에 대해 &lt;code&gt;c&lt;/code&gt; 가 지정한 순서 가 같지 않으면 정렬 된 세트 (또는 정렬 된 맵)가 &quot;이상하게&quot;동작합니다. 특히, 정렬 된 세트 (또는 정렬 된 맵)는 세트 (또는 맵)에 대한 일반 계약을 위반하며, 이는 &lt;code&gt;equals&lt;/code&gt; 로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="f5e107d31a715665178e69d6e27470d6035d6725" translate="yes" xml:space="preserve">
          <source>Caution should be used when evaluating the expression as it may throw exceptions. In particular, code generators must ensure that generated code will compile in the presence of an expression that can throw checked exceptions.</source>
          <target state="translated">표현식을 평가할 때 예외가 발생할 수 있으므로주의해야합니다. 특히 코드 생성기는 생성 된 코드가 확인 된 예외를 throw 할 수있는 표현식이있을 때 컴파일되도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="2e73ee8625d53703f55eba0083ab106989d86d80" translate="yes" xml:space="preserve">
          <source>Caveat: if either of the arguments to this method represents a wildcard, this method will return false. As a consequence, a wildcard is not the same type as itself. This might be surprising at first, but makes sense once you consider that an example like this must be rejected by the compiler:</source>
          <target state="translated">경고 :이 메소드에 대한 인수 중 하나가 와일드 카드를 나타내는 경우이 메소드는 false를 리턴합니다. 결과적으로 와일드 카드는 자체와 동일한 유형이 아닙니다. 이것은 처음에는 놀라운 일이지만, 다음과 같은 예제를 컴파일러가 거부해야한다고 생각하면 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="960083a420a7225910a22e06ca44b67acb11f6b4" translate="yes" xml:space="preserve">
          <source>Caveats: The parse may fail in a number of circumstances. For example:</source>
          <target state="translated">주의 사항 : 여러 상황에서 구문 분석이 실패 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c237674e2c587f4dc56e4e0cf8fd67a653f21272" translate="yes" xml:space="preserve">
          <source>Cavern</source>
          <target state="translated">Cavern</target>
        </trans-unit>
        <trans-unit id="c59c2b974b7b900d703f01a7ecfdb6255ec2d239" translate="yes" xml:space="preserve">
          <source>Cell background color.</source>
          <target state="translated">셀 배경색.</target>
        </trans-unit>
        <trans-unit id="e116f9645b23efaa2a1e71a3193705180369893e" translate="yes" xml:space="preserve">
          <source>Cell background color. See the bgcolor attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">셀 배경색. HTML 4.0의 bgcolor 속성 정의를 참조하십시오. 이 속성은 HTML 4.0에서 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9b301b4a6cb3a0b787241f6e946aa9c2c4c09745" translate="yes" xml:space="preserve">
          <source>Cell height.</source>
          <target state="translated">세포 높이.</target>
        </trans-unit>
        <trans-unit id="e0cc3eb0c36a41f492fb3d465d442a82e7b7b748" translate="yes" xml:space="preserve">
          <source>Cell height. See the height attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">세포 높이. HTML 4.0의 높이 속성 정의를 참조하십시오. 이 속성은 HTML 4.0에서 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7d39cb89ef043bbcd50c9c3b137911f0ba2fc5bb" translate="yes" xml:space="preserve">
          <source>Cell width.</source>
          <target state="translated">셀 너비.</target>
        </trans-unit>
        <trans-unit id="0766d19c292ea170d79675a5ce6942bf8dd6228b" translate="yes" xml:space="preserve">
          <source>Cell width. See the width attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">셀 너비. HTML 4.0의 width 속성 정의를 참조하십시오. 이 속성은 HTML 4.0에서 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e25ed5e11795111c8120faa7732eefb3618bef97" translate="yes" xml:space="preserve">
          <source>CellEditor</source>
          <target state="translated">CellEditor</target>
        </trans-unit>
        <trans-unit id="4e39affdebde41e960624fcd45b86f9963060f55" translate="yes" xml:space="preserve">
          <source>CellEditorHandler</source>
          <target state="translated">CellEditorHandler</target>
        </trans-unit>
        <trans-unit id="cb133c28c8d6d89646936bdd25f2404c294ebcc0" translate="yes" xml:space="preserve">
          <source>CellEditorListener</source>
          <target state="translated">CellEditorListener</target>
        </trans-unit>
        <trans-unit id="afd2f1f20bab0314dcebb8641880cc1e0cab694e" translate="yes" xml:space="preserve">
          <source>CellEditorListener defines the interface for an object that listens to changes in a CellEditor</source>
          <target state="translated">CellEditorListener는 CellEditor의 변경 사항을 수신하는 객체의 인터페이스를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="220744d0197c9e9faa6dab4cdeca2c523e4f9c26" translate="yes" xml:space="preserve">
          <source>CellRendererPane</source>
          <target state="translated">CellRendererPane</target>
        </trans-unit>
        <trans-unit id="b6cf6664ebbfd5e9c7c86d2325768a3bf3cd5dfd" translate="yes" xml:space="preserve">
          <source>CellRendererPane.AccessibleCellRendererPane</source>
          <target state="translated">CellRendererPane.AccessibleCellRendererPane</target>
        </trans-unit>
        <trans-unit id="33d759a886d1ad745cf4498be7d2616e8bfa8af9" translate="yes" xml:space="preserve">
          <source>Cells are layed out horizontally, wrapping to a new row as necessary. If the &lt;code&gt;visibleRowCount&lt;/code&gt; property is less than or equal to zero, wrapping is determined by the width of the list; otherwise wrapping is done in such a way as to ensure &lt;code&gt;visibleRowCount&lt;/code&gt; rows in the list.</source>
          <target state="translated">셀은 수평으로 배치되어 필요에 따라 새 행으로 바뀝니다. 경우] &lt;code&gt;visibleRowCount&lt;/code&gt; 에의 재산권 이하가 제로이고, 포장 목록의 폭에 의해 결정된다; 그렇지 않으면 목록에서 &lt;code&gt;visibleRowCount&lt;/code&gt; 행 을 보장하는 방식으로 래핑이 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="9ca7e066b1ae64ca6ae69651e3413e32d388f183" translate="yes" xml:space="preserve">
          <source>Cells are layed out vertically in a single column.</source>
          <target state="translated">셀은 단일 열에 세로로 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="a20bcafd2d8fa0a721ff18c6de926234772254b7" translate="yes" xml:space="preserve">
          <source>Cells are layed out vertically, wrapping to a new column as necessary. If the &lt;code&gt;visibleRowCount&lt;/code&gt; property is less than or equal to zero, wrapping is determined by the height of the list; otherwise wrapping is done at &lt;code&gt;visibleRowCount&lt;/code&gt; rows.</source>
          <target state="translated">셀은 필요에 따라 새 열로 래핑되어 세로로 배치됩니다. 경우] &lt;code&gt;visibleRowCount&lt;/code&gt; 에의 재산권 이하가 제로이고, 포장 목록의 높이에 의해 결정된다; 그렇지 않으면 &lt;code&gt;visibleRowCount&lt;/code&gt; 행 에서 랩핑이 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="d78fa16e6ad36fa797a370826c6d159b5f995886" translate="yes" xml:space="preserve">
          <source>CertPath</source>
          <target state="translated">CertPath</target>
        </trans-unit>
        <trans-unit id="77519ffa871df4f746c46787288bc411c9c1cf65" translate="yes" xml:space="preserve">
          <source>CertPath.CertPathRep</source>
          <target state="translated">CertPath.CertPathRep</target>
        </trans-unit>
        <trans-unit id="e9d457028651f42611e16d393856769c7a98fe86" translate="yes" xml:space="preserve">
          <source>CertPath.CertPathRep.readResolve()</source>
          <target state="translated">CertPath.CertPathRep.readResolve()</target>
        </trans-unit>
        <trans-unit id="c05662fd0abcd261f4d3e8630a74174aa3ce1570" translate="yes" xml:space="preserve">
          <source>CertPath.equals()</source>
          <target state="translated">CertPath.equals()</target>
        </trans-unit>
        <trans-unit id="8f2a444b203e4af1d49cfede75894be1712f8f0c" translate="yes" xml:space="preserve">
          <source>CertPath.getCertificates()</source>
          <target state="translated">CertPath.getCertificates()</target>
        </trans-unit>
        <trans-unit id="80c89e2f650ded7b898f6fa0c76e3c1aa0b23a47" translate="yes" xml:space="preserve">
          <source>CertPath.getEncoded()</source>
          <target state="translated">CertPath.getEncoded()</target>
        </trans-unit>
        <trans-unit id="ae5172f89d0d814978e5023245b992bcb111d8e6" translate="yes" xml:space="preserve">
          <source>CertPath.getEncodings()</source>
          <target state="translated">CertPath.getEncodings()</target>
        </trans-unit>
        <trans-unit id="b0de815727aa2e2bcfba2c17e422174074bf8b55" translate="yes" xml:space="preserve">
          <source>CertPath.getType()</source>
          <target state="translated">CertPath.getType()</target>
        </trans-unit>
        <trans-unit id="5b8d8cfb1112a9dbc9c02049f3c7762fce4db04a" translate="yes" xml:space="preserve">
          <source>CertPath.hashCode()</source>
          <target state="translated">CertPath.hashCode()</target>
        </trans-unit>
        <trans-unit id="c463a0f79e7f86ca0216d8176192870147e51e8e" translate="yes" xml:space="preserve">
          <source>CertPath.toString()</source>
          <target state="translated">CertPath.toString()</target>
        </trans-unit>
        <trans-unit id="f2ca1154c78e06174ca70b022dbc3d80bc2374ec" translate="yes" xml:space="preserve">
          <source>CertPath.writeReplace()</source>
          <target state="translated">CertPath.writeReplace()</target>
        </trans-unit>
        <trans-unit id="a9ae39fad77954556f940b218bf7ad637f85ea32" translate="yes" xml:space="preserve">
          <source>CertPathBuilder</source>
          <target state="translated">CertPathBuilder</target>
        </trans-unit>
        <trans-unit id="cbf9dfffb57be947829d703ae46ce049fde6819d" translate="yes" xml:space="preserve">
          <source>CertPathBuilder.build()</source>
          <target state="translated">CertPathBuilder.build()</target>
        </trans-unit>
        <trans-unit id="03f3dba2a2f64aeed200335a16cc1f1da951e624" translate="yes" xml:space="preserve">
          <source>CertPathBuilder.getAlgorithm()</source>
          <target state="translated">CertPathBuilder.getAlgorithm()</target>
        </trans-unit>
        <trans-unit id="ff3213827737222fd5c77dfe652d5a139d36a030" translate="yes" xml:space="preserve">
          <source>CertPathBuilder.getDefaultType()</source>
          <target state="translated">CertPathBuilder.getDefaultType()</target>
        </trans-unit>
        <trans-unit id="8285eab8cb5f52e5c6c64761e62cf951ced29265" translate="yes" xml:space="preserve">
          <source>CertPathBuilder.getInstance()</source>
          <target state="translated">CertPathBuilder.getInstance()</target>
        </trans-unit>
        <trans-unit id="82957ab08333b76351e8a4a412f96c0019668b76" translate="yes" xml:space="preserve">
          <source>CertPathBuilder.getProvider()</source>
          <target state="translated">CertPathBuilder.getProvider()</target>
        </trans-unit>
        <trans-unit id="3d6654b7e2d5c36b73e55734432447978031d435" translate="yes" xml:space="preserve">
          <source>CertPathBuilder.getRevocationChecker()</source>
          <target state="translated">CertPathBuilder.getRevocationChecker()</target>
        </trans-unit>
        <trans-unit id="f06fe066ce6c252611aa6f52300d1d249c851bf4" translate="yes" xml:space="preserve">
          <source>CertPathBuilderException</source>
          <target state="translated">CertPathBuilderException</target>
        </trans-unit>
        <trans-unit id="568074a0b0b1ada3e921c8e34e951742cb620266" translate="yes" xml:space="preserve">
          <source>CertPathBuilderResult</source>
          <target state="translated">CertPathBuilderResult</target>
        </trans-unit>
        <trans-unit id="4cd2f5074e3e9efcedddf385e187ea5bfc10b869" translate="yes" xml:space="preserve">
          <source>CertPathBuilderResult.clone()</source>
          <target state="translated">CertPathBuilderResult.clone()</target>
        </trans-unit>
        <trans-unit id="a29b63f09bc188ba83de7de1079894caf913131c" translate="yes" xml:space="preserve">
          <source>CertPathBuilderResult.getCertPath()</source>
          <target state="translated">CertPathBuilderResult.getCertPath()</target>
        </trans-unit>
        <trans-unit id="ed552ace282b6941fcd16887b33c56eed0ae95dd" translate="yes" xml:space="preserve">
          <source>CertPathBuilderSpi</source>
          <target state="translated">CertPathBuilderSpi</target>
        </trans-unit>
        <trans-unit id="aa545cc2edfd43e86f8e2de24bdc3b951ff26bbd" translate="yes" xml:space="preserve">
          <source>CertPathBuilderSpi.engineBuild()</source>
          <target state="translated">CertPathBuilderSpi.engineBuild()</target>
        </trans-unit>
        <trans-unit id="6dc191d1716e5dc56dc1c166e68cf5cd26821df2" translate="yes" xml:space="preserve">
          <source>CertPathBuilderSpi.engineGetRevocationChecker()</source>
          <target state="translated">CertPathBuilderSpi.engineGetRevocationChecker()</target>
        </trans-unit>
        <trans-unit id="fec2402782f0d5d1b5384d285e7854c4a5a5406a" translate="yes" xml:space="preserve">
          <source>CertPathChecker</source>
          <target state="translated">CertPathChecker</target>
        </trans-unit>
        <trans-unit id="f2a02a459a3ed9451f6006c29c3b620273049644" translate="yes" xml:space="preserve">
          <source>CertPathChecker.check()</source>
          <target state="translated">CertPathChecker.check()</target>
        </trans-unit>
        <trans-unit id="7f9cea2b106f84df130d70e829db8cdb2b3d9dec" translate="yes" xml:space="preserve">
          <source>CertPathChecker.init()</source>
          <target state="translated">CertPathChecker.init()</target>
        </trans-unit>
        <trans-unit id="37f15f43654acb97365f9d2c2fa03bdefbe38331" translate="yes" xml:space="preserve">
          <source>CertPathChecker.isForwardCheckingSupported()</source>
          <target state="translated">CertPathChecker.isForwardCheckingSupported()</target>
        </trans-unit>
        <trans-unit id="9047dec7e268bf3dafa7fd044966663b37803a1f" translate="yes" xml:space="preserve">
          <source>CertPathParameters</source>
          <target state="translated">CertPathParameters</target>
        </trans-unit>
        <trans-unit id="3ac5bfb513d28db1b19aa4d329b5268b9e1332bf" translate="yes" xml:space="preserve">
          <source>CertPathParameters.clone()</source>
          <target state="translated">CertPathParameters.clone()</target>
        </trans-unit>
        <trans-unit id="af35c842ad136fef6210e3448425b7493202735e" translate="yes" xml:space="preserve">
          <source>CertPathRep</source>
          <target state="translated">CertPathRep</target>
        </trans-unit>
        <trans-unit id="6e1db0d23fd63b08de4c4dd7390ea19fa83f8b1e" translate="yes" xml:space="preserve">
          <source>CertPathTrustManagerParameters</source>
          <target state="translated">CertPathTrustManagerParameters</target>
        </trans-unit>
        <trans-unit id="25cae755e50416ad7dbbc2784ba25e987fb1a64c" translate="yes" xml:space="preserve">
          <source>CertPathTrustManagerParameters.getParameters()</source>
          <target state="translated">CertPathTrustManagerParameters.getParameters()</target>
        </trans-unit>
        <trans-unit id="01d56bf6e79656b68b312e3da2806671ceea2be7" translate="yes" xml:space="preserve">
          <source>CertPathValidator</source>
          <target state="translated">CertPathValidator</target>
        </trans-unit>
        <trans-unit id="751a919342818e715e9050972600ba472b753c84" translate="yes" xml:space="preserve">
          <source>CertPathValidator.getAlgorithm()</source>
          <target state="translated">CertPathValidator.getAlgorithm()</target>
        </trans-unit>
        <trans-unit id="860bc4642f43a48b5caf509f8e6447b983a20f16" translate="yes" xml:space="preserve">
          <source>CertPathValidator.getDefaultType()</source>
          <target state="translated">CertPathValidator.getDefaultType()</target>
        </trans-unit>
        <trans-unit id="8c88cdee19d8323d7afa497131f287adc9eeb1e3" translate="yes" xml:space="preserve">
          <source>CertPathValidator.getInstance()</source>
          <target state="translated">CertPathValidator.getInstance()</target>
        </trans-unit>
        <trans-unit id="a03381d2921229adb474d017ee1708796e234e0e" translate="yes" xml:space="preserve">
          <source>CertPathValidator.getProvider()</source>
          <target state="translated">CertPathValidator.getProvider()</target>
        </trans-unit>
        <trans-unit id="bdd2219ed38d396fc36fba4714ace72ea8c8a567" translate="yes" xml:space="preserve">
          <source>CertPathValidator.getRevocationChecker()</source>
          <target state="translated">CertPathValidator.getRevocationChecker()</target>
        </trans-unit>
        <trans-unit id="d39eccf4cbfa5cf3a063ef221bfd11be5ab7e6a7" translate="yes" xml:space="preserve">
          <source>CertPathValidator.validate()</source>
          <target state="translated">CertPathValidator.validate()</target>
        </trans-unit>
        <trans-unit id="bf77983a6f1f69ec61fd99bcfdba2d69d1d652fe" translate="yes" xml:space="preserve">
          <source>CertPathValidatorException</source>
          <target state="translated">CertPathValidatorException</target>
        </trans-unit>
        <trans-unit id="2397eb67e789315abd8da285111c70c38315b16a" translate="yes" xml:space="preserve">
          <source>CertPathValidatorException.BasicReason</source>
          <target state="translated">CertPathValidatorException.BasicReason</target>
        </trans-unit>
        <trans-unit id="58c832c1eb4341e370dbd80971e84e69d9f21c9a" translate="yes" xml:space="preserve">
          <source>CertPathValidatorException.BasicReason.valueOf()</source>
          <target state="translated">CertPathValidatorException.BasicReason.valueOf()</target>
        </trans-unit>
        <trans-unit id="4142686f37f5cfd12ede4e7094f4040a1f51efa4" translate="yes" xml:space="preserve">
          <source>CertPathValidatorException.BasicReason.values()</source>
          <target state="translated">CertPathValidatorException.BasicReason.values()</target>
        </trans-unit>
        <trans-unit id="b96a402c3002e8709674d5fb3726519c2653d6e7" translate="yes" xml:space="preserve">
          <source>CertPathValidatorException.Reason</source>
          <target state="translated">CertPathValidatorException.Reason</target>
        </trans-unit>
        <trans-unit id="078a088afac901e856a54cb24cd1e3be4f693275" translate="yes" xml:space="preserve">
          <source>CertPathValidatorException.getCertPath()</source>
          <target state="translated">CertPathValidatorException.getCertPath()</target>
        </trans-unit>
        <trans-unit id="5c7c42e726495d55ade7e83032fb121fe1d59f8e" translate="yes" xml:space="preserve">
          <source>CertPathValidatorException.getIndex()</source>
          <target state="translated">CertPathValidatorException.getIndex()</target>
        </trans-unit>
        <trans-unit id="f494ad449ca0c86e515bc366c560b928dcf3a76a" translate="yes" xml:space="preserve">
          <source>CertPathValidatorException.getReason()</source>
          <target state="translated">CertPathValidatorException.getReason()</target>
        </trans-unit>
        <trans-unit id="534b3a3c111490fe70d35c9ccc3a180ce59a0e6e" translate="yes" xml:space="preserve">
          <source>CertPathValidatorResult</source>
          <target state="translated">CertPathValidatorResult</target>
        </trans-unit>
        <trans-unit id="d77f699d5106a7fd005db7dd4227c80e197e9d71" translate="yes" xml:space="preserve">
          <source>CertPathValidatorResult.clone()</source>
          <target state="translated">CertPathValidatorResult.clone()</target>
        </trans-unit>
        <trans-unit id="21fdb6fca7c8b7daaddece46e7931640e937c47d" translate="yes" xml:space="preserve">
          <source>CertPathValidatorSpi</source>
          <target state="translated">CertPathValidatorSpi</target>
        </trans-unit>
        <trans-unit id="91ae50c986138f19f8e54de9a5165c554212d019" translate="yes" xml:space="preserve">
          <source>CertPathValidatorSpi.engineGetRevocationChecker()</source>
          <target state="translated">CertPathValidatorSpi.engineGetRevocationChecker()</target>
        </trans-unit>
        <trans-unit id="24e5fa2e7042e706c8d9a965f6590a910a8c2c36" translate="yes" xml:space="preserve">
          <source>CertPathValidatorSpi.engineValidate()</source>
          <target state="translated">CertPathValidatorSpi.engineValidate()</target>
        </trans-unit>
        <trans-unit id="d13ef378ffa092ded28435577fe27e678d04f346" translate="yes" xml:space="preserve">
          <source>CertSelector</source>
          <target state="translated">CertSelector</target>
        </trans-unit>
        <trans-unit id="cc046ac5ab50aab58d87538b5045c6ba99025397" translate="yes" xml:space="preserve">
          <source>CertSelector.clone()</source>
          <target state="translated">CertSelector.clone()</target>
        </trans-unit>
        <trans-unit id="5bfbab907ddac18eca722a8acd1fdca56b4ea9e9" translate="yes" xml:space="preserve">
          <source>CertSelector.match()</source>
          <target state="translated">CertSelector.match()</target>
        </trans-unit>
        <trans-unit id="be1f17dddbba97e34275d78c46e14d1dae7180b3" translate="yes" xml:space="preserve">
          <source>CertStore</source>
          <target state="translated">CertStore</target>
        </trans-unit>
        <trans-unit id="77948ce2f86e887f6ec8e67044f0a2904b18d992" translate="yes" xml:space="preserve">
          <source>CertStore.getCRLs()</source>
          <target state="translated">CertStore.getCRLs()</target>
        </trans-unit>
        <trans-unit id="4336bf845d10e69c81b5b92a9b814861d3897f28" translate="yes" xml:space="preserve">
          <source>CertStore.getCertStoreParameters()</source>
          <target state="translated">CertStore.getCertStoreParameters()</target>
        </trans-unit>
        <trans-unit id="126addf4ad888258c4079417d006513bc7cb7eb3" translate="yes" xml:space="preserve">
          <source>CertStore.getCertificates()</source>
          <target state="translated">CertStore.getCertificates()</target>
        </trans-unit>
        <trans-unit id="93c14e99d67a60ce7b44150057881a86c2a858d5" translate="yes" xml:space="preserve">
          <source>CertStore.getDefaultType()</source>
          <target state="translated">CertStore.getDefaultType()</target>
        </trans-unit>
        <trans-unit id="57d299b1fe88d0f3848b4bb407ac0cc9f6431efe" translate="yes" xml:space="preserve">
          <source>CertStore.getInstance()</source>
          <target state="translated">CertStore.getInstance()</target>
        </trans-unit>
        <trans-unit id="baec6331851afcdc24420cb52309833961173cff" translate="yes" xml:space="preserve">
          <source>CertStore.getProvider()</source>
          <target state="translated">CertStore.getProvider()</target>
        </trans-unit>
        <trans-unit id="1fb3efc9cd43f4670679f92d2f1277509457ee2f" translate="yes" xml:space="preserve">
          <source>CertStore.getType()</source>
          <target state="translated">CertStore.getType()</target>
        </trans-unit>
        <trans-unit id="3a4fb7f15072d6b3d99630ccc6cf960ac5582fbf" translate="yes" xml:space="preserve">
          <source>CertStoreException</source>
          <target state="translated">CertStoreException</target>
        </trans-unit>
        <trans-unit id="e8da3f2b2d7a5e747a193f43631c7f582e00b825" translate="yes" xml:space="preserve">
          <source>CertStoreParameters</source>
          <target state="translated">CertStoreParameters</target>
        </trans-unit>
        <trans-unit id="2e952e279e429819518d20d7c1794e3c025a5efb" translate="yes" xml:space="preserve">
          <source>CertStoreParameters.clone()</source>
          <target state="translated">CertStoreParameters.clone()</target>
        </trans-unit>
        <trans-unit id="b4e7f40a334c38ace08429a3da141cbb9a6793f9" translate="yes" xml:space="preserve">
          <source>CertStoreSpi</source>
          <target state="translated">CertStoreSpi</target>
        </trans-unit>
        <trans-unit id="2124d532065fea34b64152b067fed8d2d429702a" translate="yes" xml:space="preserve">
          <source>CertStoreSpi.engineGetCRLs()</source>
          <target state="translated">CertStoreSpi.engineGetCRLs()</target>
        </trans-unit>
        <trans-unit id="7928a4eea85e376cac7c91070b0c0e06ff48564e" translate="yes" xml:space="preserve">
          <source>CertStoreSpi.engineGetCertificates()</source>
          <target state="translated">CertStoreSpi.engineGetCertificates()</target>
        </trans-unit>
        <trans-unit id="e0734872e48a8afecfc950e56cacf5655e1132f9" translate="yes" xml:space="preserve">
          <source>Certain access modes of the returned VarHandle are unsupported under the following conditions:</source>
          <target state="translated">반환 된 VarHandle의 특정 액세스 모드는 다음 조건에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eb0c14ff2b23e06e1d7132dd0405d3b03ae22837" translate="yes" xml:space="preserve">
          <source>Certain adjustable properties (minimum, maximum, blockIncrement, and visibleAmount) are set internally by the scrollpane in accordance with the geometry of the scrollpane and its child and these should not be set by programs using the scrollpane.</source>
          <target state="translated">특정 조정 가능한 속성 (minimum, maximum, blockIncrement 및 visibleAmount)은 scrollpane 및 해당 자식의 지오메트리에 따라 scrollpane에 의해 내부적으로 설정되며 이러한 속성은 scrollpane을 사용하는 프로그램에서 설정해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="802d4a8e1234b6b6ea752cfd816ac7dadd1742fd" translate="yes" xml:space="preserve">
          <source>Certain fields are used by the JMX implementation. This means either that the presence of the field may change the behavior of the JMX API or that the field may be set in descriptors returned by the JMX API. These fields appear in</source>
          <target state="translated">특정 필드는 JMX 구현에서 사용됩니다. 이는 필드가 있으면 JMX API의 동작이 변경되거나 필드가 JMX API가 리턴 한 설명자에서 설정 될 수 있음을 의미합니다. 이 필드는</target>
        </trans-unit>
        <trans-unit id="31e3ba2971ed37eee956c0f3795237158f056624" translate="yes" xml:space="preserve">
          <source>Certain header fields are accessed frequently. The methods:</source>
          <target state="translated">특정 헤더 필드는 자주 액세스됩니다. 방법 :</target>
        </trans-unit>
        <trans-unit id="ca5ef36bf54accd99b3b314e0a9609f77e3a973a" translate="yes" xml:space="preserve">
          <source>Certain line operations, such as open and close, can generate security exceptions if invoked by unprivileged code when the line is a shared audio resource.</source>
          <target state="translated">개방 및 폐쇄와 같은 특정 회선 조작은 회선이 공유 오디오 자원 인 경우 권한이없는 코드에 의해 호출되는 경우 보안 예외를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="288d8f8160ac0a56ec8391760ea70b4a97a0c4f5" translate="yes" xml:space="preserve">
          <source>Certain methods are specified to be</source>
          <target state="translated">특정 방법은</target>
        </trans-unit>
        <trans-unit id="ce5f3197e06dc2857596fb6e5a01d80786373e4e" translate="yes" xml:space="preserve">
          <source>Certain methods in the JNDI class library make use of the standard JNDI properties that specify lists of JNDI factories:</source>
          <target state="translated">JNDI 클래스 라이브러리의 특정 메소드는 JNDI 팩토리 목록을 지정하는 표준 JNDI 특성을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="5a5e6451eb10d2ba0eb0f0027d302bfb6a3e528e" translate="yes" xml:space="preserve">
          <source>Certain methods of this interface are considered &quot;destructive&quot; and are called &quot;mutator&quot; methods in that they modify the group of objects contained within the collection on which they operate. They can be specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this collection implementation does not support the operation. Such methods should (but are not required to) throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the invocation would have no effect on the collection. For example, consider a collection that does not support the &lt;a href=&quot;#add(E)&quot;&gt;&lt;code&gt;add&lt;/code&gt;&lt;/a&gt; operation. What will happen if the &lt;a href=&quot;#addAll(java.util.Collection)&quot;&gt;&lt;code&gt;addAll&lt;/code&gt;&lt;/a&gt; method is invoked on this collection, with an empty collection as the argument? The addition of zero elements has no effect, so it is permissible for this collection simply to do nothing and not to throw an exception. However, it is recommended that such cases throw an exception unconditionally, as throwing only in certain cases can lead to programming errors.</source>
          <target state="translated">이 인터페이스의 특정 메서드는 &quot;파괴적&quot;으로 간주되며 작동하는 컬렉션 내에 포함 된 개체 그룹을 수정한다는 점에서 &quot;변이 자&quot;메서드라고합니다. 이 컬렉션 구현이 작업을 지원하지 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 경우 UnsupportedOperationException 을 throw하도록 지정할 수 있습니다 . 이러한 메서드는 호출이 컬렉션에 영향을주지 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 경우 UnsupportedOperationException을 throw해야합니다 (필수는 아님) . 예를 들어 &lt;a href=&quot;#add(E)&quot;&gt; &lt;code&gt;add&lt;/code&gt; &lt;/a&gt; 작업을 지원하지 않는 컬렉션을 생각해보십시오 . 경우 어떻게됩니까 &lt;a href=&quot;#addAll(java.util.Collection)&quot;&gt; &lt;code&gt;addAll&lt;/code&gt; &lt;/a&gt;인수로 빈 컬렉션을 사용하여이 컬렉션에서 메서드가 호출됩니다. 0 요소를 추가해도 효과가 없으므로이 컬렉션은 단순히 아무 작업도 수행하지 않고 예외를 throw하지 않는 것이 허용됩니다. 그러나 특정 경우에만 throw하면 프로그래밍 오류가 발생할 수 있으므로 이러한 경우는 무조건 예외를 throw하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="4a175c3c373a5ca690a0ceceaf70480088049d95" translate="yes" xml:space="preserve">
          <source>Certain other fields have conventional meanings described in the table below but they are not required to be understood or set by the JMX implementation.</source>
          <target state="translated">일부 다른 필드는 아래 표에 설명 된 일반적인 의미를 갖지만 JMX 구현에서 이해하거나 설정할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="a1d53c7effac4a510dcca14e6d56228045d18e45" translate="yes" xml:space="preserve">
          <source>Certain query elements perform operations on the MBean server. If the caller does not have the required permissions for a given MBean, that MBean will not be included in the result of the query. The standard query elements that are affected are &lt;a href=&quot;query#attr(java.lang.String)&quot;&gt;&lt;code&gt;Query.attr(String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;query#attr(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;Query.attr(String,String)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;query#classattr()&quot;&gt;&lt;code&gt;Query.classattr()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">특정 쿼리 요소는 MBean 서버에서 작업을 수행합니다. 호출자에게 주어진 MBean에 필요한 권한이없는 경우 해당 MBean은 쿼리 결과에 포함되지 않습니다. 영향을받는 표준 쿼리 요소는 &lt;a href=&quot;query#attr(java.lang.String)&quot;&gt; &lt;code&gt;Query.attr(String)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;query#attr(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;Query.attr(String,String)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;query#classattr()&quot;&gt; &lt;code&gt;Query.classattr()&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a11edb49abe1e88d8cb43d6d083f96d6ec5f2f22" translate="yes" xml:space="preserve">
          <source>Certain query elements perform operations on the MBean server. If the caller does not have the required permissions for a given MBean, that MBean will not be included in the result of the query. The standard query elements that are affected are &lt;a href=&quot;query#attr-java.lang.String-&quot;&gt;&lt;code&gt;Query.attr(String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;query#attr-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;Query.attr(String,String)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;query#classattr--&quot;&gt;&lt;code&gt;Query.classattr()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">특정 쿼리 요소는 MBean 서버에서 작업을 수행합니다. 호출자에게 주어진 MBean에 필요한 권한이없는 경우 해당 MBean은 조회 결과에 포함되지 않습니다. 영향을받는 표준 쿼리 요소는 &lt;a href=&quot;query#attr-java.lang.String-&quot;&gt; &lt;code&gt;Query.attr(String)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;query#attr-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;Query.attr(String,String)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;query#classattr--&quot;&gt; &lt;code&gt;Query.classattr()&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="95d455b8e65bad59bb77e94989a21b11cc1335d5" translate="yes" xml:space="preserve">
          <source>Certain types of mixers do not have a hard bound and may allow opening more lines. Since certain lines are a shared resource, a mixer may not be able to open the maximum number of lines if another process has opened lines of this mixer.</source>
          <target state="translated">특정 유형의 믹서에는 하드 바운드가 없으며 더 많은 라인을 열 수 있습니다. 특정 라인은 공유 자원이기 때문에 다른 프로세스가이 믹서의 라인을 연 경우 믹서는 최대 라인 수를 열 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="10de46b3b341b6f837cf6d72972b9bf2b3f6e491" translate="yes" xml:space="preserve">
          <source>Certificate</source>
          <target state="translated">Certificate</target>
        </trans-unit>
        <trans-unit id="8dd8962593a0949f9936407c780366eb31cc98aa" translate="yes" xml:space="preserve">
          <source>Certificate Encoding Exception.</source>
          <target state="translated">인증서 인코딩 예외.</target>
        </trans-unit>
        <trans-unit id="79d38409587e28eeb3a2ca2809a3a342f7ee4787" translate="yes" xml:space="preserve">
          <source>Certificate Encoding Exception. This is thrown whenever an error occurs while attempting to encode a certificate.</source>
          <target state="translated">인증서 인코딩 예외. 인증서 인코딩을 시도하는 동안 오류가 발생할 때마다 발생합니다.</target>
        </trans-unit>
        <trans-unit id="64b1dab8b9baf7910529a3fd45e95e6b9b7d4a6e" translate="yes" xml:space="preserve">
          <source>Certificate Encoding Exception. This is thrown whenever an error occurs whilst attempting to encode a certificate.</source>
          <target state="translated">인증서 인코딩 예외. 인증서 인코딩을 시도하는 동안 오류가 발생할 때마다 발생합니다.</target>
        </trans-unit>
        <trans-unit id="38cf460a3088bc14eeb3697e1d5eccafa2ad1ee9" translate="yes" xml:space="preserve">
          <source>Certificate Expired Exception.</source>
          <target state="translated">인증서 만료 예외.</target>
        </trans-unit>
        <trans-unit id="1d1f076c99aae4d8cee457dbb125e72686eb0878" translate="yes" xml:space="preserve">
          <source>Certificate Expired Exception. This is thrown whenever the current &lt;code&gt;Date&lt;/code&gt; or the specified &lt;code&gt;Date&lt;/code&gt; is after the &lt;code&gt;notAfter&lt;/code&gt; date/time specified in the validity period of the certificate.</source>
          <target state="translated">인증서 만료 예외. 이것은 현재 &lt;code&gt;Date&lt;/code&gt; 또는 지정된 &lt;code&gt;Date&lt;/code&gt; 가 &lt;code&gt;notAfter&lt;/code&gt; 뒤에 올 때마다 발생 합니다. 인증서 유효 기간에 지정된 날짜 / 시간 합니다.</target>
        </trans-unit>
        <trans-unit id="0932febb6307177b54aa9fd577899caa17629250" translate="yes" xml:space="preserve">
          <source>Certificate Parsing Exception.</source>
          <target state="translated">인증서 구문 분석 예외.</target>
        </trans-unit>
        <trans-unit id="3919f2f735739ba2a50d3fccc663cc00af0b952d" translate="yes" xml:space="preserve">
          <source>Certificate Parsing Exception. This is thrown whenever an invalid DER-encoded certificate is parsed or unsupported DER features are found in the Certificate.</source>
          <target state="translated">인증서 구문 분석 예외. 유효하지 않은 DER 인코딩 된 인증서가 구문 분석되거나 지원되지 않는 DER 기능이 인증서에서 발견 될 때마다 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a7befe7749bc8e31f4a5a8a060998ffc91bd1ef7" translate="yes" xml:space="preserve">
          <source>Certificate Parsing Exception. This is thrown whenever invalid DER encoded certificate is parsed or unsupported DER features are found in the Certificate.</source>
          <target state="translated">인증서 구문 분석 예외. 유효하지 않은 DER 인코딩 된 인증서가 구문 분석되거나 지원되지 않는 DER 기능이 인증서에서 발견 될 때마다 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d29a5fdb83415b06133ce088d0dab9397f07030a" translate="yes" xml:space="preserve">
          <source>Certificate factories are used to generate certificate, certification path (&lt;code&gt;CertPath&lt;/code&gt;) and certificate revocation list (CRL) objects from their encodings.</source>
          <target state="translated">인증서 팩토리는 인코딩에서 인증서, 인증 경로 ( &lt;code&gt;CertPath&lt;/code&gt; ) 및 인증서 해지 목록 (CRL) 오브젝트 를 생성하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="948fa0455702e8c9fb34e32affb3e5b3f61df03e" translate="yes" xml:space="preserve">
          <source>Certificate is not yet valid exception.</source>
          <target state="translated">인증서가 아직 유효한 예외가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="fc26bc3a7c1b28c23d8ce4ce97d0442b7fed7e2b" translate="yes" xml:space="preserve">
          <source>Certificate is not yet valid exception. This is thrown whenever the current &lt;code&gt;Date&lt;/code&gt; or the specified &lt;code&gt;Date&lt;/code&gt; is before the &lt;code&gt;notBefore&lt;/code&gt; date/time in the Certificate validity period.</source>
          <target state="translated">인증서가 아직 유효한 예외가 아닙니다. 이것은 현재 &lt;code&gt;Date&lt;/code&gt; 또는 지정된 &lt;code&gt;Date&lt;/code&gt; 가 &lt;code&gt;notBefore&lt;/code&gt; 이전 일 때마다 발생 합니다. 인증서 유효 기간 날짜 / 시간 일 .</target>
        </trans-unit>
        <trans-unit id="23fa66489d132dec64c5f0662173e4940b3c43bd" translate="yes" xml:space="preserve">
          <source>Certificate.CertificateRep</source>
          <target state="translated">Certificate.CertificateRep</target>
        </trans-unit>
        <trans-unit id="d91b7ae3f17e9de199c1e4a0767e386175e8d605" translate="yes" xml:space="preserve">
          <source>Certificate.CertificateRep.readResolve()</source>
          <target state="translated">Certificate.CertificateRep.readResolve()</target>
        </trans-unit>
        <trans-unit id="d5e032dcb7ffa9cb918dedfc6b4fff12073afad1" translate="yes" xml:space="preserve">
          <source>Certificate.decode()</source>
          <target state="translated">Certificate.decode()</target>
        </trans-unit>
        <trans-unit id="e0a041d776ce9cadebb60d1762481aa05d7dbebc" translate="yes" xml:space="preserve">
          <source>Certificate.encode()</source>
          <target state="translated">Certificate.encode()</target>
        </trans-unit>
        <trans-unit id="64b6ee38f6f78a40c765ba5fb65d10bd6a8ec0c2" translate="yes" xml:space="preserve">
          <source>Certificate.equals()</source>
          <target state="translated">Certificate.equals()</target>
        </trans-unit>
        <trans-unit id="d7d136b9a8f2c96522eb1a2c753b84f59f4d1120" translate="yes" xml:space="preserve">
          <source>Certificate.getEncoded()</source>
          <target state="translated">Certificate.getEncoded()</target>
        </trans-unit>
        <trans-unit id="a5da2aa418f2e21e392c54dba29e7d60e6ec9766" translate="yes" xml:space="preserve">
          <source>Certificate.getFormat()</source>
          <target state="translated">Certificate.getFormat()</target>
        </trans-unit>
        <trans-unit id="f77305e03de8b1412c116490ee833c88a17e8e3c" translate="yes" xml:space="preserve">
          <source>Certificate.getGuarantor()</source>
          <target state="translated">Certificate.getGuarantor()</target>
        </trans-unit>
        <trans-unit id="4c005b55b56ea6b113ccae2780771e64a9f2d55c" translate="yes" xml:space="preserve">
          <source>Certificate.getPrincipal()</source>
          <target state="translated">Certificate.getPrincipal()</target>
        </trans-unit>
        <trans-unit id="d8b07b034178d2143fbede0ae3078ce829ed8b9c" translate="yes" xml:space="preserve">
          <source>Certificate.getPublicKey()</source>
          <target state="translated">Certificate.getPublicKey()</target>
        </trans-unit>
        <trans-unit id="04949d8a98efeacc9d360dd2817337cf7a46b0e1" translate="yes" xml:space="preserve">
          <source>Certificate.getType()</source>
          <target state="translated">Certificate.getType()</target>
        </trans-unit>
        <trans-unit id="34452ef683ea759436110220dc72e73ebc47b309" translate="yes" xml:space="preserve">
          <source>Certificate.hashCode()</source>
          <target state="translated">Certificate.hashCode()</target>
        </trans-unit>
        <trans-unit id="014c903b4a19c025b8e455094c6f5bd0d0ca1cae" translate="yes" xml:space="preserve">
          <source>Certificate.toString()</source>
          <target state="translated">Certificate.toString()</target>
        </trans-unit>
        <trans-unit id="416726f81407062dbb4e7a54c1fee414ad12c05d" translate="yes" xml:space="preserve">
          <source>Certificate.verify()</source>
          <target state="translated">Certificate.verify()</target>
        </trans-unit>
        <trans-unit id="41e69a477fca4bad07c68280c57ce68a57692e8e" translate="yes" xml:space="preserve">
          <source>Certificate.writeReplace()</source>
          <target state="translated">Certificate.writeReplace()</target>
        </trans-unit>
        <trans-unit id="a5a98ddfaed8d295b9b6bc6b75530e13e9bf17d2" translate="yes" xml:space="preserve">
          <source>CertificateEncodingException</source>
          <target state="translated">CertificateEncodingException</target>
        </trans-unit>
        <trans-unit id="d6985760bbeb584eac86a7fa30d274bac6b2e45e" translate="yes" xml:space="preserve">
          <source>CertificateException</source>
          <target state="translated">CertificateException</target>
        </trans-unit>
        <trans-unit id="6b6d299261959b456d3b8a32fdc0e1a983d97158" translate="yes" xml:space="preserve">
          <source>CertificateExpiredException</source>
          <target state="translated">CertificateExpiredException</target>
        </trans-unit>
        <trans-unit id="65f16c9035af4a5624aa5908448c8e13c335d841" translate="yes" xml:space="preserve">
          <source>CertificateFactory</source>
          <target state="translated">CertificateFactory</target>
        </trans-unit>
        <trans-unit id="2694de62f5494d87fe6c9c352e62bcef004084c0" translate="yes" xml:space="preserve">
          <source>CertificateFactory.generateCRL()</source>
          <target state="translated">CertificateFactory.generateCRL()</target>
        </trans-unit>
        <trans-unit id="3bf8a307ac09561f2d2ba0bc492c3c4224d546e5" translate="yes" xml:space="preserve">
          <source>CertificateFactory.generateCRLs()</source>
          <target state="translated">CertificateFactory.generateCRLs()</target>
        </trans-unit>
        <trans-unit id="75218b725b6504daff8788978942604c139299b3" translate="yes" xml:space="preserve">
          <source>CertificateFactory.generateCertPath()</source>
          <target state="translated">CertificateFactory.generateCertPath()</target>
        </trans-unit>
        <trans-unit id="b11689763017b92321c7d30de5f07c11a47bb25c" translate="yes" xml:space="preserve">
          <source>CertificateFactory.generateCertificate()</source>
          <target state="translated">CertificateFactory.generateCertificate()</target>
        </trans-unit>
        <trans-unit id="ae2e77dc33f25c9d6a9f33132d15377e381206cb" translate="yes" xml:space="preserve">
          <source>CertificateFactory.generateCertificates()</source>
          <target state="translated">CertificateFactory.generateCertificates()</target>
        </trans-unit>
        <trans-unit id="6c6c55923ecc549826e5aeaa86aadeb280f30f1d" translate="yes" xml:space="preserve">
          <source>CertificateFactory.getCertPathEncodings()</source>
          <target state="translated">CertificateFactory.getCertPathEncodings()</target>
        </trans-unit>
        <trans-unit id="4a6ba39795b024dfac9f4d428d6a934a0742db75" translate="yes" xml:space="preserve">
          <source>CertificateFactory.getInstance()</source>
          <target state="translated">CertificateFactory.getInstance()</target>
        </trans-unit>
        <trans-unit id="fcd8a992300182a0522eff3ec63658b04511e9d4" translate="yes" xml:space="preserve">
          <source>CertificateFactory.getProvider()</source>
          <target state="translated">CertificateFactory.getProvider()</target>
        </trans-unit>
        <trans-unit id="4c94a3ee97ea19f1ceccb1a21beaac9d60c8c9f9" translate="yes" xml:space="preserve">
          <source>CertificateFactory.getType()</source>
          <target state="translated">CertificateFactory.getType()</target>
        </trans-unit>
        <trans-unit id="0fb72df91e7dc2538e40a19adb9c0306e660204a" translate="yes" xml:space="preserve">
          <source>CertificateFactorySpi</source>
          <target state="translated">CertificateFactorySpi</target>
        </trans-unit>
        <trans-unit id="fc2ac8c77c7e2ceacc9da92817275512a4e04784" translate="yes" xml:space="preserve">
          <source>CertificateFactorySpi.engineGenerateCRL()</source>
          <target state="translated">CertificateFactorySpi.engineGenerateCRL()</target>
        </trans-unit>
        <trans-unit id="6ae996621289093ac762d2c3efb9b602246e5493" translate="yes" xml:space="preserve">
          <source>CertificateFactorySpi.engineGenerateCRLs()</source>
          <target state="translated">CertificateFactorySpi.engineGenerateCRLs()</target>
        </trans-unit>
        <trans-unit id="f8489ec6c8399e1868e4995ea83735466e6ff9df" translate="yes" xml:space="preserve">
          <source>CertificateFactorySpi.engineGenerateCertPath()</source>
          <target state="translated">CertificateFactorySpi.engineGenerateCertPath()</target>
        </trans-unit>
        <trans-unit id="363e5db18c2f75a2622fde8e37af4ca1c0a51c8c" translate="yes" xml:space="preserve">
          <source>CertificateFactorySpi.engineGenerateCertificate()</source>
          <target state="translated">CertificateFactorySpi.engineGenerateCertificate()</target>
        </trans-unit>
        <trans-unit id="cfb2cb14be5da0650bc43a90c0a8c07ab623117c" translate="yes" xml:space="preserve">
          <source>CertificateFactorySpi.engineGenerateCertificates()</source>
          <target state="translated">CertificateFactorySpi.engineGenerateCertificates()</target>
        </trans-unit>
        <trans-unit id="3022d99bdc2c9a43c6bb92d56d878f7cd646ea41" translate="yes" xml:space="preserve">
          <source>CertificateFactorySpi.engineGetCertPathEncodings()</source>
          <target state="translated">CertificateFactorySpi.engineGetCertPathEncodings()</target>
        </trans-unit>
        <trans-unit id="3c955f63c13faea7b2156ec6b2fef65d83fbc838" translate="yes" xml:space="preserve">
          <source>CertificateNotYetValidException</source>
          <target state="translated">CertificateNotYetValidException</target>
        </trans-unit>
        <trans-unit id="2038377bc2d002232de7b2348157777e62a9e003" translate="yes" xml:space="preserve">
          <source>CertificateParsingException</source>
          <target state="translated">CertificateParsingException</target>
        </trans-unit>
        <trans-unit id="e64fbe2024396544c96b61a383846f00e1614759" translate="yes" xml:space="preserve">
          <source>CertificateRep</source>
          <target state="translated">CertificateRep</target>
        </trans-unit>
        <trans-unit id="672ab8db11f0f8b003e4fe9300c3a2d3d79f704e" translate="yes" xml:space="preserve">
          <source>CertificateRevokedException</source>
          <target state="translated">CertificateRevokedException</target>
        </trans-unit>
        <trans-unit id="c139f462fd8ec0d19a9a514a9be6000f11a2b142" translate="yes" xml:space="preserve">
          <source>CertificateRevokedException.getAuthorityName()</source>
          <target state="translated">CertificateRevokedException.getAuthorityName()</target>
        </trans-unit>
        <trans-unit id="8c4a566d4b7f7aefff4af1a2aa69601945ddfb70" translate="yes" xml:space="preserve">
          <source>CertificateRevokedException.getExtensions()</source>
          <target state="translated">CertificateRevokedException.getExtensions()</target>
        </trans-unit>
        <trans-unit id="a0450a53bedc4b4de180a90daafcee64dc1303ac" translate="yes" xml:space="preserve">
          <source>CertificateRevokedException.getInvalidityDate()</source>
          <target state="translated">CertificateRevokedException.getInvalidityDate()</target>
        </trans-unit>
        <trans-unit id="64fd74552bd69c1184d494ea5a364ababc9f379b" translate="yes" xml:space="preserve">
          <source>CertificateRevokedException.getMessage()</source>
          <target state="translated">CertificateRevokedException.getMessage()</target>
        </trans-unit>
        <trans-unit id="2deefa963ce914914f3cc81cbe03a0e2248b5cdb" translate="yes" xml:space="preserve">
          <source>CertificateRevokedException.getRevocationDate()</source>
          <target state="translated">CertificateRevokedException.getRevocationDate()</target>
        </trans-unit>
        <trans-unit id="81e039c0b32f964ad4ff5c3a2857cd5d87f82bc0" translate="yes" xml:space="preserve">
          <source>CertificateRevokedException.getRevocationReason()</source>
          <target state="translated">CertificateRevokedException.getRevocationReason()</target>
        </trans-unit>
        <trans-unit id="fc39978474b0832c36565a7c051a7b2166cbdd07" translate="yes" xml:space="preserve">
          <source>Certificates are instantiated using a certificate factory. The following is an example of how to instantiate an X.509 certificate:</source>
          <target state="translated">인증서는 인증서 팩토리를 사용하여 인스턴스화됩니다. 다음은 X.509 인증서를 인스턴스화하는 방법의 예입니다.</target>
        </trans-unit>
        <trans-unit id="45da53804352f2d7df012e43e0b145f750517599" translate="yes" xml:space="preserve">
          <source>ChaCha20</source>
          <target state="translated">ChaCha20</target>
        </trans-unit>
        <trans-unit id="e8e61d2c9af8f38b45fc980a240937eb4499d8dc" translate="yes" xml:space="preserve">
          <source>ChaCha20ParameterSpec</source>
          <target state="translated">ChaCha20ParameterSpec</target>
        </trans-unit>
        <trans-unit id="d81f3692d7cd234a9b91ed4f4582f15dd8290d89" translate="yes" xml:space="preserve">
          <source>Chain</source>
          <target state="translated">Chain</target>
        </trans-unit>
        <trans-unit id="ab519c83610a3e4638a113a7a84c346c70453e30" translate="yes" xml:space="preserve">
          <source>ChainedCallSite</source>
          <target state="translated">ChainedCallSite</target>
        </trans-unit>
        <trans-unit id="f5b5ac82ce4acd81aef185af2b16deac987f1ffa" translate="yes" xml:space="preserve">
          <source>Change event (only one needed)</source>
          <target state="translated">변경 이벤트 (하나만 필요)</target>
        </trans-unit>
        <trans-unit id="447d205fa15b71fc20d8c9cfde03ef002930c5b6" translate="yes" xml:space="preserve">
          <source>Change information: information about the change that triggered this event; usually service provider-specific or server-specific information.</source>
          <target state="translated">변경 정보 :이 이벤트를 트리거 한 변경에 대한 정보. 일반적으로 서비스 제공 업체별 또는 서버 별 정보입니다.</target>
        </trans-unit>
        <trans-unit id="5d75dee60fdb0ab9fab3260c6848bd196d31ceab" translate="yes" xml:space="preserve">
          <source>Change listener</source>
          <target state="translated">리스너 변경</target>
        </trans-unit>
        <trans-unit id="7efcd2e2c5c47c27d9e02812cf9637165161e36d" translate="yes" xml:space="preserve">
          <source>Change the child views.</source>
          <target state="translated">자식보기를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="fee7bc1bd879b4a62eb037c2a460f1461b2db008" translate="yes" xml:space="preserve">
          <source>Change the child views. This is implemented to provide the superclass behavior and invalidate the grid so that rows and columns will be recalculated.</source>
          <target state="translated">자식보기를 변경합니다. 이것은 수퍼 클래스 동작을 제공하고 행과 열이 다시 계산되도록 그리드를 무효화하기 위해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="a37135191b61addd10639efaff824d4fbe1aa7a5" translate="yes" xml:space="preserve">
          <source>Change the current ParameterBlock of the operation, allowing editing of image rendering chains.</source>
          <target state="translated">작업의 현재 ParameterBlock을 변경하여 이미지 렌더링 체인을 편집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4219cdf4af1944214ebc285f8c143d7ad75cc76d" translate="yes" xml:space="preserve">
          <source>Change the current ParameterBlock of the operation, allowing editing of image rendering chains. The effects of such a change will be visible when a new rendering is created from this RenderableImageOp or any dependent RenderableImageOp.</source>
          <target state="translated">작업의 현재 ParameterBlock을 변경하여 이미지 렌더링 체인을 편집 할 수 있습니다. 이러한 변경의 효과는이 RenderableImageOp 또는 종속 RenderableImageOp에서 새 렌더링이 생성 될 때 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="029a3b7e4815583030f8d67cf7e5f6d9947c6225" translate="yes" xml:space="preserve">
          <source>Change the list of package names that will be used for finding BeanInfo classes.</source>
          <target state="translated">BeanInfo 클래스를 찾는 데 사용할 패키지 이름 목록을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="93dfa5cd554db83f91a697748597f4122e839540" translate="yes" xml:space="preserve">
          <source>Change the list of package names that will be used for finding BeanInfo classes. The behaviour of this method is undefined if parameter path is null.</source>
          <target state="translated">BeanInfo 클래스를 찾는 데 사용될 패키지 이름 목록을 변경하십시오. 매개 변수 경로가 널인 경우이 메소드의 작동은 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6125136ee10bd52242faf08d37c63db586a7c0e0" translate="yes" xml:space="preserve">
          <source>Change the list of package names that will be used for finding property editors.</source>
          <target state="translated">특성 편집기를 찾는 데 사용될 패키지 이름 목록을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="f8b1c558e800bdac0bd1af2cea862e35a0891bd1" translate="yes" xml:space="preserve">
          <source>Change the output stream.</source>
          <target state="translated">출력 스트림을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="160a396383ee58bcfcb6880533c0420cf66f4914" translate="yes" xml:space="preserve">
          <source>Change the selection to the empty set.</source>
          <target state="translated">선택을 빈 세트로 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="d45eeb12c43448f89faf4ffff7b6adea7211f498" translate="yes" xml:space="preserve">
          <source>Change the selection to the empty set. If this represents a change to the current selection then notify each ListSelectionListener.</source>
          <target state="translated">선택을 빈 세트로 변경하십시오. 이것이 현재 선택에 대한 변경을 나타내는 경우 각 ListSelectionListener에 알립니다.</target>
        </trans-unit>
        <trans-unit id="b47cd8c3d7e4e267746b8deb51af28e9b1fef643" translate="yes" xml:space="preserve">
          <source>Change the size requests for this shape.</source>
          <target state="translated">이 모양에 대한 크기 요청을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="3e4c0d23e64a5ca4658ad589bdc33b3ed189b19a" translate="yes" xml:space="preserve">
          <source>Change the size requests for this shape. An invalidate() is propagated upward as a result so that layout will eventually happen with using the new sizes.</source>
          <target state="translated">이 모양에 대한 크기 요청을 변경하십시오. 결과적으로 invalidate ()가 위쪽으로 전파되어 결국 새 크기를 사용하여 레이아웃이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e26ca6d9158dae8ec620c073871af66439bd5cff" translate="yes" xml:space="preserve">
          <source>Change to parent directory action.</source>
          <target state="translated">상위 디렉토리 조치로 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="120762bb3702f433b250ee84c2c9f897d28fb2b9" translate="yes" xml:space="preserve">
          <source>Change type.</source>
          <target state="translated">유형 변경.</target>
        </trans-unit>
        <trans-unit id="c3e9431c12839e475665adbc9575f0e05f090629" translate="yes" xml:space="preserve">
          <source>ChangeEvent</source>
          <target state="translated">ChangeEvent</target>
        </trans-unit>
        <trans-unit id="430c573492c0bf3ee8f29a94436e9a2eb64783b5" translate="yes" xml:space="preserve">
          <source>ChangeEvent is used to notify interested parties that state has changed in the event source.</source>
          <target state="translated">ChangeEvent는 이벤트 소스에서 상태가 변경되었음을 이해 당사자에게 알리는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b4a5aef3a2e1da9188eda05e664b58332d8ca973" translate="yes" xml:space="preserve">
          <source>ChangeHandler</source>
          <target state="translated">ChangeHandler</target>
        </trans-unit>
        <trans-unit id="bc9f15771290520fa095c40aee1718063fffed24" translate="yes" xml:space="preserve">
          <source>ChangeListener</source>
          <target state="translated">ChangeListener</target>
        </trans-unit>
        <trans-unit id="a9dca9b7ab010b3bec02ab2c94f5aeba53522537" translate="yes" xml:space="preserve">
          <source>ChangeToParentDirectoryAction</source>
          <target state="translated">ChangeToParentDirectoryAction</target>
        </trans-unit>
        <trans-unit id="f45c28bd7f7463ed88bffd8a358b5f414d67e96d" translate="yes" xml:space="preserve">
          <source>ChangedCharSetException</source>
          <target state="translated">ChangedCharSetException</target>
        </trans-unit>
        <trans-unit id="2ee6e3c4d5980032a6b4f5e599bff0fb16b0c036" translate="yes" xml:space="preserve">
          <source>ChangedCharSetException as the name indicates is an exception thrown when the charset is changed.</source>
          <target state="translated">이름에서 알 수 있듯이 ChangedCharSetException은 문자 집합이 변경 될 때 throw되는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="bdb0755e2b2f597b7ac577bd2460cc4f6a270325" translate="yes" xml:space="preserve">
          <source>Changes a highlight.</source>
          <target state="translated">하이라이트를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="5af6a29630a39a2b950cb6783fb7a128f4dd5061" translate="yes" xml:space="preserve">
          <source>Changes a program (patch).</source>
          <target state="translated">프로그램 (패치)을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="c02fa033026e70dbf1ef00102ae51c0ee5cba45e" translate="yes" xml:space="preserve">
          <source>Changes a program (patch). This selects a specific instrument from the currently selected bank of instruments.</source>
          <target state="translated">프로그램 (패치)을 변경합니다. 현재 선택된 악기 뱅크에서 특정 악기를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="c165cd176c5aca27cdd1d1be1ce2dc8fec130a40" translate="yes" xml:space="preserve">
          <source>Changes can be made to a data source's properties, which means that it is not necessary to make changes in application code when something about the data source or driver changes.</source>
          <target state="translated">데이터 소스의 속성을 변경할 수 있습니다. 즉, 데이터 소스 또는 드라이버에 대한 내용이 변경 될 때 응용 프로그램 코드를 변경할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="4f7062963961c2c7e8f089678d8eb0a160aced19" translate="yes" xml:space="preserve">
          <source>Changes content.</source>
          <target state="translated">내용을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="1e6c10978a4e0040c801f715bca8fc8b8f1bb0f3" translate="yes" xml:space="preserve">
          <source>Changes current value of the model, typically this value is displayed by the &lt;code&gt;editor&lt;/code&gt; part of a &lt;code&gt;JSpinner&lt;/code&gt;.</source>
          <target state="translated">모델의 현재 값을 변경합니다. 일반적으로이 값은 &lt;code&gt;JSpinner&lt;/code&gt; 의 &lt;code&gt;editor&lt;/code&gt; 부분에 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="864b48113c12067d571e84d84bf14c06fb6b655f" translate="yes" xml:space="preserve">
          <source>Changes current value of the model, typically this value is displayed by the &lt;code&gt;editor&lt;/code&gt; part of a &lt;code&gt;JSpinner&lt;/code&gt;. If the &lt;code&gt;SpinnerModel&lt;/code&gt; implementation doesn't support the specified value then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. For example a &lt;code&gt;SpinnerModel&lt;/code&gt; for numbers might only support values that are integer multiples of ten. In that case, &lt;code&gt;model.setValue(new Number(11))&lt;/code&gt; would throw an exception.</source>
          <target state="translated">모델의 현재 값을 변경합니다. 일반적으로이 값은 &lt;code&gt;JSpinner&lt;/code&gt; 의 &lt;code&gt;editor&lt;/code&gt; 부분에 표시됩니다 . 는 IF &lt;code&gt;SpinnerModel&lt;/code&gt; 구현이 지정된 값을 지원하지 않습니다 다음 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 슬로우됩니다. 예를 들어 숫자에 대한 &lt;code&gt;SpinnerModel&lt;/code&gt; 은 10의 정수 배수 인 값만 지원할 수 있습니다. 이 경우 &lt;code&gt;model.setValue(new Number(11))&lt;/code&gt; 는 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="9bd976bf2ca69ca3997256495ff6fcdae60a0261" translate="yes" xml:space="preserve">
          <source>Changes current value of the model, typically this value is displayed by the &lt;code&gt;editor&lt;/code&gt;.</source>
          <target state="translated">모델의 현재 값을 변경합니다. 일반적으로이 값은 &lt;code&gt;editor&lt;/code&gt; 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="fb07348435aaef33a8d77e92f93de01bbf24664e" translate="yes" xml:space="preserve">
          <source>Changes current value of the model, typically this value is displayed by the &lt;code&gt;editor&lt;/code&gt;. If the &lt;code&gt;SpinnerModel&lt;/code&gt; implementation doesn't support the specified value then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">모델의 현재 값을 변경합니다. 일반적으로이 값은 &lt;code&gt;editor&lt;/code&gt; 표시됩니다 . 는 IF &lt;code&gt;SpinnerModel&lt;/code&gt; 구현이 지정된 값을 지원하지 않습니다 다음 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 슬로우됩니다.</target>
        </trans-unit>
        <trans-unit id="6aae3de3befcf11f0e6783217091698c3aa8bf17" translate="yes" xml:space="preserve">
          <source>Changes made to the interest sets of a selector's keys while a selection operation is in progress have no effect upon that operation; they will be seen by the next selection operation.</source>
          <target state="translated">선택 조작이 진행되는 동안 선택기 키의 관심 세트를 변경해도 해당 조작에는 영향을 미치지 않습니다. 다음 선택 작업에서 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85bb27e952cab98b885735d1afdaa7f577e22716" translate="yes" xml:space="preserve">
          <source>Changes made to the resulting buffer will eventually be propagated to the file; they may or may not be made visible to other programs that have mapped the same file. (&lt;a href=&quot;filechannel.mapmode#READ_WRITE&quot;&gt;&lt;code&gt;MapMode.READ_WRITE&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">결과 버퍼에 대한 변경 사항은 결국 파일로 전파됩니다. 동일한 파일을 매핑 한 다른 프로그램에 표시되거나 표시되지 않을 수 있습니다. ( &lt;a href=&quot;filechannel.mapmode#READ_WRITE&quot;&gt; &lt;code&gt;MapMode.READ_WRITE&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="cf72cbfeb7c590eee3df0f0b9adb249415a8b549" translate="yes" xml:space="preserve">
          <source>Changes made to the resulting buffer will not be propagated to the file and will not be visible to other programs that have mapped the same file; instead, they will cause private copies of the modified portions of the buffer to be created. (&lt;a href=&quot;filechannel.mapmode#PRIVATE&quot;&gt;&lt;code&gt;MapMode.PRIVATE&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">결과 버퍼에 대한 변경 사항은 파일로 전파되지 않으며 동일한 파일을 맵핑 한 다른 프로그램에는 표시되지 않습니다. 대신, 버퍼의 수정 된 부분에 대한 개인 사본이 작성됩니다. ( &lt;a href=&quot;filechannel.mapmode#PRIVATE&quot;&gt; &lt;code&gt;MapMode.PRIVATE&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="c9b0a4c2dd3d62458980dbf8e193e194cff5062a" translate="yes" xml:space="preserve">
          <source>Changes the &lt;code&gt;JComponent&lt;/code&gt; that displays the current value of the &lt;code&gt;SpinnerModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SpinnerModel&lt;/code&gt; 의 현재 값을 표시 하는 &lt;code&gt;JComponent&lt;/code&gt; 를 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="d7643495c6e4dc25009eefe262cf6d8f6f83f5f4" translate="yes" xml:space="preserve">
          <source>Changes the &lt;code&gt;JComponent&lt;/code&gt; that displays the current value of the &lt;code&gt;SpinnerModel&lt;/code&gt;. It is the responsibility of this method to</source>
          <target state="translated">&lt;code&gt;SpinnerModel&lt;/code&gt; 의 현재 값을 표시 하는 &lt;code&gt;JComponent&lt;/code&gt; 를 변경합니다 . 이 방법의 책임은</target>
        </trans-unit>
        <trans-unit id="fd4d58a08130396cda61b1a29dfc9b0b550b1ce1" translate="yes" xml:space="preserve">
          <source>Changes the &lt;code&gt;Pattern&lt;/code&gt; that this &lt;code&gt;Matcher&lt;/code&gt; uses to find matches with.</source>
          <target state="translated">이 &lt;code&gt;Matcher&lt;/code&gt; 의 &lt;code&gt;Pattern&lt;/code&gt; 을 변경합니다 일치 항목을 찾는 데 사용 .</target>
        </trans-unit>
        <trans-unit id="c0488de3bec5a86c74c17337abbe44348da9b4cf" translate="yes" xml:space="preserve">
          <source>Changes the content element attributes used for the given range of existing content in the document.</source>
          <target state="translated">문서에서 기존 컨텐츠의 주어진 범위에 사용되는 컨텐츠 요소 속성을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="53a65dff7925b88a07b67d29e172e8c2598d485c" translate="yes" xml:space="preserve">
          <source>Changes the content element attributes used for the given range of existing content in the document. All of the attributes defined in the given Attributes argument are applied to the given range. This method can be used to completely remove all content level attributes for the given range by giving an Attributes argument that has no attributes defined and setting replace to true.</source>
          <target state="translated">문서에서 기존 컨텐츠의 주어진 범위에 사용되는 컨텐츠 요소 속성을 변경합니다. 지정된 Attributes 인수에 정의 된 모든 속성이 지정된 범위에 적용됩니다. 이 메서드는 속성이 정의되지 않은 Attributes 인수를 제공하고 replace를 true로 설정하여 지정된 범위에 대한 모든 콘텐츠 수준 속성을 완전히 제거하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4f0cb27ddb15ac028b742920aade9066a1ec279" translate="yes" xml:space="preserve">
          <source>Changes the control value from the initial value to the final value linearly over the specified time period, specified in microseconds.</source>
          <target state="translated">마이크로 초 단위로 지정된 지정된 기간 동안 선형 적으로 제어 값을 초기 값에서 최종 값으로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="eebece60cc6ab19c8dbbcdd735bbd4f30d21a027" translate="yes" xml:space="preserve">
          <source>Changes the control value from the initial value to the final value linearly over the specified time period, specified in microseconds. This method returns without blocking; it does not wait for the shift to complete. An implementation should complete the operation within the time specified. The default implementation simply changes the value to the final value immediately.</source>
          <target state="translated">지정된 시간 동안 마이크로 초로 지정된 기간 동안 제어 값을 초기 값에서 최종 값으로 선형 변경합니다. 이 메소드는 차단하지 않고 리턴합니다. 시프트가 완료 될 때까지 기다리지 않습니다. 구현은 지정된 시간 내에 작업을 완료해야합니다. 기본 구현은 단순히 값을 최종 값으로 즉시 변경합니다.</target>
        </trans-unit>
        <trans-unit id="0f468f7950ddb883aaecea88f3e15387d8690c48" translate="yes" xml:space="preserve">
          <source>Changes the current &lt;code&gt;KeyboardFocusManager&lt;/code&gt;'s default &lt;code&gt;FocusTraversalPolicy&lt;/code&gt; to &lt;code&gt;DefaultFocusTraversalPolicy&lt;/code&gt;.</source>
          <target state="translated">현재 &lt;code&gt;KeyboardFocusManager&lt;/code&gt; 의 기본 &lt;code&gt;FocusTraversalPolicy&lt;/code&gt; 를 &lt;code&gt;DefaultFocusTraversalPolicy&lt;/code&gt; 로 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="554013ef2e727f23f3e33068b661119e43594bae" translate="yes" xml:space="preserve">
          <source>Changes the current element of the sequence and notifies &lt;code&gt;ChangeListeners&lt;/code&gt;.</source>
          <target state="translated">시퀀스의 현재 요소를 변경하고 &lt;code&gt;ChangeListeners&lt;/code&gt; 에 알립니다 .</target>
        </trans-unit>
        <trans-unit id="556b304123399138acc283e285e0709721164ead" translate="yes" xml:space="preserve">
          <source>Changes the current element of the sequence and notifies &lt;code&gt;ChangeListeners&lt;/code&gt;. If the specified value is not equal to an element of the underlying sequence then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. In the following example the &lt;code&gt;setValue&lt;/code&gt; call would cause an exception to be thrown:</source>
          <target state="translated">시퀀스의 현재 요소를 변경하고 &lt;code&gt;ChangeListeners&lt;/code&gt; 에 알립니다 . 지정된 값이 기본 시퀀스의 요소와 같지 않으면 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 발생합니다. 다음 예에서 &lt;code&gt;setValue&lt;/code&gt; 호출로 인해 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="55ad35a9e1563f6511e132b27671482101573cf7" translate="yes" xml:space="preserve">
          <source>Changes the daemon status of this thread group.</source>
          <target state="translated">이 스레드 그룹의 데몬 상태를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="816b00e574d515ddf9b0438ff245879fb6e1c10e" translate="yes" xml:space="preserve">
          <source>Changes the default holdability of &lt;code&gt;ResultSet&lt;/code&gt; objects created using this &lt;code&gt;Connection&lt;/code&gt; object to the given holdability.</source>
          <target state="translated">이 &lt;code&gt;Connection&lt;/code&gt; 객체를 사용하여 생성 된 &lt;code&gt;ResultSet&lt;/code&gt; 객체 의 기본 보유 가능성을 지정된 보유 가능성으로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="473199655f21ed897f1ce3fa02b974c7a253026c" translate="yes" xml:space="preserve">
          <source>Changes the default holdability of &lt;code&gt;ResultSet&lt;/code&gt; objects created using this &lt;code&gt;Connection&lt;/code&gt; object to the given holdability. The default holdability of &lt;code&gt;ResultSet&lt;/code&gt; objects can be determined by invoking &lt;a href=&quot;databasemetadata#getResultSetHoldability()&quot;&gt;&lt;code&gt;DatabaseMetaData.getResultSetHoldability()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;code&gt;Connection&lt;/code&gt; 객체를 사용하여 생성 된 &lt;code&gt;ResultSet&lt;/code&gt; 객체 의 기본 보유 가능성을 지정된 보유 가능성으로 변경합니다. &lt;code&gt;ResultSet&lt;/code&gt; 객체 의 기본 유지 가능성은 &lt;a href=&quot;databasemetadata#getResultSetHoldability()&quot;&gt; &lt;code&gt;DatabaseMetaData.getResultSetHoldability()&lt;/code&gt; &lt;/a&gt; 를 호출하여 결정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="05d96a024b7647a2cbd873553ce03388610f0404" translate="yes" xml:space="preserve">
          <source>Changes the directory to be set to the parent of the current directory.</source>
          <target state="translated">현재 디렉토리의 상위로 설정할 디렉토리를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="1702c1f8d4bafbb63bcece145e0df929c6d5a5af" translate="yes" xml:space="preserve">
          <source>Changes the given highlight to span a different portion of the document.</source>
          <target state="translated">문서의 다른 부분에 걸쳐 지정된 강조 표시를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="241fc406a5c3abb9c5508d6d6150c5f17c1f9234" translate="yes" xml:space="preserve">
          <source>Changes the given highlight to span a different portion of the document. This may be more efficient than a remove/add when a selection is expanding/shrinking (such as a sweep with a mouse) by damaging only what changed.</source>
          <target state="translated">문서의 다른 부분에 걸쳐 지정된 강조 표시를 변경합니다. 변경된 항목 만 손상시켜 선택 항목이 확장 / 축소 될 때 (예 : 마우스 스윕) 제거 / 추가보다 효율적일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08f7fedc405d37145061d8092069c825b400f25e" translate="yes" xml:space="preserve">
          <source>Changes the list that defines this sequence and resets the index of the models &lt;code&gt;value&lt;/code&gt; to zero.</source>
          <target state="translated">이 시퀀스를 정의하는 목록을 변경하고 모델 &lt;code&gt;value&lt;/code&gt; 의 인덱스 를 0으로 재설정합니다 .</target>
        </trans-unit>
        <trans-unit id="22165250a146d5ab24868e4963bed70b0f094e17" translate="yes" xml:space="preserve">
          <source>Changes the list that defines this sequence and resets the index of the models &lt;code&gt;value&lt;/code&gt; to zero. Note that &lt;code&gt;list&lt;/code&gt; is not copied, the model just stores a reference to it.</source>
          <target state="translated">이 시퀀스를 정의하는 목록을 변경하고 모델 &lt;code&gt;value&lt;/code&gt; 의 인덱스 를 0으로 재설정합니다 . 참고 &lt;code&gt;list&lt;/code&gt; 복사되지는 모델은 단지에 대한 참조를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="bbf6f40adc4fdf42fbd41056b5463508fc94aedf" translate="yes" xml:space="preserve">
          <source>Changes the lower bound for numbers in this sequence.</source>
          <target state="translated">이 시퀀스에서 숫자의 하한을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="7893645f54c0f63abb9c3177fb845474075bea1b" translate="yes" xml:space="preserve">
          <source>Changes the lower bound for numbers in this sequence. If &lt;code&gt;minimum&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then there is no lower bound. No bounds checking is done here; the new &lt;code&gt;minimum&lt;/code&gt; value may invalidate the &lt;code&gt;(minimum &amp;lt;= value &amp;lt;= maximum)&lt;/code&gt; invariant enforced by the constructors. This is to simplify updating the model, naturally one should ensure that the invariant is true before calling the &lt;code&gt;getNextValue&lt;/code&gt;, &lt;code&gt;getPreviousValue&lt;/code&gt;, or &lt;code&gt;setValue&lt;/code&gt; methods.</source>
          <target state="translated">이 시퀀스에서 숫자의 하한을 변경합니다. 경우 &lt;code&gt;minimum&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; , 하한은 없습니다. 여기에서는 경계 검사가 수행되지 않습니다. 새로운 &lt;code&gt;minimum&lt;/code&gt; 은 생성자에 의해 시행 된 &lt;code&gt;(minimum &amp;lt;= value &amp;lt;= maximum)&lt;/code&gt; 불변을 무효화 할 수 있습니다 . 이것은 모델 업데이트를 단순화하기위한 것이며, 당연히 &lt;code&gt;getNextValue&lt;/code&gt; , &lt;code&gt;getPreviousValue&lt;/code&gt; 또는 &lt;code&gt;setValue&lt;/code&gt; 메소드 를 호출하기 전에 불변성이 참인지 확인해야 합니다.</target>
        </trans-unit>
        <trans-unit id="bfec5c4e708b8d3f378cf36fcb2191a36ebb32cf" translate="yes" xml:space="preserve">
          <source>Changes the lower limit for Dates in this sequence.</source>
          <target state="translated">이 시퀀스에서 날짜의 하한을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="3fdffef3ed995515fadb4a9a9f864847f6d9d540" translate="yes" xml:space="preserve">
          <source>Changes the lower limit for Dates in this sequence. If &lt;code&gt;start&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then there is no lower limit. No bounds checking is done here: the new start value may invalidate the &lt;code&gt;(start &amp;lt;= value &amp;lt;= end)&lt;/code&gt; invariant enforced by the constructors. This is to simplify updating the model. Naturally one should ensure that the invariant is true before calling the &lt;code&gt;nextValue&lt;/code&gt;, &lt;code&gt;previousValue&lt;/code&gt;, or &lt;code&gt;setValue&lt;/code&gt; methods.</source>
          <target state="translated">이 시퀀스에서 날짜의 하한을 변경합니다. 경우 &lt;code&gt;start&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; , 다음 더 낮은 제한이 없습니다. 여기에서는 경계 검사가 수행되지 않습니다. 새 시작 값은 생성자가 적용한 &lt;code&gt;(start &amp;lt;= value &amp;lt;= end)&lt;/code&gt; 불변을 무효화 할 수 있습니다 . 이것은 모델 업데이트를 단순화하기위한 것입니다. 당연히 &lt;code&gt;nextValue&lt;/code&gt; , &lt;code&gt;previousValue&lt;/code&gt; , &lt;code&gt;setValue&lt;/code&gt; 메소드 를 호출하기 전에 불변이 참인지 확인해야 합니다.</target>
        </trans-unit>
        <trans-unit id="7b33d7743e72e93b5ebe1d99188b61eb3c3e8e96" translate="yes" xml:space="preserve">
          <source>Changes the model that represents the value of this spinner.</source>
          <target state="translated">이 스피너의 값을 나타내는 모델을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="db6a2482b7292a198ab9bd1bb68d7c8bc42879cc" translate="yes" xml:space="preserve">
          <source>Changes the model that represents the value of this spinner. If the editor property has not been explicitly set, the editor property is (implicitly) set after the &lt;code&gt;&quot;model&quot;&lt;/code&gt;&lt;code&gt;PropertyChangeEvent&lt;/code&gt; has been fired. The editor property is set to the value returned by &lt;code&gt;createEditor&lt;/code&gt;, as in:</source>
          <target state="translated">이 스피너의 값을 나타내는 모델을 변경합니다. 편집기 속성이 명시 적으로 설정되지 않은 경우 편집기 속성은 &lt;code&gt;&quot;model&quot;&lt;/code&gt; &lt;code&gt;PropertyChangeEvent&lt;/code&gt; 가 시작된 후 (암시 적으로) 설정 됩니다. 편집기 속성은 다음 과 같이 &lt;code&gt;createEditor&lt;/code&gt; 가 반환 한 값으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="9f4ec22f38237d60941fd9f4432d4677002d692f" translate="yes" xml:space="preserve">
          <source>Changes the name of the style.</source>
          <target state="translated">스타일의 이름을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="b9cbef703f715b390d1023d3508d5506321d307f" translate="yes" xml:space="preserve">
          <source>Changes the name of the style. Does nothing with a null name.</source>
          <target state="translated">스타일의 이름을 변경합니다. 널 이름으로 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="91fa0f3e99835f72be1a55df890a06aab6faf0b7" translate="yes" xml:space="preserve">
          <source>Changes the name of this thread to be equal to the argument &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">이 스레드의 이름을 인수 &lt;code&gt;name&lt;/code&gt; 과 동일하게 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="fcbbe3b231a5779b21d34e8c69850b50d06da738" translate="yes" xml:space="preserve">
          <source>Changes the parse style to be case insensitive for the remainder of the formatter.</source>
          <target state="translated">구문 분석기 스타일을 나머지 포맷터에 대해 대소 문자를 구분하지 않도록 변경합니다.</target>
        </trans-unit>
        <trans-unit id="c2cd270794084366bb0611d322d5ae70a613ca2f" translate="yes" xml:space="preserve">
          <source>Changes the parse style to be case sensitive for the remainder of the formatter.</source>
          <target state="translated">구문 분석기 스타일을 나머지 포맷터에 대해 대소 문자를 구분하도록 변경합니다.</target>
        </trans-unit>
        <trans-unit id="df8c9bb99ba019e6af55f89cabd5d18ea7b3f1df" translate="yes" xml:space="preserve">
          <source>Changes the parse style to be lenient for the remainder of the formatter.</source>
          <target state="translated">포맷터의 나머지 부분에 대해 관대하도록 구문 분석 스타일을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="53efbc6203a46c4bafe80db0f95945e01574c036" translate="yes" xml:space="preserve">
          <source>Changes the parse style to be lenient for the remainder of the formatter. Note that case sensitivity is set separately to this method.</source>
          <target state="translated">구문 분석 스타일을 나머지 포맷터에 적합하도록 변경합니다. 대소 문자 구분은이 방법과 별도로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="106198a990a6f87f7db808bbeabd3f18d347fbb5" translate="yes" xml:space="preserve">
          <source>Changes the parse style to be strict for the remainder of the formatter.</source>
          <target state="translated">구문 분석 스타일을 나머지 포맷터에 대해 엄격하게 변경합니다.</target>
        </trans-unit>
        <trans-unit id="454b0f72fe198df55646ff88e6a5b2456bde87de" translate="yes" xml:space="preserve">
          <source>Changes the pitch offset for all notes on this channel.</source>
          <target state="translated">이 채널의 모든 음표에 대한 피치 오프셋을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="d2f101498d800824aee75f5a6ad9aa1805befedf" translate="yes" xml:space="preserve">
          <source>Changes the pitch offset for all notes on this channel. This affects all currently sounding notes as well as subsequent ones. (For pitch bend to cease, the value needs to be reset to the center position.)</source>
          <target state="translated">이 채널의 모든 음에 대한 피치 오프셋을 변경합니다. 이것은 현재 들리는 모든 음표와 후속 음표에 영향을줍니다. (피치 벤드가 중단 되려면 값을 중앙 위치로 재설정해야합니다.)</target>
        </trans-unit>
        <trans-unit id="0523d0154ae55498f183cc40d5ddb71b4f489bdb" translate="yes" xml:space="preserve">
          <source>Changes the point to have the specified location.</source>
          <target state="translated">지정된 위치를 갖도록 점을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="5c28d9a5514f1fe34b3edfe3b5e10a7865208c90" translate="yes" xml:space="preserve">
          <source>Changes the priority of this thread.</source>
          <target state="translated">이 스레드의 우선 순위를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="4a6525c01b00b793a883e3f294d98a5227585b8d" translate="yes" xml:space="preserve">
          <source>Changes the program using bank and program (patch) numbers.</source>
          <target state="translated">뱅크 및 프로그램 (패치) 번호를 사용하여 프로그램을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="0bd2133c691d60da586992eb89d51cba556dce88" translate="yes" xml:space="preserve">
          <source>Changes the program using bank and program (patch) numbers. It is possible that the underlying synthesizer does not support a specific bank, or program. In order to verify that a call to &lt;code&gt;programChange&lt;/code&gt; was successful, use &lt;code&gt;getProgram&lt;/code&gt; and &lt;code&gt;getController&lt;/code&gt;. Since banks are changed by way of control changes, you can verify the current bank with the following statement:</source>
          <target state="translated">뱅크 및 프로그램 (패치) 번호를 사용하여 프로그램을 변경합니다. 기본 신디사이저가 특정 뱅크 또는 프로그램을 지원하지 않을 수 있습니다. &lt;code&gt;programChange&lt;/code&gt; 에 대한 호출 이 성공 했는지 확인 하려면 &lt;code&gt;getProgram&lt;/code&gt; 및 &lt;code&gt;getController&lt;/code&gt; 를 사용하십시오. . 은행은 통제 변경 방식으로 변경되므로 다음과 같은 설명으로 현재 은행을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0c55b3272e906e69e835da02b806e659c771796" translate="yes" xml:space="preserve">
          <source>Changes the selection in the menu hierarchy.</source>
          <target state="translated">메뉴 계층에서 선택을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="2a7562e1bcc931812d4bb1c9d2302b4ccb594946" translate="yes" xml:space="preserve">
          <source>Changes the selection in the menu hierarchy. The elements in the array are sorted in order from the root menu element to the currently selected menu element.</source>
          <target state="translated">메뉴 계층에서 선택을 변경합니다. 배열의 요소는 루트 메뉴 요소에서 현재 선택된 메뉴 요소까지 순서대로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="027c0fbeea25c4b5eb6f40d961603709e02ec81f" translate="yes" xml:space="preserve">
          <source>Changes the selection to be between &lt;code&gt;index0&lt;/code&gt; and &lt;code&gt;index1&lt;/code&gt; inclusive.</source>
          <target state="translated">선택 항목을 &lt;code&gt;index0&lt;/code&gt; 과 &lt;code&gt;index1&lt;/code&gt; 사이로 변경 합니다.</target>
        </trans-unit>
        <trans-unit id="0353c87ce43bc8adc6ce09f40e6e7b7fcae68a78" translate="yes" xml:space="preserve">
          <source>Changes the selection to be between &lt;code&gt;index0&lt;/code&gt; and &lt;code&gt;index1&lt;/code&gt; inclusive. &lt;code&gt;index0&lt;/code&gt; doesn't have to be less than or equal to &lt;code&gt;index1&lt;/code&gt;.</source>
          <target state="translated">선택 항목을 &lt;code&gt;index0&lt;/code&gt; 과 &lt;code&gt;index1&lt;/code&gt; 사이로 변경 합니다. &lt;code&gt;index0&lt;/code&gt; 로부터는 보다해야하거나 동일하지 않습니다 &lt;code&gt;index1&lt;/code&gt; 의 .</target>
        </trans-unit>
        <trans-unit id="86947c8459ccabf6c383373ac67a03f711025771" translate="yes" xml:space="preserve">
          <source>Changes the selection to be the set difference of the current selection and the indices between &lt;code&gt;index0&lt;/code&gt; and &lt;code&gt;index1&lt;/code&gt; inclusive.</source>
          <target state="translated">현재 선택과 &lt;code&gt;index0&lt;/code&gt; 과 &lt;code&gt;index1&lt;/code&gt; 사이의 인덱스 ( 포함) 의 집합 차이가되도록 선택을 변경 합니다.</target>
        </trans-unit>
        <trans-unit id="764916ef06079a0a68ca82ca6c2ec78fb8feee9d" translate="yes" xml:space="preserve">
          <source>Changes the selection to be the set difference of the current selection and the indices between &lt;code&gt;index0&lt;/code&gt; and &lt;code&gt;index1&lt;/code&gt; inclusive. &lt;code&gt;index0&lt;/code&gt; doesn't have to be less than or equal to &lt;code&gt;index1&lt;/code&gt;.</source>
          <target state="translated">현재 선택과 &lt;code&gt;index0&lt;/code&gt; 과 &lt;code&gt;index1&lt;/code&gt; 사이의 인덱스 ( 포함) 의 집합 차이가되도록 선택을 변경 합니다. &lt;code&gt;index0&lt;/code&gt; 로부터는 보다해야하거나 동일하지 않습니다 &lt;code&gt;index1&lt;/code&gt; 의 .</target>
        </trans-unit>
        <trans-unit id="f7ef176d179f97fa1a953cf65f2d7f44382e529a" translate="yes" xml:space="preserve">
          <source>Changes the selection to be the set of indices specified by the given array.</source>
          <target state="translated">선택 항목을 지정된 배열에 지정된 인덱스 세트로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="f590134801399ae539f611f9263cef6dbd344efa" translate="yes" xml:space="preserve">
          <source>Changes the selection to be the set of indices specified by the given array. Indices greater than or equal to the model size are ignored. This is a convenience method that clears the selection and then uses &lt;code&gt;addSelectionInterval&lt;/code&gt; on the selection model to add the indices. Refer to the documentation of the selection model class being used for details on how values less than &lt;code&gt;0&lt;/code&gt; are handled.</source>
          <target state="translated">선택 항목을 지정된 배열에 지정된 인덱스 세트로 변경합니다. 모델 크기보다 크거나 같은 인덱스는 무시됩니다. 이것은 선택을 지운 다음 선택 모델에서 &lt;code&gt;addSelectionInterval&lt;/code&gt; 을 사용 하여 인덱스를 추가 하는 편리한 방법입니다 . &lt;code&gt;0&lt;/code&gt; 보다 작은 값 을 처리 하는 방법에 대한 자세한 내용은 사용중인 선택 모델 클래스의 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7e3c1ceac216d54410baabcd7ce4fbd2c0e6e7f3" translate="yes" xml:space="preserve">
          <source>Changes the selection to be the set union of the current selection and the indices between &lt;code&gt;index0&lt;/code&gt; and &lt;code&gt;index1&lt;/code&gt; inclusive.</source>
          <target state="translated">현재 선택과 &lt;code&gt;index0&lt;/code&gt; 과 &lt;code&gt;index1&lt;/code&gt; 사이의 인덱스의 집합 합집합이되도록 선택을 변경 합니다.</target>
        </trans-unit>
        <trans-unit id="2f9e2f21c8329e91b9ce7440e9018341eb2e83e3" translate="yes" xml:space="preserve">
          <source>Changes the selection to be the set union of the current selection and the indices between &lt;code&gt;index0&lt;/code&gt; and &lt;code&gt;index1&lt;/code&gt; inclusive. &lt;code&gt;index0&lt;/code&gt; doesn't have to be less than or equal to &lt;code&gt;index1&lt;/code&gt;.</source>
          <target state="translated">현재 선택과 &lt;code&gt;index0&lt;/code&gt; 과 &lt;code&gt;index1&lt;/code&gt; 사이의 인덱스의 집합 합집합이되도록 선택을 변경 합니다. &lt;code&gt;index0&lt;/code&gt; 로부터는 보다해야하거나 동일하지 않습니다 &lt;code&gt;index1&lt;/code&gt; 의 .</target>
        </trans-unit>
        <trans-unit id="3172358a8a36c110f5b586993d5c66c6dab890b6" translate="yes" xml:space="preserve">
          <source>Changes the selection visibility.</source>
          <target state="translated">선택 가시성을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="e9866de6ad215ad9d460021db52cf49f3eb6f809" translate="yes" xml:space="preserve">
          <source>Changes the size of the date value change computed by the &lt;code&gt;nextValue&lt;/code&gt; and &lt;code&gt;previousValue&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;nextValue&lt;/code&gt; 및 &lt;code&gt;previousValue&lt;/code&gt; 메서드로 계산 된 날짜 값 변경의 크기를 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="fe0511580b2d05cd15a2b17f4f7660b0f0a94014" translate="yes" xml:space="preserve">
          <source>Changes the size of the date value change computed by the &lt;code&gt;nextValue&lt;/code&gt; and &lt;code&gt;previousValue&lt;/code&gt; methods. The &lt;code&gt;calendarField&lt;/code&gt; parameter must be one of the &lt;code&gt;Calendar&lt;/code&gt; field constants like &lt;code&gt;Calendar.MONTH&lt;/code&gt; or &lt;code&gt;Calendar.MINUTE&lt;/code&gt;. The &lt;code&gt;nextValue&lt;/code&gt; and &lt;code&gt;previousValue&lt;/code&gt; methods simply move the specified &lt;code&gt;Calendar&lt;/code&gt; field forward or backward by one unit with the &lt;code&gt;Calendar.add&lt;/code&gt; method. You should use this method with care as some UIs may set the calendarField before committing the edit to spin the field under the cursor. If you only want one field to spin you can subclass and ignore the setCalendarField calls.</source>
          <target state="translated">&lt;code&gt;nextValue&lt;/code&gt; 및 &lt;code&gt;previousValue&lt;/code&gt; 메서드로 계산 된 날짜 값 변경의 크기를 변경합니다 . &lt;code&gt;calendarField&lt;/code&gt; 의 매개 변수는 중 하나 여야합니다 &lt;code&gt;Calendar&lt;/code&gt; 과 같은 필드 상수 &lt;code&gt;Calendar.MONTH&lt;/code&gt; 나 &lt;code&gt;Calendar.MINUTE&lt;/code&gt; . &lt;code&gt;nextValue&lt;/code&gt; 및 &lt;code&gt;previousValue&lt;/code&gt; 방법은 단순히 지정된 이동 &lt;code&gt;Calendar&lt;/code&gt; 하나 개의 유닛에 의해 전진 또는 후진 필드 &lt;code&gt;Calendar.add&lt;/code&gt; 의 방법. 커서 아래의 필드를 회전시키기 위해 편집을 커밋하기 전에 일부 UI에서 calendarField를 설정할 수 있으므로이 메서드를주의해서 사용해야합니다. 하나의 필드 만 회전 시키려면 setCalendarField 호출을 하위 클래스로 분류하고 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec3c2a28ae55affdb64946955a9c20b6c886e30e" translate="yes" xml:space="preserve">
          <source>Changes the size of the value change computed by the &lt;code&gt;getNextValue&lt;/code&gt; and &lt;code&gt;getPreviousValue&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;getNextValue&lt;/code&gt; 및 &lt;code&gt;getPreviousValue&lt;/code&gt; 메소드로 계산 된 값 변경의 크기를 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="49353f09abe1f5362b2adad851f7ae04ccdc7238" translate="yes" xml:space="preserve">
          <source>Changes the size of the value change computed by the &lt;code&gt;getNextValue&lt;/code&gt; and &lt;code&gt;getPreviousValue&lt;/code&gt; methods. An &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown if &lt;code&gt;stepSize&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getNextValue&lt;/code&gt; 및 &lt;code&gt;getPreviousValue&lt;/code&gt; 메소드로 계산 된 값 변경의 크기를 변경합니다 . &lt;code&gt;IllegalArgumentException&lt;/code&gt; 가 있는 경우 발생합니다 &lt;code&gt;stepSize&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f5d13bd5e66a76a93969b54f85aa9d6f74afdc0" translate="yes" xml:space="preserve">
          <source>Changes the splash screen image.</source>
          <target state="translated">스플래시 화면 이미지를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="ef6544e87010bb2e4065828ad109b8cad041d293" translate="yes" xml:space="preserve">
          <source>Changes the splash screen image. The new image is loaded from the specified URL; GIF, JPEG and PNG image formats are supported. The method returns after the image has finished loading and the window has been updated. The splash screen window is resized according to the size of the image and is centered on the screen.</source>
          <target state="translated">스플래시 화면 이미지를 변경합니다. 새 이미지는 지정된 URL에서로드됩니다. GIF, JPEG 및 PNG 이미지 형식이 지원됩니다. 이미지로드가 완료되고 창이 업데이트 된 후 메서드가 반환됩니다. 스플래시 화면 창은 이미지 크기에 따라 크기가 조정되고 화면 중앙에 위치합니다.</target>
        </trans-unit>
        <trans-unit id="d4baffbaa81900fd078dd1dcb363c0e9894d428f" translate="yes" xml:space="preserve">
          <source>Changes the type of the invocation, as if &lt;a href=&quot;../../../../java.base/java/lang/invoke/methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;MethodHandle.asType(MethodType)&lt;/code&gt;&lt;/a&gt; was applied to its invocation and its guard, if it has one (with return type changed to boolean for guard).</source>
          <target state="translated">것처럼, 호출의 유형을 변경 &lt;a href=&quot;../../../../java.base/java/lang/invoke/methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;MethodHandle.asType(MethodType)&lt;/code&gt; &lt;/a&gt; 이 하나 (가드에 대한 논리 값으로 변화와 반환 형식)이있는 경우, 그 호출과 그 경비에 적용되었다.</target>
        </trans-unit>
        <trans-unit id="e50d747c0c76e174a9eda3667e7eb2d9fbc16152" translate="yes" xml:space="preserve">
          <source>Changes the type of the invocation, as if &lt;a href=&quot;../../../../java.base/java/lang/invoke/methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;MethodHandle.asType(MethodType)&lt;/code&gt;&lt;/a&gt; was applied to its invocation and its guard, if it has one (with return type changed to boolean for guard). If the invocation already is of the required type, returns this object.</source>
          <target state="translated">것처럼, 호출의 유형을 변경 &lt;a href=&quot;../../../../java.base/java/lang/invoke/methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;MethodHandle.asType(MethodType)&lt;/code&gt; &lt;/a&gt; 이 하나 (가드에 대한 논리 값으로 변화와 반환 형식)이있는 경우, 그 호출과 그 경비에 적용되었다. 호출이 이미 필요한 유형 인 경우이 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1a605eca21b1738bb828508dcbcb95da8cc08f49" translate="yes" xml:space="preserve">
          <source>Changes the type of the invocation, as if &lt;a href=&quot;../../../../java.base/java/lang/invoke/methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;MethodHandle.asType(MethodType)&lt;/code&gt;&lt;/a&gt; was applied to its invocation and its guard, if it has one (with return type changed to boolean, and parameter count potentially truncated for the guard).</source>
          <target state="translated">것처럼 호출 유형을 변경 &lt;a href=&quot;../../../../java.base/java/lang/invoke/methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;MethodHandle.asType(MethodType)&lt;/code&gt; &lt;/a&gt; 이 하나있는 경우, 그 호출과 가드에 도포 (잠재적 가드 잘릴 부울 변경 리턴 타입 및 파라미터 개수와).</target>
        </trans-unit>
        <trans-unit id="cd4fd81562a6f6cca8c18e30f70bf89b7076635d" translate="yes" xml:space="preserve">
          <source>Changes the type of the invocation, as if &lt;a href=&quot;../../../../java.base/java/lang/invoke/methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;MethodHandle.asType(MethodType)&lt;/code&gt;&lt;/a&gt; was applied to its invocation and its guard, if it has one (with return type changed to boolean, and parameter count potentially truncated for the guard). If the invocation already is of the required type, returns this object.</source>
          <target state="translated">것처럼 호출 유형을 변경 &lt;a href=&quot;../../../../java.base/java/lang/invoke/methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;MethodHandle.asType(MethodType)&lt;/code&gt; &lt;/a&gt; 이 하나있는 경우, 그 호출과 가드에 도포 (잠재적 가드 잘릴 부울 변경 리턴 타입 및 파라미터 개수와). 호출이 이미 필요한 유형 인 경우이 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f92f9846a9875936a77b5ab57abd9de9ea57c046" translate="yes" xml:space="preserve">
          <source>Changes the type of the invocation, as if &lt;a href=&quot;linkerservices#asType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;LinkerServices.asType(MethodHandle, MethodType)&lt;/code&gt;&lt;/a&gt; was applied to its invocation and its guard, if it has one (with return type changed to boolean, and parameter count potentially truncated for the guard).</source>
          <target state="translated">것처럼, 호출 유형을 변경 &lt;a href=&quot;linkerservices#asType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;LinkerServices.asType(MethodHandle, MethodType)&lt;/code&gt; &lt;/a&gt; 그것이 하나의 (잠재적 가드 잘릴 부울 변경 리턴 타입 및 파라미터 개수로)가있는 경우, 그 호출과 가드 도포 하였다.</target>
        </trans-unit>
        <trans-unit id="540b7e372f90f86c36214c6cd312554c4bd8abc1" translate="yes" xml:space="preserve">
          <source>Changes the type of the invocation, as if &lt;a href=&quot;linkerservices#asType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;LinkerServices.asType(MethodHandle, MethodType)&lt;/code&gt;&lt;/a&gt; was applied to its invocation and its guard, if it has one (with return type changed to boolean, and parameter count potentially truncated for the guard). If the invocation already is of the required type, returns this object.</source>
          <target state="translated">것처럼, 호출 유형을 변경 &lt;a href=&quot;linkerservices#asType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;LinkerServices.asType(MethodHandle, MethodType)&lt;/code&gt; &lt;/a&gt; 그것이 하나의 (잠재적 가드 잘릴 부울 변경 리턴 타입 및 파라미터 개수로)가있는 경우, 그 호출과 가드 도포 하였다. 호출이 이미 필요한 유형 인 경우이 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3ebbf9b1789065b379fe01dcaf07a5608df59752" translate="yes" xml:space="preserve">
          <source>Changes the type of the invocation, as if &lt;a href=&quot;linkerservices#asTypeLosslessReturn(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;LinkerServices.asTypeLosslessReturn(MethodHandle, MethodType)&lt;/code&gt;&lt;/a&gt; was applied to its invocation and &lt;a href=&quot;linkerservices#asType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;LinkerServices.asType(MethodHandle, MethodType)&lt;/code&gt;&lt;/a&gt; applied to its guard, if it has one (with return type changed to boolean, and parameter count potentially truncated for the guard).</source>
          <target state="translated">것처럼, 호출 유형을 변경 &lt;a href=&quot;linkerservices#asTypeLosslessReturn(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;LinkerServices.asTypeLosslessReturn(MethodHandle, MethodType)&lt;/code&gt; &lt;/a&gt; 그 호출과 도포 하였다 &lt;a href=&quot;linkerservices#asType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;LinkerServices.asType(MethodHandle, MethodType)&lt;/code&gt; &lt;/a&gt; 가 온 (반환형 부울 변경으로, 그리고 파라미터가있는 경우, 그 가드인가 가드에 대해 잠재적으로 잘린 수).</target>
        </trans-unit>
        <trans-unit id="3e101d96ee1110aaf573da26536f68cbd92881cc" translate="yes" xml:space="preserve">
          <source>Changes the type of the invocation, as if &lt;a href=&quot;linkerservices#asTypeLosslessReturn(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;LinkerServices.asTypeLosslessReturn(MethodHandle, MethodType)&lt;/code&gt;&lt;/a&gt; was applied to its invocation and &lt;a href=&quot;linkerservices#asType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;LinkerServices.asType(MethodHandle, MethodType)&lt;/code&gt;&lt;/a&gt; applied to its guard, if it has one (with return type changed to boolean, and parameter count potentially truncated for the guard). If the invocation doesn't change its type, returns this object.</source>
          <target state="translated">것처럼, 호출 유형을 변경 &lt;a href=&quot;linkerservices#asTypeLosslessReturn(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;LinkerServices.asTypeLosslessReturn(MethodHandle, MethodType)&lt;/code&gt; &lt;/a&gt; 그 호출과 도포 하였다 &lt;a href=&quot;linkerservices#asType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;LinkerServices.asType(MethodHandle, MethodType)&lt;/code&gt; &lt;/a&gt; 가 온 (반환형 부울 변경으로, 그리고 파라미터가있는 경우, 그 가드인가 가드에 대해 잠재적으로 잘린 수). 호출이 유형을 변경하지 않으면이 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="36526af37add23e5a56d4bd90a991f04cdd981ff" translate="yes" xml:space="preserve">
          <source>Changes the upper bound for numbers in this sequence.</source>
          <target state="translated">이 시퀀스에서 숫자의 상한을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="39f1b447029caad3aab3c08619998a166f719a52" translate="yes" xml:space="preserve">
          <source>Changes the upper bound for numbers in this sequence. If &lt;code&gt;maximum&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then there is no upper bound. No bounds checking is done here; the new &lt;code&gt;maximum&lt;/code&gt; value may invalidate the &lt;code&gt;(minimum &amp;lt;= value &amp;lt; maximum)&lt;/code&gt; invariant enforced by the constructors. This is to simplify updating the model, naturally one should ensure that the invariant is true before calling the &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;previous&lt;/code&gt;, or &lt;code&gt;setValue&lt;/code&gt; methods.</source>
          <target state="translated">이 시퀀스에서 숫자의 상한을 변경합니다. 경우 &lt;code&gt;maximum&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; , 상한은 없습니다. 여기에서는 경계 검사가 수행되지 않습니다. 새로운 &lt;code&gt;maximum&lt;/code&gt; 값은 생성자에 의해 시행 된 &lt;code&gt;(minimum &amp;lt;= value &amp;lt; maximum)&lt;/code&gt; 불변을 무효화 할 수 있습니다 . 이것은 모델 업데이트를 단순화하기위한 것이며, 당연히 &lt;code&gt;next&lt;/code&gt; , &lt;code&gt;previous&lt;/code&gt; 또는 &lt;code&gt;setValue&lt;/code&gt; 메서드 를 호출하기 전에 불변이 참인지 확인해야 합니다.</target>
        </trans-unit>
        <trans-unit id="afca449b525123de2579d7c2cf47e2dfd5dfbab9" translate="yes" xml:space="preserve">
          <source>Changes the upper limit for &lt;code&gt;Date&lt;/code&gt;s in this sequence.</source>
          <target state="translated">이 시퀀스에서 &lt;code&gt;Date&lt;/code&gt; 의 상한을 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="f8182da21a91c2238b2d68577ff7f5930a4a622e" translate="yes" xml:space="preserve">
          <source>Changes the upper limit for &lt;code&gt;Date&lt;/code&gt;s in this sequence. If &lt;code&gt;start&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then there is no upper limit. No bounds checking is done here: the new start value may invalidate the &lt;code&gt;(start &amp;lt;= value &amp;lt;= end)&lt;/code&gt; invariant enforced by the constructors. This is to simplify updating the model. Naturally, one should ensure that the invariant is true before calling the &lt;code&gt;nextValue&lt;/code&gt;, &lt;code&gt;previousValue&lt;/code&gt;, or &lt;code&gt;setValue&lt;/code&gt; methods.</source>
          <target state="translated">이 시퀀스에서 &lt;code&gt;Date&lt;/code&gt; 의 상한을 변경합니다 . 경우 &lt;code&gt;start&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; , 다음 상한이 없다. 여기에서는 경계 검사가 수행되지 않습니다. 새 시작 값은 생성자가 적용한 &lt;code&gt;(start &amp;lt;= value &amp;lt;= end)&lt;/code&gt; 불변을 무효화 할 수 있습니다 . 이것은 모델 업데이트를 단순화하기위한 것입니다. 당연히 &lt;code&gt;nextValue&lt;/code&gt; , &lt;code&gt;previousValue&lt;/code&gt; 또는 &lt;code&gt;setValue&lt;/code&gt; 메서드 를 호출하기 전에 불변이 참인지 확인해야 합니다.</target>
        </trans-unit>
        <trans-unit id="56e479039858e1d4f914e2ef6f0c9183babeb982" translate="yes" xml:space="preserve">
          <source>Changes this &lt;code&gt;JComponent&lt;/code&gt;'s focus traversal keys to CTRL+TAB and CTRL+SHIFT+TAB. Also prevents &lt;code&gt;SortingFocusTraversalPolicy&lt;/code&gt; from considering descendants of this JComponent when computing a focus traversal cycle.</source>
          <target state="translated">이 &lt;code&gt;JComponent&lt;/code&gt; 의 포커스 순회 키를 CTRL + TAB 및 CTRL + SHIFT + TAB로 변경합니다. 또한 포커스 순회주기를 계산할 때 &lt;code&gt;SortingFocusTraversalPolicy&lt;/code&gt; 가이 JComponent의 자손을 고려 하지 않도록 합니다.</target>
        </trans-unit>
        <trans-unit id="70c7ba139799eb771d9c5f953cee330cee6a84de" translate="yes" xml:space="preserve">
          <source>Changes this application's icon to the provided image.</source>
          <target state="translated">이 애플리케이션의 아이콘을 제공된 이미지로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="bddf865673b0ea0947733f1e656a23eb5939b188" translate="yes" xml:space="preserve">
          <source>Changes this decoder's action for malformed-input errors.</source>
          <target state="translated">잘못된 입력 오류에 대한이 디코더의 동작을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="14d99c3f09d91aab10b9ddc8b05ddc847c200105" translate="yes" xml:space="preserve">
          <source>Changes this decoder's action for unmappable-character errors.</source>
          <target state="translated">매핑 할 수없는 문자 오류에 대한이 디코더의 동작을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="014bcc4656370b3c80891b053d9683ff91eb0998" translate="yes" xml:space="preserve">
          <source>Changes this decoder's replacement value.</source>
          <target state="translated">이 디코더의 대체 값을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="8c45a5622d62d99efa4aa8efc920ed1ea5a0ead5" translate="yes" xml:space="preserve">
          <source>Changes this encoder's action for malformed-input errors.</source>
          <target state="translated">잘못된 입력 오류에 대한이 인코더의 동작을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="d3705f2adeccecfea2d7255e338e5830161a6c91" translate="yes" xml:space="preserve">
          <source>Changes this encoder's action for unmappable-character errors.</source>
          <target state="translated">매핑 할 수없는 문자 오류에 대한이 인코더의 동작을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="d8858d20de303fda69d8b2f9004e6b51902e87d8" translate="yes" xml:space="preserve">
          <source>Changes this encoder's replacement value.</source>
          <target state="translated">이 엔코더의 교체 값을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="dc1c4f8091fe62ac51617d120bb4bc8cd6f9013a" translate="yes" xml:space="preserve">
          <source>Changes this memory image into a multi-frame animation or a single-frame static image depending on the animated parameter.</source>
          <target state="translated">이 메모리 이미지를 애니메이션 매개 변수에 따라 다중 프레임 애니메이션 또는 단일 프레임 정적 이미지로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="f1570e8cf325cf6132cece45d94d5997dca80fc8" translate="yes" xml:space="preserve">
          <source>Changes to a new byte array to hold the pixels for this image.</source>
          <target state="translated">이 이미지에 대한 픽셀을 보유하기 위해 새 바이트 배열로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="ab9175d3b53adc56f2abf4d663a577c0d5fbf263" translate="yes" xml:space="preserve">
          <source>Changes to a new byte array to hold the pixels for this image. If the animation flag has been turned on through the setAnimated() method, then the new pixels will be immediately delivered to any ImageConsumers that are currently interested in the data for this image.</source>
          <target state="translated">이 이미지에 대한 픽셀을 보유하기 위해 새 바이트 배열로 변경합니다. setAnimated () 메서드를 통해 애니메이션 플래그를 켠 경우 새 픽셀은 현재이 이미지의 데이터에 관심이있는 모든 ImageConsumer에 즉시 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="a3f96daf9e256883f34fc02ab9c8f963c79462f4" translate="yes" xml:space="preserve">
          <source>Changes to a new int array to hold the pixels for this image.</source>
          <target state="translated">이 이미지의 픽셀을 보유하기 위해 새로운 int 배열로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="34010c1efed69f9027e45218d40f1af2c7ac14a0" translate="yes" xml:space="preserve">
          <source>Changes to a new int array to hold the pixels for this image. If the animation flag has been turned on through the setAnimated() method, then the new pixels will be immediately delivered to any ImageConsumers that are currently interested in the data for this image.</source>
          <target state="translated">이 이미지의 픽셀을 보유하기 위해 새로운 int 배열로 변경합니다. setAnimated () 메서드를 통해 애니메이션 플래그를 켠 경우 새 픽셀은 현재이 이미지의 데이터에 관심이있는 모든 ImageConsumer에 즉시 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="5441dec9955e2b131a966a62af66a4e3bdfd0f5d" translate="yes" xml:space="preserve">
          <source>Changes to this buffer's content will be visible in the new buffer, and vice versa; the two buffers' position, limit, and mark values will be independent.</source>
          <target state="translated">이 버퍼의 내용에 대한 변경 사항은 새 버퍼에 표시되며 그 반대의 경우도 마찬가지입니다. 두 버퍼의 위치, 한계 및 표시 값은 독립적입니다.</target>
        </trans-unit>
        <trans-unit id="8cb13d89ccfa3e4191f9c27af78fd7f645533785" translate="yes" xml:space="preserve">
          <source>Changing the list of handlers on an existing logger will cause all its previous handlers to be removed and closed, regardless of whether they had been created from the configuration or programmatically. The old handlers will be replaced by new handlers, if any.</source>
          <target state="translated">기존 로거의 처리기 목록을 변경하면 구성에서 생성되었는지 또는 프로그래밍 방식으로 생성되었는지에 관계없이 모든 이전 처리기가 제거되고 닫힙니다. 이전 핸들러가있는 경우 새 핸들러로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="9da0ffc5ca7bc40096eb0c91ad065d525d995fa4" translate="yes" xml:space="preserve">
          <source>Changing the order in which classes are normally loaded may either mask or reveal bugs in the application. An unintrusive debugger should strive to leave unchanged the behavior of the application being debugged.</source>
          <target state="translated">클래스가 정상적으로로드되는 순서를 변경하면 응용 프로그램의 버그가 가려 지거나 드러날 수 있습니다. 방해가되지 않는 디버거는 디버깅중인 응용 프로그램의 동작을 변경하지 않고 그대로 두도록 노력해야합니다.</target>
        </trans-unit>
        <trans-unit id="93f4895787d69fc67b732fb81097677bb9ccf8e2" translate="yes" xml:space="preserve">
          <source>Changing the resolver fields only has an effect during parsing. Parsing a text string occurs in two phases. Phase 1 is a basic text parse according to the fields added to the builder. Phase 2 resolves the parsed field-value pairs into date and/or time objects. The resolver fields are used to filter the field-value pairs between phase 1 and 2.</source>
          <target state="translated">리졸버 필드 변경은 구문 분석 중에 만 적용됩니다. 텍스트 문자열 구문 분석은 두 단계로 이루어집니다. 1 단계는 빌더에 추가 된 필드에 따른 기본 텍스트 구문 분석입니다. 2 단계는 구문 분석 된 필드-값 쌍을 날짜 및 / 또는 시간 객체로 해석합니다. 리졸버 필드는 1 단계와 2 단계 사이의 필드-값 쌍을 필터링하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6f583a3cf14c92d4377914e6be69dbd67112acef" translate="yes" xml:space="preserve">
          <source>Changing the resolver style only has an effect during parsing. Parsing a text string occurs in two phases. Phase 1 is a basic text parse according to the fields added to the builder. Phase 2 resolves the parsed field-value pairs into date and/or time objects. The resolver style is used to control how phase 2, resolving, happens. See &lt;code&gt;ResolverStyle&lt;/code&gt; for more information on the options available.</source>
          <target state="translated">리졸버 스타일을 변경하면 구문 분석 중에 만 효과가 있습니다. 텍스트 문자열 구문 분석은 두 단계로 이루어집니다. 1 단계는 빌더에 추가 된 필드에 따른 기본 텍스트 구문 분석입니다. 2 단계는 구문 분석 된 필드-값 쌍을 날짜 및 / 또는 시간 객체로 해석합니다. 리졸버 스타일은 2 단계의 해결 방법을 제어하는 ​​데 사용됩니다. 사용 가능한 옵션에 대한 자세한 정보는 &lt;code&gt;ResolverStyle&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3de149cd8606f45b32ce16e7b91f4588b906ab39" translate="yes" xml:space="preserve">
          <source>Changing the sample rate with this control does not affect the data line's audio format. Also note that whenever you change a sound's sample rate, a change in the sound's pitch results. For example, doubling the sample rate has the effect of doubling the frequencies in the sound's spectrum, which raises the pitch by an octave.</source>
          <target state="translated">이 컨트롤로 샘플 레이트를 변경해도 데이터 라인의 오디오 형식에는 영향을 미치지 않습니다. 또한 사운드의 샘플링 속도를 변경할 때마다 사운드의 피치가 변경됩니다. 예를 들어 샘플 속도를 두 배로 늘리면 사운드 스펙트럼의 주파수가 두 배가되어 피치가 한 옥타브 증가합니다.</target>
        </trans-unit>
        <trans-unit id="879f0b1bef59eeebf78cfd3a22f6f8077810cecf" translate="yes" xml:space="preserve">
          <source>Channel</source>
          <target state="translated">Channel</target>
        </trans-unit>
        <trans-unit id="0e046cc1ba76174d6d2f9dc06ae073c9b617c0d8" translate="yes" xml:space="preserve">
          <source>Channel bindings mismatch.</source>
          <target state="translated">채널 바인딩이 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="516a1e12d69ea2aff88ea1a0ba5d388e0d9e662d" translate="yes" xml:space="preserve">
          <source>Channel.close()</source>
          <target state="translated">Channel.close()</target>
        </trans-unit>
        <trans-unit id="9e0825fb9b73d9ba913238784cf3b52a6eb1252b" translate="yes" xml:space="preserve">
          <source>Channel.isOpen()</source>
          <target state="translated">Channel.isOpen()</target>
        </trans-unit>
        <trans-unit id="64eb7353f1e61fa12eeefb330fe01f5f80f12021" translate="yes" xml:space="preserve">
          <source>ChannelBinding</source>
          <target state="translated">ChannelBinding</target>
        </trans-unit>
        <trans-unit id="18e03e2a37ba37df713f9665ef752fb8b40fc1e8" translate="yes" xml:space="preserve">
          <source>Channels</source>
          <target state="translated">Channels</target>
        </trans-unit>
        <trans-unit id="6655b722f78ae8628f9dbd0d8556f40b0e47047c" translate="yes" xml:space="preserve">
          <source>Channels are, in general, intended to be safe for multithreaded access as described in the specifications of the interfaces and classes that extend and implement this interface.</source>
          <target state="translated">채널은 일반적으로이 인터페이스를 확장하고 구현하는 인터페이스 및 클래스 사양에 설명 된대로 다중 스레드 액세스에 안전하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="6afb86ac2031960a02606d58ff261328b35c7c74" translate="yes" xml:space="preserve">
          <source>Channels of this type are safe for use by multiple concurrent threads though at most one accept operation can be outstanding at any time. If a thread initiates an accept operation before a previous accept operation has completed then an &lt;a href=&quot;acceptpendingexception&quot;&gt;&lt;code&gt;AcceptPendingException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">이 유형의 채널은 여러 동시 스레드에서 사용하기에 안전하지만 최대 한 번의 승인 조작 만 언제든지 수행 할 수 있습니다. 이전 승인 조작이 완료되기 전에 스레드가 승인 조작을 시작하면 &lt;a href=&quot;acceptpendingexception&quot;&gt; &lt;code&gt;AcceptPendingException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="130ec33164145be850492e856f501d9e6c30c9aa" translate="yes" xml:space="preserve">
          <source>Channels of this type are safe for use by multiple concurrent threads. The &lt;a href=&quot;channel#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method may be invoked at any time, as specified by the &lt;a href=&quot;channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; interface. This causes all outstanding asynchronous operations on the channel to complete with the exception &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;. Multiple read and write operations may be outstanding at the same time. When multiple read and write operations are outstanding then the ordering of the I/O operations, and the order that the completion handlers are invoked, is not specified; they are not, in particular, guaranteed to execute in the order that the operations were initiated. The &lt;a href=&quot;../bytebuffer&quot;&gt;&lt;code&gt;ByteBuffers&lt;/code&gt;&lt;/a&gt; used when reading or writing are not safe for use by multiple concurrent I/O operations. Furthermore, after an I/O operation is initiated then care should be taken to ensure that the buffer is not accessed until after the operation has completed.</source>
          <target state="translated">이 유형의 채널은 여러 동시 스레드에서 사용하기에 안전합니다. &lt;a href=&quot;channel#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 에 의해 규정 된 방법은, 언제라도 호출 할 수 있습니다 &lt;a href=&quot;channel&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt; 인터페이스를 제공합니다. 이로 인해 채널에서 처리되지 않은 모든 비동기 작업이 &lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; &lt;/a&gt; 예외와 함께 완료됩니다 . 여러 읽기 및 쓰기 작업이 동시에 처리되지 않을 수 있습니다. 여러 읽기 및 쓰기 작업이 처리되지 않은 경우 I / O 작업의 순서와 완료 처리기가 호출되는 순서가 지정되지 않습니다. 특히 작업이 시작된 순서대로 실행되도록 보장되지 않습니다. &lt;a href=&quot;../bytebuffer&quot;&gt; &lt;code&gt;ByteBuffers&lt;/code&gt; &lt;/a&gt;읽기 또는 쓰기가 여러 동시 I / O 작업에서 사용하기에 안전하지 않을 때 사용됩니다. 또한 I / O 작업이 시작된 후에는 작업이 완료 될 때까지 버퍼에 액세스하지 않도록주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="8fbb332f33b10fc3f1eedfcd04e74aa927a19a86" translate="yes" xml:space="preserve">
          <source>Channels of this type are safe for use by multiple concurrent threads. The &lt;a href=&quot;channel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method may be invoked at any time, as specified by the &lt;a href=&quot;channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; interface. This causes all outstanding asynchronous operations on the channel to complete with the exception &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;. Multiple read and write operations may be outstanding at the same time. When multiple read and write operations are outstanding then the ordering of the I/O operations, and the order that the completion handlers are invoked, is not specified; they are not, in particular, guaranteed to execute in the order that the operations were initiated. The &lt;a href=&quot;../bytebuffer&quot;&gt;&lt;code&gt;ByteBuffers&lt;/code&gt;&lt;/a&gt; used when reading or writing are not safe for use by multiple concurrent I/O operations. Furthermore, after an I/O operation is initiated then care should be taken to ensure that the buffer is not accessed until after the operation has completed.</source>
          <target state="translated">이 유형의 채널은 여러 개의 동시 스레드에서 안전하게 사용할 수 있습니다. &lt;a href=&quot;channel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 에 의해 규정 된 방법은, 언제라도 호출 할 수 있습니다 &lt;a href=&quot;channel&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt; 인터페이스를 제공합니다. 이로 인해 채널의 모든 미해결 비동기 작업이 &lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; &lt;/a&gt; 예외로 완료됩니다 . 여러 번의 읽기 및 쓰기 작업이 동시에 수행 될 수 있습니다. 다중 읽기 및 쓰기 조작이 미해결 인 경우 I / O 조작의 순서와 완료 핸들러가 호출되는 순서는 지정되지 않습니다. 특히 작업이 시작된 순서대로 실행되도록 보장되지는 않습니다. &lt;a href=&quot;../bytebuffer&quot;&gt; &lt;code&gt;ByteBuffers&lt;/code&gt; &lt;/a&gt;읽기 또는 쓰기가 여러 동시 I / O 작업에서 사용하기에 안전하지 않은 경우에 사용됩니다. 또한 I / O 작업이 시작된 후에는 작업이 완료 될 때까지 버퍼에 액세스하지 않도록주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="39afa9c6ba24d9fd3efa9738f75d1bde68faa3d4" translate="yes" xml:space="preserve">
          <source>Channels of this type are safe for use by multiple concurrent threads. They support concurrent reading and writing, though at most one read operation and one write operation can be outstanding at any time. If a thread initiates a read operation before a previous read operation has completed then a &lt;a href=&quot;readpendingexception&quot;&gt;&lt;code&gt;ReadPendingException&lt;/code&gt;&lt;/a&gt; will be thrown. Similarly, an attempt to initiate a write operation before a previous write has completed will throw a &lt;a href=&quot;writependingexception&quot;&gt;&lt;code&gt;WritePendingException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 유형의 채널은 여러 개의 동시 스레드에서 안전하게 사용할 수 있습니다. 동시 읽기와 쓰기를 지원하지만 언제든지 최대 하나의 읽기 작업과 하나의 쓰기 작업을 수행 할 수 있습니다. 스레드가 이전 읽기 작업이 완료되기 전에 읽기 작업을 시작하면 &lt;a href=&quot;readpendingexception&quot;&gt; &lt;code&gt;ReadPendingException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. 마찬가지로 이전 쓰기가 완료되기 전에 쓰기 작업을 시작하려고하면 &lt;a href=&quot;writependingexception&quot;&gt; &lt;code&gt;WritePendingException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="7b57ec79f1310df1f9f24949da7e5782954969c7" translate="yes" xml:space="preserve">
          <source>Channels.SelectableChannelCloser</source>
          <target state="translated">Channels.SelectableChannelCloser</target>
        </trans-unit>
        <trans-unit id="25d7fe820bf78db1277110719a888a0ff13080f5" translate="yes" xml:space="preserve">
          <source>Channels.newChannel()</source>
          <target state="translated">Channels.newChannel()</target>
        </trans-unit>
        <trans-unit id="ffa800b3cc81bc474ff2db87bee0b381c47d272f" translate="yes" xml:space="preserve">
          <source>Channels.newInputStream()</source>
          <target state="translated">Channels.newInputStream()</target>
        </trans-unit>
        <trans-unit id="4822c642139de52df189437f708996c7e94de568" translate="yes" xml:space="preserve">
          <source>Channels.newOutputStream()</source>
          <target state="translated">Channels.newOutputStream()</target>
        </trans-unit>
        <trans-unit id="69a924dc2735b59f4bc24727de63c9976a529882" translate="yes" xml:space="preserve">
          <source>Channels.newReader()</source>
          <target state="translated">Channels.newReader()</target>
        </trans-unit>
        <trans-unit id="e30f0e2bfcad9499595cef5011f6b40bbbcb3a86" translate="yes" xml:space="preserve">
          <source>Channels.newWriter()</source>
          <target state="translated">Channels.newWriter()</target>
        </trans-unit>
        <trans-unit id="d7f141f72729438496490b3045c4d9c3631a35ca" translate="yes" xml:space="preserve">
          <source>Chapter 17 of</source>
          <target state="translated">17 장</target>
        </trans-unit>
        <trans-unit id="ec1e7acf63a1592e887848662f8ea7c5d28a5727" translate="yes" xml:space="preserve">
          <source>Char buffers can be created either by &lt;a href=&quot;#allocate(int)&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, by &lt;a href=&quot;#wrap(char%5B%5D)&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing char array or string into a buffer, or by creating a &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;view&lt;/i&gt;&lt;/a&gt; of an existing byte buffer.</source>
          <target state="translated">Char 버퍼는 버퍼의 내용을위한 공간을 할당 하는 &lt;a href=&quot;#allocate(int)&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; , 기존 char 배열 또는 문자열을 버퍼 에 &lt;a href=&quot;#wrap(char%5B%5D)&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 하거나 기존 바이트 버퍼 의 &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;뷰&lt;/i&gt;&lt;/a&gt; 를 생성하여 생성 할 &lt;i&gt;수 있습니다&lt;/i&gt; .</target>
        </trans-unit>
        <trans-unit id="6e16d34fe8e77c1e41d989233fd812a94fe21be4" translate="yes" xml:space="preserve">
          <source>Char buffers can be created either by &lt;a href=&quot;charbuffer#allocate-int-&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, by &lt;a href=&quot;charbuffer#wrap-char:A-&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing char array or string into a buffer, or by creating a &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;view&lt;/i&gt;&lt;/a&gt; of an existing byte buffer.</source>
          <target state="translated">숯은 버퍼가 생성 될 수 중 &lt;a href=&quot;charbuffer#allocate-int-&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 함으로써, 버퍼의 컨텐츠에 용량을 할당, &lt;a href=&quot;charbuffer#wrap-char:A-&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; , 또는 생성하여 버퍼에 존재하는 문자 배열 또는 문자열 &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;도&lt;/i&gt;&lt;/a&gt; 기존 바이트 버퍼를.</target>
        </trans-unit>
        <trans-unit id="5f2b9cbc21c35998b154bee432e74d1d0b796d5f" translate="yes" xml:space="preserve">
          <source>CharArrayReader</source>
          <target state="translated">CharArrayReader</target>
        </trans-unit>
        <trans-unit id="1ba9c3867e41d5e0a53e786545b5a222d704a033" translate="yes" xml:space="preserve">
          <source>CharArrayReader.close()</source>
          <target state="translated">CharArrayReader.close()</target>
        </trans-unit>
        <trans-unit id="a40af102b607744857dd2048459bcc966c93f785" translate="yes" xml:space="preserve">
          <source>CharArrayReader.mark()</source>
          <target state="translated">CharArrayReader.mark()</target>
        </trans-unit>
        <trans-unit id="a0d5a198e0bc392798fe3d2d38b8161a5b266283" translate="yes" xml:space="preserve">
          <source>CharArrayReader.markSupported()</source>
          <target state="translated">CharArrayReader.markSupported()</target>
        </trans-unit>
        <trans-unit id="845c531c795d72625f22572a6cdea51b04b533a0" translate="yes" xml:space="preserve">
          <source>CharArrayReader.read()</source>
          <target state="translated">CharArrayReader.read()</target>
        </trans-unit>
        <trans-unit id="3fc169d708e21dc2a2ad11bbbfb2be980e05b89c" translate="yes" xml:space="preserve">
          <source>CharArrayReader.ready()</source>
          <target state="translated">CharArrayReader.ready()</target>
        </trans-unit>
        <trans-unit id="75ea81c5d733661d2391937e119c74c8341b24ce" translate="yes" xml:space="preserve">
          <source>CharArrayReader.reset()</source>
          <target state="translated">CharArrayReader.reset()</target>
        </trans-unit>
        <trans-unit id="7e0c7c21850667d0091943e2ff647a614a1d54cb" translate="yes" xml:space="preserve">
          <source>CharArrayReader.skip()</source>
          <target state="translated">CharArrayReader.skip()</target>
        </trans-unit>
        <trans-unit id="d00162bf11b2b776f9e4a102a373af23aad77788" translate="yes" xml:space="preserve">
          <source>CharArrayWriter</source>
          <target state="translated">CharArrayWriter</target>
        </trans-unit>
        <trans-unit id="4b43993335e51a05ccda1f5a37aa036e4127ddee" translate="yes" xml:space="preserve">
          <source>CharArrayWriter.append()</source>
          <target state="translated">CharArrayWriter.append()</target>
        </trans-unit>
        <trans-unit id="3c1e29383dafe2f0c17e94991b37aa5fabc82aeb" translate="yes" xml:space="preserve">
          <source>CharArrayWriter.close()</source>
          <target state="translated">CharArrayWriter.close()</target>
        </trans-unit>
        <trans-unit id="472c1dfd9cda6d032da8bb71e0b8113ab10c02a5" translate="yes" xml:space="preserve">
          <source>CharArrayWriter.flush()</source>
          <target state="translated">CharArrayWriter.flush()</target>
        </trans-unit>
        <trans-unit id="3ac0563cb511a08aa9d5e989dfd8a2f099bc1b70" translate="yes" xml:space="preserve">
          <source>CharArrayWriter.reset()</source>
          <target state="translated">CharArrayWriter.reset()</target>
        </trans-unit>
        <trans-unit id="f15e69cecbc6f7ea173cfe8105bb462c17e474c5" translate="yes" xml:space="preserve">
          <source>CharArrayWriter.size()</source>
          <target state="translated">CharArrayWriter.size()</target>
        </trans-unit>
        <trans-unit id="e2cecb90e0e8467f792a84876b410f8c6cfdc1e9" translate="yes" xml:space="preserve">
          <source>CharArrayWriter.toCharArray()</source>
          <target state="translated">CharArrayWriter.toCharArray()</target>
        </trans-unit>
        <trans-unit id="e7a12e54e52f0d1792caadc1245a434bdb0f609f" translate="yes" xml:space="preserve">
          <source>CharArrayWriter.toString()</source>
          <target state="translated">CharArrayWriter.toString()</target>
        </trans-unit>
        <trans-unit id="e6903c4620ba7fd67d317e89934faa25a458e4b7" translate="yes" xml:space="preserve">
          <source>CharArrayWriter.write()</source>
          <target state="translated">CharArrayWriter.write()</target>
        </trans-unit>
        <trans-unit id="bbceefcda5ca2a3439e7eb5f02062eb7746189bb" translate="yes" xml:space="preserve">
          <source>CharArrayWriter.writeTo()</source>
          <target state="translated">CharArrayWriter.writeTo()</target>
        </trans-unit>
        <trans-unit id="1029d1073715d0c2874bb05515b41e266c15b911" translate="yes" xml:space="preserve">
          <source>CharBuffer</source>
          <target state="translated">CharBuffer</target>
        </trans-unit>
        <trans-unit id="00903cac7338ab7836bbecc061311b497a2c83d2" translate="yes" xml:space="preserve">
          <source>CharBuffer.allocate()</source>
          <target state="translated">CharBuffer.allocate()</target>
        </trans-unit>
        <trans-unit id="903fd20471007981f3adba83f8d7c33e013d5c35" translate="yes" xml:space="preserve">
          <source>CharBuffer.append()</source>
          <target state="translated">CharBuffer.append()</target>
        </trans-unit>
        <trans-unit id="da24f204de3b762b8560d48d387ab284d560b399" translate="yes" xml:space="preserve">
          <source>CharBuffer.array()</source>
          <target state="translated">CharBuffer.array()</target>
        </trans-unit>
        <trans-unit id="944c4e6e1a6f24dcf88c3c6d18b07a23b26f7729" translate="yes" xml:space="preserve">
          <source>CharBuffer.arrayOffset()</source>
          <target state="translated">CharBuffer.arrayOffset()</target>
        </trans-unit>
        <trans-unit id="afbd2c74d3362fac9862de26b69e0155bbe4fa3b" translate="yes" xml:space="preserve">
          <source>CharBuffer.asReadOnlyBuffer()</source>
          <target state="translated">CharBuffer.asReadOnlyBuffer()</target>
        </trans-unit>
        <trans-unit id="563b5912512d3985732d914e3f0c2d2fd71ffd76" translate="yes" xml:space="preserve">
          <source>CharBuffer.charAt()</source>
          <target state="translated">CharBuffer.charAt()</target>
        </trans-unit>
        <trans-unit id="d64ec2ae3c258a7e7cfdbaf42b5f74ad56b8d06e" translate="yes" xml:space="preserve">
          <source>CharBuffer.chars()</source>
          <target state="translated">CharBuffer.chars()</target>
        </trans-unit>
        <trans-unit id="c981c236c2af6c68c0a9097eac9bae2eaa9291fd" translate="yes" xml:space="preserve">
          <source>CharBuffer.compact()</source>
          <target state="translated">CharBuffer.compact()</target>
        </trans-unit>
        <trans-unit id="a8b98bc53ff44786c4aa5fcbb90a806a5bf38241" translate="yes" xml:space="preserve">
          <source>CharBuffer.compareTo()</source>
          <target state="translated">CharBuffer.compareTo()</target>
        </trans-unit>
        <trans-unit id="e2f4e69651f71b5a23fa7e32c48632aff81474b0" translate="yes" xml:space="preserve">
          <source>CharBuffer.duplicate()</source>
          <target state="translated">CharBuffer.duplicate()</target>
        </trans-unit>
        <trans-unit id="478540c7bfff4ca7e98c4c0e748d83bebd5fa315" translate="yes" xml:space="preserve">
          <source>CharBuffer.equals()</source>
          <target state="translated">CharBuffer.equals()</target>
        </trans-unit>
        <trans-unit id="2649ede2de09701522ccb19f30497508b2ff2854" translate="yes" xml:space="preserve">
          <source>CharBuffer.get()</source>
          <target state="translated">CharBuffer.get()</target>
        </trans-unit>
        <trans-unit id="d05c3323edab8e40c2bc12bb77ea9d1fb9fd8c80" translate="yes" xml:space="preserve">
          <source>CharBuffer.hasArray()</source>
          <target state="translated">CharBuffer.hasArray()</target>
        </trans-unit>
        <trans-unit id="9d8f370ab21afa0c1742e848042234e2b82e3e14" translate="yes" xml:space="preserve">
          <source>CharBuffer.hashCode()</source>
          <target state="translated">CharBuffer.hashCode()</target>
        </trans-unit>
        <trans-unit id="aa473f1b266f7699318d325f5957c67f73ffaf6a" translate="yes" xml:space="preserve">
          <source>CharBuffer.isDirect()</source>
          <target state="translated">CharBuffer.isDirect()</target>
        </trans-unit>
        <trans-unit id="a2a2bafa5676944d755d6f0f1a952e1a74b67a3b" translate="yes" xml:space="preserve">
          <source>CharBuffer.length()</source>
          <target state="translated">CharBuffer.length()</target>
        </trans-unit>
        <trans-unit id="6d860a340f8f9f338f5191ca952c8f52c150961e" translate="yes" xml:space="preserve">
          <source>CharBuffer.order()</source>
          <target state="translated">CharBuffer.order()</target>
        </trans-unit>
        <trans-unit id="95660430c7eb23292cff4c29baa635a893fc5c39" translate="yes" xml:space="preserve">
          <source>CharBuffer.put()</source>
          <target state="translated">CharBuffer.put()</target>
        </trans-unit>
        <trans-unit id="16dd9992ede531b2c7a2ba0ff094f0db11b75fbd" translate="yes" xml:space="preserve">
          <source>CharBuffer.read()</source>
          <target state="translated">CharBuffer.read()</target>
        </trans-unit>
        <trans-unit id="8183aaaafcf33361acfda19b47609f8f1715b476" translate="yes" xml:space="preserve">
          <source>CharBuffer.slice()</source>
          <target state="translated">CharBuffer.slice()</target>
        </trans-unit>
        <trans-unit id="8747ef7a21bd36ff8bd7e25a2c51a60aa1a57d7f" translate="yes" xml:space="preserve">
          <source>CharBuffer.subSequence()</source>
          <target state="translated">CharBuffer.subSequence()</target>
        </trans-unit>
        <trans-unit id="dcc1b3b0a0a5b9e9996cf9c254283ca6b182e667" translate="yes" xml:space="preserve">
          <source>CharBuffer.toString()</source>
          <target state="translated">CharBuffer.toString()</target>
        </trans-unit>
        <trans-unit id="01817ca98fd9d3d39cc6bff0c1981eec5ce4f4d9" translate="yes" xml:space="preserve">
          <source>CharBuffer.wrap()</source>
          <target state="translated">CharBuffer.wrap()</target>
        </trans-unit>
        <trans-unit id="24e38ec54657df7ec1808f381d4274b84c2e66e5" translate="yes" xml:space="preserve">
          <source>CharConversionException</source>
          <target state="translated">CharConversionException</target>
        </trans-unit>
        <trans-unit id="ee352e16ffeb4d6a086bccab16f296b15acb8cc9" translate="yes" xml:space="preserve">
          <source>CharSequence</source>
          <target state="translated">CharSequence</target>
        </trans-unit>
        <trans-unit id="87f7924c21220b33effe73bc82773f6382abb38b" translate="yes" xml:space="preserve">
          <source>CharSequence.charAt()</source>
          <target state="translated">CharSequence.charAt()</target>
        </trans-unit>
        <trans-unit id="034421c79ef112c149ee6d8e71bac2b12f3ddbe2" translate="yes" xml:space="preserve">
          <source>CharSequence.chars()</source>
          <target state="translated">CharSequence.chars()</target>
        </trans-unit>
        <trans-unit id="2188f1aecddb5b5bf731ce9e31e0cd9af9ea4f72" translate="yes" xml:space="preserve">
          <source>CharSequence.codePoints()</source>
          <target state="translated">CharSequence.codePoints()</target>
        </trans-unit>
        <trans-unit id="e3b9fa5c8799cfcbeaae2e1645cb1a9f73a83884" translate="yes" xml:space="preserve">
          <source>CharSequence.length()</source>
          <target state="translated">CharSequence.length()</target>
        </trans-unit>
        <trans-unit id="edb8f4e51c504aafb99230bfbb32727cd432145b" translate="yes" xml:space="preserve">
          <source>CharSequence.subSequence()</source>
          <target state="translated">CharSequence.subSequence()</target>
        </trans-unit>
        <trans-unit id="562834ae27f414b69a4579fc26c07fe1d8f2cce9" translate="yes" xml:space="preserve">
          <source>CharSequence.toString()</source>
          <target state="translated">CharSequence.toString()</target>
        </trans-unit>
        <trans-unit id="e6013a9f06990793ea1db3e8e708f3ec785fd43d" translate="yes" xml:space="preserve">
          <source>CharType</source>
          <target state="translated">CharType</target>
        </trans-unit>
        <trans-unit id="3e839ac45d126d38c1462f3aa9b530dfc8ed37d2" translate="yes" xml:space="preserve">
          <source>CharValue</source>
          <target state="translated">CharValue</target>
        </trans-unit>
        <trans-unit id="ee9946c82d4a077c5be79e3015a3d2479d9fcaf2" translate="yes" xml:space="preserve">
          <source>Character</source>
          <target state="translated">Character</target>
        </trans-unit>
        <trans-unit id="89a0d26064c88761be4481b9b52065531e5e024c" translate="yes" xml:space="preserve">
          <source>Character Classes</source>
          <target state="translated">캐릭터 클래스</target>
        </trans-unit>
        <trans-unit id="c6f67a848f6294b1692cf5231f1d0f0b0180be08" translate="yes" xml:space="preserve">
          <source>Character Encodings</source>
          <target state="translated">문자 인코딩</target>
        </trans-unit>
        <trans-unit id="c3b7d0281fb028bb82d6618817f12d97dead35bf" translate="yes" xml:space="preserve">
          <source>Character array (&lt;code&gt;char[]&lt;/code&gt;) -- The print data consists of the Unicode characters in the array.</source>
          <target state="translated">문자 배열 ( &lt;code&gt;char[]&lt;/code&gt; )-인쇄 데이터는 배열의 유니 코드 문자로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="468d926a2b9e29636ce21d2050d35c0d7a3e921f" translate="yes" xml:space="preserve">
          <source>Character boundary analysis allows users to interact with characters as they expect to, for example, when moving the cursor through a text string. Character boundary analysis provides correct navigation through character strings, regardless of how the character is stored. The boundaries returned may be those of supplementary characters, combining character sequences, or ligature clusters. For example, an accented character might be stored as a base character and a diacritical mark. What users consider to be a character can differ between languages.</source>
          <target state="translated">문자 경계 분석을 통해 사용자는 예를 들어 텍스트 문자열을 통해 커서를 이동할 때 예상 한대로 문자와 상호 작용할 수 있습니다. 문자 경계 분석은 문자 저장 방법에 관계없이 문자열을 올바르게 탐색합니다. 반환되는 경계는 보조 문자, 문자 시퀀스 또는 합자 클러스터의 경계 일 수 있습니다. 예를 들어, 강조 문자는 기본 문자 및 발음 구별 부호로 저장 될 수 있습니다. 사용자가 캐릭터라고 생각하는 것은 언어마다 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f52bddd7651325b5723210ba240eadba189ac5bd" translate="yes" xml:space="preserve">
          <source>Character case is ignored for all of the valid script names. The en_US locale's case mapping rules are used to provide case-insensitive string comparisons for script name validation.</source>
          <target state="translated">유효한 모든 스크립트 이름에 대해 대소 문자를 무시합니다. en_US 로캘의 대 / 소문자 구분 규칙은 스크립트 이름 유효성 검사를 위해 대소 문자를 구분하지 않는 문자열 비교를 제공하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5e18862c91bf659118e5879bedb7b3202a782dcd" translate="yes" xml:space="preserve">
          <source>Character categories</source>
          <target state="translated">캐릭터 카테고리</target>
        </trans-unit>
        <trans-unit id="bf238be65bb5e7ebb05fdca2c63f71cc0a076a1a" translate="yes" xml:space="preserve">
          <source>Character classes</source>
          <target state="translated">캐릭터 클래스</target>
        </trans-unit>
        <trans-unit id="c5010441e10adb951ba98a20af867641166eeb19" translate="yes" xml:space="preserve">
          <source>Character classes may appear within other character classes, and may be composed by the union operator (implicit) and the intersection operator (&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;). The union operator denotes a class that contains every character that is in at least one of its operand classes. The intersection operator denotes a class that contains every character that is in both of its operand classes.</source>
          <target state="translated">문자 클래스는 다른 문자 클래스 내에 나타날 수 있으며 통합 연산자 (암시 적)와 교차 연산자 ( &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; ) 로 구성 될 수 있습니다 . 공용체 연산자는 하나 이상의 피연산자 클래스에있는 모든 문자를 포함하는 클래스를 나타냅니다. 교집합 연산자는 두 피연산자 클래스 모두에있는 모든 문자를 포함하는 클래스를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="08da2a187d1cb0588a26994ac93ddefe03047748" translate="yes" xml:space="preserve">
          <source>Character following tab is positioned at location.</source>
          <target state="translated">탭 뒤의 문자가 위치에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="d8600e69ed572ad3ecaf582bb91da59d3cc0eb2d" translate="yes" xml:space="preserve">
          <source>Character index to render mnemonic for; -1 to provide no visual identifier for this panel.</source>
          <target state="translated">니모닉을 렌더링 할 문자 인덱스입니다. -1은이 패널에 시각적 식별자를 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="991c5ed6bc7656a6a1b754eca254d65782e047cf" translate="yes" xml:space="preserve">
          <source>Character information is based on the Unicode Standard, version 13.0.</source>
          <target state="translated">문자 정보는 유니 코드 표준 버전 13.0을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="2b9842809ccaf3354a0b83f6dce95956a05ad52e" translate="yes" xml:space="preserve">
          <source>Character information is based on the Unicode Standard, version 6.2.0.</source>
          <target state="translated">문자 정보는 유니 코드 표준 버전 6.2.0을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="0babd51b9497cb7ed9d758ade1f7ac6d748e2519" translate="yes" xml:space="preserve">
          <source>Character reference</source>
          <target state="translated">성격 참조</target>
        </trans-unit>
        <trans-unit id="75d781e323f99a4b34b8539d30c3bb4243a26c20" translate="yes" xml:space="preserve">
          <source>Character stream (&lt;a href=&quot;../../../java.base/java/io/reader&quot;&gt;&lt;code&gt;java.io.Reader&lt;/code&gt;&lt;/a&gt;) -- The print data consists of the Unicode characters read from the stream up to the end-of-stream.</source>
          <target state="translated">문자 스트림 ( &lt;a href=&quot;../../../java.base/java/io/reader&quot;&gt; &lt;code&gt;java.io.Reader&lt;/code&gt; &lt;/a&gt; )-인쇄 데이터는 스트림에서 스트림 끝까지 읽은 유니 코드 문자로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="6776e9a8ee58b2629f90927c75825281f8b251f8" translate="yes" xml:space="preserve">
          <source>Character stream (&lt;a href=&quot;../../java/io/reader&quot;&gt;&lt;code&gt;java.io.Reader&lt;/code&gt;&lt;/a&gt;) -- The print data consists of the Unicode characters read from the stream up to the end-of-stream.</source>
          <target state="translated">문자 스트림 ( &lt;a href=&quot;../../java/io/reader&quot;&gt; &lt;code&gt;java.io.Reader&lt;/code&gt; &lt;/a&gt; )-인쇄 데이터는 스트림에서 스트림 끝까지 읽은 유니 코드 문자로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="6b8be2897a232f0fd549575384a76229a4446108" translate="yes" xml:space="preserve">
          <source>Character to glyph mapping.</source>
          <target state="translated">문자 대 글리프 매핑.</target>
        </trans-unit>
        <trans-unit id="0cd55e8816bf41094ae685bf89eeff1b571ab9df" translate="yes" xml:space="preserve">
          <source>Character to glyph mapping. Table tag &quot;cmap&quot; in the Open Type Specification.</source>
          <target state="translated">문자 대 글리프 매핑. Open Type 사양의 테이블 태그 「cmap」입니다.</target>
        </trans-unit>
        <trans-unit id="788380dc968427a45de4325d899eb78abb827ba9" translate="yes" xml:space="preserve">
          <source>Character used when formatting if the value does not completely fill the mask</source>
          <target state="translated">값이 마스크를 완전히 채우지 않는 경우 서식 지정에 사용되는 문자</target>
        </trans-unit>
        <trans-unit id="5d2487d50a62e90c48565915aa4264a193d33e90" translate="yes" xml:space="preserve">
          <source>Character-class union and intersection as described &lt;a href=&quot;#cc&quot;&gt;above&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#cc&quot;&gt;위에서&lt;/a&gt; 설명한 캐릭터 클래스 조합 및 교차 .</target>
        </trans-unit>
        <trans-unit id="abfc785e0ec11292400ee4fb66a0ff2c814be3f8" translate="yes" xml:space="preserve">
          <source>Character.Subset</source>
          <target state="translated">Character.Subset</target>
        </trans-unit>
        <trans-unit id="06ba78ebd376020a85a7f40ea13ab9d6d275d858" translate="yes" xml:space="preserve">
          <source>Character.Subset.equals()</source>
          <target state="translated">Character.Subset.equals()</target>
        </trans-unit>
        <trans-unit id="f5f4f2d784b6dde7123a306249d8a3c4096c18fc" translate="yes" xml:space="preserve">
          <source>Character.Subset.hashCode()</source>
          <target state="translated">Character.Subset.hashCode()</target>
        </trans-unit>
        <trans-unit id="2e969b7424212d8ed969ac5c6ddb1e46baa3e27d" translate="yes" xml:space="preserve">
          <source>Character.Subset.toString()</source>
          <target state="translated">Character.Subset.toString()</target>
        </trans-unit>
        <trans-unit id="20e6f16b08830b3e30ba9ed5d1cb75923d70318b" translate="yes" xml:space="preserve">
          <source>Character.UnicodeBlock</source>
          <target state="translated">Character.UnicodeBlock</target>
        </trans-unit>
        <trans-unit id="c8f0f6a15254511113ae4f83b94922948809f76e" translate="yes" xml:space="preserve">
          <source>Character.UnicodeBlock.forName()</source>
          <target state="translated">Character.UnicodeBlock.forName()</target>
        </trans-unit>
        <trans-unit id="a2ae0680ae8a524edd81d1ebde8fe9089735699d" translate="yes" xml:space="preserve">
          <source>Character.UnicodeBlock.of()</source>
          <target state="translated">Character.UnicodeBlock.of()</target>
        </trans-unit>
        <trans-unit id="c0443618787091762b1febd8f3e838003073a2d9" translate="yes" xml:space="preserve">
          <source>Character.UnicodeScript</source>
          <target state="translated">Character.UnicodeScript</target>
        </trans-unit>
        <trans-unit id="998279b9d3e29a565ce76f2ef208af25e7dfbd8f" translate="yes" xml:space="preserve">
          <source>Character.UnicodeScript.forName()</source>
          <target state="translated">Character.UnicodeScript.forName()</target>
        </trans-unit>
        <trans-unit id="b51174ca17fb27e666567a1a9e510b60243660ee" translate="yes" xml:space="preserve">
          <source>Character.UnicodeScript.of()</source>
          <target state="translated">Character.UnicodeScript.of()</target>
        </trans-unit>
        <trans-unit id="07a77be2ba1c745c420b7ec0f99e7a05e957e063" translate="yes" xml:space="preserve">
          <source>Character.UnicodeScript.valueOf()</source>
          <target state="translated">Character.UnicodeScript.valueOf()</target>
        </trans-unit>
        <trans-unit id="7c4c69da3c47ee8983b52c8c3f003b059c03d02c" translate="yes" xml:space="preserve">
          <source>Character.UnicodeScript.values()</source>
          <target state="translated">Character.UnicodeScript.values()</target>
        </trans-unit>
        <trans-unit id="949998819a4522b74474bbcec1a22589f0c1a5b8" translate="yes" xml:space="preserve">
          <source>Character.charCount()</source>
          <target state="translated">Character.charCount()</target>
        </trans-unit>
        <trans-unit id="745ea961dd09cc2fa365f2ca4a0c995411b4eea5" translate="yes" xml:space="preserve">
          <source>Character.charValue()</source>
          <target state="translated">Character.charValue()</target>
        </trans-unit>
        <trans-unit id="d310d24d3064def2e10671c64950ea8fe49ce4db" translate="yes" xml:space="preserve">
          <source>Character.codePointAt()</source>
          <target state="translated">Character.codePointAt()</target>
        </trans-unit>
        <trans-unit id="208a81760c01c48282aeb5cf25569d7b8ee744df" translate="yes" xml:space="preserve">
          <source>Character.codePointBefore()</source>
          <target state="translated">Character.codePointBefore()</target>
        </trans-unit>
        <trans-unit id="26f6acd289e4220bcc361b6278f233c7aa8ee982" translate="yes" xml:space="preserve">
          <source>Character.codePointCount()</source>
          <target state="translated">Character.codePointCount()</target>
        </trans-unit>
        <trans-unit id="53db6ee24c4f70c8553f1f60cd4b5c5381196dd6" translate="yes" xml:space="preserve">
          <source>Character.compare()</source>
          <target state="translated">Character.compare()</target>
        </trans-unit>
        <trans-unit id="fda932f59f1a755b376fa4c119000387d947c644" translate="yes" xml:space="preserve">
          <source>Character.compareTo()</source>
          <target state="translated">Character.compareTo()</target>
        </trans-unit>
        <trans-unit id="dca0a7a6f866f0715a0606e59b3295027f2a2273" translate="yes" xml:space="preserve">
          <source>Character.digit()</source>
          <target state="translated">Character.digit()</target>
        </trans-unit>
        <trans-unit id="67121e44f79b7275abd38670134f372d540118b4" translate="yes" xml:space="preserve">
          <source>Character.equals()</source>
          <target state="translated">Character.equals()</target>
        </trans-unit>
        <trans-unit id="82d52c42541f1527043fc545e3daa14292250b49" translate="yes" xml:space="preserve">
          <source>Character.forDigit()</source>
          <target state="translated">Character.forDigit()</target>
        </trans-unit>
        <trans-unit id="b321019ee8ef7fca10538ec5e85041ffdb90a4d0" translate="yes" xml:space="preserve">
          <source>Character.getDirectionality()</source>
          <target state="translated">Character.getDirectionality()</target>
        </trans-unit>
        <trans-unit id="cbe11dc3f7101c27812a2216ede15e9b3e31aee7" translate="yes" xml:space="preserve">
          <source>Character.getName()</source>
          <target state="translated">Character.getName()</target>
        </trans-unit>
        <trans-unit id="21b5a14df7b51bd991e09d0629ec19b3cc738d65" translate="yes" xml:space="preserve">
          <source>Character.getNumericValue()</source>
          <target state="translated">Character.getNumericValue()</target>
        </trans-unit>
        <trans-unit id="d1c3464290431d4e6e374d19c5e6005cb645e13b" translate="yes" xml:space="preserve">
          <source>Character.getType()</source>
          <target state="translated">Character.getType()</target>
        </trans-unit>
        <trans-unit id="d77f08cd2d50ba52184a5f5c5b87fe008cb5c0da" translate="yes" xml:space="preserve">
          <source>Character.hashCode()</source>
          <target state="translated">Character.hashCode()</target>
        </trans-unit>
        <trans-unit id="f03c5fe5059967199100aa3b02803fd5943bbd55" translate="yes" xml:space="preserve">
          <source>Character.highSurrogate()</source>
          <target state="translated">Character.highSurrogate()</target>
        </trans-unit>
        <trans-unit id="c91b539b2baad332c0228cac81387f064edeacc2" translate="yes" xml:space="preserve">
          <source>Character.isAlphabetic()</source>
          <target state="translated">Character.isAlphabetic()</target>
        </trans-unit>
        <trans-unit id="11bd208916d1594beb454bd8b7cc8198c8c2fa25" translate="yes" xml:space="preserve">
          <source>Character.isBmpCodePoint()</source>
          <target state="translated">Character.isBmpCodePoint()</target>
        </trans-unit>
        <trans-unit id="d1e6f7877831abc77986ef81e7975bcc667331a5" translate="yes" xml:space="preserve">
          <source>Character.isDefined()</source>
          <target state="translated">Character.isDefined()</target>
        </trans-unit>
        <trans-unit id="8b2b379ba6a65791821f20dd68a231920776f974" translate="yes" xml:space="preserve">
          <source>Character.isDigit()</source>
          <target state="translated">Character.isDigit()</target>
        </trans-unit>
        <trans-unit id="62e14452093baf0c2e79c0a770e3f236705801c1" translate="yes" xml:space="preserve">
          <source>Character.isHighSurrogate()</source>
          <target state="translated">Character.isHighSurrogate()</target>
        </trans-unit>
        <trans-unit id="ed4409aa736bbf9af69c74650ca42f87494593dc" translate="yes" xml:space="preserve">
          <source>Character.isISOControl()</source>
          <target state="translated">Character.isISOControl()</target>
        </trans-unit>
        <trans-unit id="1a9dc86bac860db740e2a0a97f1a322efb81486c" translate="yes" xml:space="preserve">
          <source>Character.isIdentifierIgnorable()</source>
          <target state="translated">Character.isIdentifierIgnorable()</target>
        </trans-unit>
        <trans-unit id="2b622dd96f5b08e08cccd9016753f93b3e917df3" translate="yes" xml:space="preserve">
          <source>Character.isIdeographic()</source>
          <target state="translated">Character.isIdeographic()</target>
        </trans-unit>
        <trans-unit id="1d7558d7390d105db07f33cb0b98e5c80749b533" translate="yes" xml:space="preserve">
          <source>Character.isJavaIdentifierPart()</source>
          <target state="translated">Character.isJavaIdentifierPart()</target>
        </trans-unit>
        <trans-unit id="90f61937ebc8e3d6e7b1ec31cda50e062eb5854b" translate="yes" xml:space="preserve">
          <source>Character.isJavaIdentifierStart()</source>
          <target state="translated">Character.isJavaIdentifierStart()</target>
        </trans-unit>
        <trans-unit id="6e849c142d2861efc43088a1a70b8af286e44fff" translate="yes" xml:space="preserve">
          <source>Character.isJavaLetter()</source>
          <target state="translated">Character.isJavaLetter()</target>
        </trans-unit>
        <trans-unit id="e501814cb4f18cbd1cd2b7e7656e571316384101" translate="yes" xml:space="preserve">
          <source>Character.isJavaLetterOrDigit()</source>
          <target state="translated">Character.isJavaLetterOrDigit()</target>
        </trans-unit>
        <trans-unit id="d2e93c98bf3f76fe779fa26ac32b28a239db97db" translate="yes" xml:space="preserve">
          <source>Character.isLetter()</source>
          <target state="translated">Character.isLetter()</target>
        </trans-unit>
        <trans-unit id="aeaa60ba8d3438fa8176943004641dfe08241385" translate="yes" xml:space="preserve">
          <source>Character.isLetterOrDigit()</source>
          <target state="translated">Character.isLetterOrDigit()</target>
        </trans-unit>
        <trans-unit id="5ebed19a5df22f34c169dd8b8f060ce9841a5119" translate="yes" xml:space="preserve">
          <source>Character.isLowSurrogate()</source>
          <target state="translated">Character.isLowSurrogate()</target>
        </trans-unit>
        <trans-unit id="8d737c80b384449e1a2bececfc04c881c02cc58e" translate="yes" xml:space="preserve">
          <source>Character.isLowerCase()</source>
          <target state="translated">Character.isLowerCase()</target>
        </trans-unit>
        <trans-unit id="ba6d1418b0a60239c794d8fcf9b4c38929374945" translate="yes" xml:space="preserve">
          <source>Character.isMirrored()</source>
          <target state="translated">Character.isMirrored()</target>
        </trans-unit>
        <trans-unit id="b489ba7c800dd0b825fbee37ca52ebf90d817246" translate="yes" xml:space="preserve">
          <source>Character.isSpace()</source>
          <target state="translated">Character.isSpace()</target>
        </trans-unit>
        <trans-unit id="b4b820a59aad5d9de9520cb53892a9d80f4a1793" translate="yes" xml:space="preserve">
          <source>Character.isSpaceChar()</source>
          <target state="translated">Character.isSpaceChar()</target>
        </trans-unit>
        <trans-unit id="77b49752a38743d091e6d6a7f733266c3d3b26b9" translate="yes" xml:space="preserve">
          <source>Character.isSupplementaryCodePoint()</source>
          <target state="translated">Character.isSupplementaryCodePoint()</target>
        </trans-unit>
        <trans-unit id="de3d7ce400d466566e1130b94133af18dcce150e" translate="yes" xml:space="preserve">
          <source>Character.isSurrogate()</source>
          <target state="translated">Character.isSurrogate()</target>
        </trans-unit>
        <trans-unit id="4580fc650298b0b9707ada3aa8357ca2c2ff221e" translate="yes" xml:space="preserve">
          <source>Character.isSurrogatePair()</source>
          <target state="translated">Character.isSurrogatePair()</target>
        </trans-unit>
        <trans-unit id="82e805c8295a7f91349ab39663a9e8fae42063b7" translate="yes" xml:space="preserve">
          <source>Character.isTitleCase()</source>
          <target state="translated">Character.isTitleCase()</target>
        </trans-unit>
        <trans-unit id="35516346e057e0482b21d2d44f6ac488ae4b5147" translate="yes" xml:space="preserve">
          <source>Character.isUnicodeIdentifierPart()</source>
          <target state="translated">Character.isUnicodeIdentifierPart()</target>
        </trans-unit>
        <trans-unit id="e2a3b2fb303a85fe624c6283995424995d2e9a55" translate="yes" xml:space="preserve">
          <source>Character.isUnicodeIdentifierStart()</source>
          <target state="translated">Character.isUnicodeIdentifierStart()</target>
        </trans-unit>
        <trans-unit id="11f1a602a99087b82c4f84dc2cedbb7e020cd790" translate="yes" xml:space="preserve">
          <source>Character.isUpperCase()</source>
          <target state="translated">Character.isUpperCase()</target>
        </trans-unit>
        <trans-unit id="38146be7c1b0afa7fc3acc360ae0b5efbca50a50" translate="yes" xml:space="preserve">
          <source>Character.isValidCodePoint()</source>
          <target state="translated">Character.isValidCodePoint()</target>
        </trans-unit>
        <trans-unit id="a73fc0dd330e2572b6cef9fb363efbdb8328ccdb" translate="yes" xml:space="preserve">
          <source>Character.isWhitespace()</source>
          <target state="translated">Character.isWhitespace()</target>
        </trans-unit>
        <trans-unit id="274d10e5afd5e46aae73eb903cbd3d20da163492" translate="yes" xml:space="preserve">
          <source>Character.lowSurrogate()</source>
          <target state="translated">Character.lowSurrogate()</target>
        </trans-unit>
        <trans-unit id="4f3707059ab494acc28ed65d5536e1157bff06ff" translate="yes" xml:space="preserve">
          <source>Character.offsetByCodePoints()</source>
          <target state="translated">Character.offsetByCodePoints()</target>
        </trans-unit>
        <trans-unit id="1f75b5d40c17acf44431417109b3b121b02517b5" translate="yes" xml:space="preserve">
          <source>Character.reverseBytes()</source>
          <target state="translated">Character.reverseBytes()</target>
        </trans-unit>
        <trans-unit id="a9dc6cb3f42a2f822174f8810b1d41bb3864a8e3" translate="yes" xml:space="preserve">
          <source>Character.toChars()</source>
          <target state="translated">Character.toChars()</target>
        </trans-unit>
        <trans-unit id="49c7d9228af641116b6230c3e2b9a0217f854e92" translate="yes" xml:space="preserve">
          <source>Character.toCodePoint()</source>
          <target state="translated">Character.toCodePoint()</target>
        </trans-unit>
        <trans-unit id="36a06bc84e6239a64410bf988f18753b05edaf7c" translate="yes" xml:space="preserve">
          <source>Character.toLowerCase()</source>
          <target state="translated">Character.toLowerCase()</target>
        </trans-unit>
        <trans-unit id="841350dd5396a85c90d6a6fbd0fb9f93660ce9fd" translate="yes" xml:space="preserve">
          <source>Character.toString()</source>
          <target state="translated">Character.toString()</target>
        </trans-unit>
        <trans-unit id="1061539577aab0c45c67a1fb83a0fc354ea3cf92" translate="yes" xml:space="preserve">
          <source>Character.toTitleCase()</source>
          <target state="translated">Character.toTitleCase()</target>
        </trans-unit>
        <trans-unit id="a160711dd59a6fd4d0ccbf083fd207541ef13c48" translate="yes" xml:space="preserve">
          <source>Character.toUpperCase()</source>
          <target state="translated">Character.toUpperCase()</target>
        </trans-unit>
        <trans-unit id="9eb6b1e7920ec0d50d3b6820bb0544d118b85147" translate="yes" xml:space="preserve">
          <source>Character.valueOf()</source>
          <target state="translated">Character.valueOf()</target>
        </trans-unit>
        <trans-unit id="7f2b30db96b1a2155602e9c75ba7453d78df9f96" translate="yes" xml:space="preserve">
          <source>CharacterAction</source>
          <target state="translated">CharacterAction</target>
        </trans-unit>
        <trans-unit id="fadd9e5c9325f42cc90e4dcfd5e60c57c2fbe46a" translate="yes" xml:space="preserve">
          <source>CharacterCodingException</source>
          <target state="translated">CharacterCodingException</target>
        </trans-unit>
        <trans-unit id="fa3ed0a02138aa2c771d13cc928f008ee11d91f3" translate="yes" xml:space="preserve">
          <source>CharacterData</source>
          <target state="translated">CharacterData</target>
        </trans-unit>
        <trans-unit id="252662b081a120efecd52d0319a5729533957d98" translate="yes" xml:space="preserve">
          <source>CharacterIterator</source>
          <target state="translated">CharacterIterator</target>
        </trans-unit>
        <trans-unit id="757f04859c2a7de8944b3184a28edbf51c5c0d2a" translate="yes" xml:space="preserve">
          <source>CharacterIterator.clone()</source>
          <target state="translated">CharacterIterator.clone()</target>
        </trans-unit>
        <trans-unit id="ca08301fd03186c897a6069a145980001630b810" translate="yes" xml:space="preserve">
          <source>CharacterIterator.current()</source>
          <target state="translated">CharacterIterator.current()</target>
        </trans-unit>
        <trans-unit id="e5ada2b11ae5be078defc0cd4b13c28dd8a71f37" translate="yes" xml:space="preserve">
          <source>CharacterIterator.first()</source>
          <target state="translated">CharacterIterator.first()</target>
        </trans-unit>
        <trans-unit id="fbc61a749d1a79cbf50557db1049c8248907e939" translate="yes" xml:space="preserve">
          <source>CharacterIterator.getBeginIndex()</source>
          <target state="translated">CharacterIterator.getBeginIndex()</target>
        </trans-unit>
        <trans-unit id="dab98b73a6cc01c6e979d51025611671bd6c6a9a" translate="yes" xml:space="preserve">
          <source>CharacterIterator.getEndIndex()</source>
          <target state="translated">CharacterIterator.getEndIndex()</target>
        </trans-unit>
        <trans-unit id="16e12dbd4471b9b9bff3621a2ad52240fd6ac6bf" translate="yes" xml:space="preserve">
          <source>CharacterIterator.getIndex()</source>
          <target state="translated">CharacterIterator.getIndex()</target>
        </trans-unit>
        <trans-unit id="b7cf2b36bb35822df3be6e5dc58e1a84bec1d92e" translate="yes" xml:space="preserve">
          <source>CharacterIterator.last()</source>
          <target state="translated">CharacterIterator.last()</target>
        </trans-unit>
        <trans-unit id="fe5bac90ae6b32cf6f1e33b6e107a789851df9ad" translate="yes" xml:space="preserve">
          <source>CharacterIterator.next()</source>
          <target state="translated">CharacterIterator.next()</target>
        </trans-unit>
        <trans-unit id="7254477e7d427bafba2056880c2bf6ac661cf120" translate="yes" xml:space="preserve">
          <source>CharacterIterator.previous()</source>
          <target state="translated">CharacterIterator.previous()</target>
        </trans-unit>
        <trans-unit id="4c230650245f950e445e29a3741fb526e7a90c5c" translate="yes" xml:space="preserve">
          <source>CharacterIterator.setIndex()</source>
          <target state="translated">CharacterIterator.setIndex()</target>
        </trans-unit>
        <trans-unit id="c3e0e937cbee73d47c5919ff1ec6ca8ad3a89ccb" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that all Spliterators resulting from &lt;code&gt;trySplit()&lt;/code&gt; will be both &lt;a href=&quot;#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">특징 값은 명시를 따른 모든 Spliterators 것을 &lt;code&gt;trySplit()&lt;/code&gt; 모두 것 &lt;a href=&quot;#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#SUBSIZED&quot;&gt; &lt;code&gt;SUBSIZED&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e62178ef0731fc3659fc892a20cfa9463c888221" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that all Spliterators resulting from &lt;code&gt;trySplit()&lt;/code&gt; will be both &lt;a href=&quot;#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt;. (This means that all child Spliterators, whether direct or indirect, will be &lt;code&gt;SIZED&lt;/code&gt;.)</source>
          <target state="translated">특징 값은 명시를 따른 모든 Spliterators 것을 &lt;code&gt;trySplit()&lt;/code&gt; 모두 것 &lt;a href=&quot;#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#SUBSIZED&quot;&gt; &lt;code&gt;SUBSIZED&lt;/code&gt; &lt;/a&gt; . (이 방법은 모든 자식 Spliterators는 직간접 것이라고 &lt;code&gt;SIZED&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="25647b7c41399582c80791af3e9bbd57fa51e588" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that all Spliterators resulting from &lt;code&gt;trySplit()&lt;/code&gt; will be both &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt;. (This means that all child Spliterators, whether direct or indirect, will be &lt;code&gt;SIZED&lt;/code&gt;.)</source>
          <target state="translated">특성 값의 명시를 따른 모든 Spliterators 것을 &lt;code&gt;trySplit()&lt;/code&gt; 모두 것 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; 을&lt;/a&gt; 하고&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;SUBSIZED&lt;/code&gt; &lt;/a&gt; . (이 방법은 모든 자식 Spliterators는 직간접 것이라고 &lt;code&gt;SIZED&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="84e374a6e16887b47099db4bed7f1dd6d3607a81" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that an encounter order is defined for elements.</source>
          <target state="translated">요소에 대해 만남 순서가 정의되었음을 나타내는 특성 값입니다.</target>
        </trans-unit>
        <trans-unit id="c3f3cc102d426490caf890a585e07df56b1c925a" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that an encounter order is defined for elements. If so, this Spliterator guarantees that method &lt;a href=&quot;#trySplit()&quot;&gt;&lt;code&gt;trySplit()&lt;/code&gt;&lt;/a&gt; splits a strict prefix of elements, that method &lt;a href=&quot;#tryAdvance(java.util.function.Consumer)&quot;&gt;&lt;code&gt;tryAdvance(java.util.function.Consumer&amp;lt;? super T&amp;gt;)&lt;/code&gt;&lt;/a&gt; steps by one element in prefix order, and that &lt;a href=&quot;#forEachRemaining(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.Consumer&amp;lt;? super T&amp;gt;)&lt;/code&gt;&lt;/a&gt; performs actions in encounter order.</source>
          <target state="translated">요소에 대해 만남 순서가 정의되었음을 나타내는 특성 값입니다. 그렇다면이 Spliterator는 &lt;a href=&quot;#trySplit()&quot;&gt; &lt;code&gt;trySplit()&lt;/code&gt; &lt;/a&gt; 메서드 가 요소의 엄격한 접두사를 분할하고 해당 메서드 &lt;a href=&quot;#tryAdvance(java.util.function.Consumer)&quot;&gt; &lt;code&gt;tryAdvance(java.util.function.Consumer&amp;lt;? super T&amp;gt;)&lt;/code&gt; &lt;/a&gt; 가 접두사 순서로 한 요소 씩 단계를 수행하고 &lt;a href=&quot;#forEachRemaining(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.Consumer&amp;lt;? super T&amp;gt;)&lt;/code&gt; &lt;/a&gt; 을 보장합니다. .function.Consumer &amp;lt;? super T&amp;gt;) 는 발생 순서대로 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="8c9e5dc497e3ef6af851d1751d4b0c181d724492" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that an encounter order is defined for elements. If so, this Spliterator guarantees that method &lt;a href=&quot;spliterator#trySplit--&quot;&gt;&lt;code&gt;trySplit()&lt;/code&gt;&lt;/a&gt; splits a strict prefix of elements, that method &lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt;&lt;code&gt;tryAdvance(java.util.function.Consumer&amp;lt;? super T&amp;gt;)&lt;/code&gt;&lt;/a&gt; steps by one element in prefix order, and that &lt;a href=&quot;spliterator#forEachRemaining-java.util.function.Consumer-&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.Consumer&amp;lt;? super T&amp;gt;)&lt;/code&gt;&lt;/a&gt; performs actions in encounter order.</source>
          <target state="translated">요소에 대해 발생 순서가 정의되었음을 나타내는 특성 값입니다. 그렇다면이 Spliterator는 &lt;a href=&quot;spliterator#trySplit--&quot;&gt; &lt;code&gt;trySplit()&lt;/code&gt; &lt;/a&gt; 메소드 가 요소의 엄격한 접 두부를 분할하도록 보장합니다 . 해당 메소드는 &lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt; &lt;code&gt;tryAdvance(java.util.function.Consumer&amp;lt;? super T&amp;gt;)&lt;/code&gt; &lt;/a&gt; 가 접두사 순서로 한 요소 &lt;a href=&quot;spliterator#forEachRemaining-java.util.function.Consumer-&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.Consumer&amp;lt;? super T&amp;gt;)&lt;/code&gt; &lt;/a&gt; , 그리고 forEachRemaining (java.util) 을 보장합니다. .function.Consumer &amp;lt;? super T&amp;gt;) 는 발생 순서대로 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="ba054e1ca2d70de4f2a04a7bd5db444fa59f98a8" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that encounter order follows a defined sort order.</source>
          <target state="translated">발생 순서가 정의 된 정렬 순서를 따른다는 것을 나타내는 특성 값입니다.</target>
        </trans-unit>
        <trans-unit id="a87fc637bd481771a3bcd7cf0390ab8dc900e516" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that encounter order follows a defined sort order. If so, method &lt;a href=&quot;#getComparator()&quot;&gt;&lt;code&gt;getComparator()&lt;/code&gt;&lt;/a&gt; returns the associated Comparator, or &lt;code&gt;null&lt;/code&gt; if all elements are &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; and are sorted by their natural ordering.</source>
          <target state="translated">발생 순서가 정의 된 정렬 순서를 따른다는 것을 나타내는 특성 값입니다. 그렇다면 메소드 &lt;a href=&quot;#getComparator()&quot;&gt; &lt;code&gt;getComparator()&lt;/code&gt; &lt;/a&gt; 는 연관된 Comparator를 반환하거나 모든 요소가 &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; 이고 자연 순서에 따라 정렬 된 경우 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5771be6523f46100f6ba74d36bfcc4d6790f259e" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that encounter order follows a defined sort order. If so, method &lt;a href=&quot;spliterator#getComparator--&quot;&gt;&lt;code&gt;getComparator()&lt;/code&gt;&lt;/a&gt; returns the associated Comparator, or &lt;code&gt;null&lt;/code&gt; if all elements are &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; and are sorted by their natural ordering.</source>
          <target state="translated">발생 순서를 나타내는 특성 값은 정의 된 정렬 순서를 따릅니다. 그렇다면 &lt;a href=&quot;spliterator#getComparator--&quot;&gt; &lt;code&gt;getComparator()&lt;/code&gt; &lt;/a&gt; 메소드 는 연관된 Comparator를 리턴하거나 &lt;code&gt;null&lt;/code&gt; 을 리턴합니다. 모든 요소가 &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; 하고 자연 순서대로 정렬 된 경우 합니다 .</target>
        </trans-unit>
        <trans-unit id="c80b40d316dc8f369ead7dffbc389367ac991057" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that the element source cannot be structurally modified; that is, elements cannot be added, replaced, or removed, so such changes cannot occur during traversal.</source>
          <target state="translated">요소 소스를 구조적으로 수정할 수 없음을 나타내는 특성 값. 즉, 요소를 추가, 교체 또는 제거 할 수 없으므로 순회 중에 이러한 변경이 발생할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fa188682ff2c5dbac61691da79bc2cd97eb32087" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that the element source cannot be structurally modified; that is, elements cannot be added, replaced, or removed, so such changes cannot occur during traversal. A Spliterator that does not report &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt; is expected to have a documented policy (for example throwing &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;) concerning structural interference detected during traversal.</source>
          <target state="translated">요소 소스를 구조적으로 수정할 수 없음을 나타내는 특성 값. 즉, 요소를 추가, 교체 또는 제거 할 수 없으므로 순회 중에 이러한 변경이 발생할 수 없습니다. &lt;code&gt;IMMUTABLE&lt;/code&gt; 또는 &lt;code&gt;CONCURRENT&lt;/code&gt; 를 보고하지 않는 스플리터 에는 순회 중 감지 된 구조적 간섭에 관한 문서화 된 정책 (예 : &lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; 발생&lt;/a&gt; ) 이있을 것으로 예상됩니다 .</target>
        </trans-unit>
        <trans-unit id="9414c9931906b6fe6228386fb14c7d70e986401c" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that the element source may be safely concurrently modified (allowing additions, replacements, and/or removals) by multiple threads without external synchronization.</source>
          <target state="translated">요소 소스가 외부 동기화없이 여러 스레드에 의해 안전하게 동시에 수정 (추가, 교체 및 / 또는 제거 허용) 될 수 있음을 나타내는 특성 값입니다.</target>
        </trans-unit>
        <trans-unit id="ac64860caac07766daea65ae06ea0b7cd87edd9b" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that the element source may be safely concurrently modified (allowing additions, replacements, and/or removals) by multiple threads without external synchronization. If so, the Spliterator is expected to have a documented policy concerning the impact of modifications during traversal.</source>
          <target state="translated">외부 동기화없이 여러 스레드에서 요소 소스를 안전하게 동시에 수정 (추가, 교체 및 / 또는 제거 할 수 있음)을 나타내는 특성 값입니다. 그렇다면 스플리터는 순회 중 수정의 영향에 관한 문서화 된 정책을 가지고 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="7294e03f0bb0cb3e77d6ae7a28fc067012bd192e" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that the source guarantees that encountered elements will not be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">소스가 발견 된 요소가 &lt;code&gt;null&lt;/code&gt; 이 아님을 보장 함을 나타내는 특성 값 입니다.</target>
        </trans-unit>
        <trans-unit id="84876701be5ee1769215e78fba2feadf7782ce4a" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that the source guarantees that encountered elements will not be &lt;code&gt;null&lt;/code&gt;. (This applies, for example, to most concurrent collections, queues, and maps.)</source>
          <target state="translated">발생 된 요소가 &lt;code&gt;null&lt;/code&gt; 이 아님을 소스가 보증 함을 나타내는 특성 값 . (예 : 대부분의 동시 수집, 대기열 및지도에 적용됩니다.)</target>
        </trans-unit>
        <trans-unit id="4104a6b88ef74bedc2fe7bad391ef6cbe52798d0" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that the value returned from &lt;code&gt;estimateSize()&lt;/code&gt; prior to traversal or splitting represents a finite size that, in the absence of structural source modification, represents an exact count of the number of elements that would be encountered by a complete traversal.</source>
          <target state="translated">순회 또는 분할 이전에 sizeSize &lt;code&gt;estimateSize()&lt;/code&gt; 에서 반환 된 값 이 구조적 소스 수정이없는 경우 전체 순회에서 발생할 수있는 요소 수의 정확한 수를 나타내는 유한 크기를 나타내는 특성 값 입니다.</target>
        </trans-unit>
        <trans-unit id="489d9673ca7da20e354361eafbb8b5c987db65c6" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that, for each pair of encountered elements &lt;code&gt;x, y&lt;/code&gt;, &lt;code&gt;!x.equals(y)&lt;/code&gt;.</source>
          <target state="translated">발생 요소들의 각 쌍에 대한 것을 나타내는 특성치, &lt;code&gt;x, y&lt;/code&gt; , &lt;code&gt;!x.equals(y)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc273c120f69a86de8aa8c0daa424100b8da1f7d" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that, for each pair of encountered elements &lt;code&gt;x, y&lt;/code&gt;, &lt;code&gt;!x.equals(y)&lt;/code&gt;. This applies for example, to a Spliterator based on a &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">발생 요소들의 각 쌍에 대한 것을 나타내는 특성치, &lt;code&gt;x, y&lt;/code&gt; , &lt;code&gt;!x.equals(y)&lt;/code&gt; . 이는 예를 들어&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fda4243e0e0c0967d73b2f664f0af156da9b7533" translate="yes" xml:space="preserve">
          <source>Characteristics indicating properties of a &lt;code&gt;Collector&lt;/code&gt;, which can be used to optimize reduction implementations.</source>
          <target state="translated">&lt;code&gt;Collector&lt;/code&gt; 의 특성을 나타내는 특성축소 구현을 최적화하는 데 사용할 수 .</target>
        </trans-unit>
        <trans-unit id="b6f59f08fd6d58c6725e21a9ec24e068148ec586" translate="yes" xml:space="preserve">
          <source>Characters</source>
          <target state="translated">Characters</target>
        </trans-unit>
        <trans-unit id="aaed69390a3e977d5faaea6060ab6af06246edf7" translate="yes" xml:space="preserve">
          <source>Characters and Glyphs</source>
          <target state="translated">문자 및 글리프</target>
        </trans-unit>
        <trans-unit id="29a85af6fdafa58c22da3f8cbe56f01701546c19" translate="yes" xml:space="preserve">
          <source>Characters are copied from this sequence into the destination character array &lt;code&gt;dst&lt;/code&gt;.</source>
          <target state="translated">문자는이 시퀀스에서 대상 문자 배열 &lt;code&gt;dst&lt;/code&gt; 로 복사 됩니다.</target>
        </trans-unit>
        <trans-unit id="dbc755f354a8260e3da63cec7887ecb096c4a939" translate="yes" xml:space="preserve">
          <source>Characters are copied from this sequence into the destination character array &lt;code&gt;dst&lt;/code&gt;. The first character to be copied is at index &lt;code&gt;srcBegin&lt;/code&gt;; the last character to be copied is at index &lt;code&gt;srcEnd-1&lt;/code&gt;. The total number of characters to be copied is &lt;code&gt;srcEnd-srcBegin&lt;/code&gt;. The characters are copied into the subarray of &lt;code&gt;dst&lt;/code&gt; starting at index &lt;code&gt;dstBegin&lt;/code&gt; and ending at index:</source>
          <target state="translated">문자는이 순서에서 대상 문자 배열 &lt;code&gt;dst&lt;/code&gt; 로 복사 됩니다. 복사 될 첫 문자는 index &lt;code&gt;srcBegin&lt;/code&gt; 입니다 . 복사 될 마지막 문자는 인덱스 &lt;code&gt;srcEnd-1&lt;/code&gt; 입니다. 복사 될 총 문자 수는 &lt;code&gt;srcEnd-srcBegin&lt;/code&gt; 입니다. 문자는 인덱스 &lt;code&gt;dstBegin&lt;/code&gt; 에서 시작하여 &lt;code&gt;dst&lt;/code&gt; 의 서브 어레이에 복사 됩니다. .</target>
        </trans-unit>
        <trans-unit id="9354d883896705d15434f66f5d8532c6228fcce9" translate="yes" xml:space="preserve">
          <source>Characters are written to the given &lt;a href=&quot;../io/printstream&quot;&gt;&lt;code&gt;PrintStream&lt;/code&gt;&lt;/a&gt; object and are therefore encoded using that object's charset.</source>
          <target state="translated">주어진 &lt;a href=&quot;../io/printstream&quot;&gt; &lt;code&gt;PrintStream&lt;/code&gt; 에&lt;/a&gt; 문자가 기록됩니다 객체에 되므로 해당 객체의 문자 집합을 사용하여 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="02b61c5746b232bb503c378643bb7a52119fef13" translate="yes" xml:space="preserve">
          <source>Characters following tab are aligned such that next decimal/tab/newline is at the tab location, very similar to RIGHT_TAB, just includes decimal as additional character to look for.</source>
          <target state="translated">탭 다음에 오는 문자는 다음 십진수 / 탭 / 줄 바꿈이 탭 위치에 있도록 정렬되며 RIGHT_TAB과 매우 유사하며 찾을 추가 문자로 십진수 만 포함합니다.</target>
        </trans-unit>
        <trans-unit id="8cb66b1f79c20069f8e8abce2538602efd9daf68" translate="yes" xml:space="preserve">
          <source>Characters following tab are positioned such that all following characters up to next tab/newline are centered around the tabs location.</source>
          <target state="translated">탭 뒤의 문자는 다음 탭 / 줄 바꿈까지의 모든 뒤 따르는 문자가 탭 위치를 중심으로 배치되도록 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="ff7f70688c37f66d59b0be58981c224659380a71" translate="yes" xml:space="preserve">
          <source>Characters following tab are positioned such that all following characters up to next tab/newline end at location.</source>
          <target state="translated">탭 뒤의 문자는 다음 탭 / 줄 바꿈까지의 모든 다음 문자가 위치에서 끝나도록 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="3672f146676b6243d4167b223ecb2a40e0bd3ecb" translate="yes" xml:space="preserve">
          <source>Characters in keys and elements can be represented in escape sequences similar to those used for character and string literals (see sections 3.3 and 3.10.6 of</source>
          <target state="translated">키 및 요소의 문자는 문자 및 문자열 리터럴에 사용 된 문자와 유사한 이스케이프 시퀀스로 표현 될 수 있습니다 (섹션 3.3 및 3.10.6 참조).</target>
        </trans-unit>
        <trans-unit id="1f0620d3b93671d6d38cac8bfe80bf22090d5ebe" translate="yes" xml:space="preserve">
          <source>Characters in the</source>
          <target state="translated">의 문자</target>
        </trans-unit>
        <trans-unit id="80d49440243d3b1f82c4f25a94ed6f891a77394b" translate="yes" xml:space="preserve">
          <source>Characters in the range &lt;code&gt;'\u0001'&lt;/code&gt; to &lt;code&gt;'\u007F'&lt;/code&gt; are represented by a single byte.</source>
          <target state="translated">&lt;code&gt;'\u0001'&lt;/code&gt; 에서 &lt;code&gt;'\u007F'&lt;/code&gt; 범위 의 문자 는 단일 바이트로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="85d42f6d319e1d6ebdc152ade024f2c07a454b6d" translate="yes" xml:space="preserve">
          <source>Characters in the range &lt;code&gt;'\u0800'&lt;/code&gt; to &lt;code&gt;'\uFFFF'&lt;/code&gt; are represented by three bytes.</source>
          <target state="translated">&lt;code&gt;'\u0800'&lt;/code&gt; ~ &lt;code&gt;'\uFFFF'&lt;/code&gt; 범위 의 문자는 3 바이트로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="02171ce14aa6f44955e09179662e7608383f9326" translate="yes" xml:space="preserve">
          <source>Characters less than &lt;code&gt;\u0020&lt;/code&gt; and characters greater than &lt;code&gt;\u007E&lt;/code&gt; in property keys or values are written as &lt;code&gt;\u&lt;/code&gt;</source>
          <target state="translated">보다 문자 &lt;code&gt;\u0020&lt;/code&gt; 과보다 큰 문자 &lt;code&gt;\u007E&lt;/code&gt; 속성 키 또는 값은로 기록된다 &lt;code&gt;\u&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2dcff6aac66c719bc4af7e1a6c2ad257f7cfe164" translate="yes" xml:space="preserve">
          <source>Characters not in Latin-1 in the comments are written as &lt;code&gt;\u&lt;/code&gt;</source>
          <target state="translated">주석에 라틴 -1이 아닌 문자는 다음과 같이 작성됩니다. &lt;code&gt;\u&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7081da46fa152b3710e044fdf730673e2c5b73a" translate="yes" xml:space="preserve">
          <source>Characters of the &lt;code&gt;char&lt;/code&gt; array &lt;code&gt;str&lt;/code&gt;, starting at index &lt;code&gt;offset&lt;/code&gt;, are appended, in order, to the contents of this sequence. The length of this sequence increases by the value of &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="translated">인덱스 &lt;code&gt;offset&lt;/code&gt; 에서 시작 하는 &lt;code&gt;char&lt;/code&gt; 배열 &lt;code&gt;str&lt;/code&gt; 의 문자 는이 시퀀스의 내용에 순서대로 추가됩니다. 이 순서의 길이는 &lt;code&gt;len&lt;/code&gt; 값만큼 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="c83b8f1869865c515af01f63d9e14a4f124d2610" translate="yes" xml:space="preserve">
          <source>Characters of the argument &lt;code&gt;s&lt;/code&gt;, starting at index &lt;code&gt;start&lt;/code&gt;, are appended, in order, to the contents of this sequence up to the (exclusive) index &lt;code&gt;end&lt;/code&gt;. The length of this sequence is increased by the value of &lt;code&gt;end - start&lt;/code&gt;.</source>
          <target state="translated">index &lt;code&gt;start&lt;/code&gt; 에서 시작 하는 인수 &lt;code&gt;s&lt;/code&gt; 의 문자는 이 순서의 내용에 (배타적) index &lt;code&gt;end&lt;/code&gt; 까지 순서대로 추가됩니다 . 이 시퀀스의 길이는 &lt;code&gt;end - start&lt;/code&gt; 값으로 증가 합니다 .</target>
        </trans-unit>
        <trans-unit id="522c2cae2e3928825702b5cc9c812d0488fe6cae" translate="yes" xml:space="preserve">
          <source>Characters with accents or other adornments can be encoded in several different ways in Unicode. For example, take the character A-acute. In Unicode, this can be encoded as a single character (the &quot;composed&quot; form):</source>
          <target state="translated">악센트 또는 기타 장식이있는 문자는 여러 가지 방식으로 유니 코드로 인코딩 될 수 있습니다. 예를 들어 A-acute 문자를 사용하십시오. 유니 코드에서 이것은 단일 문자 ( &quot;구성된&quot;형식)로 인코딩 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="805b8364dd741b70184f3241017dba0068056c09" translate="yes" xml:space="preserve">
          <source>Charset</source>
          <target state="translated">Charset</target>
        </trans-unit>
        <trans-unit id="9389dacdf9fed5a879e79f03f32c21485ca39a20" translate="yes" xml:space="preserve">
          <source>Charset names</source>
          <target state="translated">문자셋 이름</target>
        </trans-unit>
        <trans-unit id="16dd215c19dead6f1ea1f3ee099eea1a1b40968a" translate="yes" xml:space="preserve">
          <source>Charset service-provider class.</source>
          <target state="translated">문자셋 서비스 제공자 클래스.</target>
        </trans-unit>
        <trans-unit id="dcee137707d5f153490bc73043d327ab1c509db7" translate="yes" xml:space="preserve">
          <source>Charset.aliases()</source>
          <target state="translated">Charset.aliases()</target>
        </trans-unit>
        <trans-unit id="5e150d5eeedac63520fbc8a1fe5e2267a8b088fc" translate="yes" xml:space="preserve">
          <source>Charset.availableCharsets()</source>
          <target state="translated">Charset.availableCharsets()</target>
        </trans-unit>
        <trans-unit id="cd00d8d060c86dcaf139f70f3f8ee1388be0cb78" translate="yes" xml:space="preserve">
          <source>Charset.canEncode()</source>
          <target state="translated">Charset.canEncode()</target>
        </trans-unit>
        <trans-unit id="9485e33832ca721fb1b2617d2731a199a22f161d" translate="yes" xml:space="preserve">
          <source>Charset.compareTo()</source>
          <target state="translated">Charset.compareTo()</target>
        </trans-unit>
        <trans-unit id="6a8e063f846bada0188141af9abca7466e1e49b7" translate="yes" xml:space="preserve">
          <source>Charset.contains()</source>
          <target state="translated">Charset.contains()</target>
        </trans-unit>
        <trans-unit id="073b9b578b21c32f4ce1edb9886d8e3019e0febf" translate="yes" xml:space="preserve">
          <source>Charset.decode()</source>
          <target state="translated">Charset.decode()</target>
        </trans-unit>
        <trans-unit id="c7408a9c93312a5d63301f1dd65932f96c08e6a2" translate="yes" xml:space="preserve">
          <source>Charset.defaultCharset()</source>
          <target state="translated">Charset.defaultCharset()</target>
        </trans-unit>
        <trans-unit id="f62858d493ad3dfdc9cad3536a8bbfa99d452e1b" translate="yes" xml:space="preserve">
          <source>Charset.displayName()</source>
          <target state="translated">Charset.displayName()</target>
        </trans-unit>
        <trans-unit id="b50d88c0e3f66ddcb5123e30a7749487cf06abf5" translate="yes" xml:space="preserve">
          <source>Charset.encode()</source>
          <target state="translated">Charset.encode()</target>
        </trans-unit>
        <trans-unit id="f430f68f1c32bca451900641936596ed831822ba" translate="yes" xml:space="preserve">
          <source>Charset.equals()</source>
          <target state="translated">Charset.equals()</target>
        </trans-unit>
        <trans-unit id="b64faa012d6e565c455d7a8cf08722d68463af7e" translate="yes" xml:space="preserve">
          <source>Charset.forName()</source>
          <target state="translated">Charset.forName()</target>
        </trans-unit>
        <trans-unit id="b5b45fa2666c3f6743bb545b641dd175e5edf085" translate="yes" xml:space="preserve">
          <source>Charset.hashCode()</source>
          <target state="translated">Charset.hashCode()</target>
        </trans-unit>
        <trans-unit id="10335333fc87c00b473224c67500522086d8918e" translate="yes" xml:space="preserve">
          <source>Charset.isRegistered()</source>
          <target state="translated">Charset.isRegistered()</target>
        </trans-unit>
        <trans-unit id="d3c2ae17c346d4d1f12b629ddb9b391a03f71b90" translate="yes" xml:space="preserve">
          <source>Charset.isSupported()</source>
          <target state="translated">Charset.isSupported()</target>
        </trans-unit>
        <trans-unit id="7b54e2ea0bcf54ad0c079c9ede5bd122ea49518d" translate="yes" xml:space="preserve">
          <source>Charset.name()</source>
          <target state="translated">Charset.name()</target>
        </trans-unit>
        <trans-unit id="e35be5e27f060e5df4b81997f3b2fc9f76e0a643" translate="yes" xml:space="preserve">
          <source>Charset.newDecoder()</source>
          <target state="translated">Charset.newDecoder()</target>
        </trans-unit>
        <trans-unit id="4249e4d0ec231c46d2f1b685dc91aba780b525fe" translate="yes" xml:space="preserve">
          <source>Charset.newEncoder()</source>
          <target state="translated">Charset.newEncoder()</target>
        </trans-unit>
        <trans-unit id="96b4183084eb38b82c8ded25f5ec70540213129e" translate="yes" xml:space="preserve">
          <source>Charset.toString()</source>
          <target state="translated">Charset.toString()</target>
        </trans-unit>
        <trans-unit id="171cfe7cd3ff226babbec57d4c9c24bdef5a534e" translate="yes" xml:space="preserve">
          <source>CharsetDecoder</source>
          <target state="translated">CharsetDecoder</target>
        </trans-unit>
        <trans-unit id="2dc8a39e9a3bd9429f444a472c003917599df31f" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.averageCharsPerByte()</source>
          <target state="translated">CharsetDecoder.averageCharsPerByte()</target>
        </trans-unit>
        <trans-unit id="2650f32d309d9734dd00a2091d548f2d775e6edb" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.charset()</source>
          <target state="translated">CharsetDecoder.charset()</target>
        </trans-unit>
        <trans-unit id="dd88dd8304caaeacde200bc44fff938670f9e735" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.decode()</source>
          <target state="translated">CharsetDecoder.decode()</target>
        </trans-unit>
        <trans-unit id="9783abaea4e9bb2b6fea7b386939bca9766cfa0e" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.decodeLoop()</source>
          <target state="translated">CharsetDecoder.decodeLoop()</target>
        </trans-unit>
        <trans-unit id="eb121a4d768c9c8ff1358b1c4a7c0e568927d623" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.detectedCharset()</source>
          <target state="translated">CharsetDecoder.detectedCharset()</target>
        </trans-unit>
        <trans-unit id="054ffa4778f60a7aa7f2f0636d7b502dcac0b6a4" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.flush()</source>
          <target state="translated">CharsetDecoder.flush()</target>
        </trans-unit>
        <trans-unit id="ee417fd98de78920157a083c41beed90f4e0195a" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.implFlush()</source>
          <target state="translated">CharsetDecoder.implFlush()</target>
        </trans-unit>
        <trans-unit id="417fc5e25feb5eb759395ffdb81226757f14d7d4" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.implOnMalformedInput()</source>
          <target state="translated">CharsetDecoder.implOnMalformedInput()</target>
        </trans-unit>
        <trans-unit id="e191f87e1bf17b151b3d4fa2bf035137fd12aa82" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.implOnUnmappableCharacter()</source>
          <target state="translated">CharsetDecoder.implOnUnmappableCharacter()</target>
        </trans-unit>
        <trans-unit id="ac4fea4ff06bb48969c7c5fc0f3582db2a728499" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.implReplaceWith()</source>
          <target state="translated">CharsetDecoder.implReplaceWith()</target>
        </trans-unit>
        <trans-unit id="717171677a81b2c980c57c8835262fe9b690a8d4" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.implReset()</source>
          <target state="translated">CharsetDecoder.implReset()</target>
        </trans-unit>
        <trans-unit id="e71e523d7e95911c5e63dd19a0ddbfa76b305fcb" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.isAutoDetecting()</source>
          <target state="translated">CharsetDecoder.isAutoDetecting()</target>
        </trans-unit>
        <trans-unit id="7ca2bdb3e43a31168f353b90c295ae0cda5e9478" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.isCharsetDetected()</source>
          <target state="translated">CharsetDecoder.isCharsetDetected()</target>
        </trans-unit>
        <trans-unit id="6d89a2d0c9b87b1ef3421a19718ce7aefde5f295" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.malformedInputAction()</source>
          <target state="translated">CharsetDecoder.malformedInputAction()</target>
        </trans-unit>
        <trans-unit id="b8001396b2655bcdbb34a54c91893789a8a5252f" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.maxCharsPerByte()</source>
          <target state="translated">CharsetDecoder.maxCharsPerByte()</target>
        </trans-unit>
        <trans-unit id="ca86cc2190b0e8a35759fcf1c059b5e446ababc7" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.onMalformedInput()</source>
          <target state="translated">CharsetDecoder.onMalformedInput()</target>
        </trans-unit>
        <trans-unit id="54661957e4019c86f0a61e85ed42813559a1b490" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.onUnmappableCharacter()</source>
          <target state="translated">CharsetDecoder.onUnmappableCharacter()</target>
        </trans-unit>
        <trans-unit id="2791137f6f7472ec02e5a4648f8ed6983be65df5" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.replaceWith()</source>
          <target state="translated">CharsetDecoder.replaceWith()</target>
        </trans-unit>
        <trans-unit id="24b7d83ad627adbbb00db643cc0b7e85869e9bf8" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.replacement()</source>
          <target state="translated">CharsetDecoder.replacement()</target>
        </trans-unit>
        <trans-unit id="25f7b88cb7cda1a6c6e22418b2d6b5e1eb0c509d" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.reset()</source>
          <target state="translated">CharsetDecoder.reset()</target>
        </trans-unit>
        <trans-unit id="590c06385012ccdc153034b1066ef1ad3d89babb" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.unmappableCharacterAction()</source>
          <target state="translated">CharsetDecoder.unmappableCharacterAction()</target>
        </trans-unit>
        <trans-unit id="fbf9afb19862f107ac41c32517866a04e9b99f37" translate="yes" xml:space="preserve">
          <source>CharsetEncoder</source>
          <target state="translated">CharsetEncoder</target>
        </trans-unit>
        <trans-unit id="025f0fc2440998dab5106ed978dbc5f823de9d25" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.averageBytesPerChar()</source>
          <target state="translated">CharsetEncoder.averageBytesPerChar()</target>
        </trans-unit>
        <trans-unit id="eacf5b988b9e968d247ea67c7d81d9095e6ed940" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.canEncode()</source>
          <target state="translated">CharsetEncoder.canEncode()</target>
        </trans-unit>
        <trans-unit id="5f802bc778f8a36ced284eab7b4afc195ae6c150" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.charset()</source>
          <target state="translated">CharsetEncoder.charset()</target>
        </trans-unit>
        <trans-unit id="1dce37be83a96a6b2995382d42d06152bacf2dac" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.encode()</source>
          <target state="translated">CharsetEncoder.encode()</target>
        </trans-unit>
        <trans-unit id="0158a4d2257dbfc390770ae1fb8071841b8f0cb3" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.encodeLoop()</source>
          <target state="translated">CharsetEncoder.encodeLoop()</target>
        </trans-unit>
        <trans-unit id="7c0a62eb28d41288941cc02caa8a33cc9acccdf4" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.flush()</source>
          <target state="translated">CharsetEncoder.flush()</target>
        </trans-unit>
        <trans-unit id="14570a50cb011fe40570b879349fab5852caa061" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.implFlush()</source>
          <target state="translated">CharsetEncoder.implFlush()</target>
        </trans-unit>
        <trans-unit id="f71b895d9e37f9e99b88cd827110f7948ce33f98" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.implOnMalformedInput()</source>
          <target state="translated">CharsetEncoder.implOnMalformedInput()</target>
        </trans-unit>
        <trans-unit id="c6a3d2f192c4ef663e5ff3f9e083cbc39f4094db" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.implOnUnmappableCharacter()</source>
          <target state="translated">CharsetEncoder.implOnUnmappableCharacter()</target>
        </trans-unit>
        <trans-unit id="5b312f3cc27a0881f52561b8aeb6cdde6b23df6e" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.implReplaceWith()</source>
          <target state="translated">CharsetEncoder.implReplaceWith()</target>
        </trans-unit>
        <trans-unit id="4640dccc81ba1926b5b207ba520f9017dda40aa7" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.implReset()</source>
          <target state="translated">CharsetEncoder.implReset()</target>
        </trans-unit>
        <trans-unit id="e5a66cd69d422e495e1c30ce9f141cb543d3c90c" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.isLegalReplacement()</source>
          <target state="translated">CharsetEncoder.isLegalReplacement()</target>
        </trans-unit>
        <trans-unit id="45e59e7564acf78eb5553e13949b9cacefa95d64" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.malformedInputAction()</source>
          <target state="translated">CharsetEncoder.malformedInputAction()</target>
        </trans-unit>
        <trans-unit id="6dbb05a47bbdd92b90ebfd6b12b78cc4afdd4963" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.maxBytesPerChar()</source>
          <target state="translated">CharsetEncoder.maxBytesPerChar()</target>
        </trans-unit>
        <trans-unit id="1018ee0f8e5884ee0e8462b5851afb44c434cb45" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.onMalformedInput()</source>
          <target state="translated">CharsetEncoder.onMalformedInput()</target>
        </trans-unit>
        <trans-unit id="502791984ce02cace28ee3eeca726e8bae9d25e8" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.onUnmappableCharacter()</source>
          <target state="translated">CharsetEncoder.onUnmappableCharacter()</target>
        </trans-unit>
        <trans-unit id="1f295ff924b4f1d10a084ec8bf688d719e69b014" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.replaceWith()</source>
          <target state="translated">CharsetEncoder.replaceWith()</target>
        </trans-unit>
        <trans-unit id="ed1b3c0a0ed9be0c4b94f79a4db43fa4ed88404d" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.replacement()</source>
          <target state="translated">CharsetEncoder.replacement()</target>
        </trans-unit>
        <trans-unit id="49d6cb0f69eaab699844913bc1421cee9cfa0a09" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.reset()</source>
          <target state="translated">CharsetEncoder.reset()</target>
        </trans-unit>
        <trans-unit id="3004b3d26bb054eb5839aeff1f48591e13b0d14f" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.unmappableCharacterAction()</source>
          <target state="translated">CharsetEncoder.unmappableCharacterAction()</target>
        </trans-unit>
        <trans-unit id="221504020e31b8568bf3e537e988ae4235d51eab" translate="yes" xml:space="preserve">
          <source>CharsetProvider</source>
          <target state="translated">CharsetProvider</target>
        </trans-unit>
        <trans-unit id="b9f786110cb125aa3ecf237ae979616c9070580e" translate="yes" xml:space="preserve">
          <source>CharsetProvider.charsetForName()</source>
          <target state="translated">CharsetProvider.charsetForName()</target>
        </trans-unit>
        <trans-unit id="3934724ac7fb002960fea99b78f00423428cdab8" translate="yes" xml:space="preserve">
          <source>CharsetProvider.charsets()</source>
          <target state="translated">CharsetProvider.charsets()</target>
        </trans-unit>
        <trans-unit id="590f305e155e62f9cbb24456a476cfbf994fc471" translate="yes" xml:space="preserve">
          <source>Charsets are named by strings composed of the following characters:</source>
          <target state="translated">문자 세트는 다음 문자로 구성된 문자열로 이름이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="c9ed602df25b8efb956d422d140b138184022247" translate="yes" xml:space="preserve">
          <source>Charsets are ordered by their canonical names, without regard to case.</source>
          <target state="translated">문자 세트는 대소 문자와 상관없이 정식 이름으로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="c5938f92f653a1f65deea29a5af7ecab01efd6e1" translate="yes" xml:space="preserve">
          <source>Chart showing symbol, location, localized, and meaning.</source>
          <target state="translated">기호, 위치, 현지화 및 의미를 보여주는 차트.</target>
        </trans-unit>
        <trans-unit id="b37784ce0e237e99bad643dcc8a9206e65fd31f5" translate="yes" xml:space="preserve">
          <source>Chart shows pattern letters, date/time component, presentation, and examples.</source>
          <target state="translated">차트는 패턴 문자, 날짜 / 시간 구성 요소, 프레젠테이션 및 예제를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="4b77c11d175b543676c8f308c4bf08c66f9e7bc1" translate="yes" xml:space="preserve">
          <source>Check a parser feature flag.</source>
          <target state="translated">파서 기능 플래그를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="cf24bbeae901ad17a90519ca858493458ebc86cb" translate="yes" xml:space="preserve">
          <source>Check and see if this ProtectionDomain implies the permissions expressed in the Permission object.</source>
          <target state="translated">이 ProtectionDomain이 Permission 객체에 표현 된 권한을 암시하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c29e22e8113dbf826d73d3a094905da5e875e43a" translate="yes" xml:space="preserve">
          <source>Check box menu items currently support only item events.</source>
          <target state="translated">확인란 메뉴 항목은 현재 항목 이벤트 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="128a7e3d273cf90beffdd164f286fdd38746e2c7" translate="yes" xml:space="preserve">
          <source>Check if a bean can be viewed as a given target type.</source>
          <target state="translated">빈이 주어진 대상 유형으로 볼 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="30942a5df4db75a7d4617e8c675ddf10908cc29a" translate="yes" xml:space="preserve">
          <source>Check if a bean can be viewed as a given target type. The result will be true if the Beans.getInstanceof method can be used on the given bean to obtain an object that represents the specified targetType type view.</source>
          <target state="translated">주어진 대상 유형으로 Bean을 볼 수 있는지 확인하십시오. 지정된 bean에서 Beans.getInstanceof 메소드를 사용하여 지정된 targetType 유형보기를 나타내는 오브젝트를 얻을 수있는 경우 결과는 true입니다.</target>
        </trans-unit>
        <trans-unit id="e3811d68f7d3956818ebdd8aa7d9072b9bcad5a0" translate="yes" xml:space="preserve">
          <source>Check if a given log record should be published.</source>
          <target state="translated">주어진 로그 레코드를 공개해야하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="bc5e389f8eb0ec5e089be9147159ac297a3a63de" translate="yes" xml:space="preserve">
          <source>Check if a message of the given level would actually be logged by this logger.</source>
          <target state="translated">주어진 수준의 메시지가 실제로이 로거에 의해 기록되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="69706016f50d80ba711ec3eb48764fc0a8c88871" translate="yes" xml:space="preserve">
          <source>Check if a message of the given level would actually be logged by this logger. This check is based on the Loggers effective level, which may be inherited from its parent.</source>
          <target state="translated">주어진 레벨의 메시지가이 로거에 의해 실제로 기록되는지 점검하십시오. 이 점검은 로거 유효 레벨을 기반으로하며 이는 상위에서 상속 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c75e7d4f909e873ebf963d97ef887cf1552016ad" translate="yes" xml:space="preserve">
          <source>Check if empty</source>
          <target state="translated">비어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="57a78c338317040d1c4dfbd2fee5fa6a44b772ea" translate="yes" xml:space="preserve">
          <source>Check if setting a parameter to a specific value is supported.</source>
          <target state="translated">특정 값에 대한 매개 변수 설정이 지원되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e4c4762a8e875a8943f62c2536b7040de68ff8f5" translate="yes" xml:space="preserve">
          <source>Check if the provider has registered a subclass of &lt;code&gt;CipherSpi&lt;/code&gt; for the specified &quot;</source>
          <target state="translated">제공자가 &lt;code&gt;CipherSpi&lt;/code&gt; 의 서브 클래스를 등록했는지 확인하십시오. 지정된 &quot;에 대해</target>
        </trans-unit>
        <trans-unit id="089d13aa6531548823209d421cb5337034717874" translate="yes" xml:space="preserve">
          <source>Check if the provider has registered a subclass of &lt;code&gt;CipherSpi&lt;/code&gt; for the sub-transformation &quot;</source>
          <target state="translated">제공자가 &lt;code&gt;CipherSpi&lt;/code&gt; 의 서브 클래스를 등록했는지 확인하십시오. 하위 변환에 대해</target>
        </trans-unit>
        <trans-unit id="ff886570f63bbe19dfd997aa4174445aa4c4e8ba" translate="yes" xml:space="preserve">
          <source>Check if the resulting date would be invalid</source>
          <target state="translated">결과 날짜가 유효하지 않은지 확인</target>
        </trans-unit>
        <trans-unit id="8e0ae2cea05e46e47dec2268f824a7d310ab6264" translate="yes" xml:space="preserve">
          <source>Check if the returned key pair generator is an instance of DSAKeyPairGenerator before casting the result to a DSAKeyPairGenerator and calling one of the &lt;code&gt;initialize&lt;/code&gt; methods from this DSAKeyPairGenerator interface.</source>
          <target state="translated">결과를 DSAKeyPairGenerator로 캐스팅 하고이 DSAKeyPairGenerator 인터페이스에서 &lt;code&gt;initialize&lt;/code&gt; 메서드 중 하나를 호출하기 전에 반환 된 키 쌍 생성기가 DSAKeyPairGenerator의 인스턴스인지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="bf419fb828f07684a4976fae3d0b79ab8377f533" translate="yes" xml:space="preserve">
          <source>Check if the specified &lt;code&gt;Subject&lt;/code&gt; is implied by this object.</source>
          <target state="translated">지정된 &lt;code&gt;Subject&lt;/code&gt; 객체에 의해 암시 되는지 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="3f37f32695ce2c7627630c7bf3fb291d36c582d0" translate="yes" xml:space="preserve">
          <source>Check if there are any listeners for a specific property, including those registered on all properties.</source>
          <target state="translated">모든 속성에 등록 된 것을 포함하여 특정 속성에 대한 리스너가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e8a81abc788036001a665137cdf7d3fc3d9d5131" translate="yes" xml:space="preserve">
          <source>Check if there are any listeners for a specific property, including those registered on all properties. If &lt;code&gt;propertyName&lt;/code&gt; is null, only check for listeners registered on all properties.</source>
          <target state="translated">모든 속성에 등록 된 리스너를 포함하여 특정 속성에 대한 리스너가 있는지 확인하십시오. &lt;code&gt;propertyName&lt;/code&gt; 인 경우 null의 경우, 단지 모든 프로퍼티에 등록 된 리스너을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e55c1f502a4177e4686723d65506551103c1bae2" translate="yes" xml:space="preserve">
          <source>Check if there are more events.</source>
          <target state="translated">더 많은 이벤트가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="80b604477ac2817e28b8b2266a187f5c328d09de" translate="yes" xml:space="preserve">
          <source>Check if there are more events. Returns true if there are more events and false otherwise.</source>
          <target state="translated">더 많은 이벤트가 있는지 확인하십시오. 더 많은 이벤트가 있으면 true를 반환하고 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0c33ee855e755187b11d2ca03ad012e5e748dc3a" translate="yes" xml:space="preserve">
          <source>Check if there is a critical extension that is not supported.</source>
          <target state="translated">지원되지 않는 중요한 확장명이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d15559f306688d60f1415fe98e70dfb1267f7fa7" translate="yes" xml:space="preserve">
          <source>Check if this &lt;code&gt;Handler&lt;/code&gt; would actually log a given &lt;code&gt;LogRecord&lt;/code&gt; into its internal buffer.</source>
          <target state="translated">이 &lt;code&gt;Handler&lt;/code&gt; 가 실제로 지정된 &lt;code&gt;LogRecord&lt;/code&gt; 를 기록 하는지 확인하십시오. 를 내부 버퍼에 .</target>
        </trans-unit>
        <trans-unit id="7e4c6367f7e2bf3e4dc4e18b85dd1f13daeaf615" translate="yes" xml:space="preserve">
          <source>Check if this &lt;code&gt;Handler&lt;/code&gt; would actually log a given &lt;code&gt;LogRecord&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Handler&lt;/code&gt; 가 실제로 지정된 &lt;code&gt;LogRecord&lt;/code&gt; 를 기록 하는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="7e66f1a6ae5cde23ca9552cda934894d1b8dc8ae" translate="yes" xml:space="preserve">
          <source>Check if this provider instance has been configured.</source>
          <target state="translated">이 제공자 인스턴스가 구성되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="abbba82ffe8ca89ebd31f39f537c5c5402497b33" translate="yes" xml:space="preserve">
          <source>Check that the current context is trusted to modify the logging configuration.</source>
          <target state="translated">로깅 구성을 수정하기 위해 현재 컨텍스트를 신뢰할 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="785c158c6c9ee30fc6e9264ae7cfbccf41560529" translate="yes" xml:space="preserve">
          <source>Check that the current context is trusted to modify the logging configuration. This requires LoggingPermission(&quot;control&quot;).</source>
          <target state="translated">현재 컨텍스트가 로깅 구성을 수정하도록 신뢰할 수 있는지 확인하십시오. 이를 위해서는 LoggingPermission ( &quot;control&quot;)이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="84c502d0c8d313043bc281b43eb057f26fe8df2a" translate="yes" xml:space="preserve">
          <source>Check that this method handle has variable arity with a &lt;a href=&quot;methodtype#lastParameterType()&quot;&gt;trailing parameter&lt;/a&gt; of some array type &lt;code&gt;A[]&lt;/code&gt;. If not, fail with a &lt;code&gt;WrongMethodTypeException&lt;/code&gt;.</source>
          <target state="translated">이 메소드 핸들 에 일부 배열 유형 &lt;code&gt;A[]&lt;/code&gt; 의 &lt;a href=&quot;methodtype#lastParameterType()&quot;&gt;후행 매개&lt;/a&gt; 변수가있는 가변 arity가 있는지 확인하십시오 . 그렇지 않은 경우 &lt;code&gt;WrongMethodTypeException&lt;/code&gt; 으로 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="6011c8939ae864942fb9c80b2ec0d0ec95d4226b" translate="yes" xml:space="preserve">
          <source>Check the class, array length, number of object references, depth, stream size, and other available filtering information.</source>
          <target state="translated">클래스, 배열 길이, 개체 참조 수, 깊이, 스트림 크기 및 기타 사용 가능한 필터링 정보를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7fb8b43a35469c6cd19e8a83a40f1edde44cca46" translate="yes" xml:space="preserve">
          <source>Check the class, array length, number of object references, depth, stream size, and other available filtering information. Implementations of this method check the contents of the object graph being created during deserialization. The filter returns &lt;a href=&quot;objectinputfilter.status#ALLOWED&quot;&gt;&lt;code&gt;Status.ALLOWED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;objectinputfilter.status#REJECTED&quot;&gt;&lt;code&gt;Status.REJECTED&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;objectinputfilter.status#UNDECIDED&quot;&gt;&lt;code&gt;Status.UNDECIDED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">클래스, 배열 길이, 개체 참조 수, 깊이, 스트림 크기 및 기타 사용 가능한 필터링 정보를 확인합니다. 이 메서드의 구현은 deserialization 중에 생성되는 개체 그래프의 내용을 확인합니다. 필터는 &lt;a href=&quot;objectinputfilter.status#ALLOWED&quot;&gt; &lt;code&gt;Status.ALLOWED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;objectinputfilter.status#REJECTED&quot;&gt; &lt;code&gt;Status.REJECTED&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;objectinputfilter.status#UNDECIDED&quot;&gt; &lt;code&gt;Status.UNDECIDED&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4cd8231877d2e1afa4f922920894f77c314a574f" translate="yes" xml:space="preserve">
          <source>Check the default cache for TGT and populate the &lt;code&gt;Subject&lt;/code&gt; with the principal and TGT. If the TGT is not available, do not prompt the user, instead fail the authentication.</source>
          <target state="translated">TGT의 기본 캐시를 확인하고 주체 및 TGT로 &lt;code&gt;Subject&lt;/code&gt; 를 채 웁니다 . TGT를 사용할 수없는 경우 사용자에게 메시지를 표시하지 않고 대신 인증에 실패합니다.</target>
        </trans-unit>
        <trans-unit id="99d426f62159b8c9d692638569622911ad80c6c8" translate="yes" xml:space="preserve">
          <source>Check the given string to see if it should trigger the html rendering logic in a non-text component that supports html rendering.</source>
          <target state="translated">주어진 문자열을 확인하여 html 렌더링을 지원하는 텍스트가 아닌 구성 요소에서 html 렌더링 논리를 트리거해야하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="509e0575b76e6caf1cb1aed151b1418f64b6df0d" translate="yes" xml:space="preserve">
          <source>Check the next XMLEvent without reading it from the stream.</source>
          <target state="translated">스트림에서 읽지 않고 다음 XMLEvent를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="08a362219e71d4c2e2ba1b82e7a01ef02afac69b" translate="yes" xml:space="preserve">
          <source>Check the next XMLEvent without reading it from the stream. Returns null if the stream is at EOF or has no more XMLEvents. A call to peek() will be equal to the next return of next().</source>
          <target state="translated">스트림에서 읽지 않고 다음 XMLEvent를 확인하십시오. 스트림이 EOF에 있거나 더 이상 XMLEvents가없는 경우 null을 반환합니다. peek ()에 대한 호출은 next ()의 다음 반환과 같습니다.</target>
        </trans-unit>
        <trans-unit id="39150934c3ba35b83126c21f13e8a7eb3909e518" translate="yes" xml:space="preserve">
          <source>Check to see that a glyph painter exists.</source>
          <target state="translated">글리프 페인터가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a7778a704b8e45e62e73875369dd5f5aa972bbba" translate="yes" xml:space="preserve">
          <source>Check to see that a glyph painter exists. If a painter doesn't exist, a default glyph painter will be installed.</source>
          <target state="translated">글리프 페인터가 있는지 확인하십시오. 페인터가 없으면 기본 글리프 페인터가 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="0daf36c2a15f9100173d7f93d6d7a48c4fba13c4" translate="yes" xml:space="preserve">
          <source>Check to see whether there is a conflict, that is, whether a value that has been changed in the rowset has also been changed in the data source</source>
          <target state="translated">충돌이 있는지, 즉 행 집합에서 변경된 값이 데이터 원본에서도 변경되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="05422dca40ce78eae16d85fa51ef9d831c68ea42" translate="yes" xml:space="preserve">
          <source>Check whether the policy has granted a Permission to a ProtectionDomain.</source>
          <target state="translated">정책이 ProtectionDomain에 대한 권한을 부여했는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="40f90a83022ab871789c6f0767dfbb6a76863a6c" translate="yes" xml:space="preserve">
          <source>CheckBox region.</source>
          <target state="translated">CheckBox 영역.</target>
        </trans-unit>
        <trans-unit id="624af8ef3c0f36fb22143240fd41d594c871a74f" translate="yes" xml:space="preserve">
          <source>CheckBox region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;CheckBox&lt;/code&gt;.</source>
          <target state="translated">CheckBox 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;CheckBox&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b5323c942ed5e6788be09dc71bf8cc5cfeccb8c" translate="yes" xml:space="preserve">
          <source>CheckBoxMenuItem region.</source>
          <target state="translated">CheckBoxMenuItem 영역.</target>
        </trans-unit>
        <trans-unit id="482851372bc251a9d50b5b9a41aeefbcd4a4146a" translate="yes" xml:space="preserve">
          <source>CheckBoxMenuItem region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;CheckBoxMenuItem&lt;/code&gt;.</source>
          <target state="translated">CheckBoxMenuItem 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;CheckBoxMenuItem&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d66c3d0758e71b315e012814dc35df62cfab9d2" translate="yes" xml:space="preserve">
          <source>Checkbox</source>
          <target state="translated">Checkbox</target>
        </trans-unit>
        <trans-unit id="54940a6f8a3e7cdd0fbdb101e263b494b3bbfd04" translate="yes" xml:space="preserve">
          <source>Checkbox.AccessibleAWTCheckbox</source>
          <target state="translated">Checkbox.AccessibleAWTCheckbox</target>
        </trans-unit>
        <trans-unit id="aa0c11e1623d0902a9c357cc354f67fbd42df713" translate="yes" xml:space="preserve">
          <source>CheckboxGroup</source>
          <target state="translated">CheckboxGroup</target>
        </trans-unit>
        <trans-unit id="5dd082a7a863ccb1148b4d8e40ef19049ffc1d81" translate="yes" xml:space="preserve">
          <source>CheckboxIcon implementation for OrganicCheckBoxUI</source>
          <target state="translated">OrganicCheckBoxUI에 대한 CheckboxIcon 구현</target>
        </trans-unit>
        <trans-unit id="046dad6f63ac202a3ec9d9b36c068d2b2780e1ec" translate="yes" xml:space="preserve">
          <source>CheckboxMenuItem</source>
          <target state="translated">CheckboxMenuItem</target>
        </trans-unit>
        <trans-unit id="da15c7770c281b63bb7abf39944acf32f8077306" translate="yes" xml:space="preserve">
          <source>CheckboxMenuItem.AccessibleAWTCheckboxMenuItem</source>
          <target state="translated">CheckboxMenuItem.AccessibleAWTCheckboxMenuItem</target>
        </trans-unit>
        <trans-unit id="69e34c70c4166433be76d5a456647df92d59c61b" translate="yes" xml:space="preserve">
          <source>CheckboxUI implementation for BasicCheckboxUI</source>
          <target state="translated">BasicCheckboxUI에 대한 CheckboxUI 구현</target>
        </trans-unit>
        <trans-unit id="eadd1a6b42b7b44531da36a5038a61d2be157b8f" translate="yes" xml:space="preserve">
          <source>CheckboxUI implementation for MetalCheckboxUI</source>
          <target state="translated">MetalCheckboxUI에 대한 CheckboxUI 구현</target>
        </trans-unit>
        <trans-unit id="ff6c65ef9ddf23943ec5317c6abbec54f2b52c27" translate="yes" xml:space="preserve">
          <source>Checked exception received by a thread when a timeout elapses before an asynchronous operation completes.</source>
          <target state="translated">비동기 작업이 완료되기 전에 시간 초과가 경과되면 스레드가 수신 한 예외를 확인했습니다.</target>
        </trans-unit>
        <trans-unit id="3929dbd3d6145ec0c9fc4731a5703b7d12a77710" translate="yes" xml:space="preserve">
          <source>Checked exception received by a thread when another thread closes the channel or the part of the channel upon which it is blocked in an I/O operation.</source>
          <target state="translated">다른 스레드가 채널 또는 I / O 조작에서 차단 된 채널의 일부를 닫을 때 스레드가 수신 한 예외를 점검했습니다.</target>
        </trans-unit>
        <trans-unit id="81f701f6fdb4057869748b41cf260ad065df0a22" translate="yes" xml:space="preserve">
          <source>Checked exception received by a thread when another thread interrupts it while it is blocked in an I/O operation upon a channel.</source>
          <target state="translated">채널에서 I / O 조작으로 차단되는 동안 다른 스레드가 인터럽트 할 때 스레드가 수신 한 예외 점검.</target>
        </trans-unit>
        <trans-unit id="5875cab04449b6921e8151312e29e6d0e7bfb4be" translate="yes" xml:space="preserve">
          <source>Checked exception received by a thread when another thread interrupts it while it is blocked in an I/O operation upon a channel. Before this exception is thrown the channel will have been closed and the interrupt status of the previously-blocked thread will have been set.</source>
          <target state="translated">채널에서 I / O 조작으로 차단되는 동안 다른 스레드가 인터럽트 할 때 스레드가 수신 한 예외 점검. 이 예외가 발생하기 전에 채널이 닫히고 이전에 차단 된 스레드의 인터럽트 상태가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="d4027b36d6b85feed45021f4275ea79d95ef6fe0" translate="yes" xml:space="preserve">
          <source>Checked exception received by a thread when another thread interrupts it while it is waiting to acquire a file lock.</source>
          <target state="translated">파일 잠금 획득을 기다리는 동안 다른 스레드가 인터럽트 할 때 스레드가 수신 한 예외를 점검했습니다.</target>
        </trans-unit>
        <trans-unit id="effa3ac879776952df840ed5992c6af8a746d3e3" translate="yes" xml:space="preserve">
          <source>Checked exception received by a thread when another thread interrupts it while it is waiting to acquire a file lock. Before this exception is thrown the interrupt status of the previously-blocked thread will have been set.</source>
          <target state="translated">파일 잠금 획득을 기다리는 동안 다른 스레드가 인터럽트 할 때 스레드가 수신 한 예외를 점검했습니다. 이 예외가 발생하기 전에 이전에 차단 된 스레드의 인터럽트 상태가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="f981ecf30effcb682756d51b0560e49881df5385" translate="yes" xml:space="preserve">
          <source>Checked exception thrown to indicate that a string could not be parsed as a URI reference.</source>
          <target state="translated">문자열을 URI 참조로 구문 분석 할 수 없음을 나타 내기 위해 예외를 점검했습니다.</target>
        </trans-unit>
        <trans-unit id="b0f17471db43a3fe8eec060a96a45aa8c9071c22" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when a character encoding or decoding error occurs.</source>
          <target state="translated">문자 인코딩 또는 디코딩 오류가 발생할 때 발생하는 확인 된 예외입니다.</target>
        </trans-unit>
        <trans-unit id="470a3e04a903b1a55671beec841a585f58350150" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when a file cannot be moved as an atomic file system operation.</source>
          <target state="translated">원자 적 파일 시스템 조작으로서 파일을 이동할 수없는 경우에 Throw 된 체크 예외입니다.</target>
        </trans-unit>
        <trans-unit id="83bf91b87442253aad1888e9a9dd1bf3a8f419fd" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when a file system loop, or cycle, is encountered.</source>
          <target state="translated">파일 시스템 루프 또는주기가 발생하면 확인 된 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="508d4e4576cc28471ae6cc72a274b46cbec45fa0" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when a file system operation fails because a directory is not empty.</source>
          <target state="translated">디렉토리가 비어 있지 않아 파일 시스템 조작이 실패 할 때 발생하는 점검 된 예외입니다.</target>
        </trans-unit>
        <trans-unit id="56b1e32835ed0c05a474ccb6c0869b8383a8c169" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when a file system operation fails because a file is not a symbolic link.</source>
          <target state="translated">파일이 기호 링크가 아니기 때문에 파일 시스템 조작이 실패 할 때 발생하는 점검 된 예외입니다.</target>
        </trans-unit>
        <trans-unit id="fb0a216572136d2ec85d338db3cfab22fd927365" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when a file system operation is denied, typically due to a file permission or other access check.</source>
          <target state="translated">일반적으로 파일 권한 또는 기타 액세스 확인으로 인해 파일 시스템 작업이 거부 될 때 발생하는 확인 된 예외입니다.</target>
        </trans-unit>
        <trans-unit id="54072c524538d9763592f36a07472a75c1ff1b35" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when a file system operation, intended for a directory, fails because the file is not a directory.</source>
          <target state="translated">파일이 디렉토리가 아니기 때문에 디렉토리 용 파일 시스템 조작이 실패 할 때 발생하는 점검 된 예외입니다.</target>
        </trans-unit>
        <trans-unit id="17d0316d0a2fda2120902f1de007cc39e3d94bb9" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when a lookup of &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; fails because the principal does not exist.</source>
          <target state="translated">&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; 을&lt;/a&gt; 조회 할 때 확인 된 예외가 발생했습니다.주체가 없기 때문에 실패 입니다.</target>
        </trans-unit>
        <trans-unit id="cec7a44ccbee208ece8555336b9ef693fa874ec1" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when an attempt is made to access a file that does not exist.</source>
          <target state="translated">존재하지 않는 파일에 액세스하려고 할 때 발생하는 확인 된 예외입니다.</target>
        </trans-unit>
        <trans-unit id="f5b2cb7a347815d7495161babaf8d1f94d4b17e7" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when an attempt is made to create a file or directory and a file of that name already exists.</source>
          <target state="translated">파일 또는 디렉토리를 작성하려고 시도하고 해당 이름의 파일이 이미 존재하는 경우 발생하는 점검 된 예외입니다.</target>
        </trans-unit>
        <trans-unit id="c0096009ce8ed2ac4c947a274e6d6044399bf706" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when an attempt is made to invoke or complete an I/O operation upon channel that is closed, or at least closed to that operation.</source>
          <target state="translated">채널이 닫히거나 적어도 해당 작업에 닫히면 I / O 작업을 호출하거나 완료하려고 시도 할 때 발생하는 검사 예외입니다.</target>
        </trans-unit>
        <trans-unit id="6993671ba9fa0ab6725c6904e84a75b1aeda2e90" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when an attempt is made to invoke or complete an I/O operation upon channel that is closed, or at least closed to that operation. That this exception is thrown does not necessarily imply that the channel is completely closed. A socket channel whose write half has been shut down, for example, may still be open for reading.</source>
          <target state="translated">채널이 닫히거나 적어도 해당 작업에 닫히면 I / O 작업을 호출하거나 완료하려고 시도 할 때 발생하는 검사 예외입니다. 이 예외가 발생했다고해서 반드시 채널이 완전히 닫 혔음을 의미하지는 않습니다. 예를 들어 쓰기 반이 종료 된 소켓 채널은 여전히 ​​읽기 위해 열려있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d9d22aa6d6a319c721a2b10afbef3b22568fc67" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when an input byte sequence is not legal for given charset, or an input character sequence is not a legal sixteen-bit Unicode sequence.</source>
          <target state="translated">입력 바이트 순서가 지정된 캐릭터 세트에 적합하지 않은 경우, 또는 입력 문자 순서가 16 비트의 유효한 Unicode 순서가 아닌 경우에 throw되는 체크 예외입니다.</target>
        </trans-unit>
        <trans-unit id="1c17fc2d8aab6dd4dfab8223a2b64c058ffb80fc" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when an input character (or byte) sequence is valid but cannot be mapped to an output byte (or character) sequence.</source>
          <target state="translated">입력 문자 (또는 바이트) 시퀀스가 ​​유효하지만 출력 바이트 (또는 문자) 시퀀스에 맵핑 될 수없는 경우 발생하는 점검 된 예외입니다.</target>
        </trans-unit>
        <trans-unit id="b1fa945ff3387d749a4fbfc54f988de8e99b2aec" translate="yes" xml:space="preserve">
          <source>CheckedInputStream</source>
          <target state="translated">CheckedInputStream</target>
        </trans-unit>
        <trans-unit id="3ba713638c26e087ee1d3f7f7ffcdc97c5bb6f12" translate="yes" xml:space="preserve">
          <source>CheckedInputStream.getChecksum()</source>
          <target state="translated">CheckedInputStream.getChecksum()</target>
        </trans-unit>
        <trans-unit id="2970e27624f09eacee793e19f0496f4570cde8b6" translate="yes" xml:space="preserve">
          <source>CheckedInputStream.read()</source>
          <target state="translated">CheckedInputStream.read()</target>
        </trans-unit>
        <trans-unit id="47e852a8011eed9c0b265591d3ad0c4013a5ffa1" translate="yes" xml:space="preserve">
          <source>CheckedInputStream.skip()</source>
          <target state="translated">CheckedInputStream.skip()</target>
        </trans-unit>
        <trans-unit id="cb9fc506ed77e5844ad7fdfb2fae00c33aeec12d" translate="yes" xml:space="preserve">
          <source>CheckedOutputStream</source>
          <target state="translated">CheckedOutputStream</target>
        </trans-unit>
        <trans-unit id="69b72ec69e845a6dfc6ea42d212238ed668219e4" translate="yes" xml:space="preserve">
          <source>CheckedOutputStream.getChecksum()</source>
          <target state="translated">CheckedOutputStream.getChecksum()</target>
        </trans-unit>
        <trans-unit id="31882f385190b61162179220d20c8740c10d1e8f" translate="yes" xml:space="preserve">
          <source>CheckedOutputStream.write()</source>
          <target state="translated">CheckedOutputStream.write()</target>
        </trans-unit>
        <trans-unit id="5a47fea39b86b73d6f439bf1c2e48ea5d813c1e6" translate="yes" xml:space="preserve">
          <source>Checks for each role if it exists and is readable according to the relation type.</source>
          <target state="translated">각 역할이 존재하고 관계 유형에 따라 읽을 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f440957e4f7acb72a178a5a81589a3cd1fd7c441" translate="yes" xml:space="preserve">
          <source>Checks if &lt;code&gt;f&lt;/code&gt; represents a real directory or file as opposed to a special folder such as &lt;code&gt;&quot;Desktop&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 가 &lt;code&gt;&quot;Desktop&quot;&lt;/code&gt; 과 같은 특수 폴더가 아닌 실제 디렉토리 또는 파일을 나타내는 지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="41bc35c34c88a2ec5ec6b0783985642d3c0ae25f" translate="yes" xml:space="preserve">
          <source>Checks if &lt;code&gt;f&lt;/code&gt; represents a real directory or file as opposed to a special folder such as &lt;code&gt;&quot;Desktop&quot;&lt;/code&gt;. Used by UI classes to decide if a folder is selectable when doing directory choosing.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 가 &lt;code&gt;&quot;Desktop&quot;&lt;/code&gt; 과 같은 특수 폴더가 아닌 실제 디렉토리 또는 파일을 나타내는 지 확인합니다 . UI 클래스에서 디렉토리를 선택할 때 폴더를 선택할 수 있는지 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="02717c948d7cbb187d0809bef2a4148ea58a7589" translate="yes" xml:space="preserve">
          <source>Checks if a field is set.</source>
          <target state="translated">필드가 설정되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b253f028a0ef07399dd831b91a2c59772e245b09" translate="yes" xml:space="preserve">
          <source>Checks if a field is set. A field of a duration object may or may not be present. This method can be used to test if a field is present.</source>
          <target state="translated">필드가 설정되었는지 확인합니다. 기간 개체의 필드가있을 수도 있고 없을 수도 있습니다. 이 방법은 필드가 있는지 테스트하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05e5b891dcff559b666e8468b41e97a2c0a24170" translate="yes" xml:space="preserve">
          <source>Checks if a message of the given level would be logged by this logger.</source>
          <target state="translated">이 로거가 지정된 수준의 메시지를 기록하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f91ca8b561f737a22a38bab01782860cc4219be2" translate="yes" xml:space="preserve">
          <source>Checks if all the supported units of this period are zero.</source>
          <target state="translated">이 기간 동안 지원되는 모든 단위가 0인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="dbb2e20012265c9bb6bcc99aac850d5c9ce67e05" translate="yes" xml:space="preserve">
          <source>Checks if all three units of this period are zero.</source>
          <target state="translated">이 기간의 세 단위가 모두 0인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7f31de8d2c0483e4b841555a618e7394b4148969" translate="yes" xml:space="preserve">
          <source>Checks if all values in the range fit in an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">범위의 모든 값이 &lt;code&gt;int&lt;/code&gt; 에 맞는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="858eb68d9fafefc9f2972d83cd7768e84ef25d1f" translate="yes" xml:space="preserve">
          <source>Checks if any of the supported units of this period are negative.</source>
          <target state="translated">이 기간 동안 지원되는 단위가 음수인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="76e3e4203f8e50ea3c0514d567fc1993b9dac91b" translate="yes" xml:space="preserve">
          <source>Checks if any of the three units of this period are negative.</source>
          <target state="translated">이 기간의 세 단위 중 하나가 음수인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="dcc8a5cde04df1e8db1a1a1fa57205d442aba36c" translate="yes" xml:space="preserve">
          <source>Checks if explicit policy is required.</source>
          <target state="translated">명시적인 정책이 필요한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="eec50496be54abb45927c8a4b8d7713911e06cec" translate="yes" xml:space="preserve">
          <source>Checks if explicit policy is required. If this flag is true, an acceptable policy needs to be explicitly identified in every certificate. By default, the ExplicitPolicyRequired flag is false.</source>
          <target state="translated">명시 적 정책이 필요한지 확인합니다. 이 플래그가 true이면 모든 인증서에서 허용 가능한 정책을 명시 적으로 식별해야합니다. 기본적으로 ExplicitPolicyRequired 플래그는 false입니다.</target>
        </trans-unit>
        <trans-unit id="0e3bee1e17378a52f3de8e141fb60b0e1ae8ceab" translate="yes" xml:space="preserve">
          <source>Checks if given Role can be read in a relation of the given type.</source>
          <target state="translated">주어진 유형의 관계에서 주어진 역할을 읽을 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2a32742a0b30cb54de80ef9f2cfc850cd0bb8618" translate="yes" xml:space="preserve">
          <source>Checks if given Role can be set in a relation of given type.</source>
          <target state="translated">주어진 역할을 주어진 유형의 관계로 설정할 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2435fd6cc5f2972d40c09a6ba6c887fb919e9ce5" translate="yes" xml:space="preserve">
          <source>Checks if policy mapping is inhibited.</source>
          <target state="translated">정책 매핑이 금지되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="fa4e3da474b0ac75c946d6dd266cd2938e63206f" translate="yes" xml:space="preserve">
          <source>Checks if policy mapping is inhibited. If this flag is true, policy mapping is inhibited. By default, policy mapping is not inhibited (the flag is false).</source>
          <target state="translated">정책 매핑이 금지되어 있는지 확인합니다. 이 플래그가 true이면 정책 매핑이 금지됩니다. 기본적으로 정책 매핑은 금지되어 있지 않습니다 (플래그는 false).</target>
        </trans-unit>
        <trans-unit id="d3de76bc5f6a4dbf59707aa26dfc1fcc87f29ec7" translate="yes" xml:space="preserve">
          <source>Checks if standalone was set in the document</source>
          <target state="translated">문서에 독립 실행 형이 설정되었는지 확인</target>
        </trans-unit>
        <trans-unit id="d1ac9f4ab94b4ad3034eba5fd24101c59ea16617" translate="yes" xml:space="preserve">
          <source>Checks if the &lt;code&gt;SampleModel&lt;/code&gt; is compatible with this &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SampleModel&lt;/code&gt; 이이 &lt;code&gt;ColorModel&lt;/code&gt; 과 호환되는지 확인 합니다 .</target>
        </trans-unit>
        <trans-unit id="01ed274940f71d7dd21810a0efd8331f7b876c7a" translate="yes" xml:space="preserve">
          <source>Checks if the &lt;code&gt;SampleModel&lt;/code&gt; is compatible with this &lt;code&gt;ColorModel&lt;/code&gt;. Since &lt;code&gt;ColorModel&lt;/code&gt; is an abstract class, any instance is an instance of a subclass. Subclasses must override this method since the implementation in this abstract class throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SampleModel&lt;/code&gt; 이이 &lt;code&gt;ColorModel&lt;/code&gt; 과 호환되는지 확인 합니다 . 이후 &lt;code&gt;ColorModel&lt;/code&gt; 추상 클래스는, 어느 인스턴스도 서브 클래스의 인스턴스입니다. 이 추상 클래스의 구현은 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 던지기 때문에 서브 클래스는이 메서드를 재정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4a8091871eeb910719678a614c033fcc3af429f1" translate="yes" xml:space="preserve">
          <source>Checks if the &lt;code&gt;index&lt;/code&gt; is within the bounds of the range from &lt;code&gt;0&lt;/code&gt; (inclusive) to &lt;code&gt;length&lt;/code&gt; (exclusive).</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; 가 &lt;code&gt;0&lt;/code&gt; (포함)에서 &lt;code&gt;length&lt;/code&gt; (제외) 까지 의 범위 내에 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="61c75b793572329d30026e5e23a23a13f97e4fbb" translate="yes" xml:space="preserve">
          <source>Checks if the Control key is down.</source>
          <target state="translated">Control 키가 눌려 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="120399c61741af2bf8c285ab2b4d0b0d5eb6764f" translate="yes" xml:space="preserve">
          <source>Checks if the Meta key is down.</source>
          <target state="translated">Meta 키가 다운되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="18e89957433766fd8fe6d71f3b5890c382c07eec" translate="yes" xml:space="preserve">
          <source>Checks if the Relation Service is active.</source>
          <target state="translated">관계 서비스가 활성 상태인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="26d6f503b308f1a6eb4426543993f3db66a00b1d" translate="yes" xml:space="preserve">
          <source>Checks if the Relation Service is active. Current condition is that the Relation Service must be registered in the MBean Server</source>
          <target state="translated">관계 서비스가 활성화되어 있는지 확인합니다. 현재 상태는 관계 서비스가 MBean 서버에 등록되어야한다는 것입니다</target>
        </trans-unit>
        <trans-unit id="e1d5d7485c0f6540d4139b7c77613ff317d3facb" translate="yes" xml:space="preserve">
          <source>Checks if the Shift key is down.</source>
          <target state="translated">Shift 키가 눌려 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ff8e96b83d9b3b94072beed07de7759d5b03e74c" translate="yes" xml:space="preserve">
          <source>Checks if the button is selected.</source>
          <target state="translated">버튼이 선택되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f8a07d51e65bbcd7c81dc11502900da24cf2d6f4" translate="yes" xml:space="preserve">
          <source>Checks if the component is contained in the component hierarchy of this container.</source>
          <target state="translated">컴포넌트가이 컨테이너의 컴포넌트 계층 구조에 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5a8958d086a9c58c8d0019d428116b605287cf26" translate="yes" xml:space="preserve">
          <source>Checks if the current state is in the state set.</source>
          <target state="translated">현재 상태가 상태 세트에 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c30f8ba679584355bc8124815231e63b9b0cee57" translate="yes" xml:space="preserve">
          <source>Checks if the day-of-month is valid for this year-month.</source>
          <target state="translated">이 달에 해당 날짜가 유효한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4cf0db20a7250f1658f7af4abab2ac45868b5959" translate="yes" xml:space="preserve">
          <source>Checks if the duration of the unit is an estimate.</source>
          <target state="translated">장치의 지속 기간이 추정치인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="fe1ab757f90c11225993b00f3bee1e93d2a8c5e6" translate="yes" xml:space="preserve">
          <source>Checks if the given DES key material is weak or semi-weak.</source>
          <target state="translated">주어진 DES 키 자료가 약한 지 또는 약한 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f5d11d3a6bd67ef68ac95678bfc80baf6574bd59" translate="yes" xml:space="preserve">
          <source>Checks if the given DES key material, starting at &lt;code&gt;offset&lt;/code&gt; inclusive, is parity-adjusted.</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; 포함 하여 지정된 DES 키 자료 가 패리티 조정 되었는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="1be31a0158f60616cb7fdec8ba2453fa64bf1c7b" translate="yes" xml:space="preserve">
          <source>Checks if the given DES-EDE key, starting at &lt;code&gt;offset&lt;/code&gt; inclusive, is parity-adjusted.</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; 포함 하여 지정된 DES-EDE 키 가 패리티 조정 되었는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="3be7201c545c5a4f86049a0865c1152fecca56ea" translate="yes" xml:space="preserve">
          <source>Checks if the given alias exists in this keystore.</source>
          <target state="translated">지정된 별명이이 키 스토어에 존재 하는지를 판정합니다.</target>
        </trans-unit>
        <trans-unit id="4d1388dbe8680009284a3c9373c786883954061e" translate="yes" xml:space="preserve">
          <source>Checks if the instant of this &lt;code&gt;OffsetTime&lt;/code&gt; is after that of the specified time applying both times to a common date.</source>
          <target state="translated">이 &lt;code&gt;OffsetTime&lt;/code&gt; 의 순간을 체크 지정된 시간 이후에 공통 날짜에 두 번 적용 .</target>
        </trans-unit>
        <trans-unit id="f1fa7fb50346a3d18b4f44db4b39b661618d062a" translate="yes" xml:space="preserve">
          <source>Checks if the instant of this &lt;code&gt;OffsetTime&lt;/code&gt; is before that of the specified time applying both times to a common date.</source>
          <target state="translated">이 &lt;code&gt;OffsetTime&lt;/code&gt; 의 순간이 지정된 시간보다 빠른 시점을 공통 날짜에 두 번 적용 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="dc0fbbdb1b0bc18e50ac6e3f1491052c15a733ab" translate="yes" xml:space="preserve">
          <source>Checks if the instant of this &lt;code&gt;OffsetTime&lt;/code&gt; is equal to that of the specified time applying both times to a common date.</source>
          <target state="translated">이 &lt;code&gt;OffsetTime&lt;/code&gt; 의 순간이 공통 시간에 두 번 적용되는 지정된 시간 의 순간 과 같은지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="66976ec6e7c26a4fe47cfea20c76d7a1097dc4cc" translate="yes" xml:space="preserve">
          <source>Checks if the instant of this date-time is after that of the specified date-time.</source>
          <target state="translated">이 날짜-시간의 순간이 지정된 날짜-시간의 순간 이후인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9224c37b530e7f3545acd9aa9db37de966b8b768" translate="yes" xml:space="preserve">
          <source>Checks if the instant of this date-time is before that of the specified date-time.</source>
          <target state="translated">이 날짜-시간의 순간이 지정된 날짜-시간의 순간보다 빠른지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a748f49998aedcebe67d310ec146ce7daccdf0b3" translate="yes" xml:space="preserve">
          <source>Checks if the instant of this date-time is equal to that of the specified date-time.</source>
          <target state="translated">이 날짜-시간의 순간이 지정된 날짜-시간의 순간과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="01638fabea2f7f7d4592ae462b021c92fc3e0239" translate="yes" xml:space="preserve">
          <source>Checks if the keytab file exists.</source>
          <target state="translated">keytab 파일이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="0a3667784fd76972557ace2decb5580745f20135" translate="yes" xml:space="preserve">
          <source>Checks if the keytab file exists. Implementation of this method should make sure that the result matches the latest status of the keytab file.</source>
          <target state="translated">키탭 파일이 존재하는지 확인합니다. 이 방법을 구현하면 결과가 키탭 파일의 최신 상태와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="5210361760dc76cf31948d70361efdca3733c7fe" translate="yes" xml:space="preserve">
          <source>Checks if the month-day is valid for this year.</source>
          <target state="translated">월 일이 올해 유효한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="969e187ad9e8018b49875afd9e0903cfee16f97a" translate="yes" xml:space="preserve">
          <source>Checks if the offset date-time is valid for these rules.</source>
          <target state="translated">오프셋 날짜-시간이 이러한 규칙에 유효한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="031036bdbf20ba0eded0e068f64e7ace769e062a" translate="yes" xml:space="preserve">
          <source>Checks if the role exists and is readable according to the relation type.</source>
          <target state="translated">역할이 존재하고 관계 유형에 따라 읽을 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="42046d746fd907dc4c810f263f01100ca973341b" translate="yes" xml:space="preserve">
          <source>Checks if the specified &lt;code&gt;SampleModel&lt;/code&gt; is compatible with this &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;SampleModel&lt;/code&gt; 이이 &lt;code&gt;ColorModel&lt;/code&gt; 과 호환되는지 확인 합니다 .</target>
        </trans-unit>
        <trans-unit id="d14d38106039b72b511ac09fd85fb88ff33533b9" translate="yes" xml:space="preserve">
          <source>Checks if the specified &lt;code&gt;SampleModel&lt;/code&gt; is compatible with this &lt;code&gt;ColorModel&lt;/code&gt;. If &lt;code&gt;sm&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;SampleModel&lt;/code&gt; 이이 &lt;code&gt;ColorModel&lt;/code&gt; 과 호환되는지 확인 합니다 . 경우 &lt;code&gt;sm&lt;/code&gt; 있다 &lt;code&gt;null&lt;/code&gt; ,이 메소드는 반환 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0cbc63f353de8c6fe3bca2b5a3cdbce71bc1b539" translate="yes" xml:space="preserve">
          <source>Checks if the specified field is supported.</source>
          <target state="translated">지정된 필드가 지원되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="64602ef0290d45145c0967fe6ac06d46fa0b9a56" translate="yes" xml:space="preserve">
          <source>Checks if the specified instant is in daylight savings.</source>
          <target state="translated">지정된 순간이 일광 절약 시간인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="abeb21283f9c822a2ba0627487e9684414a94e0a" translate="yes" xml:space="preserve">
          <source>Checks if the specified offset is valid during this transition.</source>
          <target state="translated">이 전환 중에 지정된 오프셋이 유효한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="166555f25f7da74ae4a43718c9937670bd128b35" translate="yes" xml:space="preserve">
          <source>Checks if the specified permission is &quot;implied&quot; by this object.</source>
          <target state="translated">지정된 사용 권한이이 개체에 의해 &quot;내포 된&quot;것인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8b1ad307258cc17b095f6d9ec232d169bae83929" translate="yes" xml:space="preserve">
          <source>Checks if the specified permission is &quot;implied&quot; by this object. This method always returns true.</source>
          <target state="translated">지정된 사용 권한이이 개체에 의해 &quot;내포 된&quot;것인지 확인합니다. 이 메소드는 항상 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="3c359a771ea4896d282c5b43681a0516ec8202a1" translate="yes" xml:space="preserve">
          <source>Checks if the specified permission is part of the permission set in this entry.</source>
          <target state="translated">지정된 권한이이 항목에 설정된 권한의 일부인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d23ad043b8f738240b844682b9caa9f94b214ff1" translate="yes" xml:space="preserve">
          <source>Checks if the specified permission's actions are &quot;implied by&quot; this object's actions.</source>
          <target state="translated">지정된 권한의 액션이이 객체의 액션에 &quot;포함되어 있는지&quot;확인합니다.</target>
        </trans-unit>
        <trans-unit id="6882fb9b6a8a95b6235e687917ca95d581db7f31" translate="yes" xml:space="preserve">
          <source>Checks if the specified unit is supported.</source>
          <target state="translated">지정된 단위가 지원되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="479a9580343413c1f22bd06f4593b79fb04b0a75" translate="yes" xml:space="preserve">
          <source>Checks if the specified year is a leap year.</source>
          <target state="translated">지정된 연도가 윤년인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3c5e60ce4f39fc094ff8a495bc8dcccf1c988cce" translate="yes" xml:space="preserve">
          <source>Checks if the sub-range from &lt;code&gt;fromIndex&lt;/code&gt; (inclusive) to &lt;code&gt;fromIndex + size&lt;/code&gt; (exclusive) is within the bounds of range from &lt;code&gt;0&lt;/code&gt; (inclusive) to &lt;code&gt;length&lt;/code&gt; (exclusive).</source>
          <target state="translated">&lt;code&gt;fromIndex&lt;/code&gt; (포함)에서 &lt;code&gt;fromIndex + size&lt;/code&gt; (제외) 까지 의 하위 범위가 &lt;code&gt;0&lt;/code&gt; (포함)에서 &lt;code&gt;length&lt;/code&gt; (제외) 까지 의 범위 내에 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="fcb504f7196ccf9b3985e6ce54f3823ed8ec7b37" translate="yes" xml:space="preserve">
          <source>Checks if the sub-range from &lt;code&gt;fromIndex&lt;/code&gt; (inclusive) to &lt;code&gt;toIndex&lt;/code&gt; (exclusive) is within the bounds of range from &lt;code&gt;0&lt;/code&gt; (inclusive) to &lt;code&gt;length&lt;/code&gt; (exclusive).</source>
          <target state="translated">&lt;code&gt;fromIndex&lt;/code&gt; (포함)에서 &lt;code&gt;toIndex&lt;/code&gt; (제외) 까지 의 하위 범위가 &lt;code&gt;0&lt;/code&gt; (포함)에서 &lt;code&gt;length&lt;/code&gt; (제외) 까지 의 범위 내에 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="b63a1c720744f034ba35843469e4949e713fdc36" translate="yes" xml:space="preserve">
          <source>Checks if the value is within the valid range and that all values in the range fit in an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">값이 유효한 범위 내에 있고 범위의 모든 값이 &lt;code&gt;int&lt;/code&gt; 에 맞는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="6b181456390f181075ddcad0dd3e284b0c3396ea" translate="yes" xml:space="preserve">
          <source>Checks if the value is within the valid range.</source>
          <target state="translated">값이 유효한 범위 내에 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="bf21df3a5095b8b7ebba6444044d9156c11513a8" translate="yes" xml:space="preserve">
          <source>Checks if the year is a leap year, according to the Hijrah calendar system rules.</source>
          <target state="translated">Hijrah 일정 시스템 규칙에 따라 연도가 윤년인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8585b1d99007489d4905bb8558918add9258caee" translate="yes" xml:space="preserve">
          <source>Checks if the year is a leap year, according to the ISO proleptic calendar system rules.</source>
          <target state="translated">ISO 발음 달력 시스템 규칙에 따라 연도가 윤년인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="044099f604fa3d615b8ab97bcca15cb40a35a006" translate="yes" xml:space="preserve">
          <source>Checks if the year is a leap year, as defined by the calendar system.</source>
          <target state="translated">달력 시스템에 정의 된대로 연도가 윤년인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="0b6ab9bc76cca441c3705a796a6881318a590569" translate="yes" xml:space="preserve">
          <source>Checks if the year is valid for this month-day.</source>
          <target state="translated">해당 연도가 해당 월에 유효한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="66ce415d45abda1d8ad2986bf9a51f07d1871417" translate="yes" xml:space="preserve">
          <source>Checks if there is a relation identified in Relation Service with given relation id.</source>
          <target state="translated">관계 서비스에서 지정된 관계 ID로 식별 된 관계가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f9523e53b300cd958cba8eaab9e878bf0c79c9c7" translate="yes" xml:space="preserve">
          <source>Checks if this &lt;code&gt;CompactNumberFormat&lt;/code&gt; is equal to the specified &lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;CompactNumberFormat&lt;/code&gt; 이 지정된 &lt;code&gt;obj&lt;/code&gt; 와 같은지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="8ef1f33ac746dc9dd7b7b98820d60a34f8c8b361" translate="yes" xml:space="preserve">
          <source>Checks if this &lt;code&gt;CompactNumberFormat&lt;/code&gt; is equal to the specified &lt;code&gt;obj&lt;/code&gt;. The objects of type &lt;code&gt;CompactNumberFormat&lt;/code&gt; are compared, other types return false; obeys the general contract of &lt;a href=&quot;../lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;code&gt;CompactNumberFormat&lt;/code&gt; 이 지정된 &lt;code&gt;obj&lt;/code&gt; 와 같은지 확인합니다 . &lt;code&gt;CompactNumberFormat&lt;/code&gt; 유형의 객체 가 비교되고 다른 유형은 false를 반환합니다. &lt;a href=&quot;../lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals&lt;/code&gt; &lt;/a&gt; 의 일반 계약을 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="3baa4d2120a26600ac0cec9096b4b512ab254bcf" translate="yes" xml:space="preserve">
          <source>Checks if this &lt;code&gt;Font&lt;/code&gt; has a glyph for the specified character.</source>
          <target state="translated">이 &lt;code&gt;Font&lt;/code&gt; 에 지정된 문자에 대한 글리프가 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="90dab0dfc234c02070acd978cbe576499a333084" translate="yes" xml:space="preserve">
          <source>Checks if this &lt;code&gt;PrivateCredentialPermission&lt;/code&gt; implies the specified &lt;code&gt;Permission&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;PrivateCredentialPermission&lt;/code&gt; 가 지정된 &lt;code&gt;Permission&lt;/code&gt; 를 암시 할지 어떨지를 판정합니다 .</target>
        </trans-unit>
        <trans-unit id="8a4440a540cf0a2761e349e263787c000d0e5d2c" translate="yes" xml:space="preserve">
          <source>Checks if this &lt;code&gt;WeekFields&lt;/code&gt; is equal to the specified object.</source>
          <target state="translated">이 &lt;code&gt;WeekFields&lt;/code&gt; 가 지정된 객체와 같은지 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="e42379f5ed826b6eeb29d4cbcb7e9f85723fb6c0" translate="yes" xml:space="preserve">
          <source>Checks if this CardPermission object implies the specified permission.</source>
          <target state="translated">이 CardPermission 개체가 지정된 권한을 의미하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6e0c73b5513abb312c2c05f3c2457320d2737f09" translate="yes" xml:space="preserve">
          <source>Checks if this CardPermission object implies the specified permission. That is the case, if and only if</source>
          <target state="translated">이 CardPermission 개체가 지정된 권한을 의미하는지 확인합니다. 그렇습니다.</target>
        </trans-unit>
        <trans-unit id="d15d137870496eb072823b9a40c5b9dac8e235b9" translate="yes" xml:space="preserve">
          <source>Checks if this DecimalStyle is equal to another DecimalStyle.</source>
          <target state="translated">이 DecimalStyle이 다른 DecimalStyle과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b8189ab268c34070741e03f2aa685e0fb812a356" translate="yes" xml:space="preserve">
          <source>Checks if this FilePermission object &quot;implies&quot; the specified permission.</source>
          <target state="translated">이 FilePermission 객체에 지정된 액세스권이 포함되어 있는지를 판정합니다.</target>
        </trans-unit>
        <trans-unit id="77ecaa72c077d7de5831ee0a026e22d96ea6cbce" translate="yes" xml:space="preserve">
          <source>Checks if this Kerberos delegation permission object &quot;implies&quot; the specified permission.</source>
          <target state="translated">이 Kerberos 위임 권한 객체에 지정된 권한이 &quot;포함되어 있는지&quot;확인합니다.</target>
        </trans-unit>
        <trans-unit id="d43af8a03d80336af70ac9be612302bc7736a78d" translate="yes" xml:space="preserve">
          <source>Checks if this Kerberos service permission object &quot;implies&quot; the specified permission.</source>
          <target state="translated">이 Kerberos 서비스 권한 객체가 지정된 권한을 &quot;포함하고 있는지&quot;확인합니다.</target>
        </trans-unit>
        <trans-unit id="4346b4f5cc4b240f116f47e101362b9c3f30e6fb" translate="yes" xml:space="preserve">
          <source>Checks if this MBeanPermission object &quot;implies&quot; the specified permission.</source>
          <target state="translated">이 MBeanPermission 객체에 지정된 액세스권이 포함되어 있는지를 판정합니다.</target>
        </trans-unit>
        <trans-unit id="d760f9ce8b051312e7aa44ce0eb83e43280c4a27" translate="yes" xml:space="preserve">
          <source>Checks if this MBeanServerPermission object &quot;implies&quot; the specified permission.</source>
          <target state="translated">이 MBeanServerPermission 객체에 지정된 액세스권이 포함되어 있는지를 판정합니다.</target>
        </trans-unit>
        <trans-unit id="98788b69d7c663a7a23d98766f3b34fb5bf1a408" translate="yes" xml:space="preserve">
          <source>Checks if this PropertyPermission object &quot;implies&quot; the specified permission.</source>
          <target state="translated">이 PropertyPermission 객체에 지정된 액세스권이 포함되어 있는지를 판정합니다.</target>
        </trans-unit>
        <trans-unit id="3c63f2d9bf46f8e16402584b04909d3248cf464b" translate="yes" xml:space="preserve">
          <source>Checks if this URLPermission implies the given permission.</source>
          <target state="translated">이 URLPermission이 주어진 권한을 의미하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6fe75980fa031d7664936ce7fd18c63559fecad8" translate="yes" xml:space="preserve">
          <source>Checks if this URLPermission implies the given permission. Specifically, the following checks are done as if in the following sequence:</source>
          <target state="translated">이 URLPermission가 지정된 권한을 포함 하는지를 확인합니다. 특히 다음 점검은 다음 순서대로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="5aa248c013ec6ffc265fc56d2297c632db144b67" translate="yes" xml:space="preserve">
          <source>Checks if this Window is showing on screen.</source>
          <target state="translated">이 창이 화면에 표시되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9a10aa5ba23211d17e85c8c72b51e0d9da9b4632" translate="yes" xml:space="preserve">
          <source>Checks if this chronology is equal to another chronology.</source>
          <target state="translated">이 연대기가 다른 연대기와 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ff443cfb42ff11c107e2aa544c671ace227295c1" translate="yes" xml:space="preserve">
          <source>Checks if this clock is equal to another clock.</source>
          <target state="translated">이 시계가 다른 시계와 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c7d0b75e7c15e1e2f948880b67a22923c173ef5d" translate="yes" xml:space="preserve">
          <source>Checks if this date is after the specified date ignoring the chronology.</source>
          <target state="translated">이 날짜가 연대기를 무시하고 지정된 날짜 이후인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c24b0859fe18961e35e7d05013ad0f1bc1383245" translate="yes" xml:space="preserve">
          <source>Checks if this date is after the specified date.</source>
          <target state="translated">이 날짜가 지정된 날짜 이후인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c6827cf9b8f15899749e5a3d628a51b533569d23" translate="yes" xml:space="preserve">
          <source>Checks if this date is before the specified date ignoring the chronology.</source>
          <target state="translated">이 날짜가 연대기를 무시하고 지정된 날짜 이전인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5e26dcd7b95cf42fc4ebdc28e8cdd790265b42f5" translate="yes" xml:space="preserve">
          <source>Checks if this date is before the specified date.</source>
          <target state="translated">이 날짜가 지정된 날짜 이전인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="02397cc1262ffbc02a830b7b25f2ecffb5df2023" translate="yes" xml:space="preserve">
          <source>Checks if this date is equal to another date, including the chronology.</source>
          <target state="translated">이 날짜가 연대기를 포함하여 다른 날짜와 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="13b811e8864174a2c0f2284548c94b711ece78e0" translate="yes" xml:space="preserve">
          <source>Checks if this date is equal to another date.</source>
          <target state="translated">이 날짜가 다른 날짜와 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="dca1ab08be13c810f956e0b41b2dc51c6db2a86d" translate="yes" xml:space="preserve">
          <source>Checks if this date is equal to the specified date ignoring the chronology.</source>
          <target state="translated">이 날짜가 연대기를 무시하고 지정된 날짜와 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c9768efdc66250608967297a5ff1eacef14bfd8e" translate="yes" xml:space="preserve">
          <source>Checks if this date is equal to the specified date.</source>
          <target state="translated">이 날짜가 지정된 날짜와 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="fdd317beb6ad3209e41866f8aa5a3cf5ad9376da" translate="yes" xml:space="preserve">
          <source>Checks if this date-time is after the specified date-time ignoring the chronology.</source>
          <target state="translated">이 날짜-시간이 연대기를 무시하고 지정된 날짜-시간 이후인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b61733161e08f4b14af60888665caeef84d2cc79" translate="yes" xml:space="preserve">
          <source>Checks if this date-time is after the specified date-time.</source>
          <target state="translated">이 날짜-시간이 지정된 날짜-시간 이후인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1193945769a729562d6028675507c799bfd4c67e" translate="yes" xml:space="preserve">
          <source>Checks if this date-time is before the specified date-time ignoring the chronology.</source>
          <target state="translated">이 날짜-시간이 연대기를 무시하고 지정된 날짜-시간 이전인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="16deeb1a25a67d0950fa94bfe65fd6899d10a20b" translate="yes" xml:space="preserve">
          <source>Checks if this date-time is before the specified date-time.</source>
          <target state="translated">이 날짜-시간이 지정된 날짜-시간 이전인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e2c894ee9b94065c030d7c6ca9b8301309e42915" translate="yes" xml:space="preserve">
          <source>Checks if this date-time is equal to another date-time, including the chronology.</source>
          <target state="translated">이 날짜-시간이 연대기를 포함하여 다른 날짜-시간과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7c291406197131d01416ec673a078f52ed1eee52" translate="yes" xml:space="preserve">
          <source>Checks if this date-time is equal to another date-time.</source>
          <target state="translated">이 날짜-시간이 다른 날짜-시간과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d82aba0081d938821c945210401e22fbe204ea4b" translate="yes" xml:space="preserve">
          <source>Checks if this date-time is equal to the specified date-time ignoring the chronology.</source>
          <target state="translated">이 날짜-시간이 연대기를 무시하고 지정된 날짜-시간과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="53c1cb1f9df8409258692aa178318be9ac431d18" translate="yes" xml:space="preserve">
          <source>Checks if this date-time is equal to the specified date-time.</source>
          <target state="translated">이 날짜-시간이 지정된 날짜-시간과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2d58e56ccc4fe0d158335a41837f29e95a5d2329" translate="yes" xml:space="preserve">
          <source>Checks if this duration is equal to the specified &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">이 기간이 지정된 &lt;code&gt;Duration&lt;/code&gt; 과 같은지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="2c16587a2fa0162c053f5323d9412bae6e62219c" translate="yes" xml:space="preserve">
          <source>Checks if this duration is negative, excluding zero.</source>
          <target state="translated">이 기간이 0인지를 제외하고 음수인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="282015526f2f51ae36084345599c365a842b744f" translate="yes" xml:space="preserve">
          <source>Checks if this duration is zero length.</source>
          <target state="translated">이 지속 시간이 길이가 0인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="685a421f179ec6bf725a8ca4e2c17389f1b77f4d" translate="yes" xml:space="preserve">
          <source>Checks if this duration object has the same duration as another &lt;code&gt;Duration&lt;/code&gt; object.</source>
          <target state="translated">이 duration 객체가 다른 &lt;code&gt;Duration&lt;/code&gt; 객체 와 동일한 기간인지 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="768a768d40a6b01c502131cd99401a9fd469dddf" translate="yes" xml:space="preserve">
          <source>Checks if this duration object is strictly longer than another &lt;code&gt;Duration&lt;/code&gt; object.</source>
          <target state="translated">이 duration 객체가 다른 &lt;code&gt;Duration&lt;/code&gt; 객체 보다 엄격하게 긴지 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="e9d898bca03ce0730cfca979ac2d4598a39bcbc2" translate="yes" xml:space="preserve">
          <source>Checks if this duration object is strictly shorter than another &lt;code&gt;Duration&lt;/code&gt; object.</source>
          <target state="translated">이 duration 객체가 다른 &lt;code&gt;Duration&lt;/code&gt; 객체 보다 엄격하게 짧은 지 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="5b25553359f49634facaf7bef9a6fdc07941f0b6" translate="yes" xml:space="preserve">
          <source>Checks if this field is supported by the temporal object.</source>
          <target state="translated">이 필드가 시간 객체에서 지원되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="72b3b745708ce1d90a20e2ffce3439907dfc7e45" translate="yes" xml:space="preserve">
          <source>Checks if this field represents a component of a date.</source>
          <target state="translated">이 필드가 날짜의 구성 요소를 나타내는 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f1bf5ccd5fe6023ea795f9f017613a363ba0123f" translate="yes" xml:space="preserve">
          <source>Checks if this field represents a component of a time.</source>
          <target state="translated">이 필드가 시간의 구성 요소를 나타내는 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7cd578fcca1854c5d54be930b040efde64f68de7" translate="yes" xml:space="preserve">
          <source>Checks if this file object is compatible with the specified simple name and kind.</source>
          <target state="translated">이 파일 객체가 지정된 단순 이름 및 종류와 호환되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8eb6ed8e3241ff1088c5dea07a41f3d0073b53a9" translate="yes" xml:space="preserve">
          <source>Checks if this file object is compatible with the specified simple name and kind. A simple name is a single identifier (not qualified) as defined in</source>
          <target state="translated">이 파일 객체가 지정된 단순 명 및 종류와 호환 가능한지 어떤지를 판정합니다. 간단한 이름은에 정의 된 단일 식별자 (정규화되지 않음)입니다.</target>
        </trans-unit>
        <trans-unit id="2238d3188aff38f57b7af634b48cf4006b866fac" translate="yes" xml:space="preserve">
          <source>Checks if this instant is after the specified instant.</source>
          <target state="translated">이 순간이 지정된 순간 이후인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="51dd35f6c92b3965b0de0d477857f172a850fc94" translate="yes" xml:space="preserve">
          <source>Checks if this instant is before the specified instant.</source>
          <target state="translated">이 인스턴트가 지정된 인스턴트 이전인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8d91dc589788d364538da1f9babbdd7a435bb481" translate="yes" xml:space="preserve">
          <source>Checks if this instant is equal to the specified instant.</source>
          <target state="translated">이 순간이 지정된 순간과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="69856a98eae93c7e99aa4697b108b3794d967898" translate="yes" xml:space="preserve">
          <source>Checks if this month-day is after the specified month-day.</source>
          <target state="translated">이 월일이 지정된 월일 이후인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8c230fa2732d7e6d59c257d33d36cdf36061e00a" translate="yes" xml:space="preserve">
          <source>Checks if this month-day is before the specified month-day.</source>
          <target state="translated">이 월일이 지정된 월일 이전인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="356a5816f913e24c6654e6cf239177a0f3c5cd9e" translate="yes" xml:space="preserve">
          <source>Checks if this month-day is equal to another month-day.</source>
          <target state="translated">이 달이 다른 달과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c8ba788599f64e540da8f77b702847dfbda81bc4" translate="yes" xml:space="preserve">
          <source>Checks if this object equals another.</source>
          <target state="translated">이 개체가 다른 개체와 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ff1a048b7c6e7bc47299dd7f14a85ef92cfc7670" translate="yes" xml:space="preserve">
          <source>Checks if this offset is equal to another offset.</source>
          <target state="translated">이 오프셋이 다른 오프셋과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7ddf53da84901d01c279cc624271920f3183f71b" translate="yes" xml:space="preserve">
          <source>Checks if this period is equal to another period, including the chronology.</source>
          <target state="translated">이 기간이 연대기를 포함하여 다른 기간과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="03db344a0045c79b1931e6e7198d06a0eecbe31f" translate="yes" xml:space="preserve">
          <source>Checks if this period is equal to another period.</source>
          <target state="translated">이 기간이 다른 기간과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="74b737a446e3f751e12abf06d34b5a65f49f98cf" translate="yes" xml:space="preserve">
          <source>Checks if this range is equal to another range.</source>
          <target state="translated">이 범위가 다른 범위와 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="37a7470d470f704c70e7b516580c6735fe699e3e" translate="yes" xml:space="preserve">
          <source>Checks if this set of rules equals another.</source>
          <target state="translated">이 규칙 집합이 다른 규칙과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f4e4c12e68ef8ff6586e39693b219c6a6e025d75" translate="yes" xml:space="preserve">
          <source>Checks if this socket permission object &quot;implies&quot; the specified permission.</source>
          <target state="translated">이 소켓 권한 객체가 지정된 권한을 &quot;포함&quot;하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7d5550048e4a185ab3a5dfb8d0b9ba55e8596c46" translate="yes" xml:space="preserve">
          <source>Checks if this time is after the specified time.</source>
          <target state="translated">이 시간이 지정된 시간 이후인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ff7c4c504588fa709f31bd5d13a29e35a3d40a01" translate="yes" xml:space="preserve">
          <source>Checks if this time is before the specified time.</source>
          <target state="translated">이 시간이 지정된 시간 이전인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="821002b818d4e44e795112e2288729e8884dbf90" translate="yes" xml:space="preserve">
          <source>Checks if this time is equal to another time.</source>
          <target state="translated">이 시간이 다른 시간과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b75977341170b1ad17a900d099c1f2de0b3cd0cf" translate="yes" xml:space="preserve">
          <source>Checks if this time-zone ID is equal to another time-zone ID.</source>
          <target state="translated">이 시간대 ID가 다른 시간대 ID와 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="691397d1d72e7b7e4beae824bfa38be3b288b423" translate="yes" xml:space="preserve">
          <source>Checks if this unit is a date unit.</source>
          <target state="translated">이 단위가 날짜 단위인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="92332e29c5bcc4a00d486bb2f0681bf5d870dc61" translate="yes" xml:space="preserve">
          <source>Checks if this unit is a time unit.</source>
          <target state="translated">이 단위가 시간 단위인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="52081d953244e54b6072b4c3dfe845cfc97f239e" translate="yes" xml:space="preserve">
          <source>Checks if this unit is supported by the specified temporal object.</source>
          <target state="translated">지정된 시간 객체가이 유닛을 지원하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="0c24712a540a9a80c364f8d918320d51b721dcb4" translate="yes" xml:space="preserve">
          <source>Checks if this unit represents a component of a date.</source>
          <target state="translated">이 단위가 날짜의 구성 요소를 나타내는 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9be3bf39585c94ef92f32f7a8fef48b62de6d89d" translate="yes" xml:space="preserve">
          <source>Checks if this unit represents a component of a time.</source>
          <target state="translated">이 단위가 시간의 구성 요소를 나타내는 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3339718a6306e23f01ee0626d71a6ed2e2c37606" translate="yes" xml:space="preserve">
          <source>Checks if this year is after the specified year.</source>
          <target state="translated">올해가 지정된 연도 이후인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3a00ab225a04c2affa3d7a4bca9913d1d502ec7c" translate="yes" xml:space="preserve">
          <source>Checks if this year is before the specified year.</source>
          <target state="translated">올해가 지정된 연도 이전인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="deb39dce29b101cbccaba89c06e27056f5211c29" translate="yes" xml:space="preserve">
          <source>Checks if this year is equal to another year.</source>
          <target state="translated">올해가 다른 해와 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2e5c76bc8439b7d99ec74043b6d1ec832f99fa11" translate="yes" xml:space="preserve">
          <source>Checks if this year-month is after the specified year-month.</source>
          <target state="translated">이번 연도가 지정된 연도 이후인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="86cdb68156ddbb3ebb84af178ad59e7e7d0466b0" translate="yes" xml:space="preserve">
          <source>Checks if this year-month is before the specified year-month.</source>
          <target state="translated">이번 연도가 지정된 연도 이전인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ec797931ba8fba2ede8de5689999bd0a3b92ed00" translate="yes" xml:space="preserve">
          <source>Checks if this year-month is equal to another year-month.</source>
          <target state="translated">올해의 월이 다른 월의 월과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c8b3d3147e05bf710b6e0f8649ad82fb5ee8a975" translate="yes" xml:space="preserve">
          <source>Checks of the zone rules are fixed, such that the offset never varies.</source>
          <target state="translated">오프셋이 변하지 않도록 구역 규칙의 검사가 수정되었습니다.</target>
        </trans-unit>
        <trans-unit id="34b212d858b6bf3ac737ff700edce0558cc730aa" translate="yes" xml:space="preserve">
          <source>Checks out a tile for writing.</source>
          <target state="translated">글쓰기를 위해 타일을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d6a1990e4c0ad4b4041f69904b6ddb0fc9c71ce6" translate="yes" xml:space="preserve">
          <source>Checks out a tile for writing. All registered &lt;code&gt;TileObservers&lt;/code&gt; are notified when a tile goes from having no writers to having one writer.</source>
          <target state="translated">글쓰기를 위해 타일을 확인합니다. 등록 된 모든 &lt;code&gt;TileObservers&lt;/code&gt; 는 타일이 작성자가없는 상태에서 하나의 작성자를 갖는 것으로 변경 될 때 알림을받습니다.</target>
        </trans-unit>
        <trans-unit id="aed53fc95ecb28c8f0a8effba6800265b897518b" translate="yes" xml:space="preserve">
          <source>Checks out a tile for writing. The WritableRenderedImage is responsible for notifying all of its TileObservers when a tile goes from having no writers to having one writer.</source>
          <target state="translated">글쓰기를 위해 타일을 확인합니다. WritableRenderedImage는 타일에 작성자가없는 상태에서 하나의 작성자가있는 상태로 바뀔 때 모든 TileObservers에 알릴 책임이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6858ef97094079d3bf1267d5c6cf2737e59a5ab2" translate="yes" xml:space="preserve">
          <source>Checks that the certificate is currently valid.</source>
          <target state="translated">인증서가 현재 유효한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a75bcfc3b584b63df1329610d4008a6ab713b5ae" translate="yes" xml:space="preserve">
          <source>Checks that the certificate is currently valid. It is if the current date and time are within the validity period given in the certificate.</source>
          <target state="translated">인증서가 현재 유효한지 확인합니다. 현재 날짜와 시간이 인증서에 제공된 유효 기간 내에있는 경우입니다.</target>
        </trans-unit>
        <trans-unit id="23b902acc2b4b27667dca88c04d135a6e4310bca" translate="yes" xml:space="preserve">
          <source>Checks that the file exists and that the Java virtual machine has permission to &lt;a href=&quot;../../../lang/runtime#exec(java.lang.String)&quot;&gt;&lt;code&gt;execute&lt;/code&gt;&lt;/a&gt; the file. The semantics may differ when checking access to a directory. For example, on UNIX systems, checking for &lt;code&gt;EXECUTE&lt;/code&gt; access checks that the Java virtual machine has permission to search the directory in order to access file or subdirectories.</source>
          <target state="translated">파일이 존재하고 JVM (Java Virtual Machine) 에 파일 &lt;a href=&quot;../../../lang/runtime#exec(java.lang.String)&quot;&gt; &lt;code&gt;execute&lt;/code&gt; &lt;/a&gt; 권한이 있는지 확인 합니다. 디렉토리에 대한 액세스를 확인할 때 의미가 다를 수 있습니다. 예를 들어, UNIX 시스템에서 &lt;code&gt;EXECUTE&lt;/code&gt; 액세스를 확인하면 Java 가상 머신이 파일 또는 하위 디렉토리에 액세스하기 위해 디렉토리를 검색 할 수있는 권한이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="0d2ab9a7c7d9b23af70ec3b4425d62f7a87f121f" translate="yes" xml:space="preserve">
          <source>Checks that the file exists and that the Java virtual machine has permission to &lt;a href=&quot;../../../lang/runtime#exec-java.lang.String-&quot;&gt;&lt;code&gt;execute&lt;/code&gt;&lt;/a&gt; the file. The semantics may differ when checking access to a directory. For example, on UNIX systems, checking for &lt;code&gt;EXECUTE&lt;/code&gt; access checks that the Java virtual machine has permission to search the directory in order to access file or subdirectories.</source>
          <target state="translated">파일이 존재하고 Java 가상 머신 에 파일 을 &lt;a href=&quot;../../../lang/runtime#exec-java.lang.String-&quot;&gt; &lt;code&gt;execute&lt;/code&gt; &lt;/a&gt; 권한이 있는지 확인 합니다. 디렉토리에 대한 액세스를 확인할 때 의미가 다를 수 있습니다. 예를 들어, UNIX 시스템에서 &lt;code&gt;EXECUTE&lt;/code&gt; 액세스를 확인하면 Java 가상 머신이 파일 또는 서브 디렉토리에 액세스하기 위해 디렉토리를 검색 할 권한이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f5cd1aade40c5461f44c283d4f952e6397e9c1b0" translate="yes" xml:space="preserve">
          <source>Checks that the file exists and that the Java virtual machine has permission to read the file.</source>
          <target state="translated">파일이 존재하고 Java 가상 머신에 파일을 읽을 수있는 권한이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="184681328a29c581372a46c4b55101a2734c8369" translate="yes" xml:space="preserve">
          <source>Checks that the file exists and that the Java virtual machine has permission to write to the file,</source>
          <target state="translated">파일이 존재하고 JVM (Java Virtual Machine)에 파일 쓰기 권한이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="be370f8f2a13d8f4d82f75f1ff8bbd9aa95e0bdf" translate="yes" xml:space="preserve">
          <source>Checks that the given date is within the certificate's validity period.</source>
          <target state="translated">주어진 날짜가 인증서의 유효 기간 내에 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5d3f3a2953e604d549bc470e34f0d5df446449f1" translate="yes" xml:space="preserve">
          <source>Checks that the given date is within the certificate's validity period. In other words, this determines whether the certificate would be valid at the given date/time.</source>
          <target state="translated">지정된 날짜가 인증서의 유효 기간 내에 있는지 확인합니다. 즉, 지정된 날짜 / 시간에 인증서가 유효한지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="913713eefaef7b8eb5bd7ba63e9150ae11f5d0ea" translate="yes" xml:space="preserve">
          <source>Checks that the specified date is within the certificate's validity period.</source>
          <target state="translated">지정된 날짜가 인증서의 유효 기간 내에 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="334c5902c236ff955468fcd09cb20b4dc5762654" translate="yes" xml:space="preserve">
          <source>Checks that the specified date is within the certificate's validity period. In other words, this determines whether the certificate would be valid at the specified date/time.</source>
          <target state="translated">지정된 날짜가 인증서의 유효 기간 내에 있는지 확인합니다. 즉, 지정된 날짜 / 시간에 인증서가 유효한지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="503d643050c3e3f9948bf22405dde2e146faca77" translate="yes" xml:space="preserve">
          <source>Checks that the specified object reference is not &lt;code&gt;null&lt;/code&gt; and throws a customized &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; if it is.</source>
          <target state="translated">지정된 객체 참조가 &lt;code&gt;null&lt;/code&gt; 이 아닌지 확인 하고 사용자 정의 된 &lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; 인&lt;/a&gt; 경우이를 throw합니다 .</target>
        </trans-unit>
        <trans-unit id="d718586ed0e95cb987057b835ce53aec7e914fe0" translate="yes" xml:space="preserve">
          <source>Checks that the specified object reference is not &lt;code&gt;null&lt;/code&gt; and throws a customized &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; if it is. This method is designed primarily for doing parameter validation in methods and constructors with multiple parameters, as demonstrated below:</source>
          <target state="translated">지정된 객체 참조가 &lt;code&gt;null&lt;/code&gt; 이 아닌지 확인 하고 사용자 정의 된 &lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; 인&lt;/a&gt; 경우이를 throw합니다 . 이 메소드는 기본적으로 아래에 설명 된 것처럼 여러 개의 매개 변수가있는 메소드 및 생성자에서 매개 변수 유효성 검증을 수행하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="867105769da27bc422631db3d1a7cd943d5614bd" translate="yes" xml:space="preserve">
          <source>Checks that the specified object reference is not &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">지정된 개체 참조가 &lt;code&gt;null&lt;/code&gt; 이 아닌지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="ed548551778c43e7137a8cff6b76710eff3bd4f9" translate="yes" xml:space="preserve">
          <source>Checks that the specified object reference is not &lt;code&gt;null&lt;/code&gt;. This method is designed primarily for doing parameter validation in methods and constructors, as demonstrated below:</source>
          <target state="translated">지정된 객체 참조가 &lt;code&gt;null&lt;/code&gt; 가 아닌지 확인합니다 . 이 메소드는 기본적으로 메소드 및 생성자에서 매개 변수 유효성 검증을 수행하기 위해 다음과 같이 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="be14c4bbc9de59abe5312c09bacde68930c3a10a" translate="yes" xml:space="preserve">
          <source>Checks that the specified value is valid and fits in an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">지정된 값이 유효하고 &lt;code&gt;int&lt;/code&gt; 에 맞는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="f4f239e6f9b687fc606c4335748fd11e9b87c7d2" translate="yes" xml:space="preserve">
          <source>Checks that the specified value is valid for this field.</source>
          <target state="translated">지정된 값이이 필드에 유효한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4c3b59544992567040117317fb27355863c80203" translate="yes" xml:space="preserve">
          <source>Checks that the specified value is valid.</source>
          <target state="translated">지정된 값이 유효한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2348db5d6541b9817fefc2266facc22c918cf6ac" translate="yes" xml:space="preserve">
          <source>Checks the RevocationEnabled flag.</source>
          <target state="translated">RevocationEnabled 플래그를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="db8b80f6eb7ad0dee9549f81e39a39d50ff0dbc9" translate="yes" xml:space="preserve">
          <source>Checks the RevocationEnabled flag. If this flag is true, the default revocation checking mechanism of the underlying PKIX service provider will be used. If this flag is false, the default revocation checking mechanism will be disabled (not used). See the &lt;a href=&quot;#setRevocationEnabled(boolean)&quot;&gt;&lt;code&gt;setRevocationEnabled&lt;/code&gt;&lt;/a&gt; method for more details on setting the value of this flag.</source>
          <target state="translated">RevocationEnabled 플래그를 확인합니다. 이 플래그가 true이면 기본 PKIX 서비스 공급자의 기본 해지 확인 메커니즘이 사용됩니다. 이 플래그가 false이면 기본 해지 확인 메커니즘이 비활성화됩니다 (사용되지 않음). 이 플래그의 값 설정에 대한 자세한 내용 은 &lt;a href=&quot;#setRevocationEnabled(boolean)&quot;&gt; &lt;code&gt;setRevocationEnabled&lt;/code&gt; &lt;/a&gt; 메소드를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2b49088fea5365c9104252895d15e43e439fbd95" translate="yes" xml:space="preserve">
          <source>Checks the RevocationEnabled flag. If this flag is true, the default revocation checking mechanism of the underlying PKIX service provider will be used. If this flag is false, the default revocation checking mechanism will be disabled (not used). See the &lt;a href=&quot;pkixparameters#setRevocationEnabled-boolean-&quot;&gt;&lt;code&gt;setRevocationEnabled&lt;/code&gt;&lt;/a&gt; method for more details on setting the value of this flag.</source>
          <target state="translated">RevocationEnabled 플래그를 확인합니다. 이 플래그가 true이면 기본 PKIX 서비스 제공자의 기본 해지 확인 메커니즘이 사용됩니다. 이 플래그가 false이면 기본 해지 확인 메커니즘이 비활성화됩니다 (사용되지 않음). 이 플래그 값 설정에 대한 자세한 내용 은 &lt;a href=&quot;pkixparameters#setRevocationEnabled-boolean-&quot;&gt; &lt;code&gt;setRevocationEnabled&lt;/code&gt; &lt;/a&gt; 메소드를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d730e5458d0af45516a5155534cdf9f752b01a84" translate="yes" xml:space="preserve">
          <source>Checks the error status of all of the images tracked by this media tracker with the specified identifier.</source>
          <target state="translated">지정된 식별자를 사용하여이 미디어 추적기가 추적 한 모든 이미지의 오류 상태를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="794f417089c5a866d2b44942d626f0d913f934fb" translate="yes" xml:space="preserve">
          <source>Checks the error status of all of the images.</source>
          <target state="translated">모든 이미지의 오류 상태를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a3dc3a628b0e442b9d94008689d2660af71ccbe8" translate="yes" xml:space="preserve">
          <source>Checks the existence, and optionally the accessibility, of a file.</source>
          <target state="translated">파일의 존재 여부 및 선택적으로 액세스 가능성을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="50c4dc6fdaf0352e4d8f9dd27d26724c9c751f84" translate="yes" xml:space="preserve">
          <source>Checks the opacity of the &lt;code&gt;AbstractButton&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AbstractButton&lt;/code&gt; 의 불투명도를 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="5d2e54e1ceb284f1746834ee487eac548536c197" translate="yes" xml:space="preserve">
          <source>Checks this event to determine whether or not the service being revoked is of a particular class.</source>
          <target state="translated">이 이벤트를 검사하여 해지중인 서비스가 특정 클래스인지 여부를 판별합니다.</target>
        </trans-unit>
        <trans-unit id="619011a3af065675fae2a2c14a1feddbacf7e8a1" translate="yes" xml:space="preserve">
          <source>Checks to see if all images being tracked by this media tracker have finished loading.</source>
          <target state="translated">이 미디어 추적기에 의해 추적되는 모든 이미지가로드를 완료했는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f3873008222122ce868505b4c170217124e4155d" translate="yes" xml:space="preserve">
          <source>Checks to see if all images tracked by this media tracker that are tagged with the specified identifier have finished loading.</source>
          <target state="translated">지정된 식별자로 태그가 지정된이 미디어 추적기가 추적 한 모든 이미지가로드를 완료했는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8a189f52a07fea8907a2e1bb179af8e85ef5fdc4" translate="yes" xml:space="preserve">
          <source>Checks to see if the &lt;code&gt;Font&lt;/code&gt; has uniform line metrics.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; 에 균일 한 라인 메트릭이 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="6e586bf223afe94c42e5745d38a066418b82eb18" translate="yes" xml:space="preserve">
          <source>Checks to see if the &lt;code&gt;Font&lt;/code&gt; has uniform line metrics. A composite font may consist of several different fonts to cover various character sets. In such cases, the &lt;code&gt;FontLineMetrics&lt;/code&gt; objects are not uniform. Different fonts may have a different ascent, descent, metrics and so on. This information is sometimes necessary for line measuring and line breaking.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; 에 균일 한 라인 메트릭이 있는지 확인합니다 . 합성 글꼴은 다양한 문자 집합을 포함하는 여러 다른 글꼴로 구성 될 수 있습니다. 이러한 경우 &lt;code&gt;FontLineMetrics&lt;/code&gt; 개체는 균일하지 않습니다. 글꼴마다 상승, 하강, 메트릭 등이 다를 수 있습니다. 이 정보는 줄 측정 및 줄 바꿈에 때때로 필요합니다.</target>
        </trans-unit>
        <trans-unit id="e84e10d0336745de37fb63d2c21ed19d49a1cc2e" translate="yes" xml:space="preserve">
          <source>Checks to see if the font metrics and longest line are up-to-date.</source>
          <target state="translated">글꼴 메트릭과 가장 긴 줄이 최신 상태인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3d4d6f95526f3ffc9e7e0a636abdcafb665dfeb8" translate="yes" xml:space="preserve">
          <source>Checks to see if the specified permission is implied by the collection of Permission objects held in this PermissionCollection.</source>
          <target state="translated">이 PermissionCollection에 보관되고있는 Permission 객체의 컬렉션에 의해 지정된 액세스권이 묵시적인지 어떤지를 판정합니다.</target>
        </trans-unit>
        <trans-unit id="e83d89f6e4ad1d94bf978e7dbecee21275aceb4b" translate="yes" xml:space="preserve">
          <source>Checks to see if this object's PermissionCollection for permissions of the specified permission's class implies the permissions expressed in the</source>
          <target state="translated">지정된 권한 클래스의 권한에 대한이 객체의 PermissionCollection이</target>
        </trans-unit>
        <trans-unit id="82d8e82d018fa1086b2df76f890854d13ba3400f" translate="yes" xml:space="preserve">
          <source>Checks two &lt;code&gt;PrivateCredentialPermission&lt;/code&gt; objects for equality.</source>
          <target state="translated">두 개의 &lt;code&gt;PrivateCredentialPermission&lt;/code&gt; 개체가 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="16255a1b52700af71b55f1e08c3e2f04e767b40c" translate="yes" xml:space="preserve">
          <source>Checks two &lt;code&gt;PrivateCredentialPermission&lt;/code&gt; objects for equality. Checks that</source>
          <target state="translated">두 개의 &lt;code&gt;PrivateCredentialPermission&lt;/code&gt; 객체가 동일한 지 확인 합니다. 확인</target>
        </trans-unit>
        <trans-unit id="f4e991d861ecd43d7b3afb40f3be2af8d9335d74" translate="yes" xml:space="preserve">
          <source>Checks two &lt;code&gt;PrivateCredentialPermission&lt;/code&gt; objects for equality. Checks that &lt;code&gt;obj&lt;/code&gt; is a &lt;code&gt;PrivateCredentialPermission&lt;/code&gt;, and has the same credential class as this object, as well as the same Principals as this object. The order of the Principals in the respective Permission's target names is not relevant.</source>
          <target state="translated">두 개의 &lt;code&gt;PrivateCredentialPermission&lt;/code&gt; 개체가 같은지 확인합니다. &lt;code&gt;obj&lt;/code&gt; 가 &lt;code&gt;PrivateCredentialPermission&lt;/code&gt; 이고이 객체와 동일한 자격 증명 클래스와이 객체와 동일한 Principal이 있는지 확인 합니다. 각 권한의 대상 이름에서 주체의 순서는 관련이 없습니다.</target>
        </trans-unit>
        <trans-unit id="52d8b252659290d2e6cb95593dcb6c04a8b51d8f" translate="yes" xml:space="preserve">
          <source>Checks two AccessControlContext objects for equality.</source>
          <target state="translated">두 AccessControlContext 개체가 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="034300d1bc01e42df1bdb9a9cfb6cf8b09a63e4b" translate="yes" xml:space="preserve">
          <source>Checks two AccessControlContext objects for equality. Checks that</source>
          <target state="translated">두 개의 AccessControlContext 객체가 동일한 지 검사합니다. 확인</target>
        </trans-unit>
        <trans-unit id="277e3c7fbfb55ca6063e1a761c1c033c13c1981f" translate="yes" xml:space="preserve">
          <source>Checks two AccessControlContext objects for equality. Checks that &lt;code&gt;obj&lt;/code&gt; is an AccessControlContext and has the same set of ProtectionDomains as this context.</source>
          <target state="translated">두 AccessControlContext 개체가 같은지 확인합니다. &lt;code&gt;obj&lt;/code&gt; 가 AccessControlContext이고이 컨텍스트와 동일한 ProtectionDomain 집합이 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="5e302464375bf3f25c123d17b55fa593052d27e3" translate="yes" xml:space="preserve">
          <source>Checks two AllPermission objects for equality.</source>
          <target state="translated">두 AllPermission 개체가 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="31d1840f31d0def4317d6641a2793eb75b071532" translate="yes" xml:space="preserve">
          <source>Checks two AllPermission objects for equality. Two AllPermission objects are always equal.</source>
          <target state="translated">두 개의 AllPermission 객체가 동일한 지 확인합니다. 두 개의 AllPermission 객체는 항상 같습니다.</target>
        </trans-unit>
        <trans-unit id="63dc2375f16ab3b3ad2b3c8f1a1e8a1bde6cfde8" translate="yes" xml:space="preserve">
          <source>Checks two BasicPermission objects for equality.</source>
          <target state="translated">두 BasicPermission 개체가 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="99b13c18b8f0e944ae21d910531b245911f45056" translate="yes" xml:space="preserve">
          <source>Checks two BasicPermission objects for equality. Checks that</source>
          <target state="translated">두 개의 BasicPermission 객체가 동일한 지 확인합니다. 확인</target>
        </trans-unit>
        <trans-unit id="daf92978a7baad72d5eb2bae4747876651c39d50" translate="yes" xml:space="preserve">
          <source>Checks two BasicPermission objects for equality. Checks that &lt;code&gt;obj&lt;/code&gt;'s class is the same as this object's class and has the same name as this object.</source>
          <target state="translated">두 BasicPermission 개체가 같은지 확인합니다. 확인 &lt;code&gt;obj&lt;/code&gt; 의 클래스는이 객체의 클래스와 같은,이 오브젝트와 같은 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7779b609abfda0b7468d577695d1751aa3b0d341" translate="yes" xml:space="preserve">
          <source>Checks two DelegationPermission objects for equality.</source>
          <target state="translated">두 DelegationPermission 객체가 동일한 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="fd08d772aea03ee89128c348c9c79ce0db820c3c" translate="yes" xml:space="preserve">
          <source>Checks two FilePermission objects for equality.</source>
          <target state="translated">두 FilePermission 개체가 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="726c034e16d89802a16adaa28b74efba26b1eab6" translate="yes" xml:space="preserve">
          <source>Checks two FilePermission objects for equality. Checks that</source>
          <target state="translated">두 FileFile 객체가 동일한 지 확인합니다. 확인</target>
        </trans-unit>
        <trans-unit id="5ab6566c5eaf09aa378f1304d0ed6b60acc426d1" translate="yes" xml:space="preserve">
          <source>Checks two MBeanPermission objects for equality.</source>
          <target state="translated">두 MBeanPermission 객체가 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4860e37ca0cc48dcf1ae8f122bfaa00f0ff49fa4" translate="yes" xml:space="preserve">
          <source>Checks two MBeanPermission objects for equality. Checks that</source>
          <target state="translated">두 개의 MBeanPermission 객체가 동일한 지 검사합니다. 확인</target>
        </trans-unit>
        <trans-unit id="af32111216082fd9d7eab087b3617832bcd1cc72" translate="yes" xml:space="preserve">
          <source>Checks two MBeanServerPermission objects for equality.</source>
          <target state="translated">두 MBeanServerPermission 오브젝트가 동일한 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="20aaa304f257c96a10ec40b43272727724dd158f" translate="yes" xml:space="preserve">
          <source>Checks two MBeanServerPermission objects for equality. Checks that</source>
          <target state="translated">두 MBeanServerPermission 객체가 동일한 지 검사합니다. 확인</target>
        </trans-unit>
        <trans-unit id="1727baa1dbe434bd5a467b4eb1117018eab562d3" translate="yes" xml:space="preserve">
          <source>Checks two Permission objects for equality.</source>
          <target state="translated">두 Permission 객체가 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8b7d89f4c3743b229ed74955dd0760d3a2a1e8c7" translate="yes" xml:space="preserve">
          <source>Checks two PropertyPermission objects for equality.</source>
          <target state="translated">두 PropertyPermission 개체가 같은지 확인합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
