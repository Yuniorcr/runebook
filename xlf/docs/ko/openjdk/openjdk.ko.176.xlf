<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="f214719abbe3a0f490a16da532d965a4ed7ccf8b" translate="yes" xml:space="preserve">
          <source>To prevent man-in-the-middle attacks, hostname checks can be done to verify that the hostname in an end-entity certificate matches the targeted hostname. TLS does not require such checks, but some protocols over TLS (such as HTTPS) do. In earlier versions of the JDK, the certificate chain checks were done at the SSL/TLS layer, and the hostname verification checks were done at the layer over TLS. This class allows for the checking to be done during a single call to this class.</source>
          <target state="translated">중간자 (man-in-the-middle) 공격을 방지하기 위해 엔드 엔티티 인증서의 호스트 이름이 대상 호스트 이름과 일치하는지 확인하기 위해 호스트 이름 검사를 수행 할 수 있습니다. TLS에는 이러한 검사가 필요하지 않지만 TLS를 통한 일부 프로토콜 (예 : HTTPS)에는 필요합니다. JDK의 이전 버전에서는 인증서 체인 검사가 SSL / TLS 계층에서 수행되었으며 호스트 이름 확인 검사가 TLS를 통해 계층에서 수행되었습니다. 이 클래스를 사용하면이 클래스를 한 번 호출하는 동안 검사를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a7964f839fde9c329bbebbe3ef6c39e9309fba2" translate="yes" xml:space="preserve">
          <source>To prevent man-in-the-middle attacks, hostname checks can be done to verify that the hostname in an end-entity certificate matches the targeted hostname. TLS/DTLS does not require such checks, but some protocols over TLS/DTLS (such as HTTPS) do. In earlier versions of the JDK, the certificate chain checks were done at the SSL/TLS/DTLS layer, and the hostname verification checks were done at the layer over TLS/DTLS. This class allows for the checking to be done during a single call to this class.</source>
          <target state="translated">man-in-the-middle 공격을 방지하기 위해 호스트 이름 검사를 수행하여 최종 엔터티 인증서의 호스트 이름이 대상 호스트 이름과 일치하는지 확인할 수 있습니다. TLS / DTLS에는 이러한 검사가 필요하지 않지만 TLS / DTLS를 통한 일부 프로토콜 (예 : HTTPS)은 필요합니다. 이전 버전의 JDK에서 인증서 체인 검사는 SSL / TLS / DTLS 계층에서 수행되었으며 호스트 이름 확인 검사는 TLS / DTLS를 통해 계층에서 수행되었습니다. 이 클래스를 사용하면이 클래스에 대한 단일 호출 중에 검사를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32759b75b7b379af9cef519bb934c3cedf6194e3" translate="yes" xml:space="preserve">
          <source>To produce a view of the document that has entity references expanded and does not expose the entity reference node itself, use the &lt;code&gt;whatToShow&lt;/code&gt; flags to hide the entity reference node and set &lt;code&gt;expandEntityReferences&lt;/code&gt; to true when creating the &lt;code&gt;NodeIterator&lt;/code&gt;. To produce a view of the document that has entity reference nodes but no entity expansion, use the &lt;code&gt;whatToShow&lt;/code&gt; flags to show the entity reference node and set &lt;code&gt;expandEntityReferences&lt;/code&gt; to false.</source>
          <target state="translated">엔티티 참조가 확장되고 엔티티 참조 노드 자체를 노출하지 않는 문서의보기를 생성하려면 &lt;code&gt;whatToShow&lt;/code&gt; 플래그를 사용 하여 엔티티 참조 노드를 숨기고 &lt;code&gt;NodeIterator&lt;/code&gt; 를 만들 때 &lt;code&gt;expandEntityReferences&lt;/code&gt; 를 true로 설정 합니다 . 엔티티 참조 노드가 있지만 엔티티 확장이없는 문서의보기를 생성하려면 &lt;code&gt;whatToShow&lt;/code&gt; 플래그를 사용 하여 엔티티 참조 노드를 표시하고 &lt;code&gt;expandEntityReferences&lt;/code&gt; 를 false로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="c08e589fde0cdd5f5f74ea9ccac4de62b52fc67d" translate="yes" xml:space="preserve">
          <source>To produce a view of the document that has entity references expanded and does not expose the entity reference node itself, use the &lt;code&gt;whatToShow&lt;/code&gt; flags to hide the entity reference node and set &lt;code&gt;expandEntityReferences&lt;/code&gt; to true when creating the &lt;code&gt;TreeWalker&lt;/code&gt;. To produce a view of the document that has entity reference nodes but no entity expansion, use the &lt;code&gt;whatToShow&lt;/code&gt; flags to show the entity reference node and set &lt;code&gt;expandEntityReferences&lt;/code&gt; to false.</source>
          <target state="translated">엔티티 참조가 확장되고 엔티티 참조 노드 자체를 노출하지 않는 문서의보기를 생성하려면 &lt;code&gt;whatToShow&lt;/code&gt; 플래그를 사용 하여 엔티티 참조 노드를 숨기고 &lt;code&gt;TreeWalker&lt;/code&gt; 를 만들 때 &lt;code&gt;expandEntityReferences&lt;/code&gt; 를 true로 설정 합니다 . 엔티티 참조 노드가 있지만 엔티티 확장이없는 문서의보기를 생성하려면 &lt;code&gt;whatToShow&lt;/code&gt; 플래그를 사용 하여 엔티티 참조 노드를 표시하고 &lt;code&gt;expandEntityReferences&lt;/code&gt; 를 false로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="d933d1cf5a699b5b72fcdb8c2df4420bbc6bedf4" translate="yes" xml:space="preserve">
          <source>To properly update the logging configuration, use the &lt;a href=&quot;#updateConfiguration(java.util.function.Function)&quot;&gt;&lt;code&gt;updateConfiguration(java.util.function.Function)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#updateConfiguration(java.io.InputStream,java.util.function.Function)&quot;&gt;&lt;code&gt;updateConfiguration(java.io.InputStream, java.util.function.Function)&lt;/code&gt;&lt;/a&gt; method instead.</source>
          <target state="translated">로깅 구성을 올바르게 업데이트하려면 대신 &lt;a href=&quot;#updateConfiguration(java.util.function.Function)&quot;&gt; &lt;code&gt;updateConfiguration(java.util.function.Function)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#updateConfiguration(java.io.InputStream,java.util.function.Function)&quot;&gt; &lt;code&gt;updateConfiguration(java.io.InputStream, java.util.function.Function)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="399d941ce49c9a5bc658465a614e310c74442731" translate="yes" xml:space="preserve">
          <source>To properly update the logging configuration, use the &lt;a href=&quot;#updateConfiguration(java.util.function.Function)&quot;&gt;&lt;code&gt;updateConfiguration(java.util.function.Function)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#updateConfiguration(java.io.InputStream,java.util.function.Function)&quot;&gt;&lt;code&gt;updateConfiguration(java.io.InputStream, java.util.function.Function)&lt;/code&gt;&lt;/a&gt; methods instead.</source>
          <target state="translated">로깅 구성을 올바르게 업데이트하려면 대신 &lt;a href=&quot;#updateConfiguration(java.util.function.Function)&quot;&gt; &lt;code&gt;updateConfiguration(java.util.function.Function)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#updateConfiguration(java.io.InputStream,java.util.function.Function)&quot;&gt; &lt;code&gt;updateConfiguration(java.io.InputStream, java.util.function.Function)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8c0f2cbf694f3313c16fa7613b5e6dd577e4074f" translate="yes" xml:space="preserve">
          <source>To provide a specific keystore type:</source>
          <target state="translated">특정 키 저장소 유형을 제공하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="06444bab1b7f00b33dec7e627e504fcc33b7cf1a" translate="yes" xml:space="preserve">
          <source>To provide concrete classes for the user, the API defines specializations of the interfaces found at the root level. These interfaces are found in &lt;a href=&quot;sax/package-summary&quot;&gt;&lt;code&gt;javax.xml.transform.sax&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dom/package-summary&quot;&gt;&lt;code&gt;javax.xml.transform.dom&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stax/package-summary&quot;&gt;&lt;code&gt;javax.xml.transform.stax&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;stream/package-summary&quot;&gt;&lt;code&gt;javax.xml.transform.stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용자에게 구체적인 클래스를 제공하기 위해 API는 루트 수준에서 찾은 인터페이스의 전문화를 정의합니다. 이러한 인터페이스는 &lt;a href=&quot;sax/package-summary&quot;&gt; &lt;code&gt;javax.xml.transform.sax&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;dom/package-summary&quot;&gt; &lt;code&gt;javax.xml.transform.dom&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;stax/package-summary&quot;&gt; &lt;code&gt;javax.xml.transform.stax&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;stream/package-summary&quot;&gt; &lt;code&gt;javax.xml.transform.stream&lt;/code&gt; 에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7219f8cfdecc44e00d38199242b9ed5d1ad8cd2" translate="yes" xml:space="preserve">
          <source>To provide customized error handling, implement this interface and use the &lt;code&gt;setErrorListener&lt;/code&gt; method to register an instance of the implementation with the &lt;a href=&quot;transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용자 정의 된 오류 처리를 제공하려면이 인터페이스를 구현하고 &lt;code&gt;setErrorListener&lt;/code&gt; 메소드를 사용 하여 구현 인스턴스를 &lt;a href=&quot;transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; 에 등록하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6bc35adcddbc8519fc0eb13cd050998eeaa0c101" translate="yes" xml:space="preserve">
          <source>To provide customized error handling, implement this interface and use the &lt;code&gt;setErrorListener&lt;/code&gt; method to register an instance of the implementation with the &lt;a href=&quot;transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Transformer&lt;/code&gt; then reports all errors and warnings through this interface.</source>
          <target state="translated">사용자 정의 된 오류 처리를 제공하려면이 인터페이스를 구현하고 &lt;code&gt;setErrorListener&lt;/code&gt; 메소드를 사용 하여 구현 인스턴스를 &lt;a href=&quot;transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; 에 등록하십시오&lt;/a&gt; . &lt;code&gt;Transformer&lt;/code&gt; 다음이 인터페이스를 통해 모든 오류와 경고를보고합니다.</target>
        </trans-unit>
        <trans-unit id="4d9625ba45405bf286365f8f2c76772c2e50d084" translate="yes" xml:space="preserve">
          <source>To quantify the color characteristics of a device such as a printer or monitor, measurements of XYZ values for particular device colors are typically made. For purposes of this discussion, the term device XYZ values is used to mean the XYZ values that would be measured from device colors using current CIE recommended practices.</source>
          <target state="translated">프린터 또는 모니터와 같은 장치의 색상 특성을 정량화하기 위해 일반적으로 특정 장치 색상에 대한 XYZ 값을 측정합니다. 이 논의의 목적을 위해 장치 XYZ 값이라는 용어는 현재 CIE 권장 방법을 사용하여 장치 색상에서 측정되는 XYZ 값을 의미하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f2c7dc36ed85076024b694930f5b7d29edac3f37" translate="yes" xml:space="preserve">
          <source>To query for the printable area, a client must supply a suitable context. Without specifying at the very least the size of the media being used no meaningful value for printable area can be obtained.</source>
          <target state="translated">인쇄 가능 영역을 쿼리하려면 클라이언트가 적절한 컨텍스트를 제공해야합니다. 사용되는 용지의 크기를 최소한으로 지정하지 않으면 인쇄 가능 영역에 대한 의미있는 값을 얻을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="475859fe217528460be16e143a4e1805e7c0d925" translate="yes" xml:space="preserve">
          <source>To read all data for a recording, invoke this method repeatedly until &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">기록에 대한 모든 데이터를 읽으려면 &lt;code&gt;null&lt;/code&gt; 이 반환 될 때까지이 메서드를 반복적으로 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="263c5b92a194433ee16767a9bc877843ab4b7dc8" translate="yes" xml:space="preserve">
          <source>To receive MBeanServerNotifications, you need to register a listener with the &lt;a href=&quot;mbeanserverdelegate&quot;&gt;&lt;code&gt;MBeanServerDelegate&lt;/code&gt;&lt;/a&gt; MBean that represents the MBeanServer. The ObjectName of the MBeanServerDelegate is &lt;a href=&quot;mbeanserverdelegate#DELEGATE_NAME&quot;&gt;&lt;code&gt;MBeanServerDelegate.DELEGATE_NAME&lt;/code&gt;&lt;/a&gt;, which is &lt;code&gt;JMImplementation:type=MBeanServerDelegate&lt;/code&gt;.</source>
          <target state="translated">MBeanServerNotifications를 수신하려면 MBeanServer 를 나타내는 &lt;a href=&quot;mbeanserverdelegate&quot;&gt; &lt;code&gt;MBeanServerDelegate&lt;/code&gt; &lt;/a&gt; MBean에 리스너를 등록해야합니다 . MBeanServerDelegate의 ObjectName은 &lt;a href=&quot;mbeanserverdelegate#DELEGATE_NAME&quot;&gt; &lt;code&gt;MBeanServerDelegate.DELEGATE_NAME&lt;/code&gt; &lt;/a&gt; 이며 &lt;code&gt;JMImplementation:type=MBeanServerDelegate&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b82fca8e38b404ee9428dab358796f99cd1b2379" translate="yes" xml:space="preserve">
          <source>To receive a notification when an event arrives, register an action using the &lt;a href=&quot;#onEvent(java.util.function.Consumer)&quot;&gt;&lt;code&gt;onEvent(Consumer)&lt;/code&gt;&lt;/a&gt; method. To filter the stream for an event with a specific name, use &lt;a href=&quot;#onEvent(java.lang.String,java.util.function.Consumer)&quot;&gt;&lt;code&gt;onEvent(String, Consumer)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이벤트 도착시 알림을 받으려면 &lt;a href=&quot;#onEvent(java.util.function.Consumer)&quot;&gt; &lt;code&gt;onEvent(Consumer)&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 작업을 등록합니다 . 특정 이름의 이벤트에 대한 스트림을 필터링하려면 &lt;a href=&quot;#onEvent(java.lang.String,java.util.function.Consumer)&quot;&gt; &lt;code&gt;onEvent(String, Consumer)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e50bf1c56e905455d076027f4b0616b3cbbe8a50" translate="yes" xml:space="preserve">
          <source>To refer to locations within the sequence, the coordinates used are the location between two characters. As the diagram below shows, a location in a text document can be referred to as a position, or an offset. This position is zero-based.</source>
          <target state="translated">시퀀스 내의 위치를 ​​참조하기 위해 사용되는 좌표는 두 문자 사이의 위치입니다. 아래 다이어그램에서 볼 수 있듯이 텍스트 문서의 위치를 ​​위치 또는 오프셋이라고 할 수 있습니다. 이 위치는 0부터 시작합니다.</target>
        </trans-unit>
        <trans-unit id="0734a315a1881596d375b5f9fcde16e40f4fc639" translate="yes" xml:space="preserve">
          <source>To register for status change events use &lt;a href=&quot;jshell#onSnippetEvent(java.util.function.Consumer)&quot;&gt;&lt;code&gt;JShell.onSnippetEvent(java.util.function.Consumer)&lt;/code&gt;&lt;/a&gt;. These events are only generated by &lt;code&gt;eval&lt;/code&gt; and &lt;code&gt;drop&lt;/code&gt;, the return values of these methods are the list of events generated by that call. So, as in the example above, events can be used without registering to receive events.</source>
          <target state="translated">상태 변경 이벤트를 등록하려면 &lt;a href=&quot;jshell#onSnippetEvent(java.util.function.Consumer)&quot;&gt; &lt;code&gt;JShell.onSnippetEvent(java.util.function.Consumer)&lt;/code&gt; &lt;/a&gt; . 이러한 이벤트는 &lt;code&gt;eval&lt;/code&gt; 및 &lt;code&gt;drop&lt;/code&gt; 에 의해서만 생성되며 , 이러한 메서드의 반환 값은 해당 호출에 의해 생성 된 이벤트 목록입니다. 따라서 위의 예에서와 같이 이벤트를 수신하기 위해 등록하지 않고도 이벤트를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f470a0bd4b226ae17cf266889b087c40813603e" translate="yes" xml:space="preserve">
          <source>To reinforce that each axis is treated independently the diagram shows the range of each group and element along each axis. The range of each component has been projected onto the axes, and the groups are rendered in blue (horizontal) and red (vertical). For readability there is a gap between each of the elements in the sequential group.</source>
          <target state="translated">각 축이 독립적으로 처리된다는 것을 강조하기 위해 다이어그램은 각 축을 따라 각 그룹 및 요소의 범위를 보여줍니다. 각 구성 요소의 범위는 축에 투영되었으며 그룹은 파란색 (수평) 및 빨간색 (수직)으로 렌더링됩니다. 가독성을 위해 순차 그룹의 각 요소 사이에 간격이 있습니다.</target>
        </trans-unit>
        <trans-unit id="974e2b9641b4896627a5643d8e942465194e9954" translate="yes" xml:space="preserve">
          <source>To release resources used by this &lt;code&gt;Deflater&lt;/code&gt;, the &lt;a href=&quot;#end()&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt; method should be called explicitly. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;#finalize()&quot;&gt;&lt;code&gt;finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="translated">이 사용하는 자원 해제하려면 &lt;code&gt;Deflater&lt;/code&gt; 의 &lt;a href=&quot;#end()&quot;&gt; &lt;code&gt;end()&lt;/code&gt; &lt;/a&gt; 메소드가 명시 적으로 호출해야합니다. 서브 클래스는 서브 클래스가 획득 한 리소스를 정리합니다. 정리를 수행하기 위해 &lt;a href=&quot;#finalize()&quot;&gt; &lt;code&gt;finalize()&lt;/code&gt; &lt;/a&gt; 를 재정의하는 하위 클래스는 &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt; 와 같은 대체 정리 메커니즘을 사용 하고 재정의되는 &lt;code&gt;finalize&lt;/code&gt; 메서드를 제거 하도록 수정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3ecfbdef70a716bdef9e42e4d897d9914e72eeb6" translate="yes" xml:space="preserve">
          <source>To release resources used by this &lt;code&gt;Deflater&lt;/code&gt;, the &lt;a href=&quot;#end()&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt; method should be called explicitly. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;../../lang/object#finalize()&quot;&gt;&lt;code&gt;Object.finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="translated">이 사용하는 자원 해제하려면 &lt;code&gt;Deflater&lt;/code&gt; 의 &lt;a href=&quot;#end()&quot;&gt; &lt;code&gt;end()&lt;/code&gt; &lt;/a&gt; 메소드가 명시 적으로 호출해야합니다. 서브 클래스는 서브 클래스가 획득 한 리소스를 정리합니다. 정리를 수행하기 위해 &lt;a href=&quot;../../lang/object#finalize()&quot;&gt; &lt;code&gt;Object.finalize()&lt;/code&gt; &lt;/a&gt; 를 재정의하는 하위 클래스는 &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt; 와 같은 대체 정리 메커니즘을 사용 하고 재정의되는 &lt;code&gt;finalize&lt;/code&gt; 메서드를 제거 하도록 수정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e236ec7e71d2574877083662b30d529f50a301d7" translate="yes" xml:space="preserve">
          <source>To release resources used by this &lt;code&gt;Inflater&lt;/code&gt;, the &lt;a href=&quot;#end()&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt; method should be called explicitly. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;#finalize()&quot;&gt;&lt;code&gt;finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="translated">이 사용하는 자원 해제하려면 &lt;code&gt;Inflater&lt;/code&gt; 의 &lt;a href=&quot;#end()&quot;&gt; &lt;code&gt;end()&lt;/code&gt; &lt;/a&gt; 메소드가 명시 적으로 호출해야합니다. 서브 클래스는 서브 클래스가 획득 한 리소스를 정리합니다. 정리를 수행하기 위해 &lt;a href=&quot;#finalize()&quot;&gt; &lt;code&gt;finalize()&lt;/code&gt; &lt;/a&gt; 를 재정의하는 하위 클래스는 &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt; 와 같은 대체 정리 메커니즘을 사용 하고 재정의되는 &lt;code&gt;finalize&lt;/code&gt; 메서드를 제거 하도록 수정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4aa8d5918738d70b18174ffbb201b2aea8792d69" translate="yes" xml:space="preserve">
          <source>To release resources used by this &lt;code&gt;Inflater&lt;/code&gt;, the &lt;a href=&quot;#end()&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt; method should be called explicitly. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;../../lang/object#finalize()&quot;&gt;&lt;code&gt;Object.finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="translated">이 사용하는 자원 해제하려면 &lt;code&gt;Inflater&lt;/code&gt; 의 &lt;a href=&quot;#end()&quot;&gt; &lt;code&gt;end()&lt;/code&gt; &lt;/a&gt; 메소드가 명시 적으로 호출해야합니다. 서브 클래스는 서브 클래스가 획득 한 리소스를 정리합니다. 정리를 수행하기 위해 &lt;a href=&quot;../../lang/object#finalize()&quot;&gt; &lt;code&gt;Object.finalize()&lt;/code&gt; &lt;/a&gt; 를 재정의하는 하위 클래스는 &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt; 와 같은 대체 정리 메커니즘을 사용 하고 재정의되는 &lt;code&gt;finalize&lt;/code&gt; 메서드를 제거 하도록 수정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="45d6f38ed252f674914f889667d817984fd3a412" translate="yes" xml:space="preserve">
          <source>To release resources used by this &lt;code&gt;ZipFile&lt;/code&gt;, the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method should be called explicitly or by try-with-resources. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;#finalize()&quot;&gt;&lt;code&gt;finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="translated">이 &lt;code&gt;ZipFile&lt;/code&gt; 에서 사용하는 리소스를 해제하려면 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 메서드를 명시 적으로 또는 try-with-resources로 호출해야합니다. 서브 클래스는 서브 클래스가 획득 한 리소스를 정리합니다. 정리를 수행하기 위해 &lt;a href=&quot;#finalize()&quot;&gt; &lt;code&gt;finalize()&lt;/code&gt; &lt;/a&gt; 를 재정의하는 하위 클래스는 &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt; 와 같은 대체 정리 메커니즘을 사용 하고 재정의되는 &lt;code&gt;finalize&lt;/code&gt; 메서드를 제거 하도록 수정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="58599bd78912685d196879bee828b7253d0ece1c" translate="yes" xml:space="preserve">
          <source>To release resources used by this &lt;code&gt;ZipFile&lt;/code&gt;, the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method should be called explicitly or by try-with-resources. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;../../lang/object#finalize()&quot;&gt;&lt;code&gt;Object.finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="translated">이 &lt;code&gt;ZipFile&lt;/code&gt; 에서 사용하는 리소스를 해제하려면 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 메서드를 명시 적으로 또는 try-with-resources로 호출해야합니다. 서브 클래스는 서브 클래스가 획득 한 리소스를 정리합니다. 정리를 수행하기 위해 &lt;a href=&quot;../../lang/object#finalize()&quot;&gt; &lt;code&gt;Object.finalize()&lt;/code&gt; &lt;/a&gt; 를 재정의하는 하위 클래스는 &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt; 와 같은 대체 정리 메커니즘을 사용 하고 재정의되는 &lt;code&gt;finalize&lt;/code&gt; 메서드를 제거 하도록 수정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="58cde6640f925625e3bb78442215bd8b5a8cc5e8" translate="yes" xml:space="preserve">
          <source>To release resources used by this stream &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; should be called directly or by try-with-resources.</source>
          <target state="translated">이 스트림에서 사용하는 리소스를 해제하려면 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 를 직접 호출하거나 try-with-resources로 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="17085a7c42bc8ba04a89b22173da18e8dfbd6aeb" translate="yes" xml:space="preserve">
          <source>To release resources used by this stream &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; should be called directly or by try-with-resources. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;#finalize()&quot;&gt;&lt;code&gt;finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="translated">이 스트림에서 사용하는 리소스를 해제하려면 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 를 직접 호출하거나 try-with-resources로 호출해야합니다. 서브 클래스는 서브 클래스가 획득 한 리소스를 정리합니다. 정리를 수행하기 위해 &lt;a href=&quot;#finalize()&quot;&gt; &lt;code&gt;finalize()&lt;/code&gt; &lt;/a&gt; 를 재정의하는 하위 클래스는 &lt;a href=&quot;../lang/ref/cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt; 와 같은 대체 정리 메커니즘을 사용 하고 재정의되는 &lt;code&gt;finalize&lt;/code&gt; 메서드를 제거 하도록 수정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7f968f0a8894301500681d593b4361e7b28d0441" translate="yes" xml:space="preserve">
          <source>To release resources used by this stream &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; should be called directly or by try-with-resources. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;../lang/object#finalize()&quot;&gt;&lt;code&gt;Object.finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="translated">이 스트림에서 사용하는 리소스를 해제하려면 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 를 직접 호출하거나 try-with-resources로 호출해야합니다. 서브 클래스는 서브 클래스가 획득 한 리소스를 정리합니다. 정리를 수행하기 위해 &lt;a href=&quot;../lang/object#finalize()&quot;&gt; &lt;code&gt;Object.finalize()&lt;/code&gt; &lt;/a&gt; 를 재정의하는 하위 클래스는 &lt;a href=&quot;../lang/ref/cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt; 와 같은 대체 정리 메커니즘을 사용 하고 재정의되는 &lt;code&gt;finalize&lt;/code&gt; 메서드를 제거 하도록 수정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f583fb3f20043b03ba3a2a6406effbeae1eccf6a" translate="yes" xml:space="preserve">
          <source>To rely on the default type:</source>
          <target state="translated">기본 유형을 사용하려면</target>
        </trans-unit>
        <trans-unit id="91f9cda7b431d0791931992a65a62beb1c70ea1a" translate="yes" xml:space="preserve">
          <source>To remove an attribute by local name and namespace URI, use the &lt;code&gt;removeAttributeNS&lt;/code&gt; method.</source>
          <target state="translated">로컬 이름 및 네임 스페이스 URI로 속성을 제거하려면 &lt;code&gt;removeAttributeNS&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f2f47f1e44b85ff762285f2c5a88392990bee0a" translate="yes" xml:space="preserve">
          <source>To remove the render size setting, pass in a value of &lt;code&gt;null&lt;/code&gt; for &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">렌더링 크기 설정을 제거하려면 값을 전달 &lt;code&gt;null&lt;/code&gt; 에 대한 &lt;code&gt;size&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d2c956991d58c4d59d572d47c59760548a6c093" translate="yes" xml:space="preserve">
          <source>To resize the &lt;code&gt;Component&lt;/code&gt;s to their preferred sizes invoke &lt;code&gt;resetToPreferredSizes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Component&lt;/code&gt; 의 크기를 선호하는 크기로 조정하려면 &lt;code&gt;resetToPreferredSizes&lt;/code&gt; 를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d75120333640b4d1d4805bc00d87a16aaa41463" translate="yes" xml:space="preserve">
          <source>To retrieve a number, use the following code:</source>
          <target state="translated">숫자를 검색하려면 다음 코드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="dbf8b81ecf37a1973c4e33082f309e1de3fee8e2" translate="yes" xml:space="preserve">
          <source>To retrieve all the Principals associated with a &lt;code&gt;Subject&lt;/code&gt;, invoke the &lt;code&gt;getPrincipals&lt;/code&gt; method. To retrieve all the public or private credentials belonging to a &lt;code&gt;Subject&lt;/code&gt;, invoke the &lt;code&gt;getPublicCredentials&lt;/code&gt; method or &lt;code&gt;getPrivateCredentials&lt;/code&gt; method, respectively. To modify the returned &lt;code&gt;Set&lt;/code&gt; of Principals and credentials, use the methods defined in the &lt;code&gt;Set&lt;/code&gt; class. For example:</source>
          <target state="translated">&lt;code&gt;Subject&lt;/code&gt; 와 연관된 모든 프린시 펄을 검색하려면 &lt;code&gt;getPrincipals&lt;/code&gt; 메소드를 호출하십시오 . &lt;code&gt;Subject&lt;/code&gt; 에 속하는 모든 공개 또는 개인 신임 정보를 검색하려면 각각 &lt;code&gt;getPublicCredentials&lt;/code&gt; 메소드 또는 &lt;code&gt;getPrivateCredentials&lt;/code&gt; 메소드를 호출하십시오 . 리턴 된 프린시 펄 및 신임 정보 &lt;code&gt;Set&lt;/code&gt; 를 수정하려면 &lt;code&gt;Set&lt;/code&gt; 클래스에 정의 된 메소드를 사용하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cd7c59a4a30c4a9f9ade76ab24ca6203b8101d8d" translate="yes" xml:space="preserve">
          <source>To retrieve an attribute node by qualified name and namespace URI, use the &lt;code&gt;getAttributeNodeNS&lt;/code&gt; method.</source>
          <target state="translated">규정 된 이름 및 네임 스페이스 URI로 속성 노드를 검색하려면 &lt;code&gt;getAttributeNodeNS&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ffccbd13dfb2daf73f4f42560bc59770446ca868" translate="yes" xml:space="preserve">
          <source>To retrieve current cookie store.</source>
          <target state="translated">현재 쿠키 저장소를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="ec2ce31a9359110a7a91f426462698246d114fe4" translate="yes" xml:space="preserve">
          <source>To see an example which sets this property, see the &lt;a href=&quot;#prototype_example&quot;&gt;class description&lt;/a&gt; above.</source>
          <target state="translated">이 속성을 설정하는 예를 보려면 위 의 &lt;a href=&quot;#prototype_example&quot;&gt;클래스 설명을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="74c90b4c8111fa16e71742d605c41f24836eef5d" translate="yes" xml:space="preserve">
          <source>To select what instrument should play the notes on a particular MIDI channel, two kinds of MIDI message are used that specify a patch location: a bank-select command, and a program-change channel command. The Java Sound equivalent is the &lt;a href=&quot;midichannel#programChange(int,int)&quot;&gt;&lt;code&gt;programChange(int, int)&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;MidiChannel&lt;/code&gt;.</source>
          <target state="translated">특정 MIDI 채널에서 음을 연주해야하는 악기를 선택하기 위해 패치 위치를 지정하는 두 종류의 MIDI 메시지, 즉 뱅크 선택 명령과 프로그램 변경 채널 명령이 사용됩니다. Java Sound에 해당하는 것은 &lt;code&gt;MidiChannel&lt;/code&gt; 의 &lt;a href=&quot;midichannel#programChange(int,int)&quot;&gt; &lt;code&gt;programChange(int, int)&lt;/code&gt; &lt;/a&gt; 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="dafe7f14b12f045174019ecf0206f06223d238c3" translate="yes" xml:space="preserve">
          <source>To select what instrument should play the notes on a particular MIDI channel, two kinds of MIDI message are used that specify a patch location: a bank-select command, and a program-change channel command. The Java Sound equivalent is the &lt;a href=&quot;midichannel#programChange-int-int-&quot;&gt;&lt;code&gt;programChange(int, int)&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;MidiChannel&lt;/code&gt;.</source>
          <target state="translated">특정 MIDI 채널에서 음표를 연주 할 악기를 선택하기 위해 패치 위치를 지정하는 두 가지 종류의 MIDI 메시지 (뱅크 선택 명령 및 프로그램 변경 채널 명령)가 사용됩니다. Java Sound와 동등한 기능은 &lt;code&gt;MidiChannel&lt;/code&gt; 의 &lt;a href=&quot;midichannel#programChange-int-int-&quot;&gt; &lt;code&gt;programChange(int, int)&lt;/code&gt; &lt;/a&gt; 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="1f07255a778509d637268f559910dc6e481f25e8" translate="yes" xml:space="preserve">
          <source>To set an attribute with a qualified name and namespace URI, use the &lt;code&gt;setAttributeNS&lt;/code&gt; method.</source>
          <target state="translated">규정 된 이름 및 네임 스페이스 URI로 속성을 설정하려면 &lt;code&gt;setAttributeNS&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8aa6d3851320ddcb0024e3cd57b86fda3434f003" translate="yes" xml:space="preserve">
          <source>To set the DeclHandler for an XML reader, use the &lt;a href=&quot;../xmlreader#setProperty(java.lang.String,java.lang.Object)&quot;&gt;&lt;code&gt;setProperty&lt;/code&gt;&lt;/a&gt; method with the property name &lt;code&gt;http://xml.org/sax/properties/declaration-handler&lt;/code&gt; and an object implementing this interface (or null) as the value. If the reader does not report declaration events, it will throw a &lt;a href=&quot;../saxnotrecognizedexception&quot;&gt;&lt;code&gt;SAXNotRecognizedException&lt;/code&gt;&lt;/a&gt; when you attempt to register the handler.</source>
          <target state="translated">XML 판독기에 대한 DeclHandler를 설정하려면 속성 이름이 &lt;code&gt;http://xml.org/sax/properties/declaration-handler&lt;/code&gt; 인&lt;a href=&quot;../xmlreader#setProperty(java.lang.String,java.lang.Object)&quot;&gt; &lt;code&gt;setProperty&lt;/code&gt; &lt;/a&gt; 메서드 와이 인터페이스 (또는 null)를 값으로 구현하는 개체를 사용합니다. 판독기가 선언 이벤트를보고하지 않으면 처리기를 등록하려고 할 때 &lt;a href=&quot;../saxnotrecognizedexception&quot;&gt; &lt;code&gt;SAXNotRecognizedException&lt;/code&gt; 이&lt;/a&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="731d23be64e7d2248cfbcbe3e7340e8355ff2ce9" translate="yes" xml:space="preserve">
          <source>To set the LexicalHandler for an XML reader, use the &lt;a href=&quot;../xmlreader#setProperty(java.lang.String,java.lang.Object)&quot;&gt;&lt;code&gt;setProperty&lt;/code&gt;&lt;/a&gt; method with the property name &lt;code&gt;http://xml.org/sax/properties/lexical-handler&lt;/code&gt; and an object implementing this interface (or null) as the value. If the reader does not report lexical events, it will throw a &lt;a href=&quot;../saxnotrecognizedexception&quot;&gt;&lt;code&gt;SAXNotRecognizedException&lt;/code&gt;&lt;/a&gt; when you attempt to register the handler.</source>
          <target state="translated">XML 판독기에 대한 LexicalHandler를 설정하려면 속성 이름이 &lt;code&gt;http://xml.org/sax/properties/lexical-handler&lt;/code&gt; 인&lt;a href=&quot;../xmlreader#setProperty(java.lang.String,java.lang.Object)&quot;&gt; &lt;code&gt;setProperty&lt;/code&gt; &lt;/a&gt; 메서드 와이 인터페이스 (또는 null)를 값으로 구현하는 개체를 사용합니다. 판독기가 어휘 이벤트를보고하지 않으면 처리기를 등록하려고 할 때 &lt;a href=&quot;../saxnotrecognizedexception&quot;&gt; &lt;code&gt;SAXNotRecognizedException&lt;/code&gt; 이&lt;/a&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="44594b4ee0834a754cf5916d75ab0d57ac18a9e1" translate="yes" xml:space="preserve">
          <source>To set the XML value to be the result of an XSLT transform:</source>
          <target state="translated">XML 값을 XSLT 변환의 결과로 설정하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="6abe598d39804a927c2ced4346e73a14a3784062" translate="yes" xml:space="preserve">
          <source>To set the cookie policy of this cookie manager.</source>
          <target state="translated">이 쿠키 관리자의 쿠키 정책을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="95efc3684b4472a3b7cbc30ceb1ddfceedcfd2a8" translate="yes" xml:space="preserve">
          <source>To set the orientation of a single component, use this method. To set the orientation of an entire component hierarchy, use &lt;a href=&quot;#applyComponentOrientation(java.awt.ComponentOrientation)&quot;&gt;&lt;code&gt;applyComponentOrientation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">단일 구성 요소의 방향을 설정하려면이 방법을 사용하십시오. 전체 구성 요소 계층의 방향을 설정하려면 &lt;a href=&quot;#applyComponentOrientation(java.awt.ComponentOrientation)&quot;&gt; &lt;code&gt;applyComponentOrientation&lt;/code&gt; 을&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3c402a91a51f63ce884a93deaad542e147d4280a" translate="yes" xml:space="preserve">
          <source>To simplify the task of setting up the environment required by a JNDI application, application components and service providers may be distributed along with &lt;em&gt;resource files.&lt;/em&gt; A JNDI resource file is a file in the properties file format (see &lt;a href=&quot;../../../java.base/java/util/properties#load(java.io.Reader)&quot;&gt;&lt;code&gt;java.util.Properties&lt;/code&gt;&lt;/a&gt;), containing a list of key/value pairs. The key is the name of the property (e.g. &quot;java.naming.factory.object&quot;) and the value is a string in the format defined for that property. Here is an example of a JNDI resource file:</source>
          <target state="translated">JNDI 응용 프로그램에 필요한 환경 설정 작업을 단순화하기 위해 응용 프로그램 구성 요소 및 서비스 공급자가 &lt;em&gt;리소스 파일&lt;/em&gt; 과 함께 배포 될 수 있습니다 &lt;em&gt;. &lt;/em&gt;JNDI 리소스 파일은 키 / 값 쌍의 목록을 포함하는 속성 파일 형식 ( &lt;a href=&quot;../../../java.base/java/util/properties#load(java.io.Reader)&quot;&gt; &lt;code&gt;java.util.Properties&lt;/code&gt; &lt;/a&gt; 참조 )의 파일입니다 . 키는 속성의 이름 (예 : &quot;java.naming.factory.object&quot;)이고 값은 해당 속성에 대해 정의 된 형식의 문자열입니다. 다음은 JNDI 리소스 파일의 예입니다.</target>
        </trans-unit>
        <trans-unit id="eeb6a793892d451fecc2449a02eb99c7e627a351" translate="yes" xml:space="preserve">
          <source>To simplify the task of setting up the environment required by a JNDI application, application components and service providers may be distributed along with &lt;em&gt;resource files.&lt;/em&gt; A JNDI resource file is a file in the properties file format (see &lt;a href=&quot;../../java/util/properties#load-java.io.Reader-&quot;&gt;&lt;code&gt;&lt;code&gt;java.util.Properties&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;), containing a list of key/value pairs. The key is the name of the property (e.g. &quot;java.naming.factory.object&quot;) and the value is a string in the format defined for that property. Here is an example of a JNDI resource file:</source>
          <target state="translated">JNDI 애플리케이션에 필요한 환경 설정 작업을 단순화하기 위해 애플리케이션 컴포넌트 및 서비스 제공자가 &lt;em&gt;자원 파일&lt;/em&gt; 과 함께 분배 될 수 있습니다 &lt;em&gt;.&lt;/em&gt; JNDI 자원 파일은 키 / 값 쌍의 목록을 포함하는 특성 파일 형식 ( &lt;a href=&quot;../../java/util/properties#load-java.io.Reader-&quot;&gt; &lt;code&gt;&lt;code&gt;java.util.Properties&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 참조 )의 파일입니다 . 키는 속성 이름 (예 : &quot;java.naming.factory.object&quot;)이며 값은 해당 속성에 대해 정의 된 형식의 문자열입니다. 다음은 JNDI 리소스 파일의 예입니다.</target>
        </trans-unit>
        <trans-unit id="b3ac2a7a9cb0bb2873abefd7d35bc80945dadb53" translate="yes" xml:space="preserve">
          <source>To specify a custom closure code or reason code the &lt;code&gt;sendClose&lt;/code&gt; method may be invoked from inside the &lt;code&gt;onClose&lt;/code&gt; invocation:</source>
          <target state="translated">사용자 정의 클로저 코드 또는 이유 코드를 지정하려면 &lt;code&gt;onClose&lt;/code&gt; 호출 내부에서 &lt;code&gt;sendClose&lt;/code&gt; 메소드를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb7dcfade2357e76eeab66e5023506d61009553b" translate="yes" xml:space="preserve">
          <source>To specify a day of the week on or before an exact day of the month, set &lt;em&gt;day-of-month&lt;/em&gt; and &lt;em&gt;day-of-week&lt;/em&gt; to a negative value. For example, to specify the last Wednesday on or before the 21st of March, set &lt;em&gt;month&lt;/em&gt; to &lt;a href=&quot;calendar#MARCH&quot;&gt;&lt;code&gt;MARCH&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;day-of-month&lt;/em&gt; is -21 and &lt;em&gt;day-of-week&lt;/em&gt; is &lt;code&gt;-&lt;/code&gt;&lt;a href=&quot;calendar#WEDNESDAY&quot;&gt;&lt;code&gt;WEDNESDAY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">, 세트 또는 달의 정확한 일 이전의 요일을 지정하려면 &lt;em&gt;하루의 달&lt;/em&gt; 과 &lt;em&gt;요일&lt;/em&gt; 음의 값으로 설정합니다. 예를 들어, 또는 3 월 세트의 21 일 이전의 마지막 수요일을 지정하려면 &lt;em&gt;한 달&lt;/em&gt; 에 &lt;a href=&quot;calendar#MARCH&quot;&gt; &lt;code&gt;MARCH&lt;/code&gt; &lt;/a&gt; , &lt;em&gt;-의 - 월 일&lt;/em&gt; -21과 &lt;em&gt;-의 주 날&lt;/em&gt; 입니다 &lt;code&gt;-&lt;/code&gt; &lt;a href=&quot;calendar#WEDNESDAY&quot;&gt; &lt;code&gt;WEDNESDAY&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="600c1d56e2bfbab8d400f99a6f9b01cc9657e004" translate="yes" xml:space="preserve">
          <source>To specify a day of week on or after an exact day of month, set the &lt;em&gt;month&lt;/em&gt; to an exact month value, &lt;em&gt;day-of-month&lt;/em&gt; to the day on or after which the rule is applied, and &lt;em&gt;day-of-week&lt;/em&gt; to a negative &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field value. For example, to specify the second Sunday of April, set &lt;em&gt;month&lt;/em&gt; to &lt;a href=&quot;calendar#APRIL&quot;&gt;&lt;code&gt;APRIL&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;day-of-month&lt;/em&gt; to 8, and &lt;em&gt;day-of-week&lt;/em&gt; to &lt;code&gt;-&lt;/code&gt;&lt;a href=&quot;calendar#SUNDAY&quot;&gt;&lt;code&gt;SUNDAY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">정확한 요일 또는 그 이후에 요일을 지정하려면 해당 &lt;em&gt;월&lt;/em&gt; 을 정확한 월 값으로 설정하고 , &lt;em&gt;요일을&lt;/em&gt; 규칙이 적용되는 &lt;em&gt;요일&lt;/em&gt; 로 설정하고, &lt;em&gt;요일&lt;/em&gt; 을 음수로 설정하십시오. &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt; 필드 값 예를 들어, 4 월, 세트의 두 번째 일요일 지정 &lt;em&gt;달&lt;/em&gt; 에 &lt;a href=&quot;calendar#APRIL&quot;&gt; &lt;code&gt;APRIL&lt;/code&gt; &lt;/a&gt; , &lt;em&gt;일 - 중 - 달&lt;/em&gt; 8, 및 &lt;em&gt;요일&lt;/em&gt; 에 &lt;code&gt;-&lt;/code&gt; &lt;a href=&quot;calendar#SUNDAY&quot;&gt; &lt;code&gt;SUNDAY&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b0f2993ffeb347d9d1df326129e16ea808f4f2dd" translate="yes" xml:space="preserve">
          <source>To specify alternate caret policies, subclass &lt;code&gt;CaretPolicy&lt;/code&gt; and override &lt;code&gt;getStrongCaret&lt;/code&gt;. &lt;code&gt;getStrongCaret&lt;/code&gt; should inspect the two &lt;code&gt;TextHitInfo&lt;/code&gt; arguments and choose one of them as the strong caret.</source>
          <target state="translated">대체 캐럿 정책을 지정하려면 &lt;code&gt;CaretPolicy&lt;/code&gt; 를 하위 클래스로 &lt;code&gt;getStrongCaret&lt;/code&gt; 재정의 하십시오 . &lt;code&gt;getStrongCaret&lt;/code&gt; 은 두 개의 &lt;code&gt;TextHitInfo&lt;/code&gt; 인수를 검사하고 그중 하나를 강력한 캐럿으로 선택해야합니다.</target>
        </trans-unit>
        <trans-unit id="ab173dd70ae21fda06597bf33b09fae0f077dfa3" translate="yes" xml:space="preserve">
          <source>To specify an attribute by local name and namespace URI, use the &lt;code&gt;setIdAttributeNS&lt;/code&gt; method.</source>
          <target state="translated">로컬 이름 및 네임 스페이스 URI로 속성을 지정하려면 &lt;code&gt;setIdAttributeNS&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="cff0db5d830da38e5dab22f343491d41223cf96f" translate="yes" xml:space="preserve">
          <source>To specify an exact day of month, set the &lt;em&gt;month&lt;/em&gt; and &lt;em&gt;day-of-month&lt;/em&gt; to an exact value, and &lt;em&gt;day-of-week&lt;/em&gt; to zero. For example, to specify March 1, set the &lt;em&gt;month&lt;/em&gt; to &lt;a href=&quot;calendar#MARCH&quot;&gt;&lt;code&gt;MARCH&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;day-of-month&lt;/em&gt; to 1, and &lt;em&gt;day-of-week&lt;/em&gt; to 0.</source>
          <target state="translated">정확한 월을 지정하려면 &lt;em&gt;월&lt;/em&gt; 과 &lt;em&gt;월&lt;/em&gt; 을 정확한 값으로 설정하고 &lt;em&gt;요일&lt;/em&gt; 을 0으로 설정하십시오. 예를 들어, 설정 년 3 월 1 일 지정하려면 &lt;em&gt;한 달&lt;/em&gt; 에 &lt;a href=&quot;calendar#MARCH&quot;&gt; &lt;code&gt;MARCH&lt;/code&gt; &lt;/a&gt; , &lt;em&gt;일-의 달을&lt;/em&gt; 1로하고, &lt;em&gt;요일&lt;/em&gt; 0.</target>
        </trans-unit>
        <trans-unit id="a13182c264e97f96fa818419b7644ee38ec128fd" translate="yes" xml:space="preserve">
          <source>To specify an existing keystore file:</source>
          <target state="translated">기존 키 저장소 파일을 지정하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="ebef5d1fda4022cf205594fb36709781cf042e4a" translate="yes" xml:space="preserve">
          <source>To specify an unlimited cardinality.</source>
          <target state="translated">무제한 카디널리티를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a08abe91e36bf8e0e40db14d1c5e3a4854cb4606" translate="yes" xml:space="preserve">
          <source>To specify other hint values, use the constructor which specifies the rendering hint values as parameters : &lt;a href=&quot;#%3Cinit%3E(java.awt.geom.AffineTransform,java.lang.Object,java.lang.Object)&quot;&gt;&lt;code&gt;FontRenderContext(AffineTransform, Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다른 힌트 값을 지정하려면 렌더링 힌트 값을 매개 변수로 지정하는 생성자를 사용하십시오 : &lt;a href=&quot;#%3Cinit%3E(java.awt.geom.AffineTransform,java.lang.Object,java.lang.Object)&quot;&gt; &lt;code&gt;FontRenderContext(AffineTransform, Object, Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="346177fca6fdf62142f8d6109cf3044e28c817e9" translate="yes" xml:space="preserve">
          <source>To specify the local machine, use &quot;localhost&quot; as the</source>
          <target state="translated">로컬 컴퓨터를 지정하려면 &quot;localhost&quot;를</target>
        </trans-unit>
        <trans-unit id="71610a41fcfd2431be44a9737e9e5d35ee635b42" translate="yes" xml:space="preserve">
          <source>To specify, the last day-of-week of the month, set &lt;em&gt;day-of-week&lt;/em&gt; to a &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; value and &lt;em&gt;day-of-month&lt;/em&gt; to -1. For example, to specify the last Sunday of October, set &lt;em&gt;month&lt;/em&gt; to &lt;a href=&quot;calendar#OCTOBER&quot;&gt;&lt;code&gt;OCTOBER&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;day-of-week&lt;/em&gt; to &lt;a href=&quot;calendar#SUNDAY&quot;&gt;&lt;code&gt;SUNDAY&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;day-of-month&lt;/em&gt; to -1.</source>
          <target state="translated">매월 마지막 요일을 지정하려면 &lt;em&gt;요일&lt;/em&gt; 을 &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt; 값으로 설정하고 &lt;em&gt;일&lt;/em&gt; 을 -1로 설정하십시오. 예를 들어 월, 10 월, 세트의 마지막 일요일 지정 &lt;em&gt;달&lt;/em&gt; 에 &lt;a href=&quot;calendar#OCTOBER&quot;&gt; &lt;code&gt;OCTOBER&lt;/code&gt; &lt;/a&gt; , &lt;em&gt;요일을&lt;/em&gt; 에 &lt;a href=&quot;calendar#SUNDAY&quot;&gt; &lt;code&gt;SUNDAY&lt;/code&gt; &lt;/a&gt; 과 &lt;em&gt;하루의 개월&lt;/em&gt; -1.</target>
        </trans-unit>
        <trans-unit id="dcd96f7bcb124f560aa1419e0165a26c8730f085" translate="yes" xml:space="preserve">
          <source>To start a process with an explicit set of environment variables, first call &lt;a href=&quot;../util/map#clear()&quot;&gt;&lt;code&gt;Map.clear()&lt;/code&gt;&lt;/a&gt; before adding environment variables.</source>
          <target state="translated">명시적인 환경 변수 세트로 프로세스를 시작하려면 환경 변수 를 추가하기 전에 먼저 &lt;a href=&quot;../util/map#clear()&quot;&gt; &lt;code&gt;Map.clear()&lt;/code&gt; &lt;/a&gt; 를 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="dabced04ee8980ac3351cf7550967d78cbcac1de" translate="yes" xml:space="preserve">
          <source>To start a process with an explicit set of environment variables, first call &lt;a href=&quot;../util/map#clear--&quot;&gt;&lt;code&gt;Map.clear()&lt;/code&gt;&lt;/a&gt; before adding environment variables.</source>
          <target state="translated">명시 적 환경 변수 세트로 프로세스를 시작하려면 먼저 환경 변수 를 추가하기 전에 &lt;a href=&quot;../util/map#clear--&quot;&gt; &lt;code&gt;Map.clear()&lt;/code&gt; &lt;/a&gt; 를 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="109df4c1c76c287e2a350cef10089ce448f57153" translate="yes" xml:space="preserve">
          <source>To start recording together with the stream, see &lt;a href=&quot;recordingstream&quot;&gt;&lt;code&gt;RecordingStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">스트림과 함께 녹화를 시작하려면 &lt;a href=&quot;recordingstream&quot;&gt; &lt;code&gt;RecordingStream&lt;/code&gt; 을&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="02e0bc9d899b18cf9a55f9502fac886b934ba436" translate="yes" xml:space="preserve">
          <source>To start the doclet, pass &lt;code&gt;-doclet&lt;/code&gt; followed by the fully-qualified name of the entry point class (i.e. the implementation of this interface) on the javadoc tool command line.</source>
          <target state="translated">doclet을 시작하려면 javadoc 도구 명령 줄에서 &lt;code&gt;-doclet&lt;/code&gt; 다음에 진입 점 클래스 (즉,이 인터페이스의 구현)의 정규화 된 이름을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="92252c4bdd5f6217699cb0901a5e8755053eea3e" translate="yes" xml:space="preserve">
          <source>To statically define events, see &lt;a href=&quot;event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">이벤트를 정적으로 정의하려면 &lt;a href=&quot;event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt; 클래스를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="30bd69c938fd7da58dad1c0549149453e6091cfa" translate="yes" xml:space="preserve">
          <source>To stop the stream, use the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">스트림을 중지하려면 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 메서드를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="b7f5af18360f155ca853cd312d1697693e68e5cb" translate="yes" xml:space="preserve">
          <source>To stop the stream, use the &lt;a href=&quot;eventstream#close()&quot;&gt;&lt;code&gt;EventStream.close()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">스트림을 중지하려면 &lt;a href=&quot;eventstream#close()&quot;&gt; &lt;code&gt;EventStream.close()&lt;/code&gt; &lt;/a&gt; 메서드를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="58629dec74d32767f98759bd723d2f2301a534af" translate="yes" xml:space="preserve">
          <source>To successfully store and retrieve objects from a hashtable, the objects used as keys must implement the &lt;code&gt;hashCode&lt;/code&gt; method and the &lt;code&gt;equals&lt;/code&gt; method.</source>
          <target state="translated">해시 테이블에서 객체를 성공적으로 저장하고 검색하려면 키로 사용 된 객체가 &lt;code&gt;hashCode&lt;/code&gt; 메소드와 &lt;code&gt;equals&lt;/code&gt; 메소드를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="61ba1f124775d658e582d1b9c65013ec1fb595ed" translate="yes" xml:space="preserve">
          <source>To support the most common use cases, the default implementation of this method returns &lt;code&gt;true&lt;/code&gt; when the number of registered parties has become zero as the result of a party invoking &lt;code&gt;arriveAndDeregister&lt;/code&gt;. You can disable this behavior, thus enabling continuation upon future registrations, by overriding this method to always return &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">가장 일반적인 사용 사례를 지원하기 위해이 메소드의 기본 구현은 당사자가 &lt;code&gt;arriveAndDeregister&lt;/code&gt; 를 호출 한 결과 등록 된 당사자 수가 0이되면 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 이 동작을 비활성화하면 항상 &lt;code&gt;false&lt;/code&gt; 를 반환하도록이 메서드를 재정 의하여 향후 등록시 계속할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f368d4ccd74fcc91bcd332a750b4a6a26da1a44d" translate="yes" xml:space="preserve">
          <source>To take into account the difference between the offsets, and adjust the time fields, use &lt;a href=&quot;#withOffsetSameInstant(java.time.ZoneOffset)&quot;&gt;&lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">오프셋 간의 차이를 고려하고 시간 필드를 조정하려면 &lt;a href=&quot;#withOffsetSameInstant(java.time.ZoneOffset)&quot;&gt; &lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="93c821be0e5b126c40cf4d122a421ae1c3b72506" translate="yes" xml:space="preserve">
          <source>To take into account the difference between the offsets, and adjust the time fields, use &lt;a href=&quot;offsetdatetime#withOffsetSameInstant-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">오프셋 간의 차이를 고려하고 시간 필드를 조정하려면 &lt;a href=&quot;offsetdatetime#withOffsetSameInstant-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c9c0200631901a83fac6a3cbd77dd17954ef0002" translate="yes" xml:space="preserve">
          <source>To take into account the difference between the offsets, and adjust the time fields, use &lt;a href=&quot;offsettime#withOffsetSameInstant-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">오프셋 간의 차이를 고려하고 시간 필드를 조정하려면 &lt;a href=&quot;offsettime#withOffsetSameInstant-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e2b9b7d47904152052072084a26e05664421080" translate="yes" xml:space="preserve">
          <source>To test is frame is maximized in &lt;em&gt;some&lt;/em&gt; direction use</source>
          <target state="translated">테스트하기 위해 &lt;em&gt;어떤&lt;/em&gt; 방향으로 프레임이 최대화됩니다.</target>
        </trans-unit>
        <trans-unit id="998c3e1c979aa5e96d08fb1fc19acbddd8d58112" translate="yes" xml:space="preserve">
          <source>To the greatest extent possible, side-effects should be avoided in the definition of extension functions. The implementation evaluating an XPath expression is under no obligation to call extension functions in any particular order or any particular number of times.</source>
          <target state="translated">가능한 한 확장 함수의 정의에서 부작용을 피해야합니다. XPath 표현식을 평가하는 구현은 특정 순서 또는 특정 횟수로 확장 기능을 호출 할 의무가 없습니다.</target>
        </trans-unit>
        <trans-unit id="da5f689d392b60a5f765c1fd511f388a660b7d15" translate="yes" xml:space="preserve">
          <source>To transfer a list of files to/from Java (and the underlying platform) a &lt;code&gt;DataFlavor&lt;/code&gt; of this type/subtype and representation class of &lt;code&gt;java.util.List&lt;/code&gt; is used.</source>
          <target state="translated">Java (및 기본 플랫폼) &lt;code&gt;DataFlavor&lt;/code&gt; 파일 목록을 전송하기 위해이 유형 / 하위 유형 의 DataFlavor 및 &lt;code&gt;java.util.List&lt;/code&gt; 의 표현 클래스 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f461a15833bc38974edc9b81e41a6968b7bb41e3" translate="yes" xml:space="preserve">
          <source>To transfer a list of files to/from Java (and the underlying platform) a &lt;code&gt;DataFlavor&lt;/code&gt; of this type/subtype and representation class of &lt;code&gt;java.util.List&lt;/code&gt; is used. Each element of the list is required/guaranteed to be of type &lt;code&gt;java.io.File&lt;/code&gt;.</source>
          <target state="translated">Java (및 기본 플랫폼) &lt;code&gt;DataFlavor&lt;/code&gt; 파일 목록을 전송하기 위해이 유형 / 하위 유형 의 DataFlavor 및 &lt;code&gt;java.util.List&lt;/code&gt; 의 표현 클래스 가 사용됩니다. 목록의 각 요소는 &lt;code&gt;java.io.File&lt;/code&gt; 유형이어야합니다 / 보장됩니다 .</target>
        </trans-unit>
        <trans-unit id="8877e6d413405c951311656b4041e67d0ae4d3dd" translate="yes" xml:space="preserve">
          <source>To transfer a reference to an arbitrary Java object reference that has no associated MIME Content-type, across a &lt;code&gt;Transferable&lt;/code&gt; interface WITHIN THE SAME JVM, a &lt;code&gt;DataFlavor&lt;/code&gt; with this type/subtype is used, with a &lt;code&gt;representationClass&lt;/code&gt; equal to the type of the class/interface being passed across the &lt;code&gt;Transferable&lt;/code&gt;.</source>
          <target state="translated">걸쳐없고 MIME 콘텐츠 유형과 연결되어, 임의의 자바 오브젝트 참조에 대한 참조를 전달하기 &lt;code&gt;Transferable&lt;/code&gt; 같은 JVM 이내에 인터페이스, &lt;code&gt;DataFlavor&lt;/code&gt; 를 으로이 타입 / 서브 타입으로는 사용 &lt;code&gt;representationClass&lt;/code&gt; 가이 클래스 / 인터페이스의 종류와 동일 &lt;code&gt;Transferable&lt;/code&gt; 을 통해 전달 됩니다.</target>
        </trans-unit>
        <trans-unit id="f5de0e4e24c7ca092b00bfdc400cadfeb27ea717" translate="yes" xml:space="preserve">
          <source>To transform from a GRAY device profile color space to the CIEXYZ Profile Connection Space, the device gray component is transformed by a lookup through the tone reproduction curve (TRC). The result is treated as the achromatic component of the PCS.</source>
          <target state="translated">GRAY 장치 프로파일 색 공간에서 CIEXYZ 프로파일 연결 공간으로 변환하기 위해 장치 회색 구성 요소는 TRC (톤 재생 곡선)를 통한 조회를 통해 변환됩니다. 결과는 PCS의 무채색 성분으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="5a07174d7d9a875abd26ef06df41fb77d752de07" translate="yes" xml:space="preserve">
          <source>To transform from a device profile color space to the CIEXYZ Profile Connection Space, each device color component is first linearized by a lookup through the corresponding tone reproduction curve (TRC). The resulting linear RGB components are converted to the CIEXYZ PCS using a a 3x3 matrix constructed from the RGB colorants.</source>
          <target state="translated">장치 프로파일 색상 공간에서 CIEXYZ 프로파일 연결 공간으로 변환하기 위해 각 장치 색상 구성 요소는 먼저 해당하는 톤 재현 곡선 (TRC)을 통한 조회를 통해 선형화됩니다. 결과 선형 RGB 구성 요소는 RGB 착색제로 구성된 3x3 매트릭스를 사용하여 CIEXYZ PCS로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="541dce2eb8e5e65dd208932059455efbbbdd5166" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;JTree&lt;/code&gt; to display compound nodes (for example, nodes containing both a graphic icon and text), subclass &lt;a href=&quot;tree/treecellrenderer&quot;&gt;&lt;code&gt;TreeCellRenderer&lt;/code&gt;&lt;/a&gt; and use &lt;a href=&quot;#setCellRenderer(javax.swing.tree.TreeCellRenderer)&quot;&gt;&lt;code&gt;setCellRenderer(javax.swing.tree.TreeCellRenderer)&lt;/code&gt;&lt;/a&gt; to tell the tree to use it. To edit such nodes, subclass &lt;a href=&quot;tree/treecelleditor&quot;&gt;&lt;code&gt;TreeCellEditor&lt;/code&gt;&lt;/a&gt; and use &lt;a href=&quot;#setCellEditor(javax.swing.tree.TreeCellEditor)&quot;&gt;&lt;code&gt;setCellEditor(javax.swing.tree.TreeCellEditor)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;JTree&lt;/code&gt; 를 사용 하여 복합 노드 (예 : 그래픽 아이콘과 텍스트를 모두 포함하는 노드)를 표시 하려면 &lt;a href=&quot;tree/treecellrenderer&quot;&gt; &lt;code&gt;TreeCellRenderer&lt;/code&gt; 를&lt;/a&gt; 하위 클래스로 만들고 &lt;a href=&quot;#setCellRenderer(javax.swing.tree.TreeCellRenderer)&quot;&gt; &lt;code&gt;setCellRenderer(javax.swing.tree.TreeCellRenderer)&lt;/code&gt; &lt;/a&gt; 를 사용하여 트리에 사용하도록 지시합니다. 이러한 노드를 편집하려면 &lt;a href=&quot;tree/treecelleditor&quot;&gt; &lt;code&gt;TreeCellEditor&lt;/code&gt; 를&lt;/a&gt; 하위 클래스로 만들고 &lt;a href=&quot;#setCellEditor(javax.swing.tree.TreeCellEditor)&quot;&gt; &lt;code&gt;setCellEditor(javax.swing.tree.TreeCellEditor)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ced88a9229c08f23f786d188d536e8a5f37bcd79" translate="yes" xml:space="preserve">
          <source>To use a grid bag layout effectively, you must customize one or more of the &lt;code&gt;GridBagConstraints&lt;/code&gt; objects that are associated with its components. You customize a &lt;code&gt;GridBagConstraints&lt;/code&gt; object by setting one or more of its instance variables:</source>
          <target state="translated">그리드 백 레이아웃을 효과적으로 사용하려면 해당 구성 요소와 연결된 하나 이상의 &lt;code&gt;GridBagConstraints&lt;/code&gt; 객체를 사용자 정의해야합니다 . 하나 이상의 인스턴스 변수를 설정 하여 &lt;code&gt;GridBagConstraints&lt;/code&gt; 객체를 사용자 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="8623c13d42d340af760abb5fc3f9546ca597d4cb" translate="yes" xml:space="preserve">
          <source>To use a media tracker, create an instance of &lt;code&gt;MediaTracker&lt;/code&gt; and call its &lt;code&gt;addImage&lt;/code&gt; method for each image to be tracked. In addition, each image can be assigned a unique identifier. This identifier controls the priority order in which the images are fetched. It can also be used to identify unique subsets of the images that can be waited on independently. Images with a lower ID are loaded in preference to those with a higher ID number.</source>
          <target state="translated">미디어 추적기를 사용하려면 &lt;code&gt;MediaTracker&lt;/code&gt; 인스턴스를 만들고 추적 할 각 이미지에 대해 &lt;code&gt;addImage&lt;/code&gt; 메서드를 호출합니다 . 또한 각 이미지에 고유 식별자를 할당 할 수 있습니다. 이 식별자는 이미지를 가져 오는 우선 순위를 제어합니다. 또한 독립적으로 기다릴 수있는 이미지의 고유 한 하위 집합을 식별하는 데 사용할 수도 있습니다. ID 번호가 높은 이미지보다 ID가 낮은 이미지가 우선적으로로드됩니다.</target>
        </trans-unit>
        <trans-unit id="edc7310fe4ff06c8c4cd624845fa7121ff8cdef0" translate="yes" xml:space="preserve">
          <source>To use a method which takes an inner class type, pass a reference to one of the constant fields of the inner class. Client code cannot create new instances of the inner class types because none of those classes has a public constructor. For example, to set the color state to monochrome, use the following code:</source>
          <target state="translated">내부 클래스 유형을 취하는 메소드를 사용하려면 내부 클래스의 상수 필드 중 하나에 대한 참조를 전달하십시오. 클라이언트 코드는 내부 클래스 유형의 새 인스턴스를 만들 수 없습니다. 이러한 클래스에는 공용 생성자가 없기 때문입니다. 예를 들어 색상 상태를 단색으로 설정하려면 다음 코드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4650ff308c006c3b337c7bf0332402913ce48c5c" translate="yes" xml:space="preserve">
          <source>To use a method which takes an inner class type, pass a reference to one of the constant fields of the inner class. Client code cannot create new instances of the inner class types because none of those classes has a public constructor. For example, to set the print dialog type to the cross-platform, pure Java print dialog, use the following code:</source>
          <target state="translated">내부 클래스 유형을 취하는 메소드를 사용하려면 내부 클래스의 상수 필드 중 하나에 대한 참조를 전달하십시오. 클라이언트 코드는 내부 클래스 유형의 새 인스턴스를 만들 수 없습니다. 이러한 클래스에는 공용 생성자가 없기 때문입니다. 예를 들어, 인쇄 대화 상자 유형을 플랫폼 간 순수 Java 인쇄 대화 상자로 설정하려면 다음 코드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d27436e6d9d22024446b03c458eb94deba75bfcf" translate="yes" xml:space="preserve">
          <source>To use a particular &lt;a href=&quot;../../../../java.base/java/nio/charset/charset&quot;&gt;charset&lt;/a&gt; to encode the contents of the file, an &lt;code&gt;OutputStreamWriter&lt;/code&gt; with the chosen charset can be created from the &lt;code&gt;OutputStream&lt;/code&gt; from the returned object. If the &lt;code&gt;Writer&lt;/code&gt; from the returned object is directly used for writing, its charset is determined by the implementation. An annotation processing tool may have an &lt;code&gt;-encoding&lt;/code&gt; flag or analogous option for specifying this; otherwise, it will typically be the platform's default encoding.</source>
          <target state="translated">특정 &lt;a href=&quot;../../../../java.base/java/nio/charset/charset&quot;&gt;문자 집합&lt;/a&gt; 을 사용하여 파일의 내용을 인코딩 하려면 반환 된 개체 의 &lt;code&gt;OutputStream&lt;/code&gt; 에서 선택한 문자 &lt;code&gt;OutputStreamWriter&lt;/code&gt; 가진 OutputStreamWriter 를 만들 수 있습니다 . 반환 된 개체 의 &lt;code&gt;Writer&lt;/code&gt; 가 쓰기에 직접 사용되는 경우 해당 문자 집합은 구현에 의해 결정됩니다. 주석 처리 도구에는 이를 지정하기위한 &lt;code&gt;-encoding&lt;/code&gt; 플래그 또는 유사한 옵션이있을 수 있습니다. 그렇지 않으면 일반적으로 플랫폼의 기본 인코딩이됩니다.</target>
        </trans-unit>
        <trans-unit id="c066df81cd98c1d1365b59e66604a023a6ca69df" translate="yes" xml:space="preserve">
          <source>To use a setting control with an event, add a method that returns a &lt;code&gt;boolean&lt;/code&gt; value and takes the setting control as a parameter. Annotate the method with the &lt;code&gt;@SettingDefinition&lt;/code&gt; annotation. By default, the method name is used as the setting name, but the name can be set explicitly by using the &lt;code&gt;@Name&lt;/code&gt; annotation. If the method returns &lt;code&gt;true&lt;/code&gt;, the event will be committed.</source>
          <target state="translated">이벤트와 함께 설정 컨트롤을 사용하려면 &lt;code&gt;boolean&lt;/code&gt; 값 을 반환 하고 설정 컨트롤을 매개 변수로 사용하는 메서드를 추가합니다 . &lt;code&gt;@SettingDefinition&lt;/code&gt; 어노테이션으로 메소드에 어노테이션을 작성하십시오. 기본적으로 메서드 이름이 설정 이름으로 사용되지만 이름은 &lt;code&gt;@Name&lt;/code&gt; 주석 을 사용하여 명시 적으로 설정할 수 있습니다 . 메서드가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 이벤트가 커밋됩니다.</target>
        </trans-unit>
        <trans-unit id="9a678ea08a784c36df7ea29c59f97b488cdde224" translate="yes" xml:space="preserve">
          <source>To use glue, call &lt;code&gt;Box.createGlue&lt;/code&gt; and add the returned component to a container. The glue component has no minimum or preferred size, so it takes no space unless excess space is available. If excess space is available, then the glue component takes its share of available horizontal or vertical space, just like any other component that has no maximum width or height.</source>
          <target state="translated">접착제를 사용하려면 &lt;code&gt;Box.createGlue&lt;/code&gt; 를 호출 하고 반환 된 구성 요소를 컨테이너에 추가합니다. 접착제 구성 요소에는 최소 또는 기본 크기가 없으므로 여분의 공간이 없으면 공간을 차지하지 않습니다. 여분의 공간을 사용할 수있는 경우 접착제 구성 요소는 최대 너비 또는 높이가없는 다른 구성 요소와 마찬가지로 사용 가능한 수평 또는 수직 공간을 차지합니다.</target>
        </trans-unit>
        <trans-unit id="1ad49767bf4a1c0e3e2a5e9df64439a945f9f2cb" translate="yes" xml:space="preserve">
          <source>To use modern schema languages such as W3C XML Schema or RELAX NG instead of DTD, you can configure your parser to be a non-validating parser by leaving the &lt;a href=&quot;#setValidating(boolean)&quot;&gt;&lt;code&gt;setValidating(boolean)&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;false&lt;/code&gt;, then use the &lt;a href=&quot;#setSchema(javax.xml.validation.Schema)&quot;&gt;&lt;code&gt;setSchema(Schema)&lt;/code&gt;&lt;/a&gt; method to associate a schema to a parser.</source>
          <target state="translated">DTD 대신 W3C XML Schema 또는 RELAX NG와 같은 최신 스키마 언어를 사용하려면 &lt;a href=&quot;#setValidating(boolean)&quot;&gt; &lt;code&gt;setValidating(boolean)&lt;/code&gt; &lt;/a&gt; 메서드를 &lt;code&gt;false&lt;/code&gt; 로 두어 파서를 비 검증 파서로 구성한 다음 &lt;a href=&quot;#setSchema(javax.xml.validation.Schema)&quot;&gt; &lt;code&gt;setSchema(Schema)&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 스키마를 파서로.</target>
        </trans-unit>
        <trans-unit id="c89e2157b7e93a7bcebfbc9728b5bc211336c765" translate="yes" xml:space="preserve">
          <source>To use this class as the basis of a synchronizer, redefine the following methods, as applicable, by inspecting and/or modifying the synchronization state using &lt;a href=&quot;#getState()&quot;&gt;&lt;code&gt;getState()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setState(int)&quot;&gt;&lt;code&gt;setState(int)&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;#compareAndSetState(int,int)&quot;&gt;&lt;code&gt;compareAndSetState(int, int)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">이 클래스를 동기화 기의 기반으로 사용하려면 &lt;a href=&quot;#getState()&quot;&gt; &lt;code&gt;getState()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#setState(int)&quot;&gt; &lt;code&gt;setState(int)&lt;/code&gt; &lt;/a&gt; 및 / 또는 &lt;a href=&quot;#compareAndSetState(int,int)&quot;&gt; &lt;code&gt;compareAndSetState(int, int)&lt;/code&gt; &lt;/a&gt; 사용하여 동기화 상태를 검사 및 / 또는 수정하여 해당하는 경우 다음 메서드를 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="8b5faa256a72bd87ad66902ce359b5fa4dc07a0c" translate="yes" xml:space="preserve">
          <source>To use this class as the basis of a synchronizer, redefine the following methods, as applicable, by inspecting and/or modifying the synchronization state using &lt;a href=&quot;abstractqueuedsynchronizer#getState--&quot;&gt;&lt;code&gt;getState()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;abstractqueuedsynchronizer#setState-int-&quot;&gt;&lt;code&gt;setState(int)&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;abstractqueuedsynchronizer#compareAndSetState-int-int-&quot;&gt;&lt;code&gt;compareAndSetState(int, int)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">이 클래스를 동기화 프로그램의 기초로 사용하려면 &lt;a href=&quot;abstractqueuedsynchronizer#getState--&quot;&gt; &lt;code&gt;getState()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;abstractqueuedsynchronizer#setState-int-&quot;&gt; &lt;code&gt;setState(int)&lt;/code&gt; &lt;/a&gt; 및 / 또는 &lt;a href=&quot;abstractqueuedsynchronizer#compareAndSetState-int-int-&quot;&gt; &lt;code&gt;compareAndSetState(int, int)&lt;/code&gt; &lt;/a&gt; 사용하여 동기화 상태를 검사 및 / 또는 수정하여 해당하는 경우 다음 메소드를 재정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="7e6cc05498813ffdab066eef69ac8d90cae6e1cb" translate="yes" xml:space="preserve">
          <source>To use this interface, a developer creating a new editor can have the new component implement the interface. Or the developer can choose a wrapper based approach and provide a companion object which implements the &lt;code&gt;CellEditor&lt;/code&gt; interface (See &lt;code&gt;DefaultCellEditor&lt;/code&gt; for example). The wrapper approach is particularly useful if the user want to use a 3rd party ISV editor with &lt;code&gt;JTable&lt;/code&gt;, but the ISV didn't implement the &lt;code&gt;CellEditor&lt;/code&gt; interface. The user can simply create an object that contains an instance of the 3rd party editor object and &quot;translate&quot; the &lt;code&gt;CellEditor&lt;/code&gt; API into the 3rd party editor's API.</source>
          <target state="translated">이 인터페이스를 사용하기 위해 새 편집기를 만드는 개발자는 새 구성 요소가 인터페이스를 구현하도록 할 수 있습니다. 또는 개발자는 래퍼 기반 접근 방식을 선택하고 &lt;code&gt;CellEditor&lt;/code&gt; 인터페이스 를 구현하는 동반 객체를 제공 할 수 있습니다 ( 예를 들어 &lt;code&gt;DefaultCellEditor&lt;/code&gt; 참조 ). 래퍼 접근 방식은 사용자가 &lt;code&gt;JTable&lt;/code&gt; 과 함께 타사 ISV 편집기를 사용하고 싶지만 ISV가 &lt;code&gt;CellEditor&lt;/code&gt; 인터페이스를 구현하지 않은 경우 특히 유용합니다 . 사용자는 타사 편집기 개체의 인스턴스를 포함하는 개체를 만들고 &lt;code&gt;CellEditor&lt;/code&gt; API를 타사 편집기의 API로 &quot;번역&quot;할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67b95c888473f7898537a4595e5794a82d55cc67" translate="yes" xml:space="preserve">
          <source>To validate one &lt;code&gt;Source&lt;/code&gt; into another kind of &lt;code&gt;Result&lt;/code&gt;, use the identity transformer (see &lt;a href=&quot;../transform/transformerfactory#newTransformer()&quot;&gt;&lt;code&gt;TransformerFactory.newTransformer()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">하나의 &lt;code&gt;Source&lt;/code&gt; 를 다른 종류의 &lt;code&gt;Result&lt;/code&gt; 로 확인하려면 ID 변환기를 사용하십시오 ( &lt;a href=&quot;../transform/transformerfactory#newTransformer()&quot;&gt; &lt;code&gt;TransformerFactory.newTransformer()&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="b737e8d7cd0749fe7af3cbdde2df593c22290739" translate="yes" xml:space="preserve">
          <source>To write the contents of a Source to standard output:</source>
          <target state="translated">소스의 내용을 표준 출력에 쓰려면 :</target>
        </trans-unit>
        <trans-unit id="b3957b540892debf6dc1ef8d89f9aa2666b7352b" translate="yes" xml:space="preserve">
          <source>ToASCII operation can fail. ToASCII fails if any step of it fails. If ToASCII operation fails, an IllegalArgumentException will be thrown. In this case, the input string should not be used in an internationalized domain name.</source>
          <target state="translated">ToASCII 조작이 실패 할 수 있습니다. 단계가 실패하면 ToASCII가 실패합니다. ToASCII 조작이 실패하면 IllegalArgumentException이 발생합니다. 이 경우 국제화 된 도메인 이름에 입력 문자열을 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="ba0a3f3c82b6a5fc5288edead51ddf50d3b0d1e9" translate="yes" xml:space="preserve">
          <source>ToDoubleBiFunction</source>
          <target state="translated">ToDoubleBiFunction</target>
        </trans-unit>
        <trans-unit id="0318cdbb2b34e80a79e890127925ce52072d7f3c" translate="yes" xml:space="preserve">
          <source>ToDoubleBiFunction.applyAsDouble()</source>
          <target state="translated">ToDoubleBiFunction.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="09f750600a104a44d78135d5e870412f3c7805b5" translate="yes" xml:space="preserve">
          <source>ToDoubleFunction</source>
          <target state="translated">ToDoubleFunction</target>
        </trans-unit>
        <trans-unit id="4e2d379b77935a919a92841c689e185cb4a21cb2" translate="yes" xml:space="preserve">
          <source>ToDoubleFunction.applyAsDouble()</source>
          <target state="translated">ToDoubleFunction.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="32c237c8ac27995aa55b0864b8fe91bf8f438790" translate="yes" xml:space="preserve">
          <source>ToIntBiFunction</source>
          <target state="translated">ToIntBiFunction</target>
        </trans-unit>
        <trans-unit id="05cf5723dc4be71476d90209a69fb5b6d835eec9" translate="yes" xml:space="preserve">
          <source>ToIntBiFunction.applyAsInt()</source>
          <target state="translated">ToIntBiFunction.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="91a9b9d60fbf777890e4726e3100e8b9ba66b566" translate="yes" xml:space="preserve">
          <source>ToIntFunction</source>
          <target state="translated">ToIntFunction</target>
        </trans-unit>
        <trans-unit id="f55d62bed2d4830e1e8b4d4e6a85cecdb300e5cd" translate="yes" xml:space="preserve">
          <source>ToIntFunction.applyAsInt()</source>
          <target state="translated">ToIntFunction.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="4949a89642588c0be35330ecc2f3ae51fd705ac1" translate="yes" xml:space="preserve">
          <source>ToLongBiFunction</source>
          <target state="translated">ToLongBiFunction</target>
        </trans-unit>
        <trans-unit id="4bd64f065ed2902bbcd8f76d6e44881bc4118d44" translate="yes" xml:space="preserve">
          <source>ToLongBiFunction.applyAsLong()</source>
          <target state="translated">ToLongBiFunction.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="41f13cd58fc6b1fa34ead7945815dddba3add0bd" translate="yes" xml:space="preserve">
          <source>ToLongFunction</source>
          <target state="translated">ToLongFunction</target>
        </trans-unit>
        <trans-unit id="e56d9ac1d48e88ffbac75f7e19702347c5e304ad" translate="yes" xml:space="preserve">
          <source>ToLongFunction.applyAsLong()</source>
          <target state="translated">ToLongFunction.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="3eaca1a8d0cf29b74a258f818fe7e8e50c017801" translate="yes" xml:space="preserve">
          <source>ToUnicode never fails. In case of any error, the input string is returned unmodified.</source>
          <target state="translated">ToUnicode는 절대 실패하지 않습니다. 오류가 발생하면 입력 문자열이 수정되지 않은 상태로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="226fb00dcae85857dd8afacc31a7c3741fdc264f" translate="yes" xml:space="preserve">
          <source>Together these two values allow a year or month to be divided into weeks.</source>
          <target state="translated">이 두 값을 함께 사용하면 1 년 또는 월을 몇 주로 나눌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8a9868f04561e5997b3c2f342bb195894290ad9" translate="yes" xml:space="preserve">
          <source>Together, spatial and temporal safety ensure that each memory access operation either succeeds - and accesses a valid memory location - or fails.</source>
          <target state="translated">공간적 및 시간적 안전성은 함께 각 메모리 액세스 작업이 성공하고 유효한 메모리 위치에 액세스하거나 실패하도록 보장합니다.</target>
        </trans-unit>
        <trans-unit id="0c757412827fb84e9636802c567ddc1c67ea694f" translate="yes" xml:space="preserve">
          <source>ToggleButton region.</source>
          <target state="translated">ToggleButton 영역.</target>
        </trans-unit>
        <trans-unit id="d68b831ce922a8ef149f2f1c62214c6482970637" translate="yes" xml:space="preserve">
          <source>ToggleButton region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ToggleButton&lt;/code&gt;.</source>
          <target state="translated">ToggleButton 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;ToggleButton&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b78bbf8008c03e4730565193264e3e64a6997b94" translate="yes" xml:space="preserve">
          <source>ToggleButtonBorder</source>
          <target state="translated">ToggleButtonBorder</target>
        </trans-unit>
        <trans-unit id="d220a922b1e915dbdac75c19d1818c1645d9cc06" translate="yes" xml:space="preserve">
          <source>ToggleButtonModel</source>
          <target state="translated">ToggleButtonModel</target>
        </trans-unit>
        <trans-unit id="683bf79e4fdddefcaa45e5500933ac85bb229ea7" translate="yes" xml:space="preserve">
          <source>Toggles the Underline attribute.</source>
          <target state="translated">밑줄 속성을 토글합니다.</target>
        </trans-unit>
        <trans-unit id="1b872d26ed9a37d0cb1b6a84ab2e42dae55a77c9" translate="yes" xml:space="preserve">
          <source>Toggles the bold attribute.</source>
          <target state="translated">굵은 속성을 전환합니다.</target>
        </trans-unit>
        <trans-unit id="bd730c4fe08f8ff532e0dfc8edaf4aeb3bbccc5a" translate="yes" xml:space="preserve">
          <source>Toggles the italic attribute.</source>
          <target state="translated">기울임 꼴 속성을 토글합니다.</target>
        </trans-unit>
        <trans-unit id="00892eaa163e9c57aecf80ab165bf3f566fe3e1e" translate="yes" xml:space="preserve">
          <source>Token had invalid integrity check.</source>
          <target state="translated">토큰에 잘못된 무결성 검사가 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b099a72141eb62ad771b99b713aebac10a2db2e" translate="yes" xml:space="preserve">
          <source>TooManyListenersException</source>
          <target state="translated">TooManyListenersException</target>
        </trans-unit>
        <trans-unit id="9a830c714bb2b52b8f817649335855437ebcb701" translate="yes" xml:space="preserve">
          <source>Tool</source>
          <target state="translated">Tool</target>
        </trans-unit>
        <trans-unit id="5b3ce5d1fc3d8b463b2dc92627e5537e7110ca7a" translate="yes" xml:space="preserve">
          <source>Tool Guides:</source>
          <target state="translated">도구 가이드 :</target>
        </trans-unit>
        <trans-unit id="fbf98d3475cd8e7ce0023df6b5ecf8c149cbff36" translate="yes" xml:space="preserve">
          <source>Tool providers are normally located using the service-provider loading facility defined by &lt;a href=&quot;../serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt;. Each provider must provide a name, and a method to run an instance of the corresponding tool. When a tool is run, it will be provided with an array of string arguments, and a pair of streams: one for normal (or expected) output and the other for reporting any errors that may occur. The interpretation of the string arguments will normally be defined by each individual tool provider, but will generally correspond to the arguments that could be provided to the tool when invoking the tool from the command line.</source>
          <target state="translated">도구 공급자는 일반적으로 &lt;a href=&quot;../serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; 에서&lt;/a&gt; 정의한 서비스 공급자로드 기능을 사용하여 찾습니다 . 각 공급자는 해당 도구의 인스턴스를 실행하기위한 이름과 메서드를 제공해야합니다. 도구가 실행되면 문자열 인수 배열과 스트림 쌍이 제공됩니다. 하나는 정상 (또는 예상) 출력용이고 다른 하나는 발생할 수있는 오류를보고하기위한 것입니다. 문자열 인수의 해석은 일반적으로 각 개별 도구 공급자에 의해 정의되지만 일반적으로 명령 줄에서 도구를 호출 할 때 도구에 제공 될 수있는 인수에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="2465964821ffab0f30173adb50e18b4b07c33308" translate="yes" xml:space="preserve">
          <source>Tool.getSourceVersions()</source>
          <target state="translated">Tool.getSourceVersions()</target>
        </trans-unit>
        <trans-unit id="ca44d4b0cd3f5970bb01aa99598f074dd8256704" translate="yes" xml:space="preserve">
          <source>Tool.run()</source>
          <target state="translated">Tool.run()</target>
        </trans-unit>
        <trans-unit id="15070d24707f510b804c6c45feb278d713ed5452" translate="yes" xml:space="preserve">
          <source>ToolBar region.</source>
          <target state="translated">ToolBar 영역.</target>
        </trans-unit>
        <trans-unit id="ee5eff586a94b2471a79447c828f2a335f0f6606" translate="yes" xml:space="preserve">
          <source>ToolBar region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ToolBar&lt;/code&gt;.</source>
          <target state="translated">ToolBar 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;ToolBar&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ef038e2879004ebd9b53c4cf5bd6bbe3aa4c6da7" translate="yes" xml:space="preserve">
          <source>ToolBar separator region.</source>
          <target state="translated">ToolBar 구분자 영역.</target>
        </trans-unit>
        <trans-unit id="aacd928505acec22915958108a213be277a8855a" translate="yes" xml:space="preserve">
          <source>ToolBar separator region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ToolBarSeparator&lt;/code&gt;.</source>
          <target state="translated">ToolBar 구분자 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;ToolBarSeparator&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d2829e6ea7527ded1454c815a88515eaaf8044d" translate="yes" xml:space="preserve">
          <source>ToolBarBorder</source>
          <target state="translated">ToolBarBorder</target>
        </trans-unit>
        <trans-unit id="086db6083632a387a5bd08783e3bec2e0ab48904" translate="yes" xml:space="preserve">
          <source>ToolBarContListener</source>
          <target state="translated">ToolBarContListener</target>
        </trans-unit>
        <trans-unit id="956e3ed8e195a0e920adc9e8821bed22baf407c7" translate="yes" xml:space="preserve">
          <source>ToolBarFocusListener</source>
          <target state="translated">ToolBarFocusListener</target>
        </trans-unit>
        <trans-unit id="b2df69df3be31703b142b58640f415306119eb39" translate="yes" xml:space="preserve">
          <source>ToolBarUI</source>
          <target state="translated">ToolBarUI</target>
        </trans-unit>
        <trans-unit id="9db5d55f0a18fe16f909e9161136b5b2187f90ab" translate="yes" xml:space="preserve">
          <source>ToolProvider</source>
          <target state="translated">ToolProvider</target>
        </trans-unit>
        <trans-unit id="125c22c4e79d3f1aaa4ff4818affaaa630c94b27" translate="yes" xml:space="preserve">
          <source>ToolProvider.getSystemDocumentationTool()</source>
          <target state="translated">ToolProvider.getSystemDocumentationTool()</target>
        </trans-unit>
        <trans-unit id="5a85c700b447e10795dd82b2c999d7b683f2201d" translate="yes" xml:space="preserve">
          <source>ToolProvider.getSystemJavaCompiler()</source>
          <target state="translated">ToolProvider.getSystemJavaCompiler()</target>
        </trans-unit>
        <trans-unit id="adebd288935819a43f9fa88aef37e1f86d705eb0" translate="yes" xml:space="preserve">
          <source>ToolProvider.getSystemToolClassLoader()</source>
          <target state="translated">ToolProvider.getSystemToolClassLoader()</target>
        </trans-unit>
        <trans-unit id="7adb07c19770cc3b61f6a8a2460accfe9f8e907e" translate="yes" xml:space="preserve">
          <source>ToolTip region.</source>
          <target state="translated">도구 설명 영역.</target>
        </trans-unit>
        <trans-unit id="39f49b28ed2b84b6736d7c3fed882c5f9be9f023" translate="yes" xml:space="preserve">
          <source>ToolTip region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ToolTip&lt;/code&gt;.</source>
          <target state="translated">도구 설명 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;ToolTip&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="38d3412530cce9dcc79ca575d1f0aaee689f4f88" translate="yes" xml:space="preserve">
          <source>ToolTipManager</source>
          <target state="translated">ToolTipManager</target>
        </trans-unit>
        <trans-unit id="568f809ff3e935085ad4022d1c63e42de4db81a4" translate="yes" xml:space="preserve">
          <source>ToolTipManager contains numerous properties for configuring how long it will take for the tooltips to become visible, and how long till they hide. Consider a component that has a different tooltip based on where the mouse is, such as JTree. When the mouse moves into the JTree and over a region that has a valid tooltip, the tooltip will become visible after &lt;code&gt;initialDelay&lt;/code&gt; milliseconds. After &lt;code&gt;dismissDelay&lt;/code&gt; milliseconds the tooltip will be hidden. If the mouse is over a region that has a valid tooltip, and the tooltip is currently visible, when the mouse moves to a region that doesn't have a valid tooltip the tooltip will be hidden. If the mouse then moves back into a region that has a valid tooltip within &lt;code&gt;reshowDelay&lt;/code&gt; milliseconds, the tooltip will immediately be shown, otherwise the tooltip will be shown again after &lt;code&gt;initialDelay&lt;/code&gt; milliseconds.</source>
          <target state="translated">ToolTipManager에는 도구 설명이 표시되는 데 걸리는 시간과 숨길 때까지 걸리는 시간을 구성하기위한 다양한 속성이 포함되어 있습니다. JTree와 같이 마우스의 위치에 따라 다른 툴팁이있는 구성 요소를 고려하십시오. 마우스가 JTree 및 유효한 툴팁이있는 영역 위로 이동하면 &lt;code&gt;initialDelay&lt;/code&gt; 밀리 초 후에 툴팁이 표시됩니다 . &lt;code&gt;dismissDelay&lt;/code&gt; 밀리 초 후에 툴팁이 숨겨집니다. 마우스가 유효한 도구 설명이있는 영역 위에 있고 도구 설명이 현재 표시되어있는 경우 마우스가 유효한 도구 설명이없는 영역으로 이동하면 도구 설명이 숨겨집니다. 마우스가 &lt;code&gt;reshowDelay&lt;/code&gt; 내에 유효한 툴팁이있는 영역으로 다시 이동 하면밀리 초이면 도구 설명이 즉시 표시되고, 그렇지 않으면 &lt;code&gt;initialDelay&lt;/code&gt; 밀리 초 후에 도구 설명이 다시 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="6600982cb7e4358db50baf5b187ed289429d1f18" translate="yes" xml:space="preserve">
          <source>ToolTipManager.insideTimerAction</source>
          <target state="translated">ToolTipManager.insideTimerAction</target>
        </trans-unit>
        <trans-unit id="2316939116e9d0469815a70f03ba93e66d2314d6" translate="yes" xml:space="preserve">
          <source>ToolTipManager.outsideTimerAction</source>
          <target state="translated">ToolTipManager.outsideTimerAction</target>
        </trans-unit>
        <trans-unit id="e863f01069ef272e5960e81e2d6838690abc5d1f" translate="yes" xml:space="preserve">
          <source>ToolTipManager.stillInsideTimerAction</source>
          <target state="translated">ToolTipManager.stillInsideTimerAction</target>
        </trans-unit>
        <trans-unit id="e951ef37536109b81eb0be66b5d6a1a4024fb5db" translate="yes" xml:space="preserve">
          <source>ToolTipUI</source>
          <target state="translated">ToolTipUI</target>
        </trans-unit>
        <trans-unit id="8dc50da42e7d05864e72d6daf9f4b16c0ae24a43" translate="yes" xml:space="preserve">
          <source>Toolkit</source>
          <target state="translated">Toolkit</target>
        </trans-unit>
        <trans-unit id="94ac7ee6ec8c72608b921e020505b99a237e8057" translate="yes" xml:space="preserve">
          <source>Tools can be located using &lt;a href=&quot;../../../java.base/java/util/serviceloader#load(java.lang.Class)&quot;&gt;&lt;code&gt;ServiceLoader.load(Class)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../java.base/java/util/serviceloader#load(java.lang.Class)&quot;&gt; &lt;code&gt;ServiceLoader.load(Class)&lt;/code&gt; &lt;/a&gt; 사용하여 도구를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d0860f604b36747580272753c6007388c2eb7dbf" translate="yes" xml:space="preserve">
          <source>Tools can be located using &lt;a href=&quot;../../java/util/serviceloader#load-java.lang.Class-&quot;&gt;&lt;code&gt;ServiceLoader.load(Class)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../java/util/serviceloader#load-java.lang.Class-&quot;&gt; &lt;code&gt;ServiceLoader.load(Class)&lt;/code&gt; &lt;/a&gt; 사용하여 도구를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c010b505391b31007eb90bfdce58c4e24d5a65c" translate="yes" xml:space="preserve">
          <source>Tools can visualize data in a meaningful way when annotations are used (for example, &lt;code&gt;Label&lt;/code&gt;, &lt;code&gt;Description&lt;/code&gt;, and &lt;code&gt;Timespan&lt;/code&gt;). Annotations applied to an &lt;a href=&quot;event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; class or its fields are included if they are present (indirectly, directly, or associated), have the &lt;code&gt;MetadataDefinition&lt;/code&gt; annotation, and they do not contain enums, arrays, or classes.</source>
          <target state="translated">도구는 주석을 사용할 때 의미있는 방식으로 데이터를 시각화 할 수 있습니다 (예 : &lt;code&gt;Label&lt;/code&gt; , &lt;code&gt;Description&lt;/code&gt; 및 &lt;code&gt;Timespan&lt;/code&gt; ). &lt;a href=&quot;event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt; 클래스 또는 해당 필드에 적용된 주석은 존재 (간접, 직접 또는 연관)되고 &lt;code&gt;MetadataDefinition&lt;/code&gt; 주석이 있고 열거 형, 배열 또는 클래스를 포함하지 않는 경우 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="994e2419403c75aa5d17ef3f957a1d7e69efb722" translate="yes" xml:space="preserve">
          <source>TopLevelWindowListener</source>
          <target state="translated">TopLevelWindowListener</target>
        </trans-unit>
        <trans-unit id="962a55582a58549b015b01f77b02304c255caf89" translate="yes" xml:space="preserve">
          <source>Total distance that will be indented.</source>
          <target state="translated">들여 쓰기 될 총 거리입니다.</target>
        </trans-unit>
        <trans-unit id="3804f76629833c58abdf20e0ebc34b97e73dfaeb" translate="yes" xml:space="preserve">
          <source>Total distance that will be indented. The sum of leftChildIndent and rightChildIndent.</source>
          <target state="translated">들여 쓰기 될 총 거리입니다. leftChildIndent와 rightChildIndent의 합계입니다.</target>
        </trans-unit>
        <trans-unit id="0feecb8e14733606175a5040ce0de446187536bb" translate="yes" xml:space="preserve">
          <source>Traces the activities performed by the com.sun.jdi implementation.</source>
          <target state="translated">com.sun.jdi 구현에 의해 수행 된 활동을 추적합니다.</target>
        </trans-unit>
        <trans-unit id="028d61362e64e62f1cd4e2aeaeff3a1113fd20ea" translate="yes" xml:space="preserve">
          <source>Traces the activities performed by the com.sun.jdi implementation. All trace information is output to System.err. The given trace flags are used to limit the output to only the information desired. The given flags are in effect and the corresponding trace will continue until the next call to this method.</source>
          <target state="translated">com.sun.jdi 구현에 의해 수행 된 활동을 추적합니다. 모든 추적 정보는 System.err에 출력됩니다. 주어진 추적 플래그는 출력을 원하는 정보로만 제한하는 데 사용됩니다. 주어진 플래그가 유효하며 해당 추적은 다음이 메소드 호출까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="53c6cb80e9280eef1127b133e1dde0e7812ea696" translate="yes" xml:space="preserve">
          <source>Tracing enabled for JDWP packets received from target VM.</source>
          <target state="translated">대상 VM에서 수신 된 JDWP 패킷에 대해 추적이 활성화되었습니다.</target>
        </trans-unit>
        <trans-unit id="2266261726b960588064460dc6807683a804d0f5" translate="yes" xml:space="preserve">
          <source>Tracing enabled for JDWP packets sent to target VM.</source>
          <target state="translated">대상 VM으로 전송 된 JDWP 패킷에 대해 추적이 활성화되었습니다.</target>
        </trans-unit>
        <trans-unit id="11f54777a4828a9544b4c6b15cc216e5ad2871c7" translate="yes" xml:space="preserve">
          <source>Tracing enabled for internal event handling.</source>
          <target state="translated">내부 이벤트 처리를 위해 추적이 활성화되었습니다.</target>
        </trans-unit>
        <trans-unit id="2e4dac284d3f376cb8b39ed31096f14a30fe99f5" translate="yes" xml:space="preserve">
          <source>Tracing enabled for internal management of object references.</source>
          <target state="translated">개체 참조의 내부 관리를 위해 추적이 활성화되었습니다.</target>
        </trans-unit>
        <trans-unit id="fb046aea55d429a00dca32abb0ca036844887f75" translate="yes" xml:space="preserve">
          <source>Tracing enabled for internal managment of reference types.</source>
          <target state="translated">참조 유형의 내부 관리를 위해 추적이 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="8e0447f045426fcf17f6cf18cce5f12edd9cfb6f" translate="yes" xml:space="preserve">
          <source>Tracing of this class may be enabled by setting the System property &lt;code&gt;javax.sql.rowset.RowSetFactory.debug&lt;/code&gt; to any value but &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 클래스의 추적은 시스템 속성 &lt;code&gt;javax.sql.rowset.RowSetFactory.debug&lt;/code&gt; 를 &lt;code&gt;false&lt;/code&gt; 이외의 값 으로 설정하여 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b1c5a7af06ba8c911bcfd11f72d7463fed9a472d" translate="yes" xml:space="preserve">
          <source>Track</source>
          <target state="translated">Track</target>
        </trans-unit>
        <trans-unit id="a96b5091f38daf8068bd9ac0a37b2decbe465021" translate="yes" xml:space="preserve">
          <source>Track changes of a column moving due to margin changes.</source>
          <target state="translated">여백 변경으로 인해 이동하는 열의 변경 사항을 추적합니다.</target>
        </trans-unit>
        <trans-unit id="9a40c3d92d113c1ac04c41389c6b999faee59a99" translate="yes" xml:space="preserve">
          <source>Track changes of a column repositioning.</source>
          <target state="translated">열 재배치 변경 사항을 추적합니다.</target>
        </trans-unit>
        <trans-unit id="a66a12c603b3fbbf86b46bf90bf5fd54b23ee71b" translate="yes" xml:space="preserve">
          <source>Track changes to a cell's contents.</source>
          <target state="translated">셀 내용의 변경 사항을 추적합니다.</target>
        </trans-unit>
        <trans-unit id="0717b512caa4830e4107db5c9f9faec9c6e3bb63" translate="yes" xml:space="preserve">
          <source>Track changes to a cell's contents. Invoked when editing is finished. The changes are saved, the editor object is discarded, and the cell is rendered once again.</source>
          <target state="translated">셀 내용의 변경 사항을 추적합니다. 편집이 완료되면 호출됩니다. 변경 사항이 저장되고 편집기 개체가 삭제되고 셀이 다시 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="d625e49ec5cc65508b784b51f3d1a03d13b72768" translate="yes" xml:space="preserve">
          <source>Track changes to selection model, column model, etc. so as to be able to re-place listeners on those in order to pass on information to the Accessibility PropertyChange mechanism</source>
          <target state="translated">Accessibility PropertyChange 메커니즘에 정보를 전달하기 위해 리스너를 대체 할 수 있도록 선택 모델, 열 모델 등에 대한 변경 사항을 추적합니다.</target>
        </trans-unit>
        <trans-unit id="6eb099e7387de6bf85a8d40f06c034d92ac6ecd2" translate="yes" xml:space="preserve">
          <source>Track changes to table cell selections</source>
          <target state="translated">표 셀 선택에 대한 변경 내용 추적</target>
        </trans-unit>
        <trans-unit id="c66b7f009b0167742d640fa262f51cfe24f7e1b6" translate="yes" xml:space="preserve">
          <source>Track changes to the table contents</source>
          <target state="translated">테이블 내용의 변경 내용 추적</target>
        </trans-unit>
        <trans-unit id="65e0a87c099a65a91db2db4f58962627743249c9" translate="yes" xml:space="preserve">
          <source>Track changes to the table contents (column deletions)</source>
          <target state="translated">테이블 내용에 대한 변경 추적 (열 삭제)</target>
        </trans-unit>
        <trans-unit id="1d342438d211067e35724d0a677edc142443b8f5" translate="yes" xml:space="preserve">
          <source>Track changes to the table contents (column insertions)</source>
          <target state="translated">표 내용에 대한 변경 사항 추적 (열 삽입)</target>
        </trans-unit>
        <trans-unit id="50ccbc484c00663890f1f795f217c92c24c3737f" translate="yes" xml:space="preserve">
          <source>Track changes to the table contents (row deletions)</source>
          <target state="translated">테이블 내용에 대한 변경 사항 추적 (행 삭제)</target>
        </trans-unit>
        <trans-unit id="446c13e903ffb2354471305b15a558b362c4fd92" translate="yes" xml:space="preserve">
          <source>Track changes to the table contents (row insertions)</source>
          <target state="translated">표 내용의 변경 사항 추적 (행 삽입)</target>
        </trans-unit>
        <trans-unit id="c5c5e13e2b305456a9dec987c2f6f2dca26195a2" translate="yes" xml:space="preserve">
          <source>Track color</source>
          <target state="translated">트랙 색상</target>
        </trans-unit>
        <trans-unit id="a7b34541c4884c191419a8069a7262444064fc43" translate="yes" xml:space="preserve">
          <source>Track highlight</source>
          <target state="translated">트랙 하이라이트</target>
        </trans-unit>
        <trans-unit id="4e1c4ca37774d9f37a8d64e698f33ad40e088877" translate="yes" xml:space="preserve">
          <source>Track highlight color</source>
          <target state="translated">하이라이트 색상 추적</target>
        </trans-unit>
        <trans-unit id="5b9a3bdff598e81fc2ed4beeeb4183ada9f91af7" translate="yes" xml:space="preserve">
          <source>Track listener</source>
          <target state="translated">리스너 추적</target>
        </trans-unit>
        <trans-unit id="326e5181e6e5a0c5b463c0729cae4b3c6fa659be" translate="yes" xml:space="preserve">
          <source>Track mouse drags.</source>
          <target state="translated">마우스 드래그를 추적합니다.</target>
        </trans-unit>
        <trans-unit id="c6da43d20337b4308ab27a0b80c9c5792dcbfcc6" translate="yes" xml:space="preserve">
          <source>Track mouse movements.</source>
          <target state="translated">마우스 움직임을 추적합니다.</target>
        </trans-unit>
        <trans-unit id="f0223993d591b54255d8e2534e81ee02cfdbffbf" translate="yes" xml:space="preserve">
          <source>Track mouse movements. This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of &lt;code&gt;Foo&lt;/code&gt;.</source>
          <target state="translated">마우스 움직임을 추적합니다. 이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다. &lt;code&gt;Foo&lt;/code&gt; 의 하위 클래스 내에서만 인스턴스화하십시오 .</target>
        </trans-unit>
        <trans-unit id="4d5b26e00df8696f1e65aa8c0001685e90232117" translate="yes" xml:space="preserve">
          <source>Track of the ScrollBar.</source>
          <target state="translated">ScrollBar의 트랙입니다.</target>
        </trans-unit>
        <trans-unit id="7c4baa95635b1a5b70844da0e070e5c3d8aacc62" translate="yes" xml:space="preserve">
          <source>Track of the ScrollBar. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ScrollBarTrack&lt;/code&gt;.</source>
          <target state="translated">ScrollBar의 트랙입니다. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;ScrollBarTrack&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8ac81aad025c15ece6f73ede5d9be10ce3ff9b50" translate="yes" xml:space="preserve">
          <source>Track of the Slider.</source>
          <target state="translated">슬라이더의 트랙.</target>
        </trans-unit>
        <trans-unit id="0277e933fe63e7b985d75afe995bbe8cbe043c54" translate="yes" xml:space="preserve">
          <source>Track of the Slider. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;SliderTrack&lt;/code&gt;.</source>
          <target state="translated">슬라이더의 트랙. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;SliderTrack&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3110b2f188f3db708f8492160a1bb7dbd45632ab" translate="yes" xml:space="preserve">
          <source>Track rectangle</source>
          <target state="translated">직사각형 추적</target>
        </trans-unit>
        <trans-unit id="d2dd7dd67b1998d5b835c2ba1538a4bde306f083" translate="yes" xml:space="preserve">
          <source>Track that the selection model of the TableColumnModel changed.</source>
          <target state="translated">TableColumnModel의 선택 모델이 변경되었는지 추적합니다.</target>
        </trans-unit>
        <trans-unit id="6039ae3bec62ee58d46239c85708e58980430f4a" translate="yes" xml:space="preserve">
          <source>Track.add()</source>
          <target state="translated">Track.add()</target>
        </trans-unit>
        <trans-unit id="c383eb9ec76a8558da2ada8319656f778db25dca" translate="yes" xml:space="preserve">
          <source>Track.get()</source>
          <target state="translated">Track.get()</target>
        </trans-unit>
        <trans-unit id="f06a16518df4333b85e639ec34c445659ec8dcbe" translate="yes" xml:space="preserve">
          <source>Track.remove()</source>
          <target state="translated">Track.remove()</target>
        </trans-unit>
        <trans-unit id="d7cf50c20f4790528323ec22a2123ff40f267630" translate="yes" xml:space="preserve">
          <source>Track.size()</source>
          <target state="translated">Track.size()</target>
        </trans-unit>
        <trans-unit id="c0a1198b7666cb2d73a3a3104c49ade8c53119a2" translate="yes" xml:space="preserve">
          <source>Track.ticks()</source>
          <target state="translated">Track.ticks()</target>
        </trans-unit>
        <trans-unit id="74ea56daea08ea921e0d5a468118b8ca0fbbabb1" translate="yes" xml:space="preserve">
          <source>TrackListener</source>
          <target state="translated">TrackListener</target>
        </trans-unit>
        <trans-unit id="a5b4c1faa7d0457537d0a576a4e1051518a92c7c" translate="yes" xml:space="preserve">
          <source>Tracking an animated image might not always be useful due to the multi-part nature of animated image loading and painting, but it is supported. &lt;code&gt;MediaTracker&lt;/code&gt; treats an animated image as completely loaded when the first frame is completely loaded. At that point, the &lt;code&gt;MediaTracker&lt;/code&gt; signals any waiters that the image is completely loaded. If no &lt;code&gt;ImageObserver&lt;/code&gt;s are observing the image when the first frame has finished loading, the image might flush itself to conserve resources (see &lt;a href=&quot;image#flush()&quot;&gt;&lt;code&gt;Image.flush()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">애니메이션 이미지를 추적하는 것은 애니메이션 이미지로드 및 페인팅의 다중 부분 특성으로 인해 항상 유용하지는 않지만 지원됩니다. &lt;code&gt;MediaTracker&lt;/code&gt; 는 첫 번째 프레임이 완전히로드 될 때 애니메이션 이미지를 완전히로드 된 것으로 처리합니다. 이 시점에서 &lt;code&gt;MediaTracker&lt;/code&gt; 는 이미지가 완전히로드되었음을 웨이터에게 알립니다. 첫 번째 프레임이로드를 마쳤을 때 &lt;code&gt;ImageObserver&lt;/code&gt; 가 이미지를 관찰 하지 않는 경우 이미지가 자체적으로 플러시되어 리소스를 절약 할 수 있습니다 ( &lt;a href=&quot;image#flush()&quot;&gt; &lt;code&gt;Image.flush()&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="a58efd8405db46a290d75d073d8104640ac8bf79" translate="yes" xml:space="preserve">
          <source>Tracking.</source>
          <target state="translated">Tracking.</target>
        </trans-unit>
        <trans-unit id="85320a08907c821c231cad80916218bbb079cb9c" translate="yes" xml:space="preserve">
          <source>Tracking. Table tag &quot;trak&quot; in the Open Type Specification.</source>
          <target state="translated">추적. Open Type 사양의 테이블 태그 「trak」입니다.</target>
        </trans-unit>
        <trans-unit id="983312cae3602bfa06b732c390303d224ae2865c" translate="yes" xml:space="preserve">
          <source>TransactionalWriter</source>
          <target state="translated">TransactionalWriter</target>
        </trans-unit>
        <trans-unit id="6efc1f00062bdc418e52e7a45e8270db5d27a38d" translate="yes" xml:space="preserve">
          <source>TransferHandler</source>
          <target state="translated">TransferHandler</target>
        </trans-unit>
        <trans-unit id="4d39024bf5c0508d93c96f07106cef75e1d3c705" translate="yes" xml:space="preserve">
          <source>TransferHandler.DropLocation</source>
          <target state="translated">TransferHandler.DropLocation</target>
        </trans-unit>
        <trans-unit id="efe59c40447ef80e8562d9b0a2e2377bbef471b6" translate="yes" xml:space="preserve">
          <source>TransferHandler.TransferSupport</source>
          <target state="translated">TransferHandler.TransferSupport</target>
        </trans-unit>
        <trans-unit id="bb5bfba786b0eae0218a1983e05a5411de1d4796" translate="yes" xml:space="preserve">
          <source>TransferQueue</source>
          <target state="translated">TransferQueue</target>
        </trans-unit>
        <trans-unit id="573907bd24612ac4bd00872c28366e83deb01854" translate="yes" xml:space="preserve">
          <source>TransferQueue.getWaitingConsumerCount()</source>
          <target state="translated">TransferQueue.getWaitingConsumerCount()</target>
        </trans-unit>
        <trans-unit id="ca2f116faa0f32c42170a0967ec26a5841ddf432" translate="yes" xml:space="preserve">
          <source>TransferQueue.hasWaitingConsumer()</source>
          <target state="translated">TransferQueue.hasWaitingConsumer()</target>
        </trans-unit>
        <trans-unit id="4323aaff7adee58e9b2c8e02d952d56b56c5ef81" translate="yes" xml:space="preserve">
          <source>TransferQueue.transfer()</source>
          <target state="translated">TransferQueue.transfer()</target>
        </trans-unit>
        <trans-unit id="2e238bfd7c98c64fd2c433c149b7961c4585de03" translate="yes" xml:space="preserve">
          <source>TransferQueue.tryTransfer()</source>
          <target state="translated">TransferQueue.tryTransfer()</target>
        </trans-unit>
        <trans-unit id="f16cd76b3f85cd12bd0f7828042a4912460d34cb" translate="yes" xml:space="preserve">
          <source>TransferSupport</source>
          <target state="translated">TransferSupport</target>
        </trans-unit>
        <trans-unit id="6990335dee7c8275a45849c6fbbf2d43ebf36e28" translate="yes" xml:space="preserve">
          <source>Transferable</source>
          <target state="translated">Transferable</target>
        </trans-unit>
        <trans-unit id="a048d6e6d7ce25b1e50aa81a5c5db3185a0bfb6f" translate="yes" xml:space="preserve">
          <source>Transferring data</source>
          <target state="translated">데이터 전송</target>
        </trans-unit>
        <trans-unit id="e885c1d9baf8cbb3c0238784b38da3846bd64021" translate="yes" xml:space="preserve">
          <source>Transfers bytes from this channel's file to the given writable byte channel.</source>
          <target state="translated">이 채널의 파일에서 지정된 쓰기 가능한 바이트 채널로 바이트를 전송합니다.</target>
        </trans-unit>
        <trans-unit id="db6a55b55707a8b2cb4c137d52447d234470548e" translate="yes" xml:space="preserve">
          <source>Transfers bytes into this channel's file from the given readable byte channel.</source>
          <target state="translated">주어진 읽을 수있는 바이트 채널에서이 채널의 파일로 바이트를 전송합니다.</target>
        </trans-unit>
        <trans-unit id="ae25d2bdbba02d1a038ead90f2f5efded3e23d52" translate="yes" xml:space="preserve">
          <source>Transfers the contents of the system clipboard into the associated text model.</source>
          <target state="translated">시스템 클립 보드의 내용을 관련 텍스트 모델로 전송합니다.</target>
        </trans-unit>
        <trans-unit id="cbd15e68a1ad437641a8f2ad30e88c56745602c4" translate="yes" xml:space="preserve">
          <source>Transfers the contents of the system clipboard into the associated text model. If there is a selection in the associated view, it is replaced with the contents of the clipboard. If there is no selection, the clipboard contents are inserted in front of the current insert position in the associated view. If the clipboard is empty, does nothing.</source>
          <target state="translated">시스템 클립 보드의 내용을 관련 텍스트 모델로 전송합니다. 연결된보기에 선택 항목이 있으면 클립 보드의 내용으로 바뀝니다. 선택 항목이 없으면 클립 보드 내용이 연결된보기의 현재 삽입 위치 앞에 삽입됩니다. 클립 보드가 비어 있으면 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2fa6a81f068210dfbaf40e9bfed692ea6ec54d86" translate="yes" xml:space="preserve">
          <source>Transfers the currently selected range in the associated text model to the system clipboard, leaving the contents in the text model.</source>
          <target state="translated">연관된 텍스트 모델에서 현재 선택된 범위를 시스템 클립 보드로 전송하고 컨텐츠는 텍스트 모델에 남겨 둡니다.</target>
        </trans-unit>
        <trans-unit id="611d1de5340d1e073cceb44e30ed19f5b5770680" translate="yes" xml:space="preserve">
          <source>Transfers the currently selected range in the associated text model to the system clipboard, leaving the contents in the text model. The current selection remains intact. Does nothing for &lt;code&gt;null&lt;/code&gt; selections.</source>
          <target state="translated">연관된 텍스트 모델에서 현재 선택된 범위를 시스템 클립 보드로 전송하고 컨텐츠는 텍스트 모델에 남겨 둡니다. 현재 선택은 그대로 유지됩니다. &lt;code&gt;null&lt;/code&gt; 선택에 대해서는 아무것도하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="35e25f804b7837b202524af028aaad9b7dcb33bd" translate="yes" xml:space="preserve">
          <source>Transfers the currently selected range in the associated text model to the system clipboard, removing the contents from the model.</source>
          <target state="translated">연관된 텍스트 모델에서 현재 선택된 범위를 시스템 클립 보드로 전송하여 모델에서 컨텐츠를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="03b51f11a99e68f0930490fe297cbd6581d1ea4c" translate="yes" xml:space="preserve">
          <source>Transfers the currently selected range in the associated text model to the system clipboard, removing the contents from the model. The current selection is reset. Does nothing for &lt;code&gt;null&lt;/code&gt; selections.</source>
          <target state="translated">연관된 텍스트 모델에서 현재 선택된 범위를 시스템 클립 보드로 전송하여 모델에서 컨텐츠를 제거합니다. 현재 선택이 재설정됩니다. &lt;code&gt;null&lt;/code&gt; 선택에 대해서는 아무것도하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b125d8a36092938479dcc7ee49adeb6009285170" translate="yes" xml:space="preserve">
          <source>Transfers the element to a consumer if it is possible to do so before the timeout elapses.</source>
          <target state="translated">시간 초과가 경과하기 전에 가능한 경우 요소를 소비자에게 전송합니다.</target>
        </trans-unit>
        <trans-unit id="5c9d10af3f672647b4fdfa21f16fbfe5ed54a2b9" translate="yes" xml:space="preserve">
          <source>Transfers the element to a consumer, waiting if necessary to do so.</source>
          <target state="translated">필요한 경우 요소를 소비자에게 전송합니다.</target>
        </trans-unit>
        <trans-unit id="1d93f2dc771c77d1c7018c91e84fbb34bc2155df" translate="yes" xml:space="preserve">
          <source>Transfers the element to a waiting consumer immediately, if possible.</source>
          <target state="translated">가능한 경우 요소를 즉시 대기 소비자에게 전송합니다.</target>
        </trans-unit>
        <trans-unit id="d95d473f4ddddcca073b620f2f4dfda901926428" translate="yes" xml:space="preserve">
          <source>Transfers the focus down one focus traversal cycle.</source>
          <target state="translated">초점을 한 번의 초점 순회주기 아래로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="a649438f3466bfde1245186d107e8aa131a9ed6a" translate="yes" xml:space="preserve">
          <source>Transfers the focus down one focus traversal cycle. If this Container is a focus cycle root, then the focus owner is set to this Container's default Component to focus, and the current focus cycle root is set to this Container. If this Container is not a focus cycle root, then no focus traversal operation occurs.</source>
          <target state="translated">초점을 한 번의 초점 순회주기 아래로 이동합니다. 이 컨테이너가 포커스주기 루트 인 경우 포커스 소유자는 포커스 할 컨테이너의 기본 구성 요소로 설정되고 현재 포커스주기 루트는이 컨테이너로 설정됩니다. 이 컨테이너가 포커스주기 루트가 아니면 포커스 순회 작업이 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4cf02048d56af57db62ca74e366715fef64714da" translate="yes" xml:space="preserve">
          <source>Transfers the focus to the next component, as though this Component were the focus owner.</source>
          <target state="translated">이 컴포넌트가 포커스 소유자 인 것처럼 포커스를 다음 컴포넌트로 전송합니다.</target>
        </trans-unit>
        <trans-unit id="e9d0e96733f538b88f5ddd0ff90dca81a309953d" translate="yes" xml:space="preserve">
          <source>Transfers the focus to the previous component, as though this Component were the focus owner.</source>
          <target state="translated">이 Component가 포커스 소유자 인 것처럼 포커스를 이전 구성 요소로 전송합니다.</target>
        </trans-unit>
        <trans-unit id="4fbf7be553929793707f38c164d9b63a19aeb555" translate="yes" xml:space="preserve">
          <source>Transfers the focus up one focus traversal cycle.</source>
          <target state="translated">초점을 한 초점 순회주기 위로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="39f0ea168130f6ab76321469b3ad2f4afb4a2d4c" translate="yes" xml:space="preserve">
          <source>Transfers the focus up one focus traversal cycle. Typically, the focus owner is set to this Component's focus cycle root, and the current focus cycle root is set to the new focus owner's focus cycle root. If, however, this Component's focus cycle root is a Window, then the focus owner is set to the focus cycle root's default Component to focus, and the current focus cycle root is unchanged.</source>
          <target state="translated">초점을 한 초점 순회주기 위로 이동합니다. 일반적으로 포커스 소유자는이 컴포넌트의 포커스주기 루트로 설정되고 현재 포커스주기 루트는 새 포커스 소유자의 포커스주기 루트로 설정됩니다. 그러나이 컴포넌트의 초점주기 루트가 Window이면 초점 소유자는 초점을 맞추기 위해 초점주기 루트의 기본 컴포넌트로 설정되고 현재 초점주기 루트는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dea51bb13a4467c505ee6181171375f497334d54" translate="yes" xml:space="preserve">
          <source>Transform</source>
          <target state="translated">Transform</target>
        </trans-unit>
        <trans-unit id="e5d5967af8a0915223a35c2324e5a798377e0823" translate="yes" xml:space="preserve">
          <source>Transform the XML &lt;code&gt;Source&lt;/code&gt; to a &lt;code&gt;Result&lt;/code&gt;.</source>
          <target state="translated">XML &lt;code&gt;Source&lt;/code&gt; 를 &lt;code&gt;Result&lt;/code&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="e14559c0bfb9053549b9bac805b4a2bdde7b122a" translate="yes" xml:space="preserve">
          <source>Transform the XML &lt;code&gt;Source&lt;/code&gt; to a &lt;code&gt;Result&lt;/code&gt;. Specific transformation behavior is determined by the settings of the &lt;code&gt;TransformerFactory&lt;/code&gt; in effect when the &lt;code&gt;Transformer&lt;/code&gt; was instantiated and any modifications made to the &lt;code&gt;Transformer&lt;/code&gt; instance.</source>
          <target state="translated">XML &lt;code&gt;Source&lt;/code&gt; 를 &lt;code&gt;Result&lt;/code&gt; 변환합니다 . 특정 변환 동작은 &lt;code&gt;Transformer&lt;/code&gt; 가 인스턴스화 되었을 때 적용 되는 &lt;code&gt;TransformerFactory&lt;/code&gt; 의 설정 과 &lt;code&gt;Transformer&lt;/code&gt; 인스턴스에 대한 수정 사항에 의해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="f16b98c3656818419f9d10d1f16a20949fc0eef8" translate="yes" xml:space="preserve">
          <source>TransformAttribute</source>
          <target state="translated">TransformAttribute</target>
        </trans-unit>
        <trans-unit id="293722d19cfd51e2e5a09dd2550f71abd35c1f40" translate="yes" xml:space="preserve">
          <source>TransformAttribute.IDENTITY</source>
          <target state="translated">TransformAttribute.IDENTITY</target>
        </trans-unit>
        <trans-unit id="6ee4f327b7aa70652e2e446a2c4d3af120dcf41a" translate="yes" xml:space="preserve">
          <source>TransformException</source>
          <target state="translated">TransformException</target>
        </trans-unit>
        <trans-unit id="d199c2bf6323a8eb70bed703a7c121e6a826146e" translate="yes" xml:space="preserve">
          <source>TransformParameterSpec</source>
          <target state="translated">TransformParameterSpec</target>
        </trans-unit>
        <trans-unit id="825c096160931774c002c019a4ad0fbc2477fc69" translate="yes" xml:space="preserve">
          <source>TransformService</source>
          <target state="translated">TransformService</target>
        </trans-unit>
        <trans-unit id="6d60e9f2523110ca1d5308c2a24383c6f841f9e8" translate="yes" xml:space="preserve">
          <source>Transformation warnings and errors are sent to an &lt;a href=&quot;errorlistener&quot;&gt;&lt;code&gt;ErrorListener&lt;/code&gt;&lt;/a&gt;, at which point the application may decide to report the error or warning, and may decide to throw an &lt;code&gt;Exception&lt;/code&gt; for a non-fatal error. The &lt;code&gt;ErrorListener&lt;/code&gt; may be set via &lt;a href=&quot;transformerfactory#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt;&lt;code&gt;TransformerFactory.setErrorListener(javax.xml.transform.ErrorListener)&lt;/code&gt;&lt;/a&gt; for reporting errors that have to do with syntax errors in the transformation instructions, or via &lt;a href=&quot;transformer#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt;&lt;code&gt;Transformer.setErrorListener(javax.xml.transform.ErrorListener)&lt;/code&gt;&lt;/a&gt; to report errors that occur during the transformation. The &lt;code&gt;ErrorListener&lt;/code&gt; on both objects will always be valid and non-&lt;code&gt;null&lt;/code&gt;, whether set by the application or a default implementation provided by the processor.</source>
          <target state="translated">변환 경고 및 오류는 &lt;a href=&quot;errorlistener&quot;&gt; &lt;code&gt;ErrorListener&lt;/code&gt; &lt;/a&gt; 로 전송되며 ,이 시점에서 애플리케이션은 오류 또는 경고를보고하기로 결정하고 치명적이지 않은 오류에 대해 &lt;code&gt;Exception&lt;/code&gt; 를 발생시킬 수 있습니다. &lt;code&gt;ErrorListener&lt;/code&gt; 를을 통해 설정할 수 있습니다 &lt;a href=&quot;transformerfactory#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt; &lt;code&gt;TransformerFactory.setErrorListener(javax.xml.transform.ErrorListener)&lt;/code&gt; &lt;/a&gt; , 또는를 통해 변환 명령의 구문 에러에 관계하는 오류를보고 &lt;a href=&quot;transformer#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt; &lt;code&gt;Transformer.setErrorListener(javax.xml.transform.ErrorListener)&lt;/code&gt; &lt;/a&gt; 보고서 오류 변환 중에 발생합니다. 두 개체 의 &lt;code&gt;ErrorListener&lt;/code&gt; 는 항상 유효하고 &lt;code&gt;null&lt;/code&gt; 이 아닙니다., 응용 프로그램에 의해 설정되거나 프로세서에서 제공하는 기본 구현에 의해 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="17d280e1b48229addd9449adbb6dcaefe36078d8" translate="yes" xml:space="preserve">
          <source>Transformation warnings and errors are sent to an &lt;a href=&quot;errorlistener&quot;&gt;&lt;code&gt;ErrorListener&lt;/code&gt;&lt;/a&gt;, at which point the application may decide to report the error or warning, and may decide to throw an &lt;code&gt;Exception&lt;/code&gt; for a non-fatal error. The &lt;code&gt;ErrorListener&lt;/code&gt; may be set via &lt;a href=&quot;transformerfactory#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt;&lt;code&gt;TransformerFactory.setErrorListener(javax.xml.transform.ErrorListener)&lt;/code&gt;&lt;/a&gt; for reporting errors that have to do with syntax errors in the transformation instructions, or via &lt;a href=&quot;transformer#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt;&lt;code&gt;Transformer.setErrorListener(javax.xml.transform.ErrorListener)&lt;/code&gt;&lt;/a&gt; to report errors that occur during the transformation. The &lt;code&gt;ErrorListener&lt;/code&gt; on both objects will always be valid and non-&lt;code&gt;null&lt;/code&gt;, whether set by the application or a default implementation provided by the processor. The default implementation provided by the processor will report all warnings and errors to &lt;code&gt;System.err&lt;/code&gt; and does not throw any &lt;code&gt;Exception&lt;/code&gt;s. Applications are &lt;em&gt;strongly&lt;/em&gt; encouraged to register and use &lt;code&gt;ErrorListener&lt;/code&gt;s that insure proper behavior for warnings and errors.</source>
          <target state="translated">변환 경고 및 오류는 &lt;a href=&quot;errorlistener&quot;&gt; &lt;code&gt;ErrorListener&lt;/code&gt; &lt;/a&gt; 로 전송되며 ,이 시점에서 애플리케이션은 오류 또는 경고를보고하기로 결정하고 치명적이지 않은 오류에 대해 &lt;code&gt;Exception&lt;/code&gt; 를 발생시킬 수 있습니다. &lt;code&gt;ErrorListener&lt;/code&gt; 를을 통해 설정할 수 있습니다 &lt;a href=&quot;transformerfactory#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt; &lt;code&gt;TransformerFactory.setErrorListener(javax.xml.transform.ErrorListener)&lt;/code&gt; &lt;/a&gt; , 또는를 통해 변환 명령의 구문 에러에 관계하는 오류를보고 &lt;a href=&quot;transformer#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt; &lt;code&gt;Transformer.setErrorListener(javax.xml.transform.ErrorListener)&lt;/code&gt; &lt;/a&gt; 보고서 오류 변환 중에 발생합니다. 두 개체 의 &lt;code&gt;ErrorListener&lt;/code&gt; 는 항상 유효하고 &lt;code&gt;null&lt;/code&gt; 이 아닙니다., 응용 프로그램에 의해 설정되거나 프로세서에서 제공하는 기본 구현에 의해 설정됩니다. 프로세서에서 제공하는 기본 구현은 모든 경고 및 오류를 &lt;code&gt;System.err&lt;/code&gt; 에보 고하고 &lt;code&gt;Exception&lt;/code&gt; 을 발생 시키지 않습니다 . 응용 프로그램은 경고 및 오류에 대한 적절한 동작을 보장 하는 &lt;code&gt;ErrorListener&lt;/code&gt; 를 등록하고 사용 &lt;em&gt;하는&lt;/em&gt; 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="ca4d4304cb107b1cd7b72652d0bb4f5b52d6a971" translate="yes" xml:space="preserve">
          <source>Transformations are applied in the following order:</source>
          <target state="translated">변환은 다음 순서로 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="68c170c0011cf476eed353d994b12887940cfc96" translate="yes" xml:space="preserve">
          <source>Transformer</source>
          <target state="translated">Transformer</target>
        </trans-unit>
        <trans-unit id="2789b5cbd9a2821e99e6a150ac992d10d7316d62" translate="yes" xml:space="preserve">
          <source>TransformerConfigurationException</source>
          <target state="translated">TransformerConfigurationException</target>
        </trans-unit>
        <trans-unit id="883af90d3c9644bced4d5e367780c04a85944999" translate="yes" xml:space="preserve">
          <source>TransformerException</source>
          <target state="translated">TransformerException</target>
        </trans-unit>
        <trans-unit id="e1a68aedb7058709ad3ea45966483e59a98fb00d" translate="yes" xml:space="preserve">
          <source>TransformerFactory</source>
          <target state="translated">TransformerFactory</target>
        </trans-unit>
        <trans-unit id="4542b1eb7fb62d74207fd1d6219436a78ac325f3" translate="yes" xml:space="preserve">
          <source>TransformerFactoryConfigurationError</source>
          <target state="translated">TransformerFactoryConfigurationError</target>
        </trans-unit>
        <trans-unit id="fb2dc21dd896d6d0a0c563c36760eec9b21f031c" translate="yes" xml:space="preserve">
          <source>TransformerHandler</source>
          <target state="translated">TransformerHandler</target>
        </trans-unit>
        <trans-unit id="371c312d7f3d482b6fc14ab5d03492d9b7229384" translate="yes" xml:space="preserve">
          <source>TransformerHandler ready to transform SAX events.</source>
          <target state="translated">TransformerHandler가 SAX 이벤트를 변환 할 준비가되었습니다.</target>
        </trans-unit>
        <trans-unit id="427f8149763a71f58d01809ed2f00fbc5d4a7482" translate="yes" xml:space="preserve">
          <source>Transforms a JAR file to or from a packed stream in Pack200 format.</source>
          <target state="translated">JAR 파일을 Pack200 형식의 압축 스트림으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="6b0dfed1f0918a8c74073e271ac82b12aec57541" translate="yes" xml:space="preserve">
          <source>Transforms a JAR file to or from a packed stream in Pack200 format. Please refer to &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/pack-spec.html&quot;&gt;Network Transfer Format JSR 200 Specification&lt;/a&gt;</source>
          <target state="translated">Pack200 형식의 패킹 된 스트림간에 JAR 파일을 변환합니다. &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/pack-spec.html&quot;&gt;네트워크 전송 형식 JSR 200 사양을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bfa2086e372da8c2a99ed28990f49bfe633f06b9" translate="yes" xml:space="preserve">
          <source>Transforms a JAR file to or from a packed stream in Pack200 format. Please refer to Network Transfer Format JSR 200 Specification at &lt;a href=&quot;http://jcp.org/aboutJava/communityprocess/review/jsr200/index.html&quot;&gt;http://jcp.org/aboutJava/communityprocess/review/jsr200/index.html&lt;/a&gt;</source>
          <target state="translated">JAR 파일을 Pack200 형식의 압축 스트림으로 변환합니다. &lt;a href=&quot;http://jcp.org/aboutJava/communityprocess/review/jsr200/index.html&quot;&gt;http://jcp.org/aboutJava/communityprocess/review/jsr200/index.html의&lt;/a&gt; 네트워크 전송 형식 JSR 200 사양을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ce1a8750249deed19897510d6e0bbdf519c54278" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in the &lt;code&gt;CS_CIEXYZ&lt;/code&gt; conversion color space into this &lt;code&gt;ColorSpace&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CS_CIEXYZ&lt;/code&gt; 변환 색상 공간 에 있다고 가정되는 색상 값 을이 &lt;code&gt;ColorSpace&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="4ef28ab73c441083405e486cd1979ef28ae809b8" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in the &lt;code&gt;CS_CIEXYZ&lt;/code&gt; conversion color space into this ColorSpace.</source>
          <target state="translated">&lt;code&gt;CS_CIEXYZ&lt;/code&gt; 변환 색상 공간 에 있다고 가정되는 색상 값 을이 ColorSpace로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="964d11dff9a0989a4149f3c67f66af739120fa89" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in the CS_CIEXYZ conversion color space into this ColorSpace.</source>
          <target state="translated">CS_CIEXYZ 변환 색상 공간에 있다고 가정되는 색상 값을이 ColorSpace로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="2542311544384b6fa30356588091b1be6a554772" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in the default &lt;code&gt;CS_sRGB&lt;/code&gt; color space into this &lt;code&gt;ColorSpace&lt;/code&gt;.</source>
          <target state="translated">기본 &lt;code&gt;CS_sRGB&lt;/code&gt; 색상 공간에 있다고 가정되는 색상 값 을이 &lt;code&gt;ColorSpace&lt;/code&gt; 로 변환 합니다 .</target>
        </trans-unit>
        <trans-unit id="dfa9fd51cb460bec26ff5242e0db8ea6b0a6ac83" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in the default CS_sRGB color space into this ColorSpace.</source>
          <target state="translated">기본 CS_sRGB 색상 공간에 있다고 가정되는 색상 값을이 ColorSpace로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="dc045311aecd68f69f1dba3f4f42efe9eddea537" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in this &lt;code&gt;ColorSpace&lt;/code&gt; into a value in the default &lt;code&gt;CS_sRGB&lt;/code&gt; color space.</source>
          <target state="translated">이 &lt;code&gt;ColorSpace&lt;/code&gt; 에 있다고 가정 &lt;code&gt;CS_sRGB&lt;/code&gt; 색상 값을 기본 CS_sRGB 색상 공간 의 값으로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="1d88d6d2015b4b3ee02cfb9ba5d6238bdff1e98e" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in this &lt;code&gt;ColorSpace&lt;/code&gt; into the &lt;code&gt;CS_CIEXYZ&lt;/code&gt; conversion color space.</source>
          <target state="translated">이 &lt;code&gt;ColorSpace&lt;/code&gt; 에 있다고 가정되는 색상 값을 &lt;code&gt;CS_CIEXYZ&lt;/code&gt; 변환 색상 공간으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="008d412030a72f05f0293bc6570d816095b1aa78" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in this ColorSpace into a value in the default CS_sRGB color space.</source>
          <target state="translated">이 ColorSpace에 있다고 가정되는 색상 값을 기본 CS_sRGB 색상 공간의 값으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="1ea7bb6bdbb4bfdea703d87698316907483d75ac" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in this ColorSpace into the CS_CIEXYZ conversion color space.</source>
          <target state="translated">이 ColorSpace에 있다고 가정되는 색상 값을 CS_CIEXYZ 변환 색상 공간으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="729ae80f9396d0d5109584099c42768ea904cc0d" translate="yes" xml:space="preserve">
          <source>Transforms a method handle.</source>
          <target state="translated">메서드 핸들을 변환합니다.</target>
        </trans-unit>
        <trans-unit id="8097dc874352f4cc9957266ecd2d1a92fba37bd5" translate="yes" xml:space="preserve">
          <source>Transforms an array of double precision coordinates by this transform and stores the results into an array of floats.</source>
          <target state="translated">이 변환으로 배정 밀도 좌표 배열을 변환하고 결과를 부동 소수점 배열에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="73e8f01ee5be617d9598539b50d8cc74c29c90e2" translate="yes" xml:space="preserve">
          <source>Transforms an array of double precision coordinates by this transform and stores the results into an array of floats. The coordinates are stored in the arrays starting at the specified offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt;.</source>
          <target state="translated">이 변환으로 배정 밀도 좌표 배열을 변환하고 결과를 부동 소수점 배열에 저장합니다. 좌표는 지정된 오프셋에서 시작하여 &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt; 순서로 배열에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="1e4717fc7623f7c6e00900f73d4f9266a97fa7f9" translate="yes" xml:space="preserve">
          <source>Transforms an array of double precision coordinates by this transform.</source>
          <target state="translated">이 변환으로 배정 밀도 좌표의 배열을 변환합니다.</target>
        </trans-unit>
        <trans-unit id="3a2fd7f74a967d647de81bb0c6f63a449d8179b7" translate="yes" xml:space="preserve">
          <source>Transforms an array of double precision coordinates by this transform. The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the indicated offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt;.</source>
          <target state="translated">이 변환으로 배정 밀도 좌표의 배열을 변환합니다. 두 좌표 배열 섹션은 정확히 동일하거나 결과의 유효성에 영향을주지 않고 동일한 배열의 섹션을 겹칠 수 있습니다. 이 방법을 사용하면 원본 좌표를 변환하기 전에 이전 작업으로 덮어 쓰지 않습니다. 좌표는 표시된 오프셋에서 시작하여 &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt; 순서로 배열에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="4ef140d9661d2dc0e577f7a0436ff72089c61235" translate="yes" xml:space="preserve">
          <source>Transforms an array of floating point coordinates by this transform and stores the results into an array of doubles.</source>
          <target state="translated">이 변환으로 부동 소수점 좌표 배열을 변환하고 결과를 double 배열에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="65af84b8e48fadd9fc23c790fb7e4f9cd44e6477" translate="yes" xml:space="preserve">
          <source>Transforms an array of floating point coordinates by this transform and stores the results into an array of doubles. The coordinates are stored in the arrays starting at the specified offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt;.</source>
          <target state="translated">이 변환으로 부동 소수점 좌표 배열을 변환하고 결과를 double 배열에 저장합니다. 좌표는 지정된 오프셋에서 시작하여 &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt; 순서로 배열에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="056bd2fe87e741967309ff6b6dc50db449abb6bc" translate="yes" xml:space="preserve">
          <source>Transforms an array of floating point coordinates by this transform.</source>
          <target state="translated">이 변환으로 부동 소수점 좌표의 배열을 변환합니다.</target>
        </trans-unit>
        <trans-unit id="ae68447ea2bac8c95899c3c56271dfc25c3bd649" translate="yes" xml:space="preserve">
          <source>Transforms an array of floating point coordinates by this transform. The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the specified offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt;.</source>
          <target state="translated">이 변환으로 부동 소수점 좌표의 배열을 변환합니다. 두 좌표 배열 섹션은 정확히 동일하거나 결과의 유효성에 영향을주지 않고 동일한 배열의 섹션을 겹칠 수 있습니다. 이 방법을 사용하면 원본 좌표를 변환하기 전에 이전 작업으로 덮어 쓰지 않습니다. 좌표는 지정된 오프셋에서 시작하여 &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt; 순서로 배열에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="a189d1395e14c8a46d648c528c1c49627d536ccf" translate="yes" xml:space="preserve">
          <source>Transforms an array of point objects by this transform.</source>
          <target state="translated">이 변환으로 점 개체의 배열을 변환합니다.</target>
        </trans-unit>
        <trans-unit id="eba70e5caa5fbc35bab3fd2051fc0975d4383aeb" translate="yes" xml:space="preserve">
          <source>Transforms an array of point objects by this transform. If any element of the &lt;code&gt;ptDst&lt;/code&gt; array is &lt;code&gt;null&lt;/code&gt;, a new &lt;code&gt;Point2D&lt;/code&gt; object is allocated and stored into that element before storing the results of the transformation.</source>
          <target state="translated">이 변환으로 점 개체의 배열을 변환합니다. &lt;code&gt;ptDst&lt;/code&gt; 배열의 요소 가 &lt;code&gt;null&lt;/code&gt; 이면 변환 결과를 저장하기 전에 새 &lt;code&gt;Point2D&lt;/code&gt; 객체가 할당되고 해당 요소에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="927fa967b55d72a90538c5c3704ad73f24ffc275" translate="yes" xml:space="preserve">
          <source>Transforms an array of relative distance vectors by this transform.</source>
          <target state="translated">이 변환으로 상대 거리 벡터의 배열을 변환합니다.</target>
        </trans-unit>
        <trans-unit id="2e4e88dc726d980f33c725b2bd63d5e396026965" translate="yes" xml:space="preserve">
          <source>Transforms an array of relative distance vectors by this transform. A relative distance vector is transformed without applying the translation components of the affine transformation matrix using the following equations:</source>
          <target state="translated">이 변환으로 상대 거리 벡터의 배열을 변환합니다. 상대 거리 벡터는 다음 방정식을 사용하여 아핀 변환 행렬의 변환 구성 요소를 적용하지 않고 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="4a878cef0e487de3222b24a281cfa14ea24046d7" translate="yes" xml:space="preserve">
          <source>Transforms the &lt;code&gt;Raster&lt;/code&gt; using the matrix specified in the constructor.</source>
          <target state="translated">생성자에 지정된 행렬을 사용 하여 &lt;code&gt;Raster&lt;/code&gt; 를 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="0fb30d4e21a4ac5cde40c7f16df8ad43727628d0" translate="yes" xml:space="preserve">
          <source>Transforms the &lt;code&gt;Raster&lt;/code&gt; using the matrix specified in the constructor. An &lt;code&gt;IllegalArgumentException&lt;/code&gt; may be thrown if the number of bands in the source or destination is incompatible with the matrix. See the class comments for more details.</source>
          <target state="translated">생성자에 지정된 행렬을 사용 하여 &lt;code&gt;Raster&lt;/code&gt; 를 변환합니다 . &lt;code&gt;IllegalArgumentException&lt;/code&gt; 가 소스 또는 대상의 밴드 수는 매트릭스 호환되지 않는 경우 발생 될 수있다. 자세한 내용은 수업 댓글을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="1082a333ba612da8e14e625574a4e3c3b0154137" translate="yes" xml:space="preserve">
          <source>Transforms the String into a series of bits that can be compared bitwise to other CollationKeys.</source>
          <target state="translated">문자열을 다른 CollationKey와 비트 단위로 비교할 수있는 일련의 비트로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="25bdaf180ce67e68f08941f5090cebffa74a9d8b" translate="yes" xml:space="preserve">
          <source>Transforms the String into a series of bits that can be compared bitwise to other CollationKeys. CollationKeys provide better performance than Collator.compare when Strings are involved in multiple comparisons. See the Collator class description for an example using CollationKeys.</source>
          <target state="translated">문자열을 다른 CollationKey와 비트 단위로 비교할 수있는 일련의 비트로 변환합니다. CollationKey는 문자열이 여러 비교에 포함될 때 Collator.compare보다 나은 성능을 제공합니다. CollationKeys를 사용한 예제는 Collator 클래스 설명을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="39892d12a2cc739beb6cae6a1582a3e317dae888" translate="yes" xml:space="preserve">
          <source>Transforms the geometry of this &lt;code&gt;Area&lt;/code&gt; using the specified &lt;a href=&quot;affinetransform&quot;&gt;&lt;code&gt;AffineTransform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;affinetransform&quot;&gt; &lt;code&gt;AffineTransform&lt;/code&gt; 을&lt;/a&gt; 사용 하여이 &lt;code&gt;Area&lt;/code&gt; 의 지오메트리를 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="a69e24c911fcf21af2ea7d86a1d9889bceed5e87" translate="yes" xml:space="preserve">
          <source>Transforms the geometry of this &lt;code&gt;Area&lt;/code&gt; using the specified &lt;a href=&quot;affinetransform&quot;&gt;&lt;code&gt;AffineTransform&lt;/code&gt;&lt;/a&gt;. The geometry is transformed in place, which permanently changes the enclosed area defined by this object.</source>
          <target state="translated">지정된 &lt;a href=&quot;affinetransform&quot;&gt; &lt;code&gt;AffineTransform&lt;/code&gt; 을&lt;/a&gt; 사용 하여이 &lt;code&gt;Area&lt;/code&gt; 의 지오메트리를 변환합니다 . 형상이 제자리에서 변형되어이 개체에 의해 정의 된 닫힌 영역이 영구적으로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="51e20dc7854c10e46249bbdcbae2d2f0add8734c" translate="yes" xml:space="preserve">
          <source>Transforms the geometry of this path using the specified &lt;a href=&quot;affinetransform&quot;&gt;&lt;code&gt;AffineTransform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;affinetransform&quot;&gt; &lt;code&gt;AffineTransform&lt;/code&gt; 을&lt;/a&gt; 사용하여이 경로의 지오메트리를 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="fd83e59f39ae4b46235f81fec2901e6bba013680" translate="yes" xml:space="preserve">
          <source>Transforms the geometry of this path using the specified &lt;a href=&quot;affinetransform&quot;&gt;&lt;code&gt;AffineTransform&lt;/code&gt;&lt;/a&gt;. The geometry is transformed in place, which permanently changes the boundary defined by this object.</source>
          <target state="translated">지정된 &lt;a href=&quot;affinetransform&quot;&gt; &lt;code&gt;AffineTransform&lt;/code&gt; 을&lt;/a&gt; 사용하여이 경로의 지오메트리를 변환합니다 . 형상이 제자리에서 변형되어이 객체에 의해 정의 된 경계가 영구적으로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="ced2110be06fab21a481c73f884b4972282935cb" translate="yes" xml:space="preserve">
          <source>Transforms the given class file and returns a new replacement class file.</source>
          <target state="translated">주어진 클래스 파일을 변환하고 새로운 대체 클래스 파일을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="081792ed831d101332b96e13241445d5aa8798ab" translate="yes" xml:space="preserve">
          <source>Transforms the given class file and returns a new replacement class file. This method is invoked when the &lt;a href=&quot;../../../../java.base/java/lang/module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt; bearing &lt;a href=&quot;#transform(java.lang.Module,java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte%5B%5D)&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt; is not overridden.</source>
          <target state="translated">주어진 클래스 파일을 변환하고 새로운 대체 클래스 파일을 반환합니다. 이 메서드는 &lt;a href=&quot;../../../../java.base/java/lang/module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt; 베어링 &lt;a href=&quot;#transform(java.lang.Module,java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte%5B%5D)&quot;&gt; &lt;code&gt;transform&lt;/code&gt; &lt;/a&gt; 이 재정의되지 않은 경우 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="62dfaa310d0a1828c5ee1b085e0538a7560d6840" translate="yes" xml:space="preserve">
          <source>Transforms the relative distance vector specified by &lt;code&gt;ptSrc&lt;/code&gt; and stores the result in &lt;code&gt;ptDst&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ptSrc&lt;/code&gt; 로 지정된 상대 거리 벡터를 변환 하고 결과를 &lt;code&gt;ptDst&lt;/code&gt; 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="a9f8d61813a3e293b4ca94f7bb45f8ad3bc5e7b6" translate="yes" xml:space="preserve">
          <source>Transforms the relative distance vector specified by &lt;code&gt;ptSrc&lt;/code&gt; and stores the result in &lt;code&gt;ptDst&lt;/code&gt;. A relative distance vector is transformed without applying the translation components of the affine transformation matrix using the following equations:</source>
          <target state="translated">&lt;code&gt;ptSrc&lt;/code&gt; 로 지정된 상대 거리 벡터를 변환 하고 결과를 &lt;code&gt;ptDst&lt;/code&gt; 에 저장합니다 . 상대 거리 벡터는 다음 방정식을 사용하여 아핀 변환 행렬의 변환 구성 요소를 적용하지 않고 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="bd1e29595d66356b0ed3f41bfe07285b0309a762" translate="yes" xml:space="preserve">
          <source>Transforms the source &lt;code&gt;BufferedImage&lt;/code&gt; and stores the results in the destination &lt;code&gt;BufferedImage&lt;/code&gt;.</source>
          <target state="translated">소스 &lt;code&gt;BufferedImage&lt;/code&gt; 를 변환하고 결과를 대상 &lt;code&gt;BufferedImage&lt;/code&gt; 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="77f14ea4e39e560eedc22a9f9212197bab2c5835" translate="yes" xml:space="preserve">
          <source>Transforms the source &lt;code&gt;BufferedImage&lt;/code&gt; and stores the results in the destination &lt;code&gt;BufferedImage&lt;/code&gt;. If the color models for the two images do not match, a color conversion into the destination color model is performed. If the destination image is null, a &lt;code&gt;BufferedImage&lt;/code&gt; is created with the source &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">소스 &lt;code&gt;BufferedImage&lt;/code&gt; 를 변환하고 결과를 대상 &lt;code&gt;BufferedImage&lt;/code&gt; 에 저장합니다 . 두 이미지의 색상 모델이 일치하지 않으면 대상 색상 모델로 색상 변환이 수행됩니다. 대상 이미지가 null 인 경우 소스 &lt;code&gt;ColorModel&lt;/code&gt; 을 사용하여 &lt;code&gt;BufferedImage&lt;/code&gt; 가 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="65488e918a1f2eb2eedf027c1cf798535690c673" translate="yes" xml:space="preserve">
          <source>Transforms the source &lt;code&gt;Raster&lt;/code&gt; and stores the results in the destination &lt;code&gt;Raster&lt;/code&gt;.</source>
          <target state="translated">소스 &lt;code&gt;Raster&lt;/code&gt; 를 변환하고 결과를 대상 &lt;code&gt;Raster&lt;/code&gt; 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="c77a56fe300a99482502db75293aa9630b0d7583" translate="yes" xml:space="preserve">
          <source>Transforms the source &lt;code&gt;Raster&lt;/code&gt; and stores the results in the destination &lt;code&gt;Raster&lt;/code&gt;. This operation performs the transform band by band.</source>
          <target state="translated">소스 &lt;code&gt;Raster&lt;/code&gt; 를 변환하고 결과를 대상 &lt;code&gt;Raster&lt;/code&gt; 에 저장합니다 . 이 작업은 대역별로 변환을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="fa3c1bea1212da2ae4065a3397a955cf429226b5" translate="yes" xml:space="preserve">
          <source>Transforms the specified &lt;code&gt;ptSrc&lt;/code&gt; and stores the result in &lt;code&gt;ptDst&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;ptSrc&lt;/code&gt; 를 변환 하고 결과를 &lt;code&gt;ptDst&lt;/code&gt; 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="c9661b85c478517849c21312551c6078efe16afb" translate="yes" xml:space="preserve">
          <source>Transforms the specified &lt;code&gt;ptSrc&lt;/code&gt; and stores the result in &lt;code&gt;ptDst&lt;/code&gt;. If &lt;code&gt;ptDst&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a new &lt;a href=&quot;point2d&quot;&gt;&lt;code&gt;Point2D&lt;/code&gt;&lt;/a&gt; object is allocated and then the result of the transformation is stored in this object. In either case, &lt;code&gt;ptDst&lt;/code&gt;, which contains the transformed point, is returned for convenience. If &lt;code&gt;ptSrc&lt;/code&gt; and &lt;code&gt;ptDst&lt;/code&gt; are the same object, the input point is correctly overwritten with the transformed point.</source>
          <target state="translated">지정된 &lt;code&gt;ptSrc&lt;/code&gt; 를 변환 하고 결과를 &lt;code&gt;ptDst&lt;/code&gt; 에 저장합니다 . 경우 &lt;code&gt;ptDst&lt;/code&gt; 인 &lt;code&gt;null&lt;/code&gt; 새 &lt;a href=&quot;point2d&quot;&gt; &lt;code&gt;Point2D&lt;/code&gt; &lt;/a&gt; 객체 할당하고, 변환의 결과가이 객체에 저장된다. 두 경우 모두 편의를 위해 변환 된 점을 포함하는 &lt;code&gt;ptDst&lt;/code&gt; 가 반환됩니다. 경우 &lt;code&gt;ptSrc&lt;/code&gt; 를 하고 &lt;code&gt;ptDst&lt;/code&gt; 동일한 목적이며, 입력 점은 변화 점으로 겹쳐있다.</target>
        </trans-unit>
        <trans-unit id="8f82ebbda17c9e759e1ffad7e1dff30303e7764b" translate="yes" xml:space="preserve">
          <source>Transforms the specified data using the underlying transform algorithm.</source>
          <target state="translated">기본 변환 알고리즘을 사용하여 지정된 데이터를 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d0e12033b419cf785ff5ab24a812834715d6cad1" translate="yes" xml:space="preserve">
          <source>Transforms the specified data using the underlying transform algorithm. If the output of this transform is an &lt;code&gt;OctetStreamData&lt;/code&gt;, then this method returns &lt;code&gt;null&lt;/code&gt; and the bytes are written to the specified &lt;code&gt;OutputStream&lt;/code&gt;. Otherwise, the &lt;code&gt;OutputStream&lt;/code&gt; is ignored and the method behaves as if &lt;a href=&quot;#transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)&quot;&gt;&lt;code&gt;transform(Data, XMLCryptoContext)&lt;/code&gt;&lt;/a&gt; were invoked.</source>
          <target state="translated">기본 변환 알고리즘을 사용하여 지정된 데이터를 변환합니다. 이 변환의 출력이 &lt;code&gt;OctetStreamData&lt;/code&gt; 인 경우이 메서드는 &lt;code&gt;null&lt;/code&gt; 을 반환 하고 지정된 &lt;code&gt;OutputStream&lt;/code&gt; 에 바이트를 기록 합니다 . 그렇지 않으면 &lt;code&gt;OutputStream&lt;/code&gt; 이 무시되고 메서드는 &lt;a href=&quot;#transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)&quot;&gt; &lt;code&gt;transform(Data, XMLCryptoContext)&lt;/code&gt; &lt;/a&gt; 가 호출 된 것처럼 동작 합니다.</target>
        </trans-unit>
        <trans-unit id="cf5e050a3dfff0a2329b3531d492cc2c81c2d218" translate="yes" xml:space="preserve">
          <source>Transforms the string into a series of characters that can be compared with CollationKey.compareTo.</source>
          <target state="translated">CollationKey.compareTo와 비교할 수있는 일련의 문자로 문자열을 변환합니다.</target>
        </trans-unit>
        <trans-unit id="eb7e25ddf8badb13d9a1bb027a938b890559b651" translate="yes" xml:space="preserve">
          <source>Transforms the string into a series of characters that can be compared with CollationKey.compareTo. This overrides java.text.Collator.getCollationKey. It can be overridden in a subclass.</source>
          <target state="translated">문자열을 CollationKey.compareTo와 비교할 수있는 일련의 문자로 변환합니다. 이것은 java.text.Collator.getCollationKey를 대체합니다. 하위 클래스에서 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1fefb842e9f6899ce3a4d4c1995c23d512c00dce" translate="yes" xml:space="preserve">
          <source>Transforms the string into a series of characters that can be compared with CollationKey.compareTo. This overrides java.text.Collator.getCollationKey. It can be overriden in a subclass.</source>
          <target state="translated">문자열을 CollationKey.compareTo와 비교할 수있는 일련의 문자로 변환합니다. 이것은 java.text.Collator.getCollationKey를 대체합니다. 서브 클래스에서 재정의 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45d5bc5a6500f8488347501d41f5194f063eae68" translate="yes" xml:space="preserve">
          <source>Transient</source>
          <target state="translated">Transient</target>
        </trans-unit>
        <trans-unit id="5b601527b30341f6dd29e898feb7eeba79792b68" translate="yes" xml:space="preserve">
          <source>Transient.value</source>
          <target state="translated">Transient.value</target>
        </trans-unit>
        <trans-unit id="3edb1aa25222ceabd4103d1cb4361d6ac1cc99a5" translate="yes" xml:space="preserve">
          <source>TransitionFrom</source>
          <target state="translated">TransitionFrom</target>
        </trans-unit>
        <trans-unit id="c4d7deea75bf8cc2ff5a46ca2f3c5d3d536dd601" translate="yes" xml:space="preserve">
          <source>TransitionTo</source>
          <target state="translated">TransitionTo</target>
        </trans-unit>
        <trans-unit id="0a0f35f6c482d64e9d2eb22a05cded782e23ff82" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt; rounding according to the context settings.</source>
          <target state="translated">변환 &lt;code&gt;BigInteger&lt;/code&gt; 를 로 &lt;code&gt;BigDecimal&lt;/code&gt; 문맥 설정에 따른 둥근은.</target>
        </trans-unit>
        <trans-unit id="d03eb4f7f8405fdb8867dacd161044d034bbc665" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt; rounding according to the context settings. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is zero.</source>
          <target state="translated">변환 &lt;code&gt;BigInteger&lt;/code&gt; 를 로 &lt;code&gt;BigDecimal&lt;/code&gt; 문맥 설정에 따른 둥근은. &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="12a1e718ac7aa795a8fe3696b9a40666dda52764" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;BigInteger&lt;/code&gt; 를 로 &lt;code&gt;BigDecimal&lt;/code&gt; 와 .</target>
        </trans-unit>
        <trans-unit id="6105c018fcff9985e0750ac22252585e51ec7b62" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is zero.</source>
          <target state="translated">변환 &lt;code&gt;BigInteger&lt;/code&gt; 를 로 &lt;code&gt;BigDecimal&lt;/code&gt; 와 . &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="dd5b4b1af80992eef5e16c9b39f97b4f3e1f5a36" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;BigInteger&lt;/code&gt; 비 스케일 값 및 &lt;code&gt;int&lt;/code&gt; 스케일을 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="be0411dfa667d534a22c4a53a6be0938d5e800dc" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings. The value of the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;(unscaledVal &amp;times;
 10&lt;sup&gt;-scale&lt;/sup&gt;)&lt;/code&gt;, rounded according to the &lt;code&gt;precision&lt;/code&gt; and rounding mode settings.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;BigInteger&lt;/code&gt; 스케일링되지 않은 값과 &lt;code&gt;int&lt;/code&gt; 스케일을 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다. &lt;code&gt;BigDecimal&lt;/code&gt; 의 값 은 &lt;code&gt;(unscaledVal &amp;times; 10&lt;sup&gt;-scale&lt;/sup&gt;)&lt;/code&gt; 이며 &lt;code&gt;precision&lt;/code&gt; 및 반올림 모드 설정 에 따라 반올림됩니다.</target>
        </trans-unit>
        <trans-unit id="1b6def0029fa16478fe3115503d9cb59ebbc8d78" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;BigInteger&lt;/code&gt; 의 스케일 없음의 값과 &lt;code&gt;int&lt;/code&gt; (A) 내로 규모 &lt;code&gt;BigDecimal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26956240efce2987468795621b24536f8bca2a27" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;. The value of the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;(unscaledVal &amp;times; 10&lt;sup&gt;-scale&lt;/sup&gt;)&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;BigInteger&lt;/code&gt; 의 스케일 없음의 값과 &lt;code&gt;int&lt;/code&gt; (A) 내로 규모 &lt;code&gt;BigDecimal&lt;/code&gt; . &lt;code&gt;BigDecimal&lt;/code&gt; 의 값 은 &lt;code&gt;(unscaledVal &amp;times; 10&lt;sup&gt;-scale&lt;/sup&gt;)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4ce05032fd1867eae5c0441d1bd7e85e76c57578" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt; which is the exact decimal representation of the &lt;code&gt;double&lt;/code&gt;'s binary floating-point value.</source>
          <target state="translated">변환 &lt;code&gt;double&lt;/code&gt; 로 &lt;code&gt;BigDecimal&lt;/code&gt; 의 정확한 진수 표현입니다 &lt;code&gt;double&lt;/code&gt; 의 이진 부동 소수점 값.</target>
        </trans-unit>
        <trans-unit id="9f9c3eca67395def6a8eea8b965b84bdef922b01" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt; which is the exact decimal representation of the &lt;code&gt;double&lt;/code&gt;'s binary floating-point value. The scale of the returned &lt;code&gt;BigDecimal&lt;/code&gt; is the smallest value such that &lt;code&gt;(10&lt;sup&gt;scale&lt;/sup&gt; &amp;times; val)&lt;/code&gt; is an integer.</source>
          <target state="translated">번역 &lt;code&gt;double&lt;/code&gt; 로 &lt;code&gt;BigDecimal&lt;/code&gt; 의 정확한 진수 표현입니다 &lt;code&gt;double&lt;/code&gt; 의 이진 부동 소수점 값. 리턴 된 &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일은 &lt;code&gt;(10&lt;sup&gt;scale&lt;/sup&gt; &amp;times; val)&lt;/code&gt; 이 정수 가되도록 가장 작은 값 입니다.</target>
        </trans-unit>
        <trans-unit id="3d72a49bc7047a382617061e3d1cf87143912ad0" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, using the &lt;code&gt;double&lt;/code&gt;'s canonical string representation provided by the &lt;a href=&quot;../lang/double#toString(double)&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">변환 &lt;code&gt;double&lt;/code&gt; (A) 내로 &lt;code&gt;BigDecimal&lt;/code&gt; 은 USING, &lt;code&gt;double&lt;/code&gt; 의해 제공의 표준 문자열 표현 &lt;a href=&quot;../lang/double#toString(double)&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="850828fbab0c584297016129b6722ea3ab1becd2" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, using the &lt;code&gt;double&lt;/code&gt;'s canonical string representation provided by the &lt;a href=&quot;../lang/double#toString-double-&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">변환 &lt;code&gt;double&lt;/code&gt; (A) 내로 &lt;code&gt;BigDecimal&lt;/code&gt; 은 USING, &lt;code&gt;double&lt;/code&gt; 의해 제공의 표준 문자열 표현 &lt;a href=&quot;../lang/double#toString-double-&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="0b0acdda1ea4473fe3d2e28e8fe67dcd75753e77" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;double&lt;/code&gt; 을 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="07b6f09a046e9531f0736348533520c9c60bef0b" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is the smallest value such that &lt;code&gt;(10&lt;sup&gt;scale&lt;/sup&gt; &amp;times; val)&lt;/code&gt; is an integer.</source>
          <target state="translated">번역 &lt;code&gt;double&lt;/code&gt; 컨텍스트 설정에 따라 반올림 double 을 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다. &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일은 다음 과 같이 가장 작은 값입니다 &lt;code&gt;(10&lt;sup&gt;scale&lt;/sup&gt; &amp;times; val)&lt;/code&gt; 이 정수입니다.</target>
        </trans-unit>
        <trans-unit id="6608f31e8495f9aa50255dc68e03f3834b162382" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;long&lt;/code&gt; 을 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="fbb9ae3fa6eeea7b936665101ff5f4c0736effcd" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt;, before any rounding, is zero.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;long&lt;/code&gt; 을 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다. 반올림하기 전에 &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="635f4745b71682203a5238c5e6bfa042b0063cc0" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;long&lt;/code&gt; 로 &lt;code&gt;BigDecimal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="562116b88884d3bfcedf2a8b9d640829218018e9" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is zero.</source>
          <target state="translated">변환 &lt;code&gt;long&lt;/code&gt; 로 &lt;code&gt;BigDecimal&lt;/code&gt; . &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="b907c82bf66d3ce6d264268bcbff642f7fedf705" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;long&lt;/code&gt; 스케일 없음의 값과 &lt;code&gt;int&lt;/code&gt; 로 규모 &lt;code&gt;BigDecimal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2d198ea04a92dbcd6d06acdc6325462bd68c515" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;. This &quot;static factory method&quot; is provided in preference to a (&lt;code&gt;long&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;) constructor because it allows for reuse of frequently used &lt;code&gt;BigDecimal&lt;/code&gt; values..</source>
          <target state="translated">변환 &lt;code&gt;long&lt;/code&gt; 스케일 없음의 값과 &lt;code&gt;int&lt;/code&gt; 로 규모 &lt;code&gt;BigDecimal&lt;/code&gt; . 이 &quot;정적 팩토리 메소드&quot;는 ( &lt;code&gt;long&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; 자주 사용되는 &lt;code&gt;BigDecimal&lt;/code&gt; 값 을 재사용 할 수 있기 때문에 ) 생성자 됩니다.</target>
        </trans-unit>
        <trans-unit id="328cb54a56130646d7b0d65aacc06ab3c98893f6" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; value into a &lt;code&gt;BigDecimal&lt;/code&gt; with a scale of zero.</source>
          <target state="translated">변환 &lt;code&gt;long&lt;/code&gt; 에 값 &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일이 0의를.</target>
        </trans-unit>
        <trans-unit id="a87266ba09f203dfab987bd4aae1f2f0a54ea17f" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; value into a &lt;code&gt;BigDecimal&lt;/code&gt; with a scale of zero. This &quot;static factory method&quot; is provided in preference to a (&lt;code&gt;long&lt;/code&gt;) constructor because it allows for reuse of frequently used &lt;code&gt;BigDecimal&lt;/code&gt; values.</source>
          <target state="translated">변환 &lt;code&gt;long&lt;/code&gt; 에 값을 &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일이 0의를. 이 &quot;정적 팩토리 메소드&quot;는 자주 사용되는 재사용이 가능하기 때문에 ( &lt;code&gt;long&lt;/code&gt; ) 생성자 보다 우선적으로 제공 됩니다. &lt;code&gt;BigDecimal&lt;/code&gt; 값 됩니다.</target>
        </trans-unit>
        <trans-unit id="293fe29f9465e4541236a2a683d8def15ba05e59" translate="yes" xml:space="preserve">
          <source>Translates a CSS declaration to an AttributeSet that represents the CSS declaration.</source>
          <target state="translated">CSS 선언을 CSS 선언을 나타내는 AttributeSet으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="a2038b8e0a8d2a88746d0944bc0680e5c4225d55" translate="yes" xml:space="preserve">
          <source>Translates a CSS declaration to an AttributeSet that represents the CSS declaration. Typically this would be called as a result of encountering an HTML style attribute.</source>
          <target state="translated">CSS 선언을 CSS 선언을 나타내는 AttributeSet으로 변환합니다. 일반적으로 이것은 HTML 스타일 속성을 만난 결과로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ba1acd76cd3eea42897bda6d064b7ff4157cf75a" translate="yes" xml:space="preserve">
          <source>Translates a byte array containing the two's-complement binary representation of a BigInteger into a BigInteger.</source>
          <target state="translated">BigInteger의 2의 보수 이진 표현을 포함하는 바이트 배열을 BigInteger로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="ffc7d4cdbf5c8bddb6c6be1496ec23afbf00d8df" translate="yes" xml:space="preserve">
          <source>Translates a byte array containing the two's-complement binary representation of a BigInteger into a BigInteger. The input array is assumed to be in</source>
          <target state="translated">BigInteger의 2의 보수 2 진 표현을 포함하는 바이트 배열을 BigInteger로 변환합니다. 입력 배열은</target>
        </trans-unit>
        <trans-unit id="f6e9ef09a1e840c594581eca9c0f1f810823f760" translate="yes" xml:space="preserve">
          <source>Translates a byte sub-array containing the two's-complement binary representation of a BigInteger into a BigInteger.</source>
          <target state="translated">BigInteger의 2의 보수 이진 표현을 포함하는 바이트 하위 배열을 BigInteger로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="fb40a58c27fbf7574f2d1a942c0afe8577489941" translate="yes" xml:space="preserve">
          <source>Translates a byte sub-array containing the two's-complement binary representation of a BigInteger into a BigInteger. The sub-array is specified via an offset into the array and a length. The sub-array is assumed to be in</source>
          <target state="translated">BigInteger의 2의 보수 이진 표현을 포함하는 바이트 하위 배열을 BigInteger로 변환합니다. 하위 배열은 배열의 오프셋과 길이를 통해 지정됩니다. 하위 배열은</target>
        </trans-unit>
        <trans-unit id="9b3629c62a2274b286689ce1b5d3d88452dff8ed" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor and with rounding according to the context settings.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자 배열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하여 &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 생성자와 동일한 문자 시퀀스를 허용 하고 컨텍스트 설정에 따라 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="66f3db73a74de24506c7866e399005f8c48e2675" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, while allowing a sub-array to be specified and with rounding according to the context settings.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자 배열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; , &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 생성자 와 동일한 문자 시퀀스 를 허용하면서 하위 배열을 지정하고 컨텍스트 설정에 따라 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="ddeef8af0afe04fb79f071516822c06333c6d754" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, while allowing a sub-array to be specified.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자 배열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하여 &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 생성자 와 동일한 문자 시퀀스 를 허용하면서 하위 배열을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="302e91b8e2e2d67f864740967f0d29da445a4655" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자 배열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하여 &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 생성자 와 동일한 문자 시퀀스를 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="e95a387e37c7d74dbc7c9f0331125aee98e460c5" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor and with rounding according to the context settings.</source>
          <target state="translated">(A)의 문자 배열 표현 변환 &lt;code&gt;BigDecimal&lt;/code&gt; (A) 내로 &lt;code&gt;BigDecimal&lt;/code&gt; 하고 &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 과 동일한 문자 시퀀스를 허용합니다. 생성자와 하고 컨텍스트 설정에 따라 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="bda463fe5a4d05c22f4655928b6f483669d25433" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, while allowing a sub-array to be specified and with rounding according to the context settings.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자 배열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하고 &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 과 동일한 문자 시퀀스를 허용합니다. 생성자 를 허용하면서 서브 어레이를 지정할 수 있으며 컨텍스트 설정에 따라 반올림 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5367af291d1dad8cf8aee053e94387ebe41d59db" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, while allowing a sub-array to be specified.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자 배열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하고 &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 과 동일한 문자 시퀀스를 허용합니다. 생성자 를 허용하면서 하위 배열을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6cbb8f1f8949120d165c79b502c88af315638ba" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자 배열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하여&lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 생성자.</target>
        </trans-unit>
        <trans-unit id="caaec521da0f0769da2d9ee6de81cb7b5c669360" translate="yes" xml:space="preserve">
          <source>Translates a key object, whose provider may be unknown or potentially untrusted, into a corresponding key object of this key factory.</source>
          <target state="translated">공급자를 알 수 없거나 신뢰할 수없는 키 객체를이 키 팩토리의 해당 키 객체로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d2aff912a8bf73e171f624f60eac67132e23fef3" translate="yes" xml:space="preserve">
          <source>Translates a key object, whose provider may be unknown or potentially untrusted, into a corresponding key object of this secret-key factory.</source>
          <target state="translated">공급자를 알 수 없거나 신뢰할 수없는 키 객체를이 비밀 키 팩토리의 해당 키 객체로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d55036512c3d06de57f540a3a010abfa06e4e9a7" translate="yes" xml:space="preserve">
          <source>Translates a string from ASCII Compatible Encoding (ACE) to Unicode, as defined by the ToUnicode operation of &lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt; 의 ToUnicode 조작에 의해 정의 된대로 ASCII 호환 인코딩 (ACE)에서 유니 코드로 문자열을 변환합니다. .</target>
        </trans-unit>
        <trans-unit id="66cd75f6dd22c7f795ae20a14841ef264f9d61cb" translate="yes" xml:space="preserve">
          <source>Translates a string from ASCII Compatible Encoding (ACE) to Unicode, as defined by the ToUnicode operation of &lt;a href=&quot;https://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt; 의 ToUnicode 작업에 정의 된대로 ASCII ACE (호환 가능한 인코딩)에서 유니 코드로 문자열을 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b943d5a14e4888451ba8fa6215b0e7f72d3762c5" translate="yes" xml:space="preserve">
          <source>Translates a string from Unicode to ASCII Compatible Encoding (ACE), as defined by the ToASCII operation of &lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt; 의 ToASCII 조작으로 정의 된대로 문자열을 유니 코드에서 ASCII 호환 인코딩 (ACE)으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="5248c95e2507be872658bd65e7738e6129b9da8e" translate="yes" xml:space="preserve">
          <source>Translates a string from Unicode to ASCII Compatible Encoding (ACE), as defined by the ToASCII operation of &lt;a href=&quot;https://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt; 의 ToASCII 작업에 정의 된대로 문자열을 유니 코드에서 ACE (ASCII Compatible Encoding)로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="15a147b9376f1199d2ad88e123d0e96fd830257c" translate="yes" xml:space="preserve">
          <source>Translates a string into &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format using a specific &lt;a href=&quot;../nio/charset/charset&quot;&gt;Charset&lt;/a&gt;.</source>
          <target state="translated">특정 &lt;a href=&quot;../nio/charset/charset&quot;&gt;Charset을&lt;/a&gt; 사용하여 문자열을 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 형식으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="18e640a882167656e723f728e2f4de3476500cb4" translate="yes" xml:space="preserve">
          <source>Translates a string into &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format using a specific &lt;a href=&quot;../nio/charset/charset&quot;&gt;Charset&lt;/a&gt;. This method uses the supplied charset to obtain the bytes for unsafe characters.</source>
          <target state="translated">특정 &lt;a href=&quot;../nio/charset/charset&quot;&gt;Charset을&lt;/a&gt; 사용하여 문자열을 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 형식으로 변환합니다 . 이 메서드는 제공된 문자 집합을 사용하여 안전하지 않은 문자에 대한 바이트를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="41331656369c1cf815ba99b496333f69b723fb9d" translate="yes" xml:space="preserve">
          <source>Translates a string into &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format using a specific encoding scheme.</source>
          <target state="translated">특정 인코딩 체계를 사용하여 문자열을 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 형식으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="4d59a776cc2656bd77a8e0f9b385251da96dd1ab" translate="yes" xml:space="preserve">
          <source>Translates a string into &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format using a specific encoding scheme. This method uses the supplied encoding scheme to obtain the bytes for unsafe characters.</source>
          <target state="translated">특정 인코딩 체계를 사용하여 문자열을 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 형식으로 변환합니다. 이 방법은 제공된 인코딩 체계를 사용하여 안전하지 않은 문자의 바이트를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="e047b85bd71414efc578845b6d8e1d90059ffd0f" translate="yes" xml:space="preserve">
          <source>Translates a string into &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; format. This method uses the platform's default encoding as the encoding scheme to obtain the bytes for unsafe characters.</source>
          <target state="translated">문자열을 &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; 형식으로 변환합니다. 이 방법은 플랫폼의 기본 인코딩을 인코딩 체계로 사용하여 안전하지 않은 문자의 바이트를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="3d6fdd19cff492d724611c02c4f9915d3d318b42" translate="yes" xml:space="preserve">
          <source>Translates a string to a &lt;code&gt;CSS.Attribute&lt;/code&gt; object.</source>
          <target state="translated">문자열을 &lt;code&gt;CSS.Attribute&lt;/code&gt; 개체 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="6523b46dfee14cc5ccfd08c4844f372114c8c964" translate="yes" xml:space="preserve">
          <source>Translates a string to a &lt;code&gt;CSS.Attribute&lt;/code&gt; object. This will return &lt;code&gt;null&lt;/code&gt; if there is no attribute by the given name.</source>
          <target state="translated">문자열을 &lt;code&gt;CSS.Attribute&lt;/code&gt; 개체 로 변환 합니다. 주어진 이름의 속성이 없으면 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="1a03634ded790fbc32d129461d25a7e0c735ef3c" translate="yes" xml:space="preserve">
          <source>Translates an &lt;code&gt;int&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;int&lt;/code&gt; 를 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="50f92eea2ff33d3a5a4c74ff1405a8ec3381c5c3" translate="yes" xml:space="preserve">
          <source>Translates an &lt;code&gt;int&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt;, before any rounding, is zero.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;int&lt;/code&gt; 를 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다. &lt;code&gt;BigDecimal&lt;/code&gt; 의 규모반올림하기 전에 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="f70d3f5cc72a85aa103ea23194ec6e6ddb1f1544" translate="yes" xml:space="preserve">
          <source>Translates an &lt;code&gt;int&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;int&lt;/code&gt; 로 &lt;code&gt;BigDecimal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e229a02a15acf36cd72ba5270b9512fadf9ab47a" translate="yes" xml:space="preserve">
          <source>Translates an &lt;code&gt;int&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is zero.</source>
          <target state="translated">변환 &lt;code&gt;int&lt;/code&gt; 로 &lt;code&gt;BigDecimal&lt;/code&gt; . &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="5631a32fbfb0916283f5cdb861387eaa63bcf18e" translate="yes" xml:space="preserve">
          <source>Translates an offset into the components text to a line number.</source>
          <target state="translated">오프셋을 구성 요소 문자로 줄 번호로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="6133237a8ef8f8b52216fd6d50731b5e67e119a6" translate="yes" xml:space="preserve">
          <source>Translates the String representation of a BigInteger in the specified radix into a BigInteger.</source>
          <target state="translated">지정된 기수로 된 BigInteger의 문자열 표현을 BigInteger로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="774d5f6f79524d7cd4c3b2adafefd8cab0c033bc" translate="yes" xml:space="preserve">
          <source>Translates the String representation of a BigInteger in the specified radix into a BigInteger. The String representation consists of an optional minus or plus sign followed by a sequence of one or more digits in the specified radix. The character-to-digit mapping is provided by &lt;code&gt;
 Character.digit&lt;/code&gt;. The String may not contain any extraneous characters (whitespace, for example).</source>
          <target state="translated">지정된 기수로 된 BigInteger의 문자열 표현을 BigInteger로 변환합니다. 문자열 표현은 선택적 마이너스 또는 더하기 기호와 지정된 기수로 된 하나 이상의 숫자 시퀀스로 구성됩니다. 문자 대 숫자 매핑은 &lt;code&gt; Character.digit&lt;/code&gt; 에 의해 제공됩니다 . 문자열에는 불필요한 문자 (예 : 공백)가 포함될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1b727c4bb71d79e76c3eeaf58bdc8ae8accde65d" translate="yes" xml:space="preserve">
          <source>Translates the String representation of a BigInteger in the specified radix into a BigInteger. The String representation consists of an optional minus or plus sign followed by a sequence of one or more digits in the specified radix. The character-to-digit mapping is provided by &lt;code&gt;Character.digit&lt;/code&gt;. The String may not contain any extraneous characters (whitespace, for example).</source>
          <target state="translated">지정된 기수의 BigInteger의 String 표현을 BigInteger로 변환합니다. 문자열 표현은 선택적 빼기 또는 더하기 부호와 지정된 기수의 하나 이상의 숫자 순서로 구성됩니다. 문자 대 숫자 매핑은 &lt;code&gt;Character.digit&lt;/code&gt; 에 의해 제공됩니다 . 문자열은 외부 문자를 포함 할 수 없습니다 (예 : 공백).</target>
        </trans-unit>
        <trans-unit id="5235128334345d97ca02078e3dfaf9a0e7f162b8" translate="yes" xml:space="preserve">
          <source>Translates the decimal String representation of a BigInteger into a BigInteger.</source>
          <target state="translated">BigInteger의 10 진수 문자열 표현을 BigInteger로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="1971dfcab7363ad427f03f6ddc91d2aaa314e6a6" translate="yes" xml:space="preserve">
          <source>Translates the decimal String representation of a BigInteger into a BigInteger. The String representation consists of an optional minus sign followed by a sequence of one or more decimal digits. The character-to-digit mapping is provided by &lt;code&gt;Character.digit&lt;/code&gt;. The String may not contain any extraneous characters (whitespace, for example).</source>
          <target state="translated">BigInteger의 10 진수 문자열 표시를 BigInteger로 변환합니다. 문자열 표현은 선택적 빼기 부호와 하나 이상의 10 진수 숫자로 구성됩니다. 문자-숫자 매핑은 &lt;code&gt;Character.digit&lt;/code&gt; 에서 제공합니다 . . 문자열은 외부 문자를 포함 할 수 없습니다 (예 : 공백).</target>
        </trans-unit>
        <trans-unit id="4e4b5a0e5ddb018c2a9f03778e101a4b6fc363de" translate="yes" xml:space="preserve">
          <source>Translates the event's coordinates to a new position by adding specified &lt;code&gt;x&lt;/code&gt; (horizontal) and &lt;code&gt;y&lt;/code&gt; (vertical) offsets.</source>
          <target state="translated">지정된 &lt;code&gt;x&lt;/code&gt; (가로) 및 &lt;code&gt;y&lt;/code&gt; (세로) 오프셋 을 추가하여 이벤트의 좌표를 새 위치로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="825c354d4bccc25c0da888574a518292c54f37fd" translate="yes" xml:space="preserve">
          <source>Translates the immutable allocation given to the view to a mutable allocation that represents the interior allocation (i.e. the bounds of the given allocation with the top, left, bottom, and right insets removed.</source>
          <target state="translated">뷰에 제공된 변경 불가능한 할당을 내부 할당을 나타내는 변경 가능한 할당으로 변환합니다 (즉, 상단, 왼쪽, 하단 및 오른쪽 삽입이 제거 된 주어진 할당의 경계).</target>
        </trans-unit>
        <trans-unit id="4c18d709462554d0d0dd4fe5adf3ed3f272379fc" translate="yes" xml:space="preserve">
          <source>Translates the immutable allocation given to the view to a mutable allocation that represents the interior allocation (i.e. the bounds of the given allocation with the top, left, bottom, and right insets removed. It is expected that the returned value would be further mutated to represent an allocation to a child view. This is implemented to reuse an instance variable so it avoids creating excessive Rectangles. Typically the result of calling this method would be fed to the &lt;code&gt;childAllocation&lt;/code&gt; method.</source>
          <target state="translated">뷰에 주어진 불변 할당을 내부 할당을 나타내는 가변 할당으로 변환합니다. 자식 뷰에 대한 할당을 나타냅니다. 이것은 인스턴스 변수를 재사용하기 위해 구현되어 과도한 Rectangles 생성을 방지합니다. 일반적으로이 메서드를 호출 한 결과는 &lt;code&gt;childAllocation&lt;/code&gt; 메서드에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="e2b96aa4a9a451d5f3418522e608339a89afd3ce" translate="yes" xml:space="preserve">
          <source>Translates the origin of the &lt;code&gt;Graphics2D&lt;/code&gt; context to the point (</source>
          <target state="translated">&lt;code&gt;Graphics2D&lt;/code&gt; 컨텍스트 의 원점을 점 (</target>
        </trans-unit>
        <trans-unit id="e02760b95babe4406d2b07cde966f6f51edd7199" translate="yes" xml:space="preserve">
          <source>Translates the origin of the graphics context to the point (</source>
          <target state="translated">그래픽 컨텍스트의 원점을 점 (</target>
        </trans-unit>
        <trans-unit id="e18a6a440e04dedd2123054e87140f4662bf95e4" translate="yes" xml:space="preserve">
          <source>Translates the sign-magnitude representation of a BigInteger into a BigInteger.</source>
          <target state="translated">BigInteger의 부호-크기 표현을 BigInteger로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="5c52de63addaade59e66530488f1741aa06fc2ff" translate="yes" xml:space="preserve">
          <source>Translates the sign-magnitude representation of a BigInteger into a BigInteger. The sign is represented as an integer signum value: -1 for negative, 0 for zero, or 1 for positive. The magnitude is a byte array in</source>
          <target state="translated">BigInteger의 부호 크기 표현을 BigInteger로 변환합니다. 부호는 정수 부호 값으로 표시됩니다. -1은 음수, 0은 0 또는 양수입니다. 크기는 바이트 배열입니다</target>
        </trans-unit>
        <trans-unit id="7839f0a5c8b7933f3cc78940cb3dd38bec3ff253" translate="yes" xml:space="preserve">
          <source>Translates the sign-magnitude representation of a BigInteger into a BigInteger. The sign is represented as an integer signum value: -1 for negative, 0 for zero, or 1 for positive. The magnitude is a sub-array of a byte array in</source>
          <target state="translated">BigInteger의 부호-크기 표현을 BigInteger로 변환합니다. 부호는 정수 부호 값으로 표시됩니다. 음의 경우 -1, 0의 경우 0, 양의 경우 1입니다. 크기는 바이트 배열의 하위 배열입니다.</target>
        </trans-unit>
        <trans-unit id="b1f7d86aa97c232e1e86505ef8d3a7fa730bd5df" translate="yes" xml:space="preserve">
          <source>Translates the string representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same strings as the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, with rounding according to the context settings.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하고 컨텍스트 설정에 따라 반올림 하여 &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 생성자 와 동일한 문자열을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="eaeb644e5e369708ac477fe488962acceba1548c" translate="yes" xml:space="preserve">
          <source>Translates the string representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same strings as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, with rounding according to the context settings.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하고 &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 과 동일한 문자열을 허용합니다.컨텍스트 설정에 따라 반올림 생성자 .</target>
        </trans-unit>
        <trans-unit id="499a30efe9e4830de1212247e149232625720a07" translate="yes" xml:space="preserve">
          <source>Translates the string representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="2f81c6b37d85c35c397c7c1fc049f4a6cba771b7" translate="yes" xml:space="preserve">
          <source>Translates the string representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;. The string representation consists of an optional sign, &lt;code&gt;'+'&lt;/code&gt; (&lt;code&gt; '\u002B'&lt;/code&gt;) or &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002D'&lt;/code&gt;), followed by a sequence of zero or more decimal digits (&quot;the integer&quot;), optionally followed by a fraction, optionally followed by an exponent.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 캐릭터 라인 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 합니다. 문자열 표현은 선택적 부호, &lt;code&gt;'+'&lt;/code&gt; ( &lt;code&gt; '\u002B'&lt;/code&gt; ) 또는 &lt;code&gt;'-'&lt;/code&gt; ( &lt;code&gt;'\u002D'&lt;/code&gt; )와 0 개 이상의 10 진수 ( &quot;정수&quot;)로 구성되며 선택적으로 분수, 선택적으로 지수가 뒤 따릅니다.</target>
        </trans-unit>
        <trans-unit id="eb8964ccdde4738d7a6c1a21ebccb3df525f2317" translate="yes" xml:space="preserve">
          <source>Translates the vertices of the &lt;code&gt;Polygon&lt;/code&gt; by &lt;code&gt;deltaX&lt;/code&gt; along the x axis and by &lt;code&gt;deltaY&lt;/code&gt; along the y axis.</source>
          <target state="translated">정점의 변환 &lt;code&gt;Polygon&lt;/code&gt; 의해 &lt;code&gt;deltaX&lt;/code&gt; , x 축 방향 및 의해 &lt;code&gt;deltaY&lt;/code&gt; 에 은 y 축을 따라있다.</target>
        </trans-unit>
        <trans-unit id="c9b81f4434072ae8317cd4881eb72a78c28abadf" translate="yes" xml:space="preserve">
          <source>Translates this &lt;code&gt;Rectangle&lt;/code&gt; the indicated distance, to the right along the X coordinate axis, and downward along the Y coordinate axis.</source>
          <target state="translated">이 &lt;code&gt;Rectangle&lt;/code&gt; 을 표시된 거리만큼 X 좌표 축을 따라 오른쪽으로, Y 좌표 축을 따라 아래쪽으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="bd3490e9dcb882736aa1fbe75fa8cbd7e5c2871a" translate="yes" xml:space="preserve">
          <source>Translates this event so that its</source>
          <target state="translated">이 이벤트를 변환하여</target>
        </trans-unit>
        <trans-unit id="46afa636b8197327993eaf1b49aab96d5b3f07c3" translate="yes" xml:space="preserve">
          <source>Translates this point, at location &lt;code&gt;(x,y)&lt;/code&gt;, by &lt;code&gt;dx&lt;/code&gt; along the &lt;code&gt;x&lt;/code&gt; axis and &lt;code&gt;dy&lt;/code&gt; along the &lt;code&gt;y&lt;/code&gt; axis so that it now represents the point &lt;code&gt;(x+dx,y+dy)&lt;/code&gt;.</source>
          <target state="translated">위치,이 점을 변환 &lt;code&gt;(x,y)&lt;/code&gt; 로 하여, &lt;code&gt;dx&lt;/code&gt; 따라 &lt;code&gt;x&lt;/code&gt; 축과 &lt;code&gt;dy&lt;/code&gt; 따라 &lt;code&gt;y&lt;/code&gt; 지금 시점 나타내도록 축 &lt;code&gt;(x+dx,y+dy)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac26a7a94ea2e66490f932b6415a09ef6f2a913c" translate="yes" xml:space="preserve">
          <source>Translation</source>
          <target state="translated">Translation</target>
        </trans-unit>
        <trans-unit id="1fafc51374f712ba586dcd4ca179bb592b7dbf3b" translate="yes" xml:space="preserve">
          <source>Translator</source>
          <target state="translated">Translator</target>
        </trans-unit>
        <trans-unit id="27f9f90a8562e3a6daa8604c9d65472f00705484" translate="yes" xml:space="preserve">
          <source>Transmits a control command to the terminal device.</source>
          <target state="translated">제어 명령을 단말 장치로 전송합니다.</target>
        </trans-unit>
        <trans-unit id="2eb84afc4984bf8539bbea8f41cfe6586118788c" translate="yes" xml:space="preserve">
          <source>Transmits the command APDU stored in the command ByteBuffer and receives the response APDU in the response ByteBuffer.</source>
          <target state="translated">명령 ByteBuffer에 저장된 명령 APDU를 전송하고 응답 ByteBuffer에서 응답 APDU를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="804af4a2759c5a01aa7066cf79da999eddc4160a" translate="yes" xml:space="preserve">
          <source>Transmits the specified command APDU to the Smart Card and returns the response APDU.</source>
          <target state="translated">지정된 명령 APDU를 스마트 카드로 전송하고 응답 APDU를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="da34ba9de444c96ddc1a3bae0850b2622a0572d5" translate="yes" xml:space="preserve">
          <source>Transmitter</source>
          <target state="translated">Transmitter</target>
        </trans-unit>
        <trans-unit id="51450f02a2587b281bcd471db6d893f369739bf2" translate="yes" xml:space="preserve">
          <source>Transmitter.close()</source>
          <target state="translated">Transmitter.close()</target>
        </trans-unit>
        <trans-unit id="f9cb2258b1778d8c3bc3517121ceaaa1554dff9f" translate="yes" xml:space="preserve">
          <source>Transmitter.getReceiver()</source>
          <target state="translated">Transmitter.getReceiver()</target>
        </trans-unit>
        <trans-unit id="9331c814a22fa32349ceb6cda3994482fea2c369" translate="yes" xml:space="preserve">
          <source>Transmitter.setReceiver()</source>
          <target state="translated">Transmitter.setReceiver()</target>
        </trans-unit>
        <trans-unit id="7cb338a916152e13525f9822a4d915c168c521f0" translate="yes" xml:space="preserve">
          <source>Transparency</source>
          <target state="translated">Transparency</target>
        </trans-unit>
        <trans-unit id="d2c3637cb4e43ccc217a82837601b3bc7345e10c" translate="yes" xml:space="preserve">
          <source>Transparent pixels are drawn in the specified background color. This operation is equivalent to filling a rectangle of the width and height of the specified image with the given color and then drawing the image on top of it, but possibly more efficient.</source>
          <target state="translated">투명 픽셀은 지정된 배경색으로 그려집니다. 이 작업은 지정된 이미지의 너비와 높이의 사각형을 지정된 색상으로 채운 다음 그 위에 이미지를 그리는 것과 동일하지만 더 효율적일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c10d76c9a4b81c39c13a3bbf7cdb7a157dfb1551" translate="yes" xml:space="preserve">
          <source>Transport</source>
          <target state="translated">Transport</target>
        </trans-unit>
        <trans-unit id="d24879f1d01418d9df5ecb549e094f0e42c0d34d" translate="yes" xml:space="preserve">
          <source>TransportService</source>
          <target state="translated">TransportService</target>
        </trans-unit>
        <trans-unit id="31557bc6c207cdf20c668d43a3247271db89c616" translate="yes" xml:space="preserve">
          <source>TransportService.Capabilities</source>
          <target state="translated">TransportService.Capabilities</target>
        </trans-unit>
        <trans-unit id="7825d984dd448035daaa60a9190a09e0e6e93975" translate="yes" xml:space="preserve">
          <source>TransportService.ListenKey</source>
          <target state="translated">TransportService.ListenKey</target>
        </trans-unit>
        <trans-unit id="5cd86747f14d0cef7caa4dd722a820c10cc2edb0" translate="yes" xml:space="preserve">
          <source>TransportTimeoutException</source>
          <target state="translated">TransportTimeoutException</target>
        </trans-unit>
        <trans-unit id="8173e5a0ab0d66651e0708a8bcbefeef2dd3831c" translate="yes" xml:space="preserve">
          <source>Traversal of elements should be accomplished through the iterator. The behaviour of traversal is undefined if the spliterator is operated after the iterator is returned.</source>
          <target state="translated">요소의 순회는 반복자를 통해 수행해야합니다. 반복기가 리턴 된 후 스플리터가 작동되면 순회 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="30d46763ec7881d4f58abae3049a96683c8f9143" translate="yes" xml:space="preserve">
          <source>Traversal of elements should be accomplished through the spliterator. The behaviour of splitting and traversal is undefined if the iterator is operated on after the spliterator is returned, or the initially reported size is not equal to the actual number of elements in the source.</source>
          <target state="translated">요소 탐색은 스플리터를 통해 수행해야합니다. 분할기가 반환 된 후 반복기가 작동되거나 처음에보고 된 크기가 소스의 실제 요소 수와 같지 않으면 분할 및 순회 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="00ca3dda7684f8348bfee89b641a056d672651d3" translate="yes" xml:space="preserve">
          <source>Traversal of elements should be accomplished through the spliterator. The behaviour of splitting and traversal is undefined if the iterator is operated on after the spliterator is returned.</source>
          <target state="translated">요소 탐색은 스플리터를 통해 수행해야합니다. 스플리터가 리턴 된 후 이터레이터가 작동하는 경우 스 플리 팅 및 순회 동작은 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0387bf3d77b5fef9a75cac2dd19feeffbcd116dd" translate="yes" xml:space="preserve">
          <source>Traversal via iterators is fast and cannot encounter interference from other threads. Iterators rely on unchanging snapshots of the array at the time the iterators were constructed.</source>
          <target state="translated">반복자를 통한 순회는 빠르며 다른 스레드의 간섭을받을 수 없습니다. 반복자는 반복자가 생성 될 때 변경되지 않은 배열의 스냅 샷에 의존합니다.</target>
        </trans-unit>
        <trans-unit id="1ba08ab52cde7420cbd3c26bc714af709c837cd8" translate="yes" xml:space="preserve">
          <source>Traverse both forward and backward from a given position in the text. Calls to notBoundary() in this example represents some additional stopping criteria.</source>
          <target state="translated">텍스트의 주어진 위치에서 앞뒤로 이동합니다. 이 예제에서 notBoundary ()에 대한 호출은 몇 가지 추가 중지 기준을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d3b823617556e185dfc8f7708a19dd8b14580a0b" translate="yes" xml:space="preserve">
          <source>Traverse the text backwards, from end to start</source>
          <target state="translated">끝에서 시작하여 텍스트를 뒤로 이동</target>
        </trans-unit>
        <trans-unit id="b0fa76c6202418f069b17f36977c45c010c2e7cc" translate="yes" xml:space="preserve">
          <source>Traverse the text from start to finish</source>
          <target state="translated">처음부터 끝까지 텍스트 탐색</target>
        </trans-unit>
        <trans-unit id="6cfb3f423da6f9b668b3796ce211f04c5664f3c4" translate="yes" xml:space="preserve">
          <source>TrayIcon</source>
          <target state="translated">TrayIcon</target>
        </trans-unit>
        <trans-unit id="1f2519f8ce9c84631c047f73037eaba4b5b2a85a" translate="yes" xml:space="preserve">
          <source>TrayIcon.MessageType</source>
          <target state="translated">TrayIcon.MessageType</target>
        </trans-unit>
        <trans-unit id="99f5ff6378a0b48f815677894306b090ee036726" translate="yes" xml:space="preserve">
          <source>Tree</source>
          <target state="translated">Tree</target>
        </trans-unit>
        <trans-unit id="36e87512c1528662310d7885077c416b4a4b1f33" translate="yes" xml:space="preserve">
          <source>Tree Collapsed notification.</source>
          <target state="translated">트리 축소 알림.</target>
        </trans-unit>
        <trans-unit id="2742401606d0c8f96325af9e2b138701c56e746b" translate="yes" xml:space="preserve">
          <source>Tree Model Expansion notification.</source>
          <target state="translated">트리 모델 확장 알림.</target>
        </trans-unit>
        <trans-unit id="4161bfebed9f9c960bd7ab5e0e6e0237d88cbbc6" translate="yes" xml:space="preserve">
          <source>Tree Model Node change notification.</source>
          <target state="translated">트리 모델 노드 변경 알림.</target>
        </trans-unit>
        <trans-unit id="4ffa74fc39b536118d1cc2aa97633b9e229589c6" translate="yes" xml:space="preserve">
          <source>Tree Model structure change change notification.</source>
          <target state="translated">트리 모델 구조 변경 변경 알림.</target>
        </trans-unit>
        <trans-unit id="dba7d2fe0afcc2586ca1bb70318055eecdc7653f" translate="yes" xml:space="preserve">
          <source>Tree Selection Listener value change method.</source>
          <target state="translated">Tree Selection Listener 값 변경 방법.</target>
        </trans-unit>
        <trans-unit id="c09795dc71146147df1abd8c557a58c68572f224" translate="yes" xml:space="preserve">
          <source>Tree Selection Listener value change method. Used to fire the property change</source>
          <target state="translated">Tree Selection Listener 값 변경 방법. 속성 변경을 시작하는 데 사용</target>
        </trans-unit>
        <trans-unit id="da176591218d6b9413574c9a3c9b92a3503156c2" translate="yes" xml:space="preserve">
          <source>Tree region.</source>
          <target state="translated">트리 영역.</target>
        </trans-unit>
        <trans-unit id="a3a4c2daddaad45d3cbd017025ec1a7fdd2624c8" translate="yes" xml:space="preserve">
          <source>Tree region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;Tree&lt;/code&gt;.</source>
          <target state="translated">트리 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;Tree&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa6026c7289a8d41855d24b11ab60e606d3358c6" translate="yes" xml:space="preserve">
          <source>Tree.Kind</source>
          <target state="translated">Tree.Kind</target>
        </trans-unit>
        <trans-unit id="9c1e40ca554c47c4abe17a3bcfbb15f5c6c3e0e5" translate="yes" xml:space="preserve">
          <source>TreeCancelEditingAction</source>
          <target state="translated">TreeCancelEditingAction</target>
        </trans-unit>
        <trans-unit id="054d73668141f4e34f9710ddedd10497b8f50b27" translate="yes" xml:space="preserve">
          <source>TreeCellEditor</source>
          <target state="translated">TreeCellEditor</target>
        </trans-unit>
        <trans-unit id="77de7b283bcdd9c976fda44057abde6f646e8916" translate="yes" xml:space="preserve">
          <source>TreeCellRenderer</source>
          <target state="translated">TreeCellRenderer</target>
        </trans-unit>
        <trans-unit id="0b4426777e99bdd48c1a82720ccd9ceabfbe6ede" translate="yes" xml:space="preserve">
          <source>TreeControlIcon</source>
          <target state="translated">TreeControlIcon</target>
        </trans-unit>
        <trans-unit id="937af705941240aed800cf993fd9f77225b9348d" translate="yes" xml:space="preserve">
          <source>TreeExpansionEvent</source>
          <target state="translated">TreeExpansionEvent</target>
        </trans-unit>
        <trans-unit id="10cf5f6e68fc62c4e28263d60bad5955143dee33" translate="yes" xml:space="preserve">
          <source>TreeExpansionHandler</source>
          <target state="translated">TreeExpansionHandler</target>
        </trans-unit>
        <trans-unit id="1fec3f09f2646363bd1c554062bba38bc5c3b066" translate="yes" xml:space="preserve">
          <source>TreeExpansionListener</source>
          <target state="translated">TreeExpansionListener</target>
        </trans-unit>
        <trans-unit id="e929cdbba53a6b37d4bed5873ccda9277e611aaa" translate="yes" xml:space="preserve">
          <source>TreeFolderIcon</source>
          <target state="translated">TreeFolderIcon</target>
        </trans-unit>
        <trans-unit id="993a4151015481e9dd7bf7595b3b33dc7c0d807f" translate="yes" xml:space="preserve">
          <source>TreeHomeAction</source>
          <target state="translated">TreeHomeAction</target>
        </trans-unit>
        <trans-unit id="204b15c46ad5165b7272ae5297180b25fdcf169f" translate="yes" xml:space="preserve">
          <source>TreeHomeAction is used to handle end/home actions.</source>
          <target state="translated">TreeHomeAction은 종료 / 홈 작업을 처리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="238a1e05032e91f500826fc61db222b303e81a74" translate="yes" xml:space="preserve">
          <source>TreeHomeAction is used to handle end/home actions. Scrolls either the first or last cell to be visible based on direction.</source>
          <target state="translated">TreeHomeAction은 종료 / 홈 작업을 처리하는 데 사용됩니다. 방향에 따라 표시되도록 첫 번째 또는 마지막 셀을 스크롤합니다.</target>
        </trans-unit>
        <trans-unit id="72607d837d74f0558f12e29788b1ea23dfbc3ab5" translate="yes" xml:space="preserve">
          <source>TreeIncrementAction</source>
          <target state="translated">TreeIncrementAction</target>
        </trans-unit>
        <trans-unit id="38c8915984b93a85a1c5fafebc1d5e55681aec05" translate="yes" xml:space="preserve">
          <source>TreeIncrementAction is used to handle up/down actions.</source>
          <target state="translated">TreeIncrementAction은 업 / 다운 액션을 처리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8191d246418261f34e79c650a33afec67223d0c5" translate="yes" xml:space="preserve">
          <source>TreeIncrementAction is used to handle up/down actions. Selection is moved up or down based on direction.</source>
          <target state="translated">TreeIncrementAction은 업 / 다운 액션을 처리하는 데 사용됩니다. 선택은 방향에 따라 위아래로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="8b4349d9ab1f617e5d9b005f80e6099098643baa" translate="yes" xml:space="preserve">
          <source>TreeLeafIcon</source>
          <target state="translated">TreeLeafIcon</target>
        </trans-unit>
        <trans-unit id="f5b2faff4d9b4cc3e53f74c54f2316fc6c676530" translate="yes" xml:space="preserve">
          <source>TreeMap</source>
          <target state="translated">TreeMap</target>
        </trans-unit>
        <trans-unit id="e5316ea688f0da29e1f65fed0da1b46ebcdbda8a" translate="yes" xml:space="preserve">
          <source>TreeMap.ceilingEntry()</source>
          <target state="translated">TreeMap.ceilingEntry()</target>
        </trans-unit>
        <trans-unit id="4928da85f4b361e5d085411df925eb6355d02ccd" translate="yes" xml:space="preserve">
          <source>TreeMap.ceilingKey()</source>
          <target state="translated">TreeMap.ceilingKey()</target>
        </trans-unit>
        <trans-unit id="d821816e6e966f8b3d1577edaf8405a54a8bac65" translate="yes" xml:space="preserve">
          <source>TreeMap.clear()</source>
          <target state="translated">TreeMap.clear()</target>
        </trans-unit>
        <trans-unit id="6dd69679a95980cc913012d3d49d57d3438052ba" translate="yes" xml:space="preserve">
          <source>TreeMap.clone()</source>
          <target state="translated">TreeMap.clone()</target>
        </trans-unit>
        <trans-unit id="132e0fac0be392849749eb7187695583f3c1bae4" translate="yes" xml:space="preserve">
          <source>TreeMap.comparator()</source>
          <target state="translated">TreeMap.comparator()</target>
        </trans-unit>
        <trans-unit id="aba73b51f5749ac86a5825ad48589ad82de9c9d0" translate="yes" xml:space="preserve">
          <source>TreeMap.containsKey()</source>
          <target state="translated">TreeMap.containsKey()</target>
        </trans-unit>
        <trans-unit id="65d0bbe349fb657486fc3ca8727106a6f76375d8" translate="yes" xml:space="preserve">
          <source>TreeMap.containsValue()</source>
          <target state="translated">TreeMap.containsValue()</target>
        </trans-unit>
        <trans-unit id="2066f4d1d87cf54e4201d5b6b43810901a60a09e" translate="yes" xml:space="preserve">
          <source>TreeMap.descendingKeySet()</source>
          <target state="translated">TreeMap.descendingKeySet()</target>
        </trans-unit>
        <trans-unit id="496fa6003029e1da671d7cd46af7012c714a278e" translate="yes" xml:space="preserve">
          <source>TreeMap.descendingMap()</source>
          <target state="translated">TreeMap.descendingMap()</target>
        </trans-unit>
        <trans-unit id="1b90293c4f5f34694a779c50db391ac5a1a15f98" translate="yes" xml:space="preserve">
          <source>TreeMap.entrySet()</source>
          <target state="translated">TreeMap.entrySet()</target>
        </trans-unit>
        <trans-unit id="91cd659b9bb4df3b20daa3c36cf5b06f78bf28e0" translate="yes" xml:space="preserve">
          <source>TreeMap.firstEntry()</source>
          <target state="translated">TreeMap.firstEntry()</target>
        </trans-unit>
        <trans-unit id="e24b9ff84913f700271a226cb98f89024ca00c9e" translate="yes" xml:space="preserve">
          <source>TreeMap.firstKey()</source>
          <target state="translated">TreeMap.firstKey()</target>
        </trans-unit>
        <trans-unit id="bfa45d75312c5aad42c5173c03f70f8a06bf61e1" translate="yes" xml:space="preserve">
          <source>TreeMap.floorEntry()</source>
          <target state="translated">TreeMap.floorEntry()</target>
        </trans-unit>
        <trans-unit id="b57c465a9ed8fce97e6d108abf55a1b758a876a3" translate="yes" xml:space="preserve">
          <source>TreeMap.floorKey()</source>
          <target state="translated">TreeMap.floorKey()</target>
        </trans-unit>
        <trans-unit id="32b815d8822cc010b2dea7e47dd49ef655559b7e" translate="yes" xml:space="preserve">
          <source>TreeMap.forEach()</source>
          <target state="translated">TreeMap.forEach()</target>
        </trans-unit>
        <trans-unit id="e4278be43e238f656122e5f83d909caa4e0058c2" translate="yes" xml:space="preserve">
          <source>TreeMap.get()</source>
          <target state="translated">TreeMap.get()</target>
        </trans-unit>
        <trans-unit id="d795a70cfa4017d4e2580575fc584f8bda1e8bf5" translate="yes" xml:space="preserve">
          <source>TreeMap.headMap()</source>
          <target state="translated">TreeMap.headMap()</target>
        </trans-unit>
        <trans-unit id="4605c36878c64b5c5a9b1ae5cec8221cfb870071" translate="yes" xml:space="preserve">
          <source>TreeMap.higherEntry()</source>
          <target state="translated">TreeMap.higherEntry()</target>
        </trans-unit>
        <trans-unit id="88ebbb98630e8d6f0aa2a442fdd87e6b5f192d94" translate="yes" xml:space="preserve">
          <source>TreeMap.higherKey()</source>
          <target state="translated">TreeMap.higherKey()</target>
        </trans-unit>
        <trans-unit id="3524629c1674ca5bee3777a687eb14c89812771e" translate="yes" xml:space="preserve">
          <source>TreeMap.keySet()</source>
          <target state="translated">TreeMap.keySet()</target>
        </trans-unit>
        <trans-unit id="2427b56045488e13ed88595150f52b76439edafe" translate="yes" xml:space="preserve">
          <source>TreeMap.lastEntry()</source>
          <target state="translated">TreeMap.lastEntry()</target>
        </trans-unit>
        <trans-unit id="2fc0327a416b90d08c9d8fadeb6bb0a9fa2603c5" translate="yes" xml:space="preserve">
          <source>TreeMap.lastKey()</source>
          <target state="translated">TreeMap.lastKey()</target>
        </trans-unit>
        <trans-unit id="dd05595fa1313aec4d7ebf40d7dab6809c7095d7" translate="yes" xml:space="preserve">
          <source>TreeMap.lowerEntry()</source>
          <target state="translated">TreeMap.lowerEntry()</target>
        </trans-unit>
        <trans-unit id="b550fa2027fb6c3ed211c79fab553f2af410eb80" translate="yes" xml:space="preserve">
          <source>TreeMap.lowerKey()</source>
          <target state="translated">TreeMap.lowerKey()</target>
        </trans-unit>
        <trans-unit id="7915d610e74e7c65de3ec87fe86176cbb154fcd5" translate="yes" xml:space="preserve">
          <source>TreeMap.navigableKeySet()</source>
          <target state="translated">TreeMap.navigableKeySet()</target>
        </trans-unit>
        <trans-unit id="b0f48e4c5aaa86462d2495a34296faf0204d020a" translate="yes" xml:space="preserve">
          <source>TreeMap.pollFirstEntry()</source>
          <target state="translated">TreeMap.pollFirstEntry()</target>
        </trans-unit>
        <trans-unit id="3ba1c7d5e824634ea0aba4a0fd44feb73f14dcc1" translate="yes" xml:space="preserve">
          <source>TreeMap.pollLastEntry()</source>
          <target state="translated">TreeMap.pollLastEntry()</target>
        </trans-unit>
        <trans-unit id="4be22808d79589f0c4911f86861c59bda925d960" translate="yes" xml:space="preserve">
          <source>TreeMap.put()</source>
          <target state="translated">TreeMap.put()</target>
        </trans-unit>
        <trans-unit id="113ed1243333d0ec7328427f6dd19f0b4f7e8528" translate="yes" xml:space="preserve">
          <source>TreeMap.putAll()</source>
          <target state="translated">TreeMap.putAll()</target>
        </trans-unit>
        <trans-unit id="a8c243296a0e84bd175e472f5f0a0e5273229663" translate="yes" xml:space="preserve">
          <source>TreeMap.remove()</source>
          <target state="translated">TreeMap.remove()</target>
        </trans-unit>
        <trans-unit id="5c7fa55653c3471f3a6af4dd608d43540da07784" translate="yes" xml:space="preserve">
          <source>TreeMap.replace()</source>
          <target state="translated">TreeMap.replace()</target>
        </trans-unit>
        <trans-unit id="4d0e299e3ba998c2dcf0ec34621e331722934c5f" translate="yes" xml:space="preserve">
          <source>TreeMap.replaceAll()</source>
          <target state="translated">TreeMap.replaceAll()</target>
        </trans-unit>
        <trans-unit id="336677cb1fe98f23e75d163b974930002fd8cd27" translate="yes" xml:space="preserve">
          <source>TreeMap.size()</source>
          <target state="translated">TreeMap.size()</target>
        </trans-unit>
        <trans-unit id="552ea32c982c18811875853860337db0aad1d967" translate="yes" xml:space="preserve">
          <source>TreeMap.subMap()</source>
          <target state="translated">TreeMap.subMap()</target>
        </trans-unit>
        <trans-unit id="274005151bd94300a52eb1ead3c9e76df7d91b66" translate="yes" xml:space="preserve">
          <source>TreeMap.tailMap()</source>
          <target state="translated">TreeMap.tailMap()</target>
        </trans-unit>
        <trans-unit id="2f8809dc68a09b62cc6461a42ec84b65d1f332c3" translate="yes" xml:space="preserve">
          <source>TreeMap.values()</source>
          <target state="translated">TreeMap.values()</target>
        </trans-unit>
        <trans-unit id="ba62fb3f971f3ef904295175c5fa43e88e3416a0" translate="yes" xml:space="preserve">
          <source>TreeModel</source>
          <target state="translated">TreeModel</target>
        </trans-unit>
        <trans-unit id="ed645b927cdc5a3a1c7d6528116a934aa19e041b" translate="yes" xml:space="preserve">
          <source>TreeModelEvent</source>
          <target state="translated">TreeModelEvent</target>
        </trans-unit>
        <trans-unit id="841fc71bc09dfd294141702b1ba2b1dae1117e1b" translate="yes" xml:space="preserve">
          <source>TreeModelHandler</source>
          <target state="translated">TreeModelHandler</target>
        </trans-unit>
        <trans-unit id="115ac5ea27156f6ad2ab2aa70c9841a084eb40a8" translate="yes" xml:space="preserve">
          <source>TreeModelListener</source>
          <target state="translated">TreeModelListener</target>
        </trans-unit>
        <trans-unit id="878d05c035daada0368b104f222e3a6643da8d5e" translate="yes" xml:space="preserve">
          <source>TreeMouseListener is responsible for updating the selection based on mouse events.</source>
          <target state="translated">TreeMouseListener는 마우스 이벤트를 기반으로 선택을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="599955de5374dfa5279b21f4f4e42d2e26d4cdfa" translate="yes" xml:space="preserve">
          <source>TreeNode</source>
          <target state="translated">TreeNode</target>
        </trans-unit>
        <trans-unit id="745987ea45f41d8ae79665810dc9f818e552fe77" translate="yes" xml:space="preserve">
          <source>TreePageAction</source>
          <target state="translated">TreePageAction</target>
        </trans-unit>
        <trans-unit id="bd8345bed5902bc471cf89979240292f40306390" translate="yes" xml:space="preserve">
          <source>TreePageAction handles page up and page down events.</source>
          <target state="translated">TreePageAction은 페이지 업 및 페이지 다운 이벤트를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="573289f14ad820aee44479334a939242d852c7bd" translate="yes" xml:space="preserve">
          <source>TreePath</source>
          <target state="translated">TreePath</target>
        </trans-unit>
        <trans-unit id="60875764b067074237751917594332da00de4564" translate="yes" xml:space="preserve">
          <source>TreePathScanner</source>
          <target state="translated">TreePathScanner</target>
        </trans-unit>
        <trans-unit id="396c09384906e5c97f0ec2e52ae92ada3e9c6c7b" translate="yes" xml:space="preserve">
          <source>TreeScanner</source>
          <target state="translated">TreeScanner</target>
        </trans-unit>
        <trans-unit id="b9e43b3298bcb6866497b1c4ace19cd0143d3b8c" translate="yes" xml:space="preserve">
          <source>TreeSelectionEvent</source>
          <target state="translated">TreeSelectionEvent</target>
        </trans-unit>
        <trans-unit id="a2ed8927d5106bc63f3fc0c0e994713481d8f954" translate="yes" xml:space="preserve">
          <source>TreeSelectionHandler</source>
          <target state="translated">TreeSelectionHandler</target>
        </trans-unit>
        <trans-unit id="c62bce5af6134919a2a9b02a8b37d54aa11ac752" translate="yes" xml:space="preserve">
          <source>TreeSelectionListener</source>
          <target state="translated">TreeSelectionListener</target>
        </trans-unit>
        <trans-unit id="1775c7784131afde67d509df3a48fe608cbb79d3" translate="yes" xml:space="preserve">
          <source>TreeSelectionModel</source>
          <target state="translated">TreeSelectionModel</target>
        </trans-unit>
        <trans-unit id="a9f4894072ebd3917e2efcdf50c731fa0ee44e35" translate="yes" xml:space="preserve">
          <source>TreeSelectionRedirector</source>
          <target state="translated">TreeSelectionRedirector</target>
        </trans-unit>
        <trans-unit id="d9aca827286e61a4a205b918bf7138319000ed98" translate="yes" xml:space="preserve">
          <source>TreeSet</source>
          <target state="translated">TreeSet</target>
        </trans-unit>
        <trans-unit id="4c58b66af81f57dd8b2ae479f65b088a968c2890" translate="yes" xml:space="preserve">
          <source>TreeSet.add()</source>
          <target state="translated">TreeSet.add()</target>
        </trans-unit>
        <trans-unit id="e53f2301ea65fb9f94c8616cd01d0e870eaa58ae" translate="yes" xml:space="preserve">
          <source>TreeSet.addAll()</source>
          <target state="translated">TreeSet.addAll()</target>
        </trans-unit>
        <trans-unit id="4eeaf14d40be2a768f5551ac3ceab30c7eb5c11d" translate="yes" xml:space="preserve">
          <source>TreeSet.ceiling()</source>
          <target state="translated">TreeSet.ceiling()</target>
        </trans-unit>
        <trans-unit id="33ebc3a6fc05e0db15894a991bd5c6cfa684a2e6" translate="yes" xml:space="preserve">
          <source>TreeSet.clear()</source>
          <target state="translated">TreeSet.clear()</target>
        </trans-unit>
        <trans-unit id="b5ee84bff6e39a16be8fd9c8497e9d38405dc8e7" translate="yes" xml:space="preserve">
          <source>TreeSet.clone()</source>
          <target state="translated">TreeSet.clone()</target>
        </trans-unit>
        <trans-unit id="9a0eaadb461d069d2b062edc6cf1eaa5a8efb5c2" translate="yes" xml:space="preserve">
          <source>TreeSet.comparator()</source>
          <target state="translated">TreeSet.comparator()</target>
        </trans-unit>
        <trans-unit id="c40aeedbffe9e8c8b5e88e273fa9325e9604f055" translate="yes" xml:space="preserve">
          <source>TreeSet.contains()</source>
          <target state="translated">TreeSet.contains()</target>
        </trans-unit>
        <trans-unit id="4742b925b108b32534598f4493ff8334c0f0dffc" translate="yes" xml:space="preserve">
          <source>TreeSet.descendingIterator()</source>
          <target state="translated">TreeSet.descendingIterator()</target>
        </trans-unit>
        <trans-unit id="4e18a772039f604f6721b3d8dc2df28eb7f3d8fd" translate="yes" xml:space="preserve">
          <source>TreeSet.descendingSet()</source>
          <target state="translated">TreeSet.descendingSet()</target>
        </trans-unit>
        <trans-unit id="6560ec38319181f093c1ff9d0ac085bcefa40a74" translate="yes" xml:space="preserve">
          <source>TreeSet.first()</source>
          <target state="translated">TreeSet.first()</target>
        </trans-unit>
        <trans-unit id="72bae8ffa692e55ba3e7651d893967f363699e1d" translate="yes" xml:space="preserve">
          <source>TreeSet.floor()</source>
          <target state="translated">TreeSet.floor()</target>
        </trans-unit>
        <trans-unit id="d3cf600d3331960e00c525f3d569c97d03638b9e" translate="yes" xml:space="preserve">
          <source>TreeSet.headSet()</source>
          <target state="translated">TreeSet.headSet()</target>
        </trans-unit>
        <trans-unit id="1302632331c72e3e587859613e6504465a6156df" translate="yes" xml:space="preserve">
          <source>TreeSet.higher()</source>
          <target state="translated">TreeSet.higher()</target>
        </trans-unit>
        <trans-unit id="71529bc00e790a7a7b58d4cb8582a66c121ed166" translate="yes" xml:space="preserve">
          <source>TreeSet.isEmpty()</source>
          <target state="translated">TreeSet.isEmpty()</target>
        </trans-unit>
        <trans-unit id="71b02e64e43f1219a1d83f8105cf88dfebac5b2d" translate="yes" xml:space="preserve">
          <source>TreeSet.iterator()</source>
          <target state="translated">TreeSet.iterator()</target>
        </trans-unit>
        <trans-unit id="016f9951ee6b0476df52517da0ba1ff18acee328" translate="yes" xml:space="preserve">
          <source>TreeSet.last()</source>
          <target state="translated">TreeSet.last()</target>
        </trans-unit>
        <trans-unit id="28c8df1cca624a201d466b664b9817f9cd9e5dcf" translate="yes" xml:space="preserve">
          <source>TreeSet.lower()</source>
          <target state="translated">TreeSet.lower()</target>
        </trans-unit>
        <trans-unit id="7d8bdd7fd5daa61a0159cb57387f3d97f5080aa1" translate="yes" xml:space="preserve">
          <source>TreeSet.pollFirst()</source>
          <target state="translated">TreeSet.pollFirst()</target>
        </trans-unit>
        <trans-unit id="559c468def30ad4e10a37a70cbb1afcebac3f873" translate="yes" xml:space="preserve">
          <source>TreeSet.pollLast()</source>
          <target state="translated">TreeSet.pollLast()</target>
        </trans-unit>
        <trans-unit id="ddba668430ede9a4d1ee3b337e536df9ef952dd4" translate="yes" xml:space="preserve">
          <source>TreeSet.remove()</source>
          <target state="translated">TreeSet.remove()</target>
        </trans-unit>
        <trans-unit id="10adc5b62fe4ed759fad5f5fd2950555d482584f" translate="yes" xml:space="preserve">
          <source>TreeSet.size()</source>
          <target state="translated">TreeSet.size()</target>
        </trans-unit>
        <trans-unit id="9fe7c6a88052085baa4980aad72125fc3520c547" translate="yes" xml:space="preserve">
          <source>TreeSet.spliterator()</source>
          <target state="translated">TreeSet.spliterator()</target>
        </trans-unit>
        <trans-unit id="83d63aba3929098f734092786887fdf3ce00ad2f" translate="yes" xml:space="preserve">
          <source>TreeSet.subSet()</source>
          <target state="translated">TreeSet.subSet()</target>
        </trans-unit>
        <trans-unit id="424cfeb57b6d89969ea19e90d0edf198f1f866dc" translate="yes" xml:space="preserve">
          <source>TreeSet.tailSet()</source>
          <target state="translated">TreeSet.tailSet()</target>
        </trans-unit>
        <trans-unit id="7d6bc4b0ef62588dae24242de7605959c54d0e4d" translate="yes" xml:space="preserve">
          <source>TreeToggleAction</source>
          <target state="translated">TreeToggleAction</target>
        </trans-unit>
        <trans-unit id="aaf6a1f6a411baa929e59c084d2ecba773c8dbfe" translate="yes" xml:space="preserve">
          <source>TreeTraverseAction</source>
          <target state="translated">TreeTraverseAction</target>
        </trans-unit>
        <trans-unit id="53a1735324f35d7fe6311c8bc39e381006fe3b13" translate="yes" xml:space="preserve">
          <source>TreeUI</source>
          <target state="translated">TreeUI</target>
        </trans-unit>
        <trans-unit id="c5549ac8b888e22b01fa637b7351d8e5201d7fba" translate="yes" xml:space="preserve">
          <source>TreeWalker</source>
          <target state="translated">TreeWalker</target>
        </trans-unit>
        <trans-unit id="76d99bf12a81ac2490e7599279ebf4c321df4dd7" translate="yes" xml:space="preserve">
          <source>TreeWillExpandListener</source>
          <target state="translated">TreeWillExpandListener</target>
        </trans-unit>
        <trans-unit id="1e7081d736f43ad30574ac906d26acdd03c38ed9" translate="yes" xml:space="preserve">
          <source>Trees</source>
          <target state="translated">Trees</target>
        </trans-unit>
        <trans-unit id="e41bca377f8f8f87e1a2264fce85e2323929941d" translate="yes" xml:space="preserve">
          <source>Tries other providers in sequence until one works.</source>
          <target state="translated">하나가 작동 할 때까지 다른 공급자를 순서대로 시도합니다.</target>
        </trans-unit>
        <trans-unit id="61c7280b9181471e06faf9e56f85095fd79828a1" translate="yes" xml:space="preserve">
          <source>Tries to break this view on the given axis.</source>
          <target state="translated">주어진 축에서이 뷰를 끊으려고합니다.</target>
        </trans-unit>
        <trans-unit id="a120001a26dcf3d4c4868072fcfe43b0b155d0cf" translate="yes" xml:space="preserve">
          <source>Tries to break this view on the given axis. Refer to &lt;a href=&quot;../view#breakView(int,int,float,float)&quot;&gt;&lt;code&gt;View.breakView(int, int, float, float)&lt;/code&gt;&lt;/a&gt; for a complete description of this method.</source>
          <target state="translated">주어진 축에서이 뷰를 끊으려고합니다. 이 메서드에 대한 자세한 설명은 &lt;a href=&quot;../view#breakView(int,int,float,float)&quot;&gt; &lt;code&gt;View.breakView(int, int, float, float)&lt;/code&gt; &lt;/a&gt; 를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="b4d0e9ff9fd4cb2b70b3af1677ee544242fa9934" translate="yes" xml:space="preserve">
          <source>Tries to break this view on the given axis. This is called by views that try to do formatting of their children. For example, a view of a paragraph will typically try to place its children into row and views representing chunks of text can sometimes be broken down into smaller pieces.</source>
          <target state="translated">주어진 축에서이 뷰를 끊으려고합니다. 이는 자식의 형식을 지정하려는 뷰에서 호출됩니다. 예를 들어, 단락의보기는 일반적으로 하위 항목을 행에 배치하려고하며 텍스트 청크를 나타내는보기는 때때로 더 작은 조각으로 나눌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9feb731c5925bd1a0cdf44b2e198ff85480f0d4f" translate="yes" xml:space="preserve">
          <source>Tries to determine the content type of an object, based on the specified &quot;file&quot; component of a URL.</source>
          <target state="translated">URL의 지정된 &quot;파일&quot;구성 요소를 기반으로 개체의 콘텐츠 유형을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d18f5d6a0e37e1be1c95c5b83dec2805e4973064" translate="yes" xml:space="preserve">
          <source>Tries to determine the content type of an object, based on the specified &quot;file&quot; component of a URL. This is a convenience method that can be used by subclasses that override the &lt;code&gt;getContentType&lt;/code&gt; method.</source>
          <target state="translated">URL의 지정된 &quot;파일&quot;구성 요소를 기반으로 오브젝트의 컨텐츠 유형을 판별하려고 시도합니다. &lt;code&gt;getContentType&lt;/code&gt; 메소드 를 대체하는 서브 클래스에서 사용할 수있는 편리한 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="2cd3b3739a33e1f9d49c52e14b932b8920b15285" translate="yes" xml:space="preserve">
          <source>Tries to determine the type of an input stream based on the characters at the beginning of the input stream.</source>
          <target state="translated">입력 스트림의 시작 부분에있는 문자를 기반으로 입력 스트림의 유형을 확인하려고합니다.</target>
        </trans-unit>
        <trans-unit id="8136b251085567de41730b0cf3c283337bf62ab5" translate="yes" xml:space="preserve">
          <source>Tries to determine the type of an input stream based on the characters at the beginning of the input stream. This method can be used by subclasses that override the &lt;code&gt;getContentType&lt;/code&gt; method.</source>
          <target state="translated">입력 스트림의 시작 부분에있는 문자를 기반으로 입력 스트림의 유형을 판별하려고합니다. 이 메소드는 &lt;code&gt;getContentType&lt;/code&gt; 메소드 를 대체하는 서브 클래스에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af683792930635e02e564482bbf6187621651aa9" translate="yes" xml:space="preserve">
          <source>Tries to load a class from: the bootstrap loader, the system loader, the context loader (if one is present) and finally the loader specified.</source>
          <target state="translated">부트 스트랩 로더, 시스템 로더, 컨텍스트 로더 (있는 경우) 및 마지막으로 지정된 로더에서 클래스로드를 시도합니다.</target>
        </trans-unit>
        <trans-unit id="f7c738617eeba1cf8821e51be4db964d6bb62259" translate="yes" xml:space="preserve">
          <source>Tries to move the position of the caret from the coordinates of a mouse event, using viewToModel().</source>
          <target state="translated">viewToModel ()을 사용하여 마우스 이벤트의 좌표에서 캐럿의 위치를 ​​이동하려고합니다.</target>
        </trans-unit>
        <trans-unit id="dda827baba0f90a09175688b0d5b26236806a87d" translate="yes" xml:space="preserve">
          <source>Tries to move the position of the caret from the coordinates of a mouse event, using viewToModel(). This will cause a selection if the dot and mark are different.</source>
          <target state="translated">viewToModel ()을 사용하여 마우스 이벤트의 좌표에서 캐럿의 위치를 ​​이동하려고합니다. 점과 마크가 다른 경우 선택이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e3e6ad4f3b7b8c7b7bba1ef233d3cca69a38f764" translate="yes" xml:space="preserve">
          <source>Tries to remove from the work queue all &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; tasks that have been cancelled.</source>
          <target state="translated">취소 된 모든 &lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; 작업을 작업 대기열에서 제거하려고합니다 .</target>
        </trans-unit>
        <trans-unit id="94e3f7802063463730ee0a659237dc66ff598c52" translate="yes" xml:space="preserve">
          <source>Tries to remove from the work queue all &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; tasks that have been cancelled. This method can be useful as a storage reclamation operation, that has no other impact on functionality. Cancelled tasks are never executed, but may accumulate in work queues until worker threads can actively remove them. Invoking this method instead tries to remove them now. However, this method may fail to remove tasks in the presence of interference by other threads.</source>
          <target state="translated">취소 된 모든 &lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; 작업을 작업 대기열에서 제거하려고합니다 . 이 방법은 기능에 다른 영향을 미치지 않는 저장소 교정 작업으로 유용 할 수 있습니다. 취소 된 작업은 절대 실행되지 않지만 작업자 스레드가 적극적으로 제거 할 수있을 때까지 작업 대기열에 누적 될 수 있습니다. 이 메소드를 호출하면 지금 제거하려고 시도합니다. 그러나이 방법은 다른 스레드의 간섭이있는 경우 작업을 제거하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a29eaace0c6cbd8e7de7750cfa789737ac73458" translate="yes" xml:space="preserve">
          <source>Tries to set the position of the caret from the coordinates of a mouse event, using viewToModel().</source>
          <target state="translated">viewToModel ()을 사용하여 마우스 이벤트의 좌표에서 캐럿의 위치를 ​​설정하려고합니다.</target>
        </trans-unit>
        <trans-unit id="6fd258922851a204153a1d9f41e2626521bcd04f" translate="yes" xml:space="preserve">
          <source>Tries to unschedule this task for execution.</source>
          <target state="translated">실행을 위해이 작업을 예약 취소합니다.</target>
        </trans-unit>
        <trans-unit id="7536ae3390a11ff355e55fac0b2beec700d3bbf7" translate="yes" xml:space="preserve">
          <source>Tries to unschedule this task for execution. This method will typically (but is not guaranteed to) succeed if this task is the most recently forked task by the current thread, and has not commenced executing in another thread. This method may be useful when arranging alternative local processing of tasks that could have been, but were not, stolen.</source>
          <target state="translated">실행을 위해이 태스크의 스케줄을 해제하려고합니다. 이 작업이 현재 스레드에서 가장 최근에 수행 한 작업이고 다른 스레드에서 실행을 시작하지 않은 경우이 방법은 일반적으로 성공하지만 보장되지는 않습니다. 이 방법은 도난 당했을 수도 있지만 도난 당하지 않은 작업의 대체 로컬 처리를 배열 할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f758a24d09cfe388256c88c84eee859e3cdad015" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this &lt;code&gt;ArrayList&lt;/code&gt; instance to be the list's current size.</source>
          <target state="translated">이 &lt;code&gt;ArrayList&lt;/code&gt; 인스턴스 의 용량을 목록의 현재 크기로 잘라냅니다.</target>
        </trans-unit>
        <trans-unit id="956a4e9adf25eb2b061b86bbe5a36cf9bc435e58" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this &lt;code&gt;ArrayList&lt;/code&gt; instance to be the list's current size. An application can use this operation to minimize the storage of an &lt;code&gt;ArrayList&lt;/code&gt; instance.</source>
          <target state="translated">이 &lt;code&gt;ArrayList&lt;/code&gt; 인스턴스 의 용량을 리스트의 현재 크기로 잘라냅니다. 애플리케이션은이 작업을 사용하여 &lt;code&gt;ArrayList&lt;/code&gt; 인스턴스 의 스토리지를 최소화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4ee0fb6649b35e9c0d996610dde2b366a73e0208" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this Path2D instance to its current size.</source>
          <target state="translated">이 Path2D 인스턴스의 용량을 현재 크기로 자릅니다.</target>
        </trans-unit>
        <trans-unit id="89473f2a70d0579548e43b33915e1beacb1b07ec" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this Path2D instance to its current size. An application can use this operation to minimize the storage of a path.</source>
          <target state="translated">이 Path2D 인스턴스의 용량을 현재 크기로 자릅니다. 애플리케이션은이 작업을 사용하여 경로 저장을 최소화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59ff6098257d1f99634e3a4b950a8ef7c2bc2df3" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this list to be the list's current size.</source>
          <target state="translated">이 목록의 용량을 목록의 현재 크기로 잘라냅니다.</target>
        </trans-unit>
        <trans-unit id="bd1fa28fc491870035bccb5217ea8759963c0432" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this vector to be the vector's current size.</source>
          <target state="translated">이 벡터의 용량을 벡터의 현재 크기로 잘라냅니다.</target>
        </trans-unit>
        <trans-unit id="409e26f80653b9a0477fcbaf5528851c8694d8ca" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this vector to be the vector's current size. If the capacity of this vector is larger than its current size, then the capacity is changed to equal the size by replacing its internal data array, kept in the field &lt;code&gt;elementData&lt;/code&gt;, with a smaller one. An application can use this operation to minimize the storage of a vector.</source>
          <target state="translated">이 벡터의 용량을 벡터의 현재 크기로 자릅니다. 이 벡터의 용량이 현재 크기보다 크면 &lt;code&gt;elementData&lt;/code&gt; 필드에 유지 된 내부 데이터 배열을 더 작은 크기로 대체하여 용량이 크기와 동일하게 변경됩니다 . 응용 프로그램은이 작업을 사용하여 벡터 저장을 최소화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">True</target>
        </trans-unit>
        <trans-unit id="232a258e2d7a30d4d0831b671c1c85daf22199bd" translate="yes" xml:space="preserve">
          <source>True (required) / False (optional)</source>
          <target state="translated">True (필수) / False (선택 사항)</target>
        </trans-unit>
        <trans-unit id="5f688424f288d45fabbee9eb9cda452d378327ec" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;fields[]&lt;/code&gt; are in sync with the currently set time.</source>
          <target state="translated">&lt;code&gt;fields[]&lt;/code&gt; 가 현재 설정된 시간과 동기화 되면 True 입니다.</target>
        </trans-unit>
        <trans-unit id="f9008b59944e474716b6c279855a4c78603b9e73" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;fields[]&lt;/code&gt; are in sync with the currently set time. If false, then the next attempt to get the value of a field will force a recomputation of all fields from the current value of &lt;code&gt;time&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fields[]&lt;/code&gt; 가 현재 설정된 시간과 동기화되어 있으면 true 입니다. false 인 경우 다음에 필드 값을 가져 오려고하면 현재 &lt;code&gt;time&lt;/code&gt; 값에서 모든 필드를 다시 계산해야합니다 .</target>
        </trans-unit>
        <trans-unit id="316d6a9546a69f4fa93b8e29ea71be29825c4055" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;name&lt;/code&gt; matches this ObjectName.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 이이 ObjectName과 일치하면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="7d74cdbb58b6ecbcac3a0ef765cee10ee5e0d7b3" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is an ObjectName whose canonical form is equal to that of this ObjectName.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 정식 형식이이 ObjectName과 동일한 ObjectName 인 경우 참 입니다.</target>
        </trans-unit>
        <trans-unit id="c8d0f539ec0cef070a91f358f1a2c15c74d970da" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this PrinterURI attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 PrinterURI 속성과 동일한 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="f5ff83a5171e1f22fe9bd1d647c63c57c7f7c621" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this URI attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 URI 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="78a517787d59bde4667e895c1101649344c15ca0" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this copies attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 복사본 속성과 동일한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="debd04af9459fa14193dd46af30fee5f7051260a" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this copies supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 복사본 지원 속성과 동일한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="c78a6f27610d5e65cb2064729eff898ea0e03070" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this date-time at completed attribute, false otherwise.</source>
          <target state="translated">완료된 속성에서 &lt;code&gt;object&lt;/code&gt; 가이 날짜-시간과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a5d2dea2d175c00ba7a0c624cb1fac6db752ac44" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this date-time at creation attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 작성시이 날짜-시간과 동일한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a123332ed042028561a571511e8ffdcee65617d2" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this date-time at processing attribute, false otherwise.</source>
          <target state="translated">처리 속성에서 &lt;code&gt;object&lt;/code&gt; 가이 날짜-시간과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="042d32b64be9612eac1597129d3d8b62758db782" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this date-time attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 날짜-시간 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="32eeb754a247b34f3f4c6ac9ef3263d83fbfb6e9" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this destination attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 destination 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="a73062b2bf78d86898ca309f5e37bfb78b6a80d1" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this document name attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 문서명 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="ca3ca75d2887858d161d619559ce0b9cf2aa315d" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this integer attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 정수 속성에 해당 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="c0660c0d541c5bae8b10462386bd955c3dbe965c" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job K octets attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 K octets 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="30180f68b47f9549353326a0c11ec0d0aecaae28" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job K octets processed attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 K octets 처리 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="2b7d3e78b96c18bf47929ef0d2a080e154430969" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job K octets supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 K octets 지원 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="b53f332594b109ee4e955770ca84c8d643a8f8e6" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job hold until attribute, false otherwise.</source>
          <target state="translated">속성이 될 때까지 &lt;code&gt;object&lt;/code&gt; 가이 작업 보류와 동등한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="370648e0de26abf3709fa30cba89a4b44e622167" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job impressions attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 노출 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a4314844386a074052274b8fe7e0b100ecf3ee83" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job impressions completed attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 노출 완료 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a45af18ce0944078a918753b891fdadd163731c0" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job impressions supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 노출 지원 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="3d5dc84fe5210c7beab4cb2b2a3f5d6582023d42" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job media sheets attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 매체 시트 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="7378ee2254d9fa4f8e56e76757701609934a9ab9" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job media sheets completed attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 매체 시트 완료 속성과 동일한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="06f9d9ac3992c96fefc1e4fef8dafc528c43d8dc" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job media sheets supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 지원되는이 작업 매체 시트 속성과 동일한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="f08b3a579d9e48ac23f20d1ab42098114f2bf095" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job message from operator attribute, false otherwise.</source>
          <target state="translated">운영자 속성의 &lt;code&gt;object&lt;/code&gt; 가이 작업 메시지와 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="6b8822239f6df81c6840ab3a71c620a84a417af6" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job name attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 이름 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="1ea04e73ea945f7c8ace36a30b0cb140f8056780" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job originating user name attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 시작 사용자 이름 속성과 동일한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="db83998c8ad28006baf27710d7bfce52d68901c7" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job priority attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 우선 순위 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="7bdc113edf8fe71105dda622c453eaab1fd529d6" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job priority supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 우선 순위 지원 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="54dce3d84390b3568ca1685ed8c8ae7c237c9bce" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this media attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 미디어 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="67c4f98614d7b7c70dfeadd19988c94145ad1042" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this media margins attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 media margins 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="9226fd0b3150904362e91003b8c4244c4b7ab5de" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this media size attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 미디어 크기 속성과 동일한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a8c5b719128af1553dd3c3499e432bd7ec3bd852" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this number of documents attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 문서 수 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="5515b1ced5d5eed6cc4c583237af880d0dbd9743" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this number of intervening jobs attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 수의 개입 작업 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a7c15690962ce5e2e364a518d284a8b0f51c2f28" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this number up attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 number-up 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="62b718244bedd7caae1e8b5714f47ee65e724019" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this number up supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 지원되는이 숫자 지원 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="40d9c1c96c4ce710cdaa6bc2276979da01564190" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this output device assigned attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 출력 장치 할당 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a0c8ca6c59834aa1cf1480fc9e9fa72f5bcd02e5" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this page ranges attribute, false otherwise.</source>
          <target state="translated">경우는 true &lt;code&gt;object&lt;/code&gt; 그렇지 않은 경우는 false,이 페이지 범위 속성과 동일한 기능을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="79e421205af1ffead2e903264c2ea38c1328cca8" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this pages per minute attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 분당이 페이지 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a77bddaac82f96f88fec398e45568f7e0f4f502b" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this pages per minute color attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 분당이 페이지 색상 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="936e58366635010bf4cbc88e6bb441dd16bd6cf5" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer info attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 프린터 정보 속성과 동일한 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="a3869ad738e829e22b6ad1b283619a6803e635fb" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer location attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 프린터 위치 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="2e502f9d426a99490cb924f10d484d2b50384927" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer make and model attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 프린터 제조업체 및 모델 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="230db4c8c5525351a3158ca1d3bd3850c4830d64" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer message from operator attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 운영자 속성의이 프린터 메시지와 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="0b3b19272ee08b8dc7e38895e029afb3fa43b400" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer more info attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 프린터의 추가 정보 속성과 동일한 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="8158bbe8285598be830ae5cf794358ad1e6985a6" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer more info manufacturer attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 프린터의 추가 정보 제조업체 특성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="d4eaafce4348aa10f440d6b9e7e1fe59139f46b8" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer name attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 프린터 이름 특성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="8645ab04f082af554745c1d06d925e857de95c0e" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer resolution attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 프린터 해상도 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="07097e5a6dbc1780b24ae505e30115c6a7b8cafb" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this queued job count attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 대기 작업 수 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="7f41558e522e714a78e7e2bf7aafd89786bf37a5" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this requesting user name attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 요청하는 사용자 이름 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="b4cd45ae7096b6fa068eb9ee274f9ec6f50848ba" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this resolution attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 해상도 속성에 해당 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="c8150784974576b67a6ade27c52d4ba6dde1081f" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this set-of-integer attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 정수 세트 속성과 동일한 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="f03142c60449edb750c330936fd47e74eccd904e" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this text attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 텍스트 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="09115d70f2459084f4b16056c586c3bca86b875d" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this two-dimensional size attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 2 차원 크기 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="9979ae6f6f66da1bee0cd1bcaf8bca4868417cc6" translate="yes" xml:space="preserve">
          <source>True if a viewport should force the Scrollables height to match its own.</source>
          <target state="translated">뷰포트가 Scrollables 높이를 자신과 일치하도록 강제해야하는 경우 True입니다.</target>
        </trans-unit>
        <trans-unit id="59440881f789a805ea62d7f1c418f478248d46ff" translate="yes" xml:space="preserve">
          <source>True if a viewport should force the Scrollables width to match its own.</source>
          <target state="translated">뷰포트가 Scrollables 너비를 자신과 일치하도록 강제해야하는 경우 True입니다.</target>
        </trans-unit>
        <trans-unit id="d84529ce46c0b99b343bc272a1269269cb24f977" translate="yes" xml:space="preserve">
          <source>True if an equivalent copy of &lt;code&gt;newInstance&lt;/code&gt; may be created by applying a series of mutations to &lt;code&gt;oldInstance&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;oldInstance&lt;/code&gt; 에 일련의 변이를 적용하여 &lt;code&gt;newInstance&lt;/code&gt; 의 동등한 사본 을 작성할 수있는 경우 true 입니다.</target>
        </trans-unit>
        <trans-unit id="4abd6da7ee44770d3198f4caee0c6799a01360a6" translate="yes" xml:space="preserve">
          <source>True if doing optimizations for a largeModel.</source>
          <target state="translated">largeModel에 대한 최적화를 수행하는 경우 true입니다.</target>
        </trans-unit>
        <trans-unit id="80b67f43c04bb5ff42e816f2ed21ceadbd471ab3" translate="yes" xml:space="preserve">
          <source>True if doing optimizations for a largeModel. Subclasses that don't support this may wish to override createLayoutCache to not return a FixedHeightLayoutCache instance.</source>
          <target state="translated">largeModel에 대한 최적화를 수행하는 경우 true입니다. 이를 지원하지 않는 서브 클래스는 FixedHeightLayoutCache 인스턴스를 반환하지 않도록 createLayoutCache를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48f09e9f1164b8534140c5dbd220e84e813f94ab" translate="yes" xml:space="preserve">
          <source>True if handles are displayed at the topmost level of the tree.</source>
          <target state="translated">트리의 최상위 수준에 핸들이 표시되면 참입니다.</target>
        </trans-unit>
        <trans-unit id="085fcf6ce1d70c67792dd95a0c6eeb018ebf8020" translate="yes" xml:space="preserve">
          <source>True if has focus.</source>
          <target state="translated">초점이 있으면 참.</target>
        </trans-unit>
        <trans-unit id="c2d803ec851da5ad274b0b29bf9b789b13d1550d" translate="yes" xml:space="preserve">
          <source>True if literal characters in mask should be returned in stringToValue</source>
          <target state="translated">마스크의 리터럴 문자가 stringToValue로 반환되어야하는 경우 참</target>
        </trans-unit>
        <trans-unit id="6aeae7d598be2ce7ff587386b3e53fb639666085" translate="yes" xml:space="preserve">
          <source>True if row selection is allowed in this table.</source>
          <target state="translated">이 테이블에서 행 선택이 허용되면 참입니다.</target>
        </trans-unit>
        <trans-unit id="72acd669a5bae0f9027566fa8f540689c159adec" translate="yes" xml:space="preserve">
          <source>True if the MBean is already registered in the MBean server, false otherwise.</source>
          <target state="translated">MBean이 MBean 서버에 이미 등록되어 있으면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="d9e2b8a6231cfbc9b04840d1f2a8c52b47e58e7c" translate="yes" xml:space="preserve">
          <source>True if the annotated interface is an MXBean interface.</source>
          <target state="translated">주석이 달린 인터페이스가 MXBean 인터페이스 인 경우 참입니다.</target>
        </trans-unit>
        <trans-unit id="5e0678e798c9adf3be1ca57c92b6d28f2a9876fe" translate="yes" xml:space="preserve">
          <source>True if the attribute can be read, false otherwise.</source>
          <target state="translated">속성을 읽을 수 있으면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="430eefc3f193cd471d08a7b3fad3a3c7a4e81b03" translate="yes" xml:space="preserve">
          <source>True if the attribute can be written to, false otherwise.</source>
          <target state="translated">속성을 쓸 수 있으면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="0262528c6862f2163255b62c3a42780edb6a145e" translate="yes" xml:space="preserve">
          <source>True if the bean absolutely needs a GUI available in order to get its work done.</source>
          <target state="translated">Bean이 작업을 수행하기 위해 사용 가능한 GUI가 절대적으로 필요한 경우에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="b3e69cc2f740789146636c3d61d6e12ac29475d5" translate="yes" xml:space="preserve">
          <source>True if the border selection color should be drawn.</source>
          <target state="translated">테두리 선택 색상을 그려야하는 경우 True입니다.</target>
        </trans-unit>
        <trans-unit id="871d7e256eb6be73fc624c05f8c5efeae35a22a1" translate="yes" xml:space="preserve">
          <source>True if the class will honor the paintValue method.</source>
          <target state="translated">클래스가 paintValue 메소드를 존중하는 경우에 true입니다.</target>
        </trans-unit>
        <trans-unit id="4621f74235ec7cf97b2c8929084931baf757c70a" translate="yes" xml:space="preserve">
          <source>True if the diagnostic command is enabled, false otherwise</source>
          <target state="translated">진단 명령이 활성화 된 경우 true, 그렇지 않으면 false</target>
        </trans-unit>
        <trans-unit id="5b2610a91028db8e665ce846b0abcdd873a1d0b0" translate="yes" xml:space="preserve">
          <source>True if the given &lt;code&gt;obj&lt;/code&gt; is the same as this &lt;code&gt;SimpleTimeZone&lt;/code&gt; object; false otherwise.</source>
          <target state="translated">지정된 &lt;code&gt;obj&lt;/code&gt; 가이 &lt;code&gt;SimpleTimeZone&lt;/code&gt; 객체 와 같은 경우는 true . 그렇지 않으면 거짓.</target>
        </trans-unit>
        <trans-unit id="91a0286d93f75bfbf7e8ea933781e954a6586e48" translate="yes" xml:space="preserve">
          <source>True if the name is a domain pattern, otherwise false.</source>
          <target state="translated">이름이 도메인 패턴이면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="d295faae8d543ae95cae46c595b4fceb692cdf20" translate="yes" xml:space="preserve">
          <source>True if the name is a pattern, otherwise false.</source>
          <target state="translated">이름이 패턴이면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="e10ca211f228b3c5db003c3fea2a477c6338c590" translate="yes" xml:space="preserve">
          <source>True if the name is a property list pattern, otherwise false.</source>
          <target state="translated">이름이 속성 목록 패턴이면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="58593912db01af7865de5913714994c5ee75873b" translate="yes" xml:space="preserve">
          <source>True if the name is a property pattern, otherwise false.</source>
          <target state="translated">이름이 속성 패턴이면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="3c82e798826072fe1750a71d55e463b72e564ecc" translate="yes" xml:space="preserve">
          <source>True if the name is a property value pattern, otherwise false.</source>
          <target state="translated">이름이 속성 값 패턴이면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="296ddb6e0bfc97c39454a7352e9f5c4f06ff26e0" translate="yes" xml:space="preserve">
          <source>True if the next read() is guaranteed not to block for input</source>
          <target state="translated">다음 read ()가 입력을 차단하지 않도록 보장되면 true</target>
        </trans-unit>
        <trans-unit id="72177c90484795271749cc0029b51961fb02402d" translate="yes" xml:space="preserve">
          <source>True if the next read() is guaranteed not to block for input, false otherwise. Note that returning false does not guarantee that the next read will block.</source>
          <target state="translated">다음 read ()가 입력을 차단하지 않으면 true이고, 그렇지 않으면 false입니다. false를 반환한다고해서 다음 읽기가 차단되는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="e54ac9c8535cc38a8224b4aa1522f499f1cec117" translate="yes" xml:space="preserve">
          <source>True if the parameter can be specified several times, false otherwise</source>
          <target state="translated">매개 변수를 여러 번 지정할 수 있으면 true, 그렇지 않으면 false</target>
        </trans-unit>
        <trans-unit id="fdb912dfd27b1d484e29e06c975b601edbb666f2" translate="yes" xml:space="preserve">
          <source>True if the parameter is an option, false if it is an argument</source>
          <target state="translated">매개 변수가 옵션이면 true, 인수이면 false</target>
        </trans-unit>
        <trans-unit id="bade106b8255ae3de9b18e539eec22468e53e825" translate="yes" xml:space="preserve">
          <source>True if the parameter is mandatory, false otherwise</source>
          <target state="translated">매개 변수가 필수이면 true, 그렇지 않으면 false</target>
        </trans-unit>
        <trans-unit id="61d5fc75f48f05ea99011b3c8bdee26e5f9c97e2" translate="yes" xml:space="preserve">
          <source>True if the propertyEditor can provide a custom editor.</source>
          <target state="translated">propertyEditor가 사용자 정의 편집기를 제공 할 수있는 경우 참입니다.</target>
        </trans-unit>
        <trans-unit id="67371c8f68701530943732be85e883f939c9ad90" translate="yes" xml:space="preserve">
          <source>True if the query was successfully applied to the MBean, false otherwise</source>
          <target state="translated">쿼리가 MBean에 성공적으로 적용된 경우 true, 그렇지 않으면 false</target>
        </trans-unit>
        <trans-unit id="31e4c3234ce98dea898ccbb4c47e0354743cda4e" translate="yes" xml:space="preserve">
          <source>True if the root node is displayed, false if its children are the highest visible nodes.</source>
          <target state="translated">루트 노드가 표시되면 참, 하위 노드가 표시되는 가장 높은 노드이면 거짓.</target>
        </trans-unit>
        <trans-unit id="e80ddea7ca051d50120966df009c7766bbda8ec9" translate="yes" xml:space="preserve">
          <source>True if the scrollbar knob is being dragged.</source>
          <target state="translated">스크롤바 노브를 끌면 참입니다.</target>
        </trans-unit>
        <trans-unit id="b78db768fb19408b18c571000941a62f2f3d3a67" translate="yes" xml:space="preserve">
          <source>True if the two Attribute objects are equal, otherwise false.</source>
          <target state="translated">두 Attribute 객체가 같으면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="fdce3816caf0c099b4f01a9f4518db4ae50dcf6c" translate="yes" xml:space="preserve">
          <source>True if the two object instances are equal, otherwise false.</source>
          <target state="translated">두 객체 인스턴스가 같으면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a3b98ad5f49e1c1d38080f2110048b734b37b56b" translate="yes" xml:space="preserve">
          <source>True if the value associated with the given key property is a pattern, otherwise false.</source>
          <target state="translated">주어진 키 속성과 관련된 값이 패턴이면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="480e3bc436601c86e007f68526dfe91decb99d10" translate="yes" xml:space="preserve">
          <source>True if the value was set.</source>
          <target state="translated">값이 설정된 경우 True입니다.</target>
        </trans-unit>
        <trans-unit id="b7aabe8b66f27e0a9726d05be3f92428183cce1e" translate="yes" xml:space="preserve">
          <source>True if the value was set; else False</source>
          <target state="translated">값이 설정된 경우 True입니다. 그렇지 않으면 거짓</target>
        </trans-unit>
        <trans-unit id="74d60426c7ba57c327752e9ce02363321b815ba8" translate="yes" xml:space="preserve">
          <source>True if then the value of &lt;code&gt;time&lt;/code&gt; is valid.</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; 값 이 유효 하면 참 입니다.</target>
        </trans-unit>
        <trans-unit id="c83441fff2b565ae55b322b2e62426a67e8b1525" translate="yes" xml:space="preserve">
          <source>True if then the value of &lt;code&gt;time&lt;/code&gt; is valid. The time is made invalid by a change to an item of &lt;code&gt;field[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; 값 이 유효 하면 true 입니다. &lt;code&gt;field[]&lt;/code&gt; 항목을 변경하면 시간이 유효하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="673e66a932927c766564f59e6def50c88e451ac7" translate="yes" xml:space="preserve">
          <source>True if there is no more data in the buffered part of the stream.</source>
          <target state="translated">스트림의 버퍼링 된 부분에 더 이상 데이터가 없으면 참입니다.</target>
        </trans-unit>
        <trans-unit id="513e47a5017cdb24e4f4d20fc6b1ee63de51a72f" translate="yes" xml:space="preserve">
          <source>True if this Print Service supports specifying &lt;code&gt;attrval&lt;/code&gt; as a doc-level or job-level attribute in a Print Request, false if it doesn't.</source>
          <target state="translated">이 인쇄 서비스가 &lt;code&gt;attrval&lt;/code&gt; 을 인쇄 요청에서 문서 레벨 또는 작업 레벨 속성으로 지정하도록 지원 하면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="1d9ba50b3b690a8e0ac10e13867c2ac4cd8a38a5" translate="yes" xml:space="preserve">
          <source>True if this doc flavor object equals &lt;code&gt;obj&lt;/code&gt;, false otherwise.</source>
          <target state="translated">이 doc 플레이버 오브제 크트가 &lt;code&gt;obj&lt;/code&gt; 와 같은 경우는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="bc87f0b14529d6c96922d61e011d56a6033bc5de" translate="yes" xml:space="preserve">
          <source>True if this feature is intended for use by experts only.</source>
          <target state="translated">이 기능이 전문가 만 사용할 수있는 경우에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="936c0c8748822696fa2238857c6da82d450d8769" translate="yes" xml:space="preserve">
          <source>True if this feature should be hidden from human users.</source>
          <target state="translated">이 기능을 사용자에게 숨겨야하는 경우에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="9a2c9fbca019ccf921c07920b82ddcdd62c16f88" translate="yes" xml:space="preserve">
          <source>True if this feature should be preferentially shown to human users.</source>
          <target state="translated">이 기능이 사용자에게 우선적으로 표시되어야하는 경우에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="e81ae2ca658cccbae8b207880ff384cb9c71c187" translate="yes" xml:space="preserve">
          <source>True if this is a bound property.</source>
          <target state="translated">이 속성이 바인딩 된 속성 인 경우 true입니다.</target>
        </trans-unit>
        <trans-unit id="0384f2901c32d82f6dfeb7f8437c9cc22bf77e8f" translate="yes" xml:space="preserve">
          <source>True if this is a constrained property.</source>
          <target state="translated">이것이 제한된 속성 인 경우에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="0f20d043d01d9ed0dbe792a1c6b003c8f3f6fdec" translate="yes" xml:space="preserve">
          <source>True if this resolution attribute is less than or equal to the &lt;code&gt;other&lt;/code&gt; resolution attribute, false otherwise.</source>
          <target state="translated">이 해상도 속성이 &lt;code&gt;other&lt;/code&gt; 해상도 속성 보다 작거나 같으면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="b5d41f16126553b7a6db77032569b772a6cfca64" translate="yes" xml:space="preserve">
          <source>True if this set-of-integer attribute contains &lt;code&gt;theAttribute&lt;/code&gt;'s value, false otherwise.</source>
          <target state="translated">이 정수 세트 속성에 &lt;code&gt;theAttribute&lt;/code&gt; 값이 포함되는 경우는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="5ae279aab85e79b566f26af99b478fad1647c9e2" translate="yes" xml:space="preserve">
          <source>True if this set-of-integer attribute contains the value &lt;code&gt;x&lt;/code&gt;, false otherwise.</source>
          <target state="translated">이 정수 세트 속성에 &lt;code&gt;x&lt;/code&gt; 값이 포함되어 있으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="8c75a6bf7e61e4ed9b2807469a60c3f85451248b" translate="yes" xml:space="preserve">
          <source>True if we are running in an application construction environment.</source>
          <target state="translated">애플리케이션 구축 환경에서 실행중인 경우에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="01159a5439382c7219f5ad2557c8b74a5012df3f" translate="yes" xml:space="preserve">
          <source>True if we are running in an environment where beans can assume that an interactive GUI is available, so they can pop up dialog boxes, etc. This will normally return true in a windowing environment, and will normally return false in a server environment or if an application is running as part of a batch job.</source>
          <target state="translated">Bean이 대화식 GUI를 사용할 수 있다고 가정 할 수있는 환경에서 실행 중이면 대화 상자 등을 팝업 할 수 있습니다. 이는 일반적으로 창 환경에서는 true를 리턴하고 서버 환경에서는 일반적으로 false를 리턴합니다. 응용 프로그램이 일괄 작업의 일부로 실행 중입니다.</target>
        </trans-unit>
        <trans-unit id="e047319c4a28fa47382a8e8136ad99486ffe9139" translate="yes" xml:space="preserve">
          <source>True when the viewport dimensions have been determined.</source>
          <target state="translated">뷰포트 치수가 결정되면 참입니다.</target>
        </trans-unit>
        <trans-unit id="e1267039cd9948ec4147d3d54f1f53f09322a0c7" translate="yes" xml:space="preserve">
          <source>True when the viewport dimensions have been determined. The default is false.</source>
          <target state="translated">뷰포트 치수가 결정되면 참입니다. 기본값은 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="f162ea11b0d1750db8489a0816184c4b47d38184" translate="yes" xml:space="preserve">
          <source>True when this viewport is maintaining an offscreen image of its contents, so that some scrolling can take place using fast &quot;bit-blit&quot; operations instead of by accessing the view object to construct the display. The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 뷰포트가 콘텐츠의 오프 스크린 이미지를 유지하고 있으므로 일부 스크롤이 뷰 객체에 액세스하여 디스플레이를 구성하는 대신 빠른 &quot;비트 블릿&quot;작업을 사용하여 발생할 수있는 경우 참입니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="af345ec9c24b9fc6fe235d4ba49a4123f3376ae5" translate="yes" xml:space="preserve">
          <source>TrueType fonts typically provide this information in the 'gasp' table. In the absence of this information, the behaviour for a particular font and size is determined by implementation defaults.</source>
          <target state="translated">트루 타입 글꼴은 일반적으로 'gasp'테이블에이 정보를 제공합니다. 이 정보가없는 경우 특정 글꼴 및 크기에 대한 동작은 구현 기본값에 따라 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="71c1ef867208ae9b80b1c1103182a8385cfd1e50" translate="yes" xml:space="preserve">
          <source>Truncates the &lt;code&gt;BLOB&lt;/code&gt; value that this &lt;code&gt;Blob&lt;/code&gt; object represents to be &lt;code&gt;len&lt;/code&gt; bytes in length.</source>
          <target state="translated">이 &lt;code&gt;Blob&lt;/code&gt; 오브젝트 가 길이 가 &lt;code&gt;len&lt;/code&gt; 바이트로 표시 되는 &lt;code&gt;BLOB&lt;/code&gt; 값을 자릅니다 .</target>
        </trans-unit>
        <trans-unit id="8ff473282a1857f09f1061d0eb9cf1f77c0769c3" translate="yes" xml:space="preserve">
          <source>Truncates the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;Clob&lt;/code&gt; designates to have a length of &lt;code&gt;len&lt;/code&gt; characters.</source>
          <target state="translated">이 &lt;code&gt;Clob&lt;/code&gt; 이 &lt;code&gt;len&lt;/code&gt; 문자 의 길이를 갖도록 지정 하는 &lt;code&gt;CLOB&lt;/code&gt; 값을 자릅니다 .</target>
        </trans-unit>
        <trans-unit id="fe6c335e97860eef78d5b3e57afb036c5e7b3032" translate="yes" xml:space="preserve">
          <source>Truncates the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;SerialClob&lt;/code&gt; object represents so that it has a length of &lt;code&gt;len&lt;/code&gt; characters.</source>
          <target state="translated">이 &lt;code&gt;SerialClob&lt;/code&gt; 객체가 나타내는 &lt;code&gt;CLOB&lt;/code&gt; 값을 잘라서 &lt;code&gt;len&lt;/code&gt; 문자 의 길이를 갖도록합니다 .</target>
        </trans-unit>
        <trans-unit id="ff6d79205307304ccbe04a5cfb0c6bd0adec8d8e" translate="yes" xml:space="preserve">
          <source>Truncates the entity, to which this channel is connected, to the given size.</source>
          <target state="translated">이 채널이 연결된 엔티티를 지정된 크기로 자릅니다.</target>
        </trans-unit>
        <trans-unit id="ad6547800e3cc053297a9a2f061b6284a1c42184" translate="yes" xml:space="preserve">
          <source>Truncates this channel's file to the given size.</source>
          <target state="translated">이 채널의 파일을 지정된 크기로 자릅니다.</target>
        </trans-unit>
        <trans-unit id="8f1f97247a5e2fbe4c50794c4ca0e63e0c699f44" translate="yes" xml:space="preserve">
          <source>Truncating a &lt;code&gt;SerialClob&lt;/code&gt; object to length 0 has the effect of clearing its contents.</source>
          <target state="translated">절단 &lt;code&gt;SerialClob&lt;/code&gt; 의 길이를 0으로하는 오브젝트의 내용을 지우는 효과가있다.</target>
        </trans-unit>
        <trans-unit id="89e89d74270afb12e09729da4590a98e87eac88e" translate="yes" xml:space="preserve">
          <source>Truncating the duration returns a copy of the original with conceptual fields smaller than the specified unit set to zero. For example, truncating with the &lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt;&lt;code&gt;MINUTES&lt;/code&gt;&lt;/a&gt; unit will round down towards zero to the nearest minute, setting the seconds and nanoseconds to zero.</source>
          <target state="translated">기간을 자르면 지정된 단위보다 작은 개념 필드가 0으로 설정된 원본 사본이 반환됩니다. 예를 들어 &lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt; &lt;code&gt;MINUTES&lt;/code&gt; &lt;/a&gt; 단위로 자르면 0에서 가장 가까운 분으로 내림하여 초와 나노초를 0으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="79a3f99a7603cf1991a756cae56124de8247db87" translate="yes" xml:space="preserve">
          <source>Truncating the instant returns a copy of the original with fields smaller than the specified unit set to zero. The fields are calculated on the basis of using a UTC offset as seen in &lt;code&gt;toString&lt;/code&gt;. For example, truncating with the &lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt;&lt;code&gt;MINUTES&lt;/code&gt;&lt;/a&gt; unit will round down to the nearest minute, setting the seconds and nanoseconds to zero.</source>
          <target state="translated">인스턴트를 자르면 지정된 단위보다 작은 필드가 0으로 설정된 원본의 사본이 반환됩니다. 필드는 &lt;code&gt;toString&lt;/code&gt; 에 표시된 UTC 오프셋을 사용하여 계산됩니다 . 예를 들어 &lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt; &lt;code&gt;MINUTES&lt;/code&gt; &lt;/a&gt; 단위로 자르면 가장 가까운 분으로 반올림하여 초와 나노초를 0으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="46728e78399c2ef4201c30b70feba7f32a425954" translate="yes" xml:space="preserve">
          <source>Truncation returns a copy of the original date-time with fields smaller than the specified unit set to zero. For example, truncating with the &lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt;&lt;code&gt;minutes&lt;/code&gt;&lt;/a&gt; unit will set the second-of-minute and nano-of-second field to zero.</source>
          <target state="translated">잘림은 지정된 단위보다 작은 필드가 0으로 설정된 원래 날짜-시간의 복사본을 반환합니다. 예를 들어, &lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt; &lt;code&gt;minutes&lt;/code&gt; &lt;/a&gt; 단위로 자르면 초와 나노초 필드가 0으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="1f29e0520ca15424c75fc5c7c1e020e8b57e547d" translate="yes" xml:space="preserve">
          <source>Truncation returns a copy of the original time with fields smaller than the specified unit set to zero. For example, truncating with the &lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt;&lt;code&gt;minutes&lt;/code&gt;&lt;/a&gt; unit will set the second-of-minute and nano-of-second field to zero.</source>
          <target state="translated">잘림은 지정된 단위보다 작은 필드가 0으로 설정된 원래 시간의 복사본을 반환합니다. 예를 들어, &lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt; &lt;code&gt;minutes&lt;/code&gt; &lt;/a&gt; 단위로 자르면 초와 나노초 필드가 0으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="9ff1fa71f94fa80ea032f012d9275d9d960ef7bf" translate="yes" xml:space="preserve">
          <source>TrustAnchor</source>
          <target state="translated">TrustAnchor</target>
        </trans-unit>
        <trans-unit id="e1198f03c160dcee02f250da582eacc5135d366c" translate="yes" xml:space="preserve">
          <source>TrustAnchor.getCA()</source>
          <target state="translated">TrustAnchor.getCA()</target>
        </trans-unit>
        <trans-unit id="962dc9f9ba08469e8bc4b06894f7ed9ab8a27904" translate="yes" xml:space="preserve">
          <source>TrustAnchor.getCAName()</source>
          <target state="translated">TrustAnchor.getCAName()</target>
        </trans-unit>
        <trans-unit id="edfbf18d143b7b10b5f8635b31c3dd8efeeb1a7c" translate="yes" xml:space="preserve">
          <source>TrustAnchor.getCAPublicKey()</source>
          <target state="translated">TrustAnchor.getCAPublicKey()</target>
        </trans-unit>
        <trans-unit id="e0619f9daa82cad2de4c96355d9e952cf6db60a8" translate="yes" xml:space="preserve">
          <source>TrustAnchor.getNameConstraints()</source>
          <target state="translated">TrustAnchor.getNameConstraints()</target>
        </trans-unit>
        <trans-unit id="3a73962db8321c7bb663d99d968fa08492487ae3" translate="yes" xml:space="preserve">
          <source>TrustAnchor.getTrustedCert()</source>
          <target state="translated">TrustAnchor.getTrustedCert()</target>
        </trans-unit>
        <trans-unit id="2d12bf7262a60b66f9ef0c4aed5e014369200002" translate="yes" xml:space="preserve">
          <source>TrustAnchor.toString()</source>
          <target state="translated">TrustAnchor.toString()</target>
        </trans-unit>
        <trans-unit id="cf170153db4f3bf87be22cf4d6df3d50bf346cf1" translate="yes" xml:space="preserve">
          <source>TrustManager</source>
          <target state="translated">TrustManager</target>
        </trans-unit>
        <trans-unit id="b38b25686e83f7263c127858a07ef41818b4e939" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory</source>
          <target state="translated">TrustManagerFactory</target>
        </trans-unit>
        <trans-unit id="4e7970986e1c932f399b3bc4fb5a4b57bdc309c6" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory.getAlgorithm()</source>
          <target state="translated">TrustManagerFactory.getAlgorithm()</target>
        </trans-unit>
        <trans-unit id="5f4d699ddce6bf46800f2e8b97a808b5737b53c0" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory.getDefaultAlgorithm()</source>
          <target state="translated">TrustManagerFactory.getDefaultAlgorithm()</target>
        </trans-unit>
        <trans-unit id="b10571068827658b3b755d6e3f3cecb9a46661f5" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory.getInstance()</source>
          <target state="translated">TrustManagerFactory.getInstance()</target>
        </trans-unit>
        <trans-unit id="9e62d2c8eca05e38e204da2a35189b4f1200f9a1" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory.getProvider()</source>
          <target state="translated">TrustManagerFactory.getProvider()</target>
        </trans-unit>
        <trans-unit id="2d10fdf7767f1f64ab4cc0d93331c4f79ff7011e" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory.getTrustManagers()</source>
          <target state="translated">TrustManagerFactory.getTrustManagers()</target>
        </trans-unit>
        <trans-unit id="e324560c6bc2ca29aedabe0ff28b3a7845588ff8" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory.init()</source>
          <target state="translated">TrustManagerFactory.init()</target>
        </trans-unit>
        <trans-unit id="3fb8699eb45c86babcb3771077865c43dd636f5a" translate="yes" xml:space="preserve">
          <source>TrustManagerFactorySpi</source>
          <target state="translated">TrustManagerFactorySpi</target>
        </trans-unit>
        <trans-unit id="8c67faa49913e7372282549efd20ca5804ac76ac" translate="yes" xml:space="preserve">
          <source>TrustManagerFactorySpi.engineGetTrustManagers()</source>
          <target state="translated">TrustManagerFactorySpi.engineGetTrustManagers()</target>
        </trans-unit>
        <trans-unit id="59664be8fdddfb869d86416b222fcac7ca15dec5" translate="yes" xml:space="preserve">
          <source>TrustManagerFactorySpi.engineInit()</source>
          <target state="translated">TrustManagerFactorySpi.engineInit()</target>
        </trans-unit>
        <trans-unit id="85a5c0ad6b1cbb5deac6e76b7268202bd210aff9" translate="yes" xml:space="preserve">
          <source>TrustedCertificateEntry</source>
          <target state="translated">TrustedCertificateEntry</target>
        </trans-unit>
        <trans-unit id="6a1710b761422dee5a93a2051bd124d4c19f7016" translate="yes" xml:space="preserve">
          <source>Try to receieve another message or notification.</source>
          <target state="translated">다른 메시지 나 알림을 받아보십시오.</target>
        </trans-unit>
        <trans-unit id="051e3db63c5f4e3f2583d9180b61c8a7c6e0b07b" translate="yes" xml:space="preserve">
          <source>TryTree</source>
          <target state="translated">TryTree</target>
        </trans-unit>
        <trans-unit id="ff23fb7ffbe3db8e73acfd8369f40dc54385ba74" translate="yes" xml:space="preserve">
          <source>Tue; Tuesday; T</source>
          <target state="translated">화요일 화요일; 티</target>
        </trans-unit>
        <trans-unit id="df39c6b0ac9b9b3fdb7c850a7a5dd416cd1c6fde" translate="yes" xml:space="preserve">
          <source>Turn continuous layout on/off.</source>
          <target state="translated">연속 레이아웃을 켜거나 끕니다.</target>
        </trans-unit>
        <trans-unit id="91ce767ce3ed3a0ee4a2081bf9c312d31a58fee7" translate="yes" xml:space="preserve">
          <source>Turns local control on or off.</source>
          <target state="translated">로컬 제어를 켜거나 끕니다.</target>
        </trans-unit>
        <trans-unit id="ebb42ab3958f13b91f530184c472d059675c2a3c" translate="yes" xml:space="preserve">
          <source>Turns local control on or off. The default is for local control to be on. The &quot;on&quot; setting means that if a device is capable of both synthesizing sound and transmitting MIDI messages, it will synthesize sound in response to the note-on and note-off messages that it itself transmits. It will also respond to messages received from other transmitting devices. The &quot;off&quot; setting means that the synthesizer will ignore its own transmitted MIDI messages, but not those received from other devices.</source>
          <target state="translated">로컬 제어를 켜거나 끕니다. 기본값은 로컬 제어가 켜져있는 것입니다. &quot;on&quot;설정은 장치가 사운드를 합성하고 MIDI 메시지를 전송할 수있는 경우 자체적으로 전송하는 note-on 및 note-off 메시지에 응답하여 사운드를 합성 함을 의미합니다. 또한 다른 전송 장치에서 수신 한 메시지에도 응답합니다. &quot;off&quot;설정은 신디사이저가 자신이 전송 한 MIDI 메시지를 무시하지만 다른 장치에서 수신 한 메시지는 무시한다는 의미입니다.</target>
        </trans-unit>
        <trans-unit id="7072217a4d4e0b86b0b43ee21814c1ae891bbde1" translate="yes" xml:space="preserve">
          <source>Turns local control on or off. The default is for local control to be on. The &quot;on&quot; setting means that if a device is capable of both synthesizing sound and transmitting MIDI messages, it will synthesize sound in response to the note-on and note-off messages that it itself transmits. It will also respond to messages received from other transmitting devices. The &quot;off&quot; setting means that the synthesizer will ignore its own transmitted MIDI messages, but not those received from other devices. It is possible that the underlying synthesizer does not support local control. In order to verify that a call to &lt;code&gt;localControl&lt;/code&gt; was successful, check the return value.</source>
          <target state="translated">로컬 컨트롤을 켜거나 끕니다. 기본 설정은 로컬 제어가 켜져있는 것입니다. &quot;온&quot;설정은 장치가 사운드를 합성하고 MIDI 메시지를 전송할 수있는 경우, 자체적으로 전송하는 노트 온 및 노트 오프 메시지에 응답하여 사운드를 합성한다는 것을 의미합니다. 또한 다른 전송 장치에서 수신 한 메시지에 응답합니다. &quot;off&quot;설정은 신디사이저가 자체 전송 된 MIDI 메시지를 무시하지만 다른 장치에서 수신 된 메시지는 무시한다는 것을 의미합니다. 기본 신디사이저가 로컬 컨트롤을 지원하지 않을 수 있습니다. &lt;code&gt;localControl&lt;/code&gt; 에 대한 호출 이 성공적인지 확인하려면 리턴 값을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a788f6e3859d6bdc7eb80baf0c9b04e8e2014c15" translate="yes" xml:space="preserve">
          <source>Turns mono mode on or off.</source>
          <target state="translated">모노 모드를 켜거나 끕니다.</target>
        </trans-unit>
        <trans-unit id="5ce9559f4b22fd455c3313b028b1ce2207e86a26" translate="yes" xml:space="preserve">
          <source>Turns mono mode on or off. In mono mode, the channel synthesizes only one note at a time. In poly mode (identical to mono mode off), the channel can synthesize multiple notes simultaneously. The default is mono off (poly mode on).</source>
          <target state="translated">모노 모드를 켜거나 끕니다. 모노 모드에서 채널은 한 번에 하나의 음만 합성합니다. 폴리 모드 (모노 모드 꺼짐과 동일)에서 채널은 여러 음을 동시에 합성 할 수 있습니다. 기본값은 모노 꺼짐 (폴리 모드 켜짐)입니다.</target>
        </trans-unit>
        <trans-unit id="b4f8243d4bac990db2eb1b88fb07c3d3ced0f0c2" translate="yes" xml:space="preserve">
          <source>Turns off all notes that are currently sounding on this channel.</source>
          <target state="translated">이 채널에서 현재 소리가 나는 모든 음을 끕니다.</target>
        </trans-unit>
        <trans-unit id="3e2ea67556cf4452b0acd08c573d0f6235c18834" translate="yes" xml:space="preserve">
          <source>Turns off all notes that are currently sounding on this channel. The notes might not die away instantaneously; their decay rate is determined by the internals of the &lt;code&gt;Instrument&lt;/code&gt;. If the Hold Pedal controller (see &lt;a href=&quot;#controlChange(int,int)&quot;&gt;&lt;code&gt;controlChange&lt;/code&gt;&lt;/a&gt;) is down, the effect of this method is deferred until the pedal is released.</source>
          <target state="translated">이 채널에서 현재 소리가 나는 모든 음을 끕니다. 음표는 즉시 사라지지 않을 수 있습니다. 그들의 감쇠율은 &lt;code&gt;Instrument&lt;/code&gt; 의 내부에 의해 결정됩니다 . 홀드 페달 컨트롤러 ( &lt;a href=&quot;#controlChange(int,int)&quot;&gt; &lt;code&gt;controlChange&lt;/code&gt; &lt;/a&gt; 참조 )가 내려져 있으면이 방법의 효과는 페달에서 발을 뗄 때까지 연기됩니다.</target>
        </trans-unit>
        <trans-unit id="e1cb764c3fc90ec12c04780c545174c2e044a33b" translate="yes" xml:space="preserve">
          <source>Turns off all notes that are currently sounding on this channel. The notes might not die away instantaneously; their decay rate is determined by the internals of the &lt;code&gt;Instrument&lt;/code&gt;. If the Hold Pedal controller (see &lt;a href=&quot;midichannel#controlChange-int-int-&quot;&gt;&lt;code&gt;controlChange&lt;/code&gt;&lt;/a&gt;) is down, the effect of this method is deferred until the pedal is released.</source>
          <target state="translated">이 채널에서 현재 소리 나는 모든 음을 끕니다. 노트는 즉시 죽지 않을 수도 있습니다. 감쇠율은 &lt;code&gt;Instrument&lt;/code&gt; 내부에 의해 결정됩니다 . Hold Pedal 컨트롤러 ( &lt;a href=&quot;midichannel#controlChange-int-int-&quot;&gt; &lt;code&gt;controlChange&lt;/code&gt; &lt;/a&gt; 참조 )가 다운되면 페달을 놓을 때까지이 방법의 효과가 지연됩니다.</target>
        </trans-unit>
        <trans-unit id="e93cd6e957269008eed2366ab803e79886117f7d" translate="yes" xml:space="preserve">
          <source>Turns omni mode on or off.</source>
          <target state="translated">옴니 모드를 켜거나 끕니다.</target>
        </trans-unit>
        <trans-unit id="68b63ed6f95c0c13473caef4b53ab0d0aaab42b7" translate="yes" xml:space="preserve">
          <source>Turns omni mode on or off. In omni mode, the channel responds to messages sent on all channels. When omni is off, the channel responds only to messages sent on its channel number. The default is omni off.</source>
          <target state="translated">옴니 모드를 켜거나 끕니다. 옴니 모드에서 채널은 모든 채널에서 전송 된 메시지에 응답합니다. omni가 꺼져 있으면 채널은 해당 채널 번호로 전송 된 메시지에만 응답합니다. 기본값은 omni off입니다.</target>
        </trans-unit>
        <trans-unit id="b69131d82a65694e0dc5e7f5a0f9f802953cfea2" translate="yes" xml:space="preserve">
          <source>Turns omni mode on or off. In omni mode, the channel responds to messages sent on all channels. When omni is off, the channel responds only to messages sent on its channel number. The default is omni off. It is possible that the underlying synthesizer does not support omni mode. In order to verify that &lt;code&gt;setOmni&lt;/code&gt; was successful, use &lt;code&gt;getOmni&lt;/code&gt;.</source>
          <target state="translated">옴니 모드를 켜거나 끕니다. 옴니 모드에서 채널은 모든 채널에서 전송 된 메시지에 응답합니다. 옴니가 꺼져 있으면 채널 번호로 전송 된 메시지에만 채널이 응답합니다. 기본값은 omni off입니다. 기본 신디사이저가 옴니 모드를 지원하지 않을 수 있습니다. &lt;code&gt;setOmni&lt;/code&gt; 가 성공 했는지 확인 하려면 &lt;code&gt;getOmni&lt;/code&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="0539d58ba1f558b9ccab44c2e0ade1c30c5f11d9" translate="yes" xml:space="preserve">
          <source>Turns on or off automatic drag handling.</source>
          <target state="translated">자동 끌기 처리를 켜거나 끕니다.</target>
        </trans-unit>
        <trans-unit id="a8b7bce45a1d53871692bf738f2fe649d2e51e04" translate="yes" xml:space="preserve">
          <source>Turns on or off automatic drag handling. In order to enable automatic drag handling, this property should be set to &lt;code&gt;true&lt;/code&gt;, and the component's &lt;code&gt;TransferHandler&lt;/code&gt; needs to be &lt;code&gt;non-null&lt;/code&gt;. The default value of the &lt;code&gt;dragEnabled&lt;/code&gt; property is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">자동 끌기 처리를 켜거나 끕니다. 자동 드래그 처리를 활성화하려면이 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정해야하며 구성 요소의 &lt;code&gt;TransferHandler&lt;/code&gt; 가 &lt;code&gt;non-null&lt;/code&gt; 이 아니 어야합니다 . &lt;code&gt;dragEnabled&lt;/code&gt; 속성 의 기본값 은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="60f603afabbe22b7e8e27f8bb4f47d17e696b4bd" translate="yes" xml:space="preserve">
          <source>Turns on or off automatic drag handling. In order to enable automatic drag handling, this property should be set to &lt;code&gt;true&lt;/code&gt;, and the list's &lt;code&gt;TransferHandler&lt;/code&gt; needs to be &lt;code&gt;non-null&lt;/code&gt;. The default value of the &lt;code&gt;dragEnabled&lt;/code&gt; property is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">자동 끌기 처리를 켜거나 끕니다. 자동 드래그 처리를 활성화하려면이 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정해야하며 목록의 &lt;code&gt;TransferHandler&lt;/code&gt; 가 &lt;code&gt;non-null&lt;/code&gt; 이 아니 어야합니다 . &lt;code&gt;dragEnabled&lt;/code&gt; 속성 의 기본값 은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1ee74680c25c446a236fa302b096261e279e3aaa" translate="yes" xml:space="preserve">
          <source>Turns on or off automatic drag handling. In order to enable automatic drag handling, this property should be set to &lt;code&gt;true&lt;/code&gt;, and the table's &lt;code&gt;TransferHandler&lt;/code&gt; needs to be &lt;code&gt;non-null&lt;/code&gt;. The default value of the &lt;code&gt;dragEnabled&lt;/code&gt; property is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">자동 끌기 처리를 켜거나 끕니다. 자동 드래그 처리를 활성화하려면이 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정해야하며 테이블의 &lt;code&gt;TransferHandler&lt;/code&gt; 가 &lt;code&gt;non-null&lt;/code&gt; 이 아니 어야합니다 . &lt;code&gt;dragEnabled&lt;/code&gt; 속성 의 기본값 은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f496f53bfbc4ce71ff58ce24079ee185b191a5d7" translate="yes" xml:space="preserve">
          <source>Turns on or off automatic drag handling. In order to enable automatic drag handling, this property should be set to &lt;code&gt;true&lt;/code&gt;, and the tree's &lt;code&gt;TransferHandler&lt;/code&gt; needs to be &lt;code&gt;non-null&lt;/code&gt;. The default value of the &lt;code&gt;dragEnabled&lt;/code&gt; property is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">자동 끌기 처리를 켜거나 끕니다. 자동 드래그 처리를 활성화하려면이 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정해야하며 트리의 &lt;code&gt;TransferHandler&lt;/code&gt; 가 &lt;code&gt;non-null&lt;/code&gt; 이 아니 어야합니다 . &lt;code&gt;dragEnabled&lt;/code&gt; 속성 의 기본값 은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="233609026ab4041d80992e5ced4db5288ab3c61d" translate="yes" xml:space="preserve">
          <source>Turns on/off implementation specific DTD validation</source>
          <target state="translated">구현 별 DTD 유효성 검사를 켜거나 끕니다.</target>
        </trans-unit>
        <trans-unit id="92fd7b9e9ad96e695decbf8aef59ba92ef4b7afc" translate="yes" xml:space="preserve">
          <source>Turns on/off namespace processing for XML 1.0 support</source>
          <target state="translated">XML 1.0 지원을 위해 네임 스페이스 처리를 설정 / 해제합니다.</target>
        </trans-unit>
        <trans-unit id="7dca574f5cbb4fb549ff8537f300c7d9266f8589" translate="yes" xml:space="preserve">
          <source>Turns the digest function on or off.</source>
          <target state="translated">다이제스트 기능을 켜거나 끕니다.</target>
        </trans-unit>
        <trans-unit id="b41b6160386def9c3b24b59d70a186f5f05cd9d0" translate="yes" xml:space="preserve">
          <source>Turns the digest function on or off. The default is on. When it is on, a call to one of the &lt;code&gt;read&lt;/code&gt; methods results in an update on the message digest. But when it is off, the message digest is not updated.</source>
          <target state="translated">다이제스트 기능을 켜거나 끕니다. 기본값은 켜져 있습니다. 켜져 있으면 &lt;code&gt;read&lt;/code&gt; 방법 중 하나를 호출 하면 메시지 요약이 업데이트됩니다. 그러나 해제되어 있으면 메시지 요약이 업데이트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="82f2258b914e31cbffa36e7b526ce6ed41c142e1" translate="yes" xml:space="preserve">
          <source>Turns the digest function on or off. The default is on. When it is on, a call to one of the &lt;code&gt;write&lt;/code&gt; methods results in an update on the message digest. But when it is off, the message digest is not updated.</source>
          <target state="translated">다이제스트 기능을 켜거나 끕니다. 기본값은 켜져 있습니다. 켜져 있으면 &lt;code&gt;write&lt;/code&gt; 메소드 중 하나를 호출 하면 메시지 요약이 업데이트됩니다. 그러나 해제되어 있으면 메시지 요약이 업데이트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="00229f015752c0881b83f9e6f7a6ac3a52a1d247" translate="yes" xml:space="preserve">
          <source>Turns the specified note off.</source>
          <target state="translated">지정된 음표를 끕니다.</target>
        </trans-unit>
        <trans-unit id="7a4d6c3ffeea013bc7c9e2428fbd36232e6dd525" translate="yes" xml:space="preserve">
          <source>Turns the specified note off. The key-up velocity, if not ignored, can be used to affect how quickly the note decays. In any case, the note might not die away instantaneously; its decay rate is determined by the internals of the &lt;code&gt;Instrument&lt;/code&gt;. If the Hold Pedal (a controller; see &lt;a href=&quot;#controlChange(int,int)&quot;&gt;&lt;code&gt;controlChange&lt;/code&gt;&lt;/a&gt;) is down, the effect of this method is deferred until the pedal is released.</source>
          <target state="translated">지정된 메모를 끕니다. 키 업 속도를 무시하지 않으면 음의 감쇠 속도에 영향을 줄 수 있습니다. 어쨌든 메모는 즉시 사라지지 않을 수 있습니다. 그것의 붕괴율은 &lt;code&gt;Instrument&lt;/code&gt; 의 내부에 의해 결정됩니다 . 홀드 페달 (컨트롤러, &lt;a href=&quot;#controlChange(int,int)&quot;&gt; &lt;code&gt;controlChange&lt;/code&gt; &lt;/a&gt; 참조 )이 내려져 있으면 페달에서 발을 뗄 때까지이 메서드의 효과가 연기됩니다.</target>
        </trans-unit>
        <trans-unit id="be797f59792eace5578bb5bd17367f2fcd155546" translate="yes" xml:space="preserve">
          <source>Turns the specified note off. The key-up velocity, if not ignored, can be used to affect how quickly the note decays. In any case, the note might not die away instantaneously; its decay rate is determined by the internals of the &lt;code&gt;Instrument&lt;/code&gt;. If the Hold Pedal (a controller; see &lt;a href=&quot;midichannel#controlChange-int-int-&quot;&gt;&lt;code&gt;controlChange&lt;/code&gt;&lt;/a&gt;) is down, the effect of this method is deferred until the pedal is released.</source>
          <target state="translated">지정된 음표를 끕니다. 건반 속도는 무시하지 않으면 음표가 얼마나 빨리 소멸되는지에 영향을 줄 수 있습니다. 어쨌든 메모는 즉시 죽지 않을 수도 있습니다. 감쇠율은 &lt;code&gt;Instrument&lt;/code&gt; 의 내부에 의해 결정됩니다 . 홀드 페달 (컨트롤러; &lt;a href=&quot;midichannel#controlChange-int-int-&quot;&gt; &lt;code&gt;controlChange&lt;/code&gt; &lt;/a&gt; 참조 )이 다운되면 페달을 놓을 때까지이 방법의 효과가 지연됩니다.</target>
        </trans-unit>
        <trans-unit id="486ab448f3499d0baf649cc5bac397b3cd137ed4" translate="yes" xml:space="preserve">
          <source>Turns this &lt;code&gt;UndoManager&lt;/code&gt; into a normal &lt;code&gt;CompoundEdit&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;UndoManager&lt;/code&gt; 를 일반 &lt;code&gt;CompoundEdit&lt;/code&gt; 로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="19b88d9d774ecd7cadc8654a377f96d9750fd11f" translate="yes" xml:space="preserve">
          <source>Turns this &lt;code&gt;UndoManager&lt;/code&gt; into a normal &lt;code&gt;CompoundEdit&lt;/code&gt;. This removes all edits that have been undone.</source>
          <target state="translated">이 &lt;code&gt;UndoManager&lt;/code&gt; 를 일반 &lt;code&gt;CompoundEdit&lt;/code&gt; 로 바꿉니다 . 이렇게하면 취소 된 모든 편집 내용이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="3cbf4957811d182a140c60394c9d804e7be71f2f" translate="yes" xml:space="preserve">
          <source>Twice the old capacity, plus &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">기존 용량의 두 배에 &lt;code&gt;2&lt;/code&gt; 를 더한 값 입니다.</target>
        </trans-unit>
        <trans-unit id="3963b2bdc52d8c572907a77d154125a67fb6430c" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;ArrayType&lt;/code&gt; instances are equal if and only if they describe array instances which have the same dimension, elements' open type and primitive array flag.</source>
          <target state="translated">두 개의 &lt;code&gt;ArrayType&lt;/code&gt; 인스턴스는 동일한 차원, 요소의 개방형 및 기본 배열 플래그를 갖는 배열 인스턴스를 설명하는 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="7393bf9d05310d00acc183e1ca7d39763b45e0ae" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;CompositeType&lt;/code&gt; instances are equal if and only if all of the following statements are true:</source>
          <target state="translated">다음 명령문이 모두 참인 경우에만 두 &lt;code&gt;CompositeType&lt;/code&gt; 인스턴스가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="bb0675f8ba3f77cac2364197ffbb564d511eb1b1" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;Exports&lt;/code&gt; objects are compared by comparing the package names lexicographically. Where the packages names are equal then the sets of modifiers are compared in the same way that module modifiers are compared (see &lt;a href=&quot;moduledescriptor#compareTo(java.lang.module.ModuleDescriptor)&quot;&gt;&lt;code&gt;ModuleDescriptor.compareTo&lt;/code&gt;&lt;/a&gt;). Where the package names are equal and the set of modifiers are equal then the set of target modules are compared. This is done by sorting the names of the target modules in ascending order, and according to their natural ordering, and then comparing the corresponding elements lexicographically. Where the sets differ in size, and the larger set contains all elements of the smaller set, then the larger set is considered to succeed the smaller set.</source>
          <target state="translated">패키지 이름을 사 전적으로 비교하여 두 개의 &lt;code&gt;Exports&lt;/code&gt; 객체를 비교합니다. 패키지 이름이 동일한 경우 수정 자 집합은 모듈 수정자를 비교하는 것과 동일한 방식으로 비교됩니다 ( &lt;a href=&quot;moduledescriptor#compareTo(java.lang.module.ModuleDescriptor)&quot;&gt; &lt;code&gt;ModuleDescriptor.compareTo&lt;/code&gt; &lt;/a&gt; 참조 ). 패키지 이름이 같고 수정 자 집합이 동일한 경우 대상 모듈 집합이 비교됩니다. 이는 대상 모듈의 이름을 오름차순과 자연스러운 순서에 따라 정렬 한 다음 해당 요소를 사전 순으로 비교하여 수행됩니다. 세트의 크기가 다르고 더 큰 세트가 더 작은 세트의 모든 요소를 ​​포함하는 경우 더 큰 세트가 더 작은 세트를 성공하는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="654898b748c63eb5f7e8749d8eb27a61fb220d13" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;ModuleDescriptor&lt;/code&gt; objects are compared by comparing their module names lexicographically. Where the module names are equal then the module versions are compared. When comparing the module versions then a module descriptor with a version is considered to succeed a module descriptor that does not have a version. If both versions are &lt;a href=&quot;moduledescriptor.version#parse(java.lang.String)&quot;&gt;unparseable&lt;/a&gt; then the &lt;a href=&quot;#rawVersion()&quot;&gt;raw version strings&lt;/a&gt; are compared lexicographically. Where the module names are equal and the versions are equal (or not present in both), then the set of modifiers are compared. Sets of modifiers are compared by comparing a &lt;em&gt;binary value&lt;/em&gt; computed for each set. If a modifier is present in the set then the bit at the position of its ordinal is &lt;code&gt;1&lt;/code&gt; in the binary value, otherwise &lt;code&gt;0&lt;/code&gt;. If the two set of modifiers are also equal then the other components of the module descriptors are compared in a manner that is consistent with &lt;code&gt;equals&lt;/code&gt;.</source>
          <target state="translated">두 &lt;code&gt;ModuleDescriptor&lt;/code&gt; 객체는 모듈 이름을 사 전적으로 비교하여 비교됩니다. 모듈 이름이 동일한 경우 모듈 버전이 비교됩니다. 모듈 버전을 비교할 때 버전이있는 모듈 설명자는 버전이없는 모듈 설명자를 성공하는 것으로 간주됩니다. 두 버전이 모두 &lt;a href=&quot;moduledescriptor.version#parse(java.lang.String)&quot;&gt;구문 분석 할 수없는&lt;/a&gt; 경우 &lt;a href=&quot;#rawVersion()&quot;&gt;원시 버전 문자열&lt;/a&gt; 이 사전 식으로 비교됩니다. 모듈 이름이 같고 버전이 같거나 둘 다에없는 경우 수정 자 집합이 비교됩니다. 수정 자 세트는 각 세트에 대해 계산 된 &lt;em&gt;이진 값을&lt;/em&gt; 비교하여 비교 됩니다. 세트에 수정자가 있으면 서수 위치의 비트는 &lt;code&gt;1&lt;/code&gt; 입니다.이진 값으로, 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; . 두 세트의 수정 자도 같으면 모듈 설명 자의 다른 구성 요소가 &lt;code&gt;equals&lt;/code&gt; 와 일치하는 방식으로 비교됩니다 .</target>
        </trans-unit>
        <trans-unit id="32bb3e7672898a9625c84b090a0e505f91ae5f55" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;Opens&lt;/code&gt; objects are compared by comparing the package names lexicographically. Where the packages names are equal then the sets of modifiers are compared in the same way that module modifiers are compared (see &lt;a href=&quot;moduledescriptor#compareTo(java.lang.module.ModuleDescriptor)&quot;&gt;&lt;code&gt;ModuleDescriptor.compareTo&lt;/code&gt;&lt;/a&gt;). Where the package names are equal and the set of modifiers are equal then the set of target modules are compared. This is done by sorting the names of the target modules in ascending order, and according to their natural ordering, and then comparing the corresponding elements lexicographically. Where the sets differ in size, and the larger set contains all elements of the smaller set, then the larger set is considered to succeed the smaller set.</source>
          <target state="translated">패키지 이름을 사 전적으로 비교하여 두 개의 &lt;code&gt;Opens&lt;/code&gt; 객체를 비교합니다. 패키지 이름이 동일한 경우 수정 자 집합은 모듈 수정자를 비교하는 것과 동일한 방식으로 비교됩니다 ( &lt;a href=&quot;moduledescriptor#compareTo(java.lang.module.ModuleDescriptor)&quot;&gt; &lt;code&gt;ModuleDescriptor.compareTo&lt;/code&gt; &lt;/a&gt; 참조 ). 패키지 이름이 같고 수정 자 집합이 동일한 경우 대상 모듈 집합이 비교됩니다. 이는 대상 모듈의 이름을 오름차순과 자연스러운 순서에 따라 정렬 한 다음 해당 요소를 사전 순으로 비교하여 수행됩니다. 세트의 크기가 다르고 더 큰 세트가 더 작은 세트의 모든 요소를 ​​포함하는 경우 더 큰 세트가 더 작은 세트를 성공하는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="224c72cc410415550d5b578bf2e9da28a7137a85" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;Provides&lt;/code&gt; objects are compared by comparing the fully qualified class name of the service type lexicographically. Where the class names are equal then the list of the provider class names are compared by comparing the corresponding elements of both lists lexicographically and in sequence. Where the lists differ in size, &lt;code&gt;N&lt;/code&gt; is the size of the shorter list, and the first &lt;code&gt;N&lt;/code&gt; corresponding elements are equal, then the longer list is considered to succeed the shorter list.</source>
          <target state="translated">서비스 유형의 완전한 클래스 이름을 사전 식으로 비교하여 두 개의 &lt;code&gt;Provides&lt;/code&gt; 객체를 비교 합니다 . 클래스 이름이 동일한 경우 공급자 클래스 이름 목록은 두 목록의 해당 요소를 사전 순 및 순서대로 비교하여 비교됩니다. 목록의 크기가 &lt;code&gt;N&lt;/code&gt; 은 더 짧은 목록의 크기이고 처음 &lt;code&gt;N&lt;/code&gt; 개의 해당 요소가 같으면 더 긴 목록이 더 짧은 목록에 성공하는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="7f2b3a6a46eddcf3971934ae9d375562862b1a7d" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;QName&lt;/code&gt;s are considered equal if and only if both the Namespace URI and local part are equal. This method uses &lt;code&gt;String.equals()&lt;/code&gt; to check equality of the Namespace URI and local part. The prefix is &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; used to determine equality.</source>
          <target state="translated">두 개의 &lt;code&gt;QName&lt;/code&gt; 은 네임 스페이스 URI와 로컬 부분이 모두 동일한 경우에만 동일한 것으로 간주됩니다. 이 메서드는 &lt;code&gt;String.equals()&lt;/code&gt; 를 사용 하여 네임 스페이스 URI와 로컬 부분이 같은지 확인합니다. 접두사는 동등성을 결정하는 데 사용 &lt;strong&gt;&lt;em&gt;되지 않습니다&lt;/em&gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b09b287b749c6a644571f947e807f4e89ed3c5e0" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;Requires&lt;/code&gt; objects are compared by comparing their module names lexicographically. Where the module names are equal then the sets of modifiers are compared in the same way that module modifiers are compared (see &lt;a href=&quot;moduledescriptor#compareTo(java.lang.module.ModuleDescriptor)&quot;&gt;&lt;code&gt;ModuleDescriptor.compareTo&lt;/code&gt;&lt;/a&gt;). Where the module names are equal and the set of modifiers are equal then the version of the modules recorded at compile-time are compared. When comparing the versions recorded at compile-time then a dependence that has a recorded version is considered to succeed a dependence that does not have a recorded version. If both recorded versions are &lt;a href=&quot;moduledescriptor.version#parse(java.lang.String)&quot;&gt;unparseable&lt;/a&gt; then the &lt;a href=&quot;#rawCompiledVersion()&quot;&gt;raw version strings&lt;/a&gt; are compared lexicographically.</source>
          <target state="translated">두 개의 &lt;code&gt;Requires&lt;/code&gt; 객체는 해당 모듈 이름을 사 전적으로 비교하여 비교됩니다. 모듈 이름이 동일한 경우 수정 자 집합은 모듈 수정자가 비교되는 것과 동일한 방식으로 비교됩니다 ( &lt;a href=&quot;moduledescriptor#compareTo(java.lang.module.ModuleDescriptor)&quot;&gt; &lt;code&gt;ModuleDescriptor.compareTo&lt;/code&gt; &lt;/a&gt; 참조 ). 모듈 이름이 같고 수정 자 집합이 같으면 컴파일 타임에 기록 된 모듈 버전이 비교됩니다. 컴파일 타임에 기록 된 버전을 비교할 때 기록 된 버전이있는 종속성은 기록 된 버전이없는 종속성에 성공한 것으로 간주됩니다. 기록 된 두 버전이 모두 &lt;a href=&quot;moduledescriptor.version#parse(java.lang.String)&quot;&gt;구문 분석 할 수없는&lt;/a&gt; 경우 &lt;a href=&quot;#rawCompiledVersion()&quot;&gt;원시 버전 문자열&lt;/a&gt; 이 사전 순으로 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="22447ad5295e8689224953c67a3065e9e41c6088" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;SimpleType&lt;/code&gt; instances are equal if and only if their &lt;a href=&quot;opentype#getClassName()&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; methods return the same value.</source>
          <target state="translated">두 &lt;code&gt;SimpleType&lt;/code&gt; 인스턴스는 &lt;a href=&quot;opentype#getClassName()&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt; 메서드가 동일한 값을 반환하는 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="e95dadfba4aba0b5ed81d95cc373094049834066" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;SimpleType&lt;/code&gt; instances are equal if and only if their &lt;a href=&quot;opentype#getClassName--&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; methods return the same value.</source>
          <target state="translated">&lt;a href=&quot;opentype#getClassName--&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt; 메소드가 동일한 값을 리턴하는 경우에만 두 개의 &lt;code&gt;SimpleType&lt;/code&gt; 인스턴스가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="152ff79dd8aa2eb37a9a1a5789d2a777e8d5c2d8" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;SslRMIServerSocketFactory&lt;/code&gt; objects are equal if they have been constructed with the same SSL context and SSL socket configuration parameters.</source>
          <target state="translated">두 개의 &lt;code&gt;SslRMIServerSocketFactory&lt;/code&gt; 오브젝트는 동일한 SSL 컨텍스트 및 SSL 소켓 구성 매개 변수로 구성된 경우 동일합니다.</target>
        </trans-unit>
        <trans-unit id="4355266a57a804e19a61b7283d511c8c0f567e5d" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;TabularType&lt;/code&gt; instances are equal if and only if all of the following statements are true:</source>
          <target state="translated">다음 명령문이 모두 참인 경우에만 두 &lt;code&gt;TabularType&lt;/code&gt; 인스턴스가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="e97f2fc096c4b275ef1444457d74320306daca91" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;Version&lt;/code&gt;s are equal if and only if they represent the same version string disregarding the optional build information.</source>
          <target state="translated">두 개의 &lt;code&gt;Version&lt;/code&gt; 은 선택적 빌드 정보를 무시하고 동일한 버전 문자열을 나타내는 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="8a903b3666cfaf89534a4ddfb99c7b163b79e729" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;Version&lt;/code&gt;s are equal if and only if they represent the same version string.</source>
          <target state="translated">두 &lt;code&gt;Version&lt;/code&gt; 은 동일한 버전 문자열을 나타내는 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="73a77fb5a46cef2494e3f215053010fdc6720025" translate="yes" xml:space="preserve">
          <source>Two Java security properties control the TTL values used for positive and negative host name resolution caching:</source>
          <target state="translated">두 가지 Java 보안 특성은 긍정 및 부정 호스트 이름 확인 캐싱에 사용되는 TTL 값을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="c8f23035319ffb3a0b27009e24b7ff32b59d90f0" translate="yes" xml:space="preserve">
          <source>Two JobAttributes are equal if and only if each of their attributes are equal. Attributes of enumeration type are equal if and only if the fields refer to the same unique enumeration object. A set of page ranges is equal if and only if the sets are of equal length, each range enumerates the same pages, and the ranges are in the same order.</source>
          <target state="translated">두 개의 JobAttribute는 각각의 속성이 동일한 경우에만 동일합니다. 열거 유형의 속성은 필드가 동일한 고유 열거 객체를 참조하는 경우에만 동일합니다. 페이지 범위 세트는 세트 길이가 같고 각 범위가 동일한 페이지를 열거하고 범위가 동일한 순서 인 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="75ab59f5fb30967e984ffaee0bbe9b320f734275" translate="yes" xml:space="preserve">
          <source>Two LDAP names are equal if each RDN in one is equal to the corresponding RDN in the other. This implies both have the same number of RDNs, and each RDN's equals() test against the corresponding RDN in the other name returns true. See &lt;a href=&quot;rdn#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Rdn.equals(Object obj)&lt;/code&gt;&lt;/a&gt; for a definition of RDN equality.</source>
          <target state="translated">하나의 각 RDN이 다른 하나의 해당 RDN과 같으면 두 LDAP 이름이 같습니다. 이는 둘 다 동일한 수의 RDN을 가지며 다른 이름의 해당 RDN에 대한 각 RDN의 equals () 테스트가 true를 반환 함을 의미합니다. RDN 동등성에 대한 정의는 &lt;a href=&quot;rdn#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Rdn.equals(Object obj)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="82f73f1dfe8bdd02baba316fe916c320a724de55" translate="yes" xml:space="preserve">
          <source>Two LDAP names are equal if each RDN in one is equal to the corresponding RDN in the other. This implies both have the same number of RDNs, and each RDN's equals() test against the corresponding RDN in the other name returns true. See &lt;a href=&quot;rdn#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Rdn.equals(Object obj)&lt;/code&gt;&lt;/a&gt; for a definition of RDN equality.</source>
          <target state="translated">하나의 각 RDN이 다른 하나의 해당 RDN과 동일한 경우 두 개의 LDAP 이름이 동일합니다. 이것은 둘 다 같은 수의 RDN을 가지며 다른 이름의 해당 RDN에 대한 각 RDN의 equals () 테스트는 true를 반환합니다. RDN 동등성의 정의에 대해서는 &lt;a href=&quot;rdn#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Rdn.equals(Object obj)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c47ca85a453f45e608b5cb2128b87a6203d4ad39" translate="yes" xml:space="preserve">
          <source>Two PageAttributes are equal if and only if each of their attributes are equal. Attributes of enumeration type are equal if and only if the fields refer to the same unique enumeration object. This means that an aliased media is equal to its underlying unique media. Printer resolutions are equal if and only if the feed resolution, cross feed resolution, and units are equal.</source>
          <target state="translated">두 PageAttribute는 각 속성이 동일한 경우에만 동일합니다. 열거 유형의 속성은 필드가 동일한 고유 열거 객체를 참조하는 경우에만 동일합니다. 즉, 별칭이 지정된 미디어는 기본 고유 미디어와 동일합니다. 프린터 해상도는 공급 해상도, 교차 공급 해상도 및 단위가 동일한 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="32e588338ba77efabef38aa557b887e65faea8ac" translate="yes" xml:space="preserve">
          <source>Two URIs with different schemes are ordered according the ordering of their schemes, without regard to case.</source>
          <target state="translated">경우에 상관없이 다른 체계를 가진 두 개의 URI는 체계의 순서에 따라 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="3da8e84c94c7ef795c80dec53e06bb0d8e4519fa" translate="yes" xml:space="preserve">
          <source>Two URL objects are equal if they have the same protocol, reference equivalent hosts, have the same port number on the host, and the same file and fragment of the file.</source>
          <target state="translated">두 개의 URL 객체가 동일한 프로토콜, 동등한 호스트 참조, 호스트의 포트 번호 및 파일 및 파일 조각이 동일한 경우 동일합니다.</target>
        </trans-unit>
        <trans-unit id="b3f1dafe4e26516f76225ee43807f52c8780fc4b" translate="yes" xml:space="preserve">
          <source>Two array references are considered deeply equal if both are &lt;code&gt;null&lt;/code&gt;, or if they refer to arrays that contain the same number of elements and all corresponding pairs of elements in the two arrays are deeply equal.</source>
          <target state="translated">두 배열이 모두 &lt;code&gt;null&lt;/code&gt; 이거나 같은 수의 요소를 포함하는 배열을 참조하고 두 배열의 모든 해당 요소 쌍이 완전히 동일한 경우 두 배열 참조는 깊이 동일한 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="8eceedd213c2f4dee09c46e2324e84e048eafbd2" translate="yes" xml:space="preserve">
          <source>Two arrays are considered equal if both arrays contain the same number of elements, and all corresponding pairs of elements in the two arrays are equal. In other words, the two arrays are equal if they contain the same elements in the same order. Also, two array references are considered equal if both are &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">두 배열에 동일한 수의 요소가 포함되어 있고 두 배열에서 해당하는 모든 요소 쌍이 동일한 경우 두 배열은 동일한 것으로 간주됩니다. 즉, 동일한 순서로 동일한 요소를 포함하는 경우 두 배열은 동일합니다. 또한 두 배열 참조가 모두 &lt;code&gt;null&lt;/code&gt; 인 경우 동일한 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="5310c9c93290800bae86c37fd35bb1cb5846b3c4" translate="yes" xml:space="preserve">
          <source>Two arrays are considered equal if the number of elements covered by each range is the same, and all corresponding pairs of elements over the specified ranges in the two arrays are equal. In other words, two arrays are equal if they contain, over the specified ranges, the same elements in the same order.</source>
          <target state="translated">각 범위에 포함 된 요소의 수가 동일하고 두 배열의 지정된 범위에있는 모든 해당 요소 쌍이 동일한 경우 두 배열은 동일한 것으로 간주됩니다. 즉, 지정된 범위에 걸쳐 동일한 순서로 동일한 요소를 포함하는 경우 두 배열은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="13be6c281a56812732b8b5c4a38df3d02d2a550d" translate="yes" xml:space="preserve">
          <source>Two buttons, each with a baseline-resize behavior of &lt;code&gt;CENTER_OFFSET&lt;/code&gt; and an anchor of &lt;code&gt;BASELINE&lt;/code&gt;.</source>
          <target state="translated">각각 기준 크기 조정 동작이 &lt;code&gt;CENTER_OFFSET&lt;/code&gt; 이고 앵커가 &lt;code&gt;BASELINE&lt;/code&gt; 인 두 개의 버튼 .</target>
        </trans-unit>
        <trans-unit id="fed1cc51a4e0b56ad61507ef1b9b92b11aa8b0c2" translate="yes" xml:space="preserve">
          <source>Two byte buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;byte&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/byte#compare(byte,byte)&quot;&gt;&lt;code&gt;Byte.compare(byte,byte)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2 바이트 버퍼는 해당 버퍼 내에서 각 시퀀스의 시작 위치에 관계없이 나머지 요소의 시퀀스를 사전 식으로 비교하여 비교됩니다. &lt;code&gt;byte&lt;/code&gt; 요소 쌍은 &lt;a href=&quot;../lang/byte#compare(byte,byte)&quot;&gt; &lt;code&gt;Byte.compare(byte,byte)&lt;/code&gt; &lt;/a&gt; 호출하는 것처럼 비교됩니다 .</target>
        </trans-unit>
        <trans-unit id="ffdee623c9463604338d995b03212cf5f1a12f2b" translate="yes" xml:space="preserve">
          <source>Two byte buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;byte&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/byte#compare-byte-byte-&quot;&gt;&lt;code&gt;Byte.compare(byte,byte)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2 바이트 버퍼는 해당 버퍼 내에서 각 시퀀스의 시작 위치에 관계없이 나머지 요소의 시퀀스를 사전 식으로 비교하여 비교됩니다. &lt;code&gt;byte&lt;/code&gt; 요소 쌍은 마치 &lt;a href=&quot;../lang/byte#compare-byte-byte-&quot;&gt; &lt;code&gt;Byte.compare(byte,byte)&lt;/code&gt; &lt;/a&gt; 호출하는 것처럼 비교됩니다 .</target>
        </trans-unit>
        <trans-unit id="828fd46b4b2eb2d1a9a761d4546a648fd204b699" translate="yes" xml:space="preserve">
          <source>Two byte buffers are equal if, and only if,</source>
          <target state="translated">두 바이트 버퍼는 다음과 같은 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="320534074932bd09c255edba6d0926f12d5b5ee4" translate="yes" xml:space="preserve">
          <source>Two channels that form a unidirectional pipe</source>
          <target state="translated">단방향 파이프를 형성하는 2 개의 채널</target>
        </trans-unit>
        <trans-unit id="d4d7dd311252218fe9547b1ca599a9f0e31849d3" translate="yes" xml:space="preserve">
          <source>Two char buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;char&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/character#compare(char,char)&quot;&gt;&lt;code&gt;Character.compare(char,char)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 개의 문자 버퍼는 해당 버퍼 내의 각 시퀀스의 시작 위치에 관계없이 나머지 요소의 시퀀스를 사전 식으로 비교하여 비교됩니다. &lt;code&gt;char&lt;/code&gt; 요소 쌍은 &lt;a href=&quot;../lang/character#compare(char,char)&quot;&gt; &lt;code&gt;Character.compare(char,char)&lt;/code&gt; &lt;/a&gt; 호출하는 것처럼 비교됩니다 .</target>
        </trans-unit>
        <trans-unit id="15f33adc6e8f5895ac7434f58d64ef4dfb852ea3" translate="yes" xml:space="preserve">
          <source>Two char buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;char&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/character#compare-char-char-&quot;&gt;&lt;code&gt;Character.compare(char,char)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">대응하는 버퍼 내에서 각각의 서열의 시작 위치에 관계없이, 나머지 요소들의 순서를 사전 식으로 비교함으로써 2 개의 문자 버퍼를 비교한다. &lt;code&gt;char&lt;/code&gt; 요소 쌍은 마치 &lt;a href=&quot;../lang/character#compare-char-char-&quot;&gt; &lt;code&gt;Character.compare(char,char)&lt;/code&gt; &lt;/a&gt; 호출하는 것처럼 비교됩니다 .</target>
        </trans-unit>
        <trans-unit id="bb9c1fccb8ffead1f642a071e83ff69e521384af" translate="yes" xml:space="preserve">
          <source>Two char buffers are equal if, and only if,</source>
          <target state="translated">두 개의 문자 버퍼는 다음과 같은 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="1255ac3931ad4204469ef90364f16617e4241739" translate="yes" xml:space="preserve">
          <source>Two characters &lt;code&gt;c1&lt;/code&gt; and &lt;code&gt;c2&lt;/code&gt; are considered the same ignoring case if at least one of the following is true:</source>
          <target state="translated">다음 중 하나 이상에 해당하는 경우 두 문자 &lt;code&gt;c1&lt;/code&gt; 및 &lt;code&gt;c2&lt;/code&gt; 는 동일한 무시 사례로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="70eac33f370d438cd2d849d987bb139e150c76ab" translate="yes" xml:space="preserve">
          <source>Two charsets are equal if, and only if, they have the same canonical names. A charset is never equal to any other type of object.</source>
          <target state="translated">두 개의 문자 집합이 동일한 정식 이름을 가진 경우에만 동일합니다. 문자셋은 다른 유형의 객체와 결코 같지 않습니다.</target>
        </trans-unit>
        <trans-unit id="60d2d47003b86bb7c7c7cbc5311165c518197ed4" translate="yes" xml:space="preserve">
          <source>Two constant values are provided, &lt;a href=&quot;#POSTURE_REGULAR&quot;&gt;&lt;code&gt;POSTURE_REGULAR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#POSTURE_OBLIQUE&quot;&gt;&lt;code&gt;POSTURE_OBLIQUE&lt;/code&gt;&lt;/a&gt;. The value &lt;code&gt;POSTURE_OBLIQUE&lt;/code&gt; corresponds to the style value &lt;code&gt;Font.ITALIC&lt;/code&gt; as passed to the &lt;code&gt;Font&lt;/code&gt; constructor.</source>
          <target state="translated">두 개의 상수 값인 &lt;a href=&quot;#POSTURE_REGULAR&quot;&gt; &lt;code&gt;POSTURE_REGULAR&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#POSTURE_OBLIQUE&quot;&gt; &lt;code&gt;POSTURE_OBLIQUE&lt;/code&gt; &lt;/a&gt; 가 제공됩니다 . 값 &lt;code&gt;POSTURE_OBLIQUE&lt;/code&gt; 의 스타일 값에 해당 &lt;code&gt;Font.ITALIC&lt;/code&gt; 에게 건네지는 &lt;code&gt;Font&lt;/code&gt; 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="324c627b78a621f7d76783cd3b0d6b5098b492ff" translate="yes" xml:space="preserve">
          <source>Two constant values are provided, see &lt;a href=&quot;#SUPERSCRIPT_SUPER&quot;&gt;&lt;code&gt;SUPERSCRIPT_SUPER&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#SUPERSCRIPT_SUB&quot;&gt;&lt;code&gt;SUPERSCRIPT_SUB&lt;/code&gt;&lt;/a&gt;. These have the values 1 and -1 respectively. Values of greater magnitude define greater levels of superscript or subscripting, for example, 2 corresponds to super-superscript, 3 to super-super-superscript, and similarly for negative values and subscript, up to a level of 7 (or -7). Values beyond this range are reserved; behavior is platform-dependent.</source>
          <target state="translated">두 개의 상수 값이 제공됩니다 ( &lt;a href=&quot;#SUPERSCRIPT_SUPER&quot;&gt; &lt;code&gt;SUPERSCRIPT_SUPER&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#SUPERSCRIPT_SUB&quot;&gt; &lt;code&gt;SUPERSCRIPT_SUB&lt;/code&gt; &lt;/a&gt; 참조) . 이들은 각각 값 1과 -1을 갖습니다. 더 큰 값은 더 높은 수준의 위 첨자 또는 아래 첨자를 정의합니다. 예를 들어 2는 위 첨자에 해당하고 3은 위 첨자에 해당하고 3은 위 첨자에 해당하며 마찬가지로 음수 값과 아래 첨자에 대해 7 (또는 -7) 수준까지 유사합니다. 이 범위를 벗어난 값은 예약되어 있습니다. 동작은 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="b658c2892dc5a68b396e9cc96727ddfa17470887" translate="yes" xml:space="preserve">
          <source>Two corresponding &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Class&lt;/code&gt;, enum, or annotation typed members whose values are &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are considered equal if &lt;code&gt;x.equals(y)&lt;/code&gt;. (Note that this definition is recursive for annotation typed members.)</source>
          <target state="translated">&lt;code&gt;x.equals(y)&lt;/code&gt; 경우 값이 &lt;code&gt;x&lt;/code&gt; 이고 &lt;code&gt;y&lt;/code&gt; 인 두 개의 해당 &lt;code&gt;String&lt;/code&gt; , &lt;code&gt;Class&lt;/code&gt; , enum 또는 주석 유형 멤버는 동일한 것으로 간주됩니다 . 이 정의는 주석 유형의 멤버에 대해 재귀 적입니다.</target>
        </trans-unit>
        <trans-unit id="7f9446391cf829fc996ed9387bf8ae2aaf6c1766" translate="yes" xml:space="preserve">
          <source>Two corresponding &lt;code&gt;double&lt;/code&gt; members whose values are &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are considered equal if &lt;code&gt;Double.valueOf(x).equals(Double.valueOf(y))&lt;/code&gt;. (Unlike the &lt;code&gt;==&lt;/code&gt; operator, NaN is considered equal to itself, and &lt;code&gt;0.0&lt;/code&gt; unequal to &lt;code&gt;-0.0&lt;/code&gt;.)</source>
          <target state="translated">&lt;code&gt;Double.valueOf(x).equals(Double.valueOf(y))&lt;/code&gt; 경우 값이 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 인 두 개의 해당 &lt;code&gt;double&lt;/code&gt; 멤버는 동일한 것으로 간주됩니다 . ( &lt;code&gt;==&lt;/code&gt; 연산자 와 달리 NaN은 자체와 같고 &lt;code&gt;0.0&lt;/code&gt; 은 &lt;code&gt;-0.0&lt;/code&gt; 과 같지 않은 것으로 간주됩니다 .)</target>
        </trans-unit>
        <trans-unit id="7b4157aa85e4495185b272adb91fa68959fca9a7" translate="yes" xml:space="preserve">
          <source>Two corresponding &lt;code&gt;float&lt;/code&gt; members whose values are &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are considered equal if &lt;code&gt;Float.valueOf(x).equals(Float.valueOf(y))&lt;/code&gt;. (Unlike the &lt;code&gt;==&lt;/code&gt; operator, NaN is considered equal to itself, and &lt;code&gt;0.0f&lt;/code&gt; unequal to &lt;code&gt;-0.0f&lt;/code&gt;.)</source>
          <target state="translated">&lt;code&gt;Float.valueOf(x).equals(Float.valueOf(y))&lt;/code&gt; 경우 값이 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 인 두 개의 해당 &lt;code&gt;float&lt;/code&gt; 멤버는 동일한 것으로 간주됩니다 . &lt;code&gt;==&lt;/code&gt; 연산자 와 달리 NaN은 자체와 같고 &lt;code&gt;0.0f&lt;/code&gt; 는 &lt;code&gt;-0.0f&lt;/code&gt; 와 같지 않은 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="5ed17e7ef60681fe476ac04108b18dcd476a9863" translate="yes" xml:space="preserve">
          <source>Two corresponding array typed members &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are considered equal if &lt;code&gt;Arrays.equals(x, y)&lt;/code&gt;, for the appropriate overloading of &lt;a href=&quot;../../util/arrays#equals(long%5B%5D,long%5B%5D)&quot;&gt;&lt;code&gt;Arrays.equals(long[], long[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../util/arrays#equals(long%5B%5D,long%5B%5D)&quot;&gt; &lt;code&gt;Arrays.equals(long[], long[])&lt;/code&gt; &lt;/a&gt; 의 적절한 오버로딩을 위해 &lt;code&gt;Arrays.equals(x, y)&lt;/code&gt; 이면 두 개의 해당 배열 형식 멤버 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 가 동일한 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="02ed45a3d9ac87a4d6fa229ca8c0b8493e038c63" translate="yes" xml:space="preserve">
          <source>Two corresponding array typed members &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are considered equal if &lt;code&gt;Arrays.equals(x, y)&lt;/code&gt;, for the appropriate overloading of &lt;a href=&quot;../../util/arrays#equals-long:A-long:A-&quot;&gt;&lt;code&gt;Arrays.equals(long[], long[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../util/arrays#equals-long:A-long:A-&quot;&gt; &lt;code&gt;Arrays.equals(long[], long[])&lt;/code&gt; &lt;/a&gt; 의 적절한 오버로드에 대해 &lt;code&gt;Arrays.equals(x, y)&lt;/code&gt; 인 경우 두 개의 해당 배열 유형 멤버 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 가 동일한 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="7f37fe1c0cd073bed6a3d8167750817a9a3b3e11" translate="yes" xml:space="preserve">
          <source>Two corresponding primitive typed members whose values are &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are considered equal if &lt;code&gt;x == y&lt;/code&gt;, unless their type is &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 또는 &lt;code&gt;y&lt;/code&gt; 값이 x 또는 y 인 두 개의 해당 기본 유형 멤버는 유형이 &lt;code&gt;float&lt;/code&gt; 또는 &lt;code&gt;double&lt;/code&gt; 이 아닌 한 &lt;code&gt;x == y&lt;/code&gt; 이면 동일한 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="78efe36ca860b207cc926e61aa19241248835f18" translate="yes" xml:space="preserve">
          <source>Two digits for the &lt;a href=&quot;../temporal/chronofield#DAY_OF_MONTH&quot;&gt;&lt;code&gt;day-of-month&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure two digits.</source>
          <target state="translated">에 대한 두 자리 숫자 &lt;a href=&quot;../temporal/chronofield#DAY_OF_MONTH&quot;&gt; &lt;code&gt;day-of-month&lt;/code&gt; &lt;/a&gt; . 두 자리 수를 보장하기 위해 0으로 미리 채워져 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6f818a4014fb3ec08d68c4244c331a7b03adbb4" translate="yes" xml:space="preserve">
          <source>Two digits for the &lt;a href=&quot;../temporal/chronofield#HOUR_OF_DAY&quot;&gt;&lt;code&gt;hour-of-day&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure two digits.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#HOUR_OF_DAY&quot;&gt; &lt;code&gt;hour-of-day&lt;/code&gt; &lt;/a&gt; 대한 두 자리 숫자 . 두 자리 수를 보장하기 위해 0으로 미리 채워져 있습니다.</target>
        </trans-unit>
        <trans-unit id="031dd940536a454024b57a3eb7f0ea3967700728" translate="yes" xml:space="preserve">
          <source>Two digits for the &lt;a href=&quot;../temporal/chronofield#MINUTE_OF_HOUR&quot;&gt;&lt;code&gt;minute-of-hour&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure two digits.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#MINUTE_OF_HOUR&quot;&gt; &lt;code&gt;minute-of-hour&lt;/code&gt; &lt;/a&gt; 을 나타내는 두 자리 숫자입니다 . 두 자리 수를 보장하기 위해 0으로 미리 채워져 있습니다.</target>
        </trans-unit>
        <trans-unit id="260c79d2746b062c0631f4c19ac19986dea55e22" translate="yes" xml:space="preserve">
          <source>Two digits for the &lt;a href=&quot;../temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;month-of-year&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure two digits.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;month-of-year&lt;/code&gt; &lt;/a&gt; 두 자리 숫자입니다 . 두 자리 수를 보장하기 위해 0으로 미리 채워져 있습니다.</target>
        </trans-unit>
        <trans-unit id="d7c0583466a4505eb8649c3e513fa06e4de68123" translate="yes" xml:space="preserve">
          <source>Two digits for the &lt;a href=&quot;../temporal/chronofield#SECOND_OF_MINUTE&quot;&gt;&lt;code&gt;second-of-minute&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure two digits.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#SECOND_OF_MINUTE&quot;&gt; &lt;code&gt;second-of-minute&lt;/code&gt; &lt;/a&gt; 를 나타내는 두 자리 숫자입니다 . 두 자리 수를 보장하기 위해 0으로 미리 채워져 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b3c6bcc0384e99e1c250290b576b84394198430" translate="yes" xml:space="preserve">
          <source>Two digits for the &lt;a href=&quot;../temporal/isofields#WEEK_OF_WEEK_BASED_YEAR&quot;&gt;&lt;code&gt;week-of-week-based-year&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure three digits.</source>
          <target state="translated">&lt;a href=&quot;../temporal/isofields#WEEK_OF_WEEK_BASED_YEAR&quot;&gt; &lt;code&gt;week-of-week-based-year&lt;/code&gt; &lt;/a&gt; 두 자리 숫자입니다 . 세 자리를 보장하기 위해 0으로 미리 채워져 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d36c205c9328ff44d88115ffe8f31bf796f2391" translate="yes" xml:space="preserve">
          <source>Two double buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;double&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/double#compare(double,double)&quot;&gt;&lt;code&gt;Double.compare(double,double)&lt;/code&gt;&lt;/a&gt;, except that &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;0.0&lt;/code&gt; are considered to be equal. &lt;code&gt;Double.NaN&lt;/code&gt; is considered by this method to be equal to itself and greater than all other &lt;code&gt;double&lt;/code&gt; values (including &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt;).</source>
          <target state="translated">두 개의 이중 버퍼는 해당 버퍼 내에서 각 시퀀스의 시작 위치에 관계없이 나머지 요소의 시퀀스를 사전 식으로 비교하여 비교됩니다. &lt;code&gt;double&lt;/code&gt; 요소 쌍은 &lt;a href=&quot;../lang/double#compare(double,double)&quot;&gt; &lt;code&gt;Double.compare(double,double)&lt;/code&gt; &lt;/a&gt; 을 호출하는 것처럼 비교됩니다 . 단, &lt;code&gt;-0.0&lt;/code&gt; 과 &lt;code&gt;0.0&lt;/code&gt; 은 같은 것으로 간주됩니다. &lt;code&gt;Double.NaN&lt;/code&gt; 은이 메서드에서 자신과 같고 다른 모든 &lt;code&gt;double&lt;/code&gt; 값 ( &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt; 포함 ) 보다 큰 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="81275db60144c060dec068367d7aa73a2913bf64" translate="yes" xml:space="preserve">
          <source>Two double buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;double&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/double#compare-double-double-&quot;&gt;&lt;code&gt;Double.compare(double,double)&lt;/code&gt;&lt;/a&gt;, except that &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;0.0&lt;/code&gt; are considered to be equal. &lt;code&gt;Double.NaN&lt;/code&gt; is considered by this method to be equal to itself and greater than all other &lt;code&gt;double&lt;/code&gt; values (including &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt;).</source>
          <target state="translated">두 개의 이중 버퍼는 해당 버퍼 내에서 각 시퀀스의 시작 위치에 관계없이 나머지 요소의 시퀀스를 사전 식으로 비교하여 비교됩니다. &lt;code&gt;-0.0&lt;/code&gt; 과 &lt;code&gt;0.0&lt;/code&gt; 이 동일한 것으로 간주되는 것을 제외하고 &lt;a href=&quot;../lang/double#compare-double-double-&quot;&gt; &lt;code&gt;Double.compare(double,double)&lt;/code&gt; &lt;/a&gt; 을 호출 하여 &lt;code&gt;double&lt;/code&gt; 요소 쌍을 비교 합니다. 이 메소드에서는 &lt;code&gt;Double.NaN&lt;/code&gt; 이 자신과 같고 다른 모든 &lt;code&gt;double&lt;/code&gt; 값 ( &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt; 포함 ) 보다 큰 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="cc1fbd4f57c34fae7e58834caea565d67450878c" translate="yes" xml:space="preserve">
          <source>Two double buffers are equal if, and only if,</source>
          <target state="translated">두 개의 이중 버퍼는 다음과 같은 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="b2c6a7b0a40e89f2d5eef1f68a05b982f6ad559e" translate="yes" xml:space="preserve">
          <source>Two doubles &lt;code&gt;d1&lt;/code&gt; and &lt;code&gt;d2&lt;/code&gt; are considered equal if:</source>
          <target state="translated">다음 과 같은 경우 두 개의 복식 &lt;code&gt;d1&lt;/code&gt; 과 &lt;code&gt;d2&lt;/code&gt; 가 동일한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="20d484f84f1ca3155bca060bfd11e9dd910f5cb5" translate="yes" xml:space="preserve">
          <source>Two factory methods, &lt;a href=&quot;#getControl(java.util.List)&quot;&gt;&lt;code&gt;getControl(List)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getNoFallbackControl(java.util.List)&quot;&gt;&lt;code&gt;getNoFallbackControl(List)&lt;/code&gt;&lt;/a&gt;, provide &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instances that implement common variations of the default bundle loading process.</source>
          <target state="translated">두 개의 팩토리 메서드 인 &lt;a href=&quot;#getControl(java.util.List)&quot;&gt; &lt;code&gt;getControl(List)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#getNoFallbackControl(java.util.List)&quot;&gt; &lt;code&gt;getNoFallbackControl(List)&lt;/code&gt; &lt;/a&gt; 은 기본 번들로드 프로세스의 일반적인 변형을 구현 하는 &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 인스턴스를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="790cbd91130d9bfeeeae9a1f57903936a9c8548f" translate="yes" xml:space="preserve">
          <source>Two factory methods, &lt;a href=&quot;resourcebundle.control#getControl-java.util.List-&quot;&gt;&lt;code&gt;getControl(List)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;resourcebundle.control#getNoFallbackControl-java.util.List-&quot;&gt;&lt;code&gt;getNoFallbackControl(List)&lt;/code&gt;&lt;/a&gt;, provide &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instances that implement common variations of the default bundle loading process.</source>
          <target state="translated">두 가지 팩토리 메소드 인 &lt;a href=&quot;resourcebundle.control#getControl-java.util.List-&quot;&gt; &lt;code&gt;getControl(List)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;resourcebundle.control#getNoFallbackControl-java.util.List-&quot;&gt; &lt;code&gt;getNoFallbackControl(List)&lt;/code&gt; &lt;/a&gt; 은 기본 번들로드 프로세스의 공통 변형을 구현 하는 &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 인스턴스를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="e0a29734cc4ad0dc762fea82f8d8daefcd153546" translate="yes" xml:space="preserve">
          <source>Two fields are used for week-based-year, one for the &lt;a href=&quot;#weekOfWeekBasedYear()&quot;&gt;&lt;code&gt;week-of-week-based-year&lt;/code&gt;&lt;/a&gt; and one for &lt;a href=&quot;#weekBasedYear()&quot;&gt;&lt;code&gt;week-based-year&lt;/code&gt;&lt;/a&gt;. In a week-based-year, each week belongs to only a single year. Week 1 of a year is the first week that starts on the first day-of-week and has at least the minimum number of days. The first and last weeks of a year may contain days from the previous calendar year or next calendar year respectively.</source>
          <target state="translated">두 개의 필드는 주 기반 연도에 사용되며, 하나는 &lt;a href=&quot;#weekOfWeekBasedYear()&quot;&gt; &lt;code&gt;week-of-week-based-year&lt;/code&gt; &lt;/a&gt; 기반 연도에 사용되고 다른 하나는 &lt;a href=&quot;#weekBasedYear()&quot;&gt; &lt;code&gt;week-based-year&lt;/code&gt; &lt;/a&gt; 됩니다. 주 기반 연도에서 각주는 단일 연도에만 속합니다. 한 해의 1 주차는 첫 번째 요일에 시작되며 최소한 최소 일 수가있는 첫 번째 주입니다. 한 해의 첫 주와 마지막 주에는 각각 전년 또는 다음 해의 날짜가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94f969c3f1c5266dac27819cb6f7c1da1174a51f" translate="yes" xml:space="preserve">
          <source>Two fields are used for week-based-year, one for the &lt;a href=&quot;weekfields#weekOfWeekBasedYear--&quot;&gt;&lt;code&gt;week-of-week-based-year&lt;/code&gt;&lt;/a&gt; and one for &lt;a href=&quot;weekfields#weekBasedYear--&quot;&gt;&lt;code&gt;week-based-year&lt;/code&gt;&lt;/a&gt;. In a week-based-year, each week belongs to only a single year. Week 1 of a year is the first week that starts on the first day-of-week and has at least the minimum number of days. The first and last weeks of a year may contain days from the previous calendar year or next calendar year respectively.</source>
          <target state="translated">두 필드는 주 기반-년 동안 하나 사용되는 &lt;a href=&quot;weekfields#weekOfWeekBasedYear--&quot;&gt; &lt;code&gt;week-of-week-based-year&lt;/code&gt; &lt;/a&gt; 과 하나를 &lt;a href=&quot;weekfields#weekBasedYear--&quot;&gt; &lt;code&gt;week-based-year&lt;/code&gt; &lt;/a&gt; . 주별 연도에서 각주는 단일 연도에만 속합니다. 1 주일은 첫 번째 요일에 시작하여 최소한 최소 일 수를 갖는 첫 번째 주입니다. 연도의 첫 번째 및 마지막 주에는 각각 이전 연도 또는 다음 연도의 날짜가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d0bd37ad5bf07161ea31cafe95c35d6d0e74d095" translate="yes" xml:space="preserve">
          <source>Two files are considered to match if they satisfy one of the following conditions:</source>
          <target state="translated">다음 조건 중 하나를 충족하는 경우 두 파일이 일치하는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="729bfb71cc2a5eee48bb4e4a6b48fed07d2e937c" translate="yes" xml:space="preserve">
          <source>Two float buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;float&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/float#compare(float,float)&quot;&gt;&lt;code&gt;Float.compare(float,float)&lt;/code&gt;&lt;/a&gt;, except that &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;0.0&lt;/code&gt; are considered to be equal. &lt;code&gt;Float.NaN&lt;/code&gt; is considered by this method to be equal to itself and greater than all other &lt;code&gt;float&lt;/code&gt; values (including &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt;).</source>
          <target state="translated">두 개의 부동 버퍼는 해당 버퍼 내에서 각 시퀀스의 시작 위치에 관계없이 나머지 요소의 시퀀스를 사전 순으로 비교하여 비교됩니다. &lt;code&gt;-0.0&lt;/code&gt; 과 &lt;code&gt;0.0&lt;/code&gt; 이 같은 것으로 간주 된다는 점을 제외하고는 &lt;a href=&quot;../lang/float#compare(float,float)&quot;&gt; &lt;code&gt;Float.compare(float,float)&lt;/code&gt; &lt;/a&gt; 를 호출하는 것처럼 &lt;code&gt;float&lt;/code&gt; 요소 쌍을 비교 합니다. &lt;code&gt;Float.NaN&lt;/code&gt; 은이 메서드에서 자신과 같고 다른 모든 &lt;code&gt;float&lt;/code&gt; 값 ( &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt; 포함 ) 보다 큰 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="1f856d53c5409354b424a6b88872025e64ea40cc" translate="yes" xml:space="preserve">
          <source>Two float buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;float&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/float#compare-float-float-&quot;&gt;&lt;code&gt;Float.compare(float,float)&lt;/code&gt;&lt;/a&gt;, except that &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;0.0&lt;/code&gt; are considered to be equal. &lt;code&gt;Float.NaN&lt;/code&gt; is considered by this method to be equal to itself and greater than all other &lt;code&gt;float&lt;/code&gt; values (including &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt;).</source>
          <target state="translated">2 개의 플로트 버퍼는 대응하는 버퍼 내에서 각 시퀀스의 시작 위치에 관계없이 나머지 요소들의 시퀀스를 사전 식으로 비교함으로써 비교된다. &lt;code&gt;float&lt;/code&gt; 요소의 쌍은 &lt;a href=&quot;../lang/float#compare-float-float-&quot;&gt; &lt;code&gt;Float.compare(float,float)&lt;/code&gt; &lt;/a&gt; 를 호출하는 것처럼 &lt;code&gt;-0.0&lt;/code&gt; 과 &lt;code&gt;0.0&lt;/code&gt; 이 동일한 것으로 간주되는 것을 제외하고 비교됩니다. &lt;code&gt;Float.NaN&lt;/code&gt; 은이 메소드에서 자신과 같고 다른 모든 &lt;code&gt;float&lt;/code&gt; 값 ( &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt; 포함 ) 보다 큰 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="ab5aaf9dda16dddecde94392b8de1659ec944d53" translate="yes" xml:space="preserve">
          <source>Two float buffers are equal if, and only if,</source>
          <target state="translated">두 개의 부동 버퍼는 다음과 같은 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="0f7529428614cd74b61525d183cd15ac20ea3382" translate="yes" xml:space="preserve">
          <source>Two floats &lt;code&gt;f1&lt;/code&gt; and &lt;code&gt;f2&lt;/code&gt; are considered equal if:</source>
          <target state="translated">다음 과 같은 경우 두 개의 부동 소수점 &lt;code&gt;f1&lt;/code&gt; 과 &lt;code&gt;f2&lt;/code&gt; 는 동일한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="3ec7c4685fbb6e0cd82151a82b1856e783298e58" translate="yes" xml:space="preserve">
          <source>Two hierarchical URIs with identical schemes are ordered according to the ordering of their authority components:</source>
          <target state="translated">동일한 체계를 가진 두 개의 계층 적 URI는 권한 구성 요소의 순서에 따라 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="9456e8128eea79cf44263ed1c3e02c15485da4d1" translate="yes" xml:space="preserve">
          <source>Two hosts are considered equivalent if both host names can be resolved into the same IP addresses; else if either host name can't be resolved, the host names must be equal without regard to case; or both host names equal to null.</source>
          <target state="translated">두 호스트 이름이 모두 동일한 IP 주소로 해석 될 수있는 경우 두 호스트는 동등한 것으로 간주됩니다. 그렇지 않으면 호스트 이름을 확인할 수 없으면 대소 문자와 상관없이 호스트 이름이 같아야합니다. 또는 두 호스트 이름이 모두 null입니다.</target>
        </trans-unit>
        <trans-unit id="f3f5469340d8a203d30f3b1f4bca04b9e2cd70cb" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;code&gt;InetAddress&lt;/code&gt; represent the same IP address if the length of the byte arrays returned by &lt;code&gt;getAddress&lt;/code&gt; is the same for both, and each of the array components is the same for the byte arrays.</source>
          <target state="translated">&lt;code&gt;getAddress&lt;/code&gt; 에 의해 리턴 된 바이트 배열의 길이가 둘 다 동일하고 각 배열 구성 요소가 바이트 배열에 대해 동일한 경우 &lt;code&gt;InetAddress&lt;/code&gt; 의 두 인스턴스는 동일한 IP 주소를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="d53ae396b1d69ae511021d6ecc99a9bfe4ea1851" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;code&gt;InetSocketAddress&lt;/code&gt; represent the same address if both the InetAddresses (or hostnames if it is unresolved) and port numbers are equal. If both addresses are unresolved, then the hostname and the port number are compared. Note: Hostnames are case insensitive. e.g. &quot;FooBar&quot; and &quot;foobar&quot; are considered equal.</source>
          <target state="translated">InetAddresses (또는 확인되지 않은 경우 호스트 이름)와 포트 번호가 모두 같은 경우 &lt;code&gt;InetSocketAddress&lt;/code&gt; 의 두 인스턴스는 동일한 주소를 나타냅니다. 두 주소가 모두 확인되지 않으면 호스트 이름과 포트 번호가 비교됩니다. 참고 : 호스트 이름은 대소 문자를 구분하지 않습니다. 예를 들어 &quot;FooBar&quot;와 &quot;foobar&quot;는 동일한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="97b13973b11b6b04063de8e03fd3ecc4239481db" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;code&gt;InterfaceAddress&lt;/code&gt; represent the same address if the InetAddress, the prefix length and the broadcast are the same for both.</source>
          <target state="translated">InetAddress, 접두사 길이 및 브로드 캐스트가 모두 동일한 경우 &lt;code&gt;InterfaceAddress&lt;/code&gt; 의 두 인스턴스가 동일한 주소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4b996d3889c3b875c55ca3ae310956b714b115ac" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;code&gt;NetworkInterface&lt;/code&gt; represent the same NetworkInterface if both name and addrs are the same for both.</source>
          <target state="translated">이름과 주소가 모두 동일한 경우 두 개의 &lt;code&gt;NetworkInterface&lt;/code&gt; 인스턴스는 동일한 NetworkInterface를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ed538e957b9c55e905ab3db97902c2a61f180d1d" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;code&gt;NetworkInterface&lt;/code&gt; represent the same NetworkInterface if both the name and the set of &lt;code&gt;InetAddress&lt;/code&gt;es bound to the interfaces are equal.</source>
          <target state="translated">&lt;code&gt;NetworkInterface&lt;/code&gt; 의 두 인스턴스 는 인터페이스에 바인드 된 &lt;code&gt;InetAddress&lt;/code&gt; es 의 이름과 세트가 모두 동일한 경우 동일한 NetworkInterface를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="dc1c2e993d8d2f8ab36ba6b41f124760050317c8" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;code&gt;Proxy&lt;/code&gt; represent the same address if both the SocketAddresses and type are equal.</source>
          <target state="translated">SocketAddresses와 type이 모두 같은 경우 &lt;code&gt;Proxy&lt;/code&gt; 의 두 인스턴스는 동일한 주소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3803eb7c4641b19a95e0a3e15ba6754916467c86" translate="yes" xml:space="preserve">
          <source>Two int buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;int&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/integer#compare(int,int)&quot;&gt;&lt;code&gt;Integer.compare(int,int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 개의 int 버퍼는 해당 버퍼 내의 각 시퀀스의 시작 위치에 관계없이 나머지 요소의 시퀀스를 사전 식으로 비교하여 비교됩니다. &lt;code&gt;int&lt;/code&gt; 요소 쌍은 &lt;a href=&quot;../lang/integer#compare(int,int)&quot;&gt; &lt;code&gt;Integer.compare(int,int)&lt;/code&gt; &lt;/a&gt; 호출하는 것처럼 비교됩니다 .</target>
        </trans-unit>
        <trans-unit id="1ef72b659250c65bf74ac7f0e0e43c90b4dbda63" translate="yes" xml:space="preserve">
          <source>Two int buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;int&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/integer#compare-int-int-&quot;&gt;&lt;code&gt;Integer.compare(int,int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 개의 int 버퍼는 해당 버퍼 내에서 각 시퀀스의 시작 위치에 관계없이 나머지 요소의 시퀀스를 사전 식으로 비교하여 비교됩니다. &lt;code&gt;int&lt;/code&gt; 요소 쌍은 &lt;a href=&quot;../lang/integer#compare-int-int-&quot;&gt; &lt;code&gt;Integer.compare(int,int)&lt;/code&gt; &lt;/a&gt; 호출하여 것처럼 비교됩니다 .</target>
        </trans-unit>
        <trans-unit id="cb4e364b400dcaea531f35acc3fbff8db2fedfa4" translate="yes" xml:space="preserve">
          <source>Two int buffers are equal if, and only if,</source>
          <target state="translated">두 개의 int 버퍼는 다음과 같은 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="151a1969bd049994387ddc880aca5512134efc88" translate="yes" xml:space="preserve">
          <source>Two kinds of validators can be created from a &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; object. One is &lt;a href=&quot;validator&quot;&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;/a&gt;, which provides highly-level validation operations that cover typical use cases. The other is &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt;, which works on top of SAX for better modularity.</source>
          <target state="translated">&lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt; 개체 에서 두 종류의 유효성 검사기를 만들 수 있습니다 . 하나는 일반적인 사용 사례를 다루는 높은 수준의 유효성 검사 작업을 제공하는 &lt;a href=&quot;validator&quot;&gt; &lt;code&gt;Validator&lt;/code&gt; &lt;/a&gt; 입니다. 다른 하나는 더 나은 모듈화를 위해 SAX 위에서 작동하는 &lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ef16d0364abe5e4f58dba4f94de905b5517ef114" translate="yes" xml:space="preserve">
          <source>Two language ranges, &lt;code&gt;&quot;iw&quot;&lt;/code&gt; and &lt;code&gt;&quot;he&quot;&lt;/code&gt;, have the same highest priority in the list. By adding &lt;code&gt;&quot;he&quot;&lt;/code&gt; to the user's Language Priority List, locale-matching method can find Hebrew as a matching locale (or language tag) even if the application or system offers only &lt;code&gt;&quot;he&quot;&lt;/code&gt; as a supported locale (or language tag).</source>
          <target state="translated">&lt;code&gt;&quot;iw&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;he&quot;&lt;/code&gt; 의 두 언어 범위 는 목록에서 우선 순위가 동일합니다. 사용자의 언어 우선 순위 목록에 &lt;code&gt;&quot;he&quot;&lt;/code&gt; 를 추가 하면 응용 프로그램이나 시스템에서 &lt;code&gt;&quot;he&quot;&lt;/code&gt; 만 지원되는 로캘 (또는 언어 태그)로 제공하더라도 로캘 일치 방법은 히브리어를 일치하는 로캘 (또는 언어 태그)로 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="937bba9104d354d011329909a78043a7d961d25a" translate="yes" xml:space="preserve">
          <source>Two long buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;long&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/long#compare(long,long)&quot;&gt;&lt;code&gt;Long.compare(long,long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 개의 긴 버퍼는 해당 버퍼 내의 각 시퀀스의 시작 위치에 관계없이 나머지 요소의 시퀀스를 사전 식으로 비교하여 비교됩니다. &lt;a href=&quot;../lang/long#compare(long,long)&quot;&gt; &lt;code&gt;Long.compare(long,long)&lt;/code&gt; &lt;/a&gt; 호출하는 것처럼 &lt;code&gt;long&lt;/code&gt; 요소 쌍을 비교 합니다.</target>
        </trans-unit>
        <trans-unit id="563eba67f158dd6d851a49f32b865a37f108fae1" translate="yes" xml:space="preserve">
          <source>Two long buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;long&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/long#compare-long-long-&quot;&gt;&lt;code&gt;Long.compare(long,long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 개의 긴 버퍼는 해당 버퍼 내에서 각 시퀀스의 시작 위치에 관계없이 나머지 요소의 시퀀스를 사전 식으로 비교하여 비교됩니다. &lt;code&gt;long&lt;/code&gt; 요소를 &lt;a href=&quot;../lang/long#compare-long-long-&quot;&gt; &lt;code&gt;Long.compare(long,long)&lt;/code&gt; &lt;/a&gt; 으로 호출하면 긴 요소 쌍이 비교됩니다 .</target>
        </trans-unit>
        <trans-unit id="5705efd986e39e3f93e960d33bcd6c77fb79107d" translate="yes" xml:space="preserve">
          <source>Two long buffers are equal if, and only if,</source>
          <target state="translated">두 개의 긴 버퍼는 다음과 같은 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="8cab0805e2cd5cfc8c5ff5bb7248fdaf4741fdb7" translate="yes" xml:space="preserve">
          <source>Two method forms (&lt;a href=&quot;#handle(java.util.function.BiFunction)&quot;&gt;&lt;code&gt;handle&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#whenComplete(java.util.function.BiConsumer)&quot;&gt;&lt;code&gt;whenComplete&lt;/code&gt;&lt;/a&gt;) support unconditional computation whether the triggering stage completed normally or exceptionally. Method &lt;a href=&quot;#exceptionally(java.util.function.Function)&quot;&gt;&lt;code&gt;exceptionally&lt;/code&gt;&lt;/a&gt; supports computation only when the triggering stage completes exceptionally, computing a replacement result, similarly to the java &lt;code&gt;catch&lt;/code&gt; keyword. In all other cases, if a stage's computation terminates abruptly with an (unchecked) exception or error, then all dependent stages requiring its completion complete exceptionally as well, with a &lt;a href=&quot;completionexception&quot;&gt;&lt;code&gt;CompletionException&lt;/code&gt;&lt;/a&gt; holding the exception as its cause. If a stage is dependent on &lt;em&gt;both&lt;/em&gt; of two stages, and both complete exceptionally, then the CompletionException may correspond to either one of these exceptions. If a stage is dependent on &lt;em&gt;either&lt;/em&gt; of two others, and only one of them completes exceptionally, no guarantees are made about whether the dependent stage completes normally or exceptionally. In the case of method &lt;code&gt;whenComplete&lt;/code&gt;, when the supplied action itself encounters an exception, then the stage completes exceptionally with this exception unless the source stage also completed exceptionally, in which case the exceptional completion from the source stage is given preference and propagated to the dependent stage.</source>
          <target state="translated">두 가지 메서드 형식 ( &lt;a href=&quot;#handle(java.util.function.BiFunction)&quot;&gt; &lt;code&gt;handle&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#whenComplete(java.util.function.BiConsumer)&quot;&gt; &lt;code&gt;whenComplete&lt;/code&gt; &lt;/a&gt; )은 트리거 단계가 정상적으로 완료되었는지 예외적으로 완료되었는지에 관계없이 무조건 계산을 지원합니다. 메소드는 &lt;a href=&quot;#exceptionally(java.util.function.Function)&quot;&gt; &lt;code&gt;exceptionally&lt;/code&gt; &lt;/a&gt; 트리거 단계가 예외적으로 완료 될 때만 계산을 지원하여 java &lt;code&gt;catch&lt;/code&gt; 키워드 와 유사하게 대체 결과를 계산 합니다. 다른 모든 경우에 단계의 계산이 (확인되지 ​​않은) 예외 또는 오류로 인해 갑자기 종료되면 완료를 요구하는 모든 종속 단계도 예외적으로 &lt;a href=&quot;completionexception&quot;&gt; &lt;code&gt;CompletionException&lt;/code&gt; &lt;/a&gt; 되며 예외를 원인으로 보유 하는 CompletionException 이 발생합니다. 단계가 &lt;em&gt;둘 다에&lt;/em&gt; 종속 된 &lt;em&gt;경우&lt;/em&gt;두 단계 모두 예외적으로 완료되면 CompletionException은 이러한 예외 중 하나에 해당 할 수 있습니다. 한 단계가 다른 두 가지 &lt;em&gt;중 하나&lt;/em&gt; 에 종속되어 &lt;em&gt;있고&lt;/em&gt; 그중 하나만 예외적으로 완료되는 경우 종속 단계가 정상적으로 완료되는지 예외적으로 완료되는지에 대한 보장이 없습니다. &lt;code&gt;whenComplete&lt;/code&gt; 메서드의 경우 제공된 작업 자체에서 예외가 발생하면 소스 단계도 예외적으로 완료되지 않는 한이 예외와 함께 단계가 예외적으로 완료됩니다.이 경우 소스 단계의 예외적 인 완료가 우선 순위가 부여되고 종속 항목으로 전파됩니다. 단계.</target>
        </trans-unit>
        <trans-unit id="765caf736393b1447e3dedc3e6859f322e2c0332" translate="yes" xml:space="preserve">
          <source>Two method forms support processing whether the triggering stage completed normally or exceptionally: Method &lt;a href=&quot;completionstage#whenComplete-java.util.function.BiConsumer-&quot;&gt;&lt;code&gt;whenComplete&lt;/code&gt;&lt;/a&gt; allows injection of an action regardless of outcome, otherwise preserving the outcome in its completion. Method &lt;a href=&quot;completionstage#handle-java.util.function.BiFunction-&quot;&gt;&lt;code&gt;handle&lt;/code&gt;&lt;/a&gt; additionally allows the stage to compute a replacement result that may enable further processing by other dependent stages. In all other cases, if a stage's computation terminates abruptly with an (unchecked) exception or error, then all dependent stages requiring its completion complete exceptionally as well, with a &lt;a href=&quot;completionexception&quot;&gt;&lt;code&gt;CompletionException&lt;/code&gt;&lt;/a&gt; holding the exception as its cause. If a stage is dependent on &lt;em&gt;both&lt;/em&gt; of two stages, and both complete exceptionally, then the CompletionException may correspond to either one of these exceptions. If a stage is dependent on &lt;em&gt;either&lt;/em&gt; of two others, and only one of them completes exceptionally, no guarantees are made about whether the dependent stage completes normally or exceptionally. In the case of method &lt;code&gt;whenComplete&lt;/code&gt;, when the supplied action itself encounters an exception, then the stage exceptionally completes with this exception if not already completed exceptionally.</source>
          <target state="translated">두 방법 형태는 트리거링 단계가 정상적으로 완료 여부 예외적 처리 지원 : 방법 &lt;a href=&quot;completionstage#whenComplete-java.util.function.BiConsumer-&quot;&gt; &lt;code&gt;whenComplete&lt;/code&gt; 이&lt;/a&gt; 결과에 관계없이 동작의 주입을 허용 다르게 완성의 결과를 보존. 메소드 &lt;a href=&quot;completionstage#handle-java.util.function.BiFunction-&quot;&gt; &lt;code&gt;handle&lt;/code&gt; &lt;/a&gt; 은 스테이지가 다른 종속 스테이지에 의한 추가 처리를 가능하게하는 대체 결과를 계산할 수있게합니다. 다른 모든 경우에, 스테이지의 계산이 (확인되지 ​​않은) 예외 또는 오류로 갑자기 종료되면 완료를 요구하는 모든 종속 스테이지 는 예외적으로 예외를 원인으로 하는 &lt;a href=&quot;completionexception&quot;&gt; &lt;code&gt;CompletionException&lt;/code&gt; &lt;/a&gt; 과 함께 예외적으로 완료됩니다 . 무대가 &lt;em&gt;둘 다에&lt;/em&gt; 의존하는 &lt;em&gt;경우&lt;/em&gt;두 단계 중 하나이며 둘 다 예외적으로 완료되면 CompletionException은 이러한 예외 중 하나에 해당 할 수 있습니다. 한 단계가 다른 두 단계 &lt;em&gt;중 하나&lt;/em&gt; 에 종속되어 &lt;em&gt;있고&lt;/em&gt; 그 중 하나만 예외적으로 완료되는 경우 종속 단계가 정상적으로 완료되는지 또는 예외적으로 완료되는지에 대한 보장은 없습니다. &lt;code&gt;whenComplete&lt;/code&gt; 메소드의 경우 , 제공된 조치 자체에 예외가 발생하면 스테이지가 예외적으로 완료되지 않은 경우이 예외로 예외적으로 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="c6e22f3e8a52297a0d091d18890097d4bf3bccd2" translate="yes" xml:space="preserve">
          <source>Two method handles whose argument lists are &quot;effectively identical&quot; (i.e., identical in a common prefix) may be mutually converted to a common type by two calls to &lt;code&gt;dropArgumentsToMatch&lt;/code&gt;, as follows:</source>
          <target state="translated">인수 목록이 &quot;효과적으로 동일한&quot;(즉, 공통 접두사가 동일한) 두 개의 메서드 핸들은 다음과 같이 &lt;code&gt;dropArgumentsToMatch&lt;/code&gt; 에 대한 두 번의 호출에 의해 공통 유형으로 상호 변환 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="321658d83681cd685b5028c7c9cd03220094cf85" translate="yes" xml:space="preserve">
          <source>Two nodes are equal if and only if the following conditions are satisfied:</source>
          <target state="translated">두 노드는 다음 조건이 충족되는 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="f65f85b3d18d03a1d4e8285839b0271c0e8bb049" translate="yes" xml:space="preserve">
          <source>Two non-&lt;code&gt;null&lt;/code&gt; arrays, &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively, share a common prefix of length &lt;code&gt;pl&lt;/code&gt; if the following expression is true:</source>
          <target state="translated">다음 표현식이 참인 경우 지정된 범위가 각각 [ &lt;code&gt;aFromIndex&lt;/code&gt; , &lt;code&gt;atoIndex&lt;/code&gt; ) 및 [ &lt;code&gt;bFromIndex&lt;/code&gt; , &lt;code&gt;btoIndex&lt;/code&gt; ) 인 두 개의 &lt;code&gt;null&lt;/code&gt; 이 아닌 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 는 길이 &lt;code&gt;pl&lt;/code&gt; 의 공통 접두사를 공유 합니다.</target>
        </trans-unit>
        <trans-unit id="0dd8a13aecc2b9351ea6f73e6666c7e86965557e" translate="yes" xml:space="preserve">
          <source>Two non-&lt;code&gt;null&lt;/code&gt; arrays, &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively, share a proper if the following expression is true:</source>
          <target state="translated">다음 표현식이 참이면 각각 지정된 범위 [ &lt;code&gt;aFromIndex&lt;/code&gt; , &lt;code&gt;atoIndex&lt;/code&gt; ) 및 [ &lt;code&gt;bFromIndex&lt;/code&gt; , &lt;code&gt;btoIndex&lt;/code&gt; )를 &lt;code&gt;a&lt;/code&gt; 두 개의 &lt;code&gt;null&lt;/code&gt; 이 아닌 배열 a 및 &lt;code&gt;b&lt;/code&gt; 는 적절한 항목을 공유합니다.</target>
        </trans-unit>
        <trans-unit id="ebe3ff0b83f6a9faffdcedf878e974b7f04d9289" translate="yes" xml:space="preserve">
          <source>Two non-&lt;code&gt;null&lt;/code&gt; arrays, &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively, share a proper prefix if the following expression is true:</source>
          <target state="translated">다음 표현식이 참인 경우 지정된 범위가 각각 [ &lt;code&gt;aFromIndex&lt;/code&gt; , &lt;code&gt;atoIndex&lt;/code&gt; ) 및 [ &lt;code&gt;bFromIndex&lt;/code&gt; , &lt;code&gt;btoIndex&lt;/code&gt; ) 인 두 개의 &lt;code&gt;null&lt;/code&gt; 이 아닌 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 는 적절한 접두사를 공유합니다.</target>
        </trans-unit>
        <trans-unit id="29126b80981f2442f313e05ac3a1cb507c30adf7" translate="yes" xml:space="preserve">
          <source>Two non-&lt;code&gt;null&lt;/code&gt; arrays, &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, share a common prefix of length &lt;code&gt;pl&lt;/code&gt; if the following expression is true:</source>
          <target state="translated">다음식이 참인 경우 두 개의 &lt;code&gt;null&lt;/code&gt; 이 아닌 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 는 길이 &lt;code&gt;pl&lt;/code&gt; 의 공통 접두사를 공유 합니다.</target>
        </trans-unit>
        <trans-unit id="059448e95fa06e821c398c4bb9304fe79583d60e" translate="yes" xml:space="preserve">
          <source>Two non-&lt;code&gt;null&lt;/code&gt; arrays, &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, share a proper prefix if the following expression is true:</source>
          <target state="translated">다음식이 참이면 &lt;code&gt;null&lt;/code&gt; 이 아닌 두 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 는 적절한 접두사를 공유합니다.</target>
        </trans-unit>
        <trans-unit id="5550f0652dc4eb165692e012bf1a6c259f1794c5" translate="yes" xml:space="preserve">
          <source>Two objects &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; are considered</source>
          <target state="translated">두 개체 &lt;code&gt;e1&lt;/code&gt; 및 &lt;code&gt;e2&lt;/code&gt; 가 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="7605eae3d98d28d6062311241e63da1518e1a157" translate="yes" xml:space="preserve">
          <source>Two opaque URIs with identical schemes and scheme-specific parts are ordered according to the ordering of their fragments.</source>
          <target state="translated">동일한 체계와 체계 특정 부분을 가진 두 개의 불투명 한 URI는 조각의 순서에 따라 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="d473d0f256cea49ed96dc67be37016b899731d09" translate="yes" xml:space="preserve">
          <source>Two opaque URIs with identical schemes are ordered according to the ordering of their scheme-specific parts.</source>
          <target state="translated">동일한 체계를 가진 두 개의 불투명 한 URI는 체계 별 파트의 순서에 따라 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="04660a3bfcc08a9316557a93d2e0ad00c0c51b43" translate="yes" xml:space="preserve">
          <source>Two operations that remain O(N) in the number of entries are the &lt;code&gt;insertEntries&lt;/code&gt; and &lt;code&gt;removeEntries&lt;/code&gt; methods, both of which are implemented by converting the internal array to a set of integer sizes, copying it into the new array, and then reforming the hybrid representation in place.</source>
          <target state="translated">항목 수에서 O (N)으로 남아있는 두 가지 작업은 &lt;code&gt;insertEntries&lt;/code&gt; 및 &lt;code&gt;removeEntries&lt;/code&gt; 메서드입니다. 둘 다 내부 배열을 정수 크기 집합으로 변환하고 새 배열로 복사 한 다음 하이브리드 표현을 다시 수정하여 구현됩니다. 제자리에.</target>
        </trans-unit>
        <trans-unit id="27cd5df654ef91f708e9f74138d8c2b65cc92c2d" translate="yes" xml:space="preserve">
          <source>Two or more modules export a package with the same name to a module that &quot;reads&quot; both. This includes the case where a module M containing package p &quot;reads&quot; another module that exports p to M.</source>
          <target state="translated">둘 이상의 모듈이 같은 이름의 패키지를 둘 다 &quot;읽는&quot;모듈로 내 보냅니다. 여기에는 패키지 p를 포함하는 모듈 M이 p를 M으로 내보내는 다른 모듈을 &quot;읽는&quot;경우가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4c6968d37e06c9c6386c7a208b2f5e36ba4a5f43" translate="yes" xml:space="preserve">
          <source>Two or more modules in the configuration export the same package to a module that reads both. This includes the case where a module &lt;code&gt;M&lt;/code&gt; containing package &lt;code&gt;p&lt;/code&gt; reads another module that exports &lt;code&gt;p&lt;/code&gt; to &lt;code&gt;M&lt;/code&gt;.</source>
          <target state="translated">구성에있는 둘 이상의 모듈은 둘 다 읽는 모듈로 동일한 패키지를 내 보냅니다. 여기에는 패키지 &lt;code&gt;p&lt;/code&gt; 를 포함 하는 모듈 &lt;code&gt;M&lt;/code&gt; 이 &lt;code&gt;p&lt;/code&gt; 를 &lt;code&gt;M&lt;/code&gt; 으로 내보내는 다른 모듈을 읽는 경우가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="7156525b315d98f5a04e2b8bdada0b108dbad72f" translate="yes" xml:space="preserve">
          <source>Two or more modules with the same package are mapped to the same class loader.</source>
          <target state="translated">패키지가 동일한 둘 이상의 모듈이 동일한 클래스 로더에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="24028619361d92dbdf027e988437278ab739570c" translate="yes" xml:space="preserve">
          <source>Two pieces of date/time information cannot be represented by numbers, the &lt;a href=&quot;../chrono/chronology&quot;&gt;chronology&lt;/a&gt; and the &lt;a href=&quot;../zoneid&quot;&gt;time-zone&lt;/a&gt;. These can be accessed via &lt;a href=&quot;#query(java.time.temporal.TemporalQuery)&quot;&gt;queries&lt;/a&gt; using the static methods defined on &lt;a href=&quot;temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 가지 날짜 / 시간 정보는 숫자, &lt;a href=&quot;../chrono/chronology&quot;&gt;연대기&lt;/a&gt; 및 &lt;a href=&quot;../zoneid&quot;&gt;시간대&lt;/a&gt; 로 표시 할 수 없습니다 . &lt;a href=&quot;temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; 에&lt;/a&gt; 정의 된 정적 메서드를 사용하여 &lt;a href=&quot;#query(java.time.temporal.TemporalQuery)&quot;&gt;쿼리&lt;/a&gt; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="07f53d16493ad2b5c5ee0413e288894ce12d7ac9" translate="yes" xml:space="preserve">
          <source>Two pieces of date/time information cannot be represented by numbers, the &lt;a href=&quot;../chrono/chronology&quot;&gt;chronology&lt;/a&gt; and the &lt;a href=&quot;../zoneid&quot;&gt;time-zone&lt;/a&gt;. These can be accessed via &lt;a href=&quot;temporalaccessor#query(java.time.temporal.TemporalQuery)&quot;&gt;&lt;code&gt;queries&lt;/code&gt;&lt;/a&gt; using the static methods defined on &lt;a href=&quot;temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 가지 날짜 / 시간 정보는 숫자, &lt;a href=&quot;../chrono/chronology&quot;&gt;연대기&lt;/a&gt; 및 &lt;a href=&quot;../zoneid&quot;&gt;시간대&lt;/a&gt; 로 표시 할 수 없습니다 . &lt;a href=&quot;temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; 에&lt;/a&gt; 정의 된 정적 메서드를 사용하여 &lt;a href=&quot;temporalaccessor#query(java.time.temporal.TemporalQuery)&quot;&gt; &lt;code&gt;queries&lt;/code&gt; &lt;/a&gt; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="85b07d5e140ce2cc6d820c15a44356fd530a45ae" translate="yes" xml:space="preserve">
          <source>Two pieces of date/time information cannot be represented by numbers, the &lt;a href=&quot;../chrono/chronology&quot;&gt;chronology&lt;/a&gt; and the &lt;a href=&quot;../zoneid&quot;&gt;time-zone&lt;/a&gt;. These can be accessed via &lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt;&lt;code&gt;queries&lt;/code&gt;&lt;/a&gt; using the static methods defined on &lt;a href=&quot;temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 가지 날짜 / 시간 정보는 &lt;a href=&quot;../chrono/chronology&quot;&gt;연대기&lt;/a&gt; 와 &lt;a href=&quot;../zoneid&quot;&gt;시간대&lt;/a&gt; 로 숫자로 표시 할 수 없습니다 . 이들은 &lt;a href=&quot;temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; 에&lt;/a&gt; 정의 된 정적 메소드를 사용하여 &lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt; &lt;code&gt;queries&lt;/code&gt; &lt;/a&gt; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e05778c54f992a5b6114c3e9fe56ad4e25fbad09" translate="yes" xml:space="preserve">
          <source>Two pieces of date/time information cannot be represented by numbers, the &lt;a href=&quot;../chrono/chronology&quot;&gt;chronology&lt;/a&gt; and the &lt;a href=&quot;../zoneid&quot;&gt;time-zone&lt;/a&gt;. These can be accessed via &lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt;queries&lt;/a&gt; using the static methods defined on &lt;a href=&quot;temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 가지 날짜 / 시간 정보는 &lt;a href=&quot;../chrono/chronology&quot;&gt;연대기&lt;/a&gt; 와 &lt;a href=&quot;../zoneid&quot;&gt;시간대&lt;/a&gt; 로 숫자로 표시 할 수 없습니다 . 이들은 &lt;a href=&quot;temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; 에&lt;/a&gt; 정의 된 정적 메소드를 사용하여 &lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt;쿼리&lt;/a&gt; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3c94d69790e1ec838959829076066d6897764fdf" translate="yes" xml:space="preserve">
          <source>Two possibly &lt;code&gt;null&lt;/code&gt; elements &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; are deeply equal if any of the following conditions hold:</source>
          <target state="translated">다음 조건 중 하나라도 해당되는 경우 두 개의 &lt;code&gt;null&lt;/code&gt; 요소 &lt;code&gt;e1&lt;/code&gt; 과 &lt;code&gt;e2&lt;/code&gt; 는 완전히 같습니다.</target>
        </trans-unit>
        <trans-unit id="e737b2c512ad189e678d92bf45b1d83ff5c03037" translate="yes" xml:space="preserve">
          <source>Two rule sets are equal if they will always result in the same output for any given input instant or local date-time. Rules from two different groups may return false even if they are in fact the same.</source>
          <target state="translated">주어진 입력 순간 또는 현지 날짜-시간에 대해 항상 동일한 출력을 생성 할 경우 두 규칙 세트는 동일합니다. 서로 다른 두 그룹의 규칙은 실제로 동일하더라도 거짓을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6439bad8ce4e40abf7e9d22bfb08c2b6c5b2b25" translate="yes" xml:space="preserve">
          <source>Two short buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;short&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/short#compare(short,short)&quot;&gt;&lt;code&gt;Short.compare(short,short)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 개의 짧은 버퍼는 해당 버퍼 내에서 각 시퀀스의 시작 위치에 관계없이 나머지 요소의 시퀀스를 사전 식으로 비교하여 비교됩니다. &lt;a href=&quot;../lang/short#compare(short,short)&quot;&gt; &lt;code&gt;Short.compare(short,short)&lt;/code&gt; &lt;/a&gt; 호출하는 것처럼 &lt;code&gt;short&lt;/code&gt; 요소 쌍을 비교 합니다.</target>
        </trans-unit>
        <trans-unit id="d74931762644a8874ec6ca8b382ffa83e63855b9" translate="yes" xml:space="preserve">
          <source>Two short buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;short&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/short#compare-short-short-&quot;&gt;&lt;code&gt;Short.compare(short,short)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 개의 짧은 버퍼는 해당 버퍼 내에서 각 시퀀스의 시작 위치에 관계없이 나머지 요소의 시퀀스를 사전 식으로 비교하여 비교됩니다. &lt;code&gt;short&lt;/code&gt; 요소의 쌍은 &lt;a href=&quot;../lang/short#compare-short-short-&quot;&gt; &lt;code&gt;Short.compare(short,short)&lt;/code&gt; &lt;/a&gt; 호출하여 것처럼 비교됩니다 .</target>
        </trans-unit>
        <trans-unit id="92e271d05453aef061bbc3509e2fc83770af674e" translate="yes" xml:space="preserve">
          <source>Two short buffers are equal if, and only if,</source>
          <target state="translated">두 개의 짧은 버퍼는 다음과 같은 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="ac2cec36d9681b0bee2bfd6b426164a08d5af5a6" translate="yes" xml:space="preserve">
          <source>Two types of operations are provided for manipulating the scale of a &lt;code&gt;BigDecimal&lt;/code&gt;: scaling/rounding operations and decimal point motion operations. Scaling/rounding operations (&lt;a href=&quot;#setScale(int,java.math.RoundingMode)&quot;&gt;&lt;code&gt;setScale&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#round(java.math.MathContext)&quot;&gt;&lt;code&gt;round&lt;/code&gt;&lt;/a&gt;) return a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is approximately (or exactly) equal to that of the operand, but whose scale or precision is the specified value; that is, they increase or decrease the precision of the stored number with minimal effect on its value. Decimal point motion operations (&lt;a href=&quot;#movePointLeft(int)&quot;&gt;&lt;code&gt;movePointLeft&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#movePointRight(int)&quot;&gt;&lt;code&gt;movePointRight&lt;/code&gt;&lt;/a&gt;) return a &lt;code&gt;BigDecimal&lt;/code&gt; created from the operand by moving the decimal point a specified distance in the specified direction.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일을 조작하기 위해 두 가지 유형의 작업이 제공됩니다 . 스케일링 / 반올림 작업과 소수점 동작 작업입니다. 스케일링 / 반올림 연산 ( &lt;a href=&quot;#setScale(int,java.math.RoundingMode)&quot;&gt; &lt;code&gt;setScale&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#round(java.math.MathContext)&quot;&gt; &lt;code&gt;round&lt;/code&gt; &lt;/a&gt; ) 은 값이 피연산자의 값과 대략 (또는 정확히) 같지만 스케일 또는 정밀도가 지정된 값인 &lt;code&gt;BigDecimal&lt;/code&gt; 을 리턴 합니다. 즉, 값에 미치는 영향을 최소화하면서 저장된 숫자의 정밀도를 높이거나 낮 춥니 다. 소수점 동작 연산 ( &lt;a href=&quot;#movePointLeft(int)&quot;&gt; &lt;code&gt;movePointLeft&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#movePointRight(int)&quot;&gt; &lt;code&gt;movePointRight&lt;/code&gt; &lt;/a&gt; ) 은 소수점을 지정된 방향으로 지정된 거리만큼 이동하여 피연산자에서 만든 &lt;code&gt;BigDecimal&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="840bcd21edbcd6c45b75d11fb8d1eb8bd409a790" translate="yes" xml:space="preserve">
          <source>Two types of operations are provided for manipulating the scale of a &lt;code&gt;BigDecimal&lt;/code&gt;: scaling/rounding operations and decimal point motion operations. Scaling/rounding operations (&lt;a href=&quot;bigdecimal#setScale-int-java.math.RoundingMode-&quot;&gt;&lt;code&gt;setScale&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;bigdecimal#round-java.math.MathContext-&quot;&gt;&lt;code&gt;round&lt;/code&gt;&lt;/a&gt;) return a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is approximately (or exactly) equal to that of the operand, but whose scale or precision is the specified value; that is, they increase or decrease the precision of the stored number with minimal effect on its value. Decimal point motion operations (&lt;a href=&quot;bigdecimal#movePointLeft-int-&quot;&gt;&lt;code&gt;movePointLeft&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;bigdecimal#movePointRight-int-&quot;&gt;&lt;code&gt;movePointRight&lt;/code&gt;&lt;/a&gt;) return a &lt;code&gt;BigDecimal&lt;/code&gt; created from the operand by moving the decimal point a specified distance in the specified direction.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일을 조작하기 위해 스케일링 / 라운딩 조작 및 소수점 모션 조작의 두 가지 조작 유형이 제공 됩니다. 스케일링 / 라운딩 연산 ( &lt;a href=&quot;bigdecimal#setScale-int-java.math.RoundingMode-&quot;&gt; &lt;code&gt;setScale&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;bigdecimal#round-java.math.MathContext-&quot;&gt; &lt;code&gt;round&lt;/code&gt; &lt;/a&gt; ) 은 값이 피연산자의 값과 대략 같거나 정확히 같지만 스케일 또는 정밀도가 지정된 값인 &lt;code&gt;BigDecimal&lt;/code&gt; 을 리턴 합니다. 즉, 값에 미치는 영향을 최소화하면서 저장된 숫자의 정밀도를 높이거나 낮 춥니 다. 소수점 모션 연산 ( &lt;a href=&quot;bigdecimal#movePointLeft-int-&quot;&gt; &lt;code&gt;movePointLeft&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;bigdecimal#movePointRight-int-&quot;&gt; &lt;code&gt;movePointRight&lt;/code&gt; &lt;/a&gt; ) 은 지정된 방향으로 지정된 거리만큼 소수점을 이동하여 피연산자에서 생성 된 &lt;code&gt;BigDecimal&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2c4fab8dffe592a084c365e457388a74faaba12b" translate="yes" xml:space="preserve">
          <source>Two versions are compared by examining the version string as described in &lt;a href=&quot;#compareTo(java.lang.Runtime.Version)&quot;&gt;&lt;code&gt;compareTo(Version)&lt;/code&gt;&lt;/a&gt; with the exception that the optional build information is always ignored.</source>
          <target state="translated">선택적 빌드 정보가 항상 무시된다는 점을 제외하고 &lt;a href=&quot;#compareTo(java.lang.Runtime.Version)&quot;&gt; &lt;code&gt;compareTo(Version)&lt;/code&gt; &lt;/a&gt; 설명 된대로 버전 문자열을 검사하여 두 버전을 비교합니다 .</target>
        </trans-unit>
        <trans-unit id="3dd96db0b8fdb5ec29bc75110364487fd08afe3f" translate="yes" xml:space="preserve">
          <source>TwoDigitHours</source>
          <target state="translated">TwoDigitHours</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="5aa68e063e7ea81b31ba68936799f05471feb948" translate="yes" xml:space="preserve">
          <source>Type Mapping Rules</source>
          <target state="translated">유형 매핑 규칙</target>
        </trans-unit>
        <trans-unit id="47f39d80096c89d119a7202ce0aa5f0bce9d98cd" translate="yes" xml:space="preserve">
          <source>Type Names</source>
          <target state="translated">타입 이름</target>
        </trans-unit>
        <trans-unit id="6a6611d567cb2f36519ceaec8099760e8d3871d3" translate="yes" xml:space="preserve">
          <source>Type Parameters:</source>
          <target state="translated">유형 매개 변수 :</target>
        </trans-unit>
        <trans-unit id="fecc28dda84b2d001dce080aebed61aa8adf2ceb" translate="yes" xml:space="preserve">
          <source>Type String</source>
          <target state="translated">타입 문자열</target>
        </trans-unit>
        <trans-unit id="29a202322290c41693f4d3d1ecfd33271e248f35" translate="yes" xml:space="preserve">
          <source>Type and value equality matching is done as below:</source>
          <target state="translated">유형 및 값 평등 일치는 다음과 같이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="c27432a69b51a6a36d7ca1e539bf1229c7c526d0" translate="yes" xml:space="preserve">
          <source>Type declared in target as</source>
          <target state="translated">대상에서 다음과 같이 선언 된 유형</target>
        </trans-unit>
        <trans-unit id="6e170f317f6425c9243d39bf9a2960d77905802e" translate="yes" xml:space="preserve">
          <source>Type description for a file, directory, or folder as it would be displayed in a system file browser.</source>
          <target state="translated">시스템 파일 브라우저에 표시되는 파일, 디렉토리 또는 폴더에 대한 설명을 입력합니다.</target>
        </trans-unit>
        <trans-unit id="1dafbc13c8cb4e164d170a3b395d07f28c2c4494" translate="yes" xml:space="preserve">
          <source>Type description for a file, directory, or folder as it would be displayed in a system file browser. Example from Windows: the &quot;Desktop&quot; folder is described as &quot;Desktop&quot;. Override for platforms with native ShellFolder implementations.</source>
          <target state="translated">시스템 파일 브라우저에 표시되는 파일, 디렉토리 또는 폴더에 대한 설명을 입력합니다. Windows의 예 : &quot;Desktop&quot;폴더는 &quot;Desktop&quot;으로 설명됩니다. 기본 ShellFolder 구현으로 플랫폼을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="9abaed5a4fee3a84c132511e464e39d0e2015cac" translate="yes" xml:space="preserve">
          <source>Type for an update of an internal relation.</source>
          <target state="translated">내부 관계 업데이트를위한 유형입니다.</target>
        </trans-unit>
        <trans-unit id="9b0911379bab618c3ca8a02dd5468d7f6fc9d0cd" translate="yes" xml:space="preserve">
          <source>Type for private keys.</source>
          <target state="translated">개인 키를 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="a43434f2b4ba91c827a66d3dea3fb82db7c68968" translate="yes" xml:space="preserve">
          <source>Type for public keys.</source>
          <target state="translated">공개 키 유형입니다.</target>
        </trans-unit>
        <trans-unit id="c05b29592a901917c665933e4af5a98552bb0a36" translate="yes" xml:space="preserve">
          <source>Type for secret keys.</source>
          <target state="translated">비밀 키를 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="d4def0c1ec8dd2ec9d5988d983aae91de603bde6" translate="yes" xml:space="preserve">
          <source>Type for the creation of an internal relation.</source>
          <target state="translated">내부 관계 작성을위한 유형입니다.</target>
        </trans-unit>
        <trans-unit id="711f460ec0af76d4dd67b882900ac195c361a8f7" translate="yes" xml:space="preserve">
          <source>Type for the relation MBean added into the Relation Service.</source>
          <target state="translated">관계 서비스에 추가 된 관계 MBean의 유형.</target>
        </trans-unit>
        <trans-unit id="a5da08a49b0d9e8ba1122bf89572a0805a2818ab" translate="yes" xml:space="preserve">
          <source>Type for the removal from the Relation Service of a relation MBean.</source>
          <target state="translated">관계 MBean의 관계 서비스에서 제거하기위한 유형입니다.</target>
        </trans-unit>
        <trans-unit id="e2fdd3bfdc86204fa1c97bf98ce5b54c3508745e" translate="yes" xml:space="preserve">
          <source>Type for the removal from the Relation Service of an internal relation.</source>
          <target state="translated">내부 관계의 관계 서비스에서 제거하기위한 유형입니다.</target>
        </trans-unit>
        <trans-unit id="c8d98b51d69372823b9b8567bac9ec3e64421f25" translate="yes" xml:space="preserve">
          <source>Type for the update of a relation MBean.</source>
          <target state="translated">관계 MBean 업데이트를위한 유형입니다.</target>
        </trans-unit>
        <trans-unit id="aed2c219e25eff0ad10e7f04bc3e58f3f626c08c" translate="yes" xml:space="preserve">
          <source>Type is the common superinterface for all types in the Java programming language.</source>
          <target state="translated">유형은 Java 프로그래밍 언어의 모든 유형에 대한 공통 수퍼 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="5fc0e2d3160b7d91982c2ed8ec79bf17e0ac1b46" translate="yes" xml:space="preserve">
          <source>Type is the common superinterface for all types in the Java programming language. These include raw types, parameterized types, array types, type variables and primitive types.</source>
          <target state="translated">유형은 Java 프로그래밍 언어의 모든 유형에 대한 공통 수퍼 인터페이스입니다. 여기에는 원시 유형, 매개 변수화 된 유형, 배열 유형, 유형 변수 및 기본 유형이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c6ec621ecbf5fcd4c27ed13185ac289b46b52d55" translate="yes" xml:space="preserve">
          <source>Type mapping rules</source>
          <target state="translated">타입 매핑 규칙</target>
        </trans-unit>
        <trans-unit id="65792dc4278a971590055a748672395f35550847" translate="yes" xml:space="preserve">
          <source>Type meaning Look and Feel should not supply any options -- only use the options from the &lt;code&gt;JOptionPane&lt;/code&gt;.</source>
          <target state="translated">유형 의미 Look and Feel는 옵션을 제공해서는 안됩니다 . &lt;code&gt;JOptionPane&lt;/code&gt; 의 옵션 만 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d45cba8a21920a8210285abd1be6831a6888dd62" translate="yes" xml:space="preserve">
          <source>Type of descriptor, &quot;mbean&quot;, &quot;attribute&quot;, &quot;constructor&quot;, &quot;operation&quot;, or &quot;notification&quot;.</source>
          <target state="translated">디스크립터 유형, &quot;mbean&quot;, &quot;attribute&quot;, &quot;constructor&quot;, &quot;operation&quot;또는 &quot;notification&quot;</target>
        </trans-unit>
        <trans-unit id="2968ec5a80e062120c695b9df2574943d2c1c7b6" translate="yes" xml:space="preserve">
          <source>Type of tag this iterator represents.</source>
          <target state="translated">이 반복기가 나타내는 태그 유형입니다.</target>
        </trans-unit>
        <trans-unit id="af6660a65a8439039083e73a99cc635888fb076f" translate="yes" xml:space="preserve">
          <source>Type of the array used to represent pixel values.</source>
          <target state="translated">픽셀 값을 나타내는 데 사용되는 배열 유형입니다.</target>
        </trans-unit>
        <trans-unit id="21a2f3ca561e3342520659100d92a43c0d1ae625" translate="yes" xml:space="preserve">
          <source>Type of the expression</source>
          <target state="translated">식의 유형</target>
        </trans-unit>
        <trans-unit id="e658f420bfb4dac53261b3dc212156822b65f826" translate="yes" xml:space="preserve">
          <source>Type of transparency like Opaque, Bitmask or Translucent.</source>
          <target state="translated">Opaque, Bitmask 또는 Translucent와 같은 투명도 유형입니다.</target>
        </trans-unit>
        <trans-unit id="108497ad4df6837d5bfdccaa8d930f21cd3240d7" translate="yes" xml:space="preserve">
          <source>Type parameter declaration</source>
          <target state="translated">타입 파라미터 선언</target>
        </trans-unit>
        <trans-unit id="3b6542b78cc1cbb76a295d173e0073cdf159b82f" translate="yes" xml:space="preserve">
          <source>Type parameters of functional interfaces can be specialized to primitives with additional type prefixes. To specialize the return type for a type that has both generic return type and generic arguments, we prefix &lt;code&gt;ToXxx&lt;/code&gt;, as in &lt;a href=&quot;tointfunction&quot;&gt;&lt;code&gt;ToIntFunction&lt;/code&gt;&lt;/a&gt;. Otherwise, type arguments are specialized left-to-right, as in &lt;a href=&quot;doubleconsumer&quot;&gt;&lt;code&gt;DoubleConsumer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;objintconsumer&quot;&gt;&lt;code&gt;ObjIntConsumer&lt;/code&gt;&lt;/a&gt;. (The type prefix &lt;code&gt;Obj&lt;/code&gt; is used to indicate that we don't want to specialize this parameter, but want to move on to the next parameter, as in &lt;a href=&quot;objintconsumer&quot;&gt;&lt;code&gt;ObjIntConsumer&lt;/code&gt;&lt;/a&gt;.) These schemes can be combined, as in &lt;code&gt;IntToDoubleFunction&lt;/code&gt;.</source>
          <target state="translated">기능 인터페이스의 유형 매개 변수는 추가 유형 접 두부가있는 기본 요소에 특화 될 수 있습니다. 제네릭 반환 형식과 제네릭 인수가 모두있는 형식의 반환 형식을 특수화하기 위해 &lt;code&gt;ToXxx&lt;/code&gt; 과 같이 ToXxx 접두사 를 &lt;a href=&quot;tointfunction&quot;&gt; &lt;code&gt;ToIntFunction&lt;/code&gt; &lt;/a&gt; 합니다. 그렇지 않으면 &lt;a href=&quot;doubleconsumer&quot;&gt; &lt;code&gt;DoubleConsumer&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;objintconsumer&quot;&gt; &lt;code&gt;ObjIntConsumer&lt;/code&gt; &lt;/a&gt; 와 같이 형식 인수가 왼쪽에서 오른쪽으로 특수화 됩니다. (타입 접두사 &lt;code&gt;Obj&lt;/code&gt; 는이 매개 변수를 특수화하고 싶지 않지만 &lt;a href=&quot;objintconsumer&quot;&gt; &lt;code&gt;ObjIntConsumer&lt;/code&gt; &lt;/a&gt; 에서와 같이 다음 매개 변수로 넘어 가고자 함을 표시하는 데 사용됩니다 .) 이러한 스키마는 &lt;code&gt;IntToDoubleFunction&lt;/code&gt; 에서와 같이 결합 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f67615ab32736dce29c3910397612786cbc8e363" translate="yes" xml:space="preserve">
          <source>Type used for &lt;code&gt;showConfirmDialog&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;showConfirmDialog&lt;/code&gt; 에 사용되는 유형 입니다 .</target>
        </trans-unit>
        <trans-unit id="e8a6ced1a9abf3469b6d1ac6a219d4a5a145ca54" translate="yes" xml:space="preserve">
          <source>Type value indicating that the &lt;code&gt;JFileChooser&lt;/code&gt; supports a &quot;Save&quot; file operation.</source>
          <target state="translated">&lt;code&gt;JFileChooser&lt;/code&gt; 가 &quot;저장&quot;파일 작업을 지원함을 나타내는 값을 입력합니다 .</target>
        </trans-unit>
        <trans-unit id="2d51eb2bccb0b73366cea3617289e3ca24da16b9" translate="yes" xml:space="preserve">
          <source>Type value indicating that the &lt;code&gt;JFileChooser&lt;/code&gt; supports a developer-specified file operation.</source>
          <target state="translated">&lt;code&gt;JFileChooser&lt;/code&gt; 가 개발자 지정 파일 작업을 지원함을 나타내는 값을 입력합니다 .</target>
        </trans-unit>
        <trans-unit id="e8589e1631b642d3d06ef2d794431ce28773689f" translate="yes" xml:space="preserve">
          <source>Type value indicating that the &lt;code&gt;JFileChooser&lt;/code&gt; supports an &quot;Open&quot; file operation.</source>
          <target state="translated">&lt;code&gt;JFileChooser&lt;/code&gt; 가 &quot;열기&quot;파일 작업을 지원함을 나타내는 값을 입력합니다 .</target>
        </trans-unit>
        <trans-unit id="b3c5c7c693fb422a84a383de08d28b9f490b4218" translate="yes" xml:space="preserve">
          <source>Type-Import-on-Demand Declaration.</source>
          <target state="translated">Type-Import-on-Demand 선언.</target>
        </trans-unit>
        <trans-unit id="07f3e8ac8d614d87753533a9736e07e8ef5fc8ad" translate="yes" xml:space="preserve">
          <source>Type-Import-on-Demand Declaration. A non-static &quot;star&quot; import.</source>
          <target state="translated">Type-Import-on-Demand 선언. 비 정적 &quot;별&quot;가져 오기입니다.</target>
        </trans-unit>
        <trans-unit id="ee59cee9ec6a0c6a404a28fbcedb81cbab9ab9de" translate="yes" xml:space="preserve">
          <source>Type-safe enum class that represents six fields of the &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt; 클래스 의 6 개 필드를 나타내는 형식이 안전한 열거 형 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="6f1c0c8436758afef89c1765b93559fc1c76f2f3" translate="yes" xml:space="preserve">
          <source>Type.</source>
          <target state="translated">Type.</target>
        </trans-unit>
        <trans-unit id="0b786b1fb8589261b95a3a411226bf70605fd256" translate="yes" xml:space="preserve">
          <source>Type. Either '*', '?', '+', ',', '|', '&amp;amp;'.</source>
          <target state="translated">유형. '*', '?', '+', ',', '|', '&amp;amp;'중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="2f8294383485abed352067f227b79009adf3c167" translate="yes" xml:space="preserve">
          <source>Type.PRIVATE/&quot;PKCS#8&quot; - gets a KeyFactory instance for the key algorithm, constructs a PKCS8EncodedKeySpec with the encoded key bytes, and generates a private key from the spec</source>
          <target state="translated">Type.PRIVATE / &quot;PKCS # 8&quot;-키 알고리즘에 대한 KeyFactory 인스턴스를 가져 와서 인코딩 된 키 바이트를 사용하여 PKCS8EncodedKeySpec을 구성하고 스펙에서 개인 키를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="15b906813731146468dfa298adc84c9da494f96f" translate="yes" xml:space="preserve">
          <source>Type.PUBLIC/&quot;X.509&quot; - gets a KeyFactory instance for the key algorithm, constructs an X509EncodedKeySpec with the encoded key bytes, and generates a public key from the spec</source>
          <target state="translated">Type.PUBLIC / &quot;X.509&quot;-키 알고리즘에 대한 KeyFactory 인스턴스를 가져 와서 인코딩 된 키 바이트로 X509EncodedKeySpec을 구성하고 스펙에서 공개 키를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="dcadb89f135202adf7519224af015ac2f9066835" translate="yes" xml:space="preserve">
          <source>Type.SECRET/&quot;RAW&quot; - returns a SecretKeySpec object constructed using encoded key bytes and algorithm</source>
          <target state="translated">Type.SECRET / &quot;RAW&quot;-인코딩 된 키 바이트 및 알고리즘을 사용하여 생성 된 SecretKeySpec 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="922b714e8a60a9b8371bbfa4e5aa962ee018783d" translate="yes" xml:space="preserve">
          <source>Type.getTypeName()</source>
          <target state="translated">Type.getTypeName()</target>
        </trans-unit>
        <trans-unit id="986f418c6113d611bb2033fa15cb77dbd9b53b9b" translate="yes" xml:space="preserve">
          <source>TypeBasedGuardingDynamicLinker</source>
          <target state="translated">TypeBasedGuardingDynamicLinker</target>
        </trans-unit>
        <trans-unit id="81f971b9f28b2fb10c6304d60f7807d14e5f58d8" translate="yes" xml:space="preserve">
          <source>TypeCastTree</source>
          <target state="translated">TypeCastTree</target>
        </trans-unit>
        <trans-unit id="d08b1cab007be25f00b4001e09f2ae7f842a9bf9" translate="yes" xml:space="preserve">
          <source>TypeComponent</source>
          <target state="translated">TypeComponent</target>
        </trans-unit>
        <trans-unit id="b0d97ee04d6c48af8ecd556fb3fa4513100e9243" translate="yes" xml:space="preserve">
          <source>TypeDeclSnippet</source>
          <target state="translated">TypeDeclSnippet</target>
        </trans-unit>
        <trans-unit id="79292189b5c0a7b6de3bda58667e26472826017e" translate="yes" xml:space="preserve">
          <source>TypeDescriptor</source>
          <target state="translated">TypeDescriptor</target>
        </trans-unit>
        <trans-unit id="c1b9a00d5c9fe3e2f619f664a098f04d08687ef3" translate="yes" xml:space="preserve">
          <source>TypeElement</source>
          <target state="translated">TypeElement</target>
        </trans-unit>
        <trans-unit id="b64a644106759ff55f140758a0f7850c79005783" translate="yes" xml:space="preserve">
          <source>TypeElement.getEnclosedElements()</source>
          <target state="translated">TypeElement.getEnclosedElements()</target>
        </trans-unit>
        <trans-unit id="556a6c6cf67bd5e900e2b331b74ddb186847980d" translate="yes" xml:space="preserve">
          <source>TypeElement.getEnclosingElement()</source>
          <target state="translated">TypeElement.getEnclosingElement()</target>
        </trans-unit>
        <trans-unit id="bc967cc0397f942223b06f856d7b96af8640be4c" translate="yes" xml:space="preserve">
          <source>TypeElement.getInterfaces()</source>
          <target state="translated">TypeElement.getInterfaces()</target>
        </trans-unit>
        <trans-unit id="03403f85e463d34632b915bd485058f7373ea9eb" translate="yes" xml:space="preserve">
          <source>TypeElement.getNestingKind()</source>
          <target state="translated">TypeElement.getNestingKind()</target>
        </trans-unit>
        <trans-unit id="c30bd2e348d148383d0794372f6001eca19f1b6e" translate="yes" xml:space="preserve">
          <source>TypeElement.getQualifiedName()</source>
          <target state="translated">TypeElement.getQualifiedName()</target>
        </trans-unit>
        <trans-unit id="a705bbcbc2931abff53dbe6d64843f2eb6083b7d" translate="yes" xml:space="preserve">
          <source>TypeElement.getSimpleName()</source>
          <target state="translated">TypeElement.getSimpleName()</target>
        </trans-unit>
        <trans-unit id="435931ca94a8e7a74c66397bc58303d12f4608be" translate="yes" xml:space="preserve">
          <source>TypeElement.getSuperclass()</source>
          <target state="translated">TypeElement.getSuperclass()</target>
        </trans-unit>
        <trans-unit id="23289c0ae2106e74322b0223e0e821b8ba78c6f8" translate="yes" xml:space="preserve">
          <source>TypeElement.getTypeParameters()</source>
          <target state="translated">TypeElement.getTypeParameters()</target>
        </trans-unit>
        <trans-unit id="e31aa519e181d0d28623b42b4c2d9e559f68b9af" translate="yes" xml:space="preserve">
          <source>TypeInfo</source>
          <target state="translated">TypeInfo</target>
        </trans-unit>
        <trans-unit id="cca3ca2a6c4b6a01daff7944c2c1b05c200066c0" translate="yes" xml:space="preserve">
          <source>TypeInfoProvider</source>
          <target state="translated">TypeInfoProvider</target>
        </trans-unit>
        <trans-unit id="4d0bad4e8d6be3bb83a36ca4e24be27b0caed088" translate="yes" xml:space="preserve">
          <source>TypeKind</source>
          <target state="translated">TypeKind</target>
        </trans-unit>
        <trans-unit id="023690b532be6d5660bf06163ead725dc9988193" translate="yes" xml:space="preserve">
          <source>TypeKind.isPrimitive()</source>
          <target state="translated">TypeKind.isPrimitive()</target>
        </trans-unit>
        <trans-unit id="ceafbe7a47ac4951f0ccfc31a6fa456bfc90b450" translate="yes" xml:space="preserve">
          <source>TypeKind.valueOf()</source>
          <target state="translated">TypeKind.valueOf()</target>
        </trans-unit>
        <trans-unit id="1f5e07b79978ad60eb9bd84ff3c264917a686d61" translate="yes" xml:space="preserve">
          <source>TypeKind.values()</source>
          <target state="translated">TypeKind.values()</target>
        </trans-unit>
        <trans-unit id="d52179e1f57e2ab0ae6a5cd24538eeeeaf655921" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor14</source>
          <target state="translated">TypeKindVisitor14</target>
        </trans-unit>
        <trans-unit id="e93e42fbad68836a1d5ae1990b903da543837054" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6</source>
          <target state="translated">TypeKindVisitor6</target>
        </trans-unit>
        <trans-unit id="29818e0ef0e0b101e77e7a4ad562e73f643500d5" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitNoType()</source>
          <target state="translated">TypeKindVisitor6.visitNoType()</target>
        </trans-unit>
        <trans-unit id="b1adf8c1e39ca0c87e92a181504ab90673aa6163" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitNoTypeAsNone()</source>
          <target state="translated">TypeKindVisitor6.visitNoTypeAsNone()</target>
        </trans-unit>
        <trans-unit id="263d4ba34a6c279c498c27503925db92866f684c" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitNoTypeAsPackage()</source>
          <target state="translated">TypeKindVisitor6.visitNoTypeAsPackage()</target>
        </trans-unit>
        <trans-unit id="c89e8714fabbbc2b7e76fd4de8f39a9e5a98f037" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitNoTypeAsVoid()</source>
          <target state="translated">TypeKindVisitor6.visitNoTypeAsVoid()</target>
        </trans-unit>
        <trans-unit id="ca8111277455079790839208148e76690fa72f1a" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitive()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitive()</target>
        </trans-unit>
        <trans-unit id="7a14bcf9f18f2f6a7c790ba144ce2ff1c8a6791f" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsBoolean()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsBoolean()</target>
        </trans-unit>
        <trans-unit id="c30ff91000c210630c7370b3a51664daeefbb22d" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsByte()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsByte()</target>
        </trans-unit>
        <trans-unit id="dfd902b66123a7dcc18ee50e5cccc35635252524" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsChar()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsChar()</target>
        </trans-unit>
        <trans-unit id="fb55ec4494cd19d7a488990f63db5ab09f5dfaf2" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsDouble()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsDouble()</target>
        </trans-unit>
        <trans-unit id="c7efd0276b7557b398a87fe8b0248a82887324d7" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsFloat()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsFloat()</target>
        </trans-unit>
        <trans-unit id="ee2478b126427392ca8446c7cd41165c75858cbc" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsInt()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsInt()</target>
        </trans-unit>
        <trans-unit id="687e0c3141db3901bdf44a33eed5ed93e0e0086a" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsLong()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsLong()</target>
        </trans-unit>
        <trans-unit id="ace897553f996f09a086d5420408990571d11a7c" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsShort()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsShort()</target>
        </trans-unit>
        <trans-unit id="b8824112ecd54db42a3ad0aebbd8d4aedb80ca07" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor7</source>
          <target state="translated">TypeKindVisitor7</target>
        </trans-unit>
        <trans-unit id="3ee3f96aa4cc0d570047b984f8a50690278c62cd" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor7.visitUnion()</source>
          <target state="translated">TypeKindVisitor7.visitUnion()</target>
        </trans-unit>
        <trans-unit id="8bc2fa014d3f6f5521e608186d6bd02d29585e13" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor8</source>
          <target state="translated">TypeKindVisitor8</target>
        </trans-unit>
        <trans-unit id="8786b5fc0cd948201b7e8e2de386108a15afd543" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor8.visitIntersection()</source>
          <target state="translated">TypeKindVisitor8.visitIntersection()</target>
        </trans-unit>
        <trans-unit id="750000ddb22533afe5ad7ee759c5bf42c3b7d59f" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor9</source>
          <target state="translated">TypeKindVisitor9</target>
        </trans-unit>
        <trans-unit id="722d9d65e4cd952d0238c827b82facc7fe84912f" translate="yes" xml:space="preserve">
          <source>TypeMirror</source>
          <target state="translated">TypeMirror</target>
        </trans-unit>
        <trans-unit id="5ff9038187ec4605eaabd92b366b0a4c3a8bf8d7" translate="yes" xml:space="preserve">
          <source>TypeMirror.accept()</source>
          <target state="translated">TypeMirror.accept()</target>
        </trans-unit>
        <trans-unit id="d891e78ad8b0895fa35fc937d6b8a3b0152935b3" translate="yes" xml:space="preserve">
          <source>TypeMirror.equals()</source>
          <target state="translated">TypeMirror.equals()</target>
        </trans-unit>
        <trans-unit id="db041740887a264fd31f915f9d084c08f10ec941" translate="yes" xml:space="preserve">
          <source>TypeMirror.getKind()</source>
          <target state="translated">TypeMirror.getKind()</target>
        </trans-unit>
        <trans-unit id="a576f524851b4db32a9820cb6c5bc3a181786af6" translate="yes" xml:space="preserve">
          <source>TypeMirror.hashCode()</source>
          <target state="translated">TypeMirror.hashCode()</target>
        </trans-unit>
        <trans-unit id="91fe331ed89f52e8a8b5c6d525fe66535a64a629" translate="yes" xml:space="preserve">
          <source>TypeMirror.toString()</source>
          <target state="translated">TypeMirror.toString()</target>
        </trans-unit>
        <trans-unit id="9e430f17eb96d796bf49c46584b98c497f8ae559" translate="yes" xml:space="preserve">
          <source>TypeName</source>
          <target state="translated">TypeName</target>
        </trans-unit>
        <trans-unit id="52a705d1c7165c704537e82d674a10a3224930fd" translate="yes" xml:space="preserve">
          <source>TypeNotPresentException</source>
          <target state="translated">TypeNotPresentException</target>
        </trans-unit>
        <trans-unit id="e04827ae30cd68204292b58743e61d1ed65b8a16" translate="yes" xml:space="preserve">
          <source>TypeNotPresentException.typeName()</source>
          <target state="translated">TypeNotPresentException.typeName()</target>
        </trans-unit>
        <trans-unit id="727b7f929ccf50c30982875f9e48598c393efef3" translate="yes" xml:space="preserve">
          <source>TypeParameterElement</source>
          <target state="translated">TypeParameterElement</target>
        </trans-unit>
        <trans-unit id="c960aaf11c27121321d2c1d95a2625ac340b8e25" translate="yes" xml:space="preserve">
          <source>TypeParameterElement.getBounds()</source>
          <target state="translated">TypeParameterElement.getBounds()</target>
        </trans-unit>
        <trans-unit id="1906530225ac0cad013869d6611bb815974f1d56" translate="yes" xml:space="preserve">
          <source>TypeParameterElement.getEnclosingElement()</source>
          <target state="translated">TypeParameterElement.getEnclosingElement()</target>
        </trans-unit>
        <trans-unit id="6fc1b0383b2f21cff4d222c1c2afc5014cec15cf" translate="yes" xml:space="preserve">
          <source>TypeParameterElement.getGenericElement()</source>
          <target state="translated">TypeParameterElement.getGenericElement()</target>
        </trans-unit>
        <trans-unit id="05d61c3e960cc560e3fb775cb7e3393779e24416" translate="yes" xml:space="preserve">
          <source>TypeParameterTree</source>
          <target state="translated">TypeParameterTree</target>
        </trans-unit>
        <trans-unit id="8a86204b396a833b2a197df0c26149f6aa902365" translate="yes" xml:space="preserve">
          <source>TypeUtilities</source>
          <target state="translated">TypeUtilities</target>
        </trans-unit>
        <trans-unit id="1382a88c5310fa44afdc93ad2337d61cbbf8897c" translate="yes" xml:space="preserve">
          <source>TypeVariable</source>
          <target state="translated">TypeVariable</target>
        </trans-unit>
        <trans-unit id="0625b00c19877f1f2e82d82b52ab4cce23556b13" translate="yes" xml:space="preserve">
          <source>TypeVariable is the common superinterface for type variables of kinds.</source>
          <target state="translated">TypeVariable은 종류의 유형 변수에 대한 공통 슈퍼 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="bd47e3f07cb3692d1c38a4f5212749aafef3341d" translate="yes" xml:space="preserve">
          <source>TypeVariable is the common superinterface for type variables of kinds. A type variable is created the first time it is needed by a reflective method, as specified in this package. If a type variable t is referenced by a type (i.e, class, interface or annotation type) T, and T is declared by the nth enclosing class of T (see JLS 8.1.2), then the creation of t requires the resolution (see JVMS 5) of the ith enclosing class of T, for i = 0 to n, inclusive. Creating a type variable must not cause the creation of its bounds. Repeated creation of a type variable has no effect.</source>
          <target state="translated">TypeVariable은 종류의 유형 변수에 대한 공통 슈퍼 인터페이스입니다. 이 패키지에 지정된 것처럼 반사 방법에 필요한 유형 변수가 처음 만들어집니다. 타입 변수 t가 타입 (예를 들어, 클래스, 인터페이스 또는 주석 타입) T에 의해 참조되고, T가 n 번째 둘러싸는 클래스 T에 의해 선언되면 (JLS 8.1.2 참조), t를 생성하려면 해결이 필요합니다 ( i = 0에서 n까지의 i 번째 엔 클로징 클래스 T의 JVMS 5)를 참조하십시오. 유형 변수를 만들면 해당 범위가 만들어지지 않아야합니다. 유형 변수를 반복해서 생성해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="53f8e1483f0754d9e109f4b6d2212c7e0ded41e8" translate="yes" xml:space="preserve">
          <source>TypeVariable.asElement()</source>
          <target state="translated">TypeVariable.asElement()</target>
        </trans-unit>
        <trans-unit id="02efb8237ca64580805be12b7533aa15a1136243" translate="yes" xml:space="preserve">
          <source>TypeVariable.getAnnotatedBounds()</source>
          <target state="translated">TypeVariable.getAnnotatedBounds()</target>
        </trans-unit>
        <trans-unit id="b9199d614efc47488f5aeb4d1cba227bdf89f957" translate="yes" xml:space="preserve">
          <source>TypeVariable.getBounds()</source>
          <target state="translated">TypeVariable.getBounds()</target>
        </trans-unit>
        <trans-unit id="bd477ab31bb6bd5d32910a1e49aa5214ee95b4e5" translate="yes" xml:space="preserve">
          <source>TypeVariable.getGenericDeclaration()</source>
          <target state="translated">TypeVariable.getGenericDeclaration()</target>
        </trans-unit>
        <trans-unit id="2d79f2287b2cb839b31eda576b3e66bcfdd31865" translate="yes" xml:space="preserve">
          <source>TypeVariable.getLowerBound()</source>
          <target state="translated">TypeVariable.getLowerBound()</target>
        </trans-unit>
        <trans-unit id="69a7ffd4c332358d063d5f7c16a6723e156b1cb9" translate="yes" xml:space="preserve">
          <source>TypeVariable.getName()</source>
          <target state="translated">TypeVariable.getName()</target>
        </trans-unit>
        <trans-unit id="c4e65862937f0fd6bb6994952b6ff637fbe3192b" translate="yes" xml:space="preserve">
          <source>TypeVariable.getUpperBound()</source>
          <target state="translated">TypeVariable.getUpperBound()</target>
        </trans-unit>
        <trans-unit id="138dd7e4f4ddfae7cd580ff8a959c44c045ac7b0" translate="yes" xml:space="preserve">
          <source>TypeVisitor</source>
          <target state="translated">TypeVisitor</target>
        </trans-unit>
        <trans-unit id="85f77c8f09b72001be291ac6bb020d543cc7aaca" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visit()</source>
          <target state="translated">TypeVisitor.visit()</target>
        </trans-unit>
        <trans-unit id="950da07f4dee6a891ffdc3a2705e48a919a48af1" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitArray()</source>
          <target state="translated">TypeVisitor.visitArray()</target>
        </trans-unit>
        <trans-unit id="f63f6225b784b2e1d45baf5671f011975645eedc" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitDeclared()</source>
          <target state="translated">TypeVisitor.visitDeclared()</target>
        </trans-unit>
        <trans-unit id="8a8537178dfddc00d50ddb0a6252813875dd7155" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitError()</source>
          <target state="translated">TypeVisitor.visitError()</target>
        </trans-unit>
        <trans-unit id="070e9ab5efeeabd2e8d10c4cdc8ea67203380085" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitExecutable()</source>
          <target state="translated">TypeVisitor.visitExecutable()</target>
        </trans-unit>
        <trans-unit id="ee46cfd1d5521db0f52a433b792445f0409700f1" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitIntersection()</source>
          <target state="translated">TypeVisitor.visitIntersection()</target>
        </trans-unit>
        <trans-unit id="b79b61306db2c372ca0510717ee2e084d2f6ab32" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitNoType()</source>
          <target state="translated">TypeVisitor.visitNoType()</target>
        </trans-unit>
        <trans-unit id="c81264a6e7c64a90524036038ec07a7a439645c4" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitNull()</source>
          <target state="translated">TypeVisitor.visitNull()</target>
        </trans-unit>
        <trans-unit id="a15341fd876101cd6711165b1632a0811cee3a20" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitPrimitive()</source>
          <target state="translated">TypeVisitor.visitPrimitive()</target>
        </trans-unit>
        <trans-unit id="1dc019ede96c158711b7f14a6ccbcb92cd4cb275" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitTypeVariable()</source>
          <target state="translated">TypeVisitor.visitTypeVariable()</target>
        </trans-unit>
        <trans-unit id="99a4d3d3c10f041a4c35d7a26f873cfeac49e5ae" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitUnion()</source>
          <target state="translated">TypeVisitor.visitUnion()</target>
        </trans-unit>
        <trans-unit id="e62d0fa3a69f58b973d8f3152d55fcb4d81ba713" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitUnknown()</source>
          <target state="translated">TypeVisitor.visitUnknown()</target>
        </trans-unit>
        <trans-unit id="fd6b2cd0c518cc165b4f8f66612f31456baa0149" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitWildcard()</source>
          <target state="translated">TypeVisitor.visitWildcard()</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="d004e1e4b2a9feed4ab7038a839438ad26b2fdee" translate="yes" xml:space="preserve">
          <source>Types and hierarchies of packages comprising a &lt;span id=&quot;Javalanguagemodel&quot;&gt;Java language model&lt;/span&gt;, a model of the declarations and types of the Java programming language. The members of this package and its subpackages are for use in language modeling and language processing tasks and APIs including, but not limited to, the &lt;a href=&quot;../../annotation/processing/package-summary&quot;&gt;annotation processing&lt;/a&gt; framework.</source>
          <target state="translated">&lt;span id=&quot;Javalanguagemodel&quot;&gt;Java 언어 모델&lt;/span&gt; , Java 프로그래밍 언어의 선언 및 유형 모델 &lt;span id=&quot;Javalanguagemodel&quot;&gt;로&lt;/span&gt; 구성된 패키지의 유형 및 계층 구조입니다 . 이 패키지 및 하위 패키지의 구성원은 &lt;a href=&quot;../../annotation/processing/package-summary&quot;&gt;주석 처리&lt;/a&gt; 프레임 워크 를 포함하되 이에 국한되지 않는 언어 모델링 및 언어 처리 작업 및 API에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="20840bd724900976291e2e1d19395680bf2ce1e5" translate="yes" xml:space="preserve">
          <source>Types and hierarchies of packages comprising a Java language model, a model of the declarations and types of the Java programming language.</source>
          <target state="translated">Java 언어 모델, Java 프로그래밍 언어의 선언 및 유형 모델로 구성된 패키지의 유형 및 계층 구조.</target>
        </trans-unit>
        <trans-unit id="000dafb254d0e804a33aa2922c4e5a5cb70aef05" translate="yes" xml:space="preserve">
          <source>Types of &lt;a href=&quot;memorypoolmxbean&quot;&gt;&lt;code&gt;memory pools&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;memorypoolmxbean&quot;&gt; &lt;code&gt;memory pools&lt;/code&gt; &lt;/a&gt; 종류 .</target>
        </trans-unit>
        <trans-unit id="3acfbb386d055f0ad6c6a635a2fc6270536ecd13" translate="yes" xml:space="preserve">
          <source>Types of bootstrap methods</source>
          <target state="translated">부트 스트랩 방법의 유형</target>
        </trans-unit>
        <trans-unit id="418a4179b6ddeec6a531a348f7b4974385430d62" translate="yes" xml:space="preserve">
          <source>Types should be compared using the utility methods in &lt;a href=&quot;../util/types&quot;&gt;&lt;code&gt;Types&lt;/code&gt;&lt;/a&gt;. There is no guarantee that any particular type will always be represented by the same object.</source>
          <target state="translated">유형의 유틸리티 방법을 사용하여 비교해야합니다 &lt;a href=&quot;../util/types&quot;&gt; &lt;code&gt;Types&lt;/code&gt; &lt;/a&gt; . 특정 유형이 항상 동일한 객체로 표현된다는 보장은 없습니다.</target>
        </trans-unit>
        <trans-unit id="8220da2395cbfc761a19f5ca198c14679339c682" translate="yes" xml:space="preserve">
          <source>Types.asElement()</source>
          <target state="translated">Types.asElement()</target>
        </trans-unit>
        <trans-unit id="db52ef7f7c75252d3808023cc21bb5abf4bd3ee1" translate="yes" xml:space="preserve">
          <source>Types.asMemberOf()</source>
          <target state="translated">Types.asMemberOf()</target>
        </trans-unit>
        <trans-unit id="17e90de4ae399d6e6bb2f6d195302e439560b448" translate="yes" xml:space="preserve">
          <source>Types.boxedClass()</source>
          <target state="translated">Types.boxedClass()</target>
        </trans-unit>
        <trans-unit id="a98adefefd3f0a12bd2b8a5a2b42d54383902a60" translate="yes" xml:space="preserve">
          <source>Types.capture()</source>
          <target state="translated">Types.capture()</target>
        </trans-unit>
        <trans-unit id="8a7e05a41446973611bd347a8f958db745c41342" translate="yes" xml:space="preserve">
          <source>Types.contains()</source>
          <target state="translated">Types.contains()</target>
        </trans-unit>
        <trans-unit id="d6165ccf668177971997e9ec543238a1834a737a" translate="yes" xml:space="preserve">
          <source>Types.directSupertypes()</source>
          <target state="translated">Types.directSupertypes()</target>
        </trans-unit>
        <trans-unit id="57eaddf0baaecc7cfda1ccacce29deacddabd942" translate="yes" xml:space="preserve">
          <source>Types.erasure()</source>
          <target state="translated">Types.erasure()</target>
        </trans-unit>
        <trans-unit id="18707c83c605fac0d25fd1e0c6b603f48c79bf1a" translate="yes" xml:space="preserve">
          <source>Types.getArrayType()</source>
          <target state="translated">Types.getArrayType()</target>
        </trans-unit>
        <trans-unit id="d150e05f8c46d06a1ed28723bda2a56ff359a1d1" translate="yes" xml:space="preserve">
          <source>Types.getDeclaredType()</source>
          <target state="translated">Types.getDeclaredType()</target>
        </trans-unit>
        <trans-unit id="1a6b0cb731c5c2681831057524e2944c3daf1d4a" translate="yes" xml:space="preserve">
          <source>Types.getNoType()</source>
          <target state="translated">Types.getNoType()</target>
        </trans-unit>
        <trans-unit id="7fffda90e7c9be2459e97b02cf86bebd69e620d2" translate="yes" xml:space="preserve">
          <source>Types.getNullType()</source>
          <target state="translated">Types.getNullType()</target>
        </trans-unit>
        <trans-unit id="165368d1d4affa266ad19e5d6ec1fb0a3b87b788" translate="yes" xml:space="preserve">
          <source>Types.getPrimitiveType()</source>
          <target state="translated">Types.getPrimitiveType()</target>
        </trans-unit>
        <trans-unit id="db0d4ada18bb9ba24f46124427704fd1849ffb3f" translate="yes" xml:space="preserve">
          <source>Types.getWildcardType()</source>
          <target state="translated">Types.getWildcardType()</target>
        </trans-unit>
        <trans-unit id="69b739efe9dae818854f6e591c6b3802740397c0" translate="yes" xml:space="preserve">
          <source>Types.isAssignable()</source>
          <target state="translated">Types.isAssignable()</target>
        </trans-unit>
        <trans-unit id="9b4006a927e8e1a8767f9c70bd27b86ce8ca03a8" translate="yes" xml:space="preserve">
          <source>Types.isSameType()</source>
          <target state="translated">Types.isSameType()</target>
        </trans-unit>
        <trans-unit id="75fe72db59db66cd0b499e600304400aac8ed891" translate="yes" xml:space="preserve">
          <source>Types.isSubsignature()</source>
          <target state="translated">Types.isSubsignature()</target>
        </trans-unit>
        <trans-unit id="321dcd6539aaa7bcea5e1210c364a6e8185a5a0c" translate="yes" xml:space="preserve">
          <source>Types.isSubtype()</source>
          <target state="translated">Types.isSubtype()</target>
        </trans-unit>
        <trans-unit id="3087fe2df77509ff542e831fb9ce0a8c0dd03340" translate="yes" xml:space="preserve">
          <source>Types.unboxedType()</source>
          <target state="translated">Types.unboxedType()</target>
        </trans-unit>
        <trans-unit id="5070c31b23373b6b71399f14819893c424722db5" translate="yes" xml:space="preserve">
          <source>Typesafe enumeration for an HTML tag.</source>
          <target state="translated">HTML 태그에 대한 형식이 안전한 열거입니다.</target>
        </trans-unit>
        <trans-unit id="5c18ebd5b89259c2ef7467807003692d1c7b1997" translate="yes" xml:space="preserve">
          <source>Typesafe enumeration for an HTML tag. Although the set of HTML tags is a closed set, we have left the set open so that people can add their own tag types to their custom parser and still communicate to the reader.</source>
          <target state="translated">HTML 태그에 대한 형식이 안전한 열거입니다. HTML 태그 세트는 닫힌 세트이지만 사람들이 사용자 정의 파서에 자신의 태그 유형을 추가하고 독자와 통신 할 수 있도록 세트를 열어 두었습니다.</target>
        </trans-unit>
        <trans-unit id="f9c14fcf11cec686c23544b61ae8e945b8987811" translate="yes" xml:space="preserve">
          <source>Typesafe enumeration for byte orders</source>
          <target state="translated">바이트 순서의 형태 보증 된 열거</target>
        </trans-unit>
        <trans-unit id="90d6e038cc2348ec9ea9c7964cb915d6af9b512f" translate="yes" xml:space="preserve">
          <source>Typesafe enumeration representing an HTML attribute.</source>
          <target state="translated">HTML 속성을 나타내는 Typesafe 열거입니다.</target>
        </trans-unit>
        <trans-unit id="318ac366c231a84014a3fcd2405ee25e46686356" translate="yes" xml:space="preserve">
          <source>Typical IPv6 values would be 128 (::1/128) or 10 (fe80::203:baff:fe27:1243/10)</source>
          <target state="translated">일반적인 IPv6 값은 128 (:: 1/128) 또는 10 (fe80 :: 203 : baff : fe27 : 1243/10)입니다.</target>
        </trans-unit>
        <trans-unit id="408a8910f401eef2d04111a0e4f9e18ae7c515fc" translate="yes" xml:space="preserve">
          <source>Typical Swing applications do processing in response to an event generated from a user gesture. For example, clicking on a &lt;code&gt;JButton&lt;/code&gt; notifies all &lt;code&gt;ActionListeners&lt;/code&gt; added to the &lt;code&gt;JButton&lt;/code&gt;. As all events generated from a user gesture are dispatched on the event dispatching thread, most developers are not impacted by the restriction.</source>
          <target state="translated">일반적인 Swing 애플리케이션은 사용자 제스처에서 생성 된 이벤트에 응답하여 처리합니다. 예를 들어, 클릭 &lt;code&gt;JButton&lt;/code&gt; 모든 통지 &lt;code&gt;ActionListeners&lt;/code&gt; 받는 추가 &lt;code&gt;JButton&lt;/code&gt; . 사용자 제스처에서 생성 된 모든 이벤트가 이벤트 디스패치 스레드에서 디스패치되기 때문에 대부분의 개발자는 제한의 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="069f410a31514fbf132278cac286b5140b1f9b9b" translate="yes" xml:space="preserve">
          <source>Typical callers of &lt;code&gt;SecureRandom&lt;/code&gt; invoke the following methods to retrieve random bytes:</source>
          <target state="translated">&lt;code&gt;SecureRandom&lt;/code&gt; 의 일반적인 호출자는 다음 메서드를 호출하여 임의의 바이트를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="1b366285be7b47faacd4c4f7eadf81503801a02d" translate="yes" xml:space="preserve">
          <source>Typical callers of SecureRandom invoke the following methods to retrieve random bytes:</source>
          <target state="translated">SecureRandom의 일반적인 호출자는 다음 방법을 호출하여 임의 바이트를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="745acda069b7dd6df062268fa4a9fbf083c6b5c1" translate="yes" xml:space="preserve">
          <source>Typical causes include not being able to map a string class name to a Class object, not being able to resolve a string method name, or specifying a method name that has the wrong type signature for its intended use.</source>
          <target state="translated">일반적인 원인으로는 문자열 클래스 이름을 클래스 객체에 매핑 할 수 없거나 문자열 메서드 이름을 확인할 수 없거나 의도 한 용도에 대해 잘못된 형식 서명이있는 메서드 이름을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d09f9193879e5b47f46ee5ca152f3019da4bf67" translate="yes" xml:space="preserve">
          <source>Typical clients of this class first set up the syntax tables and then sit in a loop calling nextToken to parse successive tokens until TT_EOF is returned.</source>
          <target state="translated">이 클래스의 일반적인 클라이언트는 먼저 구문 테이블을 설정 한 다음 nextToken을 호출하는 루프에 앉아 TT_EOF가 리턴 될 때까지 연속 토큰을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="2ecae194561833029542c22333813db0b374a9fc" translate="yes" xml:space="preserve">
          <source>Typical return values might include &lt;code&gt;InputStream.class&lt;/code&gt; or &lt;code&gt;URL.class&lt;/code&gt;, but any class may be used.</source>
          <target state="translated">일반적인 반환 값에는 &lt;code&gt;InputStream.class&lt;/code&gt; 또는 &lt;code&gt;URL.class&lt;/code&gt; 가 포함될 수 있지만 모든 클래스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3617e7faa01f94a7aa656c678fe2abcdc4c6f0d4" translate="yes" xml:space="preserve">
          <source>Typical return values might include &lt;code&gt;OutputStream.class&lt;/code&gt; or &lt;code&gt;File.class&lt;/code&gt;, but any class may be used.</source>
          <target state="translated">일반적인 반환 값에는 &lt;code&gt;OutputStream.class&lt;/code&gt; 또는 &lt;code&gt;File.class&lt;/code&gt; 가 포함될 수 있지만 모든 클래스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5923579a2f763bc4a1cbed46ea28e073e3a0b38" translate="yes" xml:space="preserve">
          <source>Typical usage is something like this:</source>
          <target state="translated">일반적인 사용법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="51cbca273bef572c4de516645906d6baa6d6cb8e" translate="yes" xml:space="preserve">
          <source>Typical usage would be for presentation to a user for selection of a particular family name. An application can then specify this name when creating a font, in conjunction with a style, such as bold or italic, giving the font system flexibility in choosing its own best match among multiple fonts in the same font family.</source>
          <target state="translated">일반적인 용도는 특정 성을 선택하기 위해 사용자에게 표시하는 것입니다. 그런 다음 응용 프로그램은 글꼴을 만들 때 굵게 또는 기울임 꼴과 같은 스타일과 함께이 이름을 지정할 수 있으므로 글꼴 시스템은 동일한 글꼴 군의 여러 글꼴 중에서 가장 잘 일치하는 글꼴을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="692c6ce74ab5a39f646b5b2b823bae5efe92dcea" translate="yes" xml:space="preserve">
          <source>Typical ways to request a KeyStore object include relying on the default type and providing a specific keystore type.</source>
          <target state="translated">KeyStore 객체를 요청하는 일반적인 방법은 기본 유형에 의존하고 특정 키 저장소 유형을 제공하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d961e55701c1de53cd0f2ff081f21b19397de4a4" translate="yes" xml:space="preserve">
          <source>Typical ways to request a KeyStore object include specifying an existing keystore file, relying on the default type and providing a specific keystore type.</source>
          <target state="translated">KeyStore 객체를 요청하는 일반적인 방법에는 기존 키 저장소 파일을 지정하고 기본 유형에 의존하고 특정 키 저장소 유형을 제공하는 것이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="721b8c16db5dc0f9c361e43e504f2b76855d14fe" translate="yes" xml:space="preserve">
          <source>Typically INFO messages will be written to the console or its equivalent. So the INFO level should only be used for reasonably significant messages that will make sense to end users and system administrators. This level is initialized to &lt;code&gt;800&lt;/code&gt;.</source>
          <target state="translated">일반적으로 INFO 메시지는 콘솔 또는 이와 동등한 것으로 작성됩니다. 따라서 INFO 수준은 최종 사용자와 시스템 관리자에게 의미가있는 합리적으로 중요한 메시지에만 사용해야합니다. 이 수준은 &lt;code&gt;800&lt;/code&gt; 으로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="9fc4eb90219c169f9add22cc101b8b40520e419a" translate="yes" xml:space="preserve">
          <source>Typically an edit is killed when it is consolidated by another edit's &lt;code&gt;addEdit&lt;/code&gt; or &lt;code&gt;replaceEdit&lt;/code&gt; method, or when it is dequeued from an &lt;code&gt;UndoManager&lt;/code&gt;.</source>
          <target state="translated">일반적으로 편집은 다른 편집의 &lt;code&gt;addEdit&lt;/code&gt; 또는 &lt;code&gt;replaceEdit&lt;/code&gt; 메서드에 의해 통합 되거나 &lt;code&gt;UndoManager&lt;/code&gt; 에서 대기열에서 제외 될 때 종료됩니다 .</target>
        </trans-unit>
        <trans-unit id="ecd2d77fc88fa9db518f0ce9afc83ea4d704d76c" translate="yes" xml:space="preserve">
          <source>Typically characters correspond to one char, but in certain languages this is not the case. The mask is on a per character basis, and will thus adjust to fit as many chars as are needed.</source>
          <target state="translated">일반적으로 문자는 하나의 문자에 해당하지만 특정 언어에서는 그렇지 않습니다. 마스크는 문자 단위이므로 필요한만큼 많은 문자에 맞게 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="2734d91430975e9303efb7386525c21798b51d92" translate="yes" xml:space="preserve">
          <source>Typically each logging Handler will have a Formatter associated with it. The Formatter takes a LogRecord and converts it to a string.</source>
          <target state="translated">일반적으로 각 로깅 핸들러에는 연관된 포매터가 있습니다. 포맷터는 LogRecord를 가져 와서 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="e1e682834d18cf8f30fd9a3ed95c08b1f63f37ab" translate="yes" xml:space="preserve">
          <source>Typically the integer values are related to the floating point values in such a way that the integer 0 is equated to the floating point value 0.0 and the integer 2^&lt;em&gt;n&lt;/em&gt;-1 (where &lt;em&gt;n&lt;/em&gt; is the number of bits in the representation) is equated to 1.0. For 8-bit representations, this means that 0x00 represents 0.0 and 0xff represents 1.0.</source>
          <target state="translated">일반적으로 정수 값은 정수 0이 부동 소수점 값 0.0과 같고 정수 2 ^ &lt;em&gt;n&lt;/em&gt; -1 ( &lt;em&gt;n&lt;/em&gt; 은 표현의 비트 수)이 다음과 같은 방식으로 부동 소수점 값 과 관련됩니다. 1.0. 8 비트 표현의 경우 이는 0x00이 0.0을 나타내고 0xff가 1.0을 나타냄을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="dcfb0d2563482618c96dbe72cc919b03a2b95aee" translate="yes" xml:space="preserve">
          <source>Typically the packer engine is used by application developers to deploy or host JAR files on a website. The unpacker engine is used by deployment applications to transform the byte-stream back to JAR format.</source>
          <target state="translated">일반적으로 패커 엔진은 응용 프로그램 개발자가 웹 사이트에 JAR 파일을 배포하거나 호스팅하는 데 사용됩니다. 언 패커 엔진은 배포 응용 프로그램에서 바이트 스트림을 다시 JAR 형식으로 변환하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f5a4cad2b44eee93ff8dc13b9a02e9632765378e" translate="yes" xml:space="preserve">
          <source>Typically the receiver is already in the queue of a &lt;code&gt;UndoManager&lt;/code&gt; (or other &lt;code&gt;UndoableEditListener&lt;/code&gt;), and is being given a chance to incorporate &lt;code&gt;anEdit&lt;/code&gt; rather than letting it be added to the queue in turn.</source>
          <target state="translated">일반적으로 수신자는 이미 &lt;code&gt;UndoManager&lt;/code&gt; (또는 다른 &lt;code&gt;UndoableEditListener&lt;/code&gt; ) 의 큐에 있으며, 차례로 큐에 추가하는 대신 &lt;code&gt;anEdit&lt;/code&gt; 를 통합 할 기회가 주어집니다 .</target>
        </trans-unit>
        <trans-unit id="7988f75a4b590c999ac4f38cb8abbc11bb913533" translate="yes" xml:space="preserve">
          <source>Typically there will be only one document structure, but the interface supports building an arbitrary number of structural projections over the text data. The document can have multiple root elements to support multiple document structures. Some examples might be:</source>
          <target state="translated">일반적으로 문서 구조는 하나만 있지만 인터페이스는 텍스트 데이터에 대해 임의의 수의 구조적 투영 작성을 지원합니다. 문서에는 여러 문서 구조를 지원하기 위해 여러 루트 요소가있을 수 있습니다. 몇 가지 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0eab352af6f44c80747bf79aa2d064c4f2be1fac" translate="yes" xml:space="preserve">
          <source>Typically this method is called from the &lt;a href=&quot;../../../../java.base/java/lang/classloader#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;stop&lt;/code&gt;, to consult loaders that appear before it in the &lt;code&gt;ClassLoaderRepository&lt;/code&gt;. By stopping the search as soon as &lt;code&gt;stop&lt;/code&gt; is reached, a potential deadlock with concurrent class loading is avoided.</source>
          <target state="translated">일반적으로이 메서드는 &lt;code&gt;stop&lt;/code&gt; 의 &lt;a href=&quot;../../../../java.base/java/lang/classloader#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt; 메서드 에서 호출되어 &lt;code&gt;ClassLoaderRepository&lt;/code&gt; 에서 그 앞에 나타나는 로더를 참조합니다 . &lt;code&gt;stop&lt;/code&gt; 에 도달 하자마자 검색을 중지하면 동시 클래스로드로 인한 잠재적 교착 상태가 방지됩니다.</target>
        </trans-unit>
        <trans-unit id="f20b6994432dd69c94ae0272a5ae9e15094084bb" translate="yes" xml:space="preserve">
          <source>Typically this method is called from the &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;stop&lt;/code&gt;, to consult loaders that appear before it in the &lt;code&gt;ClassLoaderRepository&lt;/code&gt;. By stopping the search as soon as &lt;code&gt;stop&lt;/code&gt; is reached, a potential deadlock with concurrent class loading is avoided.</source>
          <target state="translated">일반적으로이 메소드는 &lt;code&gt;stop&lt;/code&gt; 의 &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt; 메소드 에서 호출되어 &lt;code&gt;ClassLoaderRepository&lt;/code&gt; 에서 이전에 나타나는 로더를 참조합니다 . &lt;code&gt;stop&lt;/code&gt; 에 도달 하자마자 검색을 중지하면 동시 클래스 로딩으로 인한 교착 상태를 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78f345a13b14c644324d7d9ab36f024a8381a97d" translate="yes" xml:space="preserve">
          <source>Typically this method will be called by &lt;code&gt;dispatchEvent&lt;/code&gt; if no other KeyEventDispatcher in the dispatcher chain dispatched the KeyEvent, or if no other KeyEventDispatchers are registered.</source>
          <target state="translated">일반적으로이 방법에 의해 호출 될 &lt;code&gt;dispatchEvent&lt;/code&gt; 에 다른 된 KeyEventDispatchers가 등록되지 않은 경우 디스패처 체인의 KeyEventDispatcher가 다른 KeyEvent를 디스패치하지 않았던 경우, 또는.</target>
        </trans-unit>
        <trans-unit id="8da5e27c7754bb71a4ffb6c45646fb187b30c086" translate="yes" xml:space="preserve">
          <source>Typically this method will be called by &lt;code&gt;dispatchEvent&lt;/code&gt; if no other KeyEventDispatcher in the dispatcher chain dispatched the KeyEvent, or if no other KeyEventDispatchers are registered. If an implementation of this method returns &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;dispatchEvent&lt;/code&gt; may try to dispatch the KeyEvent itself, or may simply return &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt; is returned, &lt;code&gt;dispatchEvent&lt;/code&gt; should return &lt;code&gt;true&lt;/code&gt; as well.</source>
          <target state="translated">일반적으로이 방법에 의해 호출 될 &lt;code&gt;dispatchEvent&lt;/code&gt; 에 다른 된 KeyEventDispatchers가 등록되지 않은 경우 디스패처 체인의 KeyEventDispatcher가 다른 KeyEvent를 디스패치하지 않았던 경우, 또는. 이 방법 반환의 구현 경우 &lt;code&gt;false&lt;/code&gt; , &lt;code&gt;dispatchEvent&lt;/code&gt; KeyEvent에 자체를 발송하려고 할 수 있습니다, 또는 단순히 반환 할 수 있습니다 &lt;code&gt;false&lt;/code&gt; . 경우 &lt;code&gt;true&lt;/code&gt; 반환되고, &lt;code&gt;dispatchEvent&lt;/code&gt; 반환해야 &lt;code&gt;true&lt;/code&gt; 아니라.</target>
        </trans-unit>
        <trans-unit id="a50a8bfe222ed54c9c2a578417aca0e0faf56f2a" translate="yes" xml:space="preserve">
          <source>Typically this method would be overridden to wrap the editor with a container with a custom border, since one can't assume that the editors border can be set directly.</source>
          <target state="translated">일반적으로이 메서드는 편집기 테두리를 직접 설정할 수 있다고 가정 할 수 없기 때문에 사용자 지정 테두리가있는 컨테이너로 편집기를 래핑하도록 재정의됩니다.</target>
        </trans-unit>
        <trans-unit id="83b6304495a8e4db5fdb893ce345f76b60aa0b11" translate="yes" xml:space="preserve">
          <source>Typically this property is a &lt;code&gt;Date&lt;/code&gt; however it's possible to use &lt;code&gt;Comparable&lt;/code&gt; with a &lt;code&gt;compareTo&lt;/code&gt; method for &lt;code&gt;Date&lt;/code&gt;s. See &lt;code&gt;setStart&lt;/code&gt; for an example.</source>
          <target state="translated">일반적으로이 속성은입니다 &lt;code&gt;Date&lt;/code&gt; 는 사용 가능하지만 &lt;code&gt;Comparable&lt;/code&gt; 를 로모그래퍼 &lt;code&gt;compareTo&lt;/code&gt; 위한 방법 &lt;code&gt;Date&lt;/code&gt; 의. 예제는 &lt;code&gt;setStart&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a56bf7ae2a0c57781c295d01a98f13413413a4da" translate="yes" xml:space="preserve">
          <source>Typically this property is a &lt;code&gt;Date&lt;/code&gt; however it's possible to use a &lt;code&gt;Comparable&lt;/code&gt; with a &lt;code&gt;compareTo&lt;/code&gt; method for Dates. For example &lt;code&gt;start&lt;/code&gt; might be an instance of a class like this:</source>
          <target state="translated">일반적으로이 속성은 &lt;code&gt;Date&lt;/code&gt; 이지만 날짜 에 대해 &lt;code&gt;compareTo&lt;/code&gt; 메서드 와 함께 &lt;code&gt;Comparable&lt;/code&gt; 을 사용할 수 있습니다 . 예를 들어 &lt;code&gt;start&lt;/code&gt; 는 다음과 같은 클래스의 인스턴스 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93fa5ccfb67abd92170958d30d3e11f8d980e7a1" translate="yes" xml:space="preserve">
          <source>Typically this property is a &lt;code&gt;Number&lt;/code&gt; of the same type as the &lt;code&gt;value&lt;/code&gt; however it's possible to use any &lt;code&gt;Comparable&lt;/code&gt; with a &lt;code&gt;compareTo&lt;/code&gt; method for a &lt;code&gt;Number&lt;/code&gt; with the same type as the value. For example if value was a &lt;code&gt;Long&lt;/code&gt;, &lt;code&gt;minimum&lt;/code&gt; might be a Date subclass defined like this:</source>
          <target state="translated">일반적으로이 속성은이다 &lt;code&gt;Number&lt;/code&gt; 는 AS 동일한 타입의 &lt;code&gt;value&lt;/code&gt; 은 임의의 사용 가능하지만 &lt;code&gt;Comparable&lt;/code&gt; 로모그래퍼 &lt;code&gt;compareTo&lt;/code&gt; A의 방법 &lt;code&gt;Number&lt;/code&gt; 값과 같은 유형이. 예를 들어 값이 &lt;code&gt;Long&lt;/code&gt; 이면 &lt;code&gt;minimum&lt;/code&gt; 은 다음과 같이 정의 된 Date 하위 클래스 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b171c04f6765bc5afd13e583b7669c3c7617a2bf" translate="yes" xml:space="preserve">
          <source>Typically this property is a &lt;code&gt;Number&lt;/code&gt; of the same type as the &lt;code&gt;value&lt;/code&gt; however it's possible to use any &lt;code&gt;Comparable&lt;/code&gt; with a &lt;code&gt;compareTo&lt;/code&gt; method for a &lt;code&gt;Number&lt;/code&gt; with the same type as the value. See &lt;a href=&quot;#setMinimum(java.lang.Comparable)&quot;&gt;&lt;code&gt;setMinimum(Comparable)&lt;/code&gt;&lt;/a&gt; for an example.</source>
          <target state="translated">일반적으로이 속성은이다 &lt;code&gt;Number&lt;/code&gt; 는 AS 동일한 타입의 &lt;code&gt;value&lt;/code&gt; 은 임의의 사용 가능하지만 &lt;code&gt;Comparable&lt;/code&gt; 로모그래퍼 &lt;code&gt;compareTo&lt;/code&gt; A의 방법 &lt;code&gt;Number&lt;/code&gt; 값과 같은 유형이. 예제는 &lt;a href=&quot;#setMinimum(java.lang.Comparable)&quot;&gt; &lt;code&gt;setMinimum(Comparable)&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a0ae6e1c0caa53230a3bceb9425d1aab42b1e7e" translate="yes" xml:space="preserve">
          <source>Typically this stream corresponds to display output or another output destination specified by the host environment or user. By convention, this output stream is used to display error messages or other information that should come to the immediate attention of a user even if the principal output stream, the value of the variable &lt;code&gt;out&lt;/code&gt;, has been redirected to a file or other destination that is typically not continuously monitored.</source>
          <target state="translated">일반적으로이 스트림은 디스플레이 출력 또는 호스트 환경이나 사용자가 지정한 다른 출력 대상에 해당합니다. 일반적으로이 출력 스트림은 변수 &lt;code&gt;out&lt;/code&gt; 값인 기본 출력 스트림 이 파일 또는 다른 대상으로 경로 재 지정된 경우에도 사용자에게 즉시주의를 기울여야하는 오류 메시지 또는 기타 정보를 표시하는 데 사용됩니다. 일반적으로 지속적으로 모니터링되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="003f8d1f6f4dc10d08d4844a18a991aed53f0781" translate="yes" xml:space="preserve">
          <source>Typically you shouldn't use &lt;code&gt;DateFormatSymbols&lt;/code&gt; directly. Rather, you are encouraged to create a date-time formatter with the &lt;code&gt;DateFormat&lt;/code&gt; class's factory methods: &lt;code&gt;getTimeInstance&lt;/code&gt;, &lt;code&gt;getDateInstance&lt;/code&gt;, or &lt;code&gt;getDateTimeInstance&lt;/code&gt;. These methods automatically create a &lt;code&gt;DateFormatSymbols&lt;/code&gt; for the formatter so that you don't have to. After the formatter is created, you may modify its format pattern using the &lt;code&gt;setPattern&lt;/code&gt; method. For more information about creating formatters using &lt;code&gt;DateFormat&lt;/code&gt;'s factory methods, see &lt;a href=&quot;dateformat&quot;&gt;&lt;code&gt;DateFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">일반적으로 &lt;code&gt;DateFormatSymbols&lt;/code&gt; 를 직접 사용해서는 안됩니다 . 대신 &lt;code&gt;DateFormat&lt;/code&gt; 클래스의 팩토리 메소드 ( &lt;code&gt;getTimeInstance&lt;/code&gt; , &lt;code&gt;getDateInstance&lt;/code&gt; 또는 &lt;code&gt;getDateTimeInstance&lt;/code&gt; ) 를 사용하여 날짜-시간 포맷터를 작성하는 것이 좋습니다 . 이러한 메소드 는 포맷터에 대한 &lt;code&gt;DateFormatSymbols&lt;/code&gt; 를 자동으로 작성 하므로 필요하지 않습니다. 포맷터가 작성된 후 &lt;code&gt;setPattern&lt;/code&gt; 메소드를 사용하여 포맷 패턴을 수정할 수 있습니다 . 사용 포매터 만드는 방법에 대한 자세한 내용은 &lt;code&gt;DateFormat&lt;/code&gt; 의 의 팩토리 메소드를 참조 &lt;a href=&quot;dateformat&quot;&gt; &lt;code&gt;DateFormat&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="121e94298a66156863123ae4de4ded2129f1599c" translate="yes" xml:space="preserve">
          <source>Typically, &lt;code&gt;ctl&lt;/code&gt; is a &quot;basic&quot; control containing BER encoded data. The factory is used to create a specialized control implementation, usually by decoding the BER encoded data, that provides methods to access that data in a type-safe and friendly manner.</source>
          <target state="translated">일반적으로 &lt;code&gt;ctl&lt;/code&gt; 은 BER 인코딩 데이터를 포함하는 &quot;기본&quot;컨트롤입니다. 팩토리는 일반적으로 BER 인코딩 된 데이터를 디코딩하여 특수한 제어 구현을 작성하는 데 사용됩니다.이 데이터는 형식 안전하고 친숙한 방식으로 해당 데이터에 액세스하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="20888d9b86f3ad34616ed3db36154cddbf12ba40" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;code&gt;CertStoreParameters&lt;/code&gt; object is passed as a parameter to one of the &lt;a href=&quot;certstore#getInstance(java.lang.String,java.security.cert.CertStoreParameters)&quot;&gt;&lt;code&gt;CertStore.getInstance&lt;/code&gt;&lt;/a&gt; methods. The &lt;code&gt;getInstance&lt;/code&gt; method returns a &lt;code&gt;CertStore&lt;/code&gt; that is used for retrieving &lt;code&gt;Certificate&lt;/code&gt;s and &lt;code&gt;CRL&lt;/code&gt;s. The &lt;code&gt;CertStore&lt;/code&gt; that is returned is initialized with the specified parameters. The type of parameters needed may vary between different types of &lt;code&gt;CertStore&lt;/code&gt;s.</source>
          <target state="translated">일반적으로 &lt;code&gt;CertStoreParameters&lt;/code&gt; 오브젝트는 &lt;a href=&quot;certstore#getInstance(java.lang.String,java.security.cert.CertStoreParameters)&quot;&gt; &lt;code&gt;CertStore.getInstance&lt;/code&gt; &lt;/a&gt; 메소드 중 하나에 매개 변수로 전달됩니다 . &lt;code&gt;getInstance&lt;/code&gt; 메소드는 반환 &lt;code&gt;CertStore&lt;/code&gt; 를 검색하는 데 사용되는 &lt;code&gt;Certificate&lt;/code&gt; 의와 &lt;code&gt;CRL&lt;/code&gt; 들. 리턴 된 &lt;code&gt;CertStore&lt;/code&gt; 는 지정된 매개 변수로 초기화됩니다. 필요한 매개 변수 유형은 &lt;code&gt;CertStore&lt;/code&gt; 유형에 따라 다를 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0f8148a3227c5af2f0ea63a8ae87fdb6a21d07f4" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;code&gt;CertStoreParameters&lt;/code&gt; object is passed as a parameter to one of the &lt;a href=&quot;certstore#getInstance-java.lang.String-java.security.cert.CertStoreParameters-&quot;&gt;&lt;code&gt;CertStore.getInstance&lt;/code&gt;&lt;/a&gt; methods. The &lt;code&gt;getInstance&lt;/code&gt; method returns a &lt;code&gt;CertStore&lt;/code&gt; that is used for retrieving &lt;code&gt;Certificate&lt;/code&gt;s and &lt;code&gt;CRL&lt;/code&gt;s. The &lt;code&gt;CertStore&lt;/code&gt; that is returned is initialized with the specified parameters. The type of parameters needed may vary between different types of &lt;code&gt;CertStore&lt;/code&gt;s.</source>
          <target state="translated">일반적으로 &lt;code&gt;CertStoreParameters&lt;/code&gt; 객체는 &lt;a href=&quot;certstore#getInstance-java.lang.String-java.security.cert.CertStoreParameters-&quot;&gt; &lt;code&gt;CertStore.getInstance&lt;/code&gt; &lt;/a&gt; 메소드 중 하나에 매개 변수로 전달됩니다 . &lt;code&gt;getInstance&lt;/code&gt; 메소드는 반환 &lt;code&gt;CertStore&lt;/code&gt; 를 검색하는 데 사용되는 &lt;code&gt;Certificate&lt;/code&gt; 의와 &lt;code&gt;CRL&lt;/code&gt; 들. 리턴 된 &lt;code&gt;CertStore&lt;/code&gt; 는 지정된 매개 변수로 초기화됩니다. 필요한 매개 변수 유형은 &lt;code&gt;CertStore&lt;/code&gt; 유형에 따라 다를 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3e169845123b9e0749c9de5dc20d1916a7bd81ce" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;code&gt;Color&lt;/code&gt; or &lt;code&gt;ColorModel&lt;/code&gt; would be associated with an ICC Profile which is either an input, display, or output profile (see the ICC specification). There are other types of ICC Profiles, e.g. abstract profiles, device link profiles, and named color profiles, which do not contain information appropriate for representing the color space of a color, image, or device (see &lt;code&gt;ICC_Profile&lt;/code&gt;). Attempting to create an &lt;code&gt;ICC_ColorSpace&lt;/code&gt; object from an inappropriate ICC Profile is an error.</source>
          <target state="translated">일반적으로 &lt;code&gt;Color&lt;/code&gt; 또는 &lt;code&gt;ColorModel&lt;/code&gt; 은 입력, 디스플레이 또는 출력 프로필 인 ICC 프로필과 연결됩니다 (ICC 사양 참조). 다른 유형의 ICC 프로파일 (예 : 추상 프로파일, 장치 링크 프로파일 및 명명 된 색상 프로파일)이 있습니다.이 프로파일에는 색상, 이미지 또는 장치의 색상 공간을 나타내는 데 적합한 정보가 포함되어 있지 않습니다 ( &lt;code&gt;ICC_Profile&lt;/code&gt; 참조 ). 부적절한 ICC 프로필에서 &lt;code&gt;ICC_ColorSpace&lt;/code&gt; 개체 를 만들려고 하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0e263966e00e1bea9563954e017ba4e7d3bc9611" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;code&gt;CompletionService&lt;/code&gt; relies on a separate &lt;a href=&quot;executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; to actually execute the tasks, in which case the &lt;code&gt;CompletionService&lt;/code&gt; only manages an internal completion queue. The &lt;a href=&quot;executorcompletionservice&quot;&gt;&lt;code&gt;ExecutorCompletionService&lt;/code&gt;&lt;/a&gt; class provides an implementation of this approach.</source>
          <target state="translated">일반적으로 &lt;code&gt;CompletionService&lt;/code&gt; 는 별도의 &lt;a href=&quot;executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt; 를 사용하여 실제로 작업을 실행합니다.이 경우 &lt;code&gt;CompletionService&lt;/code&gt; 는 내부 완료 대기열 만 관리합니다. &lt;a href=&quot;executorcompletionservice&quot;&gt; &lt;code&gt;ExecutorCompletionService&lt;/code&gt; 의&lt;/a&gt; 클래스는이 방법의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0dd7758f6369a4aa3f9fa4c5cdd3dcff3e015ac5" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;code&gt;SQLData&lt;/code&gt; implementation will define a field for each attribute of an SQL structured type or a single field for an SQL &lt;code&gt;DISTINCT&lt;/code&gt; type. When the UDT is retrieved from a data source with the &lt;code&gt;ResultSet.getObject&lt;/code&gt; method, it will be mapped as an instance of this class. A programmer can operate on this class instance just as on any other object in the Java programming language and then store any changes made to it by calling the &lt;code&gt;PreparedStatement.setObject&lt;/code&gt; method, which will map it back to the SQL type.</source>
          <target state="translated">일반적으로 &lt;code&gt;SQLData&lt;/code&gt; 구현은 SQL 구조화 된 유형의 각 속성에 대한 필드 또는 SQL &lt;code&gt;DISTINCT&lt;/code&gt; 유형에 대한 단일 필드를 정의합니다 . &lt;code&gt;ResultSet.getObject&lt;/code&gt; 메서드 를 사용하여 데이터 소스에서 UDT를 검색하면 이 클래스의 인스턴스로 매핑됩니다. 프로그래머는 Java 프로그래밍 언어의 다른 객체에서와 마찬가지로이 클래스 인스턴스에서 작업 한 다음 SQL 유형에 다시 매핑되는 &lt;code&gt;PreparedStatement.setObject&lt;/code&gt; 메서드 를 호출하여 변경 사항을 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb93e535bc8b198c639f0c88b3fd6f72457ed5c8" translate="yes" xml:space="preserve">
          <source>Typically, a Color or ColorModel would be associated with an ICC Profile which is either an input, display, or output profile (see the ICC specification). There are other types of ICC Profiles, e.g. abstract profiles, device link profiles, and named color profiles, which do not contain information appropriate for representing the color space of a color, image, or device (see ICC_Profile). Attempting to create an ICC_ColorSpace object from an inappropriate ICC Profile is an error.</source>
          <target state="translated">일반적으로 Color 또는 ColorModel은 입력, 디스플레이 또는 출력 프로필 인 ICC 프로필과 연결됩니다 (ICC 사양 참조). 다른 유형의 ICC 프로파일 (예 : 추상 프로파일, 장치 링크 프로파일 및 명명 된 색상 프로파일)이 있습니다.이 프로파일에는 색상, 이미지 또는 장치의 색상 공간을 나타내는 데 적합한 정보가 포함되어 있지 않습니다 (ICC_Profile 참조). 부적절한 ICC 프로필에서 ICC_ColorSpace 개체를 만들려고하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f0e810068a3e83f4fbccb129817a1c93bcdae442" translate="yes" xml:space="preserve">
          <source>Typically, a connector server has an address, represented by the class &lt;a href=&quot;jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt;. An address for the RMI Connector can look like this:</source>
          <target state="translated">일반적으로 커넥터 서버에는 &lt;a href=&quot;jmxserviceurl&quot;&gt; &lt;code&gt;JMXServiceURL&lt;/code&gt; &lt;/a&gt; 클래스로 표시되는 주소가 있습니다. RMI 커넥터의 주소는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3fa2f828613a1214e8113b1763d0e324471c0613" translate="yes" xml:space="preserve">
          <source>Typically, a connector server is associated with an MBean server either by registering it in that MBean server, or by supplying the MBean server as a parameter when creating the connector server.</source>
          <target state="translated">일반적으로 커넥터 서버는 해당 MBean 서버에 등록하거나 커넥터 서버를 작성할 때 MBean 서버를 매개 변수로 제공하여 MBean 서버와 연관됩니다.</target>
        </trans-unit>
        <trans-unit id="e54663e3058ecb0cc03e3e1f408c4e8f1ff6652d" translate="yes" xml:space="preserve">
          <source>Typically, a custom filter should check if a process-wide filter is configured and defer to it if so. For example,</source>
          <target state="translated">일반적으로 사용자 지정 필터는 프로세스 전체 필터가 구성되어 있는지 확인하고 구성되어있는 경우이를 연기해야합니다. 예를 들면</target>
        </trans-unit>
        <trans-unit id="542579665f67752cf18e601a907b6ec8914edc34" translate="yes" xml:space="preserve">
          <source>Typically, a custom filter should check if a system-wide filter is configured and defer to it if so. For example,</source>
          <target state="translated">일반적으로 사용자 지정 필터는 시스템 전체 필터가 구성되어 있는지 확인하고 구성되어있는 경우이를 연기해야합니다. 예를 들면</target>
        </trans-unit>
        <trans-unit id="dc97893cfa85101d7bf2cbcc6717bc6e85e4bf1a" translate="yes" xml:space="preserve">
          <source>Typically, a plug-in will implement this method using code such as &lt;code&gt;return new MyImageReader(this)&lt;/code&gt;.</source>
          <target state="translated">일반적으로 플러그인은 &lt;code&gt;return new MyImageReader(this)&lt;/code&gt; 와 같은 코드를 사용하여이 메소드를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="0fc9f7a92b1bed3cc8b20f055c7b0992147a8329" translate="yes" xml:space="preserve">
          <source>Typically, a plug-in will implement this method using code such as &lt;code&gt;return new MyImageWriter(this)&lt;/code&gt;.</source>
          <target state="translated">일반적으로 플러그인은 &lt;code&gt;return new MyImageWriter(this)&lt;/code&gt; 와 같은 코드를 사용하여이 메소드를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="7f504f63f77e35a4284f7c92acaee4012adbbe4a" translate="yes" xml:space="preserve">
          <source>Typically, as the position of the knob in the scrollbar changes a corresponding change is made to the position of the JViewport on the underlying view, changing the contents of the JViewport.</source>
          <target state="translated">일반적으로 스크롤바의 노브 위치가 변경되면 기본 뷰의 JViewport 위치가 변경되어 JViewport의 내용이 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="7179a1c3fb676702cf42d135adf1fe49a790acf8" translate="yes" xml:space="preserve">
          <source>Typically, fonts will not be transformed. Clients generally should call &lt;a href=&quot;#isTransformed()&quot;&gt;&lt;code&gt;isTransformed()&lt;/code&gt;&lt;/a&gt; first, and only call this method if &lt;code&gt;isTransformed&lt;/code&gt; returns true.</source>
          <target state="translated">일반적으로 글꼴은 변형되지 않습니다. 클라이언트는 일반적으로 &lt;a href=&quot;#isTransformed()&quot;&gt; &lt;code&gt;isTransformed()&lt;/code&gt; &lt;/a&gt; 먼저 호출해야하며 &lt;code&gt;isTransformed&lt;/code&gt; 가 true를 반환 하는 경우에만이 메서드를 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="b0224dfcf9383ee6b39590169eb90efd6f5f259c" translate="yes" xml:space="preserve">
          <source>Typically, if exactly one annotation of type</source>
          <target state="translated">일반적으로 정확히 하나의 주석 유형 인 경우</target>
        </trans-unit>
        <trans-unit id="380e42ac1d1901bf8f602caef507dd1612efd216" translate="yes" xml:space="preserve">
          <source>Typically, implementations of this method invoke &lt;code&gt;
 subscription.request&lt;/code&gt; to enable receiving items.</source>
          <target state="translated">일반적으로이 메서드의 구현은 &lt;code&gt; subscription.request&lt;/code&gt; 를 호출 하여 항목 수신을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="a6a383681a435974714032b99217be2e2c27fb31" translate="yes" xml:space="preserve">
          <source>Typically, instances of &lt;code&gt;FontRenderContext&lt;/code&gt; are obtained from a &lt;a href=&quot;../graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; object. A &lt;code&gt;FontRenderContext&lt;/code&gt; which is directly constructed will most likely not represent any actual graphics device, and may lead to unexpected or incorrect results.</source>
          <target state="translated">일반적으로 &lt;code&gt;FontRenderContext&lt;/code&gt; 의 인스턴스 는 &lt;a href=&quot;../graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt; 개체 에서 가져옵니다 . 직접 생성 된 &lt;code&gt;FontRenderContext&lt;/code&gt; 는 실제 그래픽 장치를 나타내지 않을 가능성이 높으며 예상치 못한 또는 잘못된 결과를 초래할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11a0281f2b8a35df21a0c083491659003cc47cf5" translate="yes" xml:space="preserve">
          <source>Typically, not all command-line options to the 'java' command are passed to the Java virtual machine. Thus, the returned input arguments may not include all command-line options.</source>
          <target state="translated">일반적으로 'java'명령에 대한 모든 명령 행 옵션이 Java 가상 머신으로 전달되는 것은 아닙니다. 따라서 반환 된 입력 인수에 모든 명령 줄 옵션이 포함되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c4b0fbcfb227505f9ff9bec714e31409af99584" translate="yes" xml:space="preserve">
          <source>Typically, only one of the notify high and notify low flags is set. The other threshold is used to provide a &lt;em&gt;hysteresis&lt;/em&gt; mechanism to avoid the repeated triggering of notifications when an attribute makes small oscillations around the threshold value.</source>
          <target state="translated">일반적으로 notify high 및 notify low 플래그 중 하나만 설정됩니다. 다른 임계 값은 속성이 임계 값 주위에서 작은 진동을 할 때 알림의 반복 트리거를 피하기 위해 &lt;em&gt;히스테리시스&lt;/em&gt; 메커니즘 을 제공하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="e885d36f5dfa3c386874c2a925756d4f5306e832" translate="yes" xml:space="preserve">
          <source>Typically, programmers do not create &lt;code&gt;FlightRecorderPermission&lt;/code&gt; objects directly. Instead the objects are created by the security policy code that is based on reading the security policy file.</source>
          <target state="translated">일반적으로 프로그래머는 &lt;code&gt;FlightRecorderPermission&lt;/code&gt; 개체를 직접 만들지 않습니다 . 대신 보안 정책 파일 읽기를 기반으로하는 보안 정책 코드에 의해 개체가 생성됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
