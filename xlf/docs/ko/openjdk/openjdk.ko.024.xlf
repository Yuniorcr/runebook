<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="8576c5a3fc4ecf47e4a0d11fd6e03315dba7c325" translate="yes" xml:space="preserve">
          <source>A non-horizontal whitespace character: &lt;code&gt;[^\h]&lt;/code&gt;</source>
          <target state="translated">수평이 아닌 공백 문자 : &lt;code&gt;[^\h]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d58c0f6e6b46f4925dee1a29c717b5cd776d604" translate="yes" xml:space="preserve">
          <source>A non-null &lt;code&gt;DirContext&lt;/code&gt; object for continuing the operation.</source>
          <target state="translated">작업을 계속하기위한 null 이외의 &lt;code&gt;DirContext&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="29be16e17e34f62bfdebf51ad0e122d23c628721" translate="yes" xml:space="preserve">
          <source>A non-null &lt;code&gt;LdapContext&lt;/code&gt; instance.</source>
          <target state="translated">널이 아닌 &lt;code&gt;LdapContext&lt;/code&gt; 인스턴스.</target>
        </trans-unit>
        <trans-unit id="a64ff7fe321a188f5c04bb6cdea604c663889254" translate="yes" xml:space="preserve">
          <source>A non-null Context object for continuing the operation.</source>
          <target state="translated">조작을 계속하기위한 null 이외의 Context 객체</target>
        </trans-unit>
        <trans-unit id="c1b55005a4d78a4f993dfd1b675db095e662505c" translate="yes" xml:space="preserve">
          <source>A non-null DirStateFactory.Result containing the object and attributes to be bound. If no state factory returns a non-null answer, the result will contain the object (&lt;code&gt;obj&lt;/code&gt;) itself with the original attributes.</source>
          <target state="translated">바인딩 할 개체와 특성을 포함하는 null이 아닌 DirStateFactory.Result. 상태 팩토리가 널이 아닌 응답을 리턴하지 않으면 결과는 원래 속성을 가진 오브젝트 ( &lt;code&gt;obj&lt;/code&gt; ) 자체를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="f705e9073287cf92793fe2b86b035e32a5be310b" translate="yes" xml:space="preserve">
          <source>A non-null array containing a IANA-registered SASL mechanism names.</source>
          <target state="translated">IANA 등록 SASL 메커니즘 이름을 포함하는 null이 아닌 배열입니다.</target>
        </trans-unit>
        <trans-unit id="a10e64472867840475c1ab4209b86ea2f64b0ad1" translate="yes" xml:space="preserve">
          <source>A non-null byte array containing the decoded bytes.</source>
          <target state="translated">디코딩 된 바이트를 포함하는 널이 아닌 바이트 배열.</target>
        </trans-unit>
        <trans-unit id="256fd2e37df2c810fe693bf60b371e4fae6dc77b" translate="yes" xml:space="preserve">
          <source>A non-null byte array containing the encoded bytes.</source>
          <target state="translated">인코딩 된 바이트를 포함하는 널이 아닌 바이트 배열.</target>
        </trans-unit>
        <trans-unit id="f52a76285fcf3e42442c6aa14b1b84b86a9555fd" translate="yes" xml:space="preserve">
          <source>A non-null copy of the attribute.</source>
          <target state="translated">속성의 null 이외의 카피</target>
        </trans-unit>
        <trans-unit id="c350742e8171824a76f2140a837bb27a02d36bfd" translate="yes" xml:space="preserve">
          <source>A non-null copy of this attribute set.</source>
          <target state="translated">이 속성 세트의 null 이외의 카피</target>
        </trans-unit>
        <trans-unit id="2834f16d4197dd5885969de3f6e1c06d9fe27c3e" translate="yes" xml:space="preserve">
          <source>A non-null copy of this composite name.</source>
          <target state="translated">이 컴퍼 짓 이름의 null 이외의 카피</target>
        </trans-unit>
        <trans-unit id="a28c689ba0a9cd3cad130669a4a31f8d6e1c8750" translate="yes" xml:space="preserve">
          <source>A non-null copy of this compound name.</source>
          <target state="translated">이 복합 명의 null 이외의 카피</target>
        </trans-unit>
        <trans-unit id="680d7ced3578bebfbe3b008f6d9acabd436bed7a" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of known factories for producing &lt;code&gt;SaslClient&lt;/code&gt;.</source>
          <target state="translated">하기위한 기존 공장의 null 이외의 열거 &lt;code&gt;SaslClient&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0931c1e3c651dc8eb96435df64758f9fd1218389" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of known factories for producing &lt;code&gt;SaslServer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SaslServer&lt;/code&gt; 생성을위한 알려진 팩토리의 널이 아닌 열거 .</target>
        </trans-unit>
        <trans-unit id="0d1e9cc0831144a125442fbc119f960b9a802adc" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the attribute's values. Each element of the enumeration is a possibly null Object. The object's class is the class of the attribute value. The element is null if the attribute's value is null. If the attribute has zero values, an empty enumeration is returned.</source>
          <target state="translated">속성 값의 null 이외의 열거 열거의 각 요소는 가능한 null 객체입니다. 객체의 클래스는 속성 값의 클래스입니다. 속성 값이 null 인 경우 요소는 null입니다. 속성 값이 0이면 빈 열거 형이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7363de214e3d6c461c5bb6736dc9ee64e081aa40" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the attributes in this attribute set. Each element of the enumeration is of class &lt;code&gt;Attribute&lt;/code&gt;. If attribute set has zero attributes, an empty enumeration is returned.</source>
          <target state="translated">이 속성 세트의 속성의 null 이외의 열거 열거의 각 요소는 &lt;code&gt;Attribute&lt;/code&gt; 클래스 입니다. 속성 집합에 속성이 0이면 빈 열거 형이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="afe8669ca17e96be8a453b66dfc469a28ebe6a0d" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the attributes' ids in this attribute set. Each element of the enumeration is of class String. If attribute set has zero attributes, an empty enumeration is returned.</source>
          <target state="translated">이 속성 세트에있는 속성의 ID가 null 이외의 열거입니다. 열거의 각 요소는 String 클래스입니다. 속성 집합에 속성이 0이면 빈 열거 형이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5f1cbc6763def1c45342a437b1a688c40133ab7a" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the components of this LDAP name. Each element of the enumeration is of class String.</source>
          <target state="translated">이 LDAP 명의 컴퍼넌트의 null 이외의 열거 열거의 각 요소는 String 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="ebf81c0a1c1c74ed4f4d400b71c358f46266c099" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the components of this composite name. Each element of the enumeration is of class String.</source>
          <target state="translated">이 컴퍼 짓 이름의 컴퍼넌트의 null 이외의 열거 열거의 각 요소는 String 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="2340ea0fb4f1270c0668eb4bfc3dc9c9cf277715" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the components of this compound name. Each element of the enumeration is of class String.</source>
          <target state="translated">이 컴퍼 짓 이름의 컴퍼넌트의 null 이외의 열거 열거의 각 요소는 String 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="8bfa2f9be14187c9f14ce39d8d833d7f1175f5dc" translate="yes" xml:space="preserve">
          <source>A non-null initial context factory.</source>
          <target state="translated">널이 아닌 초기 컨텍스트 팩토리.</target>
        </trans-unit>
        <trans-unit id="1e608221c5c5ea8c18e363465c0a5d025612f0d6" translate="yes" xml:space="preserve">
          <source>A non-null initial context object that implements the Context interface.</source>
          <target state="translated">컨텍스트 인터페이스를 구현하는 널이 아닌 초기 컨텍스트 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="37954dbe9bab921b1deb6369decc49588a641fb7" translate="yes" xml:space="preserve">
          <source>A non-null initial context.</source>
          <target state="translated">널이 아닌 초기 컨텍스트.</target>
        </trans-unit>
        <trans-unit id="4730b465f4124443538b5e1770c8811274893fee" translate="yes" xml:space="preserve">
          <source>A non-null new instance of an ObjectFactory.</source>
          <target state="translated">null 이외의 ObjectFactory의 새로운 인스턴스</target>
        </trans-unit>
        <trans-unit id="c59410b08adf864ea948e598b03f608227631233" translate="yes" xml:space="preserve">
          <source>A non-null object.</source>
          <target state="translated">null 이외의 객체</target>
        </trans-unit>
        <trans-unit id="1f31f2d546f056d9729de73a8c0cafbb3add9b69" translate="yes" xml:space="preserve">
          <source>A non-null parsed form of the name using the naming convention of this parser.</source>
          <target state="translated">이 구문 분석기의 이름 지정 규칙을 사용하여 널이 아닌 구문 분석 형식의 이름.</target>
        </trans-unit>
        <trans-unit id="a5e68f3dd8aaf605a6de850303de002c47d88269" translate="yes" xml:space="preserve">
          <source>A non-null string listing the contents of this attribute set.</source>
          <target state="translated">이 속성 세트의 내용을 나타내는 null 이외의 캐릭터 라인</target>
        </trans-unit>
        <trans-unit id="caf496ddea9cd135d401dcca1f2054b18dc2ecf2" translate="yes" xml:space="preserve">
          <source>A non-null string representation of this composite name.</source>
          <target state="translated">이 컴퍼 짓 이름의 null 이외의 캐릭터 라인 표현</target>
        </trans-unit>
        <trans-unit id="15ce034bc6811eedfe9b677a32692e3f0462b11c" translate="yes" xml:space="preserve">
          <source>A non-null string representation of this compound name.</source>
          <target state="translated">이 복합 명의 null 이외의 캐릭터 라인 표현</target>
        </trans-unit>
        <trans-unit id="08d28ae2c79b56daa709959f3d79d9d06c131b29" translate="yes" xml:space="preserve">
          <source>A non-null string representing the IANA-registered mechanism name.</source>
          <target state="translated">IANA 등록 메커니즘 이름을 나타내는 null이 아닌 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="78220fa45f4e95f9c02602526ce9d9ddf420ba59" translate="yes" xml:space="preserve">
          <source>A non-static method consumes an extra argument for the object on which the method is called.</source>
          <target state="translated">비 정적 메소드는 메소드가 호출 된 오브젝트에 대해 추가 인수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="fcf1b695e4b7e1236a6443caec6fe36bb0b9f17e" translate="yes" xml:space="preserve">
          <source>A non-vertical whitespace character: &lt;code&gt;[^\v]&lt;/code&gt;</source>
          <target state="translated">수직이 아닌 공백 문자 : &lt;code&gt;[^\v]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7d3d3ab514a35cbfee9f849f4b37cf780906329" translate="yes" xml:space="preserve">
          <source>A non-virtual method handle to a specific virtual method implementation can also be created. These do not perform virtual lookup based on receiver type. Such a method handle simulates the effect of an &lt;code&gt;invokespecial&lt;/code&gt; instruction to the same method.</source>
          <target state="translated">특정 가상 메소드 구현에 대한 비가 상 메소드 핸들도 작성할 수 있습니다. 수신자 유형에 따라 가상 검색을 수행하지 않습니다. 이러한 메소드 핸들은 &lt;code&gt;invokespecial&lt;/code&gt; 명령이 동일한 메소드에 미치는 영향을 시뮬레이션합니다 .</target>
        </trans-unit>
        <trans-unit id="490d23f83a66805dcb270127052997bab3cbcef3" translate="yes" xml:space="preserve">
          <source>A non-whitespace character: &lt;code&gt;[^\s]&lt;/code&gt;</source>
          <target state="translated">공백이 아닌 문자 : &lt;code&gt;[^\s]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71faa00612f3246b69dff10b33a7b4956ad1ded0" translate="yes" xml:space="preserve">
          <source>A non-word boundary</source>
          <target state="translated">단어가 아닌 경계</target>
        </trans-unit>
        <trans-unit id="5a3963613c4e2b85a2160538fa0a3ebf78d4cb53" translate="yes" xml:space="preserve">
          <source>A non-word character: &lt;code&gt;[^\w]&lt;/code&gt;</source>
          <target state="translated">단어가 아닌 문자 : &lt;code&gt;[^\w]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="27473e4260d3933f83b4103875121ed003b122d3" translate="yes" xml:space="preserve">
          <source>A nonzero value gives a time as the number of milliseconds since January 1, 1970, GMT. The object is fetched only if it has been modified more recently than that time.</source>
          <target state="translated">0이 아닌 값은 1970 년 1 월 1 일 GMT 이후의 시간을 밀리 초 단위로 제공합니다. 해당 시간보다 최근에 수정 된 경우에만 객체를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="bd0bbc8c17597d3479d33d00df124b35420e9bee" translate="yes" xml:space="preserve">
          <source>A normalized path will begin with one or more &lt;code&gt;&quot;..&quot;&lt;/code&gt; segments if there were insufficient non-&lt;code&gt;&quot;..&quot;&lt;/code&gt; segments preceding them to allow their removal. A normalized path will begin with a &lt;code&gt;&quot;.&quot;&lt;/code&gt; segment if one was inserted by step 3 above. Otherwise, a normalized path will not contain any &lt;code&gt;&quot;.&quot;&lt;/code&gt; or &lt;code&gt;&quot;..&quot;&lt;/code&gt; segments.</source>
          <target state="translated">비정규 화 된 &lt;code&gt;&quot;..&quot;&lt;/code&gt; 세그먼트 앞에 제거 할 수없는 세그먼트 가 충분하지 않은 경우 정규화 된 경로는 하나 이상의 &lt;code&gt;&quot;..&quot;&lt;/code&gt; 세그먼트로 시작합니다 . 정규화 된 경로는 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 로 시작합니다 . 위의 3 단계에서 삽입 한 경우 세그먼트. 그렇지 않으면 정규화 된 경로에 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 가 포함되지 않습니다 . 또는 &lt;code&gt;&quot;..&quot;&lt;/code&gt; 세그먼트.</target>
        </trans-unit>
        <trans-unit id="c3a10557374749dd3612c700569d8d4fbfff6337" translate="yes" xml:space="preserve">
          <source>A notification can be included in the result if its sequence number is no less than &lt;code&gt;clientSequenceNumber&lt;/code&gt; and this client has registered at least one listener for the MBean generating the notification, with a filter that accepts the notification. Each listener that is interested in the notification is identified by an Integer ID that was returned by &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt;&lt;code&gt;RMIConnection.addNotificationListeners(ObjectName[],
 MarshalledObject[], Subject[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">순서 번호가 &lt;code&gt;clientSequenceNumber&lt;/code&gt; 이상 이고이 클라이언트가 통지를 승인하는 필터와 함께 통지를 생성하는 MBean에 대해 하나 이상의 리스너를 등록한 경우 통지를 결과에 포함 할 수 있습니다 . 알림에 관심이있는 각 리스너는 &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt; &lt;code&gt;RMIConnection.addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt; 의해 리턴 된 정수 ID로 식별됩니다 .</target>
        </trans-unit>
        <trans-unit id="6f81cc48a1476843cb589c0a6edfffa3c877abc8" translate="yes" xml:space="preserve">
          <source>A notification can be included in the result if its sequence number is no less than &lt;code&gt;clientSequenceNumber&lt;/code&gt; and this client has registered at least one listener for the MBean generating the notification, with a filter that accepts the notification. Each listener that is interested in the notification is identified by an Integer ID that was returned by &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt;&lt;code&gt;addNotificationListeners(ObjectName[],
 MarshalledObject[], Subject[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">순서 번호가 &lt;code&gt;clientSequenceNumber&lt;/code&gt; 이상 이고이 클라이언트가 통지를 승인하는 필터와 함께 통지를 생성하는 MBean에 대해 하나 이상의 리스너를 등록한 경우 통지를 결과에 포함 할 수 있습니다 . 통지에 관심이있는 각 리스너는 &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt; &lt;code&gt;addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt; 의해 리턴 된 정수 ID로 식별됩니다 .</target>
        </trans-unit>
        <trans-unit id="eb2316273427642a12c2dde2fb02858156d5200b" translate="yes" xml:space="preserve">
          <source>A notification emitted by an MBean will be forwarded by the MBeanServer to the listener. If the source of the notification is a reference to an MBean object, the MBean server will replace it by that MBean's ObjectName. Otherwise the source is unchanged.</source>
          <target state="translated">MBean에 의해 발행 된 통지는 MBeanServer에 의해 리스너에게 전달됩니다. 통지의 소스가 MBean 객체에의 참조 인 경우, MBean 서버는 그것을 MBean의 ObjectName로 교체합니다. 그렇지 않으면 소스가 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9fbf4137e454e66ee8d25e83c4c38921d7f02cf7" translate="yes" xml:space="preserve">
          <source>A notification of a change in the Relation Service.</source>
          <target state="translated">관계 서비스 변경 알림</target>
        </trans-unit>
        <trans-unit id="74b1df702f3bc581785499dd02ae0b69bee54ca0" translate="yes" xml:space="preserve">
          <source>A notification of a change in the Relation Service. A RelationNotification notification is sent when a relation is created via the Relation Service, or an MBean is added as a relation in the Relation Service, or a role is updated in a relation, or a relation is removed from the Relation Service.</source>
          <target state="translated">관계 서비스 변경 알림 RelationNotification 알림은 관계 서비스를 통해 관계가 작성되거나 MBean이 관계 서비스에서 관계로 추가되거나 관계에서 역할이 업데이트되거나 관계 서비스에서 관계가 제거 될 때 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="43f0f3abe1ddd97507c9365666da42e829d29184" translate="yes" xml:space="preserve">
          <source>A number of &lt;code&gt;ShortMessage&lt;/code&gt; methods have integer parameters by which you specify a MIDI status or data byte. If you know the numeric value, you can express it directly. For system common and system real-time messages, you can often use the corresponding fields of &lt;code&gt;ShortMessage&lt;/code&gt;, such as &lt;a href=&quot;shortmessage#SYSTEM_RESET&quot;&gt;&lt;code&gt;SYSTEM_RESET&lt;/code&gt;&lt;/a&gt;. For channel messages, the upper four bits of the status byte are specified by a command value and the lower four bits are specified by a MIDI channel number. To convert incoming MIDI data bytes that are in the form of Java's signed bytes, you can use the &lt;a href=&quot;midimessage#integersVsBytes&quot;&gt;conversion code&lt;/a&gt; given in the &lt;code&gt;&lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class description.</source>
          <target state="translated">많은 &lt;code&gt;ShortMessage&lt;/code&gt; 메소드에는 MIDI 상태 또는 데이터 바이트를 지정하는 정수 매개 변수가 있습니다. 숫자 값을 알고 있으면 직접 표현할 수 있습니다. 시스템 공통 및 시스템 실시간 메시지의 경우 종종 &lt;a href=&quot;shortmessage#SYSTEM_RESET&quot;&gt; &lt;code&gt;SYSTEM_RESET&lt;/code&gt; &lt;/a&gt; 과 같은 해당 &lt;code&gt;ShortMessage&lt;/code&gt; 필드를 사용할 수 있습니다 . 채널 메시지의 경우 상태 바이트의 상위 4 비트는 명령 값으로 지정되고 하위 4 비트는 MIDI 채널 번호로 지정됩니다. Java의 부호있는 바이트 형식 인 수신 MIDI 데이터 바이트를 변환하려면 &lt;code&gt;&lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 클래스 설명에 제공된 &lt;a href=&quot;midimessage#integersVsBytes&quot;&gt;변환 코드를&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="88ef82d7a1acf5551302d1f421428c6310badc2a" translate="yes" xml:space="preserve">
          <source>A number of classes in the java.net package do provide for a much higher level of abstraction and allow for easy access to resources on the network. The classes are:</source>
          <target state="translated">java.net 패키지의 많은 클래스는 훨씬 더 높은 수준의 추상화를 제공하며 네트워크의 자원에 쉽게 액세스 할 수 있습니다. 수업은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="26a5315e56bbc0b1a41c272ad0788f786e5e99a8" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API containing the plug-in interfaces for readers, writers, transcoders, and streams, and a runtime registry.</source>
          <target state="translated">리더, 라이터, 트랜스 코더 및 스트림을위한 플러그인 인터페이스와 런타임 레지스트리를 포함하는 Java Image I / O API 패키지.</target>
        </trans-unit>
        <trans-unit id="3d1474ec8064f4048b349e060bd17d481f91abb7" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API dealing with low-level I/O from files and streams.</source>
          <target state="translated">파일 및 스트림의 저수준 I / O를 처리하는 Java Image I / O API 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="fcd25d02098be8fe912d200eda69fa86ba44c8a4" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API dealing with reading and writing metadata.</source>
          <target state="translated">메타 데이터 읽기 및 쓰기를 처리하는 Java Image I / O API 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="1e50c13e656800213a2b38221ce5d3c67a302d08" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API dealing with synchronous notification of events during the reading and writing of images.</source>
          <target state="translated">이미지를 읽고 쓰는 동안 이벤트의 동기 알림을 처리하는 Java Image I / O API 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="75aceaead5894b1564163cdca6dffc56df070c4d" translate="yes" xml:space="preserve">
          <source>A package.</source>
          <target state="translated">소포.</target>
        </trans-unit>
        <trans-unit id="9c561483e1216a136545d701b9a0c6a84ebc7b7e" translate="yes" xml:space="preserve">
          <source>A pair of channels that implements a unidirectional pipe.</source>
          <target state="translated">단방향 파이프를 구현하는 한 쌍의 채널.</target>
        </trans-unit>
        <trans-unit id="394c92f3379723469af1d8636c4eaf9565783905" translate="yes" xml:space="preserve">
          <source>A paragraph-separator character (&lt;code&gt;'\u2029&lt;/code&gt;).</source>
          <target state="translated">단락 구분 문자 ( &lt;code&gt;'\u2029&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="79368f8d53ce66ea9334edbe3b72f58f6e497a54" translate="yes" xml:space="preserve">
          <source>A parameter of a method or constructor.</source>
          <target state="translated">메소드 또는 생성자의 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="58b36826d2d44021fe02b6a2abe751fe9a54079c" translate="yes" xml:space="preserve">
          <source>A parameter of an exception handler.</source>
          <target state="translated">예외 처리기의 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="3585600fff66d07c254c460c9422920ddb647135" translate="yes" xml:space="preserve">
          <source>A parameter that contains a URI pointing to data intended for a PolicySpi or ConfigurationSpi implementation.</source>
          <target state="translated">PolicySpi 또는 ConfigurationSpi 구현 용 데이터를 가리키는 URI가 포함 된 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="d63cf425fcd35e454243a434211b0e6d1a9b20cd" translate="yes" xml:space="preserve">
          <source>A parameter's name is &quot;&quot;, or contains an illegal character</source>
          <target state="translated">매개 변수 이름이 &quot;&quot;이거나 잘못된 문자를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="a6e2c142abe93ec8b1941b8de767b406102f08b5" translate="yes" xml:space="preserve">
          <source>A parameterized type is created the first time it is needed by a reflective method, as specified in this package. When a parameterized type p is created, the generic type declaration that p instantiates is resolved, and all type arguments of p are created recursively. See &lt;a href=&quot;typevariable&quot;&gt;&lt;code&gt;TypeVariable&lt;/code&gt;&lt;/a&gt; for details on the creation process for type variables. Repeated creation of a parameterized type has no effect.</source>
          <target state="translated">매개 변수화 된 유형은이 패키지에 지정된 반사 방법으로 처음 필요할 때 작성됩니다. 매개 변수화 된 유형 p가 작성되면 p가 인스턴스화하는 일반 유형 선언이 해결되고 p의 모든 유형 인수가 재귀 적으로 작성됩니다. 유형 변수 생성 프로세스에 대한 자세한 내용 은 &lt;a href=&quot;typevariable&quot;&gt; &lt;code&gt;TypeVariable&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 . 매개 변수화 된 유형을 반복해서 작성해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="207968ed3b02650fd3f0f90772b619beb100c1b9" translate="yes" xml:space="preserve">
          <source>A parameters object for X509KeyManagers that encapsulates a List of KeyStore.Builders.</source>
          <target state="translated">KeyStore.Builders 목록을 캡슐화하는 X509KeyManagers의 parameters 객체입니다.</target>
        </trans-unit>
        <trans-unit id="725b605d7b96e538c4444b6cc65519d2a9564a59" translate="yes" xml:space="preserve">
          <source>A partially complete temporal is used to allow the chronology and zone to be queried. In general, only the chronology will be needed. Querying items other than the zone or chronology is undefined and must not be relied on. The behavior of other methods such as &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;getLong&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt; and &lt;code&gt;isSupported&lt;/code&gt; is unpredictable and the results undefined.</source>
          <target state="translated">연대기 및 영역을 쿼리 할 수 ​​있도록 부분적으로 완전한 시간이 사용됩니다. 일반적으로 연대기 만 필요합니다. 영역 또는 연대기 이외의 항목에 대한 쿼리는 정의되어 있지 않으며 의존해서는 안됩니다. &lt;code&gt;get&lt;/code&gt; , &lt;code&gt;getLong&lt;/code&gt; , &lt;code&gt;range&lt;/code&gt; 및 &lt;code&gt;isSupported&lt;/code&gt; 와 같은 다른 메소드의 동작 은 예측할 수 없으며 결과는 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="231fb54b3d3de5027a6b56f9c783ef40b879816a" translate="yes" xml:space="preserve">
          <source>A particular Java platform may support zero or more hierarchically-organized file systems. Each file system has a &lt;code&gt;root&lt;/code&gt; directory from which all other files in that file system can be reached. Windows platforms, for example, have a root directory for each active drive; UNIX platforms have a single root directory, namely &lt;code&gt;&quot;/&quot;&lt;/code&gt;. The set of available filesystem roots is affected by various system-level operations such as the insertion or ejection of removable media and the disconnecting or unmounting of physical or virtual disk drives.</source>
          <target state="translated">특정 Java 플랫폼은 0 개 이상의 계층 적으로 구성된 파일 시스템을 지원할 수 있습니다. 각 파일 시스템에는 해당 파일 시스템의 다른 모든 파일에 도달 할 수 있는 &lt;code&gt;root&lt;/code&gt; 디렉토리가 있습니다. 예를 들어, Windows 플랫폼에는 각 활성 드라이브에 대한 루트 디렉토리가 있습니다. UNIX 플랫폼에는 단일 루트 디렉토리 (예 : &lt;code&gt;&quot;/&quot;&lt;/code&gt; )가 있습니다. 사용 가능한 파일 시스템 루트 세트는 이동식 매체 삽입 또는 배출, 물리적 또는 가상 디스크 드라이브 연결 해제 또는 마운트 해제와 같은 다양한 시스템 레벨 작업의 영향을받습니다.</target>
        </trans-unit>
        <trans-unit id="71a0ac78cd9ceaa2a9fc0b0cb9d6019ef6ea7cf1" translate="yes" xml:space="preserve">
          <source>A password may be given to unlock the keystore (e.g. the keystore resides on a hardware token device), or to check the integrity of the keystore data. If a password is not given for integrity checking, then integrity checking is not performed.</source>
          <target state="translated">키 저장소를 잠금 해제하거나 (예 : 키 저장소가 하드웨어 토큰 장치에 상주 함) 키 저장소 데이터의 무결성을 확인하기 위해 비밀번호가 제공 될 수 있습니다. 무결성 검사를 위해 암호를 제공하지 않으면 무결성 검사가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b6843fa2f0f5e030f8851019b802cd205df0f080" translate="yes" xml:space="preserve">
          <source>A password-based implementation of &lt;code&gt;ProtectionParameter&lt;/code&gt;.</source>
          <target state="translated">암호 기반의 &lt;code&gt;ProtectionParameter&lt;/code&gt; 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="908320b79b8166bd80f9cebf314b01f668d00b9a" translate="yes" xml:space="preserve">
          <source>A path matcher that may be used to match paths against the pattern</source>
          <target state="translated">패턴과 경로를 일치시키는 데 사용될 수있는 경로 매처</target>
        </trans-unit>
        <trans-unit id="495e2a31b97782811793ec1239e0bd3fee0e7177" translate="yes" xml:space="preserve">
          <source>A pathname consisting of a single &quot;*&quot; indicates all the files in the current directory, while a pathname consisting of a single &quot;-&quot; indicates all the files in the current directory and (recursively) all files and subdirectories contained in the current directory.</source>
          <target state="translated">단일 &quot;*&quot;로 구성된 경로 이름은 현재 디렉토리의 모든 파일을 나타내고, 단일 &quot;-&quot;로 구성된 경로 이름은 현재 디렉토리의 모든 파일과 현재 디렉토리에 포함 된 모든 파일 및 하위 디렉토리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3ef23e9c497a7b25e957caaacc361e940805dd1a" translate="yes" xml:space="preserve">
          <source>A pathname containing an empty string represents an empty path.</source>
          <target state="translated">빈 문자열을 포함하는 경로 이름은 빈 경로를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="46eef1d82fd391592dc0d8c3e69cce9707760548" translate="yes" xml:space="preserve">
          <source>A pathname that ends in &quot;/*&quot; (where &quot;/&quot; is the file separator character, &lt;code&gt;File.separatorChar&lt;/code&gt;) indicates all the files and directories contained in that directory. A pathname that ends with &quot;/-&quot; indicates (recursively) all files and subdirectories contained in that directory. The special pathname &quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot; matches any file.</source>
          <target state="translated">&quot;/ *&quot;로 끝나는 경로 이름 (여기서 &quot;/&quot;는 파일 구분 문자 &lt;code&gt;File.separatorChar&lt;/code&gt; )은 해당 디렉토리에 포함 된 모든 파일과 디렉토리를 나타냅니다. &quot;/-&quot;로 끝나는 경로 이름은 해당 디렉토리에 포함 된 모든 파일과 하위 디렉토리를 (재귀 적으로) 나타냅니다. 특수 경로 이름 &quot;&amp;lt;&amp;lt; ALL FILES &amp;gt;&amp;gt;&quot;는 모든 파일과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="572f17ed8ee918ab0ba5d0eea653f440ba45e9f6" translate="yes" xml:space="preserve">
          <source>A pathname, whether abstract or in string form, may be either &lt;em&gt;absolute&lt;/em&gt; or &lt;em&gt;relative&lt;/em&gt;. An absolute pathname is complete in that no other information is required in order to locate the file that it denotes. A relative pathname, in contrast, must be interpreted in terms of information taken from some other pathname. By default the classes in the &lt;code&gt;java.io&lt;/code&gt; package always resolve relative pathnames against the current user directory. This directory is named by the system property &lt;code&gt;user.dir&lt;/code&gt;, and is typically the directory in which the Java virtual machine was invoked.</source>
          <target state="translated">추상이든 문자열이든 경로 이름은 &lt;em&gt;absolute&lt;/em&gt; 또는 &lt;em&gt;relative&lt;/em&gt; 일 수 있습니다 . 표시되는 파일을 찾기 위해 다른 정보가 필요하지 않으므로 절대 경로 이름이 완성됩니다. 반대로 상대 경로 이름은 다른 경로 이름에서 가져온 정보로 해석해야합니다. 기본적으로 &lt;code&gt;java.io&lt;/code&gt; 패키지 의 클래스는 항상 현재 사용자 디렉토리에 대한 상대 경로 이름을 분석합니다. 이 디렉토리는 시스템 특성 &lt;code&gt;user.dir&lt;/code&gt; 에 의해 이름이 지정되며 일반적으로 Java 가상 머신이 호출 된 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="885061eeba719408d460722e0592847141de0a81" translate="yes" xml:space="preserve">
          <source>A pattern consists of a string that includes the following special components that will be replaced at runtime:</source>
          <target state="translated">패턴은 런타임에 대체 될 다음과 같은 특수 구성 요소를 포함하는 문자열로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="877d121efe20f3c4d49a6cefb7ce0cdf6c5af580" translate="yes" xml:space="preserve">
          <source>A peer will signal its intent to close by sending its own closure handshake message. After this message has been received and processed by the local &lt;code&gt;SSLEngine&lt;/code&gt;'s &lt;code&gt;unwrap()&lt;/code&gt; call, the application can detect the close by calling &lt;code&gt;unwrap()&lt;/code&gt; and looking for a &lt;code&gt;SSLEngineResult&lt;/code&gt; with status &quot;CLOSED&quot;, or if &lt;a href=&quot;sslengine#isInboundDone--&quot;&gt;&lt;code&gt;isInboundDone()&lt;/code&gt;&lt;/a&gt; returns true. If for some reason the peer closes the communication link without sending the proper SSL/TLS closure message, the application can detect the end-of-stream and can signal the engine via &lt;a href=&quot;sslengine#closeInbound--&quot;&gt;&lt;code&gt;closeInbound()&lt;/code&gt;&lt;/a&gt; that there will no more inbound messages to process. Some applications might choose to require orderly shutdown messages from a peer, in which case they can check that the closure was generated by a handshake message and not by an end-of-stream condition.</source>
          <target state="translated">피어는 자체 폐쇄 핸드 셰이크 메시지를 보내 종료 의사를 알립니다. 이 메시지가 로컬에 의해 수신되어 처리 된 후 &lt;code&gt;SSLEngine&lt;/code&gt; 의 의 &lt;code&gt;unwrap()&lt;/code&gt; 호출 응용 프로그램이 호출 가까이 감지 할 수 &lt;code&gt;unwrap()&lt;/code&gt; A에 대한 찾고 &lt;code&gt;SSLEngineResult&lt;/code&gt; 의 상태 &quot;CLOSED&quot;을 경우, 또는 &lt;a href=&quot;sslengine#isInboundDone--&quot;&gt; &lt;code&gt;isInboundDone()&lt;/code&gt; &lt;/a&gt; true를 반환합니다. 어떤 이유로 피어가 적절한 SSL / TLS 클로저 메시지를 보내지 않고 통신 링크를 닫으면 응용 프로그램은 스트림 끝을 감지하고 &lt;a href=&quot;sslengine#closeInbound--&quot;&gt; &lt;code&gt;closeInbound()&lt;/code&gt; &lt;/a&gt; 를 통해 엔진에 신호를 보낼 수 있습니다더 이상 처리 할 인바운드 메시지가 없습니다. 일부 응용 프로그램은 피어에서 순서대로 종료 메시지를 요구할 수 있습니다.이 경우 스트림 종료 조건이 아니라 핸드 셰이크 메시지로 클로저가 생성되었는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="969bb0afd4cc1ecb553f172a9b57b2ef0c780de7" translate="yes" xml:space="preserve">
          <source>A permission that includes the &lt;code&gt;queryMBeans&lt;/code&gt; action is considered to include &lt;code&gt;queryNames&lt;/code&gt; as well.</source>
          <target state="translated">&lt;code&gt;queryMBeans&lt;/code&gt; 조치 를 포함하는 권한 은 &lt;code&gt;queryNames&lt;/code&gt; 도 포함하는 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="4a747ab8a03910b849e698f017fbb3fba8116a99" translate="yes" xml:space="preserve">
          <source>A persistence delegate is then looked up by the name composed of the the fully qualified name of the given type and the &quot;PersistenceDelegate&quot; postfix. For example, a persistence delegate for the &lt;code&gt;Bean&lt;/code&gt; class should be named &lt;code&gt;BeanPersistenceDelegate&lt;/code&gt; and located in the same package.</source>
          <target state="translated">그런 다음 지정된 유형의 정규화 된 이름과 &quot;PersistenceDelegate&quot;접미사로 구성된 이름으로 지속성 위임을 찾습니다. 예를 들어, &lt;code&gt;Bean&lt;/code&gt; 클래스 의 지속성 위임의 이름은 &lt;code&gt;BeanPersistenceDelegate&lt;/code&gt; 이며 동일한 패키지에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="06a66f678af1d95ca12f674489cbec8275ebe7ad" translate="yes" xml:space="preserve">
          <source>A persistence delegate, may take control of all aspects of the persistence of an object including:</source>
          <target state="translated">지속성 위임은 다음을 포함하여 객체 지속성의 모든 측면을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c10812bf1787199ce6eca01fbb20d15dd5f8ea49" translate="yes" xml:space="preserve">
          <source>A physical duration could be of infinite length. For practicality, the duration is stored with constraints similar to &lt;a href=&quot;instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt;. The duration uses nanosecond resolution with a maximum value of the seconds that can be held in a &lt;code&gt;long&lt;/code&gt;. This is greater than the current estimated age of the universe.</source>
          <target state="translated">물리적 지속 시간은 무한 길이 일 수 있습니다. 실제로는 기간이 &lt;a href=&quot;instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; &lt;/a&gt; 와 비슷한 제약 조건으로 저장됩니다 . 지속 시간은 &lt;code&gt;long&lt;/code&gt; 유지할 수있는 초의 최대 값으로 나노초 해상도를 사용합니다 . 이것은 현재 예상 우주 나이보다 큽니다.</target>
        </trans-unit>
        <trans-unit id="474cd8ad0927115718f8e3c65460d787fc470758" translate="yes" xml:space="preserve">
          <source>A pipe consists of a pair of channels: A writable &lt;a href=&quot;pipe.sinkchannel&quot;&gt;&lt;code&gt;sink&lt;/code&gt;&lt;/a&gt; channel and a readable &lt;a href=&quot;pipe.sourcechannel&quot;&gt;&lt;code&gt;source&lt;/code&gt;&lt;/a&gt; channel. Once some bytes are written to the sink channel they can be read from source channel in exactlyAthe order in which they were written.</source>
          <target state="translated">파이프는 쓰기 가능한 &lt;a href=&quot;pipe.sinkchannel&quot;&gt; &lt;code&gt;sink&lt;/code&gt; &lt;/a&gt; 채널과 읽을 수있는 &lt;a href=&quot;pipe.sourcechannel&quot;&gt; &lt;code&gt;source&lt;/code&gt; &lt;/a&gt; 채널 의 한 쌍의 채널로 구성됩니다 . 일부 바이트가 싱크 채널에 기록되면 소스 채널에서 작성된 순서대로 정확하게 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92f903dde552d28725344ada00e056a459750979" translate="yes" xml:space="preserve">
          <source>A piped input stream should be connected to a piped output stream; the piped input stream then provides whatever data bytes are written to the piped output stream.</source>
          <target state="translated">파이프 입력 스트림은 파이프 출력 스트림에 연결해야합니다. 파이프 된 입력 스트림은 파이프 된 출력 스트림에 기록되는 모든 데이터 바이트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3a7a8e42632b42753977c34a60b9299f0d427714" translate="yes" xml:space="preserve">
          <source>A piped input stream should be connected to a piped output stream; the piped input stream then provides whatever data bytes are written to the piped output stream. Typically, data is read from a &lt;code&gt;PipedInputStream&lt;/code&gt; object by one thread and data is written to the corresponding &lt;code&gt;PipedOutputStream&lt;/code&gt; by some other thread. Attempting to use both objects from a single thread is not recommended, as it may deadlock the thread. The piped input stream contains a buffer, decoupling read operations from write operations, within limits. A pipe is said to be &lt;a name=&quot;BROKEN&quot;&gt; &lt;i&gt;broken&lt;/i&gt; &lt;/a&gt; if a thread that was providing data bytes to the connected piped output stream is no longer alive.</source>
          <target state="translated">파이프 입력 스트림은 파이프 출력 스트림에 연결해야합니다. 파이프 된 입력 스트림은 파이프 된 출력 스트림에 기록되는 모든 데이터 바이트를 제공합니다. 일반적으로 데이터는 하나의 스레드에 의해 &lt;code&gt;PipedInputStream&lt;/code&gt; 객체 에서 읽히고 다른 스레드에 의해 해당 &lt;code&gt;PipedOutputStream&lt;/code&gt; 에 데이터가 기록됩니다 . 스레드를 교착 상태로 만들 수 있으므로 단일 스레드에서 두 개체를 모두 사용하지 않는 것이 좋습니다. 파이프 된 입력 스트림에는 쓰기 작업에서 읽기 작업을 분리하는 버퍼가 포함되어 있습니다. 연결된 파이프 출력 스트림에 데이터 바이트를 제공하는 스레드가 더 이상 존재하지 않으면 파이프가 &lt;a name=&quot;BROKEN&quot;&gt;&lt;i&gt;고장&lt;/i&gt;&lt;/a&gt; 났다고합니다. &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="cd38b92f37a0ada0b98eaec7dc581aa518272443" translate="yes" xml:space="preserve">
          <source>A piped output stream can be connected to a piped input stream to create a communications pipe.</source>
          <target state="translated">파이프 출력 스트림을 파이프 입력 스트림에 연결하여 통신 파이프를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34df202afec2bc7805e61d26ed892f959fd0e25d" translate="yes" xml:space="preserve">
          <source>A piped output stream can be connected to a piped input stream to create a communications pipe. The piped output stream is the sending end of the pipe. Typically, data is written to a &lt;code&gt;PipedOutputStream&lt;/code&gt; object by one thread and data is read from the connected &lt;code&gt;PipedInputStream&lt;/code&gt; by some other thread. Attempting to use both objects from a single thread is not recommended as it may deadlock the thread. The pipe is said to be &lt;a name=&quot;BROKEN&quot;&gt; &lt;i&gt;broken&lt;/i&gt; &lt;/a&gt; if a thread that was reading data bytes from the connected piped input stream is no longer alive.</source>
          <target state="translated">파이프 출력 스트림을 파이프 입력 스트림에 연결하여 통신 파이프를 만들 수 있습니다. 파이프 출력 스트림은 파이프의 전송 끝입니다. 일반적으로 데이터는 하나의 스레드에 의해 &lt;code&gt;PipedOutputStream&lt;/code&gt; 객체에 기록되고 다른 스레드에 의해 연결된 &lt;code&gt;PipedInputStream&lt;/code&gt; 에서 데이터를 읽습니다 . 스레드를 교착 상태로 만들 수 있으므로 단일 스레드에서 두 개체를 모두 사용하지 않는 것이 좋습니다. 연결된 파이프 입력 스트림에서 데이터 바이트를 읽는 스레드가 더 이상 존재하지 않으면 파이프가 &lt;a name=&quot;BROKEN&quot;&gt;&lt;i&gt;끊어 졌다고&lt;/i&gt;&lt;/a&gt; 합니다. &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="ef8f66f756ed31cd7f35ff8fc4b2aca2a5dba0b2" translate="yes" xml:space="preserve">
          <source>A place holder for any comments that the code generator may want to include in the generated code.</source>
          <target state="translated">코드 생성기가 생성 된 코드에 포함시키려는 주석에 대한 자리 표시 자입니다.</target>
        </trans-unit>
        <trans-unit id="aac89ff6b50355b8985ee22ca69704cd3ffe07e5" translate="yes" xml:space="preserve">
          <source>A platform MXBean is a</source>
          <target state="translated">플랫폼 MXBean은</target>
        </trans-unit>
        <trans-unit id="ae7baf93b58a02927f0c5ac6c93762b9d4eb05d5" translate="yes" xml:space="preserve">
          <source>A platform managed object is a &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt; for monitoring and managing a component in the Java platform.</source>
          <target state="translated">플랫폼 관리 객체는 Java 플랫폼에서 구성 요소를 모니터링하고 관리하기위한 &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8ac220ef46f8e70af4b6538f40d0a40b8ec9c7a3" translate="yes" xml:space="preserve">
          <source>A platform managed object is a &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt; for monitoring and managing a component in the Java platform. Each platform managed object has a unique &lt;a href=&quot;managementfactory#MXBean&quot;&gt;object name&lt;/a&gt; for the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;platform MBeanServer&lt;/a&gt; access. All platform MXBeans will implement this interface.</source>
          <target state="translated">플랫폼 관리 객체는 Java 플랫폼에서 구성 요소를 모니터링하고 관리하기위한 &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt; 입니다. 각 플랫폼 관리 객체에는 &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;플랫폼 MBeanServer&lt;/a&gt; 액세스를 위한 고유 한 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;객체 이름&lt;/a&gt; 이 있습니다. 모든 플랫폼 MXBeans가이 인터페이스를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="3f604f47af08bbf1b066c304748b624ec493c21d" translate="yes" xml:space="preserve">
          <source>A plug-in for a specific image format may define a subclass of this class, and return objects of that class from the &lt;code&gt;getDefaultWriteParam&lt;/code&gt; method of its &lt;code&gt;ImageWriter&lt;/code&gt; implementation. For example, the built-in JPEG writer plug-in will return instances of &lt;code&gt;javax.imageio.plugins.jpeg.JPEGImageWriteParam&lt;/code&gt;.</source>
          <target state="translated">특정 이미지 형식의 플러그인은이 클래스의 서브 클래스를 정의하고 해당 &lt;code&gt;ImageWriter&lt;/code&gt; 구현 의 &lt;code&gt;getDefaultWriteParam&lt;/code&gt; 메소드 에서 해당 클래스의 오브젝트를 리턴 할 수 있습니다. 예를 들어 내장 JPEG 작성기 플러그인은 &lt;code&gt;javax.imageio.plugins.jpeg.JPEGImageWriteParam&lt;/code&gt; 의 인스턴스를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="165a4c2f23d394915829e76b0aa46e76c935e20d" translate="yes" xml:space="preserve">
          <source>A pool of strings, initially empty, is maintained privately by the class &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">초기에 비어있는 문자열 풀은 &lt;code&gt;String&lt;/code&gt; 클래스에 의해 개인적으로 유지 보수됩니다 .</target>
        </trans-unit>
        <trans-unit id="b2b519b0588855194323e10504c01bce562add21" translate="yes" xml:space="preserve">
          <source>A pool that is no longer referenced in a program &lt;em&gt;AND&lt;/em&gt; has no remaining threads will be &lt;code&gt;shutdown&lt;/code&gt; automatically. If you would like to ensure that unreferenced pools are reclaimed even if users forget to call &lt;a href=&quot;threadpoolexecutor#shutdown--&quot;&gt;&lt;code&gt;shutdown()&lt;/code&gt;&lt;/a&gt;, then you must arrange that unused threads eventually die, by setting appropriate keep-alive times, using a lower bound of zero core threads and/or setting &lt;a href=&quot;threadpoolexecutor#allowCoreThreadTimeOut-boolean-&quot;&gt;&lt;code&gt;allowCoreThreadTimeOut(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">더 이상 프로그램에서 참조되지 않는 풀 &lt;em&gt;과&lt;/em&gt; 남아있는 스레드가 없을 것이 &lt;code&gt;shutdown&lt;/code&gt; 자동으로. 사용자가 &lt;a href=&quot;threadpoolexecutor#shutdown--&quot;&gt; &lt;code&gt;shutdown()&lt;/code&gt; &lt;/a&gt; 호출을 잊어 버린 경우에도 참조되지 않은 풀을 회수 하려면 0 코어 스레드 및 / 또는 하한을 사용하여 적절한 연결 유지 시간을 설정하여 사용하지 않는 스레드가 결국 종료 되도록해야합니다. 설정 &lt;a href=&quot;threadpoolexecutor#allowCoreThreadTimeOut-boolean-&quot;&gt; &lt;code&gt;allowCoreThreadTimeOut(boolean)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="00aa3f03debf8302deefd1c78bcc91a3181918cc" translate="yes" xml:space="preserve">
          <source>A port number of &lt;code&gt;-1&lt;/code&gt; indicates that the calling method is attempting to determine the IP address of the specified host name.</source>
          <target state="translated">포트 번호 &lt;code&gt;-1&lt;/code&gt; 은 호출 방법이 지정된 호스트 이름의 IP 주소를 판별하려고 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f80ddc74f8958b7e436c32feec5a751ce8a69e52" translate="yes" xml:space="preserve">
          <source>A port number of &lt;code&gt;0&lt;/code&gt; creates a socket on any free port.</source>
          <target state="translated">포트 번호 &lt;code&gt;0&lt;/code&gt; 은 사용 가능한 포트에 소켓을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e8b0b7e20e8e674dbd959f23bbf61c572c82ceaa" translate="yes" xml:space="preserve">
          <source>A position is a zero-based character offset from the beginning of a file. Negative values (except &lt;a href=&quot;diagnostic#NOPOS&quot;&gt;&lt;code&gt;NOPOS&lt;/code&gt;&lt;/a&gt;) are not valid positions.</source>
          <target state="translated">위치는 파일 시작부터 0부터 시작하는 문자 오프셋입니다. 음수 값 ( &lt;a href=&quot;diagnostic#NOPOS&quot;&gt; &lt;code&gt;NOPOS&lt;/code&gt; &lt;/a&gt; 제외 )은 유효한 위치가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="e6aaa4c5ca50c97ca7f61bd39daf4cf6ca61d72d" translate="yes" xml:space="preserve">
          <source>A positive value indicates that the cookie will expire after that many seconds have passed. Note that the value is the</source>
          <target state="translated">양수 값은 몇 초가 지난 후에 쿠키가 만료됨을 나타냅니다. 값은</target>
        </trans-unit>
        <trans-unit id="d2705dcae935877bd3fe557ef24f1985c8bb781a" translate="yes" xml:space="preserve">
          <source>A possibly null &lt;code&gt;SaslClient&lt;/code&gt; created using the parameters supplied. If null, cannot find a &lt;code&gt;SaslClientFactory&lt;/code&gt; that will produce one.</source>
          <target state="translated">제공된 매개 변수를 사용하여 생성 된 null &lt;code&gt;SaslClient&lt;/code&gt; null의 경우, 생성 하는 &lt;code&gt;SaslClientFactory&lt;/code&gt; 를 찾을 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="66f5e7d6cc182293efa2a5e37b7d7d480692c79f" translate="yes" xml:space="preserve">
          <source>A possibly null &lt;code&gt;SaslClient&lt;/code&gt; created using the parameters supplied. If null, this factory cannot produce a &lt;code&gt;SaslClient&lt;/code&gt; using the parameters supplied.</source>
          <target state="translated">제공된 매개 변수를 사용하여 생성 된 null &lt;code&gt;SaslClient&lt;/code&gt; null의 경우,이 팩토리는, 지정된 파라미터를 사용해 &lt;code&gt;SaslClient&lt;/code&gt; 를 생성 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="0b05743f60c3de6a64646f3c940516bebe032910" translate="yes" xml:space="preserve">
          <source>A possibly null &lt;code&gt;SaslServer&lt;/code&gt; created using the parameters supplied. If null, cannot find a &lt;code&gt;SaslServerFactory&lt;/code&gt; that will produce one.</source>
          <target state="translated">제공된 매개 변수를 사용하여 작성된 널 &lt;code&gt;SaslServer&lt;/code&gt; 입니다. null의 경우, 생성 하는 &lt;code&gt;SaslServerFactory&lt;/code&gt; 를 찾을 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="91226546474985c1813acbe9067ef1cb7e39da27" translate="yes" xml:space="preserve">
          <source>A possibly null &lt;code&gt;SaslServer&lt;/code&gt; created using the parameters supplied. If null, this factory cannot produce a &lt;code&gt;SaslServer&lt;/code&gt; using the parameters supplied.</source>
          <target state="translated">제공된 매개 변수를 사용하여 작성된 널 &lt;code&gt;SaslServer&lt;/code&gt; 입니다. null의 경우,이 팩토리는 제공된 파라미터를 사용해 &lt;code&gt;SaslServer&lt;/code&gt; 를 생성 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="1635e9f91cb5a2fc226360f1e119ac246ca5d453" translate="yes" xml:space="preserve">
          <source>A possibly null Control.</source>
          <target state="translated">null 가능성이있는 Control</target>
        </trans-unit>
        <trans-unit id="62cc797a2835818cc3df56acf7ab8b6325cb3231" translate="yes" xml:space="preserve">
          <source>A possibly null array of &lt;code&gt;Control&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;Control&lt;/code&gt; 개체 의 null 배열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3eaf96564ec411ef60ad1fd3b372e06ddcd7849e" translate="yes" xml:space="preserve">
          <source>A possibly null array of controls. If null, the previous method invoked on this context did not produce any controls.</source>
          <target state="translated">가능한 null 배열의 컨트롤 null의 경우,이 문맥으로 호출 된 이전의 메소드는 컨트롤을 생성하지 않았다</target>
        </trans-unit>
        <trans-unit id="10560282de64ca60d43ecb4532547224bfd08f41" translate="yes" xml:space="preserve">
          <source>A possibly null array of referrals, each of which is represented by a URL string. If null, no referral was sent by the server.</source>
          <target state="translated">null의 가능성이있는 참조 배열로, 각각은 URL 문자열로 표시됩니다. 널인 경우, 서버가 조회를 보내지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="548f5fe8a9ae8019a49683831f0b805ce09abf74" translate="yes" xml:space="preserve">
          <source>A possibly null byte array representing the ASN.1 BER encoded contents of the LDAP &lt;code&gt;ExtendedRequest.requestValue&lt;/code&gt; component.</source>
          <target state="translated">LDAP &lt;code&gt;ExtendedRequest.requestValue&lt;/code&gt; 구성 요소 의 ASN.1 BER 인코딩 컨텐츠를 나타내는 null 바이트 배열 입니다.</target>
        </trans-unit>
        <trans-unit id="92c9a272a4d931c152db068d54ac6953b393b197" translate="yes" xml:space="preserve">
          <source>A possibly null byte array representing the ASN.1 BER encoded contents of the LDAP &lt;code&gt;ExtendedResponse.response&lt;/code&gt; component.</source>
          <target state="translated">LDAP &lt;code&gt;ExtendedResponse.response&lt;/code&gt; 구성 요소 의 ASN.1 BER 인코딩 컨텐츠를 나타내는 null 바이트 배열 입니다.</target>
        </trans-unit>
        <trans-unit id="ff87ab073a8cd5077c343bb00b812a40971e003c" translate="yes" xml:space="preserve">
          <source>A possibly null byte array representing the ASN.1 BER encoded value of the LDAP control.</source>
          <target state="translated">LDAP 컨트롤의 ASN.1 BER 인코딩 값을 나타내는 null 바이트 배열입니다.</target>
        </trans-unit>
        <trans-unit id="3cb6aa987b78522dc1bd9466de9d784c88462a4d" translate="yes" xml:space="preserve">
          <source>A possibly null byte array representing the control's ASN.1 BER encoded value. It is not cloned - any changes to the returned value will affect the contents of the control.</source>
          <target state="translated">컨트롤의 ASN.1 BER 인코딩 값을 나타내는 null 바이트 배열입니다. 복제되지 않습니다. 반환 된 값을 변경하면 컨트롤의 내용에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="6f4c5a21811c6ddca2738adff04cd26dfcb12c23" translate="yes" xml:space="preserve">
          <source>A possibly null exception as constructed using information sent by the server. If null, a &quot;success&quot; status was indicated by the server.</source>
          <target state="translated">서버가 보낸 정보를 사용하여 생성 된 null 예외 일 수 있습니다. 널인 경우, &quot;성공&quot;상태가 서버에 의해 표시되었습니다.</target>
        </trans-unit>
        <trans-unit id="0f7fa00e800c3389f9a5a0fd2fa9263309a7211d" translate="yes" xml:space="preserve">
          <source>A possibly null object identifier string representing the LDAP &lt;code&gt;ExtendedResponse.responseName&lt;/code&gt; component.</source>
          <target state="translated">LDAP &lt;code&gt;ExtendedResponse.responseName&lt;/code&gt; 구성 요소를 나타내는 null 개체 식별자 문자열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f670ba264fb7faa8a1f0ec6bd95fc42234981c4c" translate="yes" xml:space="preserve">
          <source>A possibly null object representing one of the attribute's value. It is null if the attribute's value is null.</source>
          <target state="translated">속성 값 중 하나를 나타내는 null 개체 일 수 있습니다. 속성 값이 null 인 경우는 null</target>
        </trans-unit>
        <trans-unit id="75864d255d1129c4e9ba827299b5b1f56ddbef6d" translate="yes" xml:space="preserve">
          <source>A possibly null server-generated cookie. It is not cloned - any changes to the cookie will update the control's state and thus are not recommended.</source>
          <target state="translated">서버에서 생성 된 쿠키 일 수 있습니다. 쿠키는 복제되지 않습니다. 쿠키를 변경하면 컨트롤의 상태가 업데이트되므로 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d289ab04881c9cc6e50eeaa00f1d309da5a304b2" translate="yes" xml:space="preserve">
          <source>A possibly null string containing class name of object bound.</source>
          <target state="translated">객체 바운드의 클래스 이름을 포함하는 null 문자열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f338409feb2fbcb63d411bfd4c693f31bbca7bb3" translate="yes" xml:space="preserve">
          <source>A possibly-null array of controls. null means no connect controls have been set for this context.</source>
          <target state="translated">가능한 null 배열의 컨트롤. null은이 컨텍스트에 대해 연결 제어가 설정되지 않았 음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="7fa4b5a7bed1fba6b58d93ff7e5647f0aeb57e8f" translate="yes" xml:space="preserve">
          <source>A possibly-null array of controls. null means no request controls have been set for this context.</source>
          <target state="translated">가능한 null 배열의 컨트롤. null은이 컨텍스트에 요청 제어가 설정되지 않았 음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="2cd88c57d871d10e3857456422efd3a1926101bc" translate="yes" xml:space="preserve">
          <source>A printable area attribute's values are stored internally as integers in units of micrometers (&amp;micro;m), where 1 micrometer = 10&lt;sup&gt;-6&lt;/sup&gt; meter = 1/1000 millimeter = 1/25400 inch. This permits dimensions to be represented exactly to a precision of 1/1000 mm (= 1 &amp;micro;m) or 1/100 inch (= 254 &amp;micro;m). If fractional inches are expressed in negative powers of two, this permits dimensions to be represented exactly to a precision of 1/8 inch (= 3175 &amp;micro;m) but not 1/16 inch (because 1/16 inch does not equal an integral number of &amp;micro;m).</source>
          <target state="translated">인쇄 가능 영역 속성의 값은 1 마이크로 미터 = 10 &lt;sup&gt;-6&lt;/sup&gt; 미터 = 1/1000 밀리미터 = 1/25400 인치 인 마이크로 미터 (&amp;micro;m) 단위로 내부적으로 정수로 저장됩니다 . 따라서 치수를 1 / 1000mm (= 1&amp;micro;m) 또는 1/100 인치 (= 254&amp;micro;m)의 정밀도로 정확하게 표현할 수 있습니다. 분수 인치를 2의 음의 거듭 제곱으로 표현하면 치수가 1/8 인치 (= 3175 &amp;micro;m)의 정밀도로 정확하게 표현 될 수 있지만 1/16 인치는 아닙니다 (1/1 인치는 정수의 정수와 같지 않기 때문) &amp;micro;m).</target>
        </trans-unit>
        <trans-unit id="be66df4e815359ec0b5eef7a696fe6041abe763a" translate="yes" xml:space="preserve">
          <source>A printable character: &lt;code&gt;[\p{Graph}\p{Blank}&amp;amp;&amp;amp;[^\p{Cntrl}]]&lt;/code&gt;</source>
          <target state="translated">인쇄 가능한 문자 : &lt;code&gt;[\p{Graph}\p{Blank}&amp;amp;&amp;amp;[^\p{Cntrl}]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8c4ade06a319d7219ac2d5f3da9ef84eb8f62b6" translate="yes" xml:space="preserve">
          <source>A printable character: &lt;code&gt;[\p{Graph}\x20]&lt;/code&gt;</source>
          <target state="translated">인쇄 가능한 문자 : &lt;code&gt;[\p{Graph}\x20]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b011c8875e9789d560b27f5f5612aab64a93b938" translate="yes" xml:space="preserve">
          <source>A printing client application will typically not need to use all the printing attribute classes in package javax.print.attribute.standard, just the ones that pertain to the application.</source>
          <target state="translated">인쇄 클라이언트 응용 프로그램은 일반적으로 패키지 javax.print.attribute.standard의 모든 인쇄 속성 클래스를 사용할 필요는 없으며 응용 프로그램과 관련된 클래스 만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="662af875884ebefa284b1a1e34a6e15368a2d6e9" translate="yes" xml:space="preserve">
          <source>A priority queue is unbounded, but has an internal</source>
          <target state="translated">우선 순위 큐는 제한이 없지만 내부가 있습니다.</target>
        </trans-unit>
        <trans-unit id="381989bf2d570f7f1f4f7b1b95948985c86b2aae" translate="yes" xml:space="preserve">
          <source>A private key.</source>
          <target state="translated">개인 키.</target>
        </trans-unit>
        <trans-unit id="80cd6ff76b285191349b9609ddca29ae75c86455" translate="yes" xml:space="preserve">
          <source>A private key. The purpose of this interface is to group (and provide type safety for) all private key interfaces.</source>
          <target state="translated">개인 키. 이 인터페이스의 목적은 모든 개인 키 인터페이스를 그룹화 (및 유형 안전성을 제공)하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="18e6596f2d36107df44bd1e141716f0c3c917709" translate="yes" xml:space="preserve">
          <source>A problem with mapping &lt;em&gt;from&lt;/em&gt; Java types &lt;em&gt;to&lt;/em&gt; Open types is signaled with an &lt;a href=&quot;openmbean/opendataexception&quot;&gt;&lt;code&gt;OpenDataException&lt;/code&gt;&lt;/a&gt;. This can happen when an MXBean interface is being analyzed, for example if it references a type like &lt;a href=&quot;../../java/util/random&quot;&gt;&lt;code&gt;java.util.Random&lt;/code&gt;&lt;/a&gt; that has no getters. Or it can happen when an instance is being converted (a return value from a method in an MXBean or a parameter to a method in an MXBean proxy), for example when converting from &lt;code&gt;SortedSet&amp;lt;String&amp;gt;&lt;/code&gt; to &lt;code&gt;String[]&lt;/code&gt; if the &lt;code&gt;SortedSet&lt;/code&gt; has a non-null &lt;code&gt;Comparator&lt;/code&gt;.</source>
          <target state="translated">매핑 문제 &lt;em&gt;에서&lt;/em&gt; Java 유형 &lt;em&gt;에&lt;/em&gt; 열기 종류는 함께 신호입니다 &lt;a href=&quot;openmbean/opendataexception&quot;&gt; &lt;code&gt;OpenDataException&lt;/code&gt; 입니다&lt;/a&gt; . MXBean 인터페이스를 분석 할 때 (예 : getter가없는 &lt;a href=&quot;../../java/util/random&quot;&gt; &lt;code&gt;java.util.Random&lt;/code&gt; &lt;/a&gt; 과 같은 유형을 참조하는 경우) 발생할 수 있습니다. 변환 할 때, 인스턴스, 예를 들어 (MXBean에있는 방법 또는 MXBean의 프록시에있어서의 파라미터로부터의 리턴 값)로 변환 될 때 아니면 일어날 수 &lt;code&gt;SortedSet&amp;lt;String&amp;gt;&lt;/code&gt; 에 &lt;code&gt;String[]&lt;/code&gt; 경우 생성 &lt;code&gt;SortedSet&lt;/code&gt; A가 들어 널이 아닌 &lt;code&gt;Comparator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="608ca4427acb530ce5f60d17ee3ff5bf4f6bb7c2" translate="yes" xml:space="preserve">
          <source>A problem with mapping &lt;em&gt;to&lt;/em&gt; Java types &lt;em&gt;from&lt;/em&gt; Open types is signaled with an &lt;a href=&quot;../../java/io/invalidobjectexception&quot;&gt;&lt;code&gt;InvalidObjectException&lt;/code&gt;&lt;/a&gt;. This can happen when an MXBean interface is being analyzed, for example if it references a type that is not &lt;em&gt;reconstructible&lt;/em&gt; according to the rules above, in a context where a reconstructible type is required. Or it can happen when an instance is being converted (a parameter to a method in an MXBean or a return value from a method in an MXBean proxy), for example from a String to an Enum if there is no Enum constant with that name.</source>
          <target state="translated">매핑 문제 &lt;em&gt;에 대한&lt;/em&gt; Java 유형 &lt;em&gt;에서&lt;/em&gt; 열기 종류는 함께 신호입니다 &lt;a href=&quot;../../java/io/invalidobjectexception&quot;&gt; &lt;code&gt;InvalidObjectException&lt;/code&gt; 를&lt;/a&gt; . MXBean 인터페이스를 분석 할 때 (예 : 재구성 가능한 유형이 필요한 상황에서 위의 규칙에 따라 &lt;em&gt;재구성&lt;/em&gt; 할 수 없는 유형을 참조하는 경우) 발생할 수 있습니다. 또는 인스턴스가 변환 될 때 (MXBean의 메소드로 매개 변수 또는 MXBean 프록시의 메소드에서 리턴 값), 예를 들어 해당 이름의 Enum 상수가없는 경우 String에서 Enum으로 변환 될 때 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="863a7b5ff487b000efd9430f609d5071a7879a4c" translate="yes" xml:space="preserve">
          <source>A product specific name that this resource should be mapped to. The name of this resource, as defined by the &lt;code&gt;name&lt;/code&gt; element or defaulted, is a name that is local to the application component using the resource. (It's a name in the JNDI &lt;code&gt;java:comp/env&lt;/code&gt; namespace.) Many application servers provide a way to map these local names to names of resources known to the application server. This mapped name is often a</source>
          <target state="translated">이 자원이 맵핑되어야하는 제품 특정 이름. &lt;code&gt;name&lt;/code&gt; 요소에 의해 정의 되거나 기본값 으로 지정된이 자원의 이름은 자원 을 사용하는 응용 프로그램 구성 요소의 로컬 이름입니다. (JNDI &lt;code&gt;java:comp/env&lt;/code&gt; 네임 스페이스의 이름입니다.) 많은 애플리케이션 서버는 이러한 로컬 이름을 애플리케이션 서버에 알려진 자원의 이름에 맵핑하는 방법을 제공합니다. 이 매핑 된 이름은 종종</target>
        </trans-unit>
        <trans-unit id="8804679a0fee9a658ffe4f33c5d2ed6e2e4fd43d" translate="yes" xml:space="preserve">
          <source>A program element annotated @Deprecated is one that programmers are discouraged from using, typically because it is dangerous, or because a better alternative exists.</source>
          <target state="translated">@Deprecated로 주석이 달린 프로그램 요소는 프로그래머가 일반적으로 위험하거나 더 나은 대안이 있기 때문에 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c4be47f7b0b0635e030d8f171a0806ef7b2856b7" translate="yes" xml:space="preserve">
          <source>A program element annotated @Deprecated is one that programmers are discouraged from using, typically because it is dangerous, or because a better alternative exists. Compilers warn when a deprecated program element is used or overridden in non-deprecated code.</source>
          <target state="translated">@Deprecated로 주석이 달린 프로그램 요소는 프로그래머가 일반적으로 위험하거나 더 나은 대안이 있기 때문에 사용하지 않는 것이 좋습니다. 더 이상 사용되지 않는 프로그램 요소가 사용되지 않거나 사용되지 않는 코드에서 재정의되면 컴파일러에서 경고합니다.</target>
        </trans-unit>
        <trans-unit id="2de66be4819f2c9dcd7bc09e76cc228c9194121b" translate="yes" xml:space="preserve">
          <source>A program would use then these classes as follows:</source>
          <target state="translated">프로그램은 다음과 같이 이러한 클래스를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f199fddb7cb98fec44ccf9e86b3406817feca422" translate="yes" xml:space="preserve">
          <source>A programmer assertion that the body of the annotated method or constructor does not perform potentially unsafe operations on its varargs parameter.</source>
          <target state="translated">어노테이션이있는 메소드 또는 생성자의 본문이 varargs 매개 변수에 대해 잠재적으로 안전하지 않은 조작을 수행하지 않는다는 프로그래머의 주장.</target>
        </trans-unit>
        <trans-unit id="8f5e77f61722434f91b66e7d1bdf03aa10ba7a2a" translate="yes" xml:space="preserve">
          <source>A programmer assertion that the body of the annotated method or constructor does not perform potentially unsafe operations on its varargs parameter. Applying this annotation to a method or constructor suppresses unchecked warnings about a</source>
          <target state="translated">어노테이션이있는 메소드 또는 생성자의 본문이 varargs 매개 변수에 대해 잠재적으로 안전하지 않은 조작을 수행하지 않는다는 프로그래머의 주장. 이 어노테이션을 메소드 또는 생성자에 적용하면 확인되지 않은 경고가 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cc64b915a35a6cb9d915399919c9c32d2a394819" translate="yes" xml:space="preserve">
          <source>A progressive pass is a re-encoding of the entire image, generally at progressively higher effective resolutions, but requiring greater transmission bandwidth. The most common use of progressive encoding is found in the JPEG format, where successive passes include more detailed representations of the high-frequency image content.</source>
          <target state="translated">프로그레시브 패스는 일반적으로 점진적으로 더 높은 유효 해상도로 더 큰 전송 대역폭을 요구하는 전체 이미지의 재 인코딩입니다. 프로그레시브 인코딩의 가장 일반적인 용도는 JPEG 형식으로 제공되며, 연속적인 패스에는 고주파 이미지 내용에 대한 자세한 표현이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e86c918437b0ef4c87896f835e92bc1ba37fb22a" translate="yes" xml:space="preserve">
          <source>A property &quot;&amp;lt;logger&amp;gt;.handlers&quot;. This defines a whitespace or comma separated list of class names for handlers classes to load and register as handlers to the specified logger. Each class name must be for a Handler class which has a default constructor. Note that these Handlers may be created lazily, when they are first used.</source>
          <target state="translated">&quot;&amp;lt;logger&amp;gt; .handlers&quot;속성입니다. 핸들러 클래스가 지정된 로거에 핸들러로로드 및 등록 할 공백 또는 쉼표로 구분 된 클래스 이름 목록을 정의합니다. 각 클래스 이름은 기본 생성자가있는 핸들러 클래스 여야합니다. 이러한 핸들러는 처음 사용될 때 느리게 생성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b8333a093b6d7d47a6c333412eb84aa3f692950" translate="yes" xml:space="preserve">
          <source>A property &quot;&amp;lt;logger&amp;gt;.useParentHandlers&quot;. This defines a boolean value. By default every logger calls its parent in addition to handling the logging message itself, this often result in messages being handled by the root logger as well. When setting this property to false a Handler needs to be configured for this logger otherwise no logging messages are delivered.</source>
          <target state="translated">&quot;&amp;lt;logger&amp;gt; .useParentHandlers&quot;속성입니다. 부울 값을 정의합니다. 기본적으로 모든 로거는 로깅 메시지 자체를 처리하는 것 외에도 부모를 호출하므로 루트 로거가 메시지를 처리하는 경우가 종종 있습니다. 이 특성을 false로 설정하면이 로거에 대해 핸들러를 구성해야합니다. 그렇지 않으면 로깅 메시지가 전달되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a48195330c65c4b01249ae0f45a46a4b74f2ba95" translate="yes" xml:space="preserve">
          <source>A property &quot;config&quot;. This property is intended to allow arbitrary configuration code to be run. The property defines a whitespace or comma separated list of class names. A new instance will be created for each named class. The default constructor of each class may execute arbitrary code to update the logging configuration, such as setting logger levels, adding handlers, adding filters, etc.</source>
          <target state="translated">&quot;config&quot;속성 이 특성은 임의의 구성 코드를 실행할 수 있도록하기위한 것입니다. 이 속성은 공백 또는 쉼표로 구분 된 클래스 이름 목록을 정의합니다. 명명 된 각 클래스마다 새 인스턴스가 생성됩니다. 각 클래스의 기본 생성자는 로거 레벨 설정, 핸들러 추가, 필터 추가 등과 같은 로깅 구성을 업데이트하기 위해 임의의 코드를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="afdce71ac9851b08feb1aedc934d6974d465ffd9" translate="yes" xml:space="preserve">
          <source>A property &quot;handlers&quot;. This defines a whitespace or comma separated list of class names for handler classes to load and register as handlers on the root Logger (the Logger named &quot;&quot;). Each class name must be for a Handler class which has a default constructor. Note that these Handlers may be created lazily, when they are first used.</source>
          <target state="translated">&quot;핸들러&quot;속성. 이것은 처리기 클래스가 루트 로거 ( &quot;&quot;라는 이름의 로거)에 핸들러로로드하고 등록하기위한 공백 또는 쉼표로 구분 된 클래스 이름 목록을 정의합니다. 각 클래스 이름은 기본 생성자가있는 핸들러 클래스 여야합니다. 이러한 핸들러는 처음 사용될 때 느리게 생성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="40cd905b82ea9f19a546d51718933bdbbabbbf69" translate="yes" xml:space="preserve">
          <source>A property list can contain another property list as its &quot;defaults&quot;; this second property list is searched if the property key is not found in the original property list.</source>
          <target state="translated">속성 목록에는 &quot;기본값&quot;으로 다른 속성 목록이 포함될 수 있습니다. 이 두 번째 속성 목록은 속성 키가 원래 속성 목록에없는 경우 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="f2eed07f01afb2d91e36f7bb664109ed92d22708" translate="yes" xml:space="preserve">
          <source>A property list that contains default values for any keys not found in this property list.</source>
          <target state="translated">이 속성 목록에없는 키의 기본값이 포함 된 속성 목록입니다.</target>
        </trans-unit>
        <trans-unit id="f41aeb00b26c7224e4373696562512e945d54b66" translate="yes" xml:space="preserve">
          <source>A protocol library such as one for LDAP gets an instance of this class in order to perform authentication defined by a specific SASL mechanism. Invoking methods on the &lt;code&gt;SaslClient&lt;/code&gt; instance process challenges and create responses according to the SASL mechanism implemented by the &lt;code&gt;SaslClient&lt;/code&gt;. As the authentication proceeds, the instance encapsulates the state of a SASL client's authentication exchange.</source>
          <target state="translated">LDAP 용 프로토콜 라이브러리와 같은 프로토콜 라이브러리는 특정 SASL 메커니즘으로 정의 된 인증을 수행하기 위해이 클래스의 인스턴스를 가져옵니다. 온 메소드 호출 &lt;code&gt;SaslClient&lt;/code&gt; 인스턴스 프로세스 과제 및하면에 의해 구현 SASL기구에 따라 응답을 작성 &lt;code&gt;SaslClient&lt;/code&gt; 나 . 인증이 진행되면 인스턴스는 SASL 클라이언트의 인증 교환 상태를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="580caa29929fc4de9f05bdba16e0354f5e586e20" translate="yes" xml:space="preserve">
          <source>A provider cannot be added if it is already installed.</source>
          <target state="translated">이미 설치되어 있으면 공급자를 추가 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e63d614e8049932752e3aebb56b8bccf35052ea3" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector clients using a given protocol.</source>
          <target state="translated">지정된 프로토콜을 사용하여 JMX API 커넥터 클라이언트를 작성하기위한 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="614fb95349aea53f10863cad93d2aa6c404516c9" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector clients using a given protocol. Instances of this interface are created by &lt;a href=&quot;jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt; as part of its &lt;a href=&quot;jmxconnectorfactory#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt;&lt;code&gt;newJMXConnector&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">지정된 프로토콜을 사용하여 JMX API 커넥터 클라이언트를 작성하기위한 제공자입니다. 이 인터페이스의 인스턴스는 &lt;a href=&quot;jmxconnectorfactory#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt; &lt;code&gt;newJMXConnector&lt;/code&gt; &lt;/a&gt; 메소드의 일부로 &lt;a href=&quot;jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; 에&lt;/a&gt; 의해 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="bae1e5320493d0b1d17c1ed489f2965c61b5f471" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector servers using a given protocol.</source>
          <target state="translated">지정된 프로토콜을 사용하여 JMX API 커넥터 서버를 작성하기위한 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="36ad26d0e92f5776ffe09050557ac6b961677cf9" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector servers using a given protocol. Instances of this interface are created by &lt;a href=&quot;jmxconnectorserverfactory&quot;&gt;&lt;code&gt;JMXConnectorServerFactory&lt;/code&gt;&lt;/a&gt; as part of its &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;newJMXConnectorServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">지정된 프로토콜을 사용하여 JMX API 커넥터 서버를 작성하기위한 제공자입니다. 이 인터페이스의 인스턴스는 &lt;a href=&quot;jmxconnectorserverfactory&quot;&gt; &lt;code&gt;JMXConnectorServerFactory&lt;/code&gt; 에&lt;/a&gt; 의해 &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;newJMXConnectorServer&lt;/code&gt; &lt;/a&gt; 메소드의 일부로 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="17b083606c40562aa588292f9a8978d30059dfc5" translate="yes" xml:space="preserve">
          <source>A provider is a factory for one or more &lt;a href=&quot;../filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; instances. Each file system is identified by a &lt;code&gt;URI&lt;/code&gt; where the URI's scheme matches the provider's &lt;a href=&quot;filesystemprovider#getScheme--&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt;. The default file system, for example, is identified by the URI &lt;code&gt;&quot;file:///&quot;&lt;/code&gt;. A memory-based file system, for example, may be identified by a URI such as &lt;code&gt;&quot;memory:///?name=logfs&quot;&lt;/code&gt;. The &lt;a href=&quot;filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem&lt;/code&gt;&lt;/a&gt; method may be used to create a file system, and the &lt;a href=&quot;filesystemprovider#getFileSystem-java.net.URI-&quot;&gt;&lt;code&gt;getFileSystem&lt;/code&gt;&lt;/a&gt; method may be used to obtain a reference to an existing file system created by the provider. Where a provider is the factory for a single file system then it is provider dependent if the file system is created when the provider is initialized, or later when the &lt;code&gt;newFileSystem&lt;/code&gt; method is invoked. In the case of the default provider, the &lt;code&gt;FileSystem&lt;/code&gt; is created when the provider is initialized.</source>
          <target state="translated">제공자는 하나 이상의 &lt;a href=&quot;../filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt; 인스턴스에 대한 팩토리입니다 . 각 파일 시스템은 URI의 체계가 공급자의 &lt;a href=&quot;filesystemprovider#getScheme--&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt; 와 일치 하는 &lt;code&gt;URI&lt;/code&gt; 로 식별됩니다 . 예를 들어, 기본 파일 시스템은 URI &lt;code&gt;&quot;file:///&quot;&lt;/code&gt; 로 식별됩니다 . 예를 들어, 메모리 기반 파일 시스템은 &lt;code&gt;&quot;memory:///?name=logfs&quot;&lt;/code&gt; 와 같은 URI로 식별 될 수 있습니다 . &lt;a href=&quot;filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem&lt;/code&gt; 의&lt;/a&gt; 방법은 파일 시스템을 만드는 데 사용 될 수 있으며, &lt;a href=&quot;filesystemprovider#getFileSystem-java.net.URI-&quot;&gt; &lt;code&gt;getFileSystem&lt;/code&gt; &lt;/a&gt;방법은 제공자에 의해 생성 된 기존 파일 시스템에 대한 참조를 얻는 데 사용될 수 있습니다. 제공자가 단일 파일 시스템의 팩토리 인 경우 제공자가 초기화 될 때 또는 나중에 &lt;code&gt;newFileSystem&lt;/code&gt; 메소드가 호출 될 때 파일 시스템이 작성되면 제공자에 따라 다릅니다 . 기본 제공자의 경우 제공자가 초기화 될 때 &lt;code&gt;FileSystem&lt;/code&gt; 이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="c8661e42b7c7bc483d855be05578549a86088067" translate="yes" xml:space="preserve">
          <source>A provider may supply a separate class for each combination of</source>
          <target state="translated">제공자는 각 조합에 대해 별도의 클래스를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a60a915be1b89d2839a779fb959759ac9c3b3cb4" translate="yes" xml:space="preserve">
          <source>A provider or factory for a particular mixer type.</source>
          <target state="translated">특정 믹서 유형의 공급자 또는 공장입니다.</target>
        </trans-unit>
        <trans-unit id="44f8d9d0aaa9571934a90484486f900c4a13b7b8" translate="yes" xml:space="preserve">
          <source>A provider or factory for a particular mixer type. This mechanism allows the implementation to determine how resources are managed in creation / management of a mixer.</source>
          <target state="translated">특정 믹서 유형의 공급자 또는 공장입니다. 이 메커니즘을 통해 구현은 믹서의 생성 / 관리에서 리소스가 관리되는 방식을 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4878c3885cb6d9f28d6699e6f5ecb8e8c822919b" translate="yes" xml:space="preserve">
          <source>A provider satisfies the specified selection criterion iff the provider implements the specified algorithm or type for the specified cryptographic service.</source>
          <target state="translated">제공자는 지정된 암호화 서비스에 대해 지정된 알고리즘 또는 유형을 구현할 경우 지정된 선택 기준을 충족합니다.</target>
        </trans-unit>
        <trans-unit id="ef46e43cda72b7adf9af9a571bcf11a8355d0f12" translate="yes" xml:space="preserve">
          <source>A provider satisfies this selection criterion iff the provider implements the specified algorithm or type for the specified cryptographic service and its implementation meets the constraint expressed by the specified attribute name/value pair.</source>
          <target state="translated">제공자는 지정된 암호화 서비스에 대해 지정된 알고리즘 또는 유형을 구현하고 해당 구현이 지정된 속성 이름 / 값 쌍으로 표시되는 제한 조건을 충족하는 경우이 선택 기준을 충족합니다.</target>
        </trans-unit>
        <trans-unit id="fc949cead6b5737ed8a2378bb803e40cc0308221" translate="yes" xml:space="preserve">
          <source>A provider satisfies this selection criterion iff the provider implements the specified algorithm or type for the specified cryptographic service.</source>
          <target state="translated">제공자는 지정된 암호화 서비스에 대해 지정된 알고리즘 또는 유형을 구현할 경우이 선택 기준을 충족합니다.</target>
        </trans-unit>
        <trans-unit id="e6ced3920c677959d9711013953a9334773b2c03" translate="yes" xml:space="preserve">
          <source>A provider should document all the key specifications supported by its key factory.</source>
          <target state="translated">공급자는 키 팩토리에서 지원하는 모든 주요 사양을 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="26b19895da8d88f1c088d3d43c523eea1300e61e" translate="yes" xml:space="preserve">
          <source>A provider should document all the key specifications supported by its secret key factory. For example, the DES secret-key factory supplied by the &quot;SunJCE&quot; provider supports &lt;code&gt;DESKeySpec&lt;/code&gt; as a transparent representation of DES keys, and that provider's secret-key factory for Triple DES keys supports &lt;code&gt;DESedeKeySpec&lt;/code&gt; as a transparent representation of Triple DES keys.</source>
          <target state="translated">공급자는 비밀 키 팩토리에서 지원하는 모든 키 사양을 문서화해야합니다. 예를 들어, &quot;SunJCE&quot;공급자가 제공 한 DES 비밀 키 팩토리 는 DES 키의 투명한 표현으로 &lt;code&gt;DESKeySpec&lt;/code&gt; 을 지원 하고 트리플 DES 키에 대한 해당 제공자의 비밀 키 팩토리는 트리플 DES 키 의 투명한 표현으로 &lt;code&gt;DESedeKeySpec&lt;/code&gt; 을 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="b667809afd8c34cefc7f762bfd6fab51fb3ce561" translate="yes" xml:space="preserve">
          <source>A proxy class extends &lt;code&gt;java.lang.reflect.Proxy&lt;/code&gt;.</source>
          <target state="translated">프록시 클래스는 &lt;code&gt;java.lang.reflect.Proxy&lt;/code&gt; 를 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="615f960dcbdaeb0ef796b32f2cd08b6cb43be786" translate="yes" xml:space="preserve">
          <source>A proxy class has the following properties:</source>
          <target state="translated">프록시 클래스에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2869cfe379beab005c79c443e4b3f14fb769af4" translate="yes" xml:space="preserve">
          <source>A proxy class implements exactly the interfaces specified at its creation, in the same order.</source>
          <target state="translated">프록시 클래스는 생성시 지정된 인터페이스를 동일한 순서로 정확하게 구현합니다.</target>
        </trans-unit>
        <trans-unit id="4d78fbca7a5f7f9302beb9340d42fda5f7c8acaa" translate="yes" xml:space="preserve">
          <source>A proxy instance has the following properties:</source>
          <target state="translated">프록시 인스턴스에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8123f85683d160c7b20d5bea816c6a9cdd93243" translate="yes" xml:space="preserve">
          <source>A proxy is typically used to access an MXBean in a remote Java virtual machine. An alternative way to create an MXBean proxy is:</source>
          <target state="translated">프록시는 일반적으로 원격 Java 가상 머신에서 MXBean에 액세스하는 데 사용됩니다. MXBean 프록시를 생성하는 다른 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f354b17dc51832b6d211186d5cf971a120bb6b70" translate="yes" xml:space="preserve">
          <source>A proxy setting that represents a &lt;code&gt;DIRECT&lt;/code&gt; connection, basically telling the protocol handler not to use any proxying. Used, for instance, to create sockets bypassing any other global proxy settings (like SOCKS):</source>
          <target state="translated">&lt;code&gt;DIRECT&lt;/code&gt; 연결 을 나타내는 프록시 설정 으로, 기본적으로 프로토콜 핸들러가 프록시를 사용하지 않도록 지시합니다. 예를 들어 SOCKS와 같은 다른 전역 프록시 설정을 우회하는 소켓을 만드는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b46f91bed61e24e029ef85159c86eda25e3a71d6" translate="yes" xml:space="preserve">
          <source>A pseudo-type corresponding to a package element.</source>
          <target state="translated">패키지 요소에 해당하는 의사 유형입니다.</target>
        </trans-unit>
        <trans-unit id="b486b8bfaac8ddad76cc95e09326ce8a1f46face" translate="yes" xml:space="preserve">
          <source>A pseudo-type used where no actual type is appropriate.</source>
          <target state="translated">실제 유형이 적절하지 않은 경우 사용되는 의사 유형입니다.</target>
        </trans-unit>
        <trans-unit id="52de26ecb9825b14655caee56f2634bb6a83b2cb" translate="yes" xml:space="preserve">
          <source>A pseudo-type used where no actual type is appropriate. The kinds of &lt;code&gt;NoType&lt;/code&gt; are:</source>
          <target state="translated">실제 유형이 적절하지 않은 경우 사용되는 의사 유형입니다. &lt;code&gt;NoType&lt;/code&gt; 의 종류는 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1e90dd032f01e32199ad98aa872c3903457e7668" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;double&lt;/code&gt; value is generated as if it's the result of calling the following method with the origin and bound:</source>
          <target state="translated">의사 난수 &lt;code&gt;double&lt;/code&gt; 값은 원점과 바운드를 사용하여 다음 메소드를 호출 한 결과 인 것처럼 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="75364c69974740760e2102258d4f572653c09fb6" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;double&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;random#nextDouble--&quot;&gt;&lt;code&gt;nextDouble()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의사 난수 &lt;code&gt;double&lt;/code&gt; 값은 &lt;a href=&quot;random#nextDouble--&quot;&gt; &lt;code&gt;nextDouble()&lt;/code&gt; &lt;/a&gt; 메서드를 호출 한 결과 인 것처럼 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="8c5dd8c02c45a4aab3524fd4b010df013ea9b7dd" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;int&lt;/code&gt; value is generated as if it's the result of calling the following method with the origin and bound:</source>
          <target state="translated">pseudorandom &lt;code&gt;int&lt;/code&gt; 값은 원점과 바운드를 사용하여 다음 메소드를 호출 한 결과 인 것처럼 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="a03e42a450e90fb0c78448bd8feae33961e15d83" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;int&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;random#nextInt--&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의사 난수 &lt;code&gt;int&lt;/code&gt; 값은 &lt;a href=&quot;random#nextInt--&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt; 메소드를 호출 한 결과 인 것처럼 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="eb87283f032efcc5874617e4e0bcc58f671273aa" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;long&lt;/code&gt; value is generated as if it's the result of calling the following method with the origin and bound:</source>
          <target state="translated">의사 난수 &lt;code&gt;long&lt;/code&gt; 값은 원점과 바운드를 사용하여 다음 메소드를 호출 한 결과 인 것처럼 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="9449755c8e0ca71a1c153368e6816b2ee3278550" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;long&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;random#nextLong--&quot;&gt;&lt;code&gt;nextLong()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의사 난수 &lt;code&gt;long&lt;/code&gt; 값은 &lt;a href=&quot;random#nextLong--&quot;&gt; &lt;code&gt;nextLong()&lt;/code&gt; &lt;/a&gt; 메소드를 호출 한 결과 인 것처럼 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="4f1ff8a1809138d2eb69bc96f4ac2d5f1cf560bd" translate="yes" xml:space="preserve">
          <source>A public key.</source>
          <target state="translated">공개 키</target>
        </trans-unit>
        <trans-unit id="a5d3e3595d61df29206b582a495aec470cfa967b" translate="yes" xml:space="preserve">
          <source>A public key. This interface contains no methods or constants. It merely serves to group (and provide type safety for) all public key interfaces. Note: The specialized public key interfaces extend this interface. See, for example, the DSAPublicKey interface in &lt;code&gt;java.security.interfaces&lt;/code&gt;.</source>
          <target state="translated">공개 키 이 인터페이스에는 메서드 나 상수가 없습니다. 단지 모든 공개 키 인터페이스를 그룹화 (및 유형 안전성 제공)하는 역할을합니다. 참고 : 특수화 된 공개 키 인터페이스는이 인터페이스를 확장합니다. 예를 들어 &lt;code&gt;java.security.interfaces&lt;/code&gt; 의 DSAPublicKey 인터페이스를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa53fec930a563b793cfb3b06ebddd3b17d2fcf1" translate="yes" xml:space="preserve">
          <source>A punctuation character:&lt;code&gt;p{IsPunctuation}&lt;/code&gt;</source>
          <target state="translated">문장 부호 문자 : &lt;code&gt;p{IsPunctuation}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e9bc11f3589016e70368844a4f5c6189fa59bdb" translate="yes" xml:space="preserve">
          <source>A query expression that represents the matching constraint on the string argument. The returned object will be serialized as an instance of the non-public class  javax.management.MatchQueryExp.</source>
          <target state="translated">문자열 인수에 대한 일치 제약 조건을 나타내는 쿼리 식입니다. 리턴 된 오브젝트는 비 공용 클래스 javax.management.MatchQueryExp의 인스턴스로 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="fd87aace87b360fadc902a07b6f6724a955ccd18" translate="yes" xml:space="preserve">
          <source>A query for &lt;code&gt;LocalDate&lt;/code&gt; returning null if not found.</source>
          <target state="translated">찾을 수없는 경우 null을 반환 하는 &lt;code&gt;LocalDate&lt;/code&gt; 에 대한 쿼리입니다 .</target>
        </trans-unit>
        <trans-unit id="9c5fdb320f9fd010e6fc84437fd7efbd9ae2a4f3" translate="yes" xml:space="preserve">
          <source>A query for &lt;code&gt;LocalTime&lt;/code&gt; returning null if not found.</source>
          <target state="translated">찾을 수없는 경우 &lt;code&gt;LocalTime&lt;/code&gt; 에 대한 쿼리가 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ac9a2eb18e7bfdca419913ea159a721ab7b01523" translate="yes" xml:space="preserve">
          <source>A query for &lt;code&gt;ZoneOffset&lt;/code&gt; returning null if not found.</source>
          <target state="translated">찾을 수없는 경우 null을 반환 하는 &lt;code&gt;ZoneOffset&lt;/code&gt; 에 대한 쿼리입니다 .</target>
        </trans-unit>
        <trans-unit id="3e78bc82f9e8f94bc5a735382871c83937265df6" translate="yes" xml:space="preserve">
          <source>A query for the &lt;code&gt;Chronology&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Chronology&lt;/code&gt; 대한 쿼리 .</target>
        </trans-unit>
        <trans-unit id="39ef1890e85fb1c7facf128d46625e4303c5b931" translate="yes" xml:space="preserve">
          <source>A query for the smallest supported unit.</source>
          <target state="translated">가장 작은 지원 단위에 대한 쿼리입니다.</target>
        </trans-unit>
        <trans-unit id="3f82a322a0e451ead6caf980f1c2ed3196a64f4a" translate="yes" xml:space="preserve">
          <source>A query that provides access to the excess days that were parsed.</source>
          <target state="translated">구문 분석 된 초과 일에 액세스 할 수있는 쿼리입니다.</target>
        </trans-unit>
        <trans-unit id="5678eed1c14504f0290f034574f9688caebd613d" translate="yes" xml:space="preserve">
          <source>A query that provides access to whether a leap-second was parsed.</source>
          <target state="translated">윤초가 구문 분석되었는지 여부에 대한 액세스를 제공하는 쿼리입니다.</target>
        </trans-unit>
        <trans-unit id="af8411cd20f4aa32f91510c63957b78c82b0ec10" translate="yes" xml:space="preserve">
          <source>A question mark ('?') is replaced by a backslash (\) followed by a question mark.</source>
          <target state="translated">물음표 ( '?')는 백 슬래시 (\)와 물음표로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="e084d41cca85f9090522df2231bb663388166177" translate="yes" xml:space="preserve">
          <source>A question mark (?) or asterisk (*). The two characters represent a question mark or asterisk respectively.</source>
          <target state="translated">물음표 (?) 또는 별표 (*). 두 문자는 각각 물음표 또는 별표를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c991703c3435fc38e1efa1e781b165d3a35e83cc" translate="yes" xml:space="preserve">
          <source>A quote ('&quot;') is replaced by a backslash (\) followed by a quote.</source>
          <target state="translated">따옴표 ( ' &quot;')는 백 슬래시 (\)와 따옴표로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="65e06fc75c0ec78c2fc622e557a9e1f653f35d84" translate="yes" xml:space="preserve">
          <source>A quote may not appear inside a quoted value except immediately after an odd number of consecutive backslashes.</source>
          <target state="translated">홀수의 연속 백 슬래시 직후를 제외하고 따옴표는 따옴표 안에 표시되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b264de8abb8722f7f6da9ae38453e8ae94eeb0aa" translate="yes" xml:space="preserve">
          <source>A quote. The two characters represent a quote, and that quote is not considered to terminate the quoted value. An ending closing quote must be present for the quoted value to be valid.</source>
          <target state="translated">인용문. 두 문자는 따옴표를 나타내며 따옴표는 따옴표로 묶은 것으로 간주되지 않습니다. 따옴표로 묶은 값이 유효하려면 끝 닫는 따옴표가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="e9a2d077ef11a8cc558d4862f60b67ce7ff22169" translate="yes" xml:space="preserve">
          <source>A random number generator isolated to the current thread.</source>
          <target state="translated">현재 스레드에 격리 된 난수 생성기입니다.</target>
        </trans-unit>
        <trans-unit id="33185ac95e8bc4fa75b311844397235baffc14d0" translate="yes" xml:space="preserve">
          <source>A random number generator isolated to the current thread. Like the global &lt;a href=&quot;../random&quot;&gt;&lt;code&gt;Random&lt;/code&gt;&lt;/a&gt; generator used by the &lt;a href=&quot;../../lang/math&quot;&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/a&gt; class, a &lt;code&gt;ThreadLocalRandom&lt;/code&gt; is initialized with an internally generated seed that may not otherwise be modified. When applicable, use of &lt;code&gt;ThreadLocalRandom&lt;/code&gt; rather than shared &lt;code&gt;Random&lt;/code&gt; objects in concurrent programs will typically encounter much less overhead and contention. Use of &lt;code&gt;ThreadLocalRandom&lt;/code&gt; is particularly appropriate when multiple tasks (for example, each a &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;) use random numbers in parallel in thread pools.</source>
          <target state="translated">현재 스레드에 격리 된 난수 생성기입니다. &lt;a href=&quot;../../lang/math&quot;&gt; &lt;code&gt;Math&lt;/code&gt; &lt;/a&gt; 클래스에서 사용 하는 전역 &lt;a href=&quot;../random&quot;&gt; &lt;code&gt;Random&lt;/code&gt; &lt;/a&gt; 생성기 와 마찬가지로 &lt;code&gt;ThreadLocalRandom&lt;/code&gt; 은 내부적으로 생성 된 시드로 초기화되며 다른 방법으로는 수정할 수 없습니다. 적용 가능한 경우, 동시 프로그램에서 공유 &lt;code&gt;Random&lt;/code&gt; 오브젝트가 아닌 &lt;code&gt;ThreadLocalRandom&lt;/code&gt; 을 사용하면 오버 헤드와 경합이 훨씬 줄어 듭니다. &lt;code&gt;ThreadLocalRandom&lt;/code&gt; 의 사용은 여러 작업 (예 : 각각의 &lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt; )이 스레드 풀에서 임의의 숫자를 병렬로 사용할 때 특히 적합합니다 .</target>
        </trans-unit>
        <trans-unit id="488c64596c97d4a88323f5f0259654cb1b84108c" translate="yes" xml:space="preserve">
          <source>A randomly generated &lt;code&gt;UUID&lt;/code&gt;</source>
          <target state="translated">임의로 생성 된 &lt;code&gt;UUID&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5a4c830c8ae43497d1af863a0e08fd5560aa7cb" translate="yes" xml:space="preserve">
          <source>A read operation might not fill the buffer, and in fact it might not read any bytes at all. Whether or not it does so depends upon the nature and state of the channel. A socket channel in non-blocking mode, for example, cannot read any more bytes than are immediately available from the socket's input buffer; similarly, a file channel cannot read any more bytes than remain in the file. It is guaranteed, however, that if a channel is in blocking mode and there is at least one byte remaining in the buffer then this method will block until at least one byte is read.</source>
          <target state="translated">읽기 작업이 버퍼를 채우지 못할 수 있으며 실제로는 바이트를 전혀 읽지 못할 수 있습니다. 그렇게하는지 여부는 채널의 특성과 상태에 따라 다릅니다. 예를 들어, 비 블로킹 모드의 소켓 채널은 소켓의 입력 버퍼에서 즉시 사용 가능한 것보다 더 많은 바이트를 읽을 수 없습니다. 마찬가지로 파일 채널은 파일에 남아있는 것보다 더 많은 바이트를 읽을 수 없습니다. 그러나 채널이 차단 모드에 있고 버퍼에 하나 이상의 바이트가 남아 있으면이 방법은 하나 이상의 바이트를 읽을 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="9d0a9dce3565a63964117ea0a8dfaa902858d525" translate="yes" xml:space="preserve">
          <source>A read-only empty PermissionCollection instance.</source>
          <target state="translated">읽기 전용의 빈 PermissionCollection 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="3c1a14e276d6d75e03c30962d46fa74775569f4b" translate="yes" xml:space="preserve">
          <source>A read-write lock allows for a greater level of concurrency in accessing shared data than that permitted by a mutual exclusion lock. It exploits the fact that while only a single thread at a time (a &lt;em&gt;writer&lt;/em&gt; thread) can modify the shared data, in many cases any number of threads can concurrently read the data (hence &lt;em&gt;reader&lt;/em&gt; threads). In theory, the increase in concurrency permitted by the use of a read-write lock will lead to performance improvements over the use of a mutual exclusion lock. In practice this increase in concurrency will only be fully realized on a multi-processor, and then only if the access patterns for the shared data are suitable.</source>
          <target state="translated">읽기-쓰기 잠금은 상호 배제 잠금에 의해 허용되는 것보다 공유 데이터에 액세스 할 때 더 높은 수준의 동시성을 허용합니다. 한 번에 하나의 스레드 ( &lt;em&gt;작성자&lt;/em&gt; 스레드) 만 공유 데이터를 수정할 수 있지만 많은 수의 스레드가 동시에 데이터를 읽을 수 있기 때문에 &lt;em&gt;독자&lt;/em&gt; 스레드가 있습니다. 이론적으로, 읽기 / 쓰기 잠금을 사용하여 허용되는 동시성 증가는 상호 배제 잠금을 사용하는 것보다 성능이 향상됩니다. 실제로 이러한 동시성 증가는 다중 프로세서에서만 완전히 실현되고 공유 데이터의 액세스 패턴이 적합한 경우에만 실현됩니다.</target>
        </trans-unit>
        <trans-unit id="6a884474a7fd8fa15566b3c46e080db6b54715b1" translate="yes" xml:space="preserve">
          <source>A reader for which all images are guaranteed to be tiled, or are guaranteed not to be tiled, may return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; respectively without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds.</source>
          <target state="translated">모든 이미지가 바둑판 식으로 배열되거나 바둑판 식으로 표시되지 않는 판독기는 이미지 데이터에 액세스하지 않고 각각 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 반환 할 수 있습니다 . 이러한 경우 입력 소스가 설정되지 않았거나 이미지 색인이 범위를 벗어난 경우에도 예외를 발생시킬 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="a119cfd299dd82f3eb2b90d7f7893712a9085897" translate="yes" xml:space="preserve">
          <source>A reader for which all images are guaranteed to support easy random access, or are guaranteed not to support easy random access, may return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; respectively without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds.</source>
          <target state="translated">모든 이미지가 쉬운 임의 액세스를 지원한다고 보장되거나 쉬운 임의 액세스를 지원하지 않는 리더는 이미지 데이터에 액세스하지 않고 각각 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 반환 할 수 있습니다 . 이러한 경우 입력 소스가 설정되지 않았거나 이미지 색인이 범위를 벗어난 경우에도 예외를 발생시킬 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="35dcd41910e274aca3f1af552f0db2276e3cea66" translate="yes" xml:space="preserve">
          <source>A reader for which the tile grid X offset always has the same value (usually 0), may return the value without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds.</source>
          <target state="translated">타일 ​​그리드 X 오프셋이 항상 같은 값 (보통 0) 인 판독기는 이미지 데이터에 액세스하지 않고 값을 반환 할 수 있습니다. 이러한 경우 입력 소스가 설정되지 않았거나 이미지 색인이 범위를 벗어난 경우에도 예외를 발생시킬 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="bbd67a5d6af16685ac4e9d2bf54d0e78864b1b1b" translate="yes" xml:space="preserve">
          <source>A reader for which the tile grid Y offset always has the same value (usually 0), may return the value without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds.</source>
          <target state="translated">타일 ​​그리드 Y 오프셋이 항상 같은 값 (보통 0)을 가진 판독기는 이미지 데이터에 액세스하지 않고 값을 반환 할 수 있습니다. 이러한 경우 입력 소스가 설정되지 않았거나 이미지 색인이 범위를 벗어난 경우에도 예외를 발생시킬 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="867f5bd8fc867c56578d5a8159e1e056b1f3cc25" translate="yes" xml:space="preserve">
          <source>A reader plug-in may choose whether or not to expose tiling that is present in the image as it is stored. It may even choose to advertise tiling when none is explicitly present. In general, tiling should only be advertised if there is some advantage (in speed or space) to accessing individual tiles. Regardless of whether the reader advertises tiling, it must be capable of reading an arbitrary rectangular region specified in an &lt;code&gt;ImageReadParam&lt;/code&gt;.</source>
          <target state="translated">리더 플러그인은 이미지가 저장 될 때 이미지에 나타나는 타일링을 노출할지 여부를 선택할 수 있습니다. 명시 적으로 존재하지 않는 경우 타일링을 알리도록 선택할 수도 있습니다. 일반적으로 타일링은 개별 타일에 액세스하는 데 속도 나 공간이 유리한 경우에만 알려야합니다. 리더가 타일링을 광고하는지 여부에 관계없이 &lt;code&gt;ImageReadParam&lt;/code&gt; 에 지정된 임의의 사각형 영역을 읽을 수 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="651daf6a92d260dfff9f7294e86a24dc3c2c6a16" translate="yes" xml:space="preserve">
          <source>A reader that does not support thumbnails need not implement any of the thumbnail-related methods.</source>
          <target state="translated">썸네일을 지원하지 않는 리더는 썸네일 관련 방법을 구현할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="0be2b7ed75dd5db4a77d4eb6f31175f72790f46b" translate="yes" xml:space="preserve">
          <source>A recursive result-bearing &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">재귀 결과 베어링 &lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a81fc059d2c4f24cc38eba91bff7746f9766fc6" translate="yes" xml:space="preserve">
          <source>A recursive resultless &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">재귀 resultless &lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6300992022ef59137e609e78d48653dc142fae21" translate="yes" xml:space="preserve">
          <source>A recursive resultless &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;. This class establishes conventions to parameterize resultless actions as &lt;code&gt;Void&lt;/code&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;s. Because &lt;code&gt;null&lt;/code&gt; is the only valid value of type &lt;code&gt;Void&lt;/code&gt;, methods such as &lt;code&gt;join&lt;/code&gt; always return &lt;code&gt;null&lt;/code&gt; upon completion.</source>
          <target state="translated">재귀 resultless &lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt; . 이 클래스는 결과없는 조치를 &lt;code&gt;Void&lt;/code&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; 로 매개 변수화하는 규칙을 설정 합니다. 때문에 &lt;code&gt;null&lt;/code&gt; 타입의 유일한 유효 값이 &lt;code&gt;Void&lt;/code&gt; , 방법과 같은 &lt;code&gt;join&lt;/code&gt; 항상 반환 &lt;code&gt;null&lt;/code&gt; 완료시.</target>
        </trans-unit>
        <trans-unit id="1cb5a53925a15d8d640449158f0ca3038779f2ad" translate="yes" xml:space="preserve">
          <source>A reentrant mutual exclusion &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; with the same basic behavior and semantics as the implicit monitor lock accessed using &lt;code&gt;synchronized&lt;/code&gt; methods and statements, but with extended capabilities.</source>
          <target state="translated">&lt;code&gt;synchronized&lt;/code&gt; 메소드 및 명령문을 사용하여 액세스 된 암시 적 모니터 잠금과 동일한 기본 동작 및 의미를 갖는 재진입 상호 배제 &lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="04ecfdbafe40a0c89cc49b68848d977d5074ada4" translate="yes" xml:space="preserve">
          <source>A reference object, blocking until one becomes available</source>
          <target state="translated">참조 객체, 사용 가능해질 때까지 차단</target>
        </trans-unit>
        <trans-unit id="672ba6654ac391d503ee81be4f5c402100ae4a62" translate="yes" xml:space="preserve">
          <source>A reference object, if one was available within the specified timeout period, otherwise &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">지정된 시간 초과 기간 내에 사용 가능한 참조 객체 인 경우 그렇지 않은 경우 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06af76cd96533be1c41483691d0275d471641b26" translate="yes" xml:space="preserve">
          <source>A reference object, if one was immediately available, otherwise &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">참조 객체 (즉시 사용 가능한 경우) &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8919f8790ed9d4c040586b362295a1be11a5f8d5" translate="yes" xml:space="preserve">
          <source>A reference to a java class is written in the form &amp;lt;class&amp;gt;javax.swing.JButton&amp;lt;/class&amp;gt;.</source>
          <target state="translated">Java 클래스에 대한 참조는 &amp;lt;class&amp;gt; javax.swing.JButton &amp;lt;/ class&amp;gt; 형식으로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="350f2c6afc92d7c05299564aab42eafe038acf67" translate="yes" xml:space="preserve">
          <source>A reference to an array is written using the &quot;array&quot; tag. The &quot;class&quot; and &quot;length&quot; attributes specify the sub-type of the array and its length respectively.</source>
          <target state="translated">배열에 대한 참조는 &quot;array&quot;태그를 사용하여 작성됩니다. &quot;class&quot;및 &quot;length&quot;속성은 배열의 하위 유형과 길이를 각각 지정합니다.</target>
        </trans-unit>
        <trans-unit id="fce9f2f5a454ee93f2c297c9ee7fb38e95a6dd71" translate="yes" xml:space="preserve">
          <source>A reference to this &lt;code&gt;Appendable&lt;/code&gt;</source>
          <target state="translated">이 &lt;code&gt;Appendable&lt;/code&gt; 대한 참조</target>
        </trans-unit>
        <trans-unit id="40f77ba4ee06e2db8298d41927f9ba32b14c39a0" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile int&lt;/code&gt; fields of designated classes.</source>
          <target state="translated">지정된 클래스의 지정된 &lt;code&gt;volatile int&lt;/code&gt; 필드에 대한 원자 업데이트를 가능하게하는 리플렉션 기반 유틸리티</target>
        </trans-unit>
        <trans-unit id="7e2b53980b1820a7ffe2d6d89f81034a3f52c1d8" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile int&lt;/code&gt; fields of designated classes. This class is designed for use in atomic data structures in which several fields of the same node are independently subject to atomic updates.</source>
          <target state="translated">지정된 클래스의 지정된 &lt;code&gt;volatile int&lt;/code&gt; 필드에 대한 원자 업데이트를 가능하게하는 리플렉션 기반 유틸리티 이 클래스는 동일한 노드의 여러 필드가 독립적으로 원자 업데이트되는 원자 데이터 구조에 사용하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="62ef22f6088afcedd2b57259a251e15a91d2a19a" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile long&lt;/code&gt; fields of designated classes.</source>
          <target state="translated">지정된 클래스의 지정된 &lt;code&gt;volatile long&lt;/code&gt; 필드에 대한 원자 업데이트를 가능하게하는 리플렉션 기반 유틸리티입니다 .</target>
        </trans-unit>
        <trans-unit id="f64d3fe565b074349f8d34af10a23fad8d736a9d" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile long&lt;/code&gt; fields of designated classes. This class is designed for use in atomic data structures in which several fields of the same node are independently subject to atomic updates.</source>
          <target state="translated">지정된 클래스의 지정된 &lt;code&gt;volatile long&lt;/code&gt; 필드에 대한 원자 업데이트를 가능하게하는 리플렉션 기반 유틸리티입니다 . 이 클래스는 동일한 노드의 여러 필드가 독립적으로 원자 업데이트되는 원자 데이터 구조에 사용하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="c5bba777cabc2754604b16f480628e723025c315" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile&lt;/code&gt; reference fields of designated classes.</source>
          <target state="translated">지정된 클래스의 지정된 &lt;code&gt;volatile&lt;/code&gt; 참조 필드에 대한 원자 업데이트를 가능하게하는 리플렉션 기반 유틸리티입니다 .</target>
        </trans-unit>
        <trans-unit id="00892eb028af7eaca0b0c67c0879a21e04e9cf9a" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile&lt;/code&gt; reference fields of designated classes. This class is designed for use in atomic data structures in which several reference fields of the same node are independently subject to atomic updates. For example, a tree node might be declared as</source>
          <target state="translated">지정된 클래스의 지정된 &lt;code&gt;volatile&lt;/code&gt; 참조 필드에 대한 원자 업데이트를 가능하게하는 리플렉션 기반 유틸리티입니다 . 이 클래스는 동일한 노드의 여러 참조 필드가 독립적으로 원자 업데이트되는 원자 데이터 구조에 사용하도록 설계되었습니다. 예를 들어, 트리 노드는 다음과 같이 선언 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7aef73b938bec112bb6e27f046c620bbab3f13f5" translate="yes" xml:space="preserve">
          <source>A region of a file may be &lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; against access by other programs.</source>
          <target state="translated">파일의 영역이 다른 프로그램의 액세스에 대해 &lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="986e19cabf09c2b5bb8f5bb41c5057eff866eba5" translate="yes" xml:space="preserve">
          <source>A region of a file may be &lt;a href=&quot;filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt;&lt;code&gt;&lt;i&gt;mapped&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; directly into memory; for large files this is often much more efficient than invoking the usual &lt;code&gt;read&lt;/code&gt; or &lt;code&gt;write&lt;/code&gt; methods.</source>
          <target state="translated">파일의 영역은 메모리 &lt;a href=&quot;filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt; &lt;code&gt;&lt;i&gt;mapped&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 직접 &lt;i&gt;매핑&lt;/i&gt; 될 수 있습니다 . 큰 파일의 경우 이것은 일반적인 &lt;code&gt;read&lt;/code&gt; 또는 &lt;code&gt;write&lt;/code&gt; 메소드를 호출하는 것보다 훨씬 효율적 입니다.</target>
        </trans-unit>
        <trans-unit id="6ed5fce3c0b65ae32c0e5d7426d44ead13fd5ca7" translate="yes" xml:space="preserve">
          <source>A region of a file may be &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; against access by other programs.</source>
          <target state="translated">파일의 영역이 다른 프로그램의 액세스에 대해 &lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b5ff16856ff2869ff88908e4046d1b1be295d7f" translate="yes" xml:space="preserve">
          <source>A region of a file may be mapped into memory in one of three modes:</source>
          <target state="translated">파일의 영역은 다음 세 가지 모드 중 하나로 메모리에 매핑 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9f74d623670ef8ac431e94f0bb98af4e602455a" translate="yes" xml:space="preserve">
          <source>A registered listener becomes deregistered when:</source>
          <target state="translated">다음과 같은 경우 등록 된 리스너가 등록 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="796ce01fe357cfe1131906cfe0da8f399d6b1c53" translate="yes" xml:space="preserve">
          <source>A registry for service provider instances.</source>
          <target state="translated">서비스 제공자 인스턴스의 레지스트리.</target>
        </trans-unit>
        <trans-unit id="8cc7ea1f17a9b34b3a301d78fcc3206b01129af0" translate="yes" xml:space="preserve">
          <source>A registry for service provider instances. Service provider classes may be detected at run time by means of meta-information in the JAR files containing them. The intent is that it be relatively inexpensive to load and inspect all available service provider classes. These classes may them be used to locate and instantiate more heavyweight classes that will perform actual work, in this case instances of &lt;code&gt;ImageReader&lt;/code&gt;, &lt;code&gt;ImageWriter&lt;/code&gt;, &lt;code&gt;ImageTranscoder&lt;/code&gt;, &lt;code&gt;ImageInputStream&lt;/code&gt;, and &lt;code&gt;ImageOutputStream&lt;/code&gt;.</source>
          <target state="translated">서비스 제공자 인스턴스의 레지스트리. 서비스 제공자 클래스는이를 포함하는 JAR 파일에서 메타 정보를 통해 런타임에 감지 될 수 있습니다. 사용 가능한 모든 서비스 공급자 클래스를로드하고 검사하는 것이 상대적으로 저렴합니다. 이러한 클래스는 실제 작업을 수행하는 더 무거운 클래스 (이 경우 &lt;code&gt;ImageReader&lt;/code&gt; , &lt;code&gt;ImageWriter&lt;/code&gt; , &lt;code&gt;ImageTranscoder&lt;/code&gt; , &lt;code&gt;ImageInputStream&lt;/code&gt; 및 &lt;code&gt;ImageOutputStream&lt;/code&gt; ) 를 찾고 인스턴스화하는 데 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b06c31cba6df7f439a79aa3ae1390ce3824b0549" translate="yes" xml:space="preserve">
          <source>A regular expression, specified as a string, must first be compiled into an instance of this class. The resulting pattern can then be used to create a &lt;a href=&quot;matcher&quot;&gt;&lt;code&gt;Matcher&lt;/code&gt;&lt;/a&gt; object that can match arbitrary &lt;a href=&quot;../../lang/charsequence&quot;&gt;character sequences&lt;/a&gt; against the regular expression. All of the state involved in performing a match resides in the matcher, so many matchers can share the same pattern.</source>
          <target state="translated">문자열로 지정된 정규식을 먼저이 클래스의 인스턴스로 컴파일해야합니다. 그런 다음 결과 패턴을 사용하여 임의의 &lt;a href=&quot;../../lang/charsequence&quot;&gt;문자 시퀀스&lt;/a&gt; 를 정규식 과 일치시킬 수 있는 &lt;a href=&quot;matcher&quot;&gt; &lt;code&gt;Matcher&lt;/code&gt; &lt;/a&gt; 객체 를 만들 수 있습니다 . 매치를 수행하는 데 관련된 모든 상태는 매처에 상주하므로 많은 매 처가 동일한 패턴을 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84baa6ec0a9b50f4bedf3f108bed7c1a5d83f975" translate="yes" xml:space="preserve">
          <source>A relation instance can be created explicitly, as an object implementing the &lt;a href=&quot;relation&quot;&gt;&lt;code&gt;Relation&lt;/code&gt;&lt;/a&gt; interface, typically a &lt;a href=&quot;relationsupport&quot;&gt;&lt;code&gt;RelationSupport&lt;/code&gt;&lt;/a&gt;. (A &lt;code&gt;RelationSupport&lt;/code&gt; is itself a valid MBean, so it can be registered in the MBean Server, though this is not required.) Alternatively, a relation instance can be created implicitly using the Relation Service's &lt;a href=&quot;relationservicembean#createRelation-java.lang.String-java.lang.String-javax.management.relation.RoleList-&quot;&gt;&lt;code&gt;createRelation&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">릴레이션 인스턴스가 실행 대상으로서 명시 생성 될 수 &lt;a href=&quot;relation&quot;&gt; &lt;code&gt;Relation&lt;/code&gt; &lt;/a&gt; 인터페이스, 전형적으로 &lt;a href=&quot;relationsupport&quot;&gt; &lt;code&gt;RelationSupport&lt;/code&gt; &lt;/a&gt; . ( &lt;code&gt;RelationSupport&lt;/code&gt; 자체는 유효한 MBean이므로 필수는 아니지만 MBean 서버에 등록 할 수 있습니다.) 또는 관계 서비스의 &lt;a href=&quot;relationservicembean#createRelation-java.lang.String-java.lang.String-javax.management.relation.RoleList-&quot;&gt; &lt;code&gt;createRelation&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 관계 인스턴스를 내재적으로 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e34ea165e026e514c6feec0e60a888d6555eca96" translate="yes" xml:space="preserve">
          <source>A relation or reset character not followed by a text-argument (e.g. &quot;a &amp;lt; ,b&quot;).</source>
          <target state="translated">텍스트 인수가없는 관계 또는 재설정 문자 (예 : &quot;a &amp;lt;, b&quot;)</target>
        </trans-unit>
        <trans-unit id="9b5292f74c4969e9f524b42a1578d24ee29625b3" translate="yes" xml:space="preserve">
          <source>A relation type can be created explicitly, as an object implementing the &lt;a href=&quot;relationtype&quot;&gt;&lt;code&gt;RelationType&lt;/code&gt;&lt;/a&gt; interface, typically a &lt;a href=&quot;relationtypesupport&quot;&gt;&lt;code&gt;RelationTypeSupport&lt;/code&gt;&lt;/a&gt;. Alternatively, it can be created implicitly using the Relation Service's &lt;a href=&quot;relationservicembean#createRelationType-java.lang.String-javax.management.relation.RoleInfo:A-&quot;&gt;&lt;code&gt;createRelationType&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">관계형은 구현 개체로서 명시 적으로 생성 될 수 &lt;a href=&quot;relationtype&quot;&gt; &lt;code&gt;RelationType&lt;/code&gt; 의&lt;/a&gt; 인터페이스, 전형적 &lt;a href=&quot;relationtypesupport&quot;&gt; &lt;code&gt;RelationTypeSupport&lt;/code&gt; 를&lt;/a&gt; . 또는 관계 서비스의 &lt;a href=&quot;relationservicembean#createRelationType-java.lang.String-javax.management.relation.RoleInfo:A-&quot;&gt; &lt;code&gt;createRelationType&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 내재적으로 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cca4085b34ffc8b6117aabd0f662f58af45f6ef2" translate="yes" xml:space="preserve">
          <source>A relation type has to be declared in the Relation Service:</source>
          <target state="translated">관계 유형은 관계 서비스에서 선언되어야합니다.</target>
        </trans-unit>
        <trans-unit id="7f4eb7687a7b917a5f779c8905e8aba99535587f" translate="yes" xml:space="preserve">
          <source>A relation type includes a relation type name and a list of role infos (represented by RoleInfo objects).</source>
          <target state="translated">관계 유형에는 관계 유형 이름과 역할 정보 목록 (RoleInfo 객체로 표시)이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e416d1b9bbad3251aba861210072b4207a2080fc" translate="yes" xml:space="preserve">
          <source>A replacement is legal if, and only if, it is a legal sequence of bytes in this encoder's charset; that is, it must be possible to decode the replacement into one or more sixteen-bit Unicode characters.</source>
          <target state="translated">이 엔코더의 문자셋에서 유효한 바이트 시퀀스 인 경우에만 대체가 가능합니다. 즉, 대체를 하나 이상의 16 비트 유니 코드 문자로 디코딩 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="9621585bd05248c7bbaa827c2bc4c50cf8bb5e38" translate="yes" xml:space="preserve">
          <source>A representation of</source>
          <target state="translated">의 표현</target>
        </trans-unit>
        <trans-unit id="21ca3ddcf1176e64b427cc5f56e932899f576fbd" translate="yes" xml:space="preserve">
          <source>A reserved key, &lt;code&gt;&lt;b&gt;THREADING&lt;/b&gt;&lt;/code&gt;, whose value describes the behavior of the engine with respect to concurrent execution of scripts and maintenance of state is also defined. These values for the &lt;code&gt;&lt;b&gt;THREADING&lt;/b&gt;&lt;/code&gt; key are:</source>
          <target state="translated">스크립트의 동시 실행 및 상태 유지와 관련하여 엔진의 동작을 설명 하는 예약 된 키 &lt;code&gt;&lt;b&gt;THREADING&lt;/b&gt;&lt;/code&gt; 도 정의됩니다. &lt;code&gt;&lt;b&gt;THREADING&lt;/b&gt;&lt;/code&gt; 키의 값 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="590b8281eb0b5afdb158b730620721f0d18ca9e1" translate="yes" xml:space="preserve">
          <source>A reset where the text-argument (or an initial substring of the text-argument) is not already in the sequence. (e.g. &quot;a &amp;lt; b &amp;amp; e &amp;lt; f&quot;)</source>
          <target state="translated">텍스트 인수 (또는 텍스트 인수의 초기 하위 문자열)가 시퀀스에없는 재설정 (예 : &quot;a &amp;lt;b &amp;amp; e &amp;lt;f&quot;)</target>
        </trans-unit>
        <trans-unit id="50daa7cabce84af2b1a2640df3c79d87fb279761" translate="yes" xml:space="preserve">
          <source>A resolution attribute's cross feed direction resolution and feed direction resolution values are stored internally using units of dots per 100 inches (dphi). Storing the values in dphi rather than, say, metric units allows precise integer arithmetic conversions between dpi and dphi and between dpcm and dphi: 1 dpi = 100 dphi, 1 dpcm = 254 dphi. Thus, the values can be stored into and retrieved back from a resolution attribute in either units with no loss of precision. This would not be guaranteed if a floating point representation were used. However, roundoff error will in general occur if a resolution attribute's values are created in one units and retrieved in different units; for example, 600 dpi will be rounded to 236 dpcm, whereas the true value (to five figures) is 236.22 dpcm.</source>
          <target state="translated">해상도 속성의 교차 피드 방향 해상도 및 피드 방향 해상도 값은 100 인치당 도트 단위 (dphi)를 사용하여 내부적으로 저장됩니다. 예를 들어, 미터법 단위가 아닌 dphi로 값을 저장하면 dpi와 dphi 사이 및 dpcm와 dphi 사이의 정확한 정수 산술 변환이 가능합니다 : 1 dpi = 100 dphi, 1 dpcm = 254 dphi. 따라서, 값은 정밀도 손실없이 어느 단위로든 분해능 속성에 저장되어 다시 검색 될 수 있습니다. 부동 소수점 표현이 사용 된 경우 이것이 보장되지 않습니다. 그러나 일반적으로 해결 속성의 값이 한 단위로 작성되고 다른 단위로 검색되면 반올림 오류가 발생합니다. 예를 들어 600dpi는 236dpcm으로 반올림되는 반면 실제 값 (5 자리)은 236.22dpdp입니다.</target>
        </trans-unit>
        <trans-unit id="232557dedfb9f95c832486a5c16bc160b4258876" translate="yes" xml:space="preserve">
          <source>A resolution attribute's value consists of two items, the cross feed direction resolution and the feed direction resolution. A resolution attribute may be constructed by supplying the two values and indicating the units in which the values are measured. Methods are provided to return a resolution attribute's values, indicating the units in which the values are to be returned. The two most common resolution units are dots per inch (dpi) and dots per centimeter (dpcm), and exported constants &lt;a href=&quot;resolutionsyntax#DPI&quot;&gt;&lt;code&gt;DPI&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;resolutionsyntax#DPCM&quot;&gt;&lt;code&gt;DPCM&lt;/code&gt;&lt;/a&gt; are provided for indicating those units.</source>
          <target state="translated">해상도 속성 값은 교차 피드 방향 해상도와 피드 방향 해상도의 두 항목으로 구성됩니다. 2 개의 값을 제공하고 값이 측정되는 단위를 표시함으로써 해상도 속성이 구성 될 수있다. 값이 리턴되는 단위를 나타내는 분석 속성 값을 리턴하는 메소드가 제공됩니다. 가장 일반적인 두 가지 해상도 단위는 dpi (인치당 도트 수) 및 센티미터 당 도트 수 (dpcm)이며, 이러한 단위를 나타 내기 위해 내 보낸 상수 &lt;a href=&quot;resolutionsyntax#DPI&quot;&gt; &lt;code&gt;DPI&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;resolutionsyntax#DPCM&quot;&gt; &lt;code&gt;DPCM&lt;/code&gt; &lt;/a&gt; 이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="8d19983ed6e851519af2fba1e14038db814cbf99" translate="yes" xml:space="preserve">
          <source>A resource key for the description of this element. In conjunction with the &lt;code&gt;descriptionResourceBundleBaseName&lt;/code&gt;, this can be used to find a localized version of the description. The meaning of this field is defined by this specification but the field is not set or used by the JMX API itself.</source>
          <target state="translated">이 요소에 대한 설명을위한 리소스 키. &lt;code&gt;descriptionResourceBundleBaseName&lt;/code&gt; 과 함께 현지화 된 버전의 설명을 찾는 데 사용할 수 있습니다. 이 필드의 의미는이 스펙에서 정의되지만 JMX API 자체에서 필드를 설정하거나 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a1c92d012b2d6d045733551835589fbd0dda258c" translate="yes" xml:space="preserve">
          <source>A resource variable.</source>
          <target state="translated">자원 변수.</target>
        </trans-unit>
        <trans-unit id="7b1f23249fe7b4699a5516b95a8bf7b0e266b418" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;null&lt;/code&gt; does not</source>
          <target state="translated">반환 값 &lt;code&gt;null&lt;/code&gt; 가 되지 않습니다</target>
        </trans-unit>
        <trans-unit id="e67060fc3a5c293f1477fca093e79e4ac15cb79a" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;null&lt;/code&gt; does not &lt;em&gt;necessarily&lt;/em&gt; indicate that the map contains no mapping for the key; it's also possible that the map explicitly maps the key to &lt;code&gt;null&lt;/code&gt;. The &lt;a href=&quot;treemap#containsKey-java.lang.Object-&quot;&gt;&lt;code&gt;containsKey&lt;/code&gt;&lt;/a&gt; operation may be used to distinguish these two cases.</source>
          <target state="translated">반환 값 &lt;code&gt;null&lt;/code&gt; 가 되지 않습니다 &lt;em&gt;반드시&lt;/em&gt; 맵이 키의 매핑을 포함하지 않는 것을 나타냅니다; 맵이 키를 &lt;code&gt;null&lt;/code&gt; 에 명시 적으로 매핑 할 수도 있습니다 . &lt;a href=&quot;treemap#containsKey-java.lang.Object-&quot;&gt; &lt;code&gt;containsKey&lt;/code&gt; 의&lt;/a&gt; 작업은이 두 경우를 구별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="abc6e6f41022bd529fd1b135f0a016d0d7518def" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;true&lt;/code&gt; implies that it is highly likely that all of the data in this buffer is resident in physical memory and may therefore be accessed without incurring any virtual-memory page faults or I/O operations. A return value of &lt;code&gt;false&lt;/code&gt; does not necessarily imply that the buffer's content is not resident in physical memory.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 값을 리턴 하면이 버퍼의 모든 데이터가 실제 메모리에 상주하므로 가상 메모리 페이지 결함이나 I / O 조작없이 액세스 할 수 있음을 의미합니다. 반환 값이 &lt;code&gt;false&lt;/code&gt; 라고해서 반드시 버퍼의 내용이 실제 메모리에 상주하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="e09ce668b6b379eac10e99c1ee1b21763ceab49e" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;true&lt;/code&gt; is not an absolute guarantee of successful encoding; the encoding process may still produce errors due to factors such as I/O errors, inconsistent or malformed data structures, etc. The intent is that a reasonable inspection of the basic structure of the image be performed in order to determine if it is within the scope of the encoding format. For example, a service provider for a format that can only encode greyscale would return &lt;code&gt;false&lt;/code&gt; if handed an RGB &lt;code&gt;BufferedImage&lt;/code&gt;. Similarly, a service provider for a format that can encode 8-bit RGB imagery might refuse to encode an image with an associated alpha channel.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 값을 반환 한다고해서 성공적인 인코딩이 보장되는 것은 아닙니다. 인코딩 프로세스는 I / O 오류, 불일치 또는 잘못된 데이터 구조 등과 같은 요소로 인해 여전히 오류를 생성 할 수 있습니다. 인코딩 형식의 범위. 예를 들어, 그레이 스케일 만 인코딩 할 수있는 형식의 서비스 공급자 는 RGB &lt;code&gt;BufferedImage&lt;/code&gt; 를 전달하면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다. 마찬가지로 8 비트 RGB 이미지를 인코딩 할 수있는 형식의 서비스 공급자는 관련 알파 채널을 사용하여 이미지 인코딩을 거부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51198ce5afdd2d38acd4913a60836bf4bdde059f" translate="yes" xml:space="preserve">
          <source>A reusable synchronization barrier, similar in functionality to &lt;a href=&quot;cyclicbarrier&quot;&gt;&lt;code&gt;CyclicBarrier&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;countdownlatch&quot;&gt;&lt;code&gt;CountDownLatch&lt;/code&gt;&lt;/a&gt; but supporting more flexible usage.</source>
          <target state="translated">재사용 가능한 동기화 장벽으로 &lt;a href=&quot;cyclicbarrier&quot;&gt; &lt;code&gt;CyclicBarrier&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;countdownlatch&quot;&gt; &lt;code&gt;CountDownLatch&lt;/code&gt; &lt;/a&gt; 와 기능은 유사 하지만보다 유연한 사용을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="ceba2bc58203f255151640dbd994659d2a124026" translate="yes" xml:space="preserve">
          <source>A rule expressing how to create a transition.</source>
          <target state="translated">전환을 만드는 방법을 나타내는 규칙입니다.</target>
        </trans-unit>
        <trans-unit id="fbe2fbe6bac379ab6561e26f9691cc3c401e88ae" translate="yes" xml:space="preserve">
          <source>A rule implementation may or may not store full information about historic and future transitions, and the information stored is only as accurate as that supplied to the implementation by the rules provider. Applications should treat the data provided as representing the best information available to the implementation of this rule.</source>
          <target state="translated">규칙 구현은 기록 및 향후 전환에 대한 전체 정보를 저장하거나 저장하지 않을 수 있으며 저장된 정보는 규칙 공급자가 구현에 제공 한 정보만큼 정확합니다. 응용 프로그램은이 규칙을 구현하는 데 사용할 수있는 최상의 정보를 나타내는 것으로 제공된 데이터를 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="f28f01779dec56117901078530808f10f343aa0d" translate="yes" xml:space="preserve">
          <source>A runtime exception for Provider exceptions (such as misconfiguration errors or unrecoverable internal errors), which may be subclassed by Providers to throw specialized, provider-specific runtime errors.</source>
          <target state="translated">프로 바이더가 특수한 프로 바이더 별 런타임 오류를 발생시키기 위해 서브 클래 싱 할 수있는 프로 바이더 예외 (예 : 구성 오류 또는 복구 할 수없는 내부 오류)에 대한 런타임 예외.</target>
        </trans-unit>
        <trans-unit id="81c10e58416fe365c33722061e35ff0670d87792" translate="yes" xml:space="preserve">
          <source>A scalable concurrent &lt;a href=&quot;../navigableset&quot;&gt;&lt;code&gt;NavigableSet&lt;/code&gt;&lt;/a&gt; implementation based on a &lt;a href=&quot;concurrentskiplistmap&quot;&gt;&lt;code&gt;ConcurrentSkipListMap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;concurrentskiplistmap&quot;&gt; &lt;code&gt;ConcurrentSkipListMap&lt;/code&gt; 에&lt;/a&gt; 기반한 확장 가능한 동시 &lt;a href=&quot;../navigableset&quot;&gt; &lt;code&gt;NavigableSet&lt;/code&gt; &lt;/a&gt; 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="372f3a18469e872de04d341a2be746f10cb1c924" translate="yes" xml:space="preserve">
          <source>A scalable concurrent &lt;a href=&quot;../navigableset&quot;&gt;&lt;code&gt;NavigableSet&lt;/code&gt;&lt;/a&gt; implementation based on a &lt;a href=&quot;concurrentskiplistmap&quot;&gt;&lt;code&gt;ConcurrentSkipListMap&lt;/code&gt;&lt;/a&gt;. The elements of the set are kept sorted according to their &lt;a href=&quot;../../lang/comparable&quot;&gt;natural ordering&lt;/a&gt;, or by a &lt;a href=&quot;../comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; provided at set creation time, depending on which constructor is used.</source>
          <target state="translated">&lt;a href=&quot;concurrentskiplistmap&quot;&gt; &lt;code&gt;ConcurrentSkipListMap&lt;/code&gt; 에&lt;/a&gt; 기반한 확장 가능한 동시 &lt;a href=&quot;../navigableset&quot;&gt; &lt;code&gt;NavigableSet&lt;/code&gt; &lt;/a&gt; 구현입니다 . 세트의 요소 는 사용 된 생성자에 따라 &lt;a href=&quot;../../lang/comparable&quot;&gt;자연 순서&lt;/a&gt; 에 따라 또는 세트 작성 시간에 제공된 &lt;a href=&quot;../comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt; 에 따라 정렬되어 유지 됩니다.</target>
        </trans-unit>
        <trans-unit id="39408f44242f692b61c660267d1f4eb72674c1a2" translate="yes" xml:space="preserve">
          <source>A scalable concurrent &lt;a href=&quot;concurrentnavigablemap&quot;&gt;&lt;code&gt;ConcurrentNavigableMap&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">확장 가능한 동시 &lt;a href=&quot;concurrentnavigablemap&quot;&gt; &lt;code&gt;ConcurrentNavigableMap&lt;/code&gt; &lt;/a&gt; 구현입니다.</target>
        </trans-unit>
        <trans-unit id="d12e6fbfc6ba72b83d61bd03fcce224dcf14db27" translate="yes" xml:space="preserve">
          <source>A scalable concurrent &lt;a href=&quot;concurrentnavigablemap&quot;&gt;&lt;code&gt;ConcurrentNavigableMap&lt;/code&gt;&lt;/a&gt; implementation. The map is sorted according to the &lt;a href=&quot;../../lang/comparable&quot;&gt;natural ordering&lt;/a&gt; of its keys, or by a &lt;a href=&quot;../comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; provided at map creation time, depending on which constructor is used.</source>
          <target state="translated">확장 가능한 동시 &lt;a href=&quot;concurrentnavigablemap&quot;&gt; &lt;code&gt;ConcurrentNavigableMap&lt;/code&gt; &lt;/a&gt; 구현입니다. 맵 은 사용 된 생성자에 따라 키 의 &lt;a href=&quot;../../lang/comparable&quot;&gt;자연 순서&lt;/a&gt; 에 따라 또는 맵 생성시 제공된 &lt;a href=&quot;../comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt; 에 따라 정렬 됩니다.</target>
        </trans-unit>
        <trans-unit id="7f38edc3f196c2ee8906d274bacf229a64607e0e" translate="yes" xml:space="preserve">
          <source>A scanner can read text from any object which implements the &lt;a href=&quot;../lang/readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; interface. If an invocation of the underlying readable's &lt;a href=&quot;../lang/readable#read-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;Readable.read(java.nio.CharBuffer)&lt;/code&gt;&lt;/a&gt; method throws an &lt;a href=&quot;../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; then the scanner assumes that the end of the input has been reached. The most recent &lt;code&gt;IOException&lt;/code&gt; thrown by the underlying readable can be retrieved via the &lt;a href=&quot;scanner#ioException--&quot;&gt;&lt;code&gt;ioException()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">스캐너는 &lt;a href=&quot;../lang/readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt; 인터페이스 를 구현하는 모든 개체에서 텍스트를 읽을 수 있습니다. 기본이되는 readable. &lt;a href=&quot;../lang/readable#read-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;Readable.read(java.nio.CharBuffer)&lt;/code&gt; &lt;/a&gt; 메소드 의 호출이 &lt;a href=&quot;../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt; 을 Throw하면 (자) , 스캐너는 입력의 마지막에 이르렀다 고 가정합니다. 기본 읽기 가능 파일에 의해 발생 된 최신 &lt;code&gt;IOException&lt;/code&gt; 은 &lt;a href=&quot;scanner#ioException--&quot;&gt; &lt;code&gt;ioException()&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ffcbdc51bd89316399f57b450091b94d78f24a31" translate="yes" xml:space="preserve">
          <source>A scanner will default to interpreting numbers as decimal unless a different radix has been set by using the &lt;a href=&quot;scanner#useRadix-int-&quot;&gt;&lt;code&gt;useRadix(int)&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;scanner#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's radix to &lt;code&gt;10&lt;/code&gt; regardless of whether it was previously changed.</source>
          <target state="translated">&lt;a href=&quot;scanner#useRadix-int-&quot;&gt; &lt;code&gt;useRadix(int)&lt;/code&gt; &lt;/a&gt; 사용하여 다른 기수가 설정되어 있지 않으면 스캐너는 기본적으로 숫자를 10 진수로 해석합니다. 메소드를 . &lt;a href=&quot;scanner#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; 메소드는 스캐너의 기수의 값을 초기화한다 &lt;code&gt;10&lt;/code&gt; 에 상관없이 이전에 변경되었는지 여부.</target>
        </trans-unit>
        <trans-unit id="4823d12d1bfba50c42ac074f1c596841b76be69c" translate="yes" xml:space="preserve">
          <source>A scanner will never search more than &lt;code&gt;horizon&lt;/code&gt; code points beyond its current position. Note that a match may be clipped by the horizon; that is, an arbitrary match result may have been different if the horizon had been larger. The scanner treats the horizon as a transparent, non-anchoring bound (see &lt;a href=&quot;regex/matcher#useTransparentBounds-boolean-&quot;&gt;&lt;code&gt;Matcher.useTransparentBounds(boolean)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;regex/matcher#useAnchoringBounds-boolean-&quot;&gt;&lt;code&gt;Matcher.useAnchoringBounds(boolean)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">스캐너는 현재 위치를 넘어 &lt;code&gt;horizon&lt;/code&gt; 코드 포인트 이상을 검색하지 않습니다 . 경기는 수평선에 의해 잘릴 수 있습니다. 즉, 수평선이 더 크면 임의의 일치 결과가 다를 수 있습니다. 스캐너는 수평선을 투명하고 고정되지 않은 경계로 처리합니다 ( &lt;a href=&quot;regex/matcher#useTransparentBounds-boolean-&quot;&gt; &lt;code&gt;Matcher.useTransparentBounds(boolean)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;regex/matcher#useAnchoringBounds-boolean-&quot;&gt; &lt;code&gt;Matcher.useAnchoringBounds(boolean)&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="920c53cb62be380ece95aa01040d89688a85bb11" translate="yes" xml:space="preserve">
          <source>A scanner's locale affects many elements of its default primitive matching regular expressions; see &lt;a href=&quot;#localized-numbers&quot;&gt;localized numbers&lt;/a&gt; above.</source>
          <target state="translated">스캐너 로케일은 기본 기본 일치 정규식의 여러 요소에 영향을줍니다. 위의 &lt;a href=&quot;#localized-numbers&quot;&gt;현지화 된 숫자를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="de441a89b0a90c8710d2440914bdcf80aaf3748e" translate="yes" xml:space="preserve">
          <source>A scanner's radix affects elements of its default number matching regular expressions; see &lt;a href=&quot;#localized-numbers&quot;&gt;localized numbers&lt;/a&gt; above.</source>
          <target state="translated">스캐너의 기수는 정규식과 일치하는 기본 숫자의 요소에 영향을줍니다. 위의 &lt;a href=&quot;#localized-numbers&quot;&gt;현지화 된 숫자를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="463f9dc1adcec0b3ab8ad69db9ae10fbeb89d5de" translate="yes" xml:space="preserve">
          <source>A scanning operation may block waiting for input.</source>
          <target state="translated">스캔 작업으로 인해 입력 대기가 차단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3f0091492e10ac229bb434cc10a5fde50bc5549" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 프로그램 요소의 스캔 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="852306c9c7b8cbb47df106edc4f858eeb5e9d7a0" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 프로그램 요소의 스캔 방문자입니다 . &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 이 클래스의 메소드를 호출하여 그 구성 요소를 스캔 &lt;code&gt;scan&lt;/code&gt; 자신에 &lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;둘러싸인 소자&lt;/a&gt; , &lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;파라미터&lt;/a&gt; 개별 방법 규격에 표시된 바와 같이, 등. 서브 클래스는 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 메소드를 대체하여 방문 요소 순서를 제어 할 수 있습니다 . 스캐너의 클라이언트는 원하는 루트 객체에서 &lt;code&gt;v.visit(e, p)&lt;/code&gt; 아닌 &lt;code&gt;v.scan(e, p)&lt;/code&gt; 호출하여 원하는 동작을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3489191155cf64520e82e726b24cf95135015862" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 프로그램 요소의 스캔 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="668bcc88064b6a81b73a0380b603d056d1e1f1b0" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 프로그램 요소의 스캔 방문자입니다 . &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 이 클래스의 메소드를 호출하여 그 구성 요소를 스캔 &lt;code&gt;scan&lt;/code&gt; 자신에 &lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;둘러싸인 소자&lt;/a&gt; , &lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;파라미터&lt;/a&gt; 개별 방법 규격에 표시된 바와 같이, 등. 서브 클래스는 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 메소드를 대체하여 방문 요소 순서를 제어 할 수 있습니다 . 스캐너의 클라이언트는 원하는 루트 객체에서 &lt;code&gt;v.visit(e, p)&lt;/code&gt; 아닌 &lt;code&gt;v.scan(e, p)&lt;/code&gt; 호출하여 원하는 동작을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b9c02b84b9c03296e920e9a1becaeb673d23b06" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 프로그램 요소의 스캔 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="8fbec827facc498332d8a19639919f86b254ab3f" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 프로그램 요소의 스캔 방문자입니다 . &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 이 클래스의 메소드를 호출하여 그 구성 요소를 스캔 &lt;code&gt;scan&lt;/code&gt; 자신에 &lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;둘러싸인 소자&lt;/a&gt; , &lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;파라미터&lt;/a&gt; 개별 방법 규격에 표시된 바와 같이, 등. 서브 클래스는 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 메소드를 대체하여 방문 요소 순서를 제어 할 수 있습니다 . 스캐너의 클라이언트는 원하는 루트 객체에서 &lt;code&gt;v.visit(e, p)&lt;/code&gt; 아닌 &lt;code&gt;v.scan(e, p)&lt;/code&gt; 호출하여 원하는 동작을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b5c03eca2ae7ca372fa888d6c322d4d60b58c453" translate="yes" xml:space="preserve">
          <source>A second is represented by an integer from 0 to 61; the values 60 and 61 occur only for leap seconds and even then only in Java implementations that actually track leap seconds correctly. Because of the manner in which leap seconds are currently introduced, it is extremely unlikely that two leap seconds will occur in the same minute, but this specification follows the date and time conventions for ISO C.</source>
          <target state="translated">초는 0에서 61까지의 정수로 표시됩니다. 값 60과 61은 윤초 동안 만 발생하며 실제로 윤초를 정확하게 추적하는 Java 구현에서만 발생합니다. 현재 윤초가 도입되는 방식으로 인해 동일한 분에 2 초 윤초가 발생할 가능성은 거의 없지만이 사양은 ISO C의 날짜 및 시간 규칙을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="87438e78fd5bcd6ab505456e32aa2e20beacb314" translate="yes" xml:space="preserve">
          <source>A second reason that a throwable may have a cause is that the method that throws it must conform to a general-purpose interface that does not permit the method to throw the cause directly. For example, suppose a persistent collection conforms to the &lt;a href=&quot;../util/collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; interface, and that its persistence is implemented atop &lt;code&gt;java.io&lt;/code&gt;. Suppose the internals of the &lt;code&gt;add&lt;/code&gt; method can throw an &lt;a href=&quot;../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;. The implementation can communicate the details of the &lt;code&gt;IOException&lt;/code&gt; to its caller while conforming to the &lt;code&gt;Collection&lt;/code&gt; interface by wrapping the &lt;code&gt;IOException&lt;/code&gt; in an appropriate unchecked exception. (The specification for the persistent collection should indicate that it is capable of throwing such exceptions.)</source>
          <target state="translated">던질 수있는 원인이있을 수있는 두 번째 이유는 던지는 방법이 원인을 직접 던질 수없는 범용 인터페이스를 준수해야하기 때문입니다. 예를 들어, 지속적 콜렉션이 &lt;a href=&quot;../util/collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt; 인터페이스를 준수 하고 해당 지속성이 &lt;code&gt;java.io&lt;/code&gt; 위에 구현되었다고 가정하십시오 . &lt;code&gt;add&lt;/code&gt; 메소드 의 내부 에서 &lt;a href=&quot;../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; 이&lt;/a&gt; 발생할 수 있다고 가정하십시오 . 구현의 세부 사항 통신 할 수 &lt;code&gt;IOException&lt;/code&gt; 가 받는 부합하는 동안 호출자에 &lt;code&gt;Collection&lt;/code&gt; 인터페이스 포장에 의해 &lt;code&gt;IOException&lt;/code&gt; 가적절한 점검되지 않은 예외. (영구 컬렉션에 대한 사양은 그러한 예외를 던질 수 있음을 나타내야합니다.)</target>
        </trans-unit>
        <trans-unit id="a817d2be903587b47f518798cb8077cc06c4f5b5" translate="yes" xml:space="preserve">
          <source>A secret (symmetric) key.</source>
          <target state="translated">비밀 (대칭) 키.</target>
        </trans-unit>
        <trans-unit id="c237bbe6413c8ab00dab0a0e7d560d3daf37974b" translate="yes" xml:space="preserve">
          <source>A secret (symmetric) key. The purpose of this interface is to group (and provide type safety for) all secret key interfaces.</source>
          <target state="translated">비밀 (대칭) 키. 이 인터페이스의 목적은 모든 비밀 키 인터페이스를 그룹화 (및 유형 안전성을 제공)하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c3d2644a9159ed5f5bb5808e4cc0a44de2991792" translate="yes" xml:space="preserve">
          <source>A security provider for SaslClientFactory registers with the JCA Security Provider Framework keys of the form</source>
          <target state="translated">SaslClientFactory의 보안 제공자는 양식의 JCA 보안 제공자 프레임 워크 키에 등록합니다.</target>
        </trans-unit>
        <trans-unit id="49483787f2aaf0382ae93042774782d1f84f67d3" translate="yes" xml:space="preserve">
          <source>A security provider for SaslServerFactory registers with the JCA Security Provider Framework keys of the form</source>
          <target state="translated">SaslServerFactory의 보안 제공자는 양식의 JCA 보안 제공자 프레임 워크 키에 등록합니다.</target>
        </trans-unit>
        <trans-unit id="e3b98fbb0484864c2f0ee936ac85470708e6b590" translate="yes" xml:space="preserve">
          <source>A seekable byte channel is connected to an entity, typically a file, that contains a variable-length sequence of bytes that can be read and written. The current position can be &lt;a href=&quot;seekablebytechannel#position--&quot;&gt;&lt;code&gt;&lt;i&gt;queried&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt;&lt;code&gt;&lt;i&gt;modified&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;. The channel also provides access to the current</source>
          <target state="translated">검색 가능한 바이트 채널은 읽고 쓸 수있는 가변 길이의 바이트 시퀀스를 포함하는 엔티티 (일반적으로 파일)에 연결됩니다. 현재 위치를 &lt;a href=&quot;seekablebytechannel#position--&quot;&gt; &lt;code&gt;&lt;i&gt;queried&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 하고 &lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt; &lt;code&gt;&lt;i&gt;modified&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 수 있습니다 . 채널은 또한 현재에 대한 액세스를 제공합니다</target>
        </trans-unit>
        <trans-unit id="0dafd90c42f612ddec3147173ec7fc806e70baca" translate="yes" xml:space="preserve">
          <source>A seekable input stream interface for use by &lt;code&gt;ImageReader&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 에 의해 사용되는 검색 가능한 입력 스트림 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="ba782d2a1d637b5de1068ad44a37d773d8474b58" translate="yes" xml:space="preserve">
          <source>A seekable input stream interface for use by &lt;code&gt;ImageReader&lt;/code&gt;s. Various input sources, such as &lt;code&gt;InputStream&lt;/code&gt;s and &lt;code&gt;File&lt;/code&gt;s, as well as future fast I/O sources may be &quot;wrapped&quot; by a suitable implementation of this interface for use by the Image I/O API.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 에 의해 사용되는 검색 가능한 입력 스트림 인터페이스입니다 . 미래의 빠른 I / O 소스뿐만 아니라 &lt;code&gt;InputStream&lt;/code&gt; 및 &lt;code&gt;File&lt;/code&gt; 과 같은 다양한 입력 소스 는 Image I / O API에서 사용하기 위해이 인터페이스를 적절히 구현하여 &quot;랩핑&quot;될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="420b8375b8044645c2b87d9f7d013503ade55328" translate="yes" xml:space="preserve">
          <source>A seekable output stream interface for use by &lt;code&gt;ImageWriter&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; 에 의해 사용되는 검색 가능한 출력 스트림 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="0559d0aab7f214134c5d385a37d401994991c253" translate="yes" xml:space="preserve">
          <source>A seekable output stream interface for use by &lt;code&gt;ImageWriter&lt;/code&gt;s. Various output destinations, such as &lt;code&gt;OutputStream&lt;/code&gt;s and &lt;code&gt;File&lt;/code&gt;s, as well as future fast I/O destinations may be &quot;wrapped&quot; by a suitable implementation of this interface for use by the Image I/O API.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; 에 의해 사용되는 검색 가능한 출력 스트림 인터페이스입니다 . 향후 I / O 대상뿐만 아니라 &lt;code&gt;OutputStream&lt;/code&gt; 및 &lt;code&gt;File&lt;/code&gt; 과 같은 다양한 출력 대상 이 Image I / O API에서 사용하기 위해이 인터페이스의 적절한 구현으로 &quot;랩핑&quot;될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64d400f849295bb1951332f2c7b335031cd5c6d5" translate="yes" xml:space="preserve">
          <source>A selectable channel for datagram-oriented sockets.</source>
          <target state="translated">데이터 그램 지향 소켓을위한 선택 가능한 채널.</target>
        </trans-unit>
        <trans-unit id="294cc4bcb77e12b57025cbb0ece7e211718e94a6" translate="yes" xml:space="preserve">
          <source>A selectable channel for stream-oriented connecting sockets.</source>
          <target state="translated">스트림 지향 연결 소켓을위한 선택 가능한 채널.</target>
        </trans-unit>
        <trans-unit id="b728ffbec5c64eeb349e6de4c123ad56b7acf105" translate="yes" xml:space="preserve">
          <source>A selectable channel for stream-oriented listening sockets.</source>
          <target state="translated">스트림 지향 청취 소켓을위한 선택 가능한 채널.</target>
        </trans-unit>
        <trans-unit id="9362a7bc4fca8f31f56d56d236671209b1da656c" translate="yes" xml:space="preserve">
          <source>A selectable channel is either in</source>
          <target state="translated">선택 가능한 채널이</target>
        </trans-unit>
        <trans-unit id="636e98895c2a95d724549916a54492420384f6e4" translate="yes" xml:space="preserve">
          <source>A selectable channel's registration with a selector is represented by a &lt;a href=&quot;selectionkey&quot;&gt;&lt;code&gt;SelectionKey&lt;/code&gt;&lt;/a&gt; object. A selector maintains three sets of selection keys:</source>
          <target state="translated">셀렉터로 선택 가능한 채널의 등록은 &lt;a href=&quot;selectionkey&quot;&gt; &lt;code&gt;SelectionKey&lt;/code&gt; &lt;/a&gt; 객체로 표시됩니다 . 선택기는 세 가지 선택 키 세트를 유지 관리합니다.</target>
        </trans-unit>
        <trans-unit id="1ba1a20d34aca94b42a82eaad99a53440fc17d0c" translate="yes" xml:space="preserve">
          <source>A selection key contains two</source>
          <target state="translated">선택 키에는 두 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebb61dbc6918d903ead46334d746e8f148efb98c" translate="yes" xml:space="preserve">
          <source>A selection key is created each time a channel is registered with a selector. A key remains valid until it is</source>
          <target state="translated">셀렉터에 채널을 등록 할 때마다 선택 키가 생성됩니다. 키는 유효 할 때까지 유효합니다.</target>
        </trans-unit>
        <trans-unit id="81e316e458dc6a879ab3f16d5fd137968705200d" translate="yes" xml:space="preserve">
          <source>A selection of common adjustments is provided in &lt;a href=&quot;temporal/temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt;. These include finding the &quot;last day of the month&quot; and &quot;next Wednesday&quot;. Key date-time classes also implement the &lt;code&gt;TemporalAdjuster&lt;/code&gt; interface, such as &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;monthday&quot;&gt;&lt;code&gt;MonthDay&lt;/code&gt;&lt;/a&gt;. The adjuster is responsible for handling special cases, such as the varying lengths of month and leap years.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; &lt;/a&gt; 에서 공통 조정을 선택할 수 있습니다. 여기에는 &quot;매월 마지막 날&quot;과 &quot;다음 수요일&quot;찾기가 포함됩니다. 주요 날짜-시간 클래스는 &lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;monthday&quot;&gt; &lt;code&gt;MonthDay&lt;/code&gt; &lt;/a&gt; 와 같은 &lt;code&gt;TemporalAdjuster&lt;/code&gt; 인터페이스 도 구현합니다 . 조정자는 다양한 월 및 윤년과 같은 특수 사례를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="529eabf472953fee9eac462096b584cb588e3f87" translate="yes" xml:space="preserve">
          <source>A selector may be created by invoking the &lt;a href=&quot;selector#open--&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; method of this class, which will use the system's default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;selector provider&lt;/code&gt;&lt;/a&gt; to create a new selector. A selector may also be created by invoking the &lt;a href=&quot;spi/selectorprovider#openSelector--&quot;&gt;&lt;code&gt;openSelector&lt;/code&gt;&lt;/a&gt; method of a custom selector provider. A selector remains open until it is closed via its &lt;a href=&quot;selector#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 클래스 의 &lt;a href=&quot;selector#open--&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 &lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;selector provider&lt;/code&gt; &lt;/a&gt; 를 작성할 수 있습니다. 이 메소드는 시스템의 기본 선택기 제공자 를 사용하여 새 선택기를 작성합니다. 사용자 정의 선택기 제공자 의 &lt;a href=&quot;spi/selectorprovider#openSelector--&quot;&gt; &lt;code&gt;openSelector&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 선택기를 작성할 수도 있습니다 . 선택기는 &lt;a href=&quot;selector#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 방법을 통해 닫힐 때까지 열려 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8e91fb710d83f831c9944823f9ccb9a3dcf00f6" translate="yes" xml:space="preserve">
          <source>A selector provider is a concrete subclass of this class that has a zero-argument constructor and implements the abstract methods specified below. A given invocation of the Java virtual machine maintains a single system-wide default provider instance, which is returned by the &lt;a href=&quot;selectorprovider#provider--&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; method. The first invocation of that method will locate the default provider as specified below.</source>
          <target state="translated">선택자 제공자는 인수가 0 인 생성자가 있고 아래에 지정된 추상 메소드를 구현하는이 클래스의 구체적 서브 클래스입니다. Java 가상 머신의 지정된 호출은 단일 시스템 전체의 기본 제공자 인스턴스를 유지 보수하며 &lt;a href=&quot;selectorprovider#provider--&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt; 메소드에 의해 리턴됩니다 . 해당 메소드의 첫 번째 호출은 아래 지정된 기본 제공자를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="f16d692c1bed5dbaa178690d4f26577abbfa32bb" translate="yes" xml:space="preserve">
          <source>A selector that defines a set of criteria for selecting &lt;code&gt;CRL&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;CRL&lt;/code&gt; 선택을위한 일련의 기준을 정의하는 선택기 .</target>
        </trans-unit>
        <trans-unit id="96dcfefce65daa4016e98d79692d6ef1eadcc6d1" translate="yes" xml:space="preserve">
          <source>A selector that defines a set of criteria for selecting &lt;code&gt;CRL&lt;/code&gt;s. Classes that implement this interface are often used to specify which &lt;code&gt;CRL&lt;/code&gt;s should be retrieved from a &lt;code&gt;CertStore&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CRL&lt;/code&gt; 선택을위한 일련의 기준을 정의하는 선택기 . 이 인터페이스를 구현하는 클래스 는 &lt;code&gt;CertStore&lt;/code&gt; 로부터 검색 되는 &lt;code&gt;CRL&lt;/code&gt; 을 지정하는데 자주 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="5efa2476c58d33df64d3c36e52bfb9214af66291" translate="yes" xml:space="preserve">
          <source>A selector that defines a set of criteria for selecting &lt;code&gt;Certificate&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;Certificate&lt;/code&gt; 선택을위한 일련의 기준을 정의하는 선택기입니다 .</target>
        </trans-unit>
        <trans-unit id="1ef721d9efbaa77ffd30a26a6c943321c341cb56" translate="yes" xml:space="preserve">
          <source>A selector that defines a set of criteria for selecting &lt;code&gt;Certificate&lt;/code&gt;s. Classes that implement this interface are often used to specify which &lt;code&gt;Certificate&lt;/code&gt;s should be retrieved from a &lt;code&gt;CertStore&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Certificate&lt;/code&gt; 선택을위한 일련의 기준을 정의하는 선택기입니다 . 이 인터페이스를 구현하는 클래스 는 &lt;code&gt;CertStore&lt;/code&gt; 로부터 &lt;code&gt;Certificate&lt;/code&gt; 할 Certificate 를 지정하는데 자주 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="f22a4ab2da39ad855ad083364d5b62eb28dc3380" translate="yes" xml:space="preserve">
          <source>A selector's key and selected-key sets are not, in general, safe for use by multiple concurrent threads. If such a thread might modify one of these sets directly then access should be controlled by synchronizing on the set itself. The iterators returned by these sets' &lt;a href=&quot;../../util/set#iterator--&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; methods are</source>
          <target state="translated">선택기의 키와 선택한 키 세트는 일반적으로 여러 개의 동시 스레드에서 사용하기에 안전하지 않습니다. 그러한 스레드가 이러한 세트 중 하나를 직접 수정할 수있는 경우 세트 자체를 동기화하여 액세스를 제어해야합니다. 이 세트의 &lt;a href=&quot;../../util/set#iterator--&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 메소드가 리턴 한 반복자는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5b623b9a65e5387b97a4845cffc20bddeb53b2c2" translate="yes" xml:space="preserve">
          <source>A semaphore initialized to one, and which is used such that it only has at most one permit available, can serve as a mutual exclusion lock. This is more commonly known as a &lt;em&gt;binary semaphore&lt;/em&gt;, because it only has two states: one permit available, or zero permits available. When used in this way, the binary semaphore has the property (unlike many &lt;a href=&quot;locks/lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; implementations), that the &quot;lock&quot; can be released by a thread other than the owner (as semaphores have no notion of ownership). This can be useful in some specialized contexts, such as deadlock recovery.</source>
          <target state="translated">하나로 초기화 된 세마포어는 최대 하나의 허가 만 가질 수 있도록 사용되며 상호 배제 잠금 역할을 할 수 있습니다. 이것은 일반적으로 &lt;em&gt;2 개의 세마포어&lt;/em&gt; 로 알려져 있는데, 하나의 사용 가능한 허가 또는 0 개의 사용 가능한 허가의 두 가지 상태 만 있기 때문입니다. 이 방식으로 사용될 때, 이진 세마포어는 많은 &lt;a href=&quot;locks/lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt; 구현 과 달리이 속성을 가지고 있으며 , &quot;잠금&quot;은 소유자 이외의 스레드에 의해 해제 될 수 있습니다 (세마포어에는 소유권 개념이 없음). 교착 상태 복구와 같은 특수한 상황에서 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a4024ca87b0e41c736b446c52d375fe63e34854" translate="yes" xml:space="preserve">
          <source>A separator that is escaped or appears between non-escaped quotes is treated as an ordinary string and not a separator.</source>
          <target state="translated">이스케이프되지 않은 따옴표 사이에 이스케이프되거나 나타나는 구분 기호는 구분 기호가 아닌 일반 문자열로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="01b124416a0a30f20b408c560dfe65358649bfaf" translate="yes" xml:space="preserve">
          <source>A separator, quote or escape is escaped if preceded immediately (on the left) by the escape.</source>
          <target state="translated">이스케이프 바로 앞 (왼쪽)에 있으면 구분 기호, 따옴표 또는 이스케이프가 이스케이프됩니다.</target>
        </trans-unit>
        <trans-unit id="5c095fc1ea1ab99d90aeb7439bb40d6d0578ec8d" translate="yes" xml:space="preserve">
          <source>A sequence of elements supporting sequential and parallel aggregate operations.</source>
          <target state="translated">순차적 및 병렬 집계 작업을 지원하는 일련의 요소.</target>
        </trans-unit>
        <trans-unit id="74d541b5fb0fc977f7e96dec6427dfabfa44bb9f" translate="yes" xml:space="preserve">
          <source>A sequence of elements supporting sequential and parallel aggregate operations. The following example illustrates an aggregate operation using &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;intstream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">순차적 및 병렬 집계 작업을 지원하는 일련의 요소. 다음 예제는 &lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;intstream&quot;&gt; &lt;code&gt;IntStream&lt;/code&gt; 을&lt;/a&gt; 사용한 집계 작업을 보여 줍니다 .</target>
        </trans-unit>
        <trans-unit id="358da7cc7e138c726dddf5d6bf791a177ee226e4" translate="yes" xml:space="preserve">
          <source>A sequence of escaped octets is</source>
          <target state="translated">이스케이프 된 옥텟의 순서는</target>
        </trans-unit>
        <trans-unit id="3118269324fb4d8a0f521763d19e0c888308cb53" translate="yes" xml:space="preserve">
          <source>A sequence of paged-results can be abandoned by setting the pageSize to zero and setting the cookie to the last cookie received from the server.</source>
          <target state="translated">pageSize를 0으로 설정하고 쿠키를 서버에서받은 마지막 쿠키로 설정하여 일련의 페이지 결과를 버릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dab07824e99cfb5e02e843ed82bbe3b25e18cd89" translate="yes" xml:space="preserve">
          <source>A sequence of primitive double-valued elements supporting sequential and parallel aggregate operations.</source>
          <target state="translated">순차적 및 병렬 집계 작업을 지원하는 기본 이중 값 요소 시퀀스입니다.</target>
        </trans-unit>
        <trans-unit id="dd38ae6cbee6c6c6706f6ce740cdd0b1045aa7f7" translate="yes" xml:space="preserve">
          <source>A sequence of primitive double-valued elements supporting sequential and parallel aggregate operations. This is the &lt;code&gt;double&lt;/code&gt; primitive specialization of &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">순차적 및 병렬 집계 작업을 지원하는 기본 이중 값 요소 시퀀스입니다. 이것은 &lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;double&lt;/code&gt; 기본 전문입니다 .</target>
        </trans-unit>
        <trans-unit id="b0bc9099810c1c57955f5aca4c4eb7d70a76615d" translate="yes" xml:space="preserve">
          <source>A sequence of primitive int-valued elements supporting sequential and parallel aggregate operations.</source>
          <target state="translated">순차 및 병렬 집계 연산을 지원하는 기본 int 값 요소 시퀀스입니다.</target>
        </trans-unit>
        <trans-unit id="8fee8c2b13ede73fce1cfe060f8001dafa9861cb" translate="yes" xml:space="preserve">
          <source>A sequence of primitive int-valued elements supporting sequential and parallel aggregate operations. This is the &lt;code&gt;int&lt;/code&gt; primitive specialization of &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">순차 및 병렬 집계 연산을 지원하는 기본 int 값 요소 시퀀스입니다. 이것은 &lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;int&lt;/code&gt; 원시적 전문화입니다 .</target>
        </trans-unit>
        <trans-unit id="6de23a8a2d8e62c995b4c353905c0b49141b77cb" translate="yes" xml:space="preserve">
          <source>A sequence of primitive long-valued elements supporting sequential and parallel aggregate operations.</source>
          <target state="translated">순차 및 병렬 집계 연산을 지원하는 기본 값이 긴 요소 시퀀스.</target>
        </trans-unit>
        <trans-unit id="cc36d24e0030ab7c2344629316bea9f22cd8fbb5" translate="yes" xml:space="preserve">
          <source>A sequence of primitive long-valued elements supporting sequential and parallel aggregate operations. This is the &lt;code&gt;long&lt;/code&gt; primitive specialization of &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">순차 및 병렬 집계 연산을 지원하는 기본 값이 긴 요소 시퀀스. 이것은 &lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;long&lt;/code&gt; 원시 전문화입니다 .</target>
        </trans-unit>
        <trans-unit id="2cf40afdb4242b7b337744c3ab9d56c266f5d8f2" translate="yes" xml:space="preserve">
          <source>A sequence of the form &quot;</source>
          <target state="translated">&quot;&quot;형식의 순서</target>
        </trans-unit>
        <trans-unit id="a5efd38607b007cf2b67f23ed31a731c1e8122d7" translate="yes" xml:space="preserve">
          <source>A sequence of zero or more string &lt;em&gt;names&lt;/em&gt;.</source>
          <target state="translated">문자열 &lt;em&gt;이름&lt;/em&gt; 이 0 이상인 시퀀스 .</target>
        </trans-unit>
        <trans-unit id="620944fe500ad55b62f932ecb24120b5a1cd6b81" translate="yes" xml:space="preserve">
          <source>A sequencer's loop end point defaults to -1, meaning the end of the sequence.</source>
          <target state="translated">시퀀서의 루프 끝점은 기본적으로 -1로 설정되어 시퀀스의 끝을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="1eb517c15a6e4b5522f6f202e23a3b2d5ae47666" translate="yes" xml:space="preserve">
          <source>A sequencer's loop start point defaults to start of the sequence.</source>
          <target state="translated">시퀀서의 루프 시작점은 기본적으로 시퀀스가 ​​시작됩니다.</target>
        </trans-unit>
        <trans-unit id="5382e3c4e988e005dbe0a0c61116b3b66567fc0b" translate="yes" xml:space="preserve">
          <source>A sequential implementation of a reduction using a collector would create a single result container using the supplier function, and invoke the accumulator function once for each input element. A parallel implementation would partition the input, create a result container for each partition, accumulate the contents of each partition into a subresult for that partition, and then use the combiner function to merge the subresults into a combined result.</source>
          <target state="translated">콜렉터를 사용하여 순차적으로 축소를 구현하면 공급자 함수를 사용하여 단일 결과 컨테이너를 작성하고 각 입력 요소에 대해 누산기 함수를 한 번 호출합니다. 병렬 구현은 입력을 분할하고 각 파티션에 대한 결과 컨테이너를 생성하고 각 파티션의 내용을 해당 파티션에 대한 하위 결과로 누적 한 다음 결합기 함수를 사용하여 하위 결과를 결합 된 결과로 병합합니다.</target>
        </trans-unit>
        <trans-unit id="c4cb95a3c7de9058ef04032fddc913b35b387ce7" translate="yes" xml:space="preserve">
          <source>A server socket associated with this channel</source>
          <target state="translated">이 채널과 관련된 서버 소켓</target>
        </trans-unit>
        <trans-unit id="19b8fedb1f2e7f8b6be482b6484af0b393aefcd5" translate="yes" xml:space="preserve">
          <source>A server socket will have a channel if, and only if, the channel itself was created via the &lt;a href=&quot;../nio/channels/serversocketchannel#open--&quot;&gt;&lt;code&gt;ServerSocketChannel.open&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">서버 소켓은 채널 자체가 &lt;a href=&quot;../nio/channels/serversocketchannel#open--&quot;&gt; &lt;code&gt;ServerSocketChannel.open&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 작성된 경우에만 채널을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="217ca6ed6eb7e56975f986b6bacb1cc86c4191fb" translate="yes" xml:space="preserve">
          <source>A server such an LDAP server gets an instance of this class in order to perform authentication defined by a specific SASL mechanism. Invoking methods on the &lt;code&gt;SaslServer&lt;/code&gt; instance generates challenges according to the SASL mechanism implemented by the &lt;code&gt;SaslServer&lt;/code&gt;. As the authentication proceeds, the instance encapsulates the state of a SASL server's authentication exchange.</source>
          <target state="translated">LDAP 서버와 같은 서버는 특정 SASL 메커니즘으로 정의 된 인증을 수행하기 위해이 클래스의 인스턴스를 가져옵니다. 상의 메소드를 호출 &lt;code&gt;SaslServer&lt;/code&gt; 인스턴스 것은 의해 구현 SASL기구에있어서 문제를 발생 &lt;code&gt;SaslServer&lt;/code&gt; . 인증이 진행되면 인스턴스는 SASL 서버의 인증 교환 상태를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="249a63a83f63482c4009b60fb838c05f9e627d36" translate="yes" xml:space="preserve">
          <source>A server-socket channel is created by invoking the &lt;a href=&quot;serversocketchannel#open--&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; method of this class. It is not possible to create a channel for an arbitrary, pre-existing &lt;a href=&quot;../../net/serversocket&quot;&gt;&lt;code&gt;ServerSocket&lt;/code&gt;&lt;/a&gt;. A newly-created server-socket channel is open but not yet bound. An attempt to invoke the &lt;a href=&quot;serversocketchannel#accept--&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method of an unbound server-socket channel will cause a &lt;a href=&quot;notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; to be thrown. A server-socket channel can be bound by invoking one of the &lt;a href=&quot;serversocketchannel#bind-java.net.SocketAddress-int-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; methods defined by this class.</source>
          <target state="translated">서버 소켓 채널은 이 클래스 의 &lt;a href=&quot;serversocketchannel#open--&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 작성됩니다 . 임의의 기존 &lt;a href=&quot;../../net/serversocket&quot;&gt; &lt;code&gt;ServerSocket&lt;/code&gt; 에&lt;/a&gt; 대한 채널을 생성 할 수 없습니다 . 새로 작성된 서버 소켓 채널이 열려 있지만 아직 바인드되지 않았습니다. 언 바운드 서버 소켓 채널 의 &lt;a href=&quot;serversocketchannel#accept--&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하려고 하면 &lt;a href=&quot;notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. 이 클래스에 의해 정의 된 &lt;a href=&quot;serversocketchannel#bind-java.net.SocketAddress-int-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 메소드 중 하나를 호출하여 서버 소켓 채널을 바인드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ea781e133d496aaae66b4384fc8cf8471b5ed3e7" translate="yes" xml:space="preserve">
          <source>A service provided by the nesting BeanContext has been revoked. Subclasses may override this method in order to implement their own behaviors.</source>
          <target state="translated">중첩 BeanContext에서 제공 한 서비스가 취소되었습니다. 서브 클래스는 자신의 동작을 구현하기 위해이 메소드를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="650fe805b03811763c088b57de06f81516067f20" translate="yes" xml:space="preserve">
          <source>A service provider provides a subclass of &lt;code&gt;ReferralException&lt;/code&gt; by providing implementations for &lt;code&gt;getReferralInfo()&lt;/code&gt; and &lt;code&gt;getReferralContext()&lt;/code&gt; (and appropriate constructors and/or corresponding &quot;set&quot; methods).</source>
          <target state="translated">서비스 프로 바이더는 &lt;code&gt;getReferralInfo()&lt;/code&gt; 및 &lt;code&gt;getReferralContext()&lt;/code&gt; (및 적절한 생성자 및 / 또는 대응하는 「세트」메소드)의 구현을 제공하는 &lt;code&gt;ReferralException&lt;/code&gt; 의 서브 클래스를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="d4bc2d0b97b8b122ac6e9b670e174b403a866ed9" translate="yes" xml:space="preserve">
          <source>A service provider supports connection and context request controls in the following ways. Context request controls must be associated on a per context instance basis while connection request controls must be associated on a per connection instance basis. The service provider must look for the connection request controls in the environment property &quot;java.naming.ldap.control.connect&quot; and pass this environment property on to context instances that it creates.</source>
          <target state="translated">서비스 제공자는 다음과 같은 방식으로 연결 및 컨텍스트 요청 제어를 지원합니다. 컨텍스트 요청 컨트롤은 컨텍스트 인스턴스별로 연결되어야하지만 연결 요청 컨트롤은 연결 인스턴스별로 연결되어야합니다. 서비스 제공자는 환경 특성 &quot;java.naming.ldap.control.connect&quot;에서 연결 요청 제어를 찾고이 환경 특성을 작성된 컨텍스트 인스턴스에 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="21de0eefa91f1991f4ee8f78f789abc2d6a632c8" translate="yes" xml:space="preserve">
          <source>A service that decouples the production of new asynchronous tasks from the consumption of the results of completed tasks.</source>
          <target state="translated">완료된 작업의 결과를 소비하는 것과 새로운 비동기 작업의 생성을 분리하는 서비스입니다.</target>
        </trans-unit>
        <trans-unit id="4fc784edd2a04b2cf1ba0e1aff303c3c41157426" translate="yes" xml:space="preserve">
          <source>A service that decouples the production of new asynchronous tasks from the consumption of the results of completed tasks. Producers &lt;code&gt;submit&lt;/code&gt; tasks for execution. Consumers &lt;code&gt;take&lt;/code&gt; completed tasks and process their results in the order they complete. A &lt;code&gt;CompletionService&lt;/code&gt; can for example be used to manage asynchronous I/O, in which tasks that perform reads are submitted in one part of a program or system, and then acted upon in a different part of the program when the reads complete, possibly in a different order than they were requested.</source>
          <target state="translated">완료된 작업의 결과를 소비하는 것과 새로운 비동기 작업의 생성을 분리하는 서비스입니다. 생산자 는 실행할 작업을 &lt;code&gt;submit&lt;/code&gt; 합니다. 소비자 &lt;code&gt;take&lt;/code&gt; 완료된 작업을 수행하고 완료된 순서대로 결과를 처리합니다. &lt;code&gt;CompletionService&lt;/code&gt; 입니다은 예를 들어, 비동기 I / O를 관리하는 데 사용할 수있는가에 가능, 완벽한 읽을 때 프로그램의 다른 부분에 프로그램 또는 시스템의 한 부분으로 제출하고 행동 읽기를 수행 할 작업 그들이 요청한 것과 다른 순서.</target>
        </trans-unit>
        <trans-unit id="7bdaf453a964a1c776e674e18188b8bca8aaecb7" translate="yes" xml:space="preserve">
          <source>A session can be retrieved based on its session id, and all session id's in a &lt;code&gt;SSLSessionContext&lt;/code&gt; can be listed.</source>
          <target state="translated">세션 ID를 기반으로 세션을 검색 할 수 있으며 &lt;code&gt;SSLSessionContext&lt;/code&gt; 의 모든 세션 ID를 나열 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6646ee6a4df183df2ff9597fe94d2c392713265" translate="yes" xml:space="preserve">
          <source>A set containing one entry per MLET tag in the m-let text file loaded. Each entry specifies either the ObjectInstance for the created MBean, or a throwable object (that is, an error or an exception) if the MBean could not be created.</source>
          <target state="translated">로드 된 m-let 텍스트 파일에서 MLET 태그 당 하나의 항목을 포함하는 세트. 각 항목은 작성된 MBean의 ObjectInstance 또는 MBean을 작성할 수없는 경우 던질 수있는 오브젝트 (오류 또는 예외)를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="823c29ca4332f839f05f46d7bec1bff3ba2dfd93" translate="yes" xml:space="preserve">
          <source>A set containing the &lt;code&gt;ObjectInstance&lt;/code&gt; objects for the selected MBeans. If no MBean satisfies the query an empty list is returned.</source>
          <target state="translated">선택된 MBean에 대한 &lt;code&gt;ObjectInstance&lt;/code&gt; 객체를 포함하는 세트 . MBean이 쿼리를 만족하지 않으면 빈 목록이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="18f09420b43907da1e09c08ba83a8436b485f82a" translate="yes" xml:space="preserve">
          <source>A set containing the ObjectNames for the MBeans selected. If no MBean satisfies the query, an empty list is returned.</source>
          <target state="translated">선택된 MBean의 ObjectName를 포함한 세트입니다. MBean이 쿼리를 만족하지 않으면 빈 목록이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="4e23b85f028bc038f2d1717150dfac0e8f5e8889" translate="yes" xml:space="preserve">
          <source>A set of date fields that provide access to Julian Days.</source>
          <target state="translated">Julian Days에 대한 액세스를 제공하는 일련의 날짜 필드입니다.</target>
        </trans-unit>
        <trans-unit id="3817554a50f654a740b263526282ded9c6886b68" translate="yes" xml:space="preserve">
          <source>A set of methods alternatively take a &quot;msgSupplier&quot; instead of a &quot;msg&quot; argument. These methods take a &lt;a href=&quot;../function/supplier&quot;&gt;&lt;code&gt;Supplier&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;String&amp;gt;&lt;/code&gt; function which is invoked to construct the desired log message only when the message actually is to be logged based on the effective log level thus eliminating unnecessary message construction. For example, if the developer wants to log system health status for diagnosis, with the String-accepting version, the code would look like:</source>
          <target state="translated">메소드 세트는 &quot;msg&quot;인수 대신 &quot;msgSupplier&quot;를 사용합니다. 이러한 메소드는 &lt;a href=&quot;../function/supplier&quot;&gt; &lt;code&gt;Supplier&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;String&amp;gt;&lt;/code&gt; 함수를 사용하여 유효 로그 레벨을 기반으로 메시지가 실제로 로그 될 때만 원하는 로그 메시지를 구성하여 불필요한 메시지 구성을 제거합니다. 예를 들어, 개발자가 String-accepting 버전으로 진단을 위해 시스템 상태를 기록하려는 경우 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e66d63e3312e34b5660af451cc8fa239aa214c82" translate="yes" xml:space="preserve">
          <source>A set of the socket options supported by this channel</source>
          <target state="translated">이 채널이 지원하는 소켓 옵션 세트</target>
        </trans-unit>
        <trans-unit id="409fae66175b060955443e215504e840fd35b167" translate="yes" xml:space="preserve">
          <source>A shared superclass for the common functionality of &lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;constructor&quot;&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;constructor&quot;&gt; &lt;code&gt;Constructor&lt;/code&gt; &lt;/a&gt; 의 공통 기능을위한 공유 수퍼 클래스 .</target>
        </trans-unit>
        <trans-unit id="9b8b7e58b2a0c688355809db08681d6a34f0257c" translate="yes" xml:space="preserve">
          <source>A short buffer is not comparable to any other type of object.</source>
          <target state="translated">짧은 버퍼는 다른 유형의 객체와 비교할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="220cedae5cee73eb5e77033cce955a3ec7558f65" translate="yes" xml:space="preserve">
          <source>A short buffer is not equal to any other type of object.</source>
          <target state="translated">짧은 버퍼는 다른 유형의 객체와 같지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ac3d240d57cfeafb5db637c36dbd59837d8c439c" translate="yes" xml:space="preserve">
          <source>A short buffer.</source>
          <target state="translated">짧은 버퍼.</target>
        </trans-unit>
        <trans-unit id="0a0590d6a1827598168fafe48b6065118e07ebb4" translate="yes" xml:space="preserve">
          <source>A significant part of dealing with dates and times is the localization. This class acts as a central point for accessing the information.</source>
          <target state="translated">날짜와 시간을 다루는 데있어 중요한 부분은 현지화입니다. 이 클래스는 정보에 액세스하기위한 중심점 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="4ebcbcfb752d1d5a18e55afabc1c6fe6cefc14a1" translate="yes" xml:space="preserve">
          <source>A similar technique can be used to generate an</source>
          <target state="translated">비슷한 기술을 사용하여</target>
        </trans-unit>
        <trans-unit id="b81bc43037857ed85f56a7ae603dd69e2aeafc77" translate="yes" xml:space="preserve">
          <source>A similar technique can be used to generate an &lt;em&gt;open range&lt;/em&gt; (which contains neither endpoint). The following idiom obtains a view containing all of the key-value mappings in &lt;code&gt;m&lt;/code&gt; whose keys are between &lt;code&gt;low&lt;/code&gt; and &lt;code&gt;high&lt;/code&gt;, exclusive:</source>
          <target state="translated">유사한 기술을 사용하여 &lt;em&gt;개방 범위&lt;/em&gt; (끝점을 포함하지 않음) 를 생성 할 수 있습니다 . 다음 관용구의 키 값의 매핑을 모두 포함하는 뷰 취득 &lt;code&gt;m&lt;/code&gt; 키 사이 &lt;code&gt;low&lt;/code&gt; 및 &lt;code&gt;high&lt;/code&gt; , 배타적 :</target>
        </trans-unit>
        <trans-unit id="3d57dee7a20af84e7fe2e9596414a5131168b917" translate="yes" xml:space="preserve">
          <source>A similar, but simpler, situation occurs for the Japanese calendar system. The locale &quot;jp_JP_JP&quot; has previously been used to access the calendar. However, unlike the Thai locale, &quot;ja_JP_JP&quot; is automatically converted by &lt;code&gt;Locale&lt;/code&gt; to the modern and recommended form of &quot;ja-JP-u-ca-japanese&quot;. Thus, there is no difference in behavior between this method and &lt;code&gt;Calendar#getInstance(Locale)&lt;/code&gt;.</source>
          <target state="translated">일본어 달력 시스템에서도 비슷하지만 더 간단한 상황이 발생합니다. 로케일 &quot;jp_JP_JP&quot;는 이전에 달력에 액세스하는 데 사용되었습니다. 그러나, 타이어의 로케일과는 달리, &quot;ja_JP_JP&quot;이 자동으로 변환됩니다 &lt;code&gt;Locale&lt;/code&gt; &quot;에서 ja-JP-U-CA-일본어&quot;현대 권장 형성한다. 따라서이 메서드와 &lt;code&gt;Calendar#getInstance(Locale)&lt;/code&gt; 사이에는 동작에 차이가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="12a111d3d26ed80b7a5d0975eed77cb4f5b76771" translate="yes" xml:space="preserve">
          <source>A simple adjuster might simply set the one of the fields, such as the hour field. A more complex adjuster might set the time to the last hour of the day.</source>
          <target state="translated">간단한 조정자는 단순히 시간 필드와 같은 필드 중 하나를 설정할 수 있습니다. 더 복잡한 조정자가 시간을 하루 중 마지막 시간으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23a02b1085ad689bf3c6002c5e392214239fa5f6" translate="yes" xml:space="preserve">
          <source>A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the date to the last day of the month.</source>
          <target state="translated">간단한 조정자가 연도 필드와 같은 필드 중 하나를 간단하게 설정할 수 있습니다. 더 복잡한 조정자는 날짜를 해당 월의 마지막 날로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a318603867fd35924e66b179c67d0767587c5ec3" translate="yes" xml:space="preserve">
          <source>A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the date to the last day of the month. A selection of common adjustments is provided in &lt;a href=&quot;temporal/temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt;. These include finding the &quot;last day of the month&quot; and &quot;next Wednesday&quot;. Key date-time classes also implement the &lt;code&gt;TemporalAdjuster&lt;/code&gt; interface, such as &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;monthday&quot;&gt;&lt;code&gt;MonthDay&lt;/code&gt;&lt;/a&gt;. The adjuster is responsible for handling special cases, such as the varying lengths of month and leap years.</source>
          <target state="translated">간단한 조정자가 연도 필드와 같은 필드 중 하나를 간단하게 설정할 수 있습니다. 더 복잡한 조정자는 날짜를 해당 월의 마지막 날로 설정할 수 있습니다. &lt;a href=&quot;temporal/temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; &lt;/a&gt; 에서 공통 조정을 선택할 수 있습니다. 여기에는 &quot;매월 마지막 날&quot;과 &quot;다음 수요일&quot;찾기가 포함됩니다. 주요 날짜-시간 클래스는 &lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;monthday&quot;&gt; &lt;code&gt;MonthDay&lt;/code&gt; &lt;/a&gt; 와 같은 &lt;code&gt;TemporalAdjuster&lt;/code&gt; 인터페이스 도 구현합니다 . 조정자는 다양한 월 및 윤년과 같은 특수 사례를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="fa3fc5f3d04680138bbeab26dcb646d5fbc7391e" translate="yes" xml:space="preserve">
          <source>A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the year-month to the next month that Halley's comet will pass the Earth.</source>
          <target state="translated">간단한 조정자가 연도 필드와 같은 필드 중 하나를 간단하게 설정할 수 있습니다. 더 복잡한 조정자가 할리의 혜성이 지구를 통과하는 한 달을 다음 달로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9de12e02d5d783055af2cac617c1cf13b79e9aa4" translate="yes" xml:space="preserve">
          <source>A simple container class to aggregate an image, a set of thumbnail (preview) images, and an object representing metadata associated with the image.</source>
          <target state="translated">이미지, 썸네일 (미리보기) 이미지 세트 및 이미지와 연관된 메타 데이터를 나타내는 객체를 집계하는 간단한 컨테이너 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="af4d653de33053860dff4b70bc99a12fe289e16b" translate="yes" xml:space="preserve">
          <source>A simple filter interface used by &lt;code&gt;ServiceRegistry.getServiceProviders&lt;/code&gt; to select providers matching an arbitrary criterion.</source>
          <target state="translated">&lt;code&gt;ServiceRegistry.getServiceProviders&lt;/code&gt; 에서 임의 기준과 일치하는 공급자를 선택하기 위해 사용하는 간단한 필터 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="44205ac3fc78148a74f195a9ff2af55f58512ea8" translate="yes" xml:space="preserve">
          <source>A simple filter interface used by &lt;code&gt;ServiceRegistry.getServiceProviders&lt;/code&gt; to select providers matching an arbitrary criterion. Classes that implement this interface should be defined in order to make use of the &lt;code&gt;getServiceProviders&lt;/code&gt; method of &lt;code&gt;ServiceRegistry&lt;/code&gt; that takes a &lt;code&gt;Filter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ServiceRegistry.getServiceProviders&lt;/code&gt; 에서 임의 기준과 일치하는 공급자를 선택하기 위해 사용하는 간단한 필터 인터페이스 입니다. &lt;code&gt;Filter&lt;/code&gt; 를 취하는 &lt;code&gt;ServiceRegistry&lt;/code&gt; 의 &lt;code&gt;getServiceProviders&lt;/code&gt; 메소드를 사용하려면이 인터페이스를 구현하는 클래스를 정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="74fccd3ff6f46074f0af84c8344a7d990571dd3b" translate="yes" xml:space="preserve">
          <source>A simple implementation of Bindings backed by a &lt;code&gt;HashMap&lt;/code&gt; or some other specified &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;HashMap&lt;/code&gt; 또는 기타 지정된 &lt;code&gt;Map&lt;/code&gt; 에 의해 지원되는 간단한 바인딩 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="044c6c729ff49ba0ec97fdf1cefbf0c1c70b1c60" translate="yes" xml:space="preserve">
          <source>A simple interface which provides a mechanism to map between a file name and a MIME type string.</source>
          <target state="translated">파일 이름과 MIME 유형 문자열 사이를 매핑하는 메커니즘을 제공하는 간단한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="dacb2fcc771630cbdcbfdcac18166570cba477e7" translate="yes" xml:space="preserve">
          <source>A simple service-provider loading facility.</source>
          <target state="translated">간단한 서비스 제공 업체 로딩 시설.</target>
        </trans-unit>
        <trans-unit id="9897440ed3077a40719adee1662c352b9509dee5" translate="yes" xml:space="preserve">
          <source>A simple text scanner which can parse primitive types and strings using regular expressions.</source>
          <target state="translated">정규식을 사용하여 기본 유형과 문자열을 구문 분석 할 수있는 간단한 텍스트 스캐너입니다.</target>
        </trans-unit>
        <trans-unit id="b4993ee4561a785ce855a86900bd6ffb63898f32" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작의 주석 값에 대한 간단한 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="74d2b0cb45a8d6b85ec8418c78bfe850754e1244" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt;&lt;code&gt;defaultAction(java.lang.Object, P)&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작의 주석 값에 대한 간단한 방문자입니다 . 방문 메소드는 &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt; &lt;code&gt;defaultAction(java.lang.Object, P)&lt;/code&gt; &lt;/a&gt; 를 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="3a340b7d1f1ecb42981a58df07ae2fdd15745b96" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작의 주석 값에 대한 간단한 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="4b125219b094017b502ca392996fc23070ae3133" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작의 주석 값에 대한 간단한 방문자입니다 . 방문 메소드는 &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt; 을 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="ce1c8160aa409675b3e7293b8a25c0f8f37af5fa" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작의 주석 값에 대한 간단한 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="370ae61f068e3d0befb7ba82b76e41070cc91849" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작의 주석 값에 대한 간단한 방문자입니다 . 방문 메소드는 &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt; 을 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="adf4c935c49a215c1522962a622225250ad8f65f" translate="yes" xml:space="preserve">
          <source>A simple visitor of files with default behavior to visit all files and to re-throw I/O errors.</source>
          <target state="translated">모든 파일을 방문하고 I / O 오류를 다시 발생시키는 기본 동작을 가진 파일의 간단한 방문자입니다.</target>
        </trans-unit>
        <trans-unit id="fb2d80e9354651a601d59bd203681f6387e39885" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 간단한 프로그램 요소 방문자 .</target>
        </trans-unit>
        <trans-unit id="dfd6c813f680eb0eb2b148ef59c82b8c4e4359c4" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_6&lt;/code&gt; language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters. For constructs introduced in &lt;code&gt;RELEASE_7&lt;/code&gt; and later, &lt;code&gt;visitUnknown&lt;/code&gt; is called instead.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 간단한 프로그램 요소 방문자 . &lt;code&gt;RELEASE_6&lt;/code&gt; 언어에 해당하는 방문 메소드 는 &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 . &lt;code&gt;RELEASE_7&lt;/code&gt; 이상 에서 도입 된 구문의 경우 &lt;code&gt;visitUnknown&lt;/code&gt; 이 대신 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="e3373e9dccc63693aae9881930a32a20b82e9811" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 간단한 프로그램 요소 방문자 .</target>
        </trans-unit>
        <trans-unit id="5a9e01744c954dab0e145fbb2c53749ff339a922" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_7&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 간단한 프로그램 요소 방문자 . &lt;code&gt;RELEASE_7&lt;/code&gt; 및 이전 언어 구성에 해당하는 방문 메소드 는 &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="b099cc857f551b44dc082f6a80406e3138ee957d" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 간단한 프로그램 요소 방문자 .</target>
        </trans-unit>
        <trans-unit id="e7d6a229b08e1e44605fe070804b3ddce33409b5" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_7&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 간단한 프로그램 요소 방문자 . &lt;code&gt;RELEASE_7&lt;/code&gt; 및 이전 언어 구성에 해당하는 방문 메소드 는 &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="bd6b288f070274c1f886b7e33f653c4e09d1dc67" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 단순 유형 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="14f78ab027f770fa626cdd8b7cc1dd584ae81dc9" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_6&lt;/code&gt; language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters. For constructs introduced in &lt;code&gt;RELEASE_7&lt;/code&gt; and later, &lt;code&gt;visitUnknown&lt;/code&gt; is called instead.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 단순 유형 방문자입니다 . &lt;code&gt;RELEASE_6&lt;/code&gt; 언어에 해당하는 방문 메소드 는 &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 . &lt;code&gt;RELEASE_7&lt;/code&gt; 에 도입 된 구문 이상 경우 &lt;code&gt;visitUnknown&lt;/code&gt; 이 대신 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="12025ce7a60019adcb9c20a5090ddc6e37570ea8" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작을 가진 단순 유형 방문자 소스 버전에 .</target>
        </trans-unit>
        <trans-unit id="849853eaa5c273ebf168ac87e3f6a56a25686a1c" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_7&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 단순 유형 방문자입니다 . &lt;code&gt;RELEASE_7&lt;/code&gt; 및 이전 언어 구성에 해당하는 방문 메소드 는 &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="25f34fa41739f34143ba43abe69ed1d5a4dc9fcb" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_8&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 단순 유형 방문자입니다 . &lt;code&gt;RELEASE_8&lt;/code&gt; 및 이전 언어 구성에 해당하는 방문 메소드 는 &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="37f2833a23b911df059b18a6bb18e4f13e04daa4" translate="yes" xml:space="preserve">
          <source>A single switch point may be used to control any number of method handles. (Indirectly, therefore, it can control any number of call sites.) This is done by using the single switch point as a factory for combining any number of guarded method handle pairs into guarded delegators.</source>
          <target state="translated">단일 스위치 포인트를 사용하여 여러 메소드 핸들을 제어 할 수 있습니다. (따라서 간접적으로, 그것은 많은 호출 사이트를 제어 할 수 있습니다.) 이것은 하나의 스위치 포인트를 팩토리로 사용하여 보호 된 메소드 핸들 쌍을 보호 된 위임자로 결합하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="d7c2fd6b3301b8d285d0ce1608b58da62b7dae7d" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;package&lt;/code&gt; access (default access), which may contribute to the result of &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value is &lt;code&gt;0x08&lt;/code&gt;, which does not correspond meaningfully to any particular &lt;a href=&quot;../reflect/modifier&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 기여할 수있는 &lt;code&gt;package&lt;/code&gt; 액세스 (기본 액세스)를 나타내는 단일 비트 마스크 입니다. 값은 &lt;code&gt;0x08&lt;/code&gt; 이며 특정 &lt;a href=&quot;../reflect/modifier&quot;&gt;수정 자 비트&lt;/a&gt; 와 의미가 일치하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="aab2c145c9e99fcde58657d8b8993565ce707011" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;private&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value, &lt;code&gt;0x02&lt;/code&gt;, happens to be the same as the value of the &lt;code&gt;private&lt;/code&gt;&lt;a href=&quot;../reflect/modifier#PRIVATE&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 영향을 줄 수있는 &lt;code&gt;private&lt;/code&gt; 액세스를 나타내는 단일 비트 마스크 . 값 &lt;code&gt;0x02&lt;/code&gt; 는 &lt;code&gt;private&lt;/code&gt; &lt;a href=&quot;../reflect/modifier#PRIVATE&quot;&gt;수정 자 비트&lt;/a&gt; 의 값과 같습니다. .</target>
        </trans-unit>
        <trans-unit id="75861a8addccd707397aa313351031da0f3eeb06" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;protected&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value, &lt;code&gt;0x04&lt;/code&gt;, happens to be the same as the value of the &lt;code&gt;protected&lt;/code&gt;&lt;a href=&quot;../reflect/modifier#PROTECTED&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 영향을 줄 수있는 &lt;code&gt;protected&lt;/code&gt; 액세스를 나타내는 단일 비트 마스크 . 값 &lt;code&gt;0x04&lt;/code&gt; 상기의 값과 동일하게 발생하는 &lt;code&gt;protected&lt;/code&gt; &lt;a href=&quot;../reflect/modifier#PROTECTED&quot;&gt;변경자 비트&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="33a784f92c517ec5da50f4e97141428b4852cfe0" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;public&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value, &lt;code&gt;0x01&lt;/code&gt;, happens to be the same as the value of the &lt;code&gt;public&lt;/code&gt;&lt;a href=&quot;../reflect/modifier#PUBLIC&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 기여할 수있는 &lt;code&gt;public&lt;/code&gt; 액세스를 나타내는 단일 비트 마스크 . 값 &lt;code&gt;0x01&lt;/code&gt; 은 &lt;code&gt;public&lt;/code&gt; &lt;a href=&quot;../reflect/modifier#PUBLIC&quot;&gt;수정 자 비트&lt;/a&gt; 의 값과 같습니다. .</target>
        </trans-unit>
        <trans-unit id="ed214545845c4b26dd59fcb0bad818698aade4f2" translate="yes" xml:space="preserve">
          <source>A single-element array, initially containing &lt;code&gt;ImageInputStream.class&lt;/code&gt;, to be returned from &lt;code&gt;getInputTypes&lt;/code&gt;.</source>
          <target state="translated">초기에 포함하는 단일 요소 배열 &lt;code&gt;ImageInputStream.class&lt;/code&gt; 로부터 반환되는 &lt;code&gt;getInputTypes&lt;/code&gt; 로 .</target>
        </trans-unit>
        <trans-unit id="f0e479a9e928d59e951c78a85ad7039004c2e049" translate="yes" xml:space="preserve">
          <source>A single-element array, initially containing &lt;code&gt;ImageOutputStream.class&lt;/code&gt;, to be returned from &lt;code&gt;getOutputTypes&lt;/code&gt;.</source>
          <target state="translated">초기에 포함하는 단일 요소의 배열, &lt;code&gt;ImageOutputStream.class&lt;/code&gt; 는 로부터 반환되는 &lt;code&gt;getOutputTypes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aefe0d2395a63e490922c441c227d14b1061d43a" translate="yes" xml:space="preserve">
          <source>A single-method interface is an interface which declares a uniquely named method. When determining the uniquely named method of a single-method interface, the public &lt;code&gt;Object&lt;/code&gt; methods (&lt;code&gt;toString&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;hashCode&lt;/code&gt;) are disregarded. For example, &lt;a href=&quot;../../util/comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; is a single-method interface, even though it re-declares the &lt;code&gt;Object.equals&lt;/code&gt; method.</source>
          <target state="translated">단일 메소드 인터페이스는 고유 한 이름의 메소드를 선언하는 인터페이스입니다. 단일 메소드 인터페이스의 고유 한 이름 지정된 메소드를 판별 할 때 공용 &lt;code&gt;Object&lt;/code&gt; 메소드 ( &lt;code&gt;toString&lt;/code&gt; , &lt;code&gt;equals&lt;/code&gt; , &lt;code&gt;hashCode&lt;/code&gt; )는 무시됩니다. 예를 들어 &lt;a href=&quot;../../util/comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;Object.equals&lt;/code&gt; 메서드를 다시 선언하더라도 단일 메서드 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="f9756371d6371d1875d5c52f3bf36b1d5637b9b5" translate="yes" xml:space="preserve">
          <source>A size .</source>
          <target state="translated">크기입니다.</target>
        </trans-unit>
        <trans-unit id="5e4099f3970266bb2672ded3b9721ca4be35f299" translate="yes" xml:space="preserve">
          <source>A skeletal visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 어노테이션 값의 골격 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="fe7dbc5fcfbb5518a6b2081de359d0acd5e86643" translate="yes" xml:space="preserve">
          <source>A skeletal visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작의 주석 값에 대한 골격 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="a2017f2e2ac05aab0d403430f762896858b4c682" translate="yes" xml:space="preserve">
          <source>A skeletal visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 주석 값에 대한 골격 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="9307a4ceb72047be9ae3a464dbe44f28b90d69c5" translate="yes" xml:space="preserve">
          <source>A skeletal visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 프로그램 요소의 골격 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="3278982ce3a0d89dd554e31ba1ce085478d3a6b9" translate="yes" xml:space="preserve">
          <source>A skeletal visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 프로그램 요소의 골격 방문자 .</target>
        </trans-unit>
        <trans-unit id="1b223a614c421d2601113b086894e657c8559978" translate="yes" xml:space="preserve">
          <source>A skeletal visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 프로그램 요소의 골격 방문자 .</target>
        </trans-unit>
        <trans-unit id="c99f60fd511f2c8ae0a0571a970bd393c978acef" translate="yes" xml:space="preserve">
          <source>A skeletal visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 유형의 골격 방문자 .</target>
        </trans-unit>
        <trans-unit id="c456378d5401b0103f60f735b417ee2a8997eea5" translate="yes" xml:space="preserve">
          <source>A skeletal visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 유형의 골격 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="8f9c75545b9c54baa317d6cf1ef93251b7ba46aa" translate="yes" xml:space="preserve">
          <source>A skeletal visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작을 가진 유형의 골격 방문자 소스 버전에 .</target>
        </trans-unit>
        <trans-unit id="6f523c1601fe9d3ec05661481a921ebcba24760b" translate="yes" xml:space="preserve">
          <source>A slave synchronization mode indicating that no timing information should be sent to the receiver. This is not a legal master sync mode.</source>
          <target state="translated">타이밍 정보가 수신기로 전송되지 않아야 함을 나타내는 슬레이브 동기화 모드. 이것은 올바른 마스터 동기화 모드가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="235837953a95d0ee1e23c7d3e5323efc8b89ad80" translate="yes" xml:space="preserve">
          <source>A small number of Java methods have a special property called caller sensitivity. A &lt;em&gt;caller-sensitive&lt;/em&gt; method can behave differently depending on the identity of its immediate caller.</source>
          <target state="translated">소수의 Java 메소드에는 호출자 민감도라는 특수 특성이 있습니다. &lt;em&gt;발신자에 민감한&lt;/em&gt; 방법은 직접 실행 호출자의 신원에 따라 다르게 동작 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26b48e63383c94641c1601c2f66ccc5bbf578039" translate="yes" xml:space="preserve">
          <source>A small toolkit of classes that support lock-free thread-safe programming on single variables.</source>
          <target state="translated">단일 변수에서 잠금없는 스레드 안전 프로그래밍을 지원하는 작은 클래스의 툴킷입니다.</target>
        </trans-unit>
        <trans-unit id="9dcf5287dfade3f453189fae045005b450891939" translate="yes" xml:space="preserve">
          <source>A small toolkit of classes that support lock-free thread-safe programming on single variables. In essence, the classes in this package extend the notion of &lt;code&gt;volatile&lt;/code&gt; values, fields, and array elements to those that also provide an atomic conditional update operation of the form:</source>
          <target state="translated">단일 변수에서 잠금없는 스레드 안전 프로그래밍을 지원하는 작은 클래스의 툴킷입니다. 본질적으로이 패키지의 클래스는 &lt;code&gt;volatile&lt;/code&gt; 값, 필드 및 배열 요소 의 개념을 다음 과 같은 형식의 원자 조건부 업데이트 작업을 제공하는 개념으로 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="985b5dcff0e29cb7fcd379bc33e5fde1679bfb6b" translate="yes" xml:space="preserve">
          <source>A socket associated with this channel</source>
          <target state="translated">이 채널과 관련된 소켓</target>
        </trans-unit>
        <trans-unit id="99703bb4ed8af8b61476a9c6f9e0fd0d00572c0c" translate="yes" xml:space="preserve">
          <source>A socket channel is created by invoking one of the &lt;a href=&quot;socketchannel#open--&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods of this class. It is not possible to create a channel for an arbitrary, pre-existing socket. A newly-created socket channel is open but not yet connected. An attempt to invoke an I/O operation upon an unconnected channel will cause a &lt;a href=&quot;notyetconnectedexception&quot;&gt;&lt;code&gt;NotYetConnectedException&lt;/code&gt;&lt;/a&gt; to be thrown. A socket channel can be connected by invoking its &lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method; once connected, a socket channel remains connected until it is closed. Whether or not a socket channel is connected may be determined by invoking its &lt;a href=&quot;socketchannel#isConnected--&quot;&gt;&lt;code&gt;isConnected&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">소켓 채널은 이 클래스 의 &lt;a href=&quot;socketchannel#open--&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 메소드 중 하나를 호출하여 작성됩니다 . 임의의 기존 소켓에 대한 채널을 생성 할 수 없습니다. 새로 작성된 소켓 채널이 열려 있지만 아직 연결되지 않았습니다. 연결되지 않은 채널에서 I / O 작업을 호출하려고하면 &lt;a href=&quot;notyetconnectedexception&quot;&gt; &lt;code&gt;NotYetConnectedException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. 소켓 채널은 &lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 방법 을 호출하여 연결할 수 있습니다 . 일단 연결되면 소켓 채널은 닫힐 때까지 연결된 상태로 유지됩니다. 소켓 채널의 연결 여부는 &lt;a href=&quot;socketchannel#isConnected--&quot;&gt; &lt;code&gt;isConnected&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 판별 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a5309f5dfedcbc87faa41850548a960fac45243" translate="yes" xml:space="preserve">
          <source>A socket channel may be created and the process of establishing the link to the remote socket may be initiated via the &lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method for later completion by the &lt;a href=&quot;socketchannel#finishConnect--&quot;&gt;&lt;code&gt;finishConnect&lt;/code&gt;&lt;/a&gt; method. Whether or not a connection operation is in progress may be determined by invoking the &lt;a href=&quot;socketchannel#isConnectionPending--&quot;&gt;&lt;code&gt;isConnectionPending&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">소켓 채널이 생성 될 수 있고, 원격 소켓에 대한 링크를 수립하는 프로세스가 개시 될 수있다 통해 &lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 바이 나중에 완성 방법 &lt;a href=&quot;socketchannel#finishConnect--&quot;&gt; &lt;code&gt;finishConnect&lt;/code&gt; &lt;/a&gt; 방법. 연결 작업이 진행 중인지 여부는 &lt;a href=&quot;socketchannel#isConnectionPending--&quot;&gt; &lt;code&gt;isConnectionPending&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하여 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a393c47a8f9a22158a545116e82751665622c8aa" translate="yes" xml:space="preserve">
          <source>A socket option associated with a socket.</source>
          <target state="translated">소켓과 관련된 소켓 옵션.</target>
        </trans-unit>
        <trans-unit id="a13675b56733c412c2034f1ffc2b8b7c360d4545" translate="yes" xml:space="preserve">
          <source>A socket will have a channel if, and only if, the channel itself was created via the &lt;a href=&quot;../nio/channels/socketchannel#open--&quot;&gt;&lt;code&gt;SocketChannel.open&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../nio/channels/serversocketchannel#accept--&quot;&gt;&lt;code&gt;ServerSocketChannel.accept&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">소켓 채널은 &lt;a href=&quot;../nio/channels/socketchannel#open--&quot;&gt; &lt;code&gt;SocketChannel.open&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../nio/channels/serversocketchannel#accept--&quot;&gt; &lt;code&gt;ServerSocketChannel.accept&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 채널 자체가 작성된 경우에만 채널을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="db9b7f9419f57856a156605079d80126ad125b93" translate="yes" xml:space="preserve">
          <source>A socket's client authentication setting is one of the following:</source>
          <target state="translated">소켓의 클라이언트 인증 설정은 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="c13e40d7ca0d3fa87f01536ebe19e0b616da73dc" translate="yes" xml:space="preserve">
          <source>A sort key and its associated sort parameters.</source>
          <target state="translated">정렬 키 및 관련 정렬 매개 변수</target>
        </trans-unit>
        <trans-unit id="48e11c9e35a542756e81bed3454c445f9326a2fe" translate="yes" xml:space="preserve">
          <source>A sort key and its associated sort parameters. This class implements a sort key which is used by the LDAPv3 Control for server-side sorting of search results as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2891.txt&quot;&gt;RFC 2891&lt;/a&gt;.</source>
          <target state="translated">정렬 키 및 관련 정렬 매개 변수 이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2891.txt&quot;&gt;RFC 2891에&lt;/a&gt; 정의 된 검색 결과의 서버 측 정렬을 위해 LDAPv3 컨트롤에서 사용하는 정렬 키를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="6b62a9d075ce030a412d1107aeb16696cb74e792" translate="yes" xml:space="preserve">
          <source>A sorted association of option key strings to option values.</source>
          <target state="translated">옵션 키 문자열과 옵션 값의 정렬 된 연관.</target>
        </trans-unit>
        <trans-unit id="7073b3a5b7697daf9a650c291579d5d189e62349" translate="yes" xml:space="preserve">
          <source>A sorted association of property key strings to property values.</source>
          <target state="translated">특성 키 문자열과 특성 값의 정렬 된 연관.</target>
        </trans-unit>
        <trans-unit id="cbf82458abb32b6ed8e7db9444e599b22a05c148" translate="yes" xml:space="preserve">
          <source>A source data line can be obtained from a mixer by invoking the &lt;code&gt;&lt;a href=&quot;mixer#getLine-javax.sound.sampled.Line.Info-&quot;&gt;&lt;code&gt;getLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;Mixer&lt;/code&gt; with an appropriate &lt;code&gt;&lt;a href=&quot;dataline.info&quot;&gt;&lt;code&gt;DataLine.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">적절한 &lt;code&gt;&lt;a href=&quot;dataline.info&quot;&gt;&lt;code&gt;DataLine.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 객체 로 &lt;code&gt;Mixer&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;mixer#getLine-javax.sound.sampled.Line.Info-&quot;&gt;&lt;code&gt;getLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드를 호출하여 믹서에서 소스 데이터 라인을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="575b867ae75ecc7b05fd19afeffea2d89677bbbd" translate="yes" xml:space="preserve">
          <source>A source data line is a data line to which data may be written.</source>
          <target state="translated">소스 데이터 라인은 데이터가 기록 될 수있는 데이터 라인이다.</target>
        </trans-unit>
        <trans-unit id="5e112703567fcba8cae6b94642cff0db67da8d8c" translate="yes" xml:space="preserve">
          <source>A source data line is a data line to which data may be written. It acts as a source to its mixer. An application writes audio bytes to a source data line, which handles the buffering of the bytes and delivers them to the mixer. The mixer may mix the samples with those from other sources and then deliver the mix to a target such as an output port (which may represent an audio output device on a sound card).</source>
          <target state="translated">소스 데이터 라인은 데이터가 기록 될 수있는 데이터 라인이다. 믹서의 소스 역할을합니다. 응용 프로그램은 오디오 데이터를 소스 데이터 라인에 기록합니다. 소스 데이터 라인은 바이트의 버퍼링을 처리하여 믹서로 전달합니다. 믹서는 샘플을 다른 소스의 샘플과 혼합 한 다음 출력 포트 (사운드 카드의 오디오 출력 장치를 나타낼 수 있음)와 같은 대상으로 믹스를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d54e774e9f0e630725603e8821ce3919e0687286" translate="yes" xml:space="preserve">
          <source>A space</source>
          <target state="translated">우주</target>
        </trans-unit>
        <trans-unit id="ab4f5f83b17bc6fc8d4185144ac6f76006a6fb22" translate="yes" xml:space="preserve">
          <source>A space or a tab: &lt;code&gt;[ \t]&lt;/code&gt;</source>
          <target state="translated">공백 또는 탭 : &lt;code&gt;[ \t]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f66c7cc9d6d602b85e47a0893212f830415160c" translate="yes" xml:space="preserve">
          <source>A space or a tab: &lt;code&gt;[\p{IsWhite_Space}&amp;amp;&amp;amp;[^\p{gc=Zl}\p{gc=Zp}\x0a\x0b\x0c\x0d\x85]]&lt;/code&gt;</source>
          <target state="translated">공백 또는 탭 : &lt;code&gt;[\p{IsWhite_Space}&amp;amp;&amp;amp;[^\p{gc=Zl}\p{gc=Zp}\x0a\x0b\x0c\x0d\x85]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="00db6ce2c8b2b78da46fe93e5c2cd1a31ae2887f" translate="yes" xml:space="preserve">
          <source>A special &lt;a href=&quot;linkedhashmap#LinkedHashMap-int-float-boolean-&quot;&gt;&lt;code&gt;constructor&lt;/code&gt;&lt;/a&gt; is provided to create a linked hash map whose order of iteration is the order in which its entries were last accessed, from least-recently accessed to most-recently (</source>
          <target state="translated">반복 순서가 항목이 마지막으로 액세스 된 순서에서 가장 최근에 액세스 한 순서에서 가장 최근에 연결된 순서 인 링크 된 해시 맵을 작성하기 위해 특수 &lt;a href=&quot;linkedhashmap#LinkedHashMap-int-float-boolean-&quot;&gt; &lt;code&gt;constructor&lt;/code&gt; &lt;/a&gt; 가 제공됩니다 (</target>
        </trans-unit>
        <trans-unit id="062c9646342de2d0d23168970b64bed6ffdbbc73" translate="yes" xml:space="preserve">
          <source>A special event to indicate that events may have been lost or discarded.</source>
          <target state="translated">이벤트가 손실되거나 버려 졌음을 나타내는 특수 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="64ac2a626257a602e225ffa64bccb317b0cb67c5" translate="yes" xml:space="preserve">
          <source>A specialized &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; implementation for use with enum type keys.</source>
          <target state="translated">열거 형 키와 함께 사용하기위한 특수한 &lt;a href=&quot;map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; 구현입니다.</target>
        </trans-unit>
        <trans-unit id="ef7144d5d12fa85ba778d98c73438a61a7d801da" translate="yes" xml:space="preserve">
          <source>A specialized &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; implementation for use with enum type keys. All of the keys in an enum map must come from a single enum type that is specified, explicitly or implicitly, when the map is created. Enum maps are represented internally as arrays. This representation is extremely compact and efficient.</source>
          <target state="translated">열거 형 키와 함께 사용하기위한 특수한 &lt;a href=&quot;map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; 구현입니다. 열거 형 맵의 모든 키는 맵을 만들 때 명시 적 또는 암시 적으로 지정된 단일 열거 형 유형에서 가져와야합니다. 열거 형 맵은 내부적으로 배열로 표시됩니다. 이 표현은 매우 작고 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="c2ba29a85e83ff942b507d1315a7c4f9965a585a" translate="yes" xml:space="preserve">
          <source>A specialized &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; implementation for use with enum types.</source>
          <target state="translated">열거 형에 사용하기위한 특수한 &lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 구현입니다.</target>
        </trans-unit>
        <trans-unit id="038445caa048ac83106a572bbcb7020c71636520" translate="yes" xml:space="preserve">
          <source>A specialized &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; implementation for use with enum types. All of the elements in an enum set must come from a single enum type that is specified, explicitly or implicitly, when the set is created. Enum sets are represented internally as bit vectors. This representation is extremely compact and efficient. The space and time performance of this class should be good enough to allow its use as a high-quality, typesafe alternative to traditional &lt;code&gt;int&lt;/code&gt;-based &quot;bit flags.&quot; Even bulk operations (such as &lt;code&gt;containsAll&lt;/code&gt; and &lt;code&gt;retainAll&lt;/code&gt;) should run very quickly if their argument is also an enum set.</source>
          <target state="translated">열거 형에 사용하기위한 특수한 &lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 구현입니다. 열거 형 집합의 모든 요소는 집합을 만들 때 명시 적 또는 암시 적으로 지정된 단일 열거 형 유형에서 가져와야합니다. 열거 세트는 내부적으로 비트 벡터로 표시됩니다. 이 표현은 매우 작고 효율적입니다. 이 클래스의 공간 및 시간 성능은 전통적인 &lt;code&gt;int&lt;/code&gt; 기반 &quot;비트 플래그&quot;에 대한 고품질의 안전한 유형의 대안으로 사용할 수있을만큼 충분히 우수해야합니다 . &lt;code&gt;containsAll&lt;/code&gt; 및 &lt;code&gt;retainAll&lt;/code&gt; 과 같은 대량 작업 도 인수가 열거 세트 인 경우 매우 빠르게 실행되어야합니다.</target>
        </trans-unit>
        <trans-unit id="79146575912fbe531b0ffef6318e2f3982b1c17f" translate="yes" xml:space="preserve">
          <source>A specification of &lt;code&gt;CertStore&lt;/code&gt; parameters.</source>
          <target state="translated">&lt;code&gt;CertStore&lt;/code&gt; 파라미터 의 사양입니다 .</target>
        </trans-unit>
        <trans-unit id="1539715c569c2cf17e264c41021904dedacc9176" translate="yes" xml:space="preserve">
          <source>A specification of certification path algorithm parameters.</source>
          <target state="translated">인증 경로 알고리즘 매개 변수의 사양입니다.</target>
        </trans-unit>
        <trans-unit id="5ba2c65fd6a0942e64287df2ad5e42f8e9606ce7" translate="yes" xml:space="preserve">
          <source>A specification of certification path algorithm parameters. The purpose of this interface is to group (and provide type safety for) all &lt;code&gt;CertPath&lt;/code&gt; parameter specifications. All &lt;code&gt;CertPath&lt;/code&gt; parameter specifications must implement this interface.</source>
          <target state="translated">인증 경로 알고리즘 매개 변수의 사양입니다. 이 인터페이스의 목적은 모든 &lt;code&gt;CertPath&lt;/code&gt; 매개 변수 사양 을 그룹화 (및 형식 안전성 제공)하는 것입니다. 모든 &lt;code&gt;CertPath&lt;/code&gt; 매개 변수 사양은이 인터페이스를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="d2e18dfc7c9f562a948a0bd4b8070f27f2e7bf18" translate="yes" xml:space="preserve">
          <source>A specification of the result of a certification path builder algorithm.</source>
          <target state="translated">인증 경로 작성기 알고리즘 결과의 사양입니다.</target>
        </trans-unit>
        <trans-unit id="d67467cde8bad01d11eed78a1f707890cabef0cc" translate="yes" xml:space="preserve">
          <source>A specification of the result of a certification path builder algorithm. All results returned by the &lt;a href=&quot;certpathbuilder#build-java.security.cert.CertPathParameters-&quot;&gt;&lt;code&gt;CertPathBuilder.build&lt;/code&gt;&lt;/a&gt; method must implement this interface.</source>
          <target state="translated">인증 경로 작성기 알고리즘 결과의 사양입니다. &lt;a href=&quot;certpathbuilder#build-java.security.cert.CertPathParameters-&quot;&gt; &lt;code&gt;CertPathBuilder.build&lt;/code&gt; &lt;/a&gt; 메소드에 의해 반환 된 모든 결과는 이 인터페이스를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="a99aeb8cebebd5855a4df32490e58ae4a7cac639" translate="yes" xml:space="preserve">
          <source>A specification of the result of a certification path validator algorithm.</source>
          <target state="translated">인증 경로 검사기 알고리즘 결과의 사양.</target>
        </trans-unit>
        <trans-unit id="57d5bba359580227b394d681c7f3d697048aee2b" translate="yes" xml:space="preserve">
          <source>A spliterator for an array</source>
          <target state="translated">배열의 스플리터</target>
        </trans-unit>
        <trans-unit id="ad774ccadd09164c271dd5a01dced776c2649d24" translate="yes" xml:space="preserve">
          <source>A spliterator from an iterator</source>
          <target state="translated">반복자의 스플리터</target>
        </trans-unit>
        <trans-unit id="3818a97468bbc85c3377256fd92e4b8cebee0798" translate="yes" xml:space="preserve">
          <source>A stage of a possibly asynchronous computation, that performs an action or computes a value when another CompletionStage completes.</source>
          <target state="translated">다른 CompletionStage가 완료 될 때 작업을 수행하거나 값을 계산하는 비동기 계산 단계입니다.</target>
        </trans-unit>
        <trans-unit id="b8eb898b5e05c6a74b95e105a6e3af6bf9b2cb17" translate="yes" xml:space="preserve">
          <source>A stage of a possibly asynchronous computation, that performs an action or computes a value when another CompletionStage completes. A stage completes upon termination of its computation, but this may in turn trigger other dependent stages. The functionality defined in this interface takes only a few basic forms, which expand out to a larger set of methods to capture a range of usage styles:</source>
          <target state="translated">다른 CompletionStage가 완료 될 때 작업을 수행하거나 값을 계산하는 비동기 계산 단계입니다. 단계는 계산 종료시 완료되지만 다른 종속 단계를 트리거 할 수 있습니다. 이 인터페이스에 정의 된 기능은 몇 가지 기본 형식 만 취하며, 다양한 사용 스타일을 캡처하기 위해 더 큰 메소드 세트로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="82833bfc45899e852833688a569a1692f724784e" translate="yes" xml:space="preserve">
          <source>A standalone carriage-return character (&lt;code&gt;'\r'&lt;/code&gt;),</source>
          <target state="translated">독립형 캐리지 리턴 문자 ( &lt;code&gt;'\r'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2b2d87a7913339ea370b88636f02f6e46ef2eaba" translate="yes" xml:space="preserve">
          <source>A standard canonical string form of the &lt;code&gt;BigDecimal&lt;/code&gt; is created as though by the following steps: first, the absolute value of the unscaled value of the &lt;code&gt;BigDecimal&lt;/code&gt; is converted to a string in base ten using the characters &lt;code&gt;'0'&lt;/code&gt; through &lt;code&gt;'9'&lt;/code&gt; with no leading zeros (except if its value is zero, in which case a single &lt;code&gt;'0'&lt;/code&gt; character is used).</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 표준 표준 문자열 형식은 다음 단계에 의해 생성됩니다. 먼저 &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일되지 않은 값의 절대 값은 선행없이 문자 &lt;code&gt;'0'&lt;/code&gt; 에서 &lt;code&gt;'9'&lt;/code&gt; 를 사용하여 10 진의 문자열로 변환됩니다. 0 (값이 0 인 경우를 제외하고 단일 &lt;code&gt;'0'&lt;/code&gt; 문자가 사용됨).</target>
        </trans-unit>
        <trans-unit id="b1ebe163c834134e8afaae0bd577bb6a7a2dfee8" translate="yes" xml:space="preserve">
          <source>A standard set of date periods units.</source>
          <target state="translated">표준 날짜 기간 단위 집합입니다.</target>
        </trans-unit>
        <trans-unit id="bc4a4cc1174f46e9b3b9cf5f3e4b7174225cb839" translate="yes" xml:space="preserve">
          <source>A standard set of fields.</source>
          <target state="translated">표준 필드 세트.</target>
        </trans-unit>
        <trans-unit id="657a0a616df370741617e71498ebbdfb9e594862" translate="yes" xml:space="preserve">
          <source>A standard week is seven days long, but cultures have different definitions for some other aspects of a week. This class represents the definition of the week, for the purpose of providing &lt;a href=&quot;temporalfield&quot;&gt;&lt;code&gt;TemporalField&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">표준 주일은 7 일이지만 문화는 일주일의 다른 측면에 대해 다른 정의를 갖습니다. 이 클래스는 &lt;a href=&quot;temporalfield&quot;&gt; &lt;code&gt;TemporalField&lt;/code&gt; &lt;/a&gt; 인스턴스 를 제공하기위한 주 정의를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="e877c544e0c188e53596b585d28b1461217921c6" translate="yes" xml:space="preserve">
          <source>A state factory must implement the &lt;code&gt;StateFactory&lt;/code&gt; interface. In addition, the factory class must be public and must have a public constructor that accepts no parameters.</source>
          <target state="translated">상태 팩토리는 &lt;code&gt;StateFactory&lt;/code&gt; 인터페이스를 구현해야합니다 . 또한 팩토리 클래스는 공용이어야하며 매개 변수를 허용하지 않는 공용 생성자가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="8c52b8be0c80eab2f5613d70032fef63aa6851d2" translate="yes" xml:space="preserve">
          <source>A state object for collecting statistics such as count, min, max, sum, and average.</source>
          <target state="translated">개수, 최소, 최대, 합계 및 평균과 같은 통계를 수집하기위한 상태 개체입니다.</target>
        </trans-unit>
        <trans-unit id="fc00732cd8cb972f0d1036f29ff4ad75551e3303" translate="yes" xml:space="preserve">
          <source>A static &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;commonPool()&lt;/code&gt;&lt;/a&gt; is available and appropriate for most applications. The common pool is used by any ForkJoinTask that is not explicitly submitted to a specified pool. Using the common pool normally reduces resource usage (its threads are slowly reclaimed during periods of non-use, and reinstated upon subsequent use).</source>
          <target state="translated">정적 &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;commonPool()&lt;/code&gt; &lt;/a&gt; 을 사용할 수 있으며 대부분의 응용 프로그램에 적합합니다. 지정된 풀에 명시 적으로 제출되지 않은 ForkJoinTask는 공통 풀을 사용합니다. 공통 풀을 사용하면 일반적으로 자원 사용이 줄어 듭니다 (사용하지 않는 기간 동안 스레드가 천천히 재생되고 후속 사용시 복원 됨).</target>
        </trans-unit>
        <trans-unit id="3757a3143362118ba8f42d8adcb8b4f52629d779" translate="yes" xml:space="preserve">
          <source>A static class for creating SASL clients and servers.</source>
          <target state="translated">SASL 클라이언트 및 서버를 만들기위한 정적 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="4f04bdfa5d6a5f7d0a680c93baf5e42ca9d2a30a" translate="yes" xml:space="preserve">
          <source>A static initializer.</source>
          <target state="translated">정적 이니셜 라이저</target>
        </trans-unit>
        <trans-unit id="08328104ca65eea64d0597033428298306829065" translate="yes" xml:space="preserve">
          <source>A static method to retrieve the named object. See &lt;a href=&quot;initialcontext#doLookup-javax.naming.Name-&quot;&gt;&lt;code&gt;doLookup(Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">명명 된 객체를 검색하는 정적 메서드입니다. &lt;a href=&quot;initialcontext#doLookup-javax.naming.Name-&quot;&gt; &lt;code&gt;doLookup(Name)&lt;/code&gt; &lt;/a&gt; 참조 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="cc9b79c7f389fa47df0ed4a735ca8d18b7726b34" translate="yes" xml:space="preserve">
          <source>A static method to retrieve the named object. This is a shortcut method equivalent to invoking:</source>
          <target state="translated">명명 된 객체를 검색하는 정적 메서드입니다. 이것은 호출에 해당하는 바로 가기 방법입니다.</target>
        </trans-unit>
        <trans-unit id="5004e03ec905ad655935dd211564118df7d4da4e" translate="yes" xml:space="preserve">
          <source>A static set of permissions can be bound to a ProtectionDomain when it is constructed; such permissions are granted to the domain regardless of the Policy in force. However, to support dynamic security policies, a ProtectionDomain can also be constructed such that it is dynamically mapped to a set of permissions by the current Policy whenever a permission is checked.</source>
          <target state="translated">정적 권한 집합은 생성 될 때 ProtectionDomain에 바인딩 될 수 있습니다. 이러한 권한은 정책에 관계없이 도메인에 부여됩니다. 그러나 동적 보안 정책을 지원하기 위해 권한을 확인할 때마다 현재 정책에 의해 권한 집합에 동적으로 매핑되도록 ProtectionDomain을 구성 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1fba8c334b6fe0bc107c227a57d676aa3a515366" translate="yes" xml:space="preserve">
          <source>A stream builder has a lifecycle, which starts in a building phase, during which elements can be added, and then transitions to a built phase, after which elements may not be added. The built phase begins begins when the &lt;a href=&quot;longstream.builder#build--&quot;&gt;&lt;code&gt;build()&lt;/code&gt;&lt;/a&gt; method is called, which creates an ordered stream whose elements are the elements that were added to the stream builder, in the order they were added.</source>
          <target state="translated">스트림 빌더에는 라이프 사이클이 있습니다. 라이프 사이클은 빌딩 단계에서 시작하여 요소를 추가 한 후 빌드 단계로 전환 한 후 요소를 추가 할 수 없습니다. 빌드 단계는 &lt;a href=&quot;longstream.builder#build--&quot;&gt; &lt;code&gt;build()&lt;/code&gt; &lt;/a&gt; 메소드가 호출 될 때 시작 되어 요소가 스트림 빌더에 추가 된 요소 인 순서화 된 스트림을 추가 된 순서대로 작성합니다.</target>
        </trans-unit>
        <trans-unit id="cd544e7aad00f9aec1a856018f44d05b5aa3f804" translate="yes" xml:space="preserve">
          <source>A stream builder has a lifecycle, which starts in a building phase, during which elements can be added, and then transitions to a built phase, after which elements may not be added. The built phase begins when the &lt;a href=&quot;doublestream.builder#build--&quot;&gt;&lt;code&gt;build()&lt;/code&gt;&lt;/a&gt; method is called, which creates an ordered stream whose elements are the elements that were added to the stream builder, in the order they were added.</source>
          <target state="translated">스트림 빌더에는 라이프 사이클이 있습니다. 라이프 사이클은 빌딩 단계에서 시작하여 요소를 추가 한 후 빌드 단계로 전환 한 후 요소를 추가 할 수 없습니다. 빌드 단계는 &lt;a href=&quot;doublestream.builder#build--&quot;&gt; &lt;code&gt;build()&lt;/code&gt; &lt;/a&gt; 메소드가 호출 될 때 시작 되어, 요소가 스트림 빌더에 추가 된 요소 인 순서화 된 스트림을 추가 된 순서대로 작성합니다.</target>
        </trans-unit>
        <trans-unit id="a3e4f88d7c30dc2a2c7488b721246cba9361e090" translate="yes" xml:space="preserve">
          <source>A stream builder has a lifecycle, which starts in a building phase, during which elements can be added, and then transitions to a built phase, after which elements may not be added. The built phase begins when the &lt;a href=&quot;intstream.builder#build--&quot;&gt;&lt;code&gt;build()&lt;/code&gt;&lt;/a&gt; method is called, which creates an ordered stream whose elements are the elements that were added to the stream builder, in the order they were added.</source>
          <target state="translated">스트림 빌더에는 라이프 사이클이 있습니다. 라이프 사이클은 빌딩 단계에서 시작하여 요소를 추가 한 후 빌드 단계로 전환 한 후 요소를 추가 할 수 없습니다. 빌드 단계는 &lt;a href=&quot;intstream.builder#build--&quot;&gt; &lt;code&gt;build()&lt;/code&gt; &lt;/a&gt; 메소드가 호출 될 때 시작 되어, 요소가 스트림 빌더에 추가 된 요소 인 순서화 된 스트림을 추가 된 순서대로 작성합니다.</target>
        </trans-unit>
        <trans-unit id="b64887b0ed22abd1e5a248bdb390293d0fcfd885" translate="yes" xml:space="preserve">
          <source>A stream builder has a lifecycle, which starts in a building phase, during which elements can be added, and then transitions to a built phase, after which elements may not be added. The built phase begins when the &lt;a href=&quot;stream.builder#build--&quot;&gt;&lt;code&gt;build()&lt;/code&gt;&lt;/a&gt; method is called, which creates an ordered &lt;code&gt;Stream&lt;/code&gt; whose elements are the elements that were added to the stream builder, in the order they were added.</source>
          <target state="translated">스트림 빌더에는 라이프 사이클이 있습니다. 라이프 사이클은 빌딩 단계에서 시작하여 요소를 추가 한 후 빌드 단계로 전환 한 후 요소를 추가 할 수 없습니다. 빌드 단계는 &lt;a href=&quot;stream.builder#build--&quot;&gt; &lt;code&gt;build()&lt;/code&gt; &lt;/a&gt; 메소드가 호출 될 때 시작 되어 요소가 스트림 빌더에 추가 된 요소 인 순서화 된 &lt;code&gt;Stream&lt;/code&gt; 을 추가 된 순서대로 작성합니다.</target>
        </trans-unit>
        <trans-unit id="c8876207542721cef97b8445864587390c7ae4dd" translate="yes" xml:space="preserve">
          <source>A stream pipeline, like the &quot;widgets&quot; example above, can be viewed as a &lt;em&gt;query&lt;/em&gt; on the stream source. Unless the source was explicitly designed for concurrent modification (such as a &lt;a href=&quot;../concurrent/concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt;), unpredictable or erroneous behavior may result from modifying the stream source while it is being queried.</source>
          <target state="translated">위의 &quot;위젯&quot;예제와 같은 스트림 파이프 라인 은 스트림 소스 에서 &lt;em&gt;쿼리&lt;/em&gt; 로 볼 수 있습니다 . 소스가 동시 수정 (예 : &lt;a href=&quot;../concurrent/concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; &lt;/a&gt; )을 위해 명시 적으로 설계되지 않은 경우, 조회하는 동안 스트림 소스를 수정하면 예상치 못한 또는 잘못된 동작이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7b7a3727d647af7160aa25a5bdddb720132ae40" translate="yes" xml:space="preserve">
          <source>A stream should be operated on (invoking an intermediate or terminal stream operation) only once. This rules out, for example, &quot;forked&quot; streams, where the same source feeds two or more pipelines, or multiple traversals of the same stream. A stream implementation may throw &lt;a href=&quot;../../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt; if it detects that the stream is being reused. However, since some stream operations may return their receiver rather than a new stream object, it may not be possible to detect reuse in all cases.</source>
          <target state="translated">스트림은 한 번만 작동해야합니다 (중간 또는 터미널 스트림 작동 호출). 예를 들어, 동일한 소스가 둘 이상의 파이프 라인 또는 동일한 스트림의 여러 순회를 공급하는 &quot;포크 (forked)&quot;스트림을 제외합니다. 스트림이 재사용되고있는 것을 검출하면, 스트림 구현은 &lt;a href=&quot;../../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; 을&lt;/a&gt; Throw 합니다 . 그러나 일부 스트림 작업은 새 스트림 개체가 아닌 수신기를 반환 할 수 있으므로 모든 경우에 재사용을 감지하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd4ec10f8a34881ebf4389386c45a348aba1af0a" translate="yes" xml:space="preserve">
          <source>A strict query for the &lt;code&gt;ZoneId&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ZoneId&lt;/code&gt; 에 대한 엄격한 쿼리입니다 .</target>
        </trans-unit>
        <trans-unit id="843c5f7bec6cbce2c9a32d0290756e96042834b2" translate="yes" xml:space="preserve">
          <source>A string comprising the date and time of the timestamp and its signer's certificate.</source>
          <target state="translated">타임 스탬프의 날짜와 시간 및 서명자의 인증서로 구성된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="f0d3bb87d6c99c6d13263194799e75e8e6bc1431" translate="yes" xml:space="preserve">
          <source>A string comprising the signer's certificate and a timestamp, if present.</source>
          <target state="translated">서명자의 인증서와 타임 스탬프 (있는 경우)로 구성된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="e5fcefe1123ee605f91dabe31ecfe51398cb3674" translate="yes" xml:space="preserve">
          <source>A string containing the line read from the console, not including any line-termination characters, or &lt;code&gt;null&lt;/code&gt; if an end of stream has been reached.</source>
          <target state="translated">콘솔에서 읽은 라인을 포함하는 문자열로, 라인 종료 문자를 포함하지 않으며, 스트림 끝에 도달하면 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="752e7e61ddc720f22422f244f4f07222d6341ec8" translate="yes" xml:space="preserve">
          <source>A string describing the parse error</source>
          <target state="translated">구문 분석 오류를 설명하는 문자열</target>
        </trans-unit>
        <trans-unit id="7fa344b0c8bc360e6aa5346757388abcfc0204c7" translate="yes" xml:space="preserve">
          <source>A string describing this charset</source>
          <target state="translated">이 캐릭터 세트를 기술하는 캐릭터 라인</target>
        </trans-unit>
        <trans-unit id="eb8b62295a458b0fab98cf99fb5bfeff77721a5a" translate="yes" xml:space="preserve">
          <source>A string monitor sends notifications as follows:</source>
          <target state="translated">문자열 모니터는 다음과 같이 알림을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="7eaba0804067b01222c18df1f99a0c0745906143" translate="yes" xml:space="preserve">
          <source>A string reference address is immutable: once created, it cannot be changed. Multithreaded access to a single StringRefAddr need not be synchronized.</source>
          <target state="translated">문자열 참조 주소는 변경할 수 없습니다. 일단 생성되면 변경할 수 없습니다. 단일 StringRefAddr에 대한 멀티 스레드 액세스는 동기화 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="c6b8f4fe0882b9c7e19f321882c21b2c1abb170d" translate="yes" xml:space="preserve">
          <source>A string representation of the Locale, for debugging.</source>
          <target state="translated">디버깅을위한 로캘의 문자열 표현입니다.</target>
        </trans-unit>
        <trans-unit id="672efd361c2e2091027c3cedaae44846424fc4ae" translate="yes" xml:space="preserve">
          <source>A string representation of the parameter and associated information.</source>
          <target state="translated">매개 변수 및 관련 정보의 문자열 표현</target>
        </trans-unit>
        <trans-unit id="7aebee07a8675f4ad0f790ae3090062b6d6082c9" translate="yes" xml:space="preserve">
          <source>A string representation of this &lt;code&gt;UUID&lt;/code&gt;</source>
          <target state="translated">이 &lt;code&gt;UUID&lt;/code&gt; 의 캐릭터 라인 표현</target>
        </trans-unit>
        <trans-unit id="5e7f796c187ec09ebd2a9cbe95a9eec689390157" translate="yes" xml:space="preserve">
          <source>A string representation of this &lt;code&gt;WeekFields&lt;/code&gt; instance.</source>
          <target state="translated">이 &lt;code&gt;WeekFields&lt;/code&gt; 인스턴스 의 캐릭터 라인 표현</target>
        </trans-unit>
        <trans-unit id="ba0d08603152b0355d1b691cd24e6acc89441e0f" translate="yes" xml:space="preserve">
          <source>A string representation of this duration using ISO-8601 seconds based representation, such as &lt;code&gt;PT8H6M12.345S&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PT8H6M12.345S&lt;/code&gt; 와 같은 ISO-8601 초 기반 표현을 사용하여이 지속 시간의 문자열 표현 .</target>
        </trans-unit>
        <trans-unit id="2212e082e9948e828c4aa03b6e3ebfbba91de424" translate="yes" xml:space="preserve">
          <source>A string representation of this instant using ISO-8601 representation.</source>
          <target state="translated">ISO-8601 표현을 사용한이 순간의 문자열 표현.</target>
        </trans-unit>
        <trans-unit id="d5e4e23c1c1edee635c35763f4d13b8ea0f47465" translate="yes" xml:space="preserve">
          <source>A string representing the abbreviation for the time zone. This value will be adjusted as necessary for Daylight Saving Time. For &lt;code&gt;long&lt;/code&gt;, &lt;a href=&quot;../lang/long&quot;&gt;&lt;code&gt;Long&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; the time zone used is the &lt;a href=&quot;timezone#getDefault--&quot;&gt;default time zone&lt;/a&gt; for this instance of the Java virtual machine. The Formatter's locale will supersede the locale of the argument (if any).</source>
          <target state="translated">시간대의 약어를 나타내는 문자열입니다. 이 값은 일광 절약 시간제에 따라 조정됩니다. 들어 &lt;code&gt;long&lt;/code&gt; , &lt;a href=&quot;../lang/long&quot;&gt; &lt;code&gt;Long&lt;/code&gt; &lt;/a&gt; , 그리고 &lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 시간대 사용은입니다 &lt;a href=&quot;timezone#getDefault--&quot;&gt;기본 시간대&lt;/a&gt; Java 가상 머신 인스턴스. 포맷터의 로케일은 인수의 로케일 (있는 경우)을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="c73cc59eeb3e1a1b69c67392046c214b309ac6af" translate="yes" xml:space="preserve">
          <source>A string value is represented as a String and binary value as a byte array.</source>
          <target state="translated">문자열 값은 문자열로 표시되고 이진 값은 바이트 배열로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="3d30e413258fa11bf763d272e67eb9d136835f16" translate="yes" xml:space="preserve">
          <source>A string value will be DER-encoded as an ASN.1 UTF8String and a binary value will be DER-encoded as an ASN.1 Octet String.</source>
          <target state="translated">문자열 값은 ASN.1 UTF8String으로 DER 인코딩되고 2 진 값은 ASN.1 Octet 문자열로 DER 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="8cd70bfc7aa3e3f6f2811efe832415d0d234a86c" translate="yes" xml:space="preserve">
          <source>A string whose value is this string, with any leading and trailing white space removed, or this string if it has no leading or trailing white space.</source>
          <target state="translated">선행 및 후행 공백이 제거 된 값이이 문자열 인 문자열 또는 선행 또는 후행 공백이없는 경우이 문자열</target>
        </trans-unit>
        <trans-unit id="cc01a457dd22e8c9a9f01a9beff05c84d6fbd5c2" translate="yes" xml:space="preserve">
          <source>A structural modification is any operation that adds or deletes one or more mappings or, in the case of access-ordered linked hash maps, affects iteration order. In insertion-ordered linked hash maps, merely changing the value associated with a key that is already contained in the map is not a structural modification. &lt;strong&gt;In access-ordered linked hash maps, merely querying the map with &lt;code&gt;get&lt;/code&gt; is a structural modification. &lt;/strong&gt;)</source>
          <target state="translated">구조적 수정은 하나 이상의 매핑을 추가 또는 삭제하거나 액세스 순서에 따라 연결된 해시 맵의 경우 반복 순서에 영향을주는 작업입니다. 삽입 순서로 연결된 해시 맵에서 맵에 이미 포함 된 키와 관련된 값을 변경하는 것만 구조적으로 수정 된 것은 아닙니다.&lt;strong&gt;액세스 순서가 지정된 링크 해시 맵에서 &lt;code&gt;get&lt;/code&gt; 을 사용 하여 맵을 쿼리하는 것만 으로도 구조적으로 수정됩니다. &lt;/strong&gt;)</target>
        </trans-unit>
        <trans-unit id="55a7222ac59b1ad4409f1c5aa286de66624edd41" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; equivalent to &lt;a href=&quot;calendar#LONG_FORMAT&quot;&gt;&lt;code&gt;LONG_FORMAT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;calendar#LONG_FORMAT&quot;&gt; &lt;code&gt;LONG_FORMAT&lt;/code&gt; 에&lt;/a&gt; 해당하는 &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; &lt;/a&gt; 스타일 지정자입니다 .</target>
        </trans-unit>
        <trans-unit id="ca2a76917b8ad075c7efdce1e137cd5e848b9a65" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; equivalent to &lt;a href=&quot;calendar#SHORT_FORMAT&quot;&gt;&lt;code&gt;SHORT_FORMAT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;calendar#SHORT_FORMAT&quot;&gt; &lt;code&gt;SHORT_FORMAT&lt;/code&gt; 에&lt;/a&gt; 해당하는 &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; &lt;/a&gt; 스타일 지정자입니다 .</target>
        </trans-unit>
        <trans-unit id="246a89bb010c408d7f72df90be5e68a2dd48a176" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; indicating a long name used for format.</source>
          <target state="translated">형식에 사용되는 긴 이름을 나타내는 &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; &lt;/a&gt; 의 스타일 지정자입니다 .</target>
        </trans-unit>
        <trans-unit id="b3d4a9db43c4147ff29aba182d60143560a36285" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; indicating a long name used independently, such as a month name as calendar headers.</source>
          <target state="translated">달력 헤더로 월 이름과 같이 독립적으로 사용되는 긴 이름을 나타내는 &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; &lt;/a&gt; 의 스타일 지정자입니다 .</target>
        </trans-unit>
        <trans-unit id="8177ae2c98acd09c5e76b14475920b79de0353a1" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; indicating a narrow name independently. Narrow names are typically single character strings, such as &quot;M&quot; for Monday.</source>
          <target state="translated">좁은 이름을 독립적으로 나타내는 &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; &lt;/a&gt; 스타일 지정자 . 좁은 이름은 일반적으로 월요일의 &quot;M&quot;과 같은 단일 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="833adb7c751937e07bc93a19b4fd27fd3664eba9" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; indicating a narrow name used for format. Narrow names are typically single character strings, such as &quot;M&quot; for Monday.</source>
          <target state="translated">형식에 사용되는 좁은 이름을 나타내는 &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; &lt;/a&gt; 스타일 지정자 . 좁은 이름은 일반적으로 월요일의 &quot;M&quot;과 같은 단일 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="2b519cbcb1e5773dfe1ed727fd6af0c74264a21a" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; indicating a short name used for format.</source>
          <target state="translated">형식에 사용되는 짧은 이름을 나타내는 &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; &lt;/a&gt; 스타일 지정자 .</target>
        </trans-unit>
        <trans-unit id="e8e223e7c1622c3fc65fdaac2d1c896c8c6d61b8" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; indicating a short name used independently, such as a month abbreviation as calendar headers.</source>
          <target state="translated">달력 머리글과 같은 월 약어와 같이 독립적으로 사용되는 짧은 이름을 나타내는 &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; &lt;/a&gt; 의 스타일 지정자입니다 .</target>
        </trans-unit>
        <trans-unit id="7c8504f60ec8dc38b2e14f9724c185730961deef" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; indicating names in all styles, such as &quot;January&quot; and &quot;Jan&quot;.</source>
          <target state="translated">&quot;January&quot;및 &quot;Jan&quot;과 같은 모든 스타일의 이름을 나타내는 &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; &lt;/a&gt; 의 스타일 지정자입니다 .</target>
        </trans-unit>
        <trans-unit id="9baadedb971887f9b082c52a2c928d5d299d43ac" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;code&gt;getDisplayName()&lt;/code&gt; indicating a long name, such as &quot;Pacific Standard Time.&quot;</source>
          <target state="translated">&quot;태평양 표준시&quot;와 같이 긴 이름을 나타내는 &lt;code&gt;getDisplayName()&lt;/code&gt; 의 스타일 지정자입니다 .</target>
        </trans-unit>
        <trans-unit id="94cf876e129037f9ee4dc05409b19885a307def3" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;code&gt;getDisplayName()&lt;/code&gt; indicating a short name, such as &quot;PST.&quot;</source>
          <target state="translated">&quot;PST&quot;와 같은 짧은 이름을 나타내는 &lt;code&gt;getDisplayName()&lt;/code&gt; 의 스타일 지정자</target>
        </trans-unit>
        <trans-unit id="ed93ac2675a81160fe0ca5522cbca4b68d573c15" translate="yes" xml:space="preserve">
          <source>A sub-interface, &lt;a href=&quot;temporal&quot;&gt;&lt;code&gt;Temporal&lt;/code&gt;&lt;/a&gt;, extends this definition to one that also supports adjustment and manipulation on more complete temporal objects.</source>
          <target state="translated">하위 인터페이스 인 &lt;a href=&quot;temporal&quot;&gt; &lt;code&gt;Temporal&lt;/code&gt; &lt;/a&gt; 은이 정의를보다 완전한 시간 오브젝트에 대한 조정 및 조작을 지원하는 것으로 확장합니다.</target>
        </trans-unit>
        <trans-unit id="9d85142f371f427f95bfb3a0d5bfa8630041001e" translate="yes" xml:space="preserve">
          <source>A subclass may choose its own localization mechanism, if so desired, by overriding the supplied implementations of &lt;code&gt;getElementDescription&lt;/code&gt; and &lt;code&gt;getAttributeDescription&lt;/code&gt;.</source>
          <target state="translated">서브 클래스는 원하는 경우 제공된 &lt;code&gt;getElementDescription&lt;/code&gt; 및 &lt;code&gt;getAttributeDescription&lt;/code&gt; 구현을 재정 의하여 고유 한 현지화 메커니즘을 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="44b8ca1ec56193bcff8a3ad4822f95f207866d43" translate="yes" xml:space="preserve">
          <source>A subclass must provide an implementation of this method.</source>
          <target state="translated">서브 클래스는이 메소드의 구현을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="97ea4734061b1170d6d1a667b4807baa5c8a6ba0" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;code&gt;ImageWriteParam&lt;/code&gt; for encoding images in the BMP format.</source>
          <target state="translated">BMP 형식의 이미지를 인코딩하기위한 &lt;code&gt;ImageWriteParam&lt;/code&gt; 의 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="189048470b34a0d7586fa9c0d40bd96d37a05e43" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;code&gt;Statement&lt;/code&gt; used for methods that return a value.</source>
          <target state="translated">값을 리턴하는 메소드에 사용되는 &lt;code&gt;Statement&lt;/code&gt; 의 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="8ca9601be9e9ee9ba1a926589f22d3b2f252fb63" translate="yes" xml:space="preserve">
          <source>A subclass overrides the &lt;code&gt;log&lt;/code&gt; method and scans each incoming &lt;code&gt;LogRecord&lt;/code&gt; and calls &lt;code&gt;push&lt;/code&gt; if a record matches some desired criteria.</source>
          <target state="translated">서브 클래스는 &lt;code&gt;log&lt;/code&gt; 메소드를 대체하고 각 수신 &lt;code&gt;LogRecord&lt;/code&gt; 를 스캔 하고 레코드가 원하는 기준과 일치하면 &lt;code&gt;push&lt;/code&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="2b2353802e63c0bf087dc7931924752b3443fe1c" translate="yes" xml:space="preserve">
          <source>A subclass' implementation of this method may choose to throw an &lt;a href=&quot;ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; if this input stream has been closed by invoking the &lt;a href=&quot;inputstream#close--&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드의 서브 클래스의 구현은 &lt;a href=&quot;inputstream#close--&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 메소드를 호출하는 것에 의해이 입력 스트림이 닫힌 경우 에 &lt;a href=&quot;ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt; 을 Throw 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="37e03a71d2ec5aaddcb23b4194a7df0182ae1b9a" translate="yes" xml:space="preserve">
          <source>A subpackage of a package named p is any package whose name begins with &quot;&lt;code&gt;p.&lt;/code&gt;&quot;. For example, &lt;code&gt;javax.swing.text&lt;/code&gt; is a subpackage of &lt;code&gt;javax.swing&lt;/code&gt;, and both &lt;code&gt;java.util&lt;/code&gt; and &lt;code&gt;java.lang.reflect&lt;/code&gt; are subpackages of &lt;code&gt;java&lt;/code&gt;.</source>
          <target state="translated">p라는 패키지의 하위 패키지는 이름이 &quot; &lt;code&gt;p.&lt;/code&gt; &quot;로 시작하는 패키지입니다 . 예를 들어 &lt;code&gt;javax.swing.text&lt;/code&gt; 의 서브 패키지이다 &lt;code&gt;javax.swing&lt;/code&gt; 의 , 두 &lt;code&gt;java.util&lt;/code&gt; 하고 &lt;code&gt;java.lang.reflect&lt;/code&gt; 의 서브 패키지 &lt;code&gt;java&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56fc0cfb4528635037924844e44901768d8b5856" translate="yes" xml:space="preserve">
          <source>A substring of this &lt;code&gt;String&lt;/code&gt; object is compared to a substring of the argument &lt;code&gt;other&lt;/code&gt;. The result is &lt;code&gt;true&lt;/code&gt; if these substrings represent character sequences that are the same, ignoring case if and only if &lt;code&gt;ignoreCase&lt;/code&gt; is true. The substring of this &lt;code&gt;String&lt;/code&gt; object to be compared begins at index &lt;code&gt;toffset&lt;/code&gt; and has length &lt;code&gt;len&lt;/code&gt;. The substring of &lt;code&gt;other&lt;/code&gt; to be compared begins at index &lt;code&gt;ooffset&lt;/code&gt; and has length &lt;code&gt;len&lt;/code&gt;. The result is &lt;code&gt;false&lt;/code&gt; if and only if at least one of the following is true:</source>
          <target state="translated">이 &lt;code&gt;String&lt;/code&gt; 객체의 부분 문자열은 &lt;code&gt;other&lt;/code&gt; 인수의 부분 문자열과 비교됩니다 . &lt;code&gt;ignoreCase&lt;/code&gt; 가 true 인 경우에만 대소 문자를 무시하고 이러한 하위 문자열이 동일한 문자 시퀀스를 나타내는 경우 결과는 &lt;code&gt;true&lt;/code&gt; 입니다. 비교할 이 &lt;code&gt;String&lt;/code&gt; 객체 의 하위 문자열은 인덱스 &lt;code&gt;toffset&lt;/code&gt; 에서 시작하며 길이는 &lt;code&gt;len&lt;/code&gt; 입니다. 비교할 &lt;code&gt;other&lt;/code&gt; 의 부분 문자열은 인덱스 &lt;code&gt;ooffset&lt;/code&gt; 에서 시작하며 길이 &lt;code&gt;len&lt;/code&gt; 을 갖습니다 . 다음 중 하나 이상에 해당하는 경우에만 결과가 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ccd855001a6b80dae8efc1581759226d625bde88" translate="yes" xml:space="preserve">
          <source>A substring of this &lt;code&gt;String&lt;/code&gt; object is compared to a substring of the argument other. The result is true if these substrings represent identical character sequences. The substring of this &lt;code&gt;String&lt;/code&gt; object to be compared begins at index &lt;code&gt;toffset&lt;/code&gt; and has length &lt;code&gt;len&lt;/code&gt;. The substring of other to be compared begins at index &lt;code&gt;ooffset&lt;/code&gt; and has length &lt;code&gt;len&lt;/code&gt;. The result is &lt;code&gt;false&lt;/code&gt; if and only if at least one of the following is true:</source>
          <target state="translated">이 &lt;code&gt;String&lt;/code&gt; 객체의 부분 문자열은 other 인수의 부분 문자열과 비교됩니다. 이러한 하위 문자열이 동일한 문자 시퀀스를 나타내는 경우 결과는 true입니다. 비교할 이 &lt;code&gt;String&lt;/code&gt; 객체 의 하위 문자열은 인덱스 &lt;code&gt;toffset&lt;/code&gt; 에서 시작하며 길이는 &lt;code&gt;len&lt;/code&gt; 입니다. 비교할 other의 부분 문자열은 인덱스 &lt;code&gt;ooffset&lt;/code&gt; 에서 시작하며 길이 &lt;code&gt;len&lt;/code&gt; 을 갖습니다 . 다음 중 하나 이상에 해당하는 경우에만 결과가 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a35a15a956e685139a86641886b2392f0518d6f5" translate="yes" xml:space="preserve">
          <source>A successful &lt;code&gt;lock&lt;/code&gt; operation has the same memory synchronization effects as a successful &lt;em&gt;Lock&lt;/em&gt; action.</source>
          <target state="translated">성공적인 &lt;code&gt;lock&lt;/code&gt; 작업이 성공과 같은 메모리 동기 효과가 &lt;em&gt;잠금&lt;/em&gt; 조치를.</target>
        </trans-unit>
        <trans-unit id="b2202e21009497dd3d948f413d3ec0caa19ceeda" translate="yes" xml:space="preserve">
          <source>A successful &lt;code&gt;unlock&lt;/code&gt; operation has the same memory synchronization effects as a successful &lt;em&gt;Unlock&lt;/em&gt; action.</source>
          <target state="translated">성공적인 &lt;code&gt;unlock&lt;/code&gt; 작업이 성공과 같은 메모리 동기 효과가 &lt;em&gt;잠금 해제&lt;/em&gt; 조치를.</target>
        </trans-unit>
        <trans-unit id="8afb5d1d346a534b00455d9ec869d8a8d769864e" translate="yes" xml:space="preserve">
          <source>A suggested &lt;a href=&quot;processor#getCompletions-javax.lang.model.element.Element-javax.lang.model.element.AnnotationMirror-javax.lang.model.element.ExecutableElement-java.lang.String-&quot;&gt;&lt;em&gt;completion&lt;/em&gt;&lt;/a&gt; for an annotation.</source>
          <target state="translated">주석에 대한 제안 &lt;a href=&quot;processor#getCompletions-javax.lang.model.element.Element-javax.lang.model.element.AnnotationMirror-javax.lang.model.element.ExecutableElement-java.lang.String-&quot;&gt;&lt;em&gt;완료&lt;/em&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="80ec1e066416b3024bc04cd383f76984a0c0e51d" translate="yes" xml:space="preserve">
          <source>A suggested &lt;a href=&quot;processor#getCompletions-javax.lang.model.element.Element-javax.lang.model.element.AnnotationMirror-javax.lang.model.element.ExecutableElement-java.lang.String-&quot;&gt;&lt;em&gt;completion&lt;/em&gt;&lt;/a&gt; for an annotation. A completion is text meant to be inserted into a program as part of an annotation.</source>
          <target state="translated">주석에 대한 제안 &lt;a href=&quot;processor#getCompletions-javax.lang.model.element.Element-javax.lang.model.element.AnnotationMirror-javax.lang.model.element.ExecutableElement-java.lang.String-&quot;&gt;&lt;em&gt;완료&lt;/em&gt;&lt;/a&gt; . 완성은 주석의 일부로 프로그램에 삽입되는 텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="40098ee757a5aa9e501a57f46e8b3968b39913b7" translate="yes" xml:space="preserve">
          <source>A summary string</source>
          <target state="translated">요약 문자열</target>
        </trans-unit>
        <trans-unit id="16cdd39f71deb995f141a605be50b72bc105004c" translate="yes" xml:space="preserve">
          <source>A superclass containing instance variables and methods common to &lt;code&gt;ImageReaderSpi&lt;/code&gt; and &lt;code&gt;ImageWriterSpi&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageReaderSpi&lt;/code&gt; 및 &lt;code&gt;ImageWriterSpi&lt;/code&gt; 에 공통적 인 인스턴스 변수 및 메소드를 포함하는 수퍼 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="3390590119172b49577808c5ce8dd138f47dbc66" translate="yes" xml:space="preserve">
          <source>A superclass of all classes describing how streams should be decoded or encoded.</source>
          <target state="translated">스트림의 디코딩 또는 인코딩 방법을 설명하는 모든 클래스의 수퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="f667d3a0f0b341d171cd9d5355029a150c8905a0" translate="yes" xml:space="preserve">
          <source>A superclass of all classes describing how streams should be decoded or encoded. This class contains all the variables and methods that are shared by &lt;code&gt;ImageReadParam&lt;/code&gt; and &lt;code&gt;ImageWriteParam&lt;/code&gt;.</source>
          <target state="translated">스트림의 디코딩 또는 인코딩 방법을 설명하는 모든 클래스의 수퍼 클래스입니다. 이 클래스에는 &lt;code&gt;ImageReadParam&lt;/code&gt; 및 &lt;code&gt;ImageWriteParam&lt;/code&gt; 이 공유하는 모든 변수 및 메소드가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="a3047a8eebd86803bb57b2e2c93a3b650162f472" translate="yes" xml:space="preserve">
          <source>A superinterface for functionality common to all Image I/O service provider interfaces (SPIs).</source>
          <target state="translated">모든 이미지 I / O 서비스 제공자 인터페이스 (SPI)에 공통적 인 기능을위한 수퍼 인터페이스.</target>
        </trans-unit>
        <trans-unit id="31be060d44d7e6c7eb88314246fb5febac46c2bc" translate="yes" xml:space="preserve">
          <source>A superinterface for functionality common to all Image I/O service provider interfaces (SPIs). For more information on service provider classes, see the class comment for the &lt;code&gt;IIORegistry&lt;/code&gt; class.</source>
          <target state="translated">모든 이미지 I / O 서비스 제공자 인터페이스 (SPI)에 공통적 인 기능을위한 수퍼 인터페이스. 서비스 제공자 클래스에 대한 자세한 정보는 &lt;code&gt;IIORegistry&lt;/code&gt; 클래스 의 클래스 주석을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8741b2c4586fe28ac43f3f682be7c646d0ff2aa7" translate="yes" xml:space="preserve">
          <source>A supported print request can then be created by removing all unsupported attributes from the original attribute set, except in the case that the DocFlavor is unsupported.</source>
          <target state="translated">DocFlavor가 지원되지 않는 경우를 제외하고 원래 속성 세트에서 지원되지 않는 모든 속성을 제거하여 지원되는 인쇄 요청을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4ed6a2e37389c00ff184142da318763cf13f2f1" translate="yes" xml:space="preserve">
          <source>A supported-value attribute indicates the legal values for another attribute that a print service supports. A supported-values attribute class implements interface &lt;a href=&quot;../supportedvaluesattribute&quot;&gt; SupportedValuesAttribute&lt;/a&gt;. However, supported-values attributes never appear in attribute sets, so there is no restricted &lt;a href=&quot;../attributeset&quot;&gt; AttributeSet&lt;/a&gt; subinterface for them.</source>
          <target state="translated">지원되는 값 속성은 인쇄 서비스가 지원하는 다른 속성의 유효한 값을 나타냅니다. 지원되는 값 속성 클래스는 &lt;a href=&quot;../supportedvaluesattribute&quot;&gt;SupportedValuesAttribute&lt;/a&gt; 인터페이스를 구현 합니다. 그러나 지원되는 값 속성은 속성 집합에 나타나지 않으므로 제한된 &lt;a href=&quot;../attributeset&quot;&gt;AttributeSet&lt;/a&gt; 하위 인터페이스 가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="caad1613e01dd8f38c36351aa12d94cac21a7db2" translate="yes" xml:space="preserve">
          <source>A symbolic reference obtained by cracking a direct method handle into its consitutent symbolic parts.</source>
          <target state="translated">직접적인 방법 핸들을 구성 기호 부분으로 분해하여 얻은 기호 참조.</target>
        </trans-unit>
        <trans-unit id="cfd98e5f4341c4c30973385ed1093dba663d82c8" translate="yes" xml:space="preserve">
          <source>A symbolic reference obtained by cracking a direct method handle into its consitutent symbolic parts. To crack a direct method handle, call &lt;a href=&quot;methodhandles.lookup#revealDirect-java.lang.invoke.MethodHandle-&quot;&gt;&lt;code&gt;Lookup.revealDirect&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">직접적인 방법 핸들을 구성 기호 부분으로 분해하여 얻은 기호 참조. 직접 메서드 핸들을 크랙하려면 &lt;a href=&quot;methodhandles.lookup#revealDirect-java.lang.invoke.MethodHandle-&quot;&gt; &lt;code&gt;Lookup.revealDirect&lt;/code&gt; 를&lt;/a&gt; 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="039fe62da332003bb7ff223a5d6024a235762c2e" translate="yes" xml:space="preserve">
          <source>A synchronization aid that allows a set of threads to all wait for each other to reach a common barrier point.</source>
          <target state="translated">스레드 세트가 서로 공통 장벽 지점에 도달 할 때까지 기다릴 수 있도록하는 동기화 지원.</target>
        </trans-unit>
        <trans-unit id="b2819661ab8dc01deca63400d2ecd2758db1168a" translate="yes" xml:space="preserve">
          <source>A synchronization aid that allows a set of threads to all wait for each other to reach a common barrier point. CyclicBarriers are useful in programs involving a fixed sized party of threads that must occasionally wait for each other. The barrier is called &lt;em&gt;cyclic&lt;/em&gt; because it can be re-used after the waiting threads are released.</source>
          <target state="translated">스레드 세트가 서로 공통 장벽 지점에 도달 할 때까지 기다릴 수 있도록하는 동기화 지원. CyclicBarrier는 때때로 서로 기다려야하는 고정 크기의 스레드 파티와 관련된 프로그램에 유용합니다. 대기 스레드가 해제 된 후 재사용 할 수 있으므로 장벽을 &lt;em&gt;순환&lt;/em&gt; 이라고합니다.</target>
        </trans-unit>
        <trans-unit id="2dd17e55180091ad70522d91d40125c6a025834d" translate="yes" xml:space="preserve">
          <source>A synchronization aid that allows one or more threads to wait until a set of operations being performed in other threads completes.</source>
          <target state="translated">하나 이상의 스레드가 다른 스레드에서 수행중인 작업 세트가 완료 될 때까지 대기 할 수 있도록하는 동기화 지원.</target>
        </trans-unit>
        <trans-unit id="42875a7c649220cb056097bc1461142c65ab30e9" translate="yes" xml:space="preserve">
          <source>A synchronization point at which threads can pair and swap elements within pairs.</source>
          <target state="translated">스레드가 쌍 내에서 요소를 쌍을 이루고 교환 할 수있는 동기화 지점</target>
        </trans-unit>
        <trans-unit id="193d8d7b39955d84e6c2d6db8fe65bf3dc91625e" translate="yes" xml:space="preserve">
          <source>A synchronization point at which threads can pair and swap elements within pairs. Each thread presents some object on entry to the &lt;a href=&quot;exchanger#exchange-V-&quot;&gt;&lt;code&gt;exchange&lt;/code&gt;&lt;/a&gt; method, matches with a partner thread, and receives its partner's object on return. An Exchanger may be viewed as a bidirectional form of a &lt;a href=&quot;synchronousqueue&quot;&gt;&lt;code&gt;SynchronousQueue&lt;/code&gt;&lt;/a&gt;. Exchangers may be useful in applications such as genetic algorithms and pipeline designs.</source>
          <target state="translated">스레드가 쌍 내에서 요소를 쌍을 이루고 교환 할 수있는 동기화 지점 각 스레드는 &lt;a href=&quot;exchanger#exchange-V-&quot;&gt; &lt;code&gt;exchange&lt;/code&gt; &lt;/a&gt; 메소드 에 진입시 일부 오브젝트를 표시 하고 파트너 스레드와 일치하며 리턴시 해당 파트너의 오브젝트를 수신합니다. 교환기는 양방향 형식의 &lt;a href=&quot;synchronousqueue&quot;&gt; &lt;code&gt;SynchronousQueue&lt;/code&gt; &lt;/a&gt; 로 볼 수 있습니다 . 교환기는 유전자 알고리즘 및 파이프 라인 설계와 같은 응용에 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cdfde4527cc89cc7810b424646b8cd57dd1ff21d" translate="yes" xml:space="preserve">
          <source>A synchronizer that may be exclusively owned by a thread.</source>
          <target state="translated">스레드가 독점적으로 소유 할 수있는 동기화 프로그램.</target>
        </trans-unit>
        <trans-unit id="ea15022e50e506b1ad42b93716fcd72cce9f2398" translate="yes" xml:space="preserve">
          <source>A synchronizer that may be exclusively owned by a thread. This class provides a basis for creating locks and related synchronizers that may entail a notion of ownership. The &lt;code&gt;AbstractOwnableSynchronizer&lt;/code&gt; class itself does not manage or use this information. However, subclasses and tools may use appropriately maintained values to help control and monitor access and provide diagnostics.</source>
          <target state="translated">스레드가 독점적으로 소유 할 수있는 동기화 프로그램. 이 클래스는 소유권 개념을 수반 할 수있는 잠금 및 관련 동기화 프로그램을 작성하기위한 기초를 제공합니다. &lt;code&gt;AbstractOwnableSynchronizer&lt;/code&gt; 의 클래스 자체 관리하거나이 정보를 사용하지 않습니다. 그러나 서브 클래스 및 도구는 적절하게 유지 보수 된 값을 사용하여 액세스를 제어 및 모니터하고 진단을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39699d57501ebf8d824433b38ebeb57482c1ace5" translate="yes" xml:space="preserve">
          <source>A system-wide CookieHandler that to used by the HTTP protocol handler can be registered by doing a CookieHandler.setDefault(CookieHandler). The currently registered CookieHandler can be retrieved by calling CookieHandler.getDefault(). For more information on HTTP state management, see &lt;a href=&quot;http://www.ietf.org/rfc/rfc2965.txt&quot;&gt;&lt;i&gt;RFC 2965: HTTP State Management Mechanism&lt;/i&gt;&lt;/a&gt;</source>
          <target state="translated">HTTP 프로토콜 핸들러가 사용할 시스템 전체 CookieHandler는 CookieHandler.setDefault (CookieHandler)를 수행하여 등록 할 수 있습니다. CookieHandler.getDefault ()를 호출하여 현재 등록 된 CookieHandler를 검색 할 수 있습니다. HTTP 상태 관리에 대한 자세한 내용은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2965.txt&quot;&gt;&lt;i&gt;RFC 2965 : HTTP 상태 관리 메커니즘을&lt;/i&gt;&lt;/a&gt; 참조하십시오 &lt;i&gt;.&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="a4f6d24c10fa964f01d5103b594f6c27259f64a6" translate="yes" xml:space="preserve">
          <source>A tagging interface that all event listener interfaces must extend.</source>
          <target state="translated">모든 이벤트 리스너 인터페이스가 확장해야하는 태깅 인터페이스.</target>
        </trans-unit>
        <trans-unit id="97d08ca39761a0c4c0d769c664caa78585ebc6df" translate="yes" xml:space="preserve">
          <source>A target data line is a type of &lt;code&gt;&lt;a href=&quot;dataline&quot;&gt;&lt;code&gt;DataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; from which audio data can be read.</source>
          <target state="translated">대상 데이터 라인은 오디오 데이터를 읽을 수있는 &lt;code&gt;&lt;a href=&quot;dataline&quot;&gt;&lt;code&gt;DataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="5d359b673fd41403645d05ff40b08831867c7994" translate="yes" xml:space="preserve">
          <source>A target data line is a type of &lt;code&gt;&lt;a href=&quot;dataline&quot;&gt;&lt;code&gt;DataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; from which audio data can be read. The most common example is a data line that gets its data from an audio capture device. (The device is implemented as a mixer that writes to the target data line.)</source>
          <target state="translated">대상 데이터 라인은 오디오 데이터를 읽을 수있는 &lt;code&gt;&lt;a href=&quot;dataline&quot;&gt;&lt;code&gt;DataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 유형입니다 . 가장 일반적인 예는 오디오 캡처 장치에서 데이터를 가져 오는 데이터 라인입니다. 이 장치는 대상 데이터 라인에 쓰는 믹서로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="8096a3c92a05a033e7874064d057fb6b030976fe" translate="yes" xml:space="preserve">
          <source>A task that can be scheduled for one-time or repeated execution by a Timer.</source>
          <target state="translated">타이머에 의해 한 번 또는 반복적으로 실행되도록 예약 할 수있는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="cc7f4b86d4fe8947abdf8ac4948c2ae58856a21d" translate="yes" xml:space="preserve">
          <source>A task that returns a result and may throw an exception.</source>
          <target state="translated">결과를 반환하고 예외가 발생할 수있는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="6ec5e4974a5a970e946a8362e12d9573c6b388bf" translate="yes" xml:space="preserve">
          <source>A task that returns a result and may throw an exception. Implementors define a single method with no arguments called &lt;code&gt;call&lt;/code&gt;.</source>
          <target state="translated">결과를 반환하고 예외가 발생할 수있는 작업입니다. 구현자는 &lt;code&gt;call&lt;/code&gt; 이라는 인수가없는 단일 메소드를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="2589233383b789a311064a7fba0a546438ae60f1" translate="yes" xml:space="preserve">
          <source>A temporary file is used as a cache. If &lt;code&gt;cacheDir&lt;/code&gt;is non-&lt;code&gt;null&lt;/code&gt; and is a directory, the file will be created there. If it is &lt;code&gt;null&lt;/code&gt;, the system-dependent default temporary-file directory will be used (see the documentation for &lt;code&gt;File.createTempFile&lt;/code&gt; for details).</source>
          <target state="translated">임시 파일은 캐시로 사용됩니다. &lt;code&gt;cacheDir&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 이 아니고 디렉토리 인 경우 파일이 그곳에 작성됩니다. 이 경우 &lt;code&gt;null&lt;/code&gt; , 시스템에 의존하는 기본 임시 파일 디렉토리 (설명서 참조 사용됩니다 &lt;code&gt;File.createTempFile&lt;/code&gt; 자세한 내용을).</target>
        </trans-unit>
        <trans-unit id="30925a19cb952e0f37a51e16804861e07d99a221" translate="yes" xml:space="preserve">
          <source>A text-argument contains unquoted punctuation symbols (e.g. &quot;a &amp;lt; b-c &amp;lt; d&quot;).</source>
          <target state="translated">텍스트 인수는 따옴표없는 문장 부호 기호 (예 : &quot;a &amp;lt;bc &amp;lt;d&quot;)를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="a7d080072993e4c0db22f83098e159f024b9c9cf" translate="yes" xml:space="preserve">
          <source>A thread blocked in one of the &lt;a href=&quot;selector#select--&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;selector#select-long-&quot;&gt;&lt;code&gt;select(long)&lt;/code&gt;&lt;/a&gt; methods may be interrupted by some other thread in one of three ways:</source>
          <target state="translated">스레드는 하나에서 차단 &lt;a href=&quot;selector#select--&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;selector#select-long-&quot;&gt; &lt;code&gt;select(long)&lt;/code&gt; &lt;/a&gt; 방법은 다음 세 가지 방법 중 하나로 다른 스레드에 의해 중단 될 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="d75b5042eb9ab9f516af220f6459d96cfcc33ebb" translate="yes" xml:space="preserve">
          <source>A thread can also wake up without being notified, interrupted, or timing out, a so-called</source>
          <target state="translated">스레드는 소위 알림, 중단 또는 시간 초과없이 깨울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddca25370fd78ebbf20b84ff10d66fd3a2f6cf81" translate="yes" xml:space="preserve">
          <source>A thread can be in only one state at a given point in time. These states are virtual machine states which do not reflect any operating system thread states.</source>
          <target state="translated">스레드는 특정 시점에서 하나의 상태에만있을 수 있습니다. 이러한 상태는 운영 체제 스레드 상태를 반영하지 않는 가상 머신 상태입니다.</target>
        </trans-unit>
        <trans-unit id="585e2dbacd4992b1f6e7b30fb8c051ba6a22da00" translate="yes" xml:space="preserve">
          <source>A thread can take full control of how it responds to uncaught exceptions by having its uncaught exception handler explicitly set. If no such handler is set then the thread's &lt;code&gt;ThreadGroup&lt;/code&gt; object acts as its handler.</source>
          <target state="translated">스레드는 포착되지 않은 예외 핸들러를 명시 적으로 설정하여 포착되지 않은 예외에 응답하는 방법을 완전히 제어 할 수 있습니다. 이러한 핸들러가 설정되어 있지 않으면 스레드의 &lt;code&gt;ThreadGroup&lt;/code&gt; 객체가 해당 핸들러로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="1b78cd526d6ac90e1eacc797eaaa4ef4882f82d5" translate="yes" xml:space="preserve">
          <source>A thread executing in the Java virtual machine is in this state.</source>
          <target state="translated">JVM (Java Virtual Machine)에서 실행중인 스레드가이 상태입니다.</target>
        </trans-unit>
        <trans-unit id="e5d47d1a76dcba5b90b826f49487b6b3c89b2d54" translate="yes" xml:space="preserve">
          <source>A thread group represents a set of threads.</source>
          <target state="translated">스레드 그룹은 스레드 세트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="95d041a4e6a8bd235c1298538d87c91f142cbef5" translate="yes" xml:space="preserve">
          <source>A thread group represents a set of threads. In addition, a thread group can also include other thread groups. The thread groups form a tree in which every thread group except the initial thread group has a parent.</source>
          <target state="translated">스레드 그룹은 스레드 세트를 나타냅니다. 또한 스레드 그룹에는 다른 스레드 그룹이 포함될 수도 있습니다. 스레드 그룹은 초기 스레드 그룹을 제외한 모든 스레드 그룹에 상위가있는 트리를 형성합니다.</target>
        </trans-unit>
        <trans-unit id="892380172ee89fe877c4650f436372d6cccbda2c" translate="yes" xml:space="preserve">
          <source>A thread has a hold on a lock for each lock action that is not matched by an unlock action.</source>
          <target state="translated">스레드는 잠금 해제 조치와 일치하지 않는 각 잠금 조치마다 잠금을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="bb8a3491bca7c7fd731f9c95602bd2c30b238522" translate="yes" xml:space="preserve">
          <source>A thread in the waiting state is waiting for another thread to perform a particular action. For example, a thread that has called &lt;code&gt;Object.wait()&lt;/code&gt; on an object is waiting for another thread to call &lt;code&gt;Object.notify()&lt;/code&gt; or &lt;code&gt;Object.notifyAll()&lt;/code&gt; on that object. A thread that has called &lt;code&gt;Thread.join()&lt;/code&gt; is waiting for a specified thread to terminate.</source>
          <target state="translated">대기 상태의 스레드는 다른 스레드가 특정 조치를 수행하기를 기다리고 있습니다. 예를 들어, 객체에서 &lt;code&gt;Object.wait()&lt;/code&gt; 를 호출 한 스레드가 다른 스레드가 해당 객체에서 &lt;code&gt;Object.notify()&lt;/code&gt; 또는 &lt;code&gt;Object.notifyAll()&lt;/code&gt; 을 호출하기를 기다리고 있습니다. &lt;code&gt;Thread.join()&lt;/code&gt; 을 호출 한 스레드가 지정된 스레드가 종료되기를 기다리고 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa7366fb55e0b9dc48143f395cddf39e1f5e44ba" translate="yes" xml:space="preserve">
          <source>A thread interruption ignored because a thread was not alive at the time of the interrupt will be reflected by this method returning false.</source>
          <target state="translated">인터럽트 시점에 스레드가 활성 상태가 아니기 때문에 스레드 중단이 무시되면 false를 리턴하는이 메소드에 의해 반영됩니다.</target>
        </trans-unit>
        <trans-unit id="da5824f7219e6684675210cdfff6e7d78a6bc68f" translate="yes" xml:space="preserve">
          <source>A thread is allowed to access information about its own thread group, but not to access information about its thread group's parent thread group or any other thread groups.</source>
          <target state="translated">스레드는 자체 스레드 그룹에 대한 정보에 액세스 할 수 있지만 스레드 그룹의 상위 스레드 그룹 또는 다른 스레드 그룹에 대한 정보에는 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="dd9e26592eb7410d0987e724afcb3fcfe43667ab" translate="yes" xml:space="preserve">
          <source>A thread managed by a &lt;a href=&quot;forkjoinpool&quot;&gt;&lt;code&gt;ForkJoinPool&lt;/code&gt;&lt;/a&gt;, which executes &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">a로 관리하는 스레드 &lt;a href=&quot;forkjoinpool&quot;&gt; &lt;code&gt;ForkJoinPool&lt;/code&gt; &lt;/a&gt; 실행, &lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt; S.</target>
        </trans-unit>
        <trans-unit id="ac970f4f0ea5786ae640fa799ef4b728eba4ae76" translate="yes" xml:space="preserve">
          <source>A thread managed by a &lt;a href=&quot;forkjoinpool&quot;&gt;&lt;code&gt;ForkJoinPool&lt;/code&gt;&lt;/a&gt;, which executes &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;s. This class is subclassable solely for the sake of adding functionality -- there are no overridable methods dealing with scheduling or execution. However, you can override initialization and termination methods surrounding the main task processing loop. If you do create such a subclass, you will also need to supply a custom &lt;a href=&quot;forkjoinpool.forkjoinworkerthreadfactory&quot;&gt;&lt;code&gt;ForkJoinPool.ForkJoinWorkerThreadFactory&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;forkjoinpool#ForkJoinPool-int-java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory-java.lang.Thread.UncaughtExceptionHandler-int-java.lang.String-&quot;&gt;use it&lt;/a&gt; in a &lt;code&gt;ForkJoinPool&lt;/code&gt;.</source>
          <target state="translated">a로 관리하는 스레드 &lt;a href=&quot;forkjoinpool&quot;&gt; &lt;code&gt;ForkJoinPool&lt;/code&gt; &lt;/a&gt; 실행, &lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt; S. 이 클래스는 기능 추가를 위해서만 서브 클래스 가능합니다. 스케줄링 또는 실행을 처리하는 재정의 가능한 메소드는 없습니다. 그러나 기본 작업 처리 루프를 둘러싼 초기화 및 종료 방법을 재정의 할 수 있습니다. 이러한 서브 클래스를 작성하는 경우 사용자 정의도 제공해야합니다.&lt;a href=&quot;forkjoinpool.forkjoinworkerthreadfactory&quot;&gt; &lt;code&gt;ForkJoinPool.ForkJoinWorkerThreadFactory&lt;/code&gt; &lt;/a&gt; 하기 위해&lt;a href=&quot;forkjoinpool#ForkJoinPool-int-java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory-java.lang.Thread.UncaughtExceptionHandler-int-java.lang.String-&quot;&gt; 사용&lt;/a&gt; A의 &lt;code&gt;ForkJoinPool&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="9b816a60dc194b56b130d21de3a879fddc441488" translate="yes" xml:space="preserve">
          <source>A thread state.</source>
          <target state="translated">스레드 상태</target>
        </trans-unit>
        <trans-unit id="9fe95823afee1dbcc06b4543ab0ad0dcc826b19d" translate="yes" xml:space="preserve">
          <source>A thread state. A thread can be in one of the following states:</source>
          <target state="translated">스레드 상태 스레드는 다음 상태 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6842aeca8d8d5114edda2e86700755add8754e0e" translate="yes" xml:space="preserve">
          <source>A thread that has exited is in this state.</source>
          <target state="translated">종료 된 스레드가이 상태에 있습니다.</target>
        </trans-unit>
        <trans-unit id="84e7a0859d00a7e46eae755d7f2a29a8da5729b4" translate="yes" xml:space="preserve">
          <source>A thread that has not yet started is in this state.</source>
          <target state="translated">아직 시작되지 않은 스레드가이 상태에 있습니다.</target>
        </trans-unit>
        <trans-unit id="a662855fd86e2424ce462a3770a3db817bd77b54" translate="yes" xml:space="preserve">
          <source>A thread that is blocked waiting for a monitor lock is in this state.</source>
          <target state="translated">모니터 잠금을 기다리면서 차단 된 스레드가이 상태에 있습니다.</target>
        </trans-unit>
        <trans-unit id="02fbead1cda97aa08be28b28708cf591303853a9" translate="yes" xml:space="preserve">
          <source>A thread that is waiting for another thread to perform an action for up to a specified waiting time is in this state.</source>
          <target state="translated">다른 스레드가 지정된 대기 시간까지 작업을 수행하기를 기다리는 스레드가이 상태에 있습니다.</target>
        </trans-unit>
        <trans-unit id="002b0be4abc15e3f02ebade9b59e62fe5b669dbd" translate="yes" xml:space="preserve">
          <source>A thread that is waiting indefinitely for another thread to perform a particular action is in this state.</source>
          <target state="translated">다른 스레드가 특정 조치를 수행하기를 무기한 대기중인 스레드는이 상태입니다.</target>
        </trans-unit>
        <trans-unit id="0258e448ca87c340c46139b21f216322673258a0" translate="yes" xml:space="preserve">
          <source>A thread that tries to acquire a fair read lock (non-reentrantly) will block if either the write lock is held, or there is a waiting writer thread. The thread will not acquire the read lock until after the oldest currently waiting writer thread has acquired and released the write lock. Of course, if a waiting writer abandons its wait, leaving one or more reader threads as the longest waiters in the queue with the write lock free, then those readers will be assigned the read lock.</source>
          <target state="translated">쓰기 잠금이 보류되어 있거나 대기중인 기록기 스레드가있는 경우 페어 읽기 잠금 (재 입력 불가능)을 얻으려고 시도하는 스레드가 차단됩니다. 현재 대기중인 가장 오래된 기록기 스레드가 쓰기 잠금을 획득하고 해제 할 때까지 스레드는 읽기 잠금을 획득하지 않습니다. 물론 대기중인 기록기가 대기를 포기하고 쓰기 잠금이 해제 된 큐에서 가장 긴 대기자로서 하나 이상의 판독기 스레드를 남겨두면 해당 판독기에 읽기 잠금이 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="9a2ec4f75b588dede82c5805c28b7a8a86668942" translate="yes" xml:space="preserve">
          <source>A thread that tries to acquire a fair write lock (non-reentrantly) will block unless both the read lock and write lock are free (which implies there are no waiting threads). (Note that the non-blocking &lt;a href=&quot;reentrantreadwritelock.readlock#tryLock--&quot;&gt;&lt;code&gt;ReentrantReadWriteLock.ReadLock.tryLock()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;reentrantreadwritelock.writelock#tryLock--&quot;&gt;&lt;code&gt;ReentrantReadWriteLock.WriteLock.tryLock()&lt;/code&gt;&lt;/a&gt; methods do not honor this fair setting and will immediately acquire the lock if it is possible, regardless of waiting threads.)</source>
          <target state="translated">읽기 잠금과 쓰기 잠금이 모두 사용 가능하지 않은 경우 (대기 스레드가 없음을 의미) 정당한 쓰기 잠금을 획득하려고 시도하는 스레드 (재진입 가능하지 않음)는 차단됩니다. 비 차단 &lt;a href=&quot;reentrantreadwritelock.readlock#tryLock--&quot;&gt; &lt;code&gt;ReentrantReadWriteLock.ReadLock.tryLock()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;reentrantreadwritelock.writelock#tryLock--&quot;&gt; &lt;code&gt;ReentrantReadWriteLock.WriteLock.tryLock()&lt;/code&gt; &lt;/a&gt; 메소드는이 공정한 설정을 따르지 않으며 대기 스레드에 관계없이 가능하면 즉시 잠금을 획득합니다.</target>
        </trans-unit>
        <trans-unit id="6291225ffcc4d85c817a068d1948e977dcf528f1" translate="yes" xml:space="preserve">
          <source>A thread-safe variant of &lt;a href=&quot;../arraylist&quot;&gt;&lt;code&gt;ArrayList&lt;/code&gt;&lt;/a&gt; in which all mutative operations (&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, and so on) are implemented by making a fresh copy of the underlying array.</source>
          <target state="translated">기본 배열의 새로운 복사본을 만들어 모든 변이 연산 ( &lt;code&gt;add&lt;/code&gt; , &lt;code&gt;set&lt;/code&gt; 등)이 구현되는 &lt;a href=&quot;../arraylist&quot;&gt; &lt;code&gt;ArrayList&lt;/code&gt; &lt;/a&gt; 의 스레드 안전 변형입니다 .</target>
        </trans-unit>
        <trans-unit id="cc34521320daf7ba82b9dc75a235c94939e2ee53" translate="yes" xml:space="preserve">
          <source>A thread-safe, mutable sequence of characters.</source>
          <target state="translated">스레드로부터 안전하고 변경 가능한 문자 시퀀스</target>
        </trans-unit>
        <trans-unit id="ea628a80acde8e671413c1f38e4f18fddafb0925" translate="yes" xml:space="preserve">
          <source>A thread-safe, mutable sequence of characters. A string buffer is like a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, but can be modified. At any point in time it contains some particular sequence of characters, but the length and content of the sequence can be changed through certain method calls.</source>
          <target state="translated">스레드로부터 안전하고 변경 가능한 문자 시퀀스 문자열 버퍼는&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 과 비슷하지만 수정할 수 있습니다. 언제든지 특정 문자 시퀀스가 ​​포함되어 있지만 시퀀스의 길이와 내용은 특정 메서드 호출을 통해 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24d7a9c5f465c988ea212c5d9635dfd2cdab580f" translate="yes" xml:space="preserve">
          <source>A three-letter abbreviation of this locale's country.</source>
          <target state="translated">이 로케일 국가의 3 글자 약어입니다.</target>
        </trans-unit>
        <trans-unit id="3f4945905337dbda8bfc802300ad7b6d83ece4c2" translate="yes" xml:space="preserve">
          <source>A three-letter abbreviation of this locale's language.</source>
          <target state="translated">이 로케일의 언어를 3 자로 된 약어입니다.</target>
        </trans-unit>
        <trans-unit id="c62ae97500529e3eeeb2b2f16bc264d307b078c3" translate="yes" xml:space="preserve">
          <source>A throwable contains a snapshot of the execution stack of its thread at the time it was created. It can also contain a message string that gives more information about the error. Over time, a throwable can &lt;a href=&quot;throwable#addSuppressed-java.lang.Throwable-&quot;&gt;suppress&lt;/a&gt; other throwables from being propagated. Finally, the throwable can also contain a</source>
          <target state="translated">throwable에는 스레드 생성시 스레드 실행 스택의 스냅 샷이 포함됩니다. 오류에 대한 자세한 정보를 제공하는 메시지 문자열도 포함 할 수 있습니다. 시간이 지남에, throw 가능 객체 캔 &lt;a href=&quot;throwable#addSuppressed-java.lang.Throwable-&quot;&gt;억제&lt;/a&gt; 다른 Throwable이 전파되는 것을 . 마지막으로, throwable은</target>
        </trans-unit>
        <trans-unit id="844e3b37e96fa731b7906e7b43b4d23edb37db98" translate="yes" xml:space="preserve">
          <source>A time with an offset from UTC/Greenwich in the ISO-8601 calendar system, such as &lt;code&gt;10:15:30+01:00&lt;/code&gt;.</source>
          <target state="translated">ISO-8601 캘린더 시스템에서 UTC / 그리니치에서 오프셋이있는 시간 (예 : &lt;code&gt;10:15:30+01:00&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="44d7d356271e2af3ac760a90efcb2cad007aa461" translate="yes" xml:space="preserve">
          <source>A time without a time-zone in the ISO-8601 calendar system, such as &lt;code&gt;10:15:30&lt;/code&gt;.</source>
          <target state="translated">ISO-8601 캘린더 시스템에서 시간대가없는 시간 (예 : &lt;code&gt;10:15:30&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="c14465e8db9f9f940e2b35e21227a185415be9c0" translate="yes" xml:space="preserve">
          <source>A time-based amount of time, such as '34.5 seconds'.</source>
          <target state="translated">'34 .5 초 '와 같은 시간 기반 시간입니다.</target>
        </trans-unit>
        <trans-unit id="3b4ffad2ef91c64d69380dc05fa577572afb357c" translate="yes" xml:space="preserve">
          <source>A time-zone ID, such as &lt;code&gt;Europe/Paris&lt;/code&gt;.</source>
          <target state="translated">같은 시간대 ID, &lt;code&gt;Europe/Paris&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38bf9430f15ab68aa39ece1ffeb834911301e750" translate="yes" xml:space="preserve">
          <source>A time-zone can be invalid if it is deserialized in a Java Runtime which does not have the same rules loaded as the Java Runtime that stored it. In this case, calling this method will throw a &lt;code&gt;ZoneRulesException&lt;/code&gt;.</source>
          <target state="translated">표준 시간대가 저장된 Java 런타임과 동일한 규칙이로드되지 않은 Java 런타임에서 직렬화가 해제되면 표준 시간대가 유효하지 않을 수 있습니다. 이 경우이 메소드를 호출하면 &lt;code&gt;ZoneRulesException&lt;/code&gt; 이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="3e0b53d50a23078544418a172178f83aeebf59ea" translate="yes" xml:space="preserve">
          <source>A time-zone offset from Greenwich/UTC, such as &lt;code&gt;+02:00&lt;/code&gt;.</source>
          <target state="translated">그리니치 / UTC에서 시간대 오프셋 (예 : &lt;code&gt;+02:00&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="209738376b4561d2bcb16ca6d698d25bca7f5476" translate="yes" xml:space="preserve">
          <source>A time-zone offset is the amount of time that a time-zone differs from Greenwich/UTC. This is usually a fixed number of hours and minutes.</source>
          <target state="translated">시간대 오프셋은 시간대가 그리니치 / UTC와 다른 시간입니다. 일반적으로 고정 된 시간과 분입니다.</target>
        </trans-unit>
        <trans-unit id="9b7e4f7bc8f0043d06b5f5927770ec6755bed14e" translate="yes" xml:space="preserve">
          <source>A token is returned by taking a substring of the string that was used to create the &lt;code&gt;StringTokenizer&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;StringTokenizer&lt;/code&gt; 를 만드는 데 사용 된 문자열의 하위 문자열을 사용하여 토큰이 반환됩니다. 오브젝트 .</target>
        </trans-unit>
        <trans-unit id="813280b36eeae178180e9b38b1461d14a8da96c5" translate="yes" xml:space="preserve">
          <source>A token representing a lock on a region of a file.</source>
          <target state="translated">파일 영역에 대한 잠금을 나타내는 토큰입니다.</target>
        </trans-unit>
        <trans-unit id="7dcd368898f84119fb11dd23cbfef5dae26a428a" translate="yes" xml:space="preserve">
          <source>A token representing the membership of an Internet Protocol (IP) multicast group.</source>
          <target state="translated">인터넷 프로토콜 (IP) 멀티 캐스트 그룹의 구성원을 나타내는 토큰입니다.</target>
        </trans-unit>
        <trans-unit id="c296fb90c74609a8957110aa69c3a79a79b36082" translate="yes" xml:space="preserve">
          <source>A token representing the registration</source>
          <target state="translated">등록을 나타내는 토큰</target>
        </trans-unit>
        <trans-unit id="3a9fe0d9b3f30b588f6d14a77d1fc43be807e446" translate="yes" xml:space="preserve">
          <source>A token representing the registration of a &lt;a href=&quot;selectablechannel&quot;&gt;&lt;code&gt;SelectableChannel&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;selector&quot;&gt;&lt;code&gt;Selector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">토큰 a의 등록 대표 &lt;a href=&quot;selectablechannel&quot;&gt; &lt;code&gt;SelectableChannel&lt;/code&gt; &lt;/a&gt; A를 &lt;a href=&quot;selector&quot;&gt; &lt;code&gt;Selector&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="88b5b5e192f45736fe90cca90c7a8b6c800660c0" translate="yes" xml:space="preserve">
          <source>A token representing the registration of a &lt;a href=&quot;watchable&quot;&gt;&lt;code&gt;watchable&lt;/code&gt;&lt;/a&gt; object with a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; 에 감시&lt;/a&gt;&lt;a href=&quot;watchable&quot;&gt; &lt;code&gt;watchable&lt;/code&gt; &lt;/a&gt; 객체 의 등록을 나타내는 토큰 입니다.</target>
        </trans-unit>
        <trans-unit id="845b62c25607213fef5a19d4e61f6ef6db6330e6" translate="yes" xml:space="preserve">
          <source>A tool might use this information to determine if any options provided by a user are unrecognized by any processor, in which case it may wish to report a warning.</source>
          <target state="translated">도구는이 정보를 사용하여 사용자가 제공 한 옵션이 프로세서에 의해 인식되지 않는지 여부를 판별 할 수 있으며,이 경우 경고를보고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df852f683d2a1bba8335378fbd0db948a848eff4" translate="yes" xml:space="preserve">
          <source>A top-level Spliterator should not report both &lt;code&gt;CONCURRENT&lt;/code&gt; and &lt;code&gt;SIZED&lt;/code&gt;, since the finite size, if known, may change if the source is concurrently modified during traversal. Such a Spliterator is inconsistent and no guarantees can be made about any computation using that Spliterator. Sub-spliterators may report &lt;code&gt;SIZED&lt;/code&gt; if the sub-split size is known and additions or removals to the source are not reflected when traversing.</source>
          <target state="translated">최상위 Spliterator 모두보고 안 &lt;code&gt;CONCURRENT&lt;/code&gt; 하고 &lt;code&gt;SIZED&lt;/code&gt; 을 소스가 동시에 탐색 중에 수정되는 경우 유한 크기가 알려진 경우, 변경 될 수 있기 때문에. 이러한 스플리터는 일관되지 않으며 해당 스플리터를 사용한 계산에 대해 보장 할 수 없습니다. 하위 spliterators은보고 할 수 있습니다 &lt;code&gt;SIZED&lt;/code&gt; 하위 분할 크기가 알려진 소스에 추가 또는 제거를 할 때 이송을 반영하지 않는 경우.</target>
        </trans-unit>
        <trans-unit id="388345443d8366b32e7123dc1c2098627e077749" translate="yes" xml:space="preserve">
          <source>A top-level type, not contained within another type.</source>
          <target state="translated">다른 유형에 포함되지 않은 최상위 유형.</target>
        </trans-unit>
        <trans-unit id="eb474dd1f2b80e5f5359081cf5359e68279e7772" translate="yes" xml:space="preserve">
          <source>A transformation is of the form:</source>
          <target state="translated">변환은 다음과 같은 형식입니다.</target>
        </trans-unit>
        <trans-unit id="897a6080a7da5b7b84eb4bb261c7b1a25f1b48e8" translate="yes" xml:space="preserve">
          <source>A transition between two offsets caused by a discontinuity in the local time-line.</source>
          <target state="translated">로컬 타임 라인의 불연속으로 인해 두 오프셋 간의 전환.</target>
        </trans-unit>
        <trans-unit id="4ddea8c1995b8f7a692287ad79cac41ec6df23ac" translate="yes" xml:space="preserve">
          <source>A transition between two offsets is normally the result of a daylight savings cutover. The discontinuity is normally a gap in spring and an overlap in autumn. &lt;code&gt;ZoneOffsetTransition&lt;/code&gt; models the transition between the two offsets.</source>
          <target state="translated">두 오프셋 사이의 전환은 일반적으로 일광 절약 시간제 컷 오버의 결과입니다. 불연속성은 일반적으로 봄의 틈과 가을의 겹침입니다. &lt;code&gt;ZoneOffsetTransition&lt;/code&gt; 은 두 오프셋 간의 전환을 모델링합니다.</target>
        </trans-unit>
        <trans-unit id="f3b2166861c3e49166b5a9efa9027a2043e969b1" translate="yes" xml:space="preserve">
          <source>A transition is used to model the cases of a Gap or Overlap. The Normal case will return null.</source>
          <target state="translated">전환은 갭 또는 오버랩의 경우를 모델링하는 데 사용됩니다. 일반적인 경우는 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6ac35618f1dc34cf64aaee6456c149972fbe3b79" translate="yes" xml:space="preserve">
          <source>A transparent parameter specification is obtained from an &lt;code&gt;AlgorithmParameters&lt;/code&gt; object via a call to &lt;code&gt;getParameterSpec&lt;/code&gt;, and a byte encoding of the parameters is obtained via a call to &lt;code&gt;getEncoded&lt;/code&gt;.</source>
          <target state="translated">투명한 매개 변수 스펙은 &lt;code&gt;getParameterSpec&lt;/code&gt; 호출을 통해 &lt;code&gt;AlgorithmParameters&lt;/code&gt; 오브젝트 에서 확보되며 매개 변수 의 바이트 인코딩은 &lt;code&gt;getEncoded&lt;/code&gt; 호출을 통해 확보됩니다 .</target>
        </trans-unit>
        <trans-unit id="7d4ed2b72944ec65bc489ad9dfa116b67dce25da" translate="yes" xml:space="preserve">
          <source>A transparent stream that updates the associated message digest using the bits going through the stream.</source>
          <target state="translated">스트림을 통과하는 비트를 사용하여 관련 메시지 요약을 업데이트하는 투명 스트림입니다.</target>
        </trans-unit>
        <trans-unit id="e420bcbbeb1462aea26de977cbcd4d1a99419a11" translate="yes" xml:space="preserve">
          <source>A tray has run out of media.</source>
          <target state="translated">용지함에 용지가 부족합니다.</target>
        </trans-unit>
        <trans-unit id="19de919b12a24578a5112c348d454ad4af1981b1" translate="yes" xml:space="preserve">
          <source>A trust anchor or most-trusted Certification Authority (CA).</source>
          <target state="translated">트러스트 앵커 또는 가장 신뢰할 수있는 인증 기관 (CA).</target>
        </trans-unit>
        <trans-unit id="9b1b6eb0db135bd107443d324235d42a6e65e809" translate="yes" xml:space="preserve">
          <source>A two-dimensional size attribute's X and Y dimension values are stored internally as integers in units of micrometers (&amp;micro;m), where 1 micrometer = 10&lt;sup&gt;-6&lt;/sup&gt; meter = 1/1000 millimeter = 1/25400 inch. This permits dimensions to be represented exactly to a precision of 1/1000 mm (= 1 &amp;micro;m) or 1/100 inch (= 254 &amp;micro;m). If fractional inches are expressed in negative powers of two, this permits dimensions to be represented exactly to a precision of 1/8 inch (= 3175 &amp;micro;m) but not 1/16 inch (because 1/16 inch does not equal an integral number of &amp;micro;m).</source>
          <target state="translated">2 차원 크기 속성의 X 및 Y 차원 값은 내부적으로 1 마이크로 미터 = 10 &lt;sup&gt;-6&lt;/sup&gt; 미터 = 1/1000 밀리미터 = 1/25400 인치 인 마이크로 미터 (&amp;micro;m) 단위의 정수로 저장됩니다 . 따라서 치수를 1 / 1000mm (= 1&amp;micro;m) 또는 1/100 인치 (= 254&amp;micro;m)의 정밀도로 정확하게 표현할 수 있습니다. 분수 인치를 2의 음의 거듭 제곱으로 표현하면 치수가 1/8 인치 (= 3175 &amp;micro;m)의 정밀도로 정확하게 표현 될 수 있지만 1/16 인치는 아닙니다 (1/1 인치는 정수의 정수와 같지 않기 때문) &amp;micro;m).</target>
        </trans-unit>
        <trans-unit id="6af0ea5ed773abf8a618cca26180be5e309bd6fa" translate="yes" xml:space="preserve">
          <source>A two-dimensional size attribute's value consists of two items, the X dimension and the Y dimension. A two-dimensional size attribute may be constructed by supplying the two values and indicating the units in which the values are measured. Methods are provided to return a two-dimensional size attribute's values, indicating the units in which the values are to be returned. The two most common size units are inches (in) and millimeters (mm), and exported constants &lt;a href=&quot;size2dsyntax#INCH&quot;&gt;&lt;code&gt;INCH&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;size2dsyntax#MM&quot;&gt;&lt;code&gt;MM&lt;/code&gt;&lt;/a&gt; are provided for indicating those units.</source>
          <target state="translated">2 차원 크기 속성 값은 X 차원과 Y 차원의 두 항목으로 구성됩니다. 2 차원 크기 속성은 2 개의 값을 제공하고 값이 측정되는 단위를 표시함으로써 구성 될 수있다. 2 차원 크기 속성 값을 리턴하는 메소드가 제공되어 값이 리턴되는 단위를 나타냅니다. 가장 일반적인 두 가지 크기 단위는 인치 (인치)와 밀리미터 (mm)이며 내 보낸 상수 &lt;a href=&quot;size2dsyntax#INCH&quot;&gt; &lt;code&gt;INCH&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;size2dsyntax#MM&quot;&gt; &lt;code&gt;MM&lt;/code&gt; &lt;/a&gt; 은 해당 단위를 표시하기 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="a1589ca1adc837ae5628057c8ce7a3932d1f2632" translate="yes" xml:space="preserve">
          <source>A two-element array with the X dimension at index 0 and the Y dimension at index 1.</source>
          <target state="translated">인덱스 0에 X 차원이 있고 인덱스 1에 Y 차원이있는 2 요소 배열</target>
        </trans-unit>
        <trans-unit id="1e69f6f1132af4fbadcfb62539e96a8b114b1270" translate="yes" xml:space="preserve">
          <source>A two-element array with the cross feed direction resolution at index 0 and the feed direction resolution at index 1.</source>
          <target state="translated">인덱스 0에서 교차 피드 방향 해상도와 인덱스 1에서 피드 방향 해상도를 갖는 2 요소 배열.</target>
        </trans-unit>
        <trans-unit id="d57173a2b77351586eddfe5d33bd50e670f61d6d" translate="yes" xml:space="preserve">
          <source>A type Q is considered adaptable to S as follows:</source>
          <target state="translated">유형 Q는 다음과 같이 S에 적용 가능한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="67e13e4b14d00f981f86166ef81f0e900ec8fd76" translate="yes" xml:space="preserve">
          <source>A type of event that is sent when a line begins to engage in active input or output of audio data in response to a &lt;a href=&quot;dataline#start--&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; request.</source>
          <target state="translated">라인이 &lt;a href=&quot;dataline#start--&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; 요청 에 응답하여 오디오 데이터의 활성 입력 또는 출력에 관여하기 시작할 때 전송되는 이벤트 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="4f8baa6a39c7763b8605d146836404fbeaaa331c" translate="yes" xml:space="preserve">
          <source>A type of event that is sent when a line ceases active input or output of audio data in response to a &lt;a href=&quot;dataline#stop--&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; request, or because the end of media has been reached.</source>
          <target state="translated">&lt;a href=&quot;dataline#stop--&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt; 요청 에 대한 응답으로 라인이 오디오 데이터의 활성 입력 또는 출력을 중단 할 때 또는 미디어의 끝에 도달 하여 전송되는 이벤트 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="9c164cc473efaf1cd9f28153c4ba8ec17d4aec8d" translate="yes" xml:space="preserve">
          <source>A type of event that is sent when a line closes, freeing the system resources it had obtained when it was opened.</source>
          <target state="translated">줄을 닫을 때 전송되는 이벤트 유형으로, 열 때 얻은 시스템 자원을 비 웁니다.</target>
        </trans-unit>
        <trans-unit id="7cfe673373c81efaaf12554915dee4875bb26384" translate="yes" xml:space="preserve">
          <source>A type of event that is sent when a line opens, reserving system resources for itself.</source>
          <target state="translated">시스템 자원을 예약하여 회선이 열릴 때 전송되는 이벤트 유형입니다.</target>
        </trans-unit>
        <trans-unit id="95fc5608fbb2102542ca13e9798a5da14bfe52ae" translate="yes" xml:space="preserve">
          <source>A type of port that gets audio from a CD-ROM drive.</source>
          <target state="translated">CD-ROM 드라이브에서 오디오를 가져 오는 포트 유형입니다.</target>
        </trans-unit>
        <trans-unit id="9aa462ce751d598b65e535fa8d257d8473a850f2" translate="yes" xml:space="preserve">
          <source>A type of port that gets audio from a built-in microphone or a microphone jack.</source>
          <target state="translated">내장 마이크 또는 마이크 잭에서 오디오를 가져 오는 포트 유형입니다.</target>
        </trans-unit>
        <trans-unit id="d0c7232b58a7129e1cb2f5a054b3632dffc6cec1" translate="yes" xml:space="preserve">
          <source>A type of port that gets audio from a line-level audio input jack.</source>
          <target state="translated">라인 레벨 오디오 입력 잭에서 오디오를 가져 오는 포트 유형입니다.</target>
        </trans-unit>
        <trans-unit id="d87f355e0d7ada50b56b6473112041c2eec51100" translate="yes" xml:space="preserve">
          <source>A type of port that sends audio to a built-in speaker or a speaker jack.</source>
          <target state="translated">내장 스피커 또는 스피커 잭으로 오디오를 보내는 포트 유형입니다.</target>
        </trans-unit>
        <trans-unit id="6c1ac4f7c51b156a36dfece9a5366fa3391a1968" translate="yes" xml:space="preserve">
          <source>A type of port that sends audio to a headphone jack.</source>
          <target state="translated">오디오를 헤드폰 잭으로 보내는 포트 유형입니다.</target>
        </trans-unit>
        <trans-unit id="dc9a7914a6d90a6a766836264a93c2963bb35ce4" translate="yes" xml:space="preserve">
          <source>A type of port that sends audio to a line-level audio output jack.</source>
          <target state="translated">오디오를 라인 레벨 오디오 출력 잭으로 보내는 포트 유형입니다.</target>
        </trans-unit>
        <trans-unit id="e7b9b1e0322db70d0799ca7453bd8697791978d8" translate="yes" xml:space="preserve">
          <source>A type parameter.</source>
          <target state="translated">유형 매개 변수.</target>
        </trans-unit>
        <trans-unit id="d2f5d6d14a20dd6ded9b5c2c60e6932c122f8834" translate="yes" xml:space="preserve">
          <source>A type that is a named member of another type.</source>
          <target state="translated">다른 유형의 명명 된 멤버 인 유형입니다.</target>
        </trans-unit>
        <trans-unit id="6ca958f1089d3d1582d1c30aba329c8223832dd9" translate="yes" xml:space="preserve">
          <source>A type variable.</source>
          <target state="translated">타입 변수.</target>
        </trans-unit>
        <trans-unit id="f568e44d9db43475aea4448ec4843fd3c5f84703" translate="yes" xml:space="preserve">
          <source>A type without a name.</source>
          <target state="translated">이름이없는 타입.</target>
        </trans-unit>
        <trans-unit id="7fc5812b75947de2fdfa2d358b559863a2fa00f8" translate="yes" xml:space="preserve">
          <source>A typesafe enumeration for byte orders.</source>
          <target state="translated">바이트 순서의 형태 보증 된 열거입니다.</target>
        </trans-unit>
        <trans-unit id="9629c5a227b607fb8623c45ae1131d853a64a7cb" translate="yes" xml:space="preserve">
          <source>A typesafe enumeration for coding-error actions.</source>
          <target state="translated">코딩 오류 작업을위한 형식이 안전한 열거입니다.</target>
        </trans-unit>
        <trans-unit id="7f3c566c8799b0e94bae351a8e89d02a585b6be2" translate="yes" xml:space="preserve">
          <source>A typesafe enumeration for file-mapping modes.</source>
          <target state="translated">파일 매핑 모드의 형태 보증 된 열거입니다.</target>
        </trans-unit>
        <trans-unit id="d70f54c91e23d0b34102cac6eaa6aa2e7a445388" translate="yes" xml:space="preserve">
          <source>A typesafe enumeration of the access control entry types.</source>
          <target state="translated">액세스 제어 엔트리 타입의 형태 보증 된 열거입니다.</target>
        </trans-unit>
        <trans-unit id="8080e730ad4d6c9c785c23fed1387406a8a5ba86" translate="yes" xml:space="preserve">
          <source>A typical application first constructs an instance of this class, sets up the syntax tables, and then repeatedly loops calling the &lt;code&gt;nextToken&lt;/code&gt; method in each iteration of the loop until it returns the value &lt;code&gt;TT_EOF&lt;/code&gt;.</source>
          <target state="translated">일반적인 응용 프로그램은 &lt;code&gt;nextToken&lt;/code&gt; 클래스의 인스턴스를 생성하고 구문 테이블을 설정 한 다음 값이 &lt;code&gt;TT_EOF&lt;/code&gt; 를 반환 할 때까지 루프의 각 반복에서 nextToken 메서드를 호출하여 반복적으로 반복 합니다 .</target>
        </trans-unit>
        <trans-unit id="24013956705f21b593efd49ea8111d4997859f82" translate="yes" xml:space="preserve">
          <source>A typical application using the Java Print Service API performs these steps to process a print request:</source>
          <target state="translated">Java Print Service API를 사용하는 일반적인 응용 프로그램은 다음 단계를 수행하여 인쇄 요청을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="eb92878024bdeb885f850332f5eafb6288cbdf73" translate="yes" xml:space="preserve">
          <source>A typical caller instantiates a LoginContext with a</source>
          <target state="translated">전형적인 호출자는 LoginContext를</target>
        </trans-unit>
        <trans-unit id="8bb858b81365a754f63869f8b31e6ed74a47e097" translate="yes" xml:space="preserve">
          <source>A typical invocation sequence is thus</source>
          <target state="translated">따라서 일반적인 호출 순서는</target>
        </trans-unit>
        <trans-unit id="b3760c59903b17ed7e822701eba23c9e8f3f4859" translate="yes" xml:space="preserve">
          <source>A typical printing application uses the &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; because print-request attributes are the types of attributes that client usually specifies. This example demonstrates creating an attribute set of print-request attributes and locating a printer that can print the document according to the specified attributes:</source>
          <target state="translated">인쇄 요청 속성은 클라이언트가 일반적으로 지정하는 속성 유형이므로 일반적인 인쇄 응용 프로그램은 &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; 을 사용 합니다. 이 예제는 인쇄 요청 속성의 속성 세트를 작성하고 지정된 속성에 따라 문서를 인쇄 할 수있는 프린터를 찾는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a5baf190db84e781f436ff0342abd236c45cde41" translate="yes" xml:space="preserve">
          <source>A typical usage for verification is the following (having received SignedObject &lt;code&gt;so&lt;/code&gt;):</source>
          <target state="translated">검증의 일반적인 사용법은 (SignedObject를를 수신 한 다음과 같다 &lt;code&gt;so&lt;/code&gt; ) :</target>
        </trans-unit>
        <trans-unit id="df1c300409e9fddfaa70cfa048dd7347e9ff1a9b" translate="yes" xml:space="preserve">
          <source>A typical usage idiom for this method would be:</source>
          <target state="translated">이 방법의 일반적인 사용 관용구는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="44ad60b85be1c19ee78caaa45318e44f0e4981da" translate="yes" xml:space="preserve">
          <source>A typical use of this class is</source>
          <target state="translated">이 클래스의 일반적인 사용은</target>
        </trans-unit>
        <trans-unit id="30f8cba8a91891fa687c8bee46d2c007bbd38145" translate="yes" xml:space="preserve">
          <source>A typical way to use this class is to add extra items to the &lt;code&gt;CompositeData&lt;/code&gt; in addition to the ones that are declared in the &lt;code&gt;CompositeType&lt;/code&gt; supplied by the MXBean framework. To do this, you must create another &lt;code&gt;CompositeType&lt;/code&gt; that has all the same items, plus your extra items.</source>
          <target state="translated">이 클래스를 사용하는 일반적인 방법 은 MXBean 프레임 워크에서 제공 하는 &lt;code&gt;CompositeType&lt;/code&gt; 에 선언 된 항목 외에 추가 항목을 &lt;code&gt;CompositeData&lt;/code&gt; 에 추가하는 것입니다 . 이렇게하려면 모든 동일한 항목과 추가 항목이있는 다른 &lt;code&gt;CompositeType&lt;/code&gt; 을 작성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2821ba8382bbfaba7957f8204c9e3724448d3469" translate="yes" xml:space="preserve">
          <source>A union type.</source>
          <target state="translated">유니온 타입.</target>
        </trans-unit>
        <trans-unit id="f3cbc7c2e1b4690eec46471ec2cf375131e0b8cd" translate="yes" xml:space="preserve">
          <source>A unit is time-based if it can be used to imply meaning from a time. It must have a &lt;a href=&quot;temporalunit#getDuration--&quot;&gt;duration&lt;/a&gt; that divides into the length of a standard day without remainder. Note that it is valid for both &lt;code&gt;isDateBased()&lt;/code&gt; and &lt;code&gt;isTimeBased()&lt;/code&gt; to return false, such as when representing a unit like 36 hours.</source>
          <target state="translated">단위는 시간에서 의미를 내포하는 데 사용될 수있는 경우 시간 기반입니다. 남은 시간없이 표준 날짜의 길이로 나눌 수있는 &lt;a href=&quot;temporalunit#getDuration--&quot;&gt;기간&lt;/a&gt; 이 있어야합니다 . &lt;code&gt;isDateBased()&lt;/code&gt; 및 &lt;code&gt;isTimeBased()&lt;/code&gt; 모두 36 시간과 같은 단위를 나타내는 경우와 같이 false를 반환 하는 것이 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="6e3708e385e552e65926cc647c32e6751099cb62" translate="yes" xml:space="preserve">
          <source>A unit of date-time, such as Days or Hours.</source>
          <target state="translated">일 또는 시간과 같은 날짜-시간 단위입니다.</target>
        </trans-unit>
        <trans-unit id="f0aa4f4ecba8e585fad499cc15cee0c26a1a51d3" translate="yes" xml:space="preserve">
          <source>A url which identifies a specific (single) resource</source>
          <target state="translated">특정 (단일) 리소스를 식별하는 URL</target>
        </trans-unit>
        <trans-unit id="073a4e8e455b2fb6727d1d657f673bc9b06278a4" translate="yes" xml:space="preserve">
          <source>A useful property of a &lt;code&gt;CountDownLatch&lt;/code&gt; is that it doesn't require that threads calling &lt;code&gt;countDown&lt;/code&gt; wait for the count to reach zero before proceeding, it simply prevents any thread from proceeding past an &lt;a href=&quot;countdownlatch#await--&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; until all threads could pass.</source>
          <target state="translated">&lt;code&gt;CountDownLatch&lt;/code&gt; 의 유용한 속성은 &lt;code&gt;countDown&lt;/code&gt; 을 호출하는 스레드가 진행하기 전에 카운트가 0에 도달 할 때까지 기다릴 필요가 없으며 모든 스레드가 통과 할 때까지 모든 스레드가 &lt;a href=&quot;countdownlatch#await--&quot;&gt; &lt;code&gt;await&lt;/code&gt; &lt;/a&gt; 지나서 진행되지 않도록하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="7cf05b3f80a64c6ebd8b80e0b56804e343da5264" translate="yes" xml:space="preserve">
          <source>A user principal representing the owner of the file</source>
          <target state="translated">파일의 소유자를 나타내는 사용자 프린시 펄</target>
        </trans-unit>
        <trans-unit id="17500e43a7b3429f95353e1a9e8b72d6c5997ef5" translate="yes" xml:space="preserve">
          <source>A user's preference is called a &lt;em&gt;Language Priority List&lt;/em&gt; and is expressed as a list of language ranges. There are syntactically two types of language ranges: basic and extended. See &lt;a href=&quot;locale.languagerange&quot;&gt;&lt;code&gt;Locale.LanguageRange&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">사용자의 기본 설정을 &lt;em&gt;언어 우선 순위 목록&lt;/em&gt; 이라고하며 언어 범위 목록으로 표시합니다. 구문 적으로 두 가지 유형의 언어 범위 (기본 및 확장)가 있습니다. 자세한 내용은 &lt;a href=&quot;locale.languagerange&quot;&gt; &lt;code&gt;Locale.LanguageRange&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="19354f13c4554512ea8c9ff697e0cf0ca655dbc4" translate="yes" xml:space="preserve">
          <source>A user-chosen password that can be used with password-based encryption (</source>
          <target state="translated">비밀번호 기반 암호화와 함께 사용할 수있는 사용자가 선택한 비밀번호 (</target>
        </trans-unit>
        <trans-unit id="921b97d7c95086329eba490ad2a12b68388f6557" translate="yes" xml:space="preserve">
          <source>A utility method that may be used by readers to compute the region of the source image that should be read, taking into account any source region and subsampling offset settings in the supplied &lt;code&gt;ImageReadParam&lt;/code&gt;. The actual subsampling factors, destination size, and destination offset are &lt;em&gt;not&lt;/em&gt; taken into consideration, thus further clipping must take place. The &lt;a href=&quot;imagereader#computeRegions-javax.imageio.ImageReadParam-int-int-java.awt.image.BufferedImage-java.awt.Rectangle-java.awt.Rectangle-&quot;&gt;&lt;code&gt;computeRegions&lt;/code&gt;&lt;/a&gt; method performs all necessary clipping.</source>
          <target state="translated">제공된 &lt;code&gt;ImageReadParam&lt;/code&gt; 의 소스 영역 및 서브 샘플링 오프셋 설정을 고려하여 판독해야하는 소스 이미지의 영역을 계산하기 위해 리더가 사용할 수있는 유틸리티 방법입니다 . 실제 서브 샘플링 계수, 대상 크기 및 대상 오프셋은 고려 &lt;em&gt;되지&lt;/em&gt; 않으므로 추가 클리핑이 발생해야합니다. &lt;a href=&quot;imagereader#computeRegions-javax.imageio.ImageReadParam-int-int-java.awt.image.BufferedImage-java.awt.Rectangle-java.awt.Rectangle-&quot;&gt; &lt;code&gt;computeRegions&lt;/code&gt; 의에&lt;/a&gt; 있어서 필요한 모든 클립핑을 수행한다.</target>
        </trans-unit>
        <trans-unit id="a9a6bdf08f1b0ab03487e46de957f3578b45b822" translate="yes" xml:space="preserve">
          <source>A utility method that may be used by readers to test the validity of the source and destination band settings of an &lt;code&gt;ImageReadParam&lt;/code&gt;. This method may be called as soon as the reader knows both the number of bands of the source image as it exists in the input stream, and the number of bands of the destination image that being written.</source>
          <target state="translated">리더가 &lt;code&gt;ImageReadParam&lt;/code&gt; 의 소스 및 대상 밴드 설정의 유효성을 테스트하기 위해 사용할 수있는 유틸리티 방법입니다 . 이 메소드는 입력 스트림에 존재하는 소스 이미지의 밴드 수와 기록중인 대상 이미지의 밴드 수를 모두 인식하는 즉시 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1e4892d125ac7897799da348616485fdf2f5e6e" translate="yes" xml:space="preserve">
          <source>A utility method to return a tree of &lt;code&gt;IIOMetadataNode&lt;/code&gt;s representing the metadata contained within this object according to the conventions of the standard &lt;code&gt;javax_imageio_1.0&lt;/code&gt; metadata format.</source>
          <target state="translated">표준 &lt;code&gt;javax_imageio_1.0&lt;/code&gt; 메타 데이터 형식 의 규칙에 따라이 객체에 포함 된 메타 데이터를 나타내는 &lt;code&gt;IIOMetadataNode&lt;/code&gt; 트리를 리턴하는 유틸리티 메소드 입니다.</target>
        </trans-unit>
        <trans-unit id="9dacfe50470089b46edadf73c4aac74e6c78e49b" translate="yes" xml:space="preserve">
          <source>A valid port value is between 0 and 65535. A port number of &lt;code&gt;zero&lt;/code&gt; will let the system pick up an ephemeral port in a &lt;code&gt;bind&lt;/code&gt; operation.</source>
          <target state="translated">유효한 포트 값은 0에서 65535 사이입니다. 포트 번호가 &lt;code&gt;zero&lt;/code&gt; 이면 시스템이 &lt;code&gt;bind&lt;/code&gt; 작업 에서 임시 포트를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="397f66f490d10d4494ae7ada8a13a16d92963dab" translate="yes" xml:space="preserve">
          <source>A value indicating that looping should continue indefinitely rather than complete after a specific number of loops.</source>
          <target state="translated">특정 횟수의 루프 후에 루프가 완료되지 않고 무한정 계속되어야 함을 나타내는 값입니다.</target>
        </trans-unit>
        <trans-unit id="734d9ff491c0d859200ef8fb1cd332001b1816fa" translate="yes" xml:space="preserve">
          <source>A value of -1 for the ending point indicates the last tick of the sequence. Otherwise, the ending point must be greater than or equal to the starting point, and it must fall within the size of the loaded sequence.</source>
          <target state="translated">끝점의 값 -1은 시퀀스의 마지막 틱을 나타냅니다. 그렇지 않으면 끝 점이 시작점보다 크거나 같아야하며로드 된 시퀀스의 크기 내에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="d1092465ce164e39995d49dd04806e5c57ff7e31" translate="yes" xml:space="preserve">
          <source>A value of -1 indicates &quot;cache forever&quot;.</source>
          <target state="translated">값이 -1이면 &quot;캐시 영원히&quot;를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3e29cd02f1a2a0ae106b890e88ef163df1b38aab" translate="yes" xml:space="preserve">
          <source>A value of 0 for the starting point means the beginning of the loaded sequence. The starting point must be lower than or equal to the ending point, and it must fall within the size of the loaded sequence.</source>
          <target state="translated">시작점의 값이 0이면로드 된 시퀀스의 시작을 의미합니다. 시작 지점은 종료 지점보다 작거나 같아야하며로드 된 시퀀스의 크기 내에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="d23a5fcadef3315ee9d8f3adb654f09eb3e1b05d" translate="yes" xml:space="preserve">
          <source>A value of 0 implies that the path can only contain a single certificate. A value of -1 implies that the path length is unconstrained (i.e. there is no maximum). The default maximum path length, if not specified, is 5. Setting a value less than -1 will cause an exception to be thrown.</source>
          <target state="translated">값이 0이면 경로에 단일 인증서 만 포함될 수 있음을 의미합니다. -1 값은 경로 길이가 제한되지 않음을 의미합니다 (즉, 최대 값이 없음). 지정되지 않은 경우 기본 최대 경로 길이는 5입니다. -1보다 작은 값을 설정하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5a3ccc5dabaf68e72fa9a2fa0a9718d5b78030ab" translate="yes" xml:space="preserve">
          <source>A value of 0 indicates &quot;never cache&quot;. A value of -1 indicates &quot;cache forever&quot;.</source>
          <target state="translated">값이 0이면 &quot;캐시 없음&quot;을 나타냅니다. 값이 -1이면 &quot;캐시 영원히&quot;를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6f2b8b1a219b8caa0a897a446039194d7965bf99" translate="yes" xml:space="preserve">
          <source>A value of &lt;code&gt;null&lt;/code&gt; for &lt;code&gt;sourceRegion&lt;/code&gt; will remove any region specification, causing the entire image to be used.</source>
          <target state="translated">값 &lt;code&gt;null&lt;/code&gt; 위한 &lt;code&gt;sourceRegion&lt;/code&gt; 는 전체 이미지가 사용되게 모든 영역 사양을 제거한다.</target>
        </trans-unit>
        <trans-unit id="d5d709613ee1d97dc74be552e9e5d3099242c0ca" translate="yes" xml:space="preserve">
          <source>A value of &lt;code&gt;numPasses&lt;/code&gt; of &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; indicates that all passes from &lt;code&gt;minPass&lt;/code&gt; forward should be read. Otherwise, the index of the last pass (</source>
          <target state="translated">값 &lt;code&gt;numPasses&lt;/code&gt; 의 &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; 로는 모든 패스 것을 나타낸다 &lt;code&gt;minPass&lt;/code&gt; 보다가 순방향 판독한다. 그렇지 않으면 마지막 패스의 색인 (</target>
        </trans-unit>
        <trans-unit id="9e8fcfc5ec5fee8c49ddd7265d996ccc35063572" translate="yes" xml:space="preserve">
          <source>A value of null indicates that all attributes will be returned. An empty array indicates that no attributes are to be returned.</source>
          <target state="translated">null 값은 모든 속성이 반환됨을 나타냅니다. 빈 배열은 속성이 반환되지 않음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="dc161feede49f354b5ca68878b3b4601bcb56359" translate="yes" xml:space="preserve">
          <source>A value of true denotes that JavaBeans should behave in design time mode, a value of false denotes runtime behavior.</source>
          <target state="translated">true 값은 JavaBeans가 디자인 타임 모드에서 작동해야 함을 나타내고, false 값은 런타임 동작을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8e820288caa155ad5314478455aa16be47938cea" translate="yes" xml:space="preserve">
          <source>A value that may be or'ed with &lt;code&gt;VALUE_RANGE&lt;/code&gt; to obtain &lt;code&gt;VALUE_RANGE_MAX_INCLUSIVE&lt;/code&gt;, and with &lt;code&gt;VALUE_RANGE_MIN_INCLUSIVE&lt;/code&gt; to obtain &lt;code&gt;VALUE_RANGE_MIN_MAX_INCLUSIVE&lt;/code&gt;.</source>
          <target state="translated">OR 관계로 될 수있는 값 &lt;code&gt;VALUE_RANGE&lt;/code&gt; 을 얻었다 &lt;code&gt;VALUE_RANGE_MAX_INCLUSIVE&lt;/code&gt; 을 하고 함께 &lt;code&gt;VALUE_RANGE_MIN_INCLUSIVE&lt;/code&gt; 수득 &lt;code&gt;VALUE_RANGE_MIN_MAX_INCLUSIVE&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="49b77ef96694a16b89d3d52e503460882d9a38a7" translate="yes" xml:space="preserve">
          <source>A value that may be or'ed with &lt;code&gt;VALUE_RANGE&lt;/code&gt; to obtain &lt;code&gt;VALUE_RANGE_MIN_INCLUSIVE&lt;/code&gt;, and with &lt;code&gt;VALUE_RANGE_MAX_INCLUSIVE&lt;/code&gt; to obtain &lt;code&gt;VALUE_RANGE_MIN_MAX_INCLUSIVE&lt;/code&gt;.</source>
          <target state="translated">OR 관계로 될 수있는 값 &lt;code&gt;VALUE_RANGE&lt;/code&gt; 을 얻었다 &lt;code&gt;VALUE_RANGE_MIN_INCLUSIVE&lt;/code&gt; 을 하고 함께 &lt;code&gt;VALUE_RANGE_MAX_INCLUSIVE&lt;/code&gt; 수득 &lt;code&gt;VALUE_RANGE_MIN_MAX_INCLUSIVE&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="c92f5f2b459e941a062e03f430e7f1c53b17c8f4" translate="yes" xml:space="preserve">
          <source>A vector of &lt;code&gt;Integer&lt;/code&gt; objects containing all the identifiers of timer notifications with the specified &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;type&lt;/code&gt; 의 타이머 통지의 모든 식별자를 포함한 &lt;code&gt;Integer&lt;/code&gt; 객체 의 벡터입니다 .</target>
        </trans-unit>
        <trans-unit id="da3ae676e9d48322e4ec01b47cf4298b06d325f7" translate="yes" xml:space="preserve">
          <source>A vector of &lt;code&gt;Integer&lt;/code&gt; objects containing all the timer notification identifiers.</source>
          <target state="translated">모든 타이머 알림 식별자를 포함하는 &lt;code&gt;Integer&lt;/code&gt; 객체로 구성된 벡터입니다 .</target>
        </trans-unit>
        <trans-unit id="4e9b68cae028564799adc866902925edc53bae49" translate="yes" xml:space="preserve">
          <source>A version of &lt;a href=&quot;abstractqueuedsynchronizer&quot;&gt;&lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt;&lt;/a&gt; in which synchronization state is maintained as a &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">동기화 상태가 &lt;code&gt;long&lt;/code&gt; 유지되는 &lt;a href=&quot;abstractqueuedsynchronizer&quot;&gt; &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; &lt;/a&gt; 의 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="045598eec75eadc3a758e620f8e1c3507464d9c2" translate="yes" xml:space="preserve">
          <source>A version of &lt;a href=&quot;abstractqueuedsynchronizer&quot;&gt;&lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt;&lt;/a&gt; in which synchronization state is maintained as a &lt;code&gt;long&lt;/code&gt;. This class has exactly the same structure, properties, and methods as &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; with the exception that all state-related parameters and results are defined as &lt;code&gt;long&lt;/code&gt; rather than &lt;code&gt;int&lt;/code&gt;. This class may be useful when creating synchronizers such as multilevel locks and barriers that require 64 bits of state.</source>
          <target state="translated">동기화 상태가 &lt;code&gt;long&lt;/code&gt; 유지되는 &lt;a href=&quot;abstractqueuedsynchronizer&quot;&gt; &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; &lt;/a&gt; 의 버전입니다 . 이 클래스는 모든 상태 관련 매개 변수 및 결과가 &lt;code&gt;int&lt;/code&gt; 가 아닌 &lt;code&gt;long&lt;/code&gt; 으로 정의된다는 점을 제외하고 는 &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; 와 정확히 동일한 구조, 특성 및 메소드를 갖 습니다 . 이 클래스는 64 비트 상태를 필요로하는 다중 레벨 잠금 및 장벽과 같은 동기화 프로그램을 작성할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c3e83a464741100a4422a7fb3de3ba81dd21eb1" translate="yes" xml:space="preserve">
          <source>A vertical offset to be applied to the subsampling grid before subsampling. The first pixel to be used will be offset this amount from the origin of the region, or of the image if no region is specified.</source>
          <target state="translated">서브 샘플링 전에 서브 샘플링 그리드에 적용 할 수직 오프셋입니다. 사용되는 첫 번째 픽셀은 영역의 원점 또는 영역이 지정되지 않은 경우 이미지의 원점에서이 양만큼 오프셋됩니다.</target>
        </trans-unit>
        <trans-unit id="0ef02e9260eecbb4126ec548112db19226ea1369" translate="yes" xml:space="preserve">
          <source>A vertical whitespace character: &lt;code&gt;[\n\x0B\f\r\x85\u2028\u2029]&lt;/code&gt;</source>
          <target state="translated">수직 공백 문자 : &lt;code&gt;[\n\x0B\f\r\x85\u2028\u2029]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="927719dee94a71d5a9f74df0c06ad6e05bc9f8e8" translate="yes" xml:space="preserve">
          <source>A view buffer is indexed not in terms of bytes but rather in terms of the type-specific size of its values;</source>
          <target state="translated">뷰 버퍼는 바이트 단위가 아니라 값의 유형별 크기로 인덱싱됩니다.</target>
        </trans-unit>
        <trans-unit id="f447f389089f82f2c6f2377154338fc56842867c" translate="yes" xml:space="preserve">
          <source>A view buffer is potentially much more efficient because it will be direct if, and only if, its backing byte buffer is direct.</source>
          <target state="translated">뷰 버퍼는 백업 바이트 버퍼가 직접 인 경우 직접적이기 때문에 훨씬 더 효율적일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8cdf2084d621439141a629b13a92f21d8b7901d" translate="yes" xml:space="preserve">
          <source>A view buffer provides relative bulk</source>
          <target state="translated">뷰 버퍼는 상대 벌크를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f01e9969cb0173a7bb4a0bee8dfca43d604d2174" translate="yes" xml:space="preserve">
          <source>A view of a ConcurrentHashMap as a &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; of keys, in which additions may optionally be enabled by mapping to a common value.</source>
          <target state="translated">키 &lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 로서의 ConcurrentHashMap보기 로, 공통 값에 맵핑하여 추가를 선택적으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d58ba505dc4bc668f0b075ce54b020cc0b3e100" translate="yes" xml:space="preserve">
          <source>A view of a ConcurrentHashMap as a &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; of keys, in which additions may optionally be enabled by mapping to a common value. This class cannot be directly instantiated. See &lt;a href=&quot;concurrenthashmap#keySet--&quot;&gt;&lt;code&gt;keySet()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;concurrenthashmap#keySet-V-&quot;&gt;&lt;code&gt;keySet(V)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;concurrenthashmap#newKeySet--&quot;&gt;&lt;code&gt;newKeySet()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;concurrenthashmap#newKeySet-int-&quot;&gt;&lt;code&gt;newKeySet(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">키 &lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 로서의 ConcurrentHashMap보기 로, 공통 값에 맵핑하여 추가를 선택적으로 사용할 수 있습니다. 이 클래스는 직접 인스턴스화 할 수 없습니다. 참조 &lt;a href=&quot;concurrenthashmap#keySet--&quot;&gt; &lt;code&gt;keySet()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;concurrenthashmap#keySet-V-&quot;&gt; &lt;code&gt;keySet(V)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;concurrenthashmap#newKeySet--&quot;&gt; &lt;code&gt;newKeySet()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;concurrenthashmap#newKeySet-int-&quot;&gt; &lt;code&gt;newKeySet(int)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="82b334fb7554948cb878b26ba0814402aa40b6bf" translate="yes" xml:space="preserve">
          <source>A visible character: &lt;code&gt;[\p{Alnum}\p{Punct}]&lt;/code&gt;</source>
          <target state="translated">눈에 보이는 문자 : &lt;code&gt;[\p{Alnum}\p{Punct}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b1377af8439bcbdd5059990bb9254da34501b93" translate="yes" xml:space="preserve">
          <source>A visible character: &lt;code&gt;[^\p{IsWhite_Space}\p{gc=Cc}\p{gc=Cs}\p{gc=Cn}]&lt;/code&gt;</source>
          <target state="translated">눈에 보이는 문자 : &lt;code&gt;[^\p{IsWhite_Space}\p{gc=Cc}\p{gc=Cs}\p{gc=Cn}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9475caaba7968f792bd2225146d20763c5d9914b" translate="yes" xml:space="preserve">
          <source>A visitor of files.</source>
          <target state="translated">파일 방문자.</target>
        </trans-unit>
        <trans-unit id="715321356c51a911092fc7e41a7971967b6690bf" translate="yes" xml:space="preserve">
          <source>A visitor of files. An implementation of this interface is provided to the &lt;a href=&quot;files#walkFileTree-java.nio.file.Path-java.util.Set-int-java.nio.file.FileVisitor-&quot;&gt;&lt;code&gt;Files.walkFileTree&lt;/code&gt;&lt;/a&gt; methods to visit each file in a file tree.</source>
          <target state="translated">파일 방문자. 이 인터페이스의 구현은 &lt;a href=&quot;files#walkFileTree-java.nio.file.Path-java.util.Set-int-java.nio.file.FileVisitor-&quot;&gt; &lt;code&gt;Files.walkFileTree&lt;/code&gt; &lt;/a&gt; 메서드에 제공되어 파일 트리의 각 파일을 방문합니다.</target>
        </trans-unit>
        <trans-unit id="2bcd45daab5a8cf3fa594cbcbc276b7b875272ef" translate="yes" xml:space="preserve">
          <source>A visitor of program elements based on their &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 &lt;a href=&quot;../element/elementkind&quot;&gt;종류&lt;/a&gt; 를 기반으로하는 프로그램 요소 방문자 .</target>
        </trans-unit>
        <trans-unit id="1c639abb3f3ff17ce66201eae9dd8026939af6dd" translate="yes" xml:space="preserve">
          <source>A visitor of program elements based on their &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. For &lt;a href=&quot;../element/element&quot;&gt;elements&lt;/a&gt;&lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; that may have more than one kind, the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class delegate to the &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; method corresponding to the first argument's kind. The &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; methods call &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 &lt;a href=&quot;../element/elementkind&quot;&gt;종류&lt;/a&gt; 를 기반으로하는 프로그램 요소 방문자 . 위해 &lt;a href=&quot;../element/element&quot;&gt;요소 &lt;/a&gt; &lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 개 이상의 종류는있을 수 있습니다 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZ의&lt;/i&gt; 받는 사람이 클래스 위임 메소드 &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZKind의&lt;/i&gt; 첫 번째 인수의 종류에 해당하는 방법을. &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZKind&lt;/i&gt; 방법 전화 &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt; 자신의 인수를 전달, &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수를 설정합니다.&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="e6c05e6e836bf51f2323b2c5a0eba7afe3e3ccb2" translate="yes" xml:space="preserve">
          <source>A visitor of program elements based on their &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 &lt;a href=&quot;../element/elementkind&quot;&gt;종류&lt;/a&gt; 를 기반으로하는 프로그램 요소 방문자 .</target>
        </trans-unit>
        <trans-unit id="fbb41b53ca6a0d5a95ad47da10ecf0c0515f627f" translate="yes" xml:space="preserve">
          <source>A visitor of program elements based on their &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. For &lt;a href=&quot;../element/element&quot;&gt;elements&lt;/a&gt;&lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; that may have more than one kind, the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class delegate to the &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; method corresponding to the first argument's kind. The &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; methods call &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 &lt;a href=&quot;../element/elementkind&quot;&gt;종류&lt;/a&gt; 를 기반으로하는 프로그램 요소 방문자 . 위해 &lt;a href=&quot;../element/element&quot;&gt;요소 &lt;/a&gt; &lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 개 이상의 종류는있을 수 있습니다 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZ의&lt;/i&gt; 받는 사람이 클래스 위임 메소드 &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZKind의&lt;/i&gt; 첫 번째 인수의 종류에 해당하는 방법을. &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZKind&lt;/i&gt; 방법 전화 &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt; 자신의 인수를 전달, &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수를 설정합니다.&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="bb2a59a51a5f01f3aa5a41dfc9caf2d9292c79a7" translate="yes" xml:space="preserve">
          <source>A visitor of program elements based on their &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 &lt;a href=&quot;../element/elementkind&quot;&gt;종류&lt;/a&gt; 를 기반으로하는 프로그램 요소 방문자 .</target>
        </trans-unit>
        <trans-unit id="597c2376ab43b0981c7ae1b589925de68eb314c9" translate="yes" xml:space="preserve">
          <source>A visitor of program elements based on their &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. For &lt;a href=&quot;../element/element&quot;&gt;elements&lt;/a&gt;&lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; that may have more than one kind, the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class delegate to the &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; method corresponding to the first argument's kind. The &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; methods call &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 &lt;a href=&quot;../element/elementkind&quot;&gt;종류&lt;/a&gt; 를 기반으로하는 프로그램 요소 방문자 . 위해 &lt;a href=&quot;../element/element&quot;&gt;요소 &lt;/a&gt; &lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 개 이상의 종류는있을 수 있습니다 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZ의&lt;/i&gt; 받는 사람이 클래스 위임 메소드 &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZKind의&lt;/i&gt; 첫 번째 인수의 종류에 해당하는 방법을. &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZKind&lt;/i&gt; 방법 전화 &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt; 자신의 인수를 전달, &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수를 설정합니다.&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="8d0b037a1a8b463a56a996735029777d15eb73e9" translate="yes" xml:space="preserve">
          <source>A visitor of program elements, in the style of the visitor design pattern.</source>
          <target state="translated">방문자 디자인 패턴 스타일의 프로그램 요소 방문자.</target>
        </trans-unit>
        <trans-unit id="797c2e3e0dd467c206b23e05f3bba3fc4614e85c" translate="yes" xml:space="preserve">
          <source>A visitor of program elements, in the style of the visitor design pattern. Classes implementing this interface are used to operate on an element when the kind of element is unknown at compile time. When a visitor is passed to an element's &lt;a href=&quot;element#accept-javax.lang.model.element.ElementVisitor-P-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method, the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; method most applicable to that element is invoked.</source>
          <target state="translated">방문자 디자인 패턴 스타일의 프로그램 요소 방문자. 이 인터페이스를 구현하는 클래스는 컴파일시 요소의 종류를 알 수없는 경우 요소에서 작동하는 데 사용됩니다. 방문자가 요소의 &lt;a href=&quot;element#accept-javax.lang.model.element.ElementVisitor-P-&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt; 메소드 로 전달되면 해당 요소에 가장 적합한 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d275eb91054335ab9edc07a77a75c761ea77c304" translate="yes" xml:space="preserve">
          <source>A visitor of the values of annotation type elements, using a variant of the visitor design pattern.</source>
          <target state="translated">방문자 디자인 패턴의 변형을 사용하는 주석 유형 요소 값의 방문자.</target>
        </trans-unit>
        <trans-unit id="7152ddda771dda1f517ba96bed8a5f81bbbc67d9" translate="yes" xml:space="preserve">
          <source>A visitor of the values of annotation type elements, using a variant of the visitor design pattern. Unlike a standard visitor which dispatches based on the concrete type of a member of a type hierarchy, this visitor dispatches based on the type of data stored; there are no distinct subclasses for storing, for example, &lt;code&gt;boolean&lt;/code&gt; values versus &lt;code&gt;int&lt;/code&gt; values. Classes implementing this interface are used to operate on a value when the type of that value is unknown at compile time. When a visitor is passed to a value's &lt;a href=&quot;annotationvalue#accept-javax.lang.model.element.AnnotationValueVisitor-P-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method, the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; method applicable to that value is invoked.</source>
          <target state="translated">방문자 디자인 패턴의 변형을 사용하는 주석 유형 요소 값의 방문자. 유형 계층 구조 멤버의 구체적인 유형을 기반으로 디스패치하는 표준 방문자와 달리이 방문자는 저장된 데이터 유형을 기반으로 디스패치합니다. 예를 들어 &lt;code&gt;boolean&lt;/code&gt; 값과 &lt;code&gt;int&lt;/code&gt; 값 을 저장하기위한 별개의 서브 클래스는 없습니다 . 이 인터페이스를 구현하는 클래스는 컴파일시 해당 값의 유형을 알 수 없을 때 값을 조작하는 데 사용됩니다. 방문자가 값의 &lt;a href=&quot;annotationvalue#accept-javax.lang.model.element.AnnotationValueVisitor-P-&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt; 메소드 로 전달되면 해당 값에 적용 가능한 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="fc244c4efbcf5ace8c5e2600755583ca11d1ddc9" translate="yes" xml:space="preserve">
          <source>A visitor of types based on their &lt;a href=&quot;../type/typekind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">자신을 기준으로 유형의 방문자 &lt;a href=&quot;../type/typekind&quot;&gt;종류의&lt;/a&gt; 의 기본 동작 적절한와 &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; 의&lt;/a&gt; 소스 버전.</target>
        </trans-unit>
        <trans-unit id="786f7d40d976fda20436c7f8eb1bfb920231404d" translate="yes" xml:space="preserve">
          <source>A visitor of types based on their &lt;a href=&quot;../type/typekind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. For &lt;a href=&quot;../type/typemirror&quot;&gt;types&lt;/a&gt;&lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; that may have more than one kind, the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class delegate to the &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; method corresponding to the first argument's kind. The &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; methods call &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">자신을 기준으로 유형의 방문자 &lt;a href=&quot;../type/typekind&quot;&gt;종류의&lt;/a&gt; 의 기본 동작 적절한와 &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; 의&lt;/a&gt; 소스 버전. 대한 &lt;a href=&quot;../type/typemirror&quot;&gt;유형 &lt;/a&gt; &lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 개 이상의 종류는있을 수 있습니다 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 받는 사람이 클래스 위임 메소드 &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; 첫 번째 인수의 종류에 해당하는 방법을. &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; 방법 전화 &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt; 자신의 인수를 전달, &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="24890907bcffb021d881b912df95eb21b4909058" translate="yes" xml:space="preserve">
          <source>A visitor of types based on their &lt;a href=&quot;../type/typekind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 &lt;a href=&quot;../type/typekind&quot;&gt;종류&lt;/a&gt; 에 따른 유형의 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="624b5778af810bf160af515f880565b0fb6e8f76" translate="yes" xml:space="preserve">
          <source>A visitor of types based on their &lt;a href=&quot;../type/typekind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. For &lt;a href=&quot;../type/typemirror&quot;&gt;types&lt;/a&gt;&lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; that may have more than one kind, the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class delegate to the &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; method corresponding to the first argument's kind. The &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; methods call &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 &lt;a href=&quot;../type/typekind&quot;&gt;종류&lt;/a&gt; 에 따른 유형의 방문자입니다 . 대한 &lt;a href=&quot;../type/typemirror&quot;&gt;유형 &lt;/a&gt; &lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 개 이상의 종류는있을 수 있습니다 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZ의&lt;/i&gt; 받는 사람이 클래스 위임 메소드 &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZKind의&lt;/i&gt; 첫 번째 인수의 종류에 해당하는 방법을. &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZKind&lt;/i&gt; 방법 전화 &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt; 자신의 인수를 전달, &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수를 설정합니다.&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="b7f26a466095168b7ee159d810b3e69036459a27" translate="yes" xml:space="preserve">
          <source>A visitor of types based on their &lt;a href=&quot;../type/typekind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">자신을 기준으로 유형의 방문자 &lt;a href=&quot;../type/typekind&quot;&gt;종류의&lt;/a&gt; 의 기본 동작 적절한와 &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; 의&lt;/a&gt; 소스 버전.</target>
        </trans-unit>
        <trans-unit id="8055d9c29189ba19de88b3c7c44fa4ab2a208b08" translate="yes" xml:space="preserve">
          <source>A visitor of types based on their &lt;a href=&quot;../type/typekind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. For &lt;a href=&quot;../type/typemirror&quot;&gt;types&lt;/a&gt;&lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; that may have more than one kind, the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class delegate to the &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; method corresponding to the first argument's kind. The &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; methods call &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">자신을 기준으로 유형의 방문자 &lt;a href=&quot;../type/typekind&quot;&gt;종류의&lt;/a&gt; 의 기본 동작 적절한와 &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; 의&lt;/a&gt; 소스 버전. 대한 &lt;a href=&quot;../type/typemirror&quot;&gt;유형 &lt;/a&gt; &lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 개 이상의 종류는있을 수 있습니다 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 받는 사람이 클래스 위임 메소드 &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; 첫 번째 인수의 종류에 해당하는 방법을. &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; 방법 전화 &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt; 자신의 인수를 전달, &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4a3d93fce445f340304018db3f5d1dd924d70bf2" translate="yes" xml:space="preserve">
          <source>A visitor of types, in the style of the visitor design pattern.</source>
          <target state="translated">방문자 디자인 패턴 스타일의 방문자.</target>
        </trans-unit>
        <trans-unit id="95cb601bdc3b5075414907f7ffdddeff2efcdc3b" translate="yes" xml:space="preserve">
          <source>A visitor of types, in the style of the visitor design pattern. Classes implementing this interface are used to operate on a type when the kind of type is unknown at compile time. When a visitor is passed to a type's &lt;a href=&quot;typemirror#accept-javax.lang.model.type.TypeVisitor-P-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method, the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; method most applicable to that type is invoked.</source>
          <target state="translated">방문자 디자인 패턴 스타일의 방문자. 이 인터페이스를 구현하는 클래스는 컴파일 타임에 유형의 종류를 알 수 없을 때 유형에서 작동하는 데 사용됩니다. 방문자가 유형의 &lt;a href=&quot;typemirror#accept-javax.lang.model.type.TypeVisitor-P-&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt; 메소드 로 전달되면 해당 유형에 가장 적합한 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="aefe47f662773fadbc52658f9ecb8355ae59e760" translate="yes" xml:space="preserve">
          <source>A void (no arguments) constructor, which creates an empty sorted map sorted according to the natural ordering of its keys.</source>
          <target state="translated">키의 자연 순서에 따라 정렬 된 빈 정렬 맵을 작성하는 void (인수 없음) 생성자</target>
        </trans-unit>
        <trans-unit id="ef96da9fc00f955033bcfddcf4bfc03d910b7fec" translate="yes" xml:space="preserve">
          <source>A watch key has a state. When initially created the key is said to be &lt;em&gt;ready&lt;/em&gt;. When an event is detected then the key is &lt;em&gt;signalled&lt;/em&gt; and queued so that it can be retrieved by invoking the watch service's &lt;a href=&quot;watchservice#poll--&quot;&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;watchservice#take--&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt; methods. Once signalled, a key remains in this state until its &lt;a href=&quot;watchkey#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; method is invoked to return the key to the ready state. Events detected while the key is in the signalled state are queued but do not cause the key to be re-queued for retrieval from the watch service. Events are retrieved by invoking the key's &lt;a href=&quot;watchkey#pollEvents--&quot;&gt;&lt;code&gt;pollEvents&lt;/code&gt;&lt;/a&gt; method. This method retrieves and removes all events accumulated for the object. When initially created, a watch key has no pending events. Typically events are retrieved when the key is in the signalled state leading to the following idiom:</source>
          <target state="translated">감시 키에는 상태가 있습니다. 처음 생성되면 키가 &lt;em&gt;준비&lt;/em&gt; 되었다고합니다 . 이벤트가 감지되면 키에 &lt;em&gt;신호를 보내고&lt;/em&gt; 큐에 대기하여 시계 서비스의 &lt;a href=&quot;watchservice#poll--&quot;&gt; &lt;code&gt;poll&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;watchservice#take--&quot;&gt; &lt;code&gt;take&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 검색 할 수 있습니다 . 신호 가 보내지면 키를 준비 상태로 되돌릴 수있는 &lt;a href=&quot;watchkey#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt; 메소드가 호출 될 때까지 키가이 상태를 유지합니다 . 키가 신호 상태에있는 동안 감지 된 이벤트는 대기 중이지만 시계 서비스에서 검색하기 위해 키를 다시 큐에 넣지 않습니다. 키의 &lt;a href=&quot;watchkey#pollEvents--&quot;&gt; &lt;code&gt;pollEvents&lt;/code&gt; 를&lt;/a&gt; 호출하여 이벤트를 검색합니다.방법. 이 메소드는 오브젝트에 대해 누적 된 모든 이벤트를 검색하고 제거합니다. 처음 생성 될 때 감시 키에는 보류중인 이벤트가 없습니다. 일반적으로 키가 신호 상태에있을 때 이벤트가 검색되어 다음 관용구가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="1732eaf655c716f70be6c471c9dcc915577de096" translate="yes" xml:space="preserve">
          <source>A watch key is created when a watchable object is registered with a watch service. The key remains &lt;a href=&quot;watchkey#isValid--&quot;&gt;&lt;code&gt;valid&lt;/code&gt;&lt;/a&gt; until:</source>
          <target state="translated">감시 가능 객체가 감시 서비스에 등록되면 감시 키가 생성됩니다. 키는 다음 까지 &lt;a href=&quot;watchkey#isValid--&quot;&gt; &lt;code&gt;valid&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="66d47911700d1fb27fb187b7850579da3221a160" translate="yes" xml:space="preserve">
          <source>A watch key is valid upon creation and remains until it is cancelled, or its watch service is closed.</source>
          <target state="translated">감시 키는 생성시 유효하며 취소되거나 감시 서비스가 종료 될 때까지 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="b81abc9ac87e5f962a54ed986af3255e26951ea9" translate="yes" xml:space="preserve">
          <source>A watch service is safe for use by multiple concurrent consumers. To ensure that only one consumer processes the events for a particular object at any time then care should be taken to ensure that the key's &lt;code&gt;reset&lt;/code&gt; method is only invoked after its events have been processed. The &lt;a href=&quot;watchservice#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method may be invoked at any time to close the service causing any threads waiting to retrieve keys, to throw &lt;code&gt;ClosedWatchServiceException&lt;/code&gt;.</source>
          <target state="translated">워치 서비스는 여러 동시 소비자가 안전하게 사용할 수 있습니다. 한 명의 소비자 만 특정 개체에 대한 이벤트를 처리하도록하려면 키의 &lt;code&gt;reset&lt;/code&gt; 메소드가 이벤트가 처리 된 후에 만 ​​호출 되도록주의를 기울여야합니다 . &lt;a href=&quot;watchservice#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 방법은 던져 키를 검색하기 위해 대기 중의 thread를 일으키는 원인이되는 서비스 종료 언제든지 호출 할 수 있습니다 &lt;code&gt;ClosedWatchServiceException&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="39291bcc6f30964e83b8c9dc052d942ade47c3cd" translate="yes" xml:space="preserve">
          <source>A watch service that &lt;em&gt;watches&lt;/em&gt; registered objects for changes and events.</source>
          <target state="translated">등록 된 객체의 변경 및 이벤트 를 &lt;em&gt;감시&lt;/em&gt; 하는 감시 서비스입니다 .</target>
        </trans-unit>
        <trans-unit id="038de69f86f977453cf3f3cc79d9684afc1ee0aa" translate="yes" xml:space="preserve">
          <source>A watch service that &lt;em&gt;watches&lt;/em&gt; registered objects for changes and events. For example a file manager may use a watch service to monitor a directory for changes so that it can update its display of the list of files when files are created or deleted.</source>
          <target state="translated">등록 된 객체의 변경 및 이벤트 를 &lt;em&gt;감시&lt;/em&gt; 하는 감시 서비스입니다 . 예를 들어, 파일 관리자는 감시 서비스를 사용하여 파일이 작성되거나 삭제 될 때 파일 목록의 표시를 업데이트 할 수 있도록 디렉토리에서 변경 사항을 모니터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="469284cfabdd53890baf7ac417da61eebdad99e5" translate="yes" xml:space="preserve">
          <source>A web server should return an HTTP 404 (Not Found) response when a requested resource does not exist. Sometimes, however, web servers are erroneously configured to return an HTTP 200 (OK) response along with a helpful HTML error page in such cases. This will cause a &lt;a href=&quot;serviceconfigurationerror&quot;&gt;&lt;code&gt;ServiceConfigurationError&lt;/code&gt;&lt;/a&gt; to be thrown when this class attempts to parse the HTML page as a provider-configuration file. The best solution to this problem is to fix the misconfigured web server to return the correct response code (HTTP 404) along with the HTML error page.</source>
          <target state="translated">요청 된 리소스가 존재하지 않으면 웹 서버는 HTTP 404 (찾을 수 없음) 응답을 반환해야합니다. 그러나 때때로 웹 서버는 그러한 경우에 유용한 HTML 오류 페이지와 함께 HTTP 200 (OK) 응답을 반환하도록 잘못 구성되어 있습니다. 이 클래스는이 클래스가 HTML 페이지를 공급자 구성 파일로 구문 분석하려고 할 때 &lt;a href=&quot;serviceconfigurationerror&quot;&gt; &lt;code&gt;ServiceConfigurationError&lt;/code&gt; &lt;/a&gt; 가 발생합니다. 이 문제에 대한 가장 좋은 해결책은 잘못 구성된 웹 서버를 수정하여 HTML 오류 페이지와 함께 올바른 응답 코드 (HTTP 404)를 반환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="53e6e335b8f72338e37336349c52061b4b8c3d97" translate="yes" xml:space="preserve">
          <source>A week is defined by:</source>
          <target state="translated">주는 다음에 의해 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="70c33091963445ce91b96e8149efce44f2116672" translate="yes" xml:space="preserve">
          <source>A well-formed locale key has the form &lt;code&gt;[0-9a-zA-Z]{2}&lt;/code&gt;. A well-formed locale type has the form &lt;code&gt;&quot;&quot; | [0-9a-zA-Z]{3,8} ('-' [0-9a-zA-Z]{3,8})*&lt;/code&gt; (it can be empty, or a series of subtags 3-8 alphanums in length). A well-formed locale attribute has the form &lt;code&gt;[0-9a-zA-Z]{3,8}&lt;/code&gt; (it is a single subtag with the same form as a locale type subtag).</source>
          <target state="translated">올바른 형식의 로캘 키는 &lt;code&gt;[0-9a-zA-Z]{2}&lt;/code&gt; 형식 입니다. 올바른 형식의 로케일 유형은 &lt;code&gt;&quot;&quot; | [0-9a-zA-Z]{3,8} ('-' [0-9a-zA-Z]{3,8})*&lt;/code&gt; (비어 있거나 일련의 하위 태그 3 ~ 8 개의 영숫자 길이). 올바른 형식의 로케일 속성은 &lt;code&gt;[0-9a-zA-Z]{3,8}&lt;/code&gt; 형식입니다 (로케일 유형 서브 태그와 동일한 양식을 갖는 단일 서브 태그입니다).</target>
        </trans-unit>
        <trans-unit id="ba9a1f8046602ef3fc5ba4e1f08de646ec6829cc" translate="yes" xml:space="preserve">
          <source>A whitespace character: &lt;code&gt;[ \t\n\x0B\f\r]&lt;/code&gt;</source>
          <target state="translated">공백 문자 : &lt;code&gt;[ \t\n\x0B\f\r]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3ffa0eff49beb603cb27ef3ab283ff05cd98006" translate="yes" xml:space="preserve">
          <source>A whitespace character: &lt;code&gt;\p{IsWhite_Space}&lt;/code&gt;</source>
          <target state="translated">공백 문자 : &lt;code&gt;\p{IsWhite_Space}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="641b61af855025b3eba42d42f9e10f4a762fb02f" translate="yes" xml:space="preserve">
          <source>A whitespace character:&lt;code&gt;\p{IsWhite_Space}&lt;/code&gt;</source>
          <target state="translated">공백 문자 : &lt;code&gt;\p{IsWhite_Space}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80a084736fb1263ee882ed0a1ac854e5692c2d6d" translate="yes" xml:space="preserve">
          <source>A wildcard may have its upper bound explicitly set by an &lt;code&gt;extends&lt;/code&gt; clause, its lower bound explicitly set by a &lt;code&gt;super&lt;/code&gt; clause, or neither (but not both).</source>
          <target state="translated">와일드 카드는 &lt;code&gt;extends&lt;/code&gt; 절에 의해 명시 적으로 설정된 상한 , &lt;code&gt;super&lt;/code&gt; 절에 의해 명시 적으로 설정된 하한 또는 둘 다를 갖지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94ce0d030c8468745fe9ef7cc745e90ab1dd0c6f" translate="yes" xml:space="preserve">
          <source>A wildcard type argument.</source>
          <target state="translated">와일드 카드 유형 인수</target>
        </trans-unit>
        <trans-unit id="63529e898a6b0c5caf8622738240b134fed23022" translate="yes" xml:space="preserve">
          <source>A word boundary</source>
          <target state="translated">단어 경계</target>
        </trans-unit>
        <trans-unit id="4bcd0152a738763da859829e6da73cdd90548cd4" translate="yes" xml:space="preserve">
          <source>A word character: &lt;code&gt;[\p{Alpha}\p{gc=Mn}\p{gc=Me}\p{gc=Mc}\p{Digit}\p{gc=Pc}\p{IsJoin_Control}]&lt;/code&gt;</source>
          <target state="translated">단어 문자 : &lt;code&gt;[\p{Alpha}\p{gc=Mn}\p{gc=Me}\p{gc=Mc}\p{Digit}\p{gc=Pc}\p{IsJoin_Control}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aeb4f38f3d0810500e811c853f4eb95b4db74c18" translate="yes" xml:space="preserve">
          <source>A word character: &lt;code&gt;[a-zA-Z_0-9]&lt;/code&gt;</source>
          <target state="translated">단어 문자 : &lt;code&gt;[a-zA-Z_0-9]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ccc1a18d4562993e82e404b0551b7f8cc50c22c4" translate="yes" xml:space="preserve">
          <source>A word that matches &lt;code&gt;AM&lt;/code&gt;, ignoring case, is ignored (but the parse fails if an hour has not been recognized or is less than &lt;code&gt;1&lt;/code&gt; or greater than &lt;code&gt;12&lt;/code&gt;).</source>
          <target state="translated">대소 문자를 무시하고 &lt;code&gt;AM&lt;/code&gt; 과 일치하는 단어 는 무시되지만 시간이 인식되지 않거나 &lt;code&gt;1&lt;/code&gt; 미만 이거나 &lt;code&gt;12&lt;/code&gt; 보다 큰 경우 구문 분석이 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="35310a6d848c08bea0cfeae4619e0fdc8cd4002f" translate="yes" xml:space="preserve">
          <source>A word that matches &lt;code&gt;PM&lt;/code&gt;, ignoring case, adds &lt;code&gt;12&lt;/code&gt; to the hour (but the parse fails if an hour has not been recognized or is less than &lt;code&gt;1&lt;/code&gt; or greater than &lt;code&gt;12&lt;/code&gt;).</source>
          <target state="translated">대소 문자를 무시하고 &lt;code&gt;PM&lt;/code&gt; 과 일치하는 단어 는 시간에 &lt;code&gt;12&lt;/code&gt; 를 더하지만 시간이 인식되지 않거나 &lt;code&gt;1&lt;/code&gt; 보다 작거나 &lt;code&gt;12&lt;/code&gt; 보다 크면 구문 분석이 실패합니다. ).</target>
        </trans-unit>
        <trans-unit id="35a7a5ab7c179c9af52658078f9b7ae60774d63f" translate="yes" xml:space="preserve">
          <source>A wrapper for CertPathParameters.</source>
          <target state="translated">CertPathParameters 래퍼입니다.</target>
        </trans-unit>
        <trans-unit id="359776b71f1489b617b70679e40ba5f44ce654dc" translate="yes" xml:space="preserve">
          <source>A wrapper for CertPathParameters. This class is used to pass validation settings to CertPath based &lt;a href=&quot;trustmanager&quot;&gt;&lt;code&gt;TrustManager&lt;/code&gt;&lt;/a&gt;s using the &lt;a href=&quot;trustmanagerfactory#init-javax.net.ssl.ManagerFactoryParameters-&quot;&gt;&lt;code&gt;TrustManagerFactory.init()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">CertPathParameters 래퍼입니다. 이 클래스는 , &lt;a href=&quot;trustmanagerfactory#init-javax.net.ssl.ManagerFactoryParameters-&quot;&gt; &lt;code&gt;TrustManagerFactory.init()&lt;/code&gt; &lt;/a&gt; 사용해 검증 설정을 CertPath 기반의 &lt;a href=&quot;trustmanager&quot;&gt; &lt;code&gt;TrustManager&lt;/code&gt; &lt;/a&gt; 에 건네줍니다. 메소드를 줍니다.</target>
        </trans-unit>
        <trans-unit id="b916eaa9e274acb5b9940f88f6f6e4a52fb6804a" translate="yes" xml:space="preserve">
          <source>A write to a &lt;code&gt;volatile&lt;/code&gt; field</source>
          <target state="translated">&lt;code&gt;volatile&lt;/code&gt; 쓰기 필드에</target>
        </trans-unit>
        <trans-unit id="d8259e6d77fdc0cec17b7543dfe811545cff1a71" translate="yes" xml:space="preserve">
          <source>A writer that does not support any image insertion may return &lt;code&gt;false&lt;/code&gt; without performing bounds checking on the index.</source>
          <target state="translated">이미지 삽입을 지원하지 않는 라이터는 &lt;code&gt;false&lt;/code&gt; 를 반환 할 수 있습니다. 는 인덱스에 대한 경계 검사를 수행하지 않고 를 .</target>
        </trans-unit>
        <trans-unit id="45910823e1b155d300a4f28050e4eece7a321691" translate="yes" xml:space="preserve">
          <source>A writer that does not support any image metadata replacement may return &lt;code&gt;false&lt;/code&gt; without performing bounds checking on the index.</source>
          <target state="translated">이미지 메타 데이터 대체를 지원하지 않는 라이터는 &lt;code&gt;false&lt;/code&gt; 를 반환 할 수 있습니다. 는 인덱스에 대한 경계 검사를 수행하지 않고 를 .</target>
        </trans-unit>
        <trans-unit id="bbb475cd29a1095762cb2d4ad48445ba58f78c53" translate="yes" xml:space="preserve">
          <source>A writer that does not support any image removal may return &lt;code&gt;false&lt;/code&gt; without performing bounds checking on the index.</source>
          <target state="translated">이미지 제거를 지원하지 않는 라이터 는 인덱스에 대한 경계 검사를 수행하지 않고 &lt;code&gt;false&lt;/code&gt; 를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6367042c77c0de87991d058c5b2f3bf56fcbd33e" translate="yes" xml:space="preserve">
          <source>A writer that does not support any pixel replacement may return &lt;code&gt;false&lt;/code&gt; without performing bounds checking on the index.</source>
          <target state="translated">픽셀 교체를 지원하지 않는 라이터 는 인덱스에 대한 경계 검사를 수행하지 않고 &lt;code&gt;false&lt;/code&gt; 를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a7f9dabbe1007e9384cde03cc697500375069f62" translate="yes" xml:space="preserve">
          <source>A writer that does not support insertion of empty images may return &lt;code&gt;false&lt;/code&gt; without performing bounds checking on the index.</source>
          <target state="translated">빈 이미지 삽입을 지원하지 않는 라이터 는 인덱스에 대한 경계 검사를 수행하지 않고 &lt;code&gt;false&lt;/code&gt; 를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="666e3178ad2146a658df19bed1a0a803d4ffdeea" translate="yes" xml:space="preserve">
          <source>A year</source>
          <target state="translated">년</target>
        </trans-unit>
        <trans-unit id="84c7423f7263edd61ddf383b50bd8a49daada7d8" translate="yes" xml:space="preserve">
          <source>A year in the ISO-8601 calendar system, such as &lt;code&gt;2007&lt;/code&gt;.</source>
          <target state="translated">ISO-8601 캘린더 시스템에서 1 년 (예 : &lt;code&gt;2007&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="51df692a87c748ff8e94febb4fb6252608c34f04" translate="yes" xml:space="preserve">
          <source>A year-month in the ISO-8601 calendar system, such as &lt;code&gt;2007-12&lt;/code&gt;.</source>
          <target state="translated">ISO-12601 달력 시스템 (예 : &lt;code&gt;2007-12&lt;/code&gt; ) 에서 1 개월 .</target>
        </trans-unit>
        <trans-unit id="a744440bc8fce008a3988c636038355305832aac" translate="yes" xml:space="preserve">
          <source>A zero period has the value zero for the years, months and days units.</source>
          <target state="translated">제로 기간은 년, 월 및 일 단위의 값이 0입니다.</target>
        </trans-unit>
        <trans-unit id="e88e144d60989a829e3661bcfd4b898e3e832b2d" translate="yes" xml:space="preserve">
          <source>A.e</source>
          <target state="translated">A.e</target>
        </trans-unit>
        <trans-unit id="b8c4ed32039755356ab5eaf0878516ef63ab96f8" translate="yes" xml:space="preserve">
          <source>A0</source>
          <target state="translated">A0</target>
        </trans-unit>
        <trans-unit id="458188d80a319f5f123df91e5eb4f45748bfde53" translate="yes" xml:space="preserve">
          <source>A0 size.</source>
          <target state="translated">A0 사이즈.</target>
        </trans-unit>
        <trans-unit id="1ffd4ba3eb9ffadf4db3c3ff4c1bbcf94a64cc59" translate="yes" xml:space="preserve">
          <source>A1</source>
          <target state="translated">A1</target>
        </trans-unit>
        <trans-unit id="501709b063bd57a62a69ae849e007d730d5b47a1" translate="yes" xml:space="preserve">
          <source>A1 size.</source>
          <target state="translated">A1 사이즈.</target>
        </trans-unit>
        <trans-unit id="6e39d6b2c00645551860ff90fe750984a0b3ae38" translate="yes" xml:space="preserve">
          <source>A10</source>
          <target state="translated">A10</target>
        </trans-unit>
        <trans-unit id="0584732afedaf9a1d6cb63f3c64ccf71732f951e" translate="yes" xml:space="preserve">
          <source>A10 size.</source>
          <target state="translated">A10 사이즈.</target>
        </trans-unit>
        <trans-unit id="b62a4d0e1ffcf6bec6f8cf548d49a2b469943e34" translate="yes" xml:space="preserve">
          <source>A2</source>
          <target state="translated">A2</target>
        </trans-unit>
        <trans-unit id="a71b2f6624ec135aa1e4fc79358273596801e271" translate="yes" xml:space="preserve">
          <source>A2 size.</source>
          <target state="translated">A2 사이즈</target>
        </trans-unit>
        <trans-unit id="842f4ac15c5e237ca4c7a77d13e8756cefaf9898" translate="yes" xml:space="preserve">
          <source>A3</source>
          <target state="translated">A3</target>
        </trans-unit>
        <trans-unit id="f0c37868ee46f0593e8d8c00ab6f9ccaacaffe6e" translate="yes" xml:space="preserve">
          <source>A3 size.</source>
          <target state="translated">A3 사이즈</target>
        </trans-unit>
        <trans-unit id="de69a629f9c30af3f481110f0f42a7c0c5efacfb" translate="yes" xml:space="preserve">
          <source>A4</source>
          <target state="translated">A4</target>
        </trans-unit>
        <trans-unit id="d1ff5495752a2e238ee0fd885a67092cd8fa614e" translate="yes" xml:space="preserve">
          <source>A4 size.</source>
          <target state="translated">A4 사이즈.</target>
        </trans-unit>
        <trans-unit id="9a81a0239ba9cea92791c32132b9590ed2eb07c0" translate="yes" xml:space="preserve">
          <source>A4 transparency.</source>
          <target state="translated">A4 투명도.</target>
        </trans-unit>
        <trans-unit id="c40e0e23516f1d6a0739aeebb738bbc8495a5e08" translate="yes" xml:space="preserve">
          <source>A5</source>
          <target state="translated">A5</target>
        </trans-unit>
        <trans-unit id="f5fb29b4cbc20c0743a1ab26126378e955f956b5" translate="yes" xml:space="preserve">
          <source>A5 size.</source>
          <target state="translated">A5 사이즈</target>
        </trans-unit>
        <trans-unit id="65487dce049502313e51550ad57a1a5fbd574a24" translate="yes" xml:space="preserve">
          <source>A6</source>
          <target state="translated">A6</target>
        </trans-unit>
        <trans-unit id="f13280b9c69afeac47766aaea42a7c9f6b16a513" translate="yes" xml:space="preserve">
          <source>A6 size.</source>
          <target state="translated">A6 사이즈</target>
        </trans-unit>
        <trans-unit id="b33edd8ff267441c1fb78143fc091c53e86ee211" translate="yes" xml:space="preserve">
          <source>A7</source>
          <target state="translated">A7</target>
        </trans-unit>
        <trans-unit id="9ae3af5d2f7d35b9ddfa94d4a1cb89c5727572c6" translate="yes" xml:space="preserve">
          <source>A7 size.</source>
          <target state="translated">A7 사이즈.</target>
        </trans-unit>
        <trans-unit id="099e1f1eb47d200538412efd1b5980ecdf3551ed" translate="yes" xml:space="preserve">
          <source>A8</source>
          <target state="translated">A8</target>
        </trans-unit>
        <trans-unit id="3384b66f19d6fe02f1b8049d042021917373ac1b" translate="yes" xml:space="preserve">
          <source>A8 size.</source>
          <target state="translated">A8 사이즈</target>
        </trans-unit>
        <trans-unit id="b598e0c328fdf3a207a7d03c5ad6925fde311003" translate="yes" xml:space="preserve">
          <source>A9</source>
          <target state="translated">A9</target>
        </trans-unit>
        <trans-unit id="d66b4e95f7000b9c89c26e14dbc5664328868498" translate="yes" xml:space="preserve">
          <source>A9 size.</source>
          <target state="translated">A9 사이즈.</target>
        </trans-unit>
        <trans-unit id="b5363e9c8712ef90435ed05974a46637c81d0b17" translate="yes" xml:space="preserve">
          <source>AA_COMPROMISE</source>
          <target state="translated">AA_COMPROMISE</target>
        </trans-unit>
        <trans-unit id="4e0145ebbcfefd89f4ce32e5a5dbc6d146d44670" translate="yes" xml:space="preserve">
          <source>ABORTED</source>
          <target state="translated">ABORTED</target>
        </trans-unit>
        <trans-unit id="78897769890adaae1cf98c64421065dac6e25bfa" translate="yes" xml:space="preserve">
          <source>ABORTED_BY_SYSTEM</source>
          <target state="translated">ABORTED_BY_SYSTEM</target>
        </trans-unit>
        <trans-unit id="e82ed4276d157806565f101be0b8ad19d85c344b" translate="yes" xml:space="preserve">
          <source>ABOUT_UIROLE</source>
          <target state="translated">ABOUT_UIROLE</target>
        </trans-unit>
        <trans-unit id="e29c6cbd184a79deb8c1a9f477b3e3ad1f42e851" translate="yes" xml:space="preserve">
          <source>ABSTRACT</source>
          <target state="translated">ABSTRACT</target>
        </trans-unit>
        <trans-unit id="995783128d94a67594a095263770a525a3d149b9" translate="yes" xml:space="preserve">
          <source>ACCEPTING_JOBS</source>
          <target state="translated">ACCEPTING_JOBS</target>
        </trans-unit>
        <trans-unit id="caa738e173e88876ec8e5c98a4b0144becdab1ad" translate="yes" xml:space="preserve">
          <source>ACCEPT_ALL</source>
          <target state="translated">ACCEPT_ALL</target>
        </trans-unit>
        <trans-unit id="79a0c07a94fe412d90b64af18f2474ce4476d731" translate="yes" xml:space="preserve">
          <source>ACCEPT_NONE</source>
          <target state="translated">ACCEPT_NONE</target>
        </trans-unit>
        <trans-unit id="9d141fb1814c3ea6fc8ee01b0451c42cb98963f4" translate="yes" xml:space="preserve">
          <source>ACCEPT_ORIGINAL_SERVER</source>
          <target state="translated">ACCEPT_ORIGINAL_SERVER</target>
        </trans-unit>
        <trans-unit id="7300f5c4baf1b21ca95ca47513a23926510644ba" translate="yes" xml:space="preserve">
          <source>ACL entries are created using an associated &lt;a href=&quot;aclentry.builder&quot;&gt;&lt;code&gt;AclEntry.Builder&lt;/code&gt;&lt;/a&gt; object by invoking its &lt;a href=&quot;aclentry.builder#build--&quot;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ACL 항목은 &lt;a href=&quot;aclentry.builder#build--&quot;&gt; &lt;code&gt;build&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하여 연관된 &lt;a href=&quot;aclentry.builder&quot;&gt; &lt;code&gt;AclEntry.Builder&lt;/code&gt; &lt;/a&gt; 오브젝트를 사용하여 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="b5415d299711ebc171cab14f6921f904d758e0bc" translate="yes" xml:space="preserve">
          <source>ACL entries are immutable and are safe for use by multiple concurrent threads.</source>
          <target state="translated">ACL 항목은 변경할 수 없으며 여러 동시 스레드에서 사용하기에 안전합니다.</target>
        </trans-unit>
        <trans-unit id="e67d0e2533c23415f32bd8363872bbe789d31012" translate="yes" xml:space="preserve">
          <source>ACLs are used to specify access rights to file system objects. An ACL is an ordered list of &lt;a href=&quot;aclentry&quot;&gt;&lt;code&gt;access-control-entries&lt;/code&gt;&lt;/a&gt;, each specifying a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; and the level of access for that user principal. This file attribute view defines the &lt;a href=&quot;aclfileattributeview#getAcl--&quot;&gt;&lt;code&gt;getAcl&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;aclfileattributeview#setAcl-java.util.List-&quot;&gt;&lt;code&gt;setAcl&lt;/code&gt;&lt;/a&gt; methods to read and write ACLs based on the ACL model specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;RFC 3530: Network File System (NFS) version 4 Protocol&lt;/i&gt;&lt;/a&gt;. This file attribute view is intended for file system implementations that support the NFSv4 ACL model or have a &lt;em&gt;well-defined&lt;/em&gt; mapping between the NFSv4 ACL model and the ACL model used by the file system. The details of such mapping are implementation dependent and are therefore unspecified.</source>
          <target state="translated">ACL은 파일 시스템 오브젝트에 대한 액세스 권한을 지정하는 데 사용됩니다. ACL은 순서가 지정된 &lt;a href=&quot;aclentry&quot;&gt; &lt;code&gt;access-control-entries&lt;/code&gt; &lt;/a&gt; 목록으로 , 각각 &lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt; 및 해당 사용자 프린시 펄 에 대한 액세스 레벨을 지정합니다 . 이 파일 속성보기는 정의 &lt;a href=&quot;aclfileattributeview#getAcl--&quot;&gt; &lt;code&gt;getAcl&lt;/code&gt; 을&lt;/a&gt; 하고 &lt;a href=&quot;aclfileattributeview#setAcl-java.util.List-&quot;&gt; &lt;code&gt;setAcl&lt;/code&gt; &lt;/a&gt; 방법은 읽기와 ACL 모델을 기반으로 쓰기의 ACL에 지정된 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;RFC 3530 : 네트워크 파일 시스템 (NFS) 버전 4 프로토콜&lt;/i&gt;&lt;/a&gt; . 이 파일 속성보기는 NFSv4 ACL 모델을 지원하거나 파일 시스템이 사용하는 ACL 모델과 NFSv4 ACL 모델 사이에 &lt;em&gt;올바르게 정의 된&lt;/em&gt; 파일 시스템 구현을위한 것입니다 . 이러한 맵핑의 세부 사항은 구현에 따라 다르므로 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="26a4a0c6656568c29d50fbb334cad96a542d940a" translate="yes" xml:space="preserve">
          <source>ACT - Australia/Darwin</source>
          <target state="translated">ACT-호주 / 다윈</target>
        </trans-unit>
        <trans-unit id="2b9f1cf5c4d33807129af3dcb41af0a491f4cda7" translate="yes" xml:space="preserve">
          <source>ACTION</source>
          <target state="translated">ACTION</target>
        </trans-unit>
        <trans-unit id="04e015cde86c5c39582d9ae4da3c0220ab2e76a9" translate="yes" xml:space="preserve">
          <source>ACTION_INFO</source>
          <target state="translated">ACTION_INFO</target>
        </trans-unit>
        <trans-unit id="cd0e8af9b9470e3119d3ce9a7b437c8bb7c270e2" translate="yes" xml:space="preserve">
          <source>ACTIVE_SENSING</source>
          <target state="translated">ACTIVE_SENSING</target>
        </trans-unit>
        <trans-unit id="6d95c1847219c633950f8f1ceca9761315abfc19" translate="yes" xml:space="preserve">
          <source>AD</source>
          <target state="translated">AD</target>
        </trans-unit>
        <trans-unit id="1d8cbddf0d21e774deb59574ec71608e2d4d74e5" translate="yes" xml:space="preserve">
          <source>ADD_ATTRIBUTE</source>
          <target state="translated">ADD_ATTRIBUTE</target>
        </trans-unit>
        <trans-unit id="0945bdd4fcf18aeaa6a0633c7b7b76e709061a66" translate="yes" xml:space="preserve">
          <source>ADD_FILE</source>
          <target state="translated">ADD_FILE</target>
        </trans-unit>
        <trans-unit id="06f5056ca9ed1f482fe6f6b5cbee02f5b55f6488" translate="yes" xml:space="preserve">
          <source>ADD_SUBDIRECTORY</source>
          <target state="translated">ADD_SUBDIRECTORY</target>
        </trans-unit>
        <trans-unit id="445e0d25fa4203c13f5bf8ff87d875bcc80379ca" translate="yes" xml:space="preserve">
          <source>ADMIN_UIROLE</source>
          <target state="translated">ADMIN_UIROLE</target>
        </trans-unit>
        <trans-unit id="984be3fb8fdd9dbceac508953f044e27b461c73a" translate="yes" xml:space="preserve">
          <source>AEAD modes such as GCM/CCM perform all AAD authenticity calculations before starting the ciphertext authenticity calculations. To avoid implementations having to internally buffer ciphertext, all AAD data must be supplied to GCM/CCM implementations (via the &lt;code&gt;updateAAD&lt;/code&gt; methods) &lt;b&gt;before&lt;/b&gt; the ciphertext is processed (via the &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;doFinal&lt;/code&gt; methods).</source>
          <target state="translated">GCM / CCM과 같은 AEAD 모드는 암호 텍스트 진위 계산을 시작하기 전에 모든 AAD 진위 계산을 수행합니다. 암호문을 내부적으로 버퍼링해야하는 구현을 피하려면 암호문이 처리 &lt;b&gt;되기 전에&lt;/b&gt; ( &lt;code&gt;update&lt;/code&gt; 및 &lt;code&gt;doFinal&lt;/code&gt; 메소드 를 통해 ) 모든 AAD 데이터가 &lt;code&gt;updateAAD&lt;/code&gt; 메소드 를 통해 GCM / CCM 구현에 제공되어야합니다 .&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="39abe41a2b86194e96962a5242145e3d715c4687" translate="yes" xml:space="preserve">
          <source>AEADBadTagException</source>
          <target state="translated">AEADBadTagException</target>
        </trans-unit>
        <trans-unit id="c678019122e64df66a311cc12aa4e6f1c8390e1e" translate="yes" xml:space="preserve">
          <source>AEGEAN_NUMBERS</source>
          <target state="translated">AEGEAN_NUMBERS</target>
        </trans-unit>
        <trans-unit id="0f6bcc5a998f37d080f93b7f1a3d186f32348e67" translate="yes" xml:space="preserve">
          <source>AET - Australia/Sydney</source>
          <target state="translated">AET-호주 / 시드니</target>
        </trans-unit>
        <trans-unit id="187ac8a3f318da00ff37f1e05544befe533d1b2b" translate="yes" xml:space="preserve">
          <source>AFFILIATION_CHANGED</source>
          <target state="translated">AFFILIATION_CHANGED</target>
        </trans-unit>
        <trans-unit id="742e262ca50b0ea6eb171d2f89f987ddb88811d2" translate="yes" xml:space="preserve">
          <source>AGT - America/Argentina/Buenos_Aires</source>
          <target state="translated">AGT-미국 / 아르헨티나 / 부에노스 아이레스</target>
        </trans-unit>
        <trans-unit id="bd4b01946d29a04b84f9d1306289b7687d01b8c2" translate="yes" xml:space="preserve">
          <source>AH</source>
          <target state="translated">AH</target>
        </trans-unit>
        <trans-unit id="daeda9ad465a14cc21e5bd3b445d1168c6219a95" translate="yes" xml:space="preserve">
          <source>AIFC</source>
          <target state="translated">AIFC</target>
        </trans-unit>
        <trans-unit id="cc4b343bcef1684847873e6e496f1fbaea6f94ad" translate="yes" xml:space="preserve">
          <source>AIFF</source>
          <target state="translated">AIFF</target>
        </trans-unit>
        <trans-unit id="614a5cdcdeb3920bff738f0cf610cf16c16c53b7" translate="yes" xml:space="preserve">
          <source>ALARM</source>
          <target state="translated">ALARM</target>
        </trans-unit>
        <trans-unit id="126224f8d7ba7b69069f78068fff36921ad6dd82" translate="yes" xml:space="preserve">
          <source>ALAW</source>
          <target state="translated">ALAW</target>
        </trans-unit>
        <trans-unit id="3c21229b70752c55217a3cdccd2dafe54e79a9d0" translate="yes" xml:space="preserve">
          <source>ALCHEMICAL_SYMBOLS</source>
          <target state="translated">ALCHEMICAL_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="6b36b817195a01ed19e0c2adf4cc66e63fdec6c0" translate="yes" xml:space="preserve">
          <source>ALGORITHM_CONSTRAINED</source>
          <target state="translated">ALGORITHM_CONSTRAINED</target>
        </trans-unit>
        <trans-unit id="e55e07a9fade04a6bee34fd5c03cc83c9560596b" translate="yes" xml:space="preserve">
          <source>ALIGNED_DAY_OF_WEEK_IN_MONTH</source>
          <target state="translated">ALIGNED_DAY_OF_WEEK_IN_MONTH</target>
        </trans-unit>
        <trans-unit id="f0c1371e72dc6c0567f01d497300746bbcf0fd98" translate="yes" xml:space="preserve">
          <source>ALIGNED_DAY_OF_WEEK_IN_YEAR</source>
          <target state="translated">ALIGNED_DAY_OF_WEEK_IN_YEAR</target>
        </trans-unit>
        <trans-unit id="f24a0631bb4495ceb294befef5f24e36896ed724" translate="yes" xml:space="preserve">
          <source>ALIGNED_WEEK_OF_MONTH</source>
          <target state="translated">ALIGNED_WEEK_OF_MONTH</target>
        </trans-unit>
        <trans-unit id="1f1e368a9d754c6ebf15d413e7f218ae3733592a" translate="yes" xml:space="preserve">
          <source>ALIGNED_WEEK_OF_YEAR</source>
          <target state="translated">ALIGNED_WEEK_OF_YEAR</target>
        </trans-unit>
        <trans-unit id="6b42874e3cd20771d93096ec5ce36307a1f2ba14" translate="yes" xml:space="preserve">
          <source>ALL</source>
          <target state="translated">ALL</target>
        </trans-unit>
        <trans-unit id="116e128f4e0dd980dab5fb341cf6a33345f51815" translate="yes" xml:space="preserve">
          <source>ALL indicates that all messages should be logged. This level is initialized to &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt;.</source>
          <target state="translated">ALL은 모든 메시지가 기록되어야 함을 나타냅니다. 이 레벨은 &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt; 로 초기화 됩니다 .</target>
        </trans-unit>
        <trans-unit id="2b95120ccbbd332ef01603e165785d73fc537d8a" translate="yes" xml:space="preserve">
          <source>ALLOW</source>
          <target state="translated">ALLOW</target>
        </trans-unit>
        <trans-unit id="d6ea590cb99baaf8cd9f2a54d3b813ea18594a95" translate="yes" xml:space="preserve">
          <source>ALLOWED_CLASSNAMES</source>
          <target state="translated">ALLOWED_CLASSNAMES</target>
        </trans-unit>
        <trans-unit id="4b470682767c5719eb74ad2559fdfbb7bdcb3b01" translate="yes" xml:space="preserve">
          <source>ALLOWED_CLASSNAMES_LIST</source>
          <target state="translated">ALLOWED_CLASSNAMES_LIST</target>
        </trans-unit>
        <trans-unit id="791733d60ef39d52c2d80b0c10eb431734c89c19" translate="yes" xml:space="preserve">
          <source>ALLOW_UNASSIGNED</source>
          <target state="translated">ALLOW_UNASSIGNED</target>
        </trans-unit>
        <trans-unit id="7efb0141b0d687d1d02d03ce47f0484690305979" translate="yes" xml:space="preserve">
          <source>ALL_STYLES</source>
          <target state="translated">ALL_STYLES</target>
        </trans-unit>
        <trans-unit id="93bb319c8a48fa8e7f1f6df21ea94faf3e7029c4" translate="yes" xml:space="preserve">
          <source>ALPHABETIC_PRESENTATION_FORMS</source>
          <target state="translated">ALPHABETIC_PRESENTATION_FORMS</target>
        </trans-unit>
        <trans-unit id="bff37fd419e970ae0915434d825066cffbe1a293" translate="yes" xml:space="preserve">
          <source>ALTERNATE</source>
          <target state="translated">ALTERNATE</target>
        </trans-unit>
        <trans-unit id="ae0ecf3287dbfbb668b86fe771af6cf210ce9334" translate="yes" xml:space="preserve">
          <source>ALWAYS</source>
          <target state="translated">ALWAYS</target>
        </trans-unit>
        <trans-unit id="80d305c58f97edfae92a3627f5a66d9bef4d8d46" translate="yes" xml:space="preserve">
          <source>AM</source>
          <target state="translated">AM</target>
        </trans-unit>
        <trans-unit id="73444bf257d54bff604a6903f4825e7824851c2c" translate="yes" xml:space="preserve">
          <source>AMPM_OF_DAY</source>
          <target state="translated">AMPM_OF_DAY</target>
        </trans-unit>
        <trans-unit id="92d9e7ee1347f2e5ad9402e1f6d4a10966e83887" translate="yes" xml:space="preserve">
          <source>AM_PM</source>
          <target state="translated">AM_PM</target>
        </trans-unit>
        <trans-unit id="ce48f748ef72ed3327f39a556c1ef059edc84483" translate="yes" xml:space="preserve">
          <source>AM_PM_FIELD</source>
          <target state="translated">AM_PM_FIELD</target>
        </trans-unit>
        <trans-unit id="bf6477cc0a8d3d89aa94d68f54ee52c6159dfd51" translate="yes" xml:space="preserve">
          <source>ANCIENT_GREEK_MUSICAL_NOTATION</source>
          <target state="translated">ANCIENT_GREEK_MUSICAL_NOTATION</target>
        </trans-unit>
        <trans-unit id="09ae9da7cd39117b8e76350b9d4dad449817286e" translate="yes" xml:space="preserve">
          <source>ANCIENT_GREEK_NUMBERS</source>
          <target state="translated">ANCIENT_GREEK_NUMBERS</target>
        </trans-unit>
        <trans-unit id="93147d1c64ef65fc82d1491e103823357d07864f" translate="yes" xml:space="preserve">
          <source>ANCIENT_SYMBOLS</source>
          <target state="translated">ANCIENT_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="c2f934cb8cab6c1b3af0d4f2fdd824eabafb6bf4" translate="yes" xml:space="preserve">
          <source>AND</source>
          <target state="translated">AND</target>
        </trans-unit>
        <trans-unit id="c5c284397a439aabcf52dd54d3120baa24eab2e0" translate="yes" xml:space="preserve">
          <source>ANNOTATION_PROCESSOR_PATH</source>
          <target state="translated">ANNOTATION_PROCESSOR_PATH</target>
        </trans-unit>
        <trans-unit id="80599450acc043eda2c6d7977f2f5f31df3001ab" translate="yes" xml:space="preserve">
          <source>ANNOTATION_TYPE</source>
          <target state="translated">ANNOTATION_TYPE</target>
        </trans-unit>
        <trans-unit id="9b2473d04fc51348aa20d1fedf5e629c43a0ada9" translate="yes" xml:space="preserve">
          <source>ANONYMOUS</source>
          <target state="translated">ANONYMOUS</target>
        </trans-unit>
        <trans-unit id="83a7df38b639e6ee13f1380269c668b8f2899302" translate="yes" xml:space="preserve">
          <source>API Note:</source>
          <target state="translated">API 참고 사항 :</target>
        </trans-unit>
        <trans-unit id="025e07020e93e25579c1a9621d736dca0c1f26de" translate="yes" xml:space="preserve">
          <source>APPEND</source>
          <target state="translated">APPEND</target>
        </trans-unit>
        <trans-unit id="6c6a88b67a60e27d395f8f99eb3359773c0852ee" translate="yes" xml:space="preserve">
          <source>APPEND_DATA</source>
          <target state="translated">APPEND_DATA</target>
        </trans-unit>
        <trans-unit id="66cb73900908daf9646bfc07cc6175194c4dacf5" translate="yes" xml:space="preserve">
          <source>APPLET</source>
          <target state="translated">APPLET</target>
        </trans-unit>
        <trans-unit id="1842ed16b292822d88f1a661995a7a566df5ea6b" translate="yes" xml:space="preserve">
          <source>APPLICATION</source>
          <target state="translated">APPLICATION</target>
        </trans-unit>
        <trans-unit id="6c88a2401cf34241cc9e89158a211a897eee675a" translate="yes" xml:space="preserve">
          <source>APPLY_REVERB</source>
          <target state="translated">APPLY_REVERB</target>
        </trans-unit>
        <trans-unit id="944df80ebcd49d17fa62a8e0c860ab9d9874eabf" translate="yes" xml:space="preserve">
          <source>APRIL</source>
          <target state="translated">APRIL</target>
        </trans-unit>
        <trans-unit id="03d133da93012831796ffc8ff5b4255844c75565" translate="yes" xml:space="preserve">
          <source>ARABIC</source>
          <target state="translated">ARABIC</target>
        </trans-unit>
        <trans-unit id="338ad4cb8f40840fc1bbac843471c9ec0dbfd611" translate="yes" xml:space="preserve">
          <source>ARABIC_EXTENDED_A</source>
          <target state="translated">ARABIC_EXTENDED_A</target>
        </trans-unit>
        <trans-unit id="ef45a04690c6c58f1b1871b5f4adfb242b020a14" translate="yes" xml:space="preserve">
          <source>ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS</source>
          <target state="translated">ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="aa56cc2282489e08bbff6cb4195752bf0870e5e5" translate="yes" xml:space="preserve">
          <source>ARABIC_PRESENTATION_FORMS_A</source>
          <target state="translated">ARABIC_PRESENTATION_FORMS_A</target>
        </trans-unit>
        <trans-unit id="d2985f63688dd9c0585c7524f0d046d821ebf077" translate="yes" xml:space="preserve">
          <source>ARABIC_PRESENTATION_FORMS_B</source>
          <target state="translated">ARABIC_PRESENTATION_FORMS_B</target>
        </trans-unit>
        <trans-unit id="22067cbc08bc5f601aaafc28f82b8cdda2e32266" translate="yes" xml:space="preserve">
          <source>ARABIC_SUPPLEMENT</source>
          <target state="translated">ARABIC_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="d2a8b4f2260ca5da9545853c3c2e9c5c0777a776" translate="yes" xml:space="preserve">
          <source>ARGUMENT</source>
          <target state="translated">ARGUMENT</target>
        </trans-unit>
        <trans-unit id="3669288cabd0e6c21385584c21cb897733b8578f" translate="yes" xml:space="preserve">
          <source>ARGV</source>
          <target state="translated">ARGV</target>
        </trans-unit>
        <trans-unit id="ceefe3be9431dff6aaeff5d30e8fb1ec45650490" translate="yes" xml:space="preserve">
          <source>ARMENIAN</source>
          <target state="translated">ARMENIAN</target>
        </trans-unit>
        <trans-unit id="3e36d1ca2adf5962801ee67544d6b213480d0743" translate="yes" xml:space="preserve">
          <source>ARRAY</source>
          <target state="translated">ARRAY</target>
        </trans-unit>
        <trans-unit id="0e0c0cbc44449ce442e1ae9b0a4b121fc6a92c02" translate="yes" xml:space="preserve">
          <source>ARROWS</source>
          <target state="translated">ARROWS</target>
        </trans-unit>
        <trans-unit id="c9e98c1bd5797a7ecef9ab5cc0ab35d8a3e9cf22" translate="yes" xml:space="preserve">
          <source>ART - Africa/Cairo</source>
          <target state="translated">예술-아프리카 / 카이로</target>
        </trans-unit>
        <trans-unit id="c4fc963a07655bac4da89f1c8d668e8017556757" translate="yes" xml:space="preserve">
          <source>AST - America/Anchorage</source>
          <target state="translated">AST-미국 / 앵커리지</target>
        </trans-unit>
        <trans-unit id="031fd11ba8734ab304116a023b5216306b246bee" translate="yes" xml:space="preserve">
          <source>AT</source>
          <target state="translated">AT</target>
        </trans-unit>
        <trans-unit id="8f375509317e9fbcc7473cbee693b57706fb8f8e" translate="yes" xml:space="preserve">
          <source>ATC</source>
          <target state="translated">ATC</target>
        </trans-unit>
        <trans-unit id="f0a6a916e4276d6b3c3814bc2eb873e2d74b8c73" translate="yes" xml:space="preserve">
          <source>ATOMIC_MOVE</source>
          <target state="translated">ATOMIC_MOVE</target>
        </trans-unit>
        <trans-unit id="2c0668b4119a28d3b8d21f376c9df47716f9bf7a" translate="yes" xml:space="preserve">
          <source>ATTEMPTED</source>
          <target state="translated">ATTEMPTED</target>
        </trans-unit>
        <trans-unit id="98130b2a4c8794cbbed43a65aa471d22b8ced399" translate="yes" xml:space="preserve">
          <source>ATTRIBUTE_CHANGE</source>
          <target state="translated">ATTRIBUTE_CHANGE</target>
        </trans-unit>
        <trans-unit id="acdf41735f790252eae39bee834dcad0de587e3d" translate="yes" xml:space="preserve">
          <source>AU</source>
          <target state="translated">AU</target>
        </trans-unit>
        <trans-unit id="5c762e0265b19d486d4dd015510bbc3af061410f" translate="yes" xml:space="preserve">
          <source>AUDIT</source>
          <target state="translated">AUDIT</target>
        </trans-unit>
        <trans-unit id="9754d6dfc639d295f5bdd4f6cc70159ea0c48e8a" translate="yes" xml:space="preserve">
          <source>AUGUST</source>
          <target state="translated">AUGUST</target>
        </trans-unit>
        <trans-unit id="724540f5024f1e2f23a4bb75e59c8f97f6addf06" translate="yes" xml:space="preserve">
          <source>AUTHENTICATOR</source>
          <target state="translated">AUTHENTICATOR</target>
        </trans-unit>
        <trans-unit id="f7f4ecb9c05704153e4b3b388e319183a16df5a3" translate="yes" xml:space="preserve">
          <source>AUTHORITATIVE</source>
          <target state="translated">AUTHORITATIVE</target>
        </trans-unit>
        <trans-unit id="7833ba886675cf3ba0c45e4d9fcfadfecd29d4ac" translate="yes" xml:space="preserve">
          <source>AUTOSELECT_FILTERING</source>
          <target state="translated">AUTOSELECT_FILTERING</target>
        </trans-unit>
        <trans-unit id="75d392492121ee3f2c8d8d5a60b325566760716c" translate="yes" xml:space="preserve">
          <source>AUTOSENSE</source>
          <target state="translated">AUTOSENSE</target>
        </trans-unit>
        <trans-unit id="e9e60c6e9f0996b02aefc6bdeb1fa2bbc3634c71" translate="yes" xml:space="preserve">
          <source>AUX_RETURN</source>
          <target state="translated">AUX_RETURN</target>
        </trans-unit>
        <trans-unit id="1871fa6627fad1d90847379595b4ba53e91ac32c" translate="yes" xml:space="preserve">
          <source>AUX_SEND</source>
          <target state="translated">AUX_SEND</target>
        </trans-unit>
        <trans-unit id="9d71368fe0bb53b1a094b2ee1f09f8b8009f6c5b" translate="yes" xml:space="preserve">
          <source>AVESTAN</source>
          <target state="translated">AVESTAN</target>
        </trans-unit>
        <trans-unit id="90b84a7343843ece0c502b19c94f6829901b2006" translate="yes" xml:space="preserve">
          <source>Ability to add an existing file to a directory. This is sometimes known as creating a link, or hard link.</source>
          <target state="translated">기존 파일을 디렉토리에 추가하는 기능 링크 또는 하드 링크 생성이라고도합니다.</target>
        </trans-unit>
        <trans-unit id="573e894a7fc920c54b89125f9468b364f2b78886" translate="yes" xml:space="preserve">
          <source>Ability to control the runtime characteristics of the Java virtual machine, for example, enabling and disabling the verbose output for the class loading or memory system, setting the threshold of a memory pool, and enabling and disabling the thread contention monitoring support. Some actions controlled by this permission can disclose information about the running application, like the -verbose:class flag.</source>
          <target state="translated">Java 가상 머신의 런타임 특성을 제어하는 ​​기능 (예 : 클래스로드 또는 메모리 시스템에 대한 자세한 출력 사용 및 사용 안함, 메모리 풀의 임계 값 설정 및 스레드 경합 모니터링 지원 사용 및 사용 안함) 이 권한으로 제어되는 일부 조치는 -verbose : class 플래그와 같이 실행중인 애플리케이션에 대한 정보를 공개 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="03c7f50a69f5ba45cbf411d488ab5d629d03b2a1" translate="yes" xml:space="preserve">
          <source>Ability to create symbolic links.</source>
          <target state="translated">심볼릭 링크 생성 기능</target>
        </trans-unit>
        <trans-unit id="eff8ce592848a560f89e2cf1520ddb6e43d53e79" translate="yes" xml:space="preserve">
          <source>Ability to retrieve runtime information about the Java virtual machine such as thread stack trace, a list of all loaded class names, and input arguments to the Java virtual machine.</source>
          <target state="translated">스레드 스택 추적,로드 된 모든 클래스 이름 목록 및 Java 가상 머신에 대한 입력 인수와 같은 Java 가상 머신에 대한 런타임 정보를 검색하는 기능</target>
        </trans-unit>
        <trans-unit id="abfb4abf51021868e0f1a08bf350656a33c58b3c" translate="yes" xml:space="preserve">
          <source>AbortPolicy</source>
          <target state="translated">AbortPolicy</target>
        </trans-unit>
        <trans-unit id="eeb2c202054f0550cd477d4d6591b6d6a0a84d77" translate="yes" xml:space="preserve">
          <source>Aborts the attempt to cache the response. If an IOException is encountered while reading the response or writing to the cache, the current cache store operation will be abandoned.</source>
          <target state="translated">응답 캐시 시도를 중단합니다. 응답을 읽거나 캐시에 쓰는 동안 IOException이 발생하면 현재 캐시 저장소 작업이 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="a6c5f081b3addee364af1c8cdb84853f49dc8e07" translate="yes" xml:space="preserve">
          <source>Absolute</source>
          <target state="translated">Absolute</target>
        </trans-unit>
        <trans-unit id="2aeab4c203a69538a18c2c1e91f75d70cb98ce42" translate="yes" xml:space="preserve">
          <source>Absolute and relative &lt;a href=&quot;bytebuffer#get--&quot;&gt;&lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;bytebuffer#put-byte-&quot;&gt;&lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that read and write single bytes;</source>
          <target state="translated">단일 바이트를 읽고 쓰는 절대 및 상대 &lt;a href=&quot;bytebuffer#get--&quot;&gt; &lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;bytebuffer#put-byte-&quot;&gt; &lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 메소드;</target>
        </trans-unit>
        <trans-unit id="fac3a35b5c460faca0dd716a922e9128260ec50c" translate="yes" xml:space="preserve">
          <source>Absolute and relative &lt;a href=&quot;bytebuffer#getChar--&quot;&gt;&lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;bytebuffer#putChar-char-&quot;&gt;&lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that read and write values of other primitive types, translating them to and from sequences of bytes in a particular byte order;</source>
          <target state="translated">다른 프리미티브 유형의 값을 읽고 바이트 단위의 특정 바이트 순서로 변환하는 절대 및 상대 &lt;a href=&quot;bytebuffer#getChar--&quot;&gt; &lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;bytebuffer#putChar-char-&quot;&gt; &lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 메소드.</target>
        </trans-unit>
        <trans-unit id="08b9f87c3ec4e79171a14f2289a478f4f1e977db" translate="yes" xml:space="preserve">
          <source>Absolute and relative &lt;a href=&quot;charbuffer#get--&quot;&gt;&lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;charbuffer#put-char-&quot;&gt;&lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that read and write single chars;</source>
          <target state="translated">단일 문자를 읽고 쓰는 절대 및 상대 &lt;a href=&quot;charbuffer#get--&quot;&gt; &lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;charbuffer#put-char-&quot;&gt; &lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 메소드;</target>
        </trans-unit>
        <trans-unit id="b7b6cfc69e16fb63af3daa8cdf79e7c556e0c8ff" translate="yes" xml:space="preserve">
          <source>Absolute and relative &lt;a href=&quot;doublebuffer#get--&quot;&gt;&lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;doublebuffer#put-double-&quot;&gt;&lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that read and write single doubles;</source>
          <target state="translated">단일 복식을 읽고 쓰는 절대 및 상대 &lt;a href=&quot;doublebuffer#get--&quot;&gt; &lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;doublebuffer#put-double-&quot;&gt; &lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 메소드;</target>
        </trans-unit>
        <trans-unit id="0b42a9f349d6ebc2cd8ea0fa1d096761600a3000" translate="yes" xml:space="preserve">
          <source>Absolute and relative &lt;a href=&quot;floatbuffer#get--&quot;&gt;&lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;floatbuffer#put-float-&quot;&gt;&lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that read and write single floats;</source>
          <target state="translated">단일 float를 읽고 쓰는 절대 및 상대 &lt;a href=&quot;floatbuffer#get--&quot;&gt; &lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;floatbuffer#put-float-&quot;&gt; &lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 메소드;</target>
        </trans-unit>
        <trans-unit id="7f3a10bd4849f06edaec8dc65a229da9b071769f" translate="yes" xml:space="preserve">
          <source>Absolute and relative &lt;a href=&quot;intbuffer#get--&quot;&gt;&lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;intbuffer#put-int-&quot;&gt;&lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that read and write single ints;</source>
          <target state="translated">단일 int를 읽고 쓰는 절대 및 상대 &lt;a href=&quot;intbuffer#get--&quot;&gt; &lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;intbuffer#put-int-&quot;&gt; &lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 메소드;</target>
        </trans-unit>
        <trans-unit id="80a7399b78b3237df1e0641107fd34899a81e8ec" translate="yes" xml:space="preserve">
          <source>Absolute and relative &lt;a href=&quot;longbuffer#get--&quot;&gt;&lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;longbuffer#put-long-&quot;&gt;&lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that read and write single longs;</source>
          <target state="translated">단일 long을 읽고 쓰는 절대 및 상대 &lt;a href=&quot;longbuffer#get--&quot;&gt; &lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;longbuffer#put-long-&quot;&gt; &lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 메소드;</target>
        </trans-unit>
        <trans-unit id="9e6ecf821df50c53acd282793181f662ea0642c0" translate="yes" xml:space="preserve">
          <source>Absolute and relative &lt;a href=&quot;shortbuffer#get--&quot;&gt;&lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;shortbuffer#put-short-&quot;&gt;&lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that read and write single shorts;</source>
          <target state="translated">단일 반바지를 읽고 쓰는 절대 및 상대 &lt;a href=&quot;shortbuffer#get--&quot;&gt; &lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;shortbuffer#put-short-&quot;&gt; &lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 메소드;</target>
        </trans-unit>
        <trans-unit id="13c434a163ba17d0a2efa9387cdab8a8c1575e06" translate="yes" xml:space="preserve">
          <source>Abstract base class for reference objects.</source>
          <target state="translated">참조 객체에 대한 추상 기본 클래스.</target>
        </trans-unit>
        <trans-unit id="75128c4d43c35e92d61e47473a18fa723492428b" translate="yes" xml:space="preserve">
          <source>Abstract base class for reference objects. This class defines the operations common to all reference objects. Because reference objects are implemented in close cooperation with the garbage collector, this class may not be subclassed directly.</source>
          <target state="translated">참조 객체에 대한 추상 기본 클래스. 이 클래스는 모든 참조 객체에 공통적 인 작업을 정의합니다. 참조 객체는 가비지 수집기와 긴밀히 협력하여 구현되므로이 클래스는 직접 하위 클래스로 분류되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d4c653a18f685389e590da94380989631dbe31c" translate="yes" xml:space="preserve">
          <source>Abstract base class for tasks that run within a &lt;a href=&quot;forkjoinpool&quot;&gt;&lt;code&gt;ForkJoinPool&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;forkjoinpool&quot;&gt; &lt;code&gt;ForkJoinPool&lt;/code&gt; &lt;/a&gt; 내에서 실행되는 작업에 대한 추상 기본 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="cddfb274f5f6825444b71f4c271c41cf6d0691d2" translate="yes" xml:space="preserve">
          <source>Abstract base class for tasks that run within a &lt;a href=&quot;forkjoinpool&quot;&gt;&lt;code&gt;ForkJoinPool&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;ForkJoinTask&lt;/code&gt; is a thread-like entity that is much lighter weight than a normal thread. Huge numbers of tasks and subtasks may be hosted by a small number of actual threads in a ForkJoinPool, at the price of some usage limitations.</source>
          <target state="translated">&lt;a href=&quot;forkjoinpool&quot;&gt; &lt;code&gt;ForkJoinPool&lt;/code&gt; &lt;/a&gt; 내에서 실행되는 작업에 대한 추상 기본 클래스입니다 . &lt;code&gt;ForkJoinTask&lt;/code&gt; 는 일반 나사보다 훨씬 가벼운 무게 스레드와 같은 엔티티입니다. ForkJoinPool의 일부 실제 스레드는 사용량 제한에 따라 수많은 작업과 하위 작업을 호스팅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="689923b3122e25098a4b1f86006db57a6a7b5345" translate="yes" xml:space="preserve">
          <source>Abstract class for X.509 certificates.</source>
          <target state="translated">X.509 인증서의 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="d0a9e7f8405267e8539079c54bf5b6c055a488c2" translate="yes" xml:space="preserve">
          <source>Abstract class for X.509 certificates. This provides a standard way to access all the attributes of an X.509 certificate.</source>
          <target state="translated">X.509 인증서의 추상 클래스입니다. 이는 X.509 인증서의 모든 속성에 액세스하는 표준 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d920cb3e5fd0f8367b5e72aa8ab6883b26fab307" translate="yes" xml:space="preserve">
          <source>Abstract class for X.509 v1 certificates.</source>
          <target state="translated">X.509 v1 인증서의 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="40b75db3e5fb5c4597d3fdeb46775791785c9f84" translate="yes" xml:space="preserve">
          <source>Abstract class for X.509 v1 certificates. This provides a standard way to access all the version 1 attributes of an X.509 certificate. Attributes that are specific to X.509 v2 or v3 are not available through this interface. Future API evolution will provide full access to complete X.509 v3 attributes.</source>
          <target state="translated">X.509 v1 인증서의 추상 클래스입니다. 이는 X.509 인증서의 모든 버전 1 속성에 액세스하는 표준 방법을 제공합니다. X.509 v2 또는 v3에 특정한 속성은이 인터페이스를 통해 사용할 수 없습니다. 향후 API 진화는 완전한 X.509 v3 속성에 대한 완전한 액세스를 제공 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="922da9909d630e8d798ad7d31e1cf672d3ec14c9" translate="yes" xml:space="preserve">
          <source>Abstract class for a revoked certificate in a CRL (Certificate Revocation List).</source>
          <target state="translated">CRL (인증서 해지 목록)에서 해지 된 인증서의 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="eb2a20325aa0174164ed2f653fa683ed6c84dfab" translate="yes" xml:space="preserve">
          <source>Abstract class for a revoked certificate in a CRL (Certificate Revocation List). The ASN.1 definition for &lt;em&gt;revokedCertificates&lt;/em&gt; is:</source>
          <target state="translated">CRL (인증서 해지 목록)에서 해지 된 인증서의 추상 클래스입니다. &lt;em&gt;revokedCertificates&lt;/em&gt; 의 ASN.1 정의 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bd19c16d99837f2d76822a9b70e0698f77c9abdf" translate="yes" xml:space="preserve">
          <source>Abstract class for an X.509 Certificate Revocation List (CRL).</source>
          <target state="translated">X.509 CRL (인증서 해지 목록)의 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="8a1174b852fdedd26f190c2396d2d185f4b44517" translate="yes" xml:space="preserve">
          <source>Abstract class for an X.509 Certificate Revocation List (CRL). A CRL is a time-stamped list identifying revoked certificates. It is signed by a Certificate Authority (CA) and made freely available in a public repository.</source>
          <target state="translated">X.509 CRL (인증서 해지 목록)의 추상 클래스입니다. CRL은 해지 된 인증서를 식별하는 타임 스탬프 목록입니다. 인증 기관 (CA)에서 서명 한 후 공용 저장소에서 자유롭게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="33fc88ee3618c4b0e19247406adb148217fdbf44" translate="yes" xml:space="preserve">
          <source>Abstract class for managing a variety of identity certificates.</source>
          <target state="translated">다양한 ID 인증서를 관리하기위한 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="7ea80b0937bae10dec41f85ec007585c8083be97" translate="yes" xml:space="preserve">
          <source>Abstract class for managing a variety of identity certificates. An identity certificate is a binding of a principal to a public key which is vouched for by another principal. (A principal represents an entity such as an individual user, a group, or a corporation.)</source>
          <target state="translated">다양한 ID 인증서를 관리하기위한 추상 클래스입니다. 신원 인증서는 다른 주체가 보증하는 공개 키에 주체를 바인딩하는 것입니다. (주체는 개인 사용자, 그룹 또는 회사와 같은 엔티티를 나타냅니다.)</target>
        </trans-unit>
        <trans-unit id="b2e3ee65eaf5eb6ab23c01d46d434925842b9b8e" translate="yes" xml:space="preserve">
          <source>Abstract class for managing a variety of identity certificates. An identity certificate is a guarantee by a principal that a public key is that of another principal. (A principal represents an entity such as an individual user, a group, or a corporation.)</source>
          <target state="translated">다양한 ID 인증서를 관리하기위한 추상 클래스입니다. 신원 인증서는 공개 키가 다른 사용자의 공개 키임을 보증하는 것입니다. (주체는 개인 사용자, 그룹 또는 회사와 같은 엔티티를 나타냅니다.)</target>
        </trans-unit>
        <trans-unit id="19e1446a1b5a0440111b2ac7906682ae2514d4e5" translate="yes" xml:space="preserve">
          <source>Abstract class for reading character streams.</source>
          <target state="translated">문자 스트림을 읽기위한 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="b77d29f71063c6b733503e4606291b1c6da23bb4" translate="yes" xml:space="preserve">
          <source>Abstract class for reading character streams. The only methods that a subclass must implement are read(char[], int, int) and close(). Most subclasses, however, will override some of the methods defined here in order to provide higher efficiency, additional functionality, or both.</source>
          <target state="translated">문자 스트림을 읽기위한 추상 클래스입니다. 서브 클래스가 구현해야하는 유일한 메소드는 read (char [], int, int) 및 close ()입니다. 그러나 대부분의 서브 클래스는 효율성, 추가 기능 또는 둘 다를 제공하기 위해 여기에 정의 된 일부 메소드를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="97ec747c3b727a901a3e375f88f6b64ef61c3034" translate="yes" xml:space="preserve">
          <source>Abstract class for reading filtered character streams.</source>
          <target state="translated">필터링 된 문자 스트림을 읽기위한 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="d28abad97045352de99047fbc5a0ca7270a6fec0" translate="yes" xml:space="preserve">
          <source>Abstract class for reading filtered character streams. The abstract class &lt;code&gt;FilterReader&lt;/code&gt; itself provides default methods that pass all requests to the contained stream. Subclasses of &lt;code&gt;FilterReader&lt;/code&gt; should override some of these methods and may also provide additional methods and fields.</source>
          <target state="translated">필터링 된 문자 스트림을 읽기위한 추상 클래스입니다. 추상 클래스 &lt;code&gt;FilterReader&lt;/code&gt; 자체는 모든 요청을 포함 된 스트림으로 전달하는 기본 메소드를 제공합니다. &lt;code&gt;FilterReader&lt;/code&gt; 의 서브 클래스는 이러한 메소드 중 일부를 대체해야하며 추가 메소드 및 필드를 제공 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c714dd0137e8095aa4d4b6da99c89e0c6f4e6e6b" translate="yes" xml:space="preserve">
          <source>Abstract class for representing access to a system resource.</source>
          <target state="translated">시스템 리소스에 대한 액세스를 나타내는 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="a4215330b6b435884a5ea8b00f7664eaabffd7ad" translate="yes" xml:space="preserve">
          <source>Abstract class for representing access to a system resource. All permissions have a name (whose interpretation depends on the subclass), as well as abstract functions for defining the semantics of the particular Permission subclass.</source>
          <target state="translated">시스템 리소스에 대한 액세스를 나타내는 추상 클래스입니다. 모든 권한에는 이름 (하위 클래스에 따라 해석되는 해석)과 특정 권한 하위 클래스의 의미를 정의하기위한 추상 함수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="70979c7cb17f66fa15f85a8bbced6bb717f7226c" translate="yes" xml:space="preserve">
          <source>Abstract class for writing filtered character streams.</source>
          <target state="translated">필터링 된 문자 스트림을 작성하기위한 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="9b392b3d7217a08ec52cd6ba7a2c7fc9a4e67f82" translate="yes" xml:space="preserve">
          <source>Abstract class for writing filtered character streams. The abstract class &lt;code&gt;FilterWriter&lt;/code&gt; itself provides default methods that pass all requests to the contained stream. Subclasses of &lt;code&gt;FilterWriter&lt;/code&gt; should override some of these methods and may also provide additional methods and fields.</source>
          <target state="translated">필터링 된 문자 스트림을 작성하기위한 추상 클래스입니다. 추상 클래스 &lt;code&gt;FilterWriter&lt;/code&gt; 자체는 모든 요청을 포함 된 스트림으로 전달하는 기본 메소드를 제공합니다. &lt;code&gt;FilterWriter&lt;/code&gt; 의 서브 클래스는 이러한 메소드 중 일부를 대체해야하며 추가 메소드 및 필드를 제공 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6dad3da70c2b788d3e662954f1cc1877a62cd4cf" translate="yes" xml:space="preserve">
          <source>Abstract class for writing to character streams.</source>
          <target state="translated">문자 스트림에 쓰는 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="108e80eb9c48a4e0505d79a4fb042868cfcd2487" translate="yes" xml:space="preserve">
          <source>Abstract class for writing to character streams. The only methods that a subclass must implement are write(char[], int, int), flush(), and close(). Most subclasses, however, will override some of the methods defined here in order to provide higher efficiency, additional functionality, or both.</source>
          <target state="translated">문자 스트림에 쓰는 추상 클래스입니다. 서브 클래스가 구현해야하는 유일한 메소드는 write (char [], int, int), flush () 및 close ()입니다. 그러나 대부분의 서브 클래스는 효율성, 추가 기능 또는 둘 다를 제공하기 위해 여기에 정의 된 일부 메소드를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="bbad90f4fbe3028d70e867982fa19c705f3f70d8" translate="yes" xml:space="preserve">
          <source>Abstract class representing a collection of Permission objects.</source>
          <target state="translated">Permission 객체의 컬렉션을 나타내는 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="8de43baf30148d14ef6d982218eba04a0f736fac" translate="yes" xml:space="preserve">
          <source>Abstract class that provides for extension of the X509KeyManager interface.</source>
          <target state="translated">X509KeyManager 인터페이스의 확장을 제공하는 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="ef9818a8141c5c7474b416d3067379a41ea1fa46" translate="yes" xml:space="preserve">
          <source>Abstract datagram and multicast socket implementation base class.</source>
          <target state="translated">추상 데이터 그램 및 멀티 캐스트 소켓 구현 기본 클래스.</target>
        </trans-unit>
        <trans-unit id="e2326f7c491400b3ed9fc99f4aeacb18465f372d" translate="yes" xml:space="preserve">
          <source>AbstractAnnotationValueVisitor6</source>
          <target state="translated">AbstractAnnotationValueVisitor6</target>
        </trans-unit>
        <trans-unit id="08937be0df9d7dfe5bc78800980e7821479abc29" translate="yes" xml:space="preserve">
          <source>AbstractAnnotationValueVisitor6.visit()</source>
          <target state="translated">AbstractAnnotationValueVisitor6.visit()</target>
        </trans-unit>
        <trans-unit id="319534f59f140806ceb1d1d805b7c33a1f5c5857" translate="yes" xml:space="preserve">
          <source>AbstractAnnotationValueVisitor6.visitUnknown()</source>
          <target state="translated">AbstractAnnotationValueVisitor6.visitUnknown()</target>
        </trans-unit>
        <trans-unit id="44cda9c2fe6cb5afb08ed48c47c34d8278e4b4c0" translate="yes" xml:space="preserve">
          <source>AbstractAnnotationValueVisitor7</source>
          <target state="translated">AbstractAnnotationValueVisitor7</target>
        </trans-unit>
        <trans-unit id="45c34f5d09c1b2528df3a5dc2383798b1f5800c8" translate="yes" xml:space="preserve">
          <source>AbstractAnnotationValueVisitor8</source>
          <target state="translated">AbstractAnnotationValueVisitor8</target>
        </trans-unit>
        <trans-unit id="d47eed55b8f52c1421f3d4348017846498bec342" translate="yes" xml:space="preserve">
          <source>AbstractChronology</source>
          <target state="translated">AbstractChronology</target>
        </trans-unit>
        <trans-unit id="01d422c2368103a33f2bc980626692ca8835baaf" translate="yes" xml:space="preserve">
          <source>AbstractChronology.compareTo()</source>
          <target state="translated">AbstractChronology.compareTo()</target>
        </trans-unit>
        <trans-unit id="27abdfc0d3d045b0b52e0b351d67989d11225a88" translate="yes" xml:space="preserve">
          <source>AbstractChronology.equals()</source>
          <target state="translated">AbstractChronology.equals()</target>
        </trans-unit>
        <trans-unit id="a458e428692edfb0ac737f0d49161e193aaaee4d" translate="yes" xml:space="preserve">
          <source>AbstractChronology.hashCode()</source>
          <target state="translated">AbstractChronology.hashCode()</target>
        </trans-unit>
        <trans-unit id="530b17bba56745d1ee88a45688dcc3f507cb8977" translate="yes" xml:space="preserve">
          <source>AbstractChronology.resolveDate()</source>
          <target state="translated">AbstractChronology.resolveDate()</target>
        </trans-unit>
        <trans-unit id="c250730ee53ba9b753e791b9ce33f1fea3d3793e" translate="yes" xml:space="preserve">
          <source>AbstractChronology.toString()</source>
          <target state="translated">AbstractChronology.toString()</target>
        </trans-unit>
        <trans-unit id="62deadea5aa50c02c734a956de1e99c71e45bf05" translate="yes" xml:space="preserve">
          <source>AbstractCollection</source>
          <target state="translated">AbstractCollection</target>
        </trans-unit>
        <trans-unit id="d820e338865aee0a98c35532d15df42b18f32044" translate="yes" xml:space="preserve">
          <source>AbstractCollection.add()</source>
          <target state="translated">AbstractCollection.add()</target>
        </trans-unit>
        <trans-unit id="5a20bbc63421709887f61cef08be4906c632e24b" translate="yes" xml:space="preserve">
          <source>AbstractCollection.addAll()</source>
          <target state="translated">AbstractCollection.addAll()</target>
        </trans-unit>
        <trans-unit id="2e6fb968e19fb6492294cf92dced5bae9d9988b7" translate="yes" xml:space="preserve">
          <source>AbstractCollection.clear()</source>
          <target state="translated">AbstractCollection.clear()</target>
        </trans-unit>
        <trans-unit id="d4e2f4802b53c17b7cb6cace5837687c93dd0782" translate="yes" xml:space="preserve">
          <source>AbstractCollection.contains()</source>
          <target state="translated">AbstractCollection.contains()</target>
        </trans-unit>
        <trans-unit id="c99542a9ae4eef9a983ca2c6cc84b493b48986d5" translate="yes" xml:space="preserve">
          <source>AbstractCollection.containsAll()</source>
          <target state="translated">AbstractCollection.containsAll()</target>
        </trans-unit>
        <trans-unit id="fe0508acdec587c9fd09baac5f84f525849b54b7" translate="yes" xml:space="preserve">
          <source>AbstractCollection.isEmpty()</source>
          <target state="translated">AbstractCollection.isEmpty()</target>
        </trans-unit>
        <trans-unit id="17e41a7d6a2e1a2cfc0197deb8bf365315e97e11" translate="yes" xml:space="preserve">
          <source>AbstractCollection.iterator()</source>
          <target state="translated">AbstractCollection.iterator()</target>
        </trans-unit>
        <trans-unit id="b9494fa66a0e4f0e858499b280a75069a449dd84" translate="yes" xml:space="preserve">
          <source>AbstractCollection.remove()</source>
          <target state="translated">AbstractCollection.remove()</target>
        </trans-unit>
        <trans-unit id="26c529ec8fb256ca9d1eb5ef68fec26966887b2d" translate="yes" xml:space="preserve">
          <source>AbstractCollection.removeAll()</source>
          <target state="translated">AbstractCollection.removeAll()</target>
        </trans-unit>
        <trans-unit id="2e49243e11c6980058f82e10236bc1db79475542" translate="yes" xml:space="preserve">
          <source>AbstractCollection.retainAll()</source>
          <target state="translated">AbstractCollection.retainAll()</target>
        </trans-unit>
        <trans-unit id="ee4a676ca6f800b7f25c6505851a1ea34aee3fb2" translate="yes" xml:space="preserve">
          <source>AbstractCollection.size()</source>
          <target state="translated">AbstractCollection.size()</target>
        </trans-unit>
        <trans-unit id="3eeb3cb57ae85bb0b2d02ee57aff506dc8a43b98" translate="yes" xml:space="preserve">
          <source>AbstractCollection.toArray()</source>
          <target state="translated">AbstractCollection.toArray()</target>
        </trans-unit>
        <trans-unit id="975be995b97b4660a224a3cfeeb95f5ecc4c3aa1" translate="yes" xml:space="preserve">
          <source>AbstractCollection.toString()</source>
          <target state="translated">AbstractCollection.toString()</target>
        </trans-unit>
        <trans-unit id="db72873f181ac5d1902a8988868002d66f13f130" translate="yes" xml:space="preserve">
          <source>AbstractDoubleSpliterator</source>
          <target state="translated">AbstractDoubleSpliterator</target>
        </trans-unit>
        <trans-unit id="1af1430e07faf6bafbaf715e016c66a53ea8a5ad" translate="yes" xml:space="preserve">
          <source>AbstractElementVisitor6</source>
          <target state="translated">AbstractElementVisitor6</target>
        </trans-unit>
        <trans-unit id="75f58417f1413cc9dbba05a901a7d6df4d01aeeb" translate="yes" xml:space="preserve">
          <source>AbstractElementVisitor6.visit()</source>
          <target state="translated">AbstractElementVisitor6.visit()</target>
        </trans-unit>
        <trans-unit id="598ce80a36fd07e65f237ae0b0f44027999b5af8" translate="yes" xml:space="preserve">
          <source>AbstractElementVisitor6.visitUnknown()</source>
          <target state="translated">AbstractElementVisitor6.visitUnknown()</target>
        </trans-unit>
        <trans-unit id="4397bd66970cb822d7cfc448d45b5ab95f37d1a4" translate="yes" xml:space="preserve">
          <source>AbstractElementVisitor7</source>
          <target state="translated">AbstractElementVisitor7</target>
        </trans-unit>
        <trans-unit id="99993defdab9ef844947e88b57cc340c8abe0dc0" translate="yes" xml:space="preserve">
          <source>AbstractElementVisitor8</source>
          <target state="translated">AbstractElementVisitor8</target>
        </trans-unit>
        <trans-unit id="6a3cfc179104cd33f7b11cd0a55283537408e529" translate="yes" xml:space="preserve">
          <source>AbstractExecutorService</source>
          <target state="translated">AbstractExecutorService</target>
        </trans-unit>
        <trans-unit id="49b6355f70fcb580045c580b9b880e6f1839b443" translate="yes" xml:space="preserve">
          <source>AbstractExecutorService.invokeAll()</source>
          <target state="translated">AbstractExecutorService.invokeAll()</target>
        </trans-unit>
        <trans-unit id="92172ae501fca41777f12b537c155b7de7d2717a" translate="yes" xml:space="preserve">
          <source>AbstractExecutorService.invokeAny()</source>
          <target state="translated">AbstractExecutorService.invokeAny()</target>
        </trans-unit>
        <trans-unit id="3e225d74ab27dad0bfaf11c86f343b2202509aa0" translate="yes" xml:space="preserve">
          <source>AbstractExecutorService.newTaskFor()</source>
          <target state="translated">AbstractExecutorService.newTaskFor()</target>
        </trans-unit>
        <trans-unit id="29f7314ccab6f279d5fd1488c7652428dcd0ebfa" translate="yes" xml:space="preserve">
          <source>AbstractExecutorService.submit()</source>
          <target state="translated">AbstractExecutorService.submit()</target>
        </trans-unit>
        <trans-unit id="931085ce9d9a6f3267035eb2742c737d0afb2ad7" translate="yes" xml:space="preserve">
          <source>AbstractIntSpliterator</source>
          <target state="translated">AbstractIntSpliterator</target>
        </trans-unit>
        <trans-unit id="baa028c903570184edf2283df0ab511dc9e824ae" translate="yes" xml:space="preserve">
          <source>AbstractInterruptibleChannel</source>
          <target state="translated">AbstractInterruptibleChannel</target>
        </trans-unit>
        <trans-unit id="e013d68b69632997b0cfbfc1575ccd0e75679b20" translate="yes" xml:space="preserve">
          <source>AbstractInterruptibleChannel.begin()</source>
          <target state="translated">AbstractInterruptibleChannel.begin()</target>
        </trans-unit>
        <trans-unit id="6217b4ed45aad4c8ded6b11d7f787df30428441d" translate="yes" xml:space="preserve">
          <source>AbstractInterruptibleChannel.close()</source>
          <target state="translated">AbstractInterruptibleChannel.close()</target>
        </trans-unit>
        <trans-unit id="6160eecb5e9b7ad5f2c0f75891480c538787c549" translate="yes" xml:space="preserve">
          <source>AbstractInterruptibleChannel.end()</source>
          <target state="translated">AbstractInterruptibleChannel.end()</target>
        </trans-unit>
        <trans-unit id="0c2af7b0c1f5cfe7ace58f98ffecd1372d8396b7" translate="yes" xml:space="preserve">
          <source>AbstractInterruptibleChannel.implCloseChannel()</source>
          <target state="translated">AbstractInterruptibleChannel.implCloseChannel()</target>
        </trans-unit>
        <trans-unit id="56bb56dc288004eb1652cdc0bacce3d3a0bab707" translate="yes" xml:space="preserve">
          <source>AbstractInterruptibleChannel.isOpen()</source>
          <target state="translated">AbstractInterruptibleChannel.isOpen()</target>
        </trans-unit>
        <trans-unit id="80b25eb6b4fc66c38a02c0db0db4701efc036bfe" translate="yes" xml:space="preserve">
          <source>AbstractList</source>
          <target state="translated">AbstractList</target>
        </trans-unit>
        <trans-unit id="a6c12269d4df42c1ef503e436f2daaae6308aead" translate="yes" xml:space="preserve">
          <source>AbstractList.add()</source>
          <target state="translated">AbstractList.add()</target>
        </trans-unit>
        <trans-unit id="0b50c0f3d9c3eebc36d55e70ae905ec10fb2516d" translate="yes" xml:space="preserve">
          <source>AbstractList.addAll()</source>
          <target state="translated">AbstractList.addAll()</target>
        </trans-unit>
        <trans-unit id="409ce5925a36b3ed439cb799150c6320078fc44c" translate="yes" xml:space="preserve">
          <source>AbstractList.clear()</source>
          <target state="translated">AbstractList.clear()</target>
        </trans-unit>
        <trans-unit id="e6496c140fcf633ae36d8e2e6f484efcb417a8cd" translate="yes" xml:space="preserve">
          <source>AbstractList.equals()</source>
          <target state="translated">AbstractList.equals()</target>
        </trans-unit>
        <trans-unit id="cce231efa7d7cc0cdfdfe2c5108489d66876b201" translate="yes" xml:space="preserve">
          <source>AbstractList.get()</source>
          <target state="translated">AbstractList.get()</target>
        </trans-unit>
        <trans-unit id="42b57beb996b3a24bd2be104d331784d69e9c58d" translate="yes" xml:space="preserve">
          <source>AbstractList.hashCode()</source>
          <target state="translated">AbstractList.hashCode()</target>
        </trans-unit>
        <trans-unit id="0d5b208feb4f489fd4403afe5da867fc03d06967" translate="yes" xml:space="preserve">
          <source>AbstractList.indexOf()</source>
          <target state="translated">AbstractList.indexOf()</target>
        </trans-unit>
        <trans-unit id="2e4073a408c4d1fc092544f0850629fb782c359f" translate="yes" xml:space="preserve">
          <source>AbstractList.iterator()</source>
          <target state="translated">AbstractList.iterator()</target>
        </trans-unit>
        <trans-unit id="bda44373adc31d10f20d8134f5521b3241e008a0" translate="yes" xml:space="preserve">
          <source>AbstractList.lastIndexOf()</source>
          <target state="translated">AbstractList.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="5f9c374064888a84eaabbcd368935a4c3866f88f" translate="yes" xml:space="preserve">
          <source>AbstractList.listIterator()</source>
          <target state="translated">AbstractList.listIterator()</target>
        </trans-unit>
        <trans-unit id="dfc0b21bc5a1e59f388ef99533069fe51df64a3c" translate="yes" xml:space="preserve">
          <source>AbstractList.remove()</source>
          <target state="translated">AbstractList.remove()</target>
        </trans-unit>
        <trans-unit id="9133811e4573678c32a820b600c3a182b2b96f97" translate="yes" xml:space="preserve">
          <source>AbstractList.removeRange()</source>
          <target state="translated">AbstractList.removeRange()</target>
        </trans-unit>
        <trans-unit id="971b3e6f45c772b932a69d15f12c542e332c377f" translate="yes" xml:space="preserve">
          <source>AbstractList.set()</source>
          <target state="translated">AbstractList.set()</target>
        </trans-unit>
        <trans-unit id="090b24ae15b1c5d7fc9c1394251ae36795821174" translate="yes" xml:space="preserve">
          <source>AbstractList.subList()</source>
          <target state="translated">AbstractList.subList()</target>
        </trans-unit>
        <trans-unit id="595bb680a9d8c3eb501353e60fc96e4df64a4cc6" translate="yes" xml:space="preserve">
          <source>AbstractLongSpliterator</source>
          <target state="translated">AbstractLongSpliterator</target>
        </trans-unit>
        <trans-unit id="e5b1267bb3362c3d2609d08b1cc8a480c087ece8" translate="yes" xml:space="preserve">
          <source>AbstractMap</source>
          <target state="translated">AbstractMap</target>
        </trans-unit>
        <trans-unit id="218590503902f98d7cb731fbfdbe54efe5e76fca" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleEntry</source>
          <target state="translated">AbstractMap.SimpleEntry</target>
        </trans-unit>
        <trans-unit id="2beb3bac7df944d384c92c07740a539d4e184b1c" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleEntry.equals()</source>
          <target state="translated">AbstractMap.SimpleEntry.equals()</target>
        </trans-unit>
        <trans-unit id="8c4bf4dbadd984156430c42a46f248984fa343b3" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleEntry.getKey()</source>
          <target state="translated">AbstractMap.SimpleEntry.getKey()</target>
        </trans-unit>
        <trans-unit id="91c3f0d69d2babac35cdcdae3c4052013201826f" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleEntry.getValue()</source>
          <target state="translated">AbstractMap.SimpleEntry.getValue()</target>
        </trans-unit>
        <trans-unit id="cefec1a4481f2c04f2f7e04b0cc8f0308bf11167" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleEntry.hashCode()</source>
          <target state="translated">AbstractMap.SimpleEntry.hashCode()</target>
        </trans-unit>
        <trans-unit id="a4071bdb9dc9dbcfe04feb0d00b4fc3989621ef1" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleEntry.setValue()</source>
          <target state="translated">AbstractMap.SimpleEntry.setValue()</target>
        </trans-unit>
        <trans-unit id="1215266c519be711d5ad4c63472e8f09f52cbc95" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleEntry.toString()</source>
          <target state="translated">AbstractMap.SimpleEntry.toString()</target>
        </trans-unit>
        <trans-unit id="11c24200aa0f879653789695cb2909993b5d3a0a" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleImmutableEntry</source>
          <target state="translated">AbstractMap.SimpleImmutableEntry</target>
        </trans-unit>
        <trans-unit id="59c31ae082f06e59f9011ad9afefe86deba04bf3" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleImmutableEntry.equals()</source>
          <target state="translated">AbstractMap.SimpleImmutableEntry.equals()</target>
        </trans-unit>
        <trans-unit id="b7cd93757b0c3dc964897953b05b4a79946de8ba" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleImmutableEntry.getKey()</source>
          <target state="translated">AbstractMap.SimpleImmutableEntry.getKey()</target>
        </trans-unit>
        <trans-unit id="3824c7eec2fe5423b025064d910331fc8fbe89a5" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleImmutableEntry.getValue()</source>
          <target state="translated">AbstractMap.SimpleImmutableEntry.getValue()</target>
        </trans-unit>
        <trans-unit id="9d9762eef87f5bcb1f7d914e8e85938ee3f2cf45" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleImmutableEntry.hashCode()</source>
          <target state="translated">AbstractMap.SimpleImmutableEntry.hashCode()</target>
        </trans-unit>
        <trans-unit id="4c848b0de48cad340810719767975d57456507b6" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleImmutableEntry.setValue()</source>
          <target state="translated">AbstractMap.SimpleImmutableEntry.setValue()</target>
        </trans-unit>
        <trans-unit id="4af58129a72915c715df202b7d922657e16f097a" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleImmutableEntry.toString()</source>
          <target state="translated">AbstractMap.SimpleImmutableEntry.toString()</target>
        </trans-unit>
        <trans-unit id="29fe743fc7c8f961c6dc75593ecaef74ad4a01e1" translate="yes" xml:space="preserve">
          <source>AbstractMap.clear()</source>
          <target state="translated">AbstractMap.clear()</target>
        </trans-unit>
        <trans-unit id="6278a2abd66c97ef3742e42cf79a378d0e6fce9f" translate="yes" xml:space="preserve">
          <source>AbstractMap.clone()</source>
          <target state="translated">AbstractMap.clone()</target>
        </trans-unit>
        <trans-unit id="941fa94974d461e0f37b29bc60548b675b3332dd" translate="yes" xml:space="preserve">
          <source>AbstractMap.containsKey()</source>
          <target state="translated">AbstractMap.containsKey()</target>
        </trans-unit>
        <trans-unit id="657d78583b45a1b4e74d0f4b483217e8baaf2cc1" translate="yes" xml:space="preserve">
          <source>AbstractMap.containsValue()</source>
          <target state="translated">AbstractMap.containsValue()</target>
        </trans-unit>
        <trans-unit id="7c941abe83c9ed230a0ce03620d762f05e99026c" translate="yes" xml:space="preserve">
          <source>AbstractMap.entrySet()</source>
          <target state="translated">AbstractMap.entrySet()</target>
        </trans-unit>
        <trans-unit id="da1f0f43cba2c70499f8bec7058089db975c505d" translate="yes" xml:space="preserve">
          <source>AbstractMap.equals()</source>
          <target state="translated">AbstractMap.equals()</target>
        </trans-unit>
        <trans-unit id="32ac68c0a4778c7bb2e6d384cf2d4ea010d61960" translate="yes" xml:space="preserve">
          <source>AbstractMap.get()</source>
          <target state="translated">AbstractMap.get()</target>
        </trans-unit>
        <trans-unit id="2e4ea37b6941e2ec433a6f6d52b7e44c8ea0a15c" translate="yes" xml:space="preserve">
          <source>AbstractMap.hashCode()</source>
          <target state="translated">AbstractMap.hashCode()</target>
        </trans-unit>
        <trans-unit id="196829dc6558aecbb91cb3e4176e223e3ed97d65" translate="yes" xml:space="preserve">
          <source>AbstractMap.isEmpty()</source>
          <target state="translated">AbstractMap.isEmpty()</target>
        </trans-unit>
        <trans-unit id="1389ef6a4deaed46912cab537c51d7d518593934" translate="yes" xml:space="preserve">
          <source>AbstractMap.keySet()</source>
          <target state="translated">AbstractMap.keySet()</target>
        </trans-unit>
        <trans-unit id="5c54d1693d5691034203064c6ce1d57133e6c947" translate="yes" xml:space="preserve">
          <source>AbstractMap.put()</source>
          <target state="translated">AbstractMap.put()</target>
        </trans-unit>
        <trans-unit id="58e6ed28ce261e15baf766ad401967ba324723c3" translate="yes" xml:space="preserve">
          <source>AbstractMap.putAll()</source>
          <target state="translated">AbstractMap.putAll()</target>
        </trans-unit>
        <trans-unit id="c70f12e5649de7fb3e621416db0bb441b620008b" translate="yes" xml:space="preserve">
          <source>AbstractMap.remove()</source>
          <target state="translated">AbstractMap.remove()</target>
        </trans-unit>
        <trans-unit id="267b67cd54e253783657216153f8bfee8d0f0c4c" translate="yes" xml:space="preserve">
          <source>AbstractMap.size()</source>
          <target state="translated">AbstractMap.size()</target>
        </trans-unit>
        <trans-unit id="6a6a79dedeb0affb187f5a0b56a2e4a8be5eb0d8" translate="yes" xml:space="preserve">
          <source>AbstractMap.toString()</source>
          <target state="translated">AbstractMap.toString()</target>
        </trans-unit>
        <trans-unit id="eb7b7408884cec0bca46b79b428b1f4a9355dc27" translate="yes" xml:space="preserve">
          <source>AbstractMap.values()</source>
          <target state="translated">AbstractMap.values()</target>
        </trans-unit>
        <trans-unit id="14a62a5e3d450b7fc1491a22c600974eef9c0339" translate="yes" xml:space="preserve">
          <source>AbstractMethodError</source>
          <target state="translated">AbstractMethodError</target>
        </trans-unit>
        <trans-unit id="1bdee4bb14a44fa3a24c8fec5d6e801c12351d3a" translate="yes" xml:space="preserve">
          <source>AbstractOwnableSynchronizer</source>
          <target state="translated">AbstractOwnableSynchronizer</target>
        </trans-unit>
        <trans-unit id="3c3a88dbb9bdb609e80a496391e0b219694ab0e9" translate="yes" xml:space="preserve">
          <source>AbstractOwnableSynchronizer.getExclusiveOwnerThread()</source>
          <target state="translated">AbstractOwnableSynchronizer.getExclusiveOwnerThread()</target>
        </trans-unit>
        <trans-unit id="d75bed044520cca60eef0e3366a00a76c6504762" translate="yes" xml:space="preserve">
          <source>AbstractOwnableSynchronizer.setExclusiveOwnerThread()</source>
          <target state="translated">AbstractOwnableSynchronizer.setExclusiveOwnerThread()</target>
        </trans-unit>
        <trans-unit id="d8166055f7afd1a55d9ad187b823246f65086bc4" translate="yes" xml:space="preserve">
          <source>AbstractPreferences</source>
          <target state="translated">AbstractPreferences</target>
        </trans-unit>
        <trans-unit id="5dbc10c6af403836c06e4357e9aa25a7b2b2d79d" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.absolutePath()</source>
          <target state="translated">AbstractPreferences.absolutePath()</target>
        </trans-unit>
        <trans-unit id="e7ff7bf474c21006877591ff06ea595bf068e158" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.addNodeChangeListener()</source>
          <target state="translated">AbstractPreferences.addNodeChangeListener()</target>
        </trans-unit>
        <trans-unit id="24a3ba4ea33d467911502c73ce7eaf3aecdc713c" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.addPreferenceChangeListener()</source>
          <target state="translated">AbstractPreferences.addPreferenceChangeListener()</target>
        </trans-unit>
        <trans-unit id="31cd691757f090d85980884ce4cce8ef33e6e365" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.cachedChildren()</source>
          <target state="translated">AbstractPreferences.cachedChildren()</target>
        </trans-unit>
        <trans-unit id="576f69ddb0648a5ce3ceec6934bcecab7a98a79c" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.childSpi()</source>
          <target state="translated">AbstractPreferences.childSpi()</target>
        </trans-unit>
        <trans-unit id="e2562384c78cc84f53486e0ebcbb2d3102053b82" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.childrenNames()</source>
          <target state="translated">AbstractPreferences.childrenNames()</target>
        </trans-unit>
        <trans-unit id="9caf1d010c8d5d06a6cf9cb75ebc62ec71f4c792" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.childrenNamesSpi()</source>
          <target state="translated">AbstractPreferences.childrenNamesSpi()</target>
        </trans-unit>
        <trans-unit id="38fea32341d906e8262dc7e27e59fd7edfcf00ee" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.clear()</source>
          <target state="translated">AbstractPreferences.clear()</target>
        </trans-unit>
        <trans-unit id="8b5bcd12cc7a0ea578af60db2ad9e9bbf623c0d6" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.exportNode()</source>
          <target state="translated">AbstractPreferences.exportNode()</target>
        </trans-unit>
        <trans-unit id="9fe13afbfd2f0b01be2a1a0f295b8be5c24f039e" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.exportSubtree()</source>
          <target state="translated">AbstractPreferences.exportSubtree()</target>
        </trans-unit>
        <trans-unit id="d1a85d855f351f9c13990bd4c962622f79145c80" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.flush()</source>
          <target state="translated">AbstractPreferences.flush()</target>
        </trans-unit>
        <trans-unit id="6ae62800ba7cdf97885a832a7e9da0401714cfdd" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.flushSpi()</source>
          <target state="translated">AbstractPreferences.flushSpi()</target>
        </trans-unit>
        <trans-unit id="a4a852efc57c45f1c46f0eb7064db00b4adfba23" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.get()</source>
          <target state="translated">AbstractPreferences.get()</target>
        </trans-unit>
        <trans-unit id="fe2626c3b6abc22ce2f9d3b60b133418cb73195a" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.getBoolean()</source>
          <target state="translated">AbstractPreferences.getBoolean()</target>
        </trans-unit>
        <trans-unit id="246e6c9dd167f959b68a8a3bce4e4fb8fed3891a" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.getByteArray()</source>
          <target state="translated">AbstractPreferences.getByteArray()</target>
        </trans-unit>
        <trans-unit id="32722ea3d12738877c96f684e7105bd0ff2b290f" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.getChild()</source>
          <target state="translated">AbstractPreferences.getChild()</target>
        </trans-unit>
        <trans-unit id="98adefbce72072e04f10c28789a2e3a010bb8c99" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.getDouble()</source>
          <target state="translated">AbstractPreferences.getDouble()</target>
        </trans-unit>
        <trans-unit id="071b02d416fa44f507dd2a6e926494d5cc33aa8d" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.getFloat()</source>
          <target state="translated">AbstractPreferences.getFloat()</target>
        </trans-unit>
        <trans-unit id="dfb355e4fc8e3797156b98d4d4b72857924d7577" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.getInt()</source>
          <target state="translated">AbstractPreferences.getInt()</target>
        </trans-unit>
        <trans-unit id="8bf051ce2a3a388a0238eabe6644d65e787bc859" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.getLong()</source>
          <target state="translated">AbstractPreferences.getLong()</target>
        </trans-unit>
        <trans-unit id="a87025499a9c8ad5ab51a1bcadf25d74389ec0db" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.getSpi()</source>
          <target state="translated">AbstractPreferences.getSpi()</target>
        </trans-unit>
        <trans-unit id="f02eed7a6abfa2b5b19214edb73b3b2fa7c5c632" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.isRemoved()</source>
          <target state="translated">AbstractPreferences.isRemoved()</target>
        </trans-unit>
        <trans-unit id="b0ab8c88320681e30ca1b5060cc888030c5c66eb" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.isUserNode()</source>
          <target state="translated">AbstractPreferences.isUserNode()</target>
        </trans-unit>
        <trans-unit id="dda1cef54196185a375189e36bc9a2fc30b9a04c" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.keys()</source>
          <target state="translated">AbstractPreferences.keys()</target>
        </trans-unit>
        <trans-unit id="9254f47eebf9302ec3a9b0b07b8344d20aec8467" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.keysSpi()</source>
          <target state="translated">AbstractPreferences.keysSpi()</target>
        </trans-unit>
        <trans-unit id="1a28642d919d9984118b7026829ef151ecd99062" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.name()</source>
          <target state="translated">AbstractPreferences.name()</target>
        </trans-unit>
        <trans-unit id="3ad3048e859f133585035aa563192aea380a7e45" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.node()</source>
          <target state="translated">AbstractPreferences.node()</target>
        </trans-unit>
        <trans-unit id="5cdb9c6b4a48713e710e3a9561fc04d9b969d1b1" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.nodeExists()</source>
          <target state="translated">AbstractPreferences.nodeExists()</target>
        </trans-unit>
        <trans-unit id="f5f04c80d4d279252ff55784a2833eaaac0d97ad" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.parent()</source>
          <target state="translated">AbstractPreferences.parent()</target>
        </trans-unit>
        <trans-unit id="eb5fb3c02e920f59bf603ff8165cbc81dc1e7ad8" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.put()</source>
          <target state="translated">AbstractPreferences.put()</target>
        </trans-unit>
        <trans-unit id="70bda80cd944ff4cd0683521145271c2fdd039fe" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.putBoolean()</source>
          <target state="translated">AbstractPreferences.putBoolean()</target>
        </trans-unit>
        <trans-unit id="8aefeb50fefb75da14b99c15978354611062b4ab" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.putByteArray()</source>
          <target state="translated">AbstractPreferences.putByteArray()</target>
        </trans-unit>
        <trans-unit id="3f0ac4508cd40a684d883a8f2e2f0adcbe5791f1" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.putDouble()</source>
          <target state="translated">AbstractPreferences.putDouble()</target>
        </trans-unit>
        <trans-unit id="8c6e1119caaab4e3e44f5be1db9a058679a34e44" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.putFloat()</source>
          <target state="translated">AbstractPreferences.putFloat()</target>
        </trans-unit>
        <trans-unit id="6f1112de74ca998f406dd0877d9fb9d1d7a09ae5" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.putInt()</source>
          <target state="translated">AbstractPreferences.putInt()</target>
        </trans-unit>
        <trans-unit id="9b3e6e36649b5ae67a5054174a59f7ed13b34422" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.putLong()</source>
          <target state="translated">AbstractPreferences.putLong()</target>
        </trans-unit>
        <trans-unit id="565bbff95a10105be7f833764b2f9bd65c201c6d" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.putSpi()</source>
          <target state="translated">AbstractPreferences.putSpi()</target>
        </trans-unit>
        <trans-unit id="fedd6dde9cfb8c70cf1a2504037340bbc4474165" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.remove()</source>
          <target state="translated">AbstractPreferences.remove()</target>
        </trans-unit>
        <trans-unit id="dea9c5dca3865f7210acdeee58edae4f2bc6a0af" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.removeNode()</source>
          <target state="translated">AbstractPreferences.removeNode()</target>
        </trans-unit>
        <trans-unit id="db273327b14bb7bdda0dea4cee7658ef5df08a75" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.removeNodeChangeListener()</source>
          <target state="translated">AbstractPreferences.removeNodeChangeListener()</target>
        </trans-unit>
        <trans-unit id="dd82bb344e5371e3d8875a79608c1372feaab48b" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.removeNodeSpi()</source>
          <target state="translated">AbstractPreferences.removeNodeSpi()</target>
        </trans-unit>
        <trans-unit id="ff2749ee7342abca3d033236181c86898473fc05" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.removePreferenceChangeListener()</source>
          <target state="translated">AbstractPreferences.removePreferenceChangeListener()</target>
        </trans-unit>
        <trans-unit id="debef7d93552074030af7865f22c86f4c3c3eb89" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.removeSpi()</source>
          <target state="translated">AbstractPreferences.removeSpi()</target>
        </trans-unit>
        <trans-unit id="84f91d8016c28d9d1ba84b421593361013f8b96b" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.sync()</source>
          <target state="translated">AbstractPreferences.sync()</target>
        </trans-unit>
        <trans-unit id="3da0e517eebb4d0d73a4aa85ccb11784c1a6e3c9" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.syncSpi()</source>
          <target state="translated">AbstractPreferences.syncSpi()</target>
        </trans-unit>
        <trans-unit id="2d317cb3c8d782a453efb93e29fc194bb91d4e4a" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.toString()</source>
          <target state="translated">AbstractPreferences.toString()</target>
        </trans-unit>
        <trans-unit id="5ec07fdc7d4510ee0f99dcdc1114c0862f4f0aeb" translate="yes" xml:space="preserve">
          <source>AbstractProcessor</source>
          <target state="translated">AbstractProcessor</target>
        </trans-unit>
        <trans-unit id="409de9fa45abe176c71331b11eb58456ba5d03ab" translate="yes" xml:space="preserve">
          <source>AbstractProcessor.getCompletions()</source>
          <target state="translated">AbstractProcessor.getCompletions()</target>
        </trans-unit>
        <trans-unit id="04c1a7d21d8609952492cd486cc146c4a7d396d5" translate="yes" xml:space="preserve">
          <source>AbstractProcessor.getSupportedAnnotationTypes()</source>
          <target state="translated">AbstractProcessor.getSupportedAnnotationTypes()</target>
        </trans-unit>
        <trans-unit id="e5cb617b22032cfeb2fbce71aabf4fc6a04fc3cd" translate="yes" xml:space="preserve">
          <source>AbstractProcessor.getSupportedOptions()</source>
          <target state="translated">AbstractProcessor.getSupportedOptions()</target>
        </trans-unit>
        <trans-unit id="ebe3667ede509d7e0bccaeda9026beeb6d292b54" translate="yes" xml:space="preserve">
          <source>AbstractProcessor.getSupportedSourceVersion()</source>
          <target state="translated">AbstractProcessor.getSupportedSourceVersion()</target>
        </trans-unit>
        <trans-unit id="2f1c29fe7d63fdbd5c2539aa4def386b053fdf3f" translate="yes" xml:space="preserve">
          <source>AbstractProcessor.init()</source>
          <target state="translated">AbstractProcessor.init()</target>
        </trans-unit>
        <trans-unit id="da3878017323c2f6981d7f4cded9127512e5a1bf" translate="yes" xml:space="preserve">
          <source>AbstractProcessor.isInitialized()</source>
          <target state="translated">AbstractProcessor.isInitialized()</target>
        </trans-unit>
        <trans-unit id="1f71e76ca9900d79870151c47b4ab5ec6fe8f2e2" translate="yes" xml:space="preserve">
          <source>AbstractProcessor.process()</source>
          <target state="translated">AbstractProcessor.process()</target>
        </trans-unit>
        <trans-unit id="8115677f90bb136a3ae891e22cf8e36aa1a5a5d4" translate="yes" xml:space="preserve">
          <source>AbstractQueue</source>
          <target state="translated">AbstractQueue</target>
        </trans-unit>
        <trans-unit id="203f33b7067e3ae5b794852618968ddd6ea90475" translate="yes" xml:space="preserve">
          <source>AbstractQueue.add()</source>
          <target state="translated">AbstractQueue.add()</target>
        </trans-unit>
        <trans-unit id="dac32c6477239e85dc8af02638568333cdbbf436" translate="yes" xml:space="preserve">
          <source>AbstractQueue.addAll()</source>
          <target state="translated">AbstractQueue.addAll()</target>
        </trans-unit>
        <trans-unit id="c0b9868ba10715cdb5e98e5b5b8d00904defead4" translate="yes" xml:space="preserve">
          <source>AbstractQueue.clear()</source>
          <target state="translated">AbstractQueue.clear()</target>
        </trans-unit>
        <trans-unit id="761cc90544bfe576e663c33be1c8c820ee8e862f" translate="yes" xml:space="preserve">
          <source>AbstractQueue.element()</source>
          <target state="translated">AbstractQueue.element()</target>
        </trans-unit>
        <trans-unit id="6225b1d43687a73cf484f4ea5f3692488a34a2eb" translate="yes" xml:space="preserve">
          <source>AbstractQueue.remove()</source>
          <target state="translated">AbstractQueue.remove()</target>
        </trans-unit>
        <trans-unit id="04013b7955a0c340346cec75a5926152d696bae2" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer</source>
          <target state="translated">AbstractQueuedLongSynchronizer</target>
        </trans-unit>
        <trans-unit id="6e0a8d1d9d8fa180979b98ce3d65f4c0272ed09b" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject</target>
        </trans-unit>
        <trans-unit id="b69b88266226f29583ca95c3cc5a00fae4617825" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject.await()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject.await()</target>
        </trans-unit>
        <trans-unit id="6c70cd60e423c177b840231944f14992b967a315" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject.awaitNanos()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject.awaitNanos()</target>
        </trans-unit>
        <trans-unit id="f8999122886d58e4602271109afebf1aaa153ddf" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject.awaitUninterruptibly()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject.awaitUninterruptibly()</target>
        </trans-unit>
        <trans-unit id="524e2a7011d8aa86cd165ea6425735ef30df6602" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject.awaitUntil()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject.awaitUntil()</target>
        </trans-unit>
        <trans-unit id="e296c4238ec43e22d3e3563c6e8ed13a1737bd54" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject.getWaitQueueLength()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject.getWaitQueueLength()</target>
        </trans-unit>
        <trans-unit id="826b1f9f191de3dbb81e74fc28082dfd5c5ed228" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject.getWaitingThreads()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject.getWaitingThreads()</target>
        </trans-unit>
        <trans-unit id="82d789cf89bbf64efda9329a54415275b835e7e5" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject.hasWaiters()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject.hasWaiters()</target>
        </trans-unit>
        <trans-unit id="e643e92a43817dadd15c5cc9e36762ba64667742" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject.signal()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject.signal()</target>
        </trans-unit>
        <trans-unit id="dc3163b2bafe215bc4c6eb404d082b075e6f4279" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject.signalAll()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject.signalAll()</target>
        </trans-unit>
        <trans-unit id="2f50f3f8c73cae2598915bafc4ac11fda6050c9c" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.acquire()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.acquire()</target>
        </trans-unit>
        <trans-unit id="6f93cc89c8ec1629b6ac346a12888cca95b3e31b" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.acquireInterruptibly()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.acquireInterruptibly()</target>
        </trans-unit>
        <trans-unit id="4d71f71c4d38cc2089052ddea42d31cbd06ea79d" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.acquireShared()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.acquireShared()</target>
        </trans-unit>
        <trans-unit id="09948d21ffa6a152a431ba89bc8b5732797ad4cf" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.acquireSharedInterruptibly()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.acquireSharedInterruptibly()</target>
        </trans-unit>
        <trans-unit id="8f61bc426556daeccf0812973f8aa5f249de6c6e" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.compareAndSetState()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.compareAndSetState()</target>
        </trans-unit>
        <trans-unit id="6655324e1b902bf2ba0845dd5a84cc1e2be40a05" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.getExclusiveQueuedThreads()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.getExclusiveQueuedThreads()</target>
        </trans-unit>
        <trans-unit id="fe8d5872867aeb0c0f3a9448b3f2dcf61dbd1b24" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.getFirstQueuedThread()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.getFirstQueuedThread()</target>
        </trans-unit>
        <trans-unit id="d065c79b53b3df154b03906da3f48f38d6eddcd5" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.getQueueLength()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.getQueueLength()</target>
        </trans-unit>
        <trans-unit id="1ed21ddb79c61c5bba52f3cda5b6270ee6a7d373" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.getQueuedThreads()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.getQueuedThreads()</target>
        </trans-unit>
        <trans-unit id="c8f5478697f5f573b87a8011d757d532e95e0210" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.getSharedQueuedThreads()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.getSharedQueuedThreads()</target>
        </trans-unit>
        <trans-unit id="c643f4ce2d10b5ce35c24ebb2b87afc55350b6ba" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.getState()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.getState()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
