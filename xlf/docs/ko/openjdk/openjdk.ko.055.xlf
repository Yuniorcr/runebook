<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="eee801175b402f91471fe1074237905007489135" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the &lt;code&gt;String&lt;/code&gt; value to be printed</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 인쇄 되는 &lt;code&gt;String&lt;/code&gt; 값</target>
        </trans-unit>
        <trans-unit id="0c9d67fd0ae40df98ae9b37935bb388eb3d102f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the &lt;code&gt;TreeCellRenderer&lt;/code&gt; that is to render each cell</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 각 셀을 렌더링 할 &lt;code&gt;TreeCellRenderer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6461e41509267cb0a43c5d1a7a161a14a95b6db5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the &lt;code&gt;boolean&lt;/code&gt; value to be printed</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 인쇄 되는 &lt;code&gt;boolean&lt;/code&gt; 값</target>
        </trans-unit>
        <trans-unit id="07f9657553a22c78fdcd6fa1318846969a73ace7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the &lt;code&gt;char&lt;/code&gt; value to be printed</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 인쇄 되는 &lt;code&gt;char&lt;/code&gt; 치</target>
        </trans-unit>
        <trans-unit id="94573fabda6b4df46d76245131e49606db0cc540" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the &lt;code&gt;double&lt;/code&gt; value to be printed</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 인쇄 되는 &lt;code&gt;double&lt;/code&gt; 값</target>
        </trans-unit>
        <trans-unit id="896392f616cd017b6c3cbbe02a27d1594281559e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the &lt;code&gt;float&lt;/code&gt; value to be printed</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 인쇄 되는 &lt;code&gt;float&lt;/code&gt; 값</target>
        </trans-unit>
        <trans-unit id="95d8443feb7cf60a5b29a88ce68c94862f9c401c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the &lt;code&gt;int&lt;/code&gt; value to be printed</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 인쇄 되는 &lt;code&gt;int&lt;/code&gt; 값</target>
        </trans-unit>
        <trans-unit id="b552b88c89d6149bb72d31b038df038b69fdd39a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the &lt;code&gt;java.io.InputStream&lt;/code&gt; object that contains the UNICODE parameter value</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - UNICODE 매개 변수 값을 포함 하는 &lt;code&gt;java.io.InputStream&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="79f85a44dd2ca8358f2c6b8f0b781266e5d1427e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the &lt;code&gt;java.net.URL&lt;/code&gt; object to be set</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - &lt;code&gt;java.net.URL&lt;/code&gt; 객체가 설정되는</target>
        </trans-unit>
        <trans-unit id="cf2f8f2deec09fabcaff00d109c60067a2b30839" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the &lt;code&gt;long&lt;/code&gt; value to be printed</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 인쇄 되는 &lt;code&gt;long&lt;/code&gt; 값</target>
        </trans-unit>
        <trans-unit id="c7c2fbf3608bffc893799e8650c6c47e99c80f4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the &lt;code&gt;x&lt;/code&gt; coordinate (pixels over from left)</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - &lt;code&gt;x&lt;/code&gt; 좌표 (왼쪽에서 픽셀 이상)</target>
        </trans-unit>
        <trans-unit id="97e91e1c2ce2ddce04aefed975cfadf1cc0ff908" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the ChangeListener to add</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 추가 할 ChangeListener</target>
        </trans-unit>
        <trans-unit id="2d83d0d3055b79fda710bf8e6b8b708c197efa11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the ChangeListener to remove</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 제거 할 ChangeListener</target>
        </trans-unit>
        <trans-unit id="09b9752e82a0357d38831ebc996af2c8df316ce6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the Integer value</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 정수 값</target>
        </trans-unit>
        <trans-unit id="a8574b74c4cb9e79d12bab03a0ad94a913552c24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the Java input stream that contains the ASCII parameter value</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -ASCII 매개 변수 값을 포함하는 Java 입력 스트림</target>
        </trans-unit>
        <trans-unit id="734ac06eda8ba0ae082277532088179d01e8a143" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the ListSelectionListener</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -ListSelectionListener</target>
        </trans-unit>
        <trans-unit id="f0be360597c2d190a8be144d873c20e46706b437" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -X 좌표</target>
        </trans-unit>
        <trans-unit id="a45bf198675542069ff404217545c77627655b41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate &amp;gt;= 0</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -X 좌표&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="81bd7bc95da52d0a380ee550aed2e11de6fad066" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate &amp;gt;=0</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -X 좌표&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="cb6cd8fdd59c365a66a93b4a92301fb48da620e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate &lt;code&gt;&amp;gt;= 0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -X 좌표 &lt;code&gt;&amp;gt;= 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="932e15b2277502d48ecb05eb959ecd7f9b46feed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the first rectangle's top-left point</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 첫 번째 직사각형의 왼쪽 상단 지점의 X 좌표</target>
        </trans-unit>
        <trans-unit id="5c53c1f2ff0690748821e7d94a528f4d1137ae34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the icon's top-left corner</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 아이콘 왼쪽 상단 모서리의 X 좌표</target>
        </trans-unit>
        <trans-unit id="70c2c037b877a3524ce5a7b9cd284d447e4543a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the location of this &lt;code&gt;GlyphVector&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 이 &lt;code&gt;GlyphVector&lt;/code&gt; 위치의 X 좌표</target>
        </trans-unit>
        <trans-unit id="4bf83e7d0f962283ec4f368ec10436b036987ec2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the new location</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 새 위치의 X 좌표</target>
        </trans-unit>
        <trans-unit id="02c55c387e825bba1d310160d3c25d77b3959562" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the newly constructed &lt;code&gt;Point2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 새로 구성된 &lt;code&gt;Point2D&lt;/code&gt; 의 X 좌표</target>
        </trans-unit>
        <trans-unit id="e7856e75ab7737ec044f9be1b65562ad504085d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the newly constructed &lt;code&gt;Point&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 새로 생성 된 &lt;code&gt;Point&lt;/code&gt; 의 X 좌표</target>
        </trans-unit>
        <trans-unit id="c1bd7cf4a72b1db8c54e018f33d0f4a1e71137b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the newly constructed &lt;code&gt;RoundRectangle2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 새로 구성된 &lt;code&gt;RoundRectangle2D&lt;/code&gt; 의 X 좌표</target>
        </trans-unit>
        <trans-unit id="ee44a58b07c5f437d05042c18bd3f0158f0e3657" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the origin of this &lt;code&gt;TextLayout&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 이 &lt;code&gt;TextLayout&lt;/code&gt; 원점의 X 좌표</target>
        </trans-unit>
        <trans-unit id="3a053bdd5b8af35fef9e2cae79fdfcdbe9dd4c19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the pixel</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 픽셀의 X 좌표</target>
        </trans-unit>
        <trans-unit id="90c62b43ea93753489b55cc99e9c1dd3ba4b9398" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the pixel from which to get the pixel in the default RGB color model and sRGB color space</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 기본 RGB 색상 모델 및 sRGB 색상 공간에서 픽셀을 가져올 픽셀의 X 좌표</target>
        </trans-unit>
        <trans-unit id="3c124c3fc074d29d5ffda0023c76660a405e5164" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the pixel location</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 픽셀 위치의 X 좌표</target>
        </trans-unit>
        <trans-unit id="4ec26e571b181fbdf0b4f753a5cb2e6a49567c72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the pixel to set</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 설정할 픽셀의 X 좌표</target>
        </trans-unit>
        <trans-unit id="2eb5a43ab411fe6cc176e0e0749e81f61db79ab5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the specified pixel</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 지정된 픽셀의 X 좌표</target>
        </trans-unit>
        <trans-unit id="eff61b494227413a476079136af2735f9a0032f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the specified point to be tested</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 테스트 할 지정된 지점의 X 좌표</target>
        </trans-unit>
        <trans-unit id="7410ff72e1b77966797dd971cac111a8f72f7ec1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the upper-left corner of the &lt;code&gt;WritableRaster&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - &lt;code&gt;WritableRaster&lt;/code&gt; 왼쪽 상단 모서리의 X 좌표</target>
        </trans-unit>
        <trans-unit id="ae3f3b7d7b43e158531d7d8fef80c1027cb35773" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the upper-left corner of the area of pixels to be set</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 설정할 픽셀 영역의 왼쪽 위 모서리의 X 좌표</target>
        </trans-unit>
        <trans-unit id="4fd11bc978b93d4d5f6ae021dd760aeefd2bfb0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the upper-left corner of the framing rectangle</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 프레임 사각형의 왼쪽 위 모서리의 X 좌표</target>
        </trans-unit>
        <trans-unit id="9d9d433b1be83304f14a1b7a50fd852f94301e32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the upper-left corner of the newly constructed &lt;code&gt;Rectangle2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 새로 생성 된 &lt;code&gt;Rectangle2D&lt;/code&gt; 왼쪽 위 모서리의 X 좌표</target>
        </trans-unit>
        <trans-unit id="ca9c76f272eb3a77278ac9a2c6161ea52fb938d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the upper-left corner of the region of pixels</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 픽셀 영역의 왼쪽 위 모서리의 X 좌표</target>
        </trans-unit>
        <trans-unit id="298621070b352cfbff4421198dc9c686192df7a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the upper-left corner of the specified rectangle</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 지정된 사각형의 왼쪽 위 모서리의 X 좌표</target>
        </trans-unit>
        <trans-unit id="d06aed038ada0c8577bdf9db04ee02df793f9f20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the upper-left corner of the specified rectangular area</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 지정된 직사각형 영역의 왼쪽 위 모서리의 X 좌표</target>
        </trans-unit>
        <trans-unit id="c128f621547843ad3a440f324639f51a39ab7e93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the upper-left corner of the specified rectangular region</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 지정된 직사각형 영역의 왼쪽 위 모서리의 X 좌표</target>
        </trans-unit>
        <trans-unit id="72888f2de374f37c6aab1bbc10bd5ef6f94d8ac7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the upper-left corner of the specified rectangular shape</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 지정된 직사각형 모양의 왼쪽 위 모서리의 X 좌표</target>
        </trans-unit>
        <trans-unit id="5648170e7ea73d538a92eabce45a786f797ce04e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of the upper-left corner of this &lt;code&gt;Rectangle2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 이 &lt;code&gt;Rectangle2D&lt;/code&gt; 좌상 구석의 X 좌표</target>
        </trans-unit>
        <trans-unit id="9fb4d9a753c987f0fe5bf6213714a2e84f065027" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate of this &lt;code&gt;GlyphVector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -는 X이 좌표 &lt;code&gt;GlyphVector&lt;/code&gt; 에 .</target>
        </trans-unit>
        <trans-unit id="6d29cddca7b102311aaba2b569ac4b8835c44c5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate to which to set the location of this &lt;code&gt;RoundRectangle2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 이 &lt;code&gt;RoundRectangle2D&lt;/code&gt; 의 위치를 ​​설정하는 X 좌표</target>
        </trans-unit>
        <trans-unit id="a6ecebde15e6d3cd7908e1671d9b0be1f4fc5761" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X coordinate to which to set the upper-left corner of the imageable area of this &lt;code&gt;Paper&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 이 &lt;code&gt;Paper&lt;/code&gt; 의 이미지화 가능 영역의 왼쪽 위 모서리를 설정할 X 좌표</target>
        </trans-unit>
        <trans-unit id="4bcbf7603442bc9e032917b4dae93407e75c1914" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X location of the pixel</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 픽셀의 X 위치</target>
        </trans-unit>
        <trans-unit id="2eba971117498cb1477d4870880b5d864cca4146" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X location of the specified pixel</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 지정된 픽셀의 X 위치</target>
        </trans-unit>
        <trans-unit id="65c7d7ded72c6ddd6c7f04943a79fdb027296d58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X origin &amp;gt;= 0</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -X 원점&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="0bcad19136f03f2fbf20521500074012bfcbafdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X origin &lt;code&gt;&amp;gt;= 0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -X 원점 &lt;code&gt;&amp;gt;= 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ccc67cf4ba9c9fd981da8dd7bc0f0be82e917b0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X position at which to render this &lt;code&gt;GlyphVector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -의 X 위치는이 렌더링하는 &lt;code&gt;GlyphVector&lt;/code&gt; 의를 .</target>
        </trans-unit>
        <trans-unit id="eac86a683639f52956fa573bc5be321872342d43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the X reference position</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -X 기준 위치</target>
        </trans-unit>
        <trans-unit id="42b859ebb71f9206417be9f19503f8e468735de2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the abscissa coordinate</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 가로 좌표</target>
        </trans-unit>
        <trans-unit id="b08a7945e651173f19402c2c6e72ebcda447abc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the absolute x coordinate on screen</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 화면의 절대 x 좌표</target>
        </trans-unit>
        <trans-unit id="6ce9ad9c5aee4d5dd37530582a6fd5df4896f1a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the affine x-coordinate.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 아핀 x 좌표</target>
        </trans-unit>
        <trans-unit id="a8515238e940033081ba6d4b389f6b55366cb7cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the array of &lt;code&gt;char&lt;/code&gt; values to be printed</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 인쇄 되는 &lt;code&gt;char&lt;/code&gt; 치의 배열</target>
        </trans-unit>
        <trans-unit id="73b5072bd684861b4d039cdc513ab38f8a269379" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the column value</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 열 값</target>
        </trans-unit>
        <trans-unit id="b09009df77f855f1b27cc072c42fafcfa666d927" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the component</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 구성 요소</target>
        </trans-unit>
        <trans-unit id="32e609e90f9a5050cac8a9a2b5fd422d85e7e458" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the component to be added</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 추가 할 구성 요소</target>
        </trans-unit>
        <trans-unit id="4f3b51c96a582d78d63c6ec3b5cbbb26e6ab8c41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the current position &amp;gt;= 0</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 현재 위치&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="8289440ba5941c93457ad3995cab306a7a5d1a4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the dividend</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 배당</target>
        </trans-unit>
        <trans-unit id="e9fd87195179765fe116b5a37cd9dfe5911a8b3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the exponent to raise</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 올리는 지수</target>
        </trans-unit>
        <trans-unit id="49fe1ab2e9f325bad98113043f902d5969c04d76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the first &lt;code&gt;boolean&lt;/code&gt; to compare</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 비교할 첫 번째 &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4fee6b270cfaba74b0bd1de80f76e5ea07147666" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the first &lt;code&gt;byte&lt;/code&gt; to compare</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 비교 하는 최초의 &lt;code&gt;byte&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0ce7b43474b02b1d40f326a736e7540b0fc4ee8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the first &lt;code&gt;char&lt;/code&gt; to compare</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 비교할 첫 번째 &lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06def402e051f517676730dfd9135e5e85db1afb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the first &lt;code&gt;int&lt;/code&gt; to compare</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 비교할 첫 번째 &lt;code&gt;int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b1d44851bfdb08aaee21909721cf967549e068f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the first &lt;code&gt;long&lt;/code&gt; to compare</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 비교할 첫 번째 &lt;code&gt;long&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3fbd004a9629852baf8f62dcca4ba3fe891a12c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the first &lt;code&gt;short&lt;/code&gt; to compare</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 비교할 첫 번째 &lt;code&gt;short&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf9879de5ef077fd54778857b567a02f40c2f645" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the first value</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 첫 번째 값</target>
        </trans-unit>
        <trans-unit id="3a5f8651887c1fc01fbbfb317a3b2eb7f8e02573" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the graphic location along the axis that the broken view would occupy &amp;gt;= 0. This may be useful for things like tab calculations.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 파단 뷰가&amp;gt; = 0을 차지할 축을 따라 그래픽 위치. 이것은 탭 계산과 같은 작업에 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9e58f9572b2a74211cd5b0ad104bb7281556492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the horizontal &lt;code&gt;x&lt;/code&gt; coordinate for the mouse location</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 마우스 위치 의 수평 &lt;code&gt;x&lt;/code&gt; 좌표</target>
        </trans-unit>
        <trans-unit id="43256255c51cadb9d21c2f270f6eeeea970cc5a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the horizontal component of the desired location</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 원하는 위치의 수평 구성 요소</target>
        </trans-unit>
        <trans-unit id="c190cba693ce211ccb999febebe7037a832d4927" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the horizontal coordinate for the cursor location</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 커서 위치의 수평 좌표</target>
        </trans-unit>
        <trans-unit id="139ff14e4ee630c3efe93be3983f40184e314db4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the horizontal location of interest</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 관심의 수평 위치</target>
        </trans-unit>
        <trans-unit id="471479dbda9f161a9d0c416005b149fb785e9cb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the horizontal x coordinate for the mouse location</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 마우스 위치의 수평 x 좌표</target>
        </trans-unit>
        <trans-unit id="c2b4b26ab682c4f166df99992f1f55c071092851" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the horizontal x value to add to the current x coordinate position</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 현재 x 좌표 위치에 추가 할 가로 x 값</target>
        </trans-unit>
        <trans-unit id="4f4d26794b8d15f3665e284b620590f6cab180e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the input stream that contains the binary value to be set</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 설정할 2 진 값을 포함하는 입력 스트림</target>
        </trans-unit>
        <trans-unit id="be1e08d1311b1d4b829623ceb3df5bd58438e2af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the java input stream which contains the binary parameter value</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -2 진 매개 변수 값을 포함하는 Java 입력 스트림</target>
        </trans-unit>
        <trans-unit id="42e3a55568019fbba60fc8f6061b2698f352ab70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the listener to remove</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 제거 할 리스너</target>
        </trans-unit>
        <trans-unit id="e7476c920045f568ec56bc32702adbced49e90ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the location r starts at.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -r이 시작되는 위치.</target>
        </trans-unit>
        <trans-unit id="eb3e4d2df46ddc459389f276f09e3ff1400819bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the new</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 새로운</target>
        </trans-unit>
        <trans-unit id="df2ea11c0e2d8a351efed15f0615476660c77eb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the new X coordinate for the upper-left corner of this &lt;code&gt;Rectangle&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 이 &lt;code&gt;Rectangle&lt;/code&gt; 의 왼쪽 위 모서리에 대한 새로운 X 좌표</target>
        </trans-unit>
        <trans-unit id="a02eac2108e256eaf9a04743db164c6b3137b286" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the new X coordinate of this &lt;code&gt;Point2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 이 &lt;code&gt;Point2D&lt;/code&gt; 의 새로운 X 좌표</target>
        </trans-unit>
        <trans-unit id="1de9a8e0a433c69b4f3954e1184155173dc948e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the new column value</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 새로운 열 값</target>
        </trans-unit>
        <trans-unit id="f3fcd882a79d8e5eab22a8ec7bb5d6c6ea20097a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the new dictionary</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 새 사전</target>
        </trans-unit>
        <trans-unit id="02143788f7a3a5c67891e8386019df972b4604ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the new horizontal location</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 새로운 수평 위치</target>
        </trans-unit>
        <trans-unit id="384e1e2039a11316ef67eeaec6aaa2548fadcffe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the new listener to be added</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 추가되는 새로운 리스너</target>
        </trans-unit>
        <trans-unit id="cd4a030b39dee3fa295acffc9e0fdff802eec87d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the object containing the input parameter value</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 입력 매개 변수 값을 포함하는 객체</target>
        </trans-unit>
        <trans-unit id="33b41935b8ed88e7f77edabcd41d9cd25d60e739" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the object representing data of an SQL structured or distinct type</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -SQL 구조화 또는 구별 유형의 데이터를 나타내는 오브젝트</target>
        </trans-unit>
        <trans-unit id="767335c223e2b07ba1ed581e58f300e172447693" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the object to exchange</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 교환 할 객체</target>
        </trans-unit>
        <trans-unit id="36ef9c430082e5f40e9d704953df319b0c79e2fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the parameter value</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 매개 변수 값</target>
        </trans-unit>
        <trans-unit id="c91787bebbcab486498f6fbc4c1fd7713f2649c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the position in points &amp;gt;= 0</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 포인트의 위치&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="096bcdb1add377df908d23f93b89b0fb65c6ca92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the position the view would be located at for the purpose of tab expansion &amp;gt;= 0.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 탭 확장을 위해보기가 위치 할 위치&amp;gt; = 0.</target>
        </trans-unit>
        <trans-unit id="6561e5d75ff0a421ff1875ea20214354905cdebd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the private key.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 개인 키.</target>
        </trans-unit>
        <trans-unit id="419d1d4ab575391fbe4e5f170f0dea7769bab85e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the specified X coordinate</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 지정된 X 좌표</target>
        </trans-unit>
        <trans-unit id="75029d384a1a6fc5985a56735d821a228b5c4753" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the specified X coordinate to be tested</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 테스트 할 지정된 X 좌표</target>
        </trans-unit>
        <trans-unit id="0b3d58489428ab0336882eca425b291f23765c5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the specified pixel</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 지정된 픽셀</target>
        </trans-unit>
        <trans-unit id="c990448cefcbba2c42b8120a30b6b9807c4a7be0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the specified x coordinate</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 지정된 x 좌표</target>
        </trans-unit>
        <trans-unit id="586b635e6c199db4b5a78cb0f910be6bcf130777" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the spring controlling the &lt;code&gt;x&lt;/code&gt; value of a component's location</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 구성 요소 위치 의 &lt;code&gt;x&lt;/code&gt; 값을 제어하는 스프링</target>
        </trans-unit>
        <trans-unit id="926ee9c1f9edd646e01d0519ce075b315b0c9070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the spring controlling the component's &lt;em&gt;x&lt;/em&gt; value</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 구성 요소의 &lt;em&gt;x&lt;/em&gt; 값을 제어하는 스프링</target>
        </trans-unit>
        <trans-unit id="ff06f0b5c71aa015ec303b14d894267917619b23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the spring value for the &lt;code&gt;x&lt;/code&gt; property</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - &lt;code&gt;x&lt;/code&gt; 속성 의 스프링 값</target>
        </trans-unit>
        <trans-unit id="921881a9bf7fb7316b008e2bc8cea4a0b0b8882e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the starting X coordinate &amp;gt;= 0</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 시작 X 좌표&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="745c4e8fe4ba12e3817e192995cd530688979115" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the starting X coordinate &lt;code&gt;&amp;gt;= 0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 시작 X 좌표 &lt;code&gt;&amp;gt;= 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4b9743b9c9e01d10e5e20cfc5bd5d580eafa585" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the starting X position &amp;gt;= 0</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 시작 X 위치&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="4f0a54eb19f43dd5efc09c1e91802cb385c092a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the starting X position &lt;code&gt;&amp;gt;= 0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 시작 X 위치 &lt;code&gt;&amp;gt;= 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="875fa6e32803a5174f4a8d737d3d6c1ec39d6410" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the target view location to translate to an offset into the text &amp;gt;= 0.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 텍스트&amp;gt; = 0으로의 오프셋으로 변환 할 대상보기 위치.</target>
        </trans-unit>
        <trans-unit id="40039a5b63535a142c88810e0fcc770c54747082" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the target view location to translate to an offset into the text &lt;code&gt;&amp;gt;= 0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 오프셋으로 변환 할 대상 뷰 위치 &lt;code&gt;&amp;gt;= 0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e22c06fea05d9d9284c0a20a4d9b904b25381e53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the target view location to translate to an offset into the text.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 텍스트로의 오프셋으로 변환 할 대상보기 위치.</target>
        </trans-unit>
        <trans-unit id="8a28f83abb76deddcc5885267cafe3461084c006" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the update value</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 업데이트 값</target>
        </trans-unit>
        <trans-unit id="6c604234c670f832412f2f310e8678426cb9bb34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the user-space X coordinate where the graphic is rendered</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 그래픽이 렌더링되는 사용자 공간 X 좌표</target>
        </trans-unit>
        <trans-unit id="0882773a6127c18bd67eaf2b4f9cd4e1903ec73a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the value</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 값</target>
        </trans-unit>
        <trans-unit id="7351dae62041fddbaa5261e489e9932405813066" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the value to add</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 더할 값</target>
        </trans-unit>
        <trans-unit id="9d16709435bab33ee08f9cf936b79d3717a408b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the value to bind to the first argument of the target</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 대상의 첫 번째 인수에 바인딩 할 값</target>
        </trans-unit>
        <trans-unit id="348c8c9b69565e39d5123021a778c7b8d48f850f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the value to convert to an unsigned &lt;code&gt;int&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 부호없는 &lt;code&gt;int&lt;/code&gt; 로 변환 할 값</target>
        </trans-unit>
        <trans-unit id="fc4b1cbe51f89c027993354d6989954cb4cee9dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the value to convert to an unsigned &lt;code&gt;long&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 부호없는 &lt;code&gt;long&lt;/code&gt; 으로 변환 할 값</target>
        </trans-unit>
        <trans-unit id="2c4c9eda001c352161777565a81abf77f42b1955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the value to pass to the database</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 데이터베이스에 전달할 값</target>
        </trans-unit>
        <trans-unit id="9c4d69d7ff6ec0b211870ae20c29b2e19b816456" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -x 좌표</target>
        </trans-unit>
        <trans-unit id="39b6acf9430a5e5f8c7dacae8f7bf2b019ad53c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate in invoker's coordinate space at which the popup menu is to be displayed</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 팝업 메뉴가 표시 될 호출자 좌표 공간의 x 좌표</target>
        </trans-unit>
        <trans-unit id="a70d0d852ffc793021150f44c7f67b2870ed1fd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate of interest</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 관심있는 x 좌표</target>
        </trans-unit>
        <trans-unit id="949786502b8e3bf02cceafd9d76bc4113532d04e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate of tab</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 탭의 x 좌표</target>
        </trans-unit>
        <trans-unit id="455132d064813eb335d5229a17699339e8075fde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate of the allocated area to render into.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 렌더링 할 할당 된 영역의 x 좌표</target>
        </trans-unit>
        <trans-unit id="bcd06e62a3299950ee41b1a3eecddb76159a96cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate of the area in device space for which colors are generated.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 색상이 생성되는 장치 공간 영역의 x 좌표입니다.</target>
        </trans-unit>
        <trans-unit id="0ed76bca20316c71ce0e79f45080efa98b1121bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate of the list item allocation</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 목록 항목 할당의 x 좌표</target>
        </trans-unit>
        <trans-unit id="d8ae3ded680f2715e87c39c8c457acc0bc7b3415" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate of the location in user space where the upper left corner of the image is rendered</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 이미지의 왼쪽 상단 모서리가 렌더링되는 사용자 공간 위치의 x 좌표</target>
        </trans-unit>
        <trans-unit id="bc7758adb11866c2d72b6c3d59fed771e8ff46d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate of the location where the &lt;code&gt;String&lt;/code&gt; should be rendered</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - &lt;code&gt;String&lt;/code&gt; 이 렌더링되어야 하는 위치의 x 좌표</target>
        </trans-unit>
        <trans-unit id="a52206ee77e759090653b5722f9710cfed5933d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate of the origin of the rotation</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 회전 원점의 x 좌표</target>
        </trans-unit>
        <trans-unit id="4d596e9e16b8855459e309fd63986647d6ac948c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate of the popup's new position</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 팝업 새 위치의 x 좌표</target>
        </trans-unit>
        <trans-unit id="f2289430788242ea75a04e6d716a9b5fd5826da4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate of the popup's new position in the screen's coordinate space</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 화면의 좌표 공간에서 팝업의 새 위치에 대한 x 좌표</target>
        </trans-unit>
        <trans-unit id="65661734b4c606b61e872cca2feb3f34edec4f80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate of the rectangle to be drawn.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 그릴 사각형의 x 좌표</target>
        </trans-unit>
        <trans-unit id="61d8a60e18605dbb3fa7f193fa6cf5578431ee2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate of the rectangle to be filled.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 채울 사각형의 x 좌표</target>
        </trans-unit>
        <trans-unit id="f17158053228697580794f487ac16ef585d89ef7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate of the rectangle to intersect the clip with</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 클립과 교차 할 사각형의 x 좌표</target>
        </trans-unit>
        <trans-unit id="f34eb899352295276701b2f4fc3127bb0b2ac232" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate of the rectangle to test against the clip</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 클립에 대해 테스트 할 사각형의 x 좌표</target>
        </trans-unit>
        <trans-unit id="4c3c3d8c4f56c373880cd554218d8e9bc12c57de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate of the upper left corner of the rectangle of pixels to be sent</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 보낼 픽셀 사각형의 왼쪽 위 모서리의 x 좌표</target>
        </trans-unit>
        <trans-unit id="19e4e2efeaea8d7a9ba158d523ba3aa247442bb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate of the upper left corner of the rectangle of pixels to retrieve from the image, relative to the default (unscaled) size of the image</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 이미지의 기본 (스케일링되지 않은) 크기에 상대적인 이미지에서 검색 할 픽셀 직사각형의 왼쪽 위 모서리의 x 좌표</target>
        </trans-unit>
        <trans-unit id="f01536e18ecf4f9d8fbb1a76a36fa5e08df44a23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate position to popup the menu</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 메뉴를 팝업 할 x 좌표 위치</target>
        </trans-unit>
        <trans-unit id="44f43ad5752b7bc5118b5cb2d1275757b0ed2d01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate to draw the text at</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 텍스트를 그릴 x 좌표</target>
        </trans-unit>
        <trans-unit id="f6a9f73bc51af649cb0a801a22c0e68adf1a8211" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x coordinate where the iterator's text is to be rendered</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 반복자의 텍스트가 렌더링되는 x 좌표</target>
        </trans-unit>
        <trans-unit id="c2fab226c3bfd0ad196c8f07987eee12617a76ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x location of the top of the rectangle to be extracted</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 추출 할 직사각형 상단의 x 위치</target>
        </trans-unit>
        <trans-unit id="0ed1205ecf5840846c306d5380aa5ee8df1e010c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x location relative to this tabbedpane</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 이 탭 창에 상대적인 x 위치</target>
        </trans-unit>
        <trans-unit id="e804119e180c6e3f6519aef2a276066ff58ce4a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x location to paint to</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 페인트 할 x 위치</target>
        </trans-unit>
        <trans-unit id="631cafb62dcff2e6c339136a78b00790dee029cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x offset from the origin of this &lt;code&gt;TextLayout&lt;/code&gt;. This is in standard coordinates.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -이의 원점으로부터의 x 오프셋 (offset) &lt;code&gt;TextLayout&lt;/code&gt; . 이것은 표준 좌표입니다.</target>
        </trans-unit>
        <trans-unit id="483623950e16bfea56f0a318c575d45308dbecd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x position in User Space where the glyphs should be rendered</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 글리프를 렌더링해야하는 사용자 공간의 x 위치</target>
        </trans-unit>
        <trans-unit id="f27ca82ec294a30545460520f9bac3d6651b524b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x position of the border</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 테두리의 x 위치</target>
        </trans-unit>
        <trans-unit id="6307708ca31fbf00ae82f09b26516d2b2e566293" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x position of the lowered bevel</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 낮아진 베벨의 x 위치</target>
        </trans-unit>
        <trans-unit id="aa85a6502e3ed34c16ac11ee8aefde23fe6252a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x position of the painted border</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 그려진 테두리의 x 위치</target>
        </trans-unit>
        <trans-unit id="e8be453a3004e29aea33e2c1dc2838cf435eea80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x position of the raised bevel</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 올린 베벨의 x 위치</target>
        </trans-unit>
        <trans-unit id="3516c9e53f45f5bbfc2c32cb2ead2e0456927ede" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x position to scroll to</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 스크롤 할 x 위치</target>
        </trans-unit>
        <trans-unit id="910109d640bb69ee247b279a7a48da5d1828562e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x target location</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -x 타겟 위치</target>
        </trans-unit>
        <trans-unit id="27655b7ae79ad76243193c21aa2cb3fb6e403bf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x value of the dirty region</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 더티 영역의 x 값</target>
        </trans-unit>
        <trans-unit id="9892d8dbc4e8e0d4a7167f0bd79bd88a7a350b0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x value of the region to be painted</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 칠할 영역의 x 값</target>
        </trans-unit>
        <trans-unit id="ad84e006e5aec839a52255a1b7400a327b7d75bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x-coordinate</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -x 좌표</target>
        </trans-unit>
        <trans-unit id="0377b8bd35c88ac9cff553f44d8ac1a8a2eaee83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x-coordinate at which to render this &lt;code&gt;GlyphVector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 다음은이 렌더링 할 수있는 x 좌표 &lt;code&gt;GlyphVector&lt;/code&gt; 의를 .</target>
        </trans-unit>
        <trans-unit id="a10a871c5938352a0dac71f827c6ffd0bf2def31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x-coordinate at which to render this &lt;code&gt;TextLayout&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 다음은이 렌더링 할 수있는 x 좌표 &lt;code&gt;TextLayout&lt;/code&gt; 와 .</target>
        </trans-unit>
        <trans-unit id="93a4aac3b3eba0138d29c4337fc26bc0d8fa5820" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x-coordinate of the first rectangle</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 첫 번째 직사각형의 x 좌표</target>
        </trans-unit>
        <trans-unit id="87531e6b879f6687483eac4b024b8a723fd34a9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - the x-coordinate of the point</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 점의 x 좌표</target>
        </trans-unit>
        <trans-unit id="6280062b8f8f107d533af8d44560b38c92ec0656" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - x coordinate of the view location to convert &amp;gt;= 0</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 변환 할 뷰 위치의 x 좌표&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="7921de3c3f4340292bc70c294e538f2791b52bd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - x coordinate to draw at</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - 그릴 x 좌표</target>
        </trans-unit>
        <trans-unit id="311a16602179fa4101de2e9bc4e232f20ad6b17f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - x-coordinate</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; -x 좌표</target>
        </trans-unit>
        <trans-unit id="2a9ffa599408e7ffa698d4c06f88992b4cef668d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; location of the origin of the printable area in the specified units</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 지정된 단위로 인쇄 가능 영역의 원점 위치</target>
        </trans-unit>
        <trans-unit id="05fa6e09cea2e3266f8040e859bb4a62294b41a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xAbs&lt;/code&gt; - The absolute horizontal x coordinate for the mouse location It is allowed to pass negative values</source>
          <target state="translated">&lt;code&gt;xAbs&lt;/code&gt; - 마우스 위치에 대한 절대 수평 x 좌표 음수 값을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4d2092136a0cabfce384cd821dbea2abf86b2bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xAbs&lt;/code&gt; - an int specifying the horizontal absolute position at which the event occurred, in pixels</source>
          <target state="translated">&lt;code&gt;xAbs&lt;/code&gt; - 이벤트가 발생한 수평 절대 위치를 픽셀 단위로 지정하는 정수</target>
        </trans-unit>
        <trans-unit id="82891aa4295547d01a719d6d652069e77e4dce30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xAbs&lt;/code&gt; - the absolute horizontal &lt;code&gt;x&lt;/code&gt; coordinate for the mouse location</source>
          <target state="translated">&lt;code&gt;xAbs&lt;/code&gt; - 마우스 위치에 대한 절대 수평 &lt;code&gt;x&lt;/code&gt; 좌표</target>
        </trans-unit>
        <trans-unit id="ba82ae5a75175fc953f6302b12e07e1ab72cf47f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xAbs&lt;/code&gt; - the absolute horizontal x coordinate for the mouse location</source>
          <target state="translated">&lt;code&gt;xAbs&lt;/code&gt; - 마우스 위치에 대한 절대 수평 x 좌표</target>
        </trans-unit>
        <trans-unit id="3c5cd3eb0261f596f009e132ef556d08fee01f7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xOdd&lt;/code&gt; - whether the x-coordinate is odd.</source>
          <target state="translated">&lt;code&gt;xOdd&lt;/code&gt; -x 좌표가 홀수인지 여부.</target>
        </trans-unit>
        <trans-unit id="a11088b5794ffd998dabf54a6cbf14a635790f2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xPath&lt;/code&gt; - the XPath expression to be evaluated</source>
          <target state="translated">&lt;code&gt;xPath&lt;/code&gt; - 평가할 XPath 표현식</target>
        </trans-unit>
        <trans-unit id="93ed4158da94105ab74dd76a311dd3f0c9785b66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xPathList&lt;/code&gt; - a list of one or more &lt;a href=&quot;xpathtype&quot;&gt;&lt;code&gt;XPathType&lt;/code&gt;&lt;/a&gt; objects. The list is defensively copied to protect against subsequent modification.</source>
          <target state="translated">&lt;code&gt;xPathList&lt;/code&gt; - 하나 이상의 &lt;a href=&quot;xpathtype&quot;&gt; &lt;code&gt;XPathType&lt;/code&gt; &lt;/a&gt; 개체 목록입니다 . 목록은 후속 수정으로부터 보호하기 위해 방어 적으로 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="ae120f5ff7d36c9df5455e94e1837a221c779a14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xPoints&lt;/code&gt; - a an array of &lt;code&gt;x&lt;/code&gt; coordinates.</source>
          <target state="translated">&lt;code&gt;xPoints&lt;/code&gt; - &lt;code&gt;x&lt;/code&gt; 좌표 의 배열 .</target>
        </trans-unit>
        <trans-unit id="aa2445852a150ec6c9aa197661cbe12178ffbb3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xPoints&lt;/code&gt; - an array of</source>
          <target state="translated">&lt;code&gt;xPoints&lt;/code&gt; - 배열</target>
        </trans-unit>
        <trans-unit id="395af55082bbf79219262ceba3163874bd4ab5b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xPos&lt;/code&gt; - the location of the slider along the x axis</source>
          <target state="translated">&lt;code&gt;xPos&lt;/code&gt; -x 축을 따라 슬라이더의 위치</target>
        </trans-unit>
        <trans-unit id="8f747f4f520c3c51794252e18c9172273cecf1f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xPosition&lt;/code&gt; - width from the start of the first column in the model.</source>
          <target state="translated">&lt;code&gt;xPosition&lt;/code&gt; - 모델의 첫 번째 열 시작 부분부터의 너비입니다.</target>
        </trans-unit>
        <trans-unit id="5493528882be4c88cf45ba14596c0a70e9a0f35f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xares&lt;/code&gt; - An XAResource object whose resource manager instance is to be compared with the resource manager instance of the target object.</source>
          <target state="translated">&lt;code&gt;xares&lt;/code&gt; - 리소스 관리자 인스턴스가 대상 개체의 리소스 관리자 인스턴스와 비교할 XAResource 개체입니다.</target>
        </trans-unit>
        <trans-unit id="2c32a338b8e1e7730ce6f88b28f4d7b0b331179c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xform&lt;/code&gt; - The &lt;code&gt;AffineTransform&lt;/code&gt; to use for the operation.</source>
          <target state="translated">&lt;code&gt;xform&lt;/code&gt; - &lt;code&gt;AffineTransform&lt;/code&gt; 운영을위한 용도에 관한 것이다.</target>
        </trans-unit>
        <trans-unit id="9ebd44c145ab63255d814af4fb870d699612a87f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xform&lt;/code&gt; - the &lt;a href=&quot;geom/affinetransform&quot;&gt;&lt;code&gt;AffineTransform&lt;/code&gt;&lt;/a&gt; from user space into device space.</source>
          <target state="translated">&lt;code&gt;xform&lt;/code&gt; - 사용자 공간에서 장치 공간으로 의 &lt;a href=&quot;geom/affinetransform&quot;&gt; &lt;code&gt;AffineTransform&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="053f4edf0babd4a53a58568ce262975d353ae387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xform&lt;/code&gt; - the &lt;a href=&quot;geom/affinetransform&quot;&gt;&lt;code&gt;AffineTransform&lt;/code&gt;&lt;/a&gt; from user space into device space. Implementations of the &lt;code&gt;Paint&lt;/code&gt; interface are allowed to throw &lt;code&gt;NullPointerException&lt;/code&gt; for a &lt;code&gt;null xform&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;xform&lt;/code&gt; - 사용자 공간에서 장치 공간으로 의 &lt;a href=&quot;geom/affinetransform&quot;&gt; &lt;code&gt;AffineTransform&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Paint&lt;/code&gt; 인터페이스의 구현은 &lt;code&gt;null xform&lt;/code&gt; 에 대해 &lt;code&gt;NullPointerException&lt;/code&gt; 을 throw 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d279021ed8f4ec0e7703b5527f68a14385775dd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xform&lt;/code&gt; - the transformation from image space into user space</source>
          <target state="translated">&lt;code&gt;xform&lt;/code&gt; - 이미지 공간에서 사용자 공간으로의 변환</target>
        </trans-unit>
        <trans-unit id="e8087854b44461b970fe2dc5635ef0405cd9d430" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xid&lt;/code&gt; - A global transaction identifier</source>
          <target state="translated">&lt;code&gt;xid&lt;/code&gt; - 글로벌 트랜잭션 식별자</target>
        </trans-unit>
        <trans-unit id="f7c1a848f9bd17dc238d15eac6fbaf1adaca6d8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xid&lt;/code&gt; - A global transaction identifier that is the same as the identifier used previously in the &lt;code&gt;start&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;xid&lt;/code&gt; - 이전에 &lt;code&gt;start&lt;/code&gt; 메서드 에서 사용 된 식별자와 동일한 전역 트랜잭션 식별자입니다 .</target>
        </trans-unit>
        <trans-unit id="e58c09c83842ef742c28716506b31fe389eafc18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xid&lt;/code&gt; - A global transaction identifier to be associated with the resource.</source>
          <target state="translated">&lt;code&gt;xid&lt;/code&gt; - 리소스와 연결할 전역 트랜잭션 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="cec34a5aa8a3a328d9e2e29f32f79a656aae4697" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xid&lt;/code&gt; - A global transaction identifier.</source>
          <target state="translated">&lt;code&gt;xid&lt;/code&gt; - 글로벌 트랜잭션 식별자.</target>
        </trans-unit>
        <trans-unit id="0e619674b95d73f0c910bbd9eda4e37914d11cfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlEventReader&lt;/code&gt; - &lt;code&gt;XMLEventReader&lt;/code&gt; used to create this &lt;code&gt;StAXSource&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;xmlEventReader&lt;/code&gt; - &lt;code&gt;XMLEventReader&lt;/code&gt; 이 만드는 데 사용 &lt;code&gt;StAXSource&lt;/code&gt; 의를 .</target>
        </trans-unit>
        <trans-unit id="2d388a5022957fb7dd555a52ce3fcd10dd8b33e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlEventWriter&lt;/code&gt; - &lt;code&gt;XMLEventWriter&lt;/code&gt; used to create this &lt;code&gt;StAXResult&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;xmlEventWriter&lt;/code&gt; - &lt;code&gt;XMLEventWriter&lt;/code&gt; 에는 이 만드는 데 사용 &lt;code&gt;StAXResult&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="d42c61add08ded89314b7ecce1291da240bec8a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlGregorianCalendar&lt;/code&gt; - Instance of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to compare</source>
          <target state="translated">&lt;code&gt;xmlGregorianCalendar&lt;/code&gt; - 비교할 &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; 의 인스턴스</target>
        </trans-unit>
        <trans-unit id="af2f4f7c7d216a4e3383e81c6d3db91c20d28207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlObject&lt;/code&gt; - a &lt;code&gt;SQLXML&lt;/code&gt; object that maps an &lt;code&gt;SQL XML&lt;/code&gt; value</source>
          <target state="translated">&lt;code&gt;xmlObject&lt;/code&gt; - &lt;code&gt;SQL XML&lt;/code&gt; 값 을 매핑하는 &lt;code&gt;SQLXML&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="7b4feed066a8f6b4beaeebcc202d283a1b4631de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlObject&lt;/code&gt; - a &lt;code&gt;SQLXML&lt;/code&gt; object that maps an SQL &lt;code&gt;XML&lt;/code&gt; value</source>
          <target state="translated">&lt;code&gt;xmlObject&lt;/code&gt; - SQL &lt;code&gt;XML&lt;/code&gt; 값 을 매핑하는 &lt;code&gt;SQLXML&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="d0d3f6921f2a0b9efeaf195b1bdff07eb137213b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlObject&lt;/code&gt; - the column value</source>
          <target state="translated">&lt;code&gt;xmlObject&lt;/code&gt; - 열 값</target>
        </trans-unit>
        <trans-unit id="1a136821fb3dd942c2ab9f3d046a29d27bfecebd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlObject&lt;/code&gt; - the value for the column to be updated</source>
          <target state="translated">&lt;code&gt;xmlObject&lt;/code&gt; - 업데이트 할 열의 값</target>
        </trans-unit>
        <trans-unit id="258e612028bca8e12b7dfb9f14e1a1cded12b5bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlReader&lt;/code&gt; - The SAX2 XMLReader to wrap.</source>
          <target state="translated">&lt;code&gt;xmlReader&lt;/code&gt; - 래핑 할 SAX2 XMLReader입니다.</target>
        </trans-unit>
        <trans-unit id="9a60a428f8946a9cce5f0a4541d452af1e5be568" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlSource&lt;/code&gt; - The XML input to transform.</source>
          <target state="translated">&lt;code&gt;xmlSource&lt;/code&gt; - 변환 할 XML 입력입니다.</target>
        </trans-unit>
        <trans-unit id="ea35fe40adc283382333bca1453ffa1c0a3b2fcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlStreamReader&lt;/code&gt; - &lt;code&gt;XMLStreamReader&lt;/code&gt; used to create this &lt;code&gt;StAXSource&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;xmlStreamReader&lt;/code&gt; - &lt;code&gt;XMLStreamReader&lt;/code&gt; 이 만드는 데 사용 &lt;code&gt;StAXSource&lt;/code&gt; 의를 .</target>
        </trans-unit>
        <trans-unit id="2500e2ef544e744abb720ca621157f863441058b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlStreamWriter&lt;/code&gt; - &lt;code&gt;XMLStreamWriter&lt;/code&gt; used to create this &lt;code&gt;StAXResult&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;xmlStreamWriter&lt;/code&gt; - &lt;code&gt;XMLStreamWriter&lt;/code&gt; 에는 이 만드는 데 사용 &lt;code&gt;StAXResult&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="8ae74b8153970492e8b27e6aee014de599c01a3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlStructure&lt;/code&gt; - a mechanism-specific XML structure from which to unmarshal the keyinfo from</source>
          <target state="translated">&lt;code&gt;xmlStructure&lt;/code&gt; -키 정보 를 비 정렬화할 메커니즘 별 XML 구조</target>
        </trans-unit>
        <trans-unit id="831212b2b56cff62047ba0cd6a9003d42801457f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlStructure&lt;/code&gt; - a mechanism-specific XML structure from which to unmarshal the signature from</source>
          <target state="translated">&lt;code&gt;xmlStructure&lt;/code&gt; - 서명을 비 정렬 화할 메커니즘 별 XML 구조</target>
        </trans-unit>
        <trans-unit id="4a807ac664cae0bdefb13bcfa24518d2071221bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xpoints&lt;/code&gt; - an array of X coordinates</source>
          <target state="translated">&lt;code&gt;xpoints&lt;/code&gt; -X 좌표의 배열</target>
        </trans-unit>
        <trans-unit id="7604abf9a733e8e1efc72df4d2c37487bc36c018" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xsd:dateTime&lt;/code&gt; datatype field mapping to accessors of this class are defined in &lt;a href=&quot;#datetimefieldmapping&quot;&gt;date/time field mapping table&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;xsd:dateTime&lt;/code&gt; 이 클래스의 접근 자에 대한 xsd : dateTime 데이터 유형 필드 매핑은 &lt;a href=&quot;#datetimefieldmapping&quot;&gt;날짜 / 시간 필드 매핑 테이블에&lt;/a&gt; 정의되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="800a91325ccfde1e4af2756102b914ab571ffcd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y0&lt;/code&gt; - a relative Y coordinate</source>
          <target state="translated">&lt;code&gt;y0&lt;/code&gt; - 상대 Y 좌표</target>
        </trans-unit>
        <trans-unit id="c3f9c5be2984f5904808a997a1c788189cdd8a06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y1&lt;/code&gt; - The Y coordinate of the arc's starting point.</source>
          <target state="translated">&lt;code&gt;y1&lt;/code&gt; - 호 시작점의 Y 좌표입니다.</target>
        </trans-unit>
        <trans-unit id="758464176104a2cf11830fac7ef133c14ff0f4cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y1&lt;/code&gt; - an Y1 coordinate</source>
          <target state="translated">&lt;code&gt;y1&lt;/code&gt; -Y1 좌표</target>
        </trans-unit>
        <trans-unit id="c4d83510f58a1f91b1c0bba849b6cfe27f2cd508" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y1&lt;/code&gt; - the Y coordinate for the start point of the resulting &lt;code&gt;CubicCurve2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y1&lt;/code&gt; - 결과 &lt;code&gt;CubicCurve2D&lt;/code&gt; 의 시작점에 대한 Y 좌표</target>
        </trans-unit>
        <trans-unit id="0d547128d4a389b8aa68b69baa23eefffaa02671" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y1&lt;/code&gt; - the Y coordinate of the first B&amp;eacute;zier control point</source>
          <target state="translated">&lt;code&gt;y1&lt;/code&gt; - 첫 번째 베 지어 제어점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="b71e3ba3460bdb39adbea42c2954ef1319627d3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y1&lt;/code&gt; - the Y coordinate of the first specified point</source>
          <target state="translated">&lt;code&gt;y1&lt;/code&gt; - 지정된 첫 번째 점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="1ed0bb7191532c9f0345f10bb3e6fc12f823e0e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y1&lt;/code&gt; - the Y coordinate of the quadratic control point</source>
          <target state="translated">&lt;code&gt;y1&lt;/code&gt; -2 차 제어점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="0bbce2abcbb7ec48ed42822537a56532dfda6d1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y1&lt;/code&gt; - the Y coordinate of the start point</source>
          <target state="translated">&lt;code&gt;y1&lt;/code&gt; - 시작점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="01aeb0f37c9598cff3558557a98a6e4b4fa4e781" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y1&lt;/code&gt; - the Y coordinate of the start point of the first specified line segment</source>
          <target state="translated">&lt;code&gt;y1&lt;/code&gt; - 지정된 첫 번째 선분 시작점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="675bbcb855740c363c76d2f78c33ad72c1186f32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y1&lt;/code&gt; - the Y coordinate of the start point of the specified diagonal</source>
          <target state="translated">&lt;code&gt;y1&lt;/code&gt; - 지정된 대각선 시작점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="442a4f4db95a1f4f58df0b75df230e820185dfc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y1&lt;/code&gt; - the Y coordinate of the start point of the specified line</source>
          <target state="translated">&lt;code&gt;y1&lt;/code&gt; - 지정된 라인 시작점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="241db4cc044c4252df4eea2e57f67d660cfb5077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y1&lt;/code&gt; - the Y coordinate of the start point of the specified line segment</source>
          <target state="translated">&lt;code&gt;y1&lt;/code&gt; - 지정된 선분 시작점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="1e496e3e580ccf63902a6df9d1f777fada277324" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y1&lt;/code&gt; - the Y coordinate that specifies the start point of a &lt;code&gt;CubicCurve2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y1&lt;/code&gt; - &lt;code&gt;CubicCurve2D&lt;/code&gt; 의 시작점을 지정하는 Y 좌표</target>
        </trans-unit>
        <trans-unit id="09f8455a8135dada7eaf7a31a36e7a40db0ec0c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y1&lt;/code&gt; - the Y coordinate used to set the start point of this &lt;code&gt;CubicCurve2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y1&lt;/code&gt; - 이 &lt;code&gt;CubicCurve2D&lt;/code&gt; 의 시작점을 설정하는 데 사용되는 Y 좌표</target>
        </trans-unit>
        <trans-unit id="103528a133c66e3ef26d1f8f8277b66ac4fd5715" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y1&lt;/code&gt; - the first point's</source>
          <target state="translated">&lt;code&gt;y1&lt;/code&gt; - 첫 번째 포인트</target>
        </trans-unit>
        <trans-unit id="c41ee68c9c4e92041752fa861bac8b37767c4b5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y1&lt;/code&gt; - y coordinate of the first specified &lt;code&gt;Point&lt;/code&gt; in user space</source>
          <target state="translated">&lt;code&gt;y1&lt;/code&gt; - 사용자 공간에서 지정된 첫 번째 &lt;code&gt;Point&lt;/code&gt; 의 y 좌표</target>
        </trans-unit>
        <trans-unit id="b1c39e6af5d1c24832dd94a5d243899b555c76c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y1&lt;/code&gt; - y origin</source>
          <target state="translated">&lt;code&gt;y1&lt;/code&gt; -y 원점</target>
        </trans-unit>
        <trans-unit id="226bbaacca0687bda8baf796a37198d85a7ac624" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y1&lt;/code&gt; - y1</source>
          <target state="translated">&lt;code&gt;y1&lt;/code&gt; -y1</target>
        </trans-unit>
        <trans-unit id="3cef9fbf2e429f70178ca797e7bebd210c668d82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y2&lt;/code&gt; - The Y coordinate of the arc's ending point.</source>
          <target state="translated">&lt;code&gt;y2&lt;/code&gt; - 호 끝점의 Y 좌표입니다.</target>
        </trans-unit>
        <trans-unit id="ead26c65c3b59ab0a6ecd8d37419547ddd14e3bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y2&lt;/code&gt; - an Y2 coordinate</source>
          <target state="translated">&lt;code&gt;y2&lt;/code&gt; -Y2 좌표</target>
        </trans-unit>
        <trans-unit id="c4ec0b3d0cc3949a0ab97e659476d8d7b23c04a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y2&lt;/code&gt; - the Y coordinate for the end point of the resulting &lt;code&gt;CubicCurve2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y2&lt;/code&gt; - 결과 &lt;code&gt;CubicCurve2D&lt;/code&gt; 의 종점에 대한 Y 좌표</target>
        </trans-unit>
        <trans-unit id="dd03e4c8677441213a8d9cff3b6f71bb10f88ce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y2&lt;/code&gt; - the Y coordinate of the end point</source>
          <target state="translated">&lt;code&gt;y2&lt;/code&gt; - 종점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="63309c56e9b6255f673ae876e029ae2f3451cc51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y2&lt;/code&gt; - the Y coordinate of the end point of the first specified line segment</source>
          <target state="translated">&lt;code&gt;y2&lt;/code&gt; - 지정된 첫 번째 선분 끝점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="644680174f7a3b1a292e0a2bfe63bdea366b9070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y2&lt;/code&gt; - the Y coordinate of the end point of the specified diagonal</source>
          <target state="translated">&lt;code&gt;y2&lt;/code&gt; - 지정된 대각선 끝점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="8287d9df831cc62469b590a59e9cb6d6cc28e583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y2&lt;/code&gt; - the Y coordinate of the end point of the specified line</source>
          <target state="translated">&lt;code&gt;y2&lt;/code&gt; - 지정된 라인 끝점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="e02cdd6e50c6aa70f8938a1273004e1a0f54373f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y2&lt;/code&gt; - the Y coordinate of the end point of the specified line segment</source>
          <target state="translated">&lt;code&gt;y2&lt;/code&gt; - 지정된 선분 끝점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="a564b2276ad4edc589997675e88d0559eccc03f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y2&lt;/code&gt; - the Y coordinate of the final end point</source>
          <target state="translated">&lt;code&gt;y2&lt;/code&gt; - 최종 끝점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="086bfd410c74ab299c92f554943d3c4d37ba1be6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y2&lt;/code&gt; - the Y coordinate of the second B&amp;eacute;zier control point</source>
          <target state="translated">&lt;code&gt;y2&lt;/code&gt; - 두 번째 베 지어 제어점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="0015d2be8a4992877351c9069b06d509a037e7aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y2&lt;/code&gt; - the Y coordinate of the second specified point</source>
          <target state="translated">&lt;code&gt;y2&lt;/code&gt; - 지정된 두 번째 점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="133781dcee039cd3a5e5ea45e8e9b3f4da1137fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y2&lt;/code&gt; - the Y coordinate that specifies the end point of a &lt;code&gt;CubicCurve2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y2&lt;/code&gt; - &lt;code&gt;CubicCurve2D&lt;/code&gt; 의 끝점을 지정하는 Y 좌표</target>
        </trans-unit>
        <trans-unit id="d45db8696edea84e3367d7c1130900f8b7533eb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y2&lt;/code&gt; - the Y coordinate used to set the end point of this &lt;code&gt;CubicCurve2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y2&lt;/code&gt; - 이 &lt;code&gt;CubicCurve2D&lt;/code&gt; 의 끝점을 설정하는 데 사용되는 Y 좌표</target>
        </trans-unit>
        <trans-unit id="8848b47bc2bcc1f4ad500e4a2abad41d8d4ca5e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y2&lt;/code&gt; - the second point's</source>
          <target state="translated">&lt;code&gt;y2&lt;/code&gt; - 두 번째 점</target>
        </trans-unit>
        <trans-unit id="3439fed66ced0938d72231c6fdf622f645c6385a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y2&lt;/code&gt; - y coordinate of the second specified &lt;code&gt;Point&lt;/code&gt; in user space</source>
          <target state="translated">&lt;code&gt;y2&lt;/code&gt; - 사용자 공간에서 두 번째로 지정된 &lt;code&gt;Point&lt;/code&gt; 의 y 좌표</target>
        </trans-unit>
        <trans-unit id="d5ed6a6edf7e8367e9bb3ae2f6861764d12f67f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y2&lt;/code&gt; - y destination</source>
          <target state="translated">&lt;code&gt;y2&lt;/code&gt; -y 목적지</target>
        </trans-unit>
        <trans-unit id="2b736baeadff94ddc9d98b9c1d00ea57b6b04ec0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y2&lt;/code&gt; - y2</source>
          <target state="translated">&lt;code&gt;y2&lt;/code&gt; -y2</target>
        </trans-unit>
        <trans-unit id="7b79de0995b507fe7589cf127c238a0f76c76900" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y3&lt;/code&gt; - the Y coordinate of the final end point</source>
          <target state="translated">&lt;code&gt;y3&lt;/code&gt; - 최종 종점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="e15eda9b4924be171938fece4d34336303d16719" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y3&lt;/code&gt; - the Y coordinate of the start point of the second specified line segment</source>
          <target state="translated">&lt;code&gt;y3&lt;/code&gt; - 지정된 두 번째 선분 시작점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="fc40b9ea431df8f8bb213f1bfdc79c4800bff180" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y4&lt;/code&gt; - the Y coordinate of the end point of the second specified line segment</source>
          <target state="translated">&lt;code&gt;y4&lt;/code&gt; - 지정된 두 번째 선분의 종점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="f3367aefc4a0c79897631ec6304abf958a448f89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - - Y dimension.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; --Y 치수.</target>
        </trans-unit>
        <trans-unit id="f8bb6ea9fa5672fa6bcab83653db915bd5b625dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - &lt;code&gt;Y&lt;/code&gt; dimension</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - &lt;code&gt;Y&lt;/code&gt; 치수</target>
        </trans-unit>
        <trans-unit id="4d3e2a53c36a76917623d6c3b85717fd2ea77a4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - Initial y screen coordinate</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 초기 y 화면 좌표</target>
        </trans-unit>
        <trans-unit id="4ef10dbcffe4f53aacc0c82319e8caf31becff75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - Screen y location Popup is to be shown at.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 화면 y 위치 팝업이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="6719476fa76bcfdd2ff50fbfb9f0e5895aee7a49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - The Y coordinate of the center of the arc.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 호 중심의 Y 좌표입니다.</target>
        </trans-unit>
        <trans-unit id="000904726ac133d5cdfc5d619c994cfe5f06f2d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - The Y coordinate of the pixel location</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 픽셀 위치의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="39263f7b2c574fbcb37303d28facdc30ea640c3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - The Y coordinate of the pixel location.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 픽셀 위치의 Y 좌표입니다.</target>
        </trans-unit>
        <trans-unit id="9afeaffb87a0cea3991b1971cf2bf14089badce3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - The Y coordinate of the point to test.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 테스트 할 점의 Y 좌표입니다.</target>
        </trans-unit>
        <trans-unit id="a301f779f1bf079eaa07a195d015e8a11e1eeb1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - The Y coordinate of the rectangle's upper-left corner.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 직사각형 왼쪽 위 모서리의 Y 좌표입니다.</target>
        </trans-unit>
        <trans-unit id="2f070a9c53a276bfb0f2d8577d489f91728e4c8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - The Y coordinate of the upper left pixel location</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 왼쪽 위 픽셀 위치의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="e23f5eb729df4ed1145a5dfaa463e6efddea5d37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - The Y coordinate of the upper left pixel location.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 왼쪽 위 픽셀 위치의 Y 좌표입니다.</target>
        </trans-unit>
        <trans-unit id="bf6f7e3bf2f50f179c276e814e85727ffb82bba7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - The Y coordinate of the upper-left corner of the arc's framing rectangle.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 호의 프레임 사각형 왼쪽 위 모서리의 Y 좌표입니다.</target>
        </trans-unit>
        <trans-unit id="9c558cf27bdbd0563c6c7cb35916051b7c79bab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - The Y coordinate of the upper-left corner of the arc.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 호 왼쪽 상단 모서리의 Y 좌표입니다.</target>
        </trans-unit>
        <trans-unit id="d8c2bedcf0cbcf37bbe9c10d1993b15849b9832c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - The Y coordinate of the upper-left corner of the framing rectangle.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 프레임 사각형 왼쪽 위 모서리의 Y 좌표입니다.</target>
        </trans-unit>
        <trans-unit id="f555601794ad0a09273da43b5260fa3eb1b1e709" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - The Y coordinate of the upper-left pixel location</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 왼쪽 위 픽셀 위치의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="3ecaa8225a88820706a1ba3ea56e12c77427cd8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - The minimum Y coordinate of the pixel rectangle.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 픽셀 사각형의 최소 Y 좌표입니다.</target>
        </trans-unit>
        <trans-unit id="7857145fa0dc1e74f2bb9fe506bf9eec6e51b8f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - The vertical y coordinate for the mouse location. It is allowed to pass negative values</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 마우스 위치의 수직 y 좌표입니다. 음수 값을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bcafe5ddc94b403a65074e548263badfa92e1ef4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - Upper left corner to draw text at.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 텍스트를 그릴 왼쪽 상단 모서리입니다.</target>
        </trans-unit>
        <trans-unit id="24a68b0fe283a6860ce30fd7202e0b4a6ae8db4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - Y coordinate of the area to paint to</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 칠할 영역의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="1496e2342e3404aeea1ef086310804be28a3db9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - Y coordinate of the region to repaint</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 다시 칠할 영역의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="8ff5b779c2d9ea67ad40f4e27b021c21027e5e4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - Y dimension.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; -Y 차원.</target>
        </trans-unit>
        <trans-unit id="5d44581f973a049386a79f83ac9a12d6fcaddbfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - Y location of bounding box</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 경계 상자의 Y 위치</target>
        </trans-unit>
        <trans-unit id="26fe91c85e95e62210ec72b6b3fc0e12c1a37d35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - Y position</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; -Y 위치</target>
        </trans-unit>
        <trans-unit id="d65504be831dc8b403e6677e8e49538be55f02f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - Y position of pixel</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 픽셀의 Y 위치</target>
        </trans-unit>
        <trans-unit id="31b823e2a0081d2b95e6050eb0827986c48fafc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - a value</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 값</target>
        </trans-unit>
        <trans-unit id="f9185fe3cbc174ed9898116ab450801776c7c6e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - an Y coordinate</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; -Y 좌표</target>
        </trans-unit>
        <trans-unit id="50dba591e3b7776cb73508e5b301c4e0dab98926" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - an encoded y value (0...1, or 1...2, or 2...3)</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 인코딩 된 y 값 (0 ... 1 또는 1 ... 2 또는 2 ... 3)</target>
        </trans-unit>
        <trans-unit id="1e5cbc64e15daaae9413f3779bd10734d0683c30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - an encoded y value of the bezier control point (0...1, or 1...2, or 2...3)</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 베 지어 제어점의 인코딩 된 y 값 (0 ... 1 또는 1 ... 2 또는 2 ... 3)</target>
        </trans-unit>
        <trans-unit id="caccfe3a5c49726d59e1dea8fb6ccba53928781d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - an int specifying the top of the area to draw in, in pixels measured down from the top edge of the graphics context</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 그릴 영역의 상단을 지정하는 정수 (그래픽 컨텍스트의 상단 가장자리에서 아래로 측정 된 픽셀)</target>
        </trans-unit>
        <trans-unit id="71d4112bd060b65210119d5f8bcb1517e26f3cfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - an int specifying the vertical position at which the event occurred, in pixels</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 이벤트가 발생한 수직 위치를 픽셀 단위로 지정하는 정수</target>
        </trans-unit>
        <trans-unit id="9e642da4d457af2b6e5a815d6f6fdf7847471fb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - an integer giving the component's new vertical position, measured in pixels from the bottom of its container</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 컨테이너 하단에서 픽셀 단위로 측정 된 컴포넌트의 새로운 수직 위치를 제공하는 정수</target>
        </trans-unit>
        <trans-unit id="2007a2c3d15a5bf4d8572c10c4980f0239e79568" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - an integer giving the number of pixels vertically from the top of the display area, minus any top margin</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 표시 영역의 상단에서 수직으로 픽셀 수를 제공하고 상단 여백을 뺀 정수</target>
        </trans-unit>
        <trans-unit id="6c1572db57106110c3318e944b08a288cad106cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - location of dialog including border in screen coordinates</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 화면 좌표의 테두리를 포함하는 대화 상자의 위치</target>
        </trans-unit>
        <trans-unit id="9b94eaf4faeca70102cd3de8365850c7e8908904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - location of dialog including border in screen coordinates relative to the origin of &lt;code&gt;gc&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - &lt;code&gt;gc&lt;/code&gt; 의 원점에 상대적인 화면 좌표의 테두리를 포함하는 대화 상자의 위치</target>
        </trans-unit>
        <trans-unit id="7212b018216052f82369ece6e086ff3ced75bb07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - printable y</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 인쇄 가능한 y</target>
        </trans-unit>
        <trans-unit id="c9d6d67d0c78fd275cd38f4c991039725332d62b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - public value y</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 공개 가치 y</target>
        </trans-unit>
        <trans-unit id="955d1b392f84fde04083707a7fbb84b9915db5c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - set the y location of the thumb</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 엄지 손가락의 y 위치 설정</target>
        </trans-unit>
        <trans-unit id="d013c6d56862b3227cdbb497050b56c858d00b2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="9c2e8f2a13344e71682287b81d01c7452c7732f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the &lt;code&gt;y&lt;/code&gt; coordinate (pixels down from top)</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - &lt;code&gt;y&lt;/code&gt; 좌표 (위에서 아래로 픽셀)</target>
        </trans-unit>
        <trans-unit id="c23b760dfc415bf046ce8bb19ee85bf4977303db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; -Y 좌표</target>
        </trans-unit>
        <trans-unit id="b967ddbc6ab9bfbd8c98e13281cabf33da376b46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate &amp;gt;= 0</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; -Y 좌표&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="4ea8b3131d3dbdc1681225390d9f5afe6133ae7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate &amp;gt;=0</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; -Y 좌표&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="1208cd6533af6c93f11b060c48f2a5b78fd3ae95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the first rectangle's top-left point</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 첫 번째 직사각형의 왼쪽 위 점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="c6e01272377787ecb2a6f56e4d6eff1b23714500" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the icon's top-left corner</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 아이콘 왼쪽 상단 모서리의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="6243397e4ab7fe04f508be72625bc98af5be0654" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the location of this &lt;code&gt;GlyphVector&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 이 &lt;code&gt;GlyphVector&lt;/code&gt; 위치의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="42b267e13a0b0859b4f1e66bf441a40d37900498" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the new location</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 새 위치의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="c5a9490e1d4437b8884c03b35067aaf047f43d4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the newly constructed &lt;code&gt;Point2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 새로 구성된 &lt;code&gt;Point2D&lt;/code&gt; 의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="58b6c2376cae142fa4af845996c1bfe5cc01c56c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the newly constructed &lt;code&gt;Point&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 새로 생성 된 &lt;code&gt;Point&lt;/code&gt; 의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="aed106b9d0d9e98bde21060a7042521294243217" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the newly constructed &lt;code&gt;RoundRectangle2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 새로 구성된 &lt;code&gt;RoundRectangle2D&lt;/code&gt; 의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="b1a9bf39d25139286f0cc84cab7349414bb14547" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the origin of this &lt;code&gt;TextLayout&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 이 &lt;code&gt;TextLayout&lt;/code&gt; 원점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="08395a7bbac7b5a174742c02c3741eb0f85f9242" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the pixel</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 픽셀의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="a93185b1bb6f864332cc1759a62c645732ec2f92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the pixel from which to get the pixel in the default RGB color model and sRGB color space</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 기본 RGB 색상 모델 및 sRGB 색상 공간에서 픽셀을 가져올 픽셀의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="db094e5ee5f31fad75d0c2642d84bb13387d380e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the pixel location</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 픽셀 위치의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="ee9bc554b63bdda50ad3075462ecca2336051e54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the pixel to set</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 설정할 픽셀의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="01102d2ccb714af9fe31678165b7621ec78f920a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the specified pixel</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 지정된 픽셀의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="801dcef20b99089f683634008142e63dfe4392b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the specified point to be tested</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 테스트 할 지정된 지점의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="56328643e10eee620d0527e2cc0a7c9e8cab2fde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the upper-left corner of the &lt;code&gt;WritableRaster&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - &lt;code&gt;WritableRaster&lt;/code&gt; 왼쪽 위 모서리의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="9ef259c9f13cfd7f76fa7b1435cf933b25f094c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the upper-left corner of the area of pixels to be set</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 설정할 픽셀 영역의 왼쪽 위 모서리의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="1397a2c299bf2a3b12d256ad245c27e0acb57a13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the upper-left corner of the framing rectangle</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 프레임 사각형의 왼쪽 위 모서리의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="b4d875b3cb6386970c339f508ed14c6779e1a8a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the upper-left corner of the newly constructed &lt;code&gt;Rectangle2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 새로 구성된 &lt;code&gt;Rectangle2D&lt;/code&gt; 왼쪽 위 모서리의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="b3ec37ca5c8a004be727853b775d7360077b2321" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the upper-left corner of the region of pixels</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 픽셀 영역의 왼쪽 위 모서리의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="096b664396ce742a1ac7f90d022ad36a13a5f4a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the upper-left corner of the specified rectangle</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 지정된 사각형의 왼쪽 위 모서리의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="bf5a9e44035dd614415e9abb159802de2ba46f5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the upper-left corner of the specified rectangular area</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 지정된 직사각형 영역의 왼쪽 위 모서리의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="28c8c3f70ded9122707cf3b60e619a5b9668ae49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the upper-left corner of the specified rectangular region</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 지정된 직사각형 영역의 왼쪽 위 모서리의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="6983f178ad661f098551e2d85abbec1d7287d025" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the upper-left corner of the specified rectangular shape</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 지정된 직사각형 모양의 왼쪽 위 모서리의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="bb7c62d0d6b1804b1c70f7a60ecdfb7c18f7fc7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of the upper-left corner of this &lt;code&gt;Rectangle2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 이 &lt;code&gt;Rectangle2D&lt;/code&gt; 좌상 구석의 Y 좌표</target>
        </trans-unit>
        <trans-unit id="0c3b106914f120d94961dc2b6206a4e9f1f48eb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate of this &lt;code&gt;GlyphVector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; -은 Y 좌표가이 &lt;code&gt;GlyphVector&lt;/code&gt; 에 .</target>
        </trans-unit>
        <trans-unit id="43265ecb46adcc6786b2bd6b6c9409c28f01d87d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate to which to set the location of this &lt;code&gt;RoundRectangle2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 이 &lt;code&gt;RoundRectangle2D&lt;/code&gt; 의 위치를 ​​설정하는 Y 좌표</target>
        </trans-unit>
        <trans-unit id="82fd70bc3768aac8591dac214293ebde01fb7d85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y coordinate to which to set the upper-left corner of the imageable area of this &lt;code&gt;Paper&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 이 &lt;code&gt;Paper&lt;/code&gt; 의 이미지화 가능 영역의 왼쪽 위 모서리를 설정할 Y 좌표</target>
        </trans-unit>
        <trans-unit id="995eb6234f029eab83cc76c97632744c621a12df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y location of the pixel</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 픽셀의 Y 위치</target>
        </trans-unit>
        <trans-unit id="eb673ccf198050b0e71e90d3c645206690fa53a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y location of the specified pixel</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 지정된 픽셀의 Y 위치</target>
        </trans-unit>
        <trans-unit id="a1fff1b7873a0ac79f3894e9bcae91da2331a20b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y origin &amp;gt;= 0</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; -Y 원점&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="b2c861f13a0b73d77bdcfde717fa607594f37812" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y origin &lt;code&gt;&amp;gt;= 0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; -Y 원점 &lt;code&gt;&amp;gt;= 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4072d7444a8eec579f2310622de0ac72fa4f66cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the Y position at which to render this &lt;code&gt;GlyphVector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; -이 렌더링 할 때의 Y 위치 &lt;code&gt;GlyphVector&lt;/code&gt; 의를 .</target>
        </trans-unit>
        <trans-unit id="9038ee4adf2befe49b52c586cc95054031cad174" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the absolute y coordinate on screen</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 화면상의 절대 y 좌표</target>
        </trans-unit>
        <trans-unit id="357c72fb7240a818c9b48a8c5ee32f73beae57a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the affine y-coordinate.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 아핀 y 좌표.</target>
        </trans-unit>
        <trans-unit id="9bdf106800acdb2857260128f84df0f081fe6538" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the divisor</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 제수</target>
        </trans-unit>
        <trans-unit id="fdd1a6d0b7f1354745cc1c9d852152e481c3184d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the new</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 새로운</target>
        </trans-unit>
        <trans-unit id="6fa91edc1f1adeef63efde33f98f933598efce9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the new Y coordinate for the upper-left corner of this &lt;code&gt;Rectangle&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 이 &lt;code&gt;Rectangle&lt;/code&gt; 의 왼쪽 위 모서리에 대한 새로운 Y 좌표</target>
        </trans-unit>
        <trans-unit id="cc88c23de815ea6e5db596c91fa691c7111e0cbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the new Y coordinate of this &lt;code&gt;Point2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 이 &lt;code&gt;Point2D&lt;/code&gt; 의 새로운 Y 좌표</target>
        </trans-unit>
        <trans-unit id="d3865d53108cc5d823646d28798409f4b7de9863" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the new vertical location</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 새로운 수직 위치</target>
        </trans-unit>
        <trans-unit id="15ea023a134d1dbe6f35dafb75773392f2cb6a89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the ordinate coordinate</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 세로 좌표</target>
        </trans-unit>
        <trans-unit id="4112850221cef33eb8486842be36709fc13467ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the public key.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 공개 키.</target>
        </trans-unit>
        <trans-unit id="309bc3a5abc2db19e75f9777de052c99124b9eaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the second &lt;code&gt;boolean&lt;/code&gt; to compare</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 비교할 두 번째 &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="161e3c308a8925cc82cbb5c4fa3829a72aa0b2b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the second &lt;code&gt;byte&lt;/code&gt; to compare</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 비교할 두 번째 &lt;code&gt;byte&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d85e417ab370edd6ad9821564b0762ea2c50a463" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the second &lt;code&gt;char&lt;/code&gt; to compare</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 비교할 두 번째 &lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bbab71199151c2b745d2bb0259ed4909edde1d81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the second &lt;code&gt;int&lt;/code&gt; to compare</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 비교할 두 번째 &lt;code&gt;int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="489090c2183c5e7569c2b08d4724108901f8b07c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the second &lt;code&gt;long&lt;/code&gt; to compare</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 비교할 두 번째 &lt;code&gt;long&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8033598c479ff7abf72ee259e24aa7e1d7ca4da1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the second &lt;code&gt;short&lt;/code&gt; to compare</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 비교할 두 번째 &lt;code&gt;short&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="45d83d011223c8e59ffb7561ba79e0f300a2d36b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the second value</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 두 번째 값</target>
        </trans-unit>
        <trans-unit id="1e3faca92813236a4ca679691d0c6a11bb945b97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the second value to subtract from the first</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 첫 번째 값에서 뺄 두 번째 값</target>
        </trans-unit>
        <trans-unit id="f9bcd415cfb6cff1a3e74ce3928bce61c081134c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the specified Y coordinate</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 지정된 Y 좌표</target>
        </trans-unit>
        <trans-unit id="9b489234bfc0fa4427be0d7ee8ae290de6d69adf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the specified Y coordinate to be tested</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 테스트 할 지정된 Y 좌표</target>
        </trans-unit>
        <trans-unit id="058235110eb57fd45d4195ab7268a8a372286aab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the specified y coordinate</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 지정된 y 좌표</target>
        </trans-unit>
        <trans-unit id="de81af9310d857da8f5945f669d06afa83d13047" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the spring controlling the &lt;code&gt;y&lt;/code&gt; value of a component's location</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 구성 요소 위치 의 &lt;code&gt;y&lt;/code&gt; 값을 제어하는 스프링</target>
        </trans-unit>
        <trans-unit id="a9bc9e8da9e9a5215d019aefc313293b5f21b51f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the spring controlling the component's &lt;em&gt;y&lt;/em&gt; value</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 구성 요소의 &lt;em&gt;y&lt;/em&gt; 값을 제어하는 스프링</target>
        </trans-unit>
        <trans-unit id="5ff9276ba784756a856dab494cb72adfb9a631b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the spring value for the &lt;code&gt;y&lt;/code&gt; property</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - &lt;code&gt;y&lt;/code&gt; 속성 의 스프링 값</target>
        </trans-unit>
        <trans-unit id="5fdd2d2439a32d4daca75481045990c8ca6554e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the starting Y coordinate &amp;gt;= 0</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 시작 Y 좌표&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="25781bd92eb295c7c44fe2aef839aa6488d34b48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the starting Y coordinate &lt;code&gt;&amp;gt;= 0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 시작 Y 좌표 &lt;code&gt;&amp;gt;= 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa12e84e695277971c9afb330bbb139f2be5b3e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the starting Y position &amp;gt;= 0</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - the starting Y position &amp;gt;= 0</target>
        </trans-unit>
        <trans-unit id="1f0d11cb2432b484b7e6aaea8f1d13379b877576" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the starting Y position &lt;code&gt;&amp;gt;= 0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 시작 Y 위치 &lt;code&gt;&amp;gt;= 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70aa7b9ccff31c28f725b3f1ab7fc3834c5f343f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the user-space Y coordinate where the graphic is rendered</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 그래픽이 렌더링되는 사용자 공간 Y 좌표</target>
        </trans-unit>
        <trans-unit id="4e8463201be40aa4dace498055aa726aa7e60357" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the vertical &lt;code&gt;y&lt;/code&gt; coordinate for the mouse location</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 마우스 위치 의 수직 &lt;code&gt;y&lt;/code&gt; 좌표</target>
        </trans-unit>
        <trans-unit id="571788d2a0ab0245677b1e27645f01d1decd06d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the vertical component of the desired location</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 원하는 위치의 수직 구성 요소</target>
        </trans-unit>
        <trans-unit id="312ab6966766527544e90092792c9d33b754e680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the vertical coordinate for the cursor location</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 커서 위치의 수직 좌표</target>
        </trans-unit>
        <trans-unit id="2bcaac1851e523645dd36cfa7bc17e49e2e01e94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the vertical y coordinate for the mouse location</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 마우스 위치의 수직 y 좌표</target>
        </trans-unit>
        <trans-unit id="9271923d21b53e872434511c516700fb27232c2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the vertical y value to add to the current y coordinate position</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 현재 y 좌표 위치에 추가 할 수직 y 값</target>
        </trans-unit>
        <trans-unit id="e784b3436a3baeafc4a0d5e072b801d88bc8e2f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; -y 좌표</target>
        </trans-unit>
        <trans-unit id="be2b9b8df671761e4943799af2f50bb65591b77f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate in invoker's coordinate space at which the popup menu is to be displayed</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 팝업 메뉴가 표시 될 호출자 좌표 공간의 y 좌표</target>
        </trans-unit>
        <trans-unit id="32409a5c3aac2b5bd1d7c5dba5d5f2ad09918d39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate of tab</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 탭의 y 좌표</target>
        </trans-unit>
        <trans-unit id="813357d0410deb9a2c44fbd3df9f4c9e7fce8640" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate of the allocated area to render into.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 렌더링 할 할당 된 영역의 y 좌표</target>
        </trans-unit>
        <trans-unit id="c4c78c50873541cb5c1146f3c675ab236deb5593" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate of the area in device space for which colors are generated.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 색상이 생성되는 장치 공간 영역의 y 좌표.</target>
        </trans-unit>
        <trans-unit id="00108dd763bc5937e069b8e2567261fe78685f76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate of the list item allocation</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 목록 항목 할당의 y 좌표</target>
        </trans-unit>
        <trans-unit id="104352a81b2e8b6a166e1b89f8ecf64acd5e745b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate of the location in user space where the upper left corner of the image is rendered</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 이미지의 왼쪽 상단 모서리가 렌더링되는 사용자 공간 위치의 y 좌표</target>
        </trans-unit>
        <trans-unit id="cb56106f839ec44a7b13af5b32a8df58a92ff8c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate of the location where the &lt;code&gt;String&lt;/code&gt; should be rendered</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - &lt;code&gt;String&lt;/code&gt; 이 렌더링되어야 하는 위치의 y 좌표</target>
        </trans-unit>
        <trans-unit id="386d4f19ef1981e3c0148bdf276ac3788f2119bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate of the origin of the rotation</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 회전 원점의 y 좌표</target>
        </trans-unit>
        <trans-unit id="3b4feffc525e14c46fdf1bf71e9ec0d801de6e0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate of the popup's new position</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 팝업 새 위치의 y 좌표</target>
        </trans-unit>
        <trans-unit id="dc298c9370f6b0f075a07b61975821e22a451ee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate of the popup's new position in the screen's coordinate space</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 화면의 좌표 공간에서 팝업의 새 위치에 대한 y 좌표</target>
        </trans-unit>
        <trans-unit id="823b85d7b555a59729907d24dc23d31aa9c2c1c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate of the rectangle to be drawn.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 그릴 사각형의 y 좌표</target>
        </trans-unit>
        <trans-unit id="991c4ef6bd92718d5eec6775a69c5735f0818e67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate of the rectangle to be filled.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 채울 사각형의 y 좌표</target>
        </trans-unit>
        <trans-unit id="3e2e05c322a8f0f423b5c391cf3c10d318c5fb5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate of the rectangle to intersect the clip with</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 클립과 교차 할 사각형의 y 좌표</target>
        </trans-unit>
        <trans-unit id="66bdc8463d8eb2dc6a8d4853436593972982f29d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate of the rectangle to test against the clip</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 클립에 대해 테스트 할 사각형의 y 좌표</target>
        </trans-unit>
        <trans-unit id="f543ff62d0cf27124357ca04b7d002cedcaaffc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate of the upper left corner of the rectangle of pixels to be sent</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 전송할 픽셀 사각형의 왼쪽 상단 모서리의 y 좌표</target>
        </trans-unit>
        <trans-unit id="70f4a1276c545768d1d16c671a78aeff04fb5952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate of the upper left corner of the rectangle of pixels to retrieve from the image</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 이미지에서 검색 할 픽셀 사각형의 왼쪽 위 모서리에 대한 y 좌표</target>
        </trans-unit>
        <trans-unit id="4746c726ffe5710c4e246dee5d7d5c1764b584b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate position to popup the menu</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 메뉴를 팝업 할 y 좌표 위치</target>
        </trans-unit>
        <trans-unit id="8dba26ee86c041515903787c9acb0dc7e2d4a8db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate to draw the text at</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 텍스트를 그릴 y 좌표</target>
        </trans-unit>
        <trans-unit id="6e43be47479339ae520702784189d31fe1de102c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y coordinate where the iterator's text is to be rendered</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 반복자의 텍스트가 렌더링되는 y 좌표</target>
        </trans-unit>
        <trans-unit id="92357c8ae0a1e30a07fe53afe0ec5cff63a5364d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y location of the top of the rectangle to be extracted</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 추출 할 직사각형 상단의 y 위치</target>
        </trans-unit>
        <trans-unit id="062c3d8cd62539e6cf6ea7074e72a4547d90aa4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y location relative to this tabbedpane</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 이 탭 창에 상대적인 y 위치</target>
        </trans-unit>
        <trans-unit id="7f65e38c13de5e29c64ddba49dc6a6bcac2bd80d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y location to paint to</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 칠할 y 위치</target>
        </trans-unit>
        <trans-unit id="bc99caa2ff9bb6284c82b14d430792a820eb889a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y offset from the origin of this &lt;code&gt;TextLayout&lt;/code&gt;. This is in standard coordinates.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 본 원점으로부터의 오프셋 (Y) &lt;code&gt;TextLayout&lt;/code&gt; . 이것은 표준 좌표입니다.</target>
        </trans-unit>
        <trans-unit id="3e097fee2dc6a21def34f46d975ed52eba76cfec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y position in User Space where the glyphs should be rendered</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 글리프를 렌더링해야하는 사용자 공간의 y 위치</target>
        </trans-unit>
        <trans-unit id="ff33a1f6bc0fb19c275335d67f95d5307b3676b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y position of the border</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 테두리의 y 위치</target>
        </trans-unit>
        <trans-unit id="9583ad1e1ff57aedb7d29cbafb2fb8d42f0ceced" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y position of the lowered bevel</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 하향 경사의 y 위치</target>
        </trans-unit>
        <trans-unit id="590c49148f80c8f84203f528c09847f703baea32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y position of the painted border</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 그려진 테두리의 y 위치</target>
        </trans-unit>
        <trans-unit id="8bfb51233a6d426b33c05bde68e6c76aa4d9e377" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y position of the raised bevel</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 올린 경사의 y 위치</target>
        </trans-unit>
        <trans-unit id="d7f94b64ee1252af705d38c515fe6cb3b79754cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y position to scroll to</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 스크롤 할 y 위치</target>
        </trans-unit>
        <trans-unit id="6e9f4a038d70efc9c347b72511a8ed9c79532e37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y target location</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; -y 대상 위치</target>
        </trans-unit>
        <trans-unit id="54964c8410647aeb5b30e91a48e25f948ac26e84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y value of the dirty region</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 더티 영역의 y 값</target>
        </trans-unit>
        <trans-unit id="6b3d381229b540e0d4f72790994a418a36ac4cbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y value of the region to be painted</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 칠할 영역의 y 값</target>
        </trans-unit>
        <trans-unit id="ce7def3f6c7a4107916e5e37fd2c1a0bffe288cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y-coordinate</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; -y 좌표</target>
        </trans-unit>
        <trans-unit id="772826a3f84683b7762434469f44e7395ab550d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y-coordinate at which to render this &lt;code&gt;GlyphVector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 다음은이 렌더링 할 수있는 Y 좌표 &lt;code&gt;GlyphVector&lt;/code&gt; 의를 .</target>
        </trans-unit>
        <trans-unit id="df2795585536c89cfa9079abf31f79bb3e79b813" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y-coordinate at which to render this &lt;code&gt;TextLayout&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 다음은이 렌더링 할 수있는 Y 좌표 &lt;code&gt;TextLayout&lt;/code&gt; 와 .</target>
        </trans-unit>
        <trans-unit id="f752bc345a7df4f3a41ef94aba0506beba7b7e23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y-coordinate of the first rectangle</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 첫 번째 직사각형의 y 좌표</target>
        </trans-unit>
        <trans-unit id="85b3341d79ccdcebe751f6e90db45e4b813dde9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y-coordinate of the point</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 점의 y 좌표</target>
        </trans-unit>
        <trans-unit id="61f82d475f2d54061947dca1e32d826280d00a76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - the y-coordinate, represented using a &lt;code&gt;BigInteger&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - &lt;code&gt;BigInteger&lt;/code&gt; 를 사용하여 표현 된 y 좌표 .</target>
        </trans-unit>
        <trans-unit id="5c7e08c2e69e4aab8a61cae13f3b2553259983dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - top edge of the origin</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 원점의 상단 가장자리</target>
        </trans-unit>
        <trans-unit id="93c2270611868fabc6367620963a8515ee503e20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - y coordinate of the view location to convert &amp;gt;= 0</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 변환 할 뷰 위치의 y 좌표&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="03bf6edc7dd19d91118bb494564c3dc8d5d6114f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - y coordinate to draw at</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; - 그릴 y 좌표</target>
        </trans-unit>
        <trans-unit id="2b394711071d02069cf9b2e8bb466c45ed3885ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - y-coordinate</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; -y 좌표</target>
        </trans-unit>
        <trans-unit id="ee6bc1d9fc1f89cced8002b8f6862abf7d23cf1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; location of the origin of the printable area in the specified units</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; 지정된 단위로 인쇄 가능 영역의 원점 위치</target>
        </trans-unit>
        <trans-unit id="caa5b8bedd82f8e609598b743dfe804fccfbd04c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yAbs&lt;/code&gt; - The absolute vertical y coordinate for the mouse location It is allowed to pass negative values</source>
          <target state="translated">&lt;code&gt;yAbs&lt;/code&gt; - 마우스 위치에 대한 절대 수직 y 좌표 음수 값을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83cc2c9ac51c88ef151ea9788769388b00108198" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yAbs&lt;/code&gt; - an int specifying the vertical absolute position at which the event occurred, in pixels</source>
          <target state="translated">&lt;code&gt;yAbs&lt;/code&gt; - 이벤트가 발생한 수직 절대 위치를 픽셀 단위로 지정하는 정수</target>
        </trans-unit>
        <trans-unit id="35ee966d2903d36198d1710d1fafe1a7446556e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yAbs&lt;/code&gt; - the absolute vertical &lt;code&gt;y&lt;/code&gt; coordinate for the mouse location</source>
          <target state="translated">&lt;code&gt;yAbs&lt;/code&gt; - 마우스 위치에 대한 절대 수직 &lt;code&gt;y&lt;/code&gt; 좌표</target>
        </trans-unit>
        <trans-unit id="b0e8dccaa0ca23b8ea4531dbdab37df6954378ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yAbs&lt;/code&gt; - the absolute vertical y coordinate for the mouse location</source>
          <target state="translated">&lt;code&gt;yAbs&lt;/code&gt; - 마우스 위치에 대한 절대 수직 y 좌표</target>
        </trans-unit>
        <trans-unit id="bd2f1da3aeb255c1758f5ca4bff6e3d3746cd1a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yPoints&lt;/code&gt; - a an array of &lt;code&gt;y&lt;/code&gt; coordinates.</source>
          <target state="translated">&lt;code&gt;yPoints&lt;/code&gt; - &lt;code&gt;y&lt;/code&gt; 좌표 의 배열 .</target>
        </trans-unit>
        <trans-unit id="8cc7e39b623ad18d266407b32207c60e70541d1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yPoints&lt;/code&gt; - an array of</source>
          <target state="translated">&lt;code&gt;yPoints&lt;/code&gt; - 배열</target>
        </trans-unit>
        <trans-unit id="3b24356a1aa83d4a7adbf29e127a6d9895badc25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yPos&lt;/code&gt; - the location of the slider along the y axis</source>
          <target state="translated">&lt;code&gt;yPos&lt;/code&gt; -y 축을 따른 슬라이더의 위치</target>
        </trans-unit>
        <trans-unit id="b405070775da4b4149b6f2cce33908cf297572c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - The daylight saving starting year.</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; - 일광은 올해부터 절약.</target>
        </trans-unit>
        <trans-unit id="17685315f536727d7efece4b7334ee5a18664b9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - The year in the given date.</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; - 주어진 날짜의 연도입니다.</target>
        </trans-unit>
        <trans-unit id="ca9a43953b47ae790d460dca4e356bf818ff3d19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - Year of &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; - &lt;code&gt;Duration&lt;/code&gt; 연도 .</target>
        </trans-unit>
        <trans-unit id="60f463cba0428a2a51d6be47c5339cbc1df4d497" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; -의 &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; 의 날을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5fc686e559ec5c2b8622153840cd89720a8924a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - the &lt;a href=&quot;calendar#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt; value</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; - &lt;a href=&quot;calendar#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt; 값</target>
        </trans-unit>
        <trans-unit id="a602e14acf624ec162cc5f110d9a6d62e95391c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - the given year.</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; - 주어진 연도.</target>
        </trans-unit>
        <trans-unit id="270f9ea90175cd72f31ea3e9b50e3109391a33ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - the value used to set the &lt;code&gt;YEAR&lt;/code&gt; calendar field in the calendar.</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; - 값은 설정하는 데 사용 &lt;code&gt;YEAR&lt;/code&gt; 달력에 달력 필드.</target>
        </trans-unit>
        <trans-unit id="ee19c380a21b0891ce6982cc02a609dda4f71e3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - the value used to set the &lt;code&gt;YEAR&lt;/code&gt; calendar field.</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; - &lt;code&gt;YEAR&lt;/code&gt; 달력 필드 를 설정하는 데 사용되는 값 입니다.</target>
        </trans-unit>
        <trans-unit id="231b4e066af308ac9b1e83883c574777e719bb08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - the year in the given date.</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; - 주어진 날짜의 연도.</target>
        </trans-unit>
        <trans-unit id="465d9fa0bad12ebb47bad1ee64f4bfc34602c18e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - the year minus 1900</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; -1900을 뺀 연도</target>
        </trans-unit>
        <trans-unit id="19fa2e2994e838cbec25223491c0bf55530326e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - the year minus 1900.</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; -1900을 뺀 연도.</target>
        </trans-unit>
        <trans-unit id="d58dd2c9ac395b496625c9298870083bc1bf86fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - the year minus 1900; must be 0 to 8099. (Note that 8099 is 9999 minus 1900.)</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; -1900 년을 뺀 연도; 0에서 8099 사이 여야합니다. (8099는 9999에서 1900을 뺀 값입니다.)</target>
        </trans-unit>
        <trans-unit id="cc0f06faf6630dfa85ad1c5bc58f793281286e73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - the year to check</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; - 확인할 연도</target>
        </trans-unit>
        <trans-unit id="746d52b27d612db4e54d2ec401322f6d2615c803" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - the year to create a transition for, not null</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; - 전환을 생성 할 연도, null이 아님</target>
        </trans-unit>
        <trans-unit id="458627b6dac7c41e5bd56ae80f12861c1a440be0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - the year to represent, from MIN_YEAR to MAX_YEAR</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; -MIN_YEAR에서 MAX_YEAR까지 나타내는 연도</target>
        </trans-unit>
        <trans-unit id="ca83c5e3d957ddd43048c48fcbb356257bc71825" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - the year to set in the result, from MIN_YEAR to MAX_YEAR</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; - 올해는 MIN_YEAR에서 MAX_YEAR에, 결과에 설정합니다</target>
        </trans-unit>
        <trans-unit id="bf8541aa39046417ecb35d9dd5f36f38b01bea00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - the year to set in the returned year-month, from MIN_YEAR to MAX_YEAR</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; -MIN_YEAR에서 MAX_YEAR까지 반환 된 년-월에 설정할 연도</target>
        </trans-unit>
        <trans-unit id="8834da0b94c36240b3e1c9c90d6596548fef7399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - the year to use, from MIN_YEAR to MAX_YEAR</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; - 사용에 년, MIN_YEAR에서 MAX_YEAR에</target>
        </trans-unit>
        <trans-unit id="a4fe3a939220dc6cf326f9984c6b6399ed9ebd6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - the year to validate</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; - 유효성을 검사 해</target>
        </trans-unit>
        <trans-unit id="5f02fa675c2421284753ac1de7b43de9816b5aa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - the year value.</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; - 연도 값.</target>
        </trans-unit>
        <trans-unit id="408ed9d8d9388dff157719edc0562a6864a4aff5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - value constraints are summarized in &lt;a href=&quot;#datetimefield-year&quot;&gt;year field of date/time field mapping table&lt;/a&gt;. If year is &lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt;&lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt;&lt;/a&gt;, then eon is set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; 값 제약은 &lt;a href=&quot;#datetimefield-year&quot;&gt;날짜 / 시간 필드 매핑 테이블의 연도 필드에&lt;/a&gt; 요약되어 있습니다. year가 &lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt; &lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt; &lt;/a&gt; 이면 eon이 &lt;code&gt;null&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="a9c45d989076bf201c154f22c3b93de42c39f5d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; - value constraints summarized in &lt;a href=&quot;#datetimefield-year&quot;&gt;year field of date/time field mapping table&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; - 치의 제약에 요약 &lt;a href=&quot;#datetimefield-year&quot;&gt;날짜 / 시간 필드 대응표의 해 필드&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dfd632fc3560ab69c792f49487725bdc833c5510" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yearOfEra&lt;/code&gt; - the ISO year-of-era</source>
          <target state="translated">&lt;code&gt;yearOfEra&lt;/code&gt; -ISO 시대</target>
        </trans-unit>
        <trans-unit id="ffc1d67ee855472333b9c784df940554af58e105" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yearOfEra&lt;/code&gt; - the Japanese year-of-era</source>
          <target state="translated">&lt;code&gt;yearOfEra&lt;/code&gt; - 일본 시대</target>
        </trans-unit>
        <trans-unit id="c1689c6e6f6ec1d8b7ddba160c40b37106ff276c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yearOfEra&lt;/code&gt; - the chronology year-of-era</source>
          <target state="translated">&lt;code&gt;yearOfEra&lt;/code&gt; - 연대기 연대기</target>
        </trans-unit>
        <trans-unit id="5ef7594da5f7006fde85a866d45c2c11f8a9132c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yearOfEra&lt;/code&gt; - the year-of-era</source>
          <target state="translated">&lt;code&gt;yearOfEra&lt;/code&gt; - 시대의 해</target>
        </trans-unit>
        <trans-unit id="c0538a8d133c83c763e20b90adecba8ca302a7c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;years&lt;/code&gt; - of this &lt;code&gt;Duration&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;years&lt;/code&gt; -이 &lt;code&gt;Duration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a56d6d0622fe479a2925261d821053584ca511f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;years&lt;/code&gt; - the amount of years, may be negative</source>
          <target state="translated">&lt;code&gt;years&lt;/code&gt; -년 수, 음수 일 수 있음</target>
        </trans-unit>
        <trans-unit id="c15f974e0ff20a0525526b688542f3da6bd8bc74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;years&lt;/code&gt; - the number of years, may be negative</source>
          <target state="translated">&lt;code&gt;years&lt;/code&gt; -년 수, 음수 일 수 있음</target>
        </trans-unit>
        <trans-unit id="2a397561f1e14284678fb87de88c2ce6c134e8bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;years&lt;/code&gt; - the number of years, positive or negative</source>
          <target state="translated">&lt;code&gt;years&lt;/code&gt; -년 수, 양수 또는 음수</target>
        </trans-unit>
        <trans-unit id="e75bba4d21551f9b4b4246bee1c4696df3d5118d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;years&lt;/code&gt; - the years to add, may be negative</source>
          <target state="translated">&lt;code&gt;years&lt;/code&gt; - 추가 할 연도, 음수 일 수 있음</target>
        </trans-unit>
        <trans-unit id="bcba31004c7f557947ffd4fd6d834d7084c70b92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;years&lt;/code&gt; - the years to represent, may be negative</source>
          <target state="translated">&lt;code&gt;years&lt;/code&gt; - 대표 할 연도, 음수 일 수 있음</target>
        </trans-unit>
        <trans-unit id="6ca6fc35cf0cf3da74ad3712b1163809e391e300" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;years&lt;/code&gt; - the years to subtract, may be negative</source>
          <target state="translated">&lt;code&gt;years&lt;/code&gt; - 뺄 년은 음수가 될 수 있습니다</target>
        </trans-unit>
        <trans-unit id="1a9183d0ed90c9bb484c7beb3f6134a04fbc1a21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yearsToAdd&lt;/code&gt; - the years to add, may be negative</source>
          <target state="translated">&lt;code&gt;yearsToAdd&lt;/code&gt; - 추가 할 연도는 음수 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9cc562ca57bcc296a28ddd54d863c3681cdfeaa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yearsToAdd&lt;/code&gt; - the years to add, positive or negative</source>
          <target state="translated">&lt;code&gt;yearsToAdd&lt;/code&gt; -더할 연도, 양수 또는 음수</target>
        </trans-unit>
        <trans-unit id="bc86e44652b472b7c75154e415af1c39af138353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yearsToSubtract&lt;/code&gt; - the years to subtract, may be negative</source>
          <target state="translated">&lt;code&gt;yearsToSubtract&lt;/code&gt; - 뺄 연도는 음수 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b20ef609c7b1a09152e04cddce7d226fe8353c13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yearsToSubtract&lt;/code&gt; - the years to subtract, positive or negative</source>
          <target state="translated">&lt;code&gt;yearsToSubtract&lt;/code&gt; - 뺄 연도, 양수 또는 음수</target>
        </trans-unit>
        <trans-unit id="f7db0abc584231d0bbb1a62d9e11dafeeaaf0795" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ypoints&lt;/code&gt; - an array of Y coordinates</source>
          <target state="translated">&lt;code&gt;ypoints&lt;/code&gt; -Y 좌표의 배열</target>
        </trans-unit>
        <trans-unit id="b3a90c1d1cb3be5f5dd84aaf12d9f3d186fe5b76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yyyy&lt;/code&gt; is the year, as four decimal digits.</source>
          <target state="translated">&lt;code&gt;yyyy&lt;/code&gt; 는 연도 (십진수 4 자리)입니다.</target>
        </trans-unit>
        <trans-unit id="03c163dc2392f53895c22ba24591e434f5ffb8f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;z&lt;/code&gt; - the new value for the field of &lt;code&gt;obj&lt;/code&gt; being modified</source>
          <target state="translated">&lt;code&gt;z&lt;/code&gt; - 수정되는 &lt;code&gt;obj&lt;/code&gt; 필드의 새 값</target>
        </trans-unit>
        <trans-unit id="a039def1ae645bc3fe2acfb59704bc106f640820" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;z&lt;/code&gt; - the new value of the indexed component</source>
          <target state="translated">&lt;code&gt;z&lt;/code&gt; - 색인화 된 컴포넌트의 새 값</target>
        </trans-unit>
        <trans-unit id="bb7ddda33f9add777a3d65a0e47a989f60a890fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zdt&lt;/code&gt; - the zoned date-time object to convert</source>
          <target state="translated">&lt;code&gt;zdt&lt;/code&gt; - 변환 할 존 날짜-시간 객체</target>
        </trans-unit>
        <trans-unit id="d3ff666b48509061d71ee046827b29781fbb17a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ze&lt;/code&gt; - the &lt;code&gt;ZipEntry&lt;/code&gt; object to create the &lt;code&gt;JarEntry&lt;/code&gt; from</source>
          <target state="translated">&lt;code&gt;ze&lt;/code&gt; - &lt;code&gt;ZipEntry&lt;/code&gt; 객체는 만들 수 &lt;code&gt;JarEntry&lt;/code&gt; 의 의를</target>
        </trans-unit>
        <trans-unit id="7a93f9f4f4451a4a66e65054dcda1f69a3827470" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ze&lt;/code&gt; - the ZIP/JAR entry to be written</source>
          <target state="translated">&lt;code&gt;ze&lt;/code&gt; - the ZIP/JAR entry to be written</target>
        </trans-unit>
        <trans-unit id="690a7cc016346739c5c9715f39048a23b22f3299" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ze&lt;/code&gt; - the zip file entry</source>
          <target state="translated">&lt;code&gt;ze&lt;/code&gt; - the zip file entry</target>
        </trans-unit>
        <trans-unit id="4347acafd9caf26efddb85bf05977f1a109ba2a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zeroDigit&lt;/code&gt; - the character for zero</source>
          <target state="translated">&lt;code&gt;zeroDigit&lt;/code&gt; - the character for zero</target>
        </trans-unit>
        <trans-unit id="26399468e6bd3f4cdaac37164a63a7fb13e99461" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zeroDigit&lt;/code&gt; - the character used for zero</source>
          <target state="translated">&lt;code&gt;zeroDigit&lt;/code&gt; - the character used for zero</target>
        </trans-unit>
        <trans-unit id="574476b6e45628a25836288c234886b8bfe37a8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zone&lt;/code&gt; - the &lt;a href=&quot;timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;zone&lt;/code&gt; - the &lt;a href=&quot;timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49c1a48a9c3edefde0055f3a8d9b837772739de3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zone&lt;/code&gt; - the child view desired to be set to an unloaded state.</source>
          <target state="translated">&lt;code&gt;zone&lt;/code&gt; - the child view desired to be set to an unloaded state.</target>
        </trans-unit>
        <trans-unit id="7a663e0e860be335b4cc9f09b5c61b2ff02805c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zone&lt;/code&gt; - the child view that was just loaded.</source>
          <target state="translated">&lt;code&gt;zone&lt;/code&gt; - the child view that was just loaded.</target>
        </trans-unit>
        <trans-unit id="2a17ce82864bd4b125baee3f1f5e91011f80c234" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zone&lt;/code&gt; - the given new time zone.</source>
          <target state="translated">&lt;code&gt;zone&lt;/code&gt; - the given new time zone.</target>
        </trans-unit>
        <trans-unit id="4b5b84378b4ede1427c1d17c660513f32331ad84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zone&lt;/code&gt; - the given time zone.</source>
          <target state="translated">&lt;code&gt;zone&lt;/code&gt; - the given time zone.</target>
        </trans-unit>
        <trans-unit id="a0482399113bccdc6731bcd8976c7f2ba08d559f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zone&lt;/code&gt; - the new default &lt;code&gt;TimeZone&lt;/code&gt;, or null</source>
          <target state="translated">&lt;code&gt;zone&lt;/code&gt; - the new default &lt;code&gt;TimeZone&lt;/code&gt; , or null</target>
        </trans-unit>
        <trans-unit id="8f2cc5bd42d2e2e8615f6eaa3d568786b4bf6434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zone&lt;/code&gt; - the new override zone, null if no override</source>
          <target state="translated">&lt;code&gt;zone&lt;/code&gt; - the new override zone, null if no override</target>
        </trans-unit>
        <trans-unit id="32064fc6a62e50fab3c1255ce5663fe1ab4575ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zone&lt;/code&gt; - the time zone to use</source>
          <target state="translated">&lt;code&gt;zone&lt;/code&gt; - the time zone to use</target>
        </trans-unit>
        <trans-unit id="7a9a6ee34e86485af42a5d179d1341554f9334a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zone&lt;/code&gt; - the time-zone to change to, not null</source>
          <target state="translated">&lt;code&gt;zone&lt;/code&gt; - the time-zone to change to, not null</target>
        </trans-unit>
        <trans-unit id="98182037a2012654cbc2a8b30dd7f7dab20f29e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zone&lt;/code&gt; - the time-zone to use to convert the instant to date-time, not null</source>
          <target state="translated">&lt;code&gt;zone&lt;/code&gt; - the time-zone to use to convert the instant to date-time, not null</target>
        </trans-unit>
        <trans-unit id="57c21f0aa695416f2a5039b9ee07478d8d237380" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zone&lt;/code&gt; - the time-zone to use, not null</source>
          <target state="translated">&lt;code&gt;zone&lt;/code&gt; - the time-zone to use, not null</target>
        </trans-unit>
        <trans-unit id="74b9312807c8d250feee1bcb451af870c5a5cdae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zone&lt;/code&gt; - the time-zone, not null</source>
          <target state="translated">&lt;code&gt;zone&lt;/code&gt; - the time-zone, not null</target>
        </trans-unit>
        <trans-unit id="3d9e4e085feda0f091d1a10d5b18b790c9b87e8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zone&lt;/code&gt; - the time-zone, which may be an offset, not null</source>
          <target state="translated">&lt;code&gt;zone&lt;/code&gt; - the time-zone, which may be an offset, not null</target>
        </trans-unit>
        <trans-unit id="21982db09cb66d469d1ad9aae845d3a6aa0fe8ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zone&lt;/code&gt; - the zone</source>
          <target state="translated">&lt;code&gt;zone&lt;/code&gt; - the zone</target>
        </trans-unit>
        <trans-unit id="8e21ace349f09e582d57418b8f143dd67ccd10e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zone&lt;/code&gt; - the zone ID to use, not null</source>
          <target state="translated">&lt;code&gt;zone&lt;/code&gt; - the zone ID to use, not null</target>
        </trans-unit>
        <trans-unit id="8e58f075bf5d8c83d1e5954b9987d3de858cec12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zone&lt;/code&gt; - the zone to combine with, not null</source>
          <target state="translated">&lt;code&gt;zone&lt;/code&gt; - the zone to combine with, not null</target>
        </trans-unit>
        <trans-unit id="f5ee1b25950521597779c311b0f744ed3fde4f90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zoneId&lt;/code&gt; - a &lt;a href=&quot;../time/zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt; from which the time zone ID is obtained</source>
          <target state="translated">&lt;code&gt;zoneId&lt;/code&gt; - a &lt;a href=&quot;../time/zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; &lt;/a&gt; from which the time zone ID is obtained</target>
        </trans-unit>
        <trans-unit id="bf20e1b1f62a76f74a4e0f03da4c3abf78db3dcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zoneId&lt;/code&gt; - the time-zone ID, not null</source>
          <target state="translated">&lt;code&gt;zoneId&lt;/code&gt; - the time-zone ID, not null</target>
        </trans-unit>
        <trans-unit id="c4b3f1fbf35b8b37726bbe315da149f444409423" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zoneId&lt;/code&gt; - the zone ID as defined by &lt;code&gt;ZoneId&lt;/code&gt;, not null</source>
          <target state="translated">&lt;code&gt;zoneId&lt;/code&gt; - the zone ID as defined by &lt;code&gt;ZoneId&lt;/code&gt; , not null</target>
        </trans-unit>
        <trans-unit id="bd2c6b5796d0627c5f07f87a194733c0a3acf300" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zoneOffset&lt;/code&gt; - the zone offset, not null</source>
          <target state="translated">&lt;code&gt;zoneOffset&lt;/code&gt; - the zone offset, not null</target>
        </trans-unit>
        <trans-unit id="0a4d3880a9ea862256d5b0ddb8d0f15928cce1d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zoneStrings[i][0]&lt;/code&gt; - time zone ID</source>
          <target state="translated">&lt;code&gt;zoneStrings[i][0]&lt;/code&gt; - time zone ID</target>
        </trans-unit>
        <trans-unit id="2d2e27ebf0bb3e54baeb1b1688738f369fa6fc23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zoneStrings[i][1]&lt;/code&gt; - long name of zone in standard time</source>
          <target state="translated">&lt;code&gt;zoneStrings[i][1]&lt;/code&gt; - long name of zone in standard time</target>
        </trans-unit>
        <trans-unit id="a6b89fc4f2991cf8c21f47da61cb24764e9da6e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zoneStrings[i][2]&lt;/code&gt; - short name of zone in standard time</source>
          <target state="translated">&lt;code&gt;zoneStrings[i][2]&lt;/code&gt; - short name of zone in standard time</target>
        </trans-unit>
        <trans-unit id="0f7d1bef6ccf53eff6fde9797b863ace1304749e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zoneStrings[i][3]&lt;/code&gt; - long name of zone in daylight saving time</source>
          <target state="translated">&lt;code&gt;zoneStrings[i][3]&lt;/code&gt; - long name of zone in daylight saving time</target>
        </trans-unit>
        <trans-unit id="7c769e2108e3a35d00be3fc721ce3adbb1999232" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zoneStrings[i][4]&lt;/code&gt; - short name of zone in daylight saving time</source>
          <target state="translated">&lt;code&gt;zoneStrings[i][4]&lt;/code&gt; - short name of zone in daylight saving time</target>
        </trans-unit>
        <trans-unit id="39c3fe123315908d7299301049a428cfa749a0e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zzz&lt;/code&gt; is the time zone (and may reflect daylight saving time). Standard time zone abbreviations include those recognized by the method &lt;code&gt;parse&lt;/code&gt;. If time zone information is not available, then &lt;code&gt;zzz&lt;/code&gt; is empty - that is, it consists of no characters at all.</source>
          <target state="translated">&lt;code&gt;zzz&lt;/code&gt; is the time zone (and may reflect daylight saving time). Standard time zone abbreviations include those recognized by the method &lt;code&gt;parse&lt;/code&gt; . If time zone information is not available, then &lt;code&gt;zzz&lt;/code&gt; is empty - that is, it consists of no characters at all.</target>
        </trans-unit>
        <trans-unit id="0a784154ff064cbc11a4a38d5bcac2cca791a98e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;})&lt;/code&gt; and &lt;code&gt;(??{&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;})&lt;/code&gt; and &lt;code&gt;(??{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4392f0fcfc6d35bc9959d96be75aa17c4f1f47f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;})&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;})&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="e50f5d7a3d72bd26fb139aa1525c1e07287bcbc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;}&lt;/code&gt; does not match if the input has that property.</source>
          <target state="translated">&lt;code&gt;}&lt;/code&gt; does not match if the input has that property.</target>
        </trans-unit>
        <trans-unit id="680756cb4170f1e566402381895b555e54b0b376" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;}&lt;/code&gt; for &lt;a href=&quot;#groupname&quot;&gt;named-capturing group&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;}&lt;/code&gt; for &lt;a href=&quot;#groupname&quot;&gt;named-capturing group&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e35a94f14dd0f7e34bb15c2c855e89e22f6d44ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;}&lt;/code&gt; for a Unicode character by its name.</source>
          <target state="translated">&lt;code&gt;}&lt;/code&gt; for a Unicode character by its name.</target>
        </trans-unit>
        <trans-unit id="e3384b206c0bf74bc5ee6e0e28c5c81e7a0455bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;}&lt;/code&gt; for the</source>
          <target state="translated">&lt;code&gt;}&lt;/code&gt; for the</target>
        </trans-unit>
        <trans-unit id="9caf672a036ee2e6615785b1fbf45821e09833af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;}&lt;/code&gt; matches if the input has the property</source>
          <target state="translated">&lt;code&gt;}&lt;/code&gt; matches if the input has the property</target>
        </trans-unit>
        <trans-unit id="b049baeef5b366b01a245c57c044e403663d2224" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;}&lt;/code&gt; or &lt;code&gt;$&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;}&lt;/code&gt; or &lt;code&gt;$&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3e47aba3a9bd53bb41d970a1e0200393d1727e6" translate="yes" xml:space="preserve">
          <source>&lt;em id=&quot;privacc&quot;&gt;Discussion of private access:&lt;/em&gt; We say that a lookup has &lt;em&gt;private access&lt;/em&gt; if its &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;lookup modes&lt;/a&gt; include the possibility of accessing &lt;code&gt;private&lt;/code&gt; members. As documented in the relevant methods elsewhere, only lookups with private access possess the following capabilities:</source>
          <target state="translated">&lt;em id=&quot;privacc&quot;&gt;Discussion of private access:&lt;/em&gt; We say that a lookup has &lt;em&gt;private access&lt;/em&gt; if its &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;lookup modes&lt;/a&gt; include the possibility of accessing &lt;code&gt;private&lt;/code&gt; members. As documented in the relevant methods elsewhere, only lookups with private access possess the following capabilities:</target>
        </trans-unit>
        <trans-unit id="eb29217818880d067977bb3340b44d21a23898e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt; Direct handoffs.&lt;/em&gt; A good default choice for a work queue is a &lt;a href=&quot;synchronousqueue&quot;&gt;&lt;code&gt;SynchronousQueue&lt;/code&gt;&lt;/a&gt; that hands off tasks to threads without otherwise holding them. Here, an attempt to queue a task will fail if no threads are immediately available to run it, so a new thread will be constructed. This policy avoids lockups when handling sets of requests that might have internal dependencies. Direct handoffs generally require unbounded maximumPoolSizes to avoid rejection of new submitted tasks. This in turn admits the possibility of unbounded thread growth when commands continue to arrive on average faster than they can be processed.</source>
          <target state="translated">&lt;em&gt; Direct handoffs.&lt;/em&gt; A good default choice for a work queue is a &lt;a href=&quot;synchronousqueue&quot;&gt; &lt;code&gt;SynchronousQueue&lt;/code&gt; &lt;/a&gt; that hands off tasks to threads without otherwise holding them. Here, an attempt to queue a task will fail if no threads are immediately available to run it, so a new thread will be constructed. This policy avoids lockups when handling sets of requests that might have internal dependencies. Direct handoffs generally require unbounded maximumPoolSizes to avoid rejection of new submitted tasks. This in turn admits the possibility of unbounded thread growth when commands continue to arrive on average faster than they can be processed.</target>
        </trans-unit>
        <trans-unit id="b8bc2aa5df18a1a7507e893f26a5550eed9abf50" translate="yes" xml:space="preserve">
          <source>&lt;em&gt; Unbounded queues.&lt;/em&gt; Using an unbounded queue (for example a &lt;a href=&quot;linkedblockingqueue&quot;&gt;&lt;code&gt;LinkedBlockingQueue&lt;/code&gt;&lt;/a&gt; without a predefined capacity) will cause new tasks to wait in the queue when all corePoolSize threads are busy. Thus, no more than corePoolSize threads will ever be created. (And the value of the maximumPoolSize therefore doesn't have any effect.) This may be appropriate when each task is completely independent of others, so tasks cannot affect each others execution; for example, in a web page server. While this style of queuing can be useful in smoothing out transient bursts of requests, it admits the possibility of unbounded work queue growth when commands continue to arrive on average faster than they can be processed.</source>
          <target state="translated">&lt;em&gt;무제한 대기열.&lt;/em&gt; 무제한 큐 (예 : 사전 정의 된 용량이없는 &lt;a href=&quot;linkedblockingqueue&quot;&gt; &lt;code&gt;LinkedBlockingQueue&lt;/code&gt; &lt;/a&gt; )를 사용하면 모든 corePoolSize 스레드가 사용 중일 때 새 태스크가 큐에서 대기합니다. 따라서 corePoolSize 스레드 만 생성됩니다. (그리고 maximumPoolSize의 값은 영향을 미치지 않습니다.) 이것은 각 작업이 다른 작업과 완전히 독립적 일 때 적절할 수 있으므로 작업이 서로의 실행에 영향을 줄 수 없습니다. 예를 들어, 웹 페이지 서버에서. 이 스타일의 큐잉은 일시적인 요청 버스트를 완화하는 데 유용 할 수 있지만 명령이 처리 할 수있는 것보다 평균적으로 더 빨리 도달 할 때 제한없는 작업 큐 증가 가능성을 인정합니다.</target>
        </trans-unit>
        <trans-unit id="cbff88cf51415c0f1c218395be6b4f4c6294f6a4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&quot;Key pressed&quot; and &quot;key released&quot; events&lt;/em&gt; are lower-level and depend on the platform and keyboard layout. They are generated whenever a key is pressed or released, and are the only way to find out about keys that don't generate character input (e.g., action keys, modifier keys, etc.). The key being pressed or released is indicated by the &lt;code&gt;getKeyCode&lt;/code&gt; and &lt;code&gt;getExtendedKeyCode&lt;/code&gt; methods, which return a virtual key code.</source>
          <target state="translated">&lt;em&gt;&quot;Key pressed&quot; and &quot;key released&quot; events&lt;/em&gt; are lower-level and depend on the platform and keyboard layout. They are generated whenever a key is pressed or released, and are the only way to find out about keys that don't generate character input (e.g., action keys, modifier keys, etc.). The key being pressed or released is indicated by the &lt;code&gt;getKeyCode&lt;/code&gt; and &lt;code&gt;getExtendedKeyCode&lt;/code&gt; methods, which return a virtual key code.</target>
        </trans-unit>
        <trans-unit id="94eec9fdd6835d2cd68ce4492668ca62b692c4a4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&quot;Key typed&quot; events&lt;/em&gt; are higher-level and generally do not depend on the platform or keyboard layout. They are generated when a Unicode character is entered, and are the preferred way to find out about character input. In the simplest case, a key typed event is produced by a single key press (e.g., 'a'). Often, however, characters are produced by series of key presses (e.g., 'shift' + 'a'), and the mapping from key pressed events to key typed events may be many-to-one or many-to-many. Key releases are not usually necessary to generate a key typed event, but there are some cases where the key typed event is not generated until a key is released (e.g., entering ASCII sequences via the Alt-Numpad method in Windows). No key typed events are generated for keys that don't generate Unicode characters (e.g., action keys, modifier keys, etc.).</source>
          <target state="translated">&lt;em&gt;&quot;Key typed&quot; events&lt;/em&gt; are higher-level and generally do not depend on the platform or keyboard layout. They are generated when a Unicode character is entered, and are the preferred way to find out about character input. In the simplest case, a key typed event is produced by a single key press (e.g., 'a'). Often, however, characters are produced by series of key presses (e.g., 'shift' + 'a'), and the mapping from key pressed events to key typed events may be many-to-one or many-to-many. Key releases are not usually necessary to generate a key typed event, but there are some cases where the key typed event is not generated until a key is released (e.g., entering ASCII sequences via the Alt-Numpad method in Windows). No key typed events are generated for keys that don't generate Unicode characters (e.g., action keys, modifier keys, etc.).</target>
        </trans-unit>
        <trans-unit id="0ba7690fd1d1e16bc5edd7bd96813de349fadad5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Note: JVM internal methods named &lt;code&gt;&quot;&amp;lt;init&amp;gt;&quot;&lt;/code&gt; are not visible to this API, even though the &lt;code&gt;invokespecial&lt;/code&gt; instruction can refer to them in special circumstances. Use &lt;a href=&quot;#findConstructor(java.lang.Class,java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;findConstructor&lt;/code&gt;&lt;/a&gt; to access instance initialization methods in a safe manner.)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(Note: JVM internal methods named &lt;code&gt;&quot;&amp;lt;init&amp;gt;&quot;&lt;/code&gt; are not visible to this API, even though the &lt;code&gt;invokespecial&lt;/code&gt; instruction can refer to them in special circumstances. Use &lt;a href=&quot;#findConstructor(java.lang.Class,java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;findConstructor&lt;/code&gt; &lt;/a&gt; to access instance initialization methods in a safe manner.)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3adb85f91570b2dd24ad8bc52375538c90a65cc2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Note: JVM internal methods named &lt;code&gt;&quot;&amp;lt;init&amp;gt;&quot;&lt;/code&gt; are not visible to this API, even though the &lt;code&gt;invokespecial&lt;/code&gt; instruction can refer to them in special circumstances. Use &lt;a href=&quot;methodhandles.lookup#findConstructor-java.lang.Class-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;findConstructor&lt;/code&gt;&lt;/a&gt; to access instance initialization methods in a safe manner.)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(참고 : 특별한 상황에서 &lt;code&gt;invokespecial&lt;/code&gt; 명령이이를 참조 할 수 있지만 &lt;code&gt;&quot;&amp;lt;init&amp;gt;&quot;&lt;/code&gt; 라는 이름의 JVM 내부 메소드 는이 API에 표시되지 않습니다 . 안전한 방식으로 인스턴스 초기화 메소드에 액세스 하려면 &lt;a href=&quot;methodhandles.lookup#findConstructor-java.lang.Class-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;findConstructor&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c23d6764c72a06810736f98e2b020b9d1d4154a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Note: The invoker method is not available via the Core Reflection API. An attempt to call &lt;a href=&quot;../reflect/method#invoke(java.lang.Object,java.lang.Object...)&quot;&gt;java.lang.reflect.Method.invoke&lt;/a&gt; on the declared &lt;code&gt;invokeExact&lt;/code&gt; or &lt;code&gt;invoke&lt;/code&gt; method will raise an &lt;a href=&quot;../unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;.)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(Note: The invoker method is not available via the Core Reflection API. An attempt to call &lt;a href=&quot;../reflect/method#invoke(java.lang.Object,java.lang.Object...)&quot;&gt;java.lang.reflect.Method.invoke&lt;/a&gt; on the declared &lt;code&gt;invokeExact&lt;/code&gt; or &lt;code&gt;invoke&lt;/code&gt; method will raise an &lt;a href=&quot;../unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;.)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="15dce4bd9d373b2401e403a6dadbb3c93b4ced8e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Note: The invoker method is not available via the Core Reflection API. An attempt to call &lt;a href=&quot;../reflect/method#invoke-java.lang.Object-java.lang.Object...-&quot;&gt;java.lang.reflect.Method.invoke&lt;/a&gt; on the declared &lt;code&gt;invokeExact&lt;/code&gt; or &lt;code&gt;invoke&lt;/code&gt; method will raise an &lt;a href=&quot;../unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;.)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(참고 : Core Reflection API를 통해 호출자 메소드를 사용할 수 없습니다. 선언 된 &lt;code&gt;invokeExact&lt;/code&gt; 또는 &lt;code&gt;invoke&lt;/code&gt; 메소드 에서 &lt;a href=&quot;../reflect/method#invoke-java.lang.Object-java.lang.Object...-&quot;&gt;java.lang.reflect.Method.invoke&lt;/a&gt; 를 호출 하면 &lt;a href=&quot;../unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다.)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c7ea6b5b7f21aa1783b37dfdef1770964312ff40" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(in minutes)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(in minutes)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b64c11109406340f3d74c6c6d4b89affe1779c3a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;*&lt;/em&gt;conversion loss of information. It is not possible to represent a &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt; daylight savings timezone id in the XML Schema 1.0 date/time datatype representation.</source>
          <target state="translated">&lt;em&gt;*&lt;/em&gt;conversion loss of information. It is not possible to represent a &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt; daylight savings timezone id in the XML Schema 1.0 date/time datatype representation.</target>
        </trans-unit>
        <trans-unit id="2d6ab19901e45d348436630201161f9cee704fd1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a id=&quot;relative_name&quot;&gt;Relative names&lt;/a&gt;:&lt;/em&gt; some methods in this interface use relative names. A relative name is a non-null, non-empty sequence of path segments separated by '/'. '.' or '..' are invalid path segments. A valid relative name must match the &quot;path-rootless&quot; rule of &lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;, section 3.3. Informally, this should be true:</source>
          <target state="translated">&lt;em&gt;&lt;a id=&quot;relative_name&quot;&gt;Relative names&lt;/a&gt;:&lt;/em&gt; some methods in this interface use relative names. A relative name is a non-null, non-empty sequence of path segments separated by '/'. '.' or '..' are invalid path segments. A valid relative name must match the &quot;path-rootless&quot; rule of &lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;, section 3.3. Informally, this should be true:</target>
        </trans-unit>
        <trans-unit id="d2dc485d3ed620c232d82a5cbbd913a1db1e0eb0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a id=&quot;relative_name&quot;&gt;Relative names&lt;/a&gt;:&lt;/em&gt; some methods in this interface use relative names. A relative name is a non-null, non-empty sequence of path segments separated by '/'. '.' or '..' are invalid path segments. A valid relative name must match the &quot;path-rootless&quot; rule of &lt;a href=&quot;https://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;, section 3.3. Informally, this should be true:</source>
          <target state="translated">&lt;em&gt;&lt;a id=&quot;relative_name&quot;&gt;상대 이름&lt;/a&gt; :&lt;/em&gt; 이 인터페이스의 일부 메소드는 상대 이름을 사용합니다. 상대 이름은 '/'로 구분 된 널이 아닌 비어 있지 않은 경로 세그먼트 시퀀스입니다. '.' 또는 '..'은 잘못된 경로 세그먼트입니다. 유효한 상대 이름은&lt;a href=&quot;https://www.ietf.org/rfc/rfc3986.txt&quot;&gt; RFC 3986&lt;/a&gt; , 섹션 3.3의 '경로없는'규칙과 일치해야합니다. 비공식적으로 이것은 사실이어야합니다.</target>
        </trans-unit>
        <trans-unit id="bdad25e6cdc963a77457a93c07c5027772cb82f0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a name=&quot;relative_name&quot;&gt;Relative names&lt;/a&gt;:&lt;/em&gt; some methods in this interface use relative names. A relative name is a non-null, non-empty sequence of path segments separated by '/'. '.' or '..' are invalid path segments. A valid relative name must match the &quot;path-rootless&quot; rule of &lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;, section 3.3. Informally, this should be true:</source>
          <target state="translated">&lt;em&gt;&lt;a name=&quot;relative_name&quot;&gt;상대 이름&lt;/a&gt; :&lt;/em&gt; 이 인터페이스의 일부 메소드는 상대 이름을 사용합니다. 상대 이름은 '/'로 구분 된 null이 아닌 비어 있지 않은 경로 세그먼트 시퀀스입니다. '.' 또는 '..'은 (는) 잘못된 경로 세그먼트입니다. 유효한 상대 이름은&lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt; RFC 3986&lt;/a&gt; 의 &quot;path-rootless&quot;규칙, 섹션 3.3과 일치해야합니다. 비공식적으로 이것은 사실이어야합니다.</target>
        </trans-unit>
        <trans-unit id="2895e593710ffc8a6ac1eb5237e08dff7285b4c4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;code&gt;nativelibname&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;code&gt;nativelibname&lt;/code&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4fc438be473366b872fa93b208a2eef31a4773c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;a href=&quot;http://www.w3.org/TR/html40/appendix/notes.html#non-ascii-chars&quot;&gt; World Wide Web Consortium Recommendation&lt;/a&gt; states that UTF-8 should be used. Not doing so may introduce incompatibilities.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;참고 : &lt;/strong&gt;&lt;a href=&quot;http://www.w3.org/TR/html40/appendix/notes.html#non-ascii-chars&quot;&gt;월드 와이드 웹 컨소시엄 권장&lt;/a&gt; 하는 UTF-8을 사용해야 말한다. 그렇지 않으면 비 호환성이 발생할 수 있습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="44776429db96a7135f9868a3ddf392d2661372cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;a href=&quot;https://www.w3.org/TR/html40/appendix/notes.html#non-ascii-chars&quot;&gt; World Wide Web Consortium Recommendation&lt;/a&gt; states that UTF-8 should be used. Not doing so may introduce incompatibilities.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;참고 : &lt;/strong&gt;&lt;a href=&quot;https://www.w3.org/TR/html40/appendix/notes.html#non-ascii-chars&quot;&gt;월드 와이드 웹 컨소시엄 권장&lt;/a&gt; 하는 UTF-8을 사용해야 말한다. 그렇게하지 않으면 비 호환성이 발생할 수 있습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c30313aa86f60acc9cf90f500ff1bf09ffaffb37" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A&lt;sub&gt;ac&lt;/sub&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;A&lt;sub&gt;ac&lt;/sub&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7a087326c1513af6a36c140f4e517ddd7b45bae9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;A&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a4dff2b2a028a082786b68fd5373df485ab53d6d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A&lt;sub&gt;df&lt;/sub&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;A&lt;sub&gt;df&lt;/sub&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f80bfad8313dc37d36daacc9a9c5b9da38a1d99c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A&lt;sub&gt;dr&lt;/sub&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;A&lt;sub&gt;dr&lt;/sub&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fbec99e1e68cc00693b1307309dfb14bd1d55deb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A&lt;sub&gt;r&lt;/sub&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;A&lt;sub&gt;r&lt;/sub&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="202a1e43add8667cf3b0b237652a7a9142393e2c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;A&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9eb37edb0eeb7780169473b65817e3ce7ea5b9d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A&lt;sub&gt;sr&lt;/sub&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;A&lt;sub&gt;sr&lt;/sub&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9007787b60aee79425dc80c43443e07c55117b29" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Add rule 1&lt;/em&gt;. The value of &lt;code&gt;field&lt;/code&gt; after the call minus the value of &lt;code&gt;field&lt;/code&gt; before the call is &lt;code&gt;amount&lt;/code&gt;, modulo any overflow that has occurred in &lt;code&gt;field&lt;/code&gt;. Overflow occurs when a field value exceeds its range and, as a result, the next larger field is incremented or decremented and the field value is adjusted back into its range.</source>
          <target state="translated">&lt;em&gt;규칙 1을 추가합니다&lt;/em&gt; . 값 &lt;code&gt;field&lt;/code&gt; 호 마이너스의 값이 이후 &lt;code&gt;field&lt;/code&gt; 호출 전에는 &lt;code&gt;amount&lt;/code&gt; 에서 발생한 오버 플로우 모듈로 &lt;code&gt;field&lt;/code&gt; . 필드 값이 범위를 초과하면 오버플로가 발생하여 다음으로 큰 필드가 증가 또는 감소하고 필드 값이 다시 범위로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="ce666c0e1fec22f3b65ba73b7f7c83155df63f61" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Add rule 2&lt;/em&gt;. If a smaller field is expected to be invariant, but it is impossible for it to be equal to its prior value because of changes in its minimum or maximum after &lt;code&gt;field&lt;/code&gt; is changed, then its value is adjusted to be as close as possible to its expected value. A smaller field represents a smaller unit of time. &lt;code&gt;HOUR&lt;/code&gt; is a smaller field than &lt;code&gt;DAY_OF_MONTH&lt;/code&gt;. No adjustment is made to smaller fields that are not expected to be invariant. The calendar system determines what fields are expected to be invariant.</source>
          <target state="translated">&lt;em&gt;규칙이 추가&lt;/em&gt; . 더 작은 필드가 변하지 않을 것으로 예상되지만 &lt;code&gt;field&lt;/code&gt; 가 변경된 후 최소 또는 최대의 변경으로 인해 이전 값과 같을 수없는 경우 값이 예상과 최대한 가깝도록 조정됩니다 값. 더 작은 필드는 더 작은 시간 단위를 나타냅니다. &lt;code&gt;HOUR&lt;/code&gt; 는 &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; 보다 작은 필드 입니다 . 변하지 않을 것으로 예상되는 더 작은 필드는 조정되지 않습니다. 일정 관리 시스템은 변하지 않는 필드를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="90f27e432278913996ef2fd8a4dda17ce9647994" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Any other char value:&lt;/em&gt; a single character constant.</source>
          <target state="translated">&lt;em&gt;Any other char value:&lt;/em&gt; a single character constant.</target>
        </trans-unit>
        <trans-unit id="8611f806b35c966cfe289bdc0f2be3d05a8be1bf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Authentication&lt;/em&gt;. In most modes, SSL provides peer authentication. Servers are usually authenticated, and clients may be authenticated as requested by servers.</source>
          <target state="translated">&lt;em&gt;인증&lt;/em&gt; . 대부분의 모드에서 SSL은 피어 인증을 제공합니다. 서버는 일반적으로 인증되며 클라이언트는 서버의 요청에 따라 인증 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d26a8c2b43b8e01afcaa90877c2e9be83ca9bb84" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Authentication&lt;/em&gt;. In most modes, SSL/TLS provides peer authentication. Servers are usually authenticated, and clients may be authenticated as requested by servers.</source>
          <target state="translated">&lt;em&gt;인증&lt;/em&gt; . 대부분의 모드에서 SSL / TLS는 피어 인증을 제공합니다. 서버는 일반적으로 인증되며 클라이언트는 서버의 요청에 따라 인증 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8211ca16d7d24381fc81e02b96eec27178af95da" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Authentication&lt;/em&gt;. In most modes, SSL/TLS/DTLS provides peer authentication. Servers are usually authenticated, and clients may be authenticated as requested by servers.</source>
          <target state="translated">&lt;em&gt;Authentication&lt;/em&gt;. In most modes, SSL/TLS/DTLS provides peer authentication. Servers are usually authenticated, and clients may be authenticated as requested by servers.</target>
        </trans-unit>
        <trans-unit id="54cd4142abcbaf0fb734e1c14b294cdfad29ce4c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Binding&lt;/em&gt; a name for a remote object is associating or registering a name for a remote object that can be used at a later time to look up that remote object. A remote object can be associated with a name using the &lt;code&gt;Naming&lt;/code&gt; class's &lt;code&gt;bind&lt;/code&gt; or &lt;code&gt;rebind&lt;/code&gt; methods.</source>
          <target state="translated">&lt;em&gt;Binding&lt;/em&gt; a name for a remote object is associating or registering a name for a remote object that can be used at a later time to look up that remote object. A remote object can be associated with a name using the &lt;code&gt;Naming&lt;/code&gt; class's &lt;code&gt;bind&lt;/code&gt; or &lt;code&gt;rebind&lt;/code&gt; methods.</target>
        </trans-unit>
        <trans-unit id="de386c6a3b909e35c75674a87c52687265e4ace4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Blocks&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Blocks&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b3968dca0f762a29ff9650c575ce0929845abe49" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Bounded queues.&lt;/em&gt; A bounded queue (for example, an &lt;a href=&quot;arrayblockingqueue&quot;&gt;&lt;code&gt;ArrayBlockingQueue&lt;/code&gt;&lt;/a&gt;) helps prevent resource exhaustion when used with finite maximumPoolSizes, but can be more difficult to tune and control. Queue sizes and maximum pool sizes may be traded off for each other: Using large queues and small pools minimizes CPU usage, OS resources, and context-switching overhead, but can lead to artificially low throughput. If tasks frequently block (for example if they are I/O bound), a system may be able to schedule time for more threads than you otherwise allow. Use of small queues generally requires larger pool sizes, which keeps CPUs busier but may encounter unacceptable scheduling overhead, which also decreases throughput.</source>
          <target state="translated">&lt;em&gt;바운드 큐.&lt;/em&gt; 바운드 큐 (예 : &lt;a href=&quot;arrayblockingqueue&quot;&gt; &lt;code&gt;ArrayBlockingQueue&lt;/code&gt; &lt;/a&gt; )는 유한 한 maximumPoolSizes와 함께 사용될 때 리소스 소모를 방지하지만 조정 및 제어가 더 어려울 수 있습니다. 대기열 크기와 최대 풀 크기는 서로 상충 될 수 있습니다. 큰 대기열과 작은 풀을 사용하면 CPU 사용량, OS 리소스 및 컨텍스트 전환 오버 헤드가 최소화되지만 처리량이 인위적으로 낮아질 수 있습니다. 작업이 자주 차단되는 경우 (예 : I / O 바운드 인 경우) 시스템이 허용하는 것보다 많은 스레드에 대한 시간을 예약 할 수 있습니다. 작은 대기열을 사용하려면 일반적으로 더 큰 풀 크기가 필요하므로 CPU가 더 많이 사용되지만 일정이 초과되는 오버 헤드가 발생하여 처리량이 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="2d3214bf748fdf7ac3a878035d8d436f775380ad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Bridging.&lt;/em&gt; It is sometimes useful to implement multiple variations of the method signature, involving argument or return type adaptation. This occurs when multiple distinct VM signatures for a method are logically considered to be the same method by the language. The flag &lt;code&gt;FLAG_BRIDGES&lt;/code&gt; indicates that a list of additional &lt;code&gt;MethodType&lt;/code&gt;s will be provided, each of which will be implemented by the resulting function object. These methods will share the same name and instantiated type.</source>
          <target state="translated">&lt;em&gt;브리징.&lt;/em&gt; 인수 또는 리턴 유형 적응을 포함하여 메소드 서명의 여러 변형을 구현하는 것이 유용한 경우가 있습니다. 이는 메소드에 대해 여러 개의 고유 한 VM 서명이 논리적으로 언어에 의해 동일한 메소드로 간주 될 때 발생합니다. &lt;code&gt;FLAG_BRIDGES&lt;/code&gt; 플래그 는 추가적인 &lt;code&gt;MethodType&lt;/code&gt; 목록 이 제공 될 것임을 나타내며 , 각 MethodType 은 결과 함수 객체에 의해 구현됩니다. 이러한 메소드는 동일한 이름과 인스턴스화 된 유형을 공유합니다.</target>
        </trans-unit>
        <trans-unit id="24b1096871164291d44d5a71b2e7b1977bdb6dd8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;C&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;C&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="33ec6b929b8a6b3b4d1ba038534b080f9b884df1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;C&lt;sub&gt;df&lt;/sub&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;C&lt;sub&gt;df&lt;/sub&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5ff70f844cb62f941874d7b2849051585f77e44d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;C&lt;sub&gt;dr&lt;/sub&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;C&lt;sub&gt;dr&lt;/sub&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="366c0d4f40640492206b39e3a4a91caa6f7b9b72" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;C&lt;sub&gt;r&lt;/sub&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;C&lt;sub&gt;r&lt;/sub&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e099cde0e71ac45c29c9d4ae55e59e4d06bef289" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;C&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;C&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="459cdb3d54c688aa1321014ee49bd0d89b10f6d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;C&lt;sub&gt;sr&lt;/sub&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;C&lt;sub&gt;sr&lt;/sub&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dc7ee344a23f221604c609bd462733973e839b3e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Capture&lt;/em&gt; occurs when the &lt;code&gt;CallSite&lt;/code&gt;'s target is invoked, typically through an &lt;code&gt;invokedynamic&lt;/code&gt; call site, producing a function object. This may occur many times for a single factory &lt;code&gt;CallSite&lt;/code&gt;. Capture may involve allocation of a new function object, or may return an existing function object. The behavior &lt;code&gt;MethodHandle&lt;/code&gt; may have additional parameters beyond those of the specified interface method; these are referred to as &lt;em&gt;captured parameters&lt;/em&gt;, which must be provided as arguments to the &lt;code&gt;CallSite&lt;/code&gt; target, and which may be early-bound to the behavior &lt;code&gt;MethodHandle&lt;/code&gt;. The number of captured parameters and their types are determined during linkage.</source>
          <target state="translated">&lt;em&gt;캡처&lt;/em&gt; 는 일반적으로 &lt;code&gt;invokedynamic&lt;/code&gt; 호출 사이트를 통해 &lt;code&gt;CallSite&lt;/code&gt; 의 대상이 호출 될 때 함수 객체를 생성합니다. 단일 팩토리 &lt;code&gt;CallSite&lt;/code&gt; 에서 여러 번 발생할 수 있습니다 . 캡처는 새로운 함수 객체의 할당을 포함하거나 기존 함수 객체를 반환 할 수 있습니다. &lt;code&gt;MethodHandle&lt;/code&gt; 비헤이비어 에는 지정된 인터페이스 메소드 의 비헤이비어 외에 추가 매개 변수가있을 수 있습니다. 이를 &lt;em&gt;캡처 된 매개 변수&lt;/em&gt; 라고하며 , &lt;code&gt;CallSite&lt;/code&gt; 대상에 인수로 제공해야하며 , &lt;code&gt;MethodHandle&lt;/code&gt; 동작에 초기 바인딩 될 수 있습니다 . 캡처 된 매개 변수의 수와 유형은 연결 중에 결정됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c0a1060d52a2ec82f4cffee19b7d389d5593bb5f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Capture&lt;/em&gt; occurs when the &lt;code&gt;CallSite&lt;/code&gt;'s target is invoked, typically through an &lt;code&gt;invokedynamic&lt;/code&gt; call site, producing a function object. This may occur many times for a single factory &lt;code&gt;CallSite&lt;/code&gt;. Capture may involve allocation of a new function object, or may return an existing function object. The behavior &lt;code&gt;MethodHandle&lt;/code&gt; may have additional parameters beyond those of the specified interface method; these are referred to as &lt;em&gt;captured parameters&lt;/em&gt;, which must be provided as arguments to the &lt;code&gt;CallSite&lt;/code&gt; target, and which may be early-bound to the behavior &lt;code&gt;MethodHandle&lt;/code&gt;. The number of captured parameters and their types are determined during linkage. The identity of a function object produced by invoking the &lt;code&gt;CallSite&lt;/code&gt;'s target is unpredictable, and therefore identity-sensitive operations (such as reference equality, object locking, and &lt;code&gt;System.identityHashCode()&lt;/code&gt; may produce different results in different implementations, or even upon different invocations in the same implementation.</source>
          <target state="translated">&lt;em&gt;Capture&lt;/em&gt; occurs when the &lt;code&gt;CallSite&lt;/code&gt; 's target is invoked, typically through an &lt;code&gt;invokedynamic&lt;/code&gt; call site, producing a function object. This may occur many times for a single factory &lt;code&gt;CallSite&lt;/code&gt; . Capture may involve allocation of a new function object, or may return an existing function object. The behavior &lt;code&gt;MethodHandle&lt;/code&gt; may have additional parameters beyond those of the specified interface method; these are referred to as &lt;em&gt;captured parameters&lt;/em&gt;, which must be provided as arguments to the &lt;code&gt;CallSite&lt;/code&gt; target, and which may be early-bound to the behavior &lt;code&gt;MethodHandle&lt;/code&gt; . The number of captured parameters and their types are determined during linkage. The identity of a function object produced by invoking the &lt;code&gt;CallSite&lt;/code&gt; 's target is unpredictable, and therefore identity-sensitive operations (such as reference equality, object locking, and &lt;code&gt;System.identityHashCode()&lt;/code&gt; may produce different results in different implementations, or even upon different invocations in the same implementation.</target>
        </trans-unit>
        <trans-unit id="11d5c62f6af42beadd39310c8788790d65d20939" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Checking clause structure:&lt;/em&gt; Given a set of clauses, there is a number of checks and adjustments performed to connect all the parts of the loop. They are spelled out in detail in the steps below. In these steps, every occurrence of the word &quot;must&quot; corresponds to a place where &lt;a href=&quot;../illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; will be thrown if the required constraint is not met by the inputs to the loop combinator.</source>
          <target state="translated">&lt;em&gt;Checking clause structure:&lt;/em&gt; Given a set of clauses, there is a number of checks and adjustments performed to connect all the parts of the loop. They are spelled out in detail in the steps below. In these steps, every occurrence of the word &quot;must&quot; corresponds to a place where &lt;a href=&quot;../illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt; will be thrown if the required constraint is not met by the inputs to the loop combinator.</target>
        </trans-unit>
        <trans-unit id="e767d1c7bf1800f0080d8cd1d30393edb7d6359b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Cipher Suite Name.&lt;/em&gt; Cipher suites describe the kind of cryptographic protection that's used by connections in a particular session.</source>
          <target state="translated">&lt;em&gt;암호 스위트 이름. &lt;/em&gt;암호 제품군은 특정 세션의 연결에서 사용되는 암호화 보호의 종류를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="0aa00bc7a1f1f4666ef0079448535b727931efbf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Confidentiality (Privacy Protection)&lt;/em&gt;. In most modes, SSL encrypts data being sent between client and server. This protects the confidentiality of data, so that passive wiretappers won't see sensitive data such as financial information or personal information of many kinds.</source>
          <target state="translated">&lt;em&gt;기밀 유지 (개인 정보 보호)&lt;/em&gt; . 대부분의 모드에서 SSL은 클라이언트와 서버간에 전송되는 데이터를 암호화합니다. 이는 데이터의 기밀성을 보호하므로 수동 도청기는 재무 정보 나 다양한 종류의 개인 정보와 같은 민감한 데이터를 볼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7ac8381107528bb64439d7573163bc975080cf7c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Confidentiality (Privacy Protection)&lt;/em&gt;. In most modes, SSL/TLS encrypts data being sent between client and server. This protects the confidentiality of data, so that passive wiretappers won't see sensitive data such as financial information or personal information of many kinds.</source>
          <target state="translated">&lt;em&gt;기밀 유지 (개인 정보 보호)&lt;/em&gt; . 대부분의 모드에서 SSL / TLS는 클라이언트와 서버간에 전송되는 데이터를 암호화합니다. 이는 데이터의 기밀성을 보호하므로 수동 도청기는 재무 정보 나 다양한 종류의 개인 정보와 같은 민감한 데이터를 볼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="411e864cfab152cfac7cc80c6a8c717aad120174" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Confidentiality (Privacy Protection)&lt;/em&gt;. In most modes, SSL/TLS/DTLS encrypts data being sent between client and server. This protects the confidentiality of data, so that passive wiretappers won't see sensitive data such as financial information or personal information of many kinds.</source>
          <target state="translated">&lt;em&gt;Confidentiality (Privacy Protection)&lt;/em&gt;. In most modes, SSL/TLS/DTLS encrypts data being sent between client and server. This protects the confidentiality of data, so that passive wiretappers won't see sensitive data such as financial information or personal information of many kinds.</target>
        </trans-unit>
        <trans-unit id="275d0153b72f42586b1bd376358d902261aeba33" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;DTDHandler.notationDecl()&lt;/em&gt;,</source>
          <target state="translated">&lt;em&gt;DTDHandler.notationDecl()&lt;/em&gt;,</target>
        </trans-unit>
        <trans-unit id="6bca842d734961ad588246d63e688f1d981ca901" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;DTDHandler.unparsedEntityDecl()&lt;/em&gt;, and</source>
          <target state="translated">&lt;em&gt;DTDHandler.unparsedEntityDecl()&lt;/em&gt;, and</target>
        </trans-unit>
        <trans-unit id="e56bb83269b82697eaffb202340d0ff7f251e0f0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;DeclHandler.externalEntityDecl()&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;DeclHandler.externalEntityDecl()&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="981dc85ac0f83ea735248ea3c0b215ba57a0894f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Dependent on Implementation and Load Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Dependent on Implementation and Load Options&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="627ed81d67c884cf810ca46ae36e4527c00c874a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Dependent on Implementation and Load/Save Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Dependent on Implementation and Load/Save Options&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="64760b6e1f1775bc57a945c0ce33eadb592a1d80" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion of private access:&lt;/em&gt; We say that a lookup has &lt;em&gt;private access&lt;/em&gt; if its &lt;a href=&quot;#lookupModes()&quot;&gt;lookup modes&lt;/a&gt; include the possibility of accessing &lt;code&gt;private&lt;/code&gt; members (which includes the private members of nestmates). As documented in the relevant methods elsewhere, only lookups with private access possess the following capabilities:</source>
          <target state="translated">&lt;em&gt;Discussion of private access:&lt;/em&gt; We say that a lookup has &lt;em&gt;private access&lt;/em&gt; if its &lt;a href=&quot;#lookupModes()&quot;&gt;lookup modes&lt;/a&gt; include the possibility of accessing &lt;code&gt;private&lt;/code&gt; members (which includes the private members of nestmates). As documented in the relevant methods elsewhere, only lookups with private access possess the following capabilities:</target>
        </trans-unit>
        <trans-unit id="5d6019a54280aba6b94c842d228ba167bab46293" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion of private and module access:&lt;/em&gt; We say that a lookup has &lt;em&gt;private access&lt;/em&gt; if its &lt;a href=&quot;#lookupModes()&quot;&gt;lookup modes&lt;/a&gt; include the possibility of accessing &lt;code&gt;private&lt;/code&gt; members (which includes the private members of nestmates). As documented in the relevant methods elsewhere, only lookups with private access possess the following capabilities:</source>
          <target state="translated">&lt;em&gt;비공개 및 모듈 액세스에 대한 논의 : &lt;/em&gt;&lt;a href=&quot;#lookupModes()&quot;&gt;조회 모드에 &lt;/a&gt; &lt;code&gt;private&lt;/code&gt; 멤버 (네스트 메이트의 비공개 멤버 포함) 에 액세스 할 수있는 가능성이 포함 된 경우 조회에 &lt;em&gt;비공개 액세스&lt;/em&gt; 가 있다고 말합니다 . 다른 곳의 관련 방법에 설명 된대로 비공개 액세스가있는 조회에만 다음 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c46f2798cb65743ad745ddaafba4895d670e316a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion:&lt;/em&gt; A &lt;a href=&quot;methodtype#genericMethodType(int,boolean)&quot;&gt;general method type&lt;/a&gt; is one which mentions only &lt;code&gt;Object&lt;/code&gt; arguments and return values. An invoker for such a type is capable of calling any method handle of the same arity as the general type.</source>
          <target state="translated">&lt;em&gt;Discussion:&lt;/em&gt; A &lt;a href=&quot;methodtype#genericMethodType(int,boolean)&quot;&gt;general method type&lt;/a&gt; is one which mentions only &lt;code&gt;Object&lt;/code&gt; arguments and return values. An invoker for such a type is capable of calling any method handle of the same arity as the general type.</target>
        </trans-unit>
        <trans-unit id="dd43ef16d7f946166f6f2a5f1ae695e5985d528b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion:&lt;/em&gt; A &lt;a href=&quot;methodtype#genericMethodType-int-boolean-&quot;&gt;general method type&lt;/a&gt; is one which mentions only &lt;code&gt;Object&lt;/code&gt; arguments and return values. An invoker for such a type is capable of calling any method handle of the same arity as the general type.</source>
          <target state="translated">&lt;em&gt;토론 : &lt;/em&gt;&lt;a href=&quot;methodtype#genericMethodType-int-boolean-&quot;&gt;일반적인 방법의 유형&lt;/a&gt; 만 언급 하나입니다 &lt;code&gt;Object&lt;/code&gt; 인수 및 반환 값을. 이러한 유형의 호출자는 일반 유형과 동일한 arity의 메소드 핸들을 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49c24f0596ef3530b427126ccb993fc55d7a22d4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion:&lt;/em&gt; Access checks only apply to named and reflected methods, constructors, and fields. Other method handle creation methods, such as &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;MethodHandle.asType&lt;/code&gt;&lt;/a&gt;, do not require any access checks, and are used independently of any &lt;code&gt;Lookup&lt;/code&gt; object.</source>
          <target state="translated">&lt;em&gt;Discussion:&lt;/em&gt; Access checks only apply to named and reflected methods, constructors, and fields. Other method handle creation methods, such as &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;MethodHandle.asType&lt;/code&gt; &lt;/a&gt;, do not require any access checks, and are used independently of any &lt;code&gt;Lookup&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="b3955b2825f692d4bdbf6f2195fef43b7eda14fb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion:&lt;/em&gt; Access checks only apply to named and reflected methods, constructors, and fields. Other method handle creation methods, such as &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;MethodHandle.asType&lt;/code&gt;&lt;/a&gt;, do not require any access checks, and are used independently of any &lt;code&gt;Lookup&lt;/code&gt; object.</source>
          <target state="translated">&lt;em&gt;토론 :&lt;/em&gt; 액세스 검사는 명명 된 메소드와 반영된 메소드, 생성자 및 필드에만 적용됩니다. &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;MethodHandle.asType&lt;/code&gt; &lt;/a&gt; 과 같은 다른 메소드 핸들 작성 메소드 는 액세스 점검이 필요하지 않으며 &lt;code&gt;Lookup&lt;/code&gt; 오브젝트 와 독립적으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="02952baf6f312ba49a844c119741b7424c6030df" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion:&lt;/em&gt; Because of the one-way nature of invalidation, once a switch point begins to return true for &lt;code&gt;hasBeenInvalidated&lt;/code&gt;, it will always do so in the future. On the other hand, a valid switch point visible to other threads may be invalidated at any moment, due to a request by another thread.</source>
          <target state="translated">&lt;em&gt;토론 :&lt;/em&gt; 무효화의 단방향 특성으로 &lt;code&gt;hasBeenInvalidated&lt;/code&gt; 에 대한 스위치 포인트가 true를 반환하기 시작 하면 앞으로도 항상 그렇게됩니다. 한편, 다른 스레드의 요청으로 인해 다른 스레드에서 볼 수있는 유효한 전환점이 언제든지 무효화 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec2a735d0a0e095ac02dbea816078c31924f613b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion:&lt;/em&gt; For example, the caller-sensitive method &lt;a href=&quot;../class#forName(java.lang.String)&quot;&gt;&lt;code&gt;Class.forName(x)&lt;/code&gt;&lt;/a&gt; can return varying classes or throw varying exceptions, depending on the class loader of the class that calls it. A public lookup of &lt;code&gt;Class.forName&lt;/code&gt; will fail, because there is no reasonable way to determine its bytecode behavior.</source>
          <target state="translated">&lt;em&gt;Discussion:&lt;/em&gt; For example, the caller-sensitive method &lt;a href=&quot;../class#forName(java.lang.String)&quot;&gt; &lt;code&gt;Class.forName(x)&lt;/code&gt; &lt;/a&gt; can return varying classes or throw varying exceptions, depending on the class loader of the class that calls it. A public lookup of &lt;code&gt;Class.forName&lt;/code&gt; will fail, because there is no reasonable way to determine its bytecode behavior.</target>
        </trans-unit>
        <trans-unit id="456be61776bdc5fa398da0885c3a694b97a3ea80" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion:&lt;/em&gt; For example, the caller-sensitive method &lt;a href=&quot;../class#forName-java.lang.String-&quot;&gt;&lt;code&gt;Class.forName(x)&lt;/code&gt;&lt;/a&gt; can return varying classes or throw varying exceptions, depending on the class loader of the class that calls it. A public lookup of &lt;code&gt;Class.forName&lt;/code&gt; will fail, because there is no reasonable way to determine its bytecode behavior.</source>
          <target state="translated">&lt;em&gt;토론 :&lt;/em&gt; 예를 들어, 호출자 구분 메소드 &lt;a href=&quot;../class#forName-java.lang.String-&quot;&gt; &lt;code&gt;Class.forName(x)&lt;/code&gt; &lt;/a&gt; 는 호출하는 클래스의 클래스 로더에 따라 가변 클래스를 리턴하거나 예외를 던질 수 있습니다. 바이트 코드 동작을 결정하는 합리적인 방법이 없기 때문에 &lt;code&gt;Class.forName&lt;/code&gt; 의 공개 조회 가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="a90bbf1e071e924bd13ec25863d63bd94df1c9ac" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion:&lt;/em&gt; For performance reasons, &lt;code&gt;invalidateAll&lt;/code&gt; is not a virtual method on a single switch point, but rather applies to a set of switch points. Some implementations may incur a large fixed overhead cost for processing one or more invalidation operations, but a small incremental cost for each additional invalidation. In any case, this operation is likely to be costly, since other threads may have to be somehow interrupted in order to make them notice the updated switch point state. However, it may be observed that a single call to invalidate several switch points has the same formal effect as many calls, each on just one of the switch points.</source>
          <target state="translated">&lt;em&gt;토론 :&lt;/em&gt; 성능상의 이유로 &lt;code&gt;invalidateAll&lt;/code&gt; 은 단일 스위치 지점의 가상 방법이 아니라 일련의 스위치 지점에 적용됩니다. 일부 구현은 하나 이상의 무효화 연산을 처리하기 위해 큰 고정 오버 헤드 비용이 발생할 수 있지만 각각의 추가 무효화에 대해 작은 증분 비용이 발생할 수 있습니다. 어쨌든, 업데이트 된 스위치 포인트 상태를 알리기 위해 다른 스레드가 어떻게 든 중단되어야하기 때문에이 작업은 비용이 많이들 수 있습니다. 그러나 여러 스위치 포인트를 무효화하기위한 단일 호출은 각 스위치 포인트 중 하나에 대한 많은 호출과 동일한 형식 효과를 갖는 것으로 관찰 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="17811bccbd61dd2f5305e4fd6a4fd30d2615ff9e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion:&lt;/em&gt; For performance reasons, &lt;code&gt;syncAll&lt;/code&gt; is not a virtual method on a single call site, but rather applies to a set of call sites. Some implementations may incur a large fixed overhead cost for processing one or more synchronization operations, but a small incremental cost for each additional call site. In any case, this operation is likely to be costly, since other threads may have to be somehow interrupted in order to make them notice the updated target value. However, it may be observed that a single call to synchronize several sites has the same formal effect as many calls, each on just one of the sites.</source>
          <target state="translated">&lt;em&gt;토론 :&lt;/em&gt; 성능상의 이유로 &lt;code&gt;syncAll&lt;/code&gt; 은 단일 호출 사이트의 가상 방법이 아니라 일련의 호출 사이트에 적용됩니다. 일부 구현에서는 하나 이상의 동기화 작업을 처리하기 위해 고정 된 오버 헤드 비용이 발생할 수 있지만 각 추가 호출 사이트에 대해서는 약간의 증분 비용이 발생할 수 있습니다. 어쨌든이 작업은 비용이 많이들 수 있습니다. 업데이트 된 목표 값을 알리기 위해 다른 스레드가 어떻게 든 중단되어야 할 수도 있습니다. 그러나 여러 사이트를 동기화하기위한 단일 호출은 각 사이트 중 하나에 대한 많은 호출과 동일한 형식 효과를 갖는 것으로 관찰 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c56321a108f1279c9cd2b1c56da00a63188ddfb8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion:&lt;/em&gt; Invoker method handles can be useful when working with variable method handles of unknown types. For example, to emulate an &lt;code&gt;invokeExact&lt;/code&gt; call to a variable method handle &lt;code&gt;M&lt;/code&gt;, extract its type &lt;code&gt;T&lt;/code&gt;, look up the invoker method &lt;code&gt;X&lt;/code&gt; for &lt;code&gt;T&lt;/code&gt;, and call the invoker method, as &lt;code&gt;X.invoke(T, A...)&lt;/code&gt;. (It would not work to call &lt;code&gt;X.invokeExact&lt;/code&gt;, since the type &lt;code&gt;T&lt;/code&gt; is unknown.) If spreading, collecting, or other argument transformations are required, they can be applied once to the invoker &lt;code&gt;X&lt;/code&gt; and reused on many &lt;code&gt;M&lt;/code&gt; method handle values, as long as they are compatible with the type of &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;토론 :&lt;/em&gt; 호출자 메소드 핸들은 알 수없는 유형의 변수 메소드 핸들로 작업 할 때 유용 할 수 있습니다. 예를 들어, 에뮬레이션 &lt;code&gt;invokeExact&lt;/code&gt; 의 가변 방법 핸들 문안 &lt;code&gt;M&lt;/code&gt; 을 그 종류 추출 &lt;code&gt;T&lt;/code&gt; 를 , 호출자 방법 룩업 &lt;code&gt;X&lt;/code&gt; 에 대한 &lt;code&gt;T&lt;/code&gt; 를 로서, 상기 호출자 메소드를 호출 &lt;code&gt;X.invoke(T, A...)&lt;/code&gt; . ( &lt;code&gt;T&lt;/code&gt; 유형을 알 수 없기 때문에 &lt;code&gt;X.invokeExact&lt;/code&gt; 를 호출 하면 작동하지 않습니다 .) 확산, 수집 또는 기타 인수 변환이 필요한 경우 호출자 &lt;code&gt;X&lt;/code&gt; 에 한 번 적용 할 수 있으며 다음 과 같이 많은 &lt;code&gt;M&lt;/code&gt; 메소드 핸들 값에서 재사용 할 수 있습니다. 그들이 유형과 호환되는 한 &lt;code&gt;X&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f53103be3fb19c8253f40e4120b0f36e7d150a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion:&lt;/em&gt; Switch points are useful without subclassing. They may also be subclassed. This may be useful in order to associate application-specific invalidation logic with the switch point. Notice that there is no permanent association between a switch point and the method handles it produces and consumes. The garbage collector may collect method handles produced or consumed by a switch point independently of the lifetime of the switch point itself.</source>
          <target state="translated">&lt;em&gt;토론 :&lt;/em&gt; 전환점은 서브 클래 싱없이 유용합니다. 서브 클래 싱 될 수도 있습니다. 응용 프로그램 별 무효화 논리를 스위치 지점과 연결하는 데 유용 할 수 있습니다. 스위치 포인트와 스위치가 생성 및 소비하는 메소드 핸들 사이에는 영구적 인 연관이 없습니다. 가비지 콜렉터는 스위치 포인트 자체의 수명과 무관하게 스위치 포인트에 의해 생성되거나 소비 된 메소드 핸들을 수집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="662cfbbeca27fce7c089befb73dc4dac49c4bd43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion:&lt;/em&gt; The equivalence between looked-up method handles and underlying class members and bytecode behaviors can break down in a few ways:</source>
          <target state="translated">&lt;em&gt;토론 :&lt;/em&gt; 조회 된 메소드 핸들과 기본 클래스 멤버 및 바이트 코드 동작 간의 동등성은 몇 가지 방식으로 분류 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3908b6286db129bad64003966327c24c487dc891" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion:&lt;/em&gt; The lookup class can be changed to any other class &lt;code&gt;C&lt;/code&gt; using an expression of the form &lt;a href=&quot;methodhandles.lookup#in(java.lang.Class)&quot;&gt;&lt;code&gt;publicLookup().in(C.class)&lt;/code&gt;&lt;/a&gt;. A public lookup object is always subject to &lt;a href=&quot;methodhandles.lookup#secmgr&quot;&gt;security manager checks&lt;/a&gt;. Also, it cannot access &lt;a href=&quot;methodhandles.lookup#callsens&quot;&gt;caller sensitive methods&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;토론 :&lt;/em&gt; 조회 클래스는 &lt;a href=&quot;methodhandles.lookup#in(java.lang.Class)&quot;&gt; &lt;code&gt;publicLookup().in(C.class)&lt;/code&gt; &lt;/a&gt; 형식의 표현식을 사용하여 다른 클래스 &lt;code&gt;C&lt;/code&gt; 로 변경할 수 있습니다 . 공용 조회 개체는 항상 &lt;a href=&quot;methodhandles.lookup#secmgr&quot;&gt;보안 관리자 검사를&lt;/a&gt; 받습니다. 또한 &lt;a href=&quot;methodhandles.lookup#callsens&quot;&gt;호출자에 민감한 메서드에&lt;/a&gt; 액세스 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b98f234a232f0e1ce3556118c53a0c5ec6c8824a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion:&lt;/em&gt; The lookup class can be changed to any other class &lt;code&gt;C&lt;/code&gt; using an expression of the form &lt;a href=&quot;methodhandles.lookup#in(java.lang.Class)&quot;&gt;&lt;code&gt;publicLookup().in(C.class)&lt;/code&gt;&lt;/a&gt;. but may change the lookup context by virtue of changing the class loader. A public lookup object is always subject to &lt;a href=&quot;methodhandles.lookup#secmgr&quot;&gt;security manager checks&lt;/a&gt;. Also, it cannot access &lt;a href=&quot;methodhandles.lookup#callsens&quot;&gt;caller sensitive methods&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Discussion:&lt;/em&gt; The lookup class can be changed to any other class &lt;code&gt;C&lt;/code&gt; using an expression of the form &lt;a href=&quot;methodhandles.lookup#in(java.lang.Class)&quot;&gt; &lt;code&gt;publicLookup().in(C.class)&lt;/code&gt; &lt;/a&gt;. but may change the lookup context by virtue of changing the class loader. A public lookup object is always subject to &lt;a href=&quot;methodhandles.lookup#secmgr&quot;&gt;security manager checks&lt;/a&gt;. Also, it cannot access &lt;a href=&quot;methodhandles.lookup#callsens&quot;&gt;caller sensitive methods&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2a6ba7da17ba72be772e2c7413119bd87771bdd7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion:&lt;/em&gt; The lookup class can be changed to any other class &lt;code&gt;C&lt;/code&gt; using an expression of the form &lt;a href=&quot;methodhandles.lookup#in-java.lang.Class-&quot;&gt;&lt;code&gt;publicLookup().in(C.class)&lt;/code&gt;&lt;/a&gt;. Since all classes have equal access to public names, such a change would confer no new access rights. A public lookup object is always subject to &lt;a href=&quot;methodhandles.lookup#secmgr&quot;&gt;security manager checks&lt;/a&gt;. Also, it cannot access &lt;a href=&quot;methodhandles.lookup#callsens&quot;&gt;caller sensitive methods&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;토론 :&lt;/em&gt; 조회 클래스는 &lt;a href=&quot;methodhandles.lookup#in-java.lang.Class-&quot;&gt; &lt;code&gt;publicLookup().in(C.class)&lt;/code&gt; &lt;/a&gt; 형식의 표현식을 사용하여 다른 클래스 &lt;code&gt;C&lt;/code&gt; 로 변경할 수 있습니다 . 모든 클래스에는 공개 이름에 대한 동등한 액세스 권한이 있으므로 이러한 변경은 새로운 액세스 권한을 부여하지 않습니다. 공개 조회 개체는 항상 &lt;a href=&quot;methodhandles.lookup#secmgr&quot;&gt;보안 관리자 검사를&lt;/a&gt; 받아야 합니다 . 또한 &lt;a href=&quot;methodhandles.lookup#callsens&quot;&gt;발신자 감지 방법에&lt;/a&gt; 액세스 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="4a177b4aa1f165fffb11c0ccfa45d23365c1ffcf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion:&lt;/em&gt; These rules are designed as a dynamically-typed variation of the Java rules for variable arity methods. In both cases, callers to a variable arity method or method handle can either pass zero or more positional arguments, or else pass pre-collected arrays of any length. Users should be aware of the special role of the final argument, and of the effect of a type match on that final argument, which determines whether or not a single trailing argument is interpreted as a whole array or a single element of an array to be collected. Note that the dynamic type of the trailing argument has no effect on this decision, only a comparison between the symbolic type descriptor of the call site and the type descriptor of the method handle.)</source>
          <target state="translated">&lt;em&gt;토론 :&lt;/em&gt; 이 규칙은 가변 arity 메소드에 대한 Java 규칙의 동적 유형 변형으로 설계되었습니다. 두 경우 모두, 가변 arity 메소드 또는 메소드 핸들에 대한 호출자는 0 개 이상의 위치 인수를 전달하거나, 임의 길이의 사전 수집 된 배열을 전달할 수 있습니다. 사용자는 최종 인수의 특수한 역할과 해당 최종 인수에 대한 유형 일치의 영향을 알고 있어야합니다.이 인수는 단일 후행 인수가 전체 배열 또는 배열의 단일 요소로 해석되는지 여부를 결정합니다. 모은. 후행 인수의 동적 유형은이 결정에 영향을 미치지 않으며 호출 사이트의 기호 유형 설명자와 메소드 핸들의 유형 설명자 간의 비교 만 가능합니다.)</target>
        </trans-unit>
        <trans-unit id="f53773c69289ff81bb3d31f68095177e0229899f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion:&lt;/em&gt; These rules do not enable the JVM to duplicate dynamic call sites, or to issue &amp;ldquo;causeless&amp;rdquo; bootstrap method calls. Every dynamic call site transitions at most once from unlinked to linked, just before its first invocation. There is no way to undo the effect of a completed bootstrap method call.</source>
          <target state="translated">&lt;em&gt;토론 :&lt;/em&gt; 이 규칙으로 JVM이 동적 호출 사이트를 복제하거나 &quot;원인없는&quot;부트 스트랩 메소드 호출을 실행할 수 없습니다. 모든 동적 호출 사이트는 첫 번째 호출 직전에 최대 한 번은 링크 해제에서 링크로 전환됩니다. 완료된 부트 스트랩 메소드 호출의 효과를 취소 할 수있는 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="9187195061d0c39bfd41779f8e6556f3d2616359" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discussion:&lt;/em&gt; These rules do not enable the JVM to share call sites, or to issue &amp;ldquo;causeless&amp;rdquo; bootstrap method calls. Every &lt;code&gt;invokedynamic&lt;/code&gt; instruction transitions at most once from unlinked to linked, just before its first invocation. There is no way to undo the effect of a completed bootstrap method call.</source>
          <target state="translated">&lt;em&gt;Discussion:&lt;/em&gt; These rules do not enable the JVM to share call sites, or to issue &amp;ldquo;causeless&amp;rdquo; bootstrap method calls. Every &lt;code&gt;invokedynamic&lt;/code&gt; instruction transitions at most once from unlinked to linked, just before its first invocation. There is no way to undo the effect of a completed bootstrap method call.</target>
        </trans-unit>
        <trans-unit id="ce0cd10d79add8dd2bb954b675f6e6db7d3fb13e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;E&lt;/em&gt;&lt;code&gt;[]&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;E&lt;/em&gt;&lt;code&gt;[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f931573409b5d1227bce394068b062979182527d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Effectively identical sequences:&lt;/em&gt;  A parameter list &lt;code&gt;A&lt;/code&gt; is defined to be &lt;em&gt;effectively identical&lt;/em&gt; to another parameter list &lt;code&gt;B&lt;/code&gt; if &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are identical, or if &lt;code&gt;A&lt;/code&gt; is shorter and is identical with a proper prefix of &lt;code&gt;B&lt;/code&gt;. When speaking of an unordered set of parameter lists, we say they the set is &quot;effectively identical&quot; as a whole if the set contains a longest list, and all members of the set are effectively identical to that longest list. For example, any set of type sequences of the form &lt;code&gt;(V*)&lt;/code&gt; is effectively identical, and the same is true if more sequences of the form &lt;code&gt;(V... A*)&lt;/code&gt; are added.</source>
          <target state="translated">&lt;em&gt;Effectively identical sequences:&lt;/em&gt; A parameter list &lt;code&gt;A&lt;/code&gt; is defined to be &lt;em&gt;effectively identical&lt;/em&gt; to another parameter list &lt;code&gt;B&lt;/code&gt; if &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are identical, or if &lt;code&gt;A&lt;/code&gt; is shorter and is identical with a proper prefix of &lt;code&gt;B&lt;/code&gt; . When speaking of an unordered set of parameter lists, we say they the set is &quot;effectively identical&quot; as a whole if the set contains a longest list, and all members of the set are effectively identical to that longest list. For example, any set of type sequences of the form &lt;code&gt;(V*)&lt;/code&gt; is effectively identical, and the same is true if more sequences of the form &lt;code&gt;(V... A*)&lt;/code&gt; are added.</target>
        </trans-unit>
        <trans-unit id="5de66509b49d2dc767a61c64a1cdb735f5b069dc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Enabled&lt;/em&gt; cipher suites, which may be fewer than the full set of supported suites. This group is set using the &lt;a href=&quot;#setEnabledCipherSuites(java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;setEnabledCipherSuites(String [])&lt;/code&gt;&lt;/a&gt; method, and queried using the &lt;a href=&quot;#getEnabledCipherSuites()&quot;&gt;&lt;code&gt;getEnabledCipherSuites()&lt;/code&gt;&lt;/a&gt; method. Initially, a default set of cipher suites will be enabled on a new engine that represents the minimum suggested configuration.</source>
          <target state="translated">&lt;em&gt;Enabled&lt;/em&gt; cipher suites, which may be fewer than the full set of supported suites. This group is set using the &lt;a href=&quot;#setEnabledCipherSuites(java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;setEnabledCipherSuites(String [])&lt;/code&gt; &lt;/a&gt; method, and queried using the &lt;a href=&quot;#getEnabledCipherSuites()&quot;&gt; &lt;code&gt;getEnabledCipherSuites()&lt;/code&gt; &lt;/a&gt; method. Initially, a default set of cipher suites will be enabled on a new engine that represents the minimum suggested configuration.</target>
        </trans-unit>
        <trans-unit id="9be3194edb3ba6b33277bb2449d3b2f3fd270c28" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Enabled&lt;/em&gt; cipher suites, which may be fewer than the full set of supported suites. This group is set using the &lt;a href=&quot;sslengine#setEnabledCipherSuites-java.lang.String:A-&quot;&gt;&lt;code&gt;setEnabledCipherSuites(String [])&lt;/code&gt;&lt;/a&gt; method, and queried using the &lt;a href=&quot;sslengine#getEnabledCipherSuites--&quot;&gt;&lt;code&gt;getEnabledCipherSuites()&lt;/code&gt;&lt;/a&gt; method. Initially, a default set of cipher suites will be enabled on a new engine that represents the minimum suggested configuration.</source>
          <target state="translated">&lt;em&gt;활성화 된&lt;/em&gt; 암호 제품군 (지원되는 전체 제품군보다 적을 수 있음) 이 그룹은 &lt;a href=&quot;sslengine#setEnabledCipherSuites-java.lang.String:A-&quot;&gt; &lt;code&gt;setEnabledCipherSuites(String [])&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 설정되고 &lt;a href=&quot;sslengine#getEnabledCipherSuites--&quot;&gt; &lt;code&gt;getEnabledCipherSuites()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 조회됩니다 . 처음에는 제안 된 최소 구성을 나타내는 새 엔진에서 기본 암호 세트가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7bf27517b7f3a252d05104a26926e52786b8f15b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Enabled&lt;/em&gt; cipher suites, which may be fewer than the full set of supported suites. This group is set using the &lt;em&gt;setEnabledCipherSuites&lt;/em&gt; method, and queried using the &lt;em&gt;getEnabledCipherSuites&lt;/em&gt; method. Initially, a default set of cipher suites will be enabled on a new socket that represents the minimum suggested configuration.</source>
          <target state="translated">&lt;em&gt;활성화 된&lt;/em&gt; 암호 제품군 (지원되는 전체 제품군보다 적을 수 있음) 이 그룹은 &lt;em&gt;setEnabledCipherSuites&lt;/em&gt; 메소드를 사용하여 설정 되고 &lt;em&gt;getEnabledCipherSuites&lt;/em&gt; 메소드를 사용하여 조회됩니다 . 처음에는 제안 된 최소 구성을 나타내는 새 소켓에서 기본 암호 스위트 세트가 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="62e59e332897488c89390cc671b1cc66af336512" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example mapper functions:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Example mapper functions:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be9ec531449b3cebfbe140c12a60e642b2dfee5a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example.&lt;/em&gt; As a consequence of step 1A above, the &lt;code&gt;loop&lt;/code&gt; combinator has the following property:</source>
          <target state="translated">&lt;em&gt;Example.&lt;/em&gt; As a consequence of step 1A above, the &lt;code&gt;loop&lt;/code&gt; combinator has the following property:</target>
        </trans-unit>
        <trans-unit id="ecfc3a0cf743cf43a43acd8d729fe6970b900a77" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example&lt;/em&gt;: Consider a &lt;code&gt;GregorianCalendar&lt;/code&gt; originally set to August 31, 1999. Calling &lt;code&gt;add(Calendar.MONTH,
 13)&lt;/code&gt; sets the calendar to September 30, 2000. &lt;strong&gt;Add rule 1&lt;/strong&gt; sets the &lt;code&gt;MONTH&lt;/code&gt; field to September, since adding 13 months to August gives September of the next year. Since &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; cannot be 31 in September in a &lt;code&gt;GregorianCalendar&lt;/code&gt;, &lt;strong&gt;add rule 2&lt;/strong&gt; sets the &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; to 30, the closest possible value. Although it is a smaller field, &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; is not adjusted by rule 2, since it is expected to change when the month changes in a &lt;code&gt;GregorianCalendar&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;예&lt;/em&gt; 하십시오 고려 &lt;code&gt;GregorianCalendar&lt;/code&gt; 를 8 월 31 일에 당초 설정을, 1999 년 콜링의 &lt;code&gt;add(Calendar.MONTH, 13)&lt;/code&gt; 9 월 30 일 2000 달력을 설정 &lt;strong&gt;추가 규칙 1&lt;/strong&gt; 설정합니다 &lt;code&gt;MONTH&lt;/code&gt; 의 8 월에 13 개월을 추가하면 이후 9 월 필드 것은, 9 월을 제공합니다 다음 해. 이후 &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; 는 A의 9 월 31 일을하지 않을 수 &lt;code&gt;GregorianCalendar&lt;/code&gt; 를 , &lt;strong&gt;규칙 2 개 추가&lt;/strong&gt; 설정합니다 &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; 을 , 30에 가장 근접한 값입니다. 더 작은 필드이지만 &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; 는 규칙 2에 의해 조정되지 않습니다 . &lt;code&gt;GregorianCalendar&lt;/code&gt; 에서 월이 변경 될 때 변경 될 것으로 예상되기 때문입니다 .</target>
        </trans-unit>
        <trans-unit id="015c13a1c8c1dc2bb666045933bc46518a52bf5f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example&lt;/em&gt;: Consider a &lt;code&gt;GregorianCalendar&lt;/code&gt; originally set to August 31, 1999. Calling &lt;code&gt;roll(Calendar.MONTH,
 8)&lt;/code&gt; sets the calendar to April 30, &lt;strong&gt;1999&lt;/strong&gt;. Using a &lt;code&gt;GregorianCalendar&lt;/code&gt;, the &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; field cannot be 31 in the month April. &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; is set to the closest possible value, 30. The &lt;code&gt;YEAR&lt;/code&gt; field maintains the value of 1999 because it is a larger field than &lt;code&gt;MONTH&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;예&lt;/em&gt; : 원래 1999 년 8 월 31 일로 설정된 &lt;code&gt;GregorianCalendar&lt;/code&gt; 를 고려하십시오 . 호출 &lt;code&gt;roll(Calendar.MONTH, 8)&lt;/code&gt; 은 달력을 &lt;strong&gt;1999 년&lt;/strong&gt; 4 월 30 일로 설정합니다 . 사용 &lt;code&gt;GregorianCalendar&lt;/code&gt; 의 &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; 의 필드는 4 월에있어 31 일이 없습니다. &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; 는 가능한 가장 가까운 값인 30으로 설정됩니다. &lt;code&gt;YEAR&lt;/code&gt; 필드는 &lt;code&gt;MONTH&lt;/code&gt; 보다 큰 필드이므로 1999의 값을 유지합니다 .</target>
        </trans-unit>
        <trans-unit id="4e0435ab2653a4c586823c355c877b5846dfad1e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example&lt;/em&gt;: Consider a &lt;code&gt;GregorianCalendar&lt;/code&gt; originally set to August 31, 1999. Calling &lt;code&gt;set(Calendar.MONTH,
 Calendar.SEPTEMBER)&lt;/code&gt; sets the date to September 31, 1999. This is a temporary internal representation that resolves to October 1, 1999 if &lt;code&gt;getTime()&lt;/code&gt; is then called. However, a call to &lt;code&gt;set(Calendar.DAY_OF_MONTH, 30)&lt;/code&gt; before the call to &lt;code&gt;getTime()&lt;/code&gt; sets the date to September 30, 1999, since no recomputation occurs after &lt;code&gt;set()&lt;/code&gt; itself.</source>
          <target state="translated">&lt;em&gt;예&lt;/em&gt; : 원래 1999 년 8 월 31 일로 설정된 &lt;code&gt;GregorianCalendar&lt;/code&gt; 를 고려하십시오 . &lt;code&gt;set(Calendar.MONTH, Calendar.SEPTEMBER)&lt;/code&gt; 호출 하면 날짜가 1999 년 9 월 31 일로 설정됩니다. &lt;code&gt;getTime()&lt;/code&gt; 경우 1999 년 10 월 1 일로 해석되는 임시 내부 표현입니다. 그런 다음 호출됩니다. 그러나 &lt;code&gt;getTime()&lt;/code&gt; 호출하기 전에 &lt;code&gt;set(Calendar.DAY_OF_MONTH, 30)&lt;/code&gt; 를 호출하면 &lt;code&gt;set()&lt;/code&gt; 자체 후에 재 계산이 발생하지 않으므로 날짜가 1999 년 9 월 30 일로 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="e09c18cb87052cfbe7b0181d6ff8fd17559aaeb0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example&lt;/em&gt;: Consider a &lt;code&gt;GregorianCalendar&lt;/code&gt; originally set to August 31, 1999. Calling &lt;code&gt;set(Calendar.MONTH,
 Calendar.SEPTEMBER)&lt;/code&gt; sets the date to September 31, 1999. This is a temporary internal representation that resolves to October 1, 1999 if &lt;code&gt;getTime()&lt;/code&gt;is then called. However, a call to &lt;code&gt;set(Calendar.DAY_OF_MONTH, 30)&lt;/code&gt; before the call to &lt;code&gt;getTime()&lt;/code&gt; sets the date to September 30, 1999, since no recomputation occurs after &lt;code&gt;set()&lt;/code&gt; itself.</source>
          <target state="translated">&lt;em&gt;예&lt;/em&gt; : 원래 1999 년 8 월 31 일로 설정된 &lt;code&gt;GregorianCalendar&lt;/code&gt; 를 고려하십시오 . &lt;code&gt;set(Calendar.MONTH, Calendar.SEPTEMBER)&lt;/code&gt; 호출 은 날짜를 1999 년 9 월 31 일로 설정합니다. &lt;code&gt;getTime()&lt;/code&gt; 경우 1999 년 10 월 1 일로 해결되는 임시 내부 표현입니다. 그런 다음 호출됩니다. 그러나 &lt;code&gt;getTime()&lt;/code&gt; 호출하기 전에 &lt;code&gt;set(Calendar.DAY_OF_MONTH, 30)&lt;/code&gt; 을 호출하면 &lt;code&gt;set()&lt;/code&gt; 자체 이후에 재 계산이 발생하지 않으므로 날짜를 1999 년 9 월 30 일로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="3610e92071fce5db5915731ecb0cfb3a2b4d3b7d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example&lt;/em&gt;: Consider a &lt;code&gt;GregorianCalendar&lt;/code&gt; originally set to December 31, 1999. Calling &lt;a href=&quot;#roll(int,boolean)&quot;&gt;&lt;code&gt;roll(Calendar.MONTH, true)&lt;/code&gt;&lt;/a&gt; sets the calendar to January 31, 1999. The &lt;code&gt;YEAR&lt;/code&gt; field is unchanged because it is a larger field than &lt;code&gt;MONTH&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;Example&lt;/em&gt;: Consider a &lt;code&gt;GregorianCalendar&lt;/code&gt; originally set to December 31, 1999. Calling &lt;a href=&quot;#roll(int,boolean)&quot;&gt; &lt;code&gt;roll(Calendar.MONTH, true)&lt;/code&gt; &lt;/a&gt; sets the calendar to January 31, 1999. The &lt;code&gt;YEAR&lt;/code&gt; field is unchanged because it is a larger field than &lt;code&gt;MONTH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4e8575c448677f9b5a11f1188f87cd462cc2983" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example&lt;/em&gt;: Consider a &lt;code&gt;GregorianCalendar&lt;/code&gt; originally set to December 31, 1999. Calling &lt;a href=&quot;gregoriancalendar#roll-int-boolean-&quot;&gt;&lt;code&gt;roll(Calendar.MONTH, true)&lt;/code&gt;&lt;/a&gt; sets the calendar to January 31, 1999. The &lt;code&gt;YEAR&lt;/code&gt; field is unchanged because it is a larger field than &lt;code&gt;MONTH&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;예&lt;/em&gt; : 원래 1999 년 12 월 31 일로 설정된 &lt;code&gt;GregorianCalendar&lt;/code&gt; 를 고려하십시오 . 호출 &lt;a href=&quot;gregoriancalendar#roll-int-boolean-&quot;&gt; &lt;code&gt;roll(Calendar.MONTH, true)&lt;/code&gt; &lt;/a&gt; 은 달력을 1999 년 1 월 31 일로 설정합니다. &lt;code&gt;YEAR&lt;/code&gt; 필드는 &lt;code&gt;MONTH&lt;/code&gt; 보다 큰 필드이므로 변경되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="37b0ffee67d3fb4c18e58b7db51575ed68a8bd11" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example&lt;/em&gt;: Consider a &lt;code&gt;GregorianCalendar&lt;/code&gt; originally set to Sunday June 6, 1999. Calling &lt;code&gt;roll(Calendar.WEEK_OF_MONTH, -1)&lt;/code&gt; sets the calendar to Tuesday June 1, 1999, whereas calling &lt;code&gt;add(Calendar.WEEK_OF_MONTH, -1)&lt;/code&gt; sets the calendar to Sunday May 30, 1999. This is because the roll rule imposes an additional constraint: The &lt;code&gt;MONTH&lt;/code&gt; must not change when the &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; is rolled. Taken together with add rule 1, the resultant date must be between Tuesday June 1 and Saturday June 5. According to add rule 2, the &lt;code&gt;DAY_OF_WEEK&lt;/code&gt;, an invariant when changing the &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt;, is set to Tuesday, the closest possible value to Sunday (where Sunday is the first day of the week).</source>
          <target state="translated">&lt;em&gt;예&lt;/em&gt; : 원래 1999 년 6 월 6 일 일요일로 설정된 &lt;code&gt;GregorianCalendar&lt;/code&gt; 를 고려하십시오 . 호출 &lt;code&gt;roll(Calendar.WEEK_OF_MONTH, -1)&lt;/code&gt; 은 달력을 1999 년 6 월 1 일 화요일로 설정하고 &lt;code&gt;add(Calendar.WEEK_OF_MONTH, -1)&lt;/code&gt; 호출 하면 달력이 일요일로 설정됩니다. 롤 규칙에 추가 제약 조건이 적용되기 때문 입니다. &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; 가 롤백 될 때 &lt;code&gt;MONTH&lt;/code&gt; 가 변경되어서는 안됩니다 . 추가 규칙 1과 함께, 결과 날짜는 6 월 1 일 화요일과 6 월 5 일 토요일 사이 여야합니다. 추가 규칙 2 인 &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; 에 따르면 &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; 를 변경할 때 변하지 않습니다., 일요일에 가장 가까운 값인 일요일로 설정됩니다 (일요일은 요일의 첫 번째 날).</target>
        </trans-unit>
        <trans-unit id="73eb0a0b6b49a657d94afa893ef12bbbccc1b1d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example&lt;/em&gt;: See &lt;a href=&quot;gregoriancalendar#roll(int,int)&quot;&gt;&lt;code&gt;GregorianCalendar.roll(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Example&lt;/em&gt;: See &lt;a href=&quot;gregoriancalendar#roll(int,int)&quot;&gt; &lt;code&gt;GregorianCalendar.roll(int, int)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2eba6ea35c9e656bf87059d0d9c39857af488313" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example&lt;/em&gt;: See &lt;a href=&quot;gregoriancalendar#roll-int-int-&quot;&gt;&lt;code&gt;GregorianCalendar.roll(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;예&lt;/em&gt; : &lt;a href=&quot;gregoriancalendar#roll-int-int-&quot;&gt; &lt;code&gt;GregorianCalendar.roll(int, int)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ac4c3d4d29198dd013304f2e3d5da503507b04c4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b8fccdaf8ca6f4cb7f4401120008fafb8210a052" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe9840aa3bc5ad6b81c188f4ae59ddca3dcf4bf5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = (1-&lt;em&gt;A&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt;) and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = (1-&lt;em&gt;A&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;), thus:</source>
          <target state="translated">&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = (1-&lt;em&gt;A&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt;) and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = (1-&lt;em&gt;A&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;), thus:</target>
        </trans-unit>
        <trans-unit id="10d19841ab247978a135716a596509c71ec4980d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = (1-&lt;em&gt;A&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt;) and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = 0, thus:</source>
          <target state="translated">&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = (1-&lt;em&gt;A&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt;) and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = 0, thus:</target>
        </trans-unit>
        <trans-unit id="5c0315bdef0a10184a6c89437b6fa12e6272b1ef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = (1-&lt;em&gt;A&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt;) and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = 1, thus:</source>
          <target state="translated">&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = (1-&lt;em&gt;A&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt;) and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = 1, thus:</target>
        </trans-unit>
        <trans-unit id="c3e1b2132b61fc1083c26336d833d205cd591f7b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = (1-&lt;em&gt;A&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt;) and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = &lt;em&gt;A&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;, thus:</source>
          <target state="translated">&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = (1-&lt;em&gt;A&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt;) and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = &lt;em&gt;A&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;, thus:</target>
        </trans-unit>
        <trans-unit id="23e5826a0e9cbae6b3e65d26b9db8f2f5f8eadf5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = 0 and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = (1-&lt;em&gt;A&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;), thus:</source>
          <target state="translated">&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = 0 and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = (1-&lt;em&gt;A&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;), thus:</target>
        </trans-unit>
        <trans-unit id="73988ac57acec39e1682acc54007c132329df94b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = 0 and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = 0, thus:</source>
          <target state="translated">&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = 0 and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = 0, thus:</target>
        </trans-unit>
        <trans-unit id="63d6f8926334867af476e181be41877b2623bb2b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = 0 and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = 1, thus:</source>
          <target state="translated">&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = 0 and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = 1, thus:</target>
        </trans-unit>
        <trans-unit id="4fb3c837f993de45550816bd40a6202379006e0e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = 0 and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = &lt;em&gt;A&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;, thus:</source>
          <target state="translated">&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = 0 and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = &lt;em&gt;A&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;, thus:</target>
        </trans-unit>
        <trans-unit id="5e1d92c2a50332bf1b59e446295c589c5a9f0279" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = 1 and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = (1-&lt;em&gt;A&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;), thus:</source>
          <target state="translated">&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = 1 and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = (1-&lt;em&gt;A&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;), thus:</target>
        </trans-unit>
        <trans-unit id="7bf0dd846a866e745eb3997ce88b38dcc1a769c1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = 1 and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = 0, thus:</source>
          <target state="translated">&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = 1 and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = 0, thus:</target>
        </trans-unit>
        <trans-unit id="293ec471b7047000f69bcf2cf8d9e22ad8f51915" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = &lt;em&gt;A&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = (1-&lt;em&gt;A&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;), thus:</source>
          <target state="translated">&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = &lt;em&gt;A&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = (1-&lt;em&gt;A&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;), thus:</target>
        </trans-unit>
        <trans-unit id="5977feb81423c52a2606da5b7f715c4f60e7204a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = &lt;em&gt;A&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = 0, thus:</source>
          <target state="translated">&lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = &lt;em&gt;A&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = 0, thus:</target>
        </trans-unit>
        <trans-unit id="98830ab07be833f1df672218b5344034b6d43367" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Fault tolerant&lt;/em&gt;: Non-structural errors in the file, caused either by damage to the file or by API changes made to classes in an archive remain localized so that a reader can report the error and continue to load the parts of the document which were not affected by the error.</source>
          <target state="translated">&lt;em&gt;내결함성&lt;/em&gt; : 파일의 손상 또는 아카이브의 클래스에 대한 API 변경으로 인한 파일의 비 구조적 오류는 현지화 된 상태로 유지되므로 독자는 오류를보고하고 문서의 일부를 계속로드 할 수 있습니다 오류의 영향을받습니다.</target>
        </trans-unit>
        <trans-unit id="841e5835e89e97ccb19fae1d641f1424882a55e1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Figure: barTextNode.replaceWholeText(&quot;yo&quot;) modifies the textual content of barTextNode with &quot;yo&quot;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Figure: barTextNode.replaceWholeText(&quot;yo&quot;) modifies the textual content of barTextNode with &quot;yo&quot;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="30f786b9a08dd081d6625d4af1343870b5259225" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Figure: barTextNode.wholeText value is &quot;barfoo&quot;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Figure: barTextNode.wholeText value is &quot;barfoo&quot;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="59f0e7aad08b3e0f1fedc80cbc8746ef495d30ba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Final observations.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Final observations.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="db3982435b361bc7928b572c622f00362f661539" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Functional interfaces&lt;/em&gt; provide target types for lambda expressions and method references.</source>
          <target state="translated">&lt;em&gt;기능적 인터페이스&lt;/em&gt; 는 람다 식 및 메서드 참조에 대한 대상 유형을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="309bfab9e2c7efdf589154e6f05ea888c3285bda" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Functional interfaces&lt;/em&gt; provide target types for lambda expressions and method references. Each functional interface has a single abstract method, called the &lt;em&gt;functional method&lt;/em&gt; for that functional interface, to which the lambda expression's parameter and return types are matched or adapted. Functional interfaces can provide a target type in multiple contexts, such as assignment context, method invocation, or cast context:</source>
          <target state="translated">&lt;em&gt;기능적 인터페이스&lt;/em&gt; 는 람다 식 및 메서드 참조에 대한 대상 유형을 제공합니다. 각 기능 인터페이스에는 람다 식의 매개 변수 및 반환 유형이 일치하거나 조정되는 해당 기능 인터페이스에 대한 &lt;em&gt;기능적 방법&lt;/em&gt; 이라고하는 단일 추상 방법 이 있습니다. 기능적 인터페이스는 할당 컨텍스트, 메소드 호출 또는 캐스트 컨텍스트와 같은 여러 컨텍스트에서 대상 유형을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f952d24d12f67c1217a0aaf812a6a322cbe1307" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Implementation Note:&lt;/em&gt; A switch point behaves as if implemented on top of &lt;a href=&quot;mutablecallsite&quot;&gt;&lt;code&gt;MutableCallSite&lt;/code&gt;&lt;/a&gt;, approximately as follows:</source>
          <target state="translated">&lt;em&gt;구현 참고 사항 :&lt;/em&gt; 전환 지점은 &lt;a href=&quot;mutablecallsite&quot;&gt; &lt;code&gt;MutableCallSite&lt;/code&gt; &lt;/a&gt; 위에서 구현 된 것처럼 대략 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d45fd6d567686210e5a1c3406109295308e22070" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Implementation Note:&lt;/em&gt; Simple implementations of &lt;code&gt;MutableCallSite&lt;/code&gt; may use a volatile variable for the target of a mutable call site. In such an implementation, the &lt;code&gt;syncAll&lt;/code&gt; method can be a no-op, and yet it will conform to the JMM behavior documented above.</source>
          <target state="translated">&lt;em&gt;구현 참고 사항 : &lt;/em&gt; &lt;code&gt;MutableCallSite&lt;/code&gt; 의 간단한 구현은 변경 가능한 호출 사이트의 대상에 휘발성 변수를 사용할 수 있습니다. 이러한 구현에서 &lt;code&gt;syncAll&lt;/code&gt; 메소드는 작동하지 않을 수 있지만 위에서 설명한 JMM 동작을 준수합니다.</target>
        </trans-unit>
        <trans-unit id="504c858df021f8fe40f4dce654637469a1d63294" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Implementation Note:&lt;/em&gt; Simple implementations of &lt;code&gt;SwitchPoint&lt;/code&gt; may use a private &lt;a href=&quot;mutablecallsite&quot;&gt;&lt;code&gt;MutableCallSite&lt;/code&gt;&lt;/a&gt; to publish the state of a switch point. In such an implementation, the &lt;code&gt;invalidateAll&lt;/code&gt; method can simply change the call site's target, and issue one call to &lt;a href=&quot;mutablecallsite#syncAll(java.lang.invoke.MutableCallSite%5B%5D)&quot;&gt;synchronize&lt;/a&gt; all the private call sites.</source>
          <target state="translated">&lt;em&gt;Implementation Note:&lt;/em&gt; Simple implementations of &lt;code&gt;SwitchPoint&lt;/code&gt; may use a private &lt;a href=&quot;mutablecallsite&quot;&gt; &lt;code&gt;MutableCallSite&lt;/code&gt; &lt;/a&gt; to publish the state of a switch point. In such an implementation, the &lt;code&gt;invalidateAll&lt;/code&gt; method can simply change the call site's target, and issue one call to &lt;a href=&quot;mutablecallsite#syncAll(java.lang.invoke.MutableCallSite%5B%5D)&quot;&gt;synchronize&lt;/a&gt; all the private call sites.</target>
        </trans-unit>
        <trans-unit id="4cc42577b406b63228d9fa077e7432db3d709f5d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Implementation Note:&lt;/em&gt; Simple implementations of &lt;code&gt;SwitchPoint&lt;/code&gt; may use a private &lt;a href=&quot;mutablecallsite&quot;&gt;&lt;code&gt;MutableCallSite&lt;/code&gt;&lt;/a&gt; to publish the state of a switch point. In such an implementation, the &lt;code&gt;invalidateAll&lt;/code&gt; method can simply change the call site's target, and issue one call to &lt;a href=&quot;mutablecallsite#syncAll-java.lang.invoke.MutableCallSite:A-&quot;&gt;synchronize&lt;/a&gt; all the private call sites.</source>
          <target state="translated">&lt;em&gt;구현 참고 사항 : &lt;/em&gt; &lt;code&gt;SwitchPoint&lt;/code&gt; 의 간단한 구현은 전용 &lt;a href=&quot;mutablecallsite&quot;&gt; &lt;code&gt;MutableCallSite&lt;/code&gt; &lt;/a&gt; 를 사용 하여 전환 지점의 상태를 게시 할 수 있습니다 . 이러한 구현에서 &lt;code&gt;invalidateAll&lt;/code&gt; 메소드는 단순히 호출 사이트의 대상을 변경하고 하나의 호출을 발행하여 모든 개인 호출 사이트 를 &lt;a href=&quot;mutablecallsite#syncAll-java.lang.invoke.MutableCallSite:A-&quot;&gt;동기화&lt;/a&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a571ef7f12bc1b5b131db18e95ca057edea4aa1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Implementation Note:&lt;/em&gt; Therefore, each instance must implement a unique single-method interface. Implementations may not bundle together multiple single-method interfaces onto single implementation classes in the style of &lt;a href=&quot;../../../../java.desktop/java/awt/awteventmulticaster&quot;&gt;&lt;code&gt;AWTEventMulticaster&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Implementation Note:&lt;/em&gt; Therefore, each instance must implement a unique single-method interface. Implementations may not bundle together multiple single-method interfaces onto single implementation classes in the style of &lt;a href=&quot;../../../../java.desktop/java/awt/awteventmulticaster&quot;&gt; &lt;code&gt;AWTEventMulticaster&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="63cb590db8f79447b20f0c0afa2f33d416deef33" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Implementation Note:&lt;/em&gt; Therefore, each instance must implement a unique single-method interface. Implementations may not bundle together multiple single-method interfaces onto single implementation classes in the style of &lt;a href=&quot;/openjdk~8_gui/java/awt/awteventmulticaster&quot;&gt;&lt;code&gt;AWTEventMulticaster&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;구현 참고 :&lt;/em&gt; 따라서 각 인스턴스는 고유 한 단일 메소드 인터페이스를 구현해야합니다. 구현은 &lt;a href=&quot;/openjdk~8_gui/java/awt/awteventmulticaster&quot;&gt; &lt;code&gt;AWTEventMulticaster&lt;/code&gt; &lt;/a&gt; 스타일의 단일 구현 클래스에 여러 단일 메소드 인터페이스를 함께 묶을 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="4a1cfb2473bff4c7a54ac2f7ef00b67caf37cbc9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Implementation note:&lt;/em&gt; a consequence of this requirement is that a trivial implementation of output to a &lt;a href=&quot;../../../java.base/java/util/jar/jaroutputstream&quot;&gt;JarOutputStream&lt;/a&gt; is not a sufficient implementation. That is, rather than creating a JavaFileObject that returns the JarOutputStream directly, the contents must be cached until closed and then written to the JarOutputStream.</source>
          <target state="translated">&lt;em&gt;Implementation note:&lt;/em&gt; a consequence of this requirement is that a trivial implementation of output to a &lt;a href=&quot;../../../java.base/java/util/jar/jaroutputstream&quot;&gt;JarOutputStream&lt;/a&gt; is not a sufficient implementation. That is, rather than creating a JavaFileObject that returns the JarOutputStream directly, the contents must be cached until closed and then written to the JarOutputStream.</target>
        </trans-unit>
        <trans-unit id="3878150b95c6d83960028be0601e86cc6f105637" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Implementation note:&lt;/em&gt; a consequence of this requirement is that a trivial implementation of output to a &lt;a href=&quot;../../java/util/jar/jaroutputstream&quot;&gt;JarOutputStream&lt;/a&gt; is not a sufficient implementation. That is, rather than creating a JavaFileObject that returns the JarOutputStream directly, the contents must be cached until closed and then written to the JarOutputStream.</source>
          <target state="translated">&lt;em&gt;구현 참고 사항 :&lt;/em&gt; 이 요구 사항의 결과는 &lt;a href=&quot;../../java/util/jar/jaroutputstream&quot;&gt;JarOutputStream에&lt;/a&gt; 대한 간단한 출력 구현이 충분하지 않다는 것입니다. 즉, JarOutputStream을 직접 리턴하는 JavaFileObject를 작성하지 않고 컨텐츠를 닫을 때까지 캐시 한 다음 JarOutputStream에 기록해야합니다.</target>
        </trans-unit>
        <trans-unit id="2f411c12c155b50175d0ae615739c2ef432024a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Implementers of this interface are also strongly advised to not have the &lt;code&gt;close&lt;/code&gt; method throw &lt;a href=&quot;interruptedexception&quot;&gt;&lt;code&gt;InterruptedException&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt; This exception interacts with a thread's interrupted status, and runtime misbehavior is likely to occur if an &lt;code&gt;
 InterruptedException&lt;/code&gt; is &lt;a href=&quot;throwable#addSuppressed(java.lang.Throwable)&quot;&gt;suppressed&lt;/a&gt;. More generally, if it would cause problems for an exception to be suppressed, the &lt;code&gt;AutoCloseable.close&lt;/code&gt; method should not throw it.</source>
          <target state="translated">&lt;em&gt;Implementers of this interface are also strongly advised to not have the &lt;code&gt;close&lt;/code&gt; method throw &lt;a href=&quot;interruptedexception&quot;&gt; &lt;code&gt;InterruptedException&lt;/code&gt; &lt;/a&gt;.&lt;/em&gt; This exception interacts with a thread's interrupted status, and runtime misbehavior is likely to occur if an &lt;code&gt; InterruptedException&lt;/code&gt; is &lt;a href=&quot;throwable#addSuppressed(java.lang.Throwable)&quot;&gt;suppressed&lt;/a&gt;. More generally, if it would cause problems for an exception to be suppressed, the &lt;code&gt;AutoCloseable.close&lt;/code&gt; method should not throw it.</target>
        </trans-unit>
        <trans-unit id="46585e67a1e0f7e0ac3277c528483fabcd0456e0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Implementers of this interface are also strongly advised to not have the &lt;code&gt;close&lt;/code&gt; method throw &lt;a href=&quot;interruptedexception&quot;&gt;&lt;code&gt;InterruptedException&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt; This exception interacts with a thread's interrupted status, and runtime misbehavior is likely to occur if an &lt;code&gt;InterruptedException&lt;/code&gt; is &lt;a href=&quot;throwable#addSuppressed-java.lang.Throwable-&quot;&gt;suppressed&lt;/a&gt;. More generally, if it would cause problems for an exception to be suppressed, the &lt;code&gt;AutoCloseable.close&lt;/code&gt; method should not throw it.</source>
          <target state="translated">&lt;em&gt;이 인터페이스의 구현 자들은 &lt;code&gt;close&lt;/code&gt; 메소드가 &lt;a href=&quot;interruptedexception&quot;&gt; &lt;code&gt;InterruptedException&lt;/code&gt; &lt;/a&gt; 을 발생시키지 않도록 강력히 권장합니다 . &lt;/em&gt;이 예외는 스레드의 인터럽트 된 상태와 상호 작용하며 &lt;code&gt;InterruptedException&lt;/code&gt; 이 &lt;a href=&quot;throwable#addSuppressed-java.lang.Throwable-&quot;&gt;억제&lt;/a&gt; 되면 런타임 오작동이 발생할 수 있습니다 . 보다 일반적으로 예외가 억제되는 문제가 발생하면 &lt;code&gt;AutoCloseable.close&lt;/code&gt; 메소드가 예외를 발생 시키지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="c1eee5df5bbb3674904e8ddfea712bfa9ff03644" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;In an XML context, all Element and Attribute names exist in the context of a Namespace. Making this explicit during the construction of a &lt;code&gt;QName&lt;/code&gt; helps prevent hard to diagnosis XML validity errors. The constructors &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;QName(String
 namespaceURI, String localPart)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;QName(String namespaceURI, String localPart, String prefix)&lt;/code&gt;&lt;/a&gt; are preferred.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;In an XML context, all Element and Attribute names exist in the context of a Namespace. Making this explicit during the construction of a &lt;code&gt;QName&lt;/code&gt; helps prevent hard to diagnosis XML validity errors. The constructors &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;QName(String namespaceURI, String localPart)&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;QName(String namespaceURI, String localPart, String prefix)&lt;/code&gt; &lt;/a&gt; are preferred.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="363fb13e819264f2ff0f9051bd2bfcfdebdba7ad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Integrity Protection&lt;/em&gt;. SSL protects against modification of messages by an active wiretapper.</source>
          <target state="translated">&lt;em&gt;무결성 보호&lt;/em&gt; . SSL은 활성 wiretapper에 의한 메시지 수정을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="2a9bea0cac2197b9536e7736d6962b20566246e5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Integrity Protection&lt;/em&gt;. SSL/TLS protects against modification of messages by an active wiretapper.</source>
          <target state="translated">&lt;em&gt;무결성 보호&lt;/em&gt; . SSL / TLS는 활성 도청기에 의한 메시지 수정을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="ebc66c6a245ff649a9d52c77d98fd0739049db54" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Integrity Protection&lt;/em&gt;. SSL/TLS/DTLS protects against modification of messages by an active wiretapper.</source>
          <target state="translated">&lt;em&gt;Integrity Protection&lt;/em&gt;. SSL/TLS/DTLS protects against modification of messages by an active wiretapper.</target>
        </trans-unit>
        <trans-unit id="0a876731aaf91d9efee29ae88ba47bf2bb4f6b28" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Invocation&lt;/em&gt; occurs when a generated concatenation method is invoked with the exact dynamic arguments. This may occur many times for a single concatenation method. The method referenced by the behavior &lt;code&gt;
 MethodHandle&lt;/code&gt; is invoked with the static arguments and any additional dynamic arguments provided on invocation, as if by &lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt;&lt;code&gt;MethodHandle.invoke(Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Invocation&lt;/em&gt; occurs when a generated concatenation method is invoked with the exact dynamic arguments. This may occur many times for a single concatenation method. The method referenced by the behavior &lt;code&gt; MethodHandle&lt;/code&gt; is invoked with the static arguments and any additional dynamic arguments provided on invocation, as if by &lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt; &lt;code&gt;MethodHandle.invoke(Object...)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ae62a98fac867274278ce5b9c2ad96d1401c1629" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Invocation&lt;/em&gt; occurs when an implemented interface method is invoked on a function object. This may occur many times for a single function object. The method referenced by the behavior &lt;code&gt;MethodHandle&lt;/code&gt; is invoked with the captured arguments and any additional arguments provided on invocation, as if by &lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt;&lt;code&gt;MethodHandle.invoke(Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Invocation&lt;/em&gt; occurs when an implemented interface method is invoked on a function object. This may occur many times for a single function object. The method referenced by the behavior &lt;code&gt;MethodHandle&lt;/code&gt; is invoked with the captured arguments and any additional arguments provided on invocation, as if by &lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt; &lt;code&gt;MethodHandle.invoke(Object...)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6537444939e3b832224fe2830009290e18ee84b1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Invocation&lt;/em&gt; occurs when an implemented interface method is invoked on a function object. This may occur many times for a single function object. The method referenced by the behavior &lt;code&gt;MethodHandle&lt;/code&gt; is invoked with the captured arguments and any additional arguments provided on invocation, as if by &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt;&lt;code&gt;MethodHandle.invoke(Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;구현 된 인터페이스 메소드가 함수 오브젝트에서 호출 될 때 &lt;em&gt;호출이&lt;/em&gt; 발생합니다. 단일 함수 객체에 여러 번 발생할 수 있습니다. &lt;code&gt;MethodHandle&lt;/code&gt; 동작에서 참조하는 메소드 는 &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt; &lt;code&gt;MethodHandle.invoke(Object...)&lt;/code&gt; &lt;/a&gt; 와 같이 캡처 된 인수 및 호출시 제공된 추가 인수와 함께 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="f42571c695f7021586a8ba9c35b606735f69583a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;J&lt;/em&gt;, the same type</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;같은 유형의 &lt;em&gt;J&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6bcb2c2a0d1bac325738ef857c327f8fb554fbe7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Linkage&lt;/em&gt; occurs when the methods in this class are invoked. They take as arguments a method type describing the concatenated arguments count and types, and optionally the String &lt;em&gt;recipe&lt;/em&gt;, plus the constants that participate in the String concatenation. The details on accepted recipe shapes are described further below. Linkage may involve dynamically loading a new class that implements the expected concatenation behavior. The &lt;code&gt;CallSite&lt;/code&gt; holds the &lt;code&gt;MethodHandle&lt;/code&gt; pointing to the exact concatenation method. The concatenation methods may be shared among different &lt;code&gt;CallSite&lt;/code&gt;s, e.g. if linkage methods produce them as pure functions.</source>
          <target state="translated">&lt;em&gt;Linkage&lt;/em&gt; occurs when the methods in this class are invoked. They take as arguments a method type describing the concatenated arguments count and types, and optionally the String &lt;em&gt;recipe&lt;/em&gt;, plus the constants that participate in the String concatenation. The details on accepted recipe shapes are described further below. Linkage may involve dynamically loading a new class that implements the expected concatenation behavior. The &lt;code&gt;CallSite&lt;/code&gt; holds the &lt;code&gt;MethodHandle&lt;/code&gt; pointing to the exact concatenation method. The concatenation methods may be shared among different &lt;code&gt;CallSite&lt;/code&gt; s, e.g. if linkage methods produce them as pure functions.</target>
        </trans-unit>
        <trans-unit id="3b57690ac11bbaf01bbdd8ae904dc07f06583f92" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Linkage&lt;/em&gt; occurs when the methods in this class are invoked. They take as arguments an interface to be implemented (typically a &lt;em&gt;functional interface&lt;/em&gt;, one with a single abstract method), a name and signature of a method from that interface to be implemented, a method handle describing the desired implementation behavior for that method, and possibly other additional metadata, and produce a &lt;a href=&quot;callsite&quot;&gt;&lt;code&gt;CallSite&lt;/code&gt;&lt;/a&gt; whose target can be used to create suitable function objects. Linkage may involve dynamically loading a new class that implements the target interface. The &lt;code&gt;CallSite&lt;/code&gt; can be considered a &quot;factory&quot; for function objects and so these linkage methods are referred to as &quot;metafactories&quot;.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;이 클래스의 메소드가 호출 될 때 &lt;em&gt;링크&lt;/em&gt; 가 발생합니다. 구현할 인터페이스 (일반적으로 &lt;em&gt;기능적인 인터페이스&lt;/em&gt; , 단일 추상 메소드가있는 &lt;em&gt;인터페이스&lt;/em&gt; ), 구현할 인터페이스의 메소드 이름 및 서명, 해당 메소드에 대한 원하는 구현 동작을 설명하는 메소드 핸들 을 인수로 사용합니다. 다른 추가 메타 데이터 일 가능성 이 있으며 적절한 함수 객체를 생성하는 데 사용할 수 있는 &lt;a href=&quot;callsite&quot;&gt; &lt;code&gt;CallSite&lt;/code&gt; &lt;/a&gt; 를 생성합니다. 연결에는 대상 인터페이스를 구현하는 새 클래스를 동적으로로드하는 것이 포함될 수 있습니다. &lt;code&gt;CallSite&lt;/code&gt; 는 &quot;metafactories&quot;라고합니다 함수 객체에 대한 이러한 연결 방법 때문에 &quot;공장&quot;으로 간주 될 수있다.</target>
        </trans-unit>
        <trans-unit id="41c0f0803ab591d1df81e4a8888bf7d4758b3245" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Logical&lt;/em&gt; fonts are the five font families defined by the Java platform which must be supported by any Java runtime environment: Serif, SansSerif, Monospaced, Dialog, and DialogInput. These logical fonts are not actual font libraries. Instead, the logical font names are mapped to physical fonts by the Java runtime environment. The mapping is implementation and usually locale dependent, so the look and the metrics provided by them vary. Typically, each logical font name maps to several physical fonts in order to cover a large range of characters.</source>
          <target state="translated">&lt;em&gt;Logical&lt;/em&gt; fonts are the five font families defined by the Java platform which must be supported by any Java runtime environment: Serif, SansSerif, Monospaced, Dialog, and DialogInput. These logical fonts are not actual font libraries. Instead, the logical font names are mapped to physical fonts by the Java runtime environment. The mapping is implementation and usually locale dependent, so the look and the metrics provided by them vary. Typically, each logical font name maps to several physical fonts in order to cover a large range of characters.</target>
        </trans-unit>
        <trans-unit id="763cbd4ea64192240be2a5c940e45e7558947886" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Loop execution.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Loop execution.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="16f255c7a64bfd6ce91fe5f5c8bccd6892d3ebd5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Loop parameters:&lt;/em&gt; A clause function may take all the iteration variable values it is entitled to, in which case it may also take more trailing parameters. Such extra values are called &lt;em&gt;loop parameters&lt;/em&gt;, with their types and values notated as &lt;code&gt;(A...)&lt;/code&gt; and &lt;code&gt;(a...)&lt;/code&gt;. These become the parameters of the resulting loop handle, to be supplied whenever the loop is executed. (Since init functions do not accept iteration variables &lt;code&gt;v&lt;/code&gt;, any parameter to an init function is automatically a loop parameter &lt;code&gt;a&lt;/code&gt;.) As with iteration variables, clause functions are allowed but not required to accept loop parameters. These loop parameters act as loop-invariant values visible across the whole loop.</source>
          <target state="translated">&lt;em&gt;Loop parameters:&lt;/em&gt; A clause function may take all the iteration variable values it is entitled to, in which case it may also take more trailing parameters. Such extra values are called &lt;em&gt;loop parameters&lt;/em&gt;, with their types and values notated as &lt;code&gt;(A...)&lt;/code&gt; and &lt;code&gt;(a...)&lt;/code&gt; . These become the parameters of the resulting loop handle, to be supplied whenever the loop is executed. (Since init functions do not accept iteration variables &lt;code&gt;v&lt;/code&gt; , any parameter to an init function is automatically a loop parameter &lt;code&gt;a&lt;/code&gt; .) As with iteration variables, clause functions are allowed but not required to accept loop parameters. These loop parameters act as loop-invariant values visible across the whole loop.</target>
        </trans-unit>
        <trans-unit id="3eda05d0c13b1f3bc1f8fc96ddf1ff816fd23e06" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Multiple interfaces.&lt;/em&gt; If needed, more than one interface can be implemented by the function object. (These additional interfaces are typically marker interfaces with no methods.) The flag &lt;code&gt;FLAG_MARKERS&lt;/code&gt; indicates that a list of additional interfaces will be provided, each of which should be implemented by the resulting function object.</source>
          <target state="translated">&lt;em&gt;여러 인터페이스. &lt;/em&gt;필요한 경우 함수 객체로 둘 이상의 인터페이스를 구현할 수 있습니다. (이러한 추가 인터페이스는 일반적으로 메서드가없는 마커 인터페이스입니다.) &lt;code&gt;FLAG_MARKERS&lt;/code&gt; 플래그 는 추가 인터페이스 목록이 제공 될 것임을 나타내며, 각 인터페이스는 결과 함수 객체에 의해 구현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="fecc7b89194206c7b586450d49431fcc2584fbb9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NOTE: This has the side effect of changing the model, because the &lt;code&gt;EditorKit&lt;/code&gt; is the source of how a particular type of content is modeled. This method will cause &lt;code&gt;setDocument&lt;/code&gt; to be called on behalf of the caller to ensure integrity of the internal state.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;NOTE: This has the side effect of changing the model, because the &lt;code&gt;EditorKit&lt;/code&gt; is the source of how a particular type of content is modeled. This method will cause &lt;code&gt;setDocument&lt;/code&gt; to be called on behalf of the caller to ensure integrity of the internal state.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="126acfef6c24864b8ac2da932a5cb0c6ee533c82" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NOTE:&lt;/em&gt; Superclass is also not thread-safe in its rendering of the background, although that is not an issue with the default rendering.</source>
          <target state="translated">&lt;em&gt;NOTE:&lt;/em&gt; Superclass is also not thread-safe in its rendering of the background, although that is not an issue with the default rendering.</target>
        </trans-unit>
        <trans-unit id="e19b1d9aafedd7c59e542341ea9c6d9923a44ea4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Non-synchronization of target values:&lt;/em&gt; A write to a mutable call site's target does not force other threads to become aware of the updated value. Threads which do not perform suitable synchronization actions relative to the updated call site may cache the old target value and delay their use of the new target value indefinitely. (This is a normal consequence of the Java Memory Model as applied to object fields.)</source>
          <target state="translated">&lt;em&gt;대상 값의 비 동기화 :&lt;/em&gt; 변경 가능한 호출 사이트의 대상에 쓰더라도 다른 스레드가 업데이트 된 값을 인식하지 못합니다. 업데이트 된 호출 사이트에 대해 적절한 동기화 작업을 수행하지 않는 스레드는 이전 대상 값을 캐시하고 새 대상 값의 사용을 무기한 지연시킬 수 있습니다. (이것은 객체 필드에 적용되는 Java 메모리 모델의 일반적인 결과입니다.)</target>
        </trans-unit>
        <trans-unit id="99299b841565bade4cadacdfeba46ffff9c1a7fa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note that processes are created and terminate asynchronously. There is no guarantee that a process in the stream is alive or that no other processes may have been created since the inception of the snapshot. &lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Note that processes are created and terminate asynchronously. There is no guarantee that a process in the stream is alive or that no other processes may have been created since the inception of the snapshot. &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b306ad2eb12bb711a348e27e2063e449fe50f26f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note that processes are created and terminate asynchronously. There is no guarantee that a process is &lt;a href=&quot;#isAlive()&quot;&gt;&lt;code&gt;alive&lt;/code&gt;&lt;/a&gt;. &lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Note that processes are created and terminate asynchronously. There is no guarantee that a process is &lt;a href=&quot;#isAlive()&quot;&gt; &lt;code&gt;alive&lt;/code&gt; &lt;/a&gt;. &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b2f1832416ceb5f342cee09175597005fb2fd1d9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note that processes are created and terminate asynchronously. There is no guarantee that a process is &lt;a href=&quot;#isAlive()&quot;&gt;alive&lt;/a&gt;. &lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Note that processes are created and terminate asynchronously. There is no guarantee that a process is &lt;a href=&quot;#isAlive()&quot;&gt;alive&lt;/a&gt;. &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1ce5641d9ebd3b472087ead24510f7c515dcadd2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note that when a StateEdit ends, it removes redundant state from the Hashtables - A state Hashtable is not guaranteed to contain all keys/values placed into it when the state is stored!&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Note that when a StateEdit ends, it removes redundant state from the Hashtables - A state Hashtable is not guaranteed to contain all keys/values placed into it when the state is stored!&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c61ce0ff18ed6b0a04fbba51f76f14e997f4440" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: In general, clients should use &lt;code&gt;Calendar.get(ZONE_OFFSET) + Calendar.get(DST_OFFSET)&lt;/code&gt; instead of calling this method.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;참고 : 일반적으로 클라이언트는 이 메소드를 호출하는 대신 &lt;code&gt;Calendar.get(ZONE_OFFSET) + Calendar.get(DST_OFFSET)&lt;/code&gt; 사용해야합니다 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ca53d3cfc9d7b95e8572977f8d4754cc66ebc525" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: The classes in the package &lt;code&gt;javax.security.cert&lt;/code&gt; exist for compatibility with earlier versions of the Java Secure Sockets Extension (JSSE). New applications should instead use the standard Java SE certificate classes located in &lt;code&gt;java.security.cert&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;참고 : &lt;code&gt;javax.security.cert&lt;/code&gt; 패키지의 클래스는 이전 버전의 JSSE (Java Secure Sockets Extension)와의 호환성을 위해 존재합니다. 새로운 애플리케이션은 대신 &lt;code&gt;java.security.cert&lt;/code&gt; 에있는 표준 Java SE 인증서 클래스를 사용해야합니다 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="475c60c62ebe9f3ced66257fe197c8c79159b9a4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: this method exists for compatibility with previous releases. New applications should use &lt;a href=&quot;#getPeerCertificates()&quot;&gt;&lt;code&gt;getPeerCertificates()&lt;/code&gt;&lt;/a&gt; instead.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;참고 :이 방법은 이전 릴리스와의 호환성을 위해 존재합니다. 새 애플리케이션은 대신 &lt;a href=&quot;#getPeerCertificates()&quot;&gt; &lt;code&gt;getPeerCertificates()&lt;/code&gt; &lt;/a&gt; 를 사용해야 합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7ff58105f0f735b1be81869379427fdbdc9af7e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: this method exists for compatibility with previous releases. New applications should use &lt;a href=&quot;handshakecompletedevent#getPeerCertificates--&quot;&gt;&lt;code&gt;getPeerCertificates()&lt;/code&gt;&lt;/a&gt; instead.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;참고 :이 방법은 이전 릴리스와의 호환성을 위해 존재합니다. 새로운 어플리케이션은 대신 &lt;a href=&quot;handshakecompletedevent#getPeerCertificates--&quot;&gt; &lt;code&gt;getPeerCertificates()&lt;/code&gt; &lt;/a&gt; 를 사용해야 합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="375c794dc39c369fcb410d0f3fc854d70bc49ba4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: this method exists for compatibility with previous releases. New applications should use &lt;a href=&quot;sslsession#getPeerCertificates--&quot;&gt;&lt;code&gt;getPeerCertificates()&lt;/code&gt;&lt;/a&gt; instead.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;참고 :이 방법은 이전 릴리스와의 호환성을 위해 존재합니다. 새로운 어플리케이션은 대신 &lt;a href=&quot;sslsession#getPeerCertificates--&quot;&gt; &lt;code&gt;getPeerCertificates()&lt;/code&gt; &lt;/a&gt; 를 사용해야 합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fcdab0d6233c931f53ba6d94354478b3052561a1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Because method handles are immutable, the target method handle retains its original type and behavior.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 메서드 핸들은 변경할 수 없기 때문에 대상 메서드 핸들은 원래 유형과 동작을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="53072c6af61b15003c910546d7ab418fa97c8f73" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Due to their internal use of either a &lt;a href=&quot;../../../../../java.base/java/io/reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; instance, &lt;code&gt;StreamSource&lt;/code&gt; instances may only be used once.</source>
          <target state="translated">&lt;em&gt;참고 : &lt;/em&gt;&lt;a href=&quot;../../../../../java.base/java/io/reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt; 인스턴스 의 내부 사용으로 인해 &lt;code&gt;StreamSource&lt;/code&gt; 인스턴스는 한 번만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="197af8526bcd0e4b2b699b086269d31df330decb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; The resulting adapter is never a &lt;a href=&quot;#asVarargsCollector(java.lang.Class)&quot;&gt;variable-arity method handle&lt;/a&gt;, even if the original target method handle was.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 결과 어댑터는 원래 대상 메서드 핸들이 있더라도 &lt;a href=&quot;#asVarargsCollector(java.lang.Class)&quot;&gt;가변 인수 메서드 핸들&lt;/a&gt; 이 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="8121e407b023746e569daa642d9564e946531758" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; The resulting adapter is never a &lt;a href=&quot;methodhandle#asVarargsCollector(java.lang.Class)&quot;&gt;variable-arity method handle&lt;/a&gt;, even if the original target method handle was.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 결과 어댑터는 원래 대상 메서드 핸들이 있더라도 &lt;a href=&quot;methodhandle#asVarargsCollector(java.lang.Class)&quot;&gt;가변 인수 메서드 핸들&lt;/a&gt; 이 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="7a4b11bac486ec6f1579aaaccb27c56133fdba39" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; This attribute is unfortunately misnamed, as it specifies the face name and not just the family. Thus values such as &quot;Lucida Sans Bold&quot; will select that face if it exists. Note, though, that if the requested face does not exist, the default will be used with &lt;em&gt;regular&lt;/em&gt; weight. The &quot;Bold&quot; in the name is part of the face name, not a separate request that the font's weight be bold.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 이 속성은 가족뿐만 아니라 얼굴 이름을 지정하기 때문에 안타깝게도 이름이 잘못 지정되었습니다. 따라서 &quot;Lucida Sans Bold&quot;와 같은 값은 존재하는 경우 해당 얼굴을 선택합니다. 그러나 요청 된 얼굴이 존재하지 않으면 기본값이 &lt;em&gt;일반&lt;/em&gt; 가중치 와 함께 사용됩니다 . 이름의 &quot;Bold&quot;는 글꼴의 두께를 굵게 표시하라는 별도의 요청이 아니라 얼굴 이름의 일부입니다.</target>
        </trans-unit>
        <trans-unit id="edc6d3d8cc0a3ad92c3f2a93ef1d9a276fd8b4d6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; This attribute should have the same value for all the text in a paragraph, otherwise the behavior is undetermined.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 이 속성은 단락의 모든 텍스트에 대해 동일한 값을 가져야합니다. 그렇지 않으면 동작이 결정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4f27328f7027743a73a57b6b02db89b4e904e2db" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; This should have the same value for all the text in a paragraph, otherwise the behavior is undetermined.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 단락의 모든 텍스트에 대해 동일한 값을 가져야합니다. 그렇지 않으면 동작이 결정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="41252f5806d608b8aea773f077514749d38fd7e9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; This should have the same value for all the text in the paragraph, otherwise the behavior is undetermined.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 단락의 모든 텍스트에 대해 동일한 값을 가져야합니다. 그렇지 않으면 동작이 결정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="271144446c1bec0bae309149befb3ef2160fd3f0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; When this attribute is present anywhere in a paragraph, then any Unicode bidi control characters (RLO, LRO, RLE, LRE, and PDF) in the paragraph are disregarded, and runs of text where this attribute is not present are treated as though it were present and had the value 0.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 이 속성이 단락의 아무 곳에 나 있으면 단락의 모든 유니 코드 bidi 제어 문자 (RLO, LRO, RLE, LRE 및 PDF)가 무시되고이 속성이없는 텍스트 실행은 마치 존재하고 값이 0입니다.</target>
        </trans-unit>
        <trans-unit id="c4aa94d059fdff8ac9290057cf09c49746dbc922" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; this class might yet learn that the &lt;em&gt;ContentHandler.setDocumentLocator()&lt;/em&gt; call might be passed a &lt;a href=&quot;locator2&quot;&gt;&lt;code&gt;Locator2&lt;/code&gt;&lt;/a&gt; object, and that the &lt;em&gt;ContentHandler.startElement()&lt;/em&gt; call might be passed a &lt;a href=&quot;attributes2&quot;&gt;&lt;code&gt;Attributes2&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 이 클래스는 &lt;em&gt;ContentHandler.setDocumentLocator ()&lt;/em&gt; 호출이 &lt;a href=&quot;locator2&quot;&gt; &lt;code&gt;Locator2&lt;/code&gt; &lt;/a&gt; 객체에 전달 될 수 있고 &lt;em&gt;ContentHandler.startElement ()&lt;/em&gt; 호출이 &lt;a href=&quot;attributes2&quot;&gt; &lt;code&gt;Attributes2&lt;/code&gt; &lt;/a&gt; 객체에 전달 될 수 있음을 아직 알 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b7f61e6e242869f45bbd1f95910314a3b832735e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt;&lt;code&gt;Font's Map&lt;/code&gt;-based constructor and &lt;code&gt;deriveFont&lt;/code&gt; methods do not process the &lt;code&gt;FONT&lt;/code&gt; attribute, as these are used to create new &lt;code&gt;Font&lt;/code&gt; objects. Instead, &lt;a href=&quot;../font#getFont(java.util.Map)&quot;&gt;&lt;code&gt;Font.getFont(Map)&lt;/code&gt;&lt;/a&gt; should be used to handle the &lt;code&gt;FONT&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;em&gt;참고 : &lt;/em&gt; &lt;code&gt;Font's Map&lt;/code&gt; 기반 생성자와 &lt;code&gt;deriveFont&lt;/code&gt; 메서드는 새 &lt;code&gt;Font&lt;/code&gt; 개체 를 만드는 데 사용 되므로 &lt;code&gt;FONT&lt;/code&gt; 속성을 처리하지 않습니다 . 대신 &lt;a href=&quot;../font#getFont(java.util.Map)&quot;&gt; &lt;code&gt;Font.getFont(Map)&lt;/code&gt; &lt;/a&gt; 을 사용하여 &lt;code&gt;FONT&lt;/code&gt; 속성 을 처리해야 합니다.</target>
        </trans-unit>
        <trans-unit id="6ddf93a20b533be4f08f5916c49866b619c990b6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt; that the &lt;a href=&quot;#getKeyStore()&quot;&gt;&lt;code&gt;getKeyStore()&lt;/code&gt;&lt;/a&gt; method is executed within the &lt;a href=&quot;accesscontrolcontext&quot;&gt;&lt;code&gt;AccessControlContext&lt;/code&gt;&lt;/a&gt; of the code invoking this method.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; 있는지 &lt;a href=&quot;#getKeyStore()&quot;&gt; &lt;code&gt;getKeyStore()&lt;/code&gt; &lt;/a&gt; 메소드가 실행된다 내에 &lt;a href=&quot;accesscontrolcontext&quot;&gt; &lt;code&gt;AccessControlContext&lt;/code&gt; 에&lt;/a&gt; 이 메소드를 호출하는 코드.</target>
        </trans-unit>
        <trans-unit id="31fdfdba1d43497f9010929e0e79cb96b715cf3b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt; that the &lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt;&lt;code&gt;getKeyStore()&lt;/code&gt;&lt;/a&gt; method is executed within the &lt;a href=&quot;accesscontrolcontext&quot;&gt;&lt;code&gt;AccessControlContext&lt;/code&gt;&lt;/a&gt; of the code invoking this method.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; 있는지 &lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt; &lt;code&gt;getKeyStore()&lt;/code&gt; &lt;/a&gt; 메소드가 실행된다 내에 &lt;a href=&quot;accesscontrolcontext&quot;&gt; &lt;code&gt;AccessControlContext&lt;/code&gt; 에&lt;/a&gt; 이 메소드를 호출하는 코드.</target>
        </trans-unit>
        <trans-unit id="7762662ec7194607dd3ad43f70706a9137cb2739" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Overlapping packages&lt;/em&gt;: Two or more modules in the configuration have the same package.</source>
          <target state="translated">&lt;em&gt;겹치는 패키지&lt;/em&gt; : 구성에있는 둘 이상의 모듈이 동일한 패키지를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="b5f756efd8ac57304dd1f0db24112bdce83f4790" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Parameters optional everywhere:&lt;/em&gt; Each clause function is allowed but not required to accept a parameter for each iteration variable &lt;code&gt;v&lt;/code&gt;. As an exception, the init functions cannot take any &lt;code&gt;v&lt;/code&gt; parameters, because those values are not yet computed when the init functions are executed. Any clause function may neglect to take any trailing subsequence of parameters it is entitled to take. In fact, any clause function may take no arguments at all.</source>
          <target state="translated">&lt;em&gt;모든 곳에서 선택적 매개 변수 :&lt;/em&gt; 각 절 함수가 허용되지만 각 반복 변수 &lt;code&gt;v&lt;/code&gt; 에 대한 매개 변수를 허용 할 필요는 없습니다 . 예외적으로 init 함수는 &lt;code&gt;v&lt;/code&gt; 매개 변수를 사용할 수 없습니다 . 이는 init 함수가 실행될 때 해당 값이 아직 계산되지 않기 때문입니다. 모든 절 함수는받을 자격이있는 매개 변수의 후행 하위 시퀀스를 취하는 것을 무시할 수 있습니다. 사실 모든 절 함수는 인수를 전혀 취하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6556b7eb527eba3aca8316d99bcecd1e0d6113f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Parameters visible everywhere:&lt;/em&gt; Each non-init clause function is permitted to observe the entire loop state, because it can be passed the full list &lt;code&gt;(v... a...)&lt;/code&gt; of current iteration variable values and incoming loop parameters. The init functions can observe initial pre-loop state, in the form &lt;code&gt;(a...)&lt;/code&gt;. Most clause functions will not need all of this information, but they will be formally connected to it as if by &lt;a href=&quot;#dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)&quot;&gt;&lt;code&gt;dropArguments(java.lang.invoke.MethodHandle, int, java.util.List&amp;lt;java.lang.Class&amp;lt;?&amp;gt;&amp;gt;)&lt;/code&gt;&lt;/a&gt;.  More specifically, we shall use the notation &lt;code&gt;(V*)&lt;/code&gt; to express an arbitrary prefix of a full sequence &lt;code&gt;(V...)&lt;/code&gt; (and likewise for &lt;code&gt;(v*)&lt;/code&gt;, &lt;code&gt;(A*)&lt;/code&gt;, &lt;code&gt;(a*)&lt;/code&gt;). In that notation, the general form of an init function parameter list is &lt;code&gt;(A*)&lt;/code&gt;, and the general form of a non-init function parameter list is &lt;code&gt;(V*)&lt;/code&gt; or &lt;code&gt;(V... A*)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;모든 곳에서 볼 수있는 매개 변수 :&lt;/em&gt; 초기화되지 않은 각 절 함수는 현재 반복 변수 값과 수신 루프 매개 변수 의 전체 목록 &lt;code&gt;(v... a...)&lt;/code&gt; 을 전달할 수 있기 때문에 전체 루프 상태를 관찰 할 수 있습니다 . init 함수는 &lt;code&gt;(a...)&lt;/code&gt; 형식으로 초기 사전 루프 상태를 관찰 할 수 있습니다 . 대부분의 절 함수는이 정보를 모두 필요로하지 않지만 &lt;a href=&quot;#dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)&quot;&gt; &lt;code&gt;dropArguments(java.lang.invoke.MethodHandle, int, java.util.List&amp;lt;java.lang.Class&amp;lt;?&amp;gt;&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의해 공식적으로 연결됩니다. . 더 구체적으로, 우리는 &lt;code&gt;(V*)&lt;/code&gt; 표기법을 사용하여 전체 시퀀스 &lt;code&gt;(V...)&lt;/code&gt; 의 임의의 접두사를 표현할 것입니다 (그리고 마찬가지로 &lt;code&gt;(v*)&lt;/code&gt; , &lt;code&gt;(A*)&lt;/code&gt; , &lt;code&gt;(a*)&lt;/code&gt; ). 이 표기법에서 init 함수 매개 변수 목록의 일반적인 형식은 &lt;code&gt;(A*)&lt;/code&gt; 이고 비 초기화 함수 매개 변수 목록의 일반적인 형식은 &lt;code&gt;(V*)&lt;/code&gt; 또는 &lt;code&gt;(V... A*)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a82eca54cd9eb68982bd25097bb5efdec9f8067f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Peer Host.&lt;/em&gt; All connections in a session are between the same two hosts. The address of the host on the other side of the connection is available.</source>
          <target state="translated">&lt;em&gt;동료 호스트. &lt;/em&gt;세션의 모든 연결은 동일한 두 호스트 사이에 있습니다. 연결 반대쪽에있는 호스트 주소를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4437c00f90cf5154f4d929ebe2fd34592e3563fe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Peer Identity.&lt;/em&gt; Sessions are between a particular client and a particular server. The identity of the peer may have been established as part of session setup. Peers are generally identified by X.509 certificate chains.</source>
          <target state="translated">&lt;em&gt;동료 신원. &lt;/em&gt;세션은 특정 클라이언트와 특정 서버 사이에 있습니다. 피어 설정은 세션 설정의 일부로 설정되었을 수 있습니다. 피어는 일반적으로 X.509 인증서 체인으로 식별됩니다.</target>
        </trans-unit>
        <trans-unit id="fac7d300620d4845d0180f3006dadbe6612b7e14" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Physical&lt;/em&gt; fonts are the actual font libraries containing glyph data and tables to map from character sequences to glyph sequences, using a font technology such as TrueType or PostScript Type 1. All implementations of the Java Platform must support TrueType fonts; support for other font technologies is implementation dependent. Physical fonts may use names such as Helvetica, Palatino, HonMincho, or any number of other font names. Typically, each physical font supports only a limited set of writing systems, for example, only Latin characters or only Japanese and Basic Latin. The set of available physical fonts varies between configurations. Applications that require specific fonts can bundle them and instantiate them using the &lt;a href=&quot;#createFont(int,java.io.InputStream)&quot;&gt;&lt;code&gt;createFont&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;em&gt;물리적&lt;/em&gt; 글꼴은 TrueType 또는 PostScript Type 1과 같은 글꼴 기술을 사용하여 문자 시퀀스에서 글리프 시퀀스로 매핑 할 글리프 데이터 및 테이블을 포함하는 실제 글꼴 라이브러리입니다. Java 플랫폼의 모든 구현은 TrueType 글꼴을 지원해야합니다. 다른 글꼴 기술에 대한 지원은 구현에 따라 다릅니다. 물리적 글꼴은 Helvetica, Palatino, HonMincho와 같은 이름 또는 기타 글꼴 이름을 사용할 수 있습니다. 일반적으로 각 물리적 글꼴은 제한된 쓰기 시스템 집합 (예 : 라틴 문자 만 또는 일본어 및 기본 라틴어 만 지원) 만 지원합니다. 사용 가능한 물리적 글꼴 세트는 구성에 따라 다릅니다. 특정 글꼴이 필요한 응용 프로그램은이를 번들로 묶고 &lt;a href=&quot;#createFont(int,java.io.InputStream)&quot;&gt; &lt;code&gt;createFont&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 인스턴스화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="16da4fe807769f9b71e8a1259a0bd1e3517db114" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Portable and version resilient&lt;/em&gt;: they have no dependencies on the private implementation of any class and so, like Java source files, they may be exchanged between environments which may have different versions of some of the classes and between VMs from different vendors.</source>
          <target state="translated">&lt;em&gt;이식성 및 버전 복원력&lt;/em&gt; : 클래스의 개인 구현에 의존하지 않으므로 Java 소스 파일과 같이 일부 버전의 클래스가 다른 환경과 다른 공급 업체의 VM간에 교환 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c1fce0469942794910e1336debbde9d6f0af9ef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Read edges&lt;/em&gt; added by this method are &lt;em&gt;weak&lt;/em&gt; and do not prevent &lt;code&gt;other&lt;/code&gt; from being GC'ed when this module is strongly reachable.</source>
          <target state="translated">&lt;em&gt;읽기 가장자리&lt;/em&gt; 이 방법에 의해 첨가된다 &lt;em&gt;약한&lt;/em&gt; 방지하지 않는 &lt;code&gt;other&lt;/code&gt; 이 모듈이 강하게 연결할 때 GC'ed되는로부터.</target>
        </trans-unit>
        <trans-unit id="2463f134475ecf0dafa7b31de4d00e81a61e6834" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Read edges&lt;/em&gt; added by this method are &lt;em&gt;weak&lt;/em&gt; and do not prevent &lt;code&gt;target&lt;/code&gt; from being GC'ed when &lt;code&gt;source&lt;/code&gt; is strongly reachable.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;이 방법으로 추가 된 &lt;em&gt;읽기 에지&lt;/em&gt; 는 &lt;em&gt;약하며 &lt;/em&gt; &lt;code&gt;source&lt;/code&gt; 에 강하게 도달 할 수 있을 때 &lt;code&gt;target&lt;/code&gt; 이 GC되는 것을 방지하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="52c521b4e1ed4d010e7f7de627ff86ec31c35a64" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Returns special value&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;특수 값을 반환&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6780db50853066cd439c2478ed22b5e661e7429b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Serializability.&lt;/em&gt; The generated function objects do not generally support serialization. If desired, &lt;code&gt;FLAG_SERIALIZABLE&lt;/code&gt; can be used to indicate that the function objects should be serializable. Serializable function objects will use, as their serialized form, instances of the class &lt;code&gt;SerializedLambda&lt;/code&gt;, which requires additional assistance from the capturing class (the class described by the &lt;a href=&quot;methodhandles.lookup&quot;&gt;&lt;code&gt;MethodHandles.Lookup&lt;/code&gt;&lt;/a&gt; parameter &lt;code&gt;caller&lt;/code&gt;); see &lt;a href=&quot;serializedlambda&quot;&gt;&lt;code&gt;SerializedLambda&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;em&gt;직렬화 가능성. &lt;/em&gt;생성 된 함수 객체는 일반적으로 직렬화를 지원하지 않습니다. 원하는 경우 &lt;code&gt;FLAG_SERIALIZABLE&lt;/code&gt; 을 사용하여 함수 객체를 직렬화 할 수 있음을 나타낼 수 있습니다. Serializable 함수 객체는 &lt;code&gt;SerializedLambda&lt;/code&gt; 클래스의 인스턴스를 직렬화 된 형식으로 사용하는데,이 클래스 는 캡처 클래스 ( &lt;a href=&quot;methodhandles.lookup&quot;&gt; &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; &lt;/a&gt; 매개 변수 &lt;code&gt;caller&lt;/code&gt; 설명하는 클래스)의 추가 지원이 필요합니다 . 자세한 내용은 &lt;a href=&quot;serializedlambda&quot;&gt; &lt;code&gt;SerializedLambda&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3935d1417cb4afd578342daa28e72ff3fd42b1e7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Special value&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;특별한 가치&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f1c3b846ca975e55ceb886b7d9d8c63a7750fae3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Specified&lt;/em&gt; attribute nodes of the source element are adopted. Default attributes are discarded, though if the document being adopted into defines default attributes for this element name, those are assigned. The descendants of the source element are recursively adopted.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;소스 요소의 &lt;em&gt;지정된&lt;/em&gt; 속성 노드가 채택됩니다. 기본 속성은 무시되지만에 채택되는 문서가이 요소 이름에 대한 기본 속성을 정의하는 경우 해당 속성이 지정됩니다. 소스 요소의 자손은 재귀 적으로 채택됩니다.</target>
        </trans-unit>
        <trans-unit id="5a1f31d9e352b2b10d68a4e873b5499f9fddc3f6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Specified&lt;/em&gt; attribute nodes of the source element are imported, and the generated &lt;code&gt;Attr&lt;/code&gt; nodes are attached to the generated &lt;code&gt;Element&lt;/code&gt;. Default attributes are &lt;em&gt;not&lt;/em&gt; copied, though if the document being imported into defines default attributes for this element name, those are assigned. If the &lt;code&gt;importNode&lt;/code&gt;&lt;code&gt;deep&lt;/code&gt; parameter was set to &lt;code&gt;true&lt;/code&gt;, the descendants of the source element are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;소스 요소의 &lt;em&gt;지정된&lt;/em&gt; 속성 노드를 가져오고 생성 된 &lt;code&gt;Attr&lt;/code&gt; 노드를 생성 된 &lt;code&gt;Element&lt;/code&gt; 첨부합니다 . 기본 속성은 복사 &lt;em&gt;되지 않지만&lt;/em&gt; , 가져올 문서가이 요소 이름에 대한 기본 속성을 정의하는 경우 해당 속성이 지정됩니다. 는 IF &lt;code&gt;importNode&lt;/code&gt; 의 &lt;code&gt;deep&lt;/code&gt; 매개 변수로 설정 &lt;code&gt;true&lt;/code&gt; , 소스 요소의 자손이 재귀 적으로 임포트되어 결과 노드는 해당 서브 트리를 형성하기 위해 재 조립.</target>
        </trans-unit>
        <trans-unit id="59f448715937828bb46fcbe062961bbc43066123" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Split delegation&lt;/em&gt;: The resulting class loader would need to delegate to more than one class loader in order to load classes in a specific package.</source>
          <target state="translated">&lt;em&gt;분할 위임&lt;/em&gt; : 결과 클래스 로더는 특정 패키지의 클래스를로드하기 위해 둘 이상의 클래스 로더에 위임해야합니다.</target>
        </trans-unit>
        <trans-unit id="791969999cd4e5acfb3e9adfe6e8cf3255e904e9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Step 0: Determine clause structure.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;0 단계 : 절 구조를 결정합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="21ef7d7b00236c22ba5d02e81f7b53c418364a95" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Step 1A: Determine iteration variable types &lt;code&gt;(V...)&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;1A 단계 : 반복 변수 유형 &lt;code&gt;(V...)&lt;/code&gt; 결정 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8da7e8f0cf313ca404778832a3711ffe8f0d72b8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Step 1B: Determine loop parameters &lt;code&gt;(A...)&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;1B 단계 : 루프 매개 변수 결정 &lt;code&gt;(A...)&lt;/code&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="99c9575bd6b7038e428559198a3a9e84942eb933" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Step 1C: Determine loop return type.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;1C 단계 : 루프 반환 유형을 결정합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="72164ddeab3add8feeeab8f213b687953f92943d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Step 1D: Check other types.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;1D 단계 : 다른 유형을 확인하십시오.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4cacc24afe47c0156864144f90801bfc6801d702" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Step 2: Determine parameter lists.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;2 단계 : 매개 변수 목록을 결정합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fbe970ac55b154add094737b5171b8cd2bb4b40f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Step 3: Fill in omitted functions.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;3 단계 : 생략 된 함수를 입력합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="62073a136903135161f744eb37d03eda6b3bfb65" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Step 4: Fill in missing parameter types.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;4 단계 : 누락 된 매개 변수 유형을 입력합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e58bada3d92b1c7f719c88c5ecec7b91d3b013e1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Structurally compact&lt;/em&gt;: The &lt;code&gt;XMLEncoder&lt;/code&gt; class uses a &lt;em&gt;redundancy elimination&lt;/em&gt; algorithm internally so that the default values of a Bean's properties are not written to the stream.</source>
          <target state="translated">&lt;em&gt;구조적으로 압축&lt;/em&gt; : &lt;code&gt;XMLEncoder&lt;/code&gt; 클래스는 내부적 으로 &lt;em&gt;중복 제거&lt;/em&gt; 알고리즘을 사용 하여 Bean 속성의 기본값이 스트림에 기록되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="315e37572341e0dc4dfd019deb5a6388f9380660" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Supported&lt;/em&gt; cipher suites: all the suites which are supported by the SSL implementation. This list is reported using &lt;a href=&quot;#getSupportedCipherSuites()&quot;&gt;&lt;code&gt;getSupportedCipherSuites()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;지원되는&lt;/em&gt; 암호 제품군 : SSL 구현에서 지원하는 모든 제품군입니다. 이 목록은 &lt;a href=&quot;#getSupportedCipherSuites()&quot;&gt; &lt;code&gt;getSupportedCipherSuites()&lt;/code&gt; &lt;/a&gt; 사용하여보고됩니다 .</target>
        </trans-unit>
        <trans-unit id="e0f6bb68b31f4357845b565d8de1004457c922d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Supported&lt;/em&gt; cipher suites: all the suites which are supported by the SSL implementation. This list is reported using &lt;a href=&quot;sslengine#getSupportedCipherSuites--&quot;&gt;&lt;code&gt;getSupportedCipherSuites()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;지원되는&lt;/em&gt; 암호 스위트 : SSL 구현에서 지원하는 모든 스위트. &lt;a href=&quot;sslengine#getSupportedCipherSuites--&quot;&gt; &lt;code&gt;getSupportedCipherSuites()&lt;/code&gt; &lt;/a&gt; 스트는 getSupportedCipherSuites ()를 사용 해보고 됩니다.</target>
        </trans-unit>
        <trans-unit id="3bab905bb9c2d86eb703978229e6c45960a5e020" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Supported&lt;/em&gt; cipher suites: all the suites which are supported by the SSL implementation. This list is reported using &lt;em&gt;getSupportedCipherSuites&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;지원되는&lt;/em&gt; 암호 스위트 : SSL 구현에서 지원하는 모든 스위트. &lt;em&gt;이리&lt;/em&gt; 스트는 &lt;em&gt;getSupportedCipherSuites를&lt;/em&gt; 사용 &lt;em&gt;해보고&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="f348dfc0d1642f109b774020bb8e96b254887de1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The &lt;code&gt;String&lt;/code&gt; &lt;strong&gt;MUST&lt;/strong&gt; be in the form returned by &lt;a href=&quot;#toString()&quot;&gt;&lt;code&gt;QName.toString()&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;String&lt;/code&gt; &lt;strong&gt;반드시&lt;/strong&gt; 에 의해 반환되는 형태가 될 &lt;a href=&quot;#toString()&quot;&gt; &lt;code&gt;QName.toString()&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dbc204bbf014761bab0457fddc20fdced7ee76e7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The list returned by this method is modifiable.&lt;/em&gt; To create an unmodifiable list, use &lt;a href=&quot;collections#unmodifiableList(java.util.List)&quot;&gt;&lt;code&gt;Collections.unmodifiableList&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;list#unmodifiable&quot;&gt;Unmodifiable Lists&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;이 메서드에서 반환 된 목록은 수정할 수 있습니다. &lt;/em&gt;수정할 수없는 목록을 만들려면 &lt;a href=&quot;collections#unmodifiableList(java.util.List)&quot;&gt; &lt;code&gt;Collections.unmodifiableList&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;list#unmodifiable&quot;&gt;Unmodifiable Lists를 사용&lt;/a&gt; 하세요.</target>
        </trans-unit>
        <trans-unit id="9356bbd23d2a6510aa26391f115d8bb3b6f10452" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This module, both source code and documentation, is in the Public Domain, and comes with &lt;strong&gt;NO WARRANTY&lt;/strong&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;이 모듈 (소스 코드와 문서 모두)은 공개 도메인에 있으며 &lt;strong&gt;보증없이&lt;/strong&gt; 제공됩니다 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a9b95ba8b7ad94db4146c83cf556ed48e55fa4fa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This module, both source code and documentation, is in the Public Domain, and comes with &lt;strong&gt;NO WARRANTY&lt;/strong&gt;.&lt;/em&gt; See &lt;a href=&quot;http://www.saxproject.org&quot;&gt;http://www.saxproject.org&lt;/a&gt; for further information.</source>
          <target state="translated">&lt;em&gt;이 모듈 (소스 코드와 문서 모두)은 공개 도메인에 있으며 &lt;strong&gt;보증없이&lt;/strong&gt; 제공됩니다 . &lt;/em&gt;자세한 내용은 &lt;a href=&quot;http://www.saxproject.org&quot;&gt;http://www.saxproject.org&lt;/a&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a6d2abeeee686afafaa5b4d9b4118251e9dddd4f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Throws exception&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;예외 발생&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="843f22af785ebdc1e6b75eb313e9d90cb3bc0651" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Times out&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;타임 아웃&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ec51bbb280b2e69192d3968e9488feb8f234c14" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Usage tips.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;사용 팁.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c5fd0ee23dc699f07c43996803d3ff757d226d5c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Virtual key codes&lt;/em&gt; are used to report which keyboard key has been pressed, rather than a character generated by the combination of one or more keystrokes (such as &quot;A&quot;, which comes from shift and &quot;a&quot;).</source>
          <target state="translated">&lt;em&gt;가상 키 코드&lt;/em&gt; 는 하나 이상의 키 입력 조합으로 생성 된 문자 (예 : shift 및 &quot;a&quot;에서 오는 &quot;A&quot;)가 아니라 어떤 키보드 키를 눌렀는지보고하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0164c4f08b2ede7a9df574bf55de966da20ef845" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;\1 (Unicode point 0001)&lt;/em&gt;: an ordinary argument. This input is passed through dynamic argument, and is provided during the concatenation method invocation. This input can be null.</source>
          <target state="translated">&lt;em&gt;\ 1 (유니 코드 포인트 0001)&lt;/em&gt; : 일반 인수. 이 입력은 동적 인수를 통해 전달되며 연결 메소드 호출 중에 제공됩니다. 이 입력은 널일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27129808f1addb4d862b84831c6c7e14f9c81542" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;\2 (Unicode point 0002):&lt;/em&gt; a constant. This input passed through static bootstrap argument. This constant can be any value representable in constant pool. If necessary, the factory would call &lt;code&gt;toString&lt;/code&gt; to perform a one-time String conversion.</source>
          <target state="translated">&lt;em&gt;\ 2 (유니 코드 포인트 0002) :&lt;/em&gt; 상수. 이 입력은 정적 부트 스트랩 인수를 통해 전달되었습니다. 이 상수는 상수 풀에서 표현할 수있는 모든 값이 될 수 있습니다. 필요한 경우 팩토리는 &lt;code&gt;toString&lt;/code&gt; 을 호출 하여 일회성 문자열 변환을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="0d9841d197858dca6d03dbc4e81954135f967fa3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;below-the-spot&lt;/em&gt; input, where the composed text is displayed in a separate composition window just below the insertion point where the text will be inserted when it is committed. Note that, if text is selected within the component's text body, this text will be replaced by the committed text upon commitment; therefore it is not considered part of the context that the text is input into.</source>
          <target state="translated">&lt;em&gt;즉석&lt;/em&gt; 입력 : 작성된 텍스트가 커밋 될 때 텍스트가 삽입 될 삽입 지점 바로 아래에 별도의 작성 창에 표시됩니다. 구성 요소의 텍스트 본문 내에서 텍스트를 선택한 경우이 텍스트는 커밋시 커밋 된 텍스트로 대체됩니다. 따라서 텍스트가 입력되는 컨텍스트의 일부로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7dd5e72bc3dd8230f447b9dc531cd7a08e403a64" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;false&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;false&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c7f4bd1bfb1c609ec8b370d5b1e7351b99b1c67d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fini:&lt;/em&gt; If a clause causes a loop exit, a finalizer execution to compute the loop's return value.</source>
          <target state="translated">&lt;em&gt;fini :&lt;/em&gt; 절로 인해 루프가 종료되면 종료 자 실행이 루프의 반환 값을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="1c66049299549d362a8032c81fe82a5510634ba5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fontname pointsize&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fontname pointsize&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5d94b0e0adba4cc82480455e57b76bc2e4a54bc0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fontname style pointsize&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fontname 스타일 포인트&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dabaefce7438ccc4fd7a7986fde3c56b01711273" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fontname style&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fontname 스타일&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b1bd078545580dd6599b3e811ff47a07b748b1a0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fontname-pointsize&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fontname-pointsize&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce584305cd2991aae10f10e3995af19042cd6ee0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fontname-style-pointsize&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fontname-style-pointsize&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0af724494f87cdf69e55df1001b3211b18681b6b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fontname-style&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fontname-style&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1ab617f9821e3fd885585dbbb4188101ef4fd746" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fontname&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fontname&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5d4be4f86e8146a6b3c1e87fe5cbd57f3e0d1036" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;formats&lt;/em&gt; = {&quot;Sun&quot;,&quot;Mon&quot;,&quot;Tue&quot;,&quot;Wed&quot;,&quot;Thur&quot;,&quot;Fri&quot;,&quot;Sat&quot;}</source>
          <target state="translated">&lt;em&gt;형식&lt;/em&gt; = { &quot;일&quot;, &quot;월&quot;, &quot;화&quot;, &quot;수&quot;, &quot;목&quot;, &quot;금&quot;, &quot;토&quot;}</target>
        </trans-unit>
        <trans-unit id="cf55f61f1395707319ca749497f461f05152277a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;formats&lt;/em&gt; = {&quot;no files&quot;, &quot;one file&quot;, &quot;many files&quot;}</source>
          <target state="translated">&lt;em&gt;형식&lt;/em&gt; = { &quot;파일 없음&quot;, &quot;하나의 파일&quot;, &quot;많은 파일&quot;}</target>
        </trans-unit>
        <trans-unit id="f709cc87589b1f23a86073134543ba1b2b8787d3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;init:&lt;/em&gt; Before the loop executes, the initialization of an iteration variable &lt;code&gt;v&lt;/code&gt; of type &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;init :&lt;/em&gt; 루프가 실행되기 전에 &lt;code&gt;V&lt;/code&gt; 유형 의 반복 변수 &lt;code&gt;v&lt;/code&gt; 초기화 .</target>
        </trans-unit>
        <trans-unit id="6788bcfb3d2007a42a0a898bbc10abcff8c2cb9e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jdeprscan&lt;/em&gt; only exists as a command line tool, and does not provide any direct API.</source>
          <target state="translated">&lt;em&gt;jdeprscan&lt;/em&gt; 은 명령 줄 도구로만 존재하며 직접 API를 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5f4f5af116902acb3a383691916111c23679fce4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jimage&lt;/em&gt; only exists as a command-line tool, and does not provide any direct API.</source>
          <target state="translated">&lt;em&gt;jimage&lt;/em&gt; 는 명령 줄 도구로만 존재하며 직접 API를 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="693f0a9b94a7ec170a6409809027d89eb0e67e4e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;limits&lt;/em&gt; = {0, 1, ChoiceFormat.nextDouble(1)}</source>
          <target state="translated">&lt;em&gt;limit&lt;/em&gt; = {0, 1, ChoiceFormat.nextDouble (1)}</target>
        </trans-unit>
        <trans-unit id="346b6f8a5b0dcc635eaa90dd0c3a851ff88eeb8c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;limits&lt;/em&gt; = {1,2,3,4,5,6,7}</source>
          <target state="translated">&lt;em&gt;한도&lt;/em&gt; = {1,2,3,4,5,6,7}</target>
        </trans-unit>
        <trans-unit id="ea7b9d91f32b4b1306642bfa4d9e6e80382ddaf9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;not applicable&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;해당 사항 없음&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e378d2e1ba182f3c5277b94366465ed053856226" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;null&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;null&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6c4c4eacca9bd5d27836d194a83245286c405ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;on-the-spot&lt;/em&gt; input, where the composed text is displayed as part of the text component's text body.</source>
          <target state="translated">&lt;em&gt;즉석&lt;/em&gt; 입력. 여기에서 작성된 텍스트는 텍스트 구성 요소의 텍스트 본문의 일부로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="9e1f9c39f9e39b0cc05789d8a99315c85d27b8cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;opendata(E)&lt;/em&gt;&lt;code&gt;[]&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;opendata(E)&lt;/em&gt;&lt;code&gt;[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb2a43e499390e8dffbc817987ce5043e4017faa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;opendata(J)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;opendata(J)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="26eac90a187152b0d7fc3c09d233c83b4ce57959" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;opentype(J)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;opentype(J)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0e266635e50d18b9b6cf42c3b29689c61bf58a57" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pred:&lt;/em&gt; When a clause executes, a predicate execution to test for loop exit.</source>
          <target state="translated">&lt;em&gt;pred :&lt;/em&gt; 절이 실행될 때 루프 종료를 테스트하기위한 술어 실행.</target>
        </trans-unit>
        <trans-unit id="d242a434edaa1d0991c5f447fdc8542c88358d37" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;read-only&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;read-only&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="099046d99b987204d213a3f40b5a37c287904fe9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;read/write&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;read/write&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5cbc248903d127615e2b5004bf22dcd961e8d8f3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;step:&lt;/em&gt; When a clause executes, an update step for the iteration variable &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;단계 :&lt;/em&gt; 절이 실행될 때 반복 변수 &lt;code&gt;v&lt;/code&gt; 에 대한 업데이트 단계 .</target>
        </trans-unit>
        <trans-unit id="40c4e2aba6f20ef3054aa9f6652924532338589f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;true&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;true&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9c1802e8d4ef28dec4be0233820e8c05c3d927de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;unspecified&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;unspecified&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="044427e4dd8ffdda60e29a9ded35c19752f6d758" translate="yes" xml:space="preserve">
          <source>&lt;i&gt;Decimal&lt;/i&gt;:</source>
          <target state="translated">&lt;i&gt;Decimal&lt;/i&gt;:</target>
        </trans-unit>
        <trans-unit id="9392d31ead1e61bd09cd51ecd6e72123919eeddf" translate="yes" xml:space="preserve">
          <source>&lt;i&gt;Integer&lt;/i&gt;:</source>
          <target state="translated">&lt;i&gt;Integer&lt;/i&gt;:</target>
        </trans-unit>
        <trans-unit id="bc5b4193a3d686c8a5a0ec1bc2111679bacf051e" translate="yes" xml:space="preserve">
          <source>&lt;i&gt;RFC 5280: Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile&lt;/i&gt;</source>
          <target state="translated">&lt;i&gt;RFC 5280 : 인터넷 X.509 공개 키 인프라 인증서 및 인증서 해지 목록 (CRL) 프로필&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="1684ea8b55f0d5ac451577e5f5395cb0ebf13df3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;JavaCollectionsFramework&quot;&gt;Java Collections Framework&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;JavaCollectionsFramework&quot;&gt;자바 컬렉션 프레임 워크&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ab33e4d080fcfef819c02b9a1bac7a3561a2c013" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ModuleResolution&quot;&gt;Module Resolution&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ModuleResolution&quot;&gt;모듈 해상도&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b043d800c7a274a558002bb148f537861a9ac305" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://standards.iso.org/ittf/PubliclyAvailableStandards/c055982_ISO_IEC_19757-3_2016.zip&quot;&gt;Schematron&lt;/a&gt;&lt;/strong&gt; - a rules-based XML schema language. Whereas DTD, WXS, and RNG are designed to express the structure of a content model, Schematron is designed to enforce individual rules that are difficult or impossible to express with other schema languages. Schematron is intended to supplement a schema written in structural schema language such as the aforementioned. Schematron is &lt;a href=&quot;http://standards.iso.org/ittf/PubliclyAvailableStandards/index.html&quot;&gt;an ISO standard&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://standards.iso.org/ittf/PubliclyAvailableStandards/c055982_ISO_IEC_19757-3_2016.zip&quot;&gt;Schematron-&lt;/a&gt;&lt;/strong&gt; 규칙 기반 XML 스키마 언어. DTD, WXS 및 RNG는 콘텐츠 모델의 구조를 표현하도록 설계되었지만 Schematron은 다른 스키마 언어로 표현하기 어렵거나 불가능한 개별 규칙을 적용하도록 설계되었습니다. Schematron은 앞서 언급 한 것과 같은 구조적 스키마 언어로 작성된 스키마를 보완하기위한 것입니다. Schematron은&lt;a href=&quot;http://standards.iso.org/ittf/PubliclyAvailableStandards/index.html&quot;&gt; ISO 표준&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e82b556416fdb6cb76c3b60aa222dc3990a5d68f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://www.relaxng.org&quot;&gt;RELAX NG (RNG)&lt;/a&gt;&lt;/strong&gt; - a pattern-based, user-friendly XML schema language. RNG schemas may also use types to constrain XML character data. RNG is maintained by the &lt;a href=&quot;http://www.oasis-open.org&quot;&gt;Organization for the Advancement of Structured Information Standards (OASIS)&lt;/a&gt; and is both an OASIS and an &lt;a href=&quot;http://www.iso.org&quot;&gt;ISO (International Organization for Standardization)&lt;/a&gt; standard.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://www.relaxng.org&quot;&gt;RELAX NG (RNG)&lt;/a&gt;&lt;/strong&gt; -패턴 기반의 사용자 친화적 인 XML 스키마 언어입니다. RNG 스키마는 유형을 사용하여 XML 문자 데이터를 제한 할 수도 있습니다. RNG는&lt;a href=&quot;http://www.oasis-open.org&quot;&gt; OASIS (Organization for the Advancement of Structured Information Standards)에서 관리&lt;/a&gt; 하며 OASIS 및&lt;a href=&quot;http://www.iso.org&quot;&gt; ISO (International Organization for Standardization)&lt;/a&gt; 표준입니다.</target>
        </trans-unit>
        <trans-unit id="a937696e32a3023d156080df897374a564566d8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://www.schematron.com/&quot;&gt;Schematron&lt;/a&gt;&lt;/strong&gt; - a rules-based XML schema language. Whereas DTD, WXS, and RNG are designed to express the structure of a content model, Schematron is designed to enforce individual rules that are difficult or impossible to express with other schema languages. Schematron is intended to supplement a schema written in structural schema language such as the aforementioned. Schematron is in the process of becoming an ISO standard.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://www.schematron.com/&quot;&gt;Schematron-&lt;/a&gt;&lt;/strong&gt; 규칙 기반 XML 스키마 언어. DTD, WXS 및 RNG는 콘텐츠 모델의 구조를 표현하도록 설계되었지만 Schematron은 다른 스키마 언어로 표현하기 어렵거나 불가능한 개별 규칙을 적용하도록 설계되었습니다. Schematron은 앞서 언급 한 것과 같은 구조적 스키마 언어로 작성된 스키마를 보완하기위한 것입니다. Schematron은 ISO 표준이되는 과정에 있습니다.</target>
        </trans-unit>
        <trans-unit id="05c1cc51ee786b311fec05f2c11f3be589962426" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://www.w3.org/XML/Schema&quot;&gt;W3C XML Schema (WXS)&lt;/a&gt;&lt;/strong&gt; - an object-oriented XML schema language. WXS also provides a type system for constraining the character data of an XML document. WXS is maintained by the &lt;a href=&quot;http://www.w3.org&quot;&gt;World Wide Web Consortium (W3C)&lt;/a&gt; and is a W3C Recommendation (that is, a ratified W3C standard specification).</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://www.w3.org/XML/Schema&quot;&gt;W3C XML 스키마 (WXS)&lt;/a&gt;&lt;/strong&gt; -객체 지향 XML 스키마 언어입니다. WXS는 또한 XML 문서의 문자 데이터를 제한하기위한 유형 시스템을 제공합니다. WXS는&lt;a href=&quot;http://www.w3.org&quot;&gt; W3C (World Wide Web Consortium&lt;/a&gt; )에서 유지 관리하며 W3C 권장 사항 (즉, 승인 된 W3C 표준 사양)입니다.</target>
        </trans-unit>
        <trans-unit id="66413572bebe6e24c5f781cc86fdfbfbb8c3f625" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://www.w3.org/XML/Schema&quot;&gt;W3C XML Schema (WXS)&lt;/a&gt;&lt;/strong&gt; - an object-oriented XML schema language. WXS also provides a type system for constraining the character data of an XML document. WXS is maintained by the &lt;a href=&quot;https://www.w3.org&quot;&gt;World Wide Web Consortium (W3C)&lt;/a&gt; and is a W3C Recommendation (that is, a ratified W3C standard specification).</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://www.w3.org/XML/Schema&quot;&gt;W3C XML 스키마 (WXS)&lt;/a&gt;&lt;/strong&gt; -객체 지향 XML 스키마 언어입니다. WXS는 또한 XML 문서의 문자 데이터를 제한하기위한 유형 시스템을 제공합니다. WXS는&lt;a href=&quot;https://www.w3.org&quot;&gt; W3C (World Wide Web Consortium&lt;/a&gt; )에서 유지 관리하며 W3C 권장 사항 (즉, 승인 된 W3C 표준 사양)입니다.</target>
        </trans-unit>
        <trans-unit id="ef38b563799589c9ba5476849c15c81cfd704e4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a id=&quot;iso8601timezone&quot;&gt;ISO 8601 Time zone:&lt;/a&gt;&lt;/strong&gt; The number of pattern letters designates the format for both formatting and parsing as follows:</source>
          <target state="translated">&lt;strong&gt;&lt;a id=&quot;iso8601timezone&quot;&gt;ISO 8601 시간대 :&lt;/a&gt;&lt;/strong&gt; 패턴 문자의 수는 다음과 같이 형식화 및 구문 분석을위한 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7a97915a6144279d310595ffa178b3dc2c54d217" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a id=&quot;month&quot;&gt;Month:&lt;/a&gt;&lt;/strong&gt; If the number of pattern letters is 3 or more, the month is interpreted as &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;; otherwise, it is interpreted as a &lt;a href=&quot;#number&quot;&gt;number&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;a id=&quot;month&quot;&gt;월 :&lt;/a&gt;&lt;/strong&gt; 패턴 문자 수가 3 개 이상이면 월이&lt;a href=&quot;#text&quot;&gt; 텍스트&lt;/a&gt; 로 해석됩니다. 그렇지 않으면&lt;a href=&quot;#number&quot;&gt; 숫자&lt;/a&gt; 로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="4f984b0fcfa0981dcf7940c68a5c8f476696fcf1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a id=&quot;number&quot;&gt;Number:&lt;/a&gt;&lt;/strong&gt; For formatting, the number of pattern letters is the minimum number of digits, and shorter numbers are zero-padded to this amount. For parsing, the number of pattern letters is ignored unless it's needed to separate two adjacent fields.</source>
          <target state="translated">&lt;strong&gt;&lt;a id=&quot;number&quot;&gt;숫자 :&lt;/a&gt;&lt;/strong&gt; 형식화의 경우 패턴 문자의 수는 최소 자릿수이며 더 짧은 숫자는이 양으로 0으로 채워집니다. 구문 분석의 경우 두 개의 인접한 필드를 구분할 필요가없는 한 패턴 문자 수는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="24b33573206b82b6f3bb8fc56718093e3f7f9364" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a id=&quot;override&quot;&gt;Implementation Note:&lt;/a&gt;&lt;/strong&gt; This class inherits from &lt;code&gt;JLabel&lt;/code&gt;, a standard component class. However &lt;code&gt;JTable&lt;/code&gt; employs a unique mechanism for rendering its cells and therefore requires some slightly modified behavior from its cell renderer. The table class defines a single cell renderer and uses it as a as a rubber-stamp for rendering all cells in the table; it renders the first cell, changes the contents of that cell renderer, shifts the origin to the new location, re-draws it, and so on. The standard &lt;code&gt;JLabel&lt;/code&gt; component was not designed to be used this way and we want to avoid triggering a &lt;code&gt;revalidate&lt;/code&gt; each time the cell is drawn. This would greatly decrease performance because the &lt;code&gt;revalidate&lt;/code&gt; message would be passed up the hierarchy of the container to determine whether any other components would be affected. As the renderer is only parented for the lifetime of a painting operation we similarly want to avoid the overhead associated with walking the hierarchy for painting operations. So this class overrides the &lt;code&gt;validate&lt;/code&gt;, &lt;code&gt;invalidate&lt;/code&gt;, &lt;code&gt;revalidate&lt;/code&gt;, &lt;code&gt;repaint&lt;/code&gt;, and &lt;code&gt;firePropertyChange&lt;/code&gt; methods to be no-ops and override the &lt;code&gt;isOpaque&lt;/code&gt; method solely to improve performance. If you write your own renderer, please keep this performance consideration in mind.</source>
          <target state="translated">&lt;strong&gt;&lt;a id=&quot;override&quot;&gt;구현 참고 :&lt;/a&gt;&lt;/strong&gt; 이 클래스는표준 구성 요소 클래스 인 &lt;code&gt;JLabel&lt;/code&gt; 에서상속됩니다. 그러나 &lt;code&gt;JTable&lt;/code&gt; 은 셀을 렌더링하는 고유 한 메커니즘을 사용하므로 셀 렌더러에서 약간 수정 된 동작이 필요합니다. 테이블 클래스는 단일 셀 렌더러를 정의하고이를 테이블의 모든 셀을 렌더링하기위한 고무 스탬프로 사용합니다. 첫 번째 셀을 렌더링하고, 해당 셀 렌더러의 내용을 변경하고, 원점을 새 위치로 이동하고, 다시 그립니다. 표준 &lt;code&gt;JLabel&lt;/code&gt; 구성 요소는 이러한 방식으로 사용하도록 설계되지 않았으며 셀이 그려 질 때마다 &lt;code&gt;revalidate&lt;/code&gt; 트리거하지 않으려 고합니다. &lt;code&gt;revalidate&lt;/code&gt; 하기 때문에 성능이 크게 저하됩니다.메시지는 다른 구성 요소가 영향을 받는지 여부를 결정하기 위해 컨테이너의 계층 구조 위로 전달됩니다. 렌더러는 페인팅 작업의 수명 동안 만 부모이므로 마찬가지로 페인팅 작업을 위해 계층 구조를 걷는 것과 관련된 오버 헤드를 피하고 싶습니다. 따라서이 클래스는 &lt;code&gt;validate&lt;/code&gt; , &lt;code&gt;invalidate&lt;/code&gt; , &lt;code&gt;revalidate&lt;/code&gt; , &lt;code&gt;repaint&lt;/code&gt; 및 &lt;code&gt;firePropertyChange&lt;/code&gt; 메서드를 no-ops로 재정의하고 성능 향상을 위해서만 &lt;code&gt;isOpaque&lt;/code&gt; 메서드를 재정의합니다 . 자체 렌더러를 작성하는 경우이 성능 고려 사항을 염두에 두십시오.</target>
        </trans-unit>
        <trans-unit id="54f10b9a0220a8caf566874086156d44c65713fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a id=&quot;override&quot;&gt;Implementation Note:&lt;/a&gt;&lt;/strong&gt; This class overrides &lt;code&gt;invalidate&lt;/code&gt;, &lt;code&gt;validate&lt;/code&gt;, &lt;code&gt;revalidate&lt;/code&gt;, &lt;code&gt;repaint&lt;/code&gt;, &lt;code&gt;isOpaque&lt;/code&gt;, and &lt;code&gt;firePropertyChange&lt;/code&gt; solely to improve performance. If not overridden, these frequently called methods would execute code paths that are unnecessary for the default list cell renderer. If you write your own renderer, take care to weigh the benefits and drawbacks of overriding these methods.</source>
          <target state="translated">&lt;strong&gt;&lt;a id=&quot;override&quot;&gt;구현 참고 사항 :&lt;/a&gt;&lt;/strong&gt; 이 클래스는성능 향상만을 위해 &lt;code&gt;invalidate&lt;/code&gt; , &lt;code&gt;validate&lt;/code&gt; , &lt;code&gt;revalidate&lt;/code&gt; , &lt;code&gt;repaint&lt;/code&gt; , &lt;code&gt;isOpaque&lt;/code&gt; 및 &lt;code&gt;firePropertyChange&lt;/code&gt; 를 재정의합니다. 재정의되지 않으면 자주 호출되는 이러한 메서드는 기본 목록 셀 렌더러에 불필요한 코드 경로를 실행합니다. 자체 렌더러를 작성하는 경우 이러한 메서드를 재정의 할 때의 장점과 단점을 신중하게 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="5776152fffa070b8b4c2305df6c64c2f610097ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a id=&quot;override&quot;&gt;Implementation Note:&lt;/a&gt;&lt;/strong&gt; This class overrides &lt;code&gt;invalidate&lt;/code&gt;, &lt;code&gt;validate&lt;/code&gt;, &lt;code&gt;revalidate&lt;/code&gt;, &lt;code&gt;repaint&lt;/code&gt;, and &lt;code&gt;firePropertyChange&lt;/code&gt; solely to improve performance. If not overridden, these frequently called methods would execute code paths that are unnecessary for the default tree cell renderer. If you write your own renderer, take care to weigh the benefits and drawbacks of overriding these methods.</source>
          <target state="translated">&lt;strong&gt;&lt;a id=&quot;override&quot;&gt;구현 참고 사항 :&lt;/a&gt;&lt;/strong&gt; 이 클래스는성능 향상을 위해서만 &lt;code&gt;invalidate&lt;/code&gt; , &lt;code&gt;validate&lt;/code&gt; , &lt;code&gt;revalidate&lt;/code&gt; , &lt;code&gt;repaint&lt;/code&gt; 및 &lt;code&gt;firePropertyChange&lt;/code&gt; 를 재정의합니다. 재정의하지 않으면 자주 호출되는 이러한 메서드는 기본 트리 셀 렌더러에 필요하지 않은 코드 경로를 실행합니다. 자체 렌더러를 작성하는 경우 이러한 메서드를 재정의 할 때의 장점과 단점을 신중하게 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="3ab46576491eec45ab610a042934cf213827903d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a id=&quot;rfc822timezone&quot;&gt;RFC 822 time zone:&lt;/a&gt;&lt;/strong&gt; For formatting, the RFC 822 4-digit time zone format is used:</source>
          <target state="translated">&lt;strong&gt;&lt;a id=&quot;rfc822timezone&quot;&gt;RFC 822 시간대 :&lt;/a&gt;&lt;/strong&gt; 형식화를 위해 RFC 822 4 자리 시간대 형식이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="65c4a7e81d1f08dc4b4bd62d3e28d6e7a185a865" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a id=&quot;text&quot;&gt;Text:&lt;/a&gt;&lt;/strong&gt; For formatting, if the number of pattern letters is 4 or more, the full form is used; otherwise a short or abbreviated form is used if available. For parsing, both forms are accepted, independent of the number of pattern letters.</source>
          <target state="translated">&lt;strong&gt;&lt;a id=&quot;text&quot;&gt;텍스트 :&lt;/a&gt;&lt;/strong&gt; 서식 지정을 위해 패턴 문자 수가 4 개 이상이면 전체 형식이 사용됩니다. 그렇지 않으면 가능한 경우 짧거나 축약 된 양식이 사용됩니다. 구문 분석의 경우 패턴 문자 수에 관계없이 두 형식이 모두 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="09354fca2ce256b5199b2e87f624ca3aad910601" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a id=&quot;timezone&quot;&gt;General time zone:&lt;/a&gt;&lt;/strong&gt; Time zones are interpreted as &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt; if they have names. For time zones representing a GMT offset value, the following syntax is used:</source>
          <target state="translated">&lt;strong&gt;&lt;a id=&quot;timezone&quot;&gt;일반 시간대 :&lt;/a&gt;&lt;/strong&gt; 시간대는이름이있는 경우&lt;a href=&quot;#text&quot;&gt; 텍스트&lt;/a&gt; 로 해석됩니다. GMT 오프셋 값을 나타내는 시간대의 경우 다음 구문이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="16f1669ab8738ad8f080d8cdccb853e49d25a004" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a id=&quot;year&quot;&gt;Year:&lt;/a&gt;&lt;/strong&gt; If the formatter's &lt;a href=&quot;dateformat#getCalendar()&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; is the Gregorian calendar, the following rules are applied.</source>
          <target state="translated">&lt;strong&gt;&lt;a id=&quot;year&quot;&gt;연도 :&lt;/a&gt;&lt;/strong&gt; 포맷터의&lt;a href=&quot;dateformat#getCalendar()&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 이 그레고리력 인 경우 다음 규칙이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="63087ce98066ff8a438a47b5b9a78732e59761fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a name=&quot;iso8601timezone&quot;&gt;ISO 8601 Time zone:&lt;/a&gt;&lt;/strong&gt; The number of pattern letters designates the format for both formatting and parsing as follows:</source>
          <target state="translated">&lt;strong&gt;&lt;a name=&quot;iso8601timezone&quot;&gt;ISO 8601 시간대 :&lt;/a&gt;&lt;/strong&gt; 패턴 문자 수는 다음과 같이 형식화 및 구문 분석의 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="50c97c07fcb52d32b258418561bf41245600519f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a name=&quot;month&quot;&gt;Month:&lt;/a&gt;&lt;/strong&gt; If the number of pattern letters is 3 or more, the month is interpreted as &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;; otherwise, it is interpreted as a &lt;a href=&quot;#number&quot;&gt;number&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;a name=&quot;month&quot;&gt;월 :&lt;/a&gt;&lt;/strong&gt; 패턴 글자 수가 3 개 이상인 경우 월은&lt;a href=&quot;#text&quot;&gt; 텍스트&lt;/a&gt; 로 해석됩니다. 그렇지 않으면&lt;a href=&quot;#number&quot;&gt; 숫자&lt;/a&gt; 로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="02c83a90de8b6b10b16e0f2db298bd569e486e5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a name=&quot;number&quot;&gt;Number:&lt;/a&gt;&lt;/strong&gt; For formatting, the number of pattern letters is the minimum number of digits, and shorter numbers are zero-padded to this amount. For parsing, the number of pattern letters is ignored unless it's needed to separate two adjacent fields.</source>
          <target state="translated">&lt;strong&gt;&lt;a name=&quot;number&quot;&gt;숫자 :&lt;/a&gt;&lt;/strong&gt; 서식의 경우 패턴 글자 수는 최소 자릿수이며 짧은 숫자는이 양에 0으로 채워집니다. 구문 분석의 경우 두 개의 인접한 필드를 구분할 필요가 없으면 패턴 문자 수는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="4bc6906004964706fbe62c8c4aa57557a452e5f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a name=&quot;rfc822timezone&quot;&gt;RFC 822 time zone:&lt;/a&gt;&lt;/strong&gt; For formatting, the RFC 822 4-digit time zone format is used:</source>
          <target state="translated">&lt;strong&gt;&lt;a name=&quot;rfc822timezone&quot;&gt;RFC 822 시간대 :&lt;/a&gt;&lt;/strong&gt; 형식화를 위해 RFC 822 4 자리 시간대 형식이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f62f7f824c3e6be3eefd1d4364121cd4f25984c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a name=&quot;text&quot;&gt;Text:&lt;/a&gt;&lt;/strong&gt; For formatting, if the number of pattern letters is 4 or more, the full form is used; otherwise a short or abbreviated form is used if available. For parsing, both forms are accepted, independent of the number of pattern letters.</source>
          <target state="translated">&lt;strong&gt;&lt;a name=&quot;text&quot;&gt;텍스트 :&lt;/a&gt;&lt;/strong&gt; 서식을 지정할 때 패턴 글자 수가 4 개 이상이면 전체 형식이 사용됩니다. 그렇지 않으면 가능한 경우 짧거나 축약 된 형식이 사용됩니다. 구문 분석의 경우 패턴 문자 수에 관계없이 두 형식이 모두 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="70fc1f41b72f439cfeaea7381e89113f5cc1cb4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a name=&quot;timezone&quot;&gt;General time zone:&lt;/a&gt;&lt;/strong&gt; Time zones are interpreted as &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt; if they have names. For time zones representing a GMT offset value, the following syntax is used:</source>
          <target state="translated">&lt;strong&gt;&lt;a name=&quot;timezone&quot;&gt;일반 시간대 :&lt;/a&gt;&lt;/strong&gt; 시간대는이름이 있으면&lt;a href=&quot;#text&quot;&gt; 텍스트&lt;/a&gt; 로 해석됩니다. GMT 오프셋 값을 나타내는 시간대의 경우 다음 구문이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cefae8ce4f4ca91aa747dc1789d7fc72fdbe1bc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a name=&quot;year&quot;&gt;Year:&lt;/a&gt;&lt;/strong&gt; If the formatter's &lt;a href=&quot;dateformat#getCalendar--&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; is the Gregorian calendar, the following rules are applied.</source>
          <target state="translated">&lt;strong&gt;&lt;a name=&quot;year&quot;&gt;연도 :&lt;/a&gt;&lt;/strong&gt; 포맷터의&lt;a href=&quot;dateformat#getCalendar--&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 이 그레고리력 인 경우 다음 규칙이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="5c466e246e217261d0edd904d173532ac3adff22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;add(f, delta)&lt;/code&gt;&lt;/strong&gt; adds &lt;code&gt;delta&lt;/code&gt; to field &lt;code&gt;f&lt;/code&gt;. This is equivalent to calling &lt;code&gt;set(f,
 get(f) + delta)&lt;/code&gt; with two adjustments:</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;add(f, delta)&lt;/code&gt; &lt;/strong&gt; 는필드 &lt;code&gt;f&lt;/code&gt; 에 &lt;code&gt;delta&lt;/code&gt; 를추가합니다. 이것은두 가지 조정으로 &lt;code&gt;set(f, get(f) + delta)&lt;/code&gt; 를 호출하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="07b0d2e3ada000ff9b93585dd2ed92985744a7f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;roll(f, delta)&lt;/code&gt;&lt;/strong&gt; adds &lt;code&gt;delta&lt;/code&gt; to field &lt;code&gt;f&lt;/code&gt; without changing larger fields. This is equivalent to calling &lt;code&gt;add(f, delta)&lt;/code&gt; with the following adjustment:</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;roll(f, delta)&lt;/code&gt; &lt;/strong&gt; 는더 큰 필드를 변경하지 않고필드 &lt;code&gt;f&lt;/code&gt; 에 &lt;code&gt;delta&lt;/code&gt; 를추가합니다. 이것은다음 조정으로 &lt;code&gt;add(f, delta)&lt;/code&gt; 를 호출하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b9e9624d3d3737bf9e2e56490ec25eeef764ea16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;set(f, value)&lt;/code&gt;&lt;/strong&gt; changes calendar field &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;value&lt;/code&gt;. In addition, it sets an internal member variable to indicate that calendar field &lt;code&gt;f&lt;/code&gt; has been changed. Although calendar field &lt;code&gt;f&lt;/code&gt; is changed immediately, the calendar's time value in milliseconds is not recomputed until the next call to &lt;code&gt;get()&lt;/code&gt;, &lt;code&gt;getTime()&lt;/code&gt;, &lt;code&gt;getTimeInMillis()&lt;/code&gt;, &lt;code&gt;add()&lt;/code&gt;, or &lt;code&gt;roll()&lt;/code&gt; is made. Thus, multiple calls to &lt;code&gt;set()&lt;/code&gt; do not trigger multiple, unnecessary computations. As a result of changing a calendar field using &lt;code&gt;set()&lt;/code&gt;, other calendar fields may also change, depending on the calendar field, the calendar field value, and the calendar system. In addition, &lt;code&gt;get(f)&lt;/code&gt; will not necessarily return &lt;code&gt;value&lt;/code&gt; set by the call to the &lt;code&gt;set&lt;/code&gt; method after the calendar fields have been recomputed. The specifics are determined by the concrete calendar class.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;set(f, value)&lt;/code&gt; &lt;/strong&gt; 는 달력 필드 &lt;code&gt;f&lt;/code&gt; 를 &lt;code&gt;value&lt;/code&gt; 로 변경 합니다 . 또한 달력 필드 &lt;code&gt;f&lt;/code&gt; 가 변경되었음을 나타내는 내부 구성원 변수를 설정합니다. 달력 필드 &lt;code&gt;f&lt;/code&gt; 는 즉시 변경되지만 &lt;code&gt;get()&lt;/code&gt; , &lt;code&gt;getTime()&lt;/code&gt; , &lt;code&gt;getTimeInMillis()&lt;/code&gt; , &lt;code&gt;add()&lt;/code&gt; 또는 &lt;code&gt;roll()&lt;/code&gt; 대한 다음 호출이 이루어질 때까지 달력의 시간 값 (밀리 초)은 다시 계산되지 않습니다. 따라서 &lt;code&gt;set()&lt;/code&gt; 을 여러 번 호출해도 불필요한 여러 계산이 트리거되지 않습니다. &lt;code&gt;set()&lt;/code&gt; 사용하여 달력 필드를 변경 한 결과캘린더 필드, 캘린더 필드 값 및 캘린더 시스템에 따라 다른 캘린더 필드도 변경 될 수 있습니다. 또한 &lt;code&gt;get(f)&lt;/code&gt; 는 달력 필드가 다시 계산 된 후 &lt;code&gt;set&lt;/code&gt; 메소드 호출에 의해 설정된 &lt;code&gt;value&lt;/code&gt; 반드시 반환하지는 않습니다 . 구체적인 내용은 구체적인 달력 클래스에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="0529c089b1eee4f9f7d436b62b7b2f9cb34c1755" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Add rule 1&lt;/strong&gt;. The value of field &lt;code&gt;f&lt;/code&gt; after the call minus the value of field &lt;code&gt;f&lt;/code&gt; before the call is &lt;code&gt;delta&lt;/code&gt;, modulo any overflow that has occurred in field &lt;code&gt;f&lt;/code&gt;. Overflow occurs when a field value exceeds its range and, as a result, the next larger field is incremented or decremented and the field value is adjusted back into its range.</source>
          <target state="translated">&lt;strong&gt;규칙 1을 추가합니다&lt;/strong&gt; . 호출 후 필드 &lt;code&gt;f&lt;/code&gt; 의 값 에서 호출 전 필드 &lt;code&gt;f&lt;/code&gt; 의 값을 뺀 값 은 &lt;code&gt;delta&lt;/code&gt; 이며, 필드 &lt;code&gt;f&lt;/code&gt; 에서 발생한 오버플로를 모듈로합니다 . 필드 값이 범위를 초과하면 오버플로가 발생하여 다음으로 큰 필드가 증가 또는 감소하고 필드 값이 다시 범위로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="ef9747af4d6f6e791d2de4498cc1ba16883124df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Add rule 2&lt;/strong&gt;. If a smaller field is expected to be invariant, but it is impossible for it to be equal to its prior value because of changes in its minimum or maximum after field &lt;code&gt;f&lt;/code&gt; is changed or other constraints, such as time zone offset changes, then its value is adjusted to be as close as possible to its expected value. A smaller field represents a smaller unit of time. &lt;code&gt;HOUR&lt;/code&gt; is a smaller field than &lt;code&gt;DAY_OF_MONTH&lt;/code&gt;. No adjustment is made to smaller fields that are not expected to be invariant. The calendar system determines what fields are expected to be invariant.</source>
          <target state="translated">&lt;strong&gt;규칙이 추가&lt;/strong&gt; . 더 작은 필드가 변하지 않을 것으로 예상되지만 필드 &lt;code&gt;f&lt;/code&gt; 가 변경되거나 시간대 오프셋 변경과 같은 다른 제한 조건 이후에 최소값 또는 최대 값이 변경되어 이전 값과 같을 수없는 경우 해당 값 예상 값에 최대한 가깝게 조정됩니다. 더 작은 필드는 더 작은 시간 단위를 나타냅니다. &lt;code&gt;HOUR&lt;/code&gt; 는 &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; 보다 작은 필드 입니다 . 변하지 않을 것으로 예상되는 더 작은 필드는 조정되지 않습니다. 일정 관리 시스템은 변하지 않는 필드를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="faf6750fc0b2ccf8acd1d6ccfa5006afd2bb398a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caller sensitive methods&lt;/strong&gt; can be linked as long as they are otherwise public and link requests have call site descriptors carrying full-strength &lt;a href=&quot;../../../../java.base/java/lang/invoke/methodhandles.lookup&quot;&gt;&lt;code&gt;MethodHandles.Lookup&lt;/code&gt;&lt;/a&gt; objects and not weakened lookups or the public lookup.</source>
          <target state="translated">&lt;strong&gt;호출자에 민감한 메서드&lt;/strong&gt; 는 공용이고 링크 요청에 약화 된 조회 또는 공용 조회가 아닌 최대 강도의 &lt;a href=&quot;../../../../java.base/java/lang/invoke/methodhandles.lookup&quot;&gt; &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; &lt;/a&gt; 개체를 전달하는 호출 사이트 설명자가있는 한 연결할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2de7c4e9fc86ab78e3c465a06afcf9800d84a1d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Changing a standard system property may have unpredictable results unless otherwise specified.&lt;/strong&gt; Property values may be cached during initialization or on first use. Setting a standard property after initialization using &lt;a href=&quot;#getProperties()&quot;&gt;&lt;code&gt;getProperties()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setProperties(java.util.Properties)&quot;&gt;&lt;code&gt;setProperties(Properties)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setProperty(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;setProperty(String, String)&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#clearProperty(java.lang.String)&quot;&gt;&lt;code&gt;clearProperty(String)&lt;/code&gt;&lt;/a&gt; may not have the desired effect.</source>
          <target state="translated">&lt;strong&gt;표준 시스템 속성을 변경하면 달리 지정하지 않는 한 예상치 못한 결과가 발생할 수 있습니다. &lt;/strong&gt;속성 값은 초기화 또는 처음 사용할 때 캐시 될 수 있습니다. 초기화 후 &lt;a href=&quot;#getProperties()&quot;&gt; &lt;code&gt;getProperties()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#setProperties(java.util.Properties)&quot;&gt; &lt;code&gt;setProperties(Properties)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#setProperty(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;setProperty(String, String)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#clearProperty(java.lang.String)&quot;&gt; &lt;code&gt;clearProperty(String)&lt;/code&gt; &lt;/a&gt; 사용하여 표준 속성을 설정 하면 원하는 효과가 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9c326b896a803894ccae321a16de65cec13d804" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Changing a standard system property may have unpredictable results unless otherwise specified&lt;/strong&gt;. See &lt;a href=&quot;#getProperties()&quot;&gt;getProperties&lt;/a&gt; for details.</source>
          <target state="translated">&lt;strong&gt;표준 시스템 등록 정보를 변경하면 달리 지정하지 않는 한 예상치 못한 결과가 발생할 수 있습니다&lt;/strong&gt; . 자세한 내용은 &lt;a href=&quot;#getProperties()&quot;&gt;getProperties&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3652b5be6afeb424303ad049468a633bba44b485" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Changing a standard system property may have unpredictable results unless otherwise specified&lt;/strong&gt;. See &lt;a href=&quot;#getProperties()&quot;&gt;getProperties&lt;/a&gt; method for details.</source>
          <target state="translated">&lt;strong&gt;표준 시스템 등록 정보를 변경하면 달리 지정하지 않는 한 예상치 못한 결과가 발생할 수 있습니다&lt;/strong&gt; . 자세한 내용은 &lt;a href=&quot;#getProperties()&quot;&gt;getProperties&lt;/a&gt; 메소드를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="78f570c1c1e5e53b0cdb2e4dd53ac5ea7fff10f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, replaced by &lt;a href=&quot;#getIssuerX500Principal()&quot;&gt;getIssuerX500Principal()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; , &lt;a href=&quot;#getIssuerX500Principal()&quot;&gt;getIssuerX500Principal ()으로&lt;/a&gt; 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="bdaaef02ae54022029fdac9e346dafb64887b7a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, replaced by &lt;a href=&quot;#getIssuerX500Principal()&quot;&gt;getIssuerX500Principal()&lt;/a&gt;. This method returns the &lt;code&gt;issuer&lt;/code&gt; as an implementation specific Principal object, which should not be relied upon by portable code.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; , &lt;a href=&quot;#getIssuerX500Principal()&quot;&gt;getIssuerX500Principal ()으로&lt;/a&gt; 대체되었습니다 . 이 메서드는 &lt;code&gt;issuer&lt;/code&gt; 를 구현 특정 Principal 개체로 반환하며 이식 가능한 코드에 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="7887131372c5cf4c155ee2dfb052a25e7617f4dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, replaced by &lt;a href=&quot;#getSubjectX500Principal()&quot;&gt;getSubjectX500Principal()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; , &lt;a href=&quot;#getSubjectX500Principal()&quot;&gt;getSubjectX500Principal ()&lt;/a&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8aa0dd995391853375a48bbcaa34d142eec528c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, replaced by &lt;a href=&quot;#getSubjectX500Principal()&quot;&gt;getSubjectX500Principal()&lt;/a&gt;. This method returns the &lt;code&gt;subject&lt;/code&gt; as an implementation specific Principal object, which should not be relied upon by portable code.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; , &lt;a href=&quot;#getSubjectX500Principal()&quot;&gt;getSubjectX500Principal ()&lt;/a&gt; 로 대체되었습니다 . 이 메서드는 &lt;code&gt;subject&lt;/code&gt; 를 구현 특정 Principal 개체로 반환하며 이식 가능한 코드에 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="813252046c0c24934efee2ac25812b320fd2ad1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, replaced by &lt;a href=&quot;x509certificate#getIssuerX500Principal--&quot;&gt;getIssuerX500Principal()&lt;/a&gt;. This method returns the &lt;code&gt;issuer&lt;/code&gt; as an implementation specific Principal object, which should not be relied upon by portable code.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; , &lt;a href=&quot;x509certificate#getIssuerX500Principal--&quot;&gt;getIssuerX500Principal ()&lt;/a&gt; 로 대체되었습니다 . 이 메소드는, &lt;code&gt;issuer&lt;/code&gt; 를 구현 고유의 주체 객체로서 돌려줍니다. 이것은 이식 가능한 코드에 의존하지 말아주세요.</target>
        </trans-unit>
        <trans-unit id="3a471edb8aeae10a2d51afa52775df54df0c7c40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, replaced by &lt;a href=&quot;x509certificate#getSubjectX500Principal--&quot;&gt;getSubjectX500Principal()&lt;/a&gt;. This method returns the &lt;code&gt;subject&lt;/code&gt; as an implementation specific Principal object, which should not be relied upon by portable code.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; , &lt;a href=&quot;x509certificate#getSubjectX500Principal--&quot;&gt;getSubjectX500Principal ()&lt;/a&gt; 로 대체되었습니다 . 이 메소드는, &lt;code&gt;subject&lt;/code&gt; 를 구현 고유의 주체 객체로서 돌려 주어, 이식 가능한 코드에 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="053fb3292b4b63c394dced141682c02ce896f070" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, replaced by &lt;a href=&quot;x509crl#getIssuerX500Principal--&quot;&gt;getIssuerX500Principal()&lt;/a&gt;. This method returns the &lt;code&gt;issuer&lt;/code&gt; as an implementation specific Principal object, which should not be relied upon by portable code.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; , &lt;a href=&quot;x509crl#getIssuerX500Principal--&quot;&gt;getIssuerX500Principal ()&lt;/a&gt; 로 대체되었습니다 . 이 메소드는, &lt;code&gt;issuer&lt;/code&gt; 를 구현 고유의 주체 객체로서 돌려줍니다. 이것은 이식 가능한 코드에 의존하지 말아주세요.</target>
        </trans-unit>
        <trans-unit id="014b8a784d8a56020a97dd6a5b5bca3f85e9a371" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, use &lt;a href=&quot;#addIssuer(javax.security.auth.x500.X500Principal)&quot;&gt;addIssuer(X500Principal)&lt;/a&gt; or &lt;a href=&quot;#addIssuerName(byte%5B%5D)&quot;&gt;addIssuerName(byte[])&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; , 대신 &lt;a href=&quot;#addIssuer(javax.security.auth.x500.X500Principal)&quot;&gt;addIssuer (X500Principal)&lt;/a&gt; 또는 &lt;a href=&quot;#addIssuerName(byte%5B%5D)&quot;&gt;addIssuerName (byte [])를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="156f487332d9cabb7ff51ddf113d12846a7582ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, use &lt;a href=&quot;#addIssuer(javax.security.auth.x500.X500Principal)&quot;&gt;addIssuer(X500Principal)&lt;/a&gt; or &lt;a href=&quot;#addIssuerName(byte%5B%5D)&quot;&gt;addIssuerName(byte[])&lt;/a&gt; instead. This method should not be relied on as it can fail to match some CRLs because of a loss of encoding information in the RFC 2253 String form of some distinguished names.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; , 대신 &lt;a href=&quot;#addIssuer(javax.security.auth.x500.X500Principal)&quot;&gt;addIssuer (X500Principal)&lt;/a&gt; 또는 &lt;a href=&quot;#addIssuerName(byte%5B%5D)&quot;&gt;addIssuerName (byte [])를&lt;/a&gt; 사용하십시오. 이 방법은 일부 고유 이름의 RFC 2253 문자열 형식의 인코딩 정보 손실로 인해 일부 CRL과 일치하지 못할 수 있으므로 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="cd4e191c365dba4be0d2c35fc0942b729071f89c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, use &lt;a href=&quot;#getIssuer()&quot;&gt;getIssuer()&lt;/a&gt; or &lt;a href=&quot;#getIssuerAsBytes()&quot;&gt;getIssuerAsBytes()&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; , 대신 &lt;a href=&quot;#getIssuer()&quot;&gt;getIssuer ()&lt;/a&gt; 또는 &lt;a href=&quot;#getIssuerAsBytes()&quot;&gt;getIssuerAsBytes ()를&lt;/a&gt; 사용하세요.</target>
        </trans-unit>
        <trans-unit id="c59f1930c9fd4cee8ab829f17ccc378309405bab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, use &lt;a href=&quot;#getIssuer()&quot;&gt;getIssuer()&lt;/a&gt; or &lt;a href=&quot;#getIssuerAsBytes()&quot;&gt;getIssuerAsBytes()&lt;/a&gt; instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; , 대신 &lt;a href=&quot;#getIssuer()&quot;&gt;getIssuer ()&lt;/a&gt; 또는 &lt;a href=&quot;#getIssuerAsBytes()&quot;&gt;getIssuerAsBytes ()를&lt;/a&gt; 사용하세요. 이 방법은 일부 고유 이름의 RFC 2253 문자열 형식의 인코딩 정보 손실로 인해 일부 인증서를 일치시키지 못할 수 있으므로 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="e8a5eab8e326e28bbf6aa5d602ec00821a3bacea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, use &lt;a href=&quot;#getSubject()&quot;&gt;getSubject()&lt;/a&gt; or &lt;a href=&quot;#getSubjectAsBytes()&quot;&gt;getSubjectAsBytes()&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; , 대신 &lt;a href=&quot;#getSubject()&quot;&gt;getSubject ()&lt;/a&gt; 또는 &lt;a href=&quot;#getSubjectAsBytes()&quot;&gt;getSubjectAsBytes ()를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c5f8942f3ae13ac5e48f4b0afbb34f27976a1563" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, use &lt;a href=&quot;#getSubject()&quot;&gt;getSubject()&lt;/a&gt; or &lt;a href=&quot;#getSubjectAsBytes()&quot;&gt;getSubjectAsBytes()&lt;/a&gt; instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; , 대신 &lt;a href=&quot;#getSubject()&quot;&gt;getSubject ()&lt;/a&gt; 또는 &lt;a href=&quot;#getSubjectAsBytes()&quot;&gt;getSubjectAsBytes ()를&lt;/a&gt; 사용하십시오. 이 방법은 일부 고유 이름의 RFC 2253 문자열 형식의 인코딩 정보 손실로 인해 일부 인증서를 일치시키지 못할 수 있으므로 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="4210426550d80d46c7d896836b05bd9f46b2c4f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, use &lt;a href=&quot;#setIssuer(javax.security.auth.x500.X500Principal)&quot;&gt;setIssuer(X500Principal)&lt;/a&gt; or &lt;a href=&quot;#setIssuer(byte%5B%5D)&quot;&gt;setIssuer(byte[])&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; , 대신 &lt;a href=&quot;#setIssuer(javax.security.auth.x500.X500Principal)&quot;&gt;setIssuer (X500Principal)&lt;/a&gt; 또는 &lt;a href=&quot;#setIssuer(byte%5B%5D)&quot;&gt;setIssuer (byte [])를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="470b8696c99241cc17768fd49fbd9ad3b92ea8a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, use &lt;a href=&quot;#setIssuer(javax.security.auth.x500.X500Principal)&quot;&gt;setIssuer(X500Principal)&lt;/a&gt; or &lt;a href=&quot;#setIssuer(byte%5B%5D)&quot;&gt;setIssuer(byte[])&lt;/a&gt; instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt; String form of some distinguished names.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; , 대신 &lt;a href=&quot;#setIssuer(javax.security.auth.x500.X500Principal)&quot;&gt;setIssuer (X500Principal)&lt;/a&gt; 또는 &lt;a href=&quot;#setIssuer(byte%5B%5D)&quot;&gt;setIssuer (byte [])를&lt;/a&gt; 사용하십시오. 이 방법은 일부 고유 이름 의 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt; 문자열 형식의 인코딩 정보 손실로 인해 일부 인증서를 일치시키지 못할 수 있으므로 의존해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="00aea257ef108cbf8cf06eb188d553caa4820b35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, use &lt;a href=&quot;#setIssuer(javax.security.auth.x500.X500Principal)&quot;&gt;setIssuer(X500Principal)&lt;/a&gt; or &lt;a href=&quot;#setIssuer(byte%5B%5D)&quot;&gt;setIssuer(byte[])&lt;/a&gt; instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the &lt;a href=&quot;https://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt; String form of some distinguished names.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; , 대신 &lt;a href=&quot;#setIssuer(javax.security.auth.x500.X500Principal)&quot;&gt;setIssuer (X500Principal)&lt;/a&gt; 또는 &lt;a href=&quot;#setIssuer(byte%5B%5D)&quot;&gt;setIssuer (byte [])를&lt;/a&gt; 사용하십시오. 이 방법은 일부 고유 이름 의 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt; 문자열 형식의 인코딩 정보 손실로 인해 일부 인증서를 일치시키지 못할 수 있으므로 의존해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="e621b4dacc61bb674015762681efca5e91e9b9a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, use &lt;a href=&quot;#setSubject(javax.security.auth.x500.X500Principal)&quot;&gt;setSubject(X500Principal)&lt;/a&gt; or &lt;a href=&quot;#setSubject(byte%5B%5D)&quot;&gt;setSubject(byte[])&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; , 대신 &lt;a href=&quot;#setSubject(javax.security.auth.x500.X500Principal)&quot;&gt;setSubject (X500Principal)&lt;/a&gt; 또는 &lt;a href=&quot;#setSubject(byte%5B%5D)&quot;&gt;setSubject (byte [])를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="845db43934012649583bbfc37d0acbf80b592ff3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, use &lt;a href=&quot;#setSubject(javax.security.auth.x500.X500Principal)&quot;&gt;setSubject(X500Principal)&lt;/a&gt; or &lt;a href=&quot;#setSubject(byte%5B%5D)&quot;&gt;setSubject(byte[])&lt;/a&gt; instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; , 대신 &lt;a href=&quot;#setSubject(javax.security.auth.x500.X500Principal)&quot;&gt;setSubject (X500Principal)&lt;/a&gt; 또는 &lt;a href=&quot;#setSubject(byte%5B%5D)&quot;&gt;setSubject (byte [])를&lt;/a&gt; 사용하십시오. 이 방법은 일부 고유 이름의 RFC 2253 문자열 형식의 인코딩 정보 손실로 인해 일부 인증서를 일치시키지 못할 수 있으므로 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="0e6fe4de6b37c4d4b4c677fd28a485c56c1a4fa8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, use &lt;a href=&quot;x509certselector#getIssuer--&quot;&gt;getIssuer()&lt;/a&gt; or &lt;a href=&quot;x509certselector#getIssuerAsBytes--&quot;&gt;getIssuerAsBytes()&lt;/a&gt; instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.</source>
          <target state="translated">&lt;strong&gt;적절하지는&lt;/strong&gt; 사용 &lt;a href=&quot;x509certselector#getIssuer--&quot;&gt;getIssuer ()&lt;/a&gt; 또는 &lt;a href=&quot;x509certselector#getIssuerAsBytes--&quot;&gt;) getIssuerAsBytes을 (&lt;/a&gt; 대신. 일부 고유 이름의 RFC 2253 문자열 형식으로 인코딩 정보가 손실되므로 일부 인증서와 일치하지 않을 수 있으므로이 방법을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="498b868e6676919ec125f658bf3a7ef6fcd6fb28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, use &lt;a href=&quot;x509certselector#getSubject--&quot;&gt;getSubject()&lt;/a&gt; or &lt;a href=&quot;x509certselector#getSubjectAsBytes--&quot;&gt;getSubjectAsBytes()&lt;/a&gt; instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.</source>
          <target state="translated">&lt;strong&gt;Denigrated&lt;/strong&gt; 인 경우 대신 &lt;a href=&quot;x509certselector#getSubject--&quot;&gt;getSubject ()&lt;/a&gt; 또는 &lt;a href=&quot;x509certselector#getSubjectAsBytes--&quot;&gt;getSubjectAsBytes ()를&lt;/a&gt; 사용하십시오. 일부 고유 이름의 RFC 2253 문자열 형식으로 인코딩 정보가 손실되므로 일부 인증서와 일치하지 않을 수 있으므로이 방법을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="9b989106f530a38cfee79991dc21155f4f0d6d60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, use &lt;a href=&quot;x509certselector#setIssuer-javax.security.auth.x500.X500Principal-&quot;&gt;setIssuer(X500Principal)&lt;/a&gt; or &lt;a href=&quot;x509certselector#setIssuer-byte:A-&quot;&gt;setIssuer(byte[])&lt;/a&gt; instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt; String form of some distinguished names.</source>
          <target state="translated">&lt;strong&gt;비하&lt;/strong&gt; , 사용 &lt;a href=&quot;x509certselector#setIssuer-javax.security.auth.x500.X500Principal-&quot;&gt;setIssuer (X500Principal가)&lt;/a&gt; 또는 &lt;a href=&quot;x509certselector#setIssuer-byte:A-&quot;&gt;setIssuer (바이트 [])&lt;/a&gt; 대신. 일부 고유 이름 의 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt; 문자열 형식으로 인코딩 정보가 손실되므로 일부 인증서와 일치하지 않을 수 있으므로이 방법을 사용하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="5c7534df8972d6453c60591d1ad542831d48d839" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, use &lt;a href=&quot;x509certselector#setSubject-javax.security.auth.x500.X500Principal-&quot;&gt;setSubject(X500Principal)&lt;/a&gt; or &lt;a href=&quot;x509certselector#setSubject-byte:A-&quot;&gt;setSubject(byte[])&lt;/a&gt; instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.</source>
          <target state="translated">&lt;strong&gt;비하&lt;/strong&gt; , 사용 &lt;a href=&quot;x509certselector#setSubject-javax.security.auth.x500.X500Principal-&quot;&gt;setSubject (X500Principal가)&lt;/a&gt; 또는 &lt;a href=&quot;x509certselector#setSubject-byte:A-&quot;&gt;setSubject (바이트 [])&lt;/a&gt; 대신. 일부 고유 이름의 RFC 2253 문자열 형식으로 인코딩 정보가 손실되므로 일부 인증서와 일치하지 않을 수 있으므로이 방법을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="cd9136224c76e2a3714229522da5f48b9e557672" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Denigrated&lt;/strong&gt;, use &lt;a href=&quot;x509crlselector#addIssuer-javax.security.auth.x500.X500Principal-&quot;&gt;addIssuer(X500Principal)&lt;/a&gt; or &lt;a href=&quot;x509crlselector#addIssuerName-byte:A-&quot;&gt;addIssuerName(byte[])&lt;/a&gt; instead. This method should not be relied on as it can fail to match some CRLs because of a loss of encoding information in the RFC 2253 String form of some distinguished names.</source>
          <target state="translated">&lt;strong&gt;적절하지는&lt;/strong&gt; 사용 &lt;a href=&quot;x509crlselector#addIssuer-javax.security.auth.x500.X500Principal-&quot;&gt;addIssuer (X500Principal가)&lt;/a&gt; 또는 &lt;a href=&quot;x509crlselector#addIssuerName-byte:A-&quot;&gt;것은, addIssuerName (바이트 [])&lt;/a&gt; 대신. 일부 고유 이름의 RFC 2253 문자열 형식에서 인코딩 정보가 손실되기 때문에 일부 CRL과 일치하지 않을 수 있으므로이 방법에 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="c50f99df763c3b880d8b2179d80ddf9feb8d5330" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated, for removal: This API element is subject to removal in a future version.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;제거를 위해 더 이상 사용되지 않음 :이 API 요소는 향후 버전에서 제거 될 수 있습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee48114c9632378a22abcada3d6d129aab004186" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Deprecated.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2a7c4e514bc5fd58eb61299ffa70daf5a11360bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; An instance created with this constructor cannot be used in a query.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 생성자로 생성 된 인스턴스는 쿼리에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="630df4ba4992fffb3ce91e1886b5d382aa071b00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of J2SE 5, use &lt;a href=&quot;character.unicodeblock#HIGH_SURROGATES&quot;&gt;&lt;code&gt;HIGH_SURROGATES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;character.unicodeblock#HIGH_PRIVATE_USE_SURROGATES&quot;&gt;&lt;code&gt;HIGH_PRIVATE_USE_SURROGATES&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;character.unicodeblock#LOW_SURROGATES&quot;&gt;&lt;code&gt;LOW_SURROGATES&lt;/code&gt;&lt;/a&gt;. These new constants match the block definitions of the Unicode Standard. The &lt;a href=&quot;character.unicodeblock#of-char-&quot;&gt;&lt;code&gt;of(char)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;character.unicodeblock#of-int-&quot;&gt;&lt;code&gt;of(int)&lt;/code&gt;&lt;/a&gt; methods return the new constants, not SURROGATES_AREA.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;J2SE 5 &lt;a href=&quot;character.unicodeblock#HIGH_SURROGATES&quot;&gt; &lt;code&gt;HIGH_SURROGATES&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;character.unicodeblock#HIGH_PRIVATE_USE_SURROGATES&quot;&gt; &lt;code&gt;HIGH_PRIVATE_USE_SURROGATES&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;character.unicodeblock#LOW_SURROGATES&quot;&gt; &lt;code&gt;LOW_SURROGATES&lt;/code&gt; 를 사용하십시오&lt;/a&gt; . 이 새로운 상수는 유니 코드 표준의 블록 정의와 일치합니다. &lt;a href=&quot;character.unicodeblock#of-char-&quot;&gt; &lt;code&gt;of(char)&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;character.unicodeblock#of-int-&quot;&gt; &lt;code&gt;of(int)&lt;/code&gt; &lt;/a&gt; 방법은 새로운 상수가 아닌 SURROGATES_AREA을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bea11c4943de4e80383ccf6cabccf25f3d669ffc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK 1.1, the preferred way to translate a Unicode character stream into a byte stream in the local encoding is via the &lt;code&gt;OutputStreamWriter&lt;/code&gt;, &lt;code&gt;BufferedWriter&lt;/code&gt;, and &lt;code&gt;PrintWriter&lt;/code&gt; classes.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 1.1부터는 로컬 인코딩에서 유니 코드 문자 스트림을 바이트 스트림으로 변환하는 기본 방법은 &lt;code&gt;OutputStreamWriter&lt;/code&gt; , &lt;code&gt;BufferedWriter&lt;/code&gt; 및 &lt;code&gt;PrintWriter&lt;/code&gt; 클래스를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0a4a417f3a58237d8bbf07cd676a512f83f4e58b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK 1.1, the preferred way to translate a byte stream in the local encoding into a character stream in Unicode is via the &lt;code&gt;InputStreamReader&lt;/code&gt; and &lt;code&gt;BufferedReader&lt;/code&gt; classes.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 1.1부터 로컬 인코딩의 바이트 스트림을 유니 코드의 문자 스트림으로 변환하는 기본 방법은 &lt;code&gt;InputStreamReader&lt;/code&gt; 및 &lt;code&gt;BufferedReader&lt;/code&gt; 클래스를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a04615889e1bfb35377c6807a345235df9ac2380" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;-(Calendar.get(Calendar.ZONE_OFFSET) +
 Calendar.get(Calendar.DST_OFFSET)) / (60 * 1000)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1부터 &lt;code&gt;-(Calendar.get(Calendar.ZONE_OFFSET) + Calendar.get(Calendar.DST_OFFSET)) / (60 * 1000)&lt;/code&gt; 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="878982eb2556a69f9bfe50c3095010b4068d66f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;Calendar.get(Calendar.DAY_OF_MONTH)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1 현재 &lt;code&gt;Calendar.get(Calendar.DAY_OF_MONTH)&lt;/code&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="36c0fddb5bbcb815da230c8272dfbfe303a19af2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;Calendar.get(Calendar.DAY_OF_WEEK)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1 현재 &lt;code&gt;Calendar.get(Calendar.DAY_OF_WEEK)&lt;/code&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="cac66b7c5dba443928f1edf7c82029e8b363c3f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;Calendar.get(Calendar.HOUR_OF_DAY)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1 현재 &lt;code&gt;Calendar.get(Calendar.HOUR_OF_DAY)&lt;/code&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="4a378462a7f795f54b8b824f95714b2a9d43bdaf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;Calendar.get(Calendar.MINUTE)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1 현재 &lt;code&gt;Calendar.get(Calendar.MINUTE)&lt;/code&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="4c1bac3886e3074f9ad8c6de6d1d06c7a47daa12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;Calendar.get(Calendar.MONTH)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1 현재, &lt;code&gt;Calendar.get(Calendar.MONTH)&lt;/code&gt; 로 옮겨졌습니다 .</target>
        </trans-unit>
        <trans-unit id="74a6932e86ac6e96c2329b037e37eff5a916ceac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;Calendar.get(Calendar.SECOND)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1 현재, &lt;code&gt;Calendar.get(Calendar.SECOND)&lt;/code&gt; 로 옮겨졌습니다 .</target>
        </trans-unit>
        <trans-unit id="76c6aa946a3121d3277dbd111eeea3901d0df93c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;Calendar.get(Calendar.YEAR) - 1900&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1에서 &lt;code&gt;Calendar.get(Calendar.YEAR) - 1900&lt;/code&gt; 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="473459cefb29255e4217b777afc8a095525bcd56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(Calendar.DAY_OF_MONTH, int date)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1 현재, &lt;code&gt;Calendar.set(Calendar.DAY_OF_MONTH, int date)&lt;/code&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="e0906f46f604dbf6cd96768b41726fde2c7d384c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(Calendar.HOUR_OF_DAY, int hours)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1 현재, &lt;code&gt;Calendar.set(Calendar.HOUR_OF_DAY, int hours)&lt;/code&gt; 졌습니다.</target>
        </trans-unit>
        <trans-unit id="90481178c0af5fe998d9783c42dc721924f09110" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(Calendar.MINUTE, int minutes)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1부터는 &lt;code&gt;Calendar.set(Calendar.MINUTE, int minutes)&lt;/code&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="deac964cec2eda934b5a0917f1aea52346da9ddd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(Calendar.MONTH, int month)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1 현재, &lt;code&gt;Calendar.set(Calendar.MONTH, int month)&lt;/code&gt; 졌습니다.</target>
        </trans-unit>
        <trans-unit id="9c75bdb33d59df039d878a0ef70a6e80e685ba13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(Calendar.SECOND, int seconds)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1 현재, &lt;code&gt;Calendar.set(Calendar.SECOND, int seconds)&lt;/code&gt; 졌습니다.</target>
        </trans-unit>
        <trans-unit id="2f094b4016987c9b4987379cf0453fd609d8c362" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(Calendar.YEAR, year + 1900)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1 현재 &lt;code&gt;Calendar.set(Calendar.YEAR, year + 1900)&lt;/code&gt; 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="35994280dac8f247e93881fe1c588be47de0d5a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(year + 1900, month, date)&lt;/code&gt; or &lt;code&gt;GregorianCalendar(year + 1900, month, date)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1 &lt;code&gt;Calendar.set(year + 1900, month, date)&lt;/code&gt; 또는 &lt;code&gt;GregorianCalendar(year + 1900, month, date)&lt;/code&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="989eb3bd05ae6343bc8848e6ddc4c7fd875c5c18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(year + 1900, month, date,
 hrs, min)&lt;/code&gt; or &lt;code&gt;GregorianCalendar(year + 1900,
 month, date, hrs, min)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1 &lt;code&gt;Calendar.set(year + 1900, month, date, hrs, min)&lt;/code&gt; 또는 &lt;code&gt;GregorianCalendar(year + 1900, month, date, hrs, min)&lt;/code&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="9fc4fb9fc3e84af58da3c29f5472d032f954b536" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(year + 1900, month, date,
 hrs, min, sec)&lt;/code&gt; or &lt;code&gt;GregorianCalendar(year + 1900,
 month, date, hrs, min, sec)&lt;/code&gt;, using a UTC &lt;code&gt;TimeZone&lt;/code&gt;, followed by &lt;code&gt;Calendar.getTime().getTime()&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1로 대체 &lt;code&gt;Calendar.set(year + 1900, month, date, hrs, min, sec)&lt;/code&gt; 또는 &lt;code&gt;GregorianCalendar(year + 1900, month, date, hrs, min, sec)&lt;/code&gt; UTC의 사용 &lt;code&gt;TimeZone&lt;/code&gt; 따랐다 하여 &lt;code&gt;Calendar.getTime().getTime()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3b3afdf8c43d11b3f1498e500a7f2aa39fbffc8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(year + 1900, month, date,
 hrs, min, sec)&lt;/code&gt; or &lt;code&gt;GregorianCalendar(year + 1900,
 month, date, hrs, min, sec)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1 &lt;code&gt;Calendar.set(year + 1900, month, date, hrs, min, sec)&lt;/code&gt; 또는 &lt;code&gt;GregorianCalendar(year + 1900, month, date, hrs, min, sec)&lt;/code&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="dfec5d6768645fb2a3f248df70b01333adf48e59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;DateFormat.format(Date date)&lt;/code&gt;, using a GMT &lt;code&gt;TimeZone&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1 &lt;code&gt;DateFormat.format(Date date)&lt;/code&gt; 는 GMT &lt;code&gt;TimeZone&lt;/code&gt; 을 사용하여 DateFormat.format (Date date) 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="45a6fb9a47f68185d2a4b65c296ce5b092ff92c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;DateFormat.format(Date date)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1 현재, &lt;code&gt;DateFormat.format(Date date)&lt;/code&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="08cda6ee95a70391388afdf24b400606ab67f773" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, replaced by &lt;code&gt;DateFormat.parse(String s)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1 현재, &lt;code&gt;DateFormat.parse(String s)&lt;/code&gt; 로 옮겨 졌습니다.</target>
        </trans-unit>
        <trans-unit id="56405e93256bc1c3136d0a496479182a45791935" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JDK version 1.1, the preferred way to tokenize an input stream is to convert it into a character stream, for example:</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JDK 버전 1.1부터 입력 스트림을 토큰 화하는 기본 방법은 입력 스트림을 문자 스트림으로 변환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a5578992b9d50aae3ce40662f43fb60ac9f5da2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;countermonitor#getDerivedGauge-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getDerivedGauge(ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2에서 &lt;a href=&quot;countermonitor#getDerivedGauge-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getDerivedGauge(ObjectName)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="9a27135f759aaf4656fc3017060c3ad950edbbbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;countermonitor#getDerivedGaugeTimeStamp-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getDerivedGaugeTimeStamp(ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2에서 &lt;a href=&quot;countermonitor#getDerivedGaugeTimeStamp-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getDerivedGaugeTimeStamp(ObjectName)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="67f91efe3e29ca7526570034257c05bbc8526b10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;countermonitor#getThreshold-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getThreshold(ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2에서 &lt;a href=&quot;countermonitor#getThreshold-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getThreshold(ObjectName)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ed04b47fc311e1f9212ad45396c35adf61d7a687" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;countermonitor#setInitThreshold-java.lang.Number-&quot;&gt;&lt;code&gt;setInitThreshold(java.lang.Number)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2 &lt;a href=&quot;countermonitor#setInitThreshold-java.lang.Number-&quot;&gt; &lt;code&gt;setInitThreshold(java.lang.Number)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="460f120037e6fe48f87687bbbe236292498d34b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;countermonitormbean#getDerivedGauge-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getDerivedGauge(ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2에서 &lt;a href=&quot;countermonitormbean#getDerivedGauge-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getDerivedGauge(ObjectName)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="e0ec4fb585fa9fa7092f9f40216c5b94da8492c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;countermonitormbean#getDerivedGaugeTimeStamp-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getDerivedGaugeTimeStamp(ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2에서 &lt;a href=&quot;countermonitormbean#getDerivedGaugeTimeStamp-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getDerivedGaugeTimeStamp(ObjectName)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="98b6d7cfd706103f385c21fbcd4ee43b2569f6e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;countermonitormbean#getThreshold-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getThreshold(ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2에서 &lt;a href=&quot;countermonitormbean#getThreshold-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getThreshold(ObjectName)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="3a22e4ae5de118e6263531cb454dfedb698e88d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;countermonitormbean#setInitThreshold-java.lang.Number-&quot;&gt;&lt;code&gt;setInitThreshold(java.lang.Number)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2 &lt;a href=&quot;countermonitormbean#setInitThreshold-java.lang.Number-&quot;&gt; &lt;code&gt;setInitThreshold(java.lang.Number)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="616e80b60e36d4d420b944075b371bb7efdbddbe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;gaugemonitor#getDerivedGauge-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getDerivedGauge(ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2에서 &lt;a href=&quot;gaugemonitor#getDerivedGauge-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getDerivedGauge(ObjectName)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="0cfcfc59071cac26b851e691f4ec76d4a61a2728" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;gaugemonitor#getDerivedGaugeTimeStamp-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getDerivedGaugeTimeStamp(ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2에서 &lt;a href=&quot;gaugemonitor#getDerivedGaugeTimeStamp-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getDerivedGaugeTimeStamp(ObjectName)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ffdbad0486c2092c7115fdb6d8c75516e036a9f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;gaugemonitormbean#getDerivedGauge-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getDerivedGauge(ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2에서 &lt;a href=&quot;gaugemonitormbean#getDerivedGauge-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getDerivedGauge(ObjectName)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="c6a5a755395c2bbef8ec32a73c852116e3623cc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;gaugemonitormbean#getDerivedGaugeTimeStamp-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getDerivedGaugeTimeStamp(ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2에서 &lt;a href=&quot;gaugemonitormbean#getDerivedGaugeTimeStamp-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getDerivedGaugeTimeStamp(ObjectName)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="015132639ff0fdf63077343e76ec11ce659baf9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;monitor#addObservedObject-javax.management.ObjectName-&quot;&gt;&lt;code&gt;addObservedObject(javax.management.ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2에서 &lt;a href=&quot;monitor#addObservedObject-javax.management.ObjectName-&quot;&gt; &lt;code&gt;addObservedObject(javax.management.ObjectName)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="0357f3c303459d3916659a8da0661c528fe48d73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;monitor#getObservedObjects--&quot;&gt;&lt;code&gt;getObservedObjects()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2에서 &lt;a href=&quot;monitor#getObservedObjects--&quot;&gt; &lt;code&gt;getObservedObjects()&lt;/code&gt; &lt;/a&gt; 로 대체</target>
        </trans-unit>
        <trans-unit id="ef92eb2d2cac7e4638292f675f185c6d3a2f4b84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;monitormbean#addObservedObject-javax.management.ObjectName-&quot;&gt;&lt;code&gt;addObservedObject(javax.management.ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2에서 &lt;a href=&quot;monitormbean#addObservedObject-javax.management.ObjectName-&quot;&gt; &lt;code&gt;addObservedObject(javax.management.ObjectName)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="882b06ed4ae1280d848e46549865880eb606fe90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;monitormbean#getObservedObjects--&quot;&gt;&lt;code&gt;getObservedObjects()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2에서 &lt;a href=&quot;monitormbean#getObservedObjects--&quot;&gt; &lt;code&gt;getObservedObjects()&lt;/code&gt; &lt;/a&gt; 로 대체</target>
        </trans-unit>
        <trans-unit id="c2d174895954ce7745a316d6446a7314d6353d65" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;stringmonitor#getDerivedGauge-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getDerivedGauge(ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2에서 &lt;a href=&quot;stringmonitor#getDerivedGauge-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getDerivedGauge(ObjectName)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="732d604712d74ac11ee18fcee1de7f978bd1b16f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;stringmonitor#getDerivedGaugeTimeStamp-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getDerivedGaugeTimeStamp(ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2에서 &lt;a href=&quot;stringmonitor#getDerivedGaugeTimeStamp-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getDerivedGaugeTimeStamp(ObjectName)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="e907885d56ca688aea024b18efa36e6ee6442cd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;stringmonitormbean#getDerivedGauge-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getDerivedGauge(ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2에서 &lt;a href=&quot;stringmonitormbean#getDerivedGauge-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getDerivedGauge(ObjectName)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="31ec10e15461409911702662bc0be1531d08b273" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; As of JMX 1.2, replaced by &lt;a href=&quot;stringmonitormbean#getDerivedGaugeTimeStamp-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getDerivedGaugeTimeStamp(ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;JMX 1.2에서 &lt;a href=&quot;stringmonitormbean#getDerivedGaugeTimeStamp-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getDerivedGaugeTimeStamp(ObjectName)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="5f9862a6c266b1e0b4362960704f1b4e22a217e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Extension mechanism will be removed in a future release. Use class path instead.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;확장 메커니즘은 향후 릴리스에서 제거 될 예정입니다. 대신 클래스 경로를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7aaf470404af333f091c8f6a2c8bc312a024c124" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Initialization of this field is prone to deadlocks. The field must be initialized by the Logger class initialization which may cause deadlocks with the LogManager class initialization. In such cases two class initialization wait for each other to complete. The preferred way to get the global logger object is via the call &lt;code&gt;Logger.getGlobal()&lt;/code&gt;. For compatibility with old JDK versions where the &lt;code&gt;Logger.getGlobal()&lt;/code&gt; is not available use the call &lt;code&gt;Logger.getLogger(Logger.GLOBAL_LOGGER_NAME)&lt;/code&gt; or &lt;code&gt;Logger.getLogger(&quot;global&quot;)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 필드의 초기화는 교착 상태에 빠지기 쉽습니다. 필드는 Logger 클래스 초기화에 의해 초기화되어야하며, LogManager 클래스 초기화에 교착 상태가 발생할 수 있습니다. 이러한 경우 두 클래스 초기화는 서로 완료 될 때까지 기다립니다. 글로벌 로거 객체를 얻는 가장 좋은 방법은 &lt;code&gt;Logger.getGlobal()&lt;/code&gt; 호출을 이용하는 것 입니다. 이전 JDK 버전과의 호환성을 위해 &lt;code&gt;Logger.getGlobal()&lt;/code&gt; 사용할 수 사용하지 않은 전화 &lt;code&gt;Logger.getLogger(Logger.GLOBAL_LOGGER_NAME)&lt;/code&gt; 또는 &lt;code&gt;Logger.getLogger(&quot;global&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="507d0f789c41f0a7652a82f56d800007bd6a899d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Instead of using this field, directly create the equivalent array &lt;code&gt;{ ImageInputStream.class }&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 필드를 사용하는 대신 동등한 배열 &lt;code&gt;{ ImageInputStream.class }&lt;/code&gt; 직접 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="be97832e628fa1834e418be68a6efb7252f261ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Instead of using this field, directly create the equivalent array &lt;code&gt;{ ImageOutputStream.class }&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 필드를 사용하는 대신 동등한 배열 &lt;code&gt;{ ImageOutputStream.class }&lt;/code&gt; 직접 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="d8278060a38e17dbc920ac658cc99dbbbaf6aa30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; No replacement.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;대체는 없습니다.</target>
        </trans-unit>
        <trans-unit id="fb1a7ffa0789315a49dda57536c6dd5f3c23ed04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Replaced by &lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-&quot;&gt;&lt;code&gt;defineClass(String, byte[], int, int)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;&lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-&quot;&gt; &lt;code&gt;defineClass(String, byte[], int, int)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="906e43fb9237ed0eec2fbb873d884a76b0c4bea2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Replaced by &lt;a href=&quot;signaturespi#engineSetParameter-java.security.spec.AlgorithmParameterSpec-&quot;&gt;&lt;code&gt;engineSetParameter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;&lt;a href=&quot;signaturespi#engineSetParameter-java.security.spec.AlgorithmParameterSpec-&quot;&gt; &lt;code&gt;engineSetParameter&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="b67e3c4b5f2d19e2167efeeb8a3045a792a01e88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Replaced by isJavaIdentifierPart(char).</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;isJavaIdentifierPart (char)로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="2a5406a7b5ce264f4eece850a0d9cb5aa3560d95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Replaced by isJavaIdentifierStart(char).</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;isJavaIdentifierStart (char)로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="70efdfae7bd4d567181a84c991d3a5b88b183ca0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Replaced by isWhitespace(char).</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;isWhitespace (char)로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="b5a8d86f7f8635cc95871d07a49d092b69f31ca8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; The definition of this call depends on &lt;a href=&quot;thread#suspend--&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt;, which is deprecated. Further, the results of this call were never well-defined.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 호출의 정의 는 더 이상 사용되지 않는 &lt;a href=&quot;thread#suspend--&quot;&gt; &lt;code&gt;suspend()&lt;/code&gt; &lt;/a&gt; 에 따라 다릅니다 . 또한이 호출의 결과는 잘 정의되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="4a0440758772f50dd1c737690ada4c79fccd99dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; The definition of this call depends on &lt;a href=&quot;threadgroup#suspend--&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt;, which is deprecated. Further, the behavior of this call was never specified.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 호출의 정의 는 더 이상 사용되지 않는 &lt;a href=&quot;threadgroup#suspend--&quot;&gt; &lt;code&gt;suspend()&lt;/code&gt; &lt;/a&gt; 에 따라 다릅니다 . 또한이 호출의 동작은 지정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="e9a8c48e3e7a2b3f2e1e228c65442f396b0578c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; The dependency on &lt;code&gt;AWTPermission&lt;/code&gt; creates an impediment to future modularization of the Java platform. Users of this method should instead invoke &lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt;&lt;code&gt;checkPermission(java.security.Permission)&lt;/code&gt;&lt;/a&gt; directly. This method will be changed in a future release to check the permission &lt;code&gt;java.security.AllPermission&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt; &lt;code&gt;AWTPermission&lt;/code&gt; 에 대한 종속성은 향후 Java 플랫폼의 모듈화에 방해가됩니다. 이 메소드의 사용자는 대신 &lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt; &lt;code&gt;checkPermission(java.security.Permission)&lt;/code&gt; &lt;/a&gt; 직접 호출해야합니다 . 이 메소드는 &lt;code&gt;java.security.AllPermission&lt;/code&gt; 권한을 확인하기 위해 다음 릴리스에서 변경 될 예정 입니다.</target>
        </trans-unit>
        <trans-unit id="3df3d5ebda5664be7fe341780c571b3293bc26f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; The dependency on &lt;code&gt;PropertyChangeListener&lt;/code&gt; creates a significant impediment to future modularization of the Java platform. This method will be removed in a future release.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt; &lt;code&gt;PropertyChangeListener&lt;/code&gt; 에 대한 종속성 은 Java 플랫폼의 향후 모듈화에 중대한 장애를 일으 킵니다. 이 방법은 향후 릴리스에서 제거 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="f0396ed3372ff028e0d457e476567e519d233139" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; The dependency on &lt;code&gt;PropertyChangeListener&lt;/code&gt; creates a significant impediment to future modularization of the Java platform. This method will be removed in a future release. Applications that need to monitor progress of the packer can poll the value of the &lt;a href=&quot;pack200.packer#PROGRESS&quot;&gt;&lt;code&gt;PROGRESS&lt;/code&gt;&lt;/a&gt; property instead.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt; &lt;code&gt;PropertyChangeListener&lt;/code&gt; 에 대한 종속성 은 Java 플랫폼의 향후 모듈화에 중대한 장애를 일으 킵니다. 이 방법은 향후 릴리스에서 제거 될 예정입니다. 패커의 진행 상황을 모니터링해야하는 응용 프로그램은 대신 &lt;a href=&quot;pack200.packer#PROGRESS&quot;&gt; &lt;code&gt;PROGRESS&lt;/code&gt; &lt;/a&gt; 속성 값을 폴링 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9c59070ae96883cde53103ebfc274c8c98ada7db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; The dependency on &lt;code&gt;PropertyChangeListener&lt;/code&gt; creates a significant impediment to future modularization of the Java platform. This method will be removed in a future release. Applications that need to monitor progress of the unpacker can poll the value of the &lt;a href=&quot;pack200.unpacker#PROGRESS&quot;&gt;&lt;code&gt;PROGRESS&lt;/code&gt;&lt;/a&gt; property instead.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt; &lt;code&gt;PropertyChangeListener&lt;/code&gt; 에 대한 종속성 은 Java 플랫폼의 향후 모듈화에 중대한 장애를 일으 킵니다. 이 방법은 향후 릴리스에서 제거 될 예정입니다. 언 패커의 진행 상황을 모니터링해야하는 응용 프로그램은 대신 &lt;a href=&quot;pack200.unpacker#PROGRESS&quot;&gt; &lt;code&gt;PROGRESS&lt;/code&gt; &lt;/a&gt; 속성 값을 폴링 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1fc405f4a5bc1517cef96c074e0a048981f2795d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; The dependency on &lt;code&gt;PropertyChangeListener&lt;/code&gt; creates a significant impediment to future modularization of the Java platform. This method will be removed in a future release. The global &lt;code&gt;LogManager&lt;/code&gt; can detect changes to the logging configuration by overridding the &lt;a href=&quot;logmanager#readConfiguration--&quot;&gt;&lt;code&gt;readConfiguration&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt; &lt;code&gt;PropertyChangeListener&lt;/code&gt; 에 대한 종속성 은 Java 플랫폼의 향후 모듈화에 중대한 장애를 일으 킵니다. 이 방법은 향후 릴리스에서 제거 될 예정입니다. 글로벌 &lt;code&gt;LogManager&lt;/code&gt; 는 &lt;a href=&quot;logmanager#readConfiguration--&quot;&gt; &lt;code&gt;readConfiguration&lt;/code&gt; &lt;/a&gt; 메소드 를 대체하여 로깅 구성의 변경 사항을 감지 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4ad11ce3e00515e98946a5139fc430d292761813" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; The instance specific getRequestProperty method should be used after an appropriate instance of URLConnection is obtained.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;적절한 URLConnection 인스턴스를 얻은 후에 인스턴스 별 getRequestProperty 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="43dda38bb7c6c3402439879e1752f85249a13691" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; The instance specific setRequestProperty method should be used after an appropriate instance of URLConnection is obtained. Invoking this method will have no effect.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;적절한 URLConnection 인스턴스를 얻은 후에 인스턴스 별 setRequestProperty 메소드를 사용해야합니다. 이 메소드를 호출해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="b37314ce06be895271e1302aaa7670c0f2eb6c42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; The resulting string may vary depending on the platform's default encoding. Instead, use the decode(String,String) method to specify the encoding.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;결과 문자열은 플랫폼의 기본 인코딩에 따라 달라질 수 있습니다. 대신, encode (String, String) 메소드를 사용하여 인코딩을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="fb8c0db146803b6c03a4bc2ab5bf06c5bc96c4e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; The resulting string may vary depending on the platform's default encoding. Instead, use the encode(String,String) method to specify the encoding.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;결과 문자열은 플랫폼의 기본 인코딩에 따라 달라질 수 있습니다. 대신, encode (String, String) 메소드를 사용하여 인코딩을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="93f324f35aa003515b4ef760c7017a778f0fc91d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method does not automatically escape characters that are illegal in URLs. It is recommended that new code convert an abstract pathname into a URL by first converting it into a URI, via the &lt;a href=&quot;file#toURI--&quot;&gt;&lt;code&gt;toURI&lt;/code&gt;&lt;/a&gt; method, and then converting the URI into a URL via the &lt;a href=&quot;../net/uri#toURL--&quot;&gt;&lt;code&gt;URI.toURL&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 방법은 URL에서 잘못된 문자를 자동으로 이스케이프하지 않습니다. 그것은하는 것이 좋습니다 새로운 코드로 변환 먼저 통해하는 URI로 변환하여 URL에 추상 패스 &lt;a href=&quot;file#toURI--&quot;&gt; &lt;code&gt;toURI&lt;/code&gt; &lt;/a&gt; 를 통해 URL에 URI를 변환 한 후 방법 및 &lt;a href=&quot;../net/uri#toURL--&quot;&gt; &lt;code&gt;URI.toURL&lt;/code&gt; 의&lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="c164c76059ba585fda55a9b79ba5d3961184eb7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method does not properly convert bytes into characters. As of JDK 1.1, the preferred way to do this is via the &lt;code&gt;String&lt;/code&gt; constructors that take a &lt;a href=&quot;../nio/charset/charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt;, charset name, or that use the platform's default charset.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 방법은 바이트를 문자로 올바르게 변환하지 않습니다. JDK 1.1 현재, 이것을하는 바람직한 방법 은 &lt;a href=&quot;../nio/charset/charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt; , charset 이름 을 취 하거나 플랫폼의 디폴트의 charset를 사용하는 &lt;code&gt;String&lt;/code&gt; 생성자 를 이용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="639956f5d1c62c0afb3a4164bd3c42642c13ac53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method does not properly convert bytes into characters. As of JDK 1.1, the preferred way to do this is via the &lt;code&gt;toString(String enc)&lt;/code&gt; method, which takes an encoding-name argument, or the &lt;code&gt;toString()&lt;/code&gt; method, which uses the platform's default character encoding.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 방법은 바이트를 문자로 올바르게 변환하지 않습니다. JDK 1.1 &lt;code&gt;toString(String enc)&lt;/code&gt; 이를 선호하는 방법 은 인코딩 이름 인수 를 사용하는 toString (String enc) 메소드 또는 플랫폼의 기본 문자 인코딩을 사용하는 &lt;code&gt;toString()&lt;/code&gt; 메소드를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="5db6d384981fbe3b0313645e03aafab848d43a23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method does not properly convert bytes to characters. As of JDK 1.1, the preferred way to read lines of text is via the &lt;code&gt;BufferedReader.readLine()&lt;/code&gt; method. Programs that use the &lt;code&gt;DataInputStream&lt;/code&gt; class to read lines can be converted to use the &lt;code&gt;BufferedReader&lt;/code&gt; class by replacing code of the form:</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 방법은 바이트를 문자로 올바르게 변환하지 않습니다. JDK 1.1 &lt;code&gt;BufferedReader.readLine()&lt;/code&gt; 텍스트 줄을 읽는 기본 방법은 BufferedReader.readLine () 메서드를 사용하는 것입니다. &lt;code&gt;DataInputStream&lt;/code&gt; 클래스를 사용하여 행을 읽는 프로그램 은 다음 형식의 코드를 대체 하여 &lt;code&gt;BufferedReader&lt;/code&gt; 클래스 를 사용하도록 변환 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="21fabaa948400bc1861c6eab859f615a9c521bc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method does not properly convert bytes to characters. see DataInputStream for the details and alternatives.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 방법은 바이트를 문자로 올바르게 변환하지 않습니다. 자세한 내용과 대안은 DataInputStream을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d3263d94da5e9228f2815ca9949da68aed094809" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method does not properly convert characters into bytes. As of JDK 1.1, the preferred way to do this is via the &lt;a href=&quot;string#getBytes--&quot;&gt;&lt;code&gt;getBytes()&lt;/code&gt;&lt;/a&gt; method, which uses the platform's default charset.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 방법은 문자를 바이트로 올바르게 변환하지 않습니다. JDK 1.1 &lt;a href=&quot;string#getBytes--&quot;&gt; &lt;code&gt;getBytes()&lt;/code&gt; &lt;/a&gt; 플랫폼의 기본 문자셋을 사용하는 getBytes () 메소드를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="7977305b85fa3fc0037abc7e5d1e4d0be864dc04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method does not throw an IOException if an I/O error occurs while saving the property list. The preferred way to save a properties list is via the &lt;code&gt;store(OutputStream out,
 String comments)&lt;/code&gt; method or the &lt;code&gt;storeToXML(OutputStream os, String comment)&lt;/code&gt; method.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;특성 목록을 저장하는 동안 I / O 오류가 발생하면이 메소드는 IOException을 발생시키지 않습니다. 특성 목록을 저장하는 선호되는 방법은 &lt;code&gt;store(OutputStream out, String comments)&lt;/code&gt; 메소드 또는 &lt;code&gt;storeToXML(OutputStream os, String comment)&lt;/code&gt; 메소드를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="5d053ccf537b3a0f344890106d54a5b441ef6054" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method does not write the values contained by this &lt;code&gt;PutField&lt;/code&gt; object in a proper format, and may result in corruption of the serialization stream. The correct way to write &lt;code&gt;PutField&lt;/code&gt; data is by calling the &lt;a href=&quot;objectoutputstream#writeFields--&quot;&gt;&lt;code&gt;ObjectOutputStream.writeFields()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 메소드는이 &lt;code&gt;PutField&lt;/code&gt; 객체에 포함 된 값을 올바른 형식으로 쓰지 않으므로 직렬화 스트림이 손상 될 수 있습니다. &lt;code&gt;PutField&lt;/code&gt; 데이터 를 작성하는 올바른 방법 은 &lt;a href=&quot;objectoutputstream#writeFields--&quot;&gt; &lt;code&gt;ObjectOutputStream.writeFields()&lt;/code&gt; &lt;/a&gt; 메소드를 호출하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ccd5bbaa41183c6151fdd8cd3f1a579580a2ba96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method exists solely for use with &lt;a href=&quot;thread#suspend--&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt;, which has been deprecated because it is deadlock-prone. For more information, see &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/concurrency/threadPrimitiveDeprecation.html&quot;&gt;Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다.&lt;/strong&gt; 이 메소드 는 교착 상태에 빠지기 때문에 사용되지 않는 &lt;a href=&quot;thread#suspend--&quot;&gt; &lt;code&gt;suspend()&lt;/code&gt; &lt;/a&gt; 와 함께 사용하기 위해서만 존재합니다 . 자세한 내용 &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/concurrency/threadPrimitiveDeprecation.html&quot;&gt;은 Thread.stop, Thread.suspend 및 Thread.resume이&lt;/a&gt; 더 이상 사용되지 않는 이유를 참조하십시오 . .</target>
        </trans-unit>
        <trans-unit id="fc1d830609cea68bde7a79fa77b27f7f3908fb3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method has been deprecated, as it is inherently deadlock-prone. If the target thread holds a lock on the monitor protecting a critical system resource when it is suspended, no thread can access this resource until the target thread is resumed. If the thread that would resume the target thread attempts to lock this monitor prior to calling &lt;code&gt;resume&lt;/code&gt;, deadlock results. Such deadlocks typically manifest themselves as &quot;frozen&quot; processes. For more information, see &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/concurrency/threadPrimitiveDeprecation.html&quot;&gt;Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 방법은 본질적으로 교착 상태가 발생하기 때문에 더 이상 사용되지 않습니다. 대상 스레드가 일시 중단 될 때 중요한 시스템 자원을 보호하는 모니터의 잠금을 보유하는 경우 대상 스레드가 재개 될 때까지 스레드가이 자원에 액세스 할 수 없습니다. 대상 스레드를 재개하는 스레드가 &lt;code&gt;resume&lt;/code&gt; 을 호출하기 전에이 모니터 잠금을 시도하면 교착 상태가 발생합니다. 이러한 교착 상태는 일반적으로 &quot;고정 된&quot;프로세스로 나타납니다. 자세한 내용 &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/concurrency/threadPrimitiveDeprecation.html&quot;&gt;은 Thread.stop, Thread.suspend 및 Thread.resume이&lt;/a&gt; 더 이상 사용되지 않는 이유를 참조하십시오 . .</target>
        </trans-unit>
        <trans-unit id="f8ffa6e9a6be1c4b1f23c55d4d4a004f3aed2ae4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method has no effect. The MBean Server used to obtain an attribute value is &lt;a href=&quot;queryeval#getMBeanServer--&quot;&gt;&lt;code&gt;QueryEval.getMBeanServer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 방법은 효과가 없습니다. 속성 값을 얻는 데 사용되는 MBean 서버는 &lt;a href=&quot;queryeval#getMBeanServer--&quot;&gt; &lt;code&gt;QueryEval.getMBeanServer()&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d7bbdd24a338dab2d78362de2da6073bff0c8ab0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method is inherently deadlock-prone. See &lt;a href=&quot;thread#suspend--&quot;&gt;&lt;code&gt;Thread.suspend()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 방법은 본질적으로 교착 상태가 발생하기 쉽습니다. 자세한 내용은 &lt;a href=&quot;thread#suspend--&quot;&gt; &lt;code&gt;Thread.suspend()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="efe102f6701e57a8841f3b8a799d88b2b8de6f06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method is inherently unsafe. It may result in finalizers being called on live objects while other threads are concurrently manipulating those objects, resulting in erratic behavior or deadlock.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 방법은 본질적으로 안전하지 않습니다. 다른 스레드가 동시에 해당 객체를 조작하여 불규칙한 동작이나 교착 상태가 발생하는 동안 라이브 객체에서 종료자가 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="17af8cc57a4a460911e5ce53067fdf3d03be4fb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method is inherently unsafe. See &lt;a href=&quot;thread#stop--&quot;&gt;&lt;code&gt;Thread.stop()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 방법은 본질적으로 안전하지 않습니다. 자세한 내용은 &lt;a href=&quot;thread#stop--&quot;&gt; &lt;code&gt;Thread.stop()&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="930d66f874071f08b79dcd9c9885f729f63f72a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method is inherently unsafe. Stopping a thread with Thread.stop causes it to unlock all of the monitors that it has locked (as a natural consequence of the unchecked &lt;code&gt;ThreadDeath&lt;/code&gt; exception propagating up the stack). If any of the objects previously protected by these monitors were in an inconsistent state, the damaged objects become visible to other threads, potentially resulting in arbitrary behavior. Many uses of &lt;code&gt;stop&lt;/code&gt; should be replaced by code that simply modifies some variable to indicate that the target thread should stop running. The target thread should check this variable regularly, and return from its run method in an orderly fashion if the variable indicates that it is to stop running. If the target thread waits for long periods (on a condition variable, for example), the &lt;code&gt;interrupt&lt;/code&gt; method should be used to interrupt the wait. For more information, see &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/concurrency/threadPrimitiveDeprecation.html&quot;&gt;Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다.&lt;/strong&gt; 이 방법은 본질적으로 안전하지 않습니다. Thread.stop으로 스레드를 중지하면 검사하지 않은 &lt;code&gt;ThreadDeath&lt;/code&gt; 예외가 스택을 전파하는 결과로 인해 잠긴 모든 모니터가 잠금 해제됩니다 . 이러한 모니터로 이전에 보호 된 개체 중 하나라도 일관성이없는 상태 인 경우 손상된 개체가 다른 스레드에 표시되어 임의의 동작이 발생할 수 있습니다. 많은 &lt;code&gt;stop&lt;/code&gt; 사용대상 스레드가 실행을 중지해야 함을 나타 내기 위해 일부 변수를 수정하는 코드로 대체해야합니다. 대상 스레드는이 변수를 정기적으로 확인하고 변수가 실행 중지를 표시하면 순서대로 실행 메소드에서 리턴해야합니다. 대상 스레드가 오랜 기간 (예 : 조건 변수) 동안 대기하는 경우 &lt;code&gt;interrupt&lt;/code&gt; 사용하여 대기를 중단해야합니다. 자세한 내용 &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/concurrency/threadPrimitiveDeprecation.html&quot;&gt;은 Thread.stop, Thread.suspend 및 Thread.resume이&lt;/a&gt; 더 이상 사용되지 않는 이유를 참조하십시오 . .</target>
        </trans-unit>
        <trans-unit id="b11638051473c99081eec850f8871277d28f3749" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method is not needed because a &lt;code&gt;ValueExp&lt;/code&gt; can access the MBean server in which it is being evaluated by using &lt;a href=&quot;queryeval#getMBeanServer--&quot;&gt;&lt;code&gt;QueryEval.getMBeanServer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt; &lt;code&gt;ValueExp&lt;/code&gt; 가 &lt;a href=&quot;queryeval#getMBeanServer--&quot;&gt; &lt;code&gt;QueryEval.getMBeanServer()&lt;/code&gt; &lt;/a&gt; 를 사용하여 평가중인 MBean 서버에 액세스 할 수 있으므로이 메소드는 필요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="182577ac145ef6356fbb54b4e8d7b69ad1a0e1bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method is used solely in conjunction with &lt;code&gt;Thread.suspend&lt;/code&gt; and &lt;code&gt;ThreadGroup.suspend&lt;/code&gt;, both of which have been deprecated, as they are inherently deadlock-prone. See &lt;a href=&quot;thread#suspend--&quot;&gt;&lt;code&gt;Thread.suspend()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 메소드는 &lt;code&gt;Thread.suspend&lt;/code&gt; 및 &lt;code&gt;ThreadGroup.suspend&lt;/code&gt; 와 함께 단독으로 사용되며 둘 다 기본적 으로 교착 상태가 발생하기 때문에 더 이상 사용되지 않습니다. 자세한 내용은 &lt;a href=&quot;thread#suspend--&quot;&gt; &lt;code&gt;Thread.suspend()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="527e75e19b9f65f51561eaa1a7e9800f072f8818" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method relies on the caller being at a stack depth of 4 which is error-prone and cannot be enforced by the runtime. Users of this method should instead invoke &lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt;&lt;code&gt;checkPermission(java.security.Permission)&lt;/code&gt;&lt;/a&gt; directly. This method will be changed in a future release to check the permission &lt;code&gt;java.security.AllPermission&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 메소드는 호출자가 스택 깊이 4에 있고 오류가 발생하기 쉬우 며 런타임으로 시행 할 수 없습니다. 이 메소드의 사용자는 대신 &lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt; &lt;code&gt;checkPermission(java.security.Permission)&lt;/code&gt; &lt;/a&gt; 직접 호출해야합니다 . 이 메소드는 &lt;code&gt;java.security.AllPermission&lt;/code&gt; 권한을 확인하기 위해 다음 릴리스에서 변경 될 예정 입니다.</target>
        </trans-unit>
        <trans-unit id="e0fe1f202aa616a72257d857632b1b5b42a89387" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method used to return the value of a proprietary property in the master file of the &quot;SUN&quot; Cryptographic Service Provider in order to determine how to parse algorithm-specific parameters. Use the new provider-based and algorithm-independent &lt;code&gt;AlgorithmParameters&lt;/code&gt; and &lt;code&gt;KeyFactory&lt;/code&gt; engine classes (introduced in the J2SE version 1.2 platform) instead.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다.&lt;/strong&gt; 이 방법은 알고리즘 별 매개 변수를 구문 분석하는 방법을 결정하기 위해 &quot;SUN&quot;암호화 서비스 공급자의 마스터 파일에서 독점 속성 값을 반환하는 데 사용되었습니다. 대신 새로운 제공자 기반 및 알고리즘 독립적 &lt;code&gt;AlgorithmParameters&lt;/code&gt; 및 &lt;code&gt;KeyFactory&lt;/code&gt; 엔진 클래스 (J2SE 버전 1.2 플랫폼에 도입)를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b6d65e0cbb8dbd6f3aed129ad9fff4fa1fc4ed73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method was originally designed to destroy this thread without any cleanup. Any monitors it held would have remained locked. However, the method was never implemented. If if were to be implemented, it would be deadlock-prone in much the manner of &lt;a href=&quot;thread#suspend--&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt;. If the target thread held a lock protecting a critical system resource when it was destroyed, no thread could ever access this resource again. If another thread ever attempted to lock this resource, deadlock would result. Such deadlocks typically manifest themselves as &quot;frozen&quot; processes. For more information, see &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/concurrency/threadPrimitiveDeprecation.html&quot;&gt; Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다.&lt;/strong&gt; 이 방법은 원래 정리없이이 스레드를 제거하도록 설계되었습니다. 보유한 모든 모니터는 잠금 상태를 유지합니다. 그러나이 방법은 구현되지 않았습니다. 만약 구현된다면 &lt;a href=&quot;thread#suspend--&quot;&gt; &lt;code&gt;suspend()&lt;/code&gt; &lt;/a&gt; 와 비슷한 방식으로 교착 상태가 발생하기 쉽습니다 . 대상 스레드가 파괴 될 때 중요한 시스템 자원을 보호하는 잠금을 보유한 경우 어떤 스레드도이 자원에 다시 액세스 할 수 없습니다. 다른 스레드가이 자원을 잠그려고 시도하면 교착 상태가 발생합니다. 이러한 교착 상태는 일반적으로 &quot;고정 된&quot;프로세스로 나타납니다. 자세한 내용 &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/concurrency/threadPrimitiveDeprecation.html&quot;&gt;은 Thread.stop, Thread.suspend 및 Thread.resume이&lt;/a&gt; 더 이상 사용되지 않는 이유를 참조하십시오 . .</target>
        </trans-unit>
        <trans-unit id="7814353e4886c8f8212ac50208410f812501849c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This method was originally designed to force a thread to stop and throw a given &lt;code&gt;Throwable&lt;/code&gt; as an exception. It was inherently unsafe (see &lt;a href=&quot;thread#stop--&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt; for details), and furthermore could be used to generate exceptions that the target thread was not prepared to handle. For more information, see &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/concurrency/threadPrimitiveDeprecation.html&quot;&gt;Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 메소드는 원래 스레드가 특정 &lt;code&gt;Throwable&lt;/code&gt; 을 예외로 중지하고 던지도록 설계되었습니다 . 본질적으로 안전하지 않았으며 (자세한 내용 은 &lt;a href=&quot;thread#stop--&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;/a&gt; 참조) 대상 스레드가 처리 할 준비가되지 않은 예외를 생성하는 데 사용될 수도 있습니다. 자세한 내용 &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/concurrency/threadPrimitiveDeprecation.html&quot;&gt;은 Thread.stop, Thread.suspend 및 Thread.resume이&lt;/a&gt; 더 이상 사용되지 않는 이유를 참조하십시오 . .</target>
        </trans-unit>
        <trans-unit id="e5d86e9acda989239e7bcecbe5006db0d3c5e779" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; This type of security checking is not recommended. It is recommended that the &lt;code&gt;checkPermission&lt;/code&gt; call be used instead.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;이 유형의 보안 검사는 권장되지 않습니다. &lt;code&gt;checkPermission&lt;/code&gt; 호출을 대신 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="2e824c56277cd8056458e12a3ba17304a3aad1d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Use #checkPermission(java.security.Permission) instead</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;대신 #checkPermission (java.security.Permission)을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cd66cbf3596302d0fecb03d5482fb532feb4d8d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Use &lt;a href=&quot;logger#logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Object...-&quot;&gt;&lt;code&gt;logrb(java.util.logging.Level, java.lang.String,
   java.lang.String, java.util.ResourceBundle, java.lang.String,
   java.lang.Object...)&lt;/code&gt;&lt;/a&gt; instead</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;대신 &lt;a href=&quot;logger#logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Object...-&quot;&gt; &lt;code&gt;logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.util.ResourceBundle, java.lang.String, java.lang.Object...)&lt;/code&gt; &lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b21d5b6e84ae3d62d86bbc193d978c46ade9d93b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Use &lt;a href=&quot;logger#logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Object...-&quot;&gt;&lt;code&gt;logrb(java.util.logging.Level, java.lang.String,
 java.lang.String, java.util.ResourceBundle, java.lang.String,
 java.lang.Object...)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;대신 &lt;a href=&quot;logger#logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Object...-&quot;&gt; &lt;code&gt;logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.util.ResourceBundle, java.lang.String, java.lang.Object...)&lt;/code&gt; &lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f9474223b1961786d382dc8025928e377a3ca779" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Use &lt;a href=&quot;logger#logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Throwable-&quot;&gt;&lt;code&gt;logrb(java.util.logging.Level, java.lang.String,
     java.lang.String, java.util.ResourceBundle, java.lang.String,
     java.lang.Throwable)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;대신 &lt;a href=&quot;logger#logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Throwable-&quot;&gt; &lt;code&gt;logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.util.ResourceBundle, java.lang.String, java.lang.Throwable)&lt;/code&gt; &lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="64e50d78f60b29b324551d235ccc068e162ca7af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Use &lt;a href=&quot;mbeanserver#getClassLoader-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getClassLoader&lt;/code&gt;&lt;/a&gt; to obtain the class loader for deserialization.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;직렬화 해제를위한 클래스 로더를 얻으려면 &lt;a href=&quot;mbeanserver#getClassLoader-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getClassLoader&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c1311bd972f319f089ccbd62b5a77d3eec2d701" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Use &lt;a href=&quot;mbeanserver#getClassLoaderFor-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getClassLoaderFor&lt;/code&gt;&lt;/a&gt; to obtain the appropriate class loader for deserialization.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;직렬화 해제에 적합한 클래스 로더를 얻으려면 &lt;a href=&quot;mbeanserver#getClassLoaderFor-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getClassLoaderFor&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="42eef4810c2ea47eb22be368db689453ef8a3d0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Use &lt;a href=&quot;mbeanserver#getClassLoaderRepository--&quot;&gt;&lt;code&gt;getClassLoaderRepository()&lt;/code&gt;&lt;/a&gt; to obtain the class loader repository and use it to deserialize.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;사용 &lt;a href=&quot;mbeanserver#getClassLoaderRepository--&quot;&gt; &lt;code&gt;getClassLoaderRepository()&lt;/code&gt; &lt;/a&gt; 클래스 로더 리포지터리 (repository)를 취득 해, 이것을 사용해 직렬화 복원을합니다.</target>
        </trans-unit>
        <trans-unit id="fe2e22a6b91e2cd5a59c2cf9033142c3278350a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Use &lt;a href=&quot;opentype#ALLOWED_CLASSNAMES_LIST&quot;&gt;&lt;code&gt;ALLOWED_CLASSNAMES_LIST&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;대신 &lt;a href=&quot;opentype#ALLOWED_CLASSNAMES_LIST&quot;&gt; &lt;code&gt;ALLOWED_CLASSNAMES_LIST&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="18775cf4bfbfdbaeaba9a8a670ecc3ae8cfc9bde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Use &lt;a href=&quot;signature#setParameter-java.security.spec.AlgorithmParameterSpec-&quot;&gt;&lt;code&gt;setParameter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;&lt;a href=&quot;signature#setParameter-java.security.spec.AlgorithmParameterSpec-&quot;&gt; &lt;code&gt;setParameter&lt;/code&gt; 를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="543e1a0cd3ea3e94e2e9868d5f47d7a05e6a7906" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Use DatagramSocket instead for UDP transport.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;UDP 전송 대신 DatagramSocket을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="11b7d720e75ca3c30beb93df31e5a144d664ddbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Use setURL(URL, String, String, int, String, String, String, String);</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;setURL (URL, 문자열, 문자열, int, 문자열, 문자열, 문자열, 문자열)을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="48f8c33b295036cbe745ec1f7d28d6b35a661c5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; Use the following code or its equivalent instead: ...... int ttl = mcastSocket.getTimeToLive(); mcastSocket.setTimeToLive(newttl); mcastSocket.send(p); mcastSocket.setTimeToLive(ttl); ......</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;다음 코드 나 이와 동등한 코드를 대신 사용하십시오. ...... int ttl = mcastSocket.getTimeToLive (); mcastSocket.setTimeToLive (newttl); mcastSocket.send (p); mcastSocket.setTimeToLive (ttl); ......</target>
        </trans-unit>
        <trans-unit id="26f3be0cc2152ac1fdd20fa3b05f81540a711e63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; equivalent to &lt;a href=&quot;monitor#alreadyNotifieds&quot;&gt;&lt;code&gt;alreadyNotifieds&lt;/code&gt;&lt;/a&gt;[0].</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;&lt;a href=&quot;monitor#alreadyNotifieds&quot;&gt; &lt;code&gt;alreadyNotifieds&lt;/code&gt; &lt;/a&gt; [0] 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="198af54613ceba5c3cddc17f2cfb8a93ac91f1f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; it is misplaced and shouldn't have existed.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;잘못 배치되어 존재하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="833971e5dc1b4f4dcea9a5a0a7a9a37a64a1c914" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; use getTimeToLive instead.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;대신 getTimeToLive를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2c4ef4dba01eaba83bf0cf00b57fcf7fc88c41d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; use setTimeToLive instead.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;대신 setTimeToLive를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="15c74cd2e81756ce59c2f224d959ca2d2786c9a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; use the getTimeToLive method instead, which returns an &lt;b&gt;int&lt;/b&gt; instead of a &lt;b&gt;byte&lt;/b&gt;.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;반환 대신에 getTimeToLive 방법, 사용 &lt;b&gt;INT를&lt;/b&gt; 대신 &lt;b&gt;바이트&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="7ff4757609ce241ee7873657ee825fee6a696bef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated.&lt;/strong&gt; use the setTimeToLive method instead, which uses &lt;b&gt;int&lt;/b&gt; instead of &lt;b&gt;byte&lt;/b&gt; as the type for ttl.</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않습니다. &lt;/strong&gt;대신 setTimeToLive 메소드를 사용하십시오.이 메소드 는 &lt;b&gt;바이트&lt;/b&gt; 대신 &lt;b&gt;int&lt;/b&gt; 를 ttl의 유형으로 사용합니다.&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="23eae5c1e79a2bb51123c48ce64e44df374c8788" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated: HTTP Tunneling.&lt;/strong&gt;&lt;em&gt;The HTTP tunneling mechanism has been deprecated. See &lt;a href=&quot;rmisocketfactory&quot;&gt;&lt;code&gt;RMISocketFactory&lt;/code&gt;&lt;/a&gt; for further information.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않음 : HTTP 터널링. &lt;/strong&gt;&lt;em&gt;HTTP 터널링 메커니즘은 더 이상 사용되지 않습니다. 자세한 정보는 &lt;a href=&quot;rmisocketfactory&quot;&gt; &lt;code&gt;RMISocketFactory&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ca71c69b34c9980a7bf0d4b6feaea076e7ff504" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated: Skeletons and Static Stubs.&lt;/strong&gt;&lt;em&gt;Skeletons and statically generated stubs are deprecated. This includes the APIs in this package that require the use of skeletons or static stubs and the runtime support for them. Support for skeletons and static stubs may be removed in a future release of the platform. Skeletons are unnecessary, as server-side method dispatching is handled directly by the RMI runtime. Statically generated stubs are unnecessary, as stubs are generated dynamically using &lt;a href=&quot;../../../../java.base/java/lang/reflect/proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; objects. See &lt;a href=&quot;unicastremoteobject&quot;&gt;&lt;code&gt;UnicastRemoteObject&lt;/code&gt;&lt;/a&gt; for information about dynamic stub generation.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않음 : 스켈레톤 및 정적 스텁. &lt;/strong&gt;&lt;em&gt;스켈레톤과 정적으로 생성 된 스텁은 더 이상 사용되지 않습니다. 여기에는 스켈레톤 또는 정적 스텁의 사용과 이에 대한 런타임 지원이 필요한이 패키지의 API가 포함됩니다. 스켈레톤 및 정적 스텁에 대한 지원은 향후 플랫폼 릴리스에서 제거 될 수 있습니다. 서버 측 메서드 디스패치가 RMI 런타임에 의해 직접 처리되므로 스켈레톤이 필요하지 않습니다. 스텁은 &lt;a href=&quot;../../../../java.base/java/lang/reflect/proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt; 개체를 사용하여 동적으로 생성되므로 정적으로 생성 된 스텁은 필요하지 않습니다. 동적 스텁 생성에 대한 정보는 &lt;a href=&quot;unicastremoteobject&quot;&gt; &lt;code&gt;UnicastRemoteObject&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="44bd948126ac869ffd057abcd9b1cd19a3630b0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated: Skeletons and Static Stubs.&lt;/strong&gt;&lt;em&gt;Skeletons and statically generated stubs are deprecated. This includes the APIs in this package that require the use of skeletons or static stubs, the runtime support for them, and the use of the &lt;code&gt;rmic&lt;/code&gt; stub compiler to generate them. Support for skeletons and static stubs may be removed in a future release of the platform. Skeletons are unnecessary, as server-side method dispatching is handled directly by the RMI runtime. Statically generated stubs are unnecessary, as stubs are generated dynamically using &lt;a href=&quot;../../../../java.base/java/lang/reflect/proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; objects. See &lt;a href=&quot;unicastremoteobject&quot;&gt;&lt;code&gt;UnicastRemoteObject&lt;/code&gt;&lt;/a&gt; for information about dynamic stub generation. Generation of skeletons and static stubs was typically performed as part of an application's build process by calling the &lt;code&gt;rmic&lt;/code&gt; tool. This is unnecessary, and calls to &lt;code&gt;rmic&lt;/code&gt; can simply be omitted.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않음 : 스켈레톤 및 정적 스텁. &lt;/strong&gt;&lt;em&gt;스켈레톤과 정적으로 생성 된 스텁은 더 이상 사용되지 않습니다. 여기에는 스켈레톤 또는 정적 스텁을 사용해야하는이 패키지의 API, 이들에 대한 런타임 지원 및이 를 생성하기 위한 &lt;code&gt;rmic&lt;/code&gt; 스텁 컴파일러 사용이 포함 됩니다. 스켈레톤 및 정적 스텁에 대한 지원은 향후 플랫폼 릴리스에서 제거 될 수 있습니다. 스켈레톤은 필요하지 않습니다. 서버 측 메서드 디스 패칭은 RMI 런타임에 의해 직접 처리되기 때문입니다. 스텁은 &lt;a href=&quot;../../../../java.base/java/lang/reflect/proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt; 개체를 사용하여 동적으로 생성되므로 정적으로 생성 된 스텁은 필요하지 않습니다. &lt;a href=&quot;unicastremoteobject&quot;&gt; &lt;code&gt;UnicastRemoteObject&lt;/code&gt; &lt;/a&gt; 참조동적 스텁 생성에 대한 정보는 스켈레톤 및 정적 스텁의 생성은 일반적으로 &lt;code&gt;rmic&lt;/code&gt; 도구 를 호출하여 애플리케이션 빌드 프로세스의 일부로 수행되었습니다 . 이것은 불필요하며 &lt;code&gt;rmic&lt;/code&gt; 에 대한 호출 은 간단히 생략 할 수 있습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="10d9e8bf2bbd0ba79c590ddffd6275acfb6cdceb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated: Static Stubs.&lt;/strong&gt;&lt;em&gt;Support for statically generated stubs is deprecated. This includes the API in this class that requires the use of static stubs, as well as the runtime support for loading static stubs. Generating stubs dynamically is preferred, using one of the non-deprecated ways of exporting objects as listed below. &lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않음 : 정적 스텁. &lt;/strong&gt;&lt;em&gt;정적으로 생성 된 스텁에 대한 지원은 더 이상 사용되지 않습니다. 여기에는 정적 스텁을 사용해야하는이 클래스의 API와 정적 스텁로드를위한 런타임 지원이 포함됩니다. 아래 나열된 것과 같이 더 이상 사용되지 않는 객체 내보내기 방법 중 하나를 사용하여 스텁을 동적으로 생성하는 것이 좋습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ecffdb371078b5ceea050ff8455bf4e26dd67a00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated: Static Stubs.&lt;/strong&gt;&lt;em&gt;Support for statically generated stubs is deprecated. This includes the API in this class that requires the use of static stubs, as well as the runtime support for loading static stubs. Generating stubs dynamically is preferred, using one of the non-deprecated ways of exporting objects as listed below. Do not run &lt;code&gt;rmic&lt;/code&gt; to generate static stub classes. It is unnecessary, and it is also deprecated.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않음 : 정적 스텁. &lt;/strong&gt;&lt;em&gt;정적으로 생성 된 스텁에 대한 지원은 더 이상 사용되지 않습니다. 여기에는 정적 스텁을 사용해야하는이 클래스의 API와 정적 스텁로드를위한 런타임 지원이 포함됩니다. 아래 나열된 것과 같이 더 이상 사용되지 않는 객체 내보내기 방법 중 하나를 사용하여 동적으로 스텁을 생성하는 것이 좋습니다. 정적 스텁 클래스를 생성하기 위해 &lt;code&gt;rmic&lt;/code&gt; 을 실행하지 마십시오 . 불필요하며 더 이상 사용되지 않습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="79c4ea4b146a3e34df92f445cbfe9a567006c5ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecation Notice:&lt;/strong&gt; The RMI Activation mechanism has been deprecated and may be removed from a future version of the Java Platform. See the &lt;a href=&quot;java/rmi/activation/package-summary&quot;&gt; &lt;code&gt;java.rmi.activation&lt;/code&gt;&lt;/a&gt; package specification for further information.</source>
          <target state="translated">&lt;strong&gt;지원 중단 알림 :&lt;/strong&gt; RMI 활성화 메커니즘은 더 이상 사용되지 않으며 Java 플랫폼의 차기 버전에서 제거 될 수 있습니다. 자세한 정보는 &lt;a href=&quot;java/rmi/activation/package-summary&quot;&gt; &lt;code&gt;java.rmi.activation&lt;/code&gt; &lt;/a&gt; 패키지 스펙을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7b4a07a158d8a72906707d7ac57ce6a2d2c2dea3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Document Type Definition (DTD)&lt;/strong&gt; - XML's built-in schema language.</source>
          <target state="translated">&lt;strong&gt;문서 유형 정의 (DTD)&lt;/strong&gt; -XML의 기본 제공 스키마 언어입니다.</target>
        </trans-unit>
        <trans-unit id="ebc7d65b68de17dc392d294656fe34cadc38dadc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Easy runtime coupling of an XML instance and schema.&lt;/strong&gt; Specifying the location of a schema to use for validation with JAXP parsers can be confusing. The Validation API makes this process simple (see &lt;a href=&quot;#example-1&quot;&gt;example&lt;/a&gt; below).</source>
          <target state="translated">&lt;strong&gt;XML 인스턴스와 스키마의 간편한 런타임 결합. &lt;/strong&gt;JAXP 파서로 유효성 검사에 사용할 스키마의 위치를 ​​지정하는 것은 혼란 스러울 수 있습니다. 유효성 검사 API를 사용하면이 프로세스가 간단 해집니다 (아래 &lt;a href=&quot;#example-1&quot;&gt;예&lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="e499170c024d09484d515b1e2e99b481724e4b2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Errors&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0a4e9b74e35d5bb4223b2cc511f2cfc42e49e60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Example&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="5c3d140c8e464f134cec3b0eebd38bf683f55d62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Examples&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aec29b6e22750bc511d0ca82430cb4a126753e79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Examples&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Examples&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="7a41bd0a5bb0ef138084e0910a1c45aec6443631" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ignorable Characters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;무시할 수없는 캐릭터&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a4bb204d8a0f8ee2fb48ae8ecfec3136a05dc5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Implementation note:&lt;/strong&gt; The value objects in a &lt;code&gt;WeakHashMap&lt;/code&gt; are held by ordinary strong references. Thus care should be taken to ensure that value objects do not strongly refer to their own keys, either directly or indirectly, since that will prevent the keys from being discarded. Note that a value object may refer indirectly to its key via the &lt;code&gt;WeakHashMap&lt;/code&gt; itself; that is, a value object may strongly refer to some other key object whose associated value object, in turn, strongly refers to the key of the first value object. If the values in the map do not rely on the map holding strong references to them, one way to deal with this is to wrap values themselves within &lt;code&gt;WeakReferences&lt;/code&gt; before inserting, as in: &lt;code&gt;m.put(key, new WeakReference(value))&lt;/code&gt;, and then unwrapping upon each &lt;code&gt;get&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;구현 노트 : &lt;/strong&gt; &lt;code&gt;WeakHashMap&lt;/code&gt; 의 값 객체는 일반적인 강력한 참조에 의해 유지됩니다. 따라서 값 객체가 직접 또는 간접적으로 자체 키를 강력하게 참조하지 않도록주의해야합니다. 키가 삭제되지 않기 때문입니다. 값 객체는 &lt;code&gt;WeakHashMap&lt;/code&gt; 자체 를 통해 키를 간접적으로 참조 할 수 있습니다. 즉, 값 객체는 연관된 값 객체가 차례로 제 1 값 객체의 키를 참조하는 다른 키 객체를 강하게 참조 할 수있다. 맵의 값이 강한 참조를 보유한 맵에 의존하지 않는 경우이를 처리하는 한 가지 방법은 &lt;code&gt;m.put(key, new WeakReference(value))&lt;/code&gt; 내에 값 을 랩핑 한 다음 각 &lt;code&gt;get&lt;/code&gt; 에 랩핑 해제하는 것입니다 . &lt;code&gt;WeakReferences&lt;/code&gt; 은 다음과 같이 삽입하기 전에 WeakReferences 하는 것입니다. .</target>
        </trans-unit>
        <trans-unit id="1c86e474baa1548275930d4ab1f19ecce40877db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Modifier&lt;/strong&gt;: There are currently two modifiers that turn on special collation rules.</source>
          <target state="translated">&lt;strong&gt;수정 자&lt;/strong&gt; : 현재 특수 조합 규칙을 설정하는 수정자가 두 개 있습니다.</target>
        </trans-unit>
        <trans-unit id="88ebf02797fd2d38306da19a6cdac10e0cc5315e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE: This class is obsolete. New implementations should implement the Map interface, rather than extending this class.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고 :이 클래스는 더 이상 사용되지 않습니다. 새로운 구현에서는이 클래스를 확장하는 대신 Map 인터페이스를 구현해야합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="321ca698f86f0a179ed5ec262cb103c1c9df001b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; By default, JPasswordField disables input methods; otherwise, input characters could be visible while they were composed using input methods. If an application needs the input methods support, please use the inherited method, &lt;code&gt;enableInputMethods(true)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 기본적으로 JPasswordField는 입력 방법을 비활성화합니다. 그렇지 않으면 입력 방법을 사용하여 작성하는 동안 입력 문자를 볼 수 있습니다. 애플리케이션에 입력 방법 지원이 필요한 경우 상속 된 메서드 &lt;code&gt;enableInputMethods(true)&lt;/code&gt; 를 사용하세요 .</target>
        </trans-unit>
        <trans-unit id="07ef0aa0861e82dbd2caf7b083c442c611e8b12c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; The 'xmlns' prefix must be resolved to following namespace &lt;a href=&quot;http://www.w3.org/2000/xmlns/&quot;&gt;http://www.w3.org/2000/xmlns/&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 'xmlns'접두사는 다음 네임 스페이스 &lt;a href=&quot;http://www.w3.org/2000/xmlns/&quot;&gt;http://www.w3.org/2000/xmlns/&lt;/a&gt; 로 확인되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="6607387c9d1e2aa2136abae20f9a4864d7a675dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; The 'xmlns' prefix must be resolved to following namespace &lt;a href=&quot;https://www.w3.org/2000/xmlns/&quot;&gt;http://www.w3.org/2000/xmlns/&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 'xmlns'접두사는 다음 네임 스페이스 &lt;a href=&quot;https://www.w3.org/2000/xmlns/&quot;&gt;http://www.w3.org/2000/xmlns/&lt;/a&gt; 로 확인되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="3dc379fe69804d9b06051c1eafb3bf9dcc2153c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; The &lt;a href=&quot;../../javax/sql/datasource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt; interface, provides another way to connect to a data source. The use of a &lt;code&gt;DataSource&lt;/code&gt; object is the preferred means of connecting to a data source.</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt;&lt;a href=&quot;../../javax/sql/datasource&quot;&gt; &lt;code&gt;DataSource&lt;/code&gt; &lt;/a&gt; 인터페이스는 데이터 소스에 연결하는 또 다른 방법을 제공합니다. 데이터 소스에 연결하는 데 선호되는 방법은 &lt;code&gt;DataSource&lt;/code&gt; 개체를 사용하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="bfa1773390b6d7bd0e17e9aa5b307e9109e87b34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt;The 'xml' prefix is bound as defined in &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#ns-using&quot;&gt;Namespaces in XML&lt;/a&gt; specification to &quot;http://www.w3.org/XML/1998/namespace&quot;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 'xml'접두사는 &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#ns-using&quot;&gt;XML&lt;/a&gt; 사양의 네임 스페이스에 정의 된대로 &quot;http://www.w3.org/XML/1998/namespace&quot; 에 바인딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="5f6dfed1ca3a36e83872246bdd550bdf8ecf26ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt;The 'xml' prefix is bound as defined in &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/#ns-using&quot;&gt;Namespaces in XML&lt;/a&gt; specification to &quot;http://www.w3.org/XML/1998/namespace&quot;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 'xml'접두사는 &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/#ns-using&quot;&gt;XML&lt;/a&gt; 사양의 네임 스페이스에 정의 된대로 &quot;http://www.w3.org/XML/1998/namespace&quot; 에 바인딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="cf3ebf7088bfd724d13a67d7399ecab41f15e4be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Normalization and Accents&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;정규화 및 악센트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="303be3f17f3adc5cd575d678f2ea3bf8463340af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note - &lt;/strong&gt; The &lt;code&gt;MLet&lt;/code&gt; class loader uses the &lt;a href=&quot;../mbeanserverfactory#getClassLoaderRepository(javax.management.MBeanServer)&quot;&gt;&lt;code&gt;MBeanServerFactory.getClassLoaderRepository(javax.management.MBeanServer)&lt;/code&gt;&lt;/a&gt; to load classes that could not be found in the loaded jar files.</source>
          <target state="translated">&lt;strong&gt;주 - &lt;/strong&gt; &lt;code&gt;MLet&lt;/code&gt; 클래스 로더가 사용 &lt;a href=&quot;../mbeanserverfactory#getClassLoaderRepository(javax.management.MBeanServer)&quot;&gt; &lt;code&gt;MBeanServerFactory.getClassLoaderRepository(javax.management.MBeanServer)&lt;/code&gt; &lt;/a&gt; 로드 된 jar 파일에서 찾을 수 없습니다로드 클래스.</target>
        </trans-unit>
        <trans-unit id="870a4c025e13ae5d349e13d9df0d3a5680f6de3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note - &lt;/strong&gt; The &lt;code&gt;MLet&lt;/code&gt; class loader uses the &lt;a href=&quot;../mbeanserverfactory#getClassLoaderRepository-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;MBeanServerFactory.getClassLoaderRepository(javax.management.MBeanServer)&lt;/code&gt;&lt;/a&gt; to load classes that could not be found in the loaded jar files.</source>
          <target state="translated">&lt;strong&gt;주 - &lt;/strong&gt; &lt;code&gt;MLet&lt;/code&gt; 클래스 로더가 사용 &lt;a href=&quot;../mbeanserverfactory#getClassLoaderRepository-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;MBeanServerFactory.getClassLoaderRepository(javax.management.MBeanServer)&lt;/code&gt; &lt;/a&gt; 로드 된 jar 파일에서 찾을 수 없습니다로드 클래스.</target>
        </trans-unit>
        <trans-unit id="ec33228e64a1a0a43230ac9c2ad4ae12634406cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that this class is not synchronized.&lt;/strong&gt; If multiple threads access a &lt;code&gt;ProcessBuilder&lt;/code&gt; instance concurrently, and at least one of the threads modifies one of the attributes structurally, it</source>
          <target state="translated">&lt;strong&gt;이 클래스는 동기화되지 않습니다. &lt;/strong&gt;여러 스레드가 동시에 &lt;code&gt;ProcessBuilder&lt;/code&gt; 인스턴스에 액세스하고 스레드 중 하나 이상이 속성 중 하나를 구조적으로 수정하는 경우</target>
        </trans-unit>
        <trans-unit id="d6cab14ddcda436d289affbe6ded809e782fa4ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt; If multiple threads access a hash map concurrently, and at least one of the threads modifies the map structurally, it</source>
          <target state="translated">&lt;strong&gt;이 구현은 동기화되지 않습니다. &lt;/strong&gt;여러 스레드가 동시에 해시 맵에 액세스하고 스레드 중 하나 이상이 맵을 구조적으로 수정하는 경우</target>
        </trans-unit>
        <trans-unit id="667cb7148fdbab4503609c8fe2a9b72041399bc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt; If multiple threads access a hash set concurrently, and at least one of the threads modifies the set, it</source>
          <target state="translated">&lt;strong&gt;이 구현은 동기화되지 않습니다. &lt;/strong&gt;여러 스레드가 동시에 해시 세트에 액세스하고 하나 이상의 스레드가 세트를 수정하는 경우</target>
        </trans-unit>
        <trans-unit id="3b58f81492f1ea9403f5907dfe24be03e2b13e6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt; If multiple threads access a linked hash map concurrently, and at least one of the threads modifies the map structurally, it &lt;em&gt;must&lt;/em&gt; be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the map. If no such object exists, the map should be &quot;wrapped&quot; using the &lt;a href=&quot;collections#synchronizedMap(java.util.Map)&quot;&gt;&lt;code&gt;Collections.synchronizedMap&lt;/code&gt;&lt;/a&gt; method. This is best done at creation time, to prevent accidental unsynchronized access to the map:</source>
          <target state="translated">&lt;strong&gt;이 구현은 동기화되지 않습니다.&lt;/strong&gt; 여러 스레드가 연결된 해시 맵에 동시에 액세스하고 스레드 중 하나 이상이 맵을 구조적으로 수정하는 경우 외부 적으로 동기화 &lt;em&gt;되어야합니다&lt;/em&gt; . 이는 일반적으로 맵을 자연스럽게 캡슐화하는 일부 객체에서 동기화하여 수행됩니다. 그러한 객체가 없으면 &lt;a href=&quot;collections#synchronizedMap(java.util.Map)&quot;&gt; &lt;code&gt;Collections.synchronizedMap&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 맵을 &quot;래핑&quot;해야합니다 . 이것은지도에 대한 실수로 동기화되지 않은 액세스를 방지하기 위해 생성시 가장 잘 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="b1139e58073a41d3cd1c3d47073f0db4fa222857" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt; If multiple threads access a linked hash map concurrently, and at least one of the threads modifies the map structurally, it &lt;em&gt;must&lt;/em&gt; be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the map. If no such object exists, the map should be &quot;wrapped&quot; using the &lt;a href=&quot;collections#synchronizedMap-java.util.Map-&quot;&gt;&lt;code&gt;Collections.synchronizedMap&lt;/code&gt;&lt;/a&gt; method. This is best done at creation time, to prevent accidental unsynchronized access to the map:</source>
          <target state="translated">&lt;strong&gt;이 구현은 동기화되지 않습니다.&lt;/strong&gt; 여러 스레드가 링크 된 해시 맵에 동시에 액세스하고 하나 이상의 스레드가 맵을 구조적으로 수정하는 경우 외부 적으로 동기화 &lt;em&gt;해야합니다&lt;/em&gt; . 이는 일반적으로 맵을 자연스럽게 캡슐화하는 일부 객체를 동기화하여 수행됩니다. 이러한 객체가 없으면 &lt;a href=&quot;collections#synchronizedMap-java.util.Map-&quot;&gt; &lt;code&gt;Collections.synchronizedMap&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 맵을 &quot;랩핑&quot;해야합니다 . 실수로 맵에 동기화되지 않은 액세스를 방지하기 위해 생성시 가장 잘 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="63f51f67f4bd9f5ce47d0d269f8a7375dc81ac64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt; If multiple threads access a linked hash set concurrently, and at least one of the threads modifies the set, it &lt;em&gt;must&lt;/em&gt; be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the set. If no such object exists, the set should be &quot;wrapped&quot; using the &lt;a href=&quot;collections#synchronizedSet(java.util.Set)&quot;&gt;&lt;code&gt;Collections.synchronizedSet&lt;/code&gt;&lt;/a&gt; method. This is best done at creation time, to prevent accidental unsynchronized access to the set:</source>
          <target state="translated">&lt;strong&gt;이 구현은 동기화되지 않습니다.&lt;/strong&gt; 여러 스레드가 연결된 해시 집합에 동시에 액세스하고 스레드 중 하나 이상이 집합을 수정하는 경우 외부에서 동기화 &lt;em&gt;되어야합니다&lt;/em&gt; . 이것은 일반적으로 집합을 자연스럽게 캡슐화하는 일부 개체에서 동기화하여 수행됩니다. 이러한 개체가 없으면 &lt;a href=&quot;collections#synchronizedSet(java.util.Set)&quot;&gt; &lt;code&gt;Collections.synchronizedSet&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 집합을 &quot;래핑&quot;해야합니다 . 이는 세트에 대한 우발적 인 비동기 액세스를 방지하기 위해 생성시 가장 잘 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="f2df19b960c7732b50d732bd6e4066733746fc6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt; If multiple threads access a linked hash set concurrently, and at least one of the threads modifies the set, it &lt;em&gt;must&lt;/em&gt; be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the set. If no such object exists, the set should be &quot;wrapped&quot; using the &lt;a href=&quot;collections#synchronizedSet-java.util.Set-&quot;&gt;&lt;code&gt;Collections.synchronizedSet&lt;/code&gt;&lt;/a&gt; method. This is best done at creation time, to prevent accidental unsynchronized access to the set:</source>
          <target state="translated">&lt;strong&gt;이 구현은 동기화되지 않습니다. &lt;/strong&gt;여러 스레드가 동시에 연결된 해시 세트에 액세스하고 하나 이상의 스레드가 세트를 수정하는 경우 외부 적으로 동기화 &lt;em&gt;되어야합니다&lt;/em&gt; . 이것은 일반적으로 세트를 자연스럽게 캡슐화하는 일부 객체를 동기화하여 수행됩니다. 그러한 객체가 존재하지 않는 경우는 &lt;a href=&quot;collections#synchronizedSet-java.util.Set-&quot;&gt; &lt;code&gt;Collections.synchronizedSet&lt;/code&gt; &lt;/a&gt; 메소드를 사용해 세트를 &quot;랩핑&quot;해야합니다 . 이는 생성시 실수로 세트에 대한 동기화되지 않은 액세스를 방지하기 위해 수행하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5cc1faba2edccc11ed61691b2cfa88eebd009f5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt; If multiple threads access a linked list concurrently, and at least one of the threads modifies the list structurally, it</source>
          <target state="translated">&lt;strong&gt;이 구현은 동기화되지 않습니다. &lt;/strong&gt;여러 스레드가 동시에 링크 된 목록에 액세스하고 하나 이상의 스레드가 목록을 구조적으로 수정하는 경우</target>
        </trans-unit>
        <trans-unit id="f96e0317b7c85e5c3a6e1ac3a3410c00b2ead24f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt; If multiple threads access a map concurrently, and at least one of the threads modifies the map structurally, it &lt;em&gt;must&lt;/em&gt; be synchronized externally. (A structural modification is any operation that adds or deletes one or more mappings; merely changing the value associated with an existing key is not a structural modification.) This is typically accomplished by synchronizing on some object that naturally encapsulates the map. If no such object exists, the map should be &quot;wrapped&quot; using the &lt;a href=&quot;collections#synchronizedSortedMap(java.util.SortedMap)&quot;&gt;&lt;code&gt;Collections.synchronizedSortedMap&lt;/code&gt;&lt;/a&gt; method. This is best done at creation time, to prevent accidental unsynchronized access to the map:</source>
          <target state="translated">&lt;strong&gt;이 구현은 동기화되지 않습니다.&lt;/strong&gt; 여러 스레드가 동시에 맵에 액세스하고 스레드 중 하나 이상이 맵을 구조적으로 수정하는 경우 외부에서 동기화 &lt;em&gt;되어야합니다&lt;/em&gt; . (구조적 수정은 하나 이상의 매핑을 추가하거나 삭제하는 작업입니다. 단순히 기존 키와 관련된 값을 변경하는 것은 구조적 수정이 아닙니다.) 이는 일반적으로 맵을 자연스럽게 캡슐화하는 일부 객체에서 동기화하여 수행됩니다. 그러한 객체가 없으면 &lt;a href=&quot;collections#synchronizedSortedMap(java.util.SortedMap)&quot;&gt; &lt;code&gt;Collections.synchronizedSortedMap&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 맵을 &quot;래핑&quot;해야합니다 . 이것은지도에 대한 실수로 동기화되지 않은 액세스를 방지하기 위해 생성시 가장 잘 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="96dd55977c3b5c41fbaee587a2d422df7205e3fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt; If multiple threads access a map concurrently, and at least one of the threads modifies the map structurally, it &lt;em&gt;must&lt;/em&gt; be synchronized externally. (A structural modification is any operation that adds or deletes one or more mappings; merely changing the value associated with an existing key is not a structural modification.) This is typically accomplished by synchronizing on some object that naturally encapsulates the map. If no such object exists, the map should be &quot;wrapped&quot; using the &lt;a href=&quot;collections#synchronizedSortedMap-java.util.SortedMap-&quot;&gt;&lt;code&gt;Collections.synchronizedSortedMap&lt;/code&gt;&lt;/a&gt; method. This is best done at creation time, to prevent accidental unsynchronized access to the map:</source>
          <target state="translated">&lt;strong&gt;이 구현은 동기화되지 않습니다.&lt;/strong&gt; 여러 스레드가 동시에 맵에 액세스하고 하나 이상의 스레드가 맵을 구조적으로 수정하는 경우 외부에서 동기화 &lt;em&gt;해야합니다&lt;/em&gt; . (구조적 수정은 하나 이상의 매핑을 추가하거나 삭제하는 작업입니다. 기존 키와 관련된 값을 변경하는 것만으로는 구조적 수정이 아닙니다.) 일반적으로 맵을 자연스럽게 캡슐화하는 일부 객체에서 동기화하면됩니다. 그러한 객체가 존재하지 않는 경우는 &lt;a href=&quot;collections#synchronizedSortedMap-java.util.SortedMap-&quot;&gt; &lt;code&gt;Collections.synchronizedSortedMap&lt;/code&gt; &lt;/a&gt; 메소드를 사용해 맵을 랩핑 할 필요가 있습니다 . 실수로 맵에 동기화되지 않은 액세스를 방지하기 위해 생성시 가장 잘 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="f1736f1fd01fd41e7df5d0fe5e84cbf5d6b567ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt; If multiple threads access a tree set concurrently, and at least one of the threads modifies the set, it</source>
          <target state="translated">&lt;strong&gt;이 구현은 동기화되지 않습니다. &lt;/strong&gt;여러 스레드가 동시에 트리 세트에 액세스하고 하나 이상의 스레드가 세트를 수정하는 경우</target>
        </trans-unit>
        <trans-unit id="dad6785e319c55526e4a76517d0aad16c6719c55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt; If multiple threads access an &lt;code&gt;ArrayList&lt;/code&gt; instance concurrently, and at least one of the threads modifies the list structurally, it</source>
          <target state="translated">&lt;strong&gt;이 구현은 동기화되지 않습니다. &lt;/strong&gt;여러 스레드가 동시에 &lt;code&gt;ArrayList&lt;/code&gt; 인스턴스에 액세스하고 하나 이상의 스레드가 목록을 구조적으로 수정하는 경우</target>
        </trans-unit>
        <trans-unit id="1bf3c1c8e915f99f33e420277c3a269fc9e44c25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt; If multiple threads access an identity hash map concurrently, and at least one of the threads modifies the map structurally, it</source>
          <target state="translated">&lt;strong&gt;이 구현은 동기화되지 않습니다. &lt;/strong&gt;여러 스레드가 동시에 ID 해시 맵에 액세스하고 스레드 중 하나 이상이 맵을 구조적으로 수정하는 경우</target>
        </trans-unit>
        <trans-unit id="98c9a6a63130277c803725dfd2788675770aca5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt; Multiple threads should not access a &lt;code&gt;PriorityQueue&lt;/code&gt; instance concurrently if any of the threads modifies the queue. Instead, use the thread-safe &lt;a href=&quot;concurrent/priorityblockingqueue&quot;&gt;&lt;code&gt;PriorityBlockingQueue&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;strong&gt;이 구현은 동기화되지 않습니다. &lt;/strong&gt;스레드가 큐를 수정하는 경우 여러 스레드가 &lt;code&gt;PriorityQueue&lt;/code&gt; 인스턴스에 동시에 액세스 하면 안됩니다. 대신 스레드 안전 &lt;a href=&quot;concurrent/priorityblockingqueue&quot;&gt; &lt;code&gt;PriorityBlockingQueue&lt;/code&gt; &lt;/a&gt; 클래스를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="566afb651a5e98a12d1cba69e75ca1203f04a180" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note to Distributions bundled with parsers:&lt;/strong&gt; You should modify the implementation of the no-arguments &lt;em&gt;createXMLReader&lt;/em&gt; to handle cases where the external configuration mechanisms aren't set up. That method should do its best to return a parser when one is in the class path, even when nothing bound its class name to &lt;code&gt;org.xml.sax.driver&lt;/code&gt; so those configuration mechanisms would see it.</source>
          <target state="translated">&lt;strong&gt;파서와 함께 번들로 제공되는 배포에 대한 참고 사항 :&lt;/strong&gt; 외부 구성 메커니즘이 설정되지 않은 경우를 처리하려면 인수없는 &lt;em&gt;createXMLReader&lt;/em&gt; 의 구현을 수정해야 합니다. 이 메서드는 클래스 이름이 &lt;code&gt;org.xml.sax.driver&lt;/code&gt; 에 바인딩되지 않은 경우에도 해당 구성 메커니즘에서 볼 수 있도록 파서가 클래스 경로에있을 때 파서를 반환하도록 최선을 다해야 합니다.</target>
        </trans-unit>
        <trans-unit id="8d10fb3b31459bcb8895e6220937c45a9bc7d6b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; As we see above, the string produced by a &lt;code&gt;ChoiceFormat&lt;/code&gt; in &lt;code&gt;MessageFormat&lt;/code&gt; is treated as special; occurrences of '{' are used to indicate subformats, and cause recursion. If you create both a &lt;code&gt;MessageFormat&lt;/code&gt; and &lt;code&gt;ChoiceFormat&lt;/code&gt; programmatically (instead of using the string patterns), then be careful not to produce a format that recurses on itself, which will cause an infinite loop.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 위에서 볼 수 있듯이 &lt;code&gt;MessageFormat&lt;/code&gt; 의 &lt;code&gt;ChoiceFormat&lt;/code&gt; 에 의해 생성 된 문자열 은 특수한 것으로 취급됩니다. '{'는 하위 형식을 나타 내기 위해 사용되며 재귀를 유발합니다. 프로그래밍 방식으로 (문자열 패턴을 사용하는 대신) &lt;code&gt;MessageFormat&lt;/code&gt; 및 &lt;code&gt;ChoiceFormat&lt;/code&gt; 을 모두 작성하는 경우 자체 반복되는 형식을 생성하지 않도록주의하십시오. 이로 인해 무한 루프가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21eeff494c17be09bda59278016bda4534becea7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Do not use &lt;code&gt;setVisible&lt;/code&gt; directly on a tab component to make it visible, use &lt;code&gt;setSelectedComponent&lt;/code&gt; or &lt;code&gt;setSelectedIndex&lt;/code&gt; methods instead.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 음주 사용하지 않을 &lt;code&gt;setVisible&lt;/code&gt; 사용, 그것을 볼 수 있도록 탭 구성 요소에 직접적으로 &lt;code&gt;setSelectedComponent&lt;/code&gt; 또는 &lt;code&gt;setSelectedIndex&lt;/code&gt; 의 대신 방법.</target>
        </trans-unit>
        <trans-unit id="f7e73e7ab9d0c678ea0db49f31534f48c3a4db80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For &lt;code&gt;JList&lt;/code&gt; to properly display the tooltips of its renderers in this manner, &lt;code&gt;JList&lt;/code&gt; must be a registered component with the &lt;code&gt;ToolTipManager&lt;/code&gt;. This registration is done automatically in the constructor. However, if at a later point &lt;code&gt;JList&lt;/code&gt; is unregistered, by way of a call to &lt;code&gt;setToolTipText(null)&lt;/code&gt;, tips from the renderers will no longer display.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 경우 &lt;code&gt;JList&lt;/code&gt; 제대로 이러한 방식의 렌더러의 툴팁을 표시하는 &lt;code&gt;JList&lt;/code&gt; 의이 에 등록 된 구성 요소해야 &lt;code&gt;ToolTipManager&lt;/code&gt; 를 . 이 등록은 생성자에서 자동으로 수행됩니다. 그러나 나중에 &lt;code&gt;setToolTipText(null)&lt;/code&gt; 호출을 통해 &lt;code&gt;JList&lt;/code&gt; 가 등록 취소되면 렌더러의 팁이 더 이상 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="439840e676b537de427451c4b80bc01e95db35d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In the case of &lt;code&gt;Statement&lt;/code&gt; batching, it is implementation defined as to whether the time-out is applied to individual SQL commands added via the &lt;code&gt;addBatch&lt;/code&gt; method or to the entire batch of SQL commands invoked by the &lt;code&gt;executeBatch&lt;/code&gt; method (consult your driver vendor documentation for details).</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;Statement&lt;/code&gt; 일괄 처리 의 경우 시간 제한이 &lt;code&gt;addBatch&lt;/code&gt; 메서드 를 통해 추가 된 개별 SQL 명령에 적용되는지 아니면 &lt;code&gt;executeBatch&lt;/code&gt; 메서드에 의해 호출 된 SQL 명령의 전체 일괄 처리에 적용되는지에 대해 정의 된 구현입니다 (드라이버 공급 업체 설명서 참조). 자세한 내용은).</target>
        </trans-unit>
        <trans-unit id="755df37c75444c99429b51ef6b83d410033a8ab5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It is recommended that rather than using this method you supply a valid parent.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이 방법을 사용하는 대신 유효한 부모를 제공하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="af6b6eb6a5794fde67ab6a1b17cc271cdecb4839" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; JDBC driver implementations may also apply this limit to &lt;code&gt;ResultSet&lt;/code&gt; methods (consult your driver vendor documentation for details).</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; JDBC 드라이버 구현은이 제한을 &lt;code&gt;ResultSet&lt;/code&gt; 메서드 에도 적용 할 수 있습니다 (자세한 내용은 드라이버 공급 업체 설명서 참조).</target>
        </trans-unit>
        <trans-unit id="e446f7d01353bc2d70db335d321f0a67547a0dbe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Most of the Swing API is &lt;em&gt;not&lt;/em&gt; thread safe. For details, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/concurrency/index.html&quot;&gt;Concurrency in Swing&lt;/a&gt;, a section in &lt;em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/&quot;&gt;The Java Tutorial&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 대부분의 Swing API는 스레드로부터 안전 &lt;em&gt;하지 않습니다&lt;/em&gt; . 자세한 내용 은 &lt;em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/&quot;&gt;The Java Tutorial&lt;/a&gt;&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/concurrency/index.html&quot;&gt;Swing의 동시성을&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70fb9b987b643d33f80a791d5ac672fec7b9b3d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Most of the Swing API is &lt;em&gt;not&lt;/em&gt; thread safe. For details, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/concurrency/index.html&quot;&gt;Concurrency in Swing&lt;/a&gt;, a section in &lt;em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/&quot;&gt;The Java Tutorial&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 대부분의 Swing API는 스레드로부터 안전 &lt;em&gt;하지 않습니다&lt;/em&gt; . 자세한 내용 은 &lt;em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/&quot;&gt;The Java Tutorial&lt;/a&gt;&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/concurrency/index.html&quot;&gt;Swing의 동시성을&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c85aa4d390a25bf941817b3419d579e2a2507507" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Multiple calls to &lt;code&gt;closeOnCompletion&lt;/code&gt; do not toggle the effect on this &lt;code&gt;Statement&lt;/code&gt;. However, a call to &lt;code&gt;closeOnCompletion&lt;/code&gt; does effect both the subsequent execution of statements, and statements that currently have open, dependent, result sets.</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;closeOnCompletion&lt;/code&gt; 에 대한 여러 호출 은이 &lt;code&gt;Statement&lt;/code&gt; 에 대한 효과를 토글하지 않습니다 . 그러나 &lt;code&gt;closeOnCompletion&lt;/code&gt; 에 대한 호출 은 명령문의 후속 실행과 현재 열린 종속 결과 세트가있는 명령문 모두에 영향 을 미칩니다 .</target>
        </trans-unit>
        <trans-unit id="4b7a393d1b053ca942afef16584dda9d1fb802f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; PropertyResourceBundle can be constructed either from an InputStream or a Reader, which represents a property file. Constructing a PropertyResourceBundle instance from an InputStream requires that the input stream be encoded in ISO-8859-1. In that case, characters that cannot be represented in ISO-8859-1 encoding must be represented by Unicode Escapes as defined in section 3.3 of</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; PropertyResourceBundle은 InputStream 또는 속성 파일을 나타내는 Reader에서 구성 할 수 있습니다. InputStream에서 PropertyResourceBundle 인스턴스를 생성하려면 입력 스트림을 ISO-8859-1로 인코딩해야합니다. 이 경우 ISO-8859-1 인코딩으로 표현할 수없는 문자는 3.3 절에서 정의한대로 유니 코드 이스케이프로 표현해야합니다.</target>
        </trans-unit>
        <trans-unit id="b1d2c46fc66b2a1f32e0474e66f6b6e5e3ea0d2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Provider implementations that accept initialization parameters via the &lt;code&gt;getInstance()&lt;/code&gt; methods are strongly encouraged to use a &lt;a href=&quot;../../../java.base/java/util/properties&quot;&gt;Properties&lt;/a&gt; object as the representation for String name-value pair based parameters whenever possible. This allows applications to more easily interoperate with multiple providers than if each provider used different provider specific class as parameters.</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;getInstance()&lt;/code&gt; 메서드 를 통해 초기화 매개 변수를 허용하는 공급자 구현은 가능할 때마다 &lt;a href=&quot;../../../java.base/java/util/properties&quot;&gt;속성&lt;/a&gt; 개체를 문자열 이름-값 쌍 기반 매개 변수에 대한 표현으로 사용하는 것이 좋습니다 . 따라서 각 공급자가 다른 공급자 별 클래스를 매개 변수로 사용하는 경우보다 응용 프로그램이 여러 공급자와 더 쉽게 상호 운용 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9bef690325b528e6484f6e20a195f0f42cc1bbf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Some platforms may not support showing a message.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 일부 플랫폼은 메시지 표시를 지원하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5acf5421117397e18ce387fa7d8276c6d7d3d692" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Some platforms may not support showing the user-specified popup menu component when the user right-clicks the tray icon. In this situation, either no menu will be displayed or, on some systems, a native version of the menu may be displayed.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 일부 플랫폼은 사용자가 트레이 아이콘을 마우스 오른쪽 버튼으로 클릭 할 때 사용자 지정 팝업 메뉴 구성 요소 표시를 지원하지 않을 수 있습니다. 이 상황에서는 메뉴가 표시되지 않거나 일부 시스템에서는 기본 버전의 메뉴가 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58609d53bb8442026acc50a8b3435dc139ee01f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Some platforms may not support showing the user-specified title in a file dialog. In this situation, either no title will be displayed in the file dialog's title bar or, on some systems, the file dialog's title bar will not be displayed.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 일부 플랫폼은 파일 대화 상자에서 사용자 지정 제목 표시를 지원하지 않을 수 있습니다. 이 경우 파일 대화 상자의 제목 표시 줄에 제목이 표시되지 않거나 일부 시스템에서 파일 대화 상자의 제목 표시 줄이 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="002dc072a869c6295defe1c5794114eb573c89f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Support for the &lt;code&gt;isLast&lt;/code&gt; method is optional for &lt;code&gt;ResultSet&lt;/code&gt;s with a result set type of &lt;code&gt;TYPE_FORWARD_ONLY&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 결과 세트 유형이 &lt;code&gt;TYPE_FORWARD_ONLY&lt;/code&gt; 인 &lt;code&gt;ResultSet&lt;/code&gt; 에 대한 &lt;code&gt;isLast&lt;/code&gt; 메소드 지원 은 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="5d65342e23f63961a59cbcad6da2059f16352a31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Support for the &lt;code&gt;rowDeleted&lt;/code&gt; method is optional with a result set concurrency of &lt;code&gt;CONCUR_READ_ONLY&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;rowDeleted&lt;/code&gt; 메서드에 대한 지원 은 &lt;code&gt;CONCUR_READ_ONLY&lt;/code&gt; 의 결과 집합 동시성을 사용하여 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="e93230bfc7e6d47468f59c63a3547518e986136a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Support for the &lt;code&gt;rowInserted&lt;/code&gt; method is optional with a result set concurrency of &lt;code&gt;CONCUR_READ_ONLY&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;rowInserted&lt;/code&gt; 메서드에 대한 지원 은 &lt;code&gt;CONCUR_READ_ONLY&lt;/code&gt; 의 결과 집합 동시성으로 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="ca9911b050f7d192fc0da76bf119e0cff103ff70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Support for the &lt;code&gt;rowUpdated&lt;/code&gt; method is optional with a result set concurrency of &lt;code&gt;CONCUR_READ_ONLY&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;rowUpdated&lt;/code&gt; 메서드에 대한 지원 은 &lt;code&gt;CONCUR_READ_ONLY&lt;/code&gt; 의 결과 집합 동시성으로 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="046a84b47c5e65580d4589b787b8c4d729355a75" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The ButtonGroup object is a logical grouping -- not a physical grouping. To create a button panel, you should still create a &lt;a href=&quot;jpanel&quot;&gt;&lt;code&gt;JPanel&lt;/code&gt;&lt;/a&gt; or similar container-object and add a &lt;a href=&quot;border/border&quot;&gt;&lt;code&gt;Border&lt;/code&gt;&lt;/a&gt; to it to set it off from surrounding components.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; ButtonGroup 개체는 물리적 그룹이 아니라 논리적 그룹입니다. 버튼 패널을 만들려면 여전히 &lt;a href=&quot;jpanel&quot;&gt; &lt;code&gt;JPanel&lt;/code&gt; &lt;/a&gt; 또는 유사한 컨테이너 객체를 만들고 &lt;a href=&quot;border/border&quot;&gt; &lt;code&gt;Border&lt;/code&gt; &lt;/a&gt; 를 추가하여 주변 구성 요소에서 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="16e574d0f71243b998c371619c9fd9d0ae75ef81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; There are certain possible ambiguities in interpretation of certain singular times, which are resolved in the following ways:</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 특정 단수 시간의 해석에는 다음과 같은 방법으로 해결할 수있는 모호성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d02711c13075d51ff9aaac4fb98d23e8513d6542" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; There is no validation of &lt;code&gt;updateCounts&lt;/code&gt; for overflow and because of this it is recommended that you use the constructor &lt;code&gt;BatchUpdateException(String reason, String SQLState,
 int vendorCode, long []updateCounts,Throwable cause) &lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 오버플로에 대한 &lt;code&gt;updateCounts&lt;/code&gt; 의 유효성을 검사하지 않으므로 &lt;code&gt;BatchUpdateException(String reason, String SQLState, int vendorCode, long []updateCounts,Throwable cause) &lt;/code&gt; 생성자를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="b0be623a35a3811dd3759d75a24e5f4e8df41732" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This class is designed to work with the now-deprecated SAX1 &lt;a href=&quot;../parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt; class. SAX2 applications should use &lt;a href=&quot;xmlreaderfactory&quot;&gt;&lt;code&gt;XMLReaderFactory&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이 클래스는 현재 사용되지 않는 SAX1 &lt;a href=&quot;../parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt; 클래스 와 함께 작동하도록 설계되었습니다 . SAX2 애플리케이션은 대신 &lt;a href=&quot;xmlreaderfactory&quot;&gt; &lt;code&gt;XMLReaderFactory&lt;/code&gt; &lt;/a&gt; 를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="7d3634f0a3414c4cb13c355b0c10eda25d6c74f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This method should not be used in the implementation of image formats that use standard UTF-8, because the modified UTF-8 used here is incompatible with standard UTF-8.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 여기에 사용 된 수정 된 UTF-8은 표준 UTF-8과 호환되지 않으므로이 방법은 표준 UTF-8을 사용하는 이미지 형식 구현에 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="36e2ec84d94f332499628f41813c99733d4b90c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Unlike many layout managers, &lt;code&gt;SpringLayout&lt;/code&gt; doesn't automatically set the location of the components it manages. If you hand-code a GUI that uses &lt;code&gt;SpringLayout&lt;/code&gt;, remember to initialize component locations by constraining the west/east and north/south locations.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 많은 레이아웃 관리자와 달리 &lt;code&gt;SpringLayout&lt;/code&gt; 은 관리하는 구성 요소의 위치를 ​​자동으로 설정하지 않습니다. &lt;code&gt;SpringLayout&lt;/code&gt; 을 사용하는 GUI를 직접 코딩하는 경우 서쪽 / 동쪽 및 북쪽 / 남쪽 위치를 제한하여 구성 요소 위치를 초기화해야합니다.</target>
        </trans-unit>
        <trans-unit id="e673559cf05e88159974a36791e942c7b693e24a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Using the &lt;code&gt;Activatable&lt;/code&gt; constructors that both register and export an activatable remote object is strongly discouraged because the actions of registering and exporting the remote object are</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 은 Using &lt;code&gt;Activatable&lt;/code&gt; 등록하고 원격 객체 수출의 행동이기 때문에 생성자을 등록하고 모두가 기동 가능한 원격 객체를 내보낼 것을 강력히 권장하지 않습니다</target>
        </trans-unit>
        <trans-unit id="c6b4c0da78b12b7fea16db8ad8708f4dc6723c5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Using this method (as well as the &lt;code&gt;Activatable&lt;/code&gt; constructors that both register and export an activatable remote object) is strongly discouraged because the actions of registering and exporting the remote object are</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이 메서드 ( 활성화 가능한 원격 개체를 등록하고 내보내는 &lt;code&gt;Activatable&lt;/code&gt; 생성자 포함)를 사용하는 것은 원격 개체를 등록하고 내보내는 작업이 다음과 같기 때문에 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="3c81a56d3b5aaeb5a7eec28e178b701de64151ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When &lt;code&gt;getArray&lt;/code&gt; is used to materialize a base type that maps to a primitive data type, then it is implementation-defined whether the array returned is an array of that primitive data type or an array of &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 때 &lt;code&gt;getArray&lt;/code&gt; 기본 데이터 형식으로 매핑하는 기본 유형을 실현하는데 사용되며, 다음 리턴 어레이가 그 기본 데이터 형식 또는 배열의 배열인지 구현 정의이다 &lt;code&gt;Object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9d73f97662bf6d8a055abdd185cc247dc909536" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When the &lt;code&gt;MouseEvent&lt;/code&gt; is dispatched to its registered listeners its &lt;code&gt;component&lt;/code&gt; property will be set to &lt;code&gt;null&lt;/code&gt;. (See &lt;a href=&quot;event/componentevent#getComponent()&quot;&gt;&lt;code&gt;ComponentEvent.getComponent()&lt;/code&gt;&lt;/a&gt;) The &lt;code&gt;source&lt;/code&gt; property will be set to this &lt;code&gt;TrayIcon&lt;/code&gt;. (See &lt;a href=&quot;../../../java.base/java/util/eventobject#getSource()&quot;&gt;&lt;code&gt;EventObject.getSource()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;MouseEvent&lt;/code&gt; 가 등록 된 리스너로 전달 되면 해당 &lt;code&gt;component&lt;/code&gt; 속성이 &lt;code&gt;null&lt;/code&gt; 로 설정됩니다 . ( &lt;a href=&quot;event/componentevent#getComponent()&quot;&gt; &lt;code&gt;ComponentEvent.getComponent()&lt;/code&gt; &lt;/a&gt; 참조 ) &lt;code&gt;source&lt;/code&gt; 속성은이 &lt;code&gt;TrayIcon&lt;/code&gt; 으로 설정됩니다 . ( &lt;a href=&quot;../../../java.base/java/util/eventobject#getSource()&quot;&gt; &lt;code&gt;EventObject.getSource()&lt;/code&gt; &lt;/a&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="2a3685246333dc01ce21c04b3c4e578f07115f3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; despite its name, this interface does &lt;em&gt;not&lt;/em&gt; extend the standard Java &lt;a href=&quot;../../../../java.base/java/io/reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; interface, because reading XML is a fundamentally different activity than reading character data.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이름에도 불구하고이 인터페이스는 표준 Java &lt;a href=&quot;../../../../java.base/java/io/reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt; 인터페이스를 확장 하지 &lt;em&gt;않습니다.&lt;/em&gt; XML 읽기는 문자 데이터 읽기와 근본적으로 다른 활동이기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="b35950c2b21bdc553b08d69848a76be46961ab32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; for distinguished names, specify the byte array form instead of the String form. See the note in &lt;a href=&quot;#addPathToName(int,java.lang.String)&quot;&gt;&lt;code&gt;addPathToName(int, String)&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 고유 이름의 경우 문자열 형식 대신 바이트 배열 형식을 지정하십시오. 자세한 내용은 &lt;a href=&quot;#addPathToName(int,java.lang.String)&quot;&gt; &lt;code&gt;addPathToName(int, String)&lt;/code&gt; &lt;/a&gt; 의 참고 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9e354841d3f83a0ea4619ca071b86990d4c3b7dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; for distinguished names, specify the byte array form instead of the String form. See the note in &lt;a href=&quot;#addSubjectAlternativeName(int,java.lang.String)&quot;&gt;&lt;code&gt;addSubjectAlternativeName(int, String)&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 고유 이름의 경우 문자열 형식 대신 바이트 배열 형식을 지정하십시오. 자세한 내용은 &lt;a href=&quot;#addSubjectAlternativeName(int,java.lang.String)&quot;&gt; &lt;code&gt;addSubjectAlternativeName(int, String)&lt;/code&gt; &lt;/a&gt; 의 참고 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="16b6c8f33d9696a75745397000696eea46f6bba9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; for distinguished names, specify the byte array form instead of the String form. See the note in &lt;a href=&quot;x509certselector#addPathToName-int-java.lang.String-&quot;&gt;&lt;code&gt;addPathToName(int, String)&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 고유 이름의 경우 문자열 형식 대신 바이트 배열 형식을 지정하십시오. 자세한 내용은 &lt;a href=&quot;x509certselector#addPathToName-int-java.lang.String-&quot;&gt; &lt;code&gt;addPathToName(int, String)&lt;/code&gt; &lt;/a&gt; 의 참고 사항 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9d6fb575bcdce29e7a5392ade31041e7987af7e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; for distinguished names, specify the byte array form instead of the String form. See the note in &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-java.lang.String-&quot;&gt;&lt;code&gt;addSubjectAlternativeName(int, String)&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 고유 이름의 경우 문자열 형식 대신 바이트 배열 형식을 지정하십시오. 자세한 내용은 &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-java.lang.String-&quot;&gt; &lt;code&gt;addSubjectAlternativeName(int, String)&lt;/code&gt; &lt;/a&gt; 의 참고 사항 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bbe676e7d80e99672baf4030053ebdd7c2b1584c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; for distinguished names, use &lt;a href=&quot;#addPathToName(int,byte%5B%5D)&quot;&gt;addPathToName(int, byte[])&lt;/a&gt; instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 고유 이름의 경우 대신 &lt;a href=&quot;#addPathToName(int,byte%5B%5D)&quot;&gt;addPathToName (int, byte [])를&lt;/a&gt; 사용하십시오. 이 방법은 일부 고유 이름의 RFC 2253 문자열 형식의 인코딩 정보 손실로 인해 일부 인증서를 일치시키지 못할 수 있으므로 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="d423467db6e448354ae76c16ac90fd943e32458c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; for distinguished names, use &lt;a href=&quot;#addSubjectAlternativeName(int,byte%5B%5D)&quot;&gt;addSubjectAlternativeName(int, byte[])&lt;/a&gt; instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 고유 이름의 경우 대신 &lt;a href=&quot;#addSubjectAlternativeName(int,byte%5B%5D)&quot;&gt;addSubjectAlternativeName (int, byte [])을&lt;/a&gt; 사용하십시오. 이 방법은 일부 고유 이름의 RFC 2253 문자열 형식의 인코딩 정보 손실로 인해 일부 인증서를 일치시키지 못할 수 있으므로 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="23afa8791834917ccddb5255aa9b5b964536f3f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; for distinguished names, use &lt;a href=&quot;x509certselector#addPathToName-int-byte:A-&quot;&gt;addPathToName(int, byte[])&lt;/a&gt; instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 고유 이름의 경우 &lt;a href=&quot;x509certselector#addPathToName-int-byte:A-&quot;&gt;addPathToName (int, byte [])을&lt;/a&gt; 대신 사용하십시오. 일부 고유 이름의 RFC 2253 문자열 형식에서 인코딩 정보가 손실되므로 일부 인증서와 일치하지 못할 수 있으므로이 방법에 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="db3657b679774d0a5a8903692f2c89a5932f86a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; for distinguished names, use &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-byte:A-&quot;&gt;addSubjectAlternativeName(int, byte[])&lt;/a&gt; instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 고유 이름의 경우 &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-byte:A-&quot;&gt;addSubjectAlternativeName (int, byte [])을&lt;/a&gt; 대신 사용하십시오. 일부 고유 이름의 RFC 2253 문자열 형식으로 인코딩 정보가 손실되므로 일부 인증서와 일치하지 않을 수 있으므로이 방법을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="3bd1dc5cbd6151af692d40f444bdd4bbf5ba7e53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; if there is a default prefix, it will not be returned in this enumeration; check for the default prefix using the &lt;a href=&quot;#getURI(java.lang.String)&quot;&gt;&lt;code&gt;getURI&lt;/code&gt;&lt;/a&gt; with an argument of &quot;&quot;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 기본 접두사가있는 경우이 열거에 반환되지 않습니다. &quot;&quot;인수와 함께 &lt;a href=&quot;#getURI(java.lang.String)&quot;&gt; &lt;code&gt;getURI&lt;/code&gt; &lt;/a&gt; 를 사용하여 기본 접 두부를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="d75b02637d3d67878ebcff9d7900df2fc2652a37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; sometimes there is no way to detect whether the &lt;code&gt;Component&lt;/code&gt; is actually visible to the user. This can happen when:</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 때로는 &lt;code&gt;Component&lt;/code&gt; 가 실제로 사용자에게 표시 되는지 여부를 감지 할 방법이 없습니다 . 다음과 같은 경우에 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa45aa16bea5c07f810115fd11aa009a9112fac8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; the empty (default) prefix is &lt;em&gt;never&lt;/em&gt; included in this enumeration; to check for the presence of a default Namespace, use the &lt;a href=&quot;#getURI(java.lang.String)&quot;&gt;&lt;code&gt;getURI&lt;/code&gt;&lt;/a&gt; method with an argument of &quot;&quot;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 빈 (기본값) 접두사는 이 열거에 포함 &lt;em&gt;되지&lt;/em&gt; 않습니다. 기본 네임 스페이스가 있는지 확인하려면 &quot;&quot;인수와 함께 &lt;a href=&quot;#getURI(java.lang.String)&quot;&gt; &lt;code&gt;getURI&lt;/code&gt; &lt;/a&gt; 메서드를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="b76999b62d1828fe7f9c2ffaa320379bf5aa5849" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; this will never return the empty (default) prefix; to check for a default prefix, use the &lt;a href=&quot;#getURI(java.lang.String)&quot;&gt;&lt;code&gt;getURI&lt;/code&gt;&lt;/a&gt; method with an argument of &quot;&quot;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이것은 빈 (기본) 접두사를 반환하지 않습니다. 기본 접두사를 확인하려면 &quot;&quot;인수와 함께 &lt;a href=&quot;#getURI(java.lang.String)&quot;&gt; &lt;code&gt;getURI&lt;/code&gt; &lt;/a&gt; 메서드를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="20cc83f0cb7966d1eeb741488e9994b13b7721a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; use &lt;a href=&quot;#setIssuers(java.util.Collection)&quot;&gt;setIssuers(Collection)&lt;/a&gt; instead or only specify the byte array form of distinguished names when using this method.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 대신 &lt;a href=&quot;#setIssuers(java.util.Collection)&quot;&gt;setIssuers (Collection)&lt;/a&gt; 를 사용 하거나이 메서드를 사용할 때 고유 이름의 바이트 배열 형식 만 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="b5f029920728b826d0898587539f2a924f214fff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; use &lt;a href=&quot;#setIssuers(java.util.Collection)&quot;&gt;setIssuers(Collection)&lt;/a&gt; instead or only specify the byte array form of distinguished names when using this method. See &lt;a href=&quot;#addIssuerName(java.lang.String)&quot;&gt;&lt;code&gt;addIssuerName(String)&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 대신 &lt;a href=&quot;#setIssuers(java.util.Collection)&quot;&gt;setIssuers (Collection)&lt;/a&gt; 를 사용 하거나이 메서드를 사용할 때 고유 이름의 바이트 배열 형식 만 지정하십시오. 자세한 내용은 &lt;a href=&quot;#addIssuerName(java.lang.String)&quot;&gt; &lt;code&gt;addIssuerName(String)&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4674f9fe857ac066f0bf22d34b223b40ea904e6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; use &lt;a href=&quot;x509crlselector#setIssuers-java.util.Collection-&quot;&gt;setIssuers(Collection)&lt;/a&gt; instead or only specify the byte array form of distinguished names when using this method. See &lt;a href=&quot;x509crlselector#addIssuerName-java.lang.String-&quot;&gt;&lt;code&gt;addIssuerName(String)&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt;&lt;a href=&quot;x509crlselector#setIssuers-java.util.Collection-&quot;&gt;setIssuers (Collection)를&lt;/a&gt; 대신 사용 하거나이 메소드를 사용할 때 식별 이름의 바이트 배열 양식 만 지정하십시오. 자세한 정보는 &lt;a href=&quot;x509crlselector#addIssuerName-java.lang.String-&quot;&gt; &lt;code&gt;addIssuerName(String)&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="13c580469b184e3d362ad5398af8c82f8a4c9261" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;ChoiceFormat&lt;/code&gt; differs from the other &lt;code&gt;Format&lt;/code&gt; classes in that you create a &lt;code&gt;ChoiceFormat&lt;/code&gt; object with a constructor (not with a &lt;code&gt;getInstance&lt;/code&gt; style factory method). The factory methods aren't necessary because &lt;code&gt;ChoiceFormat&lt;/code&gt; doesn't require any complex setup for a given locale. In fact, &lt;code&gt;ChoiceFormat&lt;/code&gt; doesn't implement any locale specific behavior.</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;ChoiceFormat&lt;/code&gt; 은 &lt;code&gt;getInstance&lt;/code&gt; 스타일 팩토리 메소드가 아닌 생성자 를 사용하여 &lt;code&gt;ChoiceFormat&lt;/code&gt; 객체 를 작성한다는 점에서 다른 &lt;code&gt;Format&lt;/code&gt; 클래스 와 다릅니다 . &lt;code&gt;ChoiceFormat&lt;/code&gt; 은 지정된 로케일에 대해 복잡한 설정이 필요하지 않으므로 팩토리 메소드는 필요 하지 않습니다. 실제로 &lt;code&gt;ChoiceFormat&lt;/code&gt; 은 로캘 별 동작을 구현하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d2a308cb120296e578c3ef51d826ba801ab6b63e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;CollationKey&lt;/code&gt;s from different &lt;code&gt;Collator&lt;/code&gt;s can not be compared. See the class description for &lt;a href=&quot;collationkey&quot;&gt;&lt;code&gt;CollationKey&lt;/code&gt;&lt;/a&gt; for an example using &lt;code&gt;CollationKey&lt;/code&gt;s.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 다른 &lt;code&gt;Collator&lt;/code&gt; 의 &lt;code&gt;CollationKey&lt;/code&gt; 는 비교할 수 없습니다. 의 클래스의 설명을 참조하십시오 &lt;a href=&quot;collationkey&quot;&gt; &lt;code&gt;CollationKey&lt;/code&gt; &lt;/a&gt; 사용하는 예는 &lt;code&gt;CollationKey&lt;/code&gt; 를 들.</target>
        </trans-unit>
        <trans-unit id="ef2f7f2dccb6f08d9a470dc2ade5b7cbfa930fcb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;MessageFormat&lt;/code&gt; differs from the other &lt;code&gt;Format&lt;/code&gt; classes in that you create a &lt;code&gt;MessageFormat&lt;/code&gt; object with one of its constructors (not with a &lt;code&gt;getInstance&lt;/code&gt; style factory method). The factory methods aren't necessary because &lt;code&gt;MessageFormat&lt;/code&gt; itself doesn't implement locale specific behavior. Any locale specific behavior is defined by the pattern that you provide as well as the subformats used for inserted arguments.</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;MessageFormat&lt;/code&gt; 은 &lt;code&gt;getInstance&lt;/code&gt; 스타일 팩토리 메소드가 아닌 생성자 중 하나 를 사용하여 &lt;code&gt;MessageFormat&lt;/code&gt; 객체 를 작성한다는 점에서 다른 &lt;code&gt;Format&lt;/code&gt; 클래스 와 다릅니다 . &lt;code&gt;MessageFormat&lt;/code&gt; 자체는 로케일 특정 동작을 구현하지 않기 때문에 팩토리 메소드는 필요 하지 않습니다. 로케일 특정 동작은 사용자가 제공 한 패턴과 삽입 된 인수에 사용되는 하위 형식으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="cee01bec41ba890ef24d3c3949abc450b686d8c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;Support for the &lt;code&gt;getRow&lt;/code&gt; method is optional for &lt;code&gt;ResultSet&lt;/code&gt;s with a result set type of &lt;code&gt;TYPE_FORWARD_ONLY&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;getRow&lt;/code&gt; 메소드에 대한 지원 은 결과 세트 유형이 &lt;code&gt;TYPE_FORWARD_ONLY&lt;/code&gt; 인 &lt;code&gt;ResultSet&lt;/code&gt; 에 대해 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="7fc1bfab6dbd91b8ea4361ca54a598f2954ec8d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;Support for the &lt;code&gt;isAfterLast&lt;/code&gt; method is optional for &lt;code&gt;ResultSet&lt;/code&gt;s with a result set type of &lt;code&gt;TYPE_FORWARD_ONLY&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 결과 세트 유형이 &lt;code&gt;TYPE_FORWARD_ONLY&lt;/code&gt; 인 &lt;code&gt;ResultSet&lt;/code&gt; 에 대한 &lt;code&gt;isAfterLast&lt;/code&gt; 메소드 지원 은 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="c6d1faf8e7707f510aab0be7e083089471bf7735" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;Support for the &lt;code&gt;isBeforeFirst&lt;/code&gt; method is optional for &lt;code&gt;ResultSet&lt;/code&gt;s with a result set type of &lt;code&gt;TYPE_FORWARD_ONLY&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 결과 세트 유형이 &lt;code&gt;TYPE_FORWARD_ONLY&lt;/code&gt; 인 &lt;code&gt;ResultSet&lt;/code&gt; 에 대한 &lt;code&gt;isBeforeFirst&lt;/code&gt; 메소드 지원 은 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="8fb8852f9d3271eb918f03035b7e7528cb151b6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;Support for the &lt;code&gt;isFirst&lt;/code&gt; method is optional for &lt;code&gt;ResultSet&lt;/code&gt;s with a result set type of &lt;code&gt;TYPE_FORWARD_ONLY&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 결과 세트 유형이 &lt;code&gt;TYPE_FORWARD_ONLY&lt;/code&gt; 인 &lt;code&gt;ResultSet&lt;/code&gt; 에 대한 &lt;code&gt;isFirst&lt;/code&gt; 메소드 지원 은 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="bb6789e02ae2c782e691d97450b96c45caefec30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;This method cannot be called on a &lt;code&gt;PreparedStatement&lt;/code&gt; or &lt;code&gt;CallableStatement&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이 메서드는 &lt;code&gt;PreparedStatement&lt;/code&gt; 또는 &lt;code&gt;CallableStatement&lt;/code&gt; 에서 호출 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="fc106fafbfa47fa5aade2da8b9d7a4f5ed0863dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: several methods return submaps with restricted key ranges. Such ranges are &lt;em&gt;half-open&lt;/em&gt;, that is, they include their low endpoint but not their high endpoint (where applicable). If you need a &lt;em&gt;closed range&lt;/em&gt; (which includes both endpoints), and the key type allows for calculation of the successor of a given key, merely request the subrange from &lt;code&gt;lowEndpoint&lt;/code&gt; to &lt;code&gt;successor(highEndpoint)&lt;/code&gt;. For example, suppose that &lt;code&gt;m&lt;/code&gt; is a map whose keys are strings. The following idiom obtains a view containing all of the key-value mappings in &lt;code&gt;m&lt;/code&gt; whose keys are between &lt;code&gt;low&lt;/code&gt; and &lt;code&gt;high&lt;/code&gt;, inclusive:</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 몇몇 메소드는 키 범위가 제한된 서브맵을 반환합니다. 이러한 범위는&lt;em&gt; 반 개방형입니다&lt;/em&gt; . 즉, 낮은 종점을 포함하지만 높은 종말점을 포함하지 않습니다 (해당되는 경우). &lt;em&gt;닫힌 범위&lt;/em&gt; (두 끝점 모두 포함) 가 필요 하고 키 유형이 주어진 키의 후속 작업을 계산할 수있는 경우 &lt;code&gt;lowEndpoint&lt;/code&gt; 에서 &lt;code&gt;successor(highEndpoint)&lt;/code&gt; 까지 하위 범위를 요청하십시오 . 예를 들어, &lt;code&gt;m&lt;/code&gt; 이 키가 문자열 인 맵 이라고 가정하십시오 . 다음 관용구의 키 값의 매핑을 모두 포함하는 뷰 취득 &lt;code&gt;m&lt;/code&gt; 키 사이에 &lt;code&gt;low&lt;/code&gt; 그리고 &lt;code&gt;high&lt;/code&gt; , 클루 시브 :</target>
        </trans-unit>
        <trans-unit id="ce505af6fa25cccfffd596dbc77b590739e05843" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Overloaded method resolution&lt;/strong&gt; is performed automatically for property setters, methods, and constructors. Additionally, manual overloaded method selection is supported by having a call site specify a name for a method that contains an explicit signature, e.g. &lt;code&gt;StandardOperation.GET.withNamespace(METHOD).named(&quot;parseInt(String,int)&quot;)&lt;/code&gt; You can use non-qualified class names in such signatures regardless of those classes' packages, they will match any class with the same non-qualified name. You only have to use a fully qualified class name in case non-qualified class names would cause selection ambiguity (that is extremely rare). Overloaded resolution for constructors is not automatic as there is no logical place to attach that functionality to but if a language wishes to provide this functionality, it can use &lt;a href=&quot;#getConstructorMethod(java.lang.Class,java.lang.String)&quot;&gt;&lt;code&gt;getConstructorMethod(Class, String)&lt;/code&gt;&lt;/a&gt; as a useful building block for it.</source>
          <target state="translated">&lt;strong&gt;오버로드 된 메서드 확인&lt;/strong&gt; 은 속성 설정자, 메서드 및 생성자에 대해 자동으로 수행됩니다. 또한 호출 사이트에서 명시 적 서명이 포함 된 메서드의 이름을 지정하도록함으로써 수동 오버로드 된 메서드 선택이 지원됩니다 &lt;code&gt;StandardOperation.GET.withNamespace(METHOD).named(&quot;parseInt(String,int)&quot;)&lt;/code&gt; 예 : StandardOperation.GET.withNamespace (METHOD) .named ( &quot;parseInt (String, int)&quot;)).해당 클래스의 패키지에 관계없이 이러한 서명에서 정규화되지 않은 클래스 이름을 사용할 수 있으며, 정규화되지 않은 동일한 이름을 가진 모든 클래스와 일치합니다. 정규화되지 않은 클래스 이름으로 인해 선택이 모호 해지는 경우에만 정규화 된 클래스 이름을 사용해야합니다 (극히 드뭅니다). 생성자에 대한 오버로드 된 해결은 해당 기능을 연결할 논리적 위치가 없기 때문에 자동이 아니지만 언어가이 기능을 제공하려는 경우 &lt;a href=&quot;#getConstructorMethod(java.lang.Class,java.lang.String)&quot;&gt; &lt;code&gt;getConstructorMethod(Class, String)&lt;/code&gt; &lt;/a&gt; 를 유용한 빌딩 블록으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6a71817e55a35ab1983902bd2c10c8ca368f201" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Relation&lt;/strong&gt;: The relations are the following:</source>
          <target state="translated">&lt;strong&gt;관계&lt;/strong&gt; : 관계는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f3495fc795efc33287681c552eb1c5f73004a324" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reset&lt;/strong&gt;: There is a single reset which is used primarily for contractions and expansions, but which can also be used to add a modification at the end of a set of rules.</source>
          <target state="translated">&lt;strong&gt;재설정&lt;/strong&gt; : 주로 수축 및 확장에 사용되는 단일 재설정이 있지만 일련의 규칙 끝에 수정을 추가하는 데 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="55d6a7c94e68da3f247a7a595eba405da783071d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Roll rule&lt;/strong&gt;. Larger fields are unchanged after the call. A larger field represents a larger unit of time. &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; is a larger field than &lt;code&gt;HOUR&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;롤 규칙&lt;/strong&gt; . 통화 후 더 큰 필드는 변경되지 않습니다. 더 큰 필드는 더 큰 시간 단위를 나타냅니다. &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; 는 &lt;code&gt;HOUR&lt;/code&gt; 보다 큰 필드 입니다.</target>
        </trans-unit>
        <trans-unit id="f51b3bec87550c44f209799d8a4e63a90a5bef84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Support for additional schema langauges.&lt;/strong&gt; The JAXP parser implementations support only a subset of the available XML schema languages. The Validation API provides a standard mechanism through which applications may take of advantage of specialization validation libraries which support additional schema languages.</source>
          <target state="translated">&lt;strong&gt;추가 스키마 언어 지원. &lt;/strong&gt;JAXP 파서 구현은 사용 가능한 XML 스키마 언어의 하위 집합 만 지원합니다. 유효성 검사 API는 애플리케이션이 추가 스키마 언어를 지원하는 특수화 유효성 검사 라이브러리를 활용할 수있는 표준 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="fa3d006b4f3ae73a29744a64719d1c8b5ece5ac8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Text-Argument&lt;/strong&gt;: A text-argument is any sequence of characters, excluding special characters (that is, common whitespace characters [0009-000D, 0020] and rule syntax characters [0021-002F, 003A-0040, 005B-0060, 007B-007E]). If those characters are desired, you can put them in single quotes (e.g. ampersand =&amp;gt; '&amp;amp;'). Note that unquoted white space characters are ignored; e.g. &lt;code&gt;b c&lt;/code&gt; is treated as &lt;code&gt;bc&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;텍스트 인수&lt;/strong&gt; : 텍스트 인수는 특수 문자 (공통 공백 문자 [0009-000D, 0020] 및 규칙 구문 문자 [0021-002F, 003A-0040, 005B-0060, 007B-)를 제외한 모든 문자 시퀀스입니다. 007E]). 해당 문자가 필요한 경우 작은 따옴표로 묶을 수 있습니다 (예 : 앰퍼샌드 =&amp;gt; '&amp;amp;'). 따옴표없는 공백 문자는 무시됩니다. 예 &lt;code&gt;b c&lt;/code&gt; 로 처리됩니다 &lt;code&gt;bc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f507cc8d016be5aa51f98eddbf964bd1d56a6b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The &lt;code&gt;Iterator&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; modifiable. e.g. the &lt;code&gt;remove()&lt;/code&gt; method will throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;Iterator&lt;/code&gt; 것입니다 &lt;em&gt;없습니다&lt;/em&gt; 수정. 예를 들어 &lt;code&gt;remove()&lt;/code&gt; 메서드는 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f68a01ea53f26343b018f86d7321088a65ddf39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The behavior for handling missing members&lt;/strong&gt; can be customized by passing a &lt;a href=&quot;missingmemberhandlerfactory&quot;&gt;&lt;code&gt;MissingMemberHandlerFactory&lt;/code&gt;&lt;/a&gt; to the &lt;a href=&quot;#%3Cinit%3E(jdk.dynalink.beans.MissingMemberHandlerFactory)&quot;&gt;&lt;code&gt;constructor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;누락 된 멤버를 처리하는 동작&lt;/strong&gt; 은 &lt;a href=&quot;missingmemberhandlerfactory&quot;&gt; &lt;code&gt;MissingMemberHandlerFactory&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;#%3Cinit%3E(jdk.dynalink.beans.MissingMemberHandlerFactory)&quot;&gt; &lt;code&gt;constructor&lt;/code&gt; &lt;/a&gt; 에 전달하여 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ff9f917a8c021a47e64bf7bb0c7dc3836e7d8261" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;There is an apparent contradiction between the documentation for this method and the documentation for &lt;a href=&quot;contenthandler#endDocument()&quot;&gt;&lt;code&gt;ContentHandler.endDocument()&lt;/code&gt;&lt;/a&gt;. Until this ambiguity is resolved in a future major release, clients should make no assumptions about whether endDocument() will or will not be invoked when the parser has reported a fatalError() or thrown an exception.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;이 메소드에 대한 문서와 &lt;a href=&quot;contenthandler#endDocument()&quot;&gt; &lt;code&gt;ContentHandler.endDocument()&lt;/code&gt; &lt;/a&gt; 문서간에 명백한 모순이 있습니다. 이 모호성이 향후 주요 릴리스에서 해결 될 때까지 클라이언트는 파서가 fatalError ()를보고했거나 예외를 throw했을 때 endDocument ()가 호출 될지 여부에 대해 가정하지 않아야합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60f11df7365d106a323e3c0876d49f0d44b9ab20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;There is an apparent contradiction between the documentation for this method and the documentation for &lt;a href=&quot;errorhandler#fatalError(org.xml.sax.SAXParseException)&quot;&gt;&lt;code&gt;ErrorHandler.fatalError(org.xml.sax.SAXParseException)&lt;/code&gt;&lt;/a&gt;. Until this ambiguity is resolved in a future major release, clients should make no assumptions about whether endDocument() will or will not be invoked when the parser has reported a fatalError() or thrown an exception.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;이 메서드에 대한 설명서와 &lt;a href=&quot;errorhandler#fatalError(org.xml.sax.SAXParseException)&quot;&gt; &lt;code&gt;ErrorHandler.fatalError(org.xml.sax.SAXParseException)&lt;/code&gt; &lt;/a&gt; 설명서간에 명백한 모순이 있습니다. 이 모호성이 향후 주요 릴리스에서 해결 될 때까지 클라이언트는 파서가 fatalError ()를보고했거나 예외를 throw했을 때 endDocument ()가 호출 될지 여부에 대해 가정하지 않아야합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7adbe8ba0e535437a73edd7bc545040789286be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This class is for &lt;code&gt;Preferences&lt;/code&gt; implementers only. Normal users of the &lt;code&gt;Preferences&lt;/code&gt; facility should have no need to consult this documentation. The &lt;a href=&quot;preferences&quot;&gt;&lt;code&gt;Preferences&lt;/code&gt;&lt;/a&gt; documentation should suffice.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;이 클래스는 &lt;code&gt;Preferences&lt;/code&gt; 구현 자만을위한 것입니다. &lt;code&gt;Preferences&lt;/code&gt; 기능 의 일반 사용자는 이 문서를 참조 할 필요가 없습니다. &lt;a href=&quot;preferences&quot;&gt; &lt;code&gt;Preferences&lt;/code&gt; &lt;/a&gt; 문서는 충분합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2ffdbf28e8059c8a9fddfc931e88a6f48623e8d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This class is for &lt;code&gt;Preferences&lt;/code&gt; implementers only. Normal users of the &lt;code&gt;Preferences&lt;/code&gt; facility should have no need to consult this documentation.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;이 클래스는 &lt;code&gt;Preferences&lt;/code&gt; 구현 자만을위한 것입니다. &lt;code&gt;Preferences&lt;/code&gt; 기능 의 일반 사용자는 이 문서를 참조 할 필요가 없습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5e898de443cd96bd8c85b25c0624b65407345a4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip for Trouble-shooting:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;문제 해결을위한 팁 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a6523a0d1258595c00128ecc59dbaa49e55e8e6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage model&lt;/strong&gt;. To motivate the behavior of &lt;code&gt;add()&lt;/code&gt; and &lt;code&gt;roll()&lt;/code&gt;, consider a user interface component with increment and decrement buttons for the month, day, and year, and an underlying &lt;code&gt;GregorianCalendar&lt;/code&gt;. If the interface reads January 31, 1999 and the user presses the month increment button, what should it read? If the underlying implementation uses &lt;code&gt;set()&lt;/code&gt;, it might read March 3, 1999. A better result would be February 28, 1999. Furthermore, if the user presses the month increment button again, it should read March 31, 1999, not March 28, 1999. By saving the original date and using either &lt;code&gt;add()&lt;/code&gt; or &lt;code&gt;roll()&lt;/code&gt;, depending on whether larger fields should be affected, the user interface can behave as most users will intuitively expect.</source>
          <target state="translated">&lt;strong&gt;사용 모델&lt;/strong&gt; . &lt;code&gt;add()&lt;/code&gt; 및 &lt;code&gt;roll()&lt;/code&gt; 의 동작을 동기 부여하려면 월, 일 및 연도에 대한 증가 및 감소 버튼과 기본 &lt;code&gt;GregorianCalendar&lt;/code&gt; 가 있는 사용자 인터페이스 구성 요소를 고려하십시오 . 인터페이스에 1999 년 1 월 31 일이 표시되고 사용자가 월 단위 버튼을 누르면 무엇을 읽어야합니까? 기본 구현이 &lt;code&gt;set()&lt;/code&gt; 사용하는 경우 1999 년 3 월 3 일을 읽을 수 있습니다. 더 좋은 결과는 1999 년 2 월 28 일입니다. 또한 사용자가 월 단위 버튼을 다시 누르면 1999 년 3 월 31 일이 아니라 3 월 28 일을 읽습니다. 원래 날짜를 저장하고 &lt;code&gt;add()&lt;/code&gt; 사용하여 또는 &lt;code&gt;roll()&lt;/code&gt; 더 큰 필드가 영향을 받는지 여부에 따라 대부분의 사용자가 직관적으로 기대하는대로 사용자 인터페이스가 작동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="994a73629c49eaf488096800830487faf640480b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Variable argument invocation&lt;/strong&gt; is handled for both methods and constructors.</source>
          <target state="translated">&lt;strong&gt;변수 인수 호출&lt;/strong&gt; 은 메서드와 생성자 모두에 대해 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="e6e676bd625190c38401fa251c1a404d083ffe0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING:&lt;/strong&gt; If an application does &lt;em&gt;not&lt;/em&gt; register an ErrorHandler, XML parsing errors will go unreported, except that &lt;em&gt;SAXParseException&lt;/em&gt;s will be thrown for fatal errors. In order to detect validity errors, an ErrorHandler that does something with &lt;a href=&quot;#error(org.xml.sax.SAXParseException)&quot;&gt;&lt;code&gt;error()&lt;/code&gt;&lt;/a&gt; calls must be registered.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 애플리케이션이 ErrorHandler를 등록 하지 &lt;em&gt;않으면&lt;/em&gt; XML 구문 분석 오류가보고되지 않습니다. 단, &lt;em&gt;SAXParseException&lt;/em&gt; 은 치명적인 오류에 대해 throw됩니다. 유효성 오류를 감지하려면 &lt;a href=&quot;#error(org.xml.sax.SAXParseException)&quot;&gt; &lt;code&gt;error()&lt;/code&gt; &lt;/a&gt; 호출로 작업 을 수행하는 ErrorHandler를 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="290096e1d2d79c01351fb18dd50be6b220804330" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING:&lt;/strong&gt; It is possible that methods will be added to this interface to accommodate new, currently unknown, language structures added to future versions of the Java programming language. Such additions have already occurred in another visitor interface in this package to support language features added after this API was introduced. Visitor classes directly implementing this interface may be source incompatible with future versions of the platform. To avoid this source incompatibility, visitor implementations are encouraged to instead extend the appropriate abstract visitor class that implements this interface. However, an API should generally use this visitor interface as the type for parameters, return type, etc. rather than one of the abstract classes.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; Java 프로그래밍 언어의 차기 버전에 추가 된 새롭고 현재 알려지지 않은 언어 구조를 수용하기 위해이 인터페이스에 메소드가 추가 될 수 있습니다. 이러한 추가는이 API가 도입 된 후 추가 된 언어 기능을 지원하기 위해이 패키지의 다른 방문자 인터페이스에서 이미 발생했습니다. 이 인터페이스를 직접 구현하는 방문자 클래스는 향후 플랫폼 버전과 소스가 호환되지 않을 수 있습니다. 이 소스 비 호환성을 피하기 위해 방문자 구현은 대신이 인터페이스를 구현하는 적절한 추상 방문자 클래스를 확장하는 것이 좋습니다. 그러나 API는 일반적으로이 방문자 인터페이스를 추상 클래스 중 하나가 아닌 매개 변수, 반환 유형 등에 대한 유형으로 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="3576b574839ed4b694dc652270c156db2810492e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING:&lt;/strong&gt; It is possible that methods will be added to this interface to accommodate new, currently unknown, language structures added to future versions of the Java programming language. Such additions have already occurred to support language features added after this API was introduced. Visitor classes directly implementing this interface may be source incompatible with future versions of the platform. To avoid this source incompatibility, visitor implementations are encouraged to instead extend the appropriate abstract visitor class that implements this interface. However, an API should generally use this visitor interface as the type for parameters, return type, etc. rather than one of the abstract classes.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; Java 프로그래밍 언어의 차기 버전에 추가 된 새롭고 현재 알려지지 않은 언어 구조를 수용하기 위해이 인터페이스에 메소드가 추가 될 수 있습니다. 이러한 추가는이 API가 도입 된 후 추가 된 언어 기능을 지원하기 위해 이미 발생했습니다. 이 인터페이스를 직접 구현하는 방문자 클래스는 향후 플랫폼 버전과 소스가 호환되지 않을 수 있습니다. 이 소스 비 호환성을 피하기 위해 방문자 구현은 대신이 인터페이스를 구현하는 적절한 추상 방문자 클래스를 확장하는 것이 좋습니다. 그러나 API는 일반적으로이 방문자 인터페이스를 추상 클래스 중 하나가 아닌 매개 변수, 반환 유형 등에 대한 유형으로 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="528e827ebc7dde5687605184f5ec9dca7db6d4cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING:&lt;/strong&gt; The &lt;code&gt;
 AnnotationValueVisitor&lt;/code&gt; interface implemented by this class may have methods added to it in the future to accommodate new, currently unknown, language structures added to future versions of the Java programming language. Therefore, methods whose names begin with &lt;code&gt;&quot;visit&quot;&lt;/code&gt; may be added to this class in the future; to avoid incompatibilities, classes and subclasses which extend this class should not declare any instance methods with names beginning with &lt;code&gt;&quot;visit&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;경고 : &lt;/strong&gt; &lt;code&gt; AnnotationValueVisitor&lt;/code&gt; 의 Java 프로그램 언어의 미래 버전에 추가 된 새, 현재 알 수없는, 언어 구조를 수용하기 위해 미래에 추가 방법이있을 수 있습니다,이 클래스에 의해 구현 인터페이스를 제공합니다. 따라서 이름이 &lt;code&gt;&quot;visit&quot;&lt;/code&gt; 로 시작하는 메서드는 나중에이 클래스에 추가 될 수 있습니다. 비 호환성을 피하기 위해이 클래스를 확장하는 클래스 및 하위 클래스는 &lt;code&gt;&quot;visit&quot;&lt;/code&gt; 로 시작하는 이름을 가진 인스턴스 메서드를 선언하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="258f3c9dd4116a4e9cb0ec2fd11cc25533102c3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING:&lt;/strong&gt; The &lt;code&gt;
 ElementVisitor&lt;/code&gt; interface implemented by this class may have methods added to it in the future to accommodate new, currently unknown, language structures added to future versions of the Java programming language. Therefore, methods whose names begin with &lt;code&gt;&quot;visit&quot;&lt;/code&gt; may be added to this class in the future; to avoid incompatibilities, classes and subclasses which extend this class should not declare any instance methods with names beginning with &lt;code&gt;&quot;visit&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;경고 : &lt;/strong&gt; &lt;code&gt; ElementVisitor&lt;/code&gt; 의 Java 프로그램 언어의 미래 버전에 추가 된 새, 현재 알 수없는, 언어 구조를 수용하기 위해 미래에 추가 방법이있을 수 있습니다,이 클래스에 의해 구현 인터페이스를 제공합니다. 따라서 이름이 &lt;code&gt;&quot;visit&quot;&lt;/code&gt; 로 시작하는 메서드는 나중에이 클래스에 추가 될 수 있습니다. 비 호환성을 피하기 위해이 클래스를 확장하는 클래스 및 하위 클래스는 &lt;code&gt;&quot;visit&quot;&lt;/code&gt; 로 시작하는 이름을 가진 인스턴스 메서드를 선언하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="42973a427bceaac8e6c9eed80bf5c491f853ae3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING:&lt;/strong&gt; The &lt;code&gt;
 ElementVisitor&lt;/code&gt; interface implemented by this class may have methods added to it or the &lt;a href=&quot;../element/elementkind&quot;&gt;&lt;code&gt;ElementKind enum&lt;/code&gt;&lt;/a&gt; used in this class may have constants added to it in the future to accommodate new, currently unknown, language structures added to future versions of the Java programming language. Therefore, methods whose names begin with &lt;code&gt;&quot;visit&quot;&lt;/code&gt; may be added to this class in the future; to avoid incompatibilities, classes and subclasses which extend this class should not declare any instance methods with names beginning with &lt;code&gt;&quot;visit&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;경고 : &lt;/strong&gt; &lt;code&gt; ElementVisitor&lt;/code&gt; 의 이 클래스에 의해 구현 인터페이스 방법은 나에 추가 한 &lt;a href=&quot;../element/elementkind&quot;&gt; &lt;code&gt;ElementKind enum&lt;/code&gt; &lt;/a&gt; 미래에 추가 상수는 자바 프로그래밍 언어의 미래 버전에 추가 된 알 수없는 현재, 새로운 언어 구조를 수용 할 수 있습니다,이 클래스에서 사용 . 따라서 이름이 &lt;code&gt;&quot;visit&quot;&lt;/code&gt; 로 시작하는 메서드는 나중에이 클래스에 추가 될 수 있습니다. 비 호환성을 피하기 위해이 클래스를 확장하는 클래스 및 하위 클래스는 &lt;code&gt;&quot;visit&quot;&lt;/code&gt; 로 시작하는 이름을 가진 인스턴스 메서드를 선언하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="1e324a2c1325ae207174f44decd79bf436902388" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING:&lt;/strong&gt; The &lt;code&gt;
 TypeVisitor&lt;/code&gt; interface implemented by this class may have methods added to it in the future to accommodate new, currently unknown, language structures added to future versions of the Java programming language. Therefore, methods whose names begin with &lt;code&gt;&quot;visit&quot;&lt;/code&gt; may be added to this class in the future; to avoid incompatibilities, classes and subclasses which extend this class should not declare any instance methods with names beginning with &lt;code&gt;&quot;visit&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;경고 : &lt;/strong&gt; &lt;code&gt; TypeVisitor&lt;/code&gt; 의 Java 프로그램 언어의 미래 버전에 추가 된 새, 현재 알 수없는, 언어 구조를 수용하기 위해 미래에 추가 방법이있을 수 있습니다,이 클래스에 의해 구현 인터페이스를 제공합니다. 따라서 이름이 &lt;code&gt;&quot;visit&quot;&lt;/code&gt; 로 시작하는 메서드는 나중에이 클래스에 추가 될 수 있습니다. 비 호환성을 피하기 위해이 클래스를 확장하는 클래스 및 하위 클래스는 &lt;code&gt;&quot;visit&quot;&lt;/code&gt; 로 시작하는 이름을 가진 인스턴스 메서드를 선언하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="8806e97faaa9600d9141fbb4b85c65e3605dc39a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING:&lt;/strong&gt; The &lt;code&gt;
 TypeVisitor&lt;/code&gt; interface implemented by this class may have methods added to it or the &lt;a href=&quot;../type/typekind&quot;&gt;&lt;code&gt;TypeKind enum&lt;/code&gt;&lt;/a&gt; used in this class may have constants added to it in the future to accommodate new, currently unknown, language structures added to future versions of the Java programming language. Therefore, methods whose names begin with &lt;code&gt;&quot;visit&quot;&lt;/code&gt; may be added to this class in the future; to avoid incompatibilities, classes and subclasses which extend this class should not declare any instance methods with names beginning with &lt;code&gt;&quot;visit&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;경고 : &lt;/strong&gt; &lt;code&gt; TypeVisitor&lt;/code&gt; 의 이 클래스에 의해 구현 인터페이스 방법은 나에 추가 한 &lt;a href=&quot;../type/typekind&quot;&gt; &lt;code&gt;TypeKind enum&lt;/code&gt; &lt;/a&gt; 미래에 추가 상수는 자바 프로그래밍 언어의 미래 버전에 추가 된 알 수없는 현재, 새로운 언어 구조를 수용 할 수 있습니다,이 클래스에서 사용 . 따라서 이름이 &lt;code&gt;&quot;visit&quot;&lt;/code&gt; 로 시작하는 메서드는 나중에이 클래스에 추가 될 수 있습니다. 비 호환성을 피하기 위해이 클래스를 확장하는 클래스 및 하위 클래스는 &lt;code&gt;&quot;visit&quot;&lt;/code&gt; 로 시작하는 이름을 가진 인스턴스 메서드를 선언하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="4698d52cfd63938f5ddf58bed55df035896cea66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING:&lt;/strong&gt; The &lt;code&gt;ElementVisitor&lt;/code&gt; interface implemented by this class may have methods added to it in the future to accommodate new, currently unknown, language structures added to future versions of the Java programming language. Therefore, methods whose names begin with &lt;code&gt;&quot;visit&quot;&lt;/code&gt; may be added to this class in the future; to avoid incompatibilities, classes which extend this class should not declare any instance methods with names beginning with &lt;code&gt;&quot;visit&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;경고 : &lt;/strong&gt; &lt;code&gt;ElementVisitor&lt;/code&gt; 의 Java 프로그램 언어의 미래 버전에 추가 된 새, 현재 알 수없는, 언어 구조를 수용하기 위해 미래에 추가 방법이있을 수 있습니다,이 클래스에 의해 구현 인터페이스를 제공합니다. 따라서 이름이 &lt;code&gt;&quot;visit&quot;&lt;/code&gt; 로 시작하는 메서드는 나중에이 클래스에 추가 될 수 있습니다. 비 호환성을 피하기 위해이 클래스를 확장하는 클래스는 이름이 &lt;code&gt;&quot;visit&quot;&lt;/code&gt; 로 시작하는 인스턴스 메서드를 선언하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="83fad05ec76f2ce44abc69c8435f4beaf01a74a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning: Deserialization of untrusted data is inherently dangerous and should be avoided. Untrusted data should be carefully validated according to the &quot;Serialization and Deserialization&quot; section of the &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=secure_coding_guidelines_javase&quot;&gt;Secure Coding Guidelines for Java SE&lt;/a&gt;. &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;경고 : 신뢰할 수없는 데이터의 역 직렬화는 본질적으로 위험하므로 피해야합니다. 신뢰할 수없는 데이터는 &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=secure_coding_guidelines_javase&quot;&gt;Java SE 용 보안 코딩 지침&lt;/a&gt; 의 &quot;직렬화 및 역 직렬화&quot;섹션에 따라 신중하게 유효성을 검사해야합니다 .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60057a18631c30cde598f78a6a6595a707d0250c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning: Deserialization of untrusted data is inherently dangerous and should be avoided. Untrusted data should be carefully validated according to the &quot;Serialization and Deserialization&quot; section of the &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=secure_coding_guidelines_javase&quot;&gt;Secure Coding Guidelines for Java SE&lt;/a&gt;. &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=serialization_filter_guide&quot;&gt;Serialization Filtering&lt;/a&gt; describes best practices for defensive use of serial filters. &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;경고 : 신뢰할 수없는 데이터의 역 직렬화는 본질적으로 위험하므로 피해야합니다. 신뢰할 수없는 데이터는 &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=secure_coding_guidelines_javase&quot;&gt;Java SE 용 보안 코딩 지침&lt;/a&gt; 의 &quot;직렬화 및 역 직렬화&quot;섹션에 따라 신중하게 유효성을 검사해야합니다 . &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=serialization_filter_guide&quot;&gt;직렬화 필터링&lt;/a&gt; 은 직렬 필터를 방어 적으로 사용하기위한 모범 사례를 설명합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba66b3431650beb72d9ab0b06266c420fd59a26b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning: Deserialization of untrusted data is inherently dangerous and should be avoided. Untrusted data should be carefully validated according to the &quot;Serialization and Deserialization&quot; section of the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=secure_coding_guidelines_javase&quot;&gt;Secure Coding Guidelines for Java SE&lt;/a&gt;. &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;경고 : 신뢰할 수없는 데이터의 역 직렬화는 본질적으로 위험하므로 피해야합니다. 신뢰할 수없는 데이터는 &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=secure_coding_guidelines_javase&quot;&gt;Java SE 용 보안 코딩 지침&lt;/a&gt; 의 &quot;직렬화 및 역 직렬화&quot;섹션에 따라 신중하게 유효성을 검사해야합니다 .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="82c74f9cd8506f7716f64136623b1d9c81c176fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning: Deserialization of untrusted data is inherently dangerous and should be avoided. Untrusted data should be carefully validated according to the &quot;Serialization and Deserialization&quot; section of the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=secure_coding_guidelines_javase&quot;&gt;Secure Coding Guidelines for Java SE&lt;/a&gt;. &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=serialization_filter_guide&quot;&gt;Serialization Filtering&lt;/a&gt; describes best practices for defensive use of serial filters. &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;경고 : 신뢰할 수없는 데이터의 역 직렬화는 본질적으로 위험하므로 피해야합니다. 신뢰할 수없는 데이터는 &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=secure_coding_guidelines_javase&quot;&gt;Java SE 용 보안 코딩 지침&lt;/a&gt; 의 &quot;직렬화 및 역 직렬화&quot;섹션에 따라 신중하게 유효성을 검사해야합니다 . &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=serialization_filter_guide&quot;&gt;직렬화 필터링&lt;/a&gt; 은 직렬 필터를 방어 적으로 사용하기위한 모범 사례를 설명합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc16a158ab6debd5a55d9e011a87abb1eedaa67b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; As the &lt;code&gt;AbstractFormatter&lt;/code&gt; will typically install a &lt;code&gt;DocumentFilter&lt;/code&gt; on the &lt;code&gt;Document&lt;/code&gt;, and a &lt;code&gt;NavigationFilter&lt;/code&gt; on the &lt;code&gt;JFormattedTextField&lt;/code&gt; you should not install your own. If you do, you are likely to see odd behavior in that the editing policy of the &lt;code&gt;AbstractFormatter&lt;/code&gt; will not be enforced.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 는 AS &lt;code&gt;AbstractFormatter&lt;/code&gt; 일반적으로 설치됩니다 &lt;code&gt;DocumentFilter&lt;/code&gt; 를 온 &lt;code&gt;Document&lt;/code&gt; 및 &lt;code&gt;NavigationFilter&lt;/code&gt; 를을 온 &lt;code&gt;JFormattedTextField&lt;/code&gt; 에 자신을 설치하지 않아야합니다. 그렇게하면 &lt;code&gt;AbstractFormatter&lt;/code&gt; 의 편집 정책 이 적용되지 않는다는 이상한 동작이 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d0081b8c7026432cd484592507be27858e033ac8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; By default, pressing the Tab key does not transfer focus from a &lt;code&gt;
 JMenuBar&lt;/code&gt; which is added to a container together with other Swing components, because the &lt;code&gt;focusTraversalKeysEnabled&lt;/code&gt; property of &lt;code&gt;JMenuBar&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;. To resolve this, you should call the &lt;code&gt;JMenuBar.setFocusTraversalKeysEnabled(true)&lt;/code&gt; method.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 기본적으로에서 초점을 전송하지 않습니다 Tab 키를 눌러 &lt;code&gt; JMenuBar&lt;/code&gt; (가) 때문에, 다른 스윙 구성 요소와 함께 컨테이너에 추가 &lt;code&gt;focusTraversalKeysEnabled&lt;/code&gt; 의 재산 &lt;code&gt;JMenuBar&lt;/code&gt; 설정되어 &lt;code&gt;false&lt;/code&gt; . 이를 해결하려면 &lt;code&gt;JMenuBar.setFocusTraversalKeysEnabled(true)&lt;/code&gt; 메소드를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="80e826a390fd926fd15e49c264da29973f5d12b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Focus and keyboard navigation problems may arise if you add duplicate String objects. A workaround is to add new objects instead of String objects and make sure that the toString() method is defined. For example:</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 중복 String 개체를 추가하면 포커스 및 키보드 탐색 문제가 발생할 수 있습니다. 해결 방법은 String 객체 대신 새 객체를 추가하고 toString () 메서드가 정의되어 있는지 확인하는 것입니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="5ff493cc702522689328489e5829f2710a1e5da1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Returning an external subset modifies the input document. By providing definitions for general entities, it can make a malformed document appear to be well formed.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 외부 하위 집합을 반환하면 입력 문서가 수정됩니다. 일반 엔터티에 대한 정의를 제공함으로써 잘못된 형식의 문서가 잘 구성된 것처럼 보일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3636def0ebe3c9b7007374ae6e75fe3ecb62c77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Serialized objects of this class will not be compatible with future Swing releases.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 이 클래스의 직렬화 된 객체는 향후 Swing 릴리스와 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ec58c9c8d6c5b236e20e2e43131b6810df09f906" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the &lt;code&gt;java.beans&lt;/code&gt; package. Please see &lt;a href=&quot;../../../../java/beans/xmlencoder&quot;&gt;&lt;code&gt;XMLEncoder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 이 클래스의 직렬화 된 객체는 향후 Swing 릴리스와 호환되지 않습니다. 현재 직렬화 지원은 동일한 버전의 Swing을 실행하는 애플리케이션 간의 단기 저장 또는 RMI에 적합합니다. 1.4부터 모든 JavaBeans의 장기 저장에 대한 지원이 &lt;code&gt;java.beans&lt;/code&gt; 패키지에 추가되었습니다 . &lt;a href=&quot;../../../../java/beans/xmlencoder&quot;&gt; &lt;code&gt;XMLEncoder&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e1916aada994b9f85c617fcf5de03079d1122d7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the &lt;code&gt;java.beans&lt;/code&gt; package. Please see &lt;a href=&quot;../../../java/beans/xmlencoder&quot;&gt;&lt;code&gt;XMLEncoder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 이 클래스의 직렬화 된 객체는 향후 Swing 릴리스와 호환되지 않습니다. 현재 직렬화 지원은 동일한 버전의 Swing을 실행하는 애플리케이션 간의 단기 저장 또는 RMI에 적합합니다. 1.4부터 모든 JavaBeans의 장기 저장에 대한 지원이 &lt;code&gt;java.beans&lt;/code&gt; 패키지에 추가되었습니다 . &lt;a href=&quot;../../../java/beans/xmlencoder&quot;&gt; &lt;code&gt;XMLEncoder&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0b34a063954f2b2b959813a16f66d8b3af5db0db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the &lt;code&gt;java.beans&lt;/code&gt; package. Please see &lt;a href=&quot;../../java/beans/xmlencoder&quot;&gt;&lt;code&gt;XMLEncoder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 이 클래스의 직렬화 된 객체는 향후 Swing 릴리스와 호환되지 않습니다. 현재 직렬화 지원은 동일한 버전의 Swing을 실행하는 애플리케이션 간의 단기 저장 또는 RMI에 적합합니다. 1.4부터 모든 JavaBeans의 장기 저장에 대한 지원이 &lt;code&gt;java.beans&lt;/code&gt; 패키지에 추가되었습니다 . &lt;a href=&quot;../../java/beans/xmlencoder&quot;&gt; &lt;code&gt;XMLEncoder&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1e9c75054525c2d2b40655beb8bba667b65d31f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans&amp;trade; has been added to the &lt;code&gt;java.beans&lt;/code&gt; package. Please see &lt;a href=&quot;../../../../java/beans/xmlencoder&quot;&gt;&lt;code&gt;XMLEncoder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 이 클래스의 직렬화 된 객체는 향후 Swing 릴리스와 호환되지 않습니다. 현재 직렬화 지원은 동일한 버전의 Swing을 실행하는 애플리케이션 간의 단기 저장 또는 RMI에 적합합니다. 1.4부터 모든 JavaBeans &amp;trade;의 장기 저장에 대한 지원이 &lt;code&gt;java.beans&lt;/code&gt; 패키지에 추가되었습니다 . &lt;a href=&quot;../../../../java/beans/xmlencoder&quot;&gt; &lt;code&gt;XMLEncoder&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="156c920646f79596a58a8c48da0f1e93196399f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans&amp;trade; has been added to the &lt;code&gt;java.beans&lt;/code&gt; package. Please see &lt;a href=&quot;../../../java/beans/xmlencoder&quot;&gt;&lt;code&gt;XMLEncoder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 이 클래스의 직렬화 된 객체는 향후 Swing 릴리스와 호환되지 않습니다. 현재 직렬화 지원은 동일한 버전의 Swing을 실행하는 애플리케이션 간의 단기 저장 또는 RMI에 적합합니다. 1.4부터 모든 JavaBeans &amp;trade;의 장기 저장에 대한 지원이 &lt;code&gt;java.beans&lt;/code&gt; 패키지에 추가되었습니다 . &lt;a href=&quot;../../../java/beans/xmlencoder&quot;&gt; &lt;code&gt;XMLEncoder&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="02ffb86db905c995479c80f4cd784cc9788eb086" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans&amp;trade; has been added to the &lt;code&gt;java.beans&lt;/code&gt; package. Please see &lt;a href=&quot;../../java/beans/xmlencoder&quot;&gt;&lt;code&gt;XMLEncoder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 이 클래스의 직렬화 된 객체는 향후 Swing 릴리스와 호환되지 않습니다. 현재 직렬화 지원은 동일한 버전의 Swing을 실행하는 애플리케이션 간의 단기 저장 또는 RMI에 적합합니다. 1.4부터 모든 JavaBeans &amp;trade;의 장기 저장에 대한 지원이 &lt;code&gt;java.beans&lt;/code&gt; 패키지에 추가되었습니다 . &lt;a href=&quot;../../java/beans/xmlencoder&quot;&gt; &lt;code&gt;XMLEncoder&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c2d6fe2ff7630a62c7b1f25594417e9dcc9922b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Swing is not thread safe. For more information see &lt;a href=&quot;package-summary#threading&quot;&gt;Swing's Threading Policy&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 스윙은 스레드로부터 안전하지 않습니다. 자세한 내용은 &lt;a href=&quot;package-summary#threading&quot;&gt;Swing의 스레딩 정책을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="46428376b41a4736808cc3de418fdad0d84575dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; The View hierarchy can be traversed from the root view, and other things can be done as well. Things done in this way cannot be protected like simple method calls through the TextUI. Therefore, proper operation in the presence of concurrency must be arranged by any logic that calls this method!</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 뷰 계층은 루트 뷰에서 순회 할 수 있으며 다른 작업도 수행 할 수 있습니다. 이러한 방식으로 수행되는 작업은 TextUI를 통한 간단한 메서드 호출처럼 보호 할 수 없습니다. 따라서이 메서드를 호출하는 모든 논리에 의해 동시성이있는 상태에서 적절한 작업을 정렬해야합니다!</target>
        </trans-unit>
        <trans-unit id="3989d035d71a3e135cee095a2e7149db8c80a07e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; The return value from the method is intended only as an approximation for the sake of diagnostics; it is not intended to provide sufficient information to edit the character content of the original XML document. For example, when lines contain combining character sequences, wide characters, surrogate pairs, or bi-directional text, the value may not correspond to the column in a text editor's display.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 메서드의 반환 값은 진단을위한 근사치로만 사용됩니다. 원본 XML 문서의 문자 내용을 편집하는 데 충분한 정보를 제공하기위한 것이 아닙니다. 예를 들어, 행에 결합 문자 시퀀스, 와이드 문자, 서로 게이트 쌍 또는 양방향 텍스트가 포함 된 경우 값은 텍스트 편집기 디스플레이의 열과 일치하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2421b256aa52ff9c1ccf9868c39e72754c20d794" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; The return value from the method is intended only as an approximation for the sake of diagnostics; it is not intended to provide sufficient information to edit the character content of the original XML document. In some cases, these &quot;line&quot; numbers match what would be displayed as columns, and in others they may not match the source text due to internal entity expansion.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; 메서드의 반환 값은 진단을위한 근사치로만 사용됩니다. 원본 XML 문서의 문자 내용을 편집하는 데 충분한 정보를 제공하기위한 것이 아닙니다. 어떤 경우에는 이러한 &quot;행&quot;번호가 열로 표시되는 것과 일치하고 다른 경우에는 내부 엔티티 확장으로 인해 소스 텍스트와 일치하지 않을 수 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
