<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="ac820c6009b39e20e5ac984441a6a70e50be36a4" translate="yes" xml:space="preserve">
          <source>Wraps the result of &lt;a href=&quot;#getCharContent(boolean)&quot;&gt;getCharContent(boolean)&lt;/a&gt; in a Reader.</source>
          <target state="translated">Wraps the result of &lt;a href=&quot;#getCharContent(boolean)&quot;&gt;getCharContent(boolean)&lt;/a&gt; in a Reader.</target>
        </trans-unit>
        <trans-unit id="4a990b08c589c006db4f034d5b0f85b8c7bd9875" translate="yes" xml:space="preserve">
          <source>Wraps the result of &lt;a href=&quot;#getCharContent(boolean)&quot;&gt;getCharContent(boolean)&lt;/a&gt; in a Reader. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">Wraps the result of &lt;a href=&quot;#getCharContent(boolean)&quot;&gt;getCharContent(boolean)&lt;/a&gt; in a Reader. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt; &lt;code&gt;FileObject&lt;/code&gt; &lt;/a&gt; is obeyed.</target>
        </trans-unit>
        <trans-unit id="8a2449189a10e5f2a06487a9d1438073749161da" translate="yes" xml:space="preserve">
          <source>Wraps the result of &lt;a href=&quot;simplejavafileobject#getCharContent-boolean-&quot;&gt;getCharContent(boolean)&lt;/a&gt; in a Reader. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">&lt;a href=&quot;simplejavafileobject#getCharContent-boolean-&quot;&gt;getCharContent (boolean)&lt;/a&gt; 의 결과를 Reader에 랩합니다 . &lt;a href=&quot;fileobject&quot;&gt; &lt;code&gt;FileObject&lt;/code&gt; &lt;/a&gt; 의 계약을 준수 하는 한 서브 클래스는이 동작을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ab924b7847e5e470bb4f8f381c5b7f772f8b220f" translate="yes" xml:space="preserve">
          <source>Wraps the result of openOutputStream in a Writer.</source>
          <target state="translated">Wraps the result of openOutputStream in a Writer.</target>
        </trans-unit>
        <trans-unit id="18643b36bb23e1c01a06054ba0da36eec75ea0b6" translate="yes" xml:space="preserve">
          <source>Wraps the result of openOutputStream in a Writer. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">Writer에서 openOutputStream의 결과를 래핑합니다. &lt;a href=&quot;fileobject&quot;&gt; &lt;code&gt;FileObject&lt;/code&gt; &lt;/a&gt; 의 계약을 준수 하는 한 서브 클래스는이 동작을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d5c0446c81d41ca1fdd8fea8cfadd9a744960cb5" translate="yes" xml:space="preserve">
          <source>Wraps the specified transform.</source>
          <target state="translated">Wraps the specified transform.</target>
        </trans-unit>
        <trans-unit id="18aba0f6a8421686c79cd18305b44edb5756ae50" translate="yes" xml:space="preserve">
          <source>Wraps the specified transform. The transform is cloned and a reference to the clone is kept. The original transform is unchanged. If null is passed as the argument, this constructor behaves as though it were the identity transform. (Note that it is preferable to use &lt;a href=&quot;#IDENTITY&quot;&gt;&lt;code&gt;IDENTITY&lt;/code&gt;&lt;/a&gt; in this case.)</source>
          <target state="translated">Wraps the specified transform. The transform is cloned and a reference to the clone is kept. The original transform is unchanged. If null is passed as the argument, this constructor behaves as though it were the identity transform. (Note that it is preferable to use &lt;a href=&quot;#IDENTITY&quot;&gt; &lt;code&gt;IDENTITY&lt;/code&gt; &lt;/a&gt; in this case.)</target>
        </trans-unit>
        <trans-unit id="b8f27a22b91fffa5fca45a36aaea975d25f5a8b2" translate="yes" xml:space="preserve">
          <source>WritableByteChannel</source>
          <target state="translated">WritableByteChannel</target>
        </trans-unit>
        <trans-unit id="232d2eb15dd5a8e6d5b8d3468d075c115e7d592c" translate="yes" xml:space="preserve">
          <source>WritableByteChannel.write()</source>
          <target state="translated">WritableByteChannel.write()</target>
        </trans-unit>
        <trans-unit id="8df121d40ab265ffb282618abaddabf62bf4b394" translate="yes" xml:space="preserve">
          <source>WritableRaster</source>
          <target state="translated">WritableRaster</target>
        </trans-unit>
        <trans-unit id="d89b72e5d40182fe2b3219c24a22ac87a1fc4964" translate="yes" xml:space="preserve">
          <source>WritableRenderedImage</source>
          <target state="translated">WritableRenderedImage</target>
        </trans-unit>
        <trans-unit id="028b998a60e46208ce0ede4aa3a7013db3bcb901" translate="yes" xml:space="preserve">
          <source>WritableRenderedImage is a common interface for objects which contain or can produce image data in the form of Rasters and which can be modified and/or written over.</source>
          <target state="translated">WritableRenderedImage is a common interface for objects which contain or can produce image data in the form of Rasters and which can be modified and/or written over.</target>
        </trans-unit>
        <trans-unit id="b356fedb82416c4bf9703a0aa4ef5cd0e33afc43" translate="yes" xml:space="preserve">
          <source>WritableRenderedImage is a common interface for objects which contain or can produce image data in the form of Rasters and which can be modified and/or written over. The image data may be stored/produced as a single tile or a regular array of tiles.</source>
          <target state="translated">WritableRenderedImage is a common interface for objects which contain or can produce image data in the form of Rasters and which can be modified and/or written over. The image data may be stored/produced as a single tile or a regular array of tiles.</target>
        </trans-unit>
        <trans-unit id="c22974bfb92e8c252f00719977a7781037b8ef4a" translate="yes" xml:space="preserve">
          <source>WritableRenderedImage provides notification to other interested objects when a tile is checked out for writing (via the getWritableTile method) and when the last writer of a particular tile relinquishes its access (via a call to releaseWritableTile). Additionally, it allows any caller to determine whether any tiles are currently checked out (via hasTileWriters), and to obtain a list of such tiles (via getWritableTileIndices, in the form of a Vector of Point objects).</source>
          <target state="translated">WritableRenderedImage provides notification to other interested objects when a tile is checked out for writing (via the getWritableTile method) and when the last writer of a particular tile relinquishes its access (via a call to releaseWritableTile). Additionally, it allows any caller to determine whether any tiles are currently checked out (via hasTileWriters), and to obtain a list of such tiles (via getWritableTileIndices, in the form of a Vector of Point objects).</target>
        </trans-unit>
        <trans-unit id="5da714036977cab66b8b81ed578fe655c485e622" translate="yes" xml:space="preserve">
          <source>Write a &lt;a href=&quot;../../lang/charsequence&quot;&gt;CharSequence&lt;/a&gt; to a file.</source>
          <target state="translated">Write a &lt;a href=&quot;../../lang/charsequence&quot;&gt;CharSequence&lt;/a&gt; to a file.</target>
        </trans-unit>
        <trans-unit id="4c9ce4be9f1bfb0073774626ee67a785eab41413" translate="yes" xml:space="preserve">
          <source>Write a &lt;a href=&quot;../../lang/charsequence&quot;&gt;CharSequence&lt;/a&gt; to a file. Characters are encoded into bytes using the &lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt;&lt;code&gt;UTF-8&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Write a &lt;a href=&quot;../../lang/charsequence&quot;&gt;CharSequence&lt;/a&gt; to a file. Characters are encoded into bytes using the &lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt; &lt;code&gt;UTF-8&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="792c5eb24bd75a6c8f430ef046aca72eecc461f1" translate="yes" xml:space="preserve">
          <source>Write a &lt;a href=&quot;../../lang/charsequence&quot;&gt;CharSequence&lt;/a&gt; to a file. Characters are encoded into bytes using the specified &lt;a href=&quot;../charset/charset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">Write a &lt;a href=&quot;../../lang/charsequence&quot;&gt;CharSequence&lt;/a&gt; to a file. Characters are encoded into bytes using the specified &lt;a href=&quot;../charset/charset&quot;&gt;charset&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="294afe002c539f61c1c0ee3dcb972c7d74bf355b" translate="yes" xml:space="preserve">
          <source>Write a DTD section.</source>
          <target state="translated">Write a DTD section.</target>
        </trans-unit>
        <trans-unit id="59ffb7b91778bf9267476f98e09dcacd6f27df3d" translate="yes" xml:space="preserve">
          <source>Write a DTD section. This string represents the entire doctypedecl production from the XML 1.0 specification.</source>
          <target state="translated">Write a DTD section. This string represents the entire doctypedecl production from the XML 1.0 specification.</target>
        </trans-unit>
        <trans-unit id="1fc0bd7118775692ac86213afd1d0d2701cb9b4d" translate="yes" xml:space="preserve">
          <source>Write a byte of data to the stream. If it is not a newline, then the byte is appended to the internal buffer. If it is a newline, then the currently buffered line is sent to the log's output stream, prefixed with the appropriate logging information.</source>
          <target state="translated">Write a byte of data to the stream. If it is not a newline, then the byte is appended to the internal buffer. If it is a newline, then the currently buffered line is sent to the log's output stream, prefixed with the appropriate logging information.</target>
        </trans-unit>
        <trans-unit id="98c22110dc7ee6d680da89d0b08efd62d28b6ef7" translate="yes" xml:space="preserve">
          <source>Write a portion of a string to the buffer.</source>
          <target state="translated">문자열의 일부를 버퍼에 씁니다.</target>
        </trans-unit>
        <trans-unit id="4652631a628afd8a3f8a588fd0dbd737d2146884" translate="yes" xml:space="preserve">
          <source>Write a portion of a string.</source>
          <target state="translated">문자열의 일부를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="354cde68fb6c2f936b7c59bf670319ba0dcf0ab7" translate="yes" xml:space="preserve">
          <source>Write a portion of an array of characters.</source>
          <target state="translated">문자 배열의 일부를 씁니다.</target>
        </trans-unit>
        <trans-unit id="330fefb058de9e90d4a9120ede2b9e5d7c7923ca" translate="yes" xml:space="preserve">
          <source>Write a single character.</source>
          <target state="translated">단일 문자를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="f6e749d40ff493a236a023d30fb9fbee8148a6ef" translate="yes" xml:space="preserve">
          <source>Write a string.</source>
          <target state="translated">문자열을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="0556df9723ab76c236dd36201ca6d8bc8762ef74" translate="yes" xml:space="preserve">
          <source>Write a subarray of bytes. Pass each through write byte method.</source>
          <target state="translated">Write a subarray of bytes. Pass each through write byte method.</target>
        </trans-unit>
        <trans-unit id="20a06ba0fb5f245b45c41b384d2689f6921e992d" translate="yes" xml:space="preserve">
          <source>Write an XML representation of the specified object to the output.</source>
          <target state="translated">지정된 객체의 XML 표현을 출력에 씁니다.</target>
        </trans-unit>
        <trans-unit id="be7a56a69ad18401ec15997f7d4e84d91cfc1967" translate="yes" xml:space="preserve">
          <source>Write an object to the underlying storage or stream.</source>
          <target state="translated">Write an object to the underlying storage or stream.</target>
        </trans-unit>
        <trans-unit id="edf1d95422469a4ca47028cba75c57280225b87b" translate="yes" xml:space="preserve">
          <source>Write an object to the underlying storage or stream. The class that implements this interface defines how the object is written.</source>
          <target state="translated">기본 저장소 또는 스트림에 개체를 씁니다. 이 인터페이스를 구현하는 클래스는 객체 작성 방법을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="1f519448d10b81232efe702c1adf54399740a1e6" translate="yes" xml:space="preserve">
          <source>Write any cached data to the underlying output mechanism.</source>
          <target state="translated">Write any cached data to the underlying output mechanism.</target>
        </trans-unit>
        <trans-unit id="e1449e213dd3fcab37865b1ea7eed0c6a6eda03c" translate="yes" xml:space="preserve">
          <source>Write content from a document to the given stream as plain text.</source>
          <target state="translated">Write content from a document to the given stream as plain text.</target>
        </trans-unit>
        <trans-unit id="47582b3fc1fd1ce73fc7f30356e130a469fc033d" translate="yes" xml:space="preserve">
          <source>Write content from a document to the given stream in a format appropriate for this kind of content handler.</source>
          <target state="translated">Write content from a document to the given stream in a format appropriate for this kind of content handler.</target>
        </trans-unit>
        <trans-unit id="81829db29a2fbd204bf7a7893714606039435c4e" translate="yes" xml:space="preserve">
          <source>Write lines of text to a file.</source>
          <target state="translated">Write lines of text to a file.</target>
        </trans-unit>
        <trans-unit id="5f04a37c7592d94e8a688b1e22ea47eb19aaa578" translate="yes" xml:space="preserve">
          <source>Write lines of text to a file. Characters are encoded into bytes using the &lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt;&lt;code&gt;UTF-8&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">파일에 텍스트 줄을 씁니다. 문자는 &lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt; &lt;code&gt;UTF-8&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; 을&lt;/a&gt; 사용하여 바이트로 인코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="cc7e0443ea36cc424ea3c38e6c6339b26fa90a65" translate="yes" xml:space="preserve">
          <source>Write lines of text to a file. Each line is a char sequence and is written to the file in sequence with each line terminated by the platform's line separator, as defined by the system property &lt;code&gt;
 line.separator&lt;/code&gt;. Characters are encoded into bytes using the specified charset.</source>
          <target state="translated">Write lines of text to a file. Each line is a char sequence and is written to the file in sequence with each line terminated by the platform's line separator, as defined by the system property &lt;code&gt; line.separator&lt;/code&gt; . Characters are encoded into bytes using the specified charset.</target>
        </trans-unit>
        <trans-unit id="422a884c7d36bcb6e46158dea6218bc82e12cb81" translate="yes" xml:space="preserve">
          <source>Write lines of text to a file. Each line is a char sequence and is written to the file in sequence with each line terminated by the platform's line separator, as defined by the system property &lt;code&gt;line.separator&lt;/code&gt;. Characters are encoded into bytes using the specified charset.</source>
          <target state="translated">파일에 텍스트 줄을 씁니다. 각 행은 문자 순서이며 시스템 특성 &lt;code&gt;line.separator&lt;/code&gt; 에 의해 정의 된대로 플랫폼의 행 구분 기호로 종료 된 각 행과 함께 파일에 순서대로 기록됩니다 . 지정된 문자 세트를 사용하여 문자가 바이트로 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="deab5959d8a2b2e287acf5a1e8d177d50eebcbfc" translate="yes" xml:space="preserve">
          <source>Write permission, group.</source>
          <target state="translated">쓰기 권한, 그룹.</target>
        </trans-unit>
        <trans-unit id="ded98708196db3375d703bc829781b7516b5d82b" translate="yes" xml:space="preserve">
          <source>Write permission, others.</source>
          <target state="translated">쓰기 권한, 다른 사람.</target>
        </trans-unit>
        <trans-unit id="b5122274cf00f9236d161b83cf0b1959eac868b3" translate="yes" xml:space="preserve">
          <source>Write permission, owner.</source>
          <target state="translated">쓰기 권한, 소유자.</target>
        </trans-unit>
        <trans-unit id="dc4ca2f6cd629c41dd78f0c1bd4a77413a6ba272" translate="yes" xml:space="preserve">
          <source>Write text to the output</source>
          <target state="translated">Write text to the output</target>
        </trans-unit>
        <trans-unit id="c27677af8097cdc9a850db19aa4fc10ea237786a" translate="yes" xml:space="preserve">
          <source>Write the XML Declaration.</source>
          <target state="translated">Write the XML Declaration.</target>
        </trans-unit>
        <trans-unit id="34ae6a769a32d1c96d1a4d08e0485664c6f49728" translate="yes" xml:space="preserve">
          <source>Write the XML Declaration. Defaults the XML version to 1.0</source>
          <target state="translated">Write the XML Declaration. Defaults the XML version to 1.0</target>
        </trans-unit>
        <trans-unit id="d8fdef7127a3c69001637df99c66003fee11b2af" translate="yes" xml:space="preserve">
          <source>Write the XML Declaration. Defaults the XML version to 1.0, and the encoding to utf-8</source>
          <target state="translated">Write the XML Declaration. Defaults the XML version to 1.0, and the encoding to utf-8</target>
        </trans-unit>
        <trans-unit id="ab1b062ab03bc27d496ac4ab537a5eded352d293" translate="yes" xml:space="preserve">
          <source>Write the XML Declaration. Note that the encoding parameter does not set the actual encoding of the underlying output. That must be set when the instance of the XMLStreamWriter is created using the XMLOutputFactory</source>
          <target state="translated">Write the XML Declaration. Note that the encoding parameter does not set the actual encoding of the underlying output. That must be set when the instance of the XMLStreamWriter is created using the XMLOutputFactory</target>
        </trans-unit>
        <trans-unit id="9895c1ecb033c87ffe0c615c065d32dfcc621b1a" translate="yes" xml:space="preserve">
          <source>Write the buffered fields to the stream.</source>
          <target state="translated">버퍼링 된 필드를 스트림에 씁니다.</target>
        </trans-unit>
        <trans-unit id="f155bd1e4a1fbf0d9f77f04b5cf3659190cb7a16" translate="yes" xml:space="preserve">
          <source>Write the data and fields to the specified ObjectOutput stream, which must be the same stream that produced this &lt;code&gt;PutField&lt;/code&gt; object.</source>
          <target state="translated">데이터와 필드를 지정된 ObjectOutput 스트림에 씁니다 . 이 &lt;code&gt;PutField&lt;/code&gt; 객체 를 생성 한 스트림과 동일해야 합니다.</target>
        </trans-unit>
        <trans-unit id="2d78cda2a78c150de7205e7faea5f60ac062cf74" translate="yes" xml:space="preserve">
          <source>Write the new values to the data source if there is no conflict</source>
          <target state="translated">Write the new values to the data source if there is no conflict</target>
        </trans-unit>
        <trans-unit id="0eb67d8d108ef50bcb4d3a9affa038eaff061a85" translate="yes" xml:space="preserve">
          <source>Write the non-static and non-transient fields of the current class to this stream.</source>
          <target state="translated">Write the non-static and non-transient fields of the current class to this stream.</target>
        </trans-unit>
        <trans-unit id="ab3c2de8de514c7b931148e12444f33c0c77a32e" translate="yes" xml:space="preserve">
          <source>Write the non-static and non-transient fields of the current class to this stream. This may only be called from the writeObject method of the class being serialized. It will throw the NotActiveException if it is called otherwise.</source>
          <target state="translated">현재 클래스의 비 정적 및 비 과도 필드를이 스트림에 씁니다. 직렬화되는 클래스의 writeObject 메소드에서만 호출 할 수 있습니다. 그렇지 않은 경우 NotActiveException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2edab8000ccaace4ff203cc13300679ac4b1d96b" translate="yes" xml:space="preserve">
          <source>Write the specified class descriptor to the ObjectOutputStream.</source>
          <target state="translated">Write the specified class descriptor to the ObjectOutputStream.</target>
        </trans-unit>
        <trans-unit id="c8f5b81bb83d33a942ae2cbeb1415c3a0749b149" translate="yes" xml:space="preserve">
          <source>Write the specified class descriptor to the ObjectOutputStream. Class descriptors are used to identify the classes of objects written to the stream. Subclasses of ObjectOutputStream may override this method to customize the way in which class descriptors are written to the serialization stream. The corresponding method in ObjectInputStream, &lt;code&gt;readClassDescriptor&lt;/code&gt;, should then be overridden to reconstitute the class descriptor from its custom stream representation. By default, this method writes class descriptors according to the format defined in the Object Serialization specification.</source>
          <target state="translated">지정된 클래스 디스크립터를 ObjectOutputStream에 씁니다. 클래스 디스크립터는 스트림에 기록 된 오브젝트 클래스를 식별하는 데 사용됩니다. ObjectOutputStream의 서브 클래스는이 메소드를 오버라이드 (override) 해 클래스 기술자가 직렬화 스트림에 기입 해지는 방법을 커스터마이즈 할 수 있습니다. 그런 다음 ObjectInputStream의 해당 메소드 인 &lt;code&gt;readClassDescriptor&lt;/code&gt; 를 재정 의하여 사용자 정의 스트림 표현에서 클래스 디스크립터를 재구성해야합니다. 기본적으로이 메소드는 오브젝트 직렬화 스펙에 정의 된 형식에 따라 클래스 디스크립터를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="561471854d9e617fefb6f5e631dd834e2f7a127c" translate="yes" xml:space="preserve">
          <source>Write the specified object to the ObjectOutputStream.</source>
          <target state="translated">Write the specified object to the ObjectOutputStream.</target>
        </trans-unit>
        <trans-unit id="677457df7e5bc80c0b6feefc69e3beb6b15a7123" translate="yes" xml:space="preserve">
          <source>Write the specified object to the ObjectOutputStream. The class of the object, the signature of the class, and the values of the non-transient and non-static fields of the class and all of its supertypes are written. Default serialization for a class can be overridden using the writeObject and the readObject methods. Objects referenced by this object are written transitively so that a complete equivalent graph of objects can be reconstructed by an ObjectInputStream.</source>
          <target state="translated">지정된 개체를 ObjectOutputStream에 씁니다. 객체의 클래스, 클래스의 서명, 클래스의 비 일시적 필드와 비 정적 필드의 값 및 모든 수퍼 타입이 작성됩니다. 클래스의 기본 직렬화는 writeObject 및 readObject 메소드를 사용하여 대체 할 수 있습니다. 이 객체가 참조하는 객체는 전 이적으로 작성되므로 ObjectInputStream으로 객체의 완전한 동등한 그래프를 재구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8c20a4b40326e735cd9da6418440d4414b1a4ab" translate="yes" xml:space="preserve">
          <source>Write the specified object to the output stream.</source>
          <target state="translated">Write the specified object to the output stream.</target>
        </trans-unit>
        <trans-unit id="625c55deeb63764ede0c1729277f79d569d6d1fa" translate="yes" xml:space="preserve">
          <source>Write the specified object to the output stream. The serialized form will denote a series of expressions, the combined effect of which will create an equivalent object when the input stream is read. By default, the object is assumed to be a &lt;em&gt;JavaBean&lt;/em&gt; with a nullary constructor, whose state is defined by the matching pairs of &quot;setter&quot; and &quot;getter&quot; methods returned by the Introspector.</source>
          <target state="translated">지정된 개체를 출력 스트림에 씁니다. 직렬화 된 형식은 일련의 표현식을 나타내며, 그 조합 된 효과는 입력 스트림을 읽을 때 동등한 오브젝트를 작성합니다. 기본적으로 객체는 nullary 생성자를 가진 &lt;em&gt;JavaBean&lt;/em&gt; 으로 가정되며 , 상태는 Introspector에서 반환 한 &quot;setter&quot;및 &quot;getter&quot;메서드와 일치하는 쌍으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="35fe4c369854ef11a28df02657f28c0c907503a3" translate="yes" xml:space="preserve">
          <source>Write this ICC_Profile to a file.</source>
          <target state="translated">Write this ICC_Profile to a file.</target>
        </trans-unit>
        <trans-unit id="e1d9c07bfd2efb9ad99f30ea021931a574f4f6d6" translate="yes" xml:space="preserve">
          <source>Write this ICC_Profile to an OutputStream.</source>
          <target state="translated">Write this ICC_Profile to an OutputStream.</target>
        </trans-unit>
        <trans-unit id="936da01feb2f096577e8365b734cb08599ce6a37" translate="yes" xml:space="preserve">
          <source>WriteAbortedException</source>
          <target state="translated">WriteAbortedException</target>
        </trans-unit>
        <trans-unit id="6248c802937f8babd7f472dab3a9ccaa3cd8ca1e" translate="yes" xml:space="preserve">
          <source>WriteAbortedException.getCause()</source>
          <target state="translated">WriteAbortedException.getCause()</target>
        </trans-unit>
        <trans-unit id="d927b7d3922dccb6d4373916a1a508a5f9825f5b" translate="yes" xml:space="preserve">
          <source>WriteAbortedException.getMessage()</source>
          <target state="translated">WriteAbortedException.getMessage()</target>
        </trans-unit>
        <trans-unit id="9ee45a046a695fc62952355259c464d3782298a5" translate="yes" xml:space="preserve">
          <source>WriteLock</source>
          <target state="translated">WriteLock</target>
        </trans-unit>
        <trans-unit id="7c5510f1ed33e3b93fd55caec8daa43bd1ce2d2f" translate="yes" xml:space="preserve">
          <source>WritePendingException</source>
          <target state="translated">WritePendingException</target>
        </trans-unit>
        <trans-unit id="5f435830a7c07f19c4072a88821b38028c3f69e6" translate="yes" xml:space="preserve">
          <source>Writer</source>
          <target state="translated">Writer</target>
        </trans-unit>
        <trans-unit id="3a612b47fe0eec805b37e580fcd5618c583e4cf4" translate="yes" xml:space="preserve">
          <source>Writer.append()</source>
          <target state="translated">Writer.append()</target>
        </trans-unit>
        <trans-unit id="b91c0ca8400fde6125b0c11f2497f37000c08a06" translate="yes" xml:space="preserve">
          <source>Writer.close()</source>
          <target state="translated">Writer.close()</target>
        </trans-unit>
        <trans-unit id="e0c57d77abf55ac12872750811814a29d64dcbfe" translate="yes" xml:space="preserve">
          <source>Writer.flush()</source>
          <target state="translated">Writer.flush()</target>
        </trans-unit>
        <trans-unit id="6b58bc364a56f8d61ed239ce03e81a9366cf0f8e" translate="yes" xml:space="preserve">
          <source>Writer.write()</source>
          <target state="translated">Writer.write()</target>
        </trans-unit>
        <trans-unit id="b2be28b744c30e1c5c5fb3a3d946aee604890aab" translate="yes" xml:space="preserve">
          <source>Writers should call &lt;code&gt;clearAbortRequest&lt;/code&gt; at the beginning of each write operation, and poll the value of &lt;code&gt;abortRequested&lt;/code&gt; regularly during the write.</source>
          <target state="translated">작성자는 각 쓰기 작업이 시작될 때 &lt;code&gt;clearAbortRequest&lt;/code&gt; 를 호출 하고 쓰기 중에 정기적으로 &lt;code&gt;abortRequested&lt;/code&gt; 의 값을 폴링해야합니다 .</target>
        </trans-unit>
        <trans-unit id="aecde5df091918dfeffcca27e002a97115f41c8d" translate="yes" xml:space="preserve">
          <source>Writers that do not make use of stream metadata (</source>
          <target state="translated">스트림 메타 데이터를 사용하지 않는 작성자 (</target>
        </trans-unit>
        <trans-unit id="2005d7caf2832e9b66c2ea6efe4c5aa8727e0190" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;b.length&lt;/code&gt; bytes from the specified byte array to this file output stream.</source>
          <target state="translated">쓰기 &lt;code&gt;b.length&lt;/code&gt; 를 파일 출력 스트림에 지정된 바이트 배열의 바이트.</target>
        </trans-unit>
        <trans-unit id="475a7013d71b2530ccf213898f664fa5353bdd4f" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;b.length&lt;/code&gt; bytes from the specified byte array to this file, starting at the current file pointer.</source>
          <target state="translated">현재 파일 포인터에서 시작하여 지정된 바이트 배열의 &lt;code&gt;b.length&lt;/code&gt; 바이트를이 파일에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="94ad317d7b0ac67a67357470a8dfe034c14d2f1b" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;b.length&lt;/code&gt; bytes from the specified byte array to this output stream.</source>
          <target state="translated">쓰기 &lt;code&gt;b.length&lt;/code&gt; 를 출력 스트림에 지정된 바이트 배열의 바이트.</target>
        </trans-unit>
        <trans-unit id="e624a17a648a4933d0e79844ab18e51cf30d0121" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;b.length&lt;/code&gt; bytes from the specified byte array to this output stream. The general contract for &lt;code&gt;write(b)&lt;/code&gt; is that it should have exactly the same effect as the call &lt;code&gt;write(b, 0, b.length)&lt;/code&gt;.</source>
          <target state="translated">쓰기 &lt;code&gt;b.length&lt;/code&gt; 를 출력 스트림에 지정된 바이트 배열의 바이트. &lt;code&gt;write(b)&lt;/code&gt; 의 일반적인 계약 은 call &lt;code&gt;write(b, 0, b.length)&lt;/code&gt; 와 정확히 동일한 효과를 가져야한다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="5534222ccd82110cbb41a1dc6f9a045112f429c8" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;b.length&lt;/code&gt; bytes to this output stream.</source>
          <target state="translated">&lt;code&gt;b.length&lt;/code&gt; 바이트를이 출력 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="c1d0bdd8cec5ae9557cd3f32c364cea21614290d" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from array &lt;code&gt;b&lt;/code&gt;, in order, to the output stream.</source>
          <target state="translated">Writes &lt;code&gt;len&lt;/code&gt; bytes from array &lt;code&gt;b&lt;/code&gt; , in order, to the output stream.</target>
        </trans-unit>
        <trans-unit id="9f0e3c34e35200d337717f421eb2f8500aba265d" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from array &lt;code&gt;b&lt;/code&gt;, in order, to the output stream. If &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. If &lt;code&gt;off&lt;/code&gt; is negative, or &lt;code&gt;len&lt;/code&gt; is negative, or &lt;code&gt;off+len&lt;/code&gt; is greater than the length of the array &lt;code&gt;b&lt;/code&gt;, then an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; is thrown. If &lt;code&gt;len&lt;/code&gt; is zero, then no bytes are written. Otherwise, the byte &lt;code&gt;b[off]&lt;/code&gt; is written first, then &lt;code&gt;b[off+1]&lt;/code&gt;, and so on; the last byte written is &lt;code&gt;b[off+len-1]&lt;/code&gt;.</source>
          <target state="translated">기입 &lt;code&gt;len&lt;/code&gt; 어레이에서 바이트 &lt;code&gt;b&lt;/code&gt; 출력 스트림 순서. 경우 &lt;code&gt;b&lt;/code&gt; 는 이다 &lt;code&gt;null&lt;/code&gt; 하는 &lt;code&gt;NullPointerException&lt;/code&gt; 가 슬로우됩니다. 경우 &lt;code&gt;off&lt;/code&gt; 음수 또는 &lt;code&gt;len&lt;/code&gt; 음수 또는 &lt;code&gt;off+len&lt;/code&gt; 어레이의 길이보다 큰 경우 &lt;code&gt;b&lt;/code&gt; , 다음 &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; 발생된다. 경우 &lt;code&gt;len&lt;/code&gt; 제로, 다음, 바이트가 기록되지 않습니다. 그렇지 않으면 바이트 &lt;code&gt;b[off]&lt;/code&gt; 가 먼저 기록 된 다음 &lt;code&gt;b[off+1]&lt;/code&gt; 등이 기록됩니다. 기록 된 마지막 바이트는 &lt;code&gt;b[off+len-1]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b7493c7432d9d918d61b6c3585fce1581bbd60fd" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified &lt;code&gt;byte&lt;/code&gt; array starting at offset &lt;code&gt;off&lt;/code&gt; to this output stream.</source>
          <target state="translated">오프셋 &lt;code&gt;off&lt;/code&gt; 에서 시작 하여 지정된 &lt;code&gt;byte&lt;/code&gt; 배열 에서 &lt;code&gt;len&lt;/code&gt; 바이트 를이 출력 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="f7ed92cd5964e41ce5935be590a970273e849d1d" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to the underlying output stream.</source>
          <target state="translated">Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to the underlying output stream.</target>
        </trans-unit>
        <trans-unit id="b90204d909dc82fb7e5d3bbd0045ef72ec9d3faa" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to the underlying output stream. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="translated">오프셋 &lt;code&gt;off&lt;/code&gt; 에서 시작하여 지정된 바이트 배열에서 &lt;code&gt;len&lt;/code&gt; 바이트를 기본 출력 스트림에 씁니다 . 예외가 발생하지 않으면 &lt;code&gt;written&lt;/code&gt; 된 카운터 는 &lt;code&gt;len&lt;/code&gt; 씩 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="2a8058c4fe448481ba9f9667cd3950b5d1ac6e95" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this &lt;code&gt;ByteArrayOutputStream&lt;/code&gt;.</source>
          <target state="translated">Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this &lt;code&gt;ByteArrayOutputStream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59c2ffa0a4decb3975339af3e1141064e1cf801f" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this buffered output stream.</source>
          <target state="translated">오프셋 &lt;code&gt;off&lt;/code&gt; 에서 시작하여 지정된 바이트 배열에서 &lt;code&gt;len&lt;/code&gt; 바이트 를이 버퍼링 된 출력 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="df6022a3c457bef633289c3b1eea0afc7d2501d2" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this byte array output stream.</source>
          <target state="translated">기입 &lt;code&gt;len&lt;/code&gt; 지정된 바이트 배열의 바이트 오프셋 &lt;code&gt;off&lt;/code&gt; 바이트 배열 출력 스트림.</target>
        </trans-unit>
        <trans-unit id="f47416c1bae43204d3ed0a20b6c785b1c8477de5" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this file output stream.</source>
          <target state="translated">오프셋 &lt;code&gt;off&lt;/code&gt; 에서 시작하여 지정된 바이트 배열에서 &lt;code&gt;len&lt;/code&gt; 바이트 를이 파일 출력 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="7c910c38a8bd891a83fe0ebe30f88a0297205886" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this file.</source>
          <target state="translated">오프셋 &lt;code&gt;off&lt;/code&gt; 에서 시작하여 지정된 바이트 배열에서 &lt;code&gt;len&lt;/code&gt; 바이트 를이 파일에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="38c566418d538790a5eeae487d789010f4523286" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this output stream.</source>
          <target state="translated">오프셋 &lt;code&gt;off&lt;/code&gt; 에서 시작하여 지정된 바이트 배열에서 &lt;code&gt;len&lt;/code&gt; 바이트 를이 출력 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="4f851862b3139a3a60a822bd0fb6f38f95f98ef1" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this output stream. The general contract for &lt;code&gt;write(b, off, len)&lt;/code&gt; is that some of the bytes in the array &lt;code&gt;b&lt;/code&gt; are written to the output stream in order; element &lt;code&gt;b[off]&lt;/code&gt; is the first byte written and &lt;code&gt;b[off+len-1]&lt;/code&gt; is the last byte written by this operation.</source>
          <target state="translated">오프셋 &lt;code&gt;off&lt;/code&gt; 에서 시작하여 지정된 바이트 배열에서 &lt;code&gt;len&lt;/code&gt; 바이트 를이 출력 스트림에 씁니다 . &lt;code&gt;write(b, off, len)&lt;/code&gt; 의 일반적인 계약 은 배열 &lt;code&gt;b&lt;/code&gt; 의 일부 바이트 가 순서대로 출력 스트림에 기록된다는 것입니다. 요소 &lt;code&gt;b[off]&lt;/code&gt; 는 기록 된 첫 번째 바이트이고 &lt;code&gt;b[off+len-1]&lt;/code&gt; 은이 연산에 의해 기록 된 마지막 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="c116a4517eaa68fb9db4dc9686e30823cb0481f2" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this piped output stream.</source>
          <target state="translated">Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this piped output stream.</target>
        </trans-unit>
        <trans-unit id="131be3d9bd6c996bc02177007f5a10d152efcafd" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this piped output stream. This method blocks until all the bytes are written to the output stream.</source>
          <target state="translated">오프셋 &lt;code&gt;off&lt;/code&gt; 에서 시작하여 지정된 바이트 배열에서 &lt;code&gt;len&lt;/code&gt; 바이트 를이 파이프 된 출력 스트림에 씁니다 . 이 메소드는 모든 바이트가 출력 스트림에 기록 될 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="629af15734b4e0f5ce6696e3b16a10fcb7aa816f" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this stream.</source>
          <target state="translated">Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this stream.</target>
        </trans-unit>
        <trans-unit id="1cf544354bc9caf492bbe86ef1abd2a2a4934186" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this stream. If automatic flushing is enabled then the &lt;code&gt;flush&lt;/code&gt; method will be invoked.</source>
          <target state="translated">오프셋 &lt;code&gt;off&lt;/code&gt; 에서 시작하여 지정된 바이트 배열에서 &lt;code&gt;len&lt;/code&gt; 바이트 를이 스트림에 씁니다 . 자동 플러싱이 활성화 된 경우 &lt;code&gt;flush&lt;/code&gt; 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0325a3c22e720aad80e29d337fb29a1216024c8d" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; characters from the specified character array starting at offset &lt;code&gt;off&lt;/code&gt; to this piped output stream.</source>
          <target state="translated">Writes &lt;code&gt;len&lt;/code&gt; characters from the specified character array starting at offset &lt;code&gt;off&lt;/code&gt; to this piped output stream.</target>
        </trans-unit>
        <trans-unit id="f574fcc90500ee21973d3a8593ee72900cccc153" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; characters from the specified character array starting at offset &lt;code&gt;off&lt;/code&gt; to this piped output stream. This method blocks until all the characters are written to the output stream. If a thread was reading data characters from the connected piped input stream, but the thread is no longer alive, then an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">오프셋 &lt;code&gt;off&lt;/code&gt; 에서 시작하여 지정된 문자 배열에서 &lt;code&gt;len&lt;/code&gt; 파이프 문자 를이 파이프 된 출력 스트림에 씁니다 . 이 메소드는 모든 문자가 출력 스트림에 기록 될 때까지 차단됩니다. 스레드가 연결된 파이프 된 입력 스트림에서 데이터 문자를 읽었지만 스레드가 더 이상 &lt;code&gt;IOException&lt;/code&gt; 가 아닌 경우 IOException 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f01163c247ccac36f98237d94dc0b5ab8aaa2406" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; characters of &lt;code&gt;str&lt;/code&gt;, starting at character &lt;code&gt;offset&lt;/code&gt;, to the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;Clob&lt;/code&gt; represents.</source>
          <target state="translated">Writes &lt;code&gt;len&lt;/code&gt; characters of &lt;code&gt;str&lt;/code&gt; , starting at character &lt;code&gt;offset&lt;/code&gt; , to the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;Clob&lt;/code&gt; represents.</target>
        </trans-unit>
        <trans-unit id="89daa9fc4ab3d15a77384b157392739823e5c257" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; characters of &lt;code&gt;str&lt;/code&gt;, starting at character &lt;code&gt;offset&lt;/code&gt;, to the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;Clob&lt;/code&gt; represents. The string will overwrite the existing characters in the &lt;code&gt;Clob&lt;/code&gt; object starting at the position &lt;code&gt;pos&lt;/code&gt;. If the end of the &lt;code&gt;Clob&lt;/code&gt; value is reached while writing the given string, then the length of the &lt;code&gt;Clob&lt;/code&gt; value will be increased to accommodate the extra characters.</source>
          <target state="translated">Writes &lt;code&gt;len&lt;/code&gt; characters of &lt;code&gt;str&lt;/code&gt; , starting at character &lt;code&gt;offset&lt;/code&gt; , to the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;Clob&lt;/code&gt; represents. The string will overwrite the existing characters in the &lt;code&gt;Clob&lt;/code&gt; object starting at the position &lt;code&gt;pos&lt;/code&gt; . If the end of the &lt;code&gt;Clob&lt;/code&gt; value is reached while writing the given string, then the length of the &lt;code&gt;Clob&lt;/code&gt; value will be increased to accommodate the extra characters.</target>
        </trans-unit>
        <trans-unit id="851de5604a486c60e5125c7a29a7e550895176b8" translate="yes" xml:space="preserve">
          <source>Writes A Portion of an array of characters.</source>
          <target state="translated">문자 배열의 일부를 씁니다.</target>
        </trans-unit>
        <trans-unit id="a283b0703eab7e9782450eee6c79c7aaaa9c7957" translate="yes" xml:space="preserve">
          <source>Writes a 16 bit char.</source>
          <target state="translated">16 비트 문자를 씁니다.</target>
        </trans-unit>
        <trans-unit id="ca54d5eb5995c8bab76c02647925ee1f9521c712" translate="yes" xml:space="preserve">
          <source>Writes a 16 bit short.</source>
          <target state="translated">16 비트를 짧게 씁니다.</target>
        </trans-unit>
        <trans-unit id="057353e65922065a994b45703b910bf34047ab73" translate="yes" xml:space="preserve">
          <source>Writes a 32 bit float.</source>
          <target state="translated">32 비트 부동 소수점을 씁니다.</target>
        </trans-unit>
        <trans-unit id="c587a1942eeaf8dca64d6b527fb861b258ae3eb4" translate="yes" xml:space="preserve">
          <source>Writes a 32 bit int.</source>
          <target state="translated">32 비트 int를 씁니다.</target>
        </trans-unit>
        <trans-unit id="6071f86794e94e93ef2903e2a285a17fb6ff2270" translate="yes" xml:space="preserve">
          <source>Writes a 64 bit double.</source>
          <target state="translated">64 비트 double을 씁니다.</target>
        </trans-unit>
        <trans-unit id="ff1fe9b0868e3a400b0850e8cb5d3afef880236e" translate="yes" xml:space="preserve">
          <source>Writes a 64 bit long.</source>
          <target state="translated">64 비트 길이를 씁니다.</target>
        </trans-unit>
        <trans-unit id="144135fe6a8176a2fd809e5dce65a41b9d674878" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;Blob&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">Writes a &lt;code&gt;Blob&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="c56efcb35978d3f06a812ffb670b34f94389cacc" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;Blob&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to a serializable &lt;code&gt;SerialBlob&lt;/code&gt; SQL &lt;code&gt;BLOB&lt;/code&gt; value before returning it to the database.</source>
          <target state="translated">Writes a &lt;code&gt;Blob&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to a serializable &lt;code&gt;SerialBlob&lt;/code&gt; SQL &lt;code&gt;BLOB&lt;/code&gt; value before returning it to the database.</target>
        </trans-unit>
        <trans-unit id="27ea08fa6afe5ea479439001df19499ba21a8430" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;Clob&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">Writes a &lt;code&gt;Clob&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="f08e5c41b2c35f3a884d25f9d8a8bfb34ced6103" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;Clob&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to a serializable &lt;code&gt;SerialClob&lt;/code&gt; SQL &lt;code&gt;CLOB&lt;/code&gt; value before returning it to the database.</source>
          <target state="translated">Writes a &lt;code&gt;Clob&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to a serializable &lt;code&gt;SerialClob&lt;/code&gt; SQL &lt;code&gt;CLOB&lt;/code&gt; value before returning it to the database.</target>
        </trans-unit>
        <trans-unit id="798be35dcc4f07fd6b0ae715272f89610fd64df1" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;Ref&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">Writes a &lt;code&gt;Ref&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="636814d8cf3b67bf23c99b7f771ee075f88a3374" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;Ref&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to a serializable &lt;code&gt;SerialRef&lt;/code&gt; SQL &lt;code&gt;REF&lt;/code&gt; value before returning it to the database.</source>
          <target state="translated">Writes a &lt;code&gt;Ref&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to a serializable &lt;code&gt;SerialRef&lt;/code&gt; SQL &lt;code&gt;REF&lt;/code&gt; value before returning it to the database.</target>
        </trans-unit>
        <trans-unit id="7f8faba2a0fd1366ce7b8632168b17391d486b5e" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;String&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">Writes a &lt;code&gt;String&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="1d363669fd2b9a7fa973904d4dc302d0c14ca56c" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;String&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;CHAR&lt;/code&gt;, &lt;code&gt;VARCHAR&lt;/code&gt;, or &lt;code&gt;LONGVARCHAR&lt;/code&gt; before returning it to the database.</source>
          <target state="translated">Writes a &lt;code&gt;String&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;CHAR&lt;/code&gt; , &lt;code&gt;VARCHAR&lt;/code&gt; , or &lt;code&gt;LONGVARCHAR&lt;/code&gt; before returning it to the database.</target>
        </trans-unit>
        <trans-unit id="a3c82abcc2a6031cf5de89c3f40ed0c7b95e4503" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;Struct&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">Writes a &lt;code&gt;Struct&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="35bce86c88fab81328de73526546c89a47a0e4b2" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;Struct&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts this value to an SQL structured type before returning it to the database.</source>
          <target state="translated">Writes a &lt;code&gt;Struct&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts this value to an SQL structured type before returning it to the database.</target>
        </trans-unit>
        <trans-unit id="1fa37549b16c8a2519ce9a3687936f0f07666745" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">Writes a &lt;code&gt;boolean&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="61ea925b355afa858794bc3e803f693c259afae1" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;BIT&lt;/code&gt; before returning it to the database.</source>
          <target state="translated">Writes a &lt;code&gt;boolean&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;BIT&lt;/code&gt; before returning it to the database.</target>
        </trans-unit>
        <trans-unit id="155670a01232f738dceb009105519f94cd2248c1" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; to the file as a one-byte value.</source>
          <target state="translated">Writes a &lt;code&gt;boolean&lt;/code&gt; to the file as a one-byte value.</target>
        </trans-unit>
        <trans-unit id="6349876fc09182b7513e2eb1fd4bd3e55d4b98d6" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; to the file as a one-byte value. The value &lt;code&gt;true&lt;/code&gt; is written out as the value &lt;code&gt;(byte)1&lt;/code&gt;; the value &lt;code&gt;false&lt;/code&gt; is written out as the value &lt;code&gt;(byte)0&lt;/code&gt;. The write starts at the current position of the file pointer.</source>
          <target state="translated">파일에 &lt;code&gt;boolean&lt;/code&gt; 을 1 바이트 값으로 씁니다 . &lt;code&gt;true&lt;/code&gt; 값 은 값 &lt;code&gt;(byte)1&lt;/code&gt; 으로 기록됩니다 . &lt;code&gt;false&lt;/code&gt; 값 은 값 &lt;code&gt;(byte)0&lt;/code&gt; 으로 기록됩니다 . 쓰기는 파일 포인터의 현재 위치에서 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="12b530b90dc8d6c34bfe7ce905c795548bb350b9" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; to the underlying output stream as a 1-byte value.</source>
          <target state="translated">Writes a &lt;code&gt;boolean&lt;/code&gt; to the underlying output stream as a 1-byte value.</target>
        </trans-unit>
        <trans-unit id="0cf2d9ed9e1c02ddbe3d89c723dcba2e53e42da9" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; to the underlying output stream as a 1-byte value. The value &lt;code&gt;true&lt;/code&gt; is written out as the value &lt;code&gt;(byte)1&lt;/code&gt;; the value &lt;code&gt;false&lt;/code&gt; is written out as the value &lt;code&gt;(byte)0&lt;/code&gt;. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">기본 출력 스트림에 &lt;code&gt;boolean&lt;/code&gt; 을 1 바이트 값으로 씁니다 . &lt;code&gt;true&lt;/code&gt; 값 은 값 &lt;code&gt;(byte)1&lt;/code&gt; 으로 기록됩니다 . &lt;code&gt;false&lt;/code&gt; 값 은 값 &lt;code&gt;(byte)0&lt;/code&gt; 으로 기록됩니다 . 예외가 발생하지 않으면 &lt;code&gt;written&lt;/code&gt; 된 카운터 는 &lt;code&gt;1&lt;/code&gt; 씩 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="ccab39520060070dde762a951b5e9f4cef217922" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; value to the stream.</source>
          <target state="translated">Writes a &lt;code&gt;boolean&lt;/code&gt; value to the stream.</target>
        </trans-unit>
        <trans-unit id="95726257c14b22438de24b52e49b6a02de7eab08" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; value to the stream. If &lt;code&gt;v&lt;/code&gt; is true, the value &lt;code&gt;(byte)1&lt;/code&gt; is written; if &lt;code&gt;v&lt;/code&gt; is false, the value &lt;code&gt;(byte)0&lt;/code&gt; is written.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; 값을 스트림에 씁니다 . 경우 &lt;code&gt;v&lt;/code&gt; 참 값 &lt;code&gt;(byte)1&lt;/code&gt; 기입; 만약 &lt;code&gt;v&lt;/code&gt; 거짓 값 &lt;code&gt;(byte)0&lt;/code&gt; 기입된다.</target>
        </trans-unit>
        <trans-unit id="7954ffaaa34e2883ad4a1325fb8863bb017aa172" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; value to this output stream.</source>
          <target state="translated">Writes a &lt;code&gt;boolean&lt;/code&gt; value to this output stream.</target>
        </trans-unit>
        <trans-unit id="ab4b1822b1f04ea72708cfe5295251a6c88b3464" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; value to this output stream. If the argument &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the value &lt;code&gt;(byte)1&lt;/code&gt; is written; if &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the value &lt;code&gt;(byte)0&lt;/code&gt; is written. The byte written by this method may be read by the &lt;code&gt;readBoolean&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt;, which will then return a &lt;code&gt;boolean&lt;/code&gt; equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">이 출력 스트림에 &lt;code&gt;boolean&lt;/code&gt; 값을 씁니다 . 인수 &lt;code&gt;v&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 이면 값 &lt;code&gt;(byte)1&lt;/code&gt; 이 기록됩니다. 만약 &lt;code&gt;v&lt;/code&gt; 인 &lt;code&gt;false&lt;/code&gt; 값 &lt;code&gt;(byte)0&lt;/code&gt; 기입된다. 이 메소드에 의해 쓰여진 바이트는 &lt;code&gt;DataInput&lt;/code&gt; 인터페이스 의 &lt;code&gt;readBoolean&lt;/code&gt; 메소드에 의해 읽힐 수 있으며 , 그러면 &lt;code&gt;v&lt;/code&gt; 와 동일한 &lt;code&gt;boolean&lt;/code&gt; 값이 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="cc0bdbc304ed1a878f530d104ecb981483b8abc6" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;byte&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">Writes a &lt;code&gt;byte&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="d24a0d82e4ec0d4586e61016d6bb4cb55ac02d93" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;byte&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;BIT&lt;/code&gt; before returning it to the database.</source>
          <target state="translated">Writes a &lt;code&gt;byte&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;BIT&lt;/code&gt; before returning it to the database.</target>
        </trans-unit>
        <trans-unit id="226b956afa02c16af4e38b4a4db3a94bf6b32311" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;byte&lt;/code&gt; to the file as a one-byte value.</source>
          <target state="translated">Writes a &lt;code&gt;byte&lt;/code&gt; to the file as a one-byte value.</target>
        </trans-unit>
        <trans-unit id="f2a444c3352131269a2014fd441028ab3058f1b7" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;byte&lt;/code&gt; to the file as a one-byte value. The write starts at the current position of the file pointer.</source>
          <target state="translated">파일에 &lt;code&gt;byte&lt;/code&gt; 를 1 바이트 값으로 씁니다 . 쓰기는 파일 포인터의 현재 위치에서 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="a939e11e65fc3a32a69989756481896e92055cac" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;char&lt;/code&gt; to the file as a two-byte value, high byte first.</source>
          <target state="translated">Writes a &lt;code&gt;char&lt;/code&gt; to the file as a two-byte value, high byte first.</target>
        </trans-unit>
        <trans-unit id="09a398562bfe5665a5c3cb088f44ff93b0c13218" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;char&lt;/code&gt; to the file as a two-byte value, high byte first. The write starts at the current position of the file pointer.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 를 파일에 2 바이트 값으로 상위 바이트부터 씁니다 . 쓰기는 파일 포인터의 현재 위치에서 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="7a8024ee2d733a5dde0d484821170eb30275a356" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;char&lt;/code&gt; to the underlying output stream as a 2-byte value, high byte first.</source>
          <target state="translated">Writes a &lt;code&gt;char&lt;/code&gt; to the underlying output stream as a 2-byte value, high byte first.</target>
        </trans-unit>
        <trans-unit id="b0f1c2dfbde644fbb6c4c155f32906af8e2ee5c6" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;char&lt;/code&gt; to the underlying output stream as a 2-byte value, high byte first. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">기입 &lt;code&gt;char&lt;/code&gt; 2 바이트 값이 먼저 상위 바이트로 기본 출력 스트림. 예외가 발생하지 않으면 &lt;code&gt;written&lt;/code&gt; 된 카운터 는 &lt;code&gt;2&lt;/code&gt; 씩 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="1bbc6d917ff455c037781056578d00e4f4b388cd" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;char&lt;/code&gt; value, which is comprised of two bytes, to the output stream.</source>
          <target state="translated">Writes a &lt;code&gt;char&lt;/code&gt; value, which is comprised of two bytes, to the output stream.</target>
        </trans-unit>
        <trans-unit id="e93587e1f09c65fb748c39e365179e015b1c4a2e" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;char&lt;/code&gt; value, which is comprised of two bytes, to the output stream. The byte values to be written, in the order shown, are:</source>
          <target state="translated">2 바이트로 구성된 &lt;code&gt;char&lt;/code&gt; 값을 출력 스트림에 씁니다 . 표시된 순서대로 기록 될 바이트 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5da554cad4ed11876c2f538fc7a916a28ed5a347" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;double&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">Writes a &lt;code&gt;double&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="90b842735b4381060da9c4b5e14aac5d144420c4" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;double&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;DOUBLE&lt;/code&gt; before returning it to the database.</source>
          <target state="translated">Writes a &lt;code&gt;double&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;DOUBLE&lt;/code&gt; before returning it to the database.</target>
        </trans-unit>
        <trans-unit id="6bbd7c92457324520d422019ae1f2be3d912115c" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;double&lt;/code&gt; value, which is comprised of eight bytes, to the output stream.</source>
          <target state="translated">Writes a &lt;code&gt;double&lt;/code&gt; value, which is comprised of eight bytes, to the output stream.</target>
        </trans-unit>
        <trans-unit id="f9cf095e7c43223f0750c5a4985360abd3124032" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;double&lt;/code&gt; value, which is comprised of eight bytes, to the output stream. It does this as if it first converts this &lt;code&gt;double&lt;/code&gt; value to a &lt;code&gt;long&lt;/code&gt; in exactly the manner of the &lt;code&gt;Double.doubleToLongBits&lt;/code&gt; method and then writes the &lt;code&gt;long&lt;/code&gt; value in exactly the manner of the &lt;code&gt;writeLong&lt;/code&gt; method. The bytes written by this method may be read by the &lt;code&gt;readDouble&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt;, which will then return a &lt;code&gt;double&lt;/code&gt; equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">8 바이트로 구성된 &lt;code&gt;double&lt;/code&gt; 값을 출력 스트림에 씁니다 . 마치 &lt;code&gt;Double.doubleToLongBits&lt;/code&gt; 메서드와 같은 방식 으로이 &lt;code&gt;double&lt;/code&gt; 값을 &lt;code&gt;long&lt;/code&gt; 으로 변환 한 다음 &lt;code&gt;writeLong&lt;/code&gt; 메서드 와 정확히 같은 방식으로 &lt;code&gt;long&lt;/code&gt; 값 을 쓰는 것처럼이 작업 을 수행합니다 . 이 메소드에 의해 쓰여진 바이트는 &lt;code&gt;DataInput&lt;/code&gt; 인터페이스 의 &lt;code&gt;readDouble&lt;/code&gt; 메소드에 의해 읽힐 수 있으며 , 그러면 &lt;code&gt;v&lt;/code&gt; 와 동일한 &lt;code&gt;double&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="a947a1cfaafe404e203be28b1b2303e0b7c673d7" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;double&lt;/code&gt; value, which is comprised of four bytes, to the output stream.</source>
          <target state="translated">Writes a &lt;code&gt;double&lt;/code&gt; value, which is comprised of four bytes, to the output stream.</target>
        </trans-unit>
        <trans-unit id="a4d147e0e0d772cce4f1c826771d88ee33f93033" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;double&lt;/code&gt; value, which is comprised of four bytes, to the output stream. It does this as if it first converts this &lt;code&gt;double&lt;/code&gt; value to a &lt;code&gt;long&lt;/code&gt; in exactly the manner of the &lt;code&gt;Double.doubleToLongBits&lt;/code&gt; method and then writes the long value in exactly the manner of the &lt;code&gt;writeLong&lt;/code&gt; method.</source>
          <target state="translated">Writes a &lt;code&gt;double&lt;/code&gt; value, which is comprised of four bytes, to the output stream. It does this as if it first converts this &lt;code&gt;double&lt;/code&gt; value to a &lt;code&gt;long&lt;/code&gt; in exactly the manner of the &lt;code&gt;Double.doubleToLongBits&lt;/code&gt; method and then writes the long value in exactly the manner of the &lt;code&gt;writeLong&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="74c74f862659641ca760a0b4f5dbfe586ef1a16a" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;double&lt;/code&gt; value, which is comprised of four bytes, to the output stream. It does this as if it first converts this &lt;code&gt;double&lt;/code&gt; value to an &lt;code&gt;long&lt;/code&gt; in exactly the manner of the &lt;code&gt;Double.doubleToLongBits&lt;/code&gt; method and then writes the long value in exactly the manner of the &lt;code&gt;writeLong&lt;/code&gt; method.</source>
          <target state="translated">4 바이트로 구성된 &lt;code&gt;double&lt;/code&gt; 값을 출력 스트림에 씁니다 . 그것은 먼저 변환이 것처럼이 않는 &lt;code&gt;double&lt;/code&gt; 내지 An 값 &lt;code&gt;long&lt;/code&gt; 의 정확히 방식 &lt;code&gt;Double.doubleToLongBits&lt;/code&gt; 용 의 완전히 같은 방법으로 긴 값을 기록하고 다음 방법 &lt;code&gt;writeLong&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="696fcd25e8c07d56053db6ad276a63ec4ce34071" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;float&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">Writes a &lt;code&gt;float&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="e425d4085560efb681f434759145902b95c308e1" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;float&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;REAL&lt;/code&gt; before returning it to the database.</source>
          <target state="translated">Writes a &lt;code&gt;float&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;REAL&lt;/code&gt; before returning it to the database.</target>
        </trans-unit>
        <trans-unit id="b46ad218b9afdb0674da63775c5ae864b605f115" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;float&lt;/code&gt; value, which is comprised of four bytes, to the output stream.</source>
          <target state="translated">Writes a &lt;code&gt;float&lt;/code&gt; value, which is comprised of four bytes, to the output stream.</target>
        </trans-unit>
        <trans-unit id="de7505d5b28cd6dc24eb7936640d871233ddd0a4" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;float&lt;/code&gt; value, which is comprised of four bytes, to the output stream. It does this as if it first converts this &lt;code&gt;float&lt;/code&gt; value to an &lt;code&gt;int&lt;/code&gt; in exactly the manner of the &lt;code&gt;Float.floatToIntBits&lt;/code&gt; method and then writes the &lt;code&gt;int&lt;/code&gt; value in exactly the manner of the &lt;code&gt;writeInt&lt;/code&gt; method. The bytes written by this method may be read by the &lt;code&gt;readFloat&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt;, which will then return a &lt;code&gt;float&lt;/code&gt; equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">4 바이트로 구성된 &lt;code&gt;float&lt;/code&gt; 값을 출력 스트림에 씁니다 . &lt;code&gt;Float.floatToIntBits&lt;/code&gt; 메서드와 같은 방식 으로이 &lt;code&gt;float&lt;/code&gt; 값을 &lt;code&gt;int&lt;/code&gt; 로 변환 한 다음 &lt;code&gt;writeInt&lt;/code&gt; 메서드 와 정확히 같은 방식으로 &lt;code&gt;int&lt;/code&gt; 값 을 쓰는 것처럼이 작업 을 수행합니다 . 이 메소드에 의해 쓰여진 바이트는 &lt;code&gt;DataInput&lt;/code&gt; 인터페이스 의 &lt;code&gt;readFloat&lt;/code&gt; 메소드에 의해 읽힐 수 있습니다. 그러면 &lt;code&gt;v&lt;/code&gt; 와 동일한 &lt;code&gt;float&lt;/code&gt; 가 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="a5bc045873743c0ed400214abeb97588134df17b" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;float&lt;/code&gt; value, which is comprised of four bytes, to the output stream. It does this as if it first converts this &lt;code&gt;float&lt;/code&gt; value to an &lt;code&gt;int&lt;/code&gt; in exactly the manner of the &lt;code&gt;Float.floatToIntBits&lt;/code&gt; method and then writes the int value in exactly the manner of the &lt;code&gt;writeInt&lt;/code&gt; method.</source>
          <target state="translated">4 바이트로 구성된 &lt;code&gt;float&lt;/code&gt; 값을 출력 스트림에 씁니다 . &lt;code&gt;Float.floatToIntBits&lt;/code&gt; 메서드와 같은 방식 으로이 &lt;code&gt;float&lt;/code&gt; 값을 &lt;code&gt;int&lt;/code&gt; 로 변환 한 다음 &lt;code&gt;writeInt&lt;/code&gt; 메서드 와 정확히 같은 방식으로 int 값을 쓰는 것처럼이 작업을 수행합니다 .</target>
        </trans-unit>
        <trans-unit id="c83ea96896ae8f5436a6aaa4859236c2aaf1ffec" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;java.math.BigDecimal&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">Writes a &lt;code&gt;java.math.BigDecimal&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="c4b017c54fe11f7471c30be1a56fe857dd74f0f6" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;java.math.BigDecimal&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;NUMERIC&lt;/code&gt; before returning it to the database.</source>
          <target state="translated">Writes a &lt;code&gt;java.math.BigDecimal&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;NUMERIC&lt;/code&gt; before returning it to the database.</target>
        </trans-unit>
        <trans-unit id="452031f5ee72921a288236c0b6a26e63a6a7bbc9" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;java.sql.Date&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">Writes a &lt;code&gt;java.sql.Date&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="53464c77dc827a0b2303547abdc64eec0dc61db6" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;java.sql.Date&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;DATE&lt;/code&gt; before returning it to the database.</source>
          <target state="translated">Writes a &lt;code&gt;java.sql.Date&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;DATE&lt;/code&gt; before returning it to the database.</target>
        </trans-unit>
        <trans-unit id="b620918c71921bd543a3ee3ac81b3d78236ed1eb" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;java.sql.Time&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">Writes a &lt;code&gt;java.sql.Time&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="55188659110941d98ac08fcc76d1a090d472b2c1" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;java.sql.Time&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;TIME&lt;/code&gt; before returning it to the database.</source>
          <target state="translated">Writes a &lt;code&gt;java.sql.Time&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;TIME&lt;/code&gt; before returning it to the database.</target>
        </trans-unit>
        <trans-unit id="10c24d5b17a0e026c5d7d374aa2559609ace759c" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;java.sql.Timestamp&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">Writes a &lt;code&gt;java.sql.Timestamp&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="a591b58703a67375938736a34ac6cdf53113b82d" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;java.sql.Timestamp&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;TIMESTAMP&lt;/code&gt; before returning it to the database.</source>
          <target state="translated">Writes a &lt;code&gt;java.sql.Timestamp&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;TIMESTAMP&lt;/code&gt; before returning it to the database.</target>
        </trans-unit>
        <trans-unit id="a7a6c04ca4913bbb6d71dcdb430bdadb44602d6f" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">Writes a &lt;code&gt;long&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="a5e41834abe596a0f73b3cafbac1894059f99cb6" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;BIGINT&lt;/code&gt; before returning it to the database.</source>
          <target state="translated">Writes a &lt;code&gt;long&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;BIGINT&lt;/code&gt; before returning it to the database.</target>
        </trans-unit>
        <trans-unit id="8895918fb39b48000205955fa45fde016f0c3d15" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; to the file as eight bytes, high byte first.</source>
          <target state="translated">Writes a &lt;code&gt;long&lt;/code&gt; to the file as eight bytes, high byte first.</target>
        </trans-unit>
        <trans-unit id="55c528963d4d2b5dc906130b6855614969aa9489" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; to the file as eight bytes, high byte first. The write starts at the current position of the file pointer.</source>
          <target state="translated">기록 &lt;code&gt;long&lt;/code&gt; 먼저 파일에 여덟 바이트 값을. 쓰기는 파일 포인터의 현재 위치에서 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="611eb1e8ef355d7f42537bc6bae8d758ff6c8171" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; to the underlying output stream as eight bytes, high byte first.</source>
          <target state="translated">Writes a &lt;code&gt;long&lt;/code&gt; to the underlying output stream as eight bytes, high byte first.</target>
        </trans-unit>
        <trans-unit id="bc6accb6c7c3e908a144c301fc776e1a0598feb1" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; to the underlying output stream as eight bytes, high byte first. In no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="translated">기입 &lt;code&gt;long&lt;/code&gt; 처음 8 바이트 값으로서 기본 출력 스트림. 예외는 발생하지 않으며 &lt;code&gt;written&lt;/code&gt; 된 카운터 는 &lt;code&gt;8&lt;/code&gt; 씩 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="6c456969b969a70b0bafd0d849d8758576665b3e" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; value, which is comprised of eight bytes, to the output stream.</source>
          <target state="translated">8 바이트로 구성된 &lt;code&gt;long&lt;/code&gt; 값을 출력 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="90977f382f90c1a5eef7e30f250984dbbf685fc0" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; value, which is comprised of eight bytes, to the output stream. The byte values to be written, in the order shown, are:</source>
          <target state="translated">8 바이트로 구성된 &lt;code&gt;long&lt;/code&gt; 값을 출력 스트림에 씁니다 . 표시된 순서대로 기록 될 바이트 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1b73432a8b187a60ddbd8f3ea3cfe32efefece8a" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;short&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;SQLOutputImpl&lt;/code&gt; 오브젝트에 대한 &lt;code&gt;short&lt;/code&gt; Java 프로그래밍 언어를 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="c54483bbc01a1757da60b9e15f662ba88b52cf5f" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;short&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;SMALLINT&lt;/code&gt; before returning it to the database.</source>
          <target state="translated">이 &lt;code&gt;SQLOutputImpl&lt;/code&gt; 오브젝트에 대한 &lt;code&gt;short&lt;/code&gt; Java 프로그래밍 언어를 작성 합니다. 드라이버는이를 데이터베이스로 반환하기 전에 SQL &lt;code&gt;SMALLINT&lt;/code&gt; 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="88192947ad3bae1375cd61982af7c10dfe7bf288" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;short&lt;/code&gt; to the file as two bytes, high byte first.</source>
          <target state="translated">기입 &lt;code&gt;short&lt;/code&gt; 처음 두 바이트 값으로서 파일에있다.</target>
        </trans-unit>
        <trans-unit id="08c5c0b7c3097cdebd2722567ae9d781529b69f1" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;short&lt;/code&gt; to the file as two bytes, high byte first. The write starts at the current position of the file pointer.</source>
          <target state="translated">기입 &lt;code&gt;short&lt;/code&gt; 처음 두 바이트 값으로서 파일에있다. 쓰기는 파일 포인터의 현재 위치에서 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="95148813e930a56ec7f9ba7cf377c3af425484b9" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;short&lt;/code&gt; to the underlying output stream as two bytes, high byte first.</source>
          <target state="translated">기본 출력 스트림에 &lt;code&gt;short&lt;/code&gt; 를 2 바이트로, 높은 바이트부터 씁니다 .</target>
        </trans-unit>
        <trans-unit id="02db58dd011e754f2707096b88fe2f8be9f657ed" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;short&lt;/code&gt; to the underlying output stream as two bytes, high byte first. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">기입 &lt;code&gt;short&lt;/code&gt; 처음 두 바이트 값으로서 기본 출력 스트림을. 예외가 발생하지 않으면 &lt;code&gt;written&lt;/code&gt; 된 카운터 는 &lt;code&gt;2&lt;/code&gt; 씩 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="a90364be6749249db375cff460e3c17c03c9bbd9" translate="yes" xml:space="preserve">
          <source>Writes a CData section</source>
          <target state="translated">CData 섹션 작성</target>
        </trans-unit>
        <trans-unit id="df3d8a106b37266209385784427f6dc8189f1133" translate="yes" xml:space="preserve">
          <source>Writes a SQL &lt;code&gt;DATALINK&lt;/code&gt; value to the stream.</source>
          <target state="translated">SQL &lt;code&gt;DATALINK&lt;/code&gt; 값을 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="b458ebbec899f10fb20f20b8b4375124ea3e7e52" translate="yes" xml:space="preserve">
          <source>Writes a String as a sequence of bytes.</source>
          <target state="translated">문자열을 바이트 시퀀스로 씁니다.</target>
        </trans-unit>
        <trans-unit id="afc7866c1825e9380b11088c400178f95a95cdbc" translate="yes" xml:space="preserve">
          <source>Writes a String as a sequence of chars.</source>
          <target state="translated">문자열을 일련의 문자로 씁니다.</target>
        </trans-unit>
        <trans-unit id="c2392262bb2e4275d7538e0294036fdf89687e24" translate="yes" xml:space="preserve">
          <source>Writes a boolean.</source>
          <target state="translated">부울을 씁니다.</target>
        </trans-unit>
        <trans-unit id="f0dab3f9cfd243fc6ebe7043ee7a66237ab74a99" translate="yes" xml:space="preserve">
          <source>Writes a byte to the compressed output stream.</source>
          <target state="translated">압축 된 출력 스트림에 바이트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="c0da5fee9a3c6b16bf35955f5f5c35dce130ca60" translate="yes" xml:space="preserve">
          <source>Writes a byte to the compressed output stream. This method will block until the byte can be written.</source>
          <target state="translated">압축 된 출력 스트림에 바이트를 씁니다. 이 메소드는 바이트를 쓸 수있을 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="9cf89ed21330c27e5aa3cc0f34d382c423419609" translate="yes" xml:space="preserve">
          <source>Writes a byte to the uncompressed output stream.</source>
          <target state="translated">압축되지 않은 출력 스트림에 바이트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="3d47656c06088ca641ef1044e64c889463161b7a" translate="yes" xml:space="preserve">
          <source>Writes a byte.</source>
          <target state="translated">바이트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="311374422e4c207200ae10ac5f074fff7eabacab" translate="yes" xml:space="preserve">
          <source>Writes a byte. This method will block until the byte is actually written.</source>
          <target state="translated">바이트를 씁니다. 이 메소드는 바이트가 실제로 쓰여질 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="4f8553b815db13b6c88e3d97f9c0023965b0af9c" translate="yes" xml:space="preserve">
          <source>Writes a byte. Will block until the byte is actually written.</source>
          <target state="translated">바이트를 씁니다. 바이트가 실제로 쓰여질 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="5447f774a2ec3a7588ab7fffc585fd0847e17bfa" translate="yes" xml:space="preserve">
          <source>Writes a character to the buffer.</source>
          <target state="translated">버퍼에 문자를 씁니다.</target>
        </trans-unit>
        <trans-unit id="e7ba7473a4f82684254953fa98bca6d77362c61b" translate="yes" xml:space="preserve">
          <source>Writes a datagram to this channel.</source>
          <target state="translated">이 채널에 데이터 그램을 씁니다.</target>
        </trans-unit>
        <trans-unit id="5efe0d1f19523d7334f9c488613efaa72bee6fd2" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this console's output stream using the specified format string and arguments.</source>
          <target state="translated">지정된 형식 문자열과 인수를 사용하여 형식화 된 문자열을이 콘솔의 출력 스트림에 씁니다.</target>
        </trans-unit>
        <trans-unit id="508af09289f72e03d16ae1e4dd4b7e1a9e501d48" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this object's destination using the specified format string and arguments.</source>
          <target state="translated">지정된 형식 문자열 및 인수를 사용하여 형식화 된 문자열을이 개체의 대상에 씁니다.</target>
        </trans-unit>
        <trans-unit id="0a45e7a61a42a1faa620f3d8e59e1e8f0e6e5cc2" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this object's destination using the specified format string and arguments. The locale used is the one defined during the construction of this formatter.</source>
          <target state="translated">지정된 형식 문자열과 인수를 사용하여 형식화 된 문자열을이 객체의 대상에 씁니다. 사용 된 로케일은이 포맷터 구성 중에 정의 된 로케일입니다.</target>
        </trans-unit>
        <trans-unit id="b64a4a6ece44814969f921375d7b1535d8bf355a" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this object's destination using the specified locale, format string, and arguments.</source>
          <target state="translated">지정된 로케일, 형식 문자열 및 인수를 사용하여 형식화 된 문자열을이 객체의 대상에 씁니다.</target>
        </trans-unit>
        <trans-unit id="ff42503cbe9f3786576fcf934db44ca1703f1239" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this output stream using the specified format string and arguments.</source>
          <target state="translated">지정된 형식 문자열과 인수를 사용하여 형식화 된 문자열을이 출력 스트림에 씁니다.</target>
        </trans-unit>
        <trans-unit id="684abf86f0ae0bf9ca4893fa8d75709f881ea701" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this writer using the specified format string and arguments.</source>
          <target state="translated">지정된 형식 문자열 및 인수를 사용하여 형식화 된 문자열을이 작성기에 씁니다.</target>
        </trans-unit>
        <trans-unit id="df82bdd3d3608dc3ca77522fb3a2ccea02508a72" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this writer using the specified format string and arguments. If automatic flushing is enabled, calls to this method will flush the output buffer.</source>
          <target state="translated">지정된 형식 문자열과 인수를 사용하여 형식화 된 문자열을이 작성기에 기록합니다. 자동 플러시가 활성화 된 경우이 메서드를 호출하면 출력 버퍼가 플러시됩니다.</target>
        </trans-unit>
        <trans-unit id="17ff8b03f28f8652982d3549e1d470d8e0fa7304" translate="yes" xml:space="preserve">
          <source>Writes a line separator.</source>
          <target state="translated">줄 구분 기호를 씁니다.</target>
        </trans-unit>
        <trans-unit id="e2cc625afc6e32e0218832c9bab473756248e92a" translate="yes" xml:space="preserve">
          <source>Writes a line separator. The line separator string is defined by the system property &lt;code&gt;line.separator&lt;/code&gt;, and is not necessarily a single newline ('\n') character.</source>
          <target state="translated">줄 구분자를 씁니다. 행 구분자 문자열은 시스템 특성 &lt;code&gt;line.separator&lt;/code&gt; 에 의해 정의되며 반드시 단일 개행 ( ​​'\ n') 문자 일 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="27e81462b6e6b65223f5d2486f4dfbf626128a46" translate="yes" xml:space="preserve">
          <source>Writes a namespace to the output stream If the prefix argument to this method is the empty string, &quot;xmlns&quot;, or null this method will delegate to writeDefaultNamespace</source>
          <target state="translated">출력 스트림에 네임 스페이스를 씁니다.이 메서드의 접두사 인수가 빈 문자열, &quot;xmlns&quot;또는 null 인 경우이 메서드는 writeDefaultNamespace에 위임합니다.</target>
        </trans-unit>
        <trans-unit id="e06d1baf2766748f705a9ec924d45f761ff2e183" translate="yes" xml:space="preserve">
          <source>Writes a portion of a String.</source>
          <target state="translated">문자열의 일부를 씁니다.</target>
        </trans-unit>
        <trans-unit id="f72fbef395487327da1536d1995e28bc5cf9fb4c" translate="yes" xml:space="preserve">
          <source>Writes a portion of a string.</source>
          <target state="translated">문자열의 일부를 씁니다.</target>
        </trans-unit>
        <trans-unit id="56b0793b26c4a0f3cdcde22d46d24b35623bc380" translate="yes" xml:space="preserve">
          <source>Writes a portion of an array of characters.</source>
          <target state="translated">문자 배열의 일부를 씁니다.</target>
        </trans-unit>
        <trans-unit id="07fcbd7544ddeccee9b06f0cd837cd28b8435c95" translate="yes" xml:space="preserve">
          <source>Writes a processing instruction</source>
          <target state="translated">처리 명령을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="502ed5705e51254c59ad06919f6929d8c661179e" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bits, given by the &lt;code&gt;numBits&lt;/code&gt; least significant bits of the &lt;code&gt;bits&lt;/code&gt; argument in left-to-right order, to the stream at the current bit offset within the current byte position.</source>
          <target state="translated">왼쪽에서 오른쪽 순서로 &lt;code&gt;bits&lt;/code&gt; 인수 의 &lt;code&gt;numBits&lt;/code&gt; 최하위 비트로 지정된 비트 시퀀스를 현재 바이트 위치 내의 현재 비트 오프셋에있는 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="7238cdbf395d0c16e058e39542beedf0196e6462" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bits, given by the &lt;code&gt;numBits&lt;/code&gt; least significant bits of the &lt;code&gt;bits&lt;/code&gt; argument in left-to-right order, to the stream at the current bit offset within the current byte position. The upper &lt;code&gt;64 - numBits&lt;/code&gt; bits of the argument are ignored. The bit offset is advanced by &lt;code&gt;numBits&lt;/code&gt; and reduced modulo 8. Note that a bit offset of 0 always indicates the most-significant bit of the byte, and bytes of bits are written out in sequence as they are encountered. Thus bit writes are always effectively in network byte order. The actual stream byte order setting is ignored.</source>
          <target state="translated">왼쪽에서 오른쪽으로 &lt;code&gt;bits&lt;/code&gt; 인수 의 &lt;code&gt;numBits&lt;/code&gt; 최하위 비트에 의해 주어진 비트 시퀀스를 현재 바이트 위치 내의 현재 비트 오프셋에서 스트림에 씁니다 . 인수 의 상위 &lt;code&gt;64 - numBits&lt;/code&gt; 비트는 무시됩니다. 비트 오프셋은 &lt;code&gt;numBits&lt;/code&gt; 및 감소 된 모듈로 8에 의해 진행됩니다 . 비트 오프셋 0은 항상 바이트의 최상위 비트를 나타내며 비트 바이트는 발생하는 순서대로 기록됩니다. 따라서 비트 쓰기는 항상 네트워크 바이트 순서로 효과적으로 이루어집니다. 실제 스트림 바이트 순서 설정은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="314d6e211d9795052649ceb03da878a72709c282" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to the stream at the current position.</source>
          <target state="translated">현재 위치의 스트림에 바이트 시퀀스를 씁니다.</target>
        </trans-unit>
        <trans-unit id="190c55636cfdf74b2ffb6a71ed2f57d50aeccf84" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to the stream at the current position. If &lt;code&gt;b.length&lt;/code&gt; is 0, nothing is written. The byte &lt;code&gt;b[0]&lt;/code&gt; is written first, then the byte &lt;code&gt;b[1]&lt;/code&gt;, and so on.</source>
          <target state="translated">현재 위치에서 스트림에 바이트 시퀀스를 씁니다. 경우 &lt;code&gt;b.length&lt;/code&gt; 를가 0, 아무것도 기입하지 않습니다. 바이트 &lt;code&gt;b[0]&lt;/code&gt; 이 먼저 기록 된 다음 바이트 &lt;code&gt;b[1]&lt;/code&gt; 등이 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="2235f3a78e2b1cb2ccd3a4168c479386e4f14d39" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The byte &lt;code&gt;b[off]&lt;/code&gt; is written first, then the byte &lt;code&gt;b[off + 1]&lt;/code&gt;, and so on.</source>
          <target state="translated">현재 위치에서 스트림에 바이트 시퀀스를 씁니다. 경우 &lt;code&gt;len&lt;/code&gt; 0, 아무것도 기입하지 않습니다. 바이트 &lt;code&gt;b[off]&lt;/code&gt; 가 먼저 기록 된 다음 바이트 &lt;code&gt;b[off + 1]&lt;/code&gt; 등이 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="998e981037032866593747f4cad33ac3eb0066f8" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to this channel from a subsequence of the given buffers.</source>
          <target state="translated">주어진 버퍼의 서브 시퀀스로부터이 채널에 일련의 바이트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="df42d642ba05e494d2cc831543ce9f23be20461b" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to this channel from a subsequence of the given buffers. This operation, sometimes called a &lt;em&gt;gathering write&lt;/em&gt;, is often useful when implementing network protocols that group data into segments consisting of one or more fixed-length headers followed by a variable-length body. The &lt;code&gt;handler&lt;/code&gt; parameter is a completion handler that is invoked when the write operation completes (or fails). The result passed to the completion handler is the number of bytes written.</source>
          <target state="translated">주어진 버퍼의 서브 시퀀스로부터이 채널에 일련의 바이트를 씁니다. &lt;em&gt;수집 쓰기&lt;/em&gt; 라고도하는이 작업 은 데이터를 하나 이상의 고정 길이 헤더와 가변 길이 본문으로 구성된 세그먼트로 그룹화하는 네트워크 프로토콜을 구현할 때 종종 유용합니다. &lt;code&gt;handler&lt;/code&gt; 파라미터는 기록 동작이 완료 (또는 실패) 때 호출되는 핸들러가 완료된다. 완료 핸들러에 전달 된 결과는 쓴 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="02441dac40077efefece8a0e55188a3959f39c79" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to this channel from the given buffer, starting at the given file position.</source>
          <target state="translated">주어진 파일 위치에서 시작하여 주어진 버퍼에서이 채널에 바이트 시퀀스를 씁니다.</target>
        </trans-unit>
        <trans-unit id="4b2b6d5918fe10f4267a0ae46ec7f71362fad27f" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to this channel from the given buffer.</source>
          <target state="translated">주어진 버퍼에서이 채널에 일련의 바이트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="41853481b79dd7251b056000a101757ebc59a7f7" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to this channel from the given buffers.</source>
          <target state="translated">주어진 버퍼에서이 채널에 일련의 바이트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="59c5ccb857f9bc25462065a57d0ce514fa8bf281" translate="yes" xml:space="preserve">
          <source>Writes a sequence of chars to the stream at the current position.</source>
          <target state="translated">현재 위치의 스트림에 문자 시퀀스를 씁니다.</target>
        </trans-unit>
        <trans-unit id="25372ececa06540883487ffc569630583f3356c4" translate="yes" xml:space="preserve">
          <source>Writes a sequence of chars to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The char &lt;code&gt;c[off]&lt;/code&gt; is written first, then the char &lt;code&gt;c[off + 1]&lt;/code&gt;, and so on. The byte order of the stream is used to determine the order in which the individual bytes are written.</source>
          <target state="translated">현재 위치의 스트림에 일련의 문자를 씁니다. 경우 &lt;code&gt;len&lt;/code&gt; 0, 아무것도 기입하지 않습니다. char &lt;code&gt;c[off]&lt;/code&gt; 가 먼저 작성된 다음 char &lt;code&gt;c[off + 1]&lt;/code&gt; 등이 작성됩니다. 스트림의 바이트 순서는 개별 바이트가 기록되는 순서를 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7a3d4937205bb517a2764876ca8d0ce3625add0c" translate="yes" xml:space="preserve">
          <source>Writes a sequence of doubles to the stream at the current position.</source>
          <target state="translated">현재 위치의 스트림에 double 시퀀스를 씁니다.</target>
        </trans-unit>
        <trans-unit id="b8d73713479b20f3c0e88b9a7d06d7681fdd8c40" translate="yes" xml:space="preserve">
          <source>Writes a sequence of doubles to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The double &lt;code&gt;d[off]&lt;/code&gt; is written first, then the double &lt;code&gt;d[off + 1]&lt;/code&gt;, and so on. The byte order of the stream is used to determine the order in which the individual bytes are written.</source>
          <target state="translated">현재 위치의 스트림에 복열 시퀀스를 씁니다. 경우 &lt;code&gt;len&lt;/code&gt; 0, 아무것도 기입하지 않습니다. 이중 &lt;code&gt;d[off]&lt;/code&gt; 가 먼저 기록 된 다음 이중 &lt;code&gt;d[off + 1]&lt;/code&gt; 등이 기록됩니다. 스트림의 바이트 순서는 개별 바이트가 기록되는 순서를 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="446789ef076930615fe1f5c41aac52f13cc1cee0" translate="yes" xml:space="preserve">
          <source>Writes a sequence of floats to the stream at the current position.</source>
          <target state="translated">현재 위치의 스트림에 부동 소수점 시퀀스를 씁니다.</target>
        </trans-unit>
        <trans-unit id="ee5692e375b6806782e1c51563426dd418bee68f" translate="yes" xml:space="preserve">
          <source>Writes a sequence of floats to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The float &lt;code&gt;f[off]&lt;/code&gt; is written first, then the float &lt;code&gt;f[off + 1]&lt;/code&gt;, and so on. The byte order of the stream is used to determine the order in which the individual bytes are written.</source>
          <target state="translated">현재 위치에서 스트림에 float 시퀀스를 씁니다. 경우 &lt;code&gt;len&lt;/code&gt; 0, 아무것도 기입하지 않습니다. float &lt;code&gt;f[off]&lt;/code&gt; 가 먼저 기록 된 다음 float &lt;code&gt;f[off + 1]&lt;/code&gt; 등이 기록됩니다. 스트림의 바이트 순서는 개별 바이트가 기록되는 순서를 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="de705ba6a174586a9c837cd917c5bd44f25429f8" translate="yes" xml:space="preserve">
          <source>Writes a sequence of ints to the stream at the current position.</source>
          <target state="translated">현재 위치의 스트림에 int 시퀀스를 씁니다.</target>
        </trans-unit>
        <trans-unit id="2e22e143b7aa537e10aa473bc7180b02b29a9e27" translate="yes" xml:space="preserve">
          <source>Writes a sequence of ints to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The int &lt;code&gt;i[off]&lt;/code&gt; is written first, then the int &lt;code&gt;i[off + 1]&lt;/code&gt;, and so on. The byte order of the stream is used to determine the order in which the individual bytes are written.</source>
          <target state="translated">현재 위치의 스트림에 int 시퀀스를 씁니다. 경우 &lt;code&gt;len&lt;/code&gt; 0, 아무것도 기입하지 않습니다. int &lt;code&gt;i[off]&lt;/code&gt; 가 먼저 작성된 다음 int &lt;code&gt;i[off + 1]&lt;/code&gt; 등이 기록됩니다. 스트림의 바이트 순서는 개별 바이트가 기록되는 순서를 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="69c5aaa383ce6ea26910c68605710771e3d57380" translate="yes" xml:space="preserve">
          <source>Writes a sequence of longs to the stream at the current position.</source>
          <target state="translated">현재 위치의 스트림에 long 시퀀스를 씁니다.</target>
        </trans-unit>
        <trans-unit id="8f619dc03c935ddbc5713f176006c9051deaeab8" translate="yes" xml:space="preserve">
          <source>Writes a sequence of longs to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The long &lt;code&gt;l[off]&lt;/code&gt; is written first, then the long &lt;code&gt;l[off + 1]&lt;/code&gt;, and so on. The byte order of the stream is used to determine the order in which the individual bytes are written.</source>
          <target state="translated">현재 위치에서 스트림에 long 시퀀스를 씁니다. 경우 &lt;code&gt;len&lt;/code&gt; 0, 아무것도 기입하지 않습니다. long &lt;code&gt;l[off]&lt;/code&gt; 가 먼저 기록 된 다음 long &lt;code&gt;l[off + 1]&lt;/code&gt; 등이 기록됩니다. 스트림의 바이트 순서는 개별 바이트가 기록되는 순서를 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4e2827725195f2c36013b35ab2dccbe6663b69f6" translate="yes" xml:space="preserve">
          <source>Writes a sequence of shorts to the stream at the current position.</source>
          <target state="translated">현재 위치의 스트림에 단락 시퀀스를 씁니다.</target>
        </trans-unit>
        <trans-unit id="b21ca2f4d5f95b31acfd2f5bbc0ce005cc3a5fb6" translate="yes" xml:space="preserve">
          <source>Writes a sequence of shorts to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The short &lt;code&gt;s[off]&lt;/code&gt; is written first, then the short &lt;code&gt;s[off + 1]&lt;/code&gt;, and so on. The byte order of the stream is used to determine the order in which the individual bytes are written.</source>
          <target state="translated">현재 위치에서 스트림에 일련의 단락을 씁니다. 경우 &lt;code&gt;len&lt;/code&gt; 0, 아무것도 기입하지 않습니다. 짧은 &lt;code&gt;s[off]&lt;/code&gt; 가 먼저 기록 된 다음 짧은 &lt;code&gt;s[off + 1]&lt;/code&gt; 등이 기록됩니다. 스트림의 바이트 순서는 개별 바이트가 기록되는 순서를 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9e25011a9c8fdafeb10663081e9d168f9a6cefb9" translate="yes" xml:space="preserve">
          <source>Writes a set of attributes to the given object stream for the purpose of serialization.</source>
          <target state="translated">직렬화를 위해 지정된 개체 스트림에 특성 집합을 씁니다.</target>
        </trans-unit>
        <trans-unit id="9b3b3b853ce10c9f53ce13bee2be516282c111c7" translate="yes" xml:space="preserve">
          <source>Writes a set of attributes to the given object stream for the purpose of serialization. This will take special care to deal with static attribute keys that have been registered wit the &lt;code&gt;registerStaticAttributeKey&lt;/code&gt; method. Any attribute key not registered as a static key will be serialized directly. All values are expected to be serializable.</source>
          <target state="translated">직렬화를 위해 지정된 개체 스트림에 특성 집합을 씁니다. 이는 &lt;code&gt;registerStaticAttributeKey&lt;/code&gt; 메소드에 등록 된 정적 속성 키를 처리하는 데 특별한주의를 기울 입니다. 정적 키로 등록되지 않은 속성 키는 직접 직렬화됩니다. 모든 값은 직렬화 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="e3cbf0c42aabe7ea4836e02acdffa16497650e0c" translate="yes" xml:space="preserve">
          <source>Writes a single bit, given by the least significant bit of the argument, to the stream at the current bit offset within the current byte position.</source>
          <target state="translated">인수의 최하위 비트로 지정된 단일 비트를 현재 바이트 위치 내의 현재 비트 오프셋에있는 스트림에 씁니다.</target>
        </trans-unit>
        <trans-unit id="7b943c58e32fcea952a5a176b2b64b74481ec8ac" translate="yes" xml:space="preserve">
          <source>Writes a single bit, given by the least significant bit of the argument, to the stream at the current bit offset within the current byte position. The upper 31 bits of the argument are ignored. The given bit replaces the previous bit at that position. The bit offset is advanced by one and reduced modulo 8.</source>
          <target state="translated">인수의 최하위 비트가 제공하는 단일 비트를 현재 바이트 위치 내의 현재 비트 오프셋에서 스트림에 씁니다. 인수의 상위 31 비트는 무시됩니다. 주어진 비트는 해당 위치에서 이전 비트를 대체합니다. 비트 오프셋은 1로 감소되고 모듈로 8이 감소합니다.</target>
        </trans-unit>
        <trans-unit id="001052a859bb1446c0fd19a7d0140fd8e78c87da" translate="yes" xml:space="preserve">
          <source>Writes a single byte to the stream at the current position.</source>
          <target state="translated">현재 위치의 스트림에 단일 바이트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="4d25d450c91f1b954e5d3226b5eb0d63eb9f3de1" translate="yes" xml:space="preserve">
          <source>Writes a single byte to the stream at the current position. The 24 high-order bits of &lt;code&gt;b&lt;/code&gt; are ignored.</source>
          <target state="translated">현재 위치에서 스트림에 단일 바이트를 씁니다. &lt;code&gt;b&lt;/code&gt; 의 24 개 상위 비트 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="664dba2ff2df999d8a27b0049a85c61d9db7e29f" translate="yes" xml:space="preserve">
          <source>Writes a single character.</source>
          <target state="translated">단일 문자를 씁니다.</target>
        </trans-unit>
        <trans-unit id="f933296edffab5638d15f828802522dc84897cf3" translate="yes" xml:space="preserve">
          <source>Writes a single character. The character to be written is contained in the 16 low-order bits of the given integer value; the 16 high-order bits are ignored.</source>
          <target state="translated">단일 문자를 씁니다. 기록 될 문자는 주어진 정수 값의 하위 16 비트 비트에 포함됩니다. 16 개의 상위 비트는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="358e1ae6ec30a51046bb824cdc45a4602b363152" translate="yes" xml:space="preserve">
          <source>Writes a start tag to the output</source>
          <target state="translated">출력에 시작 태그를 씁니다.</target>
        </trans-unit>
        <trans-unit id="49bd4c043b641203f67a25a8faaedf06ff7164e9" translate="yes" xml:space="preserve">
          <source>Writes a start tag to the output.</source>
          <target state="translated">출력에 시작 태그를 씁니다.</target>
        </trans-unit>
        <trans-unit id="75052e90a50a88eddb0c2fcd32eec44274289114" translate="yes" xml:space="preserve">
          <source>Writes a start tag to the output. All writeStartElement methods open a new scope in the internal namespace context. Writing the corresponding EndElement causes the scope to be closed.</source>
          <target state="translated">출력에 시작 태그를 씁니다. 모든 writeStartElement 메서드는 내부 네임 스페이스 컨텍스트에서 새 범위를 엽니 다. 해당 EndElement를 작성하면 범위가 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="8e408c44ea4aa78ea372d668a61e9a79e9878cfa" translate="yes" xml:space="preserve">
          <source>Writes a stream of ASCII characters to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;SQLOutputImpl&lt;/code&gt; 오브젝트 에 ASCII 문자 스트림을 기록 합니다.</target>
        </trans-unit>
        <trans-unit id="0c35566fb936fe3c434bc325013cef4ac2fd2d64" translate="yes" xml:space="preserve">
          <source>Writes a stream of ASCII characters to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver will do any necessary conversion from ASCII to the database &lt;code&gt;CHAR&lt;/code&gt; format.</source>
          <target state="translated">이 &lt;code&gt;SQLOutputImpl&lt;/code&gt; 오브젝트 에 ASCII 문자 스트림을 기록 합니다. 드라이버는 ASCII에서 데이터베이스 &lt;code&gt;CHAR&lt;/code&gt; 형식으로 필요한 모든 변환을 수행 합니다.</target>
        </trans-unit>
        <trans-unit id="a8d35bd84279b6609e622d6ab06f4beb72906404" translate="yes" xml:space="preserve">
          <source>Writes a stream of Unicode characters to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;SQLOutputImpl&lt;/code&gt; 오브젝트 에 유니 코드 문자 스트림을 기록 합니다.</target>
        </trans-unit>
        <trans-unit id="103c70c642901a5a9a51a3605fe74dc57e1fabd2" translate="yes" xml:space="preserve">
          <source>Writes a stream of Unicode characters to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver will do any necessary conversion from Unicode to the database &lt;code&gt;CHAR&lt;/code&gt; format.</source>
          <target state="translated">이 &lt;code&gt;SQLOutputImpl&lt;/code&gt; 오브젝트 에 유니 코드 문자 스트림을 기록 합니다. 드라이버는 유니 코드에서 데이터베이스 &lt;code&gt;CHAR&lt;/code&gt; 형식으로 필요한 모든 변환을 수행 합니다.</target>
        </trans-unit>
        <trans-unit id="df213335179c5ed8ca6afe71e0677d7424da6195" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing a MIDI file of the file type indicated to the external file provided.</source>
          <target state="translated">제공된 외부 파일에 표시된 파일 형식의 MIDI 파일을 나타내는 바이트 스트림을 씁니다.</target>
        </trans-unit>
        <trans-unit id="e8a5f176816806a6fbca88570a3f6372ece24192" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing a MIDI file of the file type indicated to the output stream provided.</source>
          <target state="translated">제공된 출력 스트림에 표시된 파일 형식의 MIDI 파일을 나타내는 바이트 스트림을 씁니다.</target>
        </trans-unit>
        <trans-unit id="d0e751b02c4917e9384d9893ee2785bf31c7eb4d" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing a file of the MIDI file type indicated to the external file provided.</source>
          <target state="translated">제공된 외부 파일에 표시된 MIDI 파일 형식의 파일을 나타내는 바이트 스트림을 씁니다.</target>
        </trans-unit>
        <trans-unit id="68b7db83aee7a60d72e213514b372c08156d7b87" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing a file of the MIDI file type indicated to the output stream provided.</source>
          <target state="translated">제공된 출력 스트림에 표시된 MIDI 파일 형식의 파일을 나타내는 바이트 스트림을 씁니다.</target>
        </trans-unit>
        <trans-unit id="9036acda052c4911938040861a1e300f1ef2410e" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the file format indicated to the external file provided.</source>
          <target state="translated">제공된 외부 파일에 표시된 파일 형식의 오디오 파일을 나타내는 바이트 스트림을 씁니다.</target>
        </trans-unit>
        <trans-unit id="6fb88014c7ccd9861b8e71915804360144829a00" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the file type indicated to the output stream provided.</source>
          <target state="translated">제공된 출력 스트림에 표시된 파일 유형의 오디오 파일을 나타내는 바이트 스트림을 씁니다.</target>
        </trans-unit>
        <trans-unit id="9ddecea0d160b45426ce4e501d8df92507ba73a8" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the file type indicated to the output stream provided. Some file types require that the length be written into the file header, and cannot be written from start to finish unless the length is known in advance. An attempt to write such a file type will fail with an &lt;code&gt;IOException&lt;/code&gt; if the length in the audio file format is &lt;a href=&quot;../audiosystem#NOT_SPECIFIED&quot;&gt;&lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">제공된 출력 스트림에 표시된 파일 유형의 오디오 파일을 나타내는 바이트 스트림을 씁니다. 일부 파일 유형은 길이를 파일 헤더에 기록해야하며 길이를 미리 알고 있지 않으면 처음부터 끝까지 기록 할 수 없습니다. 오디오 파일 형식의 길이가 &lt;a href=&quot;../audiosystem#NOT_SPECIFIED&quot;&gt; &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 인&lt;/a&gt; 경우 이러한 파일 유형을 작성하려는 시도는 &lt;code&gt;IOException&lt;/code&gt; 과 함께 실패 합니다 .</target>
        </trans-unit>
        <trans-unit id="b61ebe87fae82a3f3e78f56158a3a4c202901a7e" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the file type indicated to the output stream provided. Some file types require that the length be written into the file header, and cannot be written from start to finish unless the length is known in advance. An attempt to write such a file type will fail with an IOException if the length in the audio file format is &lt;a href=&quot;../audiosystem#NOT_SPECIFIED&quot;&gt;&lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">제공된 출력 스트림에 표시된 파일 유형의 오디오 파일을 나타내는 바이트 스트림을 씁니다. 일부 파일 유형에서는 길이를 파일 헤더에 기록해야하며 길이를 미리 알지 못하면 처음부터 끝까지 기록 할 수 없습니다. 오디오 파일 형식의 길이가 &lt;a href=&quot;../audiosystem#NOT_SPECIFIED&quot;&gt; &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 인&lt;/a&gt; 경우 이러한 파일 형식을 쓰려는 시도는 IOException으로 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="c8f0adc20f1af94af22a8e4d67c6778209fd2469" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the specified file type to the external file provided.</source>
          <target state="translated">지정된 파일 형식의 오디오 파일을 나타내는 바이트 스트림을 제공된 외부 파일에 씁니다.</target>
        </trans-unit>
        <trans-unit id="5347af5a0d11f28a81ca89b06b58fba3a2384a75" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the specified file type to the output stream provided.</source>
          <target state="translated">지정된 파일 형식의 오디오 파일을 나타내는 바이트 스트림을 제공된 출력 스트림에 씁니다.</target>
        </trans-unit>
        <trans-unit id="6c3e579ee5254986120d6bd885e12ecea3e2510c" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the specified file type to the output stream provided. Some file types require that the length be written into the file header; such files cannot be written from start to finish unless the length is known in advance. An attempt to write a file of such a type will fail with an &lt;code&gt;IOException&lt;/code&gt; if the length in the audio file type is &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;.</source>
          <target state="translated">지정된 파일 형식의 오디오 파일을 나타내는 바이트 스트림을 제공된 출력 스트림에 씁니다. 일부 파일 유형은 길이를 파일 헤더에 기록해야합니다. 이러한 파일은 길이를 미리 알고 있지 않으면 처음부터 끝까지 쓸 수 없습니다. 오디오 파일 유형의 길이가 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 인 경우 이러한 유형의 파일 쓰기 시도는 &lt;code&gt;IOException&lt;/code&gt; 과 함께 실패 합니다.</target>
        </trans-unit>
        <trans-unit id="457626ec7057ea1509e697c0d5f9754010afd06b" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the specified file type to the output stream provided. Some file types require that the length be written into the file header; such files cannot be written from start to finish unless the length is known in advance. An attempt to write a file of such a type will fail with an IOException if the length in the audio file type is &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;.</source>
          <target state="translated">지정된 파일 형식의 오디오 파일을 나타내는 바이트 스트림을 제공된 출력 스트림에 씁니다. 일부 파일 유형에서는 파일 헤더에 길이를 기록해야합니다. 길이를 미리 알고 있지 않으면 이러한 파일을 처음부터 끝까지 쓸 수 없습니다. 오디오 파일 형식의 길이가 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; 인 경우 이러한 형식의 파일을 쓰려는 시도는 IOException과 함께 실패 합니다.</target>
        </trans-unit>
        <trans-unit id="d764e9d1a1cb8b672089bc62810766169a891d6b" translate="yes" xml:space="preserve">
          <source>Writes a stream of uninterpreted bytes to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">해석되지 않은 바이트의 스트림을이 &lt;code&gt;SQLOutputImpl&lt;/code&gt; 오브젝트에 기록합니다.</target>
        </trans-unit>
        <trans-unit id="0603b3d486c3582197330dfc0883ac877fa7af38" translate="yes" xml:space="preserve">
          <source>Writes a string to the file as a sequence of characters.</source>
          <target state="translated">문자열을 일련의 문자로 파일에 씁니다.</target>
        </trans-unit>
        <trans-unit id="cbfebbe442291a3e8e465b80272932906f7ed4fb" translate="yes" xml:space="preserve">
          <source>Writes a string to the file as a sequence of characters. Each character is written to the data output stream as if by the &lt;code&gt;writeChar&lt;/code&gt; method. The write starts at the current position of the file pointer.</source>
          <target state="translated">문자열을 파일에 일련의 문자로 씁니다. 각 문자는 &lt;code&gt;writeChar&lt;/code&gt; 메소드에 의해 데이터 출력 스트림에 기록됩니다 . 쓰기는 파일 포인터의 현재 위치에서 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="b63ac37afa3c7e30a7ec3f4bba3342bb93883711" translate="yes" xml:space="preserve">
          <source>Writes a string to the file using &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; encoding in a machine-independent manner.</source>
          <target state="translated">기계 독립적 인 방식으로 &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;수정 된 UTF-8&lt;/a&gt; 인코딩을 사용하여 파일에 문자열을 씁니다 .</target>
        </trans-unit>
        <trans-unit id="b0ca487aa3c16ea83ab86aed17493dcc33edb03f" translate="yes" xml:space="preserve">
          <source>Writes a string to the output stream.</source>
          <target state="translated">출력 스트림에 문자열을 씁니다.</target>
        </trans-unit>
        <trans-unit id="2d6f810066617d11d6cb068e9ebc2b6257515d4f" translate="yes" xml:space="preserve">
          <source>Writes a string to the output stream. For every character in the string &lt;code&gt;s&lt;/code&gt;, taken in order, one byte is written to the output stream. If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">출력 스트림에 문자열을 씁니다. 문자열 &lt;code&gt;s&lt;/code&gt; 의 모든 문자에 대해 순서대로 1 바이트가 출력 스트림에 기록됩니다. 경우 &lt;code&gt;s&lt;/code&gt; 입니다 &lt;code&gt;null&lt;/code&gt; 하는 &lt;code&gt;NullPointerException&lt;/code&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bc2a7fd94389452a3c96d490dbd418c7fc0f9085" translate="yes" xml:space="preserve">
          <source>Writes a string to the output stream. For every character in the string &lt;code&gt;s&lt;/code&gt;, taken in order, two bytes are written to the output stream, ordered according to the current byte order setting. If network byte order is being used, the high-order byte is written first; the order is reversed otherwise. If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">출력 스트림에 문자열을 씁니다. 문자열 &lt;code&gt;s&lt;/code&gt; 의 모든 문자를 순서대로 취하면 현재 바이트 순서 설정에 따라 2 바이트가 출력 스트림에 기록됩니다. 네트워크 바이트 순서가 사용되는 경우 상위 바이트가 먼저 기록됩니다. 그렇지 않으면 순서가 반대로됩니다. 경우 &lt;code&gt;s&lt;/code&gt; 입니다 &lt;code&gt;null&lt;/code&gt; 하는 &lt;code&gt;NullPointerException&lt;/code&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0718eb4fd31a016094bf9fb2c14b92e5e34e810c" translate="yes" xml:space="preserve">
          <source>Writes a string to the underlying output stream as a sequence of characters.</source>
          <target state="translated">문자열을 문자 시퀀스로 기본 출력 스트림에 씁니다.</target>
        </trans-unit>
        <trans-unit id="ea2333de6bb14f6753c8467ddb361808ddce3a17" translate="yes" xml:space="preserve">
          <source>Writes a string to the underlying output stream as a sequence of characters. Each character is written to the data output stream as if by the &lt;code&gt;writeChar&lt;/code&gt; method. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by twice the length of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">문자열을 기본 출력 스트림에 일련의 문자로 씁니다. 각 문자는 &lt;code&gt;writeChar&lt;/code&gt; 메소드에 의해 데이터 출력 스트림에 기록됩니다 . 예외가 발생하지 않으면 &lt;code&gt;written&lt;/code&gt; 된 카운터 는 &lt;code&gt;s&lt;/code&gt; 길이의 두 배 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="d1f60a0c985ee3c99884db52d5d00830332832d9" translate="yes" xml:space="preserve">
          <source>Writes a string to the underlying output stream using &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; encoding in a machine-independent manner.</source>
          <target state="translated">기계 독립적 인 방식으로 &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;수정 된 UTF-8&lt;/a&gt; 인코딩을 사용하여 기본 출력 스트림에 문자열을 씁니다 .</target>
        </trans-unit>
        <trans-unit id="11a73af4769d2fa84714761c91018f9161b700b9" translate="yes" xml:space="preserve">
          <source>Writes a string.</source>
          <target state="translated">문자열을 씁니다.</target>
        </trans-unit>
        <trans-unit id="5a1953b8b9d27d19a7b5afed0358700c0f0015e7" translate="yes" xml:space="preserve">
          <source>Writes a string. This method cannot be inherited from the Writer class because it must suppress I/O exceptions.</source>
          <target state="translated">문자열을 씁니다. 이 메소드는 I / O 예외를 억제해야하므로 Writer 클래스에서 상속 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="eb6ba0073288a7f37d493353625aab60dc1fed80" translate="yes" xml:space="preserve">
          <source>Writes a sub array of bytes.</source>
          <target state="translated">바이트의 하위 배열을 씁니다.</target>
        </trans-unit>
        <trans-unit id="a0df9dc457ff568fd4c4f2c296551eeed0d5de99" translate="yes" xml:space="preserve">
          <source>Writes all or part of the given &lt;code&gt;byte&lt;/code&gt; array to the &lt;code&gt;BLOB&lt;/code&gt; value that this &lt;code&gt;Blob&lt;/code&gt; object represents and returns the number of bytes written.</source>
          <target state="translated">이 &lt;code&gt;Blob&lt;/code&gt; 개체가 나타내는 &lt;code&gt;BLOB&lt;/code&gt; 값에 지정된 &lt;code&gt;byte&lt;/code&gt; 배열 의 전체 또는 일부를 쓰고 쓴 바이트 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e3916c44b0f32a0be157b07e40b36b95460d2286" translate="yes" xml:space="preserve">
          <source>Writes all or part of the given &lt;code&gt;byte&lt;/code&gt; array to the &lt;code&gt;BLOB&lt;/code&gt; value that this &lt;code&gt;Blob&lt;/code&gt; object represents and returns the number of bytes written. Writing starts at position &lt;code&gt;pos&lt;/code&gt; in the &lt;code&gt;BLOB&lt;/code&gt; value;</source>
          <target state="translated">이 &lt;code&gt;Blob&lt;/code&gt; 개체가 나타내는 &lt;code&gt;BLOB&lt;/code&gt; 값에 지정된 &lt;code&gt;byte&lt;/code&gt; 배열 의 전체 또는 일부를 쓰고 쓴 바이트 수를 반환합니다. 쓰기는 &lt;code&gt;BLOB&lt;/code&gt; 값의 &lt;code&gt;pos&lt;/code&gt; 위치 에서 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="9ba3884f1c2a43aa01130052e714b962961fe375" translate="yes" xml:space="preserve">
          <source>Writes all or part of the given &lt;code&gt;byte&lt;/code&gt; array to the &lt;code&gt;BLOB&lt;/code&gt; value that this &lt;code&gt;Blob&lt;/code&gt; object represents and returns the number of bytes written. Writing starts at position &lt;code&gt;pos&lt;/code&gt; in the &lt;code&gt;BLOB&lt;/code&gt; value; &lt;code&gt;len&lt;/code&gt; bytes from the given byte array are written. The array of bytes will overwrite the existing bytes in the &lt;code&gt;Blob&lt;/code&gt; object starting at the position &lt;code&gt;pos&lt;/code&gt;. If the end of the &lt;code&gt;Blob&lt;/code&gt; value is reached while writing the array of bytes, then the length of the &lt;code&gt;Blob&lt;/code&gt; value will be increased to accommodate the extra bytes.</source>
          <target state="translated">이 &lt;code&gt;Blob&lt;/code&gt; 개체가 나타내는 &lt;code&gt;BLOB&lt;/code&gt; 값에 지정된 &lt;code&gt;byte&lt;/code&gt; 배열 의 전체 또는 일부를 쓰고 쓴 바이트 수를 반환합니다. 쓰기는 &lt;code&gt;BLOB&lt;/code&gt; 값의 &lt;code&gt;pos&lt;/code&gt; 위치 에서 시작됩니다 . 주어진 바이트 배열에서 &lt;code&gt;len&lt;/code&gt; 바이트가 기록됩니다. 바이트 배열은 &lt;code&gt;pos&lt;/code&gt; 위치에서 시작 하는 &lt;code&gt;Blob&lt;/code&gt; 객체 의 기존 바이트를 덮어 씁니다 . 바이트 배열을 쓰는 동안 &lt;code&gt;Blob&lt;/code&gt; 값 의 끝에 도달 하면 추가 바이트를 수용하기 위해 &lt;code&gt;Blob&lt;/code&gt; 값 의 길이 가 늘어납니다.</target>
        </trans-unit>
        <trans-unit id="8600843172fc5ab2a734a9e588ad884c7079c4af" translate="yes" xml:space="preserve">
          <source>Writes an &quot;unshared&quot; object to the ObjectOutputStream.</source>
          <target state="translated">ObjectOutputStream에 &quot;비공유&quot;개체를 씁니다.</target>
        </trans-unit>
        <trans-unit id="3f4a23d3b350bf5bfadf2b639abb0bdae3bb550b" translate="yes" xml:space="preserve">
          <source>Writes an &quot;unshared&quot; object to the ObjectOutputStream. This method is identical to writeObject, except that it always writes the given object as a new, unique object in the stream (as opposed to a back-reference pointing to a previously serialized instance). Specifically:</source>
          <target state="translated">&quot;공유되지 않은&quot;객체를 ObjectOutputStream에 씁니다. 이 메소드는 지정된 객체를 항상 스트림에 새로운 고유 한 객체로 기록한다는 점을 제외하면 writeObject와 동일합니다 (이전의 직렬화 된 인스턴스를 가리키는 역 참조가 아님). 구체적으로 특별히:</target>
        </trans-unit>
        <trans-unit id="1740f6f71c4cd03887821da91243ca075fe07b7b" translate="yes" xml:space="preserve">
          <source>Writes an 8 bit byte.</source>
          <target state="translated">8 비트 바이트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="6c180c959eabf9437bdf6b923f53cbff4e46e305" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;Array&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;SQLOutputImpl&lt;/code&gt; 오브젝트에 Java 프로그래밍 언어로 된 &lt;code&gt;Array&lt;/code&gt; 오브젝트를 기록 합니다.</target>
        </trans-unit>
        <trans-unit id="25811b29146a7e96216cf995ac952bf827c6c7d1" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;Array&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts this value to a serializable &lt;code&gt;SerialArray&lt;/code&gt; SQL &lt;code&gt;ARRAY&lt;/code&gt; value before returning it to the database.</source>
          <target state="translated">이 &lt;code&gt;SQLOutputImpl&lt;/code&gt; 오브젝트에 Java 프로그래밍 언어로 된 &lt;code&gt;Array&lt;/code&gt; 오브젝트를 기록 합니다. 드라이버는이 값을 데이터베이스에 반환하기 전에 직렬화 가능한 &lt;code&gt;SerialArray&lt;/code&gt; SQL &lt;code&gt;ARRAY&lt;/code&gt; 값으로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="63e4a51e27dbbb2d1fa9e791eaa83fc6e7d81bc8" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">기록 &lt;code&gt;int&lt;/code&gt; 이에 Java 프로그램 언어의 &lt;code&gt;SQLOutputImpl&lt;/code&gt; 의 객체입니다.</target>
        </trans-unit>
        <trans-unit id="672c9a7f2d0d068e3cb4e8d6a9ddf3485c9df6a4" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;INTEGER&lt;/code&gt; before returning it to the database.</source>
          <target state="translated">기록 &lt;code&gt;int&lt;/code&gt; 이에 Java 프로그램 언어의 &lt;code&gt;SQLOutputImpl&lt;/code&gt; 의 객체입니다. 드라이버는이를 데이터베이스로 리턴하기 전에 SQL &lt;code&gt;INTEGER&lt;/code&gt; 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="a3bfe788ce31762630ef5185bd75a500a0052987" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; to the file as four bytes, high byte first.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 를 파일에 4 바이트, 상위 바이트 먼저 씁니다 .</target>
        </trans-unit>
        <trans-unit id="1e21e726eeab5953cd125b7495eec89ed335d609" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; to the file as four bytes, high byte first. The write starts at the current position of the file pointer.</source>
          <target state="translated">기록 &lt;code&gt;int&lt;/code&gt; 4 바이트 값으로서 파일에. 쓰기는 파일 포인터의 현재 위치에서 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="f4a4ba08cd12771cf8e041f1c2a9ab0bc67ead61" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; to the underlying output stream as four bytes, high byte first.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 를 기본 출력 스트림에 4 바이트로 높은 바이트부터 씁니다 .</target>
        </trans-unit>
        <trans-unit id="9fc8ec8c439b095c865cb112354e78c579eab601" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; to the underlying output stream as four bytes, high byte first. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">기입 &lt;code&gt;int&lt;/code&gt; 4 바이트 값으로서 기본 출력 스트림. 예외가 발생하지 않으면 &lt;code&gt;written&lt;/code&gt; 된 카운터 는 &lt;code&gt;4&lt;/code&gt; 씩 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="21fd77840911adcb012148e0dd277d71fbc9f872" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; value, which is comprised of four bytes, to the output stream.</source>
          <target state="translated">4 바이트로 구성된 &lt;code&gt;int&lt;/code&gt; 값을 출력 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="e04bb9fdd6e28e1e95affa5629a2ce9b0aeb2c1d" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; value, which is comprised of four bytes, to the output stream. The byte values to be written, in the order shown, are:</source>
          <target state="translated">4 바이트로 구성된 &lt;code&gt;int&lt;/code&gt; 값을 출력 스트림에 씁니다 . 표시된 순서대로 기록 될 바이트 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6564ff5174255cf0e7122d7fc5cb299aea6bc492" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;java.sql.Type.DATALINK&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">Java 프로그래밍 언어로 된 &lt;code&gt;java.sql.Type.DATALINK&lt;/code&gt; 오브젝트를이 &lt;code&gt;SQLOutputImpl&lt;/code&gt; 오브젝트에 기록합니다.</target>
        </trans-unit>
        <trans-unit id="6f372b9f15bffd1cd7326fb3b4792b5cc954e159" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;java.sql.Type.DATALINK&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts this value to a serializable &lt;code&gt;SerialDatalink&lt;/code&gt; SQL &lt;code&gt;DATALINK&lt;/code&gt; value before return it to the database.</source>
          <target state="translated">Java 프로그래밍 언어로 된 &lt;code&gt;java.sql.Type.DATALINK&lt;/code&gt; 오브젝트를이 &lt;code&gt;SQLOutputImpl&lt;/code&gt; 오브젝트에 기록합니다. 드라이버는이 값을 데이터베이스로 반환하기 전에 직렬화 가능한 &lt;code&gt;SerialDatalink&lt;/code&gt; SQL &lt;code&gt;DATALINK&lt;/code&gt; 값으로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="5e8354c8cfe9f0d9932569289c2573c78614272a" translate="yes" xml:space="preserve">
          <source>Writes an SQL &lt;code&gt;ARRAY&lt;/code&gt; value to the stream.</source>
          <target state="translated">SQL &lt;code&gt;ARRAY&lt;/code&gt; 값을 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="2b88fbfeb3285de8f20dc32999b639f985e8827e" translate="yes" xml:space="preserve">
          <source>Writes an SQL &lt;code&gt;BLOB&lt;/code&gt; value to the stream.</source>
          <target state="translated">SQL &lt;code&gt;BLOB&lt;/code&gt; 값을 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="e5cc9a2762874135cdf783e5ef59bd592db783ab" translate="yes" xml:space="preserve">
          <source>Writes an SQL &lt;code&gt;CLOB&lt;/code&gt; value to the stream.</source>
          <target state="translated">SQL &lt;code&gt;CLOB&lt;/code&gt; 값을 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="7ac466542da1fd570e1cd8a85e10a89c5a0478d3" translate="yes" xml:space="preserve">
          <source>Writes an SQL &lt;code&gt;NCLOB&lt;/code&gt; value to the stream.</source>
          <target state="translated">SQL &lt;code&gt;NCLOB&lt;/code&gt; 값을 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="7b0bab43ec185e7755ca9c724c82dd497e3a75ed" translate="yes" xml:space="preserve">
          <source>Writes an SQL &lt;code&gt;REF&lt;/code&gt; value to the stream.</source>
          <target state="translated">SQL &lt;code&gt;REF&lt;/code&gt; 값을 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="a32b75a2ac4c35b2bd936894dad35a1a6f742c74" translate="yes" xml:space="preserve">
          <source>Writes an SQL &lt;code&gt;ROWID&lt;/code&gt; value to the stream.</source>
          <target state="translated">SQL &lt;code&gt;ROWID&lt;/code&gt; 값을 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="afc969edfce1a8e9fcd57215da43efe7e17bb98e" translate="yes" xml:space="preserve">
          <source>Writes an SQL &lt;code&gt;XML&lt;/code&gt; value to the stream.</source>
          <target state="translated">SQL &lt;code&gt;XML&lt;/code&gt; 값을 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="7240a87818ff11b59c7bd527a158977756f9198d" translate="yes" xml:space="preserve">
          <source>Writes an SQL structured type value to the stream.</source>
          <target state="translated">SQL 구조화 된 유형 값을 스트림에 씁니다.</target>
        </trans-unit>
        <trans-unit id="c44ca6e735d840ae66abcebcaf5b0d7cfe24713f" translate="yes" xml:space="preserve">
          <source>Writes an array of &lt;code&gt;bytes&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;SQLOutputImpl&lt;/code&gt; 오브젝트에 Java 프로그래밍 언어 의 &lt;code&gt;bytes&lt;/code&gt; 배열을 기록 합니다.</target>
        </trans-unit>
        <trans-unit id="b474a9b337ecaac54d234baeb045aa62283d0dc8" translate="yes" xml:space="preserve">
          <source>Writes an array of &lt;code&gt;bytes&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;VARBINARY&lt;/code&gt; or &lt;code&gt;LONGVARBINARY&lt;/code&gt; before returning it to the database.</source>
          <target state="translated">이 &lt;code&gt;SQLOutputImpl&lt;/code&gt; 오브젝트에 Java 프로그래밍 언어 의 &lt;code&gt;bytes&lt;/code&gt; 배열을 기록 합니다. 드라이버는이를 데이터베이스로 리턴하기 전에 SQL &lt;code&gt;VARBINARY&lt;/code&gt; 또는 &lt;code&gt;LONGVARBINARY&lt;/code&gt; 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="5217c0bfa237688fd5947f4b90ec0cc289c0ec25" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes to the compressed output stream.</source>
          <target state="translated">압축 된 출력 스트림에 바이트 배열을 씁니다.</target>
        </trans-unit>
        <trans-unit id="91391ca01713b61e3a68471e88e1a2ec74a5e484" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes to the compressed output stream. This method will block until all the bytes are written.</source>
          <target state="translated">바이트 배열을 압축 출력 스트림에 기입합니다. 이 메소드는 모든 바이트가 기록 될 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="6dce90598d23fb38220959b230e17daa56e43c23" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes to the current ZIP entry data.</source>
          <target state="translated">현재 ZIP 항목 데이터에 바이트 배열을 씁니다.</target>
        </trans-unit>
        <trans-unit id="5bcc78bbe57b6ce8a96809d5c51d5bdd7eb8d10e" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes to the current ZIP entry data. This method will block until all the bytes are written.</source>
          <target state="translated">바이트 배열을 현재 ZIP 항목 데이터에 씁니다. 이 메소드는 모든 바이트가 기록 될 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="b65fd57256c0433acff32087a2d8da5eaf47411f" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes to the uncompressed output stream.</source>
          <target state="translated">압축되지 않은 출력 스트림에 바이트 배열을 씁니다.</target>
        </trans-unit>
        <trans-unit id="197c4236f7ff27946de3d127438d615e38302ed3" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes.</source>
          <target state="translated">바이트 배열을 씁니다.</target>
        </trans-unit>
        <trans-unit id="184076d4a82e468a9041fc00d661d8b7d8f621bd" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes. This method will block until the bytes are actually written.</source>
          <target state="translated">바이트 배열을 씁니다. 이 메소드는 실제로 바이트가 기록 될 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="8dd5aee302b286670386d8cc0bc1e852dfd89da5" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes. Will block until the bytes are actually written.</source>
          <target state="translated">바이트 배열을 씁니다. 바이트가 실제로 쓰여질 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="ea42af8fd102a5d23675fcd8f7e1a21accb34a84" translate="yes" xml:space="preserve">
          <source>Writes an array of characters.</source>
          <target state="translated">문자 배열을 씁니다.</target>
        </trans-unit>
        <trans-unit id="928868e95fe6511cf01eeb699debe02725148a7f" translate="yes" xml:space="preserve">
          <source>Writes an array of characters. This method cannot be inherited from the Writer class because it must suppress I/O exceptions.</source>
          <target state="translated">문자 배열을 씁니다. 이 메소드는 I / O 예외를 억제해야하므로 Writer 클래스에서 상속 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="52aa56d648776d9495d9366408ffa13186bb65ce" translate="yes" xml:space="preserve">
          <source>Writes an attribute to the output stream</source>
          <target state="translated">출력 스트림에 속성을 씁니다.</target>
        </trans-unit>
        <trans-unit id="d2be112208b86261986a1ae461b3c896dc388e6c" translate="yes" xml:space="preserve">
          <source>Writes an attribute to the output stream without a prefix.</source>
          <target state="translated">접두사없이 출력 스트림에 속성을 씁니다.</target>
        </trans-unit>
        <trans-unit id="fff7d6a6f1bfe9778737c1fd78975331a3f83b47" translate="yes" xml:space="preserve">
          <source>Writes an empty element tag to the output</source>
          <target state="translated">출력에 빈 요소 태그를 씁니다.</target>
        </trans-unit>
        <trans-unit id="f365dd8923cf096a9c9ae1d8063f6577f24f28f0" translate="yes" xml:space="preserve">
          <source>Writes an end tag to the output relying on the internal state of the writer to determine the prefix and local name of the event.</source>
          <target state="translated">이벤트의 접두사 및 로컬 이름을 결정하기 위해 작성기의 내부 상태에 따라 출력에 종료 태그를 씁니다.</target>
        </trans-unit>
        <trans-unit id="2f6c2c4a372fcf8e32fba62c76c2b54b46f82b19" translate="yes" xml:space="preserve">
          <source>Writes an entity reference</source>
          <target state="translated">엔티티 참조를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="845ca9715bac35ef1947ecff1b01781b98b923f3" translate="yes" xml:space="preserve">
          <source>Writes an image using an arbitrary &lt;code&gt;ImageWriter&lt;/code&gt; that supports the given format to a &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">주어진 형식을 지원 하는 임의의 &lt;code&gt;ImageWriter&lt;/code&gt; 를 사용하여 이미지를 &lt;code&gt;File&lt;/code&gt; 에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="ab7e466b9e9f6735bac5eb62165c0f91b84b2869" translate="yes" xml:space="preserve">
          <source>Writes an image using an arbitrary &lt;code&gt;ImageWriter&lt;/code&gt; that supports the given format to a &lt;code&gt;File&lt;/code&gt;. If there is already a &lt;code&gt;File&lt;/code&gt; present, its contents are discarded.</source>
          <target state="translated">주어진 형식을 지원 하는 임의의 &lt;code&gt;ImageWriter&lt;/code&gt; 를 사용하여 이미지를 &lt;code&gt;File&lt;/code&gt; 에 씁니다 . &lt;code&gt;File&lt;/code&gt; 이 이미 존재하면 그 내용은 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="c33f9616c13e7b7edbad66a907a09cd89959adef" translate="yes" xml:space="preserve">
          <source>Writes an image using an arbitrary &lt;code&gt;ImageWriter&lt;/code&gt; that supports the given format to an &lt;code&gt;OutputStream&lt;/code&gt;.</source>
          <target state="translated">임의 이용한 화상 기입 &lt;code&gt;ImageWriter&lt;/code&gt; 내지 An 지정된 포맷을 지원 &lt;code&gt;OutputStream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="029b27106448a88b4763369b511ecf056a37b60f" translate="yes" xml:space="preserve">
          <source>Writes an image using the an arbitrary &lt;code&gt;ImageWriter&lt;/code&gt; that supports the given format to an &lt;code&gt;ImageOutputStream&lt;/code&gt;.</source>
          <target state="translated">지정된 형식을 지원 하는 임의의 &lt;code&gt;ImageWriter&lt;/code&gt; 를 사용하여 &lt;code&gt;ImageOutputStream&lt;/code&gt; 에 이미지를 씁니다 .</target>
        </trans-unit>
        <trans-unit id="50e3dd58b633ef56e1113523580bcc40cd8f5260" translate="yes" xml:space="preserve">
          <source>Writes an image using the an arbitrary &lt;code&gt;ImageWriter&lt;/code&gt; that supports the given format to an &lt;code&gt;ImageOutputStream&lt;/code&gt;. The image is written to the &lt;code&gt;ImageOutputStream&lt;/code&gt; starting at the current stream pointer, overwriting existing stream data from that point forward, if present.</source>
          <target state="translated">지정된 형식을 지원 하는 임의의 &lt;code&gt;ImageWriter&lt;/code&gt; 를 사용해 이미지를 &lt;code&gt;ImageOutputStream&lt;/code&gt; 에 기입 합니다. 이미지는 현재 스트림 포인터에서 시작 하여 &lt;code&gt;ImageOutputStream&lt;/code&gt; 에 기록되며 , 존재하는 경우 해당 시점부터 기존 스트림 데이터를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="90f8a005a0e018089c9a966aa619c33c07892546" translate="yes" xml:space="preserve">
          <source>Writes an xml comment with the data enclosed</source>
          <target state="translated">데이터를 포함하여 xml 주석을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="5de95ba3e3608236749217a0c7e571c0056a27af" translate="yes" xml:space="preserve">
          <source>Writes any cached events to the underlying output mechanism</source>
          <target state="translated">캐시 된 이벤트를 기본 출력 메커니즘에 기록합니다.</target>
        </trans-unit>
        <trans-unit id="ab24f3dcbe1fa930ff321e8116207af7e2609aeb" translate="yes" xml:space="preserve">
          <source>Writes any remaining uncompressed data to the output stream and closes the underlying output stream.</source>
          <target state="translated">압축되지 않은 나머지 데이터를 출력 스트림에 기록하고 기본 출력 스트림을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="ea812aceedf14d0e6ad904b2cb8f433e4915a909" translate="yes" xml:space="preserve">
          <source>Writes array of bytes to the compressed output stream.</source>
          <target state="translated">압축 된 출력 스트림에 바이트 배열을 씁니다.</target>
        </trans-unit>
        <trans-unit id="bf35ba162e8457e73f54882a5c5184fa9e4fc908" translate="yes" xml:space="preserve">
          <source>Writes array of bytes to the compressed output stream. This method will block until all the bytes are written.</source>
          <target state="translated">바이트 배열을 압축 출력 스트림에 기입합니다. 이 메소드는 모든 바이트가 기록 될 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="37ced05917aa020878d79b8932701d27f22098fc" translate="yes" xml:space="preserve">
          <source>Writes audio data to the mixer via this source data line.</source>
          <target state="translated">이 소스 데이터 라인을 통해 오디오 데이터를 믹서에 씁니다.</target>
        </trans-unit>
        <trans-unit id="f8a4f11dbea6b299c527b750b72fea853ce19352" translate="yes" xml:space="preserve">
          <source>Writes audio data to the mixer via this source data line. The requested number of bytes of data are read from the specified array, starting at the given offset into the array, and written to the data line's buffer. If the caller attempts to write more data than can currently be written (see &lt;a href=&quot;dataline#available()&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;), this method blocks until the requested amount of data has been written. This applies even if the requested amount of data to write is greater than the data line's buffer size. However, if the data line is closed, stopped, or flushed before the requested amount has been written, the method no longer blocks, but returns the number of bytes written thus far.</source>
          <target state="translated">이 소스 데이터 라인을 통해 오디오 데이터를 믹서에 씁니다. 요청 된 데이터 바이트 수는 지정된 오프셋에서 시작하여 지정된 배열에서 읽혀지고 데이터 라인의 버퍼에 기록됩니다. 호출자가 현재 쓸 수있는 것보다 더 많은 데이터를 쓰려고하면 ( &lt;a href=&quot;dataline#available()&quot;&gt; &lt;code&gt;available&lt;/code&gt; &lt;/a&gt; 참조 )이 메서드는 요청 된 양의 데이터가 기록 될 때까지 차단됩니다. 이는 쓰기 위해 요청 된 데이터 양이 데이터 라인의 버퍼 크기보다 큰 경우에도 적용됩니다. 그러나 요청 된 양이 기록되기 전에 데이터 라인이 닫히거나 중지되거나 플러시되면 메서드는 더 이상 차단되지 않고 지금까지 기록 된 바이트 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9f542e25c7d41a9ed23b80d6673b5442bf3f0be9" translate="yes" xml:space="preserve">
          <source>Writes audio data to the mixer via this source data line. The requested number of bytes of data are read from the specified array, starting at the given offset into the array, and written to the data line's buffer. If the caller attempts to write more data than can currently be written (see &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;), this method blocks until the requested amount of data has been written. This applies even if the requested amount of data to write is greater than the data line's buffer size. However, if the data line is closed, stopped, or flushed before the requested amount has been written, the method no longer blocks, but returns the number of bytes written thus far.</source>
          <target state="translated">이 소스 데이터 라인을 통해 오디오 데이터를 믹서에 씁니다. 요청 된 바이트 수의 데이터는 지정된 오프셋에서 지정된 오프셋부터 배열로 읽어 들여 데이터 라인의 버퍼에 기록됩니다. 발신자가 현재 쓸 수있는 것보다 많은 데이터를 쓰려고 시도하는 경우 ( &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 참조) )이 방법은 요청 된 양의 데이터가 쓰여질 때까지 차단됩니다. 이것은 요청 된 쓰기 데이터 량이 데이터 라인의 버퍼 크기보다 큰 경우에도 적용됩니다. 그러나 요청 된 양이 쓰여지기 전에 데이터 라인이 닫히거나 중지되거나 플러시되면 메소드는 더 이상 차단되지 않고 지금까지 기록 된 바이트 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="70af5ea88b88ac39f37fa0e6431e3587c4947620" translate="yes" xml:space="preserve">
          <source>Writes bytes to a file.</source>
          <target state="translated">파일에 바이트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="539e94f80819f8addfe61f29f8d0c0095d59f44a" translate="yes" xml:space="preserve">
          <source>Writes bytes to a file. The &lt;code&gt;options&lt;/code&gt; parameter specifies how the file is created or opened. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;#isRegularFile(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt;. All bytes in the byte array are written to the file. The method ensures that the file is closed when all bytes have been written (or an I/O error or other runtime exception is thrown). If an I/O error occurs then it may do so after the file has been created or truncated, or after some bytes have been written to the file.</source>
          <target state="translated">파일에 바이트를 씁니다. &lt;code&gt;options&lt;/code&gt; 파일을 만들거나 열 방법을 지정하는 매개 변수입니다. 옵션이 없으면이 메서드는 &lt;a href=&quot;standardopenoption#CREATE&quot;&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt; &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt; 옵션이 있는 것처럼 작동합니다 . 즉, 쓰기 위해 파일을 열고, 파일이없는 경우 파일을 생성하거나, 기존 &lt;a href=&quot;#isRegularFile(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;regular-file&lt;/code&gt; &lt;/a&gt; 을 처음 에 &lt;code&gt;0&lt;/code&gt; 크기로 자릅니다 . 바이트 배열의 모든 바이트가 파일에 기록됩니다. 이 메서드는 모든 바이트가 기록되었을 때 (또는 I / O 오류 또는 기타 런타임 예외가 발생했을 때) 파일이 닫히도록합니다. I / O 오류가 발생하면 파일이 작성되거나 잘린 후 또는 파일에 일부 바이트가 기록 된 후 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="87e219a2917354808d12478e2ed7441db173e738" translate="yes" xml:space="preserve">
          <source>Writes bytes to a file. The &lt;code&gt;options&lt;/code&gt; parameter specifies how the the file is created or opened. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt;. All bytes in the byte array are written to the file. The method ensures that the file is closed when all bytes have been written (or an I/O error or other runtime exception is thrown). If an I/O error occurs then it may do so after the file has created or truncated, or after some bytes have been written to the file.</source>
          <target state="translated">바이트를 파일에 씁니다. &lt;code&gt;options&lt;/code&gt; 하여 파일을 만들거나 열 방법을 지정하는 매개 변수입니다. 옵션이 없으면이 메소드는 &lt;a href=&quot;standardopenoption#CREATE&quot;&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt; &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt; 옵션이 있는 것처럼 작동합니다 . 즉, 파일을 작성하기 위해 파일을 열거 나 존재하지 않는 경우 파일을 만들거나 기존 &lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;regular-file&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;0&lt;/code&gt; 크기로 자릅니다. . 바이트 배열의 모든 바이트가 파일에 기록됩니다. 이 메소드는 모든 바이트가 기록 될 때 파일이 닫히도록합니다 (또는 I / O 오류 또는 기타 런타임 예외가 발생 함). I / O 오류가 발생하면 파일이 작성되거나 잘린 후 또는 일부 바이트가 파일에 기록 된 후에 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3aa9eb435ce66122fd3b1fbb9683dc6f39b12396" translate="yes" xml:space="preserve">
          <source>Writes characters to the buffer.</source>
          <target state="translated">버퍼에 문자를 씁니다.</target>
        </trans-unit>
        <trans-unit id="7d60a1b7a1a3d14a49cb496536b68fe0e5783720" translate="yes" xml:space="preserve">
          <source>Writes content from a document to the given stream as plain text.</source>
          <target state="translated">문서의 내용을 지정된 스트림에 일반 텍스트로 씁니다.</target>
        </trans-unit>
        <trans-unit id="d97477c205ceea09c92c5946659e274241b1ae36" translate="yes" xml:space="preserve">
          <source>Writes content from a document to the given stream in a format appropriate for this kind of content handler.</source>
          <target state="translated">이러한 종류의 콘텐츠 처리기에 적합한 형식으로 문서의 콘텐츠를 지정된 스트림에 씁니다.</target>
        </trans-unit>
        <trans-unit id="b26649091ef7b5d2a209d730bd88924f12963e9c" translate="yes" xml:space="preserve">
          <source>Writes eight bytes containing the given double value, in the current byte order, into this buffer at the current position, and then increments the position by eight.</source>
          <target state="translated">현재의 바이트 순서로 지정된 double 치를 포함한 8 바이트를 현재 위치의이 버퍼에 기입 해, 위치를 8 증분시킵니다.</target>
        </trans-unit>
        <trans-unit id="29fc7be2d2fa2a9838cc38ff4c3934f5c3f3655d" translate="yes" xml:space="preserve">
          <source>Writes eight bytes containing the given double value, in the current byte order, into this buffer at the given index.</source>
          <target state="translated">현재의 바이트 순서로 지정된 double 치를 포함한 8 바이트를 지정된 인덱스의이 버퍼에 기입합니다.</target>
        </trans-unit>
        <trans-unit id="cc89b642bf8674896232f688adbc8ebc5d1dfdc8" translate="yes" xml:space="preserve">
          <source>Writes eight bytes containing the given long value, in the current byte order, into this buffer at the current position, and then increments the position by eight.</source>
          <target state="translated">현재 바이트 순서로 지정된 long 값을 포함하는 8 바이트를 현재 위치의이 버퍼에 쓴 다음 위치를 8 씩 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="2bb4a200c6266d5b89a3ab96d32530f2a49d3e59" translate="yes" xml:space="preserve">
          <source>Writes eight bytes containing the given long value, in the current byte order, into this buffer at the given index.</source>
          <target state="translated">현재의 바이트 순서로, 지정된 long 치를 포함한 8 바이트를, 지정된 인덱스의이 버퍼에 기입합니다.</target>
        </trans-unit>
        <trans-unit id="2487fee69be7365dce9130ceec028a6bb7fc07e9" translate="yes" xml:space="preserve">
          <source>Writes every character in the string &lt;code&gt;s&lt;/code&gt;, to the output stream, in order, two bytes per character.</source>
          <target state="translated">문자열 &lt;code&gt;s&lt;/code&gt; 의 모든 문자를 문자 당 2 바이트 순서대로 출력 스트림 에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="b9d0787a90c45f72d95f7e055e81599ca892dbaf" translate="yes" xml:space="preserve">
          <source>Writes every character in the string &lt;code&gt;s&lt;/code&gt;, to the output stream, in order, two bytes per character. If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. If &lt;code&gt;s.length&lt;/code&gt; is zero, then no characters are written. Otherwise, the character &lt;code&gt;s[0]&lt;/code&gt; is written first, then &lt;code&gt;s[1]&lt;/code&gt;, and so on; the last character written is &lt;code&gt;s[s.length-1]&lt;/code&gt;. For each character, two bytes are actually written, high-order byte first, in exactly the manner of the &lt;code&gt;writeChar&lt;/code&gt; method.</source>
          <target state="translated">문자열 &lt;code&gt;s&lt;/code&gt; 의 모든 문자를 문자 당 2 바이트의 순서로 출력 스트림 에 씁니다 . 경우 &lt;code&gt;s&lt;/code&gt; 입니다 &lt;code&gt;null&lt;/code&gt; 하는 &lt;code&gt;NullPointerException&lt;/code&gt; 발생합니다. 경우 &lt;code&gt;s.length&lt;/code&gt; 가 제로 다음에 문자가 기록되지 않습니다. 그렇지 않으면 문자 &lt;code&gt;s[0]&lt;/code&gt; 이 먼저 기록 된 다음 &lt;code&gt;s[1]&lt;/code&gt; 등 이 기록 됩니다. 마지막으로 쓴 문자는 &lt;code&gt;s[s.length-1]&lt;/code&gt; 입니다. 각 문자에 대해 정확히 2 개의 바이트가 &lt;code&gt;writeChar&lt;/code&gt; 메소드 의 방식으로 실제로 높은 순서의 바이트가 먼저 기록 됩니다.</target>
        </trans-unit>
        <trans-unit id="3b4e00ea7b401f90dc90c64677abaf47d2170156" translate="yes" xml:space="preserve">
          <source>Writes four bytes containing the given float value, in the current byte order, into this buffer at the current position, and then increments the position by four.</source>
          <target state="translated">현재 바이트 순서로 지정된 float 값을 포함하는 4 바이트를 현재 위치의이 버퍼에 쓴 다음 위치를 4 씩 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="5d979f53ff93d5b35a5d4de9156c84a797cd1d5a" translate="yes" xml:space="preserve">
          <source>Writes four bytes containing the given float value, in the current byte order, into this buffer at the given index.</source>
          <target state="translated">현재의 바이트 순서로, 지정된 float 치를 포함한 4 바이트를 지정된 인덱스의이 버퍼에 기입합니다.</target>
        </trans-unit>
        <trans-unit id="d8eac6d4c7237a86bdd435eec454a1165fa276c0" translate="yes" xml:space="preserve">
          <source>Writes four bytes containing the given int value, in the current byte order, into this buffer at the current position, and then increments the position by four.</source>
          <target state="translated">현재 바이트 순서로 지정된 int 값을 포함하는 4 바이트를 현재 위치의이 버퍼에 쓴 다음 위치를 4 씩 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="5cf0746092fdb63187e2dce0e857024f58099778" translate="yes" xml:space="preserve">
          <source>Writes four bytes containing the given int value, in the current byte order, into this buffer at the given index.</source>
          <target state="translated">지정된 int 값을 포함하는 4 바이트를 현재 바이트 순서로 지정된 인덱스의이 버퍼에 씁니다.</target>
        </trans-unit>
        <trans-unit id="ceb6f95baf23beaeef39ebca1fb801718774f47c" translate="yes" xml:space="preserve">
          <source>Writes next block of compressed data to the output stream.</source>
          <target state="translated">다음 압축 데이터 블록을 출력 스트림에 씁니다.</target>
        </trans-unit>
        <trans-unit id="f716150ad2b59e1e2c39f51e686b6112c9516c37" translate="yes" xml:space="preserve">
          <source>Writes out a &lt;code&gt;byte&lt;/code&gt; to the underlying output stream as a 1-byte value.</source>
          <target state="translated">기본 출력 스트림에 1 바이트 값으로 &lt;code&gt;byte&lt;/code&gt; 를 씁니다 .</target>
        </trans-unit>
        <trans-unit id="793d3092c9065640c3553038c363272625fcd2c4" translate="yes" xml:space="preserve">
          <source>Writes out a &lt;code&gt;byte&lt;/code&gt; to the underlying output stream as a 1-byte value. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">기본 출력 스트림에 1 바이트 값으로 &lt;code&gt;byte&lt;/code&gt; 를 씁니다 . 예외가 발생하지 않으면 &lt;code&gt;written&lt;/code&gt; 된 카운터 는 &lt;code&gt;1&lt;/code&gt; 씩 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="d781a8fad1ddbd48d34b00f1d27f845c18c1752a" translate="yes" xml:space="preserve">
          <source>Writes out a character.</source>
          <target state="translated">문자를 씁니다.</target>
        </trans-unit>
        <trans-unit id="a4149ecfaf0a53ba4649ab673e88332a5ee9da18" translate="yes" xml:space="preserve">
          <source>Writes out a character. This is implemented to invoke the &lt;code&gt;write&lt;/code&gt; method that takes a char[].</source>
          <target state="translated">문자를 씁니다. 이것은 char []를 받는 &lt;code&gt;write&lt;/code&gt; 메소드 를 호출하기 위해 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="b140b7ef352adc85171d5601e6a4059a8beb9ddb" translate="yes" xml:space="preserve">
          <source>Writes out a start tag appropriately indented.</source>
          <target state="translated">적절하게 들여 쓰기 된 시작 태그를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="59cd99484ad8b2ddeeb11187543a4b9e32ee97be" translate="yes" xml:space="preserve">
          <source>Writes out a start tag appropriately indented. Also increments the indent level.</source>
          <target state="translated">적절하게 들여 쓰기 된 시작 태그를 작성합니다. 또한 들여 쓰기 수준을 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="3adc971c51b7b35d342948b59ee6c8ece76c15bf" translate="yes" xml:space="preserve">
          <source>Writes out a start tag for the &amp;lt;font&amp;gt; tag. Because font tags cannot be nested, this method closes out any enclosing font tag before writing out a new start tag.</source>
          <target state="translated">&amp;lt;font&amp;gt; 태그의 시작 태그를 작성합니다. 글꼴 태그는 중첩 될 수 없기 때문에이 메서드는 새 시작 태그를 작성하기 전에 둘러싸는 글꼴 태그를 모두 닫습니다.</target>
        </trans-unit>
        <trans-unit id="79f42a920e1137b6f79fa6f072c0a5db14d2ce25" translate="yes" xml:space="preserve">
          <source>Writes out a start tag for the element.</source>
          <target state="translated">요소의 시작 태그를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="356d987d07c2b42cce555e735e5353fcf20d7274" translate="yes" xml:space="preserve">
          <source>Writes out a start tag for the element. Ignores all synthesized elements.</source>
          <target state="translated">요소의 시작 태그를 작성합니다. 합성 된 모든 요소를 ​​무시합니다.</target>
        </trans-unit>
        <trans-unit id="32e7980350f2d5d345b80613927c3a10708d9d12" translate="yes" xml:space="preserve">
          <source>Writes out a string.</source>
          <target state="translated">문자열을 씁니다.</target>
        </trans-unit>
        <trans-unit id="493534febd569e8eefd0de76e69315ffc098581b" translate="yes" xml:space="preserve">
          <source>Writes out a string. This is implemented to invoke the &lt;code&gt;write&lt;/code&gt; method that takes a char[].</source>
          <target state="translated">문자열을 씁니다. 이것은 char []를 받는 &lt;code&gt;write&lt;/code&gt; 메소드 를 호출하기 위해 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="242b41b748966187939dd514ce8f221ecfb52196" translate="yes" xml:space="preserve">
          <source>Writes out all empty elements (all tags that have no corresponding end tag).</source>
          <target state="translated">모든 빈 요소 (해당하는 종료 태그가없는 모든 태그)를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="45fd8d7e498fa017170b717aede40700f6694fc2" translate="yes" xml:space="preserve">
          <source>Writes out all the attributes for the following types: StyleConstants.ParagraphConstants, StyleConstants.CharacterConstants, StyleConstants.FontConstants, StyleConstants.ColorConstants.</source>
          <target state="translated">StyleConstants.ParagraphConstants, StyleConstants.CharacterConstants, StyleConstants.FontConstants, StyleConstants.ColorConstants 유형에 대한 모든 속성을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="b15c5c0d66618d9399589ac1eea1921ed967d0f6" translate="yes" xml:space="preserve">
          <source>Writes out all the attributes for the following types: StyleConstants.ParagraphConstants, StyleConstants.CharacterConstants, StyleConstants.FontConstants, StyleConstants.ColorConstants. The attribute name and value are separated by a colon. Each pair is separated by a semicolon.</source>
          <target state="translated">StyleConstants.ParagraphConstants, StyleConstants.CharacterConstants, StyleConstants.FontConstants, StyleConstants.ColorConstants 유형에 대한 모든 속성을 작성합니다. 속성 이름과 값은 콜론으로 구분됩니다. 각 쌍은 세미콜론으로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="3ea000abebf3e796c2231c4084f5c3ec51fda40e" translate="yes" xml:space="preserve">
          <source>Writes out all the named styles as the content of the &amp;lt;style&amp;gt; tag.</source>
          <target state="translated">모든 명명 된 스타일을 &amp;lt;style&amp;gt; 태그의 내용으로 작성합니다.</target>
        </trans-unit>
        <trans-unit id="95aa7506da86487c9d8a3dd4aad789dffcf726cb" translate="yes" xml:space="preserve">
          <source>Writes out an end tag appropriately indented.</source>
          <target state="translated">적절하게 들여 쓰기 된 종료 태그를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="f8a3e8b63a7d7db5de505123b83e2632e59b6f4a" translate="yes" xml:space="preserve">
          <source>Writes out an end tag appropriately indented. Also decrements the indent level.</source>
          <target state="translated">적절하게 들여 쓰기 된 종료 태그를 작성합니다. 또한 들여 쓰기 수준을 감소시킵니다.</target>
        </trans-unit>
        <trans-unit id="91e658fa4cec6ec79dc0e2ffcd3905fbdaf669c0" translate="yes" xml:space="preserve">
          <source>Writes out an end tag for the &amp;lt;font&amp;gt; tag.</source>
          <target state="translated">Writes out an end tag for the &amp;lt;font&amp;gt; tag.</target>
        </trans-unit>
        <trans-unit id="3d31826423dc7c1e67f148ff784ac0beacea46fe" translate="yes" xml:space="preserve">
          <source>Writes out an end tag for the element.</source>
          <target state="translated">Writes out an end tag for the element.</target>
        </trans-unit>
        <trans-unit id="3a070bf3f90011012888b6f65043e51f7be1db04" translate="yes" xml:space="preserve">
          <source>Writes out comments.</source>
          <target state="translated">Writes out comments.</target>
        </trans-unit>
        <trans-unit id="2e3bee8704d332f162a00133a136ad93991e1fcd" translate="yes" xml:space="preserve">
          <source>Writes out text that is contained in a TEXTAREA form element.</source>
          <target state="translated">Writes out text that is contained in a TEXTAREA form element.</target>
        </trans-unit>
        <trans-unit id="d8271b9150a2c67ce97fd91c10873bb46909d357" translate="yes" xml:space="preserve">
          <source>Writes out text.</source>
          <target state="translated">Writes out text.</target>
        </trans-unit>
        <trans-unit id="abc7bcf64efcb93db19ad0308ad3a28eed435488" translate="yes" xml:space="preserve">
          <source>Writes out text. If a range is specified when the constructor is invoked, then only the appropriate range of text is written out.</source>
          <target state="translated">Writes out text. If a range is specified when the constructor is invoked, then only the appropriate range of text is written out.</target>
        </trans-unit>
        <trans-unit id="1a2feb0ee03b2fb37577d2683165471850570c57" translate="yes" xml:space="preserve">
          <source>Writes out the &amp;lt;head&amp;gt; and &amp;lt;style&amp;gt; tags, and then invokes writeStyles() to write out all the named styles as the content of the &amp;lt;style&amp;gt; tag.</source>
          <target state="translated">Writes out the &amp;lt;head&amp;gt; and &amp;lt;style&amp;gt; tags, and then invokes writeStyles() to write out all the named styles as the content of the &amp;lt;style&amp;gt; tag.</target>
        </trans-unit>
        <trans-unit id="1d67167a503faefc3b4e96ac0d49dfd64c919c5a" translate="yes" xml:space="preserve">
          <source>Writes out the &amp;lt;head&amp;gt; and &amp;lt;style&amp;gt; tags, and then invokes writeStyles() to write out all the named styles as the content of the &amp;lt;style&amp;gt; tag. The content is surrounded by valid HTML comment markers to ensure that the document is viewable in applications/browsers that do not support the tag.</source>
          <target state="translated">Writes out the &amp;lt;head&amp;gt; and &amp;lt;style&amp;gt; tags, and then invokes writeStyles() to write out all the named styles as the content of the &amp;lt;style&amp;gt; tag. The content is surrounded by valid HTML comment markers to ensure that the document is viewable in applications/browsers that do not support the tag.</target>
        </trans-unit>
        <trans-unit id="cb594e7c2614c3f26268fa1d6f121a7690ffbc18" translate="yes" xml:space="preserve">
          <source>Writes out the attribute set in an HTML-compliant manner.</source>
          <target state="translated">Writes out the attribute set in an HTML-compliant manner.</target>
        </trans-unit>
        <trans-unit id="50df6d6c3b3e39b2b4d38cb825b404ff3b15a69f" translate="yes" xml:space="preserve">
          <source>Writes out the attribute set.</source>
          <target state="translated">Writes out the attribute set.</target>
        </trans-unit>
        <trans-unit id="3bbd16063a5b5b4cb118131679e17c07f900bc85" translate="yes" xml:space="preserve">
          <source>Writes out the attribute set. Ignores all attributes with a key of type HTML.Tag, attributes with a key of type StyleConstants, and attributes with a key of type HTML.Attribute.ENDTAG.</source>
          <target state="translated">Writes out the attribute set. Ignores all attributes with a key of type HTML.Tag, attributes with a key of type StyleConstants, and attributes with a key of type HTML.Attribute.ENDTAG.</target>
        </trans-unit>
        <trans-unit id="1b012971e329c1b5642a4a72d93bbe2b77837d70" translate="yes" xml:space="preserve">
          <source>Writes out the content of the Option form element.</source>
          <target state="translated">Writes out the content of the Option form element.</target>
        </trans-unit>
        <trans-unit id="522f62e68017f3dd760479be9b0d3f17baeb3def" translate="yes" xml:space="preserve">
          <source>Writes out the content of the SELECT form element.</source>
          <target state="translated">Writes out the content of the SELECT form element.</target>
        </trans-unit>
        <trans-unit id="4d59bf0b74e182fe97baa2f628898aa78e036aba" translate="yes" xml:space="preserve">
          <source>Writes out the remaining character-level attributes (attributes other than bold, italic, and underline) in an HTML-compliant way.</source>
          <target state="translated">Writes out the remaining character-level attributes (attributes other than bold, italic, and underline) in an HTML-compliant way.</target>
        </trans-unit>
        <trans-unit id="aab68f7962761ed64910659bf2f1f7f92a40c4d4" translate="yes" xml:space="preserve">
          <source>Writes out the remaining character-level attributes (attributes other than bold, italic, and underline) in an HTML-compliant way. Given that attributes such as font family and font size have no direct mapping to HTML tags, a &amp;lt;span&amp;gt; tag is generated and its style attribute is set to contain the list of remaining attributes just like inline styles.</source>
          <target state="translated">Writes out the remaining character-level attributes (attributes other than bold, italic, and underline) in an HTML-compliant way. Given that attributes such as font family and font size have no direct mapping to HTML tags, a &amp;lt;span&amp;gt; tag is generated and its style attribute is set to contain the list of remaining attributes just like inline styles.</target>
        </trans-unit>
        <trans-unit id="f1da4ae2350b8ea9bf6c7b5422ed8adaeef31d8e" translate="yes" xml:space="preserve">
          <source>Writes out the set of attributes as &quot; &amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;&quot; pairs.</source>
          <target state="translated">Writes out the set of attributes as &quot; &amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;&quot; pairs.</target>
        </trans-unit>
        <trans-unit id="8a0f5a5f07a705ce87b430d9d69b03ff6c74cbfc" translate="yes" xml:space="preserve">
          <source>Writes out the set of attributes as &quot; &amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;&quot; pairs. It throws an IOException when encountered.</source>
          <target state="translated">Writes out the set of attributes as &quot; &amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;&quot; pairs. It throws an IOException when encountered.</target>
        </trans-unit>
        <trans-unit id="88fb3884fdd7120949e40123aff7eb69222dd291" translate="yes" xml:space="preserve">
          <source>Writes out the string to the underlying output stream as a sequence of bytes.</source>
          <target state="translated">Writes out the string to the underlying output stream as a sequence of bytes.</target>
        </trans-unit>
        <trans-unit id="b05d15e021ce2f4dcac9e9d78114869b4a50f886" translate="yes" xml:space="preserve">
          <source>Writes out the string to the underlying output stream as a sequence of bytes. Each character in the string is written out, in sequence, by discarding its high eight bits. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by the length of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">문자열을 기본 출력 스트림에 바이트 시퀀스로 씁니다. 문자열의 각 문자는 상위 8 비트를 삭제하여 순서대로 작성됩니다. 예외가 발생하지 않으면 &lt;code&gt;written&lt;/code&gt; 된 카운터 는 &lt;code&gt;s&lt;/code&gt; 길이만큼 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="6a3054c268468152f2a8887eea01d971616cbb74" translate="yes" xml:space="preserve">
          <source>Writes remaining compressed data to the output stream and closes the underlying stream.</source>
          <target state="translated">나머지 압축 데이터를 출력 스트림에 기록하고 기본 스트림을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="28f3ab69dea5b395ecbb033c1f9e3a56f4abd902" translate="yes" xml:space="preserve">
          <source>Writes statement &lt;code&gt;oldStm&lt;/code&gt; to the stream.</source>
          <target state="translated">Writes statement &lt;code&gt;oldStm&lt;/code&gt; to the stream.</target>
        </trans-unit>
        <trans-unit id="61581676dc1ea35473d6a783082bf72e9c80ceec" translate="yes" xml:space="preserve">
          <source>Writes statement &lt;code&gt;oldStm&lt;/code&gt; to the stream. The &lt;code&gt;oldStm&lt;/code&gt; should be written entirely in terms of the callers environment, i.e. the target and all arguments should be part of the object graph being written. These expressions represent a series of &quot;what happened&quot; expressions which tell the output stream how to produce an object graph like the original.</source>
          <target state="translated">&lt;code&gt;oldStm&lt;/code&gt; 문 을 스트림에 씁니다 . &lt;code&gt;oldStm&lt;/code&gt; 는 호출자 환경의 관점에서 완전히 기록 대상 즉 모든 인자 객체 그래프의 일부가 기록되어 있어야한다. 이 표현식은 출력 스트림에 원본과 같은 객체 그래프를 생성하는 방법을 알려주는 일련의 &quot;무슨 일&quot;표현식을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f052f35920dd89a7054c35d1df3b6bfb93d13930" translate="yes" xml:space="preserve">
          <source>Writes text to a character-output stream, buffering characters so as to provide for the efficient writing of single characters, arrays, and strings.</source>
          <target state="translated">단일 문자, 배열 및 문자열을 효율적으로 쓸 수 있도록 문자를 버퍼링하여 문자 출력 스트림에 텍스트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="597dfd2df5025e0ac661bb05d062c2aa056c141e" translate="yes" xml:space="preserve">
          <source>Writes text to character files using a default buffer size.</source>
          <target state="translated">Writes text to character files using a default buffer size.</target>
        </trans-unit>
        <trans-unit id="6167d657904cfcab0dbb9315dd6a6ecb18ddf064" translate="yes" xml:space="preserve">
          <source>Writes text to character files using a default buffer size. Encoding from characters to bytes uses either a specified &lt;a href=&quot;../nio/charset/charset&quot;&gt;charset&lt;/a&gt; or the platform's &lt;a href=&quot;../nio/charset/charset#defaultCharset()&quot;&gt;default charset&lt;/a&gt;.</source>
          <target state="translated">Writes text to character files using a default buffer size. Encoding from characters to bytes uses either a specified &lt;a href=&quot;../nio/charset/charset&quot;&gt;charset&lt;/a&gt; or the platform's &lt;a href=&quot;../nio/charset/charset#defaultCharset()&quot;&gt;default charset&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="862b19d4b6ff1b6eff3c4ad6b6bdab89231c477b" translate="yes" xml:space="preserve">
          <source>Writes the 16 low-order bits of &lt;code&gt;v&lt;/code&gt; to the stream.</source>
          <target state="translated">Writes the 16 low-order bits of &lt;code&gt;v&lt;/code&gt; to the stream.</target>
        </trans-unit>
        <trans-unit id="46f7ffb3816bb380e3513417982c2f71b9fe2e32" translate="yes" xml:space="preserve">
          <source>Writes the 16 low-order bits of &lt;code&gt;v&lt;/code&gt; to the stream. The 16 high-order bits of &lt;code&gt;v&lt;/code&gt; are ignored. If the stream uses network byte order, the bytes written, in order, will be:</source>
          <target state="translated">하위 16 비트의 &lt;code&gt;v&lt;/code&gt; 를 스트림에 씁니다 . &lt;code&gt;v&lt;/code&gt; 의 16 개의 상위 비트 는 무시됩니다. 스트림이 네트워크 바이트 순서를 사용하는 경우 순서대로 작성된 바이트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2285f29a0b24000b5b0b1f1f80d441c9b5148486" translate="yes" xml:space="preserve">
          <source>Writes the 32 bits of &lt;code&gt;v&lt;/code&gt; to the stream.</source>
          <target state="translated">Writes the 32 bits of &lt;code&gt;v&lt;/code&gt; to the stream.</target>
        </trans-unit>
        <trans-unit id="1695f3633211b76ec7f857f5454ea6a247025c8d" translate="yes" xml:space="preserve">
          <source>Writes the 32 bits of &lt;code&gt;v&lt;/code&gt; to the stream. If the stream uses network byte order, the bytes written, in order, will be:</source>
          <target state="translated">&lt;code&gt;v&lt;/code&gt; 의 32 비트를 스트림에 씁니다 . 스트림이 네트워크 바이트 순서를 사용하는 경우 순서대로 작성된 바이트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="12bdda69ade361eb7dbeae8003665e8a3eff12fb" translate="yes" xml:space="preserve">
          <source>Writes the 64 bits of &lt;code&gt;v&lt;/code&gt; to the stream.</source>
          <target state="translated">Writes the 64 bits of &lt;code&gt;v&lt;/code&gt; to the stream.</target>
        </trans-unit>
        <trans-unit id="1ad02fac0fe368119ddb18c395ff897d2d58089f" translate="yes" xml:space="preserve">
          <source>Writes the 64 bits of &lt;code&gt;v&lt;/code&gt; to the stream. If the stream uses network byte order, the bytes written, in order, will be:</source>
          <target state="translated">&lt;code&gt;v&lt;/code&gt; 의 64 비트를 스트림에 씁니다 . 스트림이 네트워크 바이트 순서를 사용하는 경우 순서대로 작성된 바이트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d1e7aaab26c2b74832628edc0bc5c54f2c2b6383" translate="yes" xml:space="preserve">
          <source>Writes the 8 low-order bits of &lt;code&gt;v&lt;/code&gt; to the stream.</source>
          <target state="translated">Writes the 8 low-order bits of &lt;code&gt;v&lt;/code&gt; to the stream.</target>
        </trans-unit>
        <trans-unit id="1804455e9da4aaf420e36d129972367ec781e360" translate="yes" xml:space="preserve">
          <source>Writes the 8 low-order bits of &lt;code&gt;v&lt;/code&gt; to the stream. The 24 high-order bits of &lt;code&gt;v&lt;/code&gt; are ignored. (This means that &lt;code&gt;writeByte&lt;/code&gt; does exactly the same thing as &lt;code&gt;write&lt;/code&gt; for an integer argument.)</source>
          <target state="translated">하위 8 비트의 &lt;code&gt;v&lt;/code&gt; 를 스트림에 씁니다 . &lt;code&gt;v&lt;/code&gt; 의 24 개 상위 비트 는 무시됩니다. 이것은 &lt;code&gt;writeByte&lt;/code&gt; 가 정수 인수에 대한 &lt;code&gt;write&lt;/code&gt; 와 정확히 같은 것을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="19e78fdb1971c9362622f784b86e72a51fdd9069" translate="yes" xml:space="preserve">
          <source>Writes the Manifest to the specified OutputStream.</source>
          <target state="translated">Writes the Manifest to the specified OutputStream.</target>
        </trans-unit>
        <trans-unit id="89cd571628123202a3823b52aeb30a696038cb43" translate="yes" xml:space="preserve">
          <source>Writes the Manifest to the specified OutputStream. Attributes.Name.MANIFEST_VERSION must be set in MainAttributes prior to invoking this method.</source>
          <target state="translated">매니페스트를 지정된 OutputStream에 씁니다. 이 메소드를 호출하기 전에 MainAttributes에서 Attributes.Name.MANIFEST_VERSION을 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="56a6e43f8f49e535184e69201b1785713f290620" translate="yes" xml:space="preserve">
          <source>Writes the changes in this &lt;code&gt;RowSetWriter&lt;/code&gt; object's rowset back to the data source from which it got its data.</source>
          <target state="translated">Writes the changes in this &lt;code&gt;RowSetWriter&lt;/code&gt; object's rowset back to the data source from which it got its data.</target>
        </trans-unit>
        <trans-unit id="ed35cca7d83e05daee22aa9a3f126d06b836d5a5" translate="yes" xml:space="preserve">
          <source>Writes the complete contents of the specified byte array to this &lt;code&gt;ByteArrayOutputStream&lt;/code&gt;.</source>
          <target state="translated">Writes the complete contents of the specified byte array to this &lt;code&gt;ByteArrayOutputStream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9e9501319b3d34bbec70c3333e794fa37a6d454" translate="yes" xml:space="preserve">
          <source>Writes the complete contents of this &lt;code&gt;ByteArrayOutputStream&lt;/code&gt; to the specified output stream argument, as if by calling the output stream's write method using &lt;code&gt;out.write(buf, 0, count)&lt;/code&gt;.</source>
          <target state="translated">Writes the complete contents of this &lt;code&gt;ByteArrayOutputStream&lt;/code&gt; to the specified output stream argument, as if by calling the output stream's write method using &lt;code&gt;out.write(buf, 0, count)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c24338bb5d1fb51bd9cbd3d86a25bb4355deba24" translate="yes" xml:space="preserve">
          <source>Writes the complete contents of this byte array output stream to the specified output stream argument, as if by calling the output stream's write method using &lt;code&gt;out.write(buf, 0, count)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;out.write(buf, 0, count)&lt;/code&gt; 사용하여 출력 스트림의 write 메소드를 호출하는 것처럼이 바이트 배열 출력 스트림의 전체 내용을 지정된 출력 스트림 인수에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="ff4dae149c1ce83c7a6b820b14212cbe3bbf93f1" translate="yes" xml:space="preserve">
          <source>Writes the contents of the buffer to another character stream.</source>
          <target state="translated">버퍼의 내용을 다른 문자 스트림에 씁니다.</target>
        </trans-unit>
        <trans-unit id="625df89357bdd2344ade2b496e40fd50120f1e3a" translate="yes" xml:space="preserve">
          <source>Writes the data, properties, and metadata for this &lt;code&gt;WebRowSet&lt;/code&gt; object to the given &lt;code&gt;OutputStream&lt;/code&gt; object in XML format.</source>
          <target state="translated">Writes the data, properties, and metadata for this &lt;code&gt;WebRowSet&lt;/code&gt; object to the given &lt;code&gt;OutputStream&lt;/code&gt; object in XML format.</target>
        </trans-unit>
        <trans-unit id="5c40001a80f650ccea2798916fa3dc59bfca35b4" translate="yes" xml:space="preserve">
          <source>Writes the data, properties, and metadata for this &lt;code&gt;WebRowSet&lt;/code&gt; object to the given &lt;code&gt;Writer&lt;/code&gt; object in XML format.</source>
          <target state="translated">Writes the data, properties, and metadata for this &lt;code&gt;WebRowSet&lt;/code&gt; object to the given &lt;code&gt;Writer&lt;/code&gt; object in XML format.</target>
        </trans-unit>
        <trans-unit id="def01038d2b375e9be7d7c972c662a60bf85f6ed" translate="yes" xml:space="preserve">
          <source>Writes the default namespace to the stream</source>
          <target state="translated">Writes the default namespace to the stream</target>
        </trans-unit>
        <trans-unit id="f79062814f665166b5bf8b4fbf187fc654014a55" translate="yes" xml:space="preserve">
          <source>Writes the given &lt;code&gt;WebRowSet&lt;/code&gt; object to the specified &lt;code&gt;java.io.Writer&lt;/code&gt; output stream as an XML document.</source>
          <target state="translated">Writes the given &lt;code&gt;WebRowSet&lt;/code&gt; object to the specified &lt;code&gt;java.io.Writer&lt;/code&gt; output stream as an XML document.</target>
        </trans-unit>
        <trans-unit id="c53959f7ef1e7a69156e9085d95064c77f4d010b" translate="yes" xml:space="preserve">
          <source>Writes the given &lt;code&gt;WebRowSet&lt;/code&gt; object to the specified &lt;code&gt;java.io.Writer&lt;/code&gt; output stream as an XML document. This document includes the rowset's data, metadata, and properties plus the appropriate XML tags.</source>
          <target state="translated">Writes the given &lt;code&gt;WebRowSet&lt;/code&gt; object to the specified &lt;code&gt;java.io.Writer&lt;/code&gt; output stream as an XML document. This document includes the rowset's data, metadata, and properties plus the appropriate XML tags.</target>
        </trans-unit>
        <trans-unit id="2fc66b6ae43cb5f22e10fbdc9f01c80ebb40e0aa" translate="yes" xml:space="preserve">
          <source>Writes the given Java &lt;code&gt;String&lt;/code&gt; to the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;Clob&lt;/code&gt; object designates at the position &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="translated">Writes the given Java &lt;code&gt;String&lt;/code&gt; to the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;Clob&lt;/code&gt; object designates at the position &lt;code&gt;pos&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d16b2514bafe679b47004e8cd89d3c68d61aebc" translate="yes" xml:space="preserve">
          <source>Writes the given Java &lt;code&gt;String&lt;/code&gt; to the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;Clob&lt;/code&gt; object designates at the position &lt;code&gt;pos&lt;/code&gt;. The string will overwrite the existing characters in the &lt;code&gt;Clob&lt;/code&gt; object starting at the position &lt;code&gt;pos&lt;/code&gt;. If the end of the &lt;code&gt;Clob&lt;/code&gt; value is reached while writing the given string, then the length of the &lt;code&gt;Clob&lt;/code&gt; value will be increased to accommodate the extra characters.</source>
          <target state="translated">Writes the given Java &lt;code&gt;String&lt;/code&gt; to the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;Clob&lt;/code&gt; object designates at the position &lt;code&gt;pos&lt;/code&gt; . The string will overwrite the existing characters in the &lt;code&gt;Clob&lt;/code&gt; object starting at the position &lt;code&gt;pos&lt;/code&gt; . If the end of the &lt;code&gt;Clob&lt;/code&gt; value is reached while writing the given string, then the length of the &lt;code&gt;Clob&lt;/code&gt; value will be increased to accommodate the extra characters.</target>
        </trans-unit>
        <trans-unit id="57a742d5137a159149b8c8b646d025117a64f0e3" translate="yes" xml:space="preserve">
          <source>Writes the given Java &lt;code&gt;String&lt;/code&gt; to the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;SerialClob&lt;/code&gt; object represents, at the position &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="translated">Writes the given Java &lt;code&gt;String&lt;/code&gt; to the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;SerialClob&lt;/code&gt; object represents, at the position &lt;code&gt;pos&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a11fbed6e0f0c000e7ac73c751f5706337ffea4" translate="yes" xml:space="preserve">
          <source>Writes the given array of bytes to the &lt;code&gt;BLOB&lt;/code&gt; value that this &lt;code&gt;Blob&lt;/code&gt; object represents, starting at position &lt;code&gt;pos&lt;/code&gt;, and returns the number of bytes written.</source>
          <target state="translated">Writes the given array of bytes to the &lt;code&gt;BLOB&lt;/code&gt; value that this &lt;code&gt;Blob&lt;/code&gt; object represents, starting at position &lt;code&gt;pos&lt;/code&gt; , and returns the number of bytes written.</target>
        </trans-unit>
        <trans-unit id="de7a837912d2ada585ea670a18a22c40ee3566d8" translate="yes" xml:space="preserve">
          <source>Writes the given array of bytes to the &lt;code&gt;BLOB&lt;/code&gt; value that this &lt;code&gt;Blob&lt;/code&gt; object represents, starting at position &lt;code&gt;pos&lt;/code&gt;, and returns the number of bytes written. The array of bytes will overwrite the existing bytes in the &lt;code&gt;Blob&lt;/code&gt; object starting at the position &lt;code&gt;pos&lt;/code&gt;. If the end of the &lt;code&gt;Blob&lt;/code&gt; value is reached while writing the array of bytes, then the length of the &lt;code&gt;Blob&lt;/code&gt; value will be increased to accommodate the extra bytes.</source>
          <target state="translated">Writes the given array of bytes to the &lt;code&gt;BLOB&lt;/code&gt; value that this &lt;code&gt;Blob&lt;/code&gt; object represents, starting at position &lt;code&gt;pos&lt;/code&gt; , and returns the number of bytes written. The array of bytes will overwrite the existing bytes in the &lt;code&gt;Blob&lt;/code&gt; object starting at the position &lt;code&gt;pos&lt;/code&gt; . If the end of the &lt;code&gt;Blob&lt;/code&gt; value is reached while writing the array of bytes, then the length of the &lt;code&gt;Blob&lt;/code&gt; value will be increased to accommodate the extra bytes.</target>
        </trans-unit>
        <trans-unit id="d1d0f592eeac5c796ea935b5d994096745d157f7" translate="yes" xml:space="preserve">
          <source>Writes the given byte into this buffer at the current position, and then increments the position.</source>
          <target state="translated">현재 위치에서 지정된 바이트를이 버퍼에 쓴 다음 위치를 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="dd7b88652ec60af74a840f947c7b86d252782b34" translate="yes" xml:space="preserve">
          <source>Writes the given byte into this buffer at the given index.</source>
          <target state="translated">지정된 인덱스의 지정된 바이트를이 버퍼에 기입합니다.</target>
        </trans-unit>
        <trans-unit id="6a61149f23f16decaac4eae92463c7ef12672ae5" translate="yes" xml:space="preserve">
          <source>Writes the given char into this buffer at the current position, and then increments the position.</source>
          <target state="translated">현재 위치에서 지정된 문자를이 버퍼에 쓴 다음 위치를 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="4f770fa38d98aec466fccb25555cc99c0b9ddbaf" translate="yes" xml:space="preserve">
          <source>Writes the given char into this buffer at the given index.</source>
          <target state="translated">지정된 인덱스의 지정된 문자를이 버퍼에 기입합니다.</target>
        </trans-unit>
        <trans-unit id="f2d1506e6de2b9485d5e760430b8d8a6e992441f" translate="yes" xml:space="preserve">
          <source>Writes the given double into this buffer at the current position, and then increments the position.</source>
          <target state="translated">현재 위치에서 지정된 double을이 버퍼에 쓴 다음 위치를 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="68ee8a87d76de1cd2a770b8396c4ab7cf9175f3b" translate="yes" xml:space="preserve">
          <source>Writes the given double into this buffer at the given index.</source>
          <target state="translated">주어진 인덱스에서 주어진 double을이 버퍼에 씁니다.</target>
        </trans-unit>
        <trans-unit id="370abd73ada65b5904921d209602fcc69611ebec" translate="yes" xml:space="preserve">
          <source>Writes the given float into this buffer at the current position, and then increments the position.</source>
          <target state="translated">주어진 float를 현재 위치에서이 버퍼에 쓴 다음 위치를 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="07eaa541d5c0633efea85fbc2ae9bba6c20a12a6" translate="yes" xml:space="preserve">
          <source>Writes the given float into this buffer at the given index.</source>
          <target state="translated">주어진 인덱스에서 주어진 float를이 버퍼에 씁니다.</target>
        </trans-unit>
        <trans-unit id="19e622dee348636b8ed78c68d535a1074887c524" translate="yes" xml:space="preserve">
          <source>Writes the given int into this buffer at the current position, and then increments the position.</source>
          <target state="translated">주어진 int를 현재 위치에서이 버퍼에 쓴 다음 위치를 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="b845c5f27efaa6c518dc0d967f43b3a146bebef9" translate="yes" xml:space="preserve">
          <source>Writes the given int into this buffer at the given index.</source>
          <target state="translated">지정된 인덱스의 지정된 int를이 버퍼에 기입합니다.</target>
        </trans-unit>
        <trans-unit id="712fe7e7e38b5fd24f11498bd179d0ff8bdc747b" translate="yes" xml:space="preserve">
          <source>Writes the given long into this buffer at the current position, and then increments the position.</source>
          <target state="translated">현재 위치에서 지정된 long을이 버퍼에 쓴 다음 위치를 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="fabaa8aff4aa813be322673a9965363c8f76cba7" translate="yes" xml:space="preserve">
          <source>Writes the given long into this buffer at the given index.</source>
          <target state="translated">주어진 인덱스에서 주어진 시간을이 버퍼에 씁니다.</target>
        </trans-unit>
        <trans-unit id="9495203bcfa27d90ba40a65bedf36e96cec6cc11" translate="yes" xml:space="preserve">
          <source>Writes the given short into this buffer at the current position, and then increments the position.</source>
          <target state="translated">현재 위치에서 주어진 short를이 버퍼에 쓴 다음 위치를 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="10ed6376a80a004d623217c1faeb7c99a1dda8a2" translate="yes" xml:space="preserve">
          <source>Writes the given short into this buffer at the given index.</source>
          <target state="translated">주어진 인덱스에서 주어진 short를이 버퍼에 씁니다.</target>
        </trans-unit>
        <trans-unit id="0d58e1f54ac285ebe48be0cf8a78bf6938ac3d49" translate="yes" xml:space="preserve">
          <source>Writes the line separator.</source>
          <target state="translated">Writes the line separator.</target>
        </trans-unit>
        <trans-unit id="0f1871aeccc02c9dbbfa7844c873c3486c323372" translate="yes" xml:space="preserve">
          <source>Writes the line separator. This invokes &lt;code&gt;output&lt;/code&gt; directly as well as setting the &lt;code&gt;lineLength&lt;/code&gt; to 0.</source>
          <target state="translated">Writes the line separator. This invokes &lt;code&gt;output&lt;/code&gt; directly as well as setting the &lt;code&gt;lineLength&lt;/code&gt; to 0.</target>
        </trans-unit>
        <trans-unit id="a9b3e59953847a43bcec280307207b82f61a7fe6" translate="yes" xml:space="preserve">
          <source>Writes the line separator. This is overriden to make sure we don't replace the newline content in case it is outside normal ascii.</source>
          <target state="translated">Writes the line separator. This is overriden to make sure we don't replace the newline content in case it is outside normal ascii.</target>
        </trans-unit>
        <trans-unit id="24d0b6fd544532d6da39d30f6b008384dfc920fd" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="translated">Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</target>
        </trans-unit>
        <trans-unit id="340f6324944e39f9ec811cc3204c298ba8e22898" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language. The driver converts this to a SQL &lt;code&gt;NCHAR&lt;/code&gt; or &lt;code&gt;NVARCHAR&lt;/code&gt; or &lt;code&gt;LONGNVARCHAR&lt;/code&gt; value (depending on the argument's size relative to the driver's limits on &lt;code&gt;NVARCHAR&lt;/code&gt; values) when it sends it to the stream.</source>
          <target state="translated">Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language. The driver converts this to a SQL &lt;code&gt;NCHAR&lt;/code&gt; or &lt;code&gt;NVARCHAR&lt;/code&gt; or &lt;code&gt;LONGNVARCHAR&lt;/code&gt; value (depending on the argument's size relative to the driver's limits on &lt;code&gt;NVARCHAR&lt;/code&gt; values) when it sends it to the stream.</target>
        </trans-unit>
        <trans-unit id="2d1f3589491c7e59f4409b383151d9dbaea50dfd" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java boolean.</source>
          <target state="translated">Writes the next attribute to the stream as a Java boolean.</target>
        </trans-unit>
        <trans-unit id="be7661a9ba802f0f8404dcff2f25d0e79592926c" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java boolean. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="translated">Writes the next attribute to the stream as a Java boolean. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</target>
        </trans-unit>
        <trans-unit id="ac60e91c51e05c39515073eaf54895db2613b6e4" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java byte.</source>
          <target state="translated">Writes the next attribute to the stream as a Java byte.</target>
        </trans-unit>
        <trans-unit id="0a639b1d5b4b69d9459220fd2461435c95a20fc2" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java byte. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="translated">Writes the next attribute to the stream as a Java byte. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</target>
        </trans-unit>
        <trans-unit id="9593bde4bf357c583e7328e5ea9018696aabeee7" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java double.</source>
          <target state="translated">Writes the next attribute to the stream as a Java double.</target>
        </trans-unit>
        <trans-unit id="0f6bfb271a92d8c8e21181c42abe87ecff6afb06" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java double. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="translated">Writes the next attribute to the stream as a Java double. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</target>
        </trans-unit>
        <trans-unit id="da9b1e5fa972f78972b24c6e7825131d395a8ccc" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java float.</source>
          <target state="translated">Writes the next attribute to the stream as a Java float.</target>
        </trans-unit>
        <trans-unit id="eb4c3c391c1b9901ee09ed26e81a11b12b2b70d4" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java float. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="translated">Writes the next attribute to the stream as a Java float. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</target>
        </trans-unit>
        <trans-unit id="a8dec4054e8f37abc1c891b14916680cd86d65a1" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java int.</source>
          <target state="translated">Writes the next attribute to the stream as a Java int.</target>
        </trans-unit>
        <trans-unit id="ab6ffa745bb17cb2125b60fa279c0798e5670e2f" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java int. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="translated">Writes the next attribute to the stream as a Java int. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</target>
        </trans-unit>
        <trans-unit id="47790b3016da43b530a0ad20df6ae1300b2e0e29" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java long.</source>
          <target state="translated">Writes the next attribute to the stream as a Java long.</target>
        </trans-unit>
        <trans-unit id="1612f1a47c6ca7a2deed650adf88239bc52b77a1" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java long. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="translated">Writes the next attribute to the stream as a Java long. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</target>
        </trans-unit>
        <trans-unit id="7f9e25e8282f094090e93103d929b57bc1dae11f" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java short.</source>
          <target state="translated">Writes the next attribute to the stream as a Java short.</target>
        </trans-unit>
        <trans-unit id="2d7c5fcc6f952395e88a8fee07a40dc57357b4ce" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java short. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="translated">Writes the next attribute to the stream as a Java short. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</target>
        </trans-unit>
        <trans-unit id="ae795241e4d0dbed163c78ace2898ad64a209d95" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a java.math.BigDecimal object.</source>
          <target state="translated">Writes the next attribute to the stream as a java.math.BigDecimal object.</target>
        </trans-unit>
        <trans-unit id="966a161abb638bc66e062577c6601a2f0243654b" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a java.math.BigDecimal object. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="translated">Writes the next attribute to the stream as a java.math.BigDecimal object. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</target>
        </trans-unit>
        <trans-unit id="84b6f38a64127bc13fe0460d5ba6bb6f767b58c8" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a java.sql.Date object.</source>
          <target state="translated">Writes the next attribute to the stream as a java.sql.Date object.</target>
        </trans-unit>
        <trans-unit id="94c8593503581612e5c62a36c73e3be22c143d60" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a java.sql.Date object. Writes the next attribute to the stream as a &lt;code&gt;java.sql.Date&lt;/code&gt; object in the Java programming language.</source>
          <target state="translated">Writes the next attribute to the stream as a java.sql.Date object. Writes the next attribute to the stream as a &lt;code&gt;java.sql.Date&lt;/code&gt; object in the Java programming language.</target>
        </trans-unit>
        <trans-unit id="fc86fddad392435fe68b386370732f81602fca4f" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a java.sql.Time object.</source>
          <target state="translated">Writes the next attribute to the stream as a java.sql.Time object.</target>
        </trans-unit>
        <trans-unit id="65f27154a6884b242089f59999a75bc40f12eefa" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a java.sql.Time object. Writes the next attribute to the stream as a &lt;code&gt;java.sql.Date&lt;/code&gt; object in the Java programming language.</source>
          <target state="translated">Writes the next attribute to the stream as a java.sql.Time object. Writes the next attribute to the stream as a &lt;code&gt;java.sql.Date&lt;/code&gt; object in the Java programming language.</target>
        </trans-unit>
        <trans-unit id="b22105b1215f732b1187e26860f8ed1a36976e32" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a java.sql.Timestamp object.</source>
          <target state="translated">Writes the next attribute to the stream as a java.sql.Timestamp object.</target>
        </trans-unit>
        <trans-unit id="5e422e5fae800f499fb8e1d4969f89024012858c" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a java.sql.Timestamp object. Writes the next attribute to the stream as a &lt;code&gt;java.sql.Date&lt;/code&gt; object in the Java programming language.</source>
          <target state="translated">Writes the next attribute to the stream as a java.sql.Timestamp object. Writes the next attribute to the stream as a &lt;code&gt;java.sql.Date&lt;/code&gt; object in the Java programming language.</target>
        </trans-unit>
        <trans-unit id="cf6ba5d83a2992ff0d3a302518dd1dd97f407273" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a stream of ASCII characters.</source>
          <target state="translated">Writes the next attribute to the stream as a stream of ASCII characters.</target>
        </trans-unit>
        <trans-unit id="a38ae5c63be734084b684282016282bc8c0a5985" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a stream of Unicode characters.</source>
          <target state="translated">Writes the next attribute to the stream as a stream of Unicode characters.</target>
        </trans-unit>
        <trans-unit id="0970c547d7936b50ee00426701f83ff57fde3cfa" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a stream of uninterpreted bytes.</source>
          <target state="translated">Writes the next attribute to the stream as a stream of uninterpreted bytes.</target>
        </trans-unit>
        <trans-unit id="7f36f131f8ab34500af50462c7eadd92c2b76022" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as an array of bytes.</source>
          <target state="translated">Writes the next attribute to the stream as an array of bytes.</target>
        </trans-unit>
        <trans-unit id="7e61a033c461fb7dcfbfdeeada45e9ae7b6869b0" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as an array of bytes. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="translated">Writes the next attribute to the stream as an array of bytes. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</target>
        </trans-unit>
        <trans-unit id="8d975120559c26edf427658d3a3c3d0ebc4d2550" translate="yes" xml:space="preserve">
          <source>Writes the specified &lt;code&gt;byte&lt;/code&gt; to the piped output stream.</source>
          <target state="translated">지정된 &lt;code&gt;byte&lt;/code&gt; 를 파이프 출력 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="5f14d6eee88508e464e25626a9203ab46c7ae8c1" translate="yes" xml:space="preserve">
          <source>Writes the specified &lt;code&gt;byte&lt;/code&gt; to this output stream.</source>
          <target state="translated">지정된 &lt;code&gt;byte&lt;/code&gt; 를이 출력 스트림에 기입합니다 .</target>
        </trans-unit>
        <trans-unit id="2ded1a3671d9de0d3963eef8e96f5518c65ec142" translate="yes" xml:space="preserve">
          <source>Writes the specified &lt;code&gt;char&lt;/code&gt; to the piped output stream.</source>
          <target state="translated">Writes the specified &lt;code&gt;char&lt;/code&gt; to the piped output stream.</target>
        </trans-unit>
        <trans-unit id="fc8ccadb9cba29bd2eb5a6b400b75de445d2099d" translate="yes" xml:space="preserve">
          <source>Writes the specified &lt;code&gt;char&lt;/code&gt; to the piped output stream. If a thread was reading data characters from the connected piped input stream, but the thread is no longer alive, then an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">지정된 &lt;code&gt;char&lt;/code&gt; 를 파이프 출력 스트림에 씁니다 . 스레드가 연결된 파이프 된 입력 스트림에서 데이터 문자를 읽었지만 스레드가 더 이상 &lt;code&gt;IOException&lt;/code&gt; 가 아닌 경우 IOException 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1ab111c3fb2ece34959961ef2a47f24f69db4b45" translate="yes" xml:space="preserve">
          <source>Writes the specified byte (the low eight bits of the argument &lt;code&gt;b&lt;/code&gt;) to the underlying output stream.</source>
          <target state="translated">Writes the specified byte (the low eight bits of the argument &lt;code&gt;b&lt;/code&gt; ) to the underlying output stream.</target>
        </trans-unit>
        <trans-unit id="6a361965d78596b1ec164e036366e12d2c75bb2c" translate="yes" xml:space="preserve">
          <source>Writes the specified byte (the low eight bits of the argument &lt;code&gt;b&lt;/code&gt;) to the underlying output stream. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">지정된 바이트 (인수 &lt;code&gt;b&lt;/code&gt; 의 하위 8 비트 )를 기본이되는 출력 스트림에 기입합니다. 예외가 발생하지 않으면 &lt;code&gt;written&lt;/code&gt; 된 카운터 는 &lt;code&gt;1&lt;/code&gt; 씩 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="f395fe152479fa6fe3982d50f757a564445e03a3" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this &lt;code&gt;ByteArrayOutputStream&lt;/code&gt;.</source>
          <target state="translated">Writes the specified byte to this &lt;code&gt;ByteArrayOutputStream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="112760f7a5bd1088e95174f743f77e6540d54a2b" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this buffered output stream.</source>
          <target state="translated">지정된 바이트를이 버퍼 된 출력 스트림에 기입합니다.</target>
        </trans-unit>
        <trans-unit id="7609567d3c31861f0c015f22b9e866c66abef6ef" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this byte array output stream.</source>
          <target state="translated">지정된 바이트를이 바이트 배열 출력 스트림에 기입합니다.</target>
        </trans-unit>
        <trans-unit id="f7ca3263ecdf5bfa2fcb28af4f0f50c9aa5238d5" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this file output stream.</source>
          <target state="translated">Writes the specified byte to this file output stream.</target>
        </trans-unit>
        <trans-unit id="2b4802f7b977b1bf85147c28f9685965b5454afa" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this file output stream. Implements the &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;OutputStream&lt;/code&gt;.</source>
          <target state="translated">지정된 바이트를이 파일 출력 스트림에 기입합니다. &lt;code&gt;OutputStream&lt;/code&gt; 의 &lt;code&gt;write&lt;/code&gt; 메소드를 구현 합니다 .</target>
        </trans-unit>
        <trans-unit id="aef8e765886b82ee496b736f4dd9d04b5b58c2cb" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this file.</source>
          <target state="translated">Writes the specified byte to this file.</target>
        </trans-unit>
        <trans-unit id="b729d9dffaa8a1f4157fef1e1ce618b624909b04" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this file. The write starts at the current file pointer.</source>
          <target state="translated">지정된 바이트를이 파일에 씁니다. 현재 파일 포인터에서 쓰기가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="ba3a4edd85917756c50fa03243093621eed1d538" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this output stream.</source>
          <target state="translated">지정된 바이트를이 출력 스트림에 기입합니다.</target>
        </trans-unit>
        <trans-unit id="b599b1fa291253a78c3e88600501e421edb1c042" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this output stream. The general contract for &lt;code&gt;write&lt;/code&gt; is that one byte is written to the output stream. The byte to be written is the eight low-order bits of the argument &lt;code&gt;b&lt;/code&gt;. The 24 high-order bits of &lt;code&gt;b&lt;/code&gt; are ignored.</source>
          <target state="translated">지정된 바이트를이 출력 스트림에 기입합니다. &lt;code&gt;write&lt;/code&gt; 의 일반적인 계약 은 1 바이트가 출력 스트림에 쓰여지는 것입니다. 기입 해지는 바이트는 인수 &lt;code&gt;b&lt;/code&gt; 의 하위 8 비트입니다 . &lt;code&gt;b&lt;/code&gt; 의 24 개 상위 비트 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="8971c513647c69b909bf210695c94f545ca38243" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this stream.</source>
          <target state="translated">Writes the specified byte to this stream.</target>
        </trans-unit>
        <trans-unit id="e958c00a95c755222bae929710882f0ef7598984" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this stream. If the byte is a newline and automatic flushing is enabled then the &lt;code&gt;flush&lt;/code&gt; method will be invoked.</source>
          <target state="translated">지정된 바이트를이 스트림에 기입합니다. 바이트가 줄 바꿈이고 자동 플러시가 사용 가능한 경우 &lt;code&gt;flush&lt;/code&gt; 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b17cdee8b1cf493966a1e22479e14f7926cbdbfb" translate="yes" xml:space="preserve">
          <source>Writes the string to the file as a sequence of bytes.</source>
          <target state="translated">Writes the string to the file as a sequence of bytes.</target>
        </trans-unit>
        <trans-unit id="8a7ff01c245c6e87c2ac4ef96cf3070915dfcaaf" translate="yes" xml:space="preserve">
          <source>Writes the string to the file as a sequence of bytes. Each character in the string is written out, in sequence, by discarding its high eight bits. The write starts at the current position of the file pointer.</source>
          <target state="translated">문자열을 바이트 시퀀스로 파일에 씁니다. 문자열의 각 문자는 상위 8 비트를 삭제하여 순서대로 작성됩니다. 쓰기는 파일 포인터의 현재 위치에서 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="d0a5af43cf06c929a83885e6406856a92aa5cc38" translate="yes" xml:space="preserve">
          <source>Writes the value of a user-defined attribute from a buffer.</source>
          <target state="translated">버퍼에서 사용자 정의 속성 값을 씁니다.</target>
        </trans-unit>
        <trans-unit id="6de7b1d847ae56079e54f185e80246ad8ca6539e" translate="yes" xml:space="preserve">
          <source>Writes this object to the given SQL data stream, converting it back to its SQL value in the data source.</source>
          <target state="translated">Writes this object to the given SQL data stream, converting it back to its SQL value in the data source.</target>
        </trans-unit>
        <trans-unit id="d10aa40878b44a62bd75f37a923af2794ac38513" translate="yes" xml:space="preserve">
          <source>Writes this object to the given SQL data stream, converting it back to its SQL value in the data source. The implementation of the method must follow this protocol:</source>
          <target state="translated">Writes this object to the given SQL data stream, converting it back to its SQL value in the data source. The implementation of the method must follow this protocol:</target>
        </trans-unit>
        <trans-unit id="207b013c329390f09844c66437576494a2852d98" translate="yes" xml:space="preserve">
          <source>Writes this property list (key and element pairs) in this &lt;code&gt;Properties&lt;/code&gt; table to the output character stream in a format suitable for using the &lt;a href=&quot;#load(java.io.Reader)&quot;&gt;&lt;code&gt;load(Reader)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Writes this property list (key and element pairs) in this &lt;code&gt;Properties&lt;/code&gt; table to the output character stream in a format suitable for using the &lt;a href=&quot;#load(java.io.Reader)&quot;&gt; &lt;code&gt;load(Reader)&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="51e35b34ff21aa3824ad435b3d42b717ac1044a7" translate="yes" xml:space="preserve">
          <source>Writes this property list (key and element pairs) in this &lt;code&gt;Properties&lt;/code&gt; table to the output character stream in a format suitable for using the &lt;a href=&quot;properties#load-java.io.Reader-&quot;&gt;&lt;code&gt;load(Reader)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 &lt;code&gt;Properties&lt;/code&gt; 테이블 의이 속성 목록 (키 및 요소 쌍)을 &lt;a href=&quot;properties#load-java.io.Reader-&quot;&gt; &lt;code&gt;load(Reader)&lt;/code&gt; &lt;/a&gt; 메서드 사용에 적합한 형식으로 출력 문자 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="e495c69a1b37a4ce090a0f61eb84303001e2f066" translate="yes" xml:space="preserve">
          <source>Writes this property list (key and element pairs) in this &lt;code&gt;Properties&lt;/code&gt; table to the output stream in a format suitable for loading into a &lt;code&gt;Properties&lt;/code&gt; table using the &lt;a href=&quot;#load(java.io.InputStream)&quot;&gt;&lt;code&gt;load(InputStream)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Writes this property list (key and element pairs) in this &lt;code&gt;Properties&lt;/code&gt; table to the output stream in a format suitable for loading into a &lt;code&gt;Properties&lt;/code&gt; table using the &lt;a href=&quot;#load(java.io.InputStream)&quot;&gt; &lt;code&gt;load(InputStream)&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="51b4a7c90bf5626fec9c9f129aa1374ad6737d2c" translate="yes" xml:space="preserve">
          <source>Writes this property list (key and element pairs) in this &lt;code&gt;Properties&lt;/code&gt; table to the output stream in a format suitable for loading into a &lt;code&gt;Properties&lt;/code&gt; table using the &lt;a href=&quot;properties#load-java.io.InputStream-&quot;&gt;&lt;code&gt;load(InputStream)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;properties#load-java.io.InputStream-&quot;&gt; &lt;code&gt;load(InputStream)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 &lt;code&gt;Properties&lt;/code&gt; 테이블 에로드하기에 적합한 형식 으로이 &lt;code&gt;Properties&lt;/code&gt; 테이블 의이 특성 목록 (키 및 요소 쌍)을 출력 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="5d1e33d407f7be7c57261888fc679ef1b7584671" translate="yes" xml:space="preserve">
          <source>Writes to the output stream all the bytes in array &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">Writes to the output stream all the bytes in array &lt;code&gt;b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f13a505bf6f1163d15ecf793f7208b545f326a38" translate="yes" xml:space="preserve">
          <source>Writes to the output stream all the bytes in array &lt;code&gt;b&lt;/code&gt;. If &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. If &lt;code&gt;b.length&lt;/code&gt; is zero, then no bytes are written. Otherwise, the byte &lt;code&gt;b[0]&lt;/code&gt; is written first, then &lt;code&gt;b[1]&lt;/code&gt;, and so on; the last byte written is &lt;code&gt;b[b.length-1]&lt;/code&gt;.</source>
          <target state="translated">배열 &lt;code&gt;b&lt;/code&gt; 의 모든 바이트를 출력 스트림에 기입합니다 . 경우 &lt;code&gt;b&lt;/code&gt; 는 이다 &lt;code&gt;null&lt;/code&gt; 하는 &lt;code&gt;NullPointerException&lt;/code&gt; 가 슬로우됩니다. 만약 &lt;code&gt;b.length&lt;/code&gt; 를 제로, 다음, 바이트가 기록되지 않습니다. 그렇지 않으면 바이트 &lt;code&gt;b[0]&lt;/code&gt; 이 먼저 기록 된 다음 &lt;code&gt;b[1]&lt;/code&gt; 등 이 기록 됩니다. 마지막으로 쓴 바이트는 &lt;code&gt;b[b.length-1]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8514d628233a1a6ce1964bd5fc5b29aeaa728dad" translate="yes" xml:space="preserve">
          <source>Writes to the output stream the eight low- order bits of the argument &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">Writes to the output stream the eight low- order bits of the argument &lt;code&gt;v&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3634369cc0a70228335b7c0d1b3ea2b4c26bb08d" translate="yes" xml:space="preserve">
          <source>Writes to the output stream the eight low- order bits of the argument &lt;code&gt;v&lt;/code&gt;. The 24 high-order bits of &lt;code&gt;v&lt;/code&gt; are ignored. (This means that &lt;code&gt;writeByte&lt;/code&gt; does exactly the same thing as &lt;code&gt;write&lt;/code&gt; for an integer argument.) The byte written by this method may be read by the &lt;code&gt;readByte&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt;, which will then return a &lt;code&gt;byte&lt;/code&gt; equal to &lt;code&gt;(byte)v&lt;/code&gt;.</source>
          <target state="translated">인수 &lt;code&gt;v&lt;/code&gt; 의 하위 8 비트를 출력 스트림에 출력합니다 . &lt;code&gt;v&lt;/code&gt; 의 24 개 상위 비트 는 무시됩니다. 이것은 &lt;code&gt;writeByte&lt;/code&gt; 가 정수 인수에 대한 &lt;code&gt;write&lt;/code&gt; 와 정확히 같은 것을 의미합니다 .이 메소드에 의해 쓰여진 바이트는 &lt;code&gt;readByte&lt;/code&gt; 에 의해 읽힐 수 있습니다. &lt;code&gt;DataInput&lt;/code&gt; 인터페이스 메소드에 , 그런 다음 &lt;code&gt;(byte)v&lt;/code&gt; 와 동일한 &lt;code&gt;byte&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="a0cf69d6c69bcf0faa8baab0cbc731ba085221ea" translate="yes" xml:space="preserve">
          <source>Writes to the output stream the eight low-order bits of the argument &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">Writes to the output stream the eight low-order bits of the argument &lt;code&gt;b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94e71f080b530ff97228da57a38da0da555e275b" translate="yes" xml:space="preserve">
          <source>Writes to the output stream the eight low-order bits of the argument &lt;code&gt;b&lt;/code&gt;. The 24 high-order bits of &lt;code&gt;b&lt;/code&gt; are ignored.</source>
          <target state="translated">인수 &lt;code&gt;b&lt;/code&gt; 의 하위 8 비트를 출력 스트림에 출력합니다 . &lt;code&gt;b&lt;/code&gt; 의 24 개 상위 비트 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="bf32e90bca78d37e28d45fb95b94078d84950f46" translate="yes" xml:space="preserve">
          <source>Writes to the stream the data contained in the given &lt;code&gt;SQLData&lt;/code&gt; object.</source>
          <target state="translated">Writes to the stream the data contained in the given &lt;code&gt;SQLData&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="1839e48f3104f8ae0db661096310023645bcf7d2" translate="yes" xml:space="preserve">
          <source>Writes to the stream the data contained in the given &lt;code&gt;SQLData&lt;/code&gt; object. When the &lt;code&gt;SQLData&lt;/code&gt; object is &lt;code&gt;null&lt;/code&gt;, this method writes an SQL &lt;code&gt;NULL&lt;/code&gt; to the stream. Otherwise, it calls the &lt;code&gt;SQLData.writeSQL&lt;/code&gt; method of the given object, which writes the object's attributes to the stream.</source>
          <target state="translated">Writes to the stream the data contained in the given &lt;code&gt;SQLData&lt;/code&gt; object. When the &lt;code&gt;SQLData&lt;/code&gt; object is &lt;code&gt;null&lt;/code&gt; , this method writes an SQL &lt;code&gt;NULL&lt;/code&gt; to the stream. Otherwise, it calls the &lt;code&gt;SQLData.writeSQL&lt;/code&gt; method of the given object, which writes the object's attributes to the stream.</target>
        </trans-unit>
        <trans-unit id="363c2b77917ba97ed7dfdca74cae97621fbdddc4" translate="yes" xml:space="preserve">
          <source>Writes to the stream the data contained in the given &lt;code&gt;SQLData&lt;/code&gt; object. When the &lt;code&gt;SQLData&lt;/code&gt; object is &lt;code&gt;null&lt;/code&gt;, this method writes an SQL &lt;code&gt;NULL&lt;/code&gt; to the stream. Otherwise, it calls the &lt;code&gt;SQLData.writeSQL&lt;/code&gt; method of the given object, which writes the object's attributes to the stream. The implementation of the method &lt;code&gt;SQLData.writeSQL&lt;/code&gt; calls the appropriate &lt;code&gt;SQLOutput&lt;/code&gt; writer method(s) for writing each of the object's attributes in order. The attributes must be read from an &lt;code&gt;SQLInput&lt;/code&gt; input stream and written to an &lt;code&gt;SQLOutput&lt;/code&gt; output stream in the same order in which they were listed in the SQL definition of the user-defined type.</source>
          <target state="translated">Writes to the stream the data contained in the given &lt;code&gt;SQLData&lt;/code&gt; object. When the &lt;code&gt;SQLData&lt;/code&gt; object is &lt;code&gt;null&lt;/code&gt; , this method writes an SQL &lt;code&gt;NULL&lt;/code&gt; to the stream. Otherwise, it calls the &lt;code&gt;SQLData.writeSQL&lt;/code&gt; method of the given object, which writes the object's attributes to the stream. The implementation of the method &lt;code&gt;SQLData.writeSQL&lt;/code&gt; calls the appropriate &lt;code&gt;SQLOutput&lt;/code&gt; writer method(s) for writing each of the object's attributes in order. The attributes must be read from an &lt;code&gt;SQLInput&lt;/code&gt; input stream and written to an &lt;code&gt;SQLOutput&lt;/code&gt; output stream in the same order in which they were listed in the SQL definition of the user-defined type.</target>
        </trans-unit>
        <trans-unit id="8e830ac9520dde8effa90ef42b6c3c7f73f65364" translate="yes" xml:space="preserve">
          <source>Writes to the stream the data contained in the given object.</source>
          <target state="translated">Writes to the stream the data contained in the given object.</target>
        </trans-unit>
        <trans-unit id="8873fa76c2f527781970d368373d33a03dbd6d75" translate="yes" xml:space="preserve">
          <source>Writes to the stream the data contained in the given object. The object will be converted to the specified targetSqlType before being sent to the stream.</source>
          <target state="translated">Writes to the stream the data contained in the given object. The object will be converted to the specified targetSqlType before being sent to the stream.</target>
        </trans-unit>
        <trans-unit id="1dcbd1fcd9c20910e4d19c79a6908b0180531555" translate="yes" xml:space="preserve">
          <source>Writes two bytes containing the given char value, in the current byte order, into this buffer at the current position, and then increments the position by two.</source>
          <target state="translated">현재 바이트 순서로 지정된 char 값을 포함하는 2 바이트를 현재 위치의이 버퍼에 쓴 다음 위치를 2 씩 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="e978de920f972d75d95f1255bab54910641e5e61" translate="yes" xml:space="preserve">
          <source>Writes two bytes containing the given char value, in the current byte order, into this buffer at the given index.</source>
          <target state="translated">지정된 char 값을 포함하는 2 바이트를 현재 바이트 순서로 지정된 인덱스의이 버퍼에 씁니다.</target>
        </trans-unit>
        <trans-unit id="6fc0c682093f02b665c23020bba01582a4b98e28" translate="yes" xml:space="preserve">
          <source>Writes two bytes containing the given short value, in the current byte order, into this buffer at the current position, and then increments the position by two.</source>
          <target state="translated">주어진 바이트 값으로 주어진 짧은 값을 포함하는 2 바이트를 현재 위치의이 버퍼에 쓴 다음 위치를 2 씩 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="0f419b1c9cfcd70b38af34a51aebf7df8b86f76e" translate="yes" xml:space="preserve">
          <source>Writes two bytes containing the given short value, in the current byte order, into this buffer at the given index.</source>
          <target state="translated">주어진 짧은 값을 포함하는 두 바이트를 현재 바이트 순서로 지정된 인덱스의이 버퍼에 씁니다.</target>
        </trans-unit>
        <trans-unit id="ee80091edbeade9265ab307086b86eb4ae01dddf" translate="yes" xml:space="preserve">
          <source>Writes two bytes of length information to the output stream in network byte order, followed by the &lt;a href=&quot;../../../java/io/datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; representation of every character in the string &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">Writes two bytes of length information to the output stream in network byte order, followed by the &lt;a href=&quot;../../../java/io/datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; representation of every character in the string &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b6256eb9d0d72cbe71b13a3c7e9f7676978fe16" translate="yes" xml:space="preserve">
          <source>Writes two bytes of length information to the output stream in network byte order, followed by the &lt;a href=&quot;../../../java/io/datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; representation of every character in the string &lt;code&gt;s&lt;/code&gt;. If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. Each character in the string &lt;code&gt;s&lt;/code&gt; is converted to a group of one, two, or three bytes, depending on the value of the character.</source>
          <target state="translated">네트워크 바이트 순서로 출력 스트림에 2 바이트 길이의 정보를 &lt;a href=&quot;../../../java/io/datainput#modified-utf-8&quot;&gt;쓰고&lt;/a&gt; 문자열 &lt;code&gt;s&lt;/code&gt; 의 모든 문자에 대해 수정 된 UTF-8 표현을 씁니다. . 경우 &lt;code&gt;s&lt;/code&gt; 입니다 &lt;code&gt;null&lt;/code&gt; 하는 &lt;code&gt;NullPointerException&lt;/code&gt; 발생합니다. 문자열 &lt;code&gt;s&lt;/code&gt; 각 문자 는 문자 값에 따라 1, 2 또는 3 바이트 그룹으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="61fed0fe63590aa8fe08508149b0ac07f0edb001" translate="yes" xml:space="preserve">
          <source>Writes two bytes of length information to the output stream, followed by the &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; representation of every character in the string &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">Writes two bytes of length information to the output stream, followed by the &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; representation of every character in the string &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="acb381ca0baa70d627eb89fc91539d21b5b1970f" translate="yes" xml:space="preserve">
          <source>Writes two bytes of length information to the output stream, followed by the &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; representation of every character in the string &lt;code&gt;s&lt;/code&gt;. If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. Each character in the string &lt;code&gt;s&lt;/code&gt; is converted to a group of one, two, or three bytes, depending on the value of the character.</source>
          <target state="translated">출력 스트림에 2 바이트 길이의 정보를 쓴 다음 문자열 &lt;code&gt;s&lt;/code&gt; 에있는 모든 문자 의 &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;수정 된 UTF-8&lt;/a&gt; 표현을 씁니다 . 만약 &lt;code&gt;s&lt;/code&gt; 입니다 &lt;code&gt;null&lt;/code&gt; 하는 &lt;code&gt;NullPointerException&lt;/code&gt; 발생합니다. 문자열 &lt;code&gt;s&lt;/code&gt; 각 문자 는 문자 값에 따라 1, 2 또는 3 바이트 그룹으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="11a7c7a4a4b01ec9ba0d240cb1a9682883bcf927" translate="yes" xml:space="preserve">
          <source>Writes two bytes to the output stream to represent the value of the argument.</source>
          <target state="translated">Writes two bytes to the output stream to represent the value of the argument.</target>
        </trans-unit>
        <trans-unit id="840baa9d6bfa2b29f18593baa6d5a15f4137eaeb" translate="yes" xml:space="preserve">
          <source>Writes two bytes to the output stream to represent the value of the argument. The byte values to be written, in the order shown, are:</source>
          <target state="translated">인수의 값을 나타 내기 위해 출력 스트림에 2 바이트를 씁니다. 표시된 순서대로 기록 할 바이트 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2dabb8334b6cbbc19635a160f00032f11eeb9962" translate="yes" xml:space="preserve">
          <source>Writing</source>
          <target state="translated">Writing</target>
        </trans-unit>
        <trans-unit id="95ad111c35bebeafa25fe06efdef5f08bcb7e909" translate="yes" xml:space="preserve">
          <source>Writing GIF images</source>
          <target state="translated">GIF 이미지 쓰기</target>
        </trans-unit>
        <trans-unit id="424422e9c1df6af363f8dd1c46652e8af0cdb465" translate="yes" xml:space="preserve">
          <source>Writing a &lt;code&gt;WebRowSet&lt;/code&gt; object includes printing the rowset's data, metadata, and properties, all with the appropriate XML tags.</source>
          <target state="translated">Writing a &lt;code&gt;WebRowSet&lt;/code&gt; object includes printing the rowset's data, metadata, and properties, all with the appropriate XML tags.</target>
        </trans-unit>
        <trans-unit id="9cd3c35e027988d3e72acc1181f58b176b562470" translate="yes" xml:space="preserve">
          <source>Writing out a bean, on the other hand, sometimes requires special knowledge of the bean's type. If the bean's state can be expressed using only the no-argument constructor and public getter and setter methods for properties, no special knowledge is required. Otherwise, the bean requires a custom &lt;em&gt;persistence delegate&lt;/em&gt; -- an object that is in charge of writing out beans of a particular type. All classes provided in the JDK that descend from &lt;code&gt;java.awt.Component&lt;/code&gt;, as well as all their properties, automatically have persistence delegates.</source>
          <target state="translated">반면에 콩을 쓰려면 콩의 종류에 대한 특별한 지식이 필요합니다. 인수없이 생성자 및 특성에 대한 공용 getter 및 setter 메소드 만 사용하여 Bean의 상태를 표시 할 수있는 경우 특별한 지식이 필요하지 않습니다. 그렇지 않으면, Bean은 사용자 정의가 필요합니다&lt;em&gt;&lt;/em&gt; 특정 유형의 Bean을 작성하는 오브젝트 인&lt;em&gt; 지속성 위임이&lt;/em&gt; . JDK에서 제공되는 모든 클래스 뿐만 아니라 &lt;code&gt;java.awt.Component&lt;/code&gt; 에서 파생 된 모든 클래스 에는 자동으로 지속성 위임이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2aca6c8bd10dab33a4eec99abb3e68b55ac1f71c" translate="yes" xml:space="preserve">
          <source>Writing to file descriptors</source>
          <target state="translated">파일 디스크립터에 쓰기</target>
        </trans-unit>
        <trans-unit id="087742bd2a01740eeb022cb23d5b57ca20a16d8d" translate="yes" xml:space="preserve">
          <source>WrongMethodTypeException</source>
          <target state="translated">WrongMethodTypeException</target>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="db449d7dc04f973b1ad97228d3cd5fa1f5225e0b" translate="yes" xml:space="preserve">
          <source>X be the MBean named by &lt;code&gt;name&lt;/code&gt;,</source>
          <target state="translated">X는 다음에 의해 명명 된 MBean입니다. &lt;code&gt;name&lt;/code&gt; 으로 .</target>
        </trans-unit>
        <trans-unit id="04d117bbef4a6bcdcdff089df98755d8aa7b99de" translate="yes" xml:space="preserve">
          <source>X coordinate the control point</source>
          <target state="translated">X coordinate the control point</target>
        </trans-unit>
        <trans-unit id="d6eed17085cd961824e6cc026bad4e1f6bbfdf9a" translate="yes" xml:space="preserve">
          <source>X dimension (&amp;micro;m).</source>
          <target state="translated">X 치수 (&amp;micro;m).</target>
        </trans-unit>
        <trans-unit id="7f266332102748822354cc0a5aa107093c35ebbd" translate="yes" xml:space="preserve">
          <source>X dimension.</source>
          <target state="translated">X 치수.</target>
        </trans-unit>
        <trans-unit id="b5610424b8a02ba2abc09a2e8508cc30ad10e2b3" translate="yes" xml:space="preserve">
          <source>X,</source>
          <target state="translated">X,</target>
        </trans-unit>
        <trans-unit id="34826acc1a06fc5b72d40097770b09d8e5c62652" translate="yes" xml:space="preserve">
          <source>X, as a &lt;a href=&quot;#cg&quot;&gt;capturing group&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#cg&quot;&gt;캡처 그룹&lt;/a&gt; 으로서의 X</target>
        </trans-unit>
        <trans-unit id="153bf828911a9b26f94f5e8da8f2fb9bb7b28fe4" translate="yes" xml:space="preserve">
          <source>X.509, PGP, and SDSI certificates can all be implemented by subclassing the Certificate class, even though they contain different sets of information, and they store and retrieve the information in different ways.</source>
          <target state="translated">X.509, PGP 및 SDSI 인증서는 서로 다른 정보 세트가 포함되어 있어도 Certificate 클래스를 서브 클래 싱하여 구현할 수 있으며 다른 방식으로 정보를 저장 및 검색합니다.</target>
        </trans-unit>
        <trans-unit id="4590145268458005ff818a940acd5d70ab872d49" translate="yes" xml:space="preserve">
          <source>X25519</source>
          <target state="translated">X25519</target>
        </trans-unit>
        <trans-unit id="1c1a210cdcf74ff605ceeee78ea3b4156161eddf" translate="yes" xml:space="preserve">
          <source>X448</source>
          <target state="translated">X448</target>
        </trans-unit>
        <trans-unit id="1bd269c56dd4b87ce14015ee8fa37115311520bf" translate="yes" xml:space="preserve">
          <source>X500Principal</source>
          <target state="translated">X500Principal</target>
        </trans-unit>
        <trans-unit id="ebe07aff1a5d06134e103668254133e47ebed3d3" translate="yes" xml:space="preserve">
          <source>X500Principal.equals()</source>
          <target state="translated">X500Principal.equals()</target>
        </trans-unit>
        <trans-unit id="44f531c8910ef1690c5414e940f95622b4b29dac" translate="yes" xml:space="preserve">
          <source>X500Principal.getEncoded()</source>
          <target state="translated">X500Principal.getEncoded()</target>
        </trans-unit>
        <trans-unit id="08dc2bb2b748578a12935a031ae247bdbc506c92" translate="yes" xml:space="preserve">
          <source>X500Principal.getName()</source>
          <target state="translated">X500Principal.getName()</target>
        </trans-unit>
        <trans-unit id="85e52a880efe4b288d45c41cedbc91debb817b34" translate="yes" xml:space="preserve">
          <source>X500Principal.hashCode()</source>
          <target state="translated">X500Principal.hashCode()</target>
        </trans-unit>
        <trans-unit id="f6d4ed090724f259caa864b84485151a2f5ed2a6" translate="yes" xml:space="preserve">
          <source>X500Principal.toString()</source>
          <target state="translated">X500Principal.toString()</target>
        </trans-unit>
        <trans-unit id="aa7c4644ed192385ca463ead0261d1728512dd3b" translate="yes" xml:space="preserve">
          <source>X500PrivateCredential</source>
          <target state="translated">X500PrivateCredential</target>
        </trans-unit>
        <trans-unit id="d034f128505231d7ac518742ffbbed3e97e6e481" translate="yes" xml:space="preserve">
          <source>X500PrivateCredential.destroy()</source>
          <target state="translated">X500PrivateCredential.destroy()</target>
        </trans-unit>
        <trans-unit id="a6e9eecb44deb79c51837aacde9e046aa902e33a" translate="yes" xml:space="preserve">
          <source>X500PrivateCredential.getAlias()</source>
          <target state="translated">X500PrivateCredential.getAlias()</target>
        </trans-unit>
        <trans-unit id="9f750adea9e5263dff3d30eb16f0098cfb5c1a5b" translate="yes" xml:space="preserve">
          <source>X500PrivateCredential.getCertificate()</source>
          <target state="translated">X500PrivateCredential.getCertificate()</target>
        </trans-unit>
        <trans-unit id="6ad4479421ed09f884c8c3e0c36adabeee8170df" translate="yes" xml:space="preserve">
          <source>X500PrivateCredential.getPrivateKey()</source>
          <target state="translated">X500PrivateCredential.getPrivateKey()</target>
        </trans-unit>
        <trans-unit id="ef0ff1d8b5787f71f3646c30049b1d7a2bca631f" translate="yes" xml:space="preserve">
          <source>X500PrivateCredential.isDestroyed()</source>
          <target state="translated">X500PrivateCredential.isDestroyed()</target>
        </trans-unit>
        <trans-unit id="686dd940cc8227b0aa2cd69ee1f44cfa6d1e893f" translate="yes" xml:space="preserve">
          <source>X509CRL</source>
          <target state="translated">X509CRL</target>
        </trans-unit>
        <trans-unit id="7110aa0404043c957aa839aa47f0f0c0a235d814" translate="yes" xml:space="preserve">
          <source>X509CRL.equals()</source>
          <target state="translated">X509CRL.equals()</target>
        </trans-unit>
        <trans-unit id="a8d0f2a8e61792cb750521d01ae1c425200eee29" translate="yes" xml:space="preserve">
          <source>X509CRL.getEncoded()</source>
          <target state="translated">X509CRL.getEncoded()</target>
        </trans-unit>
        <trans-unit id="2f2c2d9ad2feed06f68886e5534e5a1725acf6f0" translate="yes" xml:space="preserve">
          <source>X509CRL.getIssuerDN()</source>
          <target state="translated">X509CRL.getIssuerDN()</target>
        </trans-unit>
        <trans-unit id="d5041e1c7a5b762dee37a31bfd82a14e09c5c33e" translate="yes" xml:space="preserve">
          <source>X509CRL.getIssuerX500Principal()</source>
          <target state="translated">X509CRL.getIssuerX500Principal()</target>
        </trans-unit>
        <trans-unit id="b2723672bad69076cb03b2b1698dc03f59d0ea09" translate="yes" xml:space="preserve">
          <source>X509CRL.getNextUpdate()</source>
          <target state="translated">X509CRL.getNextUpdate()</target>
        </trans-unit>
        <trans-unit id="406fe17fe2408adebb3de6191ff98d0aae6574e7" translate="yes" xml:space="preserve">
          <source>X509CRL.getRevokedCertificate()</source>
          <target state="translated">X509CRL.getRevokedCertificate()</target>
        </trans-unit>
        <trans-unit id="c282b03b35ba6133d7f69263475d3e79c4c96d18" translate="yes" xml:space="preserve">
          <source>X509CRL.getRevokedCertificates()</source>
          <target state="translated">X509CRL.getRevokedCertificates()</target>
        </trans-unit>
        <trans-unit id="676975bb590ac24ff50fbec531440b871beceedb" translate="yes" xml:space="preserve">
          <source>X509CRL.getSigAlgName()</source>
          <target state="translated">X509CRL.getSigAlgName()</target>
        </trans-unit>
        <trans-unit id="cca79e74cc8ba51fac9fb5484e66124607d369d9" translate="yes" xml:space="preserve">
          <source>X509CRL.getSigAlgOID()</source>
          <target state="translated">X509CRL.getSigAlgOID()</target>
        </trans-unit>
        <trans-unit id="28c2198822dff08b6100d64abef2998ea91df931" translate="yes" xml:space="preserve">
          <source>X509CRL.getSigAlgParams()</source>
          <target state="translated">X509CRL.getSigAlgParams()</target>
        </trans-unit>
        <trans-unit id="817097db4f4524b7475ee9a94624753adaeec91b" translate="yes" xml:space="preserve">
          <source>X509CRL.getSignature()</source>
          <target state="translated">X509CRL.getSignature()</target>
        </trans-unit>
        <trans-unit id="a6853b01102efc16cd41b4f21b2c2403aa88fbec" translate="yes" xml:space="preserve">
          <source>X509CRL.getTBSCertList()</source>
          <target state="translated">X509CRL.getTBSCertList()</target>
        </trans-unit>
        <trans-unit id="859688e6f0f0d21f0915e65120c504f1568c0fa0" translate="yes" xml:space="preserve">
          <source>X509CRL.getThisUpdate()</source>
          <target state="translated">X509CRL.getThisUpdate()</target>
        </trans-unit>
        <trans-unit id="666eba5f3eb0836f485542f2b3612b3740a26658" translate="yes" xml:space="preserve">
          <source>X509CRL.getVersion()</source>
          <target state="translated">X509CRL.getVersion()</target>
        </trans-unit>
        <trans-unit id="ef777faf32e00157c932d26e4a91ee3ec2d48f1e" translate="yes" xml:space="preserve">
          <source>X509CRL.hashCode()</source>
          <target state="translated">X509CRL.hashCode()</target>
        </trans-unit>
        <trans-unit id="7df628731cfd156631b4a6dde9d8100f8bf13d59" translate="yes" xml:space="preserve">
          <source>X509CRL.verify()</source>
          <target state="translated">X509CRL.verify()</target>
        </trans-unit>
        <trans-unit id="4929c310370b1f2c4432d741b376aa8796d6daa6" translate="yes" xml:space="preserve">
          <source>X509CRLEntry</source>
          <target state="translated">X509CRLEntry</target>
        </trans-unit>
        <trans-unit id="6f506b182e9c3e2ee873d77a6b41722c00ad04f0" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.equals()</source>
          <target state="translated">X509CRLEntry.equals()</target>
        </trans-unit>
        <trans-unit id="4ea40e3fc5a6e22b9ad4abfb207a580ed449dd38" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.getCertificateIssuer()</source>
          <target state="translated">X509CRLEntry.getCertificateIssuer()</target>
        </trans-unit>
        <trans-unit id="236c0633cfcd4437299c5cfa51b69a58189686f3" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.getEncoded()</source>
          <target state="translated">X509CRLEntry.getEncoded()</target>
        </trans-unit>
        <trans-unit id="dc242325ee95b283e2bce2346034bb12bd0bfcec" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.getRevocationDate()</source>
          <target state="translated">X509CRLEntry.getRevocationDate()</target>
        </trans-unit>
        <trans-unit id="c8deeea3d6af56508cad742a99121e62126d0753" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.getRevocationReason()</source>
          <target state="translated">X509CRLEntry.getRevocationReason()</target>
        </trans-unit>
        <trans-unit id="70dc85fba9f70a00f5b5be5375f4f46bd97ff72f" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.getSerialNumber()</source>
          <target state="translated">X509CRLEntry.getSerialNumber()</target>
        </trans-unit>
        <trans-unit id="82ac9fc56fd26a520483391d1fc255e7a65ad123" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.hasExtensions()</source>
          <target state="translated">X509CRLEntry.hasExtensions()</target>
        </trans-unit>
        <trans-unit id="e49e98981f178c407f6c206c52398697a35c2131" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.hashCode()</source>
          <target state="translated">X509CRLEntry.hashCode()</target>
        </trans-unit>
        <trans-unit id="002a4ee189ce5a952707a0330d74fddbc21248bf" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.toString()</source>
          <target state="translated">X509CRLEntry.toString()</target>
        </trans-unit>
        <trans-unit id="0537cdb42327ff3a67d3ea83f714032cba724024" translate="yes" xml:space="preserve">
          <source>X509CRLSelector</source>
          <target state="translated">X509CRLSelector</target>
        </trans-unit>
        <trans-unit id="005121bdf2647a03921558ab963894a107961c75" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.addIssuer()</source>
          <target state="translated">X509CRLSelector.addIssuer()</target>
        </trans-unit>
        <trans-unit id="7aceb5d988f24a52dd02f464ca3d9494b9babed9" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.addIssuerName()</source>
          <target state="translated">X509CRLSelector.addIssuerName()</target>
        </trans-unit>
        <trans-unit id="8284e8efc69ac3a83307e2cafdf63753734cc0c4" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.clone()</source>
          <target state="translated">X509CRLSelector.clone()</target>
        </trans-unit>
        <trans-unit id="db9deb73c56072075cef0974014cbfa6b6abb260" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.getCertificateChecking()</source>
          <target state="translated">X509CRLSelector.getCertificateChecking()</target>
        </trans-unit>
        <trans-unit id="6ab4ca2011fa8c661e4158060a00d8943b99ef0e" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.getDateAndTime()</source>
          <target state="translated">X509CRLSelector.getDateAndTime()</target>
        </trans-unit>
        <trans-unit id="5532ca5d6569c1cbe8f868920ffc31a6e9707b99" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.getIssuerNames()</source>
          <target state="translated">X509CRLSelector.getIssuerNames()</target>
        </trans-unit>
        <trans-unit id="032e18f3ad4222c7bc737794768e950215da9b65" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.getIssuers()</source>
          <target state="translated">X509CRLSelector.getIssuers()</target>
        </trans-unit>
        <trans-unit id="07343df6a607c3fccbbf96fd3aa6b9b3a4fc4ef9" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.getMaxCRL()</source>
          <target state="translated">X509CRLSelector.getMaxCRL()</target>
        </trans-unit>
        <trans-unit id="5caa7704f0fbf71e8eda99020577a4f32ed3aec7" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.getMinCRL()</source>
          <target state="translated">X509CRLSelector.getMinCRL()</target>
        </trans-unit>
        <trans-unit id="cd016510ad0b64a2934299f67f11e5252571bb4c" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.match()</source>
          <target state="translated">X509CRLSelector.match()</target>
        </trans-unit>
        <trans-unit id="258d0b9571e5a2fda60a3574315cefbabaa4dd5a" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.setCertificateChecking()</source>
          <target state="translated">X509CRLSelector.setCertificateChecking()</target>
        </trans-unit>
        <trans-unit id="d500c0b9ab0836602fbfeff49c264f434688fe8b" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.setDateAndTime()</source>
          <target state="translated">X509CRLSelector.setDateAndTime()</target>
        </trans-unit>
        <trans-unit id="96a92cb7a8b71831980d1424a5364d676285b68d" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.setIssuerNames()</source>
          <target state="translated">X509CRLSelector.setIssuerNames()</target>
        </trans-unit>
        <trans-unit id="90cfbcab2db3279ddd6db3561807d714cfdd0713" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.setIssuers()</source>
          <target state="translated">X509CRLSelector.setIssuers()</target>
        </trans-unit>
        <trans-unit id="bf06aacef9a3be1a9ced4a10cbdd678a2f274350" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.setMaxCRLNumber()</source>
          <target state="translated">X509CRLSelector.setMaxCRLNumber()</target>
        </trans-unit>
        <trans-unit id="86a0b242f3cd5aa3f58de645180e4a240a5db1f7" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.setMinCRLNumber()</source>
          <target state="translated">X509CRLSelector.setMinCRLNumber()</target>
        </trans-unit>
        <trans-unit id="4321c653c660b241a08140ff511b46a70156446e" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.toString()</source>
          <target state="translated">X509CRLSelector.toString()</target>
        </trans-unit>
        <trans-unit id="94342e1781dc9c33a70ca21cb6357db0b0b9dd67" translate="yes" xml:space="preserve">
          <source>X509CertSelector</source>
          <target state="translated">X509CertSelector</target>
        </trans-unit>
        <trans-unit id="849c98616043746f73f4de24a5afbac1d44d1497" translate="yes" xml:space="preserve">
          <source>X509CertSelector.addPathToName()</source>
          <target state="translated">X509CertSelector.addPathToName()</target>
        </trans-unit>
        <trans-unit id="6278349d36bb944f429eb415b0b2f5653f53be35" translate="yes" xml:space="preserve">
          <source>X509CertSelector.addSubjectAlternativeName()</source>
          <target state="translated">X509CertSelector.addSubjectAlternativeName()</target>
        </trans-unit>
        <trans-unit id="ed2ee8251ff17d4037102b86a0eb818ed7b9158b" translate="yes" xml:space="preserve">
          <source>X509CertSelector.clone()</source>
          <target state="translated">X509CertSelector.clone()</target>
        </trans-unit>
        <trans-unit id="4f7c0218aa9ee861a280f2a8a3d681319af44dc2" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getAuthorityKeyIdentifier()</source>
          <target state="translated">X509CertSelector.getAuthorityKeyIdentifier()</target>
        </trans-unit>
        <trans-unit id="40d694ea6a0a9eae7c98a82ec7b08ba8c6e7d8c0" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getBasicConstraints()</source>
          <target state="translated">X509CertSelector.getBasicConstraints()</target>
        </trans-unit>
        <trans-unit id="489a03ee864e5186cbe7e408a9342a09b16aa78a" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getCertificate()</source>
          <target state="translated">X509CertSelector.getCertificate()</target>
        </trans-unit>
        <trans-unit id="bdaabe014d6ad8fd33d855ee9bb1f16ef2b29b42" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getCertificateValid()</source>
          <target state="translated">X509CertSelector.getCertificateValid()</target>
        </trans-unit>
        <trans-unit id="e0b06dfa030eecee34ff0d43f2bf88f7c677a1f8" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getExtendedKeyUsage()</source>
          <target state="translated">X509CertSelector.getExtendedKeyUsage()</target>
        </trans-unit>
        <trans-unit id="df6a6707a1f1e6b86730e8d99239277ba12cc213" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getIssuer()</source>
          <target state="translated">X509CertSelector.getIssuer()</target>
        </trans-unit>
        <trans-unit id="ae7e401dc377f554ece71569312befdac83a6d76" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getIssuerAsBytes()</source>
          <target state="translated">X509CertSelector.getIssuerAsBytes()</target>
        </trans-unit>
        <trans-unit id="fff1dd584edf03c78d3f48961f0068ee33aec9fd" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getIssuerAsString()</source>
          <target state="translated">X509CertSelector.getIssuerAsString()</target>
        </trans-unit>
        <trans-unit id="fb95fd548f3274ae1629644c5d7f19e3399b95b9" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getKeyUsage()</source>
          <target state="translated">X509CertSelector.getKeyUsage()</target>
        </trans-unit>
        <trans-unit id="201ecc89e49a111d0b388bd6788c96cf2da4cfe1" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getMatchAllSubjectAltNames()</source>
          <target state="translated">X509CertSelector.getMatchAllSubjectAltNames()</target>
        </trans-unit>
        <trans-unit id="d832903d93a4fa039be163837346386802abfb52" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getNameConstraints()</source>
          <target state="translated">X509CertSelector.getNameConstraints()</target>
        </trans-unit>
        <trans-unit id="c963901b33f3f86f39cdd1dd2864b23d5088719e" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getPathToNames()</source>
          <target state="translated">X509CertSelector.getPathToNames()</target>
        </trans-unit>
        <trans-unit id="781ef4d399e43252f203c8dc4b5efd48a663b7ac" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getPolicy()</source>
          <target state="translated">X509CertSelector.getPolicy()</target>
        </trans-unit>
        <trans-unit id="28ebd04b297719d66e00f58a120d42c627462c32" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getPrivateKeyValid()</source>
          <target state="translated">X509CertSelector.getPrivateKeyValid()</target>
        </trans-unit>
        <trans-unit id="299d03b8810ccbde189382f778e1e69a9edf5518" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSerialNumber()</source>
          <target state="translated">X509CertSelector.getSerialNumber()</target>
        </trans-unit>
        <trans-unit id="30fadb44582a38c2c581267a782a13ef48ce3f8c" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubject()</source>
          <target state="translated">X509CertSelector.getSubject()</target>
        </trans-unit>
        <trans-unit id="8fe339cc206ef73ed54a20b13ef60192e178f844" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubjectAlternativeNames()</source>
          <target state="translated">X509CertSelector.getSubjectAlternativeNames()</target>
        </trans-unit>
        <trans-unit id="ca470a951b9db1a85e008465b33f7f0025fd4ed7" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubjectAsBytes()</source>
          <target state="translated">X509CertSelector.getSubjectAsBytes()</target>
        </trans-unit>
        <trans-unit id="aed8aae80b16c67e2bd98bedd10564828eed6a02" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubjectAsString()</source>
          <target state="translated">X509CertSelector.getSubjectAsString()</target>
        </trans-unit>
        <trans-unit id="024358cc8426c59dad8537730df35ef69e5374a4" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubjectKeyIdentifier()</source>
          <target state="translated">X509CertSelector.getSubjectKeyIdentifier()</target>
        </trans-unit>
        <trans-unit id="f5738e2b6e6f38f47f261f937e072b25f4ec2eb5" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubjectPublicKey()</source>
          <target state="translated">X509CertSelector.getSubjectPublicKey()</target>
        </trans-unit>
        <trans-unit id="650c289d16e4fd83b1e95660cbfed07706bb9286" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubjectPublicKeyAlgID()</source>
          <target state="translated">X509CertSelector.getSubjectPublicKeyAlgID()</target>
        </trans-unit>
        <trans-unit id="227c01cacf995c323f3ba2ddda72a8c1d03e6e30" translate="yes" xml:space="preserve">
          <source>X509CertSelector.match()</source>
          <target state="translated">X509CertSelector.match()</target>
        </trans-unit>
        <trans-unit id="68c0f28130a6bf8d3c2abd14522f6c6c9688eb02" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setAuthorityKeyIdentifier()</source>
          <target state="translated">X509CertSelector.setAuthorityKeyIdentifier()</target>
        </trans-unit>
        <trans-unit id="0743dae5d1f40b69fc2ed7f9f8063b882e1c6506" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setBasicConstraints()</source>
          <target state="translated">X509CertSelector.setBasicConstraints()</target>
        </trans-unit>
        <trans-unit id="3f91236f46d4c1ca997bb1dd60eaa6480e178eac" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setCertificate()</source>
          <target state="translated">X509CertSelector.setCertificate()</target>
        </trans-unit>
        <trans-unit id="f753e79d07d1c7ff8e7766426c9008f7d741f947" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setCertificateValid()</source>
          <target state="translated">X509CertSelector.setCertificateValid()</target>
        </trans-unit>
        <trans-unit id="357a71aae1cd2f35c6a80fb733aa1088092c6474" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setExtendedKeyUsage()</source>
          <target state="translated">X509CertSelector.setExtendedKeyUsage()</target>
        </trans-unit>
        <trans-unit id="9ea83d746002bc0aa736e6f65afa241bdcc775dc" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setIssuer()</source>
          <target state="translated">X509CertSelector.setIssuer()</target>
        </trans-unit>
        <trans-unit id="c56e1298bc77fda9dd1a56fdf04575b296fc14b7" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setKeyUsage()</source>
          <target state="translated">X509CertSelector.setKeyUsage()</target>
        </trans-unit>
        <trans-unit id="b486a38a689304e6df785424134afd125d8d5032" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setMatchAllSubjectAltNames()</source>
          <target state="translated">X509CertSelector.setMatchAllSubjectAltNames()</target>
        </trans-unit>
        <trans-unit id="b48400dc4f916de3cc95f9337e25d568a2a1c742" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setNameConstraints()</source>
          <target state="translated">X509CertSelector.setNameConstraints()</target>
        </trans-unit>
        <trans-unit id="fe470ccac7aaaa2979faf49d5584f5491d1c6565" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setPathToNames()</source>
          <target state="translated">X509CertSelector.setPathToNames()</target>
        </trans-unit>
        <trans-unit id="dfaf5c753f0e41d22b63a535d3937b53aae07e5f" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setPolicy()</source>
          <target state="translated">X509CertSelector.setPolicy()</target>
        </trans-unit>
        <trans-unit id="6d0c7877f10fc09b324ca3d3047400411f1c6ea4" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setPrivateKeyValid()</source>
          <target state="translated">X509CertSelector.setPrivateKeyValid()</target>
        </trans-unit>
        <trans-unit id="86af9d1edb45e22a2903875dd9b2971784e2c8d1" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setSerialNumber()</source>
          <target state="translated">X509CertSelector.setSerialNumber()</target>
        </trans-unit>
        <trans-unit id="ec33f3cc9bc744f7b4f027680c1da2ad2b108a48" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setSubject()</source>
          <target state="translated">X509CertSelector.setSubject()</target>
        </trans-unit>
        <trans-unit id="7424eda4b963ea374a5ffa98029c541ca2d056a1" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setSubjectAlternativeNames()</source>
          <target state="translated">X509CertSelector.setSubjectAlternativeNames()</target>
        </trans-unit>
        <trans-unit id="ac907bb460f67c33f513b32cdf50d78c639a3427" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setSubjectKeyIdentifier()</source>
          <target state="translated">X509CertSelector.setSubjectKeyIdentifier()</target>
        </trans-unit>
        <trans-unit id="e6a4ccb21547f2a34b70f98ec9ba1b1eaeb60dd0" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setSubjectPublicKey()</source>
          <target state="translated">X509CertSelector.setSubjectPublicKey()</target>
        </trans-unit>
        <trans-unit id="1e9218b693cd7e79257d7ae26d7276128e5c3b2b" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setSubjectPublicKeyAlgID()</source>
          <target state="translated">X509CertSelector.setSubjectPublicKeyAlgID()</target>
        </trans-unit>
        <trans-unit id="c5a923a527dc9c62dba9aebf1122462312f07cc2" translate="yes" xml:space="preserve">
          <source>X509CertSelector.toString()</source>
          <target state="translated">X509CertSelector.toString()</target>
        </trans-unit>
        <trans-unit id="f6f0e8b60112f1c3be8ebabdeb6d7e48d60d9d02" translate="yes" xml:space="preserve">
          <source>X509Certificate</source>
          <target state="translated">X509Certificate</target>
        </trans-unit>
        <trans-unit id="7d60e0e197d0c0d506aa9dca6d156b869f512905" translate="yes" xml:space="preserve">
          <source>X509Certificate.checkValidity()</source>
          <target state="translated">X509Certificate.checkValidity()</target>
        </trans-unit>
        <trans-unit id="5f9840aac5626ba3ca82b57ed531cd3d3f4c15d3" translate="yes" xml:space="preserve">
          <source>X509Certificate.getBasicConstraints()</source>
          <target state="translated">X509Certificate.getBasicConstraints()</target>
        </trans-unit>
        <trans-unit id="8647c6b8afd81e28f330459dec8c7e3ccd121504" translate="yes" xml:space="preserve">
          <source>X509Certificate.getExtendedKeyUsage()</source>
          <target state="translated">X509Certificate.getExtendedKeyUsage()</target>
        </trans-unit>
        <trans-unit id="008ce5566e57c20d1a7ef32f815136c72bee066c" translate="yes" xml:space="preserve">
          <source>X509Certificate.getInstance()</source>
          <target state="translated">X509Certificate.getInstance()</target>
        </trans-unit>
        <trans-unit id="ac9c7d03b54b6ef087068f76feb5ca6ca90487ea" translate="yes" xml:space="preserve">
          <source>X509Certificate.getIssuerAlternativeNames()</source>
          <target state="translated">X509Certificate.getIssuerAlternativeNames()</target>
        </trans-unit>
        <trans-unit id="7ceb0ae93b0e59134baf7b2cea3a9b450c9ddc10" translate="yes" xml:space="preserve">
          <source>X509Certificate.getIssuerDN()</source>
          <target state="translated">X509Certificate.getIssuerDN()</target>
        </trans-unit>
        <trans-unit id="2a45c4d375bea0212b9380afe65c7359177ff695" translate="yes" xml:space="preserve">
          <source>X509Certificate.getIssuerUniqueID()</source>
          <target state="translated">X509Certificate.getIssuerUniqueID()</target>
        </trans-unit>
        <trans-unit id="81b58aa8abdd44a650146b3a19b6a2755b7ceddf" translate="yes" xml:space="preserve">
          <source>X509Certificate.getIssuerX500Principal()</source>
          <target state="translated">X509Certificate.getIssuerX500Principal()</target>
        </trans-unit>
        <trans-unit id="e6633e0189c761013fb963894756a20bd053a6c4" translate="yes" xml:space="preserve">
          <source>X509Certificate.getKeyUsage()</source>
          <target state="translated">X509Certificate.getKeyUsage()</target>
        </trans-unit>
        <trans-unit id="12e70fdfd017b4e91263c6b022d715a90fce8f33" translate="yes" xml:space="preserve">
          <source>X509Certificate.getNotAfter()</source>
          <target state="translated">X509Certificate.getNotAfter()</target>
        </trans-unit>
        <trans-unit id="9a92edc1a9f8a4fd9110f3acb8fda4b1b3c6ab4e" translate="yes" xml:space="preserve">
          <source>X509Certificate.getNotBefore()</source>
          <target state="translated">X509Certificate.getNotBefore()</target>
        </trans-unit>
        <trans-unit id="27da78eb87b805e2444b1f82afb90e9bc7835b4c" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSerialNumber()</source>
          <target state="translated">X509Certificate.getSerialNumber()</target>
        </trans-unit>
        <trans-unit id="6f8af08573e408c5a6b7bc75cb80ecc6b451cb9e" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSigAlgName()</source>
          <target state="translated">X509Certificate.getSigAlgName()</target>
        </trans-unit>
        <trans-unit id="607a3a0749c8b1dab746e512d28d69eda4f25849" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSigAlgOID()</source>
          <target state="translated">X509Certificate.getSigAlgOID()</target>
        </trans-unit>
        <trans-unit id="02b5c5e5de572fff22a8a962331d8bfb41d52abc" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSigAlgParams()</source>
          <target state="translated">X509Certificate.getSigAlgParams()</target>
        </trans-unit>
        <trans-unit id="abf0378af3325f51ffce60cc5e76863d6e64cb7c" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSignature()</source>
          <target state="translated">X509Certificate.getSignature()</target>
        </trans-unit>
        <trans-unit id="63ea54ab328cdf2e3ffeca94bf86dcb1fc3ba3b2" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSubjectAlternativeNames()</source>
          <target state="translated">X509Certificate.getSubjectAlternativeNames()</target>
        </trans-unit>
        <trans-unit id="db892dc548dadaea8e72280046ee97a7d31aff5e" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSubjectDN()</source>
          <target state="translated">X509Certificate.getSubjectDN()</target>
        </trans-unit>
        <trans-unit id="2efa2a18e43e940888c9b04b569ccc74f02ab50b" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSubjectUniqueID()</source>
          <target state="translated">X509Certificate.getSubjectUniqueID()</target>
        </trans-unit>
        <trans-unit id="28cd8f5a485793a0f7cad8c499296d29e2ac48d4" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSubjectX500Principal()</source>
          <target state="translated">X509Certificate.getSubjectX500Principal()</target>
        </trans-unit>
        <trans-unit id="33d127567465109550abfdba854639b9080179ac" translate="yes" xml:space="preserve">
          <source>X509Certificate.getTBSCertificate()</source>
          <target state="translated">X509Certificate.getTBSCertificate()</target>
        </trans-unit>
        <trans-unit id="cfdd8cbb40490d2380f820a508eb536dc1f316f5" translate="yes" xml:space="preserve">
          <source>X509Certificate.getVersion()</source>
          <target state="translated">X509Certificate.getVersion()</target>
        </trans-unit>
        <trans-unit id="06976b95a9323811dcf9535aa216a7ec252ae43d" translate="yes" xml:space="preserve">
          <source>X509Certificate.verify()</source>
          <target state="translated">X509Certificate.verify()</target>
        </trans-unit>
        <trans-unit id="cc2e615ba7cbd040c10d3be3571d5078c66f8b54" translate="yes" xml:space="preserve">
          <source>X509Data</source>
          <target state="translated">X509Data</target>
        </trans-unit>
        <trans-unit id="ae8f17ee616d8138bab4d4f0e4737dd1f9da13cc" translate="yes" xml:space="preserve">
          <source>X509EncodedKeySpec</source>
          <target state="translated">X509EncodedKeySpec</target>
        </trans-unit>
        <trans-unit id="626dd44a2314d53b33d369a1f08f07026b41ff51" translate="yes" xml:space="preserve">
          <source>X509EncodedKeySpec.getEncoded()</source>
          <target state="translated">X509EncodedKeySpec.getEncoded()</target>
        </trans-unit>
        <trans-unit id="5839e3e80e77157ebc8b17529536f8d4a0941fd3" translate="yes" xml:space="preserve">
          <source>X509EncodedKeySpec.getFormat()</source>
          <target state="translated">X509EncodedKeySpec.getFormat()</target>
        </trans-unit>
        <trans-unit id="d234842c0789a795b12742b8d823eef9ed978f36" translate="yes" xml:space="preserve">
          <source>X509ExtendedKeyManager</source>
          <target state="translated">X509ExtendedKeyManager</target>
        </trans-unit>
        <trans-unit id="b493b829ae35b2377354cbba6507ba8b89557e66" translate="yes" xml:space="preserve">
          <source>X509ExtendedKeyManager.chooseEngineClientAlias()</source>
          <target state="translated">X509ExtendedKeyManager.chooseEngineClientAlias()</target>
        </trans-unit>
        <trans-unit id="268c5e4bfe9daff1d0c54174fb32327af88ecc99" translate="yes" xml:space="preserve">
          <source>X509ExtendedKeyManager.chooseEngineServerAlias()</source>
          <target state="translated">X509ExtendedKeyManager.chooseEngineServerAlias()</target>
        </trans-unit>
        <trans-unit id="4ab0984afa85cd2e8f19d0156d09d7aef547baaf" translate="yes" xml:space="preserve">
          <source>X509ExtendedTrustManager</source>
          <target state="translated">X509ExtendedTrustManager</target>
        </trans-unit>
        <trans-unit id="308fba37a669971bdf5c83e790461904ac757d89" translate="yes" xml:space="preserve">
          <source>X509ExtendedTrustManager.checkClientTrusted()</source>
          <target state="translated">X509ExtendedTrustManager.checkClientTrusted()</target>
        </trans-unit>
        <trans-unit id="2339dd435d457b4c465d46b8f4645892098fa99f" translate="yes" xml:space="preserve">
          <source>X509ExtendedTrustManager.checkServerTrusted()</source>
          <target state="translated">X509ExtendedTrustManager.checkServerTrusted()</target>
        </trans-unit>
        <trans-unit id="80b51310f31ac6afeea08769e4d4b9f50226c664" translate="yes" xml:space="preserve">
          <source>X509Extension</source>
          <target state="translated">X509Extension</target>
        </trans-unit>
        <trans-unit id="e5f5dadf1208209f33dc58be405a7eb9ebcb5d0d" translate="yes" xml:space="preserve">
          <source>X509Extension.getCriticalExtensionOIDs()</source>
          <target state="translated">X509Extension.getCriticalExtensionOIDs()</target>
        </trans-unit>
        <trans-unit id="71bb077b1f322fd963fa780ed45ada48fbd41624" translate="yes" xml:space="preserve">
          <source>X509Extension.getExtensionValue()</source>
          <target state="translated">X509Extension.getExtensionValue()</target>
        </trans-unit>
        <trans-unit id="3e4a2928f4c2275aeba3a445dda0561efd55c7f5" translate="yes" xml:space="preserve">
          <source>X509Extension.getNonCriticalExtensionOIDs()</source>
          <target state="translated">X509Extension.getNonCriticalExtensionOIDs()</target>
        </trans-unit>
        <trans-unit id="5d5e4a7a3f7e1ee7a5fb70fc335737e9208f5abe" translate="yes" xml:space="preserve">
          <source>X509Extension.hasUnsupportedCriticalExtension()</source>
          <target state="translated">X509Extension.hasUnsupportedCriticalExtension()</target>
        </trans-unit>
        <trans-unit id="6220cf77d0d34cae0d597adcdf425c3abce279b5" translate="yes" xml:space="preserve">
          <source>X509IssuerSerial</source>
          <target state="translated">X509IssuerSerial</target>
        </trans-unit>
        <trans-unit id="dd3d3c5c395ab8f86b05f638bc2e2f70a0b2cf27" translate="yes" xml:space="preserve">
          <source>X509KeyManager</source>
          <target state="translated">X509KeyManager</target>
        </trans-unit>
        <trans-unit id="beab63b45c7665300d68a9a410348592b8d02385" translate="yes" xml:space="preserve">
          <source>X509KeyManager.chooseClientAlias()</source>
          <target state="translated">X509KeyManager.chooseClientAlias()</target>
        </trans-unit>
        <trans-unit id="e2ed5257aee8f84943c3c5175c5720366da48e31" translate="yes" xml:space="preserve">
          <source>X509KeyManager.chooseServerAlias()</source>
          <target state="translated">X509KeyManager.chooseServerAlias()</target>
        </trans-unit>
        <trans-unit id="546a546e5697acf8b86342e95b6031173171bf16" translate="yes" xml:space="preserve">
          <source>X509KeyManager.getCertificateChain()</source>
          <target state="translated">X509KeyManager.getCertificateChain()</target>
        </trans-unit>
        <trans-unit id="360d2a2870aa288733c777b743cf1e807d032144" translate="yes" xml:space="preserve">
          <source>X509KeyManager.getClientAliases()</source>
          <target state="translated">X509KeyManager.getClientAliases()</target>
        </trans-unit>
        <trans-unit id="aac579d7db0dfe6ca743f44f435647577da385a7" translate="yes" xml:space="preserve">
          <source>X509KeyManager.getPrivateKey()</source>
          <target state="translated">X509KeyManager.getPrivateKey()</target>
        </trans-unit>
        <trans-unit id="e3ca12c81385c04439e1e70f0e10117530ced15d" translate="yes" xml:space="preserve">
          <source>X509KeyManager.getServerAliases()</source>
          <target state="translated">X509KeyManager.getServerAliases()</target>
        </trans-unit>
        <trans-unit id="3398eab6590ac27408e569fc599faf599df3542b" translate="yes" xml:space="preserve">
          <source>X509TrustManager</source>
          <target state="translated">X509TrustManager</target>
        </trans-unit>
        <trans-unit id="b49a3c450c79104083adf3bf74cf91b3b48f5e5d" translate="yes" xml:space="preserve">
          <source>X509TrustManager.checkClientTrusted()</source>
          <target state="translated">X509TrustManager.checkClientTrusted()</target>
        </trans-unit>
        <trans-unit id="629ebeabcce436e9b7c77948c6913d0dc0dcf13a" translate="yes" xml:space="preserve">
          <source>X509TrustManager.checkServerTrusted()</source>
          <target state="translated">X509TrustManager.checkServerTrusted()</target>
        </trans-unit>
        <trans-unit id="c6144704bd36cad2146f534a13d9f8f6ba6eaabf" translate="yes" xml:space="preserve">
          <source>X509TrustManager.getAcceptedIssuers()</source>
          <target state="translated">X509TrustManager.getAcceptedIssuers()</target>
        </trans-unit>
        <trans-unit id="76c2edae465246aa26b0ff1bee9fd3b755611967" translate="yes" xml:space="preserve">
          <source>XAConnection</source>
          <target state="translated">XAConnection</target>
        </trans-unit>
        <trans-unit id="6787db011941d44e2a8b3eab70c087e56129c431" translate="yes" xml:space="preserve">
          <source>XAConnectionBuilder</source>
          <target state="translated">XAConnectionBuilder</target>
        </trans-unit>
        <trans-unit id="f0523ae2f59dd9e2c59e420113c94bae314feb13" translate="yes" xml:space="preserve">
          <source>XADataSource</source>
          <target state="translated">XADataSource</target>
        </trans-unit>
        <trans-unit id="bb284274415eb83f5f2baa08b5fc1d9f2a6efa61" translate="yes" xml:space="preserve">
          <source>XAER_ASYNC</source>
          <target state="translated">XAER_ASYNC</target>
        </trans-unit>
        <trans-unit id="dadbb855e925668e84ee8a8ef3783fc2c8d1de90" translate="yes" xml:space="preserve">
          <source>XAER_DUPID</source>
          <target state="translated">XAER_DUPID</target>
        </trans-unit>
        <trans-unit id="5b22cf5171ebbc5232aa6b8051b43cd1ff53c18a" translate="yes" xml:space="preserve">
          <source>XAER_INVAL</source>
          <target state="translated">XAER_INVAL</target>
        </trans-unit>
        <trans-unit id="fbf0ba17d7abb15669590db0ad5a834ef16539cd" translate="yes" xml:space="preserve">
          <source>XAER_NOTA</source>
          <target state="translated">XAER_NOTA</target>
        </trans-unit>
        <trans-unit id="3241a99d17fea78a9a97d02a84b4f7a1f0dee77d" translate="yes" xml:space="preserve">
          <source>XAER_OUTSIDE</source>
          <target state="translated">XAER_OUTSIDE</target>
        </trans-unit>
        <trans-unit id="5cb21154c19010904ddcbce89b38ae6fcf3b497d" translate="yes" xml:space="preserve">
          <source>XAER_PROTO</source>
          <target state="translated">XAER_PROTO</target>
        </trans-unit>
        <trans-unit id="79d8d1d3b4b3e7091cfceb41f7d04f8ea221e91b" translate="yes" xml:space="preserve">
          <source>XAER_RMERR</source>
          <target state="translated">XAER_RMERR</target>
        </trans-unit>
        <trans-unit id="5a067d0f3b0162e42560a0a76f20b71ba7df21ab" translate="yes" xml:space="preserve">
          <source>XAER_RMFAIL</source>
          <target state="translated">XAER_RMFAIL</target>
        </trans-unit>
        <trans-unit id="b981c657dd4ffead8646702e29e9885c760dfdab" translate="yes" xml:space="preserve">
          <source>XAException</source>
          <target state="translated">XAException</target>
        </trans-unit>
        <trans-unit id="90135fa2278a797c09b3f412c309f5da456ab1a1" translate="yes" xml:space="preserve">
          <source>XAResource</source>
          <target state="translated">XAResource</target>
        </trans-unit>
        <trans-unit id="519c05c565a5ecaf8b0edec5254fa4a86b91d85e" translate="yes" xml:space="preserve">
          <source>XA_HEURCOM</source>
          <target state="translated">XA_HEURCOM</target>
        </trans-unit>
        <trans-unit id="6e8cd740b41a0890a9e63a4a5864e51daa72b38c" translate="yes" xml:space="preserve">
          <source>XA_HEURHAZ</source>
          <target state="translated">XA_HEURHAZ</target>
        </trans-unit>
        <trans-unit id="130f6b0c5768abdb67c599aac053f77a9d79f957" translate="yes" xml:space="preserve">
          <source>XA_HEURMIX</source>
          <target state="translated">XA_HEURMIX</target>
        </trans-unit>
        <trans-unit id="11e3ce1bdeb7e168dd95324d164e678837fda27b" translate="yes" xml:space="preserve">
          <source>XA_HEURRB</source>
          <target state="translated">XA_HEURRB</target>
        </trans-unit>
        <trans-unit id="a2b62e4b72cfc864c455d9e266d1b3ea423b6412" translate="yes" xml:space="preserve">
          <source>XA_NOMIGRATE</source>
          <target state="translated">XA_NOMIGRATE</target>
        </trans-unit>
        <trans-unit id="2d9fc8ae9bc769cc7734d19e36c742b89243430e" translate="yes" xml:space="preserve">
          <source>XA_OK</source>
          <target state="translated">XA_OK</target>
        </trans-unit>
        <trans-unit id="cc7a909867489a1467aaa4da1a03b498ef3e4a30" translate="yes" xml:space="preserve">
          <source>XA_RBBASE</source>
          <target state="translated">XA_RBBASE</target>
        </trans-unit>
        <trans-unit id="d9c9e61005835748a6523d542018ec562ea95976" translate="yes" xml:space="preserve">
          <source>XA_RBCOMMFAIL</source>
          <target state="translated">XA_RBCOMMFAIL</target>
        </trans-unit>
        <trans-unit id="f6f44184b903fb4352e0b422d14e3cf849a2f42c" translate="yes" xml:space="preserve">
          <source>XA_RBDEADLOCK</source>
          <target state="translated">XA_RBDEADLOCK</target>
        </trans-unit>
        <trans-unit id="676d5154c75f5f2457dad392a894c940549adb9b" translate="yes" xml:space="preserve">
          <source>XA_RBEND</source>
          <target state="translated">XA_RBEND</target>
        </trans-unit>
        <trans-unit id="e4ee28fff9c27ad55d90e8afaa55553113715308" translate="yes" xml:space="preserve">
          <source>XA_RBINTEGRITY</source>
          <target state="translated">XA_RBINTEGRITY</target>
        </trans-unit>
        <trans-unit id="8cb6a05eec5668891dabe51b92dcd4ca53e7b262" translate="yes" xml:space="preserve">
          <source>XA_RBOTHER</source>
          <target state="translated">XA_RBOTHER</target>
        </trans-unit>
        <trans-unit id="7af3a42005ac7100f67332fc3df6bd5c8aac578d" translate="yes" xml:space="preserve">
          <source>XA_RBPROTO</source>
          <target state="translated">XA_RBPROTO</target>
        </trans-unit>
        <trans-unit id="a860dc3d8693b70b5a2ef421ea6ffb54058fbc22" translate="yes" xml:space="preserve">
          <source>XA_RBROLLBACK</source>
          <target state="translated">XA_RBROLLBACK</target>
        </trans-unit>
        <trans-unit id="68fcb150f06d246a712d11be61801196e53c3f63" translate="yes" xml:space="preserve">
          <source>XA_RBTIMEOUT</source>
          <target state="translated">XA_RBTIMEOUT</target>
        </trans-unit>
        <trans-unit id="6f54882d48e3d7338d2618b25e3ed40b1a5f79be" translate="yes" xml:space="preserve">
          <source>XA_RBTRANSIENT</source>
          <target state="translated">XA_RBTRANSIENT</target>
        </trans-unit>
        <trans-unit id="d1dd8736bc71bb7685b95dbd5f88cb1cb179cc71" translate="yes" xml:space="preserve">
          <source>XA_RDONLY</source>
          <target state="translated">XA_RDONLY</target>
        </trans-unit>
        <trans-unit id="18c2e51a750b9b5babcfa6f5234492230a197ea2" translate="yes" xml:space="preserve">
          <source>XA_RETRY</source>
          <target state="translated">XA_RETRY</target>
        </trans-unit>
        <trans-unit id="f0f34ab0d4c07886061a60adb9a708c6b915d143" translate="yes" xml:space="preserve">
          <source>XECKey</source>
          <target state="translated">XECKey</target>
        </trans-unit>
        <trans-unit id="366c50917fa6b923ad4b50ba732b35b4743ae846" translate="yes" xml:space="preserve">
          <source>XECPrivateKey</source>
          <target state="translated">XECPrivateKey</target>
        </trans-unit>
        <trans-unit id="eb8cce303d8dd57f348bbac056c3df43bcd5ca31" translate="yes" xml:space="preserve">
          <source>XECPrivateKeySpec</source>
          <target state="translated">XECPrivateKeySpec</target>
        </trans-unit>
        <trans-unit id="51b457fb387cf1a26accf25662a4f34cdfb1ac1c" translate="yes" xml:space="preserve">
          <source>XECPublicKey</source>
          <target state="translated">XECPublicKey</target>
        </trans-unit>
        <trans-unit id="2859c63bc661635c7fbb7ca1cc4ec7edae5e7587" translate="yes" xml:space="preserve">
          <source>XECPublicKeySpec</source>
          <target state="translated">XECPublicKeySpec</target>
        </trans-unit>
        <trans-unit id="8a62a928eff02bff00f41060521612b10eec6759" translate="yes" xml:space="preserve">
          <source>XInclude</source>
          <target state="translated">XInclude</target>
        </trans-unit>
        <trans-unit id="74f604037ac54394d82555eaefee2be33d8be8d9" translate="yes" xml:space="preserve">
          <source>XInclude processing defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">XInclude processing defaults to &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46c80b8ae2eb7594d1452f5aadd0e3245397927b" translate="yes" xml:space="preserve">
          <source>XML Document Type Declaration Namespace URI as an arbitrary value.</source>
          <target state="translated">XML Document Type Declaration Namespace URI as an arbitrary value.</target>
        </trans-unit>
        <trans-unit id="c8b52995d2e3e7b92a65870b3e70908e13a37262" translate="yes" xml:space="preserve">
          <source>XML Namespaces, &lt;code&gt;javax.xml.stream.isRepairingNamespaces&lt;/code&gt; and write method behaviour</source>
          <target state="translated">XML Namespaces, &lt;code&gt;javax.xml.stream.isRepairingNamespaces&lt;/code&gt; and write method behaviour</target>
        </trans-unit>
        <trans-unit id="08bb21838ff3b857bc7688a6474bceb05989e18e" translate="yes" xml:space="preserve">
          <source>XML Path Language (XPath) Version 1.0</source>
          <target state="translated">XML Path Language (XPath) Version 1.0</target>
        </trans-unit>
        <trans-unit id="8b4d2611104fc2e22f915504a1f0e7daf35b153e" translate="yes" xml:space="preserve">
          <source>XML Path Language (XPath) Version 1.0, Core Function Library</source>
          <target state="translated">XML Path Language (XPath) Version 1.0, Core Function Library</target>
        </trans-unit>
        <trans-unit id="0250269eb2939dd52d379d16f0b0ee5dd65ae014" translate="yes" xml:space="preserve">
          <source>XML Path Language (XPath) Version 1.0, Expressions</source>
          <target state="translated">XPath (XML Path Language) 버전 1.0, 표현식</target>
        </trans-unit>
        <trans-unit id="8ace6ae6fde9fbed722f45535558addf8bd2f02b" translate="yes" xml:space="preserve">
          <source>XML Schema</source>
          <target state="translated">XML 스키마</target>
        </trans-unit>
        <trans-unit id="186b8e7fe1ccfe27858b12117d8aeef51ef87896" translate="yes" xml:space="preserve">
          <source>XML Schema 1.0</source>
          <target state="translated">XML 스키마 1.0</target>
        </trans-unit>
        <trans-unit id="f86912a5eee298d4f19f14d86c63788d53a5a2b5" translate="yes" xml:space="preserve">
          <source>XML Schema Part 2: Datatypes, 3.2.6 duration, defines &lt;code&gt;duration&lt;/code&gt; as:</source>
          <target state="translated">XML 스키마 2 부 : 데이터 유형, 3.2.6 기간은 &lt;code&gt;duration&lt;/code&gt; 을 다음과 같이 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="695811abba6f8b54d650b780b0059c71c657cf03" translate="yes" xml:space="preserve">
          <source>XML Schema Part2: Datatypes specification</source>
          <target state="translated">XML 스키마 Part2 : 데이터 유형 사양</target>
        </trans-unit>
        <trans-unit id="453f98fbacbdc398df89cfa539cf7d5baea1f103" translate="yes" xml:space="preserve">
          <source>XML does not mandate that a non-validating XML processor read and process entity declarations made in the external subset or declared in parameter entities. This means that parsed entities declared in the external subset need not be expanded by some classes of applications, and that the replacement text of the entity may not be available. When the &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#intern-replacement&quot;&gt; replacement text&lt;/a&gt; is available, the corresponding &lt;code&gt;Entity&lt;/code&gt; node's child list represents the structure of that replacement value. Otherwise, the child list is empty.</source>
          <target state="translated">XML은 유효성을 검사하지 않는 XML 프로세서가 외부 서브 세트에서 작성되거나 매개 변수 엔티티에서 선언 된 엔티티 선언을 읽고 처리하도록 요구하지 않습니다. 즉, 외부 하위 집합에서 선언 된 구문 분석 된 엔터티는 일부 응용 프로그램 클래스에서 확장 할 필요가 없으며 엔터티의 대체 텍스트를 사용할 수 없습니다. 때 &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#intern-replacement&quot;&gt;대체 텍스트가&lt;/a&gt; 제공되며, 해당 &lt;code&gt;Entity&lt;/code&gt; 노드의 자식 목록은 대체 값의 구조를 나타냅니다. 그렇지 않으면 하위 목록이 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="968ea917c7a3e5310d5e76452db2eba17f05e62f" translate="yes" xml:space="preserve">
          <source>XML formatted string to allow presentation of data to be associated with the MBean.</source>
          <target state="translated">데이터 표시를 MBean과 연관시킬 수있는 XML 형식 문자열.</target>
        </trans-unit>
        <trans-unit id="4dc30275d354dd7181465bed4f31f1ae500952d2" translate="yes" xml:space="preserve">
          <source>XML formatted string to allow presentation of data.</source>
          <target state="translated">데이터를 표현할 수있는 XML 형식의 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="20aae2b332f8faa7cffe9721f53610418c44cc3e" translate="yes" xml:space="preserve">
          <source>XML formatted string to describe how to present operation</source>
          <target state="translated">작업 표시 방법을 설명하는 XML 형식 문자열</target>
        </trans-unit>
        <trans-unit id="b5a0c79d0c8b8920e18dd76de904f3f4d78f2d15" translate="yes" xml:space="preserve">
          <source>XML's standard &quot;id&quot; and &quot;idref&quot; attributes are used to make references to previous expressions - so as to deal with circularities in the object graph.</source>
          <target state="translated">XML의 표준 &quot;id&quot;및 &quot;idref&quot;속성은 객체 그래프에서 원형을 처리하기 위해 이전 표현식을 참조하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cf6b2d0c1957a4d3ae847449d183bf32d8f9d712" translate="yes" xml:space="preserve">
          <source>XML, as &lt;code&gt;String&lt;/code&gt;, representation of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;</source>
          <target state="translated">XML, 이 &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; 의 &lt;code&gt;String&lt;/code&gt; 표현</target>
        </trans-unit>
        <trans-unit id="422ebb66763ebb4b7e3a4bacd8a599cb66b3a073" translate="yes" xml:space="preserve">
          <source>XMLConstants</source>
          <target state="translated">XMLConstants</target>
        </trans-unit>
        <trans-unit id="24d3bf8da25ecc59e45b0df42c0e7afaff65e62a" translate="yes" xml:space="preserve">
          <source>XMLCryptoContext</source>
          <target state="translated">XMLCryptoContext</target>
        </trans-unit>
        <trans-unit id="02dc0c5431e5a247c506d381c0c4b8b1c967fced" translate="yes" xml:space="preserve">
          <source>XMLDecoder</source>
          <target state="translated">XMLDecoder</target>
        </trans-unit>
        <trans-unit id="d3b1b38355d8b6342d116821a4e1be63c8d5d0d6" translate="yes" xml:space="preserve">
          <source>XMLDecoder.close()</source>
          <target state="translated">XMLDecoder.close()</target>
        </trans-unit>
        <trans-unit id="3c87a023ff16a95bbcc5e2a6ab97491166d7684e" translate="yes" xml:space="preserve">
          <source>XMLDecoder.createHandler()</source>
          <target state="translated">XMLDecoder.createHandler()</target>
        </trans-unit>
        <trans-unit id="af4878a005999f1097a4ecfe6e645499fb15ea61" translate="yes" xml:space="preserve">
          <source>XMLDecoder.getExceptionListener()</source>
          <target state="translated">XMLDecoder.getExceptionListener()</target>
        </trans-unit>
        <trans-unit id="66219f0041ea09c5c5a1d7fe97ca2bc3ad2aa000" translate="yes" xml:space="preserve">
          <source>XMLDecoder.getOwner()</source>
          <target state="translated">XMLDecoder.getOwner()</target>
        </trans-unit>
        <trans-unit id="0da6b45a401fc1689dd9b1ccdc3dd95adff8893b" translate="yes" xml:space="preserve">
          <source>XMLDecoder.readObject()</source>
          <target state="translated">XMLDecoder.readObject()</target>
        </trans-unit>
        <trans-unit id="5dfc857bce82ce7c5cdee5e779da1ae0eb0c0ded" translate="yes" xml:space="preserve">
          <source>XMLDecoder.setExceptionListener()</source>
          <target state="translated">XMLDecoder.setExceptionListener()</target>
        </trans-unit>
        <trans-unit id="4ee887687342067c99bfe0d0af714ced3baa95ff" translate="yes" xml:space="preserve">
          <source>XMLDecoder.setOwner()</source>
          <target state="translated">XMLDecoder.setOwner()</target>
        </trans-unit>
        <trans-unit id="4827dc07975aea991a9ecfe7b692e519a8b8c5b1" translate="yes" xml:space="preserve">
          <source>XMLEncoder</source>
          <target state="translated">XMLEncoder</target>
        </trans-unit>
        <trans-unit id="644c993c2a829288b182e72ff8ac01cd744f2319" translate="yes" xml:space="preserve">
          <source>XMLEncoder.close()</source>
          <target state="translated">XMLEncoder.close()</target>
        </trans-unit>
        <trans-unit id="ab68c831f37680e9db84b131e990543e5b98d398" translate="yes" xml:space="preserve">
          <source>XMLEncoder.flush()</source>
          <target state="translated">XMLEncoder.flush()</target>
        </trans-unit>
        <trans-unit id="c8d48b39103910603b9f10c00a838ebafd27af97" translate="yes" xml:space="preserve">
          <source>XMLEncoder.getOwner()</source>
          <target state="translated">XMLEncoder.getOwner()</target>
        </trans-unit>
        <trans-unit id="fde1fda95aff958e75e32ffa591619d7c0052826" translate="yes" xml:space="preserve">
          <source>XMLEncoder.setOwner()</source>
          <target state="translated">XMLEncoder.setOwner()</target>
        </trans-unit>
        <trans-unit id="c2f1def364640e88766c724132ad7b2ed19b5f29" translate="yes" xml:space="preserve">
          <source>XMLEncoder.writeExpression()</source>
          <target state="translated">XMLEncoder.writeExpression()</target>
        </trans-unit>
        <trans-unit id="5c5aba5754a86fd9b5760b9053b3617b33cfaa33" translate="yes" xml:space="preserve">
          <source>XMLEncoder.writeObject()</source>
          <target state="translated">XMLEncoder.writeObject()</target>
        </trans-unit>
        <trans-unit id="301f679b56d6b29ec2a14c05a4ac451119721f10" translate="yes" xml:space="preserve">
          <source>XMLEncoder.writeStatement()</source>
          <target state="translated">XMLEncoder.writeStatement()</target>
        </trans-unit>
        <trans-unit id="68da4789aee6b82d990dd92a68c9c0760ad000ab" translate="yes" xml:space="preserve">
          <source>XMLEvent</source>
          <target state="translated">XMLEvent</target>
        </trans-unit>
        <trans-unit id="774dfcfa3eeb5fb986f2394861fa3ed92312d8c6" translate="yes" xml:space="preserve">
          <source>XMLEventAllocator</source>
          <target state="translated">XMLEventAllocator</target>
        </trans-unit>
        <trans-unit id="94245cc50bd1ad6b9f842dc83e04338c7c7c067e" translate="yes" xml:space="preserve">
          <source>XMLEventConsumer</source>
          <target state="translated">XMLEventConsumer</target>
        </trans-unit>
        <trans-unit id="312cc5e9aa0e6c037991eaf4427bffa81f84167f" translate="yes" xml:space="preserve">
          <source>XMLEventFactory</source>
          <target state="translated">XMLEventFactory</target>
        </trans-unit>
        <trans-unit id="ca8754cd4c8479dc40f23bf33ff16ce5f8f2a63c" translate="yes" xml:space="preserve">
          <source>XMLEventReader</source>
          <target state="translated">XMLEventReader</target>
        </trans-unit>
        <trans-unit id="a6bd236e59bf0c9e937cbbb39989daa6071fb5ff" translate="yes" xml:space="preserve">
          <source>XMLEventWriter</source>
          <target state="translated">XMLEventWriter</target>
        </trans-unit>
        <trans-unit id="756afa3ac992da063a716e034e072d45e7047360" translate="yes" xml:space="preserve">
          <source>XMLFilter</source>
          <target state="translated">XMLFilter</target>
        </trans-unit>
        <trans-unit id="1baaf2b89ee4dced5038b095e86ea8db27468c2a" translate="yes" xml:space="preserve">
          <source>XMLFilterImpl</source>
          <target state="translated">XMLFilterImpl</target>
        </trans-unit>
        <trans-unit id="e5c839cc623a080310564891d481750aa0a39ecf" translate="yes" xml:space="preserve">
          <source>XMLFormatter</source>
          <target state="translated">XMLFormatter</target>
        </trans-unit>
        <trans-unit id="a039ebc562d56d49db5d31a56a8c1fdc2765dc74" translate="yes" xml:space="preserve">
          <source>XMLFormatter.format()</source>
          <target state="translated">XMLFormatter.format()</target>
        </trans-unit>
        <trans-unit id="e3b3e73f98ee02b3225ff83d01e599ac2f3faf04" translate="yes" xml:space="preserve">
          <source>XMLFormatter.getHead()</source>
          <target state="translated">XMLFormatter.getHead()</target>
        </trans-unit>
        <trans-unit id="4b1cff21015e82acd48bc7fcb02887a4a447be90" translate="yes" xml:space="preserve">
          <source>XMLFormatter.getTail()</source>
          <target state="translated">XMLFormatter.getTail()</target>
        </trans-unit>
        <trans-unit id="699f935b8595cc485444ae0debee2b81fb24a924" translate="yes" xml:space="preserve">
          <source>XMLGregorianCalendar</source>
          <target state="translated">XMLGregorianCalendar</target>
        </trans-unit>
        <trans-unit id="80732a153f3ee7946ed2b9803bbd1034144c8d17" translate="yes" xml:space="preserve">
          <source>XMLInputFactory</source>
          <target state="translated">XMLInputFactory</target>
        </trans-unit>
        <trans-unit id="f11888f2c053221b99ac778a2a174b3006ebfefc" translate="yes" xml:space="preserve">
          <source>XMLNS</source>
          <target state="translated">XMLNS</target>
        </trans-unit>
        <trans-unit id="723c026a8a07035476f8d6140d074ac42f2e0bdc" translate="yes" xml:space="preserve">
          <source>XMLNS_ATTRIBUTE</source>
          <target state="translated">XMLNS_ATTRIBUTE</target>
        </trans-unit>
        <trans-unit id="9f059b49a6f0179285131e7343a373510fbaab55" translate="yes" xml:space="preserve">
          <source>XMLNS_ATTRIBUTE_NS_URI</source>
          <target state="translated">XMLNS_ATTRIBUTE_NS_URI</target>
        </trans-unit>
        <trans-unit id="e1a38ac6761fc4205665b2e07f63f3924a4fe3c1" translate="yes" xml:space="preserve">
          <source>XMLObject</source>
          <target state="translated">XMLObject</target>
        </trans-unit>
        <trans-unit id="24c2493b1c3c8e07552a398158c9a7eeb430f3f7" translate="yes" xml:space="preserve">
          <source>XMLOutputFactory</source>
          <target state="translated">XMLOutputFactory</target>
        </trans-unit>
        <trans-unit id="717ed3e5cdb8aee24386fbd8f56ff9496b2faec8" translate="yes" xml:space="preserve">
          <source>XMLParseException</source>
          <target state="translated">XMLParseException</target>
        </trans-unit>
        <trans-unit id="482bdc24f6af5a40a01e6c07554b2e716ffcfd71" translate="yes" xml:space="preserve">
          <source>XMLReader</source>
          <target state="translated">XMLReader</target>
        </trans-unit>
        <trans-unit id="2b47daff4d1db379c9c748bee990d4af67131e94" translate="yes" xml:space="preserve">
          <source>XMLReader implementations are not required to support this information, and it is not part of core-only SAX2 distributions.</source>
          <target state="translated">XMLReader 구현은이 정보를 지원하는 데 필요하지 않으며 코어 전용 SAX2 배포의 일부가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="afc5cf556e79fc962ec3f2a12f4f5acc66d6c09f" translate="yes" xml:space="preserve">
          <source>XMLReader is the interface that an XML parser's SAX2 driver must implement. This interface allows an application to set and query features and properties in the parser, to register event handlers for document processing, and to initiate a document parse.</source>
          <target state="translated">XMLReader는 XML 파서의 SAX2 드라이버가 구현해야하는 인터페이스입니다. 이 인터페이스를 사용하면 응용 프로그램이 파서의 기능과 속성을 설정 및 쿼리하고, 문서 처리를위한 이벤트 처리기를 등록하고, 문서 구문 분석을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab671c8ee826219f27dcd37e61005bbcc0aba19e" translate="yes" xml:space="preserve">
          <source>XMLReaderAdapter</source>
          <target state="translated">XMLReaderAdapter</target>
        </trans-unit>
        <trans-unit id="d4738ed2e875092aa4ad02a89ab28c8981782219" translate="yes" xml:space="preserve">
          <source>XMLReaderFactory</source>
          <target state="translated">XMLReaderFactory</target>
        </trans-unit>
        <trans-unit id="9b6204c0aa66fdc83a78face6bafe7b40b3fea55" translate="yes" xml:space="preserve">
          <source>XMLReaders are not required to recognize any specific property names, though an initial core set is documented for SAX2.</source>
          <target state="translated">SAX2에 대한 초기 코어 세트가 문서화되어 있지만 XMLReader는 특정 속성 이름을 인식 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="90abd281e3b0a629bcd5ae73a1c7d53e73fe3c0d" translate="yes" xml:space="preserve">
          <source>XMLReaders are not required to recognize setting any specific property names, though a core set is defined by SAX2.</source>
          <target state="translated">핵심 집합은 SAX2에 의해 정의되지만 XMLReader는 특정 속성 이름 설정을 인식 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="6ee3310edc84e31bc9d1fa94d078999320355ca3" translate="yes" xml:space="preserve">
          <source>XMLReporter</source>
          <target state="translated">XMLReporter</target>
        </trans-unit>
        <trans-unit id="40b7123e115b720658ae51caa2a6c68b09fd2b1c" translate="yes" xml:space="preserve">
          <source>XMLResolver</source>
          <target state="translated">XMLResolver</target>
        </trans-unit>
        <trans-unit id="434b316146f9cca5aa178e1f569100905f04c60a" translate="yes" xml:space="preserve">
          <source>XMLSignContext</source>
          <target state="translated">XMLSignContext</target>
        </trans-unit>
        <trans-unit id="7f3a1ed1a226b3e12347b7d19ac9dc208b14b357" translate="yes" xml:space="preserve">
          <source>XMLSignature</source>
          <target state="translated">XMLSignature</target>
        </trans-unit>
        <trans-unit id="de399bf75c75eee21cde01e10fe534e0ea1ceff8" translate="yes" xml:space="preserve">
          <source>XMLSignature.SignatureValue</source>
          <target state="translated">XMLSignature.SignatureValue</target>
        </trans-unit>
        <trans-unit id="c965f80af90681fdbc0d8b91bc35c673ed6d9703" translate="yes" xml:space="preserve">
          <source>XMLSignatureException</source>
          <target state="translated">XMLSignatureException</target>
        </trans-unit>
        <trans-unit id="9c0648aefa6b4e1c5084e4dad0fc791fcb753dce" translate="yes" xml:space="preserve">
          <source>XMLSignatureFactory</source>
          <target state="translated">XMLSignatureFactory</target>
        </trans-unit>
        <trans-unit id="a87d0ec4e92c40095a35ba3836a953e935e63507" translate="yes" xml:space="preserve">
          <source>XMLSignatureFactory Type</source>
          <target state="translated">XMLSignatureFactory 유형</target>
        </trans-unit>
        <trans-unit id="5fcd7a2a1f5c13dc491997a0d72361499b54946f" translate="yes" xml:space="preserve">
          <source>XMLStreamConstants</source>
          <target state="translated">XMLStreamConstants</target>
        </trans-unit>
        <trans-unit id="142d43abec8bfa304be483bd98902c6e1da860d6" translate="yes" xml:space="preserve">
          <source>XMLStreamException</source>
          <target state="translated">XMLStreamException</target>
        </trans-unit>
        <trans-unit id="6a990bbe279ecdd248424e39c2a8a0a93dd5a40d" translate="yes" xml:space="preserve">
          <source>XMLStreamException may be thrown if there are any XML errors in the underlying source. The &quot;targetStart&quot; argument must be greater than or equal to 0 and less than the length of &quot;target&quot;, Length must be greater than 0 and &quot;targetStart + length&quot; must be less than or equal to length of &quot;target&quot;.</source>
          <target state="translated">기본 소스에 XML 오류가있는 경우 XMLStreamException이 발생할 수 있습니다. &quot;targetStart&quot;인수는 0보다 크거나 같고 &quot;target&quot;의 길이보다 작아야합니다. 길이는 0보다 커야하며 &quot;targetStart + length&quot;는 &quot;target&quot;의 길이보다 작거나 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="c87060d7f80f8b78f38bddbcd9632334ec113e3f" translate="yes" xml:space="preserve">
          <source>XMLStreamReader</source>
          <target state="translated">XMLStreamReader</target>
        </trans-unit>
        <trans-unit id="001716e737562369ea8e2085b7ace8e536d0f29d" translate="yes" xml:space="preserve">
          <source>XMLStreamWriter</source>
          <target state="translated">XMLStreamWriter</target>
        </trans-unit>
        <trans-unit id="b9850c7ead51d72999d3a131c724b1b3ed2d7965" translate="yes" xml:space="preserve">
          <source>XMLStructure</source>
          <target state="translated">XMLStructure</target>
        </trans-unit>
        <trans-unit id="c66cceb7c4dbd931ef7d4f78cb040e156b6c3b28" translate="yes" xml:space="preserve">
          <source>XMLValidateContext</source>
          <target state="translated">XMLValidateContext</target>
        </trans-unit>
        <trans-unit id="ead2258f580e25fd077359b95cb3d6f0e144aa35" translate="yes" xml:space="preserve">
          <source>XML_DTD_NS_URI</source>
          <target state="translated">XML_DTD_NS_URI</target>
        </trans-unit>
        <trans-unit id="6172a7ac4784555f74cc428367c1ebda670747cd" translate="yes" xml:space="preserve">
          <source>XML_NS_PREFIX</source>
          <target state="translated">XML_NS_PREFIX</target>
        </trans-unit>
        <trans-unit id="df9053fc149e41434149c0b7b456675c7771c1e8" translate="yes" xml:space="preserve">
          <source>XML_NS_URI</source>
          <target state="translated">XML_NS_URI</target>
        </trans-unit>
        <trans-unit id="04e41391d608ebb7cc129b9f95ede0ddc5173b69" translate="yes" xml:space="preserve">
          <source>XOR</source>
          <target state="translated">XOR</target>
        </trans-unit>
        <trans-unit id="5486dec50e8f159753d8b4454ce2fa48367dd21e" translate="yes" xml:space="preserve">
          <source>XPATH</source>
          <target state="translated">XPATH</target>
        </trans-unit>
        <trans-unit id="63f717532a01da53458e3a87342ac7a743a4a386" translate="yes" xml:space="preserve">
          <source>XPATH2</source>
          <target state="translated">XPATH2</target>
        </trans-unit>
        <trans-unit id="0a3d7ea26ec76d93907265c923a9954480d5facb" translate="yes" xml:space="preserve">
          <source>XPath</source>
          <target state="translated">XPath</target>
        </trans-unit>
        <trans-unit id="d834b1dfb3ef80195c098c2eecf67e1e980c952f" translate="yes" xml:space="preserve">
          <source>XPath constants.</source>
          <target state="translated">XPath 상수.</target>
        </trans-unit>
        <trans-unit id="51f9fe9196a6f466e6545a346fdebfa3a64c40c2" translate="yes" xml:space="preserve">
          <source>XPath functions are resolved by name and arity. The resolver is not needed for XPath built-in functions and the resolver &lt;strong&gt;&lt;em&gt;cannot&lt;/em&gt;&lt;/strong&gt; be used to override those functions.</source>
          <target state="translated">XPath 함수는 이름과 배열로 확인됩니다. 리졸버는 XPath 내장 함수에 필요하지 않으며 리졸버 &lt;strong&gt;&lt;em&gt;를&lt;/em&gt;&lt;/strong&gt; 사용하여 해당 함수를 재정의 &lt;strong&gt;&lt;em&gt;할 수 없습니다&lt;/em&gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="27722eadccfbc7ae784b07f19589e064d368081b" translate="yes" xml:space="preserve">
          <source>XPath location paths may be relative to a particular node in the document, known as the &lt;code&gt;context&lt;/code&gt;. A context consists of:</source>
          <target state="translated">XPath 위치 경로는 &lt;code&gt;context&lt;/code&gt; 라고하는 문서의 특정 노드에 상대적 일 수 있습니다 . 컨텍스트는 다음으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="53f89cf75044b89483b32cd78adc2f7e4cb13010" translate="yes" xml:space="preserve">
          <source>XPath started in life in 1999 as a supplement to the XSLT and XPointer languages, but has more recently become popular as a stand-alone language, as a single XPath expression can be used to replace many lines of DOM API code.</source>
          <target state="translated">XPath는 1999 년 XSLT 및 XPointer 언어를 보완하기 위해 시작되었지만 단일 XPath 표현식을 사용하여 여러 줄의 DOM API 코드를 대체 할 수 있기 때문에 최근에는 독립형 언어로 인기를 얻고 있습니다.</target>
        </trans-unit>
        <trans-unit id="88d7f936b1c25f205fb194cbd4185c7907087f91" translate="yes" xml:space="preserve">
          <source>XPathConstants</source>
          <target state="translated">XPathConstants</target>
        </trans-unit>
        <trans-unit id="35b2191d06e5c72cd6dc1f3f594e5febd26cd505" translate="yes" xml:space="preserve">
          <source>XPathEvaluationResult</source>
          <target state="translated">XPathEvaluationResult</target>
        </trans-unit>
        <trans-unit id="bee7ab14735addf784234491f80237575ce6968a" translate="yes" xml:space="preserve">
          <source>XPathEvaluationResult.XPathResultType</source>
          <target state="translated">XPathEvaluationResult.XPathResultType</target>
        </trans-unit>
        <trans-unit id="88d74bcf6b966615b28c3f3ac46e1dc1e9925f43" translate="yes" xml:space="preserve">
          <source>XPathException</source>
          <target state="translated">XPathException</target>
        </trans-unit>
        <trans-unit id="c4afd3f752904891bcc2fb225ebaf2cc76d4aa45" translate="yes" xml:space="preserve">
          <source>XPathExpression</source>
          <target state="translated">XPathExpression</target>
        </trans-unit>
        <trans-unit id="8e5c71b9e002430b167e9c8daf147b81c62aed55" translate="yes" xml:space="preserve">
          <source>XPathExpressionException</source>
          <target state="translated">XPathExpressionException</target>
        </trans-unit>
        <trans-unit id="663f4c74efb1dbdfca6aca530e9713d4c520509a" translate="yes" xml:space="preserve">
          <source>XPathFactory</source>
          <target state="translated">XPathFactory</target>
        </trans-unit>
        <trans-unit id="5554fe90f3517c2e2a95e788792d5ae3fc4dc0d1" translate="yes" xml:space="preserve">
          <source>XPathFactoryConfigurationException</source>
          <target state="translated">XPathFactoryConfigurationException</target>
        </trans-unit>
        <trans-unit id="7bc25a52f64c820bd6a854f7d498dbe16fd51964" translate="yes" xml:space="preserve">
          <source>XPathFilter2ParameterSpec</source>
          <target state="translated">XPathFilter2ParameterSpec</target>
        </trans-unit>
        <trans-unit id="171a36f6d2be430505562358b771dd59fd6f345b" translate="yes" xml:space="preserve">
          <source>XPathFilterParameterSpec</source>
          <target state="translated">XPathFilterParameterSpec</target>
        </trans-unit>
        <trans-unit id="8ee49efdde087e2af61cc4665aa1cbec378cccc7" translate="yes" xml:space="preserve">
          <source>XPathFunction</source>
          <target state="translated">XPathFunction</target>
        </trans-unit>
        <trans-unit id="855131f5b421f9964be4e0f028fa5ae1387a589d" translate="yes" xml:space="preserve">
          <source>XPathFunctionException</source>
          <target state="translated">XPathFunctionException</target>
        </trans-unit>
        <trans-unit id="8be7d1d2f97d8e15004db1369fa8bc4fc150fe94" translate="yes" xml:space="preserve">
          <source>XPathFunctionResolver</source>
          <target state="translated">XPathFunctionResolver</target>
        </trans-unit>
        <trans-unit id="3e02c01a87f73f2c3ec1db3568a59c1d229f6823" translate="yes" xml:space="preserve">
          <source>XPathNodes</source>
          <target state="translated">XPathNodes</target>
        </trans-unit>
        <trans-unit id="de03fd76bf989edf9fa31dbddf124ba907963161" translate="yes" xml:space="preserve">
          <source>XPathNodes represents a set of nodes selected by a location path as specified in &lt;a href=&quot;http://www.w3.org/TR/xpath/#node-sets&quot;&gt;XML Path Language (XPath) Version 1.0, 3.3 Node-sets&lt;/a&gt;.</source>
          <target state="translated">XPathNodes는 &lt;a href=&quot;http://www.w3.org/TR/xpath/#node-sets&quot;&gt;XPath (XML Path Language) 버전 1.0, 3.3 노드 집합에&lt;/a&gt; 지정된 위치 경로에 의해 선택된 노드 집합을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="d06549f8a3f5eceb23f32659028900898d5137b9" translate="yes" xml:space="preserve">
          <source>XPathResultType represents possible return types of an XPath evaluation.</source>
          <target state="translated">XPathResultType은 XPath 평가의 가능한 반환 유형을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b757b5be6814678ec053603d43c6bf8fabaed1eb" translate="yes" xml:space="preserve">
          <source>XPathResultType represents possible return types of an XPath evaluation. Provided as an enum type, it allows the use of switch statement. At the same time, a mapping is provided between the original QName types in &lt;a href=&quot;xpathconstants&quot;&gt;&lt;code&gt;XPathConstants&lt;/code&gt;&lt;/a&gt; and class types used in the generic methods.</source>
          <target state="translated">XPathResultType은 XPath 평가의 가능한 반환 유형을 나타냅니다. 열거 형으로 제공되며 switch 문을 사용할 수 있습니다. 동시에 &lt;a href=&quot;xpathconstants&quot;&gt; &lt;code&gt;XPathConstants&lt;/code&gt; &lt;/a&gt; 의 원래 QName 유형 과 일반 메소드에서 사용되는 클래스 유형 간에 매핑이 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="e98959fb0d6d2414e017d784b8a8b66f4be1e955" translate="yes" xml:space="preserve">
          <source>XPathType</source>
          <target state="translated">XPathType</target>
        </trans-unit>
        <trans-unit id="1c93d83591af5944172554136a6ab9f9217c8c9b" translate="yes" xml:space="preserve">
          <source>XPathType.Filter</source>
          <target state="translated">XPathType.Filter</target>
        </trans-unit>
        <trans-unit id="185d443cafbead989092321de639087bf01d4c60" translate="yes" xml:space="preserve">
          <source>XPathVariableResolver</source>
          <target state="translated">XPathVariableResolver</target>
        </trans-unit>
        <trans-unit id="12cb3e83e71ba8183867d661dde304ccaf73db76" translate="yes" xml:space="preserve">
          <source>XQuery 1.0 and XPath 2.0 Data Model</source>
          <target state="translated">XQuery 1.0 및 XPath 2.0 데이터 모델</target>
        </trans-unit>
        <trans-unit id="f18a740823d7de1e09d177b4a2f56879e78fc2e0" translate="yes" xml:space="preserve">
          <source>XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration</source>
          <target state="translated">XQuery 1.0 및 XPath 2.0 데이터 모델, xdt : dayTimeDuration</target>
        </trans-unit>
        <trans-unit id="d00c9ea04283e5c718c51d8eff3b9cca250d2bca" translate="yes" xml:space="preserve">
          <source>XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration</source>
          <target state="translated">XQuery 1.0 및 XPath 2.0 데이터 모델, xdt : yearMonthDuration</target>
        </trans-unit>
        <trans-unit id="d2afe3bf65e261b8efabda66f097db763ead5db7" translate="yes" xml:space="preserve">
          <source>XQuery and XPath/Java Type Mappings</source>
          <target state="translated">XQuery 및 XPath / Java 유형 매핑</target>
        </trans-unit>
        <trans-unit id="34a2a225fbc1c17ce270e5b51211871763fe26ef" translate="yes" xml:space="preserve">
          <source>XSD import</source>
          <target state="translated">XSD 가져 오기</target>
        </trans-unit>
        <trans-unit id="8eec355c002e6cc8679c294569bda06f547b7b01" translate="yes" xml:space="preserve">
          <source>XSD include</source>
          <target state="translated">XSD 포함</target>
        </trans-unit>
        <trans-unit id="ba10837d46c4d6425ac6d43ffe190937d5b13e86" translate="yes" xml:space="preserve">
          <source>XSL Transformations (XSLT) Version 1.0</source>
          <target state="translated">XSL 변환 (XSLT) 버전 1.0</target>
        </trans-unit>
        <trans-unit id="70fa46064030e6c937ebd2bdc0199d202f19f66c" translate="yes" xml:space="preserve">
          <source>XSL document function</source>
          <target state="translated">XSL 문서 기능</target>
        </trans-unit>
        <trans-unit id="f9efc49b27216f4ada344ea8e052b9bb771158be" translate="yes" xml:space="preserve">
          <source>XSL import and include</source>
          <target state="translated">XSL 가져 오기 및 포함</target>
        </trans-unit>
        <trans-unit id="92fa36017c9f64e1546010aa20719979e24e7005" translate="yes" xml:space="preserve">
          <source>XSLT</source>
          <target state="translated">XSLT</target>
        </trans-unit>
        <trans-unit id="a634c47477abe82c5b08106d1396765f452b1362" translate="yes" xml:space="preserve">
          <source>XSLTTransformParameterSpec</source>
          <target state="translated">XSLTTransformParameterSpec</target>
        </trans-unit>
        <trans-unit id="a9674b19f8c56f785c91a555d0a144522bb318e6" translate="yes" xml:space="preserve">
          <source>XXX</source>
          <target state="translated">XXX</target>
        </trans-unit>
        <trans-unit id="034f1965ccdbdf9e642feeb9858da5096b6d1a9a" translate="yes" xml:space="preserve">
          <source>XY</source>
          <target state="translated">XY</target>
        </trans-unit>
        <trans-unit id="162845f82d3a7934153ea369016f0074c50e58a7" translate="yes" xml:space="preserve">
          <source>X_AXIS</source>
          <target state="translated">X_AXIS</target>
        </trans-unit>
        <trans-unit id="b2da4bb2f54c2b969e142030672f3f85decf1b84" translate="yes" xml:space="preserve">
          <source>Xid</source>
          <target state="translated">Xid</target>
        </trans-unit>
        <trans-unit id="cd393abf89836f667eec269e4b63be33fcf53541" translate="yes" xml:space="preserve">
          <source>XmlReader</source>
          <target state="translated">XmlReader</target>
        </trans-unit>
        <trans-unit id="bc386f81dca3890c4b517e5cf0961942dcc71721" translate="yes" xml:space="preserve">
          <source>XmlWriter</source>
          <target state="translated">XmlWriter</target>
        </trans-unit>
        <trans-unit id="25744db574969e117a90b833b80467c34acec98d" translate="yes" xml:space="preserve">
          <source>Xor</source>
          <target state="translated">Xor</target>
        </trans-unit>
        <trans-unit id="23eb4d3f4155395a74e9d534f97ff4c1908f5aac" translate="yes" xml:space="preserve">
          <source>Y</source>
          <target state="translated">Y</target>
        </trans-unit>
        <trans-unit id="35bdba48809dd8ee1be57f57e1d94db588181ee6" translate="yes" xml:space="preserve">
          <source>Y dimension (&amp;micro;m).</source>
          <target state="translated">Y 치수 (&amp;micro;m).</target>
        </trans-unit>
        <trans-unit id="197c0e6c46ded20dbfcbd8db7336bd6207a65bfa" translate="yes" xml:space="preserve">
          <source>Y dimension.</source>
          <target state="translated">Y 치수.</target>
        </trans-unit>
        <trans-unit id="c0f0cadca077341656948de09d8670971ee5641b" translate="yes" xml:space="preserve">
          <source>YEAR</source>
          <target state="translated">YEAR</target>
        </trans-unit>
        <trans-unit id="481a9c6d2ca9c7c5eb5060dd8cc2b1ce0410ef07" translate="yes" xml:space="preserve">
          <source>YEARS</source>
          <target state="translated">YEARS</target>
        </trans-unit>
        <trans-unit id="ee6faa4ae405a7a1b62ae698b0ca5475ea369f3a" translate="yes" xml:space="preserve">
          <source>YEAR_FIELD</source>
          <target state="translated">YEAR_FIELD</target>
        </trans-unit>
        <trans-unit id="c0da8de3b27f7ccbab0f57da97509e79821c305c" translate="yes" xml:space="preserve">
          <source>YEAR_OF_ERA</source>
          <target state="translated">YEAR_OF_ERA</target>
        </trans-unit>
        <trans-unit id="f83a0e54478505513704d0569e61871e8b8b37a7" translate="yes" xml:space="preserve">
          <source>YELLOW</source>
          <target state="translated">YELLOW</target>
        </trans-unit>
        <trans-unit id="8fff039853f5c2bbb8a28d056b579c7dcb7d137f" translate="yes" xml:space="preserve">
          <source>YES</source>
          <target state="translated">YES</target>
        </trans-unit>
        <trans-unit id="44d3e5afd54f055fe0598586070a058b437425d5" translate="yes" xml:space="preserve">
          <source>YES --- if the attribute can include NULLs</source>
          <target state="translated">예 --- 속성에 NULL이 포함될 수있는 경우</target>
        </trans-unit>
        <trans-unit id="a0757737d5ef6c244b669417be56d518518d5461" translate="yes" xml:space="preserve">
          <source>YES --- if the column can include NULLs</source>
          <target state="translated">예 --- 열에 NULL이 포함될 수있는 경우</target>
        </trans-unit>
        <trans-unit id="11d3a66255a17ff6b4547692ca3e210e231d881f" translate="yes" xml:space="preserve">
          <source>YES --- if the column is auto incremented</source>
          <target state="translated">예 --- 열이 자동 증가하는 경우</target>
        </trans-unit>
        <trans-unit id="d2fb94e2626bbe86f1583344f0b0714e24f9b539" translate="yes" xml:space="preserve">
          <source>YES --- if the parameter or column can include NULLs</source>
          <target state="translated">예 --- 매개 변수 또는 열에 NULL이 포함될 수있는 경우</target>
        </trans-unit>
        <trans-unit id="07c64eb3dc71f772622674a835dc01b256844295" translate="yes" xml:space="preserve">
          <source>YES --- if this a generated column</source>
          <target state="translated">예 --- 생성 된 열인 경우</target>
        </trans-unit>
        <trans-unit id="1460c50dbf37743a7b91f716c6256757ffa6ddf0" translate="yes" xml:space="preserve">
          <source>YES option.</source>
          <target state="translated">예 옵션.</target>
        </trans-unit>
        <trans-unit id="10bba4581ad2ecbb167ed61d19b1a97b5ea285fa" translate="yes" xml:space="preserve">
          <source>YES/NO confirmation option.</source>
          <target state="translated">예 / 아니요 확인 옵션.</target>
        </trans-unit>
        <trans-unit id="dd876ed87c4dbda98d1d693738316baea6ebf6ed" translate="yes" xml:space="preserve">
          <source>YES/NO/CANCEL confirmation confirmation option.</source>
          <target state="translated">예 / 아니오 / 취소 확인 확인 옵션.</target>
        </trans-unit>
        <trans-unit id="88e8d712531b4490eaa90e1c3e0a19fd89afd799" translate="yes" xml:space="preserve">
          <source>YES_NO_CANCEL_OPTION</source>
          <target state="translated">YES_NO_CANCEL_OPTION</target>
        </trans-unit>
        <trans-unit id="1dd627d7e80f48dcd10d65d614b73edf4f2cace3" translate="yes" xml:space="preserve">
          <source>YES_NO_OPTION</source>
          <target state="translated">YES_NO_OPTION</target>
        </trans-unit>
        <trans-unit id="59cfd90587fba9a6c585853d73edda70ea157e07" translate="yes" xml:space="preserve">
          <source>YES_OPTION</source>
          <target state="translated">YES_OPTION</target>
        </trans-unit>
        <trans-unit id="fd3b193140207822a8a8c2f74eebf1ede5e65099" translate="yes" xml:space="preserve">
          <source>YI</source>
          <target state="translated">YI</target>
        </trans-unit>
        <trans-unit id="bed8ca31d0b472a65f6e1d662ee48d90ad89fa19" translate="yes" xml:space="preserve">
          <source>YIJING_HEXAGRAM_SYMBOLS</source>
          <target state="translated">YIJING_HEXAGRAM_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="df9a01f768c82ef2babf65461322ef9232860fe2" translate="yes" xml:space="preserve">
          <source>YI_RADICALS</source>
          <target state="translated">YI_RADICALS</target>
        </trans-unit>
        <trans-unit id="be1f730bde41e9c9710fc1f638814aa9680fb921" translate="yes" xml:space="preserve">
          <source>YI_SYLLABLES</source>
          <target state="translated">YI_SYLLABLES</target>
        </trans-unit>
        <trans-unit id="33d261c96ac4fb28f870cad1c01268ca2c9573b0" translate="yes" xml:space="preserve">
          <source>YOU_1</source>
          <target state="translated">YOU_1</target>
        </trans-unit>
        <trans-unit id="79b203b8ee487310520a52d64e14badf5e2812be" translate="yes" xml:space="preserve">
          <source>YOU_2</source>
          <target state="translated">YOU_2</target>
        </trans-unit>
        <trans-unit id="dd57beb988dd68337c59c50795a68bba79a9af98" translate="yes" xml:space="preserve">
          <source>YOU_3</source>
          <target state="translated">YOU_3</target>
        </trans-unit>
        <trans-unit id="8ca72c59050ff822b8d10eaaccfba2870187e691" translate="yes" xml:space="preserve">
          <source>YOU_4</source>
          <target state="translated">YOU_4</target>
        </trans-unit>
        <trans-unit id="c79c32ce1f0a102fcd397133096af5b5e6fbc976" translate="yes" xml:space="preserve">
          <source>YOU_5</source>
          <target state="translated">YOU_5</target>
        </trans-unit>
        <trans-unit id="9c91c0234b16c7b373058a831b9a1bfc2b79644d" translate="yes" xml:space="preserve">
          <source>YOU_6</source>
          <target state="translated">YOU_6</target>
        </trans-unit>
        <trans-unit id="07b98ecd0978b48bc442a9326138d79b9e6daa75" translate="yes" xml:space="preserve">
          <source>YOU_7</source>
          <target state="translated">YOU_7</target>
        </trans-unit>
        <trans-unit id="bd6ecc4fcb538eb128366da36b9bb86ac76a964f" translate="yes" xml:space="preserve">
          <source>Y_AXIS</source>
          <target state="translated">Y_AXIS</target>
        </trans-unit>
        <trans-unit id="9d60c6af9273fd5bbf460e5c83561420337927c7" translate="yes" xml:space="preserve">
          <source>Y_CB_CR_POSITIONING_CENTERED</source>
          <target state="translated">Y_CB_CR_POSITIONING_CENTERED</target>
        </trans-unit>
        <trans-unit id="be70f8b66c67a11ce984fc2126ee691ed145941c" translate="yes" xml:space="preserve">
          <source>Y_CB_CR_POSITIONING_COSITED</source>
          <target state="translated">Y_CB_CR_POSITIONING_COSITED</target>
        </trans-unit>
        <trans-unit id="879e32326c5217968ac8e3a14e4a8a5214957264" translate="yes" xml:space="preserve">
          <source>Year</source>
          <target state="translated">Year</target>
        </trans-unit>
        <trans-unit id="2425a1b731c0fc16f4f484a3726259f85bd84761" translate="yes" xml:space="preserve">
          <source>Year and Week</source>
          <target state="translated">연도 및 주</target>
        </trans-unit>
        <trans-unit id="6b6f0a28b3379d20cc3fd94135f8357b025abaf3" translate="yes" xml:space="preserve">
          <source>Year and day of year</source>
          <target state="translated">년과 일</target>
        </trans-unit>
        <trans-unit id="3c668803002a51e1828c01813a95c047da4a393b" translate="yes" xml:space="preserve">
          <source>Year, formatted as at least four digits with leading zeros as necessary, e.g. &lt;code&gt;0092&lt;/code&gt; equals &lt;code&gt;92&lt;/code&gt; CE for the Gregorian calendar.</source>
          <target state="translated">연도 (필요한 경우 앞에 0이있는 최소 4 자리 숫자 형식) (예 : &lt;code&gt;0092&lt;/code&gt; 는 그레고리력의 경우 &lt;code&gt;92&lt;/code&gt; CE 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ada735362b657cb4f9cb93fc7bdd6158fdb42020" translate="yes" xml:space="preserve">
          <source>Year, formatted to at least four digits with leading zeros as necessary, e.g. &lt;code&gt;0092&lt;/code&gt; equals &lt;code&gt;92&lt;/code&gt; CE for the Gregorian calendar.</source>
          <target state="translated">연도 (필요한 경우 앞에 0이있는 최소 4 자리 숫자 형식) (예 : &lt;code&gt;0092&lt;/code&gt; 는 그레고리력의 경우 &lt;code&gt;92&lt;/code&gt; CE 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ee3207f1ce23ca6eea879703c0ab4fba1b1f79ad" translate="yes" xml:space="preserve">
          <source>Year.adjustInto()</source>
          <target state="translated">Year.adjustInto()</target>
        </trans-unit>
        <trans-unit id="96c72d3d53b7685973f9dea6c3929d95df70d1ee" translate="yes" xml:space="preserve">
          <source>Year.atDay()</source>
          <target state="translated">Year.atDay()</target>
        </trans-unit>
        <trans-unit id="32eea0332b2d9b51d40741560386ed4a446183d8" translate="yes" xml:space="preserve">
          <source>Year.atMonth()</source>
          <target state="translated">Year.atMonth()</target>
        </trans-unit>
        <trans-unit id="429aa885347633adc81e9c8b39d179a25d169cd4" translate="yes" xml:space="preserve">
          <source>Year.atMonthDay()</source>
          <target state="translated">Year.atMonthDay()</target>
        </trans-unit>
        <trans-unit id="998cdaa97867c371778fba766913f063950de27f" translate="yes" xml:space="preserve">
          <source>Year.compareTo()</source>
          <target state="translated">Year.compareTo()</target>
        </trans-unit>
        <trans-unit id="8422220c0cb0519d9c6a9f797869b789e9fe827b" translate="yes" xml:space="preserve">
          <source>Year.equals()</source>
          <target state="translated">Year.equals()</target>
        </trans-unit>
        <trans-unit id="c017f314dd3d7ed453e37afeb416f3b039fa30cd" translate="yes" xml:space="preserve">
          <source>Year.format()</source>
          <target state="translated">Year.format()</target>
        </trans-unit>
        <trans-unit id="a44c3e0e8fd882c67acaae463663ac129709c02f" translate="yes" xml:space="preserve">
          <source>Year.from()</source>
          <target state="translated">Year.from()</target>
        </trans-unit>
        <trans-unit id="dc2bb4671e98e1cfe270143d567ff37488602f86" translate="yes" xml:space="preserve">
          <source>Year.get()</source>
          <target state="translated">Year.get()</target>
        </trans-unit>
        <trans-unit id="caebffc8e9727509291079f8762ce833534563e7" translate="yes" xml:space="preserve">
          <source>Year.getLong()</source>
          <target state="translated">Year.getLong()</target>
        </trans-unit>
        <trans-unit id="8be36aca152867802d7bb05f4a7c4d0645889c29" translate="yes" xml:space="preserve">
          <source>Year.getValue()</source>
          <target state="translated">Year.getValue()</target>
        </trans-unit>
        <trans-unit id="f87cd1b717cde8d9a4680c192c1b9513a2e72805" translate="yes" xml:space="preserve">
          <source>Year.hashCode()</source>
          <target state="translated">Year.hashCode()</target>
        </trans-unit>
        <trans-unit id="b3586aa4a01f83504101fbb94acc3975ca86b43d" translate="yes" xml:space="preserve">
          <source>Year.isAfter()</source>
          <target state="translated">Year.isAfter()</target>
        </trans-unit>
        <trans-unit id="27ce683f554fc0d716c47628c034402b7455d4b3" translate="yes" xml:space="preserve">
          <source>Year.isBefore()</source>
          <target state="translated">Year.isBefore()</target>
        </trans-unit>
        <trans-unit id="f3f3ad569278782659ae4b3c503872050a6ca79e" translate="yes" xml:space="preserve">
          <source>Year.isLeap()</source>
          <target state="translated">Year.isLeap()</target>
        </trans-unit>
        <trans-unit id="5e48a6b2bd65eafe20f368427450a2e25022afe0" translate="yes" xml:space="preserve">
          <source>Year.isSupported()</source>
          <target state="translated">Year.isSupported()</target>
        </trans-unit>
        <trans-unit id="d77163b3b35badc75b1cc641233d37b2048eeda3" translate="yes" xml:space="preserve">
          <source>Year.isValidMonthDay()</source>
          <target state="translated">Year.isValidMonthDay()</target>
        </trans-unit>
        <trans-unit id="4859c673cd4cebb2592a00e98e7ac306aa8965e3" translate="yes" xml:space="preserve">
          <source>Year.length()</source>
          <target state="translated">Year.length()</target>
        </trans-unit>
        <trans-unit id="90b2e4fc33c7eb347a4f4ea531818e143a221055" translate="yes" xml:space="preserve">
          <source>Year.minus()</source>
          <target state="translated">Year.minus()</target>
        </trans-unit>
        <trans-unit id="646c4137064b5741521b34c33ff9c75ef02f7bcc" translate="yes" xml:space="preserve">
          <source>Year.minusYears()</source>
          <target state="translated">Year.minusYears()</target>
        </trans-unit>
        <trans-unit id="f0df5828d10b9bae6dce00c0585d3772c1328762" translate="yes" xml:space="preserve">
          <source>Year.now()</source>
          <target state="translated">Year.now()</target>
        </trans-unit>
        <trans-unit id="46e1899a497dc3397eb5a9abdfed28277e79ec1f" translate="yes" xml:space="preserve">
          <source>Year.of()</source>
          <target state="translated">Year.of()</target>
        </trans-unit>
        <trans-unit id="8e6af742228dc78e793d78cfef059b2a8177b625" translate="yes" xml:space="preserve">
          <source>Year.parse()</source>
          <target state="translated">Year.parse()</target>
        </trans-unit>
        <trans-unit id="e5ad8473c4e835cf30933d31cccaee4e731a1992" translate="yes" xml:space="preserve">
          <source>Year.plus()</source>
          <target state="translated">Year.plus()</target>
        </trans-unit>
        <trans-unit id="d6e7579a21dec5959d4138b28b8c58d676bd0e32" translate="yes" xml:space="preserve">
          <source>Year.plusYears()</source>
          <target state="translated">Year.plusYears()</target>
        </trans-unit>
        <trans-unit id="8b737b5839d913374612a156e91e04b5540df8bc" translate="yes" xml:space="preserve">
          <source>Year.query()</source>
          <target state="translated">Year.query()</target>
        </trans-unit>
        <trans-unit id="96a78d3f898b32d00befeee97851d8e6b9e5e668" translate="yes" xml:space="preserve">
          <source>Year.range()</source>
          <target state="translated">Year.range()</target>
        </trans-unit>
        <trans-unit id="1e5578d6c67168449bc9613be76c2cbd16739322" translate="yes" xml:space="preserve">
          <source>Year.toString()</source>
          <target state="translated">Year.toString()</target>
        </trans-unit>
        <trans-unit id="b7931414e50a772daf912fd9f1176db32e43b059" translate="yes" xml:space="preserve">
          <source>Year.until()</source>
          <target state="translated">Year.until()</target>
        </trans-unit>
        <trans-unit id="0885e8cb7a4b617c1b41099076dc2846f9253958" translate="yes" xml:space="preserve">
          <source>Year.with()</source>
          <target state="translated">Year.with()</target>
        </trans-unit>
        <trans-unit id="090853c1c8d1dd16abfe71622e6000d378f65d42" translate="yes" xml:space="preserve">
          <source>YearMonth</source>
          <target state="translated">YearMonth</target>
        </trans-unit>
        <trans-unit id="b4c9b5ec3f7cf57f135cd2647f256fd5d3e56416" translate="yes" xml:space="preserve">
          <source>YearMonth.adjustInto()</source>
          <target state="translated">YearMonth.adjustInto()</target>
        </trans-unit>
        <trans-unit id="fcd559201750b7053f8280a3ffdf29e695c8a93c" translate="yes" xml:space="preserve">
          <source>YearMonth.atDay()</source>
          <target state="translated">YearMonth.atDay()</target>
        </trans-unit>
        <trans-unit id="507bf2b05c45ad1b0053f39864bae80731db7d93" translate="yes" xml:space="preserve">
          <source>YearMonth.atEndOfMonth()</source>
          <target state="translated">YearMonth.atEndOfMonth()</target>
        </trans-unit>
        <trans-unit id="93f684084492654214f73b343109a96f4478b576" translate="yes" xml:space="preserve">
          <source>YearMonth.compareTo()</source>
          <target state="translated">YearMonth.compareTo()</target>
        </trans-unit>
        <trans-unit id="f0b1a9f4f68e8aa2a6d7401ce38c6475f23b9368" translate="yes" xml:space="preserve">
          <source>YearMonth.equals()</source>
          <target state="translated">YearMonth.equals()</target>
        </trans-unit>
        <trans-unit id="1ade7e2c1d38ff37ffde4a470822d7d9c28de185" translate="yes" xml:space="preserve">
          <source>YearMonth.format()</source>
          <target state="translated">YearMonth.format()</target>
        </trans-unit>
        <trans-unit id="008126496be7ac843b48464bd56e4e65b4af6cce" translate="yes" xml:space="preserve">
          <source>YearMonth.from()</source>
          <target state="translated">YearMonth.from()</target>
        </trans-unit>
        <trans-unit id="a433f98ebcd8ef075ce5eae4c5569d0d87302b4b" translate="yes" xml:space="preserve">
          <source>YearMonth.get()</source>
          <target state="translated">YearMonth.get()</target>
        </trans-unit>
        <trans-unit id="3cf59741761852172f99142aa35731aa775d3acf" translate="yes" xml:space="preserve">
          <source>YearMonth.getLong()</source>
          <target state="translated">YearMonth.getLong()</target>
        </trans-unit>
        <trans-unit id="ee7f2a8c047d6fb971d7cc4977d0e0eefd282181" translate="yes" xml:space="preserve">
          <source>YearMonth.getMonth()</source>
          <target state="translated">YearMonth.getMonth()</target>
        </trans-unit>
        <trans-unit id="3de224170437f7443bfa76cd3d0166d174571c03" translate="yes" xml:space="preserve">
          <source>YearMonth.getMonthValue()</source>
          <target state="translated">YearMonth.getMonthValue()</target>
        </trans-unit>
        <trans-unit id="f8fc678dd3f779cb60e9505a993ebef3a842b6ec" translate="yes" xml:space="preserve">
          <source>YearMonth.getYear()</source>
          <target state="translated">YearMonth.getYear()</target>
        </trans-unit>
        <trans-unit id="e8d3538572ffd27518d51a79d0eb9e9bec627d6a" translate="yes" xml:space="preserve">
          <source>YearMonth.hashCode()</source>
          <target state="translated">YearMonth.hashCode()</target>
        </trans-unit>
        <trans-unit id="7b51137728059234ded8f2514dafeaaff58533af" translate="yes" xml:space="preserve">
          <source>YearMonth.isAfter()</source>
          <target state="translated">YearMonth.isAfter()</target>
        </trans-unit>
        <trans-unit id="999f44648d9f9fd4bd8b94a015652fdd264f4594" translate="yes" xml:space="preserve">
          <source>YearMonth.isBefore()</source>
          <target state="translated">YearMonth.isBefore()</target>
        </trans-unit>
        <trans-unit id="4a948d3ae5a75bba80fa33b09690a3648a22f4d6" translate="yes" xml:space="preserve">
          <source>YearMonth.isLeapYear()</source>
          <target state="translated">YearMonth.isLeapYear()</target>
        </trans-unit>
        <trans-unit id="de9674e9d509a80294d6dfbc80425d80e6c93704" translate="yes" xml:space="preserve">
          <source>YearMonth.isSupported()</source>
          <target state="translated">YearMonth.isSupported()</target>
        </trans-unit>
        <trans-unit id="f3669778686a960f322f89aa65927ee9d5c5ce25" translate="yes" xml:space="preserve">
          <source>YearMonth.isValidDay()</source>
          <target state="translated">YearMonth.isValidDay()</target>
        </trans-unit>
        <trans-unit id="702781c042b1d4bf8f48c641eb1437aefbbe2eda" translate="yes" xml:space="preserve">
          <source>YearMonth.lengthOfMonth()</source>
          <target state="translated">YearMonth.lengthOfMonth()</target>
        </trans-unit>
        <trans-unit id="609ea1740dd8647b6021971b3cb069077863dcb9" translate="yes" xml:space="preserve">
          <source>YearMonth.lengthOfYear()</source>
          <target state="translated">YearMonth.lengthOfYear()</target>
        </trans-unit>
        <trans-unit id="0039752c8bcff1a2298275daf6037717a6fb5617" translate="yes" xml:space="preserve">
          <source>YearMonth.minus()</source>
          <target state="translated">YearMonth.minus()</target>
        </trans-unit>
        <trans-unit id="9902e21df5f7226c7e708e962bc572eb012caaa7" translate="yes" xml:space="preserve">
          <source>YearMonth.minusMonths()</source>
          <target state="translated">YearMonth.minusMonths()</target>
        </trans-unit>
        <trans-unit id="6acca7599e7c6c02fed7b69b6069ad641adebd4f" translate="yes" xml:space="preserve">
          <source>YearMonth.minusYears()</source>
          <target state="translated">YearMonth.minusYears()</target>
        </trans-unit>
        <trans-unit id="bd49f324e12f610915a279dd7a4111ff72d7b51e" translate="yes" xml:space="preserve">
          <source>YearMonth.now()</source>
          <target state="translated">YearMonth.now()</target>
        </trans-unit>
        <trans-unit id="90724086d54a8f265004f03a99e729885b784ab4" translate="yes" xml:space="preserve">
          <source>YearMonth.of()</source>
          <target state="translated">YearMonth.of()</target>
        </trans-unit>
        <trans-unit id="8fcb295095a101476aa4bce6d91eee5f57267898" translate="yes" xml:space="preserve">
          <source>YearMonth.parse()</source>
          <target state="translated">YearMonth.parse()</target>
        </trans-unit>
        <trans-unit id="ed8f8c4dac862c576e3fcc3cda25cbe7393ab334" translate="yes" xml:space="preserve">
          <source>YearMonth.plus()</source>
          <target state="translated">YearMonth.plus()</target>
        </trans-unit>
        <trans-unit id="0e9148a4a016555401ed1b5b417ef9e9a113b140" translate="yes" xml:space="preserve">
          <source>YearMonth.plusMonths()</source>
          <target state="translated">YearMonth.plusMonths()</target>
        </trans-unit>
        <trans-unit id="000ac54693328177768b2d08a0082c3acb71d227" translate="yes" xml:space="preserve">
          <source>YearMonth.plusYears()</source>
          <target state="translated">YearMonth.plusYears()</target>
        </trans-unit>
        <trans-unit id="da357fbe587ef1706a92bd9acb5233fd76e20233" translate="yes" xml:space="preserve">
          <source>YearMonth.query()</source>
          <target state="translated">YearMonth.query()</target>
        </trans-unit>
        <trans-unit id="61c4cb60ed359833e2d29cda669d58722dd45dbc" translate="yes" xml:space="preserve">
          <source>YearMonth.range()</source>
          <target state="translated">YearMonth.range()</target>
        </trans-unit>
        <trans-unit id="10ca2afc7e22b234e5fe8cae60d6c49480235a66" translate="yes" xml:space="preserve">
          <source>YearMonth.toString()</source>
          <target state="translated">YearMonth.toString()</target>
        </trans-unit>
        <trans-unit id="33313dd6cb1dba91c26084dacb760b0f0e5729e0" translate="yes" xml:space="preserve">
          <source>YearMonth.until()</source>
          <target state="translated">YearMonth.until()</target>
        </trans-unit>
        <trans-unit id="01dc918ee7b6905c3bf977be32bd22a09e271245" translate="yes" xml:space="preserve">
          <source>YearMonth.with()</source>
          <target state="translated">YearMonth.with()</target>
        </trans-unit>
        <trans-unit id="91c515e1608d29aa009c1ed0a53574e91991af50" translate="yes" xml:space="preserve">
          <source>YearMonth.withMonth()</source>
          <target state="translated">YearMonth.withMonth()</target>
        </trans-unit>
        <trans-unit id="d20f5e6b0b8444350b829d6e34153939c08ed581" translate="yes" xml:space="preserve">
          <source>YearMonth.withYear()</source>
          <target state="translated">YearMonth.withYear()</target>
        </trans-unit>
        <trans-unit id="b3719ffa28865f072014ca3a25ce390300019af7" translate="yes" xml:space="preserve">
          <source>Years represented by this class follow the ISO-8601 standard and use the proleptic numbering system. Year 1 is preceded by year 0, then by year -1.</source>
          <target state="translated">이 등급으로 표현 된 연도는 ISO-8601 표준을 따르고 proleptic 번호 시스템을 사용합니다. Year 1 앞에는 Year 0이, 그 다음에 -1이옵니다.</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="aada4ac76c3c1416eafca548ff006db832142ee3" translate="yes" xml:space="preserve">
          <source>Yield is a heuristic attempt to improve relative progression between threads that would otherwise over-utilise a CPU. Its use should be combined with detailed profiling and benchmarking to ensure that it actually has the desired effect.</source>
          <target state="translated">수율은 CPU를 과도하게 사용하는 스레드 간의 상대적 진행을 개선하려는 휴리스틱 시도입니다. 실제로 원하는 효과를 내도록 세부 프로파일 링 및 벤치마킹과 함께 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9cc1c87830daf5c5539c1846de86655eb5a1c7cf" translate="yes" xml:space="preserve">
          <source>You are encouraged to read the documentation for &lt;code&gt;MessageFormat&lt;/code&gt; as some characters, such as single-quote, are special and need to be escaped.</source>
          <target state="translated">작은 따옴표와 같은 일부 문자는 특별하고 이스케이프해야 하므로 &lt;code&gt;MessageFormat&lt;/code&gt; 에 대한 문서를 읽는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="cd4bc631a5bc95d3b975b72e3444283248ba5e1f" translate="yes" xml:space="preserve">
          <source>You aren't limited to this set of option buttons. You can provide any buttons you want using the options parameter.</source>
          <target state="translated">이 옵션 버튼 세트로 제한되지 않습니다. options 매개 변수를 사용하여 원하는 버튼을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57f07bc712a747b2e5c21100e842aa0ae629f4ee" translate="yes" xml:space="preserve">
          <source>You can access the classes in a package-oriented location using methods like &lt;a href=&quot;javafilemanager#getJavaFileForInput(javax.tools.JavaFileManager.Location,java.lang.String,javax.tools.JavaFileObject.Kind)&quot;&gt;&lt;code&gt;JavaFileManager.getJavaFileForInput(javax.tools.JavaFileManager.Location, java.lang.String, javax.tools.JavaFileObject.Kind)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;javafilemanager#list(javax.tools.JavaFileManager.Location,java.lang.String,java.util.Set,boolean)&quot;&gt;&lt;code&gt;JavaFileManager.list(javax.tools.JavaFileManager.Location, java.lang.String, java.util.Set&amp;lt;javax.tools.JavaFileObject.Kind&amp;gt;, boolean)&lt;/code&gt;&lt;/a&gt;. It is not possible to directly list the classes in a module-oriented location. Instead, you can get a package-oriented location for any specific module using methods like &lt;a href=&quot;javafilemanager#getLocationForModule(javax.tools.JavaFileManager.Location,java.lang.String)&quot;&gt;&lt;code&gt;JavaFileManager.getLocationForModule(javax.tools.JavaFileManager.Location, java.lang.String)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;javafilemanager#listLocationsForModules(javax.tools.JavaFileManager.Location)&quot;&gt;&lt;code&gt;JavaFileManager.listLocationsForModules(javax.tools.JavaFileManager.Location)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;javafilemanager#getJavaFileForInput(javax.tools.JavaFileManager.Location,java.lang.String,javax.tools.JavaFileObject.Kind)&quot;&gt; &lt;code&gt;JavaFileManager.getJavaFileForInput(javax.tools.JavaFileManager.Location, java.lang.String, javax.tools.JavaFileObject.Kind)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;javafilemanager#list(javax.tools.JavaFileManager.Location,java.lang.String,java.util.Set,boolean)&quot;&gt; &lt;code&gt;JavaFileManager.list(javax.tools.JavaFileManager.Location, java.lang.String, java.util.Set&amp;lt;javax.tools.JavaFileObject.Kind&amp;gt;, boolean)&lt;/code&gt; &lt;/a&gt; 와 같은 메소드를 사용하여 패키지 지향 위치의 클래스에 액세스 할 수 있습니다. .Location, java.lang.String, java.util.Set &amp;lt;javax.tools.JavaFileObject.Kind&amp;gt;, boolean) . 모듈 지향 위치에 클래스를 직접 나열하는 것은 불가능합니다. 대신 &lt;a href=&quot;javafilemanager#getLocationForModule(javax.tools.JavaFileManager.Location,java.lang.String)&quot;&gt; &lt;code&gt;JavaFileManager.getLocationForModule(javax.tools.JavaFileManager.Location, java.lang.String)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;javafilemanager#listLocationsForModules(javax.tools.JavaFileManager.Location)&quot;&gt; &lt;code&gt;JavaFileManager.listLocationsForModules(javax.tools.JavaFileManager.Location)&lt;/code&gt; &lt;/a&gt; 와 같은 메소드를 사용하여 특정 모듈에 대한 패키지 지향 위치를 가져올 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a31d1244977f6cb17839f08086d7682b6446ab32" translate="yes" xml:space="preserve">
          <source>You can also construct an instance of &lt;code&gt;SetOfIntegerSyntax&lt;/code&gt; by giving it in &quot;array form.&quot; Array form consists of an array of zero or more integer groups where each integer group is a length-1 or length-2 array of &lt;code&gt;int&lt;/code&gt;s; for example, &lt;code&gt;int[0][]&lt;/code&gt;, &lt;code&gt;int[][]{{1}}&lt;/code&gt;, &lt;code&gt;int[][]{{5,10}}&lt;/code&gt;, &lt;code&gt;int[][]{{1,2},{4}}&lt;/code&gt;.</source>
          <target state="translated">&quot;배열 형식&quot;으로 제공하여 &lt;code&gt;SetOfIntegerSyntax&lt;/code&gt; 의 인스턴스를 생성 할 수도 있습니다 . 배열 형식은 0 개 이상의 정수 그룹의 배열로 구성되며 각 정수 그룹은 &lt;code&gt;int&lt;/code&gt; 의 길이 -1 또는 길이 -2 배열입니다 . 예 : &lt;code&gt;int[0][]&lt;/code&gt; , &lt;code&gt;int[][]{{1}}&lt;/code&gt; , &lt;code&gt;int[][]{{5,10}}&lt;/code&gt; , &lt;code&gt;int[][]{{1,2},{4}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57a593264473653d66159a1770096fecf5f8d9aa" translate="yes" xml:space="preserve">
          <source>You can also construct an instance of SetOfIntegerSyntax by giving it in &quot;array form.&quot; Array form consists of an array of zero or more integer groups where each integer group is a length-1 or length-2 array of &lt;code&gt;int&lt;/code&gt;s; for example, &lt;code&gt;int[0][]&lt;/code&gt;, &lt;code&gt;int[][]{{1}}&lt;/code&gt;, &lt;code&gt;int[][]{{5,10}}&lt;/code&gt;, &lt;code&gt;int[][]{{1,2},{4}}&lt;/code&gt;.</source>
          <target state="translated">&quot;어레이 형식&quot;으로 제공하여 SetOfIntegerSyntax의 인스턴스를 구성 할 수도 있습니다. 배열 형식은 0 개 이상의 정수 그룹으로 구성되며 각 정수 그룹은 &lt;code&gt;int&lt;/code&gt; 의 길이 -1 또는 길이 -2 배열입니다 . 예를 들어, &lt;code&gt;int[0][]&lt;/code&gt; , &lt;code&gt;int[][]{{1}}&lt;/code&gt; , &lt;code&gt;int[][]{{5,10}}&lt;/code&gt; , &lt;code&gt;int[][]{{1,2},{4}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b87eeecae0ce66ba1ce38d1bc834b3e5f1e5d175" translate="yes" xml:space="preserve">
          <source>You can also control the display of numbers with such methods as &lt;code&gt;setMinimumFractionDigits&lt;/code&gt;. If you want even more control over the format or parsing, or want to give your users more control, you can try casting the &lt;code&gt;NumberFormat&lt;/code&gt; you get from the factory methods to a &lt;code&gt;DecimalFormat&lt;/code&gt;. This will work for the vast majority of locales; just remember to put it in a &lt;code&gt;try&lt;/code&gt; block in case you encounter an unusual one.</source>
          <target state="translated">&lt;code&gt;setMinimumFractionDigits&lt;/code&gt; 와 같은 메소드를 사용하여 숫자 표시를 제어 할 수도 있습니다 . 형식이나 구문 분석을 더 많이 제어하거나 사용자에게 더 많은 제어 권한을 부여하려는 경우 팩토리 메소드에서 가져온 &lt;code&gt;NumberFormat&lt;/code&gt; 을 &lt;code&gt;DecimalFormat&lt;/code&gt; 으로 캐스트 할 수 있습니다 . 이것은 대부분의 로케일에 적용됩니다. 특이한 것이 발생할 경우를 대비 하여 &lt;code&gt;try&lt;/code&gt; 블록에 넣는 것을 잊지 마십시오.</target>
        </trans-unit>
        <trans-unit id="a94e039d70bf5d806adcbd74c26338710f85875f" translate="yes" xml:space="preserve">
          <source>You can also get a &lt;code&gt;TimeZone&lt;/code&gt; using &lt;code&gt;getTimeZone&lt;/code&gt; along with a time zone ID. For instance, the time zone ID for the U.S. Pacific Time zone is &quot;America/Los_Angeles&quot;. So, you can get a U.S. Pacific Time &lt;code&gt;TimeZone&lt;/code&gt; object with:</source>
          <target state="translated">시간대 ID와 함께 &lt;code&gt;getTimeZone&lt;/code&gt; 을 사용하여 &lt;code&gt;TimeZone&lt;/code&gt; 을 얻을 수도 있습니다 . 예를 들어 미국 태평양 표준 시간대의 시간대 ID는 &quot;America / Los_Angeles&quot;입니다. 따라서 다음을 사용하여 미국 태평양 표준시 &lt;code&gt;TimeZone&lt;/code&gt; 객체를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6425e9c5e5d85b3ce8594aa43c746ad246216fe1" translate="yes" xml:space="preserve">
          <source>You can also set the time zone on the format if you wish. If you want even more control over the format or parsing, (or want to give your users more control), you can try casting the &lt;code&gt;DateFormat&lt;/code&gt; you get from the factory methods to a &lt;a href=&quot;simpledateformat&quot;&gt;&lt;code&gt;SimpleDateFormat&lt;/code&gt;&lt;/a&gt;. This will work for the majority of countries; just remember to put it in a &lt;code&gt;try&lt;/code&gt; block in case you encounter an unusual one.</source>
          <target state="translated">원하는 경우 시간대를 형식으로 설정할 수도 있습니다. 형식이나 구문 분석을 더 제어하거나 사용자에게 더 많은 제어 권한을 부여하려는 경우 팩토리 메소드에서 얻은 &lt;code&gt;DateFormat&lt;/code&gt; 을 &lt;a href=&quot;simpledateformat&quot;&gt; &lt;code&gt;SimpleDateFormat&lt;/code&gt; 으로&lt;/a&gt; 캐스트하십시오 . 이것은 대부분의 국가에서 작동합니다. 특이한 것이 발생할 경우를 대비 하여 &lt;code&gt;try&lt;/code&gt; 블록에 넣는 것을 잊지 마십시오.</target>
        </trans-unit>
        <trans-unit id="1527b072bf52f5eed0c48e2c627653a9a20de797" translate="yes" xml:space="preserve">
          <source>You can also specify the position of the text relative to the image. By default, text is on the trailing edge of the image, with the text and image vertically aligned.</source>
          <target state="translated">이미지를 기준으로 텍스트의 위치를 ​​지정할 수도 있습니다. 기본적으로 텍스트는 이미지의 후행 가장자리에 있으며 텍스트와 이미지는 세로로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="71fcb054e8df6f6b051a8ea88509c2c58ff5523b" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;getBounds&lt;/code&gt; to determine the bounds of the virtual device. To do this, first call &lt;code&gt;getBounds&lt;/code&gt; on all of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; objects in your system. Then calculate the union of all of the bounds returned from the calls to &lt;code&gt;getBounds&lt;/code&gt;. The union is the bounds of the virtual device. The following code sample calculates the bounds of the virtual device.</source>
          <target state="translated">&lt;code&gt;getBounds&lt;/code&gt; 를 사용 하여 가상 장치의 경계를 결정할 수도 있습니다 . 이렇게하려면 먼저 시스템의 모든 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 객체에서 &lt;code&gt;getBounds&lt;/code&gt; 를 호출 합니다. 그런 다음 &lt;code&gt;getBounds&lt;/code&gt; 호출에서 반환 된 모든 경계의 합집합을 계산합니다 . 유니온은 가상 장치의 경계입니다. 다음 코드 샘플은 가상 장치의 경계를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="56a52f407f46fcfe71f2f48b05c97c7fa299698f" translate="yes" xml:space="preserve">
          <source>You can also use a &lt;code&gt;NumberFormat&lt;/code&gt; to parse numbers:</source>
          <target state="translated">&lt;code&gt;NumberFormat&lt;/code&gt; 을 사용하여 숫자를 구문 분석 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3d53cdef7e10077792d00d86b59977120f193834" translate="yes" xml:space="preserve">
          <source>You can also use forms of the &lt;code&gt;parse&lt;/code&gt; and &lt;code&gt;format&lt;/code&gt; methods with &lt;code&gt;ParsePosition&lt;/code&gt; and &lt;code&gt;FieldPosition&lt;/code&gt; to allow you to:</source>
          <target state="translated">&lt;code&gt;ParsePosition&lt;/code&gt; 및 &lt;code&gt;FieldPosition&lt;/code&gt; 과 함께 &lt;code&gt;parse&lt;/code&gt; 및 &lt;code&gt;format&lt;/code&gt; 메소드 양식을 사용하여 다음을 수행 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="56d7061772a8c443362c97b413b7ce5aa75be018" translate="yes" xml:space="preserve">
          <source>You can also use forms of the parse and format methods with &lt;a href=&quot;parseposition&quot;&gt;&lt;code&gt;ParsePosition&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fieldposition&quot;&gt;&lt;code&gt;FieldPosition&lt;/code&gt;&lt;/a&gt; to allow you to</source>
          <target state="translated">또한 함께 구문 분석 및 포맷 방법의 형태로 사용할 수 있습니다 &lt;a href=&quot;parseposition&quot;&gt; &lt;code&gt;ParsePosition&lt;/code&gt; 의&lt;/a&gt; 및 &lt;a href=&quot;fieldposition&quot;&gt; &lt;code&gt;FieldPosition&lt;/code&gt; 와를&lt;/a&gt; 허용하는 당신에게</target>
        </trans-unit>
        <trans-unit id="f4ed6e26faebb7ffb3abd4194721153c85c02cc3" translate="yes" xml:space="preserve">
          <source>You can associate a short descriptive string with a feature.</source>
          <target state="translated">짧은 설명 문자열을 기능과 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffca3f9f3cc354ec10130aa7a4402b73e0f0285f" translate="yes" xml:space="preserve">
          <source>You can associate a short descriptive string with a feature. Normally these descriptive strings should be less than about 40 characters.</source>
          <target state="translated">간단한 설명 문자열을 기능과 연결할 수 있습니다. 일반적으로 이러한 설명 문자열은 약 40 자 미만이어야합니다.</target>
        </trans-unit>
        <trans-unit id="4cfc34786d722dcb2ded721cb47def277d87740d" translate="yes" xml:space="preserve">
          <source>You can change a component's constraints in several ways. You can use one of the &lt;a href=&quot;#putConstraint(java.lang.String,java.awt.Component,int,java.lang.String,java.awt.Component)&quot;&gt;&lt;code&gt;putConstraint&lt;/code&gt;&lt;/a&gt; methods to establish a spring linking the edges of two components within the same container. Or you can get the appropriate &lt;code&gt;SpringLayout.Constraints&lt;/code&gt; object using &lt;a href=&quot;#getConstraints(java.awt.Component)&quot;&gt;&lt;code&gt;getConstraints&lt;/code&gt;&lt;/a&gt; and then modify one or more of its springs. Or you can get the spring for a particular edge of a component using &lt;a href=&quot;#getConstraint(java.lang.String,java.awt.Component)&quot;&gt;&lt;code&gt;getConstraint&lt;/code&gt;&lt;/a&gt;, and modify it. You can also associate your own &lt;code&gt;SpringLayout.Constraints&lt;/code&gt; object with a component by specifying the constraints object when you add the component to its container (using &lt;a href=&quot;../../java/awt/container#add(java.awt.Component,java.lang.Object)&quot;&gt;&lt;code&gt;Container.add(Component, Object)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">여러 가지 방법으로 구성 요소의 구속 조건을 변경할 수 있습니다. &lt;a href=&quot;#putConstraint(java.lang.String,java.awt.Component,int,java.lang.String,java.awt.Component)&quot;&gt; &lt;code&gt;putConstraint&lt;/code&gt; &lt;/a&gt; 메서드 중 하나를 사용 하여 동일한 컨테이너 내에서 두 구성 요소의 가장자리를 연결하는 스프링을 설정할 수 있습니다 . 또는 &lt;a href=&quot;#getConstraints(java.awt.Component)&quot;&gt; &lt;code&gt;getConstraints&lt;/code&gt; 를&lt;/a&gt; 사용하여 적절한 &lt;code&gt;SpringLayout.Constraints&lt;/code&gt; 객체를 가져온 다음 하나 이상의 스프링을 수정할 수 있습니다. 또는 &lt;a href=&quot;#getConstraint(java.lang.String,java.awt.Component)&quot;&gt; &lt;code&gt;getConstraint&lt;/code&gt; 를&lt;/a&gt; 사용하여 구성 요소의 특정 모서리에 대한 스프링을 가져와 수정할 수 있습니다. 컨테이너에 컴포넌트를 추가 할 때 ( &lt;a href=&quot;../../java/awt/container#add(java.awt.Component,java.lang.Object)&quot;&gt; &lt;code&gt;Container.add(Component, Object)&lt;/code&gt; &lt;/a&gt; ) 제약 객체를 지정 하여 자신의 &lt;code&gt;SpringLayout.Constraints&lt;/code&gt; 객체를 컴포넌트와 연결할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd8e90929251a64b206f6a18da40e77d40b7955d" translate="yes" xml:space="preserve">
          <source>You can choose the RMI transport (JRMP or IIOP) by specifying &lt;code&gt;rmi&lt;/code&gt; or &lt;code&gt;iiop&lt;/code&gt; in the &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; part of the &lt;code&gt;serviceURL&lt;/code&gt; when creating the connector server. You can also create specialized connector servers by instantiating an appropriate subclass of &lt;a href=&quot;rmiserverimpl&quot;&gt;&lt;code&gt;RMIServerImpl&lt;/code&gt;&lt;/a&gt; and supplying it to the &lt;code&gt;RMIConnectorServer&lt;/code&gt; constructor.</source>
          <target state="translated">커넥터 서버를 만들 때 &lt;code&gt;serviceURL&lt;/code&gt; 의 &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; 부분 에서 &lt;code&gt;rmi&lt;/code&gt; 또는 &lt;code&gt;iiop&lt;/code&gt; 를 지정하여 RMI 전송 (JRMP 또는 IIOP)을 선택할 수 있습니다 . 적절한 &lt;a href=&quot;rmiserverimpl&quot;&gt; &lt;code&gt;RMIServerImpl&lt;/code&gt; &lt;/a&gt; 서브 클래스를 인스턴스화하고 이를 &lt;code&gt;RMIConnectorServer&lt;/code&gt; 생성자에 제공 하여 특수 커넥터 서버를 작성할 수도 있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b479a18986a67edca12f79a96cea237826142a9c" translate="yes" xml:space="preserve">
          <source>You can choose the RMI transport by specifying &lt;code&gt;rmi&lt;/code&gt; in the &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; part of the &lt;code&gt;serviceURL&lt;/code&gt; when creating the connector server. You can also create specialized connector servers by instantiating an appropriate subclass of &lt;a href=&quot;rmiserverimpl&quot;&gt;&lt;code&gt;RMIServerImpl&lt;/code&gt;&lt;/a&gt; and supplying it to the &lt;code&gt;RMIConnectorServer&lt;/code&gt; constructor.</source>
          <target state="translated">커넥터 서버를 만들 때 &lt;code&gt;serviceURL&lt;/code&gt; 의 &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; 부분에 &lt;code&gt;rmi&lt;/code&gt; 를 지정하여 RMI 전송을 선택할 수 있습니다 . &lt;a href=&quot;rmiserverimpl&quot;&gt; &lt;code&gt;RMIServerImpl&lt;/code&gt; &lt;/a&gt; 의 적절한 서브 클래스를 인스턴스화하고 이를 &lt;code&gt;RMIConnectorServer&lt;/code&gt; 생성자에 제공 하여 특수 커넥터 서버를 작성할 수도 있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7139a4e659d00377c2af9560c8f0ce78ffd4875c" translate="yes" xml:space="preserve">
          <source>You can construct an instance of &lt;code&gt;SetOfIntegerSyntax&lt;/code&gt; by giving it in &quot;string form.&quot; The string consists of zero or more comma-separated integer groups. Each integer group consists of either one integer, two integers separated by a hyphen (&lt;code&gt;-&lt;/code&gt;), or two integers separated by a colon (&lt;code&gt;:&lt;/code&gt;). Each integer consists of one or more decimal digits (&lt;code&gt;0&lt;/code&gt; through &lt;code&gt;9&lt;/code&gt;). Whitespace characters cannot appear within an integer but are otherwise ignored. For example: &lt;code&gt;&quot;&quot;&lt;/code&gt;, &lt;code&gt;&quot;1&quot;&lt;/code&gt;, &lt;code&gt;&quot;5-10&quot;&lt;/code&gt;, &lt;code&gt;&quot;1:2, 4&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SetOfIntegerSyntax&lt;/code&gt; 인스턴스를 &quot;문자열 형식&quot;으로 제공하여 구성 할 수 있습니다 . 문자열은 0 개 이상의 쉼표로 구분 된 정수 그룹으로 구성됩니다. (각 정수 그룹 중 하나 개의 정수로 구성되어 두 정수 하이픈으로 분리 &lt;code&gt;-&lt;/code&gt; (또는 2의 정수 콜론으로 구분) &lt;code&gt;:&lt;/code&gt; ). 각 정수 하나 이상의 십진수 (구성 &lt;code&gt;0&lt;/code&gt; 내지 &lt;code&gt;9&lt;/code&gt; ). 공백 문자는 정수 내에 나타날 수 없지만 그렇지 않으면 무시됩니다. 예 : &lt;code&gt;&quot;&quot;&lt;/code&gt; , &lt;code&gt;&quot;1&quot;&lt;/code&gt; , &lt;code&gt;&quot;5-10&quot;&lt;/code&gt; , &lt;code&gt;&quot;1:2, 4&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79723aa70f6a049df786708f0ef79eebd6a33c50" translate="yes" xml:space="preserve">
          <source>You can construct an instance of SetOfIntegerSyntax by giving it in &quot;string form.&quot; The string consists of zero or more comma-separated integer groups. Each integer group consists of either one integer, two integers separated by a hyphen (&lt;code&gt;-&lt;/code&gt;), or two integers separated by a colon (&lt;code&gt;:&lt;/code&gt;). Each integer consists of one or more decimal digits (&lt;code&gt;0&lt;/code&gt; through &lt;code&gt;9&lt;/code&gt;). Whitespace characters cannot appear within an integer but are otherwise ignored. For example: &lt;code&gt;&quot;&quot;&lt;/code&gt;, &lt;code&gt;&quot;1&quot;&lt;/code&gt;, &lt;code&gt;&quot;5-10&quot;&lt;/code&gt;, &lt;code&gt;&quot;1:2,
 4&quot;&lt;/code&gt;.</source>
          <target state="translated">&quot;문자열 형식&quot;으로 제공하여 SetOfIntegerSyntax의 인스턴스를 생성 할 수 있습니다. 문자열은 0 개 이상의 쉼표로 구분 된 정수 그룹으로 구성됩니다. (각 정수 그룹 중 하나 개의 정수로 구성되어 두 정수 하이픈으로 분리 &lt;code&gt;-&lt;/code&gt; (또는 2의 정수 콜론으로 구분) &lt;code&gt;:&lt;/code&gt; ). 각 정수 하나 이상의 십진수 (구성 &lt;code&gt;0&lt;/code&gt; 내지 &lt;code&gt;9&lt;/code&gt; ). 공백 문자는 정수 내에 나타날 수 없지만 무시됩니다. 예를 들어 &lt;code&gt;&quot;&quot;&lt;/code&gt; , &lt;code&gt;&quot;1&quot;&lt;/code&gt; , &lt;code&gt;&quot;5-10&quot;&lt;/code&gt; , &lt;code&gt;&quot;1:2, 4&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4b4f96e9d21bc85e91356027edfca6e5a781a3b9" translate="yes" xml:space="preserve">
          <source>You can convert an enumeration value to a string by calling &lt;a href=&quot;#toString()&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt;. The string is obtained from a table supplied by the enumeration class.</source>
          <target state="translated">&lt;a href=&quot;#toString()&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt; 을 호출하여 열거 형 값을 문자열로 변환 할 수 있습니다 . 문자열은 열거 형 클래스에서 제공하는 테이블에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="75fda6eb09dec3765e5f6accb34921aa9962537f" translate="yes" xml:space="preserve">
          <source>You can convert an enumeration value to a string by calling &lt;a href=&quot;enumsyntax#toString--&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt;. The string is obtained from a table supplied by the enumeration class.</source>
          <target state="translated">&lt;a href=&quot;enumsyntax#toString--&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt; 을 호출하여 열거 형 값을 문자열로 변환 할 수 있습니다 . 문자열은 열거 클래스에서 제공 한 테이블에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="91a204ed3e3e527f4e0cc25682d4470b1c8c6368" translate="yes" xml:space="preserve">
          <source>You can create the &lt;code&gt;ChoiceFormat&lt;/code&gt; programmatically, as in the above example, or by using a pattern. See &lt;a href=&quot;choiceformat&quot;&gt;&lt;code&gt;ChoiceFormat&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">위의 예와 같이 프로그래밍 방식으로 또는 패턴을 사용하여 &lt;code&gt;ChoiceFormat&lt;/code&gt; 을 만들 수 있습니다 . 자세한 내용은 &lt;a href=&quot;choiceformat&quot;&gt; &lt;code&gt;ChoiceFormat&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d62e48a366a729bb8ddaf9c19d7323c5bb9ea44e" translate="yes" xml:space="preserve">
          <source>You can define a subclass of an enumeration class that extends it with additional enumeration values. The subclass's enumeration values' integer values need not be distinct from the superclass's enumeration values' integer values; the &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;equals()&lt;/code&gt;, and &lt;code&gt;toString()&lt;/code&gt; methods will still work properly even if the subclass uses some of the same integer values as the superclass. However, the application in which the enumeration class and subclass are used may need to have distinct integer values in the superclass and subclass.</source>
          <target state="translated">추가 열거 형 값으로 확장하는 열거 형 클래스의 하위 클래스를 정의 할 수 있습니다. 서브 클래스의 열거 값의 정수 값은 수퍼 클래스의 열거 값의 정수 값과 구별 될 필요는 없습니다. &lt;code&gt;==&lt;/code&gt; 는 , &lt;code&gt;!=&lt;/code&gt; , &lt;code&gt;equals()&lt;/code&gt; 하고, &lt;code&gt;toString()&lt;/code&gt; 메소드는 여전히 서브 클래스가 슈퍼 클래스와 같은 정수 값의 일부를 사용하는 경우에도 제대로 작동합니다. 그러나 열거 클래스 및 서브 클래스가 사용되는 응용 프로그램은 수퍼 클래스 및 서브 클래스에서 고유 한 정수 값을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="182338e12e75d4b046badebf62bc87be76221f13" translate="yes" xml:space="preserve">
          <source>You can detect changes in the value of this property by listening for property change events on this component with name &lt;code&gt;&quot;paintingForPrint&quot;&lt;/code&gt;.</source>
          <target state="translated">이름이 &lt;code&gt;&quot;paintingForPrint&quot;&lt;/code&gt; 인 이 구성 요소에서 속성 변경 이벤트를 수신하여이 속성 값의 변경을 감지 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="97b95801e511560df973d72a9cc2b64ee3b2bbc0" translate="yes" xml:space="preserve">
          <source>You can ensure the stream is unordered by using the &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; method. For example:</source>
          <target state="translated">&lt;a href=&quot;basestream#unordered()&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 스트림의 순서가 지정되지 않았 는지 확인할 수 있습니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="1a4d8cd5d64c3a8a013dd30c1ddd2ecf110aa99a" translate="yes" xml:space="preserve">
          <source>You can ensure the stream is unordered by using the &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; method. For example:</source>
          <target state="translated">&lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 스트림이 정렬되지 않도록 할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6b44013996e391d2cab242293e06e79c6cb9b057" translate="yes" xml:space="preserve">
          <source>You can find further documentation and several examples of using timers by visiting &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/timer.html&quot;&gt;How to Use Timers&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt; For more examples and help in choosing between this &lt;code&gt;Timer&lt;/code&gt; class and &lt;code&gt;java.util.Timer&lt;/code&gt;, see &lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/timer/&quot;&gt;Using Timers in Swing Applications&lt;/a&gt;, an article in &lt;em&gt;The Swing Connection.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/timer.html&quot;&gt;How to Use Timers를&lt;/a&gt; 방문하여 추가 설명서와 타이머 사용에 대한 몇 가지 예를 찾을 수 있습니다 &lt;em&gt;.&lt;/em&gt; 이 &lt;code&gt;Timer&lt;/code&gt; 클래스와 &lt;code&gt;java.util.Timer&lt;/code&gt; 중에서 선택하는 데 대한 더 많은 예제와 도움말 은 &lt;em&gt;The Swing Connection&lt;/em&gt; 의 기사 인 &lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/timer/&quot;&gt;Using Timers in Swing Applications를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a91f6cf76f1aa187f09c085b40a12252c55a3cc3" translate="yes" xml:space="preserve">
          <source>You can further restrict the characters that can be input by the &lt;code&gt;setInvalidCharacters&lt;/code&gt; and &lt;code&gt;setValidCharacters&lt;/code&gt; methods. &lt;code&gt;setInvalidCharacters&lt;/code&gt; allows you to specify which characters are not legal. &lt;code&gt;setValidCharacters&lt;/code&gt; allows you to specify which characters are valid. For example, the following code block is equivalent to a mask of '0xHHH' with no invalid/valid characters:</source>
          <target state="translated">&lt;code&gt;setInvalidCharacters&lt;/code&gt; 및 &lt;code&gt;setValidCharacters&lt;/code&gt; 메소드 로 입력 할 수있는 문자를 추가로 제한 할 수 있습니다 . &lt;code&gt;setInvalidCharacters&lt;/code&gt; 를 사용하면 합법적이지 않은 문자를 지정할 수 있습니다. &lt;code&gt;setValidCharacters&lt;/code&gt; 를 사용하면 유효한 문자를 지정할 수 있습니다. 예를 들어 다음 코드 블록은 유효하지 않거나 유효한 문자가없는 '0xHHH'마스크에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="31d84be0594e1ea3a5973674a061273a9f1e4eab" translate="yes" xml:space="preserve">
          <source>You can get the same effect on a single JDialog by doing the following:</source>
          <target state="translated">다음을 수행하여 단일 JDialog에서 동일한 효과를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5cf7581bcb1ed5ed24cac66b74e24104926ae3c2" translate="yes" xml:space="preserve">
          <source>You can get the same effect on a single JFrame by doing the following:</source>
          <target state="translated">다음을 수행하여 단일 JFrame에서 동일한 효과를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5a73675a47e120a0f7ecbb1ef517cc98a12f6fb" translate="yes" xml:space="preserve">
          <source>You can not create &lt;code&gt;CollationKey&lt;/code&gt;s directly. Rather, generate them by calling &lt;code&gt;Collator.getCollationKey&lt;/code&gt;. You can only compare &lt;code&gt;CollationKey&lt;/code&gt;s generated from the same &lt;code&gt;Collator&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;CollationKey&lt;/code&gt; 를 직접 작성할 수 없습니다 . 대신 &lt;code&gt;Collator.getCollationKey&lt;/code&gt; 를 호출하여 생성하십시오 . 동일한 &lt;code&gt;Collator&lt;/code&gt; 객체 에서 생성 된 &lt;code&gt;CollationKey&lt;/code&gt; 만 비교할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3071cf9645c3954f36c18acd09455e9742788780" translate="yes" xml:space="preserve">
          <source>You can print the same print data at different times using different processing instructions.</source>
          <target state="translated">다른 처리 지침을 사용하여 다른 시간에 동일한 인쇄 데이터를 인쇄 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a8fb633cb55ce9911bbbe65030e55ab015cf04e" translate="yes" xml:space="preserve">
          <source>You can provide the name of your default realm and Key Distribution Center (KDC) host for that realm using the system properties &lt;code&gt;java.security.krb5.realm&lt;/code&gt; and &lt;code&gt;java.security.krb5.kdc&lt;/code&gt;. Both properties must be set. Alternatively, the &lt;code&gt;java.security.krb5.conf&lt;/code&gt; system property can be set to the location of an MIT style &lt;code&gt;krb5.conf&lt;/code&gt; configuration file. If none of these system properties are set, the &lt;code&gt;krb5.conf&lt;/code&gt; file is searched for in an implementation-specific manner. Typically, an implementation will first look for a &lt;code&gt;krb5.conf&lt;/code&gt; file in &lt;code&gt;&amp;lt;java-home&amp;gt;/conf/security&lt;/code&gt; and failing that, in an OS-specific location.</source>
          <target state="translated">시스템 특성 &lt;code&gt;java.security.krb5.realm&lt;/code&gt; 및 &lt;code&gt;java.security.krb5.kdc&lt;/code&gt; 를 사용하여 기본 범주 및 해당 범주에 대한 KDC (Key Distribution Center) 호스트의 이름을 제공 할 수 있습니다 . 두 속성을 모두 설정해야합니다. 또는 &lt;code&gt;java.security.krb5.conf&lt;/code&gt; 시스템 특성을 MIT 스타일 &lt;code&gt;krb5.conf&lt;/code&gt; 구성 파일 의 위치로 설정할 수 있습니다 . 이러한 시스템 등록 정보가 설정되지 않은 경우 &lt;code&gt;krb5.conf&lt;/code&gt; 파일이 구현 별 방식으로 검색됩니다. 일반적으로 구현은 먼저 &lt;code&gt;&amp;lt;java-home&amp;gt;/conf/security&lt;/code&gt; 에서 &lt;code&gt;krb5.conf&lt;/code&gt; 파일을 찾고 OS 별 위치에서 실패합니다.</target>
        </trans-unit>
        <trans-unit id="ecab6abb43727ea8ddd67ac72406a303b4488a7d" translate="yes" xml:space="preserve">
          <source>You can provide the name of your default realm and Key Distribution Center (KDC) host for that realm using the system properties &lt;code&gt;java.security.krb5.realm&lt;/code&gt; and &lt;code&gt;java.security.krb5.kdc&lt;/code&gt;. Both properties must be set. Alternatively, the &lt;code&gt;java.security.krb5.conf&lt;/code&gt; system property can be set to the location of an MIT style &lt;code&gt;krb5.conf&lt;/code&gt; configuration file. If none of these system properties are set, the &lt;code&gt;krb5.conf&lt;/code&gt; file is searched for in an implementation-specific manner. Typically, an implementation will first look for a &lt;code&gt;krb5.conf&lt;/code&gt; file in &lt;code&gt;&amp;lt;java-home&amp;gt;/lib/security&lt;/code&gt; and failing that, in an OS-specific location.</source>
          <target state="translated">시스템 특성 &lt;code&gt;java.security.krb5.realm&lt;/code&gt; 및 &lt;code&gt;java.security.krb5.kdc&lt;/code&gt; 를 사용하여 해당 영역에 대한 기본 영역 및 KDC (Key Distribution Center) 호스트 이름을 제공 할 수 있습니다 . 두 속성을 모두 설정해야합니다. 또는 &lt;code&gt;java.security.krb5.conf&lt;/code&gt; 시스템 특성을 MIT 스타일 &lt;code&gt;krb5.conf&lt;/code&gt; 구성 파일 의 위치로 설정할 수 있습니다 . 이러한 시스템 등록 정보가 설정되지 않은 경우 &lt;code&gt;krb5.conf&lt;/code&gt; 파일은 구현 별 방식으로 검색됩니다. 일반적으로 구현은 먼저 &lt;code&gt;&amp;lt;java-home&amp;gt;/lib/security&lt;/code&gt; 에서 &lt;code&gt;krb5.conf&lt;/code&gt; 파일을 찾아 OS 별 위치에서 실패합니다.</target>
        </trans-unit>
        <trans-unit id="62d867962bbe3bb09eb56c64c2c2553de7077629" translate="yes" xml:space="preserve">
          <source>You can register an object to receive notifications whenever the line's state changes. The object must implement the &lt;a href=&quot;linelistener&quot;&gt;&lt;code&gt;LineListener&lt;/code&gt;&lt;/a&gt; interface, which consists of the single method &lt;a href=&quot;linelistener#update(javax.sound.sampled.LineEvent)&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt;. This method will be invoked when a line opens and closes (and, if it's a &lt;a href=&quot;dataline&quot;&gt;&lt;code&gt;DataLine&lt;/code&gt;&lt;/a&gt; , when it starts and stops).</source>
          <target state="translated">라인의 상태가 변경 될 때마다 알림을 수신하도록 객체를 등록 할 수 있습니다. 객체는 단일 메소드 &lt;a href=&quot;linelistener#update(javax.sound.sampled.LineEvent)&quot;&gt; &lt;code&gt;update&lt;/code&gt; &lt;/a&gt; 로 구성된 &lt;a href=&quot;linelistener&quot;&gt; &lt;code&gt;LineListener&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현해야합니다 . 이 메서드는 줄이 열리고 닫힐 때 (그리고 &lt;a href=&quot;dataline&quot;&gt; &lt;code&gt;DataLine&lt;/code&gt; &lt;/a&gt; 인 경우 시작 및 중지 할 때) 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="ecbf23752614b8c36c36cec55731b8c1f9346736" translate="yes" xml:space="preserve">
          <source>You can register an object to receive notifications whenever the line's state changes. The object must implement the &lt;code&gt;&lt;a href=&quot;linelistener&quot;&gt;&lt;code&gt;LineListener&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; interface, which consists of the single method &lt;code&gt;&lt;a href=&quot;linelistener#update-javax.sound.sampled.LineEvent-&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;. This method will be invoked when a line opens and closes (and, if it's a &lt;a href=&quot;dataline&quot;&gt;&lt;code&gt;DataLine&lt;/code&gt;&lt;/a&gt;, when it starts and stops).</source>
          <target state="translated">회선 상태가 변경 될 때마다 알림을 받도록 객체를 등록 할 수 있습니다. 객체는 &lt;code&gt;&lt;a href=&quot;linelistener&quot;&gt;&lt;code&gt;LineListener&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 인터페이스를 구현해야하며 , 단일 메소드 &lt;code&gt;&lt;a href=&quot;linelistener#update-javax.sound.sampled.LineEvent-&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 로 구성됩니다 . 이 메소드는 행이 열리고 닫힐 때 (그리고 &lt;a href=&quot;dataline&quot;&gt; &lt;code&gt;DataLine&lt;/code&gt; &lt;/a&gt; 인 경우 시작 및 중지 될 때) 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="7aae3dda2d14210d729e570d86754d0075c52ba8" translate="yes" xml:space="preserve">
          <source>You can set a &lt;code&gt;Collator&lt;/code&gt;'s &lt;em&gt;strength&lt;/em&gt; property to determine the level of difference considered significant in comparisons. Four strengths are provided: &lt;code&gt;PRIMARY&lt;/code&gt;, &lt;code&gt;SECONDARY&lt;/code&gt;, &lt;code&gt;TERTIARY&lt;/code&gt;, and &lt;code&gt;IDENTICAL&lt;/code&gt;. The exact assignment of strengths to language features is locale dependant. For example, in Czech, &quot;e&quot; and &quot;f&quot; are considered primary differences, while &quot;e&quot; and &quot;ě&quot; are secondary differences, &quot;e&quot; and &quot;E&quot; are tertiary differences and &quot;e&quot; and &quot;e&quot; are identical. The following shows how both case and accents could be ignored for US English.</source>
          <target state="translated">&lt;code&gt;Collator&lt;/code&gt; 의 &lt;em&gt;강도&lt;/em&gt; 속성을 설정하여 비교에서 중요한 것으로 간주되는 차이의 수준을 결정할 수 있습니다 . 네 강점이 제공됩니다 &lt;code&gt;PRIMARY&lt;/code&gt; , &lt;code&gt;SECONDARY&lt;/code&gt; , &lt;code&gt;TERTIARY&lt;/code&gt; 및 &lt;code&gt;IDENTICAL&lt;/code&gt; 을 . 언어 기능에 대한 강점의 정확한 할당은 로케일에 따라 다릅니다. 예를 들어 체코 어에서 &quot;e&quot;와 &quot;f&quot;는 주요 차이점으로 간주되는 반면 &quot;e&quot;와 &quot;ě&quot;는 2 차 차이점이며 &quot;e&quot;와 &quot;E&quot;는 3 차 차이점이며 &quot;e&quot;와 &quot;e&quot;는 동일 . 다음은 미국 영어에서 대소 문자와 악센트를 모두 무시하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6c07d4272939236c444c677f64023f6989df6272" translate="yes" xml:space="preserve">
          <source>You can set a &lt;code&gt;Collator&lt;/code&gt;'s &lt;em&gt;strength&lt;/em&gt; property to determine the level of difference considered significant in comparisons. Four strengths are provided: &lt;code&gt;PRIMARY&lt;/code&gt;, &lt;code&gt;SECONDARY&lt;/code&gt;, &lt;code&gt;TERTIARY&lt;/code&gt;, and &lt;code&gt;IDENTICAL&lt;/code&gt;. The exact assignment of strengths to language features is locale dependent. For example, in Czech, &quot;e&quot; and &quot;f&quot; are considered primary differences, while &quot;e&quot; and &quot;ě&quot; are secondary differences, &quot;e&quot; and &quot;E&quot; are tertiary differences and &quot;e&quot; and &quot;e&quot; are identical. The following shows how both case and accents could be ignored for US English.</source>
          <target state="translated">&lt;code&gt;Collator&lt;/code&gt; 의 &lt;em&gt;강도&lt;/em&gt; 속성을 설정하여 비교에서 중요한 차이 수준을 결정할 수 있습니다 . 네 강점이 제공됩니다 &lt;code&gt;PRIMARY&lt;/code&gt; , &lt;code&gt;SECONDARY&lt;/code&gt; , &lt;code&gt;TERTIARY&lt;/code&gt; 및 &lt;code&gt;IDENTICAL&lt;/code&gt; 을 . 언어 기능에 대한 정확한 강점 할당은 로케일에 따라 다릅니다. 예를 들어 체코 어에서 &quot;e&quot;와 &quot;f&quot;는 1 차 차이로 간주되고 &quot;e&quot;와 &quot;ě&quot;는 2 차 차이, &quot;e&quot;와 &quot;E&quot;는 3 차 차이, &quot;e&quot;와 &quot;e&quot;는 동일합니다. . 다음은 미국 영어에서 대소 문자와 악센트를 모두 무시하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6fb090d9941d904f454d49b7e0bbb26391256f1e" translate="yes" xml:space="preserve">
          <source>You can specify a minimum and maximum value by way of the &lt;code&gt;setMinimum&lt;/code&gt; and &lt;code&gt;setMaximum&lt;/code&gt; methods. In order for this to work the values returned from &lt;code&gt;stringToValue&lt;/code&gt; must be comparable to the min/max values by way of the &lt;code&gt;Comparable&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;setMinimum&lt;/code&gt; 및 &lt;code&gt;setMaximum&lt;/code&gt; 메소드를 통해 최소값과 최대 값을 지정할 수 있습니다 . 이것이 작동하려면 &lt;code&gt;stringToValue&lt;/code&gt; 에서 반환 된 값이 &lt;code&gt;Comparable&lt;/code&gt; 인터페이스 를 통해 최소 / 최대 값과 비교할 수 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="5d9325a575ae94d1ef20f12ae5b4d0b53bd92263" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;Button b&lt;/code&gt; for its action listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어 다음 코드를 사용하여 &lt;code&gt;Button b&lt;/code&gt; 에 해당 작업 리스너를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="afd0ca86dd16d0b2bc5658689532b24840c3e40b" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;Checkbox c&lt;/code&gt; for its item listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어 다음 코드를 사용하여 &lt;code&gt;Checkbox c&lt;/code&gt; 에서 항목 리스너를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d10638528df9a293e02e61328063655467aa5beb" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;CheckboxMenuItem c&lt;/code&gt; for its item listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어, 다음 코드를 사용하여 &lt;code&gt;CheckboxMenuItem c&lt;/code&gt; 에서 해당 항목 리스너를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf5cb0403b519664fc062a69e9afee8d3c01ebe0" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;Choice c&lt;/code&gt; for its item listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어 다음 코드를 사용하여 항목 리스너에 대한 &lt;code&gt;Choice c&lt;/code&gt; 를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="61e50cef362749716b509d7ab12f81c2640f7938" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;Component c&lt;/code&gt; for its mouse listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어, 다음 코드를 사용하여 &lt;code&gt;Component c&lt;/code&gt; 에 마우스 리스너를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ccf36b60dc63b016a054417f1fb3f939366710e9" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;Container c&lt;/code&gt; for its container listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어 다음 코드를 사용하여 &lt;code&gt;Container c&lt;/code&gt; 에 해당 컨테이너 리스너를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="35e36a5629152dfc1d0d92c4cd65da4613ffcae0" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;DefaultBoundedRangeModel&lt;/code&gt; instance &lt;code&gt;m&lt;/code&gt; for its change listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어 다음 코드를 사용하여 &lt;code&gt;DefaultBoundedRangeModel&lt;/code&gt; 인스턴스 &lt;code&gt;m&lt;/code&gt; 에서 변경 리스너를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dbe5c76e07ef52686e01b6e597bc38a9f46a0525" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;DefaultButtonModel&lt;/code&gt; instance &lt;code&gt;m&lt;/code&gt; for its action listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어 다음 코드를 사용하여 &lt;code&gt;DefaultButtonModel&lt;/code&gt; 인스턴스 &lt;code&gt;m&lt;/code&gt; 에서 작업 리스너를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81c780af4299619d7a3feb886b0a752293c0fb97" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;DefaultCaret&lt;/code&gt;&lt;code&gt;c&lt;/code&gt; for its change listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어 다음 코드를 사용하여 &lt;code&gt;DefaultCaret&lt;/code&gt; &lt;code&gt;c&lt;/code&gt; 에 해당 변경 리스너를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f5add6a94da413667b6448b54e10776e697ed9f4" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;DefaultListSelectionModel&lt;/code&gt; instance &lt;code&gt;m&lt;/code&gt; for its list selection listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어 다음 코드를 사용하여 &lt;code&gt;DefaultListSelectionModel&lt;/code&gt; 인스턴스 &lt;code&gt;m&lt;/code&gt; 에서 목록 선택 리스너를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41be70ae5314f47f9e65f08fa7be13eceed4174c" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;DefaultSingleSelectionModel&lt;/code&gt; instance &lt;code&gt;m&lt;/code&gt; for its change listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어 다음 코드를 사용하여 &lt;code&gt;DefaultSingleSelectionModel&lt;/code&gt; 인스턴스 &lt;code&gt;m&lt;/code&gt; 에서 변경 리스너를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c2ce2c962778e7102ce0388c26831097e7b388b7" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;DefaultTableColumnModel&lt;/code&gt;&lt;code&gt;m&lt;/code&gt; for its column model listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어 다음 코드를 사용하여 열 모델 수신기에 대한 &lt;code&gt;DefaultTableColumnModel&lt;/code&gt; &lt;code&gt;m&lt;/code&gt; 을 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ec3c7ddaac8ea77ce3035bbbef1d44dff1b48ae8" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;DefaultTreeModel&lt;/code&gt;&lt;code&gt;m&lt;/code&gt; for its tree model listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어 다음 코드를 사용하여 &lt;code&gt;DefaultTreeModel&lt;/code&gt; &lt;code&gt;m&lt;/code&gt; 에서 트리 모델 수신기를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7d39bb008bcc485d25e8bd33428ed1c634d0e6c5" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;DefaultTreeSelectionModel&lt;/code&gt;&lt;code&gt;m&lt;/code&gt; for its tree selection listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어, 다음 코드를 사용하여 &lt;code&gt;DefaultTreeSelectionModel&lt;/code&gt; &lt;code&gt;m&lt;/code&gt; 에서 트리 선택 리스너를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="78e7dd038e5e38dddded9704ecb833d6c288b610" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;JComponent&lt;/code&gt;&lt;code&gt;c&lt;/code&gt; for its mouse listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어, 다음 코드를 사용하여 &lt;code&gt;JComponent&lt;/code&gt; &lt;code&gt;c&lt;/code&gt; 에서 마우스 리스너를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1d4de24127eb04cda79f88d5d0f385f44af3840f" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;List l&lt;/code&gt; for its item listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어 다음 코드를 사용하여 항목 리스너에 대한 &lt;code&gt;List l&lt;/code&gt; 을 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="afb1c2054cb69d0c6f36d35a8179fce670d9b13f" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;MenuItem m&lt;/code&gt; for its action listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어 다음 코드를 사용하여 &lt;code&gt;MenuItem m&lt;/code&gt; 에서 작업 리스너를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f60766cd69ab0ac444e16b8c34163ab7ce76026b" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;Scrollbar c&lt;/code&gt; for its mouse listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어 다음 코드를 사용하여 마우스 리스너에 대한 &lt;code&gt;Scrollbar c&lt;/code&gt; 를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3ce8e988b51d25b6acc53ee249933fd5386a8e03" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;TextComponent t&lt;/code&gt; for its text listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어 다음 코드를 사용하여 텍스트 리스너에 대한 &lt;code&gt;TextComponent t&lt;/code&gt; 를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a34ead84c46e1ef8f67e16ec94ce1877fd1351ff" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;TextField t&lt;/code&gt; for its action listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어 다음 코드를 사용하여 &lt;code&gt;TextField t&lt;/code&gt; 에서 해당 작업 리스너를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5733d8f413bb7595142e9efaa84202aafd363811" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;Timer&lt;/code&gt; instance &lt;code&gt;t&lt;/code&gt; for its action listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어, 다음 코드를 사용하여 &lt;code&gt;Timer&lt;/code&gt; 인스턴스 &lt;code&gt;t&lt;/code&gt; 에서 작업 리스너를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cc7c0f4e277855ca9ffdb81872b8431b7fe8d890" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a &lt;code&gt;Window w&lt;/code&gt; for its window listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어 다음 코드를 사용하여 &lt;code&gt;Window w&lt;/code&gt; 에서 해당 창 수신기를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="25355b020b982bc16ef9ddb32e6fc02b3a473391" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a document &lt;code&gt;d&lt;/code&gt; for its document listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어, 다음 코드를 사용하여 문서 &lt;code&gt;d&lt;/code&gt; 에서 문서 리스너를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="26d27a04e46d3e46e8efb79e1d5e639bd602c641" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a list model &lt;code&gt;m&lt;/code&gt; for its list data listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어, 다음 코드를 사용하여 목록 모델 &lt;code&gt;m&lt;/code&gt; 에서 목록 데이터 수신기를 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="647a5d57b42c42b2394002e1748ed267a12f3782" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;listenerType&lt;/code&gt; argument with a class literal, such as &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt;. For example, you can query a model &lt;code&gt;m&lt;/code&gt; for its table model listeners with the following code:</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener.class&lt;/code&gt; Listener.class 와 같은 클래스 리터럴로 &lt;code&gt;listenerType&lt;/code&gt; 인수를 지정할 수 있습니다 . 예를 들어 다음 코드를 사용하여 테이블 모델 수신기에 대한 모델 &lt;code&gt;m&lt;/code&gt; 을 쿼리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e0183a9c023470ed7687fcad6aff7163435c7d6" translate="yes" xml:space="preserve">
          <source>You can then write code that uses the &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; operators to test enumeration values; for example:</source>
          <target state="translated">그런 다음 &lt;code&gt;==&lt;/code&gt; 및 &lt;code&gt;!=&lt;/code&gt; 연산자를 사용하여 열거 값을 테스트 하는 코드를 작성할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="68bf2d505943605f240b5d18e5d4441a796abfec" translate="yes" xml:space="preserve">
          <source>You can use a DateFormat to parse also.</source>
          <target state="translated">DateFormat을 사용하여 구문 분석 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="16612277e0b51cd3dcf903146cc1889fcb16a557" translate="yes" xml:space="preserve">
          <source>You can use a predefined encoding by referring to one of the static objects created by this class, such as &lt;code&gt;PCM_SIGNED&lt;/code&gt; or &lt;code&gt;PCM_UNSIGNED&lt;/code&gt;. Service providers can create new encodings, such as compressed audio formats, and make these available through the &lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;AudioSystem&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;code&gt;PCM_SIGNED&lt;/code&gt; 또는 &lt;code&gt;PCM_UNSIGNED&lt;/code&gt; 와 같이이 클래스에서 생성 된 정적 개체 중 하나를 참조하여 미리 정의 된 인코딩을 사용할 수 있습니다 . 서비스 공급자는 압축 된 오디오 형식과 같은 새 인코딩을 만들고 &lt;a href=&quot;audiosystem&quot;&gt; &lt;code&gt;AudioSystem&lt;/code&gt; &lt;/a&gt; 클래스를 통해 사용할 수 있도록 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cd63ce394d6a7de750f9c8786c48b7af94f53eb3" translate="yes" xml:space="preserve">
          <source>You can use a predefined encoding by referring to one of the static objects created by this class, such as PCM_SIGNED or PCM_UNSIGNED. Service providers can create new encodings, such as compressed audio formats, and make these available through the &lt;code&gt;&lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;AudioSystem&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="translated">PCM_SIGNED 또는 PCM_UNSIGNED와 같이이 클래스로 작성된 정적 오브젝트 중 하나를 참조하여 사전 정의 된 인코딩을 사용할 수 있습니다. 서비스 제공 업체는 압축 오디오 형식과 같은 새로운 인코딩을 만들고 &lt;code&gt;&lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;AudioSystem&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 클래스를 통해이를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="84f83d4e741af490a60309550cdbb081af9757cd" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;RMISocketFactory&lt;/code&gt; class to create a server socket that is bound to a specific address, restricting the origin of requests. For example, the following code implements a socket factory that binds server sockets to an IPv4 loopback address. This restricts RMI to processing requests only from the local host.</source>
          <target state="translated">당신은 사용할 수 있습니다 &lt;code&gt;RMISocketFactory&lt;/code&gt; 를 요청의 기원을 제한, 특정 주소에 바인딩 된 서버 소켓을 작성하는 클래스. 예를 들어 다음 코드는 서버 소켓을 IPv4 루프백 주소에 바인딩하는 소켓 팩토리를 구현합니다. 이는 RMI를 로컬 호스트의 요청 만 처리하도록 제한합니다.</target>
        </trans-unit>
        <trans-unit id="f152de083684ba8ec6ecc7077bc264540ddc0337" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;getAvailableIDs&lt;/code&gt; method to iterate through all the supported time zone IDs. You can then choose a supported ID to get a &lt;code&gt;TimeZone&lt;/code&gt;. If the time zone you want is not represented by one of the supported IDs, then a custom time zone ID can be specified to produce a TimeZone. The syntax of a custom time zone ID is:</source>
          <target state="translated">&lt;code&gt;getAvailableIDs&lt;/code&gt; 메소드를 사용하여 지원되는 모든 시간대 ID를 반복 할 수 있습니다 . 그런 다음 지원되는 ID를 선택하여 &lt;code&gt;TimeZone&lt;/code&gt; 을 얻을 수 있습니다 . 원하는 시간대가 지원되는 ID 중 하나로 표시되지 않으면 사용자 정의 시간대 ID를 지정하여 시간대를 생성 할 수 있습니다. 맞춤 시간대 ID의 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="07ceb73aa197f00c410fd308c978ae6ee240aa29" translate="yes" xml:space="preserve">
          <source>You can use the same processing instructions at different times to print different data. For example, you could set your default processing instructions to: US letter-sized paper, double sided, stapled. Whenever you print a job, it prints with these settings, unless you explicitly override them.</source>
          <target state="translated">다른 시간에 동일한 처리 지침을 사용하여 다른 데이터를 인쇄 할 수 있습니다. 예를 들어, 기본 처리 지침을 미국 레터 크기 용지, 양면, 스테이플로 설정할 수 있습니다. 작업을 인쇄 할 때마다 명시 적으로 무시하지 않는 한이 설정으로 인쇄됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
