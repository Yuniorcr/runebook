<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="bee0760fe5e783edd2bde04ce6514f1bd4ac2344" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;Handler&lt;/code&gt; publishes log records to &lt;code&gt;System.err&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Handler&lt;/code&gt; 는 로그 레코드를 &lt;code&gt;System.err&lt;/code&gt; 에 공개 합니다.</target>
        </trans-unit>
        <trans-unit id="518dc12e789b63d9602f3b36b0af20a614700005" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;Handler&lt;/code&gt; publishes log records to &lt;code&gt;System.err&lt;/code&gt;. By default the &lt;code&gt;SimpleFormatter&lt;/code&gt; is used to generate brief summaries.</source>
          <target state="translated">이 &lt;code&gt;Handler&lt;/code&gt; 는 로그 레코드를 &lt;code&gt;System.err&lt;/code&gt; 에 공개 합니다. 기본적으로 &lt;code&gt;SimpleFormatter&lt;/code&gt; 는 간단한 요약을 생성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2099dfed59bd60c1207a4fbd2b0ce6486738f1f8" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;LayoutManager&lt;/code&gt; method does nothing.</source>
          <target state="translated">이 &lt;code&gt;LayoutManager&lt;/code&gt; 메서드는 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d43d133bc0f259fb472983e21bba43b885bd2cd4" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;LayoutManager&lt;/code&gt; method does nothing. There isn't any per-child state.</source>
          <target state="translated">이 &lt;code&gt;LayoutManager&lt;/code&gt; 메서드는 아무 작업도 수행하지 않습니다. 자녀 당 상태가 없습니다.</target>
        </trans-unit>
        <trans-unit id="168c043d448568434dcf11b293c2f449d613e439" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;LayoutManager&lt;/code&gt; method does nothing. We're only managing a single child and there's no support for layout constraints.</source>
          <target state="translated">이 &lt;code&gt;LayoutManager&lt;/code&gt; 메서드는 아무 작업도 수행하지 않습니다. 우리는 단일 자식 만 관리하고 있으며 레이아웃 제약은 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ecfcaabadcdd0d899b4ce92d905c9bba68ef711e" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;Line2D&lt;/code&gt; represents a line segment in &lt;code&gt;(x,y)&lt;/code&gt; coordinate space.</source>
          <target state="translated">이 &lt;code&gt;Line2D&lt;/code&gt; 는 &lt;code&gt;(x,y)&lt;/code&gt; 좌표 공간의 선분을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b706cbe87953b450fb5b15adf45de91fa623ebcd" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;MemoryMXBean&lt;/code&gt; is a &lt;a href=&quot;../../../javax/management/notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; that emits two types of memory &lt;a href=&quot;../../../javax/management/notification&quot;&gt;&lt;code&gt;notifications&lt;/code&gt;&lt;/a&gt; if any one of the memory pools supports a &lt;a href=&quot;memorypoolmxbean#UsageThreshold&quot;&gt;usage threshold&lt;/a&gt; or a &lt;a href=&quot;memorypoolmxbean#CollectionThreshold&quot;&gt;collection usage threshold&lt;/a&gt; which can be determined by calling the &lt;a href=&quot;memorypoolmxbean#isUsageThresholdSupported()&quot;&gt;&lt;code&gt;MemoryPoolMXBean.isUsageThresholdSupported()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;memorypoolmxbean#isCollectionUsageThresholdSupported()&quot;&gt;&lt;code&gt;MemoryPoolMXBean.isCollectionUsageThresholdSupported()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">이 &lt;code&gt;MemoryMXBean&lt;/code&gt; 은 메모리 풀 중 하나가 &lt;a href=&quot;memorypoolmxbean#isUsageThresholdSupported()&quot;&gt; &lt;code&gt;MemoryPoolMXBean.isUsageThresholdSupported()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;memorypoolmxbean#isCollectionUsageThresholdSupported()&quot;&gt; &lt;code&gt;MemoryPoolMXBean.isCollectionUsageThresholdSupported()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 결정할 수있는 &lt;a href=&quot;memorypoolmxbean#CollectionThreshold&quot;&gt;사용 임계 &lt;/a&gt;&lt;a href=&quot;memorypoolmxbean#UsageThreshold&quot;&gt;값&lt;/a&gt; 또는 콜렉션 사용 임계 값 을 지원하는 경우 두 가지 유형의 메모리 &lt;a href=&quot;../../../javax/management/notification&quot;&gt; &lt;code&gt;notifications&lt;/code&gt; &lt;/a&gt; 을 방출 하는 &lt;a href=&quot;../../../javax/management/notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="36046ccb9dcb8ece08562c1ab81b5a9c5364f7f4" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;MemoryMXBean&lt;/code&gt; is a &lt;a href=&quot;../../../javax/management/notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; that emits two types of memory &lt;a href=&quot;../../../javax/management/notification&quot;&gt;&lt;code&gt;notifications&lt;/code&gt;&lt;/a&gt; if any one of the memory pools supports a &lt;a href=&quot;memorypoolmxbean#UsageThreshold&quot;&gt;usage threshold&lt;/a&gt; or a &lt;a href=&quot;memorypoolmxbean#CollectionThreshold&quot;&gt;collection usage threshold&lt;/a&gt; which can be determined by calling the &lt;a href=&quot;memorypoolmxbean#isUsageThresholdSupported--&quot;&gt;&lt;code&gt;MemoryPoolMXBean.isUsageThresholdSupported()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;memorypoolmxbean#isCollectionUsageThresholdSupported--&quot;&gt;&lt;code&gt;MemoryPoolMXBean.isCollectionUsageThresholdSupported()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">이 &lt;code&gt;MemoryMXBean&lt;/code&gt; 은 메모리 풀 중 하나가 &lt;a href=&quot;memorypoolmxbean#isUsageThresholdSupported--&quot;&gt; &lt;code&gt;MemoryPoolMXBean.isUsageThresholdSupported()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;memorypoolmxbean#isCollectionUsageThresholdSupported--&quot;&gt; &lt;code&gt;MemoryPoolMXBean.isCollectionUsageThresholdSupported()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 판별 할 수있는 &lt;a href=&quot;memorypoolmxbean#CollectionThreshold&quot;&gt;사용 임계 &lt;/a&gt;&lt;a href=&quot;memorypoolmxbean#UsageThreshold&quot;&gt;값&lt;/a&gt; 또는 콜렉션 사용 임계 값 을 지원하는 경우 두 가지 유형의 메모리 &lt;a href=&quot;../../../javax/management/notification&quot;&gt; &lt;code&gt;notifications&lt;/code&gt; &lt;/a&gt; 발행 하는 &lt;a href=&quot;../../../javax/management/notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="dbfd10be837fd66a25f87a3c9bcbaf496fb61d6e" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;Paint&lt;/code&gt; interface defines how color patterns can be generated for &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; operations.</source>
          <target state="translated">이 &lt;code&gt;Paint&lt;/code&gt; 인터페이스는 &lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt; 작업을 위해 색상 패턴을 생성하는 방법을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="78c637faacd328ca53aeea05a0a7349ff241cfd1" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;Paint&lt;/code&gt; interface defines how color patterns can be generated for &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; operations. A class implementing the &lt;code&gt;Paint&lt;/code&gt; interface is added to the &lt;code&gt;Graphics2D&lt;/code&gt; context in order to define the color pattern used by the &lt;code&gt;draw&lt;/code&gt; and &lt;code&gt;fill&lt;/code&gt; methods.</source>
          <target state="translated">이 &lt;code&gt;Paint&lt;/code&gt; 인터페이스는 &lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt; 작업을 위해 색상 패턴을 생성하는 방법을 정의합니다 . &lt;code&gt;draw&lt;/code&gt; 및 &lt;code&gt;fill&lt;/code&gt; 메서드 에서 사용하는 색상 패턴을 정의하기 위해 &lt;code&gt;Paint&lt;/code&gt; 인터페이스를 구현하는 클래스 가 &lt;code&gt;Graphics2D&lt;/code&gt; 컨텍스트에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="6678d92b50e11f2ea00df45e2e39402f5cc8d0a0" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;PrinterURI&lt;/code&gt; attribute's underlying &lt;code&gt;URI&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt;'s underlying &lt;code&gt;URI&lt;/code&gt; are equal.</source>
          <target state="translated">이 &lt;code&gt;PrinterURI&lt;/code&gt; 속성의 기본 &lt;code&gt;URI&lt;/code&gt; 와 &lt;code&gt;object&lt;/code&gt; 의 기본 &lt;code&gt;URI&lt;/code&gt; 는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="02ce9708b0da795d841ecf6f3a805d3bad62b7cd" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;RuntimePermission&lt;/code&gt; is required to be granted to classes which subclass and implement &lt;code&gt;java.util.spi.LocaleServiceProvider&lt;/code&gt;. The permission is checked during invocation of the abstract base class constructor. This permission ensures trust in classes which implement this security-sensitive provider mechanism.</source>
          <target state="translated">이 &lt;code&gt;RuntimePermission&lt;/code&gt; 은 &lt;code&gt;java.util.spi.LocaleServiceProvider&lt;/code&gt; 를 서브 클래스하고 구현하는 클래스에 부여되어야 합니다. 권한은 추상 기본 클래스 생성자를 호출하는 동안 확인됩니다. 이 권한은 보안에 민감한 공급자 메커니즘을 구현하는 클래스에 대한 신뢰를 보장합니다.</target>
        </trans-unit>
        <trans-unit id="4d9bb7a9cecd8adcccd3d1bf4c3fb481e4a07b50" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;RuntimePermission&lt;/code&gt; is required to be granted to classes which subclass or call methods on &lt;code&gt;java.lang.System.LoggerFinder&lt;/code&gt;. The permission is checked during invocation of the abstract base class constructor, as well as on the invocation of its public methods. This permission ensures trust in classes which provide loggers to system classes.</source>
          <target state="translated">이 &lt;code&gt;RuntimePermission&lt;/code&gt; 은 &lt;code&gt;java.lang.System.LoggerFinder&lt;/code&gt; 의 메소드를 호출하거나 서브 클래스하는 클래스에 부여되어야 합니다. 권한은 추상 기본 클래스 생성자를 호출하는 동안뿐만 아니라 공용 메서드를 호출 할 때 확인됩니다. 이 권한은 시스템 클래스에 로거를 제공하는 클래스에 대한 신뢰를 보장합니다.</target>
        </trans-unit>
        <trans-unit id="5e8851464006460280f8fad4025a685c3a95af71" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;StackWalker&lt;/code&gt; is configured to skip all &lt;a href=&quot;stackwalker.option#SHOW_HIDDEN_FRAMES&quot;&gt;hidden frames&lt;/a&gt; and no &lt;a href=&quot;stackwalker.option#RETAIN_CLASS_REFERENCE&quot;&gt;class reference&lt;/a&gt; is retained.</source>
          <target state="translated">이 &lt;code&gt;StackWalker&lt;/code&gt; 는 모든 &lt;a href=&quot;stackwalker.option#SHOW_HIDDEN_FRAMES&quot;&gt;숨겨진 프레임&lt;/a&gt; 을 건너 뛰도록 구성되며 &lt;a href=&quot;stackwalker.option#RETAIN_CLASS_REFERENCE&quot;&gt;클래스 참조&lt;/a&gt; 가 유지 되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b2df064c410fd27f0e63fabab24d4a2bd0b9a0c2" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;StringJoiner&lt;/code&gt;</source>
          <target state="translated">이 &lt;code&gt;StringJoiner&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9e558e7263cf30635484236c95f403ac1121e48" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;Subject&lt;/code&gt; class implements &lt;code&gt;Serializable&lt;/code&gt;. While the Principals associated with the &lt;code&gt;Subject&lt;/code&gt; are serialized, the credentials associated with the &lt;code&gt;Subject&lt;/code&gt; are not. Note that the &lt;code&gt;java.security.Principal&lt;/code&gt; class does not implement &lt;code&gt;Serializable&lt;/code&gt;. Therefore all concrete &lt;code&gt;Principal&lt;/code&gt; implementations associated with Subjects must implement &lt;code&gt;Serializable&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Subject&lt;/code&gt; 클래스는 &lt;code&gt;Serializable&lt;/code&gt; 을 구현 합니다. &lt;code&gt;Subject&lt;/code&gt; 와 연관된 프린시 펄 은 직렬화되지만 &lt;code&gt;Subject&lt;/code&gt; 와 연관된 신임 정보는 직렬화 되지 않습니다. 참고는 것을 &lt;code&gt;java.security.Principal&lt;/code&gt; 클래스는 구현하지 않습니다 &lt;code&gt;Serializable&lt;/code&gt; . 따라서 주제와 관련된 모든 구체적인 &lt;code&gt;Principal&lt;/code&gt; 구현은 &lt;code&gt;Serializable&lt;/code&gt; 을 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fd6f44b1f76fd84aca796b3a5c539664fb6a7653" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;SwingWorker&lt;/code&gt; will be the source for any generated events.</source>
          <target state="translated">이 &lt;code&gt;SwingWorker&lt;/code&gt; 는 생성 된 이벤트의 소스가됩니다.</target>
        </trans-unit>
        <trans-unit id="5363902454f4e78c7f48d453ce29f3700a15bd0f" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;Transferable&lt;/code&gt; properly supports &lt;code&gt;DataFlavor.stringFlavor&lt;/code&gt; and all equivalent flavors. Support for &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt; and all equivalent flavors is &lt;b&gt;deprecated&lt;/b&gt;. No other &lt;code&gt;DataFlavor&lt;/code&gt;s are supported.</source>
          <target state="translated">이 &lt;code&gt;Transferable&lt;/code&gt; 은 &lt;code&gt;DataFlavor.stringFlavor&lt;/code&gt; 및 모든 동등한 특징을 올바르게 지원 합니다 . &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt; 및 모든 동등한 특징에 대한 지원 은 &lt;b&gt;더 이상 사용되지 않습니다&lt;/b&gt; . 다른 &lt;code&gt;DataFlavor&lt;/code&gt; 는 지원 되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="523d5232d1e652113b54d0c9c09ee2197b57f375" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;URI&lt;/code&gt; attribute's underlying &lt;code&gt;URI&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt;'s underlying &lt;code&gt;URI&lt;/code&gt; are equal.</source>
          <target state="translated">이 &lt;code&gt;URI&lt;/code&gt; 속성의 기본 &lt;code&gt;URI&lt;/code&gt; 와 &lt;code&gt;object&lt;/code&gt; 의 기본 &lt;code&gt;URI&lt;/code&gt; 가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="62db0d8a65e44d082a42520a299db77e5cc95323" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;enum&lt;/code&gt; is intended to replace the integer-based enumeration of rounding mode constants in &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;bigdecimal#ROUND_UP&quot;&gt;&lt;code&gt;BigDecimal.ROUND_UP&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;bigdecimal#ROUND_DOWN&quot;&gt;&lt;code&gt;BigDecimal.ROUND_DOWN&lt;/code&gt;&lt;/a&gt;, etc. ).</source>
          <target state="translated">이 &lt;code&gt;enum&lt;/code&gt; 은 &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;bigdecimal#ROUND_UP&quot;&gt; &lt;code&gt;BigDecimal.ROUND_UP&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;bigdecimal#ROUND_DOWN&quot;&gt; &lt;code&gt;BigDecimal.ROUND_DOWN&lt;/code&gt; &lt;/a&gt; 등) 에서 반올림 모드 상수의 정수 기반 열거를 대체하기위한 것 입니다.</target>
        </trans-unit>
        <trans-unit id="1f2d20f5d20e9aafea63ff46a3fe3aa6165a7d79" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;read&lt;/code&gt; method cannot block.</source>
          <target state="translated">이 &lt;code&gt;read&lt;/code&gt; 방법은 차단할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3399d7742a2399b8cdd3a3ebe04c939353b3f909" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;readConfiguration&lt;/code&gt; method should only be used for initializing the configuration during LogManager initialization or used with the &quot;java.util.logging.config.class&quot; property. When this method is called after loggers have been created, all existing loggers will be &lt;a href=&quot;#reset()&quot;&gt;reset&lt;/a&gt;. Then any existing loggers that have a level property specified in the given input stream will be &lt;a href=&quot;logger#setLevel(java.util.logging.Level)&quot;&gt;set&lt;/a&gt; to the specified log level.</source>
          <target state="translated">이 &lt;code&gt;readConfiguration&lt;/code&gt; 메서드는 LogManager 초기화 중 구성을 초기화하는 데만 사용하거나 &quot;java.util.logging.config.class&quot;속성과 함께 사용해야합니다. 로거가 생성 된 후이 메서드가 호출되면 기존의 모든 로거가 &lt;a href=&quot;#reset()&quot;&gt;재설정&lt;/a&gt; 됩니다. 그런 다음 주어진 입력 스트림에 지정된 레벨 속성을 가진 기존 로거 는 지정된 로그 레벨 로 &lt;a href=&quot;logger#setLevel(java.util.logging.Level)&quot;&gt;설정&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="ce8f67a3540329ced869ff9cb987d21bb060f944" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;readConfiguration&lt;/code&gt; method should only be used for initializing the configuration during LogManager initialization or used with the &quot;java.util.logging.config.class&quot; property. When this method is called after loggers have been created, and the &quot;java.util.logging.config.class&quot; system property is not set, all existing loggers will be &lt;a href=&quot;#reset()&quot;&gt;reset&lt;/a&gt;. Then any existing loggers that have a level property specified in the new configuration stream will be &lt;a href=&quot;logger#setLevel(java.util.logging.Level)&quot;&gt;set&lt;/a&gt; to the specified log level.</source>
          <target state="translated">이 &lt;code&gt;readConfiguration&lt;/code&gt; 메서드는 LogManager 초기화 중 구성을 초기화하는 데만 사용하거나 &quot;java.util.logging.config.class&quot;속성과 함께 사용해야합니다. 로거가 생성 된 후이 메서드가 호출되고 &quot;java.util.logging.config.class&quot;시스템 속성이 설정되지 않은 경우 기존의 모든 로거가 &lt;a href=&quot;#reset()&quot;&gt;재설정&lt;/a&gt; 됩니다. 그런 다음 새 구성 스트림에 지정된 수준 속성이있는 기존 로거 는 지정된 로그 수준 으로 &lt;a href=&quot;logger#setLevel(java.util.logging.Level)&quot;&gt;설정&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="d991db36cd228397e6396c4df9878695fd5ea145" translate="yes" xml:space="preserve">
          <source>This API defines two interface objects called &lt;a href=&quot;source&quot;&gt;&lt;code&gt;Source&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;. In order to pass Source and Result objects to the interfaces, concrete classes must be used. The following concrete representations are defined for each of these objects: &lt;a href=&quot;stream/streamsource&quot;&gt;&lt;code&gt;StreamSource&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stream/streamresult&quot;&gt;&lt;code&gt;StreamResult&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stax/staxsource&quot;&gt;&lt;code&gt;StAXSource&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stax/staxresult&quot;&gt;&lt;code&gt;StAXResult&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;sax/saxsource&quot;&gt;&lt;code&gt;SAXSource&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sax/saxresult&quot;&gt;&lt;code&gt;SAXResult&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;dom/domsource&quot;&gt;&lt;code&gt;DOMSource&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;dom/domresult&quot;&gt;&lt;code&gt;DOMResult&lt;/code&gt;&lt;/a&gt;. Each of these objects defines a FEATURE string (which is in the form of a URL), which can be passed into &lt;a href=&quot;transformerfactory#getFeature(java.lang.String)&quot;&gt;&lt;code&gt;TransformerFactory.getFeature(java.lang.String)&lt;/code&gt;&lt;/a&gt; to see if the given type of Source or Result object is supported. For instance, to test if a DOMSource and a StreamResult is supported, you can apply the following test.</source>
          <target state="translated">이 API는 &lt;a href=&quot;source&quot;&gt; &lt;code&gt;Source&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; 라는 두 개의 인터페이스 객체를 정의합니다 . Source 및 Result 개체를 인터페이스에 전달하려면 구체적인 클래스를 사용해야합니다. 이러한 각 개체에 대해 &lt;a href=&quot;stream/streamsource&quot;&gt; &lt;code&gt;StreamSource&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;stream/streamresult&quot;&gt; &lt;code&gt;StreamResult&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;stax/staxsource&quot;&gt; &lt;code&gt;StAXSource&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;stax/staxresult&quot;&gt; &lt;code&gt;StAXResult&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;sax/saxsource&quot;&gt; &lt;code&gt;SAXSource&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;sax/saxresult&quot;&gt; &lt;code&gt;SAXResult&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;dom/domsource&quot;&gt; &lt;code&gt;DOMSource&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;dom/domresult&quot;&gt; &lt;code&gt;DOMResult&lt;/code&gt; 의&lt;/a&gt; 구체적인 표현이 정의됩니다 . 이러한 각 객체는 &lt;a href=&quot;transformerfactory#getFeature(java.lang.String)&quot;&gt; &lt;code&gt;TransformerFactory.getFeature(java.lang.String)&lt;/code&gt; &lt;/a&gt; 로 전달 될 수있는 FEATURE 문자열 (URL 형식 )을 정의합니다.지정된 유형의 Source 또는 Result 개체가 지원되는지 확인합니다. 예를 들어 DOMSource 및 StreamResult가 지원되는지 테스트하려면 다음 테스트를 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5849aff50eb50caaa416b29eb8ceddf62065ba25" translate="yes" xml:space="preserve">
          <source>This API provides XML/Java type mappings.</source>
          <target state="translated">이 API는 XML / Java 유형 매핑을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="fb06f97a093b16c944a96b6ca17a8d22c3e28b44" translate="yes" xml:space="preserve">
          <source>This Configuration instance will only have a Provider if it was obtained via a call to &lt;code&gt;Configuration.getInstance&lt;/code&gt;. Otherwise this method returns null.</source>
          <target state="translated">이 메소드를 사용해 취득되었을 경우에이 구성 인스턴스 만 제공이됩니다 &lt;code&gt;Configuration.getInstance&lt;/code&gt; . 그렇지 않으면이 메소드는 널을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c22e50bd9aa1f0422f432a320935dd0d1f877f98" translate="yes" xml:space="preserve">
          <source>This Configuration instance will only have a type if it was obtained via a call to &lt;code&gt;Configuration.getInstance&lt;/code&gt;. Otherwise this method returns null.</source>
          <target state="translated">이 메소드를 사용해 취득되었을 경우에이 구성 인스턴스는 유형이있을 것이다 &lt;code&gt;Configuration.getInstance&lt;/code&gt; . 그렇지 않으면이 메소드는 널을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8bc6889ca1b0f8f3565d8930a4e873adaa859028" translate="yes" xml:space="preserve">
          <source>This Configuration instance will only have parameters if it was obtained via a call to &lt;code&gt;Configuration.getInstance&lt;/code&gt;. Otherwise this method returns null.</source>
          <target state="translated">이 메소드를 사용해 취득되었을 경우에이 구성 인스턴스는 매개 변수가됩니다 &lt;code&gt;Configuration.getInstance&lt;/code&gt; . 그렇지 않으면이 메소드는 널을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="12a42e83700f895cae61540b6259e88c2b2aa2d7" translate="yes" xml:space="preserve">
          <source>This DOM Level 3 method is not supported for &lt;code&gt;IIOMetadataNode&lt;/code&gt; and will throw a &lt;code&gt;DOMException&lt;/code&gt;.</source>
          <target state="translated">이 DOM 레벨 3 방법은 지원되지 않습니다 &lt;code&gt;IIOMetadataNode&lt;/code&gt; 를 하고 발생합니다 &lt;code&gt;DOMException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db26478562c0a00b955f5566a2f363d5b5eb093d" translate="yes" xml:space="preserve">
          <source>This ID uniquely defines this object. The format of an offset based ID is defined by &lt;a href=&quot;zoneoffset#getId()&quot;&gt;&lt;code&gt;ZoneOffset.getId()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 ID는이 개체를 고유하게 정의합니다. 오프셋 기반 ID의 형식은 &lt;a href=&quot;zoneoffset#getId()&quot;&gt; &lt;code&gt;ZoneOffset.getId()&lt;/code&gt; &lt;/a&gt; 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="88cddc5e47c86d31fa8b49379a932b299b096755" translate="yes" xml:space="preserve">
          <source>This ID uniquely defines this object. The format of an offset based ID is defined by &lt;a href=&quot;zoneoffset#getId--&quot;&gt;&lt;code&gt;ZoneOffset.getId()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 ID는이 객체를 고유하게 정의합니다. 오프셋 기반 ID의 형식은 &lt;a href=&quot;zoneoffset#getId--&quot;&gt; &lt;code&gt;ZoneOffset.getId()&lt;/code&gt; &lt;/a&gt; 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="d11b672098a927855c0e4006aad3e98c4704db5f" translate="yes" xml:space="preserve">
          <source>This LogManager object:</source>
          <target state="translated">이 LogManager 객체 :</target>
        </trans-unit>
        <trans-unit id="3f82ade7f159cc7f0a21e38b17e77a5d79429c06" translate="yes" xml:space="preserve">
          <source>This LogManager.</source>
          <target state="translated">이 LogManager.</target>
        </trans-unit>
        <trans-unit id="9a4b9245f566d6174f8af40ceb307bc6ac85ee54" translate="yes" xml:space="preserve">
          <source>This MessageDigest class provides applications the functionality of a message digest algorithm, such as SHA-1 or SHA-256.</source>
          <target state="translated">이 MessageDigest 클래스는 SHA-1 또는 SHA-256과 같은 메시지 요약 알고리즘의 기능을 응용 프로그램에 제공합니다.</target>
        </trans-unit>
        <trans-unit id="dfc2d27c227ae660aca7a9180063fa625e6efb62" translate="yes" xml:space="preserve">
          <source>This MessageDigest class provides applications the functionality of a message digest algorithm, such as SHA-1 or SHA-256. Message digests are secure one-way hash functions that take arbitrary-sized data and output a fixed-length hash value.</source>
          <target state="translated">이 MessageDigest 클래스는 SHA-1 또는 SHA-256과 같은 메시지 요약 알고리즘의 기능을 응용 프로그램에 제공합니다. 메시지 요약은 임의 크기의 데이터를 가져와 고정 길이 해시 값을 출력하는 안전한 단방향 해시 함수입니다.</target>
        </trans-unit>
        <trans-unit id="87bd004e92d6136db7b100806731ffb0e4a8ae69" translate="yes" xml:space="preserve">
          <source>This Policy instance will only have a Provider if it was obtained via a call to &lt;code&gt;Policy.getInstance&lt;/code&gt;. Otherwise this method returns null.</source>
          <target state="translated">이 Policy 인스턴스는 &lt;code&gt;Policy.getInstance&lt;/code&gt; 호출을 통해 얻은 경우에만 제공자를 갖습니다 . 그렇지 않으면이 메소드는 널을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="bac1288a600ecf0e061da22889c8ff35d4287de5" translate="yes" xml:space="preserve">
          <source>This Policy instance will only have a type if it was obtained via a call to &lt;code&gt;Policy.getInstance&lt;/code&gt;. Otherwise this method returns null.</source>
          <target state="translated">이 Policy 인스턴스는 &lt;code&gt;Policy.getInstance&lt;/code&gt; 호출을 통해 얻은 경우에만 유형을 갖습니다 . 그렇지 않으면이 메소드는 널을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="73075a777314e91e010444cf463c609e4a101022" translate="yes" xml:space="preserve">
          <source>This Policy instance will only have parameters if it was obtained via a call to &lt;code&gt;Policy.getInstance&lt;/code&gt;. Otherwise this method returns null.</source>
          <target state="translated">이 Policy 인스턴스는 &lt;code&gt;Policy.getInstance&lt;/code&gt; 호출을 통해 얻은 경우에만 매개 변수를 갖습니다 . 그렇지 않으면이 메소드는 널을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="3f1c7e734c6ce43bfd074f3059f9cc9f53d9b23e" translate="yes" xml:space="preserve">
          <source>This PrinterURI attribute's underlying URI and &lt;code&gt;object&lt;/code&gt;'s underlying URI are equal.</source>
          <target state="translated">이 PrinterURI 속성의 기본 URI와 &lt;code&gt;object&lt;/code&gt; 의 기본 URI가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="a23acb3515bb3ced0191a146de6afa2ce3788fa7" translate="yes" xml:space="preserve">
          <source>This ProtectionDomain class encapsulates the characteristics of a domain, which encloses a set of classes whose instances are granted a set of permissions when being executed on behalf of a given set of Principals.</source>
          <target state="translated">이 ProtectionDomain 클래스는 도메인의 특성을 캡슐화합니다.이 클래스는, 지정된 Principal 세트를 대신해 실행되는 경우 인스턴스에 일련의 액세스권이 부여되는 클래스 세트를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="29af310c9fce70819ae50a670ac149e1de1ccad3" translate="yes" xml:space="preserve">
          <source>This UI in uninstalled</source>
          <target state="translated">제거 된이 UI</target>
        </trans-unit>
        <trans-unit id="c3aa809b1bad0e1ae553bc8ccc658fd593e6cbaf" translate="yes" xml:space="preserve">
          <source>This URI attribute's underlying URI and &lt;code&gt;object&lt;/code&gt;'s underlying URI are equal.</source>
          <target state="translated">이 URI 속성의 기본 URI와 &lt;code&gt;object&lt;/code&gt; 의 기본 URI가 같습니다.</target>
        </trans-unit>
        <trans-unit id="875e461bc3f94d0c222417c8135b6967ca611a63" translate="yes" xml:space="preserve">
          <source>This URI, when present, can be used as the &lt;a href=&quot;../../security/codesource#getLocation()&quot;&gt;location&lt;/a&gt; value of a &lt;a href=&quot;../../security/codesource&quot;&gt;&lt;code&gt;CodeSource&lt;/code&gt;&lt;/a&gt; so that a module's classes can be granted specific permissions when loaded by a &lt;a href=&quot;../../security/secureclassloader&quot;&gt;&lt;code&gt;SecureClassLoader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 URI가 있으면 &lt;a href=&quot;../../security/codesource&quot;&gt; &lt;code&gt;CodeSource&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;../../security/codesource#getLocation()&quot;&gt;위치&lt;/a&gt; 값으로 사용할 수 있으므로 &lt;a href=&quot;../../security/secureclassloader&quot;&gt; &lt;code&gt;SecureClassLoader&lt;/code&gt; 에&lt;/a&gt; 의해로드 될 때 모듈의 클래스에 특정 권한을 부여 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="18edaa887dc9ea2672d3b6099fd36ec7c309b3a6" translate="yes" xml:space="preserve">
          <source>This WebSocket will invoke &lt;code&gt;onText&lt;/code&gt;, &lt;code&gt;onBinary&lt;/code&gt;, &lt;code&gt;onPing&lt;/code&gt;, &lt;code&gt;onPong&lt;/code&gt; or &lt;code&gt;onClose&lt;/code&gt; methods on the associated listener (i.e. receive methods) up to &lt;code&gt;n&lt;/code&gt; more times.</source>
          <target state="translated">이 WebSocket은 연결된 리스너 (즉, 수신 메소드)에서 &lt;code&gt;onText&lt;/code&gt; , &lt;code&gt;onBinary&lt;/code&gt; , &lt;code&gt;onPing&lt;/code&gt; , &lt;code&gt;onPong&lt;/code&gt; 또는 &lt;code&gt;onClose&lt;/code&gt; 메소드를 최대 &lt;code&gt;n&lt;/code&gt; 번 더 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="ab4d346ab9250aae9f84271e3af7960e2d3cb5b3" translate="yes" xml:space="preserve">
          <source>This abstract class defines a lookup table object.</source>
          <target state="translated">이 추상 클래스는 조회 테이블 객체를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="0fd35608423c589f93a23e61c8b14eed277b7ae1" translate="yes" xml:space="preserve">
          <source>This abstract class defines a lookup table object. ByteLookupTable and ShortLookupTable are subclasses, which contain byte and short data, respectively. A lookup table contains data arrays for one or more bands (or components) of an image (for example, separate arrays for R, G, and B), and it contains an offset which will be subtracted from the input values before indexing into the arrays. This allows an array smaller than the native data size to be provided for a constrained input. If there is only one array in the lookup table, it will be applied to all bands. All arrays must be the same size.</source>
          <target state="translated">이 추상 클래스는 조회 테이블 객체를 정의합니다. ByteLookupTable 및 ShortLookupTable은 각각 바이트 및 짧은 데이터를 포함하는 하위 클래스입니다. 조회 테이블에는 이미지의 하나 이상의 밴드 (또는 구성 요소) (예 : R, G, B에 대한 별도의 배열)에 대한 데이터 배열이 포함되며, 여기에는 배열. 따라서 제한된 입력에 대해 네이티브 데이터 크기보다 작은 배열을 제공 할 수 있습니다. 룩업 테이블에 배열이 하나만있는 경우 모든 밴드에 적용됩니다. 모든 배열은 크기가 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="8660495f8bad9a9e2259bcb94b0b7414687a3a8f" translate="yes" xml:space="preserve">
          <source>This abstract class defines an interface for extracting samples of pixels in an image.</source>
          <target state="translated">이 추상 클래스는 이미지에서 픽셀 샘플을 추출하기위한 인터페이스를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="2c30f111aa2085567f1065c878c1629ac35a56e5" translate="yes" xml:space="preserve">
          <source>This abstract class defines an interface for extracting samples of pixels in an image. All image data is expressed as a collection of pixels. Each pixel consists of a number of samples. A sample is a datum for one band of an image and a band consists of all samples of a particular type in an image. For example, a pixel might contain three samples representing its red, green and blue components. There are three bands in the image containing this pixel. One band consists of all the red samples from all pixels in the image. The second band consists of all the green samples and the remaining band consists of all of the blue samples. The pixel can be stored in various formats. For example, all samples from a particular band can be stored contiguously or all samples from a single pixel can be stored contiguously.</source>
          <target state="translated">이 추상 클래스는 이미지에서 픽셀 샘플을 추출하기위한 인터페이스를 정의합니다. 모든 이미지 데이터는 픽셀 모음으로 표현됩니다. 각 픽셀은 여러 샘플로 구성됩니다. 샘플은 이미지의 한 밴드에 대한 기준이며 밴드는 이미지에서 특정 유형의 모든 샘플로 구성됩니다. 예를 들어 픽셀에는 빨강, 녹색 및 파랑 구성 요소를 나타내는 세 개의 샘플이 포함될 수 있습니다. 이 픽셀을 포함하는 이미지에는 세 개의 밴드가 있습니다. 하나의 밴드는 이미지에있는 모든 픽셀의 모든 빨간색 샘플로 구성됩니다. 두 번째 밴드는 모든 녹색 샘플로 구성되고 나머지 밴드는 모든 파란색 샘플로 구성됩니다. 픽셀은 다양한 형식으로 저장할 수 있습니다. 예를 들어, 특정 대역의 모든 샘플을 연속적으로 저장하거나 단일 픽셀의 모든 샘플을 연속적으로 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d0d02c3d86c6b9788a5b1840dfd1af05ed9b865" translate="yes" xml:space="preserve">
          <source>This abstract class has two implementations, both of which are immutable and thread-safe. One implementation models region-based IDs, the other is &lt;code&gt;ZoneOffset&lt;/code&gt; modelling offset-based IDs. This difference is visible in serialization.</source>
          <target state="translated">이 추상 클래스에는 두 가지 구현이 있으며 둘 다 변경할 수 없으며 스레드로부터 안전합니다. 한 구현은 지역 기반 ID를 모델링 하고 다른 구현은 &lt;code&gt;ZoneOffset&lt;/code&gt; 모델링 오프셋 기반 ID입니다. 이 차이는 직렬화에서 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af89798815d8766dba755b7064bdbaa6e44d16b9" translate="yes" xml:space="preserve">
          <source>This abstract class is the superclass of all classes representing an input stream of bytes.</source>
          <target state="translated">이 추상 클래스는 바이트 입력 스트림을 나타내는 모든 클래스의 수퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="542c000ead5f94e153511c3149a9ac30f0978f97" translate="yes" xml:space="preserve">
          <source>This abstract class is the superclass of all classes representing an output stream of bytes.</source>
          <target state="translated">이 추상 클래스는 바이트 출력 스트림을 나타내는 모든 클래스의 수퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="859a86cb70a29ade18be64d6164eef01f3fb0053" translate="yes" xml:space="preserve">
          <source>This abstract class is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink.</source>
          <target state="translated">이 추상 클래스는 바이트 출력 스트림을 나타내는 모든 클래스의 수퍼 클래스입니다. 출력 스트림은 출력 바이트를 받아서 싱크로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="0da0a4f596a531d53598898b278744dacde2837d" translate="yes" xml:space="preserve">
          <source>This abstract class is used to represent a referral exception, which is generated in response to a &lt;em&gt;referral&lt;/em&gt; such as that returned by LDAP v3 servers.</source>
          <target state="translated">이 추상 클래스는 LDAP v3 서버에서 리턴 된 것과 같은 &lt;em&gt;참조&lt;/em&gt; 에 대한 응답으로 생성되는 참조 예외를 나타내는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="5533d7c594ae4e8f67be32756fbf1c36a0369f4a" translate="yes" xml:space="preserve">
          <source>This abstract class is used to represent an LDAP referral exception.</source>
          <target state="translated">이 추상 클래스는 LDAP 조회 예외를 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="211be5043fa4842399ea6e1192a72d3190feae8d" translate="yes" xml:space="preserve">
          <source>This abstract class is used to represent an LDAP referral exception. It extends the base &lt;code&gt;ReferralException&lt;/code&gt; by providing a &lt;code&gt;getReferralContext()&lt;/code&gt; method that accepts request controls. LdapReferralException is an abstract class. Concrete implementations of it determine its synchronization and serialization properties.</source>
          <target state="translated">이 추상 클래스는 LDAP 조회 예외를 나타내는 데 사용됩니다. 요청 제어를 승인 하는 &lt;code&gt;getReferralContext()&lt;/code&gt; 메소드를 제공 하여 기본 &lt;code&gt;ReferralException&lt;/code&gt; 을 확장 합니다. LdapReferralException은 추상 클래스입니다. 그것의 구체적인 구현은 동기화 및 직렬화 속성을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="bd1b1e68621c73d0c4ab879d90e329fae5f17db7" translate="yes" xml:space="preserve">
          <source>This abstract class is used to serve as a color space tag to identify the specific color space of a Color object or, via a ColorModel object, of an Image, a BufferedImage, or a GraphicsDevice.</source>
          <target state="translated">이 추상 클래스는 Color 개체 또는 ColorModel 개체를 통해 Image, BufferedImage 또는 GraphicsDevice의 특정 색 공간을 식별하는 색 공간 태그 역할을하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6fea1c23f083a7b87502670c09ac4dcc3741bf21" translate="yes" xml:space="preserve">
          <source>This abstract class is used to serve as a color space tag to identify the specific color space of a Color object or, via a ColorModel object, of an Image, a BufferedImage, or a GraphicsDevice. It contains methods that transform colors in a specific color space to/from sRGB and to/from a well-defined CIEXYZ color space.</source>
          <target state="translated">이 추상 클래스는 Color 개체 또는 ColorModel 개체를 통해 Image, BufferedImage 또는 GraphicsDevice의 특정 색 공간을 식별하는 색 공간 태그 역할을하는 데 사용됩니다. 여기에는 특정 색상 공간의 색상을 sRGB로 /에서 그리고 잘 정의 된 CIEXYZ 색상 공간으로 /에서 변환하는 메서드가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5870422cc3cf304540dbf014abbe765753c4a28a" translate="yes" xml:space="preserve">
          <source>This abstract class must be implemented with care to ensure other classes operate correctly. All implementations that can be instantiated must be final, immutable and thread-safe.</source>
          <target state="translated">이 추상 클래스는 다른 클래스가 올바르게 작동하도록주의해서 구현해야합니다. 인스턴스화 할 수있는 모든 구현은 최종적이고 변경 불가능하며 스레드로부터 안전해야합니다.</target>
        </trans-unit>
        <trans-unit id="7cfae2583abf346d5f64f5bdc3674bca58c10925" translate="yes" xml:space="preserve">
          <source>This abstract class provides default implementations for most of the methods in the &lt;code&gt;TableModel&lt;/code&gt; interface.</source>
          <target state="translated">이 추상 클래스는 &lt;code&gt;TableModel&lt;/code&gt; 인터페이스 에있는 대부분의 메서드에 대한 기본 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="5d2a9a257f7ea56e999bc3b9c336c533ac05910e" translate="yes" xml:space="preserve">
          <source>This abstract class provides default implementations for most of the methods in the &lt;code&gt;TableModel&lt;/code&gt; interface. It takes care of the management of listeners and provides some conveniences for generating &lt;code&gt;TableModelEvents&lt;/code&gt; and dispatching them to the listeners. To create a concrete &lt;code&gt;TableModel&lt;/code&gt; as a subclass of &lt;code&gt;AbstractTableModel&lt;/code&gt; you need only provide implementations for the following three methods:</source>
          <target state="translated">이 추상 클래스는 &lt;code&gt;TableModel&lt;/code&gt; 인터페이스 에있는 대부분의 메서드에 대한 기본 구현을 제공합니다 . 리스너 관리를 처리하고 &lt;code&gt;TableModelEvents&lt;/code&gt; 를 생성 하고 리스너에 디스패치하기 위한 몇 가지 편의를 제공합니다 . &lt;code&gt;AbstractTableModel&lt;/code&gt; 의 하위 클래스로 구체적인 &lt;code&gt;TableModel&lt;/code&gt; 을 만들려면 다음 세 가지 메서드에 대한 구현 만 제공하면됩니다.</target>
        </trans-unit>
        <trans-unit id="a882cc8603d5c8dd42b9dccf2e9ac4a17199444b" translate="yes" xml:space="preserve">
          <source>This abstract class represents a factory for creating LDAPv3 controls.</source>
          <target state="translated">이 추상 클래스는 LDAPv3 컨트롤을 만들기위한 팩토리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="15ef5eb148d426a9a74e89d09b6c1d6c762bd269" translate="yes" xml:space="preserve">
          <source>This abstract class represents a factory for creating LDAPv3 controls. LDAPv3 controls are defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">이 추상 클래스는 LDAPv3 컨트롤을 만들기위한 팩토리를 나타냅니다. LDAPv3 컨트롤은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d154e899cff6ba097e132b86fc03b5c3b0a65f0" translate="yes" xml:space="preserve">
          <source>This abstract method needs to be implemented by subclasses.</source>
          <target state="translated">이 추상 메서드는 하위 클래스에 의해 구현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="c938d01b82c37f234bcfe48a2730c6bb2626b08d" translate="yes" xml:space="preserve">
          <source>This abstract method needs to be implemented by subclasses. Its responsibility is to iterate over the elements and use the write() methods to generate output in the desired format.</source>
          <target state="translated">이 추상 메서드는 하위 클래스에 의해 구현되어야합니다. 그 책임은 요소를 반복하고 write () 메서드를 사용하여 원하는 형식으로 출력을 생성하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0142bdecde47c841e104070bcf0673480c9fec51" translate="yes" xml:space="preserve">
          <source>This abstract subclass of &lt;code&gt;DragGestureRecognizer&lt;/code&gt; defines a &lt;code&gt;DragGestureRecognizer&lt;/code&gt; for mouse-based gestures.</source>
          <target state="translated">이 추상 서브 클래스 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 정의 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 를 마우스 기반의 제스처를.</target>
        </trans-unit>
        <trans-unit id="d8799c874e2c44d242b109c054606a0a04b180d5" translate="yes" xml:space="preserve">
          <source>This abstract subclass of &lt;code&gt;DragGestureRecognizer&lt;/code&gt; defines a &lt;code&gt;DragGestureRecognizer&lt;/code&gt; for mouse-based gestures. Each platform implements its own concrete subclass of this class, available via the Toolkit.createDragGestureRecognizer() method, to encapsulate the recognition of the platform dependent mouse gesture(s) that initiate a Drag and Drop operation.</source>
          <target state="translated">이 추상 서브 클래스 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 정의 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 를 마우스 기반의 제스처를. 각 플랫폼은 Toolkit.createDragGestureRecognizer () 메서드를 통해 사용할 수있는이 클래스의 고유 한 하위 클래스를 구현하여 드래그 앤 드롭 작업을 시작하는 플랫폼 종속 마우스 제스처의 인식을 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="305dccae4e2f348d440a4d3e6c6acb00e24c0c6f" translate="yes" xml:space="preserve">
          <source>This access mode is supported by all VarHandle instances and never throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">이 액세스 모드는 모든 VarHandle 인스턴스에서 지원되며 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 throw 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="e8f31e8bdf5d12c87e1da6d3d5ab5605a2bef2ea" translate="yes" xml:space="preserve">
          <source>This acquires a read lock on the associated document for the duration of the update to ensure the model is not changed while it is operating. The first thing to do would be to see if any work actually needs to be done. The following could have conceivably happened while the state was waiting to be updated:</source>
          <target state="translated">이렇게하면 업데이트 기간 동안 관련 문서에 대한 읽기 잠금이 설정되어 모델이 작동하는 동안 변경되지 않습니다. 가장 먼저해야 할 일은 실제로 수행해야하는 작업이 있는지 확인하는 것입니다. 상태가 업데이트되기를 기다리는 동안 다음과 같은 상황이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="acebe30fbd007e4c2204c729b868e57910970846" translate="yes" xml:space="preserve">
          <source>This activity is normal, although it may cause puzzling entries to be created in web-server logs. If a web server is not configured correctly, however, then this activity may cause the provider-loading algorithm to fail spuriously.</source>
          <target state="translated">웹 서버 로그에 수수께끼 항목이 생성 될 수 있지만이 활동은 정상입니다. 그러나 웹 서버가 올바르게 구성되지 않은 경우이 활동으로 인해 제공자로드 알고리즘이 허위로 실패 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="580e092ce6a28baf913bf030f3849f71eb7e836f" translate="yes" xml:space="preserve">
          <source>This adapter does not test for duplicate Namespace-qualified attribute names.</source>
          <target state="translated">이 어댑터는 중복 네임 스페이스 규정 속성 이름을 테스트하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bfa8c5c0a107b31c4a95d0edb91b439cd84c11c5" translate="yes" xml:space="preserve">
          <source>This adds a new provider to those currently available. A provider supplies rules for one or more zone IDs. A provider cannot be registered if it supplies a zone ID that has already been registered. See the notes on time-zone IDs in &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt;, especially the section on using the concept of a &quot;group&quot; to make IDs unique.</source>
          <target state="translated">현재 사용 가능한 공급자에 새 공급자가 추가됩니다. 공급자는 하나 이상의 영역 ID에 대한 규칙을 제공합니다. 공급자가 이미 등록 된 영역 ID를 제공하면 공급자를 등록 할 수 없습니다. &lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; 의&lt;/a&gt; 시간대 ID에 대한 참고 사항 , 특히 &quot;그룹&quot;개념을 사용하여 ID를 고유하게 만드는 방법에 대한 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c7b1b2290b18bee4fc34922df6ada6db168a30c6" translate="yes" xml:space="preserve">
          <source>This adds the amount to the days unit in a copy of this period. The years and months units are unaffected. For example, &quot;1 year, 6 months and 3 days&quot; plus 2 days returns &quot;1 year, 6 months and 5 days&quot;.</source>
          <target state="translated">이 기간의 사본에서 일 단위에 금액을 추가합니다. 연도 및 월 단위는 영향을받지 않습니다. 예를 들어 &quot;1 년, 6 개월 및 3 일&quot;에 2 일을 더하면 &quot;1 년, 6 개월 및 5 일&quot;이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="577c40b8bdf2319aa6e28f29dbc1c99faaccf0de" translate="yes" xml:space="preserve">
          <source>This adds the amount to the months unit in a copy of this period. The years and days units are unaffected. For example, &quot;1 year, 6 months and 3 days&quot; plus 2 months returns &quot;1 year, 8 months and 3 days&quot;.</source>
          <target state="translated">그러면이 기간의 사본에서 월 단위에 금액이 추가됩니다. 년과 일 단위는 영향을받지 않습니다. 예를 들어 &quot;1 년, 6 개월 및 3 일&quot;에 2 개월을 더한 경우 &quot;1 년, 8 개월 및 3 일&quot;이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="42ae399a959d94527692104db6f0b6addcd3e7c1" translate="yes" xml:space="preserve">
          <source>This adds the amount to the years unit in a copy of this period. The months and days units are unaffected. For example, &quot;1 year, 6 months and 3 days&quot; plus 2 years returns &quot;3 years, 6 months and 3 days&quot;.</source>
          <target state="translated">이것은이 기간의 사본에서 년 단위에 금액을 추가합니다. 월 및 일 단위는 영향을받지 않습니다. 예를 들어 &quot;1 년, 6 개월 및 3 일&quot;에 2 년을 더한 경우 &quot;3 년, 6 개월 및 3 일&quot;이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="312630dd3e559aa3e850635064b18ba893feb979" translate="yes" xml:space="preserve">
          <source>This adds the specified number of hours to this time, returning a new time. The calculation wraps around midnight.</source>
          <target state="translated">이 시간에 지정된 시간이 추가되어 새 시간이 반환됩니다. 계산은 자정을 둘러 쌉니다.</target>
        </trans-unit>
        <trans-unit id="5f9421d077bfb82504acd23d2b3d17ad4833739e" translate="yes" xml:space="preserve">
          <source>This adds the specified number of minutes to this time, returning a new time. The calculation wraps around midnight.</source>
          <target state="translated">이렇게하면 지정된 시간 (분)이 추가되고 새 시간이 반환됩니다. 계산은 자정을 둘러 쌉니다.</target>
        </trans-unit>
        <trans-unit id="56664909d328f8aa38e9bb862961993421d5ea4a" translate="yes" xml:space="preserve">
          <source>This adds the specified number of nanoseconds to this time, returning a new time. The calculation wraps around midnight.</source>
          <target state="translated">이 시간에 지정된 수의 나노초가 추가되어 새로운 시간이 반환됩니다. 계산은 자정을 둘러 쌉니다.</target>
        </trans-unit>
        <trans-unit id="272f310507ce85af55cf8e2ef919441f6f1bce72" translate="yes" xml:space="preserve">
          <source>This adds the specified number of seconds to this time, returning a new time. The calculation wraps around midnight.</source>
          <target state="translated">이렇게하면 지정된 시간 (초)이 추가되고 새 시간이 반환됩니다. 계산은 자정을 둘러 쌉니다.</target>
        </trans-unit>
        <trans-unit id="adbe662ba01bd9221e2364f3a2749e6f09b92016" translate="yes" xml:space="preserve">
          <source>This adjusts the specified temporal object using the logic encapsulated in the implementing class. Examples might be an adjuster that sets the date avoiding weekends, or one that sets the date to the last day of the month.</source>
          <target state="translated">구현 클래스에 캡슐화 된 로직을 사용하여 지정된 임시 객체를 조정합니다. 주말을 피하는 날짜를 설정하는 조정자 또는 날짜를 해당 월의 마지막 날로 설정하는 조정자 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64bbe4507c0b775f8dd0431c3109d0f3b5437715" translate="yes" xml:space="preserve">
          <source>This adjusts this date-time according to the rules of the specified adjuster. A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the date to the last day of the month. A selection of common adjustments is provided in &lt;a href=&quot;../temporal/temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt;. These include finding the &quot;last day of the month&quot; and &quot;next Wednesday&quot;. The adjuster is responsible for handling special cases, such as the varying lengths of month and leap years.</source>
          <target state="translated">지정된 조정자의 규칙에 따라이 날짜-시간을 조정합니다. 간단한 조정자가 연도 필드와 같은 필드 중 하나를 간단하게 설정할 수 있습니다. 더 복잡한 조정자는 날짜를 해당 월의 마지막 날로 설정할 수 있습니다. &lt;a href=&quot;../temporal/temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; &lt;/a&gt; 에서 공통 조정을 선택할 수 있습니다. 여기에는 &quot;매월 마지막 날&quot;과 &quot;다음 수요일&quot;찾기가 포함됩니다. 조정자는 다양한 월 및 윤년과 같은 특수 사례를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="10ae2372be7be68098127766d8108eeb65da90e5" translate="yes" xml:space="preserve">
          <source>This adjusts this date-time according to the rules of the specified adjuster. A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the date to the last day of the month. A selection of common adjustments is provided in &lt;a href=&quot;temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt;. These include finding the &quot;last day of the month&quot; and &quot;next Wednesday&quot;. The adjuster is responsible for handling special cases, such as the varying lengths of month and leap years.</source>
          <target state="translated">지정된 조정자의 규칙에 따라이 날짜-시간을 조정합니다. 간단한 조정자가 연도 필드와 같은 필드 중 하나를 간단하게 설정할 수 있습니다. 더 복잡한 조정자는 날짜를 해당 월의 마지막 날로 설정할 수 있습니다. &lt;a href=&quot;temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; &lt;/a&gt; 에서 공통 조정을 선택할 수 있습니다. 여기에는 &quot;매월 마지막 날&quot;과 &quot;다음 수요일&quot;찾기가 포함됩니다. 조정자는 다양한 월 및 윤년과 같은 특수 사례를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="e88d4e6ef393c6ea0a8be4561f97e8f887d8f6e7" translate="yes" xml:space="preserve">
          <source>This adjusts this temporal, adding according to the rules of the specified amount. The amount is typically a &lt;a href=&quot;../period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;../temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface, such as &lt;a href=&quot;../duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 양의 규칙에 따라이 시간을 조정합니다. 금액은 일반적으로 &lt;a href=&quot;../period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; &lt;/a&gt; 이지만 &lt;a href=&quot;../temporal/temporalamount&quot;&gt; &lt;code&gt;TemporalAmount&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현하는 다른 유형 ( 예 : &lt;a href=&quot;../duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; )일 수&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf16c51e141a12f609caa086e84589698dded626" translate="yes" xml:space="preserve">
          <source>This adjusts this temporal, adding according to the rules of the specified amount. The amount is typically a &lt;a href=&quot;../period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface, such as &lt;a href=&quot;../duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 양의 규칙에 따라이 시간을 조정합니다. 금액은 일반적으로 &lt;a href=&quot;../period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; &lt;/a&gt; 이지만 &lt;a href=&quot;temporalamount&quot;&gt; &lt;code&gt;TemporalAmount&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현하는 다른 유형 ( 예 : &lt;a href=&quot;../duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; )일 수&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fbebc06513f3a97a95d03c4fcae8ef0464f29e9" translate="yes" xml:space="preserve">
          <source>This adjusts this temporal, subtracting according to the rules of the specified amount. The amount is typically a &lt;a href=&quot;../period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;../temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface, such as &lt;a href=&quot;../duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 시간의 규칙에 따라 차감하여이 시간을 조정합니다. 금액은 일반적으로 &lt;a href=&quot;../period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; &lt;/a&gt; 이지만 &lt;a href=&quot;../temporal/temporalamount&quot;&gt; &lt;code&gt;TemporalAmount&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현하는 다른 유형일 수 있습니다 ( 예 :&lt;a href=&quot;../duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; )일 수&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="1df2d75424dfecb1e8650c0bb937b97b7353dc6e" translate="yes" xml:space="preserve">
          <source>This adjusts this temporal, subtracting according to the rules of the specified amount. The amount is typically a &lt;a href=&quot;../period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface, such as &lt;a href=&quot;../duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 시간의 규칙에 따라 차감하여이 시간을 조정합니다. 양은 통상적 인 &lt;a href=&quot;../period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; &lt;/a&gt; 이지만 다른 실시 형태 일 수있다 &lt;a href=&quot;temporalamount&quot;&gt; &lt;code&gt;TemporalAmount&lt;/code&gt; 의&lt;/a&gt; 같은 인터페이스 &lt;a href=&quot;../duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="2dbd2c543a20dbeefe492f55ab5fd4d1156b4e0d" translate="yes" xml:space="preserve">
          <source>This affects how cells are wrapped. See the documentation of &lt;a href=&quot;#setLayoutOrientation(int)&quot;&gt;&lt;code&gt;setLayoutOrientation(int)&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">이것은 셀이 래핑되는 방식에 영향을줍니다. 자세한 내용은 &lt;a href=&quot;#setLayoutOrientation(int)&quot;&gt; &lt;code&gt;setLayoutOrientation(int)&lt;/code&gt; &lt;/a&gt; 설명서 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7a78ae2648c7da4708cabe3f64d2e315651e8b64" translate="yes" xml:space="preserve">
          <source>This algorithm is described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#certpathbuilder-algorithms&quot;&gt; CertPathBuilder section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">이 알고리즘은 Java Security Standard Algorithm Names Specification 의 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#certpathbuilder-algorithms&quot;&gt;CertPathBuilder 섹션&lt;/a&gt; 에 설명되어 있습니다. 다른 알고리즘이 지원되는지 확인하려면 구현에 대한 릴리스 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="55bee7191787107c620793683dba0e224e0c0d9b" translate="yes" xml:space="preserve">
          <source>This algorithm is described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#certpathvalidator-algorithms&quot;&gt; CertPathValidator section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">이 알고리즘은 Java Security Standard Algorithm Names Specification 의 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#certpathvalidator-algorithms&quot;&gt;CertPathValidator 섹션&lt;/a&gt; 에 설명되어 있습니다. 다른 알고리즘이 지원되는지 확인하려면 구현에 대한 릴리스 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7ed97295b49a8a3d160765c915edb721048e8d8b" translate="yes" xml:space="preserve">
          <source>This algorithm is described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#keyagreement-algorithms&quot;&gt; KeyAgreement section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">이 알고리즘은 Java Security Standard Algorithm Names Specification 의 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#keyagreement-algorithms&quot;&gt;KeyAgreement 섹션&lt;/a&gt; 에 설명되어 있습니다. 다른 알고리즘이 지원되는지 확인하려면 구현에 대한 릴리스 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3d3fbe44c46a23bbbff754c29f81bf7a2c613d56" translate="yes" xml:space="preserve">
          <source>This algorithm is described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#trustmanagerfactory-algorithms&quot;&gt; TrustManagerFactory section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">이 알고리즘은 Java Security Standard Algorithm Names Specification 의 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#trustmanagerfactory-algorithms&quot;&gt;TrustManagerFactory 섹션&lt;/a&gt; 에 설명되어 있습니다. 다른 알고리즘이 지원되는지 확인하려면 구현에 대한 릴리스 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4aed973346c68a83b9e5a6d690975188f9f90522" translate="yes" xml:space="preserve">
          <source>This algorithm is described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertPathBuilder&quot;&gt; CertPathBuilder section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">이 알고리즘은 &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertPathBuilder&quot;&gt;&lt;/a&gt; Java Cryptography Architecture 표준 알고리즘 이름 문서 CertPathBuilder 섹션 에 있습니다. 구현에 대한 릴리스 설명서를 참조하여 다른 알고리즘이 지원되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="1d5a7ddfdadb11cb4435a90789db39d514610524" translate="yes" xml:space="preserve">
          <source>This algorithm is described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertPathValidator&quot;&gt; CertPathValidator section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">이 알고리즘은 &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertPathValidator&quot;&gt;&lt;/a&gt; Java Cryptography Architecture 표준 알고리즘 이름 문서 CertPathValidator 섹션 에 있습니다. 구현에 대한 릴리스 설명서를 참조하여 다른 알고리즘이 지원되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="08156557404a503d4b57bb0035d148a7251005fb" translate="yes" xml:space="preserve">
          <source>This algorithm is described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#KeyAgreement&quot;&gt; KeyAgreement section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">이 알고리즘은 &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#KeyAgreement&quot;&gt;&lt;/a&gt; Java Cryptography Architecture 표준 알고리즘 이름 문서 KeyAgreement 섹션 에 있습니다. 구현에 대한 릴리스 설명서를 참조하여 다른 알고리즘이 지원되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8420ee4992ac12c0e9c3a3d695f8378f8178a34d" translate="yes" xml:space="preserve">
          <source>This algorithm is implemented by this method. If it is overridden, the behavior specified here must be maintained.</source>
          <target state="translated">이 알고리즘은이 방법으로 구현됩니다. 재정의 된 경우 여기에 지정된 동작을 유지해야합니다.</target>
        </trans-unit>
        <trans-unit id="7012ce743c621477f3e955bfcc887cfe246859dd" translate="yes" xml:space="preserve">
          <source>This allows a &lt;code&gt;DateTimeFormatter&lt;/code&gt; to be created. All date-time formatters are created ultimately using this builder.</source>
          <target state="translated">이것은 &lt;code&gt;DateTimeFormatter&lt;/code&gt; 를 허용합니다 를 만들 수 있습니다. 모든 날짜-시간 포맷터는 궁극적으로이 빌더를 사용하여 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="6fa9e683c930d9182a069fdd650fc200aa8b8d84" translate="yes" xml:space="preserve">
          <source>This allows a number of week-based-years to be added to, or subtracted from, a date. The unit is equal to either 52 or 53 weeks. The estimated duration of a week-based-year is the same as that of a standard ISO year at &lt;code&gt;365.2425 Days&lt;/code&gt;.</source>
          <target state="translated">이를 통해 날짜에 여러 주 단위 연도를 더하거나 뺄 수 있습니다. 단위는 52 주 또는 53 주입니다. 주 단위로 예상되는 기간은 표준 ISO 년의 &lt;code&gt;365.2425 Days&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="392df325756a65e9c5a8af04366376db864af4a4" translate="yes" xml:space="preserve">
          <source>This allows an attacker to control the runtime characteristics of the Java virtual machine and cause the system to misbehave. An attacker can also access some information related to the running application.</source>
          <target state="translated">이를 통해 침입자는 Java 가상 머신의 런타임 특성을 제어하고 시스템의 오작동을 유발할 수 있습니다. 공격자는 실행중인 응용 프로그램과 관련된 일부 정보에 액세스 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="47834696b9fa695c266a5e8270bb613c5f6a908f" translate="yes" xml:space="preserve">
          <source>This allows an attacker to create thread groups and set their run priority.</source>
          <target state="translated">이를 통해 공격자는 스레드 그룹을 만들고 실행 우선 순위를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d8b990f0a0bfc85454485276436f4879f340d42" translate="yes" xml:space="preserve">
          <source>This allows an attacker to modify the behaviour of any thread in the system.</source>
          <target state="translated">이를 통해 공격자는 시스템의 모든 스레드 동작을 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e99a9ee933bdb89ca061322a9c2ca82d618e076" translate="yes" xml:space="preserve">
          <source>This allows an attacker to mount a denial-of-service attack by automatically forcing the virtual machine to halt. Note: The &quot;exitVM.*&quot; permission is automatically granted to all code loaded from the application class path, thus enabling applications to terminate themselves. Also, the &quot;exitVM&quot; permission is equivalent to &quot;exitVM.*&quot;.</source>
          <target state="translated">이를 통해 공격자는 가상 시스템이 자동으로 중지되도록하여 서비스 거부 공격을 수행 할 수 있습니다. 참고 : &quot;exitVM. *&quot;권한은 응용 프로그램 클래스 경로에서로드 된 모든 코드에 자동으로 부여되므로 응용 프로그램이 스스로 종료 될 수 있습니다. 또한 &quot;exitVM&quot;권한은 &quot;exitVM. *&quot;와 같습니다.</target>
        </trans-unit>
        <trans-unit id="26b8bd3c8f3c70a93f4288696898edada575f0d3" translate="yes" xml:space="preserve">
          <source>This allows an attacker to register a malicious shutdown hook that interferes with the clean shutdown of the virtual machine.</source>
          <target state="translated">이를 통해 공격자는 가상 시스템의 완전 종료를 방해하는 악의적 인 종료 후크를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="035ba076dd3c77252c39610d9f759a5d2e632455" translate="yes" xml:space="preserve">
          <source>This allows an attacker to register a malicious uncaught exception handler that could interfere with termination of a thread</source>
          <target state="translated">이를 통해 침입자는 스레드 종료를 방해 할 수있는 악의적 인 catch되지 않은 예외 처리기를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="828216fa1ac0c86e1f04efa978214156f3ec6eff" translate="yes" xml:space="preserve">
          <source>This allows attackers to remove a certificate for an identity's public key. This is dangerous because it affects the trust relationship across the system. This public key suddenly becomes considered less trustworthy than it otherwise would be.</source>
          <target state="translated">이를 통해 공격자는 ID의 공개 키에 대한 인증서를 제거 할 수 있습니다. 시스템 전체의 트러스트 관계에 영향을주기 때문에 위험합니다. 이 공개 키는 갑자기 다른 것보다 신뢰도가 떨어집니다.</target>
        </trans-unit>
        <trans-unit id="95e86b5eb05f9b417cd456bf7e00be54c6071bde" translate="yes" xml:space="preserve">
          <source>This allows attackers to set a certificate for an identity's public key. This is dangerous because it affects the trust relationship across the system. This public key suddenly becomes trusted to a wider audience than it otherwise would be.</source>
          <target state="translated">이를 통해 공격자는 ID의 공개 키에 대한 인증서를 설정할 수 있습니다. 시스템 전체의 트러스트 관계에 영향을주기 때문에 위험합니다. 이 공개 키는 갑자기 다른 사람들보다 더 많은 사람들에게 신뢰됩니다.</target>
        </trans-unit>
        <trans-unit id="05220737081c9aa7d095629bd62f1f3428e344b2" translate="yes" xml:space="preserve">
          <source>This allows attackers to set the general description for an identity. This may trick applications into using a different identity than intended or may prevent applications from finding a particular identity.</source>
          <target state="translated">이를 통해 공격자는 ID에 대한 일반적인 설명을 설정할 수 있습니다. 이로 인해 응용 프로그램이 의도 한 것과 다른 ID를 사용하도록 속이거나 응용 프로그램이 특정 ID를 찾지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbc18153c69ee893634a4d2b84d8e76265eac6e6" translate="yes" xml:space="preserve">
          <source>This allows changing the value of the standard system streams. An attacker may change System.in to monitor and steal user input, or may set System.err to a &quot;null&quot; OutputStream, which would hide any error messages sent to System.err.</source>
          <target state="translated">이를 통해 표준 시스템 스트림의 값을 변경할 수 있습니다. 공격자는 System.in을 변경하여 사용자 입력을 모니터링하고 훔치거나 System.err을 &quot;null&quot;OutputStream으로 설정하여 System.err에 전송 된 오류 메시지를 숨길 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="baff8f2a3bff8a54097a516a8f38343fd059efb5" translate="yes" xml:space="preserve">
          <source>This allows code to obtain file system information such as disk usage or disk space available to the caller. This is potentially dangerous because it discloses information about the system hardware configuration and some information about the caller's privilege to write files.</source>
          <target state="translated">이를 통해 코드는 디스크 사용 또는 호출자가 사용할 수있는 디스크 공간과 같은 파일 시스템 정보를 얻을 수 있습니다. 시스템 하드웨어 구성에 대한 정보와 파일을 쓸 수있는 호출자의 권한에 대한 정보를 공개하기 때문에 잠재적으로 위험합니다.</target>
        </trans-unit>
        <trans-unit id="291eb9e418733f5873f220381f195838e9a1605b" translate="yes" xml:space="preserve">
          <source>This allows code to obtain policy information for a particular code source. While obtaining policy information does not compromise the security of the system, it does give attackers additional information, such as local file names for example, to better aim an attack.</source>
          <target state="translated">이를 통해 코드는 특정 코드 소스에 대한 정책 정보를 얻을 수 있습니다. 정책 정보를 얻는 것이 시스템의 보안을 손상 시키지는 않지만, 공격자에게보다 효과적인 공격을 위해 로컬 파일 이름과 같은 추가 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="42356fd570cef37cca56d1270fec316ba29c2374" translate="yes" xml:space="preserve">
          <source>This allows code to set the actual implementation for the socket, server socket, stream handler, or RMI socket factory. An attacker may set a faulty implementation which mangles the data stream.</source>
          <target state="translated">이를 통해 코드는 소켓, 서버 소켓, 스트림 핸들러 또는 RMI 소켓 팩토리에 대한 실제 구현을 설정할 수 있습니다. 공격자는 데이터 스트림을 엉망으로 만드는 잘못된 구현을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1894fdf0105d5006404e150ed427a01fc06e03a" translate="yes" xml:space="preserve">
          <source>This allows code to stop any thread in the system provided that it is already granted permission to access that thread. This poses as a threat, because that code may corrupt the system by killing existing threads.</source>
          <target state="translated">이렇게하면 해당 스레드에 대한 액세스 권한이 이미 부여 된 경우 코드가 시스템의 모든 스레드를 중지 할 수 있습니다. 이 코드는 기존 스레드를 강제 종료하여 시스템을 손상시킬 수 있기 때문에 위협이됩니다.</target>
        </trans-unit>
        <trans-unit id="fc5495ce28f148b193f78839eeb3539a66ed4a47" translate="yes" xml:space="preserve">
          <source>This allows code to write to a particular file associated with the descriptor. This is dangerous because it may allow malicious code to plant viruses or at the very least, fill up your entire disk.</source>
          <target state="translated">이를 통해 코드는 설명자와 관련된 특정 파일에 쓸 수 있습니다. 악성 코드가 바이러스를 생성하거나 최소한 전체 디스크를 채울 수 있기 때문에 위험합니다.</target>
        </trans-unit>
        <trans-unit id="31273fa567bcce8ad03110c0ebfe4cbadf40f08d" translate="yes" xml:space="preserve">
          <source>This allows malicious code to monitor runtime information and uncover vulnerabilities.</source>
          <target state="translated">이를 통해 악성 코드가 런타임 정보를 모니터링하고 취약점을 발견 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7c118df48684fccd176df104f950d49afe1a53c" translate="yes" xml:space="preserve">
          <source>This allows retrieval of Class objects from stack walking. This might allow malicious code to access Class objects on the stack outside its own context.</source>
          <target state="translated">이를 통해 스택 워킹에서 클래스 객체를 검색 할 수 있습니다. 이로 인해 악성 코드가 자체 컨텍스트 외부의 스택에있는 클래스 개체에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e7f242b0fbd58fd2048bc791aab8771f721dcad" translate="yes" xml:space="preserve">
          <source>This allows retrieval of the stack trace information of another thread. This might allow malicious code to monitor the execution of threads and discover vulnerabilities in applications.</source>
          <target state="translated">이를 통해 다른 스레드의 스택 추적 정보를 검색 할 수 있습니다. 이로 인해 악성 코드가 스레드 실행을 모니터링하고 응용 프로그램의 취약점을 발견 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ce37454c4a1eb923451c2cb48986b69c3da820d" translate="yes" xml:space="preserve">
          <source>This allows someone to instantiate an AccessControlContext with a &lt;code&gt;DomainCombiner&lt;/code&gt;. Extreme care must be taken when granting this permission. Malicious code could create a DomainCombiner that augments the set of permissions granted to code, and even grant the code &lt;a href=&quot;allpermission&quot;&gt;&lt;code&gt;AllPermission&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이를 통해 누군가가 &lt;code&gt;DomainCombiner&lt;/code&gt; 로 AccessControlContext를 인스턴스화 할 수 있습니다 . 이 권한을 부여 할 때는 각별히주의해야합니다. 악성 코드는 코드에 부여 된 권한 집합을 보강하고 &lt;a href=&quot;allpermission&quot;&gt; &lt;code&gt;AllPermission&lt;/code&gt; &lt;/a&gt; 코드를 부여하는 DomainCombiner를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="230473330163ca9ce75d0df8dd3d22c243a7bf1b" translate="yes" xml:space="preserve">
          <source>This allows someone to query the policy via the &lt;code&gt;getPermissions&lt;/code&gt; call, which discloses which permissions would be granted to a given CodeSource. While revealing the policy does not compromise the security of the system, it does provide malicious code with additional information which it may use to better aim an attack. It is wise not to divulge more information than necessary.</source>
          <target state="translated">이를 통해 누군가 &lt;code&gt;getPermissions&lt;/code&gt; 를 통해 정책을 쿼리 할 수 ​​있습니다. 호출을 할 수 있습니다.이 권한은 주어진 CodeSource에 부여 된 권한을 공개합니다. 정책을 공개한다고해서 시스템의 보안이 손상되는 것은 아니지만, 공격을보다 효과적으로 조준하는 데 사용할 수있는 추가 정보를 악성 코드에 제공합니다. 필요 이상으로 많은 정보를 공개하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c2d1c6dd45d7f9f0a64f8e96aed1ed432ca6aa34" translate="yes" xml:space="preserve">
          <source>This allows someone to retrieve an AccessControlContext's &lt;code&gt;DomainCombiner&lt;/code&gt;. Since DomainCombiners may contain sensitive information, this could potentially lead to a privacy leak.</source>
          <target state="translated">이를 통해 누군가 AccessControlContext의 &lt;code&gt;DomainCombiner&lt;/code&gt; 를 검색 할 수 있습니다 . DomainCombiners는 민감한 정보를 포함 할 수 있으므로 개인 정보가 유출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fc55baaf5ae8bcaed6ce4277c97a2358b139f90" translate="yes" xml:space="preserve">
          <source>This allows the &lt;a href=&quot;temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;epoch-second&lt;/code&gt;&lt;/a&gt; field to be converted to a local date-time. This is primarily intended for low-level conversions rather than general application usage.</source>
          <target state="translated">이렇게하면 &lt;a href=&quot;temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;epoch-second&lt;/code&gt; &lt;/a&gt; 필드를 현지 날짜-시간으로 변환 할 수 있습니다. 이것은 주로 일반적인 응용 프로그램 사용이 아닌 저수준 변환을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="932005f6f73278006c18cf4394fc3ece9ab6f2a8" translate="yes" xml:space="preserve">
          <source>This allows the model to be safely rendered in the presence of currency, if the model supports being updated asynchronously.</source>
          <target state="translated">이를 통해 모델이 비동기 업데이트를 지원하는 경우 통화가있는 상태에서 모델을 안전하게 렌더링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5fc5c4ba5e3d764b3e1bb755e2da0f90555634c9" translate="yes" xml:space="preserve">
          <source>This allows the model to be safely rendered in the presence of currency, if the model supports being updated asynchronously. The given runnable will be executed in a way that allows it to safely read the model with no changes while the runnable is being executed. The runnable itself may &lt;em&gt;not&lt;/em&gt; make any mutations.</source>
          <target state="translated">이를 통해 모델이 비동기 업데이트를 지원하는 경우 통화가있는 상태에서 모델을 안전하게 렌더링 할 수 있습니다. 주어진 runnable은 runnable이 실행되는 동안 변경없이 모델을 안전하게 읽을 수있는 방식으로 실행됩니다. runnable 자체는 변형을 만들 수 &lt;em&gt;없습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="9c723d24ff906d9cd193d4c01c6c69a61ee49e93" translate="yes" xml:space="preserve">
          <source>This allows the named provider to perform login and logout operations. The named provider must extend &lt;code&gt;AuthProvider&lt;/code&gt; and care must be taken to grant to a trusted provider since login operations involve sensitive authentication information such as PINs and passwords.</source>
          <target state="translated">이렇게하면 명명 된 공급자가 로그인 및 로그 아웃 작업을 수행 할 수 있습니다. 명명 된 공급자는 &lt;code&gt;AuthProvider&lt;/code&gt; 를 확장 해야하며 로그인 작업에는 PIN 및 암호와 같은 중요한 인증 정보가 포함되므로 신뢰할 수있는 공급자에게 부여 할 때주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="2afa8fa74586094ef2899a3f32763c6befa79c46" translate="yes" xml:space="preserve">
          <source>This allows this date-time to be converted to a value of the &lt;a href=&quot;temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;epoch-seconds&lt;/code&gt;&lt;/a&gt; field. This is primarily intended for low-level conversions rather than general application usage.</source>
          <target state="translated">이를 통해이 날짜-시간을 &lt;a href=&quot;temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;epoch-seconds&lt;/code&gt; &lt;/a&gt; 값으로 변환 할 수 있습니다 필드 . 이것은 주로 일반적인 응용 프로그램 사용이 아닌 저수준 변환을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="dd85c07b257361553b187272035252c2297f4bf6" translate="yes" xml:space="preserve">
          <source>This allows you to use a RuleBasedCollator to compare accented strings even when the collator is set to NO_DECOMPOSITION. There are two caveats, however. First, if the strings to be collated contain combining sequences that may not be in canonical order, you should set the collator to CANONICAL_DECOMPOSITION or FULL_DECOMPOSITION to enable sorting of combining sequences. Second, if the strings contain characters with compatibility decompositions (such as full-width and half-width forms), you must use FULL_DECOMPOSITION, since the rule tables only include canonical mappings.</source>
          <target state="translated">이렇게하면 Collator가 NO_DECOMPOSITION으로 설정되어 있어도 RuleBasedCollator를 사용하여 강조된 문자열을 비교할 수 있습니다. 그러나 두 가지 경고가 있습니다. 먼저, 조합 할 문자열에 정식 순서가 아닐 수있는 조합 시퀀스가 ​​포함 된 경우 조합 시퀀스를 정렬 할 수 있도록 조합기를 CANONICAL_DECOMPOSITION 또는 FULL_DECOMPOSITION으로 설정해야합니다. 둘째, 문자열에 호환성 분해 (예 : 전각 및 반각 형식)가 포함 된 문자가 포함 된 경우 규칙 테이블에는 정규 매핑 만 포함되므로 FULL_DECOMPOSITION을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="b093d9555c5e0b41a82468bed3e0200f01d727a9" translate="yes" xml:space="preserve">
          <source>This allows you to write programs that can:</source>
          <target state="translated">이를 통해 다음을 수행 할 수있는 프로그램을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2ddcbf8b8ae9348bf02cc6d9c76f84fb6c2f0b2" translate="yes" xml:space="preserve">
          <source>This also caches the minsizes for all the children when they are first encountered (so subsequent loops don't need to ask again).</source>
          <target state="translated">이것은 또한 그들이 처음 만났을 때 모든 자식에 대한 최소 크기를 캐시합니다 (따라서 후속 루프는 다시 요청할 필요가 없습니다).</target>
        </trans-unit>
        <trans-unit id="0419d0de9e828d2ae378f3feabe2101be9d1a833" translate="yes" xml:space="preserve">
          <source>This also sets the base of the &lt;code&gt;StyleSheet&lt;/code&gt; to be &lt;code&gt;u&lt;/code&gt; as well as the base of the document.</source>
          <target state="translated">이는 또한 기지국의 세트 &lt;code&gt;StyleSheet&lt;/code&gt; 로 &lt;code&gt;u&lt;/code&gt; 뿐만 아니라 문서의베이스.</target>
        </trans-unit>
        <trans-unit id="87c38ffc1f1970683fea610833ab9fd738cacf72" translate="yes" xml:space="preserve">
          <source>This amount of memory is not guaranteed to be available for memory management if it is greater than the amount of committed memory. The Java virtual machine may fail to allocate memory even if the amount of used memory does not exceed this maximum size.</source>
          <target state="translated">이 메모리 양은 커밋 된 메모리 양보다 큰 경우 메모리 관리에 사용할 수있는 것은 아닙니다. 사용 된 메모리 양이이 최대 크기를 초과하지 않더라도 Java 가상 머신이 메모리를 할당하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c81c1fa21c81700e5b30893dd781170e98bc988a" translate="yes" xml:space="preserve">
          <source>This annotation type has a boolean-valued element &lt;code&gt;forRemoval&lt;/code&gt;. A value of &lt;code&gt;true&lt;/code&gt; indicates intent to remove the annotated program element in a future version. A value of &lt;code&gt;false&lt;/code&gt; indicates that use of the annotated program element is discouraged, but at the time the program element was annotated, there was no specific intent to remove it.</source>
          <target state="translated">이 주석 유형에는 &lt;code&gt;forRemoval&lt;/code&gt; 에 대한 부울 값 요소가 있습니다 . &lt;code&gt;true&lt;/code&gt; 값은 향후 버전에서 주석이 추가 된 프로그램 요소를 제거하려는 의도를 나타냅니다. &lt;code&gt;false&lt;/code&gt; 값은 어노테이션이있는 프로그램 요소의 사용이 권장되지 않음을 표시하지만 프로그램 요소에 어노테이션이 작성되었을 때이를 제거하려는 특정 의도가 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d78dcd3a311dcf43c8ecbea186d4dd2b19819f14" translate="yes" xml:space="preserve">
          <source>This annotation type has a string-valued element &lt;code&gt;since&lt;/code&gt;. The value of this element indicates the version in which the annotated program element was first deprecated.</source>
          <target state="translated">이 주석 형은 문자열 값 요소가 &lt;code&gt;since&lt;/code&gt; . 이 요소의 값은 주석이 달린 프로그램 요소가 처음 사용되지 않는 버전을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b5a0d10b353af8113e99e87322144b9932c085d3" translate="yes" xml:space="preserve">
          <source>This appends a localized section to the builder, suitable for outputting a date, time or date-time combination. The format of the localized section is lazily looked up based on four items:</source>
          <target state="translated">이는 날짜, 시간 또는 날짜-시간 조합을 출력하는 데 적합한 현지화 된 섹션을 빌더에 추가합니다. 현지화 된 섹션의 형식은 네 가지 항목을 기준으로 느리게 조회됩니다.</target>
        </trans-unit>
        <trans-unit id="d700fecf40f724eba44dbf4e379113997e1398d6" translate="yes" xml:space="preserve">
          <source>This appends a localized zone offset to the builder, the format of the localized offset is controlled by the specified &lt;a href=&quot;formatstyle&quot;&gt;&lt;code&gt;style&lt;/code&gt;&lt;/a&gt; to this method:</source>
          <target state="translated">이렇게하면 지역화 된 영역 오프셋이 빌더에 추가되고 지역화 된 오프셋의 형식은 이 &lt;a href=&quot;formatstyle&quot;&gt; &lt;code&gt;style&lt;/code&gt; &lt;/a&gt; 에 지정된 스타일 로 제어됩니다 .</target>
        </trans-unit>
        <trans-unit id="6487cb530ad122df71ffcb6338354a5ae097b70f" translate="yes" xml:space="preserve">
          <source>This appends an instruction to format/parse the best available zone or offset ID to the builder. The zone ID is obtained in a lenient manner that first attempts to find a true zone ID, such as that on &lt;code&gt;ZonedDateTime&lt;/code&gt;, and then attempts to find an offset, such as that on &lt;code&gt;OffsetDateTime&lt;/code&gt;.</source>
          <target state="translated">여기에 사용 가능한 최상의 영역 또는 오프셋 ID를 형식화 / 구 문화하는 지침이 빌더에 추가됩니다. 영역 ID는 &lt;code&gt;ZonedDateTime&lt;/code&gt; 과 같은 실제 영역 ID를 먼저 찾은 다음 OffsetDateTime 과 같은 오프셋을 찾으려고 관대 한 방식으로 &lt;code&gt;OffsetDateTime&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e76363dee66256a2f3c0714515c9703601b9ff27" translate="yes" xml:space="preserve">
          <source>This appends an instruction to format/parse the chronology ID to the builder.</source>
          <target state="translated">연대기 ID를 형식화 / 구 문화하는 지시 사항이 빌더에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="ed8ad103ec710411c865c9e01597c86c03779bfb" translate="yes" xml:space="preserve">
          <source>This appends an instruction to format/parse the generic textual name of the zone to the builder. The generic name is the same throughout the whole year, ignoring any daylight saving changes. For example, 'Pacific Time' is the generic name, whereas 'Pacific Standard Time' and 'Pacific Daylight Time' are the specific names, see &lt;a href=&quot;#appendZoneText(java.time.format.TextStyle)&quot;&gt;&lt;code&gt;appendZoneText(TextStyle)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이는 영역의 일반 텍스트 이름을 빌더에 형식화 / 구문 분석하는 지침을 추가합니다. 일반 이름은 일광 절약 변경 사항을 무시하고 일년 내내 동일합니다. 예를 들어 'Pacific Time'은 일반적인 이름이고 'Pacific Standard Time'및 'Pacific Daylight Time'은 특정 이름 입니다. &lt;a href=&quot;#appendZoneText(java.time.format.TextStyle)&quot;&gt; &lt;code&gt;appendZoneText(TextStyle)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0c353c51ea950bb45e9fa1e8f8f16aec8bee4c30" translate="yes" xml:space="preserve">
          <source>This appends an instruction to format/parse the offset ID to the builder.</source>
          <target state="translated">이것은 오프셋 ID를 형식화 / 구 문화하는 명령을 빌더에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b4e600a2f00589a49ea004161fae69d7158dc603" translate="yes" xml:space="preserve">
          <source>This appends an instruction to format/parse the offset ID to the builder. This is equivalent to calling &lt;code&gt;appendOffset(&quot;+HH:MM:ss&quot;, &quot;Z&quot;)&lt;/code&gt;.</source>
          <target state="translated">이것은 오프셋 ID를 형식화 / 구 문화하는 명령을 빌더에 추가합니다. &lt;code&gt;appendOffset(&quot;+HH:MM:ss&quot;, &quot;Z&quot;)&lt;/code&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="96bf8f421fe2697d14542a328526358bc4e00509" translate="yes" xml:space="preserve">
          <source>This appends an instruction to format/parse the offset ID to the builder. This is equivalent to calling &lt;code&gt;appendOffset(&quot;+HH:mm:ss&quot;, &quot;Z&quot;)&lt;/code&gt;. See &lt;a href=&quot;#appendOffset(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;appendOffset(String, String)&lt;/code&gt;&lt;/a&gt; for details on formatting and parsing.</source>
          <target state="translated">그러면 빌더에 오프셋 ID를 형식화 / 분석하는 명령이 추가됩니다. 이는 &lt;code&gt;appendOffset(&quot;+HH:mm:ss&quot;, &quot;Z&quot;)&lt;/code&gt; 를 호출하는 것과 같습니다 . 형식 지정 및 구문 분석에 대한 자세한 내용 은 &lt;a href=&quot;#appendOffset(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;appendOffset(String, String)&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d86f8e93f39c33affe30be38ab664d8c8b94075f" translate="yes" xml:space="preserve">
          <source>This appends an instruction to format/parse the textual name of the zone to the builder.</source>
          <target state="translated">이것은 영역의 텍스트 이름을 빌더로 형식화 / 구 문화하는 지시 사항을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="9e41e08ec1df822e63d53a305a848c2af6417734" translate="yes" xml:space="preserve">
          <source>This appends an instruction to format/parse the zone ID to the builder only if it is a region-based ID.</source>
          <target state="translated">이것은 영역 기반 ID 인 경우에만 영역 ID를 빌더로 형식화 / 구 문화하는 지시 사항을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="c392099093a4becfdc5c9e4fe60aa91f843a66fc" translate="yes" xml:space="preserve">
          <source>This appends an instruction to format/parse the zone ID to the builder. The zone ID is obtained in a strict manner suitable for &lt;code&gt;ZonedDateTime&lt;/code&gt;. By contrast, &lt;code&gt;OffsetDateTime&lt;/code&gt; does not have a zone ID suitable for use with this method, see &lt;a href=&quot;#appendZoneOrOffsetId()&quot;&gt;&lt;code&gt;appendZoneOrOffsetId()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그러면 빌더에 영역 ID를 형식화 / 구문 분석하는 지침이 추가됩니다. 영역 ID는 &lt;code&gt;ZonedDateTime&lt;/code&gt; 에 적합한 엄격한 방식으로 얻습니다 . 반대로, &lt;code&gt;OffsetDateTime&lt;/code&gt; 에는이 메서드와 함께 사용하기에 적합한 영역 ID가 없습니다 . &lt;a href=&quot;#appendZoneOrOffsetId()&quot;&gt; &lt;code&gt;appendZoneOrOffsetId()&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3b37b4a643f5f53713c1af8800a2f80dd2a35a58" translate="yes" xml:space="preserve">
          <source>This appends an instruction to format/parse the zone ID to the builder. The zone ID is obtained in a strict manner suitable for &lt;code&gt;ZonedDateTime&lt;/code&gt;. By contrast, &lt;code&gt;OffsetDateTime&lt;/code&gt; does not have a zone ID suitable for use with this method, see &lt;a href=&quot;datetimeformatterbuilder#appendZoneOrOffsetId--&quot;&gt;&lt;code&gt;appendZoneOrOffsetId()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 영역 ID를 빌더로 형식화 / 구 문화하는 지시 사항을 추가합니다. 영역 ID는 &lt;code&gt;ZonedDateTime&lt;/code&gt; 에 적합한 엄격한 방식으로 얻습니다 . 반대로 &lt;code&gt;OffsetDateTime&lt;/code&gt; 에는이 메서드에 사용하기에 적합한 영역 ID가 없습니다 &lt;a href=&quot;datetimeformatterbuilder#appendZoneOrOffsetId--&quot;&gt; &lt;code&gt;appendZoneOrOffsetId()&lt;/code&gt; &lt;/a&gt; 참조 ) .</target>
        </trans-unit>
        <trans-unit id="116c49b6626c7acf49bd437a0b56faa051168c80" translate="yes" xml:space="preserve">
          <source>This appends an instruction to the builder to inject a default value into the parsed result. This is especially useful in conjunction with optional parts of the formatter.</source>
          <target state="translated">그러면 구문 분석 된 결과에 기본값을 삽입하라는 지시 사항이 빌더에 추가됩니다. 포맷터의 선택적 부분과 함께 사용하면 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7fbfb678ed44470b0f8fc43553dda5a197b935d4" translate="yes" xml:space="preserve">
          <source>This applies the conversions listed in &lt;a href=&quot;locale#forLanguageTag(java.lang.String)&quot;&gt;&lt;code&gt;Locale.forLanguageTag(java.lang.String)&lt;/code&gt;&lt;/a&gt; when constructing a Locale. (Grandfathered tags are handled in &lt;a href=&quot;#setLanguageTag(java.lang.String)&quot;&gt;&lt;code&gt;setLanguageTag(java.lang.String)&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">이것은 Locale을 구성 할 때 &lt;a href=&quot;locale#forLanguageTag(java.lang.String)&quot;&gt; &lt;code&gt;Locale.forLanguageTag(java.lang.String)&lt;/code&gt; &lt;/a&gt; 나열된 변환을 적용합니다 . (Grandfathered 태그는 &lt;a href=&quot;#setLanguageTag(java.lang.String)&quot;&gt; &lt;code&gt;setLanguageTag(java.lang.String)&lt;/code&gt; &lt;/a&gt; 에서 처리됩니다 .)</target>
        </trans-unit>
        <trans-unit id="9be0c13550155e8e59a2fd2d102063b4601f14ed" translate="yes" xml:space="preserve">
          <source>This applies the conversions listed in &lt;a href=&quot;locale#forLanguageTag-java.lang.String-&quot;&gt;&lt;code&gt;Locale.forLanguageTag(java.lang.String)&lt;/code&gt;&lt;/a&gt; when constructing a Locale. (Grandfathered tags are handled in &lt;a href=&quot;locale.builder#setLanguageTag-java.lang.String-&quot;&gt;&lt;code&gt;setLanguageTag(java.lang.String)&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">로케일을 구성 할 때 &lt;a href=&quot;locale#forLanguageTag-java.lang.String-&quot;&gt; &lt;code&gt;Locale.forLanguageTag(java.lang.String)&lt;/code&gt; &lt;/a&gt; 나열된 변환이 적용됩니다 . (Grandfathered 태그는 &lt;a href=&quot;locale.builder#setLanguageTag-java.lang.String-&quot;&gt; &lt;code&gt;setLanguageTag(java.lang.String)&lt;/code&gt; &lt;/a&gt; 에서 처리됩니다. .)</target>
        </trans-unit>
        <trans-unit id="10bb30b44f3877bad56240eda2e5132afc223874" translate="yes" xml:space="preserve">
          <source>This approach allows an alternate clock, such as &lt;a href=&quot;#fixed(java.time.Instant,java.time.ZoneId)&quot;&gt;&lt;code&gt;fixed&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#offset(java.time.Clock,java.time.Duration)&quot;&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/a&gt; to be used during testing.</source>
          <target state="translated">이 접근 방식을 사용하면 &lt;a href=&quot;#fixed(java.time.Instant,java.time.ZoneId)&quot;&gt; &lt;code&gt;fixed&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#offset(java.time.Clock,java.time.Duration)&quot;&gt; &lt;code&gt;offset&lt;/code&gt; &lt;/a&gt; 과 같은 대체 클록 을 테스트 중에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9d14656058135f7b74fa6f19ce86566b836ae09" translate="yes" xml:space="preserve">
          <source>This approach allows an alternate clock, such as &lt;a href=&quot;clock#fixed-java.time.Instant-java.time.ZoneId-&quot;&gt;&lt;code&gt;fixed&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;clock#offset-java.time.Clock-java.time.Duration-&quot;&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/a&gt; to be used during testing.</source>
          <target state="translated">이 방법을 사용하면 테스트 중에 &lt;a href=&quot;clock#fixed-java.time.Instant-java.time.ZoneId-&quot;&gt; &lt;code&gt;fixed&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;clock#offset-java.time.Clock-java.time.Duration-&quot;&gt; &lt;code&gt;offset&lt;/code&gt; &lt;/a&gt; 과 같은 대체 클록 을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85e0a67f730e49bce6d6a3af8cb7fe4101c647ff" translate="yes" xml:space="preserve">
          <source>This approach can cause slower times than the backing store approach when the viewport is obscured by another window, or partially offscreen. When another window obscures the viewport the copyArea will copy garbage and a paint event will be generated by the system to inform us we need to paint the newly exposed region. The only way to handle this is to repaint the whole viewport, which can cause slower performance than the backing store case. In most applications very rarely will the user be scrolling while the viewport is obscured by another window or offscreen, so this optimization is usually worth the performance hit when obscured.</source>
          <target state="translated">이 접근 방식은 뷰포트가 다른 창에 의해 가려 지거나 부분적으로 화면을 벗어난 경우 백업 저장소 접근 방식보다 느린 시간을 유발할 수 있습니다. 다른 창이 뷰포트를 가리면 copyArea는 쓰레기를 복사하고 페인트 이벤트가 시스템에 의해 생성되어 새로 노출 된 영역을 페인트해야 함을 알립니다. 이를 처리하는 유일한 방법은 전체 뷰포트를 다시 그리는 것이므로 백업 저장소 케이스보다 성능이 저하 될 수 있습니다. 대부분의 응용 프로그램에서 뷰포트가 다른 창이나 오프 스크린에 의해 가려지는 동안 사용자가 스크롤하는 경우는 매우 드뭅니다. 따라서이 최적화는 일반적으로 가려 졌을 때 성능 저하의 가치가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a45c8c988a424a289fab84dd5545b7a69d4eea5d" translate="yes" xml:space="preserve">
          <source>This approach ensures that a partial period can be added to a partial date. For example, a period of years and/or months can be added to a &lt;code&gt;YearMonth&lt;/code&gt;, but a period including days cannot. The approach also adds years and months together when necessary, which ensures correct behaviour at the end of the month.</source>
          <target state="translated">이 방법을 사용하면 부분 날짜를 부분 날짜에 추가 할 수 있습니다. 예를 들어 &lt;code&gt;YearMonth&lt;/code&gt; 에 년 및 / 또는 월을 추가 할 수 있지만 일을 포함하는 기간 은 추가 할 수 없습니다. 이 방법은 필요할 때 몇 년과 몇 달을 더하여 월말에 올바른 동작을 보장합니다.</target>
        </trans-unit>
        <trans-unit id="90ee599e8b118f32de5c4e9cd0140e9dbc90fd8a" translate="yes" xml:space="preserve">
          <source>This approach ensures that a partial period can be subtracted from a partial date. For example, a period of years and/or months can be subtracted from a &lt;code&gt;YearMonth&lt;/code&gt;, but a period including days cannot. The approach also subtracts years and months together when necessary, which ensures correct behaviour at the end of the month.</source>
          <target state="translated">이 방법을 사용하면 부분 날짜에서 부분 기간을 뺄 수 있습니다. 예를 들어 &lt;code&gt;YearMonth&lt;/code&gt; 에서 년 및 / 또는 월을 뺄 수 있습니다. 있지만 일을 포함하는 기간은 할 수 없습니다. 이 방법은 필요한 경우 몇 년과 몇 달을 빼서 월말에 올바른 동작을 보장합니다.</target>
        </trans-unit>
        <trans-unit id="9a34f705974537252f812b090b7633f5333d4528" translate="yes" xml:space="preserve">
          <source>This approach has the advantage that the party who unseals the object does not need to keep track of the parameters (e.g., an IV) that were used to seal the object.</source>
          <target state="translated">이러한 접근법은 물체를 씰 해제하는 당사자가 물체를 밀봉하는데 사용 된 파라미터 (예를 들어, IV)를 추적 할 필요가 없다는 이점을 갖는다.</target>
        </trans-unit>
        <trans-unit id="6b27b76b29cfa32a58ebb4f790b16569099bdf3f" translate="yes" xml:space="preserve">
          <source>This approach has the advantage that the party who unseals the sealed object does not require knowledge of the decryption key. For example, after one party has initialized the cipher object with the required decryption key, it could hand over the cipher object to another party who then unseals the sealed object.</source>
          <target state="translated">이 접근 방식은 봉인 된 객체를 봉인 해제하는 당사자가 암호 해독 키에 대한 지식이 필요하지 않다는 이점이 있습니다. 예를 들어, 한 당사자가 필요한 암호 해독 키를 사용하여 암호 오브젝트를 초기화 한 후 암호 오브젝트를 다른 당사자에게 넘겨서 봉인 된 오브젝트를 해제합니다.</target>
        </trans-unit>
        <trans-unit id="63c09dec8a7d446df4a7af11bf80860cea142ccd" translate="yes" xml:space="preserve">
          <source>This approach treats the problem of globalized calendar systems as a localization issue and confines it to the UI layer. This approach is in keeping with other localization issues in the java platform.</source>
          <target state="translated">이 방법은 세계화 된 캘린더 시스템의 문제를 현지화 문제로 취급하고이를 UI 계층으로 제한합니다. 이 접근법은 Java 플랫폼의 다른 현지화 문제와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="6ee23886ff54f299e39c18931168ee4bde63355b" translate="yes" xml:space="preserve">
          <source>This assertion applies in exactly the same manner when column names are used rather than column indexes to indicate match columns.</source>
          <target state="translated">이 어설 션은 일치 열을 표시하기 위해 열 인덱스가 아닌 열 이름을 사용할 때 정확히 동일한 방식으로 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="5d37c0cbc90047ba24accc0819ca57b15ffac57c" translate="yes" xml:space="preserve">
          <source>This assumes that path is valid and visible.</source>
          <target state="translated">이것은 경로가 유효하고 가시적이라고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="06077f209c1cf7657990e9de9091d981d9baed74" translate="yes" xml:space="preserve">
          <source>This attempts to validate the view before scrolling if the view is currently not valid - &lt;code&gt;isValid&lt;/code&gt; returns false. To avoid excessive validation when the containment hierarchy is being created this will not validate if one of the ancestors does not have a peer, or there is no validate root ancestor, or one of the ancestors is not a &lt;code&gt;Window&lt;/code&gt; or &lt;code&gt;Applet&lt;/code&gt;.</source>
          <target state="translated">보기가 현재 유효하지 않은 경우 스크롤하기 전에보기 유효성 검사를 시도합니다 . &lt;code&gt;isValid&lt;/code&gt; 는 false를 반환합니다. 포함 계층이 생성 될 때 과도한 유효성 검사를 방지하기 위해 조상 중 하나에 피어가 없거나 유효성 검사 루트 조상이 없거나 조상 중 하나가 &lt;code&gt;Window&lt;/code&gt; 또는 &lt;code&gt;Applet&lt;/code&gt; 이 아닌지 확인하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="1d29cb8ee59b1f13851e79bfb48d7752a39ee675" translate="yes" xml:space="preserve">
          <source>This attribute can be used instead of specifying &lt;code&gt;MediaName&lt;/code&gt; or &lt;code&gt;MediaTray&lt;/code&gt;.</source>
          <target state="translated">이 속성은 &lt;code&gt;MediaName&lt;/code&gt; 또는 &lt;code&gt;MediaTray&lt;/code&gt; 를 지정하는 대신 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f9839ac7cfc6972aa6e3c27cd9ee2d14103b5400" translate="yes" xml:space="preserve">
          <source>This attribute can be used instead of specifying &lt;code&gt;MediaSize&lt;/code&gt; or &lt;code&gt;MediaTray&lt;/code&gt;.</source>
          <target state="translated">이 속성은 &lt;code&gt;MediaSize&lt;/code&gt; 또는 &lt;code&gt;MediaTray&lt;/code&gt; 를 지정하는 대신 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2e4acb3eebe760200b57ee09d39e8e33a473219a" translate="yes" xml:space="preserve">
          <source>This attribute can be used instead of specifying MediaName or MediaTray.</source>
          <target state="translated">이 속성은 MediaName 또는 MediaTray를 지정하는 대신 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04ce450d52d4aa8c1c76637f12936f4c702a2de7" translate="yes" xml:space="preserve">
          <source>This attribute can be used instead of specifying MediaSize or MediaTray.</source>
          <target state="translated">이 속성은 MediaSize 또는 MediaTray를 지정하는 대신 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5c8397b10b82584578010b109f26b5155828a6b" translate="yes" xml:space="preserve">
          <source>This attribute defines a pattern from which to create a &lt;a href=&quot;../../../../../java.base/java/io/objectinputfilter&quot;&gt;&lt;code&gt;ObjectInputFilter&lt;/code&gt;&lt;/a&gt; that will be used when deserializing objects sent to the &lt;code&gt;JMXConnectorServer&lt;/code&gt; by any client.</source>
          <target state="translated">이 속성은 클라이언트 가 &lt;code&gt;JMXConnectorServer&lt;/code&gt; 로 전송 한 오브젝트를 직렬화 해제 할 때 사용되는 &lt;a href=&quot;../../../../../java.base/java/io/objectinputfilter&quot;&gt; &lt;code&gt;ObjectInputFilter&lt;/code&gt; &lt;/a&gt; 를 작성할 패턴을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="1ff6fe30b2cb169576ceeb2cc5d5d150840a9a7a" translate="yes" xml:space="preserve">
          <source>This attribute determines which node types are presented via the &lt;code&gt;NodeIterator&lt;/code&gt;.</source>
          <target state="translated">이 속성은 &lt;code&gt;NodeIterator&lt;/code&gt; 를 통해 표시되는 노드 유형을 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="47f9bc2b84445fd52bc47b4af3c92e337b82dcd6" translate="yes" xml:space="preserve">
          <source>This attribute determines which node types are presented via the &lt;code&gt;NodeIterator&lt;/code&gt;. The available set of constants is defined in the &lt;code&gt;NodeFilter&lt;/code&gt; interface. Nodes not accepted by &lt;code&gt;whatToShow&lt;/code&gt; will be skipped, but their children may still be considered. Note that this skip takes precedence over the filter, if any.</source>
          <target state="translated">이 속성은 &lt;code&gt;NodeIterator&lt;/code&gt; 를 통해 표시되는 노드 유형을 결정합니다 . 사용 가능한 상수 세트는 &lt;code&gt;NodeFilter&lt;/code&gt; 인터페이스에 정의되어 있습니다. &lt;code&gt;whatToShow&lt;/code&gt; 에서 허용하지 않는 노드 는 건너 뛰지 만 그 자식은 여전히 ​​고려 될 수 있습니다. 이 건너 뛰기는 필터 (있는 경우)보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="a9dd791cd3854811797901394c584fd7280cf0fc" translate="yes" xml:space="preserve">
          <source>This attribute determines which node types are presented via the &lt;code&gt;TreeWalker&lt;/code&gt;.</source>
          <target state="translated">이 속성은 &lt;code&gt;TreeWalker&lt;/code&gt; 를 통해 표시되는 노드 유형을 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="9cc2c8240519d47427a73126e685f7806dc38dde" translate="yes" xml:space="preserve">
          <source>This attribute determines which node types are presented via the &lt;code&gt;TreeWalker&lt;/code&gt;. The available set of constants is defined in the &lt;code&gt;NodeFilter&lt;/code&gt; interface. Nodes not accepted by &lt;code&gt;whatToShow&lt;/code&gt; will be skipped, but their children may still be considered. Note that this skip takes precedence over the filter, if any.</source>
          <target state="translated">이 속성은 &lt;code&gt;TreeWalker&lt;/code&gt; 를 통해 표시되는 노드 유형을 결정합니다 . 사용 가능한 상수 세트는 &lt;code&gt;NodeFilter&lt;/code&gt; 인터페이스에 정의되어 있습니다. &lt;code&gt;whatToShow&lt;/code&gt; 에서 허용하지 않는 노드 는 건너 뛰지 만 그 자식은 여전히 ​​고려 될 수 있습니다. 이 건너 뛰기는 필터 (있는 경우)보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="775fa7357d3aadb91bd254230530fe4105c9e2cd" translate="yes" xml:space="preserve">
          <source>This attribute has no effect when the application provides a character stream or string data. For other sources of input, an encoding specified by means of this attribute will override any encoding specified in the XML declaration or the Text declaration, or an encoding obtained from a higher level protocol, such as HTTP [&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;IETF RFC 2616&lt;/a&gt;].</source>
          <target state="translated">이 속성은 애플리케이션이 문자 스트림 또는 문자열 데이터를 제공 할 때 효과가 없습니다. 다른 입력 소스의 경우이 속성을 통해 지정된 인코딩은 XML 선언 또는 텍스트 선언에 지정된 인코딩 또는 HTTP [ &lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;IETF RFC 2616&lt;/a&gt; ] 과 같은 상위 수준 프로토콜에서 얻은 인코딩을 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="5db00a6c3e77450d1aff59c58f6413af167968c6" translate="yes" xml:space="preserve">
          <source>This attribute indicates that any upcoming changes to the value of the model should be considered a single event.</source>
          <target state="translated">이 속성은 모델 값에 대한 향후 변경 사항이 단일 이벤트로 간주되어야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="395c9efa30883fb132ad0c46f60df21131e1ce6f" translate="yes" xml:space="preserve">
          <source>This attribute indicates that any upcoming changes to the value of the model should be considered a single event. This attribute will be set to true at the start of a series of changes to the value, and will be set to false when the value has finished changing. Normally this allows a listener to only take action when the final value change in committed, instead of having to do updates for all intermediate values.</source>
          <target state="translated">이 속성은 모델 값에 대한 향후 변경 사항이 단일 이벤트로 간주되어야 함을 나타냅니다. 이 속성은 일련의 값 변경이 시작될 때 true로 설정되고 값 변경이 완료되면 false로 설정됩니다. 일반적으로 리스너는 모든 중간 값에 대해 업데이트를 수행 할 필요없이 커밋 된 최종 값이 변경 될 때만 조치를 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a58c03b8321b50d6ffb90742e0fdffcc3b889085" translate="yes" xml:space="preserve">
          <source>This attribute is often used as a simple access control mechanism to prevent files from being deleted or updated. Whether the file system or platform does any enforcement to prevent &lt;em&gt;read-only&lt;/em&gt; files from being updated is implementation specific.</source>
          <target state="translated">이 속성은 종종 파일의 삭제 또는 업데이트를 막기 위해 간단한 액세스 제어 메커니즘으로 사용됩니다. 파일 시스템 또는 플랫폼이 &lt;em&gt;읽기 전용&lt;/em&gt; 파일의 업데이트 를 막기 위해 시행을 수행하는지 여부 는 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="3eeb1d55245778cba97de33ea39c544ab59df5c7" translate="yes" xml:space="preserve">
          <source>This attribute is often used to indicate if the file is visible to users.</source>
          <target state="translated">이 속성은 파일이 사용자에게 표시되는지 여부를 나타내는 데 종종 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0596a0228dd81612a4d3fd62530c3e80647f1746" translate="yes" xml:space="preserve">
          <source>This attribute is often used to indicate that the file is a component of the operating system.</source>
          <target state="translated">이 속성은 파일이 운영 체제의 구성 요소임을 나타내는 데 종종 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0b6b3d268faabc1bc1a3c7d7722914a4fe8827d8" translate="yes" xml:space="preserve">
          <source>This attribute is typically used by backup programs.</source>
          <target state="translated">이 속성은 일반적으로 백업 프로그램에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ad69f65feaa2dfb5e50cd124892058f6da73589d" translate="yes" xml:space="preserve">
          <source>This attribute is used to reserve space for a graphic or other component embedded in a line of text. It is required for correct positioning of 'inline' components within a line when bidirectional reordering (see &lt;a href=&quot;../../../../java.base/java/text/bidi&quot;&gt;&lt;code&gt;Bidi&lt;/code&gt;&lt;/a&gt;) is performed. Each character (Unicode code point) will be rendered using the provided GraphicAttribute. Typically, the characters to which this attribute is applied should be &lt;code&gt;\uFFFC&lt;/code&gt;.</source>
          <target state="translated">이 속성은 텍스트 줄에 포함 된 그래픽 또는 기타 구성 요소를위한 공간을 예약하는 데 사용됩니다. 양방향 재정렬 ( &lt;a href=&quot;../../../../java.base/java/text/bidi&quot;&gt; &lt;code&gt;Bidi&lt;/code&gt; &lt;/a&gt; 참조 )이 수행 될 때 라인 내에서 '인라인'구성 요소의 올바른 위치 지정에 필요합니다 . 각 문자 (유니 코드 코드 포인트)는 제공된 GraphicAttribute를 사용하여 렌더링됩니다. 일반적으로이 속성이 적용되는 문자는 &lt;code&gt;\uFFFC&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="0bbb066681cd7e4016c474fd8c3d0dac709b5611" translate="yes" xml:space="preserve">
          <source>This attribute returns the text content of this node and its descendants.</source>
          <target state="translated">이 속성은이 노드와 그 하위 항목의 텍스트 콘텐츠를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="825038b315197b9ff2b31c66c3a6ef426a193b46" translate="yes" xml:space="preserve">
          <source>This attribute returns the text content of this node and its descendants. When it is defined to be &lt;code&gt;null&lt;/code&gt;, setting it has no effect. On setting, any possible children this node may have are removed and, if it the new string is not empty or &lt;code&gt;null&lt;/code&gt;, replaced by a single &lt;code&gt;Text&lt;/code&gt; node containing the string this attribute is set to.</source>
          <target state="translated">이 속성은이 노드와 그 하위 항목의 텍스트 콘텐츠를 반환합니다. &lt;code&gt;null&lt;/code&gt; 로 정의 된 경우 설정해도 효과가 없습니다. 설정시이 노드가 가질 수있는 모든 가능한 자식이 제거되고 새 문자열이 비어 있지 않거나 &lt;code&gt;null&lt;/code&gt; 이 아닌 경우이 속성이 설정된 문자열을 포함 하는 단일 &lt;code&gt;Text&lt;/code&gt; 노드 로 대체됩니다 .</target>
        </trans-unit>
        <trans-unit id="0af09403714e88dfda7b330926ca836af61e562f" translate="yes" xml:space="preserve">
          <source>This attribute specifies the &lt;code&gt;.ser&lt;/code&gt; file that contains a serialized representation of the MBean to be obtained. This file must be contained in one of the &lt;code&gt;.jar&lt;/code&gt; files specified by the &lt;code&gt;ARCHIVE&lt;/code&gt; attribute. If the &lt;code&gt;.jar&lt;/code&gt; file contains a directory hierarchy, specify the path of the file within this hierarchy. Otherwise a match will not be found. Either &lt;code&gt;CODE&lt;/code&gt; or &lt;code&gt;OBJECT&lt;/code&gt; must be present.</source>
          <target state="translated">이 속성은 획득 할 MBean의 직렬화 된 표현을 포함하는 &lt;code&gt;.ser&lt;/code&gt; 파일을 지정합니다 . 이 파일은 &lt;code&gt;ARCHIVE&lt;/code&gt; 속성으로 지정된 &lt;code&gt;.jar&lt;/code&gt; 파일 중 하나에 포함되어야 합니다. 는 IF &lt;code&gt;.jar&lt;/code&gt; 파일이 디렉토리 계층 구조를 포함하고,이 계층 구조 내에서 파일의 경로를 지정합니다. 그렇지 않으면 일치하는 것이 없습니다. 어느 &lt;code&gt;CODE&lt;/code&gt; 또는 &lt;code&gt;OBJECT&lt;/code&gt; 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="d147fedbae7325c324e7d77fc07d77deceb84bb9" translate="yes" xml:space="preserve">
          <source>This attribute specifies the full Java class name, including package name, of the MBean to be obtained. The compiled &lt;code&gt;.class&lt;/code&gt; file of the MBean must be contained in one of the &lt;code&gt;.jar&lt;/code&gt; files specified by the &lt;code&gt;ARCHIVE&lt;/code&gt; attribute. Either &lt;code&gt;CODE&lt;/code&gt; or &lt;code&gt;OBJECT&lt;/code&gt; must be present.</source>
          <target state="translated">이 속성은 얻을 MBean의 패키지 이름을 포함한 전체 Java 클래스 이름을 지정합니다. MBean 의 컴파일 된 &lt;code&gt;.class&lt;/code&gt; 파일은 &lt;code&gt;ARCHIVE&lt;/code&gt; 속성으로 지정된 &lt;code&gt;.jar&lt;/code&gt; 파일 중 하나에 포함되어야 합니다. 어느 &lt;code&gt;CODE&lt;/code&gt; 또는 &lt;code&gt;OBJECT&lt;/code&gt; 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="d39ea3a4b962295cfcdaccaa4d71472821e4391f" translate="yes" xml:space="preserve">
          <source>This attribute's &lt;code&gt;X&lt;/code&gt; dimension is equal to &lt;code&gt;object&lt;/code&gt;'s &lt;code&gt;X&lt;/code&gt; dimension.</source>
          <target state="translated">이 속성의 &lt;code&gt;X&lt;/code&gt; 의 크기는 동일 &lt;code&gt;object&lt;/code&gt; 의 &lt;code&gt;X&lt;/code&gt; 의 차원.</target>
        </trans-unit>
        <trans-unit id="63eca658d77832ea9d65009db7134477803ca2f5" translate="yes" xml:space="preserve">
          <source>This attribute's &lt;code&gt;Y&lt;/code&gt; dimension is equal to &lt;code&gt;object&lt;/code&gt;'s &lt;code&gt;Y&lt;/code&gt; dimension.</source>
          <target state="translated">이 속성의 &lt;code&gt;Y&lt;/code&gt; 의 크기는 동일 &lt;code&gt;object&lt;/code&gt; 의 &lt;code&gt;Y&lt;/code&gt; 의 차원.</target>
        </trans-unit>
        <trans-unit id="a0c53530aad014804af0b4de10d041606ae7c636" translate="yes" xml:space="preserve">
          <source>This attribute's X dimension is equal to &lt;code&gt;object&lt;/code&gt;'s X dimension.</source>
          <target state="translated">이 속성의 X 치수는 &lt;code&gt;object&lt;/code&gt; 의 X 치수와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="86198e24becbec5b86fec6178a8c1283a8fc118b" translate="yes" xml:space="preserve">
          <source>This attribute's Y dimension is equal to &lt;code&gt;object&lt;/code&gt;'s Y dimension.</source>
          <target state="translated">이 속성의 Y 치수는 &lt;code&gt;object&lt;/code&gt; 같습니다 .</target>
        </trans-unit>
        <trans-unit id="fdc945bfb1edc9c7533be74c4de3229628d02df5" translate="yes" xml:space="preserve">
          <source>This attribute's cross feed direction resolution is equal to &lt;code&gt;object&lt;/code&gt;'s cross feed direction resolution.</source>
          <target state="translated">이 속성의 교차 피드 방향 해상도는 &lt;code&gt;object&lt;/code&gt; 같습니다. 의 교차 피드 방향 해상도와 같습니다.</target>
        </trans-unit>
        <trans-unit id="42a722408b194823e78df986d87812f231231ff3" translate="yes" xml:space="preserve">
          <source>This attribute's cross feed direction resolution is less than or equal to the &lt;code&gt;other&lt;/code&gt; attribute's cross feed direction resolution.</source>
          <target state="translated">이 속성의 교차 피드 방향 해상도가 &lt;code&gt;other&lt;/code&gt; 속성보다 작거나 같습니다 속성의 교차 피드 방향 해상도 .</target>
        </trans-unit>
        <trans-unit id="bf49e9bd87ea63e550f5aa731a9e96e45c21ebf8" translate="yes" xml:space="preserve">
          <source>This attribute's feed direction resolution is equal to &lt;code&gt;object&lt;/code&gt;'s feed direction resolution.</source>
          <target state="translated">이 속성의 피드 방향 해상도는 &lt;code&gt;object&lt;/code&gt; 의 피드 방향 해상도와 같습니다.</target>
        </trans-unit>
        <trans-unit id="136df71936942acc7cc0e61189291431a74f5eaf" translate="yes" xml:space="preserve">
          <source>This attribute's feed direction resolution is less than or equal to the &lt;code&gt;other&lt;/code&gt; attribute's feed direction resolution.</source>
          <target state="translated">이 속성의 피드 방향 해상도가 &lt;code&gt;other&lt;/code&gt; 속성의 피드 방향 해상도 보다 작거나 같습니다 .</target>
        </trans-unit>
        <trans-unit id="4880d6984e9ccd72b50c0ebb6ac9d4f39f2e1283" translate="yes" xml:space="preserve">
          <source>This attribute's schema definition. Null if the implementation supports schemas but this particular attribute does not have any schema information.</source>
          <target state="translated">이 속성의 스키마 정의. 구현이 스키마를 지원하지만이 특정 속성에 스키마 정보가없는 경우 널입니다.</target>
        </trans-unit>
        <trans-unit id="95ec5f83f16371801ae3b13ea00e9349940346a1" translate="yes" xml:space="preserve">
          <source>This base class returns an empty string, but this may be overridden by subclasses.</source>
          <target state="translated">이 기본 클래스는 빈 문자열을 리턴하지만 서브 클래스로 대체 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00d38d0ba474eda1b8a360fd28b3e5ea975b2310" translate="yes" xml:space="preserve">
          <source>This becomes clearer if we compare what the clients of the two models might look like:</source>
          <target state="translated">두 모델의 클라이언트가 어떻게 보이는지 비교하면 더 명확 해집니다.</target>
        </trans-unit>
        <trans-unit id="774d9ce470ca7af1fe8965efc6e545de74b04b71" translate="yes" xml:space="preserve">
          <source>This behavior can also be enabled by setting the System Property &quot;java.awt.Window.locationByPlatform&quot; to &quot;true&quot;, though calls to this method take precedence.</source>
          <target state="translated">이 동작은 시스템 속성 &quot;java.awt.Window.locationByPlatform&quot;을 &quot;true&quot;로 설정하여 활성화 할 수도 있지만이 메서드에 대한 호출이 우선합니다.</target>
        </trans-unit>
        <trans-unit id="4393a931c180010834fc8338b3fb8f0d82bcc89a" translate="yes" xml:space="preserve">
          <source>This behavior is designed to support debugging and to be compatible with previous uses of &lt;code&gt;toString&lt;/code&gt; that expected language, country, and variant fields only. To represent a Locale as a String for interchange purposes, use &lt;a href=&quot;#toLanguageTag()&quot;&gt;&lt;code&gt;toLanguageTag()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 동작은 디버깅을 지원하고 언어, 국가 및 변형 필드 만 예상했던 &lt;code&gt;toString&lt;/code&gt; 의 이전 사용과 호환되도록 설계되었습니다 . 교환 목적으로 로케일을 문자열로 나타내려면 &lt;a href=&quot;#toLanguageTag()&quot;&gt; &lt;code&gt;toLanguageTag()&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b8112861628bf3cb4cdbc975fb94a82903ce6439" translate="yes" xml:space="preserve">
          <source>This behavior is designed to support debugging and to be compatible with previous uses of &lt;code&gt;toString&lt;/code&gt; that expected language, country, and variant fields only. To represent a Locale as a String for interchange purposes, use &lt;a href=&quot;locale#toLanguageTag--&quot;&gt;&lt;code&gt;toLanguageTag()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 동작은 디버깅을 지원하고 언어, 국가 및 변형 필드 만 예상되는 &lt;code&gt;toString&lt;/code&gt; 의 이전 사용과 호환되도록 설계되었습니다 . 교환 목적으로 로케일을 문자열로 표시하려면 &lt;a href=&quot;locale#toLanguageTag--&quot;&gt; &lt;code&gt;toLanguageTag()&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="0c2d139f6620ff45c0de7612b11482344771e9ab" translate="yes" xml:space="preserve">
          <source>This block was previously known as &quot;Combining Marks for Symbols&quot;.</source>
          <target state="translated">이 블록은 이전에는 &quot;기호에 대한 마크 결합&quot;으로 알려져있었습니다.</target>
        </trans-unit>
        <trans-unit id="14876ac73afcb34469404e2320461183f7735ef5" translate="yes" xml:space="preserve">
          <source>This block was previously known as the &quot;Greek&quot; block.</source>
          <target state="translated">이 블록은 이전에는 &quot;Greek&quot;블록으로 알려져있었습니다.</target>
        </trans-unit>
        <trans-unit id="ffebf1c6fe3a124fab11954a1f49cffc7412e77c" translate="yes" xml:space="preserve">
          <source>This boolean indicates whether or not it is acceptable to apply the color filtering of the filterRGB method to the color table entries of an IndexColorModel object in lieu of pixel by pixel filtering.</source>
          <target state="translated">이 부울은 픽셀 단위 필터링 대신 IndexColorModel 개체의 색상 표 항목에 filterRGB 메서드의 색상 필터링을 적용 할 수 있는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="fdb1608ae5345800fe4052853acc9aea70b169f7" translate="yes" xml:space="preserve">
          <source>This boolean indicates whether or not it is acceptable to apply the color filtering of the filterRGB method to the color table entries of an IndexColorModel object in lieu of pixel by pixel filtering. Subclasses should set this variable to true in their constructor if their filterRGB method does not depend on the coordinate of the pixel being filtered.</source>
          <target state="translated">이 부울은 픽셀 단위 필터링 대신 IndexColorModel 개체의 색상 표 항목에 filterRGB 메서드의 색상 필터링을 적용 할 수 있는지 여부를 나타냅니다. filterRGB 메서드가 필터링되는 픽셀의 좌표에 의존하지 않는 경우 서브 클래스는 생성자에서이 변수를 true로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="f3f5626990b494e388e57ff761627940cac15cd5" translate="yes" xml:space="preserve">
          <source>This buffer</source>
          <target state="translated">이 버퍼</target>
        </trans-unit>
        <trans-unit id="c27e5c7676de43b1074567048424ea5097800b42" translate="yes" xml:space="preserve">
          <source>This buffer's byte order</source>
          <target state="translated">이 버퍼의 바이트 순서</target>
        </trans-unit>
        <trans-unit id="eded5cf1580337e77050068725d29c2303fdd78b" translate="yes" xml:space="preserve">
          <source>This builder</source>
          <target state="translated">이 빌더</target>
        </trans-unit>
        <trans-unit id="d084b06bb48e26d99a49679f9badb91b0961f1a1" translate="yes" xml:space="preserve">
          <source>This builder can still be used after creating the formatter if desired, although the state may have been changed by calls to &lt;code&gt;optionalEnd&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;optionalEnd&lt;/code&gt; 에 대한 호출로 상태가 변경되었을 수 있지만 원하는 경우 포맷터를 작성한 후에도이 빌더를 계속 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c0a367dcd24e85f4849a51096bb8414304e05ebd" translate="yes" xml:space="preserve">
          <source>This builder.</source>
          <target state="translated">이 빌더.</target>
        </trans-unit>
        <trans-unit id="fcc1a0e36b13027b1cd2e8e182a87b2a50741a65" translate="yes" xml:space="preserve">
          <source>This calculates the amount in terms of this unit. The start and end points are supplied as temporal objects and must be of compatible types. The implementation will convert the second type to be an instance of the first type before the calculating the amount. The result will be negative if the end is before the start. For example, the amount in hours between two temporal objects can be calculated using &lt;code&gt;HOURS.between(startTime, endTime)&lt;/code&gt;.</source>
          <target state="translated">이 단위로 금액을 계산합니다. 시작점과 끝점은 임시 객체로 제공되며 호환 가능한 유형이어야합니다. 구현은 금액을 계산하기 전에 두 번째 유형을 첫 번째 유형의 인스턴스로 변환합니다. 끝이 시작하기 전에 결과는 음수입니다. 예를 들어, 두 시간 객체 사이의 시간 (시간)은 &lt;code&gt;HOURS.between(startTime, endTime)&lt;/code&gt; 사용하여 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fed0d1f12362f97ddc09d2e81cbed14645b22d84" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;ChronoLocalDate&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified date. The result will be negative if the end is before the start. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;ChronoLocalDate&lt;/code&gt; using &lt;a href=&quot;chronology#date(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;Chronology.date(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. The calculation returns a whole number, representing the number of complete units between the two dates. For example, the amount in days between two dates can be calculated using &lt;code&gt;startDate.until(endDate, DAYS)&lt;/code&gt;.</source>
          <target state="translated">단일 &lt;code&gt;TemporalUnit&lt;/code&gt; 측면에서 두 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 객체 사이의 시간을 계산합니다 . 시작 및 종료 지점은 &lt;code&gt;this&lt;/code&gt; 날짜와 지정된 날짜입니다. 종료가 시작 전이면 결과는 음수입니다. 이 메서드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 은 &lt;a href=&quot;chronology#date(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;Chronology.date(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 로 변환됩니다 . 계산은 두 날짜 사이의 완전한 단위 수를 나타내는 정수를 반환합니다. 예를 들어, 두 날짜 사이의 일수는 &lt;code&gt;startDate.until(endDate, DAYS)&lt;/code&gt; 사용하여 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f28ba1aed263ee4a7a43885af68db05c8ba2820a" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;ChronoLocalDate&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified date. The result will be negative if the end is before the start. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;ChronoLocalDate&lt;/code&gt; using &lt;a href=&quot;chronology#date-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;Chronology.date(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. The calculation returns a whole number, representing the number of complete units between the two dates. For example, the amount in days between two dates can be calculated using &lt;code&gt;startDate.until(endDate, DAYS)&lt;/code&gt;.</source>
          <target state="translated">단일 &lt;code&gt;TemporalUnit&lt;/code&gt; 로 두 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 개체 사이의 시간을 계산합니다 . 시작 및 종료 지점은 &lt;code&gt;this&lt;/code&gt; 날짜이며 지정된 날짜입니다. 끝이 시작하기 전에 결과는 음수입니다. 이 메서드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 은 &lt;a href=&quot;chronology#date-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;Chronology.date(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 로 변환됩니다 . 계산은 두 날짜 사이의 완전한 단위 수를 나타내는 정수를 반환합니다. 예를 들어, 두 날짜 사이의 일 수는 &lt;code&gt;startDate.until(endDate, DAYS)&lt;/code&gt; 사용하여 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3b4622719770f788423dc6ea293d9a72b634223f" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;Instant&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified instant. The result will be negative if the end is before the start. The calculation returns a whole number, representing the number of complete units between the two instants. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;Instant&lt;/code&gt; using &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. For example, the amount in seconds between two dates can be calculated using &lt;code&gt;startInstant.until(endInstant, SECONDS)&lt;/code&gt;.</source>
          <target state="translated">이것은 단일 &lt;code&gt;TemporalUnit&lt;/code&gt; 관점에서 두 &lt;code&gt;Instant&lt;/code&gt; 객체 사이의 시간을 계산합니다 . 시작점과 끝점은 &lt;code&gt;this&lt;/code&gt; 과 지정된 순간입니다. 종료가 시작 전이면 결과는 음수입니다. 계산은 두 순간 사이의 완전한 단위 수를 나타내는 정수를 반환합니다. 이 메서드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 은 &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;Instant&lt;/code&gt; 로 변환됩니다 . 예를 들어 두 날짜 사이의 시간 (초)은 &lt;code&gt;startInstant.until(endInstant, SECONDS)&lt;/code&gt; 사용하여 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="042600c3bd3d8fa895b02a793742724c69aa74b1" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;Instant&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified instant. The result will be negative if the end is before the start. The calculation returns a whole number, representing the number of complete units between the two instants. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;Instant&lt;/code&gt; using &lt;a href=&quot;instant#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. For example, the amount in days between two dates can be calculated using &lt;code&gt;startInstant.until(endInstant, SECONDS)&lt;/code&gt;.</source>
          <target state="translated">단일 &lt;code&gt;TemporalUnit&lt;/code&gt; 의 관점에서 두 &lt;code&gt;Instant&lt;/code&gt; 객체 간의 시간을 계산합니다 . 시작 지점과 종료 지점은 &lt;code&gt;this&lt;/code&gt; 과 지정된 순간입니다. 끝이 시작하기 전에 결과는 음수입니다. 이 계산은 두 순간 사이의 완전한 단위 수를 나타내는 정수를 반환합니다. 이 메소드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 은 &lt;a href=&quot;instant#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;Instant&lt;/code&gt; 로 변환됩니다 . 예를 들어 &lt;code&gt;startInstant.until(endInstant, SECONDS)&lt;/code&gt; 사용하여 두 날짜 사이의 일 수를 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aab59e58b0a9c2ee957c10247db15d1bc2f5ef38" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;LocalDate&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified date. The result will be negative if the end is before the start. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;LocalDate&lt;/code&gt; using &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. For example, the amount in days between two dates can be calculated using &lt;code&gt;startDate.until(endDate, DAYS)&lt;/code&gt;.</source>
          <target state="translated">이것은 단일 &lt;code&gt;TemporalUnit&lt;/code&gt; 측면에서 두 &lt;code&gt;LocalDate&lt;/code&gt; 객체 사이의 시간을 계산합니다 . 시작 및 종료 지점은 &lt;code&gt;this&lt;/code&gt; 날짜와 지정된 날짜입니다. 종료가 시작 전이면 결과는 음수입니다. 이 메서드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 은 &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;LocalDate&lt;/code&gt; 로 변환됩니다 . 예를 들어, 두 날짜 사이의 일수는 &lt;code&gt;startDate.until(endDate, DAYS)&lt;/code&gt; 사용하여 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="09fb64acead91b0835e975fd6d1baf20e5fb366a" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;LocalDate&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified date. The result will be negative if the end is before the start. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;LocalDate&lt;/code&gt; using &lt;a href=&quot;localdate#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. For example, the amount in days between two dates can be calculated using &lt;code&gt;startDate.until(endDate, DAYS)&lt;/code&gt;.</source>
          <target state="translated">두 &lt;code&gt;LocalDate&lt;/code&gt; 사이의 시간을 계산합니다.단일 &lt;code&gt;TemporalUnit&lt;/code&gt; 로 객체 . 시작 및 종료 지점은 &lt;code&gt;this&lt;/code&gt; 날짜이며 지정된 날짜입니다. 끝이 시작하기 전에 결과는 음수입니다. 이 메소드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 은 &lt;a href=&quot;localdate#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;LocalDate&lt;/code&gt; 로 변환됩니다 . 예를 들어, 두 날짜 사이의 일 수는 &lt;code&gt;startDate.until(endDate, DAYS)&lt;/code&gt; 사용하여 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="78e4b44f0b1521e5197cd2479c0593f2f6d7835f" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;LocalDateTime&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified date-time. The result will be negative if the end is before the start. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;LocalDateTime&lt;/code&gt; using &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. For example, the amount in days between two date-times can be calculated using &lt;code&gt;startDateTime.until(endDateTime, DAYS)&lt;/code&gt;.</source>
          <target state="translated">이것은 단일 &lt;code&gt;TemporalUnit&lt;/code&gt; 측면에서 두 &lt;code&gt;LocalDateTime&lt;/code&gt; 객체 사이의 시간을 계산합니다 . 시작 및 종료 지점은 &lt;code&gt;this&lt;/code&gt; 과 지정된 날짜-시간입니다. 종료가 시작 전이면 결과는 음수입니다. 이 메서드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 은 &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;LocalDateTime&lt;/code&gt; 으로 변환됩니다 . 예를 들어 두 날짜-시간 사이의 일 수는 &lt;code&gt;startDateTime.until(endDateTime, DAYS)&lt;/code&gt; 사용하여 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1adb51a4aa4348285f06861583659a5dfc5d8fac" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;LocalDateTime&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified date-time. The result will be negative if the end is before the start. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;LocalDateTime&lt;/code&gt; using &lt;a href=&quot;localdatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. For example, the amount in days between two date-times can be calculated using &lt;code&gt;startDateTime.until(endDateTime, DAYS)&lt;/code&gt;.</source>
          <target state="translated">두 개의 &lt;code&gt;LocalDateTime&lt;/code&gt; 객체 사이의 시간을 단일 관점에서 계산합니다. &lt;code&gt;TemporalUnit&lt;/code&gt; 로 . 시작 지점과 종료 지점은 &lt;code&gt;this&lt;/code&gt; 과 지정된 날짜-시간입니다. 끝이 시작하기 전에 결과는 음수입니다. 이 메소드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 은 &lt;a href=&quot;localdatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;LocalDateTime&lt;/code&gt; 으로 변환됩니다 . 예를 들어 &lt;code&gt;startDateTime.until(endDateTime, DAYS)&lt;/code&gt; 사용하여 두 날짜-시간 사이의 일 수를 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fa61df5a53181fcda2bd478cb22691482d028cdc" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;LocalTime&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified time. The result will be negative if the end is before the start. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;LocalTime&lt;/code&gt; using &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. For example, the amount in hours between two times can be calculated using &lt;code&gt;startTime.until(endTime, HOURS)&lt;/code&gt;.</source>
          <target state="translated">이것은 단일 &lt;code&gt;TemporalUnit&lt;/code&gt; 측면에서 두 &lt;code&gt;LocalTime&lt;/code&gt; 객체 사이의 시간을 계산합니다 . 시작 및 종료 지점은 &lt;code&gt;this&lt;/code&gt; 시간과 지정된 시간입니다. 종료가 시작 전이면 결과는 음수입니다. 이 메서드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 은 &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;LocalTime&lt;/code&gt; 으로 변환됩니다 . 예를 들어 두 시간 사이의 시간은 &lt;code&gt;startTime.until(endTime, HOURS)&lt;/code&gt; 사용하여 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4dd9d251ec489c054692d2712ae14ef0e0b3cac4" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;LocalTime&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified time. The result will be negative if the end is before the start. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;LocalTime&lt;/code&gt; using &lt;a href=&quot;localtime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. For example, the amount in hours between two times can be calculated using &lt;code&gt;startTime.until(endTime, HOURS)&lt;/code&gt;.</source>
          <target state="translated">단일 &lt;code&gt;TemporalUnit&lt;/code&gt; 을 기준으로 두 &lt;code&gt;LocalTime&lt;/code&gt; 객체 사이의 시간을 계산합니다. . 시작 지점과 종료 지점은 &lt;code&gt;this&lt;/code&gt; 시간과 지정된 시간입니다. 끝이 시작하기 전에 결과는 음수입니다. 이 메소드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 은 &lt;a href=&quot;localtime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;LocalTime&lt;/code&gt; 으로 변환됩니다 . 예를 들어, &lt;code&gt;startTime.until(endTime, HOURS)&lt;/code&gt; 사용하여 두 시간 사이의 시간을 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bb0f2b197558a031fa50848ba7feca7bd7dc0ed1" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;OffsetDateTime&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified date-time. The result will be negative if the end is before the start. For example, the amount in days between two date-times can be calculated using &lt;code&gt;startDateTime.until(endDateTime, DAYS)&lt;/code&gt;.</source>
          <target state="translated">단일 &lt;code&gt;TemporalUnit&lt;/code&gt; 의 관점에서 두 &lt;code&gt;OffsetDateTime&lt;/code&gt; 객체 사이의 시간을 계산합니다 . 시작 지점과 종료 지점은 &lt;code&gt;this&lt;/code&gt; 과 지정된 날짜-시간입니다. 끝이 시작하기 전에 결과는 음수입니다. 예를 들어 &lt;code&gt;startDateTime.until(endDateTime, DAYS)&lt;/code&gt; 사용하여 두 날짜-시간 사이의 일 수를 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0c17761fd36cd4af0600aca6b972c1d14d1b7c96" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;OffsetTime&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified time. The result will be negative if the end is before the start. For example, the amount in hours between two times can be calculated using &lt;code&gt;startTime.until(endTime, HOURS)&lt;/code&gt;.</source>
          <target state="translated">이것은 두 사이의 시간을 계산 &lt;code&gt;OffsetTime&lt;/code&gt; 단일 &lt;code&gt;TemporalUnit&lt;/code&gt; 의 관점에서 OffsetTime 객체 . 시작 지점과 종료 지점은 &lt;code&gt;this&lt;/code&gt; 시간과 지정된 시간입니다. 끝이 시작하기 전에 결과는 음수입니다. 예를 들어, &lt;code&gt;startTime.until(endTime, HOURS)&lt;/code&gt; 사용하여 두 시간 사이의 시간을 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3a6a47f00c0974ba6659f3f8ac8d8ecba9064997" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;Year&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified year. The result will be negative if the end is before the start. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;Year&lt;/code&gt; using &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. For example, the amount in decades between two year can be calculated using &lt;code&gt;startYear.until(endYear, DECADES)&lt;/code&gt;.</source>
          <target state="translated">이것은 단일 &lt;code&gt;TemporalUnit&lt;/code&gt; 관점에서 두 &lt;code&gt;Year&lt;/code&gt; 객체 사이의 시간을 계산합니다 . 시작 및 종료 지점은 &lt;code&gt;this&lt;/code&gt; 연도와 지정된 연도입니다. 종료가 시작 전이면 결과는 음수입니다. 이 메서드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 은 &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;Year&lt;/code&gt; 로 변환됩니다 . 예를 들어, 2 년 사이의 십 단위는 &lt;code&gt;startYear.until(endYear, DECADES)&lt;/code&gt; 사용하여 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c90681be0c15bfab4f976bf42b28fe16d0484839" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;Year&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified year. The result will be negative if the end is before the start. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;Year&lt;/code&gt; using &lt;a href=&quot;year#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. For example, the amount in decades between two year can be calculated using &lt;code&gt;startYear.until(endYear, DECADES)&lt;/code&gt;.</source>
          <target state="translated">단일 &lt;code&gt;TemporalUnit&lt;/code&gt; 을 기준으로 두 &lt;code&gt;Year&lt;/code&gt; 객체 사이의 시간을 계산합니다 . 시작 및 종료 지점은 &lt;code&gt;this&lt;/code&gt; 연도와 지정된 연도입니다. 끝이 시작하기 전에 결과는 음수입니다. &lt;code&gt;Temporal&lt;/code&gt; 이 메소드에 전달 는 &lt;a href=&quot;year#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;Year&lt;/code&gt; 변환됩니다 . 예를 들어, 2 년 사이의 10 년 단위 금액은 &lt;code&gt;startYear.until(endYear, DECADES)&lt;/code&gt; 사용하여 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a2b6871e153ba3f9a12ce46b429f723c95495a07" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;YearMonth&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified year-month. The result will be negative if the end is before the start. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;YearMonth&lt;/code&gt; using &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. For example, the amount in years between two year-months can be calculated using &lt;code&gt;startYearMonth.until(endYearMonth, YEARS)&lt;/code&gt;.</source>
          <target state="translated">이것은 단일 &lt;code&gt;TemporalUnit&lt;/code&gt; 관점에서 두 &lt;code&gt;YearMonth&lt;/code&gt; 객체 사이의 시간을 계산합니다 . 시작 및 종료 지점은 &lt;code&gt;this&lt;/code&gt; 과 지정된 연월입니다. 종료가 시작 전이면 결과는 음수입니다. 이 메서드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 은 &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;YearMonth&lt;/code&gt; 로 변환됩니다 . 예를 들어, 2 년에서 2 개월 사이의 연도 금액은 &lt;code&gt;startYearMonth.until(endYearMonth, YEARS)&lt;/code&gt; 사용하여 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="05ab7db1f28ab1369011ae6c8419666f5da8a465" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;YearMonth&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified year-month. The result will be negative if the end is before the start. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;YearMonth&lt;/code&gt; using &lt;a href=&quot;yearmonth#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. For example, the amount in years between two year-months can be calculated using &lt;code&gt;startYearMonth.until(endYearMonth, YEARS)&lt;/code&gt;.</source>
          <target state="translated">단일 &lt;code&gt;TemporalUnit&lt;/code&gt; 로 두 &lt;code&gt;YearMonth&lt;/code&gt; 객체 사이의 시간을 계산합니다 . 시작 및 종료 지점은 &lt;code&gt;this&lt;/code&gt; 과 지정된 연도입니다. 끝이 시작하기 전에 결과는 음수입니다. 이 메소드에 전달 된 &lt;code&gt;Temporal&lt;/code&gt; 는 &lt;code&gt;YearMonth&lt;/code&gt; &lt;a href=&quot;yearmonth#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 사용하여 YearMonth . 예를 들어, &lt;code&gt;startYearMonth.until(endYearMonth, YEARS)&lt;/code&gt; 사용하여 2 년-월 사이의 년 단위 금액을 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="83debf9fbfd6d180e052b061238b01be11cefc24" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;ZonedDateTime&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified date-time. The result will be negative if the end is before the start. For example, the amount in days between two date-times can be calculated using &lt;code&gt;startDateTime.until(endDateTime, DAYS)&lt;/code&gt;.</source>
          <target state="translated">두 &lt;code&gt;ZonedDateTime&lt;/code&gt; 사이의 시간을 계산합니다.단일 &lt;code&gt;TemporalUnit&lt;/code&gt; 로 객체 . 시작 지점과 종료 지점은 &lt;code&gt;this&lt;/code&gt; 과 지정된 날짜-시간입니다. 끝이 시작하기 전에 결과는 음수입니다. 예를 들어 &lt;code&gt;startDateTime.until(endDateTime, DAYS)&lt;/code&gt; 사용하여 두 날짜-시간 사이의 일 수를 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9d3524284225e48615609b767b2885c90cbc4075" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two temporal objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified temporal. The end point is converted to be of the same type as the start point if different. The result will be negative if the end is before the start. For example, the amount in hours between two temporal objects can be calculated using &lt;code&gt;startTime.until(endTime, HOURS)&lt;/code&gt;.</source>
          <target state="translated">이것은 하나의 관점에서 두 시간 객체 사이의 시간을 계산합니다. &lt;code&gt;TemporalUnit&lt;/code&gt; 로 . 시작 지점과 종료 지점은 &lt;code&gt;this&lt;/code&gt; 과 지정된 시간입니다. 다른 경우 종료점은 시작점과 동일한 유형으로 변환됩니다. 끝이 시작하기 전에 결과는 음수입니다. 예를 들어 &lt;code&gt;startTime.until(endTime, HOURS)&lt;/code&gt; 사용하여 두 시간 객체 사이의 시간을 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2cc33fec53173d135a50ffbf92ecd960b4b26e20" translate="yes" xml:space="preserve">
          <source>This calculates the duration between two temporal objects. If the objects are of different types, then the duration is calculated based on the type of the first object. For example, if the first argument is a &lt;code&gt;LocalTime&lt;/code&gt; then the second argument is converted to a &lt;code&gt;LocalTime&lt;/code&gt;.</source>
          <target state="translated">이것은 두 시간 객체 사이의 지속 시간을 계산합니다. 객체의 유형이 다른 경우 지속 시간은 첫 번째 객체의 유형을 기준으로 계산됩니다. 예를 들어 첫 번째 인수가 &lt;code&gt;LocalTime&lt;/code&gt; 이면 두 번째 인수는 &lt;code&gt;LocalTime&lt;/code&gt; 으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="594e2f6af833c2542f6f050bdfea8088a78206f2" translate="yes" xml:space="preserve">
          <source>This calculates the period between two dates in terms of years, months and days. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified date. The result will be negative if the end is before the start. The negative sign will be the same in each of year, month and day.</source>
          <target state="translated">이것은 두 날짜 사이의 기간을 년, 월 및 일로 계산합니다. 시작 및 종료 지점은 &lt;code&gt;this&lt;/code&gt; 날짜이며 지정된 날짜입니다. 끝이 시작하기 전에 결과는 음수입니다. 음수 부호는 매년, 월, 일마다 동일합니다.</target>
        </trans-unit>
        <trans-unit id="c0d5ebde5fbaa16b5f0a5ab228ff4a362b44867a" translate="yes" xml:space="preserve">
          <source>This calculates the period between two dates. All supplied chronologies calculate the period using years, months and days, however the &lt;code&gt;ChronoPeriod&lt;/code&gt; API allows the period to be represented using other units.</source>
          <target state="translated">두 날짜 사이의 기간을 계산합니다. 제공된 모든 연대기는 년, 월, 일을 사용하여 기간을 계산하지만 &lt;code&gt;ChronoPeriod&lt;/code&gt; API를 사용하면 다른 단위를 사용하여 기간을 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d0c80ffdcafbfe1c0b7ba919baabfc06582cf06e" translate="yes" xml:space="preserve">
          <source>This call cancels the &lt;a href=&quot;taskbar.state#INDETERMINATE&quot;&gt;&lt;code&gt;INDETERMINATE&lt;/code&gt;&lt;/a&gt; state of the window.</source>
          <target state="translated">이 호출 은 창의 &lt;a href=&quot;taskbar.state#INDETERMINATE&quot;&gt; &lt;code&gt;INDETERMINATE&lt;/code&gt; &lt;/a&gt; 상태를 취소합니다 .</target>
        </trans-unit>
        <trans-unit id="8fa3201c6f2b036805a8cf1780b84d21b81a7c74" translate="yes" xml:space="preserve">
          <source>This call is approximately equivalent to the following code:</source>
          <target state="translated">이 호출은 다음 코드와 거의 동일합니다.</target>
        </trans-unit>
        <trans-unit id="ad65f5569a513d0575655c4ff06f2f455b22c299" translate="yes" xml:space="preserve">
          <source>This call is equivalent to calling &lt;a href=&quot;#waitForChange(long)&quot;&gt;waitForChange(0)&lt;/a&gt;.</source>
          <target state="translated">이 호출은 &lt;a href=&quot;#waitForChange(long)&quot;&gt;waitForChange (0)&lt;/a&gt; 호출과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="f3eb34b880dc06e18251e836328c9cf95247a612" translate="yes" xml:space="preserve">
          <source>This call is equivalent to the following code:</source>
          <target state="translated">이 호출은 다음 코드와 같습니다.</target>
        </trans-unit>
        <trans-unit id="5046fdd79b5432915701fcb092526030eeba577a" translate="yes" xml:space="preserve">
          <source>This call is intended for use by applications that communicate over protocols that impose a maximum message size. It enables the application to fragment messages prior to applying protection.</source>
          <target state="translated">이 호출은 최대 메시지 크기를 부과하는 프로토콜을 통해 통신하는 애플리케이션에서 사용하기위한 것입니다. 보호를 적용하기 전에 응용 프로그램에서 메시지를 조각화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c54025f78242edfac9a27593a0939b9f5828c51" translate="yes" xml:space="preserve">
          <source>This call is provided for backward compatibility. It is routed to a call to &lt;code&gt;setCaretPosition&lt;/code&gt; followed by a call to &lt;code&gt;moveCaretPosition&lt;/code&gt;. The preferred way to manage selection is by calling those methods directly.</source>
          <target state="translated">이 호출은 이전 버전과의 호환성을 위해 제공됩니다. 에 그것은 전화로 라우팅됩니다 &lt;code&gt;setCaretPosition&lt;/code&gt; 가이 호출에 의해 다음 &lt;code&gt;moveCaretPosition&lt;/code&gt; . 선택을 관리하는 선호되는 방법은 해당 메소드를 직접 호출하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e0eda11cca3152f1293f0403ac2586884749c10f" translate="yes" xml:space="preserve">
          <source>This call is typically used to increase the scale, in which case it is guaranteed that there exists a &lt;code&gt;BigDecimal&lt;/code&gt; of the specified scale and the correct value. The call can also be used to reduce the scale if the caller knows that the &lt;code&gt;BigDecimal&lt;/code&gt; has sufficiently many zeros at the end of its fractional part (i.e., factors of ten in its integer value) to allow for the rescaling without changing its value.</source>
          <target state="translated">이 호출은 일반적으로 스케일을 높이는 데 사용되며,이 경우 &lt;code&gt;BigDecimal&lt;/code&gt; 이 있음을 보장합니다 지정된 스케일 과 올바른 값 합니다. 호출자가 &lt;code&gt;BigDecimal&lt;/code&gt; 이 소수 부분 (즉, 정수 값에서 10의 요소) 끝에 값이 변경되지 않고 크기를 재조정 할 수 있도록 충분히 많은 0이 있음을 알고있는 경우 호출을 사용하여 스케일을 줄일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9f47905a3cc645defe6a8d0f839946fd13048c6" translate="yes" xml:space="preserve">
          <source>This call takes into account any unprocessed (buffered) data from a previous &lt;code&gt;update&lt;/code&gt; call, padding, and AEAD tagging.</source>
          <target state="translated">이 호출은 이전의 처리되지 않은 (버퍼 된) 데이터를 고려합니다. &lt;code&gt;update&lt;/code&gt; 호출, 패딩 및 AEAD 태깅 .</target>
        </trans-unit>
        <trans-unit id="296aa42b38e903ff1e454a8bcb6b056684be96f5" translate="yes" xml:space="preserve">
          <source>This callback is used by &lt;code&gt;SaslClient&lt;/code&gt; and &lt;code&gt;SaslServer&lt;/code&gt; to obtain a realm given a list of realm choices.</source>
          <target state="translated">이 콜백은 &lt;code&gt;SaslClient&lt;/code&gt; 와 &lt;code&gt;SaslServer&lt;/code&gt; 에서 영역 선택 목록이 제공된 영역을 얻기 위해 .</target>
        </trans-unit>
        <trans-unit id="c4649c6d05711daba7a8c470abe7c83a7037dc5d" translate="yes" xml:space="preserve">
          <source>This callback is used by &lt;code&gt;SaslClient&lt;/code&gt; and &lt;code&gt;SaslServer&lt;/code&gt; to retrieve realm information.</source>
          <target state="translated">이 콜백은 &lt;code&gt;SaslClient&lt;/code&gt; 와 &lt;code&gt;SaslServer&lt;/code&gt; 에서 영역 정보를 검색 .</target>
        </trans-unit>
        <trans-unit id="da001e5eb0147319eb39f5e82d0f0125f6be1350" translate="yes" xml:space="preserve">
          <source>This callback is used by &lt;code&gt;SaslServer&lt;/code&gt; to determine whether one entity (identified by an authenticated authentication id) can act on behalf of another entity (identified by an authorization id).</source>
          <target state="translated">이 콜백은 &lt;code&gt;SaslServer&lt;/code&gt; 에 의해 사용됩니다 에서 한 엔티티 (인증 된 인증 ID로 식별)가 다른 엔티티 (권한 부여 ID로 식별)를 대신하여 작동 할 수 있는지 여부를 판별합니다.</target>
        </trans-unit>
        <trans-unit id="95648c1c5bae9aedc151e8ace4ff9e2ab907dae8" translate="yes" xml:space="preserve">
          <source>This callback will be used for comments inside or outside the document element, including comments in the external DTD subset (if read). Comments in the DTD must be properly nested inside start/endDTD and start/endEntity events (if used).</source>
          <target state="translated">이 콜백은 외부 DTD 하위 집합 (읽은 경우)의 주석을 포함하여 문서 요소 내부 또는 외부의 주석에 사용됩니다. DTD의 주석은 start / endDTD 및 start / endEntity 이벤트 (사용 된 경우) 내에 올바르게 중첩되어야합니다.</target>
        </trans-unit>
        <trans-unit id="1958305cafaaf069aff0ad02a9f07e65056e6519" translate="yes" xml:space="preserve">
          <source>This can also occur when the same Namespace URI is used in multiple &lt;code&gt;XMLConstants.XMLNS_ATTRIBUTE&lt;/code&gt; (&quot;xmlns&quot;) Namespace declarations in the logical parent element hierarchy. e.g.</source>
          <target state="translated">이는 논리적 부모 요소 계층 구조의 여러 &lt;code&gt;XMLConstants.XMLNS_ATTRIBUTE&lt;/code&gt; ( &quot;xmlns&quot;) 네임 스페이스 선언에서 동일한 네임 스페이스 URI가 사용되는 경우에도 발생할 수 있습니다 . 예</target>
        </trans-unit>
        <trans-unit id="0b37552a9ab0b695678a870a2f9a143183b67b52" translate="yes" xml:space="preserve">
          <source>This can be used multiple times to force any number of components to share the same size.</source>
          <target state="translated">여러 번 사용하여 여러 구성 요소가 동일한 크기를 공유하도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9d531ae8fc123db629f09c058badc6dec936eab" translate="yes" xml:space="preserve">
          <source>This can be used to select between two or more ways that a date or time might be resolved. For example, if the formatter consists of year, month, day-of-month and day-of-year, then there are two ways to resolve a date. Calling this method with the arguments &lt;a href=&quot;../temporal/chronofield#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/chronofield#DAY_OF_YEAR&quot;&gt;&lt;code&gt;DAY_OF_YEAR&lt;/code&gt;&lt;/a&gt; will ensure that the date is resolved using the year and day-of-year, effectively meaning that the month and day-of-month are ignored during the resolving phase.</source>
          <target state="translated">날짜 또는 시간을 해결할 수있는 둘 이상의 방법 중에서 선택하는 데 사용할 수 있습니다. 예를 들어, 포맷터가 연도, 월, 일 및 월로 구성되어 있으면 날짜를 확인하는 두 가지 방법이 있습니다. 인수 &lt;a href=&quot;../temporal/chronofield#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../temporal/chronofield#DAY_OF_YEAR&quot;&gt; &lt;code&gt;DAY_OF_YEAR&lt;/code&gt; &lt;/a&gt; 과 함께이 메소드 호출 를 사용 하면 날짜와 연도를 사용하여 날짜가 해결되므로 사실상 해결 단계에서 월과 월이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="78e5cfbc24e843b8c0772dd42d58804fd3a5c030" translate="yes" xml:space="preserve">
          <source>This can be used to, for example, control terminal functions like a built-in PIN pad or biometrics.</source>
          <target state="translated">예를 들어 내장 PIN 패드 또는 생체 인식과 같은 터미널 기능을 제어하는 ​​데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e45280dbd70395d086faced1f60d08bd155ffe5" translate="yes" xml:space="preserve">
          <source>This can marginally decrease the transmitted size of the archive, at the expense of setting all installed files to a single date.</source>
          <target state="translated">이렇게하면 설치된 모든 파일을 단일 날짜로 설정하는 대신 파일의 전송 크기가 약간 줄어들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="578c6ceb1b651448d4047469d59db99838e5d5c3" translate="yes" xml:space="preserve">
          <source>This channel</source>
          <target state="translated">이 채널</target>
        </trans-unit>
        <trans-unit id="e9c69663f21441297e1f18b7c46f7d691e4a6034" translate="yes" xml:space="preserve">
          <source>This channel's file position, a non-negative integer counting the number of bytes from the beginning of the file to the current position</source>
          <target state="translated">이 채널의 파일 위치. 파일의 시작부터 현재 위치까지의 바이트 수를 계산하는 음이 아닌 정수</target>
        </trans-unit>
        <trans-unit id="affd2ee65dd82094eda8c4a2466f8bbdce3a032e" translate="yes" xml:space="preserve">
          <source>This channel's position, a non-negative integer counting the number of bytes from the beginning of the entity to the current position</source>
          <target state="translated">이 채널의 위치. 엔티티의 시작부터 현재 위치까지의 바이트 수를 계산하는 음이 아닌 정수</target>
        </trans-unit>
        <trans-unit id="062195b3fb91dca89b184564527c313265b74955" translate="yes" xml:space="preserve">
          <source>This character will be output during a format.</source>
          <target state="translated">이 문자는 형식 중에 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="790384daa2c909e9dfeb5c3379af61db3570fae2" translate="yes" xml:space="preserve">
          <source>This check is made on a per lookup service basis to allow flexibility in the policy to reflect the needs of different lookup services.</source>
          <target state="translated">이 점검은 정책마다 융통성있게 다른 조회 서비스의 요구를 반영 할 수 있도록 조회 서비스별로 이루어집니다.</target>
        </trans-unit>
        <trans-unit id="a1caed47b8f1a4432c44cad1bdfdde7f88509c85" translate="yes" xml:space="preserve">
          <source>This checked exception is thrown when an</source>
          <target state="translated">이 확인 된 예외는</target>
        </trans-unit>
        <trans-unit id="6b0d476343d1656580ba4ec306c87bddde957bc2" translate="yes" xml:space="preserve">
          <source>This checks if the date-time can be queried for the specified field. If false, then calling the &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 필드에 대해 날짜-시간을 쿼리 할 수 ​​있는지 확인합니다. false 인 경우 &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="28b63a9fef5f48dbf7c3a988ace8631c1510865f" translate="yes" xml:space="preserve">
          <source>This checks if the date-time can be queried for the specified field. If false, then calling the &lt;a href=&quot;temporalaccessor#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 필드에 대해 날짜-시간을 쿼리 할 수 ​​있는지 확인합니다. false 인 경우 &lt;a href=&quot;temporalaccessor#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fa1330b4a3e06595467ea2f9f5ca451851b0790a" translate="yes" xml:space="preserve">
          <source>This checks if the specified field can be queried on this date-time. If false, then calling the &lt;a href=&quot;../temporal/temporalaccessor#range(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../temporal/temporalaccessor#get(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#with(java.time.temporal.TemporalField,long)&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이 날짜-시간에 지정된 필드를 쿼리 할 수 ​​있는지 확인합니다. false이면 &lt;a href=&quot;../temporal/temporalaccessor#range(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../temporal/temporalaccessor#get(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#with(java.time.temporal.TemporalField,long)&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6e001386cca850781e9f7d8273bb9e3ed645a810" translate="yes" xml:space="preserve">
          <source>This checks if the specified field can be queried on this date-time. If false, then calling the &lt;a href=&quot;../temporal/temporalaccessor#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../temporal/temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;chronolocaldatetime#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이 날짜-시간에 지정된 필드를 쿼리 할 수 ​​있는지 확인합니다. false의 경우, 호출 &lt;a href=&quot;../temporal/temporalaccessor#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../temporal/temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;chronolocaldatetime#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 방법은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="89949121330bc9ba6aed0e0bee18cb7f1eedc979" translate="yes" xml:space="preserve">
          <source>This checks if the specified field can be queried on this date-time. If false, then calling the &lt;a href=&quot;chronozoneddatetime#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;chronozoneddatetime#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;chronozoneddatetime#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이 날짜-시간에 지정된 필드를 쿼리 할 수 ​​있는지 확인합니다. false의 경우, 호출 &lt;a href=&quot;chronozoneddatetime#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;chronozoneddatetime#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;chronozoneddatetime#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 방법은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c25ecf090dc1902e9cf3c43e22381e5aca075903" translate="yes" xml:space="preserve">
          <source>This checks if the specified field can be queried on this date. If false, then calling the &lt;a href=&quot;../temporal/temporalaccessor#range(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../temporal/temporalaccessor#get(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#with(java.time.temporal.TemporalField,long)&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이 날짜에 지정된 필드를 쿼리 할 수 ​​있는지 확인합니다. false이면 &lt;a href=&quot;../temporal/temporalaccessor#range(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../temporal/temporalaccessor#get(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#with(java.time.temporal.TemporalField,long)&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bcbe7f34c857fcd2794bedd1a0b3d3849d857d1f" translate="yes" xml:space="preserve">
          <source>This checks if the specified field can be queried on this date. If false, then calling the &lt;a href=&quot;../temporal/temporalaccessor#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../temporal/temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;chronolocaldate#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이 날짜에 지정된 필드를 쿼리 할 수 ​​있는지 확인합니다. false의 경우, 호출 &lt;a href=&quot;../temporal/temporalaccessor#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../temporal/temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;chronolocaldate#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 방법은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3583be99a4d7734fa491424f1806d5d87305fc9f" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to or subtracted from this date-time. If false, then calling the &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이 날짜-시간에 지정된 단위를 더하거나 뺄 수 있는지 확인합니다. 거짓이면 &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="896450607daf28966676b17d89f57052b7a7a187" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to or subtracted from this date-time. If false, then calling the &lt;a href=&quot;chronolocaldatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;chronolocaldatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 날짜를이 날짜-시간에 더하거나 뺄 수 있는지 확인합니다. false 인 경우 &lt;a href=&quot;chronolocaldatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;chronolocaldatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 호출 메소드 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a16cdf6906b47ed394148421fdc66adcd20b8932" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to or subtracted from this date-time. If false, then calling the &lt;a href=&quot;chronozoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;chronozoneddatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 날짜를이 날짜-시간에 더하거나 뺄 수 있는지 확인합니다. false 인 경우 &lt;a href=&quot;chronozoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;chronozoneddatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 호출 메소드 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c18b514f6217575eebac7a96ab8289f62c4215a7" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to or subtracted from this date. If false, then calling the &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이 날짜에 지정된 단위를 더하거나 뺄 수 있는지 확인합니다. 거짓이면 &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="499323b815ed97dfcc3d04aa828dc07969af7aa0" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to or subtracted from this date. If false, then calling the &lt;a href=&quot;chronolocaldate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;chronolocaldate#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 날짜를이 날짜에 더하거나 뺄 수 있는지 확인합니다. false 인 경우 &lt;a href=&quot;chronolocaldate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;chronolocaldate#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 호출 메소드 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5811e96b8b1169e2b2b40b3c1de900bdf552cb1d" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this date-time. If false, then calling the &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이 날짜-시간에 지정된 단위를 더하거나 뺄 수 있는지 확인합니다. 거짓이면 &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fbb4b9f8b1fb858c6ffabe9a99939c0deefd54d8" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this date-time. If false, then calling the &lt;a href=&quot;instant#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;instant#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이 날짜-시간에 지정된 단위를 더하거나 뺄 수 있는지 확인합니다. false 인 경우 &lt;a href=&quot;instant#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;instant#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 호출 메소드 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8991a388ed5d1b8af35dc89e0fd0cd7d0cd2ec71" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this date-time. If false, then calling the &lt;a href=&quot;localdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이 날짜-시간에 지정된 단위를 더하거나 뺄 수 있는지 확인합니다. false 인 경우 &lt;a href=&quot;localdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;localdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 호출 메소드 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5abaaac74440a4a0e20222e221c0976ae3d40277" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this date-time. If false, then calling the &lt;a href=&quot;offsetdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsetdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이 날짜-시간에 지정된 단위를 더하거나 뺄 수 있는지 확인합니다. false 인 경우 &lt;a href=&quot;offsetdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;offsetdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 호출 메소드 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5a32d76a7b3acabd4c5d884835fd8954deaee4df" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this date-time. If false, then calling the &lt;a href=&quot;temporal#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이 날짜-시간에 지정된 단위를 더하거나 뺄 수 있는지 확인합니다. false 인 경우 &lt;a href=&quot;temporal#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;temporal#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 호출 메소드 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="14e1fc6d16337742ca01416ba749c0d479def26f" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this date-time. If false, then calling the &lt;a href=&quot;zoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneddatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이 날짜-시간에 지정된 단위를 더하거나 뺄 수 있는지 확인합니다. false 인 경우 &lt;a href=&quot;zoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;zoneddatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 호출 메소드 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="46c98e90a3509aef49f9ab354e8d9d3536b84a01" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this date. If false, then calling the &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이 날짜에 지정된 단위를 더하거나 뺄 수 있는지 확인합니다. 거짓이면 &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a099085caa8337ae69ad5caf4c81c4a272c67340" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this date. If false, then calling the &lt;a href=&quot;localdate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localdate#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 날짜를이 날짜에 더하거나 뺄 수 있는지 확인합니다. false 인 경우 &lt;a href=&quot;localdate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;localdate#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ce777bd9750777b6c51ae855e9ca570c7387b4eb" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this offset-time. If false, then calling the &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이 오프셋 시간에 지정된 단위를 더하거나 뺄 수 있는지 확인합니다. 거짓이면 &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="97524706a5e63c0e08b5f70958d56e0a4ec0818d" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this offset-time. If false, then calling the &lt;a href=&quot;offsettime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsettime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 시간을이 오프셋 시간에 더하거나 뺄 수 있는지 확인합니다. false 인 경우 &lt;a href=&quot;offsettime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;offsettime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 호출 메소드 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5e9aa48c6bd7cbff2f00c9cbe1845162418d1ad9" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this time. If false, then calling the &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이번에 지정된 단위를 더하거나 뺄 수 있는지 확인합니다. 거짓이면 &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="16986bde30ad8869a0ca62f1baa929296eef15df" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this time. If false, then calling the &lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localtime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이번에는 지정된 단위를 더하거나 뺄 수 있는지 확인합니다. false 인 경우 &lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;localtime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 호출 메소드 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fdc23667040eddbf6be07931a8f4ccaf4d38f459" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this year-month. If false, then calling the &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이것은 지정된 단위가 올해-월에 더해 지거나 뺄 수 있는지 확인합니다. 거짓이면 &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b914ff1dc9985d7b396c05aa7450315a0c951e27" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this year-month. If false, then calling the &lt;a href=&quot;yearmonth#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;yearmonth#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이것은 올해 단위로 지정된 단위를 더하거나 뺄 수 있는지 확인합니다. false 인 경우 &lt;a href=&quot;yearmonth#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;yearmonth#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 호출 메소드 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="945fe04d94e7e560d0f67f598350f9864139612c" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this year. If false, then calling the &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">올해에 지정된 단위를 더하거나 뺄 수 있는지 확인합니다. 거짓이면 &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cf401dd8c41a53574fb734555172bd339bb8f26e" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this year. If false, then calling the &lt;a href=&quot;year#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;year#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 단위를 올해에 더하거나 뺄 수 있는지 확인합니다. false 인 경우 &lt;a href=&quot;year#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;year#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; 호출 메소드 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="af21ec1477506ba05c4f5e6ba0156e95cf2f26ab" translate="yes" xml:space="preserve">
          <source>This checks if the standard offset and the actual offset are the same for the specified instant. If they are not, it is assumed that daylight savings is in operation.</source>
          <target state="translated">지정된 오프셋에 대해 표준 오프셋과 실제 오프셋이 동일한 지 확인합니다. 그렇지 않은 경우 일광 절약이 작동중인 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="2c22c7f914f022167ef4f3cf0a05c6a13585e5c8" translate="yes" xml:space="preserve">
          <source>This checks if this date can be queried for the specified field. If false, then calling the &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#with(java.time.temporal.TemporalField,long)&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 필드에 대해이 날짜를 쿼리 할 수 ​​있는지 확인합니다. false이면 &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#with(java.time.temporal.TemporalField,long)&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cf97e3ada3248047959bed30cb2ce58a7532a7a9" translate="yes" xml:space="preserve">
          <source>This checks if this date can be queried for the specified field. If false, then calling the &lt;a href=&quot;../temporal/temporalaccessor#range(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/temporalaccessor#get(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 필드에 대해이 날짜를 쿼리 할 수 ​​있는지 확인합니다. false 인 경우 &lt;a href=&quot;../temporal/temporalaccessor#range(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../temporal/temporalaccessor#get(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="98ef38b56e840ab25453127b66d71cc1f136fdfc" translate="yes" xml:space="preserve">
          <source>This checks if this date can be queried for the specified field. If false, then calling the &lt;a href=&quot;japanesedate#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 날짜에 대해이 날짜를 쿼리 할 수 ​​있는지 확인합니다. false의 경우, 호출 &lt;a href=&quot;japanesedate#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../temporal/temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메소드 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f9f1fc2b03dc91e397685c4017488e4266f24b7f" translate="yes" xml:space="preserve">
          <source>This checks if this date can be queried for the specified field. If false, then calling the &lt;a href=&quot;localdate#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;localdate#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localdate#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 날짜에 대해이 날짜를 쿼리 할 수 ​​있는지 확인합니다. false의 경우, 호출 &lt;a href=&quot;localdate#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;localdate#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;localdate#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 방법은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8ae768ba3ee6c2284353022f77b72b5931b71628" translate="yes" xml:space="preserve">
          <source>This checks if this date-time can be queried for the specified field. If false, then calling the &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#with(java.time.temporal.TemporalField,long)&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 필드에 대해이 날짜-시간을 쿼리 할 수 ​​있는지 확인합니다. false이면 &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#with(java.time.temporal.TemporalField,long)&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="39aa64124947cbb9407c2c86c4c30de5974fe7b8" translate="yes" xml:space="preserve">
          <source>This checks if this date-time can be queried for the specified field. If false, then calling the &lt;a href=&quot;localdatetime#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;localdatetime#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localdatetime#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 날짜에 대해이 날짜-시간을 쿼리 할 수 ​​있는지 확인합니다. false의 경우, 호출 &lt;a href=&quot;localdatetime#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;localdatetime#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;localdatetime#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 방법은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="92920f3938ea8cbefe111f0da77e8729f0620df8" translate="yes" xml:space="preserve">
          <source>This checks if this date-time can be queried for the specified field. If false, then calling the &lt;a href=&quot;offsetdatetime#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;offsetdatetime#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsetdatetime#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 날짜에 대해이 날짜-시간을 쿼리 할 수 ​​있는지 확인합니다. 다음 호출 false의 경우 &lt;a href=&quot;offsetdatetime#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;offsetdatetime#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 하고 &lt;a href=&quot;offsetdatetime#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 방법은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b25971e07fe6643a5f6f05396b4f92b6e0af2e96" translate="yes" xml:space="preserve">
          <source>This checks if this date-time can be queried for the specified field. If false, then calling the &lt;a href=&quot;zoneddatetime#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;zoneddatetime#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneddatetime#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 날짜에 대해이 날짜-시간을 쿼리 할 수 ​​있는지 확인합니다. 다음 호출 false의 경우 &lt;a href=&quot;zoneddatetime#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;zoneddatetime#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 하고 &lt;a href=&quot;zoneddatetime#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 방법은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4d81ba41b09e5b45fc98451967658bfd5cef63f9" translate="yes" xml:space="preserve">
          <source>This checks if this day-of-week can be queried for the specified field. If false, then calling the &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 필드에 대해이 요일을 쿼리 할 수 ​​있는지 확인합니다. false 인 경우 &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5e75f4b593a135657699b83696af0b83841468f2" translate="yes" xml:space="preserve">
          <source>This checks if this day-of-week can be queried for the specified field. If false, then calling the &lt;a href=&quot;dayofweek#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;dayofweek#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 요일에이 요일을 쿼리 할 수 ​​있는지 확인합니다. false 인 경우 &lt;a href=&quot;dayofweek#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;dayofweek#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="96a03f63bd722729cfee007ecab4de52301c08bb" translate="yes" xml:space="preserve">
          <source>This checks if this era can be queried for the specified field. If false, then calling the &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 필드에 대해이 연대를 쿼리 할 수 ​​있는지 확인합니다. false 인 경우 &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cf2af797d86f942cd2da9033ca56360472670c45" translate="yes" xml:space="preserve">
          <source>This checks if this era can be queried for the specified field. If false, then calling the &lt;a href=&quot;era#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;era#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 필드에 대해이 시대를 쿼리 할 수 ​​있는지 확인합니다. false 인 경우 &lt;a href=&quot;era#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;era#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="740f8ea7d7e99babe254fe61ffb8a8c1b954e1e1" translate="yes" xml:space="preserve">
          <source>This checks if this instant can be queried for the specified field. If false, then calling the &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#with(java.time.temporal.TemporalField,long)&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 필드에 대해이 순간을 쿼리 할 수 ​​있는지 확인합니다. false이면 &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#with(java.time.temporal.TemporalField,long)&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="245129fc70a5436326dda9f234b222d0a93044ed" translate="yes" xml:space="preserve">
          <source>This checks if this instant can be queried for the specified field. If false, then calling the &lt;a href=&quot;instant#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;instant#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;instant#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 필드에 대해이 인스턴트를 쿼리 할 수 ​​있는지 확인합니다. false의 경우, 호출 &lt;a href=&quot;instant#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;instant#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;instant#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 방법은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b90d755f9bbd6098709ef368a279d0b0d062aef0" translate="yes" xml:space="preserve">
          <source>This checks if this month-day can be queried for the specified field. If false, then calling the &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 필드에 대해이 월-일을 쿼리 할 수 ​​있는지 확인합니다. false 인 경우 &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b211971db1795bc5585acaa903273b06269d2c5d" translate="yes" xml:space="preserve">
          <source>This checks if this month-day can be queried for the specified field. If false, then calling the &lt;a href=&quot;monthday#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;monthday#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 월에 대해이 월을 쿼리 할 수 ​​있는지 확인합니다. false 인 경우 &lt;a href=&quot;monthday#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;monthday#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4358de0152b106d8bf1b7d817236882a7c416c32" translate="yes" xml:space="preserve">
          <source>This checks if this month-of-year can be queried for the specified field. If false, then calling the &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 필드에 대해이 월을 쿼리 할 수 ​​있는지 확인합니다. false 인 경우 &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="224a0a96dca5693e7f01300014d70926672a421d" translate="yes" xml:space="preserve">
          <source>This checks if this month-of-year can be queried for the specified field. If false, then calling the &lt;a href=&quot;month#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;month#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 달에 대해이 월을 쿼리 할 수 ​​있는지 확인합니다. false 인 경우 &lt;a href=&quot;month#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;month#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ed3d334034bb0e18d624f51126c1e5f32fba23f7" translate="yes" xml:space="preserve">
          <source>This checks if this offset can be queried for the specified field. If false, then calling the &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">이 오프셋을 지정된 필드에 대해 쿼리 할 수 ​​있는지 확인합니다. false 인 경우 &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8343b04cd719d66f80c79958a49089d25cb754b8" translate="yes" xml:space="preserve">
          <source>This checks if this offset can be queried for the specified field. If false, then calling the &lt;a href=&quot;zoneoffset#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneoffset#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 필드에 대해이 오프셋을 쿼리 할 수 ​​있는지 확인합니다. false 인 경우 &lt;a href=&quot;zoneoffset#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;zoneoffset#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c4c95e551a4a899ed84b62d3309523e3aa200045" translate="yes" xml:space="preserve">
          <source>This checks if this time can be queried for the specified field. If false, then calling the &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#with(java.time.temporal.TemporalField,long)&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 필드에 대해이 시간을 쿼리 할 수 ​​있는지 확인합니다. false이면 &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#with(java.time.temporal.TemporalField,long)&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5e97f23736773ca5d20f1d9c0d96760a8e6252df" translate="yes" xml:space="preserve">
          <source>This checks if this time can be queried for the specified field. If false, then calling the &lt;a href=&quot;localtime#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;localtime#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localtime#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 시간 동안이 시간을 쿼리 할 수 ​​있는지 확인합니다. false의 경우, 호출 &lt;a href=&quot;localtime#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;localtime#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;localtime#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 방법은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7ca315efad6b7500b2ec870d5521340b5ca22434" translate="yes" xml:space="preserve">
          <source>This checks if this time can be queried for the specified field. If false, then calling the &lt;a href=&quot;offsettime#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;offsettime#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsettime#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 시간 동안이 시간을 쿼리 할 수 ​​있는지 확인합니다. 다음 호출 false의 경우 &lt;a href=&quot;offsettime#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;offsettime#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 하고 &lt;a href=&quot;offsettime#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 방법은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5a799d4857bf84dbf4635bcc4af51cc6ceaa1eda" translate="yes" xml:space="preserve">
          <source>This checks if this year can be queried for the specified field. If false, then calling the &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#with(java.time.temporal.TemporalField,long)&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 필드에 대해 올해를 쿼리 할 수 ​​있는지 확인합니다. false이면 &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#with(java.time.temporal.TemporalField,long)&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f0bd642d89c147b4df9975a43763e71737dd19b3" translate="yes" xml:space="preserve">
          <source>This checks if this year can be queried for the specified field. If false, then calling the &lt;a href=&quot;year#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;year#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;year#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 필드에 대해 올해를 쿼리 할 수 ​​있는지 확인합니다. 다음 호출 false의 경우 &lt;a href=&quot;year#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;year#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 하고 &lt;a href=&quot;year#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 방법은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2aa5a1781e71264a6a771c9545b4bd46c05fe87e" translate="yes" xml:space="preserve">
          <source>This checks if this year-month can be queried for the specified field. If false, then calling the &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#with(java.time.temporal.TemporalField,long)&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 필드에 대해 올해-월을 쿼리 할 수 ​​있는지 확인합니다. false이면 &lt;a href=&quot;#range(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#get(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#with(java.time.temporal.TemporalField,long)&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="962a5b7bdfb5ae41751b10c91017e6097b971dd2" translate="yes" xml:space="preserve">
          <source>This checks if this year-month can be queried for the specified field. If false, then calling the &lt;a href=&quot;yearmonth#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;yearmonth#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;yearmonth#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">지정된 연도에 대해 이번 연도를 쿼리 할 수 ​​있는지 확인합니다. 다음 호출 false의 경우 &lt;a href=&quot;yearmonth#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;yearmonth#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 하고 &lt;a href=&quot;yearmonth#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 방법은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e43092d27505a008a9bf4137b2d9b53dee85b7d6" translate="yes" xml:space="preserve">
          <source>This checks that all valid values are within the bounds of an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">모든 유효한 값이 &lt;code&gt;int&lt;/code&gt; 범위 내에 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="0650e9af54b80c91c876b4f8f70fa9c63e34d721" translate="yes" xml:space="preserve">
          <source>This checks that the implementing date-time can add/subtract this unit. This can be used to avoid throwing an exception.</source>
          <target state="translated">이를 통해 구현 날짜-시간이이 단위를 추가 / 감소 할 수 있는지 확인합니다. 예외가 발생하지 않도록하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e4b9f69e60cf5452eb12206977163925e6b8007" translate="yes" xml:space="preserve">
          <source>This checks that the value is within the stored range of values.</source>
          <target state="translated">값이 저장된 값 범위 내에 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f04f4cea51d94a0009200fc39cd5bbe3d4afe8e4" translate="yes" xml:space="preserve">
          <source>This checks to see if the given offset will be valid at some point in the transition. A gap will always return false. An overlap will return true if the offset is either the before or after offset.</source>
          <target state="translated">이것은 주어진 오프셋이 전환의 어느 시점에서 유효한지 확인합니다. 간격은 항상 거짓을 반환합니다. 오프셋이 이전 또는 이후 오프셋 인 경우 오버랩은 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="265c01caaca3f3e5bf023b6d2c23765fed66fd0a" translate="yes" xml:space="preserve">
          <source>This checks to see if this date represents a point on the local time-line after the other date.</source>
          <target state="translated">이 날짜가 다른 날짜 이후의 현지 타임 라인의 한 지점을 나타내는 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a926e8f5a354ef5894035bb6914fa9312300051e" translate="yes" xml:space="preserve">
          <source>This checks to see if this date represents a point on the local time-line before the other date.</source>
          <target state="translated">이 날짜가 다른 날짜 이전의 현지 타임 라인의 한 지점을 나타내는 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1e00037dbb39ec0a9c9ac1bcb2daa7ee63e3c8d6" translate="yes" xml:space="preserve">
          <source>This checks to see if this date represents the same point on the local time-line as the other date.</source>
          <target state="translated">이 날짜가 다른 날짜와 같은 현지 시간 표시 줄의 동일한 지점을 나타내는 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7d3fde6570177af9d05099a481bfb884a1b02705" translate="yes" xml:space="preserve">
          <source>This checks to see if this date-time represents a point on the local time-line after the other date-time.</source>
          <target state="translated">이 날짜-시간이 다른 날짜-시간 이후의 로컬 타임 라인의 한 지점을 나타내는 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5ca88dbc6e85ad56cfac4f5a132ad59a8a0c65de" translate="yes" xml:space="preserve">
          <source>This checks to see if this date-time represents a point on the local time-line before the other date-time.</source>
          <target state="translated">이 날짜-시간이 다른 날짜-시간 이전의 현지 시간 표시 줄의 한 지점인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="46b058621489d3ca1904f5844641d2db4cfd1f15" translate="yes" xml:space="preserve">
          <source>This checks to see if this date-time represents the same point on the local time-line as the other date-time.</source>
          <target state="translated">이 날짜-시간이 다른 날짜-시간과 로컬 시간 표시 줄의 동일한 지점을 나타내는 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f3da7c16000c65374ad23d5ee50855e929a6af85" translate="yes" xml:space="preserve">
          <source>This checks whether the years, months or days units are less than zero.</source>
          <target state="translated">년, 월 또는 일 단위가 0보다 작은 지 여부를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7e65501fe8b51cdc6a79e5fd57da96a8104d6ec8" translate="yes" xml:space="preserve">
          <source>This chronology defines the rules of the ISO calendar system. This calendar system is based on the ISO-8601 standard, which is the</source>
          <target state="translated">이 연대기는 ISO 캘린더 시스템의 규칙을 정의합니다. 이 캘린더 시스템은 ISO-8601 표준을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="f2672ddfe9764a0398589d00c507a97713a9b680" translate="yes" xml:space="preserve">
          <source>This chronology defines the rules of the Japanese Imperial calendar system. This calendar system is primarily used in Japan. The Japanese Imperial calendar system is the same as the ISO calendar system apart from the era-based year numbering.</source>
          <target state="translated">이 연대기는 일본 제국 달력 시스템의 규칙을 정의합니다. 이 달력 시스템은 주로 일본에서 사용됩니다. 일본 제국 달력 시스템은 시대 별 연도 번호를 제외하고 ISO 달력 시스템과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="f287d87771abb8efb52de119872d348265a82a59" translate="yes" xml:space="preserve">
          <source>This chronology defines the rules of the Minguo calendar system. This calendar system is primarily used in the Republic of China, often known as Taiwan. Dates are aligned such that &lt;code&gt;0001-01-01 (Minguo)&lt;/code&gt; is &lt;code&gt;1912-01-01 (ISO)&lt;/code&gt;.</source>
          <target state="translated">이 연대기는 Minguo 캘린더 시스템의 규칙을 정의합니다. 이 캘린더 시스템은 주로 대만으로 알려진 중국에서 주로 사용됩니다. &lt;code&gt;0001-01-01 (Minguo)&lt;/code&gt; 이 &lt;code&gt;1912-01-01 (ISO)&lt;/code&gt; 이되도록 날짜가 정렬 됩니다.</target>
        </trans-unit>
        <trans-unit id="e67fb8bd1997ec68d2aad9ffaec53c7b1557fefe" translate="yes" xml:space="preserve">
          <source>This chronology defines the rules of the Thai Buddhist calendar system. This calendar system is primarily used in Thailand. Dates are aligned such that &lt;code&gt;2484-01-01 (Buddhist)&lt;/code&gt; is &lt;code&gt;1941-01-01 (ISO)&lt;/code&gt;.</source>
          <target state="translated">이 연대기는 태국 불교 달력 시스템의 규칙을 정의합니다. 이 달력 시스템은 주로 태국에서 사용됩니다. &lt;code&gt;2484-01-01 (Buddhist)&lt;/code&gt; 이 &lt;code&gt;1941-01-01 (ISO)&lt;/code&gt; 이되도록 날짜가 정렬 됩니다.</target>
        </trans-unit>
        <trans-unit id="fc07d7dd0027616976f4483849a8d9d04205cb46" translate="yes" xml:space="preserve">
          <source>This class acts as a factory for key managers based on a source of key material.</source>
          <target state="translated">이 클래스는 키 자료 소스를 기반으로하는 키 관리자의 팩토리 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="2a0a7454493f3db4c77f185a02b23b164174be56" translate="yes" xml:space="preserve">
          <source>This class acts as a factory for key managers based on a source of key material. Each key manager manages a specific type of key material for use by secure sockets. The key material is based on a KeyStore and/or provider specific sources.</source>
          <target state="translated">이 클래스는 키 자료 소스를 기반으로하는 키 관리자의 팩토리 역할을합니다. 각 키 관리자는 보안 소켓에서 사용할 특정 유형의 키 자료를 관리합니다. 키 자료는 KeyStore 및 / 또는 제공자 특정 소스를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="8a16a01436e97318ea3255ad09e29584197177c0" translate="yes" xml:space="preserve">
          <source>This class acts as a factory for trust managers based on a source of trust material.</source>
          <target state="translated">이 클래스는 신뢰 자료 소스를 기반으로하는 신뢰 관리자의 팩토리 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="d9c0ab1da3b6d2aa2b4ade72f525fa8860f50e7a" translate="yes" xml:space="preserve">
          <source>This class acts as a factory for trust managers based on a source of trust material. Each trust manager manages a specific type of trust material for use by secure sockets. The trust material is based on a KeyStore and/or provider specific sources.</source>
          <target state="translated">이 클래스는 신뢰 자료 소스를 기반으로하는 신뢰 관리자의 팩토리 역할을합니다. 각 트러스트 관리자는 보안 소켓에서 사용할 특정 유형의 트러스트 자료를 관리합니다. 신뢰 자료는 KeyStore 및 / 또는 제공자 특정 소스를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="c0d022fbadae871a89c37d4b4498a2cdc2278061" translate="yes" xml:space="preserve">
          <source>This class acts as a factory for trust managers based on a source of trust material. Each trust manager manages a specific type of trust material for use by secure sockets. The trust material is based on a KeyStore and/or provider-specific sources.</source>
          <target state="translated">이 클래스는 신뢰 자료의 출처를 기반으로 신뢰 관리자를위한 공장 역할을합니다. 각 신뢰 관리자는 보안 소켓에서 사용할 특정 유형의 신뢰 자료를 관리합니다. 신뢰 자료는 키 스토어 및 / 또는 공급자 별 소스를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="c911b08ea419f003753c346ff87b6440e99d5888" translate="yes" xml:space="preserve">
          <source>This class adds the ability to set JPEG quantization and Huffman tables when using the built-in JPEG reader plug-in.</source>
          <target state="translated">이 클래스는 내장 JPEG 리더 플러그인을 사용할 때 JPEG 양자화 및 허프만 테이블을 설정하는 기능을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="e2691ba9db3001e7d91ebcdc6955b689a032cf1c" translate="yes" xml:space="preserve">
          <source>This class adds the ability to set JPEG quantization and Huffman tables when using the built-in JPEG reader plug-in. An instance of this class will be returned from the &lt;code&gt;getDefaultImageReadParam&lt;/code&gt; methods of the built-in JPEG &lt;code&gt;ImageReader&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 내장 JPEG 리더 플러그인을 사용할 때 JPEG 양자화 및 허프만 테이블을 설정하는 기능을 추가합니다. 이 클래스의 인스턴스는 내장 JPEG &lt;code&gt;ImageReader&lt;/code&gt; 의 &lt;code&gt;getDefaultImageReadParam&lt;/code&gt; 메소드 로부터 돌려 주어 집니다.</target>
        </trans-unit>
        <trans-unit id="77c5aed8d2bdde726d3a02900753ab0db680cdc5" translate="yes" xml:space="preserve">
          <source>This class adds the ability to set JPEG quantization and Huffman tables when using the built-in JPEG writer plug-in, and to request that optimized Huffman tables be computed for an image.</source>
          <target state="translated">이 클래스는 내장 JPEG 라이터 플러그인을 사용할 때 JPEG 양자화 및 허프만 테이블을 설정하고 이미지에 대해 최적화 된 허프만 테이블을 계산하도록 요청하는 기능을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="4dfa7cbf1bfbfe2a4f1633752f9e49f0aad38f7b" translate="yes" xml:space="preserve">
          <source>This class adds the ability to set JPEG quantization and Huffman tables when using the built-in JPEG writer plug-in, and to request that optimized Huffman tables be computed for an image. An instance of this class will be returned from the &lt;code&gt;getDefaultImageWriteParam&lt;/code&gt; methods of the built-in JPEG &lt;code&gt;ImageWriter&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 내장 JPEG 라이터 플러그인을 사용할 때 JPEG 양자화 및 허프만 테이블을 설정하고 이미지에 대해 최적화 된 허프만 테이블을 계산하도록 요청하는 기능을 추가합니다. 이 클래스의 인스턴스는 내장 JPEG &lt;code&gt;ImageWriter&lt;/code&gt; 의 &lt;code&gt;getDefaultImageWriteParam&lt;/code&gt; 메소드 로부터 돌려 주어 집니다.</target>
        </trans-unit>
        <trans-unit id="d6ac544140297f561bd1c7ede858f5e6a7f2cc35" translate="yes" xml:space="preserve">
          <source>This class adheres strictly to the semantics, especially the failure semantics, of its ancestor classes java.io.FilterInputStream and java.io.InputStream. This class has exactly those methods specified in its ancestor classes, and overrides them all. Moreover, this class catches all exceptions that are not thrown by its ancestor classes. In particular, the &lt;code&gt;skip&lt;/code&gt; method skips, and the &lt;code&gt;available&lt;/code&gt; method counts only data that have been processed by the encapsulated Cipher.</source>
          <target state="translated">이 클래스는 상위 클래스 java.io.FilterInputStream 및 java.io.InputStream의 시맨틱, 특히 실패 시맨틱을 엄격하게 준수합니다. 이 클래스는 상위 클래스에 지정된 메소드를 정확하게 가지고 있으며 모든 메소드를 대체합니다. 또한이 클래스는 조상 클래스에서 발생하지 않는 모든 예외를 포착합니다. 특히, &lt;code&gt;skip&lt;/code&gt; 메소드는 건너 뛰고 &lt;code&gt;available&lt;/code&gt; 메소드는 캡슐화 된 Cipher에 의해 처리 된 데이터 만 계산합니다.</target>
        </trans-unit>
        <trans-unit id="c41ab9b43270ad36cf6be3b861b855cb1452baa1" translate="yes" xml:space="preserve">
          <source>This class adheres strictly to the semantics, especially the failure semantics, of its ancestor classes java.io.FilterInputStream and java.io.InputStream. This class has exactly those methods specified in its ancestor classes, and overrides them all. Moreover, this class catches all exceptions that are not thrown by its ancestor classes. In particular, the &lt;code&gt;skip&lt;/code&gt; method skips, and the &lt;code&gt;available&lt;/code&gt; method counts only data that have been processed by the encapsulated Cipher. This class may catch BadPaddingException and other exceptions thrown by failed integrity checks during decryption. These exceptions are not re-thrown, so the client may not be informed that integrity checks failed. Because of this behavior, this class may not be suitable for use with decryption in an authenticated mode of operation (e.g. GCM). Applications that require authenticated encryption can use the Cipher API directly as an alternative to using this class.</source>
          <target state="translated">이 클래스는 해당 조상 클래스 java.io.FilterInputStream 및 java.io.InputStream의 의미론, 특히 실패 의미론을 엄격하게 준수합니다. 이 클래스는 조상 클래스에 지정된 메서드와 정확히 일치하며 모두 재정의합니다. 또한이 클래스는 조상 클래스에서 던지지 않은 모든 예외를 포착합니다. 특히 &lt;code&gt;skip&lt;/code&gt; 메소드는 건너 뛰고 &lt;code&gt;available&lt;/code&gt; 메소드는 캡슐화 된 Cipher에 의해 처리 된 데이터 만 계산합니다. 이 클래스는 암호 해독 중에 실패한 무결성 검사로 인해 발생하는 BadPaddingException 및 기타 예외를 포착 할 수 있습니다. 이러한 예외는 다시 발생하지 않으므로 클라이언트는 무결성 검사가 실패했다는 알림을받지 못할 수 있습니다. 이 동작 때문에이 클래스는 인증 된 작동 모드 (예 : GCM)에서 암호 해독에 사용하기에 적합하지 않을 수 있습니다. 인증 된 암호화가 필요한 애플리케이션은이 클래스를 사용하는 대신 Cipher API를 직접 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c66433003e78fb298309a0cb99c19c9629392e11" translate="yes" xml:space="preserve">
          <source>This class adheres strictly to the semantics, especially the failure semantics, of its ancestor classes java.io.OutputStream and java.io.FilterOutputStream. This class has exactly those methods specified in its ancestor classes, and overrides them all. Moreover, this class catches all exceptions that are not thrown by its ancestor classes.</source>
          <target state="translated">이 클래스는 상위 클래스 java.io.OutputStream 및 java.io.FilterOutputStream의 시맨틱, 특히 실패 시맨틱을 엄격하게 준수합니다. 이 클래스는 상위 클래스에 지정된 메소드를 정확하게 가지고 있으며 모든 메소드를 대체합니다. 또한이 클래스는 조상 클래스에서 발생하지 않는 모든 예외를 포착합니다.</target>
        </trans-unit>
        <trans-unit id="c9d68fe263b61861922685f159c711006878599e" translate="yes" xml:space="preserve">
          <source>This class adheres strictly to the semantics, especially the failure semantics, of its ancestor classes java.io.OutputStream and java.io.FilterOutputStream. This class has exactly those methods specified in its ancestor classes, and overrides them all. Moreover, this class catches all exceptions that are not thrown by its ancestor classes. In particular, this class catches BadPaddingException and other exceptions thrown by failed integrity checks during decryption. These exceptions are not re-thrown, so the client will not be informed that integrity checks failed. Because of this behavior, this class may not be suitable for use with decryption in an authenticated mode of operation (e.g. GCM) if the application requires explicit notification when authentication fails. Such an application can use the Cipher API directly as an alternative to using this class.</source>
          <target state="translated">이 클래스는 조상 클래스 java.io.OutputStream 및 java.io.FilterOutputStream의 의미 체계, 특히 실패 의미 체계를 엄격하게 준수합니다. 이 클래스는 조상 클래스에 지정된 메서드와 정확히 일치하며 모두 재정의합니다. 또한이 클래스는 조상 클래스에서 발생하지 않는 모든 예외를 포착합니다. 특히이 클래스는 암호 해독 중에 실패한 무결성 검사로 인해 발생하는 BadPaddingException 및 기타 예외를 포착합니다. 이러한 예외는 다시 발생하지 않으므로 클라이언트는 무결성 검사가 실패했음을 알리지 않습니다. 이 동작으로 인해 인증 실패시 애플리케이션이 명시적인 알림을 요구하는 경우이 클래스는 인증 된 작동 모드 (예 : GCM)에서 암호 해독에 사용하기에 적합하지 않을 수 있습니다.이러한 애플리케이션은이 클래스를 사용하는 대신 Cipher API를 직접 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b696192448189ed99933f51d93c5143cf46cc750" translate="yes" xml:space="preserve">
          <source>This class allows a SAX application to encapsulate information about an input source in a single object, which may include a public identifier, a system identifier, a byte stream (possibly with a specified encoding), and/or a character stream.</source>
          <target state="translated">이 클래스를 사용하면 SAX 애플리케이션이 입력 소스에 대한 정보를 공용 식별자, 시스템 식별자, 바이트 스트림 (지정된 인코딩 사용) 및 / 또는 문자 스트림을 포함 할 수있는 단일 객체로 캡슐화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13ee0c499ccacc109c50c74284032b81d0afb937" translate="yes" xml:space="preserve">
          <source>This class allows an application to create an input stream in which the bytes read are supplied by the contents of a string. Applications can also read bytes from a byte array by using a &lt;code&gt;ByteArrayInputStream&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 어플리케이션이 읽은 바이트가 문자열의 내용에 의해 제공되는 입력 스트림을 작성할 수있게합니다. 응용 프로그램은 &lt;code&gt;ByteArrayInputStream&lt;/code&gt; 을 사용하여 바이트 배열에서 바이트를 읽을 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="345efd47d898aa1e229a2bf9d4103e663820ff7d" translate="yes" xml:space="preserve">
          <source>This class allows for the specification of various parameters while writing a BMP format image file. By default, the data layout is bottom-up, such that the pixels are stored in bottom-up order, the first scanline being stored last.</source>
          <target state="translated">이 클래스는 BMP 형식 이미지 파일을 작성하는 동안 다양한 매개 변수를 지정할 수 있습니다. 기본적으로 데이터 레이아웃은 상향식이므로 픽셀은 상향식 순서로 저장되며 첫 번째 스캔 라인은 마지막에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="140e3e5d12e36ac06b631eacafcc8c3345838175" translate="yes" xml:space="preserve">
          <source>This class allows rules for identifying future transitions to be expressed. A rule might be written in many forms:</source>
          <target state="translated">이 클래스를 사용하면 향후 전환을 식별하기위한 규칙을 표현할 수 있습니다. 규칙은 여러 형태로 작성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c6f6b9122ba710b47f4d094d6321ed64c3e2d10" translate="yes" xml:space="preserve">
          <source>This class allows the Source to be the same as the Destination.</source>
          <target state="translated">이 클래스는 Source가 Destination과 같도록합니다.</target>
        </trans-unit>
        <trans-unit id="883a340235c5e37d5d31802323e643a49c062394" translate="yes" xml:space="preserve">
          <source>This class also defines factory methods that allow a &lt;a href=&quot;../../lang/classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt; to be specified when locating a provider. As with installed providers, the provider classes are identified by placing the provider configuration file in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 공급자를 찾을 때 &lt;a href=&quot;../../lang/classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; &lt;/a&gt; 를 지정할 수있는 팩토리 메소드도 정의합니다 . 설치된 제공자와 마찬가지로 제공자 구성 파일을 자원 디렉토리 &lt;code&gt;META-INF/services&lt;/code&gt; 에 배치하여 제공자 클래스를 식별 합니다 .</target>
        </trans-unit>
        <trans-unit id="d1ea52b0fae3bd1d0115d08be410f36995cfaae0" translate="yes" xml:space="preserve">
          <source>This class also defines methods for maintaining a selector's cancelled-key set and for removing a key from its channel's key set, and declares the abstract &lt;a href=&quot;#register(java.nio.channels.spi.AbstractSelectableChannel,int,java.lang.Object)&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method that is invoked by a selectable channel's &lt;a href=&quot;abstractselectablechannel#register(java.nio.channels.Selector,int,java.lang.Object)&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method in order to perform the actual work of registering a channel.</source>
          <target state="translated">이 클래스는 또한 선택기의 취소 된 키 집합을 유지하고 해당 채널의 키 집합에서 키를 제거하는 메서드를 정의하고 채널 &lt;a href=&quot;#register(java.nio.channels.spi.AbstractSelectableChannel,int,java.lang.Object)&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt; 의 실제 작업을 수행하기 위해 선택 가능한 채널의 &lt;a href=&quot;abstractselectablechannel#register(java.nio.channels.Selector,int,java.lang.Object)&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt; 메서드에 의해 호출되는 추상 레지스터 메서드를 선언합니다. .</target>
        </trans-unit>
        <trans-unit id="8544b2160ddbef279d46a118efdbdae999cd88f3" translate="yes" xml:space="preserve">
          <source>This class also defines methods for maintaining a selector's cancelled-key set and for removing a key from its channel's key set, and declares the abstract &lt;a href=&quot;abstractselector#register-java.nio.channels.spi.AbstractSelectableChannel-int-java.lang.Object-&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method that is invoked by a selectable channel's &lt;a href=&quot;abstractselectablechannel#register-java.nio.channels.Selector-int-java.lang.Object-&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method in order to perform the actual work of registering a channel.</source>
          <target state="translated">또한이 클래스는 셀렉터의 취소 된 키 세트를 유지 관리하고 채널의 키 세트에서 키를 제거하는 메소드를 정의하고 채널 &lt;a href=&quot;abstractselector#register-java.nio.channels.spi.AbstractSelectableChannel-int-java.lang.Object-&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt; 의 실제 작업을 수행하기 위해 선택 가능한 채널의 &lt;a href=&quot;abstractselectablechannel#register-java.nio.channels.Selector-int-java.lang.Object-&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt; 메소드에 의해 호출되는 추상 레지스터 메소드를 선언합니다. .</target>
        </trans-unit>
        <trans-unit id="a62d705e3201497fb90ebd20c02ea7a2218bcc79" translate="yes" xml:space="preserve">
          <source>This class also defines methods for replacing matched subsequences with new strings whose contents can, if desired, be computed from the match result. The &lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#appendTail(java.lang.StringBuffer)&quot;&gt;&lt;code&gt;appendTail&lt;/code&gt;&lt;/a&gt; methods can be used in tandem in order to collect the result into an existing string buffer or string builder. Alternatively, the more convenient &lt;a href=&quot;#replaceAll(java.lang.String)&quot;&gt;&lt;code&gt;replaceAll&lt;/code&gt;&lt;/a&gt; method can be used to create a string in which every matching subsequence in the input sequence is replaced.</source>
          <target state="translated">이 클래스는 또한 일치하는 하위 시퀀스를 원하는 경우 일치 결과에서 계산할 수있는 새 문자열로 대체하는 메서드를 정의합니다. &lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#appendTail(java.lang.StringBuffer)&quot;&gt; &lt;code&gt;appendTail&lt;/code&gt; &lt;/a&gt; 방법은 기존 스트링 버퍼 또는 문자열 빌더로 결과를 수집하기 위해 직렬로 사용될 수있다. 또는 더 편리한 &lt;a href=&quot;#replaceAll(java.lang.String)&quot;&gt; &lt;code&gt;replaceAll&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 입력 시퀀스에서 일치하는 모든 하위 시퀀스가 ​​대체되는 문자열을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="800bb7cdbb26403b8253b92ac40e8720a35d0118" translate="yes" xml:space="preserve">
          <source>This class also defines methods for replacing matched subsequences with new strings whose contents can, if desired, be computed from the match result. The &lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;matcher#appendTail-java.lang.StringBuffer-&quot;&gt;&lt;code&gt;appendTail&lt;/code&gt;&lt;/a&gt; methods can be used in tandem in order to collect the result into an existing string buffer, or the more convenient &lt;a href=&quot;matcher#replaceAll-java.lang.String-&quot;&gt;&lt;code&gt;replaceAll&lt;/code&gt;&lt;/a&gt; method can be used to create a string in which every matching subsequence in the input sequence is replaced.</source>
          <target state="translated">이 클래스는 또한 일치하는 서브 시퀀스를 원하는 경우 일치 결과에서 컨텐츠를 계산할 수있는 새 문자열로 대체하기위한 메소드를 정의합니다. &lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;matcher#appendTail-java.lang.StringBuffer-&quot;&gt; &lt;code&gt;appendTail&lt;/code&gt; &lt;/a&gt; 방법은 기존 문자열 버퍼에 결과를 수집하기 위해 직렬로 사용될 수 있으며, 또는보다 편리 &lt;a href=&quot;matcher#replaceAll-java.lang.String-&quot;&gt; &lt;code&gt;replaceAll&lt;/code&gt; &lt;/a&gt; 방법은, 입력 시퀀스의 모든 매칭 시퀀스가 치환 된 문자열을 생성하는데 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="eb5b370e1171b96ffc5a2d05a76690caa47226f8" translate="yes" xml:space="preserve">
          <source>This class also defines static methods for testing whether a particular charset is supported, for locating charset instances by name, and for constructing a map that contains every charset for which support is available in the current Java virtual machine. Support for new charsets can be added via the service-provider interface defined in the &lt;a href=&quot;spi/charsetprovider&quot;&gt;&lt;code&gt;CharsetProvider&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">이 클래스는 또한 특정 문자 세트가 지원되는지 테스트하고 이름별로 문자 세트 인스턴스를 찾고 현재 Java 가상 머신에서 지원되는 모든 문자 세트를 포함하는 맵을 구성하기위한 정적 메소드를 정의합니다. &lt;a href=&quot;spi/charsetprovider&quot;&gt; &lt;code&gt;CharsetProvider&lt;/code&gt; &lt;/a&gt; 클래스에 정의 된 서비스 공급자 인터페이스를 통해 새 문자 세트에 대한 지원을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6107bcbf688c4a8e406ba31ee1bc08a7a500f8fe" translate="yes" xml:space="preserve">
          <source>This class also extends &lt;code&gt;FileOwnerAttributeView&lt;/code&gt; so as to define methods to get and set the file owner.</source>
          <target state="translated">또한이 클래스는 &lt;code&gt;FileOwnerAttributeView&lt;/code&gt; 를 확장 하여 파일 소유자를 가져오고 설정하는 메소드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="759e9c8edfea028125ddb4633f8e5b4e40b88175" translate="yes" xml:space="preserve">
          <source>This class also provides additional commonly used bounded random generation methods.</source>
          <target state="translated">이 클래스는 또한 일반적으로 사용되는 추가 된 무작위 생성 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="eccafc794ce8c220c0844c40d88100c9975de45b" translate="yes" xml:space="preserve">
          <source>This class also provides convenience methods to &lt;a href=&quot;#acquire(int)&quot;&gt;&lt;code&gt;acquire&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#release(int)&quot;&gt;&lt;code&gt;release&lt;/code&gt;&lt;/a&gt; multiple permits at a time. These methods are generally more efficient and effective than loops. However, they do not establish any preference order. For example, if thread A invokes &lt;code&gt;s.acquire(3&lt;/code&gt;) and thread B invokes &lt;code&gt;s.acquire(2)&lt;/code&gt;, and two permits become available, then there is no guarantee that thread B will obtain them unless its acquire came first and Semaphore &lt;code&gt;s&lt;/code&gt; is in fair mode.</source>
          <target state="translated">이 클래스는 또한 한 번에 여러 개의 허가 를 &lt;a href=&quot;#acquire(int)&quot;&gt; &lt;code&gt;acquire&lt;/code&gt; &lt;/a&gt; 하고 &lt;a href=&quot;#release(int)&quot;&gt; &lt;code&gt;release&lt;/code&gt; &lt;/a&gt; 하는 편리한 메서드를 제공합니다 . 이러한 방법은 일반적으로 루프보다 더 효율적이고 효과적입니다. 그러나 선호 순서는 설정하지 않습니다. 예를 들어, 스레드 A가 &lt;code&gt;s.acquire(3&lt;/code&gt; )를 호출하고 스레드 B가 &lt;code&gt;s.acquire(2)&lt;/code&gt; 호출 하고 두 개의 허가가 사용 가능 해지면 스레드 B가 먼저 획득하고 Semaphore &lt;code&gt;s&lt;/code&gt; 가 공정한 모드에서.</target>
        </trans-unit>
        <trans-unit id="f9db46f37b6f37829cea24460ae2fcad6fbd1820" translate="yes" xml:space="preserve">
          <source>This class also provides convenience methods to &lt;a href=&quot;semaphore#acquire-int-&quot;&gt;&lt;code&gt;acquire&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;semaphore#release-int-&quot;&gt;&lt;code&gt;release&lt;/code&gt;&lt;/a&gt; multiple permits at a time. Beware of the increased risk of indefinite postponement when these methods are used without fairness set true.</source>
          <target state="translated">이 클래스는 또한 한 번에 여러 허가 를 &lt;a href=&quot;semaphore#acquire-int-&quot;&gt; &lt;code&gt;acquire&lt;/code&gt; &lt;/a&gt; 하고 &lt;a href=&quot;semaphore#release-int-&quot;&gt; &lt;code&gt;release&lt;/code&gt; &lt;/a&gt; 하는 편리한 방법을 제공합니다 . 이러한 방법을 공정하게 사용하지 않고 사용할 경우 무기한 연기의 위험이 증가한다는 점에 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="f7cbe42393da433886d52c38eb2078733b0f820c" translate="yes" xml:space="preserve">
          <source>This class also provides efficient support for small sets of attributes and compresses them by sharing across uses and taking advantage of their immutable nature. Since many styles are replicated, the potential for sharing is significant, and copies can be extremely cheap. Larger sets reduce the possibility of sharing, and therefore revert automatically to a less space-efficient implementation.</source>
          <target state="translated">이 클래스는 또한 작은 속성 집합에 대한 효율적인 지원을 제공하고 사용간에 공유하고 변경 불가능한 특성을 활용하여 압축합니다. 많은 스타일이 복제되기 때문에 공유 가능성이 크며 복사본이 매우 저렴할 수 있습니다. 세트가 클수록 공유 가능성이 감소하므로 공간 효율적인 구현으로 자동으로 되돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="388897f95e2ff6372628c92b420d7766250b3049" translate="yes" xml:space="preserve">
          <source>This class also provides hooks that make it possible to supply custom descriptions and names for the &lt;a href=&quot;mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt; returned by the DynamicMBean interface.</source>
          <target state="translated">이 클래스는 또한 DynamicMBean 인터페이스에서 리턴 한 &lt;a href=&quot;mbeaninfo&quot;&gt; &lt;code&gt;MBeanInfo&lt;/code&gt; 에&lt;/a&gt; 대한 사용자 정의 설명 및 이름을 제공 할 수있는 후크를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="49745b7a1e1299994cf0df936b6f8c2c779e7c93" translate="yes" xml:space="preserve">
          <source>This class also provides some concurrency support if the &lt;code&gt;Document&lt;/code&gt; associated with the JTextComponent is a subclass of &lt;code&gt;AbstractDocument&lt;/code&gt;. Access to the View (or View hierarchy) is serialized between any thread mutating the model and the Swing event thread (which is expected to render, do model/view coordinate translation, etc). &lt;em&gt;Any access to the root view should first acquire a read-lock on the AbstractDocument and release that lock in a finally block.&lt;/em&gt;</source>
          <target state="translated">이 클래스는 JTextComponent와 관련된 &lt;code&gt;Document&lt;/code&gt; 가 &lt;code&gt;AbstractDocument&lt;/code&gt; 의 하위 클래스 인 경우 일부 동시성 지원도 제공합니다 . 뷰 (또는 뷰 계층)에 대한 액세스는 모델을 변경하는 모든 스레드와 Swing 이벤트 스레드 (렌더링, 모델 / 뷰 좌표 변환 등을 수행 할 것으로 예상 됨)간에 직렬화됩니다. &lt;em&gt;루트 뷰에 대한 모든 액세스는 먼저 AbstractDocument에 대한 읽기 잠금을 획득하고 finally 블록에서 해당 잠금을 해제해야합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c0ba03bcd19ed0eeb9e7df119dd2f7f6a248a66" translate="yes" xml:space="preserve">
          <source>This class also supports methods that conditionally provide conversions across the three modes. For example, method &lt;a href=&quot;#tryConvertToWriteLock(long)&quot;&gt;&lt;code&gt;tryConvertToWriteLock(long)&lt;/code&gt;&lt;/a&gt; attempts to &quot;upgrade&quot; a mode, returning a valid write stamp if (1) already in writing mode (2) in reading mode and there are no other readers or (3) in optimistic mode and the lock is available. The forms of these methods are designed to help reduce some of the code bloat that otherwise occurs in retry-based designs.</source>
          <target state="translated">이 클래스는 세 가지 모드에서 조건부로 변환을 제공하는 메서드도 지원합니다. 예를 들어, &lt;a href=&quot;#tryConvertToWriteLock(long)&quot;&gt; &lt;code&gt;tryConvertToWriteLock(long)&lt;/code&gt; &lt;/a&gt; 메소드 는 모드를 &quot;업그레이드&quot;하려고 시도하고, (1) 이미 쓰기 모드에 있고 (2) 읽기 모드에 있고 다른 판독기가 없거나 (3) 낙관적 모드에 있고 잠금을 사용할 수 있습니다. 이러한 메서드의 형식은 재시도 기반 디자인에서 발생하는 일부 코드 부풀림을 줄이는 데 도움이되도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="3e214e2e116cbd8d9d4053eaab2404092347b186" translate="yes" xml:space="preserve">
          <source>This class also supports methods that conditionally provide conversions across the three modes. For example, method &lt;a href=&quot;stampedlock#tryConvertToWriteLock-long-&quot;&gt;&lt;code&gt;tryConvertToWriteLock(long)&lt;/code&gt;&lt;/a&gt; attempts to &quot;upgrade&quot; a mode, returning a valid write stamp if (1) already in writing mode (2) in reading mode and there are no other readers or (3) in optimistic mode and the lock is available. The forms of these methods are designed to help reduce some of the code bloat that otherwise occurs in retry-based designs.</source>
          <target state="translated">이 클래스는 또한 세 가지 모드에서 조건부로 변환을 제공하는 메소드를 지원합니다. 예를 들어, &lt;a href=&quot;stampedlock#tryConvertToWriteLock-long-&quot;&gt; &lt;code&gt;tryConvertToWriteLock(long)&lt;/code&gt; &lt;/a&gt; 메소드는 (1) 이미 쓰기 모드에 있고 (2) 읽기 모드에 있고 다른 판독기가 없거나 (3) 낙관적 모드에있는 경우 유효한 쓰기 스탬프를 반환하여 모드를 &quot;업그레이드&quot;하려고 시도합니다. 잠금이 가능합니다. 이러한 방법의 형태는 재시도 기반 설계에서 발생하는 일부 코드 팽창을 줄이는 데 도움이되도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="517d4b3ff2e4b46aca8a284d5b447c5a9e588296" translate="yes" xml:space="preserve">
          <source>This class always replaces malformed and unmappable character sequences with the charset's default replacement string. The &lt;a href=&quot;../nio/charset/charsetencoder&quot;&gt;CharsetEncoder&lt;/a&gt; class should be used when more control over the encoding process is required.</source>
          <target state="translated">이 클래스는 항상 잘못된 형식과 매핑 할 수없는 문자 시퀀스를 문자 집합의 기본 대체 문자열로 바꿉니다. &lt;a href=&quot;../nio/charset/charsetencoder&quot;&gt;CharsetEncoder의&lt;/a&gt; 부호화 처리를 더 제어 할 필요가있는 경우, 클래스가 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="5a00765dbf6fd5bee7c0cb57ffcf0fb5907d6bb4" translate="yes" xml:space="preserve">
          <source>This class always replaces malformed surrogate elements and unmappable character sequences with the charset's default</source>
          <target state="translated">이 클래스는 항상 잘못된 대리 요소와 매핑 할 수없는 문자 시퀀스를 문자 집합의 기본값으로 바꿉니다</target>
        </trans-unit>
        <trans-unit id="2c924ddcfb11ff34458b625cfb5bc3a8a092689c" translate="yes" xml:space="preserve">
          <source>This class and its iterator implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;../collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces.</source>
          <target state="translated">이 클래스와 반복자 는 &lt;a href=&quot;../collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 인터페이스 의 모든 &lt;em&gt;선택적&lt;/em&gt; 메소드를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="297b1d49741024e05d5b3a2c74d5284b81901ee5" translate="yes" xml:space="preserve">
          <source>This class and its iterator implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;../collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces. The Iterator provided in method &lt;a href=&quot;#iterator()&quot;&gt;&lt;code&gt;iterator()&lt;/code&gt;&lt;/a&gt; and the Spliterator provided in method &lt;a href=&quot;#spliterator()&quot;&gt;&lt;code&gt;spliterator()&lt;/code&gt;&lt;/a&gt; are &lt;em&gt;not&lt;/em&gt; guaranteed to traverse the elements of the PriorityBlockingQueue in any particular order. If you need ordered traversal, consider using &lt;code&gt;Arrays.sort(pq.toArray())&lt;/code&gt;. Also, method &lt;code&gt;drainTo&lt;/code&gt; can be used to &lt;em&gt;remove&lt;/em&gt; some or all elements in priority order and place them in another collection.</source>
          <target state="translated">이 클래스와 해당 반복자 는 &lt;a href=&quot;../collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 인터페이스 의 모든 &lt;em&gt;선택적&lt;/em&gt; 메서드를 구현합니다 . &lt;a href=&quot;#iterator()&quot;&gt; &lt;code&gt;iterator()&lt;/code&gt; &lt;/a&gt; 메서드에서 제공되는 Iterator 및 &lt;a href=&quot;#spliterator()&quot;&gt; &lt;code&gt;spliterator()&lt;/code&gt; &lt;/a&gt; 메서드에서 제공되는 Spliterator 는 특정 순서로 PriorityBlockingQueue의 요소를 순회하는 &lt;em&gt;것이&lt;/em&gt; 보장 &lt;em&gt;되지 않습니다&lt;/em&gt; . 정렬 된 순회가 필요한 경우 &lt;code&gt;Arrays.sort(pq.toArray())&lt;/code&gt; 사용을 고려하십시오 . 또한 &lt;code&gt;drainTo&lt;/code&gt; 메서드를 사용하여 우선 순위에 따라 일부 또는 모든 요소 를 &lt;em&gt;제거&lt;/em&gt; 하고 다른 컬렉션에 배치 할 수 있습니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4b5026f03c7522359d1fe296fa1e5a6ccb6de721" translate="yes" xml:space="preserve">
          <source>This class and its iterator implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;../collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces. The Iterator provided in method &lt;a href=&quot;#iterator()&quot;&gt;&lt;code&gt;iterator()&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; guaranteed to traverse the elements of the DelayQueue in any particular order.</source>
          <target state="translated">이 클래스와 해당 반복자 는 &lt;a href=&quot;../collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 인터페이스 의 모든 &lt;em&gt;선택적&lt;/em&gt; 메서드를 구현합니다 . &lt;a href=&quot;#iterator()&quot;&gt; &lt;code&gt;iterator()&lt;/code&gt; &lt;/a&gt; 메서드에 제공된 Iterator 는 특정 순서로 DelayQueue의 요소를 순회하는 &lt;em&gt;것이&lt;/em&gt; 보장 &lt;em&gt;되지 않습니다&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="caedfeebaf4719dc6fcd730450a6cc6bdb4c5939" translate="yes" xml:space="preserve">
          <source>This class and its iterator implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;../collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces. The Iterator provided in method &lt;a href=&quot;delayqueue#iterator--&quot;&gt;&lt;code&gt;iterator()&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; guaranteed to traverse the elements of the DelayQueue in any particular order.</source>
          <target state="translated">이 클래스와 반복자 는 &lt;a href=&quot;../collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 인터페이스 의 모든 &lt;em&gt;선택적&lt;/em&gt; 메소드를 구현합니다 . &lt;a href=&quot;delayqueue#iterator--&quot;&gt; &lt;code&gt;iterator()&lt;/code&gt; &lt;/a&gt; 메소드에 제공된 Iterator 는 특정 순서로 DelayQueue의 요소를 순회한다고 보장 &lt;em&gt;하지 않습니다&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="40f8fce0544f16774f1621d14ca4d225948f2bdf" translate="yes" xml:space="preserve">
          <source>This class and its iterator implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;../collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces. The Iterator provided in method &lt;a href=&quot;priorityblockingqueue#iterator--&quot;&gt;&lt;code&gt;iterator()&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; guaranteed to traverse the elements of the PriorityBlockingQueue in any particular order. If you need ordered traversal, consider using &lt;code&gt;Arrays.sort(pq.toArray())&lt;/code&gt;. Also, method &lt;code&gt;drainTo&lt;/code&gt; can be used to &lt;em&gt;remove&lt;/em&gt; some or all elements in priority order and place them in another collection.</source>
          <target state="translated">이 클래스와 반복자 는 &lt;a href=&quot;../collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 인터페이스 의 모든 &lt;em&gt;선택적&lt;/em&gt; 메소드를 구현합니다 . &lt;a href=&quot;priorityblockingqueue#iterator--&quot;&gt; &lt;code&gt;iterator()&lt;/code&gt; &lt;/a&gt; 메소드에서 제공되는 Iterator 는 특정 순서로 PriorityBlockingQueue의 요소를 순회한다고 보장 &lt;em&gt;하지 않습니다&lt;/em&gt; . 순서 순회가 필요한 경우 &lt;code&gt;Arrays.sort(pq.toArray())&lt;/code&gt; 사용을 고려하십시오 . 또한 &lt;code&gt;drainTo&lt;/code&gt; 메서드를 사용하여 일부 또는 모든 요소를 ​​우선 순위대로 &lt;em&gt;제거&lt;/em&gt; 하고 다른 컬렉션에 배치 할 수 있습니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0d9f6bf748b95eac88b62dd7afacd5a8aa1e40da" translate="yes" xml:space="preserve">
          <source>This class and its iterator implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;../deque&quot;&gt;&lt;code&gt;Deque&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces.</source>
          <target state="translated">이 클래스와 해당 반복기 는 &lt;a href=&quot;../deque&quot;&gt; &lt;code&gt;Deque&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 인터페이스 의 모든 &lt;em&gt;선택적&lt;/em&gt; 메소드를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="3ad988531a4324358d99a6ecc31419085cfbbef7" translate="yes" xml:space="preserve">
          <source>This class and its iterator implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;../queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces.</source>
          <target state="translated">이 클래스와 해당 반복기 는 &lt;a href=&quot;../queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 인터페이스 의 모든 &lt;em&gt;선택적&lt;/em&gt; 메소드를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="35873d3267139d8d755ababcaa078e4145b88017" translate="yes" xml:space="preserve">
          <source>This class and its iterator implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces.</source>
          <target state="translated">이 클래스와 반복자 는 &lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 인터페이스 의 모든 &lt;em&gt;선택적&lt;/em&gt; 메소드를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="894b559d9db7ed90dcb2eabbff2b92eab5f1c717" translate="yes" xml:space="preserve">
          <source>This class and its iterator implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces. The Iterator provided in method &lt;a href=&quot;#iterator()&quot;&gt;&lt;code&gt;iterator()&lt;/code&gt;&lt;/a&gt; and the Spliterator provided in method &lt;a href=&quot;#spliterator()&quot;&gt;&lt;code&gt;spliterator()&lt;/code&gt;&lt;/a&gt; are &lt;em&gt;not&lt;/em&gt; guaranteed to traverse the elements of the priority queue in any particular order. If you need ordered traversal, consider using &lt;code&gt;Arrays.sort(pq.toArray())&lt;/code&gt;.</source>
          <target state="translated">이 클래스와 해당 반복자 는 &lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 인터페이스 의 모든 &lt;em&gt;선택적&lt;/em&gt; 메서드를 구현합니다 . 반복자 방법 제공 &lt;a href=&quot;#iterator()&quot;&gt; &lt;code&gt;iterator()&lt;/code&gt; &lt;/a&gt; 및 방법에 제공된 Spliterator &lt;a href=&quot;#spliterator()&quot;&gt; &lt;code&gt;spliterator()&lt;/code&gt; &lt;/a&gt; 되어 &lt;em&gt;있지&lt;/em&gt; 특정 순서로 우선 순위 큐의 요소를 통과 보장. 정렬 된 순회가 필요한 경우 &lt;code&gt;Arrays.sort(pq.toArray())&lt;/code&gt; 사용을 고려하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e244e2d44c033168919981aa9877da35b94bdea6" translate="yes" xml:space="preserve">
          <source>This class and its iterator implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces. The Iterator provided in method &lt;a href=&quot;priorityqueue#iterator--&quot;&gt;&lt;code&gt;iterator()&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; guaranteed to traverse the elements of the priority queue in any particular order. If you need ordered traversal, consider using &lt;code&gt;Arrays.sort(pq.toArray())&lt;/code&gt;.</source>
          <target state="translated">이 클래스와 반복자 는 &lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 인터페이스 의 모든 &lt;em&gt;선택적&lt;/em&gt; 메소드를 구현합니다 . 방법에 제공된 반복자 &lt;a href=&quot;priorityqueue#iterator--&quot;&gt; &lt;code&gt;iterator()&lt;/code&gt; &lt;/a&gt; 되어 &lt;em&gt;있지&lt;/em&gt; 특정 순서로 우선 순위 큐의 요소를 통과 보장. 순서 순회가 필요한 경우 &lt;code&gt;Arrays.sort(pq.toArray())&lt;/code&gt; 사용을 고려하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5e15d54db024790d58205f4d994a57d20890421" translate="yes" xml:space="preserve">
          <source>This class and its iterators implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces. Like most other concurrent collection implementations, this class does not permit the use of &lt;code&gt;null&lt;/code&gt; elements, because &lt;code&gt;null&lt;/code&gt; arguments and return values cannot be reliably distinguished from the absence of elements.</source>
          <target state="translated">이 클래스와 반복자 는 &lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 인터페이스 의 모든 &lt;em&gt;선택적&lt;/em&gt; 메소드를 구현합니다 . 대부분의 다른 동시 콜렉션 구현과 마찬가지로이 클래스는 &lt;code&gt;null&lt;/code&gt; 인수 및 리턴 값을 요소가없는 것과 확실하게 구별 할 수 없으므로 &lt;code&gt;null&lt;/code&gt; 요소 의 사용을 허용하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="23f749faff70650e0649635ea08b67eeec35955b" translate="yes" xml:space="preserve">
          <source>This class and its subclasses are responsible for mapping between raw tag numbers and &lt;code&gt;TIFFTag&lt;/code&gt; objects, which contain additional information about each tag, such as the tag's name, legal data types, and mnemonic names for some or all of its data values.</source>
          <target state="translated">이 클래스와 하위 클래스는 원시 태그 번호와 &lt;code&gt;TIFFTag&lt;/code&gt; 객체 간의 매핑을 담당 합니다. 여기에는 태그의 이름, 법적 데이터 유형 및 일부 또는 모든 데이터 값에 대한 니모닉 이름과 같은 각 태그에 대한 추가 정보가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="bc0660b496da92e14815a4d2a72b5668f5dc39ac" translate="yes" xml:space="preserve">
          <source>This class and its views and iterators implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces.</source>
          <target state="translated">이 클래스와 뷰 및 반복자 는 &lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 인터페이스 의 모든 &lt;em&gt;선택적&lt;/em&gt; 메소드를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="4fd49627c9771a5ac8b18c8f6e51a5ed51ae7566" translate="yes" xml:space="preserve">
          <source>This class and its views and iterators implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces. Like most other concurrent collections, this class does &lt;em&gt;not&lt;/em&gt; permit the use of &lt;code&gt;null&lt;/code&gt; keys or values because some null return values cannot be reliably distinguished from the absence of elements.</source>
          <target state="translated">이 클래스와 뷰 및 반복자 는 &lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 인터페이스 의 모든 &lt;em&gt;선택적&lt;/em&gt; 메소드를 구현합니다 . 대부분의 다른 동시 컬렉션과 마찬가지로,이 클래스는 않습니다 &lt;em&gt;하지&lt;/em&gt; 의 사용을 허용 &lt;code&gt;null&lt;/code&gt; 일부는 null 반환 값이 안정적으로 요소의 부재 구별 할 수 없기 때문에 키 또는 값을.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f3067f4231fdd788be7cff95ebee618625fee2fe" translate="yes" xml:space="preserve">
          <source>This class and the &lt;a href=&quot;observer&quot;&gt;&lt;code&gt;Observer&lt;/code&gt;&lt;/a&gt; interface have been deprecated.</source>
          <target state="translated">이 클래스와 &lt;a href=&quot;observer&quot;&gt; &lt;code&gt;Observer&lt;/code&gt; &lt;/a&gt; 인터페이스는 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b17e8488d0d149d22a922c0b01f0816cc67dcd92" translate="yes" xml:space="preserve">
          <source>This class and the &lt;a href=&quot;observer&quot;&gt;&lt;code&gt;Observer&lt;/code&gt;&lt;/a&gt; interface have been deprecated. The event model supported by &lt;code&gt;Observer&lt;/code&gt; and &lt;code&gt;Observable&lt;/code&gt; is quite limited, the order of notifications delivered by &lt;code&gt;Observable&lt;/code&gt; is unspecified, and state changes are not in one-for-one correspondence with notifications. For a richer event model, consider using the &lt;a href=&quot;../../../java.desktop/java/beans/package-summary&quot;&gt;&lt;code&gt;java.beans&lt;/code&gt;&lt;/a&gt; package. For reliable and ordered messaging among threads, consider using one of the concurrent data structures in the &lt;a href=&quot;concurrent/package-summary&quot;&gt;&lt;code&gt;java.util.concurrent&lt;/code&gt;&lt;/a&gt; package. For reactive streams style programming, see the &lt;a href=&quot;concurrent/flow&quot;&gt;&lt;code&gt;Flow&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">이 클래스와 &lt;a href=&quot;observer&quot;&gt; &lt;code&gt;Observer&lt;/code&gt; &lt;/a&gt; 인터페이스는 더 이상 사용되지 않습니다. 지원하는 이벤트 모델 &lt;code&gt;Observer&lt;/code&gt; 와 &lt;code&gt;Observable&lt;/code&gt; 매우 제한에 의해 전달 통지의 순서 &lt;code&gt;Observable&lt;/code&gt; 지정되지 않은, 그리고 상태 변경 알림과 1 대 1로 대응되지 않습니다. 더 풍부한 이벤트 모델의 경우 &lt;a href=&quot;../../../java.desktop/java/beans/package-summary&quot;&gt; &lt;code&gt;java.beans&lt;/code&gt; &lt;/a&gt; 패키지 사용을 고려하십시오 . 스레드 간의 안정적이고 정렬 된 메시징을 위해 &lt;a href=&quot;concurrent/package-summary&quot;&gt; &lt;code&gt;java.util.concurrent&lt;/code&gt; &lt;/a&gt; 패키지 의 동시 데이터 구조 중 하나를 사용하는 것이 좋습니다. 반응 형 스트림 스타일 프로그래밍은 &lt;a href=&quot;concurrent/flow&quot;&gt; &lt;code&gt;Flow&lt;/code&gt; &lt;/a&gt; API를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="0e421f4acf9e80902e544cac7ff5823ab2877594" translate="yes" xml:space="preserve">
          <source>This class associates, with each thread that uses it, a permit (in the sense of the &lt;a href=&quot;../semaphore&quot;&gt;&lt;code&gt;Semaphore&lt;/code&gt;&lt;/a&gt; class). A call to &lt;code&gt;park&lt;/code&gt; will return immediately if the permit is available, consuming it in the process; otherwise it &lt;em&gt;may&lt;/em&gt; block. A call to &lt;code&gt;unpark&lt;/code&gt; makes the permit available, if it was not already available. (Unlike with Semaphores though, permits do not accumulate. There is at most one.)</source>
          <target state="translated">이 클래스는이를 사용하는 각 스레드와 허가 ( &lt;a href=&quot;../semaphore&quot;&gt; &lt;code&gt;Semaphore&lt;/code&gt; &lt;/a&gt; 클래스 의 의미에서)를 연관시킵니다 . 를 호출 &lt;code&gt;park&lt;/code&gt; 허가 과정에서 그것을 소모를 사용할 수있는 경우 즉시 반환합니다; 그렇지 않으면 차단 &lt;em&gt;될 수&lt;/em&gt; 있습니다. 를 호출 &lt;code&gt;unpark&lt;/code&gt; 이미 사용할 수없는 경우, 허가 (permit)가 사용할 수 있습니다. (세마포어와 달리 허가는 누적되지 않습니다. 최대 1 개가 있습니다.)</target>
        </trans-unit>
        <trans-unit id="d2b1347830db268629c7b07be80cc6cf7078f365" translate="yes" xml:space="preserve">
          <source>This class associates, with each thread that uses it, a permit (in the sense of the &lt;a href=&quot;../semaphore&quot;&gt;&lt;code&gt;Semaphore&lt;/code&gt;&lt;/a&gt; class). A call to &lt;code&gt;park&lt;/code&gt; will return immediately if the permit is available, consuming it in the process; otherwise it &lt;em&gt;may&lt;/em&gt; block. A call to &lt;code&gt;unpark&lt;/code&gt; makes the permit available, if it was not already available. (Unlike with Semaphores though, permits do not accumulate. There is at most one.) Reliable usage requires the use of volatile (or atomic) variables to control when to park or unpark. Orderings of calls to these methods are maintained with respect to volatile variable accesses, but not necessarily non-volatile variable accesses.</source>
          <target state="translated">이 클래스는이를 사용하는 각 스레드와 허가 ( &lt;a href=&quot;../semaphore&quot;&gt; &lt;code&gt;Semaphore&lt;/code&gt; &lt;/a&gt; 클래스 의 의미에서 )를 연결합니다. 허가증을 사용할 수있는 경우 &lt;code&gt;park&lt;/code&gt; 요청이 즉시 반환되어 그 과정에서 소비됩니다. 그렇지 않으면 차단 &lt;em&gt;될 수&lt;/em&gt; 있습니다. 아직 사용 가능하지 않은 경우 &lt;code&gt;unpark&lt;/code&gt; 를 호출 하면 허가증을 사용할 수 있습니다. (하지만 세마포어와 달리 허가는 누적되지 않습니다. 최대 하나만 있습니다.) 안정적인 사용을 위해서는 휘발성 (또는 원자 적) 변수를 사용하여 주차 또는 주차 해제시기를 제어해야합니다. 이러한 메서드에 대한 호출 순서는 휘발성 변수 액세스와 관련하여 유지되지만 반드시 비 휘발성 변수 액세스는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="dd0f9876e6138197a3b7c504077f0adca6ca21e4" translate="yes" xml:space="preserve">
          <source>This class brings more flexibility to the notion of Management Interface in the use of Standard MBeans. Straightforward use of the patterns for Standard MBeans described in the JMX Specification means that there is a fixed relationship between the implementation class of an MBean and its management interface (i.e., if the implementation class is Thing, the management interface must be ThingMBean). This class makes it possible to keep the convenience of specifying the management interface with a Java interface, without requiring that there be any naming relationship between the implementation and interface classes.</source>
          <target state="translated">이 클래스는 표준 MBean 사용시 관리 인터페이스 개념에 더 많은 유연성을 제공합니다. JMX 스펙에 기술 된 표준 MBean에 대한 패턴의 간단한 사용은 MBean의 구현 클래스와 관리 인터페이스 사이에 고정 된 관계가 있음을 의미합니다 (즉, 구현 클래스가 Thing 인 경우 관리 인터페이스는 ThingMBean이어야 함). 이 클래스를 사용하면 구현과 인터페이스 클래스간에 이름 지정 관계가 없어도 Java 인터페이스로 관리 인터페이스를 편리하게 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d7f5e7e6debadb6bc7d15130372b1009e07cd59e" translate="yes" xml:space="preserve">
          <source>This class can be instantiated by a string representation of the RDN defined in RFC 2253 as shown in the following code example:</source>
          <target state="translated">이 클래스는 다음 코드 예제와 같이 RFC 2253에 정의 된 RDN의 문자열 표현으로 인스턴스화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb6569517a840736e11bdd6583e22d2ffb9f5d66" translate="yes" xml:space="preserve">
          <source>This class can be instantiated by using a string representation of the distinguished name, or by using the ASN.1 DER encoded byte representation of the distinguished name. The current specification for the string representation of a distinguished name is defined in &lt;a href=&quot;http://tools.ietf.org/html/rfc2253&quot;&gt;RFC 2253: Lightweight Directory Access Protocol (v3): UTF-8 String Representation of Distinguished Names&lt;/a&gt;. This class, however, accepts string formats from both RFC 2253 and &lt;a href=&quot;http://tools.ietf.org/html/rfc1779&quot;&gt;RFC 1779: A String Representation of Distinguished Names&lt;/a&gt;, and also recognizes attribute type keywords whose OIDs (Object Identifiers) are defined in &lt;a href=&quot;http://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 고유 이름의 문자열 표현을 사용하거나 고유 이름의 ASN.1 DER 인코딩 된 바이트 표현을 사용하여 인스턴스화 할 수 있습니다. 고유 이름의 문자열 표현에 대한 현재 사양은 &lt;a href=&quot;http://tools.ietf.org/html/rfc2253&quot;&gt;RFC 2253 : Lightweight Directory Access Protocol (v3) : UTF-8 String Representation of Distinguished Names에 정의되어&lt;/a&gt; 있습니다. 그러나이 클래스는 RFC 2253 및 &lt;a href=&quot;http://tools.ietf.org/html/rfc1779&quot;&gt;RFC 1779 : A String Representation of Distinguished Names&lt;/a&gt; 에서 문자열 형식을 허용 하고 &lt;a href=&quot;http://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280 : Internet X.509 Public Key Infrastructure Certificate 및 CRL 프로필&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="408aa59b50ee1cd17fc707c3d6d1ca84920d2eac" translate="yes" xml:space="preserve">
          <source>This class can be instantiated by using a string representation of the distinguished name, or by using the ASN.1 DER encoded byte representation of the distinguished name. The current specification for the string representation of a distinguished name is defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253: Lightweight Directory Access Protocol (v3): UTF-8 String Representation of Distinguished Names&lt;/a&gt;. This class, however, accepts string formats from both RFC 2253 and &lt;a href=&quot;http://www.ietf.org/rfc/rfc1779.txt&quot;&gt;RFC 1779: A String Representation of Distinguished Names&lt;/a&gt;, and also recognizes attribute type keywords whose OIDs (Object Identifiers) are defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt;RFC 3280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 식별 이름의 문자열 표현을 사용하거나 식별 이름의 ASN.1 DER 인코딩 된 바이트 표현을 사용하여 인스턴스화 할 수 있습니다. 식별 이름의 문자열 표시에 대한 현재 스펙은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253 : 경량 디렉토리 액세스 프로토콜 (v3) : 구별 이름의 UTF-8&lt;/a&gt; 문자열 표시에 정의되어 있습니다. 그러나이 클래스는 RFC 2253 및 &lt;a href=&quot;http://www.ietf.org/rfc/rfc1779.txt&quot;&gt;RFC 1779 : 식별 이름의 문자열 표현&lt;/a&gt; 에서 문자열 형식을 승인 하며 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt;RFC 3280 : Internet X.509 공개 키 인프라 인증서 및 CRL 프로필&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="22cda7839ea871c5574403a26f0611bfb6183d06" translate="yes" xml:space="preserve">
          <source>This class can be serialized and stores the string zone ID in the external form. The &lt;code&gt;ZoneOffset&lt;/code&gt; subclass uses a dedicated format that only stores the offset from UTC/Greenwich.</source>
          <target state="translated">이 클래스는 직렬화 할 수 있으며 외부 영역에 문자열 영역 ID를 저장합니다. &lt;code&gt;ZoneOffset&lt;/code&gt; 서브 클래스 용도에만 저장이 UTC / 그리니치에서 오프셋 전용 형식입니다.</target>
        </trans-unit>
        <trans-unit id="08caf67472a9c4270c71d609d696e3667269ecae" translate="yes" xml:space="preserve">
          <source>This class can be used to initialize a &lt;code&gt;Cipher&lt;/code&gt; object that implements the</source>
          <target state="translated">이 클래스는 다음 을 구현 하는 &lt;code&gt;Cipher&lt;/code&gt; 객체 를 초기화하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d73f2250aa0751dc8f0ec28970e9828de1a92776" translate="yes" xml:space="preserve">
          <source>This class can contain basic error or warning information from either the XML parser or the application: a parser writer or application writer can subclass it to provide additional functionality. SAX handlers may throw this exception or any exception subclassed from it.</source>
          <target state="translated">이 클래스는 XML 파서 또는 응용 프로그램의 기본 오류 또는 경고 정보를 포함 할 수 있습니다. 파서 작성자 또는 응용 프로그램 작성자는 추가 기능을 제공하기 위해이를 하위 클래스로 지정할 수 있습니다. SAX 핸들러는이 예외 또는 그로부터 서브 클래 싱 된 예외를 throw 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a7be8980f88523567e69634ed88eb43eb7a20a7" translate="yes" xml:space="preserve">
          <source>This class cannot be instantiated. It has only static methods.</source>
          <target state="translated">이 클래스는 인스턴스화 할 수 없습니다. 정적 메소드 만 있습니다.</target>
        </trans-unit>
        <trans-unit id="12089e414046ac42c52adc86543479d4d6221335" translate="yes" xml:space="preserve">
          <source>This class cannot be instantiated. Only a single instance of this class can exist, and it may be obtained by using the &lt;a href=&quot;#getSplashScreen()&quot;&gt;&lt;code&gt;getSplashScreen()&lt;/code&gt;&lt;/a&gt; static method. In case the splash screen has not been created at application startup via the command line or manifest file option, the &lt;code&gt;getSplashScreen&lt;/code&gt; method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 인스턴스화 할 수 없습니다. 이 클래스의 단일 인스턴스 만 존재할 수 있으며 &lt;a href=&quot;#getSplashScreen()&quot;&gt; &lt;code&gt;getSplashScreen()&lt;/code&gt; &lt;/a&gt; 정적 메서드를 사용하여 얻을 수 있습니다 . 응용 프로그램 시작시 명령 줄 또는 매니페스트 파일 옵션을 통해 스플래시 화면이 생성되지 않은 경우 &lt;code&gt;getSplashScreen&lt;/code&gt; 메서드는 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f1f3489be448c81f6059af9b604eab721ae2b783" translate="yes" xml:space="preserve">
          <source>This class centralizes all security properties and common security methods.</source>
          <target state="translated">이 클래스는 모든 보안 속성과 일반적인 보안 방법을 중앙 집중화합니다.</target>
        </trans-unit>
        <trans-unit id="dc8b950092cbcc01690c61de27fb3ae19d4e974f" translate="yes" xml:space="preserve">
          <source>This class centralizes all security properties and common security methods. One of its primary uses is to manage providers.</source>
          <target state="translated">이 클래스는 모든 보안 속성과 일반적인 보안 방법을 중앙 집중화합니다. 주요 용도 중 하나는 공급자를 관리하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="deddf5efb895edf63805e20b76480c0f92008961" translate="yes" xml:space="preserve">
          <source>This class collects together key details of a span of text.</source>
          <target state="translated">이 클래스는 텍스트 범위의 주요 세부 정보를 함께 수집합니다.</target>
        </trans-unit>
        <trans-unit id="fdfd65ec653e2e8db4899c8fcdeda602bdc1ec0d" translate="yes" xml:space="preserve">
          <source>This class collects together key details of a span of text. It is used by implementors of the class &lt;code&gt;AccessibleExtendedText&lt;/code&gt; in order to return the requested triplet of a &lt;code&gt;String&lt;/code&gt;, and the start and end indicies/offsets into a larger body of text that the &lt;code&gt;String&lt;/code&gt; comes from.</source>
          <target state="translated">이 클래스는 텍스트 범위의 주요 세부 정보를 함께 수집합니다. 요청 된 &lt;code&gt;String&lt;/code&gt; 삼중 항을 반환하기 위해 &lt;code&gt;AccessibleExtendedText&lt;/code&gt; 클래스의 구현 자에 의해 사용되며 , 시작 및 끝 표시 / 오프셋은 &lt;code&gt;String&lt;/code&gt; 이 나오는 더 큰 텍스트 본문으로 반환 됩니다.</target>
        </trans-unit>
        <trans-unit id="7487d5831eec4ecd548c4a53b4abcd9c5cd6d349" translate="yes" xml:space="preserve">
          <source>This class collects together the span of text that share the same contiguous set of attributes, along with that set of attributes.</source>
          <target state="translated">이 클래스는 해당 속성 집합과 함께 동일한 연속 속성 집합을 공유하는 텍스트 범위를 함께 수집합니다.</target>
        </trans-unit>
        <trans-unit id="b6e77313dc433320dad4572dc444482401c73a70" translate="yes" xml:space="preserve">
          <source>This class collects together the span of text that share the same contiguous set of attributes, along with that set of attributes. It is used by implementors of the class &lt;code&gt;AccessibleContext&lt;/code&gt; in order to generate &lt;code&gt;ACCESSIBLE_TEXT_ATTRIBUTES_CHANGED&lt;/code&gt; events.</source>
          <target state="translated">이 클래스는 해당 속성 집합과 함께 동일한 연속 속성 집합을 공유하는 텍스트 범위를 함께 수집합니다. &lt;code&gt;ACCESSIBLE_TEXT_ATTRIBUTES_CHANGED&lt;/code&gt; 이벤트 를 생성하기 위해 &lt;code&gt;AccessibleContext&lt;/code&gt; 클래스의 구현자가 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="a6cb96a6673c912eb785c3687c59092c3790b519" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods for obtaining encoders and decoders for the Base64 encoding scheme.</source>
          <target state="translated">이 클래스는 Base64 인코딩 체계의 인코더 및 디코더를 얻기위한 정적 메소드로만 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="c26324f4ebfc25aeaffc4122553f9b3b6f2a74b0" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods for obtaining encoders and decoders for the Base64 encoding scheme. The implementation of this class supports the following types of Base64 as specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc4648.txt&quot;&gt;RFC 4648&lt;/a&gt; and &lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 Base64 인코딩 체계의 인코더 및 디코더를 얻기위한 정적 메소드로만 구성됩니다. 이 클래스의 구현은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc4648.txt&quot;&gt;RFC 4648&lt;/a&gt; 및 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045에&lt;/a&gt; 지정된대로 다음 유형의 Base64를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="70f8b85b793509ea8934dc209fad03b9b5008a13" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods that help adapt method handles to other JVM types, such as interfaces.</source>
          <target state="translated">이 클래스는 인터페이스와 같은 다른 JVM 유형에 대한 메소드 핸들을 조정하는 데 도움이되는 정적 메소드로만 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="43d1381f06f84f756c39b887a569b407d32db808" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods that operate on files, directories, or other types of files.</source>
          <target state="translated">이 클래스는 파일, 디렉토리 또는 다른 유형의 파일에서 작동하는 정적 메소드로만 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="f1c00fd4abcf08932e8295ad0ab5d4edf45278f8" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods that operate on or return collections.</source>
          <target state="translated">이 클래스는 컬렉션에서 작동하거나 컬렉션을 반환하는 정적 메서드로만 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="2c343c6383fb79e44f84addffdad6704e48b70c6" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods that operate on or return collections. It contains polymorphic algorithms that operate on collections, &quot;wrappers&quot;, which return a new collection backed by a specified collection, and a few other odds and ends.</source>
          <target state="translated">이 클래스는 컬렉션에서 작동하거나 컬렉션을 반환하는 정적 메서드로만 구성됩니다. 여기에는 컬렉션에서 작동하는 다형성 알고리즘, &quot;래퍼&quot;가 포함되어 있는데,이 컬렉션은 지정된 컬렉션이 뒷받침하는 새 컬렉션을 반환하며 다른 확률과 끝도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8606d91ec86719639d5cef7ea45e744cdd1a3c30" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods that operate on or return method handles.</source>
          <target state="translated">이 클래스는 독점적으로 작동하거나 메소드 핸들을 리턴하는 정적 메소드로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="66cb9dc1c07813623f3d59a48ce5a193b59e02f4" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods that operate on or return method handles. They fall into several categories:</source>
          <target state="translated">이 클래스는 독점적으로 작동하거나 메소드 핸들을 리턴하는 정적 메소드로 구성됩니다. 그들은 여러 범주로 나뉩니다.</target>
        </trans-unit>
        <trans-unit id="9387ec154802c2f1f1f0551417b10625786c8612" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods that operate on sets of &lt;a href=&quot;posixfilepermission&quot;&gt;&lt;code&gt;PosixFilePermission&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">이 클래스는 독점적으로 &lt;a href=&quot;posixfilepermission&quot;&gt; &lt;code&gt;PosixFilePermission&lt;/code&gt; &lt;/a&gt; 객체 세트에서 작동하는 정적 메소드로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="24b9a888f811ee23b32a4d03f075039b51070f5b" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods that return a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; by converting a path string or &lt;a href=&quot;../../net/uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 반환 정적 메소드의 독점적 구성 &lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 경로 문자열이나 변환하여 &lt;a href=&quot;../../net/uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ff8b8a511b502ce96269b9f3f05b0c1dd8af8733" translate="yes" xml:space="preserve">
          <source>This class consists of &lt;code&gt;static&lt;/code&gt; utility methods for operating on objects, or checking certain conditions before operation.</source>
          <target state="translated">이 클래스는 객체에 대해 작동하거나 작동 전에 특정 조건을 확인하기위한 &lt;code&gt;static&lt;/code&gt; 유틸리티 메서드 로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="5ffbb60dcafc4a94243c3f96b268ddb083efcbcb" translate="yes" xml:space="preserve">
          <source>This class consists of &lt;code&gt;static&lt;/code&gt; utility methods for operating on objects, or checking certain conditions before operation. These utilities include &lt;code&gt;null&lt;/code&gt;-safe or &lt;code&gt;null&lt;/code&gt;-tolerant methods for computing the hash code of an object, returning a string for an object, comparing two objects, and checking if indexes or sub-range values are out of bounds.</source>
          <target state="translated">이 클래스는 객체에 대해 작동하거나 작동 전에 특정 조건을 확인하기위한 &lt;code&gt;static&lt;/code&gt; 유틸리티 메서드 로 구성됩니다 . 이러한 유틸리티에는 개체의 해시 코드를 계산하고, 개체에 대한 문자열을 반환하고, 두 개체를 비교하고, 인덱스 또는 하위 범위 값이 범위를 벗어 났는지 확인하기위한 &lt;code&gt;null&lt;/code&gt; 안전 또는 &lt;code&gt;null&lt;/code&gt; 허용 메서드가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f16fba3ccf8da91eb7017800adf15ecbe4516dc8" translate="yes" xml:space="preserve">
          <source>This class consists of &lt;code&gt;static&lt;/code&gt; utility methods for operating on objects.</source>
          <target state="translated">이 클래스는 객체를 조작하기위한 &lt;code&gt;static&lt;/code&gt; 유틸리티 메소드 로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="e0fae45e0057b0736f390509c1be56b00c02fcc0" translate="yes" xml:space="preserve">
          <source>This class consists of &lt;code&gt;static&lt;/code&gt; utility methods for operating on objects. These utilities include &lt;code&gt;null&lt;/code&gt;-safe or &lt;code&gt;null&lt;/code&gt;-tolerant methods for computing the hash code of an object, returning a string for an object, and comparing two objects.</source>
          <target state="translated">이 클래스는 객체를 조작하기위한 &lt;code&gt;static&lt;/code&gt; 유틸리티 메소드 로 구성됩니다 . 이러한 유틸리티에는 객체의 해시 코드를 계산하고 객체의 문자열을 반환하며 두 객체를 비교하는 &lt;code&gt;null&lt;/code&gt; 안전 또는 &lt;code&gt;null&lt;/code&gt; 허용 방법 이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="4ecb8a6e31e66f95dd9b703a1b211405da9780f9" translate="yes" xml:space="preserve">
          <source>This class contains a standard set of adjusters, available as static methods. These include:</source>
          <target state="translated">이 클래스에는 정적 메소드로 사용 가능한 표준 조정자 세트가 포함되어 있습니다. 여기에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c7cf71e09253395b2196af54fee31b21544178fe" translate="yes" xml:space="preserve">
          <source>This class contains an export/import facility, allowing preferences to be &quot;exported&quot; to an XML document, and XML documents representing preferences to be &quot;imported&quot; back into the system. This facility may be used to back up all or part of a preference tree, and subsequently restore from the backup.</source>
          <target state="translated">이 클래스에는 내보내기 / 가져 오기 기능이 포함되어있어 환경 설정을 XML 문서로 &quot;내보낼 수&quot;있으며 환경 설정을 나타내는 XML 문서를 시스템으로 &quot;가져올&quot;수 있습니다. 이 기능을 사용하여 기본 설정 트리의 전체 또는 일부를 백업 한 다음 백업에서 복원 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35b8d28449d67f57c87f1d63033e6780d1b10b6f" translate="yes" xml:space="preserve">
          <source>This class contains constant values representing the type of action(s) to be performed by a Drag and Drop operation.</source>
          <target state="translated">이 클래스에는 끌어서 놓기 작업에서 수행 할 작업 유형을 나타내는 상수 값이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="769baf2f62fd3bfa627c82579b4b3f0fa768d95c" translate="yes" xml:space="preserve">
          <source>This class contains methods for creating context objects and objects referred to by location information in the naming or directory service.</source>
          <target state="translated">이 클래스에는 이름 지정 또는 디렉토리 서비스에서 위치 정보로 참조되는 컨텍스트 오브젝트 및 오브젝트를 작성하는 메소드가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b352bb3ae62015ae3e6fccafbc2587e07fa56bad" translate="yes" xml:space="preserve">
          <source>This class contains methods for supporting &lt;code&gt;DirContext&lt;/code&gt; implementations.</source>
          <target state="translated">이 클래스에는 &lt;code&gt;DirContext&lt;/code&gt; 구현 을 지원하기위한 메소드가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fe4f7ba1134c89ed6e0c7c927be74c4b25374e39" translate="yes" xml:space="preserve">
          <source>This class contains static methods for creating an XML reader from an explicit class name, or based on runtime defaults:</source>
          <target state="translated">이 클래스에는 명시 적 클래스 이름에서 또는 런타임 기본값을 기반으로 XML 판독기를 만들기위한 정적 메서드가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="8be427fd0c5a72ac1ce15c650309bd1733d1fadd" translate="yes" xml:space="preserve">
          <source>This class contains various methods for manipulating arrays (such as sorting and searching).</source>
          <target state="translated">이 클래스에는 배열 조작 (예 : 정렬 및 검색)을위한 다양한 메소드가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb2faeb8efc1bbc7ccfbd6fa84fa1afb79a3e332" translate="yes" xml:space="preserve">
          <source>This class contains various methods for manipulating arrays (such as sorting and searching). This class also contains a static factory that allows arrays to be viewed as lists.</source>
          <target state="translated">이 클래스에는 배열 조작 (예 : 정렬 및 검색)을위한 다양한 메소드가 포함되어 있습니다. 이 클래스에는 배열을 목록으로 볼 수있는 정적 팩토리도 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfbf23aea87db1853a8306f9a849e95c0517d07e" translate="yes" xml:space="preserve">
          <source>This class creates SSL sockets using the default &lt;code&gt;SSLSocketFactory&lt;/code&gt; (see &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslsocketfactory#getDefault()&quot;&gt;&lt;code&gt;SSLSocketFactory.getDefault()&lt;/code&gt;&lt;/a&gt;) or the default &lt;code&gt;SSLServerSocketFactory&lt;/code&gt; (see &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslserversocketfactory#getDefault()&quot;&gt;&lt;code&gt;SSLServerSocketFactory.getDefault()&lt;/code&gt;&lt;/a&gt;) unless the constructor taking an &lt;code&gt;SSLContext&lt;/code&gt; is used in which case the SSL sockets are created using the &lt;code&gt;SSLSocketFactory&lt;/code&gt; returned by &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslcontext#getSocketFactory()&quot;&gt;&lt;code&gt;SSLContext.getSocketFactory()&lt;/code&gt;&lt;/a&gt; or the &lt;code&gt;SSLServerSocketFactory&lt;/code&gt; returned by &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslcontext#getServerSocketFactory()&quot;&gt;&lt;code&gt;SSLContext.getServerSocketFactory()&lt;/code&gt;&lt;/a&gt;. When an &lt;code&gt;SSLContext&lt;/code&gt; is not supplied all the instances of this class share the same keystore, and the same truststore (when client authentication is required by the server). This behavior can be modified by supplying an already initialized &lt;code&gt;SSLContext&lt;/code&gt; instance.</source>
          <target state="translated">이 클래스는 기본 사용하여 SSL 소켓 생성 &lt;code&gt;SSLSocketFactory&lt;/code&gt; (참조 &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslsocketfactory#getDefault()&quot;&gt; &lt;code&gt;SSLSocketFactory.getDefault()&lt;/code&gt; &lt;/a&gt; 또는 기본) &lt;code&gt;SSLServerSocketFactory&lt;/code&gt; 를 (참조 &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslserversocketfactory#getDefault()&quot;&gt; &lt;code&gt;SSLServerSocketFactory.getDefault()&lt;/code&gt; &lt;/a&gt; )를 복용 생성자를 제외 &lt;code&gt;SSLContext&lt;/code&gt; 는 SSL 소켓을 사용하여 생성되는 경우에 사용됩니다 &lt;code&gt;SSLSocketFactory&lt;/code&gt; 에 의해 반환 &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslcontext#getSocketFactory()&quot;&gt; &lt;code&gt;SSLContext.getSocketFactory()&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;SSLServerSocketFactory&lt;/code&gt; 가 에 의해 반환 &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslcontext#getServerSocketFactory()&quot;&gt; &lt;code&gt;SSLContext.getServerSocketFactory()&lt;/code&gt; &lt;/a&gt; . 때 &lt;code&gt;SSLContext&lt;/code&gt; 이 클래스의 모든 인스턴스가 동일한 키 저장소 및 동일한 신뢰 저장소를 공유하는 것은 제공되지 않습니다 (서버에서 클라이언트 인증이 필요한 경우). 이 동작은 이미 초기화 된 &lt;code&gt;SSLContext&lt;/code&gt; 인스턴스를 제공하여 수정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="23b061a7ab61876d307971d07e0141dc3d760906" translate="yes" xml:space="preserve">
          <source>This class creates SSL sockets using the default &lt;code&gt;SSLSocketFactory&lt;/code&gt; (see &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslsocketfactory#getDefault()&quot;&gt;&lt;code&gt;SSLSocketFactory.getDefault()&lt;/code&gt;&lt;/a&gt;). All instances of this class are functionally equivalent. In particular, they all share the same truststore, and the same keystore when client authentication is required by the server. This behavior can be modified in subclasses by overriding the &lt;a href=&quot;#createSocket(java.lang.String,int)&quot;&gt;&lt;code&gt;createSocket(String,int)&lt;/code&gt;&lt;/a&gt; method; in that case, &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#hashCode()&quot;&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/a&gt; may also need to be overridden.</source>
          <target state="translated">이 클래스는 기본 &lt;code&gt;SSLSocketFactory&lt;/code&gt; 를 사용하여 SSL 소켓을 생성합니다 ( &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslsocketfactory#getDefault()&quot;&gt; &lt;code&gt;SSLSocketFactory.getDefault()&lt;/code&gt; &lt;/a&gt; 참조 ). 이 클래스의 모든 인스턴스는 기능적으로 동일합니다. 특히 서버에서 클라이언트 인증이 필요한 경우 모두 동일한 신뢰 저장소를 공유하고 동일한 키 저장소를 공유합니다. 이 동작은 &lt;a href=&quot;#createSocket(java.lang.String,int)&quot;&gt; &lt;code&gt;createSocket(String,int)&lt;/code&gt; &lt;/a&gt; 메서드 를 재정 의하여 하위 클래스에서 수정할 수 있습니다 . 이 경우 &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#hashCode()&quot;&gt; &lt;code&gt;hashCode&lt;/code&gt; &lt;/a&gt; 도 재정의해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1851a6244ba06613253f2edc8bef2e30b6532971" translate="yes" xml:space="preserve">
          <source>This class creates a labeled button.</source>
          <target state="translated">이 클래스는 레이블이 지정된 버튼을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2b9a69b7131d52f583147a61b84ba24b9e3cc51a" translate="yes" xml:space="preserve">
          <source>This class creates a labeled button. The application can cause some action to happen when the button is pushed. This image depicts three views of a &quot;&lt;code&gt;Quit&lt;/code&gt;&quot; button as it appears under the Solaris operating system:</source>
          <target state="translated">이 클래스는 레이블이 지정된 버튼을 만듭니다. 응용 프로그램은 단추를 눌렀을 때 일부 동작을 발생시킬 수 있습니다. 이 이미지는 Solaris 운영 체제에 나타나는 &quot; &lt;code&gt;Quit&lt;/code&gt; &quot;버튼 의 세 가지보기를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="c62572ec8afcb6754bbc9f0bb11387de8c016c9a" translate="yes" xml:space="preserve">
          <source>This class creates server sockets.</source>
          <target state="translated">이 클래스는 서버 소켓을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="c207b61ace7e1da2567b107efe9d43a912448216" translate="yes" xml:space="preserve">
          <source>This class creates server sockets. It may be subclassed by other factories, which create particular types of server sockets. This provides a general framework for the addition of public socket-level functionality. It is the server side analogue of a socket factory, and similarly provides a way to capture a variety of policies related to the sockets being constructed.</source>
          <target state="translated">이 클래스는 서버 소켓을 만듭니다. 특정 유형의 서버 소켓을 생성하는 다른 팩토리에 의해 서브 클래 싱 될 수 있습니다. 이것은 공개 소켓 레벨 기능을 추가하기위한 일반적인 프레임 워크를 제공합니다. 소켓 팩토리의 서버 측 아날로그이며, 유사하게 구성되는 소켓과 관련된 다양한 정책을 캡처하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="74dca92c6d0671abb7c75a39cc208057d8610072" translate="yes" xml:space="preserve">
          <source>This class creates sockets.</source>
          <target state="translated">이 클래스는 소켓을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8494a4be035b231016becf7c5a349116ea210a23" translate="yes" xml:space="preserve">
          <source>This class creates sockets. It may be subclassed by other factories, which create particular subclasses of sockets and thus provide a general framework for the addition of public socket-level functionality.</source>
          <target state="translated">이 클래스는 소켓을 만듭니다. 다른 팩토리에 의해 서브 클래 싱 될 수 있으며, 이는 특정 소켓의 서브 클래스를 생성하므로 공용 소켓 레벨 기능을 추가하기위한 일반적인 프레임 워크를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9d899083941b6c92f5ff514332f6315e8fd0168b" translate="yes" xml:space="preserve">
          <source>This class defines a &lt;code&gt;dismiss&lt;/code&gt; method that removes the editors &lt;code&gt;ChangeListener&lt;/code&gt; from the &lt;code&gt;JSpinner&lt;/code&gt; that it's part of. The &lt;code&gt;setEditor&lt;/code&gt; method knows about &lt;code&gt;DefaultEditor.dismiss&lt;/code&gt;, so if the developer replaces an editor that's derived from &lt;code&gt;JSpinner.DefaultEditor&lt;/code&gt; its &lt;code&gt;ChangeListener&lt;/code&gt; connection back to the &lt;code&gt;JSpinner&lt;/code&gt; will be removed. However after that, it's up to the developer to manage their editor listeners. Similarly, if a subclass overrides &lt;code&gt;createEditor&lt;/code&gt;, it's up to the subclasser to deal with their editor subsequently being replaced (with &lt;code&gt;setEditor&lt;/code&gt;). We expect that in most cases, and in editor installed with &lt;code&gt;setEditor&lt;/code&gt; or created by a &lt;code&gt;createEditor&lt;/code&gt; override, will not be replaced anyway.</source>
          <target state="translated">이 클래스는 자신이 속한 &lt;code&gt;JSpinner&lt;/code&gt; 에서 편집기 &lt;code&gt;ChangeListener&lt;/code&gt; 를 제거 하는 &lt;code&gt;dismiss&lt;/code&gt; 메서드를 정의합니다 . &lt;code&gt;setEditor&lt;/code&gt; 방법에 대해 알고 &lt;code&gt;DefaultEditor.dismiss&lt;/code&gt; 를 개발자가에서 파생 된 것 편집기 대체 그렇다면, &lt;code&gt;JSpinner.DefaultEditor&lt;/code&gt; 의 &lt;code&gt;ChangeListener&lt;/code&gt; 받는 연결 다시 &lt;code&gt;JSpinner&lt;/code&gt; 제거됩니다. 그러나 그 후에 편집기 리스너를 관리하는 것은 개발자의 몫입니다. 마찬가지로 하위 클래스가 &lt;code&gt;createEditor&lt;/code&gt; 를 재정의하는 경우 나중에 교체되는 편집기 ( &lt;code&gt;setEditor&lt;/code&gt; 사용) 를 처리하는 것은 하위 클래스의 몫입니다.). 우리는 대부분의 경우 &lt;code&gt;setEditor&lt;/code&gt; 로 설치 되거나 &lt;code&gt;createEditor&lt;/code&gt; 재정의로 생성 된 편집기에서 대체되지 않을 것으로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="d59cd6bebe37e97edaa478931832139fb47d2af0" translate="yes" xml:space="preserve">
          <source>This class defines a lookup table object.</source>
          <target state="translated">이 클래스는 조회 테이블 객체를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="84a809652df45554c569e81b6f794e67ea380608" translate="yes" xml:space="preserve">
          <source>This class defines a lookup table object. The output of a lookup operation using an object of this class is interpreted as an unsigned byte quantity. The lookup table contains byte data arrays for one or more bands (or components) of an image, and it contains an offset which will be subtracted from the input values before indexing the arrays. This allows an array smaller than the native data size to be provided for a constrained input. If there is only one array in the lookup table, it will be applied to all bands.</source>
          <target state="translated">이 클래스는 조회 테이블 객체를 정의합니다. 이 클래스의 객체를 사용하는 조회 작업의 출력은 부호없는 바이트 수량으로 해석됩니다. 조회 테이블에는 이미지의 하나 이상의 밴드 (또는 구성 요소)에 대한 바이트 데이터 배열이 포함되며 배열을 인덱싱하기 전에 입력 값에서 차감되는 오프셋이 포함됩니다. 따라서 제한된 입력에 대해 네이티브 데이터 크기보다 작은 배열을 제공 할 수 있습니다. 룩업 테이블에 배열이 하나만있는 경우 모든 밴드에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="a80fe976678b3089254a8b82cff4d66d524d6ee7" translate="yes" xml:space="preserve">
          <source>This class defines a lookup table object. The output of a lookup operation using an object of this class is interpreted as an unsigned short quantity. The lookup table contains short data arrays for one or more bands (or components) of an image, and it contains an offset which will be subtracted from the input values before indexing the arrays. This allows an array smaller than the native data size to be provided for a constrained input. If there is only one array in the lookup table, it will be applied to all bands.</source>
          <target state="translated">이 클래스는 조회 테이블 객체를 정의합니다. 이 클래스의 객체를 사용하는 조회 작업의 출력은 부호없는 단 수량으로 해석됩니다. 조회 테이블에는 이미지의 하나 이상의 밴드 (또는 구성 요소)에 대한 짧은 데이터 배열이 포함되며 배열을 인덱싱하기 전에 입력 값에서 차감되는 오프셋이 포함됩니다. 따라서 제한된 입력에 대해 네이티브 데이터 크기보다 작은 배열을 제공 할 수 있습니다. 룩업 테이블에 배열이 하나만있는 경우 모든 밴드에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="2ebbdf47955ad5a8888da2dc79b85c7314b827db" translate="yes" xml:space="preserve">
          <source>This class defines a nested &lt;a href=&quot;abstractqueuedsynchronizer.conditionobject&quot;&gt;&lt;code&gt;AbstractQueuedSynchronizer.ConditionObject&lt;/code&gt;&lt;/a&gt; class that can be used as a &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; implementation by subclasses supporting exclusive mode for which method &lt;a href=&quot;#isHeldExclusively()&quot;&gt;&lt;code&gt;isHeldExclusively()&lt;/code&gt;&lt;/a&gt; reports whether synchronization is exclusively held with respect to the current thread, method &lt;a href=&quot;#release(int)&quot;&gt;&lt;code&gt;release(int)&lt;/code&gt;&lt;/a&gt; invoked with the current &lt;a href=&quot;#getState()&quot;&gt;&lt;code&gt;getState()&lt;/code&gt;&lt;/a&gt; value fully releases this object, and &lt;a href=&quot;#acquire(int)&quot;&gt;&lt;code&gt;acquire(int)&lt;/code&gt;&lt;/a&gt;, given this saved state value, eventually restores this object to its previous acquired state. No &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; method otherwise creates such a condition, so if this constraint cannot be met, do not use it. The behavior of &lt;a href=&quot;abstractqueuedsynchronizer.conditionobject&quot;&gt;&lt;code&gt;AbstractQueuedSynchronizer.ConditionObject&lt;/code&gt;&lt;/a&gt; depends of course on the semantics of its synchronizer implementation.</source>
          <target state="translated">이 클래스는 중첩 정의 &lt;a href=&quot;abstractqueuedsynchronizer.conditionobject&quot;&gt; &lt;code&gt;AbstractQueuedSynchronizer.ConditionObject&lt;/code&gt; &lt;/a&gt; A와 사용될 수있는 클래스 &lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt; 하는 방법 전용 모드를 지원하는 서브 클래스 구현 &lt;a href=&quot;#isHeldExclusively()&quot;&gt; &lt;code&gt;isHeldExclusively()&lt;/code&gt; &lt;/a&gt; 동기화 단독 현재 스레드 방법에 대하여 유지되는지, &lt;a href=&quot;#release(int)&quot;&gt; &lt;code&gt;release(int)&lt;/code&gt; &lt;/a&gt; 현재 호출을 &lt;a href=&quot;#getState()&quot;&gt; &lt;code&gt;getState()&lt;/code&gt; &lt;/a&gt; 값은이 객체를 완전히 해제하고 ,이 저장된 상태 값이 주어지면 &lt;a href=&quot;#acquire(int)&quot;&gt; &lt;code&gt;acquire(int)&lt;/code&gt; &lt;/a&gt; 는 결국이 객체를 이전에 획득 한 상태로 복원합니다. 그렇지 않으면 &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; 메서드가 없습니다. 그렇지 않으면 이러한 조건이 생성되므로이 제약 조건을 충족 할 수없는 경우에는 사용하지 마십시오. 행동&lt;a href=&quot;abstractqueuedsynchronizer.conditionobject&quot;&gt; &lt;code&gt;AbstractQueuedSynchronizer.ConditionObject&lt;/code&gt; &lt;/a&gt; 는 물론 동기화 구현의 의미에 의존합니다.</target>
        </trans-unit>
        <trans-unit id="61356c7940468f66c8f7585670ec18ba9bbb0bae" translate="yes" xml:space="preserve">
          <source>This class defines a nested &lt;a href=&quot;abstractqueuedsynchronizer.conditionobject&quot;&gt;&lt;code&gt;AbstractQueuedSynchronizer.ConditionObject&lt;/code&gt;&lt;/a&gt; class that can be used as a &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; implementation by subclasses supporting exclusive mode for which method &lt;a href=&quot;abstractqueuedsynchronizer#isHeldExclusively--&quot;&gt;&lt;code&gt;isHeldExclusively()&lt;/code&gt;&lt;/a&gt; reports whether synchronization is exclusively held with respect to the current thread, method &lt;a href=&quot;abstractqueuedsynchronizer#release-int-&quot;&gt;&lt;code&gt;release(int)&lt;/code&gt;&lt;/a&gt; invoked with the current &lt;a href=&quot;abstractqueuedsynchronizer#getState--&quot;&gt;&lt;code&gt;getState()&lt;/code&gt;&lt;/a&gt; value fully releases this object, and &lt;a href=&quot;abstractqueuedsynchronizer#acquire-int-&quot;&gt;&lt;code&gt;acquire(int)&lt;/code&gt;&lt;/a&gt;, given this saved state value, eventually restores this object to its previous acquired state. No &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; method otherwise creates such a condition, so if this constraint cannot be met, do not use it. The behavior of &lt;a href=&quot;abstractqueuedsynchronizer.conditionobject&quot;&gt;&lt;code&gt;AbstractQueuedSynchronizer.ConditionObject&lt;/code&gt;&lt;/a&gt; depends of course on the semantics of its synchronizer implementation.</source>
          <target state="translated">이 클래스는 중첩 정의 &lt;a href=&quot;abstractqueuedsynchronizer.conditionobject&quot;&gt; &lt;code&gt;AbstractQueuedSynchronizer.ConditionObject&lt;/code&gt; &lt;/a&gt; A와 사용될 수있는 클래스 &lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt; 하는 방법 전용 모드를 지원하는 서브 클래스 구현 &lt;a href=&quot;abstractqueuedsynchronizer#isHeldExclusively--&quot;&gt; &lt;code&gt;isHeldExclusively()&lt;/code&gt; &lt;/a&gt; 동기화 단독 현재 스레드 방법에 대하여 유지되는지, &lt;a href=&quot;abstractqueuedsynchronizer#release-int-&quot;&gt; &lt;code&gt;release(int)&lt;/code&gt; &lt;/a&gt; 현재 호출을 &lt;a href=&quot;abstractqueuedsynchronizer#getState--&quot;&gt; &lt;code&gt;getState()&lt;/code&gt; &lt;/a&gt; 값은이 객체를 완전히 해제하고 ,이 저장된 상태 값이 주어지면 &lt;a href=&quot;abstractqueuedsynchronizer#acquire-int-&quot;&gt; &lt;code&gt;acquire(int)&lt;/code&gt; &lt;/a&gt; 는 결국이 객체를 이전에 획득 한 상태로 복원합니다. 그렇지 않으면 &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; 메소드가 해당 조건을 작성하지 않으므로이 제한 조건을 충족 할 수 없으면 사용하지 마십시오. 의 행동&lt;a href=&quot;abstractqueuedsynchronizer.conditionobject&quot;&gt; &lt;code&gt;AbstractQueuedSynchronizer.ConditionObject&lt;/code&gt; &lt;/a&gt; 는 물론 동기화 구현의 의미에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="d5cada524f1ba54ccad73156d4e44c4c2a1c0429" translate="yes" xml:space="preserve">
          <source>This class defines all known operation-set bits, but precisely which bits are supported by a given channel depends upon the type of the channel. Each subclass of &lt;a href=&quot;selectablechannel&quot;&gt;&lt;code&gt;SelectableChannel&lt;/code&gt;&lt;/a&gt; defines an &lt;a href=&quot;selectablechannel#validOps()&quot;&gt;&lt;code&gt;validOps()&lt;/code&gt;&lt;/a&gt; method which returns a set identifying just those operations that are supported by the channel. An attempt to set or test an operation-set bit that is not supported by a key's channel will result in an appropriate run-time exception.</source>
          <target state="translated">이 클래스는 알려진 모든 연산 세트 비트를 정의하지만, 특정 채널에서 지원하는 비트는 채널 유형에 따라 다릅니다. &lt;a href=&quot;selectablechannel&quot;&gt; &lt;code&gt;SelectableChannel&lt;/code&gt; 의&lt;/a&gt; 각 하위 클래스 는 채널에서 지원하는 작업 만 식별하는 집합을 반환 하는 &lt;a href=&quot;selectablechannel#validOps()&quot;&gt; &lt;code&gt;validOps()&lt;/code&gt; &lt;/a&gt; 메서드를 정의합니다 . 키의 채널에서 지원하지 않는 작업 세트 비트를 설정하거나 테스트하려고하면 적절한 런타임 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1d161644e58a91950e721e3df258d6272fe8f8a2" translate="yes" xml:space="preserve">
          <source>This class defines all known operation-set bits, but precisely which bits are supported by a given channel depends upon the type of the channel. Each subclass of &lt;a href=&quot;selectablechannel&quot;&gt;&lt;code&gt;SelectableChannel&lt;/code&gt;&lt;/a&gt; defines an &lt;a href=&quot;selectablechannel#validOps--&quot;&gt;&lt;code&gt;validOps()&lt;/code&gt;&lt;/a&gt; method which returns a set identifying just those operations that are supported by the channel. An attempt to set or test an operation-set bit that is not supported by a key's channel will result in an appropriate run-time exception.</source>
          <target state="translated">이 클래스는 알려진 모든 연산 세트 비트를 정의하지만 주어진 채널이 지원하는 비트는 채널 유형에 따라 정확하게 결정됩니다. &lt;a href=&quot;selectablechannel&quot;&gt; &lt;code&gt;SelectableChannel&lt;/code&gt; 의&lt;/a&gt; 각 하위 클래스 는 &lt;a href=&quot;selectablechannel#validOps--&quot;&gt; &lt;code&gt;validOps()&lt;/code&gt; &lt;/a&gt; 메서드를 정의합니다.이 메서드는 채널에서 지원하는 작업 만 식별하는 집합을 반환합니다. 키 채널에서 지원하지 않는 작업 세트 비트를 설정하거나 테스트하면 적절한 런타임 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9ad17d347b8152f95b4f4fed65fe3babf0e83084" translate="yes" xml:space="preserve">
          <source>This class defines an arc specified in &lt;code&gt;double&lt;/code&gt; precision.</source>
          <target state="translated">이 클래스는 &lt;code&gt;double&lt;/code&gt; 밀도로 지정된 호를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="cf48c726542cbd02db91ecbf0cd8287439478724" translate="yes" xml:space="preserve">
          <source>This class defines an arc specified in &lt;code&gt;float&lt;/code&gt; precision.</source>
          <target state="translated">이 클래스는 &lt;code&gt;float&lt;/code&gt; 정밀도로 지정된 호를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="7e2b90f2996121462dde9c2bea370e40d1ef9615" translate="yes" xml:space="preserve">
          <source>This class defines fields and units that are specific to the ISO calendar system.</source>
          <target state="translated">이 클래스는 ISO 캘린더 시스템과 관련된 필드 및 단위를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="4ef202ff1aebdeb0625aa6ebefdd0cc56e7f02b2" translate="yes" xml:space="preserve">
          <source>This class defines four categories of operations upon char buffers:</source>
          <target state="translated">이 클래스는 char 버퍼에 대한 네 가지 범주의 작업을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="f98ba77c2c9981bdfeb41dfaf75537c33937770f" translate="yes" xml:space="preserve">
          <source>This class defines four categories of operations upon double buffers:</source>
          <target state="translated">이 클래스는 이중 버퍼에 대한 네 가지 범주의 작업을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="6c37d099cf36e3f88a52048c7ea732645a2daaa9" translate="yes" xml:space="preserve">
          <source>This class defines four categories of operations upon float buffers:</source>
          <target state="translated">이 클래스는 부동 버퍼에 대한 네 가지 범주의 작업을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="88eb21b6bb4ad00179423581ffdebb353e51fc3d" translate="yes" xml:space="preserve">
          <source>This class defines four categories of operations upon int buffers:</source>
          <target state="translated">이 클래스는 int 버퍼에 대한 네 가지 범주의 작업을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="126a1062471d99cc02075569ba00b39109425458" translate="yes" xml:space="preserve">
          <source>This class defines four categories of operations upon long buffers:</source>
          <target state="translated">이 클래스는 긴 버퍼에 대한 네 가지 범주의 작업을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="5923e2513cc2452ca2ee5e213879f6f707f4b96b" translate="yes" xml:space="preserve">
          <source>This class defines four categories of operations upon short buffers:</source>
          <target state="translated">이 클래스는 짧은 버퍼에 대해 네 가지 범주의 작업을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="f2f17913f06f71e1e24cbd648059cc5684375ff8" translate="yes" xml:space="preserve">
          <source>This class defines login and logout methods for a provider.</source>
          <target state="translated">이 클래스는 제공자의 로그인 및 로그 아웃 메소드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="5bdf403f82368c178eaea3820a470d8dcfbe9fce" translate="yes" xml:space="preserve">
          <source>This class defines methods for reading and writing values of all other primitive types, except &lt;code&gt;boolean&lt;/code&gt;. Primitive values are translated to (or from) sequences of bytes according to the buffer's current byte order, which may be retrieved and modified via the &lt;a href=&quot;#order()&quot;&gt;&lt;code&gt;order&lt;/code&gt;&lt;/a&gt; methods. Specific byte orders are represented by instances of the &lt;a href=&quot;byteorder&quot;&gt;&lt;code&gt;ByteOrder&lt;/code&gt;&lt;/a&gt; class. The initial order of a byte buffer is always &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 &lt;code&gt;boolean&lt;/code&gt; 을 제외한 다른 모든 기본 유형의 값을 읽고 쓰기위한 메소드를 정의합니다 . 기본 값은 버퍼의 현재 바이트 순서에 따라 바이트 시퀀스로 (또는 그로부터) 변환되며, &lt;a href=&quot;#order()&quot;&gt; &lt;code&gt;order&lt;/code&gt; &lt;/a&gt; 메서드 를 통해 검색 및 수정할 수 있습니다 . 특정 바이트 순서는 &lt;a href=&quot;byteorder&quot;&gt; &lt;code&gt;ByteOrder&lt;/code&gt; &lt;/a&gt; 클래스의 인스턴스로 표시됩니다 . 바이트 버퍼의 초기 순서는 항상 &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt; &lt;code&gt;BIG_ENDIAN&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="029acb623286c2f3ebb08fab792ab3fadbf98ce6" translate="yes" xml:space="preserve">
          <source>This class defines methods for reading and writing values of all other primitive types, except &lt;code&gt;boolean&lt;/code&gt;. Primitive values are translated to (or from) sequences of bytes according to the buffer's current byte order, which may be retrieved and modified via the &lt;a href=&quot;bytebuffer#order--&quot;&gt;&lt;code&gt;order&lt;/code&gt;&lt;/a&gt; methods. Specific byte orders are represented by instances of the &lt;a href=&quot;byteorder&quot;&gt;&lt;code&gt;ByteOrder&lt;/code&gt;&lt;/a&gt; class. The initial order of a byte buffer is always &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 &lt;code&gt;boolean&lt;/code&gt; 을 제외한 다른 모든 기본 유형의 값을 읽고 쓰는 메소드를 정의합니다 . 프리미티브 값은 버퍼의 현재 바이트 순서에 따라 바이트 시퀀스로 변환되거나 바이트 순서에서 변환되며, 이는 &lt;a href=&quot;bytebuffer#order--&quot;&gt; &lt;code&gt;order&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 검색 및 수정 될 수 있습니다 . 특정 바이트 순서는 &lt;a href=&quot;byteorder&quot;&gt; &lt;code&gt;ByteOrder&lt;/code&gt; &lt;/a&gt; 클래스의 인스턴스로 표시됩니다 . 바이트 버퍼의 초기 순서는 항상 &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt; &lt;code&gt;BIG_ENDIAN&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="833f4acdf0db623c46516faed8a12b57ce205a05" translate="yes" xml:space="preserve">
          <source>This class defines methods that handle the mechanics of channel registration, deregistration, and closing. It maintains the current blocking mode of this channel as well as its current set of selection keys. It performs all of the synchronization required to implement the &lt;a href=&quot;../selectablechannel&quot;&gt;&lt;code&gt;SelectableChannel&lt;/code&gt;&lt;/a&gt; specification. Implementations of the abstract protected methods defined in this class need not synchronize against other threads that might be engaged in the same operations.</source>
          <target state="translated">이 클래스는 채널 등록, 등록 해제 및 닫기 메커니즘을 처리하는 메소드를 정의합니다. 이 채널의 현재 차단 모드와 현재 선택 키 세트를 유지합니다. &lt;a href=&quot;../selectablechannel&quot;&gt; &lt;code&gt;SelectableChannel&lt;/code&gt; &lt;/a&gt; 사양 을 구현하는 데 필요한 모든 동기화를 수행합니다 . 이 클래스에 정의 된 추상 보호 메소드의 구현은 동일한 조작에 참여할 수있는 다른 스레드와 동기화 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="102117ab56796ca0ef2e4471bf89d8d921b3664d" translate="yes" xml:space="preserve">
          <source>This class defines six categories of operations upon byte buffers:</source>
          <target state="translated">이 클래스는 바이트 버퍼에 대한 6 가지 범주의 작업을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="7ba1ab9ed492c8d5a18f9b9166f396dc75ef8bae" translate="yes" xml:space="preserve">
          <source>This class defines static methods that support the interoperation of the stream classes of the &lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt; package with the channel classes of this package.</source>
          <target state="translated">This class defines static methods that support the interoperation of the stream classes of the &lt;a href=&quot;../../io/package-summary&quot;&gt; &lt;code&gt;java.io&lt;/code&gt; &lt;/a&gt; package with the channel classes of this package.</target>
        </trans-unit>
        <trans-unit id="f9146ca2b8add7c0ef293bafe59b338da56f98ab" translate="yes" xml:space="preserve">
          <source>This class defines static methods that support the interoperation of the stream classes of the &lt;code&gt;&lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; package with the channel classes of this package.</source>
          <target state="translated">이 클래스는 &lt;code&gt;&lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 패키지 의 스트림 클래스 와이 패키지의 채널 클래스의 상호 운용을 지원하는 정적 메소드를 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="d84c379001913e342accd986ca649b3e0f329887" translate="yes" xml:space="preserve">
          <source>This class defines the</source>
          <target state="translated">이 클래스는</target>
        </trans-unit>
        <trans-unit id="6a04c9ba9af4145df36c1de30edd46f11886719a" translate="yes" xml:space="preserve">
          <source>This class defines the attributes of an SGML element as described in a DTD using the ATTLIST construct.</source>
          <target state="translated">This class defines the attributes of an SGML element as described in a DTD using the ATTLIST construct.</target>
        </trans-unit>
        <trans-unit id="fbf92c3dff07974d85f84c4aef6177e26c83d43d" translate="yes" xml:space="preserve">
          <source>This class defines the attributes of an SGML element as described in a DTD using the ATTLIST construct. An AttributeList can be obtained from the Element class using the getAttributes() method.</source>
          <target state="translated">This class defines the attributes of an SGML element as described in a DTD using the ATTLIST construct. An AttributeList can be obtained from the Element class using the getAttributes() method.</target>
        </trans-unit>
        <trans-unit id="b3d5084504afb30c838fb8bf8db215c665f80109" translate="yes" xml:space="preserve">
          <source>This class defines the functionality of a certificate factory, which is used to generate certificate, certification path (&lt;code&gt;CertPath&lt;/code&gt;) and certificate revocation list (CRL) objects from their encodings.</source>
          <target state="translated">이 클래스는 인코딩에서 인증서, 인증 경로 ( &lt;code&gt;CertPath&lt;/code&gt; ) 및 인증서 해지 목록 (CRL) 객체 를 생성하는 데 사용되는 인증서 팩토리의 기능을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="26ca605741d3db9bd0cd34cb20071b2d03195ef2" translate="yes" xml:space="preserve">
          <source>This class defines the methods &lt;a href=&quot;#supportsParameter(java.lang.Object)&quot;&gt;&lt;code&gt;supportsParameter()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#newInstance(java.lang.Object)&quot;&gt;&lt;code&gt;newInstance()&lt;/code&gt;&lt;/a&gt; which are used by the Java security framework when it searches for suitable services and instantiates them. The valid arguments to those methods depend on the type of service. For the service types defined within Java SE, see the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jca&quot;&gt;Java Cryptography Architecture (JCA) Reference Guide&lt;/a&gt; for the valid values. Note that components outside of Java SE can define additional types of services and their behavior.</source>
          <target state="translated">This class defines the methods &lt;a href=&quot;#supportsParameter(java.lang.Object)&quot;&gt; &lt;code&gt;supportsParameter()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#newInstance(java.lang.Object)&quot;&gt; &lt;code&gt;newInstance()&lt;/code&gt; &lt;/a&gt; which are used by the Java security framework when it searches for suitable services and instantiates them. The valid arguments to those methods depend on the type of service. For the service types defined within Java SE, see the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jca&quot;&gt;Java Cryptography Architecture (JCA) Reference Guide&lt;/a&gt; for the valid values. Note that components outside of Java SE can define additional types of services and their behavior.</target>
        </trans-unit>
        <trans-unit id="bb3eb1e8a146d86c95ae0ee3663bd63a4d9555d8" translate="yes" xml:space="preserve">
          <source>This class defines the methods &lt;a href=&quot;provider.service#supportsParameter-java.lang.Object-&quot;&gt;&lt;code&gt;supportsParameter()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;provider.service#newInstance-java.lang.Object-&quot;&gt;&lt;code&gt;newInstance()&lt;/code&gt;&lt;/a&gt; which are used by the Java security framework when it searches for suitable services and instantiates them. The valid arguments to those methods depend on the type of service. For the service types defined within Java SE, see the  Java Cryptography Architecture API Specification &amp;amp; Reference  for the valid values. Note that components outside of Java SE can define additional types of services and their behavior.</source>
          <target state="translated">이 클래스는 적절한 서비스를 검색하고 인스턴스화 할 때 Java 보안 프레임 워크에서 사용하는 &lt;a href=&quot;provider.service#supportsParameter-java.lang.Object-&quot;&gt; &lt;code&gt;supportsParameter()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;provider.service#newInstance-java.lang.Object-&quot;&gt; &lt;code&gt;newInstance()&lt;/code&gt; &lt;/a&gt; 메소드를 정의 합니다. 이러한 메소드에 유효한 인수는 서비스 유형에 따라 다릅니다. Java SE 내에 정의 된 서비스 유형은 유효한 값에 대한 Java Cryptography Architecture API 사양 및 참조를 참조하십시오. Java SE 외부의 구성 요소는 추가 유형의 서비스 및 해당 동작을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a15d8301b5051b9c65fd5754702615d1eb11a360" translate="yes" xml:space="preserve">
          <source>This class defines the policy of how to locate, load, and instantiate SASL clients and servers.</source>
          <target state="translated">이 클래스는 SASL 클라이언트 및 서버를 찾고로드하고 인스턴스화하는 방법에 대한 정책을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="4e3aebe453fbbcde578bedce9ea55b53e835992e" translate="yes" xml:space="preserve">
          <source>This class defines the valid eras for the Japanese chronology. Japan introduced the Gregorian calendar starting with Meiji 6. Only Meiji and later eras are supported; dates before Meiji 6, January 1 are not supported.</source>
          <target state="translated">이 클래스는 일본어 연대기에 대한 유효한 시대를 정의합니다. 일본은 Meiji 6부터 그레고리오 달력을 도입했습니다. Meiji 이상 만 지원됩니다. 1 월 1 일 메이지 6 이전 날짜는 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="639de47be42e8d75b76c4176863dd588b4c4754f" translate="yes" xml:space="preserve">
          <source>This class deflates sequences of bytes into ZLIB compressed data format. The input byte sequence is provided in either byte array or byte buffer, via one of the &lt;code&gt;setInput()&lt;/code&gt; methods. The output byte sequence is written to the output byte array or byte buffer passed to the &lt;code&gt;deflate()&lt;/code&gt; methods.</source>
          <target state="translated">This class deflates sequences of bytes into ZLIB compressed data format. The input byte sequence is provided in either byte array or byte buffer, via one of the &lt;code&gt;setInput()&lt;/code&gt; methods. The output byte sequence is written to the output byte array or byte buffer passed to the &lt;code&gt;deflate()&lt;/code&gt; methods.</target>
        </trans-unit>
        <trans-unit id="fbe65b3854b04fee6983070dd4203eca5cf27c1a" translate="yes" xml:space="preserve">
          <source>This class describes the various problems which can be encountered when accessing a role.</source>
          <target state="translated">이 클래스는 역할에 액세스 할 때 발생할 수있는 다양한 문제를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="d56ac70faee3ada578571fe8a2c0709cb67d01f6" translate="yes" xml:space="preserve">
          <source>This class does</source>
          <target state="translated">이 수업은</target>
        </trans-unit>
        <trans-unit id="51ed6edad8ec894a41b2906553da3514e2f0f580" translate="yes" xml:space="preserve">
          <source>This class does not impose a reader or writer preference ordering for lock access. However, it does support an optional &lt;em&gt;fairness&lt;/em&gt; policy.</source>
          <target state="translated">이 클래스는 잠금 액세스를 위해 리더 또는 라이터 기본 설정 순서를 강요하지 않습니다. 그러나 선택적인 &lt;em&gt;공정성&lt;/em&gt; 정책을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="416eec536ddf9ce338945773923fa836f99e3b0a" translate="yes" xml:space="preserve">
          <source>This class does not participate in any JAXP 1.3 or JAXP 1.4 processing. It must not be used by users or JAXP implementations.</source>
          <target state="translated">This class does not participate in any JAXP 1.3 or JAXP 1.4 processing. It must not be used by users or JAXP implementations.</target>
        </trans-unit>
        <trans-unit id="b55850117de60502f1359995ec43d1c79d50fb78" translate="yes" xml:space="preserve">
          <source>This class does not properly convert characters into bytes.</source>
          <target state="translated">이 클래스는 문자를 바이트로 올바르게 변환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="162e46887cb13f1ba011995c900f39cc02a52d40" translate="yes" xml:space="preserve">
          <source>This class does not properly convert characters into bytes. As of JDK 1.1, the preferred way to create a stream from a string is via the &lt;code&gt;StringReader&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 문자를 바이트로 올바르게 변환하지 않습니다. JDK 1.1 현재, 캐릭터 라인으로부터 스트림을 작성하는 바람직한 방법은 &lt;code&gt;StringReader&lt;/code&gt; 클래스 를 이용하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="94b1b0fa3bcb888b725ed330a4d97dab66d2166b" translate="yes" xml:space="preserve">
          <source>This class does not store or represent a date or time-zone. Instead, it is a description of the local time as seen on a wall clock. It cannot represent an instant on the time-line without additional information such as an offset or time-zone.</source>
          <target state="translated">이 클래스는 날짜 또는 시간대를 저장하거나 나타내지 않습니다. 대신 벽시계에서 볼 수있는 현지 시간에 대한 설명입니다. 오프셋 또는 시간대와 같은 추가 정보가 없으면 타임 라인에서 순간을 나타낼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="af6b2b16c68aa3ebe3feaed5905165e4006f92ac" translate="yes" xml:space="preserve">
          <source>This class does not store or represent a day, time or time-zone. For example, the value &quot;October 2007&quot; can be stored in a &lt;code&gt;YearMonth&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 요일, 시간 또는 시간대를 저장하거나 나타내지 않습니다. 예를 들어, &quot;October 2007&quot;값은 &lt;code&gt;YearMonth&lt;/code&gt; 에 저장 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="623be08061125589af241bd7ce5a308081256174" translate="yes" xml:space="preserve">
          <source>This class does not store or represent a month, day, time or time-zone. For example, the value &quot;2007&quot; can be stored in a &lt;code&gt;Year&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 월, 일, 시간 또는 시간대를 저장하거나 나타내지 않습니다. 예를 들어, &quot;2007&quot;값은 &lt;code&gt;Year&lt;/code&gt; 에 저장 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7d1e1ffdef80b6fdd0adba10ba28ec25df5388d7" translate="yes" xml:space="preserve">
          <source>This class does not store or represent a time or time-zone. Instead, it is a description of the date, as used for birthdays. It cannot represent an instant on the time-line without additional information such as an offset or time-zone.</source>
          <target state="translated">이 클래스는 시간 또는 시간대를 저장하거나 나타내지 않습니다. 대신 생일에 사용되는 날짜에 대한 설명입니다. 오프셋 또는 시간대와 같은 추가 정보가 없으면 타임 라인에서 순간을 나타낼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fe90c824d1431213b461922cf8b2690aa184e146" translate="yes" xml:space="preserve">
          <source>This class does not store or represent a time-zone. Instead, it is a description of the date, as used for birthdays, combined with the local time as seen on a wall clock. It cannot represent an instant on the time-line without additional information such as an offset or time-zone.</source>
          <target state="translated">이 클래스는 시간대를 저장하거나 나타내지 않습니다. 대신, 생일에 사용되는 벽시계에서 볼 수있는 현지 시간과 함께 날짜에 대한 설명입니다. 오프셋 또는 시간대와 같은 추가 정보가 없으면 타임 라인에서 순간을 나타낼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1dab391bb2089c461440ad234087ecc47782d3e5" translate="yes" xml:space="preserve">
          <source>This class does not store or represent a year, time or time-zone. For example, the value &quot;December 3rd&quot; can be stored in a &lt;code&gt;MonthDay&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 연도, 시간 또는 시간대를 저장하거나 나타내지 않습니다. 예를 들어, &quot;December 3rd&quot;값은 &lt;code&gt;MonthDay&lt;/code&gt; 에 저장 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="87d2f9566a12e39af2b715032fd8d4df9db03ff0" translate="yes" xml:space="preserve">
          <source>This class enables a programmer to create an object and protect its confidentiality with a cryptographic algorithm.</source>
          <target state="translated">이 클래스는 프로그래머가 암호화 알고리즘을 사용하여 객체를 생성하고 기밀성을 보호 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="9e2e8ab405f5992ef289a7e6666ba09e250d5e4a" translate="yes" xml:space="preserve">
          <source>This class enables one to store an entry in the defaults table that isn't constructed until the first time it's looked up with one of the &lt;code&gt;getXXX(key)&lt;/code&gt; methods.</source>
          <target state="translated">This class enables one to store an entry in the defaults table that isn't constructed until the first time it's looked up with one of the &lt;code&gt;getXXX(key)&lt;/code&gt; methods.</target>
        </trans-unit>
        <trans-unit id="756d7e9a8df9270e6366ea56499d0f3b6e71d42a" translate="yes" xml:space="preserve">
          <source>This class enables one to store an entry in the defaults table that isn't constructed until the first time it's looked up with one of the &lt;code&gt;getXXX(key)&lt;/code&gt; methods. Lazy values are useful for defaults that are expensive to construct or are seldom retrieved. The first time a &lt;code&gt;LazyValue&lt;/code&gt; is retrieved its &quot;real value&quot; is computed by calling &lt;code&gt;LazyValue.createValue()&lt;/code&gt; and the real value is used to replace the &lt;code&gt;LazyValue&lt;/code&gt; in the &lt;code&gt;UIDefaults&lt;/code&gt; table. Subsequent lookups for the same key return the real value. Here's an example of a &lt;code&gt;LazyValue&lt;/code&gt; that constructs a &lt;code&gt;Border&lt;/code&gt;:</source>
          <target state="translated">This class enables one to store an entry in the defaults table that isn't constructed until the first time it's looked up with one of the &lt;code&gt;getXXX(key)&lt;/code&gt; methods. Lazy values are useful for defaults that are expensive to construct or are seldom retrieved. The first time a &lt;code&gt;LazyValue&lt;/code&gt; is retrieved its &quot;real value&quot; is computed by calling &lt;code&gt;LazyValue.createValue()&lt;/code&gt; and the real value is used to replace the &lt;code&gt;LazyValue&lt;/code&gt; in the &lt;code&gt;UIDefaults&lt;/code&gt; table. Subsequent lookups for the same key return the real value. Here's an example of a &lt;code&gt;LazyValue&lt;/code&gt; that constructs a &lt;code&gt;Border&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c8f6dea9ff498634d1481d1d5e1d0be14c5af9c7" translate="yes" xml:space="preserve">
          <source>This class enables one to store an entry in the defaults table that's constructed each time it's looked up with one of the &lt;code&gt;getXXX(key)&lt;/code&gt; methods.</source>
          <target state="translated">This class enables one to store an entry in the defaults table that's constructed each time it's looked up with one of the &lt;code&gt;getXXX(key)&lt;/code&gt; methods.</target>
        </trans-unit>
        <trans-unit id="d774a03e2b68cba40317dff6dbf1d35bde79bc57" translate="yes" xml:space="preserve">
          <source>This class enables one to store an entry in the defaults table that's constructed each time it's looked up with one of the &lt;code&gt;getXXX(key)&lt;/code&gt; methods. Here's an example of an &lt;code&gt;ActiveValue&lt;/code&gt; that constructs a &lt;code&gt;DefaultListCellRenderer&lt;/code&gt;:</source>
          <target state="translated">This class enables one to store an entry in the defaults table that's constructed each time it's looked up with one of the &lt;code&gt;getXXX(key)&lt;/code&gt; methods. Here's an example of an &lt;code&gt;ActiveValue&lt;/code&gt; that constructs a &lt;code&gt;DefaultListCellRenderer&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b23217bc7f19cc9f99455bf188db9dd0821ae9a6" translate="yes" xml:space="preserve">
          <source>This class encapsulates a Kerberos 5 KRB_CRED message which can be used to send Kerberos credentials from one principal to another.</source>
          <target state="translated">This class encapsulates a Kerberos 5 KRB_CRED message which can be used to send Kerberos credentials from one principal to another.</target>
        </trans-unit>
        <trans-unit id="2b1ba15e57078832f452a767958acfa0d9ed2504" translate="yes" xml:space="preserve">
          <source>This class encapsulates a Kerberos principal.</source>
          <target state="translated">이 클래스는 Kerberos 프린시 펄을 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="02b0f1f4d4efdeca04a3d0ff51abd4ec98caaa56" translate="yes" xml:space="preserve">
          <source>This class encapsulates a Kerberos ticket and associated information as viewed from the client's point of view.</source>
          <target state="translated">이 클래스는 클라이언트 입장에서 볼 때 Kerberos 티켓과 관련 정보를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="b4fb1ff28a74175616cf3a7221f597e406482891" translate="yes" xml:space="preserve">
          <source>This class encapsulates a Kerberos ticket and associated information as viewed from the client's point of view. It captures all information that the Key Distribution Center (KDC) sends to the client in the reply message KDC-REP defined in the Kerberos Protocol Specification (&lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;).</source>
          <target state="translated">이 클래스는 클라이언트 입장에서 볼 때 Kerberos 티켓과 관련 정보를 캡슐화합니다. KDC (Key Distribution Center)가 Kerberos 프로토콜 스펙 ( &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt; )에 정의 된 응답 메시지 KDC-REP에서 클라이언트로 전송하는 모든 정보를 캡처합니다 .</target>
        </trans-unit>
        <trans-unit id="d9520afefbe51d9d105c6b875da5a19a77b272c3" translate="yes" xml:space="preserve">
          <source>This class encapsulates a collection of states of the Accessible object and is obtained by calling the &lt;code&gt;getAccessibleStateSet&lt;/code&gt; method on an &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt;. Since an object might have multiple states (e.g. it might be both &quot;Checked&quot; and &quot;Focused&quot;), this class is needed to encapsulate a collection of these states. Methods in the class provide for retrieving the individual &lt;a href=&quot;#AccessibleState&quot;&gt;AccessibleStates&lt;/a&gt; on the state set.</source>
          <target state="translated">This class encapsulates a collection of states of the Accessible object and is obtained by calling the &lt;code&gt;getAccessibleStateSet&lt;/code&gt; method on an &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt;. Since an object might have multiple states (e.g. it might be both &quot;Checked&quot; and &quot;Focused&quot;), this class is needed to encapsulate a collection of these states. Methods in the class provide for retrieving the individual &lt;a href=&quot;#AccessibleState&quot;&gt;AccessibleStates&lt;/a&gt; on the state set.</target>
        </trans-unit>
        <trans-unit id="4080b2d7eb034d05308a58a456615b37be74e61f" translate="yes" xml:space="preserve">
          <source>This class encapsulates a keytab file.</source>
          <target state="translated">이 클래스는 키탭 파일을 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="f5c98dc941892e57d92bcbd1cbf58a4c65c0d6b6" translate="yes" xml:space="preserve">
          <source>This class encapsulates a long term secret key for a Kerberos principal.</source>
          <target state="translated">이 클래스는 Kerberos 프린시 펄에 대한 장기 비밀 키를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="a136bc64cb3ae1b81d99b4067e0d8e5cff3d603d" translate="yes" xml:space="preserve">
          <source>This class encapsulates a particular state of the Accessible object. Accessible states include things like &quot;Armed&quot;, &quot;Busy&quot;, &quot;Checked&quot;, &quot;Focused&quot;, etc. These roles are identified by the constants in this class such as &lt;code&gt;AccessibleState.ARMED, AccessibleState.BUSY, AccessibleState.CHECKED,&lt;/code&gt; and &lt;code&gt;AccessibleState.FOCUSED&lt;/code&gt;. The sum of all the states of an Accessible object is called the &lt;a href=&quot;#AccessibleStateSet&quot;&gt;AccessibleStateSet&lt;/a&gt;, and can be obtained by calling the &lt;code&gt;getAccessibleStateSet&lt;/code&gt; method on an &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt;.</source>
          <target state="translated">This class encapsulates a particular state of the Accessible object. Accessible states include things like &quot;Armed&quot;, &quot;Busy&quot;, &quot;Checked&quot;, &quot;Focused&quot;, etc. These roles are identified by the constants in this class such as &lt;code&gt;AccessibleState.ARMED, AccessibleState.BUSY, AccessibleState.CHECKED,&lt;/code&gt; and &lt;code&gt;AccessibleState.FOCUSED&lt;/code&gt; . The sum of all the states of an Accessible object is called the &lt;a href=&quot;#AccessibleStateSet&quot;&gt;AccessibleStateSet&lt;/a&gt;, and can be obtained by calling the &lt;code&gt;getAccessibleStateSet&lt;/code&gt; method on an &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1c18702b3c967ce08e387196a13c96f65ced9123" translate="yes" xml:space="preserve">
          <source>This class encapsulates a single tab stop (basically as tab stops are thought of by RTF).</source>
          <target state="translated">This class encapsulates a single tab stop (basically as tab stops are thought of by RTF).</target>
        </trans-unit>
        <trans-unit id="60db9c82fe140ab47e31c58ae65bf9d3289b8254" translate="yes" xml:space="preserve">
          <source>This class encapsulates a single tab stop (basically as tab stops are thought of by RTF). A tab stop is at a specified distance from the left margin, aligns text in a specified way, and has a specified leader. TabStops are immutable, and usually contained in TabSets.</source>
          <target state="translated">This class encapsulates a single tab stop (basically as tab stops are thought of by RTF). A tab stop is at a specified distance from the left margin, aligns text in a specified way, and has a specified leader. TabStops are immutable, and usually contained in TabSets.</target>
        </trans-unit>
        <trans-unit id="66000685ede16681618dbc4b884626d9ccd406ca" translate="yes" xml:space="preserve">
          <source>This class encapsulates all relevant details of a clipboard or drag and drop transfer, and also allows for customizing aspects of the drag and drop experience.</source>
          <target state="translated">This class encapsulates all relevant details of a clipboard or drag and drop transfer, and also allows for customizing aspects of the drag and drop experience.</target>
        </trans-unit>
        <trans-unit id="02f52e945d3be3bdb688ea2b714f31037a200783" translate="yes" xml:space="preserve">
          <source>This class encapsulates an EncryptionKey used in Kerberos.</source>
          <target state="translated">This class encapsulates an EncryptionKey used in Kerberos.</target>
        </trans-unit>
        <trans-unit id="6bdcd8de4f4b409e0e87e2dff0350424da2fded3" translate="yes" xml:space="preserve">
          <source>This class encapsulates factors that determine scope of search and what gets returned as a result of the search.</source>
          <target state="translated">이 클래스는 검색 범위와 검색 결과로 반환되는 요소를 결정하는 요소를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="84e18e89ad99473964a876c3740334cd37702ebc" translate="yes" xml:space="preserve">
          <source>This class encapsulates information about a code signer.</source>
          <target state="translated">이 클래스는 코드 서명자에 대한 정보를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="191e3fbfb6316c52dbc601eea6fa3c7922bc82dd" translate="yes" xml:space="preserve">
          <source>This class encapsulates information about a code signer. It is immutable.</source>
          <target state="translated">이 클래스는 코드 서명자에 대한 정보를 캡슐화합니다. 불변입니다.</target>
        </trans-unit>
        <trans-unit id="2cf5950049a0b20a346f67af5aa2efae5c5ad449" translate="yes" xml:space="preserve">
          <source>This class encapsulates information about a signed timestamp.</source>
          <target state="translated">이 클래스는 서명 된 타임 스탬프에 대한 정보를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="d011ab8fa75b957c131d5f7832d7a99f0f0c7204" translate="yes" xml:space="preserve">
          <source>This class encapsulates information about a signed timestamp. It is immutable. It includes the timestamp's date and time as well as information about the Timestamping Authority (TSA) which generated and signed the timestamp.</source>
          <target state="translated">이 클래스는 서명 된 타임 스탬프에 대한 정보를 캡슐화합니다. 불변입니다. 타임 스탬프의 날짜 및 시간과 타임 스탬프를 생성하고 서명 한 TSA (Timestamping Authority)에 대한 정보가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="2136bcdc5bca10cb3f5806b0f97dbe5dacc80f03" translate="yes" xml:space="preserve">
          <source>This class encapsulates the Accessible object's role in the user interface and is obtained by calling the &lt;code&gt;getAccessibleRole&lt;/code&gt; method on an &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt;. Accessible roles include &quot;Check box&quot;, &quot;Menu Item&quot;, &quot;Panel&quot;, etc. These roles are identified by the constants in this class such as &lt;code&gt;AccessibleRole.CHECK_BOX,
 AccessibleRole.MENU_ITEM,&lt;/code&gt; and &lt;code&gt;AccessibleRole.PANEL&lt;/code&gt;. The constants in this class present a strongly typed enumeration of common object roles. A public constructor for this class has been purposely omitted and applications should use one of the constants from this class. Although this class pre-defines a large list of standard roles, it is extensible so additional programmer-defined roles can be added in the future without needing to modify the base class.</source>
          <target state="translated">This class encapsulates the Accessible object's role in the user interface and is obtained by calling the &lt;code&gt;getAccessibleRole&lt;/code&gt; method on an &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt;. Accessible roles include &quot;Check box&quot;, &quot;Menu Item&quot;, &quot;Panel&quot;, etc. These roles are identified by the constants in this class such as &lt;code&gt;AccessibleRole.CHECK_BOX, AccessibleRole.MENU_ITEM,&lt;/code&gt; and &lt;code&gt;AccessibleRole.PANEL&lt;/code&gt; . The constants in this class present a strongly typed enumeration of common object roles. A public constructor for this class has been purposely omitted and applications should use one of the constants from this class. Although this class pre-defines a large list of standard roles, it is extensible so additional programmer-defined roles can be added in the future without needing to modify the base class.</target>
        </trans-unit>
        <trans-unit id="dcd3282515f45ef5bbafa20d20710cfe3263e046" translate="yes" xml:space="preserve">
          <source>This class encapsulates the concept of caller-provided channel binding information.</source>
          <target state="translated">This class encapsulates the concept of caller-provided channel binding information.</target>
        </trans-unit>
        <trans-unit id="34e845f622bf5d65615bc187c989cd65dc75c533" translate="yes" xml:space="preserve">
          <source>This class encapsulates the concept of caller-provided channel binding information. Channel bindings are used to strengthen the quality with which peer entity authentication is provided during context establishment. They enable the GSS-API callers to bind the establishment of the security context to relevant characteristics like addresses or to application specific data.</source>
          <target state="translated">This class encapsulates the concept of caller-provided channel binding information. Channel bindings are used to strengthen the quality with which peer entity authentication is provided during context establishment. They enable the GSS-API callers to bind the establishment of the security context to relevant characteristics like addresses or to application specific data.</target>
        </trans-unit>
        <trans-unit id="3b50f96c0bfaf04c85a9188ad0f7fa52183d8839" translate="yes" xml:space="preserve">
          <source>This class encapsulates the logic of Namespace processing: it tracks the declarations currently in force for each context and automatically processes qualified XML names into their Namespace parts; it can also be used in reverse for generating XML qnames from Namespaces.</source>
          <target state="translated">This class encapsulates the logic of Namespace processing: it tracks the declarations currently in force for each context and automatically processes qualified XML names into their Namespace parts; it can also be used in reverse for generating XML qnames from Namespaces.</target>
        </trans-unit>
        <trans-unit id="472a2e0c8bede3b71644fc95d9fe5a304e3b4cad" translate="yes" xml:space="preserve">
          <source>This class encapsulates the low-level machinery required to implement the asynchronous closing and interruption of channels. A concrete channel class must invoke the &lt;a href=&quot;#begin()&quot;&gt;&lt;code&gt;begin&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#end(boolean)&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; methods before and after, respectively, invoking an I/O operation that might block indefinitely. In order to ensure that the &lt;a href=&quot;#end(boolean)&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method is always invoked, these methods should be used within a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block:</source>
          <target state="translated">This class encapsulates the low-level machinery required to implement the asynchronous closing and interruption of channels. A concrete channel class must invoke the &lt;a href=&quot;#begin()&quot;&gt; &lt;code&gt;begin&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#end(boolean)&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt; methods before and after, respectively, invoking an I/O operation that might block indefinitely. In order to ensure that the &lt;a href=&quot;#end(boolean)&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt; method is always invoked, these methods should be used within a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block:</target>
        </trans-unit>
        <trans-unit id="4fe8ca2895d516ddb4bb2dbb2d265b8a9b3c6d85" translate="yes" xml:space="preserve">
          <source>This class encapsulates the low-level machinery required to implement the asynchronous closing and interruption of channels. A concrete channel class must invoke the &lt;a href=&quot;abstractinterruptiblechannel#begin--&quot;&gt;&lt;code&gt;begin&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; methods before and after, respectively, invoking an I/O operation that might block indefinitely. In order to ensure that the &lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method is always invoked, these methods should be used within a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block:</source>
          <target state="translated">이 클래스는 채널의 비동기 폐쇄 및 중단을 구현하는 데 필요한 저수준 기계를 캡슐화합니다. 구체적 채널 클래스는 무기한으로 차단 될 수있는 I / O 조작을 호출하기 전후에 각각 &lt;a href=&quot;abstractinterruptiblechannel#begin--&quot;&gt; &lt;code&gt;begin&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt; 메소드를 호출해야 합니다. &lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt; 메소드가 항상 호출 되도록하려면 이러한 메소드를 &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; 블록 내에서 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="476c717e6b36ecf7d03ef55505d8e37345a0648a" translate="yes" xml:space="preserve">
          <source>This class encapsulates the low-level machinery required to implement the interruption of selection operations. A concrete selector class must invoke the &lt;a href=&quot;#begin()&quot;&gt;&lt;code&gt;begin&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#end()&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; methods before and after, respectively, invoking an I/O operation that might block indefinitely. In order to ensure that the &lt;a href=&quot;#end()&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method is always invoked, these methods should be used within a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block:</source>
          <target state="translated">This class encapsulates the low-level machinery required to implement the interruption of selection operations. A concrete selector class must invoke the &lt;a href=&quot;#begin()&quot;&gt; &lt;code&gt;begin&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#end()&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt; methods before and after, respectively, invoking an I/O operation that might block indefinitely. In order to ensure that the &lt;a href=&quot;#end()&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt; method is always invoked, these methods should be used within a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block:</target>
        </trans-unit>
        <trans-unit id="e8b178d5ab1d471af84cc8f749b651d6a8a10c4f" translate="yes" xml:space="preserve">
          <source>This class encapsulates the low-level machinery required to implement the interruption of selection operations. A concrete selector class must invoke the &lt;a href=&quot;abstractselector#begin--&quot;&gt;&lt;code&gt;begin&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;abstractselector#end--&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; methods before and after, respectively, invoking an I/O operation that might block indefinitely. In order to ensure that the &lt;a href=&quot;abstractselector#end--&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method is always invoked, these methods should be used within a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block:</source>
          <target state="translated">이 클래스는 선택 작업 중단을 구현하는 데 필요한 저수준 기계를 캡슐화합니다. 구체적 선택기 클래스는 무기한으로 차단 될 수있는 I / O 조작을 호출하기 전후에 &lt;a href=&quot;abstractselector#begin--&quot;&gt; &lt;code&gt;begin&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;abstractselector#end--&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt; 메소드를 각각 호출해야합니다. &lt;a href=&quot;abstractselector#end--&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt; 메소드가 항상 호출 되도록하려면 이러한 메소드를 &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; 블록 내에서 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0fe50fb8d30d1f633b31bbaa6da62542c6adcf72" translate="yes" xml:space="preserve">
          <source>This class exists to wrap one or more data arrays.</source>
          <target state="translated">This class exists to wrap one or more data arrays.</target>
        </trans-unit>
        <trans-unit id="ecf0cb46873d7fc0817872b8e7923673cb5c7db2" translate="yes" xml:space="preserve">
          <source>This class exists to wrap one or more data arrays. Each data array in the DataBuffer is referred to as a bank. Accessor methods for getting and setting elements of the DataBuffer's banks exist with and without a bank specifier. The methods without a bank specifier use the default 0th bank. The DataBuffer can optionally take an offset per bank, so that data in an existing array can be used even if the interesting data doesn't start at array location zero. Getting or setting the 0th element of a bank, uses the (0+offset)th element of the array. The size field specifies how much of the data array is available for use. Size + offset for a given bank should never be greater than the length of the associated data array. The data type of a data buffer indicates the type of the data array(s) and may also indicate additional semantics, e.g. storing unsigned 8-bit data in elements of a byte array. The data type may be TYPE_UNDEFINED or one of the types defined below. Other types may be added in the future. Generally, an object of class DataBuffer will be cast down to one of its data type specific subclasses to access data type specific methods for improved performance. Currently, the Java 2D(tm) API image classes use TYPE_BYTE, TYPE_USHORT, TYPE_INT, TYPE_SHORT, TYPE_FLOAT, and TYPE_DOUBLE DataBuffers to store image data.</source>
          <target state="translated">This class exists to wrap one or more data arrays. Each data array in the DataBuffer is referred to as a bank. Accessor methods for getting and setting elements of the DataBuffer's banks exist with and without a bank specifier. The methods without a bank specifier use the default 0th bank. The DataBuffer can optionally take an offset per bank, so that data in an existing array can be used even if the interesting data doesn't start at array location zero. Getting or setting the 0th element of a bank, uses the (0+offset)th element of the array. The size field specifies how much of the data array is available for use. Size + offset for a given bank should never be greater than the length of the associated data array. The data type of a data buffer indicates the type of the data array(s) and may also indicate additional semantics, e.g. storing unsigned 8-bit data in elements of a byte array. The data type may be TYPE_UNDEFINED or one of the types defined below. Other types may be added in the future. Generally, an object of class DataBuffer will be cast down to one of its data type specific subclasses to access data type specific methods for improved performance. Currently, the Java 2D(tm) API image classes use TYPE_BYTE, TYPE_USHORT, TYPE_INT, TYPE_SHORT, TYPE_FLOAT, and TYPE_DOUBLE DataBuffers to store image data.</target>
        </trans-unit>
        <trans-unit id="fbcfd0ca9cfe63da2c2c8be76ce7997f64531ca7" translate="yes" xml:space="preserve">
          <source>This class expresses a &lt;em&gt;Language Range&lt;/em&gt; defined in &lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647 Matching of Language Tags&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647 언어 태그 일치에&lt;/a&gt; 정의 된 &lt;em&gt;언어 범위를&lt;/em&gt; 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="39eac8e5feabe8dfd6efce5552c2b7e2f5cf68a2" translate="yes" xml:space="preserve">
          <source>This class expresses a &lt;em&gt;Language Range&lt;/em&gt; defined in &lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647 Matching of Language Tags&lt;/a&gt;. A language range is an identifier which is used to select language tag(s) meeting specific requirements by using the mechanisms described in &lt;a href=&quot;locale#LocaleMatching&quot;&gt;Locale Matching&lt;/a&gt;. A list which represents a user's preferences and consists of language ranges is called a &lt;em&gt;Language Priority List&lt;/em&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647 언어 태그 일치에&lt;/a&gt; 정의 된 &lt;em&gt;언어 범위를&lt;/em&gt; 나타냅니다 . 언어 범위는 &lt;a href=&quot;locale#LocaleMatching&quot;&gt;로캘 일치에&lt;/a&gt; 설명 된 메커니즘을 사용하여 특정 요구 사항을 충족하는 언어 태그를 선택하는 데 사용되는 식별자입니다 . 사용자의 기본 설정을 나타내며 언어 범위로 구성된 &lt;em&gt;목록을 언어 우선 순위 목록&lt;/em&gt; 이라고합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="790fa65ec58001c49665ec7438c7a2fb9ba17f51" translate="yes" xml:space="preserve">
          <source>This class extends &lt;a href=&quot;../../../lang/number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;, but does &lt;em&gt;not&lt;/em&gt; define methods such as &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;hashCode&lt;/code&gt; and &lt;code&gt;
 compareTo&lt;/code&gt; because instances are expected to be mutated, and so are not useful as collection keys.</source>
          <target state="translated">This class extends &lt;a href=&quot;../../../lang/number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;, but does &lt;em&gt;not&lt;/em&gt; define methods such as &lt;code&gt;equals&lt;/code&gt; , &lt;code&gt;hashCode&lt;/code&gt; and &lt;code&gt; compareTo&lt;/code&gt; because instances are expected to be mutated, and so are not useful as collection keys.</target>
        </trans-unit>
        <trans-unit id="12c4b1b942381193fe784dc1d0b755920b078b78" translate="yes" xml:space="preserve">
          <source>This class extends &lt;a href=&quot;../../../lang/number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;, but does &lt;em&gt;not&lt;/em&gt; define methods such as &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;hashCode&lt;/code&gt; and &lt;code&gt;compareTo&lt;/code&gt; because instances are expected to be mutated, and so are not useful as collection keys.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;../../../lang/number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; 를&lt;/a&gt; 확장 하지만 인스턴스가 변경 될 것으로 예상되므로 콜렉션 키로 유용 하지 &lt;em&gt;않으므로 &lt;/em&gt; &lt;code&gt;equals&lt;/code&gt; , &lt;code&gt;hashCode&lt;/code&gt; 및 &lt;code&gt;compareTo&lt;/code&gt; 와 같은 메소드를 정의 하지 &lt;em&gt;않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ab4a5394494318646046abcbdc4101f61febbe0d" translate="yes" xml:space="preserve">
          <source>This class extends &lt;a href=&quot;printservice&quot;&gt;&lt;code&gt;PrintService&lt;/code&gt;&lt;/a&gt; and represents a print service that prints data in different formats to a client-provided output stream.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;printservice&quot;&gt; &lt;code&gt;PrintService&lt;/code&gt; 를&lt;/a&gt; 확장 하고 다양한 형식의 데이터를 클라이언트 제공 출력 스트림에 인쇄하는 인쇄 서비스를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3a2bfc4316a8193b07c7576eedeac793be63ffc9" translate="yes" xml:space="preserve">
          <source>This class extends &lt;a href=&quot;printservice&quot;&gt;&lt;code&gt;PrintService&lt;/code&gt;&lt;/a&gt; and represents a print service that prints data in different formats to a client-provided output stream. This is principally intended for services where the output format is a document type suitable for viewing or archiving. The output format must be declared as a mime type. This is equivalent to an output document flavor where the representation class is always &quot;java.io.OutputStream&quot; An instance of the &lt;code&gt;StreamPrintService&lt;/code&gt; class is obtained from a &lt;a href=&quot;streamprintservicefactory&quot;&gt;&lt;code&gt;StreamPrintServiceFactory&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;printservice&quot;&gt; &lt;code&gt;PrintService&lt;/code&gt; 를&lt;/a&gt; 확장 하고 다른 형식의 데이터를 클라이언트 제공 출력 스트림에 인쇄하는 인쇄 서비스를 나타냅니다. 주로 출력 형식이 보거나 보관하기에 적합한 문서 유형 인 서비스를위한 것입니다. 출력 형식은 MIME 유형으로 선언해야합니다. 이는 표현 클래스가 항상 &quot;java.io.OutputStream&quot;인 출력 문서 플레이버와 동일합니다. &lt;code&gt;StreamPrintService&lt;/code&gt; 클래스 의 인스턴스 는 &lt;a href=&quot;streamprintservicefactory&quot;&gt; &lt;code&gt;StreamPrintServiceFactory&lt;/code&gt; &lt;/a&gt; 인스턴스 에서 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="5caa9fc49ac5b828759510d3066e073c602a0471" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;DataBuffer&lt;/code&gt; and stores data internally as bytes.</source>
          <target state="translated">This class extends &lt;code&gt;DataBuffer&lt;/code&gt; and stores data internally as bytes.</target>
        </trans-unit>
        <trans-unit id="db2e996d4650c1e0fd7f1f9a822aeabf96a9e5a5" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;DataBuffer&lt;/code&gt; and stores data internally as bytes. Values stored in the byte array(s) of this &lt;code&gt;DataBuffer&lt;/code&gt; are treated as unsigned values.</source>
          <target state="translated">This class extends &lt;code&gt;DataBuffer&lt;/code&gt; and stores data internally as bytes. Values stored in the byte array(s) of this &lt;code&gt;DataBuffer&lt;/code&gt; are treated as unsigned values.</target>
        </trans-unit>
        <trans-unit id="f5b3c080abc9f3cfb7c96610e8571f5315b36b35" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;DataBuffer&lt;/code&gt; and stores data internally as integers.</source>
          <target state="translated">This class extends &lt;code&gt;DataBuffer&lt;/code&gt; and stores data internally as integers.</target>
        </trans-unit>
        <trans-unit id="82fb0b675ced5b6fb66c4b5822870937b8544583" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;DataBuffer&lt;/code&gt; and stores data internally as shorts.</source>
          <target state="translated">This class extends &lt;code&gt;DataBuffer&lt;/code&gt; and stores data internally as shorts.</target>
        </trans-unit>
        <trans-unit id="3cc9c15e923cc281d7b1d4ef4801aeb56d8127ac" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;DataBuffer&lt;/code&gt; and stores data internally as shorts. Values stored in the short array(s) of this &lt;code&gt;DataBuffer&lt;/code&gt; are treated as unsigned values.</source>
          <target state="translated">This class extends &lt;code&gt;DataBuffer&lt;/code&gt; and stores data internally as shorts. Values stored in the short array(s) of this &lt;code&gt;DataBuffer&lt;/code&gt; are treated as unsigned values.</target>
        </trans-unit>
        <trans-unit id="55c662daadc7a08fe6e3216e1e9698ac86111790" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;DataBuffer&lt;/code&gt; and stores data internally in &lt;code&gt;double&lt;/code&gt; form.</source>
          <target state="translated">This class extends &lt;code&gt;DataBuffer&lt;/code&gt; and stores data internally in &lt;code&gt;double&lt;/code&gt; form.</target>
        </trans-unit>
        <trans-unit id="9796a506f32610f5b7487cf8bb4cb9801ebeb005" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;DataBuffer&lt;/code&gt; and stores data internally in &lt;code&gt;float&lt;/code&gt; form.</source>
          <target state="translated">This class extends &lt;code&gt;DataBuffer&lt;/code&gt; and stores data internally in &lt;code&gt;float&lt;/code&gt; form.</target>
        </trans-unit>
        <trans-unit id="39986d26be7432e24c8695e173c5048ebcc55c11" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;ServerSocket&lt;/code&gt; and provides secure server sockets using protocols such as the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.</source>
          <target state="translated">This class extends &lt;code&gt;ServerSocket&lt;/code&gt; and provides secure server sockets using protocols such as the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.</target>
        </trans-unit>
        <trans-unit id="8b2cee8723f0682d562cbfd968a38cc915af5e1a" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;ServerSocket&lt;/code&gt;s and provides secure server sockets using protocols such as the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.</source>
          <target state="translated">이 클래스는 &lt;code&gt;ServerSocket&lt;/code&gt; 을 확장 하고 SSL (Secure Sockets Layer) 또는 TLS (Transport Layer Security) 프로토콜과 같은 프로토콜을 사용하여 보안 서버 소켓을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="14bf640eea650f8230ec6ff07a49bb1a98593a64" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;Socket&lt;/code&gt; and provides secure sockets using protocols such as the &quot;Secure Sockets Layer&quot; (SSL) or IETF &quot;Transport Layer Security&quot; (TLS) protocols.</source>
          <target state="translated">This class extends &lt;code&gt;Socket&lt;/code&gt; and provides secure sockets using protocols such as the &quot;Secure Sockets Layer&quot; (SSL) or IETF &quot;Transport Layer Security&quot; (TLS) protocols.</target>
        </trans-unit>
        <trans-unit id="d8efeac981cc313c07ad5b341e7a806e991c63d7" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;Socket&lt;/code&gt;s and provides secure socket using protocols such as the &quot;Secure Sockets Layer&quot; (SSL) or IETF &quot;Transport Layer Security&quot; (TLS) protocols.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Socket&lt;/code&gt; 을 확장 하고 &quot;Secure Sockets Layer&quot;(SSL) 또는 IETF &quot;Transport Layer Security&quot;(TLS) 프로토콜과 같은 프로토콜을 사용하여 보안 소켓을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6d5bad603f01a52f40d16a5d42fa59411d47f088" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;ThreadLocal&lt;/code&gt; to provide inheritance of values from parent thread to child thread: when a child thread is created, the child receives initial values for all inheritable thread-local variables for which the parent has values.</source>
          <target state="translated">이 클래스는 &lt;code&gt;ThreadLocal&lt;/code&gt; 을 확장 하여 상위 스레드에서 하위 스레드로의 값 상속을 제공합니다. 하위 스레드가 작성되면 하위는 상위가있는 모든 상속 가능한 스레드 로컬 변수의 초기 값을 수신합니다.</target>
        </trans-unit>
        <trans-unit id="61cf9e599bd69e17a1f21ad16e7f04aebe6304d0" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;ThreadLocal&lt;/code&gt; to provide inheritance of values from parent thread to child thread: when a child thread is created, the child receives initial values for all inheritable thread-local variables for which the parent has values. Normally the child's values will be identical to the parent's; however, the child's value can be made an arbitrary function of the parent's by overriding the &lt;code&gt;childValue&lt;/code&gt; method in this class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;ThreadLocal&lt;/code&gt; 을 확장 하여 상위 스레드에서 하위 스레드로의 값 상속을 제공합니다. 하위 스레드가 작성되면 하위는 상위가있는 모든 상속 가능한 스레드 로컬 변수의 초기 값을 수신합니다. 일반적으로 자녀의 가치는 부모의 가치와 동일합니다. 그러나이 클래스에서 &lt;code&gt;childValue&lt;/code&gt; 메서드를 재정 의하여 자식 값을 부모의 임의 함수로 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0780edb1d92a454e50a61e6a3acb5cdc9197c84e" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;javax.management.MBeanFeatureInfo&lt;/code&gt; and thus provides &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; fields. The &lt;code&gt;name&lt;/code&gt; field should be the fully qualified Java class name of the notification objects described by this class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;javax.management.MBeanFeatureInfo&lt;/code&gt; 를 확장 하므로 &lt;code&gt;name&lt;/code&gt; 및 &lt;code&gt;description&lt;/code&gt; 필드 를 제공 합니다. &lt;code&gt;name&lt;/code&gt; 필드는이 클래스에 의해 기술 된 알림 객체의 완전한 Java 클래스 이름이어야합니다.</target>
        </trans-unit>
        <trans-unit id="79411ae38bda3676bbd057e31ea7c77af07c30b0" translate="yes" xml:space="preserve">
          <source>This class extends ClassLoader with additional support for defining classes with an associated code source and permissions which are retrieved by the system policy by default.</source>
          <target state="translated">이 클래스는 기본적으로 시스템 정책에 의해 검색되는 관련 코드 소스 및 권한으로 클래스를 정의하기위한 추가 지원을 통해 ClassLoader를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="fd3d04e7573649ce254380579f13e4e7c460cf2c" translate="yes" xml:space="preserve">
          <source>This class extends Raster to provide pixel writing capabilities.</source>
          <target state="translated">This class extends Raster to provide pixel writing capabilities.</target>
        </trans-unit>
        <trans-unit id="9b1b03af9fbd709f862213d619c9a562d30358b9" translate="yes" xml:space="preserve">
          <source>This class extends Raster to provide pixel writing capabilities. Refer to the class comment for Raster for descriptions of how a Raster stores pixels.</source>
          <target state="translated">This class extends Raster to provide pixel writing capabilities. Refer to the class comment for Raster for descriptions of how a Raster stores pixels.</target>
        </trans-unit>
        <trans-unit id="40800116e3b8d081484699eb0f82afb9d197d954" translate="yes" xml:space="preserve">
          <source>This class extends TransformerFactory to provide SAX-specific factory methods.</source>
          <target state="translated">This class extends TransformerFactory to provide SAX-specific factory methods.</target>
        </trans-unit>
        <trans-unit id="28ecd6937cff3b2bd6c4d555c8931ea5f0d735df" translate="yes" xml:space="preserve">
          <source>This class extends TransformerFactory to provide SAX-specific factory methods. It provides two types of ContentHandlers, one for creating Transformers, the other for creating Templates objects.</source>
          <target state="translated">This class extends TransformerFactory to provide SAX-specific factory methods. It provides two types of ContentHandlers, one for creating Transformers, the other for creating Templates objects.</target>
        </trans-unit>
        <trans-unit id="8696d832309c84fd1ec6b33b079c9cbef2d1c8ba" translate="yes" xml:space="preserve">
          <source>This class extends the SAX2 base handler class to support the SAX2 &lt;a href=&quot;lexicalhandler&quot;&gt;&lt;code&gt;LexicalHandler&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;declhandler&quot;&gt;&lt;code&gt;DeclHandler&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;entityresolver2&quot;&gt;&lt;code&gt;EntityResolver2&lt;/code&gt;&lt;/a&gt; extensions.</source>
          <target state="translated">This class extends the SAX2 base handler class to support the SAX2 &lt;a href=&quot;lexicalhandler&quot;&gt; &lt;code&gt;LexicalHandler&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;declhandler&quot;&gt; &lt;code&gt;DeclHandler&lt;/code&gt; &lt;/a&gt;, and &lt;a href=&quot;entityresolver2&quot;&gt; &lt;code&gt;EntityResolver2&lt;/code&gt; &lt;/a&gt; extensions.</target>
        </trans-unit>
        <trans-unit id="933f816dcc0d58041f1aa837bbd169190ace0e7a" translate="yes" xml:space="preserve">
          <source>This class extends the SAX2 base handler class to support the SAX2 &lt;a href=&quot;lexicalhandler&quot;&gt;&lt;code&gt;LexicalHandler&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;declhandler&quot;&gt;&lt;code&gt;DeclHandler&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;entityresolver2&quot;&gt;&lt;code&gt;EntityResolver2&lt;/code&gt;&lt;/a&gt; extensions. Except for overriding the original SAX1 &lt;a href=&quot;../helpers/defaulthandler#resolveEntity(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;resolveEntity()&lt;/code&gt;&lt;/a&gt; method the added handler methods just return. Subclassers may override everything on a method-by-method basis.</source>
          <target state="translated">This class extends the SAX2 base handler class to support the SAX2 &lt;a href=&quot;lexicalhandler&quot;&gt; &lt;code&gt;LexicalHandler&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;declhandler&quot;&gt; &lt;code&gt;DeclHandler&lt;/code&gt; &lt;/a&gt;, and &lt;a href=&quot;entityresolver2&quot;&gt; &lt;code&gt;EntityResolver2&lt;/code&gt; &lt;/a&gt; extensions. Except for overriding the original SAX1 &lt;a href=&quot;../helpers/defaulthandler#resolveEntity(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;resolveEntity()&lt;/code&gt; &lt;/a&gt; method the added handler methods just return. Subclassers may override everything on a method-by-method basis.</target>
        </trans-unit>
        <trans-unit id="21338ae02e350124186929e18766faa492d3eb23" translate="yes" xml:space="preserve">
          <source>This class extends the basic ImageFilter Class to scale an existing image and provide a source for a new image containing the resampled image. The pixels in the source image are blended to produce pixels for an image of the specified size. The blending process is analogous to scaling up the source image to a multiple of the destination size using pixel replication and then scaling it back down to the destination size by simply averaging all the pixels in the supersized image that fall within a given pixel of the destination image. If the data from the source is not delivered in TopDownLeftRight order then the filter will back off to a simple pixel replication behavior and utilize the requestTopDownLeftRightResend() method to refilter the pixels in a better way at the end.</source>
          <target state="translated">This class extends the basic ImageFilter Class to scale an existing image and provide a source for a new image containing the resampled image. The pixels in the source image are blended to produce pixels for an image of the specified size. The blending process is analogous to scaling up the source image to a multiple of the destination size using pixel replication and then scaling it back down to the destination size by simply averaging all the pixels in the supersized image that fall within a given pixel of the destination image. If the data from the source is not delivered in TopDownLeftRight order then the filter will back off to a simple pixel replication behavior and utilize the requestTopDownLeftRightResend() method to refilter the pixels in a better way at the end.</target>
        </trans-unit>
        <trans-unit id="80fd8d0442ed8d6ca7099a0928889c31d6da43cc" translate="yes" xml:space="preserve">
          <source>This class extends the concept of a codebase to encapsulate not only the location (URL) but also the certificate chains that were used to verify signed code originating from that location.</source>
          <target state="translated">이 클래스는 코드베이스의 개념을 확장하여 위치 (URL)뿐만 아니라 해당 위치에서 시작된 서명 된 코드를 확인하는 데 사용 된 인증서 체인도 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="669709dfc9abebde849bfe352bceb4a77f91fb51" translate="yes" xml:space="preserve">
          <source>This class extends the standard equations defined by Porter and Duff to include one additional factor. An instance of the &lt;code&gt;AlphaComposite&lt;/code&gt; class can contain an alpha value that is used to modify the opacity or coverage of every source pixel before it is used in the blending equations.</source>
          <target state="translated">This class extends the standard equations defined by Porter and Duff to include one additional factor. An instance of the &lt;code&gt;AlphaComposite&lt;/code&gt; class can contain an alpha value that is used to modify the opacity or coverage of every source pixel before it is used in the blending equations.</target>
        </trans-unit>
        <trans-unit id="20cbb526b48b2f6f9e0788d4a54943b1653177c6" translate="yes" xml:space="preserve">
          <source>This class handles conversion from the local time-line of &lt;code&gt;LocalDateTime&lt;/code&gt; to the instant time-line of &lt;code&gt;Instant&lt;/code&gt;. The difference between the two time-lines is the offset from UTC/Greenwich, represented by a &lt;code&gt;ZoneOffset&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 &lt;code&gt;LocalDateTime&lt;/code&gt; 의 로컬 타임 라인에서 &lt;code&gt;Instant&lt;/code&gt; 의 인스턴트 타임 라인으로의 변환을 처리합니다 . 두 타임 라인의 차이는 UTC / 그리니치와의 오프셋이며 &lt;code&gt;ZoneOffset&lt;/code&gt; 으로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="2416cb341eb991b4b45bae59d64ea90136e99b47" translate="yes" xml:space="preserve">
          <source>This class handles the renderable aspects of an operation with help from its associated instance of a ContextualRenderedImageFactory.</source>
          <target state="translated">This class handles the renderable aspects of an operation with help from its associated instance of a ContextualRenderedImageFactory.</target>
        </trans-unit>
        <trans-unit id="83b16321c8033f57fb820d949f953ef93c8a37f6" translate="yes" xml:space="preserve">
          <source>This class has been deprecated and should no longer be used. The basis of the various TextUI implementations can be found in the javax.swing.plaf.basic package and the class BasicTextUI replaces this class.</source>
          <target state="translated">This class has been deprecated and should no longer be used. The basis of the various TextUI implementations can be found in the javax.swing.plaf.basic package and the class BasicTextUI replaces this class.</target>
        </trans-unit>
        <trans-unit id="c2c510615fadad7e9da53db12fa87c9ab67375c5" translate="yes" xml:space="preserve">
          <source>This class has been obsoleted by the 1.4 focus APIs.</source>
          <target state="translated">This class has been obsoleted by the 1.4 focus APIs.</target>
        </trans-unit>
        <trans-unit id="b8467f322a56470e4f5c62a98f5caabb4c487b98" translate="yes" xml:space="preserve">
          <source>This class has been obsoleted by the 1.4 focus APIs. While client code may still use this class, developers are strongly encouraged to use &lt;code&gt;java.awt.KeyboardFocusManager&lt;/code&gt; and &lt;code&gt;java.awt.DefaultKeyboardFocusManager&lt;/code&gt; instead.</source>
          <target state="translated">This class has been obsoleted by the 1.4 focus APIs. While client code may still use this class, developers are strongly encouraged to use &lt;code&gt;java.awt.KeyboardFocusManager&lt;/code&gt; and &lt;code&gt;java.awt.DefaultKeyboardFocusManager&lt;/code&gt; instead.</target>
        </trans-unit>
        <trans-unit id="b4b932d45ae5c58a5d969eda80df032fc50a1bbc" translate="yes" xml:space="preserve">
          <source>This class has one tuning parameter (which affects performance but not semantics):</source>
          <target state="translated">이 클래스에는 하나의 튜닝 매개 변수가 있습니다 (성능에는 영향을 주지만 의미론에는 영향을 미치지 않음).</target>
        </trans-unit>
        <trans-unit id="70113f3193141e1f041370d6ac6ba662a48c28f3" translate="yes" xml:space="preserve">
          <source>This class has the following properties:</source>
          <target state="translated">이 클래스에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d19fdc662125ffff4fe19d97827cb2fea967605c" translate="yes" xml:space="preserve">
          <source>This class holds a small number of attributes in an array.</source>
          <target state="translated">This class holds a small number of attributes in an array.</target>
        </trans-unit>
        <trans-unit id="e2c18d88b176c5432cc26707086dd8b9f6c63c01" translate="yes" xml:space="preserve">
          <source>This class holds a small number of attributes in an array. The storage format is key, value, key, value, etc. The size of the set is the length of the array divided by two. By default, this is the class that will be used to store attributes when held in the compact sharable form.</source>
          <target state="translated">This class holds a small number of attributes in an array. The storage format is key, value, key, value, etc. The size of the set is the length of the array divided by two. By default, this is the class that will be used to store attributes when held in the compact sharable form.</target>
        </trans-unit>
        <trans-unit id="2ce9f51398959907609a6460cc743f36ee8b60cb" translate="yes" xml:space="preserve">
          <source>This class ignores &lt;code&gt;PropertyChangeEvents&lt;/code&gt; whose source is not the &lt;code&gt;JFormattedTextField&lt;/code&gt;, so subclasses may safely make &lt;code&gt;this&lt;/code&gt;&lt;code&gt;DefaultEditor&lt;/code&gt; a &lt;code&gt;PropertyChangeListener&lt;/code&gt; on other objects.</source>
          <target state="translated">This class ignores &lt;code&gt;PropertyChangeEvents&lt;/code&gt; whose source is not the &lt;code&gt;JFormattedTextField&lt;/code&gt; , so subclasses may safely make &lt;code&gt;this&lt;/code&gt; &lt;code&gt;DefaultEditor&lt;/code&gt; a &lt;code&gt;PropertyChangeListener&lt;/code&gt; on other objects.</target>
        </trans-unit>
        <trans-unit id="6d13ba8d22873fec38f5fdb9655962f8d07b5525" translate="yes" xml:space="preserve">
          <source>This class implements &lt;a href=&quot;temporal/temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt; rather than &lt;a href=&quot;temporal/temporal&quot;&gt;&lt;code&gt;Temporal&lt;/code&gt;&lt;/a&gt;. This is because it is not possible to define whether February 29th is valid or not without external information, preventing the implementation of plus/minus. Related to this, &lt;code&gt;MonthDay&lt;/code&gt; only provides access to query and set the fields &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; and &lt;code&gt;DAY_OF_MONTH&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;temporal/temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;temporal/temporal&quot;&gt; &lt;code&gt;Temporal&lt;/code&gt; Accessor를&lt;/a&gt; 구현 합니다. 외부 정보없이 2 월 29 일이 유효한지 여부를 정의 할 수 없기 때문에 플러스 / 마이너스 구현을 방해합니다. 이와 관련하여 &lt;code&gt;MonthDay&lt;/code&gt; 는 쿼리에 대한 액세스 만 제공하고 &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; 및 &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; 필드를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="8b1b5758c54bc43b1f20d7320d2269eda1a9f548" translate="yes" xml:space="preserve">
          <source>This class implements &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; over the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.</source>
          <target state="translated">This class implements &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; over the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.</target>
        </trans-unit>
        <trans-unit id="c79d9acc1fa100d487f4a396b8b74a3bfc6e0f16" translate="yes" xml:space="preserve">
          <source>This class implements &lt;code&gt;RMIServerSocketFactory&lt;/code&gt; over the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.</source>
          <target state="translated">This class implements &lt;code&gt;RMIServerSocketFactory&lt;/code&gt; over the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.</target>
        </trans-unit>
        <trans-unit id="baad76a02be640103b9ef84e83db7f714f95545e" translate="yes" xml:space="preserve">
          <source>This class implements a character buffer that can be used as a character-input stream.</source>
          <target state="translated">이 클래스는 문자 입력 스트림으로 사용할 수있는 문자 버퍼를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="1d1a1f0c028a92e072814256e8f4eb63bad6fa1d" translate="yes" xml:space="preserve">
          <source>This class implements a character buffer that can be used as an Writer.</source>
          <target state="translated">이 클래스는 Writer로 사용할 수있는 문자 버퍼를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="de33e90606c927d634844e37c43bab24c76b5361" translate="yes" xml:space="preserve">
          <source>This class implements a character buffer that can be used as an Writer. The buffer automatically grows when data is written to the stream. The data can be retrieved using toCharArray() and toString().</source>
          <target state="translated">이 클래스는 Writer로 사용할 수있는 문자 버퍼를 구현합니다. 데이터가 스트림에 기록되면 버퍼가 자동으로 커집니다. toCharArray () 및 toString ()을 사용하여 데이터를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a33c9373a2537042b50b3e84133347112a203ce6" translate="yes" xml:space="preserve">
          <source>This class implements a concurrent variant of &lt;a href=&quot;http://en.wikipedia.org/wiki/Skip_list&quot;&gt;SkipLists&lt;/a&gt; providing expected average</source>
          <target state="translated">이 클래스는 예상 평균을 제공하는 &lt;a href=&quot;http://en.wikipedia.org/wiki/Skip_list&quot;&gt;SkipLists&lt;/a&gt; 의 동시 변형을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="1624f38ea081bc1e29c38f89301c82f5998a47a9" translate="yes" xml:space="preserve">
          <source>This class implements a convolution from the source to the destination.</source>
          <target state="translated">This class implements a convolution from the source to the destination.</target>
        </trans-unit>
        <trans-unit id="47e7bab2417465cb8b2337c2efc10f63ca5c987e" translate="yes" xml:space="preserve">
          <source>This class implements a convolution from the source to the destination. Convolution using a convolution kernel is a spatial operation that computes the output pixel from an input pixel by multiplying the kernel with the surround of the input pixel. This allows the output pixel to be affected by the immediate neighborhood in a way that can be mathematically specified with a kernel.</source>
          <target state="translated">This class implements a convolution from the source to the destination. Convolution using a convolution kernel is a spatial operation that computes the output pixel from an input pixel by multiplying the kernel with the surround of the input pixel. This allows the output pixel to be affected by the immediate neighborhood in a way that can be mathematically specified with a kernel.</target>
        </trans-unit>
        <trans-unit id="2b5d82534a0f233b03424a9f07ca7a811318e1aa" translate="yes" xml:space="preserve">
          <source>This class implements a decoder for decoding byte data using the Base64 encoding scheme as specified in RFC 4648 and RFC 2045.</source>
          <target state="translated">이 클래스는 RFC 4648 및 RFC 2045에 지정된 Base64 인코딩 체계를 사용하여 바이트 데이터를 디코딩하기위한 디코더를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="4586e491e7a3bc183fbad7e9560bcc6798b71f52" translate="yes" xml:space="preserve">
          <source>This class implements a deprecated interface, &lt;a href=&quot;../attributelist&quot;&gt;&lt;code&gt;AttributeList&lt;/code&gt;&lt;/a&gt;; that interface has been replaced by &lt;a href=&quot;../attributes&quot;&gt;&lt;code&gt;Attributes&lt;/code&gt;&lt;/a&gt;, which is implemented in the &lt;a href=&quot;attributesimpl&quot;&gt;&lt;code&gt;AttributesImpl&lt;/code&gt;&lt;/a&gt; helper class.</source>
          <target state="translated">This class implements a deprecated interface, &lt;a href=&quot;../attributelist&quot;&gt; &lt;code&gt;AttributeList&lt;/code&gt; &lt;/a&gt;; that interface has been replaced by &lt;a href=&quot;../attributes&quot;&gt; &lt;code&gt;Attributes&lt;/code&gt; &lt;/a&gt;, which is implemented in the &lt;a href=&quot;attributesimpl&quot;&gt; &lt;code&gt;AttributesImpl&lt;/code&gt; &lt;/a&gt; helper class.</target>
        </trans-unit>
        <trans-unit id="586bcfb0b19216db8b0eb732c2548f91cb7bc88f" translate="yes" xml:space="preserve">
          <source>This class implements a filter for the set of interface methods that are used to deliver data from an ImageProducer to an ImageConsumer.</source>
          <target state="translated">This class implements a filter for the set of interface methods that are used to deliver data from an ImageProducer to an ImageConsumer.</target>
        </trans-unit>
        <trans-unit id="7bdd04e18e88025e0ff5f8ef398495b495faaf18" translate="yes" xml:space="preserve">
          <source>This class implements a filter for the set of interface methods that are used to deliver data from an ImageProducer to an ImageConsumer. It is meant to be used in conjunction with a FilteredImageSource object to produce filtered versions of existing images. It is a base class that provides the calls needed to implement a &quot;Null filter&quot; which has no effect on the data being passed through. Filters should subclass this class and override the methods which deal with the data that needs to be filtered and modify it as necessary.</source>
          <target state="translated">This class implements a filter for the set of interface methods that are used to deliver data from an ImageProducer to an ImageConsumer. It is meant to be used in conjunction with a FilteredImageSource object to produce filtered versions of existing images. It is a base class that provides the calls needed to implement a &quot;Null filter&quot; which has no effect on the data being passed through. Filters should subclass this class and override the methods which deal with the data that needs to be filtered and modify it as necessary.</target>
        </trans-unit>
        <trans-unit id="4f3639215ee0d1bb5b232f24c89ffd529e2afcaf" translate="yes" xml:space="preserve">
          <source>This class implements a hash table, which maps keys to values.</source>
          <target state="translated">이 클래스는 키를 값에 매핑하는 해시 테이블을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="1afbbca910b972820ee6e671ebad24d463657bbd" translate="yes" xml:space="preserve">
          <source>This class implements a hash table, which maps keys to values. Any non-&lt;code&gt;null&lt;/code&gt; object can be used as a key or as a value.</source>
          <target state="translated">이 클래스는 키를 값에 매핑하는 해시 테이블을 구현합니다. &lt;code&gt;null&lt;/code&gt; 아닌 오브젝트는 키 또는 값으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="368458c1eaecacddabde2f2a78ed732cd6e42b70" translate="yes" xml:space="preserve">
          <source>This class implements a locking mechanism for the document. It allows multiple readers or one writer, and writers must wait until all observers of the document have been notified of a previous change before beginning another mutation to the document. The read lock is acquired and released using the &lt;code&gt;render&lt;/code&gt; method. A write lock is acquired by the methods that mutate the document, and are held for the duration of the method call. Notification is done on the thread that produced the mutation, and the thread has full read access to the document for the duration of the notification, but other readers are kept out until the notification has finished. The notification is a beans event notification which does not allow any further mutations until all listeners have been notified.</source>
          <target state="translated">This class implements a locking mechanism for the document. It allows multiple readers or one writer, and writers must wait until all observers of the document have been notified of a previous change before beginning another mutation to the document. The read lock is acquired and released using the &lt;code&gt;render&lt;/code&gt; method. A write lock is acquired by the methods that mutate the document, and are held for the duration of the method call. Notification is done on the thread that produced the mutation, and the thread has full read access to the document for the duration of the notification, but other readers are kept out until the notification has finished. The notification is a beans event notification which does not allow any further mutations until all listeners have been notified.</target>
        </trans-unit>
        <trans-unit id="d3e393f3245e5a20921a77d3639930f2b2fcf22f" translate="yes" xml:space="preserve">
          <source>This class implements a lookup operation from the source to the destination.</source>
          <target state="translated">This class implements a lookup operation from the source to the destination.</target>
        </trans-unit>
        <trans-unit id="f99ad5222ca2f8befd05982068c6ed4424477ac4" translate="yes" xml:space="preserve">
          <source>This class implements a lookup operation from the source to the destination. The LookupTable object may contain a single array or multiple arrays, subject to the restrictions below.</source>
          <target state="translated">This class implements a lookup operation from the source to the destination. The LookupTable object may contain a single array or multiple arrays, subject to the restrictions below.</target>
        </trans-unit>
        <trans-unit id="3482ce37d428075fdb1a327b831a0f648f0c8f45" translate="yes" xml:space="preserve">
          <source>This class implements a stream filter for reading compressed data in the GZIP file format.</source>
          <target state="translated">이 클래스는 GZIP 파일 형식으로 압축 된 데이터를 읽기위한 스트림 필터를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="e57935a75c00f55d0a7c2b4a770d5088109669b9" translate="yes" xml:space="preserve">
          <source>This class implements a stream filter for uncompressing data in the &quot;deflate&quot; compression format.</source>
          <target state="translated">이 클래스는 &quot;deflate&quot;압축 형식으로 데이터를 압축 해제하기위한 스트림 필터를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="1a389365e0ee166c500af91b15a408c1d800eafd" translate="yes" xml:space="preserve">
          <source>This class implements a stream filter for uncompressing data in the &quot;deflate&quot; compression format. It is also used as the basis for other decompression filters, such as GZIPInputStream.</source>
          <target state="translated">이 클래스는 &quot;deflate&quot;압축 형식으로 데이터를 압축 해제하기위한 스트림 필터를 구현합니다. 또한 GZIPInputStream과 같은 다른 압축 해제 필터의 기초로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7d32b9ae2ddeec1e957e4c9b4a9fa002314c0e37" translate="yes" xml:space="preserve">
          <source>This class implements a stream filter for writing compressed data in the GZIP file format.</source>
          <target state="translated">이 클래스는 GZIP 파일 형식으로 압축 된 데이터를 쓰기위한 스트림 필터를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="a3e2dd706f2a4c8a1ccd16cb574b686e61831f2a" translate="yes" xml:space="preserve">
          <source>This class implements a vector of bits that grows as needed.</source>
          <target state="translated">이 클래스는 필요에 따라 커지는 비트 벡터를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="01ed67a1fb887460141312271abdaa85e27af705" translate="yes" xml:space="preserve">
          <source>This class implements a vector of bits that grows as needed. Each component of the bit set has a &lt;code&gt;boolean&lt;/code&gt; value. The bits of a &lt;code&gt;BitSet&lt;/code&gt; are indexed by nonnegative integers. Individual indexed bits can be examined, set, or cleared. One &lt;code&gt;BitSet&lt;/code&gt; may be used to modify the contents of another &lt;code&gt;BitSet&lt;/code&gt; through logical AND, logical inclusive OR, and logical exclusive OR operations.</source>
          <target state="translated">이 클래스는 필요에 따라 커지는 비트 벡터를 구현합니다. 비트 세트의 각 구성 요소에는 &lt;code&gt;boolean&lt;/code&gt; 값이 있습니다. &lt;code&gt;BitSet&lt;/code&gt; 의 비트는 음이 아닌 정수로 인덱싱됩니다. 개별 인덱스 비트를 검사, 설정 또는 지울 수 있습니다. 하나의 &lt;code&gt;BitSet&lt;/code&gt; 을 사용하여 논리적 AND, 논리적 포함 OR 및 논리적 독점 OR 연산을 통해 다른 &lt;code&gt;BitSet&lt;/code&gt; 의 내용을 수정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d5745a09618a375c0e7fac485c3c2388cbf0b64b" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support appropriate for list children.</source>
          <target state="translated">This class implements accessibility support appropriate for list children.</target>
        </trans-unit>
        <trans-unit id="af2557f53e219caf757887ece173a296b6687225" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for List children.</source>
          <target state="translated">This class implements accessibility support for List children.</target>
        </trans-unit>
        <trans-unit id="e9e6495021a882ff3bd6a5057a7430f3253e188b" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for List children. It provides an implementation of the Java Accessibility API appropriate to list children user-interface elements.</source>
          <target state="translated">This class implements accessibility support for List children. It provides an implementation of the Java Accessibility API appropriate to list children user-interface elements.</target>
        </trans-unit>
        <trans-unit id="ee14cfd14a208b35c8e225a11a3dc4a997024c56" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;AbstractButton&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;AbstractButton&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="566e1ad6a6af9b7f78cff34cbdd0dc4116de856b" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;AbstractButton&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to button and menu item user-interface elements.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;AbstractButton&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to button and menu item user-interface elements.</target>
        </trans-unit>
        <trans-unit id="b577f42a8d94d86b469babaeab9e97666f666a61" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Applet&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;Applet&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="9e8aede7607a3b9a4ba17e1e4c15d1a01dafa04d" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Applet&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to applet user-interface elements.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;Applet&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to applet user-interface elements.</target>
        </trans-unit>
        <trans-unit id="4bddec14528116ea1ecc4196554231873e833b0f" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Box.Filler&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;Box.Filler&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="c7352b3bc8693b8782369c531de2f7cce4cc0edd" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Box&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;Box&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="05ebb5dcf4eed6ba0b93ebb7f7e95576e6cd8e1a" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Button&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;Button&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="a2d21d2ec81c466148abbb551438a68ff7ac2c4a" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Button&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to button user-interface elements.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;Button&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to button user-interface elements.</target>
        </trans-unit>
        <trans-unit id="e471e9ffa0a250d514dd4884eb029c914faf00d5" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Canvas&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;Canvas&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="d471331c0c12feb2ae01c555f1300d74dbdcadcf" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Canvas&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to canvas user-interface elements.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;Canvas&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to canvas user-interface elements.</target>
        </trans-unit>
        <trans-unit id="09afee085ac6761046455381a3641c4f0e9d9aa5" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;CellRendererPane&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;CellRendererPane&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="8f34eaa6353967c52325b918fcade0f143665296" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Checkbox&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;Checkbox&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="e37b04fb065bc9d4d30dcc712830a5948d461663" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Checkbox&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to checkbox user-interface elements.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;Checkbox&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to checkbox user-interface elements.</target>
        </trans-unit>
        <trans-unit id="fca9d04e4d08db4dbcce9a045cf8449e1c9902a4" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;CheckboxMenuItem&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to checkbox menu item user-interface elements.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;CheckboxMenuItem&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to checkbox menu item user-interface elements.</target>
        </trans-unit>
        <trans-unit id="4eafee4010307154825e80fa6f7a9c5e226c26d2" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Choice&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;Choice&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="5d04549a6bd98310cc27c706cb83ca24336f6ba3" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Choice&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to choice user-interface elements.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;Choice&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to choice user-interface elements.</target>
        </trans-unit>
        <trans-unit id="1390bb9a7a25a7b8e961fe988b1b57c96f49a9eb" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Dialog&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;Dialog&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="8fa5418804b6d8c224d5985cf7d73974c7418957" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Dialog&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to dialog user-interface elements.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;Dialog&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to dialog user-interface elements.</target>
        </trans-unit>
        <trans-unit id="ba0bbc9b012deec312425eb7e24c4da5ed0192af" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Frame&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;Frame&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="dabe02bc570ee9221bf7be271b6a8b47387955f5" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Frame&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to frame user-interface elements.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;Frame&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to frame user-interface elements.</target>
        </trans-unit>
        <trans-unit id="3223c55235dc14f53055ec93cadfbb3368c0412a" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;ImageIcon&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;ImageIcon&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="1e1b92e582855d36fb2b76ddeadaa7ef992b6886" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;ImageIcon&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to image icon user-interface elements.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;ImageIcon&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to image icon user-interface elements.</target>
        </trans-unit>
        <trans-unit id="5548c0afd67a1060a6f52493bad18140569a9e0b" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JApplet&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;JApplet&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="594666b0c1e1addbc211dc76fe27b6cf312eac37" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JButton&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;JButton&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="0b3b138de5397b09344a1428b2ffb7f33be1a619" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JButton&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to button user-interface elements.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;JButton&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to button user-interface elements.</target>
        </trans-unit>
        <trans-unit id="06c313881dc93f04c54638283d7fc45048d8f92c" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JCheckBox&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;JCheckBox&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="7a5e1cfb385bed34d2fa824c39e9cde6771acccc" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JCheckBox&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to check box user-interface elements.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;JCheckBox&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to check box user-interface elements.</target>
        </trans-unit>
        <trans-unit id="fe581fa26f9294cdaa62af1cfadce416c532172b" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JCheckBoxMenuItem&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;JCheckBoxMenuItem&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="7ac88160d357533732f797326544ddb68f4426a4" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JCheckBoxMenuItem&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to checkbox menu item user-interface elements.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;JCheckBoxMenuItem&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to checkbox menu item user-interface elements.</target>
        </trans-unit>
        <trans-unit id="a164f674d5ad48462456ca63560db9115e853122" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JColorChooser&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;JColorChooser&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="7d59c7ef21f10c335ecf58c2aef969d30103f162" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JColorChooser&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to color chooser user-interface elements.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;JColorChooser&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to color chooser user-interface elements.</target>
        </trans-unit>
        <trans-unit id="31bd974030f448871c6fbf148a575d37d13dc3c7" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JComboBox&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;JComboBox&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="07e0de3f17afc36af976866e74bab7cd7804f048" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JComboBox&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to Combo Box user-interface elements.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;JComboBox&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to Combo Box user-interface elements.</target>
        </trans-unit>
        <trans-unit id="fcb6ff2af4a817bd0cd1ec6c2ea9f16abd8a489a" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JDesktopPane&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;JDesktopPane&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="55ab5fa89ddda591eb99e095983b5737412b9785" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JDesktopPane&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to desktop pane user-interface elements.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;JDesktopPane&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to desktop pane user-interface elements.</target>
        </trans-unit>
        <trans-unit id="1f71f9d88c74726e52bfeebf91bb146e02a18012" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JDialog&lt;/code&gt; class.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;JDialog&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="c62aebcb831e21109894d4a7254857fa0d138954" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JDialog&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to dialog user-interface elements.</source>
          <target state="translated">This class implements accessibility support for the &lt;code&gt;JDialog&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to dialog user-interface elements.</target>
        </trans-unit>
        <trans-unit id="84bfe5c6063ba7a88c4e7e012200a364990000b2" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JEditorPane&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JEditorPane&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="a93e182d03ff213c946353503b815b2be530c9d7" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JEditorPane&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to editor pane user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JEditorPane&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 편집기 창 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c98e8262de4ef53c7164858be447b58810427a18" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JFileChooser&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JFileChooser&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="ef7532b92400468c7efe8b61ba6265576e41a0fe" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JFileChooser&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to file chooser user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JFileChooser&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 파일 선택기 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c2226336c98ba35238b67929d2a87995eb9ffcca" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JFrame&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JFrame&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="e075745fcb8e115253b500d1905567beb33dd9c4" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JFrame&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to frame user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JFrame&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 프레임 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="89de96de07eaffd8ae3f8ee4918cd40a430aa900" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JInternalFrame.JDesktopIcon&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JInternalFrame.JDesktopIcon&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다 .</target>
        </trans-unit>
        <trans-unit id="bb791f84fc043d99c1d24c1c3617b5f1ba089434" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JInternalFrame.JDesktopIcon&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to desktop icon user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JInternalFrame.JDesktopIcon&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다 . 데스크탑 아이콘 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="586e59678a5e788b3d923860fa2c049b8857cb5e" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JInternalFrame&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JInternalFrame&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다 .</target>
        </trans-unit>
        <trans-unit id="e41409bf2e4a9c0c2a7eb83025527c42907999a8" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JInternalFrame&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to internal frame user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JInternalFrame&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다 . 내부 프레임 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="65853b18c1eda2781b916ace9189a8a08a36187c" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JLayeredPane&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JLayeredPane&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="0df2025a802fc23928ab35fa42a30a5a73046c53" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JLayeredPane&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to layered pane user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JLayeredPane&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 계층화 된 창 사용자 인터페이스 요소에 적합한 Java Accessibility API 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c40fb505ff1c91c8902f41a258d7933fe276a384" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JList&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JList&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="953b4fbc820674e2cdd1bd428947c695c4f1615b" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JList&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to list user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JList&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 사용자 인터페이스 요소를 나열하는 데 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0ab40727b4fb3d7ae10b282d70c0ed75937d4114" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JMenu&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JMenu&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="53f77ae5fa15d72aa4a5bb4f7d5e1f19b5017b52" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JMenu&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to menu user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JMenu&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 메뉴 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="49702b59ba55086f5bf006f3603408c063298c52" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JMenuBar&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JMenuBar&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="eeee34ddc6484df040a2f20d4223385ba7869159" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JMenuBar&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to menu bar user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JMenuBar&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 메뉴 모음 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="77fe129bfd4fd92cb2969d5873e5b82b9f7f8ab4" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JMenuItem&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JMenuItem&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="7d7923d143d4da22ee4101185022490979fb32be" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JMenuItem&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to menu item user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JMenuItem&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 메뉴 항목 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="94f2eea9b670dd685995c7cf992ff4135e21d853" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JOptionPane&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JOptionPane&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="0e77ad65c4f8353f6b17655c9b3a7a94b208ffda" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JOptionPane&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to option pane user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JOptionPane&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 옵션 창 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="df71c203854f990950a9db2374e64d8047e5ec4f" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JPanel&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JPanel&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="0640b3351f1f21fa637e5f8fdd8c2914a53c1cdf" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JPanel&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to panel user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JPanel&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 패널 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6bb2d4b7ce5dafd43975a5a96c365c1bd9dcf9dc" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JPasswordField&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JPasswordField&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다 .</target>
        </trans-unit>
        <trans-unit id="7489d70f3df810503427e133c292bdb03649abd5" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JPasswordField&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to password field user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JPasswordField&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다 . 암호 필드 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="592eac708b9903520afe88c3a845f7193d2ee425" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JPopupMenu&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JPopupMenu&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="c704e5e43d02ac86918d6cb192b3fc6f2e2568b3" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JPopupMenu&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to popup menu user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JPopupMenu&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 팝업 메뉴 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e5aba12155e39ac97b3e46c1acdcd5cae9a85aa6" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JProgressBar&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JProgressBar&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="dcbf7111aebe1a16b0c85803ef47de5878ce8c11" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JProgressBar&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to progress bar user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JProgressBar&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 진행률 표시 줄 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7f8904cbaef4e31bd4694bb23523e55847d77e25" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JRadioButton&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JRadioButton&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="c34107ac05d14bf0de56a3f60281c8b9422b1bc7" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JRadioButton&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to radio button user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JRadioButton&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 라디오 버튼 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="62d229b228274e77527c19a948e6159ca9eab821" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="38b673128bf2a938e73b573fdc202160e199419a" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt; user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt; 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="7b0798b628e3fe44f06b51bd00faa0c6c5003a22" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JRootPane&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JRootPane&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="abb498d0ebd1ac03f284f220a09d77674e151aee" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JRootPane&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to root pane user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JRootPane&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 루트 창 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d1190724013559052ef8e7dd3004654f63435e7c" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JScrollBar&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JScrollBar&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="f0b4d7725cbc4ba10ae9d51fb21b298a10550436" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JScrollBar&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to scroll bar user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JScrollBar&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 스크롤 막대 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="697045fa2a8939209f079bce22280e17027798e7" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JScrollPane&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JScrollPane&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="e0cceaaccf8ce7b304de9d89c2357512d3abe4b2" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JScrollPane&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to scroll pane user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JScrollPane&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 스크롤 창 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="782d424aeffeaadf8b5b338a4079bfdd25919bf3" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JSeparator&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JSeparator&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="2c418345f81b2758218fc13c3396b5fe628f59a0" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JSeparator&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to separator user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JSeparator&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 사용자 인터페이스 요소 구분자에 적합한 Java Accessibility API 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d33f7983510c13d7baefdb4fba15b785a5415859" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JSlider&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JSlider&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="8a4a6782e5088e5efecf8fb9e3ee1763b44e7920" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JSlider&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to slider user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JSlider&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 슬라이더 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a330ebaf11d060b6abef543af32ed4b0499a1b14" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JSplitPane&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JSplitPane&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다 .</target>
        </trans-unit>
        <trans-unit id="fb96df0ec1c6f76c44e10e5ed45814345633231f" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JSplitPane&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to split pane user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JSplitPane&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다 . 분할 창 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="44ea2f13be8326db52dc8378301e69b7e4d665fc" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JTabbedPane&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JTabbedPane&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="aa3db20175a0f6d891f1c274080e03a3975a4b46" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JTabbedPane&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to tabbed pane user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JTabbedPane&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 탭 창 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0eb9a34f8387f6a991723a2b70841e6c5101610e" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JTable&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JTable&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="d39f877b3806c52a0db1bfe6e42c80740ef2ffbc" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JTable&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to table user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JTable&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 테이블 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="380c48e97d697180466247b40cdde700450e8b09" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JTableHeader&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JTableHeader&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="094af5ac215c1544096ffb17e32651166f4c893e" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JTableHeader&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to table header user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JTableHeader&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 테이블 헤더 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f56f3524fcfeb92438dc62c822bbc48e8cf7a952" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JTextArea&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JTextArea&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="197254bd8d5a5e3c4fb5b380e74fa1f025afd4e3" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JTextArea&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to text area user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JTextArea&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 텍스트 영역 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="bbd5906b9a235b795c407f59aff3bc620e7c840b" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JTextComponent&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JTextComponent&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="a62841cc21ae6407790a1fc25cc207b25a76b7bd" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JTextComponent&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to menu user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JTextComponent&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 메뉴 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6e4a94f30da7ad391d2f2e518939d186629c6073" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JTextField&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JTextField&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="644fd6e261a577b1f7d3784b402d42b3820d8c30" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JTextField&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to text field user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JTextField&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 텍스트 필드 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="98a6d4f19077a9d036fe5d4d0093cb0fb045354b" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JToggleButton&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JToggleButton&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="9d15c270dca01df7b4c78860f29851fc749c4cd9" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JToggleButton&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to toggle button user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JToggleButton&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 버튼 사용자 인터페이스 요소를 전환하는 데 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5ae2a73335970a7bcc95ab4327a1a9787cfdc7bf" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JToolBar&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JToolBar&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="d2ddae2da7d1dab51dae2738659b3f357b5b1e2c" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JToolBar&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to toolbar user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JToolBar&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 툴바 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="46d6c907679793fe78a114a04ac56a68a857b659" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JToolTip&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JToolTip&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="68c61b4cf1004f6054c7a1b53bcceb4b4acb9ac3" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JToolTip&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to tool tip user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JToolTip&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 도구 팁 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6c37922cf487108b1e8a9e22e3574c4aae60572f" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JTree&lt;/code&gt; child.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JTree&lt;/code&gt; 자식에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="20051505890d13f791a93d6bf16eb4e451f60833" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JTree&lt;/code&gt; child. It provides an implementation of the Java Accessibility API appropriate to tree nodes.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JTree&lt;/code&gt; 자식에 대한 접근성 지원을 구현 합니다. 트리 노드에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0140cecddd27debefc096377d6ea8451f3bc9c6e" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JTree&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JTree&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="a245cd6c4394bcc91cc4deac019c6b93f970f4d6" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JTree&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to tree user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JTree&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 트리 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="556fa77531a9e6a2091778030485c5259be7e1bd" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JViewport&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JViewport&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="65e60577e251f2c21434415bbea2310bd8b6d7ac" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JViewport&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to viewport user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JViewport&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 뷰포트 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b2033f4419dd8bc30e8868a3c0cae6ad0811e4b0" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JWindow&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JWindow&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="f11d2ec686cb3e9bc56e6d97b05f8d9eb314961d" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;JWindow&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to window user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;JWindow&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 창 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="adc9aea8aa1c004315fbfc9e9906b9a869062898" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Label&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Label&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="3b4a4d95034eae7236ac22cf5d73d548fa2a533b" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Label&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to label user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Label&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 사용자 인터페이스 요소에 레이블을 지정하는 데 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b515699a3ac4c51df21dd383fd8fb6a4f8ff3ca1" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;List&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;List&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="a9b24b1ce2ea475a83c6f461c8805bd8f828e9ba" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;List&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to list user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;List&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 사용자 인터페이스 요소를 나열하는 데 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="296299eda7ccd5d3856aae28822ab097be539c8f" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Menu&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to menu user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Menu&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 메뉴 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7d935305b6c304d4fd50f85f72636d3060eeb7fc" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;MenuBar&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to menu bar user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;MenuBar&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 메뉴 모음 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ee16a39f567db7b3cbdf44529a43394cab602000" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;MenuItem&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to menu item user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;MenuItem&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 메뉴 항목 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="54148b21f828ac716925f581a19229d2a9a30384" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Panel&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Panel&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="8e633918cf1f516acd619ee16209d14c59c2909e" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Panel&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to panel user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Panel&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 패널 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6fa21b345ec597ca166f4bd7a4b33b903dd2de65" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;ScrollPane&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;ScrollPane&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="491863f437b692088d6737c663e4bef3e151e367" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;ScrollPane&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to scroll pane user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;ScrollPane&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 스크롤 창 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c2be6477bba4ed586e06f3ed283fc746cdcacd5a" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Scrollbar&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Scrollbar&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="f970beddde4da2d7418ea9dae96f1b5e1addff3b" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Scrollbar&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to scrollbar user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Scrollbar&lt;/code&gt; 클래스에 대한 접근성 지원을 구현 합니다. 스크롤바 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="285d050af50595041bb574aff9f24ba5946f47be" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;TextArea&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;TextArea&lt;/code&gt; 클래스에 대한 내게 필요한 옵션 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="d81542fcf3dfeeb1373bec760b5e7c35e3b224f7" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;TextArea&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to text area user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;TextArea&lt;/code&gt; 클래스에 대한 내게 필요한 옵션 지원을 구현 합니다. 텍스트 영역 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1db925eaad15ce253c847a63acfe55e92c3e6ff8" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;TextComponent&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;TextComponent&lt;/code&gt; 클래스에 대한 내게 필요한 옵션 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="25118575141b0637afaf8a4e35ef85c8cdd57f02" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;TextComponent&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to text component user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;TextComponent&lt;/code&gt; 클래스에 대한 내게 필요한 옵션 지원을 구현 합니다. 텍스트 구성 요소 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a72694a4a7a19a416bdfd66d8a6951e4b8fea498" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;TextField&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;TextField&lt;/code&gt; 클래스에 대한 내게 필요한 옵션 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="5eab42bce4805a7dfc471feac2d5687766103384" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;TextField&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to text field user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;TextField&lt;/code&gt; 클래스에 대한 내게 필요한 옵션 지원을 구현 합니다. 텍스트 필드 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0171db21b8b983d9a778027bfd08f2c49e109a23" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Window&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Window&lt;/code&gt; 클래스에 대한 내게 필요한 옵션 지원을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="f8a9e63d7de862ba34ede31ea478665019a459e6" translate="yes" xml:space="preserve">
          <source>This class implements accessibility support for the &lt;code&gt;Window&lt;/code&gt; class. It provides an implementation of the Java Accessibility API appropriate to window user-interface elements.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Window&lt;/code&gt; 클래스에 대한 내게 필요한 옵션 지원을 구현 합니다. 창 사용자 인터페이스 요소에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e6e2670f7d2d9b1dc4ec24ec27fc10c0d3b27504" translate="yes" xml:space="preserve">
          <source>This class implements an IP Socket Address (IP address + port number) It can also be a pair (hostname + port number), in which case an attempt will be made to resolve the hostname.</source>
          <target state="translated">이 클래스는 IP 소켓 주소 (IP 주소 + 포트 번호)를 구현합니다. 또한 쌍 (호스트 이름 + 포트 번호) 일 수도 있습니다.이 경우 호스트 이름을 확인하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="1fa0726ccfeaebc3e77d348232ff4528921df650" translate="yes" xml:space="preserve">
          <source>This class implements an IP Socket Address (IP address + port number) It can also be a pair (hostname + port number), in which case an attempt will be made to resolve the hostname. If resolution fails then the address is said to be</source>
          <target state="translated">이 클래스는 IP 소켓 주소 (IP 주소 + 포트 번호)를 구현합니다. 또한 쌍 (호스트 이름 + 포트 번호) 일 수도 있습니다.이 경우 호스트 이름을 확인하려고 시도합니다. 해결에 실패하면 주소는</target>
        </trans-unit>
        <trans-unit id="fc6b822e66836a77598fe631f58367d5d54287ff" translate="yes" xml:space="preserve">
          <source>This class implements an encoder for encoding byte data using the Base64 encoding scheme as specified in RFC 4648 and RFC 2045.</source>
          <target state="translated">이 클래스는 RFC 4648 및 RFC 2045에 지정된 Base64 인코딩 체계를 사용하여 바이트 데이터를 인코딩하기위한 인코더를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="098977e9d2407edeb71b650754e80ccc9eb33ffc" translate="yes" xml:space="preserve">
          <source>This class implements an input stream filter for reading files in the ZIP file format.</source>
          <target state="translated">이 클래스는 ZIP 파일 형식의 파일을 읽기위한 입력 스트림 필터를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="3b06ccf19ef90ba80b3384247cd1a192fe265ae0" translate="yes" xml:space="preserve">
          <source>This class implements an input stream filter for reading files in the ZIP file format. Includes support for both compressed and uncompressed entries.</source>
          <target state="translated">이 클래스는 ZIP 파일 형식의 파일을 읽기위한 입력 스트림 필터를 구현합니다. 압축 및 압축되지 않은 항목을 모두 지원합니다.</target>
        </trans-unit>
        <trans-unit id="2f90f14711c964b2a80a941d9bdf327bf9a1e149" translate="yes" xml:space="preserve">
          <source>This class implements an output stream filter for compressing data in the &quot;deflate&quot; compression format.</source>
          <target state="translated">이 클래스는 &quot;deflate&quot;압축 형식으로 데이터를 압축하기위한 출력 스트림 필터를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="78a9cfdd21803201bf731967c8a1ff7bba457b74" translate="yes" xml:space="preserve">
          <source>This class implements an output stream filter for compressing data in the &quot;deflate&quot; compression format. It is also used as the basis for other types of compression filters, such as GZIPOutputStream.</source>
          <target state="translated">이 클래스는 &quot;deflate&quot;압축 형식으로 데이터를 압축하기위한 출력 스트림 필터를 구현합니다. 또한 GZIPOutputStream과 같은 다른 유형의 압축 필터의 기초로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4ec9b412e0f3542534bd54ad7aeaf28cfcbbc42a" translate="yes" xml:space="preserve">
          <source>This class implements an output stream filter for writing files in the ZIP file format.</source>
          <target state="translated">이 클래스는 ZIP 파일 형식의 파일을 쓰기위한 출력 스트림 필터를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="f9235a6e06a2b74b9ede6b10c9fb06d29a8e932f" translate="yes" xml:space="preserve">
          <source>This class implements an output stream filter for writing files in the ZIP file format. Includes support for both compressed and uncompressed entries.</source>
          <target state="translated">이 클래스는 ZIP 파일 형식의 파일을 쓰기위한 출력 스트림 필터를 구현합니다. 압축 및 압축되지 않은 항목을 모두 지원합니다.</target>
        </trans-unit>
        <trans-unit id="abea2c7a576b4dbdd0fd3bc7b0b8cc11a1e53f22" translate="yes" xml:space="preserve">
          <source>This class implements an output stream in which the data is written into a byte array.</source>
          <target state="translated">이 클래스는 데이터가 바이트 배열에 기록되는 출력 스트림을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="549b64956f9981b4003014c36a37b78ce6da64e1" translate="yes" xml:space="preserve">
          <source>This class implements an output stream in which the data is written into a byte array. The buffer automatically grows as data is written to it. The data can be retrieved using &lt;code&gt;toByteArray()&lt;/code&gt; and &lt;code&gt;toString()&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 데이터가 바이트 배열에 기록되는 출력 스트림을 구현합니다. 데이터가 기록되면 버퍼가 자동으로 커집니다. &lt;code&gt;toByteArray()&lt;/code&gt; 및 &lt;code&gt;toString()&lt;/code&gt; 사용하여 데이터를 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ce4f47882a1ffec82dc6c4b0f1b95934cbde7c36" translate="yes" xml:space="preserve">
          <source>This class implements client sockets (also called just &quot;sockets&quot;).</source>
          <target state="translated">이 클래스는 클라이언트 소켓 ( &quot;소켓&quot;이라고도 함)을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="cc174a1ccc47b28c856fb71309214f251bc1137c" translate="yes" xml:space="preserve">
          <source>This class implements client sockets (also called just &quot;sockets&quot;). A socket is an endpoint for communication between two machines.</source>
          <target state="translated">이 클래스는 클라이언트 소켓 ( &quot;소켓&quot;이라고도 함)을 구현합니다. 소켓은 두 시스템 간의 통신을위한 엔드 포인트입니다.</target>
        </trans-unit>
        <trans-unit id="115afcbd0827348c0d6d0af9346fadc9103a21b3" translate="yes" xml:space="preserve">
          <source>This class implements of the &lt;a href=&quot;notificationfilter&quot;&gt;&lt;code&gt;NotificationFilter&lt;/code&gt;&lt;/a&gt; interface for the &lt;a href=&quot;attributechangenotification&quot;&gt;&lt;code&gt;attribute change notification&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 클래스 는 &lt;a href=&quot;attributechangenotification&quot;&gt; &lt;code&gt;attribute change notification&lt;/code&gt; &lt;/a&gt; 위한 &lt;a href=&quot;notificationfilter&quot;&gt; &lt;code&gt;NotificationFilter&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="bfdfb7f8c2cd45f6183663376b83dc36c0c4399c" translate="yes" xml:space="preserve">
          <source>This class implements of the &lt;a href=&quot;notificationfilter&quot;&gt;&lt;code&gt;NotificationFilter&lt;/code&gt;&lt;/a&gt; interface for the &lt;a href=&quot;attributechangenotification&quot;&gt;&lt;code&gt;attribute change notification&lt;/code&gt;&lt;/a&gt;. The filtering is performed on the name of the observed attribute.</source>
          <target state="translated">이 클래스 는 &lt;a href=&quot;attributechangenotification&quot;&gt; &lt;code&gt;attribute change notification&lt;/code&gt; &lt;/a&gt; 위한 &lt;a href=&quot;notificationfilter&quot;&gt; &lt;code&gt;NotificationFilter&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현합니다 . 관찰 된 속성의 이름에 대해 필터링이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="c5a1b8ef3eb99d8acc7197735ca0e28fae6b2ee0" translate="yes" xml:space="preserve">
          <source>This class implements server sockets.</source>
          <target state="translated">이 클래스는 서버 소켓을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="ab4e961fe3fd57910bc42ba11c3d3ea61d5dc018" translate="yes" xml:space="preserve">
          <source>This class implements server sockets. A server socket waits for requests to come in over the network. It performs some operation based on that request, and then possibly returns a result to the requester.</source>
          <target state="translated">이 클래스는 서버 소켓을 구현합니다. 서버 소켓은 네트워크를 통해 요청이 들어 오기를 기다립니다. 해당 요청에 따라 일부 작업을 수행 한 다음 요청자에게 결과를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41f1944aba74fb8d4edb802ed5fcc4c7fc79c579" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;a href=&quot;../lang/charsequence&quot;&gt;&lt;code&gt;CharSequence&lt;/code&gt;&lt;/a&gt; interface so that character buffers may be used wherever character sequences are accepted, for example in the regular-expression package &lt;a href=&quot;../util/regex/package-summary&quot;&gt;&lt;code&gt;java.util.regex&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;../lang/charsequence&quot;&gt; &lt;code&gt;CharSequence&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현하여 문자 시퀀스가 ​​허용되는 모든 곳에서 문자 버퍼를 사용할 수 있습니다 (예 : 정규 표현식 패키지 &lt;a href=&quot;../util/regex/package-summary&quot;&gt; &lt;code&gt;java.util.regex&lt;/code&gt; )&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a1bd35a92d7c9f959f0803313b9abd37c694be67" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;a href=&quot;../lang/charsequence&quot;&gt;&lt;code&gt;CharSequence&lt;/code&gt;&lt;/a&gt; interface so that character buffers may be used wherever character sequences are accepted, for example in the regular-expression package &lt;code&gt;&lt;a href=&quot;../util/regex/package-summary&quot;&gt;&lt;code&gt;java.util.regex&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;../lang/charsequence&quot;&gt; &lt;code&gt;CharSequence&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현하여 문자 시퀀스가 ​​허용되는 모든 위치 (예 : 정규식 패키지 &lt;code&gt;&lt;a href=&quot;../util/regex/package-summary&quot;&gt;&lt;code&gt;java.util.regex&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; ) 에서 문자 버퍼를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3cba6c5dab24c2c3a14a2205b5f7075955603acd" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;code&gt;EncryptedPrivateKeyInfo&lt;/code&gt; type as defined in PKCS #8.</source>
          <target state="translated">이 클래스 는 PKCS # 8에 정의 &lt;code&gt;EncryptedPrivateKeyInfo&lt;/code&gt; 유형을 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="2c85a8537f4799bebae3138366bfa7ac70b6ad81" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;code&gt;Map&lt;/code&gt; interface with a hash table, using reference-equality in place of object-equality when comparing keys (and values).</source>
          <target state="translated">이 클래스는 키와 값을 비교할 때 객체 평등 대신 참조 평등을 사용하여 해시 테이블로 &lt;code&gt;Map&lt;/code&gt; 인터페이스를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="cff55ae97711824a1154b4780df0d396383a5dca" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;code&gt;Map&lt;/code&gt; interface with a hash table, using reference-equality in place of object-equality when comparing keys (and values). In other words, in an &lt;code&gt;IdentityHashMap&lt;/code&gt;, two keys &lt;code&gt;k1&lt;/code&gt; and &lt;code&gt;k2&lt;/code&gt; are considered equal if and only if &lt;code&gt;(k1==k2)&lt;/code&gt;. (In normal &lt;code&gt;Map&lt;/code&gt; implementations (like &lt;code&gt;HashMap&lt;/code&gt;) two keys &lt;code&gt;k1&lt;/code&gt; and &lt;code&gt;k2&lt;/code&gt; are considered equal if and only if &lt;code&gt;(k1==null ? k2==null : k1.equals(k2))&lt;/code&gt;.)</source>
          <target state="translated">이 클래스는 키와 값을 비교할 때 객체 평등 대신 참조 평등을 사용하여 해시 테이블로 &lt;code&gt;Map&lt;/code&gt; 인터페이스를 구현합니다 . 즉, &lt;code&gt;IdentityHashMap&lt;/code&gt; 에서 &lt;code&gt;(k1==k2)&lt;/code&gt; 경우에만 두 개의 키 &lt;code&gt;k1&lt;/code&gt; 및 &lt;code&gt;k2&lt;/code&gt; 가 동일한 것으로 간주됩니다 . ( &lt;code&gt;HashMap&lt;/code&gt; 과 같은 일반 &lt;code&gt;Map&lt;/code&gt; 구현에서 ( &lt;code&gt;(k1==null ? k2==null : k1.equals(k2))&lt;/code&gt; 경우에만 두 개의 키 &lt;code&gt;k1&lt;/code&gt; 및 &lt;code&gt;k2&lt;/code&gt; 는 동일한 것으로 간주됩니다 .)</target>
        </trans-unit>
        <trans-unit id="dc0d68cb04b2f9ddf0d6666cdb1917011ae012ae" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;code&gt;Set&lt;/code&gt; interface, backed by a hash table (actually a &lt;code&gt;HashMap&lt;/code&gt; instance).</source>
          <target state="translated">이 클래스 는 해시 테이블 (실제로는 &lt;code&gt;HashMap&lt;/code&gt; 인스턴스)을 기반으로 &lt;code&gt;Set&lt;/code&gt; 인터페이스를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="e55fac8a1edacfcc68482b02dc802150c59dfa28" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;code&gt;Set&lt;/code&gt; interface, backed by a hash table (actually a &lt;code&gt;HashMap&lt;/code&gt; instance). It makes no guarantees as to the iteration order of the set; in particular, it does not guarantee that the order will remain constant over time. This class permits the &lt;code&gt;null&lt;/code&gt; element.</source>
          <target state="translated">이 클래스 는 해시 테이블 (실제로는 &lt;code&gt;HashMap&lt;/code&gt; 인스턴스)을 기반으로 &lt;code&gt;Set&lt;/code&gt; 인터페이스를 구현합니다 . 세트의 반복 순서에 대해서는 보증하지 않습니다. 특히, 주문이 시간이 지남에 따라 일정하게 유지된다는 보장은 없습니다. 이 클래스는 &lt;code&gt;null&lt;/code&gt; 요소를 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="65fc0e9ffefba5408169db17abbe7c9d7bdb32b2" translate="yes" xml:space="preserve">
          <source>This class implements the LDAPv3 Control for paged-results as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2696.txt&quot;&gt;RFC 2696&lt;/a&gt;. The control's value has the following ASN.1 definition:</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2696.txt&quot;&gt;RFC 2696에&lt;/a&gt; 정의 된 페이징 결과에 대한 LDAPv3 컨트롤을 구현합니다 . 컨트롤 값은 다음과 같은 ASN.1 정의를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="1f595d708b0121a74084d3162c6951639f1daaaa" translate="yes" xml:space="preserve">
          <source>This class implements the LDAPv3 Extended Request for StartTLS as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2830.txt&quot;&gt;Lightweight Directory Access Protocol (v3): Extension for Transport Layer Security&lt;/a&gt; The object identifier for StartTLS is 1.3.6.1.4.1.1466.20037 and no extended request value is defined.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2830.txt&quot;&gt;경량 디렉토리 액세스 프로토콜 (v3)에&lt;/a&gt; 정의 된대로 StartTLS에 대한 LDAPv3 확장 요청을 구현합니다 . 전송 계층 보안을위한 확장 StartTLS의 오브젝트 식별자는 1.3.6.1.4.1.1466.20037이며 확장 요청 값은 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="39cf6249a0ce18f93fb3383fda1deb09f4599850" translate="yes" xml:space="preserve">
          <source>This class implements the LDAPv3 Extended Response for StartTLS as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2830.txt&quot;&gt;Lightweight Directory Access Protocol (v3): Extension for Transport Layer Security&lt;/a&gt; The object identifier for StartTLS is 1.3.6.1.4.1.1466.20037 and no extended response value is defined.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2830.txt&quot;&gt;경량 디렉토리 액세스 프로토콜 (v3)에&lt;/a&gt; 정의 된대로 StartTLS에 대한 LDAPv3 확장 응답을 구현합니다 . 전송 계층 보안을위한 확장 StartTLS의 오브젝트 식별자는 1.3.6.1.4.1.1466.20037이며 확장 된 응답 값은 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5dc7ec26cb11f66381c895667e802166bedc7f90" translate="yes" xml:space="preserve">
          <source>This class implements the LDAPv3 Request Control for ManageDsaIT as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc3296.txt&quot;&gt;RFC 3296&lt;/a&gt;. The control has no control value.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3296.txt&quot;&gt;RFC 3296에&lt;/a&gt; 정의 된 대로 ManageDsaIT에 대한 LDAPv3 요청 제어를 구현합니다 . 컨트롤에는 컨트롤 값이 없습니다.</target>
        </trans-unit>
        <trans-unit id="fd113787648245439787720312dcfaa47bb92996" translate="yes" xml:space="preserve">
          <source>This class implements the LDAPv3 Request Control for server-side sorting as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2891.txt&quot;&gt;RFC 2891&lt;/a&gt;. The control's value has the following ASN.1 definition:</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2891.txt&quot;&gt;RFC 2891에&lt;/a&gt; 정의 된 서버 측 정렬을위한 LDAPv3 요청 제어를 구현합니다 . 컨트롤 값은 다음과 같은 ASN.1 정의를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="4b38ced794fddf3aae0a4be62444ea3327c4469e" translate="yes" xml:space="preserve">
          <source>This class implements the LDAPv3 Response Control for paged-results as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2696&quot;&gt;RFC 2696&lt;/a&gt;. The control's value has the following ASN.1 definition:</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2696&quot;&gt;RFC 2696에&lt;/a&gt; 정의 된 페이징 결과에 대한 LDAPv3 응답 제어를 구현합니다 . 컨트롤 값은 다음과 같은 ASN.1 정의를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="dedc22457b24d662c95dfbd6e3fffc74f58a46cd" translate="yes" xml:space="preserve">
          <source>This class implements the LDAPv3 Response Control for server-side sorting as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2891.txt&quot;&gt;RFC 2891&lt;/a&gt;. The control's value has the following ASN.1 definition:</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2891.txt&quot;&gt;RFC 2891에&lt;/a&gt; 정의 된 서버 측 정렬을위한 LDAPv3 응답 제어를 구현합니다 . 컨트롤 값은 다음과 같은 ASN.1 정의를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="2e8b2fbb6ba6e6cc4dbd749bb8f4b4b6f78e5a88" translate="yes" xml:space="preserve">
          <source>This class implements the Unicode Bidirectional Algorithm.</source>
          <target state="translated">이 클래스는 Unicode Bidirectional Algorithm을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="8435097212a23a9f3f7faa3660b853a0a8b47bb2" translate="yes" xml:space="preserve">
          <source>This class implements the default behaviour for four SAX1 interfaces: EntityResolver, DTDHandler, DocumentHandler, and ErrorHandler. It is now obsolete, but is included in SAX2 to support legacy SAX1 applications. SAX2 applications should use the &lt;a href=&quot;helpers/defaulthandler&quot;&gt;&lt;code&gt;DefaultHandler&lt;/code&gt;&lt;/a&gt; class instead.</source>
          <target state="translated">이 클래스는 EntityResolver, DTDHandler, DocumentHandler 및 ErrorHandler의 네 가지 SAX1 인터페이스에 대한 기본 동작을 구현합니다. 이제 더 이상 사용되지 않지만 레거시 SAX1 애플리케이션을 지원하기 위해 SAX2에 포함되어 있습니다. SAX2 애플리케이션은 대신 &lt;a href=&quot;helpers/defaulthandler&quot;&gt; &lt;code&gt;DefaultHandler&lt;/code&gt; &lt;/a&gt; 클래스를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6c7be12641a6fb204795114b7b5ed46a804d3c09" translate="yes" xml:space="preserve">
          <source>This class incorrectly assumes that bytes adequately represent characters.</source>
          <target state="translated">이 클래스는 바이트가 적절하게 문자를 나타내는 것으로 잘못 가정합니다.</target>
        </trans-unit>
        <trans-unit id="2218ada1b5806864164463099508081ef7d157e5" translate="yes" xml:space="preserve">
          <source>This class incorrectly assumes that bytes adequately represent characters. As of JDK 1.1, the preferred way to operate on character streams is via the new character-stream classes, which include a class for counting line numbers.</source>
          <target state="translated">이 클래스는 바이트가 적절하게 문자를 나타내는 것으로 잘못 가정합니다. JDK 1.1에서, 문자 스트림에서 작동하는 선호되는 방법은 줄 번호를 계산하는 클래스를 포함하는 새로운 문자 스트림 클래스를 이용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="fc552f3b85f6b5f0b04f42ae63aa5a71d192476a" translate="yes" xml:space="preserve">
          <source>This class inflates sequences of ZLIB compressed bytes. The input byte sequence is provided in either byte array or byte buffer, via one of the &lt;code&gt;setInput()&lt;/code&gt; methods. The output byte sequence is written to the output byte array or byte buffer passed to the &lt;code&gt;deflate()&lt;/code&gt; methods.</source>
          <target state="translated">이 클래스는 ZLIB 압축 바이트 시퀀스를 확장합니다. 입력 바이트 시퀀스는 &lt;code&gt;setInput()&lt;/code&gt; 메서드 중 하나를 통해 바이트 배열 또는 바이트 버퍼로 제공됩니다 . 출력 바이트 시퀀스는 출력 바이트 배열 또는 &lt;code&gt;deflate()&lt;/code&gt; 메서드에 전달 된 바이트 버퍼에 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="f14e3b407357f9cce651c259b5c16d7f748eb980" translate="yes" xml:space="preserve">
          <source>This class is Serializable, but all fields are transient, so deserialized conditions have no waiters.</source>
          <target state="translated">이 클래스는 직렬화 가능하지만 모든 필드는 일시적이므로 직렬화 해제 된 조건에는 웨이터가 없습니다.</target>
        </trans-unit>
        <trans-unit id="a1cfd4a949232c7b25ea5e7b14b2468c8561fc12" translate="yes" xml:space="preserve">
          <source>This class is a collection of UI convenience methods which provide a graphical user dialog for browsing print services looked up through the Java Print Service API.</source>
          <target state="translated">이 클래스는 Java 인쇄 서비스 API를 통해 조회 된 인쇄 서비스를 찾아 볼 수있는 그래픽 사용자 대화 상자를 제공하는 UI 편의 메서드 모음입니다.</target>
        </trans-unit>
        <trans-unit id="d1d4305c48dcb069b967a201bb9ea31658f532d5" translate="yes" xml:space="preserve">
          <source>This class is a member of the &lt;a href=&quot;../package-summary#CollectionsFramework&quot;&gt; Java Collections Framework&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;../package-summary#CollectionsFramework&quot;&gt;Java Collections Framework&lt;/a&gt; 의 멤버입니다 .</target>
        </trans-unit>
        <trans-unit id="bdad9f9844b0ba3f48b227e0c74f161cc375e2cf" translate="yes" xml:space="preserve">
          <source>This class is a member of the &lt;a href=&quot;../util/package-summary#CollectionsFramework&quot;&gt; Java Collections Framework&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;../util/package-summary#CollectionsFramework&quot;&gt;Java Collections Framework&lt;/a&gt; 의 멤버입니다 .</target>
        </trans-unit>
        <trans-unit id="9d778150f4d35c00bae50d428b4c01af107eea31" translate="yes" xml:space="preserve">
          <source>This class is a member of the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/collections/index.html&quot;&gt; Java Collections Framework&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/collections/index.html&quot;&gt;Java Collections Framework&lt;/a&gt; 멤버입니다 .</target>
        </trans-unit>
        <trans-unit id="d2a5c7817e0928c11234d5a92c0d74dad4da2b6f" translate="yes" xml:space="preserve">
          <source>This class is a member of the &lt;a href=&quot;package-summary#CollectionsFramework&quot;&gt; Java Collections Framework&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;package-summary#CollectionsFramework&quot;&gt;Java Collections Framework&lt;/a&gt; 의 멤버입니다 .</target>
        </trans-unit>
        <trans-unit id="ae73a21168a485b76a1ac50247c626ccd23df9df" translate="yes" xml:space="preserve">
          <source>This class is a mutable builder intended for use from a single thread.</source>
          <target state="translated">이 클래스는 단일 스레드에서 사용하도록 변경 가능한 빌더입니다.</target>
        </trans-unit>
        <trans-unit id="d583808e2526b135dffcab6a097906137b611799" translate="yes" xml:space="preserve">
          <source>This class is a simple holder for a key pair (a public key and a private key).</source>
          <target state="translated">이 클래스는 키 쌍 ​​(공개 키 및 개인 키)을위한 간단한 홀더입니다.</target>
        </trans-unit>
        <trans-unit id="820cbd2e7b7d06b8267dc3b72ab349617e4e8157" translate="yes" xml:space="preserve">
          <source>This class is a simple holder for a key pair (a public key and a private key). It does not enforce any security, and, when initialized, should be treated like a PrivateKey.</source>
          <target state="translated">이 클래스는 키 쌍 ​​(공개 키 및 개인 키)을위한 간단한 홀더입니다. 보안을 강화하지 않으며 초기화 될 때 PrivateKey처럼 취급해야합니다.</target>
        </trans-unit>
        <trans-unit id="51babbce1e4e09bcc1b8784134a6a7fade70b099" translate="yes" xml:space="preserve">
          <source>This class is a useful aid for creating a spliterator when it is not possible or difficult to efficiently partition elements in a manner allowing balanced parallel computation.</source>
          <target state="translated">이 클래스는 균형 병렬 계산을 허용하는 방식으로 요소를 효율적으로 분할하는 것이 불가능하거나 어려운 경우 스플리터를 만드는 데 유용한 보조 도구입니다.</target>
        </trans-unit>
        <trans-unit id="ae280a40ae4cf4130748792173520179e4ae0005" translate="yes" xml:space="preserve">
          <source>This class is an abstract class so only subclasses can be instantiated.</source>
          <target state="translated">이 클래스는 추상 클래스이므로 하위 클래스 만 인스턴스화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ee878f59ddfc490048939466c41b0731a3b2831" translate="yes" xml:space="preserve">
          <source>This class is an abstraction for certificates that have different formats but important common uses. For example, different types of certificates, such as X.509 and PGP, share general certificate functionality (like encoding and verifying) and some types of information (like a public key).</source>
          <target state="translated">이 클래스는 형식은 다르지만 중요한 일반적인 용도의 인증서에 대한 추상화입니다. 예를 들어 X.509 및 PGP와 같은 다른 유형의 인증서는 일반 인증서 기능 (인코딩 및 확인)과 일부 유형의 정보 (공개 키)를 공유합니다.</target>
        </trans-unit>
        <trans-unit id="c5609aa75f44c6153cfd605bcd7d877b783504e2" translate="yes" xml:space="preserve">
          <source>This class is an abstraction of certificate revocation lists (CRLs) that have different formats but important common uses.</source>
          <target state="translated">이 클래스는 형식은 다르지만 중요한 공통 용도로 사용되는 CRL (인증서 해지 목록)의 추상화입니다.</target>
        </trans-unit>
        <trans-unit id="0291f23ff11fec678a3c29c6bc6545dc3baac078" translate="yes" xml:space="preserve">
          <source>This class is an abstraction of certificate revocation lists (CRLs) that have different formats but important common uses. For example, all CRLs share the functionality of listing revoked certificates, and can be queried on whether or not they list a given certificate.</source>
          <target state="translated">이 클래스는 형식은 다르지만 중요한 공통 용도로 사용되는 CRL (인증서 해지 목록)의 추상화입니다. 예를 들어 모든 CRL은 해지 된 인증서를 나열하는 기능을 공유하며 지정된 인증서를 나열하는지 여부를 쿼리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="cf75337859742a1f9f4f96d3af16ca5ab1fb1d52" translate="yes" xml:space="preserve">
          <source>This class is an array-based implementation of the &lt;code&gt;AbstractMultiResolutionImage&lt;/code&gt; class.</source>
          <target state="translated">This class is an array-based implementation of the &lt;code&gt;AbstractMultiResolutionImage&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="87b1bb856f0d490cf7a7c14155de5f9ce0842861" translate="yes" xml:space="preserve">
          <source>This class is an array-based implementation of the &lt;code&gt;AbstractMultiResolutionImage&lt;/code&gt; class. This class will implement the &lt;code&gt;getResolutionVariant(double destImageWidth, double destImageHeight)&lt;/code&gt; method using a simple algorithm which will return the first image variant in the array that is large enough to satisfy the rendering request. The last image in the array will be returned if no suitable image is found that is as large as the rendering request.</source>
          <target state="translated">This class is an array-based implementation of the &lt;code&gt;AbstractMultiResolutionImage&lt;/code&gt; class. This class will implement the &lt;code&gt;getResolutionVariant(double destImageWidth, double destImageHeight)&lt;/code&gt; method using a simple algorithm which will return the first image variant in the array that is large enough to satisfy the rendering request. The last image in the array will be returned if no suitable image is found that is as large as the rendering request.</target>
        </trans-unit>
        <trans-unit id="d43115f6922f2c068b7296647bbaa635cfec4424" translate="yes" xml:space="preserve">
          <source>This class is an extension of &lt;code&gt;NamingManager&lt;/code&gt;. It contains methods for use by service providers for accessing object factories and state factories, and for getting continuation contexts for supporting federation.</source>
          <target state="translated">이 클래스는 &lt;code&gt;NamingManager&lt;/code&gt; 의 확장입니다 . 서비스 팩토리가 오브젝트 팩토리 및 상태 팩토리에 액세스하고 연합을 지원하기위한 연속 컨텍스트를 얻기 위해 사용하는 메소드가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e7b82996e97910b513075b5af1cf32f8d2eebf6" translate="yes" xml:space="preserve">
          <source>This class is an implementation of interface &lt;code&gt;Doc&lt;/code&gt; that can be used in many common printing requests.</source>
          <target state="translated">이 클래스는 많은 일반적인 인쇄 요청에 사용될 수있는 &lt;code&gt;Doc&lt;/code&gt; 인터페이스의 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="efb5df8f250e90b3a9295facd76a65510c7ccec4" translate="yes" xml:space="preserve">
          <source>This class is an implementation of interface &lt;code&gt;Doc&lt;/code&gt; that can be used in many common printing requests. It can handle all of the presently defined &quot;pre-defined&quot; doc flavors defined as static variables in the &lt;code&gt;DocFlavor&lt;/code&gt; class.</source>
          <target state="translated">This class is an implementation of interface &lt;code&gt;Doc&lt;/code&gt; that can be used in many common printing requests. It can handle all of the presently defined &quot;pre-defined&quot; doc flavors defined as static variables in the &lt;code&gt;DocFlavor&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="a18ed58769607c8c048964840e94cbe383504b75" translate="yes" xml:space="preserve">
          <source>This class is an implementation of interface &lt;code&gt;Doc&lt;/code&gt; that can be used in many common printing requests. It can handle all of the presently defined &quot;pre-defined&quot; doc flavors defined as static variables in the DocFlavor class.</source>
          <target state="translated">이 클래스는 많은 일반적인 인쇄 요청에 사용될 수있는 &lt;code&gt;Doc&lt;/code&gt; 인터페이스의 구현입니다 . DocFlavor 클래스에서 정적 변수로 정의 된 현재 정의 된 &quot;사전 정의 된&quot;doc 플레이버를 모두 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="1fd20bc5549d0d5f731656f1fe1471e69d5b35b4" translate="yes" xml:space="preserve">
          <source>This class is an implementation of the ImageProducer interface which takes an existing image and a filter object and uses them to produce image data for a new filtered version of the original image.</source>
          <target state="translated">This class is an implementation of the ImageProducer interface which takes an existing image and a filter object and uses them to produce image data for a new filtered version of the original image.</target>
        </trans-unit>
        <trans-unit id="8af50340ad6785940862bdfeae3e7b92838f7260" translate="yes" xml:space="preserve">
          <source>This class is an implementation of the ImageProducer interface which takes an existing image and a filter object and uses them to produce image data for a new filtered version of the original image. Furthermore, &lt;code&gt;FilteredImageSource&lt;/code&gt; is safe for use by multiple threads. Here is an example which filters an image by swapping the red and blue components:</source>
          <target state="translated">This class is an implementation of the ImageProducer interface which takes an existing image and a filter object and uses them to produce image data for a new filtered version of the original image. Furthermore, &lt;code&gt;FilteredImageSource&lt;/code&gt; is safe for use by multiple threads. Here is an example which filters an image by swapping the red and blue components:</target>
        </trans-unit>
        <trans-unit id="b7e39e96cb29fba24d1225387c98d34e3899b3c6" translate="yes" xml:space="preserve">
          <source>This class is an implementation of the ImageProducer interface which uses an array to produce pixel values for an Image.</source>
          <target state="translated">This class is an implementation of the ImageProducer interface which uses an array to produce pixel values for an Image.</target>
        </trans-unit>
        <trans-unit id="b5adab3e70eedfb2a02fffcc39c7e0cd59e2a28a" translate="yes" xml:space="preserve">
          <source>This class is an implementation of the ImageProducer interface which uses an array to produce pixel values for an Image. Here is an example which calculates a 100x100 image representing a fade from black to blue along the X axis and a fade from black to red along the Y axis:</source>
          <target state="translated">This class is an implementation of the ImageProducer interface which uses an array to produce pixel values for an Image. Here is an example which calculates a 100x100 image representing a fade from black to blue along the X axis and a fade from black to red along the Y axis:</target>
        </trans-unit>
        <trans-unit id="9e7316afef7a52ab20f47b95a62ecfbe3c758038" translate="yes" xml:space="preserve">
          <source>This class is an input stream filter that provides the added functionality of keeping track of the current line number.</source>
          <target state="translated">이 클래스는 현재 행 번호를 추적하는 추가 기능을 제공하는 입력 스트림 필터입니다.</target>
        </trans-unit>
        <trans-unit id="16798dec32de101c593281944909a63c048a6aee" translate="yes" xml:space="preserve">
          <source>This class is available as a convenience base class for SAX2 applications: it provides default implementations for all of the callbacks in the four core SAX2 handler classes:</source>
          <target state="translated">This class is available as a convenience base class for SAX2 applications: it provides default implementations for all of the callbacks in the four core SAX2 handler classes:</target>
        </trans-unit>
        <trans-unit id="22c5e8d8f9ece2908fcda43309f98e1063e411d7" translate="yes" xml:space="preserve">
          <source>This class is available mainly for application writers, who can use it to make a persistent snapshot of a locator at any point during a document parse:</source>
          <target state="translated">This class is available mainly for application writers, who can use it to make a persistent snapshot of a locator at any point during a document parse:</target>
        </trans-unit>
        <trans-unit id="009cd6e344bdf2d7cb6149d174534db2c292516a" translate="yes" xml:space="preserve">
          <source>This class is deprecated and subject to removal in a future version of Java SE.</source>
          <target state="translated">This class is deprecated and subject to removal in a future version of Java SE.</target>
        </trans-unit>
        <trans-unit id="63de3aabca0fe46b60ffa59637ef50a0fd1bdb20" translate="yes" xml:space="preserve">
          <source>This class is deprecated and subject to removal in a future version of Java SE. It has been replaced by &lt;code&gt;java.security.KeyStore&lt;/code&gt;, the &lt;code&gt;java.security.cert&lt;/code&gt; package, and &lt;code&gt;java.security.Principal&lt;/code&gt;.</source>
          <target state="translated">This class is deprecated and subject to removal in a future version of Java SE. It has been replaced by &lt;code&gt;java.security.KeyStore&lt;/code&gt; , the &lt;code&gt;java.security.cert&lt;/code&gt; package, and &lt;code&gt;java.security.Principal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0ba548450f3bc916cb7a1eefb8df50f2b524b4c" translate="yes" xml:space="preserve">
          <source>This class is deprecated and subject to removal in a future version of Java SE. It has been replaced by &lt;code&gt;java.security.Policy&lt;/code&gt; and related classes since 1.2.</source>
          <target state="translated">This class is deprecated and subject to removal in a future version of Java SE. It has been replaced by &lt;code&gt;java.security.Policy&lt;/code&gt; and related classes since 1.2.</target>
        </trans-unit>
        <trans-unit id="3792b499b1bf8c3f4915df80c062e065345242fc" translate="yes" xml:space="preserve">
          <source>This class is deprecated and subject to removal in a future version of Java SE. It has been replaced by &lt;code&gt;java.security.cert.Certificate&lt;/code&gt; and related classes.</source>
          <target state="translated">This class is deprecated and subject to removal in a future version of Java SE. It has been replaced by &lt;code&gt;java.security.cert.Certificate&lt;/code&gt; and related classes.</target>
        </trans-unit>
        <trans-unit id="fe9debb8d1834c5812eb359587ff20811bb7bb89" translate="yes" xml:space="preserve">
          <source>This class is deprecated as of version 1.3 of the Java Platform</source>
          <target state="translated">This class is deprecated as of version 1.3 of the Java Platform</target>
        </trans-unit>
        <trans-unit id="4361c582dfddd14ec41dd94cc1b4436156dafa3f" translate="yes" xml:space="preserve">
          <source>This class is deprecated, and is planned for removal in a future release.</source>
          <target state="translated">This class is deprecated, and is planned for removal in a future release.</target>
        </trans-unit>
        <trans-unit id="1ced21a75d8a42fe694a2ee35274ec56b54ea257" translate="yes" xml:space="preserve">
          <source>This class is designed for use with the ISO calendar system. The fields of hours, minutes and seconds make assumptions that are valid for the standard ISO definitions of those fields. This class may be used with other calendar systems providing the definition of the time fields matches those of the ISO calendar system.</source>
          <target state="translated">이 클래스는 ISO 캘린더 시스템과 함께 사용하도록 설계되었습니다. 시간, 분 및 초 필드는 해당 필드의 표준 ISO 정의에 유효한 가정을합니다. 이 클래스는 다른 달력 시스템과 함께 사용하여 시간 필드의 정의가 ISO 달력 시스템의 시간 필드와 일치하도록합니다.</target>
        </trans-unit>
        <trans-unit id="d747a6cfe71cab96ddbb0751b29550721cdeae4b" translate="yes" xml:space="preserve">
          <source>This class is designed to handle many of the details of the decoding process, including the implementation of error actions. A decoder for a specific charset, which is a concrete subclass of this class, need only implement the abstract &lt;a href=&quot;#decodeLoop(java.nio.ByteBuffer,java.nio.CharBuffer)&quot;&gt;&lt;code&gt;decodeLoop&lt;/code&gt;&lt;/a&gt; method, which encapsulates the basic decoding loop. A subclass that maintains internal state should, additionally, override the &lt;a href=&quot;#implFlush(java.nio.CharBuffer)&quot;&gt;&lt;code&gt;implFlush&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#implReset()&quot;&gt;&lt;code&gt;implReset&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">This class is designed to handle many of the details of the decoding process, including the implementation of error actions. A decoder for a specific charset, which is a concrete subclass of this class, need only implement the abstract &lt;a href=&quot;#decodeLoop(java.nio.ByteBuffer,java.nio.CharBuffer)&quot;&gt; &lt;code&gt;decodeLoop&lt;/code&gt; &lt;/a&gt; method, which encapsulates the basic decoding loop. A subclass that maintains internal state should, additionally, override the &lt;a href=&quot;#implFlush(java.nio.CharBuffer)&quot;&gt; &lt;code&gt;implFlush&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#implReset()&quot;&gt; &lt;code&gt;implReset&lt;/code&gt; &lt;/a&gt; methods.</target>
        </trans-unit>
        <trans-unit id="9b2362cd1aa51b3e17ae66a56b8d4233cf23ae53" translate="yes" xml:space="preserve">
          <source>This class is designed to handle many of the details of the decoding process, including the implementation of error actions. A decoder for a specific charset, which is a concrete subclass of this class, need only implement the abstract &lt;a href=&quot;charsetdecoder#decodeLoop-java.nio.ByteBuffer-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;decodeLoop&lt;/code&gt;&lt;/a&gt; method, which encapsulates the basic decoding loop. A subclass that maintains internal state should, additionally, override the &lt;a href=&quot;charsetdecoder#implFlush-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;implFlush&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;charsetdecoder#implReset--&quot;&gt;&lt;code&gt;implReset&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">이 클래스는 오류 동작의 구현을 포함하여 디코딩 프로세스의 많은 세부 사항을 처리하도록 설계되었습니다. 이 클래스의 구체적 서브 클래스 인 특정 문자 세트의 디코더 는 기본 디코딩 루프를 캡슐화하는 추상 &lt;a href=&quot;charsetdecoder#decodeLoop-java.nio.ByteBuffer-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;decodeLoop&lt;/code&gt; &lt;/a&gt; 메소드 만 구현하면 됩니다. 내부 상태를 유지하는 서브 클래스는 또한 &lt;a href=&quot;charsetdecoder#implFlush-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;implFlush&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;charsetdecoder#implReset--&quot;&gt; &lt;code&gt;implReset&lt;/code&gt; &lt;/a&gt; 메소드를 대체해야 합니다.</target>
        </trans-unit>
        <trans-unit id="b49031ef8087e4b4963b36dcb5e111702d92f8dc" translate="yes" xml:space="preserve">
          <source>This class is designed to handle many of the details of the encoding process, including the implementation of error actions. An encoder for a specific charset, which is a concrete subclass of this class, need only implement the abstract &lt;a href=&quot;#encodeLoop(java.nio.CharBuffer,java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;encodeLoop&lt;/code&gt;&lt;/a&gt; method, which encapsulates the basic encoding loop. A subclass that maintains internal state should, additionally, override the &lt;a href=&quot;#implFlush(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;implFlush&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#implReset()&quot;&gt;&lt;code&gt;implReset&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">This class is designed to handle many of the details of the encoding process, including the implementation of error actions. An encoder for a specific charset, which is a concrete subclass of this class, need only implement the abstract &lt;a href=&quot;#encodeLoop(java.nio.CharBuffer,java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;encodeLoop&lt;/code&gt; &lt;/a&gt; method, which encapsulates the basic encoding loop. A subclass that maintains internal state should, additionally, override the &lt;a href=&quot;#implFlush(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;implFlush&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#implReset()&quot;&gt; &lt;code&gt;implReset&lt;/code&gt; &lt;/a&gt; methods.</target>
        </trans-unit>
        <trans-unit id="13f03733315c0ce8ed4415eee284ec88ab9169a1" translate="yes" xml:space="preserve">
          <source>This class is designed to handle many of the details of the encoding process, including the implementation of error actions. An encoder for a specific charset, which is a concrete subclass of this class, need only implement the abstract &lt;a href=&quot;charsetencoder#encodeLoop-java.nio.CharBuffer-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;encodeLoop&lt;/code&gt;&lt;/a&gt; method, which encapsulates the basic encoding loop. A subclass that maintains internal state should, additionally, override the &lt;a href=&quot;charsetencoder#implFlush-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;implFlush&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;charsetencoder#implReset--&quot;&gt;&lt;code&gt;implReset&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">이 클래스는 오류 동작의 구현을 포함하여 인코딩 프로세스의 많은 세부 사항을 처리하도록 설계되었습니다. 이 클래스의 구체적 서브 클래스 인 특정 문자 세트의 인코더 는 기본 인코딩 루프를 캡슐화하는 추상 &lt;a href=&quot;charsetencoder#encodeLoop-java.nio.CharBuffer-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;encodeLoop&lt;/code&gt; &lt;/a&gt; 메소드 만 구현하면 됩니다. 내부 상태를 유지하는 서브 클래스는 또한 &lt;a href=&quot;charsetencoder#implFlush-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;implFlush&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;charsetencoder#implReset--&quot;&gt; &lt;code&gt;implReset&lt;/code&gt; &lt;/a&gt; 메소드를 대체해야 합니다.</target>
        </trans-unit>
        <trans-unit id="f58edc6c6c4228bbe014ebdc03de838682426398" translate="yes" xml:space="preserve">
          <source>This class is designed to sit between an &lt;a href=&quot;../xmlreader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; and the client application's event handlers. By default, it does nothing but pass requests up to the reader and events on to the handlers unmodified, but subclasses can override specific methods to modify the event stream or the configuration requests as they pass through.</source>
          <target state="translated">This class is designed to sit between an &lt;a href=&quot;../xmlreader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt; and the client application's event handlers. By default, it does nothing but pass requests up to the reader and events on to the handlers unmodified, but subclasses can override specific methods to modify the event stream or the configuration requests as they pass through.</target>
        </trans-unit>
        <trans-unit id="3240cc4afb6076454063206022fe6517d12d0d64" translate="yes" xml:space="preserve">
          <source>This class is designed to work with (though does not require) &lt;a href=&quot;stream/package-summary&quot;&gt;streams&lt;/a&gt;. For example, you can compute summary statistics on a stream of doubles with:</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;stream/package-summary&quot;&gt;stream&lt;/a&gt; 과 작동하도록 설계되었습니다 (필수는 아님) . 예를 들어, 다음을 사용하여 복식 스트림에 대한 요약 통계를 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="534bf987e2d9f7c4f4fb1edd2c8721e673a2621f" translate="yes" xml:space="preserve">
          <source>This class is designed to work with (though does not require) &lt;a href=&quot;stream/package-summary&quot;&gt;streams&lt;/a&gt;. For example, you can compute summary statistics on a stream of ints with:</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;stream/package-summary&quot;&gt;stream&lt;/a&gt; 과 작동하도록 설계되었습니다 (필수는 아님) . 예를 들어 다음을 사용하여 int 스트림에 대한 요약 통계를 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c52e6dd8b18199a8f82ef12d5c2918291e0b7cf1" translate="yes" xml:space="preserve">
          <source>This class is designed to work with (though does not require) &lt;a href=&quot;stream/package-summary&quot;&gt;streams&lt;/a&gt;. For example, you can compute summary statistics on a stream of longs with:</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;stream/package-summary&quot;&gt;stream&lt;/a&gt; 과 작동하도록 설계되었습니다 (필수는 아님) . 예를 들어 다음을 사용하여 long 스트림에서 요약 통계를 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d5345d2a5ee0eb2306e473dc794ba347ff2738d" translate="yes" xml:space="preserve">
          <source>This class is for AWT permissions.</source>
          <target state="translated">This class is for AWT permissions.</target>
        </trans-unit>
        <trans-unit id="daa39e18cb12f99ec87a157f0f3b4377c55b7836" translate="yes" xml:space="preserve">
          <source>This class is for AWT permissions. An &lt;code&gt;AWTPermission&lt;/code&gt; contains a target name but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">This class is for AWT permissions. An &lt;code&gt;AWTPermission&lt;/code&gt; contains a target name but no actions list; you either have the named permission or you don't.</target>
        </trans-unit>
        <trans-unit id="84d53fdae707712d0381e94f7dc21be6cf91f41e" translate="yes" xml:space="preserve">
          <source>This class is for Serializable permissions.</source>
          <target state="translated">이 클래스는 직렬화 가능 권한을위한 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="0d1c4d1efe47256af28fe598bd92727eeb2782e8" translate="yes" xml:space="preserve">
          <source>This class is for Serializable permissions. A SerializablePermission contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">이 클래스는 직렬화 가능 권한을위한 클래스입니다. SerializablePermission에는 이름 ( &quot;대상 이름&quot;이라고도 함)이 포함되지만 작업 목록은 없습니다. 당신은 명명 된 권한이 있거나 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d53779bd7f7cce6e4c7e911761f037e0abf7c9d0" translate="yes" xml:space="preserve">
          <source>This class is for authentication permissions.</source>
          <target state="translated">이 클래스는 인증 권한을위한 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="980dc0ab7e1f321fea48e7fbb5db36bbdbe65f2a" translate="yes" xml:space="preserve">
          <source>This class is for authentication permissions. An &lt;code&gt;AuthPermission&lt;/code&gt; contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">This class is for authentication permissions. An &lt;code&gt;AuthPermission&lt;/code&gt; contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</target>
        </trans-unit>
        <trans-unit id="5f126780ee50931b1510cb11c1cef9786cd20a73" translate="yes" xml:space="preserve">
          <source>This class is for authentication permissions. An AuthPermission contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">이 클래스는 인증 권한을위한 클래스입니다. AuthPermission에는 이름 ( &quot;대상 이름&quot;이라고도 함)이 포함되지만 작업 목록은 없습니다. 당신은 명명 된 권한이 있거나 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="73f3bd1d9682040b3b23820eac252d315ab9fb0b" translate="yes" xml:space="preserve">
          <source>This class is for property permissions.</source>
          <target state="translated">이 클래스는 속성 권한을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="cf38ff071520a9f69c63d16a27ca4bdaf3eecf9c" translate="yes" xml:space="preserve">
          <source>This class is for runtime permissions.</source>
          <target state="translated">이 클래스는 런타임 권한을위한 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="89f765e8625e6c7697a74536a6c3d64cc7b9053a" translate="yes" xml:space="preserve">
          <source>This class is for runtime permissions. A &lt;code&gt;RuntimePermission&lt;/code&gt; contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">This class is for runtime permissions. A &lt;code&gt;RuntimePermission&lt;/code&gt; contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</target>
        </trans-unit>
        <trans-unit id="da64c9a234bc5d4220da0b155b1bcc82e0a2873a" translate="yes" xml:space="preserve">
          <source>This class is for runtime permissions. A RuntimePermission contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">이 클래스는 런타임 권한을위한 클래스입니다. RuntimePermission에는 이름 ( &quot;대상 이름&quot;이라고도 함)이 포함되지만 조치 목록은 없습니다. 당신은 명명 된 권한이 있거나 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f946b8ab89f87cbe6f5c790648f5cdeeb630b96f" translate="yes" xml:space="preserve">
          <source>This class is for security permissions.</source>
          <target state="translated">이 클래스는 보안 권한을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="ee6ff77f01fb586f627368ed63e73dffae32b926" translate="yes" xml:space="preserve">
          <source>This class is for security permissions. A &lt;code&gt;SecurityPermission&lt;/code&gt; contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">This class is for security permissions. A &lt;code&gt;SecurityPermission&lt;/code&gt; contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</target>
        </trans-unit>
        <trans-unit id="7039081a2c0b67ea5473cb08a9d0475faa52319d" translate="yes" xml:space="preserve">
          <source>This class is for security permissions. A SecurityPermission contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">이 클래스는 보안 권한을위한 것입니다. SecurityPermission에는 이름 ( &quot;대상 이름&quot;이라고도 함)이 있지만 작업 목록은 없습니다. 당신은 명명 된 권한이 있거나 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="983972e67289ccda7d34499493457e0efdad03ee" translate="yes" xml:space="preserve">
          <source>This class is for various network permissions.</source>
          <target state="translated">이 클래스는 다양한 네트워크 권한을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="4b479ce6e357940518728afad9719697ef2cb323" translate="yes" xml:space="preserve">
          <source>This class is for various network permissions. A NetPermission contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">이 클래스는 다양한 네트워크 권한을위한 것입니다. NetPermission은 이름 ( &quot;대상 이름&quot;이라고도 함)을 포함하지만 조치 목록은 없습니다. 당신은 명명 된 권한이 있거나 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3df37700c7b7b055b8f9c28ab127afc7e9516ccc" translate="yes" xml:space="preserve">
          <source>This class is for various network permissions. An SSLPermission contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">이 클래스는 다양한 네트워크 권한을위한 것입니다. SSLPermission에는 이름 ( &quot;대상 이름&quot;이라고도 함)이 포함되지만 작업 목록은 없습니다. 당신은 명명 된 권한이 있거나 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e2c3b11b989c539592531856400bedc8000c0651" translate="yes" xml:space="preserve">
          <source>This class is generally a fall back method for dealing with images. More efficient code will cast the SampleModel to the appropriate subclass and extract the information needed to directly manipulate pixels in the DataBuffer.</source>
          <target state="translated">This class is generally a fall back method for dealing with images. More efficient code will cast the SampleModel to the appropriate subclass and extract the information needed to directly manipulate pixels in the DataBuffer.</target>
        </trans-unit>
        <trans-unit id="1efd3c02b16dbb6115b817a50e48113a428b6af7" translate="yes" xml:space="preserve">
          <source>This class is immutable and thread-safe.</source>
          <target state="translated">이 클래스는 변경 불가능하고 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="37b92d190d2b4d908f1a3b363886df450096e5f1" translate="yes" xml:space="preserve">
          <source>This class is implemented by a service and located by the implementation using the  SPI JAR File specification.</source>
          <target state="translated">이 클래스는 서비스에 의해 구현되며 SPI JAR 파일 스펙을 사용한 구현에 의해 찾습니다.</target>
        </trans-unit>
        <trans-unit id="e38d6c9325279b87b70fb18294256c2b893326d9" translate="yes" xml:space="preserve">
          <source>This class is implemented by a service and located by the implementation using the &lt;a href=&quot;../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; facility.</source>
          <target state="translated">This class is implemented by a service and located by the implementation using the &lt;a href=&quot;../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; facility.</target>
        </trans-unit>
        <trans-unit id="6afa510f001532970156cba651d435679538590a" translate="yes" xml:space="preserve">
          <source>This class is implemented to do the extra work necessary to work properly in the presence of multiple threads (i.e. from asynchronous notification of model changes for example) by ensuring that all component access is done on the event thread.</source>
          <target state="translated">This class is implemented to do the extra work necessary to work properly in the presence of multiple threads (i.e. from asynchronous notification of model changes for example) by ensuring that all component access is done on the event thread.</target>
        </trans-unit>
        <trans-unit id="07f55a34744d9b3fdfe393bbfc741479fa075dc2" translate="yes" xml:space="preserve">
          <source>This class is implemented to provide a default behavior of transferring a component property simply by specifying the name of the property in the constructor. For example, to transfer the foreground color from one component to another either via the clipboard or a drag and drop operation a &lt;code&gt;TransferHandler&lt;/code&gt; can be constructed with the string &quot;foreground&quot;. The built in support will use the color returned by &lt;code&gt;getForeground&lt;/code&gt; as the source of the transfer, and &lt;code&gt;setForeground&lt;/code&gt; for the target of a transfer.</source>
          <target state="translated">This class is implemented to provide a default behavior of transferring a component property simply by specifying the name of the property in the constructor. For example, to transfer the foreground color from one component to another either via the clipboard or a drag and drop operation a &lt;code&gt;TransferHandler&lt;/code&gt; can be constructed with the string &quot;foreground&quot;. The built in support will use the color returned by &lt;code&gt;getForeground&lt;/code&gt; as the source of the transfer, and &lt;code&gt;setForeground&lt;/code&gt; for the target of a transfer.</target>
        </trans-unit>
        <trans-unit id="3dcf0734baa4f30537279e3b95a469a4430aa2b3" translate="yes" xml:space="preserve">
          <source>This class is in conformance with Level 1 of &lt;a href=&quot;http://www.unicode.org/reports/tr18/&quot;&gt;&lt;i&gt;Unicode Technical Standard #18: Unicode Regular Expression&lt;/i&gt;&lt;/a&gt;, plus RL2.1 Canonical Equivalents.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.unicode.org/reports/tr18/&quot;&gt;&lt;i&gt;Unicode Technical Standard # 18 : Unicode Regular Expression&lt;/i&gt;&lt;/a&gt; 의 레벨 1 과 RL2.1 Canonical Equivalents를 준수합니다.</target>
        </trans-unit>
        <trans-unit id="5315cb2201e53aa37f5e8577f4ff29892cbc50a3" translate="yes" xml:space="preserve">
          <source>This class is inserted in between cell renderers and the components that use them.</source>
          <target state="translated">This class is inserted in between cell renderers and the components that use them.</target>
        </trans-unit>
        <trans-unit id="a782a1a4c294e34848f183a04a802a1f0fd0664b" translate="yes" xml:space="preserve">
          <source>This class is inserted in between cell renderers and the components that use them. It just exists to thwart the repaint() and invalidate() methods which would otherwise propagate up the tree when the renderer was configured. It's used by the implementations of JTable, JTree, and JList. For example, here's how CellRendererPane is used in the code the paints each row in a JList:</source>
          <target state="translated">This class is inserted in between cell renderers and the components that use them. It just exists to thwart the repaint() and invalidate() methods which would otherwise propagate up the tree when the renderer was configured. It's used by the implementations of JTable, JTree, and JList. For example, here's how CellRendererPane is used in the code the paints each row in a JList:</target>
        </trans-unit>
        <trans-unit id="164b1f255450de2132df34b2fc33bbfbd54b33fb" translate="yes" xml:space="preserve">
          <source>This class is intended for use in a single thread.</source>
          <target state="translated">이 클래스는 단일 스레드에서 사용하도록 고안되었습니다.</target>
        </trans-unit>
        <trans-unit id="eaa25a208a1545696e4b07e7a544a0930fdd83e9" translate="yes" xml:space="preserve">
          <source>This class is intended primarily for use with key objects whose &lt;code&gt;equals&lt;/code&gt; methods test for object identity using the &lt;code&gt;==&lt;/code&gt; operator. Once such a key is discarded it can never be recreated, so it is impossible to do a lookup of that key in a &lt;code&gt;WeakHashMap&lt;/code&gt; at some later time and be surprised that its entry has been removed. This class will work perfectly well with key objects whose &lt;code&gt;equals&lt;/code&gt; methods are not based upon object identity, such as &lt;code&gt;String&lt;/code&gt; instances. With such recreatable key objects, however, the automatic removal of &lt;code&gt;WeakHashMap&lt;/code&gt; entries whose keys have been discarded may prove to be confusing.</source>
          <target state="translated">이 클래스는 기본적으로 &lt;code&gt;==&lt;/code&gt; 연산자를 사용하여 &lt;code&gt;equals&lt;/code&gt; 메소드가 객체 ID를 테스트 하는 주요 객체와 함께 사용하기위한 것 입니다. 이러한 키를 버린 후에는 다시 만들 수 없으므로 나중에 &lt;code&gt;WeakHashMap&lt;/code&gt; 에서 해당 키를 조회 하고 해당 항목이 제거되었다는 사실에 놀랄 수 없습니다. 이 클래스는 &lt;code&gt;equals&lt;/code&gt; 메소드가 &lt;code&gt;String&lt;/code&gt; 인스턴스 와 같은 객체 아이덴티티를 기반으로하지 않는 주요 객체와 완벽하게 작동 합니다. 그러나 이러한 재생성 가능한 키 개체를 사용하면 &lt;code&gt;WeakHashMap&lt;/code&gt; 이 자동으로 제거됩니다. 항목을 하는 것이 혼란 스러울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7ce27329c1d1e958f1ffcae520eb7728a9796b0" translate="yes" xml:space="preserve">
          <source>This class is mostly for library writers presenting stream views of data structures; most static stream methods intended for end users are in the various &lt;code&gt;Stream&lt;/code&gt; classes.</source>
          <target state="translated">이 클래스는 주로 데이터 구조의 스트림 뷰를 제공하는 라이브러리 작성자를위한 것입니다. 최종 사용자를위한 대부분의 정적 스트림 방법은 다양한 &lt;code&gt;Stream&lt;/code&gt; 클래스에 있습니다.</target>
        </trans-unit>
        <trans-unit id="65b12cf86e2eb6cbf068f218dd8b93af23226d5c" translate="yes" xml:space="preserve">
          <source>This class is multi-threading safe and can be used by multiple threads concurrently. However, this object keeps track of the card presence state of each of its terminals. Multiple objects should be used if independent calls to &lt;a href=&quot;#waitForChange()&quot;&gt;waitForChange()&lt;/a&gt; are required.</source>
          <target state="translated">This class is multi-threading safe and can be used by multiple threads concurrently. However, this object keeps track of the card presence state of each of its terminals. Multiple objects should be used if independent calls to &lt;a href=&quot;#waitForChange()&quot;&gt;waitForChange()&lt;/a&gt; are required.</target>
        </trans-unit>
        <trans-unit id="95f068c53d37a1fccb10de903aea44b8caa49beb" translate="yes" xml:space="preserve">
          <source>This class is never instantiated.</source>
          <target state="translated">This class is never instantiated.</target>
        </trans-unit>
        <trans-unit id="1660a48995cdb0694b29aed2975901ccca14b93b" translate="yes" xml:space="preserve">
          <source>This class is no longer used or needed.</source>
          <target state="translated">This class is no longer used or needed.</target>
        </trans-unit>
        <trans-unit id="edab3ed7db69cf18077c2ce1d1976b439fde550e" translate="yes" xml:space="preserve">
          <source>This class is no longer used or needed. &lt;code&gt;java.awt.Component.AccessibleAWTComponent&lt;/code&gt; provides the same functionality and it is handled in &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">This class is no longer used or needed. &lt;code&gt;java.awt.Component.AccessibleAWTComponent&lt;/code&gt; provides the same functionality and it is handled in &lt;code&gt;Component&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1fe2a902b95293e868730a69eaf51ba0a0d6a9b0" translate="yes" xml:space="preserve">
          <source>This class is no longer used.</source>
          <target state="translated">이 클래스는 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="660376da0a4ccb1bd664c468fe3e82f5289bd185" translate="yes" xml:space="preserve">
          <source>This class is no longer used. Its functionality has been replaced by &lt;code&gt;java.security.KeyStore&lt;/code&gt;, the &lt;code&gt;java.security.cert&lt;/code&gt; package, and &lt;code&gt;java.security.Principal&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 더 이상 사용되지 않습니다. 기능은 &lt;code&gt;java.security.KeyStore&lt;/code&gt; , &lt;code&gt;java.security.cert&lt;/code&gt; 패키지 및 &lt;code&gt;java.security.Principal&lt;/code&gt; 로 대체되었습니다. .</target>
        </trans-unit>
        <trans-unit id="4c3d91c708cbcbcd277aad8b79502c18bebe5bfc" translate="yes" xml:space="preserve">
          <source>This class is normally used as the parent of &lt;code&gt;JInternalFrames&lt;/code&gt; to provide a pluggable &lt;code&gt;DesktopManager&lt;/code&gt; object to the &lt;code&gt;JInternalFrames&lt;/code&gt;. The &lt;code&gt;installUI&lt;/code&gt; of the L&amp;amp;F specific implementation is responsible for setting the &lt;code&gt;desktopManager&lt;/code&gt; variable appropriately. When the parent of a &lt;code&gt;JInternalFrame&lt;/code&gt; is a &lt;code&gt;JDesktopPane&lt;/code&gt;, it should delegate most of its behavior to the &lt;code&gt;desktopManager&lt;/code&gt; (closing, resizing, etc).</source>
          <target state="translated">This class is normally used as the parent of &lt;code&gt;JInternalFrames&lt;/code&gt; to provide a pluggable &lt;code&gt;DesktopManager&lt;/code&gt; object to the &lt;code&gt;JInternalFrames&lt;/code&gt; . The &lt;code&gt;installUI&lt;/code&gt; of the L&amp;amp;F specific implementation is responsible for setting the &lt;code&gt;desktopManager&lt;/code&gt; variable appropriately. When the parent of a &lt;code&gt;JInternalFrame&lt;/code&gt; is a &lt;code&gt;JDesktopPane&lt;/code&gt; , it should delegate most of its behavior to the &lt;code&gt;desktopManager&lt;/code&gt; (closing, resizing, etc).</target>
        </trans-unit>
        <trans-unit id="3d251b916db18946db2616285c0c642d5b48160d" translate="yes" xml:space="preserve">
          <source>This class is not intended to be used for general XML processing. In particular, &lt;code&gt;Element&lt;/code&gt; nodes created within the Image I/O API are not compatible with those created by Sun's standard implementation of the &lt;code&gt;org.w3.dom&lt;/code&gt; API. In particular, the implementation is tuned for simple uses and may not perform well for intensive processing.</source>
          <target state="translated">이 클래스는 일반적인 XML 처리에 사용되지 않습니다. 특히, Image I / O API 내에서 작성된 &lt;code&gt;Element&lt;/code&gt; 노드는 Sun의 표준 &lt;code&gt;org.w3.dom&lt;/code&gt; 구현으로 작성된 것과 호환되지 않습니다. API . 특히, 구현은 간단한 용도로 조정되었으며 집중적 인 처리에는 적합하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec8a329a7be47ae1e5994bc7cee79dc944905b21" translate="yes" xml:space="preserve">
          <source>This class is obsolete.</source>
          <target state="translated">This class is obsolete.</target>
        </trans-unit>
        <trans-unit id="3e766845b49839f414c248a1ebb8bf4cdae73003" translate="yes" xml:space="preserve">
          <source>This class is obsolete. Use &lt;a href=&quot;exportexception&quot;&gt;&lt;code&gt;ExportException&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">This class is obsolete. Use &lt;a href=&quot;exportexception&quot;&gt; &lt;code&gt;ExportException&lt;/code&gt; &lt;/a&gt; instead.</target>
        </trans-unit>
        <trans-unit id="1e79e75692b700d720d54571e54ea17ab243a1c4" translate="yes" xml:space="preserve">
          <source>This class is only the abstract superclass for all objects that store a 2D coordinate. The actual storage representation of the coordinates is left to the subclass.</source>
          <target state="translated">This class is only the abstract superclass for all objects that store a 2D coordinate. The actual storage representation of the coordinates is left to the subclass.</target>
        </trans-unit>
        <trans-unit id="8af77ba8c84d80f7b86a8cca18a7e1e36e733e7a" translate="yes" xml:space="preserve">
          <source>This class is only the abstract superclass for all objects that store a 2D dimension. The actual storage representation of the sizes is left to the subclass.</source>
          <target state="translated">This class is only the abstract superclass for all objects that store a 2D dimension. The actual storage representation of the sizes is left to the subclass.</target>
        </trans-unit>
        <trans-unit id="6b72b65502ab0f969348c2e87686aab25bfc159c" translate="yes" xml:space="preserve">
          <source>This class is only the abstract superclass for all objects that store a 2D line segment. The actual storage representation of the coordinates is left to the subclass.</source>
          <target state="translated">This class is only the abstract superclass for all objects that store a 2D line segment. The actual storage representation of the coordinates is left to the subclass.</target>
        </trans-unit>
        <trans-unit id="a66f00dca48924af13bdbc1c3ee5d63ed3a66ac8" translate="yes" xml:space="preserve">
          <source>This class is only the abstract superclass for all objects that store a 2D quadratic curve segment. The actual storage representation of the coordinates is left to the subclass.</source>
          <target state="translated">This class is only the abstract superclass for all objects that store a 2D quadratic curve segment. The actual storage representation of the coordinates is left to the subclass.</target>
        </trans-unit>
        <trans-unit id="70312d7516f08901a41a8f09d8bdf86ca2347ac6" translate="yes" xml:space="preserve">
          <source>This class is only the abstract superclass for all objects that store a 2D rectangle. The actual storage representation of the coordinates is left to the subclass.</source>
          <target state="translated">This class is only the abstract superclass for all objects that store a 2D rectangle. The actual storage representation of the coordinates is left to the subclass.</target>
        </trans-unit>
        <trans-unit id="29fa039c6f6cff5c1ff298b14829653fe6f80193" translate="yes" xml:space="preserve">
          <source>This class is only the abstract superclass for all objects which store a 2D cubic curve segment. The actual storage representation of the coordinates is left to the subclass.</source>
          <target state="translated">This class is only the abstract superclass for all objects which store a 2D cubic curve segment. The actual storage representation of the coordinates is left to the subclass.</target>
        </trans-unit>
        <trans-unit id="13f4c5f005d26796a4c493f89c63298853baf0c5" translate="yes" xml:space="preserve">
          <source>This class is only the abstract superclass for all objects which store a 2D ellipse. The actual storage representation of the coordinates is left to the subclass.</source>
          <target state="translated">This class is only the abstract superclass for all objects which store a 2D ellipse. The actual storage representation of the coordinates is left to the subclass.</target>
        </trans-unit>
        <trans-unit id="8eba7f6e6663740fa5ed4b67a90734a23c04b77e" translate="yes" xml:space="preserve">
          <source>This class is only useful for raw secret keys that can be represented as a byte array and have no key parameters associated with them, e.g., DES or Triple DES keys.</source>
          <target state="translated">이 클래스는 바이트 배열로 표현할 수 있고 DES 또는 Triple DES 키와 같은 키 매개 변수가없는 원시 비밀 키에만 유용합니다.</target>
        </trans-unit>
        <trans-unit id="aadf889a21f4a098eb6eb03bd18e8db81508f0d1" translate="yes" xml:space="preserve">
          <source>This class is part of the service provider interface and not accessed directly by applications. Applications should use TerminalFactory objects, which can be obtained by calling one of the &lt;a href=&quot;terminalfactory#getInstance(java.lang.String,java.lang.Object)&quot;&gt;TerminalFactory.getInstance()&lt;/a&gt; methods.</source>
          <target state="translated">This class is part of the service provider interface and not accessed directly by applications. Applications should use TerminalFactory objects, which can be obtained by calling one of the &lt;a href=&quot;terminalfactory#getInstance(java.lang.String,java.lang.Object)&quot;&gt;TerminalFactory.getInstance()&lt;/a&gt; methods.</target>
        </trans-unit>
        <trans-unit id="4e61791ba8ff4484e5af42eccc6c503273550378" translate="yes" xml:space="preserve">
          <source>This class is protected so that it can be subclassed by other look and feels to implement their own mouse handling behavior. All overridden methods should call the parent methods so that the menu selection is correct.</source>
          <target state="translated">This class is protected so that it can be subclassed by other look and feels to implement their own mouse handling behavior. All overridden methods should call the parent methods so that the menu selection is correct.</target>
        </trans-unit>
        <trans-unit id="871d9c7734a81df3162e85bc48a290b36b988829" translate="yes" xml:space="preserve">
          <source>This class is separated from the &lt;code&gt;Chronology&lt;/code&gt; interface so that the static methods are not inherited. While &lt;code&gt;Chronology&lt;/code&gt; can be implemented directly, it is strongly recommended to extend this abstract class instead.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Chronology&lt;/code&gt; 인터페이스 와 분리되어 정적 메소드가 상속되지 않습니다. &lt;code&gt;Chronology&lt;/code&gt; 를 직접 구현할 수 있지만 대신이 추상 클래스를 확장하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="11169ff58ae451686a3bb3543b4e110f7e82ae52" translate="yes" xml:space="preserve">
          <source>This class is serializable. When it is serialized it will save (and restore) any listeners that are themselves serializable. Any non-serializable listeners will be skipped during serialization.</source>
          <target state="translated">이 클래스는 직렬화 가능합니다. 직렬화되면 직렬화 가능한 리스너를 저장 (및 복원)합니다. 직렬화 중에 직렬화 할 수없는 리스너는 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="e34e9bcecd977ef9dbda3e5a4d87dfc99f1a34a2" translate="yes" xml:space="preserve">
          <source>This class is the &lt;code&gt;LayoutManager&lt;/code&gt; for it's single &lt;code&gt;JFormattedTextField&lt;/code&gt; child. By default the child is just centered with the parents insets.</source>
          <target state="translated">This class is the &lt;code&gt;LayoutManager&lt;/code&gt; for it's single &lt;code&gt;JFormattedTextField&lt;/code&gt; child. By default the child is just centered with the parents insets.</target>
        </trans-unit>
        <trans-unit id="71907201684c27fb25dd28878206b77575f752b1" translate="yes" xml:space="preserve">
          <source>This class is the abstract superclass for all objects that store a 2D rounded rectangle. The actual storage representation of the coordinates is left to the subclass.</source>
          <target state="translated">This class is the abstract superclass for all objects that store a 2D rounded rectangle. The actual storage representation of the coordinates is left to the subclass.</target>
        </trans-unit>
        <trans-unit id="f5fe0d8116c9bee2acdb987c6bfa4dff16e20c16" translate="yes" xml:space="preserve">
          <source>This class is the abstract superclass of all actual implementations of the Abstract Window Toolkit.</source>
          <target state="translated">This class is the abstract superclass of all actual implementations of the Abstract Window Toolkit.</target>
        </trans-unit>
        <trans-unit id="a411ad1103ca06e4514a0b936e0ee5310983da40" translate="yes" xml:space="preserve">
          <source>This class is the abstract superclass of all actual implementations of the Abstract Window Toolkit. Subclasses of the &lt;code&gt;Toolkit&lt;/code&gt; class are used to bind the various components to particular native toolkit implementations.</source>
          <target state="translated">This class is the abstract superclass of all actual implementations of the Abstract Window Toolkit. Subclasses of the &lt;code&gt;Toolkit&lt;/code&gt; class are used to bind the various components to particular native toolkit implementations.</target>
        </trans-unit>
        <trans-unit id="3554209a34b96872a76cf7c016207382f6a818dd" translate="yes" xml:space="preserve">
          <source>This class is the base class for &lt;code&gt;DragSourceDragEvent&lt;/code&gt; and &lt;code&gt;DragSourceDropEvent&lt;/code&gt;.</source>
          <target state="translated">This class is the base class for &lt;code&gt;DragSourceDragEvent&lt;/code&gt; and &lt;code&gt;DragSourceDropEvent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9426781035a2e2be226ba027fd19bc80e14f02e2" translate="yes" xml:space="preserve">
          <source>This class is the base interface for hostname verification.</source>
          <target state="translated">이 클래스는 호스트 이름 확인을위한 기본 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="d527d905ecd0201340a04d72f9921af6063a64b4" translate="yes" xml:space="preserve">
          <source>This class is the base interface for providing algorithm-specific information to a KeyManagerFactory or TrustManagerFactory.</source>
          <target state="translated">이 클래스는 알고리즘 특정 정보를 KeyManagerFactory 또는 TrustManagerFactory에 제공하기위한 기본 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="59e5f87ef8e36cef554f98c2e008f30d1f05a0d9" translate="yes" xml:space="preserve">
          <source>This class is the implementation of a ModelMBean.</source>
          <target state="translated">이 클래스는 ModelMBean의 구현입니다.</target>
        </trans-unit>
        <trans-unit id="5ef4c4e335a9b9b553a000b7011fecc18fe31818" translate="yes" xml:space="preserve">
          <source>This class is the implementation of a ModelMBean. An appropriate implementation of a ModelMBean must be shipped with every JMX Agent and the class must be named RequiredModelMBean.</source>
          <target state="translated">이 클래스는 ModelMBean의 구현입니다. ModelMBean의 적절한 구현은 모든 JMX 에이전트와 함께 제공되어야하며 클래스의 이름은 RequiredModelMBean이어야합니다.</target>
        </trans-unit>
        <trans-unit id="6d92cf9fa60cc000ab8bf753f1b2d1bc89474f60" translate="yes" xml:space="preserve">
          <source>This class is the interface to be implemented by MBeans that are meant to be persistent.</source>
          <target state="translated">이 클래스는 영속적 인 MBean에 의해 구현되는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="f19d893de8054751cd2144ea0c9af06680e83543" translate="yes" xml:space="preserve">
          <source>This class is the interface to be implemented by MBeans that are meant to be persistent. MBeans supporting this interface should call the load method during construction in order to prime the MBean from the persistent store. In the case of a ModelMBean, the store method should be called by the MBeanServer based on the descriptors in the ModelMBean or by the MBean itself during normal processing of the ModelMBean.</source>
          <target state="translated">이 클래스는 영속적 인 MBean에 의해 구현되는 인터페이스입니다. 이 인터페이스를 지원하는 MBean은 영구 저장소에서 MBean을 프라이밍하기 위해 구성 중에로드 메소드를 호출해야합니다. ModelMBean의 경우, ModelMBean의 설명자 또는 MBean 자체가 ModelMBean을 처리 할 때 MBeanServer가 store 메소드를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="02b089396e28ddd557d223fa76961dbe37dd98f1" translate="yes" xml:space="preserve">
          <source>This class is the opposite of the &lt;code&gt;AbstractList&lt;/code&gt; class in the sense that it implements the &quot;random access&quot; methods (&lt;code&gt;get(int index)&lt;/code&gt;, &lt;code&gt;set(int index, E element)&lt;/code&gt;, &lt;code&gt;add(int index, E element)&lt;/code&gt; and &lt;code&gt;remove(int index)&lt;/code&gt;) on top of the list's list iterator, instead of the other way around.</source>
          <target state="translated">이 클래스는 &quot;랜덤 액세스&quot;메소드 ( &lt;code&gt;get(int index)&lt;/code&gt; , &lt;code&gt;set(int index, E element)&lt;/code&gt; , &lt;code&gt;add(int index, E element)&lt;/code&gt; 및 &lt;code&gt;remove(int index)&lt;/code&gt; )를 구현한다는 점에서 &lt;code&gt;AbstractList&lt;/code&gt; 클래스와 반대입니다. ) ) 대신 목록의 목록 반복자 위에 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4a20b94d128ff27c99a7d8a202407464a746096" translate="yes" xml:space="preserve">
          <source>This class is the starting context for performing LDAPv3-style extended operations and controls.</source>
          <target state="translated">이 클래스는 LDAPv3 스타일 확장 조작 및 제어를 수행하기위한 시작 컨텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="c9ebeaec555c3a49f472defa5a4bac0fa1714a50" translate="yes" xml:space="preserve">
          <source>This class is the starting context for performing directory operations.</source>
          <target state="translated">이 클래스는 디렉토리 작업을 수행하기위한 시작 컨텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="21e5dd06de2cd79c306d6b1432a8bd320196dfce" translate="yes" xml:space="preserve">
          <source>This class is the starting context for performing directory operations. The documentation in the class description of InitialContext (including those for synchronization) apply here.</source>
          <target state="translated">이 클래스는 디렉토리 작업을 수행하기위한 시작 컨텍스트입니다. InitialContext에 대한 클래스 설명의 문서 (동기화를위한 문서 포함)가 여기에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="24dc8db5f88a926a065c69e98c4eae0fb24a7dcc" translate="yes" xml:space="preserve">
          <source>This class is the starting context for performing naming operations.</source>
          <target state="translated">이 클래스는 이름 지정 작업을 수행하기위한 시작 컨텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="255a199d1ff99484f944964c0ba5b4d38319281f" translate="yes" xml:space="preserve">
          <source>This class is the superclass of all classes that filter output streams.</source>
          <target state="translated">이 클래스는 출력 스트림을 필터링하는 모든 클래스의 수퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="570e1f0ed10be9078abfb0bc5b5b38ef04540a8c" translate="yes" xml:space="preserve">
          <source>This class is the superclass of all classes that filter output streams. These streams sit on top of an already existing output stream (the</source>
          <target state="translated">이 클래스는 출력 스트림을 필터링하는 모든 클래스의 수퍼 클래스입니다. 이 스트림은 이미 존재하는 출력 스트림 (</target>
        </trans-unit>
        <trans-unit id="c9086e9e5125fd41f8ce69b188178fcee4eb3b88" translate="yes" xml:space="preserve">
          <source>This class is the superclass of any exception which can be raised during relation management.</source>
          <target state="translated">이 클래스는 관계 관리 중에 발생할 수있는 예외의 수퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="6865dfb89c6918bd65c9ac9d52259fccdb9544d9" translate="yes" xml:space="preserve">
          <source>This class is thread-safe: multiple threads can share a single &lt;code&gt;Properties&lt;/code&gt; object without the need for external synchronization.</source>
          <target state="translated">이 클래스는 스레드로부터 안전합니다. 여러 스레드가 외부 동기화없이 단일 &lt;code&gt;Properties&lt;/code&gt; 객체를 공유 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a95ebd2233ed1d121d6c92058975a03867bfc6de" translate="yes" xml:space="preserve">
          <source>This class is thread-safe: multiple threads can share a single &lt;code&gt;Timer&lt;/code&gt; object without the need for external synchronization.</source>
          <target state="translated">이 클래스는 스레드로부터 안전합니다. 여러 스레드가 외부 동기화없이 단일 &lt;code&gt;Timer&lt;/code&gt; 객체를 공유 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ec33dba99b049da1b658092b3875f51dd398cbc1" translate="yes" xml:space="preserve">
          <source>This class is thrown when an attempt is made to add to an attribute a value that conflicts with the attribute's schema definition.</source>
          <target state="translated">이 클래스는 속성의 스키마 정의와 충돌하는 값을 속성에 추가하려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d1f00b94efb36932459464439d5ab0e12a6e9624" translate="yes" xml:space="preserve">
          <source>This class is thrown when an attempt is made to add to an attribute a value that conflicts with the attribute's schema definition. This could happen, for example, if attempting to add an attribute with no value when the attribute is required to have at least one value, or if attempting to add more than one value to a single valued-attribute, or if attempting to add a value that conflicts with the syntax of the attribute.</source>
          <target state="translated">이 클래스는 속성의 스키마 정의와 충돌하는 값을 속성에 추가하려고 할 때 발생합니다. 예를 들어, 속성에 하나 이상의 값이 있어야 할 때 값이없는 속성을 추가하려고 시도하거나 단일 속성 속성에 둘 이상의 값을 추가하려는 경우 또는 속성의 구문과 충돌하는 값.</target>
        </trans-unit>
        <trans-unit id="b28af93d9716907fa0b3541783bfa4007945f282" translate="yes" xml:space="preserve">
          <source>This class is used as an opaque representation of cryptographic parameters.</source>
          <target state="translated">이 클래스는 암호화 매개 변수의 불투명 한 표현으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4ae4cd39ec4dd191768b03e9ec3542171313866d" translate="yes" xml:space="preserve">
          <source>This class is used by the driver behind the scenes when the method &lt;code&gt;getObject&lt;/code&gt; is called on an SQL structured or distinct type that has a custom mapping; a programmer never invokes &lt;code&gt;SQLInputImpl&lt;/code&gt; methods directly. They are provided here as a convenience for those who write &lt;code&gt;RowSet&lt;/code&gt; implementations.</source>
          <target state="translated">This class is used by the driver behind the scenes when the method &lt;code&gt;getObject&lt;/code&gt; is called on an SQL structured or distinct type that has a custom mapping; a programmer never invokes &lt;code&gt;SQLInputImpl&lt;/code&gt; methods directly. They are provided here as a convenience for those who write &lt;code&gt;RowSet&lt;/code&gt; implementations.</target>
        </trans-unit>
        <trans-unit id="e2970f6f19d713db046765398cb1a4330b16978b" translate="yes" xml:space="preserve">
          <source>This class is used to allow multiple resources declarations.</source>
          <target state="translated">이 클래스는 여러 자원 선언을 허용하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9bead0d6f4eff16a0bf9f0abb5794db8cbd5f952" translate="yes" xml:space="preserve">
          <source>This class is used to associate an emitted notification with the listener ID to which it is targeted.</source>
          <target state="translated">이 클래스는 생성 된 알림을 대상 리스너 ID와 연결하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c3fa0e99fe17e1f88fe10c2d19b672d9ce05fbd3" translate="yes" xml:space="preserve">
          <source>This class is used to create a multiple-exclusion scope for a set of buttons.</source>
          <target state="translated">This class is used to create a multiple-exclusion scope for a set of buttons.</target>
        </trans-unit>
        <trans-unit id="b5927e40724400d087c5dc1f16bc2f52f75f717a" translate="yes" xml:space="preserve">
          <source>This class is used to create a multiple-exclusion scope for a set of buttons. Creating a set of buttons with the same &lt;code&gt;ButtonGroup&lt;/code&gt; object means that turning &quot;on&quot; one of those buttons turns off all other buttons in the group.</source>
          <target state="translated">This class is used to create a multiple-exclusion scope for a set of buttons. Creating a set of buttons with the same &lt;code&gt;ButtonGroup&lt;/code&gt; object means that turning &quot;on&quot; one of those buttons turns off all other buttons in the group.</target>
        </trans-unit>
        <trans-unit id="f38a13b47a7a76e3e8210a856ed4604bc7ab7f96" translate="yes" xml:space="preserve">
          <source>This class is used to create operating system processes.</source>
          <target state="translated">이 클래스는 운영 체제 프로세스를 작성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e29cdda5dc89630e2030edbd0cf8445c800b6fa6" translate="yes" xml:space="preserve">
          <source>This class is used to explicitly specify the value for encoding input P in OAEP Padding.</source>
          <target state="translated">이 클래스는 OAEP 패딩에서 입력 P를 인코딩하기위한 값을 명시 적으로 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c95de98276a5ecfbec247e9dbc0af885a8c8b41b" translate="yes" xml:space="preserve">
          <source>This class is used to generate native system input events for the purposes of test automation, self-running demos, and other applications where control of the mouse and keyboard is needed.</source>
          <target state="translated">This class is used to generate native system input events for the purposes of test automation, self-running demos, and other applications where control of the mouse and keyboard is needed.</target>
        </trans-unit>
        <trans-unit id="6256bd7c5e3646ab446c571a83634b429793b0d3" translate="yes" xml:space="preserve">
          <source>This class is used to generate native system input events for the purposes of test automation, self-running demos, and other applications where control of the mouse and keyboard is needed. The primary purpose of Robot is to facilitate automated testing of Java platform implementations.</source>
          <target state="translated">This class is used to generate native system input events for the purposes of test automation, self-running demos, and other applications where control of the mouse and keyboard is needed. The primary purpose of Robot is to facilitate automated testing of Java platform implementations.</target>
        </trans-unit>
        <trans-unit id="9d0ecf3825908f46ebe3aeb7cc6e91fe387c48c2" translate="yes" xml:space="preserve">
          <source>This class is used to handle the transfer of a &lt;code&gt;Transferable&lt;/code&gt; to and from Swing components.</source>
          <target state="translated">This class is used to handle the transfer of a &lt;code&gt;Transferable&lt;/code&gt; to and from Swing components.</target>
        </trans-unit>
        <trans-unit id="ee1daaa9940524e4f493e78389dc268099839a01" translate="yes" xml:space="preserve">
          <source>This class is used to handle the transfer of a &lt;code&gt;Transferable&lt;/code&gt; to and from Swing components. The &lt;code&gt;Transferable&lt;/code&gt; is used to represent data that is exchanged via a cut, copy, or paste to/from a clipboard. It is also used in drag-and-drop operations to represent a drag from a component, and a drop to a component. Swing provides functionality that automatically supports cut, copy, and paste keyboard bindings that use the functionality provided by an implementation of this class. Swing also provides functionality that automatically supports drag and drop that uses the functionality provided by an implementation of this class. The Swing developer can concentrate on specifying the semantics of a transfer primarily by setting the &lt;code&gt;transferHandler&lt;/code&gt; property on a Swing component.</source>
          <target state="translated">This class is used to handle the transfer of a &lt;code&gt;Transferable&lt;/code&gt; to and from Swing components. The &lt;code&gt;Transferable&lt;/code&gt; is used to represent data that is exchanged via a cut, copy, or paste to/from a clipboard. It is also used in drag-and-drop operations to represent a drag from a component, and a drop to a component. Swing provides functionality that automatically supports cut, copy, and paste keyboard bindings that use the functionality provided by an implementation of this class. Swing also provides functionality that automatically supports drag and drop that uses the functionality provided by an implementation of this class. The Swing developer can concentrate on specifying the semantics of a transfer primarily by setting the &lt;code&gt;transferHandler&lt;/code&gt; property on a Swing component.</target>
        </trans-unit>
        <trans-unit id="01961bf260d3d7d3ccf96523a59d06bd67b6034b" translate="yes" xml:space="preserve">
          <source>This class is used to maintain a strongly typed enumeration. It is the super class of both the &lt;a href=&quot;#AccessibleRole&quot;&gt;AccessibleRole&lt;/a&gt; and &lt;a href=&quot;#AccessibleState&quot;&gt;AccessibleState&lt;/a&gt; classes. Programmers normally do not interact with this class directly, but will instead use the &lt;a href=&quot;#AccessibleRole&quot;&gt;AccessibleRole&lt;/a&gt; and &lt;a href=&quot;#AccessibleState&quot;&gt;AccessibleState&lt;/a&gt; classes.</source>
          <target state="translated">This class is used to maintain a strongly typed enumeration. It is the super class of both the &lt;a href=&quot;#AccessibleRole&quot;&gt;AccessibleRole&lt;/a&gt; and &lt;a href=&quot;#AccessibleState&quot;&gt;AccessibleState&lt;/a&gt; classes. Programmers normally do not interact with this class directly, but will instead use the &lt;a href=&quot;#AccessibleRole&quot;&gt;AccessibleRole&lt;/a&gt; and &lt;a href=&quot;#AccessibleState&quot;&gt;AccessibleState&lt;/a&gt; classes.</target>
        </trans-unit>
        <trans-unit id="7dc9176a6d652a52a000320c090cdf90b71c8fa1" translate="yes" xml:space="preserve">
          <source>This class is used to protect Kerberos services and the credentials necessary to access those services.</source>
          <target state="translated">이 클래스는 Kerberos 서비스 및 해당 서비스에 액세스하는 데 필요한 자격 증명을 보호하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="92bc108a8151bae0c08b4e05e2830669938179c5" translate="yes" xml:space="preserve">
          <source>This class is used to protect Kerberos services and the credentials necessary to access those services. There is a one to one mapping of a service principal and the credentials necessary to access the service. Therefore granting access to a service principal implicitly grants access to the credential necessary to establish a security context with the service principal. This applies regardless of whether the credentials are in a cache or acquired via an exchange with the KDC. The credential can be either a ticket granting ticket, a service ticket or a secret key from a key table.</source>
          <target state="translated">이 클래스는 Kerberos 서비스 및 해당 서비스에 액세스하는 데 필요한 자격 증명을 보호하는 데 사용됩니다. 서비스 프린시 펄과 서비스에 액세스하는 데 필요한 신임 정보의 일대일 맵핑이 있습니다. 따라서 서비스 주체에 대한 액세스 권한을 부여하면 서비스 주체와 보안 컨텍스트를 설정하는 데 필요한 자격 증명에 대한 액세스 권한이 암시 적으로 부여됩니다. 자격 증명이 캐시에 있는지 또는 KDC와의 교환을 통해 획득했는지에 관계없이 적용됩니다. 자격 증명은 티켓 부여 티켓, 서비스 티켓 또는 키 테이블의 비밀 키일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88d72ed179fe7cf94952b4a53b575f7eb173f084" translate="yes" xml:space="preserve">
          <source>This class is used to protect access to private Credentials belonging to a particular &lt;code&gt;Subject&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 특정 &lt;code&gt;Subject&lt;/code&gt; 속하는 개인 자격 증명에 대한 액세스를 보호하는 데 사용됩니다. .</target>
        </trans-unit>
        <trans-unit id="d883a0a3d463009ba704e60e5528114d555eef95" translate="yes" xml:space="preserve">
          <source>This class is used to protect access to private Credentials belonging to a particular &lt;code&gt;Subject&lt;/code&gt;. The &lt;code&gt;Subject&lt;/code&gt; is represented by a Set of Principals.</source>
          <target state="translated">이 클래스는 특정 &lt;code&gt;Subject&lt;/code&gt; 속하는 개인 자격 증명에 대한 액세스를 보호하는 데 사용됩니다 . &lt;code&gt;Subject&lt;/code&gt; 주체의 집합으로 표현된다.</target>
        </trans-unit>
        <trans-unit id="81577962995ef1cc73f44c7cce8da044a21a41ac" translate="yes" xml:space="preserve">
          <source>This class is used to provide necessary configuration parameters (server name and port number) to implementations of the LDAP &lt;code&gt;CertStore&lt;/code&gt; algorithm.</source>
          <target state="translated">이 클래스는 LDAP &lt;code&gt;CertStore&lt;/code&gt; 알고리즘의 구현에 필요한 구성 매개 변수 (서버 이름 및 포트 번호)를 제공하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="dd22764af63e6556922403c9e19419b8a501f049" translate="yes" xml:space="preserve">
          <source>This class is used to provide necessary configuration parameters (server name and port number) to implementations of the LDAP &lt;code&gt;CertStore&lt;/code&gt; algorithm. However, if you are retrieving certificates or CRLs from an ldap URI as specified by RFC 5280, use the &lt;a href=&quot;uricertstoreparameters&quot;&gt;&lt;code&gt;URICertStoreParameters&lt;/code&gt;&lt;/a&gt; instead as the URI may contain additional information such as the distinguished name that will help the LDAP CertStore find the specific certificates and CRLs.</source>
          <target state="translated">This class is used to provide necessary configuration parameters (server name and port number) to implementations of the LDAP &lt;code&gt;CertStore&lt;/code&gt; algorithm. However, if you are retrieving certificates or CRLs from an ldap URI as specified by RFC 5280, use the &lt;a href=&quot;uricertstoreparameters&quot;&gt; &lt;code&gt;URICertStoreParameters&lt;/code&gt; &lt;/a&gt; instead as the URI may contain additional information such as the distinguished name that will help the LDAP CertStore find the specific certificates and CRLs.</target>
        </trans-unit>
        <trans-unit id="cdb8bad24736602cc6248d8bdcb7b545cc7f76fc" translate="yes" xml:space="preserve">
          <source>This class is used to provide necessary configuration parameters through a URI as defined in RFC 5280 to implementations of &lt;code&gt;CertStore&lt;/code&gt; algorithms.</source>
          <target state="translated">This class is used to provide necessary configuration parameters through a URI as defined in RFC 5280 to implementations of &lt;code&gt;CertStore&lt;/code&gt; algorithms.</target>
        </trans-unit>
        <trans-unit id="bf73f6a65c294515963298059d6234dedb988be4" translate="yes" xml:space="preserve">
          <source>This class is used to provide necessary configuration parameters to implementations of the Collection &lt;code&gt;CertStore&lt;/code&gt; algorithm. The only parameter included in this class is the &lt;code&gt;Collection&lt;/code&gt; from which the &lt;code&gt;CertStore&lt;/code&gt; will retrieve certificates and CRLs.</source>
          <target state="translated">이 클래스는 Collection &lt;code&gt;CertStore&lt;/code&gt; 알고리즘의 구현에 필요한 구성 매개 변수를 제공하는 데 사용됩니다 . 이 클래스에 포함 된 유일한 매개 변수 는 &lt;code&gt;CertStore&lt;/code&gt; 가 인증서와 CRL을 검색 하는 &lt;code&gt;Collection&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="892d3a8ff21cefb061c50236667fa4c69d43c5ad" translate="yes" xml:space="preserve">
          <source>This class is used to read entries from a zip file.</source>
          <target state="translated">이 클래스는 zip 파일에서 항목을 읽는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e515046eee31b311bd69116828d827760c8d7a86" translate="yes" xml:space="preserve">
          <source>This class is used to represent a JAR file entry.</source>
          <target state="translated">이 클래스는 JAR 파일 항목을 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dcdc55a8d6493efd76c541ef916e043bc3a74029" translate="yes" xml:space="preserve">
          <source>This class is used to represent a ZIP file entry.</source>
          <target state="translated">이 클래스는 ZIP 파일 항목을 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dedab4f3cb6292b2c66bd11055ed807ee60cf26a" translate="yes" xml:space="preserve">
          <source>This class is used to represent an Identity that can also digitally sign data.</source>
          <target state="translated">이 클래스는 데이터에 디지털 서명을 할 수있는 Identity를 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a7f5bdfc27441534a2ef1fd5316d3ce6bc2812da" translate="yes" xml:space="preserve">
          <source>This class is used to restrict the usage of the Kerberos delegation model, ie: forwardable and proxiable tickets.</source>
          <target state="translated">이 클래스는 Kerberos 위임 모델 (예 : 전달 가능 및 프록시 가능 티켓)의 사용을 제한하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6f00ca1012f9b62ce235dc0add7bdf9fa4bb89bb" translate="yes" xml:space="preserve">
          <source>This class is used to specify any algorithm parameters that are determined by a standard name.</source>
          <target state="translated">This class is used to specify any algorithm parameters that are determined by a standard name.</target>
        </trans-unit>
        <trans-unit id="9c7d50a701198f08b53af765bff01c03938970e0" translate="yes" xml:space="preserve">
          <source>This class is used to specify any algorithm parameters that are determined by a standard name. This class also holds constants for standard parameter set names. The names of these constants exactly match the corresponding parameter set name. For example, NamedParameterSpec.X25519 represents the parameter set identified by the string &quot;X25519&quot;. These strings are defined in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#parameter-spec-names&quot;&gt; Java Security Standard Algorithm Names Specification&lt;/a&gt;.</source>
          <target state="translated">This class is used to specify any algorithm parameters that are determined by a standard name. This class also holds constants for standard parameter set names. The names of these constants exactly match the corresponding parameter set name. For example, NamedParameterSpec.X25519 represents the parameter set identified by the string &quot;X25519&quot;. These strings are defined in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#parameter-spec-names&quot;&gt; Java Security Standard Algorithm Names Specification&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="708baf263e5bae0ca6de9a8d1c546b5599a6c98c" translate="yes" xml:space="preserve">
          <source>This class is used with the CHAR_REPLACEMENT attribute.</source>
          <target state="translated">This class is used with the CHAR_REPLACEMENT attribute.</target>
        </trans-unit>
        <trans-unit id="da32b0a5f6de72e86c176c93392b75f72e066a06" translate="yes" xml:space="preserve">
          <source>This class is usually preferable to &lt;a href=&quot;atomiclong&quot;&gt;&lt;code&gt;AtomicLong&lt;/code&gt;&lt;/a&gt; when multiple threads update a common sum that is used for purposes such as collecting statistics, not for fine-grained synchronization control. Under low update contention, the two classes have similar characteristics. But under high contention, expected throughput of this class is significantly higher, at the expense of higher space consumption.</source>
          <target state="translated">이 클래스는 일반적으로 &lt;a href=&quot;atomiclong&quot;&gt; &lt;code&gt;AtomicLong&lt;/code&gt; &lt;/a&gt; 보다 선호됩니다. 여러 스레드가 세밀한 동기화 제어가 아닌 통계 수집과 같은 목적으로 사용되는 공통 합계를 업데이트 할 때 . 업데이트 경합이 낮 으면 두 클래스의 특성이 비슷합니다. 그러나 높은 경합에서이 클래스의 예상 처리량은 더 높은 공간 소비를 희생하면서 상당히 높아집니다.</target>
        </trans-unit>
        <trans-unit id="96aaba84eac6ce0ad2e73cbde92bb3c4c4b745e5" translate="yes" xml:space="preserve">
          <source>This class is usually preferable to &lt;a href=&quot;atomiclong&quot;&gt;&lt;code&gt;AtomicLong&lt;/code&gt;&lt;/a&gt; when multiple threads update a common value that is used for purposes such as collecting statistics, not for fine-grained synchronization control. Under low update contention, the two classes have similar characteristics. But under high contention, expected throughput of this class is significantly higher, at the expense of higher space consumption.</source>
          <target state="translated">이 클래스는 일반적으로 &lt;a href=&quot;atomiclong&quot;&gt; &lt;code&gt;AtomicLong&lt;/code&gt; &lt;/a&gt; 보다 선호됩니다. 여러 스레드가 세밀한 동기화 제어가 아닌 통계 수집과 같은 목적으로 사용되는 공통 값을 업데이트 할 때 . 업데이트 경합이 낮 으면 두 클래스의 특성이 비슷합니다. 그러나 높은 경합에서이 클래스의 예상 처리량은 더 높은 공간 소비를 희생하면서 상당히 높아집니다.</target>
        </trans-unit>
        <trans-unit id="c0e1446057f9ee2b23fc1e7c899c2d679af6b946" translate="yes" xml:space="preserve">
          <source>This class is usually preferable to alternatives when multiple threads update a common value that is used for purposes such as summary statistics that are frequently updated but less frequently read.</source>
          <target state="translated">이 클래스는 일반적으로 여러 스레드가 자주 업데이트되지만 덜 자주 읽히는 요약 통계와 같은 목적으로 사용되는 공통 값을 업데이트 할 때 대안보다 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="c85a69b32032b59ad95c0d23120e07e505a591cb" translate="yes" xml:space="preserve">
          <source>This class loader is used to load classes and resources from a search path of URLs referring to both JAR files and directories.</source>
          <target state="translated">이 클래스 로더는 JAR 파일과 디렉토리를 모두 참조하는 URL의 검색 경로에서 클래스와 자원을로드하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dd709644395505577f68c7792e0048dee1e33c64" translate="yes" xml:space="preserve">
          <source>This class loader is used to load classes and resources from a search path of URLs referring to both JAR files and directories. Any &lt;code&gt;jar:&lt;/code&gt; scheme URL (see &lt;a href=&quot;jarurlconnection&quot;&gt;&lt;code&gt;JarURLConnection&lt;/code&gt;&lt;/a&gt;) is assumed to refer to a JAR file. Any &lt;code&gt;file:&lt;/code&gt; scheme URL that ends with a '/' is assumed to refer to a directory. Otherwise, the URL is assumed to refer to a JAR file which will be opened as needed.</source>
          <target state="translated">This class loader is used to load classes and resources from a search path of URLs referring to both JAR files and directories. Any &lt;code&gt;jar:&lt;/code&gt; scheme URL (see &lt;a href=&quot;jarurlconnection&quot;&gt; &lt;code&gt;JarURLConnection&lt;/code&gt; &lt;/a&gt;) is assumed to refer to a JAR file. Any &lt;code&gt;file:&lt;/code&gt; scheme URL that ends with a '/' is assumed to refer to a directory. Otherwise, the URL is assumed to refer to a JAR file which will be opened as needed.</target>
        </trans-unit>
        <trans-unit id="529a888cd1b34805c18df62f3ab778f092ad678a" translate="yes" xml:space="preserve">
          <source>This class loader is used to load classes and resources from a search path of URLs referring to both JAR files and directories. Any URL that ends with a '/' is assumed to refer to a directory. Otherwise, the URL is assumed to refer to a JAR file which will be opened as needed.</source>
          <target state="translated">이 클래스 로더는 JAR 파일과 디렉토리를 모두 참조하는 URL의 검색 경로에서 클래스와 자원을로드하는 데 사용됩니다. '/'로 끝나는 URL은 디렉토리를 나타내는 것으로 가정합니다. 그렇지 않으면 URL은 필요에 따라 열리는 JAR 파일을 참조한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="7ff3345efe67f2f7dc81ceff5cc10f630678ce48" translate="yes" xml:space="preserve">
          <source>This class loader supports the loading of classes and resources from the contents of a &lt;a href=&quot;../util/jar/jarfile#multirelease&quot;&gt;multi-release&lt;/a&gt; JAR file that is referred to by a given URL.</source>
          <target state="translated">This class loader supports the loading of classes and resources from the contents of a &lt;a href=&quot;../util/jar/jarfile#multirelease&quot;&gt;multi-release&lt;/a&gt; JAR file that is referred to by a given URL.</target>
        </trans-unit>
        <trans-unit id="42de706d5e1a6daa9be47b9fe09532c3c74b2762" translate="yes" xml:space="preserve">
          <source>This class loosely implements the &lt;code&gt;java.util.Vector&lt;/code&gt; API, in that it implements the 1.1.x version of &lt;code&gt;java.util.Vector&lt;/code&gt;, has no collection class support, and notifies the &lt;code&gt;ListDataListener&lt;/code&gt;s when changes occur.</source>
          <target state="translated">This class loosely implements the &lt;code&gt;java.util.Vector&lt;/code&gt; API, in that it implements the 1.1.x version of &lt;code&gt;java.util.Vector&lt;/code&gt; , has no collection class support, and notifies the &lt;code&gt;ListDataListener&lt;/code&gt; s when changes occur.</target>
        </trans-unit>
        <trans-unit id="b279648a8d05244cab688891de86763022a9a0e6" translate="yes" xml:space="preserve">
          <source>This class loosely implements the &lt;code&gt;java.util.Vector&lt;/code&gt; API, in that it implements the 1.1.x version of &lt;code&gt;java.util.Vector&lt;/code&gt;, has no collection class support, and notifies the &lt;code&gt;ListDataListener&lt;/code&gt;s when changes occur. Presently it delegates to a &lt;code&gt;Vector&lt;/code&gt;, in a future release it will be a real Collection implementation.</source>
          <target state="translated">This class loosely implements the &lt;code&gt;java.util.Vector&lt;/code&gt; API, in that it implements the 1.1.x version of &lt;code&gt;java.util.Vector&lt;/code&gt; , has no collection class support, and notifies the &lt;code&gt;ListDataListener&lt;/code&gt; s when changes occur. Presently it delegates to a &lt;code&gt;Vector&lt;/code&gt; , in a future release it will be a real Collection implementation.</target>
        </trans-unit>
        <trans-unit id="a848bd89febcae11dc0644f5bb34dc339508d2af" translate="yes" xml:space="preserve">
          <source>This class manages a list of dated timer notifications. A method allows users to add/remove as many notifications as required. When a timer notification is emitted by the timer and becomes obsolete, it is automatically removed from the list of timer notifications.</source>
          <target state="translated">이 클래스는 날짜가 지정된 타이머 알림 목록을 관리합니다. 이 방법을 통해 사용자는 필요한만큼 알림을 추가 / 제거 할 수 있습니다. 타이머 알림이 타이머에 의해 생성되어 더 이상 사용되지 않으면 타이머 알림 목록에서 자동으로 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="651d4105137269848e248a3df5060447b0ffcdb1" translate="yes" xml:space="preserve">
          <source>This class manages repaint requests, allowing the number of repaints to be minimized, for example by collapsing multiple requests into a single repaint for members of a component tree.</source>
          <target state="translated">This class manages repaint requests, allowing the number of repaints to be minimized, for example by collapsing multiple requests into a single repaint for members of a component tree.</target>
        </trans-unit>
        <trans-unit id="d7fb18cf18f4efce410ba5b152b6f139bd0a822b" translate="yes" xml:space="preserve">
          <source>This class manages the configuration of time-zone rules. The static methods provide the public API that can be used to manage the providers. The abstract methods provide the SPI that allows rules to be provided.</source>
          <target state="translated">이 클래스는 표준 시간대 규칙의 구성을 관리합니다. 정적 메소드는 제공자를 관리하는 데 사용할 수있는 공용 API를 제공합니다. 추상 메소드는 규칙을 제공 할 수있는 SPI를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="31a7c86c419911a99a9dbaa4add38668de333305" translate="yes" xml:space="preserve">
          <source>This class may also be used to construct MXBeans. The usage is exactly the same as for Standard MBeans except that in the examples above, the &lt;code&gt;false&lt;/code&gt; parameter to the constructor or &lt;code&gt;super(...)&lt;/code&gt; invocation is instead &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 MXBean을 구성하는 데 사용될 수도 있습니다. 사용법은 위의 예제 에서 생성자 또는 &lt;code&gt;super(...)&lt;/code&gt; 호출에 대한 &lt;code&gt;false&lt;/code&gt; 매개 변수가 true 인 점을 제외하고 표준 MBean과 동일 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c957f8d4e2029248fa76fd56f0d8c3690490208" translate="yes" xml:space="preserve">
          <source>This class may also serve as a convenient base for subclasses that generate items, and use the methods in this class to publish them. For example here is a class that periodically publishes the items generated from a supplier. (In practice you might add methods to independently start and stop generation, to share Executors among publishers, and so on, or use a SubmissionPublisher as a component rather than a superclass.)</source>
          <target state="translated">This class may also serve as a convenient base for subclasses that generate items, and use the methods in this class to publish them. For example here is a class that periodically publishes the items generated from a supplier. (In practice you might add methods to independently start and stop generation, to share Executors among publishers, and so on, or use a SubmissionPublisher as a component rather than a superclass.)</target>
        </trans-unit>
        <trans-unit id="7c9765f4cd7ab26b2e4409b5d937f6e3b566e8d3" translate="yes" xml:space="preserve">
          <source>This class models a quantity or amount of time in terms of seconds and nanoseconds. It can be accessed using other duration-based units, such as minutes and hours. In addition, the &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt; unit can be used and is treated as exactly equal to 24 hours, thus ignoring daylight savings effects. See &lt;a href=&quot;period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; for the date-based equivalent to this class.</source>
          <target state="translated">이 클래스는 초와 나노초로 양 또는 시간을 모델링합니다. 분 및 시간과 같은 다른 기간 기반 단위를 사용하여 액세스 할 수 있습니다. 또한 &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; &lt;/a&gt; 유닛을 사용할 수 있으며 정확히 24 시간으로 취급되므로 일광 절약 효과를 무시합니다. 이 클래스에 해당하는 날짜 기반 &lt;a href=&quot;period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; &lt;/a&gt; 은 기간 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="04486e00606f23dc85340d6bae56c39641e3fa23" translate="yes" xml:space="preserve">
          <source>This class models a quantity or amount of time in terms of years, months and days. See &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; for the time-based equivalent to this class.</source>
          <target state="translated">이 클래스는 년, 월, 일의 수량 또는 시간을 모델링합니다. 이 클래스와 동등한 시간 기반의 &lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0f7ae18c67979186c2a80767b88b6ffcdc398382" translate="yes" xml:space="preserve">
          <source>This class models a single instantaneous point on the time-line. This might be used to record event time-stamps in the application.</source>
          <target state="translated">이 클래스는 타임 라인에서 단일 순간 지점을 모델링합니다. 응용 프로그램에서 이벤트 타임 스탬프를 기록하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42c2d45c4ed07e6ca40c4c509a2bc564114bbf0f" translate="yes" xml:space="preserve">
          <source>This class must be implemented with care to ensure other classes operate correctly. All implementations that can be instantiated must be final, immutable and thread-safe. Subclasses should be Serializable wherever possible.</source>
          <target state="translated">이 클래스는 다른 클래스가 올바르게 작동하도록주의해서 구현해야합니다. 인스턴스화 할 수있는 모든 구현은 최종적이고 변경 불가능하며 스레드로부터 안전해야합니다. 서브 클래스는 가능하면 직렬화 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="77f368256389aaf440d58e7162a94829c8492f69" translate="yes" xml:space="preserve">
          <source>This class offers constant time performance for the basic operations (&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;contains&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt;), assuming the hash function disperses the elements properly among the buckets. Iterating over this set requires time proportional to the sum of the &lt;code&gt;HashSet&lt;/code&gt; instance's size (the number of elements) plus the &quot;capacity&quot; of the backing &lt;code&gt;HashMap&lt;/code&gt; instance (the number of buckets). Thus, it's very important not to set the initial capacity too high (or the load factor too low) if iteration performance is important.</source>
          <target state="translated">이 클래스는 기본 작업 ( &lt;code&gt;add&lt;/code&gt; , &lt;code&gt;remove&lt;/code&gt; , &lt;code&gt;contains&lt;/code&gt; 및 &lt;code&gt;size&lt;/code&gt; )에 대해 일정한 시간 성능을 제공 하며 해시 함수가 버킷간에 요소를 올바르게 분산 시킨다고 가정합니다. 이 세트를 반복하려면 &lt;code&gt;HashSet&lt;/code&gt; 인스턴스 크기 (요소 수)의 합과 배킹 &lt;code&gt;HashMap&lt;/code&gt; 의 &quot;용량&quot;에 비례하는 시간이 필요합니다 인스턴스 (버킷 수)에 . 따라서 반복 성능이 중요한 경우 초기 용량을 너무 높게 (또는로드 팩터가 너무 낮게) 설정하지 않는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="844d8fd9f607f4cb0edfbdd3edc842a5365bdb66" translate="yes" xml:space="preserve">
          <source>This class only stores a reference to the array or &lt;code&gt;List&lt;/code&gt; so if an element of the underlying sequence changes, it's up to the application to notify the &lt;code&gt;ChangeListeners&lt;/code&gt; by calling &lt;code&gt;fireStateChanged&lt;/code&gt;.</source>
          <target state="translated">This class only stores a reference to the array or &lt;code&gt;List&lt;/code&gt; so if an element of the underlying sequence changes, it's up to the application to notify the &lt;code&gt;ChangeListeners&lt;/code&gt; by calling &lt;code&gt;fireStateChanged&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c7e169d7cc51b929b33fbc24e2dabda65476755b" translate="yes" xml:space="preserve">
          <source>This class operates with BufferedImage data in which color components are premultiplied with the alpha component. If the Source BufferedImage has an alpha component, and the color components are not premultiplied with the alpha component, then the data are premultiplied before being convolved. If the Destination has color components which are not premultiplied, then alpha is divided out before storing into the Destination (if alpha is 0, the color components are set to 0). If the Destination has no alpha component, then the resulting alpha is discarded after first dividing it out of the color components.</source>
          <target state="translated">This class operates with BufferedImage data in which color components are premultiplied with the alpha component. If the Source BufferedImage has an alpha component, and the color components are not premultiplied with the alpha component, then the data are premultiplied before being convolved. If the Destination has color components which are not premultiplied, then alpha is divided out before storing into the Destination (if alpha is 0, the color components are set to 0). If the Destination has no alpha component, then the resulting alpha is discarded after first dividing it out of the color components.</target>
        </trans-unit>
        <trans-unit id="b638e408deb08050c7a85b99719c1054d7a96714" translate="yes" xml:space="preserve">
          <source>This class performs a pixel-by-pixel color conversion of the data in the source image.</source>
          <target state="translated">This class performs a pixel-by-pixel color conversion of the data in the source image.</target>
        </trans-unit>
        <trans-unit id="234ce918e77cbf088fffab952d95f288a9677bcb" translate="yes" xml:space="preserve">
          <source>This class performs a pixel-by-pixel color conversion of the data in the source image. The resulting color values are scaled to the precision of the destination image. Color conversion can be specified via an array of ColorSpace objects or an array of ICC_Profile objects.</source>
          <target state="translated">This class performs a pixel-by-pixel color conversion of the data in the source image. The resulting color values are scaled to the precision of the destination image. Color conversion can be specified via an array of ColorSpace objects or an array of ICC_Profile objects.</target>
        </trans-unit>
        <trans-unit id="9e3c83766148d314a5dcb44a29ec682609b968e2" translate="yes" xml:space="preserve">
          <source>This class performs a pixel-by-pixel rescaling of the data in the source image by multiplying the sample values for each pixel by a scale factor and then adding an offset.</source>
          <target state="translated">This class performs a pixel-by-pixel rescaling of the data in the source image by multiplying the sample values for each pixel by a scale factor and then adding an offset.</target>
        </trans-unit>
        <trans-unit id="324c69cec49278b438662fedeee1535de945661b" translate="yes" xml:space="preserve">
          <source>This class performs a pixel-by-pixel rescaling of the data in the source image by multiplying the sample values for each pixel by a scale factor and then adding an offset. The scaled sample values are clipped to the minimum/maximum representable in the destination image.</source>
          <target state="translated">This class performs a pixel-by-pixel rescaling of the data in the source image by multiplying the sample values for each pixel by a scale factor and then adding an offset. The scaled sample values are clipped to the minimum/maximum representable in the destination image.</target>
        </trans-unit>
        <trans-unit id="e623862fc70a02dc462aa1cc116d3bd0ef328806" translate="yes" xml:space="preserve">
          <source>This class performs an arbitrary linear combination of the bands in a &lt;code&gt;Raster&lt;/code&gt;, using a specified matrix.</source>
          <target state="translated">This class performs an arbitrary linear combination of the bands in a &lt;code&gt;Raster&lt;/code&gt; , using a specified matrix.</target>
        </trans-unit>
        <trans-unit id="5d9cf4522bd4214c3a1eb3e6b3a320bdd0d862b9" translate="yes" xml:space="preserve">
          <source>This class performs the synchronization required to implement the &lt;a href=&quot;../channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; specification. Implementations of the &lt;a href=&quot;#implCloseChannel()&quot;&gt;&lt;code&gt;implCloseChannel&lt;/code&gt;&lt;/a&gt; method need not synchronize against other threads that might be attempting to close the channel.</source>
          <target state="translated">This class performs the synchronization required to implement the &lt;a href=&quot;../channel&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt; specification. Implementations of the &lt;a href=&quot;#implCloseChannel()&quot;&gt; &lt;code&gt;implCloseChannel&lt;/code&gt; &lt;/a&gt; method need not synchronize against other threads that might be attempting to close the channel.</target>
        </trans-unit>
        <trans-unit id="572a8d65ebeff151932bda9611b422ec79f16007" translate="yes" xml:space="preserve">
          <source>This class performs the synchronization required to implement the &lt;a href=&quot;../channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; specification. Implementations of the &lt;a href=&quot;abstractinterruptiblechannel#implCloseChannel--&quot;&gt;&lt;code&gt;implCloseChannel&lt;/code&gt;&lt;/a&gt; method need not synchronize against other threads that might be attempting to close the channel.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;../channel&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt; 스펙 을 구현하는 데 필요한 동기화를 수행합니다 . &lt;a href=&quot;abstractinterruptiblechannel#implCloseChannel--&quot;&gt; &lt;code&gt;implCloseChannel&lt;/code&gt; 의&lt;/a&gt; 구현 메소드의 채널을 닫으려고하는 다른 스레드와 동기화 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="5f38876ae64b3fbdfae8664b32aac1253a1b1a89" translate="yes" xml:space="preserve">
          <source>This class properly reads and retrieves values placed in the UIDefaults according to the standard Nimbus naming conventions. It will create and retrieve painters, fonts, colors, and other data stored there.</source>
          <target state="translated">This class properly reads and retrieves values placed in the UIDefaults according to the standard Nimbus naming conventions. It will create and retrieve painters, fonts, colors, and other data stored there.</target>
        </trans-unit>
        <trans-unit id="d07dbbe71cc840ce02b9469f3fc04a4b888acea3" translate="yes" xml:space="preserve">
          <source>This class provides &lt;code&gt;adapt&lt;/code&gt; methods for &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;callable&quot;&gt;&lt;code&gt;Callable&lt;/code&gt;&lt;/a&gt;, that may be of use when mixing execution of &lt;code&gt;ForkJoinTasks&lt;/code&gt; with other kinds of tasks. When all tasks are of this form, consider using a pool constructed in &lt;em&gt;asyncMode&lt;/em&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;callable&quot;&gt; &lt;code&gt;Callable&lt;/code&gt; 에&lt;/a&gt; 대한 &lt;code&gt;adapt&lt;/code&gt; 메소드를 제공합니다.이 메소드 는 &lt;code&gt;ForkJoinTasks&lt;/code&gt; 실행을 다른 종류의 태스크와 혼합 할 때 사용할 수 있습니다 . 모든 작업이이 형식 인 경우 &lt;em&gt;asyncMode로&lt;/em&gt; 구성된 풀 사용을 고려 &lt;em&gt;하십시오&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="04475ec4c940785075b7f914495d951b317da58b" translate="yes" xml:space="preserve">
          <source>This class provides &lt;code&gt;protected&lt;/code&gt; overridable &lt;a href=&quot;#beforeExecute(java.lang.Thread,java.lang.Runnable)&quot;&gt;&lt;code&gt;beforeExecute(Thread, Runnable)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#afterExecute(java.lang.Runnable,java.lang.Throwable)&quot;&gt;&lt;code&gt;afterExecute(Runnable, Throwable)&lt;/code&gt;&lt;/a&gt; methods that are called before and after execution of each task. These can be used to manipulate the execution environment; for example, reinitializing ThreadLocals, gathering statistics, or adding log entries. Additionally, method &lt;a href=&quot;#terminated()&quot;&gt;&lt;code&gt;terminated()&lt;/code&gt;&lt;/a&gt; can be overridden to perform any special processing that needs to be done once the Executor has fully terminated.</source>
          <target state="translated">This class provides &lt;code&gt;protected&lt;/code&gt; overridable &lt;a href=&quot;#beforeExecute(java.lang.Thread,java.lang.Runnable)&quot;&gt; &lt;code&gt;beforeExecute(Thread, Runnable)&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#afterExecute(java.lang.Runnable,java.lang.Throwable)&quot;&gt; &lt;code&gt;afterExecute(Runnable, Throwable)&lt;/code&gt; &lt;/a&gt; methods that are called before and after execution of each task. These can be used to manipulate the execution environment; for example, reinitializing ThreadLocals, gathering statistics, or adding log entries. Additionally, method &lt;a href=&quot;#terminated()&quot;&gt; &lt;code&gt;terminated()&lt;/code&gt; &lt;/a&gt; can be overridden to perform any special processing that needs to be done once the Executor has fully terminated.</target>
        </trans-unit>
        <trans-unit id="c359178fcd5b6cf7a61127c158970f1b1cdfd554" translate="yes" xml:space="preserve">
          <source>This class provides &lt;code&gt;protected&lt;/code&gt; overridable &lt;a href=&quot;threadpoolexecutor#beforeExecute-java.lang.Thread-java.lang.Runnable-&quot;&gt;&lt;code&gt;beforeExecute(Thread, Runnable)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;threadpoolexecutor#afterExecute-java.lang.Runnable-java.lang.Throwable-&quot;&gt;&lt;code&gt;afterExecute(Runnable, Throwable)&lt;/code&gt;&lt;/a&gt; methods that are called before and after execution of each task. These can be used to manipulate the execution environment; for example, reinitializing ThreadLocals, gathering statistics, or adding log entries. Additionally, method &lt;a href=&quot;threadpoolexecutor#terminated--&quot;&gt;&lt;code&gt;terminated()&lt;/code&gt;&lt;/a&gt; can be overridden to perform any special processing that needs to be done once the Executor has fully terminated.</source>
          <target state="translated">이 클래스는 각 작업의 실행 전후에 호출 &lt;code&gt;protected&lt;/code&gt; 재정의 가능한 재정의 된 &lt;a href=&quot;threadpoolexecutor#beforeExecute-java.lang.Thread-java.lang.Runnable-&quot;&gt; &lt;code&gt;beforeExecute(Thread, Runnable)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;threadpoolexecutor#afterExecute-java.lang.Runnable-java.lang.Throwable-&quot;&gt; &lt;code&gt;afterExecute(Runnable, Throwable)&lt;/code&gt; &lt;/a&gt; 메소드를 제공합니다. 이것들은 실행 환경을 조작하는 데 사용될 수 있습니다. 예를 들어 ThreadLocals 다시 초기화, 통계 수집 또는 로그 항목 추가 등이 있습니다. 또한 메소드 &lt;a href=&quot;threadpoolexecutor#terminated--&quot;&gt; &lt;code&gt;terminated()&lt;/code&gt; &lt;/a&gt; Executor가 완전히 종료 된 후에 수행해야하는 특수 처리를 수행하기 위해 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3bb814e875fe79e590152d47f871c9c3753e426" translate="yes" xml:space="preserve">
          <source>This class provides a DOM-specific implementation of the &lt;a href=&quot;../xmlcryptocontext&quot;&gt;&lt;code&gt;XMLCryptoContext&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">This class provides a DOM-specific implementation of the &lt;a href=&quot;../xmlcryptocontext&quot;&gt; &lt;code&gt;XMLCryptoContext&lt;/code&gt; &lt;/a&gt; interface.</target>
        </trans-unit>
        <trans-unit id="40191826bb3d4fb1b5076c035560cd986624f66b" translate="yes" xml:space="preserve">
          <source>This class provides a DOM-specific implementation of the &lt;a href=&quot;../xmlcryptocontext&quot;&gt;&lt;code&gt;XMLCryptoContext&lt;/code&gt;&lt;/a&gt; interface. It also includes additional methods that are specific to a DOM-based implementation for registering and retrieving elements that contain attributes of type ID.</source>
          <target state="translated">This class provides a DOM-specific implementation of the &lt;a href=&quot;../xmlcryptocontext&quot;&gt; &lt;code&gt;XMLCryptoContext&lt;/code&gt; &lt;/a&gt; interface. It also includes additional methods that are specific to a DOM-based implementation for registering and retrieving elements that contain attributes of type ID.</target>
        </trans-unit>
        <trans-unit id="8ee562e98404070975b126b69dbde36027259809" translate="yes" xml:space="preserve">
          <source>This class provides a basic file object implementation which can be used as building block for creating file objects. For example, here is how to define a file object which represent source code stored in a string:</source>
          <target state="translated">이 클래스는 파일 객체를 만들기위한 빌딩 블록으로 사용할 수있는 기본 파일 객체 구현을 제공합니다. 예를 들어, 문자열에 저장된 소스 코드를 나타내는 파일 객체를 정의하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="05d8d398d426ce102cd4aa03d16d04b81f601c82" translate="yes" xml:space="preserve">
          <source>This class provides a basic implementation of the &lt;code&gt;Attribute&lt;/code&gt; interface.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Attribute&lt;/code&gt; 의 기본 구현을 제공합니다 인터페이스 .</target>
        </trans-unit>
        <trans-unit id="c76edbc01940fde3909601c41bf2745f78b06d41" translate="yes" xml:space="preserve">
          <source>This class provides a basic implementation of the &lt;code&gt;Control&lt;/code&gt; interface.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Control&lt;/code&gt; 인터페이스 의 기본 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="ccc26575db7c5009c2d93d0c55ec11a1843c5499" translate="yes" xml:space="preserve">
          <source>This class provides a basic implementation of the &lt;code&gt;Control&lt;/code&gt; interface. It represents an LDAPv3 Control as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Control&lt;/code&gt; 인터페이스 의 기본 구현을 제공합니다 . &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의 된 LDAPv3 컨트롤을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="f2949ae857379632b9e3dc8c272a7c7d3f63ae6b" translate="yes" xml:space="preserve">
          <source>This class provides a basic implementation of the Attributes interface.</source>
          <target state="translated">이 클래스는 속성 인터페이스의 기본 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f041af9229b06ac5802686c8a5dfdb84119ae14b" translate="yes" xml:space="preserve">
          <source>This class provides a convenience implementation of the SAX &lt;a href=&quot;../attributelist&quot;&gt;&lt;code&gt;AttributeList&lt;/code&gt;&lt;/a&gt; interface. This implementation is useful both for SAX parser writers, who can use it to provide attributes to the application, and for SAX application writers, who can use it to create a persistent copy of an element's attribute specifications:</source>
          <target state="translated">This class provides a convenience implementation of the SAX &lt;a href=&quot;../attributelist&quot;&gt; &lt;code&gt;AttributeList&lt;/code&gt; &lt;/a&gt; interface. This implementation is useful both for SAX parser writers, who can use it to provide attributes to the application, and for SAX application writers, who can use it to create a persistent copy of an element's attribute specifications:</target>
        </trans-unit>
        <trans-unit id="5643c89b210834159b9a8538a094393fd0316f70" translate="yes" xml:space="preserve">
          <source>This class provides a cryptographically strong random number generator (RNG).</source>
          <target state="translated">이 클래스는 암호화 적으로 강력한 난수 생성기 (RNG)를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="13c50cb4a3c4eda48950bf4f62b7df1325301288" translate="yes" xml:space="preserve">
          <source>This class provides a default implementation of the SAX2 &lt;a href=&quot;../attributes&quot;&gt;&lt;code&gt;Attributes&lt;/code&gt;&lt;/a&gt; interface, with the addition of manipulators so that the list can be modified or reused.</source>
          <target state="translated">This class provides a default implementation of the SAX2 &lt;a href=&quot;../attributes&quot;&gt; &lt;code&gt;Attributes&lt;/code&gt; &lt;/a&gt; interface, with the addition of manipulators so that the list can be modified or reused.</target>
        </trans-unit>
        <trans-unit id="d5bc58376dcbbe48a54f51b496fdc95eac805e6f" translate="yes" xml:space="preserve">
          <source>This class provides a number of methods that make it easy to use for the duration datatype of XML Schema 1.0 with the errata.</source>
          <target state="translated">This class provides a number of methods that make it easy to use for the duration datatype of XML Schema 1.0 with the errata.</target>
        </trans-unit>
        <trans-unit id="397fa39d97f5aa6734e4531b6c67034ad3ac2683" translate="yes" xml:space="preserve">
          <source>This class provides a policy for the various JInternalFrame methods, it is not meant to be called directly rather the various JInternalFrame methods will call into the DesktopManager.</source>
          <target state="translated">This class provides a policy for the various JInternalFrame methods, it is not meant to be called directly rather the various JInternalFrame methods will call into the DesktopManager.</target>
        </trans-unit>
        <trans-unit id="2c8ebc6895738a8383af5c61077a7d73e9a5a93c" translate="yes" xml:space="preserve">
          <source>This class provides a set of basic arithmetic operations, such as addition, subtraction and multiplication. Because durations don't have total order, an operation could fail for some combinations of operations. For example, you cannot subtract 15 days from 1 month. See the javadoc of those methods for detailed conditions where this could happen.</source>
          <target state="translated">This class provides a set of basic arithmetic operations, such as addition, subtraction and multiplication. Because durations don't have total order, an operation could fail for some combinations of operations. For example, you cannot subtract 15 days from 1 month. See the javadoc of those methods for detailed conditions where this could happen.</target>
        </trans-unit>
        <trans-unit id="f55fba4dd82d208d447b8686f1389a2aeaa74719" translate="yes" xml:space="preserve">
          <source>This class provides a skeletal implementation of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface to minimize the effort required to implement this interface backed by a &quot;random access&quot; data store (such as an array).</source>
          <target state="translated">이 클래스는 &quot;랜덤 액세스&quot;데이터 저장소 (예 : 배열)로 지원되는이 인터페이스를 구현하는 데 필요한 노력을 최소화하기 위해 &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; 인터페이스 의 골격 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="a9a8bce22440471af4ffc08d7715360263e088b3" translate="yes" xml:space="preserve">
          <source>This class provides a skeletal implementation of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface to minimize the effort required to implement this interface backed by a &quot;random access&quot; data store (such as an array). For sequential access data (such as a linked list), &lt;a href=&quot;abstractsequentiallist&quot;&gt;&lt;code&gt;AbstractSequentialList&lt;/code&gt;&lt;/a&gt; should be used in preference to this class.</source>
          <target state="translated">이 클래스는 &quot;랜덤 액세스&quot;데이터 저장소 (예 : 배열)로 지원되는이 인터페이스를 구현하는 데 필요한 노력을 최소화하기 위해 &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; 인터페이스 의 골격 구현을 제공합니다 . 순차 액세스 데이터 (예 : 링크 된 목록)의 경우이 클래스에 우선하여 &lt;a href=&quot;abstractsequentiallist&quot;&gt; &lt;code&gt;AbstractSequentialList&lt;/code&gt; 를&lt;/a&gt; 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="c35b157721aaf532e29158ba2778a04b725647fc" translate="yes" xml:space="preserve">
          <source>This class provides a skeletal implementation of the &lt;a href=&quot;preferences&quot;&gt;&lt;code&gt;Preferences&lt;/code&gt;&lt;/a&gt; class, greatly easing the task of implementing it.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;preferences&quot;&gt; &lt;code&gt;Preferences&lt;/code&gt; &lt;/a&gt; 클래스 의 골격 구현을 제공하여 구현 작업을 크게 완화합니다.</target>
        </trans-unit>
        <trans-unit id="5e0f3b9d837b76b6b98e1f53a39f4805a7485580" translate="yes" xml:space="preserve">
          <source>This class provides a skeletal implementation of the &lt;code&gt;Collection&lt;/code&gt; interface, to minimize the effort required to implement this interface.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Collection&lt;/code&gt; 인터페이스 의 골격 구현을 제공 하여이 인터페이스를 구현하는 데 필요한 노력을 최소화합니다.</target>
        </trans-unit>
        <trans-unit id="5885275d5749220095df4b7df8255a2c192259bb" translate="yes" xml:space="preserve">
          <source>This class provides a skeletal implementation of the &lt;code&gt;List&lt;/code&gt; interface to minimize the effort required to implement this interface backed by a &quot;sequential access&quot; data store (such as a linked list).</source>
          <target state="translated">이 클래스는 &quot;순차 액세스&quot;데이터 저장소 (예 : 링크 된 목록)로 지원되는이 인터페이스를 구현하는 데 필요한 노력을 최소화하기 위해 &lt;code&gt;List&lt;/code&gt; 인터페이스 의 골격 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="10d88f93fe64649e0887b39da1d0c6744f97e975" translate="yes" xml:space="preserve">
          <source>This class provides a skeletal implementation of the &lt;code&gt;List&lt;/code&gt; interface to minimize the effort required to implement this interface backed by a &quot;sequential access&quot; data store (such as a linked list). For random access data (such as an array), &lt;code&gt;AbstractList&lt;/code&gt; should be used in preference to this class.</source>
          <target state="translated">이 클래스는 &quot;순차 액세스&quot;데이터 저장소 (예 : 링크 된 목록)로 지원되는이 인터페이스를 구현하는 데 필요한 노력을 최소화하기 위해 &lt;code&gt;List&lt;/code&gt; 인터페이스 의 골격 구현을 제공합니다 . 랜덤 액세스 데이터 (예 : 배열)의 경우이 클래스에 우선하여 &lt;code&gt;AbstractList&lt;/code&gt; 를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="4e9c7178bf4df3b8e26e321d0c30eef08920002a" translate="yes" xml:space="preserve">
          <source>This class provides a skeletal implementation of the &lt;code&gt;Map&lt;/code&gt; interface, to minimize the effort required to implement this interface.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Map&lt;/code&gt; 인터페이스 의 골격 구현을 제공 하여이 인터페이스를 구현하는 데 필요한 노력을 최소화합니다.</target>
        </trans-unit>
        <trans-unit id="30ed5048a3885661e3872b83ab662fb50a15b98b" translate="yes" xml:space="preserve">
          <source>This class provides a skeletal implementation of the &lt;code&gt;Set&lt;/code&gt; interface to minimize the effort required to implement this interface.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Set&lt;/code&gt; 인터페이스 의 골격 구현을 제공 하여이 인터페이스를 구현하는 데 필요한 노력을 최소화합니다.</target>
        </trans-unit>
        <trans-unit id="3adf9432f3d1e478a259d4fa3c8d7026782100da" translate="yes" xml:space="preserve">
          <source>This class provides access to the type information determined by &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This class provides access to the type information determined by &lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="742945141cd8ea5fc97f1f029bff26772617ef11" translate="yes" xml:space="preserve">
          <source>This class provides additional methods for generating random streams, that employ the above techniques when used in &lt;code&gt;
 stream.parallel()&lt;/code&gt; mode.</source>
          <target state="translated">This class provides additional methods for generating random streams, that employ the above techniques when used in &lt;code&gt; stream.parallel()&lt;/code&gt; mode.</target>
        </trans-unit>
        <trans-unit id="850b3f6a723e4a105d67846c4e199ce19413260f" translate="yes" xml:space="preserve">
          <source>This class provides additional methods for generating random streams, that employ the above techniques when used in &lt;code&gt;stream.parallel()&lt;/code&gt; mode.</source>
          <target state="translated">이 클래스는 &lt;code&gt;stream.parallel()&lt;/code&gt; 모드 에서 사용될 때 위의 기술을 사용하는 임의의 스트림을 생성하기위한 추가 메소드를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="1e2e96e0f3ae47fd59d509ed69e427ed93ce4793" translate="yes" xml:space="preserve">
          <source>This class provides all of the optional &lt;code&gt;Map&lt;/code&gt; operations, and permits null elements. Like &lt;code&gt;HashMap&lt;/code&gt;, it provides constant-time performance for the basic operations (&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;contains&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt;), assuming the hash function disperses elements properly among the buckets. Performance is likely to be just slightly below that of &lt;code&gt;HashMap&lt;/code&gt;, due to the added expense of maintaining the linked list, with one exception: Iteration over the collection-views of a &lt;code&gt;LinkedHashMap&lt;/code&gt; requires time proportional to the</source>
          <target state="translated">이 클래스는 모든 선택적 &lt;code&gt;Map&lt;/code&gt; 작업을 제공하고 null 요소를 허용합니다. &lt;code&gt;HashMap&lt;/code&gt; 과 마찬가지로 해시 함수가 버킷간에 요소를 올바르게 분산시키는 것으로 가정하여 기본 작업 ( &lt;code&gt;add&lt;/code&gt; , &lt;code&gt;contains&lt;/code&gt; 및 &lt;code&gt;remove&lt;/code&gt; )에 일정한 시간 성능을 제공합니다 . 링크 된 목록을 유지 관리하는 추가 비용으로 인해 성능이 &lt;code&gt;HashMap&lt;/code&gt; 의 성능보다 약간 떨어질 수 있습니다. 단 , &lt;code&gt;LinkedHashMap&lt;/code&gt; 의 콜렉션보기를 반복하는 데는 시간이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ff706953493a74746d04f26b24913b430916a541" translate="yes" xml:space="preserve">
          <source>This class provides all of the optional &lt;code&gt;Set&lt;/code&gt; operations, and permits null elements. Like &lt;code&gt;HashSet&lt;/code&gt;, it provides constant-time performance for the basic operations (&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;contains&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt;), assuming the hash function disperses elements properly among the buckets. Performance is likely to be just slightly below that of &lt;code&gt;HashSet&lt;/code&gt;, due to the added expense of maintaining the linked list, with one exception: Iteration over a &lt;code&gt;LinkedHashSet&lt;/code&gt; requires time proportional to the</source>
          <target state="translated">이 클래스는 모든 선택적 &lt;code&gt;Set&lt;/code&gt; 작업을 제공하고 null 요소를 허용합니다. &lt;code&gt;HashSet&lt;/code&gt; 과 마찬가지로 해시 함수가 버킷간에 요소를 올바르게 분산시키는 것으로 가정하여 기본 작업 ( &lt;code&gt;add&lt;/code&gt; , &lt;code&gt;contains&lt;/code&gt; 및 &lt;code&gt;remove&lt;/code&gt; )에 일정한 시간 성능을 제공합니다 . 링크 된 목록을 유지 관리하는 추가 비용으로 인해 성능이 &lt;code&gt;HashSet&lt;/code&gt; 의 성능보다 약간 떨어질 수 있습니다 . &lt;code&gt;LinkedHashSet&lt;/code&gt; 에 대한 반복 에는 시간에 비례합니다.</target>
        </trans-unit>
        <trans-unit id="21691796695b60e351045a6a8026bd2180011a02" translate="yes" xml:space="preserve">
          <source>This class provides all of the optional map operations, and permits &lt;code&gt;null&lt;/code&gt; values and the &lt;code&gt;null&lt;/code&gt; key. This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time.</source>
          <target state="translated">이 클래스는 모든 선택적 맵 작업을 제공하고 &lt;code&gt;null&lt;/code&gt; 값과 &lt;code&gt;null&lt;/code&gt; 키를 허용 합니다. 이 클래스는지도의 순서를 보증하지 않습니다. 특히, 주문이 시간이 지남에 따라 일정하게 유지된다는 보장은 없습니다.</target>
        </trans-unit>
        <trans-unit id="41392a6918370aea2f840bba2a364e527f7bcebf" translate="yes" xml:space="preserve">
          <source>This class provides an easy way to create an ImageFilter which modifies the pixels of an image in the default RGB ColorModel.</source>
          <target state="translated">This class provides an easy way to create an ImageFilter which modifies the pixels of an image in the default RGB ColorModel.</target>
        </trans-unit>
        <trans-unit id="dd90f9a230670a8bd4da4e68bcbe37582d6e68ed" translate="yes" xml:space="preserve">
          <source>This class provides an easy way to create an ImageFilter which modifies the pixels of an image in the default RGB ColorModel. It is meant to be used in conjunction with a FilteredImageSource object to produce filtered versions of existing images. It is an abstract class that provides the calls needed to channel all of the pixel data through a single method which converts pixels one at a time in the default RGB ColorModel regardless of the ColorModel being used by the ImageProducer. The only method which needs to be defined to create a useable image filter is the filterRGB method. Here is an example of a definition of a filter which swaps the red and blue components of an image:</source>
          <target state="translated">This class provides an easy way to create an ImageFilter which modifies the pixels of an image in the default RGB ColorModel. It is meant to be used in conjunction with a FilteredImageSource object to produce filtered versions of existing images. It is an abstract class that provides the calls needed to channel all of the pixel data through a single method which converts pixels one at a time in the default RGB ColorModel regardless of the ColorModel being used by the ImageProducer. The only method which needs to be defined to create a useable image filter is the filterRGB method. Here is an example of a definition of a filter which swaps the red and blue components of an image:</target>
        </trans-unit>
        <trans-unit id="d7d16893e35e5bb2d3a4daa3d587380bb5244ac9" translate="yes" xml:space="preserve">
          <source>This class provides an efficient and scalable basis for synchronization in part by specializing its range of use to synchronizers that can rely on &lt;code&gt;int&lt;/code&gt; state, acquire, and release parameters, and an internal FIFO wait queue. When this does not suffice, you can build synchronizers from a lower level using &lt;a href=&quot;../atomic/package-summary&quot;&gt;&lt;code&gt;atomic&lt;/code&gt;&lt;/a&gt; classes, your own custom &lt;a href=&quot;../../queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; classes, and &lt;a href=&quot;locksupport&quot;&gt;&lt;code&gt;LockSupport&lt;/code&gt;&lt;/a&gt; blocking support.</source>
          <target state="translated">이 클래스는 &lt;code&gt;int&lt;/code&gt; 상태에 의존 하고 매개 변수를 획득 및 해제 할 수있는 동기화 프로그램 과 내부 FIFO 대기 큐 에 사용할 수있는 범위를 전문화하여 부분적으로 효율적이고 확장 가능한 동기화 기반을 제공합니다 . 이것으로 충분하지 않으면 &lt;a href=&quot;../atomic/package-summary&quot;&gt; &lt;code&gt;atomic&lt;/code&gt; &lt;/a&gt; 클래스, 사용자 정의 &lt;a href=&quot;../../queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; 클래스 및 &lt;a href=&quot;locksupport&quot;&gt; &lt;code&gt;LockSupport&lt;/code&gt; &lt;/a&gt; 차단 지원을 사용하여 하위 레벨에서 동기화 프로그램을 빌드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="03377d96aad280c7c9746d541c6114080e4cce01" translate="yes" xml:space="preserve">
          <source>This class provides an implementation of &lt;code&gt;LazyValue&lt;/code&gt; which can be used to delay loading of the Class for the instance to be created.</source>
          <target state="translated">This class provides an implementation of &lt;code&gt;LazyValue&lt;/code&gt; which can be used to delay loading of the Class for the instance to be created.</target>
        </trans-unit>
        <trans-unit id="1b078b3bc2472e33181bd8fb61a536a1214fbfb7" translate="yes" xml:space="preserve">
          <source>This class provides an implementation of &lt;code&gt;LazyValue&lt;/code&gt; which can be used to delay loading of the Class for the instance to be created. It also avoids creation of an anonymous inner class for the &lt;code&gt;LazyValue&lt;/code&gt; subclass. Both of these improve performance at the time that a a Look and Feel is loaded, at the cost of a slight performance reduction the first time &lt;code&gt;createValue&lt;/code&gt; is called (since Reflection APIs are used).</source>
          <target state="translated">This class provides an implementation of &lt;code&gt;LazyValue&lt;/code&gt; which can be used to delay loading of the Class for the instance to be created. It also avoids creation of an anonymous inner class for the &lt;code&gt;LazyValue&lt;/code&gt; subclass. Both of these improve performance at the time that a a Look and Feel is loaded, at the cost of a slight performance reduction the first time &lt;code&gt;createValue&lt;/code&gt; is called (since Reflection APIs are used).</target>
        </trans-unit>
        <trans-unit id="1229f7f848323a2f275ecdc2010e922238582b7c" translate="yes" xml:space="preserve">
          <source>This class provides an implementation of the Java Accessibility API appropriate for JTableHeader entries.</source>
          <target state="translated">This class provides an implementation of the Java Accessibility API appropriate for JTableHeader entries.</target>
        </trans-unit>
        <trans-unit id="027df20526035274a2572144300b415422d0bcc5" translate="yes" xml:space="preserve">
          <source>This class provides common implementations of &lt;a href=&quot;temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt;. These are defined here as they must be constants, and the definition of lambdas does not guarantee that. By assigning them once here, they become 'normal' Java constants.</source>
          <target state="translated">이 클래스는 일반적인 &lt;a href=&quot;temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 구현을 제공합니다 . 이것들은 상수이어야하기 때문에 여기에 정의되어 있으며 람다의 정의는 그것을 보증하지 않습니다. 여기에 한 번 할당하면 '정상적인'Java 상수가됩니다.</target>
        </trans-unit>
        <trans-unit id="3ed2ca8124b831e7f0333c41a85f48cab32f339e" translate="yes" xml:space="preserve">
          <source>This class provides constant-time performance for the basic operations (&lt;code&gt;get&lt;/code&gt; and &lt;code&gt;put&lt;/code&gt;), assuming the system identity hash function (&lt;a href=&quot;../lang/system#identityHashCode(java.lang.Object)&quot;&gt;&lt;code&gt;System.identityHashCode(Object)&lt;/code&gt;&lt;/a&gt;) disperses elements properly among the buckets.</source>
          <target state="translated">This class provides constant-time performance for the basic operations ( &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;put&lt;/code&gt; ), assuming the system identity hash function (&lt;a href=&quot;../lang/system#identityHashCode(java.lang.Object)&quot;&gt; &lt;code&gt;System.identityHashCode(Object)&lt;/code&gt; &lt;/a&gt;) disperses elements properly among the buckets.</target>
        </trans-unit>
        <trans-unit id="3d782ad4534620a208daae5188b15671d6dab525" translate="yes" xml:space="preserve">
          <source>This class provides constant-time performance for the basic operations (&lt;code&gt;get&lt;/code&gt; and &lt;code&gt;put&lt;/code&gt;), assuming the system identity hash function (&lt;a href=&quot;../lang/system#identityHashCode-java.lang.Object-&quot;&gt;&lt;code&gt;System.identityHashCode(Object)&lt;/code&gt;&lt;/a&gt;) disperses elements properly among the buckets.</source>
          <target state="translated">이 클래스는 시스템 아이덴티티 해시 함수 ( &lt;a href=&quot;../lang/system#identityHashCode-java.lang.Object-&quot;&gt; &lt;code&gt;System.identityHashCode(Object)&lt;/code&gt; &lt;/a&gt; )가 버킷간에 요소를 올바르게 분산시키는 것으로 가정 하여 기본 작업 ( &lt;code&gt;get&lt;/code&gt; 및 &lt;code&gt;put&lt;/code&gt; )에 일정한 시간 성능을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="647294909238545153c5391e2be985c0c8378595" translate="yes" xml:space="preserve">
          <source>This class provides default implementations for the JFC &lt;code&gt;Action&lt;/code&gt; interface.</source>
          <target state="translated">This class provides default implementations for the JFC &lt;code&gt;Action&lt;/code&gt; interface.</target>
        </trans-unit>
        <trans-unit id="7ac777a96ded5581b0b43c2539274181a7ae15bf" translate="yes" xml:space="preserve">
          <source>This class provides default implementations for the JFC &lt;code&gt;Action&lt;/code&gt; interface. Standard behaviors like the get and set methods for &lt;code&gt;Action&lt;/code&gt; object properties (icon, text, and enabled) are defined here. The developer need only subclass this abstract class and define the &lt;code&gt;actionPerformed&lt;/code&gt; method.</source>
          <target state="translated">This class provides default implementations for the JFC &lt;code&gt;Action&lt;/code&gt; interface. Standard behaviors like the get and set methods for &lt;code&gt;Action&lt;/code&gt; object properties (icon, text, and enabled) are defined here. The developer need only subclass this abstract class and define the &lt;code&gt;actionPerformed&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="31371b25e602ff78c99b3d103a9d8c62b0ccd38b" translate="yes" xml:space="preserve">
          <source>This class provides default implementations of several &lt;code&gt;Image&lt;/code&gt; methods for classes that want to implement the &lt;code&gt;MultiResolutionImage&lt;/code&gt; interface.</source>
          <target state="translated">This class provides default implementations of several &lt;code&gt;Image&lt;/code&gt; methods for classes that want to implement the &lt;code&gt;MultiResolutionImage&lt;/code&gt; interface.</target>
        </trans-unit>
        <trans-unit id="9a8675077e036b7426cef240146ccb5097e024a6" translate="yes" xml:space="preserve">
          <source>This class provides default implementations of several &lt;code&gt;Image&lt;/code&gt; methods for classes that want to implement the &lt;code&gt;MultiResolutionImage&lt;/code&gt; interface. For example,</source>
          <target state="translated">This class provides default implementations of several &lt;code&gt;Image&lt;/code&gt; methods for classes that want to implement the &lt;code&gt;MultiResolutionImage&lt;/code&gt; interface. For example,</target>
        </trans-unit>
        <trans-unit id="a9cb2f8fd6fb692752836a91d6666165347f6e16" translate="yes" xml:space="preserve">
          <source>This class provides definitions of the notifications sent by timer MBeans.</source>
          <target state="translated">이 클래스는 타이머 MBean에 의해 송신 된 통지의 정의를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6e9770181b692828eb0812100e35ea2c273b4784" translate="yes" xml:space="preserve">
          <source>This class provides enumerations for efficiently traversing a tree or subtree in various orders or for following the path between two nodes. A &lt;code&gt;DefaultMutableTreeNode&lt;/code&gt; may also hold a reference to a user object, the use of which is left to the user. Asking a &lt;code&gt;DefaultMutableTreeNode&lt;/code&gt; for its string representation with &lt;code&gt;toString()&lt;/code&gt; returns the string representation of its user object.</source>
          <target state="translated">This class provides enumerations for efficiently traversing a tree or subtree in various orders or for following the path between two nodes. A &lt;code&gt;DefaultMutableTreeNode&lt;/code&gt; may also hold a reference to a user object, the use of which is left to the user. Asking a &lt;code&gt;DefaultMutableTreeNode&lt;/code&gt; for its string representation with &lt;code&gt;toString()&lt;/code&gt; returns the string representation of its user object.</target>
        </trans-unit>
        <trans-unit id="5b305425f2398615078405474d162a9f3135b589" translate="yes" xml:space="preserve">
          <source>This class provides inspection, instrumentation, and monitoring methods for the internal queue, as well as similar methods for condition objects. These can be exported as desired into classes using an &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; for their synchronization mechanics.</source>
          <target state="translated">이 클래스는 내부 큐에 대한 검사, 계측 및 모니터링 방법과 조건 객체에 대한 유사한 방법을 제공합니다. 동기화 메커니즘을 위해 &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; 를 사용하여 원하는대로 클래스로 내보낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="acf6161ba4b0d7b36a78134ed42c8d898e70d207" translate="yes" xml:space="preserve">
          <source>This class provides mechanisms to specify a source region and a destination region. When reading, the source is the stream and the in-memory image is the destination. When writing, these are reversed. In the case of writing, destination regions may be used only with a writer that supports pixel replacement.</source>
          <target state="translated">이 클래스는 소스 영역과 대상 영역을 지정하는 메커니즘을 제공합니다. 읽을 때 소스는 스트림이고 인 메모리 이미지는 대상입니다. 쓰면 이것들이 반대로됩니다. 기록의 경우, 대상 영역은 픽셀 교체를 지원하는 기록기에서만 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6df21329d0a5691f6af97cea6c8f24450d5da75e" translate="yes" xml:space="preserve">
          <source>This class provides methods corresponding to these operations. The methods look for the associated application registered on the current platform, and launch it to handle a URI or file. If there is no associated application or the associated application fails to be launched, an exception is thrown. Please see &lt;a href=&quot;desktop.action&quot;&gt;&lt;code&gt;Desktop.Action&lt;/code&gt;&lt;/a&gt; for the full list of supported operations and capabilities.</source>
          <target state="translated">This class provides methods corresponding to these operations. The methods look for the associated application registered on the current platform, and launch it to handle a URI or file. If there is no associated application or the associated application fails to be launched, an exception is thrown. Please see &lt;a href=&quot;desktop.action&quot;&gt; &lt;code&gt;Desktop.Action&lt;/code&gt; &lt;/a&gt; for the full list of supported operations and capabilities.</target>
        </trans-unit>
        <trans-unit id="d61f047120f311e5927abe17264ce99037821da2" translate="yes" xml:space="preserve">
          <source>This class provides methods for accessing the response status code, headers, the response body, and the &lt;code&gt;HttpRequest&lt;/code&gt; corresponding to this response.</source>
          <target state="translated">이 클래스는 응답 상태 코드, 헤더, 응답 본문 및 이 응답에 해당 하는 &lt;code&gt;HttpRequest&lt;/code&gt; 에 액세스하기위한 메서드를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="68e8c5f6f7dc4757b4202226c0b0b9d6877bc3c5" translate="yes" xml:space="preserve">
          <source>This class provides services needed to instrument Java programming language code.</source>
          <target state="translated">이 클래스는 Java 프로그래밍 언어 코드를 계측하는 데 필요한 서비스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3daf5d23b815ee7fc1850661ecdc8effd7d7409f" translate="yes" xml:space="preserve">
          <source>This class provides services needed to instrument Java programming language code. Instrumentation is the addition of byte-codes to methods for the purpose of gathering data to be utilized by tools. Since the changes are purely additive, these tools do not modify application state or behavior. Examples of such benign tools include monitoring agents, profilers, coverage analyzers, and event loggers.</source>
          <target state="translated">이 클래스는 Java 프로그래밍 언어 코드를 계측하는 데 필요한 서비스를 제공합니다. 계측은 도구에서 사용할 데이터를 수집 할 목적으로 메소드에 바이트 코드를 추가하는 것입니다. 변경 사항은 순전히 추가되므로 이러한 도구는 응용 프로그램 상태 나 동작을 수정하지 않습니다. 이러한 양성 도구의 예로는 모니터링 에이전트, 프로파일 러, 적용 범위 분석기 및 이벤트 로거가 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e15f52dce02a6211946d8272a9bcc580b35b8f5" translate="yes" xml:space="preserve">
          <source>This class provides skeletal implementations of some &lt;a href=&quot;queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; operations.</source>
          <target state="translated">이 클래스는 일부 &lt;a href=&quot;queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; 작업 의 골격 구현을 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="052416ffb6c4ea774abd06d3dd801a9135800b3d" translate="yes" xml:space="preserve">
          <source>This class provides skeletal implementations of some &lt;a href=&quot;queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; operations. The implementations in this class are appropriate when the base implementation does &lt;em&gt;not&lt;/em&gt; allow &lt;code&gt;null&lt;/code&gt; elements. Methods &lt;a href=&quot;#add(E)&quot;&gt;&lt;code&gt;add&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#remove()&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#element()&quot;&gt;&lt;code&gt;element&lt;/code&gt;&lt;/a&gt; are based on &lt;a href=&quot;queue#offer(E)&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;queue#poll()&quot;&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;queue#peek()&quot;&gt;&lt;code&gt;peek&lt;/code&gt;&lt;/a&gt;, respectively, but throw exceptions instead of indicating failure via &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; returns.</source>
          <target state="translated">이 클래스는 일부 &lt;a href=&quot;queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; 작업 의 골격 구현을 제공 합니다. 이 클래스의 구현은 기본 구현이 &lt;code&gt;null&lt;/code&gt; 요소를 허용 하지 &lt;em&gt;않을&lt;/em&gt; 때 적합 합니다. &lt;a href=&quot;#add(E)&quot;&gt; &lt;code&gt;add&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#remove()&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#element()&quot;&gt; &lt;code&gt;element&lt;/code&gt; &lt;/a&gt; 메서드 는 각각 &lt;a href=&quot;queue#offer(E)&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;queue#poll()&quot;&gt; &lt;code&gt;poll&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;queue#peek()&quot;&gt; &lt;code&gt;peek&lt;/code&gt; 를&lt;/a&gt; 기반으로 하지만 &lt;code&gt;false&lt;/code&gt; 또는 &lt;code&gt;null&lt;/code&gt; 반환을 통해 실패를 나타내는 대신 예외를 throw 합니다.</target>
        </trans-unit>
        <trans-unit id="630ba7fe37391ec51305ce9f5c26f1c93cf195dc" translate="yes" xml:space="preserve">
          <source>This class provides skeletal implementations of some &lt;a href=&quot;queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; operations. The implementations in this class are appropriate when the base implementation does &lt;em&gt;not&lt;/em&gt; allow &lt;code&gt;null&lt;/code&gt; elements. Methods &lt;a href=&quot;abstractqueue#add-E-&quot;&gt;&lt;code&gt;add&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;abstractqueue#remove--&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;abstractqueue#element--&quot;&gt;&lt;code&gt;element&lt;/code&gt;&lt;/a&gt; are based on &lt;a href=&quot;queue#offer-E-&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;queue#poll--&quot;&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;queue#peek--&quot;&gt;&lt;code&gt;peek&lt;/code&gt;&lt;/a&gt;, respectively, but throw exceptions instead of indicating failure via &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; returns.</source>
          <target state="translated">이 클래스는 일부 &lt;a href=&quot;queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; 작업 의 골격 구현을 제공 합니다. 이 클래스의 구현은 기본 구현이 &lt;code&gt;null&lt;/code&gt; 요소를 허용 하지 &lt;em&gt;않을&lt;/em&gt; 때 적절 합니다. &lt;a href=&quot;abstractqueue#add-E-&quot;&gt; &lt;code&gt;add&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;abstractqueue#remove--&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;abstractqueue#element--&quot;&gt; &lt;code&gt;element&lt;/code&gt; &lt;/a&gt; 메소드 는 각각 &lt;a href=&quot;queue#offer-E-&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;queue#poll--&quot;&gt; &lt;code&gt;poll&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;queue#peek--&quot;&gt; &lt;code&gt;peek&lt;/code&gt; &lt;/a&gt; 기반 이지만 &lt;code&gt;false&lt;/code&gt; 또는 &lt;code&gt;null&lt;/code&gt; 반환을 통한 실패를 나타내는 대신 예외를 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="f44514648bc390b667dbff0288db9ab16c09a1df" translate="yes" xml:space="preserve">
          <source>This class provides some general purpose beans control methods.</source>
          <target state="translated">이 클래스는 일부 범용 Bean 제어 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="fe10e301352886b47c79ef9ddc3b372b09b1a432" translate="yes" xml:space="preserve">
          <source>This class provides support for &lt;code&gt;AccessibleHypertext&lt;/code&gt;, and is used in instances where the &lt;code&gt;EditorKit&lt;/code&gt; installed in this &lt;code&gt;JEditorPane&lt;/code&gt; is an instance of &lt;code&gt;HTMLEditorKit&lt;/code&gt;.</source>
          <target state="translated">이 클래스에 대한 지원을 제공 &lt;code&gt;AccessibleHypertext&lt;/code&gt; 의 , 그리고 경우에 사용 &lt;code&gt;EditorKit&lt;/code&gt; 이 설치 &lt;code&gt;JEditorPane&lt;/code&gt; 의 인스턴스 &lt;code&gt;HTMLEditorKit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67a252990dac3574afb495a8ad1caa09683e19e5" translate="yes" xml:space="preserve">
          <source>This class provides support for general purpose compression using the popular ZLIB compression library.</source>
          <target state="translated">이 클래스는 널리 사용되는 ZLIB 압축 라이브러리를 사용하여 범용 압축을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="bee40c3e3a0180ef1cbb15de5d88075dd0d8464a" translate="yes" xml:space="preserve">
          <source>This class provides support for general purpose compression using the popular ZLIB compression library. The ZLIB compression library was initially developed as part of the PNG graphics standard and is not protected by patents. It is fully described in the specifications at the &lt;a href=&quot;package-summary#package.description&quot;&gt;java.util.zip package description&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 널리 사용되는 ZLIB 압축 라이브러리를 사용하여 범용 압축을 지원합니다. ZLIB 압축 라이브러리는 처음에 PNG 그래픽 표준의 일부로 개발되었으며 특허로 보호되지 않습니다. &lt;a href=&quot;package-summary#package.description&quot;&gt;java.util.zip 패키지 설명&lt;/a&gt; 의 사양에 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2d5100e7e5c3b1fa28929ac1a9592d341ec37a8" translate="yes" xml:space="preserve">
          <source>This class provides support for general purpose compression using the popular ZLIB compression library. The ZLIB compression library was initially developed as part of the PNG graphics standard and is not protected by patents. It is fully described in the specifications at the &lt;a href=&quot;package-summary#package_description&quot;&gt;java.util.zip package description&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 널리 사용되는 ZLIB 압축 라이브러리를 사용하여 범용 압축을 지원합니다. ZLIB 압축 라이브러리는 처음에 PNG 그래픽 표준의 일부로 개발되었으며 특허로 보호되지 않습니다. &lt;a href=&quot;package-summary#package_description&quot;&gt;java.util.zip 패키지 설명&lt;/a&gt; 의 스펙에 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f62783ba52ad30067c4bf97c27eb8a9f432cca20" translate="yes" xml:space="preserve">
          <source>This class provides support for general purpose decompression using the popular ZLIB compression library.</source>
          <target state="translated">이 클래스는 널리 사용되는 ZLIB 압축 라이브러리를 사용하여 범용 압축 해제를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="2ed28d8b506d02a611bab424962cccb24089a397" translate="yes" xml:space="preserve">
          <source>This class provides support for general purpose decompression using the popular ZLIB compression library. The ZLIB compression library was initially developed as part of the PNG graphics standard and is not protected by patents. It is fully described in the specifications at the &lt;a href=&quot;package-summary#package.description&quot;&gt;java.util.zip package description&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 널리 사용되는 ZLIB 압축 라이브러리를 사용하여 범용 압축 해제를 지원합니다. ZLIB 압축 라이브러리는 처음에 PNG 그래픽 표준의 일부로 개발되었으며 특허로 보호되지 않습니다. &lt;a href=&quot;package-summary#package.description&quot;&gt;java.util.zip 패키지 설명&lt;/a&gt; 의 사양에 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="42a68b0f8134c883f72b838887540092c0c76680" translate="yes" xml:space="preserve">
          <source>This class provides support for general purpose decompression using the popular ZLIB compression library. The ZLIB compression library was initially developed as part of the PNG graphics standard and is not protected by patents. It is fully described in the specifications at the &lt;a href=&quot;package-summary#package_description&quot;&gt;java.util.zip package description&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 널리 사용되는 ZLIB 압축 라이브러리를 사용하여 범용 압축 해제를 지원합니다. ZLIB 압축 라이브러리는 처음에 PNG 그래픽 표준의 일부로 개발되었으며 특허로 보호되지 않습니다. &lt;a href=&quot;package-summary#package_description&quot;&gt;java.util.zip 패키지 설명&lt;/a&gt; 의 스펙에 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="825940db2f98eb22124d05089f53fa9d5430f1c9" translate="yes" xml:space="preserve">
          <source>This class provides the ChangeListener part of the SpinnerModel interface that should be suitable for most concrete SpinnerModel implementations.</source>
          <target state="translated">이 클래스는 대부분의 구체적인 SpinnerModel 구현에 적합해야하는 SpinnerModel 인터페이스의 ChangeListener 부분을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="65b1b693f3224eb03c2051461524cea412186a00" translate="yes" xml:space="preserve">
          <source>This class provides the ChangeListener part of the SpinnerModel interface that should be suitable for most concrete SpinnerModel implementations. Subclasses must provide an implementation of the &lt;code&gt;setValue&lt;/code&gt;, &lt;code&gt;getValue&lt;/code&gt;, &lt;code&gt;getNextValue&lt;/code&gt; and &lt;code&gt;getPreviousValue&lt;/code&gt; methods.</source>
          <target state="translated">이 클래스는 대부분의 구체적인 SpinnerModel 구현에 적합해야하는 SpinnerModel 인터페이스의 ChangeListener 부분을 제공합니다. 서브 클래스는 &lt;code&gt;setValue&lt;/code&gt; , &lt;code&gt;getValue&lt;/code&gt; , &lt;code&gt;getNextValue&lt;/code&gt; 및 &lt;code&gt;getPreviousValue&lt;/code&gt; 메소드 의 구현을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="058063ff23a514c72d17cf5bb02175b69f44f9bb" translate="yes" xml:space="preserve">
          <source>This class provides the functionality of a &quot;Message Authentication Code&quot; (MAC) algorithm.</source>
          <target state="translated">이 클래스는 &quot;메시지 인증 코드&quot;(MAC) 알고리즘의 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5d17535455ee3a93a28bd48adb2f85d352576483" translate="yes" xml:space="preserve">
          <source>This class provides the functionality of a cryptographic cipher for encryption and decryption.</source>
          <target state="translated">이 클래스는 암호화 및 암호 해독을위한 암호화 암호 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="38056ecd3eb0041e31918a2cb122cb3971090037" translate="yes" xml:space="preserve">
          <source>This class provides the functionality of a cryptographic cipher for encryption and decryption. It forms the core of the Java Cryptographic Extension (JCE) framework.</source>
          <target state="translated">이 클래스는 암호화 및 암호 해독을위한 암호화 암호 기능을 제공합니다. JCE (Java Cryptographic Extension) 프레임 워크의 핵심을 형성합니다.</target>
        </trans-unit>
        <trans-unit id="b7f9af6863cfc7132c7b426fcb653626f2c59c5b" translate="yes" xml:space="preserve">
          <source>This class provides the functionality of a key agreement (or key exchange) protocol.</source>
          <target state="translated">이 클래스는 키 계약 (또는 키 교환) 프로토콜의 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e195f5a4aecf4d805b4067fb733d1fffc5c3580f" translate="yes" xml:space="preserve">
          <source>This class provides the functionality of a secret (symmetric) key generator.</source>
          <target state="translated">이 클래스는 비밀 (대칭) 키 생성기의 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="71a7bb8d6c1cf35996c2c7d54ea430cc02fc2f0e" translate="yes" xml:space="preserve">
          <source>This class provides the functionality of an exemption mechanism, examples of which are</source>
          <target state="translated">이 클래스는 면제 메커니즘의 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="77361a95dede7f772c5daefc3f6fed52e2dd3203" translate="yes" xml:space="preserve">
          <source>This class provides the main application entry point for printing and parsing and provides common implementations of &lt;code&gt;DateTimeFormatter&lt;/code&gt;:</source>
          <target state="translated">이 클래스는 인쇄 및 구문 분석을위한 기본 응용 프로그램 진입 점을 제공하고 일반적인 &lt;code&gt;DateTimeFormatter&lt;/code&gt; 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="32c2e42c58d5563f589463d9769297959632d96f" translate="yes" xml:space="preserve">
          <source>This class provides the method &lt;code&gt;normalize&lt;/code&gt; which transforms Unicode text into an equivalent composed or decomposed form, allowing for easier sorting and searching of text.</source>
          <target state="translated">이 클래스는 유니 코드 텍스트를 동등하게 구성되거나 분해 된 형식으로 변환하여 텍스트를보다 쉽게 ​​정렬하고 검색 할 수있는 &lt;code&gt;normalize&lt;/code&gt; 메소드를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="d1f27e8c5361496e2bcd15eae00a46e2381ba122" translate="yes" xml:space="preserve">
          <source>This class provides the method &lt;code&gt;normalize&lt;/code&gt; which transforms Unicode text into an equivalent composed or decomposed form, allowing for easier sorting and searching of text. The &lt;code&gt;normalize&lt;/code&gt; method supports the standard normalization forms described in &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt; Unicode Standard Annex #15 &amp;mdash; Unicode Normalization Forms&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 유니 코드 텍스트를 동등하게 구성되거나 분해 된 형식으로 변환하여 텍스트를보다 쉽게 ​​정렬하고 검색 할 수있는 &lt;code&gt;normalize&lt;/code&gt; 메소드를 제공합니다 . &lt;code&gt;normalize&lt;/code&gt; 방법에 설명 된 표준 정규화 형태의 지원 &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt;유니 코드 표준화 양식 - 유니 코드 표준 부록 # 15&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9da5dcdbb656ea1f4d5fe6cd29864df70798abe7" translate="yes" xml:space="preserve">
          <source>This class provides the validation mechanism for Swing components.</source>
          <target state="translated">이 클래스는 Swing 구성 요소에 대한 유효성 검사 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0f55feb154d2990a027a5c548994f8fec15e5ed0" translate="yes" xml:space="preserve">
          <source>This class provides the validation mechanism for Swing components. GUIs often need to ensure that the components are in a valid state before allowing the user to navigate the input focus. To do this, clients create a subclass of &lt;code&gt;InputVerifier&lt;/code&gt; and, using &lt;code&gt;JComponent&lt;/code&gt;'s &lt;code&gt;setInputVerifier&lt;/code&gt; method, attach an instance of their subclass to the &lt;code&gt;JComponent&lt;/code&gt; which is the source of the focus transfer operation. The &lt;code&gt;InputVerifier&lt;/code&gt; also provides the possibility to validate against the target of the focus transfer which may reject the focus. Before focus is transferred from the source Swing component to the target Swing component, the input verifier's &lt;code&gt;shouldYieldFocus(source, target)&lt;/code&gt; method is called. Focus is transferred only if that method returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 Swing 구성 요소에 대한 유효성 검사 메커니즘을 제공합니다. GUI는 사용자가 입력 포커스를 탐색 할 수 있도록하기 전에 구성 요소가 유효한 상태인지 확인해야하는 경우가 많습니다. 이렇게하려면 클라이언트의 서브 클래스 생성 &lt;code&gt;InputVerifier&lt;/code&gt; 하고, 사용 &lt;code&gt;JComponent&lt;/code&gt; 의 의 &lt;code&gt;setInputVerifier&lt;/code&gt; 방법은 자신의 서브 클래스의 인스턴스를 첨부 &lt;code&gt;JComponent&lt;/code&gt; 의 초점 전송 작업의 소스입니다. &lt;code&gt;InputVerifier&lt;/code&gt; 또한 포커스를 거부 할 수 포커스 이동의 대상에 대해 검증 할 수있는 가능성을 제공한다. 포커스가 소스 Swing 구성 요소에서 대상 Swing 구성 요소로 전송되기 전에 입력 검증기의 &lt;code&gt;shouldYieldFocus(source, target)&lt;/code&gt; 메서드가 호출됩니다. 해당 메서드가 &lt;code&gt;true&lt;/code&gt; 를 반환하는 경우에만 포커스가 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="94f744e03b23887bcedd3bd044c9102d91afafb2" translate="yes" xml:space="preserve">
          <source>This class provides thread-local variables.</source>
          <target state="translated">이 클래스는 스레드 로컬 변수를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="493cf5569ee6c8c562fbd1ca601aae11d69ef2db" translate="yes" xml:space="preserve">
          <source>This class provides thread-local variables. These variables differ from their normal counterparts in that each thread that accesses one (via its &lt;code&gt;get&lt;/code&gt; or &lt;code&gt;set&lt;/code&gt; method) has its own, independently initialized copy of the variable. &lt;code&gt;ThreadLocal&lt;/code&gt; instances are typically private static fields in classes that wish to associate state with a thread (e.g., a user ID or Transaction ID).</source>
          <target state="translated">이 클래스는 스레드 로컬 변수를 제공합니다. 이러한 변수는 &lt;code&gt;get&lt;/code&gt; 또는 &lt;code&gt;set&lt;/code&gt; 메소드 를 통해 하나에 액세스하는 각 스레드가 독립적으로 초기화 된 변수의 사본을 가지고 있다는 점에서 일반적인 대응과 다릅니다 . &lt;code&gt;ThreadLocal&lt;/code&gt; 인스턴스는 일반적으로 상태를 스레드 (예 : 사용자 ID 또는 트랜잭션 ID)와 연결하려는 클래스의 전용 정적 필드입니다.</target>
        </trans-unit>
        <trans-unit id="e298f8f18571bfb077e42eaf393c12d3f39af89e" translate="yes" xml:space="preserve">
          <source>This class provides three levels of API:</source>
          <target state="translated">이 클래스는 세 가지 수준의 API를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4953dd5a0699a1cdf4d5444fae3006a6d5cdb74a" translate="yes" xml:space="preserve">
          <source>This class provides two forms of linkage methods: a simple version (&lt;a href=&quot;#makeConcat(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;makeConcat(java.lang.invoke.MethodHandles.Lookup, String,
 MethodType)&lt;/code&gt;&lt;/a&gt;) using only the dynamic arguments, and an advanced version (&lt;a href=&quot;#makeConcatWithConstants(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object...)&quot;&gt;&lt;code&gt;makeConcatWithConstants(java.lang.invoke.MethodHandles.Lookup,
 String, MethodType, String, Object...)&lt;/code&gt;&lt;/a&gt; using the advanced forms of capturing the constant arguments. The advanced strategy can produce marginally better invocation bytecode, at the expense of exploding the number of shapes of string concatenation methods present at runtime, because those shapes would include constant static arguments as well.</source>
          <target state="translated">이 클래스는 두 가지 형태의 연결 메서드를 제공 합니다. 동적 인수 만 사용 하는 단순 버전 ( &lt;a href=&quot;#makeConcat(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;makeConcat(java.lang.invoke.MethodHandles.Lookup, String, MethodType)&lt;/code&gt; &lt;/a&gt; )과 고급 버전 ( &lt;a href=&quot;#makeConcatWithConstants(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object...)&quot;&gt; &lt;code&gt;makeConcatWithConstants(java.lang.invoke.MethodHandles.Lookup, String, MethodType, String, Object...)&lt;/code&gt; &lt;/a&gt; 상수 인수를 캡처하는 고급 형식을 사용합니다. 고급 전략은 런타임에 존재하는 문자열 연결 메서드의 모양 수를 확장하는 대신 약간 더 나은 호출 바이트 코드를 생성 할 수 있습니다. , 이러한 모양에는 상수 정적 인수도 포함되기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="feca0d9cf73c5afd7676d930e6bd37aa51947106" translate="yes" xml:space="preserve">
          <source>This class provides two forms of linkage methods: a standard version (&lt;a href=&quot;#metafactory(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;metafactory(MethodHandles.Lookup, String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt;&lt;/a&gt;) using an optimized protocol, and an alternate version &lt;a href=&quot;#altMetafactory(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.Object...)&quot;&gt;&lt;code&gt;altMetafactory(MethodHandles.Lookup, String, MethodType, Object...)&lt;/code&gt;&lt;/a&gt;). The alternate version is a generalization of the standard version, providing additional control over the behavior of the generated function objects via flags and additional arguments. The alternate version adds the ability to manage the following attributes of function objects:</source>
          <target state="translated">이 클래스는 최적화 된 프로토콜을 사용하는 표준 버전 ( &lt;a href=&quot;#metafactory(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;metafactory(MethodHandles.Lookup, String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt; &lt;/a&gt; )과 대체 버전 &lt;a href=&quot;#altMetafactory(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.Object...)&quot;&gt; &lt;code&gt;altMetafactory(MethodHandles.Lookup, String, MethodType, Object...)&lt;/code&gt; &lt;/a&gt; 두 가지 형태의 연결 메서드를 제공합니다. ...) ). 대체 버전은 표준 버전의 일반화로, 플래그 및 추가 인수를 통해 생성 된 함수 개체의 동작에 대한 추가 제어를 제공합니다. 대체 버전은 함수 객체의 다음 속성을 관리하는 기능을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="af4f54ebb7bd4cdda400f1f7686b6b1996a12d34" translate="yes" xml:space="preserve">
          <source>This class provides two forms of linkage methods: a standard version (&lt;a href=&quot;lambdametafactory#metafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.invoke.MethodType-java.lang.invoke.MethodHandle-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;metafactory(MethodHandles.Lookup, String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt;&lt;/a&gt;) using an optimized protocol, and an alternate version &lt;a href=&quot;lambdametafactory#altMetafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.Object...-&quot;&gt;&lt;code&gt;altMetafactory(MethodHandles.Lookup, String, MethodType, Object...)&lt;/code&gt;&lt;/a&gt;). The alternate version is a generalization of the standard version, providing additional control over the behavior of the generated function objects via flags and additional arguments. The alternate version adds the ability to manage the following attributes of function objects:</source>
          <target state="translated">이 클래스는 최적화 된 프로토콜을 사용하는 표준 버전 ( &lt;a href=&quot;lambdametafactory#metafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.invoke.MethodType-java.lang.invoke.MethodHandle-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;metafactory(MethodHandles.Lookup, String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt; &lt;/a&gt; )과 대체 버전 &lt;a href=&quot;lambdametafactory#altMetafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.Object...-&quot;&gt; &lt;code&gt;altMetafactory(MethodHandles.Lookup, String, MethodType, Object...)&lt;/code&gt; &lt;/a&gt; )의 두 가지 연결 방법을 제공합니다. ...) ). 대체 버전은 표준 버전의 일반화로 플래그와 추가 인수를 통해 생성 된 함수 객체의 동작을 추가로 제어 할 수 있습니다. 대체 버전은 함수 객체의 다음 속성을 관리하는 기능을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="5c45020b8dbd954e5d018a68e2e79935266973fc" translate="yes" xml:space="preserve">
          <source>This class relies on the data fetching and setting methods of &lt;code&gt;Raster&lt;/code&gt;, and on the color characterization methods of &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Raster&lt;/code&gt; 의 데이터 가져 오기 및 설정 방법과 &lt;code&gt;ColorModel&lt;/code&gt; 의 색상 특성화 방법에 의존 합니다 .</target>
        </trans-unit>
        <trans-unit id="67927631ac04e4ea39a3313394ca78420f06f1fc" translate="yes" xml:space="preserve">
          <source>This class replaces the deprecated SAX1 &lt;a href=&quot;../handlerbase&quot;&gt;&lt;code&gt;HandlerBase&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">이 클래스는 더 이상 사용되지 않는 SAX1 &lt;a href=&quot;../handlerbase&quot;&gt; &lt;code&gt;HandlerBase&lt;/code&gt; &lt;/a&gt; 클래스를 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="f1f3b3b7fb89f90cf1e56e030d3e7e0356c6cdcf" translate="yes" xml:space="preserve">
          <source>This class replaces the now-deprecated SAX1 &lt;a href=&quot;attributelistimpl&quot;&gt;&lt;code&gt;AttributeListImpl&lt;/code&gt;&lt;/a&gt; class; in addition to supporting the updated Attributes interface rather than the deprecated &lt;a href=&quot;../attributelist&quot;&gt;&lt;code&gt;AttributeList&lt;/code&gt;&lt;/a&gt; interface, it also includes a much more efficient implementation using a single array rather than a set of Vectors.</source>
          <target state="translated">이 클래스는 현재 사용되지 않는 SAX1 &lt;a href=&quot;attributelistimpl&quot;&gt; &lt;code&gt;AttributeListImpl&lt;/code&gt; &lt;/a&gt; 클래스를 대체합니다 . 업데이트 속성 인터페이스보다는 중단 된지지에 더하여 &lt;a href=&quot;../attributelist&quot;&gt; &lt;code&gt;AttributeList&lt;/code&gt; &lt;/a&gt; 인터페이스를 또한 하나의 어레이가 아닌 벡터들의 세트를 사용하여 더 효율적인 구현을 포함한다.</target>
        </trans-unit>
        <trans-unit id="e9b8152c6ab73b130dc7a97d26ed193630a782d5" translate="yes" xml:space="preserve">
          <source>This class represents Universal Object Identifiers (Oids) and their associated operations.</source>
          <target state="translated">이 클래스는 범용 개체 식별자 (Oid) 및 관련 작업을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bcfec68930e91dff3b974ffeb35fc31dc7b2d2f3" translate="yes" xml:space="preserve">
          <source>This class represents a &quot;most-trusted CA&quot;, which is used as a trust anchor for validating X.509 certification paths. A most-trusted CA includes the public key of the CA, the CA's name, and any constraints upon the set of paths which may be validated using this key. These parameters can be specified in the form of a trusted &lt;code&gt;X509Certificate&lt;/code&gt; or as individual parameters.</source>
          <target state="translated">이 클래스는 &quot;가장 신뢰할 수있는 CA&quot;를 나타내며 X.509 인증 경로의 유효성을 검사하기위한 신뢰 앵커로 사용됩니다. 가장 신뢰할 수있는 CA에는 CA의 공개 키, CA 이름 및이 키를 사용하여 유효성을 검사 할 수있는 경로 집합에 대한 제약 조건이 포함됩니다. 이러한 매개 변수는 신뢰할 수있는 &lt;code&gt;X509Certificate&lt;/code&gt; 의 형식으로 또는 개별 매개 변수로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c2f2d6911e310787abdbf5f9e48315e898c3b1e" translate="yes" xml:space="preserve">
          <source>This class represents a &quot;provider&quot; for the Java Security API, where a provider implements some or all parts of Java Security.</source>
          <target state="translated">이 클래스는 제공자가 Java Security의 일부 또는 전부를 구현하는 Java Security API의 &quot;제공자&quot;를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b7a9e4a03a08b3eeea1fad1f3a1d55aaf545f0f7" translate="yes" xml:space="preserve">
          <source>This class represents a &quot;provider&quot; for the Java Security API, where a provider implements some or all parts of Java Security. Services that a provider may implement include:</source>
          <target state="translated">이 클래스는 제공자가 Java Security의 일부 또는 전부를 구현하는 Java Security API의 &quot;제공자&quot;를 나타냅니다. 제공자가 구현할 수있는 서비스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0ece3559be87e359f3d54d8c167b3dfbc5c0d531" translate="yes" xml:space="preserve">
          <source>This class represents a Network Interface address.</source>
          <target state="translated">이 클래스는 네트워크 인터페이스 주소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a07c1f6ae0be68a7f58c90ed1384c3217450954f" translate="yes" xml:space="preserve">
          <source>This class represents a Network Interface address. In short it's an IP address, a subnet mask and a broadcast address when the address is an IPv4 one. An IP address and a network prefix length in the case of IPv6 address.</source>
          <target state="translated">이 클래스는 네트워크 인터페이스 주소를 나타냅니다. 간단히 말해 주소가 IPv4 주소 인 경우 IP 주소, 서브넷 마스크 및 브로드 캐스트 주소입니다. IPv6 주소의 경우 IP 주소 및 네트워크 접두사 길이</target>
        </trans-unit>
        <trans-unit id="7040d5a44c74edc7402bbee1fc20547a6a1a81c0" translate="yes" xml:space="preserve">
          <source>This class represents a Network Interface made up of a name, and a list of IP addresses assigned to this interface.</source>
          <target state="translated">이 클래스는 이름과이 인터페이스에 할당 된 IP 주소 목록으로 구성된 네트워크 인터페이스를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="443d8a563e78bfb9a807f7f1f079ce2064dc19ba" translate="yes" xml:space="preserve">
          <source>This class represents a Network Interface made up of a name, and a list of IP addresses assigned to this interface. It is used to identify the local interface on which a multicast group is joined. Interfaces are normally known by names such as &quot;le0&quot;.</source>
          <target state="translated">이 클래스는 이름과이 인터페이스에 할당 된 IP 주소 목록으로 구성된 네트워크 인터페이스를 나타냅니다. 멀티 캐스트 그룹이 결합 된 로컬 인터페이스를 식별하는 데 사용됩니다. 인터페이스는 일반적으로 &quot;le0&quot;과 같은 이름으로 알려져 있습니다.</target>
        </trans-unit>
        <trans-unit id="5606e78f7fbfecd77da8d162f001a91eea0a3cab" translate="yes" xml:space="preserve">
          <source>This class represents a Reference whose contents is a name, called the link name, that is bound to an atomic name in a context.</source>
          <target state="translated">이 클래스는 내용이 컨텍스트에서 원자 이름에 바인딩 된 이름 인 링크 이름이라고하는 Reference를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="aaef20acd642190f418479ecd58ec3a5d3a99999" translate="yes" xml:space="preserve">
          <source>This class represents a Socket Address with no protocol attachment.</source>
          <target state="translated">이 클래스는 프로토콜 첨부가없는 소켓 주소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1316aaf79aa8ed066c90c951ce69fdcd306a3f99" translate="yes" xml:space="preserve">
          <source>This class represents a Socket Address with no protocol attachment. As an abstract class, it is meant to be subclassed with a specific, protocol dependent, implementation.</source>
          <target state="translated">이 클래스는 프로토콜 첨부가없는 소켓 주소를 나타냅니다. 추상 클래스로서 특정 프로토콜에 따라 구현하여 서브 클래 싱됩니다.</target>
        </trans-unit>
        <trans-unit id="b87ebd3f5b6b1ce876cdd22e38870c99fa39df28" translate="yes" xml:space="preserve">
          <source>This class represents a builder that creates a default &lt;a href=&quot;mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">이 클래스는 기본 &lt;a href=&quot;mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; &lt;/a&gt; 구현 을 작성하는 빌더를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b2a46dd854d82a07d4416b4b92a199cbbe5b71df" translate="yes" xml:space="preserve">
          <source>This class represents a builder that creates a default &lt;a href=&quot;mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt; implementation. The JMX &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; allows applications to provide their custom MBeanServer implementation by providing a subclass of this class.</source>
          <target state="translated">이 클래스는 기본 &lt;a href=&quot;mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; &lt;/a&gt; 구현 을 작성하는 빌더를 나타냅니다 . JMX &lt;a href=&quot;mbeanserverfactory&quot;&gt; &lt;code&gt;MBeanServerFactory&lt;/code&gt; &lt;/a&gt; 는 어플리케이션이이 클래스의 서브 클래스를 제공함으로써 사용자 정의 MBeanServer 구현을 제공 할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="f70b6769c081326c688ed8ca39b77bdba9dca567" translate="yes" xml:space="preserve">
          <source>This class represents a check box that can be included in a menu.</source>
          <target state="translated">이 클래스는 메뉴에 포함될 수있는 확인란을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="70ee5cadcf31896dabe16a9c968bdbf628440b75" translate="yes" xml:space="preserve">
          <source>This class represents a check box that can be included in a menu. Selecting the check box in the menu changes its state from &quot;on&quot; to &quot;off&quot; or from &quot;off&quot; to &quot;on.&quot;</source>
          <target state="translated">이 클래스는 메뉴에 포함될 수있는 확인란을 나타냅니다. 메뉴에서 확인란을 선택하면 상태가 &quot;on&quot;에서 &quot;off&quot;로 또는 &quot;off&quot;에서 &quot;on&quot;으로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="d3aadb5888413b5189a8637523b51a069a39530d" translate="yes" xml:space="preserve">
          <source>This class represents a composite name -- a sequence of component names spanning multiple namespaces.</source>
          <target state="translated">이 클래스는 복합 이름 (여러 네임 스페이스에 걸쳐있는 일련의 구성 요소 이름)을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0c9964d123ae70169128ba69f435316bc6d6e719" translate="yes" xml:space="preserve">
          <source>This class represents a composite name -- a sequence of component names spanning multiple namespaces. Each component is a string name from the namespace of a naming system. If the component comes from a hierarchical namespace, that component can be further parsed into its atomic parts by using the CompoundName class.</source>
          <target state="translated">이 클래스는 복합 이름 (여러 네임 스페이스에 걸쳐있는 일련의 구성 요소 이름)을 나타냅니다. 각 구성 요소는 명명 시스템의 네임 스페이스에서 가져온 문자열 이름입니다. 구성 요소가 계층 네임 스페이스에서 제공되는 경우 CompoundName 클래스를 사용하여 해당 구성 요소를 원자 부분으로 추가 구문 분석 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b58d69688121f64751f830087f078a9f0dc6eaf6" translate="yes" xml:space="preserve">
          <source>This class represents a compound name -- a name from a hierarchical name space.</source>
          <target state="translated">이 클래스는 복합 이름 (계층 적 이름 공간의 이름)을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4e7f905c66689d054fc2d3da806e4f5494d8dbcd" translate="yes" xml:space="preserve">
          <source>This class represents a compound name -- a name from a hierarchical name space. Each component in a compound name is an atomic name.</source>
          <target state="translated">이 클래스는 복합 이름 (계층 적 이름 공간의 이름)을 나타냅니다. 복합 이름의 각 구성 요소는 원자 이름입니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
