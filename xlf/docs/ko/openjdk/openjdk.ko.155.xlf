<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="7070f171f3fc726c6ecd3521f24ea6e3dcdef0bd" translate="yes" xml:space="preserve">
          <source>This class represents a datagram packet.</source>
          <target state="translated">이 클래스는 데이터 그램 패킷을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="17470ad631260836eb75c7506c604373609c991d" translate="yes" xml:space="preserve">
          <source>This class represents a distinguished name as specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253에&lt;/a&gt; 의해 지정된 식별 명을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="e46441b22c9e980ce1d9c4925d4b185f7df9afdb" translate="yes" xml:space="preserve">
          <source>This class represents a distinguished name as specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;. A distinguished name, or DN, is composed of an ordered list of components called &lt;em&gt;relative distinguished name&lt;/em&gt;s, or RDNs. Details of a DN's syntax are described in RFC 2253.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253에&lt;/a&gt; 의해 지정된 식별 명을 나타냅니다 . 식별 이름 또는 DN은 RDN ( &lt;em&gt;상대 식별 이름)&lt;/em&gt; 이라고하는 정렬 된 구성 요소 목록으로 구성 됩니다. DN의 구문에 대한 자세한 내용은 RFC 2253에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4123c703847205565ff309b83324f6af0bd57e89" translate="yes" xml:space="preserve">
          <source>This class represents a factory for secret keys.</source>
          <target state="translated">이 클래스는 비밀 키의 팩토리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2a79cf3f9125637abeb8c6c4a9c8dd6b2f360844" translate="yes" xml:space="preserve">
          <source>This class represents a heterogeneous collection of Permissions.</source>
          <target state="translated">이 클래스는 이기종 권한 컬렉션을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7cac7ca93555f6887e8043bef23dc35a20ce7561" translate="yes" xml:space="preserve">
          <source>This class represents a heterogeneous collection of Permissions. That is, it contains different types of Permission objects, organized into PermissionCollections. For example, if any &lt;code&gt;java.io.FilePermission&lt;/code&gt; objects are added to an instance of this class, they are all stored in a single PermissionCollection. It is the PermissionCollection returned by a call to the &lt;code&gt;newPermissionCollection&lt;/code&gt; method in the FilePermission class. Similarly, any &lt;code&gt;java.lang.RuntimePermission&lt;/code&gt; objects are stored in the PermissionCollection returned by a call to the &lt;code&gt;newPermissionCollection&lt;/code&gt; method in the RuntimePermission class. Thus, this class represents a collection of PermissionCollections.</source>
          <target state="translated">이 클래스는 이기종 권한 컬렉션을 나타냅니다. 즉, PermissionCollections로 구성된 다양한 유형의 Permission 객체를 포함합니다. 예를 들어, &lt;code&gt;java.io.FilePermission&lt;/code&gt; 객체가이 클래스의 인스턴스에 추가되면 모두 단일 PermissionCollection에 저장됩니다. FilePermission 클래스 의 &lt;code&gt;newPermissionCollection&lt;/code&gt; 메소드 호출에 의해 리턴 된 PermissionCollection 입니다. 마찬가지로, &lt;code&gt;java.lang.RuntimePermission&lt;/code&gt; 객체는 RuntimePermission 클래스 의 &lt;code&gt;newPermissionCollection&lt;/code&gt; 메서드 호출에 의해 반환 된 PermissionCollection에 저장됩니다 . 따라서이 클래스는 PermissionCollections의 컬렉션을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="196aec2a3f42120cec5ed4d8a56bb2fee12941d9" translate="yes" xml:space="preserve">
          <source>This class represents a modification item.</source>
          <target state="translated">이 클래스는 수정 항목을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ed8cca684d581c46d5473f4486cfcf1d4e6d3c5a" translate="yes" xml:space="preserve">
          <source>This class represents a modification item. It consists of a modification code and an attribute on which to operate.</source>
          <target state="translated">이 클래스는 수정 항목을 나타냅니다. 수정 코드와 작동 할 속성으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="e5b81e8b48823640d878d6aa01f1ee4dc0ba4995" translate="yes" xml:space="preserve">
          <source>This class represents a name-to-object binding found in a context.</source>
          <target state="translated">이 클래스는 컨텍스트에서 발견 된 이름 대 오브젝트 바인딩을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="beb0e3a08a5745f02177b59fc85d03cc8b67bd41" translate="yes" xml:space="preserve">
          <source>This class represents a proxy setting, typically a type (http, socks) and a socket address.</source>
          <target state="translated">이 클래스는 일반적으로 유형 (http, socks) 및 소켓 주소와 같은 프록시 설정을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e6b25c979d575eecf8dfc1ae8805f535fe0e97f2" translate="yes" xml:space="preserve">
          <source>This class represents a proxy setting, typically a type (http, socks) and a socket address. A &lt;code&gt;Proxy&lt;/code&gt; is an immutable object.</source>
          <target state="translated">이 클래스는 일반적으로 유형 (http, socks) 및 소켓 주소와 같은 프록시 설정을 나타냅니다. &lt;code&gt;Proxy&lt;/code&gt; 불변 오브젝트이다.</target>
        </trans-unit>
        <trans-unit id="584a1ab504a2941aae8807e7242173adc00c09cc" translate="yes" xml:space="preserve">
          <source>This class represents a public or private key in encoded format.</source>
          <target state="translated">이 클래스는 공개 또는 개인 키를 인코딩 된 형식으로 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ecbc41d04711c9c6d7b2547e265b1c6900bdb022" translate="yes" xml:space="preserve">
          <source>This class represents a reference to an object that is found outside of the naming/directory system.</source>
          <target state="translated">이 클래스는 네이밍 / 디렉토리 시스템 외부에있는 객체에 대한 참조를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="71f3a9d828a7ec07b77c49c8041b7347841243b0" translate="yes" xml:space="preserve">
          <source>This class represents a relative distinguished name, or RDN, which is a component of a distinguished name as specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253에&lt;/a&gt; 의해 지정된 고유 이름의 구성 요소 인 RDN을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="8573e6c2900df8bfdda96524318d1a680bb713e4" translate="yes" xml:space="preserve">
          <source>This class represents a relative distinguished name, or RDN, which is a component of a distinguished name as specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;. An example of an RDN is &quot;OU=Sales+CN=J.Smith&quot;. In this example, the RDN consist of multiple attribute type/value pairs. The RDN is parsed as described in the class description for &lt;a href=&quot;ldapname&quot;&gt;&lt;code&gt;&lt;code&gt;LdapName&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253에&lt;/a&gt; 의해 지정된 고유 이름의 구성 요소 인 RDN을 나타냅니다 . RDN의 예는 &quot;OU = Sales + CN = J.Smith&quot;입니다. 이 예에서 RDN은 여러 속성 유형 / 값 쌍으로 구성됩니다. RDN은 &lt;a href=&quot;ldapname&quot;&gt; &lt;code&gt;&lt;code&gt;LdapName&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 의 클래스 설명에 설명 된대로 구문 분석됩니다 .</target>
        </trans-unit>
        <trans-unit id="cc1378dc43b08556f5858f5c88e98ba43cb07fe1" translate="yes" xml:space="preserve">
          <source>This class represents a relative distinguished name, or RDN, which is a component of a distinguished name as specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;. An example of an RDN is &quot;OU=Sales+CN=J.Smith&quot;. In this example, the RDN consist of multiple attribute type/value pairs. The RDN is parsed as described in the class description for &lt;a href=&quot;ldapname&quot;&gt;&lt;code&gt;LdapName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253에서&lt;/a&gt; 지정한 고유 이름의 구성 요소 인 상대 고유 이름 또는 RDN을 나타냅니다 . RDN의 예는 &quot;OU = Sales + CN = J.Smith&quot;입니다. 이 예에서 RDN은 여러 속성 유형 / 값 쌍으로 구성됩니다. RDN은 &lt;a href=&quot;ldapname&quot;&gt; &lt;code&gt;LdapName&lt;/code&gt; &lt;/a&gt; 에 대한 클래스 설명에 설명 된대로 구문 분석됩니다 .</target>
        </trans-unit>
        <trans-unit id="a02a9f5fbadbb1f07365f04a62e23ad2829f8526" translate="yes" xml:space="preserve">
          <source>This class represents a scope for identities. It is an Identity itself, and therefore has a name and can have a scope. It can also optionally have a public key and associated certificates.</source>
          <target state="translated">이 클래스는 ID의 범위를 나타냅니다. ID 자체이므로 이름이 있으며 범위를 가질 수 있습니다. 선택적으로 공개 키 및 관련 인증서를 가질 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca95ec8feb051b649b867d0766ff6d4d848acea9" translate="yes" xml:space="preserve">
          <source>This class represents a single &lt;code&gt;LoginModule&lt;/code&gt; entry configured for the application specified in the &lt;code&gt;getAppConfigurationEntry(String appName)&lt;/code&gt; method in the &lt;code&gt;Configuration&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Configuration&lt;/code&gt; 클래스 의 &lt;code&gt;getAppConfigurationEntry(String appName)&lt;/code&gt; 메소드에 지정된 애플리케이션에 대해 구성된 단일 &lt;code&gt;LoginModule&lt;/code&gt; 항목을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="297e4a49730e6d2370114e300324dda6a37bf458" translate="yes" xml:space="preserve">
          <source>This class represents a single &lt;code&gt;LoginModule&lt;/code&gt; entry configured for the application specified in the &lt;code&gt;getAppConfigurationEntry(String appName)&lt;/code&gt; method in the &lt;code&gt;Configuration&lt;/code&gt; class. Each respective &lt;code&gt;AppConfigurationEntry&lt;/code&gt; contains a &lt;code&gt;LoginModule&lt;/code&gt; name, a control flag (specifying whether this &lt;code&gt;LoginModule&lt;/code&gt; is REQUIRED, REQUISITE, SUFFICIENT, or OPTIONAL), and LoginModule-specific options. Please refer to the &lt;code&gt;Configuration&lt;/code&gt; class for more information on the different control flags and their semantics.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Configuration&lt;/code&gt; 클래스 의 &lt;code&gt;getAppConfigurationEntry(String appName)&lt;/code&gt; 메소드에 지정된 애플리케이션에 대해 구성된 단일 &lt;code&gt;LoginModule&lt;/code&gt; 항목을 나타냅니다 . 각각의 각 &lt;code&gt;AppConfigurationEntry&lt;/code&gt; 에는 &lt;code&gt;LoginModule&lt;/code&gt; 이름, 제어 플래그 (이 &lt;code&gt;LoginModule&lt;/code&gt; 이 필수, REQUISITE, SUFFICIENT 또는 OPTIONAL 인지 지정 ) 및 LoginModule 관련 옵션이 포함되어 있습니다. 다른 제어 플래그 및 해당 의미에 대한 자세한 정보 는 &lt;code&gt;Configuration&lt;/code&gt; 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="640d68686faefa0f361a378f82b1b0fc09bb4870" translate="yes" xml:space="preserve">
          <source>This class represents a socket for sending and receiving datagram packets.</source>
          <target state="translated">이 클래스는 데이터 그램 패킷을 송수신하기위한 소켓을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="05f074451aa9e736c72cd5d98547889c8f032150" translate="yes" xml:space="preserve">
          <source>This class represents a storage facility for cryptographic keys and certificates.</source>
          <target state="translated">이 클래스는 암호화 키 및 인증서의 저장 기능을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="45fdf96d726479eab8566d09c1911463b0630c56" translate="yes" xml:space="preserve">
          <source>This class represents access to a file or directory.</source>
          <target state="translated">이 클래스는 파일 또는 디렉토리에 대한 액세스를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="96c9ed296b295e130368c10ce172ca29da14d27c" translate="yes" xml:space="preserve">
          <source>This class represents access to a file or directory. A FilePermission consists of a pathname and a set of actions valid for that pathname.</source>
          <target state="translated">이 클래스는 파일 또는 디렉토리에 대한 액세스를 나타냅니다. FilePermission은 경로명과 해당 경로명에 유효한 조치 세트로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="6e35f7fc25369199a5888640962d3cf36c27158f" translate="yes" xml:space="preserve">
          <source>This class represents access to a network via sockets.</source>
          <target state="translated">이 클래스는 소켓을 통한 네트워크 액세스를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4fd26ad0b54898f528e3da0fd358463440e01702" translate="yes" xml:space="preserve">
          <source>This class represents access to a network via sockets. A SocketPermission consists of a host specification and a set of &quot;actions&quot; specifying ways to connect to that host. The host is specified as</source>
          <target state="translated">이 클래스는 소켓을 통한 네트워크 액세스를 나타냅니다. SocketPermission은 호스트 사양과 해당 호스트에 연결하는 방법을 지정하는 일련의 &quot;작업&quot;으로 구성됩니다. 호스트는 다음과 같이 지정됩니다</target>
        </trans-unit>
        <trans-unit id="35c02ac1117024cec60ba5833d97c4503db7dbbd" translate="yes" xml:space="preserve">
          <source>This class represents an &lt;code&gt;X500PrivateCredential&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 &lt;code&gt;X500PrivateCredential&lt;/code&gt; 을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="597b1bf46aeb0968dd77f5a6c471fe96e4f74091" translate="yes" xml:space="preserve">
          <source>This class represents an &lt;code&gt;X500PrivateCredential&lt;/code&gt;. It associates an X.509 certificate, corresponding private key and the KeyStore alias used to reference that exact key pair in the KeyStore. This enables looking up the private credentials for an X.500 principal in a subject.</source>
          <target state="translated">이 클래스는 &lt;code&gt;X500PrivateCredential&lt;/code&gt; 을 나타냅니다 . X.509 인증서, 해당 개인 키 및 키 저장소에서 해당 키 쌍을 참조하는 데 사용되는 키 저장소 별명을 연관시킵니다. 이를 통해 주제에서 X.500 프린시 펄의 개인 신임 정보를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5da08fc27084a8aabc79a56c347ed1adb802e76d" translate="yes" xml:space="preserve">
          <source>This class represents an Internet Protocol (IP) address.</source>
          <target state="translated">이 클래스는 인터넷 프로토콜 (IP) 주소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bef48e6b1ba57a7171d54341435b8a0f4108e35c" translate="yes" xml:space="preserve">
          <source>This class represents an Internet Protocol version 4 (IPv4) address.</source>
          <target state="translated">이 클래스는 IPv4 (Internet Protocol version 4) 주소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4404510f4c4b02813ee1c30570ebef462e7dd942" translate="yes" xml:space="preserve">
          <source>This class represents an Internet Protocol version 4 (IPv4) address. Defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc790.txt&quot;&gt; &lt;i&gt;RFC 790: Assigned Numbers&lt;/i&gt;&lt;/a&gt;, &lt;a href=&quot;http://www.ietf.org/rfc/rfc1918.txt&quot;&gt; &lt;i&gt;RFC 1918: Address Allocation for Private Internets&lt;/i&gt;&lt;/a&gt;, and &lt;a href=&quot;http://www.ietf.org/rfc/rfc2365.txt&quot;&gt;&lt;i&gt;RFC 2365: Administratively Scoped IP Multicast&lt;/i&gt;&lt;/a&gt;</source>
          <target state="translated">이 클래스는 IPv4 (Internet Protocol version 4) 주소를 나타냅니다. &lt;a href=&quot;http://www.ietf.org/rfc/rfc790.txt&quot;&gt;&lt;i&gt;RFC 790에&lt;/i&gt;&lt;/a&gt; 의해 정의 됨 &lt;i&gt;: 할당 번호&lt;/i&gt; , &lt;a href=&quot;http://www.ietf.org/rfc/rfc1918.txt&quot;&gt;&lt;i&gt;RFC 1918 : 개인 인터넷 주소 할당&lt;/i&gt;&lt;/a&gt; 및 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2365.txt&quot;&gt;&lt;i&gt;RFC 2365 : 관리 범위 IP 멀티 캐스트&lt;/i&gt;&lt;/a&gt; &lt;i&gt;&lt;/i&gt; &lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="9ca47090f8419b40c56f70b0bafd476aff2a4973" translate="yes" xml:space="preserve">
          <source>This class represents an Internet Protocol version 6 (IPv6) address.</source>
          <target state="translated">이 클래스는 IPv6 (Internet Protocol version 6) 주소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2d5bbebbe427bab598fb25281b3b248f813f1b40" translate="yes" xml:space="preserve">
          <source>This class represents an Internet Protocol version 6 (IPv6) address. Defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2373.txt&quot;&gt; &lt;i&gt;RFC 2373: IP Version 6 Addressing Architecture&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 IPv6 (Internet Protocol version 6) 주소를 나타냅니다. &lt;a href=&quot;http://www.ietf.org/rfc/rfc2373.txt&quot;&gt;&lt;i&gt;RFC 2373에&lt;/i&gt;&lt;/a&gt; 의해 정의 됨 &lt;i&gt;: IP 버전 6 주소 지정 아키텍처&lt;/i&gt; . &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="a8155b02899707f88ae3edafcc48b6656d828c0c" translate="yes" xml:space="preserve">
          <source>This class represents an X.500 &lt;code&gt;Principal&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 X.500의 대표 &lt;code&gt;Principal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea8fd17c39f18d83341c0e789af157690cbf1fa2" translate="yes" xml:space="preserve">
          <source>This class represents an X.500 &lt;code&gt;Principal&lt;/code&gt;. &lt;code&gt;X500Principal&lt;/code&gt;s are represented by distinguished names such as &quot;CN=Duke, OU=JavaSoft, O=Sun Microsystems, C=US&quot;.</source>
          <target state="translated">이 클래스는 X.500의 대표 &lt;code&gt;Principal&lt;/code&gt; . &lt;code&gt;X500Principal&lt;/code&gt; 은 &quot;CN = Duke, OU = JavaSoft, O = Sun Microsystems, C = US&quot;와 같은 고유 이름으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="9c49cfbbfc4d25b023035a9ec5edf2c898f71c3c" translate="yes" xml:space="preserve">
          <source>This class represents an error that has occurred when using SASL.</source>
          <target state="translated">이 클래스는 SASL을 사용할 때 발생한 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b7718890ea368072fc569ea892e93571154c3cfc" translate="yes" xml:space="preserve">
          <source>This class represents an event fired by a naming/directory service.</source>
          <target state="translated">이 클래스는 네이밍 / 디렉토리 서비스에 의해 발생 된 이벤트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3b0fdd1a298d702aa16a46f65ffe68bf1ab3fe87" translate="yes" xml:space="preserve">
          <source>This class represents an event fired in response to an unsolicited notification sent by the LDAP server.</source>
          <target state="translated">이 클래스는 LDAP 서버가 보낸 요청하지 않은 알림에 대한 응답으로 발생한 이벤트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8daaad7e039d9492107335b3b2a5aa61683b8d41" translate="yes" xml:space="preserve">
          <source>This class represents an event fired when the procedures/processes used to collect information for notifying listeners of &lt;code&gt;NamingEvent&lt;/code&gt;s threw a &lt;code&gt;NamingException&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 리스너에게 &lt;code&gt;NamingEvent&lt;/code&gt; 통지에 대한 정보를 수집하기 위해서 사용 된 프로 시저 / 프로세스 가 &lt;code&gt;NamingException&lt;/code&gt; 을 Throw 했을 때에 발생한 이벤트를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="44004aad051bbbef9d2ee95d6412eee8c8b2110f" translate="yes" xml:space="preserve">
          <source>This class represents an event fired when the procedures/processes used to collect information for notifying listeners of &lt;code&gt;NamingEvent&lt;/code&gt;s threw a &lt;code&gt;NamingException&lt;/code&gt;. This can happen, for example, if the server which the listener is using aborts subsequent to the &lt;code&gt;addNamingListener()&lt;/code&gt; call.</source>
          <target state="translated">이 클래스는 리스너에게 &lt;code&gt;NamingEvent&lt;/code&gt; 통지에 대한 정보를 수집하기 위해서 사용 된 프로 시저 / 프로세스 가 &lt;code&gt;NamingException&lt;/code&gt; 을 Throw 했을 때에 발생한 이벤트를 나타냅니다 . 예를 들어, 리스너가 사용중인 서버가 &lt;code&gt;addNamingListener()&lt;/code&gt; 호출 이후 중단되는 경우에 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b447b0c5f978595c0b42ee443fd1873d2a5f1fa" translate="yes" xml:space="preserve">
          <source>This class represents an item in the NamingEnumeration returned as a result of the DirContext.search() methods.</source>
          <target state="translated">이 클래스는 DirContext.search () 메서드의 결과로 반환 된 NamingEnumeration의 항목을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9d9fafa34e9b2f65d71ae93644092567545924f8" translate="yes" xml:space="preserve">
          <source>This class represents an observable object, or &quot;data&quot; in the model-view paradigm.</source>
          <target state="translated">이 클래스는 관찰 가능한 객체 또는 모델 뷰 패러다임의 &quot;데이터&quot;를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ad081c6f7a7669b9fcaeea37a39cc37f50a30806" translate="yes" xml:space="preserve">
          <source>This class represents an observable object, or &quot;data&quot; in the model-view paradigm. It can be subclassed to represent an object that the application wants to have observed.</source>
          <target state="translated">이 클래스는 관찰 가능한 객체 또는 모델 뷰 패러다임의 &quot;데이터&quot;를 나타냅니다. 어플리케이션이 관찰하고자하는 객체를 나타 내기 위해 서브 클래 싱 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83e1f6c7452b250bbcc17b56d13f0c1745763ae6" translate="yes" xml:space="preserve">
          <source>This class represents identities: real-world objects such as people, companies or organizations whose identities can be authenticated using their public keys. Identities may also be more abstract (or concrete) constructs, such as daemon threads or smart cards.</source>
          <target state="translated">이 클래스는 ID를 나타냅니다. 사람, 회사 또는 공개 키를 사용하여 ID를 인증 할 수있는 조직과 같은 실제 개체입니다. 또한 ID는 데몬 스레드 또는 스마트 카드와 같은보다 추상적 인 (또는 구체적인) 구성 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="686a403832c5cc96372fe5b15b783b1742fdabe8" translate="yes" xml:space="preserve">
          <source>This class represents image data which is stored in a band interleaved fashion and for which each sample of a pixel occupies one data element of the DataBuffer.</source>
          <target state="translated">이 클래스는 밴드 인터리브 방식으로 저장되고 픽셀의 각 샘플이 DataBuffer의 하나의 데이터 요소를 차지하는 이미지 데이터를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3b9070c3be3f795e01ef027055a0ebbdf800a909" translate="yes" xml:space="preserve">
          <source>This class represents image data which is stored in a band interleaved fashion and for which each sample of a pixel occupies one data element of the DataBuffer. It subclasses ComponentSampleModel but provides a more efficient implementation for accessing band interleaved image data than is provided by ComponentSampleModel. This class should typically be used when working with images which store sample data for each band in a different bank of the DataBuffer. Accessor methods are provided so that image data can be manipulated directly. Pixel stride is the number of data array elements between two samples for the same band on the same scanline. The pixel stride for a BandedSampleModel is one. Scanline stride is the number of data array elements between a given sample and the corresponding sample in the same column of the next scanline. Band offsets denote the number of data array elements from the first data array element of the bank of the DataBuffer holding each band to the first sample of the band. The bands are numbered from 0 to N-1. Bank indices denote the correspondence between a bank of the data buffer and a band of image data. This class supports &lt;a href=&quot;databuffer#TYPE_BYTE&quot;&gt;&lt;code&gt;TYPE_BYTE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;databuffer#TYPE_USHORT&quot;&gt;&lt;code&gt;TYPE_USHORT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;databuffer#TYPE_SHORT&quot;&gt;&lt;code&gt;TYPE_SHORT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;databuffer#TYPE_INT&quot;&gt;&lt;code&gt;TYPE_INT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;databuffer#TYPE_FLOAT&quot;&gt;&lt;code&gt;TYPE_FLOAT&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;databuffer#TYPE_DOUBLE&quot;&gt;&lt;code&gt;TYPE_DOUBLE&lt;/code&gt;&lt;/a&gt; datatypes</source>
          <target state="translated">이 클래스는 밴드 인터리브 방식으로 저장되고 픽셀의 각 샘플이 DataBuffer의 하나의 데이터 요소를 차지하는 이미지 데이터를 나타냅니다. ComponentSampleModel을 서브 클래 싱하지만 ComponentSampleModel에서 제공하는 것보다 밴드 인터리브 이미지 데이터에 액세스하기위한보다 효율적인 구현을 제공합니다. 이 클래스는 일반적으로 DataBuffer의 다른 뱅크에 각 밴드에 대한 샘플 데이터를 저장하는 이미지로 작업 할 때 사용해야합니다. 이미지 데이터를 직접 조작 할 수 있도록 접근 자 메서드가 제공됩니다. 픽셀 스트라이드는 동일한 스캔 라인에서 동일한 밴드에 대한 두 샘플 사이의 데이터 배열 요소의 수입니다. BandedSampleModel의 픽셀 보폭은 1입니다. 스캔 라인 보폭은 주어진 샘플과 다음 스캔 라인의 동일한 열에있는 해당 샘플 사이의 데이터 배열 요소의 수입니다.밴드 오프셋은 각 밴드를 밴드의 첫 번째 샘플까지 보유하는 DataBuffer 뱅크의 첫 번째 데이터 배열 요소에서 데이터 배열 요소의 수를 나타냅니다. 밴드는 0에서 N-1까지 번호가 지정됩니다. 뱅크 인덱스는 데이터 버퍼의 뱅크와 이미지 데이터 밴드 간의 대응 관계를 나타냅니다. 이 클래스는&lt;a href=&quot;databuffer#TYPE_BYTE&quot;&gt; &lt;code&gt;TYPE_BYTE&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;databuffer#TYPE_USHORT&quot;&gt; &lt;code&gt;TYPE_USHORT&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;databuffer#TYPE_SHORT&quot;&gt; &lt;code&gt;TYPE_SHORT&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;databuffer#TYPE_INT&quot;&gt; &lt;code&gt;TYPE_INT&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;databuffer#TYPE_FLOAT&quot;&gt; &lt;code&gt;TYPE_FLOAT&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;databuffer#TYPE_DOUBLE&quot;&gt; &lt;code&gt;TYPE_DOUBLE&lt;/code&gt; &lt;/a&gt; 데이터 유형</target>
        </trans-unit>
        <trans-unit id="bafde58beed6b370d3a3bf1e6d7638fe4381f531" translate="yes" xml:space="preserve">
          <source>This class represents image data which is stored in a pixel interleaved fashion and for which each sample of a pixel occupies one data element of the DataBuffer.</source>
          <target state="translated">이 클래스는 픽셀 인터리브 방식으로 저장되고 픽셀의 각 샘플이 DataBuffer의 하나의 데이터 요소를 차지하는 이미지 데이터를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9d9182e9452827003feb0b5615d9e233a6bd3e52" translate="yes" xml:space="preserve">
          <source>This class represents image data which is stored in a pixel interleaved fashion and for which each sample of a pixel occupies one data element of the DataBuffer. It subclasses ComponentSampleModel but provides a more efficient implementation for accessing pixel interleaved image data than is provided by ComponentSampleModel. This class stores sample data for all bands in a single bank of the DataBuffer. Accessor methods are provided so that image data can be manipulated directly. Pixel stride is the number of data array elements between two samples for the same band on the same scanline. Scanline stride is the number of data array elements between a given sample and the corresponding sample in the same column of the next scanline. Band offsets denote the number of data array elements from the first data array element of the bank of the DataBuffer holding each band to the first sample of the band. The bands are numbered from 0 to N-1. Bank indices denote the correspondence between a bank of the data buffer and a band of image data. This class supports &lt;a href=&quot;databuffer#TYPE_BYTE&quot;&gt;&lt;code&gt;TYPE_BYTE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;databuffer#TYPE_USHORT&quot;&gt;&lt;code&gt;TYPE_USHORT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;databuffer#TYPE_SHORT&quot;&gt;&lt;code&gt;TYPE_SHORT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;databuffer#TYPE_INT&quot;&gt;&lt;code&gt;TYPE_INT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;databuffer#TYPE_FLOAT&quot;&gt;&lt;code&gt;TYPE_FLOAT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;databuffer#TYPE_DOUBLE&quot;&gt;&lt;code&gt;TYPE_DOUBLE&lt;/code&gt;&lt;/a&gt; datatypes.</source>
          <target state="translated">이 클래스는 픽셀 인터리브 방식으로 저장되고 픽셀의 각 샘플이 DataBuffer의 하나의 데이터 요소를 차지하는 이미지 데이터를 나타냅니다. ComponentSampleModel을 서브 클래 싱하지만 ComponentSampleModel에서 제공하는 것보다 픽셀 인터리브 이미지 데이터에 액세스하기위한보다 효율적인 구현을 제공합니다. 이 클래스는 모든 대역에 대한 샘플 데이터를 DataBuffer의 단일 뱅크에 저장합니다. 이미지 데이터를 직접 조작 할 수 있도록 접근 자 메서드가 제공됩니다. 픽셀 스트라이드는 동일한 스캔 라인에서 동일한 밴드에 대한 두 샘플 사이의 데이터 배열 요소의 수입니다. 스캔 라인 보폭은 주어진 샘플과 다음 스캔 라인의 동일한 열에있는 해당 샘플 사이의 데이터 배열 요소의 수입니다.밴드 오프셋은 각 밴드를 밴드의 첫 번째 샘플까지 보유하는 DataBuffer 뱅크의 첫 번째 데이터 배열 요소에서 데이터 배열 요소의 수를 나타냅니다. 밴드는 0에서 N-1까지 번호가 지정됩니다. 뱅크 인덱스는 데이터 버퍼의 뱅크와 이미지 데이터 밴드 간의 대응 관계를 나타냅니다. 이 클래스는&lt;a href=&quot;databuffer#TYPE_BYTE&quot;&gt; &lt;code&gt;TYPE_BYTE&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;databuffer#TYPE_USHORT&quot;&gt; &lt;code&gt;TYPE_USHORT&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;databuffer#TYPE_SHORT&quot;&gt; &lt;code&gt;TYPE_SHORT&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;databuffer#TYPE_INT&quot;&gt; &lt;code&gt;TYPE_INT&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;databuffer#TYPE_FLOAT&quot;&gt; &lt;code&gt;TYPE_FLOAT&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;databuffer#TYPE_DOUBLE&quot;&gt; &lt;code&gt;TYPE_DOUBLE&lt;/code&gt; &lt;/a&gt; 데이터 유형.</target>
        </trans-unit>
        <trans-unit id="311c37da11c622dde57c6af70afe865a7a227b3b" translate="yes" xml:space="preserve">
          <source>This class represents image data which is stored such that each sample of a pixel occupies one data element of the DataBuffer.</source>
          <target state="translated">이 클래스는 픽셀의 각 샘플이 DataBuffer의 하나의 데이터 요소를 차지하도록 저장된 이미지 데이터를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bdd0bc3e1493ee52de19aca675ab2e53c8a313f4" translate="yes" xml:space="preserve">
          <source>This class represents image data which is stored such that each sample of a pixel occupies one data element of the DataBuffer. It stores the N samples which make up a pixel in N separate data array elements. Different bands may be in different banks of the DataBuffer. Accessor methods are provided so that image data can be manipulated directly. This class can support different kinds of interleaving, e.g. band interleaving, scanline interleaving, and pixel interleaving. Pixel stride is the number of data array elements between two samples for the same band on the same scanline. Scanline stride is the number of data array elements between a given sample and the corresponding sample in the same column of the next scanline. Band offsets denote the number of data array elements from the first data array element of the bank of the DataBuffer holding each band to the first sample of the band. The bands are numbered from 0 to N-1. This class can represent image data for which each sample is an unsigned integral number which can be stored in 8, 16, or 32 bits (using &lt;code&gt;DataBuffer.TYPE_BYTE&lt;/code&gt;, &lt;code&gt;DataBuffer.TYPE_USHORT&lt;/code&gt;, or &lt;code&gt;DataBuffer.TYPE_INT&lt;/code&gt;, respectively), data for which each sample is a signed integral number which can be stored in 16 bits (using &lt;code&gt;DataBuffer.TYPE_SHORT&lt;/code&gt;), or data for which each sample is a signed float or double quantity (using &lt;code&gt;DataBuffer.TYPE_FLOAT&lt;/code&gt; or &lt;code&gt;DataBuffer.TYPE_DOUBLE&lt;/code&gt;, respectively). All samples of a given ComponentSampleModel are stored with the same precision. All strides and offsets must be non-negative. This class supports &lt;a href=&quot;databuffer#TYPE_BYTE&quot;&gt;&lt;code&gt;TYPE_BYTE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;databuffer#TYPE_USHORT&quot;&gt;&lt;code&gt;TYPE_USHORT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;databuffer#TYPE_SHORT&quot;&gt;&lt;code&gt;TYPE_SHORT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;databuffer#TYPE_INT&quot;&gt;&lt;code&gt;TYPE_INT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;databuffer#TYPE_FLOAT&quot;&gt;&lt;code&gt;TYPE_FLOAT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;databuffer#TYPE_DOUBLE&quot;&gt;&lt;code&gt;TYPE_DOUBLE&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">이 클래스는 픽셀의 각 샘플이 DataBuffer의 하나의 데이터 요소를 차지하도록 저장된 이미지 데이터를 나타냅니다. N 개의 개별 데이터 배열 요소에 픽셀을 구성하는 N 개의 샘플을 저장합니다. 다른 밴드는 DataBuffer의 다른 뱅크에있을 수 있습니다. 이미지 데이터를 직접 조작 할 수 있도록 접근 자 메서드가 제공됩니다. 이 클래스는 밴드 인터리빙, 스캔 라인 인터리빙 및 픽셀 인터리빙과 같은 다양한 종류의 인터리빙을 지원할 수 있습니다. 픽셀 스트라이드는 동일한 스캔 라인에서 동일한 밴드에 대한 두 샘플 사이의 데이터 배열 요소의 수입니다. 스캔 라인 보폭은 주어진 샘플과 다음 스캔 라인의 동일한 열에있는 해당 샘플 사이의 데이터 배열 요소의 수입니다.밴드 오프셋은 각 밴드를 밴드의 첫 번째 샘플까지 보유하는 DataBuffer 뱅크의 첫 번째 데이터 배열 요소에서 데이터 배열 요소의 수를 나타냅니다. 밴드는 0에서 N-1까지 번호가 지정됩니다. 이 클래스는 각 샘플이 8, 16 또는 32 비트로 저장 될 수있는 부호없는 정수인 이미지 데이터를 나타낼 수 있습니다 (사용 &lt;code&gt;DataBuffer.TYPE_BYTE&lt;/code&gt; , &lt;code&gt;DataBuffer.TYPE_USHORT&lt;/code&gt; 또는 &lt;code&gt;DataBuffer.TYPE_INT&lt;/code&gt; 각각), 각 샘플이 16 비트로 저장 될 수있는 부호있는 &lt;code&gt;DataBuffer.TYPE_SHORT&lt;/code&gt; 데이터 ( DataBuffer.TYPE_SHORT 사용 ) 또는 각 샘플이 부호있는 부동 소수점 인 데이터 또는 이중 수량 ( 각각 &lt;code&gt;DataBuffer.TYPE_FLOAT&lt;/code&gt; 또는 &lt;code&gt;DataBuffer.TYPE_DOUBLE&lt;/code&gt; 사용 ). 주어진 ComponentSampleModel의 모든 샘플은 동일한 정밀도로 저장됩니다. 모든 보폭과 오프셋은 음수가 아니어야합니다. 이 클래스는 &lt;a href=&quot;databuffer#TYPE_BYTE&quot;&gt; &lt;code&gt;TYPE_BYTE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;databuffer#TYPE_USHORT&quot;&gt; &lt;code&gt;TYPE_USHORT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;databuffer#TYPE_SHORT&quot;&gt; &lt;code&gt;TYPE_SHORT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;databuffer#TYPE_INT&quot;&gt; &lt;code&gt;TYPE_INT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;databuffer#TYPE_FLOAT&quot;&gt; &lt;code&gt;TYPE_FLOAT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;databuffer#TYPE_DOUBLE&quot;&gt; &lt;code&gt;TYPE_DOUBLE&lt;/code&gt; 을 지원합니다.&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="abb27f582f076759e44f984c6f54abaa942c7b1d" translate="yes" xml:space="preserve">
          <source>This class represents pixel data packed such that the N samples which make up a single pixel are stored in a single data array element, and each data data array element holds samples for only one pixel.</source>
          <target state="translated">이 클래스는 단일 픽셀을 구성하는 N 개의 샘플이 단일 데이터 배열 요소에 저장되고 각 데이터 데이터 배열 요소가 하나의 픽셀에 대한 샘플 만 보유하도록 패킹 된 픽셀 데이터를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4ff244a0701be95fb45c68400d17212a77a8c7a8" translate="yes" xml:space="preserve">
          <source>This class represents pixel data packed such that the N samples which make up a single pixel are stored in a single data array element, and each data data array element holds samples for only one pixel. This class supports &lt;a href=&quot;databuffer#TYPE_BYTE&quot;&gt;&lt;code&gt;TYPE_BYTE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;databuffer#TYPE_USHORT&quot;&gt;&lt;code&gt;TYPE_USHORT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;databuffer#TYPE_INT&quot;&gt;&lt;code&gt;TYPE_INT&lt;/code&gt;&lt;/a&gt; data types. All data array elements reside in the first bank of a DataBuffer. Accessor methods are provided so that the image data can be manipulated directly. Scanline stride is the number of data array elements between a given sample and the corresponding sample in the same column of the next scanline. Bit masks are the masks required to extract the samples representing the bands of the pixel. Bit offsets are the offsets in bits into the data array element of the samples representing the bands of the pixel.</source>
          <target state="translated">이 클래스는 단일 픽셀을 구성하는 N 개의 샘플이 단일 데이터 배열 요소에 저장되고 각 데이터 데이터 배열 요소가 하나의 픽셀에 대한 샘플 만 보유하도록 패킹 된 픽셀 데이터를 나타냅니다. 이 클래스는 &lt;a href=&quot;databuffer#TYPE_BYTE&quot;&gt; &lt;code&gt;TYPE_BYTE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;databuffer#TYPE_USHORT&quot;&gt; &lt;code&gt;TYPE_USHORT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;databuffer#TYPE_INT&quot;&gt; &lt;code&gt;TYPE_INT&lt;/code&gt; 를&lt;/a&gt; 지원합니다.데이터 유형. 모든 데이터 배열 요소는 DataBuffer의 첫 번째 뱅크에 있습니다. 이미지 데이터를 직접 조작 할 수 있도록 접근 자 메서드가 제공됩니다. 스캔 라인 보폭은 주어진 샘플과 다음 스캔 라인의 동일한 열에있는 해당 샘플 사이의 데이터 배열 요소의 수입니다. 비트 마스크는 픽셀의 밴드를 나타내는 샘플을 추출하는 데 필요한 마스크입니다. 비트 오프셋은 픽셀의 밴드를 나타내는 샘플의 데이터 배열 요소에 대한 비트 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="c3d4a94307b5f9b3ebbdf2b235b7dc11b06744c9" translate="yes" xml:space="preserve">
          <source>This class represents the ASN.1 encoding of a private key, encoded according to the ASN.1 type &lt;code&gt;PrivateKeyInfo&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 ASN.1 형 &lt;code&gt;PrivateKeyInfo&lt;/code&gt; 에 따라 encode 된 비공개 키의 ASN.1 인코딩을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="86e9b50884031de0a10cba5fe9d7ce0103ddb7c0" translate="yes" xml:space="preserve">
          <source>This class represents the ASN.1 encoding of a private key, encoded according to the ASN.1 type &lt;code&gt;PrivateKeyInfo&lt;/code&gt;. The &lt;code&gt;PrivateKeyInfo&lt;/code&gt; syntax is defined in the PKCS#8 standard as follows:</source>
          <target state="translated">이 클래스는 ASN.1 타입 &lt;code&gt;PrivateKeyInfo&lt;/code&gt; 에 따라 encode 된 비공개 키의 ASN.1 인코딩을 나타냅니다 . &lt;code&gt;PrivateKeyInfo&lt;/code&gt; 로의 다음과 같은 구문이 PKCS # 8 표준에 정의되어 있습니다 :</target>
        </trans-unit>
        <trans-unit id="60979597056c3ac16ebe813c087f2ea6ef60c9b0" translate="yes" xml:space="preserve">
          <source>This class represents the ASN.1 encoding of a public key, encoded according to the ASN.1 type &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 ASN.1 형 &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; 에 따라 encode 된 공개 키의 ASN.1 인코딩을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="f238e432344ac7eb0d323154e90ddb22b3a9be5e" translate="yes" xml:space="preserve">
          <source>This class represents the ASN.1 encoding of a public key, encoded according to the ASN.1 type &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt;. The &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; syntax is defined in the X.509 standard as follows:</source>
          <target state="translated">이 클래스는 ASN.1 형 &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; 에 따라 encode 된 공개 키의 ASN.1 인코딩을 나타냅니다 . &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; 로의 다음과 같은 구문은 X.509 표준에 정의되어 있습니다 :</target>
        </trans-unit>
        <trans-unit id="aec0b89cdf0c1c0c3879f8289fa96387f53ab0c1" translate="yes" xml:space="preserve">
          <source>This class represents the address of a communications end-point.</source>
          <target state="translated">이 클래스는 통신 엔드 포인트의 주소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2cc0e4e13d261225d7d5ecad06612f2348dffe71" translate="yes" xml:space="preserve">
          <source>This class represents the address of a communications end-point. It consists of a type that describes the communication mechanism and an address contents determined by an RefAddr subclass.</source>
          <target state="translated">이 클래스는 통신 엔드 포인트의 주소를 나타냅니다. 통신 메커니즘을 설명하는 유형과 RefAddr 서브 클래스에 의해 결정된 주소 내용으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="09e8d15b311a50876d340865b118748ac086830c" translate="yes" xml:space="preserve">
          <source>This class represents the binary form of the address of a communications end-point.</source>
          <target state="translated">이 클래스는 통신 끝점 주소의 이진 형식을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="544dd14dbdd06652ace8bec1484310b9c0ef055c" translate="yes" xml:space="preserve">
          <source>This class represents the contents of the &lt;code&gt;MLET&lt;/code&gt; tag.</source>
          <target state="translated">이 클래스는 &lt;code&gt;MLET&lt;/code&gt; 태그 의 내용을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b6fab4785cc7eb53b9856455cb2d510a9ff96b3f" translate="yes" xml:space="preserve">
          <source>This class represents the contents of the &lt;code&gt;MLET&lt;/code&gt; tag. It can be consulted by a subclass of &lt;a href=&quot;mlet&quot;&gt;&lt;code&gt;MLet&lt;/code&gt;&lt;/a&gt; that overrides the &lt;a href=&quot;mlet#check(java.lang.String,java.net.URL,java.lang.String,javax.management.loading.MLetContent)&quot;&gt;&lt;code&gt;MLet.check&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 클래스는 &lt;code&gt;MLET&lt;/code&gt; 태그 의 내용을 나타냅니다 . &lt;a href=&quot;mlet#check(java.lang.String,java.net.URL,java.lang.String,javax.management.loading.MLetContent)&quot;&gt; &lt;code&gt;MLet.check&lt;/code&gt; &lt;/a&gt; 메서드 를 재정의하는 &lt;a href=&quot;mlet&quot;&gt; &lt;code&gt;MLet&lt;/code&gt; &lt;/a&gt; 의 하위 클래스에서 참조 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ed8feef07eaf8295b20b9f1c888e6c0187c5e90a" translate="yes" xml:space="preserve">
          <source>This class represents the contents of the &lt;code&gt;MLET&lt;/code&gt; tag. It can be consulted by a subclass of &lt;a href=&quot;mlet&quot;&gt;&lt;code&gt;MLet&lt;/code&gt;&lt;/a&gt; that overrides the &lt;a href=&quot;mlet#check-java.lang.String-java.net.URL-java.lang.String-javax.management.loading.MLetContent-&quot;&gt;&lt;code&gt;MLet.check&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 클래스는 &lt;code&gt;MLET&lt;/code&gt; 태그 의 내용을 나타냅니다 . &lt;a href=&quot;mlet#check-java.lang.String-java.net.URL-java.lang.String-javax.management.loading.MLetContent-&quot;&gt; &lt;code&gt;MLet.check&lt;/code&gt; &lt;/a&gt; 메소드 를 대체하는 &lt;a href=&quot;mlet&quot;&gt; &lt;code&gt;MLet&lt;/code&gt; &lt;/a&gt; 의 서브 클래스에서 참조 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd25395d77c9ed85b0d3f717dd0fa00f0309743f" translate="yes" xml:space="preserve">
          <source>This class represents the meta data for ModelMBeans.</source>
          <target state="translated">이 클래스는 ModelMBean의 메타 데이터를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2f2b34ddd37ace51ac7c93f6c996e35bd851f2f3" translate="yes" xml:space="preserve">
          <source>This class represents the meta data for ModelMBeans. Descriptors have been added on the meta data objects.</source>
          <target state="translated">이 클래스는 ModelMBean의 메타 데이터를 나타냅니다. 메타 데이터 개체에 설명자가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="9575a4ba849add0fd8b33418be3743a6834c7223" translate="yes" xml:space="preserve">
          <source>This class represents the metadata set for a ModelMBean element.</source>
          <target state="translated">이 클래스는 ModelMBean 요소의 메타 데이터 세트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="aae700f21e0212f303421dc3fee01f330acbdde1" translate="yes" xml:space="preserve">
          <source>This class represents the metadata set for a ModelMBean element. A descriptor is part of the ModelMBeanInfo, ModelMBeanNotificationInfo, ModelMBeanAttributeInfo, ModelMBeanConstructorInfo, and ModelMBeanParameterInfo.</source>
          <target state="translated">이 클래스는 ModelMBean 요소의 메타 데이터 세트를 나타냅니다. 디스크립터는 ModelMBeanInfo, ModelMBeanNotificationInfo, ModelMBeanAttributeInfo, ModelMBeanConstructorInfo 및 ModelMBeanParameterInfo의 일부입니다.</target>
        </trans-unit>
        <trans-unit id="97fb072c064abfa1e2afc74067fead2f532be446" translate="yes" xml:space="preserve">
          <source>This class represents the object name and class name pair of a binding found in a context.</source>
          <target state="translated">이 클래스는 컨텍스트에서 발견 된 바인딩의 오브젝트 이름 및 클래스 이름 쌍을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ad812636f21fa9e17c4e941198e1db0bf39887b4" translate="yes" xml:space="preserve">
          <source>This class represents the result of resolution of a name.</source>
          <target state="translated">이 클래스는 이름 확인 결과를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7c58737f3ddd4d9f5fe490a9a74bd744fdcfc663" translate="yes" xml:space="preserve">
          <source>This class represents the result of resolution of a name. It contains the object to which name was resolved, and the portion of the name that has not been resolved.</source>
          <target state="translated">이 클래스는 이름 확인 결과를 나타냅니다. 이름이 확인 된 개체와 확인되지 않은 이름 부분이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="38ca9ed1a37cb7b84401c77cecbd410c3e8da0d4" translate="yes" xml:space="preserve">
          <source>This class represents the set of symbols (such as the decimal separator, the grouping separator, and so on) needed by &lt;code&gt;DecimalFormat&lt;/code&gt; to format numbers.</source>
          <target state="translated">이 클래스는 숫자를 형식화하기 위해 &lt;code&gt;DecimalFormat&lt;/code&gt; 에 필요한 기호 세트 (예 : 소수 구분 기호, 그룹 구분 기호 등)를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="48624c6e1d8a0bf6e9dc9ef7bc4796ae92729fe0" translate="yes" xml:space="preserve">
          <source>This class represents the set of symbols (such as the decimal separator, the grouping separator, and so on) needed by &lt;code&gt;DecimalFormat&lt;/code&gt; to format numbers. &lt;code&gt;DecimalFormat&lt;/code&gt; creates for itself an instance of &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; from its locale data. If you need to change any of these symbols, you can get the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object from your &lt;code&gt;DecimalFormat&lt;/code&gt; and modify it.</source>
          <target state="translated">이 클래스는 숫자를 형식화하기 위해 &lt;code&gt;DecimalFormat&lt;/code&gt; 에 필요한 기호 세트 (예 : 소수 구분 기호, 그룹 구분 기호 등)를 나타냅니다 . &lt;code&gt;DecimalFormat&lt;/code&gt; 은 로케일 데이터에서 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; 의 인스턴스를 자체적으로 작성 합니다. 이러한 기호의 어떤 것인지를 변경해야하는 경우, 당신은 얻을 수 있습니다 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; 당신에서 개체 &lt;code&gt;DecimalFormat&lt;/code&gt; 하고 수정합니다.</target>
        </trans-unit>
        <trans-unit id="f59824e9395fc6f126220db826fa23950c709252" translate="yes" xml:space="preserve">
          <source>This class represents the state of a horizontal or vertical scrollbar of a &lt;code&gt;ScrollPane&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 &lt;code&gt;ScrollPane&lt;/code&gt; 의 가로 또는 세로 스크롤 막대의 상태를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="5d7b129ab16029befc3203aaf5790f256dad791e" translate="yes" xml:space="preserve">
          <source>This class represents the state of a horizontal or vertical scrollbar of a &lt;code&gt;ScrollPane&lt;/code&gt;. Objects of this class are returned by &lt;code&gt;ScrollPane&lt;/code&gt; methods.</source>
          <target state="translated">이 클래스는 &lt;code&gt;ScrollPane&lt;/code&gt; 의 가로 또는 세로 스크롤 막대의 상태를 나타냅니다 . 이 클래스의 객체는 &lt;code&gt;ScrollPane&lt;/code&gt; 메서드에 의해 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="f265c252d89abef8cf04f968c72e0e26bf915c0c" translate="yes" xml:space="preserve">
          <source>This class represents the string form of the address of a communications end-point.</source>
          <target state="translated">이 클래스는 통신 엔드 포인트 주소의 문자열 형식을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="418dc123122202354a4ec878f1f0eea6e363c940" translate="yes" xml:space="preserve">
          <source>This class represents the string form of the address of a communications end-point. It consists of a type that describes the communication mechanism and a string contents specific to that communication mechanism. The format and interpretation of the address type and the contents of the address are based on the agreement of three parties: the client that uses the address, the object/server that can be reached using the address, and the administrator or program that creates the address.</source>
          <target state="translated">이 클래스는 통신 엔드 포인트 주소의 문자열 형식을 나타냅니다. 통신 메커니즘을 설명하는 유형과 해당 통신 메커니즘에 특정한 문자열 내용으로 구성됩니다. 주소 유형 및 주소 내용의 형식과 해석은 주소를 사용하는 클라이언트, 주소를 사용하여 도달 할 수있는 오브젝트 / 서버 및 시스템을 작성하는 관리자 또는 프로그램의 세 당사자의 동의에 기반합니다. 주소.</target>
        </trans-unit>
        <trans-unit id="5ede9917186009ca67d63ddb4e5d9fccd64bd7c8" translate="yes" xml:space="preserve">
          <source>This class represents the successful result of the PKIX certification path builder algorithm.</source>
          <target state="translated">이 클래스는 PKIX 인증 경로 작성기 알고리즘의 성공적인 결과를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="253d67fe79dd74684f247507a29b69b61f8d3228" translate="yes" xml:space="preserve">
          <source>This class represents the successful result of the PKIX certification path builder algorithm. All certification paths that are built and returned using this algorithm are also validated according to the PKIX certification path validation algorithm.</source>
          <target state="translated">이 클래스는 PKIX 인증 경로 작성기 알고리즘의 성공적인 결과를 나타냅니다. 이 알고리즘을 사용하여 빌드 및 리턴 된 모든 인증 경로는 PKIX 인증 경로 유효성 검증 알고리즘에 따라 유효성 검증됩니다.</target>
        </trans-unit>
        <trans-unit id="4b74bcf11374b356b27f5f1ddc676aa0f16938c3" translate="yes" xml:space="preserve">
          <source>This class represents the successful result of the PKIX certification path validation algorithm.</source>
          <target state="translated">이 클래스는 PKIX 인증 경로 유효성 검증 알고리즘의 성공적인 결과를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b02b479fb90a9a1203cca43a8791b64624e22d57" translate="yes" xml:space="preserve">
          <source>This class represents the triplet (prime, exponent, and coefficient) inside RSA's OtherPrimeInfo structure, as defined in the &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS#1 v2.2&lt;/a&gt; standard.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS # 1 v2.2&lt;/a&gt; 표준에 정의 된대로 RSA의 OtherPrimeInfo 구조 내부에있는 삼중 항 (소수, 지수 및 계수)을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="038ffbd88652089f468249912bcc3c353c79b682" translate="yes" xml:space="preserve">
          <source>This class represents the triplet (prime, exponent, and coefficient) inside RSA's OtherPrimeInfo structure, as defined in the &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS#1 v2.2&lt;/a&gt; standard. The ASN.1 syntax of RSA's OtherPrimeInfo is as follows:</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS # 1 v2.2&lt;/a&gt; 표준에 정의 된대로 RSA의 OtherPrimeInfo 구조 내부에있는 삼중 항 (소수, 지수 및 계수)을 나타냅니다 . RSA OtherPrimeInfo의 ASN.1 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ca0589fc428b1844c4faa592c6b73c76d7d378bd" translate="yes" xml:space="preserve">
          <source>This class represents the triplet (prime, exponent, and coefficient) inside RSA's OtherPrimeInfo structure, as defined in the PKCS#1 v2.1.</source>
          <target state="translated">이 클래스는 PKCS # 1 v2.1에 정의 된대로 RSA의 OtherPrimeInfo 구조 내의 삼중 항 (프라임, 지수 및 계수)을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="97545fe1e68962710e1bd66c03204757b9cf86bb" translate="yes" xml:space="preserve">
          <source>This class represents the triplet (prime, exponent, and coefficient) inside RSA's OtherPrimeInfo structure, as defined in the PKCS#1 v2.1. The ASN.1 syntax of RSA's OtherPrimeInfo is as follows:</source>
          <target state="translated">이 클래스는 PKCS # 1 v2.1에 정의 된대로 RSA의 OtherPrimeInfo 구조 내의 삼중 항 (프라임, 지수 및 계수)을 나타냅니다. RSA의 OtherPrimeInfo의 ASN.1 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a68aa2cc3807b341c15bfb324b46d7e585e6933c" translate="yes" xml:space="preserve">
          <source>This class represents whether or not a &lt;code&gt;LoginModule&lt;/code&gt; is REQUIRED, REQUISITE, SUFFICIENT or OPTIONAL.</source>
          <target state="translated">이 클래스는 &lt;code&gt;LoginModule&lt;/code&gt; 이 REQUIRED, REQUISITE, SUFFICIENT 또는 OPTIONAL 인지 여부를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="c480371d93b15aca7a52a5a2484c2f3c5d59e4d1" translate="yes" xml:space="preserve">
          <source>This class resolves a few ambiguities found in RFC 2253 as follows:</source>
          <target state="translated">이 클래스는 RFC 2253에서 발견 된 몇 가지 모호성을 다음과 같이 해결합니다.</target>
        </trans-unit>
        <trans-unit id="27ff239b74aca5609252ee2513e06d7cae0bf499" translate="yes" xml:space="preserve">
          <source>This class returns the &lt;code&gt;DSAKeyValue&lt;/code&gt; and &lt;code&gt;RSAKeyValue&lt;/code&gt; elements as objects of type &lt;a href=&quot;../../../../../../java.base/java/security/interfaces/dsapublickey&quot;&gt;&lt;code&gt;DSAPublicKey&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../../../../java.base/java/security/interfaces/rsapublickey&quot;&gt;&lt;code&gt;RSAPublicKey&lt;/code&gt;&lt;/a&gt;, respectively. Note that not all of the fields in the schema are accessible as parameters of these types.</source>
          <target state="translated">이 클래스는 &lt;code&gt;DSAKeyValue&lt;/code&gt; 및 &lt;code&gt;RSAKeyValue&lt;/code&gt; 요소를 각각 &lt;a href=&quot;../../../../../../java.base/java/security/interfaces/dsapublickey&quot;&gt; &lt;code&gt;DSAPublicKey&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../../../../../java.base/java/security/interfaces/rsapublickey&quot;&gt; &lt;code&gt;RSAPublicKey&lt;/code&gt; &lt;/a&gt; 유형의 개체로 반환합니다 . 스키마의 모든 필드가 이러한 유형의 매개 변수로 액세스 할 수있는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="bac2a4287c7cfe1e8ea45599134c43f3846dfcd2" translate="yes" xml:space="preserve">
          <source>This class serves as a factory for other important GSS-API classes and also provides information about the mechanisms that are supported.</source>
          <target state="translated">이 클래스는 다른 중요한 GSS-API 클래스의 팩토리 역할을하며 지원되는 메커니즘에 대한 정보도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8e810f6714ce198cd19b517d25dbb09b6b5a3fa7" translate="yes" xml:space="preserve">
          <source>This class serves as a factory for other important GSS-API classes and also provides information about the mechanisms that are supported. It can create instances of classes implementing the following three GSS-API interfaces: &lt;a href=&quot;gssname&quot;&gt;&lt;code&gt;GSSName&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;gsscredential&quot;&gt;&lt;code&gt;GSSCredential&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;gsscontext&quot;&gt;&lt;code&gt;GSSContext&lt;/code&gt;&lt;/a&gt;. It also has methods to query for the list of available mechanisms and the nametypes that each mechanism supports.</source>
          <target state="translated">이 클래스는 다른 중요한 GSS-API 클래스의 팩토리 역할을하며 지원되는 메커니즘에 대한 정보도 제공합니다. &lt;a href=&quot;gssname&quot;&gt; &lt;code&gt;GSSName&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;gsscredential&quot;&gt; &lt;code&gt;GSSCredential&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;gsscontext&quot;&gt; &lt;code&gt;GSSContext&lt;/code&gt; &lt;/a&gt; 세 가지 GSS-API 인터페이스를 구현하는 클래스 인스턴스를 만들 수 있습니다 . 또한 사용 가능한 메커니즘 목록과 각 메커니즘이 지원하는 이름 유형을 쿼리하는 메서드도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b56c8ce17df32424f6ebcf8e74cce7b8e442ec97" translate="yes" xml:space="preserve">
          <source>This class serves as a parameter block to the &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; method.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; 메서드에 대한 매개 변수 블록 역할을합니다 .</target>
        </trans-unit>
        <trans-unit id="a413b0f033130fcf3cdb03a285fedcaeaaba2bf2" translate="yes" xml:space="preserve">
          <source>This class serves as a parameter block to the &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; method. Serves to bind the &lt;code&gt;Class&lt;/code&gt; that needs redefining together with the new class file bytes.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; 메서드에 대한 매개 변수 블록 역할을합니다 . 새 클래스 파일 바이트와 함께 재정의해야하는 &lt;code&gt;Class&lt;/code&gt; 를 바인딩합니다 .</target>
        </trans-unit>
        <trans-unit id="3d799d73f8e66dff911fc416801c315b07dda90a" translate="yes" xml:space="preserve">
          <source>This class should be treated as a &quot;protected&quot; inner class.</source>
          <target state="translated">이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다.</target>
        </trans-unit>
        <trans-unit id="4d581a498f1e0e7132e8ea341c1f536516f214a3" translate="yes" xml:space="preserve">
          <source>This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of &lt;code&gt;BasicColorChooserUI&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다. &lt;code&gt;BasicColorChooserUI&lt;/code&gt; 의 하위 클래스 내에서만 인스턴스화하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c5309769e9fdad15e51b2eadc6fe31362c484c5" translate="yes" xml:space="preserve">
          <source>This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of &lt;code&gt;BasicListUI&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다. &lt;code&gt;BasicListUI&lt;/code&gt; 의 하위 클래스 내에서만 인스턴스화하십시오 .</target>
        </trans-unit>
        <trans-unit id="e3fdc3db6108b7d24839d339843a395fa170f969" translate="yes" xml:space="preserve">
          <source>This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of &lt;code&gt;BasicOptionPaneUI&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다. &lt;code&gt;BasicOptionPaneUI&lt;/code&gt; 의 하위 클래스 내에서만 인스턴스화하십시오 .</target>
        </trans-unit>
        <trans-unit id="98d6c5cad0d7898867d0f9ce92c27d2ca7833818" translate="yes" xml:space="preserve">
          <source>This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of &lt;code&gt;BasicProgressBarUI&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다. &lt;code&gt;BasicProgressBarUI&lt;/code&gt; 의 하위 클래스 내에서만 인스턴스화하십시오 .</target>
        </trans-unit>
        <trans-unit id="8da0bc710669606975276586c685e67b03c610f8" translate="yes" xml:space="preserve">
          <source>This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of &lt;code&gt;BasicTableHeaderUI&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다. &lt;code&gt;BasicTableHeaderUI&lt;/code&gt; 의 하위 클래스 내에서만 인스턴스화하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f0f30bf0c6c608eedf7df187f2d99230e84533c" translate="yes" xml:space="preserve">
          <source>This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of &lt;code&gt;BasicTableUI&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다. &lt;code&gt;BasicTableUI&lt;/code&gt; 의 하위 클래스 내에서만 인스턴스화하십시오 .</target>
        </trans-unit>
        <trans-unit id="806bc5ff1ef858eefc92aaaa496e0f61319b4b14" translate="yes" xml:space="preserve">
          <source>This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of &lt;code&gt;Foo&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다. &lt;code&gt;Foo&lt;/code&gt; 의 하위 클래스 내에서만 인스턴스화하십시오 .</target>
        </trans-unit>
        <trans-unit id="660fc0211937316ebd0316fa505310986a58efe1" translate="yes" xml:space="preserve">
          <source>This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of &lt;code&gt;MetalComboBoxUI&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다. &lt;code&gt;MetalComboBoxUI&lt;/code&gt; 의 하위 클래스 내에서만 인스턴스화하십시오 .</target>
        </trans-unit>
        <trans-unit id="32e733fae53c528faf729196ba3e1d1370829253" translate="yes" xml:space="preserve">
          <source>This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of &lt;code&gt;MetalComboBoxUI&lt;/code&gt;. This class is now obsolete and doesn't do anything and is only included for backwards API compatibility. Do not call or override.</source>
          <target state="translated">이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다. &lt;code&gt;MetalComboBoxUI&lt;/code&gt; 의 하위 클래스 내에서만 인스턴스화하십시오 . 이 클래스는 이제 더 이상 사용되지 않으며 아무 작업도 수행하지 않으며 하위 API 호환성을 위해서만 포함됩니다. 전화하거나 무시하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="b9be8189047423119db674a097cb48567b78e89d" translate="yes" xml:space="preserve">
          <source>This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of &lt;code&gt;MetalTabbedPaneUI&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다. &lt;code&gt;MetalTabbedPaneUI&lt;/code&gt; 의 하위 클래스 내에서만 인스턴스화하십시오 .</target>
        </trans-unit>
        <trans-unit id="7871ae135f02d0672595294ca7b952e272a73a65" translate="yes" xml:space="preserve">
          <source>This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of BasicSplitPaneUI.</source>
          <target state="translated">이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다. BasicSplitPaneUI의 하위 클래스 내에서만 인스턴스화하십시오.</target>
        </trans-unit>
        <trans-unit id="2401089a6e4eb349297b480e82d4ebb45dd1717e" translate="yes" xml:space="preserve">
          <source>This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of BasicTabbedPaneUI.</source>
          <target state="translated">이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다. BasicTabbedPaneUI의 하위 클래스 내에서만 인스턴스화하십시오.</target>
        </trans-unit>
        <trans-unit id="5eb3d6ea09e87b7691b8e7e4c7bd68074c69f9f1" translate="yes" xml:space="preserve">
          <source>This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of BasicTableUI.</source>
          <target state="translated">이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다. BasicTableUI의 하위 클래스 내에서만 인스턴스화하십시오.</target>
        </trans-unit>
        <trans-unit id="f3420423449844394f3779aecfd5919d47123eff" translate="yes" xml:space="preserve">
          <source>This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of BasicToolBarUI.</source>
          <target state="translated">이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다. BasicToolBarUI의 하위 클래스 내에서만 인스턴스화하십시오.</target>
        </trans-unit>
        <trans-unit id="dbb2ac9bcc292de7a49627f09297504d25ad1355" translate="yes" xml:space="preserve">
          <source>This class specifies a DES key.</source>
          <target state="translated">이 클래스는 DES 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a22639d0bc164ea48c5f6b6d9fbfb81c97680ab6" translate="yes" xml:space="preserve">
          <source>This class specifies a DES-EDE (&quot;triple-DES&quot;) key.</source>
          <target state="translated">이 클래스는 DES-EDE ( &quot;triple-DES&quot;) 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d036f6c85d6ab132366e279be5ea8806f95fa666" translate="yes" xml:space="preserve">
          <source>This class specifies a DSA private key with its associated parameters.</source>
          <target state="translated">이 클래스는 관련 매개 변수와 함께 DSA 개인 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="879837524885c3416822b41b592eca3a48cd5b73" translate="yes" xml:space="preserve">
          <source>This class specifies a DSA public key with its associated parameters.</source>
          <target state="translated">이 클래스는 관련 매개 변수와 함께 DSA 공개 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c990731d51d6932fdac50479de4885a38e0ad644" translate="yes" xml:space="preserve">
          <source>This class specifies a Diffie-Hellman private key with its associated parameters.</source>
          <target state="translated">이 클래스는 관련 매개 변수와 함께 Diffie-Hellman 개인 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="70d87f2742e4212f0245c4f128a7ca482ae2d761" translate="yes" xml:space="preserve">
          <source>This class specifies a Diffie-Hellman public key with its associated parameters.</source>
          <target state="translated">이 클래스는 관련 매개 변수와 함께 Diffie-Hellman 공개 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b07eae8d5a709cfc63b91114d0a65f4be8390196" translate="yes" xml:space="preserve">
          <source>This class specifies a parameter spec for RSA-PSS signature scheme, as defined in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS#1 v2.1&lt;/a&gt; standard.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS # 1 v2.1&lt;/a&gt; 표준에 정의 된대로 RSA-PSS 서명 체계에 대한 매개 변수 스펙을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="232cf1f3ac34546dbf058325e3f413381635bb25" translate="yes" xml:space="preserve">
          <source>This class specifies a parameter spec for RSASSA-PSS signature scheme, as defined in the &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS#1 v2.2&lt;/a&gt; standard.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS # 1 v2.2&lt;/a&gt; 표준에 정의 된대로 RSASSA-PSS 서명 체계에 대한 매개 변수 사양을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="0f30e45b6bd9ba01d96d3b693a26a9eecb21ae5d" translate="yes" xml:space="preserve">
          <source>This class specifies a secret key in a provider-independent fashion.</source>
          <target state="translated">이 클래스는 공급자 독립적 인 방식으로 비밀 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6e6f9f20a4372f1a3113774bba8591bfdc1c187f" translate="yes" xml:space="preserve">
          <source>This class specifies an</source>
          <target state="translated">이 클래스는</target>
        </trans-unit>
        <trans-unit id="6c6253014beb846bd8ed6c1b7883fd692111d610" translate="yes" xml:space="preserve">
          <source>This class specifies an RSA multi-prime private key, as defined in the &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS#1 v2.2&lt;/a&gt; standard using the Chinese Remainder Theorem (CRT) information values for efficiency.</source>
          <target state="translated">이 클래스 는 효율성을 위해 CRT (Chinese Remainder Theorem) 정보 값을 사용하여 &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS # 1 v2.2&lt;/a&gt; 표준에 정의 된대로 RSA 멀티 프라임 개인 키를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="bff225c4f5c50177500c14e3122ea3b191a8e1fa" translate="yes" xml:space="preserve">
          <source>This class specifies an RSA multi-prime private key, as defined in the PKCS#1 v2.1, using the Chinese Remainder Theorem (CRT) information values for efficiency.</source>
          <target state="translated">이 클래스는 효율성을 위해 CRT (Chinese Remainder Theorem) 정보 값을 사용하여 PKCS # 1 v2.1에 정의 된대로 RSA 다중 기본 개인 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7489dc39c2e3c52f006ac98e957389a2c082193f" translate="yes" xml:space="preserve">
          <source>This class specifies an RSA private key, as defined in the &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS#1 v2.2&lt;/a&gt; standard, using the Chinese Remainder Theorem (CRT) information values for efficiency.</source>
          <target state="translated">이 클래스 는 효율성을 위해 CRT (Chinese Remainder Theorem) 정보 값을 사용하여 &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS # 1 v2.2&lt;/a&gt; 표준에 정의 된 RSA 개인 키를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="51a9f89f44a660b954a5a5090fa122412b242aaa" translate="yes" xml:space="preserve">
          <source>This class specifies an RSA private key, as defined in the PKCS#1 standard, using the Chinese Remainder Theorem (CRT) information values for efficiency.</source>
          <target state="translated">이 클래스는 효율성을 위해 CRT (Chinese Remainder Theorem) 정보 값을 사용하여 PKCS # 1 표준에 정의 된대로 RSA 개인 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="25a3fff78310776f3c57ad9dc099010bb1f07c85" translate="yes" xml:space="preserve">
          <source>This class specifies an RSA private key.</source>
          <target state="translated">이 클래스는 RSA 개인 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6f74ff5a45662c8e1077df778118f2b36bd0b4da" translate="yes" xml:space="preserve">
          <source>This class specifies an RSA public key.</source>
          <target state="translated">이 클래스는 RSA 공개 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="48cd8165b94525ac2fe014fc93a8fb6ff8d6e8cd" translate="yes" xml:space="preserve">
          <source>This class specifies an exceptional condition that occurred during the transformation process.</source>
          <target state="translated">이 클래스는 변환 프로세스 중에 발생한 예외 조건을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a6370641b993d45bbd761bc18007f1d385980d50" translate="yes" xml:space="preserve">
          <source>This class specifies the parameters used by a DRBG (Deterministic Random Bit Generator).</source>
          <target state="translated">이 클래스는 DRBG (결정적 임의 비트 생성기)에서 사용하는 매개 변수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="286b9eb980de8875dddd8f3a1719bf32b80d7764" translate="yes" xml:space="preserve">
          <source>This class specifies the parameters used with the &lt;a href=&quot;http://tools.ietf.org/html/rfc2040&quot;&gt;&lt;i&gt;RC5&lt;/i&gt;&lt;/a&gt; algorithm.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://tools.ietf.org/html/rfc2040&quot;&gt;&lt;i&gt;RC5&lt;/i&gt;&lt;/a&gt; 알고리즘 과 함께 사용되는 매개 변수를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="df546476dac0952bae6f6791d4e51bef99a01aed" translate="yes" xml:space="preserve">
          <source>This class specifies the parameters used with the &lt;a href=&quot;http://www.ietf.org/rfc/rfc2040.txt&quot;&gt;&lt;i&gt;RC5&lt;/i&gt;&lt;/a&gt; algorithm.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2040.txt&quot;&gt;&lt;i&gt;RC5&lt;/i&gt;&lt;/a&gt; 알고리즘에 사용되는 매개 변수를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="bd74cc66a6a970a8693e41e839c4e4f3662dfeb9" translate="yes" xml:space="preserve">
          <source>This class specifies the parameters used with the &lt;a href=&quot;http://www.ietf.org/rfc/rfc2268.txt&quot;&gt;&lt;i&gt;RC2&lt;/i&gt;&lt;/a&gt; algorithm.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2268.txt&quot;&gt;&lt;i&gt;RC2&lt;/i&gt;&lt;/a&gt; 알고리즘 과 함께 사용되는 매개 변수를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="409c51a6b2e8348b41798e99753bbc34fecf691c" translate="yes" xml:space="preserve">
          <source>This class specifies the parameters used with the &lt;a href=&quot;https://tools.ietf.org/html/rfc7539&quot;&gt;&lt;i&gt;ChaCha20&lt;/i&gt;&lt;/a&gt; algorithm.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;https://tools.ietf.org/html/rfc7539&quot;&gt;&lt;i&gt;ChaCha20&lt;/i&gt;&lt;/a&gt; 알고리즘 과 함께 사용되는 매개 변수를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="d3de5faa338aac308b55709ac63b2509d7983990" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used for generating Diffie-Hellman (system) parameters for use in Diffie-Hellman key agreement.</source>
          <target state="translated">이 클래스는 Diffie-Hellman 키 계약에 사용할 Diffie-Hellman (시스템) 매개 변수를 생성하는 데 사용되는 매개 변수 세트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="fc4c54ffe29216598c50a69d7344e92001db9de7" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used for generating Diffie-Hellman (system) parameters for use in Diffie-Hellman key agreement. This is typically done by a central authority.</source>
          <target state="translated">이 클래스는 Diffie-Hellman 키 계약에 사용할 Diffie-Hellman (시스템) 매개 변수를 생성하는 데 사용되는 매개 변수 세트를 지정합니다. 이것은 일반적으로 중앙 기관에 의해 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="ad2627810d2178f25019cc742f2eacb5d89300e3" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used to generate an RSA key pair.</source>
          <target state="translated">이 클래스는 RSA 키 쌍을 생성하는 데 사용되는 매개 변수 세트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="59688baa89e160b7da4dc74ad676b46fc232891e" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with OAEP Padding, as defined in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS #1&lt;/a&gt; standard.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS # 1&lt;/a&gt; 표준에 정의 된대로 OAEP 패딩과 함께 사용되는 매개 변수 세트를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="23c4dee6bc9d5e341557cc99be66e25944c63cb4" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with OAEP Padding, as defined in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS #1&lt;/a&gt; standard. Its ASN.1 definition in PKCS#1 standard is described below:</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS # 1&lt;/a&gt; 표준에 정의 된대로 OAEP 패딩과 함께 사용되는 매개 변수 세트를 지정합니다 . PKCS # 1 표준의 ASN.1 정의는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9a69ce6721a136cbe723946242897f028d9fe3f0" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with OAEP Padding, as defined in the &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS#1 v2.2&lt;/a&gt; standard.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS # 1 v2.2&lt;/a&gt; 표준에 정의 된대로 OAEP 패딩과 함께 사용되는 매개 변수 세트를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="40618a00f693b7109616f2e43033cc92524e5e72" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with OAEP Padding, as defined in the &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS#1 v2.2&lt;/a&gt; standard. Its ASN.1 definition in PKCS#1 standard is described below:</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS # 1 v2.2&lt;/a&gt; 표준에 정의 된대로 OAEP 패딩과 함께 사용되는 매개 변수 세트를 지정합니다 . PKCS # 1 표준의 ASN.1 정의는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3378f0ed1db83cd69750881faed95856190e5be3" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with mask generation function MGF1 in OAEP Padding and RSA-PSS signature scheme, as defined in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS #1 v2.1&lt;/a&gt; standard.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS # 1 v2.1&lt;/a&gt; 표준에 정의 된대로 OAEP 패딩 및 RSA-PSS 서명 체계에서 마스크 생성 기능 MGF1과 함께 사용되는 매개 변수 세트를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="a4b49c1af572eff6e4189da105073f379fec1c13" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with mask generation function MGF1 in OAEP Padding and RSASSA-PSS signature scheme, as defined in the &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS#1 v2.2&lt;/a&gt; standard.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS # 1 v2.2&lt;/a&gt; 표준에 정의 된대로 OAEP 패딩 및 RSASSA-PSS 서명 체계에서 마스크 생성 기능 MGF1과 함께 사용되는 매개 변수 집합을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="cb98cf2f5a03d8cb731645b73a46758f7c6343cf" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with password-based encryption (PBE), as defined in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc2898.txt&quot;&gt;PKCS #5&lt;/a&gt; standard.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2898.txt&quot;&gt;PKCS # 5&lt;/a&gt; 표준에 정의 된대로 비밀번호 기반 암호화 (PBE)와 함께 사용되는 매개 변수 세트를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="f779550dfd201e58e835eac99e6346a3b80e876a" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with the DSA algorithm.</source>
          <target state="translated">이 클래스는 DSA 알고리즘과 함께 사용되는 매개 변수 세트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="780f1d67c49fbd57bd69ce916873b1f0f2788244" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with the Diffie-Hellman algorithm, as specified in PKCS #3:</source>
          <target state="translated">이 클래스는 PKCS # 3에 지정된 Diffie-Hellman 알고리즘과 함께 사용되는 매개 변수 세트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="fc73b50a65060e1d01978b2c1c1a5dbc8c9cce7e" translate="yes" xml:space="preserve">
          <source>This class specifies the source for encoding input P in OAEP Padding, as defined in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS #1&lt;/a&gt; standard.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS # 1&lt;/a&gt; 표준에 정의 된대로 OAEP 패딩에서 입력 P를 인코딩하기위한 소스를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="866d996161c2f2db311fe6e93b888552f4ab07c8" translate="yes" xml:space="preserve">
          <source>This class specifies the source for encoding input P in OAEP Padding, as defined in the &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS#1 v2.2&lt;/a&gt; standard.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS # 1 v2.2&lt;/a&gt; 표준에 정의 된대로 OAEP 패딩에서 입력 P를 인코딩하기위한 소스를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="38eac723fd377ef096b27f5047f49d7a2de02b87" translate="yes" xml:space="preserve">
          <source>This class supports an optional fairness policy for ordering waiting producer and consumer threads. By default, this ordering is not guaranteed. However, a queue constructed with fairness set to &lt;code&gt;true&lt;/code&gt; grants threads access in FIFO order.</source>
          <target state="translated">이 클래스는 대기중인 생산자 및 소비자 스레드 주문에 대한 선택적 공정성 정책을 지원합니다. 기본적으로이 순서는 보장되지 않습니다. 그러나 공정성이 &lt;code&gt;true&lt;/code&gt; 로 설정된 대기열은 스레드 액세스를 FIFO 순서로 부여합니다.</target>
        </trans-unit>
        <trans-unit id="f201a98083a72ebd3d70c02e66219c8be455bc0b" translate="yes" xml:space="preserve">
          <source>This class supports an optional fairness policy for ordering waiting producer and consumer threads. By default, this ordering is not guaranteed. However, a queue constructed with fairness set to &lt;code&gt;true&lt;/code&gt; grants threads access in FIFO order. Fairness generally decreases throughput but reduces variability and avoids starvation.</source>
          <target state="translated">이 클래스는 대기중인 생산자 및 소비자 스레드 주문에 대한 선택적 공정성 정책을 지원합니다. 기본적으로이 순서는 보장되지 않습니다. 그러나 공정성이 &lt;code&gt;true&lt;/code&gt; 로 설정된 대기열은 스레드 액세스를 FIFO 순서로 부여합니다. 공정성은 일반적으로 처리량을 줄이지 만 변동성을 줄이며 기아를 피합니다.</target>
        </trans-unit>
        <trans-unit id="7d77f2fd7e96e71b6c5ce5e3252933d9a2d10d9e" translate="yes" xml:space="preserve">
          <source>This class supports both the short and extended forms of length encoding for Ne and Nc. However, note that not all terminals and Smart Cards are capable of accepting APDUs that use the extended form.</source>
          <target state="translated">이 클래스는 Ne 및 Nc에 대한 짧은 및 확장 형식의 길이 인코딩을 모두 지원합니다. 그러나 모든 터미널과 스마트 카드가 확장 형식을 사용하는 APDU를 수용 할 수있는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="7a4fa431e4e01c9fba026d067052b3ae96e02766" translate="yes" xml:space="preserve">
          <source>This class supports either or both a default &lt;em&gt;exclusive&lt;/em&gt; mode and a &lt;em&gt;shared&lt;/em&gt; mode. When acquired in exclusive mode, attempted acquires by other threads cannot succeed. Shared mode acquires by multiple threads may (but need not) succeed. This class does not &quot;understand&quot; these differences except in the mechanical sense that when a shared mode acquire succeeds, the next waiting thread (if one exists) must also determine whether it can acquire as well. Threads waiting in the different modes share the same FIFO queue. Usually, implementation subclasses support only one of these modes, but both can come into play for example in a &lt;a href=&quot;readwritelock&quot;&gt;&lt;code&gt;ReadWriteLock&lt;/code&gt;&lt;/a&gt;. Subclasses that support only exclusive or only shared modes need not define the methods supporting the unused mode.</source>
          <target state="translated">이 클래스는 기본 &lt;em&gt;독점&lt;/em&gt; 모드와 &lt;em&gt;공유&lt;/em&gt; 모드 중 하나 또는 둘 다를 지원 합니다. 단독 모드에서 획득 한 경우 다른 스레드에 의한 획득 시도는 성공할 수 없습니다. 여러 스레드가 공유 모드를 획득하면 성공할 수도 있지만 반드시 그럴 필요는 없습니다. 이 클래스는 공유 모드 획득이 성공할 때 다음 대기 스레드 (있는 경우)도 획득 할 수 있는지 여부를 결정해야한다는 기계적 의미를 제외하고는 이러한 차이점을 &quot;인식&quot;하지 않습니다. 다른 모드에서 대기중인 스레드는 동일한 FIFO 대기열을 공유합니다. 일반적으로 구현 서브 클래스는 이러한 모드 중 하나만 지원하지만 둘 다 예를 들어 &lt;a href=&quot;readwritelock&quot;&gt; &lt;code&gt;ReadWriteLock&lt;/code&gt; &lt;/a&gt; 에서 작동 할 수 있습니다 . 단독 또는 공유 모드 만 지원하는 서브 클래스는 사용되지 않는 모드를 지원하는 메소드를 정의 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="529c97d775197ce36fe32bbded9a4fc074a37a2a" translate="yes" xml:space="preserve">
          <source>This class supports methods to determine whether locks are held or contended. These methods are designed for monitoring system state, not for synchronization control.</source>
          <target state="translated">이 클래스는 잠금 보유 여부를 판별하는 메소드를 지원합니다. 이러한 방법은 동기화 제어가 아닌 시스템 상태를 모니터링하기 위해 고안되었습니다.</target>
        </trans-unit>
        <trans-unit id="d06a0041c0926db2760cb7dc11b46cd48ebdbb61" translate="yes" xml:space="preserve">
          <source>This class supports two different programming interfaces to represent Unicode ranges for script-specific digits: bit mask-based ones, such as &lt;a href=&quot;#ARABIC&quot;&gt;&lt;code&gt;NumericShaper.ARABIC&lt;/code&gt;&lt;/a&gt;, and enum-based ones, such as &lt;a href=&quot;numericshaper.range#ARABIC&quot;&gt;&lt;code&gt;NumericShaper.Range.ARABIC&lt;/code&gt;&lt;/a&gt;. Multiple ranges can be specified by ORing bit mask-based constants, such as:</source>
          <target state="translated">이 클래스는 스크립트 별 숫자에 대한 유니 코드 범위를 나타내는 두 가지 프로그래밍 인터페이스를 지원합니다. 비트 마스크 기반 항목 (예 : &lt;a href=&quot;#ARABIC&quot;&gt; &lt;code&gt;NumericShaper.ARABIC&lt;/code&gt; &lt;/a&gt; ) 및 열거 형 기반 항목 (예 : &lt;a href=&quot;numericshaper.range#ARABIC&quot;&gt; &lt;code&gt;NumericShaper.Range.ARABIC&lt;/code&gt; )&lt;/a&gt; . 다음과 같은 ORing 비트 마스크 기반 상수를 사용하여 여러 범위를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66a8bbbebe358e0fbe3d930bb8c2f05e8919820e" translate="yes" xml:space="preserve">
          <source>This class tracks the validity of the key and implements cancellation.</source>
          <target state="translated">이 클래스는 키의 유효성을 추적하고 취소를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="eed8327e498f19c22d8a6cfb35d6351c5381c180" translate="yes" xml:space="preserve">
          <source>This class uses 32-bit integers to store its location and dimensions. Frequently operations may produce a result that exceeds the range of a 32-bit integer. The methods will calculate their results in a way that avoids any 32-bit overflow for intermediate results and then choose the best representation to store the final results back into the 32-bit fields which hold the location and dimensions. The location of the result will be stored into the &lt;a href=&quot;#x&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#y&quot;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/a&gt; fields by clipping the true result to the nearest 32-bit value. The values stored into the &lt;a href=&quot;#width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#height&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/a&gt; dimension fields will be chosen as the 32-bit values that encompass the largest part of the true result as possible. Generally this means that the dimension will be clipped independently to the range of 32-bit integers except that if the location had to be moved to store it into its pair of 32-bit fields then the dimensions will be adjusted relative to the &quot;best representation&quot; of the location. If the true result had a negative dimension and was therefore non-existent along one or both axes, the stored dimensions will be negative numbers in those axes. If the true result had a location that could be represented within the range of 32-bit integers, but zero dimension along one or both axes, then the stored dimensions will be zero in those axes.</source>
          <target state="translated">이 클래스는 32 비트 정수를 사용하여 위치와 차원을 저장합니다. 자주 작업하면 32 비트 정수 범위를 초과하는 결과가 생성 될 수 있습니다. 이 메서드는 중간 결과에 대한 32 비트 오버플로를 방지하는 방식으로 결과를 계산 한 다음 위치와 치수를 포함하는 32 비트 필드에 최종 결과를 다시 저장하는 최상의 표현을 선택합니다. 결과의 위치는 실제 결과를 가장 가까운 32 비트 값으로 클리핑하여 &lt;a href=&quot;#x&quot;&gt; &lt;code&gt;x&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#y&quot;&gt; &lt;code&gt;y&lt;/code&gt; &lt;/a&gt; 필드에 저장됩니다 . &lt;a href=&quot;#width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;#height&quot;&gt; &lt;code&gt;height&lt;/code&gt; &lt;/a&gt; 저장된 값차원 필드는 가능한 한 실제 결과의 가장 큰 부분을 포함하는 32 비트 값으로 선택됩니다. 일반적으로 이것은 치수가 32 비트 정수 범위에 독립적으로 잘림을 의미합니다. 단, 위치를 32 비트 필드 쌍에 저장하기 위해 이동해야하는 경우 치수는 &quot;최상의 표현&quot;에 상대적으로 조정됩니다. &quot;위치. 실제 결과에 음수 차원이있어서 하나 또는 두 축을 따라 존재하지 않는 경우 저장된 차원은 해당 축에서 음수가됩니다. 실제 결과에 32 비트 정수 범위 내에서 표시 할 수있는 위치가 있지만 하나 또는 두 축을 따라 차원이 0 인 경우 저장된 차원은 해당 축에서 0이됩니다.</target>
        </trans-unit>
        <trans-unit id="623f0d21c34dbd1332bc7e6494861896918e8e80" translate="yes" xml:space="preserve">
          <source>This class uses &lt;code&gt;HostnameVerifier&lt;/code&gt; and &lt;code&gt;SSLSocketFactory&lt;/code&gt;. There are default implementations defined for both classes. However, the implementations can be replaced on a per-class (static) or per-instance basis. All new &lt;code&gt;HttpsURLConnection&lt;/code&gt;s instances will be assigned the &quot;default&quot; static values at instance creation, but they can be overriden by calling the appropriate per-instance set method(s) before &lt;code&gt;connect&lt;/code&gt;ing.</source>
          <target state="translated">이 클래스는 &lt;code&gt;HostnameVerifier&lt;/code&gt; 및 &lt;code&gt;SSLSocketFactory&lt;/code&gt; 를 사용합니다 . 두 클래스 모두에 대해 기본 구현이 정의되어 있습니다. 그러나 구현은 클래스 (정적) 또는 인스턴스별로 교체 할 수 있습니다. 모든 새로운 &lt;code&gt;HttpsURLConnection&lt;/code&gt; 의 인스턴스에는 인스턴스 생성시 &quot;기본&quot;정적 값이 할당되지만 &lt;code&gt;connect&lt;/code&gt; 하기 전에 적절한 인스턴스 별 설정 메소드를 호출하여 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e344db844026e2b475808bc6ac1c0833cbf91e6b" translate="yes" xml:space="preserve">
          <source>This class uses a provider-based architecture. To create a &lt;code&gt;CertPathBuilder&lt;/code&gt;, call one of the static &lt;code&gt;getInstance&lt;/code&gt; methods, passing in the algorithm name of the &lt;code&gt;CertPathBuilder&lt;/code&gt; desired and optionally the name of the provider desired.</source>
          <target state="translated">이 클래스는 공급자 기반 아키텍처를 사용합니다. &lt;code&gt;CertPathBuilder&lt;/code&gt; 를 작성하려면 , 원하는 &lt;code&gt;CertPathBuilder&lt;/code&gt; 의 알고리즘 명 및 필요에 따라, 원하는 프로 바이더의 이름을 건네 주는 정적 &lt;code&gt;getInstance&lt;/code&gt; 메소드의 1 개를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="e0e1433a14c30e48be78e8a26ffc082e6109d09a" translate="yes" xml:space="preserve">
          <source>This class uses a provider-based architecture. To create a &lt;code&gt;CertPathValidator&lt;/code&gt;, call one of the static &lt;code&gt;getInstance&lt;/code&gt; methods, passing in the algorithm name of the &lt;code&gt;CertPathValidator&lt;/code&gt; desired and optionally the name of the provider desired.</source>
          <target state="translated">이 클래스는 공급자 기반 아키텍처를 사용합니다. &lt;code&gt;CertPathValidator&lt;/code&gt; 를 작성하려면 , 원하는 &lt;code&gt;CertPathValidator&lt;/code&gt; 의 알고리즘 명, 및 필요에 따라 원하는 프로 바이더의 이름을 건네 &lt;code&gt;getInstance&lt;/code&gt; , 정적 getInstance 메소드의 1 개를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="4720c3962d957b31beca254e0087dea38d660efd" translate="yes" xml:space="preserve">
          <source>This class uses a provider-based architecture. To create a &lt;code&gt;CertStore&lt;/code&gt;, call one of the static &lt;code&gt;getInstance&lt;/code&gt; methods, passing in the type of &lt;code&gt;CertStore&lt;/code&gt; desired, any applicable initialization parameters and optionally the name of the provider desired.</source>
          <target state="translated">이 클래스는 공급자 기반 아키텍처를 사용합니다. &lt;code&gt;CertStore&lt;/code&gt; 를 작성하려면 , 원하는 &lt;code&gt;CertStore&lt;/code&gt; 의 형태 , 적용 가능한 초기화 파라미터, 및 필요에 따라 원하는 프로 바이더의 이름을 건네 주는 static &lt;code&gt;getInstance&lt;/code&gt; 메소드의 1 개를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="0c44c1692580fc189753df6b855550cfae9c3822" translate="yes" xml:space="preserve">
          <source>This class uses an affine transform to perform a linear mapping from 2D coordinates in the source image or &lt;code&gt;Raster&lt;/code&gt; to 2D coordinates in the destination image or &lt;code&gt;Raster&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 아핀 변환을 사용하여 소스 이미지 또는 &lt;code&gt;Raster&lt;/code&gt; 의 2D 좌표에서 대상 이미지 또는 &lt;code&gt;Raster&lt;/code&gt; 의 2D 좌표로 선형 매핑을 수행합니다 .</target>
        </trans-unit>
        <trans-unit id="f418c4f70b076d65a35424671fc1ae74e5651ccc" translate="yes" xml:space="preserve">
          <source>This class uses an affine transform to perform a linear mapping from 2D coordinates in the source image or &lt;code&gt;Raster&lt;/code&gt; to 2D coordinates in the destination image or &lt;code&gt;Raster&lt;/code&gt;. The type of interpolation that is used is specified through a constructor, either by a &lt;code&gt;RenderingHints&lt;/code&gt; object or by one of the integer interpolation types defined in this class.</source>
          <target state="translated">이 클래스는 아핀 변환을 사용하여 소스 이미지 또는 &lt;code&gt;Raster&lt;/code&gt; 의 2D 좌표에서 대상 이미지 또는 &lt;code&gt;Raster&lt;/code&gt; 의 2D 좌표로 선형 매핑을 수행합니다 . 사용되는 보간 유형은 &lt;code&gt;RenderingHints&lt;/code&gt; 객체 또는이 클래스에 정의 된 정수 보간 유형 중 하나에 의해 생성자를 통해 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="ad6e57dedc2aac3b80e72a4b6a1f5dc6748a6e38" translate="yes" xml:space="preserve">
          <source>This class was introduced as a part of an early proposal during the JSR-206 standardization process. The proposal was eventually abandoned but this class accidentally remained in the source tree, and made its way into the final version.</source>
          <target state="translated">이 클래스는 JSR-206 표준화 과정에서 초기 제안의 일부로 도입되었습니다. 제안은 결국 포기되었지만이 클래스는 실수로 소스 트리에 남아 최종 버전으로 들어갔습니다.</target>
        </trans-unit>
        <trans-unit id="d548829d2812f59842805676fc02c819126cf172" translate="yes" xml:space="preserve">
          <source>This class works with the deprecated &lt;a href=&quot;../parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">이 클래스는 더 이상 사용되지 않는 &lt;a href=&quot;../parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt; 인터페이스 에서 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="7d6fd139cdb4e65373842378845d31edce028e46" translate="yes" xml:space="preserve">
          <source>This class works with the deprecated &lt;a href=&quot;documenthandler&quot;&gt;&lt;code&gt;DocumentHandler&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">이 클래스는 더 이상 사용되지 않는 &lt;a href=&quot;documenthandler&quot;&gt; &lt;code&gt;DocumentHandler&lt;/code&gt; &lt;/a&gt; 인터페이스 와 함께 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="6f7452ea4534a0b60f7aa0fbffe8d3dad7a3789f" translate="yes" xml:space="preserve">
          <source>This class works with the deprecated &lt;a href=&quot;documenthandler&quot;&gt;&lt;code&gt;DocumentHandler&lt;/code&gt;&lt;/a&gt; interface. It has been replaced by the SAX2 &lt;a href=&quot;helpers/defaulthandler&quot;&gt;&lt;code&gt;DefaultHandler&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">이 클래스는 더 이상 사용되지 않는 &lt;a href=&quot;documenthandler&quot;&gt; &lt;code&gt;DocumentHandler&lt;/code&gt; &lt;/a&gt; 인터페이스 와 함께 작동합니다 . SAX2 &lt;a href=&quot;helpers/defaulthandler&quot;&gt; &lt;code&gt;DefaultHandler&lt;/code&gt; &lt;/a&gt; 클래스 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="90ac407466d6e529cd2f2ec0b9dd590499e09fac" translate="yes" xml:space="preserve">
          <source>This class wraps a SAX1 &lt;a href=&quot;../parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt; and makes it act as a SAX2 &lt;a href=&quot;../xmlreader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt;, with feature, property, and Namespace support. Note that it is not possible to report &lt;a href=&quot;../contenthandler#skippedEntity(java.lang.String)&quot;&gt;&lt;code&gt;skippedEntity&lt;/code&gt;&lt;/a&gt; events, since SAX1 does not make that information available.</source>
          <target state="translated">이 클래스는 SAX1 &lt;a href=&quot;../parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt; 래핑하고 기능, 속성 및 네임 스페이스 지원 을 통해 SAX2 &lt;a href=&quot;../xmlreader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt; 역할을 하도록합니다. SAX1은 해당 정보를 사용할 수 없기 때문에 &lt;a href=&quot;../contenthandler#skippedEntity(java.lang.String)&quot;&gt; &lt;code&gt;skippedEntity&lt;/code&gt; &lt;/a&gt; 이벤트 를보고 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="04caa2a6126d69aad9a1eb36fa5382a033a74733" translate="yes" xml:space="preserve">
          <source>This class wraps a SAX2 &lt;a href=&quot;../xmlreader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; and makes it act as a SAX1 &lt;a href=&quot;../parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt;. The XMLReader must support a true value for the http://xml.org/sax/features/namespace-prefixes property or parsing will fail with a &lt;a href=&quot;../saxexception&quot;&gt;&lt;code&gt;SAXException&lt;/code&gt;&lt;/a&gt;; if the XMLReader supports a false value for the http://xml.org/sax/features/namespaces property, that will also be used to improve efficiency.</source>
          <target state="translated">이 클래스는 SAX2 &lt;a href=&quot;../xmlreader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; 를&lt;/a&gt; 래핑 하고 SAX1 &lt;a href=&quot;../parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt; 역할을합니다 . XMLReader는 http://xml.org/sax/features/namespace-prefixes 속성에 대해 true 값을 지원해야합니다. 그렇지 않으면 &lt;a href=&quot;../saxexception&quot;&gt; &lt;code&gt;SAXException&lt;/code&gt; &lt;/a&gt; 과 함께 구문 분석이 실패합니다 . XMLReader가 http://xml.org/sax/features/namespaces 속성에 대해 false 값을 지원하는 경우 효율성을 향상시키는데도 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a3eaed7e91e6ae532cb99afa1551384087af985f" translate="yes" xml:space="preserve">
          <source>This class, State, is intended to be used for such situations. Simply implement the abstract #isInState method. It returns true if the given JComponent is &quot;in this state&quot;, false otherwise. This method will be called &lt;em&gt;many&lt;/em&gt; times in &lt;em&gt;performance sensitive loops&lt;/em&gt;. It must execute very quickly.</source>
          <target state="translated">이 클래스 State는 이러한 상황에 사용하기위한 것입니다. 추상적 인 #isInState 메서드를 구현하기 만하면됩니다. 주어진 JComponent가 &quot;이 상태&quot;이면 true를 반환하고 그렇지 않으면 false를 반환합니다. 이 메서드는 &lt;em&gt;성능에 민감한 루프&lt;/em&gt; 에서 &lt;em&gt;여러&lt;/em&gt; 번 호출 &lt;em&gt;됩니다&lt;/em&gt; . 매우 빠르게 실행되어야합니다.</target>
        </trans-unit>
        <trans-unit id="c5eac8fea6f9dc1c1e7d46c8c64e6386c013c4cf" translate="yes" xml:space="preserve">
          <source>This clock is based on the best available system clock. This may use &lt;a href=&quot;../lang/system#currentTimeMillis()&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;, or a higher resolution clock if one is available.</source>
          <target state="translated">이 시계는 사용 가능한 최상의 시스템 시계를 기반으로합니다. 이것은 &lt;a href=&quot;../lang/system#currentTimeMillis()&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt; 또는 사용 가능한 경우 더 높은 해상도 클록을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="718790074ad554ff47894786ac58cc51cec8e9fc" translate="yes" xml:space="preserve">
          <source>This clock is based on the best available system clock. This may use &lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;, or a higher resolution clock if one is available.</source>
          <target state="translated">이 시계는 사용 가능한 최상의 시스템 시계를 기준으로합니다. 이것은 &lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt; 또는 더 높은 해상도의 시계를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14e5b87996ff9a8dd71298e7805275d126fb13ec" translate="yes" xml:space="preserve">
          <source>This clock simply returns the specified instant. As such, it is not a clock in the conventional sense. The main use case for this is in testing, where the fixed clock ensures tests are not dependent on the current clock.</source>
          <target state="translated">이 시계는 단순히 지정된 순간을 반환합니다. 이와 같이, 그것은 종래의 의미에서 시계가 아니다. 이를위한 주요 사용 사례는 테스트에서 고정 클럭이 테스트가 현재 클럭에 의존하지 않는지 확인하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b12642eb976e008b79f482f792dab1e669f4dfe8" translate="yes" xml:space="preserve">
          <source>This clock will always have the nano-of-second and second-of-minute fields set to zero. This ensures that the visible time ticks in whole minutes. The underlying clock is the best available system clock, equivalent to using &lt;a href=&quot;#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 시계는 항상 나노초 및 분초 필드를 0으로 설정합니다. 이렇게하면 보이는 시간이 전체 분 단위로 표시됩니다. 기본 클록은 &lt;a href=&quot;#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system(ZoneId)&lt;/code&gt; &lt;/a&gt; 를 사용하는 것과 동일한 사용 가능한 최상의 시스템 클록 입니다.</target>
        </trans-unit>
        <trans-unit id="e6fe9db4a5da99e2df3c273110d5647ff1e4def9" translate="yes" xml:space="preserve">
          <source>This clock will always have the nano-of-second and second-of-minute fields set to zero. This ensures that the visible time ticks in whole minutes. The underlying clock is the best available system clock, equivalent to using &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 시계는 항상 나노초 및 초 필드를 0으로 설정합니다. 이렇게하면 보이는 시간이 전체 분 단위로 표시됩니다. 기본 클럭은 &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system(ZoneId)&lt;/code&gt; &lt;/a&gt; 사용과 동등한 최상의 시스템 클럭 입니다.</target>
        </trans-unit>
        <trans-unit id="a1a51dc82b406f54742fd8f2919bb34b9926b8e8" translate="yes" xml:space="preserve">
          <source>This clock will always have the nano-of-second field set to zero. This ensures that the visible time ticks in whole seconds. The underlying clock is the best available system clock, equivalent to using &lt;a href=&quot;#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 시계는 항상 나노초 필드를 0으로 설정합니다. 이렇게하면 보이는 시간이 전체 초 단위로 표시됩니다. 기본 클록은 &lt;a href=&quot;#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system(ZoneId)&lt;/code&gt; &lt;/a&gt; 를 사용하는 것과 동일한 사용 가능한 최상의 시스템 클록 입니다.</target>
        </trans-unit>
        <trans-unit id="60ec564e9e295871b9d49787cc5fdafc2077ed3b" translate="yes" xml:space="preserve">
          <source>This clock will always have the nano-of-second field set to zero. This ensures that the visible time ticks in whole seconds. The underlying clock is the best available system clock, equivalent to using &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 클럭은 항상 나노초 필드가 0으로 설정됩니다. 이렇게하면 보이는 시간이 초 단위로 표시됩니다. 기본 클럭은 &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system(ZoneId)&lt;/code&gt; &lt;/a&gt; 사용과 동등한 최상의 시스템 클럭 입니다.</target>
        </trans-unit>
        <trans-unit id="dcce15b56435c97a2eb4736ad8adf887259b6931" translate="yes" xml:space="preserve">
          <source>This clock will always have the nano-of-second field truncated to milliseconds. This ensures that the visible time ticks in whole milliseconds. The underlying clock is the best available system clock, equivalent to using &lt;a href=&quot;#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 시계는 항상 나노초 필드를 밀리 초로 잘립니다. 이렇게하면 표시되는 시간이 전체 밀리 초 단위로 표시됩니다. 기본 클록은 &lt;a href=&quot;#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system(ZoneId)&lt;/code&gt; &lt;/a&gt; 를 사용하는 것과 동일한 사용 가능한 최상의 시스템 클록 입니다.</target>
        </trans-unit>
        <trans-unit id="d510a435ab22ef2589d57442fef73bc4a406f64c" translate="yes" xml:space="preserve">
          <source>This clock will only tick as per the specified duration. Thus, if the duration is half a second, the clock will return instants truncated to the half second.</source>
          <target state="translated">이 시계는 지정된 지속 시간에 따라 표시됩니다. 따라서 지속 시간이 0.5 초인 경우 시계는 0.5 초로 잘린 순간을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f851b56e47e0dfdc6ddeff5ef11cf138236dbc54" translate="yes" xml:space="preserve">
          <source>This clock wraps another clock, returning instants that are later by the specified duration. If the duration is negative, the instants will be earlier than the current date and time. The main use case for this is to simulate running in the future or in the past.</source>
          <target state="translated">이 시계는 다른 시계를 감싸서 나중에 지정된 지속 시간이 지난 순간을 반환합니다. 지속 시간이 음수이면 인스턴트가 현재 날짜 및 시간보다 빠릅니다. 이를위한 주요 사용 사례는 미래 또는 과거의 달리기를 시뮬레이션하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e4c2105be87fcd6e3cb411266c44ca59c03e025d" translate="yes" xml:space="preserve">
          <source>This clock, rather than &lt;a href=&quot;#systemDefaultZone()&quot;&gt;&lt;code&gt;systemDefaultZone()&lt;/code&gt;&lt;/a&gt;, should be used when you need the current instant without the date or time.</source>
          <target state="translated">&lt;a href=&quot;#systemDefaultZone()&quot;&gt; &lt;code&gt;systemDefaultZone()&lt;/code&gt; &lt;/a&gt; 아닌이 시계 는 날짜 나 시간없이 현재 순간이 필요할 때 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="28ec5732d8d89a816659b79fc702a8decfa24c8a" translate="yes" xml:space="preserve">
          <source>This clock, rather than &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;systemDefaultZone()&lt;/code&gt;&lt;/a&gt;, should be used when you need the current instant without the date or time.</source>
          <target state="translated">날짜 또는 시간이없는 현재 순간이 필요한 경우 &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;systemDefaultZone()&lt;/code&gt; &lt;/a&gt; 대신이 시계를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="41c5cbe50ec9277c16fa152ebfeb28a2610f1af4" translate="yes" xml:space="preserve">
          <source>This code unnecessarily uses side-effects. If executed in parallel, the non-thread-safety of &lt;code&gt;ArrayList&lt;/code&gt; would cause incorrect results, and adding needed synchronization would cause contention, undermining the benefit of parallelism. Furthermore, using side-effects here is completely unnecessary; the &lt;code&gt;forEach()&lt;/code&gt; can simply be replaced with a reduction operation that is safer, more efficient, and more amenable to parallelization:</source>
          <target state="translated">이 코드는 불필요하게 부작용을 사용합니다. 병렬로 실행될 경우 &lt;code&gt;ArrayList&lt;/code&gt; 의 스레드 안전성이 아닌 경우 잘못된 결과가 발생하고 필요한 동기화를 추가하면 경합이 발생하여 병렬 처리의 이점이 손상됩니다. 또한 여기에서 부작용을 사용하는 것은 완전히 불필요합니다. &lt;code&gt;forEach()&lt;/code&gt; 단순히 병렬로 더욱 안전하고 효율적으로, 그리고 더 많은 의무가 감소 동작으로 대체 할 수있다 :</target>
        </trans-unit>
        <trans-unit id="408faafd832c606e2a7111c4757bc79e2185864e" translate="yes" xml:space="preserve">
          <source>This code will create a &lt;code&gt;LinearGradientPaint&lt;/code&gt; which interpolates between red and white for the first 20% of the gradient and between white and blue for the remaining 80%.</source>
          <target state="translated">이 코드는 그라디언트의 처음 20 %는 빨간색과 흰색 사이, 나머지 80 %는 흰색과 파란색 사이를 보간 하는 &lt;code&gt;LinearGradientPaint&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="d070651e4216ea21ecf92155a9b4d8c67b8e6c17" translate="yes" xml:space="preserve">
          <source>This code will have the side effect of altering the original &lt;code&gt;ParameterBlock&lt;/code&gt;, since the getSources operation returned a reference to its source Vector. Both pb and pb1 share their source Vector, and a change in either is visible to both.</source>
          <target state="translated">이 코드는 getSources 작업이 소스 Vector에 대한 참조를 반환했기 때문에 원래 &lt;code&gt;ParameterBlock&lt;/code&gt; 을 변경하는 부작용이 있습니다 . pb와 pb1은 모두 소스 벡터를 공유하며 둘 중 하나의 변경 사항을 모두 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49a12cf51fed4f6ba8834702bc593528b3d417b5" translate="yes" xml:space="preserve">
          <source>This color model is similar to an X11 TrueColor visual. The default RGB ColorModel specified by the &lt;a href=&quot;colormodel#getRGBdefault()&quot;&gt;&lt;code&gt;getRGBdefault&lt;/code&gt;&lt;/a&gt; method is a &lt;code&gt;DirectColorModel&lt;/code&gt; with the following parameters:</source>
          <target state="translated">이 색상 모델은 X11 TrueColor 비주얼과 유사합니다. &lt;a href=&quot;colormodel#getRGBdefault()&quot;&gt; &lt;code&gt;getRGBdefault&lt;/code&gt; &lt;/a&gt; 메소드로 지정된 기본 RGB ColorModel 은 다음 매개 변수 가있는 &lt;code&gt;DirectColorModel&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="176099bc59c5b3661b28d294be7f4886f481e5f7" translate="yes" xml:space="preserve">
          <source>This combines the era and year-of-era into the single proleptic-year field.</source>
          <target state="translated">이것은 시대와 시대를 단일 proleptic-year 필드로 결합합니다.</target>
        </trans-unit>
        <trans-unit id="085c9f3330eb667d8318a23639d829756b9bb915" translate="yes" xml:space="preserve">
          <source>This combines this local date with the specified time and offset to calculate the epoch-second value, which is the number of elapsed seconds from 1970-01-01T00:00:00Z. Instants on the time-line after the epoch are positive, earlier are negative.</source>
          <target state="translated">이 로컬 날짜를 지정된 시간 및 오프셋과 결합하여 1970-01-01T00 : 00 : 00Z에서 경과 한 초 수인 epoch-second 값을 계산합니다. 에포크 이후 타임 라인의 순간은 양수이고 이전은 음수입니다.</target>
        </trans-unit>
        <trans-unit id="881c19f887f555a349e53ab2479a3a4e1694b26e" translate="yes" xml:space="preserve">
          <source>This combines this local date-time and the specified offset to calculate the epoch-second value, which is the number of elapsed seconds from 1970-01-01T00:00:00Z. Instants on the time-line after the epoch are positive, earlier are negative.</source>
          <target state="translated">이 현지 날짜 시간과 지정된 오프셋을 결합하여 초 단위 값 (1970-01-01T00 : 00 : 00Z에서 경과 된 초 수)을 계산합니다. 신기원 이후의 타임 라인에있는 순간은 긍정적이고, 초기는 부정적입니다.</target>
        </trans-unit>
        <trans-unit id="40fe7b6100b5c8ae366a238823262ae618c2e5f5" translate="yes" xml:space="preserve">
          <source>This combines this local date-time and the specified offset to form an &lt;code&gt;Instant&lt;/code&gt;.</source>
          <target state="translated">이것은 현지 날짜-시간과 지정된 오프셋을 결합하여 &lt;code&gt;Instant&lt;/code&gt; 를 형성합니다 .</target>
        </trans-unit>
        <trans-unit id="77d28ebe504ffd4fff7bbb268deedfc8554339d4" translate="yes" xml:space="preserve">
          <source>This combines this local time with the specified date and offset to calculate the epoch-second value, which is the number of elapsed seconds from 1970-01-01T00:00:00Z. Instants on the time-line after the epoch are positive, earlier are negative.</source>
          <target state="translated">이 로컬 시간을 지정된 날짜 및 오프셋과 결합하여 1970-01-01T00 : 00 : 00Z에서 경과 한 초 수인 epoch-second 값을 계산합니다. 에포크 이후 타임 라인의 순간은 양수이고 이전은 음수입니다.</target>
        </trans-unit>
        <trans-unit id="1f0fec6350a7efda6ae6d73208fba34843bd108a" translate="yes" xml:space="preserve">
          <source>This combines this offset time with the specified date to calculate the epoch-second value, which is the number of elapsed seconds from 1970-01-01T00:00:00Z. Instants on the time-line after the epoch are positive, earlier are negative.</source>
          <target state="translated">이 오프셋 시간을 지정된 날짜와 결합하여 1970-01-01T00 : 00 : 00Z에서 경과 된 초 수인 epoch-second 값을 계산합니다. 에포크 이후 타임 라인의 순간은 양수이고 이전은 음수입니다.</target>
        </trans-unit>
        <trans-unit id="ee33d3fc348629a57d317d2f32a862afa8eb16d5" translate="yes" xml:space="preserve">
          <source>This comparator differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the position of the date on the local time-line. The underlying comparison is equivalent to comparing the epoch-day.</source>
          <target state="translated">이 비교기는 연대기가 아닌 기본 날짜 만 비교한다는 점 에서 &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이를 통해 현지 타임 라인의 날짜 위치를 기준으로 다른 달력 시스템의 날짜를 비교할 수 있습니다. 기본 비교는 epoch-day를 비교하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6b0836eee612e6ed7058ab9b4c598a4c36356b18" translate="yes" xml:space="preserve">
          <source>This comparator differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date-time and not the chronology. This allows dates in different calendar systems to be compared based on the position of the date-time on the local time-line. The underlying comparison is equivalent to comparing the epoch-day and nano-of-day.</source>
          <target state="translated">이 비교기는 연대기가 아닌 기본 날짜-시간 만 비교한다는 점 에서 &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이를 통해 다른 달력 시스템의 날짜를 로컬 타임 라인에서 날짜-시간의 위치에 따라 비교할 수 있습니다. 기본 비교는 epoch-day와 nano-of-day를 비교하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fcd302affc87e211b412b7465315da1dad810730" translate="yes" xml:space="preserve">
          <source>This comparator differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoZonedDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying instant and not the chronology. This allows dates in different calendar systems to be compared based on the position of the date-time on the instant time-line. The underlying comparison is equivalent to comparing the epoch-second and nano-of-second.</source>
          <target state="translated">이 비교기는 연대기가 아닌 기본 순간 만 비교한다는 점 에서 &lt;a href=&quot;#compareTo(java.time.chrono.ChronoZonedDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이렇게하면 인스턴트 타임 라인에서 날짜-시간의 위치를 ​​기반으로 다른 달력 시스템의 날짜를 비교할 수 있습니다. 기본 비교는 epoch-second와 nano-of-second를 비교하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2e211b34e33f383b28859eb5977a7c40e1249ab5" translate="yes" xml:space="preserve">
          <source>This comparator differs from the comparison in &lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the position of the date on the local time-line. The underlying comparison is equivalent to comparing the epoch-day.</source>
          <target state="translated">이 비교기는 연대기가 아닌 기본 날짜 만 비교한다는 점 에서 &lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이를 통해 서로 다른 달력 시스템의 날짜를 현지 타임 라인의 날짜 위치를 기준으로 비교할 수 있습니다. 근본적인 비교는 신기원을 비교하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="69c8ba053698d42cd41df468e493abc5023ac240" translate="yes" xml:space="preserve">
          <source>This comparator differs from the comparison in &lt;a href=&quot;chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date-time and not the chronology. This allows dates in different calendar systems to be compared based on the position of the date-time on the local time-line. The underlying comparison is equivalent to comparing the epoch-day and nano-of-day.</source>
          <target state="translated">이 비교기는 연대기가 아닌 기본 날짜 시간 만 비교한다는 점 에서 &lt;a href=&quot;chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이를 통해 서로 다른 달력 시스템의 날짜를 현지 시간 표시 막대의 날짜-시간 위치를 기준으로 비교할 수 있습니다. 근본적인 비교는 신기원과 나노 일을 비교하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bbdbc85ee0512dc3d74a6a8c6805ec1e19b5202c" translate="yes" xml:space="preserve">
          <source>This comparator differs from the comparison in &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying instant and not the chronology. This allows dates in different calendar systems to be compared based on the position of the date-time on the instant time-line. The underlying comparison is equivalent to comparing the epoch-second and nano-of-second.</source>
          <target state="translated">이 비교기는 연대기가 아닌 기본 순간 만 비교한다는 점 에서 &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이를 통해 다른 일정 시스템의 날짜를 인스턴트 타임 라인에서 날짜-시간의 위치를 ​​기준으로 비교할 수 있습니다. 기본 비교는 에포크 초와 나노 초를 비교하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cc7ddcbc9574b53708e189a7991f2ab1c97c0b99" translate="yes" xml:space="preserve">
          <source>This compares the instants of each transition. The offsets are ignored, making this order inconsistent with equals.</source>
          <target state="translated">각 전환의 순간을 비교합니다. 오프셋은 무시되므로이 순서는 같지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e0daf89b15c60167e29d56c10b1834fe32cfdd37" translate="yes" xml:space="preserve">
          <source>This component has capabilities not found in the &lt;code&gt;java.awt.TextArea&lt;/code&gt; class. The superclass should be consulted for additional capabilities. Alternative multi-line text classes with more capabilities are &lt;code&gt;JTextPane&lt;/code&gt; and &lt;code&gt;JEditorPane&lt;/code&gt;.</source>
          <target state="translated">이 컴포넌트는 &lt;code&gt;java.awt.TextArea&lt;/code&gt; 클래스 에없는 기능을 가지고 있습니다 . 추가 기능에 대해서는 수퍼 클래스를 참조해야합니다. 더 많은 기능을 가진 대체 다중 행 텍스트 클래스는 &lt;code&gt;JTextPane&lt;/code&gt; 및 &lt;code&gt;JEditorPane&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="71df604a95c047fac8472c995cf6ff2cf4867b18" translate="yes" xml:space="preserve">
          <source>This component models paragraphs that are composed of runs of character level attributes. Each paragraph may have a logical style attached to it which contains the default attributes to use if not overridden by attributes set on the paragraph or character run. Components and images may be embedded in the flow of text.</source>
          <target state="translated">이 구성 요소는 문자 수준 속성의 실행으로 구성된 단락을 모델링합니다. 각 단락에는 단락 또는 문자 실행에 설정된 속성으로 재정의되지 않은 경우 사용할 기본 속성이 포함 된 논리적 스타일이 첨부 될 수 있습니다. 텍스트 흐름에 구성 요소와 이미지가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34d87252e3a4e7f7c87150ecda1af2f2b58116fb" translate="yes" xml:space="preserve">
          <source>This component represents an iconified version of a &lt;code&gt;JInternalFrame&lt;/code&gt;.</source>
          <target state="translated">이 컴포넌트는 &lt;code&gt;JInternalFrame&lt;/code&gt; 의 아이콘 화 된 버전을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="6fca8e8d07ce580dc29f9dc2c3aeb69ed8071be1" translate="yes" xml:space="preserve">
          <source>This component represents an iconified version of a &lt;code&gt;JInternalFrame&lt;/code&gt;. This API should NOT BE USED by Swing applications, as it will go away in future versions of Swing as its functionality is moved into &lt;code&gt;JInternalFrame&lt;/code&gt;. This class is public only so that UI objects can display a desktop icon. If an application wants to display a desktop icon, it should create a &lt;code&gt;JInternalFrame&lt;/code&gt; instance and iconify it.</source>
          <target state="translated">이 컴포넌트는 &lt;code&gt;JInternalFrame&lt;/code&gt; 의 아이콘 화 된 버전을 나타냅니다 . 이 API는 기능이 &lt;code&gt;JInternalFrame&lt;/code&gt; 으로 이동함에 따라 Swing의 향후 버전에서 사라질 것이므로 Swing 응용 프로그램에서 사용해서는 안됩니다 . 이 클래스는 공용이므로 UI ​​객체가 데스크탑 아이콘을 표시 할 수 있습니다. 애플리케이션이 데스크탑 아이콘을 표시하려면 &lt;code&gt;JInternalFrame&lt;/code&gt; 인스턴스를 생성 하고 아이콘 화해야합니다.</target>
        </trans-unit>
        <trans-unit id="9efca82481d00ba481f5c1a020727d99d1642856" translate="yes" xml:space="preserve">
          <source>This component uses implementations of the &lt;code&gt;EditorKit&lt;/code&gt; to accomplish its behavior. It effectively morphs into the proper kind of text editor for the kind of content it is given. The content type that editor is bound to at any given time is determined by the &lt;code&gt;EditorKit&lt;/code&gt; currently installed. If the content is set to a new URL, its type is used to determine the &lt;code&gt;EditorKit&lt;/code&gt; that should be used to load the content.</source>
          <target state="translated">이 구성 요소는 &lt;code&gt;EditorKit&lt;/code&gt; 의 구현을 사용 하여 동작을 수행합니다. 주어진 내용의 종류에 따라 적절한 종류의 텍스트 편집기로 효과적으로 변형됩니다. 주어진 시간에 편집기가 바인딩되는 컨텐츠 유형은 현재 설치된 &lt;code&gt;EditorKit&lt;/code&gt; 에 의해 결정됩니다 . 콘텐츠가 새 URL로 설정된 경우 해당 유형은 콘텐츠를로드하는 데 사용해야 하는 &lt;code&gt;EditorKit&lt;/code&gt; 을 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="88eede34d32f64866f4e931d0520981a05a8d634" translate="yes" xml:space="preserve">
          <source>This component's locale. If this component does not have a locale, the locale of its parent is returned.</source>
          <target state="translated">이 구성 요소의 로캘입니다. 이 구성 요소에 로캘이 없으면 부모의 로캘이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="214ac252c0ba044ee79ac7ac9ed06ac4e8d2e884" translate="yes" xml:space="preserve">
          <source>This computes, in a single pass, the count of people, as well as the minimum, maximum, sum, and average of their ages.</source>
          <target state="translated">이를 통해 단일 패스에서 사람들의 수와 연령의 최소, 최대, 합계 및 평균을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="8ecf7d1186beb739d844c2d1692dba4c31e96fd5" translate="yes" xml:space="preserve">
          <source>This computes, in a single pass, the count of people, as well as the minimum, maximum, sum, and average of their number of dependents.</source>
          <target state="translated">이것은 한 번의 패스로 사람들의 수뿐만 아니라 그들의 부양 가족의 최소, 최대, 합계 및 평균을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="e9e2b0f514db47caa89ba0a091352dcd38c4c208" translate="yes" xml:space="preserve">
          <source>This computes, in a single pass, the count of people, as well as the minimum, maximum, sum, and average of their weights.</source>
          <target state="translated">이것은 한 번의 패스로 사람의 수와 체중의 최소, 최대, 합계 및 평균을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="094b5e7f02060fff345c5bf3b2095d3ceba5a72e" translate="yes" xml:space="preserve">
          <source>This concept can seem surprising at first, as the natural way to globalize an application might initially appear to be to abstract the calendar system. However, as explored below, abstracting the calendar system is usually the wrong approach, resulting in logic errors and hard to find bugs. As such, it should be considered an application-wide architectural decision to choose to use this interface as opposed to &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">이 개념은 처음에는 응용 프로그램을 세계화하는 자연스러운 방법으로 달력 시스템을 추상화하는 것처럼 보일 수 있으므로 처음에는 놀라운 것처럼 보일 수 있습니다. 그러나 아래에서 살펴본 것처럼 달력 시스템을 추상화하는 것은 일반적으로 잘못된 접근 방식이므로 논리 오류가 발생하고 버그를 찾기가 어렵습니다. 따라서 &lt;code&gt;LocalDate&lt;/code&gt; 대신이 인터페이스를 사용하도록 선택하는 응용 프로그램 전체의 아키텍처 결정으로 간주해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4bf133bfd39a456d1d621ff71ab70e928fb9770a" translate="yes" xml:space="preserve">
          <source>This concept is described in the cookie specification. To understand the concept, some terminologies need to be defined first:</source>
          <target state="translated">이 개념은 쿠키 사양에 설명되어 있습니다. 개념을 이해하려면 먼저 몇 가지 용어를 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="62df0191c16730ea81ebc52d605bc1802c0618e1" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. (For backwards compatibility, it cannot be abstract.)</source>
          <target state="translated">이 구체적인 방법은 이전에 정의 된이 추상 클래스에 추가되었습니다. 이전 버전과의 호환성을 위해 추상적 일 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8a795a9e08058d23c3970c0ea2fda5e4ffc46a2b" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. (For backwards compatibility, it cannot be abstract.) It may be overridden by a provider to initialize the key pair generator. Such an override is expected to throw an InvalidAlgorithmParameterException if a parameter is inappropriate for this key pair generator. If this method is not overridden, it always throws an UnsupportedOperationException.</source>
          <target state="translated">이 구체적인 방법은 이전에 정의 된이 추상 클래스에 추가되었습니다. 이전 버전과의 호환성을 위해 추상화 할 수 없습니다. 키 쌍 생성기를 초기화하기 위해 공급자가이를 재정의 할 수 있습니다. 매개 변수가이 키 페어 생성기에 적합하지 않은 경우 이러한 대체는 InvalidAlgorithmParameterException을 발생시킵니다. 이 메서드를 재정의하지 않으면 항상 UnsupportedOperationException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="50c9e7a52fbb1068a2728a1333b3fa5892cd93d5" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. (For backwards compatibility, it cannot be abstract.) It may be overridden by a provider to unwrap a previously wrapped key. Such an override is expected to throw an InvalidKeyException if the given wrapped key cannot be unwrapped. If this method is not overridden, it always throws an UnsupportedOperationException.</source>
          <target state="translated">이 구체적인 방법은 이전에 정의 된이 추상 클래스에 추가되었습니다. 이전 버전과의 호환성을 위해 추상적 일 수는 없습니다. 이전에 래핑 된 키의 랩을 해제하기 위해 공급자가이를 재정의 할 수 있습니다. 제공된 랩핑 된 키를 랩핑 할 수없는 경우 이러한 대체는 InvalidKeyException을 발생시킵니다. 이 메서드를 재정의하지 않으면 항상 UnsupportedOperationException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3047c19464302f65c8c9f9c4b59ba3382c2f7e6d" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. (For backwards compatibility, it cannot be abstract.) It may be overridden by a provider to wrap a key. Such an override is expected to throw an IllegalBlockSizeException or InvalidKeyException (under the specified circumstances), if the given key cannot be wrapped. If this method is not overridden, it always throws an UnsupportedOperationException.</source>
          <target state="translated">이 구체적인 방법은 이전에 정의 된이 추상 클래스에 추가되었습니다. 이전 버전과의 호환성을 위해 추상화 할 수 없습니다. 키를 래핑하기 위해 공급자가이를 재정의 할 수 있습니다. 주어진 키를 줄 바꿈 할 수없는 경우 이러한 재정의는 지정된 상황에서 IllegalBlockSizeException 또는 InvalidKeyException을 발생시킵니다. 이 메서드를 재정의하지 않으면 항상 UnsupportedOperationException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4bf8e8d4d64f80751e3c71f16623c031485b994e" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. It throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if it is not overridden by the provider.</source>
          <target state="translated">이 구체적인 방법은 이전에 정의 된이 추상 클래스에 추가되었습니다. 그것은 발생 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 가 프로 바이더에 의해 오버라이드 (override)되어 있지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="1f178e011f2428272f0235288220513eed06ba3b" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. This method calls the KeyPairGeneratorSpi &lt;a href=&quot;keypairgeneratorspi#initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)&quot;&gt;&lt;code&gt;initialize&lt;/code&gt;&lt;/a&gt; method, passing it &lt;code&gt;params&lt;/code&gt; and &lt;code&gt;random&lt;/code&gt;. That &lt;code&gt;initialize&lt;/code&gt; method always throws an UnsupportedOperationException if it is not overridden by the provider.</source>
          <target state="translated">이 구체적인 메서드는 이전에 정의 된이 추상 클래스에 추가되었습니다. 이 메서드는 KeyPairGeneratorSpi &lt;a href=&quot;keypairgeneratorspi#initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)&quot;&gt; &lt;code&gt;initialize&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 &lt;code&gt;params&lt;/code&gt; 및 &lt;code&gt;random&lt;/code&gt; 을 전달합니다 . 해당 &lt;code&gt;initialize&lt;/code&gt; 메서드는 공급자에 의해 재정의되지 않은 경우 항상 UnsupportedOperationException을 throw합니다.</target>
        </trans-unit>
        <trans-unit id="cddffa32696c69910e87d4021d8ca64cd18b1c49" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. This method calls the KeyPairGeneratorSpi &lt;a href=&quot;keypairgeneratorspi#initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)&quot;&gt;&lt;code&gt;initialize&lt;/code&gt;&lt;/a&gt; method, passing it &lt;code&gt;params&lt;/code&gt; and a source of randomness (obtained from the highest-priority installed provider or system-provided if none of the installed providers supply one). That &lt;code&gt;initialize&lt;/code&gt; method always throws an UnsupportedOperationException if it is not overridden by the provider.</source>
          <target state="translated">이 구체적인 메서드는 이전에 정의 된이 추상 클래스에 추가되었습니다. 이 방법은 호출 KeyPairGeneratorSpi의 &lt;a href=&quot;keypairgeneratorspi#initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)&quot;&gt; &lt;code&gt;initialize&lt;/code&gt; &lt;/a&gt; 가 전달 방법 &lt;code&gt;params&lt;/code&gt; 및 난수의 소스 (시스템 제공 설치된 제공자 중에 하나를 공급하지 않는 경우 가장 높은 우선 순위로 설치 제공로부터 구입). 해당 &lt;code&gt;initialize&lt;/code&gt; 메서드는 공급자에 의해 재정의되지 않은 경우 항상 UnsupportedOperationException을 throw합니다.</target>
        </trans-unit>
        <trans-unit id="07a7a6733f35c9bf5eaaa880a364b846a5809d2f" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. This method calls the KeyPairGeneratorSpi &lt;a href=&quot;keypairgeneratorspi#initialize-java.security.spec.AlgorithmParameterSpec-java.security.SecureRandom-&quot;&gt;&lt;code&gt;initialize&lt;/code&gt;&lt;/a&gt; method, passing it &lt;code&gt;params&lt;/code&gt; and &lt;code&gt;random&lt;/code&gt;. That &lt;code&gt;initialize&lt;/code&gt; method always throws an UnsupportedOperationException if it is not overridden by the provider.</source>
          <target state="translated">이 구체적인 방법은 이전에 정의 된이 추상 클래스에 추가되었습니다. 이 메소드는 KeyPairGeneratorSpi &lt;a href=&quot;keypairgeneratorspi#initialize-java.security.spec.AlgorithmParameterSpec-java.security.SecureRandom-&quot;&gt; &lt;code&gt;initialize&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 &lt;code&gt;params&lt;/code&gt; 및 &lt;code&gt;random&lt;/code&gt; 을 전달합니다 . 해당 &lt;code&gt;initialize&lt;/code&gt; 메소드는 제공자가 대체하지 않으면 항상 UnsupportedOperationException을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="d62db2387265a645a7720ab82cd02b48e61cde7c" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. This method calls the KeyPairGeneratorSpi &lt;a href=&quot;keypairgeneratorspi#initialize-java.security.spec.AlgorithmParameterSpec-java.security.SecureRandom-&quot;&gt;&lt;code&gt;initialize&lt;/code&gt;&lt;/a&gt; method, passing it &lt;code&gt;params&lt;/code&gt; and a source of randomness (obtained from the highest-priority installed provider or system-provided if none of the installed providers supply one). That &lt;code&gt;initialize&lt;/code&gt; method always throws an UnsupportedOperationException if it is not overridden by the provider.</source>
          <target state="translated">이 구체적인 방법은 이전에 정의 된이 추상 클래스에 추가되었습니다. 이 방법은 호출 KeyPairGeneratorSpi의 &lt;a href=&quot;keypairgeneratorspi#initialize-java.security.spec.AlgorithmParameterSpec-java.security.SecureRandom-&quot;&gt; &lt;code&gt;initialize&lt;/code&gt; &lt;/a&gt; 가 전달 방법 &lt;code&gt;params&lt;/code&gt; 및 난수의 소스 (시스템 제공 설치된 제공자 중에 하나를 공급하지 않는 경우 가장 높은 우선 순위로 설치 제공로부터 구입). 해당 &lt;code&gt;initialize&lt;/code&gt; 메소드는 제공자가 대체하지 않으면 항상 UnsupportedOperationException을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="e0c7037e79f3e9915b5f957edd500f9a2a5674bc" translate="yes" xml:space="preserve">
          <source>This console</source>
          <target state="translated">이 콘솔</target>
        </trans-unit>
        <trans-unit id="5c95520f73c1a604e69b7d0c30b8d7c4d318941a" translate="yes" xml:space="preserve">
          <source>This constant indicates that the transform defined by this object is an identity transform.</source>
          <target state="translated">이 상수는이 개체에 의해 정의 된 변환이 ID 변환임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b3b2094841ef5f1f0d8a16ea573d3330815119cb" translate="yes" xml:space="preserve">
          <source>This constant indicates that the transform defined by this object is an identity transform. An identity transform is one in which the output coordinates are always the same as the input coordinates. If this transform is anything other than the identity transform, the type will either be the constant GENERAL_TRANSFORM or a combination of the appropriate flag bits for the various coordinate conversions that this transform performs.</source>
          <target state="translated">이 상수는이 개체에 의해 정의 된 변환이 ID 변환임을 나타냅니다. 식별 변환은 출력 좌표가 항상 입력 좌표와 동일한 변환입니다. 이 변환이 식별 변환이 아닌 경우 유형은 상수 GENERAL_TRANSFORM이거나이 변환이 수행하는 다양한 좌표 변환에 대한 적절한 플래그 비트의 조합입니다.</target>
        </trans-unit>
        <trans-unit id="da2abe30466c8a3751bf3b063dacfa8b66f5951a" translate="yes" xml:space="preserve">
          <source>This constant indicates that the transform defined by this object performs an arbitrary conversion of the input coordinates.</source>
          <target state="translated">이 상수는이 개체에 의해 정의 된 변환이 입력 좌표의 임의 변환을 수행함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ebb178713e4ca3438b8c5185742d9389c890fa21" translate="yes" xml:space="preserve">
          <source>This constant indicates that the transform defined by this object performs an arbitrary conversion of the input coordinates. If this transform can be classified by any of the above constants, the type will either be the constant TYPE_IDENTITY or a combination of the appropriate flag bits for the various coordinate conversions that this transform performs.</source>
          <target state="translated">이 상수는이 개체에 의해 정의 된 변환이 입력 좌표의 임의 변환을 수행함을 나타냅니다. 이 변환이 위의 상수 중 하나로 분류 될 수있는 경우 유형은 상수 TYPE_IDENTITY 또는이 변환이 수행하는 다양한 좌표 변환에 대한 적절한 플래그 비트의 조합입니다.</target>
        </trans-unit>
        <trans-unit id="363f64cf2755e373a16e7f75ebee013d11e4f25c" translate="yes" xml:space="preserve">
          <source>This constant is a bit mask for any of the rotation flag bits.</source>
          <target state="translated">이 상수는 모든 회전 플래그 비트에 대한 비트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="0820f22687b1761dab4dff8da2786c5f6d17918b" translate="yes" xml:space="preserve">
          <source>This constant is a bit mask for any of the scale flag bits.</source>
          <target state="translated">이 상수는 스케일 플래그 비트에 대한 비트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="1ede6a4cbce12a7966614921f3d8b2dcad2ac254" translate="yes" xml:space="preserve">
          <source>This constant is obsolete, and is included only for backwards compatibility.</source>
          <target state="translated">이 상수는 더 이상 사용되지 않으며 이전 버전과의 호환성을 위해서만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="47aacd16ef926f9bea540c18d7467edfb419f213" translate="yes" xml:space="preserve">
          <source>This constant is returned from the &lt;a href=&quot;#getNumberOfPages()&quot;&gt;&lt;code&gt;getNumberOfPages&lt;/code&gt;&lt;/a&gt; method if a &lt;code&gt;Pageable&lt;/code&gt; implementation does not know the number of pages in its set.</source>
          <target state="translated">이 상수는 &lt;code&gt;Pageable&lt;/code&gt; 구현이 해당 세트의 페이지 수를 알지 못하는 경우 &lt;a href=&quot;#getNumberOfPages()&quot;&gt; &lt;code&gt;getNumberOfPages&lt;/code&gt; &lt;/a&gt; 메소드 에서 리턴 됩니다.</target>
        </trans-unit>
        <trans-unit id="d10107ce09418e4183b95e07cd77b3ccc3ff6398" translate="yes" xml:space="preserve">
          <source>This constant specifies all of the bit mask-based ranges. Use &lt;code&gt;EnumSet.allOf(NumericShaper.Range.class)&lt;/code&gt; to specify all of the enum-based ranges.</source>
          <target state="translated">이 상수는 모든 비트 마스크 기반 범위를 지정합니다. 사용 &lt;code&gt;EnumSet.allOf(NumericShaper.Range.class)&lt;/code&gt; 열거 기반 범위를 모두 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6233171ae50e2dfd828ba014b8868853c98a3b51" translate="yes" xml:space="preserve">
          <source>This constant specifies to add an attribute with the specified values.</source>
          <target state="translated">이 상수는 지정된 값으로 속성을 추가하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="cd8d44d26c5e133edddaa1329516bd7acc91d3b4" translate="yes" xml:space="preserve">
          <source>This constant specifies to delete the specified attribute values from the attribute.</source>
          <target state="translated">이 상수는 지정된 속성 값을 속성에서 삭제하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f2dee89227b20ef81135afbe5b9bcd31150deccb" translate="yes" xml:space="preserve">
          <source>This constant specifies to replace an attribute with specified values.</source>
          <target state="translated">이 상수는 속성을 지정된 값으로 바꾸도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="af4b33b3458c42cd43e3b8a8388f03e9ea7f6998" translate="yes" xml:space="preserve">
          <source>This constant value indicates that the purpose of the file dialog window is to locate a file from which to read.</source>
          <target state="translated">이 상수 값은 파일 대화 상자 창의 목적이 읽을 파일을 찾는 것임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="87241d04077bb46465edaf3bbb95d864fcc0dda4" translate="yes" xml:space="preserve">
          <source>This constant value indicates that the purpose of the file dialog window is to locate a file to which to write.</source>
          <target state="translated">이 상수 값은 파일 대화 상자 창의 목적이 쓸 파일을 찾는 것임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f6444007e8d10572a068abf1e3164f34cfdb5930" translate="yes" xml:space="preserve">
          <source>This constraint is useful when building a certification path forward (from the target toward the trust anchor. If a partial path has been built, any candidate certificate must have a maxPathLen value greater than or equal to the number of certificates in the partial path.</source>
          <target state="translated">이 제한은 대상에서 트러스트 앵커를 향한 인증 경로를 구축 할 때 유용합니다. 부분 경로가 구축 된 경우 모든 후보 인증서는 부분 경로의 인증서 수보다 크거나 같은 maxPathLen 값을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="d8e603d331114f1b7222de64c09552fe6ba8dac2" translate="yes" xml:space="preserve">
          <source>This constraint is useful when building a certification path forward (from the target toward the trust anchor. If a partial path has been built, any candidate certificate must not include name constraints that would prohibit building a path to any of the names in the partial path.</source>
          <target state="translated">이 제약 조건은 대상에서 트러스트 앵커를 향한 인증 경로를 구축 할 때 유용합니다. 부분 경로가 구축 된 경우 후보 인증서에는 이름의 제약 조건이 포함되어서는 안됩니다. .</target>
        </trans-unit>
        <trans-unit id="e64c05ff68698df4b96a639f6fb551bd71a3b2bc" translate="yes" xml:space="preserve">
          <source>This constructor allows the systemID to be set in addition to the input stream, which allows relative URIs to be processed.</source>
          <target state="translated">이 생성자를 사용하면 입력 스트림 외에 systemID를 설정할 수 있으므로 상대 URI를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="56115faaedb5b196e05b129c1dc4a13bcbce5c42" translate="yes" xml:space="preserve">
          <source>This constructor constructs an IndexedPropertyDescriptor for a property that follows the standard Java conventions by having getFoo and setFoo accessor methods, for both indexed access and array access.</source>
          <target state="translated">이 생성자는 인덱스 액세스 및 배열 액세스 모두에 대해 getFoo 및 setFoo 접근 자 메소드를 사용하여 표준 Java 규칙을 따르는 특성에 대한 IndexedPropertyDescriptor를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="323ef76e9090247addd862b027bcd8c1a9205ff8" translate="yes" xml:space="preserve">
          <source>This constructor creates an EventSetDescriptor from scratch using java.lang.reflect.Method and java.lang.Class objects.</source>
          <target state="translated">이 생성자는 java.lang.reflect.Method 및 java.lang.Class 객체를 사용하여 처음부터 EventSetDescriptor를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="55008209d693d36006b56a334b0fde816431fe7a" translate="yes" xml:space="preserve">
          <source>This constructor creates an EventSetDescriptor from scratch using string names.</source>
          <target state="translated">이 생성자는 문자열 이름을 사용하여 처음부터 EventSetDescriptor를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6f791286497df7b73711cd3b36e7dc7fa513baf9" translate="yes" xml:space="preserve">
          <source>This constructor creates an object with a default closure type of &lt;a href=&quot;#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt;. It is provided only to enable serialization of subclasses.</source>
          <target state="translated">이 생성자는 기본 클로저 유형이 &lt;a href=&quot;#OPEN&quot;&gt; &lt;code&gt;OPEN&lt;/code&gt; &lt;/a&gt; 인 객체를 생성합니다 . 서브 클래스의 직렬화를 활성화하기 위해서만 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="f4752e6b60ccfb55bdef75a7c17a6e6626676b4d" translate="yes" xml:space="preserve">
          <source>This constructor does not attempt to check the class names for validity. Invalid class names may cause exceptions in subsequent calls to &lt;code&gt;getMetadataFormat&lt;/code&gt;.</source>
          <target state="translated">이 생성자는 클래스 이름의 유효성을 검사하지 않습니다. 유효하지 않은 클래스 이름으로 인해 &lt;code&gt;getMetadataFormat&lt;/code&gt; 에 대한 후속 호출에서 예외가 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d2705af4ecd1bfd920175f17b4eb667109733cc5" translate="yes" xml:space="preserve">
          <source>This constructor does not check if the given bytes indeed specify a secret key of the specified algorithm. For example, if the algorithm is DES, this constructor does not check if &lt;code&gt;key&lt;/code&gt; is 8 bytes long, and also does not check for weak or semi-weak keys. In order for those checks to be performed, an algorithm-specific</source>
          <target state="translated">이 생성자는 주어진 바이트가 실제로 지정된 알고리즘의 비밀 키를 지정하는지 확인하지 않습니다. 예를 들어, 알고리즘이 DES 인 경우이 생성자는 &lt;code&gt;key&lt;/code&gt; 길이가 8 바이트인지 확인하지 않고 약한 키나 반 약한 키도 검사하지 않습니다. 이러한 검사를 수행하려면 알고리즘별로</target>
        </trans-unit>
        <trans-unit id="b17f077b15cc44e9cd314ba25ea55a7532a21498" translate="yes" xml:space="preserve">
          <source>This constructor does not check if the given bytes indeed specify a secret key of the specified algorithm. For example, if the algorithm is DES, this constructor does not check if &lt;code&gt;key&lt;/code&gt; is 8 bytes long, and also does not check for weak or semi-weak keys. In order for those checks to be performed, an algorithm-specific key specification class (in this case: &lt;a href=&quot;deskeyspec&quot;&gt;&lt;code&gt;DESKeySpec&lt;/code&gt;&lt;/a&gt;) must be used.</source>
          <target state="translated">이 생성자는 주어진 바이트가 실제로 지정된 알고리즘의 비밀 키를 지정하는지 확인하지 않습니다. 예를 들어, 알고리즘이 DES 인 경우이 생성자는 &lt;code&gt;key&lt;/code&gt; 길이가 8 바이트인지 확인하지 않고 약한 키나 반 약한 키도 검사하지 않습니다. 이러한 검사를 수행하려면 알고리즘 별 키 사양 클래스 (이 경우 &lt;a href=&quot;deskeyspec&quot;&gt; &lt;code&gt;DESKeySpec&lt;/code&gt; &lt;/a&gt; )를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="04216998e2235a7603172662047a77955e52a350" translate="yes" xml:space="preserve">
          <source>This constructor does not do custom mapping. If the base type of the array is an SQL structured type and custom mapping is desired, the constructor &lt;code&gt;SerialArray(Array array, Map map)&lt;/code&gt; should be used.</source>
          <target state="translated">이 생성자는 사용자 지정 매핑을 수행하지 않습니다. 배열의 기본 유형이 SQL 구조화 유형이고 사용자 정의 매핑이 필요한 경우 &lt;code&gt;SerialArray(Array array, Map map)&lt;/code&gt; 생성자를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9267578010659281d6191808ee4578af085278e6" translate="yes" xml:space="preserve">
          <source>This constructor does not throw an exception if &lt;code&gt;fdObj&lt;/code&gt; is &lt;a href=&quot;filedescriptor#valid()&quot;&gt;&lt;code&gt;invalid&lt;/code&gt;&lt;/a&gt;. However, if the methods are invoked on the resulting stream to attempt I/O on the stream, an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">이 생성자는 &lt;code&gt;fdObj&lt;/code&gt; 가 &lt;a href=&quot;filedescriptor#valid()&quot;&gt; &lt;code&gt;invalid&lt;/code&gt; &lt;/a&gt; 경우 예외를 발생시키지 않습니다 . 그러나 메서드가 결과 스트림에서 호출되어 스트림에서 I / O를 시도하면 &lt;code&gt;IOException&lt;/code&gt; 이 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="c768a68045529db78d1a3606a790d49cd038789b" translate="yes" xml:space="preserve">
          <source>This constructor does not throw an exception if &lt;code&gt;fdObj&lt;/code&gt; is &lt;a href=&quot;filedescriptor#valid--&quot;&gt;&lt;code&gt;invalid&lt;/code&gt;&lt;/a&gt;. However, if the methods are invoked on the resulting stream to attempt I/O on the stream, an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;fdObj&lt;/code&gt; 가 &lt;a href=&quot;filedescriptor#valid--&quot;&gt; &lt;code&gt;invalid&lt;/code&gt; &lt;/a&gt; 하지 않으면이 생성자는 예외를 발생시키지 않습니다 . 그러나 결과 스트림에서 메소드를 호출하여 스트림에서 I / O를 시도하면 &lt;code&gt;IOException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c784e7233a0ce2a32fd493938b6d803074df8ffd" translate="yes" xml:space="preserve">
          <source>This constructor first builds a URI in string form using the given components as follows:</source>
          <target state="translated">이 생성자는 먼저 다음과 같이 주어진 컴포넌트를 사용하여 문자열 형식으로 URI를 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="252fb9e182f5d6aff42e078c02f9aae69a59be6c" translate="yes" xml:space="preserve">
          <source>This constructor first builds a URI string from the given components according to the rules specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt;, section 5.2, step 7:</source>
          <target state="translated">이 생성자는 먼저 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt; , 섹션 5.2, 7 단계에 지정된 규칙에 따라 지정된 컴포넌트에서 URI 문자열을 빌드합니다 .</target>
        </trans-unit>
        <trans-unit id="306285cfeca440c55bdfa3feff55957327806e69" translate="yes" xml:space="preserve">
          <source>This constructor has to be used when the RelationSupport object will be registered as a MBean by the user, or when creating a user relation MBean whose class extends RelationSupport.</source>
          <target state="translated">이 생성자는 RelationSupport 객체가 유저에 의해 MBean로서 등록 될 때, 또는 클래스가 RelationSupport를 확장하는 유저 관계 MBean를 작성하는 경우에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bb0fbecfa5d0431c58452f14d3af289a6e9443fa" translate="yes" xml:space="preserve">
          <source>This constructor has to be used when the user relation MBean implements the interfaces expected to be supported by a relation by delegating to a RelationSupport object.</source>
          <target state="translated">이 생성자는 사용자 관계 MBean이 RelationSupport 오브젝트에 위임하여 관계에 의해 지원 될 것으로 예상되는 인터페이스를 구현할 때 사용되어야합니다.</target>
        </trans-unit>
        <trans-unit id="fa9c5b9679c9d7737d107f8611a1c19a17aeb758" translate="yes" xml:space="preserve">
          <source>This constructor is a more convenient way to express the following (equivalent) code:</source>
          <target state="translated">이 생성자는 다음 (동등한) 코드를 표현하는 더 편리한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="54a31922885bf470fd0c3059c548d5dd674bbfcb" translate="yes" xml:space="preserve">
          <source>This constructor is called by subclasses only. Application should call &lt;a href=&quot;cardterminals#list()&quot;&gt;list()&lt;/a&gt; or &lt;a href=&quot;cardterminals#getTerminal(java.lang.String)&quot;&gt;getTerminal()&lt;/a&gt; to obtain a CardTerminal object.</source>
          <target state="translated">이 생성자는 서브 클래스에서만 호출됩니다. 애플리케이션은 CardTerminal 객체를 얻기 위해 &lt;a href=&quot;cardterminals#list()&quot;&gt;list ()&lt;/a&gt; 또는 &lt;a href=&quot;cardterminals#getTerminal(java.lang.String)&quot;&gt;getTerminal ()&lt;/a&gt; 을 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="6aee2cb510c8b783619792d99eb90b68fffa5c1d" translate="yes" xml:space="preserve">
          <source>This constructor is called by subclasses only. Application should call &lt;a href=&quot;terminalfactory#terminals()&quot;&gt;TerminalFactory.terminals()&lt;/a&gt; to obtain a CardTerminals object.</source>
          <target state="translated">이 생성자는 서브 클래스에서만 호출됩니다. 응용 프로그램은 CardTerminals 객체를 얻기 위해 &lt;a href=&quot;terminalfactory#terminals()&quot;&gt;TerminalFactory.terminals ()&lt;/a&gt; 를 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="77c7265ddc326e58ec087fa2cd33d78f436731b4" translate="yes" xml:space="preserve">
          <source>This constructor is called by subclasses only. Application should call the &lt;a href=&quot;card#getBasicChannel()&quot;&gt;Card.getBasicChannel()&lt;/a&gt; and &lt;a href=&quot;card#openLogicalChannel()&quot;&gt;Card.openLogicalChannel()&lt;/a&gt; methods to obtain a CardChannel object.</source>
          <target state="translated">이 생성자는 서브 클래스에서만 호출됩니다. 애플리케이션은 CardChannel 객체를 얻기 위해 &lt;a href=&quot;card#getBasicChannel()&quot;&gt;Card.getBasicChannel ()&lt;/a&gt; 및 &lt;a href=&quot;card#openLogicalChannel()&quot;&gt;Card.openLogicalChannel ()&lt;/a&gt; 메소드를 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="781f0a28122dbb84d6a06fe0cf63a3b7cfc75bda" translate="yes" xml:space="preserve">
          <source>This constructor is called by subclasses only. Application should call the &lt;a href=&quot;cardterminal#connect(java.lang.String)&quot;&gt;CardTerminal.connect()&lt;/a&gt; method to obtain a Card object.</source>
          <target state="translated">이 생성자는 서브 클래스에서만 호출됩니다. 애플리케이션은 Card 객체를 얻기 위해 &lt;a href=&quot;cardterminal#connect(java.lang.String)&quot;&gt;CardTerminal.connect ()&lt;/a&gt; 메서드를 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="22bcfda538c6290e0a386aa15ad7778899bc56d6" translate="yes" xml:space="preserve">
          <source>This constructor is equivalent to &lt;code&gt;MBeanServerPermission(name,null)&lt;/code&gt;.</source>
          <target state="translated">이 생성자는 &lt;code&gt;MBeanServerPermission(name,null)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d316a5fa99ed6379096b014630ff693b699cd1c2" translate="yes" xml:space="preserve">
          <source>This constructor is equivalent to &lt;code&gt;MBeanTrustPermission(name,null)&lt;/code&gt;.</source>
          <target state="translated">이 생성자는 &lt;code&gt;MBeanTrustPermission(name,null)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0438d6be07086284ca144cebfd257e9304b48c8a" translate="yes" xml:space="preserve">
          <source>This constructor is equivalent to a call to the two-argument constructor with a &lt;code&gt;null&lt;/code&gt; first argument.</source>
          <target state="translated">이 생성자는 첫 번째 인수 가 &lt;code&gt;null&lt;/code&gt; 인 두 인수 생성자를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="589ebdb9e260cd41b939daa222cba0601868a6e8" translate="yes" xml:space="preserve">
          <source>This constructor is equivalent to the four-argument constructor with the only difference of using the default port for the specified protocol. No validation of the inputs is performed by this constructor.</source>
          <target state="translated">이 생성자는 지정된 프로토콜에 대해 기본 포트를 사용하는 유일한 차이점을 제외하고는 4 인수 생성자와 동일합니다. 이 생성자는 입력에 대한 유효성 검사를 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="24dd40fcf16383264596d56abd92101858ce108f" translate="yes" xml:space="preserve">
          <source>This constructor is especially useful inside a &lt;a href=&quot;../contenthandler#startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)&quot;&gt;&lt;code&gt;startElement&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">이 생성자는 &lt;a href=&quot;../contenthandler#startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)&quot;&gt; &lt;code&gt;startElement&lt;/code&gt; &lt;/a&gt; 이벤트 내에서 특히 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="68a0384db0e99839a7d74e0b1665a45154400502" translate="yes" xml:space="preserve">
          <source>This constructor is especially useful when an application is creating its own exception from within a &lt;a href=&quot;contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; callback, and needs to wrap an existing exception that is not a subclass of &lt;a href=&quot;saxexception&quot;&gt;&lt;code&gt;SAXException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 생성자는 애플리케이션이 &lt;a href=&quot;contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt; 콜백 내에서 자체 예외를 생성하고 &lt;a href=&quot;saxexception&quot;&gt; &lt;code&gt;SAXException&lt;/code&gt; &lt;/a&gt; 의 하위 클래스가 아닌 기존 예외를 래핑해야 할 때 특히 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="bd9f1a0ce229d0c5f51ecf4131e860647b1aaf3b" translate="yes" xml:space="preserve">
          <source>This constructor is especially useful when an application is creating its own exception from within a &lt;a href=&quot;contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; callback.</source>
          <target state="translated">이 생성자는 애플리케이션이 &lt;a href=&quot;contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt; 콜백 내에서 자체 예외를 생성 할 때 특히 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="d127ce0cb8a3026167dc3c1a5f31225f474f10fd" translate="yes" xml:space="preserve">
          <source>This constructor is especially useful when an application is creating its own exception from within a DocumentHandler callback.</source>
          <target state="translated">이 생성자는 애플리케이션이 DocumentHandler 콜백 내에서 자체 예외를 생성 할 때 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="4595eeb43c329eba420ae06b63743c27958bfc1b" translate="yes" xml:space="preserve">
          <source>This constructor is identical to &lt;a href=&quot;#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)&quot;&gt;&lt;code&gt;Thread(ThreadGroup,Runnable,String)&lt;/code&gt;&lt;/a&gt; with the exception of the fact that it allows the thread stack size to be specified. The stack size is the approximate number of bytes of address space that the virtual machine is to allocate for this thread's stack. &lt;b&gt;The effect of the &lt;code&gt;stackSize&lt;/code&gt; parameter, if any, is highly platform dependent.&lt;/b&gt;</source>
          <target state="translated">이 생성자는 스레드 스택 크기를 지정할 수 있다는 점을 제외 하면 &lt;a href=&quot;#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)&quot;&gt; &lt;code&gt;Thread(ThreadGroup,Runnable,String)&lt;/code&gt; &lt;/a&gt; 과 동일 합니다. 스택 크기는 가상 머신이이 스레드의 스택에 할당 할 주소 공간의 대략적인 바이트 수입니다. &lt;b&gt; &lt;code&gt;stackSize&lt;/code&gt; &lt;/b&gt;&lt;b&gt; 매개 변수 (있는 경우) &lt;/b&gt;&lt;b&gt;의 효과는 플랫폼에 따라 크게 달라집니다.&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="66ce449a53c7b629abf0f1c21064fca6be018ae9" translate="yes" xml:space="preserve">
          <source>This constructor is identical to &lt;a href=&quot;#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long)&quot;&gt;&lt;code&gt;Thread(ThreadGroup,Runnable,String,long)&lt;/code&gt;&lt;/a&gt; with the added ability to suppress, or not, the inheriting of initial values for inheritable thread-local variables from the constructing thread. This allows for finer grain control over inheritable thread-locals. Care must be taken when passing a value of &lt;code&gt;false&lt;/code&gt; for &lt;code&gt;inheritThreadLocals&lt;/code&gt;, as it may lead to unexpected behavior if the new thread executes code that expects a specific thread-local value to be inherited.</source>
          <target state="translated">이 생성자는 &lt;a href=&quot;#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long)&quot;&gt; &lt;code&gt;Thread(ThreadGroup,Runnable,String,long)&lt;/code&gt; &lt;/a&gt; 과 동일하며 생성하는 스레드에서 상속 가능한 스레드 로컬 변수의 초기 값 상속을 억제하거나 억제하지 않는 기능이 추가되었습니다. 이를 통해 상속 가능한 스레드 로컬에 대한보다 세밀한 제어가 가능합니다. 새 스레드가 특정 스레드 로컬 값이 상속 될 것으로 예상하는 코드를 실행하면 예기치 않은 동작이 발생할 수 있으므로 &lt;code&gt;inheritThreadLocals&lt;/code&gt; 에 대해 &lt;code&gt;false&lt;/code&gt; 값을 전달할 때는주의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="db37d0145d7513f45a38a1fb3ad916bc05b8e177" translate="yes" xml:space="preserve">
          <source>This constructor is identical to &lt;a href=&quot;thread#Thread-java.lang.ThreadGroup-java.lang.Runnable-java.lang.String-&quot;&gt;&lt;code&gt;Thread(ThreadGroup,Runnable,String)&lt;/code&gt;&lt;/a&gt; with the exception of the fact that it allows the thread stack size to be specified. The stack size is the approximate number of bytes of address space that the virtual machine is to allocate for this thread's stack. &lt;b&gt;The effect of the &lt;code&gt;stackSize&lt;/code&gt; parameter, if any, is highly platform dependent.&lt;/b&gt;</source>
          <target state="translated">이 생성자는 스레드 스택 크기를 지정할 수 있다는 점을 제외 하고 &lt;a href=&quot;thread#Thread-java.lang.ThreadGroup-java.lang.Runnable-java.lang.String-&quot;&gt; &lt;code&gt;Thread(ThreadGroup,Runnable,String)&lt;/code&gt; &lt;/a&gt; 와 동일 합니다. 스택 크기는 가상 머신이이 스레드의 스택에 할당 할 대략적인 주소 공간 바이트 수입니다. &lt;b&gt; &lt;code&gt;stackSize&lt;/code&gt; &lt;/b&gt;&lt;b&gt; 매개 변수 &lt;/b&gt;&lt;b&gt;의 영향은 플랫폼에 따라 크게 다릅니다.&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="466741828949f55982644e7f0179121bdf12d125" translate="yes" xml:space="preserve">
          <source>This constructor is most useful for application writers, who will use it to create a persistent copy of an existing attribute list.</source>
          <target state="translated">이 생성자는 기존 속성 목록의 영구 복사본을 만드는 데 사용하는 응용 프로그램 작성자에게 가장 유용합니다.</target>
        </trans-unit>
        <trans-unit id="800a1703c1083c9d3a00f21bb6a4b995d7ffe6ac" translate="yes" xml:space="preserve">
          <source>This constructor is most useful for parser writers who need to wrap an exception that is not a subclass of &lt;a href=&quot;saxexception&quot;&gt;&lt;code&gt;SAXException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 생성자는 &lt;a href=&quot;saxexception&quot;&gt; &lt;code&gt;SAXException&lt;/code&gt; &lt;/a&gt; 의 서브 클래스가 아닌 예외를 래핑해야하는 파서 작성자에게 가장 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="d7978ad5ab70cc95a57bdb23e15593f46ece12da" translate="yes" xml:space="preserve">
          <source>This constructor is most useful for parser writers, who will use it to create a single, reusable attribute list that can be reset with the clear method between elements.</source>
          <target state="translated">이 생성자는 요소간에 clear 메서드로 재설정 할 수있는 재사용 가능한 단일 속성 목록을 만드는 데 사용하는 파서 작성자에게 가장 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e54ef5b38f226ce6370b60b84d5f09654f6f408b" translate="yes" xml:space="preserve">
          <source>This constructor is most useful for parser writers.</source>
          <target state="translated">이 생성자는 파서 작성자에게 가장 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ed4b5a6f5f3fee28ba1b4dafadd1b0cf5118f67c" translate="yes" xml:space="preserve">
          <source>This constructor is not appropriate for an MXBean. Use &lt;a href=&quot;#%3Cinit%3E(javax.management.MBeanServerConnection,javax.management.ObjectName,boolean)&quot;&gt;&lt;code&gt;MBeanServerInvocationHandler(MBeanServerConnection,
 ObjectName, boolean)&lt;/code&gt;&lt;/a&gt; for that. This constructor is equivalent to &lt;code&gt;new MBeanServerInvocationHandler(connection,
 objectName, false)&lt;/code&gt;.</source>
          <target state="translated">이 생성자는 MXBean에 적합하지 않습니다. 이를 위해 &lt;a href=&quot;#%3Cinit%3E(javax.management.MBeanServerConnection,javax.management.ObjectName,boolean)&quot;&gt; &lt;code&gt;MBeanServerInvocationHandler(MBeanServerConnection, ObjectName, boolean)&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 . 이 생성자는 &lt;code&gt;new MBeanServerInvocationHandler(connection, objectName, false)&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="a2810bbeef729a2adb8e1bef76df57c55ef3fc12" translate="yes" xml:space="preserve">
          <source>This constructor is not appropriate for an MXBean. Use &lt;a href=&quot;mbeanserverinvocationhandler#MBeanServerInvocationHandler-javax.management.MBeanServerConnection-javax.management.ObjectName-boolean-&quot;&gt;&lt;code&gt;MBeanServerInvocationHandler(MBeanServerConnection,
 ObjectName, boolean)&lt;/code&gt;&lt;/a&gt; for that. This constructor is equivalent to &lt;code&gt;new MBeanServerInvocationHandler(connection,
 objectName, false)&lt;/code&gt;.</source>
          <target state="translated">이 생성자는 MXBean에 적합하지 않습니다. 이를 위해 &lt;a href=&quot;mbeanserverinvocationhandler#MBeanServerInvocationHandler-javax.management.MBeanServerConnection-javax.management.ObjectName-boolean-&quot;&gt; &lt;code&gt;MBeanServerInvocationHandler(MBeanServerConnection, ObjectName, boolean)&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 . 이 생성자는 &lt;code&gt;new MBeanServerInvocationHandler(connection, objectName, false)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="055c035fa3f9d9301582bc9012a5938b0e707ed3" translate="yes" xml:space="preserve">
          <source>This constructor is protected because most users should use a &lt;code&gt;CertificateFactory&lt;/code&gt; to create &lt;code&gt;CertPath&lt;/code&gt;s.</source>
          <target state="translated">이 생성자는 대부분의 사용자가 &lt;code&gt;CertPath&lt;/code&gt; 를 작성 하기 위해 &lt;code&gt;CertificateFactory&lt;/code&gt; 를 사용해야하기 때문에 보호됩니다 .</target>
        </trans-unit>
        <trans-unit id="330344d4ad6e26866acacc9e424d39b564afed7f" translate="yes" xml:space="preserve">
          <source>This constructor is provided to ease migration to &lt;code&gt;
 StringBuilder&lt;/code&gt;. Obtaining a string from a string builder via the &lt;code&gt;
 toString&lt;/code&gt; method is likely to run faster and is generally preferred.</source>
          <target state="translated">이 생성자는 &lt;code&gt; StringBuilder&lt;/code&gt; 로의 마이그레이션을 쉽게하기 위해 제공됩니다 . &lt;code&gt; toString&lt;/code&gt; 메서드 를 통해 문자열 작성기에서 문자열을 가져 오는 것이 더 빠르게 실행될 수 있으며 일반적으로 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="66eb1beb876cf1b7137667a69660279a6798a7bb" translate="yes" xml:space="preserve">
          <source>This constructor is provided to ease migration to &lt;code&gt;StringBuilder&lt;/code&gt;. Obtaining a string from a string builder via the &lt;code&gt;toString&lt;/code&gt; method is likely to run faster and is generally preferred.</source>
          <target state="translated">이 생성자는 &lt;code&gt;StringBuilder&lt;/code&gt; 로 쉽게 마이그레이션 할 수 있도록 제공됩니다 . &lt;code&gt;toString&lt;/code&gt; 메소드 를 통해 문자열 빌더에서 문자열을 얻는 것이 더 빨리 실행될 가능성이 높으며 일반적으로 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="987620ca649576825067a69d7a28cf013a048b8f" translate="yes" xml:space="preserve">
          <source>This constructor is typically used by &lt;a href=&quot;secureclassloader&quot;&gt;&lt;code&gt;ClassLoaders&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;domaincombiner&quot;&gt;&lt;code&gt;DomainCombiners&lt;/code&gt;&lt;/a&gt; which delegate to &lt;code&gt;Policy&lt;/code&gt; to actively associate the permissions granted to this domain. This constructor affords the Policy provider the opportunity to augment the supplied PermissionCollection to reflect policy changes.</source>
          <target state="translated">이 생성자는 일반적 으로이 도메인에 부여 된 권한을 적극적으로 연결 하기 위해 &lt;code&gt;Policy&lt;/code&gt; 에 위임 하는 &lt;a href=&quot;secureclassloader&quot;&gt; &lt;code&gt;ClassLoaders&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;domaincombiner&quot;&gt; &lt;code&gt;DomainCombiners&lt;/code&gt; &lt;/a&gt; 에서 사용됩니다. 이 생성자는 정책 공급자에게 제공된 PermissionCollection을 기능 보강하여 정책 변경 사항을 반영 할 수있는 기회를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7184bcd5a1d86e2a9889b441339695840e27dc43" translate="yes" xml:space="preserve">
          <source>This constructor is used for serialization only and should not be used by subclasses.</source>
          <target state="translated">이 생성자는 직렬화에만 사용되며 서브 클래스에서는 사용하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="b028f2fa4efec2f15bc375cee951b1a87cf35e0e" translate="yes" xml:space="preserve">
          <source>This constructor is used internally, and generally not useful outside of subclasses.</source>
          <target state="translated">이 생성자는 내부적으로 사용되며 일반적으로 하위 클래스 외부에서는 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6115dedad8a8d6721c1d38fc08d58ea3d49255a6" translate="yes" xml:space="preserve">
          <source>This constructor loads the implementations of &lt;code&gt;ScriptEngineFactory&lt;/code&gt; visible to the given &lt;code&gt;ClassLoader&lt;/code&gt; using the service provider mechanism.</source>
          <target state="translated">이 생성자 는 서비스 제공 업체 메커니즘을 사용하여 지정된 &lt;code&gt;ClassLoader&lt;/code&gt; 에 표시되는 &lt;code&gt;ScriptEngineFactory&lt;/code&gt; 의 구현을로드합니다 .</target>
        </trans-unit>
        <trans-unit id="29ab51245f25d24b9f280d47ce7dc3b64450b618" translate="yes" xml:space="preserve">
          <source>This constructor must be called from a subclass that implements the given &lt;code&gt;mbeanInterface&lt;/code&gt;.</source>
          <target state="translated">이 생성자는 주어진 &lt;code&gt;mbeanInterface&lt;/code&gt; 를 구현하는 서브 클래스에서 호출되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="e142e8eef0812e41eb84ae79de6dff8c1c97d800" translate="yes" xml:space="preserve">
          <source>This constructor parses the given string exactly as specified by the grammar in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt;, Appendix A, &lt;b&gt;&lt;i&gt;except for the following deviations:&lt;/i&gt;&lt;/b&gt;</source>
          <target state="translated">이 생성자는 &lt;b&gt;&lt;i&gt;다음 편차를 제외하고&lt;/i&gt;&lt;/b&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt; RFC 2396&lt;/a&gt; , 부록 A 의 문법으로 지정된 문자열을 정확하게 구문 분석합니다 &lt;b&gt;&lt;i&gt;.&lt;/i&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="adb65b7c41caead29cfe80b1bbc06be169272957" translate="yes" xml:space="preserve">
          <source>This constructor recognizes the attribute type keywords defined in RFC 1779 and RFC 2253 (and listed in &lt;a href=&quot;#getName(java.lang.String)&quot;&gt;&lt;code&gt;getName(String format)&lt;/code&gt;&lt;/a&gt;), as well as the T, DNQ or DNQUALIFIER, SURNAME, GIVENNAME, INITIALS, GENERATION, EMAILADDRESS, and SERIALNUMBER keywords whose Object Identifiers (OIDs) are defined in RFC 5280. Any other attribute type must be specified as an OID.</source>
          <target state="translated">이 생성자는 RFC 1779 및 RFC 2253에 정의 된 속성 유형 키워드 (그리고 &lt;a href=&quot;#getName(java.lang.String)&quot;&gt; &lt;code&gt;getName(String format)&lt;/code&gt; &lt;/a&gt; 나열 됨 )뿐만 아니라 Object 식별자 (OID)는 RFC 5280에 정의되어 있습니다. 다른 속성 유형은 OID로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="5829254936972f7741b38d97218bb3035bb5947f" translate="yes" xml:space="preserve">
          <source>This constructor recognizes the attribute type keywords defined in RFC 1779 and RFC 2253 (and listed in &lt;a href=&quot;x500principal#getName-java.lang.String-&quot;&gt;&lt;code&gt;getName(String format)&lt;/code&gt;&lt;/a&gt;), as well as the T, DNQ or DNQUALIFIER, SURNAME, GIVENNAME, INITIALS, GENERATION, EMAILADDRESS, and SERIALNUMBER keywords whose Object Identifiers (OIDs) are defined in RFC 3280 and its successor. Any other attribute type must be specified as an OID.</source>
          <target state="translated">이 생성자는 RFC 1779 및 RFC 2253에 정의되고 &lt;a href=&quot;x500principal#getName-java.lang.String-&quot;&gt; &lt;code&gt;getName(String format)&lt;/code&gt; &lt;/a&gt; 나열된 속성 유형 키워드와 T, DNQ 또는 DNQUALIFIER, SURNAME, GIVENNAME, INITIALS, GENERATION, EMAILADDRESS 및 SERIALNUMBER 키워드를 인식합니다. 식별자 (OID)는 RFC 3280 및 후속 장치에 정의되어 있습니다. 다른 속성 유형은 OID로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="21a7e26aad0afc8627f1d4f301a879ac1c19ac98" translate="yes" xml:space="preserve">
          <source>This constructor recognizes the attribute type keywords specified in &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;X500Principal(String)&lt;/code&gt;&lt;/a&gt; and also recognizes additional keywords that have entries in the &lt;code&gt;keywordMap&lt;/code&gt; parameter. Keyword entries in the keywordMap take precedence over the default keywords recognized by &lt;code&gt;X500Principal(String)&lt;/code&gt;. Keywords MUST be specified in all upper-case, otherwise they will be ignored. Improperly specified keywords are ignored; however if a keyword in the name maps to an improperly specified Object Identifier (OID), an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. It is permissible to have 2 different keywords that map to the same OID.</source>
          <target state="translated">이 생성자는 &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;X500Principal(String)&lt;/code&gt; &lt;/a&gt; 지정된 속성 유형 키워드 를 인식하고 &lt;code&gt;keywordMap&lt;/code&gt; 매개 변수에 항목이있는 추가 키워드도 인식합니다 . keywordMap의 키워드 항목은 &lt;code&gt;X500Principal(String)&lt;/code&gt; 인식하는 기본 키워드보다 우선합니다 . 키워드는 모두 대문자로 지정해야합니다. 그렇지 않으면 무시됩니다. 부적절하게 지정된 키워드는 무시됩니다. 그러나 이름의 키워드가 부적절하게 지정된 OID (Object Identifier)에 매핑되면 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 발생합니다. 동일한 OID에 매핑되는 2 개의 서로 다른 키워드를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3c4bdb4dbc7d87b249553f001825a33e95f8368" translate="yes" xml:space="preserve">
          <source>This constructor recognizes the attribute type keywords specified in &lt;a href=&quot;x500principal#X500Principal-java.lang.String-&quot;&gt;&lt;code&gt;X500Principal(String)&lt;/code&gt;&lt;/a&gt; and also recognizes additional keywords that have entries in the &lt;code&gt;keywordMap&lt;/code&gt; parameter. Keyword entries in the keywordMap take precedence over the default keywords recognized by &lt;code&gt;X500Principal(String)&lt;/code&gt;. Keywords MUST be specified in all upper-case, otherwise they will be ignored. Improperly specified keywords are ignored; however if a keyword in the name maps to an improperly specified Object Identifier (OID), an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. It is permissible to have 2 different keywords that map to the same OID.</source>
          <target state="translated">이 생성자는 &lt;a href=&quot;x500principal#X500Principal-java.lang.String-&quot;&gt; &lt;code&gt;X500Principal(String)&lt;/code&gt; &lt;/a&gt; 지정된 속성 유형 키워드 를 인식하고 &lt;code&gt;keywordMap&lt;/code&gt; 매개 변수에 항목이있는 추가 키워드도 인식합니다 . keywordMap의 키워드 항목은 &lt;code&gt;X500Principal(String)&lt;/code&gt; 인식하는 기본 키워드보다 우선합니다 . 키워드는 모두 대문자로 지정해야하며, 그렇지 않으면 무시됩니다. 잘못 지정된 키워드는 무시됩니다. 그러나 이름의 키워드가 잘못 지정된 OID (Object Identifier)에 매핑되는 경우 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 발생합니다. 동일한 OID에 매핑되는 2 개의 서로 다른 키워드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="674cb6de9b9f808562fc5d10ead5493fe918288d" translate="yes" xml:space="preserve">
          <source>This constructor registers the list with the &lt;code&gt;ToolTipManager&lt;/code&gt;, allowing for tooltips to be provided by the cell renderers.</source>
          <target state="translated">이 생성자는 &lt;code&gt;ToolTipManager&lt;/code&gt; 에 목록을 등록 하여 셀 렌더러에서 도구 설명을 제공 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="a2378831b7ab81f14299f43e6f7b2cbd79836d27" translate="yes" xml:space="preserve">
          <source>This constructor sets the component's locale property to the value returned by &lt;code&gt;JComponent.getDefaultLocale&lt;/code&gt;.</source>
          <target state="translated">이 생성자는 컴포넌트의 로케일 속성을 &lt;code&gt;JComponent.getDefaultLocale&lt;/code&gt; 에 의해 반환 된 값으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="3324612f8694fd2739658f9155ecc8cb77a2baaf" translate="yes" xml:space="preserve">
          <source>This constructor should be used when the returned update count may exceed &lt;a href=&quot;../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 생성자는 반환 된 업데이트 수가 &lt;a href=&quot;../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; 를&lt;/a&gt; 초과 할 수있을 때 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ec6d430953812becb925deb46d6cd0b93deb47f2" translate="yes" xml:space="preserve">
          <source>This constructor simply calls &lt;code&gt;this(tabularType, 101, 0.75f);&lt;/code&gt;</source>
          <target state="translated">이 생성자는 간단히 &lt;code&gt;this(tabularType, 101, 0.75f);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6df0fc7f5d7676292778fc231fad82f46fd588de" translate="yes" xml:space="preserve">
          <source>This constructor supports the creation of arrays of primitive types when &lt;code&gt;primitiveArray&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 생성자는 &lt;code&gt;primitiveArray&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 일 때 기본 유형의 배열 작성을 지원 합니다 .</target>
        </trans-unit>
        <trans-unit id="50a6641300d23903b86c6a1ab55904501e9d6063" translate="yes" xml:space="preserve">
          <source>This constructor takes the name of a simple attribute, and Method objects for reading and writing the attribute.</source>
          <target state="translated">이 생성자는 간단한 속성의 이름과 속성을 읽고 쓰기위한 Method 객체를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a2bd749b772d5412d274ba42737fc115d4165831" translate="yes" xml:space="preserve">
          <source>This constructor takes the name of a simple attribute, and Method objects for reading and writing the attribute. The &lt;a href=&quot;descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt; of the constructed object will include fields contributed by any annotations on the &lt;code&gt;Method&lt;/code&gt; objects that contain the &lt;a href=&quot;descriptorkey&quot;&gt;&lt;code&gt;DescriptorKey&lt;/code&gt;&lt;/a&gt; meta-annotation.</source>
          <target state="translated">이 생성자는 간단한 속성의 이름과 속성을 읽고 쓰는 Method 객체를 사용합니다. &lt;a href=&quot;descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt; 구축 된 개체의은에 어떤 주석으로 기여 필드가 포함됩니다 &lt;code&gt;Method&lt;/code&gt; 포함하는 개체 &lt;a href=&quot;descriptorkey&quot;&gt; &lt;code&gt;DescriptorKey&lt;/code&gt; 를의&lt;/a&gt; 메타 주석을.</target>
        </trans-unit>
        <trans-unit id="60feeec4f3b0e05e826447d953796767286be805" translate="yes" xml:space="preserve">
          <source>This constructor takes the name of a simple property, and Method objects for reading and writing the property.</source>
          <target state="translated">이 생성자는 간단한 속성의 이름과 속성을 읽고 쓰는 Method 객체를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="71ffdcd4bbda6f1adb0921f38324c01a7a58717f" translate="yes" xml:space="preserve">
          <source>This constructor takes the name of a simple property, and method names for reading and writing the property, both indexed and non-indexed.</source>
          <target state="translated">이 생성자는 간단한 속성의 이름과 인덱스 된 속성과 인덱스되지 않은 속성을 읽고 쓰는 메서드 이름을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f96bbea6e82d670a2960bdaee669e1a6561f3897" translate="yes" xml:space="preserve">
          <source>This constructor takes the name of a simple property, and method names for reading and writing the property.</source>
          <target state="translated">이 생성자는 간단한 속성의 이름과 속성을 읽고 쓰는 메서드 이름을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c30b5126a0dbe3113fa3fc9de4938b914ac7ecfd" translate="yes" xml:space="preserve">
          <source>This constructor traverses the list of registered security Providers, starting with the most preferred Provider. A new &lt;code&gt;SecureRandom&lt;/code&gt; object encapsulating the &lt;code&gt;SecureRandomSpi&lt;/code&gt; implementation from the first Provider that supports a &lt;code&gt;SecureRandom&lt;/code&gt; (RNG) algorithm is returned. If none of the Providers support a RNG algorithm, then an implementation-specific default is returned.</source>
          <target state="translated">이 생성자는 가장 선호되는 공급자부터 시작하여 등록 된 보안 공급자 목록을 순회합니다. &lt;code&gt;SecureRandom&lt;/code&gt; (RNG) 알고리즘 을 지원하는 첫 번째 Provider 의 &lt;code&gt;SecureRandomSpi&lt;/code&gt; 구현을 캡슐화 하는 새 &lt;code&gt;SecureRandom&lt;/code&gt; 개체 가 반환됩니다. 제공자가 RNG 알고리즘을 지원하지 않는 경우 구현 별 기본값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2950627d050fbf4aacfb46652b359fe21e525577" translate="yes" xml:space="preserve">
          <source>This constructor traverses the list of registered security Providers, starting with the most preferred Provider. A new SecureRandom object encapsulating the SecureRandomSpi implementation from the first Provider that supports a SecureRandom (RNG) algorithm is returned. If none of the Providers support a RNG algorithm, then an implementation-specific default is returned.</source>
          <target state="translated">이 생성자는 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. RNG (SecureRandom) 알고리즘을 지원하는 첫 번째 제공자의 SecureRandomSpi 구현을 캡슐화하는 새로운 SecureRandom 오브젝트가 리턴됩니다. RNG 알고리즘을 지원하는 공급자가 없으면 구현 별 기본값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="adfcdc284850b3412f2a05f31cd94763cb38702e" translate="yes" xml:space="preserve">
          <source>This constructor will create an &lt;code&gt;ActivationGroupDesc&lt;/code&gt; with a &lt;code&gt;null&lt;/code&gt; group class name, which indicates the system's default &lt;code&gt;ActivationGroup&lt;/code&gt; implementation.</source>
          <target state="translated">이 생성자는 시스템의 기본 &lt;code&gt;ActivationGroup&lt;/code&gt; 구현 을 나타내는 &lt;code&gt;null&lt;/code&gt; 그룹 클래스 이름 을 사용하여 &lt;code&gt;ActivationGroupDesc&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="69338ec03b3ff4f12d4a0ea5976cc37e58d266a4" translate="yes" xml:space="preserve">
          <source>This constructor will create new cookie manager with default cookie store and accept policy. The effect is same as &lt;code&gt;CookieManager(null, null)&lt;/code&gt;.</source>
          <target state="translated">이 생성자는 기본 쿠키 저장소를 사용하여 새 쿠키 관리자를 만들고 정책을 수락합니다. 효과는 &lt;code&gt;CookieManager(null, null)&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="9dcde72d46b342f2e401974c393b36398fe41ec2" translate="yes" xml:space="preserve">
          <source>This constructor will not modify &lt;code&gt;environment&lt;/code&gt; or save a reference to it, but may save a clone. Caller should not modify mutable keys and values in &lt;code&gt;environment&lt;/code&gt; after it has been passed to the constructor.</source>
          <target state="translated">이 생성자는 &lt;code&gt;environment&lt;/code&gt; 수정 하거나 참조를 저장 하지 않지만 복제본을 저장할 수 있습니다. 호출자는 생성자에게 전달 된 후 &lt;code&gt;environment&lt;/code&gt; 에서 변경 가능한 키와 값을 수정해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="e5239d419576815e6d3fd5a0280090c36494314f" translate="yes" xml:space="preserve">
          <source>This constructor will not modify its parameters or save references to them, but may save a clone or copy. Caller should not modify mutable keys and values in &lt;code&gt;environment&lt;/code&gt; after it has been passed to the constructor.</source>
          <target state="translated">이 생성자는 매개 변수를 수정하거나 참조를 저장하지 않지만 복제본 또는 사본을 저장할 수 있습니다. 호출자는 생성자에게 전달 된 후 &lt;code&gt;environment&lt;/code&gt; 에서 변경 가능한 키와 값을 수정해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="39c31c0db7a71bca6f01472f1bc056b1709fd3d4" translate="yes" xml:space="preserve">
          <source>This constructor will throw &lt;code&gt;ActivationException&lt;/code&gt; if there is no current activation group for this VM. To create an &lt;code&gt;ActivationGroup&lt;/code&gt; use the &lt;code&gt;ActivationGroup.createGroup&lt;/code&gt; method.</source>
          <target state="translated">이 생성자는 이 VM에 대한 현재 활성 그룹이없는 경우 &lt;code&gt;ActivationException&lt;/code&gt; 을 발생시킵니다. &lt;code&gt;ActivationGroup&lt;/code&gt; 을 작성하려면 &lt;code&gt;ActivationGroup.createGroup&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="2a93bd5dd228a4f6e155855cce61f3b6dae8637f" translate="yes" xml:space="preserve">
          <source>This context may be unavailable in some environments, in which case this method returns null.</source>
          <target state="translated">일부 환경에서는이 컨텍스트를 사용할 수없는 경우이 메서드는 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3a5469730aa079e01b52999e3d7a52e877df3f3f" translate="yes" xml:space="preserve">
          <source>This context may be unavailable in some environments, in which case this method returns null. For example, when the underlying SSL provider does not provide an implementation of SSLSessionContext interface, this method returns null. A non-null session context is returned otherwise.</source>
          <target state="translated">일부 환경에서는이 컨텍스트를 사용할 수없는 경우이 메서드는 null을 반환합니다. 예를 들어, 기본 SSL 제공자가 SSLSessionContext 인터페이스의 구현을 제공하지 않으면이 메소드는 널을 리턴합니다. 그렇지 않으면 널이 아닌 세션 컨텍스트가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="247606e8b3fbc5633324ff02c81a2f88769cb681" translate="yes" xml:space="preserve">
          <source>This continues until a result resource bundle is instantiated or the list of candidate bundle names is exhausted. If no matching resource bundle is found, the default control's &lt;a href=&quot;resourcebundle.control#getFallbackLocale(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;getFallbackLocale&lt;/code&gt;&lt;/a&gt; method is called, which returns the current default locale. A new sequence of candidate locale names is generated using this locale and searched again, as above.</source>
          <target state="translated">이는 결과 자원 번들이 인스턴스화되거나 후보 번들 이름 목록이 소진 될 때까지 계속됩니다. 일치하는 리소스 번들이 없으면 기본 컨트롤의 &lt;a href=&quot;resourcebundle.control#getFallbackLocale(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;getFallbackLocale&lt;/code&gt; &lt;/a&gt; 메서드가 호출되어 현재 기본 로캘을 반환합니다. 이 로케일을 사용하여 새로운 순서의 후보 로케일 이름이 생성되고 위와 같이 다시 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="6a303455a8ad40e3d1dc7cd48ca709227da9c6d1" translate="yes" xml:space="preserve">
          <source>This continues until a result resource bundle is instantiated or the list of candidate bundle names is exhausted. If no matching resource bundle is found, the default control's &lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;getFallbackLocale&lt;/code&gt;&lt;/a&gt; method is called, which returns the current default locale. A new sequence of candidate locale names is generated using this locale and and searched again, as above.</source>
          <target state="translated">결과 자원 번들이 인스턴스화되거나 후보 번들 이름 목록이 소진 될 때까지 계속됩니다. 일치하는 자원 번들이 없으면 기본 제어의 &lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;getFallbackLocale&lt;/code&gt; &lt;/a&gt; 메소드가 호출되어 현재 기본 로케일을 리턴합니다. 이 로케일을 사용하여 새로운 후보 로케일 이름 시퀀스가 ​​생성되고 위와 같이 다시 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="ea08bbd3939285fbed86d6f72e8dbc924f99307f" translate="yes" xml:space="preserve">
          <source>This controller</source>
          <target state="translated">이 컨트롤러</target>
        </trans-unit>
        <trans-unit id="e43b55cf41f5a19a9cec030d4efb84aa99ae8707" translate="yes" xml:space="preserve">
          <source>This convenience constructor works as if by invoking the seven-argument constructor as follows:</source>
          <target state="translated">이 편리한 생성자는 다음과 같이 7 개의 인수 생성자를 호출하는 것처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="9075f20151584cebba01cddb065283cb4a394ede" translate="yes" xml:space="preserve">
          <source>This convenience factory method works as if by invoking the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;URI(String)&lt;/code&gt;&lt;/a&gt; constructor; any &lt;a href=&quot;urisyntaxexception&quot;&gt;&lt;code&gt;URISyntaxException&lt;/code&gt;&lt;/a&gt; thrown by the constructor is caught and wrapped in a new &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; object, which is then thrown.</source>
          <target state="translated">이 편리한 팩토리 메소드는 마치 &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;URI(String)&lt;/code&gt; &lt;/a&gt; 생성자를 호출하는 것처럼 작동합니다 . 생성자가 던진 모든 &lt;a href=&quot;urisyntaxexception&quot;&gt; &lt;code&gt;URISyntaxException&lt;/code&gt; &lt;/a&gt; 은 새로운 &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt; 객체 에서 포착되고 래핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="e2905c539276a08d74a854b790c4c1e5fc4554fa" translate="yes" xml:space="preserve">
          <source>This convenience factory method works as if by invoking the &lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt;&lt;code&gt;URI(String)&lt;/code&gt;&lt;/a&gt; constructor; any &lt;a href=&quot;urisyntaxexception&quot;&gt;&lt;code&gt;URISyntaxException&lt;/code&gt;&lt;/a&gt; thrown by the constructor is caught and wrapped in a new &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; object, which is then thrown.</source>
          <target state="translated">이 편리한 팩토리 메소드는 &lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt; &lt;code&gt;URI(String)&lt;/code&gt; &lt;/a&gt; 생성자를 호출하는 것처럼 작동합니다 . 생성자에 의해 발생 된 모든 &lt;a href=&quot;urisyntaxexception&quot;&gt; &lt;code&gt;URISyntaxException&lt;/code&gt; &lt;/a&gt; 은 새로운 &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt; 객체 에 포착되어 래핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="df0bab596c9556275eb74ca2b80786eff95ce9a7" translate="yes" xml:space="preserve">
          <source>This convenience method calls the static method.</source>
          <target state="translated">이 편리한 메서드는 정적 메서드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="0d31f09aeac9c27aecb5f1a24836c3c9e58d53d4" translate="yes" xml:space="preserve">
          <source>This convenience method is equivalent to:</source>
          <target state="translated">이 편리한 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="961aad3e67917d2801c0339f0973a3c223f4cd59" translate="yes" xml:space="preserve">
          <source>This convenience method simply locates the extension class loader, call it &lt;code&gt;&lt;i&gt;extClassLoader&lt;/i&gt;&lt;/code&gt;, and then returns</source>
          <target state="translated">이 편리한 메소드는 단순히 확장 클래스 로더를 찾아 &lt;code&gt;&lt;i&gt;extClassLoader&lt;/i&gt;&lt;/code&gt; 라고합니다 &lt;i&gt;.&lt;/i&gt; 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="08a94913adfaef836e40078e7eba1888a9301153" translate="yes" xml:space="preserve">
          <source>This convenience method works as if by invoking the &lt;a href=&quot;#open()&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; method, invoking the &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method upon the resulting socket channel, passing it &lt;code&gt;remote&lt;/code&gt;, and then returning that channel.</source>
          <target state="translated">이 편리한 메서드는 마치 &lt;a href=&quot;#open()&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 메서드를 호출 하고 결과 소켓 채널 에서 &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 &lt;code&gt;remote&lt;/code&gt; 를 전달한 다음 해당 채널을 반환하는 것처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="5c05518b3ead6f932cc65725d296d95a87175e51" translate="yes" xml:space="preserve">
          <source>This convenience method works as if by invoking the &lt;a href=&quot;socketchannel#open--&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; method, invoking the &lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method upon the resulting socket channel, passing it &lt;code&gt;remote&lt;/code&gt;, and then returning that channel.</source>
          <target state="translated">이 편리한 메소드는 &lt;a href=&quot;socketchannel#open--&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 메소드를 호출하고 , 결과 소켓 채널 에서 &lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 메소드를 호출하고 , &lt;code&gt;remote&lt;/code&gt; 를 전달한 다음 해당 채널을 리턴하는 것처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="0a4d2be12aeeb9ba8f11f546fe7ee8be73335282" translate="yes" xml:space="preserve">
          <source>This convenience method works as if by invoking the two-argument counterpart as follows:</source>
          <target state="translated">이 편리한 메소드는 다음과 같이 두 개의 인수를 호출하는 것처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="3dbcd28b59a4716a23a4a314e907fee46ddeb81d" translate="yes" xml:space="preserve">
          <source>This convenience method works as if invoking it were equivalent to evaluating the expression &lt;a href=&quot;#resolve(java.net.URI)&quot;&gt;&lt;code&gt;resolve&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(URI.&lt;/code&gt;&lt;a href=&quot;#create(java.lang.String)&quot;&gt;&lt;code&gt;create&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(str))&lt;/code&gt;.</source>
          <target state="translated">이 편리한 메서드는 호출이 &lt;a href=&quot;#resolve(java.net.URI)&quot;&gt; &lt;code&gt;resolve&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(URI.&lt;/code&gt; &lt;a href=&quot;#create(java.lang.String)&quot;&gt; &lt;code&gt;create&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(str))&lt;/code&gt; 식을 평가하는 것과 동일한 것처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="d93db664b793b72aa6d1fccf0c7706670b6c7ee8" translate="yes" xml:space="preserve">
          <source>This convenience method works as if invoking it were equivalent to evaluating the expression &lt;a href=&quot;uri#resolve-java.net.URI-&quot;&gt;&lt;code&gt;resolve&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(URI.&lt;/code&gt;&lt;a href=&quot;uri#create-java.lang.String-&quot;&gt;&lt;code&gt;create&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(str))&lt;/code&gt;.</source>
          <target state="translated">이 편리한 메소드는 호출이 표현식 &lt;a href=&quot;uri#resolve-java.net.URI-&quot;&gt; &lt;code&gt;resolve&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(URI.&lt;/code&gt; &lt;a href=&quot;uri#create-java.lang.String-&quot;&gt; &lt;code&gt;create&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(str))&lt;/code&gt; 를 평가하는 것과 동일한 방식으로 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="15946e6fa2cad09afaf39bcdc23236ae9c3214ad" translate="yes" xml:space="preserve">
          <source>This convenience method works as if invoking it were equivalent to evaluating the expression &lt;code&gt;new URL(this.toString())&lt;/code&gt; after first checking that this URI is absolute.</source>
          <target state="translated">이 편리한 메소드는 &lt;code&gt;new URL(this.toString())&lt;/code&gt; 표현식을 평가하는 것과 동일한 방식으로 작동합니다. 이 URI가 절대적인지 최초로 확인한 후, 기능을합니다.</target>
        </trans-unit>
        <trans-unit id="6c966a8c93fe8af2395da9d30bb726f76a7b3254" translate="yes" xml:space="preserve">
          <source>This convention does not apply to the unnamed package, whose associated preference node is &lt;code&gt;&amp;lt;unnamed&amp;gt;&lt;/code&gt;. This node is not intended for long term use, but for convenience in the early development of programs that do not yet belong to a package, and for &quot;throwaway&quot; programs.</source>
          <target state="translated">이 규칙은 연관된 환경 설정 노드가 &lt;code&gt;&amp;lt;unnamed&amp;gt;&lt;/code&gt; 인 이름이없는 패키지에는 적용되지 않습니다 . 이 노드는 장기간 사용하기위한 것이 아니라, 아직 패키지에 속하지 않은 프로그램의 초기 개발 및 &quot;throwaway&quot;프로그램의 편의를위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="3feaac56dc0881e07d78a635d480747dcbac310a" translate="yes" xml:space="preserve">
          <source>This conversion may be applied to &lt;code&gt;char&lt;/code&gt; and &lt;a href=&quot;../lang/character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt;. It may also be applied to the types &lt;code&gt;byte&lt;/code&gt;, &lt;a href=&quot;../lang/byte&quot;&gt;&lt;code&gt;Byte&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;short&lt;/code&gt;, and &lt;a href=&quot;../lang/short&quot;&gt;&lt;code&gt;Short&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;int&lt;/code&gt; and &lt;a href=&quot;../lang/integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;../lang/character#isValidCodePoint(int)&quot;&gt;&lt;code&gt;Character.isValidCodePoint(int)&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;. If it returns &lt;code&gt;false&lt;/code&gt; then an &lt;a href=&quot;illegalformatcodepointexception&quot;&gt;&lt;code&gt;IllegalFormatCodePointException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">이 변환은 &lt;code&gt;char&lt;/code&gt; 및 &lt;a href=&quot;../lang/character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; 에&lt;/a&gt; 적용될 수 있습니다 . &lt;a href=&quot;../lang/character#isValidCodePoint(int)&quot;&gt; &lt;code&gt;Character.isValidCodePoint(int)&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;true&lt;/code&gt; 를 반환 할 때 &lt;code&gt;byte&lt;/code&gt; , &lt;a href=&quot;../lang/byte&quot;&gt; &lt;code&gt;Byte&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;short&lt;/code&gt; 및 &lt;a href=&quot;../lang/short&quot;&gt; &lt;code&gt;Short&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;int&lt;/code&gt; 및 &lt;a href=&quot;../lang/integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 유형에도 적용될 수 있습니다 . &lt;code&gt;false&lt;/code&gt; 를 반환 하면 &lt;a href=&quot;illegalformatcodepointexception&quot;&gt; &lt;code&gt;IllegalFormatCodePointException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ce51ac5c1f1d9f1914dc00d376fab0eb5e451b82" translate="yes" xml:space="preserve">
          <source>This conversion may be applied to &lt;code&gt;char&lt;/code&gt; and &lt;a href=&quot;../lang/character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt;. It may also be applied to the types &lt;code&gt;byte&lt;/code&gt;, &lt;a href=&quot;../lang/byte&quot;&gt;&lt;code&gt;Byte&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;short&lt;/code&gt;, and &lt;a href=&quot;../lang/short&quot;&gt;&lt;code&gt;Short&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;int&lt;/code&gt; and &lt;a href=&quot;../lang/integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;../lang/character#isValidCodePoint-int-&quot;&gt;&lt;code&gt;Character.isValidCodePoint(int)&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;. If it returns &lt;code&gt;false&lt;/code&gt; then an &lt;a href=&quot;illegalformatcodepointexception&quot;&gt;&lt;code&gt;IllegalFormatCodePointException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">이 변환은 &lt;code&gt;char&lt;/code&gt; 및 &lt;a href=&quot;../lang/character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; 에&lt;/a&gt; 적용될 수 있습니다 . 그것은 또한 유형에 적용 할 수있다 &lt;code&gt;byte&lt;/code&gt; , &lt;a href=&quot;../lang/byte&quot;&gt; &lt;code&gt;Byte&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;short&lt;/code&gt; , 그리고 &lt;a href=&quot;../lang/short&quot;&gt; &lt;code&gt;Short&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;int&lt;/code&gt; 및 &lt;a href=&quot;../lang/integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 때 &lt;a href=&quot;../lang/character#isValidCodePoint-int-&quot;&gt; &lt;code&gt;Character.isValidCodePoint(int)&lt;/code&gt; &lt;/a&gt; 반환 &lt;code&gt;true&lt;/code&gt; . &lt;code&gt;false&lt;/code&gt; 를 반환 하면 &lt;a href=&quot;illegalformatcodepointexception&quot;&gt; &lt;code&gt;IllegalFormatCodePointException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d4e6898eb36b95cab7a561633153c21d39223d0f" translate="yes" xml:space="preserve">
          <source>This conversion may be applied to &lt;code&gt;long&lt;/code&gt;, &lt;a href=&quot;../lang/long&quot;&gt;&lt;code&gt;Long&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../time/temporal/temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 변환은 &lt;code&gt;long&lt;/code&gt; , &lt;a href=&quot;../lang/long&quot;&gt; &lt;code&gt;Long&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../time/temporal/temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; 에&lt;/a&gt; 적용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="517b8aa20552c61a91f79dd2c8f06ad04f21dd18" translate="yes" xml:space="preserve">
          <source>This copies attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">이것은 속성 값과 &lt;code&gt;object&lt;/code&gt; 값이 동일합니다.</target>
        </trans-unit>
        <trans-unit id="3af1152919c270dd3746bf00c4fdea0c682779b6" translate="yes" xml:space="preserve">
          <source>This copies supported attribute's members and &lt;code&gt;object&lt;/code&gt;'s members are the same.</source>
          <target state="translated">지원되는 속성의 멤버와 &lt;code&gt;object&lt;/code&gt; 의 멤버가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="fd5b477116333c062818d408dd687a171f4669fc" translate="yes" xml:space="preserve">
          <source>This corresponds to CIM Associators and AssociatorNames operations.</source>
          <target state="translated">이는 CIM 어 소시 에이터 및 어 소시 에이터 이름 조작에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="bf9269a6290ea4191b0a638f2e9f63ddecac209c" translate="yes" xml:space="preserve">
          <source>This corresponds to the &lt;code&gt;size&lt;/code&gt; parameter to the &lt;code&gt;Font&lt;/code&gt; constructor.</source>
          <target state="translated">이것은 &lt;code&gt;Font&lt;/code&gt; 생성자 의 &lt;code&gt;size&lt;/code&gt; 매개 변수에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="ee5e4096d63d47ee9154103b2f601ede84042c5c" translate="yes" xml:space="preserve">
          <source>This corresponds to the CIM &quot;References&quot; and &quot;ReferenceNames&quot; operations.</source>
          <target state="translated">이는 CIM &quot;참조&quot;및 &quot;ReferenceNames&quot;작업에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="88e2a2721ee081855e9e6e656bf08f7a259592ce" translate="yes" xml:space="preserve">
          <source>This corresponds to the definition of &quot;error&quot; in section 1.2 of the W3C XML 1.0 Recommendation. For example, a validating parser would use this callback to report the violation of a validity constraint. The default behaviour is to take no action.</source>
          <target state="translated">이것은 W3C XML 1.0 권장 사항의 섹션 1.2에있는 &quot;오류&quot;의 정의에 해당합니다. 예를 들어, 유효성 검사 파서는이 콜백을 사용하여 유효성 제약 위반을보고합니다. 기본 동작은 아무 작업도 수행하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="13e234d67931c555f9d2c370c8bd22b23d9e1861" translate="yes" xml:space="preserve">
          <source>This corresponds to the definition of &quot;fatal error&quot; in section 1.2 of the W3C XML 1.0 Recommendation. For example, a parser would use this callback to report the violation of a well-formedness constraint.</source>
          <target state="translated">이는 W3C XML 1.0 권장 사항의 섹션 1.2에있는 &quot;치명적인 오류&quot;의 정의에 해당합니다. 예를 들어 파서는이 콜백을 사용하여 올바른 형식 제약 조건의 위반을보고합니다.</target>
        </trans-unit>
        <trans-unit id="c6ac7794067cd3eb8acabad21214d2454bf4c408" translate="yes" xml:space="preserve">
          <source>This corresponds to the transform passed to &lt;code&gt;Font.deriveFont(AffineTransform)&lt;/code&gt;. Since that transform is mutable and &lt;code&gt;TextAttribute&lt;/code&gt; values must not be, the &lt;code&gt;TransformAttribute&lt;/code&gt; wrapper class is used.</source>
          <target state="translated">이것은 &lt;code&gt;Font.deriveFont(AffineTransform)&lt;/code&gt; 전달 된 변환에 해당합니다 . 해당 변환은 변경 가능하고 &lt;code&gt;TextAttribute&lt;/code&gt; 값 은 변경 되지 않아야하므로 &lt;code&gt;TransformAttribute&lt;/code&gt; 래퍼 클래스가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="738c8cbd8e7c6c73686b87995d0815d68870584e" translate="yes" xml:space="preserve">
          <source>This could include setting a security provider or defining the location of the system-wide security policy. Malicious code that has permission to set a new security provider may set a rogue provider that steals confidential information such as cryptographic private keys. In addition, malicious code with permission to set the location of the system-wide security policy may point it to a security policy that grants the attacker all the necessary permissions it requires to successfully mount an attack on the system.</source>
          <target state="translated">여기에는 보안 공급자 설정 또는 시스템 전체 보안 정책의 위치 정의가 포함될 수 있습니다. 새로운 보안 공급자를 설정할 권한이있는 악성 코드는 암호화 개인 키와 같은 기밀 정보를 훔치는 사기 공급자를 설정할 수 있습니다. 또한 시스템 전체 보안 정책의 위치를 ​​설정할 권한이있는 악성 코드는 공격자가 시스템에 대한 공격을 성공적으로 수행하는 데 필요한 모든 권한을 공격자에게 부여하는 보안 정책을 가리킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d1f3f66bf6cd5f1484e44e133a329f3b237ecf4" translate="yes" xml:space="preserve">
          <source>This could print sensitive information to a printer, or simply waste paper.</source>
          <target state="translated">민감한 정보를 프린터로 인쇄하거나 용지를 낭비 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56059c121f9987e3f7ae9b88d2b190820643517b" translate="yes" xml:space="preserve">
          <source>This counts the AM/PM within the day, from 0 (AM) to 1 (PM). This field has the same meaning for all calendar systems.</source>
          <target state="translated">하루 중 AM / PM을 0 (AM)에서 1 (PM)까지 계산합니다. 이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="e3ef439b9bf3ee683a33107641da83c71876df33" translate="yes" xml:space="preserve">
          <source>This counts the hour within the AM/PM, from 0 to 11. This is the hour that would be observed on a standard 12-hour digital clock. This field has the same meaning for all calendar systems.</source>
          <target state="translated">AM / PM 내의 시간을 0에서 11까지로 계산합니다. 이것은 표준 12 시간 디지털 시계에서 관찰되는 시간입니다. 이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="6fe80e8a8118bcfbe3a79872753265c046bd1b5b" translate="yes" xml:space="preserve">
          <source>This counts the hour within the AM/PM, from 1 to 12. This is the hour that would be observed on a standard 12-hour analog wall clock. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이것은 AM / PM 내에서 1에서 12 사이의 시간을 계산합니다. 이것은 표준 12 시간 아날로그 벽시계에서 관찰되는 시간입니다. 이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="1c3e1a95914c08cc20e9ca89abd13423d42d4f17" translate="yes" xml:space="preserve">
          <source>This counts the hour within the AM/PM, from 1 to 24. This is the hour that would be observed on a 24-hour analog wall clock. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이것은 AM / PM 내에서 1에서 24까지의 시간을 계산합니다. 이것은 24 시간 아날로그 벽시계에서 관찰되는 시간입니다. 이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="93acc55f001469448a79a98bd583dba09908cbb3" translate="yes" xml:space="preserve">
          <source>This counts the hour within the day, from 0 to 23. This is the hour that would be observed on a standard 24-hour digital clock. This field has the same meaning for all calendar systems.</source>
          <target state="translated">하루 중 시간을 0부터 23까지로 계산합니다. 표준 24 시간 디지털 시계에서 관찰되는 시간입니다. 이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="ccda4445644e593309b3c70c101124a1aef0bbe0" translate="yes" xml:space="preserve">
          <source>This counts the hour within the day, from 1 to 24. This is the hour that would be observed on a 24-hour analog wall clock. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이것은 하루 중 1에서 24까지의 시간을 계산합니다. 이것은 24 시간 아날로그 벽시계에서 관찰되는 시간입니다. 이 필드는 모든 달력 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="aaaf34f2441fdf24228214e7e0fc4f00e0479120" translate="yes" xml:space="preserve">
          <source>This counts the microsecond within the day, from 0 to (24 * 60 * 60 * 1,000,000) - 1. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이것은 하루에서 0에서 (24 * 60 * 60 * 1,000,000)-1까지의 마이크로 초를 계산합니다.이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="ed9cd0e15650f622b83c25879c0c386438c1be2a" translate="yes" xml:space="preserve">
          <source>This counts the microsecond within the second, from 0 to 999,999. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이것은 0에서 999,999까지의 초 내에 마이크로 초를 계산합니다. 이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="8c759c4bd143487bc003030cfe712876e38aadf0" translate="yes" xml:space="preserve">
          <source>This counts the millisecond within the day, from 0 to (24 * 60 * 60 * 1,000) - 1. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이 값은 0에서 (24 * 60 * 60 * 1,000)-1까지 하루의 밀리 초를 계산합니다.이 필드는 모든 달력 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="be94fb9658ae99a66f454f2820f8c3e09301156d" translate="yes" xml:space="preserve">
          <source>This counts the millisecond within the second, from 0 to 999. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이것은 0에서 999까지의 초 안에 밀리 초를 계산합니다.이 필드는 모든 달력 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="43edac64e538d85f435f090811bae70930ae8db5" translate="yes" xml:space="preserve">
          <source>This counts the minute within the day, from 0 to (24 * 60) - 1. This field has the same meaning for all calendar systems.</source>
          <target state="translated">하루 중 분을 0에서 (24 * 60)-1까지로 계산합니다.이 필드는 모든 달력 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="a8323702dacee178eecb33fed1d641d126ebb978" translate="yes" xml:space="preserve">
          <source>This counts the minute within the hour, from 0 to 59. This field has the same meaning for all calendar systems.</source>
          <target state="translated">시간을 분 단위로 0에서 59까지 계산합니다.이 필드는 모든 달력 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="9f3c3d601c91ad5aa95c1303425e41e79db48027" translate="yes" xml:space="preserve">
          <source>This counts the nanosecond within the day, from 0 to (24 * 60 * 60 * 1,000,000,000) - 1. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이것은 0에서 (24 * 60 * 60 * 1,000,000,000)-1까지 하루 안에 나노초를 계산합니다.이 필드는 모든 달력 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="bfb02a38bb6f4039f42484bd49eb48f7c08dae23" translate="yes" xml:space="preserve">
          <source>This counts the nanosecond within the second, from 0 to 999,999,999. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이것은 0에서 999,999,999까지의 초 안에 나노초를 계산합니다. 이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="ab8b66611e87e40eefc297e069ff363056ed146a" translate="yes" xml:space="preserve">
          <source>This counts the second within the day, from 0 to (24 * 60 * 60) - 1. This field has the same meaning for all calendar systems.</source>
          <target state="translated">이것은 하루 중 초를 0부터 (24 * 60 * 60)-1까지로 계산합니다.이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="81631a2f635e111ef578d2ae44c5b510837d0a0a" translate="yes" xml:space="preserve">
          <source>This counts the second within the minute, from 0 to 59. This field has the same meaning for all calendar systems.</source>
          <target state="translated">분 단위의 초를 0에서 59까지로 계산합니다.이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="e974dd4ac60b559ef3795af72f784f9e970e497d" translate="yes" xml:space="preserve">
          <source>This creates a local date based on the specified instant. First, the offset from UTC/Greenwich is obtained using the zone ID and instant, which is simple as there is only one valid offset for each instant. Then, the instant and offset are used to calculate the local date.</source>
          <target state="translated">이것은 지정된 순간을 기반으로 현지 날짜를 만듭니다. 첫째, UTC / 그리니치로부터의 오프셋은 영역 ID 및 인스턴트를 사용하여 얻습니다. 이는 각 인스턴트에 대해 유효한 오프셋이 하나뿐이므로 간단합니다. 그런 다음 인스턴트 및 오프셋을 사용하여 현지 날짜를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="ce69caaa873db2922e22167e363b379f2568dbbb" translate="yes" xml:space="preserve">
          <source>This creates a local date-time based on the specified instant. First, the offset from UTC/Greenwich is obtained using the zone ID and instant, which is simple as there is only one valid offset for each instant. Then, the instant and offset are used to calculate the local date-time.</source>
          <target state="translated">지정된 순간을 기준으로 현지 날짜-시간을 만듭니다. 첫째, UTC / 그리니치에서의 오프셋은 영역 ID와 인스턴트를 사용하여 얻습니다. 이는 각 인스턴트마다 유효한 오프셋이 하나뿐이므로 간단합니다. 그런 다음 인스턴트 및 오프셋을 사용하여 현지 날짜-시간을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="bc02da02023673dff337a0976e8d65ac6b332656" translate="yes" xml:space="preserve">
          <source>This creates a local time based on the specified instant. First, the offset from UTC/Greenwich is obtained using the zone ID and instant, which is simple as there is only one valid offset for each instant. Then, the instant and offset are used to calculate the local time.</source>
          <target state="translated">이것은 지정된 순간을 기반으로 현지 시간을 만듭니다. 첫째, UTC / 그리니치로부터의 오프셋은 영역 ID 및 인스턴트를 사용하여 얻습니다. 이는 각 인스턴트에 대해 유효한 오프셋이 하나뿐이므로 간단합니다. 그런 다음 순간 및 오프셋을 사용하여 현지 시간을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="23793068cf5b1f2a4bed9c9888d4c1aad09d2a4b" translate="yes" xml:space="preserve">
          <source>This creates a new SinglePixelPackedSampleModel with a subset of the bands of this SinglePixelPackedSampleModel.</source>
          <target state="translated">이것은이 SinglePixelPackedSampleModel의 밴드의 부분 집합으로 새로운 SinglePixelPackedSampleModel을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="28d386045afad9f5a2a7a62a559011cbcc3d8575" translate="yes" xml:space="preserve">
          <source>This creates a new SinglePixelPackedSampleModel with a subset of the bands of this SinglePixelPackedSampleModel. The new SinglePixelPackedSampleModel can be used with any DataBuffer that the existing SinglePixelPackedSampleModel can be used with. The new SinglePixelPackedSampleModel/DataBuffer combination will represent an image with a subset of the bands of the original SinglePixelPackedSampleModel/DataBuffer combination.</source>
          <target state="translated">이것은이 SinglePixelPackedSampleModel의 밴드의 부분 집합으로 새로운 SinglePixelPackedSampleModel을 생성합니다. 새로운 SinglePixelPackedSampleModel은 기존 SinglePixelPackedSampleModel과 함께 사용할 수있는 모든 DataBuffer와 함께 사용할 수 있습니다. 새로운 SinglePixelPackedSampleModel / DataBuffer 조합은 원래 SinglePixelPackedSampleModel / DataBuffer 조합 밴드의 하위 집합이있는 이미지를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="90323efa29ebdfa1f9cb7fe824363f028ecfb405" translate="yes" xml:space="preserve">
          <source>This creates a progress monitor to monitor the progress of reading the input stream. If it's taking a while, a ProgressDialog will be popped up to inform the user. If the user hits the Cancel button an InterruptedIOException will be thrown on the next read. All the right cleanup is done when the stream is closed.</source>
          <target state="translated">이렇게하면 입력 스트림 읽기 진행률을 모니터링하는 진행률 모니터가 생성됩니다. 시간이 걸리면 ProgressDialog가 팝업되어 사용자에게 알립니다. 사용자가 취소 버튼을 누르면 다음 읽기에서 InterruptedIOException이 발생합니다. 스트림이 닫히면 모든 올바른 정리가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="8bcea9f628768ea526e021b95c9f0c965440ecf6" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ChronoZonedDateTime&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 존 날짜-시간을 작성합니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="38a5133a52bca7e9ee76cad776d631f479fb26da" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time by &lt;a href=&quot;chrono/chronolocaldatetime#toInstant(java.time.ZoneOffset)&quot;&gt;&lt;code&gt;combining&lt;/code&gt;&lt;/a&gt; the &lt;code&gt;LocalDateTime&lt;/code&gt; and &lt;code&gt;ZoneOffset&lt;/code&gt;. This combination uniquely specifies an instant without ambiguity.</source>
          <target state="translated">이렇게하면 &lt;code&gt;LocalDateTime&lt;/code&gt; 및 &lt;code&gt;ZoneOffset&lt;/code&gt; 을 &lt;a href=&quot;chrono/chronolocaldatetime#toInstant(java.time.ZoneOffset)&quot;&gt; &lt;code&gt;combining&lt;/code&gt; &lt;/a&gt; 하여 존 날짜-시간이 생성됩니다 . 이 조합은 모호하지 않은 순간을 고유하게 지정합니다.</target>
        </trans-unit>
        <trans-unit id="1075baa34279992a9a891fe14095dfb63f09dd58" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time by &lt;a href=&quot;chrono/chronolocaldatetime#toInstant-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;combining&lt;/code&gt;&lt;/a&gt; the &lt;code&gt;LocalDateTime&lt;/code&gt; and &lt;code&gt;ZoneOffset&lt;/code&gt;. This combination uniquely specifies an instant without ambiguity.</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; 과 &lt;code&gt;ZoneOffset&lt;/code&gt; 을 &lt;a href=&quot;chrono/chronolocaldatetime#toInstant-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;combining&lt;/code&gt; &lt;/a&gt; 하여 존 날짜-시간을 작성합니다 . 이 조합은 모호하지 않은 순간을 고유하게 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d7bd41c1bc48ec1280338d5697120083dfd49092" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time ensuring that the offset is valid for the local date-time according to the rules of the specified zone. If the offset is invalid, an exception is thrown.</source>
          <target state="translated">이렇게하면 존 지정 날짜-시간이 생성되어 지정된 존의 규칙에 따라 현지 날짜-시간에 오프셋이 유효하게됩니다. 오프셋이 유효하지 않은 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b7fd3ca00565a2d68e2676c388817128aadb75ff" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time matching the input local date and time as closely as possible. Time-zone rules, such as daylight savings, mean that not every local date-time is valid for the specified zone, thus the local date-time may be adjusted.</source>
          <target state="translated">이렇게하면 입력 로컬 날짜 및 시간과 최대한 일치하는 영역 날짜-시간이 생성됩니다. 일광 절약 시간제와 같은 시간대 규칙은 모든 지역 날짜-시간이 지정된 지역에 대해 유효한 것은 아니므로 지역 날짜-시간이 조정될 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="953a8135d4549ccac3a13d7e66097776f2155026" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time matching the input local date-time as closely as possible. Time-zone rules, such as daylight savings, mean that not every local date-time is valid for the specified zone, thus the local date-time may be adjusted.</source>
          <target state="translated">이렇게하면 입력 로컬 날짜-시간과 최대한 일치하는 영역 날짜-시간이 생성됩니다. 일광 절약 시간제와 같은 시간대 규칙은 모든 지역 날짜-시간이 지정된 지역에 대해 유효한 것은 아니므로 지역 날짜-시간이 조정될 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="0e6f04a6cf3de17c5a71327d692cb29d03417486" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time matching the local date-time of the seven specified fields as closely as possible. Time-zone rules, such as daylight savings, mean that not every local date-time is valid for the specified zone, thus the local date-time may be adjusted.</source>
          <target state="translated">이렇게하면 7 개의 지정된 필드의 현지 날짜-시간과 최대한 일치하는 영역 날짜-시간이 생성됩니다. 일광 절약 시간제와 같은 시간대 규칙은 모든 지역 날짜-시간이 지정된 지역에 대해 유효한 것은 아니므로 지역 날짜-시간이 조정될 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="eed8d3f8fab68f8ab7933138397a462a4ffb7c2d" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time with the same instant as that specified. Calling &lt;a href=&quot;chrono/chronozoneddatetime#toInstant()&quot;&gt;&lt;code&gt;ChronoZonedDateTime.toInstant()&lt;/code&gt;&lt;/a&gt; will return an instant equal to the one used here.</source>
          <target state="translated">이렇게하면 지정된 것과 동일한 순간으로 존 날짜-시간이 생성됩니다. &lt;a href=&quot;chrono/chronozoneddatetime#toInstant()&quot;&gt; &lt;code&gt;ChronoZonedDateTime.toInstant()&lt;/code&gt; &lt;/a&gt; 를 호출 하면 여기에 사용 된 것과 동일한 순간이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="ec637bbf2a108c08978e643f234e8091c4ff5af4" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time with the same instant as that specified. Calling &lt;a href=&quot;chrono/chronozoneddatetime#toInstant--&quot;&gt;&lt;code&gt;ChronoZonedDateTime.toInstant()&lt;/code&gt;&lt;/a&gt; will return an instant equal to the one used here.</source>
          <target state="translated">이렇게하면 지정된 것과 동일한 순간으로 존 날짜-시간이 작성됩니다. &lt;a href=&quot;chrono/chronozoneddatetime#toInstant--&quot;&gt; &lt;code&gt;ChronoZonedDateTime.toInstant()&lt;/code&gt; &lt;/a&gt; 를 호출 하면 여기에 사용 된 것과 동일한 인스턴트가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3fab5c46a5121a4fea33b03ffa65d0ffb495eccf" translate="yes" xml:space="preserve">
          <source>This creates an instance based on years, months and days.</source>
          <target state="translated">연도, 월, 일을 기준으로 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0a4dbd162ddc2407fbd25bcb8835bfd225c4bd3f" translate="yes" xml:space="preserve">
          <source>This creates an offset date-time using the local date-time and offset. The zone ID is ignored.</source>
          <target state="translated">로컬 날짜-시간 및 오프셋을 사용하여 오프셋 날짜-시간을 만듭니다. 영역 ID는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="91124742156d682ef8b5ae91dc90e7ced43f48c5" translate="yes" xml:space="preserve">
          <source>This creates an offset date-time with the same instant as that specified. Finding the offset from UTC/Greenwich is simple as there is only one valid offset for each instant.</source>
          <target state="translated">지정된 것과 같은 순간으로 오프셋 날짜-시간을 만듭니다. 각 순간마다 하나의 유효한 오프셋 만 있기 때문에 UTC / 그리니치에서 오프셋을 찾는 것은 간단합니다.</target>
        </trans-unit>
        <trans-unit id="ee109c8a80a69358ebb8d236e545d87408ba6bc2" translate="yes" xml:space="preserve">
          <source>This creates an offset date-time with the seven specified fields.</source>
          <target state="translated">7 개의 지정된 필드로 오프셋 날짜-시간을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="280ff15192faef86311adf588490a2dd4c2e4df0" translate="yes" xml:space="preserve">
          <source>This creates an offset date-time with the specified local date, time and offset.</source>
          <target state="translated">지정된 현지 날짜, 시간 및 오프셋을 사용하여 오프셋 날짜-시간을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0e142b1d221e02f3fbbd73e720e2868c0f523965" translate="yes" xml:space="preserve">
          <source>This creates an offset date-time with the specified local date-time and offset.</source>
          <target state="translated">지정된 현지 날짜-시간 및 오프셋을 사용하여 오프셋 날짜-시간을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="009cd056837bc464fa749ee52c6794f2888f836a" translate="yes" xml:space="preserve">
          <source>This creates an offset time with the four specified fields.</source>
          <target state="translated">지정된 네 개의 필드를 사용하여 오프셋 시간을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="35745461f41c68ef806d542d5e2fcb1f3614a590" translate="yes" xml:space="preserve">
          <source>This creates an offset time with the same instant as that specified. Finding the offset from UTC/Greenwich is simple as there is only one valid offset for each instant.</source>
          <target state="translated">지정된 것과 같은 순간으로 오프셋 시간을 만듭니다. 각 순간마다 하나의 유효한 오프셋 만 있기 때문에 UTC / 그리니치에서 오프셋을 찾는 것은 간단합니다.</target>
        </trans-unit>
        <trans-unit id="455f1f9ed7b865664c2f0e4e028ac4d8c817a274" translate="yes" xml:space="preserve">
          <source>This creates the simplest possible &lt;code&gt;ZonedDateTime&lt;/code&gt; using the offset as the zone ID.</source>
          <target state="translated">오프셋을 영역 ID로 사용하여 가장 간단한 &lt;code&gt;ZonedDateTime&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="743813a1cab4246e31f5f9d2b6a5b8a656d295d1" translate="yes" xml:space="preserve">
          <source>This data is located in bytes from the buffer's position to its limit.</source>
          <target state="translated">이 데이터는 버퍼의 위치에서 한계까지 바이트 단위로 위치합니다.</target>
        </trans-unit>
        <trans-unit id="0e56342900728bd48a541f7a0579d9ced91ae984" translate="yes" xml:space="preserve">
          <source>This datagram channel</source>
          <target state="translated">이 데이터 그램 채널</target>
        </trans-unit>
        <trans-unit id="0505f4ae4b37af933f4a494f1bd199f351093fb6" translate="yes" xml:space="preserve">
          <source>This date operates using one of several variants of the &lt;a href=&quot;hijrahchronology&quot;&gt;Hijrah calendar&lt;/a&gt;.</source>
          <target state="translated">이 날짜는 &lt;a href=&quot;hijrahchronology&quot;&gt;Hijrah 일정&lt;/a&gt; 의 여러 변형 중 하나를 사용하여 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="5d5cf5344795ddbee0592b8f5074a4decd99e8ab" translate="yes" xml:space="preserve">
          <source>This date operates using the &lt;a href=&quot;japanesechronology&quot;&gt;Japanese Imperial calendar&lt;/a&gt;. This calendar system is primarily used in Japan.</source>
          <target state="translated">이 날짜는 &lt;a href=&quot;japanesechronology&quot;&gt;일본식 달력을&lt;/a&gt; 사용하여 작동합니다 . 이 달력 시스템은 주로 일본에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e18cba966f2d91e0393d11d4baa965825e81cd17" translate="yes" xml:space="preserve">
          <source>This date operates using the &lt;a href=&quot;minguochronology&quot;&gt;Minguo calendar&lt;/a&gt;. This calendar system is primarily used in the Republic of China, often known as Taiwan. Dates are aligned such that &lt;code&gt;0001-01-01 (Minguo)&lt;/code&gt; is &lt;code&gt;1912-01-01 (ISO)&lt;/code&gt;.</source>
          <target state="translated">이 날짜는 &lt;a href=&quot;minguochronology&quot;&gt;Minguo 달력을&lt;/a&gt; 사용하여 작동합니다 . 이 캘린더 시스템은 주로 대만으로 알려진 중국에서 주로 사용됩니다. &lt;code&gt;0001-01-01 (Minguo)&lt;/code&gt; 이 &lt;code&gt;1912-01-01 (ISO)&lt;/code&gt; 이되도록 날짜가 정렬 됩니다.</target>
        </trans-unit>
        <trans-unit id="193b4b41c0bb17831b51c2083da42604be66508d" translate="yes" xml:space="preserve">
          <source>This date operates using the &lt;a href=&quot;thaibuddhistchronology&quot;&gt;Thai Buddhist calendar&lt;/a&gt;. This calendar system is primarily used in Thailand. Dates are aligned such that &lt;code&gt;2484-01-01 (Buddhist)&lt;/code&gt; is &lt;code&gt;1941-01-01 (ISO)&lt;/code&gt;.</source>
          <target state="translated">이 날짜는 &lt;a href=&quot;thaibuddhistchronology&quot;&gt;태국 불교 달력을&lt;/a&gt; 사용하여 작동합니다 . 이 달력 시스템은 주로 태국에서 사용됩니다. &lt;code&gt;2484-01-01 (Buddhist)&lt;/code&gt; 이 &lt;code&gt;1941-01-01 (ISO)&lt;/code&gt; 이되도록 날짜가 정렬 됩니다.</target>
        </trans-unit>
        <trans-unit id="2833508e7b6ddb38abb8ca21e4e52f2be7d2502a" translate="yes" xml:space="preserve">
          <source>This date will be passed to the formatter to produce a string.</source>
          <target state="translated">이 날짜는 포맷터로 전달되어 문자열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="45d06f4553905556c41502a57e8c1b62be20d243" translate="yes" xml:space="preserve">
          <source>This date-time at completed attribute's &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value and &lt;code&gt;object&lt;/code&gt;'s &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value are equal.</source>
          <target state="translated">완성 된 속성의에서이 날짜 시간 &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값과 &lt;code&gt;object&lt;/code&gt; 의 &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값은 동일하다.</target>
        </trans-unit>
        <trans-unit id="03bbde6ad6f81f2897854a309baf844d646c3cee" translate="yes" xml:space="preserve">
          <source>This date-time at completed attribute's &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value and &lt;code&gt;object&lt;/code&gt;'s &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value are equal.</source>
          <target state="translated">완성 된 속성의에서이 날짜 시간 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값과 &lt;code&gt;object&lt;/code&gt; 의 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값은 동일하다.</target>
        </trans-unit>
        <trans-unit id="5eba4e5db6bdc2dd70913c964127b0919757693a" translate="yes" xml:space="preserve">
          <source>This date-time at creation attribute's &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value and &lt;code&gt;object&lt;/code&gt;'s &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value are equal.</source>
          <target state="translated">생성시이 날짜-시간 속성의 &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값과 &lt;code&gt;object&lt;/code&gt; 의 &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값이 같습니다.</target>
        </trans-unit>
        <trans-unit id="065897994c9ec9c07686d203308d4d1170d84034" translate="yes" xml:space="preserve">
          <source>This date-time at creation attribute's &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value and &lt;code&gt;object&lt;/code&gt;'s &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value are equal.</source>
          <target state="translated">생성시이 날짜-시간 속성의 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값 및 &lt;code&gt;object&lt;/code&gt; 의 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값이 같습니다.</target>
        </trans-unit>
        <trans-unit id="b006b7df036c212d4bd5ba2447c40afcee577e8a" translate="yes" xml:space="preserve">
          <source>This date-time at processing attribute's &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value and &lt;code&gt;object&lt;/code&gt;'s &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value are equal.</source>
          <target state="translated">이 날짜-시간 속성의 &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값과 &lt;code&gt;object&lt;/code&gt; 의 &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="f9f7fdb1a7ab5e22d18b273cca1aba15377835d6" translate="yes" xml:space="preserve">
          <source>This date-time at processing attribute's &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value and &lt;code&gt;object&lt;/code&gt;'s &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value are equal.</source>
          <target state="translated">처리 속성의에서이 날짜 시간 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값과 &lt;code&gt;object&lt;/code&gt; 의&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값은 동일하다.</target>
        </trans-unit>
        <trans-unit id="6f5eb385ed9ad064f68018650b72f376e17d69df" translate="yes" xml:space="preserve">
          <source>This date-time attribute's &lt;code&gt;java.util.Date&lt;/code&gt; value and &lt;code&gt;object&lt;/code&gt;'s &lt;code&gt;java.util.Date&lt;/code&gt; value are equal.</source>
          <target state="translated">이 날짜-시간 속성의 &lt;code&gt;java.util.Date&lt;/code&gt; 값 및 &lt;code&gt;object&lt;/code&gt; 의 &lt;code&gt;java.util.Date&lt;/code&gt; 값이 같습니다.</target>
        </trans-unit>
        <trans-unit id="c0c317e8a8948b79ea81d771f3ff6bfb718da2b4" translate="yes" xml:space="preserve">
          <source>This date-time will be passed to the formatter to produce a string.</source>
          <target state="translated">이 날짜-시간은 포맷터로 전달되어 문자열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f6b70bbe903f9efaf8a84e0e3086ef40860d9b34" translate="yes" xml:space="preserve">
          <source>This decoder</source>
          <target state="translated">이 디코더</target>
        </trans-unit>
        <trans-unit id="464b8e800fdc7710db841535acfd4202ccccb8d8" translate="yes" xml:space="preserve">
          <source>This decoder's charset</source>
          <target state="translated">이 디코더의 문자셋</target>
        </trans-unit>
        <trans-unit id="8fba0c9757d30a0a89ef7b7bf21941af4bb567d3" translate="yes" xml:space="preserve">
          <source>This decoder's current replacement, which is never &lt;code&gt;null&lt;/code&gt; and is never empty</source>
          <target state="translated">이 디코더의 현재의 교체. &lt;code&gt;null&lt;/code&gt; 는 아니다 는 절대없고 비어 있지 않은</target>
        </trans-unit>
        <trans-unit id="63639bd2d8adb14821e679eeee08ba587ef50dac" translate="yes" xml:space="preserve">
          <source>This default handling mechanism is disabled when a custom cursor is set by the &lt;a href=&quot;#setCursor(java.awt.Cursor)&quot;&gt;&lt;code&gt;setCursor(java.awt.Cursor)&lt;/code&gt;&lt;/a&gt; method. When the default handling is disabled, it becomes the responsibility of the developer to keep the cursor up to date, by listening to the &lt;code&gt;DragSource&lt;/code&gt; events and calling the &lt;code&gt;setCursor()&lt;/code&gt; method. Alternatively, you can provide custom cursor behavior by providing custom implementations of the &lt;code&gt;DragSource&lt;/code&gt; and the &lt;code&gt;DragSourceContext&lt;/code&gt; classes.</source>
          <target state="translated">이 기본 처리 메커니즘은 사용자 정의 커서가 &lt;a href=&quot;#setCursor(java.awt.Cursor)&quot;&gt; &lt;code&gt;setCursor(java.awt.Cursor)&lt;/code&gt; &lt;/a&gt; 메소드에 의해 설정되면 비활성화됩니다 . 기본 처리가 비활성화되면 &lt;code&gt;DragSource&lt;/code&gt; 이벤트 를 수신 하고 &lt;code&gt;setCursor()&lt;/code&gt; 메서드를 호출하여 커서를 최신 상태로 유지하는 것은 개발자의 책임이됩니다 . 또는 &lt;code&gt;DragSource&lt;/code&gt; 및 &lt;code&gt;DragSourceContext&lt;/code&gt; 클래스 의 사용자 지정 구현을 제공하여 사용자 지정 커서 동작을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1c3671293d91566077558d91fd50c4c6f8749c9" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;
           thenComparing(comparing(keyExtractor))&lt;/code&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt; thenComparing(comparing(keyExtractor))&lt;/code&gt; 처럼 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="fb7578621732085da271d2e21f9c582e5f8b6fa4" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;
           thenComparing(comparing(keyExtractor, cmp))&lt;/code&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt; thenComparing(comparing(keyExtractor, cmp))&lt;/code&gt; 처럼 동작 합니다.</target>
        </trans-unit>
        <trans-unit id="6c3c7e42bf7abe5b0582191c80ff163d2d6939bb" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;
           thenComparing(comparingDouble(keyExtractor))&lt;/code&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt; thenComparing(comparingDouble(keyExtractor))&lt;/code&gt; 처럼 동작 합니다.</target>
        </trans-unit>
        <trans-unit id="11ceea5b964c8d341f6ac268ccdfff73497a959d" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;
           thenComparing(comparingInt(keyExtractor))&lt;/code&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt; thenComparing(comparingInt(keyExtractor))&lt;/code&gt; 처럼 동작 합니다.</target>
        </trans-unit>
        <trans-unit id="0784ae27c8da965d30ae88a82b6c5364a49fb996" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;
           thenComparing(comparingLong(keyExtractor))&lt;/code&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt; thenComparing(comparingLong(keyExtractor))&lt;/code&gt; 처럼 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="c6e294c1ece1277c33e3a64c30a2a9b2adbf7b42" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;thenComparing(comparing(keyExtractor))&lt;/code&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt;thenComparing(comparing(keyExtractor))&lt;/code&gt; 처럼 동작합니다. 합니다.</target>
        </trans-unit>
        <trans-unit id="a71730c8354af9adec6b7390ea8d92b2eb036a0e" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;thenComparing(comparing(keyExtractor, cmp))&lt;/code&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt;thenComparing(comparing(keyExtractor, cmp))&lt;/code&gt; 처럼 동작합니다 합니다.</target>
        </trans-unit>
        <trans-unit id="c1c6483c171dc8162f46c1935cdf11c66743ab54" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;thenComparing(comparingDouble(keyExtractor))&lt;/code&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt;thenComparing(comparingDouble(keyExtractor))&lt;/code&gt; 처럼 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="79f281e08bd360780f8aa71ae3a4e5d8150955e3" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;thenComparing(comparingInt(keyExtractor))&lt;/code&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt;thenComparing(comparingInt(keyExtractor))&lt;/code&gt; 처럼 동작 합니다.</target>
        </trans-unit>
        <trans-unit id="8fc9fbfb9f325a40e6150b7f43eb9fb01fbab52d" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;thenComparing(comparingLong(keyExtractor))&lt;/code&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt;thenComparing(comparingLong(keyExtractor))&lt;/code&gt; 처럼 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="dc96d625b6603417a843fec478c20860cb744dc0" translate="yes" xml:space="preserve">
          <source>This default implementation calculates from the epoch-day of the date and the second-of-day of the time.</source>
          <target state="translated">이 기본 구현은 날짜의 시대와 시간의 둘째 날부터 계산합니다.</target>
        </trans-unit>
        <trans-unit id="e063681411e4bd38bbc391746e3cee12b5378408" translate="yes" xml:space="preserve">
          <source>This default implementation calculates the duration from the &lt;a href=&quot;#getOffset(java.time.Instant)&quot;&gt;&lt;code&gt;actual&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getStandardOffset(java.time.Instant)&quot;&gt;&lt;code&gt;standard&lt;/code&gt;&lt;/a&gt; offsets.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;#getOffset(java.time.Instant)&quot;&gt; &lt;code&gt;actual&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#getStandardOffset(java.time.Instant)&quot;&gt; &lt;code&gt;standard&lt;/code&gt; &lt;/a&gt; 오프셋 에서 기간을 계산 합니다.</target>
        </trans-unit>
        <trans-unit id="2e2abeadb86303864e3ae35f66cd65485be5379f" translate="yes" xml:space="preserve">
          <source>This default implementation calculates the duration from the &lt;a href=&quot;zonerules#getOffset-java.time.Instant-&quot;&gt;&lt;code&gt;actual&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zonerules#getStandardOffset-java.time.Instant-&quot;&gt;&lt;code&gt;standard&lt;/code&gt;&lt;/a&gt; offsets.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;zonerules#getOffset-java.time.Instant-&quot;&gt; &lt;code&gt;actual&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;zonerules#getStandardOffset-java.time.Instant-&quot;&gt; &lt;code&gt;standard&lt;/code&gt; &lt;/a&gt; 오프셋 에서 기간을 계산 합니다.</target>
        </trans-unit>
        <trans-unit id="c4992db070cd58e8e16beb41aebf025a120e2521" translate="yes" xml:space="preserve">
          <source>This default implementation checks if &lt;a href=&quot;#getValidOffsets(java.time.LocalDateTime)&quot;&gt;&lt;code&gt;getValidOffsets(java.time.LocalDateTime)&lt;/code&gt;&lt;/a&gt; contains the specified offset.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;#getValidOffsets(java.time.LocalDateTime)&quot;&gt; &lt;code&gt;getValidOffsets(java.time.LocalDateTime)&lt;/code&gt; &lt;/a&gt; 에 지정된 오프셋이 포함되어 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="169bfbd5e3ecb82129ede4262c00e34877c31b06" translate="yes" xml:space="preserve">
          <source>This default implementation checks if &lt;a href=&quot;zonerules#getValidOffsets-java.time.LocalDateTime-&quot;&gt;&lt;code&gt;getValidOffsets(java.time.LocalDateTime)&lt;/code&gt;&lt;/a&gt; contains the specified offset.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;zonerules#getValidOffsets-java.time.LocalDateTime-&quot;&gt; &lt;code&gt;getValidOffsets(java.time.LocalDateTime)&lt;/code&gt; &lt;/a&gt; 인지 확인합니다. 에 지정된 오프셋이 포함되어 .</target>
        </trans-unit>
        <trans-unit id="eacd32710ad264fbb66df701743fc1a6f5165f9b" translate="yes" xml:space="preserve">
          <source>This default implementation compares the &lt;a href=&quot;#getOffset(java.time.Instant)&quot;&gt;&lt;code&gt;actual&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getStandardOffset(java.time.Instant)&quot;&gt;&lt;code&gt;standard&lt;/code&gt;&lt;/a&gt; offsets.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;#getOffset(java.time.Instant)&quot;&gt; &lt;code&gt;actual&lt;/code&gt; &lt;/a&gt; 오프셋 과 &lt;a href=&quot;#getStandardOffset(java.time.Instant)&quot;&gt; &lt;code&gt;standard&lt;/code&gt; &lt;/a&gt; 오프셋을 비교합니다 .</target>
        </trans-unit>
        <trans-unit id="5a238cb286f4cf27357aa51ba2484d6935d2091f" translate="yes" xml:space="preserve">
          <source>This default implementation compares the &lt;a href=&quot;zonerules#getOffset-java.time.Instant-&quot;&gt;&lt;code&gt;actual&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zonerules#getStandardOffset-java.time.Instant-&quot;&gt;&lt;code&gt;standard&lt;/code&gt;&lt;/a&gt; offsets.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;zonerules#getOffset-java.time.Instant-&quot;&gt; &lt;code&gt;actual&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;zonerules#getStandardOffset-java.time.Instant-&quot;&gt; &lt;code&gt;standard&lt;/code&gt; &lt;/a&gt; 오프셋을 비교합니다 .</target>
        </trans-unit>
        <trans-unit id="700452561a107e16fb2b4ad437afe62fcec786bf" translate="yes" xml:space="preserve">
          <source>This default implementation derives the value using &lt;a href=&quot;temporal#plus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;Temporal.plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;temporal#plus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;Temporal.plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 사용하여 값을 파생합니다 .</target>
        </trans-unit>
        <trans-unit id="f1faf19d3fdd99785d0886e0fc76b73324e814ac" translate="yes" xml:space="preserve">
          <source>This default implementation derives the value using &lt;a href=&quot;temporal#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;Temporal.plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;temporal#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;Temporal.plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 사용하여 값을 파생합니다 .</target>
        </trans-unit>
        <trans-unit id="46d723a9d3e40c3b15477261747b50a7cb4921bf" translate="yes" xml:space="preserve">
          <source>This default implementation does no painting.</source>
          <target state="translated">이 기본 구현은 페인팅을하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="66e7e237e2c7c5a935d50932d73a4a506670f3da" translate="yes" xml:space="preserve">
          <source>This default implementation is equal to calling &lt;code&gt;update(b, 0, b.length)&lt;/code&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt;update(b, 0, b.length)&lt;/code&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d386d7057ca0a34151b0b0300d6a175876ee8422" translate="yes" xml:space="preserve">
          <source>This default implementation is suitable for all implementations.</source>
          <target state="translated">이 기본 구현은 모든 구현에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="299b7d6cbd6c8fd6f97679604de091cee35f2039" translate="yes" xml:space="preserve">
          <source>This default implementation is suitable for most implementations.</source>
          <target state="translated">이 기본 구현은 대부분의 구현에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="99b0bdbf2fd33070e973c36c301431e84bdd38db" translate="yes" xml:space="preserve">
          <source>This default implementation of the &lt;code&gt;initialize&lt;/code&gt; method assumes all state held in objects of this type is exposed via the matching pairs of &quot;setter&quot; and &quot;getter&quot; methods in the order they are returned by the Introspector.</source>
          <target state="translated">이 &lt;code&gt;initialize&lt;/code&gt; 메서드 의 기본 구현 에서는이 유형의 개체에 보유 된 모든 상태가 Introspector에서 반환 된 순서대로 일치하는 &quot;setter&quot;및 &quot;getter&quot;메서드 쌍을 통해 노출된다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="8a8d4b1f4bfe64391e6db936ab202fb9eadb363a" translate="yes" xml:space="preserve">
          <source>This default implementation of the &lt;code&gt;initialize&lt;/code&gt; method assumes all state held in objects of this type is exposed via the matching pairs of &quot;setter&quot; and &quot;getter&quot; methods in the order they are returned by the Introspector. If a property descriptor defines a &quot;transient&quot; attribute with a value equal to &lt;code&gt;Boolean.TRUE&lt;/code&gt; the property is ignored by this default implementation. Note that this use of the word &quot;transient&quot; is quite independent of the field modifier that is used by the &lt;code&gt;ObjectOutputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;initialize&lt;/code&gt; 메소드 의이 기본 구현은 이 유형의 오브젝트에 보유 된 모든 상태가 Introspector에 의해 리턴되는 순서대로 일치하는 &quot;setter&quot;및 &quot;getter&quot;메소드 쌍을 통해 노출된다고 가정합니다. 속성 설명자가 값이 &lt;code&gt;Boolean.TRUE&lt;/code&gt; 인 &quot;일시적&quot;속성을 정의하면 이 기본 구현에서 속성이 무시됩니다. &quot;transient&quot;라는 단어의 사용은 &lt;code&gt;ObjectOutputStream&lt;/code&gt; 에 의해 사용되는 필드 수정 자와는 무관합니다. .</target>
        </trans-unit>
        <trans-unit id="c6d18fecb1892c769cfb818fd07f57c8d2d4b480" translate="yes" xml:space="preserve">
          <source>This default implementation of the &lt;code&gt;instantiate&lt;/code&gt; method returns an expression containing the predefined method name &quot;new&quot; which denotes a call to a constructor with the arguments as specified in the &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt;'s constructor.</source>
          <target state="translated">&lt;code&gt;instantiate&lt;/code&gt; 메소드 의이 기본 구현은 &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; 의 생성자에 지정된 인수를 사용하여 생성자에 대한 호출을 표시하는 사전 정의 된 메소드 이름 &quot;new&quot;를 포함하는 표현식을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4e3ed3191a5dd8a7f450da1d42e2012fd1ba2f83" translate="yes" xml:space="preserve">
          <source>This default implementation performs the comparison based on the epoch-day and nano-of-day.</source>
          <target state="translated">이 기본 구현은 시대 및 나노 일을 기준으로 비교를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="531f7403abecf5a94352ea24034062f99c5ba20f" translate="yes" xml:space="preserve">
          <source>This default implementation performs the comparison based on the epoch-day.</source>
          <target state="translated">이 기본 구현은 획일을 기준으로 비교를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="24f3f70ac92394e68221670a6bfb85088be2f996" translate="yes" xml:space="preserve">
          <source>This default implementation performs the comparison based on the epoch-second and nano-of-second.</source>
          <target state="translated">이 기본 구현은 에포크 초 및 나노초를 기준으로 비교를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="f06750614dc9ea8bdb578b17b023fde237c84e95" translate="yes" xml:space="preserve">
          <source>This default implementation performs the comparison defined above.</source>
          <target state="translated">이 기본 구현은 위에서 정의한 비교를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="0b0b45e33e2905f3578d1870df294ef3cb1ea6b8" translate="yes" xml:space="preserve">
          <source>This default implementation queries the &lt;code&gt;EPOCH_DAY&lt;/code&gt; field.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt;EPOCH_DAY&lt;/code&gt; 필드를 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="5592b05545e524bd98fd7de6fd60c10ff5c61f56" translate="yes" xml:space="preserve">
          <source>This default implementation returns &quot;&quot;.</source>
          <target state="translated">이 기본 구현은 &quot;&quot;를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c532967e0378fabf905a754ff10dc2a1e7841502" translate="yes" xml:space="preserve">
          <source>This default implementation returns &quot;&quot;. Used by &lt;code&gt;getUndoPresentationName&lt;/code&gt; and &lt;code&gt;getRedoPresentationName&lt;/code&gt; to construct the strings they return. Subclasses should override to return an appropriate description of the operation this edit represents.</source>
          <target state="translated">이 기본 구현은 &quot;&quot;를 반환합니다. &lt;code&gt;getUndoPresentationName&lt;/code&gt; 및 &lt;code&gt;getRedoPresentationName&lt;/code&gt; 에서 반환하는 문자열을 구성하는 데 사용됩니다 . 이 편집이 나타내는 작업에 대한 적절한 설명을 반환하려면 하위 클래스를 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="f2dd1b39950a1f0e09de5c706fccb46763881678" translate="yes" xml:space="preserve">
          <source>This default implementation returns &lt;code&gt;null&lt;/code&gt; and performs no other action.</source>
          <target state="translated">이 기본 구현은 &lt;code&gt;null&lt;/code&gt; 을 반환 하고 다른 작업을 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="80fc82e2eb2326a0e0f3d3651724252ab4a69e12" translate="yes" xml:space="preserve">
          <source>This default implementation returns a new &lt;a href=&quot;../../../java/awt/insets&quot;&gt;&lt;code&gt;Insets&lt;/code&gt;&lt;/a&gt; object that is initialized by the &lt;a href=&quot;#getBorderInsets(java.awt.Component,java.awt.Insets)&quot;&gt;&lt;code&gt;getBorderInsets(Component,Insets)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;#getBorderInsets(java.awt.Component,java.awt.Insets)&quot;&gt; &lt;code&gt;getBorderInsets(Component,Insets)&lt;/code&gt; &lt;/a&gt; 메서드에 의해 초기화 된 새 &lt;a href=&quot;../../../java/awt/insets&quot;&gt; &lt;code&gt;Insets&lt;/code&gt; &lt;/a&gt; 객체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cecf94de1f117a63d4adf542a3ff3b751adf0e91" translate="yes" xml:space="preserve">
          <source>This default implementation returns a new &lt;a href=&quot;../../../java/awt/insets&quot;&gt;&lt;code&gt;Insets&lt;/code&gt;&lt;/a&gt; object that is initialized by the &lt;a href=&quot;#getBorderInsets(java.awt.Component,java.awt.Insets)&quot;&gt;&lt;code&gt;getBorderInsets(Component,Insets)&lt;/code&gt;&lt;/a&gt; method. By default the &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, and &lt;code&gt;right&lt;/code&gt; fields are set to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;#getBorderInsets(java.awt.Component,java.awt.Insets)&quot;&gt; &lt;code&gt;getBorderInsets(Component,Insets)&lt;/code&gt; &lt;/a&gt; 메서드에 의해 초기화 된 새 &lt;a href=&quot;../../../java/awt/insets&quot;&gt; &lt;code&gt;Insets&lt;/code&gt; &lt;/a&gt; 객체를 반환합니다 . 기본적으로 &lt;code&gt;top&lt;/code&gt; , &lt;code&gt;left&lt;/code&gt; , &lt;code&gt;bottom&lt;/code&gt; 및 &lt;code&gt;right&lt;/code&gt; 필드는 &lt;code&gt;0&lt;/code&gt; 으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="df1f8555e1751801d2f95335b3d68adc6d0741da" translate="yes" xml:space="preserve">
          <source>This default implementation returns false.</source>
          <target state="translated">이 기본 구현은 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="449f983ba203415a822406a453389b2768f9d86b" translate="yes" xml:space="preserve">
          <source>This default implementation returns true.</source>
          <target state="translated">이 기본 구현은 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="29f19e51f2b7ce40df33a9a3dbc623827d033026" translate="yes" xml:space="preserve">
          <source>This default implementation uses &lt;a href=&quot;chronology#eraOf(int)&quot;&gt;&lt;code&gt;Chronology.eraOf(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;chronology#eraOf(int)&quot;&gt; &lt;code&gt;Chronology.eraOf(int)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="7298671b0593fa5d649e9dcd7b938e4b73854028" translate="yes" xml:space="preserve">
          <source>This default implementation uses &lt;a href=&quot;chronology#eraOf-int-&quot;&gt;&lt;code&gt;Chronology.eraOf(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;chronology#eraOf-int-&quot;&gt; &lt;code&gt;Chronology.eraOf(int)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="cde20cee99a72c481519ff6adb7efdce48959e1e" translate="yes" xml:space="preserve">
          <source>This default implementation uses &lt;a href=&quot;chronology#isLeapYear(long)&quot;&gt;&lt;code&gt;Chronology.isLeapYear(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;chronology#isLeapYear(long)&quot;&gt; &lt;code&gt;Chronology.isLeapYear(long)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="4ee6f479f6b1fed2559699c8684f0851dbe3d3bd" translate="yes" xml:space="preserve">
          <source>This default implementation uses &lt;a href=&quot;chronology#isLeapYear-long-&quot;&gt;&lt;code&gt;Chronology.isLeapYear(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 기본 구현은 &lt;a href=&quot;chronology#isLeapYear-long-&quot;&gt; &lt;code&gt;Chronology.isLeapYear(long)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="b0be3e70702264a22fe1137fff97ba33654e5e36" translate="yes" xml:space="preserve">
          <source>This default is &quot;sticky&quot;, being a part of the static state of all URLConnections. This flag applies to the next, and all following URLConnections that are created.</source>
          <target state="translated">이 기본값은 모든 URLConnections의 정적 상태의 일부인 &quot;고정&quot;입니다. 이 플래그는 생성 된 다음 및 이후의 모든 URLConnection에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="5607d4895088b53e586af57b17b0e453e1bdfc75" translate="yes" xml:space="preserve">
          <source>This default is &quot;sticky&quot;, being a part of the static state of all URLConnections. This flag applies to the next, and all following URLConnections that are created. This default value can be over-ridden per protocol using &lt;a href=&quot;#setDefaultUseCaches(java.lang.String,boolean)&quot;&gt;&lt;code&gt;setDefaultUseCaches(String,boolean)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 기본값은 모든 URLConnections의 정적 상태의 일부인 &quot;고정&quot;입니다. 이 플래그는 생성 된 다음 및 이후의 모든 URLConnection에 적용됩니다. 이 기본값은 &lt;a href=&quot;#setDefaultUseCaches(java.lang.String,boolean)&quot;&gt; &lt;code&gt;setDefaultUseCaches(String,boolean)&lt;/code&gt; &lt;/a&gt; 사용하여 프로토콜별로 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71192131c6d8b3bd7f25ec7b2065eaf9573350a8" translate="yes" xml:space="preserve">
          <source>This default policy of locating the initial context and URL context factories may be overridden by calling &lt;code&gt;NamingManager.setInitialContextFactoryBuilder()&lt;/code&gt;.</source>
          <target state="translated">초기 컨텍스트 및 URL 컨텍스트 팩토리를 찾는이 기본 정책은 &lt;code&gt;NamingManager.setInitialContextFactoryBuilder()&lt;/code&gt; 를 호출하여 무시할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f33f15e845fa4ca24888166902444c0ee87d40af" translate="yes" xml:space="preserve">
          <source>This defines the level of protection provided to the data sent on the connection, including the kind of encryption used and most aspects of how authentication is done.</source>
          <target state="translated">여기에는 사용 된 암호화 종류와 인증 수행 방법의 대부분을 포함하여 연결에서 전송 된 데이터에 제공되는 보호 수준이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="111a23a69d7d68d0e2d926039231ac3c3dc1dffa" translate="yes" xml:space="preserve">
          <source>This defines the point at infinity.</source>
          <target state="translated">무한대의 점을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="0832eacc47b98fb52bccbd73b04f58a50bb09410" translate="yes" xml:space="preserve">
          <source>This defines the protocol used in the connection.</source>
          <target state="translated">연결에 사용되는 프로토콜을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="ee4d3b75940f4a4b7cf7c517f7a3dde9ab76117e" translate="yes" xml:space="preserve">
          <source>This defines the value passed as &lt;code&gt;name&lt;/code&gt; to the &lt;code&gt;Font&lt;/code&gt; constructor. Both logical and physical font names are allowed. If a font with the requested name is not found, the default font is used.</source>
          <target state="translated">이것은 &lt;code&gt;Font&lt;/code&gt; 생성자에 &lt;code&gt;name&lt;/code&gt; 으로 전달되는 값을 정의합니다 . 논리적 및 물리적 글꼴 이름이 모두 허용됩니다. 요청한 이름의 글꼴을 찾을 수없는 경우 기본 글꼴이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4115b8651bf03a14c989c86915d64b772401371e" translate="yes" xml:space="preserve">
          <source>This definition allows hash tables to operate properly.</source>
          <target state="translated">이 정의는 해시 테이블이 올바르게 작동하도록합니다.</target>
        </trans-unit>
        <trans-unit id="d329d67ac47f002e6a5289bb2a9b171e6b41c225" translate="yes" xml:space="preserve">
          <source>This definition ignores leap seconds, but considers that Days vary due to daylight saving time and months have different lengths.</source>
          <target state="translated">이 정의는 윤초를 무시하지만 일광 절약 시간 제로 인해 요일이 다르고 달의 길이가 다른 것으로 간주합니다.</target>
        </trans-unit>
        <trans-unit id="07866a73b17bdbfbcd89a4911d9312b71a70532e" translate="yes" xml:space="preserve">
          <source>This definition of</source>
          <target state="translated">이 정의</target>
        </trans-unit>
        <trans-unit id="28b41138e83324a8820ab7ffd1eda3fc94f119b5" translate="yes" xml:space="preserve">
          <source>This definition should result in implementations comparing their entire state.</source>
          <target state="translated">이 정의는 구현으로 전체 상태를 비교해야합니다.</target>
        </trans-unit>
        <trans-unit id="f56b947d88a630e87211372ea69b96a4cc9b2673" translate="yes" xml:space="preserve">
          <source>This delegation allows each L&amp;amp;F to provide custom behaviors for desktop-specific actions. (For example, how and where the internal frame's icon would appear.)</source>
          <target state="translated">이 위임을 통해 각 L &amp;amp; F는 데스크톱 별 작업에 대한 사용자 지정 동작을 제공 할 수 있습니다. (예를 들어 내부 프레임의 아이콘이 표시되는 방법 및 위치)</target>
        </trans-unit>
        <trans-unit id="6c73cee1f2a191c62c3f7bd299076340035a5233" translate="yes" xml:space="preserve">
          <source>This deprecated class is maintained for compatibility. In previous versions of JMX, there was one &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; shared by all MBean servers. As of JMX 1.2, that functionality is approximated by using &lt;a href=&quot;../mbeanserverfactory#findMBeanServer(java.lang.String)&quot;&gt;&lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt;&lt;/a&gt; to find all known MBean servers, and consulting the &lt;a href=&quot;classloaderrepository&quot;&gt;&lt;code&gt;ClassLoaderRepository&lt;/code&gt;&lt;/a&gt; of each one. It is strongly recommended that code referencing &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; be rewritten.</source>
          <target state="translated">이 사용되지 않는 클래스는 호환성을 위해 유지됩니다. 이전 버전의 JMX에는 모든 MBean 서버가 공유하는 하나의 &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; 가있었습니다 . JMX 1.2에서이 기능은 &lt;a href=&quot;../mbeanserverfactory#findMBeanServer(java.lang.String)&quot;&gt; &lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt; &lt;/a&gt; 를 사용하여 알려진 모든 MBean 서버를 찾고 각 서버의 &lt;a href=&quot;classloaderrepository&quot;&gt; &lt;code&gt;ClassLoaderRepository&lt;/code&gt; &lt;/a&gt; 를 참조 하여 근사화되었습니다 . &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; 를 참조하는 코드를 다시 작성 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="8332acd4b87a9198ae6fac3c376315a3b8e63721" translate="yes" xml:space="preserve">
          <source>This deprecated class is maintained for compatibility. In previous versions of JMX, there was one &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; shared by all MBean servers. As of JMX 1.2, that functionality is approximated by using &lt;a href=&quot;../mbeanserverfactory#findMBeanServer-java.lang.String-&quot;&gt;&lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt;&lt;/a&gt; to find all known MBean servers, and consulting the &lt;a href=&quot;classloaderrepository&quot;&gt;&lt;code&gt;ClassLoaderRepository&lt;/code&gt;&lt;/a&gt; of each one. It is strongly recommended that code referencing &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; be rewritten.</source>
          <target state="translated">이 폐기 된 클래스는 호환성을 위해 유지됩니다. 이전 버전의 JMX에는 모든 MBean 서버가 공유하는 하나의 &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; 가있었습니다 . JMX 1.2 &lt;a href=&quot;../mbeanserverfactory#findMBeanServer-java.lang.String-&quot;&gt; &lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt; &lt;/a&gt; 를 사용하여 알려진 모든 MBean 서버를 찾고 각 서버의 &lt;a href=&quot;classloaderrepository&quot;&gt; &lt;code&gt;ClassLoaderRepository&lt;/code&gt; &lt;/a&gt; 를 참조하여 해당 기능을 추정합니다 . &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; 를 참조하는 코드를 다시 작성 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="cde3d3d2d9a1ee6c594bf9a9aebbf7fe680d3e97" translate="yes" xml:space="preserve">
          <source>This deprecated class is maintained for compatibility. In previous versions of the JMX API, there was one &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; shared by all MBean servers. As of version 1.2 of the JMX API, that functionality is approximated by using &lt;a href=&quot;mbeanserverfactory#findMBeanServer(java.lang.String)&quot;&gt;&lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt;&lt;/a&gt; to find all known MBean servers, and consulting the &lt;a href=&quot;loading/classloaderrepository&quot;&gt;&lt;code&gt;ClassLoaderRepository&lt;/code&gt;&lt;/a&gt; of each one. It is strongly recommended that code referencing &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; be rewritten.</source>
          <target state="translated">이 사용되지 않는 클래스는 호환성을 위해 유지됩니다. JMX API의 이전 버전에는 모든 MBean 서버에서 공유하는 하나의 &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; 가있었습니다 . JMX API 버전 1.2에서이 기능은 &lt;a href=&quot;mbeanserverfactory#findMBeanServer(java.lang.String)&quot;&gt; &lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt; &lt;/a&gt; 를 사용하여 알려진 모든 MBean 서버를 찾고 각 서버의 &lt;a href=&quot;loading/classloaderrepository&quot;&gt; &lt;code&gt;ClassLoaderRepository&lt;/code&gt; &lt;/a&gt; 를 참조 하여 근사화되었습니다 . &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; 를 참조하는 코드를 다시 작성 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="fca008d43a9dbe738b0a6610e8893a67d8faf707" translate="yes" xml:space="preserve">
          <source>This deprecated class is maintained for compatibility. In previous versions of the JMX API, there was one &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; shared by all MBean servers. As of version 1.2 of the JMX API, that functionality is approximated by using &lt;a href=&quot;mbeanserverfactory#findMBeanServer-java.lang.String-&quot;&gt;&lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt;&lt;/a&gt; to find all known MBean servers, and consulting the &lt;a href=&quot;loading/classloaderrepository&quot;&gt;&lt;code&gt;ClassLoaderRepository&lt;/code&gt;&lt;/a&gt; of each one. It is strongly recommended that code referencing &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; be rewritten.</source>
          <target state="translated">이 폐기 된 클래스는 호환성을 위해 유지됩니다. 이전 버전의 JMX API에는 모든 MBean 서버가 공유하는 하나의 &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; 가있었습니다 . JMX API 버전 1.2 &lt;a href=&quot;mbeanserverfactory#findMBeanServer-java.lang.String-&quot;&gt; &lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt; &lt;/a&gt; 를 사용하여 알려진 모든 MBean 서버를 찾고 각각 의 &lt;a href=&quot;loading/classloaderrepository&quot;&gt; &lt;code&gt;ClassLoaderRepository&lt;/code&gt; &lt;/a&gt; 를 참조하여 해당 기능을 추정합니다 . &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; 를 참조하는 코드를 다시 작성 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="4e1ddf7bf6e9fce2abf0917ef278cea2e4b9429d" translate="yes" xml:space="preserve">
          <source>This describes the interface to Characters events.</source>
          <target state="translated">이것은 Characters 이벤트에 대한 인터페이스를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="90fc54714b425fe0c9443a96d3b6b4e1565756f9" translate="yes" xml:space="preserve">
          <source>This describes the interface to Characters events. All text events get reported as Characters events. Content, CData and whitespace are all reported as Characters events. IgnorableWhitespace, in most cases, will be set to false unless an element declaration of element content is present for the current element.</source>
          <target state="translated">이것은 Characters 이벤트에 대한 인터페이스를 설명합니다. 모든 텍스트 이벤트는 Characters 이벤트로보고됩니다. 콘텐츠, CData 및 공백은 모두 문자 이벤트로보고됩니다. 대부분의 경우 IgnorableWhitespace는 현재 요소에 대한 요소 콘텐츠의 요소 선언이 없으면 false로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="873206fbd8667f0d0d7ba7134a13368739a17945" translate="yes" xml:space="preserve">
          <source>This design can be improved by noticing that in the recursive case, the task has nothing to do after forking its right task, so can directly invoke its left task before returning. (This is an analog of tail recursion removal.) Also, because the task returns upon executing its left task (rather than falling through to invoke &lt;code&gt;tryComplete&lt;/code&gt;) the pending count is set to one:</source>
          <target state="translated">재귀 적 경우에는 작업이 올바른 작업을 수행 한 후 수행 할 작업이 없으므로 반환하기 전에 왼쪽 작업을 직접 호출 할 수 있다는 점을 알면이 디자인을 개선 할 수 있습니다. (이것은 테일 재귀 제거와 유사합니다.) 또한, 태스크가 &lt;code&gt;tryComplete&lt;/code&gt; 를 호출하기 위해 넘어지지 않고 왼쪽 태스크를 실행하면 리턴 되므로 보류 카운트는 1로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="39aad7886e8396ccfbd2c78d6b76e860612d91fd" translate="yes" xml:space="preserve">
          <source>This design can be improved by noticing that in the recursive case, the task has nothing to do after forking its right task, so can directly invoke its left task before returning. (This is an analog of tail recursion removal.) Also, when the last action in a task is to fork or invoke a subtask (a &quot;tail call&quot;), the call to &lt;code&gt;
 tryComplete()&lt;/code&gt; can be optimized away, at the cost of making the pending count look &quot;off by one&quot;.</source>
          <target state="translated">이 디자인은 재귀적인 경우 작업이 오른쪽 작업을 분기 한 후 할 일이 없으므로 반환하기 전에 왼쪽 작업을 직접 호출 할 수 있음을 인식하여 개선 할 수 있습니다. (이것은 꼬리 재귀 제거와 유사합니다.) 또한 작업의 마지막 작업이 하위 작업을 포크하거나 호출하는 것 ( &quot;테일 호출&quot;) 인 경우 &lt;code&gt; tryComplete()&lt;/code&gt; 대한 호출을 다음 과 같은 비용으로 최적화 할 수 있습니다. 보류중인 카운트를 &quot;하나씩&quot;보이게합니다.</target>
        </trans-unit>
        <trans-unit id="9936549942a739e803ae31092e1a2841cbf1b4cd" translate="yes" xml:space="preserve">
          <source>This destination attribute's &lt;code&gt;URI&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt;'s &lt;code&gt;URI&lt;/code&gt; are equal.</source>
          <target state="translated">이 대상 속성의 &lt;code&gt;URI&lt;/code&gt; 와 &lt;code&gt;object&lt;/code&gt; 의 &lt;code&gt;URI&lt;/code&gt; 가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="4b0a9b0fc7f5e860560b2b99270b343bd48dce52" translate="yes" xml:space="preserve">
          <source>This destination attribute's URI and &lt;code&gt;object&lt;/code&gt;'s URI are equal.</source>
          <target state="translated">이 목적지 속성의 URI와 &lt;code&gt;object&lt;/code&gt; 의 URI가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="64e968f79f3ca264a9d1c3531cb947e8c6959d25" translate="yes" xml:space="preserve">
          <source>This determines the amount of the progress bar that should be filled based on the percent done gathered from the model.</source>
          <target state="translated">모델에서 수집 한 완료율에 따라 채워야하는 진행률 표시 줄의 양을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="e2cbf77ccb1e6b6a7dadb42415a9657055e8bc2a" translate="yes" xml:space="preserve">
          <source>This determines the amount of the progress bar that should be filled based on the percent done gathered from the model. This is a common operation so it was abstracted out. It assumes that your progress bar is linear. That is, if you are making a circular progress indicator, you will want to override this method.</source>
          <target state="translated">모델에서 수집 한 완료율에 따라 채워야하는 진행률 표시 줄의 양을 결정합니다. 이것은 일반적인 작업이므로 추상화되었습니다. 진행률 표시 줄이 선형이라고 가정합니다. 즉, 순환 진행률 표시기를 만드는 경우이 메서드를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="380d42d277a77875e73eea0b576099ee26d22fb7" translate="yes" xml:space="preserve">
          <source>This determines the value passed to the &lt;a href=&quot;../../../../java.base/java/text/bidi&quot;&gt;&lt;code&gt;Bidi&lt;/code&gt;&lt;/a&gt; constructor to select the primary direction of the text in the paragraph.</source>
          <target state="translated">단락에서 텍스트의 기본 방향을 선택 하기 위해 &lt;a href=&quot;../../../../java.base/java/text/bidi&quot;&gt; &lt;code&gt;Bidi&lt;/code&gt; &lt;/a&gt; 생성자에 전달되는 값을 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="57cee4c838a296b3745f14f6eeea64b1c29f9e68" translate="yes" xml:space="preserve">
          <source>This determines whether the temporal accessor supports this field. If this returns false, then the temporal cannot be queried for this field.</source>
          <target state="translated">임시 접근자가이 필드를 지원하는지 여부를 결정합니다. 이것이 false를 리턴하면이 필드에 대한 시간적 조회를 수행 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3adfc4c68ca3c64ed288024ec369c1cc1dc8c36c" translate="yes" xml:space="preserve">
          <source>This disables the lookup of services implemented by the provider. They are no longer accessible due to removal of the properties specifying their names and locations. This may change the behavior or disable execution of other parts of the program that would normally utilize the Provider, as described under the &quot;removeProvider.{provider name}&quot; permission.</source>
          <target state="translated">공급자가 구현 한 서비스 조회를 비활성화합니다. 이름과 위치를 지정하는 속성을 제거하여 더 이상 액세스 할 수 없습니다. 이는 &quot;removeProvider. {provider name}&quot;권한에 설명 된대로 일반적으로 제공자를 사용하는 프로그램의 다른 부분의 동작을 변경하거나 실행하지 못하게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb166f6b813d40e0f82e2a7c9dbad27ed0ccee7e" translate="yes" xml:space="preserve">
          <source>This disables the lookup of services implemented by the provider. This may thus change the behavior or disable execution of other parts of the program that would normally utilize the Provider, as described under the &quot;removeProvider.{provider name}&quot; permission.</source>
          <target state="translated">공급자가 구현 한 서비스 조회를 비활성화합니다. 따라서 &quot;removeProvider. {provider name}&quot;권한에 설명 된대로 공급자를 일반적으로 사용하는 프로그램의 다른 부분의 동작을 변경하거나 실행을 중지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3310841316113d983c404968320f7758ac33f98c" translate="yes" xml:space="preserve">
          <source>This doc's print data representation object is obtained, then an input stream for reading the print data from the print data representation object as a stream of bytes is created and returned. However, if the print data representation object is itself an input stream, then the print data representation object is simply returned.</source>
          <target state="translated">이 doc의 인쇄 데이터 표현 오브젝트가 취득 된 다음, 바이트 스트림으로서 인쇄 데이터 표현 오브젝트로부터 인쇄 데이터를 판독하기위한 입력 스트림이 작성되어 리턴된다. 그러나, 인쇄 데이터 표현 객체 자체가 입력 스트림이면, 인쇄 데이터 표현 객체가 단순히 반환된다.</target>
        </trans-unit>
        <trans-unit id="190c92e594bb363dab615049ea9999474ad36025" translate="yes" xml:space="preserve">
          <source>This document forms the complete API specification. For overviews, tutorials, examples, guides, and tool documentation, please see:</source>
          <target state="translated">이 문서는 완전한 API 사양을 구성합니다. 개요, 자습서, 예제, 가이드 및 도구 설명서는 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9f7dc1441e182cc4af5fd8d2c45f939253dc2029" translate="yes" xml:space="preserve">
          <source>This document is divided into two sections:</source>
          <target state="translated">이 문서는 두 섹션으로 나뉩니다.</target>
        </trans-unit>
        <trans-unit id="f8fa20b52058290987c9e264d00257b2f293f7fc" translate="yes" xml:space="preserve">
          <source>This document name attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="translated">이 문서명 속성의 로케일과 &lt;code&gt;object&lt;/code&gt; 로케일이 동일합니다.</target>
        </trans-unit>
        <trans-unit id="024c36a03c3baad0644062a158a2272b06975c8e" translate="yes" xml:space="preserve">
          <source>This document name attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="translated">이 문서명 속성의 기본이되는 캐릭터 라인과 &lt;code&gt;object&lt;/code&gt; 기본이되는 캐릭터 라인이 동일하다</target>
        </trans-unit>
        <trans-unit id="846ed555be4b169ff3226a52985d10d893fe049d" translate="yes" xml:space="preserve">
          <source>This document supports incremental loading. The &lt;code&gt;TokenThreshold&lt;/code&gt; property controls how much of the parse is buffered before trying to update the element structure of the document. This property is set by the &lt;code&gt;EditorKit&lt;/code&gt; so that subclasses can disable it.</source>
          <target state="translated">이 문서는 증분로드를 지원합니다. &lt;code&gt;TokenThreshold&lt;/code&gt; 의 해석 얼마나 많은 재산 컨트롤은 문서의 요소 구조의 갱신 전에 버퍼된다. 이 속성은 &lt;code&gt;EditorKit&lt;/code&gt; 에 의해 설정 되므로 하위 클래스에서 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e699ad7804c54f02a5c8dbb4dd113cb7562482c" translate="yes" xml:space="preserve">
          <source>This edit class works by asking an object to store it's state in Hashtables before and after editing occurs. Upon undo or redo the object is told to restore it's state from these Hashtables.</source>
          <target state="translated">이 편집 클래스는 편집이 발생하기 전후에 Hashtables에 상태를 저장하도록 객체에 요청하여 작동합니다. 실행 취소 또는 다시 실행시 개체는 이러한 해시 테이블에서 상태를 복원하라는 지시를받습니다.</target>
        </trans-unit>
        <trans-unit id="438537faf2084171eecab77f83c23e7cd3225c51" translate="yes" xml:space="preserve">
          <source>This empty implementation is provided so users don't have to implement this method if their data model is not editable.</source>
          <target state="translated">이 빈 구현이 제공되므로 데이터 모델을 편집 할 수없는 경우 사용자가이 메서드를 구현할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="401fcf75c1399bb32c8059d9e92fe949e823f757" translate="yes" xml:space="preserve">
          <source>This encoder</source>
          <target state="translated">이 인코더</target>
        </trans-unit>
        <trans-unit id="06c53a07179fa409192de61c9f405cc3875096dc" translate="yes" xml:space="preserve">
          <source>This encoder's charset</source>
          <target state="translated">이 인코더의 문자셋</target>
        </trans-unit>
        <trans-unit id="e5daae3e79cea5983169c2c8c7faaa7802435961" translate="yes" xml:space="preserve">
          <source>This encoder's current replacement, which is never &lt;code&gt;null&lt;/code&gt; and is never empty</source>
          <target state="translated">이 엔코더의 현재 교체는 &lt;code&gt;null&lt;/code&gt; 이 아니며 비어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="31808377ea719645502f28dca0abd4aeaf250090" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;CompositeData&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이렇게하면 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 메소드의 일반 계약에서 요구하는대로 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 두 개의 &lt;code&gt;CompositeData&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 를 의미합니다. .</target>
        </trans-unit>
        <trans-unit id="a97181d3c1c1e390a10981bbeb0e43a418f7873c" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;CompositeDataSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이를 통해 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 는 &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 메서드의 일반 계약에서 요구하는대로 두 &lt;code&gt;CompositeDataSupport&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 를 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="c1f177eea9c0b7fd7085bad84524a8743bb0a4cf" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;CompositeDataSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이렇게하면 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 메소드의 일반 계약에서 요구하는대로 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 두 개의 &lt;code&gt;CompositeDataSupport&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; ) 임을 암시합니다. .</target>
        </trans-unit>
        <trans-unit id="f9137e249ccdfce59178263ae1ef25f8b68a479e" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 임의의 두 &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="60a3c8ef80596ba6082e576b25f1e93a0a165d54" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 임의의 두 &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a1708417f6418b817d48118b57142676efc7a6c8" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;OpenMBeanInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 임의의 두 &lt;code&gt;OpenMBeanInfo&lt;/code&gt; 에의 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; , 상기 방법은 일반 계약에 의해 요구 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6dec1af806af1f5a527c2c769a8b1578da342c7f" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이렇게하면 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 메소드의 일반 계약에 필요한대로 두 개의 &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; &lt;code&gt; t1.equals(t2) &lt;/code&gt; 가 t1.hashCode () == t2.hashCode () 를 의미합니다. .</target>
        </trans-unit>
        <trans-unit id="8d101cdb42ed5767fa3e70f25fa3568d46a28e29" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 임의의 두 &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; 의 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a236ab005ef5acc2242e30f66b6efee952b22f5" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;TabularDataSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 두 용 &lt;code&gt;TabularDataSupport&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="29426ff66b6200ca43cf7bd44177113f6db1f376" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;e1.equals(e2)&lt;/code&gt; implies that &lt;code&gt;e1.hashCode()==e2.hashCode()&lt;/code&gt; for any two Entries &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt;, as required by the general contract of &lt;a href=&quot;../lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이렇게하면 &lt;code&gt;e1.equals(e2)&lt;/code&gt; 가 &lt;a href=&quot;../lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 일반 계약에서 요구하는대로 두 항목 &lt;code&gt;e1&lt;/code&gt; 및 &lt;code&gt;e2&lt;/code&gt; 에 대해 &lt;code&gt;e1.hashCode()==e2.hashCode()&lt;/code&gt; 를 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="9eaa17d2d08ea6f651e2c9bd29479e4bab9a6bde" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;e1.equals(e2)&lt;/code&gt; implies that &lt;code&gt;e1.hashCode()==e2.hashCode()&lt;/code&gt; for any two Entries &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt;, as required by the general contract of &lt;a href=&quot;../lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이는 &lt;code&gt;e1.equals(e2)&lt;/code&gt; 가 &lt;a href=&quot;../lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 의 일반 계약에 필요한대로 두 개의 항목 &lt;code&gt;e1&lt;/code&gt; 및 &lt;code&gt;e2&lt;/code&gt; 에 대해 &lt;code&gt;e1.hashCode()==e2.hashCode()&lt;/code&gt; ) 임을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="cd37dd64e1ca54ac0945dfdf280e1be4051c5aff" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;e1.equals(e2)&lt;/code&gt; implies that &lt;code&gt;e1.hashCode()==e2.hashCode()&lt;/code&gt; for any two Entries &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt;, as required by the general contract of &lt;code&gt;Object.hashCode&lt;/code&gt;.</source>
          <target state="translated">이는 &lt;code&gt;e1.equals(e2)&lt;/code&gt; 가 &lt;code&gt;Object.hashCode&lt;/code&gt; 의 일반 계약에서 요구하는대로 두 개의 항목 &lt;code&gt;e1&lt;/code&gt; 및 &lt;code&gt;e2&lt;/code&gt; 에 대해 &lt;code&gt;e1.hashCode()==e2.hashCode()&lt;/code&gt; ) 임을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="a863d25c2f16195d6956bef0c0566b6d0fa0aaab" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;list1.equals(list2)&lt;/code&gt; implies that &lt;code&gt;list1.hashCode()==list2.hashCode()&lt;/code&gt; for any two lists, &lt;code&gt;list1&lt;/code&gt; and &lt;code&gt;list2&lt;/code&gt;, as required by the general contract of &lt;a href=&quot;../lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이렇게하면 &lt;code&gt;list1.equals(list2)&lt;/code&gt; 는 &lt;a href=&quot;../lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 일반 계약에서 요구하는대로 &lt;code&gt;list1&lt;/code&gt; 및 &lt;code&gt;list2&lt;/code&gt; 두 목록에 대해 &lt;code&gt;list1.hashCode()==list2.hashCode()&lt;/code&gt; 를 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="4702ec819e5753179cfc0b495a5e82f5d1eee139" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;list1.equals(list2)&lt;/code&gt; implies that &lt;code&gt;list1.hashCode()==list2.hashCode()&lt;/code&gt; for any two lists, &lt;code&gt;list1&lt;/code&gt; and &lt;code&gt;list2&lt;/code&gt;, as required by the general contract of &lt;a href=&quot;../lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;list1.equals(list2)&lt;/code&gt; 가 &lt;a href=&quot;../lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 의 일반 계약에서 요구하는대로 &lt;code&gt;list1&lt;/code&gt; 및 &lt;code&gt;list2&lt;/code&gt; 라는 두 목록에 대해 &lt;code&gt;list1.hashCode()==list2.hashCode()&lt;/code&gt; ) 임을 의미합니다. .</target>
        </trans-unit>
        <trans-unit id="12a797079598660742e64a5b767118fe2bebf2e1" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;path1.equals(path2)&lt;/code&gt; implies that &lt;code&gt;path1.hashCode()==path2.hashCode()&lt;/code&gt; for any two certification paths, &lt;code&gt;path1&lt;/code&gt; and &lt;code&gt;path2&lt;/code&gt;, as required by the general contract of &lt;code&gt;Object.hashCode&lt;/code&gt;.</source>
          <target state="translated">이것에 의해, &lt;code&gt;path1.equals(path2)&lt;/code&gt; 는 &lt;code&gt;Object.hashCode&lt;/code&gt; 의 일반 규약에 의해 요구 &lt;code&gt;path1.hashCode()==path2.hashCode()&lt;/code&gt; , 2 개의 인증 패스 &lt;code&gt;path1&lt;/code&gt; 및 &lt;code&gt;path2&lt;/code&gt; 에 대해 path1.hashCode () == path2.hashCode ()가 되는 것을 보증합니다 .</target>
        </trans-unit>
        <trans-unit id="efd7a5c5e7d31cbc757569ea93d797b8d32736b3" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt;
 t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;
 OpenMBeanOperationInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;
 t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt;t1.equals(t2) &lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 임의의 두 &lt;code&gt; OpenMBeanOperationInfoSupport&lt;/code&gt; 의 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt; t2&lt;/code&gt; , 상기 방법은 일반 계약에 의해 요구 &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4fd56578f10eda62657cbd5ad0a96e516416f18a" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이렇게하면 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 메소드의 일반 계약에 필요한대로 두 개의 &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에 &lt;code&gt;t1.hashCode()==t2.hashCode() &lt;/code&gt; &lt;code&gt;t1.equals(t2) &lt;/code&gt; 가 t1.hashCode () == t2.hashCode () 를 의미합니다. .</target>
        </trans-unit>
        <trans-unit id="e4fe59419b8b4641416077fd2480217d46f92d45" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;
 t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;
 OpenMBeanAttributeInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;
 t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode()&lt;/code&gt; 두 용 &lt;code&gt; OpenMBeanAttributeInfoSupport&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt; t2&lt;/code&gt; , 상기 방법은 일반 계약에 의해 요구 &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="016ef98ab366d41ab5ff454ca07a05d8347bfb45" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;
 t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;
 OpenMBeanConstructorInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode()&lt;/code&gt; 임의의 두 &lt;code&gt; OpenMBeanConstructorInfoSupport&lt;/code&gt; 의 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; , 상기 방법은 일반 계약에 의해 요구 &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c9300286d66ae2acfe35e72d79df7e61fa60486f" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;
 t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;
 OpenMBeanInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode()&lt;/code&gt; 임의의 두 &lt;code&gt; OpenMBeanInfoSupport&lt;/code&gt; 의 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; , 상기 방법은 일반 계약에 의해 요구 &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="626d45f3dc6e302f35f3a565006080742253c283" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;
 t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;
 OpenMBeanParameterInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;
 t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode()&lt;/code&gt; 임의의 두 &lt;code&gt; OpenMBeanParameterInfoSupport&lt;/code&gt; 의 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt; t2&lt;/code&gt; , 상기 방법은 일반 계약에 의해 요구 &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="abf5f912155bc9c4180d475711dbd078178dd6e1" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;CompositeData&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 의미하는 &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; 임의의 두 &lt;code&gt;CompositeData&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; , 상기 방법은 일반 계약에 의해 요구 &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4964ec6664b41ad7400d6ff67876163362900e9d" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 의미하는 &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; 임의의 두 &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14310def1365fcc5f3cd3139415995c4e349e7e2" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 의미하는 &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; 두 용 &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; , 상기 방법은 일반 계약에 의해 요구 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc736297af7d7733d0c7cff660c31671b3af48fd" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 의미하는 &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; 임의의 두 &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="736ac1b36cc49629322da06cfc66443d96b4835a" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이렇게하면 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 메소드의 일반 계약에 필요한대로 두 개의 &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에 &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; &lt;code&gt;t1.equals(t2)&lt;/code&gt; 가 t1.hashCode () == t2.hashCode () 를 의미합니다. .</target>
        </trans-unit>
        <trans-unit id="2521346a8591f2f9e39ba1320a71816982bdd7b0" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;OpenMBeanInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 의미하는 &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; 임의의 두 &lt;code&gt;OpenMBeanInfo&lt;/code&gt; 에의 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99bf9df3ff163296e36d804cb91efdd222787a13" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 의미하는 &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; 임의의 두 &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; 의 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; , 상기 방법은 일반 계약에 의해 요구 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="59d4e7af7ef8a1aaad5c9904dda350534d817cfa" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 의미하는 &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; 임의의 두 &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a56e67dc6846eb80ecb9b28b7bdd7bb48f9ffabc" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 의미하는 &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; 임의의 두 &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; 의 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5048cf47c7589c265d38a9d3789688de3ad3b264" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 것을 보장하지만 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 의미하는 &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; 임의의 두 &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; 의 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; , 상기 방법은 일반 계약에 의해 요구 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c64c2453d65010b1c336d765628433780e9a8208" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;TabularDataSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이렇게하면 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 는 &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 메서드의 일반 계약에서 요구하는대로 두 &lt;code&gt;TabularDataSupport&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에 &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; 를 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="2dd48e203f64ae525f74dfaa9da8459c9751d109" translate="yes" xml:space="preserve">
          <source>This ensures that the</source>
          <target state="translated">이것은</target>
        </trans-unit>
        <trans-unit id="5f7e517c8500e111c100f9af14ac55c0ae2c2bef" translate="yes" xml:space="preserve">
          <source>This ensures that the &lt;code&gt;equals&lt;/code&gt; method works properly across different implementations of the &lt;code&gt;Map.Entry&lt;/code&gt; interface.</source>
          <target state="translated">이렇게하면 &lt;code&gt;equals&lt;/code&gt; 메소드가 &lt;code&gt;Map.Entry&lt;/code&gt; 인터페이스 의 다른 구현에서 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="22981eb19202d8e653206d092e5e3522080ec2a4" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;code&gt;obj&lt;/code&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; interface.</source>
          <target state="translated">이렇게하면이 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;code&gt;obj&lt;/code&gt; 매개 변수에 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="7fa22d1303562035a56aeb3f70cf9d8afb4eff91" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;code&gt;obj&lt;/code&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; interface.</source>
          <target state="translated">이렇게하면이 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; 의 다른 구현 인 &lt;code&gt;obj&lt;/code&gt; 매개 변수에 대해 올바르게 작동합니다. 인터페이스 .</target>
        </trans-unit>
        <trans-unit id="c35d604d50f8effa4af4319277b3b27dc4d0ca83" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;code&gt;obj&lt;/code&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanInfo&lt;/code&gt; interface.</source>
          <target state="translated">이렇게하면이 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanInfo&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;code&gt;obj&lt;/code&gt; 매개 변수에 대해 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="d9f4990e303ffba395d311e9e2648124b393bcc1" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;code&gt;obj&lt;/code&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; interface.</source>
          <target state="translated">이렇게하면이 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;code&gt;obj&lt;/code&gt; 매개 변수에 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="2dc6602188e622505dc6530d67bf53c85a1a8c90" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;code&gt;obj&lt;/code&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; interface.</source>
          <target state="translated">이렇게하면이 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;code&gt;obj&lt;/code&gt; 매개 변수에 대해 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="ae5cdd242de891dbb5ac61d2854ac590142b3727" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;CompositeData&lt;/code&gt; interface, with the restrictions mentioned in the &lt;a href=&quot;../../../../java.base/java/util/collection#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;java.util.Collection&lt;/code&gt; interface.</source>
          <target state="translated">이는 &lt;code&gt;java.util.Collection&lt;/code&gt; 인터페이스 의 &lt;a href=&quot;../../../../java.base/java/util/collection#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt; 메소드에 언급 된 제한 사항과 함께 &lt;code&gt;CompositeData&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;var&gt;obj&lt;/var&gt; 매개 변수에 대해이 &lt;code&gt;equals&lt;/code&gt; 메소드가 올바르게 작동 하도록합니다 .</target>
        </trans-unit>
        <trans-unit id="e2232c689d95cc950c92c0bfc8d5afd8b3a1f6ab" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;CompositeData&lt;/code&gt; interface, with the restrictions mentioned in the &lt;a href=&quot;../../../java/util/collection#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;java.util.Collection&lt;/code&gt; interface.</source>
          <target state="translated">이것은 &lt;code&gt;equals&lt;/code&gt; 메소드 가 서로 다른 구현 인 &lt;var&gt;obj&lt;/var&gt; 매개 변수에 대해 올바르게 작동하도록 합니다. &lt;code&gt;CompositeData&lt;/code&gt; 인터페이스 하고 &lt;code&gt;java.util.Collection&lt;/code&gt; 인터페이스 의 &lt;a href=&quot;../../../java/util/collection#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt; 메소드에 언급 된 제한 사항을 .</target>
        </trans-unit>
        <trans-unit id="d01bed2bc6c9b286244a18f63cbfb86b2a75406e" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; interface.</source>
          <target state="translated">이것은 이것을 보장합니다 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;var&gt;obj&lt;/var&gt; 매개 변수에 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="e905e7a95a4af021609a22c07da9cf6b804d2202" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; interface.</source>
          <target state="translated">이것은 이것을 보장합니다 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; 의 다른 구현 인 &lt;var&gt;obj&lt;/var&gt; 매개 변수에 대해 올바르게 작동합니다. 인터페이스 .</target>
        </trans-unit>
        <trans-unit id="4a7ee87498efa3787aee5c09ad60ad61b1589d63" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanInfo&lt;/code&gt; interface.</source>
          <target state="translated">이것은 이것을 보장합니다 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanInfo&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;var&gt;obj&lt;/var&gt; 매개 변수에 대해 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="dcacb03cc3461394d7901fb988e6f22c9f056864" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; interface.</source>
          <target state="translated">이것은 이것을 보장합니다 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;var&gt;obj&lt;/var&gt; 매개 변수에 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="3c16663c2c9209310b14a419c0f9516a4aba89fa" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; interface.</source>
          <target state="translated">이것은 이것을 보장합니다 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; 의 다른 구현 인 &lt;var&gt;obj&lt;/var&gt; 매개 변수에 대해 올바르게 작동합니다. 인터페이스 .</target>
        </trans-unit>
        <trans-unit id="0178e62f2575a16f3452880df90e42b85d96acfb" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;TabularData&lt;/code&gt; interface.</source>
          <target state="translated">이 그이 보장하지만 &lt;code&gt;equals&lt;/code&gt; 메소드 가 &lt;code&gt;TabularData&lt;/code&gt; 인터페이스 의 다른 구현 인 &lt;var&gt;obj&lt;/var&gt; 매개 변수에 올바르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="8f7813aaf5117feee538d7d89395f823b4f6bfa1" translate="yes" xml:space="preserve">
          <source>This entry grants any code running as both &quot;duke&quot; and &quot;0&quot; permission to read and write files in duke's home directory, as well as permission to make socket connections to &quot;duke.com&quot;.</source>
          <target state="translated">이 항목은 &quot;duke&quot;및 &quot;0&quot;으로 실행되는 모든 코드에 duke의 홈 디렉토리에서 파일을 읽고 쓸 수있는 권한과 &quot;duke.com&quot;에 대한 소켓 연결 권한을 부여합니다.</target>
        </trans-unit>
        <trans-unit id="b7349f6fff56b6ef6defad46072f343b79875324" translate="yes" xml:space="preserve">
          <source>This entry represents a single &lt;code&gt;LoginModule&lt;/code&gt; entry configured for the application specified in the &lt;code&gt;getAppConfigurationEntry(String appName)&lt;/code&gt; method from the &lt;code&gt;Configuration&lt;/code&gt; class.</source>
          <target state="translated">이 항목은 응용 프로그램에 지정된 단일 &lt;code&gt;LoginModule&lt;/code&gt; 항목을 나타냅니다 . &lt;code&gt;getAppConfigurationEntry(String appName)&lt;/code&gt; &lt;code&gt;Configuration&lt;/code&gt; 클래스 getAppConfigurationEntry (String appName) 메소드에 .</target>
        </trans-unit>
        <trans-unit id="0d89b42bd75b0ab3677a923c123313c25aafc55a" translate="yes" xml:space="preserve">
          <source>This enum provides access to the localized textual form of the day-of-week. Some locales also assign different numeric values to the days, declaring Sunday to have the value 1, however this class provides no support for this. See &lt;a href=&quot;temporal/weekfields&quot;&gt;&lt;code&gt;WeekFields&lt;/code&gt;&lt;/a&gt; for localized week-numbering.</source>
          <target state="translated">이 열거 형은 현지화 된 텍스트 형식의 요일에 대한 액세스를 제공합니다. 일부 로케일은 일에 다른 숫자 값을 지정하여 일요일에 값 1을 선언하지만이 클래스는이를 지원하지 않습니다. 보다&lt;a href=&quot;temporal/weekfields&quot;&gt; &lt;code&gt;WeekFields&lt;/code&gt; &lt;/a&gt;현지화 된 주 번호 매기기에 WeekFields 를.</target>
        </trans-unit>
        <trans-unit id="7f9f36341f4cf3a90ec7e76999dae94a94fde72d" translate="yes" xml:space="preserve">
          <source>This enum provides constants of the four Unicode normalization forms that are described in &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt; Unicode Standard Annex #15 &amp;mdash; Unicode Normalization Forms&lt;/a&gt; and two methods to access them.</source>
          <target state="translated">이 열거 형은 다음에 설명 된 네 가지 유니 코드 정규화 형식의 상수를 제공합니다. &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt; 유니 코드 표준 부록 # 15-유니 코드 정규화 양식에 코드 정규화 형식&lt;/a&gt; 과 이에 액세스하는 두 가지 방법의 합니다.</target>
        </trans-unit>
        <trans-unit id="7b5363154e54782f805c8735187619d9f37433bf" translate="yes" xml:space="preserve">
          <source>This enum provides constants to select a filtering mode for locale matching.</source>
          <target state="translated">이 열거 형은 로캘 일치를위한 필터링 모드를 선택하는 상수를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7990678ba96d0684d8a647d58050509e1a46e50d" translate="yes" xml:space="preserve">
          <source>This enum provides constants to select a filtering mode for locale matching. Refer to &lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647 Matching of Language Tags&lt;/a&gt; for details.</source>
          <target state="translated">이 열거 형은 로캘 일치를위한 필터링 모드를 선택하는 상수를 제공합니다. 인용하다&lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt; RFC 4647 언어 태그 일치&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="55de9afdf4bb8a7cd3119a4e53128a3b8a1d002a" translate="yes" xml:space="preserve">
          <source>This enum represents a common concept that is found in many calendar systems. As such, this enum may be used by any calendar system that has the day-of-week concept defined exactly equivalent to the ISO calendar system.</source>
          <target state="translated">이 열거 형은 많은 달력 시스템에서 볼 수있는 일반적인 개념을 나타냅니다. 따라서이 열거 형은 요일 개념이 ISO 캘린더 시스템과 정확히 동일하게 정의 된 캘린더 시스템에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbf809375262460ff823a3f9b7560eff6cd99f53" translate="yes" xml:space="preserve">
          <source>This enum represents a common concept that is found in many calendar systems. As such, this enum may be used by any calendar system that has the month-of-year concept defined exactly equivalent to the ISO-8601 calendar system.</source>
          <target state="translated">이 열거 형은 많은 달력 시스템에서 볼 수있는 일반적인 개념을 나타냅니다. 따라서이 열거 형은 ISO-8601 캘린더 시스템과 정확히 동일하게 정의 된 월별 개념을 가진 캘린더 시스템에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dac22bafb7cb96ffcb18388a5159dde8b90a3059" translate="yes" xml:space="preserve">
          <source>This enum represents the cause of a &lt;code&gt;FocusEvent&lt;/code&gt;- the reason why it occurred.</source>
          <target state="translated">이 열거 형은 &lt;code&gt;FocusEvent&lt;/code&gt; 의 원인 (발생 원인)을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="888e38e541505ce0a25544e9492e83b6349abf14" translate="yes" xml:space="preserve">
          <source>This enum represents the cause of a &lt;code&gt;FocusEvent&lt;/code&gt;- the reason why it occurred. Possible reasons include mouse events, keyboard focus traversal, window activation. If no cause is provided then the reason is &lt;code&gt;UNKNOWN&lt;/code&gt;.</source>
          <target state="translated">이 열거 형은 &lt;code&gt;FocusEvent&lt;/code&gt; 의 원인 (발생 원인)을 나타냅니다 . 가능한 이유에는 마우스 이벤트, 키보드 포커스 탐색, 창 활성화 등이 있습니다. 원인이 제공되지 않은 경우 이유는 &lt;code&gt;UNKNOWN&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="39d8990c565ce5fc8b1848e92a96ccff3f9abc9b" translate="yes" xml:space="preserve">
          <source>This environment of an applet represents the document that contains the applet.</source>
          <target state="translated">이 애플릿 환경은 애플릿이 포함 된 문서를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="36c7f92a72c7bf1c230aab99af6f12a039767db7" translate="yes" xml:space="preserve">
          <source>This error will be thrown in the following situations:</source>
          <target state="translated">이 오류는 다음 상황에서 발생합니다.</target>
        </trans-unit>
        <trans-unit id="363b5fe5ec9e80f0412ffd5e07bafe0e5b4d8394" translate="yes" xml:space="preserve">
          <source>This event allows up to three name components for each element:</source>
          <target state="translated">이 이벤트는 각 요소에 대해 최대 3 개의 이름 구성 요소를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="dfcc46e892fb5828d920935df7139ce416d6a1e7" translate="yes" xml:space="preserve">
          <source>This event id indicates that a meaningful action occurred.</source>
          <target state="translated">이 이벤트 ID는 의미있는 작업이 발생했음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a8f797ed1168ab4b1198940f57fd2998b0d3d207" translate="yes" xml:space="preserve">
          <source>This event id indicates that an item's state changed.</source>
          <target state="translated">이 이벤트 ID는 항목의 상태가 변경되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5319b6b445d9dd3828524b535e848e5095300f04" translate="yes" xml:space="preserve">
          <source>This event id indicates that object's text changed.</source>
          <target state="translated">이 이벤트 ID는 개체의 텍스트가 변경되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ef95357f394f4f6e70d75dbb5ecb4adfee252967" translate="yes" xml:space="preserve">
          <source>This event indicates that a component was added to the container.</source>
          <target state="translated">이 이벤트는 구성 요소가 컨테이너에 추가되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="33bc73dc9f82c33c3457ab3965fc1f281c267988" translate="yes" xml:space="preserve">
          <source>This event indicates that a component was removed from the container.</source>
          <target state="translated">이 이벤트는 구성 요소가 컨테이너에서 제거되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="112dd1a0d9fcaccef70de6868974788e9ee74000" translate="yes" xml:space="preserve">
          <source>This event indicates that an SSL handshake completed on a given SSL connection.</source>
          <target state="translated">이 이벤트는 주어진 SSL 연결에서 SSL 핸드 셰이크가 완료되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d71f6ef98b1f22c5fc51c5875d4da46a55b8ad34" translate="yes" xml:space="preserve">
          <source>This event indicates that an SSL handshake completed on a given SSL connection. All of the core information about that handshake's result is captured through an &quot;SSLSession&quot; object. As a convenience, this event class provides direct access to some important session attributes.</source>
          <target state="translated">이 이벤트는 주어진 SSL 연결에서 SSL 핸드 셰이크가 완료되었음을 나타냅니다. 해당 핸드 셰이크 결과에 대한 모든 핵심 정보는 &quot;SSLSession&quot;오브젝트를 통해 캡처됩니다. 편의상이 이벤트 클래스는 중요한 세션 속성에 직접 액세스 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="2435d55b4ca794291a6b3329d5636edd1518213f" translate="yes" xml:space="preserve">
          <source>This event indicates that the Component is no longer the focus owner.</source>
          <target state="translated">이 이벤트는 구성 요소가 더 이상 포커스 소유자가 아님을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8537612cd31a1ac02deb137a59441afbc59e1fe7" translate="yes" xml:space="preserve">
          <source>This event indicates that the Component is now the focus owner.</source>
          <target state="translated">이 이벤트는 구성 요소가 이제 포커스 소유자임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8a828410a9d58d691ec1882d68b2631884248a84" translate="yes" xml:space="preserve">
          <source>This event indicates that the component was made visible.</source>
          <target state="translated">이 이벤트는 구성 요소가 표시되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="eb438a1e622b1ed441b733e4000b5dcc52a692d3" translate="yes" xml:space="preserve">
          <source>This event indicates that the component was rendered invisible.</source>
          <target state="translated">이 이벤트는 구성 요소가 보이지 않게 렌더링되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0664771fb8df11b783194e03c4f44dbff8a5c922" translate="yes" xml:space="preserve">
          <source>This event indicates that the component's position changed.</source>
          <target state="translated">이 이벤트는 구성 요소의 위치가 변경되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="78d136cd801e49ccd068426225f7db1ec0a77fb9" translate="yes" xml:space="preserve">
          <source>This event indicates that the component's size changed.</source>
          <target state="translated">이 이벤트는 구성 요소의 크기가 변경되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="27d3404af5e3b4106c0cc76ce3cff1c3c9ce59bb" translate="yes" xml:space="preserve">
          <source>This event indicates that the user wants some action to occur.</source>
          <target state="translated">이 이벤트는 사용자가 어떤 작업이 발생하기를 원함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c0a6e7c7da3fec52ff5f69625d95f6dc7ef054b2" translate="yes" xml:space="preserve">
          <source>This event is generated by a Container object (such as a Panel) when the Container is added, removed, moved, or resized, and passed down the hierarchy. It is also generated by a Component object when that object's &lt;code&gt;addNotify&lt;/code&gt;, &lt;code&gt;removeNotify&lt;/code&gt;, &lt;code&gt;show&lt;/code&gt;, or &lt;code&gt;hide&lt;/code&gt; method is called. The &lt;code&gt;ANCESTOR_MOVED&lt;/code&gt; and &lt;code&gt;ANCESTOR_RESIZED&lt;/code&gt; events are dispatched to every &lt;code&gt;HierarchyBoundsListener&lt;/code&gt; or &lt;code&gt;HierarchyBoundsAdapter&lt;/code&gt; object which registered to receive such events using the Component's &lt;code&gt;addHierarchyBoundsListener&lt;/code&gt; method. (&lt;code&gt;HierarchyBoundsAdapter&lt;/code&gt; objects implement the &lt;code&gt;HierarchyBoundsListener&lt;/code&gt; interface.) The &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; events are dispatched to every &lt;code&gt;HierarchyListener&lt;/code&gt; object which registered to receive such events using the Component's &lt;code&gt;addHierarchyListener&lt;/code&gt; method. Each such listener object gets this &lt;code&gt;HierarchyEvent&lt;/code&gt; when the event occurs.</source>
          <target state="translated">이 이벤트는 컨테이너가 추가, 제거, 이동 또는 크기 조정되고 계층 아래로 전달 될 때 컨테이너 개체 (예 : 패널)에 의해 생성됩니다. 또한 해당 객체의 &lt;code&gt;addNotify&lt;/code&gt; , &lt;code&gt;removeNotify&lt;/code&gt; , &lt;code&gt;show&lt;/code&gt; 또는 &lt;code&gt;hide&lt;/code&gt; 메소드가 호출 될 때 Component 객체에 의해 생성됩니다 . &lt;code&gt;ANCESTOR_MOVED&lt;/code&gt; 및 &lt;code&gt;ANCESTOR_RESIZED&lt;/code&gt; 이벤트는 모든에 파견 &lt;code&gt;HierarchyBoundsListener&lt;/code&gt; 또는 &lt;code&gt;HierarchyBoundsAdapter&lt;/code&gt; 구성 요소의 사용 등의 이벤트를 수신하기 위해 등록 된 오브젝트 &lt;code&gt;addHierarchyBoundsListener&lt;/code&gt; 된 방법을. ( &lt;code&gt;HierarchyBoundsAdapter&lt;/code&gt; 객체는 &lt;code&gt;HierarchyBoundsListener&lt;/code&gt; 를 구현합니다.인터페이스.) &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; 이벤트는 Component의 &lt;code&gt;addHierarchyListener&lt;/code&gt; 메소드를 사용하여 이러한 이벤트를 수신하도록 등록한 모든 &lt;code&gt;HierarchyListener&lt;/code&gt; 객체 로 전달됩니다 . 이러한 각 리스너 객체는 이벤트가 발생할 때이 &lt;code&gt;HierarchyEvent&lt;/code&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="b3f8bdc3cbf3a53af1cc4c37e97a21eef4fdb924" translate="yes" xml:space="preserve">
          <source>This event is propagated to a SSLSessionBindingListener.</source>
          <target state="translated">이 이벤트는 SSLSessionBindingListener에 전파됩니다.</target>
        </trans-unit>
        <trans-unit id="f8c4122b285db53dda12ee6f58a04ced21a2965f" translate="yes" xml:space="preserve">
          <source>This event is propagated to a SSLSessionBindingListener. When a listener object is bound or unbound to an SSLSession by &lt;a href=&quot;sslsession#putValue(java.lang.String,java.lang.Object)&quot;&gt;&lt;code&gt;SSLSession.putValue(String, Object)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sslsession#removeValue(java.lang.String)&quot;&gt;&lt;code&gt;SSLSession.removeValue(String)&lt;/code&gt;&lt;/a&gt;, objects which implement the SSLSessionBindingListener will be receive an event of this type. The event's &lt;code&gt;name&lt;/code&gt; field is the key in which the listener is being bound or unbound.</source>
          <target state="translated">이 이벤트는 SSLSessionBindingListener로 전파됩니다. 리스너 객체가 &lt;a href=&quot;sslsession#putValue(java.lang.String,java.lang.Object)&quot;&gt; &lt;code&gt;SSLSession.putValue(String, Object)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;sslsession#removeValue(java.lang.String)&quot;&gt; &lt;code&gt;SSLSession.removeValue(String)&lt;/code&gt; &lt;/a&gt; 의해 SSLSession에 바인드되거나 바인드 해제되면 SSLSessionBindingListener 를 구현하는 객체는이 유형의 이벤트를 수신합니다. 이벤트의 &lt;code&gt;name&lt;/code&gt; 필드는 리스너가 바인딩되거나 바인딩 해제되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="b6777ffdf99a5ff15ed1891bd423a6652df90171" translate="yes" xml:space="preserve">
          <source>This event is propagated to a SSLSessionBindingListener. When a listener object is bound or unbound to an SSLSession by &lt;a href=&quot;sslsession#putValue-java.lang.String-java.lang.Object-&quot;&gt;&lt;code&gt;SSLSession.putValue(String, Object)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sslsession#removeValue-java.lang.String-&quot;&gt;&lt;code&gt;SSLSession.removeValue(String)&lt;/code&gt;&lt;/a&gt;, objects which implement the SSLSessionBindingListener will be receive an event of this type. The event's &lt;code&gt;name&lt;/code&gt; field is the key in which the listener is being bound or unbound.</source>
          <target state="translated">이 이벤트는 SSLSessionBindingListener에 전파됩니다. 리스너 객체가 &lt;a href=&quot;sslsession#putValue-java.lang.String-java.lang.Object-&quot;&gt; &lt;code&gt;SSLSession.putValue(String, Object)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;sslsession#removeValue-java.lang.String-&quot;&gt; &lt;code&gt;SSLSession.removeValue(String)&lt;/code&gt; &lt;/a&gt; 의해 SSLSession에 바인드 또는 바인드 해제되면 SSLSessionBindingListener 를 구현하는 객체에이 유형의 이벤트가 수신됩니다. 이벤트의 &lt;code&gt;name&lt;/code&gt; 필드는 리스너가 바인드 또는 바인드 해제되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="9c293ee74566b889378c2f6ed5397843ab8eabb9" translate="yes" xml:space="preserve">
          <source>This event type is used by the &lt;code&gt;BeanContextServiceRevokedListener&lt;/code&gt; in order to identify the service being revoked.</source>
          <target state="translated">이 이벤트 타입은 취소되는 서비스를 식별하기 위해 &lt;code&gt;BeanContextServiceRevokedListener&lt;/code&gt; 에 의해 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="73eaed984e9325afb8ae34d4b9ef82a0cb180277" translate="yes" xml:space="preserve">
          <source>This event type is used by the BeanContextServicesListener in order to identify the service being registered.</source>
          <target state="translated">이 이벤트 타입은 등록 된 서비스를 식별하기 위해 BeanContextServicesListener에 의해 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ffdcf6190d33f1994c08ef73220c243de8d0f9c0" translate="yes" xml:space="preserve">
          <source>This example code demonstrates the creation of a GSSCredential implementation for a specific entity, querying of its fields, and its release when it is no longer needed:</source>
          <target state="translated">이 예제 코드는 특정 엔터티에 대한 GSSCredential 구현 생성, 필드 쿼리 및 더 이상 필요하지 않은 경우 릴리스를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="324b5aeb5c41ed1a8f6d1864888f4ba4db04099c" translate="yes" xml:space="preserve">
          <source>This example creates a configuration by resolving a module named &quot;&lt;code&gt;myapp&lt;/code&gt;&quot; with the configuration for the boot layer as the parent. It then creates a new layer with the modules in this configuration. All modules are defined to the same class loader.</source>
          <target state="translated">이 예에서는 부팅 계층에 대한 구성을 부모로 사용하여 &quot; &lt;code&gt;myapp&lt;/code&gt; &quot; 이라는 모듈을 확인하여 구성을 만듭니다 . 그런 다음이 구성의 모듈로 새 계층을 만듭니다. 모든 모듈은 동일한 클래스 로더에 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="0c03fae7847cbdcf2a7c0890ce0e9b3de1ea92a1" translate="yes" xml:space="preserve">
          <source>This example creates a hashtable of numbers. It uses the names of the numbers as keys:</source>
          <target state="translated">이 예에서는 숫자의 해시 테이블을 만듭니다. 숫자의 이름을 키로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="09d5046db3945a7fb60de34961378b349f6a5370" translate="yes" xml:space="preserve">
          <source>This example creates and uses a date in a named non-ISO calendar system.</source>
          <target state="translated">이 예는 이름이 지정된 비 ISO 달력 시스템에서 날짜를 만들고 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ee41c74c9d39854de7fb63a6d22884c91abdbab7" translate="yes" xml:space="preserve">
          <source>This example creates and uses a date in a specific ThaiBuddhist calendar system.</source>
          <target state="translated">이 예는 특정 ThaiBuddhist 달력 시스템에서 날짜를 작성하고 사용합니다.</target>
        </trans-unit>
        <trans-unit id="dbb65bb38af7b88d332b1c0fe95984b9f1b415dd" translate="yes" xml:space="preserve">
          <source>This example illustrates the type-safe way to obtain an empty list:</source>
          <target state="translated">이 예는 빈 목록을 얻는 안전한 형식의 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e7c8f3dc1e88f34181678c2ae956e0c12ab62ad3" translate="yes" xml:space="preserve">
          <source>This example illustrates the type-safe way to obtain an empty map:</source>
          <target state="translated">이 예제는 빈 맵을 얻는 안전한 형식의 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="39f8737c17fbee97824de105f37e72cf70b73d10" translate="yes" xml:space="preserve">
          <source>This example illustrates the type-safe way to obtain an empty navigable set:</source>
          <target state="translated">이 예는 비어있는 탐색 가능한 세트를 얻는 유형 안전 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="490adafdba1a3a049c697756377b581a634eacfb" translate="yes" xml:space="preserve">
          <source>This example illustrates the type-safe way to obtain an empty set:</source>
          <target state="translated">이 예는 빈 세트를 얻는 형식 안전 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="4872829aa63418ad51d68f41eacc3bb03f4a57fd" translate="yes" xml:space="preserve">
          <source>This example illustrates the type-safe way to obtain an empty sorted set:</source>
          <target state="translated">이 예는 빈 정렬 된 집합을 얻는 형식 안전 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="4bfbfaeeb85a05ec1329edf719e815584c1d2158" translate="yes" xml:space="preserve">
          <source>This example lists todays date for all of the available calendars.</source>
          <target state="translated">이 예는 사용 가능한 모든 캘린더의 오늘 날짜를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="a176f7a9b24b766d31e744ec1624b26d78ff94c5" translate="yes" xml:space="preserve">
          <source>This example provides &quot;&lt;code&gt;com.example.app.MyResources&lt;/code&gt;&quot; resource bundle of the French locale. Traditionally resource bundles of all locales are packaged in the same package as the resource bundle base name. When deploying resource bundles in more than one modules and two modules containing a package of the same name, &lt;em&gt;split package&lt;/em&gt;, is not supported, resource bundles in each module can be packaged in a different package as shown in this example where this provider packages the resource bundles in per-language package, i.e. &lt;code&gt;com.example.app.fr&lt;/code&gt; for French locale.</source>
          <target state="translated">이 예제는 프랑스어 로케일의 &quot; &lt;code&gt;com.example.app.MyResources&lt;/code&gt; &quot;자원 번들을 제공합니다 . 일반적으로 모든 로케일의 리소스 번들은 리소스 번들 기본 이름과 동일한 패키지에 패키지됩니다. 두 개 이상의 모듈에 리소스 번들을 배포하고 같은 이름의 패키지를 포함하는 두 개의 모듈 인 &lt;em&gt;split package&lt;/em&gt; 가 지원되지 않는 경우이 공급자가 리소스를 패키지화하는이 예제에 표시된대로 각 모듈의 리소스 번들을 다른 패키지에 패키지화 할 수 있습니다. 언어 별 패키지의 번들, 즉 프랑스어 로케일의 경우 &lt;code&gt;com.example.app.fr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="648b63858d674e8acadf1871284e221d81c3346e" translate="yes" xml:space="preserve">
          <source>This example was produced by running the program:</source>
          <target state="translated">이 예제는 프로그램을 실행하여 생성되었습니다.</target>
        </trans-unit>
        <trans-unit id="db267f768ce4e267b90d40c023dfa16d110d8248" translate="yes" xml:space="preserve">
          <source>This example would select the &lt;code&gt;&amp;lt;bar&amp;gt;&lt;/code&gt; element in an XML document such as the following:</source>
          <target state="translated">이 예제는 다음과 같은 XML 문서에서 &lt;code&gt;&amp;lt;bar&amp;gt;&lt;/code&gt; 요소를 선택합니다 .</target>
        </trans-unit>
        <trans-unit id="d0818493ecc5fe805ac5b423d66ec833896bf1e0" translate="yes" xml:space="preserve">
          <source>This exception can be thrown during any interaction with the InitialContext, not only when the InitialContext is constructed. For example, the implementation of the initial context might lazily retrieve the context only when actual methods are invoked on it. The application should not have any dependency on when the existence of an initial context is determined.</source>
          <target state="translated">이 예외는 InitialContext가 구성 될 때뿐만 아니라 InitialContext와의 상호 작용 중에 발생할 수 있습니다. 예를 들어, 초기 컨텍스트의 구현은 실제 메소드가 호출 될 때만 컨텍스트를 느리게 검색 할 수 있습니다. 응용 프로그램은 초기 컨텍스트의 존재가 결정될 때 의존하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="7fb70cddba09dae32521782ca39d9287311633ae" translate="yes" xml:space="preserve">
          <source>This exception does not correspond to a standard SQLState.</source>
          <target state="translated">이 예외는 표준 SQLState에 해당하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ebd277a641e5edb2a6d1b8b8160dfc6023c80f73" translate="yes" xml:space="preserve">
          <source>This exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The</source>
          <target state="translated">이 예외는 범용 예외 체인 메커니즘에 맞게 개선되었습니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="fc0ed4883811ecd2ba38eb6a181bbf81bc9c68b8" translate="yes" xml:space="preserve">
          <source>This exception includes the text being parsed and the error index.</source>
          <target state="translated">이 예외에는 구문 분석되는 텍스트와 오류 색인이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c10b06251c203b077f176eed708ebfef045a3813" translate="yes" xml:space="preserve">
          <source>This exception indicates one of a variety of certificate problems.</source>
          <target state="translated">이 예외는 다양한 인증서 문제 중 하나를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="33e94f716a79a8d3b0da393e317e14e96f5755d8" translate="yes" xml:space="preserve">
          <source>This exception indicates that the name being specified does not conform to the naming syntax of a naming system.</source>
          <target state="translated">이 예외는 지정된 이름이 이름 지정 시스템의 이름 지정 구문을 준수하지 않음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d8fa4e42b480993ad1adbfc13670ec6b9d32fa39" translate="yes" xml:space="preserve">
          <source>This exception indicates that the name being specified does not conform to the naming syntax of a naming system. This exception is thrown by any of the methods that does name parsing (such as those in Context, DirContext, CompositeName and CompoundName).</source>
          <target state="translated">이 예외는 지정된 이름이 이름 지정 시스템의 이름 지정 구문을 준수하지 않음을 나타냅니다. 이 예외는 이름 구문 분석을 수행하는 모든 메소드 (예 : Context, DirContext, CompositeName 및 CompoundName의 메소드)에 의해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a41811495370e0547788735a1c587ae46610a95c" translate="yes" xml:space="preserve">
          <source>This exception is mainly used by data input streams to signal end of stream. Note that many other input operations return a special value on end of stream rather than throwing an exception.</source>
          <target state="translated">이 예외는 주로 데이터 입력 스트림에서 스트림 끝을 알리기 위해 사용됩니다. 다른 많은 입력 작업은 예외를 발생시키지 않고 스트림 끝에서 특별한 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7032d9b1e8a75130f0803a0ccf976db6b7484d92" translate="yes" xml:space="preserve">
          <source>This exception is not related to the &lt;a href=&quot;../../security/accesscontrolexception&quot;&gt;&lt;code&gt;AccessControlException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../lang/securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; thrown by access controllers or security managers when access to a file is denied.</source>
          <target state="translated">이 예외는 파일에 대한 액세스가 거부 될 때 액세스 컨트롤러 또는 보안 관리자가 던지는 &lt;a href=&quot;../../security/accesscontrolexception&quot;&gt; &lt;code&gt;AccessControlException&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../lang/securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt; 과 관련이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="cd593da22d7bd37c84871cd2a51f0ce84fc355d4" translate="yes" xml:space="preserve">
          <source>This exception is raised when a role in a relation does not exist, or is not readable, or is not settable.</source>
          <target state="translated">이 예외는 관계의 역할이 존재하지 않거나 읽을 수 없거나 설정할 수없는 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="246e01e59808ff79b55f0b9be5fc7653842efa99" translate="yes" xml:space="preserve">
          <source>This exception is raised when an access is done to the Relation Service and that one is not registered.</source>
          <target state="translated">이 예외는 관계 서비스에 대한 액세스가 완료되고 등록되지 않은 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="89fc0f81cd47a0cc186b5077a3a71a355bfda4f3" translate="yes" xml:space="preserve">
          <source>This exception is raised when an invalid Relation Service is provided.</source>
          <target state="translated">이 예외는 유효하지 않은 관계 서비스가 제공 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="06f9f29b29245f3df3951ad627fc9dc6a47f8c46" translate="yes" xml:space="preserve">
          <source>This exception is raised when relation id provided for a relation is already used.</source>
          <target state="translated">관계에 제공된 관계 ID가 이미 사용 된 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c94b392222d7201f06010cfcbd4189e3cbf0aa3b" translate="yes" xml:space="preserve">
          <source>This exception is raised when there is no relation for a given relation id in a Relation Service.</source>
          <target state="translated">관계 서비스에 주어진 관계 ID에 대한 관계가없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="37637570799bbcc0f5745c0d3ff3a7609bb45288" translate="yes" xml:space="preserve">
          <source>This exception is raised when there is no relation type with given name in Relation Service.</source>
          <target state="translated">관계 서비스에 이름이 지정된 관계 유형이없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6d6e29a17d53533b6eef2ab8a2039d9b0bc9946f" translate="yes" xml:space="preserve">
          <source>This exception is raised when there is no role info with given name in a given relation type.</source>
          <target state="translated">주어진 관계 유형에 지정된 이름의 역할 정보가없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d572f6242fcc3485a8ec60482ca8968cb95a1c5b" translate="yes" xml:space="preserve">
          <source>This exception is raised when, in a role info, its minimum degree is greater than its maximum degree.</source>
          <target state="translated">이 예외는 역할 정보에서 최소 등급이 최대 등급보다 큰 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f60275588e3c668e8ff47c8a18e4a3eb13eda831" translate="yes" xml:space="preserve">
          <source>This exception is thrown by &lt;code&gt;doPrivileged(PrivilegedExceptionAction)&lt;/code&gt; and &lt;code&gt;doPrivileged(PrivilegedExceptionAction,
 AccessControlContext context)&lt;/code&gt; to indicate that the action being performed threw a checked exception.</source>
          <target state="translated">이 예외는 &lt;code&gt;doPrivileged(PrivilegedExceptionAction)&lt;/code&gt; 및 &lt;code&gt;doPrivileged(PrivilegedExceptionAction, AccessControlContext context)&lt;/code&gt; 에 의해 발생합니다. 에 의해 수행되어 수행중인 조치가 점검 된 예외를 발생 시켰음을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="1299a98829234a5ef8fbfe5da579ee11b461133d" translate="yes" xml:space="preserve">
          <source>This exception is thrown by &lt;code&gt;doPrivileged(PrivilegedExceptionAction)&lt;/code&gt; and &lt;code&gt;doPrivileged(PrivilegedExceptionAction,
 AccessControlContext context)&lt;/code&gt; to indicate that the action being performed threw a checked exception. The exception thrown by the action can be obtained by calling the &lt;code&gt;getException&lt;/code&gt; method. In effect, an &lt;code&gt;PrivilegedActionException&lt;/code&gt; is a &quot;wrapper&quot; for an exception thrown by a privileged action.</source>
          <target state="translated">이 예외는 &lt;code&gt;doPrivileged(PrivilegedExceptionAction)&lt;/code&gt; 및 &lt;code&gt;doPrivileged(PrivilegedExceptionAction, AccessControlContext context)&lt;/code&gt; 에 의해 수행되어 수행중인 조치가 점검 된 예외를 발생 시켰음을 표시합니다. 조치에 의해 발생 된 예외는 &lt;code&gt;getException&lt;/code&gt; 메소드 를 호출하여 얻을 수 있습니다 . 실제로, &lt;code&gt;PrivilegedActionException&lt;/code&gt; 은 특권 액션에 의해 발생 된 예외의 &quot;래퍼&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="5530e47fff716d797f391867dfba35b11fcffef8" translate="yes" xml:space="preserve">
          <source>This exception is thrown by LoginModules if authentication failed. For example, a &lt;code&gt;LoginModule&lt;/code&gt; throws this exception if the user entered an incorrect password.</source>
          <target state="translated">이 예외는 인증이 실패한 경우 LoginModules에 의해 발생합니다. 예를 들어 &lt;code&gt;LoginModule&lt;/code&gt; 사용자가 잘못된 암호를 입력하면 에서이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ca3ab3043d6dfdc2fabac86817feeba43db51242" translate="yes" xml:space="preserve">
          <source>This exception is thrown by LoginModules when they determine that a &lt;code&gt;Credential&lt;/code&gt; has expired. For example, a &lt;code&gt;LoginModule&lt;/code&gt; authenticating a user in its &lt;code&gt;login&lt;/code&gt; method may determine that the user's password, although entered correctly, has expired. In this case the &lt;code&gt;LoginModule&lt;/code&gt; throws this exception to notify the application. The application can then take the appropriate steps to assist the user in updating the password.</source>
          <target state="translated">이 예외는 &lt;code&gt;Credential&lt;/code&gt; 이 만료 되었다고 판별 할 때 LoginModules에 의해 발생합니다 . 예를 들어, &lt;code&gt;login&lt;/code&gt; 방법 에서 사용자를 인증 하는 &lt;code&gt;LoginModule&lt;/code&gt; 은 사용자의 비밀번호가 올바르게 입력되었지만 만료 된 것으로 판단 할 수 있습니다. 이 경우 &lt;code&gt;LoginModule&lt;/code&gt; 은이 예외를 발생시켜 응용 프로그램에 알립니다. 그런 다음 응용 프로그램은 사용자가 암호를 업데이트 할 수 있도록 적절한 단계를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84488f7e5bf4d309afcf875e0cf1e1fb778b4d56" translate="yes" xml:space="preserve">
          <source>This exception is thrown by LoginModules when they determine that an account has expired. For example, a &lt;code&gt;LoginModule&lt;/code&gt;, after successfully authenticating a user, may determine that the user's account has expired. In this case the &lt;code&gt;LoginModule&lt;/code&gt; throws this exception to notify the application. The application can then take the appropriate steps to notify the user.</source>
          <target state="translated">이 예외는 계정이 만료되었다고 판단 할 때 LoginModule에 의해 발생합니다. 예를 들어, &lt;code&gt;LoginModule&lt;/code&gt; 은 사용자를 성공적으로 인증 한 후 사용자의 계정이 만료되었음을 확인할 수 있습니다. 이 경우 &lt;code&gt;LoginModule&lt;/code&gt; 은이 예외를 발생시켜 응용 프로그램에 알립니다. 그런 다음 응용 프로그램은 적절한 단계를 수행하여 사용자에게 알립니다.</target>
        </trans-unit>
        <trans-unit id="c3a23db5cdc543f911a76ee1f701b5670699b971" translate="yes" xml:space="preserve">
          <source>This exception is thrown by a SASL mechanism implementation to indicate that the SASL exchange has failed due to reasons related to authentication, such as an invalid identity, passphrase, or key.</source>
          <target state="translated">이 예외는 유효하지 않은 ID, 암호 또는 키와 같은 인증 관련 이유로 인해 SASL 교환이 실패했음을 표시하기 위해 SASL 메커니즘 구현에서 발생합니다.</target>
        </trans-unit>
        <trans-unit id="39e992da1bae6a2646cdec653eebc671c5d22978" translate="yes" xml:space="preserve">
          <source>This exception is thrown by credentials implementing the &lt;code&gt;Destroyable&lt;/code&gt; interface when the &lt;code&gt;destroy&lt;/code&gt; method fails.</source>
          <target state="translated">이 예외는 &lt;code&gt;destroy&lt;/code&gt; 메소드가 실패 할 때 &lt;code&gt;Destroyable&lt;/code&gt; 인터페이스를 구현하는 신임 정보에 의해 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="d2bb2b71e8b1c05a22923e140fc2a6f78bb48e5d" translate="yes" xml:space="preserve">
          <source>This exception is thrown by credentials implementing the &lt;code&gt;Refreshable&lt;/code&gt; interface when the &lt;code&gt;refresh&lt;/code&gt; method fails.</source>
          <target state="translated">이 예외는 &lt;code&gt;refresh&lt;/code&gt; 메소드가 실패 했을 때 &lt;code&gt;Refreshable&lt;/code&gt; 인터페이스를 구현하는 자격 증명에 의해 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="4bc14b37aa8efa44b5f813b855472a0d52cde9c3" translate="yes" xml:space="preserve">
          <source>This exception is thrown by methods to indicate that a binding cannot be added because the name is already bound to another object.</source>
          <target state="translated">이 예외는 이름이 이미 다른 개체에 바인딩되어 있으므로 바인딩을 추가 할 수 없음을 나타내는 메서드에 의해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3f50a87f7e74f3bac1a39c7d87437a836ea03616" translate="yes" xml:space="preserve">
          <source>This exception is thrown by the AccessController to indicate that a requested access (to a critical system resource such as the file system or the network) is denied.</source>
          <target state="translated">이 예외는 요청 된 액세스 (파일 시스템 또는 네트워크와 같은 중요한 시스템 자원에 대한)가 거부되었음을 나타 내기 위해 AccessController에 의해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5ac6ba90aca82b24f60c845bd1771534ddb085f0" translate="yes" xml:space="preserve">
          <source>This exception is thrown by the RMI runtime when activation fails during a remote call to an activatable object.</source>
          <target state="translated">이 예외는 활성화 가능한 개체에 대한 원격 호출 중에 활성화가 실패 할 때 RMI 런타임에서 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="9e999e334f4a551ab8325b396c5326ab7fe53cd9" translate="yes" xml:space="preserve">
          <source>This exception is thrown by various methods in the java.awt.dnd package.</source>
          <target state="translated">이 예외는 java.awt.dnd 패키지의 다양한 메소드에 의해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="13b10a9e1ce0e7b28fd74c1c93d0650255397480" translate="yes" xml:space="preserve">
          <source>This exception is thrown by various methods in the java.awt.dnd package. It is usually thrown to indicate that the target in question is unable to undertake the requested operation that the present time, since the underlying DnD system is not in the appropriate state.</source>
          <target state="translated">이 예외는 java.awt.dnd 패키지의 다양한 메소드에 의해 발생합니다. 일반적으로 기본 DnD 시스템이 적절한 상태에 있지 않기 때문에 해당 대상이 현재 요청 된 작업을 수행 할 수 없음을 나타 내기 위해 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="de70128d4e6b05c186ee1c720a208ef472f651ce" translate="yes" xml:space="preserve">
          <source>This exception is thrown if a key in the keystore cannot be recovered.</source>
          <target state="translated">키 저장소의 키를 복구 할 수없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f8b425e31d21a6d687a44386bcb5d47cac70bff9" translate="yes" xml:space="preserve">
          <source>This exception is thrown if an entry in the keystore cannot be recovered.</source>
          <target state="translated">키 저장소의 항목을 복구 할 수없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bf004dbeca9fa6ef633c613f040283827eda2844" translate="yes" xml:space="preserve">
          <source>This exception is thrown if the native CMM returns an error.</source>
          <target state="translated">이 예외는 기본 CMM이 오류를 반환하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7c7d61c5590a79f20a378cc79058a8edcd745d38" translate="yes" xml:space="preserve">
          <source>This exception is thrown to indicate that the operation reached a point in the name where the operation cannot proceed any further.</source>
          <target state="translated">이 예외는 조작이 더 이상 진행할 수없는 이름의 한 지점에 도달했음을 표시하기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a73a128ee62454d37858e133d0ecdc425831d8d6" translate="yes" xml:space="preserve">
          <source>This exception is thrown to indicate that the operation reached a point in the name where the operation cannot proceed any further. When performing an operation on a composite name, a naming service provider may reach a part of the name that does not belong to its namespace. At that point, it can construct a CannotProceedException and then invoke methods provided by javax.naming.spi.NamingManager (such as getContinuationContext()) to locate another provider to continue the operation. If this is not possible, this exception is raised to the caller of the context operation.</source>
          <target state="translated">이 예외는 조작이 더 이상 진행할 수없는 이름의 한 지점에 도달했음을 표시하기 위해 발생합니다. 합성 이름에 대한 작업을 수행 할 때 이름 지정 서비스 공급자는 네임 스페이스에 속하지 않는 이름의 일부에 도달 할 수 있습니다. 이 시점에서 CannotProceedException을 구성한 다음 javax.naming.spi.NamingManager (예 : getContinuationContext ())에서 제공하는 메소드를 호출하여 다른 제공자를 찾아 조작을 계속할 수 있습니다. 이것이 가능하지 않은 경우,이 예외는 컨텍스트 조작의 호출자에게 제기됩니다.</target>
        </trans-unit>
        <trans-unit id="b920a43bc9fe560f53060820cbe16e4c86837cba" translate="yes" xml:space="preserve">
          <source>This exception is thrown to indicate that the result being returned or returned so far is partial, and that the operation cannot be completed.</source>
          <target state="translated">이 예외는 지금까지 리턴 또는 리턴되는 결과가 부분적이며 조작을 완료 할 수 없음을 표시하기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d2089a06bf446af8c1c5d52cd2a1acb69f7eb14c" translate="yes" xml:space="preserve">
          <source>This exception is thrown to indicate that the result being returned or returned so far is partial, and that the operation cannot be completed. For example, when listing a context, this exception indicates that returned results only represents some of the bindings in the context.</source>
          <target state="translated">이 예외는 지금까지 리턴 또는 리턴되는 결과가 부분적이며 조작을 완료 할 수 없음을 표시하기 위해 발생합니다. 예를 들어, 컨텍스트를 나열 할 때이 예외는 리턴 된 결과가 컨텍스트의 일부 바인딩 만 나타냄을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0fa3d6d88ad2c6dce34e025084644e5629dba7f6" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a &lt;a href=&quot;cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; operating in an AEAD mode (such as GCM/CCM) is unable to verify the supplied authentication tag.</source>
          <target state="translated">이 예외는 AEAD 모드에서 작동 하는 &lt;a href=&quot;cipher&quot;&gt; &lt;code&gt;Cipher&lt;/code&gt; &lt;/a&gt; (예 : GCM / CCM)가 제공된 인증 태그를 확인할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d75ef246bb4a751ebb9f1899a7752a11847cb005" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a call is received that does not match the available skeleton. It indicates either that the remote method names or signatures in this interface have changed or that the stub class used to make the call and the skeleton receiving the call were not generated by the same version of the stub compiler (&lt;code&gt;rmic&lt;/code&gt;).</source>
          <target state="translated">이 예외는 사용 가능한 스켈레톤과 일치하지 않는 호출이 수신 될 때 발생합니다. 이 인터페이스의 원격 메소드 이름 또는 서명이 변경되었거나 호출을 수행하는 데 사용 된 스텁 클래스와 호출을 수신하는 스켈레톤이 동일한 버전의 스텁 컴파일러 ( &lt;code&gt;rmic&lt;/code&gt; ) 에서 생성되지 않았 음을 나타 냅니다.</target>
        </trans-unit>
        <trans-unit id="57d1301034839950e33406fe1cf7e7d9a5e1993d" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a component of the name cannot be resolved because it is not bound.</source>
          <target state="translated">이 예외는, 이름의 컴퍼넌트가 바인드되어 있지 않기 때문에 해결할 수없는 경우에 Throw됩니다.</target>
        </trans-unit>
        <trans-unit id="6f413d3ab1f32cefb3ce99cf79188671b686352f" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a context implementation does not support the operation being invoked.</source>
          <target state="translated">컨텍스트 구현이 호출중인 조작을 지원하지 않는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="57460516d646410f49f0cbcbd0134b253ab4a0c0" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a context implementation does not support the operation being invoked. For example, if a server does not support the Context.bind() method it would throw OperationNotSupportedException when the bind() method is invoked on it.</source>
          <target state="translated">컨텍스트 구현이 호출중인 조작을 지원하지 않는 경우이 예외가 발생합니다. 예를 들어, 서버가 Context.bind () 메소드를 지원하지 않으면 bind () 메소드가 호출 될 때 OperationNotSupportedException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="50b86fb3a01ab4898bcde90c96d7a7f56d3924a4" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a loop was detected while attempting to resolve a link, or an implementation specific limit on link counts has been reached.</source>
          <target state="translated">이 예외는 링크를 해결하는 동안 루프가 감지되거나 링크 수에 대한 구현 특정 제한에 도달 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4c2f8fa414abf991709382ded4c13c36debdb981" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a loop was detected will attempting to resolve a link, or an implementation specific limit on link counts has been reached.</source>
          <target state="translated">루프가 감지되어 링크를 해결하려고 시도하거나 링크 수에 대한 구현 특정 한계에 도달하면이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5d1da130a71dcfc9b5538b08be7ca70f62b9f774" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a malformed link was encountered while resolving or constructing a link.</source>
          <target state="translated">이 예외는 링크를 해결하거나 구성하는 동안 잘못된 링크가 발견 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b2eacf9ed93eff592d27245d0674196637042935" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method does not terminate within the specified time limit.</source>
          <target state="translated">메소드가 지정된 시간 제한 내에 종료되지 않으면이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6529b41bc359144e52aa6f0bbb2d5c2b2b1c4b38" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method does not terminate within the specified time limit. This can happen, for example, if the user specifies that the method should take no longer than 10 seconds, and the method fails to complete with 10 seconds.</source>
          <target state="translated">메소드가 지정된 시간 제한 내에 종료되지 않으면이 예외가 발생합니다. 예를 들어, 사용자가 메소드가 10 초를 초과하지 않도록 지정하고 메소드가 10 초 후에 완료되지 않는 경우에 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94622a00a57fe2c691ac5a52754c85dcf9fdc8a7" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method in some ways violates the schema.</source>
          <target state="translated">이 예외는 어떤 방법으로 메소드가 스키마를 위반할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="eec5202a94d643b10a232078bd0a9899bdfad4bb" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method in some ways violates the schema. An example of schema violation is modifying attributes of an object that violates the object's schema definition. Another example is renaming or moving an object to a part of the namespace that violates the namespace's schema definition.</source>
          <target state="translated">이 예외는 어떤 방법으로 메소드가 스키마를 위반할 때 발생합니다. 스키마 위반의 예는 객체의 스키마 정의를 위반하는 객체의 속성을 수정하는 것입니다. 다른 예는 네임 스페이스의 스키마 정의를 위반하는 네임 스페이스의 일부로 객체의 이름을 바꾸거나 이동하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="59dd923be01c00ea6ac5a97390afa42443932fa1" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method produces a result that exceeds a size-related limit.</source>
          <target state="translated">이 예외는 메서드가 크기 관련 제한을 초과하는 결과를 생성 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="31d22f71cdd1031a9c77a9ba4cb23dce67a18a6a" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method produces a result that exceeds a size-related limit. This can happen, for example, if the result contains more objects than the user requested, or when the size of the result exceeds some implementation-specific limit.</source>
          <target state="translated">이 예외는 메서드가 크기 관련 제한을 초과하는 결과를 생성 할 때 발생합니다. 예를 들어 결과에 사용자가 요청한 것보다 많은 객체가 포함되어 있거나 결과 크기가 구현 별 제한을 초과하는 경우에 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbd9fa71355edcdb1a24b4f3751fa09d73366885" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method terminates abnormally due to a user or system specified limit.</source>
          <target state="translated">이 예외는 사용자 또는 시스템 지정 한계로 인해 메소드가 비정상적으로 종료 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e90980a99f80ee87d4a939aa92ec7a66ef558175" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method terminates abnormally due to a user or system specified limit. This is different from a InsufficientResourceException in that LimitExceededException is due to a user/system specified limit. For example, running out of memory to complete the request would be an insufficient resource. The client asking for 10 answers and getting back 11 is a size limit exception.</source>
          <target state="translated">이 예외는 사용자 또는 시스템 지정 한계로 인해 메소드가 비정상적으로 종료 될 때 발생합니다. LimitExceededException이 사용자 / 시스템 지정 제한으로 인해 InsufficientResourceException과 다릅니다. 예를 들어, 요청을 완료하기 위해 메모리가 부족하면 리소스가 부족합니다. 클라이언트가 10 개의 답변을 요청하고 11을 다시받는 것은 크기 제한 예외입니다.</target>
        </trans-unit>
        <trans-unit id="c416a716ffde29bde878981ed9dcb8d0848e157c" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a naming operation proceeds to a point where a context is required to continue the operation, but the resolved object is not a context.</source>
          <target state="translated">이 예외는 이름 지정 작업이 작업을 계속하기 위해 컨텍스트가 필요한 지점으로 진행되지만 확인 된 개체가 컨텍스트가 아닌 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="81a72d317c6fc8a72579a69b61472a7f43bc74d5" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a naming operation proceeds to a point where a context is required to continue the operation, but the resolved object is not a context. For example, Context.destroy() requires that the named object be a context. If it is not, NotContextException is thrown. Another example is a non-context being encountered during the resolution phase of the Context methods.</source>
          <target state="translated">이 예외는 이름 지정 작업이 작업을 계속하기 위해 컨텍스트가 필요한 지점으로 진행되지만 확인 된 개체가 컨텍스트가 아닌 경우 발생합니다. 예를 들어 Context.destroy ()를 사용하려면 명명 된 객체가 컨텍스트 여야합니다. 그렇지 않은 경우 NotContextException이 발생합니다. 또 다른 예는 컨텍스트 메소드의 분석 단계에서 컨텍스트가 아닌 컨텍스트가 발생하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="fdbbde9349580904b1c36cc1deee8bfe7cdc7804" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a particular XML mechanism is requested but is not available in the environment.</source>
          <target state="translated">이 예외는 특정 XML 메커니즘이 요청되었지만 환경에서 사용할 수없는 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1dc25d47ec82b8f9dd4c3de5dc2dd0f9fc45b85d" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a particular cryptographic algorithm is requested but is not available in the environment.</source>
          <target state="translated">이 예외는 특정 암호화 알고리즘이 요청되었지만 환경에서 사용할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4644df4bf28c4539efcd49b5d10a7bb42e51e6b9" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a particular padding mechanism is expected for the input data but the data is not padded properly.</source>
          <target state="translated">이 예외는 입력 데이터에 특정 패딩 메커니즘이 필요하지만 데이터가 올바르게 채워지지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="302bd654098c5aa1f61763ebbe1ca7522215d3fe" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a particular padding mechanism is requested but is not available in the environment.</source>
          <target state="translated">특정 패딩 메커니즘이 요청되었지만 환경에서 사용할 수없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="101fcdb599f4abff7f000ae7a88b9ec0617aa6cb" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a particular security provider is requested but is not available in the environment.</source>
          <target state="translated">이 예외는 특정 보안 제공자가 요청되었지만 환경에서 사용할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2c2cde6cb8f8e8409a755bb6e1c01e5a05d8da07" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an XML formatted string is being parsed into ModelMBean objects or when XML formatted strings are being created from ModelMBean objects.</source>
          <target state="translated">XML 형식 문자열이 ModelMBean 오브젝트로 구문 분석되거나 ModelMBean 오브젝트에서 XML 형식 문자열이 작성 될 때이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="25db7a2ecc88fac98e9ec065fe80032bf993acb4" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an XML formatted string is being parsed into ModelMBean objects or when XML formatted strings are being created from ModelMBean objects. It is also used to wrapper exceptions from XML parsers that may be used.</source>
          <target state="translated">XML 형식 문자열이 ModelMBean 오브젝트로 구문 분석되거나 ModelMBean 오브젝트에서 XML 형식 문자열이 작성 될 때이 예외가 발생합니다. 또한 사용 가능한 XML 파서의 예외를 래퍼하는 데에도 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="53d4c794c1e118bb48fb37d3336f20a0c87a6a41" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an attempt is made to add or modify an attribute set that has been specified incompletely or incorrectly.</source>
          <target state="translated">이 예외는 불완전하거나 잘못 지정된 속성 세트를 추가 또는 수정하려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c2a1c4c4c3c816a5f13805d517b07a22d25f027d" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an attempt is made to add or modify an attribute set that has been specified incompletely or incorrectly. This could happen, for example, when attempting to add or modify a binding, or to create a new subcontext without specifying all the mandatory attributes required for creation of the object. Another situation in which this exception is thrown is by specification of incompatible attributes within the same attribute set, or attributes in conflict with that specified by the object's schema.</source>
          <target state="translated">이 예외는 불완전하거나 잘못 지정된 속성 세트를 추가 또는 수정하려고 할 때 발생합니다. 예를 들어, 바인딩을 추가 또는 수정하거나 오브젝트 작성에 필요한 모든 필수 속성을 지정하지 않고 새 하위 컨텍스트를 작성하려고 할 때 이런 상황이 발생할 수 있습니다. 이 예외가 발생하는 또 다른 상황은 동일한 속성 세트 내에서 호환되지 않는 속성을 지정하거나 객체의 스키마에 의해 지정된 속성과 충돌하는 속성입니다.</target>
        </trans-unit>
        <trans-unit id="d5446f4e7405a3d0ddb8359b07cc60df20582910" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an attempt is made to add to create an attribute with an invalid attribute identifier.</source>
          <target state="translated">이 예외는 유효하지 않은 속성 식별자로 속성을 작성하기 위해 추가하려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9e24d2a37f41cfc2a12b4c55feecd1e44dade084" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an attempt is made to add to create an attribute with an invalid attribute identifier. The validity of an attribute identifier is directory-specific.</source>
          <target state="translated">이 예외는 유효하지 않은 속성 식별자로 속성을 작성하기 위해 추가하려고 할 때 발생합니다. 속성 식별자의 유효성은 디렉토리마다 다릅니다.</target>
        </trans-unit>
        <trans-unit id="8317fef5f025c8c1c489d2d222975edd10e116a1" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an attempt is made to add, or remove, or modify an attribute, its identifier, or its values that conflicts with the attribute's (schema) definition or the attribute's state.</source>
          <target state="translated">이 예외는 속성, 식별자 또는 속성 (스키마) 정의 또는 속성 상태와 충돌하는 값을 추가, 제거 또는 수정하려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="08c60304b9a2318e37b9524069c68d67fec5a981" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an attempt is made to add, or remove, or modify an attribute, its identifier, or its values that conflicts with the attribute's (schema) definition or the attribute's state. It is thrown in response to DirContext.modifyAttributes(). It contains a list of modifications that have not been performed, in the order that they were supplied to modifyAttributes(). If the list is null, none of the modifications were performed successfully.</source>
          <target state="translated">이 예외는 속성, 식별자 또는 속성 (스키마) 정의 또는 속성 상태와 충돌하는 값을 추가, 제거 또는 수정하려고 할 때 발생합니다. DirContext.modifyAttributes ()에 대한 응답으로 발생합니다. 이 파일에는 modifyAttributes ()에 제공된 순서대로 수행되지 않은 수정 목록이 포함되어 있습니다. 목록이 널이면 수정이 수행되지 않은 것입니다.</target>
        </trans-unit>
        <trans-unit id="ebe3b8391e77c5b75aa9f11c64b6ae6db60cc91f" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an authentication error occurs while accessing the naming or directory service.</source>
          <target state="translated">이름 지정 또는 디렉토리 서비스에 액세스하는 동안 인증 오류가 발생하면이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c62c3666cc2f13c505d3e15aaf32027c33626ca1" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an authentication error occurs while accessing the naming or directory service. An authentication error can happen, for example, when the credentials supplied by the user program are invalid or otherwise fail to authenticate the user to the naming/directory service.</source>
          <target state="translated">이 예외는 이름 지정 또는 디렉터리 서비스에 액세스하는 동안 인증 오류가 발생하면 throw됩니다. 예를 들어 사용자 프로그램에서 제공 한 자격 증명이 유효하지 않거나 이름 지정 / 디렉터리 서비스에 대해 사용자를 인증하지 못하는 경우 인증 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e92d5a4eb1837af13ada81159fcecf16b24e805c" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an authentication error occurs while accessing the naming or directory service. An authentication error can happen, for example, when the credentials supplied by the user program is invalid or otherwise fails to authenticate the user to the naming/directory service.</source>
          <target state="translated">이름 지정 또는 디렉토리 서비스에 액세스하는 동안 인증 오류가 발생하면이 예외가 발생합니다. 예를 들어, 사용자 프로그램에서 제공 한 자격 증명이 유효하지 않거나 이름 지정 / 디렉토리 서비스에 대해 사용자를 인증하지 못하는 경우 인증 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc8b7fbdf808c65f24c4da23487a0ae1bcdf650e" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an error occurs in accessing or processing an ICC_Profile object.</source>
          <target state="translated">이 예외는 ICC_Profile 개체에 액세스하거나 처리 할 때 오류가 발생하면 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="e7b0e2fe87b28ac79412211e90b4a23789221dc0" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an operation attempts to add an attribute that already exists.</source>
          <target state="translated">조작이 이미 존재하는 속성을 추가하려고 시도하면이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0808c2f07b29cbd1d53f53236c70c7c29de9102c" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an output buffer provided by the user is too short to hold the operation result.</source>
          <target state="translated">이 예외는 사용자가 제공 한 출력 버퍼가 너무 짧아서 작업 결과를 보유 할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="454fa55a71651cdde1b0e101e15afcd492adb9d5" translate="yes" xml:space="preserve">
          <source>This exception is thrown when attempting to access an attribute that does not exist.</source>
          <target state="translated">존재하지 않는 속성에 액세스하려고 할 때이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9ecab75d56b4ba05eb55427d1e33a425d334f9b9" translate="yes" xml:space="preserve">
          <source>This exception is thrown when attempting to communicate with a directory or naming service and that service is not available.</source>
          <target state="translated">이 예외는 디렉토리 또는 이름 지정 서비스와 통신하려고하는데 해당 서비스를 사용할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9b5c20f9ae99168641fffbd9044b91f457d76668" translate="yes" xml:space="preserve">
          <source>This exception is thrown when attempting to communicate with a directory or naming service and that service is not available. It might be unavailable for different reasons. For example, the server might be too busy to service the request, or the server might not be registered to service any requests, etc.</source>
          <target state="translated">이 예외는 디렉토리 또는 이름 지정 서비스와 통신하려고하는데 해당 서비스를 사용할 수 없을 때 발생합니다. 다른 이유로 사용하지 못할 수 있습니다. 예를 들어 서버가 너무 바빠서 요청을 처리하지 못하거나 서버가 요청 등을 처리하도록 등록되지 않았을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b554b30c750f03069a8349997f4cf18d9a837fbf" translate="yes" xml:space="preserve">
          <source>This exception is thrown when attempting to destroy a context that is not empty.</source>
          <target state="translated">이 예외는 비어 있지 않은 컨텍스트를 파괴하려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bd0dde72d214907e7714fe11c86f10e8c526fcb8" translate="yes" xml:space="preserve">
          <source>This exception is thrown when attempting to perform an operation for which the client has no permission.</source>
          <target state="translated">이 예외는 클라이언트에게 권한이없는 작업을 수행하려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8363cd2a1ada41c4cb07871c7e5cfc4422cc13b5" translate="yes" xml:space="preserve">
          <source>This exception is thrown when attempting to perform an operation for which the client has no permission. The access control/permission model is dictated by the directory/naming server.</source>
          <target state="translated">이 예외는 클라이언트에게 권한이없는 작업을 수행하려고 할 때 발생합니다. 액세스 제어 / 권한 모델은 디렉토리 / 이름 서버에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="48839fda123e28be6cc99eed74e94281b5247a6e" translate="yes" xml:space="preserve">
          <source>This exception is thrown when no initial context implementation can be created.</source>
          <target state="translated">초기 컨텍스트 구현을 작성할 수없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="acdd48773e49250337c17b3f2116cb62ce5655d5" translate="yes" xml:space="preserve">
          <source>This exception is thrown when no initial context implementation can be created. The policy of how an initial context implementation is selected is described in the documentation of the InitialContext class.</source>
          <target state="translated">초기 컨텍스트 구현을 작성할 수없는 경우이 예외가 발생합니다. 초기 컨텍스트 구현 방법에 대한 정책은 InitialContext 클래스의 설명서에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="371d9f616b47b2acb1cc433ddbbf545be8511eff" translate="yes" xml:space="preserve">
          <source>This exception is thrown when resources are not available to complete the requested operation.</source>
          <target state="translated">요청 된 작업을 완료하기 위해 리소스를 사용할 수없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3c99ac5e4f42a586047b0c3837db34019c890710" translate="yes" xml:space="preserve">
          <source>This exception is thrown when resources are not available to complete the requested operation. This might due to a lack of resources on the server or on the client. There are no restrictions to resource types, as different services might make use of different resources. Such restrictions might be due to physical limits and/or administrative quotas. Examples of limited resources are internal buffers, memory, network bandwidth.</source>
          <target state="translated">요청 된 작업을 완료하기 위해 리소스를 사용할 수없는 경우이 예외가 발생합니다. 서버 나 클라이언트에 리소스가 부족하기 때문일 수 있습니다. 서비스마다 다른 리소스를 사용할 수 있으므로 리소스 유형에는 제한이 없습니다. 이러한 제한은 물리적 제한 및 / 또는 관리 할당량 때문일 수 있습니다. 제한된 리소스의 예로는 내부 버퍼, 메모리, 네트워크 대역폭이 있습니다.</target>
        </trans-unit>
        <trans-unit id="09fad22a772bd21d53e751696746e069001cb96e" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the client is unable to communicate with the directory or naming service.</source>
          <target state="translated">클라이언트가 디렉토리 또는 이름 지정 서비스와 통신 할 수없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="28ef08887bb3708aebd983a08c96a8cfa39a9797" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the client is unable to communicate with the directory or naming service. The inability to communicate with the service might be a result of many factors, such as network partitioning, hardware or interface problems, failures on either the client or server side. This exception is meant to be used to capture such communication problems.</source>
          <target state="translated">클라이언트가 디렉토리 또는 이름 지정 서비스와 통신 할 수없는 경우이 예외가 발생합니다. 서비스와 통신 할 수없는 것은 네트워크 파티셔닝, 하드웨어 또는 인터페이스 문제, 클라이언트 또는 서버 측의 장애와 같은 많은 요인의 결과 일 수 있습니다. 이 예외는 이러한 통신 문제를 포착하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6efd430acb709b2621e9d539947e12d9e66d61d9" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the length of data provided to a block cipher is incorrect, i.e., does not match the block size of the cipher.</source>
          <target state="translated">이 예외는 블록 암호에 제공된 데이터 길이가 올바르지 않은 경우, 즉 암호의 블록 크기와 일치하지 않을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="483ee24d9f269ccb8aea2c071b14c2365f2ecd5b" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the naming operation being invoked has been interrupted.</source>
          <target state="translated">이 예외는, 네이밍 조작의 호출이 중단되었을 경우에 Throw됩니다.</target>
        </trans-unit>
        <trans-unit id="b8b7b4a7229bdebb156a99f438f2b600a0dcf487" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the naming operation being invoked has been interrupted. For example, an application might interrupt a thread that is performing a search. If the search supports being interrupted, it will throw InterruptedNamingException. Whether an operation is interruptible and when depends on its implementation (as provided by the service providers). Different implementations have different ways of protecting their resources and objects from being damaged due to unexpected interrupts.</source>
          <target state="translated">이 예외는, 네이밍 조작의 호출이 중단되었을 경우에 Throw됩니다. 예를 들어, 응용 프로그램이 검색을 수행하는 스레드를 중단 할 수 있습니다. 검색이 중단되는 것을 지원하면 InterruptedNamingException이 발생합니다. 작업이 중단 가능한지 여부와시기는 구현에 따라 다릅니다 (서비스 제공 업체에서 제공 한대로). 구현마다 다른 예기치 않은 인터럽트로 인해 리소스와 개체가 손상되지 않도록 보호하는 방법이 다릅니다.</target>
        </trans-unit>
        <trans-unit id="5c8b8d397c54b830baad3109e9468a9b1ab1d596" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the particular flavor of authentication requested is not supported.</source>
          <target state="translated">요청 된 특정 종류의 인증이 지원되지 않는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5af2dbd51afd3d832635e5a5a5f9ef19b6d40249" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the particular flavor of authentication requested is not supported. For example, if the program is attempting to use strong authentication but the directory/naming supports only simple authentication, this exception would be thrown. Identification of a particular flavor of authentication is provider- and server-specific. It may be specified using specific authentication schemes such those identified using SASL, or a generic authentication specifier (such as &quot;simple&quot; and &quot;strong&quot;).</source>
          <target state="translated">요청 된 특정 종류의 인증이 지원되지 않는 경우이 예외가 발생합니다. 예를 들어, 프로그램이 강력한 인증을 사용하려고하지만 디렉토리 / 이름 지정이 단순한 인증 만 지원하는 경우이 예외가 발생합니다. 특정 종류의 인증을 식별하는 것은 공급자 및 서버마다 다릅니다. SASL을 사용하여 식별 된 것과 같은 특정 인증 체계 나 일반 인증 지정자 (예 : &quot;단순&quot;및 &quot;강력&quot;)를 사용하여 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0289a133e8abfa2a6414887b59f3f1b56d7b1dda" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the specification of a search filter is invalid.</source>
          <target state="translated">이 예외는 검색 필터의 스펙이 유효하지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="332819cc96497ee0281a2d425d00258c041bc8d4" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the specification of a search filter is invalid. The expression of the filter may be invalid, or there may be a problem with one of the parameters passed to the filter.</source>
          <target state="translated">이 예외는 검색 필터의 스펙이 유효하지 않은 경우 발생합니다. 필터 표현이 유효하지 않거나 필터에 전달 된 매개 변수 중 하나에 문제가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5729b449c32051f6a0a5756b8780f0c11f4c3c2a" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the specification of the SearchControls for a search operation is invalid.</source>
          <target state="translated">검색 조작에 대한 SearchControls 스펙이 유효하지 않은 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cdb0be4fb77057c18ab00ea22e44156d1bc19dfc" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the specification of the SearchControls for a search operation is invalid. For example, if the scope is set to a value other than OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE, this exception is thrown.</source>
          <target state="translated">검색 조작에 대한 SearchControls 스펙이 유효하지 않은 경우이 예외가 발생합니다. 예를 들어, 범위가 OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE 이외의 값으로 설정되면이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="17089db05ad45c11e665b76593094d608d306306" translate="yes" xml:space="preserve">
          <source>This exception is thrown when there is a configuration problem.</source>
          <target state="translated">이 예외는 구성 문제가있을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2fc449823f0aec4c36d0a26bb45bbfcce8f03d8a" translate="yes" xml:space="preserve">
          <source>This exception is thrown when there is a configuration problem. This can arise when installation of a provider was not done correctly, or if there are configuration problems with the server, or if configuration information required to access the provider or service is malformed or missing. For example, a request to use SSL as the security protocol when the service provider software was not configured with the SSL component would cause such an exception. Another example is if the provider requires that a URL be specified as one of the environment properties but the client failed to provide it.</source>
          <target state="translated">이 예외는 구성 문제가있을 때 발생합니다. 공급자 설치가 올바르게 수행되지 않았거나 서버에 구성 문제가 있거나 공급자 또는 서비스에 액세스하는 데 필요한 구성 정보가 잘못되었거나 누락 된 경우에 발생할 수 있습니다. 예를 들어, 서비스 제공 업체 소프트웨어가 SSL 구성 요소로 구성되지 않은 경우 SSL을 보안 프로토콜로 사용하도록 요청하면 이러한 예외가 발생합니다. 또 다른 예는 공급자가 URL을 환경 속성 중 하나로 지정해야하지만 클라이언트가 URL을 제공하지 못한 경우입니다.</target>
        </trans-unit>
        <trans-unit id="d209e9809cae920251951e8818d1280484bb2507" translate="yes" xml:space="preserve">
          <source>This exception is thrown whenever a GSS-API error occurs, including any mechanism specific error.</source>
          <target state="translated">이 예외는 메커니즘 특정 오류를 포함하여 GSS-API 오류가 발생할 때마다 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ccd18f6127b0fedbfb06bfec8bbff974d6d7dc83" translate="yes" xml:space="preserve">
          <source>This exception is thrown whenever a GSS-API error occurs, including any mechanism specific error. It may contain both the major and the minor GSS-API status codes. Major error codes are those defined at the GSS-API level in this class. Minor error codes are mechanism specific error codes that can provide additional information. The underlying mechanism implementation is responsible for setting appropriate minor status codes when throwing this exception. Aside from delivering the numeric error codes to the caller, this class performs the mapping from their numeric values to textual representations.</source>
          <target state="translated">이 예외는 메커니즘 특정 오류를 포함하여 GSS-API 오류가 발생할 때마다 발생합니다. 주 및 부 GSS-API 상태 코드를 모두 포함 할 수 있습니다. 주요 오류 코드는이 클래스의 GSS-API 수준에서 정의 된 것입니다. 사소한 오류 코드는 추가 정보를 제공 할 수있는 메커니즘 별 오류 코드입니다. 기본 메커니즘 구현은이 예외를 발생시킬 때 적절한 부 상태 코드를 설정해야합니다. 호출자에게 숫자 오류 코드를 전달하는 것 외에도이 클래스는 숫자 값에서 텍스트 표현으로의 매핑을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="3bd16266fd360fedf5d0e605f129095b7d3e3749" translate="yes" xml:space="preserve">
          <source>This exception is to report bad locations within a document model (that is, attempts to reference a location that doesn't exist).</source>
          <target state="translated">이 예외는 문서 모델 내에서 잘못된 위치를보고하는 것입니다 (즉, 존재하지 않는 위치를 참조하려는 시도).</target>
        </trans-unit>
        <trans-unit id="8272ca68abdbab62494087027b4171df0897b987" translate="yes" xml:space="preserve">
          <source>This exception is used to describe problems encounter while resolving links.</source>
          <target state="translated">이 예외는 링크를 해결하는 동안 발생하는 문제를 설명하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1aea89ea00a9749bd19029837fff4c685ebd3819" translate="yes" xml:space="preserve">
          <source>This exception is used to describe problems encounter while resolving links. Addition information is added to the base NamingException for pinpointing the problem with the link.</source>
          <target state="translated">이 예외는 링크를 해결하는 동안 발생하는 문제를 설명하는 데 사용됩니다. 링크 관련 문제를 찾아 내기 위해 추가 정보가 기본 NamingException에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="b4ab386d0905ad9120fcb0b1d0de8d8b1074154e" translate="yes" xml:space="preserve">
          <source>This exception is used to describe problems encountered while resolving links.</source>
          <target state="translated">이 예외는 링크를 해결하는 동안 발생한 문제를 설명하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="27cc7236d6cc83272ce70e3a1ae31a623c7a2872" translate="yes" xml:space="preserve">
          <source>This exception is used to describe problems encountered while resolving links. Additional information is added to the base NamingException for pinpointing the problem with the link.</source>
          <target state="translated">이 예외는 링크를 해결하는 동안 발생한 문제를 설명하는 데 사용됩니다. 링크 문제를 정확히 찾아 내기 위해 기본 NamingException에 추가 정보가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="bcd5ca596420f929e88a9b13dc1380f40ddf33b4" translate="yes" xml:space="preserve">
          <source>This exception is used to indicate a problems with the configured time-zone rules.</source>
          <target state="translated">이 예외는 구성된 시간대 규칙에 문제가 있음을 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f26b2138dacd9301849230d91ea0be2e44a94adf" translate="yes" xml:space="preserve">
          <source>This exception is used to indicate problems with creating, querying and manipulating date-time objects.</source>
          <target state="translated">이 예외는 날짜-시간 객체를 생성, 쿼리 및 조작하는 데 문제가 있음을 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="52aac530a9aa9b99d3a8923d82503f582d33c716" translate="yes" xml:space="preserve">
          <source>This exception may also be thrown when two method handles are composed, and the system detects that their types cannot be matched up correctly. This amounts to an early evaluation of the type mismatch, at method handle construction time, instead of when the mismatched method handle is called.</source>
          <target state="translated">이 예외는 두 개의 메소드 핸들이 구성되고 시스템이 해당 유형을 올바르게 일치시킬 수 없음을 감지 한 경우에도 발생할 수 있습니다. 이는 불일치 한 메소드 핸들이 호출 될 때가 아니라 메소드 핸들 구성 시간에 유형 불일치의 조기 평가에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="97ef9b4944f514133b5a2fb07ec8a043618874fe" translate="yes" xml:space="preserve">
          <source>This exception may be thrown by a LoginModule if it determines that authentication is being attempted on a locked account.</source>
          <target state="translated">이 예외는 잠긴 계정에서 인증을 시도하는 것으로 판단되면 LoginModule에 의해 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25905e98bbc8ed6b0a99cd269b514f08f4f1017b" translate="yes" xml:space="preserve">
          <source>This exception may be thrown by a LoginModule if it is unable to locate a credential necessary to perform authentication.</source>
          <target state="translated">인증을 수행하는 데 필요한 자격 증명을 찾을 수없는 경우 LoginModule에 의해이 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f446d2187f9b7cc3da2fcd7c2a3573fc6fe484c" translate="yes" xml:space="preserve">
          <source>This exception may be thrown by a LoginModule if it is unable to locate an account necessary to perform authentication.</source>
          <target state="translated">인증을 수행하는 데 필요한 계정을 찾을 수없는 경우 LoginModule에 의해이 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7480073638152c36c49f39bd998c00adda42819c" translate="yes" xml:space="preserve">
          <source>This exception may be thrown by methods that have detected concurrent modification of an object when such modification is not permissible.</source>
          <target state="translated">이 예외는 그러한 수정이 허용되지 않을 때 객체의 동시 수정을 감지 한 메소드에 의해 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64598045c2be0870f8468ad07a25d40ec551bd80" translate="yes" xml:space="preserve">
          <source>This exception may include information for locating the error in the original XML document, as if it came from a &lt;a href=&quot;locator&quot;&gt;&lt;code&gt;Locator&lt;/code&gt;&lt;/a&gt; object. Note that although the application will receive a SAXParseException as the argument to the handlers in the &lt;a href=&quot;errorhandler&quot;&gt;&lt;code&gt;ErrorHandler&lt;/code&gt;&lt;/a&gt; interface, the application is not actually required to throw the exception; instead, it can simply read the information in it and take a different action.</source>
          <target state="translated">이 예외는 마치 &lt;a href=&quot;locator&quot;&gt; &lt;code&gt;Locator&lt;/code&gt; &lt;/a&gt; 객체 에서 나온 것처럼 원본 XML 문서에서 오류를 찾기위한 정보를 포함 할 수 있습니다 . 응용 프로그램이 &lt;a href=&quot;errorhandler&quot;&gt; &lt;code&gt;ErrorHandler&lt;/code&gt; &lt;/a&gt; 인터페이스 의 처리기에 대한 인수로 SAXParseException을 수신하더라도 응용 프로그램이 실제로 예외를 발생시킬 필요는 없습니다. 대신 단순히 정보를 읽고 다른 조치를 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48287f0f78d18f3dc149791ece21c16c452a34c3" translate="yes" xml:space="preserve">
          <source>This exception will be thrown by the &lt;a href=&quot;fileinputstream&quot;&gt;&lt;code&gt;FileInputStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;fileoutputstream&quot;&gt;&lt;code&gt;FileOutputStream&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;randomaccessfile&quot;&gt;&lt;code&gt;RandomAccessFile&lt;/code&gt;&lt;/a&gt; constructors when a file with the specified pathname does not exist. It will also be thrown by these constructors if the file does exist but for some reason is inaccessible, for example when an attempt is made to open a read-only file for writing.</source>
          <target state="translated">지정된 패스 명을 가지는 파일이 존재하지 않는 경우 , &lt;a href=&quot;fileinputstream&quot;&gt; &lt;code&gt;FileInputStream&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;fileoutputstream&quot;&gt; &lt;code&gt;FileOutputStream&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;randomaccessfile&quot;&gt; &lt;code&gt;RandomAccessFile&lt;/code&gt; &lt;/a&gt; 생성자에 의해이 예외가 발생됩니다 . 파일이 존재하지만 어떤 이유로 액세스 할 수없는 경우 (예 : 쓰기 전용 읽기 전용 파일을 열려고 시도하는 경우) 이러한 생성자에서도 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a357b9eaaabb2a730f4cb39a850d694749b6bbd6" translate="yes" xml:space="preserve">
          <source>This exception, designed for use by the JCA/JCE engine classes, is thrown when an invalid parameter is passed to a method.</source>
          <target state="translated">JCA / JCE 엔진 클래스에서 사용하도록 설계된이 예외는 유효하지 않은 매개 변수가 메소드에 전달 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="48549af4387c0a30de3762c57e24652d7daa3cbd" translate="yes" xml:space="preserve">
          <source>This factory method is primarily intended for use from applets. Because the resulting Logger is anonymous it can be kept private by the creating class. This removes the need for normal security checks, which in turn allows untrusted applet code to update the control state of the Logger. For example an applet can do a setLevel or an addHandler on an anonymous Logger.</source>
          <target state="translated">이 팩토리 메소드는 기본적으로 애플릿에서 사용하기위한 것입니다. 결과 로거는 익명이므로 생성 클래스에 의해 비공개로 유지 될 수 있습니다. 따라서 일반적인 보안 검사가 필요하지 않아 신뢰할 수없는 애플릿 코드가 로거의 제어 상태를 업데이트 할 수 있습니다. 예를 들어, 애플릿은 익명 로거에서 setLevel 또는 addHandler를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56d77548756d2f03152212977af570f3cfcf232f" translate="yes" xml:space="preserve">
          <source>This factory method looks up the resource bundle in the cache for the specified &lt;code&gt;baseName&lt;/code&gt;, &lt;code&gt;targetLocale&lt;/code&gt; and &lt;code&gt;loader&lt;/code&gt;. If the requested resource bundle instance is found in the cache and the time-to-live periods of the instance and all of its parent instances have not expired, the instance is returned to the caller. Otherwise, this factory method proceeds with the loading process below.</source>
          <target state="translated">이 팩토리 메소드는 지정된 &lt;code&gt;baseName&lt;/code&gt; , &lt;code&gt;targetLocale&lt;/code&gt; 및 &lt;code&gt;loader&lt;/code&gt; 에 대한 캐시에서 자원 번들을 찾습니다 . 요청 된 자원 번들 인스턴스가 캐시에서 발견되고 인스턴스 및 모든 상위 인스턴스의 수명 기간이 만료되지 않은 경우 인스턴스는 호출자에게 리턴됩니다. 그렇지 않으면이 팩토리 방법은 아래의 로딩 프로세스를 진행합니다.</target>
        </trans-unit>
        <trans-unit id="d4f7acde9c0c4bc2f10c8ed97ccda324b655779f" translate="yes" xml:space="preserve">
          <source>This factory obtains a range where both the minimum and maximum value may vary.</source>
          <target state="translated">이 공장은 최소값과 최대 값이 다를 수있는 범위를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="1dd81da0b52ea41d5c4738642c84c83c4e82262d" translate="yes" xml:space="preserve">
          <source>This factory obtains a range where the minimum and maximum values are fixed. For example, the ISO month-of-year always runs from 1 to 12.</source>
          <target state="translated">이 공장은 최소값과 최대 값이 고정 된 범위를 얻습니다. 예를 들어 ISO 연도는 항상 1에서 12 사이입니다.</target>
        </trans-unit>
        <trans-unit id="e609b6ca60ee8eb7f45e091448156ea168fcfef0" translate="yes" xml:space="preserve">
          <source>This factory obtains a range where the minimum value is fixed and the maximum value may vary. For example, the ISO day-of-month always starts at 1, but ends between 28 and 31.</source>
          <target state="translated">이 공장은 최소값이 고정되고 최대 값이 다를 수있는 범위를 얻습니다. 예를 들어 ISO 날짜는 항상 1에서 시작하지만 28에서 31 사이에서 끝납니다.</target>
        </trans-unit>
        <trans-unit id="50b665a17d509e582354d6132c37a27afe10bd71" translate="yes" xml:space="preserve">
          <source>This feature controls how a &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; introduces namespace bindings that were not present in the original SAX event stream. When this feature is set to true, it must make sure that the user's &lt;a href=&quot;../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; will see the corresponding &lt;code&gt;xmlns*&lt;/code&gt; attribute in the &lt;a href=&quot;../../../org/xml/sax/attributes&quot;&gt;&lt;code&gt;Attributes&lt;/code&gt;&lt;/a&gt; object of the &lt;a href=&quot;../../../org/xml/sax/contenthandler#startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)&quot;&gt;&lt;code&gt;ContentHandler.startElement(String,String,String,Attributes)&lt;/code&gt;&lt;/a&gt; callback. Otherwise, &lt;code&gt;xmlns*&lt;/code&gt; attributes must not be added to &lt;a href=&quot;../../../org/xml/sax/attributes&quot;&gt;&lt;code&gt;Attributes&lt;/code&gt;&lt;/a&gt; that's passed to the user-specified &lt;a href=&quot;../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 기능은 &lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt; 가 원래 SAX 이벤트 스트림에 없었던 네임 스페이스 바인딩을 도입 하는 방법을 제어합니다 . 이 기능을 true로 설정하면 사용자의 &lt;a href=&quot;../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;../../../org/xml/sax/contenthandler#startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)&quot;&gt; &lt;code&gt;ContentHandler.startElement(String,String,String,Attributes)&lt;/code&gt; &lt;/a&gt; 콜백 의 &lt;a href=&quot;../../../org/xml/sax/attributes&quot;&gt; &lt;code&gt;Attributes&lt;/code&gt; &lt;/a&gt; 개체 에서 해당 &lt;code&gt;xmlns*&lt;/code&gt; 속성을 볼 수 있는지 확인해야합니다 . 그렇지 않으면 &lt;code&gt;xmlns*&lt;/code&gt; 속성 이 사용자 지정 &lt;a href=&quot;../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; 에&lt;/a&gt; 전달되는 &lt;a href=&quot;../../../org/xml/sax/attributes&quot;&gt; &lt;code&gt;Attributes&lt;/code&gt; &lt;/a&gt; 추가되지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="7cbe885010a7ab79c5644cb8ff12b18f1ad97dea" translate="yes" xml:space="preserve">
          <source>This feature is set to &lt;code&gt;false&lt;/code&gt; by default.</source>
          <target state="translated">이 기능은 기본적 으로 &lt;code&gt;false&lt;/code&gt; 로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="b07a6ac74957508dea507e2c9587337ab104cba3" translate="yes" xml:space="preserve">
          <source>This field allows the day-of-quarter value to be queried and set. The day-of-quarter has values from 1 to 90 in Q1 of a standard year, from 1 to 91 in Q1 of a leap year, from 1 to 91 in Q2 and from 1 to 92 in Q3 and Q4.</source>
          <target state="translated">이 필드를 사용하면 분기 값을 쿼리하고 설정할 수 있습니다. 분기는 표준 연도의 1 분기 1 ~ 90, 윤년 1 분기의 1 ~ 91, 2 분기의 1 ~ 91, Q3과 Q4의 1 ~ 92입니다.</target>
        </trans-unit>
        <trans-unit id="ab823df6586fcf1e3fda403714a995d7300513bb" translate="yes" xml:space="preserve">
          <source>This field allows the quarter-of-year value to be queried and set. The quarter-of-year has values from 1 to 4.</source>
          <target state="translated">이 필드를 사용하면 연도 별 값을 쿼리하고 설정할 수 있습니다. 분기는 1에서 4 사이의 값을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="98ee12514e1ff1f8c99b83a31253d4e796fc611c" translate="yes" xml:space="preserve">
          <source>This field allows the week of the week-based-year value to be queried and set. The week-of-week-based-year has values from 1 to 52, or 53 if the week-based-year has 53 weeks.</source>
          <target state="translated">이 필드를 사용하면 주별 연도 값을 쿼리하고 설정할 수 있습니다. 주별 연도의 값은 1에서 52까지이며 주별 연도가 53 주인 경우 53입니다.</target>
        </trans-unit>
        <trans-unit id="6b13e5218b93508b78d4d29e5225fa1418046286" translate="yes" xml:space="preserve">
          <source>This field allows the week-based-year value to be queried and set.</source>
          <target state="translated">이 필드를 사용하면 주별 연도 값을 쿼리하고 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42e5697e9b5d74fc40ad92ef4ea653085e1ce2e0" translate="yes" xml:space="preserve">
          <source>This field can be set for an &lt;code&gt;MBeanNotificationInfo&lt;/code&gt;, in which case it indicates the Open Type that the &lt;a href=&quot;notification#getUserData()&quot;&gt;&lt;code&gt;user data&lt;/code&gt;&lt;/a&gt; will have.</source>
          <target state="translated">이 필드는 &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; 에 대해 설정할 수 있으며 ,이 경우 &lt;a href=&quot;notification#getUserData()&quot;&gt; &lt;code&gt;user data&lt;/code&gt; &lt;/a&gt; 가 가질 Open Type을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="16e4f19f6f75aeaf9761d09d278295ed29614333" translate="yes" xml:space="preserve">
          <source>This field can be set for an &lt;code&gt;MBeanNotificationInfo&lt;/code&gt;, in which case it indicates the Open Type that the &lt;a href=&quot;notification#getUserData--&quot;&gt;&lt;code&gt;user data&lt;/code&gt;&lt;/a&gt; will have.</source>
          <target state="translated">이 필드는 &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; 에 대해 설정 될 수 있으며 ,이 경우 &lt;a href=&quot;notification#getUserData--&quot;&gt; &lt;code&gt;user data&lt;/code&gt; &lt;/a&gt; 가 가질 개방형을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="ea3ec0673f03e00aa663ee43fda3fa33cb248907" translate="yes" xml:space="preserve">
          <source>This field can be used with any calendar system.</source>
          <target state="translated">이 필드는 모든 캘린더 시스템에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="672c845bb330199f6572e694063f28d53f6a8c54" translate="yes" xml:space="preserve">
          <source>This field duplicates the function of the accessibleAWTFocusHandler field in java.awt.Component.AccessibleAWTComponent, so it has been deprecated.</source>
          <target state="translated">이 필드는 java.awt.Component.AccessibleAWTComponent에있는 accessableAWTFocusHandler 필드의 기능을 복제하므로 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0dae573ffd8f80aca010cd7db9e92593eb80fd9b" translate="yes" xml:space="preserve">
          <source>This field hides the &lt;a href=&quot;../../../java.base/java/util/eventobject#source&quot;&gt;&lt;code&gt;EventObject.source&lt;/code&gt;&lt;/a&gt; field in the parent class to make it non-transient and therefore part of the serialized form.</source>
          <target state="translated">이 필드 는 상위 클래스에서 &lt;a href=&quot;../../../java.base/java/util/eventobject#source&quot;&gt; &lt;code&gt;EventObject.source&lt;/code&gt; &lt;/a&gt; 필드를 숨겨서 일시적이 아니므로 직렬화 된 양식의 일부로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="18d420e9bc600b42f6bd92286d36a1a1563dca67" translate="yes" xml:space="preserve">
          <source>This field hides the &lt;a href=&quot;../../java/util/eventobject#source&quot;&gt;&lt;code&gt;EventObject.source&lt;/code&gt;&lt;/a&gt; field in the parent class to make it non-transient and therefore part of the serialized form.</source>
          <target state="translated">이 필드 는 부모 클래스에서 &lt;a href=&quot;../../java/util/eventobject#source&quot;&gt; &lt;code&gt;EventObject.source&lt;/code&gt; &lt;/a&gt; 필드를 숨겨서 일시적이지 않고 직렬화 된 양식의 일부로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="c97d6f4a09a4e9bd221c35df8571fc011d78daf9" translate="yes" xml:space="preserve">
          <source>This field holds a gridbag constraints instance containing the default values, so if a component does not have gridbag constraints associated with it, then the component will be assigned a copy of the &lt;code&gt;defaultConstraints&lt;/code&gt;.</source>
          <target state="translated">이 필드는 기본값을 포함하는 gridbag 제약 인스턴스를 보유하고 있습니다. 따라서 구성 요소에 관련된 gridbag 제약 조건이없는 경우 구성 요소에 &lt;code&gt;defaultConstraints&lt;/code&gt; 의 복사본이 할당 됩니다 .</target>
        </trans-unit>
        <trans-unit id="39e88817ba49055f437e524ba511752ad6451631" translate="yes" xml:space="preserve">
          <source>This field holds the layout information for the gridbag.</source>
          <target state="translated">이 필드는 그리드 백에 대한 레이아웃 정보를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="fa60ec5e300bea78b65aec95141d9591bd2d0e6a" translate="yes" xml:space="preserve">
          <source>This field holds the layout information for the gridbag. The information in this field is based on the most recent validation of the gridbag. If &lt;code&gt;layoutInfo&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; this indicates that there are no components in the gridbag or if there are components, they have not yet been validated.</source>
          <target state="translated">이 필드는 그리드 백에 대한 레이아웃 정보를 보유합니다. 이 필드의 정보는 그리드 백의 가장 최근 검증을 기반으로합니다. &lt;code&gt;layoutInfo&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 이면 gridbag 에 구성 요소가 없거나 구성 요소가 아직 유효성이 검사되지 않았 음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a60ffdeea0a5ae14fc093ba3d3606d8e8e6e940f" translate="yes" xml:space="preserve">
          <source>This field holds the overrides to the column minimum width.</source>
          <target state="translated">이 필드는 열 최소 너비에 대한 재정의를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="9dbb690901e3b0d4252b34178285d0a45aa3f41f" translate="yes" xml:space="preserve">
          <source>This field holds the overrides to the column minimum width. If this field is non-&lt;code&gt;null&lt;/code&gt; the values are applied to the gridbag after all of the minimum columns widths have been calculated. If columnWidths has more elements than the number of columns, columns are added to the gridbag to match the number of elements in columnWidth.</source>
          <target state="translated">이 필드는 열 최소 너비에 대한 재정의를 보유합니다. 이 필드가 &lt;code&gt;null&lt;/code&gt; 이 아니면 모든 최소 열 너비가 계산 된 후 값이 그리드 백에 적용됩니다. columnWidths에 열 수보다 많은 요소가있는 경우 columnWidth의 요소 ​​수와 일치하도록 열이 gridbag에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="c7e19bc4e2801eac3d31f63782e8e2da0e76a00d" translate="yes" xml:space="preserve">
          <source>This field holds the overrides to the column weights.</source>
          <target state="translated">이 필드는 열 가중치에 대한 대체를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="3adfe51293eb5f9d872a1fd45f2f25efbe5e9306" translate="yes" xml:space="preserve">
          <source>This field holds the overrides to the column weights. If this field is non-&lt;code&gt;null&lt;/code&gt; the values are applied to the gridbag after all of the columns weights have been calculated. If &lt;code&gt;columnWeights[i] &amp;gt;&lt;/code&gt; weight for column i, then column i is assigned the weight in &lt;code&gt;columnWeights[i]&lt;/code&gt;. If &lt;code&gt;columnWeights&lt;/code&gt; has more elements than the number of columns, the excess elements are ignored - they do not cause more columns to be created.</source>
          <target state="translated">이 필드는 열 가중치에 대한 대체를 보유합니다. 이 필드가 &lt;code&gt;null&lt;/code&gt; 이 아니면 모든 열 가중치가 계산 된 후 값이 그리드 백에 적용됩니다. 만약 &lt;code&gt;columnWeights[i] &amp;gt;&lt;/code&gt; 열의 무게 나 난에 가중치를 할당 한 후 컬럼 &lt;code&gt;columnWeights[i]&lt;/code&gt; . 경우 &lt;code&gt;columnWeights&lt;/code&gt; 에이 열 수보다 많은 요소가, 초과 한 요소는 무시되어 - 그들은 더 많은 열이 만들어지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f6d7cd4e84a251ac5447f4f2b2ac2180a2dc0f75" translate="yes" xml:space="preserve">
          <source>This field holds the overrides to the row minimum heights.</source>
          <target state="translated">이 필드는 행 최소 높이에 대한 재정의를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="a259d11178dbab8347a543c9afe815b8e2cd692b" translate="yes" xml:space="preserve">
          <source>This field holds the overrides to the row minimum heights. If this field is non-&lt;code&gt;null&lt;/code&gt; the values are applied to the gridbag after all of the minimum row heights have been calculated. If &lt;code&gt;rowHeights&lt;/code&gt; has more elements than the number of rows, rows are added to the gridbag to match the number of elements in &lt;code&gt;rowHeights&lt;/code&gt;.</source>
          <target state="translated">이 필드는 행 최소 높이에 대한 재정의를 유지합니다. 이 필드가 &lt;code&gt;null&lt;/code&gt; 이 아니면 모든 최소 행 높이가 계산 된 후 값이 그리드 백에 적용됩니다. 경우 &lt;code&gt;rowHeights&lt;/code&gt; 에이 행의 수보다 많은 요소가, 행의 요소 수와 일치하도록 구라 두 가방에 추가됩니다 &lt;code&gt;rowHeights&lt;/code&gt; 에를 .</target>
        </trans-unit>
        <trans-unit id="64647567592e62d1cf131cb336d852961e9eaf3e" translate="yes" xml:space="preserve">
          <source>This field holds the overrides to the row weights.</source>
          <target state="translated">이 필드는 행 가중치에 대한 대체를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="3a08591579404f004fd45589b3b8fcd240633722" translate="yes" xml:space="preserve">
          <source>This field holds the overrides to the row weights. If this field is non-&lt;code&gt;null&lt;/code&gt; the values are applied to the gridbag after all of the rows weights have been calculated. If &lt;code&gt;rowWeights[i] &amp;gt; &lt;/code&gt; weight for row i, then row i is assigned the weight in &lt;code&gt;rowWeights[i]&lt;/code&gt;. If &lt;code&gt;rowWeights&lt;/code&gt; has more elements than the number of rows, the excess elements are ignored - they do not cause more rows to be created.</source>
          <target state="translated">이 필드는 행 가중치에 대한 대체를 보유합니다. 이 필드가 &lt;code&gt;null&lt;/code&gt; 이 아니면 모든 행 가중치가 계산 된 후 값이 그리드 백에 적용됩니다. 만약 &lt;code&gt;rowWeights[i] &amp;gt; &lt;/code&gt; 행 I 대 중량, 그때의 중량을 할당 행 &lt;code&gt;rowWeights[i]&lt;/code&gt; . 경우 &lt;code&gt;rowWeights&lt;/code&gt; 에이 행의 수보다 많은 요소가, 초과 한 요소는 무시되어 - 그들은보다 많은 행이 만들어지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="74a9cbdd88f0b4a08354be0afadbaec13d74347f" translate="yes" xml:space="preserve">
          <source>This field is &lt;code&gt;true&lt;/code&gt; if there is a security check in progress; &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">보안 점검이 진행중인 경우이 필드는 &lt;code&gt;true&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f106cdb1f6d10200df0392eec60691b570b8f6e" translate="yes" xml:space="preserve">
          <source>This field is initialized to null. It should not be manipulated directly: it should be accessed and updated using getAltName() and setAltName().</source>
          <target state="translated">이 필드는 null로 초기화됩니다. 직접 조작해서는 안됩니다. getAltName () 및 setAltName ()을 사용하여 액세스하고 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="978a6f513b64d3ddbbd059f20e4c7bdb555aa0fa" translate="yes" xml:space="preserve">
          <source>This field is initialized to null. It should not be manipulated directly: it should be accessed and updated using getAltNameCtx() and setAltNameCtx().</source>
          <target state="translated">이 필드는 null로 초기화됩니다. 직접 조작해서는 안됩니다. getAltNameCtx () 및 setAltNameCtx ()를 사용하여 액세스하고 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="2e5264722dafb7f008333c277cd02b754af0d058" translate="yes" xml:space="preserve">
          <source>This field is initialized to null. It should not be manipulated directly: it should be accessed and updated using getEnvironment() and setEnvironment().</source>
          <target state="translated">이 필드는 null로 초기화됩니다. 직접 조작해서는 안됩니다. getEnvironment () 및 setEnvironment ()를 사용하여 액세스하고 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="935b90d14dfdace7c7c898fe605937fc83a388f1" translate="yes" xml:space="preserve">
          <source>This field is initialized to null. It should not be manipulated directly: it should be accessed and updated using getRemainingName() and setRemainingName().</source>
          <target state="translated">이 필드는 null로 초기화됩니다. 직접 조작해서는 안됩니다. getRemainingName () 및 setRemainingName ()을 사용하여 액세스하고 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="81ccc2b547efe27e3eb1924d98e5a4a4d3984445" translate="yes" xml:space="preserve">
          <source>This field is no longer used to reserve arrays and kept for backward compatibility.</source>
          <target state="translated">이 필드는 더 이상 배열을 예약하는 데 사용되지 않으며 이전 버전과의 호환성을 위해 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="a9d61fce838e23e375e06a9f0f56a6fbb10ece1d" translate="yes" xml:space="preserve">
          <source>This field is no longer used to reserve arrays and kept for backward compatibility. Previously, this was the maximum number of grid positions (both horizontal and vertical) that could be laid out by the grid bag layout. Current implementation doesn't impose any limits on the size of a grid.</source>
          <target state="translated">이 필드는 더 이상 배열을 예약하는 데 사용되지 않으며 이전 버전과의 호환성을 위해 유지됩니다. 이전에는 그리드 백 레이아웃에 의해 배치 될 수있는 최대 그리드 위치 (수평 및 수직) 수였습니다. 현재 구현은 그리드의 크기에 제한을 두지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ee22229793e3e4347d187719545a3249e5c942d1" translate="yes" xml:space="preserve">
          <source>This field is obsolete, and its use is discouraged since its specification is incompatible with the 1.4 focus APIs.</source>
          <target state="translated">이 필드는 더 이상 사용되지 않으며 해당 사양이 1.4 포커스 API와 호환되지 않으므로 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="cd53078db6c639a3e3948fd973479719b02e5501" translate="yes" xml:space="preserve">
          <source>This field is obsolete, and its use is discouraged since its specification is incompatible with the 1.4 focus APIs. The current FocusManager is no longer a property of the UI. Client code must query for the current FocusManager using &lt;code&gt;KeyboardFocusManager.getCurrentKeyboardFocusManager()&lt;/code&gt;. See the Focus Specification for more information.</source>
          <target state="translated">이 필드는 더 이상 사용되지 않으며 해당 사양이 1.4 포커스 API와 호환되지 않으므로 사용하지 않는 것이 좋습니다. 현재 FocusManager는 더 이상 UI의 속성이 아닙니다. 클라이언트 코드는 &lt;code&gt;KeyboardFocusManager.getCurrentKeyboardFocusManager()&lt;/code&gt; 사용하여 현재 FocusManager를 쿼리해야합니다 . 자세한 내용은 초점 사양을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a377085d2117882399b3275fe39571dbf65780e4" translate="yes" xml:space="preserve">
          <source>This field is obsolete, please use the &lt;code&gt;JScrollPane&lt;/code&gt; field instead.</source>
          <target state="translated">이 필드는 더 이상 사용되지 않습니다 . 대신 &lt;code&gt;JScrollPane&lt;/code&gt; 필드 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1116440b0df22264838eceda530e7b1f586b9771" translate="yes" xml:space="preserve">
          <source>This field is retained for compatibility but should not be referenced.</source>
          <target state="translated">이 필드는 호환성을 위해 유지되지만 참조해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="0973a832db8ff89973d7e6843e67ed64ab898306" translate="yes" xml:space="preserve">
          <source>This field is set by the &lt;code&gt;setInstanceFollowRedirects&lt;/code&gt; method. Its value is returned by the &lt;code&gt;getInstanceFollowRedirects&lt;/code&gt; method.</source>
          <target state="translated">이 필드는 &lt;code&gt;setInstanceFollowRedirects&lt;/code&gt; 메소드로 설정됩니다 . 그 값은 &lt;code&gt;getInstanceFollowRedirects&lt;/code&gt; 메소드에 의해 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="09e2a54f88e9ca0dff0ba07e4f5bc710a59509a9" translate="yes" xml:space="preserve">
          <source>This field is set by the &lt;code&gt;setUseCaches&lt;/code&gt; method. Its value is returned by the &lt;code&gt;getUseCaches&lt;/code&gt; method.</source>
          <target state="translated">이 필드는 &lt;code&gt;setUseCaches&lt;/code&gt; 메소드로 설정됩니다 . 그 값은 &lt;code&gt;getUseCaches&lt;/code&gt; 메소드에 의해 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="e5d3e5d2b48b03c93e4d8ff275d004ecd4b2f2fe" translate="yes" xml:space="preserve">
          <source>This field is strictly defined to have the same meaning in all calendar systems. This is necessary to ensure interoperation between calendars.</source>
          <target state="translated">이 필드는 모든 캘린더 시스템에서 동일한 의미를 갖도록 엄격하게 정의됩니다. 캘린더 간 상호 운용을 보장하는 데 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b4b104288c94820296edb1789be70f2f87aed5ad" translate="yes" xml:space="preserve">
          <source>This field is the sequential count of days where 1970-01-01 (ISO) is zero. Note that this uses the</source>
          <target state="translated">이 필드는 1970-01-01 (ISO)이 0 인 순차적 일 수입니다. 이것은</target>
        </trans-unit>
        <trans-unit id="24e2813114fe0e4e7e496a714543784cbd4e0f9c" translate="yes" xml:space="preserve">
          <source>This field is the sequential count of months where the first month in proleptic-year zero has the value zero. Later months have increasingly larger values. Earlier months have increasingly small values. There are no gaps or breaks in the sequence of months. Note that this uses the</source>
          <target state="translated">이 필드는 proleptic-year 0의 첫 번째 달 값이 0 인 연속적인 개월 수입니다. 나중에 몇 달 동안 더 큰 가치가 있습니다. 이전 달의 가치는 점점 작아지고 있습니다. 몇 달간 격차가 없습니다. 이것은</target>
        </trans-unit>
        <trans-unit id="41a4717d6de67ceb4323a49338ab1d2e9160f48d" translate="yes" xml:space="preserve">
          <source>This field is used by the iterator and list iterator implementation returned by the &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;listIterator&lt;/code&gt; methods. If the value of this field changes unexpectedly, the iterator (or list iterator) will throw a &lt;code&gt;ConcurrentModificationException&lt;/code&gt; in response to the &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;previous&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;add&lt;/code&gt; operations. This provides</source>
          <target state="translated">이 필드는 &lt;code&gt;iterator&lt;/code&gt; 와 &lt;code&gt;listIterator&lt;/code&gt; 메소드가 리턴 한 반복자와 목록 반복자 구현에서 사용됩니다 . 이 필드의 값이 예기치 않게 변경되면 반복자 (또는 목록 반복자)는 &lt;code&gt;next&lt;/code&gt; , &lt;code&gt;remove&lt;/code&gt; , &lt;code&gt;previous&lt;/code&gt; , &lt;code&gt;set&lt;/code&gt; 또는 &lt;code&gt;add&lt;/code&gt; 작업 에 대한 응답으로 &lt;code&gt;ConcurrentModificationException&lt;/code&gt; 을 발생시킵니다 . 이것은 제공합니다</target>
        </trans-unit>
        <trans-unit id="86eb00d408b3fdc5ff6968570a73fff190837afb" translate="yes" xml:space="preserve">
          <source>This field is used to represent the micro-of-day handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">이 필드는 초의 일부를 처리하는 마이크로 일을 나타내는 데 사용됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 구현은 알 수없는 정밀도를 0으로 채우는 &lt;a href=&quot;#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; &lt;/a&gt; 값을 반환 할 수있는 경우이 필드에 값을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8dce713d65129e21a381674ea8f509a7dda6e75f" translate="yes" xml:space="preserve">
          <source>This field is used to represent the micro-of-day handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">이 필드는 초의 일부를 처리하는 마이크로 일을 나타내는 데 사용됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 의 구현은 &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; 에&lt;/a&gt; 알 수없는 정밀도를 0으로 채우는 값을 리턴 할 수있는 경우이 필드에 값을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a23590fea6d05339a0fc72c2c2e4f23fdd3a1c80" translate="yes" xml:space="preserve">
          <source>This field is used to represent the micro-of-second handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;#SECOND_OF_MINUTE&quot;&gt;&lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">이 필드는 초의 일부를 처리하는 초 단위를 나타내는 데 사용됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 구현은 알 수없는 정밀도를 0으로 채우는 &lt;a href=&quot;#SECOND_OF_MINUTE&quot;&gt; &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt; 값을 반환 할 수있는 경우이 필드에 값을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8a01eb06b15555f5073ff81640ef64a5a7de1c35" translate="yes" xml:space="preserve">
          <source>This field is used to represent the micro-of-second handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;chronofield#SECOND_OF_MINUTE&quot;&gt;&lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">이 필드는 초의 일부를 처리하는 초 단위의 마이크로 초를 나타내는 데 사용됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 구현은 알 수없는 정밀도를 0으로 채우는 &lt;a href=&quot;chronofield#SECOND_OF_MINUTE&quot;&gt; &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt; 값을 리턴 할 수있는 경우이 필드에 값을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6fe4e43e722a8498037de46d8906a9eb7fc4545c" translate="yes" xml:space="preserve">
          <source>This field is used to represent the milli-of-day handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">이 필드는 초의 일부를 처리하는 밀리-오일을 나타내는 데 사용됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 구현은 알 수없는 정밀도를 0으로 채우는 &lt;a href=&quot;#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; &lt;/a&gt; 값을 반환 할 수있는 경우이 필드에 값을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4be49c2b038fe08d673cc4082ae4af22a533fccb" translate="yes" xml:space="preserve">
          <source>This field is used to represent the milli-of-day handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">이 필드는 초의 일부를 처리하는 밀리 언어를 나타내는 데 사용됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 의 구현은 &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; 에&lt;/a&gt; 알 수없는 정밀도를 0으로 채우는 값을 리턴 할 수있는 경우이 필드에 값을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6e8134aa835d3ce1d6f62f7fab298342964a8cd7" translate="yes" xml:space="preserve">
          <source>This field is used to represent the milli-of-second handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;#SECOND_OF_MINUTE&quot;&gt;&lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">이 필드는 초의 일부를 처리하는 밀리 초를 나타내는 데 사용됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 구현은 알 수없는 정밀도를 0으로 채우는 &lt;a href=&quot;#SECOND_OF_MINUTE&quot;&gt; &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt; 값을 반환 할 수있는 경우이 필드에 값을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b957133502f14286d3edaea7427acb86d39c7bf4" translate="yes" xml:space="preserve">
          <source>This field is used to represent the milli-of-second handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;chronofield#SECOND_OF_MINUTE&quot;&gt;&lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">이 필드는 초의 일부를 처리하는 밀리 초를 나타내는 데 사용됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 구현은 알 수없는 정밀도를 0으로 채우는 &lt;a href=&quot;chronofield#SECOND_OF_MINUTE&quot;&gt; &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt; 값을 리턴 할 수있는 경우이 필드에 값을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f6c760a59dacb092738ad285f18ec12c58b1755e" translate="yes" xml:space="preserve">
          <source>This field is used to represent the nano-of-day handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">이 필드는 초의 일부를 처리하는 하루의 나노를 나타내는 데 사용됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 구현은 알 수없는 정밀도를 0으로 채우는 &lt;a href=&quot;#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; &lt;/a&gt; 값을 반환 할 수있는 경우이 필드에 값을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="56950586a498b262af039f7017c8a4746f1e26b9" translate="yes" xml:space="preserve">
          <source>This field is used to represent the nano-of-day handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">이 필드는 초 단위의 나노 처리를 나타내는 데 사용됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 의 구현은 &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; 에&lt;/a&gt; 알 수없는 정밀도를 0으로 채우는 값을 리턴 할 수있는 경우이 필드에 값을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="46695e00c1cd85c4cecb2f752977c1f2a8b1f113" translate="yes" xml:space="preserve">
          <source>This field is used to represent the nano-of-second handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;#SECOND_OF_MINUTE&quot;&gt;&lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">이 필드는 초의 일부를 처리하는 나노초를 나타내는 데 사용됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 구현은 알 수없는 정밀도를 0으로 채우는 &lt;a href=&quot;#SECOND_OF_MINUTE&quot;&gt; &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt; 값을 반환 할 수있는 경우이 필드에 값을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7a4278a7d6b6080b6a27cdd4a04881abbbe3ac4d" translate="yes" xml:space="preserve">
          <source>This field is used to represent the nano-of-second handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;chronofield#SECOND_OF_MINUTE&quot;&gt;&lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">이 필드는 초 단위의 나노초 처리를 나타내는 데 사용됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 구현은 알 수없는 정밀도를 0으로 채우는 &lt;a href=&quot;chronofield#SECOND_OF_MINUTE&quot;&gt; &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt; 값을 리턴 할 수있는 경우이 필드에 값을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="37a60d5cedb9c865d2db25c544cfd2cdd6466615" translate="yes" xml:space="preserve">
          <source>This field is used when the component is smaller than its display area.</source>
          <target state="translated">이 필드는 구성 요소가 표시 영역보다 작을 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b1904d746a9738417245a57b2b89d86f5c60ee34" translate="yes" xml:space="preserve">
          <source>This field is used when the component is smaller than its display area. It determines where, within the display area, to place the component.</source>
          <target state="translated">이 필드는 구성 요소가 표시 영역보다 작을 때 사용됩니다. 디스플레이 영역 내에서 구성 요소를 배치 할 위치를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="bf33f75155ecadbb9597bb64ac7a1df525ea556d" translate="yes" xml:space="preserve">
          <source>This field is used when the component's display area is larger than the component's requested size.</source>
          <target state="translated">이 필드는 구성 요소의 표시 영역이 구성 요소의 요청 크기보다 클 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1b8b60ecf2525c59de4edee5d2dfe6ccfbbb3212" translate="yes" xml:space="preserve">
          <source>This field is used when the component's display area is larger than the component's requested size. It determines whether to resize the component, and if so, how.</source>
          <target state="translated">이 필드는 구성 요소의 표시 영역이 구성 요소의 요청 크기보다 클 때 사용됩니다. 구성 요소의 크기를 조정할지 여부와 크기를 조정하는 방법을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="25a9780cc5dfd702d69e68ddf64a34ff69863fc2" translate="yes" xml:space="preserve">
          <source>This field predates the general-purpose exception chaining facility. The &lt;a href=&quot;#initCause(java.lang.Throwable)&quot;&gt;&lt;code&gt;initCause(Throwable)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getCause()&quot;&gt;&lt;code&gt;getCause()&lt;/code&gt;&lt;/a&gt; methods are now the preferred means of accessing this information.</source>
          <target state="translated">이 필드는 범용 예외 체인 기능보다 이전입니다. &lt;a href=&quot;#initCause(java.lang.Throwable)&quot;&gt; &lt;code&gt;initCause(Throwable)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#getCause()&quot;&gt; &lt;code&gt;getCause()&lt;/code&gt; &lt;/a&gt; 메소드는 지금이 정보에 액세스 할 수있는 바람직한 방법이다.</target>
        </trans-unit>
        <trans-unit id="f11b62e1419e83459d23c9c9382d3212ef351ce3" translate="yes" xml:space="preserve">
          <source>This field predates the general-purpose exception chaining facility. The &lt;a href=&quot;../../../../java.base/java/lang/throwable#getCause()&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">이 필드는 범용 예외 체인 기능보다 이전입니다. &lt;a href=&quot;../../../../java.base/java/lang/throwable#getCause()&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메소드는이 정보를 취득하는 수단이다.</target>
        </trans-unit>
        <trans-unit id="42108cb3f2d176ba8b433c0e3ee05084dcde983d" translate="yes" xml:space="preserve">
          <source>This field predates the general-purpose exception chaining facility. The &lt;a href=&quot;../../../java.base/java/lang/throwable#getCause()&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">이 필드는 범용 예외 체인 기능보다 이전입니다. &lt;a href=&quot;../../../java.base/java/lang/throwable#getCause()&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메소드는이 정보를 취득하는 수단이다.</target>
        </trans-unit>
        <trans-unit id="e5ce2cf88f7e37772baf4eaeee7ce424f4ac69b2" translate="yes" xml:space="preserve">
          <source>This field predates the general-purpose exception chaining facility. The &lt;a href=&quot;../lang/throwable#getCause()&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">이 필드는 범용 예외 체인 기능보다 이전입니다. &lt;a href=&quot;../lang/throwable#getCause()&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메소드는이 정보를 취득하는 수단이다.</target>
        </trans-unit>
        <trans-unit id="58be22eba5513e6f16a19ec2287f84585ea5768a" translate="yes" xml:space="preserve">
          <source>This field predates the general-purpose exception chaining facility. The &lt;a href=&quot;../lang/throwable#getCause--&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">이 필드는 범용 예외 체인 기능보다 우선합니다. &lt;a href=&quot;../lang/throwable#getCause--&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메소드는이 정보를 취득하는 수단이다.</target>
        </trans-unit>
        <trans-unit id="f801501042f288a6bee35bd6dc4a117f8e2695da" translate="yes" xml:space="preserve">
          <source>This field predates the general-purpose exception chaining facility. The &lt;a href=&quot;namingexception#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;initCause(Throwable)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;namingexception#getCause--&quot;&gt;&lt;code&gt;getCause()&lt;/code&gt;&lt;/a&gt; methods are now the preferred means of accessing this information.</source>
          <target state="translated">이 필드는 범용 예외 체인 기능보다 우선합니다. &lt;a href=&quot;namingexception#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;initCause(Throwable)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;namingexception#getCause--&quot;&gt; &lt;code&gt;getCause()&lt;/code&gt; &lt;/a&gt; 메소드는 지금이 정보에 액세스 할 수있는 바람직한 방법이다.</target>
        </trans-unit>
        <trans-unit id="ebcc9442bd3f9316e5b5fad08700464cae1e0dcc" translate="yes" xml:space="preserve">
          <source>This field reflects the correct GMT offset value of the time zone of this &lt;code&gt;Calendar&lt;/code&gt; if the &lt;code&gt;TimeZone&lt;/code&gt; implementation subclass supports historical GMT offset changes.</source>
          <target state="translated">이 필드는이 시간대의 정확한 GMT 오프셋 값을 반영 &lt;code&gt;Calendar&lt;/code&gt; 경우 &lt;code&gt;TimeZone&lt;/code&gt; 구현 서브 클래스가 지원하는 역사적 GMT 변경 사항을 오프셋.</target>
        </trans-unit>
        <trans-unit id="4463b2c5badc21c8ae944e6a5c21be66258ebc38" translate="yes" xml:space="preserve">
          <source>This field reflects the correct daylight saving offset value of the time zone of this &lt;code&gt;Calendar&lt;/code&gt; if the &lt;code&gt;TimeZone&lt;/code&gt; implementation subclass supports historical Daylight Saving Time schedule changes.</source>
          <target state="translated">이 필드는이 시간대의 오프셋 값 정확한 서머 반영 &lt;code&gt;Calendar&lt;/code&gt; 경우 &lt;code&gt;TimeZone&lt;/code&gt; 구현 서브 클래스 지원, 서머 타임의 스케줄의 역사적 변화를.</target>
        </trans-unit>
        <trans-unit id="a8f416dcd3022142ff5848ddf81a6d7cd482463d" translate="yes" xml:space="preserve">
          <source>This field should be &lt;code&gt;true&lt;/code&gt; if this node did not exist in the backing store prior to the creation of this object.</source>
          <target state="translated">이 개체를 만들기 전에이 노드가 백업 저장소에 존재하지 않았 으면 이 필드는 &lt;code&gt;true&lt;/code&gt; 여야 합니다.</target>
        </trans-unit>
        <trans-unit id="bb8869100a96b51c0ace747d156fdb34373c73b4" translate="yes" xml:space="preserve">
          <source>This field should be &lt;code&gt;true&lt;/code&gt; if this node did not exist in the backing store prior to the creation of this object. The field is initialized to false, but may be set to true by a subclass constructor (and should not be modified thereafter). This field indicates whether a node change event should be fired when creation is complete.</source>
          <target state="translated">이 오브젝트를 작성하기 전에이 노드가 백업 저장소에 존재하지 않으면 이 필드는 &lt;code&gt;true&lt;/code&gt; 여야 합니다. 필드는 false로 초기화되지만 서브 클래스 생성자에 의해 true로 설정 될 수 있습니다 (그 이후에는 수정해서는 안 됨). 이 필드는 작성이 완료 될 때 노드 변경 이벤트를 발생시켜야하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ba7e11b52d45767526373d0f289c0f687f8cb05a" translate="yes" xml:space="preserve">
          <source>This field specifies the external padding of the component, the minimum amount of space between the component and the edges of its display area.</source>
          <target state="translated">이 필드는 구성 요소의 외부 패딩, 구성 요소와 해당 표시 영역의 가장자리 사이의 최소 공간을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0e55aa91af9dc1c223e4ac01de0203dde43db6a6" translate="yes" xml:space="preserve">
          <source>This field specifies the internal padding of the component, how much space to add to the minimum width of the component.</source>
          <target state="translated">이 필드는 구성 요소의 내부 패딩, 구성 요소의 최소 너비에 추가 할 공간을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="5506d97465fb7c6737d928971914a3686365ee4c" translate="yes" xml:space="preserve">
          <source>This field specifies the internal padding of the component, how much space to add to the minimum width of the component. The width of the component is at least its minimum width plus &lt;code&gt;ipadx&lt;/code&gt; pixels.</source>
          <target state="translated">이 필드는 구성 요소의 내부 패딩, 구성 요소의 최소 너비에 추가 할 공간을 지정합니다. 구성 요소의 너비는 최소한 최소 너비에 &lt;code&gt;ipadx&lt;/code&gt; 픽셀을 더한 값 입니다.</target>
        </trans-unit>
        <trans-unit id="7de306aa405e5835e99729a65a7e54e0fd9f2c8f" translate="yes" xml:space="preserve">
          <source>This field specifies the internal padding, that is, how much space to add to the minimum height of the component.</source>
          <target state="translated">이 필드는 내부 패딩, 즉 구성 요소의 최소 높이에 추가 할 공간을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="fe7432faba189ba0b1fb749d44a0e58c1291eaf2" translate="yes" xml:space="preserve">
          <source>This field specifies the internal padding, that is, how much space to add to the minimum height of the component. The height of the component is at least its minimum height plus &lt;code&gt;ipady&lt;/code&gt; pixels.</source>
          <target state="translated">이 필드는 내부 패딩, 즉 구성 요소의 최소 높이에 추가 할 공간을 지정합니다. 구성 요소의 높이는 최소한 최소 높이에 &lt;code&gt;ipady&lt;/code&gt; 픽셀을 더한 값 입니다 .</target>
        </trans-unit>
        <trans-unit id="0b841a55b650df6a8f52cdacb1a1a37058987134" translate="yes" xml:space="preserve">
          <source>This field was not used in previous releases and there are currently no plans to support it in the future.</source>
          <target state="translated">이 필드는 이전 릴리스에서 사용되지 않았으며 현재 향후 지원할 계획이 없습니다.</target>
        </trans-unit>
        <trans-unit id="da5a7824c72d5d0ac8b72a562a8242b1d4914805" translate="yes" xml:space="preserve">
          <source>This file channel</source>
          <target state="translated">이 파일 채널</target>
        </trans-unit>
        <trans-unit id="0dec060895a4869c311469c5cf40170438fe90a1" translate="yes" xml:space="preserve">
          <source>This file contains the single line:</source>
          <target state="translated">이 파일에는 한 줄이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="479baf2320b9dcb0f221f1cd5db5e94a5e7414ff" translate="yes" xml:space="preserve">
          <source>This file manager creates file objects representing regular &lt;a href=&quot;../../../java.base/java/io/file&quot;&gt;files&lt;/a&gt;, &lt;a href=&quot;../../../java.base/java/util/zip/zipentry&quot;&gt;zip file entries&lt;/a&gt;, or entries in similar file system based containers. Any file object returned from a file manager implementing this interface must observe the following behavior:</source>
          <target state="translated">이 파일 관리자는 일반 &lt;a href=&quot;../../../java.base/java/io/file&quot;&gt;파일&lt;/a&gt; , &lt;a href=&quot;../../../java.base/java/util/zip/zipentry&quot;&gt;zip 파일 항목&lt;/a&gt; 또는 유사한 파일 시스템 기반 컨테이너의 항목을 나타내는 파일 개체를 만듭니다 . 이 인터페이스를 구현하는 파일 관리자에서 반환 된 모든 파일 객체는 다음 동작을 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="2c06bc72e2fe6fc2d9f6e5f898999a4455654e70" translate="yes" xml:space="preserve">
          <source>This file manager creates file objects representing regular &lt;a href=&quot;../../java/io/file&quot;&gt;files&lt;/a&gt;, &lt;a href=&quot;../../java/util/zip/zipentry&quot;&gt;zip file entries&lt;/a&gt;, or entries in similar file system based containers. Any file object returned from a file manager implementing this interface must observe the following behavior:</source>
          <target state="translated">이 파일 관리자는 일반 &lt;a href=&quot;../../java/io/file&quot;&gt;파일&lt;/a&gt; , &lt;a href=&quot;../../java/util/zip/zipentry&quot;&gt;zip 파일 항목&lt;/a&gt; 또는 유사한 파일 시스템 기반 컨테이너의 항목을 나타내는 파일 객체를 만듭니다 . 이 인터페이스를 구현하는 파일 관리자에서 리턴 된 모든 파일 오브젝트는 다음 동작을 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="1e624d23b01226b52f85449b65beccf718ac8ba4" translate="yes" xml:space="preserve">
          <source>This file was automatically generated by AutoMulti.</source>
          <target state="translated">이 파일은 AutoMulti에 의해 자동으로 생성되었습니다.</target>
        </trans-unit>
        <trans-unit id="7a24330d8dfc24893acef6882fa0c229a8833351" translate="yes" xml:space="preserve">
          <source>This file-locking API is intended to map directly to the native locking facility of the underlying operating system. Thus the locks held on a file should be visible to all programs that have access to the file, regardless of the language in which those programs are written.</source>
          <target state="translated">이 파일 잠금 API는 기본 운영 체제의 기본 잠금 기능에 직접 매핑하기위한 것입니다. 따라서 파일에 보유 된 잠금은 해당 프로그램이 작성된 언어에 관계없이 파일에 액세스 할 수있는 모든 프로그램에서 볼 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="de18aeeb56e8dc33f587514c04ec1787f04e4711" translate="yes" xml:space="preserve">
          <source>This filter compares the attribute name of the specified attribute change notification with each enabled attribute name. If the attribute name equals one of the enabled attribute names, the notification must be sent to the listener and this method returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 필터는 지정된 속성 변경 알림의 속성 이름을 사용 가능한 각 속성 이름과 비교합니다. 속성 이름이 사용 가능한 속성 이름 중 하나와 같으면 알림을 리스너에게 보내야하며이 메소드는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="b9c492547353c4152d78f195a1ac9387d444b329" translate="yes" xml:space="preserve">
          <source>This filter compares the type of the specified notification with each enabled type. If the notification type matches one of the enabled types, the notification should be sent to the listener and this method returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 필터는 지정된 알림 유형을 사용 가능한 각 유형과 비교합니다. 알림 유형이 사용 가능한 유형 중 하나와 일치하면 알림을 리스너에게 보내야하며이 메소드는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="605b954515620d1dff936f1264b51407c2bea03f" translate="yes" xml:space="preserve">
          <source>This filter will have no parent: you must assign a parent before you start a parse or do any configuration with setFeature or setProperty, unless you use this as a pure event consumer rather than as an &lt;a href=&quot;../xmlreader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 필터에는 부모가 없습니다 . &lt;a href=&quot;../xmlreader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; 가&lt;/a&gt; 아닌 순수한 이벤트 소비자로 사용하지 않는 한, 구문 분석을 시작하거나 setFeature 또는 setProperty로 구성을 수행하기 전에 부모를 할당해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0dc7e1cddafc71b16155853933e43c08ca1208cb" translate="yes" xml:space="preserve">
          <source>This fine grain notification tells listeners the exact range of cells, rows, or columns that changed.</source>
          <target state="translated">이 세밀한 알림은 변경된 셀, 행 또는 열의 정확한 범위를 청취자에게 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="0c3c424680cb691bb70d21bb47f61355cb388e98" translate="yes" xml:space="preserve">
          <source>This flag bit indicates that the transform defined by this object performs a general scale in addition to the conversions indicated by other flag bits.</source>
          <target state="translated">이 플래그 비트는이 개체에 의해 정의 된 변환이 다른 플래그 비트에 의해 표시된 변환에 추가하여 일반 스케일을 수행함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2687738b85c082bfa40c02c6d32f42dc89f77e59" translate="yes" xml:space="preserve">
          <source>This flag bit indicates that the transform defined by this object performs a general scale in addition to the conversions indicated by other flag bits. A general scale multiplies the length of vectors by different amounts in the x and y directions without changing the angle between perpendicular vectors. This flag bit is mutually exclusive with the TYPE_UNIFORM_SCALE flag.</source>
          <target state="translated">이 플래그 비트는이 개체에 의해 정의 된 변환이 다른 플래그 비트에 의해 표시된 변환에 추가하여 일반 스케일을 수행함을 나타냅니다. 일반 스케일은 수직 벡터 사이의 각도를 변경하지 않고 벡터 길이에 x 및 y 방향의 다른 양을 곱합니다. 이 플래그 비트는 TYPE_UNIFORM_SCALE 플래그와 상호 배타적입니다.</target>
        </trans-unit>
        <trans-unit id="de73eded1b3231ea32a75ad4ac37e5d5f3d41802" translate="yes" xml:space="preserve">
          <source>This flag bit indicates that the transform defined by this object performs a mirror image flip about some axis which changes the normally right handed coordinate system into a left handed system in addition to the conversions indicated by other flag bits.</source>
          <target state="translated">이 플래그 비트는이 객체에 의해 정의 된 변환이 다른 플래그 비트로 표시된 변환에 추가하여 일반적으로 오른손 좌표계를 왼손 좌표계로 변경하는 일부 축에 대해 미러 이미지 반전을 수행함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1bdec012aa056a0c589229054adc8c14fee1bf0f" translate="yes" xml:space="preserve">
          <source>This flag bit indicates that the transform defined by this object performs a mirror image flip about some axis which changes the normally right handed coordinate system into a left handed system in addition to the conversions indicated by other flag bits. A right handed coordinate system is one where the positive X axis rotates counterclockwise to overlay the positive Y axis similar to the direction that the fingers on your right hand curl when you stare end on at your thumb. A left handed coordinate system is one where the positive X axis rotates clockwise to overlay the positive Y axis similar to the direction that the fingers on your left hand curl. There is no mathematical way to determine the angle of the original flipping or mirroring transformation since all angles of flip are identical given an appropriate adjusting rotation.</source>
          <target state="translated">이 플래그 비트는이 객체에 의해 정의 된 변환이 다른 플래그 비트로 표시되는 변환에 추가하여 일반적으로 오른손 좌표계를 왼손 좌표계로 변경하는 일부 축에 대해 미러 이미지 반전을 수행함을 나타냅니다. 오른손 좌표계는 엄지 손가락을 응시할 때 오른손의 손가락이 말리는 방향과 유사하게 양의 X 축이 시계 반대 방향으로 회전하여 양의 Y 축을 오버레이하는 좌표계입니다. 왼손 좌표계는 양의 X 축이 시계 방향으로 회전하여 왼손의 손가락이 말리는 방향과 유사하게 양의 Y 축을 오버레이하는 시스템입니다. 적절한 조정 회전이 주어지면 모든 대칭 이동 각도가 동일하므로 원래 대칭 이동 또는 대칭 변환의 각도를 결정하는 수학적 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="03b089bdfb9a375505d920527a16f2c409e28a5a" translate="yes" xml:space="preserve">
          <source>This flag bit indicates that the transform defined by this object performs a quadrant rotation by some multiple of 90 degrees in addition to the conversions indicated by other flag bits.</source>
          <target state="translated">이 플래그 비트는이 객체에 의해 정의 된 변환이 다른 플래그 비트에 의해 표시된 변환에 추가하여 90 도의 배수만큼 사분면 회전을 수행함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1de64152c2905b31462a0ce5cfd0a6d19cac84d0" translate="yes" xml:space="preserve">
          <source>This flag bit indicates that the transform defined by this object performs a quadrant rotation by some multiple of 90 degrees in addition to the conversions indicated by other flag bits. A rotation changes the angles of vectors by the same amount regardless of the original direction of the vector and without changing the length of the vector. This flag bit is mutually exclusive with the TYPE_GENERAL_ROTATION flag.</source>
          <target state="translated">이 플래그 비트는이 객체에 의해 정의 된 변환이 다른 플래그 비트에 의해 표시된 변환에 추가하여 90 도의 배수만큼 사분면 회전을 수행함을 나타냅니다. 회전은 벡터의 길이를 변경하지 않고 벡터의 원래 방향에 관계없이 동일한 양만큼 벡터의 각도를 변경합니다. 이 플래그 비트는 TYPE_GENERAL_ROTATION 플래그와 상호 배타적입니다.</target>
        </trans-unit>
        <trans-unit id="f230f4c0e9838cfb9373beb80206fb5957f25a74" translate="yes" xml:space="preserve">
          <source>This flag bit indicates that the transform defined by this object performs a rotation by an arbitrary angle in addition to the conversions indicated by other flag bits.</source>
          <target state="translated">이 플래그 비트는이 객체에 의해 정의 된 변환이 다른 플래그 비트로 표시된 변환에 추가하여 임의의 각도로 회전을 수행함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d9056ae6db598981cd089c82cffde6328e20a9e5" translate="yes" xml:space="preserve">
          <source>This flag bit indicates that the transform defined by this object performs a rotation by an arbitrary angle in addition to the conversions indicated by other flag bits. A rotation changes the angles of vectors by the same amount regardless of the original direction of the vector and without changing the length of the vector. This flag bit is mutually exclusive with the TYPE_QUADRANT_ROTATION flag.</source>
          <target state="translated">이 플래그 비트는이 객체에 의해 정의 된 변환이 다른 플래그 비트로 표시된 변환에 추가하여 임의의 각도로 회전을 수행함을 나타냅니다. 회전은 벡터의 길이를 변경하지 않고 벡터의 원래 방향에 관계없이 동일한 양만큼 벡터의 각도를 변경합니다. 이 플래그 비트는 TYPE_QUADRANT_ROTATION 플래그와 상호 배타적입니다.</target>
        </trans-unit>
        <trans-unit id="5c70049df009e32eab34b7e91f9b1d1464dc08fc" translate="yes" xml:space="preserve">
          <source>This flag bit indicates that the transform defined by this object performs a translation in addition to the conversions indicated by other flag bits.</source>
          <target state="translated">이 플래그 비트는이 객체에 의해 정의 된 변환이 다른 플래그 비트로 표시된 변환에 추가하여 변환을 수행함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d63540b16f90cda848269fa08415fb2390a9bada" translate="yes" xml:space="preserve">
          <source>This flag bit indicates that the transform defined by this object performs a translation in addition to the conversions indicated by other flag bits. A translation moves the coordinates by a constant amount in x and y without changing the length or angle of vectors.</source>
          <target state="translated">이 플래그 비트는이 객체에 의해 정의 된 변환이 다른 플래그 비트로 표시된 변환에 추가하여 변환을 수행함을 나타냅니다. 변환은 벡터의 길이나 각도를 변경하지 않고 x 및 y에서 일정한 양만큼 좌표를 이동합니다.</target>
        </trans-unit>
        <trans-unit id="9e6f98db759317983ef4c77c7c66a631b6c41605" translate="yes" xml:space="preserve">
          <source>This flag bit indicates that the transform defined by this object performs a uniform scale in addition to the conversions indicated by other flag bits.</source>
          <target state="translated">이 플래그 비트는이 객체에 의해 정의 된 변환이 다른 플래그 비트로 표시된 변환에 추가하여 균일 한 스케일을 수행함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="63f7de16d22aa85eca54d86fc9c656387660c1f0" translate="yes" xml:space="preserve">
          <source>This flag bit indicates that the transform defined by this object performs a uniform scale in addition to the conversions indicated by other flag bits. A uniform scale multiplies the length of vectors by the same amount in both the x and y directions without changing the angle between vectors. This flag bit is mutually exclusive with the TYPE_GENERAL_SCALE flag.</source>
          <target state="translated">이 플래그 비트는이 객체에 의해 정의 된 변환이 다른 플래그 비트로 표시된 변환에 추가하여 균일 한 스케일을 수행함을 나타냅니다. 균일 한 배율은 벡터 사이의 각도를 변경하지 않고 x 및 y 방향에서 벡터 길이에 동일한 양을 곱합니다. 이 플래그 비트는 TYPE_GENERAL_SCALE 플래그와 상호 배타적입니다.</target>
        </trans-unit>
        <trans-unit id="939c66f1882c91d7b18fffcfbb4b7ef9be17e137" translate="yes" xml:space="preserve">
          <source>This flag corresponds to &lt;code&gt;'#'&lt;/code&gt; (&lt;code&gt;'\u0023'&lt;/code&gt;) in the format specifier.</source>
          <target state="translated">이 플래그 는 형식 지정자에서 &lt;code&gt;'#'&lt;/code&gt; ( &lt;code&gt;'\u0023'&lt;/code&gt; )에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="639d639bc1d06224bd26b0c98169f7170259c749" translate="yes" xml:space="preserve">
          <source>This flag corresponds to &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002d'&lt;/code&gt;) in the format specifier.</source>
          <target state="translated">이 플래그 는 형식 지정자의 &lt;code&gt;'-'&lt;/code&gt; ( &lt;code&gt;'\u002d'&lt;/code&gt; )에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="f2f896b93435355c3dab017fa3a45ce5c075cdb3" translate="yes" xml:space="preserve">
          <source>This flag corresponds to &lt;code&gt;'S'&lt;/code&gt; (&lt;code&gt;'\u0053'&lt;/code&gt;) in the format specifier.</source>
          <target state="translated">이 플래그 는 형식 지정자에서 &lt;code&gt;'S'&lt;/code&gt; ( &lt;code&gt;'\u0053'&lt;/code&gt; )에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="da98eae26ffe832c7d54f529b941ebe26e909790" translate="yes" xml:space="preserve">
          <source>This flag determines whether or not the Parser will be strict in enforcing SGML compatibility.</source>
          <target state="translated">이 플래그는 구문 분석기가 SGML 호환성을 적용 할 때 엄격한 지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="7421751ed4fd84e8f18a84587c31f38e9e8088f0" translate="yes" xml:space="preserve">
          <source>This flag determines whether or not the Parser will be strict in enforcing SGML compatibility. If false, it will be lenient with certain common classes of erroneous HTML constructs. Strict or not, in either case an error will be recorded.</source>
          <target state="translated">이 플래그는 구문 분석기가 SGML 호환성을 적용 할 때 엄격한 지 여부를 결정합니다. false이면 잘못된 HTML 구조의 특정 공통 클래스에 관대합니다. 엄격하든 아니든 두 경우 모두 오류가 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="78de041b6963299e1d333ed0f05409d28ed00d04" translate="yes" xml:space="preserve">
          <source>This flag in the infoflags argument to imageUpdate indicates that a static image which was previously drawn is now complete and can be drawn again in its final form.</source>
          <target state="translated">imageUpdate에 대한 infoflags 인수의이 플래그는 이전에 그린 정적 이미지가 이제 완료되었으며 최종 형식으로 다시 그릴 수 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d7ca9db7486edb71281336e978998a6da3e30071" translate="yes" xml:space="preserve">
          <source>This flag in the infoflags argument to imageUpdate indicates that a static image which was previously drawn is now complete and can be drawn again in its final form. The x, y, width, and height arguments to the imageUpdate callback method should be ignored.</source>
          <target state="translated">imageUpdate에 대한 infoflags 인수의이 플래그는 이전에 그린 정적 이미지가 이제 완료되었으며 최종 형식으로 다시 그릴 수 있음을 나타냅니다. imageUpdate 콜백 메서드에 대한 x, y, 너비 및 높이 인수는 무시해야합니다.</target>
        </trans-unit>
        <trans-unit id="985f2093894d1440b4c8df9b0255bb4c6903ccf4" translate="yes" xml:space="preserve">
          <source>This flag in the infoflags argument to imageUpdate indicates that an image which was being tracked asynchronously has encountered an error.</source>
          <target state="translated">imageUpdate에 대한 infoflags 인수의이 플래그는 비동기 적으로 추적중인 이미지에 오류가 발생했음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ad5c16e5304a1887afe2c52e03d208b5114f4227" translate="yes" xml:space="preserve">
          <source>This flag in the infoflags argument to imageUpdate indicates that an image which was being tracked asynchronously has encountered an error. No further information will become available and drawing the image will fail. As a convenience, the ABORT flag will be indicated at the same time to indicate that the image production was aborted.</source>
          <target state="translated">imageUpdate에 대한 infoflags 인수의이 플래그는 비동기 적으로 추적중인 이미지에 오류가 발생했음을 나타냅니다. 더 이상의 정보를 사용할 수 없으며 이미지 그리기가 실패합니다. 편의상 ABORT 플래그가 동시에 표시되어 이미지 생성이 중단되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2faacf3c48eb0b4025a472a03e396cf315d12838" translate="yes" xml:space="preserve">
          <source>This flag in the infoflags argument to imageUpdate indicates that an image which was being tracked asynchronously was aborted before production was complete.</source>
          <target state="translated">imageUpdate에 대한 infoflags 인수의이 플래그는 비동기 적으로 추적되고 있던 이미지가 생산이 완료되기 전에 중단되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2530ad95fe4f9023d9069d48e130c702b3fac6f3" translate="yes" xml:space="preserve">
          <source>This flag in the infoflags argument to imageUpdate indicates that an image which was being tracked asynchronously was aborted before production was complete. No more information will become available without further action to trigger another image production sequence. If the ERROR flag was not also set in this image update, then accessing any of the data in the image will restart the production again, probably from the beginning.</source>
          <target state="translated">imageUpdate에 대한 infoflags 인수의이 플래그는 비동기 적으로 추적되고 있던 이미지가 생산이 완료되기 전에 중단되었음을 나타냅니다. 다른 이미지 생성 시퀀스를 트리거하기위한 추가 조치 없이는 더 이상 정보를 사용할 수 없습니다. 이 이미지 업데이트에서도 ERROR 플래그가 설정되지 않은 경우 이미지의 데이터에 액세스하면 처음부터 프로덕션이 다시 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="987d3aa844601727e5bc3319358736a2d33197d2" translate="yes" xml:space="preserve">
          <source>This flag in the infoflags argument to imageUpdate indicates that another complete frame of a multi-frame image which was previously drawn is now available to be drawn again.</source>
          <target state="translated">imageUpdate에 대한 infoflags 인수의이 플래그는 이전에 그린 다중 프레임 이미지의 또 다른 완전한 프레임을 이제 다시 그릴 수 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="675bf9c4ed4d152d3c15ac3981c05915e7cd5cff" translate="yes" xml:space="preserve">
          <source>This flag in the infoflags argument to imageUpdate indicates that another complete frame of a multi-frame image which was previously drawn is now available to be drawn again. The x, y, width, and height arguments to the imageUpdate callback method should be ignored.</source>
          <target state="translated">imageUpdate에 대한 infoflags 인수의이 플래그는 이전에 그린 다중 프레임 이미지의 또 다른 완전한 프레임을 이제 다시 그릴 수 있음을 나타냅니다. imageUpdate 콜백 메서드에 대한 x, y, 너비 및 높이 인수는 무시해야합니다.</target>
        </trans-unit>
        <trans-unit id="f308d04c83e329384f4b8685726b7d9a4ed06162" translate="yes" xml:space="preserve">
          <source>This flag in the infoflags argument to imageUpdate indicates that more pixels needed for drawing a scaled variation of the image are available.</source>
          <target state="translated">imageUpdate에 대한 infoflags 인수의이 플래그는 이미지의 크기가 조정 된 변형을 그리는 데 필요한 더 많은 픽셀을 사용할 수 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="57fe5f65bc238b15f44a45c4c85f0a9410d55e2b" translate="yes" xml:space="preserve">
          <source>This flag in the infoflags argument to imageUpdate indicates that more pixels needed for drawing a scaled variation of the image are available. The bounding box of the new pixels can be taken from the x, y, width, and height arguments to the imageUpdate callback method.</source>
          <target state="translated">imageUpdate에 대한 infoflags 인수의이 플래그는 이미지의 크기가 조정 된 변형을 그리는 데 필요한 더 많은 픽셀을 사용할 수 있음을 나타냅니다. 새 픽셀의 경계 상자는 x, y, 너비 및 높이 인수에서 imageUpdate 콜백 메서드로 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ed11016c55f7c5cf0caf6443e8b4dde35949128" translate="yes" xml:space="preserve">
          <source>This flag in the infoflags argument to imageUpdate indicates that the height of the base image is now available and can be taken from the height argument to the imageUpdate callback method.</source>
          <target state="translated">imageUpdate에 대한 infoflags 인수의이 플래그는 이제 기본 이미지의 높이를 사용할 수 있으며 height 인수에서 imageUpdate 콜백 메서드로 가져올 수 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="47f96eecb2348ee8bac33493bed8ed7683936c97" translate="yes" xml:space="preserve">
          <source>This flag in the infoflags argument to imageUpdate indicates that the properties of the image are now available.</source>
          <target state="translated">imageUpdate에 대한 infoflags 인수의이 플래그는 이미지 속성을 사용할 수 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="89127b0b360731af4ade30d3841e588dc3e7e78a" translate="yes" xml:space="preserve">
          <source>This flag in the infoflags argument to imageUpdate indicates that the width of the base image is now available and can be taken from the width argument to the imageUpdate callback method.</source>
          <target state="translated">imageUpdate에 대한 infoflags 인수의이 플래그는 이제 기본 이미지의 너비를 사용할 수 있으며 width 인수에서 imageUpdate 콜백 메서드로 가져올 수 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7c7c62588f607a84bf3b69b5c3aea87d8830ccba" translate="yes" xml:space="preserve">
          <source>This flag indicates that the Alt key was down when the event occurred.</source>
          <target state="translated">이 플래그는 이벤트가 발생했을 때 Alt 키를 눌렀 음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="eab95d49af9606a5387d9f649e1dd6dad26483f4" translate="yes" xml:space="preserve">
          <source>This flag indicates that the Alt key was down when the event occurred. For mouse events, this flag indicates that the middle mouse button was pressed or released.</source>
          <target state="translated">이 플래그는 이벤트가 발생했을 때 Alt 키를 눌렀 음을 나타냅니다. 마우스 이벤트의 경우이 플래그는 마우스 가운데 버튼을 눌렀거나 놓았 음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="86340c9a9ba6ba2ad70995906aa34a0d5b6fec84" translate="yes" xml:space="preserve">
          <source>This flag indicates that the Control key was down when the event occurred.</source>
          <target state="translated">이 플래그는 이벤트가 발생했을 때 Control 키를 눌렀 음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="08159a9aa4bde0121774f7d719daecb6e68b1535" translate="yes" xml:space="preserve">
          <source>This flag indicates that the Meta key was down when the event occurred.</source>
          <target state="translated">이 플래그는 이벤트가 발생했을 때 Meta 키가 다운되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="cde5b11137fdb1ede604d8ea33dbeed956474fb0" translate="yes" xml:space="preserve">
          <source>This flag indicates that the Meta key was down when the event occurred. For mouse events, this flag indicates that the right button was pressed or released.</source>
          <target state="translated">이 플래그는 이벤트가 발생했을 때 Meta 키가 다운되었음을 나타냅니다. 마우스 이벤트의 경우이 플래그는 오른쪽 버튼을 눌렀거나 놓았 음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6f1206e3e35dc62005f9c13d11590a0c2b17a3fd" translate="yes" xml:space="preserve">
          <source>This flag indicates that the Shift key was down when the event occurred.</source>
          <target state="translated">이 플래그는 이벤트가 발생했을 때 Shift 키를 눌렀 음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5caa88a878048abee134d96f9a277ae8c9a1d543" translate="yes" xml:space="preserve">
          <source>This flag is used to reset the &lt;a href=&quot;#alreadyNotifieds&quot;&gt;&lt;code&gt;alreadyNotifieds&lt;/code&gt;&lt;/a&gt; monitor attribute.</source>
          <target state="translated">이 플래그는 &lt;a href=&quot;#alreadyNotifieds&quot;&gt; &lt;code&gt;alreadyNotifieds&lt;/code&gt; &lt;/a&gt; 모니터 속성 을 재설정하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9436ee7c8ef7ac684c9a12e0444bde9757034138" translate="yes" xml:space="preserve">
          <source>This flag is used to reset the &lt;a href=&quot;monitor#alreadyNotifieds&quot;&gt;&lt;code&gt;alreadyNotifieds&lt;/code&gt;&lt;/a&gt; monitor attribute.</source>
          <target state="translated">이 플래그는 &lt;a href=&quot;monitor#alreadyNotifieds&quot;&gt; &lt;code&gt;alreadyNotifieds&lt;/code&gt; &lt;/a&gt; 모니터 속성 을 재설정하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="bb927ac7a2adf9141656556c75832459e15a420d" translate="yes" xml:space="preserve">
          <source>This form of &lt;code&gt;getHeaderField&lt;/code&gt; exists because some connection types (e.g., &lt;code&gt;http-ng&lt;/code&gt;) have pre-parsed headers. Classes for that connection type can override this method and short-circuit the parsing.</source>
          <target state="translated">이러한 연결 형식 의 &lt;code&gt;getHeaderField&lt;/code&gt; 는 일부 연결 유형 (예 : &lt;code&gt;http-ng&lt;/code&gt; )에 사전 구문 분석 된 헤더 가 있기 때문에 존재합니다 . 해당 연결 유형의 클래스는이 방법을 무시하고 구문 분석을 단락시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c03168e0fcfc3be3ff6b28008ec6d11ce1b6504f" translate="yes" xml:space="preserve">
          <source>This form of curve is commonly known as a B&amp;eacute;zier curve.</source>
          <target state="translated">이러한 형태의 곡선을 일반적으로 베 지어 곡선이라고합니다.</target>
        </trans-unit>
        <trans-unit id="03ecb45d47f9c2e58fd8e2a7495125ff561eac6f" translate="yes" xml:space="preserve">
          <source>This form of the method &lt;code&gt;acceptChanges&lt;/code&gt; is similar to the form that takes no arguments; however, unlike the other form, this form can be used only when the underlying data source is a JDBC data source. The updated &lt;code&gt;Connection&lt;/code&gt; properties must be used by the &lt;code&gt;SyncProvider&lt;/code&gt; to reset the &lt;code&gt;RowSetWriter&lt;/code&gt; configuration to ensure that the contents of the &lt;code&gt;CachedRowSet&lt;/code&gt; object are synchronized correctly.</source>
          <target state="translated">이 형식의 &lt;code&gt;acceptChanges&lt;/code&gt; 메소드 는 인수가없는 형식과 유사합니다. 그러나 다른 양식과 달리이 양식은 기본 데이터 소스가 JDBC 데이터 소스 인 경우에만 사용할 수 있습니다. &lt;code&gt;SyncProvider&lt;/code&gt; 는 업데이트 된 &lt;code&gt;Connection&lt;/code&gt; 속성을 사용 하여 &lt;code&gt;RowSetWriter&lt;/code&gt; 구성을 재설정 하여 &lt;code&gt;CachedRowSet&lt;/code&gt; 개체 의 내용이 올바르게 동기화되도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="c57c4034668f9f7e67c1a275f4dbe35d321a31c5" translate="yes" xml:space="preserve">
          <source>This format string is the first argument to the &lt;code&gt;format&lt;/code&gt; method. It contains three format specifiers &quot;&lt;code&gt;%1$tm&lt;/code&gt;&quot;, &quot;&lt;code&gt;%1$te&lt;/code&gt;&quot;, and &quot;&lt;code&gt;%1$tY&lt;/code&gt;&quot; which indicate how the arguments should be processed and where they should be inserted in the text. The remaining portions of the format string are fixed text including &lt;code&gt;&quot;Dukes Birthday: &quot;&lt;/code&gt; and any other spaces or punctuation. The argument list consists of all arguments passed to the method after the format string. In the above example, the argument list is of size one and consists of the &lt;a href=&quot;calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">이 형식 문자열은 &lt;code&gt;format&lt;/code&gt; 메소드 의 첫 번째 인수 입니다. 여기에는 세 가지 형식 지정자 &quot; &lt;code&gt;%1$tm&lt;/code&gt; &quot;, &quot; &lt;code&gt;%1$te&lt;/code&gt; &quot;및 &quot; &lt;code&gt;%1$tY&lt;/code&gt; &quot;가 포함되어 있으며 인수를 처리하는 방법과 텍스트에서 삽입 할 위치를 나타냅니다. 형식 문자열의 나머지 부분은 &lt;code&gt;&quot;Dukes Birthday: &quot;&lt;/code&gt; 및 기타 공백이나 문장 부호를 포함한 고정 텍스트 입니다. 인수 목록은 형식 문자열 다음에 메소드에 전달 된 모든 인수로 구성됩니다. 위의 예제에서 인수 목록의 크기는 1이며 &lt;a href=&quot;calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체 &lt;code&gt;c&lt;/code&gt; 로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="02cd6e3f81b6adc90a7b6b49bd25b66dc6d6042f" translate="yes" xml:space="preserve">
          <source>This formats the date-time to a String using the rules of the formatter.</source>
          <target state="translated">포맷터의 규칙을 사용하여 날짜-시간을 문자열로 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="4c8dd66ef1b8712d1496d2f8b21f082de2c3b844" translate="yes" xml:space="preserve">
          <source>This formatter</source>
          <target state="translated">이 포매터</target>
        </trans-unit>
        <trans-unit id="0e1ade80f03d56fb0c562ee58ed1bfc634f0a4ef" translate="yes" xml:space="preserve">
          <source>This fragment is not technically part of the URL. Rather, it indicates that after the specified resource is retrieved, the application is specifically interested in that part of the document that has the tag &lt;code&gt;chapter1&lt;/code&gt; attached to it. The meaning of a tag is resource specific.</source>
          <target state="translated">이 조각은 기술적으로 URL의 일부가 아닙니다. 대신, 지정된 자원을 검색 한 후 응용 프로그램이 특히 &lt;code&gt;chapter1&lt;/code&gt; 태그가 첨부 된 문서의 해당 부분에 관심이 있음을 나타냅니다 . 태그의 의미는 리소스별로 다릅니다.</target>
        </trans-unit>
        <trans-unit id="038aca77562aa186f7edc69d0d7ed4b4c29d94a7" translate="yes" xml:space="preserve">
          <source>This framework allows multiple classes implementing predicates to be used in combination to achieved the required filtering result with out the need for query language processing.</source>
          <target state="translated">이 프레임 워크를 사용하면 조건자를 구현하는 여러 클래스를 조합하여 사용하여 쿼리 언어 처리없이 필요한 필터링 결과를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3835819d552f1ccd551a425f0568a0e858200e24" translate="yes" xml:space="preserve">
          <source>This function allows the prefix to be specified and the proper resolution to occur. Specifically, when the standard resolution fails, the resolution is retried taking the prefix into consideration. There are two ways that resolution occurs, explicit resolution with the JNI function &lt;code&gt;RegisterNatives&lt;/code&gt; and the normal automatic resolution. For &lt;code&gt;RegisterNatives&lt;/code&gt;, the JVM will attempt this association:</source>
          <target state="translated">이 기능을 사용하면 접두사를 지정하고 적절한 해상도를 얻을 수 있습니다. 특히 표준 해상도가 실패하면 접두사를 고려하여 해상도를 다시 시도합니다. JNI 함수 &lt;code&gt;RegisterNatives&lt;/code&gt; 를 사용한 명시 적 해상도와 일반 자동 해상도의 두 가지 해결 방법이 있습니다 . 들어 &lt;code&gt;RegisterNatives&lt;/code&gt; 를 JVM은이 연결을 시도합니다 :</target>
        </trans-unit>
        <trans-unit id="248faeb7de371c03f853eb04d3ec7f5aa77128a5" translate="yes" xml:space="preserve">
          <source>This function facilitates the instrumentation of already loaded classes. When classes are initially loaded or when they are &lt;a href=&quot;#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt;redefined&lt;/a&gt;, the initial class file bytes can be transformed with the &lt;a href=&quot;classfiletransformer&quot;&gt;&lt;code&gt;ClassFileTransformer&lt;/code&gt;&lt;/a&gt;. This function reruns the transformation process (whether or not a transformation has previously occurred). This retransformation follows these steps:</source>
          <target state="translated">이 함수는 이미로드 된 클래스의 계측을 용이하게합니다. 클래스가 처음로드되거나 &lt;a href=&quot;#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt;재정의&lt;/a&gt; 될 때 초기 클래스 파일 바이트는 &lt;a href=&quot;classfiletransformer&quot;&gt; &lt;code&gt;ClassFileTransformer&lt;/code&gt; &lt;/a&gt; 로 변환 될 수 있습니다 . 이 함수는 변환 프로세스를 다시 실행합니다 (이전에 변환이 발생했는지 여부에 관계없이). 이 재 변환은 다음 단계를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="0969a75285217d8f5727395078bd48e49354a4fa" translate="yes" xml:space="preserve">
          <source>This function facilitates the instrumentation of already loaded classes. When classes are initially loaded or when they are &lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt;redefined&lt;/a&gt;, the initial class file bytes can be transformed with the &lt;a href=&quot;classfiletransformer&quot;&gt;&lt;code&gt;ClassFileTransformer&lt;/code&gt;&lt;/a&gt;. This function reruns the transformation process (whether or not a transformation has previously occurred). This retransformation follows these steps:</source>
          <target state="translated">이 함수는 이미로드 된 클래스의 계측을 용이하게합니다. 클래스가 처음로드되거나 &lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt;재정의&lt;/a&gt; 될 때 초기 클래스 파일 바이트는 &lt;a href=&quot;classfiletransformer&quot;&gt; &lt;code&gt;ClassFileTransformer&lt;/code&gt; 를&lt;/a&gt; 사용하여 변환 될 수 있습니다 . 이 함수는 변환 프로세스를 다시 실행합니다 (이전에 변환이 발생했는지 여부). 이 재 변환은 다음 단계를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="541dd684e1f0d5d723003436c19bcb809b04547e" translate="yes" xml:space="preserve">
          <source>This function is called when a mousePressed was detected in the track, not in the thumb.</source>
          <target state="translated">이 함수는 mousePressed가 엄지가 아닌 트랙에서 감지되었을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d3656717003f0e3317bed3be0c7d8b210864da92" translate="yes" xml:space="preserve">
          <source>This function is called when a mousePressed was detected in the track, not in the thumb. The default behavior is to scroll by block. You can override this method to stop it from scrolling or to add additional behavior.</source>
          <target state="translated">이 함수는 mousePressed가 엄지가 아닌 트랙에서 감지되었을 때 호출됩니다. 기본 동작은 블록별로 스크롤하는 것입니다. 이 메서드를 재정 의하여 스크롤을 중지하거나 추가 동작을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca26640c9747f9429676d838b4210888d1e65833" translate="yes" xml:space="preserve">
          <source>This function may cause the component's opaque property to change.</source>
          <target state="translated">이 함수로 인해 구성 요소의 불투명 속성이 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da4434880040821ea8e7fdba28347094ce7253de" translate="yes" xml:space="preserve">
          <source>This function returns the collation element that the iterator is currently pointing to and then updates the internal pointer to point to the next element. previous() updates the pointer first and then returns the element. This means that when you change direction while iterating (i.e., call next() and then call previous(), or call previous() and then call next()), you'll get back the same element twice.</source>
          <target state="translated">이 함수는 반복자가 현재 가리키고있는 데이터 정렬 요소를 반환 한 후 다음 요소를 가리 키도록 내부 포인터를 업데이트합니다. previous ()는 먼저 포인터를 업데이트 한 다음 요소를 반환합니다. 즉, 반복하는 동안 방향을 변경하면 (예 : next ()를 호출 한 다음 previous ()를 호출하거나 previous ()를 호출 한 후 next ()) 호출하면 동일한 요소가 두 번 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d84e048f9e0345086f64039aa26f6626ba6486ac" translate="yes" xml:space="preserve">
          <source>This function updates the iterator's internal pointer to point to the collation element preceding the one it's currently pointing to and then returns that element, while next() returns the current element and then updates the pointer. This means that when you change direction while iterating (i.e., call next() and then call previous(), or call previous() and then call next()), you'll get back the same element twice.</source>
          <target state="translated">이 함수는 iterator의 내부 포인터를 업데이트하여 현재 가리키는 요소 앞에있는 데이터 정렬 요소를 가리키고 해당 요소를 반환하는 반면 next ()는 현재 요소를 반환 한 다음 포인터를 업데이트합니다. 즉, 반복하는 동안 방향을 변경하면 (예 : next ()를 호출 한 다음 previous ()를 호출하거나 previous ()를 호출 한 후 next ()) 호출하면 동일한 요소가 두 번 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1b421251b7e8a22bab039f3bbe7f5fdfe294c52a" translate="yes" xml:space="preserve">
          <source>This gives behavior equivalent to most operating system command interpreters, or the standard C library function &lt;code&gt;system()&lt;/code&gt;.</source>
          <target state="translated">이것은 대부분의 운영 체제 명령 해석기 또는 표준 C 라이브러리 함수 &lt;code&gt;system()&lt;/code&gt; 과 동등한 동작을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="df3309ca4d82c68f15ffe723636341b8a21d6ce7" translate="yes" xml:space="preserve">
          <source>This gives code access to classes in packages to which it normally does not have access and the dynamic proxy class is in the system protection domain. Malicious code may use these classes to help in its attempt to compromise security in the system.</source>
          <target state="translated">이는 일반적으로 액세스 할 수없고 동적 프록시 클래스가 시스템 보호 도메인에있는 패키지의 클래스에 대한 코드 액세스를 제공합니다. 악성 코드는 이러한 클래스를 사용하여 시스템의 보안을 손상하려는 시도를 도울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36a4a7bebdfb9e7dde3a69b7b1b83b8bc5989192" translate="yes" xml:space="preserve">
          <source>This gives code access to classes in packages to which it normally does not have access. Malicious code may use these classes to help in its attempt to compromise security in the system.</source>
          <target state="translated">이는 일반적으로 액세스 할 수없는 패키지의 클래스에 대한 코드 액세스를 제공합니다. 악성 코드는 이러한 클래스를 사용하여 시스템의 보안을 손상하려는 시도를 도울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f903ac786d84be7c118d277a305980c729ef6082" translate="yes" xml:space="preserve">
          <source>This gives code access to protected, sensitive methods that may disclose information about other classes or the execution stack.</source>
          <target state="translated">이를 통해 다른 클래스 나 실행 스택에 대한 정보를 공개 할 수있는 보호되고 민감한 메소드에 코드 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7201e4e18e9d82f87d1d4c5b0806ace02068b76" translate="yes" xml:space="preserve">
          <source>This global lock is used by both &lt;code&gt;BeanContext&lt;/code&gt; and &lt;code&gt;BeanContextServices&lt;/code&gt; implementors to serialize changes in a &lt;code&gt;BeanContext&lt;/code&gt; hierarchy and any service requests etc.</source>
          <target state="translated">이 전역 잠금은 &lt;code&gt;BeanContext&lt;/code&gt; 및 &lt;code&gt;BeanContextServices&lt;/code&gt; 구현자가 &lt;code&gt;BeanContext&lt;/code&gt; 계층 및 서비스 요청 등의 변경 사항을 직렬화 하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="fc083caeaa7087c63bc612177fa2c826850e8618" translate="yes" xml:space="preserve">
          <source>This grants code permission to define a class in a particular package. This is dangerous because malicious code with this permission may define rogue classes in trusted packages like &lt;code&gt;java.security&lt;/code&gt; or &lt;code&gt;java.lang&lt;/code&gt;, for example.</source>
          <target state="translated">이렇게하면 특정 패키지에서 클래스를 정의 할 수있는 코드 권한이 부여됩니다. 이 권한이있는 악성 코드 는 예를 들어 &lt;code&gt;java.security&lt;/code&gt; 또는 &lt;code&gt;java.lang&lt;/code&gt; 과 같은 신뢰할 수있는 패키지에서 불량 클래스를 정의 할 수 있으므로 위험 합니다.</target>
        </trans-unit>
        <trans-unit id="331c65a3cf6e23f65b3a3cf205997e21c51762c0" translate="yes" xml:space="preserve">
          <source>This grants code permission to query a class for its public, protected, default (package) access, and private fields and/or methods. Although the code would have access to the private and protected field and method names, it would not have access to the private/protected field data and would not be able to invoke any private methods. Nevertheless, malicious code may use this information to better aim an attack. Additionally, it may invoke any public methods and/or access public fields in the class. This could be dangerous if the code would normally not be able to invoke those methods and/or access the fields because it can't cast the object to the class/interface with those methods and fields.</source>
          <target state="translated">이를 통해 클래스의 공개, 보호, 기본 (패키지) 액세스 및 개인 필드 및 / 또는 메소드에 대해 클래스를 쿼리 할 수있는 권한을 코드에 부여합니다. 코드는 개인 및 보호 필드 및 메소드 이름에 액세스 할 수 있지만 개인 / 보호 필드 데이터에 액세스 할 수 없으며 개인 메소드를 호출 할 수 없습니다. 그럼에도 불구하고 악성 코드는이 정보를 사용하여 공격을보다 효과적으로 조준 할 수 있습니다. 또한 모든 공개 메소드를 호출하거나 클래스의 공개 필드에 액세스 할 수 있습니다. 코드가 일반적으로 해당 메소드 및 필드를 사용하여 클래스 / 인터페이스로 오브젝트를 캐스트 할 수 없으므로 해당 메소드를 호출하거나 필드에 액세스 할 수없는 경우 위험 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4cb4c8ef7bfa2b034e73e5db16097486ee811412" translate="yes" xml:space="preserve">
          <source>This grants code with a suitably privileged &lt;code&gt;Lookup&lt;/code&gt; object permission to define classes in the same package as the &lt;code&gt;Lookup&lt;/code&gt;'s lookup class.</source>
          <target state="translated">이렇게 하면 &lt;code&gt;Lookup&lt;/code&gt; 의 조회 클래스 와 동일한 패키지에서 클래스를 정의 할 수 있는 적절한 권한이있는 &lt;code&gt;Lookup&lt;/code&gt; 개체 권한이 있는 코드가 부여 됩니다.</target>
        </trans-unit>
        <trans-unit id="fde6681f9123e3f50985f1b4f98889fbc97c3cf1" translate="yes" xml:space="preserve">
          <source>This grants the permission to access resources in the &lt;a href=&quot;module/modulefinder#ofSystem()&quot;&gt;system modules&lt;/a&gt; in the runtime image.</source>
          <target state="translated">이렇게 하면 런타임 이미지 의 &lt;a href=&quot;module/modulefinder#ofSystem()&quot;&gt;시스템 모듈&lt;/a&gt; 에있는 리소스에 액세스 할 수있는 권한이 부여 됩니다.</target>
        </trans-unit>
        <trans-unit id="e55a4da753863a8bba6e4347eb1452298d012a13" translate="yes" xml:space="preserve">
          <source>This handshake status only applies to DTLS.</source>
          <target state="translated">이 핸드 셰이크 상태는 DTLS에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="bdc1e82b477a6bfcb6c52a2de6be945954ad552a" translate="yes" xml:space="preserve">
          <source>This hashtable maintains the association between a component and its gridbag constraints.</source>
          <target state="translated">이 해시 테이블은 구성 요소와 해당 그리드 백 제약 조건 간의 연결을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="114361a1f81fcbcfed6d8b789560faa01d64cd80" translate="yes" xml:space="preserve">
          <source>This hashtable maintains the association between a component and its gridbag constraints. The Keys in &lt;code&gt;comptable&lt;/code&gt; are the components and the values are the instances of &lt;code&gt;GridBagConstraints&lt;/code&gt;.</source>
          <target state="translated">이 해시 테이블은 구성 요소와 해당 그리드 백 제약 조건 간의 연결을 유지합니다. &lt;code&gt;comptable&lt;/code&gt; 의 키 는 구성 요소이고 값은 &lt;code&gt;GridBagConstraints&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="928065b5350bb6dc0ff7a89abd23a3a1365156f4" translate="yes" xml:space="preserve">
          <source>This helper class provides a utility implementation of the java.beans.beancontext.BeanContext interface.</source>
          <target state="translated">이 헬퍼 클래스는 java.beans.beancontext.BeanContext 인터페이스의 유틸리티 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a3968715bb1c83e42ddc1134b4b0052bdc0ae996" translate="yes" xml:space="preserve">
          <source>This helper class provides a utility implementation of the java.beans.beancontext.BeanContextServices interface.</source>
          <target state="translated">이 헬퍼 클래스는 java.beans.beancontext.BeanContextServices 인터페이스의 유틸리티 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="03a2f50a49f89bc934b617384f82c5f002c3dda2" translate="yes" xml:space="preserve">
          <source>This hint could control the choice of alpha blending calculations that sacrifice some precision to use fast lookup tables or lower precision SIMD instructions. This hint could also control whether or not the color and alpha values are converted into a linear color space during the calculations for a more linear visual effect at the expense of additional per-pixel calculations.</source>
          <target state="translated">이 힌트는 빠른 조회 테이블 또는 낮은 정밀도 SIMD 명령어를 사용하기 위해 정밀도를 희생하는 알파 블렌딩 계산의 선택을 제어 할 수 있습니다. 이 힌트는 또한 픽셀 당 계산을 추가하는 대신 더 선형적인 시각 효과를 내기 위해 계산 중에 색상 및 알파 값을 선형 색상 공간으로 변환할지 여부를 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="122efe634c67682e5a922bde9527a99da845e034" translate="yes" xml:space="preserve">
          <source>This idiom obviates the need for using a string to describe the preferences node and decreases the likelihood of a run-time failure. (If the class name is misspelled, it will typically result in a compile-time error.)</source>
          <target state="translated">이 관용구는 환경 설정 노드를 설명하기 위해 문자열을 사용할 필요가없고 런타임 실패 가능성을 줄입니다. 클래스 이름의 철자가 틀리면 일반적으로 컴파일 타임 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="93a7c876086de103fe90d72abc3354bf2b0a05c2" translate="yes" xml:space="preserve">
          <source>This image demonstrates the example code above for each of the three cycle methods:</source>
          <target state="translated">이 이미지는 위의 세 가지주기 방법 각각에 대한 예제 코드를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="5cdd4e31d649b84b9712aeca4984c51163b0e4bc" translate="yes" xml:space="preserve">
          <source>This image demonstrates the example code above, with default (centered) focus for each of the three cycle methods:</source>
          <target state="translated">이 이미지는 위의 예제 코드를 보여 주며, 세 가지 순환 방법 각각에 대한 기본 (중앙) 초점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0db7ae36050acb9f6b1b7c8c88d0c0ac58c5d466" translate="yes" xml:space="preserve">
          <source>This image demonstrates the previous example code, with non-centered focus for each of the three cycle methods:</source>
          <target state="translated">이 이미지는 세 가지 순환 방법 각각에 대해 중심이 아닌 초점이있는 이전 예제 코드를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="baf26da4b69e49b43fe2bc4d31a8d18849aa6c5a" translate="yes" xml:space="preserve">
          <source>This image depicts the check box group created by this example:</source>
          <target state="translated">이 이미지는이 예에서 생성 된 확인란 그룹을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="cb483fb3c7858eebd1fcc587a38b0c6d8cb79546" translate="yes" xml:space="preserve">
          <source>This image depicts the check boxes and grid layout created by this code example:</source>
          <target state="translated">이 이미지는이 코드 예제로 생성 된 체크 박스와 그리드 레이아웃을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d436b05a3d3acb38b75f4e5107dbd6fff2606b6b" translate="yes" xml:space="preserve">
          <source>This image should not be subclassed directly but should be created by using the &lt;a href=&quot;../component#createVolatileImage(int,int)&quot;&gt;&lt;code&gt;Component.createVolatileImage&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../graphicsconfiguration#createCompatibleVolatileImage(int,int)&quot;&gt;&lt;code&gt;GraphicsConfiguration.createCompatibleVolatileImage(int, int)&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">이 이미지는 직접 서브 클래 싱해서는 &lt;a href=&quot;../graphicsconfiguration#createCompatibleVolatileImage(int,int)&quot;&gt; &lt;code&gt;GraphicsConfiguration.createCompatibleVolatileImage(int, int)&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../component#createVolatileImage(int,int)&quot;&gt; &lt;code&gt;Component.createVolatileImage&lt;/code&gt; &lt;/a&gt; 또는 GraphicsConfiguration.createCompatibleVolatileImage (int, int) 메소드 를 사용하여 생성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="629c63ad23cd7fd948e6f93d8955c9d3fe585f63" translate="yes" xml:space="preserve">
          <source>This immutable class defines an elliptic curve (EC) characteristic 2 finite field.</source>
          <target state="translated">이 불변 클래스는 타원 곡선 (EC) 특성 2 유한 필드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="a84b69ebdf731e277af9e21024a839b79991ebcb" translate="yes" xml:space="preserve">
          <source>This immutable class defines an elliptic curve (EC) prime finite field.</source>
          <target state="translated">이 불변 클래스는 타원 곡선 (EC)의 유한 유한 필드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="dabbc4728f069cb22945088bdcb550a300ec334c" translate="yes" xml:space="preserve">
          <source>This immutable class holds the necessary values needed to represent an elliptic curve.</source>
          <target state="translated">이 불변 클래스는 타원 곡선을 나타내는 데 필요한 값을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="a8ed157513f78e33730e48fdffba6efaff2b46f0" translate="yes" xml:space="preserve">
          <source>This immutable class represents a point on an elliptic curve (EC) in affine coordinates.</source>
          <target state="translated">이 불변 클래스는 타원 곡선 (EC)의 점을 아핀 좌표로 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="954ed1a60a524b56d515295be01fbdc30f6b92d8" translate="yes" xml:space="preserve">
          <source>This immutable class represents a point on an elliptic curve (EC) in affine coordinates. Other coordinate systems can extend this class to represent this point in other coordinates.</source>
          <target state="translated">이 불변 클래스는 타원 곡선 (EC)의 점을 아핀 좌표로 나타냅니다. 다른 좌표계는이 점을 다른 좌표로 표시하도록이 클래스를 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5ac83265d8e36d907ddf59daf9dc247f69735de" translate="yes" xml:space="preserve">
          <source>This immutable class specifies an elliptic curve private key with its associated parameters.</source>
          <target state="translated">이 불변 클래스는 타원 곡선의 비공개 키에 관련 파라미터를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="9e10d0594330cf2c2a92031524bef6179d93b693" translate="yes" xml:space="preserve">
          <source>This immutable class specifies an elliptic curve public key with its associated parameters.</source>
          <target state="translated">이 불변 클래스는 타원 곡선 공개 키와 관련 파라미터를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="dd9c7e2fb85b12499f163dd6f852b2f30dcbdaa5" translate="yes" xml:space="preserve">
          <source>This immutable class specifies the set of domain parameters used with elliptic curve cryptography (ECC).</source>
          <target state="translated">이 불변 클래스는 ECC (Elliptic Curve Cryptography)와 함께 사용되는 도메인 매개 변수 세트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="27b6daa87ac4985c97bfa08f19e776d06fbd48c2" translate="yes" xml:space="preserve">
          <source>This immutable class specifies the set of parameters used for generating DSA parameters as specified in &lt;a href=&quot;http://csrc.nist.gov/publications/fips/fips186-3/fips_186-3.pdf&quot;&gt;FIPS 186-3 Digital Signature Standard (DSS)&lt;/a&gt;.</source>
          <target state="translated">이 변경 불가능한 클래스는 &lt;a href=&quot;http://csrc.nist.gov/publications/fips/fips186-3/fips_186-3.pdf&quot;&gt;FIPS 186-3 DSS (Digital Signature Standard)에&lt;/a&gt; 지정된대로 DSA 매개 변수를 생성하는 데 사용되는 매개 변수 세트를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="f9995aea6faaeed6e54c376ef502fc1c66198d5d" translate="yes" xml:space="preserve">
          <source>This immutable class specifies the set of parameters used for generating elliptic curve (EC) domain parameters.</source>
          <target state="translated">이 불변 클래스는 타원 곡선 (EC) 도메인 매개 변수를 생성하는 데 사용되는 매개 변수 세트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="edd5b4ca61a1d977202d903aab5953cc1938a6b1" translate="yes" xml:space="preserve">
          <source>This implementation also restricts all non-exported packages of modules loaded by &lt;a href=&quot;classloader#getPlatformClassLoader()&quot;&gt;the platform class loader&lt;/a&gt; or its ancestors. A &quot;non-exported package&quot; refers to a package that is not exported to all modules. Specifically, it refers to a package that either is not exported at all by its containing module or is exported in a qualified fashion by its containing module.</source>
          <target state="translated">이 구현은 또한 &lt;a href=&quot;classloader#getPlatformClassLoader()&quot;&gt;플랫폼 클래스 로더&lt;/a&gt; 또는 그 조상이 로드 한 모듈의 내 보내지 않은 모든 패키지를 제한합니다 . &quot;내 보내지 않은 패키지&quot;는 모든 모듈로 내보내지지 않는 패키지를 의미합니다. 특히, 포함 모듈에 의해 전혀 내보내지지 않거나 포함 모듈에 의해 정규화 된 방식으로 내보내지는 패키지를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="cd8e3177083b54f6892c82a0ba48471362475604" translate="yes" xml:space="preserve">
          <source>This implementation always returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 구현은 항상 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="57e2550c1e9e30d147e41621b243c81e0a0e1bf7" translate="yes" xml:space="preserve">
          <source>This implementation always throws &lt;a href=&quot;../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;.</source>
          <target state="translated">이 구현은 항상 &lt;a href=&quot;../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;UnsupportedOperationException을 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="27da8c151fc11ff1baee7fb3a43979a33f457d97" translate="yes" xml:space="preserve">
          <source>This implementation always throws &lt;a href=&quot;../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">이 구현은 항상 &lt;a href=&quot;../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;UnsupportedOperationException을 발생&lt;/a&gt; 시킵니다. 하위 클래스는 &lt;a href=&quot;fileobject&quot;&gt; &lt;code&gt;FileObject&lt;/code&gt; &lt;/a&gt; 의 계약 이 준수 되는 한이 동작을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e126ddd21dd42d52e62fe02ebc7ded0cb46f7bef" translate="yes" xml:space="preserve">
          <source>This implementation always throws &lt;a href=&quot;../../java/lang/unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">이 구현은 항상 &lt;a href=&quot;../../java/lang/unsupportedoperationexception&quot;&gt;UnsupportedOperationException을 발생&lt;/a&gt; 시킵니다. &lt;a href=&quot;fileobject&quot;&gt; &lt;code&gt;FileObject&lt;/code&gt; &lt;/a&gt; 의 계약을 준수 하는 한 서브 클래스는이 동작을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="25b71dc95c94433a4e683b0cb0bc80e61af1d098" translate="yes" xml:space="preserve">
          <source>This implementation always throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">이 구현은 항상 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="e1ff1369125c42b47d2865f2e2d7411c3ac2cb40" translate="yes" xml:space="preserve">
          <source>This implementation applies the replacer function to this matcher, which is an instance of &lt;code&gt;MatchResult&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;MatchResult&lt;/code&gt; 의 인스턴스 인이 matcher에 replacer 함수를 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="5ed82d5c8cf8bf7d06b7f3a3926143fc19e896f4" translate="yes" xml:space="preserve">
          <source>This implementation assumes that the ConcurrentMap cannot contain null values and &lt;code&gt;get()&lt;/code&gt; returning null unambiguously means the key is absent. Implementations which support null values &lt;strong&gt;must&lt;/strong&gt; override this default implementation.</source>
          <target state="translated">이 구현에서는 ConcurrentMap에 null 값을 포함 할 수 없으며 &lt;code&gt;get()&lt;/code&gt; null을 명확하게 반환하면 키가 없음을 의미합니다. 널값을 지원하는 구현 은이 기본 구현을 대체 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="2b98347a39b62875534d5cf215d1b85e09eac19e" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;a href=&quot;#getToolTipText(javax.swing.text.JTextComponent,java.awt.Point)&quot;&gt;&lt;code&gt;getToolTipText(t, new Point((int) pt.getX(), (int) pt.getY())))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;#getToolTipText(javax.swing.text.JTextComponent,java.awt.Point)&quot;&gt; &lt;code&gt;getToolTipText(t, new Point((int) pt.getX(), (int) pt.getY())))&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="6130755b1da03f4813bd5cc4765e4be822c65b52" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;a href=&quot;#modelToView(javax.swing.text.JTextComponent,int,javax.swing.text.Position.Bias)&quot;&gt;&lt;code&gt;modelToView(t, pos, bias)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;#modelToView(javax.swing.text.JTextComponent,int,javax.swing.text.Position.Bias)&quot;&gt; &lt;code&gt;modelToView(t, pos, bias)&lt;/code&gt; &lt;/a&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="a35af2659808137c74590c4b2088c1ce5980533a" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;a href=&quot;#viewToModel(javax.swing.text.JTextComponent,java.awt.Point,javax.swing.text.Position.Bias%5B%5D)&quot;&gt;&lt;code&gt;viewToModel(t, new Point((int) pt.getX(), (int) pt.getY()),
             biasReturn)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;#viewToModel(javax.swing.text.JTextComponent,java.awt.Point,javax.swing.text.Position.Bias%5B%5D)&quot;&gt; &lt;code&gt;viewToModel(t, new Point((int) pt.getX(), (int) pt.getY()), biasReturn)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="cb5167bb49ebe77db454032a85cc61f64b311d33" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;add(size(), e)&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;add(size(), e)&lt;/code&gt; 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="94b159692d013c2b59ae93604d93d607b0cd6225" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;check(cert, java.util.Collections.&amp;lt;String&amp;gt;emptySet())&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;check(cert, java.util.Collections.&amp;lt;String&amp;gt;emptySet())&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="61e8fa715b3cbaa14055f22bec96a5833a6fdbe5" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;, unless the element is a &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; in which case &lt;code&gt;
 visitUnknown&lt;/code&gt; is called.</source>
          <target state="translated">이 구현은 &lt;code&gt; visitUnknown&lt;/code&gt; 이 호출 되는 경우 요소가 &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; 이 아니면 &lt;code&gt;defaultAction&lt;/code&gt; 을 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="c05815dc8f7306515f69c1adc7ce0cc25bbf5c3c" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;defaultAction&lt;/code&gt; 을 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="b3d54320f1e3b11ca412bbc3544077f32896988e" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;. .</source>
          <target state="translated">이 구현은 &lt;code&gt;defaultAction&lt;/code&gt; 을 호출 합니다 . .</target>
        </trans-unit>
        <trans-unit id="41d9407fbd311719e99aa08295ae0c0a3a96c926" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;entrySet().clear()&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;entrySet().clear()&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="ef9c12c2a860dbd4a90e862c86305a8201e3e318" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;getValue(index).toString()&lt;/code&gt; after checking for &lt;code&gt;null&lt;/code&gt;. Subclasses that provide different string conversion should override this method if necessary.</source>
          <target state="translated">이 구현 은 &lt;code&gt;null&lt;/code&gt; 확인 후 &lt;code&gt;getValue(index).toString()&lt;/code&gt; 을 호출합니다 . 다른 문자열 변환을 제공하는 서브 클래스는 필요한 경우이 메서드를 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="906c43a7494e059f45ccf3510b569a8b2860e626" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;removeRange(0, size())&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;removeRange(0, size())&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="8e984a58614fb4498b439e5c556d027e4ffddde1" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;visitUnknown&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;visitUnknown&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="7bd0e3b7dff72e96b830c7e11dc18a9c58f8fd88" translate="yes" xml:space="preserve">
          <source>This implementation calls a recursive helper method that locks this node, invokes flushSpi() on it, unlocks this node, and recursively invokes this method on each &quot;cached child.&quot; A cached child is a child of this node that has been created in this VM and not subsequently removed. In effect, this method does a depth first traversal of the &quot;cached subtree&quot; rooted at this node, calling flushSpi() on each node in the subTree while only that node is locked. Note that flushSpi() is invoked top-down.</source>
          <target state="translated">이 구현은이 노드를 잠그고 flushSpi ()를 호출하고이 노드를 잠금 해제하며 각 &quot;캐시 된 자식&quot;에서이 메소드를 재귀 적으로 호출하는 재귀 도우미 메소드를 호출합니다. 캐시 된 자식은이 VM에서 만들어지고 이후에 제거되지 않는이 노드의 자식입니다. 실제로,이 메소드는이 노드에서 루트로 지정된 &quot;캐시 된 서브 트리&quot;의 깊이 우선 순회를 수행하여 해당 노드 만 잠겨있는 동안 subTree의 각 노드에서 flushSpi ()를 호출합니다. flushSpi ()는 하향식으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="395ed27cbaba77f3b446647b87a2274cc8702b44" translate="yes" xml:space="preserve">
          <source>This implementation calls a recursive helper method that locks this node, invokes syncSpi() on it, unlocks this node, and recursively invokes this method on each &quot;cached child.&quot; A cached child is a child of this node that has been created in this VM and not subsequently removed. In effect, this method does a depth first traversal of the &quot;cached subtree&quot; rooted at this node, calling syncSpi() on each node in the subTree while only that node is locked. Note that syncSpi() is invoked top-down.</source>
          <target state="translated">이 구현은이 노드를 잠그고 syncSpi ()를 호출하고이 노드를 잠금 해제하며 각 &quot;캐시 된 하위&quot;에서이 메소드를 재귀 적으로 호출하는 재귀 도우미 메소드를 호출합니다. 캐시 된 자식은이 VM에서 만들어지고 이후에 제거되지 않는이 노드의 자식입니다. 실제로,이 메소드는이 노드에서 루트로 지정된 &quot;캐시 된 서브 트리&quot;의 깊이 우선 순회를 수행하여 해당 노드 만 잠겨있는 동안 subTree의 각 노드에서 syncSpi ()를 호출합니다. syncSpi ()는 하향식으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d9b2d652c632266e8fe6fae600b1967a3abd496d" translate="yes" xml:space="preserve">
          <source>This implementation can be made to throw runtime exceptions in the face of concurrent modification, as described in the specification for the (protected) &lt;a href=&quot;#modCount&quot;&gt;&lt;code&gt;modCount&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">이 구현은 (보호 된) &lt;a href=&quot;#modCount&quot;&gt; &lt;code&gt;modCount&lt;/code&gt; &lt;/a&gt; 필드 에 대한 사양에 설명 된대로 동시 수정시 런타임 예외를 throw하도록 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1447f53bc4d6cc8572c1a5b72f050425e9a816cc" translate="yes" xml:space="preserve">
          <source>This implementation can be made to throw runtime exceptions in the face of concurrent modification, as described in the specification for the (protected) &lt;a href=&quot;abstractlist#modCount&quot;&gt;&lt;code&gt;modCount&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">이 구현은 (보호 된) &lt;a href=&quot;abstractlist#modCount&quot;&gt; &lt;code&gt;modCount&lt;/code&gt; &lt;/a&gt; 필드 의 스펙에 설명 된대로 동시 수정시 런타임 예외를 발생 시키도록 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="13f01409841327173ad8f9b1099ad06740193081" translate="yes" xml:space="preserve">
          <source>This implementation checks that the key and value are legal, obtains this preference node's lock, checks that the node has not been removed, invokes &lt;a href=&quot;#putSpi(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;putSpi(String,String)&lt;/code&gt;&lt;/a&gt;, and if there are any preference change listeners, enqueues a notification event for processing by the event dispatch thread.</source>
          <target state="translated">이 구현은 키와 값이 합법적인지 확인하고,이 기본 설정 노드의 잠금을 가져오고, 노드가 제거되지 않았는지 확인하고, &lt;a href=&quot;#putSpi(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;putSpi(String,String)&lt;/code&gt; &lt;/a&gt; 호출 하고, 기본 설정 변경 리스너가있는 경우 처리를 위해 알림 이벤트를 대기열에 추가합니다. 이벤트 디스패치 스레드</target>
        </trans-unit>
        <trans-unit id="7195ba4a4883e406437052bca287773f64cc1ce7" translate="yes" xml:space="preserve">
          <source>This implementation checks that the key and value are legal, obtains this preference node's lock, checks that the node has not been removed, invokes &lt;a href=&quot;abstractpreferences#putSpi-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;putSpi(String,String)&lt;/code&gt;&lt;/a&gt;, and if there are any preference change listeners, enqueues a notification event for processing by the event dispatch thread.</source>
          <target state="translated">이 구현은 키와 값이 유효 &lt;a href=&quot;abstractpreferences#putSpi-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;putSpi(String,String)&lt;/code&gt; &lt;/a&gt; 점검하고,이 환경 설정 노드의 잠금을 획득하고, 노드가 제거되지 않았는지 점검하고, putSpi (String, String)을 호출 하며, 환경 설정 변경 리스너가있는 경우, 처리 할 알림 이벤트를 큐에 넣 습니다. 이벤트 디스패치 스레드</target>
        </trans-unit>
        <trans-unit id="4a0560d21e72bae105961d867a635c5d3e11a304" translate="yes" xml:space="preserve">
          <source>This implementation checks the type and calls &lt;a href=&quot;#compareTo(java.time.chrono.Chronology)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.Chronology)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은 유형을 확인하고 &lt;a href=&quot;#compareTo(java.time.chrono.Chronology)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.Chronology)&lt;/code&gt; &lt;/a&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="eed8c69aa0ccf4f8526685d4df2e7dc1b5306845" translate="yes" xml:space="preserve">
          <source>This implementation checks the type and calls &lt;a href=&quot;abstractchronology#compareTo-java.time.chrono.Chronology-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.Chronology)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은 유형을 확인하고 &lt;a href=&quot;abstractchronology#compareTo-java.time.chrono.Chronology-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.Chronology)&lt;/code&gt; &lt;/a&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="cb2711385fd829bb61fff0e521ffb710303701ff" translate="yes" xml:space="preserve">
          <source>This implementation checks to see that this node is the root; if so, it throws an appropriate exception. Then, it locks this node's parent, and calls a recursive helper method that traverses the subtree rooted at this node. The recursive method locks the node on which it was called, checks that it has not already been removed, and then ensures that all of its children are cached: The &lt;a href=&quot;#childrenNamesSpi()&quot;&gt;&lt;code&gt;childrenNamesSpi()&lt;/code&gt;&lt;/a&gt; method is invoked and each returned child name is checked for containment in the child-cache. If a child is not already cached, the &lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; method is invoked to create a &lt;code&gt;Preferences&lt;/code&gt; instance for it, and this instance is put into the child-cache. Then the helper method calls itself recursively on each node contained in its child-cache. Next, it invokes &lt;a href=&quot;#removeNodeSpi()&quot;&gt;&lt;code&gt;removeNodeSpi()&lt;/code&gt;&lt;/a&gt;, marks itself as removed, and removes itself from its parent's child-cache. Finally, if there are any node change listeners, it enqueues a notification event for processing by the event dispatch thread.</source>
          <target state="translated">이 구현은이 노드가 루트인지 확인합니다. 그렇다면 적절한 예외가 발생합니다. 그런 다음이 노드의 부모를 잠그고이 노드에 뿌리를 둔 하위 트리를 순회하는 재귀 도우미 메서드를 호출합니다. 재귀 메서드는 호출 된 노드를 잠그고 아직 제거되지 않았는지 확인한 다음 모든 자식이 캐시되었는지 확인합니다. &lt;a href=&quot;#childrenNamesSpi()&quot;&gt; &lt;code&gt;childrenNamesSpi()&lt;/code&gt; &lt;/a&gt; 메서드가 호출되고 반환 된 각 자식 이름이 자식 캐시. 자식이 아직 캐시되지 않은 경우 &lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt; 메서드가 호출되어 이에 대한 &lt;code&gt;Preferences&lt;/code&gt; 인스턴스를 만들고이 인스턴스는 자식 캐시에 저장됩니다. 그런 다음 도우미 메서드는 자식 캐시에 포함 된 각 노드에서 자신을 재귀 적으로 호출합니다. 다음으로&lt;a href=&quot;#removeNodeSpi()&quot;&gt; &lt;code&gt;removeNodeSpi()&lt;/code&gt; &lt;/a&gt; 는 자신을 제거됨으로 표시하고 부모의 자식 캐시에서 자신을 제거합니다. 마지막으로 노드 변경 리스너가 있으면 이벤트 디스패치 스레드에서 처리 할 알림 이벤트를 대기열에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="602eb434bf3fb990f0357c26df38af1fd1ba2aeb" translate="yes" xml:space="preserve">
          <source>This implementation checks to see that this node is the root; if so, it throws an appropriate exception. Then, it locks this node's parent, and calls a recursive helper method that traverses the subtree rooted at this node. The recursive method locks the node on which it was called, checks that it has not already been removed, and then ensures that all of its children are cached: The &lt;a href=&quot;abstractpreferences#childrenNamesSpi--&quot;&gt;&lt;code&gt;childrenNamesSpi()&lt;/code&gt;&lt;/a&gt; method is invoked and each returned child name is checked for containment in the child-cache. If a child is not already cached, the &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; method is invoked to create a &lt;code&gt;Preferences&lt;/code&gt; instance for it, and this instance is put into the child-cache. Then the helper method calls itself recursively on each node contained in its child-cache. Next, it invokes &lt;a href=&quot;abstractpreferences#removeNodeSpi--&quot;&gt;&lt;code&gt;removeNodeSpi()&lt;/code&gt;&lt;/a&gt;, marks itself as removed, and removes itself from its parent's child-cache. Finally, if there are any node change listeners, it enqueues a notification event for processing by the event dispatch thread.</source>
          <target state="translated">이 구현은이 노드가 루트인지 확인합니다. 그렇다면 적절한 예외가 발생합니다. 그런 다음이 노드의 부모를 잠그고이 노드를 기반으로하는 하위 트리를 순회하는 재귀 도우미 메서드를 호출합니다. 재귀 적 메서드는 호출 된 노드를 잠그고 아직 제거되지 않았는지 확인한 다음 모든 자식이 캐시되었는지 확인합니다. &lt;a href=&quot;abstractpreferences#childrenNamesSpi--&quot;&gt; &lt;code&gt;childrenNamesSpi()&lt;/code&gt; &lt;/a&gt; 메서드가 호출되고 반환 된 자식 이름 각각에 포함되어 있는지 확인합니다. 자식 캐시. 자식이 아직 캐시되지 않은 경우 &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt; 메서드가 호출되어 &lt;code&gt;Preferences&lt;/code&gt; 인스턴스를 만들고이 인스턴스는 자식 캐시에 저장됩니다. 그런 다음 도우미 메서드는 자식 캐시에 포함 된 각 노드에서 재귀 적으로 호출됩니다. 다음으로&lt;a href=&quot;abstractpreferences#removeNodeSpi--&quot;&gt; &lt;code&gt;removeNodeSpi()&lt;/code&gt; &lt;/a&gt; 는 자신을 제거 된 것으로 표시하고 부모의 자식 캐시에서 자신을 제거합니다. 마지막으로, 노드 변경 리스너가있는 경우 이벤트 디스패치 스레드에서 처리 할 알림 이벤트를 큐에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="ffa89cfc012f2be93ce593f40e6c0d43fd79bfa0" translate="yes" xml:space="preserve">
          <source>This implementation compares the chronology ID. Subclasses must compare any additional state that they store.</source>
          <target state="translated">이 구현은 연대기 ID를 비교합니다. 서브 클래스는 그들이 저장 한 추가 상태를 비교해야합니다.</target>
        </trans-unit>
        <trans-unit id="aa3e76cc76e5c6f9a3ca5d556531d6e2f1f755be" translate="yes" xml:space="preserve">
          <source>This implementation compares the path of its URI to the given simple name.</source>
          <target state="translated">이 구현은 URI의 경로를 주어진 단순 이름과 비교합니다.</target>
        </trans-unit>
        <trans-unit id="4a1c0d8fbf39ac35745ab5bc62ac9c562a8ddb05" translate="yes" xml:space="preserve">
          <source>This implementation compares the path of its URI to the given simple name. This method returns true if the given kind is equal to the kind of this object, and if the path is equal to &lt;code&gt;simpleName + kind.extension&lt;/code&gt; or if it ends with &lt;code&gt;
 &quot;/&quot; + simpleName + kind.extension&lt;/code&gt;.</source>
          <target state="translated">이 구현은 URI의 경로를 주어진 단순 이름과 비교합니다. 이 메소드는 주어진 종류가이 객체의 종류와 같고 경로가 &lt;code&gt;simpleName + kind.extension&lt;/code&gt; 과 같 거나 &lt;code&gt; &quot;/&quot; + simpleName + kind.extension&lt;/code&gt; 끝나는 경우 true를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="2dff2901ffa7a3cc0600d247fee41c0159f4d1bf" translate="yes" xml:space="preserve">
          <source>This implementation compares the path of its URI to the given simple name. This method returns true if the given kind is equal to the kind of this object, and if the path is equal to &lt;code&gt;simpleName + kind.extension&lt;/code&gt; or if it ends with &lt;code&gt;&quot;/&quot; + simpleName + kind.extension&lt;/code&gt;.</source>
          <target state="translated">이 구현은 URI의 경로를 주어진 단순 이름과 비교합니다. 주어진 종류가이 객체의 종류와 같고 경로가 &lt;code&gt;simpleName + kind.extension&lt;/code&gt; 과 같 거나 &lt;code&gt;&quot;/&quot; + simpleName + kind.extension&lt;/code&gt; 끝나는 경우이 메서드는 true를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8fa1d97f0337358975855da8e4a142717796c0ab" translate="yes" xml:space="preserve">
          <source>This implementation compares this node's root node (which is stored in a private field) with the value returned by &lt;a href=&quot;preferences#userRoot()&quot;&gt;&lt;code&gt;Preferences.userRoot()&lt;/code&gt;&lt;/a&gt;. If the two object references are identical, this method returns true.</source>
          <target state="translated">이 구현은이 노드의 루트 노드 (개인 필드에 저장 됨)를 &lt;a href=&quot;preferences#userRoot()&quot;&gt; &lt;code&gt;Preferences.userRoot()&lt;/code&gt; &lt;/a&gt; 의해 반환 된 값과 비교합니다 . 두 개체 참조가 동일한 경우이 메서드는 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3d9c4ed88638eb0d9d5435ccbd0a84c7e81cad38" translate="yes" xml:space="preserve">
          <source>This implementation compares this node's root node (which is stored in a private field) with the value returned by &lt;a href=&quot;preferences#userRoot--&quot;&gt;&lt;code&gt;Preferences.userRoot()&lt;/code&gt;&lt;/a&gt;. If the two object references are identical, this method returns true.</source>
          <target state="translated">이 구현은이 노드의 루트 노드 (비공개 필드에 저장 됨)를 &lt;a href=&quot;preferences#userRoot--&quot;&gt; &lt;code&gt;Preferences.userRoot()&lt;/code&gt; &lt;/a&gt; 의해 반환 된 값과 비교합니다 . 두 객체 참조가 동일하면이 메서드는 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="61cd00c9ddc1fdf8f52da17801081a2d14bf5f00" translate="yes" xml:space="preserve">
          <source>This implementation defers to the &lt;a href=&quot;list#sort(java.util.Comparator)&quot;&gt;&lt;code&gt;List.sort(Comparator)&lt;/code&gt;&lt;/a&gt; method using the specified list and a &lt;code&gt;null&lt;/code&gt; comparator.</source>
          <target state="translated">이 구현 은 지정된 목록과 &lt;code&gt;null&lt;/code&gt; 비교기를 사용 하는 &lt;a href=&quot;list#sort(java.util.Comparator)&quot;&gt; &lt;code&gt;List.sort(Comparator)&lt;/code&gt; &lt;/a&gt; 메서드를 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="23b9b25bb6d91ae2f292c8ec5b603265b835263e" translate="yes" xml:space="preserve">
          <source>This implementation defers to the &lt;a href=&quot;list#sort(java.util.Comparator)&quot;&gt;&lt;code&gt;List.sort(Comparator)&lt;/code&gt;&lt;/a&gt; method using the specified list and comparator.</source>
          <target state="translated">이 구현 은 지정된 목록과 비교기를 사용하여 &lt;a href=&quot;list#sort(java.util.Comparator)&quot;&gt; &lt;code&gt;List.sort(Comparator)&lt;/code&gt; &lt;/a&gt; 메서드를 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="ebb6c0d9348bd6053d6cb41ee3c542ce1d1a9132" translate="yes" xml:space="preserve">
          <source>This implementation defers to the &lt;a href=&quot;list#sort-java.util.Comparator-&quot;&gt;&lt;code&gt;List.sort(Comparator)&lt;/code&gt;&lt;/a&gt; method using the specified list and a &lt;code&gt;null&lt;/code&gt; comparator.</source>
          <target state="translated">이 구현 은 지정된리스트와 &lt;code&gt;null&lt;/code&gt; 비교 자를 사용해 &lt;a href=&quot;list#sort-java.util.Comparator-&quot;&gt; &lt;code&gt;List.sort(Comparator)&lt;/code&gt; &lt;/a&gt; 메소드를 연기합니다 .</target>
        </trans-unit>
        <trans-unit id="e9ff666de14e4b1a619eab4943f8cdd25f78b5de" translate="yes" xml:space="preserve">
          <source>This implementation defers to the &lt;a href=&quot;list#sort-java.util.Comparator-&quot;&gt;&lt;code&gt;List.sort(Comparator)&lt;/code&gt;&lt;/a&gt; method using the specified list and comparator.</source>
          <target state="translated">이 구현 은 지정된리스트와 비교 자를 사용해 &lt;a href=&quot;list#sort-java.util.Comparator-&quot;&gt; &lt;code&gt;List.sort(Comparator)&lt;/code&gt; &lt;/a&gt; 메소드를 연기합니다 .</target>
        </trans-unit>
        <trans-unit id="205001bb53a899373d25ef5424e68cf61f5e15cf" translate="yes" xml:space="preserve">
          <source>This implementation determines which is the smaller of this set and the specified collection, by invoking the &lt;code&gt;size&lt;/code&gt; method on each. If this set has fewer elements, then the implementation iterates over this set, checking each element returned by the iterator in turn to see if it is contained in the specified collection. If it is so contained, it is removed from this set with the iterator's &lt;code&gt;remove&lt;/code&gt; method. If the specified collection has fewer elements, then the implementation iterates over the specified collection, removing from this set each element returned by the iterator, using this set's &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">이 구현은 각각에 대해 &lt;code&gt;size&lt;/code&gt; 메소드를 호출하여이 세트와 지정된 콜렉션 중 작은 것을 판별 합니다. 이 세트에 요소가 적은 경우, 구현은이 세트에 대해 반복되어, 반복자에 의해 돌려 주어진 각 요소가 차례로 지정된 컬렉션에 포함되어 있는지 확인합니다. 포함되어 있으면 반복자의 &lt;code&gt;remove&lt;/code&gt; 메소드 를 사용하여이 세트에서 제거 됩니다. 지정된 컬렉션에 요소가 적은 경우, 구현은 지정된 컬렉션을 반복하고,이 세트의 &lt;code&gt;remove&lt;/code&gt; 메소드를 사용해, 반복자에 의해 돌려 주어진 각 요소를이 세트로부터 삭제 합니다.</target>
        </trans-unit>
        <trans-unit id="e2bf20bdb795b96822cbe7527d55781c9c9a54fe" translate="yes" xml:space="preserve">
          <source>This implementation dispatches to the visit method for the specific &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; of executable, &lt;code&gt;CONSTRUCTOR&lt;/code&gt;, &lt;code&gt;INSTANCE_INIT&lt;/code&gt;, &lt;code&gt;METHOD&lt;/code&gt;, or &lt;code&gt;STATIC_INIT&lt;/code&gt;.</source>
          <target state="translated">이 구현은 특정 &lt;a href=&quot;../element/elementkind&quot;&gt;종류&lt;/a&gt; 의 실행 파일 &lt;code&gt;CONSTRUCTOR&lt;/code&gt; , &lt;code&gt;INSTANCE_INIT&lt;/code&gt; , &lt;code&gt;METHOD&lt;/code&gt; 또는 &lt;code&gt;STATIC_INIT&lt;/code&gt; 에 대한 방문 메소드로 디스패치합니다 .</target>
        </trans-unit>
        <trans-unit id="2fc212524fbd583d6d8f0378eb50b6920400553e" translate="yes" xml:space="preserve">
          <source>This implementation dispatches to the visit method for the specific &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; of type, &lt;code&gt;
 ANNOTATION_TYPE&lt;/code&gt;, &lt;code&gt;CLASS&lt;/code&gt;, &lt;code&gt;ENUM&lt;/code&gt;, or &lt;code&gt;
 INTERFACE&lt;/code&gt;.</source>
          <target state="translated">이 구현은 특정 &lt;a href=&quot;../element/elementkind&quot;&gt;유형&lt;/a&gt; 의 &lt;code&gt; ANNOTATION_TYPE&lt;/code&gt; , &lt;code&gt;CLASS&lt;/code&gt; , &lt;code&gt;ENUM&lt;/code&gt; 또는 &lt;code&gt; INTERFACE&lt;/code&gt; 에 대한 방문 메소드로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="2954ead39bfa955ed6cd7fe7bac57a04adde35b6" translate="yes" xml:space="preserve">
          <source>This implementation dispatches to the visit method for the specific &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; of variable, &lt;code&gt;
 ENUM_CONSTANT&lt;/code&gt;, &lt;code&gt;EXCEPTION_PARAMETER&lt;/code&gt;, &lt;code&gt;FIELD&lt;/code&gt;, &lt;code&gt;LOCAL_VARIABLE&lt;/code&gt;, &lt;code&gt;PARAMETER&lt;/code&gt;, or &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt;.</source>
          <target state="translated">이 구현은 특정 &lt;a href=&quot;../element/elementkind&quot;&gt;종류&lt;/a&gt; 의 변수 &lt;code&gt; ENUM_CONSTANT&lt;/code&gt; , &lt;code&gt;EXCEPTION_PARAMETER&lt;/code&gt; , &lt;code&gt;FIELD&lt;/code&gt; , &lt;code&gt;LOCAL_VARIABLE&lt;/code&gt; , &lt;code&gt;PARAMETER&lt;/code&gt; 또는 &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; 에 대한 방문 메소드로 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="ceb41544d5360cc844165bf538a7eaa9a99bfe3b" translate="yes" xml:space="preserve">
          <source>This implementation dispatches to the visit method for the specific &lt;a href=&quot;../type/typekind&quot;&gt;kind&lt;/a&gt; of primitive type: &lt;code&gt;BOOLEAN&lt;/code&gt;, &lt;code&gt;BYTE&lt;/code&gt;, etc.</source>
          <target state="translated">이 구현은 특정 &lt;a href=&quot;../type/typekind&quot;&gt;종류&lt;/a&gt; 의 기본 유형 ( &lt;code&gt;BOOLEAN&lt;/code&gt; , &lt;code&gt;BYTE&lt;/code&gt; 등)에 대한 방문 메소드로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="61597d1f09503416c542ce089a5ab90d23ad5a1f" translate="yes" xml:space="preserve">
          <source>This implementation dispatches to the visit method for the specific &lt;a href=&quot;../type/typekind&quot;&gt;kind&lt;/a&gt; of pseudo-type: &lt;code&gt;VOID&lt;/code&gt;, &lt;code&gt;PACKAGE&lt;/code&gt;, &lt;code&gt;MODULE&lt;/code&gt;, or &lt;code&gt;NONE&lt;/code&gt;.</source>
          <target state="translated">이 구현은 특정 &lt;a href=&quot;../type/typekind&quot;&gt;종류&lt;/a&gt; 의 의사 유형 ( &lt;code&gt;VOID&lt;/code&gt; , &lt;code&gt;PACKAGE&lt;/code&gt; , &lt;code&gt;MODULE&lt;/code&gt; 또는 &lt;code&gt;NONE&lt;/code&gt; ) 에 대한 방문 메소드로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="eeb61408257a619dca9b14cfa63c43bf134acb12" translate="yes" xml:space="preserve">
          <source>This implementation does not check for overflow of the sum.</source>
          <target state="translated">이 구현은 합계의 오버플로를 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c9fd6e5043bb41f7cb9997c70fcde25ad07f5357" translate="yes" xml:space="preserve">
          <source>This implementation does not support interoperating with a directory or lookup service. Thus, conforming to the specification, no checking is done on the</source>
          <target state="translated">이 구현은 디렉토리 또는 조회 서비스와의 상호 운용을 지원하지 않습니다. 따라서 사양을 준수하면 검사가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="40026795e46b0f627067283f014c1ac8f2ac2aaa" translate="yes" xml:space="preserve">
          <source>This implementation does not support the schema methods &lt;code&gt;getAttributeDefinition()&lt;/code&gt; and &lt;code&gt;getAttributeSyntaxDefinition()&lt;/code&gt;. They simply throw &lt;code&gt;OperationNotSupportedException&lt;/code&gt;. Subclasses of &lt;code&gt;BasicAttribute&lt;/code&gt; should override these methods if they support them.</source>
          <target state="translated">이 구현은 스키마 메소드 &lt;code&gt;getAttributeDefinition()&lt;/code&gt; 및 &lt;code&gt;getAttributeSyntaxDefinition()&lt;/code&gt; 지원하지 않습니다 . 단순히 &lt;code&gt;OperationNotSupportedException&lt;/code&gt; 을 던집니다 . &lt;code&gt;BasicAttribute&lt;/code&gt; 의 서브 클래스가 이러한 메소드를 지원하는 경우이 메소드를 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="469b873e4ba8e5f9f563442dfaa80f0f0d594c19" translate="yes" xml:space="preserve">
          <source>This implementation does nothing, because the &lt;code&gt;rollover&lt;/code&gt; property of the &lt;code&gt;JToolBar&lt;/code&gt; class is not used in the Synth Look and Feel.</source>
          <target state="translated">&lt;code&gt;JToolBar&lt;/code&gt; 클래스 의 &lt;code&gt;rollover&lt;/code&gt; 속성이 Synth Look and Feel에 사용되지 않기 때문에이 구현은 아무 작업도 수행하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="74f5b9930f8d39a44fb6d2c696a3206ca225015d" translate="yes" xml:space="preserve">
          <source>This implementation does nothing, but may be customized in subclasses. Note: To properly nest multiple overridings, subclasses should generally invoke &lt;code&gt;super.afterExecute&lt;/code&gt; at the beginning of this method.</source>
          <target state="translated">이 구현은 아무것도하지 않지만 서브 클래스에서 사용자 정의 될 수 있습니다. 주 : 복수의 오버라이드 (override)를 올바르게 중첩하려면 (자), 서브 클래스는 일반적 으로이 메소드의 &lt;code&gt;super.afterExecute&lt;/code&gt; 에 super.afterExecute 를 호출 합니다</target>
        </trans-unit>
        <trans-unit id="5a5be3002e9afcc485a4a0ec495a2006fe1daa59" translate="yes" xml:space="preserve">
          <source>This implementation does nothing, but may be customized in subclasses. Note: To properly nest multiple overridings, subclasses should generally invoke &lt;code&gt;super.beforeExecute&lt;/code&gt; at the end of this method.</source>
          <target state="translated">이 구현은 아무것도하지 않지만 서브 클래스에서 사용자 정의 될 수 있습니다. 주 : 복수의 오버라이드 (override)를 올바르게 중첩하려면 (자), 서브 클래스는 일반적 으로이 메소드의 마지막에 &lt;code&gt;super.beforeExecute&lt;/code&gt; 를 호출 할 필요 가 있습니다</target>
        </trans-unit>
        <trans-unit id="0cdad3ddbc6d1f8a1f8215651c81a109ec8fdc6e" translate="yes" xml:space="preserve">
          <source>This implementation does nothing.</source>
          <target state="translated">이 구현은 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="914ee27b660f82c8263237e486e758dc81078d60" translate="yes" xml:space="preserve">
          <source>This implementation does nothing. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">이 구현은 아무것도하지 않습니다. &lt;a href=&quot;fileobject&quot;&gt; &lt;code&gt;FileObject&lt;/code&gt; &lt;/a&gt; 의 계약을 준수 하는 한 서브 클래스는이 동작을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e23336333301902ba5713d3ce2c4a2623396735f" translate="yes" xml:space="preserve">
          <source>This implementation does nothing; it is provided for subclasses that wish to customize the defaults table.</source>
          <target state="translated">이 구현은 아무것도하지 않습니다. 기본 테이블을 사용자 정의하려는 서브 클래스를 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="7974b71b41c6092860c4d0735a7af85054b636e7" translate="yes" xml:space="preserve">
          <source>This implementation employs an efficient &lt;em&gt;non-blocking&lt;/em&gt; algorithm based on one described in &lt;a href=&quot;http://www.cs.rochester.edu/u/michael/PODC96.html&quot;&gt; Simple, Fast, and Practical Non-Blocking and Blocking Concurrent Queue Algorithms&lt;/a&gt; by Maged M. Michael and Michael L. Scott.</source>
          <target state="translated">이 구현은 Maged M. Michael과 Michael L. Scott의 &lt;a href=&quot;http://www.cs.rochester.edu/u/michael/PODC96.html&quot;&gt;Simple, Fast 및 Practical Non-Blocking and Blocking Concurrent Queue 알고리즘&lt;/a&gt; 에 설명 된 알고리즘을 기반으로 하는 효율적인 &lt;em&gt;비 차단&lt;/em&gt; 알고리즘을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="23c46ea5f05c8e71d3ad1c89541dedb094899a4c" translate="yes" xml:space="preserve">
          <source>This implementation employs an efficient &lt;em&gt;non-blocking&lt;/em&gt; algorithm based on one described in &lt;a href=&quot;http://www.cs.rochester.edu/~scott/papers/1996_PODC_queues.pdf&quot;&gt; Simple, Fast, and Practical Non-Blocking and Blocking Concurrent Queue Algorithms&lt;/a&gt; by Maged M. Michael and Michael L. Scott.</source>
          <target state="translated">이 구현은 Maged M. Michael과 Michael L. Scott의 &lt;a href=&quot;http://www.cs.rochester.edu/~scott/papers/1996_PODC_queues.pdf&quot;&gt;Simple, Fast, Practical Non-Blocking and Blocking Concurrent Queue Algorithms&lt;/a&gt; 에 설명 된 것을 기반으로 효율적인 &lt;em&gt;비 차단&lt;/em&gt; 알고리즘을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="7a80f8f2b593867f4acb9f2038a87549d837d178" translate="yes" xml:space="preserve">
          <source>This implementation enforces a more restrictive OID syntax than defined in RFC 1779 and 2253. It uses the more correct syntax defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc4512.txt&quot;&gt;RFC 4512&lt;/a&gt;, which specifies that OIDs contain at least 2 digits:</source>
          <target state="translated">이 구현은 RFC 1779 및 2253에 정의 된 것보다 더 제한적인 OID 구문을 시행합니다. &lt;a href=&quot;http://www.ietf.org/rfc/rfc4512.txt&quot;&gt;RFC 4512에&lt;/a&gt; 정의 된보다 정확한 구문을 사용합니다.이 구문 은 OID에 2 자리 이상이 포함되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d6966223b9dcda646aac55ba39cad946109021c6" translate="yes" xml:space="preserve">
          <source>This implementation executes &lt;a href=&quot;#waitFor()&quot;&gt;&lt;code&gt;waitFor()&lt;/code&gt;&lt;/a&gt; in a separate thread repeatedly until it returns successfully. If the execution of &lt;code&gt;waitFor&lt;/code&gt; is interrupted, the thread's interrupt status is preserved.</source>
          <target state="translated">이 구현은 성공적으로 반환 될 때까지 별도의 스레드에서 &lt;a href=&quot;#waitFor()&quot;&gt; &lt;code&gt;waitFor()&lt;/code&gt; &lt;/a&gt; 를 반복적으로 실행합니다. &lt;code&gt;waitFor&lt;/code&gt; 실행 이 중단되면 스레드의 인터럽트 상태가 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="ac4718c474546a9a1583f91e163464930446d8bf" translate="yes" xml:space="preserve">
          <source>This implementation expects two sources of asynchronous notification. The timer thread fires asynchronously, and causes the caret to simply repaint the most recent bounding box. The caret also tracks change as the document is modified. Typically this will happen on the event dispatch thread as a result of some mouse or keyboard event. The caret behavior on both synchronous and asynchronous documents updates is controlled by &lt;code&gt;UpdatePolicy&lt;/code&gt; property. The repaint of the new caret location will occur on the event thread in any case, as calls to &lt;code&gt;modelToView&lt;/code&gt; are only safe on the event thread.</source>
          <target state="translated">이 구현에는 두 가지 비동기 알림 소스가 필요합니다. 타이머 스레드는 비동기 적으로 실행되며 캐럿이 가장 최근의 경계 상자를 간단히 다시 그리도록합니다. 캐럿은 문서가 수정 될 때 변경 사항도 추적합니다. 일반적으로 이것은 일부 마우스 또는 키보드 이벤트의 결과로 이벤트 디스패치 스레드에서 발생합니다. 동기 및 비동기 문서 업데이트의 캐럿 동작은 &lt;code&gt;UpdatePolicy&lt;/code&gt; 속성에 의해 제어됩니다 . &lt;code&gt;modelToView&lt;/code&gt; 에 대한 호출 은 이벤트 스레드에서만 안전 하므로 새 캐럿 위치의 다시 그리기는 어떤 경우에도 이벤트 스레드에서 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="332f72d00a6d87d6c03ca2e84e8f72c51bd70f86" translate="yes" xml:space="preserve">
          <source>This implementation extracts the number's value using &lt;a href=&quot;../lang/number#longValue()&quot;&gt;&lt;code&gt;Number.longValue()&lt;/code&gt;&lt;/a&gt; for all integral type values that can be converted to &lt;code&gt;long&lt;/code&gt; without loss of information, including &lt;code&gt;BigInteger&lt;/code&gt; values with a &lt;a href=&quot;../math/biginteger#bitLength()&quot;&gt;&lt;code&gt;bit length&lt;/code&gt;&lt;/a&gt; of less than 64, and &lt;a href=&quot;../lang/number#doubleValue()&quot;&gt;&lt;code&gt;Number.doubleValue()&lt;/code&gt;&lt;/a&gt; for all other types. It then calls &lt;a href=&quot;#format(long,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt;&lt;code&gt;format(long,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#format(double,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt;&lt;code&gt;format(double,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt;&lt;/a&gt;. This may result in loss of magnitude information and precision for &lt;code&gt;BigInteger&lt;/code&gt; and &lt;code&gt;BigDecimal&lt;/code&gt; values.</source>
          <target state="translated">이러한 구현은 다수의 이용 가치 추출 &lt;a href=&quot;../lang/number#longValue()&quot;&gt; &lt;code&gt;Number.longValue()&lt;/code&gt; &lt;/a&gt; 로 변환 될 수있는 모든 일체형 값 &lt;code&gt;long&lt;/code&gt; 를 포함하는 정보의 손실없이, &lt;code&gt;BigInteger&lt;/code&gt; A의 값은 &lt;a href=&quot;../math/biginteger#bitLength()&quot;&gt; &lt;code&gt;bit length&lt;/code&gt; &lt;/a&gt; 미만의 64 및 &lt;a href=&quot;../lang/number#doubleValue()&quot;&gt; &lt;code&gt;Number.doubleValue()&lt;/code&gt; &lt;/a&gt; 다른 유형을 . 그런 다음 &lt;a href=&quot;#format(long,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt; &lt;code&gt;format(long,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#format(double,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt; &lt;code&gt;format(double,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt; &lt;/a&gt; 을 호출 합니다 . 이로 인해 &lt;code&gt;BigInteger&lt;/code&gt; 및 &lt;code&gt;BigDecimal&lt;/code&gt; 값에 대한 크기 정보 및 정밀도가 손실 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="77969f6eaf794b1740a68878035f3a34622d3563" translate="yes" xml:space="preserve">
          <source>This implementation extracts the number's value using &lt;a href=&quot;../lang/number#longValue--&quot;&gt;&lt;code&gt;Number.longValue()&lt;/code&gt;&lt;/a&gt; for all integral type values that can be converted to &lt;code&gt;long&lt;/code&gt; without loss of information, including &lt;code&gt;BigInteger&lt;/code&gt; values with a &lt;a href=&quot;../math/biginteger#bitLength--&quot;&gt;&lt;code&gt;bit length&lt;/code&gt;&lt;/a&gt; of less than 64, and &lt;a href=&quot;../lang/number#doubleValue--&quot;&gt;&lt;code&gt;Number.doubleValue()&lt;/code&gt;&lt;/a&gt; for all other types. It then calls &lt;a href=&quot;numberformat#format-long-java.lang.StringBuffer-java.text.FieldPosition-&quot;&gt;&lt;code&gt;format(long,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;numberformat#format-double-java.lang.StringBuffer-java.text.FieldPosition-&quot;&gt;&lt;code&gt;format(double,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt;&lt;/a&gt;. This may result in loss of magnitude information and precision for &lt;code&gt;BigInteger&lt;/code&gt; and &lt;code&gt;BigDecimal&lt;/code&gt; values.</source>
          <target state="translated">이 구현 은 &lt;a href=&quot;../math/biginteger#bitLength--&quot;&gt; &lt;code&gt;bit length&lt;/code&gt; &lt;/a&gt; 가 64보다 작은 &lt;code&gt;BigInteger&lt;/code&gt; 값 및 다른 모든 유형의 &lt;a href=&quot;../lang/number#doubleValue--&quot;&gt; &lt;code&gt;Number.doubleValue()&lt;/code&gt; &lt;/a&gt; 를 포함하여 정보 손실없이 &lt;code&gt;long&lt;/code&gt; 으로 변환 할 수있는 모든 정수 유형 값에 대해 &lt;a href=&quot;../lang/number#longValue--&quot;&gt; &lt;code&gt;Number.longValue()&lt;/code&gt; &lt;/a&gt; 를 사용하여 숫자 값을 추출합니다. . 그런 다음 &lt;a href=&quot;numberformat#format-long-java.lang.StringBuffer-java.text.FieldPosition-&quot;&gt; &lt;code&gt;format(long,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;numberformat#format-double-java.lang.StringBuffer-java.text.FieldPosition-&quot;&gt; &lt;code&gt;format(double,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt; &lt;/a&gt; 을 호출 합니다 . 이로 인해 &lt;code&gt;BigInteger&lt;/code&gt; 및 &lt;code&gt;BigDecimal&lt;/code&gt; 값에 대한 크기 정보 및 정밀도가 손실 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="06a487a72bad774e9ba467624c797a1c7b0f89e1" translate="yes" xml:space="preserve">
          <source>This implementation first checks if the specified object is this list. If so, it returns &lt;code&gt;true&lt;/code&gt;; if not, it checks if the specified object is a list. If not, it returns &lt;code&gt;false&lt;/code&gt;; if so, it iterates over both lists, comparing corresponding pairs of elements. If any comparison returns &lt;code&gt;false&lt;/code&gt;, this method returns &lt;code&gt;false&lt;/code&gt;. If either iterator runs out of elements before the other it returns &lt;code&gt;false&lt;/code&gt; (as the lists are of unequal length); otherwise it returns &lt;code&gt;true&lt;/code&gt; when the iterations complete.</source>
          <target state="translated">이 구현은 먼저 지정된 객체가이 목록인지 확인합니다. 그렇다면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그렇지 않은 경우 지정된 개체가 목록인지 확인합니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 그렇다면 두 요소를 반복하여 해당 요소 쌍을 비교합니다. 비교가 &lt;code&gt;false&lt;/code&gt; 를 돌려주는 경우 ,이 메소드는 &lt;code&gt;false&lt;/code&gt; 를 돌려줍니다 . 반복자 중 하나에 다른 반복자보다 요소가 부족 하면 목록의 길이가 동일하지 않으므로 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다 . 그렇지 않으면 반복이 완료되면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="6acfc81ffe615763d29e37e8c25feb492ce0e9c5" translate="yes" xml:space="preserve">
          <source>This implementation first checks if the specified object is this map; if so it returns &lt;code&gt;true&lt;/code&gt;. Then, it checks if the specified object is a map whose size is identical to the size of this map; if not, it returns &lt;code&gt;false&lt;/code&gt;. If so, it iterates over this map's &lt;code&gt;entrySet&lt;/code&gt; collection, and checks that the specified map contains each mapping that this map contains. If the specified map fails to contain such a mapping, &lt;code&gt;false&lt;/code&gt; is returned. If the iteration completes, &lt;code&gt;true&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 먼저 지정된 객체가이 맵인지 확인합니다. 그렇다면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그런 다음 지정된 객체가이지도의 크기와 크기가 동일한지도인지 확인합니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 그렇다면이지도의 &lt;code&gt;entrySet&lt;/code&gt; 컬렉션을 반복 하고 지정된지도 에이지 도에 포함 된 각지도가 포함되어 있는지 확인합니다. 지정된 맵에 이러한 맵핑이 포함되지 않으면 &lt;code&gt;false&lt;/code&gt; 가 리턴됩니다. 반복이 완료되면 &lt;code&gt;true&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="06d9255728d4216ea62d7bdbc2262038b5d02cf3" translate="yes" xml:space="preserve">
          <source>This implementation first checks if the specified object is this set; if so it returns &lt;code&gt;true&lt;/code&gt;. Then, it checks if the specified object is a set whose size is identical to the size of this set; if not, it returns false. If so, it returns &lt;code&gt;containsAll((Collection) o)&lt;/code&gt;.</source>
          <target state="translated">이 구현은 먼저 지정된 객체가이 세트인지 확인합니다. 그렇다면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그런 다음 지정된 객체가이 세트의 크기와 크기가 동일한 세트인지 확인합니다. 그렇지 않으면 false를 반환합니다. 그렇다면 &lt;code&gt;containsAll((Collection) o)&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="52c174e1c2dac76d8c52fee93af4f4ced2a9abb0" translate="yes" xml:space="preserve">
          <source>This implementation first checks to see if &lt;code&gt;key&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; throwing a &lt;code&gt;NullPointerException&lt;/code&gt; if this is the case. Then it obtains this preference node's lock, checks that the node has not been removed, invokes &lt;a href=&quot;#getSpi(java.lang.String)&quot;&gt;&lt;code&gt;getSpi(String)&lt;/code&gt;&lt;/a&gt;, and returns the result, unless the &lt;code&gt;getSpi&lt;/code&gt; invocation returns &lt;code&gt;null&lt;/code&gt; or throws an exception, in which case this invocation returns &lt;code&gt;def&lt;/code&gt;.</source>
          <target state="translated">이 경우 제 이행 여부를 확인하기위한 &lt;code&gt;key&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; 송구 &lt;code&gt;NullPointerException&lt;/code&gt; 이 이러한 경우는. 그런 다음이 기본 설정 노드의 잠금을 얻고, 노드가 제거되지 않았는지 확인하고, &lt;a href=&quot;#getSpi(java.lang.String)&quot;&gt; &lt;code&gt;getSpi(String)&lt;/code&gt; &lt;/a&gt; 호출 하고, &lt;code&gt;getSpi&lt;/code&gt; 호출이 &lt;code&gt;null&lt;/code&gt; 을 반환 하거나 예외를 throw 하지 않는 한 결과를 반환합니다 . 이 경우이 호출이 &lt;code&gt;def&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="89d4ba544bd7e07117341a7a4caf76eca5348b14" translate="yes" xml:space="preserve">
          <source>This implementation first checks to see if &lt;code&gt;key&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; throwing a &lt;code&gt;NullPointerException&lt;/code&gt; if this is the case. Then it obtains this preference node's lock, checks that the node has not been removed, invokes &lt;a href=&quot;abstractpreferences#getSpi-java.lang.String-&quot;&gt;&lt;code&gt;getSpi(String)&lt;/code&gt;&lt;/a&gt;, and returns the result, unless the &lt;code&gt;getSpi&lt;/code&gt; invocation returns &lt;code&gt;null&lt;/code&gt; or throws an exception, in which case this invocation returns &lt;code&gt;def&lt;/code&gt;.</source>
          <target state="translated">이 경우 제 이행 여부를 확인하기위한 &lt;code&gt;key&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; 송구 &lt;code&gt;NullPointerException&lt;/code&gt; 이 이러한 경우는. 그런 다음이 환경 설정 노드의 잠금을 확보하고 노드가 제거되지 않았는지 확인하고 &lt;a href=&quot;abstractpreferences#getSpi-java.lang.String-&quot;&gt; &lt;code&gt;getSpi(String)&lt;/code&gt; &lt;/a&gt; 호출 한 후 &lt;code&gt;getSpi&lt;/code&gt; 호출이 &lt;code&gt;null&lt;/code&gt; 하거나 예외를 던지지 않는 한 결과를 리턴합니다 . 이 경우이 호출은 &lt;code&gt;def&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="dddaa6e52aca08a9102e08c6e519960a6d98aa8e" translate="yes" xml:space="preserve">
          <source>This implementation first checks to see if the stream has already encountered this object. Next the &lt;code&gt;mutatesTo&lt;/code&gt; method is called to see if that candidate returned from the stream can be mutated into an accurate copy of &lt;code&gt;oldInstance&lt;/code&gt;. If it can, the &lt;code&gt;initialize&lt;/code&gt; method is called to perform the initialization. If not, the candidate is removed from the stream, and the &lt;code&gt;instantiate&lt;/code&gt; method is called to create a new candidate for this object.</source>
          <target state="translated">이 구현은 먼저 스트림에이 객체가 이미 있는지 확인합니다. 다음 으로, 스트림에서 리턴 된 후보가 &lt;code&gt;oldInstance&lt;/code&gt; 의 정확한 사본으로 변경 될 수 있는지 확인하기 위해 &lt;code&gt;mutatesTo&lt;/code&gt; 메소드가 호출됩니다 . 가능하면 &lt;code&gt;initialize&lt;/code&gt; 메소드가 호출되어 초기화를 수행합니다. 그렇지 않으면 후보가 스트림에서 제거되고 &lt;code&gt;instantiate&lt;/code&gt; 메소드가 호출 되어이 오브젝트에 대한 새 후보를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="5327d07eb58755323196e2a95c6f08fa487d46d1" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator (with &lt;code&gt;listIterator()&lt;/code&gt;). Then, it iterates over the list until the specified element is found or the end of the list is reached.</source>
          <target state="translated">이 구현은 먼저 list iterator ()를 사용하여 목록 반복자를 가져 &lt;code&gt;listIterator()&lt;/code&gt; . 그런 다음 지정된 요소를 찾거나 목록의 끝에 도달 할 때까지 목록을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="dc9d7a122f099945829e1c98c0486717790727d4" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it gets the current element using &lt;code&gt;ListIterator.next&lt;/code&gt; and replaces it with &lt;code&gt;ListIterator.set&lt;/code&gt;.</source>
          <target state="translated">이 구현은 먼저 색인화 된 요소를 가리키는 목록 반복자를 가져옵니다 ( &lt;code&gt;listIterator(index)&lt;/code&gt; ). 그런 다음, 그것을 사용하여 현재 요소를 가져 &lt;code&gt;ListIterator.next&lt;/code&gt; 로 대체합니다 그것을 &lt;code&gt;ListIterator.set&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="e94cbc58e8b1485db6bcbce917f139de4be54ac3" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it gets the element using &lt;code&gt;ListIterator.next&lt;/code&gt; and returns it.</source>
          <target state="translated">이 구현은 먼저 색인화 된 요소를 가리키는 목록 반복자를 가져옵니다 ( &lt;code&gt;listIterator(index)&lt;/code&gt; ). 그런 다음 &lt;code&gt;ListIterator.next&lt;/code&gt; 를 사용하여 요소를 가져 와서 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2da626b5c6657de0464c8ef2394bd0efc74d9c6b" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it inserts the specified element with &lt;code&gt;ListIterator.add&lt;/code&gt;.</source>
          <target state="translated">이 구현은 먼저 색인화 된 요소를 가리키는 목록 반복자를 가져옵니다 ( &lt;code&gt;listIterator(index)&lt;/code&gt; ). 그런 다음 &lt;code&gt;ListIterator.add&lt;/code&gt; 로 지정된 요소를 삽입합니다 .</target>
        </trans-unit>
        <trans-unit id="2b8f920de51f0ee215c05809c4bb2d19ee4bed13" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it removes the element with &lt;code&gt;ListIterator.remove&lt;/code&gt;.</source>
          <target state="translated">이 구현은 먼저 색인화 된 요소를 가리키는 목록 반복자를 가져옵니다 ( &lt;code&gt;listIterator(index)&lt;/code&gt; ). 그런 다음 &lt;code&gt;ListIterator.remove&lt;/code&gt; 를 사용 하여 요소를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="7fb7d178ee862da67fdef96de1ba0c5057a0710f" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator that points to the end of the list (with &lt;code&gt;listIterator(size())&lt;/code&gt;). Then, it iterates backwards over the list until the specified element is found, or the beginning of the list is reached.</source>
          <target state="translated">이 구현은 먼저 목록의 끝을 가리키는 목록 반복자를 가져옵니다 ( &lt;code&gt;listIterator(size())&lt;/code&gt; ). 그런 다음 지정된 요소를 찾거나 목록의 시작 부분에 도달 할 때까지 목록을 거꾸로 반복합니다.</target>
        </trans-unit>
        <trans-unit id="94a0697d84c6d719a5a90f5bb76123e29ec4e37d" translate="yes" xml:space="preserve">
          <source>This implementation gets a list iterator positioned before &lt;code&gt;fromIndex&lt;/code&gt;, and repeatedly calls &lt;code&gt;ListIterator.next&lt;/code&gt; followed by &lt;code&gt;ListIterator.remove&lt;/code&gt; until the entire range has been removed. &lt;b&gt;Note: if &lt;code&gt;ListIterator.remove&lt;/code&gt; requires linear time, this implementation requires quadratic time.&lt;/b&gt;</source>
          <target state="translated">이 구현은 앞에 위치리스트 반복자 얻는다 &lt;code&gt;fromIndex&lt;/code&gt; 로를 반복해서 호출 &lt;code&gt;ListIterator.next&lt;/code&gt; 는 다음 &lt;code&gt;ListIterator.remove&lt;/code&gt; 를 전체 범위가 제거 될 때까지. &lt;b&gt;참고 : &lt;code&gt;ListIterator.remove&lt;/code&gt; 에 선형 시간이 필요한 경우이 구현에는 2 차 시간이 필요합니다.&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="870ec3beb0fb9f2b7a44d7c32a60f5e32d6f2bc6" translate="yes" xml:space="preserve">
          <source>This implementation gets an iterator over the specified collection and a list iterator over this list pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it iterates over the specified collection, inserting the elements obtained from the iterator into this list, one at a time, using &lt;code&gt;ListIterator.add&lt;/code&gt; followed by &lt;code&gt;ListIterator.next&lt;/code&gt; (to skip over the added element).</source>
          <target state="translated">이 구현은 지정된 콜렉션에 대한 반복자와 색인화 된 요소를 가리키는이 목록에 대한 목록 반복자를 가져옵니다 ( &lt;code&gt;listIterator(index)&lt;/code&gt; ). 그런 다음 &lt;code&gt;ListIterator.add&lt;/code&gt; 다음에 &lt;code&gt;ListIterator.next&lt;/code&gt; (추가 된 요소를 건너 뛰기)를 사용하여 반복자에서 얻은 요소를 한 번에 하나씩이 콜렉션에 삽입하여 지정된 콜렉션을 반복합니다 .</target>
        </trans-unit>
        <trans-unit id="5646cdbc01162ddd7ea9fb47be104c59af9f0bfb" translate="yes" xml:space="preserve">
          <source>This implementation gets an iterator over the specified collection and iterates over it, inserting the elements obtained from the iterator into this list at the appropriate position, one at a time, using &lt;code&gt;add(int, E)&lt;/code&gt;. Many implementations will override this method for efficiency.</source>
          <target state="translated">이 구현은 지정된 컬렉션에 대해 반복자를 가져 와서 반복합니다. 반복기에서 얻은 요소를 &lt;code&gt;add(int, E)&lt;/code&gt; 사용하여 한 번에 하나씩 적절한 위치에서이 목록에 삽입합니다 . 많은 구현이 효율성을 위해이 방법을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="463b50b06c64074fcab6e4894833b96fa7aea751" translate="yes" xml:space="preserve">
          <source>This implementation has passed all tests included in the 20151104 version of &lt;a href=&quot;http://csrc.nist.gov/groups/STM/cavp/documents/drbg/drbgtestvectors.zip&quot;&gt; The DRBG Test Vectors&lt;/a&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;http://csrc.nist.gov/groups/STM/cavp/documents/drbg/drbgtestvectors.zip&quot;&gt;DRBG 테스트 벡터&lt;/a&gt; 의 20151104 버전에 포함 된 모든 테스트를 통과했습니다 .</target>
        </trans-unit>
        <trans-unit id="56e226c00665f15374e514b39e186317a37541a9" translate="yes" xml:space="preserve">
          <source>This implementation intentionally re-abstracts the inappropriate default provided in &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">이 구현은 의도적으로 &lt;code&gt;Map&lt;/code&gt; 에 제공된 부적절한 기본값을 다시 요약합니다 .</target>
        </trans-unit>
        <trans-unit id="8c2220e643bcd894a8a399218113267a436a9f2e" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, it is compared with &lt;code&gt;&quot;true&quot;&lt;/code&gt; using &lt;a href=&quot;../../../../java.base/java/lang/string#equalsIgnoreCase(java.lang.String)&quot;&gt;&lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt;&lt;/a&gt;. If the comparison returns &lt;code&gt;true&lt;/code&gt;, this invocation returns &lt;code&gt;true&lt;/code&gt;. Otherwise, the original return value is compared with &lt;code&gt;&quot;false&quot;&lt;/code&gt;, again using &lt;a href=&quot;../../../../java.base/java/lang/string#equalsIgnoreCase(java.lang.String)&quot;&gt;&lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt;&lt;/a&gt;. If the comparison returns &lt;code&gt;true&lt;/code&gt;, this invocation returns &lt;code&gt;false&lt;/code&gt;. Otherwise, this invocation returns &lt;code&gt;def&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;get(key, null)&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null이 &lt;a href=&quot;../../../../java.base/java/lang/string#equalsIgnoreCase(java.lang.String)&quot;&gt; &lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;&quot;true&quot;&lt;/code&gt; 와 비교됩니다 . 비교가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면이 호출은 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그렇지 않으면 원래 반환 값이 다시 &lt;a href=&quot;../../../../java.base/java/lang/string#equalsIgnoreCase(java.lang.String)&quot;&gt; &lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 와 비교됩니다 . 비교가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면이 호출은 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 그렇지 않으면이 호출은 &lt;code&gt;def&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="24a0ff826a27f569d99801badcf81829ee000550" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to a &lt;code&gt;long&lt;/code&gt; with &lt;a href=&quot;../../../../java.base/java/lang/long#parseLong(java.lang.String)&quot;&gt;&lt;code&gt;Long.parseLong(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;get(key, null)&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null이 아닌 경우 구현 은 &lt;a href=&quot;../../../../java.base/java/lang/long#parseLong(java.lang.String)&quot;&gt; &lt;code&gt;Long.parseLong(String)&lt;/code&gt; &lt;/a&gt; 을 사용하여이를 &lt;code&gt;long&lt;/code&gt; 으로 변환하려고합니다 . 시도가 성공하면이 메서드에서 반환 값을 반환합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5f41b1f6ba460d62750205eb0daf08309ae5d77f" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to an &lt;code&gt;double&lt;/code&gt; with &lt;a href=&quot;../../../../java.base/java/lang/double#parseDouble(java.lang.String)&quot;&gt;&lt;code&gt;Double.parseDouble(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;get(key, null)&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null이 아닌 경우 구현시 &lt;a href=&quot;../../../../java.base/java/lang/double#parseDouble(java.lang.String)&quot;&gt; &lt;code&gt;Double.parseDouble(String)&lt;/code&gt; &lt;/a&gt; 사용 하여이를 &lt;code&gt;double&lt;/code&gt; 로 변환하려고합니다 . 시도가 성공하면이 메서드에서 반환 값을 반환합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f53d461c98292d8deabca1ad3b239775775f810d" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to an &lt;code&gt;float&lt;/code&gt; with &lt;a href=&quot;../../../../java.base/java/lang/float#parseFloat(java.lang.String)&quot;&gt;&lt;code&gt;Float.parseFloat(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;get(key, null)&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null이 아닌 경우 구현 은 &lt;a href=&quot;../../../../java.base/java/lang/float#parseFloat(java.lang.String)&quot;&gt; &lt;code&gt;Float.parseFloat(String)&lt;/code&gt; &lt;/a&gt; 사용 하여이를 &lt;code&gt;float&lt;/code&gt; 로 변환하려고합니다 . 시도가 성공하면이 메서드에서 반환 값을 반환합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c50b3857b7481abb81f498641211d99e3d3d1806" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to an &lt;code&gt;int&lt;/code&gt; with &lt;a href=&quot;../../../../java.base/java/lang/integer#parseInt(java.lang.String)&quot;&gt;&lt;code&gt;Integer.parseInt(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;get(key, null)&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null이 아닌 경우 구현 은 &lt;a href=&quot;../../../../java.base/java/lang/integer#parseInt(java.lang.String)&quot;&gt; &lt;code&gt;Integer.parseInt(String)&lt;/code&gt; &lt;/a&gt; 을 사용하여 값을 &lt;code&gt;int&lt;/code&gt; 로 변환하려고합니다 . 시도가 성공하면이 메서드에서 반환 값을 반환합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a23cd81529aca4b49176192e8c858092c326638d" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;#getEntry(java.lang.String)&quot;&gt;&lt;code&gt;getEntry(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;#getEntry(java.lang.String)&quot;&gt; &lt;code&gt;getEntry(String)&lt;/code&gt; &lt;/a&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="b635e6d0c6e154375dc4a10f158124210ed6fb62" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, it is compared with &lt;code&gt;&quot;true&quot;&lt;/code&gt; using &lt;a href=&quot;../../lang/string#equalsIgnoreCase-java.lang.String-&quot;&gt;&lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt;&lt;/a&gt;. If the comparison returns &lt;code&gt;true&lt;/code&gt;, this invocation returns &lt;code&gt;true&lt;/code&gt;. Otherwise, the original return value is compared with &lt;code&gt;&quot;false&quot;&lt;/code&gt;, again using &lt;a href=&quot;../../lang/string#equalsIgnoreCase-java.lang.String-&quot;&gt;&lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt;&lt;/a&gt;. If the comparison returns &lt;code&gt;true&lt;/code&gt;, this invocation returns &lt;code&gt;false&lt;/code&gt;. Otherwise, this invocation returns &lt;code&gt;def&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 호출합니다 . 리턴 값이 널이 아닌 경우 &lt;a href=&quot;../../lang/string#equalsIgnoreCase-java.lang.String-&quot;&gt; &lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;&quot;true&quot;&lt;/code&gt; 와 비교됩니다 . 비교가 &lt;code&gt;true&lt;/code&gt; 를 돌려주는 경우 ,이 호출은 &lt;code&gt;true&lt;/code&gt; 를 돌려줍니다 . 그렇지 않으면 원래 반환 값이 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 와 비교되고 다시 &lt;a href=&quot;../../lang/string#equalsIgnoreCase-java.lang.String-&quot;&gt; &lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt; &lt;/a&gt; 됩니다. 비교가 &lt;code&gt;true&lt;/code&gt; 를 돌려주는 경우 ,이 호출은 &lt;code&gt;false&lt;/code&gt; 를 돌려줍니다 . 그렇지 않으면이 호출은 &lt;code&gt;def&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="66c71fae686f72098bae0c92b0f058077f985cde" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to a &lt;code&gt;long&lt;/code&gt; with &lt;a href=&quot;../../lang/long#parseLong-java.lang.String-&quot;&gt;&lt;code&gt;Long.parseLong(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null이 아닌 경우, 구현 시도는로 번역하는 &lt;code&gt;long&lt;/code&gt; 과 &lt;a href=&quot;../../lang/long#parseLong-java.lang.String-&quot;&gt; &lt;code&gt;Long.parseLong(String)&lt;/code&gt; &lt;/a&gt; . 시도가 성공하면이 메소드가 리턴 값을 리턴합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="a5a96dd92a8a2de99c9bb4309548d692948530dc" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to an &lt;code&gt;double&lt;/code&gt; with &lt;a href=&quot;../../lang/double#parseDouble-java.lang.String-&quot;&gt;&lt;code&gt;Double.parseDouble(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null 이외의 경우, 구현 은 &lt;a href=&quot;../../lang/double#parseDouble-java.lang.String-&quot;&gt; &lt;code&gt;Double.parseDouble(String)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;double&lt;/code&gt; 을 변환하려고합니다 . 시도가 성공하면이 메소드가 리턴 값을 리턴합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="7794ec8b7b429260de48f273b8796a51252bad95" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to an &lt;code&gt;float&lt;/code&gt; with &lt;a href=&quot;../../lang/float#parseFloat-java.lang.String-&quot;&gt;&lt;code&gt;Float.parseFloat(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null 이외의 경우, 구현 은 &lt;a href=&quot;../../lang/float#parseFloat-java.lang.String-&quot;&gt; &lt;code&gt;Float.parseFloat(String)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;float&lt;/code&gt; 값을 변환하려고합니다 . 시도가 성공하면이 메소드가 리턴 값을 리턴합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="eb14543b444c0f393274309002b25292204401a3" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to an &lt;code&gt;int&lt;/code&gt; with &lt;a href=&quot;../../lang/integer#parseInt-java.lang.String-&quot;&gt;&lt;code&gt;Integer.parseInt(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null 이외의 경우, 구현 은 &lt;a href=&quot;../../lang/integer#parseInt-java.lang.String-&quot;&gt; &lt;code&gt;Integer.parseInt(String)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;int&lt;/code&gt; 로 변환하려고합니다 . 시도가 성공하면이 메소드가 리턴 값을 리턴합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="94ecc5689d3e638b6cf536a9fef78b9d540f7a3c" translate="yes" xml:space="preserve">
          <source>This implementation is a stable, adaptive, iterative mergesort that requires far fewer than n lg(n) comparisons when the input array is partially sorted, while offering the performance of a traditional mergesort when the input array is randomly ordered. If the input array is nearly sorted, the implementation requires approximately n comparisons. Temporary storage requirements vary from a small constant for nearly sorted input arrays to n/2 object references for randomly ordered input arrays.</source>
          <target state="translated">이 구현은 입력 배열이 부분적으로 정렬 될 때 n lg (n)보다 훨씬 적은 수의 비교를 요구하는 안정적이고 적응적인 반복 병합 소 르트이며, 입력 배열이 무작위로 정렬 될 때 기존의 머그 소트의 성능을 제공합니다. 입력 배열이 거의 정렬 된 경우 구현에는 대략 n 개의 비교가 필요합니다. 임시 저장 요구 사항은 거의 정렬 된 입력 배열에 대한 작은 상수부터 무작위로 정렬 된 입력 배열에 대한 n / 2 객체 참조까지 다양합니다.</target>
        </trans-unit>
        <trans-unit id="911416a70503239ead8d008361455812329dda42" translate="yes" xml:space="preserve">
          <source>This implementation is an integer version of MJD with the decimal part rounded to floor.</source>
          <target state="translated">이 구현은 소수 부분이 바닥으로 반올림 된 정수 버전의 MJD입니다.</target>
        </trans-unit>
        <trans-unit id="e6a26421733ec0b06980c0e432edc11963385ea9" translate="yes" xml:space="preserve">
          <source>This implementation is based on the chronology ID and class. Subclasses should add any additional state that they store.</source>
          <target state="translated">이 구현은 연대기 ID 및 클래스를 기반으로합니다. 서브 클래스는 그들이 저장하는 추가 상태를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="e69caee99467717738ba7a0c01390cd3506a98fa" translate="yes" xml:space="preserve">
          <source>This implementation is compliant with the requirements of RFC 3280.</source>
          <target state="translated">이 구현은 RFC 3280의 요구 사항을 준수합니다.</target>
        </trans-unit>
        <trans-unit id="ede7f4534a613f4a405a29252ce71f2415a83a31" translate="yes" xml:space="preserve">
          <source>This implementation is compliant with the requirements of RFC 5280.</source>
          <target state="translated">이 구현은 RFC 5280의 요구 사항을 준수합니다.</target>
        </trans-unit>
        <trans-unit id="80ed6f92296fdcb0b3f7cf370eff414073c8afca" translate="yes" xml:space="preserve">
          <source>This implementation is currently incomplete. It can be replaced with alternative implementations that are complete. Future versions of this class will provide better CSS support.</source>
          <target state="translated">이 구현은 현재 불완전합니다. 완전한 대체 구현으로 대체 될 수 있습니다. 이 클래스의 향후 버전은 더 나은 CSS 지원을 제공 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="1f6469a05db1d2f55f7f8ffcb39886d5437ee861" translate="yes" xml:space="preserve">
          <source>This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingDouble(java.util.function.ToDoubleFunction)&quot;&gt;&lt;code&gt;Collectors.summarizingDouble()&lt;/code&gt;&lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)&quot;&gt;&lt;code&gt;Stream.collect()&lt;/code&gt;&lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</source>
          <target state="translated">This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingDouble(java.util.function.ToDoubleFunction)&quot;&gt; &lt;code&gt;Collectors.summarizingDouble()&lt;/code&gt; &lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)&quot;&gt; &lt;code&gt;Stream.collect()&lt;/code&gt; &lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</target>
        </trans-unit>
        <trans-unit id="3c357fd574f41001350324ef3f5db039d50d1eff" translate="yes" xml:space="preserve">
          <source>This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingDouble-java.util.function.ToDoubleFunction-&quot;&gt;&lt;code&gt;Collectors.toDoubleStatistics()&lt;/code&gt;&lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt;&lt;code&gt;Stream.collect()&lt;/code&gt;&lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</source>
          <target state="translated">이 구현은 스레드로부터 안전하지 않습니다. 그러나 &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt; &lt;code&gt;Stream.collect()&lt;/code&gt; &lt;/a&gt; 의 병렬 구현은 안전하고 효율적인 병렬 실행을 위해 필요한 분할, 격리 및 병합 결과를 제공 하므로 병렬 스트림에서 &lt;a href=&quot;stream/collectors#summarizingDouble-java.util.function.ToDoubleFunction-&quot;&gt; &lt;code&gt;Collectors.toDoubleStatistics()&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 안전합니다 .</target>
        </trans-unit>
        <trans-unit id="4dcfae5955255075a4878f9d9d6795cb24209e0e" translate="yes" xml:space="preserve">
          <source>This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingInt(java.util.function.ToIntFunction)&quot;&gt;&lt;code&gt;Collectors.summarizingInt()&lt;/code&gt;&lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)&quot;&gt;&lt;code&gt;Stream.collect()&lt;/code&gt;&lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</source>
          <target state="translated">This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingInt(java.util.function.ToIntFunction)&quot;&gt; &lt;code&gt;Collectors.summarizingInt()&lt;/code&gt; &lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)&quot;&gt; &lt;code&gt;Stream.collect()&lt;/code&gt; &lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</target>
        </trans-unit>
        <trans-unit id="fe542b73779aa75906a286f7e4474cc4e7a6f3dd" translate="yes" xml:space="preserve">
          <source>This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingInt-java.util.function.ToIntFunction-&quot;&gt;&lt;code&gt;Collectors.toIntStatistics()&lt;/code&gt;&lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt;&lt;code&gt;Stream.collect()&lt;/code&gt;&lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</source>
          <target state="translated">이 구현은 스레드로부터 안전하지 않습니다. 그러나 &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt; &lt;code&gt;Stream.collect()&lt;/code&gt; &lt;/a&gt; 의 병렬 구현은 안전하고 효율적인 병렬 실행을 위해 필요한 분할, 격리 및 병합 결과를 제공 하므로 병렬 스트림에서 &lt;a href=&quot;stream/collectors#summarizingInt-java.util.function.ToIntFunction-&quot;&gt; &lt;code&gt;Collectors.toIntStatistics()&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 안전합니다 .</target>
        </trans-unit>
        <trans-unit id="165b30e0148d82f07c6e0e812d44fc8f9fb4d0f1" translate="yes" xml:space="preserve">
          <source>This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingLong(java.util.function.ToLongFunction)&quot;&gt;&lt;code&gt;Collectors.summarizingLong()&lt;/code&gt;&lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)&quot;&gt;&lt;code&gt;Stream.collect()&lt;/code&gt;&lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</source>
          <target state="translated">This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingLong(java.util.function.ToLongFunction)&quot;&gt; &lt;code&gt;Collectors.summarizingLong()&lt;/code&gt; &lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)&quot;&gt; &lt;code&gt;Stream.collect()&lt;/code&gt; &lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</target>
        </trans-unit>
        <trans-unit id="815e99e203755418cfc4a22f8d98449c453fd284" translate="yes" xml:space="preserve">
          <source>This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingLong-java.util.function.ToLongFunction-&quot;&gt;&lt;code&gt;Collectors.toLongStatistics()&lt;/code&gt;&lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt;&lt;code&gt;Stream.collect()&lt;/code&gt;&lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</source>
          <target state="translated">이 구현은 스레드로부터 안전하지 않습니다. 그러나 &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt; &lt;code&gt;Stream.collect()&lt;/code&gt; &lt;/a&gt; 의 병렬 구현은 병렬 스트림에서 &lt;a href=&quot;stream/collectors#summarizingLong-java.util.function.ToLongFunction-&quot;&gt; &lt;code&gt;Collectors.toLongStatistics()&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 안전합니다. 안전하고 효율적인 병렬 실행을 위해 필요한 분할, 격리 및 병합 결과를 제공 .</target>
        </trans-unit>
        <trans-unit id="afc96743025cb10c54054129e73a466cf806174a" translate="yes" xml:space="preserve">
          <source>This implementation is very similar to &lt;a href=&quot;#node(java.lang.String)&quot;&gt;&lt;code&gt;node(String)&lt;/code&gt;&lt;/a&gt;, except that &lt;a href=&quot;#getChild(java.lang.String)&quot;&gt;&lt;code&gt;getChild(String)&lt;/code&gt;&lt;/a&gt; is used instead of &lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This implementation is very similar to &lt;a href=&quot;#node(java.lang.String)&quot;&gt; &lt;code&gt;node(String)&lt;/code&gt; &lt;/a&gt;, except that &lt;a href=&quot;#getChild(java.lang.String)&quot;&gt; &lt;code&gt;getChild(String)&lt;/code&gt; &lt;/a&gt; is used instead of &lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c65a4e114757cd95cb0b1af51c5a8f17d55667f4" translate="yes" xml:space="preserve">
          <source>This implementation is very similar to &lt;a href=&quot;abstractpreferences#node-java.lang.String-&quot;&gt;&lt;code&gt;node(String)&lt;/code&gt;&lt;/a&gt;, except that &lt;a href=&quot;abstractpreferences#getChild-java.lang.String-&quot;&gt;&lt;code&gt;getChild(String)&lt;/code&gt;&lt;/a&gt; is used instead of &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;abstractpreferences#getChild-java.lang.String-&quot;&gt; &lt;code&gt;getChild(String)&lt;/code&gt; &lt;/a&gt; 이 사용 된다는 점을 제외하면 &lt;a href=&quot;abstractpreferences#node-java.lang.String-&quot;&gt; &lt;code&gt;node(String)&lt;/code&gt; &lt;/a&gt; 과 매우 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="4aac7cc407da5580cb81c86b96e060fa67eed65c" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt; searching for an entry with the specified key. If such an entry is found, &lt;code&gt;true&lt;/code&gt; is returned. If the iteration terminates without finding such an entry, &lt;code&gt;false&lt;/code&gt; is returned. Note that this implementation requires linear time in the size of the map; many implementations will override this method.</source>
          <target state="translated">이 구현은 지정된 키를 가진 항목을 검색하는 &lt;code&gt;entrySet()&lt;/code&gt; 반복 합니다. 이러한 항목을 찾으면 &lt;code&gt;true&lt;/code&gt; 가 리턴됩니다. 그러한 항목을 찾지 않고 반복이 종료되면 &lt;code&gt;false&lt;/code&gt; 가 리턴됩니다. 이 구현에는 맵 크기의 선형 시간이 필요합니다. 많은 구현이이 메소드를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="374c02342ca9ed7bb65e8c45f44f04fe03fc0a54" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt; searching for an entry with the specified key. If such an entry is found, its value is obtained with its &lt;code&gt;getValue&lt;/code&gt; operation, the entry is removed from the collection (and the backing map) with the iterator's &lt;code&gt;remove&lt;/code&gt; operation, and the saved value is returned. If the iteration terminates without finding such an entry, &lt;code&gt;null&lt;/code&gt; is returned. Note that this implementation requires linear time in the size of the map; many implementations will override this method.</source>
          <target state="translated">이 구현은 지정된 키를 가진 항목을 검색하는 &lt;code&gt;entrySet()&lt;/code&gt; 반복 합니다. 그러한 엔트리가 발견되면, &lt;code&gt;getValue&lt;/code&gt; 오퍼레이션으로 그 값이 얻어 지고, 이터레이터의 &lt;code&gt;remove&lt;/code&gt; 오퍼레이션으로 콜렉션 (및 백킹 맵)으로부터 엔트리가 삭제되어 , 저장된 값이 돌려 주어집니다. 이러한 항목을 찾지 않고 반복이 종료되면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다. 이 구현에는 맵 크기의 선형 시간이 필요합니다. 많은 구현이이 메소드를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="81700431dabd9c61ce32f9c13c0156c858f13af9" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt; searching for an entry with the specified key. If such an entry is found, the entry's value is returned. If the iteration terminates without finding such an entry, &lt;code&gt;null&lt;/code&gt; is returned. Note that this implementation requires linear time in the size of the map; many implementations will override this method.</source>
          <target state="translated">이 구현은 지정된 키를 가진 항목을 검색하는 &lt;code&gt;entrySet()&lt;/code&gt; 반복 합니다. 이러한 항목을 찾으면 항목 값이 반환됩니다. 이러한 항목을 찾지 않고 반복이 종료되면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다. 이 구현에는 맵 크기의 선형 시간이 필요합니다. 많은 구현이이 메소드를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="f766c5a2cb3b29aa94b14f7e1863646750f5d4cf" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt; searching for an entry with the specified value. If such an entry is found, &lt;code&gt;true&lt;/code&gt; is returned. If the iteration terminates without finding such an entry, &lt;code&gt;false&lt;/code&gt; is returned. Note that this implementation requires linear time in the size of the map.</source>
          <target state="translated">이 구현은 지정된 값을 가진 항목을 검색하는 &lt;code&gt;entrySet()&lt;/code&gt; 반복 합니다. 이러한 항목을 찾으면 &lt;code&gt;true&lt;/code&gt; 가 리턴됩니다. 그러한 항목을 찾지 않고 반복이 종료되면 &lt;code&gt;false&lt;/code&gt; 가 리턴됩니다. 이 구현에는 맵 크기의 선형 시간이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="2367dfe0fd94a0fefa25ddcd2f7ad478565d1f4f" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt;, calling &lt;a href=&quot;map.entry#hashCode()&quot;&gt;&lt;code&gt;hashCode()&lt;/code&gt;&lt;/a&gt; on each element (entry) in the set, and adding up the results.</source>
          <target state="translated">This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt; , calling &lt;a href=&quot;map.entry#hashCode()&quot;&gt; &lt;code&gt;hashCode()&lt;/code&gt; &lt;/a&gt; on each element (entry) in the set, and adding up the results.</target>
        </trans-unit>
        <trans-unit id="8300a6372ea19c93763fb3af3d8f015529a42126" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt;, calling &lt;a href=&quot;map.entry#hashCode--&quot;&gt;&lt;code&gt;hashCode()&lt;/code&gt;&lt;/a&gt; on each element (entry) in the set, and adding up the results.</source>
          <target state="translated">이 구현은 &lt;code&gt;entrySet()&lt;/code&gt; 반복 하여 세트의 각 요소 (entry)에서 &lt;a href=&quot;map.entry#hashCode--&quot;&gt; &lt;code&gt;hashCode()&lt;/code&gt; &lt;/a&gt; 를 호출 하고 결과를 합산합니다.</target>
        </trans-unit>
        <trans-unit id="ca0dbdf4776d51bd0c011b2ccf1832a90ecef222" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the collection looking for the specified element. If it finds the element, it removes the element from the collection using the iterator's remove method.</source>
          <target state="translated">이 구현은 지정된 요소를 찾는 컬렉션을 반복합니다. 요소를 찾으면 반복자의 remove 메소드를 사용하여 컬렉션에서 요소를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="e8d1b36ecb6afc9c1b2a76d59260c0a6aa2c241e" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the elements in the collection, checking each element in turn for equality with the specified element.</source>
          <target state="translated">이 구현은 컬렉션의 요소를 반복하여 각 요소가 지정된 요소와 동일한 지 차례로 확인합니다.</target>
        </trans-unit>
        <trans-unit id="39f403dab1f207dcaf913c9aaa3525eee2914312" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the set, calling the &lt;code&gt;hashCode&lt;/code&gt; method on each element in the set, and adding up the results.</source>
          <target state="translated">이 구현은 세트의 각 요소에 대해 &lt;code&gt;hashCode&lt;/code&gt; 메소드를 호출 하고 결과를 합산 하여 세트를 반복 합니다.</target>
        </trans-unit>
        <trans-unit id="3c0d85f7c8b81e41420ddfc89ef5a64de801eb4a" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the specified collection, and adds each element returned by the iterator to this queue, in turn. A runtime exception encountered while trying to add an element (including, in particular, a &lt;code&gt;null&lt;/code&gt; element) may result in only some of the elements having been successfully added when the associated exception is thrown.</source>
          <target state="translated">이 구현은 지정된 컬렉션을 반복하고 반복자가 반환 한 각 요소를이 큐에 추가합니다. 요소 (특히 &lt;code&gt;null&lt;/code&gt; 요소 포함)를 추가하는 중에 런타임 예외가 발생 하면 연관된 예외가 발생할 때 일부 요소 만 성공적으로 추가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb49e9f211a7b5c45d27f20fd7c5b707404d8891" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the specified collection, and adds each object returned by the iterator to this collection, in turn.</source>
          <target state="translated">이 구현은 지정된 컬렉션을 반복하고 반복자가 반환 한 각 객체를이 컬렉션에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="45df9afc1d5dba7b2ae374ddc1d5fd770727ccb5" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the specified collection, checking each element returned by the iterator in turn to see if it's contained in this collection. If all elements are so contained &lt;code&gt;true&lt;/code&gt; is returned, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 구현은 지정된 컬렉션을 반복하여 반복자가 반환 한 각 요소를 차례로 확인하여이 컬렉션에 포함되어 있는지 확인합니다. 모든 요소가 포함되어 있으면 &lt;code&gt;true&lt;/code&gt; 가 반환되고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d277f54573e93fd99212202d3cc79336a92e3996" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the specified map's &lt;code&gt;entrySet()&lt;/code&gt; collection, and calls this map's &lt;code&gt;put&lt;/code&gt; operation once for each entry returned by the iteration.</source>
          <target state="translated">이 구현은 지정된 맵의 &lt;code&gt;entrySet()&lt;/code&gt; 컬렉션을 반복하고, 반복에 의해 반환 된 각 항목에 대해이 맵의 &lt;code&gt;put&lt;/code&gt; 작업을 한 번 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="94358541f9d35d39b3a9c9aa36e2326b7df4d1a1" translate="yes" xml:space="preserve">
          <source>This implementation iterates over this collection, checking each element returned by the iterator in turn to see if it's contained in the specified collection. If it's not so contained, it's removed from this collection with the iterator's &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">이 구현은이 컬렉션을 반복하여 지정된 컬렉션에 포함되어 있는지 반복자가 반환 한 각 요소를 확인합니다. 포함되어 있지 않으면 이터레이터의 &lt;code&gt;remove&lt;/code&gt; 메소드 를 사용하여이 콜렉션에서 제거 됩니다.</target>
        </trans-unit>
        <trans-unit id="5752c24310b5d5e92d2aeed3eac68c1753b8f209" translate="yes" xml:space="preserve">
          <source>This implementation iterates over this collection, checking each element returned by the iterator in turn to see if it's contained in the specified collection. If it's so contained, it's removed from this collection with the iterator's &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">이 구현은이 컬렉션을 반복하여 지정된 컬렉션에 포함되어 있는지 반복자가 반환 한 각 요소를 확인합니다. 포함되어 있으면 iterator의 &lt;code&gt;remove&lt;/code&gt; 메소드 를 사용하여이 콜렉션에서 제거 됩니다.</target>
        </trans-unit>
        <trans-unit id="519b7265bd069092f1ee87ef17492b432c1b0c47" translate="yes" xml:space="preserve">
          <source>This implementation iterates over this collection, removing each element using the &lt;code&gt;Iterator.remove&lt;/code&gt; operation. Most implementations will probably choose to override this method for efficiency.</source>
          <target state="translated">이 구현은이 컬렉션을 반복하여 &lt;code&gt;Iterator.remove&lt;/code&gt; 작업을 사용하여 각 요소를 제거 합니다. 대부분의 구현은 효율성을 위해이 메소드를 대체하도록 선택합니다.</target>
        </trans-unit>
        <trans-unit id="36794295265f6f32c93e0be73a9cfbf03ee2e801" translate="yes" xml:space="preserve">
          <source>This implementation may return a versioned entry for the requested name even if there is not a corresponding base entry. This can occur if there is a private or package-private versioned entry that matches. If a subclass overrides this method, assure that the override method invokes &lt;code&gt;super.getEntry(name)&lt;/code&gt; to obtain all versioned entries.</source>
          <target state="translated">This implementation may return a versioned entry for the requested name even if there is not a corresponding base entry. This can occur if there is a private or package-private versioned entry that matches. If a subclass overrides this method, assure that the override method invokes &lt;code&gt;super.getEntry(name)&lt;/code&gt; to obtain all versioned entries.</target>
        </trans-unit>
        <trans-unit id="4576fde91ee155ce3e66f4d0a74f6b3c167a9415" translate="yes" xml:space="preserve">
          <source>This implementation merely returns &lt;code&gt; compare((String)o1, (String)o2) &lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt; compare((String)o1, (String)o2) &lt;/code&gt; 만 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="23c718d9502111d93dc30f6a9345580a960a58b8" translate="yes" xml:space="preserve">
          <source>This implementation merely returns &lt;code&gt;false&lt;/code&gt; (so that this map acts like a normal map - the eldest element is never removed).</source>
          <target state="translated">이 구현은 단순히 &lt;code&gt;false&lt;/code&gt; 를 반환 하므로이 맵은 일반 맵처럼 작동합니다. 가장 오래된 요소는 제거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ea2eb5e1b3e1ace11518ffb09a6647f94311ccce" translate="yes" xml:space="preserve">
          <source>This implementation merely returns a list iterator over the list.</source>
          <target state="translated">이 구현은 단순히 목록에 대한 목록 반복자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ad35e878c9e5603591403a18f61e9d3c699a94f2" translate="yes" xml:space="preserve">
          <source>This implementation merely returns the absolute path name that was computed at the time that this node was constructed (based on the name that was passed to this node's constructor, and the names that were passed to this node's ancestors' constructors).</source>
          <target state="translated">이 구현은이 노드가 생성 될 때 계산 된 절대 경로 이름 만 반환합니다 (이 노드의 생성자에 전달 된 이름 및이 노드의 조상 생성자에 전달 된 이름에 따라).</target>
        </trans-unit>
        <trans-unit id="51709a75571ee5b8a6c54ce09f4bdb149dee3efa" translate="yes" xml:space="preserve">
          <source>This implementation merely returns the name that was passed to this node's constructor.</source>
          <target state="translated">이 구현은이 노드의 생성자에 전달 된 이름 만 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ffe6e12917362cfc1a9ffbecfd927d48e9406320" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock and checks that the node has not been removed. If &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;&quot;&quot;&lt;/code&gt;, this node is returned; if &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;&quot;/&quot;&lt;/code&gt;, this node's root is returned. If the first character in &lt;code&gt;path&lt;/code&gt; is not &lt;code&gt;'/'&lt;/code&gt;, the implementation breaks &lt;code&gt;path&lt;/code&gt; into tokens and recursively traverses the path from this node to the named node, &quot;consuming&quot; a name and a slash from &lt;code&gt;path&lt;/code&gt; at each step of the traversal. At each step, the current node is locked and the node's child-cache is checked for the named node. If it is not found, the name is checked to make sure its length does not exceed &lt;code&gt;MAX_NAME_LENGTH&lt;/code&gt;. Then the &lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; method is invoked, and the result stored in this node's child-cache. If the newly created &lt;code&gt;Preferences&lt;/code&gt; object's &lt;a href=&quot;#newNode&quot;&gt;&lt;code&gt;newNode&lt;/code&gt;&lt;/a&gt; field is &lt;code&gt;true&lt;/code&gt; and there are any node change listeners, a notification event is enqueued for processing by the event dispatch thread.</source>
          <target state="translated">This implementation obtains this preference node's lock and checks that the node has not been removed. If &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;&quot;&quot;&lt;/code&gt; , this node is returned; if &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;&quot;/&quot;&lt;/code&gt; , this node's root is returned. If the first character in &lt;code&gt;path&lt;/code&gt; is not &lt;code&gt;'/'&lt;/code&gt; , the implementation breaks &lt;code&gt;path&lt;/code&gt; into tokens and recursively traverses the path from this node to the named node, &quot;consuming&quot; a name and a slash from &lt;code&gt;path&lt;/code&gt; at each step of the traversal. At each step, the current node is locked and the node's child-cache is checked for the named node. If it is not found, the name is checked to make sure its length does not exceed &lt;code&gt;MAX_NAME_LENGTH&lt;/code&gt; . Then the &lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt; method is invoked, and the result stored in this node's child-cache. If the newly created &lt;code&gt;Preferences&lt;/code&gt; object's &lt;a href=&quot;#newNode&quot;&gt; &lt;code&gt;newNode&lt;/code&gt; &lt;/a&gt; field is &lt;code&gt;true&lt;/code&gt; and there are any node change listeners, a notification event is enqueued for processing by the event dispatch thread.</target>
        </trans-unit>
        <trans-unit id="db1425f08beb2d7b2314a47941db6d97a1bcac81" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock and checks that the node has not been removed. If &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;&quot;&quot;&lt;/code&gt;, this node is returned; if &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;&quot;/&quot;&lt;/code&gt;, this node's root is returned. If the first character in &lt;code&gt;path&lt;/code&gt; is not &lt;code&gt;'/'&lt;/code&gt;, the implementation breaks &lt;code&gt;path&lt;/code&gt; into tokens and recursively traverses the path from this node to the named node, &quot;consuming&quot; a name and a slash from &lt;code&gt;path&lt;/code&gt; at each step of the traversal. At each step, the current node is locked and the node's child-cache is checked for the named node. If it is not found, the name is checked to make sure its length does not exceed &lt;code&gt;MAX_NAME_LENGTH&lt;/code&gt;. Then the &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; method is invoked, and the result stored in this node's child-cache. If the newly created &lt;code&gt;Preferences&lt;/code&gt; object's &lt;a href=&quot;abstractpreferences#newNode&quot;&gt;&lt;code&gt;newNode&lt;/code&gt;&lt;/a&gt; field is &lt;code&gt;true&lt;/code&gt; and there are any node change listeners, a notification event is enqueued for processing by the event dispatch thread.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금을 획득하고 노드가 제거되지 않았는지 확인합니다. 경우 &lt;code&gt;path&lt;/code&gt; 이다 &lt;code&gt;&quot;&quot;&lt;/code&gt; 이 노드가 반환됩니다; 경우 &lt;code&gt;path&lt;/code&gt; 입니다 &lt;code&gt;&quot;/&quot;&lt;/code&gt; ,이 노드의 루트가 돌려 주어집니다. &lt;code&gt;path&lt;/code&gt; 의 첫 문자 가 &lt;code&gt;'/'&lt;/code&gt; 가 아닌 경우, 구현은 &lt;code&gt;path&lt;/code&gt; 를 토큰으로 나누고이 노드에서 명명 된 노드로 경로를 재귀 적으로 순회하여 순회의 각 단계 에서 &lt;code&gt;path&lt;/code&gt; 에서 이름과 슬래시를 &quot;소비&quot;합니다 . 각 단계에서 현재 노드가 잠기고 명명 된 노드에 대해 노드의 자식 캐시가 검사됩니다. 찾을 수 없으면 이름이 길이를 초과하지 않는지 확인합니다 &lt;code&gt;MAX_NAME_LENGTH&lt;/code&gt; . 그런 다음&lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt; 메소드가 호출되고 결과는이 노드의 하위 캐시에 저장됩니다. 새로 작성된 &lt;code&gt;Preferences&lt;/code&gt; 오브젝트의&lt;a href=&quot;abstractpreferences#newNode&quot;&gt; &lt;code&gt;newNode&lt;/code&gt; &lt;/a&gt; 필드가 &lt;code&gt;true&lt;/code&gt; 이고 노드 변경 리스너가있는 경우, 이벤트 디스패치 스레드에 의해 처리되도록 알림 이벤트가 큐에 대기됩니다.</target>
        </trans-unit>
        <trans-unit id="d089659cb66d57741a2a7b73c7ec3a9673d19ab8" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed and invokes &lt;a href=&quot;#keysSpi()&quot;&gt;&lt;code&gt;keysSpi()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This implementation obtains this preference node's lock, checks that the node has not been removed and invokes &lt;a href=&quot;#keysSpi()&quot;&gt; &lt;code&gt;keysSpi()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b4e9074e793652f799c8cfa243efa22f5492c1f1" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed and invokes &lt;a href=&quot;abstractpreferences#keysSpi--&quot;&gt;&lt;code&gt;keysSpi()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금을 획득하고 노드가 제거되지 않았는지 점검하고 &lt;a href=&quot;abstractpreferences#keysSpi--&quot;&gt; &lt;code&gt;keysSpi()&lt;/code&gt; &lt;/a&gt; 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="ee523996d355981b8029699f775d6640fb17d2b8" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed and returns the parent value that was passed to this node's constructor.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금을 획득하고 노드가 제거되지 않았는지 점검 한 후이 노드의 생성자에 전달 된 상위 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8624adf2c23a453ea24453fedf1db44a7231918e" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed, constructs a &lt;code&gt;TreeSet&lt;/code&gt; initialized to the names of children already cached (the children in this node's &quot;child-cache&quot;), invokes &lt;a href=&quot;#childrenNamesSpi()&quot;&gt;&lt;code&gt;childrenNamesSpi()&lt;/code&gt;&lt;/a&gt;, and adds all of the returned child-names into the set. The elements of the tree set are dumped into a &lt;code&gt;String&lt;/code&gt; array using the &lt;code&gt;toArray&lt;/code&gt; method, and this array is returned.</source>
          <target state="translated">This implementation obtains this preference node's lock, checks that the node has not been removed, constructs a &lt;code&gt;TreeSet&lt;/code&gt; initialized to the names of children already cached (the children in this node's &quot;child-cache&quot;), invokes &lt;a href=&quot;#childrenNamesSpi()&quot;&gt; &lt;code&gt;childrenNamesSpi()&lt;/code&gt; &lt;/a&gt;, and adds all of the returned child-names into the set. The elements of the tree set are dumped into a &lt;code&gt;String&lt;/code&gt; array using the &lt;code&gt;toArray&lt;/code&gt; method, and this array is returned.</target>
        </trans-unit>
        <trans-unit id="9c1dca6ba54dc0a25dec6160d7a80a95ee75a6d1" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed, constructs a &lt;code&gt;TreeSet&lt;/code&gt; initialized to the names of children already cached (the children in this node's &quot;child-cache&quot;), invokes &lt;a href=&quot;abstractpreferences#childrenNamesSpi--&quot;&gt;&lt;code&gt;childrenNamesSpi()&lt;/code&gt;&lt;/a&gt;, and adds all of the returned child-names into the set. The elements of the tree set are dumped into a &lt;code&gt;String&lt;/code&gt; array using the &lt;code&gt;toArray&lt;/code&gt; method, and this array is returned.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금을 획득하고, 노드가 제거되지 않았는지 점검하고, 이미 캐시 된 하위 (이 노드의 &quot;하위 캐시&quot;의 하위) 이름으로 초기화 된 &lt;code&gt;TreeSet&lt;/code&gt; 을 구성하고 &lt;a href=&quot;abstractpreferences#childrenNamesSpi--&quot;&gt; &lt;code&gt;childrenNamesSpi()&lt;/code&gt; &lt;/a&gt; 호출 하고 모든 것을 추가합니다. 세트에 돌려 주어진 아이 이름 트리 세트의 요소는 &lt;code&gt;toArray&lt;/code&gt; 메소드를 사용하여 &lt;code&gt;String&lt;/code&gt; 배열 로 덤프 되고이 배열이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="7d01e6ece790750f731306a2007fcb28034a632b" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed, invokes &lt;a href=&quot;#removeSpi(java.lang.String)&quot;&gt;&lt;code&gt;removeSpi(String)&lt;/code&gt;&lt;/a&gt; and if there are any preference change listeners, enqueues a notification event for processing by the event dispatch thread.</source>
          <target state="translated">This implementation obtains this preference node's lock, checks that the node has not been removed, invokes &lt;a href=&quot;#removeSpi(java.lang.String)&quot;&gt; &lt;code&gt;removeSpi(String)&lt;/code&gt; &lt;/a&gt; and if there are any preference change listeners, enqueues a notification event for processing by the event dispatch thread.</target>
        </trans-unit>
        <trans-unit id="ff328080236bc53bbb21d28fd82c8ab703ac9410" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed, invokes &lt;a href=&quot;abstractpreferences#removeSpi-java.lang.String-&quot;&gt;&lt;code&gt;removeSpi(String)&lt;/code&gt;&lt;/a&gt; and if there are any preference change listeners, enqueues a notification event for processing by the event dispatch thread.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금을 확보하고 노드가 제거되지 않았는지 점검하고 &lt;a href=&quot;abstractpreferences#removeSpi-java.lang.String-&quot;&gt; &lt;code&gt;removeSpi(String)&lt;/code&gt; &lt;/a&gt; 호출 하며 환경 설정 변경 리스너가있는 경우 이벤트 디스패치 스레드에 의해 처리 할 알림 이벤트를 큐에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="646cf136a4cbce02f196d03c5168a651c12d8199" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, invokes &lt;a href=&quot;#childrenNames()&quot;&gt;&lt;code&gt;childrenNames()&lt;/code&gt;&lt;/a&gt; to get an array of the names of this node's children, and iterates over the array comparing the name of each child with the specified node name. If a child node has the correct name, the &lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; method is invoked and the resulting node is returned. If the iteration completes without finding the specified name, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">This implementation obtains this preference node's lock, invokes &lt;a href=&quot;#childrenNames()&quot;&gt; &lt;code&gt;childrenNames()&lt;/code&gt; &lt;/a&gt; to get an array of the names of this node's children, and iterates over the array comparing the name of each child with the specified node name. If a child node has the correct name, the &lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt; method is invoked and the resulting node is returned. If the iteration completes without finding the specified name, &lt;code&gt;null&lt;/code&gt; is returned.</target>
        </trans-unit>
        <trans-unit id="85cc7d72ba0f421214abb0a2d34a19f6fe5c4f52" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, invokes &lt;a href=&quot;#keys()&quot;&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/a&gt; to obtain an array of keys, and iterates over the array invoking &lt;a href=&quot;#remove(java.lang.String)&quot;&gt;&lt;code&gt;remove(String)&lt;/code&gt;&lt;/a&gt; on each key.</source>
          <target state="translated">This implementation obtains this preference node's lock, invokes &lt;a href=&quot;#keys()&quot;&gt; &lt;code&gt;keys()&lt;/code&gt; &lt;/a&gt; to obtain an array of keys, and iterates over the array invoking &lt;a href=&quot;#remove(java.lang.String)&quot;&gt; &lt;code&gt;remove(String)&lt;/code&gt; &lt;/a&gt; on each key.</target>
        </trans-unit>
        <trans-unit id="7d06d3af75722399c69cf0a06d1b73a18139b052" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, invokes &lt;a href=&quot;abstractpreferences#childrenNames--&quot;&gt;&lt;code&gt;childrenNames()&lt;/code&gt;&lt;/a&gt; to get an array of the names of this node's children, and iterates over the array comparing the name of each child with the specified node name. If a child node has the correct name, the &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; method is invoked and the resulting node is returned. If the iteration completes without finding the specified name, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금을 획득하고 &lt;a href=&quot;abstractpreferences#childrenNames--&quot;&gt; &lt;code&gt;childrenNames()&lt;/code&gt; &lt;/a&gt; 를 호출 하여이 노드의 하위 이름의 배열을 가져오고 각 하위의 이름을 지정된 노드 이름과 비교하여 배열을 반복합니다. 하위 노드의 이름이 올바른 경우 &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt; 메소드가 호출되고 결과 노드가 리턴됩니다. 지정된 이름을 찾지 않고 반복이 완료되면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="68dd71631e243d62782c7a1d3233e4f3411bf3d0" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, invokes &lt;a href=&quot;abstractpreferences#keys--&quot;&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/a&gt; to obtain an array of keys, and iterates over the array invoking &lt;a href=&quot;abstractpreferences#remove-java.lang.String-&quot;&gt;&lt;code&gt;remove(String)&lt;/code&gt;&lt;/a&gt; on each key.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금 을 획득하고 &lt;a href=&quot;abstractpreferences#keys--&quot;&gt; &lt;code&gt;keys()&lt;/code&gt; &lt;/a&gt; 를 호출하여 키 배열을 확보 한 후 각 키에서 &lt;a href=&quot;abstractpreferences#remove-java.lang.String-&quot;&gt; &lt;code&gt;remove(String)&lt;/code&gt; &lt;/a&gt; 를 호출하는 배열을 반복 합니다.</target>
        </trans-unit>
        <trans-unit id="3168ea6988716449b260f200e6698ef0c52801b1" translate="yes" xml:space="preserve">
          <source>This implementation of &lt;code&gt;coalesceEvents&lt;/code&gt; coalesces two event types: mouse move (and drag) events, and paint (and update) events. For mouse move events the last event is always returned, causing intermediate moves to be discarded. For paint events, the new event is coalesced into a complex &lt;code&gt;RepaintArea&lt;/code&gt; in the peer. The new &lt;code&gt;AWTEvent&lt;/code&gt; is always returned.</source>
          <target state="translated">This implementation of &lt;code&gt;coalesceEvents&lt;/code&gt; coalesces two event types: mouse move (and drag) events, and paint (and update) events. For mouse move events the last event is always returned, causing intermediate moves to be discarded. For paint events, the new event is coalesced into a complex &lt;code&gt;RepaintArea&lt;/code&gt; in the peer. The new &lt;code&gt;AWTEvent&lt;/code&gt; is always returned.</target>
        </trans-unit>
        <trans-unit id="68fb70f6859bc881ca8591ac741e9e9459eb437f" translate="yes" xml:space="preserve">
          <source>This implementation of the counter monitor requires the observed attribute to be of the type integer (&lt;code&gt;Byte&lt;/code&gt;, &lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Short&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;).</source>
          <target state="translated">카운터 모니터를 구현하려면 관찰 된 속성이 정수 유형 ( &lt;code&gt;Byte&lt;/code&gt; , &lt;code&gt;Integer&lt;/code&gt; , &lt;code&gt;Short&lt;/code&gt; , &lt;code&gt;Long&lt;/code&gt; ) 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="56c64353580b5bd2b143fc61404b3daed810592f" translate="yes" xml:space="preserve">
          <source>This implementation of the gauge monitor requires the observed attribute to be of the type integer or floating-point (&lt;code&gt;Byte&lt;/code&gt;, &lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Short&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt;, &lt;code&gt;Double&lt;/code&gt;).</source>
          <target state="translated">게이지 모니터를 구현하려면 관찰 된 속성이 정수 또는 부동 소수점 유형 ( &lt;code&gt;Byte&lt;/code&gt; , &lt;code&gt;Integer&lt;/code&gt; , &lt;code&gt;Short&lt;/code&gt; , &lt;code&gt;Long&lt;/code&gt; , &lt;code&gt;Float&lt;/code&gt; , &lt;code&gt;Double&lt;/code&gt; ) 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2ddbea53defab69d9606ffb011766ce60be8a7aa" translate="yes" xml:space="preserve">
          <source>This implementation provides constant-time performance for the basic operations (&lt;code&gt;get&lt;/code&gt; and &lt;code&gt;put&lt;/code&gt;), assuming the hash function disperses the elements properly among the buckets. Iteration over collection views requires time proportional to the &quot;capacity&quot; of the &lt;code&gt;HashMap&lt;/code&gt; instance (the number of buckets) plus its size (the number of key-value mappings). Thus, it's very important not to set the initial capacity too high (or the load factor too low) if iteration performance is important.</source>
          <target state="translated">이 구현은 해시 함수가 버킷간에 요소를 올바르게 분산시키는 것으로 가정하여 기본 작업 ( &lt;code&gt;get&lt;/code&gt; 및 &lt;code&gt;put&lt;/code&gt; )에 일정한 시간 성능을 제공합니다 . 컬렉션 뷰를 반복하면 &lt;code&gt;HashMap&lt;/code&gt; 인스턴스 의 &quot;용량&quot; (버킷 수)에 크기 (키-값 매핑 수)를 더한 시간이 필요합니다 . 따라서 반복 성능이 중요한 경우 초기 용량을 너무 높게 (또는로드 팩터가 너무 낮게) 설정하지 않는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="8c27c8f93fb0c5e1304d66a7f7e6788cb8b334d2" translate="yes" xml:space="preserve">
          <source>This implementation provides expected average</source>
          <target state="translated">이 구현은 예상 평균을 제공합니다</target>
        </trans-unit>
        <trans-unit id="0927d54bcfd80f8aefb6120fb2f7298a28299ab9" translate="yes" xml:space="preserve">
          <source>This implementation provides guaranteed log(n) time cost for the &lt;code&gt;containsKey&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt; operations. Algorithms are adaptations of those in Cormen, Leiserson, and Rivest's &lt;em&gt;Introduction to Algorithms&lt;/em&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;containsKey&lt;/code&gt; , &lt;code&gt;get&lt;/code&gt; , &lt;code&gt;put&lt;/code&gt; 및 &lt;code&gt;remove&lt;/code&gt; 작업에 대해 보장 된 log (n) 시간 비용을 제공합니다 . 알고리즘은 Cormen, Leiserson 및 Rivest의 &lt;em&gt;알고리즘 소개에 적용됩니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="36ff11dc05516f440cd0122d1f08e33fd3b4d671" translate="yes" xml:space="preserve">
          <source>This implementation provides guaranteed log(n) time cost for the basic operations (&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt; and &lt;code&gt;contains&lt;/code&gt;).</source>
          <target state="translated">이 구현은 기본 작업 ( &lt;code&gt;add&lt;/code&gt; , &lt;code&gt;remove&lt;/code&gt; 및 &lt;code&gt;contains&lt;/code&gt; )에 대해 보장 된 log (n) 시간 비용을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="adb9b1e2380a066f0731a42f986462a4e9caef74" translate="yes" xml:space="preserve">
          <source>This implementation reads fresh entropy from the system default entropy source determined by the security property &lt;code&gt;securerandom.source&lt;/code&gt;.</source>
          <target state="translated">This implementation reads fresh entropy from the system default entropy source determined by the security property &lt;code&gt;securerandom.source&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60c4f7fa5f2db32614f524b752c0959196d6bb59" translate="yes" xml:space="preserve">
          <source>This implementation rejects submitted tasks (that is, by throwing &lt;a href=&quot;rejectedexecutionexception&quot;&gt;&lt;code&gt;RejectedExecutionException&lt;/code&gt;&lt;/a&gt;) only when the pool is shut down or internal resources have been exhausted.</source>
          <target state="translated">이 구현은 풀이 종료되거나 내부 자원이 소진 된 경우에만 제출 된 작업을 거부합니다 (즉, &lt;a href=&quot;rejectedexecutionexception&quot;&gt; &lt;code&gt;RejectedExecutionException&lt;/code&gt; 발생&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5e13716cb6d75832662bdbdfbcd14584e2b3dc22" translate="yes" xml:space="preserve">
          <source>This implementation repeatedly invokes &lt;a href=&quot;queue#poll()&quot;&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/a&gt; until it returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">This implementation repeatedly invokes &lt;a href=&quot;queue#poll()&quot;&gt; &lt;code&gt;poll&lt;/code&gt; &lt;/a&gt; until it returns &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="363bdcdf1055b4b3a93d614d60e563148e7f8e19" translate="yes" xml:space="preserve">
          <source>This implementation repeatedly invokes &lt;a href=&quot;queue#poll--&quot;&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/a&gt; until it returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 구현 은 &lt;code&gt;null&lt;/code&gt; 을 리턴 할 때까지 &lt;a href=&quot;queue#poll--&quot;&gt; &lt;code&gt;poll&lt;/code&gt; &lt;/a&gt; 반복적으로 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="42b8f39f4de84dc5013aa7b4933bc01700727615" translate="yes" xml:space="preserve">
          <source>This implementation returned &lt;code&gt;Printable&lt;/code&gt; performs all painting on the</source>
          <target state="translated">This implementation returned &lt;code&gt;Printable&lt;/code&gt; performs all painting on the</target>
        </trans-unit>
        <trans-unit id="3c28808be8906fbe4173771d18301aaa9ab4f926" translate="yes" xml:space="preserve">
          <source>This implementation returns -1, indicating the &lt;code&gt;AbstractColorChooserPanel&lt;/code&gt; does not support a mnemonic, subclasses wishing a mnemonic will need to override this.</source>
          <target state="translated">This implementation returns -1, indicating the &lt;code&gt;AbstractColorChooserPanel&lt;/code&gt; does not support a mnemonic, subclasses wishing a mnemonic will need to override this.</target>
        </trans-unit>
        <trans-unit id="7a8193d83a58b4693e51fd1645579525c4754def" translate="yes" xml:space="preserve">
          <source>This implementation returns 0, indicating the &lt;code&gt;AbstractColorChooserPanel&lt;/code&gt; does not support a mnemonic, subclasses wishing a mnemonic will need to override this.</source>
          <target state="translated">This implementation returns 0, indicating the &lt;code&gt;AbstractColorChooserPanel&lt;/code&gt; does not support a mnemonic, subclasses wishing a mnemonic will need to override this.</target>
        </trans-unit>
        <trans-unit id="093b6aef4ed6c5733778902eedda2a13e2341f03" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;0L&lt;/code&gt;.</source>
          <target state="translated">This implementation returns &lt;code&gt;0L&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="adbd9f8ccc390387c4b3a8d79e90767a5e78efc8" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;0L&lt;/code&gt;. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">이 구현은 &lt;code&gt;0L&lt;/code&gt; 을 반환합니다 . &lt;a href=&quot;fileobject&quot;&gt; &lt;code&gt;FileObject&lt;/code&gt; &lt;/a&gt; 의 계약을 준수 하는 한 서브 클래스는이 동작을 변경할 수 있습니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
