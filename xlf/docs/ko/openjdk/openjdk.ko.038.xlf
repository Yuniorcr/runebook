<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="5758e4acc740b74f1820a1cc1655834eef9e05a3" translate="yes" xml:space="preserve">
          <source>DoubleAdder.floatValue()</source>
          <target state="translated">DoubleAdder.floatValue()</target>
        </trans-unit>
        <trans-unit id="9d5526a5e41a4832883ce052486746b09e4fb64d" translate="yes" xml:space="preserve">
          <source>DoubleAdder.intValue()</source>
          <target state="translated">DoubleAdder.intValue()</target>
        </trans-unit>
        <trans-unit id="142493c040dddccba370f4cde9b20e7dbf466fc9" translate="yes" xml:space="preserve">
          <source>DoubleAdder.longValue()</source>
          <target state="translated">DoubleAdder.longValue()</target>
        </trans-unit>
        <trans-unit id="c3cf3ddb50f206795678a2bfbdf041251a8c8f83" translate="yes" xml:space="preserve">
          <source>DoubleAdder.reset()</source>
          <target state="translated">DoubleAdder.reset()</target>
        </trans-unit>
        <trans-unit id="4812637cd65c155d17f0d4e2df9496278ec3a4d1" translate="yes" xml:space="preserve">
          <source>DoubleAdder.sum()</source>
          <target state="translated">DoubleAdder.sum()</target>
        </trans-unit>
        <trans-unit id="6963d57010b167f1d8de8659cfc24c675a331c76" translate="yes" xml:space="preserve">
          <source>DoubleAdder.sumThenReset()</source>
          <target state="translated">DoubleAdder.sumThenReset()</target>
        </trans-unit>
        <trans-unit id="2110fe9402f25dc6578e74f50e79aae09a88faf8" translate="yes" xml:space="preserve">
          <source>DoubleAdder.toString()</source>
          <target state="translated">DoubleAdder.toString()</target>
        </trans-unit>
        <trans-unit id="1ca0dcb104e15c0b1249f7ee647403d29508b158" translate="yes" xml:space="preserve">
          <source>DoubleBinaryOperator</source>
          <target state="translated">DoubleBinaryOperator</target>
        </trans-unit>
        <trans-unit id="913684db31c7a6554613b3f143812fb2d4f1e00b" translate="yes" xml:space="preserve">
          <source>DoubleBinaryOperator.applyAsDouble()</source>
          <target state="translated">DoubleBinaryOperator.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="b5af989083591cc73e1414b330d66540c69780d4" translate="yes" xml:space="preserve">
          <source>DoubleBuffer</source>
          <target state="translated">DoubleBuffer</target>
        </trans-unit>
        <trans-unit id="3d7a4e834d124304441b258db237fe0c233be6f1" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.allocate()</source>
          <target state="translated">DoubleBuffer.allocate()</target>
        </trans-unit>
        <trans-unit id="c8759dd3b63108768e9d1f2734532e3fd2e03cc5" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.array()</source>
          <target state="translated">DoubleBuffer.array()</target>
        </trans-unit>
        <trans-unit id="06d4f39fd2a8164e79adc16a88df99f8556ad32d" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.arrayOffset()</source>
          <target state="translated">DoubleBuffer.arrayOffset()</target>
        </trans-unit>
        <trans-unit id="45d2cf6694ef38f19926aed3e26419c58cfd98ad" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.asReadOnlyBuffer()</source>
          <target state="translated">DoubleBuffer.asReadOnlyBuffer()</target>
        </trans-unit>
        <trans-unit id="5e203c9288b71a1402984aeb8d0eb663a7d82ad2" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.compact()</source>
          <target state="translated">DoubleBuffer.compact()</target>
        </trans-unit>
        <trans-unit id="005b8cacfb4200478e0f37db7e280427d4bfab6e" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.compareTo()</source>
          <target state="translated">DoubleBuffer.compareTo()</target>
        </trans-unit>
        <trans-unit id="9b3dbf154c8ab62dff3147448e007415ebf8e94b" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.duplicate()</source>
          <target state="translated">DoubleBuffer.duplicate()</target>
        </trans-unit>
        <trans-unit id="71bbb725c95e2e18c019ea4982ac1d0635fdd35b" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.equals()</source>
          <target state="translated">DoubleBuffer.equals()</target>
        </trans-unit>
        <trans-unit id="e36daed43a73817908cade21b2cb9e8d6b6edd47" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.get()</source>
          <target state="translated">DoubleBuffer.get()</target>
        </trans-unit>
        <trans-unit id="ea47b1d620ffccdee11a2a1ab6aedccfef648b7d" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.hasArray()</source>
          <target state="translated">DoubleBuffer.hasArray()</target>
        </trans-unit>
        <trans-unit id="ba066900eaa0ed8b3f373b35bb114196a7a52a5f" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.hashCode()</source>
          <target state="translated">DoubleBuffer.hashCode()</target>
        </trans-unit>
        <trans-unit id="0d08d5751432bdff8203ceb7d97b2c177ddab11e" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.isDirect()</source>
          <target state="translated">DoubleBuffer.isDirect()</target>
        </trans-unit>
        <trans-unit id="33235656f9fe11047efbed642984cfb4e4cb5f1d" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.order()</source>
          <target state="translated">DoubleBuffer.order()</target>
        </trans-unit>
        <trans-unit id="17b611228eba5152bd77f4b28ae6c56fb7dfe0b7" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.put()</source>
          <target state="translated">DoubleBuffer.put()</target>
        </trans-unit>
        <trans-unit id="e86767c664c27368aecbc4a4bd67faced922e2d9" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.slice()</source>
          <target state="translated">DoubleBuffer.slice()</target>
        </trans-unit>
        <trans-unit id="be60e0897bdae267b9e57771928ab54839a5c4d8" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.toString()</source>
          <target state="translated">DoubleBuffer.toString()</target>
        </trans-unit>
        <trans-unit id="2f0eeeb9b69e187c0afd1c752a6b11191e84111c" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.wrap()</source>
          <target state="translated">DoubleBuffer.wrap()</target>
        </trans-unit>
        <trans-unit id="0c6c7e402f35d32dd0077c4d3e4467def7ca73f1" translate="yes" xml:space="preserve">
          <source>DoubleConsumer</source>
          <target state="translated">DoubleConsumer</target>
        </trans-unit>
        <trans-unit id="ba51b6c6c6777507e8531c32932c0212f4bf249f" translate="yes" xml:space="preserve">
          <source>DoubleConsumer.accept()</source>
          <target state="translated">DoubleConsumer.accept()</target>
        </trans-unit>
        <trans-unit id="814b6e9045add9f8435e7a598dc5388543b38474" translate="yes" xml:space="preserve">
          <source>DoubleConsumer.andThen()</source>
          <target state="translated">DoubleConsumer.andThen()</target>
        </trans-unit>
        <trans-unit id="430d3ed0ddf93f256728b2e9bce18def0b626aa9" translate="yes" xml:space="preserve">
          <source>DoubleFunction</source>
          <target state="translated">DoubleFunction</target>
        </trans-unit>
        <trans-unit id="37e0f6cd29dae6e60c6e13b967693fe8d9730d3f" translate="yes" xml:space="preserve">
          <source>DoubleFunction.apply()</source>
          <target state="translated">DoubleFunction.apply()</target>
        </trans-unit>
        <trans-unit id="02d79a48ac4c9ccd71c9226deac3a8f25fe5bd3f" translate="yes" xml:space="preserve">
          <source>DoublePredicate</source>
          <target state="translated">DoublePredicate</target>
        </trans-unit>
        <trans-unit id="d8ebd507bffed795545c3129f0a9cb36e828ff83" translate="yes" xml:space="preserve">
          <source>DoublePredicate.and()</source>
          <target state="translated">DoublePredicate.and()</target>
        </trans-unit>
        <trans-unit id="4e0bb14f2f6c1591aa05cfd518c44a47dd090cd4" translate="yes" xml:space="preserve">
          <source>DoublePredicate.negate()</source>
          <target state="translated">DoublePredicate.negate()</target>
        </trans-unit>
        <trans-unit id="31dbde5705c19b394009825c03e61698b70a033a" translate="yes" xml:space="preserve">
          <source>DoublePredicate.or()</source>
          <target state="translated">DoublePredicate.or()</target>
        </trans-unit>
        <trans-unit id="3831d05d1e7a7049eeac2ec0a5a0ec920fde157c" translate="yes" xml:space="preserve">
          <source>DoublePredicate.test()</source>
          <target state="translated">DoublePredicate.test()</target>
        </trans-unit>
        <trans-unit id="d194a8a1841c87485fc5f515f503898570fe2b82" translate="yes" xml:space="preserve">
          <source>DoubleStream</source>
          <target state="translated">DoubleStream</target>
        </trans-unit>
        <trans-unit id="92d5d6c0a0a3fae9b0b0f40221f72b7952bb5e80" translate="yes" xml:space="preserve">
          <source>DoubleStream.Builder</source>
          <target state="translated">DoubleStream.Builder</target>
        </trans-unit>
        <trans-unit id="e0f7f84ba01c8785806a5b5bbf0ba64109c8fdde" translate="yes" xml:space="preserve">
          <source>DoubleStream.Builder.accept()</source>
          <target state="translated">DoubleStream.Builder.accept()</target>
        </trans-unit>
        <trans-unit id="a40b48cb1943b58dc661a85ca45d4e1ca94397ba" translate="yes" xml:space="preserve">
          <source>DoubleStream.Builder.add()</source>
          <target state="translated">DoubleStream.Builder.add()</target>
        </trans-unit>
        <trans-unit id="942c9aa1ce23dc401c83ab7d7c116bbb23952d4c" translate="yes" xml:space="preserve">
          <source>DoubleStream.Builder.build()</source>
          <target state="translated">DoubleStream.Builder.build()</target>
        </trans-unit>
        <trans-unit id="3c0a05c6d718743c031112de7d583c1e9bf1aa09" translate="yes" xml:space="preserve">
          <source>DoubleStream.allMatch()</source>
          <target state="translated">DoubleStream.allMatch()</target>
        </trans-unit>
        <trans-unit id="6f6c246f1f1d6127d7f64fb43013cbfa5b46a46c" translate="yes" xml:space="preserve">
          <source>DoubleStream.anyMatch()</source>
          <target state="translated">DoubleStream.anyMatch()</target>
        </trans-unit>
        <trans-unit id="9ac3b12b54f092c132d9752dd1b99a11a7a82eeb" translate="yes" xml:space="preserve">
          <source>DoubleStream.average()</source>
          <target state="translated">DoubleStream.average()</target>
        </trans-unit>
        <trans-unit id="8d4a9276ec8472b367d0074624b99444f502f30f" translate="yes" xml:space="preserve">
          <source>DoubleStream.boxed()</source>
          <target state="translated">DoubleStream.boxed()</target>
        </trans-unit>
        <trans-unit id="9c04b079091dfddc603a15c3a2f8fb58d2f508ec" translate="yes" xml:space="preserve">
          <source>DoubleStream.builder()</source>
          <target state="translated">DoubleStream.builder()</target>
        </trans-unit>
        <trans-unit id="e5e510278104ba8544458c4519a08c2573224a7b" translate="yes" xml:space="preserve">
          <source>DoubleStream.collect()</source>
          <target state="translated">DoubleStream.collect()</target>
        </trans-unit>
        <trans-unit id="98e7d511189018ebd0b2e13aaf32d7486d08fd6f" translate="yes" xml:space="preserve">
          <source>DoubleStream.concat()</source>
          <target state="translated">DoubleStream.concat()</target>
        </trans-unit>
        <trans-unit id="4890af299a0160a645f5c88d0fbf0f83cf59400c" translate="yes" xml:space="preserve">
          <source>DoubleStream.count()</source>
          <target state="translated">DoubleStream.count()</target>
        </trans-unit>
        <trans-unit id="2d8d2486cc746b41d79d2ce4864dc8aa2eda6472" translate="yes" xml:space="preserve">
          <source>DoubleStream.distinct()</source>
          <target state="translated">DoubleStream.distinct()</target>
        </trans-unit>
        <trans-unit id="9b2adcc7ebe172dc1614fe37d85406cfeeff0352" translate="yes" xml:space="preserve">
          <source>DoubleStream.empty()</source>
          <target state="translated">DoubleStream.empty()</target>
        </trans-unit>
        <trans-unit id="29c5d558354a42815c0e7882c6f4f373b18aacfc" translate="yes" xml:space="preserve">
          <source>DoubleStream.filter()</source>
          <target state="translated">DoubleStream.filter()</target>
        </trans-unit>
        <trans-unit id="c723abe220e435262a0a2915537f5e5a79afb793" translate="yes" xml:space="preserve">
          <source>DoubleStream.findAny()</source>
          <target state="translated">DoubleStream.findAny()</target>
        </trans-unit>
        <trans-unit id="1667a63bc92ca3095450ff4091cc6b3eeccd47c2" translate="yes" xml:space="preserve">
          <source>DoubleStream.findFirst()</source>
          <target state="translated">DoubleStream.findFirst()</target>
        </trans-unit>
        <trans-unit id="69180ea2e365c283876162118041e282459e59a1" translate="yes" xml:space="preserve">
          <source>DoubleStream.flatMap()</source>
          <target state="translated">DoubleStream.flatMap()</target>
        </trans-unit>
        <trans-unit id="fa0a853385b02401e5fc9314c6c8e3976293632c" translate="yes" xml:space="preserve">
          <source>DoubleStream.forEach()</source>
          <target state="translated">DoubleStream.forEach()</target>
        </trans-unit>
        <trans-unit id="ee9ea3b82bd25138fbfc9530cf4de9e1b6fcb593" translate="yes" xml:space="preserve">
          <source>DoubleStream.forEachOrdered()</source>
          <target state="translated">DoubleStream.forEachOrdered()</target>
        </trans-unit>
        <trans-unit id="b33dbcc58d61e3346248e35759e4b6c968a6e798" translate="yes" xml:space="preserve">
          <source>DoubleStream.generate()</source>
          <target state="translated">DoubleStream.generate()</target>
        </trans-unit>
        <trans-unit id="59b75b22be5e7bc7a7484417b45d6c53a121e559" translate="yes" xml:space="preserve">
          <source>DoubleStream.iterate()</source>
          <target state="translated">DoubleStream.iterate()</target>
        </trans-unit>
        <trans-unit id="61f83e114c613791d2c399efc4aadc88239ecb8e" translate="yes" xml:space="preserve">
          <source>DoubleStream.iterator()</source>
          <target state="translated">DoubleStream.iterator()</target>
        </trans-unit>
        <trans-unit id="13361b8ca873639804330351fd0f70d531bbcfe8" translate="yes" xml:space="preserve">
          <source>DoubleStream.limit()</source>
          <target state="translated">DoubleStream.limit()</target>
        </trans-unit>
        <trans-unit id="b1608ce21096d935302d6ed179b1969c0a0458eb" translate="yes" xml:space="preserve">
          <source>DoubleStream.map()</source>
          <target state="translated">DoubleStream.map()</target>
        </trans-unit>
        <trans-unit id="9a2984416c24e437433e4fc7df0f8c2242f3cb09" translate="yes" xml:space="preserve">
          <source>DoubleStream.mapToInt()</source>
          <target state="translated">DoubleStream.mapToInt()</target>
        </trans-unit>
        <trans-unit id="fcb6a01a61a6e17b14c86ba04382fb46ea1dce6e" translate="yes" xml:space="preserve">
          <source>DoubleStream.mapToLong()</source>
          <target state="translated">DoubleStream.mapToLong()</target>
        </trans-unit>
        <trans-unit id="354c79c5b9d2fd8863d5261776bff3d5b153fedc" translate="yes" xml:space="preserve">
          <source>DoubleStream.mapToObj()</source>
          <target state="translated">DoubleStream.mapToObj()</target>
        </trans-unit>
        <trans-unit id="10435a09e12946c07c8f2659c9f45c41db315077" translate="yes" xml:space="preserve">
          <source>DoubleStream.max()</source>
          <target state="translated">DoubleStream.max()</target>
        </trans-unit>
        <trans-unit id="73ad2d16bb3340cf6ac5bd61d0134cb4c7e9ba8a" translate="yes" xml:space="preserve">
          <source>DoubleStream.min()</source>
          <target state="translated">DoubleStream.min()</target>
        </trans-unit>
        <trans-unit id="3607d6ad8e1333cb80fcc61521d1821d028a0f65" translate="yes" xml:space="preserve">
          <source>DoubleStream.noneMatch()</source>
          <target state="translated">DoubleStream.noneMatch()</target>
        </trans-unit>
        <trans-unit id="32571f821b4f1ef643f89b3adb34b0eabfd24ceb" translate="yes" xml:space="preserve">
          <source>DoubleStream.of()</source>
          <target state="translated">DoubleStream.of()</target>
        </trans-unit>
        <trans-unit id="7fc75e6de2d8afd545d9e1ed5054146a75e1fa8b" translate="yes" xml:space="preserve">
          <source>DoubleStream.parallel()</source>
          <target state="translated">DoubleStream.parallel()</target>
        </trans-unit>
        <trans-unit id="3a3ff26342a5035086bff0bcdaf3ceffdfa6f6a2" translate="yes" xml:space="preserve">
          <source>DoubleStream.peek()</source>
          <target state="translated">DoubleStream.peek()</target>
        </trans-unit>
        <trans-unit id="7e9bd0d1c82727e23affad716f34cbb9ad3676b2" translate="yes" xml:space="preserve">
          <source>DoubleStream.reduce()</source>
          <target state="translated">DoubleStream.reduce()</target>
        </trans-unit>
        <trans-unit id="465811de0bd7e1346de947d1a98d97366615c581" translate="yes" xml:space="preserve">
          <source>DoubleStream.sequential()</source>
          <target state="translated">DoubleStream.sequential()</target>
        </trans-unit>
        <trans-unit id="e08f09bc8d42c7f33c030d2a51b0914fe4dda01c" translate="yes" xml:space="preserve">
          <source>DoubleStream.skip()</source>
          <target state="translated">DoubleStream.skip()</target>
        </trans-unit>
        <trans-unit id="0299b97a4e5320933a51c0eb2d38981ae9c74141" translate="yes" xml:space="preserve">
          <source>DoubleStream.sorted()</source>
          <target state="translated">DoubleStream.sorted()</target>
        </trans-unit>
        <trans-unit id="5f47d2b1f2a9fb5f25f82f1c36d9eff69a6a02f7" translate="yes" xml:space="preserve">
          <source>DoubleStream.spliterator()</source>
          <target state="translated">DoubleStream.spliterator()</target>
        </trans-unit>
        <trans-unit id="2b7f4777996cf701db43c8dd0bba0c178b21c89a" translate="yes" xml:space="preserve">
          <source>DoubleStream.sum()</source>
          <target state="translated">DoubleStream.sum()</target>
        </trans-unit>
        <trans-unit id="32371d44fa192af4db1beeaf6b07724f3dee1bbe" translate="yes" xml:space="preserve">
          <source>DoubleStream.summaryStatistics()</source>
          <target state="translated">DoubleStream.summaryStatistics()</target>
        </trans-unit>
        <trans-unit id="b82c9d43db9c6ca497abe8b79304c2697e355890" translate="yes" xml:space="preserve">
          <source>DoubleStream.toArray()</source>
          <target state="translated">DoubleStream.toArray()</target>
        </trans-unit>
        <trans-unit id="7dab5923a94c0589ac7475aec25970cf67d124c2" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics</source>
          <target state="translated">DoubleSummaryStatistics</target>
        </trans-unit>
        <trans-unit id="338be86fedb3e7e75f237c85db663dd33225fb82" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.accept()</source>
          <target state="translated">DoubleSummaryStatistics.accept()</target>
        </trans-unit>
        <trans-unit id="4f6e3d4d65aa57ae072a769c6729757eb10844db" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.combine()</source>
          <target state="translated">DoubleSummaryStatistics.combine()</target>
        </trans-unit>
        <trans-unit id="1899ba9ed77b014529574a455deb54ad93aa7853" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getAverage()</source>
          <target state="translated">DoubleSummaryStatistics.getAverage()</target>
        </trans-unit>
        <trans-unit id="510a920db10155fcbc9e7fda7501acdf5ac24b92" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getCount()</source>
          <target state="translated">DoubleSummaryStatistics.getCount()</target>
        </trans-unit>
        <trans-unit id="a714e4ebfaf37c4c07216ac3a018689fb85396a4" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getMax()</source>
          <target state="translated">DoubleSummaryStatistics.getMax()</target>
        </trans-unit>
        <trans-unit id="0d6a6ad97fbe07d76a010f46c2b424b63c88b045" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getMin()</source>
          <target state="translated">DoubleSummaryStatistics.getMin()</target>
        </trans-unit>
        <trans-unit id="afcd83df2f6cd4eca266ea2afa6647f5f3c71699" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getSum()</source>
          <target state="translated">DoubleSummaryStatistics.getSum()</target>
        </trans-unit>
        <trans-unit id="646a70972ca082c518bca932c96535819d629106" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.toString()</source>
          <target state="translated">DoubleSummaryStatistics.toString()</target>
        </trans-unit>
        <trans-unit id="528a21f044bb846434c701b5d9feffc8beed49ed" translate="yes" xml:space="preserve">
          <source>DoubleSupplier</source>
          <target state="translated">DoubleSupplier</target>
        </trans-unit>
        <trans-unit id="ed377b0d1122d9418827e82671473c1372164177" translate="yes" xml:space="preserve">
          <source>DoubleSupplier.getAsDouble()</source>
          <target state="translated">DoubleSupplier.getAsDouble()</target>
        </trans-unit>
        <trans-unit id="0f24012c09999d4eb07dd33fd48b2e39bf22d65e" translate="yes" xml:space="preserve">
          <source>DoubleToIntFunction</source>
          <target state="translated">DoubleToIntFunction</target>
        </trans-unit>
        <trans-unit id="7d2ed9699057c1f9c13e504e4779536fa44d1770" translate="yes" xml:space="preserve">
          <source>DoubleToIntFunction.applyAsInt()</source>
          <target state="translated">DoubleToIntFunction.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="ea24ed983005ef2c44289f69d8352c8050658ad1" translate="yes" xml:space="preserve">
          <source>DoubleToLongFunction</source>
          <target state="translated">DoubleToLongFunction</target>
        </trans-unit>
        <trans-unit id="a083addc7768bdb2808b637dbb44f82aa0cc4ac7" translate="yes" xml:space="preserve">
          <source>DoubleToLongFunction.applyAsLong()</source>
          <target state="translated">DoubleToLongFunction.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="39432ca436cbaa15b5b576f20b33b2a3cbd6174e" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator</source>
          <target state="translated">DoubleUnaryOperator</target>
        </trans-unit>
        <trans-unit id="5a4adcb9c50257f6a018ae22fb36209f50688fbb" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator.andThen()</source>
          <target state="translated">DoubleUnaryOperator.andThen()</target>
        </trans-unit>
        <trans-unit id="173bd7bbaf1b9e6b4b6c6faa529fa2638bc697ba" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator.applyAsDouble()</source>
          <target state="translated">DoubleUnaryOperator.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="754bcda204e3be18d6194aa5bf3096b71202370e" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator.compose()</source>
          <target state="translated">DoubleUnaryOperator.compose()</target>
        </trans-unit>
        <trans-unit id="5ee39d0585da9927ad895c8a77288133c0a5233f" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator.identity()</source>
          <target state="translated">DoubleUnaryOperator.identity()</target>
        </trans-unit>
        <trans-unit id="126f3fb9c62f7dac514e41acbfdeb939833f7b5c" translate="yes" xml:space="preserve">
          <source>Doubly-linked list implementation of the &lt;code&gt;List&lt;/code&gt; and &lt;code&gt;Deque&lt;/code&gt; interfaces.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; 및 &lt;code&gt;Deque&lt;/code&gt; 인터페이스 의 이중 연결 목록 구현 .</target>
        </trans-unit>
        <trans-unit id="d9709afd00d9e37c56908202de053e0eab2bab79" translate="yes" xml:space="preserve">
          <source>Doubly-linked list implementation of the &lt;code&gt;List&lt;/code&gt; and &lt;code&gt;Deque&lt;/code&gt; interfaces. Implements all optional list operations, and permits all elements (including &lt;code&gt;null&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; 및 &lt;code&gt;Deque&lt;/code&gt; 인터페이스 의 이중 연결 목록 구현 . 모든 선택적 목록 작업을 구현하고 모든 요소 ( &lt;code&gt;null&lt;/code&gt; 포함 )를 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="85bc07ab2148597e58cde588340a55d4100fd913" translate="yes" xml:space="preserve">
          <source>Drain any buffered data in ObjectOutputStream. Similar to flush but does not propagate the flush to the underlying stream.</source>
          <target state="translated">ObjectOutputStream에서 버퍼링 된 데이터를 모두 비 웁니다. 플러시와 유사하지만 플러시를 기본 스트림으로 전파하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0f09410a3fe6ab85f1ee56e1e295692105ab4e1a" translate="yes" xml:space="preserve">
          <source>Drains queued data from the line by continuing data I/O until the data line's internal buffer has been emptied. This method blocks until the draining is complete. Because this is a blocking method, it should be used with care. If &lt;code&gt;drain()&lt;/code&gt; is invoked on a stopped line that has data in its queue, the method will block until the line is running and the data queue becomes empty. If &lt;code&gt;drain()&lt;/code&gt; is invoked by one thread, and another continues to fill the data queue, the operation will not complete. This method always returns when the data line is closed.</source>
          <target state="translated">데이터 라인의 내부 버퍼가 비워 질 때까지 데이터 I / O를 계속하여 라인에서 데이터를 대기시킵니다. 이 방법은 배수가 완료 될 때까지 차단됩니다. 이 방법은 차단 방법이므로주의해서 사용해야합니다. 경우 &lt;code&gt;drain()&lt;/code&gt; 의 큐에 데이터가있는 라인이 정지 호출 라인이 실행될 때까지 상기 방법은 차단되고, 데이터 큐가 비어진다. 경우 &lt;code&gt;drain()&lt;/code&gt; 하나 개의 스레드에 의해 호출 및 다른 데이터 큐를 작성하는 것을 계속하고, 동작이 완료되지 않은 것이다. 이 메소드는 항상 데이터 라인이 닫힐 때 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="cd12066e84b4f03d7fb3bbe72e97f25ce4490562" translate="yes" xml:space="preserve">
          <source>Drop membership.</source>
          <target state="translated">멤버십을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="56d82ff49c8bbfbd7b3e4f4ffa2789b0203b85d6" translate="yes" xml:space="preserve">
          <source>Due to polymorphism of both factories and sockets, different kinds of sockets can be used by the same application code just by passing it different kinds of factories.</source>
          <target state="translated">팩토리와 소켓의 다형성으로 인해 다른 종류의 소켓을 다른 종류의 팩토리에 전달하는 것만으로 동일한 응용 프로그램 코드에서 다른 종류의 소켓을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12a38894d57d3b3784bfa765fc5e5f802d04979e" translate="yes" xml:space="preserve">
          <source>Due to some methods of allocating certain styles of IPv6 addresses, it will be common for addresses to contain long strings of zero bits. In order to make writing addresses containing zero bits easier, a special syntax is available to compress the zeros. The use of &quot;::&quot; indicates multiple groups of 16-bits of zeros. The &quot;::&quot; can only appear once in an address. The &quot;::&quot; can also be used to compress the leading and/or trailing zeros in an address. For example,</source>
          <target state="translated">IPv6 주소의 특정 스타일을 할당하는 일부 방법으로 인해 주소에 긴 문자열의 0 비트가 포함되는 것이 일반적입니다. 0 비트를 포함하는 주소를보다 쉽게 ​​작성하기 위해 0을 압축하는 특수 구문을 사용할 수 있습니다. &quot;::&quot;의 사용은 여러 그룹의 16 비트 0을 나타냅니다. &quot;::&quot;는 주소에 한 번만 나타날 수 있습니다. &quot;::&quot;을 사용하여 주소에서 선행 및 / 또는 후행 0을 압축 할 수도 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="c221b3b5d45aa6f2b51d2ff7ad772006b7992fe4" translate="yes" xml:space="preserve">
          <source>Due to the inherent delay between key cancellation and channel deregistration, a channel may remain registered for some time after all of its keys have been cancelled. A channel may also remain registered for some time after it is closed.</source>
          <target state="translated">키 취소와 채널 등록 취소 사이의 고유 한 지연으로 인해 모든 키가 취소 된 후 채널이 일정 시간 동안 계속 유지 될 수 있습니다. 채널을 닫은 후에도 채널이 등록 된 상태로 유지 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74d5cf48b69cd525a6a5e34930693c1ebc22c7ef" translate="yes" xml:space="preserve">
          <source>Due to the inherent race condition in this method, it is recommended that the method only be used for debugging and monitoring purposes.</source>
          <target state="translated">이 방법의 고유 경쟁 조건으로 인해이 방법은 디버깅 및 모니터링 목적으로 만 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="ce9b8e61ee744cc30663ea7690cda15d17521ec4" translate="yes" xml:space="preserve">
          <source>Due to the platform-dependent nature of the behavior of this constructor, extreme care should be exercised in its use. The thread stack size necessary to perform a given computation will likely vary from one JRE implementation to another. In light of this variation, careful tuning of the stack size parameter may be required, and the tuning may need to be repeated for each JRE implementation on which an application is to run.</source>
          <target state="translated">이 생성자의 동작은 플랫폼에 따라 다르므로 사용시 각별한주의가 필요합니다. 주어진 계산을 수행하는 데 필요한 스레드 스택 크기는 JRE 구현마다 다를 수 있습니다. 이러한 변형에 비추어, 스택 크기 파라미터의 신중한 튜닝이 필요할 수 있으며, 애플리케이션이 실행될 각각의 JRE 구현에 대해 튜닝이 반복 될 필요가있다.</target>
        </trans-unit>
        <trans-unit id="ef947e3aef3170e26167c58d17a81acc82301605" translate="yes" xml:space="preserve">
          <source>Dungeon</source>
          <target state="translated">Dungeon</target>
        </trans-unit>
        <trans-unit id="611f9b90ae8fc0f6a7d8b85d23b7994ad4acd078" translate="yes" xml:space="preserve">
          <source>DuplicateFormatFlagsException</source>
          <target state="translated">DuplicateFormatFlagsException</target>
        </trans-unit>
        <trans-unit id="3c356dce20032bdfcd696e3cb6b670fd68285914" translate="yes" xml:space="preserve">
          <source>DuplicateFormatFlagsException.getFlags()</source>
          <target state="translated">DuplicateFormatFlagsException.getFlags()</target>
        </trans-unit>
        <trans-unit id="d9312f6a6f29fc77bb6453b2c755fe17639eb33f" translate="yes" xml:space="preserve">
          <source>DuplicateFormatFlagsException.getMessage()</source>
          <target state="translated">DuplicateFormatFlagsException.getMessage()</target>
        </trans-unit>
        <trans-unit id="1370004da76fa4f3b7a5180fd5436065ef4c7d5b" translate="yes" xml:space="preserve">
          <source>Duration</source>
          <target state="translated">Duration</target>
        </trans-unit>
        <trans-unit id="7df11f943d5f539171b9117f82e494d1ad59e377" translate="yes" xml:space="preserve">
          <source>Duration and Period</source>
          <target state="translated">기간과 기간</target>
        </trans-unit>
        <trans-unit id="cd9025826b1cd7e702cbe93176d1b668d05effb5" translate="yes" xml:space="preserve">
          <source>Duration.abs()</source>
          <target state="translated">Duration.abs()</target>
        </trans-unit>
        <trans-unit id="aa312e8a098ab875b809bf9534b814af64a9759e" translate="yes" xml:space="preserve">
          <source>Duration.addTo()</source>
          <target state="translated">Duration.addTo()</target>
        </trans-unit>
        <trans-unit id="b840cd969d2dd313bb6373719b36c365b3b2b244" translate="yes" xml:space="preserve">
          <source>Duration.between()</source>
          <target state="translated">Duration.between()</target>
        </trans-unit>
        <trans-unit id="23435c649b87c9dcf280ac63f198540368cc5231" translate="yes" xml:space="preserve">
          <source>Duration.compareTo()</source>
          <target state="translated">Duration.compareTo()</target>
        </trans-unit>
        <trans-unit id="2d2a660b05a6946f7e8d68d3f0777b4f3ce04748" translate="yes" xml:space="preserve">
          <source>Duration.dividedBy()</source>
          <target state="translated">Duration.dividedBy()</target>
        </trans-unit>
        <trans-unit id="2497f0dd453a7e9b0dfcff8deeafd55f16abef7a" translate="yes" xml:space="preserve">
          <source>Duration.equals()</source>
          <target state="translated">Duration.equals()</target>
        </trans-unit>
        <trans-unit id="f3398ac63a7ecd9599e44f8ad8c1ad4b2d38f41f" translate="yes" xml:space="preserve">
          <source>Duration.from()</source>
          <target state="translated">Duration.from()</target>
        </trans-unit>
        <trans-unit id="b9300aa117c5a95374dea29a47351a829433f32d" translate="yes" xml:space="preserve">
          <source>Duration.get()</source>
          <target state="translated">Duration.get()</target>
        </trans-unit>
        <trans-unit id="fb5a4179ef4d6e29d337caeaa92d865aa31d3bec" translate="yes" xml:space="preserve">
          <source>Duration.getNano()</source>
          <target state="translated">Duration.getNano()</target>
        </trans-unit>
        <trans-unit id="1491e6edfd8090740291ea563d04af0851984351" translate="yes" xml:space="preserve">
          <source>Duration.getSeconds()</source>
          <target state="translated">Duration.getSeconds()</target>
        </trans-unit>
        <trans-unit id="4fd70e5cd0d11b8f6084016b3d267af614d8071e" translate="yes" xml:space="preserve">
          <source>Duration.getUnits()</source>
          <target state="translated">Duration.getUnits()</target>
        </trans-unit>
        <trans-unit id="affe8075b36dabdb8d118abc7742ad8e66347796" translate="yes" xml:space="preserve">
          <source>Duration.hashCode()</source>
          <target state="translated">Duration.hashCode()</target>
        </trans-unit>
        <trans-unit id="cf9408c9312f0888ff5e9afe3420e94b8e3e64b4" translate="yes" xml:space="preserve">
          <source>Duration.isNegative()</source>
          <target state="translated">Duration.isNegative()</target>
        </trans-unit>
        <trans-unit id="f92190a9658d0f1f4dbc1ceddd1fb62c3a26a136" translate="yes" xml:space="preserve">
          <source>Duration.isZero()</source>
          <target state="translated">Duration.isZero()</target>
        </trans-unit>
        <trans-unit id="9aa7c6d3eb42b70a0c389e693126098f8700dabb" translate="yes" xml:space="preserve">
          <source>Duration.minus()</source>
          <target state="translated">Duration.minus()</target>
        </trans-unit>
        <trans-unit id="d5fdcf8e2c10a9e72d3bc61eedc971b6e94f20a9" translate="yes" xml:space="preserve">
          <source>Duration.minusDays()</source>
          <target state="translated">Duration.minusDays()</target>
        </trans-unit>
        <trans-unit id="cbf93ca0303206b6934c54d2880c361f65e3c9f7" translate="yes" xml:space="preserve">
          <source>Duration.minusHours()</source>
          <target state="translated">Duration.minusHours()</target>
        </trans-unit>
        <trans-unit id="714723ec633026c398af7e42f32a875f8b421957" translate="yes" xml:space="preserve">
          <source>Duration.minusMillis()</source>
          <target state="translated">Duration.minusMillis()</target>
        </trans-unit>
        <trans-unit id="9e4aaa71aae9a99d50359ee427e3d219527a94de" translate="yes" xml:space="preserve">
          <source>Duration.minusMinutes()</source>
          <target state="translated">Duration.minusMinutes()</target>
        </trans-unit>
        <trans-unit id="45f2d8c7184ad62253756e68abae7f2a1f55c5b1" translate="yes" xml:space="preserve">
          <source>Duration.minusNanos()</source>
          <target state="translated">Duration.minusNanos()</target>
        </trans-unit>
        <trans-unit id="8dc28039173039b68b02be72df57ce37329dc7cd" translate="yes" xml:space="preserve">
          <source>Duration.minusSeconds()</source>
          <target state="translated">Duration.minusSeconds()</target>
        </trans-unit>
        <trans-unit id="1d5bfcef31cdc402c2b155550b5a9f42d4618485" translate="yes" xml:space="preserve">
          <source>Duration.multipliedBy()</source>
          <target state="translated">Duration.multipliedBy()</target>
        </trans-unit>
        <trans-unit id="b7c29c0849121b016118709e833f51b8f58413c0" translate="yes" xml:space="preserve">
          <source>Duration.negated()</source>
          <target state="translated">Duration.negated()</target>
        </trans-unit>
        <trans-unit id="d6a2a258e1c6b5872b5f596a5b086b2a95999bba" translate="yes" xml:space="preserve">
          <source>Duration.of()</source>
          <target state="translated">Duration.of()</target>
        </trans-unit>
        <trans-unit id="258409e04ff6722fe76b29a1178060ae2a778710" translate="yes" xml:space="preserve">
          <source>Duration.ofDays()</source>
          <target state="translated">Duration.ofDays()</target>
        </trans-unit>
        <trans-unit id="09d0b0487dc8b6d21930a5b1a36c98c6ca059d4a" translate="yes" xml:space="preserve">
          <source>Duration.ofHours()</source>
          <target state="translated">Duration.ofHours()</target>
        </trans-unit>
        <trans-unit id="ed9ca18062becd1d5cfda9cd3b3243cea165327d" translate="yes" xml:space="preserve">
          <source>Duration.ofMillis()</source>
          <target state="translated">Duration.ofMillis()</target>
        </trans-unit>
        <trans-unit id="50f5f4c2e0db0f082fa09cdc5fb70ef41b1f29b8" translate="yes" xml:space="preserve">
          <source>Duration.ofMinutes()</source>
          <target state="translated">Duration.ofMinutes()</target>
        </trans-unit>
        <trans-unit id="04acb65dc39265ee5d19cf41cf7db19811c52d34" translate="yes" xml:space="preserve">
          <source>Duration.ofNanos()</source>
          <target state="translated">Duration.ofNanos()</target>
        </trans-unit>
        <trans-unit id="838a4fa4ad925136a1d4d5402b3efbf8c14b0850" translate="yes" xml:space="preserve">
          <source>Duration.ofSeconds()</source>
          <target state="translated">Duration.ofSeconds()</target>
        </trans-unit>
        <trans-unit id="84eb67d030f05fe14d70c639d648fe64c4dfbffc" translate="yes" xml:space="preserve">
          <source>Duration.parse()</source>
          <target state="translated">Duration.parse()</target>
        </trans-unit>
        <trans-unit id="f8651625c717f1a7818151031436eac646482f4e" translate="yes" xml:space="preserve">
          <source>Duration.plus()</source>
          <target state="translated">Duration.plus()</target>
        </trans-unit>
        <trans-unit id="5fdd8a38b49ccd1f28d316e21294be7e70d9d3a2" translate="yes" xml:space="preserve">
          <source>Duration.plusDays()</source>
          <target state="translated">Duration.plusDays()</target>
        </trans-unit>
        <trans-unit id="faa749810ff2ba6c49fe432ba0ae6e0828d83ffc" translate="yes" xml:space="preserve">
          <source>Duration.plusHours()</source>
          <target state="translated">Duration.plusHours()</target>
        </trans-unit>
        <trans-unit id="116ae90cecb7c256944073754d8f498218cf3f96" translate="yes" xml:space="preserve">
          <source>Duration.plusMillis()</source>
          <target state="translated">Duration.plusMillis()</target>
        </trans-unit>
        <trans-unit id="7281e3ae17670a7a4f033392e1454ec6d2f0eda6" translate="yes" xml:space="preserve">
          <source>Duration.plusMinutes()</source>
          <target state="translated">Duration.plusMinutes()</target>
        </trans-unit>
        <trans-unit id="307fb9852b8a8d087ba24ae7a3819d8ecdc47b0e" translate="yes" xml:space="preserve">
          <source>Duration.plusNanos()</source>
          <target state="translated">Duration.plusNanos()</target>
        </trans-unit>
        <trans-unit id="5bdb5ae4ad6b604723db04eaeff74c85ed28f7a6" translate="yes" xml:space="preserve">
          <source>Duration.plusSeconds()</source>
          <target state="translated">Duration.plusSeconds()</target>
        </trans-unit>
        <trans-unit id="f9c05a96f7833b65df679ed69f4f6bbba84b55c1" translate="yes" xml:space="preserve">
          <source>Duration.subtractFrom()</source>
          <target state="translated">Duration.subtractFrom()</target>
        </trans-unit>
        <trans-unit id="fca97be59853ebe5716f826aec5de090bd060154" translate="yes" xml:space="preserve">
          <source>Duration.toDays()</source>
          <target state="translated">Duration.toDays()</target>
        </trans-unit>
        <trans-unit id="d022b07e8f4e7cc5b0776021b84e5644805d00e2" translate="yes" xml:space="preserve">
          <source>Duration.toHours()</source>
          <target state="translated">Duration.toHours()</target>
        </trans-unit>
        <trans-unit id="ea2713ff82ff0496b7fb1aef3f5eca7927287c72" translate="yes" xml:space="preserve">
          <source>Duration.toMillis()</source>
          <target state="translated">Duration.toMillis()</target>
        </trans-unit>
        <trans-unit id="fcf5200687fb4cf46a5c2d5187012eee190cf30f" translate="yes" xml:space="preserve">
          <source>Duration.toMinutes()</source>
          <target state="translated">Duration.toMinutes()</target>
        </trans-unit>
        <trans-unit id="09e88c4380b27b903b1943dca4ed67bacbe28633" translate="yes" xml:space="preserve">
          <source>Duration.toNanos()</source>
          <target state="translated">Duration.toNanos()</target>
        </trans-unit>
        <trans-unit id="7537209aeb73ea3454c97bc3b1dcba218d2b40ba" translate="yes" xml:space="preserve">
          <source>Duration.toString()</source>
          <target state="translated">Duration.toString()</target>
        </trans-unit>
        <trans-unit id="f716f82136ea9ad147dce8cd37dcb5fd69fc3e57" translate="yes" xml:space="preserve">
          <source>Duration.withNanos()</source>
          <target state="translated">Duration.withNanos()</target>
        </trans-unit>
        <trans-unit id="ee62ef8ea389fa2590ee0c39af18c07b20503601" translate="yes" xml:space="preserve">
          <source>Duration.withSeconds()</source>
          <target state="translated">Duration.withSeconds()</target>
        </trans-unit>
        <trans-unit id="110302dac043c24a9c4b17beddaccf3e8d190652" translate="yes" xml:space="preserve">
          <source>Durations and periods differ in their treatment of daylight savings time when added to &lt;a href=&quot;zoneddatetime&quot;&gt;&lt;code&gt;ZonedDateTime&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;Duration&lt;/code&gt; will add an exact number of seconds, thus a duration of one day is always exactly 24 hours. By contrast, a &lt;code&gt;Period&lt;/code&gt; will add a conceptual day, trying to maintain the local time.</source>
          <target state="translated">기간과 기간은 &lt;a href=&quot;zoneddatetime&quot;&gt; &lt;code&gt;ZonedDateTime&lt;/code&gt; 에&lt;/a&gt; 추가 될 때 일광 절약 시간 처리 방식이 다릅니다 . &lt;code&gt;Duration&lt;/code&gt; 때문에 1 일의 기간은 항상 정확히 24 시간 (초)의 정확한 수를 추가합니다. 반대로 &lt;code&gt;Period&lt;/code&gt; 은 현지 시간을 유지하기 위해 개념적 날을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="5baaeef5b81524f57c1b5477112c0d961d0ffae1" translate="yes" xml:space="preserve">
          <source>During annotation processing, operating on incomplete or erroneous programs is necessary; however, there are fewer guarantees about the nature of the resulting model. If the source code is not syntactically well-formed or has some other irrecoverable error that could not be removed by the generation of new types, a model may or may not be provided as a quality of implementation issue. If a program is syntactically valid but erroneous in some other fashion, any returned model must have no less information than if all the method bodies in the program were replaced by &lt;code&gt;&quot;throw
 new RuntimeException();&quot;&lt;/code&gt;. If a program refers to a missing type XYZ, the returned model must contain no less information than if the declaration of type XYZ were assumed to be &lt;code&gt;&quot;class XYZ {}&quot;&lt;/code&gt;, &lt;code&gt;&quot;interface XYZ {}&quot;&lt;/code&gt;, &lt;code&gt;&quot;enum XYZ {}&quot;&lt;/code&gt;, or &lt;code&gt;&quot;@interface XYZ {}&quot;&lt;/code&gt;. If a program refers to a missing type &lt;code&gt;XYZ&amp;lt;K1, ... ,Kn&amp;gt;&lt;/code&gt;, the returned model must contain no less information than if the declaration of XYZ were assumed to be &lt;code&gt;&quot;class XYZ&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt; or &lt;code&gt;&quot;interface XYZ&amp;lt;T1,
 ... ,Tn&amp;gt; {}&quot;&lt;/code&gt;</source>
          <target state="translated">주석 처리 중에는 불완전하거나 잘못된 프로그램에서 작업해야합니다. 그러나 결과 모델의 특성에 대한 보장은 적습니다. 소스 코드의 구문이 제대로 구성되지 않았거나 새로운 유형의 생성으로 제거 할 수없는 복구 할 수없는 다른 오류가있는 경우 모델이 구현 품질 문제로 제공되거나 제공되지 않을 수 있습니다. 프로그램이 구문 상 유효하지만 다른 방식으로 오류가있는 경우, 리턴 된 모델은 프로그램의 모든 메소드 본문이 &lt;code&gt;&quot;throw new RuntimeException();&quot;&lt;/code&gt; 으로 대체 된 경우보다 적은 정보를 가져야합니다 . . 프로그램이 누락 된 XYZ 유형을 참조하는 경우, 리턴 된 모델에는 XYZ 유형의 선언이 &lt;code&gt;&quot;class XYZ {}&quot;&lt;/code&gt; 로 가정 된 경우보다 적은 정보를 포함해야합니다 . &lt;code&gt;&quot;interface XYZ {}&quot;&lt;/code&gt; , &lt;code&gt;&quot;enum XYZ {}&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;@interface XYZ {}&quot;&lt;/code&gt; 입니다. 프로그램이 누락 된 &lt;code&gt;XYZ&amp;lt;K1, ... ,Kn&amp;gt;&lt;/code&gt; 유형을 참조하는 경우 , 리턴 된 모델에는 XYZ 선언이 &lt;code&gt;&quot;class XYZ&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;interface XYZ&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73c68ded4bdace8585d879839684caafefa0d673" translate="yes" xml:space="preserve">
          <source>During construction a provider may safely access files associated with the default provider but care needs to be taken to avoid circular loading of other installed providers. If circular loading of installed providers is detected then an unspecified error is thrown.</source>
          <target state="translated">구성하는 동안 공급자는 기본 공급자와 관련된 파일에 안전하게 액세스 할 수 있지만 설치된 다른 공급자의 순환로드를 피하기 위해주의를 기울여야합니다. 설치된 제공자의 순환로드가 감지되면 지정되지 않은 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="aab994d11cc97346f4de77f9ddf9299dcb995a3b" translate="yes" xml:space="preserve">
          <source>During construction of the call site, the &lt;code&gt;createTargetHook&lt;/code&gt; is invoked to produce the actual target, as if by a call of the form &lt;code&gt;(MethodHandle) createTargetHook.invoke(this)&lt;/code&gt;.</source>
          <target state="translated">호출 사이트를 구성하는 동안 &lt;code&gt;(MethodHandle) createTargetHook.invoke(this)&lt;/code&gt; 형식의 호출에 의한 것처럼 실제 대상을 생성하기 위해 &lt;code&gt;createTargetHook&lt;/code&gt; 이 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="2ee3bdf7216945802928da957e4f64abef1a8bbd" translate="yes" xml:space="preserve">
          <source>During deserialization, readResolve adds extensions as described in &lt;a href=&quot;#special_cases_constructor&quot;&gt;Special Cases&lt;/a&gt;, only for the two cases th_TH_TH and ja_JP_JP.</source>
          <target state="translated">역 직렬화 중에 readResolve는 &lt;a href=&quot;#special_cases_constructor&quot;&gt;특별한 경우에&lt;/a&gt; 설명 된대로 th_TH_TH 및 ja_JP_JP의 경우에만 확장을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="5bfd28f5cdef20bd56b959fde27381521c4de273" translate="yes" xml:space="preserve">
          <source>During deserialization, the fields of non-serializable classes will be initialized using the public or protected no-arg constructor of the class. A no-arg constructor must be accessible to the subclass that is serializable. The fields of serializable subclasses will be restored from the stream.</source>
          <target state="translated">직렬화 해제 중 직렬화 불가능 클래스의 필드는 클래스의 공용 또는 보호 된 인수 없음 생성자를 사용하여 초기화됩니다. 인수가없는 생성자는 직렬화 가능한 서브 클래스에 액세스 할 수 있어야합니다. 직렬화 가능 서브 클래스의 필드가 스트림에서 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="ceb751d5e03d16820dfaa9405c9d350874e914b8" translate="yes" xml:space="preserve">
          <source>During each run of an annotation processing tool, a file with a given pathname may be created only once. If that file already exists before the first attempt to create it, the old contents will be deleted. Any subsequent attempt to create the same file during a run will throw a &lt;a href=&quot;filerexception&quot;&gt;&lt;code&gt;FilerException&lt;/code&gt;&lt;/a&gt;, as will attempting to create both a class file and source file for the same type name or same package name. The &lt;a href=&quot;processor&quot;&gt;initial inputs&lt;/a&gt; to the tool are considered to be created by the zeroth round; therefore, attempting to create a source or class file corresponding to one of those inputs will result in a &lt;a href=&quot;filerexception&quot;&gt;&lt;code&gt;FilerException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주석 처리 도구를 실행할 때마다 지정된 경로 이름을 가진 파일을 한 번만 만들 수 있습니다. 파일을 처음 작성하기 전에 해당 파일이 이미 존재하면 이전 내용이 삭제됩니다. 실행 중에 동일한 파일을 작성하려는 후속 시도 는 동일한 유형 이름 또는 동일한 패키지 이름에 대해 클래스 파일과 소스 파일을 작성하려고 시도하는 것과 같이 &lt;a href=&quot;filerexception&quot;&gt; &lt;code&gt;FilerException&lt;/code&gt; &lt;/a&gt; 을 발생시킵니다. 공구에 대한 &lt;a href=&quot;processor&quot;&gt;초기 입력&lt;/a&gt; 은 0 번째 라운드에서 생성 된 것으로 간주됩니다. 따라서 해당 입력 중 하나에 해당하는 소스 또는 클래스 파일을 작성하려고하면 &lt;a href=&quot;filerexception&quot;&gt; &lt;code&gt;FilerException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="6cf3cfdd5430b93d98f5fbd3648fab52ea500d64" translate="yes" xml:space="preserve">
          <source>During each selection operation, keys may be added to and removed from a selector's selected-key set and may be removed from its key and cancelled-key sets. Selection is performed by the &lt;a href=&quot;selector#select--&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;selector#select-long-&quot;&gt;&lt;code&gt;select(long)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;selector#selectNow--&quot;&gt;&lt;code&gt;selectNow()&lt;/code&gt;&lt;/a&gt; methods, and involves three steps:</source>
          <target state="translated">각각의 선택 동작 동안, 키는 선택기의 선택된 키 세트에 추가 및 제거 될 수 있고, 키 및 취소 된 키 세트에서 제거 될 수있다. 선택은 &lt;a href=&quot;selector#select--&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;selector#select-long-&quot;&gt; &lt;code&gt;select(long)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;selector#selectNow--&quot;&gt; &lt;code&gt;selectNow()&lt;/code&gt; &lt;/a&gt; 메소드에 의해 수행되며 세 단계로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="7d9e243c16cda77441eb0ed9e930e56f1971cc38" translate="yes" xml:space="preserve">
          <source>During formatting, if the source logger has a localization ResourceBundle and if that ResourceBundle has an entry for this message string, then the message string is replaced with the localized value.</source>
          <target state="translated">포맷하는 동안 소스 로거에 현지화 ResourceBundle이 있고 해당 ResourceBundle에이 메시지 문자열에 대한 항목이 있으면 메시지 문자열이 현지화 된 값으로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="b6963c06744c4cb921f8204e451cdd87da55bf7d" translate="yes" xml:space="preserve">
          <source>During formatting, the chronology is obtained from the temporal object being formatted, which may have been overridden by &lt;a href=&quot;datetimeformatter#withChronology-java.time.chrono.Chronology-&quot;&gt;&lt;code&gt;DateTimeFormatter.withChronology(Chronology)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">형식을 지정하는 동안 &lt;a href=&quot;datetimeformatter#withChronology-java.time.chrono.Chronology-&quot;&gt; &lt;code&gt;DateTimeFormatter.withChronology(Chronology)&lt;/code&gt; &lt;/a&gt; 형식은 DateTimeFormatter.withChronology (Chronology) 로 재정의되었을 수있는 시간 개체에서 시간 순서를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="3fe08a816cee454a7061ca9b0c45783e70300ef1" translate="yes" xml:space="preserve">
          <source>During formatting, the chronology is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#chronology--&quot;&gt;&lt;code&gt;TemporalQueries.chronology()&lt;/code&gt;&lt;/a&gt;. It will be printed using the result of &lt;a href=&quot;../chrono/chronology#getId--&quot;&gt;&lt;code&gt;Chronology.getId()&lt;/code&gt;&lt;/a&gt;. If the chronology cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">서식을 지정하는 동안 &lt;a href=&quot;../temporal/temporalqueries#chronology--&quot;&gt; &lt;code&gt;TemporalQueries.chronology()&lt;/code&gt; &lt;/a&gt; 로 시간 을 쿼리하는 것과 동일한 메커니즘을 사용하여 연대기를 얻습니다 . &lt;a href=&quot;../chrono/chronology#getId--&quot;&gt; &lt;code&gt;Chronology.getId()&lt;/code&gt; &lt;/a&gt; 의 결과를 사용하여 인쇄됩니다 . 연대기를 얻을 수 없으면 포맷터 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f2ec18985e92563f7bff4cbe40bd1216047db6f6" translate="yes" xml:space="preserve">
          <source>During formatting, the decorated element will be output and then padded to the specified width. An exception will be thrown during formatting if the pad width is exceeded.</source>
          <target state="translated">서식을 지정하는 동안 데코레이션 된 요소가 출력 된 다음 지정된 너비로 채워집니다. 패드 너비를 초과하면 포맷 중에 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8ac3f1128556516e29fb027d1ef90561f196b709" translate="yes" xml:space="preserve">
          <source>During formatting, the offset is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#offset--&quot;&gt;&lt;code&gt;TemporalQueries.offset()&lt;/code&gt;&lt;/a&gt;. If the offset cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">포맷하는 동안 &lt;a href=&quot;../temporal/temporalqueries#offset--&quot;&gt; &lt;code&gt;TemporalQueries.offset()&lt;/code&gt; &lt;/a&gt; temporal을 쿼리하는 것과 동일한 메커니즘을 사용하여 오프셋을 얻습니다 . 오프셋을 얻을 수 없으면 포맷터의 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="85927a4e03a6fbb6585d9de9788314d845c99776" translate="yes" xml:space="preserve">
          <source>During formatting, the offset is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#offset--&quot;&gt;&lt;code&gt;TemporalQueries.offset()&lt;/code&gt;&lt;/a&gt;. It will be printed using the format defined below. If the offset cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">포맷하는 동안 &lt;a href=&quot;../temporal/temporalqueries#offset--&quot;&gt; &lt;code&gt;TemporalQueries.offset()&lt;/code&gt; &lt;/a&gt; temporal을 쿼리하는 것과 동일한 메커니즘을 사용하여 오프셋을 얻습니다 . 아래에 정의 된 형식으로 인쇄됩니다. 오프셋을 얻을 수 없으면 포맷터의 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c857ac6bff4d5a1296b0a77002e3ec1931ab0b57" translate="yes" xml:space="preserve">
          <source>During formatting, the value is obtained and checked that it is in the valid range. If text is not available for the value then it is output as a number. During parsing, the parser will match against the map of text and numeric values.</source>
          <target state="translated">포맷하는 동안 값을 가져 와서 유효한 범위에 있는지 확인합니다. 값에 텍스트를 사용할 수 없으면 숫자로 출력됩니다. 구문 분석 중 구문 분석기는 텍스트 및 숫자 값의 맵과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="6328c4cece7134fad021cacd94431ba5256de481" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zone--&quot;&gt;&lt;code&gt;TemporalQueries.zone()&lt;/code&gt;&lt;/a&gt;. It will be printed using the result of &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;ZoneId.getId()&lt;/code&gt;&lt;/a&gt;. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">포맷하는 동안 &lt;a href=&quot;../temporal/temporalqueries#zone--&quot;&gt; &lt;code&gt;TemporalQueries.zone()&lt;/code&gt; &lt;/a&gt; temporal을 쿼리하는 것과 동일한 메커니즘을 사용하여 영역을 얻습니다 . &lt;a href=&quot;../zoneid#getId--&quot;&gt; &lt;code&gt;ZoneId.getId()&lt;/code&gt; &lt;/a&gt; 의 결과를 사용하여 인쇄됩니다 . 영역을 확보 할 수없는 경우 포맷터 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7ae95362869ef373f422eeea5fbbfb739c07fd82" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. If the zone is a &lt;code&gt;ZoneOffset&lt;/code&gt; it will be printed using the result of &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;ZoneOffset.getId()&lt;/code&gt;&lt;/a&gt;. If the zone is not an offset, the textual name will be looked up for the locale set in the &lt;a href=&quot;datetimeformatter&quot;&gt;&lt;code&gt;DateTimeFormatter&lt;/code&gt;&lt;/a&gt;. If the temporal object being printed represents an instant, then the text will be the summer or winter time text as appropriate. If the lookup for text does not find any suitable result, then the &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;ID&lt;/code&gt;&lt;/a&gt; will be printed instead. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">서식을 지정하는 동안 &lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt; temporal을 쿼리하는 것과 동일한 메커니즘을 사용하여 영역을 얻습니다 . 영역이 &lt;code&gt;ZoneOffset&lt;/code&gt; 인 경우 &lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;ZoneOffset.getId()&lt;/code&gt; &lt;/a&gt; 의 결과를 사용하여 인쇄됩니다 . 영역이 오프셋이 아닌 경우 텍스트 이름은 &lt;a href=&quot;datetimeformatter&quot;&gt; &lt;code&gt;DateTimeFormatter&lt;/code&gt; 에&lt;/a&gt; 설정된 로케일을 찾습니다 . 인쇄되는 임시 개체가 순간을 나타내는 경우, 해당 텍스트는 여름 또는 겨울 시간 텍스트가됩니다. 텍스트 검색에서 적합한 결과를 찾지 못하면 대신 &lt;a href=&quot;../zoneid#getId--&quot;&gt; &lt;code&gt;ID&lt;/code&gt; &lt;/a&gt; 가 인쇄됩니다. 영역을 확보 할 수 없으면 포맷터의 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d3b90c96a7fcf7a451966988e3a176ba0847ac13" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. If the zone is a &lt;code&gt;ZoneOffset&lt;/code&gt; or it cannot be obtained then an exception is thrown unless the section of the formatter is optional. If the zone is not an offset, then the zone will be printed using the zone ID from &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;ZoneId.getId()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">포맷하는 동안 &lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt; temporal을 쿼리하는 것과 동일한 메커니즘을 사용하여 영역을 얻습니다 . 영역이 &lt;code&gt;ZoneOffset&lt;/code&gt; 이거나 해당 영역을 확보 할 수없는 경우 포맷터의 섹션이 선택 사항이 아닌 한 예외가 발생합니다. 영역이 오프셋이 아닌 경우 &lt;a href=&quot;../zoneid#getId--&quot;&gt; &lt;code&gt;ZoneId.getId()&lt;/code&gt; &lt;/a&gt; 의 영역 ID를 사용하여 영역이 인쇄됩니다 .</target>
        </trans-unit>
        <trans-unit id="2aa240fcbe863a7ef78f61d18a24054e27225dc2" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. It will be printed using the result of &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;ZoneId.getId()&lt;/code&gt;&lt;/a&gt;. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">서식을 지정하는 동안 &lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt; temporal을 쿼리하는 것과 동일한 메커니즘을 사용하여 영역을 얻습니다 . &lt;a href=&quot;../zoneid#getId--&quot;&gt; &lt;code&gt;ZoneId.getId()&lt;/code&gt; &lt;/a&gt; 의 결과를 사용하여 인쇄됩니다 . 영역을 확보 할 수 없으면 포맷터의 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4c7804966f6935eab96626a07987e4d2d482291f" translate="yes" xml:space="preserve">
          <source>During formatting, this method has no effect.</source>
          <target state="translated">포맷하는 동안이 방법은 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="2d396df68a68a3f28ecd5b773a14e9ffc2a19267" translate="yes" xml:space="preserve">
          <source>During handshaking, if the URL's hostname and the server's identification hostname mismatch, the verification mechanism can call back to implementers of this interface to determine if this connection should be allowed.</source>
          <target state="translated">핸드 셰이 킹 중에 URL의 호스트 이름과 서버의 식별 호스트 이름이 일치하지 않으면 확인 메커니즘이이 인터페이스의 구현자를 호출하여이 연결이 허용되는지 여부를 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0eb8b734c98b923f91249267c6bd8f5f84416330" translate="yes" xml:space="preserve">
          <source>During object input, convert this deserialized enumeration instance to the proper enumeration value defined in the enumeration attribute class.</source>
          <target state="translated">개체를 입력하는 동안이 역 직렬화 된 열거 인스턴스를 열거 특성 클래스에 정의 된 적절한 열거 값으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="6aa0d719c8817b3e1d8fc50c109dd5db59b9f750" translate="yes" xml:space="preserve">
          <source>During parsing, either the textual zone name, the zone ID or the offset is accepted. Many textual zone names are not unique, such as CST can be for both &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;. In this situation, the zone id will be determined by the region information from formatter's &lt;a href=&quot;datetimeformatter#getLocale--&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; and the standard zone id for that area, for example, America/New_York for the America Eastern zone. The &lt;a href=&quot;datetimeformatterbuilder#appendZoneText-java.time.format.TextStyle-java.util.Set-&quot;&gt;&lt;code&gt;appendZoneText(TextStyle, Set)&lt;/code&gt;&lt;/a&gt; may be used to specify a set of preferred &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt; in this situation.</source>
          <target state="translated">구문 분석 중 텍스트 영역 이름, 영역 ID 또는 오프셋이 허용됩니다. CST가 &quot;중앙 표준시&quot;와 &quot;중국 표준시&quot;둘 다일 수있는 것과 같이 많은 텍스트 영역 이름이 고유하지 않습니다. 이 상황에서 영역 ID는 포맷터 &lt;a href=&quot;datetimeformatter#getLocale--&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt; 의 지역 정보 및 해당 영역의 표준 영역 ID (예 : 아메리카 동부 영역의 America / New_York)에 의해 결정됩니다. 이 &lt;a href=&quot;datetimeformatterbuilder#appendZoneText-java.time.format.TextStyle-java.util.Set-&quot;&gt; &lt;code&gt;appendZoneText(TextStyle, Set)&lt;/code&gt; &lt;/a&gt; 를 사용하여 선호하는 &lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; &lt;/a&gt; 세트를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="58a86560617fc9e4897a0988ef62e3f71d9b264c" translate="yes" xml:space="preserve">
          <source>During parsing, either the textual zone name, the zone ID or the offset is accepted. Many textual zone names are not unique, such as CST can be for both &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;. In this situation, the zone id will be determined by the region information from formatter's &lt;a href=&quot;datetimeformatter#getLocale--&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; and the standard zone id for that area, for example, America/New_York for the America Eastern zone. This method also allows a set of preferred &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt; to be specified for parsing. The matched preferred zone id will be used if the textural zone name being parsed is not unique.</source>
          <target state="translated">구문 분석 중 텍스트 영역 이름, 영역 ID 또는 오프셋이 허용됩니다. CST가 &quot;중앙 표준시&quot;와 &quot;중국 표준시&quot;둘 다일 수있는 것과 같이 많은 텍스트 영역 이름이 고유하지 않습니다. 이 상황에서 영역 ID는 포맷터 &lt;a href=&quot;datetimeformatter#getLocale--&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt; 의 지역 정보 및 해당 영역의 표준 영역 ID (예 : 아메리카 동부 영역의 America / New_York)에 의해 결정됩니다. 이 방법을 사용하면 선호하는 &lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; &lt;/a&gt; 세트 를 구문 분석에 지정할 수 있습니다. 구문 분석중인 텍스처 영역 이름이 고유하지 않은 경우 일치하는 선호 영역 ID가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c0a9a1ba277c0d7094f6f5184deccbe7b259db3f" translate="yes" xml:space="preserve">
          <source>During parsing, if a chronology has already been parsed, then it is used. Otherwise the default from &lt;code&gt;DateTimeFormatter.withChronology(Chronology)&lt;/code&gt; is used, with &lt;code&gt;IsoChronology&lt;/code&gt; as the fallback.</source>
          <target state="translated">구문 분석 중 연대기가 이미 구문 분석 된 경우 사용됩니다. 그렇지 않으면 &lt;code&gt;DateTimeFormatter.withChronology(Chronology)&lt;/code&gt; 의 기본값 이 사용되며 &lt;code&gt;IsoChronology&lt;/code&gt; 가 폴백으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="191ca3d4cfb9916eb4775c37f1204bfe60f75597" translate="yes" xml:space="preserve">
          <source>During parsing, the chronology is parsed and must match one of the chronologies in &lt;a href=&quot;../chrono/chronology#getAvailableChronologies--&quot;&gt;&lt;code&gt;Chronology.getAvailableChronologies()&lt;/code&gt;&lt;/a&gt;. If the chronology cannot be parsed then an exception is thrown unless the section of the formatter is optional. The parser uses the &lt;a href=&quot;datetimeformatterbuilder#parseCaseInsensitive--&quot;&gt;case sensitive&lt;/a&gt; setting.</source>
          <target state="translated">구문 분석 중 연대기가 구문 분석되며 &lt;a href=&quot;../chrono/chronology#getAvailableChronologies--&quot;&gt; &lt;code&gt;Chronology.getAvailableChronologies()&lt;/code&gt; &lt;/a&gt; 의 연대 중 하나와 일치해야합니다 . 연대기를 구문 분석 할 수없는 경우 포맷터 섹션이 선택 사항이 아닌 한 예외가 발생합니다. 파서는 &lt;a href=&quot;datetimeformatterbuilder#parseCaseInsensitive--&quot;&gt;대소 문자 구분&lt;/a&gt; 설정을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="660a719637845b5f2477a0ff69b5b7ccfa7eb52f" translate="yes" xml:space="preserve">
          <source>During parsing, the current state of the parse is inspected. If the specified field has no associated value, because it has not been parsed successfully at that point, then the specified value is injected into the parse result. Injection is immediate, thus the field-value pair will be visible to any subsequent elements in the formatter. As such, this method is normally called at the end of the builder.</source>
          <target state="translated">구문 분석 중 구문 분석의 현재 상태가 검사됩니다. 지정된 필드가 해당 지점에서 성공적으로 구문 분석되지 않았기 때문에 연관된 값이없는 경우 지정된 값이 구문 분석 결과에 주입됩니다. 주입이 즉시 이루어 지므로 필드 값 쌍은 포맷터의 모든 후속 요소에 표시됩니다. 따라서이 메소드는 일반적으로 빌더의 끝에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b193b91f8dbd49a4c7e7c7de8ece0cf96f1a1eaf" translate="yes" xml:space="preserve">
          <source>During parsing, the offset is parsed using the format defined above. If the offset cannot be parsed then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">구문 분석 중 위에 정의 된 형식을 사용하여 오프셋이 구문 분석됩니다. 오프셋을 구문 분석 할 수없는 경우 포맷터 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="93d6ed2e246953d5d73452dbaf6d05a817ddc751" translate="yes" xml:space="preserve">
          <source>During parsing, the offset is parsed using the format defined below. If the offset cannot be parsed then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">구문 분석 중 아래 정의 된 형식을 사용하여 오프셋이 구문 분석됩니다. 오프셋을 구문 분석 할 수없는 경우 포맷터 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="72e8de8e6e843fddb564fc8660d359fd8bc5f946" translate="yes" xml:space="preserve">
          <source>During parsing, the padding and decorated element are parsed. If parsing is lenient, then the pad width is treated as a maximum. If parsing is case insensitive, then the pad character is matched ignoring case. The padding is parsed greedily. Thus, if the decorated element starts with the pad character, it will not be parsed.</source>
          <target state="translated">구문 분석 중 패딩 및 장식 된 요소가 구문 분석됩니다. 구문 분석이 관대하지 않으면 패드 너비가 최대 값으로 처리됩니다. 구문 분석이 대소 문자를 구분하지 않으면 패드 문자는 대소 문자를 무시하고 일치합니다. 패딩은 탐욕스럽게 구문 분석됩니다. 따라서 장식 된 요소가 패드 문자로 시작하면 구문 분석되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="051e7e637f0a79d80fda592f79caa0cc6df65da5" translate="yes" xml:space="preserve">
          <source>During parsing, the padding and decorated element are parsed. If parsing is lenient, then the pad width is treated as a maximum. The padding is parsed greedily. Thus, if the decorated element starts with the pad character, it will not be parsed.</source>
          <target state="translated">구문 분석 중 패딩 및 장식 된 요소가 구문 분석됩니다. 구문 분석이 관대하지 않으면 패드 너비가 최대 값으로 처리됩니다. 패딩은 탐욕스럽게 구문 분석됩니다. 따라서 장식 된 요소가 패드 문자로 시작하면 구문 분석되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2afa73df0d5f6aa582b13dfbcefba4da345c228d" translate="yes" xml:space="preserve">
          <source>During parsing, the text must match a known zone or offset. There are two types of zone ID, offset-based, such as '+01:30' and region-based, such as 'Europe/London'. These are parsed differently. If the parse starts with '+', '-', 'UT', 'UTC' or 'GMT', then the parser expects an offset-based zone and will not match region-based zones. The offset ID, such as '+02:30', may be at the start of the parse, or prefixed by 'UT', 'UTC' or 'GMT'. The offset ID parsing is equivalent to using &lt;a href=&quot;datetimeformatterbuilder#appendOffset-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;appendOffset(String, String)&lt;/code&gt;&lt;/a&gt; using the arguments 'HH:MM:ss' and the no offset string '0'. If the parse starts with 'UT', 'UTC' or 'GMT', and the parser cannot match a following offset ID, then &lt;a href=&quot;../zoneoffset#UTC&quot;&gt;&lt;code&gt;ZoneOffset.UTC&lt;/code&gt;&lt;/a&gt; is selected. In all other cases, the list of known region-based zones is used to find the longest available match. If no match is found, and the parse starts with 'Z', then &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; is selected. The parser uses the &lt;a href=&quot;datetimeformatterbuilder#parseCaseInsensitive--&quot;&gt;case sensitive&lt;/a&gt; setting.</source>
          <target state="translated">구문 분석 중 텍스트는 알려진 영역 또는 오프셋과 일치해야합니다. 영역 ID에는 '+01 : 30'과 같은 오프셋 기반과 '유럽 / 런던'과 같은 지역 기반의 두 가지 유형이 있습니다. 이들은 다르게 구문 분석됩니다. 구문 분석이 '+', '-', 'UT', 'UTC'또는 'GMT'로 시작하면 구문 분석기는 오프셋 기반 영역을 예상하며 지역 기반 영역과 일치하지 않습니다. '+02 : 30'과 같은 오프셋 ID는 구문 분석 시작시 또는 'UT', 'UTC'또는 'GMT'로 시작될 수 있습니다. 오프셋 ID 구문 분석은 인수 'HH : MM : ss'및 no offset 문자열 '0' 을 사용하여 &lt;a href=&quot;datetimeformatterbuilder#appendOffset-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;appendOffset(String, String)&lt;/code&gt; &lt;/a&gt; 사용하는 것과 같습니다 . 구문 분석이 'UT', 'UTC'또는 'GMT'로 시작하고 구문 분석기가 다음 오프셋 ID와 일치 할 수없는 경우 &lt;a href=&quot;../zoneoffset#UTC&quot;&gt; &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; &lt;/a&gt;가 선택되었습니다. 다른 모든 경우에는 알려진 지역 기반 영역 목록이 사용 가능한 가장 긴 일치 항목을 찾는 데 사용됩니다. 일치하는 것이 없으면 구문 분석이 'Z'로 시작하면 &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; 가 선택됩니다. 파서는 &lt;a href=&quot;datetimeformatterbuilder#parseCaseInsensitive--&quot;&gt;대소 문자 구분&lt;/a&gt; 설정을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="033e5031d233d516e8f61663b0beee851fa0d4a8" translate="yes" xml:space="preserve">
          <source>During secure socket negotiations, implentations call methods in this interface to:</source>
          <target state="translated">보안 소켓 협상 중에이 인터페이스에서 함축은 다음을 위해 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="ca3d5b9d1e4e5b96a2bd9661fa1be631b78ef705" translate="yes" xml:space="preserve">
          <source>During serialization, writeObject writes all fields to the output stream, including extensions.</source>
          <target state="translated">직렬화 중 writeObject는 확장을 포함하여 모든 필드를 출력 스트림에 씁니다.</target>
        </trans-unit>
        <trans-unit id="c6f3bb08de84932901388d0c83861d8f431122f6" translate="yes" xml:space="preserve">
          <source>During the resource bundle loading process above, this factory method looks up the cache before calling the &lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt;&lt;code&gt;control.newBundle&lt;/code&gt;&lt;/a&gt; method. If the time-to-live period of the resource bundle found in the cache has expired, the factory method calls the &lt;a href=&quot;resourcebundle.control#needsReload-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-java.util.ResourceBundle-long-&quot;&gt;&lt;code&gt;control.needsReload&lt;/code&gt;&lt;/a&gt; method to determine whether the resource bundle needs to be reloaded. If reloading is required, the factory method calls &lt;code&gt;control.newBundle&lt;/code&gt; to reload the resource bundle. If &lt;code&gt;control.newBundle&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;, the factory method puts a dummy resource bundle in the cache as a mark of nonexistent resource bundles in order to avoid lookup overhead for subsequent requests. Such dummy resource bundles are under the same expiration control as specified by &lt;code&gt;control&lt;/code&gt;.</source>
          <target state="translated">위의 자원 번들로드 프로세스 &lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt; &lt;code&gt;control.newBundle&lt;/code&gt; &lt;/a&gt; 팩토리 메소드는 control.newBundle 메소드 를 호출하기 전에 캐시를 찾습니다 . 캐시에서 찾은 자원 번들의 유효 기간이 만료 된 경우 팩토리 메소드는 &lt;a href=&quot;resourcebundle.control#needsReload-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-java.util.ResourceBundle-long-&quot;&gt; &lt;code&gt;control.needsReload&lt;/code&gt; &lt;/a&gt; 메소드를 호출 하여 자원 번들을 다시로드해야하는지 여부를 판별합니다. 재로드가 필요한 경우, 팩토리 메소드는 &lt;code&gt;control.newBundle&lt;/code&gt; 을 호출 하여 자원 번들을 재로드합니다. 경우 &lt;code&gt;control.newBundle&lt;/code&gt; 의 반환 &lt;code&gt;null&lt;/code&gt; , 순서에 존재하지 않는 자원 번들의 표시로 캐시의 팩토리 메소드 둔다 더미 리소스 번들은 후속 요청에 대한 오버 헤드 조회를 방지 할 수 있습니다. 이러한 더미 자원 번들은 다음과 같은 만료 제어하에 있습니다. &lt;code&gt;control&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="298d9d8d5744f92e432401693309d1bbe3ff6074" translate="yes" xml:space="preserve">
          <source>Dynamic Access</source>
          <target state="translated">동적 액세스</target>
        </trans-unit>
        <trans-unit id="c78e4505384decd4038b612ae0d0f30e8b5bddee" translate="yes" xml:space="preserve">
          <source>Dynamic MBeans</source>
          <target state="translated">동적 MBean</target>
        </trans-unit>
        <trans-unit id="7e0f8efcd345f2ea502e218faee30da89844583e" translate="yes" xml:space="preserve">
          <source>Dynamic code downloading</source>
          <target state="translated">동적 코드 다운로드</target>
        </trans-unit>
        <trans-unit id="88aec902f9a10d023d00343fd43acb6f84eaf46b" translate="yes" xml:space="preserve">
          <source>Dynamic linking of the specified library</source>
          <target state="translated">지정된 라이브러리의 동적 링크</target>
        </trans-unit>
        <trans-unit id="c0a4c142a61f88983312715c4d27e6f5e339313a" translate="yes" xml:space="preserve">
          <source>Dynamic update of rules is a complex problem and most applications should not use this method or dynamic rules. To achieve dynamic rules, a provider implementation will have to be written as per the specification of this class. In addition, instances of &lt;code&gt;ZoneRules&lt;/code&gt; must not be cached in the application as they will become stale. However, the boolean flag on &lt;a href=&quot;zonerulesprovider#provideRules-java.lang.String-boolean-&quot;&gt;&lt;code&gt;provideRules(String, boolean)&lt;/code&gt;&lt;/a&gt; allows provider implementations to control the caching of &lt;code&gt;ZoneId&lt;/code&gt;, potentially ensuring that all objects in the system see the new rules. Note that there is likely to be a cost in performance of a dynamic rules provider. Note also that no dynamic rules provider is in this specification.</source>
          <target state="translated">규칙의 동적 업데이트는 복잡한 문제이므로 대부분의 응용 프로그램에서는이 방법이나 동적 규칙을 사용하지 않아야합니다. 동적 규칙을 달성하려면이 클래스의 스펙에 따라 제공자 구현을 작성해야합니다. 또한 &lt;code&gt;ZoneRules&lt;/code&gt; 의 인스턴스는 오래 되어 애플리케이션에서 캐시되지 않아야 합니다. 그러나 &lt;a href=&quot;zonerulesprovider#provideRules-java.lang.String-boolean-&quot;&gt; &lt;code&gt;provideRules(String, boolean)&lt;/code&gt; &lt;/a&gt; 의 boolean 플래그 는 제공자 구현이 &lt;code&gt;ZoneId&lt;/code&gt; 의 캐싱을 제어 하여 시스템의 모든 오브젝트가 새 규칙을 볼 수있게합니다. 동적 규칙 공급자의 성능에 비용이 발생할 수 있습니다. 또한이 사양에는 동적 규칙 공급자가 없습니다.</target>
        </trans-unit>
        <trans-unit id="fc8a231a2cdc7c41dc1c6e0395464730ea4cecaa" translate="yes" xml:space="preserve">
          <source>DynamicMBean</source>
          <target state="translated">DynamicMBean</target>
        </trans-unit>
        <trans-unit id="2bcfc50ea42917ec195e96de1ced48702c3a988a" translate="yes" xml:space="preserve">
          <source>DynamicMBean.getAttribute()</source>
          <target state="translated">DynamicMBean.getAttribute()</target>
        </trans-unit>
        <trans-unit id="89a7cd259515ecc091c9e50aee6df33b908fa20d" translate="yes" xml:space="preserve">
          <source>DynamicMBean.getAttributes()</source>
          <target state="translated">DynamicMBean.getAttributes()</target>
        </trans-unit>
        <trans-unit id="46a1c4e1954a38579a347affdf6a1643540ce392" translate="yes" xml:space="preserve">
          <source>DynamicMBean.getMBeanInfo()</source>
          <target state="translated">DynamicMBean.getMBeanInfo()</target>
        </trans-unit>
        <trans-unit id="a991f9655da18f8237eb99cd0a2a59bfbc8d4ff4" translate="yes" xml:space="preserve">
          <source>DynamicMBean.invoke()</source>
          <target state="translated">DynamicMBean.invoke()</target>
        </trans-unit>
        <trans-unit id="4a25bc0cc715918dae1a446cddea115342d71b01" translate="yes" xml:space="preserve">
          <source>DynamicMBean.setAttribute()</source>
          <target state="translated">DynamicMBean.setAttribute()</target>
        </trans-unit>
        <trans-unit id="5a5fee6c935edcd5c1e56d373445a1d430f7626b" translate="yes" xml:space="preserve">
          <source>DynamicMBean.setAttributes()</source>
          <target state="translated">DynamicMBean.setAttributes()</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="37556bd5ed42df76f73ebe653563aeeb143ba50e" translate="yes" xml:space="preserve">
          <source>E size .</source>
          <target state="translated">E 사이즈.</target>
        </trans-unit>
        <trans-unit id="e4b06f6b152e160765eb34203c1de7ada0bb7b64" translate="yes" xml:space="preserve">
          <source>EAT - Africa/Addis_Ababa</source>
          <target state="translated">EAT-아프리카 / 아디스 _ 아바바</target>
        </trans-unit>
        <trans-unit id="601f2e6dfccb9827ca507e4f4f4f72b0a822f61d" translate="yes" xml:space="preserve">
          <source>ECB</source>
          <target state="translated">ECB</target>
        </trans-unit>
        <trans-unit id="484c0540c6bfcedac6849997e5e0766ff2e2acdc" translate="yes" xml:space="preserve">
          <source>ECField</source>
          <target state="translated">ECField</target>
        </trans-unit>
        <trans-unit id="2658a01429323ad39737999b3b7142a3d5d8e196" translate="yes" xml:space="preserve">
          <source>ECField.getFieldSize()</source>
          <target state="translated">ECField.getFieldSize()</target>
        </trans-unit>
        <trans-unit id="d9898f316485620be7b173c694c2ed72e1f5adab" translate="yes" xml:space="preserve">
          <source>ECFieldF2m</source>
          <target state="translated">ECFieldF2m</target>
        </trans-unit>
        <trans-unit id="36e7f19e6ba8f565ca993ca66fd6e17fe7eb308b" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.equals()</source>
          <target state="translated">ECFieldF2m.equals()</target>
        </trans-unit>
        <trans-unit id="8937926871f18b31c7d6d622d6b5e0452f2bb503" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.getFieldSize()</source>
          <target state="translated">ECFieldF2m.getFieldSize()</target>
        </trans-unit>
        <trans-unit id="7ebafde21ad6778e6e4ac34e6eba9db320ad8684" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.getM()</source>
          <target state="translated">ECFieldF2m.getM()</target>
        </trans-unit>
        <trans-unit id="f1cea3791239dc1bf411a7147dece3df618f498c" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.getMidTermsOfReductionPolynomial()</source>
          <target state="translated">ECFieldF2m.getMidTermsOfReductionPolynomial()</target>
        </trans-unit>
        <trans-unit id="63101533955a9be37909b63f6f24e1bcba0bc441" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.getReductionPolynomial()</source>
          <target state="translated">ECFieldF2m.getReductionPolynomial()</target>
        </trans-unit>
        <trans-unit id="3976abd2e6fa17305016254a33c95386394d881b" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.hashCode()</source>
          <target state="translated">ECFieldF2m.hashCode()</target>
        </trans-unit>
        <trans-unit id="bc872885a9855575e40017c153cab5632890dc61" translate="yes" xml:space="preserve">
          <source>ECFieldFp</source>
          <target state="translated">ECFieldFp</target>
        </trans-unit>
        <trans-unit id="53d60f64c65a0d8219fefcc720e2ccf509009a68" translate="yes" xml:space="preserve">
          <source>ECFieldFp.equals()</source>
          <target state="translated">ECFieldFp.equals()</target>
        </trans-unit>
        <trans-unit id="30d1b94dcc58f11b131d3bf43cd966ded02a0fc9" translate="yes" xml:space="preserve">
          <source>ECFieldFp.getFieldSize()</source>
          <target state="translated">ECFieldFp.getFieldSize()</target>
        </trans-unit>
        <trans-unit id="02e8256e1c66bbdf141519e024e9e7ff04c16a91" translate="yes" xml:space="preserve">
          <source>ECFieldFp.getP()</source>
          <target state="translated">ECFieldFp.getP()</target>
        </trans-unit>
        <trans-unit id="65b421ba691a3a68e75d58f81c156cbd493f642d" translate="yes" xml:space="preserve">
          <source>ECFieldFp.hashCode()</source>
          <target state="translated">ECFieldFp.hashCode()</target>
        </trans-unit>
        <trans-unit id="1e9830d00f8ec3259613f4dff1281a7adff4f6af" translate="yes" xml:space="preserve">
          <source>ECGenParameterSpec</source>
          <target state="translated">ECGenParameterSpec</target>
        </trans-unit>
        <trans-unit id="d37406af3bf01864f0a6c55240b87e21b1b5b189" translate="yes" xml:space="preserve">
          <source>ECGenParameterSpec.getName()</source>
          <target state="translated">ECGenParameterSpec.getName()</target>
        </trans-unit>
        <trans-unit id="a95d0a39c7a64e9695e6bd117f38673380c9eb3c" translate="yes" xml:space="preserve">
          <source>ECKey</source>
          <target state="translated">ECKey</target>
        </trans-unit>
        <trans-unit id="26f1460fd392ab6278f38275c90b71e9401e7015" translate="yes" xml:space="preserve">
          <source>ECKey.getParams()</source>
          <target state="translated">ECKey.getParams()</target>
        </trans-unit>
        <trans-unit id="5c71332cc2e4953624e755826970d2fc1a95245b" translate="yes" xml:space="preserve">
          <source>ECParameterSpec</source>
          <target state="translated">ECParameterSpec</target>
        </trans-unit>
        <trans-unit id="aa125d60e4d36280fae87072658c9123a763bcdc" translate="yes" xml:space="preserve">
          <source>ECParameterSpec.getCofactor()</source>
          <target state="translated">ECParameterSpec.getCofactor()</target>
        </trans-unit>
        <trans-unit id="dcd57c7482bcf9c8923cc59195564b8010899383" translate="yes" xml:space="preserve">
          <source>ECParameterSpec.getCurve()</source>
          <target state="translated">ECParameterSpec.getCurve()</target>
        </trans-unit>
        <trans-unit id="4a45e378dc788609ce75184339098e2b7c75ccfd" translate="yes" xml:space="preserve">
          <source>ECParameterSpec.getGenerator()</source>
          <target state="translated">ECParameterSpec.getGenerator()</target>
        </trans-unit>
        <trans-unit id="66c081bfcece1f9d25bb87afd25936de90028129" translate="yes" xml:space="preserve">
          <source>ECParameterSpec.getOrder()</source>
          <target state="translated">ECParameterSpec.getOrder()</target>
        </trans-unit>
        <trans-unit id="131f0aca4fc7fbb9781dca63d6626d89d5db8fa5" translate="yes" xml:space="preserve">
          <source>ECPoint</source>
          <target state="translated">ECPoint</target>
        </trans-unit>
        <trans-unit id="7383fa4bf2e59ad882a32ae14ae81d683e482091" translate="yes" xml:space="preserve">
          <source>ECPoint.equals()</source>
          <target state="translated">ECPoint.equals()</target>
        </trans-unit>
        <trans-unit id="7d350700f06a34948120bb0632a8c123ac1fb971" translate="yes" xml:space="preserve">
          <source>ECPoint.getAffineX()</source>
          <target state="translated">ECPoint.getAffineX()</target>
        </trans-unit>
        <trans-unit id="4ecd3cff17d418a53e0d7cb8aa03a39da734ee30" translate="yes" xml:space="preserve">
          <source>ECPoint.getAffineY()</source>
          <target state="translated">ECPoint.getAffineY()</target>
        </trans-unit>
        <trans-unit id="7e3d647204a9e7b0889041c1399c6d8ed9b1c47f" translate="yes" xml:space="preserve">
          <source>ECPoint.hashCode()</source>
          <target state="translated">ECPoint.hashCode()</target>
        </trans-unit>
        <trans-unit id="7e9a73ec4defdbf0d1961ffb46ae295c5f1339ab" translate="yes" xml:space="preserve">
          <source>ECPrivateKey</source>
          <target state="translated">ECPrivateKey</target>
        </trans-unit>
        <trans-unit id="f11daf09d2ce19a720d760fccebcc0cc1fe0a68b" translate="yes" xml:space="preserve">
          <source>ECPrivateKey.getS()</source>
          <target state="translated">ECPrivateKey.getS()</target>
        </trans-unit>
        <trans-unit id="a01ce6d3172a87d1f54d00877245e24bb7f90413" translate="yes" xml:space="preserve">
          <source>ECPrivateKeySpec</source>
          <target state="translated">ECPrivateKeySpec</target>
        </trans-unit>
        <trans-unit id="2b99934ce584b5dbb0802cc004496c1265e31810" translate="yes" xml:space="preserve">
          <source>ECPrivateKeySpec.getParams()</source>
          <target state="translated">ECPrivateKeySpec.getParams()</target>
        </trans-unit>
        <trans-unit id="36bdb0730aaaaa72a7ffc35fcfae08b77d615237" translate="yes" xml:space="preserve">
          <source>ECPrivateKeySpec.getS()</source>
          <target state="translated">ECPrivateKeySpec.getS()</target>
        </trans-unit>
        <trans-unit id="d1776a7027dff3e5917cb3cebf94fd8101974337" translate="yes" xml:space="preserve">
          <source>ECPublicKey</source>
          <target state="translated">ECPublicKey</target>
        </trans-unit>
        <trans-unit id="af6a51f7b98fb87be1c59401b98b892e8c69ff96" translate="yes" xml:space="preserve">
          <source>ECPublicKey.getW()</source>
          <target state="translated">ECPublicKey.getW()</target>
        </trans-unit>
        <trans-unit id="9f0a498aa9c90edb4329c8a660aeb384742d6781" translate="yes" xml:space="preserve">
          <source>ECPublicKeySpec</source>
          <target state="translated">ECPublicKeySpec</target>
        </trans-unit>
        <trans-unit id="7f82aaa3c1b53eec25a273be77a538d0c2ec3969" translate="yes" xml:space="preserve">
          <source>ECPublicKeySpec.getParams()</source>
          <target state="translated">ECPublicKeySpec.getParams()</target>
        </trans-unit>
        <trans-unit id="fb1af6c34d1ba0faae90738c011291744c98e2f9" translate="yes" xml:space="preserve">
          <source>ECPublicKeySpec.getW()</source>
          <target state="translated">ECPublicKeySpec.getW()</target>
        </trans-unit>
        <trans-unit id="23b9898e476dcc4add4efc0ed7ddb21640c0f19e" translate="yes" xml:space="preserve">
          <source>ECT - Europe/Paris</source>
          <target state="translated">ECT-유럽 / 파리</target>
        </trans-unit>
        <trans-unit id="402016f21d03e839e24e660b0cf6c79f311ae840" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH</source>
          <target state="translated">EDGE_STITCH</target>
        </trans-unit>
        <trans-unit id="6bbbc6534d75c412ef17b08bd13748b994075f5f" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH_BOTTOM</source>
          <target state="translated">EDGE_STITCH_BOTTOM</target>
        </trans-unit>
        <trans-unit id="ee0dae08682963b6c4ca700b5fcd840f3e2da188" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH_LEFT</source>
          <target state="translated">EDGE_STITCH_LEFT</target>
        </trans-unit>
        <trans-unit id="43c15148aa09100c39cdf6aa78755316addcd9fb" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH_RIGHT</source>
          <target state="translated">EDGE_STITCH_RIGHT</target>
        </trans-unit>
        <trans-unit id="0dde2bed2e929721c8a19a054425e8326cf52ec8" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH_TOP</source>
          <target state="translated">EDGE_STITCH_TOP</target>
        </trans-unit>
        <trans-unit id="660752e786b88b1d9b2dfbef6bb0a1fef020b836" translate="yes" xml:space="preserve">
          <source>EFFORT</source>
          <target state="translated">EFFORT</target>
        </trans-unit>
        <trans-unit id="6ba33a7b25ec924e3c7cdea49ff5d10a73abcd7d" translate="yes" xml:space="preserve">
          <source>EGYPTIAN_HIEROGLYPHS</source>
          <target state="translated">EGYPTIAN_HIEROGLYPHS</target>
        </trans-unit>
        <trans-unit id="aa891ea05dd88d34c7bc0f90160ef08ac7326076" translate="yes" xml:space="preserve">
          <source>EMOTICONS</source>
          <target state="translated">EMOTICONS</target>
        </trans-unit>
        <trans-unit id="3a6d67ab2fcaa4996ea55c9897e1e3cae775fff8" translate="yes" xml:space="preserve">
          <source>EMPTY_DESCRIPTOR</source>
          <target state="translated">EMPTY_DESCRIPTOR</target>
        </trans-unit>
        <trans-unit id="dfc809a8ebf4b81e691b32975c5035f21e16fd2c" translate="yes" xml:space="preserve">
          <source>EMPTY_LIST</source>
          <target state="translated">EMPTY_LIST</target>
        </trans-unit>
        <trans-unit id="2e8cdc469d0d7230be597797efd2ed063ada7cae" translate="yes" xml:space="preserve">
          <source>EMPTY_MAP</source>
          <target state="translated">EMPTY_MAP</target>
        </trans-unit>
        <trans-unit id="10621e09be025015f2a0097a6fba7fa1f19ac9b8" translate="yes" xml:space="preserve">
          <source>EMPTY_SET</source>
          <target state="translated">EMPTY_SET</target>
        </trans-unit>
        <trans-unit id="491b3a1cdd9a73aeeef2e2f7ce0522c4ac95684d" translate="yes" xml:space="preserve">
          <source>ENCLOSED_ALPHANUMERICS</source>
          <target state="translated">ENCLOSED_ALPHANUMERICS</target>
        </trans-unit>
        <trans-unit id="5b355594a8d1825c7bb8f59ad5f33b3daa288ed1" translate="yes" xml:space="preserve">
          <source>ENCLOSED_ALPHANUMERIC_SUPPLEMENT</source>
          <target state="translated">ENCLOSED_ALPHANUMERIC_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="4ec78e05d6223330ee2332780376af9b9f64b029" translate="yes" xml:space="preserve">
          <source>ENCLOSED_CJK_LETTERS_AND_MONTHS</source>
          <target state="translated">ENCLOSED_CJK_LETTERS_AND_MONTHS</target>
        </trans-unit>
        <trans-unit id="e8519b58a50233517f3c5d275538bafbc83a8613" translate="yes" xml:space="preserve">
          <source>ENCLOSED_IDEOGRAPHIC_SUPPLEMENT</source>
          <target state="translated">ENCLOSED_IDEOGRAPHIC_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="889059f5218ab9af9e50be715febbbf437573234" translate="yes" xml:space="preserve">
          <source>ENCLOSING_MARK</source>
          <target state="translated">ENCLOSING_MARK</target>
        </trans-unit>
        <trans-unit id="e75d2afc0ed3d23703380d1e72696098ff6dabb6" translate="yes" xml:space="preserve">
          <source>ENCRYPT_MODE</source>
          <target state="translated">ENCRYPT_MODE</target>
        </trans-unit>
        <trans-unit id="393a28fda214136f4aec6cb4d5e4360f2f046e43" translate="yes" xml:space="preserve">
          <source>ENDCOM</source>
          <target state="translated">ENDCOM</target>
        </trans-unit>
        <trans-unit id="b7e65914167d75e1013bd288e846628e8bbb73bf" translate="yes" xml:space="preserve">
          <source>ENDHDR</source>
          <target state="translated">ENDHDR</target>
        </trans-unit>
        <trans-unit id="8b2e5bd2a1a74bacd3940fd3569815719099b391" translate="yes" xml:space="preserve">
          <source>ENDOFF</source>
          <target state="translated">ENDOFF</target>
        </trans-unit>
        <trans-unit id="8aed026f99b127492256fe494fa85697e5488920" translate="yes" xml:space="preserve">
          <source>ENDSIG</source>
          <target state="translated">ENDSIG</target>
        </trans-unit>
        <trans-unit id="b143fee6e7c46f8dfc60a3eeb0ece1e6ccae10b9" translate="yes" xml:space="preserve">
          <source>ENDSIZ</source>
          <target state="translated">ENDSIZ</target>
        </trans-unit>
        <trans-unit id="dc06790ab72abd8ee1c03b84dcf3f268ae4fa511" translate="yes" xml:space="preserve">
          <source>ENDSUB</source>
          <target state="translated">ENDSUB</target>
        </trans-unit>
        <trans-unit id="3d528274c7d29305fe76c5d34bcc42a830b08b3b" translate="yes" xml:space="preserve">
          <source>ENDTOT</source>
          <target state="translated">ENDTOT</target>
        </trans-unit>
        <trans-unit id="3e11a998bc0323c14e989b22d66120389efdae55" translate="yes" xml:space="preserve">
          <source>END_OF_EXCLUSIVE</source>
          <target state="translated">END_OF_EXCLUSIVE</target>
        </trans-unit>
        <trans-unit id="2c9d04702f9d8be59da552603a90ac3e455ad308" translate="yes" xml:space="preserve">
          <source>END_PUNCTUATION</source>
          <target state="translated">END_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="983e5366e4eea9b037be5e23f216579d19fc4609" translate="yes" xml:space="preserve">
          <source>ENGINE</source>
          <target state="translated">ENGINE</target>
        </trans-unit>
        <trans-unit id="349f2678344b9b0a2523d795d5fb6b827a8c0785" translate="yes" xml:space="preserve">
          <source>ENGINE_SCOPE</source>
          <target state="translated">ENGINE_SCOPE</target>
        </trans-unit>
        <trans-unit id="699f2d4f0cdb276b958015dc5dca45acab251e76" translate="yes" xml:space="preserve">
          <source>ENGINE_VERSION</source>
          <target state="translated">ENGINE_VERSION</target>
        </trans-unit>
        <trans-unit id="4a2b354b77f946e12e0e5b81b3239cc8efcbe278" translate="yes" xml:space="preserve">
          <source>ENGLISH</source>
          <target state="translated">ENGLISH</target>
        </trans-unit>
        <trans-unit id="ef991d5c4cde33653d2665b6c13fc11c56eb3f5b" translate="yes" xml:space="preserve">
          <source>ENTRY_CREATE</source>
          <target state="translated">ENTRY_CREATE</target>
        </trans-unit>
        <trans-unit id="e1a74e12d659227c84ef7223e000cabff2b54fb7" translate="yes" xml:space="preserve">
          <source>ENTRY_DELETE</source>
          <target state="translated">ENTRY_DELETE</target>
        </trans-unit>
        <trans-unit id="4b7934ace8e8fd618f6a5e0481147c47c29eabb8" translate="yes" xml:space="preserve">
          <source>ENTRY_MODIFY</source>
          <target state="translated">ENTRY_MODIFY</target>
        </trans-unit>
        <trans-unit id="507ccbdaf83ab03c2929498330b7d2836e4c06b2" translate="yes" xml:space="preserve">
          <source>ENUM</source>
          <target state="translated">ENUM</target>
        </trans-unit>
        <trans-unit id="68475bec775f8b9b380a0e04a912508dc18dcd0b" translate="yes" xml:space="preserve">
          <source>ENUM_CONSTANT</source>
          <target state="translated">ENUM_CONSTANT</target>
        </trans-unit>
        <trans-unit id="5a1314ccd8e6a487c3b381d66baf0dd1803fa1cf" translate="yes" xml:space="preserve">
          <source>ENVELOPE</source>
          <target state="translated">ENVELOPE</target>
        </trans-unit>
        <trans-unit id="c6bf2c7899e6331223de4ae9f50d76a0f8fe3c52" translate="yes" xml:space="preserve">
          <source>EOFException</source>
          <target state="translated">EOFException</target>
        </trans-unit>
        <trans-unit id="180f4ca1eb6f7e228940831c3ed7caa720e87779" translate="yes" xml:space="preserve">
          <source>EPOCH</source>
          <target state="translated">EPOCH</target>
        </trans-unit>
        <trans-unit id="1fcc7a3122a5f8c4140f007182abe0fade082e65" translate="yes" xml:space="preserve">
          <source>EPOCH_DAY</source>
          <target state="translated">EPOCH_DAY</target>
        </trans-unit>
        <trans-unit id="c41a4b4ae13ef007bf159e37752b1d297454b600" translate="yes" xml:space="preserve">
          <source>EQ</source>
          <target state="translated">EQ</target>
        </trans-unit>
        <trans-unit id="47adbfcf54b9ab1b1b54eea502241843be28c71d" translate="yes" xml:space="preserve">
          <source>ERA</source>
          <target state="translated">ERA</target>
        </trans-unit>
        <trans-unit id="e4aa96e435fce45d0d56b2b0019620a16eed5688" translate="yes" xml:space="preserve">
          <source>ERAS</source>
          <target state="translated">ERAS</target>
        </trans-unit>
        <trans-unit id="077bb97a54f149834bd40c1ad3ab8141b7e634d4" translate="yes" xml:space="preserve">
          <source>ERA_FIELD</source>
          <target state="translated">ERA_FIELD</target>
        </trans-unit>
        <trans-unit id="0b99cebe565822c64ac5d84aecb00fe40e59cbd3" translate="yes" xml:space="preserve">
          <source>ERROR</source>
          <target state="translated">ERROR</target>
        </trans-unit>
        <trans-unit id="651b9fb242d78b288546cebe26106d3d3f3b246f" translate="yes" xml:space="preserve">
          <source>ERROR message type.</source>
          <target state="translated">오류 메시지 유형.</target>
        </trans-unit>
        <trans-unit id="fd484dbbc827b7622686956381db36daef7f712b" translate="yes" xml:space="preserve">
          <source>EST - -05:00</source>
          <target state="translated">EST--05 : 00</target>
        </trans-unit>
        <trans-unit id="46c27e93c556dbe00ef891baf86b3418d50553fd" translate="yes" xml:space="preserve">
          <source>ETHIOPIC</source>
          <target state="translated">ETHIOPIC</target>
        </trans-unit>
        <trans-unit id="a15a2079da08e3a30c732b3350dafe3bf6305b9f" translate="yes" xml:space="preserve">
          <source>ETHIOPIC_EXTENDED</source>
          <target state="translated">ETHIOPIC_EXTENDED</target>
        </trans-unit>
        <trans-unit id="4e601c4ffe07965449feba2058f2c6a512e892b1" translate="yes" xml:space="preserve">
          <source>ETHIOPIC_EXTENDED_A</source>
          <target state="translated">ETHIOPIC_EXTENDED_A</target>
        </trans-unit>
        <trans-unit id="e7f1c3b504601965ec63c3c5738199dc6e01741d" translate="yes" xml:space="preserve">
          <source>ETHIOPIC_SUPPLEMENT</source>
          <target state="translated">ETHIOPIC_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="fce39c68ed65f718ed283533e549dce3a865f962" translate="yes" xml:space="preserve">
          <source>EXCEEDS_PAD</source>
          <target state="translated">EXCEEDS_PAD</target>
        </trans-unit>
        <trans-unit id="c8a13c755c402a64971d4b98652a6f4e8e3ab1f5" translate="yes" xml:space="preserve">
          <source>EXCEPTION_PARAMETER</source>
          <target state="translated">EXCEPTION_PARAMETER</target>
        </trans-unit>
        <trans-unit id="03534e945b5d675d412aa5ef2987348d732061fd" translate="yes" xml:space="preserve">
          <source>EXECUTABLE</source>
          <target state="translated">EXECUTABLE</target>
        </trans-unit>
        <trans-unit id="790392d6b839abbb5b061152b6a3114de84502b4" translate="yes" xml:space="preserve">
          <source>EXECUTE</source>
          <target state="translated">EXECUTE</target>
        </trans-unit>
        <trans-unit id="1731ffba0ee4baab452bcabda551595bf603c3b5" translate="yes" xml:space="preserve">
          <source>EXECUTIVE</source>
          <target state="translated">EXECUTIVE</target>
        </trans-unit>
        <trans-unit id="72c0bb5a2c016bd8fd0870d3850d52a2c48c2800" translate="yes" xml:space="preserve">
          <source>EXPIRED</source>
          <target state="translated">EXPIRED</target>
        </trans-unit>
        <trans-unit id="b217ce5e2f5a84693915f65137b50128a2d93ecf" translate="yes" xml:space="preserve">
          <source>EXPONENT</source>
          <target state="translated">EXPONENT</target>
        </trans-unit>
        <trans-unit id="4d05c12014f8617e34cf49b2b6521fd877c48bc7" translate="yes" xml:space="preserve">
          <source>EXPONENT_SIGN</source>
          <target state="translated">EXPONENT_SIGN</target>
        </trans-unit>
        <trans-unit id="c2bcab92bdc244db609a58e049f5cefc054387e2" translate="yes" xml:space="preserve">
          <source>EXPONENT_SYMBOL</source>
          <target state="translated">EXPONENT_SYMBOL</target>
        </trans-unit>
        <trans-unit id="26a2fbfc322563a8440845ba951ca490ee30369d" translate="yes" xml:space="preserve">
          <source>EXTCRC</source>
          <target state="translated">EXTCRC</target>
        </trans-unit>
        <trans-unit id="cb537b8baaa53b3f29896a0373eaa7d0333a79eb" translate="yes" xml:space="preserve">
          <source>EXTENDED_FILTERING</source>
          <target state="translated">EXTENDED_FILTERING</target>
        </trans-unit>
        <trans-unit id="4db927d43d61b35fff54bd6c323b8710b34c3d99" translate="yes" xml:space="preserve">
          <source>EXTENSION_INSTALLATION</source>
          <target state="translated">EXTENSION_INSTALLATION</target>
        </trans-unit>
        <trans-unit id="41eb60c34fe710529f77d955b275d64c5915a5de" translate="yes" xml:space="preserve">
          <source>EXTENSION_LIST</source>
          <target state="translated">EXTENSION_LIST</target>
        </trans-unit>
        <trans-unit id="6857c1686c9ac8872c8c0399e4cf9dc0375c2608" translate="yes" xml:space="preserve">
          <source>EXTENSION_NAME</source>
          <target state="translated">EXTENSION_NAME</target>
        </trans-unit>
        <trans-unit id="5773fcd27b5d64b8c5e2a344515db52b928e31a2" translate="yes" xml:space="preserve">
          <source>EXTHDR</source>
          <target state="translated">EXTHDR</target>
        </trans-unit>
        <trans-unit id="a45713b57586e6acc311c72dac2275618c96be2c" translate="yes" xml:space="preserve">
          <source>EXTLEN</source>
          <target state="translated">EXTLEN</target>
        </trans-unit>
        <trans-unit id="d898f6ff8fc917535a2d6319379be4322d743dc2" translate="yes" xml:space="preserve">
          <source>EXTSIG</source>
          <target state="translated">EXTSIG</target>
        </trans-unit>
        <trans-unit id="4b242b26c327d4a78a810fa263c50adc3f2ef775" translate="yes" xml:space="preserve">
          <source>EXTSIZ</source>
          <target state="translated">EXTSIZ</target>
        </trans-unit>
        <trans-unit id="a6d0cff754314713de966651f47bf73018de3040" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ArrayList&lt;/code&gt; instance has a</source>
          <target state="translated">각 &lt;code&gt;ArrayList&lt;/code&gt; 인스턴스에는</target>
        </trans-unit>
        <trans-unit id="a840f61339005907763e96498f0cf96263613394" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CertPath&lt;/code&gt; object must support one or more encodings so that the object can be translated into a byte array for storage or transmission to other parties. Preferably, these encodings should be well-documented standards (such as PKCS#7). One of the encodings supported by a &lt;code&gt;CertPath&lt;/code&gt; is considered the default encoding. This encoding is used if no encoding is explicitly requested (for the &lt;a href=&quot;certpath#getEncoded--&quot;&gt;&lt;code&gt;getEncoded()&lt;/code&gt;&lt;/a&gt; method, for instance).</source>
          <target state="translated">각 &lt;code&gt;CertPath&lt;/code&gt; 객체는 하나 이상의 인코딩을 지원해야 객체를 저장하거나 다른 당사자에게 전송할 수 있도록 바이트 배열로 변환 할 수 있습니다. 바람직하게는, 이들 인코딩은 잘 문서화 된 표준 (예를 들어 PKCS # 7)이어야한다. &lt;code&gt;CertPath&lt;/code&gt; 에서 지원하는 인코딩 중 하나가 기본 인코딩으로 간주됩니다. 이 인코딩은 명시 적으로 요청 된 인코딩이없는 경우 (예 : &lt;a href=&quot;certpath#getEncoded--&quot;&gt; &lt;code&gt;getEncoded()&lt;/code&gt; &lt;/a&gt; 메소드의 경우) 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="149fca2b607196a4885c857e57aa928b14d4cd95" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CompiledScript&lt;/code&gt; is associated with a &lt;code&gt;ScriptEngine&lt;/code&gt; -- A call to an &lt;code&gt;eval&lt;/code&gt; method of the &lt;code&gt;CompiledScript&lt;/code&gt; causes the execution of the script by the &lt;code&gt;ScriptEngine&lt;/code&gt;. Changes in the state of the &lt;code&gt;ScriptEngine&lt;/code&gt; caused by execution of the &lt;code&gt;CompiledScript&lt;/code&gt; may visible during subsequent executions of scripts by the engine.</source>
          <target state="translated">각 &lt;code&gt;CompiledScript&lt;/code&gt; 를는 와 연관된 &lt;code&gt;ScriptEngine&lt;/code&gt; -에 대한 호출 &lt;code&gt;eval&lt;/code&gt; 의 방법 &lt;code&gt;CompiledScript&lt;/code&gt; 를는 바이 스크립트 실행 발생 &lt;code&gt;ScriptEngine&lt;/code&gt; 를 검색 . &lt;code&gt;CompiledScript&lt;/code&gt; 실행으로 인한 &lt;code&gt;ScriptEngine&lt;/code&gt; 상태의 변경 사항 은 엔진에서 후속 스크립트를 실행하는 동안 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f27124d10894e68d1709bed5e29c408a3fa942eb" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ImageReaderSpi&lt;/code&gt; provides several types of information about the &lt;code&gt;ImageReader&lt;/code&gt; class with which it is associated.</source>
          <target state="translated">각 &lt;code&gt;ImageReaderSpi&lt;/code&gt; 는 연결된 &lt;code&gt;ImageReader&lt;/code&gt; 클래스 에 대한 여러 유형의 정보를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="72ee52ae769db4712131ca37095c4dc2f78ce671" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ImageWriterSpi&lt;/code&gt; provides several types of information about the &lt;code&gt;ImageWriter&lt;/code&gt; class with which it is associated.</source>
          <target state="translated">각 &lt;code&gt;ImageWriterSpi&lt;/code&gt; 는 연결된 &lt;code&gt;ImageWriter&lt;/code&gt; 클래스 에 대한 여러 유형의 정보를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="9fd3cc0500b20ea7e632cc10c3d71e047b6e2776" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; specified implements additional checks on a certificate. Typically, these are checks to process and verify private extensions contained in certificates. Each &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; should be instantiated with any initialization parameters needed to execute the check.</source>
          <target state="translated">지정된 각 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; 는 인증서에 대한 추가 검사를 구현합니다. 일반적으로 이들은 인증서에 포함 된 개인용 확장을 처리하고 확인하기위한 검사입니다. 각 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; 는 점검을 실행하는 데 필요한 초기화 매개 변수로 인스턴스화해야합니다.</target>
        </trans-unit>
        <trans-unit id="c4bc814f0442e2a365e1984e9a9ac3e17be723aa" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; must be able to check the revocation status of certificates with OCSP and CRLs. By default, OCSP is the preferred mechanism for checking revocation status, with CRLs as the fallback mechanism. However, this preference can be switched to CRLs with the &lt;a href=&quot;pkixrevocationchecker.option#PREFER_CRLS&quot;&gt;&lt;code&gt;PREFER_CRLS&lt;/code&gt;&lt;/a&gt; option. In addition, the fallback mechanism can be disabled with the &lt;a href=&quot;pkixrevocationchecker.option#NO_FALLBACK&quot;&gt;&lt;code&gt;NO_FALLBACK&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">각 &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; 는 OCSP 및 CRL을 사용하여 인증서의 폐기 상태를 확인할 수 있어야합니다. 기본적으로 OCSP는 CRL을 폴백 메커니즘으로 사용하여 해지 상태를 확인하는 데 선호되는 메커니즘입니다. 그러나 &lt;a href=&quot;pkixrevocationchecker.option#PREFER_CRLS&quot;&gt; &lt;code&gt;PREFER_CRLS&lt;/code&gt; &lt;/a&gt; 옵션 을 사용하여이 환경 설정을 CRL로 전환 할 수 있습니다 . 또한 &lt;a href=&quot;pkixrevocationchecker.option#NO_FALLBACK&quot;&gt; &lt;code&gt;NO_FALLBACK&lt;/code&gt; &lt;/a&gt; 옵션을 사용하여 폴백 메커니즘을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6f3faea01a84f93ced762c58f36c9ec3c5d9f8eb" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ProcessBuilder&lt;/code&gt; instance manages a collection of process attributes. The &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method creates a new &lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; instance with those attributes. The &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method can be invoked repeatedly from the same instance to create new subprocesses with identical or related attributes.</source>
          <target state="translated">각 &lt;code&gt;ProcessBuilder&lt;/code&gt; 인스턴스는 프로세스 속성의 컬렉션을 관리합니다. &lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt; 메소드는 새로운 생성 &lt;a href=&quot;process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt; 해당 속성과 인스턴스를. &lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt; 메소드는, 동일하거나 관련 특성과 새로운 하위 프로세스를 생성하기 위해 동일한 인스턴스에서 반복적으로 호출 될 수있다.</target>
        </trans-unit>
        <trans-unit id="70a825afc410be57f11b3140618489849a3eca76" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ThreadGroup&lt;/code&gt; will receive its own instance; this allows different &lt;code&gt;Applet&lt;/code&gt;s in the same browser (for example) to each have their own registry.</source>
          <target state="translated">각 &lt;code&gt;ThreadGroup&lt;/code&gt; 은 자체 인스턴스를받습니다. 이것은 같은 브라우저 (예를 들어)에서 서로 다른 &lt;code&gt;Applet&lt;/code&gt; 이 각각 자신의 레지스트리를 갖도록합니다.</target>
        </trans-unit>
        <trans-unit id="ead1ca17c6d920968eacad59c4f36582e117a902" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;byte&lt;/code&gt; in the subarray is converted to a &lt;code&gt;char&lt;/code&gt; as specified in the method above.</source>
          <target state="translated">하위 배열의 각 &lt;code&gt;byte&lt;/code&gt; 는 위의 방법에서 지정한대로 &lt;code&gt;char&lt;/code&gt; 로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="b7d4cbe8023a80b2c2a8860e8d316e49318ead98" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;invokedynamic&lt;/code&gt; instruction statically specifies its own bootstrap method as a constant pool reference. The constant pool reference also specifies the call site's name and type descriptor, just like &lt;code&gt;invokevirtual&lt;/code&gt; and the other invoke instructions.</source>
          <target state="translated">각 &lt;code&gt;invokedynamic&lt;/code&gt; 명령어는 고유 한 부트 스트랩 방법을 상수 풀 참조로 정적으로 지정합니다. 상수 풀 참조는 &lt;code&gt;invokevirtual&lt;/code&gt; 및 기타 호출 명령과 마찬가지로 호출 사이트의 이름 및 유형 설명자를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="ea0ce09c4af09947386ad8cc81d2d4762a70f4c5" translate="yes" xml:space="preserve">
          <source>Each &lt;em&gt;key&lt;/em&gt; is a nonempty string of characters which may not contain any of the characters comma (&lt;code&gt;,&lt;/code&gt;), equals (&lt;code&gt;=&lt;/code&gt;), colon, asterisk, or question mark. The same key may not occur twice in a given ObjectName.</source>
          <target state="translated">각 &lt;em&gt;키&lt;/em&gt; 는 비어 있지 않은 문자열로 쉼표 ( &lt;code&gt;,&lt;/code&gt; ), 등호 ( &lt;code&gt;=&lt;/code&gt; ), 콜론, 별표 또는 물음표를 포함 할 수 없습니다 . 지정된 ObjectName에서 동일한 키가 두 번 나타나지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a8216429331768e0b4417c39ef6544205df56fd" translate="yes" xml:space="preserve">
          <source>Each &lt;em&gt;value&lt;/em&gt; associated with a key is a string of characters that is either unquoted or quoted.</source>
          <target state="translated">키와 관련된 각 &lt;em&gt;값&lt;/em&gt; 은 따옴표 또는 따옴표로 묶인 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="63200ade0ddff96018a1d34e2c186a641ed81ded" translate="yes" xml:space="preserve">
          <source>Each Hijrah variant is configured individually. Each variant is defined by a property resource that defines the &lt;code&gt;ID&lt;/code&gt;, the &lt;code&gt;calendar type&lt;/code&gt;, the start of the calendar, the alignment with the ISO calendar, and the length of each month for a range of years. The variants are identified in the &lt;code&gt;calendars.properties&lt;/code&gt; file. The new properties are prefixed with &lt;code&gt;&quot;calendars.hijrah.&quot;&lt;/code&gt;:</source>
          <target state="translated">각 Hijrah 변형은 개별적으로 구성됩니다. 각 변형은 &lt;code&gt;ID&lt;/code&gt; , &lt;code&gt;calendar type&lt;/code&gt; , 달력 의 시작, ISO 달력과의 정렬 및 연도 범위의 각 월 길이 를 정의하는 속성 자원으로 정의 됩니다. 변형은 &lt;code&gt;calendars.properties&lt;/code&gt; 파일 에서 식별 됩니다. 새로운 속성은 &lt;code&gt;&quot;calendars.hijrah.&quot;&lt;/code&gt; 로 시작 됩니다. :</target>
        </trans-unit>
        <trans-unit id="55c1e383d0a9ffc65595adce6358af59c57f36b2" translate="yes" xml:space="preserve">
          <source>Each HijrahDate is created bound to a particular HijrahChronology, The same chronology is propagated to each HijrahDate computed from the date. To use a different Hijrah variant, its HijrahChronology can be used to create new HijrahDate instances. Alternatively, the &lt;a href=&quot;hijrahdate#withVariant-java.time.chrono.HijrahChronology-&quot;&gt;&lt;code&gt;withVariant(java.time.chrono.HijrahChronology)&lt;/code&gt;&lt;/a&gt; method can be used to convert to a new HijrahChronology.</source>
          <target state="translated">각 HijrahDate는 특정 HijrahChronology에 바인딩되어 생성됩니다. 날짜로부터 계산 된 각 HijrahDate에 동일한 연대기가 전파됩니다. 다른 Hijrah 변형을 사용하기 위해 HijrahChronology를 사용하여 새 HijrahDate 인스턴스를 만들 수 있습니다. 또는 &lt;a href=&quot;hijrahdate#withVariant-java.time.chrono.HijrahChronology-&quot;&gt; &lt;code&gt;withVariant(java.time.chrono.HijrahChronology)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 새 HijrahChronology로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc1c16ba9d553f616b5d2859beee5990afc805d9" translate="yes" xml:space="preserve">
          <source>Each HttpURLConnection instance is used to make a single request but the underlying network connection to the HTTP server may be transparently shared by other instances. Calling the close() methods on the InputStream or OutputStream of an HttpURLConnection after a request may free network resources associated with this instance but has no effect on any shared persistent connection. Calling the disconnect() method may close the underlying socket if a persistent connection is otherwise idle at that time.</source>
          <target state="translated">각 HttpURLConnection 인스턴스는 단일 요청을하는 데 사용되지만 HTTP 서버에 대한 기본 네트워크 연결은 다른 인스턴스와 투명하게 공유 될 수 있습니다. 요청 후 HttpURLConnection의 InputStream 또는 OutputStream에서 close () 메서드를 호출하면이 인스턴스와 연결된 네트워크 리소스가 해제 될 수 있지만 공유 영구 연결에는 영향을 미치지 않습니다. 그 때 영구 연결이 유휴 상태 인 경우 disconnect () 메서드를 호출하면 기본 소켓이 닫힐 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db30d9a58fa9a7fc324f1e68bab8617024f37c0e" translate="yes" xml:space="preserve">
          <source>Each Logger and each Handler can have a filter associated with it. The Logger or Handler will call the isLoggable method to check if a given LogRecord should be published. If isLoggable returns false, the LogRecord will be discarded.</source>
          <target state="translated">각 로거와 각 핸들러에는 이와 연관된 필터가있을 수 있습니다. 로거 또는 핸들러는 isLoggable 메소드를 호출하여 지정된 LogRecord가 공개되어야하는지 여부를 확인합니다. isLoggable이 false를 반환하면 LogRecord가 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="b4b441776e0dfacc09dbb8e4364d83bf2d0985f0" translate="yes" xml:space="preserve">
          <source>Each Logger has a &quot;Level&quot; associated with it. This reflects a minimum Level that this logger cares about. If a Logger's level is set to &lt;code&gt;null&lt;/code&gt;, then its effective level is inherited from its parent, which may in turn obtain it recursively from its parent, and so on up the tree.</source>
          <target state="translated">각 로거에는 &quot;레벨&quot;이 연결되어 있습니다. 이것은이 로거가 신경 쓰는 최소 레벨을 반영합니다. 로거의 레벨이 &lt;code&gt;null&lt;/code&gt; 로 설정되면 (자) , 실효 레벨은 그 부모로부터 상속되어, 그 부모로부터 재귀 적으로 얻을 수있는 등, 트리의 위로 올라갑니다.</target>
        </trans-unit>
        <trans-unit id="0539a3e314b03b3ea9a0cbb43e0f8610ddc537c5" translate="yes" xml:space="preserve">
          <source>Each Logger keeps track of a &quot;parent&quot; Logger, which is its nearest existing ancestor in the Logger namespace.</source>
          <target state="translated">각 로거는 &quot;상위&quot;로거를 추적하며, 이는 로거 네임 스페이스에서 가장 가까운 기존 조상입니다.</target>
        </trans-unit>
        <trans-unit id="b96a7dd0055962446eaf1a58405a8ea9dd09ba04" translate="yes" xml:space="preserve">
          <source>Each Logger may have a &lt;code&gt;ResourceBundle&lt;/code&gt; associated with it. The &lt;code&gt;ResourceBundle&lt;/code&gt; may be specified by name, using the &lt;a href=&quot;logger#getLogger-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;getLogger(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt; factory method, or by value - using the &lt;a href=&quot;logger#setResourceBundle-java.util.ResourceBundle-&quot;&gt;&lt;code&gt;setResourceBundle&lt;/code&gt;&lt;/a&gt; method. This bundle will be used for localizing logging messages. If a Logger does not have its own &lt;code&gt;ResourceBundle&lt;/code&gt; or resource bundle name, then it will inherit the &lt;code&gt;ResourceBundle&lt;/code&gt; or resource bundle name from its parent, recursively up the tree.</source>
          <target state="translated">각 로거에는 &lt;code&gt;ResourceBundle&lt;/code&gt; 이 연결되어있을 수 있습니다. &lt;code&gt;ResourceBundle&lt;/code&gt; 은 USING 이름으로 지정 될 수있다 &lt;a href=&quot;logger#getLogger-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;getLogger(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt; 공장 메소드 또는 값에 의해 -은 USING &lt;a href=&quot;logger#setResourceBundle-java.util.ResourceBundle-&quot;&gt; &lt;code&gt;setResourceBundle&lt;/code&gt; &lt;/a&gt; 방법. 이 번들은 로깅 메시지를 현지화하는 데 사용됩니다. 로거에 자체 &lt;code&gt;ResourceBundle&lt;/code&gt; 또는 자원 번들 이름 이없는 경우 , 트리에서 재귀 적으로 상위에서 &lt;code&gt;ResourceBundle&lt;/code&gt; 또는 자원 번들 이름을 상속합니다 .</target>
        </trans-unit>
        <trans-unit id="45cd0cc22b239c187710f4ce2bcccac9b6d7dc99" translate="yes" xml:space="preserve">
          <source>Each PropertyEditor should have a null constructor.</source>
          <target state="translated">각 PropertyEditor에는 널 생성자가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="58dd6b68d2a52f4d25d07ee4f763280ce9fd2773" translate="yes" xml:space="preserve">
          <source>Each SSL/TLS connection must have one client and one server, thus each endpoint must decide which role to assume. This choice determines who begins the handshaking process as well as which type of messages should be sent by each party. The method &lt;a href=&quot;sslengine#setUseClientMode-boolean-&quot;&gt;&lt;code&gt;setUseClientMode(boolean)&lt;/code&gt;&lt;/a&gt; configures the mode. Once the initial handshaking has started, an &lt;code&gt;SSLEngine&lt;/code&gt; can not switch between client and server modes, even when performing renegotiations.</source>
          <target state="translated">각 SSL / TLS 연결에는 하나의 클라이언트와 하나의 서버가 있어야하므로 각 엔드 포인트는 어떤 역할을 맡을 것인지 결정해야합니다. 이 선택에 따라 핸드 셰이 킹 프로세스를 시작하는 사람과 각 당사자가 어떤 유형의 메시지를 보내야하는지 결정됩니다. &lt;a href=&quot;sslengine#setUseClientMode-boolean-&quot;&gt; &lt;code&gt;setUseClientMode(boolean)&lt;/code&gt; &lt;/a&gt; 메소드 는 모드를 구성합니다. 초기 핸드 쉐이킹이 시작되면 재협상을 수행하더라도 &lt;code&gt;SSLEngine&lt;/code&gt; 은 클라이언트와 서버 모드 사이를 전환 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="dfee108b90e259b3bdecf55d6cbeb3c5f9c291d0" translate="yes" xml:space="preserve">
          <source>Each action in a thread</source>
          <target state="translated">스레드의 각 동작</target>
        </trans-unit>
        <trans-unit id="f22835e80cd2b663031fbea21b671773b92c12f8" translate="yes" xml:space="preserve">
          <source>Each attribute class implements one or more of these tagging subinterfaces to indicate where the attribute can be used in the API. If an attribute class implements multiple tagging subinterfaces, the attribute can be used in multiple contexts. For example, the media attribute can apply to one document in a print job as a &lt;code&gt;DocAttribute&lt;/code&gt; or to an entire print job as a &lt;code&gt;PrintRequestAttribute&lt;/code&gt;. Certain low-level attributes are never used on their own but are always aggregated into higher-level attributes. These low-level attribute classes only implement interface &lt;a href=&quot;attribute&quot;&gt;Attribute&lt;/a&gt;, not any of the tagging subinterfaces.</source>
          <target state="translated">각 속성 클래스는 이러한 태그 지정 하위 인터페이스 중 하나 이상을 구현하여 API에서 속성을 사용할 수있는 위치를 나타냅니다. 속성 클래스가 여러 태그 지정 서브 인터페이스를 구현하는 경우 속성을 여러 컨텍스트에서 사용할 수 있습니다. 예를 들어, 미디어 속성은 인쇄 작업에서 하나의 문서에 &lt;code&gt;DocAttribute&lt;/code&gt; 또는 전체 인쇄 작업에 &lt;code&gt;PrintRequestAttribute&lt;/code&gt; 로 적용될 수 있습니다 . 특정 하위 레벨 속성은 자체적으로 사용되지 않지만 항상 상위 레벨 속성으로 집계됩니다. 이러한 저수준 속성 클래스 는 태그 지정 하위 인터페이스가 아닌 인터페이스 &lt;a href=&quot;attribute&quot;&gt;Attribute&lt;/a&gt; 만 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="bdc4f018d78ba26ff9dc9ce389eb162a1bc736da" translate="yes" xml:space="preserve">
          <source>Each attribute class implements the &lt;code&gt;Attribute&lt;/code&gt; interface, either directly or indirectly, to mark it as a printing attribute. An attribute class that can appear in restricted attribute sets in certain contexts also implements one or more subinterfaces of &lt;code&gt;Attribute&lt;/code&gt;. Most attribute classes also extend the appropriate abstract syntax class to get the implementation. Consider the &lt;code&gt;Sides&lt;/code&gt; attribute class:</source>
          <target state="translated">각 속성 클래스는 &lt;code&gt;Attribute&lt;/code&gt; 인쇄 속성으로 표시하기 위해 직접 또는 간접적으로 속성 인터페이스를 구현 합니다. 특정 컨텍스트에서 제한된 속성 세트에 나타날 수있는 속성 클래스는 하나 이상의 &lt;code&gt;Attribute&lt;/code&gt; 서브 인터페이스를 구현 합니다. 대부분의 속성 클래스는 적절한 추상 구문 클래스를 확장하여 구현합니다. &lt;code&gt;Sides&lt;/code&gt; 속성 클래스를 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="1cf4053aa46bfb1c3e5e89ba0fab4d494a89a713" translate="yes" xml:space="preserve">
          <source>Each attribute key of the AttributedCharacterIterator will be of type &lt;code&gt;DateFormat.Field&lt;/code&gt;, with the corresponding attribute value being the same as the attribute key.</source>
          <target state="translated">AttributedCharacterIterator의 각 속성 키는 &lt;code&gt;DateFormat.Field&lt;/code&gt; 유형 이며 해당 속성 값은 속성 키와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="5713dda8efda83aaf04914a5b85a2f542a3aa4d2" translate="yes" xml:space="preserve">
          <source>Each attribute key of the AttributedCharacterIterator will be of type &lt;code&gt;Field&lt;/code&gt;. It is up to each &lt;code&gt;Format&lt;/code&gt; implementation to define what the legal values are for each attribute in the &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;, but typically the attribute key is also used as the attribute value.</source>
          <target state="translated">AttributedCharacterIterator의 각 속성 키는 &lt;code&gt;Field&lt;/code&gt; 유형 입니다. &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 의 각 속성에 유효한 값을 정의하는 것은 각 &lt;code&gt;Format&lt;/code&gt; 구현에 달려 있지만 일반적으로 속성 키도 속성 값으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="170153981068eb46095e70fc8e45a9ab4b3358c2" translate="yes" xml:space="preserve">
          <source>Each attribute key of the AttributedCharacterIterator will be of type &lt;code&gt;NumberFormat.Field&lt;/code&gt;, with the attribute value being the same as the attribute key.</source>
          <target state="translated">AttributedCharacterIterator의 각 속성 키는 &lt;code&gt;NumberFormat.Field&lt;/code&gt; 유형 이며 속성 값은 속성 키와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="5ee2047cab7c974ace281bd2ac217169d97bf32a" translate="yes" xml:space="preserve">
          <source>Each byte read from the input stream is regarded as a character in the range &lt;code&gt;'\u0000'&lt;/code&gt; through &lt;code&gt;'\u00FF'&lt;/code&gt;. The character value is used to look up five possible attributes of the character:</source>
          <target state="translated">입력 스트림에서 읽은 각 바이트는 &lt;code&gt;'\u0000'&lt;/code&gt; ~ &lt;code&gt;'\u00FF'&lt;/code&gt; 범위의 문자로 간주됩니다 . 문자 값은 문자의 5 가지 가능한 속성을 찾는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="565935ca5a7a8dff2c75d40a78fe34cbc9914ba0" translate="yes" xml:space="preserve">
          <source>Each call to the &lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt;&lt;code&gt;getKeyStore()&lt;/code&gt;&lt;/a&gt; method on the returned builder will return a new KeyStore object of type &lt;code&gt;type&lt;/code&gt;. Its &lt;a href=&quot;keystore#load-java.security.KeyStore.LoadStoreParameter-&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; method is invoked using a &lt;code&gt;LoadStoreParameter&lt;/code&gt; that encapsulates &lt;code&gt;protection&lt;/code&gt;.</source>
          <target state="translated">리턴 된 빌더 에서 &lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt; &lt;code&gt;getKeyStore()&lt;/code&gt; &lt;/a&gt; 메소드를 호출 할 때마다 type &lt;code&gt;type&lt;/code&gt; 의 새 KeyStore 오브젝트가 리턴됩니다 . 그 &lt;a href=&quot;keystore#load-java.security.KeyStore.LoadStoreParameter-&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt; 메소드는 사용하여 호출 &lt;code&gt;LoadStoreParameter&lt;/code&gt; 캡슐화 &lt;code&gt;protection&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62a2b8eb8432d2bb19b62991410a2d367b2cdc90" translate="yes" xml:space="preserve">
          <source>Each category of events is handled by a corresponding listener: &lt;code&gt;NamespaceChangeListener&lt;/code&gt;, &lt;code&gt;ObjectChangeListener&lt;/code&gt;.</source>
          <target state="translated">각 이벤트 범주는 해당 리스너 ( &lt;code&gt;NamespaceChangeListener&lt;/code&gt; , &lt;code&gt;ObjectChangeListener&lt;/code&gt; )에 의해 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="415096700b0f811e1c654bf65b30052bf2302aff" translate="yes" xml:space="preserve">
          <source>Each chronology must define a chronology ID that is unique within the system. If the chronology represents a calendar system defined by the CLDR specification then the calendar type is the concatenation of the CLDR type and, if applicable, the CLDR variant,</source>
          <target state="translated">각 연대기는 시스템 내에서 고유 한 연대기 ID를 정의해야합니다. 연대기가 CLDR 사양에 의해 정의 된 캘린더 시스템을 나타내는 경우 캘린더 유형은 CLDR 유형과 해당되는 경우 CLDR 변형의 연결입니다.</target>
        </trans-unit>
        <trans-unit id="ae2d6cc6afa42e50b69369bd84b9bdddfa4ee6b9" translate="yes" xml:space="preserve">
          <source>Each cipher suite in the &lt;code&gt;suites&lt;/code&gt; parameter must have been listed by getSupportedCipherSuites(), or the method will fail. Following a successful call to this method, only suites listed in the &lt;code&gt;suites&lt;/code&gt; parameter are enabled for use.</source>
          <target state="translated">&lt;code&gt;suites&lt;/code&gt; 매개 변수 의 각 암호 스위트는 getSupportedCipherSuites ()에 의해 나열되어야합니다. 그렇지 않으면 메소드가 실패합니다. 이 메소드를 성공적으로 호출하면 &lt;code&gt;suites&lt;/code&gt; 매개 변수에 나열된 스위트 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9c3b451a2d3ee3d8844988245d012190589a542" translate="yes" xml:space="preserve">
          <source>Each class implementing &lt;code&gt;ScriptEngine&lt;/code&gt; has a corresponding factory that exposes metadata describing the engine class.</source>
          <target state="translated">&lt;code&gt;ScriptEngine&lt;/code&gt; 을 구현하는 각 클래스 에는 엔진 클래스를 설명하는 메타 데이터를 노출하는 해당 팩토리가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a91d31af8f03563292751345aae397335abb093" translate="yes" xml:space="preserve">
          <source>Each class named by &lt;code&gt;markerInterfaces&lt;/code&gt; is subject to the same restrictions as &lt;code&gt;Rd&lt;/code&gt;, the return type of &lt;code&gt;invokedType&lt;/code&gt;, as described &lt;a href=&quot;lambdametafactory&quot;&gt;&lt;code&gt;above&lt;/code&gt;&lt;/a&gt;. Each &lt;code&gt;MethodType&lt;/code&gt; named by &lt;code&gt;bridges&lt;/code&gt; is subject to the same restrictions as &lt;code&gt;samMethodType&lt;/code&gt;, as described &lt;a href=&quot;lambdametafactory&quot;&gt;&lt;code&gt;above&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;markerInterfaces&lt;/code&gt; 로 명명 된 각 클래스 에는 &lt;a href=&quot;lambdametafactory&quot;&gt; &lt;code&gt;above&lt;/code&gt; &lt;/a&gt; 설명한 &lt;code&gt;invokedType&lt;/code&gt; 의 반환 유형 인 &lt;code&gt;Rd&lt;/code&gt; 와 동일한 제한이 적용됩니다 . &lt;code&gt;bridges&lt;/code&gt; 로 명명 된 각 &lt;code&gt;MethodType&lt;/code&gt; 에는 &lt;a href=&quot;lambdametafactory&quot;&gt; &lt;code&gt;above&lt;/code&gt; &lt;/a&gt; 설명한 대로 &lt;code&gt;samMethodType&lt;/code&gt; 과 동일한 제한이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="6d60b28ad1f9a5d1a9d51e8f7b9a52c84ed48aae" translate="yes" xml:space="preserve">
          <source>Each client is created by an instance of &lt;a href=&quot;jmxconnectorprovider&quot;&gt;&lt;code&gt;JMXConnectorProvider&lt;/code&gt;&lt;/a&gt;. This instance is found as follows. Suppose the given &lt;a href=&quot;jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt; looks like &lt;code&gt;&quot;service:jmx:&lt;em&gt;protocol&lt;/em&gt;:&lt;em&gt;remainder&lt;/em&gt;&quot;&lt;/code&gt;. Then the factory will attempt to find the appropriate &lt;a href=&quot;jmxconnectorprovider&quot;&gt;&lt;code&gt;JMXConnectorProvider&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt;. Each occurrence of the character &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; in &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; is replaced by &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt;, respectively.</source>
          <target state="translated">각 클라이언트는 &lt;a href=&quot;jmxconnectorprovider&quot;&gt; &lt;code&gt;JMXConnectorProvider&lt;/code&gt; &lt;/a&gt; 인스턴스에 의해 작성됩니다 . 이 인스턴스는 다음과 같습니다. 주어진 가정 &lt;a href=&quot;jmxserviceurl&quot;&gt; &lt;code&gt;JMXServiceURL&lt;/code&gt; &lt;/a&gt; 같은 외모 &lt;code&gt;&quot;service:jmx:&lt;em&gt;protocol&lt;/em&gt;:&lt;em&gt;remainder&lt;/em&gt;&quot;&lt;/code&gt; . 그런 다음 공장은 적절한 찾기 위해 시도합니다 &lt;a href=&quot;jmxconnectorprovider&quot;&gt; &lt;code&gt;JMXConnectorProvider&lt;/code&gt; &lt;/a&gt; 을위한 &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; . 각 문자의 발생 &lt;code&gt;+&lt;/code&gt; 또는 &lt;code&gt;-&lt;/code&gt; 의 &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; 로 대체됩니다 &lt;code&gt;.&lt;/code&gt; 또는 &lt;code&gt;_&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8000ceb2cb5760f446a63dd9dff4d11a4e8ec2d3" translate="yes" xml:space="preserve">
          <source>Each configuration file should contain a list of fully-qualified class names, one per line. Space and tab characters surrounding each name, as well as blank lines, are ignored. The comment character is &lt;code&gt;'#'&lt;/code&gt; (&lt;code&gt;0x23&lt;/code&gt;); on each line all characters following the first comment character are ignored. The file must be encoded in UTF-8.</source>
          <target state="translated">각 구성 파일에는 정규화 된 클래스 이름 목록이 한 줄에 하나씩 있어야합니다. 빈 줄뿐만 아니라 각 이름을 둘러싼 공백과 탭 문자는 무시됩니다. 주석 문자는 &lt;code&gt;'#'&lt;/code&gt; ( &lt;code&gt;0x23&lt;/code&gt; )입니다. 각 줄에서 첫 번째 주석 문자 다음의 모든 문자는 무시됩니다. 파일은 UTF-8로 인코딩되어야합니다.</target>
        </trans-unit>
        <trans-unit id="782519cfed22f6e5630e1de515f995c9b7d02625" translate="yes" xml:space="preserve">
          <source>Each connector server is created by an instance of &lt;a href=&quot;jmxconnectorserverprovider&quot;&gt;&lt;code&gt;JMXConnectorServerProvider&lt;/code&gt;&lt;/a&gt;. This instance is found as follows. Suppose the given &lt;a href=&quot;jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt; looks like &lt;code&gt;&quot;service:jmx:&lt;em&gt;protocol&lt;/em&gt;:&lt;em&gt;remainder&lt;/em&gt;&quot;&lt;/code&gt;. Then the factory will attempt to find the appropriate &lt;a href=&quot;jmxconnectorserverprovider&quot;&gt;&lt;code&gt;JMXConnectorServerProvider&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt;. Each occurrence of the character &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; in &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; is replaced by &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt;, respectively.</source>
          <target state="translated">각 커넥터 서버는 &lt;a href=&quot;jmxconnectorserverprovider&quot;&gt; &lt;code&gt;JMXConnectorServerProvider&lt;/code&gt; &lt;/a&gt; 인스턴스에 의해 작성됩니다 . 이 인스턴스는 다음과 같습니다. 주어진 &lt;a href=&quot;jmxserviceurl&quot;&gt; &lt;code&gt;JMXServiceURL&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;&quot;service:jmx:&lt;em&gt;protocol&lt;/em&gt;:&lt;em&gt;remainder&lt;/em&gt;&quot;&lt;/code&gt; 와 같다고 가정 해 봅시다 . 그런 다음 공장은 적절한 찾기 위해 시도합니다 &lt;a href=&quot;jmxconnectorserverprovider&quot;&gt; &lt;code&gt;JMXConnectorServerProvider&lt;/code&gt; &lt;/a&gt; 을위한 &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; . 각 문자의 발생 &lt;code&gt;+&lt;/code&gt; 또는 &lt;code&gt;-&lt;/code&gt; 의 &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; 로 대체됩니다 &lt;code&gt;.&lt;/code&gt; 또는 &lt;code&gt;_&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="57bc38c8f6c57bd6e23990238c181815f876d6f0" translate="yes" xml:space="preserve">
          <source>Each customizer should have a null constructor.</source>
          <target state="translated">각 커 스터 마이저에는 null 생성자가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="47ecc95f5a6c3bf69dcc6fd7a4ebe68db660d248" translate="yes" xml:space="preserve">
          <source>Each customizer should inherit from the java.awt.Component class so it can be instantiated inside an AWT dialog or panel.</source>
          <target state="translated">각 커 스터 마이 저는 java.awt.Component 클래스에서 상속 받아 AWT 대화 상자 나 패널 내에서 인스턴스화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d01b68dad2676514cbe7be058ccbd40bc1155394" translate="yes" xml:space="preserve">
          <source>Each date time instance is composed of fields that are conveniently made available by the APIs. For lower level access to the fields refer to the &lt;code&gt;java.time.temporal&lt;/code&gt; package. Each class includes support for printing and parsing all manner of dates and times. Refer to the &lt;code&gt;java.time.format&lt;/code&gt; package for customization options.</source>
          <target state="translated">각 날짜 시간 인스턴스는 API에서 편리하게 사용할 수있는 필드로 구성됩니다. 필드에 대한 하위 레벨 액세스는 &lt;code&gt;java.time.temporal&lt;/code&gt; 패키지를 참조하십시오 . 각 수업은 모든 방식의 날짜와 시간을 인쇄하고 파싱하는 기능을 지원합니다. 사용자 정의 옵션 에 대해서는 &lt;code&gt;java.time.format&lt;/code&gt; 패키지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a11cc35a89643391e6013e902ac7edeaaeae3d1a" translate="yes" xml:space="preserve">
          <source>Each digit character</source>
          <target state="translated">각 자리 문자</target>
        </trans-unit>
        <trans-unit id="6d1d6f4796b80a8ad203ea5c5b68aef2c7309166" translate="yes" xml:space="preserve">
          <source>Each element in this array corresponds to an observed object in the vector. It contains a bit mask of the flags &lt;a href=&quot;monitor#OBSERVED_OBJECT_ERROR_NOTIFIED&quot;&gt;&lt;code&gt;OBSERVED_OBJECT_ERROR_NOTIFIED&lt;/code&gt;&lt;/a&gt; etc, indicating whether the corresponding notification has already been sent for the MBean being monitored.</source>
          <target state="translated">이 배열의 각 요소는 벡터에서 관찰 된 객체에 해당합니다. 여기에는 플래그 &lt;a href=&quot;monitor#OBSERVED_OBJECT_ERROR_NOTIFIED&quot;&gt; &lt;code&gt;OBSERVED_OBJECT_ERROR_NOTIFIED&lt;/code&gt; &lt;/a&gt; 등 의 비트 마스크가 포함되어 있으며 , 모니터링중인 MBean에 해당 알림이 이미 전송되었는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3f87dde92d31d6810a3ee06f461b787634d6bd98" translate="yes" xml:space="preserve">
          <source>Each element is a &lt;code&gt;CompositeData&lt;/code&gt; representing StackTraceElement containing the following attributes:</source>
          <target state="translated">각 요소는 다음 속성을 포함하는 StackTraceElement를 나타내는 &lt;code&gt;CompositeData&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="1f6bf4d0adf1bf11f2e3b8671e73113281627f53" translate="yes" xml:space="preserve">
          <source>Each element of the set is a &lt;code&gt;String&lt;/code&gt; representing the Object Identifier (OID) of the X.509 extension that is supported. The OID is represented by a set of nonnegative integers separated by periods.</source>
          <target state="translated">세트의 각 요소 는 지원되는 X.509 확장의 OID (Object Identifier)를 나타내는 &lt;code&gt;String&lt;/code&gt; 입니다. OID는 마침표로 구분 된 음이 아닌 정수 세트로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="2dac62c065c1000a9a51697be436335502f33e84" translate="yes" xml:space="preserve">
          <source>Each element represents a method call.</source>
          <target state="translated">각 요소는 메소드 호출을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d19220aee7d71656e00ce6276767f27bb53aaaf2" translate="yes" xml:space="preserve">
          <source>Each entry in a keystore is identified by an &quot;alias&quot; string. In the case of private keys and their associated certificate chains, these strings distinguish among the different ways in which the entity may authenticate itself. For example, the entity may authenticate itself using different certificate authorities, or using different public key algorithms.</source>
          <target state="translated">키 저장소의 각 항목은 &quot;별칭&quot;문자열로 식별됩니다. 개인 키 및 관련 인증서 체인의 경우 이러한 문자열은 엔터티가 자신을 인증 할 수있는 여러 가지 방법을 구분합니다. 예를 들어, 엔티티는 다른 인증 기관을 사용하거나 다른 공개 키 알고리즘을 사용하여 자체 인증 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="088d514368fa29cc6091cc91bcf119d3b0a2d2d3" translate="yes" xml:space="preserve">
          <source>Each entry in the &lt;code&gt;Configuration&lt;/code&gt; is indexed via an application name,</source>
          <target state="translated">&lt;code&gt;Configuration&lt;/code&gt; 각 항목 은 응용 프로그램 이름을 통해 색인화됩니다.</target>
        </trans-unit>
        <trans-unit id="da1f5b3e98b650d15b6fcc93e098064f4007429c" translate="yes" xml:space="preserve">
          <source>Each entry in the &lt;code&gt;Policy&lt;/code&gt; is represented as a &lt;b&gt;&lt;i&gt;grant&lt;/i&gt;&lt;/b&gt; entry. Each &lt;b&gt;&lt;i&gt;grant&lt;/i&gt;&lt;/b&gt; entry specifies a codebase, code signers, and Principals triplet, as well as the Permissions granted to that triplet.</source>
          <target state="translated">&lt;code&gt;Policy&lt;/code&gt; 각 항목은 &lt;b&gt;&lt;i&gt;보조금&lt;/i&gt;&lt;/b&gt; 항목으로 표시됩니다 . 각 &lt;b&gt;&lt;i&gt;부여&lt;/i&gt;&lt;/b&gt; 항목은 코드베이스, 코드 서명자 및 사용자 삼중 항과 해당 삼중 항에 부여 된 권한을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2550370ed13c7f4ac08a6a67450eb8b55df82cad" translate="yes" xml:space="preserve">
          <source>Each extension contains an object identifier, a criticality setting indicating whether it is a critical or a non-critical extension, and and an ASN.1 DER-encoded value. Its ASN.1 definition is:</source>
          <target state="translated">각 확장에는 개체 식별자, 중요 확장인지 아닌지를 나타내는 중요도 설정 및 ASN.1 DER 인코딩 값이 포함됩니다. ASN.1 정의는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="743a4bde1183aedc0cbc8935c3fa92ce0cd4f60b" translate="yes" xml:space="preserve">
          <source>Each extension in a certificate/CRL may be designated as critical or non-critical. A certificate/CRL-using system (an application validating a certificate/CRL) must reject the certificate/CRL if it encounters a critical extension it does not recognize. A non-critical extension may be ignored if it is not recognized.</source>
          <target state="translated">인증서 / CRL의 각 확장은 중요 또는 중요하지 않은 것으로 지정 될 수 있습니다. 인증서 / CRL 사용 시스템 (인증서 / CRL을 검증하는 응용 프로그램)은 인식 할 수없는 중요한 확장명을 발견하면 인증서 / CRL을 거부해야합니다. 중요하지 않은 확장은 인식되지 않으면 무시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7069adeee248e2073c9ff4ae57f7c6095f03187" translate="yes" xml:space="preserve">
          <source>Each file must be separated from the one that follows it by a comma (,).</source>
          <target state="translated">각 파일은 쉼표 (,)로 뒤에 오는 파일과 분리되어야합니다.</target>
        </trans-unit>
        <trans-unit id="d0ae06bf9012c5a5614a45f104ab7638a0ad8399" translate="yes" xml:space="preserve">
          <source>Each given argument object must match the corresponding bound parameter type. If a bound parameter type is a primitive, the argument object must be a wrapper, and will be unboxed to produce the primitive value.</source>
          <target state="translated">주어진 각 인수 객체는 해당 바운드 매개 변수 유형과 일치해야합니다. 바인드 된 매개 변수 유형이 기본 유형 인 경우 인수 오브젝트는 랩퍼 여야하며 기본 값을 생성하기 위해 개봉됩니다.</target>
        </trans-unit>
        <trans-unit id="6e0078f8ee6b18d2ffdb5e7493ab727438f14546" translate="yes" xml:space="preserve">
          <source>Each group defines its own format for the region ID it provides. The TZDB group defines IDs such as 'Europe/London' or 'America/New_York'. TZDB IDs take precedence over other groups.</source>
          <target state="translated">각 그룹은 제공하는 지역 ID에 대해 고유 한 형식을 정의합니다. TZDB 그룹은 '유럽 / 런던'또는 'America / New_York'와 같은 ID를 정의합니다. TZDB ID는 다른 그룹보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="65bc89a3ea9cd46de7285bc3bf8c2cc87bcd59c1" translate="yes" xml:space="preserve">
          <source>Each implementation of a &lt;code&gt;Processor&lt;/code&gt; must provide a public no-argument constructor to be used by tools to instantiate the processor. The tool infrastructure will interact with classes implementing this interface as follows:</source>
          <target state="translated">&lt;code&gt;Processor&lt;/code&gt; 의 각 구현은 도구를 사용하여 프로세서를 인스턴스화하기 위해 인수없는 공용 생성자를 제공해야합니다. 도구 인프라는 다음과 같이이 인터페이스를 구현하는 클래스와 상호 작용합니다.</target>
        </trans-unit>
        <trans-unit id="a3c045647fbfd21ec0428affc10628c1e56392c0" translate="yes" xml:space="preserve">
          <source>Each invocation of a write() method causes the encoding converter to be invoked on the given character(s). The resulting bytes are accumulated in a buffer before being written to the underlying output stream. The size of this buffer may be specified, but by default it is large enough for most purposes. Note that the characters passed to the write() methods are not buffered.</source>
          <target state="translated">write () 메소드를 호출 할 때마다 주어진 문자에서 인코딩 변환기가 호출됩니다. 결과 바이트는 기본 출력 스트림에 기록되기 전에 버퍼에 누적됩니다. 이 버퍼의 크기는 지정 될 수 있지만 기본적으로 대부분의 목적에 충분한 크기입니다. write () 메소드에 전달 된 문자는 버퍼링되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5fe2076d3d2b08d5f4414c4cdde943dd467b1a57" translate="yes" xml:space="preserve">
          <source>Each invocation of one of an InputStreamReader's read() methods may cause one or more bytes to be read from the underlying byte-input stream. To enable the efficient conversion of bytes to characters, more bytes may be read ahead from the underlying stream than are necessary to satisfy the current read operation.</source>
          <target state="translated">InputStreamReader의 read () 메소드 중 하나를 호출 할 때마다 기본 바이트 입력 스트림에서 하나 이상의 바이트를 읽을 수 있습니다. 바이트를 문자로 효율적으로 변환 할 수 있도록하려면 현재 읽기 작업을 충족하는 데 필요한 것보다 기본 스트림에서 더 많은 바이트를 미리 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9473b8fa268ed48aa24d17927cd4344a0eb30672" translate="yes" xml:space="preserve">
          <source>Each invocation of the &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method will decode as many bytes as possible from the input buffer, writing the resulting characters to the output buffer. The &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method returns when more input is required, when there is not enough room in the output buffer, or when a decoding error has occurred. In each case a &lt;a href=&quot;coderresult&quot;&gt;&lt;code&gt;CoderResult&lt;/code&gt;&lt;/a&gt; object is returned to describe the reason for termination. An invoker can examine this object and fill the input buffer, flush the output buffer, or attempt to recover from a decoding error, as appropriate, and try again.</source>
          <target state="translated">&lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; 메소드를 호출 할 때마다 입력 버퍼에서 가능한 많은 바이트를 디코딩하여 결과 문자를 출력 버퍼에 씁니다. &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; 출력 버퍼에 충분한 공간이 없을 때, 또는 디코딩 에러가 발생한 경우에있어서의 복귀가보다 입력이 요구되는 경우. 각각의 경우 종료 이유를 설명하기 위해 &lt;a href=&quot;coderresult&quot;&gt; &lt;code&gt;CoderResult&lt;/code&gt; &lt;/a&gt; 객체가 반환됩니다. 호출자는이 오브젝트를 검사하고 입력 버퍼를 채우거나, 출력 버퍼를 플러시하거나, 디코딩 오류를 적절히 복구 한 후 다시 시도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01c67700d3876b38e31aa40447f02d09292cfb08" translate="yes" xml:space="preserve">
          <source>Each invocation of the &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method will encode as many characters as possible from the input buffer, writing the resulting bytes to the output buffer. The &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method returns when more input is required, when there is not enough room in the output buffer, or when an encoding error has occurred. In each case a &lt;a href=&quot;coderresult&quot;&gt;&lt;code&gt;CoderResult&lt;/code&gt;&lt;/a&gt; object is returned to describe the reason for termination. An invoker can examine this object and fill the input buffer, flush the output buffer, or attempt to recover from an encoding error, as appropriate, and try again.</source>
          <target state="translated">&lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 메소드를 호출 할 때마다 입력 버퍼에서 가능한 많은 문자를 인코딩하여 결과 바이트를 출력 버퍼에 씁니다. &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 출력 버퍼에 충분한 공간이 없을 때, 또는 부호화 에러가 발생한 경우에있어서의 복귀가보다 입력이 요구되는 경우. 각각의 경우 종료 이유를 설명하기 위해 &lt;a href=&quot;coderresult&quot;&gt; &lt;code&gt;CoderResult&lt;/code&gt; &lt;/a&gt; 객체가 반환됩니다. 호출자는이 오브젝트를 검사하고 입력 버퍼를 채우거나, 출력 버퍼를 플러시하거나, 인코딩 오류를 적절히 복구 한 후 다시 시도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e88e400c4654f5b09bd9dd19d97774dccdd2ff9" translate="yes" xml:space="preserve">
          <source>Each invocation of this method enables or disables verbose output globally.</source>
          <target state="translated">이 메소드를 호출 할 때마다 상세 출력을 전체적으로 사용 가능 또는 사용 불가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="cb7cb79e7be4786368a3d0dd817157d0652b7e06" translate="yes" xml:space="preserve">
          <source>Each item value's hash code is added to the returned hash code. If an item value is an array, its hash code is obtained as if by calling the &lt;a href=&quot;../../../java/util/arrays#deepHashCode-java.lang.Object:A-&quot;&gt;&lt;code&gt;deepHashCode&lt;/code&gt;&lt;/a&gt; method for arrays of object reference types or the appropriate overloading of &lt;code&gt;Arrays.hashCode(e)&lt;/code&gt; for arrays of primitive types.</source>
          <target state="translated">각 항목 값의 해시 코드가 반환 된 해시 코드에 추가됩니다. 항목 값이 배열 인 경우 객체 참조 유형의 배열에 대해 &lt;a href=&quot;../../../java/util/arrays#deepHashCode-java.lang.Object:A-&quot;&gt; &lt;code&gt;deepHashCode&lt;/code&gt; &lt;/a&gt; 메소드를 호출 하거나 기본 유형의 배열에 대해 적절한 &lt;code&gt;Arrays.hashCode(e)&lt;/code&gt; 를 오버로드 하여 해시 코드를 얻는 것처럼됩니다 .</target>
        </trans-unit>
        <trans-unit id="b6cf9c462f153d7df40f29787cf703a11033a0aa" translate="yes" xml:space="preserve">
          <source>Each key in an &lt;code&gt;AttributeSet&lt;/code&gt; corresponds to a category, and the value of the key can only be one of the attribute values that belong to the category represented by the key. Thus, unlike a &lt;code&gt;Map&lt;/code&gt;, an &lt;code&gt;AttributeSet&lt;/code&gt; restricts the possible values of a key: an attribute category cannot be set to an attribute value that does not belong to that category.</source>
          <target state="translated">&lt;code&gt;AttributeSet&lt;/code&gt; 의 각 키 는 범주에 해당하며 키 값은 키로 표시되는 범주에 속하는 특성 값 중 하나 일 수 있습니다. 따라서, 달리 &lt;code&gt;Map&lt;/code&gt; , &lt;code&gt;AttributeSet&lt;/code&gt; 키의 가능한 값을 제한한다 : 속성 카테고리는 그 카테고리에 속하지 않는 속성 값으로 설정 될 수 없다.</target>
        </trans-unit>
        <trans-unit id="ac52c43de1066f436085209661d030de63b9572e" translate="yes" xml:space="preserve">
          <source>Each key in the cancelled-key set is removed from each key set of which it is a member, and its channel is deregistered. This step leaves the cancelled-key set empty.</source>
          <target state="translated">취소 된 키 세트의 각 키는 멤버 인 각 키 세트에서 제거되고 해당 채널은 등록 취소됩니다. 이 단계는 취소 된 키 세트를 비워 둡니다.</target>
        </trans-unit>
        <trans-unit id="3cbd27a5e5299b41f1319632d13712009604c3ed" translate="yes" xml:space="preserve">
          <source>Each key object in a &lt;code&gt;WeakHashMap&lt;/code&gt; is stored indirectly as the referent of a weak reference. Therefore a key will automatically be removed only after the weak references to it, both inside and outside of the map, have been cleared by the garbage collector.</source>
          <target state="translated">&lt;code&gt;WeakHashMap&lt;/code&gt; 의 각 키 개체 는 약한 참조의 참조로 간접적으로 저장됩니다. 따라서 가비지 수집기에서 맵 안팎의 약한 참조를 지운 후에 만 ​​키가 자동으로 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="60a53531e28505693c3a4e37c248fd62c97f55c9" translate="yes" xml:space="preserve">
          <source>Each memory pool has a manageable attribute called the</source>
          <target state="translated">각 메모리 풀에는 관리 가능한 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0e2d99e157b618b87e35252d9dc48542f98cb59" translate="yes" xml:space="preserve">
          <source>Each method in an implementation of interface Doc is permitted always to return the same object each time the method is called. This has implications for a Print Job or other caller of a doc object whose print data representation object &quot;consumes&quot; the print data as the caller obtains the print data, such as a print data representation object which is a stream. Once the Print Job has called &lt;a href=&quot;doc#getPrintData--&quot;&gt;&lt;code&gt;getPrintData()&lt;/code&gt;&lt;/a&gt; and obtained the stream, any further calls to &lt;a href=&quot;doc#getPrintData--&quot;&gt;&lt;code&gt;getPrintData()&lt;/code&gt;&lt;/a&gt; will return the same stream object upon which reading may already be in progress,</source>
          <target state="translated">Doc 인터페이스 구현의 각 메소드는 메소드가 호출 될 때마다 항상 동일한 오브젝트를 리턴 할 수 있습니다. 이것은 인쇄 데이터 표현 객체가 호출자가 인쇄 데이터를 얻을 때 인쇄 데이터를 &quot;소비&quot;하는 doc 객체의 인쇄 작업 또는 다른 호출자에게 영향을 미치며, 이는 스트림 인 인쇄 데이터 표현 객체와 같은 것이다. 인쇄 작업이 호출되면 &lt;a href=&quot;doc#getPrintData--&quot;&gt; &lt;code&gt;getPrintData()&lt;/code&gt; &lt;/a&gt; 및 스트림을 얻을에 더 호출 &lt;a href=&quot;doc#getPrintData--&quot;&gt; &lt;code&gt;getPrintData()&lt;/code&gt; &lt;/a&gt; 읽기가 이미 진행 될 수있는 동일한 스트림 객체를 반환합니다</target>
        </trans-unit>
        <trans-unit id="4e4a43a83beb89b612ad871a2f3a7ae9dcfaf2dd" translate="yes" xml:space="preserve">
          <source>Each method invocation on the queue returned by this method results in exactly one method invocation on the backing deque, with one exception. The &lt;a href=&quot;collection#addAll-java.util.Collection-&quot;&gt;&lt;code&gt;addAll&lt;/code&gt;&lt;/a&gt; method is implemented as a sequence of &lt;a href=&quot;deque#addFirst-E-&quot;&gt;&lt;code&gt;addFirst&lt;/code&gt;&lt;/a&gt; invocations on the backing deque.</source>
          <target state="translated">이 메소드에 의해 리턴 된 큐의 각 메소드 호출은 하나의 예외를 제외하고는 백업 큐에서 정확히 하나의 메소드 호출을 발생시킵니다. &lt;a href=&quot;collection#addAll-java.util.Collection-&quot;&gt; &lt;code&gt;addAll&lt;/code&gt; &lt;/a&gt; 방법의 시퀀스로서 구현된다 &lt;a href=&quot;deque#addFirst-E-&quot;&gt; &lt;code&gt;addFirst&lt;/code&gt; &lt;/a&gt; 백킹 양단에 호출.</target>
        </trans-unit>
        <trans-unit id="b998914b040c836fdbef3cc87306da0d4d5d957e" translate="yes" xml:space="preserve">
          <source>Each method invocation on the set returned by this method results in exactly one method invocation on the backing map or its &lt;code&gt;keySet&lt;/code&gt; view, with one exception. The &lt;code&gt;addAll&lt;/code&gt; method is implemented as a sequence of &lt;code&gt;put&lt;/code&gt; invocations on the backing map.</source>
          <target state="translated">세트의 각 메소드 호출은 배킹지도 또는 정확히 하나의 메소드 호출 방법이 결과에 의해 리턴 &lt;code&gt;keySet&lt;/code&gt; 중 하나 개를 제외하고 도면. &lt;code&gt;addAll&lt;/code&gt; 방법의 시퀀스로서 구현된다 &lt;code&gt;put&lt;/code&gt; 보강지도 호출.</target>
        </trans-unit>
        <trans-unit id="783132c372e3366f8fef14de6ff263e84edbf665" translate="yes" xml:space="preserve">
          <source>Each method of this interface that returns a list of elements will return them in the order that is natural for the underlying source of program information. For example, if the underlying source of information is Java source code, then the elements will be returned in source code order.</source>
          <target state="translated">요소 목록을 리턴하는이 인터페이스의 각 메소드는 기본 프로그램 정보 소스에 고유 한 순서로 요소를 리턴합니다. 예를 들어, 기본 정보 소스가 Java 소스 코드 인 경우 요소는 소스 코드 순서로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="673e0ec0aa7ef41b16f66294c8a1d2774bb4f309" translate="yes" xml:space="preserve">
          <source>Each method returns an appropriate object or &lt;code&gt;null&lt;/code&gt; if the provider does not support the given encoding. Typical providers support more than one encoding.</source>
          <target state="translated">각 메서드는 적절한 객체를 반환하거나 공급자가 지정된 인코딩을 지원하지 않으면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 일반적인 공급자는 둘 이상의 인코딩을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="44627a58d5af00c8a91a9cfaf99c9a74f62ca41e" translate="yes" xml:space="preserve">
          <source>Each name in the &lt;code&gt;Collection&lt;/code&gt; may be specified either as a &lt;code&gt;String&lt;/code&gt; or as an ASN.1 encoded byte array. For more details about the formats used, see &lt;a href=&quot;x509certselector#addPathToName-int-java.lang.String-&quot;&gt;&lt;code&gt;addPathToName(int type, String name)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;x509certselector#addPathToName-int-byte:A-&quot;&gt;&lt;code&gt;addPathToName(int type, byte [] name)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Collection&lt;/code&gt; 의 각 이름은 &lt;code&gt;String&lt;/code&gt; 또는 ASN.1로 인코딩 된 바이트 배열로 지정할 수 있습니다 . 사용되는 형식에 대한 자세한 내용은 &lt;a href=&quot;x509certselector#addPathToName-int-java.lang.String-&quot;&gt; &lt;code&gt;addPathToName(int type, String name)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;x509certselector#addPathToName-int-byte:A-&quot;&gt; &lt;code&gt;addPathToName(int type, byte [] name)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b9a48cf2f6e1c897b3ede0cdbdf6dc89635caf1" translate="yes" xml:space="preserve">
          <source>Each name passed as an argument to a &lt;code&gt;Context&lt;/code&gt; method is relative to that context. The empty name is used to name the context itself. A name parameter may never be null.</source>
          <target state="translated">&lt;code&gt;Context&lt;/code&gt; 메소드에 인수로 전달 된 각 이름은 해당 컨텍스트와 관련이 있습니다. 빈 이름은 컨텍스트 자체의 이름을 지정하는 데 사용됩니다. 이름 매개 변수는 널이 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="cf5b9b92d0b960981f6e6716445c7a7f55ac6d65" translate="yes" xml:space="preserve">
          <source>Each name passed as an argument to a &lt;code&gt;DirContext&lt;/code&gt; method is relative to that context. The empty name is used to name the context itself. The name parameter may never be null.</source>
          <target state="translated">&lt;code&gt;DirContext&lt;/code&gt; 메소드에 인수로 전달 된 각 이름은 해당 컨텍스트와 관련이 있습니다. 빈 이름은 컨텍스트 자체의 이름을 지정하는 데 사용됩니다. name 매개 변수는 널이 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fd9fd91c22d3d82aa93d0176951e81ef7776d0b6" translate="yes" xml:space="preserve">
          <source>Each observer has its &lt;code&gt;update&lt;/code&gt; method called with two arguments: this observable object and &lt;code&gt;null&lt;/code&gt;. In other words, this method is equivalent to:</source>
          <target state="translated">각 옵저버에는 이 관찰 가능 객체와 &lt;code&gt;null&lt;/code&gt; 이라는 두 개의 인수로 호출되는 &lt;code&gt;update&lt;/code&gt; 메소드가 있습니다. 즉,이 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e5ce380da675e7f0b1e4917bc23055f5e7ce4335" translate="yes" xml:space="preserve">
          <source>Each observer has its &lt;code&gt;update&lt;/code&gt; method called with two arguments: this observable object and the &lt;code&gt;arg&lt;/code&gt; argument.</source>
          <target state="translated">각 옵저버에는 이 관찰 가능 객체와 &lt;code&gt;arg&lt;/code&gt; 인수 라는 두 가지 인수로 호출되는 &lt;code&gt;update&lt;/code&gt; 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="502a1a2ef66daf3fbef3ae47056f78891a6d1445" translate="yes" xml:space="preserve">
          <source>Each of the above &lt;code&gt;set&lt;/code&gt; methods has a corresponding &lt;code&gt;get&lt;/code&gt; method to retrieve the value of the parameter or general request property. The specific parameters and general request properties that are applicable are protocol specific.</source>
          <target state="translated">위에 &lt;code&gt;set&lt;/code&gt; 각 메소드에는 매개 변수 또는 일반 요청 특성의 값을 검색 하는 해당 &lt;code&gt;get&lt;/code&gt; 메소드가 있습니다. 적용 가능한 특정 매개 변수 및 일반 요청 특성은 프로토콜마다 다릅니다.</target>
        </trans-unit>
        <trans-unit id="ef0d03c8aac8695e27586407b58bd4b97a9ed806" translate="yes" xml:space="preserve">
          <source>Each of the above calls to &lt;code&gt;invokeExact&lt;/code&gt; or plain &lt;code&gt;invoke&lt;/code&gt; generates a single invokevirtual instruction with the symbolic type descriptor indicated in the following comment. In these examples, the helper method &lt;code&gt;assertEquals&lt;/code&gt; is assumed to be a method which calls &lt;a href=&quot;../../util/objects#equals-java.lang.Object-java.lang.Object-&quot;&gt;&lt;code&gt;Objects.equals&lt;/code&gt;&lt;/a&gt; on its arguments, and asserts that the result is true.</source>
          <target state="translated">&lt;code&gt;invokeExact&lt;/code&gt; 또는 일반 &lt;code&gt;invoke&lt;/code&gt; 에 대한 위의 각 호출 은 다음 주석에 표시된 기호 유형 설명자를 사용하여 단일 invokevirtual 명령을 생성합니다. 이 예제에서 도우미 메소드 &lt;code&gt;assertEquals&lt;/code&gt; 는 인수에서 &lt;a href=&quot;../../util/objects#equals-java.lang.Object-java.lang.Object-&quot;&gt; &lt;code&gt;Objects.equals&lt;/code&gt; &lt;/a&gt; 를 호출 하고 결과가 참이라고 주장 하는 메소드로 가정 합니다.</target>
        </trans-unit>
        <trans-unit id="99ee5645be1450d105b3e522af3eaaafb76d02e9" translate="yes" xml:space="preserve">
          <source>Each of the above categories has an associated unique &lt;a href=&quot;processbuilder.redirect.type&quot;&gt;&lt;code&gt;Type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">위의 각 범주에는 고유 한 &lt;a href=&quot;processbuilder.redirect.type&quot;&gt; &lt;code&gt;Type&lt;/code&gt; 이&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="d955d4acbd65ec03706a307e0a060780c16cac09" translate="yes" xml:space="preserve">
          <source>Each of the standard plug-ins supports a so-called &quot;native&quot; metadata format, which encodes its metadata losslessly:</source>
          <target state="translated">각 표준 플러그인은 메타 데이터를 무손실로 인코딩하는 소위 &quot;네이티브&quot;메타 데이터 형식을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="7c0b36440aea8153ae41de4799147054c7e06929" translate="yes" xml:space="preserve">
          <source>Each of these corresponds to the IPP &quot;media&quot; attribute. The current API does not support describing media by characteristics (eg colour, opacity). This may be supported in a later revision of the specification.</source>
          <target state="translated">이들 각각은 IPP &quot;미디어&quot;속성에 해당합니다. 현재 API는 특성 (예 : 색상, 불투명도)으로 미디어 설명을 지원하지 않습니다. 이것은 사양의 이후 개정에서 지원 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69ab4a975283fc7ad1605a8f60196eed4c2c6918" translate="yes" xml:space="preserve">
          <source>Each of these methods by default throws &lt;a href=&quot;../../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;. Implementations of these methods must be internally thread-safe, and should in general be short and not block. Defining these methods is the &lt;em&gt;only&lt;/em&gt; supported means of using this class. All other methods are declared &lt;code&gt;final&lt;/code&gt; because they cannot be independently varied.</source>
          <target state="translated">이러한 각 메소드는 기본적으로 &lt;a href=&quot;../../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다. 이러한 메소드의 구현은 내부적으로 스레드로부터 안전해야하며 일반적으로 짧고 차단되지 않아야합니다. 이 메소드를 정의하는 것이이 클래스를 사용 하는 &lt;em&gt;유일한&lt;/em&gt; 지원 수단입니다. 다른 모든 방법은 독립적으로 변할 수 없으므로 &lt;code&gt;final&lt;/code&gt; 으로 선언 됩니다.</target>
        </trans-unit>
        <trans-unit id="6828b8f34a5c4ea3d2023fa0a14df6e8565b19eb" translate="yes" xml:space="preserve">
          <source>Each of these methods has two variants; one with an explicit locale and one without; the latter uses the default &lt;a href=&quot;locale.category#FORMAT&quot;&gt;&lt;code&gt;FORMAT&lt;/code&gt;&lt;/a&gt; locale:</source>
          <target state="translated">이러한 각 방법에는 두 가지 변형이 있습니다. 하나는 명시 적 로케일이 있고 다른 하나는없는 후자는 기본 &lt;a href=&quot;locale.category#FORMAT&quot;&gt; &lt;code&gt;FORMAT&lt;/code&gt; &lt;/a&gt; 로케일을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="dcaffb86273fddf28001dd1a11bb0827e2b68eaf" translate="yes" xml:space="preserve">
          <source>Each of these methods returns a boolean indicating success or failure. More information about a successful match can be obtained by querying the state of the matcher.</source>
          <target state="translated">이러한 각 메소드는 성공 또는 실패를 나타내는 부울을 리턴합니다. 성공적인 일치에 대한 자세한 정보는 매처의 상태를 조회하여 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80b19b6ca6a626f62a7c3238ef8f29a6abc072f0" translate="yes" xml:space="preserve">
          <source>Each of these permissions is a consequence of the fact that a lookup object with private access can be securely traced back to an originating class, whose &lt;a href=&quot;methodhandles.lookup#equiv&quot;&gt;bytecode behaviors&lt;/a&gt; and Java language access permissions can be reliably determined and emulated by method handles.</source>
          <target state="translated">이러한 각 권한은 개인 액세스 권한이있는 조회 객체를 원래 클래스로 안전하게 추적 할 수 있기 때문에 &lt;a href=&quot;methodhandles.lookup#equiv&quot;&gt;바이트 코드 동작&lt;/a&gt; 및 Java 언어 액세스 권한을 메소드 핸들로 안정적으로 결정하고 에뮬레이션 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19d05d316190d95ec73c2c5bf47077402a6a53da" translate="yes" xml:space="preserve">
          <source>Each particular &lt;code&gt;ImageReader&lt;/code&gt; implementation may call this method at whatever frequency it desires. A rule of thumb is to call it around each 5 percent mark.</source>
          <target state="translated">각각의 특정 &lt;code&gt;ImageReader&lt;/code&gt; 구현은 원하는 빈도로이 메소드를 호출 할 수 있습니다. 일반적으로 5 % 마크마다 호출합니다.</target>
        </trans-unit>
        <trans-unit id="a61f51548504f8ca936a09ec82bd4068fa6143d1" translate="yes" xml:space="preserve">
          <source>Each particular &lt;code&gt;ImageWriter&lt;/code&gt; implementation may call this method at whatever frequency it desires. A rule of thumb is to call it around each 5 percent mark.</source>
          <target state="translated">각각의 특정 &lt;code&gt;ImageWriter&lt;/code&gt; 구현은 원하는 빈도로이 메소드를 호출 할 수 있습니다. 일반적으로 5 % 마크마다 호출합니다.</target>
        </trans-unit>
        <trans-unit id="ce679f49476b014252750ba7796bd850eb4c8536" translate="yes" xml:space="preserve">
          <source>Each platform MXBean is a &lt;a href=&quot;platformmanagedobject&quot;&gt;&lt;code&gt;PlatformManagedObject&lt;/code&gt;&lt;/a&gt; and it has a unique &lt;a href=&quot;../../../javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; for registration in the platform &lt;code&gt;MBeanServer&lt;/code&gt; as returned by by the &lt;a href=&quot;platformmanagedobject#getObjectName--&quot;&gt;&lt;code&gt;getObjectName&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">각 플랫폼 MXBean은 &lt;a href=&quot;platformmanagedobject&quot;&gt; &lt;code&gt;PlatformManagedObject&lt;/code&gt; &lt;/a&gt; 이며 &lt;a href=&quot;platformmanagedobject#getObjectName--&quot;&gt; &lt;code&gt;getObjectName&lt;/code&gt; &lt;/a&gt; 메소드가 리턴 한대로 플랫폼 &lt;code&gt;MBeanServer&lt;/code&gt; 에 등록 할 고유 한 &lt;a href=&quot;../../../javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt; 을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="1daea9f1ccaa0b5e62c4ab09835e81e4fb9a51e9" translate="yes" xml:space="preserve">
          <source>Each principal can have at most one positive ACL entry and one negative entry; that is, multiple positive or negative ACL entries are not allowed for any principal. Each entry specifies the set of permissions that are to be granted (if positive) or denied (if negative).</source>
          <target state="translated">각 주체는 최대 하나의 양의 ACL 항목과 하나의 음의 항목을 가질 수 있습니다. 즉, 여러 주체에 여러 개의 양수 또는 음수 ACL 항목이 허용되지 않습니다. 각 항목은 부여 (긍정) 또는 거부 (부정) 할 권한 집합을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2932feb10e4d108367970313b7982962322be54a" translate="yes" xml:space="preserve">
          <source>Each printer has a set of capabilities, such as the ability to print on different paper sizes or the ability to print more than one copy. Each of the capabilities has a range of values. For example, a printer's orientation capability might have this range of values: [landscape, portrait]. For each print request, the capability is set to one of these values. The Java Print Service API uses the term &lt;b&gt;attribute category&lt;/b&gt; to refer to a printer capability and the term &lt;b&gt;attribute value&lt;/b&gt; to refer to the value of the capability.</source>
          <target state="translated">각 프린터에는 서로 다른 용지 크기에 인쇄하는 기능 또는 둘 이상의 사본을 인쇄하는 기능과 같은 일련의 기능이 있습니다. 각 기능에는 다양한 값이 있습니다. 예를 들어, 프린터의 방향 기능은 [가로, 세로]의 값 범위를 가질 수 있습니다. 각 인쇄 요청에 대해 기능은이 값 중 하나로 설정됩니다. Java Print Service API는 &lt;b&gt;속성 카테고리&lt;/b&gt; 라는 용어를 사용하여 프린터 기능을 나타내고 &lt;b&gt;속성 값&lt;/b&gt; 이라는 용어 는 기능의 값을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a7e300e813772a0f83953eca2f3b2527d020d8d1" translate="yes" xml:space="preserve">
          <source>Each process builder manages these process attributes:</source>
          <target state="translated">각 프로세스 빌더는 다음 프로세스 속성을 관리합니다.</target>
        </trans-unit>
        <trans-unit id="849598ea766b43e4919ab3fa820b73a6427b2744" translate="yes" xml:space="preserve">
          <source>Each provider has a name and a version number, and is configured in each runtime it is installed in.</source>
          <target state="translated">각 제공자는 이름과 버전 번호를 가지며, 설치된 각 런타임에 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="0a90a42155e73a5b9ab2065847b923d2c8b2b899" translate="yes" xml:space="preserve">
          <source>Each proxy class has one public constructor that takes one argument, an implementation of the interface &lt;a href=&quot;invocationhandler&quot;&gt;&lt;code&gt;InvocationHandler&lt;/code&gt;&lt;/a&gt;, to set the invocation handler for a proxy instance. Rather than having to use the reflection API to access the public constructor, a proxy instance can be also be created by calling the &lt;a href=&quot;proxy#newProxyInstance-java.lang.ClassLoader-java.lang.Class:A-java.lang.reflect.InvocationHandler-&quot;&gt;&lt;code&gt;Proxy.newProxyInstance&lt;/code&gt;&lt;/a&gt; method, which combines the actions of calling &lt;a href=&quot;proxy#getProxyClass-java.lang.ClassLoader-java.lang.Class...-&quot;&gt;&lt;code&gt;Proxy.getProxyClass&lt;/code&gt;&lt;/a&gt; with invoking the constructor with an invocation handler.</source>
          <target state="translated">각 프록시 클래스에는 프록시 인스턴스에 대한 호출 핸들러를 설정하기 위해 인터페이스 &lt;a href=&quot;invocationhandler&quot;&gt; &lt;code&gt;InvocationHandler&lt;/code&gt; &lt;/a&gt; 의 구현 인 하나의 인수를 취하는 하나의 공용 생성자가 있습니다. 리플렉션 API를 사용하여 퍼블릭 생성자에 액세스하는 대신 &lt;a href=&quot;proxy#getProxyClass-java.lang.ClassLoader-java.lang.Class...-&quot;&gt; &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; &lt;/a&gt; 호출 작업과 생성자 호출 호출 핸들러 를 결합한 &lt;a href=&quot;proxy#newProxyInstance-java.lang.ClassLoader-java.lang.Class:A-java.lang.reflect.InvocationHandler-&quot;&gt; &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 프록시 인스턴스를 작성할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="295ede88a9dcd8719a71bb39c67706b4af5059f3" translate="yes" xml:space="preserve">
          <source>Each proxy instance has an associated invocation handler, the one that was passed to its constructor. The static &lt;a href=&quot;proxy#getInvocationHandler-java.lang.Object-&quot;&gt;&lt;code&gt;Proxy.getInvocationHandler&lt;/code&gt;&lt;/a&gt; method will return the invocation handler associated with the proxy instance passed as its argument.</source>
          <target state="translated">각 프록시 인스턴스에는 생성자에 전달 된 관련 호출 핸들러가 있습니다. 정적 &lt;a href=&quot;proxy#getInvocationHandler-java.lang.Object-&quot;&gt; &lt;code&gt;Proxy.getInvocationHandler&lt;/code&gt; &lt;/a&gt; 메소드는 인수로 전달 된 프록시 인스턴스와 연관된 호출 핸들러를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="67ec388961cae122e1aeaea5e044281ae2107003" translate="yes" xml:space="preserve">
          <source>Each proxy instance has an associated invocation handler. When a method is invoked on a proxy instance, the method invocation is encoded and dispatched to the &lt;code&gt;invoke&lt;/code&gt; method of its invocation handler.</source>
          <target state="translated">각 프록시 인스턴스에는 연관된 호출 핸들러가 있습니다. 프록시 인스턴스에서 메소드가 호출되면 메소드 호출이 인코딩되어 호출 핸들러 의 &lt;code&gt;invoke&lt;/code&gt; 메소드로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="e4fa56c08a79e653dbfc2dc554b903cdcaf57d3f" translate="yes" xml:space="preserve">
          <source>Each resource bundle in a family contains the same items, but the items have been translated for the locale represented by that resource bundle. For example, both &quot;MyResources&quot; and &quot;MyResources_de&quot; may have a &lt;code&gt;String&lt;/code&gt; that's used on a button for canceling operations. In &quot;MyResources&quot; the &lt;code&gt;String&lt;/code&gt; may contain &quot;Cancel&quot; and in &quot;MyResources_de&quot; it may contain &quot;Abbrechen&quot;.</source>
          <target state="translated">제품군의 각 자원 번들에는 동일한 항목이 포함되어 있지만 해당 자원 번들로 표시되는 로케일로 항목이 변환되었습니다. 예를 들어, &quot;MyResources&quot;및 &quot;MyResources_de&quot;둘 다 조작 취소를 위해 단추에 사용되는 &lt;code&gt;String&lt;/code&gt; 을 가질 수 있습니다 . &quot;MyResources&quot;에서 &lt;code&gt;String&lt;/code&gt; 은 &quot;Cancel&quot;을 포함 할 수 있고 &quot;MyResources_de&quot;에서 &quot;Abbrechen&quot;을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d0bcb7dd76220d8c20abfafeece056add1af87c" translate="yes" xml:space="preserve">
          <source>Each returned &lt;code&gt;Chronology&lt;/code&gt; is available for use in the system. The set of chronologies includes the system chronologies and any chronologies provided by the application via ServiceLoader configuration.</source>
          <target state="translated">반환 된 각 &lt;code&gt;Chronology&lt;/code&gt; 시스템에서 사용할 수 있습니다. 연대기 세트에는 시스템 연대기 및 ServiceLoader 구성을 통해 애플리케이션이 제공하는 모든 연대기가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4ef148205bd5bfd7b3e9dbe0dbf368bcaf66fc0c" translate="yes" xml:space="preserve">
          <source>Each revoked certificate is identified in a CRL by its certificate serial number. When a certificate-using system uses a certificate (e.g., for verifying a remote user's digital signature), that system not only checks the certificate signature and validity but also acquires a suitably- recent CRL and checks that the certificate serial number is not on that CRL. The meaning of &quot;suitably-recent&quot; may vary with local policy, but it usually means the most recently-issued CRL. A CA issues a new CRL on a regular periodic basis (e.g., hourly, daily, or weekly). Entries are added to CRLs as revocations occur, and an entry may be removed when the certificate expiration date is reached.</source>
          <target state="translated">해지 된 각 인증서는 CRL에서 인증서 일련 번호로 식별됩니다. 인증서 사용 시스템이 인증서를 사용하는 경우 (예 : 원격 사용자의 디지털 서명 확인), 시스템은 인증서 서명 및 유효성을 검사 할뿐만 아니라 적절하게 최근의 CRL을 획득하고 인증서 일련 번호가 해당 인증서에 없는지 확인합니다. CRL. &quot;적절한 최근&quot;의 의미는 지역 정책에 따라 다를 수 있지만 일반적으로 가장 최근에 발행 된 CRL을 의미합니다. CA는 정기적으로 (예 : 시간별, 일별 또는 주별) 새 CRL을 발급합니다. 해지가 발생하면 CRL에 항목이 추가되고 인증서 만료 날짜에 도달하면 항목이 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16ad7bc118cab62541d32ce735ae842b5ce036ad" translate="yes" xml:space="preserve">
          <source>Each rounding mode description includes a table listing how different two-digit decimal values would round to a one digit decimal value under the rounding mode in question. The result column in the tables could be gotten by creating a &lt;code&gt;BigDecimal&lt;/code&gt; number with the specified value, forming a &lt;a href=&quot;mathcontext&quot;&gt;&lt;code&gt;MathContext&lt;/code&gt;&lt;/a&gt; object with the proper settings (&lt;code&gt;precision&lt;/code&gt; set to &lt;code&gt;1&lt;/code&gt;, and the &lt;code&gt;roundingMode&lt;/code&gt; set to the rounding mode in question), and calling &lt;a href=&quot;bigdecimal#round-java.math.MathContext-&quot;&gt;&lt;code&gt;round&lt;/code&gt;&lt;/a&gt; on this number with the proper &lt;code&gt;MathContext&lt;/code&gt;. A summary table showing the results of these rounding operations for all rounding modes appears below.</source>
          <target state="translated">각 반올림 모드 설명에는 해당 반올림 모드에서 서로 다른 두 자리 10 진수 값이 1 자리 10 진수 값으로 반올림되는 방법이 나와있는 표가 포함되어 있습니다. 표에 제시된 결과 열이 만들어받은 수 &lt;code&gt;BigDecimal&lt;/code&gt; 지정된 값 번호를 성형 &lt;a href=&quot;mathcontext&quot;&gt; &lt;code&gt;MathContext&lt;/code&gt; &lt;/a&gt; 적절한 설정 오브젝트 ( &lt;code&gt;precision&lt;/code&gt; 로 설정 &lt;code&gt;1&lt;/code&gt; , 상기 &lt;code&gt;roundingMode&lt;/code&gt; 당해 반올림 모드로 설정), 및 호출 &lt;a href=&quot;bigdecimal#round-java.math.MathContext-&quot;&gt; &lt;code&gt;round&lt;/code&gt; &lt;/a&gt; 이를 적절한 &lt;code&gt;MathContext&lt;/code&gt; 와 함께 숫자 . 모든 반올림 모드에 대한 이러한 반올림 작업의 결과를 보여주는 요약 테이블이 아래에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="f2a267075acf93d9f65e428d79bf8aefeaba71a1" translate="yes" xml:space="preserve">
          <source>Each service has a provider that offers the service, a type, an algorithm name, and the name of the class that implements the service. Optionally, it also includes a list of alternate algorithm names for this service (aliases) and attributes, which are a map of (name, value) String pairs.</source>
          <target state="translated">각 서비스에는 서비스를 제공하는 공급자, 유형, 알고리즘 이름 및 서비스를 구현하는 클래스 이름이 있습니다. 선택적으로이 서비스에 대한 대체 알고리즘 이름 (별칭) 및 속성 (이름, 값) 문자열 쌍의 맵 목록도 포함합니다.</target>
        </trans-unit>
        <trans-unit id="53b6e2fd52325416fb94ae5510103f0016e4b5ea" translate="yes" xml:space="preserve">
          <source>Each service provider has an optional resource that lists properties specific to that provider. The name of this resource is:</source>
          <target state="translated">각 서비스 공급자에는 해당 공급자에 특정한 속성을 나열하는 선택적 리소스가 있습니다. 이 자원의 이름은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="68225e69d8223f42292918c2840519ebc09c2a9a" translate="yes" xml:space="preserve">
          <source>Each string returned in the set must be a period separated sequence of &lt;a href=&quot;../../lang/model/sourceversion#isIdentifier-java.lang.CharSequence-&quot;&gt;identifiers&lt;/a&gt;:</source>
          <target state="translated">집합에 반환 된 각 문자열은 마침표로 구분 된 &lt;a href=&quot;../../lang/model/sourceversion#isIdentifier-java.lang.CharSequence-&quot;&gt;식별자&lt;/a&gt; 시퀀스 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="29d53ac4ebdabf077e56b1744a2b04ec6c72de3d" translate="yes" xml:space="preserve">
          <source>Each string returned in the set must be accepted by the following grammar:</source>
          <target state="translated">세트에 리턴 된 각 문자열은 다음 문법으로 승인되어야합니다.</target>
        </trans-unit>
        <trans-unit id="dd276d8fbdecb3a8e77edb016e17592db14aee02" translate="yes" xml:space="preserve">
          <source>Each subclass of this class defines two categories of</source>
          <target state="translated">이 클래스의 각 서브 클래스는</target>
        </trans-unit>
        <trans-unit id="eb77807963caaf41ebaf21fc47796c1fcbfbfb39" translate="yes" xml:space="preserve">
          <source>Each subclass should state the precise behavior of this method so that users and developers know what to expect.</source>
          <target state="translated">각 서브 클래스는 사용자와 개발자가 무엇을 기대할 수 있도록이 메소드의 정확한 동작을 명시해야합니다.</target>
        </trans-unit>
        <trans-unit id="4a02ef9eaef14560e891b0e332f4c9637c765295" translate="yes" xml:space="preserve">
          <source>Each subject alternative name in the &lt;code&gt;Collection&lt;/code&gt; may be specified either as a &lt;code&gt;String&lt;/code&gt; or as an ASN.1 encoded byte array. For more details about the formats used, see &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-java.lang.String-&quot;&gt;&lt;code&gt;addSubjectAlternativeName(int type, String name)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-byte:A-&quot;&gt;&lt;code&gt;addSubjectAlternativeName(int type, byte [] name)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Collection&lt;/code&gt; 의 각 주제 대체 이름은 &lt;code&gt;String&lt;/code&gt; 또는 ASN.1로 인코딩 된 바이트 배열로 지정할 수 있습니다 . 사용되는 형식에 대한 자세한 내용은 &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-java.lang.String-&quot;&gt; &lt;code&gt;addSubjectAlternativeName(int type, String name)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-byte:A-&quot;&gt; &lt;code&gt;addSubjectAlternativeName(int type, byte [] name)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ad0afa5a231d77ce08ec9ac6b13d21a485cc5195" translate="yes" xml:space="preserve">
          <source>Each thread holds an implicit reference to its copy of a thread-local variable as long as the thread is alive and the &lt;code&gt;ThreadLocal&lt;/code&gt; instance is accessible; after a thread goes away, all of its copies of thread-local instances are subject to garbage collection (unless other references to these copies exist).</source>
          <target state="translated">스레드가 활성 상태이고 &lt;code&gt;ThreadLocal&lt;/code&gt; 인스턴스에 액세스 할 수 있으면 각 스레드는 스레드 로컬 변수의 사본에 대한 내재적 참조를 보유합니다 . 스레드가 사라진 후에는 스레드 로컬 인스턴스의 모든 복사본이 가비지 수집 대상이됩니다 (이 복사본에 대한 다른 참조가없는 한).</target>
        </trans-unit>
        <trans-unit id="bcdd3e05535987ced116009335109ebc7bf40dfd" translate="yes" xml:space="preserve">
          <source>Each time a client connection is made or broken, a notification of class &lt;a href=&quot;jmxconnectionnotification&quot;&gt;&lt;code&gt;JMXConnectionNotification&lt;/code&gt;&lt;/a&gt; is emitted.</source>
          <target state="translated">클라이언트 연결이 설정되거나 끊어 질 때마다 &lt;a href=&quot;jmxconnectionnotification&quot;&gt; &lt;code&gt;JMXConnectionNotification&lt;/code&gt; &lt;/a&gt; 클래스의 알림 이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="b28a1f2d1535d1e0a7c78f155e0f38ebb44fa227" translate="yes" xml:space="preserve">
          <source>Each time this method is called and the reading of the file succeeds with no exception (say, I/O error or file format error), the result should be saved for &lt;code&gt;principal&lt;/code&gt;. The implementation can also save keys for other principals having keys in the same keytab object if convenient.</source>
          <target state="translated">이 메소드가 호출되고 파일 읽기가 예외없이 성공할 때마다 (예 : I / O 오류 또는 파일 형식 오류) 결과는 &lt;code&gt;principal&lt;/code&gt; 에 저장되어야합니다 . 구현시 편리한 경우 동일한 키탭 객체에 키가있는 다른 보안 주체의 키를 저장할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a896189259e1fefee623bcac0a3f0eea065a7550" translate="yes" xml:space="preserve">
          <source>Each type is represented by its &lt;a href=&quot;../class#getSimpleName--&quot;&gt;&lt;code&gt;simple name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">각 유형은 &lt;a href=&quot;../class#getSimpleName--&quot;&gt; &lt;code&gt;simple name&lt;/code&gt; &lt;/a&gt; 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="705eb480b415dd26023cb12ca8c8cdf975ba93fb" translate="yes" xml:space="preserve">
          <source>Each vector tries to optimize storage management by maintaining a &lt;code&gt;capacity&lt;/code&gt; and a &lt;code&gt;capacityIncrement&lt;/code&gt;. The &lt;code&gt;capacity&lt;/code&gt; is always at least as large as the vector size; it is usually larger because as components are added to the vector, the vector's storage increases in chunks the size of &lt;code&gt;capacityIncrement&lt;/code&gt;. An application can increase the capacity of a vector before inserting a large number of components; this reduces the amount of incremental reallocation.</source>
          <target state="translated">각 벡터는 &lt;code&gt;capacity&lt;/code&gt; 과 capacityIncrement 를 유지하여 스토리지 관리를 최적화 &lt;code&gt;capacityIncrement&lt;/code&gt; . &lt;code&gt;capacity&lt;/code&gt; 적어도 벡터의 크기가 큰로서 항상; 구성 요소가 벡터에 추가 될 때 벡터의 저장 &lt;code&gt;capacityIncrement&lt;/code&gt; 은 capacityIncrement 크기의 청크가 증가하기 때문에 일반적으로 더 큽니다 . 응용 프로그램은 많은 수의 구성 요소를 삽입하기 전에 벡터의 용량을 늘릴 수 있습니다. 이는 증분 재 할당량을 줄입니다.</target>
        </trans-unit>
        <trans-unit id="c9385be5922e4106519d7a87eb5af865b2439a01" translate="yes" xml:space="preserve">
          <source>Earlier eras have sequentially lower values, which may be negative.</source>
          <target state="translated">이전 시대는 순차적으로 낮은 값을 가지며 이는 음수 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85a043bbea95b4de1c928a747210bf7d21cd3fa9" translate="yes" xml:space="preserve">
          <source>Early Delay(ms)</source>
          <target state="translated">조기 지연 (ms)</target>
        </trans-unit>
        <trans-unit id="ab079413746f0381de30564c42ac98e28aa04795" translate="yes" xml:space="preserve">
          <source>Early Intensity (dB)</source>
          <target state="translated">초기 강도 (dB)</target>
        </trans-unit>
        <trans-unit id="9211ae5979703d4b3d87e6495bf857d37006e8ac" translate="yes" xml:space="preserve">
          <source>Effect on</source>
          <target state="translated">영향을 끼치다</target>
        </trans-unit>
        <trans-unit id="b2e460476cb6c2a3dfb0efc0a704f6ba8dd8febc" translate="yes" xml:space="preserve">
          <source>Eight-bit UCS Transformation Format</source>
          <target state="translated">8 비트 UCS 변환 형식</target>
        </trans-unit>
        <trans-unit id="3bb3b33251059cb5f93747019aa489c21ce5547c" translate="yes" xml:space="preserve">
          <source>Either</source>
          <target state="translated">Either</target>
        </trans-unit>
        <trans-unit id="345e98237075cf074936b4456ad9186d211ede5a" translate="yes" xml:space="preserve">
          <source>Either Rt and Ru are the same type, or both are reference types and Rt is a subtype of Ru</source>
          <target state="translated">Rt와 Ru는 동일한 유형이거나 둘 다 참조 유형이며 Rt는 Ru의 하위 유형입니다.</target>
        </trans-unit>
        <trans-unit id="9d3389410ffbf2f9d3f650116f68b30adbe66640" translate="yes" xml:space="preserve">
          <source>Either form of the &lt;code&gt;getStateToBind()&lt;/code&gt; method of a DirStateFactory may be invoked multiple times, possibly using different parameters. The implementation is thread-safe.</source>
          <target state="translated">DirStateFactory 의 &lt;code&gt;getStateToBind()&lt;/code&gt; 메소드 형식은 여러 매개 변수를 사용하여 여러 번 호출 될 수 있습니다. 구현은 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="d2b3602ab558974c3cb5aa398f1abc62a336668d" translate="yes" xml:space="preserve">
          <source>Either store the chronology (calendar system) in the user profile or lookup the chronology from the user locale</source>
          <target state="translated">연대기 (달력 시스템)를 사용자 프로필에 저장하거나 사용자 로캘에서 연대기를 조회하십시오.</target>
        </trans-unit>
        <trans-unit id="0e19e742c3d0ba224db7b90eec3f2e20ef67f4c8" translate="yes" xml:space="preserve">
          <source>Either the stream is unordered, or the collector has the &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt;&lt;code&gt;Collector.Characteristics.UNORDERED&lt;/code&gt;&lt;/a&gt; characteristic.</source>
          <target state="translated">스트림이 정렬되지 않았거나 콜렉터에 &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt; &lt;code&gt;Collector.Characteristics.UNORDERED&lt;/code&gt; &lt;/a&gt; 특성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a51e4cb5590b3755c3eaf82562f6168dc8494534" translate="yes" xml:space="preserve">
          <source>Either the text-argument must already be present in the sequence, or some initial substring of the text-argument must be present. (e.g. &quot;a &amp;lt; b &amp;amp; ae &amp;lt; e&quot; is valid since &quot;a&quot; is present in the sequence before &quot;ae&quot; is reset). In this latter case, &quot;ae&quot; is not entered and treated as a single character; instead, &quot;e&quot; is sorted as if it were expanded to two characters: &quot;a&quot; followed by an &quot;e&quot;. This difference appears in natural languages: in traditional Spanish &quot;ch&quot; is treated as though it contracts to a single character (expressed as &quot;c &amp;lt; ch &amp;lt; d&quot;), while in traditional German a-umlaut is treated as though it expanded to two characters (expressed as &quot;a,A &amp;lt; b,B ... &amp;amp;ae;\u00e3&amp;amp;AE;\u00c3&quot;). [\u00e3 and \u00c3 are, of course, the escape sequences for a-umlaut.]</source>
          <target state="translated">텍스트 인수가 이미 시퀀스에 있거나 텍스트 인수의 초기 하위 문자열이 있어야합니다. (예 : &quot;ae&quot;가 재설정되기 전에 &quot;a&quot;가 시퀀스에 있으므로 &quot;a &amp;lt;b &amp;amp; ae &amp;lt;e&quot;는 유효 함). 후자의 경우 &quot;ae&quot;는 입력되지 않으며 단일 문자로 취급됩니다. 대신 &quot;e&quot;는 &quot;a&quot;다음에 &quot;e&quot;라는 두 문자로 확장 된 것처럼 정렬됩니다. 이 차이는 자연 언어로 나타납니다. 전통적인 스페인어에서 &quot;ch&quot;는 단일 문자 ( &quot;c &amp;lt;ch &amp;lt;d&quot;로 표현됨)로 축소 된 것처럼 취급되지만 전통적인 독일어에서는 a-umlaut가 2로 확장 된 것처럼 처리됩니다 문자 ( &quot;a, A &amp;lt;b, B ... &amp;amp; ae; \ u00e3 &amp;amp; AE; \ u00c3&quot;으로 표시). [\ u00e3 및 \ u00c3은 물론a- 움라우트의 탈출 서열.]</target>
        </trans-unit>
        <trans-unit id="49fa9fd831096c82ab950bc7aa0a0a7ef8a10998" translate="yes" xml:space="preserve">
          <source>Element</source>
          <target state="translated">Element</target>
        </trans-unit>
        <trans-unit id="cc9af106f99440de8f01cdf729d696761ee61d55" translate="yes" xml:space="preserve">
          <source>Element Type</source>
          <target state="translated">요소 유형</target>
        </trans-unit>
        <trans-unit id="f3788f21d8e30d32896fa8ecc2d03e4e26f5a529" translate="yes" xml:space="preserve">
          <source>Element.accept()</source>
          <target state="translated">Element.accept()</target>
        </trans-unit>
        <trans-unit id="7819f3c8316400615edd72f73e6e0e9d615356ae" translate="yes" xml:space="preserve">
          <source>Element.asType()</source>
          <target state="translated">Element.asType()</target>
        </trans-unit>
        <trans-unit id="abb502e59c23584125404a1cbfe853dd7aa35c31" translate="yes" xml:space="preserve">
          <source>Element.equals()</source>
          <target state="translated">Element.equals()</target>
        </trans-unit>
        <trans-unit id="c7384296b6dfcd7df8e56c6618c5d022a41dbfbd" translate="yes" xml:space="preserve">
          <source>Element.getAnnotation()</source>
          <target state="translated">Element.getAnnotation()</target>
        </trans-unit>
        <trans-unit id="1e22efdfe7c4c1847ffdb09b22cd8fb78f4e08b3" translate="yes" xml:space="preserve">
          <source>Element.getAnnotationMirrors()</source>
          <target state="translated">Element.getAnnotationMirrors()</target>
        </trans-unit>
        <trans-unit id="d0c770a5eebd00d985b050e921e5e96f4d31d3c7" translate="yes" xml:space="preserve">
          <source>Element.getEnclosedElements()</source>
          <target state="translated">Element.getEnclosedElements()</target>
        </trans-unit>
        <trans-unit id="42cae139a4a04fffe7981251145ae4bb4f85c4a1" translate="yes" xml:space="preserve">
          <source>Element.getEnclosingElement()</source>
          <target state="translated">Element.getEnclosingElement()</target>
        </trans-unit>
        <trans-unit id="9a6398f79303d00b46b5daa093300527e27a9e32" translate="yes" xml:space="preserve">
          <source>Element.getKind()</source>
          <target state="translated">Element.getKind()</target>
        </trans-unit>
        <trans-unit id="b61135d55d73729b376b547fbca2c9a8e3202a0a" translate="yes" xml:space="preserve">
          <source>Element.getModifiers()</source>
          <target state="translated">Element.getModifiers()</target>
        </trans-unit>
        <trans-unit id="43758e66949c1006ec6fa2978e12fb4961b13e93" translate="yes" xml:space="preserve">
          <source>Element.getSimpleName()</source>
          <target state="translated">Element.getSimpleName()</target>
        </trans-unit>
        <trans-unit id="64b5a1060274ad51443f3c1edb36a42df8a786fe" translate="yes" xml:space="preserve">
          <source>Element.hashCode()</source>
          <target state="translated">Element.hashCode()</target>
        </trans-unit>
        <trans-unit id="03ef23eee6ea95729585eb54d328821a3e1f8fe5" translate="yes" xml:space="preserve">
          <source>ElementFilter</source>
          <target state="translated">ElementFilter</target>
        </trans-unit>
        <trans-unit id="fbdef4c8d40b27fb546a07e72f61db3d33533d01" translate="yes" xml:space="preserve">
          <source>ElementFilter.constructorsIn()</source>
          <target state="translated">ElementFilter.constructorsIn()</target>
        </trans-unit>
        <trans-unit id="66b05c1f09b78e7260695648a745a0392cc39ed8" translate="yes" xml:space="preserve">
          <source>ElementFilter.fieldsIn()</source>
          <target state="translated">ElementFilter.fieldsIn()</target>
        </trans-unit>
        <trans-unit id="39be203ae1064531ddf5282c544ed5f432b4e193" translate="yes" xml:space="preserve">
          <source>ElementFilter.methodsIn()</source>
          <target state="translated">ElementFilter.methodsIn()</target>
        </trans-unit>
        <trans-unit id="bad471bb65e7a8af49561dd245fc4ceafccb79c4" translate="yes" xml:space="preserve">
          <source>ElementFilter.packagesIn()</source>
          <target state="translated">ElementFilter.packagesIn()</target>
        </trans-unit>
        <trans-unit id="15552e436e570e2e014a62a02241b35f94439224" translate="yes" xml:space="preserve">
          <source>ElementFilter.typesIn()</source>
          <target state="translated">ElementFilter.typesIn()</target>
        </trans-unit>
        <trans-unit id="0f34849d331d71c2015ff63f3a57ab4c43ef5b3c" translate="yes" xml:space="preserve">
          <source>ElementKind</source>
          <target state="translated">ElementKind</target>
        </trans-unit>
        <trans-unit id="c2f200bc65de5ef60dad813d3a0be1a95a90e395" translate="yes" xml:space="preserve">
          <source>ElementKind.isClass()</source>
          <target state="translated">ElementKind.isClass()</target>
        </trans-unit>
        <trans-unit id="3b50c69e70c90f7031d6c58032885d0ea64caaca" translate="yes" xml:space="preserve">
          <source>ElementKind.isField()</source>
          <target state="translated">ElementKind.isField()</target>
        </trans-unit>
        <trans-unit id="c5c1e668d8e3ad19ee5928f0fde4a8211acf6fb1" translate="yes" xml:space="preserve">
          <source>ElementKind.isInterface()</source>
          <target state="translated">ElementKind.isInterface()</target>
        </trans-unit>
        <trans-unit id="7e79777625e0aca1dc212c3a43e61de09d63c797" translate="yes" xml:space="preserve">
          <source>ElementKind.valueOf()</source>
          <target state="translated">ElementKind.valueOf()</target>
        </trans-unit>
        <trans-unit id="ba4f9fab27aaf7ea6e9529e7b7371186617853d0" translate="yes" xml:space="preserve">
          <source>ElementKind.values()</source>
          <target state="translated">ElementKind.values()</target>
        </trans-unit>
        <trans-unit id="f4400043d7a9e2160e70df6d10a794fd8f390142" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6</source>
          <target state="translated">ElementKindVisitor6</target>
        </trans-unit>
        <trans-unit id="d0daa6cc73f1f1d119c8728c98b1cb9d6e705cce" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitExecutable()</source>
          <target state="translated">ElementKindVisitor6.visitExecutable()</target>
        </trans-unit>
        <trans-unit id="d93883ec0555ce013b2a6366ff279ece3bc46888" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitExecutableAsConstructor()</source>
          <target state="translated">ElementKindVisitor6.visitExecutableAsConstructor()</target>
        </trans-unit>
        <trans-unit id="688803d0f3df9e0d9e7367deb343991bb9009737" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitExecutableAsInstanceInit()</source>
          <target state="translated">ElementKindVisitor6.visitExecutableAsInstanceInit()</target>
        </trans-unit>
        <trans-unit id="a069d54cb5b4ff26bd5f6ac7bba43b599a6f49e2" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitExecutableAsMethod()</source>
          <target state="translated">ElementKindVisitor6.visitExecutableAsMethod()</target>
        </trans-unit>
        <trans-unit id="dea3a553ac22f792e28c422317ebdbab9f61a3a6" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitExecutableAsStaticInit()</source>
          <target state="translated">ElementKindVisitor6.visitExecutableAsStaticInit()</target>
        </trans-unit>
        <trans-unit id="5cec64efb002ceafaa858cdc79e82731c0b85fae" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitPackage()</source>
          <target state="translated">ElementKindVisitor6.visitPackage()</target>
        </trans-unit>
        <trans-unit id="93dcf09036134618526c5a309f27db1b2fe496cd" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitType()</source>
          <target state="translated">ElementKindVisitor6.visitType()</target>
        </trans-unit>
        <trans-unit id="5dbd7ad8d38e739b2a855e28c6db1327b9534e01" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitTypeAsAnnotationType()</source>
          <target state="translated">ElementKindVisitor6.visitTypeAsAnnotationType()</target>
        </trans-unit>
        <trans-unit id="70dfad006455a37de5fcddc76982cc8a1966861f" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitTypeAsClass()</source>
          <target state="translated">ElementKindVisitor6.visitTypeAsClass()</target>
        </trans-unit>
        <trans-unit id="5218c2afd966797f6717ad30ec40c383c4cf02eb" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitTypeAsEnum()</source>
          <target state="translated">ElementKindVisitor6.visitTypeAsEnum()</target>
        </trans-unit>
        <trans-unit id="88ae4eb5e167b0d039828e58eeeb132f0138a221" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitTypeAsInterface()</source>
          <target state="translated">ElementKindVisitor6.visitTypeAsInterface()</target>
        </trans-unit>
        <trans-unit id="fc6f09e555be9f97d9d3d21419eb1310d3344109" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitTypeParameter()</source>
          <target state="translated">ElementKindVisitor6.visitTypeParameter()</target>
        </trans-unit>
        <trans-unit id="494bc4a7a3ab405c2713de11eb1f8ad5725d56b0" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitVariable()</source>
          <target state="translated">ElementKindVisitor6.visitVariable()</target>
        </trans-unit>
        <trans-unit id="3731dfffffeec4aed3fd44c562be593a7feefdc2" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitVariableAsEnumConstant()</source>
          <target state="translated">ElementKindVisitor6.visitVariableAsEnumConstant()</target>
        </trans-unit>
        <trans-unit id="e16bc75480943b0ecc586c6e38b6a7a597de5df3" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitVariableAsExceptionParameter()</source>
          <target state="translated">ElementKindVisitor6.visitVariableAsExceptionParameter()</target>
        </trans-unit>
        <trans-unit id="63b2bfa4348ccb5ea6fb9fe2f492dc651989a28b" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitVariableAsField()</source>
          <target state="translated">ElementKindVisitor6.visitVariableAsField()</target>
        </trans-unit>
        <trans-unit id="363baaf684693394bb41c5be3195523b634d242b" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitVariableAsLocalVariable()</source>
          <target state="translated">ElementKindVisitor6.visitVariableAsLocalVariable()</target>
        </trans-unit>
        <trans-unit id="73161f0410c350d695ef9cf112af189ff875cf13" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitVariableAsParameter()</source>
          <target state="translated">ElementKindVisitor6.visitVariableAsParameter()</target>
        </trans-unit>
        <trans-unit id="9c4cbecd77ce188a3d2541ac7dc15ed0be7ef02a" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitVariableAsResourceVariable()</source>
          <target state="translated">ElementKindVisitor6.visitVariableAsResourceVariable()</target>
        </trans-unit>
        <trans-unit id="8cad58eaa99d8143e27a778f30b8cd146e57b2da" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor7</source>
          <target state="translated">ElementKindVisitor7</target>
        </trans-unit>
        <trans-unit id="daaaafc689d25fbc962ac1d8431265f72f966fba" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor7.visitVariableAsResourceVariable()</source>
          <target state="translated">ElementKindVisitor7.visitVariableAsResourceVariable()</target>
        </trans-unit>
        <trans-unit id="b165a93d199d9b75dcd765af5164b1f6ccd7a203" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor8</source>
          <target state="translated">ElementKindVisitor8</target>
        </trans-unit>
        <trans-unit id="61d71b28cb87641acc164e3b593be995c3335237" translate="yes" xml:space="preserve">
          <source>ElementScanner6</source>
          <target state="translated">ElementScanner6</target>
        </trans-unit>
        <trans-unit id="03e0977c7a21d7dfa0ae05e773ac75977d651d62" translate="yes" xml:space="preserve">
          <source>ElementScanner6.scan()</source>
          <target state="translated">ElementScanner6.scan()</target>
        </trans-unit>
        <trans-unit id="bc4cbd37253247c25ea32963daecb60c5a196417" translate="yes" xml:space="preserve">
          <source>ElementScanner6.visitExecutable()</source>
          <target state="translated">ElementScanner6.visitExecutable()</target>
        </trans-unit>
        <trans-unit id="363e30f8baca0f8ca5a929369d16ef38da1f2623" translate="yes" xml:space="preserve">
          <source>ElementScanner6.visitPackage()</source>
          <target state="translated">ElementScanner6.visitPackage()</target>
        </trans-unit>
        <trans-unit id="f8b038ce8ad646c0a552e3beee3eb8ab32cf1090" translate="yes" xml:space="preserve">
          <source>ElementScanner6.visitType()</source>
          <target state="translated">ElementScanner6.visitType()</target>
        </trans-unit>
        <trans-unit id="4bbb8542155cdbb3b42790fd3b94fed6a7302869" translate="yes" xml:space="preserve">
          <source>ElementScanner6.visitTypeParameter()</source>
          <target state="translated">ElementScanner6.visitTypeParameter()</target>
        </trans-unit>
        <trans-unit id="cd728b942b2b88cd3fa4f8cf8fb8542ccf0ed341" translate="yes" xml:space="preserve">
          <source>ElementScanner6.visitVariable()</source>
          <target state="translated">ElementScanner6.visitVariable()</target>
        </trans-unit>
        <trans-unit id="16f8ad270cb89db0128afb9484d9e746bf74c166" translate="yes" xml:space="preserve">
          <source>ElementScanner7</source>
          <target state="translated">ElementScanner7</target>
        </trans-unit>
        <trans-unit id="f047833005d7841cafbdbdb0ed2f1bd25e662c0c" translate="yes" xml:space="preserve">
          <source>ElementScanner7.visitVariable()</source>
          <target state="translated">ElementScanner7.visitVariable()</target>
        </trans-unit>
        <trans-unit id="52a50b6263c40e97bb5cff952ad5c9e0ba9a0c29" translate="yes" xml:space="preserve">
          <source>ElementScanner8</source>
          <target state="translated">ElementScanner8</target>
        </trans-unit>
        <trans-unit id="9aed0717f882243e832c4f8729d91cb5c2b8bd02" translate="yes" xml:space="preserve">
          <source>ElementType</source>
          <target state="translated">ElementType</target>
        </trans-unit>
        <trans-unit id="e1adf9428ce7270048a4afe66034d9b529d71e6e" translate="yes" xml:space="preserve">
          <source>ElementType.valueOf()</source>
          <target state="translated">ElementType.valueOf()</target>
        </trans-unit>
        <trans-unit id="0d680c1c29c0b824a7d0db82b13cfd0d3b62eab0" translate="yes" xml:space="preserve">
          <source>ElementType.values()</source>
          <target state="translated">ElementType.values()</target>
        </trans-unit>
        <trans-unit id="66572e1d7a2ba1b7aa849f12e71505e30a1d15a5" translate="yes" xml:space="preserve">
          <source>ElementVisitor</source>
          <target state="translated">ElementVisitor</target>
        </trans-unit>
        <trans-unit id="133876e98591087152b053c0d79c00af1c43f5e4" translate="yes" xml:space="preserve">
          <source>ElementVisitor.visit()</source>
          <target state="translated">ElementVisitor.visit()</target>
        </trans-unit>
        <trans-unit id="48a6e29854cafc237482f2aa1adc13e6e902a433" translate="yes" xml:space="preserve">
          <source>ElementVisitor.visitExecutable()</source>
          <target state="translated">ElementVisitor.visitExecutable()</target>
        </trans-unit>
        <trans-unit id="d35c02c137313d5be3da4b0f372d2f731ad3418e" translate="yes" xml:space="preserve">
          <source>ElementVisitor.visitPackage()</source>
          <target state="translated">ElementVisitor.visitPackage()</target>
        </trans-unit>
        <trans-unit id="132489723db565ae02553fff275ab39026b46b5c" translate="yes" xml:space="preserve">
          <source>ElementVisitor.visitType()</source>
          <target state="translated">ElementVisitor.visitType()</target>
        </trans-unit>
        <trans-unit id="081c3628c61a133d5fac5aeeaa1441fc096c056f" translate="yes" xml:space="preserve">
          <source>ElementVisitor.visitTypeParameter()</source>
          <target state="translated">ElementVisitor.visitTypeParameter()</target>
        </trans-unit>
        <trans-unit id="48dfab104aad3073dc7916e9fdbf593ec4505187" translate="yes" xml:space="preserve">
          <source>ElementVisitor.visitUnknown()</source>
          <target state="translated">ElementVisitor.visitUnknown()</target>
        </trans-unit>
        <trans-unit id="429d8c4f41037607ee33e2aa6968efa4ba1cef51" translate="yes" xml:space="preserve">
          <source>ElementVisitor.visitVariable()</source>
          <target state="translated">ElementVisitor.visitVariable()</target>
        </trans-unit>
        <trans-unit id="a563972e807d43617dfb0a4b0398984476c03544" translate="yes" xml:space="preserve">
          <source>Elements</source>
          <target state="translated">Elements</target>
        </trans-unit>
        <trans-unit id="b997e0a3fe5ba38263a2ce2a65f2daeaa5147a87" translate="yes" xml:space="preserve">
          <source>Elements may not contain text or mix text with embedded tags.</source>
          <target state="translated">요소는 텍스트를 포함하거나 태그가 포함 된 텍스트를 혼합 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2e21bf0d5b4e332104568ee831e46463cf0e903a" translate="yes" xml:space="preserve">
          <source>Elements should be compared using the &lt;a href=&quot;element#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(Object)&lt;/code&gt;&lt;/a&gt; method. There is no guarantee that any particular element will always be represented by the same object.</source>
          <target state="translated">&lt;a href=&quot;element#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(Object)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 요소를 비교해야합니다 . 특정 요소가 항상 같은 객체로 표현된다는 보장은 없습니다.</target>
        </trans-unit>
        <trans-unit id="9645209f08cdfa3370286e88d4eec790f7aea7f8" translate="yes" xml:space="preserve">
          <source>Elements sorted by increasing absolute magnitude tend to yield more accurate results.</source>
          <target state="translated">절대 크기를 늘려 정렬 된 요소는보다 정확한 결과를 얻는 경향이 있습니다.</target>
        </trans-unit>
        <trans-unit id="cae5ef0a1d8b1fbca1a64c978b040d71ba791259" translate="yes" xml:space="preserve">
          <source>Elements which contain elements use those elements as arguments, unless they have the tag: &quot;void&quot;.</source>
          <target state="translated">&quot;void&quot;태그가없는 경우 요소를 포함하는 요소는 해당 요소를 인수로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="afb38626747b4029a61acb668b53cfcb11d7aff0" translate="yes" xml:space="preserve">
          <source>Elements with the &quot;void&quot; tag are executed using the outer context as the target if no target is defined by a &quot;class&quot; attribute.</source>
          <target state="translated">&quot;void&quot;태그가있는 요소는 대상이 &quot;class&quot;속성으로 정의되지 않은 경우 외부 컨텍스트를 대상으로 사용하여 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="83e1dba88b9ce9806728b25eb184c42586a08f43" translate="yes" xml:space="preserve">
          <source>Elements.getAllAnnotationMirrors()</source>
          <target state="translated">Elements.getAllAnnotationMirrors()</target>
        </trans-unit>
        <trans-unit id="a55aa49ca17b278b9b1345d4958e3ad55ef46611" translate="yes" xml:space="preserve">
          <source>Elements.getAllMembers()</source>
          <target state="translated">Elements.getAllMembers()</target>
        </trans-unit>
        <trans-unit id="2e1404abddcec2df4aa15541433f75050ad420c1" translate="yes" xml:space="preserve">
          <source>Elements.getBinaryName()</source>
          <target state="translated">Elements.getBinaryName()</target>
        </trans-unit>
        <trans-unit id="0233b4a95a3d44588d15aa6c01019722c37ec431" translate="yes" xml:space="preserve">
          <source>Elements.getConstantExpression()</source>
          <target state="translated">Elements.getConstantExpression()</target>
        </trans-unit>
        <trans-unit id="82070c841ea5acbf7c0dbc3de221ada1ca2d7dc1" translate="yes" xml:space="preserve">
          <source>Elements.getDocComment()</source>
          <target state="translated">Elements.getDocComment()</target>
        </trans-unit>
        <trans-unit id="698b4b4110a7928464cb3550699b8086963c3834" translate="yes" xml:space="preserve">
          <source>Elements.getElementValuesWithDefaults()</source>
          <target state="translated">Elements.getElementValuesWithDefaults()</target>
        </trans-unit>
        <trans-unit id="09f609d910490c050b0e26d52e6a7aa782d9112e" translate="yes" xml:space="preserve">
          <source>Elements.getName()</source>
          <target state="translated">Elements.getName()</target>
        </trans-unit>
        <trans-unit id="364230b23cdfa922a7ec3da2be9b20f6928639ae" translate="yes" xml:space="preserve">
          <source>Elements.getPackageElement()</source>
          <target state="translated">Elements.getPackageElement()</target>
        </trans-unit>
        <trans-unit id="5f5d6c32044a1374c232047508ca5ea7068a73fd" translate="yes" xml:space="preserve">
          <source>Elements.getPackageOf()</source>
          <target state="translated">Elements.getPackageOf()</target>
        </trans-unit>
        <trans-unit id="9b5739dbea5f0d58efd635c5af4d4dba037d8423" translate="yes" xml:space="preserve">
          <source>Elements.getTypeElement()</source>
          <target state="translated">Elements.getTypeElement()</target>
        </trans-unit>
        <trans-unit id="8a7fc40cd3d520331667b691ab8785fb07205d6f" translate="yes" xml:space="preserve">
          <source>Elements.hides()</source>
          <target state="translated">Elements.hides()</target>
        </trans-unit>
        <trans-unit id="e529b739d53a6f23e35d18d94fb4aba5bcfa6df7" translate="yes" xml:space="preserve">
          <source>Elements.isDeprecated()</source>
          <target state="translated">Elements.isDeprecated()</target>
        </trans-unit>
        <trans-unit id="f8c9d4ae14aa6254c5ab61473c631d75a8f0b145" translate="yes" xml:space="preserve">
          <source>Elements.isFunctionalInterface()</source>
          <target state="translated">Elements.isFunctionalInterface()</target>
        </trans-unit>
        <trans-unit id="fe282b19696821258121fc4f298f75c5643cc2b7" translate="yes" xml:space="preserve">
          <source>Elements.overrides()</source>
          <target state="translated">Elements.overrides()</target>
        </trans-unit>
        <trans-unit id="19aafa24fd9d9eb722ac46cd5f6a7373d0295431" translate="yes" xml:space="preserve">
          <source>Elements.printElements()</source>
          <target state="translated">Elements.printElements()</target>
        </trans-unit>
        <trans-unit id="7fa78580ff4e9c80fd2292d6f28ffb0288e32c46" translate="yes" xml:space="preserve">
          <source>EllipticCurve</source>
          <target state="translated">EllipticCurve</target>
        </trans-unit>
        <trans-unit id="f9b44b05b5585f7630b718dd31f6d624a0722399" translate="yes" xml:space="preserve">
          <source>EllipticCurve.equals()</source>
          <target state="translated">EllipticCurve.equals()</target>
        </trans-unit>
        <trans-unit id="f4eaf151c981f7fb05f3291404fab56f5f44b05d" translate="yes" xml:space="preserve">
          <source>EllipticCurve.getA()</source>
          <target state="translated">EllipticCurve.getA()</target>
        </trans-unit>
        <trans-unit id="9cc4d65f323d38776e6210495538448c7a6f35e9" translate="yes" xml:space="preserve">
          <source>EllipticCurve.getB()</source>
          <target state="translated">EllipticCurve.getB()</target>
        </trans-unit>
        <trans-unit id="9b6782887b60931314457db84060ddf44b91eeda" translate="yes" xml:space="preserve">
          <source>EllipticCurve.getField()</source>
          <target state="translated">EllipticCurve.getField()</target>
        </trans-unit>
        <trans-unit id="304648bc76838a29c60e703769b3741e4db3d5ee" translate="yes" xml:space="preserve">
          <source>EllipticCurve.getSeed()</source>
          <target state="translated">EllipticCurve.getSeed()</target>
        </trans-unit>
        <trans-unit id="45067747b1c6686ac31e2108b5543a0fef0fa31e" translate="yes" xml:space="preserve">
          <source>EllipticCurve.hashCode()</source>
          <target state="translated">EllipticCurve.hashCode()</target>
        </trans-unit>
        <trans-unit id="be114948df94126f9726724139a79fecbd8869d2" translate="yes" xml:space="preserve">
          <source>Embedded sequences. A sound bank may contain built-in song data stored in a data object such as a &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">임베디드 시퀀스. 사운드 뱅크는 &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 와 같은 데이터 객체에 저장된 내장 곡 데이터를 포함 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ad58c76bcb8043198f65747d7fb564aa10c1a435" translate="yes" xml:space="preserve">
          <source>Emits an XML document representing all of the preferences contained in this node and all of its descendants. This XML document is, in effect, an offline backup of the subtree rooted at the node.</source>
          <target state="translated">이 노드에 포함 된 모든 환경 설정과 모든 하위 항목을 나타내는 XML 문서를 생성합니다. 이 XML 문서는 사실상 노드를 기반으로하는 서브 트리의 오프라인 백업입니다.</target>
        </trans-unit>
        <trans-unit id="70d59d4441eadc4363272d5a81d789463c5425af" translate="yes" xml:space="preserve">
          <source>Emits an XML document representing all of the properties contained in this table, using the specified encoding.</source>
          <target state="translated">지정된 인코딩을 사용하여이 테이블에 포함 된 모든 속성을 나타내는 XML 문서를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="690debfba8141b3f5ca2af8d79c8e485a30667c0" translate="yes" xml:space="preserve">
          <source>Emits an XML document representing all of the properties contained in this table.</source>
          <target state="translated">이 테이블에 포함 된 모든 속성을 나타내는 XML 문서를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3c3226b9b649a9bda649b7d20aa0f525dfd960e5" translate="yes" xml:space="preserve">
          <source>Emits on the specified output stream an XML document representing all of the preferences contained in this node (but not its descendants). This XML document is, in effect, an offline backup of the node.</source>
          <target state="translated">지정된 출력 스트림에이 노드에 포함 된 모든 환경 설정 (자손은 아님)을 나타내는 XML 문서를 생성합니다. 이 XML 문서는 사실상 노드의 오프라인 백업입니다.</target>
        </trans-unit>
        <trans-unit id="63bd54b8771d2111909c105fe783c651dd1a2cab" translate="yes" xml:space="preserve">
          <source>Empty constructor for use by subclasses.</source>
          <target state="translated">서브 클래스에서 사용하기위한 빈 생성자.</target>
        </trans-unit>
        <trans-unit id="c41f5b081a698063a09e9e8855306e70a9e0d2d8" translate="yes" xml:space="preserve">
          <source>Empty relative paths are permitted; this seems to be the intent of RFC 2396 although the grammar does not permit it. The primary consequence of this deviation is that a standalone fragment such as &lt;code&gt;&quot;#foo&quot;&lt;/code&gt; parses as a relative URI with an empty path and the given fragment, and can be usefully &lt;a href=&quot;#resolve-frag&quot;&gt;resolved&lt;/a&gt; against a base URI.</source>
          <target state="translated">빈 상대 경로가 허용됩니다. 문법으로는 허용하지 않지만 RFC 2396의 의도 인 것 같습니다. 이 편차의 주요 결과는 &lt;code&gt;&quot;#foo&quot;&lt;/code&gt; 와 같은 독립형 조각 이 빈 경로와 해당 조각을 가진 상대 URI로 구문 분석되고 기본 URI에 대해 유용하게 &lt;a href=&quot;#resolve-frag&quot;&gt;해석&lt;/a&gt; 될 수 있다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="b7a68b314c25b1f52b5a39b04ad4e835df01bc25" translate="yes" xml:space="preserve">
          <source>EmptyStackException</source>
          <target state="translated">EmptyStackException</target>
        </trans-unit>
        <trans-unit id="39ceb0426f0ff3d6434da3bf14535fa47f6b4db2" translate="yes" xml:space="preserve">
          <source>Enable or disable finalization on exit; doing so specifies that the finalizers of all objects that have finalizers that have not yet been automatically invoked are to be run before the Java runtime exits. By default, finalization on exit is disabled.</source>
          <target state="translated">종료시 종료를 활성화 또는 비활성화합니다. 그렇게하면 아직 자동 호출되지 않은 종료자가있는 모든 오브젝트의 종료자가 Java 런타임이 종료되기 전에 실행되도록 지정합니다. 기본적으로 종료시 종료는 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c5e7cfa2ddde5c412eaddc3d9aed1d9687793e5" translate="yes" xml:space="preserve">
          <source>Enable overriding of readObject and writeObject.</source>
          <target state="translated">readObject 및 writeObject를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1718dda585ad185004657c2bf59265fa8ccc9a4" translate="yes" xml:space="preserve">
          <source>Enable substitution of one object for another during serialization/deserialization.</source>
          <target state="translated">직렬화 / 직렬화 중에 한 개체를 다른 개체로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0b3d6503fed4b27b4ec9505fa5e0981dd943a9b" translate="yes" xml:space="preserve">
          <source>Enable the stream to allow objects read from the stream to be replaced. When enabled, the resolveObject method is called for every object being deserialized.</source>
          <target state="translated">스트림에서 읽은 객체를 교체 할 수 있도록 스트림을 활성화합니다. 사용 가능하게되면, 직렬화 해제중인 모든 오브젝트에 대해 resolveObject 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2273e186069baddca6a1b955e8a87343788b77b5" translate="yes" xml:space="preserve">
          <source>Enable the stream to do replacement of objects in the stream. When enabled, the replaceObject method is called for every object being serialized.</source>
          <target state="translated">스트림이 스트림에서 객체를 교체 할 수 있도록합니다. 활성화하면 직렬화되는 모든 객체에 대해 replaceObject 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="e0008c1b1874e48583f21c7d3e028ce8ecad4c60" translate="yes" xml:space="preserve">
          <source>Enable/disable &lt;a href=&quot;socketoptions#SO_KEEPALIVE&quot;&gt;&lt;code&gt;SO_KEEPALIVE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">활성화 / 비활성화 &lt;a href=&quot;socketoptions#SO_KEEPALIVE&quot;&gt; &lt;code&gt;SO_KEEPALIVE&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1586a972aad0d8cb470a7967ea87c83ff0534320" translate="yes" xml:space="preserve">
          <source>Enable/disable &lt;a href=&quot;socketoptions#SO_LINGER&quot;&gt;&lt;code&gt;SO_LINGER&lt;/code&gt;&lt;/a&gt; with the specified linger time in seconds. The maximum timeout value is platform specific. The setting only affects socket close.</source>
          <target state="translated">지정된 지연 시간 (초)으로 &lt;a href=&quot;socketoptions#SO_LINGER&quot;&gt; &lt;code&gt;SO_LINGER&lt;/code&gt; &lt;/a&gt; 를 활성화 / 비활성화 합니다. 최대 시간 초과 값은 플랫폼에 따라 다릅니다. 이 설정은 소켓 닫기에만 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="b8baf9a6fdf974fba66d98cd648b9644d0f8d110" translate="yes" xml:space="preserve">
          <source>Enable/disable &lt;a href=&quot;socketoptions#SO_OOBINLINE&quot;&gt;&lt;code&gt;SO_OOBINLINE&lt;/code&gt;&lt;/a&gt; (receipt of TCP urgent data) By default, this option is disabled and TCP urgent data received on a socket is silently discarded. If the user wishes to receive urgent data, then this option must be enabled. When enabled, urgent data is received inline with normal data.</source>
          <target state="translated">&lt;a href=&quot;socketoptions#SO_OOBINLINE&quot;&gt; &lt;code&gt;SO_OOBINLINE&lt;/code&gt; &lt;/a&gt; 활성화 / 비활성화 (TCP 긴급 데이터 수신) 기본적으로이 옵션은 비활성화되어 있으며 소켓에서 수신 된 TCP 긴급 데이터는 자동으로 삭제됩니다. 사용자가 긴급한 데이터를 받으려면이 옵션을 활성화해야합니다. 활성화하면 긴급 데이터가 일반 데이터와 함께 인라인으로 수신됩니다.</target>
        </trans-unit>
        <trans-unit id="e8a4d069e69c4e2a4178a677af81263af7376c9d" translate="yes" xml:space="preserve">
          <source>Enable/disable &lt;a href=&quot;socketoptions#SO_TIMEOUT&quot;&gt;&lt;code&gt;SO_TIMEOUT&lt;/code&gt;&lt;/a&gt; with the specified timeout, in milliseconds. With this option set to a non-zero timeout, a call to accept() for this ServerSocket will block for only this amount of time. If the timeout expires, a &lt;b&gt;java.net.SocketTimeoutException&lt;/b&gt; is raised, though the ServerSocket is still valid. The option &lt;b&gt;must&lt;/b&gt; be enabled prior to entering the blocking operation to have effect. The timeout must be &lt;code&gt;&amp;gt; 0&lt;/code&gt;. A timeout of zero is interpreted as an infinite timeout.</source>
          <target state="translated">지정된 시간 제한 (밀리 초)으로 &lt;a href=&quot;socketoptions#SO_TIMEOUT&quot;&gt; &lt;code&gt;SO_TIMEOUT&lt;/code&gt; &lt;/a&gt; 을 활성화 / 비활성화 합니다 . 이 옵션을 0이 아닌 시간 제한으로 설정하면이 ServerSocket에 대한 accept () 호출이이 시간 동안 만 차단됩니다. 제한 시간이 만료되면 ServerSocket이 여전히 유효하지만 &lt;b&gt;java.net.SocketTimeoutException&lt;/b&gt; 이 발생합니다. 차단 작업을 시작하기 전에이 옵션 &lt;b&gt;을&lt;/b&gt; 활성화 &lt;b&gt;해야합니다&lt;/b&gt; . 시간 초과는 &lt;code&gt;&amp;gt; 0&lt;/code&gt; 이어야합니다 . 시간 종료 0은 무한 시간 종료로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="5cc6cf0e7e619187d5edc102aaa097e1edff4c83" translate="yes" xml:space="preserve">
          <source>Enable/disable &lt;a href=&quot;socketoptions#SO_TIMEOUT&quot;&gt;&lt;code&gt;SO_TIMEOUT&lt;/code&gt;&lt;/a&gt; with the specified timeout, in milliseconds. With this option set to a non-zero timeout, a read() call on the InputStream associated with this Socket will block for only this amount of time. If the timeout expires, a &lt;b&gt;java.net.SocketTimeoutException&lt;/b&gt; is raised, though the Socket is still valid. The option &lt;b&gt;must&lt;/b&gt; be enabled prior to entering the blocking operation to have effect. The timeout must be &lt;code&gt;&amp;gt; 0&lt;/code&gt;. A timeout of zero is interpreted as an infinite timeout.</source>
          <target state="translated">지정된 시간 제한 (밀리 초)으로 &lt;a href=&quot;socketoptions#SO_TIMEOUT&quot;&gt; &lt;code&gt;SO_TIMEOUT&lt;/code&gt; &lt;/a&gt; 을 활성화 / 비활성화 합니다 . 이 옵션을 0 이외의 타임 아웃으로 설정하면 (자),이 소켓에 관련한 InputStream의 read () 호출은이 시간 동안 만 차단됩니다. 제한 시간이 만료되면 소켓이 여전히 유효하지만 &lt;b&gt;java.net.SocketTimeoutException&lt;/b&gt; 이 발생합니다. 차단 작업을 시작하기 전에이 옵션 &lt;b&gt;을&lt;/b&gt; 활성화 &lt;b&gt;해야합니다&lt;/b&gt; . 시간 초과는 &lt;code&gt;&amp;gt; 0&lt;/code&gt; 이어야합니다 . 시간 종료 0은 무한 시간 종료로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="d146a2abaf8c713e64c9344c2f24068868dc4f88" translate="yes" xml:space="preserve">
          <source>Enable/disable &lt;a href=&quot;socketoptions#TCP_NODELAY&quot;&gt;&lt;code&gt;TCP_NODELAY&lt;/code&gt;&lt;/a&gt; (disable/enable Nagle's algorithm).</source>
          <target state="translated">&lt;a href=&quot;socketoptions#TCP_NODELAY&quot;&gt; &lt;code&gt;TCP_NODELAY&lt;/code&gt; 를&lt;/a&gt; 활성화 / 비활성화 합니다 (Nagle 알고리즘 비활성화 / 활성화).</target>
        </trans-unit>
        <trans-unit id="8dbbaaa7266589e16c8abbbe8518feee9d928e7b" translate="yes" xml:space="preserve">
          <source>Enable/disable SO_BROADCAST.</source>
          <target state="translated">SO_BROADCAST를 활성화 / 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="051d39183d7508d3aa4203ffef19bca24e3b3c2a" translate="yes" xml:space="preserve">
          <source>Enable/disable SO_TIMEOUT with the specified timeout, in milliseconds. With this option set to a non-zero timeout, a call to receive() for this DatagramSocket will block for only this amount of time. If the timeout expires, a &lt;b&gt;java.net.SocketTimeoutException&lt;/b&gt; is raised, though the DatagramSocket is still valid. The option &lt;b&gt;must&lt;/b&gt; be enabled prior to entering the blocking operation to have effect. The timeout must be &lt;code&gt;&amp;gt; 0&lt;/code&gt;. A timeout of zero is interpreted as an infinite timeout.</source>
          <target state="translated">지정된 시간 제한 (밀리 초)으로 SO_TIMEOUT을 활성화 / 비활성화합니다. 이 옵션을 0이 아닌 시간 초과로 설정하면이 DatagramSocket에 대한 receive () 호출이이 시간 동안 만 차단됩니다. 제한 시간이 만료되면 DatagramSocket이 여전히 유효하지만 &lt;b&gt;java.net.SocketTimeoutException&lt;/b&gt; 이 발생합니다. 차단 작업을 시작하기 전에이 옵션 &lt;b&gt;을&lt;/b&gt; 활성화 &lt;b&gt;해야합니다&lt;/b&gt; . 시간 초과는 &lt;code&gt;&amp;gt; 0&lt;/code&gt; 이어야합니다 . 시간 종료 0은 무한 시간 종료로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="8d38f53af452fcc4a3a57a1d64c20ea97abb7fbd" translate="yes" xml:space="preserve">
          <source>Enable/disable the &lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; socket option.</source>
          <target state="translated">&lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; &lt;/a&gt; 소켓 옵션을 활성화 / 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="a670c41c113ba2ccecd6cdbbc0a01684688641a6" translate="yes" xml:space="preserve">
          <source>Enable/disable the SO_REUSEADDR socket option.</source>
          <target state="translated">SO_REUSEADDR 소켓 옵션을 활성화 / 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="600b2cf752bf1f13348def4f0292964c3459911b" translate="yes" xml:space="preserve">
          <source>Enable/disable the option specified by</source>
          <target state="translated">에 의해 지정된 옵션을 활성화 / 비활성화합니다</target>
        </trans-unit>
        <trans-unit id="c7ba1ee1ae277ed3ac950de6590f5f0b9f606ba2" translate="yes" xml:space="preserve">
          <source>Enables MBeanServerNotifications concerning given ObjectName.</source>
          <target state="translated">지정된 ObjectName에 관한 MBeanServerNotifications를 유효하게합니다.</target>
        </trans-unit>
        <trans-unit id="b543c8a23ab6842c408300ef60b751aa3db36205" translate="yes" xml:space="preserve">
          <source>Enables Unicode-aware case folding.</source>
          <target state="translated">유니 코드를 인식하는 케이스 접기를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3d78fb7ca0db1a58ebd59c9cae0c12f8c40dfa02" translate="yes" xml:space="preserve">
          <source>Enables Unix lines mode.</source>
          <target state="translated">유닉스 라인 모드를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="091d41206e2a9ac925be05505ec031597e77a545" translate="yes" xml:space="preserve">
          <source>Enables all MBeanServerNotifications (all ObjectNames are selected).</source>
          <target state="translated">모든 MBeanServerNotification을 사용 가능하게합니다 (모든 ObjectName이 선택됨).</target>
        </trans-unit>
        <trans-unit id="6b2eafbc77902d93ff46a79bd20b3ae415c1204f" translate="yes" xml:space="preserve">
          <source>Enables all the attribute change notifications the attribute name of which equals the specified name to be sent to the listener.</source>
          <target state="translated">지정된 이름과 동일한 속성 이름이 리스너에게 전송되는 모든 속성 변경 알림을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3eb8921d50ec87d6f0ce8ff2b7960c31cfd9c974" translate="yes" xml:space="preserve">
          <source>Enables all the notifications the type of which starts with the specified prefix to be sent to the listener.</source>
          <target state="translated">지정된 접두어로 시작하는 유형의 모든 알림을 리스너에게 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e6c6dcef335e68fe05451244932503a673716c0" translate="yes" xml:space="preserve">
          <source>Enables canonical equivalence.</source>
          <target state="translated">정식 동등성을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c6a24259091d007977acf52d96a64c638d463fb7" translate="yes" xml:space="preserve">
          <source>Enables case-insensitive matching.</source>
          <target state="translated">대소 문자를 구분하지 않는 일치를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a497f3742c321bf7532af138797d65003d63b0a0" translate="yes" xml:space="preserve">
          <source>Enables dotall mode.</source>
          <target state="translated">dotall 모드를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="ad1614448b99ab93c2cc9d0947ca3d403238fc64" translate="yes" xml:space="preserve">
          <source>Enables literal parsing of the pattern.</source>
          <target state="translated">패턴의 리터럴 구문 분석을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="35ed1f408c376283e160007e24f8a96d620e43ac" translate="yes" xml:space="preserve">
          <source>Enables multiline mode.</source>
          <target state="translated">여러 줄 모드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e566385e1531fdbf8a9efde651a2fb600595c65c" translate="yes" xml:space="preserve">
          <source>Enables or disables the verbose output for the class loading system. The verbose output information and the output stream to which the verbose information is emitted are implementation dependent. Typically, a Java virtual machine implementation prints a message each time a class file is loaded.</source>
          <target state="translated">클래스 로딩 시스템의 상세 출력을 사용 가능 또는 사용 불가능하게합니다. 상세 출력 정보 및 상세 정보가 방출되는 출력 스트림은 구현에 의존한다. 일반적으로 Java 가상 머신 구현은 클래스 파일이로드 될 때마다 메시지를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="a8d1533b2a64e3fa522052650e271b7f46755775" translate="yes" xml:space="preserve">
          <source>Enables or disables thread CPU time measurement. The default is platform dependent.</source>
          <target state="translated">스레드 CPU 시간 측정을 활성화 또는 비활성화합니다. 기본값은 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="66a7dfdf72576e36fa3b72ec8dec25e189267747" translate="yes" xml:space="preserve">
          <source>Enables or disables thread contention monitoring. Thread contention monitoring is disabled by default.</source>
          <target state="translated">스레드 경합 모니터링을 사용하거나 사용하지 않습니다. 스레드 경합 모니터링은 기본적으로 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a9498626202770916822a8ef52c085c5c0425c4" translate="yes" xml:space="preserve">
          <source>Enables or disables verbose output for the memory system. The verbose output information and the output stream to which the verbose information is emitted are implementation dependent. Typically, a Java virtual machine implementation prints a message whenever it frees memory at garbage collection.</source>
          <target state="translated">메모리 시스템에 대한 자세한 출력을 활성화하거나 비활성화합니다. 상세 출력 정보 및 상세 정보가 방출되는 출력 스트림은 구현에 의존한다. 일반적으로 Java 가상 머신 구현은 가비지 콜렉션에서 메모리를 해제 할 때마다 메시지를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="8a1d8cfc178036aba0bbf8401bba382c54442fad" translate="yes" xml:space="preserve">
          <source>Enables the MBean server to send a notification. If the passed &lt;var&gt;notification&lt;/var&gt; has a sequence number lesser or equal to 0, then replace it with the delegate's own sequence number.</source>
          <target state="translated">MBean 서버가 통지를 송신 할 수 있도록합니다. 전달 된 &lt;var&gt;notification&lt;/var&gt; 의 시퀀스 번호가 0보다 작거나 같으면 대리인의 자체 시퀀스 번호로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="9ec18d679094d4cbb7302acfd4628b5b4c58af0f" translate="yes" xml:space="preserve">
          <source>Enables the Unicode version of</source>
          <target state="translated">유니 코드 버전의</target>
        </trans-unit>
        <trans-unit id="98f19a0b41bf5fa3d7bc790b73848e2868eff62c" translate="yes" xml:space="preserve">
          <source>Enables/Disables tracing of instructions. If the &lt;code&gt;boolean&lt;/code&gt; argument is &lt;code&gt;true&lt;/code&gt;, this method suggests that the Java virtual machine emit debugging information for each instruction in the virtual machine as it is executed. The format of this information, and the file or other output stream to which it is emitted, depends on the host environment. The virtual machine may ignore this request if it does not support this feature. The destination of the trace output is system dependent.</source>
          <target state="translated">명령어 추적을 활성화 / 비활성화합니다. 는 IF &lt;code&gt;boolean&lt;/code&gt; 인수가 &lt;code&gt;true&lt;/code&gt; 이 방법은 실행으로 Java 가상 머신이 가상 머신에서 각 명령에 대한 디버깅 정보를 방출 제안합니다. 이 정보의 형식과 정보가 생성되는 파일 또는 기타 출력 스트림은 호스트 환경에 따라 다릅니다. 가상 머신이이 기능을 지원하지 않으면이 요청을 무시할 수 있습니다. 추적 출력의 대상은 시스템에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="e3b3aa1e242cc8aab8f231e834e6100073fc8884" translate="yes" xml:space="preserve">
          <source>Enables/Disables tracing of method calls. If the &lt;code&gt;boolean&lt;/code&gt; argument is &lt;code&gt;true&lt;/code&gt;, this method suggests that the Java virtual machine emit debugging information for each method in the virtual machine as it is called. The format of this information, and the file or other output stream to which it is emitted, depends on the host environment. The virtual machine may ignore this request if it does not support this feature.</source>
          <target state="translated">메서드 호출 추적을 활성화 / 비활성화합니다. 는 IF &lt;code&gt;boolean&lt;/code&gt; 인수가 &lt;code&gt;true&lt;/code&gt; ,이 메소드는 호출 될 Java 가상 머신이 가상 머신의 각 방법에 대한 디버깅 정보를 방출 제안합니다. 이 정보의 형식과 정보가 생성되는 파일 또는 기타 출력 스트림은 호스트 환경에 따라 다릅니다. 가상 머신이이 기능을 지원하지 않으면이 요청을 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd21468b8b3e4e4da23360eab8a424b72c58c779" translate="yes" xml:space="preserve">
          <source>Enables/disables link dereferencing during the search.</source>
          <target state="translated">검색 중에 링크 역 참조를 활성화 / 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="cb746ba2b51da184cdd592034f1c6716c16de171" translate="yes" xml:space="preserve">
          <source>Enables/disables matching all of the subjectAlternativeNames specified in the &lt;a href=&quot;x509certselector#setSubjectAlternativeNames-java.util.Collection-&quot;&gt;&lt;code&gt;setSubjectAlternativeNames&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-java.lang.String-&quot;&gt;&lt;code&gt;addSubjectAlternativeName&lt;/code&gt;&lt;/a&gt; methods. If enabled, the &lt;code&gt;X509Certificate&lt;/code&gt; must contain all of the specified subject alternative names. If disabled, the &lt;code&gt;X509Certificate&lt;/code&gt; must contain at least one of the specified subject alternative names.</source>
          <target state="translated">&lt;a href=&quot;x509certselector#setSubjectAlternativeNames-java.util.Collection-&quot;&gt; &lt;code&gt;setSubjectAlternativeNames&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-java.lang.String-&quot;&gt; &lt;code&gt;addSubjectAlternativeName&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 모든 subjectAlternativeName과 일치하는 기능을 활성화 / 비활성화 합니다. 사용 가능한 경우 &lt;code&gt;X509Certificate&lt;/code&gt; 는 지정된 주제 대체 이름을 모두 포함해야합니다. 비활성화 된 경우 &lt;code&gt;X509Certificate&lt;/code&gt; 는 지정된 주제 대체 이름 중 하나 이상을 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="211b39abca6a633a8d9649c5e5f2c42dd2497fcf" translate="yes" xml:space="preserve">
          <source>Enables/disables returning objects returned as part of the result.</source>
          <target state="translated">결과의 일부로 반환 된 객체 반환을 활성화 / 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="a104d80b31b41d771aa379561b1189a42f1340c4" translate="yes" xml:space="preserve">
          <source>Enabling &lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; prior to binding the socket using &lt;a href=&quot;serversocket#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind(SocketAddress)&lt;/code&gt;&lt;/a&gt; allows the socket to be bound even though a previous connection is in a timeout state.</source>
          <target state="translated">&lt;a href=&quot;serversocket#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind(SocketAddress)&lt;/code&gt; &lt;/a&gt; 사용하여 소켓 을 바인딩하기 전에 &lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; 을&lt;/a&gt; 활성화 하면 이전 연결이 시간 초과 상태 인 경우에도 소켓을 바인딩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec46bb5a93c325930fcc2ba295aa9fdf326d16a3" translate="yes" xml:space="preserve">
          <source>Enabling &lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; prior to binding the socket using &lt;a href=&quot;socket#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind(SocketAddress)&lt;/code&gt;&lt;/a&gt; allows the socket to be bound even though a previous connection is in a timeout state.</source>
          <target state="translated">&lt;a href=&quot;socket#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind(SocketAddress)&lt;/code&gt; &lt;/a&gt; 사용하여 소켓 을 바인딩하기 전에 &lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; 을&lt;/a&gt; 활성화 하면 이전 연결이 시간 초과 상태 인 경우에도 소켓을 바인딩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6318faae181b3934ddf439f0742da6f0f10c07c7" translate="yes" xml:space="preserve">
          <source>Encapsulates parameters for an SSL/TLS connection.</source>
          <target state="translated">SSL / TLS 연결을위한 매개 변수를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="087f34ab9a0de63cafa331424d0dfbd43dc139a2" translate="yes" xml:space="preserve">
          <source>Encapsulates parameters for an SSL/TLS connection. The parameters are the list of ciphersuites to be accepted in an SSL/TLS handshake, the list of protocols to be allowed, the endpoint identification algorithm during SSL/TLS handshaking, the Server Name Indication (SNI), the algorithm constraints and whether SSL/TLS servers should request or require client authentication, etc.</source>
          <target state="translated">SSL / TLS 연결을위한 매개 변수를 캡슐화합니다. 매개 변수는 SSL / TLS 핸드 셰이크에서 승인 할 암호화 슈트 목록, 허용 할 프로토콜 목록, SSL / TLS 핸드 쉐이킹 중 엔드 포인트 식별 알고리즘, 서버 이름 표시 (SNI), 알고리즘 제한 조건 및 SSL / TLS 서버는 클라이언트 인증 등을 요청하거나 요구해야합니다.</target>
        </trans-unit>
        <trans-unit id="38732cc41ef94a44430fea12e40e6042599d0de2" translate="yes" xml:space="preserve">
          <source>Enclosing class:</source>
          <target state="translated">인클로저 클래스 :</target>
        </trans-unit>
        <trans-unit id="68eb78c5c13ce33001513f2eec030966f08cee15" translate="yes" xml:space="preserve">
          <source>Enclosing interface:</source>
          <target state="translated">인클로저 인터페이스 :</target>
        </trans-unit>
        <trans-unit id="cd15e999e6a86ff79ab002148c76c0474554511d" translate="yes" xml:space="preserve">
          <source>EncodedKeySpec</source>
          <target state="translated">EncodedKeySpec</target>
        </trans-unit>
        <trans-unit id="32a4ac237ae194f7e47dd3837c8909517af10bd2" translate="yes" xml:space="preserve">
          <source>EncodedKeySpec.getEncoded()</source>
          <target state="translated">EncodedKeySpec.getEncoded()</target>
        </trans-unit>
        <trans-unit id="32dac2387bb8b43cc2b165693215a9a9a34bb510" translate="yes" xml:space="preserve">
          <source>EncodedKeySpec.getFormat()</source>
          <target state="translated">EncodedKeySpec.getFormat()</target>
        </trans-unit>
        <trans-unit id="7dca2524a7e133f2714375c509deec12458fd552" translate="yes" xml:space="preserve">
          <source>Encoder</source>
          <target state="translated">Encoder</target>
        </trans-unit>
        <trans-unit id="c95509d9d71d3e1081fe9dcf4a6b2a7ca6aa1c3b" translate="yes" xml:space="preserve">
          <source>Encoder.get()</source>
          <target state="translated">Encoder.get()</target>
        </trans-unit>
        <trans-unit id="7b0061f13ad36de047c367c5cf5436d5e8a4dcca" translate="yes" xml:space="preserve">
          <source>Encoder.getExceptionListener()</source>
          <target state="translated">Encoder.getExceptionListener()</target>
        </trans-unit>
        <trans-unit id="7097d9cc57023a133b1df026f184c8669aa7bb31" translate="yes" xml:space="preserve">
          <source>Encoder.getPersistenceDelegate()</source>
          <target state="translated">Encoder.getPersistenceDelegate()</target>
        </trans-unit>
        <trans-unit id="ae608776ad0b43503432669388c33cdf68889201" translate="yes" xml:space="preserve">
          <source>Encoder.remove()</source>
          <target state="translated">Encoder.remove()</target>
        </trans-unit>
        <trans-unit id="9ed6f0454722a0a22eb4719f93d3ff61839bc89b" translate="yes" xml:space="preserve">
          <source>Encoder.setExceptionListener()</source>
          <target state="translated">Encoder.setExceptionListener()</target>
        </trans-unit>
        <trans-unit id="c0cbb6fd1fa2c004766fb7b1c2d44de455c90c8f" translate="yes" xml:space="preserve">
          <source>Encoder.setPersistenceDelegate()</source>
          <target state="translated">Encoder.setPersistenceDelegate()</target>
        </trans-unit>
        <trans-unit id="a027e57da3f0b6fc44c95e5bc5751b4244fb05dc" translate="yes" xml:space="preserve">
          <source>Encoder.writeExpression()</source>
          <target state="translated">Encoder.writeExpression()</target>
        </trans-unit>
        <trans-unit id="ed6cabb5591ae7c2a87cd0d037d87a21152838fe" translate="yes" xml:space="preserve">
          <source>Encoder.writeObject()</source>
          <target state="translated">Encoder.writeObject()</target>
        </trans-unit>
        <trans-unit id="7758ad1a846beda1c7b9a89c844cf1cc0cc784e6" translate="yes" xml:space="preserve">
          <source>Encoder.writeStatement()</source>
          <target state="translated">Encoder.writeStatement()</target>
        </trans-unit>
        <trans-unit id="83342c82c754ec9c7382663f8dbe04b18d4dc431" translate="yes" xml:space="preserve">
          <source>Encodes all bytes from the specified byte array into a newly-allocated byte array using the &lt;a href=&quot;base64&quot;&gt;&lt;code&gt;Base64&lt;/code&gt;&lt;/a&gt; encoding scheme. The returned byte array is of the length of the resulting bytes.</source>
          <target state="translated">&lt;a href=&quot;base64&quot;&gt; &lt;code&gt;Base64&lt;/code&gt; &lt;/a&gt; 인코딩 체계를 사용하여 지정된 바이트 배열의 모든 바이트를 새로 할당 된 바이트 배열로 인코딩합니다. 리턴 된 바이트 배열은 결과 바이트 길이입니다.</target>
        </trans-unit>
        <trans-unit id="15e1f654368799a5723d09a92799a3fbc663509d" translate="yes" xml:space="preserve">
          <source>Encodes all bytes from the specified byte array using the &lt;a href=&quot;base64&quot;&gt;&lt;code&gt;Base64&lt;/code&gt;&lt;/a&gt; encoding scheme, writing the resulting bytes to the given output byte array, starting at offset 0.</source>
          <target state="translated">&lt;a href=&quot;base64&quot;&gt; &lt;code&gt;Base64&lt;/code&gt; &lt;/a&gt; 인코딩 체계를 사용하여 지정된 바이트 배열에서 모든 바이트를 인코딩하고 결과 바이트를 지정된 출력 바이트 배열에 오프셋 0에서 시작하여 기록합니다.</target>
        </trans-unit>
        <trans-unit id="94fc44866451a56ed593e8cdc617a2954dd89c0a" translate="yes" xml:space="preserve">
          <source>Encodes all remaining bytes from the specified byte buffer into a newly-allocated ByteBuffer using the &lt;a href=&quot;base64&quot;&gt;&lt;code&gt;Base64&lt;/code&gt;&lt;/a&gt; encoding scheme. Upon return, the source buffer's position will be updated to its limit; its limit will not have been changed. The returned output buffer's position will be zero and its limit will be the number of resulting encoded bytes.</source>
          <target state="translated">&lt;a href=&quot;base64&quot;&gt; &lt;code&gt;Base64&lt;/code&gt; &lt;/a&gt; 인코딩 체계를 사용하여 지정된 바이트 버퍼의 나머지 바이트를 새로 할당 된 ByteBuffer로 인코딩합니다. 돌아 왔을 때, 소스 버퍼의 위치가 한계로 갱신됩니다. 한도는 변경되지 않았습니다. 리턴 된 출력 버퍼의 위치는 0이되고 한계는 인코딩 된 결과 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="3c6084cf9c0ca967ee8bcfef7e5d055111e6eb64" translate="yes" xml:space="preserve">
          <source>Encodes as many characters as possible from the given input buffer, writing the results to the given output buffer.</source>
          <target state="translated">주어진 입력 버퍼에서 가능한 많은 문자를 인코딩하여 결과를 주어진 출력 버퍼에 씁니다.</target>
        </trans-unit>
        <trans-unit id="d22de3bbfc63fd3fb52a06fa960dae15559a20dd" translate="yes" xml:space="preserve">
          <source>Encodes characters into bytes</source>
          <target state="translated">문자를 바이트로 인코딩</target>
        </trans-unit>
        <trans-unit id="79369719025ad87c1a364b464bd66d7053c26f16" translate="yes" xml:space="preserve">
          <source>Encodes one or more characters into one or more bytes.</source>
          <target state="translated">하나 이상의 문자를 하나 이상의 바이트로 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="cba4bd030f7dced98c73922d43abdbd1b21132d2" translate="yes" xml:space="preserve">
          <source>Encodes the certificate to an output stream in a format that can be decoded by the &lt;code&gt;decode&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;decode&lt;/code&gt; 방법으로 디코드 할 수있는 형식으로 인증서를 출력 스트림에 인 코드 합니다.</target>
        </trans-unit>
        <trans-unit id="898d54be52d2ecbad4dd4372afb53ec95b58231c" translate="yes" xml:space="preserve">
          <source>Encodes the specified byte array into a String using the &lt;a href=&quot;base64&quot;&gt;&lt;code&gt;Base64&lt;/code&gt;&lt;/a&gt; encoding scheme.</source>
          <target state="translated">&lt;a href=&quot;base64&quot;&gt; &lt;code&gt;Base64&lt;/code&gt; &lt;/a&gt; 인코딩 체계를 사용하여 지정된 바이트 배열을 문자열로 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="79cd6a3652298b38e92bbcf33b83bbee46e17859" translate="yes" xml:space="preserve">
          <source>Encodes this &lt;code&gt;String&lt;/code&gt; into a sequence of bytes using the given &lt;a href=&quot;../nio/charset/charset&quot;&gt;charset&lt;/a&gt;, storing the result into a new byte array.</source>
          <target state="translated">지정된 &lt;a href=&quot;../nio/charset/charset&quot;&gt;캐릭터 세트&lt;/a&gt; 를 사용해이 &lt;code&gt;String&lt;/code&gt; 를 바이트 순서에 encode 해 , 결과를 새로운 바이트 배열에 포함합니다.</target>
        </trans-unit>
        <trans-unit id="d811c6485b039de011c0a23f6b50133b4bf02e7b" translate="yes" xml:space="preserve">
          <source>Encodes this &lt;code&gt;String&lt;/code&gt; into a sequence of bytes using the named charset, storing the result into a new byte array.</source>
          <target state="translated">명명 된 문자 세트를 사용 하여이 &lt;code&gt;String&lt;/code&gt; 을 바이트 시퀀스로 인코딩 하여 결과를 새 바이트 배열에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="2fe298b3765023382f5b791bca88f5113ff6365d" translate="yes" xml:space="preserve">
          <source>Encodes this &lt;code&gt;String&lt;/code&gt; into a sequence of bytes using the platform's default charset, storing the result into a new byte array.</source>
          <target state="translated">플랫폼의 기본 문자셋을 사용 하여이 &lt;code&gt;String&lt;/code&gt; 을 바이트 시퀀스로 인코딩 하여 결과를 새로운 바이트 배열에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="616ac8999146d50b6974e6194047b9cb7ae88fe0" translate="yes" xml:space="preserve">
          <source>Encounter order is guaranteed to be ascending index order for any &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt;. But no order is guaranteed for hash-based collections such as &lt;a href=&quot;hashset&quot;&gt;&lt;code&gt;HashSet&lt;/code&gt;&lt;/a&gt;. Clients of a Spliterator that reports &lt;code&gt;ORDERED&lt;/code&gt; are expected to preserve ordering constraints in non-commutative parallel computations.</source>
          <target state="translated">만남 순서는 모든 &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; 에&lt;/a&gt; 대해 인덱스 순서를 오름차순으로 보장합니다 . 그러나 &lt;a href=&quot;hashset&quot;&gt; &lt;code&gt;HashSet&lt;/code&gt; &lt;/a&gt; 과 같은 해시 기반 컬렉션에는 순서가 보장되지 않습니다 . &lt;code&gt;ORDERED&lt;/code&gt; 를보고하는 Spliterator 클라이언트는 비 정렬 병렬 계산에서 순서 제약 조건을 유지 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="289b8403fb2554266fc31e2bc42af67d3d2456ba" translate="yes" xml:space="preserve">
          <source>EncryptedPrivateKeyInfo</source>
          <target state="translated">EncryptedPrivateKeyInfo</target>
        </trans-unit>
        <trans-unit id="3b4da3c1806c1c4cc25161cde5b1035583d72a48" translate="yes" xml:space="preserve">
          <source>EncryptedPrivateKeyInfo.getAlgName()</source>
          <target state="translated">EncryptedPrivateKeyInfo.getAlgName()</target>
        </trans-unit>
        <trans-unit id="b79d875435110111b0d3596202e62e89ddf4affd" translate="yes" xml:space="preserve">
          <source>EncryptedPrivateKeyInfo.getAlgParameters()</source>
          <target state="translated">EncryptedPrivateKeyInfo.getAlgParameters()</target>
        </trans-unit>
        <trans-unit id="1772566f43b955f4e858404de70ed265b6b02fa6" translate="yes" xml:space="preserve">
          <source>EncryptedPrivateKeyInfo.getEncoded()</source>
          <target state="translated">EncryptedPrivateKeyInfo.getEncoded()</target>
        </trans-unit>
        <trans-unit id="28d5c3123b71bb2a0a8cba5080af06f552323176" translate="yes" xml:space="preserve">
          <source>EncryptedPrivateKeyInfo.getEncryptedData()</source>
          <target state="translated">EncryptedPrivateKeyInfo.getEncryptedData()</target>
        </trans-unit>
        <trans-unit id="d0c8e922a847ce28b7ab9a02bd5677a252579f04" translate="yes" xml:space="preserve">
          <source>EncryptedPrivateKeyInfo.getKeySpec()</source>
          <target state="translated">EncryptedPrivateKeyInfo.getKeySpec()</target>
        </trans-unit>
        <trans-unit id="92c7a6ba2f139b9b37a330bdd84f8b435235c13e" translate="yes" xml:space="preserve">
          <source>Encrypts or decrypts data in a single-part operation, or finishes a multiple-part operation. The data is encrypted or decrypted, depending on how this cipher was initialized.</source>
          <target state="translated">단일 파트 작업에서 데이터를 암호화 또는 해독하거나 다중 파트 작업을 완료합니다. 이 암호가 초기화 된 방식에 따라 데이터가 암호화되거나 해독됩니다.</target>
        </trans-unit>
        <trans-unit id="986338c2cf8f95b148575058e0843cb154837aaa" translate="yes" xml:space="preserve">
          <source>End of file is detected, in which case an &lt;code&gt;EOFException&lt;/code&gt; is thrown.</source>
          <target state="translated">파일 끝이 발견되면 &lt;code&gt;EOFException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="45ab2da79d83f02db1ca322401b2305eabe61ab6" translate="yes" xml:space="preserve">
          <source>End of optional block data blocks for an object.</source>
          <target state="translated">객체에 대한 선택적 블록 데이터 블록의 끝.</target>
        </trans-unit>
        <trans-unit id="ff21b27a89ba89b19f9432b6af35bc39cbf11124" translate="yes" xml:space="preserve">
          <source>Ends an optional section.</source>
          <target state="translated">선택적 섹션을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="d1496bc31f512d93833ef65a353a9038de059eb7" translate="yes" xml:space="preserve">
          <source>Ends of lines are treated as white space, not as separate tokens.</source>
          <target state="translated">줄 끝은 별도의 토큰이 아닌 공백으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="a96ca0b209ad078d2a6b23799ab647d8b9d503cb" translate="yes" xml:space="preserve">
          <source>EngineScope attributes are visible during the lifetime of a single &lt;code&gt;ScriptEngine&lt;/code&gt; and a set of attributes is maintained for each engine.</source>
          <target state="translated">EngineScope 속성은 단일 &lt;code&gt;ScriptEngine&lt;/code&gt; 의 수명 동안 표시 되며 각 엔진에 대해 일련의 속성이 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="f65357a11bce582516ffdb216e5e7a9460f3c886" translate="yes" xml:space="preserve">
          <source>Ensure that the discussion in &lt;code&gt;ChronoLocalDate&lt;/code&gt; has been read and understood before using this interface.</source>
          <target state="translated">이 인터페이스를 사용하기 전에 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 의 설명을 읽고 이해 했는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="8add317ddcbdd5d2587eab06b09b0c4361aba9c0" translate="yes" xml:space="preserve">
          <source>Ensures that future reads from this preference node and its descendants reflect any changes that were committed to the persistent store (from any VM) prior to the &lt;code&gt;sync&lt;/code&gt; invocation. As a side-effect, forces any changes in the contents of this preference node and its descendants to the persistent store, as if the &lt;code&gt;flush&lt;/code&gt; method had been invoked on this node.</source>
          <target state="translated">이 환경 설정 노드 및 해당 하위 항목의 향후 읽기에 &lt;code&gt;sync&lt;/code&gt; 호출 전에 지속적 저장소 (모든 VM에서)에 커미트 된 변경 사항이 반영되도록합니다 . 부작용으로,이 노드에서 &lt;code&gt;flush&lt;/code&gt; 메소드가 호출 된 것처럼이 환경 설정 노드 및 해당 하위 항목의 컨텐츠 변경 사항을 지속적 저장소로 강제 적용 합니다.</target>
        </trans-unit>
        <trans-unit id="3769ef663ae581229c8696860e788a65ee96b24a" translate="yes" xml:space="preserve">
          <source>Ensures that the &lt;code&gt;close&lt;/code&gt; method of this file input stream is called when there are no more references to it.</source>
          <target state="translated">이 파일 입력 스트림 의 &lt;code&gt;close&lt;/code&gt; 메소드가 더 이상 참조가 없을 때 호출되도록합니다.</target>
        </trans-unit>
        <trans-unit id="53d72b75813678b40a6a36680ea177f64d130154" translate="yes" xml:space="preserve">
          <source>Ensures that the capacity is at least equal to the specified minimum. If the current capacity is less than the argument, then a new internal array is allocated with greater capacity. The new capacity is the larger of:</source>
          <target state="translated">용량이 지정된 최소값 이상이어야합니다. 현재 용량이 인수보다 작 으면 새로운 내부 배열에 더 큰 용량이 할당됩니다. 새로운 용량은 다음 중 더 큽니다.</target>
        </trans-unit>
        <trans-unit id="7336d8c4fc2e8ebae465ae444febf052ae1db892" translate="yes" xml:space="preserve">
          <source>Ensures that the key stored away by this ExemptionMechanism object will be wiped out when there are no more references to it.</source>
          <target state="translated">이 ExemptionMechanism 객체에 의해 저장된 키가 더 이상 참조가 없으면 지워지도록합니다.</target>
        </trans-unit>
        <trans-unit id="b251fff27708ddca48cb0becbf1b5f91a05e7f38" translate="yes" xml:space="preserve">
          <source>Ensures that the system resources held by this ZipFile object are released when there are no more references to it.</source>
          <target state="translated">이 ZipFile 객체가 보유한 시스템 리소스가 더 이상 참조가 없을 때 해제되도록합니다.</target>
        </trans-unit>
        <trans-unit id="1c6b3ec0001356332b2dfc7ce21f74c83e142244" translate="yes" xml:space="preserve">
          <source>Ensures that this collection contains the specified element (optional operation). Returns &lt;code&gt;true&lt;/code&gt; if this collection changed as a result of the call. (Returns &lt;code&gt;false&lt;/code&gt; if this collection does not permit duplicates and already contains the specified element.)</source>
          <target state="translated">이 콜렉션에 지정된 요소가 포함되어 있는지 확인하십시오 (선택적 조작). 호출의 결과로이 컬렉션이 변경된 경우에 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 이 컬렉션이 복제를 허용하지 않고 지정된 요소를 이미 포함하고 있으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="21de300f8493ecee40d2d49069c480ffbf72f486" translate="yes" xml:space="preserve">
          <source>Entity requesting authentication is a HTTP origin server.</source>
          <target state="translated">인증을 요청하는 엔티티는 HTTP 오리진 서버입니다.</target>
        </trans-unit>
        <trans-unit id="a88d46f94a0dde9b0faceb9e42954452ec66b9fe" translate="yes" xml:space="preserve">
          <source>Entity requesting authentication is a HTTP proxy server.</source>
          <target state="translated">인증을 요청하는 엔티티는 HTTP 프록시 서버입니다.</target>
        </trans-unit>
        <trans-unit id="20588ae8e5c269292d35f9dfffa8f2eb3fd3c259" translate="yes" xml:space="preserve">
          <source>Enum</source>
          <target state="translated">Enum</target>
        </trans-unit>
        <trans-unit id="4e09febc26e1749cbd763eb6376efe5085c53d9d" translate="yes" xml:space="preserve">
          <source>Enum AccessMode</source>
          <target state="translated">열거 형 액세스 모드</target>
        </trans-unit>
        <trans-unit id="fb2e8089e9be21944781c7800549f7268bab9da1" translate="yes" xml:space="preserve">
          <source>Enum AclEntryFlag</source>
          <target state="translated">열거 형 AclEntryFlag</target>
        </trans-unit>
        <trans-unit id="962263199c93bcc2e9569ec2636faff7a1a1717b" translate="yes" xml:space="preserve">
          <source>Enum AclEntryPermission</source>
          <target state="translated">열거 형 AclEntryPermission</target>
        </trans-unit>
        <trans-unit id="02430bcc82bd757da04181443543461605634676" translate="yes" xml:space="preserve">
          <source>Enum AclEntryType</source>
          <target state="translated">열거 형 AclEntryType</target>
        </trans-unit>
        <trans-unit id="8b8cdf1d9fae9ff71a3978fdaeebf13e02712026" translate="yes" xml:space="preserve">
          <source>Enum Authenticator.RequestorType</source>
          <target state="translated">Enum Authenticator.RequestorType</target>
        </trans-unit>
        <trans-unit id="98b5de31f53088930077c0449179c71629e9834c" translate="yes" xml:space="preserve">
          <source>Enum CRLReason</source>
          <target state="translated">열거 형 CRLReason</target>
        </trans-unit>
        <trans-unit id="c07a47874be1e37061e93b0b4e3e8974b10a2b4a" translate="yes" xml:space="preserve">
          <source>Enum CertPathValidatorException.BasicReason</source>
          <target state="translated">열거 형 CertPathValidatorException.BasicReason</target>
        </trans-unit>
        <trans-unit id="359ca217883b01e292816c085ae2a5b612c979d0" translate="yes" xml:space="preserve">
          <source>Enum Character.UnicodeScript</source>
          <target state="translated">열거 형 문자. 유니 코드 스크립트</target>
        </trans-unit>
        <trans-unit id="59e4cdc0ad021314534e2d6f0b7341f62abcddcf" translate="yes" xml:space="preserve">
          <source>Enum ChronoField</source>
          <target state="translated">열거 크로노 필드</target>
        </trans-unit>
        <trans-unit id="aed43b7eb04f86aa0bc0c9b52a31f8ee1f41a4d9" translate="yes" xml:space="preserve">
          <source>Enum ChronoUnit</source>
          <target state="translated">열거 형 크로노 단위</target>
        </trans-unit>
        <trans-unit id="64be5dda66e1ad93d41b9b1b743e46816658897f" translate="yes" xml:space="preserve">
          <source>Enum Collector.Characteristics</source>
          <target state="translated">Enum Collector. 특성</target>
        </trans-unit>
        <trans-unit id="62d5278824a7f49ae22cdc4c92b679bf8d3c3fe2" translate="yes" xml:space="preserve">
          <source>Enum Constants</source>
          <target state="translated">열거 형 상수</target>
        </trans-unit>
        <trans-unit id="a501de62d76fec1f4e74d552264bef6396c563d3" translate="yes" xml:space="preserve">
          <source>Enum CryptoPrimitive</source>
          <target state="translated">열거 형 CryptoPrimitive</target>
        </trans-unit>
        <trans-unit id="e0e5080461dd912ddb8971141acee13edf698a35" translate="yes" xml:space="preserve">
          <source>Enum DayOfWeek</source>
          <target state="translated">열거 형 DayOfWeek</target>
        </trans-unit>
        <trans-unit id="c9b3634d292c5df7e3dab53a8f794f9cf9850edc" translate="yes" xml:space="preserve">
          <source>Enum Diagnostic.Kind</source>
          <target state="translated">열거 형 진단. 종류</target>
        </trans-unit>
        <trans-unit id="c4f75171185930baaad6a2fa1fb085daefbd1eca" translate="yes" xml:space="preserve">
          <source>Enum DocumentationTool.Location</source>
          <target state="translated">Enum DocumentationTool.Location</target>
        </trans-unit>
        <trans-unit id="7be2560a50cda8b3a28624d75e4947aded89be7d" translate="yes" xml:space="preserve">
          <source>Enum ElementKind</source>
          <target state="translated">열거 형 요소</target>
        </trans-unit>
        <trans-unit id="823f52cacf2ce16a3b53a8055a296cfebdc2324b" translate="yes" xml:space="preserve">
          <source>Enum ElementType</source>
          <target state="translated">열거 형 ElementType</target>
        </trans-unit>
        <trans-unit id="2b97a96de0898dba6b662c50c36cb2e57ff83554" translate="yes" xml:space="preserve">
          <source>Enum FileVisitOption</source>
          <target state="translated">열거 형 FileVisitOption</target>
        </trans-unit>
        <trans-unit id="1a1f21d795779114fb94ec5260cf6277cd087c76" translate="yes" xml:space="preserve">
          <source>Enum FileVisitResult</source>
          <target state="translated">열거 형 FileVisitResult</target>
        </trans-unit>
        <trans-unit id="981fa66080617e0ccb1e75f7b9c4f7e5f0346ad1" translate="yes" xml:space="preserve">
          <source>Enum FormatStyle</source>
          <target state="translated">열거 형 형식</target>
        </trans-unit>
        <trans-unit id="35685ba3e45fc15276fa48357e05948217a1baac" translate="yes" xml:space="preserve">
          <source>Enum Formatter.BigDecimalLayoutForm</source>
          <target state="translated">Enum Formatter.BigDecimalLayoutForm</target>
        </trans-unit>
        <trans-unit id="d824685838e24df420a57bc6959690b778842570" translate="yes" xml:space="preserve">
          <source>Enum HijrahEra</source>
          <target state="translated">열거 히라</target>
        </trans-unit>
        <trans-unit id="842c4ed7688a406435bf81425836804f6319cabe" translate="yes" xml:space="preserve">
          <source>Enum IsoEra</source>
          <target state="translated">열거 형 이소라</target>
        </trans-unit>
        <trans-unit id="81f24bb3617fa49b01e4613a788a09bfde7575d1" translate="yes" xml:space="preserve">
          <source>Enum JavaFileObject.Kind</source>
          <target state="translated">열거 형 JavaFileObject.Kind</target>
        </trans-unit>
        <trans-unit id="1cd0476943d174566ff54625b40c06b4e22683c0" translate="yes" xml:space="preserve">
          <source>Enum KeyRep.Type</source>
          <target state="translated">열거 형 KeyRep.Type</target>
        </trans-unit>
        <trans-unit id="cb635a0e81f7ad09c056dfa834221e6a536c3f09" translate="yes" xml:space="preserve">
          <source>Enum LinkOption</source>
          <target state="translated">열거 형 링크 옵션</target>
        </trans-unit>
        <trans-unit id="6f91f63339fe1cb14e52625b2da1fde1eff84fc1" translate="yes" xml:space="preserve">
          <source>Enum Locale.Category</source>
          <target state="translated">열거 형 로캘 범주</target>
        </trans-unit>
        <trans-unit id="6e2d2f34e1c869e1eb7ff458801b4aed5e71e630" translate="yes" xml:space="preserve">
          <source>Enum Locale.FilteringMode</source>
          <target state="translated">열거 형 로캘 필터링 모드</target>
        </trans-unit>
        <trans-unit id="7458d9ca4000b0a066d182d82a55f09cdab553fa" translate="yes" xml:space="preserve">
          <source>Enum MemoryType</source>
          <target state="translated">열거 형 메모리 유형</target>
        </trans-unit>
        <trans-unit id="1d511e583f26acd1126e7af55350b2b357392eed" translate="yes" xml:space="preserve">
          <source>Enum MinguoEra</source>
          <target state="translated">에눔 밍구 오</target>
        </trans-unit>
        <trans-unit id="1405378b7531204383b5db1fc0bdb723ff76cf31" translate="yes" xml:space="preserve">
          <source>Enum Modifier</source>
          <target state="translated">열거 자 수정 자</target>
        </trans-unit>
        <trans-unit id="08852e797af92d39b1d31dfd0d7e9c589abd275a" translate="yes" xml:space="preserve">
          <source>Enum Month</source>
          <target state="translated">열거 달</target>
        </trans-unit>
        <trans-unit id="977ba8ccde391e5e7005729bb925fc4292ea6d48" translate="yes" xml:space="preserve">
          <source>Enum NestingKind</source>
          <target state="translated">열거 형 중첩</target>
        </trans-unit>
        <trans-unit id="e05600688d98afbafaff31c05ef431b4148af5bc" translate="yes" xml:space="preserve">
          <source>Enum Normalizer.Form</source>
          <target state="translated">열거 형 노멀 라이저. 양식</target>
        </trans-unit>
        <trans-unit id="3840d33aab3a9b7e4ef3e154efa3ad23e4fec5ff" translate="yes" xml:space="preserve">
          <source>Enum PKIXReason</source>
          <target state="translated">열거 형 PKIX 이유</target>
        </trans-unit>
        <trans-unit id="2e74ee44156b701e1d638bfd1fa3bd3406c80af3" translate="yes" xml:space="preserve">
          <source>Enum PKIXRevocationChecker.Option</source>
          <target state="translated">열거 형 PKIXRevocationChecker.Option</target>
        </trans-unit>
        <trans-unit id="f9c84db3a5462a838e4ec0280eef64dc6394df82" translate="yes" xml:space="preserve">
          <source>Enum PosixFilePermission</source>
          <target state="translated">열거 형 PosixFilePermission</target>
        </trans-unit>
        <trans-unit id="681cd08b63b3493d7bf8c5e4e2f1fea4ce169ced" translate="yes" xml:space="preserve">
          <source>Enum ProcessBuilder.Redirect.Type</source>
          <target state="translated">열거 형 ProcessBuilder.Redirect.Type</target>
        </trans-unit>
        <trans-unit id="895544bde1ec969b07c601726ab7ac4a240b2d19" translate="yes" xml:space="preserve">
          <source>Enum Proxy.Type</source>
          <target state="translated">열거 형 프록시. 유형</target>
        </trans-unit>
        <trans-unit id="9189e11d7cad7ae89af760e0df00b853f90b1f66" translate="yes" xml:space="preserve">
          <source>Enum ResolverStyle</source>
          <target state="translated">열거 형 리졸버 스타일</target>
        </trans-unit>
        <trans-unit id="d8d074954a233d044deb9a34edfbfcf9ed992d7a" translate="yes" xml:space="preserve">
          <source>Enum Resource.AuthenticationType</source>
          <target state="translated">열거 형 Resource.AuthenticationType</target>
        </trans-unit>
        <trans-unit id="7f19e51d1c8b6b704593265b8ecfc801e8d52978" translate="yes" xml:space="preserve">
          <source>Enum RetentionPolicy</source>
          <target state="translated">열거 형 보존 정책</target>
        </trans-unit>
        <trans-unit id="6df6cfd88131dbc5caf42822c1f67c45b9cea290" translate="yes" xml:space="preserve">
          <source>Enum RoundingMode</source>
          <target state="translated">열거 형 반올림 모드</target>
        </trans-unit>
        <trans-unit id="296a9678d05defe676748489257748ec8f1666fb" translate="yes" xml:space="preserve">
          <source>Enum SSLEngineResult.HandshakeStatus</source>
          <target state="translated">열거 형 SSLEngineResult.HandshakeStatus</target>
        </trans-unit>
        <trans-unit id="eadc93e4cb9e68e903fee1628a9fc6e5b6567710" translate="yes" xml:space="preserve">
          <source>Enum SSLEngineResult.Status</source>
          <target state="translated">열거 형 SSLEngineResult.Status</target>
        </trans-unit>
        <trans-unit id="3183d6da51d3a901d556b6bfab57de5cded994a1" translate="yes" xml:space="preserve">
          <source>Enum SignStyle</source>
          <target state="translated">열거 형 SignStyle</target>
        </trans-unit>
        <trans-unit id="f504411e2a7f51ab239f9579dedd084c1ec81019" translate="yes" xml:space="preserve">
          <source>Enum SourceVersion</source>
          <target state="translated">열거 형 소스 버전</target>
        </trans-unit>
        <trans-unit id="5eabe5f4a8a7cff596106f59b215261fb4b94b19" translate="yes" xml:space="preserve">
          <source>Enum StandardCopyOption</source>
          <target state="translated">열거 형 StandardCopyOption</target>
        </trans-unit>
        <trans-unit id="0282eca89a8ab90c4c08067bb0a0b00df6a4afd8" translate="yes" xml:space="preserve">
          <source>Enum StandardLocation</source>
          <target state="translated">열거 형 표준 위치</target>
        </trans-unit>
        <trans-unit id="5de8b444c7db361f5d4c71f27e314971e3ca7299" translate="yes" xml:space="preserve">
          <source>Enum StandardOpenOption</source>
          <target state="translated">열거 형 StandardOpenOption</target>
        </trans-unit>
        <trans-unit id="6d9a1938279df64dbe82b01702d5f768dc21a5b9" translate="yes" xml:space="preserve">
          <source>Enum StandardProtocolFamily</source>
          <target state="translated">Enum StandardProtocolFamily</target>
        </trans-unit>
        <trans-unit id="9f9b4e5728581fc20cf8551228d5a220c696b57f" translate="yes" xml:space="preserve">
          <source>Enum Summary</source>
          <target state="translated">열거 형 요약</target>
        </trans-unit>
        <trans-unit id="3c6e1b7e76c9a79c8da81acbc4f12e79348488a2" translate="yes" xml:space="preserve">
          <source>Enum TextStyle</source>
          <target state="translated">열거 형 TextStyle</target>
        </trans-unit>
        <trans-unit id="cf5590fbbb537fb9f913f84b6e7bf599713c0f69" translate="yes" xml:space="preserve">
          <source>Enum ThaiBuddhistEra</source>
          <target state="translated">에누 타이 불교 시대</target>
        </trans-unit>
        <trans-unit id="c4baed0c972784599f175241ce98d6b3dab9fd64" translate="yes" xml:space="preserve">
          <source>Enum Thread.State</source>
          <target state="translated">열거 형 스레드. 상태</target>
        </trans-unit>
        <trans-unit id="b8f3d93ec784da14202f997056ac26cf6bbb989a" translate="yes" xml:space="preserve">
          <source>Enum TimeUnit</source>
          <target state="translated">열거 형 시간 단위</target>
        </trans-unit>
        <trans-unit id="8b7b8397ae243991105ff0a810924bb3c74c96a9" translate="yes" xml:space="preserve">
          <source>Enum TypeKind</source>
          <target state="translated">열거 형</target>
        </trans-unit>
        <trans-unit id="eeb4af3a1b400cd19dabd873d383012ab0e88590" translate="yes" xml:space="preserve">
          <source>Enum ZoneOffsetTransitionRule.TimeDefinition</source>
          <target state="translated">Enum ZoneOffsetTransitionRule.TimeDefinition</target>
        </trans-unit>
        <trans-unit id="10c2f2ab5f983411e651822fecaa6a033fa941da" translate="yes" xml:space="preserve">
          <source>Enum constant (e.g. &lt;a href=&quot;../../java/lang/annotation/elementtype#FIELD&quot;&gt;&lt;code&gt;ElementType.FIELD&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">열거 형 상수 (예 : &lt;a href=&quot;../../java/lang/annotation/elementtype#FIELD&quot;&gt; &lt;code&gt;ElementType.FIELD&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="7f1b29fc356e1c2d3845d7f8476adf4ced362d31" translate="yes" xml:space="preserve">
          <source>Enum constants are deserialized differently than ordinary serializable or externalizable objects. The serialized form of an enum constant consists solely of its name; field values of the constant are not transmitted. To deserialize an enum constant, ObjectInputStream reads the constant name from the stream; the deserialized constant is then obtained by calling the static method &lt;code&gt;Enum.valueOf(Class, String)&lt;/code&gt; with the enum constant's base type and the received constant name as arguments. Like other serializable or externalizable objects, enum constants can function as the targets of back references appearing subsequently in the serialization stream. The process by which enum constants are deserialized cannot be customized: any class-specific readObject, readObjectNoData, and readResolve methods defined by enum types are ignored during deserialization. Similarly, any serialPersistentFields or serialVersionUID field declarations are also ignored--all enum types have a fixed serialVersionUID of 0L.</source>
          <target state="translated">열거 형 상수는 일반 직렬화 가능 객체 또는 외부화 가능 객체와 다르게 직렬화 해제됩니다. 열거 형 상수의 직렬화 된 형식은 이름으로 만 구성됩니다. 상수의 필드 값은 전송되지 않습니다. 열거 형 상수를 직렬화 해제하기 위해 ObjectInputStream은 스트림에서 상수 이름을 읽습니다. deserialized 상수는 정적 메소드를 호출하여 얻습니다. &lt;code&gt;Enum.valueOf(Class, String)&lt;/code&gt; 열거 형 상수의 기본 유형과 수신 된 상수 이름을 인수로 사용합니다. 다른 직렬화 가능 객체 또는 외부화 가능 객체와 마찬가지로 열거 형 상수는 직렬화 스트림에 이후에 나타나는 역 참조 대상으로 작동 할 수 있습니다. 열거 형 상수를 직렬화 해제하는 프로세스는 사용자 정의 할 수 없습니다. 직렬화 해제 중에는 열거 형으로 정의 된 클래스 별 readObject, readObjectNoData 및 readResolve 메소드가 무시됩니다. 마찬가지로 serialPersistentFields 또는 serialVersionUID 필드 선언도 무시됩니다. 모든 열거 형 유형의 고정 serialVersionUID는 0L입니다.</target>
        </trans-unit>
        <trans-unit id="ec9c7dfea576459eb392bcd9a22fac8481357344" translate="yes" xml:space="preserve">
          <source>Enum constants are serialized differently than ordinary serializable or externalizable objects. The serialized form of an enum constant consists solely of its name; field values of the constant are not transmitted. To serialize an enum constant, ObjectOutputStream writes the string returned by the constant's name method. Like other serializable or externalizable objects, enum constants can function as the targets of back references appearing subsequently in the serialization stream. The process by which enum constants are serialized cannot be customized; any class-specific writeObject and writeReplace methods defined by enum types are ignored during serialization. Similarly, any serialPersistentFields or serialVersionUID field declarations are also ignored--all enum types have a fixed serialVersionUID of 0L.</source>
          <target state="translated">열거 형 상수는 일반 직렬화 가능 객체 또는 외부화 가능 객체와 다르게 직렬화됩니다. 열거 형 상수의 직렬화 된 형식은 이름으로 만 구성됩니다. 상수의 필드 값은 전송되지 않습니다. 열거 형 상수를 직렬화하기 위해 ObjectOutputStream은 상수의 이름 메소드에서 리턴 한 문자열을 기록합니다. 다른 직렬화 가능 객체 또는 외부화 가능 객체와 마찬가지로 열거 형 상수는 직렬화 스트림에 이후에 나타나는 역 참조 대상으로 작동 할 수 있습니다. 열거 상수가 직렬화되는 프로세스는 사용자 정의 할 수 없습니다. 열거 형으로 정의 된 클래스 별 writeObject 및 writeReplace 메소드는 직렬화 중에 무시됩니다. 마찬가지로 serialPersistentFields 또는 serialVersionUID 필드 선언도 무시됩니다. 모든 열거 형 유형의 고정 serialVersionUID는 0L입니다.</target>
        </trans-unit>
        <trans-unit id="0a97bf41d3ca3551f160b166c5543a78ce93ca7d" translate="yes" xml:space="preserve">
          <source>Enum for &lt;code&gt;BigDecimal&lt;/code&gt; formatting.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 형식의 열거 형입니다 .</target>
        </trans-unit>
        <trans-unit id="adeaf9527b3f17d43b6900fca8bd581ea0de3bec" translate="yes" xml:space="preserve">
          <source>Enum for locale categories.</source>
          <target state="translated">로캘 범주에 대한 열거 형입니다.</target>
        </trans-unit>
        <trans-unit id="d93a2fa939b2f0bc2c517412c96b3b64ef7acaf9" translate="yes" xml:space="preserve">
          <source>Enum for locale categories. These locale categories are used to get/set the default locale for the specific functionality represented by the category.</source>
          <target state="translated">로캘 범주에 대한 열거 형입니다. 이 로케일 카테고리는 카테고리로 표시되는 특정 기능에 대한 기본 로케일을 가져 오거나 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a3056590cd33e9b10403a042c9e5fe79e3b99624" translate="yes" xml:space="preserve">
          <source>Enum maps are maintained in the</source>
          <target state="translated">열거 형 맵은</target>
        </trans-unit>
        <trans-unit id="898eb51220041dfe11f67cfaeb7436fe9dc427bf" translate="yes" xml:space="preserve">
          <source>Enum.clone()</source>
          <target state="translated">Enum.clone()</target>
        </trans-unit>
        <trans-unit id="02ffb93f6ec33d59639b2174f666789a59a38850" translate="yes" xml:space="preserve">
          <source>Enum.compareTo()</source>
          <target state="translated">Enum.compareTo()</target>
        </trans-unit>
        <trans-unit id="f7b26798f7a6f12458d4fdfc449133ce5e9a3a8b" translate="yes" xml:space="preserve">
          <source>Enum.equals()</source>
          <target state="translated">Enum.equals()</target>
        </trans-unit>
        <trans-unit id="ed7ed0055c8ce492f47f81c03f07008d59200d32" translate="yes" xml:space="preserve">
          <source>Enum.finalize()</source>
          <target state="translated">Enum.finalize()</target>
        </trans-unit>
        <trans-unit id="3d6db8a30bc2d5fab60a1436e172f0ef624fa876" translate="yes" xml:space="preserve">
          <source>Enum.getDeclaringClass()</source>
          <target state="translated">Enum.getDeclaringClass()</target>
        </trans-unit>
        <trans-unit id="c73a942fc5f2c94c82cf650b23b3073fb885fcfe" translate="yes" xml:space="preserve">
          <source>Enum.hashCode()</source>
          <target state="translated">Enum.hashCode()</target>
        </trans-unit>
        <trans-unit id="494c80ea3740a2a6fc72cea63479acfbaab01900" translate="yes" xml:space="preserve">
          <source>Enum.name()</source>
          <target state="translated">Enum.name()</target>
        </trans-unit>
        <trans-unit id="39460524fb9a11caef70b1b32f8fd660bd69473e" translate="yes" xml:space="preserve">
          <source>Enum.ordinal()</source>
          <target state="translated">Enum.ordinal()</target>
        </trans-unit>
        <trans-unit id="37ad2fbcc7b50662d26750b9df4220a809323926" translate="yes" xml:space="preserve">
          <source>Enum.toString()</source>
          <target state="translated">Enum.toString()</target>
        </trans-unit>
        <trans-unit id="db2bdda23fdba822407de3bc56dffbec407dd914" translate="yes" xml:space="preserve">
          <source>Enum.valueOf()</source>
          <target state="translated">Enum.valueOf()</target>
        </trans-unit>
        <trans-unit id="fc7101dc8c5cddf5d5f553d6e2324ce1441bd5e1" translate="yes" xml:space="preserve">
          <source>EnumConstantNotPresentException</source>
          <target state="translated">EnumConstantNotPresentException</target>
        </trans-unit>
        <trans-unit id="f6789f0ad38046c21b7039b72740aabb0a582b56" translate="yes" xml:space="preserve">
          <source>EnumConstantNotPresentException.constantName()</source>
          <target state="translated">EnumConstantNotPresentException.constantName()</target>
        </trans-unit>
        <trans-unit id="19bc88df4b80ad3e863ea7a6e51487a2d251b8bc" translate="yes" xml:space="preserve">
          <source>EnumConstantNotPresentException.enumType()</source>
          <target state="translated">EnumConstantNotPresentException.enumType()</target>
        </trans-unit>
        <trans-unit id="f860e6e97b3c768ff2a919abec5fb3744c79fae9" translate="yes" xml:space="preserve">
          <source>EnumControl</source>
          <target state="translated">EnumControl</target>
        </trans-unit>
        <trans-unit id="6a59040de9e5abccfa4845e3ab190bdfb7cf882f" translate="yes" xml:space="preserve">
          <source>EnumControl.Type</source>
          <target state="translated">EnumControl.Type</target>
        </trans-unit>
        <trans-unit id="aa92799708661070a1828b7308a7958d73af1091" translate="yes" xml:space="preserve">
          <source>EnumControl.getValue()</source>
          <target state="translated">EnumControl.getValue()</target>
        </trans-unit>
        <trans-unit id="b0b489c5806966ed68ec8a2b4949c8ac36a140dc" translate="yes" xml:space="preserve">
          <source>EnumControl.getValues()</source>
          <target state="translated">EnumControl.getValues()</target>
        </trans-unit>
        <trans-unit id="f64cda3d03ab9715fa1b6aaadcd14016780b07df" translate="yes" xml:space="preserve">
          <source>EnumControl.setValue()</source>
          <target state="translated">EnumControl.setValue()</target>
        </trans-unit>
        <trans-unit id="b5bf57400bf048098df6a1319c8da27ea4a52618" translate="yes" xml:space="preserve">
          <source>EnumControl.toString()</source>
          <target state="translated">EnumControl.toString()</target>
        </trans-unit>
        <trans-unit id="365853d868349b697913b74dde6a4cc263319903" translate="yes" xml:space="preserve">
          <source>EnumMap</source>
          <target state="translated">EnumMap</target>
        </trans-unit>
        <trans-unit id="14604f35b10c35146ea89f600f424537eb990157" translate="yes" xml:space="preserve">
          <source>EnumMap.clear()</source>
          <target state="translated">EnumMap.clear()</target>
        </trans-unit>
        <trans-unit id="93113ee72777329c02217bc848612e1d85e4e187" translate="yes" xml:space="preserve">
          <source>EnumMap.clone()</source>
          <target state="translated">EnumMap.clone()</target>
        </trans-unit>
        <trans-unit id="fc1e95097448c88255d7daaeaa823c0bae152b40" translate="yes" xml:space="preserve">
          <source>EnumMap.containsKey()</source>
          <target state="translated">EnumMap.containsKey()</target>
        </trans-unit>
        <trans-unit id="3eb00bf80c81dcdc61a17b057db4142ae77d2a78" translate="yes" xml:space="preserve">
          <source>EnumMap.containsValue()</source>
          <target state="translated">EnumMap.containsValue()</target>
        </trans-unit>
        <trans-unit id="037b7608cdaeee014617324bfd9b6abbc3a2ddcf" translate="yes" xml:space="preserve">
          <source>EnumMap.entrySet()</source>
          <target state="translated">EnumMap.entrySet()</target>
        </trans-unit>
        <trans-unit id="3706d9713af8645458e5f39846f61520fc57f0ca" translate="yes" xml:space="preserve">
          <source>EnumMap.equals()</source>
          <target state="translated">EnumMap.equals()</target>
        </trans-unit>
        <trans-unit id="f44bcb647f9b2d564973fdec3f15879e353cb783" translate="yes" xml:space="preserve">
          <source>EnumMap.get()</source>
          <target state="translated">EnumMap.get()</target>
        </trans-unit>
        <trans-unit id="1eab45c9031b21bd922e6eff94b29e794c36cd6f" translate="yes" xml:space="preserve">
          <source>EnumMap.hashCode()</source>
          <target state="translated">EnumMap.hashCode()</target>
        </trans-unit>
        <trans-unit id="ae55e43b7237ec3bbc0e9cb978acd138c1ffba19" translate="yes" xml:space="preserve">
          <source>EnumMap.keySet()</source>
          <target state="translated">EnumMap.keySet()</target>
        </trans-unit>
        <trans-unit id="984651c1d4244b6c1608f6dc0f5e1c825479fa9d" translate="yes" xml:space="preserve">
          <source>EnumMap.put()</source>
          <target state="translated">EnumMap.put()</target>
        </trans-unit>
        <trans-unit id="548a922d249ec22a09823fe743478e2d332ceead" translate="yes" xml:space="preserve">
          <source>EnumMap.putAll()</source>
          <target state="translated">EnumMap.putAll()</target>
        </trans-unit>
        <trans-unit id="67cec942e182b0b562090a066468ecb25ebd038a" translate="yes" xml:space="preserve">
          <source>EnumMap.remove()</source>
          <target state="translated">EnumMap.remove()</target>
        </trans-unit>
        <trans-unit id="439dadc3f7e554b97559383134528fe2c4aa13ff" translate="yes" xml:space="preserve">
          <source>EnumMap.size()</source>
          <target state="translated">EnumMap.size()</target>
        </trans-unit>
        <trans-unit id="6c458b8d354254449d61e1773925553d899366bb" translate="yes" xml:space="preserve">
          <source>EnumMap.values()</source>
          <target state="translated">EnumMap.values()</target>
        </trans-unit>
        <trans-unit id="2d5145ea7ae5868e4135753f4cb9f7518a77da19" translate="yes" xml:space="preserve">
          <source>EnumSet</source>
          <target state="translated">EnumSet</target>
        </trans-unit>
        <trans-unit id="793e486172bbfce67e19c7d63c14b61a54f9c5fb" translate="yes" xml:space="preserve">
          <source>EnumSet.allOf()</source>
          <target state="translated">EnumSet.allOf()</target>
        </trans-unit>
        <trans-unit id="fe53051f53111b88a3f901e1bd2b2003c0c1e86b" translate="yes" xml:space="preserve">
          <source>EnumSet.clone()</source>
          <target state="translated">EnumSet.clone()</target>
        </trans-unit>
        <trans-unit id="bb60a0f7725437d7daf187a2637129542c1af29b" translate="yes" xml:space="preserve">
          <source>EnumSet.complementOf()</source>
          <target state="translated">EnumSet.complementOf()</target>
        </trans-unit>
        <trans-unit id="af26692d3a66470e4c60987454dfb49f95832aca" translate="yes" xml:space="preserve">
          <source>EnumSet.copyOf()</source>
          <target state="translated">EnumSet.copyOf()</target>
        </trans-unit>
        <trans-unit id="c291751c8ba954a282076adc3fef922f946b0b6d" translate="yes" xml:space="preserve">
          <source>EnumSet.noneOf()</source>
          <target state="translated">EnumSet.noneOf()</target>
        </trans-unit>
        <trans-unit id="3bb536968aeec69a34206fde75a5cd33f044daac" translate="yes" xml:space="preserve">
          <source>EnumSet.of()</source>
          <target state="translated">EnumSet.of()</target>
        </trans-unit>
        <trans-unit id="53b8f4f2a5257444cdb0ad5d21da3bfe248f489b" translate="yes" xml:space="preserve">
          <source>EnumSet.range()</source>
          <target state="translated">EnumSet.range()</target>
        </trans-unit>
        <trans-unit id="35adf8d7e8ee52c258f306f67719371a66fc7789" translate="yes" xml:space="preserve">
          <source>EnumSyntax</source>
          <target state="translated">EnumSyntax</target>
        </trans-unit>
        <trans-unit id="10a3e847b6b41df654ac5eb9aea578d0dc14c612" translate="yes" xml:space="preserve">
          <source>EnumSyntax.clone()</source>
          <target state="translated">EnumSyntax.clone()</target>
        </trans-unit>
        <trans-unit id="81f2e08297598f36618cdf3f1334cb1171427c0c" translate="yes" xml:space="preserve">
          <source>EnumSyntax.getEnumValueTable()</source>
          <target state="translated">EnumSyntax.getEnumValueTable()</target>
        </trans-unit>
        <trans-unit id="67dde4b65522328467fc3592c717c0c1194e085b" translate="yes" xml:space="preserve">
          <source>EnumSyntax.getOffset()</source>
          <target state="translated">EnumSyntax.getOffset()</target>
        </trans-unit>
        <trans-unit id="ac8d60cb3e93e3c01149cabe32c1efe7a8661838" translate="yes" xml:space="preserve">
          <source>EnumSyntax.getStringTable()</source>
          <target state="translated">EnumSyntax.getStringTable()</target>
        </trans-unit>
        <trans-unit id="e3c28937cfb35d6c50efa3427629e3ce28a5d2f1" translate="yes" xml:space="preserve">
          <source>EnumSyntax.getValue()</source>
          <target state="translated">EnumSyntax.getValue()</target>
        </trans-unit>
        <trans-unit id="9b09ac77082a7905ad4539ebb8267ee149fccc36" translate="yes" xml:space="preserve">
          <source>EnumSyntax.hashCode()</source>
          <target state="translated">EnumSyntax.hashCode()</target>
        </trans-unit>
        <trans-unit id="ee74096de4de0d220bded24faf4b52feffbb8c8b" translate="yes" xml:space="preserve">
          <source>EnumSyntax.readResolve()</source>
          <target state="translated">EnumSyntax.readResolve()</target>
        </trans-unit>
        <trans-unit id="cc56274c6aae63044d0d86d8fec3e8da040786f2" translate="yes" xml:space="preserve">
          <source>EnumSyntax.toString()</source>
          <target state="translated">EnumSyntax.toString()</target>
        </trans-unit>
        <trans-unit id="a3ab9e2fb0e9ff13e50b672af622ddd0d07bc33e" translate="yes" xml:space="preserve">
          <source>Enumerates the names bound in the named context, along with the class names of objects bound to them. See &lt;a href=&quot;context#list-javax.naming.Name-&quot;&gt;&lt;code&gt;Context.list(Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">명명 된 컨텍스트에 바인딩 된 이름과 바인딩 된 개체의 클래스 이름을 열거합니다. 자세한 내용은 &lt;a href=&quot;context#list-javax.naming.Name-&quot;&gt; &lt;code&gt;Context.list(Name)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5e5efce492bb78a7f8fee24cc10826d7c7fa1171" translate="yes" xml:space="preserve">
          <source>Enumerates the names bound in the named context, along with the class names of objects bound to them. See &lt;a href=&quot;context#list-javax.naming.Name-&quot;&gt;&lt;code&gt;list(Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">명명 된 컨텍스트에 바인딩 된 이름과 바인딩 된 개체의 클래스 이름을 열거합니다. 자세한 내용은 &lt;a href=&quot;context#list-javax.naming.Name-&quot;&gt; &lt;code&gt;list(Name)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ca66603a7d1cbab424962e35b00321b3163dd522" translate="yes" xml:space="preserve">
          <source>Enumerates the names bound in the named context, along with the class names of objects bound to them. The contents of any subcontexts are not included.</source>
          <target state="translated">명명 된 컨텍스트에 바인딩 된 이름과 바인딩 된 개체의 클래스 이름을 열거합니다. 하위 컨텍스트의 내용은 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6cb808c44ceb97ab8261104e695152c8401d4a6e" translate="yes" xml:space="preserve">
          <source>Enumerates the names bound in the named context, along with the objects bound to them. See &lt;a href=&quot;context#listBindings-javax.naming.Name-&quot;&gt;&lt;code&gt;Context.listBindings(Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">명명 된 컨텍스트에 바인딩 된 이름과 바인딩 된 개체를 열거합니다. 자세한 내용은 &lt;a href=&quot;context#listBindings-javax.naming.Name-&quot;&gt; &lt;code&gt;Context.listBindings(Name)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e3f5ab158162930091193d8ac03d6903ebd46852" translate="yes" xml:space="preserve">
          <source>Enumerates the names bound in the named context, along with the objects bound to them. See &lt;a href=&quot;context#listBindings-javax.naming.Name-&quot;&gt;&lt;code&gt;listBindings(Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">명명 된 컨텍스트에 바인딩 된 이름과 바인딩 된 개체를 열거합니다. 자세한 내용은 &lt;a href=&quot;context#listBindings-javax.naming.Name-&quot;&gt; &lt;code&gt;listBindings(Name)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1193193a641434a7d1fe7ddea472fa376b48c6b9" translate="yes" xml:space="preserve">
          <source>Enumerates the names bound in the named context, along with the objects bound to them. The contents of any subcontexts are not included.</source>
          <target state="translated">명명 된 컨텍스트에 바인딩 된 이름과 바인딩 된 개체를 열거합니다. 하위 컨텍스트의 내용은 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cbe0d2dc12d0aa622bacbe23b5516c2e7895e1d7" translate="yes" xml:space="preserve">
          <source>Enumeration</source>
          <target state="translated">Enumeration</target>
        </trans-unit>
        <trans-unit id="ae951b7a84944e8a5174851da0c405c6af1005a2" translate="yes" xml:space="preserve">
          <source>Enumeration of different ways to resolve dates and times.</source>
          <target state="translated">날짜와 시간을 해결하기위한 다양한 방법의 열거.</target>
        </trans-unit>
        <trans-unit id="6c1c97a04f5deb3f426ba8fe132a9ede6c5f0675" translate="yes" xml:space="preserve">
          <source>Enumeration of the style of a localized date, time or date-time formatter.</source>
          <target state="translated">현지화 된 날짜, 시간 또는 날짜-시간 포맷터 스타일의 열거입니다.</target>
        </trans-unit>
        <trans-unit id="aee6df6a08df848cb5205f6b94de2607a5cfe7e9" translate="yes" xml:space="preserve">
          <source>Enumeration of the style of text formatting and parsing.</source>
          <target state="translated">텍스트 서식 및 구문 분석 스타일의 열거.</target>
        </trans-unit>
        <trans-unit id="056dffba4f6d27b8551c63b9e4bb90c8bcedc17b" translate="yes" xml:space="preserve">
          <source>Enumeration of ways to handle the positive/negative sign.</source>
          <target state="translated">양수 / 음수 부호를 처리하는 방법의 열거.</target>
        </trans-unit>
        <trans-unit id="61643572030b8e324a5f1aa9ff8dc11004912f42" translate="yes" xml:space="preserve">
          <source>Enumeration.hasMoreElements()</source>
          <target state="translated">Enumeration.hasMoreElements()</target>
        </trans-unit>
        <trans-unit id="4f024abefe1010087d14d4700968788bb6172de4" translate="yes" xml:space="preserve">
          <source>Enumeration.nextElement()</source>
          <target state="translated">Enumeration.nextElement()</target>
        </trans-unit>
        <trans-unit id="bbfcd21550847f3bf0dfe2bbbfe85ea869935566" translate="yes" xml:space="preserve">
          <source>Enumerations returned via the &lt;code&gt;elements&lt;/code&gt; method are not &lt;em&gt;fail-fast&lt;/em&gt;. Modifications to a collection should not be performed while enumerating over that collection.</source>
          <target state="translated">&lt;code&gt;elements&lt;/code&gt; 메소드 를 통해 리턴 된 열거는 &lt;em&gt;실패&lt;/em&gt; 하지 &lt;em&gt;않습니다&lt;/em&gt; . 컬렉션을 열거하는 동안 컬렉션을 수정해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="dd4d5cd8cff6c7a4370a2e856860cd211cfd4470" translate="yes" xml:space="preserve">
          <source>Environment Properties</source>
          <target state="translated">환경 속성</target>
        </trans-unit>
        <trans-unit id="b6e089b5478197c226f53555b94d0db989fba681" translate="yes" xml:space="preserve">
          <source>Equality comparision between two</source>
          <target state="translated">둘 사이의 평등 비교</target>
        </trans-unit>
        <trans-unit id="aeca7db45cabe939bd9952840d1c5472076d27d6" translate="yes" xml:space="preserve">
          <source>Equality comparison between two message format objects</source>
          <target state="translated">두 메시지 형식 개체 간의 동등 비교</target>
        </trans-unit>
        <trans-unit id="25b8c6b37fb45c178c47560bc7c7db1dbfd35d07" translate="yes" xml:space="preserve">
          <source>Equality is also defined in terms of the syntax of this compound name. The default implementation of CompoundName uses the syntax properties jndi.syntax.ignorecase and jndi.syntax.trimblanks when comparing two components for equality. If case is ignored, two strings with the same sequence of characters but with different cases are considered equal. If blanks are being trimmed, leading and trailing blanks are ignored for the purpose of the comparison.</source>
          <target state="translated">평등은이 복합 이름의 구문으로 정의됩니다. CompoundName의 기본 구현은 두 구성 요소가 동일한 지 비교할 때 구문 속성 jndi.syntax.ignorecase 및 jndi.syntax.trimblanks를 사용합니다. 대소 문자를 무시하면 문자 시퀀스는 동일하지만 대소 문자가 다른 두 문자열은 동일한 것으로 간주됩니다. 공백을 다듬는 경우 비교를 위해 앞뒤 공백을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="7d54d699a7e80c66707a879c18ce6958e8fd1bb3" translate="yes" xml:space="preserve">
          <source>Equality is determined by the implementation, which may use &lt;code&gt;Object.equals()&lt;/code&gt; or schema information to determine equality.</source>
          <target state="translated">평등은 구현에 의해 결정되며, 평등을 결정하기 위해 &lt;code&gt;Object.equals()&lt;/code&gt; 또는 스키마 정보를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ccf7c487303e19620a8546ae97ac865e8378961a" translate="yes" xml:space="preserve">
          <source>Equality of two attributes is determined by the implementation class. A simple implementation can use &lt;code&gt;Object.equals()&lt;/code&gt; to determine equality of attribute values, while a more sophisticated implementation might make use of schema information to determine equality. Similarly, one implementation might provide a static storage structure which simply returns the values passed to its constructor, while another implementation might define &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;getAll()&lt;/code&gt;. to get the values dynamically from the directory.</source>
          <target state="translated">두 속성의 동일성은 구현 클래스에 의해 결정됩니다. 간단한 구현에서는 &lt;code&gt;Object.equals()&lt;/code&gt; 를 사용하여 속성 값의 동등성을 확인할 수 있지만보다 복잡한 구현에서는 스키마 정보를 사용하여 동등성을 결정할 수 있습니다. 마찬가지로 한 구현은 생성자에게 전달 된 값을 반환하는 정적 스토리지 구조를 제공하는 반면 다른 구현은 &lt;code&gt;get()&lt;/code&gt; 및 &lt;code&gt;getAll()&lt;/code&gt; 정의 할 수 있습니다 . 디렉토리에서 값을 동적으로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ccd94d5cb1db008bd5052fe72537ff0169a2f0ff" translate="yes" xml:space="preserve">
          <source>Equivalent in effect to &lt;a href=&quot;doubleaccumulator#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;doubleaccumulator#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt;. This method may apply for example during quiescent points between multithreaded computations. If there are updates concurrent with this method, the returned value is &lt;em&gt;not&lt;/em&gt; guaranteed to be the final value occurring before the reset.</source>
          <target state="translated">효력 등가 &lt;a href=&quot;doubleaccumulator#get--&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 이어 &lt;a href=&quot;doubleaccumulator#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; . 이 방법은 예를 들어 멀티 스레드 계산 사이의 정지 점 (quiescent point) 동안 적용될 수있다. 이 방법과 동시에 업데이트가 있으면 반환 된 값이 재설정 전에 발생하는 최종 값이 될 수 &lt;em&gt;없습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ff1510c6a373b3e370b689759304b89c8fa9497f" translate="yes" xml:space="preserve">
          <source>Equivalent in effect to &lt;a href=&quot;doubleadder#sum--&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;doubleadder#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt;. This method may apply for example during quiescent points between multithreaded computations. If there are updates concurrent with this method, the returned value is &lt;em&gt;not&lt;/em&gt; guaranteed to be the final value occurring before the reset.</source>
          <target state="translated">효력 등가 &lt;a href=&quot;doubleadder#sum--&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt; 다음 &lt;a href=&quot;doubleadder#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; . 이 방법은 예를 들어 멀티 스레드 계산 사이의 정지 점 (quiescent point) 동안 적용될 수있다. 이 방법과 동시에 업데이트가 있으면 반환 된 값이 재설정 전에 발생하는 최종 값이 될 수 &lt;em&gt;없습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="a5b39935aa6e67129a6dfa1d6ce9a0b6e2ff0930" translate="yes" xml:space="preserve">
          <source>Equivalent in effect to &lt;a href=&quot;longaccumulator#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;longaccumulator#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt;. This method may apply for example during quiescent points between multithreaded computations. If there are updates concurrent with this method, the returned value is &lt;em&gt;not&lt;/em&gt; guaranteed to be the final value occurring before the reset.</source>
          <target state="translated">효력 등가 &lt;a href=&quot;longaccumulator#get--&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 이어 &lt;a href=&quot;longaccumulator#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; . 이 방법은 예를 들어 멀티 스레드 계산 사이의 정지 점 (quiescent point) 동안 적용될 수있다. 이 방법과 동시에 업데이트가 있으면 반환 된 값이 재설정 전에 발생하는 최종 값이 될 수 &lt;em&gt;없습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="6cf0165e45652d161a1d209bde33a0bccffe85b9" translate="yes" xml:space="preserve">
          <source>Equivalent in effect to &lt;a href=&quot;longadder#sum--&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;longadder#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt;. This method may apply for example during quiescent points between multithreaded computations. If there are updates concurrent with this method, the returned value is &lt;em&gt;not&lt;/em&gt; guaranteed to be the final value occurring before the reset.</source>
          <target state="translated">효력 등가 &lt;a href=&quot;longadder#sum--&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt; 다음 &lt;a href=&quot;longadder#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; . 이 방법은 예를 들어 멀티 스레드 계산 사이의 정지 점 (quiescent point) 동안 적용될 수있다. 이 방법과 동시에 업데이트가 있으면 반환 된 값이 재설정 전에 발생하는 최종 값이 될 수 &lt;em&gt;없습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="e73b81998eb47052d78d64fb6233845cf0d9cbab" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;countedcompleter#tryComplete--&quot;&gt;&lt;code&gt;tryComplete()&lt;/code&gt;&lt;/a&gt; but does not invoke &lt;a href=&quot;countedcompleter#onCompletion-java.util.concurrent.CountedCompleter-&quot;&gt;&lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt;&lt;/a&gt; along the completion path: If the pending count is nonzero, decrements the count; otherwise, similarly tries to complete this task's completer, if one exists, else marks this task as complete. This method may be useful in cases where &lt;code&gt;onCompletion&lt;/code&gt; should not, or need not, be invoked for each completer in a computation.</source>
          <target state="translated">&lt;a href=&quot;countedcompleter#tryComplete--&quot;&gt; &lt;code&gt;tryComplete()&lt;/code&gt; &lt;/a&gt; 동일 하지만 완료 경로를 따라 &lt;a href=&quot;countedcompleter#onCompletion-java.util.concurrent.CountedCompleter-&quot;&gt; &lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt; &lt;/a&gt; 을 호출하지 않습니다 . 보류 카운트가 0이 아닌 경우 카운트를 감소시킵니다. 그렇지 않으면이 작업의 완료자를 완료하려고 시도합니다 (있는 경우). 그렇지 않으면이 작업을 완료된 것으로 표시합니다. 이 방법은 계산에서 각 완료에 대해 &lt;code&gt;onCompletion&lt;/code&gt; 을 호출하지 않아야하거나 호출 할 필요가없는 경우에 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="faa3e74bf12e995463c7cd08a4c621b0234e98b5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;doubleaccumulator#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;doubleaccumulator#get--&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 같습니다 .</target>
        </trans-unit>
        <trans-unit id="add23d23d7f81d5def0877d6b7e94c150f597d15" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;doubleadder#sum--&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;doubleadder#sum--&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt; 같습니다 .</target>
        </trans-unit>
        <trans-unit id="858ae4876e639e507427b83b656b04231e81a7e0" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;longaccumulator#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;longaccumulator#get--&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 같습니다 .</target>
        </trans-unit>
        <trans-unit id="80feafeb128b73b3f7a57e9786aa4de6c7268ce6" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;longadder#sum--&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;longadder#sum--&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt; 같습니다 .</target>
        </trans-unit>
        <trans-unit id="84c02a2597194b44dbb5bba649372eddd8c40fd5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;phaser#Phaser-java.util.concurrent.Phaser-int-&quot;&gt;&lt;code&gt;Phaser(parent, 0)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;phaser#Phaser-java.util.concurrent.Phaser-int-&quot;&gt; &lt;code&gt;Phaser(parent, 0)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="13b2d93e2dbd00d3d248db5b27212583d68f6599" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;string#valueOf-char:A-&quot;&gt;&lt;code&gt;valueOf(char[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;string#valueOf-char:A-&quot;&gt; &lt;code&gt;valueOf(char[])&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="3adc91ab1f9ae882af053bf7f20d9fb3dda9dd63" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;string#valueOf-char:A-int-int-&quot;&gt;&lt;code&gt;valueOf(char[], int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상당 &lt;a href=&quot;string#valueOf-char:A-int-int-&quot;&gt; &lt;code&gt;valueOf(char[], int, int)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4045fd33f0023dc27266cfcdda437df3cd27cf08" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;DAYS.convert(duration, this)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상당 &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;DAYS.convert(duration, this)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2ec11ea2617c31da6f09b6b0125b87332b0f4b23" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;HOURS.convert(duration, this)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상당 &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;HOURS.convert(duration, this)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fea0ec38eef1d145fecbee5e98993234a572aa7a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;MICROSECONDS.convert(duration, this)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상당 &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;MICROSECONDS.convert(duration, this)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="24fff0cd66d5743b7437de9d0b4e3f35063c054b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;MILLISECONDS.convert(duration, this)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상당 &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;MILLISECONDS.convert(duration, this)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8041aac11c0e26269f3e934d5aaeccb663134757" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;MINUTES.convert(duration, this)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상당 &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;MINUTES.convert(duration, this)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="126e7ff200eb609b3b991d0c5c7b90e6739cab17" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;NANOSECONDS.convert(duration, this)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상당 &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;NANOSECONDS.convert(duration, this)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b164bec36f9d638c4b45d9cd481ef39ab1738653" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;SECONDS.convert(duration, this)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상당 &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;SECONDS.convert(duration, this)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5069d41763b07c28bc9d108a6cd13326ecc03319" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;add(-1)&lt;/code&gt;.</source>
          <target state="translated">등가 &lt;code&gt;add(-1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d6f58365febe1168cd965b6c4c10094fcd399e3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;add(1)&lt;/code&gt;.</source>
          <target state="translated">등가 &lt;code&gt;add(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ccb39ddde8d6fad484020ea4df8b2c19df500d3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;getAttribute(localName)&lt;/code&gt;.</source>
          <target state="translated">당량 &lt;code&gt;getAttribute(localName)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2904677b6aa3886a0ae9c8d24a19be13eed3d28e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;getAttributeNode(localName)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getAttributeNode(localName)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="8a2092119b108f30912f430b61fe7c6f8104a682" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;getElementsByTagName(localName)&lt;/code&gt;.</source>
          <target state="translated">당량 &lt;code&gt;getElementsByTagName(localName)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e314ed6dc80c587aaa4b28614ebb7b026ac2ce8" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;getNodeName&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getNodeName&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="c1736b40b89cf34ee8fd28e16eb91ad067fcad18" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;getRoot().quietlyComplete()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getRoot().quietlyComplete()&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="e3a9bf7950f33855d3552d3ea73bab668268484a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;hasAttribute(localName)&lt;/code&gt;.</source>
          <target state="translated">당량 &lt;code&gt;hasAttribute(localName)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46ca7613d7ef28137ebba3b3a43020cd4ab64c77" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;headMap(toKey, false)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;headMap(toKey, false)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="a7fcbd000d72261bfaaba7b84cf974feda3d4b10" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;headSet(toElement, false)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;headSet(toElement, false)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f863a0a097041656e97bc2aaf021641389b7a6fc" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;readUnsignedShort&lt;/code&gt;, except that the result is returned using the &lt;code&gt;char&lt;/code&gt; datatype.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 데이터 유형을 사용하여 결과가 리턴된다는 점을 제외하고 &lt;code&gt;readUnsignedShort&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="7e2e99418e5c5b070f5ba746a318c10e4680ba7c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;removeAttribute(localName)&lt;/code&gt;.</source>
          <target state="translated">당량 &lt;code&gt;removeAttribute(localName)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7795b63785992f3120b29bb425fc757baea8424f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;setAttribute(qualifiedName, value)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setAttribute(qualifiedName, value)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="6c396b3e8182702d2f285e531ed87d08242e43f2" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;setAttributeNode(newAttr)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setAttributeNode(newAttr)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="3ca619c14652c990608831db921a58edecbdeeb8" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;subMap(fromKey, true, toKey, false)&lt;/code&gt;.</source>
          <target state="translated">상당 &lt;code&gt;subMap(fromKey, true, toKey, false)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93da31976925f5d5dbf6882be9f92d392322b70b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;subSet(fromElement, true, toElement, false)&lt;/code&gt;.</source>
          <target state="translated">상당 &lt;code&gt;subSet(fromElement, true, toElement, false)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1fb9b96ed88c24686aed5b60e72cb0302d5c43e8" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;tailMap(fromKey, true)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tailMap(fromKey, true)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="abdf9771a9123e8c6073343ee04191d398adb648" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;tailSet(fromElement, true)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tailSet(fromElement, true)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="533a4e7c651b71abd9f66f66ebc7adfc5fdbd3c2" translate="yes" xml:space="preserve">
          <source>Equivalent to java.lang.Character.isLowerCase()</source>
          <target state="translated">java.lang.Character.isLowerCase ()와 동일</target>
        </trans-unit>
        <trans-unit id="e7eeff4a06544df6f6fc15d0237a36535f2b0ed3" translate="yes" xml:space="preserve">
          <source>Equivalent to java.lang.Character.isMirrored()</source>
          <target state="translated">java.lang.Character.isMirrored ()와 동일</target>
        </trans-unit>
        <trans-unit id="71582737ec305ef924a4586adfbd5dfa78ccf5eb" translate="yes" xml:space="preserve">
          <source>Equivalent to java.lang.Character.isUpperCase()</source>
          <target state="translated">java.lang.Character.isUpperCase ()와 동일</target>
        </trans-unit>
        <trans-unit id="825f3c379d3d25c717365560cdc309a155ba9809" translate="yes" xml:space="preserve">
          <source>Equivalent to java.lang.Character.isWhitespace()</source>
          <target state="translated">java.lang.Character.isWhitespace ()와 동일</target>
        </trans-unit>
        <trans-unit id="f37a89cbd1a73777b5e65ae13dd77ca3e52051eb" translate="yes" xml:space="preserve">
          <source>Era</source>
          <target state="translated">Era</target>
        </trans-unit>
        <trans-unit id="367c0cc8fb4049117010f697468c0521049c94ab" translate="yes" xml:space="preserve">
          <source>Era designator</source>
          <target state="translated">시대 지정자</target>
        </trans-unit>
        <trans-unit id="790d21ed50ff08ede3d548f932d8190e0a1fa172" translate="yes" xml:space="preserve">
          <source>Era.adjustInto()</source>
          <target state="translated">Era.adjustInto()</target>
        </trans-unit>
        <trans-unit id="8caabc4da10fd65eebefc482036736aa2d48d4c8" translate="yes" xml:space="preserve">
          <source>Era.get()</source>
          <target state="translated">Era.get()</target>
        </trans-unit>
        <trans-unit id="d4a54fbde3904644b6f1c7f9dd9f9f387c343673" translate="yes" xml:space="preserve">
          <source>Era.getDisplayName()</source>
          <target state="translated">Era.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="8fa3cfcb1250430f747263b60d3c7cf7b6164db0" translate="yes" xml:space="preserve">
          <source>Era.getLong()</source>
          <target state="translated">Era.getLong()</target>
        </trans-unit>
        <trans-unit id="10136975b7ad712f7ab20243d228fc1cd2486a96" translate="yes" xml:space="preserve">
          <source>Era.getValue()</source>
          <target state="translated">Era.getValue()</target>
        </trans-unit>
        <trans-unit id="760e997bd9621e2a16d089c5c19a9f483d950361" translate="yes" xml:space="preserve">
          <source>Era.isSupported()</source>
          <target state="translated">Era.isSupported()</target>
        </trans-unit>
        <trans-unit id="7069ffc6e5cf33b1da5284da6bba7c47bf3b8360" translate="yes" xml:space="preserve">
          <source>Era.query()</source>
          <target state="translated">Era.query()</target>
        </trans-unit>
        <trans-unit id="257430119ac1a39fe585c56d0cea10d69cf328c9" translate="yes" xml:space="preserve">
          <source>Era.range()</source>
          <target state="translated">Era.range()</target>
        </trans-unit>
        <trans-unit id="90883981ab9bc161bd3e2362ca11d5a0c494ed0f" translate="yes" xml:space="preserve">
          <source>Erases all reference types to &lt;code&gt;Object&lt;/code&gt;. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. All primitive types (including &lt;code&gt;void&lt;/code&gt;) will remain unchanged.</source>
          <target state="translated">모든 참조 유형을 &lt;code&gt;Object&lt;/code&gt; 로 지 웁니다 . &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 의&lt;/a&gt; 간이 메소드입니다 . 모든 기본 유형 ( &lt;code&gt;void&lt;/code&gt; 포함) )은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="0d4cbd287deb687f85a7783c83f5d735e088ab93" translate="yes" xml:space="preserve">
          <source>Error Summary</source>
          <target state="translated">오류 요약</target>
        </trans-unit>
        <trans-unit id="93d7060cbfdc591a151db80cdf2519fe1a5363b9" translate="yes" xml:space="preserve">
          <source>Error message.</source>
          <target state="translated">에러 메시지.</target>
        </trans-unit>
        <trans-unit id="21258be244c4a9490e85106968fca8a29e272474" translate="yes" xml:space="preserve">
          <source>Error thrown when something goes wrong while loading a service provider.</source>
          <target state="translated">서비스 제공 업체를로드하는 동안 문제가 발생하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7bc1848289208cf2802e21d4636f0b5c68a9338e" translate="yes" xml:space="preserve">
          <source>Error thrown when the &lt;a href=&quot;charsetdecoder#decodeLoop-java.nio.ByteBuffer-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;decodeLoop&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;charsetdecoder&quot;&gt;&lt;code&gt;CharsetDecoder&lt;/code&gt;&lt;/a&gt;, or the &lt;a href=&quot;charsetencoder#encodeLoop-java.nio.CharBuffer-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;encodeLoop&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;charsetencoder&quot;&gt;&lt;code&gt;CharsetEncoder&lt;/code&gt;&lt;/a&gt;, throws an unexpected exception.</source>
          <target state="translated">때 오류가 발생 &lt;a href=&quot;charsetdecoder#decodeLoop-java.nio.ByteBuffer-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;decodeLoop&lt;/code&gt; 의&lt;/a&gt; 의 방법 &lt;a href=&quot;charsetdecoder&quot;&gt; &lt;code&gt;CharsetDecoder&lt;/code&gt; &lt;/a&gt; , 또는 &lt;a href=&quot;charsetencoder#encodeLoop-java.nio.CharBuffer-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;encodeLoop&lt;/code&gt; 의&lt;/a&gt; 방법 &lt;a href=&quot;charsetencoder&quot;&gt; &lt;code&gt;CharsetEncoder&lt;/code&gt; 가&lt;/a&gt; 예기치 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="06c8e44d841415a2367cf60167426b1ca96d965e" translate="yes" xml:space="preserve">
          <source>ErrorManager</source>
          <target state="translated">ErrorManager</target>
        </trans-unit>
        <trans-unit id="7cec3574e2df8938a10016fee6e691b39de97411" translate="yes" xml:space="preserve">
          <source>ErrorManager objects can be attached to Handlers to process any error that occurs on a Handler during Logging.</source>
          <target state="translated">ErrorManager 객체를 처리기에 연결하여 로깅 중에 처리기에서 발생하는 모든 오류를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="9f0bd40c3fed3154da24d35faffe6fc3dc7138ac" translate="yes" xml:space="preserve">
          <source>ErrorManager.error()</source>
          <target state="translated">ErrorManager.error()</target>
        </trans-unit>
        <trans-unit id="67622c7b3c1ce649eefea0533505e53523494567" translate="yes" xml:space="preserve">
          <source>ErrorType</source>
          <target state="translated">ErrorType</target>
        </trans-unit>
        <trans-unit id="ce2312203f3df155d5ffbc2f59c849da7ac6dd02" translate="yes" xml:space="preserve">
          <source>Errors are returned using the error index field of the &lt;code&gt;ParsePosition&lt;/code&gt; instead of &lt;code&gt;DateTimeParseException&lt;/code&gt;. The returned error index will be set to an index indicative of the error. Callers must check for errors before using the result.</source>
          <target state="translated">&lt;code&gt;DateTimeParseException&lt;/code&gt; 대신 &lt;code&gt;ParsePosition&lt;/code&gt; 의 오류 색인 필드를 사용하여 오류가 리턴됩니다 . 반환 된 에러 인덱스는 에러를 나타내는 인덱스로 설정됩니다. 호출자는 결과를 사용하기 전에 오류를 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="10cf6ba262b79870a843f47187721b822ac937c8" translate="yes" xml:space="preserve">
          <source>Escaped octets, quotation, encoding, and decoding</source>
          <target state="translated">이스케이프 된 옥텟, 인용, 인코딩 및 디코딩</target>
        </trans-unit>
        <trans-unit id="bb86698a3577e04fca77e536990a93a9e3551ab7" translate="yes" xml:space="preserve">
          <source>Escaped octets, that is, triplets consisting of the percent character (&lt;code&gt;'%'&lt;/code&gt;) followed by two hexadecimal digits (&lt;code&gt;'0'&lt;/code&gt;-&lt;code&gt;'9'&lt;/code&gt;, &lt;code&gt;'A'&lt;/code&gt;-&lt;code&gt;'F'&lt;/code&gt;, and &lt;code&gt;'a'&lt;/code&gt;-&lt;code&gt;'f'&lt;/code&gt;)</source>
          <target state="translated">이스케이프 옥텟, 퍼센트 문자 (이루어진 트리플렛 &lt;code&gt;'%'&lt;/code&gt; 개의 16 진수 숫자 뒤에) ( &lt;code&gt;'0'&lt;/code&gt; - &lt;code&gt;'9'&lt;/code&gt; , &lt;code&gt;'A'&lt;/code&gt; - &lt;code&gt;'F'&lt;/code&gt; 및 &lt;code&gt;'a'&lt;/code&gt; - &lt;code&gt;'f'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e0d374b4e4bfb724b81dedf8ad215dd39048cdef" translate="yes" xml:space="preserve">
          <source>Escaped string value.</source>
          <target state="translated">이스케이프 된 문자열 값</target>
        </trans-unit>
        <trans-unit id="fe61b31124cc2b7e3b5053b0f43c84ca4c458c3c" translate="yes" xml:space="preserve">
          <source>Escapes are not necessary for single and double quotes; however, by the rule above, single and double quote characters preceded by a backslash still yield single and double quote characters, respectively.</source>
          <target state="translated">작은 따옴표와 큰 따옴표에는 이스케이프가 필요하지 않습니다. 그러나 위의 규칙에 따라 작은 따옴표와 큰 따옴표 문자 앞에 백 슬래시가 있으면 작은 따옴표와 큰 따옴표 문자가 각각 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="c46903014b2ec2afcf53bcd7ad90b651a991435c" translate="yes" xml:space="preserve">
          <source>Establishes the connection to the connector server.</source>
          <target state="translated">커넥터 서버에 연결합니다.</target>
        </trans-unit>
        <trans-unit id="f105ba40adf1c2ecc34534aa80fd189d54dbce7e" translate="yes" xml:space="preserve">
          <source>Establishes the connection to the connector server. This method is equivalent to &lt;a href=&quot;../jmxconnector#connect-java.util.Map-&quot;&gt;&lt;code&gt;connect(null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">커넥터 서버에 연결합니다. 이 메소드는 &lt;a href=&quot;../jmxconnector#connect-java.util.Map-&quot;&gt; &lt;code&gt;connect(null)&lt;/code&gt; &lt;/a&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="222aa52c455981e66bb0211eb1bfd036ee2c2439" translate="yes" xml:space="preserve">
          <source>Establishes the connection to the connector server. This method is equivalent to &lt;a href=&quot;jmxconnector#connect-java.util.Map-&quot;&gt;&lt;code&gt;connect(null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">커넥터 서버에 연결합니다. 이 메소드는 &lt;a href=&quot;jmxconnector#connect-java.util.Map-&quot;&gt; &lt;code&gt;connect(null)&lt;/code&gt; &lt;/a&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="652a11659ae516eb03346d35d2287be049dc6575" translate="yes" xml:space="preserve">
          <source>Evaluates the challenge data and generates a response. If a challenge is received from the server during the authentication process, this method is called to prepare an appropriate next response to submit to the server.</source>
          <target state="translated">챌린지 데이터를 평가하고 응답을 생성합니다. 인증 프로세스 중에 서버로부터 챌린지가 수신되면 서버에 제출할 적절한 다음 응답을 준비하기 위해이 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b37ee38fb5ab746c46bd38610fe9393b341807c9" translate="yes" xml:space="preserve">
          <source>Evaluates the global policy for the permissions granted to the ProtectionDomain and tests whether the permission is granted.</source>
          <target state="translated">ProtectionDomain에 부여 된 권한에 대한 글로벌 정책을 평가하고 권한이 부여되었는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="04de03b35954700fc0981560154c68b2c0abb820" translate="yes" xml:space="preserve">
          <source>Evaluates the response data and generates a challenge. If a response is received from the client during the authentication process, this method is called to prepare an appropriate next challenge to submit to the client. The challenge is null if the authentication has succeeded and no more challenge data is to be sent to the client. It is non-null if the authentication must be continued by sending a challenge to the client, or if the authentication has succeeded but challenge data needs to be processed by the client. &lt;code&gt;isComplete()&lt;/code&gt; should be called after each call to &lt;code&gt;evaluateResponse()&lt;/code&gt;,to determine if any further response is needed from the client.</source>
          <target state="translated">응답 데이터를 평가하고 챌린지를 생성합니다. 인증 프로세스 중에 클라이언트로부터 응답이 수신되면이 메소드는 클라이언트에 제출할 적절한 다음 시도를 준비하기 위해 호출됩니다. 인증이 성공하고 더 이상 챌린지 데이터가 클라이언트로 전송되지 않으면 챌린지는 null입니다. 클라이언트에 챌린지를 전송하여 인증을 계속해야하거나 인증에 성공했지만 클라이언트가 챌린지 데이터를 처리해야하는 경우 널이 아닙니다. 클라이언트에서 추가 응답이 필요한지 여부를 판별 하기 위해 &lt;code&gt;evaluateResponse()&lt;/code&gt; 응답 ()을 호출 할 때마다 &lt;code&gt;isComplete()&lt;/code&gt; 을 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="afeeee2df7da4a330707fb4210340e2422d3bcbf" translate="yes" xml:space="preserve">
          <source>Evaluates this predicate on the given argument.</source>
          <target state="translated">주어진 인수에서이 술어를 평가합니다.</target>
        </trans-unit>
        <trans-unit id="6e6dbad0f57e005ce2bfc411d02d5d9ef7dd609e" translate="yes" xml:space="preserve">
          <source>Evaluates this predicate on the given arguments.</source>
          <target state="translated">주어진 인수에 대해이 술어를 평가합니다.</target>
        </trans-unit>
        <trans-unit id="024230131b4730e1adcb311d13482224f5061f26" translate="yes" xml:space="preserve">
          <source>Evaluating this expression for a given &lt;code&gt;objectName&lt;/code&gt; includes performing &lt;a href=&quot;mbeanserver#getAttribute-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanServer.getAttribute(objectName,
 name)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;objectName&lt;/code&gt; 에 대해이 표현식을 평가하는 것은 &lt;a href=&quot;mbeanserver#getAttribute-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanServer.getAttribute(objectName, name)&lt;/code&gt; &lt;/a&gt; 수행을 포함 합니다.</target>
        </trans-unit>
        <trans-unit id="faa94fd2b8f678f7bfb2664342f68b83a026ecc5" translate="yes" xml:space="preserve">
          <source>Evaluating this expression for a given &lt;code&gt;objectName&lt;/code&gt; includes performing &lt;a href=&quot;mbeanserver#getObjectInstance-javax.management.ObjectName-&quot;&gt;&lt;code&gt;MBeanServer.getObjectInstance(objectName)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mbeanserver#getAttribute-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanServer.getAttribute(objectName,
 name)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;objectName&lt;/code&gt; 에 대한이 표현식 평가 에는 &lt;a href=&quot;mbeanserver#getObjectInstance-javax.management.ObjectName-&quot;&gt; &lt;code&gt;MBeanServer.getObjectInstance(objectName)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;mbeanserver#getAttribute-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanServer.getAttribute(objectName, name)&lt;/code&gt; &lt;/a&gt; 수행이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="eb9bcf2c4b60345e02423ea67a14379252e9a5e0" translate="yes" xml:space="preserve">
          <source>Evaluating this expression for a given &lt;code&gt;objectName&lt;/code&gt; includes performing &lt;a href=&quot;mbeanserver#getObjectInstance-javax.management.ObjectName-&quot;&gt;&lt;code&gt;MBeanServer.getObjectInstance(objectName)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;objectName&lt;/code&gt; 에 대해이 표현식을 평가하는 것은 &lt;a href=&quot;mbeanserver#getObjectInstance-javax.management.ObjectName-&quot;&gt; &lt;code&gt;MBeanServer.getObjectInstance(objectName)&lt;/code&gt; &lt;/a&gt; 수행을 포함 합니다.</target>
        </trans-unit>
        <trans-unit id="3f55d1698c7bd31b1cbf2ee8a491586eaae3b7e5" translate="yes" xml:space="preserve">
          <source>Evaluating this expression for a given &lt;code&gt;objectName&lt;/code&gt; includes performing &lt;a href=&quot;mbeanserver#isInstanceOf-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanServer.isInstanceOf(objectName,
 ((StringValueExp)classNameValue.apply(objectName)).getValue()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주어진이 표현식 평가 &lt;code&gt;objectName&lt;/code&gt; 수행하는 단계를 포함 &lt;a href=&quot;mbeanserver#isInstanceOf-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanServer.isInstanceOf(objectName, ((StringValueExp)classNameValue.apply(objectName)).getValue()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1bd5a4f06a6cc671f5ba50c7ef0745b79ab4b3e6" translate="yes" xml:space="preserve">
          <source>Even although the new logger is anonymous, it is configured to have the root logger (&quot;&quot;) as its parent. This means that by default it inherits its effective level and handlers from the root logger. Changing its parent via the &lt;a href=&quot;logger#setParent-java.util.logging.Logger-&quot;&gt;&lt;code&gt;setParent&lt;/code&gt;&lt;/a&gt; method will still require the security permission specified by that method.</source>
          <target state="translated">새 로거는 익명이지만 루트 로거 ( &quot;&quot;)를 상위로 갖도록 구성됩니다. 이는 기본적으로 루트 로거에서 유효 레벨 및 핸들러를 상속 함을 의미합니다. &lt;a href=&quot;logger#setParent-java.util.logging.Logger-&quot;&gt; &lt;code&gt;setParent&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 상위를 변경하면 해당 메소드에 지정된 보안 권한이 여전히 필요합니다.</target>
        </trans-unit>
        <trans-unit id="dcef3fddbb0971a27f00532d74ce4a7d7eb153fb" translate="yes" xml:space="preserve">
          <source>Even an inexact estimate is often useful and inexpensive to compute. For example, a sub-spliterator of an approximately balanced binary tree may return a value that estimates the number of elements to be half of that of its parent; if the root Spliterator does not maintain an accurate count, it could estimate size to be the power of two corresponding to its maximum depth.</source>
          <target state="translated">부정확 한 추정치조차도 종종 유용하고 계산하기에 저렴합니다. 예를 들어, 대략 균형 잡힌 이진 트리의 하위 스퍼터 레이터는 요소의 수를 부모의 절반의 수로 추정하는 값을 반환 할 수 있습니다. 루트 스플리터가 정확한 카운트를 유지하지 않으면 크기는 최대 깊이에 해당하는 2의 거듭 제곱으로 추정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1c80d6f5f02f81df3e7502bcb7cd38c2f84fa92" translate="yes" xml:space="preserve">
          <source>Even if a suite has been enabled, it might never be used. (For example, the peer does not support it, the requisite certificates (and private keys) for the suite are not available, or an anonymous suite is enabled but authentication is required.</source>
          <target state="translated">스위트가 사용 가능하더라도 사용되지 않을 수 있습니다. 예를 들어 피어가이를 지원하지 않거나 제품군에 필요한 인증서 (및 개인 키)를 사용할 수 없거나 익명 제품군이 활성화되어 있지만 인증이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="84acc09c5371744ac3d8a2e0f8e9e8214ddb27d5" translate="yes" xml:space="preserve">
          <source>Even if a suite has been enabled, it might never be used. (For example, the peer does not support it, the requisite certificates/private keys for the suite are not available, or an anonymous suite is enabled but authentication is required.)</source>
          <target state="translated">스위트가 사용 가능하더라도 사용되지 않을 수 있습니다. 예를 들어 피어가이를 지원하지 않거나 제품군에 필요한 인증서 / 개인 키를 사용할 수 없거나 익명 제품군이 활성화되어 있지만 인증이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8f5fada2afa4a19571abd6fbb236b9be3827910b" translate="yes" xml:space="preserve">
          <source>Even though the Java Print Service API includes a large number of different attribute categories, there are only a few different types of attribute values. Most attributes can be represented by a small number of data types, such as: integer values, integer ranges, text, or an enumeration of integer values. The type of the attribute value that a category accepts is called the attribute's abstract syntax. To provide consistency and reduce code duplication, the Java Print Service API defines abstract syntax classes to represent each abstract syntax, and these classes are used as the parent of standard attributes whenever possible. The abstract syntax classes are:</source>
          <target state="translated">Java Print Service API에는 많은 수의 속성 범주가 포함되어 있지만 몇 가지 유형의 속성 값만 있습니다. 대부분의 속성은 정수 값, 정수 범위, 텍스트 또는 정수 값 열거와 같은 소수의 데이터 유형으로 표시 될 수 있습니다. 카테고리가 허용하는 속성 값의 유형을 속성의 추상 구문이라고합니다. 일관성을 제공하고 코드 중복을 줄이기 위해 Java Print Service API는 추상 구문 클래스를 정의하여 각 추상 구문을 나타내며, 이러한 클래스는 가능할 때마다 표준 속성의 부모로 사용됩니다. 추상 구문 클래스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="96d3da603446ef160f908e8c76fe0fac80094ba1" translate="yes" xml:space="preserve">
          <source>Even though this annotation is not marked Inherited, deployment tools are required to examine all superclasses of any component class to discover all uses of this annotation in all superclasses. All such annotation instances specify resources that are needed by the application component. Note that this annotation may appear on private fields and methods of superclasses; the container is required to perform injection in these cases as well.</source>
          <target state="translated">이 주석이 상속 됨으로 표시되지 않더라도 배치 도구는 모든 수퍼 클래스에서이 주석의 모든 사용을 발견하기 위해 컴포넌트 클래스의 모든 수퍼 클래스를 검사해야합니다. 이러한 모든 주석 인스턴스는 응용 프로그램 구성 요소에 필요한 리소스를 지정합니다. 이 주석은 비공개 필드와 슈퍼 클래스의 메소드에 나타날 수 있습니다. 이 경우에도 용기는 주입을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="2827b386608ffa0f39038aba834a569ff837bd68" translate="yes" xml:space="preserve">
          <source>Even though this class is based on an internal FIFO queue, it does not automatically enforce FIFO acquisition policies. The core of exclusive synchronization takes the form:</source>
          <target state="translated">이 클래스는 내부 FIFO 대기열을 기반으로하지만 FIFO 획득 정책을 자동으로 적용하지는 않습니다. 독점 동기화의 핵심은 다음과 같은 형식입니다.</target>
        </trans-unit>
        <trans-unit id="f447ee762112fd3742d7f21f4b5e52b79243d367" translate="yes" xml:space="preserve">
          <source>Even when this semaphore has been set to use a fair ordering policy, a call to &lt;code&gt;tryAcquire()&lt;/code&gt;&lt;em&gt;will&lt;/em&gt; immediately acquire a permit if one is available, whether or not other threads are currently waiting. This &quot;barging&quot; behavior can be useful in certain circumstances, even though it breaks fairness. If you want to honor the fairness setting, then use &lt;a href=&quot;semaphore#tryAcquire-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;tryAcquire(0, TimeUnit.SECONDS) &lt;/code&gt;&lt;/a&gt; which is almost equivalent (it also detects interruption).</source>
          <target state="translated">이 세마포어는 공정 순서 정책을 사용하도록 설정되어있는 경우에서도,에 대한 호출 &lt;code&gt;tryAcquire()&lt;/code&gt; &lt;em&gt;것&lt;/em&gt; 하나를 사용할 수있는 경우 즉시 다른 thread가 현재 대기하고 있는지 여부, 허가를 취득. 이러한 &quot;바지 다&quot;행동은 공정성을 위반하더라도 특정 상황에서 유용 할 수 있습니다. 공정성 설정을 &lt;a href=&quot;semaphore#tryAcquire-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;tryAcquire(0, TimeUnit.SECONDS) &lt;/code&gt; &lt;/a&gt; 하려면 tryAcquire (0, TimeUnit.SECONDS)를 사용하십시오. 이는 거의 동일합니다 (중단도 감지 함).</target>
        </trans-unit>
        <trans-unit id="a6d8c691f9eb0d3e37c5c18ff0fc7472f7032b8a" translate="yes" xml:space="preserve">
          <source>Even when this semaphore has been set to use a fair ordering policy, a call to &lt;code&gt;tryAcquire&lt;/code&gt;&lt;em&gt;will&lt;/em&gt; immediately acquire a permit if one is available, whether or not other threads are currently waiting. This &quot;barging&quot; behavior can be useful in certain circumstances, even though it breaks fairness. If you want to honor the fairness setting, then use &lt;a href=&quot;semaphore#tryAcquire-int-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;tryAcquire(permits, 0, TimeUnit.SECONDS) &lt;/code&gt;&lt;/a&gt; which is almost equivalent (it also detects interruption).</source>
          <target state="translated">이 세마포어는 공정 순서 정책을 사용하도록 설정되어있는 경우에서도,에 대한 호출 &lt;code&gt;tryAcquire&lt;/code&gt; &lt;em&gt;것입니다&lt;/em&gt; 가능한 경우 즉시 다른 thread가 현재 대기하고 있는지 여부, 허가를 취득. 이러한 &quot;바지 다&quot;행동은 공정성을 위반하더라도 특정 상황에서 유용 할 수 있습니다. 공정성 설정을 &lt;a href=&quot;semaphore#tryAcquire-int-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;tryAcquire(permits, 0, TimeUnit.SECONDS) &lt;/code&gt; &lt;/a&gt; 하려면 tryAcquire (permits, 0, TimeUnit.SECONDS)를 사용하십시오. 이는 거의 동일합니다 (중단 감지).</target>
        </trans-unit>
        <trans-unit id="888cae2cccab5f80438e90452f8700ddffa054d7" translate="yes" xml:space="preserve">
          <source>Event Source</source>
          <target state="translated">이벤트 소스</target>
        </trans-unit>
        <trans-unit id="c675f0a292b3fcdd856e6cb772b49f7a9c03e749" translate="yes" xml:space="preserve">
          <source>EventContext</source>
          <target state="translated">EventContext</target>
        </trans-unit>
        <trans-unit id="43d079ed40469dcb0c3a19b9e85102ea3cee88fb" translate="yes" xml:space="preserve">
          <source>EventContext.addNamingListener()</source>
          <target state="translated">EventContext.addNamingListener()</target>
        </trans-unit>
        <trans-unit id="2df782786a30162e69402c7f0cb7f521b2874e40" translate="yes" xml:space="preserve">
          <source>EventContext.removeNamingListener()</source>
          <target state="translated">EventContext.removeNamingListener()</target>
        </trans-unit>
        <trans-unit id="450023bc0e255a3948f7be5be9669f337a138e1c" translate="yes" xml:space="preserve">
          <source>EventContext.targetMustExist()</source>
          <target state="translated">EventContext.targetMustExist()</target>
        </trans-unit>
        <trans-unit id="6c604c1b81bb76796d441c2be69df2c79afa13cb" translate="yes" xml:space="preserve">
          <source>EventDirContext</source>
          <target state="translated">EventDirContext</target>
        </trans-unit>
        <trans-unit id="1b05c12dac084c3787ec9d0463facc58691e0fe8" translate="yes" xml:space="preserve">
          <source>EventDirContext.addNamingListener()</source>
          <target state="translated">EventDirContext.addNamingListener()</target>
        </trans-unit>
        <trans-unit id="c5e02c488a6e5c083384d989a5166bb7dcd92940" translate="yes" xml:space="preserve">
          <source>EventHandler</source>
          <target state="translated">EventHandler</target>
        </trans-unit>
        <trans-unit id="a19e747e6ebb5c24cbad238e1a3c96fe161195b3" translate="yes" xml:space="preserve">
          <source>EventHandler.create()</source>
          <target state="translated">EventHandler.create()</target>
        </trans-unit>
        <trans-unit id="f26ecea4aaa046554064569eaf8c74185eef90e8" translate="yes" xml:space="preserve">
          <source>EventHandler.getAction()</source>
          <target state="translated">EventHandler.getAction()</target>
        </trans-unit>
        <trans-unit id="210efd542ccd8af0f85e171da747b6f3ee285cf3" translate="yes" xml:space="preserve">
          <source>EventHandler.getEventPropertyName()</source>
          <target state="translated">EventHandler.getEventPropertyName()</target>
        </trans-unit>
        <trans-unit id="69ad4fbef36aef26e10a11b3831de601743578ea" translate="yes" xml:space="preserve">
          <source>EventHandler.getListenerMethodName()</source>
          <target state="translated">EventHandler.getListenerMethodName()</target>
        </trans-unit>
        <trans-unit id="668165222528931ffff5a72bd09b48bb2b7217cc" translate="yes" xml:space="preserve">
          <source>EventHandler.getTarget()</source>
          <target state="translated">EventHandler.getTarget()</target>
        </trans-unit>
        <trans-unit id="ba596214c1a73b7b6a2bfe4391fadfabeeddb8fc" translate="yes" xml:space="preserve">
          <source>EventHandler.invoke()</source>
          <target state="translated">EventHandler.invoke()</target>
        </trans-unit>
        <trans-unit id="0df10d5eb9f31c564291131f6209eb2538b12219" translate="yes" xml:space="preserve">
          <source>EventListener</source>
          <target state="translated">EventListener</target>
        </trans-unit>
        <trans-unit id="f97ab1ba335b456b3ec3dd851322926972022258" translate="yes" xml:space="preserve">
          <source>EventListenerProxy</source>
          <target state="translated">EventListenerProxy</target>
        </trans-unit>
        <trans-unit id="1691703d6fd7310ad150669c92df3ea25a3a9610" translate="yes" xml:space="preserve">
          <source>EventListenerProxy.getListener()</source>
          <target state="translated">EventListenerProxy.getListener()</target>
        </trans-unit>
        <trans-unit id="aa2aec7851f65e693810b0308966495fb255258b" translate="yes" xml:space="preserve">
          <source>EventObject</source>
          <target state="translated">EventObject</target>
        </trans-unit>
        <trans-unit id="deaf3286b3a03aeb0117a3d93b68705cddeb233b" translate="yes" xml:space="preserve">
          <source>EventObject.getSource()</source>
          <target state="translated">EventObject.getSource()</target>
        </trans-unit>
        <trans-unit id="d616ad5dfe47ac33410ae03ad5773efacb0100c6" translate="yes" xml:space="preserve">
          <source>EventObject.toString()</source>
          <target state="translated">EventObject.toString()</target>
        </trans-unit>
        <trans-unit id="790025ff9391db27541ff3ce18a7d6a6ced96155" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor</source>
          <target state="translated">EventSetDescriptor</target>
        </trans-unit>
        <trans-unit id="e744e5e02b12b1f2bc089f37e8ee86ac72422429" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.getAddListenerMethod()</source>
          <target state="translated">EventSetDescriptor.getAddListenerMethod()</target>
        </trans-unit>
        <trans-unit id="6eb53c6a1b658897d81dd289dd2cb48aad717a9b" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.getGetListenerMethod()</source>
          <target state="translated">EventSetDescriptor.getGetListenerMethod()</target>
        </trans-unit>
        <trans-unit id="8c430181022535443e0dfcf2477c78d0d8e31d2f" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.getListenerMethodDescriptors()</source>
          <target state="translated">EventSetDescriptor.getListenerMethodDescriptors()</target>
        </trans-unit>
        <trans-unit id="8b5ee9df7e02931b8e062773cfadf9937a2ca0d0" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.getListenerMethods()</source>
          <target state="translated">EventSetDescriptor.getListenerMethods()</target>
        </trans-unit>
        <trans-unit id="0ea4eb30a91f67be395007f8bc2cee7eec0f548d" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.getListenerType()</source>
          <target state="translated">EventSetDescriptor.getListenerType()</target>
        </trans-unit>
        <trans-unit id="b1f84e9c6d2766e6c65831fb0917e84924e682c4" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.getRemoveListenerMethod()</source>
          <target state="translated">EventSetDescriptor.getRemoveListenerMethod()</target>
        </trans-unit>
        <trans-unit id="b2d2d2e3c9de4a8d9184fffb2fe004398f0580fd" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.isInDefaultEventSet()</source>
          <target state="translated">EventSetDescriptor.isInDefaultEventSet()</target>
        </trans-unit>
        <trans-unit id="0b8c46765de0f36cddfb93d2f95a5e836db4f24b" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.isUnicast()</source>
          <target state="translated">EventSetDescriptor.isUnicast()</target>
        </trans-unit>
        <trans-unit id="352200789f0c16b5a19b13f382df53d8a03c447b" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.setInDefaultEventSet()</source>
          <target state="translated">EventSetDescriptor.setInDefaultEventSet()</target>
        </trans-unit>
        <trans-unit id="9c6687fe17da1aacf0f75fde0df0e30480368671" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.setUnicast()</source>
          <target state="translated">EventSetDescriptor.setUnicast()</target>
        </trans-unit>
        <trans-unit id="0810acf6507d9fa54622c580a430c126a1631bc4" translate="yes" xml:space="preserve">
          <source>Events are only guaranteed for changes made within the same JVM as the registered listener, though some implementations may generate events for changes made outside this JVM. Events may be generated before the changes have become permanent. Events are not generated when indirect descendants of this node are added or removed; a caller desiring such events must register with each descendant.</source>
          <target state="translated">등록 된 리스너와 동일한 JVM 내에서 변경 한 경우에만 이벤트가 보장되지만 일부 구현에서는이 JVM 외부에서 작성된 변경 사항에 대한 이벤트가 생성 될 수 있습니다. 변경 사항이 영구적이되기 전에 이벤트가 생성 될 수 있습니다. 이 노드의 간접 하위 항목이 추가되거나 제거 될 때 이벤트가 생성되지 않습니다. 그러한 이벤트를 원하는 발신자는 각 자손에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="1e4b6851149e06bef6438f2fbebb119273ae53e2" translate="yes" xml:space="preserve">
          <source>Events are only guaranteed for changes made within the same JVM as the registered listener, though some implementations may generate events for changes made outside this JVM. Events may be generated before the changes have been made persistent. Events are not generated when preferences are modified in descendants of this node; a caller desiring such events must register with each descendant.</source>
          <target state="translated">등록 된 리스너와 동일한 JVM 내에서 변경 한 경우에만 이벤트가 보장되지만 일부 구현에서는이 JVM 외부에서 작성된 변경 사항에 대한 이벤트가 생성 될 수 있습니다. 변경 사항이 영구적으로 유지되기 전에 이벤트가 생성 될 수 있습니다. 이 노드의 하위 항목에서 환경 설정을 수정하면 이벤트가 생성되지 않습니다. 그러한 이벤트를 원하는 발신자는 각 자손에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="927aa52c7a5f52e819498b332f9b2d8f5b42e774" translate="yes" xml:space="preserve">
          <source>Eventually sets the element at position &lt;code&gt;i&lt;/code&gt; to the given value.</source>
          <target state="translated">결국 &lt;code&gt;i&lt;/code&gt; 위치의 요소를 주어진 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="60df4e3e445419f98ebf4c928a4f455ac8b9abb6" translate="yes" xml:space="preserve">
          <source>Eventually sets the field of the given object managed by this updater to the given updated value.</source>
          <target state="translated">결국이 업데이터가 관리하는 지정된 객체의 필드를 주어진 업데이트 된 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="51d1c6bbaf3b3494bc264df409bc7342aa7a5f95" translate="yes" xml:space="preserve">
          <source>Eventually sets to the given value.</source>
          <target state="translated">결국 주어진 값으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="eddf256ae170b3ec0ced66c66199548cef131f4b" translate="yes" xml:space="preserve">
          <source>Every &lt;a href=&quot;class&quot;&gt;&lt;code&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; object contains a &lt;a href=&quot;class#getClassLoader--&quot;&gt;&lt;code&gt;reference&lt;/code&gt;&lt;/a&gt; to the &lt;code&gt;ClassLoader&lt;/code&gt; that defined it.</source>
          <target state="translated">모든 &lt;a href=&quot;class&quot;&gt; &lt;code&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 객체는이 를 정의한 &lt;code&gt;ClassLoader&lt;/code&gt; 에 대한 &lt;a href=&quot;class#getClassLoader--&quot;&gt; &lt;code&gt;reference&lt;/code&gt; &lt;/a&gt; 를 포함 합니다.</target>
        </trans-unit>
        <trans-unit id="09eb5e6c26f299b75f428f350fc940532c3f95f3" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;Preferences&lt;/code&gt; implementation must have an associated &lt;a href=&quot;preferencesfactory&quot;&gt;&lt;code&gt;PreferencesFactory&lt;/code&gt;&lt;/a&gt; implementation. Every Java(TM) SE implementation must provide some means of specifying which &lt;code&gt;PreferencesFactory&lt;/code&gt; implementation is used to generate the root preferences nodes. This allows the administrator to replace the default preferences implementation with an alternative implementation.</source>
          <target state="translated">모든 &lt;code&gt;Preferences&lt;/code&gt; 구현에는 연관된 &lt;a href=&quot;preferencesfactory&quot;&gt; &lt;code&gt;PreferencesFactory&lt;/code&gt; &lt;/a&gt; 구현 이 있어야합니다 . 모든 Java SE 구현은 루트 환경 설정 노드를 생성하는 데 사용 되는 &lt;code&gt;PreferencesFactory&lt;/code&gt; 구현 을 지정하는 몇 가지 수단을 제공해야합니다 . 이를 통해 관리자는 기본 환경 설정 구현을 대체 구현으로 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3d3f6352b18ee194d4d9c99b6948a096074c6a9" translate="yes" xml:space="preserve">
          <source>Every JAR file produced by this engine will include the string &quot;&lt;code&gt;PACK200&lt;/code&gt;&quot; as a zip file comment. This allows a deployer to detect if a JAR archive was packed and unpacked.</source>
          <target state="translated">이 엔진으로 생성 된 모든 JAR 파일에는 문자열 &quot; &lt;code&gt;PACK200&lt;/code&gt; &quot;이 zip 파일 주석으로 포함됩니다. 이를 통해 배치자는 JAR 아카이브가 압축 및 압축 해제되었는지 감지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc680a56f57caefe58e330f9392b9f58c8c5f9e4" translate="yes" xml:space="preserve">
          <source>Every Java application has a single instance of class &lt;code&gt;Runtime&lt;/code&gt; that allows the application to interface with the environment in which the application is running.</source>
          <target state="translated">모든 Java 응용 프로그램에는 응용 프로그램이 응용 프로그램이 실행되는 환경과 인터페이스 할 수있는 &lt;code&gt;Runtime&lt;/code&gt; 클래스의 단일 인스턴스 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="fcbf9a0eef74748f85fb921358901843ab655cdb" translate="yes" xml:space="preserve">
          <source>Every Java application has a single instance of class &lt;code&gt;Runtime&lt;/code&gt; that allows the application to interface with the environment in which the application is running. The current runtime can be obtained from the &lt;code&gt;getRuntime&lt;/code&gt; method.</source>
          <target state="translated">모든 Java 응용 프로그램에는 응용 프로그램이 응용 프로그램이 실행되는 환경과 인터페이스 할 수있는 &lt;code&gt;Runtime&lt;/code&gt; 클래스의 단일 인스턴스 가 있습니다. 현재 런타임은 &lt;code&gt;getRuntime&lt;/code&gt; 메소드 에서 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7988d27561a9368878b1be7a88271ad6eef87af0" translate="yes" xml:space="preserve">
          <source>Every Java type that appears as the parameter or return type of a method in an MXBean interface must be &lt;em&gt;convertible&lt;/em&gt; using the rules below. Additionally, parameters must be &lt;em&gt;reconstructible&lt;/em&gt; as defined below.</source>
          <target state="translated">MXBean 인터페이스에서 메소드의 매개 변수 또는 리턴 유형으로 나타나는 모든 Java 유형은 아래 규칙을 사용하여 &lt;em&gt;변환 가능&lt;/em&gt; 해야합니다 . 또한 매개 변수는 아래 정의 된대로 &lt;em&gt;재구성&lt;/em&gt; 할 수 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="ca46b048e02f6238a8b951522075abad3c17bd0c" translate="yes" xml:space="preserve">
          <source>Every MBean Server has a &lt;em&gt;class loader repository&lt;/em&gt; containing all MBeans registered in that MBean Server that are of a subclass of &lt;a href=&quot;../../../java/lang/classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt;. The class loader repository is used by the forms of the &lt;code&gt;createMBean&lt;/code&gt; and &lt;code&gt;instantiate&lt;/code&gt; methods in the &lt;a href=&quot;../mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt; interface that do not have an explicit loader parameter. It is also used by the &lt;code&gt;MLet&lt;/code&gt; class when it does not find a class in its own set of URLs.</source>
          <target state="translated">모든 MBean Server에는 &lt;a href=&quot;../../../java/lang/classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; &lt;/a&gt; 의 서브 클래스 인 MBean Server에 등록 된 모든 MBean을 포함 하는 &lt;em&gt;클래스 로더 저장소&lt;/em&gt; 가 있습니다. 클래스 로더 저장소는 명시 적 로더 매개 변수가없는 &lt;a href=&quot;../mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; &lt;/a&gt; 인터페이스 의 &lt;code&gt;createMBean&lt;/code&gt; 및 &lt;code&gt;instantiate&lt;/code&gt; 메소드 양식에 의해 사용됩니다 . 자체 URL 세트에서 클래스를 찾을 수없는 경우 &lt;code&gt;MLet&lt;/code&gt; 클래스 에서도 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="4c88d3d22f032077aafa5126202687b0611a7911" translate="yes" xml:space="preserve">
          <source>Every MBean has an &lt;a href=&quot;../mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt; with information about the MBean itself, and its attributes, operations, constructors, and notifications. A Model MBean augments this &lt;code&gt;MBeanInfo&lt;/code&gt; with &lt;a href=&quot;../descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt;s that encode additional information in the form of (key,value) pairs. Usually, &lt;code&gt;Descriptor&lt;/code&gt;s are instances of &lt;a href=&quot;descriptorsupport&quot;&gt;&lt;code&gt;DescriptorSupport&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모든 MBean에는 MBean 자체 및 그 속성, 오퍼레이션, 생성자 및 알림에 대한 정보 가있는 &lt;a href=&quot;../mbeaninfo&quot;&gt; &lt;code&gt;MBeanInfo&lt;/code&gt; &lt;/a&gt; 가 있습니다. MBean 모델이 증대 &lt;code&gt;MBeanInfo&lt;/code&gt; 가진 &lt;a href=&quot;../descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt; (키, 값) 쌍 형태의 인코딩이 추가 정보. 일반적으로, &lt;code&gt;Descriptor&lt;/code&gt; 들의 인스턴스 &lt;a href=&quot;descriptorsupport&quot;&gt; &lt;code&gt;DescriptorSupport&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="07f5169c5025ea8abd062a637038287b9f85c687" translate="yes" xml:space="preserve">
          <source>Every MBean has an &lt;a href=&quot;../mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt; with information about the MBean itself, and its attributes, operations, constructors, and notifications. In an Open MBean, this &lt;code&gt;MBeanInfo&lt;/code&gt; implements the &lt;a href=&quot;openmbeaninfo&quot;&gt;&lt;code&gt;OpenMBeanInfo&lt;/code&gt;&lt;/a&gt; interface, usually by being an instance of &lt;a href=&quot;openmbeaninfosupport&quot;&gt;&lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모든 MBean에는 MBean 자체 및 그 속성, 오퍼레이션, 생성자 및 알림에 대한 정보 가있는 &lt;a href=&quot;../mbeaninfo&quot;&gt; &lt;code&gt;MBeanInfo&lt;/code&gt; &lt;/a&gt; 가 있습니다. Open MBean에서이 &lt;code&gt;MBeanInfo&lt;/code&gt; 는 일반적으로 &lt;a href=&quot;openmbeaninfosupport&quot;&gt; &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; &lt;/a&gt; 인스턴스가되어 &lt;a href=&quot;openmbeaninfo&quot;&gt; &lt;code&gt;OpenMBeanInfo&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="4a0326ab9cfa8a7cdbd3b5a42069bc41b1316437" translate="yes" xml:space="preserve">
          <source>Every MBean which is added to the MBean server becomes manageable: its attributes and operations become remotely accessible through the connectors/adaptors connected to that MBean server. A Java object cannot be registered in the MBean server unless it is a JMX compliant MBean.</source>
          <target state="translated">MBean 서버에 추가 된 모든 MBean은 관리가 가능해집니다. 해당 MBean 서버에 연결된 커넥터 / 어댑터를 통해 속성 및 조작에 원격으로 액세스 할 수 있습니다. JMX 호환 MBean이 아니면 Java 오브젝트를 MBean 서버에 등록 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f80f46aba13b693251796feff57eb4190f77f886" translate="yes" xml:space="preserve">
          <source>Every ModelMBean which is instantiated in the MBeanServer becomes manageable: its attributes and operations become remotely accessible through the connectors/adaptors connected to that MBeanServer. A Java object cannot be registered in the MBeanServer unless it is a JMX compliant MBean. By instantiating a ModelMBean, resources are guaranteed that the MBean is valid.</source>
          <target state="translated">MBeanServer에서 인스턴스화 된 모든 ModelMBean은 관리가 가능해집니다. 해당 MBeanServer에 연결된 커넥터 / 어댑터를 통해 속성 및 조작에 원격으로 액세스 할 수 있습니다. JMX 호환 MBean이 아닌 경우 MBeanServer에 Java 오브젝트를 등록 할 수 없습니다. ModelMBean을 인스턴스화함으로써 자원은 MBean이 유효 함을 보장합니다.</target>
        </trans-unit>
        <trans-unit id="d65f5f76d564b36f182f7b024f951ecd0fe8b1af" translate="yes" xml:space="preserve">
          <source>Every ModelMBean which is instantiated in the MBeanServer becomes manageable: its attributes and operations become remotely accessible through the connectors/adaptors connected to that MBeanServer. A Java object cannot be registered in the MBeanServer unless it is a JMX compliant MBean. By instantiating a ModelMBean, resources are guaranteed that the MBean is valid. MBeanException and RuntimeOperationsException must be thrown on every public method. This allows for wrapping exceptions from distributed communications (RMI, EJB, etc.)</source>
          <target state="translated">MBeanServer에서 인스턴스화 된 모든 ModelMBean은 관리가 가능합니다. 해당 MBeanServer에 연결된 커넥터 / 어댑터를 통해 속성 및 조작에 원격으로 액세스 할 수 있습니다. JMX 호환 MBean이 아닌 경우 MBeanServer에 Java 오브젝트를 등록 할 수 없습니다. ModelMBean을 인스턴스화함으로써 자원은 MBean이 유효 함을 보장합니다. 모든 공용 메소드에서 MBeanException 및 RuntimeOperationsException이 발생해야합니다. 이를 통해 분산 통신 (RMI, EJB 등)의 예외를 랩핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b24536c65c6bdb6003387953d9dc6d18cd66c228" translate="yes" xml:space="preserve">
          <source>Every ModelMBean which is instantiated in the MBeanServer becomes manageable: its attributes, operations, and notifications become remotely accessible through the connectors/adaptors connected to that MBeanServer. A Java object cannot be registered in the MBeanServer unless it is a JMX compliant MBean. By instantiating a ModelMBean, resources are guaranteed that the MBean is valid. MBeanException and RuntimeOperationsException must be thrown on every public method. This allows for wrapping exceptions from distributed communications (RMI, EJB, etc.)</source>
          <target state="translated">MBeanServer에서 인스턴스화 된 모든 ModelMBean은 관리 가능해집니다. 해당 MBeanServer에 연결된 커넥터 / 어댑터를 통해 속성, 조작 및 알림에 원격으로 액세스 할 수 있습니다. JMX 호환 MBean이 아닌 경우 MBeanServer에 Java 오브젝트를 등록 할 수 없습니다. ModelMBean을 인스턴스화함으로써 자원은 MBean이 유효 함을 보장합니다. 모든 공용 메소드에서 MBeanException 및 RuntimeOperationsException이 발생해야합니다. 이를 통해 분산 통신 (RMI, EJB 등)의 예외를 랩핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="afc6d15ffce883732262ecaedd9eb8c61c754960" translate="yes" xml:space="preserve">
          <source>Every RequiredModelMBean which is instantiated in the MBeanServer becomes manageable:</source>
          <target state="translated">MBeanServer에서 인스턴스화 된 모든 RequiredModelMBean은 관리 가능하게됩니다.</target>
        </trans-unit>
        <trans-unit id="9c8577d6e41ff711bcc90933b019cae44f1fff36" translate="yes" xml:space="preserve">
          <source>Every bit set has a current size, which is the number of bits of space currently in use by the bit set. Note that the size is related to the implementation of a bit set, so it may change with implementation. The length of a bit set relates to logical length of a bit set and is defined independently of implementation.</source>
          <target state="translated">모든 비트 세트의 현재 크기는 현재 비트 세트에서 사용중인 공간의 비트 수입니다. 크기는 비트 세트의 구현과 관련이 있으므로 구현에 따라 변경 될 수 있습니다. 비트 세트의 길이는 비트 세트의 논리적 길이와 관련이 있으며 구현과 독립적으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="6fe28d6d1aa717027a7aeec58ca2d9c4396b3b84" translate="yes" xml:space="preserve">
          <source>Every buffer is readable, but not every buffer is writable. The mutation methods of each buffer class are specified as</source>
          <target state="translated">모든 버퍼를 읽을 수 있지만 모든 버퍼를 쓸 수있는 것은 아닙니다. 각 버퍼 클래스의 돌연변이 방법은 다음과 같이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="a71b51e23a02ee4ae615b314f952d5f70bac8435" translate="yes" xml:space="preserve">
          <source>Every charset contains itself.</source>
          <target state="translated">모든 문자셋이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="38eeb89a456fccc33b7211aba3622c64fb751e14" translate="yes" xml:space="preserve">
          <source>Every charset has a</source>
          <target state="translated">모든 문자셋은</target>
        </trans-unit>
        <trans-unit id="a22b78089cfb9ca1cb85d3b3acaf7ec4f780443d" translate="yes" xml:space="preserve">
          <source>Every compiler which implements this interface provides a standard file manager for operating on regular &lt;a href=&quot;../../java/io/file&quot;&gt;files&lt;/a&gt;. The StandardJavaFileManager interface defines additional methods for creating file objects from regular files.</source>
          <target state="translated">이 인터페이스를 구현하는 모든 컴파일러는 일반 &lt;a href=&quot;../../java/io/file&quot;&gt;파일&lt;/a&gt; 에서 작동하기위한 표준 파일 관리자를 제공 합니다 . StandardJavaFileManager 인터페이스는 일반 파일에서 파일 오브젝트를 작성하기위한 추가 메소드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="e59fddb78d3a521eff4442e186ce5d2fe3fc4f13" translate="yes" xml:space="preserve">
          <source>Every connection opened by a connector server has a string identifier, called its &lt;b&gt;connection id&lt;/b&gt;. This identifier appears in the &lt;a href=&quot;jmxconnectionnotification&quot;&gt;&lt;code&gt;JMXConnectionNotification&lt;/code&gt;&lt;/a&gt; events emitted by the connector server, in the list returned by &lt;a href=&quot;jmxconnectorservermbean#getConnectionIds--&quot;&gt;&lt;code&gt;getConnectionIds()&lt;/code&gt;&lt;/a&gt;, and in the value returned by the client's &lt;a href=&quot;jmxconnector#getConnectionId--&quot;&gt;&lt;code&gt;getConnectionId()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">커넥터 서버에 의해 열린 모든 연결에는 &lt;b&gt; 연결 ID&lt;/b&gt; 있습니다. 이 식별자 는 커넥터 서버 가 생성 한 &lt;a href=&quot;jmxconnectionnotification&quot;&gt; &lt;code&gt;JMXConnectionNotification&lt;/code&gt; &lt;/a&gt; 이벤트, &lt;a href=&quot;jmxconnectorservermbean#getConnectionIds--&quot;&gt; &lt;code&gt;getConnectionIds()&lt;/code&gt; &lt;/a&gt; 리턴 한 목록 및 클라이언트의 &lt;a href=&quot;jmxconnector#getConnectionId--&quot;&gt; &lt;code&gt;getConnectionId()&lt;/code&gt; &lt;/a&gt; 메소드가 리턴 한 값에 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="6bc9f7376f9d46b9c3676b5f263505b90a9525f6" translate="yes" xml:space="preserve">
          <source>Every data line has an audio format associated with its data stream. The audio format of a source (playback) data line indicates what kind of data the data line expects to receive for output. For a target (capture) data line, the audio format specifies the kind of the data that can be read from the line. Sound files also have audio formats, of course. The &lt;code&gt;&lt;a href=&quot;audiofileformat&quot;&gt;&lt;code&gt;AudioFileFormat&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class encapsulates an &lt;code&gt;AudioFormat&lt;/code&gt; in addition to other, file-specific information. Similarly, an &lt;code&gt;&lt;a href=&quot;audioinputstream&quot;&gt;&lt;code&gt;AudioInputStream&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; has an &lt;code&gt;AudioFormat&lt;/code&gt;.</source>
          <target state="translated">모든 데이터 라인에는 데이터 스트림과 관련된 오디오 형식이 있습니다. 소스 (재생) 데이터 라인의 오디오 형식은 데이터 라인이 출력을 위해 수신 할 데이터의 종류를 나타냅니다. 대상 (캡처) 데이터 라인의 경우 오디오 형식은 라인에서 읽을 수있는 데이터 종류를 지정합니다. 사운드 파일은 물론 오디오 형식도 있습니다. &lt;code&gt;&lt;a href=&quot;audiofileformat&quot;&gt;&lt;code&gt;AudioFileFormat&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 클래스는 캡슐화 &lt;code&gt;AudioFormat&lt;/code&gt; 을 다른 파일 고유의 정보 이외에합니다. 마찬가지로 &lt;code&gt;&lt;a href=&quot;audioinputstream&quot;&gt;&lt;code&gt;AudioInputStream&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;AudioFormat&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="366c8a74ce0bfae1443528e3eba33644b699b273" translate="yes" xml:space="preserve">
          <source>Every effort will be made to avoid introducing additional backwards incompatibilities; however, sometimes there is no other alternative.</source>
          <target state="translated">추가적인 비 호환성 문제가 발생하지 않도록 모든 노력을 기울일 것입니다. 그러나 때로는 다른 대안이 없습니다.</target>
        </trans-unit>
        <trans-unit id="df31a1eb1dbb104db07ad3b697f21ceb935e7500" translate="yes" xml:space="preserve">
          <source>Every implementation must support the RMI connector protocol with the default RMI transport, specified with string &lt;code&gt;rmi&lt;/code&gt;. An implementation may optionally support the RMI connector protocol with the RMI/IIOP transport, specified with the string &lt;code&gt;iiop&lt;/code&gt;.</source>
          <target state="translated">모든 구현은 문자열 &lt;code&gt;rmi&lt;/code&gt; 로 지정된 기본 RMI 전송으로 RMI 커넥터 프로토콜을 지원해야합니다 . 구현은 문자열 &lt;code&gt;iiop&lt;/code&gt; 로 지정된 RMI / IIOP 전송을 사용하여 RMI 커넥터 프로토콜을 선택적으로 지원할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2c3c76cda0eb5819043de68e450051b3f76ba87e" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support at least one strong &lt;code&gt;SecureRandom&lt;/code&gt; implementation.</source>
          <target state="translated">Java 플랫폼의 모든 구현은 하나 이상의 강력한 &lt;code&gt;SecureRandom&lt;/code&gt; 구현 을 지원해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e768526fe3ad1864af2d7e6f23a3c5656b4bcdec" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; algorithms and keysizes in parentheses:</source>
          <target state="translated">Java 플랫폼의 모든 구현은 다음 표준 &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; 알고리즘 및 키 크기를 괄호 로 지원해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a1b227c428a22ceb829f4ee39216b99de8e4dacd" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;AlgorithmParameters&lt;/code&gt; algorithms:</source>
          <target state="translated">다음과 같은 표준 &lt;code&gt;AlgorithmParameters&lt;/code&gt; 알고리즘 을 지원하려면 모든 Java 플랫폼 구현이 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="36183fd5a13f488280d4fb3c8e6af2f565438a24" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;CertPath&lt;/code&gt; encodings:</source>
          <target state="translated">Java 플랫폼의 모든 구현은 다음 표준을 지원해야합니다. &lt;code&gt;CertPath&lt;/code&gt; 인코딩 .</target>
        </trans-unit>
        <trans-unit id="8fbbfbcc6c3282ae40b7b52726bc73b110a7e518" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;CertPathBuilder&lt;/code&gt; algorithm:</source>
          <target state="translated">Java 플랫폼의 모든 구현은 다음 표준을 지원해야합니다. &lt;code&gt;CertPathBuilder&lt;/code&gt; 알고리즘 합니다.</target>
        </trans-unit>
        <trans-unit id="8c854fc4b2a13f95ccfcbf19c6bf89cad9cb19d3" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;CertPathValidator&lt;/code&gt; algorithm:</source>
          <target state="translated">Java 플랫폼의 모든 구현은 다음 표준을 지원해야합니다. &lt;code&gt;CertPathValidator&lt;/code&gt; 알고리즘 합니다.</target>
        </trans-unit>
        <trans-unit id="f404f8a40c78497bbc8bd841e4d1ef18b671a124" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;CertStore&lt;/code&gt; type:</source>
          <target state="translated">Java 플랫폼의 모든 구현은 다음 표준을 지원해야합니다. &lt;code&gt;CertStore&lt;/code&gt; 유형 합니다.</target>
        </trans-unit>
        <trans-unit id="124008f7aafcdf6cb7b340de89da089f74397daa" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;CertificateFactory&lt;/code&gt; type:</source>
          <target state="translated">Java 플랫폼의 모든 구현은 다음 표준을 지원해야합니다. &lt;code&gt;CertificateFactory&lt;/code&gt; 유형 합니다.</target>
        </trans-unit>
        <trans-unit id="b6ce802bc3f8ee802ff739c73f266086881b5312" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;Cipher&lt;/code&gt; transformations with the keysizes in parentheses:</source>
          <target state="translated">Java 플랫폼의 모든 구현은 다음 표준을 지원해야합니다. &lt;code&gt;Cipher&lt;/code&gt; 키 크기를 괄호 안에 사용하여 암호 변환 .</target>
        </trans-unit>
        <trans-unit id="1cd37f2f3f66f6d9c590cd0092b1ff35c6033b9c" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;KeyAgreement&lt;/code&gt; algorithm:</source>
          <target state="translated">다음 표준 &lt;code&gt;KeyAgreement&lt;/code&gt; 를 지원하려면 모든 Java 플랫폼 구현이 필요합니다. 알고리즘 합니다.</target>
        </trans-unit>
        <trans-unit id="781bf16ce14e1c4c0e979592a2bfeeeec3292242" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;KeyFactory&lt;/code&gt; algorithms:</source>
          <target state="translated">Java 플랫폼의 모든 구현은 다음 표준 &lt;code&gt;KeyFactory&lt;/code&gt; 를 지원해야합니다. 알고리즘 합니다.</target>
        </trans-unit>
        <trans-unit id="5c82792156a06e15c51a159e6f95ffc1f02c653e" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;KeyGenerator&lt;/code&gt; algorithms with the keysizes in parentheses:</source>
          <target state="translated">Java 플랫폼의 모든 구현은 다음 표준을 지원해야합니다. &lt;code&gt;KeyGenerator&lt;/code&gt; 키 크기를 괄호로 묶은 KeyGenerator 알고리즘 .</target>
        </trans-unit>
        <trans-unit id="565ef7a135094ae7c9497370306a550225463556" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;KeyPairGenerator&lt;/code&gt; algorithms and keysizes in parentheses:</source>
          <target state="translated">Java 플랫폼의 모든 구현은 다음 표준을 지원해야합니다. &lt;code&gt;KeyPairGenerator&lt;/code&gt; 알고리즘 및 키 크기를 괄호 .</target>
        </trans-unit>
        <trans-unit id="810bc6584402251bb16e4436643c78db51223d64" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;KeyStore&lt;/code&gt; type:</source>
          <target state="translated">Java 플랫폼의 모든 구현은 다음 표준을 지원해야합니다. &lt;code&gt;KeyStore&lt;/code&gt; 유형 합니다.</target>
        </trans-unit>
        <trans-unit id="3fde90e244ed04783a64d7c3f79b1f1be14ebf90" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;Mac&lt;/code&gt; algorithms:</source>
          <target state="translated">다음 표준 &lt;code&gt;Mac&lt;/code&gt; 을 지원하려면 모든 Java 플랫폼 구현이 필요합니다. 알고리즘 합니다.</target>
        </trans-unit>
        <trans-unit id="deaf00b5bac5cac5cc9a6e066811de33d0e15a66" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;MessageDigest&lt;/code&gt; algorithms:</source>
          <target state="translated">다음과 같은 표준 &lt;code&gt;MessageDigest&lt;/code&gt; 를 지원하려면 모든 Java 플랫폼 구현이 필요합니다. 알고리즘 합니다.</target>
        </trans-unit>
        <trans-unit id="1d018400a5f877e1c83e6ec3d87f0e0de56b8ca1" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;SSLContext&lt;/code&gt; protocol:</source>
          <target state="translated">Java 플랫폼의 모든 구현은 다음 표준 &lt;code&gt;SSLContext&lt;/code&gt; 를 지원해야합니다. 프로토콜 합니다.</target>
        </trans-unit>
        <trans-unit id="6ede6336e7945995dd841a37d9835cfe081a53f7" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;SecretKeyFactory&lt;/code&gt; algorithms:</source>
          <target state="translated">다음과 같은 표준 &lt;code&gt;SecretKeyFactory&lt;/code&gt; 를 지원하려면 모든 Java 플랫폼 구현이 필요합니다. 알고리즘 합니다.</target>
        </trans-unit>
        <trans-unit id="e8238579adfd0d436e396d91ba6fb668e167862d" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;Signature&lt;/code&gt; algorithms:</source>
          <target state="translated">Java 플랫폼의 모든 구현은 다음 표준 &lt;code&gt;Signature&lt;/code&gt; 을 지원해야합니다. 알고리즘 합니다.</target>
        </trans-unit>
        <trans-unit id="b2ddbdbb62f077146c9ec51639a6d40e3a66685c" translate="yes" xml:space="preserve">
          <source>Every instance of the Java virtual machine has a default character encoding determined during virtual-machine startup and typically depends upon the locale and charset being used by the underlying operating system. In a distributed environment there is no guarantee that two VM share the same default encoding. Thus clients which want to stream platform encoded text data from the host platform to a Java Print Service instance must explicitly declare the charset and not rely on defaults.</source>
          <target state="translated">Java 가상 머신의 모든 인스턴스에는 가상 머신 시작 중에 결정된 기본 문자 인코딩이 있으며 일반적으로 기본 운영 체제에서 사용하는 로케일 및 문자 세트에 따라 다릅니다. 분산 환경에서는 두 개의 VM이 동일한 기본 인코딩을 공유한다고 보장 할 수 없습니다. 따라서 플랫폼 인코딩 된 텍스트 데이터를 호스트 플랫폼에서 Java Print Service 인스턴스로 스트리밍하려는 클라이언트는 명시 적으로 문자 세트를 선언해야하며 기본값에 의존하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="dbd422b750b5e2c8ade090a693d83359f35fc22d" translate="yes" xml:space="preserve">
          <source>Every instance of the Java virtual machine has a default charset, which may or may not be one of the standard charsets. The default charset is determined during virtual-machine startup and typically depends upon the locale and charset being used by the underlying operating system.</source>
          <target state="translated">Java 가상 머신의 모든 인스턴스에는 기본 문자 세트가 있으며 표준 문자 세트 중 하나 일 수도 있고 아닐 수도 있습니다. 기본 문자 집합은 가상 시스템 시작 중에 결정되며 일반적으로 기본 운영 체제에서 사용하는 로캘 및 문자 집합에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="6e8832439bbb3d5ffbaf359959cba944c7e15f8c" translate="yes" xml:space="preserve">
          <source>Every method handle reports its type descriptor via the &lt;a href=&quot;methodhandle#type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; accessor. This type descriptor is a &lt;a href=&quot;methodtype&quot;&gt;&lt;code&gt;MethodType&lt;/code&gt;&lt;/a&gt; object, whose structure is a series of classes, one of which is the return type of the method (or &lt;code&gt;void.class&lt;/code&gt; if none).</source>
          <target state="translated">모든 메서드 핸들은 &lt;a href=&quot;methodhandle#type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt; 접근 자를 통해 형식 설명자를보고합니다 . 이 형식 설명자는 &lt;a href=&quot;methodtype&quot;&gt; &lt;code&gt;MethodType&lt;/code&gt; &lt;/a&gt; 개체이며, 구조는 일련의 클래스이며, 그 중 하나는 메서드의 반환 형식입니다 ( &lt;code&gt;void.class&lt;/code&gt; 경우 void.class ).</target>
        </trans-unit>
        <trans-unit id="204eed6769e6b6286bdf99f519a02d70fc5b8626" translate="yes" xml:space="preserve">
          <source>Every method which produces formatted output requires a</source>
          <target state="translated">형식화 된 출력을 생성하는 모든 방법에는</target>
        </trans-unit>
        <trans-unit id="c40476ff26c7c71e385ad1c1ccd116b319483565" translate="yes" xml:space="preserve">
          <source>Every naming method in the &lt;code&gt;Context&lt;/code&gt; interface has two overloads: one that accepts a &lt;code&gt;Name&lt;/code&gt; argument and one that accepts a string name. &lt;code&gt;Name&lt;/code&gt; is an interface that represents a generic name--an ordered sequence of zero of more components. For these methods, &lt;code&gt;Name&lt;/code&gt; can be used to represent a &lt;em&gt;composite name&lt;/em&gt; (&lt;code&gt;CompositeName&lt;/code&gt;) so that you can name an object using a name which spans multiple namespaces.</source>
          <target state="translated">&lt;code&gt;Context&lt;/code&gt; 인터페이스 의 모든 명명 방법 에는 두 가지 오버로드가 있습니다. 하나는 &lt;code&gt;Name&lt;/code&gt; 인수를 허용하고 다른 하나는 문자열 이름을 허용합니다. &lt;code&gt;Name&lt;/code&gt; 은 일반적인 이름, 즉 0 개 이상의 구성 요소 순서로 표시되는 인터페이스입니다. 이러한 메소드의 경우, &lt;code&gt;Name&lt;/code&gt; 을 사용하여 &lt;em&gt;복합 이름&lt;/em&gt; ( &lt;code&gt;CompositeName&lt;/code&gt; ) 을 나타낼 수 있습니다. )을 표시 할 수 있으므로 여러 네임 스페이스에 걸쳐있는 이름을 사용하여 오브젝트의 이름을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10e8cc10b5240e5593d87feab50e7173166eb9fa" translate="yes" xml:space="preserve">
          <source>Every node's path name relative to its parent is its node name (except for the root node, which does not have a parent).</source>
          <target state="translated">부모를 기준으로 한 모든 노드의 경로 이름은 노드 이름입니다 (부모가없는 루트 노드 제외).</target>
        </trans-unit>
        <trans-unit id="2e7724eecbb51838e4a538729cfe1179c7bf709a" translate="yes" xml:space="preserve">
          <source>Every node's path name relative to itself is the empty string.</source>
          <target state="translated">자체와 관련된 모든 노드의 경로 이름은 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="87a8583605dbf5de314547d642597590b3020da9" translate="yes" xml:space="preserve">
          <source>Every node's path name relative to the root is its absolute path name with the initial slash character removed.</source>
          <target state="translated">루트에 상대적인 모든 노드의 경로 이름은 초기 슬래시 문자가 제거 된 절대 경로 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c489b63daa2b9a9b6180d50ffd3730d692613aef" translate="yes" xml:space="preserve">
          <source>Every other method specifies that there is an operation with the same name as the method. The Java type and Open type of the return value and of each parameter are determined by the mapping rules below.</source>
          <target state="translated">다른 모든 메소드는 메소드와 이름이 같은 오퍼레이션이 있음을 지정합니다. 리턴 값과 각 매개 변수의 Java 유형 및 Open 유형은 아래 맵핑 규칙에 따라 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="0a72151bc8443dd4828381f577ac74378fb9ef8f" translate="yes" xml:space="preserve">
          <source>Every pathname that denotes an existing file or directory has a unique canonical form. Every pathname that denotes a nonexistent file or directory also has a unique canonical form. The canonical form of the pathname of a nonexistent file or directory may be different from the canonical form of the same pathname after the file or directory is created. Similarly, the canonical form of the pathname of an existing file or directory may be different from the canonical form of the same pathname after the file or directory is deleted.</source>
          <target state="translated">기존 파일 또는 디렉토리를 나타내는 모든 경로 이름은 고유 한 정식 형식입니다. 존재하지 않는 파일 또는 디렉토리를 나타내는 모든 경로 이름에는 고유 한 정식 형식이 있습니다. 존재하지 않는 파일 또는 디렉토리의 경로 이름의 정식 형식은 파일 또는 디렉토리가 작성된 후 동일한 경로 이름의 정식 형식과 다를 수 있습니다. 마찬가지로, 기존 파일 또는 디렉토리의 경로 이름의 정식 형식은 파일 또는 디렉토리가 삭제 된 후 동일한 경로 이름의 정식 형식과 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9330bf4a03b53aa1292a10e98fcb64768d7b058a" translate="yes" xml:space="preserve">
          <source>Every property editor must support a call on setValue when the argument object is of the type for which this is the corresponding propertyEditor. In addition, each property editor must either support a custom editor, or support setAsText.</source>
          <target state="translated">인수 객체가 해당 propertyEditor 유형 인 경우 모든 속성 편집기는 setValue 호출을 지원해야합니다. 또한 각 특성 편집기는 사용자 정의 편집기를 지원하거나 setAsText를 지원해야합니다.</target>
        </trans-unit>
        <trans-unit id="3717941423626ac9cf7230e3ac3f96bc1f032e5e" translate="yes" xml:space="preserve">
          <source>Every propertyEditor must support one or more of the three simple display styles. Thus it can either (1) support isPaintable or (2) both return a non-null String[] from getTags() and return a non-null value from getAsText or (3) simply return a non-null String from getAsText().</source>
          <target state="translated">모든 propertyEditor는 세 가지 간단한 표시 스타일 중 하나 이상을 지원해야합니다. 따라서 (1) isPaintable 지원 또는 (2) getTags ()에서 null이 아닌 String []을 반환하고 getAsText에서 null이 아닌 값을 반환하거나 (3) getAsText ()에서 null이 아닌 문자열을 반환 .</target>
        </trans-unit>
        <trans-unit id="fab7c38b5135856053cbcf27fb14833cdf915d60" translate="yes" xml:space="preserve">
          <source>Every role has a &lt;em&gt;cardinality&lt;/em&gt;, which provides lower and upper bounds on the number of MBeans that can appear in that role in a given relation instance. Usually, the lower and upper bounds are both 1, with exactly one MBean appearing in the role. The cardinality only limits the number of MBeans in the role per relation instance. The same MBean can appear in the same role in any number of instances of a relation type. In the &lt;code&gt;DependsOn&lt;/code&gt; example, a given module can depend on many other modules, and be depended on by many others, but any given relation instance links exactly one &lt;code&gt;dependent&lt;/code&gt; module with exactly one &lt;code&gt;dependedOn&lt;/code&gt; module.</source>
          <target state="translated">모든 역할에는 &lt;em&gt;카디널리티&lt;/em&gt; 가 있으며 , 이는 주어진 관계 인스턴스에서 해당 역할에 나타날 수있는 MBean 수의 하한과 상한을 제공합니다. 일반적으로 하한과 상한은 모두 1이며 정확히 하나의 MBean이 역할에 나타납니다. 카디널리티는 관계 인스턴스 당 역할의 MBean 수만 제한합니다. 동일한 MBean이 관계 유형의 여러 인스턴스에서 동일한 역할로 나타날 수 있습니다. 에서 &lt;code&gt;DependsOn&lt;/code&gt; 예컨대, 소정 모듈은 다수의 다른 모듈에 의존 할 수 있고, 많은 다른 사람들에 의존 할 수 있지만, 어떤 주어진 관계 인스턴스 링크 정확히 하나의 &lt;code&gt;dependent&lt;/code&gt; 정확히 하나 개와 모듈 &lt;code&gt;dependedOn&lt;/code&gt; 모듈.</target>
        </trans-unit>
        <trans-unit id="cfd9a2f55ca7e9b594032692867dbd0ad48457e1" translate="yes" xml:space="preserve">
          <source>Every role is &lt;em&gt;typed&lt;/em&gt;, meaning that an MBean that appears in that role must be an instance of the role's type. In the &lt;code&gt;DependsOn&lt;/code&gt; example, both roles would be of type &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">모든 역할은 &lt;em&gt;typeed&lt;/em&gt; 이므로 해당 역할에 나타나는 MBean은 역할 유형의 인스턴스 여야합니다. 에서 &lt;code&gt;DependsOn&lt;/code&gt; 예를 들어, 두 역할은 형식이 될 것입니다 &lt;code&gt;Module&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2bf840d425922327b94cbaf298de5ab16e9a7b79" translate="yes" xml:space="preserve">
          <source>Every string buffer has a capacity. As long as the length of the character sequence contained in the string buffer does not exceed the capacity, it is not necessary to allocate a new internal buffer array. If the internal buffer overflows, it is automatically made larger.</source>
          <target state="translated">모든 문자열 버퍼에는 용량이 있습니다. 문자열 버퍼에 포함 된 문자 시퀀스의 길이가 용량을 초과하지 않는 한 새 내부 버퍼 배열을 할당 할 필요가 없습니다. 내부 버퍼가 오버플로되면 자동으로 커집니다.</target>
        </trans-unit>
        <trans-unit id="ee8e6c8ff8ba3d89ff2a6e4f484260e6b6c085f5" translate="yes" xml:space="preserve">
          <source>Every string builder has a capacity. As long as the length of the character sequence contained in the string builder does not exceed the capacity, it is not necessary to allocate a new internal buffer. If the internal buffer overflows, it is automatically made larger.</source>
          <target state="translated">모든 문자열 빌더에는 용량이 있습니다. 문자열 빌더에 포함 된 문자 시퀀스의 길이가 용량을 초과하지 않는 한 새 내부 버퍼를 할당 할 필요가 없습니다. 내부 버퍼가 오버플로되면 자동으로 커집니다.</target>
        </trans-unit>
        <trans-unit id="d106019115f10fb280daa50a39bcc5b44ed48439" translate="yes" xml:space="preserve">
          <source>Every thread has a name for identification purposes. More than one thread may have the same name. If a name is not specified when a thread is created, a new name is generated for it.</source>
          <target state="translated">모든 스레드에는 식별을위한 이름이 있습니다. 둘 이상의 스레드가 동일한 이름을 가질 수 있습니다. 스레드 작성시 이름을 지정하지 않으면 새 이름이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="27c3e40ec218fe95cc1b76dd41fe909e8962366d" translate="yes" xml:space="preserve">
          <source>Every thread has a priority. Threads with higher priority are executed in preference to threads with lower priority. Each thread may or may not also be marked as a daemon. When code running in some thread creates a new &lt;code&gt;Thread&lt;/code&gt; object, the new thread has its priority initially set equal to the priority of the creating thread, and is a daemon thread if and only if the creating thread is a daemon.</source>
          <target state="translated">모든 스레드는 우선 순위를 갖습니다. 우선 순위가 높은 스레드가 우선 순위가 낮은 스레드보다 우선적으로 실행됩니다. 각 스레드는 데몬으로 표시되거나 표시되지 않을 수 있습니다. 일부 스레드에서 실행중인 코드가 새 &lt;code&gt;Thread&lt;/code&gt; 객체를 만들면 새 스레드의 우선 순위는 처음에 작성 스레드의 우선 순위와 동일하게 설정되며 작성 스레드가 데몬 인 경우에만 데몬 스레드입니다.</target>
        </trans-unit>
        <trans-unit id="3c638aa616ce65d802b4ba335aafbf46193f8b8f" translate="yes" xml:space="preserve">
          <source>Every version of the JMX specification continues to implement the features of previous versions. So when the client is running an earlier version than the server, there should not be any interoperability concerns.</source>
          <target state="translated">모든 JMX 스펙 버전은 계속해서 이전 버전의 기능을 구현합니다. 따라서 클라이언트가 서버보다 이전 버전을 실행하는 경우 상호 운용성 문제가 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="a034e7079a04438693cb2ba5970a49792b682984" translate="yes" xml:space="preserve">
          <source>Exactly one of &lt;code&gt;getRenderedImage&lt;/code&gt; and &lt;code&gt;getRaster&lt;/code&gt; will return a non-&lt;code&gt;null&lt;/code&gt; value. Subclasses are responsible for ensuring this behavior.</source>
          <target state="translated">&lt;code&gt;getRenderedImage&lt;/code&gt; 및 &lt;code&gt;getRaster&lt;/code&gt; 중 하나가 &lt;code&gt;null&lt;/code&gt; 이 아닌 값을 반환 합니다. 서브 클래스는이 동작을 보장 할 책임이 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d8a61432efad1cceb70d0a7168ea486712c4953" translate="yes" xml:space="preserve">
          <source>Examines the argument type and its fields and perform some documented operation. No specific operations are required.</source>
          <target state="translated">인수 유형과 해당 필드를 검사하고 문서화 된 작업을 수행합니다. 특정 작업이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="22d244fd76e1ca249ad40be45bec3a1933e4fe88" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;&quot;#,#00.0#&quot;&lt;/code&gt; &amp;rarr; 1,234.56</source>
          <target state="translated">예 &lt;code&gt;&quot;#,#00.0#&quot;&lt;/code&gt; &amp;rarr; 1,234.56</target>
        </trans-unit>
        <trans-unit id="f57d5366eca3783726f3d7caa68b6d9a1d639709" translate="yes" xml:space="preserve">
          <source>Example Suppose we have a service type &lt;code&gt;com.example.CodecSet&lt;/code&gt; which is intended to represent sets of encoder/decoder pairs for some protocol. In this case it is an abstract class with two abstract methods:</source>
          <target state="translated">예 일부 프로토콜에 대한 인코더 / 디코더 쌍 세트를 나타 내기위한 서비스 유형 &lt;code&gt;com.example.CodecSet&lt;/code&gt; 가 있다고 가정하십시오 . 이 경우 두 가지 추상 메소드가있는 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="7a06132f384ea01bafc4c48f22905ce128d2dade" translate="yes" xml:space="preserve">
          <source>Example of the iterator usage,</source>
          <target state="translated">반복자 사용법의 예</target>
        </trans-unit>
        <trans-unit id="dbad3ff9680448a97e3e93c8ac90fef412296573" translate="yes" xml:space="preserve">
          <source>Example results are &quot;2&quot;, &quot;new Color(127,127,34)&quot;, &quot;Color.orange&quot;, etc.</source>
          <target state="translated">예제 결과는 &quot;2&quot;, &quot;new Color (127,127,34)&quot;, &quot;Color.orange&quot;등입니다.</target>
        </trans-unit>
        <trans-unit id="429046e64d4cd3436e1c37eb60d59f887f5f1478" translate="yes" xml:space="preserve">
          <source>Example results are:</source>
          <target state="translated">결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c7fb1ec4be4eb18e26211d0b08ebbd8374840ecb" translate="yes" xml:space="preserve">
          <source>Example url</source>
          <target state="translated">URL 예</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">사용법 예 :</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="79b9c1390563c3cf0a4c4d8fff2384faa32cf303" translate="yes" xml:space="preserve">
          <source>Example: &quot;Latn&quot; (Latin), &quot;Cyrl&quot; (Cyrillic)</source>
          <target state="translated">예 : &quot;Latn&quot;(라틴어), &quot;Cyrl&quot;(키릴 자모)</target>
        </trans-unit>
        <trans-unit id="d19474c339bbc86eee07b1c2108f0cdc28535b63" translate="yes" xml:space="preserve">
          <source>Example: &quot;US&quot; (United States), &quot;FR&quot; (France), &quot;029&quot; (Caribbean)</source>
          <target state="translated">예 : &quot;US&quot;(미국), &quot;FR&quot;(프랑스), &quot;029&quot;(카리브 어)</target>
        </trans-unit>
        <trans-unit id="4cd43cd1409efd2f924b88cecdc4ee2b5bbf52d2" translate="yes" xml:space="preserve">
          <source>Example: &quot;en&quot; (English), &quot;ja&quot; (Japanese), &quot;kok&quot; (Konkani)</source>
          <target state="translated">예 : &quot;en&quot;(영어), &quot;ja&quot;(일본어), &quot;kok&quot;(Konkani)</target>
        </trans-unit>
        <trans-unit id="484478e712cae8003c2c03c06e78a3428e7ab4b6" translate="yes" xml:space="preserve">
          <source>Example: &quot;polyton&quot; (Polytonic Greek), &quot;POSIX&quot;</source>
          <target state="translated">예 : &quot;polyton&quot;(Polytonic Greek), &quot;POSIX&quot;</target>
        </trans-unit>
        <trans-unit id="17f667cc777b1242d98364f0ac1fa02d3f96a167" translate="yes" xml:space="preserve">
          <source>Example: 123%</source>
          <target state="translated">예 : 123 %</target>
        </trans-unit>
        <trans-unit id="5807ee3a782f2372237d70c10b7a8c266239ac2d" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;&quot;#,#00.0#;(#,#00.0#)&quot;&lt;/code&gt; for negatives in parentheses.</source>
          <target state="translated">예 : 괄호 안의 음수 인 경우 &lt;code&gt;&quot;#,#00.0#;(#,#00.0#)&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0d8120bba52d6db8f1d43bf8dd5ff3373afede1" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;Boolean.parseBoolean(&quot;True&quot;)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">예 : &lt;code&gt;Boolean.parseBoolean(&quot;True&quot;)&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="22168d0e3ee025a80c6b128455f9476fa0a30661" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;Boolean.parseBoolean(&quot;yes&quot;)&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">예 : &lt;code&gt;Boolean.parseBoolean(&quot;yes&quot;)&lt;/code&gt; 는 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="84f9bf532b9e9f966608cd71532921b0ef23e919" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;DatagramSocket s = new DatagramSocket(null);
              s.bind(new InetSocketAddress(8888));
 &lt;/code&gt; Which is equivalent to: &lt;code&gt;DatagramSocket s = new DatagramSocket(8888);
 &lt;/code&gt; Both cases will create a DatagramSocket able to receive broadcasts on UDP port 8888.</source>
          <target state="translated">예 : &lt;code&gt;DatagramSocket s = new DatagramSocket(null); s.bind(new InetSocketAddress(8888)); &lt;/code&gt; 다음과 같습니다. &lt;code&gt;DatagramSocket s = new DatagramSocket(8888); &lt;/code&gt; 두 경우 모두 UDP 포트 8888에서 브로드 캐스트를 수신 할 수있는 DatagramSocket을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="80108241de7b75c463b05fecf7f66580a18848b6" translate="yes" xml:space="preserve">
          <source>Example: Decimal ON: 12345 &amp;rarr; 12345.; OFF: 12345 &amp;rarr; 12345</source>
          <target state="translated">예 : 10 진수 ON : 12345 &amp;rarr; 12345 .; OFF : 12345 &amp;rarr; 12345</target>
        </trans-unit>
        <trans-unit id="2b039444d73de8e77e0dd0c362a46e7c4eed321f" translate="yes" xml:space="preserve">
          <source>Example: If an MBean called &lt;code&gt;myMbean&lt;/code&gt; needs to notify registered listeners when its attribute:</source>
          <target state="translated">예 : &lt;code&gt;myMbean&lt;/code&gt; 이라는 MBean 이 속성이 등록 된 리스너에게 통지 해야하는 경우 :</target>
        </trans-unit>
        <trans-unit id="029b09a24b366ab20789a1a528d783da16fc2286" translate="yes" xml:space="preserve">
          <source>Example: key=&quot;u&quot;/value=&quot;ca-japanese&quot; (Japanese Calendar), key=&quot;x&quot;/value=&quot;java-1-7&quot;</source>
          <target state="translated">예 : key = &quot;u&quot;/ value = &quot;ca-japanese&quot;(일본어 달력), key = &quot;x&quot;/ value = &quot;java-1-7&quot;</target>
        </trans-unit>
        <trans-unit id="f5b9a73d3e31207e33b7a76f83cfcdce9d1f8914" translate="yes" xml:space="preserve">
          <source>Example: to find MBeans that are instances of &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt;, use &lt;code&gt;Query.isInstanceOf(Query.value(NotificationBroadcaster.class.getName()))&lt;/code&gt;.</source>
          <target state="translated">예 : &lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; 의&lt;/a&gt; 인스턴스 인 MBean을 찾으 려면 &lt;code&gt;Query.isInstanceOf(Query.value(NotificationBroadcaster.class.getName()))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d0c707eab09225bf4add3011db005ce009555fe" translate="yes" xml:space="preserve">
          <source>Example: with multiplier 100, 1.23 is formatted as &quot;123&quot;, and &quot;123&quot; is parsed into 1.23.</source>
          <target state="translated">예 : 승수 100의 경우 1.23은 &quot;123&quot;으로 형식화되고 &quot;123&quot;은 1.23으로 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="fa252b8bd1695476ec86ad9cf3a76343fada4222" translate="yes" xml:space="preserve">
          <source>Examples of ObjectName patterns are:</source>
          <target state="translated">ObjectName 패턴의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1747eac3ea05fd342073c2c6214c4820994c9914" translate="yes" xml:space="preserve">
          <source>Examples of Path Matching</source>
          <target state="translated">경로 일치의 예</target>
        </trans-unit>
        <trans-unit id="a62ff8e48633f977f3c04fe6c872d4fcc3a83935" translate="yes" xml:space="preserve">
          <source>Examples of SocketPermission instantiation are the following:</source>
          <target state="translated">SocketPermission 인스턴스화의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="36c098cf6aca5d8c3fbc6cb98ed6837a000d6be3" translate="yes" xml:space="preserve">
          <source>Examples of Using EventHandler</source>
          <target state="translated">EventHandler 사용 예</target>
        </trans-unit>
        <trans-unit id="1e065094a7693ce5a3fbf784e28f012e86464afe" translate="yes" xml:space="preserve">
          <source>Examples of Week based Years</source>
          <target state="translated">주별 연도의 예</target>
        </trans-unit>
        <trans-unit id="a20588487b5b9b143549e52fe5959b985b88733c" translate="yes" xml:space="preserve">
          <source>Examples of WeekFields</source>
          <target state="translated">WeekFields의 예</target>
        </trans-unit>
        <trans-unit id="18dc9b7ce12c48b3086f36028e31cfaf99b24c75" translate="yes" xml:space="preserve">
          <source>Examples of WeekFields for week-based-year</source>
          <target state="translated">주별 연도의 주 필드 예</target>
        </trans-unit>
        <trans-unit id="400581f06c1f2d2343395f06fb71bea7e101cd8e" translate="yes" xml:space="preserve">
          <source>Examples of associative operations include numeric addition, min, and max, and string concatenation.</source>
          <target state="translated">연관 연산의 예에는 숫자 추가, 최소 및 최대 및 문자열 연결이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="465c7b61dabbb3ecff3844e189702388fe041a85" translate="yes" xml:space="preserve">
          <source>Examples of expected usage:</source>
          <target state="translated">예상 사용법의 예 :</target>
        </trans-unit>
        <trans-unit id="3c4686353f35d2c81851e074f558263240dbec12" translate="yes" xml:space="preserve">
          <source>Examples of locale-sensitive and 1:M case mappings are in the following table.</source>
          <target state="translated">로케일 구분 및 1 : M 대소 문자 맵핑의 예는 다음 표에 있습니다.</target>
        </trans-unit>
        <trans-unit id="6150a8c3a39b6d5ae535fe8a98df167d5b3716d4" translate="yes" xml:space="preserve">
          <source>Examples of lowercase mappings are in the following table:</source>
          <target state="translated">소문자 매핑의 예는 다음 표에 있습니다.</target>
        </trans-unit>
        <trans-unit id="1cfd6dbcb110950faae5500b60c21afa1b81cb21" translate="yes" xml:space="preserve">
          <source>Examples of mutable reduction operations include: accumulating elements into a &lt;code&gt;Collection&lt;/code&gt;; concatenating strings using a &lt;code&gt;StringBuilder&lt;/code&gt;; computing summary information about elements such as sum, min, max, or average; computing &quot;pivot table&quot; summaries such as &quot;maximum valued transaction by seller&quot;, etc. The class &lt;a href=&quot;collectors&quot;&gt;&lt;code&gt;Collectors&lt;/code&gt;&lt;/a&gt; provides implementations of many common mutable reductions.</source>
          <target state="translated">변경 가능한 감소 연산의 예는 다음을 포함한다 : 요소를 &lt;code&gt;Collection&lt;/code&gt; 으로 축적하는 것 ; 사용하여 A 문자열 연접 &lt;code&gt;StringBuilder&lt;/code&gt; ; 합, 최소, 최대 또는 평균과 같은 요소들에 대한 요약 정보를 계산하는 단계; &quot;판매자에 의한 최대 가치 거래&quot;등과 같은 &quot;피벗 테이블&quot;요약 계산. &lt;a href=&quot;collectors&quot;&gt; &lt;code&gt;Collectors&lt;/code&gt; &lt;/a&gt; 클래스 는 여러 가지 일반적인 변경 가능한 축소의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d70c68c69e68a5d7a2c11993896332854469c9c6" translate="yes" xml:space="preserve">
          <source>Examples of these limits include client and server configuration limits such as size, time, number of hops, etc.</source>
          <target state="translated">이러한 제한의 예로는 크기, 시간, 홉 수 등과 같은 클라이언트 및 서버 구성 제한이 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
