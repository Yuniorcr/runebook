<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="cae113d7239645cef8fa002ded8bf09d0075fdc0" translate="yes" xml:space="preserve">
          <source>Binary names</source>
          <target state="translated">이진 이름</target>
        </trans-unit>
        <trans-unit id="f24d69fe11a1bc88a738e15194d757fdd43902ef" translate="yes" xml:space="preserve">
          <source>BinaryExponent:</source>
          <target state="translated">BinaryExponent:</target>
        </trans-unit>
        <trans-unit id="bf84adb45596fd0a3010cb7a7b4c6821819436a9" translate="yes" xml:space="preserve">
          <source>BinaryExponentIndicator SignedInteger</source>
          <target state="translated">이항 지수 표시 기호</target>
        </trans-unit>
        <trans-unit id="a6316c6126e0497a7316eb921f6b7cb2299e10cf" translate="yes" xml:space="preserve">
          <source>BinaryExponentIndicator:</source>
          <target state="translated">BinaryExponentIndicator:</target>
        </trans-unit>
        <trans-unit id="f85c226f32fd781905d42235823e2fd6ba7c7a6f" translate="yes" xml:space="preserve">
          <source>BinaryOperator</source>
          <target state="translated">BinaryOperator</target>
        </trans-unit>
        <trans-unit id="10926b09d660024b5412c421ffb0fbe1561aee15" translate="yes" xml:space="preserve">
          <source>BinaryOperator.maxBy()</source>
          <target state="translated">BinaryOperator.maxBy()</target>
        </trans-unit>
        <trans-unit id="3bdf2707777efea7426d689f79a8b5d7dcae0461" translate="yes" xml:space="preserve">
          <source>BinaryOperator.minBy()</source>
          <target state="translated">BinaryOperator.minBy()</target>
        </trans-unit>
        <trans-unit id="804321fea15ea1f0b03a7c7b99275a044b7b5129" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr</source>
          <target state="translated">BinaryRefAddr</target>
        </trans-unit>
        <trans-unit id="51dc78053568164fd437b0464ce3fe6f2650ca58" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr.equals()</source>
          <target state="translated">BinaryRefAddr.equals()</target>
        </trans-unit>
        <trans-unit id="34dfe87a3c49c7896d6baae29a09d79c7c2446f4" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr.getContent()</source>
          <target state="translated">BinaryRefAddr.getContent()</target>
        </trans-unit>
        <trans-unit id="a63a1c31f1a7322923aa4ce681bfadf598fe2ea4" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr.hashCode()</source>
          <target state="translated">BinaryRefAddr.hashCode()</target>
        </trans-unit>
        <trans-unit id="4e9a802ce781c09c0ed768eca63a1f5a8b96683f" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr.toString()</source>
          <target state="translated">BinaryRefAddr.toString()</target>
        </trans-unit>
        <trans-unit id="436d12920901d87d775d64537cf0c1169bfcf32c" translate="yes" xml:space="preserve">
          <source>BinaryTree</source>
          <target state="translated">BinaryTree</target>
        </trans-unit>
        <trans-unit id="3fd8d2c8470085fcfe29d3eaffaf67d4fee23b97" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along one edge.</source>
          <target state="translated">한 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 제본합니다.</target>
        </trans-unit>
        <trans-unit id="4beff3aa638b7033a21ebe2b37848fcc9d120852" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along one edge. The exact number and placement of the staples is implementation- and/or site- defined.</source>
          <target state="translated">한 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 바인딩합니다. 스테이플의 정확한 수와 배치는 구현 및 / 또는 사이트 정의입니다.</target>
        </trans-unit>
        <trans-unit id="f6b690b826fd685ed81176e15ae958ddc07ddee4" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the bottom edge.</source>
          <target state="translated">아래쪽 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 제본합니다.</target>
        </trans-unit>
        <trans-unit id="38b15caad1f8cccfdc90a44e804f0aeda92e244a" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the bottom edge. The exact number and placement of the staples is implementation- and/or site-defined.</source>
          <target state="translated">아래쪽 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 바인딩합니다. 스테이플의 정확한 수와 배치는 구현 및 / 또는 사이트 정의입니다.</target>
        </trans-unit>
        <trans-unit id="838b702478b10f8307e8f4471fe828a9505c262d" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the left edge.</source>
          <target state="translated">왼쪽 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 제본합니다.</target>
        </trans-unit>
        <trans-unit id="798d016fab287329709447cc30c503c54c7f2529" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the left edge. The exact number and placement of the staples is implementation- and/or site-defined.</source>
          <target state="translated">왼쪽 가장자리를 따라 문서를 하나 이상의 스테이플 (와이어 스티치)로 묶습니다. 스테이플의 정확한 수와 배치는 구현 및 / 또는 사이트 정의입니다.</target>
        </trans-unit>
        <trans-unit id="9c9cf0120f25da18225585ad0a7f0047fbe5d69d" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the middle fold.</source>
          <target state="translated">문서를 가운데 접기를 따라 하나 이상의 스테이플 (와이어 스티치)로 묶습니다.</target>
        </trans-unit>
        <trans-unit id="74977c9b21caf07f2209906041934254c252a710" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the middle fold. The exact number and placement of the staples and the middle fold is implementation- and/or site-defined.</source>
          <target state="translated">중간 접기를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 묶습니다. 스테이플 및 중간 접기의 정확한 수와 배치는 구현 및 / 또는 사이트 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="76fd44136ff68d0663699f167e8f861ce39ebba9" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the right edge.</source>
          <target state="translated">오른쪽 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 제본합니다.</target>
        </trans-unit>
        <trans-unit id="315fa937f46a56545a7fc022344a87b00068bbec" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the right edge. The exact number and placement of the staples is implementation- and/or site-defined.</source>
          <target state="translated">오른쪽 가장자리를 따라 문서를 하나 이상의 스테이플 (와이어 스티치)로 묶습니다. 스테이플의 정확한 수와 배치는 구현 및 / 또는 사이트 정의입니다.</target>
        </trans-unit>
        <trans-unit id="beae49a45b6529d85821fee13e30e744b23c7696" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the top edge.</source>
          <target state="translated">상단 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 제본합니다.</target>
        </trans-unit>
        <trans-unit id="97f703d6e23a578b9613b26e1444ed005f1d9cc1" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the top edge. The exact number and placement of the staples is implementation- and/or site-defined.</source>
          <target state="translated">상단 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 묶습니다. 스테이플의 정확한 수와 배치는 구현 및 / 또는 사이트 정의입니다.</target>
        </trans-unit>
        <trans-unit id="3007e602358fe575b7c354349ed237cd5f2f0677" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples in the bottom left corner.</source>
          <target state="translated">왼쪽 하단에서 하나 이상의 스테이플로 문서를 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="a48c8503fc77165ebe222416cffd1be391cd7669" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples in the bottom right corner.</source>
          <target state="translated">오른쪽 하단에 하나 이상의 스테이플이있는 문서를 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="ca91d34daa2b4be2b04166f0d637369d33da7169" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples in the top left corner.</source>
          <target state="translated">왼쪽 상단에 하나 이상의 스테이플이있는 문서를 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="6e5e362e517d0d09949a466ad90f83d411070627" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples in the top right corner.</source>
          <target state="translated">오른쪽 상단 모서리에 하나 이상의 스테이플이있는 문서를 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="b6b5577f15763961656b47610dfcdefd5de09226" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples.</source>
          <target state="translated">하나 이상의 스테이플을 사용하여 문서를 제본합니다.</target>
        </trans-unit>
        <trans-unit id="aafde1c01756df2a3d71f7d896cb8bc0a8070631" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples. The exact number and placement of the staples is site-defined.</source>
          <target state="translated">하나 이상의 스테이플로 문서를 바인딩합니다. 스테이플의 정확한 수와 배치는 현장에서 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="5bb2d33426033b0a68e3b6c81a0bb7f9176840fc" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with two staples (wire stitches) along the bottom edge assuming a portrait document (see above).</source>
          <target state="translated">세로 문서를 가정 할 때 아래쪽 가장자리를 따라 두 개의 스테이플 (와이어 스티치)로 문서를 묶습니다 (위 참조).</target>
        </trans-unit>
        <trans-unit id="ae04bf08d39d9e67d508d4e9d878f30f1c55e0a8" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with two staples (wire stitches) along the left edge assuming a portrait document (see above).</source>
          <target state="translated">세로 문서를 가정하고 왼쪽 가장자리를 따라 두 개의 스테이플 (와이어 스티치)로 문서를 바인딩합니다 (위 참조).</target>
        </trans-unit>
        <trans-unit id="0c73748634274f11b9aedd0994a877bcb259dfc6" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with two staples (wire stitches) along the right edge assuming a portrait document (see above).</source>
          <target state="translated">세로 문서를 가정하면 오른쪽 가장자리를 따라 두 개의 스테이플 (와이어 스티치)로 문서를 바인딩합니다 (위 참조).</target>
        </trans-unit>
        <trans-unit id="40d190abf0b705cdc115b3f2a14434a081114d2a" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with two staples (wire stitches) along the top edge assuming a portrait document (see above).</source>
          <target state="translated">세로 문서를 가정 할 때 상단 가장자리를 따라 두 개의 스테이플 (와이어 스티치)로 문서를 묶습니다 (위 참조).</target>
        </trans-unit>
        <trans-unit id="3d07a6a38e603a1fe7c45d2b07e74159376727f5" translate="yes" xml:space="preserve">
          <source>BindException</source>
          <target state="translated">BindException</target>
        </trans-unit>
        <trans-unit id="7f0043e684cc2e548822e45bee14ea4c4673e262" translate="yes" xml:space="preserve">
          <source>Binding</source>
          <target state="translated">Binding</target>
        </trans-unit>
        <trans-unit id="21e7eedef7ec3c19471bbbbe45b4049bb9f4573a" translate="yes" xml:space="preserve">
          <source>Binding record for creating key bindings.</source>
          <target state="translated">키 바인딩을 만들기위한 바인딩 레코드입니다.</target>
        </trans-unit>
        <trans-unit id="f2f0e8426d50dd004936526ec4a53092d7f639c9" translate="yes" xml:space="preserve">
          <source>Binding.getClassName()</source>
          <target state="translated">Binding.getClassName()</target>
        </trans-unit>
        <trans-unit id="3854f635fcab11a97abff363358798981a3a084c" translate="yes" xml:space="preserve">
          <source>Binding.getObject()</source>
          <target state="translated">Binding.getObject()</target>
        </trans-unit>
        <trans-unit id="d109964b8b2b7ce2b0414e69cfeccb938c845a9c" translate="yes" xml:space="preserve">
          <source>Binding.setObject()</source>
          <target state="translated">Binding.setObject()</target>
        </trans-unit>
        <trans-unit id="2088e3252efffb5823d0e7e2d4e40155148df170" translate="yes" xml:space="preserve">
          <source>Binding.toString()</source>
          <target state="translated">Binding.toString()</target>
        </trans-unit>
        <trans-unit id="d29c6c44ce6249ba3ff3fe3b97c98aa7378d9cb1" translate="yes" xml:space="preserve">
          <source>BindingPatternTree</source>
          <target state="translated">BindingPatternTree</target>
        </trans-unit>
        <trans-unit id="967382f86044b6efc91dfee8f4e2b4ed941211cd" translate="yes" xml:space="preserve">
          <source>Bindings</source>
          <target state="translated">Bindings</target>
        </trans-unit>
        <trans-unit id="af3f9c9a47da695b2b481cf7dd1056704e860dc4" translate="yes" xml:space="preserve">
          <source>Bindings.containsKey()</source>
          <target state="translated">Bindings.containsKey()</target>
        </trans-unit>
        <trans-unit id="665186311739d7091d10da9425d926cbea92c7b0" translate="yes" xml:space="preserve">
          <source>Bindings.get()</source>
          <target state="translated">Bindings.get()</target>
        </trans-unit>
        <trans-unit id="ad1d10802dae6a5401ec2ac2da0d260f385be05b" translate="yes" xml:space="preserve">
          <source>Bindings.put()</source>
          <target state="translated">Bindings.put()</target>
        </trans-unit>
        <trans-unit id="0b5433c80f15e4df4db9adbe0714c54a9c043552" translate="yes" xml:space="preserve">
          <source>Bindings.putAll()</source>
          <target state="translated">Bindings.putAll()</target>
        </trans-unit>
        <trans-unit id="82a2df7e4c1180f788f22af292c488ca5f913993" translate="yes" xml:space="preserve">
          <source>Bindings.remove()</source>
          <target state="translated">Bindings.remove()</target>
        </trans-unit>
        <trans-unit id="9e4372fbb83968e4a85a9ef36d53695e580f9853" translate="yes" xml:space="preserve">
          <source>Binds a URI to the default namespace This URI is bound in the scope of the current START_ELEMENT / END_ELEMENT pair.</source>
          <target state="translated">URI를 기본 네임 스페이스에 바인딩합니다.이 URI는 현재 START_ELEMENT / END_ELEMENT 쌍의 범위에 바인딩됩니다.</target>
        </trans-unit>
        <trans-unit id="380a180b5315e2c5ebea3c26086774bfa62c00d2" translate="yes" xml:space="preserve">
          <source>Binds a URI to the default namespace This URI is bound in the scope of the current START_ELEMENT / END_ELEMENT pair. If this method is called before a START_ELEMENT has been written the uri is bound in the root scope.</source>
          <target state="translated">URI를 기본 네임 스페이스에 바인딩합니다.이 URI는 현재 START_ELEMENT / END_ELEMENT 쌍의 범위에 바인딩됩니다. START_ELEMENT가 작성되기 전에이 메서드가 호출되면 uri가 루트 범위에 바인딩됩니다.</target>
        </trans-unit>
        <trans-unit id="af6f6c6182928c86d0bbf37152327632c16c5123" translate="yes" xml:space="preserve">
          <source>Binds a currently unbound HttpServer to the given address and port number.</source>
          <target state="translated">현재 바인딩되지 않은 HttpServer를 지정된 주소 및 포트 번호에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="cacdd723706cc38781d66f4229933fcde9cc69ea" translate="yes" xml:space="preserve">
          <source>Binds a currently unbound HttpServer to the given address and port number. A maximum backlog can also be specified. This is the maximum number of queued incoming connections to allow on the listening socket. Queued TCP connections exceeding this limit may be rejected by the TCP implementation.</source>
          <target state="translated">현재 바인딩되지 않은 HttpServer를 지정된 주소 및 포트 번호에 바인딩합니다. 최대 백 로그도 지정할 수 있습니다. 청취 소켓에서 허용 할 대기중인 수신 연결의 최대 수입니다. 이 제한을 초과하는 대기중인 TCP 연결은 TCP 구현에서 거부 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6008db77bc77f4b1f95fa6a20dd4de6be7b2ccd" translate="yes" xml:space="preserve">
          <source>Binds a datagram socket to a local port and address.</source>
          <target state="translated">데이터 그램 소켓을 로컬 포트 ​​및 주소에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="657d990e4c2a8c45525fed295a955698a0fa1fae" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes, overwriting any existing binding.</source>
          <target state="translated">연결된 속성과 함께 이름을 개체에 바인딩하여 기존 바인딩을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="bef50f700df7fd08b141ef3efe129a3ed3fef33e" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes, overwriting any existing binding. If &lt;code&gt;attrs&lt;/code&gt; is null and &lt;code&gt;obj&lt;/code&gt; is a &lt;code&gt;DirContext&lt;/code&gt;, the attributes from &lt;code&gt;obj&lt;/code&gt; are used. If &lt;code&gt;attrs&lt;/code&gt; is null and &lt;code&gt;obj&lt;/code&gt; is not a &lt;code&gt;DirContext&lt;/code&gt;, any existing attributes associated with the object already bound in the directory remain unchanged. If &lt;code&gt;attrs&lt;/code&gt; is non-null, any existing attributes associated with the object already bound in the directory are removed and &lt;code&gt;attrs&lt;/code&gt; is associated with the named object. If &lt;code&gt;obj&lt;/code&gt; is a &lt;code&gt;DirContext&lt;/code&gt; and &lt;code&gt;attrs&lt;/code&gt; is non-null, the attributes of &lt;code&gt;obj&lt;/code&gt; are ignored.</source>
          <target state="translated">기존 바인딩을 덮어 쓰면서 연관된 속성과 함께 이름을 오브젝트에 바인드합니다. 경우 &lt;code&gt;attrs&lt;/code&gt; 에가 null로 &lt;code&gt;obj&lt;/code&gt; 가 A는 &lt;code&gt;DirContext&lt;/code&gt; 의 에서 속성 &lt;code&gt;obj&lt;/code&gt; 사용된다. 경우 &lt;code&gt;attrs&lt;/code&gt; 에가 null로 &lt;code&gt;obj&lt;/code&gt; 가 하지 않은 것입니다 &lt;code&gt;DirContext&lt;/code&gt; 의 이미 디렉토리에 바인드 된 오브젝트에 관련 지을 수 있었던 기존의 속성은 변경되지 않습니다. &lt;code&gt;attrs&lt;/code&gt; 가 널이 아닌 경우 디렉토리에 이미 바인드 된 오브젝트와 연관된 기존 속성이 제거되고 &lt;code&gt;attrs&lt;/code&gt; 는 이름 지정된 오브젝트와 연관됩니다. 경우 &lt;code&gt;obj&lt;/code&gt; A는 &lt;code&gt;DirContext&lt;/code&gt; 의 및 &lt;code&gt;attrs&lt;/code&gt; null이 아닌 경우 &lt;code&gt;obj&lt;/code&gt; 의 속성 은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="c9f66ea94c9e9091c18f6d0cf5a274afb3873e62" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes, overwriting any existing binding. See &lt;a href=&quot;#rebind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)&quot;&gt;&lt;code&gt;rebind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">연결된 속성과 함께 이름을 개체에 바인딩하여 기존 바인딩을 덮어 씁니다. 자세한 내용은 &lt;a href=&quot;#rebind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)&quot;&gt; &lt;code&gt;rebind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="59057772ee7f82df12aec96d27729b43409cf252" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes, overwriting any existing binding. See &lt;a href=&quot;dircontext#rebind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt;&lt;code&gt;DirContext.rebind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">기존 바인딩을 덮어 쓰면서 연관된 속성과 함께 이름을 오브젝트에 바인드합니다. 자세한 내용은 &lt;a href=&quot;dircontext#rebind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt; &lt;code&gt;DirContext.rebind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7862b048f583975025e87ee113fdec4eb82eaa35" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes, overwriting any existing binding. See &lt;a href=&quot;dircontext#rebind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt;&lt;code&gt;rebind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">기존 바인딩을 덮어 쓰면서 연관된 속성과 함께 이름을 오브젝트에 바인드합니다. 자세한 내용은 &lt;a href=&quot;dircontext#rebind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt; &lt;code&gt;rebind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1f913f636d74702605561821a1918582c9bac431" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes.</source>
          <target state="translated">연관된 속성과 함께 이름을 오브젝트에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="a85c2b1328618075241decebedad63963121262d" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes. If &lt;code&gt;attrs&lt;/code&gt; is null, the resulting binding will have the attributes associated with &lt;code&gt;obj&lt;/code&gt; if &lt;code&gt;obj&lt;/code&gt; is a &lt;code&gt;DirContext&lt;/code&gt;, and no attributes otherwise. If &lt;code&gt;attrs&lt;/code&gt; is non-null, the resulting binding will have &lt;code&gt;attrs&lt;/code&gt; as its attributes; any attributes associated with &lt;code&gt;obj&lt;/code&gt; are ignored.</source>
          <target state="translated">연관된 속성과 함께 이름을 객체에 바인딩합니다. 경우 &lt;code&gt;attrs&lt;/code&gt; 에이 널 (null)이되면, 관련 지을 수 있었던 속성해야합니다 바인딩 결과 &lt;code&gt;obj&lt;/code&gt; 하는 경우 &lt;code&gt;obj&lt;/code&gt; 가 입니다 &lt;code&gt;DirContext&lt;/code&gt; 의 , 어떤 그렇지 않으면 속성. &lt;code&gt;attrs&lt;/code&gt; 가 널이 아닌 경우 결과 바인딩에는 속성으로 &lt;code&gt;attrs&lt;/code&gt; 이 있습니다 . &lt;code&gt;obj&lt;/code&gt; 와 관련된 모든 속성 은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="53b9a1986ca774b3b37e147ea238ae08deb8d1c3" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes. See &lt;a href=&quot;#bind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)&quot;&gt;&lt;code&gt;bind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">연관된 속성과 함께 이름을 오브젝트에 바인딩합니다. 자세한 내용은 &lt;a href=&quot;#bind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)&quot;&gt; &lt;code&gt;bind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5f423c84e3d9ac276cc54bbc7a1df2267430532e" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes. See &lt;a href=&quot;dircontext#bind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt;&lt;code&gt;DirContext.bind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">연관된 속성과 함께 이름을 객체에 바인딩합니다. 자세한 내용은 &lt;a href=&quot;dircontext#bind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt; &lt;code&gt;DirContext.bind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="49c9411a96668375307df7006b94b502613c5398" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes. See &lt;a href=&quot;dircontext#bind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt;&lt;code&gt;bind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">연관된 속성과 함께 이름을 객체에 바인딩합니다. 자세한 내용은 &lt;a href=&quot;dircontext#bind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt; &lt;code&gt;bind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4a162cb7818dd5afc9aa8847fd5982c8ac0bc166" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, overwriting any existing binding.</source>
          <target state="translated">개체에 이름을 바인딩하여 기존 바인딩을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="2a47974e2946298adc2c1e8785d1a2b146c5866f" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, overwriting any existing binding. All intermediate contexts and the target context (that named by all but terminal atomic component of the name) must already exist.</source>
          <target state="translated">객체에 이름을 바인딩하여 기존 바인딩을 덮어 씁니다. 모든 중간 컨텍스트와 대상 컨텍스트 (이름의 터미널 원자 구성 요소를 제외한 이름)는 이미 존재해야합니다.</target>
        </trans-unit>
        <trans-unit id="d8760cbff1f4fe7a56b4aa0e9507ebdd24ad740e" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, overwriting any existing binding. See &lt;a href=&quot;#rebind(javax.naming.Name,java.lang.Object)&quot;&gt;&lt;code&gt;rebind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">개체에 이름을 바인딩하여 기존 바인딩을 덮어 씁니다. 자세한 내용은 &lt;a href=&quot;#rebind(javax.naming.Name,java.lang.Object)&quot;&gt; &lt;code&gt;rebind(Name, Object)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="38c4e144c8baee02925ff9468221c2e31a98a0ab" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, overwriting any existing binding. See &lt;a href=&quot;context#rebind-javax.naming.Name-java.lang.Object-&quot;&gt;&lt;code&gt;Context.rebind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">객체에 이름을 바인딩하여 기존 바인딩을 덮어 씁니다. 자세한 내용은 &lt;a href=&quot;context#rebind-javax.naming.Name-java.lang.Object-&quot;&gt; &lt;code&gt;Context.rebind(Name, Object)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1ec5f3c3d6f354aa52cf76d2f081d51de412e044" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, overwriting any existing binding. See &lt;a href=&quot;context#rebind-javax.naming.Name-java.lang.Object-&quot;&gt;&lt;code&gt;rebind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">객체에 이름을 바인딩하여 기존 바인딩을 덮어 씁니다. 자세한 내용은 &lt;a href=&quot;context#rebind-javax.naming.Name-java.lang.Object-&quot;&gt; &lt;code&gt;rebind(Name, Object)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="251f87ab2bf6a98eed5fa1c3b477ba9f506bc604" translate="yes" xml:space="preserve">
          <source>Binds a name to an object.</source>
          <target state="translated">이름을 개체에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="e5e64d34b4cdb6b99609a59ad25d1a3ad519a414" translate="yes" xml:space="preserve">
          <source>Binds a name to an object. All intermediate contexts and the target context (that named by all but terminal atomic component of the name) must already exist.</source>
          <target state="translated">객체에 이름을 바인딩합니다. 모든 중간 컨텍스트와 대상 컨텍스트 (이름의 터미널 원자 구성 요소를 제외한 이름)는 이미 존재해야합니다.</target>
        </trans-unit>
        <trans-unit id="ab246eee87fbcd91de788fc5d2edfd12f10c365c" translate="yes" xml:space="preserve">
          <source>Binds a name to an object. See &lt;a href=&quot;#bind(javax.naming.Name,java.lang.Object)&quot;&gt;&lt;code&gt;bind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">이름을 개체에 바인딩합니다. 자세한 내용은 &lt;a href=&quot;#bind(javax.naming.Name,java.lang.Object)&quot;&gt; &lt;code&gt;bind(Name, Object)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="22f07ab7847985e8e60fec2932f80e97a99c0603" translate="yes" xml:space="preserve">
          <source>Binds a name to an object. See &lt;a href=&quot;context#bind-javax.naming.Name-java.lang.Object-&quot;&gt;&lt;code&gt;Context.bind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">객체에 이름을 바인딩합니다. 자세한 내용은 &lt;a href=&quot;context#bind-javax.naming.Name-java.lang.Object-&quot;&gt; &lt;code&gt;Context.bind(Name, Object)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1fe532abc5ebc2577888e073f9a9954b0c757df1" translate="yes" xml:space="preserve">
          <source>Binds a name to an object. See &lt;a href=&quot;context#bind-javax.naming.Name-java.lang.Object-&quot;&gt;&lt;code&gt;bind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">객체에 이름을 바인딩합니다. 자세한 내용은 &lt;a href=&quot;context#bind-javax.naming.Name-java.lang.Object-&quot;&gt; &lt;code&gt;bind(Name, Object)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="55057edf02800de7f787f89d93f937b061321815" translate="yes" xml:space="preserve">
          <source>Binds a new name to the object bound to an old name, and unbinds the old name.</source>
          <target state="translated">새 이름을 이전 이름에 바인딩 된 개체에 바인딩하고 이전 이름을 바인딩 해제합니다.</target>
        </trans-unit>
        <trans-unit id="ad13bf0cb1e9c230eb4c5a12b92482517b9f6640" translate="yes" xml:space="preserve">
          <source>Binds a new name to the object bound to an old name, and unbinds the old name. Both names are relative to this context. Any attributes associated with the old name become associated with the new name. Intermediate contexts of the old name are not changed.</source>
          <target state="translated">이전 이름에 바인딩 된 개체에 새 이름을 바인딩하고 이전 이름을 바인딩 해제합니다. 두 이름 모두이 문맥과 관련이 있습니다. 이전 이름과 관련된 속성은 새 이름과 연결됩니다. 이전 이름의 중간 컨텍스트는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cbf274dfc1ebc1037d58c1b667671334279f481e" translate="yes" xml:space="preserve">
          <source>Binds a new name to the object bound to an old name, and unbinds the old name. See &lt;a href=&quot;#rename(javax.naming.Name,javax.naming.Name)&quot;&gt;&lt;code&gt;rename(Name, Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">새 이름을 이전 이름에 바인딩 된 개체에 바인딩하고 이전 이름을 바인딩 해제합니다. 자세한 내용은 &lt;a href=&quot;#rename(javax.naming.Name,javax.naming.Name)&quot;&gt; &lt;code&gt;rename(Name, Name)&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bdf6640303dc99ed775550a3779d06408bd0b49e" translate="yes" xml:space="preserve">
          <source>Binds a new name to the object bound to an old name, and unbinds the old name. See &lt;a href=&quot;context#rename-javax.naming.Name-javax.naming.Name-&quot;&gt;&lt;code&gt;Context.rename(Name, Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">이전 이름에 바인딩 된 개체에 새 이름을 바인딩하고 이전 이름을 바인딩 해제합니다. 자세한 내용은 &lt;a href=&quot;context#rename-javax.naming.Name-javax.naming.Name-&quot;&gt; &lt;code&gt;Context.rename(Name, Name)&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2f6495aa38d4725a36a720ebc6469d45df032586" translate="yes" xml:space="preserve">
          <source>Binds a new name to the object bound to an old name, and unbinds the old name. See &lt;a href=&quot;context#rename-javax.naming.Name-javax.naming.Name-&quot;&gt;&lt;code&gt;rename(Name, Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">이전 이름에 바인딩 된 개체에 새 이름을 바인딩하고 이전 이름을 바인딩 해제합니다. 자세한 내용은 &lt;a href=&quot;context#rename-javax.naming.Name-javax.naming.Name-&quot;&gt; &lt;code&gt;rename(Name, Name)&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5b4e28023e25c3e90449ef6ab97fe0ba935a3048" translate="yes" xml:space="preserve">
          <source>Binds a remote reference to the specified &lt;code&gt;name&lt;/code&gt; in this registry.</source>
          <target state="translated">이 레지스트리에 지정된 &lt;code&gt;name&lt;/code&gt; 에 원격 참조를 바인드합니다 .</target>
        </trans-unit>
        <trans-unit id="f4ccecc2f1995a168a2e90631f368757ba24ced1" translate="yes" xml:space="preserve">
          <source>Binds a value &lt;code&gt;x&lt;/code&gt; to the first argument of a method handle, without invoking it.</source>
          <target state="translated">값 &lt;code&gt;x&lt;/code&gt; 를 호출하지 않고 메서드 핸들의 첫 번째 인수에 바인딩 합니다.</target>
        </trans-unit>
        <trans-unit id="d709e7ff6c01b64e185f7177232e54cd2748d562" translate="yes" xml:space="preserve">
          <source>Binds a value &lt;code&gt;x&lt;/code&gt; to the first argument of a method handle, without invoking it. The new method handle adapts, as its</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 를 호출하지 않고 메소드 핸들의 첫 번째 인수에 값 x 를 바인딩 합니다. 새로운 메소드 핸들은</target>
        </trans-unit>
        <trans-unit id="71c3e052fa37c0007ee3dd0c54068d206ac64534" translate="yes" xml:space="preserve">
          <source>Binds the &lt;code&gt;ServerSocket&lt;/code&gt; to a specific address (IP address and port number).</source>
          <target state="translated">&lt;code&gt;ServerSocket&lt;/code&gt; 을 특정 주소 (IP 주소 및 포트 번호)에 바인딩합니다 .</target>
        </trans-unit>
        <trans-unit id="8450e6d5432f147163b776bc66eea8817ac7f1c9" translate="yes" xml:space="preserve">
          <source>Binds the channel's socket to a local address and configures the socket to listen for associations.</source>
          <target state="translated">채널의 소켓을 로컬 주소에 바인딩하고 연결을 수신하도록 소켓을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="d5340b21c5bcf30743e0e17d48b8bd38ada396ca" translate="yes" xml:space="preserve">
          <source>Binds the channel's socket to a local address and configures the socket to listen for connections.</source>
          <target state="translated">채널의 소켓을 로컬 주소에 바인딩하고 연결을 수신하도록 소켓을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="5f9ea286a1c02790ef5e00a40addb6b03b0a5077" translate="yes" xml:space="preserve">
          <source>Binds the channel's socket to a local address.</source>
          <target state="translated">채널의 소켓을 로컬 주소에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="3673d3a19e58f7c7db70887801bcee601fef3d80" translate="yes" xml:space="preserve">
          <source>Binds the socket to a local address.</source>
          <target state="translated">소켓을 로컬 주소에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="740db0921542bd6df9a7c4748257bb47830db756" translate="yes" xml:space="preserve">
          <source>Binds the specified &lt;code&gt;name&lt;/code&gt; to a remote object.</source>
          <target state="translated">지정된 &lt;code&gt;name&lt;/code&gt; 을 원격 개체에 바인딩 합니다.</target>
        </trans-unit>
        <trans-unit id="37e4755756174d1db83cfc7e42a797bc45b05862" translate="yes" xml:space="preserve">
          <source>Binds the specified &lt;code&gt;value&lt;/code&gt; object into the session's application layer data with the given &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;value&lt;/code&gt; 객체를 지정된 &lt;code&gt;name&lt;/code&gt; 으로 세션의 응용 프로그램 계층 데이터에 바인딩합니다 .</target>
        </trans-unit>
        <trans-unit id="124690239bd8a65db1488a68d66c6d5ab4897d0c" translate="yes" xml:space="preserve">
          <source>Binds this DatagramSocket to a specific address and port.</source>
          <target state="translated">이 DatagramSocket을 특정 주소 및 포트에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="f72819abf0c6fe30fe4545b6029d3fad576d29e2" translate="yes" xml:space="preserve">
          <source>Binds this socket to the specified local IP address and port number.</source>
          <target state="translated">이 소켓을 지정된 로컬 IP 주소 및 포트 번호에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="eb9bf65dbb672320688439f4fdd91a067e55da32" translate="yes" xml:space="preserve">
          <source>Bit 31 (the bit that is selected by the mask &lt;code&gt;0x80000000&lt;/code&gt;) represents the sign of the floating-point number. Bits 30-23 (the bits that are selected by the mask &lt;code&gt;0x7f800000&lt;/code&gt;) represent the exponent. Bits 22-0 (the bits that are selected by the mask &lt;code&gt;0x007fffff&lt;/code&gt;) represent the significand (sometimes called the mantissa) of the floating-point number.</source>
          <target state="translated">비트 31 (마스크 &lt;code&gt;0x80000000&lt;/code&gt; 에 의해 선택된 비트 )은 부동 소수점 숫자의 부호를 나타냅니다. 비트 30-23 (마스크 &lt;code&gt;0x7f800000&lt;/code&gt; 에 의해 선택된 비트 )은 지수를 나타냅니다. 비트 22-0 (마스크 &lt;code&gt;0x007fffff&lt;/code&gt; 에 의해 선택된 비트 )은 부동 소수점 숫자의 의미 (때로는 가수라고도 함)를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="73cf6da9b8bc4c7b8afc1a74617a7d656eeaff51" translate="yes" xml:space="preserve">
          <source>Bit 63 (the bit that is selected by the mask &lt;code&gt;0x8000000000000000L&lt;/code&gt;) represents the sign of the floating-point number. Bits 62-52 (the bits that are selected by the mask &lt;code&gt;0x7ff0000000000000L&lt;/code&gt;) represent the exponent. Bits 51-0 (the bits that are selected by the mask &lt;code&gt;0x000fffffffffffffL&lt;/code&gt;) represent the significand (sometimes called the mantissa) of the floating-point number.</source>
          <target state="translated">비트 63 (마스크 &lt;code&gt;0x8000000000000000L&lt;/code&gt; 에 의해 선택된 비트 )은 부동 소수점 숫자의 부호를 나타냅니다. 비트 62-52 (마스크 &lt;code&gt;0x7ff0000000000000L&lt;/code&gt; 에 의해 선택된 비트 )는 지수를 나타냅니다. 비트 51-0 (마스크 &lt;code&gt;0x000fffffffffffffL&lt;/code&gt; 에 의해 선택된 비트 )은 부동 소수점 숫자의 유효 값 (때때로 가수라고 함)을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="453ffe06e1f177025b7df438053e3e95f5b987e2" translate="yes" xml:space="preserve">
          <source>Bit Values</source>
          <target state="translated">비트 값</target>
        </trans-unit>
        <trans-unit id="1b50c761d3d767e2454af03c53933f6369efdd51" translate="yes" xml:space="preserve">
          <source>Bit data may be accumulated in memory indefinitely, until &lt;code&gt;flushBefore&lt;/code&gt; is called. At that time, all bit data prior to the flushed position will be written.</source>
          <target state="translated">&lt;code&gt;flushBefore&lt;/code&gt; 가 호출 될 때까지 비트 데이터는 메모리에 무기한으로 누적 될 수 있습니다 . 이때 플러시 된 위치 이전의 모든 비트 데이터가 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="91410f5062503a2f98f586d004eb2c78a1680c89" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag.</source>
          <target state="translated">ObjectStreamClass 플래그의 비트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="05563058e628aace24cda34cd8eb0e4c583c470c" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates Externalizable data written in Block Data mode. Added for PROTOCOL_VERSION_2.</source>
          <target state="translated">ObjectStreamClass 플래그의 비트 마스크입니다. 블록 데이터 모드로 작성된 외부화 가능 데이터를 나타냅니다. PROTOCOL_VERSION_2에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="980e6444082734f84ce692d0ac5d54ad5f699b57" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates a Serializable class defines its own writeObject method.</source>
          <target state="translated">ObjectStreamClass 플래그의 비트 마스크입니다. Serializable 클래스가 독자적인 writeObject 메소드를 정의하는 것을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f92fed8e99fe69d8719835dab1ec09a124e85bd0" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates class is Externalizable.</source>
          <target state="translated">ObjectStreamClass 플래그의 비트 마스크입니다. 클래스가 외부화 가능함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="84d025954ac00dfa8ca9d8dc38de0c08ac7915c3" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates class is Serializable.</source>
          <target state="translated">ObjectStreamClass 플래그의 비트 마스크입니다. 클래스가 직렬화 가능함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="04c1cd65ff809622b82410f7c2d53da0f105f7a9" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates class is an enum type.</source>
          <target state="translated">ObjectStreamClass 플래그의 비트 마스크입니다. 클래스가 열거 형임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ecd33ea63e56de73ca3baa2621e5245a2a2785b9" translate="yes" xml:space="preserve">
          <source>Bit operations operate on a single bit of the two's-complement representation of their operand. If necessary, the operand is sign- extended so that it contains the designated bit. None of the single-bit operations can produce a BigInteger with a different sign from the BigInteger being operated on, as they affect only a single bit, and the &quot;infinite word size&quot; abstraction provided by this class ensures that there are infinitely many &quot;virtual sign bits&quot; preceding each BigInteger.</source>
          <target state="translated">비트 연산은 피연산자에 대한 2의 보수 표현 중 단일 비트에서 작동합니다. 필요한 경우 피연산자는 부호가 확장되어 지정된 비트를 포함합니다. 단일 비트 연산은 단일 비트에만 영향을 미치므로 BigInteger와 다른 부호를 가진 BigInteger를 생성 할 수 없으며이 클래스에서 제공하는 &quot;무한 워드 크기&quot;추상화는 무한히 많은 &quot;가상&quot;을 보장합니다. 각 BigInteger 앞에 부호 비트 &quot;가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d16f30188929980352ec86311340c5e85f211381" translate="yes" xml:space="preserve">
          <source>Bit operations operate on a single bit of the two's-complement representation of their operand. If necessary, the operand is sign- extended so that it contains the designated bit. None of the single-bit operations can produce a BigInteger with a different sign from the BigInteger being operated on, as they affect only a single bit, and the arbitrarily large abstraction provided by this class ensures that conceptually there are infinitely many &quot;virtual sign bits&quot; preceding each BigInteger.</source>
          <target state="translated">비트 연산은 피연산자의 2의 보수 표현의 단일 비트에서 작동합니다. 필요한 경우 피연산자는 지정된 비트를 포함하도록 부호 확장됩니다. 단일 비트 연산은 작동중인 BigInteger와 다른 부호를 가진 BigInteger를 생성 할 수 없습니다. 단일 비트에만 영향을 미치기 때문입니다.이 클래스에서 제공하는 임의의 큰 추상화는 개념적으로 무한히 많은 &quot;가상 부호 비트&quot;를 보장합니다. &quot;각 BigInteger 앞에 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6d1f07bf8c341ba08a4989abac17085fe06de8a" translate="yes" xml:space="preserve">
          <source>Bit operations operate on a single bit of the two's-complement representation of their operand. If necessary, the operand is sign-extended so that it contains the designated bit. None of the single-bit operations can produce a BigInteger with a different sign from the BigInteger being operated on, as they affect only a single bit, and the arbitrarily large abstraction provided by this class ensures that conceptually there are infinitely many &quot;virtual sign bits&quot; preceding each BigInteger.</source>
          <target state="translated">비트 연산은 피연산자의 2의 보수 표현의 단일 비트에서 작동합니다. 필요한 경우 피연산자는 지정된 비트를 포함하도록 부호 확장됩니다. 단일 비트 연산은 작동중인 BigInteger와 다른 부호를 가진 BigInteger를 생성 할 수 없습니다. 단일 비트에만 영향을 미치기 때문입니다.이 클래스에서 제공하는 임의의 큰 추상화는 개념적으로 무한히 많은 &quot;가상 부호 비트&quot;를 보장합니다. &quot;각 BigInteger 앞에 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8cd7716f7a5997d4efd153b8de6bda8ac575d3b" translate="yes" xml:space="preserve">
          <source>BitSet</source>
          <target state="translated">BitSet</target>
        </trans-unit>
        <trans-unit id="4c8e097ef5a9e0be43dffcccd18f1bc24d1753c6" translate="yes" xml:space="preserve">
          <source>BitSet.and()</source>
          <target state="translated">BitSet.and()</target>
        </trans-unit>
        <trans-unit id="fb60336f70f94007e406ccb00c92dec7638f45c5" translate="yes" xml:space="preserve">
          <source>BitSet.andNot()</source>
          <target state="translated">BitSet.andNot()</target>
        </trans-unit>
        <trans-unit id="4ddb12170cc0af1c8510dde93d3409b246d62576" translate="yes" xml:space="preserve">
          <source>BitSet.cardinality()</source>
          <target state="translated">BitSet.cardinality()</target>
        </trans-unit>
        <trans-unit id="679ac21a173b71844f1bfddb9122b7de6acfc229" translate="yes" xml:space="preserve">
          <source>BitSet.clear()</source>
          <target state="translated">BitSet.clear()</target>
        </trans-unit>
        <trans-unit id="a86d3f66e5586ed8aa965f3cbff2d1eafcad89b8" translate="yes" xml:space="preserve">
          <source>BitSet.clone()</source>
          <target state="translated">BitSet.clone()</target>
        </trans-unit>
        <trans-unit id="2f1018809af4fef2b11eeba7220754e3c8c55f0f" translate="yes" xml:space="preserve">
          <source>BitSet.equals()</source>
          <target state="translated">BitSet.equals()</target>
        </trans-unit>
        <trans-unit id="34a0e6b1e2786484f51df7d145b3149bc292e112" translate="yes" xml:space="preserve">
          <source>BitSet.flip()</source>
          <target state="translated">BitSet.flip()</target>
        </trans-unit>
        <trans-unit id="236e52eea6dd02143c7f694346a83021046ad45b" translate="yes" xml:space="preserve">
          <source>BitSet.get()</source>
          <target state="translated">BitSet.get()</target>
        </trans-unit>
        <trans-unit id="64d2f277a331da739d543986baaf6695e2106d92" translate="yes" xml:space="preserve">
          <source>BitSet.hashCode()</source>
          <target state="translated">BitSet.hashCode()</target>
        </trans-unit>
        <trans-unit id="4a80a58dc3add60c37954085b109de6111151c8e" translate="yes" xml:space="preserve">
          <source>BitSet.intersects()</source>
          <target state="translated">BitSet.intersects()</target>
        </trans-unit>
        <trans-unit id="93ed99d0c0620a61a0647883b7efab25e0d91d80" translate="yes" xml:space="preserve">
          <source>BitSet.isEmpty()</source>
          <target state="translated">BitSet.isEmpty()</target>
        </trans-unit>
        <trans-unit id="b0d5b6739df61dbad5479e7313573f2fa4ee7fce" translate="yes" xml:space="preserve">
          <source>BitSet.length()</source>
          <target state="translated">BitSet.length()</target>
        </trans-unit>
        <trans-unit id="714103c17ee82a0d18c7ee30f303cfa30b46ff38" translate="yes" xml:space="preserve">
          <source>BitSet.nextClearBit()</source>
          <target state="translated">BitSet.nextClearBit()</target>
        </trans-unit>
        <trans-unit id="80f1ba62dc5e4f614d26c5b6dc10e2cccbd1f067" translate="yes" xml:space="preserve">
          <source>BitSet.nextSetBit()</source>
          <target state="translated">BitSet.nextSetBit()</target>
        </trans-unit>
        <trans-unit id="b21cb83cfa3b52dc1eb29f44966b01f57c99fc6c" translate="yes" xml:space="preserve">
          <source>BitSet.or()</source>
          <target state="translated">BitSet.or()</target>
        </trans-unit>
        <trans-unit id="717efc7d633854520c6326e774d0633b722fb0f0" translate="yes" xml:space="preserve">
          <source>BitSet.previousClearBit()</source>
          <target state="translated">BitSet.previousClearBit()</target>
        </trans-unit>
        <trans-unit id="a19384b78577d60c447b7a61591f6e2a8e5b810d" translate="yes" xml:space="preserve">
          <source>BitSet.previousSetBit()</source>
          <target state="translated">BitSet.previousSetBit()</target>
        </trans-unit>
        <trans-unit id="889bcfe5f707ae49eeb05c27ef1a1dd1e66c7903" translate="yes" xml:space="preserve">
          <source>BitSet.set()</source>
          <target state="translated">BitSet.set()</target>
        </trans-unit>
        <trans-unit id="df7cace24802d62d3de2eb6ec448bc273b094f32" translate="yes" xml:space="preserve">
          <source>BitSet.size()</source>
          <target state="translated">BitSet.size()</target>
        </trans-unit>
        <trans-unit id="453b1b073bf74ff055fc871c4c799969e45d686f" translate="yes" xml:space="preserve">
          <source>BitSet.stream()</source>
          <target state="translated">BitSet.stream()</target>
        </trans-unit>
        <trans-unit id="4083cff4ce93f8a4411f42770d399b164597f061" translate="yes" xml:space="preserve">
          <source>BitSet.toByteArray()</source>
          <target state="translated">BitSet.toByteArray()</target>
        </trans-unit>
        <trans-unit id="07eb1bb1f97d56c7798c265a60803953940f64e2" translate="yes" xml:space="preserve">
          <source>BitSet.toLongArray()</source>
          <target state="translated">BitSet.toLongArray()</target>
        </trans-unit>
        <trans-unit id="6ab19bc74c79ebdf1bd396e120ea266c54e48298" translate="yes" xml:space="preserve">
          <source>BitSet.toString()</source>
          <target state="translated">BitSet.toString()</target>
        </trans-unit>
        <trans-unit id="f264c54281e3ae0f91d901083011ded7e7b273de" translate="yes" xml:space="preserve">
          <source>BitSet.valueOf()</source>
          <target state="translated">BitSet.valueOf()</target>
        </trans-unit>
        <trans-unit id="3ecf11e19835619628bf7f04e8854e8e1fd790cb" translate="yes" xml:space="preserve">
          <source>BitSet.xor()</source>
          <target state="translated">BitSet.xor()</target>
        </trans-unit>
        <trans-unit id="26504da2e82f7d1bef4cde85ae0e762f9c79875f" translate="yes" xml:space="preserve">
          <source>Bitmap data.</source>
          <target state="translated">비트 맵 데이터.</target>
        </trans-unit>
        <trans-unit id="5087244ecdc1dda9eb3b9e9385f7447295e90893" translate="yes" xml:space="preserve">
          <source>Bitmap data. Table tag &quot;bdat&quot; in the Open Type Specification.</source>
          <target state="translated">비트 맵 데이터. Open Type 사양의 테이블 태그 「bdat」입니다.</target>
        </trans-unit>
        <trans-unit id="5d6acb4d1cb9bf4bf0362c6777ffd2b08bdc6d21" translate="yes" xml:space="preserve">
          <source>Bitmap location.</source>
          <target state="translated">비트 맵 위치.</target>
        </trans-unit>
        <trans-unit id="97932d2c38023e131c28edbf9418bc7971956091" translate="yes" xml:space="preserve">
          <source>Bitmap location. Table tag &quot;bloc&quot; in the Open Type Specification.</source>
          <target state="translated">비트 맵 위치. Open Type 사양의 테이블 태그 「bloc」입니다.</target>
        </trans-unit>
        <trans-unit id="6c74cd82b56269d0740800f73cbe5f75b5cfd241" translate="yes" xml:space="preserve">
          <source>Bitwise comparison of &lt;code&gt;float&lt;/code&gt; values or &lt;code&gt;double&lt;/code&gt; values, as performed by the numeric and atomic update access modes, differ from the primitive &lt;code&gt;==&lt;/code&gt; operator and the &lt;a href=&quot;../float#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Float.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../double#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Double.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; methods, specifically with respect to comparing NaN values or comparing &lt;code&gt;-0.0&lt;/code&gt; with &lt;code&gt;+0.0&lt;/code&gt;. Care should be taken when performing a compare and set or a compare and exchange operation with such values since the operation may unexpectedly fail. There are many possible NaN values that are considered to be &lt;code&gt;NaN&lt;/code&gt; in Java, although no IEEE 754 floating-point operation provided by Java can distinguish between them. Operation failure can occur if the expected or witness value is a NaN value and it is transformed (perhaps in a platform specific manner) into another NaN value, and thus has a different bitwise representation (see &lt;a href=&quot;../float#intBitsToFloat(int)&quot;&gt;&lt;code&gt;Float.intBitsToFloat(int)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../double#longBitsToDouble(long)&quot;&gt;&lt;code&gt;Double.longBitsToDouble(long)&lt;/code&gt;&lt;/a&gt; for more details). The values &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;+0.0&lt;/code&gt; have different bitwise representations but are considered equal when using the primitive &lt;code&gt;==&lt;/code&gt; operator. Operation failure can occur if, for example, a numeric algorithm computes an expected value to be say &lt;code&gt;-0.0&lt;/code&gt; and previously computed the witness value to be say &lt;code&gt;+0.0&lt;/code&gt;.</source>
          <target state="translated">숫자 및 원자 업데이트 액세스 모드에서 수행되는 &lt;code&gt;float&lt;/code&gt; 값 또는 &lt;code&gt;double&lt;/code&gt; 값 의 비트 비교는 기본 &lt;code&gt;==&lt;/code&gt; 연산자 및 &lt;a href=&quot;../float#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Float.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../double#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Double.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt; 와 다릅니다. 메서드, 특히 NaN 값을 비교하거나 &lt;code&gt;-0.0&lt;/code&gt; 을 &lt;code&gt;+0.0&lt;/code&gt; 과 비교 하는 것과 관련이 있습니다. 이러한 값으로 비교 및 ​​설정 또는 비교 및 ​​교환 작업을 수행 할 때는 작업이 예기치 않게 실패 할 수 있으므로주의해야합니다. 으로 생각되는 수의 NaN 값이 있습니다 &lt;code&gt;NaN&lt;/code&gt; 이는Java에서 제공하는 IEEE 754 부동 소수점 연산은 이들을 구별 할 수 없습니다. 예상 또는 감시 값이 NaN 값이고 (아마도 플랫폼 별 방식으로) 다른 NaN 값으로 변환되어 다른 비트 표현을 갖는 경우 작업 실패가 발생할 수 있습니다 ( &lt;a href=&quot;../float#intBitsToFloat(int)&quot;&gt; &lt;code&gt;Float.intBitsToFloat(int)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../double#longBitsToDouble(long)&quot;&gt; &lt;code&gt;Double.longBitsToDouble(long)&lt;/code&gt; &lt;/a&gt; 참조 ). 자세한 내용은 (긴) ). 값 &lt;code&gt;-0.0&lt;/code&gt; 과 &lt;code&gt;+0.0&lt;/code&gt; 은 다른 비트 표현을 갖지만 기본 &lt;code&gt;==&lt;/code&gt; 연산자를 사용할 때 동일한 것으로 간주됩니다 . 예를 들어 숫자 알고리즘이 예상 값을 &lt;code&gt;-0.0&lt;/code&gt; 으로 계산하고 이전에 증인 값을 계산 한 경우 작업 실패가 발생할 수 있습니다. &lt;code&gt;+0.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c24315eb20cc1f5a565ec08f29abab31c0925f1a" translate="yes" xml:space="preserve">
          <source>Blob</source>
          <target state="translated">Blob</target>
        </trans-unit>
        <trans-unit id="82dd2cdf36f9436d89f404454654ad3e53fd428d" translate="yes" xml:space="preserve">
          <source>Block</source>
          <target state="translated">Block</target>
        </trans-unit>
        <trans-unit id="70af3238de42da66beb5f354425347f373dca837" translate="yes" xml:space="preserve">
          <source>Block Tags</source>
          <target state="translated">블록 태그</target>
        </trans-unit>
        <trans-unit id="abe005907f45526cc92679c0c67c98dfd361e70c" translate="yes" xml:space="preserve">
          <source>Block multicast datagrams from the given source address.</source>
          <target state="translated">주어진 소스 주소에서 멀티 캐스트 데이터 그램을 차단합니다.</target>
        </trans-unit>
        <trans-unit id="3e4d231903439b20916bdd14898f04865fff48ff" translate="yes" xml:space="preserve">
          <source>Block of optional data.</source>
          <target state="translated">선택적 데이터 블록.</target>
        </trans-unit>
        <trans-unit id="1e20e0e36511b5c6baa2d48051902a13b2324cd0" translate="yes" xml:space="preserve">
          <source>Block of optional data. Byte following tag indicates number of bytes in this block data.</source>
          <target state="translated">선택적 데이터 블록. 바이트 다음 태그는이 블록 데이터의 바이트 수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="437c69e5ed688c0537571d965bf795dd90b1c1d6" translate="yes" xml:space="preserve">
          <source>Block until signalled or interrupted.</source>
          <target state="translated">신호 또는 중단 될 때까지 차단하십시오.</target>
        </trans-unit>
        <trans-unit id="6d7fb4a7f38d5954e20e9f03533bcb480909a2ae" translate="yes" xml:space="preserve">
          <source>Block until signalled, interrupted, or timed out.</source>
          <target state="translated">신호, 중단 또는 시간 초과 될 때까지 차단하십시오.</target>
        </trans-unit>
        <trans-unit id="b57b8bfbe03043a73a6a80f86e47b8ab2b89853d" translate="yes" xml:space="preserve">
          <source>Block until signalled.</source>
          <target state="translated">신호가 날 때까지 차단하십시오.</target>
        </trans-unit>
        <trans-unit id="86932790462e80ef6bced45b5b159baf9aa26054" translate="yes" xml:space="preserve">
          <source>BlockAction</source>
          <target state="translated">BlockAction</target>
        </trans-unit>
        <trans-unit id="e4171c967e29c710844f83d806ed1446a10560b0" translate="yes" xml:space="preserve">
          <source>BlockElement</source>
          <target state="translated">BlockElement</target>
        </trans-unit>
        <trans-unit id="8573578578ab448f94d2d984698e1b4f84d2ad4c" translate="yes" xml:space="preserve">
          <source>BlockTagTree</source>
          <target state="translated">BlockTagTree</target>
        </trans-unit>
        <trans-unit id="f38c5e559d8c85fea705fb8ec93177e6c1e5ee6c" translate="yes" xml:space="preserve">
          <source>BlockTree</source>
          <target state="translated">BlockTree</target>
        </trans-unit>
        <trans-unit id="4bdc0aec0c6516c42350bab81f9c76a19c3e5ad4" translate="yes" xml:space="preserve">
          <source>BlockView</source>
          <target state="translated">BlockView</target>
        </trans-unit>
        <trans-unit id="1c76be32fb11096eed20946b126a38d45dfa7615" translate="yes" xml:space="preserve">
          <source>Blocking mode</source>
          <target state="translated">차단 모드</target>
        </trans-unit>
        <trans-unit id="3fb97fe6511d9e06578c8f4cb1af33c9125721f7" translate="yes" xml:space="preserve">
          <source>BlockingDeque</source>
          <target state="translated">BlockingDeque</target>
        </trans-unit>
        <trans-unit id="1894fd5a9c488c4c5b9f09c5f4b244a0f00dee97" translate="yes" xml:space="preserve">
          <source>BlockingDeque.add()</source>
          <target state="translated">BlockingDeque.add()</target>
        </trans-unit>
        <trans-unit id="4596b6727f09dcb15e5b51cf43c598be80a8d2de" translate="yes" xml:space="preserve">
          <source>BlockingDeque.addFirst()</source>
          <target state="translated">BlockingDeque.addFirst()</target>
        </trans-unit>
        <trans-unit id="77eec46debb5440f0901c1d701b251f1c4c81766" translate="yes" xml:space="preserve">
          <source>BlockingDeque.addLast()</source>
          <target state="translated">BlockingDeque.addLast()</target>
        </trans-unit>
        <trans-unit id="32908cf997cd28f11b9056c33b0a4e7372f74dfa" translate="yes" xml:space="preserve">
          <source>BlockingDeque.contains()</source>
          <target state="translated">BlockingDeque.contains()</target>
        </trans-unit>
        <trans-unit id="445db93e8c0cab9552caebbd0820fe21a286facb" translate="yes" xml:space="preserve">
          <source>BlockingDeque.element()</source>
          <target state="translated">BlockingDeque.element()</target>
        </trans-unit>
        <trans-unit id="bc707189b633ce4845f77e97628afb61f1af0534" translate="yes" xml:space="preserve">
          <source>BlockingDeque.iterator()</source>
          <target state="translated">BlockingDeque.iterator()</target>
        </trans-unit>
        <trans-unit id="5929f0c6f5feccd2c5c90d98f2feb4fe189e81ee" translate="yes" xml:space="preserve">
          <source>BlockingDeque.offer()</source>
          <target state="translated">BlockingDeque.offer()</target>
        </trans-unit>
        <trans-unit id="140a11b0f0d0235efd475c3660b7b86c05e7678e" translate="yes" xml:space="preserve">
          <source>BlockingDeque.offerFirst()</source>
          <target state="translated">BlockingDeque.offerFirst()</target>
        </trans-unit>
        <trans-unit id="c1bee168f07d1c735dc203b84ef27498dfb01cfc" translate="yes" xml:space="preserve">
          <source>BlockingDeque.offerLast()</source>
          <target state="translated">BlockingDeque.offerLast()</target>
        </trans-unit>
        <trans-unit id="7e97188ad7991711958350bab7bafbe0fc9555c0" translate="yes" xml:space="preserve">
          <source>BlockingDeque.peek()</source>
          <target state="translated">BlockingDeque.peek()</target>
        </trans-unit>
        <trans-unit id="ba0e617964bcce68f450a7f48d57886e4610c126" translate="yes" xml:space="preserve">
          <source>BlockingDeque.poll()</source>
          <target state="translated">BlockingDeque.poll()</target>
        </trans-unit>
        <trans-unit id="dd57caf81223f28e756d7deb559ba55faa926d04" translate="yes" xml:space="preserve">
          <source>BlockingDeque.pollFirst()</source>
          <target state="translated">BlockingDeque.pollFirst()</target>
        </trans-unit>
        <trans-unit id="92237bc7c00bb60319e5a80992f044fdfd751436" translate="yes" xml:space="preserve">
          <source>BlockingDeque.pollLast()</source>
          <target state="translated">BlockingDeque.pollLast()</target>
        </trans-unit>
        <trans-unit id="5f4ae3f4211e11a8a9d5e2316e2a3554f4ac7178" translate="yes" xml:space="preserve">
          <source>BlockingDeque.push()</source>
          <target state="translated">BlockingDeque.push()</target>
        </trans-unit>
        <trans-unit id="65de85a2a4760d19bd1850350f479e5a3c4d0da5" translate="yes" xml:space="preserve">
          <source>BlockingDeque.put()</source>
          <target state="translated">BlockingDeque.put()</target>
        </trans-unit>
        <trans-unit id="6af7fbca8160d84241b89a313461ea3f9366fe2f" translate="yes" xml:space="preserve">
          <source>BlockingDeque.putFirst()</source>
          <target state="translated">BlockingDeque.putFirst()</target>
        </trans-unit>
        <trans-unit id="9131752413334c1611615cf3b164d8e97d8ab931" translate="yes" xml:space="preserve">
          <source>BlockingDeque.putLast()</source>
          <target state="translated">BlockingDeque.putLast()</target>
        </trans-unit>
        <trans-unit id="1371772a2cba2d195655c47780477a1893d92cb8" translate="yes" xml:space="preserve">
          <source>BlockingDeque.remove()</source>
          <target state="translated">BlockingDeque.remove()</target>
        </trans-unit>
        <trans-unit id="35cadb29caad91cc2949815b42189140e4ffedfd" translate="yes" xml:space="preserve">
          <source>BlockingDeque.removeFirstOccurrence()</source>
          <target state="translated">BlockingDeque.removeFirstOccurrence()</target>
        </trans-unit>
        <trans-unit id="9b54a4d968ba9f46d0fe3f2ece2a6bc3b44cc834" translate="yes" xml:space="preserve">
          <source>BlockingDeque.removeLastOccurrence()</source>
          <target state="translated">BlockingDeque.removeLastOccurrence()</target>
        </trans-unit>
        <trans-unit id="6db8e8dab44e32f9a7e617348c8b3d22410d2c7a" translate="yes" xml:space="preserve">
          <source>BlockingDeque.size()</source>
          <target state="translated">BlockingDeque.size()</target>
        </trans-unit>
        <trans-unit id="e4d0f34b17d91e4c1128a3b7e22f48c7f1bdeb79" translate="yes" xml:space="preserve">
          <source>BlockingDeque.take()</source>
          <target state="translated">BlockingDeque.take()</target>
        </trans-unit>
        <trans-unit id="dc95893eb428b8b8b6d613b7561011b87286b6b4" translate="yes" xml:space="preserve">
          <source>BlockingDeque.takeFirst()</source>
          <target state="translated">BlockingDeque.takeFirst()</target>
        </trans-unit>
        <trans-unit id="c7d370f92ce04a2c57940e61a6c033f10cfbeace" translate="yes" xml:space="preserve">
          <source>BlockingDeque.takeLast()</source>
          <target state="translated">BlockingDeque.takeLast()</target>
        </trans-unit>
        <trans-unit id="3f70916c7cef37053ab5d86448df36eebb93370a" translate="yes" xml:space="preserve">
          <source>BlockingQueue</source>
          <target state="translated">BlockingQueue</target>
        </trans-unit>
        <trans-unit id="da18778895648b5e78e4a0d80c431caaabca8a6a" translate="yes" xml:space="preserve">
          <source>BlockingQueue.add()</source>
          <target state="translated">BlockingQueue.add()</target>
        </trans-unit>
        <trans-unit id="29ffdd05ddcfb0bcdef2590397410e1f1625bea4" translate="yes" xml:space="preserve">
          <source>BlockingQueue.contains()</source>
          <target state="translated">BlockingQueue.contains()</target>
        </trans-unit>
        <trans-unit id="ea1de17bfb3ca844258b3559e1713668c704f97c" translate="yes" xml:space="preserve">
          <source>BlockingQueue.drainTo()</source>
          <target state="translated">BlockingQueue.drainTo()</target>
        </trans-unit>
        <trans-unit id="34694541ddd303bcd20756f399cd6231c4e77329" translate="yes" xml:space="preserve">
          <source>BlockingQueue.offer()</source>
          <target state="translated">BlockingQueue.offer()</target>
        </trans-unit>
        <trans-unit id="1b07cff622e7d09748221e61467aefbc82f10200" translate="yes" xml:space="preserve">
          <source>BlockingQueue.poll()</source>
          <target state="translated">BlockingQueue.poll()</target>
        </trans-unit>
        <trans-unit id="2f8225b7c3adc824195da066166a85d37d2c8120" translate="yes" xml:space="preserve">
          <source>BlockingQueue.put()</source>
          <target state="translated">BlockingQueue.put()</target>
        </trans-unit>
        <trans-unit id="8e2e238b69b4260890766024e4d87fdab89ffb5e" translate="yes" xml:space="preserve">
          <source>BlockingQueue.remainingCapacity()</source>
          <target state="translated">BlockingQueue.remainingCapacity()</target>
        </trans-unit>
        <trans-unit id="26cab4f861e02974ba468ae1433e65c358008910" translate="yes" xml:space="preserve">
          <source>BlockingQueue.remove()</source>
          <target state="translated">BlockingQueue.remove()</target>
        </trans-unit>
        <trans-unit id="78a918d99c4fc28ca827a620a5dbaeb5dc5e4b0f" translate="yes" xml:space="preserve">
          <source>BlockingQueue.take()</source>
          <target state="translated">BlockingQueue.take()</target>
        </trans-unit>
        <trans-unit id="54c45c033f5eb914fae27a646cbd9e23d3750d19" translate="yes" xml:space="preserve">
          <source>Blocks</source>
          <target state="translated">Blocks</target>
        </trans-unit>
        <trans-unit id="8f3ad24dc89b49af619a25cf5e86e97c7828113b" translate="yes" xml:space="preserve">
          <source>Blocks the execution of the current thread and enters a new secondary event loop on the event dispatch thread.</source>
          <target state="translated">현재 스레드의 실행을 차단하고 이벤트 디스패치 스레드에서 새 보조 이벤트 루프에 들어갑니다.</target>
        </trans-unit>
        <trans-unit id="777b43cb6e7ea09a6e606fee32d26a5a3f1ba40a" translate="yes" xml:space="preserve">
          <source>Blocks until all actions are completed, or the stream is closed, or the current thread is interrupted, whichever happens first.</source>
          <target state="translated">모든 작업이 완료되거나 스트림이 닫히거나 현재 스레드가 중단 될 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="0da12db5f98100da127ebc0efe2d5aa146ccb6e9" translate="yes" xml:space="preserve">
          <source>Blocks until all actions are completed, or the stream is closed, or the timeout occurs, or the current thread is interrupted, whichever happens first.</source>
          <target state="translated">모든 작업이 완료되거나 스트림이 닫히거나 시간 초과가 발생하거나 현재 스레드가 중단 될 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="aa7409819aec95a34f71e58863a16d3adeaa6bb4" translate="yes" xml:space="preserve">
          <source>Blocks until all tasks have completed execution after a shutdown request, or the timeout occurs, or the current thread is interrupted, whichever happens first.</source>
          <target state="translated">종료 요청 후 모든 작업이 실행을 완료하거나 시간 초과가 발생하거나 현재 스레드가 중단 될 때까지 차단합니다.</target>
        </trans-unit>
        <trans-unit id="20537270db935e43a5ff4c6d378e4b06abbd075d" translate="yes" xml:space="preserve">
          <source>Blocks until all tasks have completed execution after a shutdown request, or the timeout occurs, or the current thread is interrupted, whichever happens first. Because the &lt;a href=&quot;#commonPool()&quot;&gt;&lt;code&gt;commonPool()&lt;/code&gt;&lt;/a&gt; never terminates until program shutdown, when applied to the common pool, this method is equivalent to &lt;a href=&quot;#awaitQuiescence(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;awaitQuiescence(long, TimeUnit)&lt;/code&gt;&lt;/a&gt; but always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">종료 요청 후 모든 작업이 실행을 완료하거나 시간 초과가 발생하거나 현재 스레드가 중단 될 때까지 차단됩니다. &lt;a href=&quot;#commonPool()&quot;&gt; &lt;code&gt;commonPool()&lt;/code&gt; &lt;/a&gt; 은 프로그램이 종료 될 때까지 절대 종료되지 않기 때문에 공통 풀에 적용될 때이 메서드는 &lt;a href=&quot;#awaitQuiescence(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;awaitQuiescence(long, TimeUnit)&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 항상 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8e5851d9dadeeeaa5b008460f5a6f3a3b225e6f2" translate="yes" xml:space="preserve">
          <source>Blocks until all tasks have completed execution after a shutdown request, or the timeout occurs, or the current thread is interrupted, whichever happens first. Because the &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;commonPool()&lt;/code&gt;&lt;/a&gt; never terminates until program shutdown, when applied to the common pool, this method is equivalent to &lt;a href=&quot;forkjoinpool#awaitQuiescence-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitQuiescence(long, TimeUnit)&lt;/code&gt;&lt;/a&gt; but always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">종료 요청 후 모든 작업이 실행을 완료하거나 시간 초과가 발생하거나 현재 스레드가 중단 될 때까지 차단합니다. 때문에 &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;commonPool()&lt;/code&gt; &lt;/a&gt; 결코 프로그램이 종료 될 때까지 종료하지 않는 일반적인 풀에 적용 할 때,이 방법은 동일합니다 &lt;a href=&quot;forkjoinpool#awaitQuiescence-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitQuiescence(long, TimeUnit)&lt;/code&gt; &lt;/a&gt; 하지만 항상 반환 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c64ee39352593f34be63ac6145fb49455242569" translate="yes" xml:space="preserve">
          <source>BltBufferStrategy</source>
          <target state="translated">BltBufferStrategy</target>
        </trans-unit>
        <trans-unit id="19e07430eed6d97d6d73cb4a2967b1f316520f54" translate="yes" xml:space="preserve">
          <source>Bold</source>
          <target state="translated">Bold</target>
        </trans-unit>
        <trans-unit id="ec93d9930a54031afe78617b34de72170c7ff39a" translate="yes" xml:space="preserve">
          <source>BoldAction</source>
          <target state="translated">BoldAction</target>
        </trans-unit>
        <trans-unit id="f69f233005f15802770fd26fbf7ead52ec13d9e6" translate="yes" xml:space="preserve">
          <source>Book</source>
          <target state="translated">Book</target>
        </trans-unit>
        <trans-unit id="b76ff4906f33c2dd97ddd929b9662ba8cac6174c" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="translated">Boolean</target>
        </trans-unit>
        <trans-unit id="8fd608c56ea83a9db9270c1b6943702d3b37ef68" translate="yes" xml:space="preserve">
          <source>Boolean (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, case irrelevant). Is the ability to redefine classes needed by this agent. Values other than &lt;code&gt;true&lt;/code&gt; are considered &lt;code&gt;false&lt;/code&gt;. This attribute is optional, the default is &lt;code&gt;
 false&lt;/code&gt;.</source>
          <target state="translated">부울 ( &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; , 대소 문자와 무관 함). 이 에이전트에 필요한 클래스를 재정의하는 기능입니다. &lt;code&gt;true&lt;/code&gt; 이외의 값 은 &lt;code&gt;false&lt;/code&gt; 로 간주됩니다 . 이 속성은 선택 사항이며 기본값은 &lt;code&gt; false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e125e62854b455a823d0ed016ceaa723d047f75f" translate="yes" xml:space="preserve">
          <source>Boolean (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, case irrelevant). Is the ability to retransform classes needed by this agent. Values other than &lt;code&gt;true&lt;/code&gt; are considered &lt;code&gt;false&lt;/code&gt;. This attribute is optional, the default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">부울 ( &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; , 대소 문자와 무관 함). 이 에이전트에 필요한 클래스를 다시 변환하는 기능입니다. &lt;code&gt;true&lt;/code&gt; 이외의 값 은 &lt;code&gt;false&lt;/code&gt; 로 간주됩니다 . 이 속성은 선택 사항이며 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="18215efa18d148162c1b157547a37823f1ee4229" translate="yes" xml:space="preserve">
          <source>Boolean (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, case irrelevant). Is the ability to set native method prefix needed by this agent. Values other than &lt;code&gt;
 true&lt;/code&gt; are considered &lt;code&gt;false&lt;/code&gt;. This attribute is optional, the default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">부울 ( &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; , 대소 문자와 무관 함). 이 에이전트에 필요한 기본 메서드 접두사를 설정하는 기능입니다. &lt;code&gt; true&lt;/code&gt; 이외의 값 은 &lt;code&gt;false&lt;/code&gt; 로 간주됩니다 . 이 속성은 선택 사항이며 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ac0a5d43a40d00bca61759471acf8034025af73f" translate="yes" xml:space="preserve">
          <source>Boolean(false)</source>
          <target state="translated">Boolean(false)</target>
        </trans-unit>
        <trans-unit id="5bdcba22e2f5015ec13f986d7b975c6e5b3bea91" translate="yes" xml:space="preserve">
          <source>Boolean.FALSE</source>
          <target state="translated">Boolean.FALSE</target>
        </trans-unit>
        <trans-unit id="755e2cfac54524af42eba823094429e4621fd248" translate="yes" xml:space="preserve">
          <source>Boolean.booleanValue()</source>
          <target state="translated">Boolean.booleanValue()</target>
        </trans-unit>
        <trans-unit id="4f1686ae994305fedcf9f3902e8de82d4c6aba2f" translate="yes" xml:space="preserve">
          <source>Boolean.compare()</source>
          <target state="translated">Boolean.compare()</target>
        </trans-unit>
        <trans-unit id="b2735b2a749b0bfc7bbd5d997b59fde74c1d74b3" translate="yes" xml:space="preserve">
          <source>Boolean.compareTo()</source>
          <target state="translated">Boolean.compareTo()</target>
        </trans-unit>
        <trans-unit id="a7e6cc7126c0810a972cc90de41f9d5e73b50bed" translate="yes" xml:space="preserve">
          <source>Boolean.equals()</source>
          <target state="translated">Boolean.equals()</target>
        </trans-unit>
        <trans-unit id="a6b64bad98cff06904cae8c22449b3ed681058c0" translate="yes" xml:space="preserve">
          <source>Boolean.getBoolean()</source>
          <target state="translated">Boolean.getBoolean()</target>
        </trans-unit>
        <trans-unit id="54ea8021aa4d8619e0fb086a3774b1ec58d679db" translate="yes" xml:space="preserve">
          <source>Boolean.hashCode()</source>
          <target state="translated">Boolean.hashCode()</target>
        </trans-unit>
        <trans-unit id="5385e71f52e787213e89bd9ec9d3aec9b5a31177" translate="yes" xml:space="preserve">
          <source>Boolean.logicalAnd()</source>
          <target state="translated">Boolean.logicalAnd()</target>
        </trans-unit>
        <trans-unit id="4723a7a485d3d52e8b2fd746e03ce78bece1889a" translate="yes" xml:space="preserve">
          <source>Boolean.logicalOr()</source>
          <target state="translated">Boolean.logicalOr()</target>
        </trans-unit>
        <trans-unit id="f174551b1e392e9c404a95e00e1fd023a8ecfa79" translate="yes" xml:space="preserve">
          <source>Boolean.logicalXor()</source>
          <target state="translated">Boolean.logicalXor()</target>
        </trans-unit>
        <trans-unit id="a517cf80486e0d3f2d052bae12a444adfb164516" translate="yes" xml:space="preserve">
          <source>Boolean.parseBoolean()</source>
          <target state="translated">Boolean.parseBoolean()</target>
        </trans-unit>
        <trans-unit id="a7f19794b9adaa375b2fb65fabc1e14d6b0644d4" translate="yes" xml:space="preserve">
          <source>Boolean.toString()</source>
          <target state="translated">Boolean.toString()</target>
        </trans-unit>
        <trans-unit id="36df6179b265f6becdddca2954b7b822cdb5feb4" translate="yes" xml:space="preserve">
          <source>Boolean.valueOf()</source>
          <target state="translated">Boolean.valueOf()</target>
        </trans-unit>
        <trans-unit id="c3a6b6b221f958ec66fdc1ebbea468d791770b67" translate="yes" xml:space="preserve">
          <source>BooleanControl</source>
          <target state="translated">BooleanControl</target>
        </trans-unit>
        <trans-unit id="264493d1d1370cdf5822ebc72afddeff55db11c3" translate="yes" xml:space="preserve">
          <source>BooleanControl.Type</source>
          <target state="translated">BooleanControl.Type</target>
        </trans-unit>
        <trans-unit id="31535f69c539a2c0afbf491f8e73b77b3c9090e1" translate="yes" xml:space="preserve">
          <source>BooleanControl.getStateLabel()</source>
          <target state="translated">BooleanControl.getStateLabel()</target>
        </trans-unit>
        <trans-unit id="11303e81a66d95eda4c521da66e0de85aa0ecec3" translate="yes" xml:space="preserve">
          <source>BooleanControl.getValue()</source>
          <target state="translated">BooleanControl.getValue()</target>
        </trans-unit>
        <trans-unit id="0a7092b20fac0fca2379b95bc69bf5f6201e0b5d" translate="yes" xml:space="preserve">
          <source>BooleanControl.setValue()</source>
          <target state="translated">BooleanControl.setValue()</target>
        </trans-unit>
        <trans-unit id="470fb9dca80e1ee6f9f95de16eb31f04fcce6736" translate="yes" xml:space="preserve">
          <source>BooleanControl.toString()</source>
          <target state="translated">BooleanControl.toString()</target>
        </trans-unit>
        <trans-unit id="49195bec135ba192b5beeded566abc2b031cf80e" translate="yes" xml:space="preserve">
          <source>BooleanFlag</source>
          <target state="translated">BooleanFlag</target>
        </trans-unit>
        <trans-unit id="455e9681e0f8bdba8a6c0712489d266dc1e9574f" translate="yes" xml:space="preserve">
          <source>BooleanSupplier</source>
          <target state="translated">BooleanSupplier</target>
        </trans-unit>
        <trans-unit id="12223b428db841ff1f72fb7117584ea71d29ff33" translate="yes" xml:space="preserve">
          <source>BooleanSupplier.getAsBoolean()</source>
          <target state="translated">BooleanSupplier.getAsBoolean()</target>
        </trans-unit>
        <trans-unit id="239f5cbec3628a9ed7d3195f61a537bdd7ebbe74" translate="yes" xml:space="preserve">
          <source>BooleanType</source>
          <target state="translated">BooleanType</target>
        </trans-unit>
        <trans-unit id="4b6effcb65de8faa18ae1ba351f7c99e0d69b032" translate="yes" xml:space="preserve">
          <source>BooleanValue</source>
          <target state="translated">BooleanValue</target>
        </trans-unit>
        <trans-unit id="89ec4ec2bf400e823f3ca49d0cb938b0fedd7bab" translate="yes" xml:space="preserve">
          <source>Bootstrap</source>
          <target state="translated">Bootstrap</target>
        </trans-unit>
        <trans-unit id="2dfeed6ef3cbd16db981638e61fb8e543a2d82f4" translate="yes" xml:space="preserve">
          <source>Bootstrap class loader. It is the virtual machine's built-in class loader, typically represented as &lt;code&gt;null&lt;/code&gt;, and does not have a parent.</source>
          <target state="translated">부트 스트랩 클래스 로더. 일반적으로 &lt;code&gt;null&lt;/code&gt; 로 표시되는 가상 머신의 기본 제공 클래스 로더이며 상위 항목이 없습니다.</target>
        </trans-unit>
        <trans-unit id="be78bacafcb99efe1d44273ad187722b35550f25" translate="yes" xml:space="preserve">
          <source>Bootstrap method to generate the &lt;a href=&quot;../object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../object#toString()&quot;&gt;&lt;code&gt;Object.toString()&lt;/code&gt;&lt;/a&gt; methods, based on a description of the component names and accessor methods, for either &lt;code&gt;invokedynamic&lt;/code&gt; call sites or dynamic constant pool entries.</source>
          <target state="translated">&lt;code&gt;invokedynamic&lt;/code&gt; 호출 사이트 또는 동적 상수 풀 항목 에 대한 구성 요소 이름 및 접근 자 메서드에 대한 설명을 기반으로 &lt;a href=&quot;../object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../object#toString()&quot;&gt; &lt;code&gt;Object.toString()&lt;/code&gt; &lt;/a&gt; 메서드를 생성하는 부트 스트랩 메서드 입니다.</target>
        </trans-unit>
        <trans-unit id="e315d66c938663733515fc0c75079c230fb89bdd" translate="yes" xml:space="preserve">
          <source>Bootstrap method to generate the &lt;a href=&quot;../object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../object#toString()&quot;&gt;&lt;code&gt;Object.toString()&lt;/code&gt;&lt;/a&gt; methods, based on a description of the component names and accessor methods, for either &lt;code&gt;invokedynamic&lt;/code&gt; call sites or dynamic constant pool entries. For more detail on the semantics of the generated methods see the specification of &lt;a href=&quot;../record#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Record.equals(Object)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../record#hashCode()&quot;&gt;&lt;code&gt;Record.hashCode()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../record#toString()&quot;&gt;&lt;code&gt;Record.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;invokedynamic&lt;/code&gt; 호출 사이트 또는 동적 상수 풀 항목 에 대한 구성 요소 이름 및 접근 자 메서드에 대한 설명을 기반으로 &lt;a href=&quot;../object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../object#toString()&quot;&gt; &lt;code&gt;Object.toString()&lt;/code&gt; &lt;/a&gt; 메서드를 생성하는 부트 스트랩 메서드 입니다. 생성 된 메서드의 의미 체계에 대한 자세한 내용은 &lt;a href=&quot;../record#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Record.equals(Object)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../record#hashCode()&quot;&gt; &lt;code&gt;Record.hashCode()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../record#toString()&quot;&gt; &lt;code&gt;Record.toString()&lt;/code&gt; &lt;/a&gt; 사양을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d4749b4f5c5be78fe9668dbe135dee74d12f9344" translate="yes" xml:space="preserve">
          <source>Bootstrap methods for dynamically-computed constants.</source>
          <target state="translated">동적으로 계산 된 상수에 대한 부트 스트랩 메서드.</target>
        </trans-unit>
        <trans-unit id="fc9fcfe1979c947b591df57fbc8414ad559f9aa5" translate="yes" xml:space="preserve">
          <source>Bootstrap methods for state-driven implementations of core methods, including &lt;a href=&quot;../object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../object#toString()&quot;&gt;&lt;code&gt;Object.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../object#toString()&quot;&gt; &lt;code&gt;Object.toString()&lt;/code&gt; &lt;/a&gt; 포함한 핵심 메서드의 상태 기반 구현을위한 부트 스트랩 메서드입니다 .</target>
        </trans-unit>
        <trans-unit id="956901d3e6846937d41d3f1f6e16680c0a4da509" translate="yes" xml:space="preserve">
          <source>Bootstrap methods for state-driven implementations of core methods, including &lt;a href=&quot;../object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../object#toString()&quot;&gt;&lt;code&gt;Object.toString()&lt;/code&gt;&lt;/a&gt;. These methods may be used, for example, by Java compiler implementations to implement the bodies of &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; methods for record classes.</source>
          <target state="translated">&lt;a href=&quot;../object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../object#toString()&quot;&gt; &lt;code&gt;Object.toString()&lt;/code&gt; &lt;/a&gt; 포함한 핵심 메서드의 상태 기반 구현을위한 부트 스트랩 메서드입니다 . 예를 들어, 이러한 메소드는 레코드 클래스에 대한 &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 메소드 의 본문을 구현하기 위해 Java 컴파일러 구현에 의해 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="58202ca0e02ac0bedb3dcba2f247980f98785173" translate="yes" xml:space="preserve">
          <source>BootstrapMethodError</source>
          <target state="translated">BootstrapMethodError</target>
        </trans-unit>
        <trans-unit id="5d10d3f42121c3aa0d7923d1f05cccf56ef176e5" translate="yes" xml:space="preserve">
          <source>Border</source>
          <target state="translated">Border</target>
        </trans-unit>
        <trans-unit id="00b76ebe7142d5e4c57150f32cc098995e040062" translate="yes" xml:space="preserve">
          <source>Border for a Palette.</source>
          <target state="translated">팔레트의 테두리.</target>
        </trans-unit>
        <trans-unit id="3cea08c18255a403dd736851d275c3042c9d0d99" translate="yes" xml:space="preserve">
          <source>Border for a Table Header</source>
          <target state="translated">표 머리글 테두리</target>
        </trans-unit>
        <trans-unit id="1284d90ede4c046de15c4252800d8ab5cada2cc2" translate="yes" xml:space="preserve">
          <source>Border instances are designed to be shared. Rather than creating a new border object using one of border classes, use the BorderFactory methods, which produces a shared instance of the common border types.</source>
          <target state="translated">테두리 인스턴스는 공유되도록 설계되었습니다. 테두리 클래스 중 하나를 사용하여 새 테두리 개체를 만드는 대신 공통 테두리 유형의 공유 인스턴스를 생성하는 BorderFactory 메서드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7f492ae2df61af896b38f31a280c57b28549bb2e" translate="yes" xml:space="preserve">
          <source>Border listener</source>
          <target state="translated">테두리 리스너</target>
        </trans-unit>
        <trans-unit id="ae6b6860e8b042985ef178d9fc29209d42254ab8" translate="yes" xml:space="preserve">
          <source>Border to use.</source>
          <target state="translated">사용할 테두리입니다.</target>
        </trans-unit>
        <trans-unit id="1d0793d5e15dc54dc74a4b97f82e24703ef88d71" translate="yes" xml:space="preserve">
          <source>BorderFactory</source>
          <target state="translated">BorderFactory</target>
        </trans-unit>
        <trans-unit id="a7c523103173fdff95f0ac435ef3373c8ec778c0" translate="yes" xml:space="preserve">
          <source>BorderLayout</source>
          <target state="translated">BorderLayout</target>
        </trans-unit>
        <trans-unit id="c8561f59d6860b507e99a7ca6c7aa2f5c568ffaf" translate="yes" xml:space="preserve">
          <source>BorderListener</source>
          <target state="translated">BorderListener</target>
        </trans-unit>
        <trans-unit id="7a98e796165de27b506d17c1b8df68a602236c4d" translate="yes" xml:space="preserve">
          <source>BorderUIResource</source>
          <target state="translated">BorderUIResource</target>
        </trans-unit>
        <trans-unit id="d6603988c69141898fd8503ac0e6967945bab9a1" translate="yes" xml:space="preserve">
          <source>BorderUIResource.BevelBorderUIResource</source>
          <target state="translated">BorderUIResource.BevelBorderUIResource</target>
        </trans-unit>
        <trans-unit id="2e89b602b1c3bc0cf5e02eccd5acb97da0208993" translate="yes" xml:space="preserve">
          <source>BorderUIResource.CompoundBorderUIResource</source>
          <target state="translated">BorderUIResource.CompoundBorderUIResource</target>
        </trans-unit>
        <trans-unit id="90955b262a093b6639444c2e3f33bbab5313df47" translate="yes" xml:space="preserve">
          <source>BorderUIResource.EmptyBorderUIResource</source>
          <target state="translated">BorderUIResource.EmptyBorderUIResource</target>
        </trans-unit>
        <trans-unit id="0fc3a5f8722b7a5a3e3f157957aad318caf419ea" translate="yes" xml:space="preserve">
          <source>BorderUIResource.EtchedBorderUIResource</source>
          <target state="translated">BorderUIResource.EtchedBorderUIResource</target>
        </trans-unit>
        <trans-unit id="8b5cb37b951049a963e15a4374c94fe9391186ba" translate="yes" xml:space="preserve">
          <source>BorderUIResource.LineBorderUIResource</source>
          <target state="translated">BorderUIResource.LineBorderUIResource</target>
        </trans-unit>
        <trans-unit id="dea7ff55d9616dcca3ab1e531e8e90f0f75376c0" translate="yes" xml:space="preserve">
          <source>BorderUIResource.MatteBorderUIResource</source>
          <target state="translated">BorderUIResource.MatteBorderUIResource</target>
        </trans-unit>
        <trans-unit id="6cc59feea32efc1b17c82065999b98d7141bf804" translate="yes" xml:space="preserve">
          <source>BorderUIResource.TitledBorderUIResource</source>
          <target state="translated">BorderUIResource.TitledBorderUIResource</target>
        </trans-unit>
        <trans-unit id="29ba42d4e15c33d81dde8a95447c33fef04cb96c" translate="yes" xml:space="preserve">
          <source>Both builder and &lt;code&gt;WebSocket&lt;/code&gt;s created with it operate in a non-blocking fashion. That is, their methods do not block before returning a &lt;code&gt;CompletableFuture&lt;/code&gt;. Asynchronous tasks are executed in this &lt;code&gt;HttpClient&lt;/code&gt;'s executor.</source>
          <target state="translated">빌더와 &lt;code&gt;WebSocket&lt;/code&gt; 은 모두 비 차단 방식으로 작동합니다. 즉, 해당 메서드는 &lt;code&gt;CompletableFuture&lt;/code&gt; 를 반환하기 전에 차단되지 않습니다 . 이 &lt;code&gt;HttpClient&lt;/code&gt; 실행 프로그램에서 비동기 작업이 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="3595d2fd13302959bc317c7f4b891850cf4a7f18" translate="yes" xml:space="preserve">
          <source>Both cases will create a DatagramSocket able to receive broadcasts on UDP port 8888.</source>
          <target state="translated">두 경우 모두 UDP 포트 8888에서 브로드 캐스트를 수신 할 수있는 DatagramSocket을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="5ad5f67ff8efcbbc82b98bc9c5990f42b67566df" translate="yes" xml:space="preserve">
          <source>Both compound names must have the same number of components.</source>
          <target state="translated">두 복합 이름 모두 동일한 수의 구성 요소를 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="f1d2f1cb2afcb117542272791b1002926ca4ea7d" translate="yes" xml:space="preserve">
          <source>Both null values and the null key are supported. This class has performance characteristics similar to those of the &lt;code&gt;HashMap&lt;/code&gt; class, and has the same efficiency parameters of &lt;em&gt;initial capacity&lt;/em&gt; and &lt;em&gt;load factor&lt;/em&gt;.</source>
          <target state="translated">널값과 널 키가 모두 지원됩니다. 이 클래스는 &lt;code&gt;HashMap&lt;/code&gt; 클래스 와 유사한 성능 특성을 가지며 &lt;em&gt;초기 용량&lt;/em&gt; 및 &lt;em&gt;로드 팩터&lt;/em&gt; 와 동일한 효율 매개 변수를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="ca63d0c749efdb94b0096257f1781e8e3f9cda0f" translate="yes" xml:space="preserve">
          <source>Both prediction resistance and reseed.</source>
          <target state="translated">예측 저항과 다시 시드 모두.</target>
        </trans-unit>
        <trans-unit id="ecbb0d5db293d9937374ced7c423abd9f6356e6c" translate="yes" xml:space="preserve">
          <source>Both the color and the alpha of the destination are cleared (Porter-Duff Clear rule).</source>
          <target state="translated">목적지의 색상과 알파가 모두 지워집니다 (Porter-Duff Clear 규칙).</target>
        </trans-unit>
        <trans-unit id="f6415af4604bd6a2721712ef4f070ab79d9801bb" translate="yes" xml:space="preserve">
          <source>Both the color and the alpha of the destination are cleared (Porter-Duff Clear rule). Neither the source nor the destination is used as input.</source>
          <target state="translated">목적지의 색상과 알파가 모두 지워집니다 (Porter-Duff Clear 규칙). 소스와 대상 모두 입력으로 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8137268d91d65a070e83aa2c06bb989b4c712b30" translate="yes" xml:space="preserve">
          <source>Both the row and column selection models for &lt;code&gt;JTable&lt;/code&gt; default to using a &lt;code&gt;DefaultListSelectionModel&lt;/code&gt; so that &lt;code&gt;JTable&lt;/code&gt; works the same way as the &lt;code&gt;JList&lt;/code&gt;. See the &lt;code&gt;setSelectionMode&lt;/code&gt; method in &lt;code&gt;JList&lt;/code&gt; for details about the modes.</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 의 행 및 열 선택 모델은 기본적으로 &lt;code&gt;DefaultListSelectionModel&lt;/code&gt; 을 사용 하므로 &lt;code&gt;JTable&lt;/code&gt; 이 &lt;code&gt;JList&lt;/code&gt; 와 동일한 방식으로 작동합니다 . 모드에 대한 자세한 내용은 &lt;code&gt;JList&lt;/code&gt; 의 &lt;code&gt;setSelectionMode&lt;/code&gt; 메서드를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5373e10df8d87d6be57b5dbe29adf98e3ebf0549" translate="yes" xml:space="preserve">
          <source>Both values are set and available from the created &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">두 값이 모두 설정되고 생성 된 &lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt; 에서 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="16a152a8615b6358632ac8c8d7833ea1564ffa87" translate="yes" xml:space="preserve">
          <source>Both values are set by computing their values from the specified milliseconds and are available using the &lt;code&gt;get&lt;/code&gt; methods of the created &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;. The values conform to and are defined by:</source>
          <target state="translated">두 값은 지정된 밀리 초에서 값을 계산하여 설정되며 생성 된 &lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;get&lt;/code&gt; 메서드를 사용하여 사용할 수 있습니다 . 값은 다음을 준수하고 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="7862383e0a37016766574a2f04f8557b4d0f49d7" translate="yes" xml:space="preserve">
          <source>Both vendors and developers can register &lt;code&gt;SyncProvider&lt;/code&gt; implementations using one of the following mechanisms.</source>
          <target state="translated">공급 업체와 개발자 모두 다음 메커니즘 중 하나를 사용하여 &lt;code&gt;SyncProvider&lt;/code&gt; 구현을 등록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3e3da6a0a271173558be9cbc9e382de493164957" translate="yes" xml:space="preserve">
          <source>Bound property</source>
          <target state="translated">바운드 속성</target>
        </trans-unit>
        <trans-unit id="53570faeb0df46b1a2d5fbd0fbdfdfd1b5e79e2b" translate="yes" xml:space="preserve">
          <source>Bound property for lastLocation.</source>
          <target state="translated">lastLocation에 대한 바인딩 된 속성입니다.</target>
        </trans-unit>
        <trans-unit id="6f7e07c8fbc89f9dea09aea24015c6f540da38fa" translate="yes" xml:space="preserve">
          <source>Bound property for oneTouchExpandable.</source>
          <target state="translated">oneTouchExpandable의 바인딩 된 속성입니다.</target>
        </trans-unit>
        <trans-unit id="136b942a1eb957982a8193c2cfe6efb51382f9d1" translate="yes" xml:space="preserve">
          <source>Bound property for the dividerLocation.</source>
          <target state="translated">dividerLocation의 바인딩 된 속성입니다.</target>
        </trans-unit>
        <trans-unit id="8c3714d16fd1012fc699fad24f7722b00eb936ff" translate="yes" xml:space="preserve">
          <source>Bound property for weight.</source>
          <target state="translated">무게에 대한 바운드 속성.</target>
        </trans-unit>
        <trans-unit id="ce319acf0b9043695ed9871d636fca5f4fc2a7a8" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;cellEditor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cellEditor&lt;/code&gt; 의 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="1cb78d194e515da191a650f498a79d6fb324dab3" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;cellRenderer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cellRenderer&lt;/code&gt; 의 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="63dd5919015fe33ade2f7db1b28096da9002bb4b" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;editable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;editable&lt;/code&gt; 대한 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="395e7bae0f344b5c824b4325624f8a6c1b0a7538" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;icon&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;icon&lt;/code&gt; 의 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="4df1990455a59f16d44961e68393f65a815b2ccd" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;initialSelectionValue&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;initialSelectionValue&lt;/code&gt; 에 대한 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="b74a9436507120e61723b5f88d5df3ae3b1cc789" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;initialValue&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;initialValue&lt;/code&gt; 의 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="60d0ddd2fcc61fccc062528ec3008afddd2b4050" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;inputValue&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inputValue&lt;/code&gt; 에 대한 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="96f25f49c10fdcca7975c3249cae2b081f550015" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;largeModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;largeModel&lt;/code&gt; 의 바인딩 된 속성 이름 입니다 .</target>
        </trans-unit>
        <trans-unit id="b310d2d5ba217e2cb5edbffa64f972993bbbe7d4" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;leadSelectionPath&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;leadSelectionPath&lt;/code&gt; 의 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="1ca97f1c65b198e4fe69b4a338e59c224d6cd850" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;message&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; 대한 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="da73b75be315727ac1fd4e0a1499e6f2683f01d6" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;messagesStopCellEditing&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;messagesStopCellEditing&lt;/code&gt; 의 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="1ca71e914054e951b1c98e5ae098c0944ab3cca9" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;option&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;option&lt;/code&gt; 대한 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="051456b921094fdcd3f019f7651c1ba2f851c916" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;optionType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;optionType&lt;/code&gt; 의 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="b77064fb03e87433aa34eabb0dd29d3e04860395" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;rootVisible&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rootVisible&lt;/code&gt; 에 대한 바인딩 된 속성 이름 입니다 .</target>
        </trans-unit>
        <trans-unit id="3905813a8a4a5aad94f1add56544d55d69f6cc03" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;rowHeight&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rowHeight&lt;/code&gt; 의 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="4ccfd1365ef65bc165a771936ea85cdfc6ff6c79" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;scrollsOnExpand&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scrollsOnExpand&lt;/code&gt; 의 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="9d22993aaa2ac58d124a48d953ed5459c8a6c5f9" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;selectionValues&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;selectionValues&lt;/code&gt; 에 대한 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="f0380a5632c34edb9bc236b26cdf4c67cb34f81d" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;showsRootHandles&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;showsRootHandles&lt;/code&gt; 의 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="d23605a605d1ab0f703499a9c0937d8663082108" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;toggleClickCount&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;toggleClickCount&lt;/code&gt; 의 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="6bbcf90be5619354cba4e07f91bcaeb24b101d74" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;treeModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;treeModel&lt;/code&gt; 의 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="11ce5c8a1f4de74a543992f710d2d617f18e0e14" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 대한 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="1d8bab1e00fc3a23e48e87eca701c81fed4f8762" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 에 대한 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="5eff916ca996eb819a0c6952b1ffd43ab7779d42" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;visibleRowCount&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;visibleRowCount&lt;/code&gt; 에 대한 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="412a87ee93f284742f8db2cbb6b9ba28f179b2ec" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;wantsInput&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;wantsInput&lt;/code&gt; 의 바인딩 된 속성 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="4cb6a70037c603e9a52e2ca72428fb8d984a8ef1" translate="yes" xml:space="preserve">
          <source>Bound property name for anchor selection path.</source>
          <target state="translated">앵커 선택 경로의 바인딩 된 속성 이름입니다.</target>
        </trans-unit>
        <trans-unit id="a81cede6a210ceb3e43f53969905017554c669d0" translate="yes" xml:space="preserve">
          <source>Bound property name for border.</source>
          <target state="translated">테두리에 대한 바인딩 된 속성 이름입니다.</target>
        </trans-unit>
        <trans-unit id="80e48975a9651a54c46a0664149ae194e4fde2a4" translate="yes" xml:space="preserve">
          <source>Bound property name for continuousLayout.</source>
          <target state="translated">ContinuousLayout의 바인딩 된 속성 이름입니다.</target>
        </trans-unit>
        <trans-unit id="d7f2aaf41219ddf400b91e76ceaac5bb36219833" translate="yes" xml:space="preserve">
          <source>Bound property name for expands selected paths property</source>
          <target state="translated">선택한 경로 속성을 확장하기위한 바인딩 된 속성 이름</target>
        </trans-unit>
        <trans-unit id="eeb1725aa0e14af15314318d10e840aa8f3c3e9a" translate="yes" xml:space="preserve">
          <source>Bound property name for orientation (horizontal or vertical).</source>
          <target state="translated">방향 (가로 또는 세로)에 대한 바인딩 된 속성 이름입니다.</target>
        </trans-unit>
        <trans-unit id="eef94cfdbc2e58108a699df4ebd68c8c33dc0a81" translate="yes" xml:space="preserve">
          <source>Bound property name for selectionModel.</source>
          <target state="translated">selectionModel의 바인딩 된 속성 이름입니다.</target>
        </trans-unit>
        <trans-unit id="70cbd0b1c47315493ecc4e3cc5b826137b42055b" translate="yes" xml:space="preserve">
          <source>Bound property name.</source>
          <target state="translated">바인딩 된 속성 이름입니다.</target>
        </trans-unit>
        <trans-unit id="77697755f4af4d764c024b9d7f478b1eaf6b4b14" translate="yes" xml:space="preserve">
          <source>Boundary matchers</source>
          <target state="translated">경계 매처</target>
        </trans-unit>
        <trans-unit id="0dd3d6db12c1b8eec9e5f4e6f422befff36f2901" translate="yes" xml:space="preserve">
          <source>BoundedRangeModel</source>
          <target state="translated">BoundedRangeModel</target>
        </trans-unit>
        <trans-unit id="239ca5767afac9641593464ce02bc454d6ac07a9" translate="yes" xml:space="preserve">
          <source>Box</source>
          <target state="translated">Box</target>
        </trans-unit>
        <trans-unit id="87e8fc1b19ca8977a10dd3e93ee3a88271f0bb95" translate="yes" xml:space="preserve">
          <source>Box-orientation constant used to specify the bottom of a box.</source>
          <target state="translated">상자 바닥을 지정하는 데 사용되는 상자 방향 상수입니다.</target>
        </trans-unit>
        <trans-unit id="80d6fa3c9a74e673d1ed6945c494b6d6c965f72f" translate="yes" xml:space="preserve">
          <source>Box-orientation constant used to specify the left side of a box.</source>
          <target state="translated">상자의 왼쪽을 지정하는 데 사용되는 상자 방향 상수입니다.</target>
        </trans-unit>
        <trans-unit id="3b1d32709a4833c44be4f4e066576e830eeadbd3" translate="yes" xml:space="preserve">
          <source>Box-orientation constant used to specify the right side of a box.</source>
          <target state="translated">상자의 오른쪽을 지정하는 데 사용되는 상자 방향 상수입니다.</target>
        </trans-unit>
        <trans-unit id="7418621de14b100194522d0401896d814e1b96cb" translate="yes" xml:space="preserve">
          <source>Box-orientation constant used to specify the top of a box.</source>
          <target state="translated">상자의 상단을 지정하는 데 사용되는 상자 방향 상수입니다.</target>
        </trans-unit>
        <trans-unit id="092528bdebc3b64b64416eb0937dfe96e1c64972" translate="yes" xml:space="preserve">
          <source>Box.AccessibleBox</source>
          <target state="translated">Box.AccessibleBox</target>
        </trans-unit>
        <trans-unit id="372e1b073e7f4c716dc443730b21a0cc2a503511" translate="yes" xml:space="preserve">
          <source>Box.Filler</source>
          <target state="translated">Box.Filler</target>
        </trans-unit>
        <trans-unit id="c6a3bf8c88ddbae11dea86d944c0e5593914e47c" translate="yes" xml:space="preserve">
          <source>Box.Filler.AccessibleBoxFiller</source>
          <target state="translated">Box.Filler.AccessibleBoxFiller</target>
        </trans-unit>
        <trans-unit id="4643b60d17f31c867a1ac5c33654e7268d252e59" translate="yes" xml:space="preserve">
          <source>BoxLayout</source>
          <target state="translated">BoxLayout</target>
        </trans-unit>
        <trans-unit id="26db335a3d41f4e12f44a68577fff479bc7383f5" translate="yes" xml:space="preserve">
          <source>BoxLayout attempts to arrange components at their preferred widths (for horizontal layout) or heights (for vertical layout). For a horizontal layout, if not all the components are the same height, BoxLayout attempts to make all the components as high as the highest component. If that's not possible for a particular component, then BoxLayout aligns that component vertically, according to the component's Y alignment. By default, a component has a Y alignment of 0.5, which means that the vertical center of the component should have the same Y coordinate as the vertical centers of other components with 0.5 Y alignment.</source>
          <target state="translated">BoxLayout은 원하는 너비 (가로 레이아웃의 경우) 또는 높이 (세로 레이아웃의 경우)로 구성 요소를 정렬하려고합니다. 수평 레이아웃의 경우 모든 구성 요소의 높이가 같지 않으면 BoxLayout은 모든 구성 요소를 가장 높은 구성 요소만큼 높이려고합니다. 특정 구성 요소에서 가능하지 않은 경우 BoxLayout은 구성 요소의 Y 정렬에 따라 해당 구성 요소를 수직으로 정렬합니다. 기본적으로 구성 요소의 Y 정렬은 0.5입니다. 즉, 구성 요소의 수직 중심은 0.5 Y 정렬을 사용하는 다른 구성 요소의 수직 중심과 동일한 Y 좌표를 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="245a307387879b89d7e31e234d43fcad6030aa95" translate="yes" xml:space="preserve">
          <source>BoxView</source>
          <target state="translated">BoxView</target>
        </trans-unit>
        <trans-unit id="e8ba48c22488c853b299457eb0f47163a0e57fed" translate="yes" xml:space="preserve">
          <source>Boxes are a heavily used view, and having a box that provides this behavior gives substantial opportunity to plug the behavior into a view hierarchy from the view factory.</source>
          <target state="translated">상자는 많이 사용되는 뷰이며이 동작을 제공하는 상자가 있으면 뷰 팩토리의 뷰 계층 구조에 동작을 연결할 수있는 상당한 기회가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="53ae0a115d006c0222a03c676dd0106e0eacae1d" translate="yes" xml:space="preserve">
          <source>Boxes are easier to estimate the size of than some other shapes.</source>
          <target state="translated">상자는 다른 모양보다 크기를 추정하기가 더 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="33e49eb3e69074bc6b7eb66f94f02663fafb823a" translate="yes" xml:space="preserve">
          <source>Boxes are tiled in one direction, so it is easy to divide them into zones in a reliable way.</source>
          <target state="translated">상자는 한 방향으로 바둑판 식으로 배열되어 있으므로 신뢰할 수있는 방식으로 영역으로 쉽게 분할 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="576dfcb352cb55a31073bc0fff1e93741439132a" translate="yes" xml:space="preserve">
          <source>Boxes typically have a simple relationship to the model (i.e. they create child views that directly represent the child elements).</source>
          <target state="translated">상자는 일반적으로 모델과 간단한 관계를 갖습니다 (즉, 하위 요소를 직접 나타내는 하위 뷰를 생성합니다).</target>
        </trans-unit>
        <trans-unit id="9a369c5af5562483d85f08a2c6ca10f4e1795f7e" translate="yes" xml:space="preserve">
          <source>BranchElement</source>
          <target state="translated">BranchElement</target>
        </trans-unit>
        <trans-unit id="a46387f95fa0503ee635462560f3a0308e6c32ad" translate="yes" xml:space="preserve">
          <source>Branches can have any number of children. Leaves do not have children. To determine how many children a branch has, you can call &lt;code&gt;getElementCount()&lt;/code&gt;. To determine the parent of an Element, you can call &lt;code&gt;getParentElement()&lt;/code&gt;. Root elements don't have parents, so calling &lt;code&gt;getParentElement()&lt;/code&gt; on a root returns null.</source>
          <target state="translated">분기에는 여러 하위 항목이있을 수 있습니다. 잎에는 자식이 없습니다. 분기에 몇 개의 자식이 있는지 확인하려면 &lt;code&gt;getElementCount()&lt;/code&gt; 호출 할 수 있습니다 . 요소의 부모를 확인하려면 &lt;code&gt;getParentElement()&lt;/code&gt; 호출 할 수 있습니다 . 루트 요소에는 부모가 없으므로 루트에서 &lt;code&gt;getParentElement()&lt;/code&gt; 를 호출 하면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="94557c142dbb997de35d349ea1ef22daaa09f969" translate="yes" xml:space="preserve">
          <source>Branches off an association.</source>
          <target state="translated">협회에서 분기합니다.</target>
        </trans-unit>
        <trans-unit id="db0dfc8861ac9dd7fb052d2fe6c0b90efdd0d6d7" translate="yes" xml:space="preserve">
          <source>BreakIterator</source>
          <target state="translated">BreakIterator</target>
        </trans-unit>
        <trans-unit id="73d2be7894564573cb85d72a68353fc124ecd4f4" translate="yes" xml:space="preserve">
          <source>BreakIterator.clone()</source>
          <target state="translated">BreakIterator.clone()</target>
        </trans-unit>
        <trans-unit id="da6bf1d35deb64b6191c3ae9de345fe6684c54a9" translate="yes" xml:space="preserve">
          <source>BreakIterator.current()</source>
          <target state="translated">BreakIterator.current()</target>
        </trans-unit>
        <trans-unit id="bf09d9541cec3f8df88cdebbe95341bfbe4dec11" translate="yes" xml:space="preserve">
          <source>BreakIterator.first()</source>
          <target state="translated">BreakIterator.first()</target>
        </trans-unit>
        <trans-unit id="95ff1eeed767be0330349f53c51b0ce57c9eaf44" translate="yes" xml:space="preserve">
          <source>BreakIterator.following()</source>
          <target state="translated">BreakIterator.following()</target>
        </trans-unit>
        <trans-unit id="9f3475be4d64fded614e93c8922d9477bedbd9ca" translate="yes" xml:space="preserve">
          <source>BreakIterator.getAvailableLocales()</source>
          <target state="translated">BreakIterator.getAvailableLocales()</target>
        </trans-unit>
        <trans-unit id="e93f2ad1811bd0849524cb54af531961b7c09ff4" translate="yes" xml:space="preserve">
          <source>BreakIterator.getCharacterInstance()</source>
          <target state="translated">BreakIterator.getCharacterInstance()</target>
        </trans-unit>
        <trans-unit id="42f73443349742d1d7044a9833ce5a082c8f6b2b" translate="yes" xml:space="preserve">
          <source>BreakIterator.getLineInstance()</source>
          <target state="translated">BreakIterator.getLineInstance()</target>
        </trans-unit>
        <trans-unit id="91d471a5b105bc6d0372a429fa1845cc92c864c9" translate="yes" xml:space="preserve">
          <source>BreakIterator.getSentenceInstance()</source>
          <target state="translated">BreakIterator.getSentenceInstance()</target>
        </trans-unit>
        <trans-unit id="e3759af129bc8acb53fedf9bd99bf5e44762b81e" translate="yes" xml:space="preserve">
          <source>BreakIterator.getText()</source>
          <target state="translated">BreakIterator.getText()</target>
        </trans-unit>
        <trans-unit id="1d9f4544aa87216d613ef7a0b195689ca1e08fbd" translate="yes" xml:space="preserve">
          <source>BreakIterator.getWordInstance()</source>
          <target state="translated">BreakIterator.getWordInstance()</target>
        </trans-unit>
        <trans-unit id="328d2d3358ab8ccf44da71c0cd5ddc48c52e2c41" translate="yes" xml:space="preserve">
          <source>BreakIterator.isBoundary()</source>
          <target state="translated">BreakIterator.isBoundary()</target>
        </trans-unit>
        <trans-unit id="e579664a42c2701f6d9c2f6efe0638c173fa3149" translate="yes" xml:space="preserve">
          <source>BreakIterator.last()</source>
          <target state="translated">BreakIterator.last()</target>
        </trans-unit>
        <trans-unit id="da1eba00eef7f48debd05fcaa0f4623a09bf11da" translate="yes" xml:space="preserve">
          <source>BreakIterator.next()</source>
          <target state="translated">BreakIterator.next()</target>
        </trans-unit>
        <trans-unit id="0bc2c3886a6402d9d803dfc885300d2927aa4280" translate="yes" xml:space="preserve">
          <source>BreakIterator.preceding()</source>
          <target state="translated">BreakIterator.preceding()</target>
        </trans-unit>
        <trans-unit id="23bff1c758e9909090a2f8ee8266ad4621aa3f5f" translate="yes" xml:space="preserve">
          <source>BreakIterator.previous()</source>
          <target state="translated">BreakIterator.previous()</target>
        </trans-unit>
        <trans-unit id="aab3c7755d6f196fcee6b0a57b1144e9963edbb0" translate="yes" xml:space="preserve">
          <source>BreakIterator.setText()</source>
          <target state="translated">BreakIterator.setText()</target>
        </trans-unit>
        <trans-unit id="4250521827814cd1da79158d915a1d47d078ddce" translate="yes" xml:space="preserve">
          <source>BreakIteratorProvider</source>
          <target state="translated">BreakIteratorProvider</target>
        </trans-unit>
        <trans-unit id="4011ceec6b9e20b3967f17bb065232f412c54c3c" translate="yes" xml:space="preserve">
          <source>BreakIteratorProvider.getCharacterInstance()</source>
          <target state="translated">BreakIteratorProvider.getCharacterInstance()</target>
        </trans-unit>
        <trans-unit id="fa22c1a331bc20668bf96a91fe0315cb6f7a7330" translate="yes" xml:space="preserve">
          <source>BreakIteratorProvider.getLineInstance()</source>
          <target state="translated">BreakIteratorProvider.getLineInstance()</target>
        </trans-unit>
        <trans-unit id="f70bd4898021d976c2344351b78a60428c2942ed" translate="yes" xml:space="preserve">
          <source>BreakIteratorProvider.getSentenceInstance()</source>
          <target state="translated">BreakIteratorProvider.getSentenceInstance()</target>
        </trans-unit>
        <trans-unit id="faf6f0aa3d6f95f40e38a6459451927e113d97f2" translate="yes" xml:space="preserve">
          <source>BreakIteratorProvider.getWordInstance()</source>
          <target state="translated">BreakIteratorProvider.getWordInstance()</target>
        </trans-unit>
        <trans-unit id="8f8d9dc0d8ea8c8c498302c2191e6437db355df6" translate="yes" xml:space="preserve">
          <source>BreakTree</source>
          <target state="translated">BreakTree</target>
        </trans-unit>
        <trans-unit id="8b6c85e0b3948e894d5268280951b57c696b3152" translate="yes" xml:space="preserve">
          <source>BreakpointEvent</source>
          <target state="translated">BreakpointEvent</target>
        </trans-unit>
        <trans-unit id="074f1744c6e010b5e198a9593aaca531af74c440" translate="yes" xml:space="preserve">
          <source>BreakpointRequest</source>
          <target state="translated">BreakpointRequest</target>
        </trans-unit>
        <trans-unit id="18b4dce48094c7dd485e28f03e6b95be5421ef4e" translate="yes" xml:space="preserve">
          <source>Breaks this node into two nodes at the specified &lt;code&gt;offset&lt;/code&gt;, keeping both in the tree as siblings.</source>
          <target state="translated">이 노드를 지정된 &lt;code&gt;offset&lt;/code&gt; 에서 두 개의 노드로 나누고 두 노드를 모두 형제로 유지합니다.</target>
        </trans-unit>
        <trans-unit id="2c1c3346df98f9ac4f139c8e7f58fdebbfca2c34" translate="yes" xml:space="preserve">
          <source>Breaks this node into two nodes at the specified &lt;code&gt;offset&lt;/code&gt;, keeping both in the tree as siblings. After being split, this node will contain all the content up to the &lt;code&gt;offset&lt;/code&gt; point. A new node of the same type, which contains all the content at and after the &lt;code&gt;offset&lt;/code&gt; point, is returned. If the original node had a parent node, the new node is inserted as the next sibling of the original node. When the &lt;code&gt;offset&lt;/code&gt; is equal to the length of this node, the new node has no data.</source>
          <target state="translated">이 노드를 지정된 &lt;code&gt;offset&lt;/code&gt; 에서 두 개의 노드로 나누고 트리에서 둘 다 형제로 유지합니다. 분할 된 후이 노드에는 &lt;code&gt;offset&lt;/code&gt; 지점 까지 모든 콘텐츠가 포함 됩니다. &lt;code&gt;offset&lt;/code&gt; 지점 과 그 이후의 모든 콘텐츠를 포함하는 동일한 유형의 새 노드 가 반환됩니다. 원래 노드에 상위 노드가있는 경우 새 노드는 원래 노드의 다음 형제로 삽입됩니다. 때 &lt;code&gt;offset&lt;/code&gt; IS이 노드의 길이와 동일한 새로운 노드는 데이터가 없습니다.</target>
        </trans-unit>
        <trans-unit id="b4fbeb0b62132b5a41e9819c7798155ce3dab3ed" translate="yes" xml:space="preserve">
          <source>Breaks this view on the given axis at the given length.</source>
          <target state="translated">주어진 축에서 주어진 길이로이 뷰를 끊습니다.</target>
        </trans-unit>
        <trans-unit id="f72ce6035891b76afb082e6a403b2d3ee1aeba94" translate="yes" xml:space="preserve">
          <source>Breaks this view on the given axis at the given length. This is implemented to attempt to break on a whitespace location, and returns a fragment with the whitespace at the end. If a whitespace location can't be found, the nearest character is used.</source>
          <target state="translated">주어진 축에서 주어진 길이로이 뷰를 끊습니다. 이것은 공백 위치에서 중단을 시도하기 위해 구현되고 끝에 공백이있는 조각을 반환합니다. 공백 위치를 찾을 수없는 경우 가장 가까운 문자가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c21bb4feda1b96d7babad58e21e1aa2241931fb2" translate="yes" xml:space="preserve">
          <source>Bridges JSR 199, JSR 269, and the Tree API.</source>
          <target state="translated">JSR 199, JSR 269 및 Tree API를 연결합니다.</target>
        </trans-unit>
        <trans-unit id="ed1927a67271cb657400148297d8b61e2c5d758c" translate="yes" xml:space="preserve">
          <source>Briefly, &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; determines the relationship between the multiple input (electronic) documents fed into a multidoc print job and the output (physical) document or documents produced by the multidoc print job. There are two possibilities:</source>
          <target state="translated">간단히 말해서 &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; 은 다중 문서 인쇄 작업에 공급되는 다중 입력 (전자) 문서와 다중 문서 인쇄 작업에 의해 생성 된 출력 (물리적) 문서 간의 관계를 결정합니다. 두 가지 가능성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c11fcc63058ef7cec96c1281491cabedad11adf" translate="yes" xml:space="preserve">
          <source>Briefly, MultipleDocumentHandling determines the relationship between the multiple input (electronic) documents fed into a multidoc print job and the output (physical) document or documents produced by the multidoc print job. There are two possibilities:</source>
          <target state="translated">간단히, MultipleDocumentHandling은 다중 문서 인쇄 작업에 공급 된 다중 입력 (전자) 문서와 다중 문서 인쇄 작업으로 생성 된 출력 (물리적) 문서 사이의 관계를 결정합니다. 두 가지 가능성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="64e2f734fa47853ea4a866427d3a3d670f77884d" translate="yes" xml:space="preserve">
          <source>Brings this internal frame to the front.</source>
          <target state="translated">이 내부 프레임을 앞으로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6a2fc3473aa049cf51d6d729186fe93c433ae4d2" translate="yes" xml:space="preserve">
          <source>Brings this internal frame to the front. Places this internal frame at the top of the stacking order and makes the corresponding adjustment to other visible internal frames.</source>
          <target state="translated">이 내부 프레임을 앞으로 가져옵니다. 이 내부 프레임을 스택 순서의 맨 위에 배치하고 표시되는 다른 내부 프레임에 맞게 조정합니다.</target>
        </trans-unit>
        <trans-unit id="68ebdac7d15e9a2f6679d43cdd813978a5f9b72d" translate="yes" xml:space="preserve">
          <source>Brings up a dialog displaying a message, specifying all parameters.</source>
          <target state="translated">모든 매개 변수를 지정하는 메시지를 표시하는 대화 상자를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="37aede12b5f1b8c5bd80455e61c2592cfd20615e" translate="yes" xml:space="preserve">
          <source>Brings up a dialog that displays a message using a default icon determined by the &lt;code&gt;messageType&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;messageType&lt;/code&gt; 매개 변수에 의해 결정된 기본 아이콘을 사용하여 메시지를 표시하는 대화 상자를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="c8919dacaae9fc0f3b68c8d45050403bde0fbab8" translate="yes" xml:space="preserve">
          <source>Brings up a dialog where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter, where the &lt;code&gt;messageType&lt;/code&gt; parameter determines the icon to display.</source>
          <target state="translated">&lt;code&gt;optionType&lt;/code&gt; 매개 변수에 의해 선택 항목 수가 결정되는 대화 상자를 불러 옵니다. 여기서 &lt;code&gt;messageType&lt;/code&gt; 매개 변수는 표시 할 아이콘을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="96a1b799edfcfe6d4c30ee79493271405fccbb40" translate="yes" xml:space="preserve">
          <source>Brings up a dialog where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter, where the &lt;code&gt;messageType&lt;/code&gt; parameter determines the icon to display. The &lt;code&gt;messageType&lt;/code&gt; parameter is primarily used to supply a default icon from the Look and Feel.</source>
          <target state="translated">&lt;code&gt;optionType&lt;/code&gt; 매개 변수에 의해 선택 항목 수가 결정되는 대화 상자를 불러 옵니다. 여기서 &lt;code&gt;messageType&lt;/code&gt; 매개 변수는 표시 할 아이콘을 결정합니다. &lt;code&gt;messageType&lt;/code&gt; 매개 변수는 주로의 Look &amp;amp; Feel로부터의 디폴트 아이콘을하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7d1285dcb27aa5f565c988690ae94a16e6a61494" translate="yes" xml:space="preserve">
          <source>Brings up a dialog where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;optionType&lt;/code&gt; 매개 변수에 의해 선택 항목 수가 결정되는 대화 상자를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="76fccbd3333151a6c1d552fded56e53f9f5e8747" translate="yes" xml:space="preserve">
          <source>Brings up a dialog with a specified icon, where the initial choice is determined by the &lt;code&gt;initialValue&lt;/code&gt; parameter and the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter.</source>
          <target state="translated">초기 선택은 &lt;code&gt;initialValue&lt;/code&gt; 매개 변수에 의해 결정되고 선택의 수는 &lt;code&gt;optionType&lt;/code&gt; 매개 변수에 의해 결정되는 지정된 아이콘이있는 대화 상자를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="642af74412927aeabf4f80626f4e6531e2dc99df" translate="yes" xml:space="preserve">
          <source>Brings up a dialog with a specified icon, where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;optionType&lt;/code&gt; 매개 변수에 의해 선택 항목 수가 결정되는 지정된 아이콘이있는 대화 상자를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="6bd47c00fc2c04f9f5c75a0461255a17d688e5a6" translate="yes" xml:space="preserve">
          <source>Brings up a dialog with a specified icon, where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter. The &lt;code&gt;messageType&lt;/code&gt; parameter is primarily used to supply a default icon from the look and feel.</source>
          <target state="translated">&lt;code&gt;optionType&lt;/code&gt; 매개 변수에 의해 선택 항목 수가 결정되는 지정된 아이콘이있는 대화 상자를 표시합니다 . &lt;code&gt;messageType&lt;/code&gt; 매개 변수는 주로 모양과 느낌에서 기본 아이콘을 제공하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0867db2739cb6163705ba4cc5f69491ad903f268" translate="yes" xml:space="preserve">
          <source>Brings up a dialog with the options</source>
          <target state="translated">옵션이있는 대화 상자를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="d9fcbc07dbfa63998e30a33f09204c784a69dbd0" translate="yes" xml:space="preserve">
          <source>Brings up a internal dialog panel where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;optionType&lt;/code&gt; 매개 변수에 의해 선택 항목 수가 결정되는 내부 대화 상자 패널을 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="77a64fdcbf1d72dbfcbe4189552187357816f88d" translate="yes" xml:space="preserve">
          <source>Brings up an information-message dialog titled &quot;Message&quot;.</source>
          <target state="translated">&quot;메시지&quot;라는 정보 메시지 대화 상자를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="9290f22fee2ddd41b4633de8d5a7a0099895356c" translate="yes" xml:space="preserve">
          <source>Brings up an internal confirmation dialog panel.</source>
          <target state="translated">내부 확인 대화 상자를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="1354c7d511562b7b53020c40b04f04a92f17c115" translate="yes" xml:space="preserve">
          <source>Brings up an internal confirmation dialog panel. The dialog is a information-message dialog titled &quot;Message&quot;.</source>
          <target state="translated">내부 확인 대화 상자를 표시합니다. 이 대화 상자는 &quot;메시지&quot;라는 제목의 정보 메시지 대화 상자입니다.</target>
        </trans-unit>
        <trans-unit id="e71efedadfd7e901940887f81ac109b744ec46c7" translate="yes" xml:space="preserve">
          <source>Brings up an internal dialog panel displaying a message, specifying all parameters.</source>
          <target state="translated">모든 매개 변수를 지정하는 메시지를 표시하는 내부 대화 상자를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="3909452e6f91b407db21edcdcd103aa42c4a707e" translate="yes" xml:space="preserve">
          <source>Brings up an internal dialog panel that displays a message using a default icon determined by the &lt;code&gt;messageType&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;messageType&lt;/code&gt; 매개 변수에 의해 결정된 기본 아이콘을 사용하여 메시지를 표시하는 내부 대화 상자 패널을 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="847b3dbab3a117f7f2dd5710c647f3cdf9023718" translate="yes" xml:space="preserve">
          <source>Brings up an internal dialog panel where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter, where the &lt;code&gt;messageType&lt;/code&gt; parameter determines the icon to display.</source>
          <target state="translated">&lt;code&gt;optionType&lt;/code&gt; 매개 변수에 의해 선택 항목 수가 결정되는 내부 대화 상자 패널 을 표시합니다. 여기서 &lt;code&gt;messageType&lt;/code&gt; 매개 변수는 표시 할 아이콘을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="eb50e240171ac41dd16db08ab10b8314e11fd84f" translate="yes" xml:space="preserve">
          <source>Brings up an internal dialog panel where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter, where the &lt;code&gt;messageType&lt;/code&gt; parameter determines the icon to display. The &lt;code&gt;messageType&lt;/code&gt; parameter is primarily used to supply a default icon from the Look and Feel.</source>
          <target state="translated">&lt;code&gt;optionType&lt;/code&gt; 매개 변수에 의해 선택 항목 수가 결정되는 내부 대화 상자 패널 을 표시합니다. 여기서 &lt;code&gt;messageType&lt;/code&gt; 매개 변수는 표시 할 아이콘을 결정합니다. &lt;code&gt;messageType&lt;/code&gt; 매개 변수는 주로의 Look &amp;amp; Feel로부터의 디폴트 아이콘을하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e9621387efd66453784728981078fb7983dd218a" translate="yes" xml:space="preserve">
          <source>Brings up an internal dialog panel with a specified icon, where the initial choice is determined by the &lt;code&gt;initialValue&lt;/code&gt; parameter and the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter.</source>
          <target state="translated">초기 선택은 &lt;code&gt;initialValue&lt;/code&gt; 매개 변수에 의해 결정되고 선택의 수는 &lt;code&gt;optionType&lt;/code&gt; 매개 변수에 의해 결정되는 지정된 아이콘이있는 내부 대화 패널을 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="8a77f4bca4476f69ed7b825515854ab171f15936" translate="yes" xml:space="preserve">
          <source>Brings up an internal dialog panel with a specified icon, where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;optionType&lt;/code&gt; 매개 변수에 의해 선택 항목 수가 결정되는 지정된 아이콘이있는 내부 대화 상자를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="b9d27732f6953e250df2ef7f26b396d55e0ff705" translate="yes" xml:space="preserve">
          <source>Brings up an internal dialog panel with a specified icon, where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter. The &lt;code&gt;messageType&lt;/code&gt; parameter is primarily used to supply a default icon from the look and feel.</source>
          <target state="translated">&lt;code&gt;optionType&lt;/code&gt; 매개 변수에 의해 선택 항목 수가 결정되는 지정된 아이콘이있는 내부 대화 상자를 표시합니다 . &lt;code&gt;messageType&lt;/code&gt; 매개 변수는 주로 모양과 느낌에서 기본 아이콘을 제공하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="aa18e4684e0b8ece90029e1ca60a3fc39a995bb9" translate="yes" xml:space="preserve">
          <source>Brings up an internal dialog panel with the options</source>
          <target state="translated">옵션이있는 내부 대화 패널을 불러옵니다.</target>
        </trans-unit>
        <trans-unit id="84bac425af51241cfe9ca189b61d91e60c979f86" translate="yes" xml:space="preserve">
          <source>Broadcasts a localized warning message to all registered &lt;code&gt;IIOReadWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method with a string taken from a &lt;code&gt;ResourceBundle&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ResourceBundle&lt;/code&gt; 에서 가져온 문자열로 &lt;code&gt;warningOccurred&lt;/code&gt; 메서드를 호출하여 등록 된 모든 &lt;code&gt;IIOReadWarningListener&lt;/code&gt; 에 지역화 된 경고 메시지를 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="5754759b7c00bc0c0ca0793fe43d72a6a21be40d" translate="yes" xml:space="preserve">
          <source>Broadcasts a localized warning message to all registered &lt;code&gt;IIOReadWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method with a string taken from a &lt;code&gt;ResourceBundle&lt;/code&gt;. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;ResourceBundle&lt;/code&gt; 에서 가져온 문자열로 &lt;code&gt;warningOccurred&lt;/code&gt; 메서드를 호출 하여 지역화 된 경고 메시지를 등록 된 모든 &lt;code&gt;IIOReadWarningListener&lt;/code&gt; 에 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b6b2104d4380bfcc07ee1624400c0a9ae97fe1c" translate="yes" xml:space="preserve">
          <source>Broadcasts a localized warning message to all registered &lt;code&gt;IIOWriteWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method with a string taken from a &lt;code&gt;ResourceBundle&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ResourceBundle&lt;/code&gt; 에서 가져온 문자열로 &lt;code&gt;warningOccurred&lt;/code&gt; 메서드를 호출하여 등록 &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; 모든 IIOWriteWarningListener에 지역화 된 경고 메시지를 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="12cd639426d6e28c84aa1968ac907f76de609caf" translate="yes" xml:space="preserve">
          <source>Broadcasts a localized warning message to all registered &lt;code&gt;IIOWriteWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method with a string taken from a &lt;code&gt;ResourceBundle&lt;/code&gt;. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;ResourceBundle&lt;/code&gt; 에서 가져온 문자열로 &lt;code&gt;warningOccurred&lt;/code&gt; 메서드를 호출 하여 지역화 된 경고 메시지를 등록 &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; 모든 IIOWriteWarningListener에 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="672595da198cc839d0f24f3ba49a77e1d6241a95" translate="yes" xml:space="preserve">
          <source>Broadcasts a warning message to all registered &lt;code&gt;IIOReadWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;warningOccurred&lt;/code&gt; 메서드 를 호출하여 등록 된 모든 &lt;code&gt;IIOReadWarningListener&lt;/code&gt; 에 경고 메시지를 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="d60a80c427121bf2d76085ba74eb25f2749e216c" translate="yes" xml:space="preserve">
          <source>Broadcasts a warning message to all registered &lt;code&gt;IIOReadWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;warningOccurred&lt;/code&gt; 메소드 를 호출하여 등록 된 모든 &lt;code&gt;IIOReadWarningListener&lt;/code&gt; 에 경고 메시지를 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="606eb15b13a2a049f91c20f6fd370de4c7c08fa2" translate="yes" xml:space="preserve">
          <source>Broadcasts a warning message to all registered &lt;code&gt;IIOWriteWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;warningOccurred&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; 모든 IIOWriteWarningListener에 경고 메시지를 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="b209d1f3ca83add90d97254eb06a8956e77f0daf" translate="yes" xml:space="preserve">
          <source>Broadcasts a warning message to all registered &lt;code&gt;IIOWriteWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;warningOccurred&lt;/code&gt; 메소드 를 호출하여 등록 &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; 모든 IIOWriteWarningListener에 경고 메시지를 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5dc5f1fd1423412b73fcb6d465a73380f964fe7b" translate="yes" xml:space="preserve">
          <source>Broadcasts that the read has been aborted to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;readAborted&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;readAborted&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 읽기가 중단되었음을 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="c055ff8e31ff34efb81af54c28b8d6af72be9d81" translate="yes" xml:space="preserve">
          <source>Broadcasts that the read has been aborted to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;readAborted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;readAborted&lt;/code&gt; 메소드 를 호출 하여 읽기가 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener 로 중단되었음을 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be62b11ac1d2a7d53b7e96adfd9d0cc9cb1e12ea" translate="yes" xml:space="preserve">
          <source>Broadcasts that the write has been aborted to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;writeAborted&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;writeAborted&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 쓰기가 중단되었음을 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="11332fc0f1ca94913e590e5257a1c51b274daa45" translate="yes" xml:space="preserve">
          <source>Broadcasts that the write has been aborted to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;writeAborted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;writeAborted&lt;/code&gt; 메소드 를 호출 하여 쓰기가 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener 로 중단되었음을 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d46f20bfd4922e21c6dada7e164ffb079194106" translate="yes" xml:space="preserve">
          <source>Broadcasts the beginning of a progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;passStarted&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;passStarted&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 모든 IIOReadUpdateListener에 프로그레시브 패스의 시작을 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="9a9d61677bb035010524d7355ecfa7606e1726ca" translate="yes" xml:space="preserve">
          <source>Broadcasts the beginning of a progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;passStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;passStarted&lt;/code&gt; 메소드 를 호출 하여 점진적 패스의 시작을 등록 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 모든 IIOReadUpdateListener로 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8cc1e39b382748d1c64e2f7b5efc01f33c25b5b" translate="yes" xml:space="preserve">
          <source>Broadcasts the beginning of a thumbnail progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailPassStarted&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;thumbnailPassStarted&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 모든 IIOReadUpdateListener에 썸네일 프로그레시브 패스의 시작을 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="f2bb48b9ba3ae265eaa3080eeb7ee5f62bf7d6e3" translate="yes" xml:space="preserve">
          <source>Broadcasts the beginning of a thumbnail progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailPassStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;thumbnailPassStarted&lt;/code&gt; 메소드 를 호출 해 , 썸네일 프로그레시브 패스의 개시를 등록 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 모든 IIOReadUpdateListener에 통지 합니다. 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d7639de15d40615e7d4e2243def678d4307fa13" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of a thumbnail read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailComplete&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;thumbnailComplete&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 썸네일 읽기 완료를 브로드 캐스팅합니다 .</target>
        </trans-unit>
        <trans-unit id="62cbabfc3c243d51e9f23d8f28cd987669f77d5a" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of a thumbnail read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;thumbnailComplete&lt;/code&gt; 메소드 를 호출 해 , 썸네일 읽기 완료를 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 통지합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="81db6f9f6ac9d73434a629b3a61098989cf3a51e" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of a thumbnail write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailComplete&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;thumbnailComplete&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 썸네일 쓰기 완료를 브로드 캐스팅합니다 .</target>
        </trans-unit>
        <trans-unit id="05a6591571de2645cd9790e153ece793cedefc96" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of a thumbnail write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;thumbnailComplete&lt;/code&gt; 메소드 를 호출 해 , 썸네일 기입의 완료를 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 통지 합니다. 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff6f30da9a634b2f74e8d46883ea3537d8e82fdd" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of an image read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageComplete&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;imageComplete&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 이미지 읽기 완료를 브로드 캐스팅합니다 .</target>
        </trans-unit>
        <trans-unit id="67279b761d26e6212c9e16352cdafb0c7a6a90df" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of an image read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;imageComplete&lt;/code&gt; 메소드 를 호출 하여 이미지 읽기 완료를 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e14c5fcf4fdec1d17c200bbfee4321fa5da49ba" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of an image write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageComplete&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;imageComplete&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 이미지 쓰기 완료를 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="bbfb93fed6ceccbe02d909d3c45854f1a5756ead" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of an image write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;imageComplete&lt;/code&gt; 메소드 를 호출 하여 이미지 쓰기 완료를 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d931440b18a406fc1bc45c5c248b923755df1aac" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of an sequence of image reads to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;sequenceComplete&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;sequenceComplete&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener 에 이미지 읽기 시퀀스 완료를 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="7fa490c11cb2ff79005a0d90361b1a31fb5aebea" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of an sequence of image reads to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;sequenceComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;sequenceComplete&lt;/code&gt; 메소드 를 호출 하여 일련의 이미지 읽기 완료를 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f71ee582cc34073f58b338701f3ce89c56e013f4" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of image completion to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageProgress&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;imageProgress&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 현재 이미지 완료율을 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="cb1816714bd539436b36423fbafc4804946cf9c6" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of image completion to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageProgress&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;imageProgress&lt;/code&gt; 메서드 를 호출하여 이미지 완성의 현재 백분율을 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43f6305ddb15c13287aace8d7354ab75ab0382aa" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of image completion to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageProgress&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;imageProgress&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 현재 이미지 완성 률을 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="239d62983466409831bf3bc425448a362e11fc16" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of image completion to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageProgress&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;imageProgress&lt;/code&gt; 메서드 를 호출하여 이미지 완성의 현재 백분율을 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="362695e7501b942305e5d2328d62574679962790" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of thumbnail completion to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailProgress&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;thumbnailProgress&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 현재 축소판 완성 률을 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="233d2ca30a48fcbcf7b9ef7802de901bfa62460f" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of thumbnail completion to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailProgress&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;thumbnailProgress&lt;/code&gt; 메소드 를 호출하는 것에 의해 , 현재의 섬네일 완료율을 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 통지합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2bcc9bc2a01d765cbe8b71b97d4d0b0eef3565c7" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of thumbnail completion to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailProgress&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;thumbnailProgress&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 현재 축소판 완성 률을 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="09e25eeb99d2dfff80d79f79671daa563b7d02cc" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of thumbnail completion to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailProgress&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;thumbnailProgress&lt;/code&gt; 메소드 를 호출하는 것에 의해 , 현재의 섬네일 완료율을 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 통지 합니다. 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f98659226b35dc3824f259d4be5f2170f056c064" translate="yes" xml:space="preserve">
          <source>Broadcasts the end of a progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;passComplete&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;passComplete&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 모든 IIOReadUpdateListener에 프로그레시브 패스의 끝을 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="382e93ee7cc33ea045f81f471c79d2c99ce1df13" translate="yes" xml:space="preserve">
          <source>Broadcasts the end of a progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;passComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;passComplete&lt;/code&gt; 메소드 를 호출 하여 점진적 패스의 종료를 등록 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 모든 IIOReadUpdateListener로 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19ce6b77d0d52cebd682a5c572f84427e586d731" translate="yes" xml:space="preserve">
          <source>Broadcasts the end of a thumbnail progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailPassComplete&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;thumbnailPassComplete&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 모든 IIOReadUpdateListener에 썸네일 프로그레시브 패스의 끝을 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="429b51c0efed2adb9f00389465cf4017b2da006d" translate="yes" xml:space="preserve">
          <source>Broadcasts the end of a thumbnail progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailPassComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;thumbnailPassComplete&lt;/code&gt; 메소드 를 호출 해 , 썸네일 프로그레시브 패스의 종료를 등록 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 모든 IIOReadUpdateListener에 통지 합니다. 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="936b29e7288d60bc2f2939f7535a14a6410f6506" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of a thumbnail read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailStarted&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;thumbnailStarted&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 썸네일 읽기의 시작을 브로드 캐스팅합니다 .</target>
        </trans-unit>
        <trans-unit id="92c71375c22804f33ee00fb64551009c5cdaa994" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of a thumbnail read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;thumbnailStarted&lt;/code&gt; 메소드 를 호출 해 , 썸네일 읽기의 개시를 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 통지합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0721078c14a5e7e93fb300de503bcbbf233c7404" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of a thumbnail write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailStarted&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;thumbnailStarted&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 썸네일 쓰기 시작을 브로드 캐스팅합니다 .</target>
        </trans-unit>
        <trans-unit id="c300dcf42b339ee1fb40c11212fa44cfc4777497" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of a thumbnail write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;thumbnailStarted&lt;/code&gt; 메소드 를 호출 해 , 썸네일 쓰기의 개시를 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 통지 합니다. 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23bbb521fe0133f80990873744dcdd63eb25c51d" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of an image read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageStarted&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;imageStarted&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener에 이미지 읽기의 시작을 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="c79c5b985921b5f056e23c847b716d18064e0c23" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of an image read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;imageStarted&lt;/code&gt; 메소드 를 호출 하여 이미지 읽기 시작을 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener로 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f444dbd07a7544e4d854f1e2b1983e41014096fe" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of an image write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageStarted&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;imageStarted&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 이미지 쓰기 시작을 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="c50de0ae586d28bba3aca2e1d3b56ac755f83ebb" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of an image write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;imageStarted&lt;/code&gt; 메소드 를 호출 하여 이미지 쓰기 시작을 등록 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 모든 IIOWriteProgressListener에 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="75a74abe0f39f7093bfdc7a9b75a09869f147820" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of an sequence of image reads to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;sequenceStarted&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;sequenceStarted&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener 에 이미지 읽기 시퀀스의 시작을 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="cf958800e8bd085bfb196ce330aaa4c2858b2c4a" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of an sequence of image reads to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;sequenceStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;sequenceStarted&lt;/code&gt; 메소드의 호출에 의해 일련의 이미지 읽기 시작을 등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 모든 IIOReadProgressListener로 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c99ba0a645c242983575723e07d21dceace8916" translate="yes" xml:space="preserve">
          <source>Broadcasts the update of a set of samples in a thumbnail image to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailUpdate&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;thumbnailUpdate&lt;/code&gt; 메서드 를 호출 하여 썸네일 이미지의 샘플 세트 업데이트를 등록 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 모든 IIOReadUpdateListener에 브로드 캐스팅합니다 .</target>
        </trans-unit>
        <trans-unit id="b9b2feb03c216c704d67b7c5c33e593a5e29228e" translate="yes" xml:space="preserve">
          <source>Broadcasts the update of a set of samples in a thumbnail image to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailUpdate&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;thumbnailUpdate&lt;/code&gt; 메소드 를 호출 해 , 썸네일 이미지 내의 샘플 세트의 갱신을, 등록 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 모든 IIOReadUpdateListener에 통지 합니다. 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fda2b4a2ef686a64a534bb0efeef0bfc8269a212" translate="yes" xml:space="preserve">
          <source>Broadcasts the update of a set of samples to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;imageUpdate&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;imageUpdate&lt;/code&gt; 메서드 를 호출하여 등록 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 모든 IIOReadUpdateListener 에 샘플 집합의 업데이트를 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="6291e9f15f277ba0d385f0d98bbb631c342b6747" translate="yes" xml:space="preserve">
          <source>Broadcasts the update of a set of samples to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;imageUpdate&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">&lt;code&gt;imageUpdate&lt;/code&gt; 메소드 를 호출하여 샘플 세트의 업데이트를 등록 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 모든 IIOReadUpdateListener로 브로드 캐스트합니다 . 서브 클래스는 편의상이 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d510d2fe48ecab3d4b8f58048b939b43f9409f43" translate="yes" xml:space="preserve">
          <source>BrokenBarrierException</source>
          <target state="translated">BrokenBarrierException</target>
        </trans-unit>
        <trans-unit id="0cfb183d6b8f920bd176d82a553a9a48aea09afa" translate="yes" xml:space="preserve">
          <source>Buddhist years and eras</source>
          <target state="translated">불교 시대와 시대</target>
        </trans-unit>
        <trans-unit id="2be5f64b36230104ef9c6e230215846a83d18df6" translate="yes" xml:space="preserve">
          <source>Buffer</source>
          <target state="translated">Buffer</target>
        </trans-unit>
        <trans-unit id="01dd0fcf68a77323302089efe3b139bc8da0a28e" translate="yes" xml:space="preserve">
          <source>Buffer to keep building elements.</source>
          <target state="translated">건물 요소를 유지하기위한 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="21da7f9fb3c59affd98c9f93883ba9297c4d466c" translate="yes" xml:space="preserve">
          <source>Buffer.array()</source>
          <target state="translated">Buffer.array()</target>
        </trans-unit>
        <trans-unit id="793a50d8b8738e5e3de662d56828242b4464b8d9" translate="yes" xml:space="preserve">
          <source>Buffer.arrayOffset()</source>
          <target state="translated">Buffer.arrayOffset()</target>
        </trans-unit>
        <trans-unit id="2c114fba7582d92e87b89cdf155d99d2da7461d8" translate="yes" xml:space="preserve">
          <source>Buffer.capacity()</source>
          <target state="translated">Buffer.capacity()</target>
        </trans-unit>
        <trans-unit id="1bfb54cbce2dffa8fd8d72a71940864f9a2977ee" translate="yes" xml:space="preserve">
          <source>Buffer.clear()</source>
          <target state="translated">Buffer.clear()</target>
        </trans-unit>
        <trans-unit id="5f78003ae7f35dde2f1d3d893701e3df367a7151" translate="yes" xml:space="preserve">
          <source>Buffer.flip()</source>
          <target state="translated">Buffer.flip()</target>
        </trans-unit>
        <trans-unit id="57ec4b07214a62711c5190c3f2adaf50a8a7009b" translate="yes" xml:space="preserve">
          <source>Buffer.hasArray()</source>
          <target state="translated">Buffer.hasArray()</target>
        </trans-unit>
        <trans-unit id="b7763fe26b794d7d4d4efd2c5cd98f6508df36b1" translate="yes" xml:space="preserve">
          <source>Buffer.hasRemaining()</source>
          <target state="translated">Buffer.hasRemaining()</target>
        </trans-unit>
        <trans-unit id="c44810556eb9a98ee723a709c99efce6fefb90b6" translate="yes" xml:space="preserve">
          <source>Buffer.isDirect()</source>
          <target state="translated">Buffer.isDirect()</target>
        </trans-unit>
        <trans-unit id="324b1e9fb02b59ad2e96023cb5860f42eab21e30" translate="yes" xml:space="preserve">
          <source>Buffer.isReadOnly()</source>
          <target state="translated">Buffer.isReadOnly()</target>
        </trans-unit>
        <trans-unit id="1c680a7bdcbaef5c704b2c8c99a493d58f8b9cef" translate="yes" xml:space="preserve">
          <source>Buffer.limit()</source>
          <target state="translated">Buffer.limit()</target>
        </trans-unit>
        <trans-unit id="5bc06def9af412b4a03f7eab1086211803018361" translate="yes" xml:space="preserve">
          <source>Buffer.mark()</source>
          <target state="translated">Buffer.mark()</target>
        </trans-unit>
        <trans-unit id="9964f38bfb77f73e1b37e0e723bfc1461dfc1244" translate="yes" xml:space="preserve">
          <source>Buffer.position()</source>
          <target state="translated">Buffer.position()</target>
        </trans-unit>
        <trans-unit id="469dcd30cfcdde82eb52ed036b9075fcab400c35" translate="yes" xml:space="preserve">
          <source>Buffer.remaining()</source>
          <target state="translated">Buffer.remaining()</target>
        </trans-unit>
        <trans-unit id="334f2a0d6a429a0b9dbc0109f3dc95f6e4436e8d" translate="yes" xml:space="preserve">
          <source>Buffer.reset()</source>
          <target state="translated">Buffer.reset()</target>
        </trans-unit>
        <trans-unit id="61160c6fa0545fdf59e66dd7bbff8f7dda9b1d01" translate="yes" xml:space="preserve">
          <source>Buffer.rewind()</source>
          <target state="translated">Buffer.rewind()</target>
        </trans-unit>
        <trans-unit id="4db804871e2d6dfcd01f6b5a2f0686c7b0eca01b" translate="yes" xml:space="preserve">
          <source>BufferCapabilities</source>
          <target state="translated">BufferCapabilities</target>
        </trans-unit>
        <trans-unit id="872aa4c88f41409161f11bc310163a679416398a" translate="yes" xml:space="preserve">
          <source>BufferCapabilities.FlipContents</source>
          <target state="translated">BufferCapabilities.FlipContents</target>
        </trans-unit>
        <trans-unit id="64600be1a4d0ebec51c5b8f598e409c49f1dc764" translate="yes" xml:space="preserve">
          <source>BufferOverflowException</source>
          <target state="translated">BufferOverflowException</target>
        </trans-unit>
        <trans-unit id="0af21354efafb37f8b23416e3db171e9b304b9c6" translate="yes" xml:space="preserve">
          <source>BufferPoolMXBean</source>
          <target state="translated">BufferPoolMXBean</target>
        </trans-unit>
        <trans-unit id="2ad3b7ce1b2b194569e0154c96697eabc50e63a3" translate="yes" xml:space="preserve">
          <source>BufferPoolMXBean.getCount()</source>
          <target state="translated">BufferPoolMXBean.getCount()</target>
        </trans-unit>
        <trans-unit id="5a197bb2d1e583e18cc5fb7174e266e64cc91651" translate="yes" xml:space="preserve">
          <source>BufferPoolMXBean.getMemoryUsed()</source>
          <target state="translated">BufferPoolMXBean.getMemoryUsed()</target>
        </trans-unit>
        <trans-unit id="fe752631bfe49b00ca0ff304b1c54da65dad8e33" translate="yes" xml:space="preserve">
          <source>BufferPoolMXBean.getName()</source>
          <target state="translated">BufferPoolMXBean.getName()</target>
        </trans-unit>
        <trans-unit id="23f0cf982f63468f25ccbf7cb19416c82dea1556" translate="yes" xml:space="preserve">
          <source>BufferPoolMXBean.getTotalCapacity()</source>
          <target state="translated">BufferPoolMXBean.getTotalCapacity()</target>
        </trans-unit>
        <trans-unit id="a1ca15e9e89b6bccbc039e7ddf9cad222029ef75" translate="yes" xml:space="preserve">
          <source>BufferStrategy</source>
          <target state="translated">BufferStrategy</target>
        </trans-unit>
        <trans-unit id="9233d0dc2d4af9caef8ab35cd68a9a6796442e28" translate="yes" xml:space="preserve">
          <source>BufferUnderflowException</source>
          <target state="translated">BufferUnderflowException</target>
        </trans-unit>
        <trans-unit id="681225e9545447984545ab30b0cf9329254f7724" translate="yes" xml:space="preserve">
          <source>BufferedImage</source>
          <target state="translated">BufferedImage</target>
        </trans-unit>
        <trans-unit id="d602673e3d613b43cb07a6fe709dcf104bae16fe" translate="yes" xml:space="preserve">
          <source>BufferedImage objects leave the primary Raster which stores their pixels untouched, but flush any information cached about those pixels such as copies uploaded to the display hardware for accelerated blits.</source>
          <target state="translated">BufferedImage 객체는 픽셀을 그대로 저장하는 기본 Raster를 그대로 두지 만 가속화 된 블리트를 위해 디스플레이 하드웨어에 업로드 된 사본과 같이 해당 픽셀에 대해 캐시 된 모든 정보를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="7ec81a8540458cf1f64317601bd27394b81affaa" translate="yes" xml:space="preserve">
          <source>BufferedImage sources with premultiplied alpha data are treated in the same manner as non-premultiplied images for purposes of rescaling. That is, the rescaling is done per band on the raw data of the BufferedImage source without regard to whether the data is premultiplied. If a color conversion is required to the destination ColorModel, the premultiplied state of both source and destination will be taken into account for this step.</source>
          <target state="translated">미리 곱해진 알파 데이터가있는 BufferedImage 소스는 크기 조정을 위해 미리 곱하지 않은 이미지와 동일한 방식으로 처리됩니다. 즉, 데이터가 미리 곱해 졌는지 여부에 관계없이 BufferedImage 소스의 원시 데이터에 대해 밴드별로 크기 조정이 수행됩니다. 대상 ColorModel에 대한 색상 변환이 필요한 경우 소스와 대상 모두의 미리 곱해진 상태가이 단계에서 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="af25a9d1511ff48b74f1b680197ba1a2189a8b4d" translate="yes" xml:space="preserve">
          <source>BufferedImage sources with premultiplied alpha data are treated in the same manner as non-premultiplied images for purposes of the lookup. That is, the lookup is done per band on the raw data of the BufferedImage source without regard to whether the data is premultiplied. If a color conversion is required to the destination ColorModel, the premultiplied state of both source and destination will be taken into account for this step.</source>
          <target state="translated">사전 곱하기 알파 데이터가있는 BufferedImage 소스는 조회 목적으로 사전 곱하기가 아닌 이미지와 동일한 방식으로 처리됩니다. 즉, 데이터가 미리 곱해 졌는지 여부에 관계없이 BufferedImage 소스의 원시 데이터에 대해 밴드별로 조회가 수행됩니다. 대상 ColorModel에 대한 색상 변환이 필요한 경우 소스와 대상 모두의 미리 곱해진 상태가이 단계에서 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="476a7e250facebd03374de6157ca07cb872e14b1" translate="yes" xml:space="preserve">
          <source>BufferedImageFilter</source>
          <target state="translated">BufferedImageFilter</target>
        </trans-unit>
        <trans-unit id="91a9caa83cd3f6fb79d2b4b0344143e4735b46f1" translate="yes" xml:space="preserve">
          <source>BufferedImageOp</source>
          <target state="translated">BufferedImageOp</target>
        </trans-unit>
        <trans-unit id="43d6a3a9a7c84d3cedcfa30ee2d4925536a4e6fa" translate="yes" xml:space="preserve">
          <source>BufferedInputStream</source>
          <target state="translated">BufferedInputStream</target>
        </trans-unit>
        <trans-unit id="cb37191f17d2ccbaa7775852ab9abda9b850db5c" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.available()</source>
          <target state="translated">BufferedInputStream.available()</target>
        </trans-unit>
        <trans-unit id="7e5d5a706380d9c9e662a00e6d7f43910a772dbf" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.close()</source>
          <target state="translated">BufferedInputStream.close()</target>
        </trans-unit>
        <trans-unit id="095809bf225e83e975ec2093ad9d171f72aa3244" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.mark()</source>
          <target state="translated">BufferedInputStream.mark()</target>
        </trans-unit>
        <trans-unit id="337cf14776c747989245856b2163000eecf3637a" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.markSupported()</source>
          <target state="translated">BufferedInputStream.markSupported()</target>
        </trans-unit>
        <trans-unit id="fb89e7ee47d1030b89974e1dbee2c305522acc60" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.read()</source>
          <target state="translated">BufferedInputStream.read()</target>
        </trans-unit>
        <trans-unit id="35b50e38bf1222a88c679a6b63f7d32c7a6bb314" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.reset()</source>
          <target state="translated">BufferedInputStream.reset()</target>
        </trans-unit>
        <trans-unit id="fa3cc1eaa182f0a4128ed87419bd12e197be2a50" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.skip()</source>
          <target state="translated">BufferedInputStream.skip()</target>
        </trans-unit>
        <trans-unit id="7c33b69de473a83861b7cf94afff906d74fb2506" translate="yes" xml:space="preserve">
          <source>BufferedOutputStream</source>
          <target state="translated">BufferedOutputStream</target>
        </trans-unit>
        <trans-unit id="de5d855532a2787488362fc50dadfa5c48110d6d" translate="yes" xml:space="preserve">
          <source>BufferedOutputStream.flush()</source>
          <target state="translated">BufferedOutputStream.flush()</target>
        </trans-unit>
        <trans-unit id="9a608c5a569cdace93a11051aa97b73b8b73c6c2" translate="yes" xml:space="preserve">
          <source>BufferedOutputStream.write()</source>
          <target state="translated">BufferedOutputStream.write()</target>
        </trans-unit>
        <trans-unit id="3c3ba90022b9dc12dc27287d12ccce2217f56df0" translate="yes" xml:space="preserve">
          <source>BufferedReader</source>
          <target state="translated">BufferedReader</target>
        </trans-unit>
        <trans-unit id="79ef6db7b9602e4c96c58a9de8a949d46832916d" translate="yes" xml:space="preserve">
          <source>BufferedReader.close()</source>
          <target state="translated">BufferedReader.close()</target>
        </trans-unit>
        <trans-unit id="5521b420786f0bd2b4b081a5fd6f97bc5d310428" translate="yes" xml:space="preserve">
          <source>BufferedReader.lines()</source>
          <target state="translated">BufferedReader.lines()</target>
        </trans-unit>
        <trans-unit id="57e65962ca744e28d902657126795098c64bd433" translate="yes" xml:space="preserve">
          <source>BufferedReader.mark()</source>
          <target state="translated">BufferedReader.mark()</target>
        </trans-unit>
        <trans-unit id="adb34aa2bc3ee7920eee8e341fc8e354179a2648" translate="yes" xml:space="preserve">
          <source>BufferedReader.markSupported()</source>
          <target state="translated">BufferedReader.markSupported()</target>
        </trans-unit>
        <trans-unit id="959163557212bf8bb5fd146bc8f821f98f0c6cb9" translate="yes" xml:space="preserve">
          <source>BufferedReader.read()</source>
          <target state="translated">BufferedReader.read()</target>
        </trans-unit>
        <trans-unit id="02f10189fcbc66bab79f3fea8424be8c3e3c813d" translate="yes" xml:space="preserve">
          <source>BufferedReader.readLine()</source>
          <target state="translated">BufferedReader.readLine()</target>
        </trans-unit>
        <trans-unit id="bdd1c0747bfcded51cc572c4b6e1708a6a6fa54b" translate="yes" xml:space="preserve">
          <source>BufferedReader.ready()</source>
          <target state="translated">BufferedReader.ready()</target>
        </trans-unit>
        <trans-unit id="c485ce4225a9e7ef7702a9c9ea818c5bdffa1b4b" translate="yes" xml:space="preserve">
          <source>BufferedReader.reset()</source>
          <target state="translated">BufferedReader.reset()</target>
        </trans-unit>
        <trans-unit id="ab7493f82a8a553475e878769dfecadd38033adb" translate="yes" xml:space="preserve">
          <source>BufferedReader.skip()</source>
          <target state="translated">BufferedReader.skip()</target>
        </trans-unit>
        <trans-unit id="78e71426e1f6fb39c644c18fb8b47d451fe6d2f0" translate="yes" xml:space="preserve">
          <source>BufferedWriter</source>
          <target state="translated">BufferedWriter</target>
        </trans-unit>
        <trans-unit id="bda4b82fea67ea9197c59b93abab8ff5b590bc80" translate="yes" xml:space="preserve">
          <source>BufferedWriter.close()</source>
          <target state="translated">BufferedWriter.close()</target>
        </trans-unit>
        <trans-unit id="bee34a8d4a804ddb1d773dba70227e39efc02cb9" translate="yes" xml:space="preserve">
          <source>BufferedWriter.flush()</source>
          <target state="translated">BufferedWriter.flush()</target>
        </trans-unit>
        <trans-unit id="184fc314d94de097b43b39396a3054b7e11fdeea" translate="yes" xml:space="preserve">
          <source>BufferedWriter.newLine()</source>
          <target state="translated">BufferedWriter.newLine()</target>
        </trans-unit>
        <trans-unit id="11661555952067fad97e4e16c0cd8fb79027c341" translate="yes" xml:space="preserve">
          <source>BufferedWriter.write()</source>
          <target state="translated">BufferedWriter.write()</target>
        </trans-unit>
        <trans-unit id="34f34d23f3c639e2cad8dda1c53b7289ac2d0627" translate="yes" xml:space="preserve">
          <source>Buffering allows producers and consumers to transiently operate at different rates. Each subscriber uses an independent buffer. Buffers are created upon first use and expanded as needed up to the given maximum. (The enforced capacity may be rounded up to the nearest power of two and/or bounded by the largest value supported by this implementation.) Invocations of &lt;a href=&quot;flow.subscription#request(long)&quot;&gt;&lt;code&gt;request&lt;/code&gt;&lt;/a&gt; do not directly result in buffer expansion, but risk saturation if unfilled requests exceed the maximum capacity. The default value of &lt;a href=&quot;flow#defaultBufferSize()&quot;&gt;&lt;code&gt;Flow.defaultBufferSize()&lt;/code&gt;&lt;/a&gt; may provide a useful starting point for choosing a capacity based on expected rates, resources, and usages.</source>
          <target state="translated">버퍼링을 사용하면 생산자와 소비자가 일시적으로 다른 속도로 작동 할 수 있습니다. 각 구독자는 독립적 인 버퍼를 사용합니다. 버퍼는 처음 사용할 때 생성되고 주어진 최대 값까지 필요에 따라 확장됩니다. (강제 된 용량은 가장 가까운 2의 거듭 제곱으로 반올림되거나이 구현에서 지원하는 가장 큰 값으로 제한 될 수 있습니다.) &lt;a href=&quot;flow.subscription#request(long)&quot;&gt; &lt;code&gt;request&lt;/code&gt; &lt;/a&gt; 호출은 직접적으로 버퍼 확장을 초래하지 않지만 채워지지 않은 요청이 최대 용량을 초과하면 포화 위험이 있습니다. &lt;a href=&quot;flow#defaultBufferSize()&quot;&gt; &lt;code&gt;Flow.defaultBufferSize()&lt;/code&gt; &lt;/a&gt; 의 기본값 은 예상 요금, 리소스 및 사용량에 따라 용량을 선택하는 데 유용한 시작점을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4cbcd2f7b704b607643b54842a2d38a1465e1a06" translate="yes" xml:space="preserve">
          <source>Buffers</source>
          <target state="translated">Buffers</target>
        </trans-unit>
        <trans-unit id="3127dbd72d3e8e6dd96a5e4ba8be9595fb57f7e5" translate="yes" xml:space="preserve">
          <source>Buffers are not safe for use by multiple concurrent threads so care should be taken to not access the buffer until the operation has completed.</source>
          <target state="translated">버퍼는 여러 개의 동시 스레드에서 사용하기에 안전하지 않으므로 작업이 완료 될 때까지 버퍼에 액세스하지 않도록주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="b81672229ac7edddfe9a42e70119e20c47dd2116" translate="yes" xml:space="preserve">
          <source>Buffers are not safe for use by multiple concurrent threads. If a buffer is to be used by more than one thread then access to the buffer should be controlled by appropriate synchronization.</source>
          <target state="translated">버퍼는 여러 개의 동시 스레드에서 사용하기에 안전하지 않습니다. 하나 이상의 스레드에서 버퍼를 사용하는 경우 적절한 동기화를 통해 버퍼에 대한 액세스를 제어해야합니다.</target>
        </trans-unit>
        <trans-unit id="9cbaa09329064d3bd7918d20348fcfd597575efe" translate="yes" xml:space="preserve">
          <source>Build the structure like it's specified in the stream. This produces elements that contain other elements.</source>
          <target state="translated">스트림에 지정된 것처럼 구조를 빌드하십시오. 이것은 다른 요소를 포함하는 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="4759bf14d7a511508e86c343c934894b6e8db533" translate="yes" xml:space="preserve">
          <source>Builder</source>
          <target state="translated">Builder</target>
        </trans-unit>
        <trans-unit id="959ee3d636e30b840ffd49d47b94c0810b2bf4c5" translate="yes" xml:space="preserve">
          <source>Builder for &lt;code&gt;JShell&lt;/code&gt; instances.</source>
          <target state="translated">&lt;code&gt;JShell&lt;/code&gt; 인스턴스 용 빌더 .</target>
        </trans-unit>
        <trans-unit id="d2235cc49e72e927dc27b77720468fa93ab3abd9" translate="yes" xml:space="preserve">
          <source>Builder for &lt;code&gt;JShell&lt;/code&gt; instances. Create custom instances of &lt;code&gt;JShell&lt;/code&gt; by using the setter methods on this class. After zero or more of these, use the &lt;a href=&quot;#build()&quot;&gt;&lt;code&gt;build()&lt;/code&gt;&lt;/a&gt; method to create a &lt;code&gt;JShell&lt;/code&gt; instance. These can all be chained. For example, setting the remote output and error streams:</source>
          <target state="translated">&lt;code&gt;JShell&lt;/code&gt; 인스턴스 용 빌더 . 이 클래스의 setter 메서드를 사용하여 &lt;code&gt;JShell&lt;/code&gt; 의 사용자 지정 인스턴스를 만듭니다 . 이 중 0 개 이상 후에 &lt;a href=&quot;#build()&quot;&gt; &lt;code&gt;build()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 &lt;code&gt;JShell&lt;/code&gt; 인스턴스 를 만듭니다 . 이것들은 모두 연결될 수 있습니다. 예를 들어, 원격 출력 및 오류 스트림 설정 :</target>
        </trans-unit>
        <trans-unit id="66c0ebb2b029dee989f21abcdd5e0d3e6e1812f2" translate="yes" xml:space="preserve">
          <source>Builder objects are mutable and are not safe for use by multiple concurrent threads without appropriate synchronization.</source>
          <target state="translated">빌더 오브젝트는 변경 가능하며 적절한 동기화없이 여러 동시 스레드에서 사용하기에 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8510d1fe97f2a77a854ffe3df4ef674a7ca7a721" translate="yes" xml:space="preserve">
          <source>Builder to create date-time formatters.</source>
          <target state="translated">날짜-시간 포맷터를 작성하는 빌더입니다.</target>
        </trans-unit>
        <trans-unit id="746a106f5b3529d3d55eb2404db770b5e5000179" translate="yes" xml:space="preserve">
          <source>Builders are created by invoking &lt;a href=&quot;httpclient#newBuilder()&quot;&gt;&lt;code&gt;newBuilder&lt;/code&gt;&lt;/a&gt;. Each of the setter methods modifies the state of the builder and returns the same instance. Builders are not thread-safe and should not be used concurrently from multiple threads without external synchronization.</source>
          <target state="translated">빌더는 &lt;a href=&quot;httpclient#newBuilder()&quot;&gt; &lt;code&gt;newBuilder&lt;/code&gt; &lt;/a&gt; 를 호출하여 생성됩니다 . 각 setter 메소드는 빌더의 상태를 수정하고 동일한 인스턴스를 리턴합니다. 빌더는 스레드로부터 안전하지 않으며 외부 동기화없이 여러 스레드에서 동시에 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="f035549a9ae78ec03fae9a947e472b9cda7fce53" translate="yes" xml:space="preserve">
          <source>Builders are created by invoking &lt;a href=&quot;httpclient#newWebSocketBuilder()&quot;&gt;&lt;code&gt;HttpClient.newWebSocketBuilder&lt;/code&gt;&lt;/a&gt;. The intermediate (setter-like) methods change the state of the builder and return the same builder they have been invoked on. If an intermediate method is not invoked, an appropriate default value (or behavior) will be assumed. A &lt;code&gt;Builder&lt;/code&gt; is not safe for use by multiple threads without external synchronization.</source>
          <target state="translated">빌더는 &lt;a href=&quot;httpclient#newWebSocketBuilder()&quot;&gt; &lt;code&gt;HttpClient.newWebSocketBuilder&lt;/code&gt; &lt;/a&gt; 를 호출하여 생성됩니다 . 중간 (세터 유사) 메소드는 빌더의 상태를 변경하고 호출 된 동일한 빌더를 리턴합니다. 중간 메서드가 호출되지 않으면 적절한 기본값 (또는 동작)이 가정됩니다. &lt;code&gt;Builder&lt;/code&gt; 외부 동기화없이 복수의 thread로 안전하게 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4e8fd27eb1eedbadfbaa1f4dc4780ae78ff69e59" translate="yes" xml:space="preserve">
          <source>Builders can be reused; &lt;code&gt;clear()&lt;/code&gt; resets all fields to their default values.</source>
          <target state="translated">빌더는 재사용 할 수 있습니다. &lt;code&gt;clear()&lt;/code&gt; 모든 필드를 기본값으로 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="590df7bd0da5488e56ff16f21d87ec2f11cf5cbd" translate="yes" xml:space="preserve">
          <source>Builds a &lt;a href=&quot;websocket&quot;&gt;&lt;code&gt;WebSocket&lt;/code&gt;&lt;/a&gt; connected to the given &lt;code&gt;URI&lt;/code&gt; and associated with the given &lt;code&gt;Listener&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;URI&lt;/code&gt; 에 연결되고 주어진 &lt;code&gt;Listener&lt;/code&gt; 와 연결된 &lt;a href=&quot;websocket&quot;&gt; &lt;code&gt;WebSocket&lt;/code&gt; 을&lt;/a&gt; 빌드합니다 .</target>
        </trans-unit>
        <trans-unit id="4aa5fef3134fe2911490d89229d9648ae1b42e56" translate="yes" xml:space="preserve">
          <source>Builds a &lt;code&gt;JarSigner&lt;/code&gt; object from the parameters set by the setter methods.</source>
          <target state="translated">setter 메소드로 설정된 매개 변수에서 &lt;code&gt;JarSigner&lt;/code&gt; 오브젝트를 빌드 합니다.</target>
        </trans-unit>
        <trans-unit id="4e73bdd2dbbff6fafe0ffaf537589beabe377e71" translate="yes" xml:space="preserve">
          <source>Builds a JShell state engine.</source>
          <target state="translated">JShell 상태 엔진을 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="4a3dd435a107e9019cdc605078792a3b3da35ab3" translate="yes" xml:space="preserve">
          <source>Builds a JShell state engine. This is the entry-point to all JShell functionality. This creates a remote process for execution. It is thus important to close the returned instance.</source>
          <target state="translated">JShell 상태 엔진을 빌드합니다. 이것은 모든 JShell 기능의 진입 점입니다. 이것은 실행을위한 원격 프로세스를 생성합니다. 따라서 반환 된 인스턴스를 닫는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="b2823c628d976abf9ff748cfb0586c810cfc59a7" translate="yes" xml:space="preserve">
          <source>Builds a new chooser panel.</source>
          <target state="translated">새로운 선택기 패널을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="65aa602721b266ff4611de2b9ed7c5350d0ea784" translate="yes" xml:space="preserve">
          <source>Builds and returns a &lt;code&gt;ModuleDescriptor&lt;/code&gt; from its components.</source>
          <target state="translated">해당 구성 요소에서 &lt;code&gt;ModuleDescriptor&lt;/code&gt; 를 빌드하고 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3520da09c9486fedfc8342346778647625f8b25a" translate="yes" xml:space="preserve">
          <source>Builds and returns an &lt;a href=&quot;httprequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;httprequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; 를&lt;/a&gt; 빌드하고 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f0497940dd57acfa607813e15f1d2d28d7f114de" translate="yes" xml:space="preserve">
          <source>Builds the parents of node up to and including the root node, where the original node is the last element in the returned array.</source>
          <target state="translated">루트 노드까지 포함하여 노드의 부모를 빌드합니다. 여기서 원래 노드는 반환 된 배열의 마지막 요소입니다.</target>
        </trans-unit>
        <trans-unit id="d0d68e1be1c0eb4be96226ebf7956a92182da18a" translate="yes" xml:space="preserve">
          <source>Builds the parents of node up to and including the root node, where the original node is the last element in the returned array. The length of the returned array gives the node's depth in the tree.</source>
          <target state="translated">루트 노드까지 포함하여 노드의 부모를 빌드합니다. 여기서 원래 노드는 반환 된 배열의 마지막 요소입니다. 반환 된 배열의 길이는 트리에서 노드의 깊이를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b828831fe62f2b1444cdd592ea84b06569cf84d8" translate="yes" xml:space="preserve">
          <source>Builds the stream, transitioning this builder to the built state.</source>
          <target state="translated">이 빌더를 빌드 상태로 전환하여 스트림을 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="cc2cb2e347601f0137532272464740ad20012c91" translate="yes" xml:space="preserve">
          <source>Builds the stream, transitioning this builder to the built state. An &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown if there are further attempts to operate on the builder after it has entered the built state.</source>
          <target state="translated">이 빌더를 빌드 된 상태로 전환하여 스트림을 빌드합니다. &lt;code&gt;IllegalStateException&lt;/code&gt; 가 내장 된 상태를 입력 한 후 빌더에서 작동하는 추가 시도가있을 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="81d733316f3c03fbb77823d96cf45a2e5377a2d6" translate="yes" xml:space="preserve">
          <source>Built-in character entity</source>
          <target state="translated">내장 문자 엔티티</target>
        </trans-unit>
        <trans-unit id="6b0f9e02b333eeded35bf130471a834d107cfe2b" translate="yes" xml:space="preserve">
          <source>Bulk operations may complete abruptly, throwing an exception encountered in the application of a supplied function. Bear in mind when handling such exceptions that other concurrently executing functions could also have thrown exceptions, or would have done so if the first exception had not occurred.</source>
          <target state="translated">제공된 기능을 적용 할 때 예외가 발생하여 대량 작업이 갑자기 완료 될 수 있습니다. 이러한 예외를 처리 할 때 동시에 실행중인 다른 함수에서도 예외가 발생했거나 첫 번째 예외가 발생하지 않은 경우 예외가 발생했을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec7fa7bd94a7b59fef4899cf7a553178c2e47f95" translate="yes" xml:space="preserve">
          <source>Bulk operations that add, remove, or examine multiple elements, such as &lt;a href=&quot;#addAll(java.util.Collection)&quot;&gt;&lt;code&gt;addAll(java.util.Collection&amp;lt;? extends E&amp;gt;)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#removeIf(java.util.function.Predicate)&quot;&gt;&lt;code&gt;removeIf(java.util.function.Predicate&amp;lt;? super E&amp;gt;)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#forEach(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEach(java.util.function.Consumer&amp;lt;? super E&amp;gt;)&lt;/code&gt;&lt;/a&gt;, are &lt;em&gt;not&lt;/em&gt; guaranteed to be performed atomically. For example, a &lt;code&gt;forEach&lt;/code&gt; traversal concurrent with an &lt;code&gt;
 addAll&lt;/code&gt; operation might observe only some of the added elements.</source>
          <target state="translated">일괄 작업, 추가, 제거, 또는 여러 구성 요소, 즉 검사 &lt;a href=&quot;#addAll(java.util.Collection)&quot;&gt; &lt;code&gt;addAll(java.util.Collection&amp;lt;? extends E&amp;gt;)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#removeIf(java.util.function.Predicate)&quot;&gt; &lt;code&gt;removeIf(java.util.function.Predicate&amp;lt;? super E&amp;gt;)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#forEach(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEach(java.util.function.Consumer&amp;lt;? super E&amp;gt;)&lt;/code&gt; &lt;/a&gt; ,되어 &lt;em&gt;있지&lt;/em&gt; 원자 적으로 수행되어야 할것입니다. 예를 들어, &lt;code&gt; addAll&lt;/code&gt; 작업 과 동시에 진행 되는 &lt;code&gt;forEach&lt;/code&gt; 순회 는 추가 된 요소 중 일부만 관찰 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a95a124c12240687001a91a67a53cc4fc0ef5c0" translate="yes" xml:space="preserve">
          <source>Bulk operations that add, remove, or examine multiple elements, such as &lt;a href=&quot;../abstractcollection#addAll(java.util.Collection)&quot;&gt;&lt;code&gt;AbstractCollection.addAll(java.util.Collection&amp;lt;? extends E&amp;gt;)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../collection#removeIf(java.util.function.Predicate)&quot;&gt;&lt;code&gt;Collection.removeIf(java.util.function.Predicate&amp;lt;? super E&amp;gt;)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../lang/iterable#forEach(java.util.function.Consumer)&quot;&gt;&lt;code&gt;Iterable.forEach(java.util.function.Consumer&amp;lt;? super T&amp;gt;)&lt;/code&gt;&lt;/a&gt;, are &lt;em&gt;not&lt;/em&gt; guaranteed to be performed atomically. For example, a &lt;code&gt;forEach&lt;/code&gt; traversal concurrent with an &lt;code&gt;
 addAll&lt;/code&gt; operation might observe only some of the added elements.</source>
          <target state="translated">&lt;a href=&quot;../abstractcollection#addAll(java.util.Collection)&quot;&gt; &lt;code&gt;AbstractCollection.addAll(java.util.Collection&amp;lt;? extends E&amp;gt;)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../collection#removeIf(java.util.function.Predicate)&quot;&gt; &lt;code&gt;Collection.removeIf(java.util.function.Predicate&amp;lt;? super E&amp;gt;)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../lang/iterable#forEach(java.util.function.Consumer)&quot;&gt; &lt;code&gt;Iterable.forEach(java.util.function.Consumer&amp;lt;? super T&amp;gt;)&lt;/code&gt; &lt;/a&gt; 과 같은 여러 요소를 추가, 제거 또는 검사하는 대량 작업 . 대해 forEach (java.util.function.Consumer &amp;lt;? 슈퍼 T는&amp;gt;) 이다 &lt;em&gt;없는&lt;/em&gt; 원자 적으로 수행되도록 보장. 예를 들어, &lt;code&gt; addAll&lt;/code&gt; 작업 과 동시에 진행 되는 &lt;code&gt;forEach&lt;/code&gt; 순회 는 추가 된 요소 중 일부만 관찰 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="856d3bc10a7168a3ad6e321674ef96802586db65" translate="yes" xml:space="preserve">
          <source>Bulk operations that add, remove, or examine multiple elements, such as &lt;a href=&quot;../abstractqueue#addAll(java.util.Collection)&quot;&gt;&lt;code&gt;AbstractQueue.addAll(java.util.Collection&amp;lt;? extends E&amp;gt;)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#removeIf(java.util.function.Predicate)&quot;&gt;&lt;code&gt;removeIf(java.util.function.Predicate&amp;lt;? super E&amp;gt;)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#forEach(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEach(java.util.function.Consumer&amp;lt;? super E&amp;gt;)&lt;/code&gt;&lt;/a&gt;, are &lt;em&gt;not&lt;/em&gt; guaranteed to be performed atomically. For example, a &lt;code&gt;forEach&lt;/code&gt; traversal concurrent with an &lt;code&gt;
 addAll&lt;/code&gt; operation might observe only some of the added elements.</source>
          <target state="translated">대량 작업이 추가, 제거 또는 여러 소자 검사 &lt;a href=&quot;../abstractqueue#addAll(java.util.Collection)&quot;&gt; &lt;code&gt;AbstractQueue.addAll(java.util.Collection&amp;lt;? extends E&amp;gt;)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#removeIf(java.util.function.Predicate)&quot;&gt; &lt;code&gt;removeIf(java.util.function.Predicate&amp;lt;? super E&amp;gt;)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#forEach(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEach(java.util.function.Consumer&amp;lt;? super E&amp;gt;)&lt;/code&gt; &lt;/a&gt; ,되어 &lt;em&gt;있지&lt;/em&gt; 원자 적으로 수행되어야 할것입니다. 예를 들어, &lt;code&gt; addAll&lt;/code&gt; 작업 과 동시에 진행 되는 &lt;code&gt;forEach&lt;/code&gt; 순회 는 추가 된 요소 중 일부만 관찰 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d44c90d441645a4cf7d185b8edd1999a391ac58a" translate="yes" xml:space="preserve">
          <source>Bullet style.</source>
          <target state="translated">총알 스타일.</target>
        </trans-unit>
        <trans-unit id="d1f6ee00ee4757628b7ad1bc3ad5e08222573096" translate="yes" xml:space="preserve">
          <source>Bullet style. See the type attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">총알 스타일. HTML 4.0의 유형 속성 정의를 참조하십시오. 이 속성은 HTML 4.0에서 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="028861d8fa6ae30f4c3df9c06e33472d5bd3dbd6" translate="yes" xml:space="preserve">
          <source>BundleBaseName</source>
          <target state="translated">BundleBaseName</target>
        </trans-unit>
        <trans-unit id="b99c55ad271aece3d6443dea2009513100882e12" translate="yes" xml:space="preserve">
          <source>Bundles class name with class bytecodes.</source>
          <target state="translated">클래스 이름을 클래스 바이트 코드와 번들로 묶습니다.</target>
        </trans-unit>
        <trans-unit id="30a034cc2e1d52e15d08fd41d2f411352ef21a8d" translate="yes" xml:space="preserve">
          <source>But if the application did not initiate the closure process, or if the circumstances above do not apply, this method should be called whenever the end of the SSL/TLS data stream is reached. This ensures closure of the inbound side, and checks that the peer followed the SSL/TLS close procedure properly, thus detecting possible truncation attacks.</source>
          <target state="translated">그러나 애플리케이션이 클로저 프로세스를 시작하지 않았거나 위의 상황이 적용되지 않는 경우 SSL / TLS 데이터 스트림의 끝에 도달 할 때마다이 메소드를 호출해야합니다. 이를 통해 인바운드 측이 닫히고 피어가 SSL / TLS 닫기 프로 시저를 올바로 수행했는지 확인하여 가능한 잘림 공격을 감지합니다.</target>
        </trans-unit>
        <trans-unit id="9c172852891360339e3255682038e7d1dc2244de" translate="yes" xml:space="preserve">
          <source>But if the application did not initiate the closure process, or if the circumstances above do not apply, this method should be called whenever the end of the SSL/TLS/DTLS data stream is reached. This ensures closure of the inbound side, and checks that the peer followed the SSL/TLS/DTLS close procedure properly, thus detecting possible truncation attacks.</source>
          <target state="translated">그러나 애플리케이션이 클로저 프로세스를 시작하지 않았거나 위의 상황이 적용되지 않는 경우 SSL / TLS / DTLS 데이터 스트림의 끝에 도달 할 때마다이 메서드를 호출해야합니다. 이렇게하면 인바운드 측이 닫히고 피어가 SSL / TLS / DTLS 닫기 절차를 제대로 따랐는지 확인하여 가능한 자르기 공격을 감지합니다.</target>
        </trans-unit>
        <trans-unit id="656d7c79c1e84d6fe7de9497af45e5a5500c4558" translate="yes" xml:space="preserve">
          <source>But in some cases (e.g. auto-repeat or input method is activated) the order could be different (and platform dependent).</source>
          <target state="translated">그러나 경우에 따라 (예 : 자동 반복 또는 입력 방법이 활성화 됨) 순서가 다를 수 있습니다 (및 플랫폼에 따라 다름).</target>
        </trans-unit>
        <trans-unit id="5a5c4305f5bf0f160a7906ef13122e3402b15a85" translate="yes" xml:space="preserve">
          <source>But, in most cases, there is no need to deal directly with the subclasses, as the InetAddress abstraction should cover most of the needed functionality.</source>
          <target state="translated">그러나 대부분의 경우 InetAddress 추상화는 필요한 기능의 대부분을 다루어야하므로 서브 클래스를 직접 처리 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="794145f030ff721599a0353a9b2e59e9a92b9bf1" translate="yes" xml:space="preserve">
          <source>Button</source>
          <target state="translated">Button</target>
        </trans-unit>
        <trans-unit id="019efa891ee7de315f87d0356dc068be04ca8e8d" translate="yes" xml:space="preserve">
          <source>Button Listener</source>
          <target state="translated">버튼 리스너</target>
        </trans-unit>
        <trans-unit id="ac7d196ac262e982ede5cfdd770d80dfa1d8c597" translate="yes" xml:space="preserve">
          <source>Button for quickly toggling the left component.</source>
          <target state="translated">왼쪽 구성 요소를 빠르게 전환하기위한 버튼입니다.</target>
        </trans-unit>
        <trans-unit id="606edefcc60f80ff7f88969685ab9c81b9473f01" translate="yes" xml:space="preserve">
          <source>Button for quickly toggling the right component.</source>
          <target state="translated">올바른 구성 요소를 빠르게 전환하기위한 버튼입니다.</target>
        </trans-unit>
        <trans-unit id="183b38372fdbf87cf9b8d1c7b5cf42ce220702c3" translate="yes" xml:space="preserve">
          <source>Button listener</source>
          <target state="translated">버튼 리스너</target>
        </trans-unit>
        <trans-unit id="595d60dd66ba50b2aa56d6e4dc8dc918315c7bfb" translate="yes" xml:space="preserve">
          <source>Button numbers greater than &lt;code&gt;BUTTON3&lt;/code&gt; have no constant identifier. So if a mouse with five buttons is installed, this method may return the following values:</source>
          <target state="translated">&lt;code&gt;BUTTON3&lt;/code&gt; 보다 큰 버튼 번호 에는 상수 식별자가 없습니다. 따라서 5 개의 버튼이있는 마우스가 설치된 경우이 메서드는 다음 값을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d018432317935a1b36aa8bc1753990b2bd438cf" translate="yes" xml:space="preserve">
          <source>Button region.</source>
          <target state="translated">버튼 영역.</target>
        </trans-unit>
        <trans-unit id="1efa9e86c27e8c50f6fe8a0033f77c3c754760dd" translate="yes" xml:space="preserve">
          <source>Button region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;Button&lt;/code&gt;.</source>
          <target state="translated">버튼 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;Button&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="430a174557404a8e3f0a2075b760ba9a9bf4ed05" translate="yes" xml:space="preserve">
          <source>Button.AccessibleAWTButton</source>
          <target state="translated">Button.AccessibleAWTButton</target>
        </trans-unit>
        <trans-unit id="3fbd8213e2f1b47ab010648f1c288ae79d7d0495" translate="yes" xml:space="preserve">
          <source>Button1, Button2, Button3: &lt;code&gt;weightx&amp;nbsp;=&amp;nbsp;1.0&lt;/code&gt;</source>
          <target state="translated">Button1, Button2, Button3 : &lt;code&gt;weightx&amp;nbsp;=&amp;nbsp;1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc4ff8a5f791a7c311b5d809543cf1b7f89af56e" translate="yes" xml:space="preserve">
          <source>Button4: &lt;code&gt;weightx&amp;nbsp;=&amp;nbsp;1.0&lt;/code&gt;, &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.REMAINDER&lt;/code&gt;</source>
          <target state="translated">Button4 : &lt;code&gt;weightx&amp;nbsp;=&amp;nbsp;1.0&lt;/code&gt; , &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.REMAINDER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7071b5cdcb1ff7b7109c703847da9abc6d97ac53" translate="yes" xml:space="preserve">
          <source>Button5: &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.REMAINDER&lt;/code&gt;</source>
          <target state="translated">Button5 : &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.REMAINDER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a238d8ce8abe343bd8434207450d150737ca99f2" translate="yes" xml:space="preserve">
          <source>Button6: &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.RELATIVE&lt;/code&gt;</source>
          <target state="translated">Button6 : &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.RELATIVE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23d5d167a3e58913661b17c1973bf843f9a79f84" translate="yes" xml:space="preserve">
          <source>Button7: &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.REMAINDER&lt;/code&gt;</source>
          <target state="translated">Button7 : &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.REMAINDER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0977489d906e28efd7dbfc9fc44f7803b6608b2b" translate="yes" xml:space="preserve">
          <source>Button8: &lt;code&gt;gridheight&amp;nbsp;=&amp;nbsp;2&lt;/code&gt;, &lt;code&gt;weighty&amp;nbsp;=&amp;nbsp;1.0&lt;/code&gt;</source>
          <target state="translated">Button8 : &lt;code&gt;gridheight&amp;nbsp;=&amp;nbsp;2&lt;/code&gt; , &lt;code&gt;weighty&amp;nbsp;=&amp;nbsp;1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aefd9099809114e4bcf2a3a3e7344cb433207573" translate="yes" xml:space="preserve">
          <source>Button9, Button 10: &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.REMAINDER&lt;/code&gt;</source>
          <target state="translated">Button9, Button 10 : &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.REMAINDER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4addb71ad9b1e9eab1ffdc86cc279b13c62d2b0a" translate="yes" xml:space="preserve">
          <source>ButtonActionListener</source>
          <target state="translated">ButtonActionListener</target>
        </trans-unit>
        <trans-unit id="03ecc02f7b6a2f26f64641cfdc01102042e261e9" translate="yes" xml:space="preserve">
          <source>ButtonAreaLayout</source>
          <target state="translated">ButtonAreaLayout</target>
        </trans-unit>
        <trans-unit id="79c4be159df245cc5e0b6a452d22daea81405cd3" translate="yes" xml:space="preserve">
          <source>ButtonBorder</source>
          <target state="translated">ButtonBorder</target>
        </trans-unit>
        <trans-unit id="db27c070291763157930659db7978fefbbf6184d" translate="yes" xml:space="preserve">
          <source>ButtonGroup</source>
          <target state="translated">ButtonGroup</target>
        </trans-unit>
        <trans-unit id="fd7dad3bc7be4185663e9aca50570aa06f70c513" translate="yes" xml:space="preserve">
          <source>ButtonModel</source>
          <target state="translated">ButtonModel</target>
        </trans-unit>
        <trans-unit id="65a67a4c27ec0248f31009109391d299ae69b59b" translate="yes" xml:space="preserve">
          <source>ButtonUI</source>
          <target state="translated">ButtonUI</target>
        </trans-unit>
        <trans-unit id="4fec93b7c04cc8e16178761993ee51b6a650ad7b" translate="yes" xml:space="preserve">
          <source>Buttons can be configured, and to some degree controlled, by &lt;code&gt;&lt;a href=&quot;action&quot;&gt;Action&lt;/a&gt;&lt;/code&gt;s. Using an &lt;code&gt;Action&lt;/code&gt; with a button has many benefits beyond directly configuring a button. Refer to &lt;a href=&quot;action#buttonActions&quot;&gt; Swing Components Supporting &lt;code&gt;Action&lt;/code&gt;&lt;/a&gt; for more details, and you can find more information in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/action.html&quot;&gt;How to Use Actions&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">버튼은 &lt;code&gt;&lt;a href=&quot;action&quot;&gt;Action&lt;/a&gt;&lt;/code&gt; 으로 구성하고 어느 정도 제어 할 수 있습니다 . 사용하여 &lt;code&gt;Action&lt;/code&gt; 버튼으로하는 직접 버튼을 구성하는 것보다도 많은 이점이 있습니다. 자세한 내용은 &lt;a href=&quot;action#buttonActions&quot;&gt; &lt;code&gt;Action&lt;/code&gt; &lt;/a&gt; 을 지원 하는 Swing 구성 요소를 참조하십시오. 자세한 내용 은 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/action.html&quot;&gt;How to Use Actions&lt;/a&gt; 에서 찾을 수 있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c66da47ca35631d036406670c0f0d773a15a0ff" translate="yes" xml:space="preserve">
          <source>Buttons can be configured, and to some degree controlled, by &lt;code&gt;&lt;a href=&quot;action&quot;&gt;Action&lt;/a&gt;&lt;/code&gt;s. Using an &lt;code&gt;Action&lt;/code&gt; with a button has many benefits beyond directly configuring a button. Refer to &lt;a href=&quot;action#buttonActions&quot;&gt; Swing Components Supporting &lt;code&gt;Action&lt;/code&gt;&lt;/a&gt; for more details, and you can find more information in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/misc/action.html&quot;&gt;How to Use Actions&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">버튼은 &lt;code&gt;&lt;a href=&quot;action&quot;&gt;Action&lt;/a&gt;&lt;/code&gt; 으로 구성하고 어느 정도 제어 할 수 있습니다 . 사용하여 &lt;code&gt;Action&lt;/code&gt; 버튼으로하는 직접 버튼을 구성하는 것보다도 많은 이점이 있습니다. 자세한 내용은 &lt;a href=&quot;action#buttonActions&quot;&gt;Swing 구성 요소 지원 &lt;code&gt;Action&lt;/code&gt; &lt;/a&gt; 을 참조하십시오. 자세한 내용 은 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/misc/action.html&quot;&gt;How to Use Actions&lt;/a&gt; 에서 찾을 수 있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d070c9ff53546be6c6976aec9eaa580e189c9e38" translate="yes" xml:space="preserve">
          <source>By &lt;a href=&quot;watchservice#close()&quot;&gt;&lt;code&gt;closing&lt;/code&gt;&lt;/a&gt; the watch service.</source>
          <target state="translated">시계 서비스 를 &lt;a href=&quot;watchservice#close()&quot;&gt; &lt;code&gt;closing&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="79e041f06031b304d29c4b6a13cb37ce4189f083" translate="yes" xml:space="preserve">
          <source>By &lt;a href=&quot;watchservice#close--&quot;&gt;&lt;code&gt;closing&lt;/code&gt;&lt;/a&gt; the watch service.</source>
          <target state="translated">시계 서비스 를 &lt;a href=&quot;watchservice#close--&quot;&gt; &lt;code&gt;closing&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="731374a7fe56ec0bef1ac5151faf1bdaabfb4d05" translate="yes" xml:space="preserve">
          <source>By a &lt;code&gt;Format.Field&lt;/code&gt; constant, see &lt;code&gt;ERA_FIELD&lt;/code&gt; and its friends in &lt;code&gt;DateFormat&lt;/code&gt; for an example.</source>
          <target state="translated">A로 &lt;code&gt;Format.Field&lt;/code&gt; 일정을 참조 &lt;code&gt;ERA_FIELD&lt;/code&gt; 에 그 친구 &lt;code&gt;DateFormat&lt;/code&gt; 의 예는.</target>
        </trans-unit>
        <trans-unit id="a722b14c14361c4cf7b036b95981fa9d7403243d" translate="yes" xml:space="preserve">
          <source>By an integer constant, whose names typically end with &lt;code&gt;_FIELD&lt;/code&gt;. The constants are defined in the various subclasses of &lt;code&gt;Format&lt;/code&gt;.</source>
          <target state="translated">이름이 정수 상수, 전형적으로 최종 &lt;code&gt;_FIELD&lt;/code&gt; . 상수는 &lt;code&gt;Format&lt;/code&gt; 의 다양한 서브 클래스에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c4f7c0dccbb655800ec63f74aead43139a9be92" translate="yes" xml:space="preserve">
          <source>By calling one of the &lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;Lookup Factory Methods&lt;/a&gt;, such as &lt;a href=&quot;methodhandles.lookup#findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;Lookup.findVirtual&lt;/code&gt;&lt;/a&gt;, to resolve a symbolic reference into a method handle. A symbolic reference consists of a class, name string, and type.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup#findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;Lookup.findVirtual&lt;/code&gt; &lt;/a&gt; 과 같은 &lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;Lookup Factory Methods&lt;/a&gt; 중 하나를 호출 하여 기호 참조를 메서드 핸들로 확인합니다. 기호 참조는 클래스, 이름 문자열 및 유형으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="5dbe7a3f00da7d38dcae33de8970c70a967340df" translate="yes" xml:space="preserve">
          <source>By calling one of the &lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;Lookup Factory Methods&lt;/a&gt;, such as &lt;a href=&quot;methodhandles.lookup#findVirtual-java.lang.Class-java.lang.String-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;Lookup.findVirtual&lt;/code&gt;&lt;/a&gt;, to resolve a symbolic reference into a method handle. A symbolic reference consists of a class, name string, and type.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup#findVirtual-java.lang.Class-java.lang.String-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;Lookup.findVirtual&lt;/code&gt; &lt;/a&gt; 과 같은 &lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;Lookup Factory Methods&lt;/a&gt; 중 하나를 호출 하여 메서드 핸들에 대한 심볼릭 참조를 해결합니다. 기호 참조는 클래스, 이름 문자열 및 유형으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="f3e72dbd8f3a5ec4630e1592ee14d1eec420ed4e" translate="yes" xml:space="preserve">
          <source>By calling one of the versions of the &lt;code&gt;JoinRowSet&lt;/code&gt; method &lt;code&gt;addRowSet&lt;/code&gt; that takes a column name or number (or an array of column names or numbers)</source>
          <target state="translated">의 버전 중 하나에 의해 호출 &lt;code&gt;JoinRowSet&lt;/code&gt; 방법 &lt;code&gt;addRowSet&lt;/code&gt; 열 이름 또는 번호를 얻어 (또는 열 이름 또는 숫자의 배열)</target>
        </trans-unit>
        <trans-unit id="0b8c5073813cddba1740325d321c4842893b440a" translate="yes" xml:space="preserve">
          <source>By calling the &lt;code&gt;Joinable&lt;/code&gt; method &lt;code&gt;setMatchColumn&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Joinable&lt;/code&gt; 메소드 &lt;code&gt;setMatchColumn&lt;/code&gt; 호출</target>
        </trans-unit>
        <trans-unit id="c58ecc2d298eee1f7abd6634a0033cfe09418aff" translate="yes" xml:space="preserve">
          <source>By calling the factory method &lt;a href=&quot;methodhandles.lookup#unreflect(java.lang.reflect.Method)&quot;&gt;&lt;code&gt;Lookup.unreflect&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methodhandles.lookup#unreflectSpecial(java.lang.reflect.Method,java.lang.Class)&quot;&gt;&lt;code&gt;Lookup.unreflectSpecial&lt;/code&gt;&lt;/a&gt; to convert a &lt;a href=&quot;../reflect/method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; into a method handle.</source>
          <target state="translated">팩토리 메서드 &lt;a href=&quot;methodhandles.lookup#unreflect(java.lang.reflect.Method)&quot;&gt; &lt;code&gt;Lookup.unreflect&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;methodhandles.lookup#unreflectSpecial(java.lang.reflect.Method,java.lang.Class)&quot;&gt; &lt;code&gt;Lookup.unreflectSpecial&lt;/code&gt; &lt;/a&gt; 을 호출하여 &lt;a href=&quot;../reflect/method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 를 메서드 핸들로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="724dd4b9f9faacd3f7346ee2ca63a912c6121ad9" translate="yes" xml:space="preserve">
          <source>By calling the factory method &lt;a href=&quot;methodhandles.lookup#unreflect-java.lang.reflect.Method-&quot;&gt;&lt;code&gt;Lookup.unreflect&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methodhandles.lookup#unreflectSpecial-java.lang.reflect.Method-java.lang.Class-&quot;&gt;&lt;code&gt;Lookup.unreflectSpecial&lt;/code&gt;&lt;/a&gt; to convert a &lt;a href=&quot;../reflect/method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; into a method handle.</source>
          <target state="translated">팩토리 메소드 &lt;a href=&quot;methodhandles.lookup#unreflect-java.lang.reflect.Method-&quot;&gt; &lt;code&gt;Lookup.unreflect&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;methodhandles.lookup#unreflectSpecial-java.lang.reflect.Method-java.lang.Class-&quot;&gt; &lt;code&gt;Lookup.unreflectSpecial&lt;/code&gt; &lt;/a&gt; 을 호출하여 &lt;a href=&quot;../reflect/method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 를 메소드 핸들로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b5d671b32f07b5e4aa5fa04a97db10b3bab02ca9" translate="yes" xml:space="preserve">
          <source>By calling the factory method &lt;a href=&quot;methodhandles.lookup#unreflectConstructor(java.lang.reflect.Constructor)&quot;&gt;&lt;code&gt;Lookup.unreflectConstructor&lt;/code&gt;&lt;/a&gt; to convert a &lt;a href=&quot;../reflect/constructor&quot;&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt; into a method handle.</source>
          <target state="translated">팩토리 메서드 &lt;a href=&quot;methodhandles.lookup#unreflectConstructor(java.lang.reflect.Constructor)&quot;&gt; &lt;code&gt;Lookup.unreflectConstructor&lt;/code&gt; &lt;/a&gt; 를 호출하여 &lt;a href=&quot;../reflect/constructor&quot;&gt; &lt;code&gt;Constructor&lt;/code&gt; &lt;/a&gt; 를 메서드 핸들로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="09378e7e493522683c654e9c1cf13be18d73cc44" translate="yes" xml:space="preserve">
          <source>By calling the factory method &lt;a href=&quot;methodhandles.lookup#unreflectConstructor-java.lang.reflect.Constructor-&quot;&gt;&lt;code&gt;Lookup.unreflectConstructor&lt;/code&gt;&lt;/a&gt; to convert a &lt;a href=&quot;../reflect/constructor&quot;&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt; into a method handle.</source>
          <target state="translated">팩토리 메소드 &lt;a href=&quot;methodhandles.lookup#unreflectConstructor-java.lang.reflect.Constructor-&quot;&gt; &lt;code&gt;Lookup.unreflectConstructor&lt;/code&gt; &lt;/a&gt; 를 호출하여 &lt;a href=&quot;../reflect/constructor&quot;&gt; &lt;code&gt;Constructor&lt;/code&gt; &lt;/a&gt; 를 메소드 핸들로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="f68aa9b6c7f0e37de8afd0e004b0e8f232a2af7d" translate="yes" xml:space="preserve">
          <source>By calling the factory method &lt;a href=&quot;methodhandles.lookup#unreflectGetter(java.lang.reflect.Field)&quot;&gt;&lt;code&gt;Lookup.unreflectGetter&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methodhandles.lookup#unreflectSetter(java.lang.reflect.Field)&quot;&gt;&lt;code&gt;Lookup.unreflectSetter&lt;/code&gt;&lt;/a&gt; to convert a &lt;a href=&quot;../reflect/field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; into a method handle.</source>
          <target state="translated">Factory 메서드 &lt;a href=&quot;methodhandles.lookup#unreflectGetter(java.lang.reflect.Field)&quot;&gt; &lt;code&gt;Lookup.unreflectGetter&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;methodhandles.lookup#unreflectSetter(java.lang.reflect.Field)&quot;&gt; &lt;code&gt;Lookup.unreflectSetter&lt;/code&gt; &lt;/a&gt; 를 호출하여 &lt;a href=&quot;../reflect/field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; 를 메서드 핸들로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="8bf6f3de6ce61cca0b193151d74f47245f2a6397" translate="yes" xml:space="preserve">
          <source>By calling the factory method &lt;a href=&quot;methodhandles.lookup#unreflectGetter-java.lang.reflect.Field-&quot;&gt;&lt;code&gt;Lookup.unreflectGetter&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methodhandles.lookup#unreflectSetter-java.lang.reflect.Field-&quot;&gt;&lt;code&gt;Lookup.unreflectSetter&lt;/code&gt;&lt;/a&gt; to convert a &lt;a href=&quot;../reflect/field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; into a method handle.</source>
          <target state="translated">팩토리 메소드 &lt;a href=&quot;methodhandles.lookup#unreflectGetter-java.lang.reflect.Field-&quot;&gt; &lt;code&gt;Lookup.unreflectGetter&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;methodhandles.lookup#unreflectSetter-java.lang.reflect.Field-&quot;&gt; &lt;code&gt;Lookup.unreflectSetter&lt;/code&gt; &lt;/a&gt; 를 호출하여 &lt;a href=&quot;../reflect/field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; 를 메소드 핸들로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="3f87e2ccb7a9a27f052c79c35f0b36ba244acdd9" translate="yes" xml:space="preserve">
          <source>By contrast, this implementation has no fractional part, and counts days from midnight to midnight. This implementation uses an integer and days starting at midnight. The integer value for the Julian Day Number is the astronomical Julian Day value at midday of the date in question. This amounts to the astronomical Julian Day, rounded to an integer &lt;code&gt;JDN = floor(JD + 0.5)&lt;/code&gt;.</source>
          <target state="translated">대조적으로,이 구현은 분수 부분이 없으며 자정부터 자정까지 일을 계산합니다. 이 구현에서는 자정부터 시작하는 정수와 요일을 사용합니다. Julian Day Number의 정수 값은 해당 날짜 정오의 천문학적 Julian Day 값입니다. 이것은 천문학적 줄리안 데이에 해당하며 정수 &lt;code&gt;JDN = floor(JD + 0.5)&lt;/code&gt; 반올림됩니다 .</target>
        </trans-unit>
        <trans-unit id="b4753cc387bbac0c7f9c57217c466411a45429b6" translate="yes" xml:space="preserve">
          <source>By convention, X.509 &lt;code&gt;CertPath&lt;/code&gt;s (consisting of &lt;code&gt;X509Certificate&lt;/code&gt;s), are ordered starting with the target certificate and ending with a certificate issued by the trust anchor. That is, the issuer of one certificate is the subject of the following one. The certificate representing the &lt;a href=&quot;trustanchor&quot;&gt;&lt;code&gt;TrustAnchor&lt;/code&gt;&lt;/a&gt; should not be included in the certification path. Unvalidated X.509 &lt;code&gt;CertPath&lt;/code&gt;s may not follow these conventions. PKIX &lt;code&gt;CertPathValidator&lt;/code&gt;s will detect any departure from these conventions that cause the certification path to be invalid and throw a &lt;code&gt;CertPathValidatorException&lt;/code&gt;.</source>
          <target state="translated">일반적으로 X.509 &lt;code&gt;CertPath&lt;/code&gt; ( &lt;code&gt;X509Certificate&lt;/code&gt; 로 구성됨 )는 대상 인증서로 시작하여 트러스트 앵커에서 발급 한 인증서로 끝나도록 주문됩니다. 즉, 하나의 인증서 발행자는 다음 인증서의 주제입니다. &lt;a href=&quot;trustanchor&quot;&gt; &lt;code&gt;TrustAnchor&lt;/code&gt; 를&lt;/a&gt; 나타내는 인증서는 인증 경로에 포함되지 않아야합니다. 확인 되지 않은 X.509 &lt;code&gt;CertPath&lt;/code&gt; 는 이러한 규칙을 따르지 않을 수 있습니다. PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; 는, 인증 경로가 무효가되어 &lt;code&gt;CertPathValidatorException&lt;/code&gt; 을 발생시키는 이러한 규약의 이탈을 검출합니다 .</target>
        </trans-unit>
        <trans-unit id="7ce538b9da783a53db6c8692103cbe29dfda0164" translate="yes" xml:space="preserve">
          <source>By convention, a provider should name its primary DRBG implementation with the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#securerandom-number-generation-algorithms&quot;&gt; standard &lt;code&gt;SecureRandom&lt;/code&gt; algorithm name&lt;/a&gt; &quot;DRBG&quot;.</source>
          <target state="translated">일반적으로 공급자는 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#securerandom-number-generation-algorithms&quot;&gt;표준 &lt;code&gt;SecureRandom&lt;/code&gt; 알고리즘 이름&lt;/a&gt; &quot;DRBG&quot;를 사용하여 기본 DRBG 구현의 이름을 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a59a924020c8cac30077577dc729f7ee0a2aadd9" translate="yes" xml:space="preserve">
          <source>By convention, a provider should name its primary DRBG implementation with the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/security/standard-names.html#securerandom-number-generation-algorithms&quot;&gt; standard &lt;code&gt;SecureRandom&lt;/code&gt; algorithm name&lt;/a&gt; &quot;DRBG&quot;.</source>
          <target state="translated">일반적으로 공급자는 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/security/standard-names.html#securerandom-number-generation-algorithms&quot;&gt;표준 &lt;code&gt;SecureRandom&lt;/code&gt; 알고리즘 이름&lt;/a&gt; &quot;DRBG&quot;를 사용하여 기본 DRBG 구현의 이름을 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b2514c1e5ade3cabc14faae1aab73f262681b04c" translate="yes" xml:space="preserve">
          <source>By convention, class &lt;code&gt;Throwable&lt;/code&gt; and its subclasses have two constructors, one that takes no arguments and one that takes a &lt;code&gt;String&lt;/code&gt; argument that can be used to produce a detail message. Further, those subclasses that might likely have a cause associated with them should have two more constructors, one that takes a &lt;code&gt;Throwable&lt;/code&gt; (the cause), and one that takes a &lt;code&gt;String&lt;/code&gt; (the detail message) and a &lt;code&gt;Throwable&lt;/code&gt; (the cause).</source>
          <target state="translated">일반적으로 &lt;code&gt;Throwable&lt;/code&gt; 클래스 와 해당 서브 클래스에는 두 개의 생성자가 있습니다. 하나는 인수를 사용하지 않고 다른 하나 는 세부 메시지를 생성하는 데 사용할 수 있는 &lt;code&gt;String&lt;/code&gt; 인수를 사용합니다. 또한 관련 원인이있을 수있는 서브 클래스에는 &lt;code&gt;Throwable&lt;/code&gt; (원인)을 사용 하는 클래스 와 &lt;code&gt;String&lt;/code&gt; (세부 메시지) 및 &lt;code&gt;Throwable&lt;/code&gt; (원인)을 사용 하는 생성자가 두 개 더 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="09d2b5cba33a0eec28c14a770930df6bffad3532" translate="yes" xml:space="preserve">
          <source>By convention, classes that implement this interface should override &lt;code&gt;Object.clone&lt;/code&gt; (which is protected) with a public method. See &lt;a href=&quot;object#clone()&quot;&gt;&lt;code&gt;Object.clone()&lt;/code&gt;&lt;/a&gt; for details on overriding this method.</source>
          <target state="translated">규칙에 &lt;code&gt;Object.clone&lt;/code&gt; 인터페이스를 구현하는 클래스 는 공용 메서드를 사용하여 보호되는 Object.clone 을 재정의해야합니다 . 이 메서드 재정의에 대한 자세한 내용 은 &lt;a href=&quot;object#clone()&quot;&gt; &lt;code&gt;Object.clone()&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0dd690817d171aa95e2eb06736a2246e8af3211c" translate="yes" xml:space="preserve">
          <source>By convention, classes that implement this interface should override &lt;code&gt;Object.clone&lt;/code&gt; (which is protected) with a public method. See &lt;a href=&quot;object#clone--&quot;&gt;&lt;code&gt;Object.clone()&lt;/code&gt;&lt;/a&gt; for details on overriding this method.</source>
          <target state="translated">일반적으로이 인터페이스를 구현하는 클래스 는 공용 메소드를 사용하여 &lt;code&gt;Object.clone&lt;/code&gt; (보호 된)을 대체해야합니다 . 이 메서드를 재정의하는 방법에 대한 자세한 내용 은 &lt;a href=&quot;object#clone--&quot;&gt; &lt;code&gt;Object.clone()&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="91a3641a4b8169abf7f6d88641a6c87fae260b35" translate="yes" xml:space="preserve">
          <source>By convention, the object returned by this method should be independent of this object (which is being cloned). To achieve this independence, it may be necessary to modify one or more fields of the object returned by &lt;code&gt;super.clone&lt;/code&gt; before returning it. Typically, this means copying any mutable objects that comprise the internal &quot;deep structure&quot; of the object being cloned and replacing the references to these objects with references to the copies. If a class contains only primitive fields or references to immutable objects, then it is usually the case that no fields in the object returned by &lt;code&gt;super.clone&lt;/code&gt; need to be modified.</source>
          <target state="translated">일반적으로이 메소드가 리턴 한 오브젝트는이 오브젝트 (복제중인)와 독립적이어야합니다. 이 독립성을 달성하려면, 반환 하기 전에 &lt;code&gt;super.clone&lt;/code&gt; 에 의해 반환 된 객체의 하나 이상의 필드를 수정해야 할 수도 있습니다 . 일반적으로 이는 복제되는 객체의 내부 &quot;심층 구조&quot;를 구성하는 변경 가능한 객체를 복사하고 이러한 객체에 대한 참조를 사본에 대한 참조로 대체하는 것을 의미합니다. 클래스에 기본 필드 또는 변경 불가능한 객체에 대한 참조 만 포함 된 경우 일반적으로 &lt;code&gt;super.clone&lt;/code&gt; 에 의해 반환 된 객체의 필드를 수정하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="a60713ca9a1b0ef07a53742b11bce0a57dc2728e" translate="yes" xml:space="preserve">
          <source>By convention, the returned object should be obtained by calling &lt;code&gt;super.clone&lt;/code&gt;. If a class and all of its superclasses (except &lt;code&gt;Object&lt;/code&gt;) obey this convention, it will be the case that &lt;code&gt;x.clone().getClass() == x.getClass()&lt;/code&gt;.</source>
          <target state="translated">일반적으로 반환 된 객체는 &lt;code&gt;super.clone&lt;/code&gt; 을 호출하여 얻어야합니다 . 클래스와 클래스의 모든 수퍼 클래스 ( &lt;code&gt;Object&lt;/code&gt; 제외 )가이 규칙을 준수하는 경우 &lt;code&gt;x.clone().getClass() == x.getClass()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b768573759f5a5992482cd68564628b637da139b" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;JLayer&lt;/code&gt; receives no events and its event mask is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;JLayer&lt;/code&gt; 는 이벤트를 수신하지 않으며 이벤트 마스크는 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6f7663336da5df7ba253315ededced2c532ab56b" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;JLayer&lt;/code&gt; receives no events.</source>
          <target state="translated">기본적으로 &lt;code&gt;JLayer&lt;/code&gt; 는 이벤트를 수신하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2cac8c47d141f254df9eb886af49b7d827ea84ec" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;JScrollPane&lt;/code&gt; creates scrollbars that are instances of this class.</source>
          <target state="translated">기본적으로 &lt;code&gt;JScrollPane&lt;/code&gt; 은이 클래스의 인스턴스 인 스크롤바를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="344bf32647fc0633787ae3113e62625be42b2a42" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;JScrollPane&lt;/code&gt; creates scrollbars that are instances of this class. &lt;code&gt;Scrollbar&lt;/code&gt; overrides the &lt;code&gt;getUnitIncrement&lt;/code&gt; and &lt;code&gt;getBlockIncrement&lt;/code&gt; methods so that, if the viewport's view is a &lt;code&gt;Scrollable&lt;/code&gt;, the view is asked to compute these values. Unless the unit/block increment have been explicitly set.</source>
          <target state="translated">기본적으로 &lt;code&gt;JScrollPane&lt;/code&gt; 은이 클래스의 인스턴스 인 스크롤바를 만듭니다. &lt;code&gt;Scrollbar&lt;/code&gt; 는 &lt;code&gt;getUnitIncrement&lt;/code&gt; 및 &lt;code&gt;getBlockIncrement&lt;/code&gt; 메서드를 재정의 하므로 뷰포트의 뷰가 &lt;code&gt;Scrollable&lt;/code&gt; 인 경우 뷰에 이러한 값을 계산하도록 요청됩니다. 단위 / 블록 증분이 명시 적으로 설정되지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="39a5703acf8137961b19d9a1161f2662f259b0f2" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;JScrollPane&lt;/code&gt; uses &lt;code&gt;ScrollPaneLayout&lt;/code&gt; to handle the layout of its child Components. &lt;code&gt;ScrollPaneLayout&lt;/code&gt; determines the size to make the viewport view in one of two ways:</source>
          <target state="translated">기본적으로 &lt;code&gt;JScrollPane&lt;/code&gt; 은 &lt;code&gt;ScrollPaneLayout&lt;/code&gt; 을 사용 하여 자식 구성 요소의 레이아웃을 처리합니다. &lt;code&gt;ScrollPaneLayout&lt;/code&gt; 은 다음 두 가지 방법 중 하나로 뷰포트 뷰를 만들기위한 크기를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="be5b7a6089e4fc5e88aef5d4d15a008d57dfd393" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;JTextComponent&lt;/code&gt; does not register itself with the &lt;code&gt;ToolTipManager&lt;/code&gt;. This means that tooltips will NOT be shown from the &lt;code&gt;TextUI&lt;/code&gt; unless &lt;code&gt;registerComponent&lt;/code&gt; has been invoked on the &lt;code&gt;ToolTipManager&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;JTextComponent&lt;/code&gt; 는 &lt;code&gt;ToolTipManager&lt;/code&gt; 에 자신을 등록하지 않습니다 . 즉 , &lt;code&gt;ToolTipManager&lt;/code&gt; 에서 &lt;code&gt;registerComponent&lt;/code&gt; 를 호출 하지 않는 한 &lt;code&gt;TextUI&lt;/code&gt; 에서 도구 설명이 표시되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="d529a0b2ecac6cfd39202d1773973b61d43d0cef" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;MaskFormatter&lt;/code&gt; will not allow invalid edits, you can change this with the &lt;code&gt;setAllowsInvalid&lt;/code&gt; method, and will commit edits on valid edits (use the &lt;code&gt;setCommitsOnValidEdit&lt;/code&gt; to change this).</source>
          <target state="translated">기본적으로 &lt;code&gt;MaskFormatter&lt;/code&gt; 는 잘못된 편집을 허용하지 않으며 &lt;code&gt;setAllowsInvalid&lt;/code&gt; 메소드로 이를 변경할 수 있으며 유효한 편집에 대한 편집을 커밋합니다 ( 이를 변경 하려면 &lt;code&gt;setCommitsOnValidEdit&lt;/code&gt; 사용 ).</target>
        </trans-unit>
        <trans-unit id="d2185b894b3385135eb487891c25c706e5066e38" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;Object.equals()&lt;/code&gt; is used when comparing the attribute id and its values except when a value is an array. For an array, each element of the array is checked using &lt;code&gt;Object.equals()&lt;/code&gt;. A subclass may override this to make use of schema syntax information and matching rules, which define what it means for two attributes to be equal. How and whether a subclass makes use of the schema information is determined by the subclass. If a subclass overrides &lt;code&gt;equals()&lt;/code&gt;, it should also override &lt;code&gt;hashCode()&lt;/code&gt; such that two attributes that are equal have the same hash code.</source>
          <target state="translated">기본적으로 &lt;code&gt;Object.equals()&lt;/code&gt; 는 값이 배열 인 경우를 제외하고 속성 ID와 해당 값을 비교할 때 사용됩니다. 배열의 경우 배열의 각 요소는 &lt;code&gt;Object.equals()&lt;/code&gt; 사용하여 확인됩니다 . 서브 클래스는 스키마 구문 정보와 일치 규칙을 사용하기 위해이를 재정의 할 수 있는데, 이는 두 속성이 동일하다는 의미를 정의합니다. 서브 클래스가 스키마 정보를 사용하는 방법과 여부는 서브 클래스에 의해 결정됩니다. 서브 클래스가 &lt;code&gt;equals()&lt;/code&gt; 대체하는 경우, 동일한 두 속성이 동일한 해시 코드를 갖도록 &lt;code&gt;hashCode()&lt;/code&gt; 대체해야 합니다.</target>
        </trans-unit>
        <trans-unit id="6a95f057ba55802f53862fb634fcd938fe029c43" translate="yes" xml:space="preserve">
          <source>By default buffering is enabled in the IO libraries but each log record is flushed out when it is complete.</source>
          <target state="translated">기본적으로 버퍼링은 IO 라이브러리에서 활성화되지만 각 로그 레코드는 완료되면 플러시됩니다.</target>
        </trans-unit>
        <trans-unit id="b5652838fb2d4917599a19627f262e9aee99bd7a" translate="yes" xml:space="preserve">
          <source>By default if sorting is enabled &lt;code&gt;JTable&lt;/code&gt; will persist the selection and variable row heights in terms of the model on sorting. For example if row 0, in terms of the underlying model, is currently selected, after the sort row 0, in terms of the underlying model will be selected. Visually the selection may change, but in terms of the underlying model it will remain the same. The one exception to that is if the model index is no longer visible or was removed. For example, if row 0 in terms of model was filtered out the selection will be empty after the sort.</source>
          <target state="translated">기본적으로 정렬이 활성화 된 경우 &lt;code&gt;JTable&lt;/code&gt; 은 정렬시 모델 측면에서 선택 및 가변 행 높이를 유지합니다. 예를 들어, 기본 모델 측면에서 행 0이 현재 선택되어 있으면 정렬 행 0 이후 기본 모델 측면에서 선택됩니다. 시각적으로 선택 사항이 변경 될 수 있지만 기본 모델 측면에서는 동일하게 유지됩니다. 이에 대한 한 가지 예외는 모델 색인이 더 이상 표시되지 않거나 제거 된 경우입니다. 예를 들어 모델 측면에서 0 행이 필터링 된 경우 정렬 후 선택 항목이 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b97e0d008dcff1111ecc8ca31996c70c23abeedd" translate="yes" xml:space="preserve">
          <source>By default many of the &lt;code&gt;Math&lt;/code&gt; methods simply call the equivalent method in &lt;code&gt;StrictMath&lt;/code&gt; for their implementation. Code generators are encouraged to use platform-specific native libraries or microprocessor instructions, where available, to provide higher-performance implementations of &lt;code&gt;Math&lt;/code&gt; methods. Such higher-performance implementations still must conform to the specification for &lt;code&gt;Math&lt;/code&gt;.</source>
          <target state="translated">기본적으로 많은 &lt;code&gt;Math&lt;/code&gt; 메소드 는 구현을 위해 &lt;code&gt;StrictMath&lt;/code&gt; 에서 동등한 메소드를 호출하기 만합니다 . 코드 생성기는 플랫폼 별 고유 라이브러리 또는 마이크로 프로세서 명령어를 사용하여 고성능 &lt;code&gt;Math&lt;/code&gt; 메소드 구현을 제공 하는 것이 좋습니다. 이러한 고성능 구현은 여전히 &lt;code&gt;Math&lt;/code&gt; 사양을 준수해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1e527c5569095092b2cf7ba2f0c72adf3d6e528c" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;XMLFormatter&lt;/code&gt; class is used for formatting.</source>
          <target state="translated">기본적으로 &lt;code&gt;XMLFormatter&lt;/code&gt; 클래스는 형식화에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a3e1586fad30e9a15b9ef57bb9e4be9026e0b33a" translate="yes" xml:space="preserve">
          <source>By default the GIF writer plug-in creates version &quot;89a&quot; images. This can be changed to &quot;87a&quot; by explicitly setting the version in the stream metadata (see  GIF Stream Metadata Format Specification).</source>
          <target state="translated">기본적으로 GIF 작성기 플러그인은 버전 &quot;89a&quot;이미지를 만듭니다. 스트림 메타 데이터에서 버전을 명시 적으로 설정하여 &quot;87a&quot;로 변경할 수 있습니다 (GIF 스트림 메타 데이터 형식 사양 참조).</target>
        </trans-unit>
        <trans-unit id="e3072998e629b81a63426cb273a5913cdac8a0ef" translate="yes" xml:space="preserve">
          <source>By default the GIF writer plug-in creates version &quot;89a&quot; images. This can be changed to &quot;87a&quot; by explicitly setting the version in the stream metadata (see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_stream_metadata_format&quot;&gt; GIF Stream Metadata Format Specification&lt;/a&gt;).</source>
          <target state="translated">기본적으로 GIF 작성기 플러그인은 버전 &quot;89a&quot;이미지를 생성합니다. 스트림 메타 데이터에서 버전을 명시 적으로 설정하여 &quot;87a&quot;로 변경할 수 있습니다 ( &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_stream_metadata_format&quot;&gt;GIF 스트림 메타 데이터 형식 사양 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="45be1e1137fc33c1f86cb7357c9940f1f19fdbf4" translate="yes" xml:space="preserve">
          <source>By default the GIF writer plug-in creates version &quot;89a&quot; images. This can be changed to &quot;87a&quot; by explicitly setting the version in the stream metadata (see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_stream_metadata_format&quot;&gt; GIF Stream Metadata Format Specification&lt;/a&gt;).</source>
          <target state="translated">기본적으로 GIF 작성기 플러그인은 버전 &quot;89a&quot;이미지를 생성합니다. 스트림 메타 데이터에서 버전을 명시 적으로 설정하여 &quot;87a&quot;로 변경할 수 있습니다 ( &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_stream_metadata_format&quot;&gt;GIF 스트림 메타 데이터 형식 사양 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4e190c87fcfb920806d86cae9e4c29a3be7fdb24" translate="yes" xml:space="preserve">
          <source>By default the caret tracks all the document changes performed on the Event Dispatching Thread and updates it's position accordingly if an insertion occurs before or at the caret position or a removal occurs before the caret position. &lt;code&gt;DefaultCaret&lt;/code&gt; tries to make itself visible which may lead to scrolling of a text component within &lt;code&gt;JScrollPane&lt;/code&gt;. The default caret behavior can be changed by the &lt;a href=&quot;defaultcaret#setUpdatePolicy(int)&quot;&gt;&lt;code&gt;DefaultCaret.setUpdatePolicy(int)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">기본적으로 캐럿은 이벤트 디스 패칭 스레드에서 수행 된 모든 문서 변경 사항을 추적하고 삽입이 캐럿 위치 이전에 발생하거나 캐럿 위치 이전에 제거가 발생하면 그에 따라 위치를 업데이트합니다. &lt;code&gt;DefaultCaret&lt;/code&gt; 은 &lt;code&gt;JScrollPane&lt;/code&gt; 내에서 텍스트 구성 요소의 스크롤로 이어질 수있는 자신을 표시하려고합니다 . 기본 캐럿 동작은 &lt;a href=&quot;defaultcaret#setUpdatePolicy(int)&quot;&gt; &lt;code&gt;DefaultCaret.setUpdatePolicy(int)&lt;/code&gt; &lt;/a&gt; 메서드 로 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8cff5f08249132bca41856cf8b699cc6faabe61c" translate="yes" xml:space="preserve">
          <source>By default the component will create a keymap (named &lt;b&gt;DEFAULT_KEYMAP&lt;/b&gt;) that is shared by all JTextComponent instances as the default keymap. Typically a look-and-feel implementation will install a different keymap that resolves to the default keymap for those bindings not found in the different keymap. The minimal bindings include:</source>
          <target state="translated">기본적으로 구성 요소는 모든 JTextComponent 인스턴스에서 기본 키맵으로 공유 하는 키맵 ( &lt;b&gt;DEFAULT_KEYMAP&lt;/b&gt; )을 만듭니다 . 일반적으로 룩앤필 구현은 다른 키맵에없는 바인딩에 대한 기본 키맵으로 확인되는 다른 키맵을 설치합니다. 최소 바인딩에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9d681c3c45f980934e1b3c61cbe64adb0668d520" translate="yes" xml:space="preserve">
          <source>By default the feature version number of the returned &lt;code&gt;Version&lt;/code&gt; will be equal to the feature version number of &lt;code&gt;Runtime.version()&lt;/code&gt;. However, if the &lt;code&gt;jdk.util.jar.version&lt;/code&gt; property is set, the returned &lt;code&gt;Version&lt;/code&gt; is derived from that property and feature version numbers may not be equal.</source>
          <target state="translated">기본적으로 반환 된 &lt;code&gt;Version&lt;/code&gt; 의 기능 버전 번호는 &lt;code&gt;Runtime.version()&lt;/code&gt; 의 기능 버전 번호와 동일합니다 . 그러나 &lt;code&gt;jdk.util.jar.version&lt;/code&gt; 등록 정보가 설정된 경우 반환 된 &lt;code&gt;Version&lt;/code&gt; 은 해당 등록 정보에서 파생되며 기능 버전 번호가 같지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="240aa97df5f841986305a2c67ef1a8cdbe594454" translate="yes" xml:space="preserve">
          <source>By default the protocol handlers are loaded dynamically from the default location. It is, however, possible to add to the search path by setting the &lt;code&gt;java.protocol.handler.pkgs&lt;/code&gt; system property. For instance if it is set to &lt;code&gt;myapp.protocols&lt;/code&gt;, then the URL code will try, in the case of http, first to load &lt;code&gt;myapp.protocols.http.Handler&lt;/code&gt;, then, if this fails, &lt;code&gt;http.Handler&lt;/code&gt; from the default location.</source>
          <target state="translated">기본적으로 프로토콜 핸들러는 기본 위치에서 동적으로로드됩니다. 그러나 &lt;code&gt;java.protocol.handler.pkgs&lt;/code&gt; 시스템 특성 을 설정하여 검색 경로에 추가 할 수 있습니다 . 예를 들어 , &lt;code&gt;myapp.protocols&lt;/code&gt; 로 설정된 경우 URL 코드는 http의 경우 먼저 &lt;code&gt;myapp.protocols.http.Handler&lt;/code&gt; 를로드 한 다음 실패 하면 기본 위치에서 &lt;code&gt;http.Handler&lt;/code&gt; 를로드하려고 시도 합니다 .</target>
        </trans-unit>
        <trans-unit id="de24ec27a7ebff7132b2903e159ad5abd2703913" translate="yes" xml:space="preserve">
          <source>By default the protocol handlers are loaded dynamically from the default location. It is, however, possible to deploy additional protocols handlers as &lt;a href=&quot;../util/serviceloader&quot;&gt;&lt;code&gt;services&lt;/code&gt;&lt;/a&gt;. Service providers of type &lt;a href=&quot;spi/urlstreamhandlerprovider&quot;&gt;URLStreamHandlerProvider&lt;/a&gt; are located at runtime, as specified in the &lt;a href=&quot;url#%3Cinit%3E(java.lang.String,java.lang.String,int,java.lang.String)&quot;&gt;URL constructor&lt;/a&gt;.</source>
          <target state="translated">기본적으로 프로토콜 핸들러는 기본 위치에서 동적으로로드됩니다. 그러나 추가 프로토콜 핸들러를 &lt;a href=&quot;../util/serviceloader&quot;&gt; &lt;code&gt;services&lt;/code&gt; &lt;/a&gt; 로 배포 할 수 있습니다 . &lt;a href=&quot;spi/urlstreamhandlerprovider&quot;&gt;URLStreamHandlerProvider&lt;/a&gt; 유형의 서비스 공급자 는 &lt;a href=&quot;url#%3Cinit%3E(java.lang.String,java.lang.String,int,java.lang.String)&quot;&gt;URL 생성자에&lt;/a&gt; 지정된대로 런타임에 위치합니다 .</target>
        </trans-unit>
        <trans-unit id="2ebcaa13332f2e0c79bf25f74dba28494b4d560f" translate="yes" xml:space="preserve">
          <source>By default this is not enabled; to enable it set the client &lt;a href=&quot;jcomponent#putClientProperty(java.lang.Object,java.lang.Object)&quot;&gt;&lt;code&gt;property&lt;/code&gt;&lt;/a&gt; with this name to &lt;code&gt;Boolean.TRUE&lt;/code&gt;.</source>
          <target state="translated">기본적으로 활성화되지 않습니다. 활성화하려면 이 이름 의 클라이언트 &lt;a href=&quot;jcomponent#putClientProperty(java.lang.Object,java.lang.Object)&quot;&gt; &lt;code&gt;property&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;Boolean.TRUE&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="6f2595fe1d32f795cc00152cbef1c2fa51250ded" translate="yes" xml:space="preserve">
          <source>By default this method fills the specified component with its background color if its &lt;code&gt;opaque&lt;/code&gt; property is &lt;code&gt;true&lt;/code&gt;, and then immediately calls &lt;code&gt;paint&lt;/code&gt;. In general this method need not be overridden by subclasses; all look-and-feel rendering code should reside in the &lt;code&gt;paint&lt;/code&gt; method.</source>
          <target state="translated">기본적으로이 메서드는 &lt;code&gt;opaque&lt;/code&gt; 속성이 &lt;code&gt;true&lt;/code&gt; 인 경우 지정된 구성 요소를 배경색으로 채운 다음 즉시 &lt;code&gt;paint&lt;/code&gt; 를 호출합니다 . 일반적으로이 메서드는 하위 클래스로 재정의 할 필요가 없습니다. 모든 룩앤필 렌더링 코드는 &lt;code&gt;paint&lt;/code&gt; 메소드 에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="ef2933e65d52ae8b675c3d93e0591ec4095f5c3f" translate="yes" xml:space="preserve">
          <source>By default this method returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">기본적으로이 메서드는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="f578bd2af857801ec612c216214dc29e76722dc1" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;DragSourceContext&lt;/code&gt; sets the cursor as appropriate for the current state of the drag and drop operation. For example, if the user has chosen &lt;a href=&quot;dndconstants#ACTION_MOVE&quot;&gt;the move action&lt;/a&gt;, and the pointer is over a target that accepts the move action, the default move cursor is shown. When the pointer is over an area that does not accept the transfer, the default &quot;no drop&quot; cursor is shown.</source>
          <target state="translated">기본적으로 &lt;code&gt;DragSourceContext&lt;/code&gt; 는 끌어서 놓기 작업의 현재 상태에 맞게 커서를 설정합니다. 예를 들어 사용자가 &lt;a href=&quot;dndconstants#ACTION_MOVE&quot;&gt;이동 동작&lt;/a&gt; 을 선택 하고 포인터가 이동 동작을 허용하는 대상 위에있는 경우 기본 이동 커서가 표시됩니다. 포인터가 전송을 허용하지 않는 영역 위에 있으면 기본 &quot;no drop&quot;커서가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="33adbdd9933f88432e130ca6bdf4b95e7a549406" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;JViewport&lt;/code&gt; is opaque. To change this, use the &lt;code&gt;setOpaque&lt;/code&gt; method.</source>
          <target state="translated">기본적으로 &lt;code&gt;JViewport&lt;/code&gt; 는 불투명합니다. 이를 변경하려면 &lt;code&gt;setOpaque&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="21f13eb72e41fecd586588784d032766210ef5af" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;MaskFormatter&lt;/code&gt; is in overwrite mode. That is as characters are typed a new character is not inserted, rather the character at the current location is replaced with the newly typed character. You can change this behavior by way of the method &lt;code&gt;setOverwriteMode&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;MaskFormatter&lt;/code&gt; 는 덮어 쓰기 모드입니다. 즉, 문자를 입력 할 때 새 문자가 삽입되지 않고 현재 위치의 문자가 새로 입력 된 문자로 대체됩니다. &lt;code&gt;setOverwriteMode&lt;/code&gt; 메소드를 통해이 동작을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="59c0deb687021a178f3e4a99362342d2537719ff" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;Object.equals()&lt;/code&gt; is used when comparing &lt;code&gt;attrVal&lt;/code&gt; with this attribute's values except when &lt;code&gt;attrVal&lt;/code&gt; is an array. For an array, each element of the array is checked using &lt;code&gt;Object.equals()&lt;/code&gt;. A subclass may use schema information to determine equality.</source>
          <target state="translated">기본적 &lt;code&gt;Object.equals()&lt;/code&gt; 과 비교할 때 사용 &lt;code&gt;attrVal&lt;/code&gt; 을 하는 경우를 제외하고,이 속성의 값 &lt;code&gt;attrVal&lt;/code&gt; 가 배열이다. 배열의 경우 배열의 각 요소는 &lt;code&gt;Object.equals()&lt;/code&gt; 사용하여 확인됩니다 . 서브 클래스는 스키마 정보를 사용하여 동등성을 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a92e9556fcf4e8e505c372ba0dbce47bcac06be" translate="yes" xml:space="preserve">
          <source>By default, ContainerOrderFocusTraversalPolicy implicitly transfers focus down-cycle. That is, during normal forward focus traversal, the Component traversed after a focus cycle root will be the focus-cycle- root's default Component to focus. This behavior can be disabled using the &lt;code&gt;setImplicitDownCycleTraversal&lt;/code&gt; method.</source>
          <target state="translated">기본적으로 ContainerOrderFocusTraversalPolicy는 암시 적으로 포커스 다운 사이클을 전송합니다. 즉, 일반적인 전방 초점 순회 중에 초점주기 루트 이후에 순회 된 컴포넌트는 초점을 맞출 초점주기 루트의 기본 컴포넌트가됩니다. 이 동작은 &lt;code&gt;setImplicitDownCycleTraversal&lt;/code&gt; 메서드를 사용하여 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ec84eef856a6d0447caafe49043c5819fafdd18b" translate="yes" xml:space="preserve">
          <source>By default, ContainerOrderFocusTraversalPolicy implicitly transfers focus down-cycle. That is, during normal forward focus traversal, the Component traversed after a focus cycle root will be the focus-cycle-root's default Component to focus. This behavior can be disabled using the &lt;code&gt;setImplicitDownCycleTraversal&lt;/code&gt; method.</source>
          <target state="translated">기본적으로 ContainerOrderFocusTraversalPolicy는 암시 적으로 포커스 다운 사이클을 전송합니다. 즉, 일반적인 전방 초점 순회 중에 초점주기 루트 이후에 순회 된 컴포넌트는 초점을 맞출 초점주기 루트의 기본 컴포넌트가됩니다. 이 동작은 &lt;code&gt;setImplicitDownCycleTraversal&lt;/code&gt; 메서드를 사용하여 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a4b5676aa9d0548e76d5d356fa24eefff344fb4e" translate="yes" xml:space="preserve">
          <source>By default, LayoutFocusTraversalPolicy implicitly transfers focus down- cycle. That is, during normal focus traversal, the Component traversed after a focus cycle root will be the focus-cycle-root's default Component to focus. This behavior can be disabled using the &lt;code&gt;setImplicitDownCycleTraversal&lt;/code&gt; method.</source>
          <target state="translated">기본적으로 LayoutFocusTraversalPolicy는 암시 적으로 포커스 다운 사이클을 전송합니다. 즉, 일반 초점 순회 중에 초점주기 루트 이후에 순회 된 컴포넌트는 초점주기 루트의 기본 컴포넌트가됩니다. 이 동작은 &lt;code&gt;setImplicitDownCycleTraversal&lt;/code&gt; 메서드를 사용하여 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="212c70cbb72235079826330f8c93e9f3daa323d2" translate="yes" xml:space="preserve">
          <source>By default, Loggers also send their output to their parent logger. Typically the root Logger is configured with a set of Handlers that essentially act as default handlers for all loggers.</source>
          <target state="translated">기본적으로 로거는 출력을 상위 로거로 보냅니다. 일반적으로 루트 로거는 기본적으로 모든 로거의 기본 처리기 역할을하는 처리기 집합으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="fdd9a98a765058eb90a671fc4767c0bba9cfbb9d" translate="yes" xml:space="preserve">
          <source>By default, SortingFocusTraversalPolicy implicitly transfers focus down- cycle. That is, during normal focus traversal, the Component traversed after a focus cycle root will be the focus-cycle-root's default Component to focus. This behavior can be disabled using the &lt;code&gt;setImplicitDownCycleTraversal&lt;/code&gt; method.</source>
          <target state="translated">기본적으로 SortingFocusTraversalPolicy는 암시 적으로 포커스 다운 사이클을 전송합니다. 즉, 일반 초점 순회 중에 초점주기 루트 이후에 순회 된 컴포넌트는 초점주기 루트의 기본 컴포넌트가됩니다. 이 동작은 &lt;code&gt;setImplicitDownCycleTraversal&lt;/code&gt; 메서드를 사용하여 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7f12761303a2ae303248d111d5b62d68310ce69e" translate="yes" xml:space="preserve">
          <source>By default, a &lt;code&gt;JarFile&lt;/code&gt; for a multi-release jar file is configured to process the multi-release jar file as if it were a plain (unversioned) jar file, and as such an entry name is associated with at most one base entry. The &lt;code&gt;JarFile&lt;/code&gt; may be configured to process a multi-release jar file by creating the &lt;code&gt;JarFile&lt;/code&gt; with the &lt;a href=&quot;#%3Cinit%3E(java.io.File,boolean,int,java.lang.Runtime.Version)&quot;&gt;&lt;code&gt;JarFile(File, boolean, int, Runtime.Version)&lt;/code&gt;&lt;/a&gt; constructor. The &lt;code&gt;Runtime.Version&lt;/code&gt; object sets a maximum version used when searching for versioned entries. When so configured, an entry name can correspond with at most one base entry and zero or more versioned entries. A search is required to associate the entry name with the latest versioned entry whose version is less than or equal to the maximum version (see &lt;a href=&quot;#getEntry(java.lang.String)&quot;&gt;&lt;code&gt;getEntry(String)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">기본적 으로 다중 릴리스 jar 파일에 대한 &lt;code&gt;JarFile&lt;/code&gt; 은 일반 (버전이 지정되지 않은) jar 파일 인 것처럼 다중 릴리스 jar 파일을 처리하도록 구성되며 이러한 항목 이름은 최대 하나의 기본 항목과 연관됩니다. &lt;code&gt;JarFile&lt;/code&gt; 를는 생성 원에 의한 다중 분리 JAR 파일을 처리하도록 구성 될 수있다 &lt;code&gt;JarFile&lt;/code&gt; 를을 으로 &lt;a href=&quot;#%3Cinit%3E(java.io.File,boolean,int,java.lang.Runtime.Version)&quot;&gt; &lt;code&gt;JarFile(File, boolean, int, Runtime.Version)&lt;/code&gt; &lt;/a&gt; 생성자. &lt;code&gt;Runtime.Version&lt;/code&gt; 객체는 버전이 지정된 항목을 검색 할 때 사용되는 최대 버전을 설정합니다. 이렇게 구성된 경우 항목 이름은 최대 하나의 기본 항목 및 0 개 이상의 버전 항목과 일치 할 수 있습니다. 항목 이름을 버전이 최대 버전보다 작거나 같은 최신 버전 항목과 연결하려면 검색이 필요합니다 ( &lt;a href=&quot;#getEntry(java.lang.String)&quot;&gt; &lt;code&gt;getEntry(String)&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="4947e35633288151ac8199739227758e247da4b8" translate="yes" xml:space="preserve">
          <source>By default, a &lt;code&gt;Statement&lt;/code&gt; is not poolable when created, and a &lt;code&gt;PreparedStatement&lt;/code&gt; and &lt;code&gt;CallableStatement&lt;/code&gt; are poolable when created.</source>
          <target state="translated">기본적으로 &lt;code&gt;Statement&lt;/code&gt; 는 생성시 풀링 할 수 없으며 &lt;code&gt;PreparedStatement&lt;/code&gt; 및 &lt;code&gt;CallableStatement&lt;/code&gt; 는 생성시 풀링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46479e24b8ae69da5b9b900011d065289b720894" translate="yes" xml:space="preserve">
          <source>By default, a hidden class or interface may be unloaded even if the class loader that is marked as its defining loader is &lt;a href=&quot;../ref/package#reachability&quot;&gt;reachable&lt;/a&gt;.</source>
          <target state="translated">기본적으로 숨겨진 클래스 또는 인터페이스는 정의 로더로 표시된 클래스 로더에 &lt;a href=&quot;../ref/package#reachability&quot;&gt;도달 할 수있는&lt;/a&gt; 경우에도 언로드 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="68c2cfa847b16a85a98ff2beb33729eb20546f7d" translate="yes" xml:space="preserve">
          <source>By default, a matcher uses anchoring region boundaries.</source>
          <target state="translated">기본적으로 매처는 앵커 영역 경계를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d9ede2f7970350c012c7153eb1f63e552bf35bde" translate="yes" xml:space="preserve">
          <source>By default, a matcher uses opaque bounds.</source>
          <target state="translated">기본적으로 매처는 불투명 한 경계를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="03241342152d9a58c595740c888895d12fb63207" translate="yes" xml:space="preserve">
          <source>By default, a matcher uses opaque region boundaries.</source>
          <target state="translated">기본적으로 매처는 불투명 영역 경계를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c10f94f7c6403220981ff6642ab9adfd24aff743" translate="yes" xml:space="preserve">
          <source>By default, a recording has no duration (&lt;code&gt;null&lt;/code&gt;).</source>
          <target state="translated">기본적으로 녹음에는 기간이 없습니다 ( &lt;code&gt;null&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c991ea9764d32575612084eab1cf01c3d32be1a4" translate="yes" xml:space="preserve">
          <source>By default, a reflected object is &lt;em&gt;not&lt;/em&gt; accessible.</source>
          <target state="translated">기본적으로 반사 된 개체 &lt;em&gt;에는&lt;/em&gt; 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ea3e3e7c5a3df2a3bd0bee7f064c83f2c709e37f" translate="yes" xml:space="preserve">
          <source>By default, a view is very light. It contains a reference to the parent view from which it can fetch many things without holding state, and it contains a reference to a portion of the model (&lt;code&gt;Element&lt;/code&gt;). A view does not have to exactly represent an element in the model, that is simply a typical and therefore convenient mapping. A view can alternatively maintain a couple of Position objects to maintain its location in the model (i.e. represent a fragment of an element). This is typically the result of formatting where views have been broken down into pieces. The convenience of a substantial relationship to the element makes it easier to build factories to produce the views, and makes it easier to keep track of the view pieces as the model is changed and the view must be changed to reflect the model. Simple views therefore represent an Element directly and complex views do not.</source>
          <target state="translated">기본적으로보기는 매우 밝습니다. 여기에는 상태를 유지하지 않고도 많은 것을 가져올 수있는 상위 뷰에 대한 참조가 포함되어 있으며 모델의 일부에 대한 참조가 포함되어 있습니다 ( &lt;code&gt;Element&lt;/code&gt; ). 뷰는 모델의 요소를 정확하게 표현할 필요가 없습니다. 이는 단순히 일반적이고 편리한 매핑입니다. 뷰는 대안으로 두 개의 Position 객체를 유지하여 모델에서 위치를 유지할 수 있습니다 (즉, 요소의 조각을 나타냄). 이는 일반적으로 뷰가 여러 조각으로 나뉘어 진 서식의 결과입니다. 요소에 대한 실질적인 관계의 편리함은 뷰를 생성하기위한 팩토리를 더 쉽게 구축 할 수있게하며, 모델이 변경되고 뷰가 모델을 반영하도록 변경되어야 할 때 뷰 조각을 더 쉽게 추적 할 수 있습니다. 따라서 단순보기는 요소를 직접 나타내며 복잡한보기는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cd6eb13805ac5e446c2db61cc2aeef60eb88f671" translate="yes" xml:space="preserve">
          <source>By default, all Windows have a focusable Window state of &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">기본적으로 모든 Windows는 포커스 가능한 창 상태가 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a666db9366f0dd2e83f04c71114dafe0253c9836" translate="yes" xml:space="preserve">
          <source>By default, all bits in the set initially have the value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기본적으로 세트의 모든 비트는 초기 값이 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ef10a2da0889adaaa9898ef3f5cd02bae1fe382f" translate="yes" xml:space="preserve">
          <source>By default, all the ancestors of the component up to the top-most container of the hierarchy are marked invalid. If the &lt;code&gt;
 java.awt.smartInvalidate&lt;/code&gt; system property is set to &lt;code&gt;true&lt;/code&gt;, invalidation stops on the nearest validate root of this component. Marking a container</source>
          <target state="translated">기본적으로 계층 구조의 최상위 컨테이너까지 구성 요소의 모든 상위 항목은 유효하지 않은 것으로 표시됩니다. 는 IF &lt;code&gt; java.awt.smartInvalidate&lt;/code&gt; 의 시스템 속성이 설정되어 &lt;code&gt;true&lt;/code&gt; , 무효화이 구성 요소의 가장 가까운 유효성 검사 루트 중지합니다. 컨테이너 표시</target>
        </trans-unit>
        <trans-unit id="19bdb80324aad3f8f43aef47c262a35742be37f3" translate="yes" xml:space="preserve">
          <source>By default, all threads in the target VM are resumed while the method is being invoked if they were previously suspended by an event or by &lt;a href=&quot;virtualmachine#suspend()&quot;&gt;&lt;code&gt;VirtualMachine.suspend()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;threadreference#suspend()&quot;&gt;&lt;code&gt;ThreadReference.suspend()&lt;/code&gt;&lt;/a&gt;. This is done to prevent the deadlocks that will occur if any of the threads own monitors that will be needed by the invoked method. It is possible that breakpoints or other events might occur during the invocation. Note, however, that this implicit resume acts exactly like &lt;a href=&quot;threadreference#resume()&quot;&gt;&lt;code&gt;ThreadReference.resume()&lt;/code&gt;&lt;/a&gt;, so if the thread's suspend count is greater than 1, it will remain in a suspended state during the invocation. By default, when the invocation completes, all threads in the target VM are suspended, regardless their state before the invocation.</source>
          <target state="translated">기본적으로 대상 VM의 모든 스레드는 이벤트 또는 &lt;a href=&quot;virtualmachine#suspend()&quot;&gt; &lt;code&gt;VirtualMachine.suspend()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;threadreference#suspend()&quot;&gt; &lt;code&gt;ThreadReference.suspend()&lt;/code&gt; &lt;/a&gt; 의해 이전에 일시 중단 된 경우 메서드가 호출되는 동안 다시 시작됩니다 . 이것은 호출 된 메소드에 필요한 모니터를 스레드가 소유하는 경우 발생하는 교착 상태를 방지하기 위해 수행됩니다. 호출 중에 중단 점 또는 기타 이벤트가 발생할 수 있습니다. 그러나이 암시 적 재개는 &lt;a href=&quot;threadreference#resume()&quot;&gt; &lt;code&gt;ThreadReference.resume()&lt;/code&gt; &lt;/a&gt; 과 똑같이 작동 하므로 스레드의 일시 중단 횟수가 1보다 크면 호출 중에 일시 중단 된 상태로 유지됩니다. 기본적으로 호출이 완료되면 호출 전 상태에 관계없이 대상 VM의 모든 스레드가 일시 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="614a7cc6d33076f43a0f564fdab5895209244d01" translate="yes" xml:space="preserve">
          <source>By default, all threads in the target VM are resumed while the method is being invoked if they were previously suspended by an event or by &lt;a href=&quot;virtualmachine#suspend()&quot;&gt;&lt;code&gt;VirtualMachine.suspend()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;threadreference#suspend()&quot;&gt;&lt;code&gt;ThreadReference.suspend()&lt;/code&gt;&lt;/a&gt;. This is done to prevent the deadlocks that will occur if any of the threads own monitors that will be needed by the invoked method. Note, however, that this implicit resume acts exactly like &lt;a href=&quot;threadreference#resume()&quot;&gt;&lt;code&gt;ThreadReference.resume()&lt;/code&gt;&lt;/a&gt;, so if the thread's suspend count is greater than 1, it will remain in a suspended state during the invocation and thus a deadlock could still occur. By default, when the invocation completes, all threads in the target VM are suspended, regardless their state before the invocation. It is possible that breakpoints or other events might occur during the invocation. This can cause deadlocks as described above. It can also cause a deadlock if invokeMethod is called from the client's event handler thread. In this case, this thread will be waiting for the invokeMethod to complete and won't read the EventSet that comes in for the new event. If this new EventSet is SUSPEND_ALL, then a deadlock will occur because no one will resume the EventSet. To avoid this, all EventRequests should be disabled before doing the invokeMethod, or the invokeMethod should not be done from the client's event handler thread.</source>
          <target state="translated">기본적으로 대상 VM의 모든 스레드는 이벤트 또는 &lt;a href=&quot;virtualmachine#suspend()&quot;&gt; &lt;code&gt;VirtualMachine.suspend()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;threadreference#suspend()&quot;&gt; &lt;code&gt;ThreadReference.suspend()&lt;/code&gt; &lt;/a&gt; 의해 이전에 일시 중단 된 경우 메서드가 호출되는 동안 다시 시작됩니다 . 이것은 호출 된 메소드에 필요한 모니터를 스레드가 소유하는 경우 발생하는 교착 상태를 방지하기 위해 수행됩니다. 그러나이 암시 적 재개는 &lt;a href=&quot;threadreference#resume()&quot;&gt; &lt;code&gt;ThreadReference.resume()&lt;/code&gt; &lt;/a&gt; 과 똑같이 작동합니다.따라서 스레드의 일시 중단 횟수가 1보다 크면 호출 중에 일시 중단 된 상태로 유지되므로 교착 상태가 계속 발생할 수 있습니다. 기본적으로 호출이 완료되면 호출 전 상태에 관계없이 대상 VM의 모든 스레드가 일시 중지됩니다. 호출 중에 중단 점 또는 기타 이벤트가 발생할 수 있습니다. 이로 인해 위에서 설명한대로 교착 상태가 발생할 수 있습니다. 또한 invokeMethod가 클라이언트의 이벤트 핸들러 스레드에서 호출되는 경우 교착 상태가 발생할 수 있습니다. 이 경우이 스레드는 invokeMethod가 완료되기를 기다리고 새 이벤트를 위해 들어오는 EventSet을 읽지 않습니다. 이 새 EventSet이 SUSPEND_ALL이면 아무도 EventSet을 다시 시작하지 않기 때문에 교착 상태가 발생합니다. 이를 방지하려면 invokeMethod를 수행하기 전에 모든 EventRequest를 비활성화해야합니다.또는 invokeMethod는 클라이언트의 이벤트 핸들러 스레드에서 수행되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="3d0a5a668f3c0d1fa4ade0d300342eff44037715" translate="yes" xml:space="preserve">
          <source>By default, an event is enabled. To disable an event annotate the &lt;a href=&quot;event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; class with &lt;code&gt;@Enabled(false)&lt;/code&gt;.</source>
          <target state="translated">기본적으로 이벤트가 활성화됩니다. 이벤트를 비활성화하려면 &lt;code&gt;@Enabled(false)&lt;/code&gt; 를 사용하여 &lt;a href=&quot;event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt; 클래스에 주석 을 답니다 .</target>
        </trans-unit>
        <trans-unit id="08f5665ce782847c3f23f2c84f9f2e26b68a6042" translate="yes" xml:space="preserve">
          <source>By default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched. Unicode-aware case-insensitive matching can be enabled by specifying the &lt;a href=&quot;#UNICODE_CASE&quot;&gt;&lt;code&gt;UNICODE_CASE&lt;/code&gt;&lt;/a&gt; flag in conjunction with this flag.</source>
          <target state="translated">기본적으로 대소 문자를 구분하지 않는 일치는 US-ASCII 문자 집합의 문자 만 일치한다고 가정합니다. 유니 코드를 인식하는 대소 문자를 구분하지 않는 일치는 이 플래그와 함께 &lt;a href=&quot;#UNICODE_CASE&quot;&gt; &lt;code&gt;UNICODE_CASE&lt;/code&gt; &lt;/a&gt; 플래그를 지정하여 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b05f4c15bc6d3e0ea9d22420186bbbd6b7d33574" translate="yes" xml:space="preserve">
          <source>By default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched. Unicode-aware case-insensitive matching can be enabled by specifying the &lt;a href=&quot;pattern#UNICODE_CASE&quot;&gt;&lt;code&gt;UNICODE_CASE&lt;/code&gt;&lt;/a&gt; flag in conjunction with this flag.</source>
          <target state="translated">기본적으로 대소 문자를 구분하지 않는 일치는 US-ASCII 문자 집합의 문자 만 일치한다고 가정합니다. 이 플래그와 함께 &lt;a href=&quot;pattern#UNICODE_CASE&quot;&gt; &lt;code&gt;UNICODE_CASE&lt;/code&gt; &lt;/a&gt; 플래그를 지정하면 대소 문자를 구분하지 않는 유니 코드를 인식 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1a2041265c60087ac4fe7199c470c07c3ecd0e8d" translate="yes" xml:space="preserve">
          <source>By default, columns may be rearranged in the &lt;code&gt;JTable&lt;/code&gt; so that the view's columns appear in a different order to the columns in the model. This does not affect the implementation of the model at all: when the columns are reordered, the &lt;code&gt;JTable&lt;/code&gt; maintains the new order of the columns internally and converts its column indices before querying the model.</source>
          <target state="translated">기본적으로 보기의 열이 모델의 열과 다른 순서로 표시되도록 &lt;code&gt;JTable&lt;/code&gt; 에서 열을 재 배열 할 수 있습니다 . 이것은 모델의 구현에 전혀 영향을 미치지 않습니다. 열이 재정렬 될 때 &lt;code&gt;JTable&lt;/code&gt; 은 내부적으로 열의 새로운 순서를 유지하고 모델을 쿼리하기 전에 열 인덱스를 변환합니다.</target>
        </trans-unit>
        <trans-unit id="bf44f10f4db4900a085335d99045a45fabf1b13c" translate="yes" xml:space="preserve">
          <source>By default, cookies are created according to the RFC 2965 cookie specification. The version can be changed with the &lt;code&gt;setVersion&lt;/code&gt; method.</source>
          <target state="translated">기본적으로 쿠키는 RFC 2965 쿠키 사양에 따라 생성됩니다. &lt;code&gt;setVersion&lt;/code&gt; 메소드 로 버전을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="376b293eb7cafd1a158bf7e0228920cd7cb3f64a" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass if they wish to keep track of the notations declared in a document.</source>
          <target state="translated">기본적으로 아무것도하지 않습니다. 응용 프로그램 작성자는 문서에 선언 된 표기법을 추적하려는 경우 하위 클래스에서이 메서드를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d952caec0b1588eb9e9f59d2f32d676b8fff01c9" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass if they wish to store the locator for use with other document events.</source>
          <target state="translated">기본적으로 아무것도하지 않습니다. 응용 프로그램 작성자는 다른 문서 이벤트와 함께 사용하기 위해 로케이터를 저장하려는 경우 하위 클래스에서이 메서드를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3fd319cc2bf6f1209e77fcd1d143952f20d22eec" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass to keep track of the unparsed entities declared in a document.</source>
          <target state="translated">기본적으로 아무것도하지 않습니다. 애플리케이션 작성자는 문서에 선언 된 구문 분석되지 않은 엔티티를 추적하기 위해 하위 클래스에서이 메서드를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="281e0b8c280fb62c7244379da8e6522c896a322e" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass to take specific actions at the beginning of a document (such as allocating the root node of a tree or creating an output file).</source>
          <target state="translated">기본적으로 아무것도하지 않습니다. 애플리케이션 작성자는 서브 클래스에서이 메서드를 재정 의하여 문서의 시작 부분에서 특정 작업을 수행 할 수 있습니다 (예 : 트리의 루트 노드 할당 또는 출력 파일 생성).</target>
        </trans-unit>
        <trans-unit id="5b55a46f0fd2a423eab650a61d390f1fe4dcadf3" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass to take specific actions at the end of a document (such as finalising a tree or closing an output file).</source>
          <target state="translated">기본적으로 아무것도하지 않습니다. 애플리케이션 작성자는 하위 클래스에서이 메서드를 재정 의하여 문서 끝에서 특정 작업 (예 : 트리 마무리 또는 출력 파일 닫기)을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9578c31cb53f356f340f8888d7b6b0b2ab2ef88" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass to take specific actions at the end of each element (such as finalising a tree node or writing output to a file).</source>
          <target state="translated">기본적으로 아무것도하지 않습니다. 애플리케이션 작성자는 하위 클래스에서이 메서드를 재정 의하여 각 요소의 끝에서 특정 작업을 수행 할 수 있습니다 (예 : 트리 노드 마무리 또는 파일에 출력 쓰기).</target>
        </trans-unit>
        <trans-unit id="c96d33dcfc3e09f06ab356bd26ecc85615612c04" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass to take specific actions at the end of each prefix mapping.</source>
          <target state="translated">기본적으로 아무것도하지 않습니다. 응용 프로그램 작성자는 각 접두사 매핑이 끝날 때 특정 작업을 수행하기 위해 하위 클래스에서이 메서드를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3db9666cd2cff241353af8cef3cc41252eff483f" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass to take specific actions at the start of each Namespace prefix scope (such as storing the prefix mapping).</source>
          <target state="translated">기본적으로 아무것도하지 않습니다. 애플리케이션 작성자는 각 네임 스페이스 접두사 범위의 시작 부분에서 특정 작업을 수행하기 위해 하위 클래스에서이 메서드를 재정의 할 수 있습니다 (예 : 접두사 매핑 저장).</target>
        </trans-unit>
        <trans-unit id="c269c897299c08301e7c0fdddc7b987428bedec2" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass to take specific actions at the start of each element (such as allocating a new tree node or writing output to a file).</source>
          <target state="translated">기본적으로 아무것도하지 않습니다. 응용 프로그램 작성자는 하위 클래스에서이 메서드를 재정 의하여 각 요소의 시작 부분에서 특정 작업을 수행 할 수 있습니다 (예 : 새 트리 노드 할당 또는 파일에 출력 쓰기).</target>
        </trans-unit>
        <trans-unit id="80fefd4fa00a38c910667198a54dab83871e381b" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass to take specific actions for each processing instruction, such as setting status variables or invoking other methods.</source>
          <target state="translated">기본적으로 아무것도하지 않습니다. 응용 프로그램 작성자는 상태 변수 설정 또는 다른 메서드 호출과 같은 각 처리 명령에 대해 특정 작업을 수행하기 위해 하위 클래스에서이 메서드를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa966a9fe2e1a9504f6a61215fe9893c515a05a7" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method to take specific actions for each chunk of character data (such as adding the data to a node or buffer, or printing it to a file).</source>
          <target state="translated">By default, do nothing. Application writers may override this method to take specific actions for each chunk of character data (such as adding the data to a node or buffer, or printing it to a file).</target>
        </trans-unit>
        <trans-unit id="81ae6edb71c188cf07f0dfe1b8108592f72a2f18" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method to take specific actions for each chunk of ignorable whitespace (such as adding data to a node or buffer, or printing it to a file).</source>
          <target state="translated">By default, do nothing. Application writers may override this method to take specific actions for each chunk of ignorable whitespace (such as adding data to a node or buffer, or printing it to a file).</target>
        </trans-unit>
        <trans-unit id="e88f21340c59e043a7e34b0e481995c28070d3ff" translate="yes" xml:space="preserve">
          <source>By default, even core threads are initially created and started only when new tasks arrive, but this can be overridden dynamically using method &lt;a href=&quot;#prestartCoreThread()&quot;&gt;&lt;code&gt;prestartCoreThread()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#prestartAllCoreThreads()&quot;&gt;&lt;code&gt;prestartAllCoreThreads()&lt;/code&gt;&lt;/a&gt;. You probably want to prestart threads if you construct the pool with a non-empty queue.</source>
          <target state="translated">By default, even core threads are initially created and started only when new tasks arrive, but this can be overridden dynamically using method &lt;a href=&quot;#prestartCoreThread()&quot;&gt; &lt;code&gt;prestartCoreThread()&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#prestartAllCoreThreads()&quot;&gt; &lt;code&gt;prestartAllCoreThreads()&lt;/code&gt; &lt;/a&gt;. You probably want to prestart threads if you construct the pool with a non-empty queue.</target>
        </trans-unit>
        <trans-unit id="ca7f70beb3a78020bab53774c9b058370290284b" translate="yes" xml:space="preserve">
          <source>By default, even core threads are initially created and started only when new tasks arrive, but this can be overridden dynamically using method &lt;a href=&quot;threadpoolexecutor#prestartCoreThread--&quot;&gt;&lt;code&gt;prestartCoreThread()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;threadpoolexecutor#prestartAllCoreThreads--&quot;&gt;&lt;code&gt;prestartAllCoreThreads()&lt;/code&gt;&lt;/a&gt;. You probably want to prestart threads if you construct the pool with a non-empty queue.</source>
          <target state="translated">기본적으로 코어 스레드도 처음에는 새 작업이 도착할 때만 작성되고 시작되지만 &lt;a href=&quot;threadpoolexecutor#prestartCoreThread--&quot;&gt; &lt;code&gt;prestartCoreThread()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;threadpoolexecutor#prestartAllCoreThreads--&quot;&gt; &lt;code&gt;prestartAllCoreThreads()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 동적으로 대체 할 수 있습니다 . 비어 있지 않은 큐로 풀을 구성하는 경우 스레드를 사전 시작하려고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="363fc267c2475a3af3b3d474890b007447ba7d8c" translate="yes" xml:space="preserve">
          <source>By default, events are registered when they are first used, typically when an event object is allocated. To ensure an event is visible early, registration can be triggered by invoking the &lt;a href=&quot;#register(java.lang.Class)&quot;&gt;&lt;code&gt;register(Class)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">기본적으로 이벤트는 처음 사용될 때 (일반적으로 이벤트 개체가 할당 될 때) 등록됩니다. 이벤트가 조기에 표시되도록하려면 &lt;a href=&quot;#register(java.lang.Class)&quot;&gt; &lt;code&gt;register(Class)&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 등록을 트리거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f8deffb23b622897cfec4a68e468888dce14efbd" translate="yes" xml:space="preserve">
          <source>By default, if no value for that property is specified, an instance of &lt;a href=&quot;mbeanserverbuilder&quot;&gt;&lt;code&gt;javax.management.MBeanServerBuilder&lt;/code&gt;&lt;/a&gt; is created. Otherwise, the MBeanServerFactory attempts to load the specified class using &lt;a href=&quot;../../../java.base/java/lang/thread#getContextClassLoader()&quot;&gt;&lt;code&gt;Thread.currentThread().getContextClassLoader()&lt;/code&gt;&lt;/a&gt;, or if that is null, &lt;a href=&quot;../../../java.base/java/lang/class#forName(java.lang.String)&quot;&gt;&lt;code&gt;Class.forName()&lt;/code&gt;&lt;/a&gt;. Then it creates an initial instance of that Class using &lt;a href=&quot;../../../java.base/java/lang/class#newInstance()&quot;&gt;&lt;code&gt;Class.newInstance()&lt;/code&gt;&lt;/a&gt;. If any checked exception is raised during this process (e.g. &lt;a href=&quot;../../../java.base/java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../java.base/java/lang/instantiationexception&quot;&gt;&lt;code&gt;InstantiationException&lt;/code&gt;&lt;/a&gt;) the MBeanServerFactory will propagate this exception from within a RuntimeException.</source>
          <target state="translated">By default, if no value for that property is specified, an instance of &lt;a href=&quot;mbeanserverbuilder&quot;&gt; &lt;code&gt;javax.management.MBeanServerBuilder&lt;/code&gt; &lt;/a&gt; is created. Otherwise, the MBeanServerFactory attempts to load the specified class using &lt;a href=&quot;../../../java.base/java/lang/thread#getContextClassLoader()&quot;&gt; &lt;code&gt;Thread.currentThread().getContextClassLoader()&lt;/code&gt; &lt;/a&gt;, or if that is null, &lt;a href=&quot;../../../java.base/java/lang/class#forName(java.lang.String)&quot;&gt; &lt;code&gt;Class.forName()&lt;/code&gt; &lt;/a&gt;. Then it creates an initial instance of that Class using &lt;a href=&quot;../../../java.base/java/lang/class#newInstance()&quot;&gt; &lt;code&gt;Class.newInstance()&lt;/code&gt; &lt;/a&gt;. If any checked exception is raised during this process (e.g. &lt;a href=&quot;../../../java.base/java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;../../../java.base/java/lang/instantiationexception&quot;&gt; &lt;code&gt;InstantiationException&lt;/code&gt; &lt;/a&gt;) the MBeanServerFactory will propagate this exception from within a RuntimeException.</target>
        </trans-unit>
        <trans-unit id="de35fdb0e7c1ca0e17cfea2574d03218ad8230ec" translate="yes" xml:space="preserve">
          <source>By default, if no value for that property is specified, an instance of &lt;a href=&quot;mbeanserverbuilder&quot;&gt;&lt;code&gt;javax.management.MBeanServerBuilder&lt;/code&gt;&lt;/a&gt; is created. Otherwise, the MBeanServerFactory attempts to load the specified class using &lt;a href=&quot;../../java/lang/thread#getContextClassLoader--&quot;&gt;&lt;code&gt;Thread.currentThread().getContextClassLoader()&lt;/code&gt;&lt;/a&gt;, or if that is null, &lt;a href=&quot;../../java/lang/class#forName-java.lang.String-&quot;&gt;&lt;code&gt;Class.forName()&lt;/code&gt;&lt;/a&gt;. Then it creates an initial instance of that Class using &lt;a href=&quot;../../java/lang/class#newInstance--&quot;&gt;&lt;code&gt;Class.newInstance()&lt;/code&gt;&lt;/a&gt;. If any checked exception is raised during this process (e.g. &lt;a href=&quot;../../java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../java/lang/instantiationexception&quot;&gt;&lt;code&gt;InstantiationException&lt;/code&gt;&lt;/a&gt;) the MBeanServerFactory will propagate this exception from within a RuntimeException.</source>
          <target state="translated">기본적으로 해당 특성에 대한 값이 지정되지 않으면 &lt;a href=&quot;mbeanserverbuilder&quot;&gt; &lt;code&gt;javax.management.MBeanServerBuilder&lt;/code&gt; &lt;/a&gt; 인스턴스 가 작성됩니다. 그렇지 않으면 MBeanServerFactory는 &lt;a href=&quot;../../java/lang/thread#getContextClassLoader--&quot;&gt; &lt;code&gt;Thread.currentThread().getContextClassLoader()&lt;/code&gt; &lt;/a&gt; 사용하여 지정된 클래스를로드하려고 시도 하거나 null 인 경우 &lt;a href=&quot;../../java/lang/class#forName-java.lang.String-&quot;&gt; &lt;code&gt;Class.forName()&lt;/code&gt; &lt;/a&gt; 입니다. 그런 다음 &lt;a href=&quot;../../java/lang/class#newInstance--&quot;&gt; &lt;code&gt;Class.newInstance()&lt;/code&gt; &lt;/a&gt; 사용하여 해당 클래스의 초기 인스턴스를 만듭니다 . 이 프로세스 중에 점검 된 예외가 발생하면 (예를 들어 &lt;a href=&quot;../../java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../java/lang/instantiationexception&quot;&gt; &lt;code&gt;InstantiationException&lt;/code&gt; &lt;/a&gt; ) MBeanServerFactory는 RuntimeException 내에서이 예외를 전파합니다.</target>
        </trans-unit>
        <trans-unit id="441e214632a2b7ac3e98f1c5c187c69d336a4e8a" translate="yes" xml:space="preserve">
          <source>By default, line numbering begins at 0. This number increments at every &lt;a href=&quot;#lt&quot;&gt;line terminator&lt;/a&gt; as the data is read, and can be changed with a call to &lt;code&gt;setLineNumber(int)&lt;/code&gt;. Note however, that &lt;code&gt;setLineNumber(int)&lt;/code&gt; does not actually change the current position in the stream; it only changes the value that will be returned by &lt;code&gt;getLineNumber()&lt;/code&gt;.</source>
          <target state="translated">기본적으로 줄 번호 매기기는 0에서 시작합니다.이 번호 는 데이터를 읽을 때 모든 &lt;a href=&quot;#lt&quot;&gt;줄 종결&lt;/a&gt; 자마다 증가하며 &lt;code&gt;setLineNumber(int)&lt;/code&gt; 호출하여 변경할 수 있습니다 . 그러나 &lt;code&gt;setLineNumber(int)&lt;/code&gt; 는 실제로 스트림의 현재 위치를 변경하지 않습니다. &lt;code&gt;getLineNumber()&lt;/code&gt; 의해 반환 될 값만 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="e653e7b3e71b81f241fb81c1fcb39651ef616085" translate="yes" xml:space="preserve">
          <source>By default, methods of this class will return a Component only if it is visible, displayable, enabled, and focusable. Subclasses can modify this behavior by overriding the &lt;code&gt;accept&lt;/code&gt; method.</source>
          <target state="translated">By default, methods of this class will return a Component only if it is visible, displayable, enabled, and focusable. Subclasses can modify this behavior by overriding the &lt;code&gt;accept&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="30c7035d6d55b6ac1754d7dce8a216b5a33f5df3" translate="yes" xml:space="preserve">
          <source>By default, methods of this class with return a Component only if it is visible, displayable, enabled, and focusable. Subclasses can modify this behavior by overriding the &lt;code&gt;accept&lt;/code&gt; method.</source>
          <target state="translated">By default, methods of this class with return a Component only if it is visible, displayable, enabled, and focusable. Subclasses can modify this behavior by overriding the &lt;code&gt;accept&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="8b4af578784f76f9cbc75bc182916b22c9e32802" translate="yes" xml:space="preserve">
          <source>By default, one InputContext instance is created per Window instance, and this input context is shared by all components within the window's container hierarchy. However, this means that only one text input operation is possible at any one time within a window, and that the text needs to be committed when moving the focus from one text component to another. If this is not desired, text components can create their own input context instances.</source>
          <target state="translated">By default, one InputContext instance is created per Window instance, and this input context is shared by all components within the window's container hierarchy. However, this means that only one text input operation is possible at any one time within a window, and that the text needs to be committed when moving the focus from one text component to another. If this is not desired, text components can create their own input context instances.</target>
        </trans-unit>
        <trans-unit id="38c4784bf68d273641e8db44ced23f218f38efbb" translate="yes" xml:space="preserve">
          <source>By default, only one &lt;code&gt;ResultSet&lt;/code&gt; object per &lt;code&gt;Statement&lt;/code&gt; object can be open at the same time. Therefore, if the reading of one &lt;code&gt;ResultSet&lt;/code&gt; object is interleaved with the reading of another, each must have been generated by different &lt;code&gt;Statement&lt;/code&gt; objects. All execution methods in the &lt;code&gt;Statement&lt;/code&gt; interface implicitly close a current &lt;code&gt;ResultSet&lt;/code&gt; object of the statement if an open one exists.</source>
          <target state="translated">By default, only one &lt;code&gt;ResultSet&lt;/code&gt; object per &lt;code&gt;Statement&lt;/code&gt; object can be open at the same time. Therefore, if the reading of one &lt;code&gt;ResultSet&lt;/code&gt; object is interleaved with the reading of another, each must have been generated by different &lt;code&gt;Statement&lt;/code&gt; objects. All execution methods in the &lt;code&gt;Statement&lt;/code&gt; interface implicitly close a current &lt;code&gt;ResultSet&lt;/code&gt; object of the statement if an open one exists.</target>
        </trans-unit>
        <trans-unit id="33bdae1c9910d8428afddd3de5da4494431698a5" translate="yes" xml:space="preserve">
          <source>By default, only the specified modules will be considered, without expansion of the module dependencies.</source>
          <target state="translated">기본적으로 모듈 종속성의 확장없이 지정된 모듈 만 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="88e8c46b5dbef26fcd6a7043fe41aa795d6f5154" translate="yes" xml:space="preserve">
          <source>By default, parsing is lenient: If the input is not in the form used by this object's format method but can still be parsed as a date, then the parse succeeds. Clients may insist on strict adherence to the format by calling &lt;a href=&quot;#setLenient(boolean)&quot;&gt;&lt;code&gt;setLenient(false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">By default, parsing is lenient: If the input is not in the form used by this object's format method but can still be parsed as a date, then the parse succeeds. Clients may insist on strict adherence to the format by calling &lt;a href=&quot;#setLenient(boolean)&quot;&gt; &lt;code&gt;setLenient(false)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ee8c13d9e88af773fee8d7f7f88a5902d8a19f11" translate="yes" xml:space="preserve">
          <source>By default, parsing is lenient: If the input is not in the form used by this object's format method but can still be parsed as a date, then the parse succeeds. Clients may insist on strict adherence to the format by calling &lt;a href=&quot;dateformat#setLenient-boolean-&quot;&gt;&lt;code&gt;setLenient(false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본적으로 구문 분석은 관대하지 않습니다. 입력이이 오브젝트의 형식 메소드에서 사용되는 형식이 아니지만 여전히 날짜로 구문 분석 할 수 있으면 구문 분석이 성공합니다. 클라이언트는 &lt;a href=&quot;dateformat#setLenient-boolean-&quot;&gt; &lt;code&gt;setLenient(false)&lt;/code&gt; &lt;/a&gt; 호출하여 형식을 엄격하게 준수 할 것을 요구할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f07053040a6a3d92a181bc414e928c8adaa8c58b" translate="yes" xml:space="preserve">
          <source>By default, reflection frames are hidden. A &lt;code&gt;StackWalker&lt;/code&gt; configured with this &lt;code&gt;SHOW_REFLECT_FRAMES&lt;/code&gt; option will show all reflection frames that include &lt;a href=&quot;reflect/method#invoke(java.lang.Object,java.lang.Object...)&quot;&gt;&lt;code&gt;Method.invoke(java.lang.Object, java.lang.Object...)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;reflect/constructor#newInstance(java.lang.Object...)&quot;&gt;&lt;code&gt;Constructor.newInstance(Object...)&lt;/code&gt;&lt;/a&gt; and their reflection implementation classes.</source>
          <target state="translated">By default, reflection frames are hidden. A &lt;code&gt;StackWalker&lt;/code&gt; configured with this &lt;code&gt;SHOW_REFLECT_FRAMES&lt;/code&gt; option will show all reflection frames that include &lt;a href=&quot;reflect/method#invoke(java.lang.Object,java.lang.Object...)&quot;&gt; &lt;code&gt;Method.invoke(java.lang.Object, java.lang.Object...)&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;reflect/constructor#newInstance(java.lang.Object...)&quot;&gt; &lt;code&gt;Constructor.newInstance(Object...)&lt;/code&gt; &lt;/a&gt; and their reflection implementation classes.</target>
        </trans-unit>
        <trans-unit id="4a7b729769c88f2e7559c7f4490ab35242123370" translate="yes" xml:space="preserve">
          <source>By default, responsibility for listening for changes to this property and indicating the drop location visually lies with the list's &lt;code&gt;ListUI&lt;/code&gt;, which may paint it directly and/or install a cell renderer to do so. Developers wishing to implement custom drop location painting and/or replace the default cell renderer, may need to honor this property.</source>
          <target state="translated">By default, responsibility for listening for changes to this property and indicating the drop location visually lies with the list's &lt;code&gt;ListUI&lt;/code&gt; , which may paint it directly and/or install a cell renderer to do so. Developers wishing to implement custom drop location painting and/or replace the default cell renderer, may need to honor this property.</target>
        </trans-unit>
        <trans-unit id="a48ab202c0f808f87f7ddce6d586689960eed91b" translate="yes" xml:space="preserve">
          <source>By default, rows are in unsorted order (the same as the model) and every column is sortable. The default &lt;code&gt;Comparator&lt;/code&gt;s are documented in the subclasses (for example, &lt;a href=&quot;table/tablerowsorter&quot;&gt;&lt;code&gt;TableRowSorter&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">By default, rows are in unsorted order (the same as the model) and every column is sortable. The default &lt;code&gt;Comparator&lt;/code&gt; s are documented in the subclasses (for example, &lt;a href=&quot;table/tablerowsorter&quot;&gt; &lt;code&gt;TableRowSorter&lt;/code&gt; &lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="4891c4b2e0ec6b4e0fd376e01b91a0f3e534a924" translate="yes" xml:space="preserve">
          <source>By default, symbolic links are not automatically followed by this method. If the &lt;code&gt;options&lt;/code&gt; parameter contains the &lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt;&lt;code&gt;FOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option then symbolic links are followed. When following links, and the attributes of the target cannot be read, then this method attempts to get the &lt;code&gt;BasicFileAttributes&lt;/code&gt; of the link.</source>
          <target state="translated">기본적으로 심볼릭 링크는이 방법을 자동으로 따르지 않습니다. &lt;code&gt;options&lt;/code&gt; 매개 변수에 &lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt; &lt;code&gt;FOLLOW_LINKS&lt;/code&gt; &lt;/a&gt; 옵션이 포함 된 경우 기호 링크가 이어집니다. 링크를 따라 가서 대상의 속성을 읽을 수없는 경우이 메소드 는 링크 의 &lt;code&gt;BasicFileAttributes&lt;/code&gt; 를 가져 오려고 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="f5ecda976163824d56ff183af9bc0a236da744e5" translate="yes" xml:space="preserve">
          <source>By default, symbolic links are not automatically followed by this method. If the &lt;code&gt;options&lt;/code&gt; parameter contains the &lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt;&lt;code&gt;FOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option then symbolic links are followed. When following links, and the attributes of the target cannot be read, then this method attempts to get the &lt;code&gt;BasicFileAttributes&lt;/code&gt; of the link. If they can be read then the &lt;code&gt;visitFile&lt;/code&gt; method is invoked with the attributes of the link (otherwise the &lt;code&gt;visitFileFailed&lt;/code&gt; method is invoked as specified above).</source>
          <target state="translated">기본적으로 심볼릭 링크는이 방법을 자동으로 따르지 않습니다. &lt;code&gt;options&lt;/code&gt; 매개 변수에 &lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt; &lt;code&gt;FOLLOW_LINKS&lt;/code&gt; &lt;/a&gt; 옵션이 포함 된 경우 기호 링크가 이어집니다. 링크를 따라 가서 대상의 속성을 읽을 수없는 경우이 메소드 는 링크 의 &lt;code&gt;BasicFileAttributes&lt;/code&gt; 를 가져 오려고 시도합니다 . 읽을 수있는 경우 &lt;code&gt;visitFile&lt;/code&gt; 메소드는 링크의 속성으로 호출됩니다 (그렇지 않으면 &lt;code&gt;visitFileFailed&lt;/code&gt; 메소드는 위에 지정된대로 호출 됨).</target>
        </trans-unit>
        <trans-unit id="de7746ea678173659f8ab4ca568433cdcb4da55b" translate="yes" xml:space="preserve">
          <source>By default, text related document mutation methods such as &lt;code&gt;insertString&lt;/code&gt;, &lt;code&gt;replace&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt; in &lt;code&gt;AbstractDocument&lt;/code&gt; use &lt;code&gt;DocumentFilter&lt;/code&gt; when available, and &lt;code&gt;Element&lt;/code&gt; related mutation methods such as &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;insert&lt;/code&gt; and &lt;code&gt;removeElement&lt;/code&gt; in &lt;code&gt;DefaultStyledDocument&lt;/code&gt; do not use &lt;code&gt;DocumentFilter&lt;/code&gt;. If a method doesn't follow these defaults, this must be explicitly stated in the method documentation.</source>
          <target state="translated">By default, text related document mutation methods such as &lt;code&gt;insertString&lt;/code&gt; , &lt;code&gt;replace&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt; in &lt;code&gt;AbstractDocument&lt;/code&gt; use &lt;code&gt;DocumentFilter&lt;/code&gt; when available, and &lt;code&gt;Element&lt;/code&gt; related mutation methods such as &lt;code&gt;create&lt;/code&gt; , &lt;code&gt;insert&lt;/code&gt; and &lt;code&gt;removeElement&lt;/code&gt; in &lt;code&gt;DefaultStyledDocument&lt;/code&gt; do not use &lt;code&gt;DocumentFilter&lt;/code&gt; . If a method doesn't follow these defaults, this must be explicitly stated in the method documentation.</target>
        </trans-unit>
        <trans-unit id="3f4da79531fc482d6768d4600f0bf2f4a5b55e2d" translate="yes" xml:space="preserve">
          <source>By default, the JDK's data model is &lt;a href=&quot;../../../org/w3c/dom/document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">By default, the JDK's data model is &lt;a href=&quot;../../../org/w3c/dom/document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="00da2bb1075b395d1b8f73951c29e84537007ed6" translate="yes" xml:space="preserve">
          <source>By default, the action command is set to the label of the menu item.</source>
          <target state="translated">By default, the action command is set to the label of the menu item.</target>
        </trans-unit>
        <trans-unit id="b38dd018ae64120a5aa839c3fcbbfbb6f76b01f9" translate="yes" xml:space="preserve">
          <source>By default, the copy fails if the target file already exists or is a symbolic link. If the &lt;a href=&quot;standardcopyoption#REPLACE_EXISTING&quot;&gt;&lt;code&gt;REPLACE_EXISTING&lt;/code&gt;&lt;/a&gt; option is specified, and the target file already exists, then it is replaced if it is not a non-empty directory. If the target file exists and is a symbolic link, then the symbolic link is replaced. In this release, the &lt;code&gt;REPLACE_EXISTING&lt;/code&gt; option is the only option required to be supported by this method. Additional options may be supported in future releases.</source>
          <target state="translated">기본적으로 대상 파일이 이미 존재하거나 기호 링크 인 경우 복사에 실패합니다. 는 IF &lt;a href=&quot;standardcopyoption#REPLACE_EXISTING&quot;&gt; &lt;code&gt;REPLACE_EXISTING&lt;/code&gt; 의&lt;/a&gt; 옵션을 지정하고 대상 파일이 이미 존재할은 비어 있지 않은 디렉토리가 아닌 경우, 그것은 대체됩니다. 대상 파일이 존재하고 심볼릭 링크 인 경우 심볼릭 링크가 바뀝니다. 이 릴리스에서 &lt;code&gt;REPLACE_EXISTING&lt;/code&gt; 옵션은이 메소드에서 지원하는 데 필요한 유일한 옵션입니다. 향후 릴리스에서 추가 옵션이 지원 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee0b25fde79412bc21b6712f213ca81453332871" translate="yes" xml:space="preserve">
          <source>By default, the created process does not have its own terminal or console. All its standard I/O (i.e. stdin, stdout, stderr) operations will be redirected to the parent process, where they can be accessed via the streams obtained using the methods &lt;a href=&quot;#getOutputStream()&quot;&gt;&lt;code&gt;getOutputStream()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getInputStream()&quot;&gt;&lt;code&gt;getInputStream()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#getErrorStream()&quot;&gt;&lt;code&gt;getErrorStream()&lt;/code&gt;&lt;/a&gt;. The parent process uses these streams to feed input to and get output from the process. Because some native platforms only provide limited buffer size for standard input and output streams, failure to promptly write the input stream or read the output stream of the process may cause the process to block, or even deadlock.</source>
          <target state="translated">By default, the created process does not have its own terminal or console. All its standard I/O (i.e. stdin, stdout, stderr) operations will be redirected to the parent process, where they can be accessed via the streams obtained using the methods &lt;a href=&quot;#getOutputStream()&quot;&gt; &lt;code&gt;getOutputStream()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#getInputStream()&quot;&gt; &lt;code&gt;getInputStream()&lt;/code&gt; &lt;/a&gt;, and &lt;a href=&quot;#getErrorStream()&quot;&gt; &lt;code&gt;getErrorStream()&lt;/code&gt; &lt;/a&gt;. The parent process uses these streams to feed input to and get output from the process. Because some native platforms only provide limited buffer size for standard input and output streams, failure to promptly write the input stream or read the output stream of the process may cause the process to block, or even deadlock.</target>
        </trans-unit>
        <trans-unit id="050bea95ee24a9fb1d4a366ba21a756da1436075" translate="yes" xml:space="preserve">
          <source>By default, the created subprocess does not have its own terminal or console. All its standard I/O (i.e. stdin, stdout, stderr) operations will be redirected to the parent process, where they can be accessed via the streams obtained using the methods &lt;a href=&quot;process#getOutputStream--&quot;&gt;&lt;code&gt;getOutputStream()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;process#getInputStream--&quot;&gt;&lt;code&gt;getInputStream()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;process#getErrorStream--&quot;&gt;&lt;code&gt;getErrorStream()&lt;/code&gt;&lt;/a&gt;. The parent process uses these streams to feed input to and get output from the subprocess. Because some native platforms only provide limited buffer size for standard input and output streams, failure to promptly write the input stream or read the output stream of the subprocess may cause the subprocess to block, or even deadlock.</source>
          <target state="translated">기본적으로 작성된 서브 프로세스에는 자체 터미널 또는 콘솔이 없습니다. 모든 표준 I / O (예 : stdin, stdout, stderr) 조작은 상위 프로세스로 경로 재 지정되며 &lt;a href=&quot;process#getOutputStream--&quot;&gt; &lt;code&gt;getOutputStream()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;process#getInputStream--&quot;&gt; &lt;code&gt;getInputStream()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;process#getErrorStream--&quot;&gt; &lt;code&gt;getErrorStream()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 확보 한 스트림을 통해 액세스 할 수 있습니다 . 상위 프로세스는이 스트림을 사용하여 서브 프로세스에 입력을 제공하고 서브 프로세스에서 출력을 가져옵니다. 일부 기본 플랫폼은 표준 입력 및 출력 스트림에 대해 제한된 버퍼 크기 만 제공하기 때문에 입력 스트림을 즉시 쓰거나 서브 프로세스의 출력 스트림을 읽지 못하면 서브 프로세스가 차단되거나 교착 상태가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5397b71637c8e996e16ce34f5348a09cbd9140be" translate="yes" xml:space="preserve">
          <source>By default, the event class associated with this event factory is registered when the event factory is created, unless the event has the &lt;a href=&quot;registered&quot;&gt;&lt;code&gt;Registered&lt;/code&gt;&lt;/a&gt; annotation.</source>
          <target state="translated">기본적으로이 이벤트 팩토리와 연관된 이벤트 클래스는 이벤트에 &lt;a href=&quot;registered&quot;&gt; &lt;code&gt;Registered&lt;/code&gt; &lt;/a&gt; 어노테이션 이없는 경우 이벤트 팩토리가 작성 될 때 등록 됩니다.</target>
        </trans-unit>
        <trans-unit id="315f07a0d45b903705122dccf37fa7770c2f731f" translate="yes" xml:space="preserve">
          <source>By default, the event is enabled. The event can be enabled or disabled by setting the enabled setting to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, programmatically or by using a configuration file. The event can also be disabled by annotating event with the &lt;code&gt;@Enabled(false)&lt;/code&gt; annotation.</source>
          <target state="translated">기본적으로 이벤트가 활성화됩니다. 활성화 된 설정을 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 로 설정 하거나 프로그래밍 방식으로 또는 구성 파일을 사용하여 이벤트를 활성화하거나 비활성화 할 수 있습니다 . &lt;code&gt;@Enabled(false)&lt;/code&gt; 어노테이션으로 이벤트에 어노테이션을 작성하여 이벤트를 비활성화 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3ffd3523cb33739e93aee7676fc8f431e7d5fd9e" translate="yes" xml:space="preserve">
          <source>By default, the first item added to the choice menu becomes the selected item, until a different selection is made by the user by calling one of the &lt;code&gt;select&lt;/code&gt; methods.</source>
          <target state="translated">By default, the first item added to the choice menu becomes the selected item, until a different selection is made by the user by calling one of the &lt;code&gt;select&lt;/code&gt; methods.</target>
        </trans-unit>
        <trans-unit id="8c18c3fa98f8f171e7b2371c17c5ad19813a095b" translate="yes" xml:space="preserve">
          <source>By default, the following types of content are known:</source>
          <target state="translated">By default, the following types of content are known:</target>
        </trans-unit>
        <trans-unit id="61e56b533d51dce25cef44303d4c38e0f7fd2a96" translate="yes" xml:space="preserve">
          <source>By default, the method is invoked using dynamic lookup as documented in section 15.12.4.4 of</source>
          <target state="translated">기본적으로이 메서드는의 섹션 15.12.4.4에 설명 된대로 동적 조회를 사용하여 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a4360a09560e0c1b8f6ff52d461d84a7389b41f7" translate="yes" xml:space="preserve">
          <source>By default, the name is the same as the recording ID.</source>
          <target state="translated">기본적으로 이름은 녹화 ID와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="59dbc1b830381e6069428b989946dc8b88e861e8" translate="yes" xml:space="preserve">
          <source>By default, the notification dispatch model is synchronous. That is, when a thread calls sendNotification, the &lt;code&gt;NotificationListener.handleNotification&lt;/code&gt; method of each listener is called within that thread. You can override this default by overriding &lt;code&gt;handleNotification&lt;/code&gt; in a subclass, or by passing an Executor to the constructor.</source>
          <target state="translated">기본적으로 알림 발송 모델은 동기식입니다. 즉, 스레드가 sendNotification을 호출하면 해당 스레드 내에서 각 리스너 의 &lt;code&gt;NotificationListener.handleNotification&lt;/code&gt; 메소드가 호출됩니다. 서브 클래스에서 &lt;code&gt;handleNotification&lt;/code&gt; 을 대체 하거나 Executor를 생성자에 전달 하여이 기본값을 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b3d90f9725e8d3c6f514b963c9c9e67c904f0a37" translate="yes" xml:space="preserve">
          <source>By default, the object is</source>
          <target state="translated">기본적으로 개체는</target>
        </trans-unit>
        <trans-unit id="81a893fd2e730751fac18b1115ff6ce072a204a3" translate="yes" xml:space="preserve">
          <source>By default, the packer does not change the order of JAR elements. Also, the modification time and deflation hint of each JAR element is passed unchanged. (Any other ZIP-archive information, such as extra attributes giving Unix file permissions, are lost.)</source>
          <target state="translated">기본적으로 패커는 JAR 요소의 순서를 변경하지 않습니다. 또한 각 JAR 요소의 수정 시간 및 수축 힌트는 변경되지 않은 채 전달됩니다. (유닉스 파일 사용 권한을 부여하는 추가 속성과 같은 다른 ZIP 보관 정보는 손실됩니다.)</target>
        </trans-unit>
        <trans-unit id="e21f048ae6986e907c4aa76d8adf4e77ba56e38c" translate="yes" xml:space="preserve">
          <source>By default, the reference implementations of the &lt;code&gt;RowSet&lt;/code&gt; synchronization providers are always available to the Java platform. If no other pluggable synchronization providers have been correctly registered, the &lt;code&gt;SyncFactory&lt;/code&gt; will automatically generate an instance of the default &lt;code&gt;SyncProvider&lt;/code&gt; reference implementation. Thus, in the preceding code fragment, if no implementation named &lt;code&gt;com.fred.providers.HighAvailabilitySyncProvider&lt;/code&gt; has been registered with the &lt;code&gt;SyncFactory&lt;/code&gt; instance,</source>
          <target state="translated">By default, the reference implementations of the &lt;code&gt;RowSet&lt;/code&gt; synchronization providers are always available to the Java platform. If no other pluggable synchronization providers have been correctly registered, the &lt;code&gt;SyncFactory&lt;/code&gt; will automatically generate an instance of the default &lt;code&gt;SyncProvider&lt;/code&gt; reference implementation. Thus, in the preceding code fragment, if no implementation named &lt;code&gt;com.fred.providers.HighAvailabilitySyncProvider&lt;/code&gt; has been registered with the &lt;code&gt;SyncFactory&lt;/code&gt; instance,</target>
        </trans-unit>
        <trans-unit id="c0d0e46f3bbc29b23f3b29267fe3a951e1240927" translate="yes" xml:space="preserve">
          <source>By default, the regular expressions &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; ignore line terminators and only match at the beginning and the end, respectively, of the entire input sequence. If &lt;a href=&quot;#MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode is activated then &lt;code&gt;^&lt;/code&gt; matches at the beginning of input and after any line terminator except at the end of input. When in &lt;a href=&quot;#MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode &lt;code&gt;$&lt;/code&gt; matches just before a line terminator or the end of the input sequence.</source>
          <target state="translated">By default, the regular expressions &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; ignore line terminators and only match at the beginning and the end, respectively, of the entire input sequence. If &lt;a href=&quot;#MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt; mode is activated then &lt;code&gt;^&lt;/code&gt; matches at the beginning of input and after any line terminator except at the end of input. When in &lt;a href=&quot;#MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt; mode &lt;code&gt;$&lt;/code&gt; matches just before a line terminator or the end of the input sequence.</target>
        </trans-unit>
        <trans-unit id="e8b8d9caa0eb4682131005710da0d0cd554ca431" translate="yes" xml:space="preserve">
          <source>By default, the regular expressions &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; ignore line terminators and only match at the beginning and the end, respectively, of the entire input sequence. If &lt;a href=&quot;pattern#MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode is activated then &lt;code&gt;^&lt;/code&gt; matches at the beginning of input and after any line terminator except at the end of input. When in &lt;a href=&quot;pattern#MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode &lt;code&gt;$&lt;/code&gt; matches just before a line terminator or the end of the input sequence.</source>
          <target state="translated">기본적으로 정규식 &lt;code&gt;^&lt;/code&gt; 및 &lt;code&gt;$&lt;/code&gt; 는 줄 종결자를 무시하고 전체 입력 시퀀스의 시작과 끝에서만 각각 일치합니다. &lt;a href=&quot;pattern#MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt; 모드가 활성화 된 경우 입력 시작시와 입력 끝을 제외한 모든 라인 터미네이터 후에 &lt;code&gt;^&lt;/code&gt; 가 일치합니다. 경우에 &lt;a href=&quot;pattern#MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt; 모드 &lt;code&gt;$&lt;/code&gt; 은 단지 줄 끝 또는 입력 순서가 끝나기 전에 일치합니다.</target>
        </trans-unit>
        <trans-unit id="271e2c960aa30fee2d11e703de9a1a311eccc2b5" translate="yes" xml:space="preserve">
          <source>By default, the same &lt;code&gt;RecordedEvent&lt;/code&gt; object can be used to represent two or more distinct events. That object can be delivered multiple times to the same action as well as to other actions. To use an event object after the action is completed, the &lt;a href=&quot;#setReuse(boolean)&quot;&gt;&lt;code&gt;setReuse(boolean)&lt;/code&gt;&lt;/a&gt; method should be set to &lt;code&gt;false&lt;/code&gt; so a new object is allocated for each event.</source>
          <target state="translated">기본적으로 동일한 &lt;code&gt;RecordedEvent&lt;/code&gt; 객체를 사용하여 둘 이상의 개별 이벤트를 나타낼 수 있습니다. 해당 개체는 동일한 작업과 다른 작업에 여러 번 전달 될 수 있습니다. 액션이 완료된 후 이벤트 객체를 사용하려면 &lt;a href=&quot;#setReuse(boolean)&quot;&gt; &lt;code&gt;setReuse(boolean)&lt;/code&gt; &lt;/a&gt; 메서드를 &lt;code&gt;false&lt;/code&gt; 로 설정하여 각 이벤트에 대해 새 객체를 할당해야합니다.</target>
        </trans-unit>
        <trans-unit id="196f0008550dd18d2cfb3b6d9538596a08fcbb27" translate="yes" xml:space="preserve">
          <source>By default, the stream starts with the first event in the file.</source>
          <target state="translated">기본적으로 스트림은 파일의 첫 번째 이벤트로 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="5554b4a161c57a6ae83f9ae3f4282f2d36ce53f5" translate="yes" xml:space="preserve">
          <source>By default, the stream starts with the next event flushed by Flight Recorder.</source>
          <target state="translated">기본적으로 스트림은 Flight Recorder에 의해 플러시 된 다음 이벤트로 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="aacc2d0ec62a261eb5e65054ed7f2f13aa7b39ea" translate="yes" xml:space="preserve">
          <source>By default, the unit is nanoseconds.</source>
          <target state="translated">기본적으로 단위는 나노초입니다.</target>
        </trans-unit>
        <trans-unit id="5e45e565e014b2bc7dd1de77293476089c389959" translate="yes" xml:space="preserve">
          <source>By default, the value of this property is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">By default, the value of this property is &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="969c949ca22a9a75f10ee2dc67b0dc1dfadf07d1" translate="yes" xml:space="preserve">
          <source>By default, the value returned is one of those passed to the constructor and/or manipulated using the add/replace/remove methods. A subclass may override this to retrieve the value dynamically from the directory.</source>
          <target state="translated">기본적으로 리턴 된 값은 생성자에 전달되거나 add / replace / remove 메소드를 사용하여 조작 된 값 중 하나입니다. 서브 클래스는 디렉토리에서 값을 동적으로 검색하기 위해이를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b064beb56831362f5899bf74e0e30464f6351f85" translate="yes" xml:space="preserve">
          <source>By default, the values returned are those passed to the constructor and/or manipulated using the add/replace/remove methods. A subclass may override this to retrieve the values dynamically from the directory.</source>
          <target state="translated">기본적으로 리턴 된 값은 생성자에 전달되거나 add / replace / remove 메소드를 사용하여 조작 된 값입니다. 서브 클래스는 디렉토리에서 값을 동적으로 검색하기 위해이를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45a41dd1f337e38266c098ed7711bbc93ae83eda" translate="yes" xml:space="preserve">
          <source>By default, the window has &lt;code&gt;autoRequestFocus&lt;/code&gt; value of &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">By default, the window has &lt;code&gt;autoRequestFocus&lt;/code&gt; value of &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcf8ae0bdac444a576744da3029f02fdd6d59db2" translate="yes" xml:space="preserve">
          <source>By default, this method attempts to move the file to the target file, failing if the target file exists except if the source and target are the &lt;a href=&quot;#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt;&lt;code&gt;same&lt;/code&gt;&lt;/a&gt; file, in which case this method has no effect. If the file is a symbolic link then the symbolic link itself, not the target of the link, is moved. This method may be invoked to move an empty directory. In some implementations a directory has entries for special files or links that are created when the directory is created. In such implementations a directory is considered empty when only the special entries exist. When invoked to move a directory that is not empty then the directory is moved if it does not require moving the entries in the directory. For example, renaming a directory on the same &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; will usually not require moving the entries in the directory. When moving a directory requires that its entries be moved then this method fails (by throwing an &lt;code&gt;
 IOException&lt;/code&gt;). To move a</source>
          <target state="translated">By default, this method attempts to move the file to the target file, failing if the target file exists except if the source and target are the &lt;a href=&quot;#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt; &lt;code&gt;same&lt;/code&gt; &lt;/a&gt; file, in which case this method has no effect. If the file is a symbolic link then the symbolic link itself, not the target of the link, is moved. This method may be invoked to move an empty directory. In some implementations a directory has entries for special files or links that are created when the directory is created. In such implementations a directory is considered empty when only the special entries exist. When invoked to move a directory that is not empty then the directory is moved if it does not require moving the entries in the directory. For example, renaming a directory on the same &lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt; will usually not require moving the entries in the directory. When moving a directory requires that its entries be moved then this method fails (by throwing an &lt;code&gt; IOException&lt;/code&gt; ). To move a</target>
        </trans-unit>
        <trans-unit id="a3fe532732fa319b66dbf2a5f32414b371c52d9c" translate="yes" xml:space="preserve">
          <source>By default, this method attempts to move the file to the target file, failing if the target file exists except if the source and target are the &lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt;&lt;code&gt;same&lt;/code&gt;&lt;/a&gt; file, in which case this method has no effect. If the file is a symbolic link then the symbolic link itself, not the target of the link, is moved. This method may be invoked to move an empty directory. In some implementations a directory has entries for special files or links that are created when the directory is created. In such implementations a directory is considered empty when only the special entries exist. When invoked to move a directory that is not empty then the directory is moved if it does not require moving the entries in the directory. For example, renaming a directory on the same &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; will usually not require moving the entries in the directory. When moving a directory requires that its entries be moved then this method fails (by throwing an &lt;code&gt;IOException&lt;/code&gt;). To move a</source>
          <target state="translated">기본적으로이 메소드는 파일을 대상 파일로 이동하려고 시도하며 소스와 대상이 &lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt; &lt;code&gt;same&lt;/code&gt; &lt;/a&gt; 파일 인 경우를 제외하고 대상 파일이 존재하는 경우 실패합니다. 이 경우이 방법은 효과가 없습니다. 파일이 심볼릭 링크 인 경우 링크 대상이 아닌 심볼릭 링크 자체가 이동됩니다. 이 메소드는 빈 디렉토리를 이동시키기 위해 호출 될 수 있습니다. 일부 구현에서 디렉토리에는 디렉토리 작성시 작성되는 특수 파일 또는 링크에 대한 항목이 있습니다. 이러한 구현에서 특수 항목 만 존재할 경우 디렉토리는 비어있는 것으로 간주됩니다. 비어 있지 않은 디렉토리를 이동하기 위해 호출되면 디렉토리의 항목을 이동할 필요가없는 경우 디렉토리가 이동됩니다. 예를 들어, 동일한 &lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt; 에서 디렉토리 이름 바꾸기일반적으로 디렉토리에서 항목을 이동할 필요가 없습니다. 디렉토리를 이동할 때 항목을 이동해야하는 경우이 메소드는 실패합니다 ( &lt;code&gt;IOException&lt;/code&gt; 발생 ). 이동하려면</target>
        </trans-unit>
        <trans-unit id="fcf7f057323c895d100758b111ffc96f29bafdb4" translate="yes" xml:space="preserve">
          <source>By default, this method calls &lt;a href=&quot;#getLogger(java.lang.String,java.lang.Module)&quot;&gt;&lt;code&gt;this.getLogger(name, module)&lt;/code&gt;&lt;/a&gt; to obtain a logger, then wraps that logger in a &lt;a href=&quot;system.logger&quot;&gt;&lt;code&gt;System.Logger&lt;/code&gt;&lt;/a&gt; instance where all methods that do not take a &lt;a href=&quot;../util/resourcebundle&quot;&gt;&lt;code&gt;ResourceBundle&lt;/code&gt;&lt;/a&gt; as parameter are redirected to one which does - passing the given &lt;code&gt;bundle&lt;/code&gt; for localization. So for instance, a call to &lt;a href=&quot;system.logger#log(java.lang.System.Logger.Level,java.lang.Object)&quot;&gt;&lt;code&gt;Logger.log(Level.INFO, msg)&lt;/code&gt;&lt;/a&gt; will end up as a call to &lt;a href=&quot;system.logger#log(java.lang.System.Logger.Level,java.util.ResourceBundle,java.lang.String,java.lang.Object...)&quot;&gt;&lt;code&gt;Logger.log(Level.INFO, bundle, msg, (Object[])null)&lt;/code&gt;&lt;/a&gt; on the wrapped logger instance. Note however that by default, string messages returned by &lt;a href=&quot;../util/function/supplier&quot;&gt;&lt;code&gt;Supplier&amp;lt;String&amp;gt;&lt;/code&gt;&lt;/a&gt; will not be localized, as it is assumed that such strings are messages which are already constructed, rather than keys in a resource bundle.</source>
          <target state="translated">기본적으로이 메서드는 &lt;a href=&quot;#getLogger(java.lang.String,java.lang.Module)&quot;&gt; &lt;code&gt;this.getLogger(name, module)&lt;/code&gt; &lt;/a&gt; 를 호출 하여 로거를 가져온 다음 &lt;a href=&quot;../util/resourcebundle&quot;&gt; &lt;code&gt;ResourceBundle&lt;/code&gt; &lt;/a&gt; 을 매개 변수로 사용 하지 않는 모든 메서드 가 지정된 매개 변수로 리디렉션 되는 &lt;a href=&quot;system.logger&quot;&gt; &lt;code&gt;System.Logger&lt;/code&gt; &lt;/a&gt; 인스턴스에서 해당 로거를 래핑합니다. 현지화를위한 &lt;code&gt;bundle&lt;/code&gt; . 예를 들어 &lt;a href=&quot;system.logger#log(java.lang.System.Logger.Level,java.lang.Object)&quot;&gt; &lt;code&gt;Logger.log(Level.INFO, msg)&lt;/code&gt; &lt;/a&gt; 대한 호출 은 래핑 된 로거 인스턴스 에서 &lt;a href=&quot;system.logger#log(java.lang.System.Logger.Level,java.util.ResourceBundle,java.lang.String,java.lang.Object...)&quot;&gt; &lt;code&gt;Logger.log(Level.INFO, bundle, msg, (Object[])null)&lt;/code&gt; &lt;/a&gt; 에 대한 호출로 끝납니다 . 그러나 기본적으로 &lt;a href=&quot;../util/function/supplier&quot;&gt; &lt;code&gt;Supplier&amp;lt;String&amp;gt;&lt;/code&gt; &lt;/a&gt; 반환하는 문자열 메시지는 현지화되지 않습니다. 이러한 문자열은 리소스 번들의 키가 아니라 이미 구성된 메시지라고 가정하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="463c10630ca3d799cc87c8be9afd93102464ffe1" translate="yes" xml:space="preserve">
          <source>By default, this method calls &lt;a href=&quot;#getLogger(java.lang.String,java.lang.Module)&quot;&gt;&lt;code&gt;this.getLogger(name, module)&lt;/code&gt;&lt;/a&gt; to obtain a logger, then wraps that logger in a &lt;a href=&quot;system.logger&quot;&gt;&lt;code&gt;System.Logger&lt;/code&gt;&lt;/a&gt; instance where all methods that do not take a &lt;a href=&quot;../util/resourcebundle&quot;&gt;&lt;code&gt;ResourceBundle&lt;/code&gt;&lt;/a&gt; as parameter are redirected to one which does - passing the given &lt;code&gt;bundle&lt;/code&gt; for localization. So for instance, a call to &lt;a href=&quot;system.logger#log(java.lang.System.Logger.Level,java.lang.String)&quot;&gt;&lt;code&gt;Logger.log(Level.INFO, msg)&lt;/code&gt;&lt;/a&gt; will end up as a call to &lt;a href=&quot;system.logger#log(java.lang.System.Logger.Level,java.util.ResourceBundle,java.lang.String,java.lang.Object...)&quot;&gt;&lt;code&gt;Logger.log(Level.INFO, bundle, msg, (Object[])null)&lt;/code&gt;&lt;/a&gt; on the wrapped logger instance. Note however that by default, string messages returned by &lt;a href=&quot;../util/function/supplier&quot;&gt;&lt;code&gt;Supplier&amp;lt;String&amp;gt;&lt;/code&gt;&lt;/a&gt; will not be localized, as it is assumed that such strings are messages which are already constructed, rather than keys in a resource bundle.</source>
          <target state="translated">By default, this method calls &lt;a href=&quot;#getLogger(java.lang.String,java.lang.Module)&quot;&gt; &lt;code&gt;this.getLogger(name, module)&lt;/code&gt; &lt;/a&gt; to obtain a logger, then wraps that logger in a &lt;a href=&quot;system.logger&quot;&gt; &lt;code&gt;System.Logger&lt;/code&gt; &lt;/a&gt; instance where all methods that do not take a &lt;a href=&quot;../util/resourcebundle&quot;&gt; &lt;code&gt;ResourceBundle&lt;/code&gt; &lt;/a&gt; as parameter are redirected to one which does - passing the given &lt;code&gt;bundle&lt;/code&gt; for localization. So for instance, a call to &lt;a href=&quot;system.logger#log(java.lang.System.Logger.Level,java.lang.String)&quot;&gt; &lt;code&gt;Logger.log(Level.INFO, msg)&lt;/code&gt; &lt;/a&gt; will end up as a call to &lt;a href=&quot;system.logger#log(java.lang.System.Logger.Level,java.util.ResourceBundle,java.lang.String,java.lang.Object...)&quot;&gt; &lt;code&gt;Logger.log(Level.INFO, bundle, msg, (Object[])null)&lt;/code&gt; &lt;/a&gt; on the wrapped logger instance. Note however that by default, string messages returned by &lt;a href=&quot;../util/function/supplier&quot;&gt; &lt;code&gt;Supplier&amp;lt;String&amp;gt;&lt;/code&gt; &lt;/a&gt; will not be localized, as it is assumed that such strings are messages which are already constructed, rather than keys in a resource bundle.</target>
        </trans-unit>
        <trans-unit id="a392b65b45ef25753acc62e03de22a05bd840a9a" translate="yes" xml:space="preserve">
          <source>By default, this method returns &lt;code&gt;Event.CTRL_MASK&lt;/code&gt;. Toolkit implementations should override this method if the &lt;b&gt;Control&lt;/b&gt; key isn't the correct key for accelerators.</source>
          <target state="translated">By default, this method returns &lt;code&gt;Event.CTRL_MASK&lt;/code&gt; . Toolkit implementations should override this method if the &lt;b&gt;Control&lt;/b&gt; key isn't the correct key for accelerators.</target>
        </trans-unit>
        <trans-unit id="0192e953197d5e1fab701b902ea51266a4ba7e27" translate="yes" xml:space="preserve">
          <source>By default, this method returns &lt;code&gt;InputEvent.CTRL_DOWN_MASK&lt;/code&gt;. Toolkit implementations should override this method if the &lt;b&gt;Control&lt;/b&gt; key isn't the correct key for accelerators.</source>
          <target state="translated">By default, this method returns &lt;code&gt;InputEvent.CTRL_DOWN_MASK&lt;/code&gt; . Toolkit implementations should override this method if the &lt;b&gt;Control&lt;/b&gt; key isn't the correct key for accelerators.</target>
        </trans-unit>
        <trans-unit id="c410259de22ac2b29f5639bf12152d20b70225c1" translate="yes" xml:space="preserve">
          <source>By default, this method returns &lt;code&gt;null&lt;/code&gt; if the wrapped implementation is not &lt;var&gt;this&lt;/var&gt;. Indeed, if the wrapped implementation is not this object itself, it will not be possible to recreate a wrapped implementation by calling the implementation constructors through &lt;code&gt;MBeanServer.createMBean(...)&lt;/code&gt;.</source>
          <target state="translated">랩 된 구현이 &lt;var&gt;this&lt;/var&gt; 가 아닌 경우 ,이 메소드는 디폴트로 &lt;code&gt;null&lt;/code&gt; 를 돌려 줍니다 . 실제로, 랩핑 된 구현이이 객체 자체가 아닌 경우 &lt;code&gt;MBeanServer.createMBean(...)&lt;/code&gt; 통해 구현 생성자를 호출하여 랩핑 된 구현을 다시 작성할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="f0752364702b1c2f5b9430bf21b89be5786307cb" translate="yes" xml:space="preserve">
          <source>By default, this property is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기본적으로이 속성은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c3b224cf7206c2172a06bf23936efdbbafe645f2" translate="yes" xml:space="preserve">
          <source>By default, when a security manager is installed, in order to protect against DNS spoofing attacks, the result of positive host name resolutions are cached forever. When a security manager is not installed, the default behavior is to cache entries for a finite (implementation dependent) period of time. The result of unsuccessful host name resolution is cached for a very short period of time (10 seconds) to improve performance.</source>
          <target state="translated">기본적으로 보안 관리자가 설치되면 DNS 스푸핑 공격으로부터 보호하기 위해 호스트 이름 확인 결과가 영구적으로 캐시됩니다. 보안 관리자가 설치되지 않은 경우 기본 동작은 유한 한 (구현 종속) 기간 동안 항목을 캐시하는 것입니다. 실패한 호스트 이름 확인 결과는 성능을 향상시키기 위해 매우 짧은 기간 (10 초) 동안 캐시됩니다.</target>
        </trans-unit>
        <trans-unit id="b8e27dab4e5a726a826d4aba7196937857697700" translate="yes" xml:space="preserve">
          <source>By default, when the transfer is accepted, the chosen drop action is that picked by the user via their drag gesture. The developer can override this and choose a different action, from the supported source actions, by calling &lt;code&gt;setDropAction&lt;/code&gt; on the &lt;code&gt;TransferSupport&lt;/code&gt;.</source>
          <target state="translated">By default, when the transfer is accepted, the chosen drop action is that picked by the user via their drag gesture. The developer can override this and choose a different action, from the supported source actions, by calling &lt;code&gt;setDropAction&lt;/code&gt; on the &lt;code&gt;TransferSupport&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76198e6027dbde4f564cb09bcfc2e32a06a974f3" translate="yes" xml:space="preserve">
          <source>By defining simple arithmetic operations on &lt;code&gt;Spring&lt;/code&gt;s, the behavior of a collection of &lt;code&gt;Spring&lt;/code&gt;s can be reduced to that of an ordinary (non-compound) &lt;code&gt;Spring&lt;/code&gt;. We define the &quot;+&quot;, &quot;-&quot;, &lt;em&gt;max&lt;/em&gt;, and &lt;em&gt;min&lt;/em&gt; operators on &lt;code&gt;Spring&lt;/code&gt;s so that, in each case, the result is a &lt;code&gt;Spring&lt;/code&gt; whose characteristics bear a useful mathematical relationship to its constituent springs.</source>
          <target state="translated">By defining simple arithmetic operations on &lt;code&gt;Spring&lt;/code&gt; s, the behavior of a collection of &lt;code&gt;Spring&lt;/code&gt; s can be reduced to that of an ordinary (non-compound) &lt;code&gt;Spring&lt;/code&gt; . We define the &quot;+&quot;, &quot;-&quot;, &lt;em&gt;max&lt;/em&gt;, and &lt;em&gt;min&lt;/em&gt; operators on &lt;code&gt;Spring&lt;/code&gt; s so that, in each case, the result is a &lt;code&gt;Spring&lt;/code&gt; whose characteristics bear a useful mathematical relationship to its constituent springs.</target>
        </trans-unit>
        <trans-unit id="fb71b572b27f526299d9dd2b567ec72b03d87142" translate="yes" xml:space="preserve">
          <source>By design, as you parse through a string with different formats, you can use the same &lt;code&gt;ParsePosition&lt;/code&gt;, since the index parameter records the current position.</source>
          <target state="translated">의도적으로 다른 형식의 문자열을 구문 분석 할 때 index 매개 변수가 현재 위치를 기록하므로 동일한 &lt;code&gt;ParsePosition&lt;/code&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1d691c8b37aef7e963e6a00cea0dc3c23a425203" translate="yes" xml:space="preserve">
          <source>By executing a synchronized instance method of that object.</source>
          <target state="translated">해당 객체의 동기화 된 인스턴스 메소드를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="e35cf134af9b728d47d4c7fc6d705b81a385f8a6" translate="yes" xml:space="preserve">
          <source>By executing an &lt;code&gt;ldc&lt;/code&gt; instruction on a &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; constant. (See the Java Virtual Machine Specification, sections 4.4.8 and 5.4.3.)</source>
          <target state="translated">&lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; 상수 에서 &lt;code&gt;ldc&lt;/code&gt; 명령을 실행합니다 . (Java Virtual Machine Specification, 섹션 4.4.8 및 5.4.3을 참조하십시오.)</target>
        </trans-unit>
        <trans-unit id="4086e61a2c7860f34e89e17ef65557daa8d7a5e7" translate="yes" xml:space="preserve">
          <source>By executing an &lt;code&gt;ldc&lt;/code&gt; instruction on a &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; constant. (See the Java Virtual Machine Specification, sections &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.4.8&quot;&gt;4.4.8&lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-5.html#jls-5.4.3&quot;&gt;5.4.3&lt;/a&gt;.)</source>
          <target state="translated">&lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; 상수 에 대해 &lt;code&gt;ldc&lt;/code&gt; 명령어 를 실행합니다 . (Java Virtual Machine 사양, 섹션 &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.4.8&quot;&gt;4.4.8&lt;/a&gt; 및 &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-5.html#jls-5.4.3&quot;&gt;5.4.3 참조&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="d6a5d0eb1c16a8c34230243b231caff6f745efc2" translate="yes" xml:space="preserve">
          <source>By executing the body of a &lt;code&gt;synchronized&lt;/code&gt; statement that synchronizes on the object.</source>
          <target state="translated">오브젝트에서 동기화 되는 &lt;code&gt;synchronized&lt;/code&gt; 명령문 의 본문을 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="21fcc4ca4349ee1e37e4548e4c78a96b9542064b" translate="yes" xml:space="preserve">
          <source>By implementing a &lt;code&gt;Predicate&lt;/code&gt; (see example in &lt;a href=&quot;predicate&quot;&gt;Predicate&lt;/a&gt; class JavaDoc), a &lt;code&gt;FilteredRowSet&lt;/code&gt; could then be used as described below.</source>
          <target state="translated">By implementing a &lt;code&gt;Predicate&lt;/code&gt; (see example in &lt;a href=&quot;predicate&quot;&gt;Predicate&lt;/a&gt; class JavaDoc), a &lt;code&gt;FilteredRowSet&lt;/code&gt; could then be used as described below.</target>
        </trans-unit>
        <trans-unit id="b00311f5d926a07f9923a7ba10bef0aa970fa53a" translate="yes" xml:space="preserve">
          <source>By implementing the &lt;code&gt;RowSetInternal&lt;/code&gt; interface, a &lt;code&gt;RowSet&lt;/code&gt; object gets access to its internal state and is able to call on its reader and writer. A rowset keeps track of the values in its current rows and of the values that immediately preceded the current ones, referred to as the</source>
          <target state="translated">By implementing the &lt;code&gt;RowSetInternal&lt;/code&gt; interface, a &lt;code&gt;RowSet&lt;/code&gt; object gets access to its internal state and is able to call on its reader and writer. A rowset keeps track of the values in its current rows and of the values that immediately preceded the current ones, referred to as the</target>
        </trans-unit>
        <trans-unit id="0f02e086421cadff26f1d15dcb2f7116d103a0f7" translate="yes" xml:space="preserve">
          <source>By invoking the blocked thread's &lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt;&lt;code&gt;interrupt&lt;/code&gt;&lt;/a&gt; method, in which case its interrupt status will be set and the selector's &lt;a href=&quot;#wakeup()&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method will be invoked.</source>
          <target state="translated">By invoking the blocked thread's &lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt; &lt;code&gt;interrupt&lt;/code&gt; &lt;/a&gt; method, in which case its interrupt status will be set and the selector's &lt;a href=&quot;#wakeup()&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; method will be invoked.</target>
        </trans-unit>
        <trans-unit id="fc34128d07648c4393197cbdc1641aaad5bee9a6" translate="yes" xml:space="preserve">
          <source>By invoking the blocked thread's &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;&lt;code&gt;interrupt&lt;/code&gt;&lt;/a&gt; method, in which case its interrupt status will be set and the selector's &lt;a href=&quot;selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method will be invoked.</source>
          <target state="translated">차단 된 스레드의 &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt; &lt;code&gt;interrupt&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하면 인터럽트 상태가 설정되고 선택기의 &lt;a href=&quot;selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a0959c705201d13eb4a5c5bdf86c7bc890dcd779" translate="yes" xml:space="preserve">
          <source>By invoking the selector's &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method, or</source>
          <target state="translated">By invoking the selector's &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; method, or</target>
        </trans-unit>
        <trans-unit id="011c48c54646ff1af3377c596a6d6d411356b902" translate="yes" xml:space="preserve">
          <source>By invoking the selector's &lt;a href=&quot;#wakeup()&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method,</source>
          <target state="translated">By invoking the selector's &lt;a href=&quot;#wakeup()&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; method,</target>
        </trans-unit>
        <trans-unit id="e0245c0e7a17f3ba7e9f2fa0481d0585e3fb19ea" translate="yes" xml:space="preserve">
          <source>By invoking the selector's &lt;a href=&quot;selector#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method, or</source>
          <target state="translated">선택기의 &lt;a href=&quot;selector#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여</target>
        </trans-unit>
        <trans-unit id="2dd213e64571508b791985f6b52b76b913db4e5f" translate="yes" xml:space="preserve">
          <source>By invoking the selector's &lt;a href=&quot;selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method,</source>
          <target state="translated">선택기의 &lt;a href=&quot;selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; 방법 을 호출하면</target>
        </trans-unit>
        <trans-unit id="8c20a14a7d018e2a40e1043a0c6d8b7509b1e291" translate="yes" xml:space="preserve">
          <source>By making a DynamicMBean out of an MBean, this class makes it possible to select any interface implemented by the MBean as its management interface, provided that it complies with JMX patterns (i.e., attributes defined by getter/setter etc...).</source>
          <target state="translated">MBean에서 DynamicMBean을 작성함으로써이 클래스는 MMX에 의해 구현 된 인터페이스를 관리 인터페이스로 선택할 수있게합니다. 단, JMX 패턴 (예 : getter / setter에 의해 정의 된 속성 등)을 준수합니다.</target>
        </trans-unit>
        <trans-unit id="3bb515370fbdfbc5bea9821d5c16c7101349bd9e" translate="yes" xml:space="preserve">
          <source>By positioning the cursor after the last row for each page, as is done in the following code fragment, the method &lt;code&gt;previous&lt;/code&gt; navigates from the last row to the first row in each page. The code could also have left the cursor before the first row on each page and then used the method &lt;code&gt;next&lt;/code&gt; in a &lt;code&gt;while&lt;/code&gt; loop to navigate each page from the first row to the last row.</source>
          <target state="translated">By positioning the cursor after the last row for each page, as is done in the following code fragment, the method &lt;code&gt;previous&lt;/code&gt; navigates from the last row to the first row in each page. The code could also have left the cursor before the first row on each page and then used the method &lt;code&gt;next&lt;/code&gt; in a &lt;code&gt;while&lt;/code&gt; loop to navigate each page from the first row to the last row.</target>
        </trans-unit>
        <trans-unit id="548a27d7645d9294f265dee83d232a9c9e330c40" translate="yes" xml:space="preserve">
          <source>By setting the default locale with this method, all of the default locales for each Category are also set to the specified default locale.</source>
          <target state="translated">이 방법으로 기본 로캘을 설정하면 각 범주의 모든 기본 로캘도 지정된 기본 로캘로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="b50a26dce7be016a883759a26ffad42b4a65a577" translate="yes" xml:space="preserve">
          <source>By setting the default uncaught exception handler, an application can change the way in which uncaught exceptions are handled (such as logging to a specific device, or file) for those threads that would already accept whatever &quot;default&quot; behavior the system provided.</source>
          <target state="translated">기본 catch되지 않은 예외 처리기를 설정하면 응용 프로그램은 시스템이 제공 한 &quot;기본&quot;동작을 그대로 받아들이는 스레드에 대해 catch되지 않은 예외가 처리되는 방식 (예 : 특정 장치 또는 파일에 로깅)을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b5d986f7792f97937149c970b4f68e0342363f7" translate="yes" xml:space="preserve">
          <source>By the intersection of the set of data types provided by the &lt;code&gt;DragSource&lt;/code&gt; and the set of data types comprehensible by the &lt;code&gt;DropTarget&lt;/code&gt;.</source>
          <target state="translated">By the intersection of the set of data types provided by the &lt;code&gt;DragSource&lt;/code&gt; and the set of data types comprehensible by the &lt;code&gt;DropTarget&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bed2db3b0785a6fd3302f9c917e7055489a8e9df" translate="yes" xml:space="preserve">
          <source>By the transfer &quot;operation&quot; selected by the user, and supported by both the &lt;code&gt;DragSource&lt;/code&gt; and &lt;code&gt;DropTarget&lt;/code&gt;: Copy, Move or Reference(link).</source>
          <target state="translated">By the transfer &quot;operation&quot; selected by the user, and supported by both the &lt;code&gt;DragSource&lt;/code&gt; and &lt;code&gt;DropTarget&lt;/code&gt; : Copy, Move or Reference(link).</target>
        </trans-unit>
        <trans-unit id="a8641bc3f72be6688585df77c15c8e690037958c" translate="yes" xml:space="preserve">
          <source>By treating the creation of &lt;code&gt;ImageInputStream&lt;/code&gt;s as a pluggable service, it becomes possible to handle future input sources without changing the API. Also, high-performance implementations of &lt;code&gt;ImageInputStream&lt;/code&gt; (for example, native implementations for a particular platform) can be installed and used transparently by applications.</source>
          <target state="translated">&lt;code&gt;ImageInputStream&lt;/code&gt; 의 작성을 플러그 가능한 서비스로서 취급함으로써 , API를 변경하지 않고 향후 입력 소스를 처리 할 수있게됩니다. 또한 &lt;code&gt;ImageInputStream&lt;/code&gt; 의 고성능 구현 (예 : 특정 플랫폼에 대한 기본 구현)을 애플리케이션에서 투명하게 설치하고 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c69f227da0d5abc2569d6a2b819e2e50dee2fc92" translate="yes" xml:space="preserve">
          <source>By treating the creation of &lt;code&gt;ImageOutputStream&lt;/code&gt;s as a pluggable service, it becomes possible to handle future output destinations without changing the API. Also, high-performance implementations of &lt;code&gt;ImageOutputStream&lt;/code&gt; (for example, native implementations for a particular platform) can be installed and used transparently by applications.</source>
          <target state="translated">&lt;code&gt;ImageOutputStream&lt;/code&gt; 의 작성을 플러그 가능한 서비스로서 취급함으로써 , API를 변경하지 않고 향후의 출력 처를 처리 할 수있게됩니다. 또한 &lt;code&gt;ImageOutputStream&lt;/code&gt; 의 고성능 구현 (예 : 특정 플랫폼의 기본 구현)을 애플리케이션에서 투명하게 설치하고 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7803ee252527503b67d1eeb0deb252622746cebd" translate="yes" xml:space="preserve">
          <source>Byte</source>
          <target state="translated">Byte</target>
        </trans-unit>
        <trans-unit id="b367bd0c58f9461bc3ca04ae9279ca9fc390edc8" translate="yes" xml:space="preserve">
          <source>Byte 1</source>
          <target state="translated">바이트 1</target>
        </trans-unit>
        <trans-unit id="5ef7e7d2f35b16349756ec159576d7454417ca95" translate="yes" xml:space="preserve">
          <source>Byte 2</source>
          <target state="translated">바이트 2</target>
        </trans-unit>
        <trans-unit id="562246479977a1f12a4320ef6dcef7d3bb1965dd" translate="yes" xml:space="preserve">
          <source>Byte 3</source>
          <target state="translated">바이트 3</target>
        </trans-unit>
        <trans-unit id="780e0ad51503653ae7fa9660d8b5b535067ef512" translate="yes" xml:space="preserve">
          <source>Byte array (&lt;code&gt;byte[]&lt;/code&gt;) -- The print data consists of the bytes in the array. The bytes are encoded in the character set specified by the doc flavor's MIME type. If the MIME type does not specify a character set, the default character set is US-ASCII.</source>
          <target state="translated">바이트 배열 ( &lt;code&gt;byte[]&lt;/code&gt; )-인쇄 데이터는 배열의 바이트로 구성됩니다. 바이트는 doc 후 레이 바의 MIME 타입으로 지정된 문자 세트로 인코딩됩니다. MIME 유형이 문자 세트를 지정하지 않으면 기본 문자 세트는 US-ASCII입니다.</target>
        </trans-unit>
        <trans-unit id="eca5dbe11f9553432ade0b5cfe135f84627aeec7" translate="yes" xml:space="preserve">
          <source>Byte buffers are distinguished in that they can be used as the sources and targets of I/O operations. They also support several features not found in the other buffer classes:</source>
          <target state="translated">바이트 버퍼는 I / O 작업의 소스 및 대상으로 사용될 수 있다는 점에서 구별됩니다. 또한 다른 버퍼 클래스에는없는 몇 가지 기능을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a07e5d1997873278725f110b095fccf13413f4e7" translate="yes" xml:space="preserve">
          <source>Byte buffers can be created either by &lt;a href=&quot;#allocate(int)&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, or by &lt;a href=&quot;#wrap(byte%5B%5D)&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing byte array into a buffer.</source>
          <target state="translated">Byte buffers can be created either by &lt;a href=&quot;#allocate(int)&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;, which allocates space for the buffer's content, or by &lt;a href=&quot;#wrap(byte%5B%5D)&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; an existing byte array into a buffer.</target>
        </trans-unit>
        <trans-unit id="e5e30ac7c4b3daf329b4b0acb4e13e1431c8cae7" translate="yes" xml:space="preserve">
          <source>Byte buffers can be created either by &lt;a href=&quot;bytebuffer#allocate-int-&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, or by &lt;a href=&quot;bytebuffer#wrap-byte:A-&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing byte array into a buffer.</source>
          <target state="translated">바이트 버퍼는 하나가 생성 될 수있다 &lt;a href=&quot;bytebuffer#allocate-int-&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 버퍼의 컨텐츠에 용량을 할당하거나함으로써, &lt;a href=&quot;bytebuffer#wrap-byte:A-&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 버퍼에 존재하는 바이트 배열.</target>
        </trans-unit>
        <trans-unit id="efc40a24b9b717a54b8d56d707c7c6c12ff6967e" translate="yes" xml:space="preserve">
          <source>Byte stream (&lt;a href=&quot;../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;java.io.InputStream&lt;/code&gt;&lt;/a&gt;) -- The print data consists of the bytes read from the stream up to the end-of-stream. The bytes are encoded in the character set specified by the doc flavor's MIME type. If the MIME type does not specify a character set, the default character set is US-ASCII.</source>
          <target state="translated">Byte stream (&lt;a href=&quot;../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;java.io.InputStream&lt;/code&gt; &lt;/a&gt;) -- The print data consists of the bytes read from the stream up to the end-of-stream. The bytes are encoded in the character set specified by the doc flavor's MIME type. If the MIME type does not specify a character set, the default character set is US-ASCII.</target>
        </trans-unit>
        <trans-unit id="dfc8d216efb18ee738a51c7b1c72d9d5a694c396" translate="yes" xml:space="preserve">
          <source>Byte stream (&lt;a href=&quot;../../java/io/inputstream&quot;&gt;&lt;code&gt;java.io.InputStream&lt;/code&gt;&lt;/a&gt;) -- The print data consists of the bytes read from the stream up to the end-of-stream. The bytes are encoded in the character set specified by the doc flavor's MIME type. If the MIME type does not specify a character set, the default character set is US-ASCII.</source>
          <target state="translated">바이트 스트림 ( &lt;a href=&quot;../../java/io/inputstream&quot;&gt; &lt;code&gt;java.io.InputStream&lt;/code&gt; &lt;/a&gt; )-인쇄 데이터는 스트림에서 스트림 끝까지 읽은 바이트로 구성됩니다. 바이트는 doc 후 레이 바의 MIME 타입으로 지정된 문자 세트로 인코딩됩니다. MIME 유형이 문자 세트를 지정하지 않으면 기본 문자 세트는 US-ASCII입니다.</target>
        </trans-unit>
        <trans-unit id="35d65db6153fb003c0ec5a7e5f97e84b8b6540da" translate="yes" xml:space="preserve">
          <source>Byte.byteValue()</source>
          <target state="translated">Byte.byteValue()</target>
        </trans-unit>
        <trans-unit id="765687760412e23d3af9319bad64ac2276b8e71c" translate="yes" xml:space="preserve">
          <source>Byte.compare()</source>
          <target state="translated">Byte.compare()</target>
        </trans-unit>
        <trans-unit id="7025582b3066336f81a1e40b90d0873f5282fead" translate="yes" xml:space="preserve">
          <source>Byte.compareTo()</source>
          <target state="translated">Byte.compareTo()</target>
        </trans-unit>
        <trans-unit id="fab6974036d23257c5e9bcb32e003fc373980b27" translate="yes" xml:space="preserve">
          <source>Byte.decode()</source>
          <target state="translated">Byte.decode()</target>
        </trans-unit>
        <trans-unit id="860a9070ab3c744435daa9c33436c7c066c2d9da" translate="yes" xml:space="preserve">
          <source>Byte.doubleValue()</source>
          <target state="translated">Byte.doubleValue()</target>
        </trans-unit>
        <trans-unit id="f14ed1810a01497149324efe586fb2cb3637d046" translate="yes" xml:space="preserve">
          <source>Byte.equals()</source>
          <target state="translated">Byte.equals()</target>
        </trans-unit>
        <trans-unit id="df9effa0eb76c2b0a6e18ec16d3468b62a2f6997" translate="yes" xml:space="preserve">
          <source>Byte.floatValue()</source>
          <target state="translated">Byte.floatValue()</target>
        </trans-unit>
        <trans-unit id="5ece7ca0ef423b0508c79d4586aafe8387056882" translate="yes" xml:space="preserve">
          <source>Byte.hashCode()</source>
          <target state="translated">Byte.hashCode()</target>
        </trans-unit>
        <trans-unit id="194b6050858b47520fb9d058a2d6f15e43e9b7cb" translate="yes" xml:space="preserve">
          <source>Byte.intValue()</source>
          <target state="translated">Byte.intValue()</target>
        </trans-unit>
        <trans-unit id="81b8aeaa5dcaa7edd4476485a4dc6320f4931588" translate="yes" xml:space="preserve">
          <source>Byte.longValue()</source>
          <target state="translated">Byte.longValue()</target>
        </trans-unit>
        <trans-unit id="79b360b9b8bc15c7a4e8d11f377a74ec12def61e" translate="yes" xml:space="preserve">
          <source>Byte.parseByte()</source>
          <target state="translated">Byte.parseByte()</target>
        </trans-unit>
        <trans-unit id="d7d1a2f86ff345544c8ff38bffb880131a33307f" translate="yes" xml:space="preserve">
          <source>Byte.shortValue()</source>
          <target state="translated">Byte.shortValue()</target>
        </trans-unit>
        <trans-unit id="2f4aa72bfff65ba84c99baea63065064b724c749" translate="yes" xml:space="preserve">
          <source>Byte.toString()</source>
          <target state="translated">Byte.toString()</target>
        </trans-unit>
        <trans-unit id="aeef7ee8791d34605aa5dc77687c529cb46f9ca7" translate="yes" xml:space="preserve">
          <source>Byte.toUnsignedInt()</source>
          <target state="translated">Byte.toUnsignedInt()</target>
        </trans-unit>
        <trans-unit id="20fa3fa0a7f69cd59ecb8fde5e9598cfd4366ec0" translate="yes" xml:space="preserve">
          <source>Byte.toUnsignedLong()</source>
          <target state="translated">Byte.toUnsignedLong()</target>
        </trans-unit>
        <trans-unit id="75aacac1f046964ea2b15cad7aff7f552935bcbe" translate="yes" xml:space="preserve">
          <source>Byte.valueOf()</source>
          <target state="translated">Byte.valueOf()</target>
        </trans-unit>
        <trans-unit id="4ab0eda7e81f66c18da5e36914bdbd3f194b3d34" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream</source>
          <target state="translated">ByteArrayInputStream</target>
        </trans-unit>
        <trans-unit id="4fe5085ec423c6d0e2f590cc989cc831c8bb3907" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.available()</source>
          <target state="translated">ByteArrayInputStream.available()</target>
        </trans-unit>
        <trans-unit id="c50e1a0898ac06b34123fcefe243e8d827b11be0" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.close()</source>
          <target state="translated">ByteArrayInputStream.close()</target>
        </trans-unit>
        <trans-unit id="22116c48f65a0054592dfdececbf2fbbb273d841" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.mark()</source>
          <target state="translated">ByteArrayInputStream.mark()</target>
        </trans-unit>
        <trans-unit id="2001d6fb9b207c54ba2c79f70fe86420e9bd5445" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.markSupported()</source>
          <target state="translated">ByteArrayInputStream.markSupported()</target>
        </trans-unit>
        <trans-unit id="68f43a9a604cb9026dffa8aabe8f62fc94482272" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.read()</source>
          <target state="translated">ByteArrayInputStream.read()</target>
        </trans-unit>
        <trans-unit id="b584d5525926e4ea8b2bc2e12e9181c2381adae6" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.reset()</source>
          <target state="translated">ByteArrayInputStream.reset()</target>
        </trans-unit>
        <trans-unit id="19ba32696806f759c9c2f80b9cb374e49b9a6d1b" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.skip()</source>
          <target state="translated">ByteArrayInputStream.skip()</target>
        </trans-unit>
        <trans-unit id="0a0d724833c8ea3f75c148b3324ae166676dfff7" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream</source>
          <target state="translated">ByteArrayOutputStream</target>
        </trans-unit>
        <trans-unit id="20fbfb900b7d4bf233732c28f7f6ce51381e6f25" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.close()</source>
          <target state="translated">ByteArrayOutputStream.close()</target>
        </trans-unit>
        <trans-unit id="d69b9b8edd3d3d0a66cf46130706fdaa73240e15" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.reset()</source>
          <target state="translated">ByteArrayOutputStream.reset()</target>
        </trans-unit>
        <trans-unit id="b5a97c9cebd94e800f51be133ab5edf656c826be" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.size()</source>
          <target state="translated">ByteArrayOutputStream.size()</target>
        </trans-unit>
        <trans-unit id="1e099aa20dd60b91a4fb298871cc9a53acfb68b4" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.toByteArray()</source>
          <target state="translated">ByteArrayOutputStream.toByteArray()</target>
        </trans-unit>
        <trans-unit id="146eb06bf292e54042fae3b770684aeaff74137e" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.toString()</source>
          <target state="translated">ByteArrayOutputStream.toString()</target>
        </trans-unit>
        <trans-unit id="907d3ffaebe3887e93c1b5eb84ed1160c6a85dec" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.write()</source>
          <target state="translated">ByteArrayOutputStream.write()</target>
        </trans-unit>
        <trans-unit id="bb7b4a24166c989c7929a9640abc99970f6001d8" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.writeTo()</source>
          <target state="translated">ByteArrayOutputStream.writeTo()</target>
        </trans-unit>
        <trans-unit id="066fd088210cf40bab9e0d026adfc85698fe0255" translate="yes" xml:space="preserve">
          <source>ByteBuffer</source>
          <target state="translated">ByteBuffer</target>
        </trans-unit>
        <trans-unit id="592d2094283c8a2104231747877c98b9c08f5f7b" translate="yes" xml:space="preserve">
          <source>ByteBuffer.allocate()</source>
          <target state="translated">ByteBuffer.allocate()</target>
        </trans-unit>
        <trans-unit id="1176eb8c79f5e049de7db3e4cbb6574d0d8ae291" translate="yes" xml:space="preserve">
          <source>ByteBuffer.allocateDirect()</source>
          <target state="translated">ByteBuffer.allocateDirect()</target>
        </trans-unit>
        <trans-unit id="3e7ef7bf0adcd5013d42e4fccc25bac39ce3cd8c" translate="yes" xml:space="preserve">
          <source>ByteBuffer.array()</source>
          <target state="translated">ByteBuffer.array()</target>
        </trans-unit>
        <trans-unit id="1a72c252514aac3400fd8d1774c19309f3924d59" translate="yes" xml:space="preserve">
          <source>ByteBuffer.arrayOffset()</source>
          <target state="translated">ByteBuffer.arrayOffset()</target>
        </trans-unit>
        <trans-unit id="c4403eee91e285445bc5857e85f8ee710d226cc2" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asCharBuffer()</source>
          <target state="translated">ByteBuffer.asCharBuffer()</target>
        </trans-unit>
        <trans-unit id="49d71918b373695b37be2285addbc49e7cefabf8" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asDoubleBuffer()</source>
          <target state="translated">ByteBuffer.asDoubleBuffer()</target>
        </trans-unit>
        <trans-unit id="6bf3960bb1a9fe636d4c7886b3334f5daeec6cd2" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asFloatBuffer()</source>
          <target state="translated">ByteBuffer.asFloatBuffer()</target>
        </trans-unit>
        <trans-unit id="666b73c18717a1f4edf9134e09628f4a42b7ade2" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asIntBuffer()</source>
          <target state="translated">ByteBuffer.asIntBuffer()</target>
        </trans-unit>
        <trans-unit id="9e94a831a3dd208097108735acaac5f8f61a7408" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asLongBuffer()</source>
          <target state="translated">ByteBuffer.asLongBuffer()</target>
        </trans-unit>
        <trans-unit id="e4d2d199e8ec7a9a7d6e7cf4716d82db81e60a3b" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asReadOnlyBuffer()</source>
          <target state="translated">ByteBuffer.asReadOnlyBuffer()</target>
        </trans-unit>
        <trans-unit id="1ad5cfd9a0cacd5c8a60cdbf5b2cca86a6fead65" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asShortBuffer()</source>
          <target state="translated">ByteBuffer.asShortBuffer()</target>
        </trans-unit>
        <trans-unit id="b73e27392eeda3ec8349a615f3fb9767c003ed6c" translate="yes" xml:space="preserve">
          <source>ByteBuffer.compact()</source>
          <target state="translated">ByteBuffer.compact()</target>
        </trans-unit>
        <trans-unit id="3fcb36336b96823b83564f5997a4d352dc139685" translate="yes" xml:space="preserve">
          <source>ByteBuffer.compareTo()</source>
          <target state="translated">ByteBuffer.compareTo()</target>
        </trans-unit>
        <trans-unit id="c84545045be64f231afa86323bfdda6ad39de556" translate="yes" xml:space="preserve">
          <source>ByteBuffer.duplicate()</source>
          <target state="translated">ByteBuffer.duplicate()</target>
        </trans-unit>
        <trans-unit id="e0a583c5957121cd1c3d3c1464a1c70cd8cda57c" translate="yes" xml:space="preserve">
          <source>ByteBuffer.equals()</source>
          <target state="translated">ByteBuffer.equals()</target>
        </trans-unit>
        <trans-unit id="ab66ee30f64a050418e93fcd35beccc9e7c0145f" translate="yes" xml:space="preserve">
          <source>ByteBuffer.get()</source>
          <target state="translated">ByteBuffer.get()</target>
        </trans-unit>
        <trans-unit id="d2579c96f0f8b2941a34c212a7268319170122b0" translate="yes" xml:space="preserve">
          <source>ByteBuffer.getChar()</source>
          <target state="translated">ByteBuffer.getChar()</target>
        </trans-unit>
        <trans-unit id="f081040a71e94a606aea038d999920f0561383d0" translate="yes" xml:space="preserve">
          <source>ByteBuffer.getDouble()</source>
          <target state="translated">ByteBuffer.getDouble()</target>
        </trans-unit>
        <trans-unit id="4d5bcf981f1eedc13b3f70af63e1280960c0c4ac" translate="yes" xml:space="preserve">
          <source>ByteBuffer.getFloat()</source>
          <target state="translated">ByteBuffer.getFloat()</target>
        </trans-unit>
        <trans-unit id="47b8004befae64d77aaa577f8fc5247fec4de404" translate="yes" xml:space="preserve">
          <source>ByteBuffer.getInt()</source>
          <target state="translated">ByteBuffer.getInt()</target>
        </trans-unit>
        <trans-unit id="dfef190f746cd639fefa3469ca3bb8a8db687143" translate="yes" xml:space="preserve">
          <source>ByteBuffer.getLong()</source>
          <target state="translated">ByteBuffer.getLong()</target>
        </trans-unit>
        <trans-unit id="cf14ca600b39c2ed38c332d321a9c3e92bd84467" translate="yes" xml:space="preserve">
          <source>ByteBuffer.getShort()</source>
          <target state="translated">ByteBuffer.getShort()</target>
        </trans-unit>
        <trans-unit id="ee0cc56290282813c83f1bb9c566a9ff1eca767b" translate="yes" xml:space="preserve">
          <source>ByteBuffer.hasArray()</source>
          <target state="translated">ByteBuffer.hasArray()</target>
        </trans-unit>
        <trans-unit id="ed19c51a365a270bbefe28242193539764677852" translate="yes" xml:space="preserve">
          <source>ByteBuffer.hashCode()</source>
          <target state="translated">ByteBuffer.hashCode()</target>
        </trans-unit>
        <trans-unit id="20218c224f86e60ee9eeb9e6e1b546ac6adcc9e6" translate="yes" xml:space="preserve">
          <source>ByteBuffer.isDirect()</source>
          <target state="translated">ByteBuffer.isDirect()</target>
        </trans-unit>
        <trans-unit id="e8846d23612b9f273b40201c34fcb0c0a12ba5d7" translate="yes" xml:space="preserve">
          <source>ByteBuffer.order()</source>
          <target state="translated">ByteBuffer.order()</target>
        </trans-unit>
        <trans-unit id="48b5b731fb344fec7f0a1a301b6b08f62957b823" translate="yes" xml:space="preserve">
          <source>ByteBuffer.put()</source>
          <target state="translated">ByteBuffer.put()</target>
        </trans-unit>
        <trans-unit id="0505cff9c9eac96942dfe5dcf41be201308bc304" translate="yes" xml:space="preserve">
          <source>ByteBuffer.putChar()</source>
          <target state="translated">ByteBuffer.putChar()</target>
        </trans-unit>
        <trans-unit id="5929c3b682d9e3c9b993510bc4be40c120f1c032" translate="yes" xml:space="preserve">
          <source>ByteBuffer.putDouble()</source>
          <target state="translated">ByteBuffer.putDouble()</target>
        </trans-unit>
        <trans-unit id="0f5c684bfe8f55f8d3e9423340275a6210a363df" translate="yes" xml:space="preserve">
          <source>ByteBuffer.putFloat()</source>
          <target state="translated">ByteBuffer.putFloat()</target>
        </trans-unit>
        <trans-unit id="659772759b765006a7114c377eb8de7c45ed5e02" translate="yes" xml:space="preserve">
          <source>ByteBuffer.putInt()</source>
          <target state="translated">ByteBuffer.putInt()</target>
        </trans-unit>
        <trans-unit id="a44f0950bbb09699d499f710092a988bb8b094d4" translate="yes" xml:space="preserve">
          <source>ByteBuffer.putLong()</source>
          <target state="translated">ByteBuffer.putLong()</target>
        </trans-unit>
        <trans-unit id="2a569a4377a1b93f56ed8ab933cbb4e2e1493fa0" translate="yes" xml:space="preserve">
          <source>ByteBuffer.putShort()</source>
          <target state="translated">ByteBuffer.putShort()</target>
        </trans-unit>
        <trans-unit id="925de9609fe4a4fe584d7ed2eede99222328ed64" translate="yes" xml:space="preserve">
          <source>ByteBuffer.slice()</source>
          <target state="translated">ByteBuffer.slice()</target>
        </trans-unit>
        <trans-unit id="d8b39d795e407b72ac024dcb50e89ec8c034606f" translate="yes" xml:space="preserve">
          <source>ByteBuffer.toString()</source>
          <target state="translated">ByteBuffer.toString()</target>
        </trans-unit>
        <trans-unit id="aae96e677f9ff06168b07a036ee5a28a8bb878e4" translate="yes" xml:space="preserve">
          <source>ByteBuffer.wrap()</source>
          <target state="translated">ByteBuffer.wrap()</target>
        </trans-unit>
        <trans-unit id="684de3307764adb385fc1e92db8147583bdd0135" translate="yes" xml:space="preserve">
          <source>ByteChannel</source>
          <target state="translated">ByteChannel</target>
        </trans-unit>
        <trans-unit id="075fe951f538100fd938ac39adc6efa478b3cc62" translate="yes" xml:space="preserve">
          <source>ByteLookupTable</source>
          <target state="translated">ByteLookupTable</target>
        </trans-unit>
        <trans-unit id="8a45cdc61d443f1d99e6a8e08a1a5cac63e13810" translate="yes" xml:space="preserve">
          <source>ByteOrder</source>
          <target state="translated">ByteOrder</target>
        </trans-unit>
        <trans-unit id="b7ebd711a385cf71ce1caf7350af8dfa1ea2f124" translate="yes" xml:space="preserve">
          <source>ByteOrder.nativeOrder()</source>
          <target state="translated">ByteOrder.nativeOrder()</target>
        </trans-unit>
        <trans-unit id="0061ca092d69381255b213746f079192877fec28" translate="yes" xml:space="preserve">
          <source>ByteOrder.toString()</source>
          <target state="translated">ByteOrder.toString()</target>
        </trans-unit>
        <trans-unit id="15bc015e59edf1be7f2150a325461149e46ede8e" translate="yes" xml:space="preserve">
          <source>ByteType</source>
          <target state="translated">ByteType</target>
        </trans-unit>
        <trans-unit id="1936dae206b170ad1c1af945bb746de64e3548ef" translate="yes" xml:space="preserve">
          <source>ByteValue</source>
          <target state="translated">ByteValue</target>
        </trans-unit>
        <trans-unit id="18862cb8630ec1df4fc072c3f7f7847808094ad7" translate="yes" xml:space="preserve">
          <source>Bytecode generators, including the compiler back end, are required to emit untransformed symbolic type descriptors for these methods. Tools which determine symbolic linkage are required to accept such untransformed descriptors, without reporting linkage errors.</source>
          <target state="translated">컴파일러 백엔드를 포함한 바이트 코드 생성기는 이러한 메소드에 대해 변환되지 않은 기호 유형 설명자를 생성해야합니다. 심볼릭 링크를 결정하는 도구는 변환 오류를보고하지 않고 변환되지 않은 이러한 설명자를 허용해야합니다.</target>
        </trans-unit>
        <trans-unit id="e26081c49d070cd04379b2c727538ae058d418d2" translate="yes" xml:space="preserve">
          <source>Bytecode-reading APIs that process the constant pool and wish to expose entries as &lt;a href=&quot;constantdesc&quot;&gt;&lt;code&gt;ConstantDesc&lt;/code&gt;&lt;/a&gt; to their callers should generally use this method in preference to &lt;a href=&quot;#ofNamed(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc...)&quot;&gt;&lt;code&gt;ofNamed(DirectMethodHandleDesc, String, ClassDesc, ConstantDesc...)&lt;/code&gt;&lt;/a&gt; because this may result in a more specific type that can be provided to callers.</source>
          <target state="translated">상수 풀을 처리하고 항목을 호출자에게 &lt;a href=&quot;constantdesc&quot;&gt; &lt;code&gt;ConstantDesc&lt;/code&gt; &lt;/a&gt; 로 노출하려는 바이트 코드 읽기 API 는 일반적으로 &lt;a href=&quot;#ofNamed(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc...)&quot;&gt; &lt;code&gt;ofNamed(DirectMethodHandleDesc, String, ClassDesc, ConstantDesc...)&lt;/code&gt; &lt;/a&gt; 보다 우선적으로이 메서드를 사용해야 합니다. 발신자에게 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5fd1483edab08a4a8d6b6422b4ae191bca333d84" translate="yes" xml:space="preserve">
          <source>Bytes are read starting at this channel's current file position, and then the file position is updated with the number of bytes actually read. Otherwise this method behaves exactly as specified in the &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">이 채널의 현재 파일 위치에서 시작하여 바이트를 읽은 다음 파일 위치는 실제로 읽은 바이트 수로 업데이트됩니다. 그렇지 않으면이 메소드는 &lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스에 지정된대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="7c22cb48108a90172ea1f9755573429b689b563f" translate="yes" xml:space="preserve">
          <source>Bytes are read starting at this channel's current file position, and then the file position is updated with the number of bytes actually read. Otherwise this method behaves exactly as specified in the &lt;a href=&quot;scatteringbytechannel&quot;&gt;&lt;code&gt;ScatteringByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">이 채널의 현재 파일 위치에서 시작하여 바이트를 읽은 다음 파일 위치는 실제로 읽은 바이트 수로 업데이트됩니다. 그렇지 않으면이 메소드는 &lt;a href=&quot;scatteringbytechannel&quot;&gt; &lt;code&gt;ScatteringByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스에 지정된대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="7482a5b7bb56b073411149804c7e1e5cae042f1c" translate="yes" xml:space="preserve">
          <source>Bytes are read starting at this channel's current position, and then the position is updated with the number of bytes actually read. Otherwise this method behaves exactly as specified in the &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">이 채널의 현재 위치에서 시작하여 바이트를 읽은 다음 실제로 읽은 바이트 수로 위치가 업데이트됩니다. 그렇지 않으면이 메소드는 &lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스에 지정된대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="d99b90c47425229f8bbb84f86216f260c30c07b5" translate="yes" xml:space="preserve">
          <source>Bytes are written starting at this channel's current file position unless the channel is in append mode, in which case the position is first advanced to the end of the file. The file is grown, if necessary, to accommodate the written bytes, and then the file position is updated with the number of bytes actually written. Otherwise this method behaves exactly as specified by the &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">채널이 추가 모드에 있지 않으면이 채널의 현재 파일 위치에서 시작하여 바이트가 기록됩니다.이 경우 위치는 파일의 끝으로 먼저 이동합니다. 필요한 경우 기록 된 바이트를 수용하기 위해 파일이 확장 된 다음 파일 위치가 실제로 기록 된 바이트 수로 업데이트됩니다. 그렇지 않으면이 메소드는 &lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스에 지정된대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="d49cfad8b11fd66360d02e456be33ea5a81bedb4" translate="yes" xml:space="preserve">
          <source>Bytes are written starting at this channel's current file position unless the channel is in append mode, in which case the position is first advanced to the end of the file. The file is grown, if necessary, to accommodate the written bytes, and then the file position is updated with the number of bytes actually written. Otherwise this method behaves exactly as specified in the &lt;a href=&quot;gatheringbytechannel&quot;&gt;&lt;code&gt;GatheringByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">채널이 추가 모드에 있지 않으면이 채널의 현재 파일 위치에서 시작하여 바이트가 기록됩니다.이 경우 위치는 파일의 끝으로 먼저 이동합니다. 필요한 경우 기록 된 바이트를 수용하기 위해 파일이 확장 된 다음 파일 위치가 실제로 기록 된 바이트 수로 업데이트됩니다. 그렇지 않으면이 메소드는 &lt;a href=&quot;gatheringbytechannel&quot;&gt; &lt;code&gt;GatheringByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스에 지정된대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="f161521aff0978f84ec756f3ae58c76dbd822dbe" translate="yes" xml:space="preserve">
          <source>Bytes are written starting at this channel's current position, unless the channel is connected to an entity such as a file that is opened with the &lt;a href=&quot;../file/standardopenoption#APPEND&quot;&gt;&lt;code&gt;APPEND&lt;/code&gt;&lt;/a&gt; option, in which case the position is first advanced to the end. The entity to which the channel is connected is grown, if necessary, to accommodate the written bytes, and then the position is updated with the number of bytes actually written. Otherwise this method behaves exactly as specified by the &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">채널이 &lt;a href=&quot;../file/standardopenoption#APPEND&quot;&gt; &lt;code&gt;APPEND&lt;/code&gt; &lt;/a&gt; 옵션으로 열린 파일과 같은 엔티티에 연결되어 있지 않으면이 채널의 현재 위치에서 시작하여 바이트가 기록됩니다.이 경우 위치는 처음으로 끝으로 이동합니다. 채널이 연결된 엔터티는 필요한 경우 기록 된 바이트를 수용하도록 확장 된 다음 위치는 실제로 기록 된 바이트 수로 업데이트됩니다. 그렇지 않으면이 메소드는 &lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스에 지정된대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="ee658b6f5f87e5dc9a76837686e8b7da04d5143d" translate="yes" xml:space="preserve">
          <source>Bytes can be transferred from a file &lt;a href=&quot;#transferTo(long,long,java.nio.channels.WritableByteChannel)&quot;&gt;&lt;code&gt;&lt;i&gt;to
   some other channel&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#transferFrom(java.nio.channels.ReadableByteChannel,long,long)&quot;&gt;&lt;code&gt;&lt;i&gt;vice
   versa&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, in a way that can be optimized by many operating systems into a very fast transfer directly to or from the filesystem cache.</source>
          <target state="translated">Bytes can be transferred from a file &lt;a href=&quot;#transferTo(long,long,java.nio.channels.WritableByteChannel)&quot;&gt; &lt;code&gt;&lt;i&gt;to some other channel&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;, and &lt;a href=&quot;#transferFrom(java.nio.channels.ReadableByteChannel,long,long)&quot;&gt; &lt;code&gt;&lt;i&gt;vice versa&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;, in a way that can be optimized by many operating systems into a very fast transfer directly to or from the filesystem cache.</target>
        </trans-unit>
        <trans-unit id="894f12201bda7fac0ae6fd06ea83090bda6d87ce" translate="yes" xml:space="preserve">
          <source>Bytes can be transferred from a file &lt;a href=&quot;filechannel#transferTo-long-long-java.nio.channels.WritableByteChannel-&quot;&gt;&lt;code&gt;&lt;i&gt;to
   some other channel&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;filechannel#transferFrom-java.nio.channels.ReadableByteChannel-long-long-&quot;&gt;&lt;code&gt;&lt;i&gt;vice
   versa&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, in a way that can be optimized by many operating systems into a very fast transfer directly to or from the filesystem cache.</source>
          <target state="translated">바이트는 많은 운영 체제에서 파일 시스템 캐시로 직접 또는 파일 시스템 캐시에서 매우 빠른 전송으로 최적화 할 수있는 방식으로 파일 &lt;a href=&quot;filechannel#transferTo-long-long-java.nio.channels.WritableByteChannel-&quot;&gt; &lt;code&gt;&lt;i&gt;to some other channel&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 로 또는 &lt;a href=&quot;filechannel#transferFrom-java.nio.channels.ReadableByteChannel-long-long-&quot;&gt; &lt;code&gt;&lt;i&gt;vice versa&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 전송할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b70eb265097df5e93cbb6d554d3c69930d9226be" translate="yes" xml:space="preserve">
          <source>Bytes for this operation are read from the contained input stream.</source>
          <target state="translated">이 작업에 대한 바이트는 포함 된 입력 스트림에서 읽습니다.</target>
        </trans-unit>
        <trans-unit id="28f5b6fcf58c8109857697d2be33f92752447664" translate="yes" xml:space="preserve">
          <source>Bytes from the file are decoded into characters using the specified charset and the same line terminators as specified by &lt;code&gt;
 readAllLines&lt;/code&gt; are supported.</source>
          <target state="translated">Bytes from the file are decoded into characters using the specified charset and the same line terminators as specified by &lt;code&gt; readAllLines&lt;/code&gt; are supported.</target>
        </trans-unit>
        <trans-unit id="b88ba13bce6a6035121fb298aa2e24eb9af5ebac" translate="yes" xml:space="preserve">
          <source>Bytes from the file are decoded into characters using the specified charset and the same line terminators as specified by &lt;code&gt;readAllLines&lt;/code&gt; are supported.</source>
          <target state="translated">파일의 바이트는 지정된 문자 세트를 사용하여 문자로 디코딩되며 &lt;code&gt;readAllLines&lt;/code&gt; 에 지정된 것과 동일한 줄 종결 자가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="76517fb5db3a813131882c436a3d3d840022032c" translate="yes" xml:space="preserve">
          <source>Bytes may be &lt;a href=&quot;#read(java.nio.ByteBuffer,long)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#write(java.nio.ByteBuffer,long)&quot;&gt;&lt;code&gt;&lt;i&gt;written&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; at an absolute position in a file in a way that does not affect the channel's current position.</source>
          <target state="translated">Bytes may be &lt;a href=&quot;#read(java.nio.ByteBuffer,long)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#write(java.nio.ByteBuffer,long)&quot;&gt; &lt;code&gt;&lt;i&gt;written&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; at an absolute position in a file in a way that does not affect the channel's current position.</target>
        </trans-unit>
        <trans-unit id="55d85802790807944352e0bb71a0594bb080afb1" translate="yes" xml:space="preserve">
          <source>Bytes may be &lt;a href=&quot;filechannel#read-java.nio.ByteBuffer-long-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;filechannel#write-java.nio.ByteBuffer-long-&quot;&gt;&lt;code&gt;&lt;i&gt;written&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; at an absolute position in a file in a way that does not affect the channel's current position.</source>
          <target state="translated">바이트는 채널의 현재 위치에 영향을 미치지 않는 방식으로 파일의 절대 위치에서 &lt;a href=&quot;filechannel#read-java.nio.ByteBuffer-long-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 거나 &lt;a href=&quot;filechannel#write-java.nio.ByteBuffer-long-&quot;&gt; &lt;code&gt;&lt;i&gt;written&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="b52c66a39c2dcd87acc3f562288afe40940ed216" translate="yes" xml:space="preserve">
          <source>C is searched for a</source>
          <target state="translated">C는</target>
        </trans-unit>
        <trans-unit id="55db48a1c2eaa352054c2e180d0428783f813201" translate="yes" xml:space="preserve">
          <source>C size .</source>
          <target state="translated">C 사이즈.</target>
        </trans-unit>
        <trans-unit id="38f82195898121489cdb783d143a5b18c70b8096" translate="yes" xml:space="preserve">
          <source>C size.</source>
          <target state="translated">C size.</target>
        </trans-unit>
        <trans-unit id="dc922d3540e2f2cee30d127af66bef44b9aa356d" translate="yes" xml:space="preserve">
          <source>C's declared public instance and static methods as returned by &lt;a href=&quot;#getDeclaredMethods()&quot;&gt;&lt;code&gt;getDeclaredMethods()&lt;/code&gt;&lt;/a&gt; and filtered to include only public methods that match given &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;parameterTypes&lt;/code&gt;</source>
          <target state="translated">C's declared public instance and static methods as returned by &lt;a href=&quot;#getDeclaredMethods()&quot;&gt; &lt;code&gt;getDeclaredMethods()&lt;/code&gt; &lt;/a&gt; and filtered to include only public methods that match given &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;parameterTypes&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="293a1b6d19f6d26e5466b08c9e3936f967f5bf85" translate="yes" xml:space="preserve">
          <source>C's declared public instance and static methods as returned by &lt;a href=&quot;#getDeclaredMethods()&quot;&gt;&lt;code&gt;getDeclaredMethods()&lt;/code&gt;&lt;/a&gt; and filtered to include only public methods.</source>
          <target state="translated">C's declared public instance and static methods as returned by &lt;a href=&quot;#getDeclaredMethods()&quot;&gt; &lt;code&gt;getDeclaredMethods()&lt;/code&gt; &lt;/a&gt; and filtered to include only public methods.</target>
        </trans-unit>
        <trans-unit id="3b9248ce75e6a9c58914137034a1b9396e54fb68" translate="yes" xml:space="preserve">
          <source>C-style and C++-style comments are not recognized.</source>
          <target state="translated">C 스타일 및 C ++ 스타일 주석은 인식되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a8b43ca435894a2a9598ab4896278cbb4bd996cd" translate="yes" xml:space="preserve">
          <source>C0</source>
          <target state="translated">C0</target>
        </trans-unit>
        <trans-unit id="28c27031fe7162d732a1c2e209a40bbfcb5fef90" translate="yes" xml:space="preserve">
          <source>C1</source>
          <target state="translated">C1</target>
        </trans-unit>
        <trans-unit id="be3cc23151953a49b9b7b7c7919b6c3b6d0c68f6" translate="yes" xml:space="preserve">
          <source>C10</source>
          <target state="translated">C10</target>
        </trans-unit>
        <trans-unit id="82213f307b7b13452bcf88c9d6c341577ad518fe" translate="yes" xml:space="preserve">
          <source>C14NMethodParameterSpec</source>
          <target state="translated">C14NMethodParameterSpec</target>
        </trans-unit>
        <trans-unit id="cb7d29f43f4a81ff1f3a1202c80293337faa7a0a" translate="yes" xml:space="preserve">
          <source>C2</source>
          <target state="translated">C2</target>
        </trans-unit>
        <trans-unit id="0371438f82b01efb31e37cd12a4a6b6c819b0e71" translate="yes" xml:space="preserve">
          <source>C3</source>
          <target state="translated">C3</target>
        </trans-unit>
        <trans-unit id="aaa025b3826509827b773a79dde61238b7846c09" translate="yes" xml:space="preserve">
          <source>C4</source>
          <target state="translated">C4</target>
        </trans-unit>
        <trans-unit id="fbeff7287bb8d46577504b6c72d5ba3e5ac86548" translate="yes" xml:space="preserve">
          <source>C5</source>
          <target state="translated">C5</target>
        </trans-unit>
        <trans-unit id="742fbe7716cc1fdef3e9a8d5c58b0d693991744f" translate="yes" xml:space="preserve">
          <source>C6</source>
          <target state="translated">C6</target>
        </trans-unit>
        <trans-unit id="a838e58546e5c8e88be9a58212202d359a3a1b52" translate="yes" xml:space="preserve">
          <source>C7</source>
          <target state="translated">C7</target>
        </trans-unit>
        <trans-unit id="f95703122fe37e8cf857ff5362b1211bf102cf6f" translate="yes" xml:space="preserve">
          <source>C8</source>
          <target state="translated">C8</target>
        </trans-unit>
        <trans-unit id="b31f0373a7e1ed6ee0116b9eaaed78f6c5db21c8" translate="yes" xml:space="preserve">
          <source>C9</source>
          <target state="translated">C9</target>
        </trans-unit>
        <trans-unit id="1b3cb484695189b567d88ee9266fe7c295405a5c" translate="yes" xml:space="preserve">
          <source>CALL</source>
          <target state="translated">CALL</target>
        </trans-unit>
        <trans-unit id="de30744df5a20a8c74f4a30166a00d3504659eb2" translate="yes" xml:space="preserve">
          <source>CANADA</source>
          <target state="translated">CANADA</target>
        </trans-unit>
        <trans-unit id="405a5cf281ff89b9431a40683692afdc5141f25b" translate="yes" xml:space="preserve">
          <source>CANADA_FRENCH</source>
          <target state="translated">CANADA_FRENCH</target>
        </trans-unit>
        <trans-unit id="77a0ae12afcf14565201ae75ed086a7f24d3589e" translate="yes" xml:space="preserve">
          <source>CANADIAN_ABORIGINAL</source>
          <target state="translated">CANADIAN_ABORIGINAL</target>
        </trans-unit>
        <trans-unit id="1507c40f043249fe6b5e25ba0cc97010cefa6d12" translate="yes" xml:space="preserve">
          <source>CANCEL</source>
          <target state="translated">CANCEL</target>
        </trans-unit>
        <trans-unit id="9e0797c3a666de4304d0cc30c2dfde314953f49d" translate="yes" xml:space="preserve">
          <source>CANCEL option.</source>
          <target state="translated">취소 옵션.</target>
        </trans-unit>
        <trans-unit id="30b6a2afeb9cba7b3efa34a31376744b55640535" translate="yes" xml:space="preserve">
          <source>CANCELED</source>
          <target state="translated">CANCELED</target>
        </trans-unit>
        <trans-unit id="f74e9a146548084f175ddf4973355597f603d3cd" translate="yes" xml:space="preserve">
          <source>CANCEL_OPTION</source>
          <target state="translated">CANCEL_OPTION</target>
        </trans-unit>
        <trans-unit id="4f5ffc956a66908cff0e9bba789dc57d43df9b95" translate="yes" xml:space="preserve">
          <source>CANCEL_SELECTION</source>
          <target state="translated">CANCEL_SELECTION</target>
        </trans-unit>
        <trans-unit id="d9938cb5e6af4445e34cb7de7aaa7c36ced2b056" translate="yes" xml:space="preserve">
          <source>CANONICAL</source>
          <target state="translated">CANONICAL</target>
        </trans-unit>
        <trans-unit id="c2c9bd65720f7996dae0030b203f2cb301d57ba6" translate="yes" xml:space="preserve">
          <source>CANONICAL_DECOMPOSITION</source>
          <target state="translated">CANONICAL_DECOMPOSITION</target>
        </trans-unit>
        <trans-unit id="50c7da8a937f84c2d7d3ad818f8998dadab44494" translate="yes" xml:space="preserve">
          <source>CANONICAL_DECOMPOSITION corresponds to Normalization Form D as described in &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt;Unicode Technical Report #15&lt;/a&gt;.</source>
          <target state="translated">CANONICAL_DECOMPOSITION은 &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt;Unicode Technical Report # 15에&lt;/a&gt; 설명 된 정규화 형식 D에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="2fceaf18aeaae45b8ffbc64627513e7bc19aa524" translate="yes" xml:space="preserve">
          <source>CANONICAL_DECOMPOSITION corresponds to Normalization Form D as described in &lt;a href=&quot;https://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt;Unicode Technical Report #15&lt;/a&gt;.</source>
          <target state="translated">CANONICAL_DECOMPOSITION은 &lt;a href=&quot;https://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt;유니 코드 기술 보고서 ​​# 15에&lt;/a&gt; 설명 된대로 정규화 양식 D에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="5cdc6fa477463d5f2868f0830b1453a306f2fa9f" translate="yes" xml:space="preserve">
          <source>CANON_EQ</source>
          <target state="translated">CANON_EQ</target>
        </trans-unit>
        <trans-unit id="7948c1ad51b349f9f1cb7e9b58a9857c79b0a8b0" translate="yes" xml:space="preserve">
          <source>CANT_START</source>
          <target state="translated">CANT_START</target>
        </trans-unit>
        <trans-unit id="aca68bea572e765df08a141ee61c92eefdc3c5dd" translate="yes" xml:space="preserve">
          <source>CANVAS</source>
          <target state="translated">CANVAS</target>
        </trans-unit>
        <trans-unit id="346424a6e5c27d0da45a066c32a5506671c9fdb4" translate="yes" xml:space="preserve">
          <source>CAPS_LOCK</source>
          <target state="translated">CAPS_LOCK</target>
        </trans-unit>
        <trans-unit id="b842a5a39fa757231e9c005b96e017c12e19dd62" translate="yes" xml:space="preserve">
          <source>CAPTION</source>
          <target state="translated">CAPTION</target>
        </trans-unit>
        <trans-unit id="64faaab58e5820188ef600e98bd37baa6de793e3" translate="yes" xml:space="preserve">
          <source>CAPTURING_PHASE</source>
          <target state="translated">CAPTURING_PHASE</target>
        </trans-unit>
        <trans-unit id="0b9e4dfe8ca34dff8cbf110ffca4948d9a39d7bf" translate="yes" xml:space="preserve">
          <source>CAP_BUTT</source>
          <target state="translated">CAP_BUTT</target>
        </trans-unit>
        <trans-unit id="4ebdab135878fe9780cacc8574f2b7bb06e2df75" translate="yes" xml:space="preserve">
          <source>CAP_ROUND</source>
          <target state="translated">CAP_ROUND</target>
        </trans-unit>
        <trans-unit id="0974aa4fd60a40e2761dcdc8c9aca2554d50ac6c" translate="yes" xml:space="preserve">
          <source>CAP_SQUARE</source>
          <target state="translated">CAP_SQUARE</target>
        </trans-unit>
        <trans-unit id="0c55a314b3991af4065a6d95b455cf9eb557462c" translate="yes" xml:space="preserve">
          <source>CARD_ABSENT</source>
          <target state="translated">CARD_ABSENT</target>
        </trans-unit>
        <trans-unit id="eca496866209af4b5293fdd49405a778a2e7dbe0" translate="yes" xml:space="preserve">
          <source>CARD_INSERTION</source>
          <target state="translated">CARD_INSERTION</target>
        </trans-unit>
        <trans-unit id="e8629f43fc74290b8600059a1c9d9833ae4d461b" translate="yes" xml:space="preserve">
          <source>CARD_PRESENT</source>
          <target state="translated">CARD_PRESENT</target>
        </trans-unit>
        <trans-unit id="f2fd3c8660de38c22551df7e51ee2bf66b44c3c9" translate="yes" xml:space="preserve">
          <source>CARD_REMOVAL</source>
          <target state="translated">CARD_REMOVAL</target>
        </trans-unit>
        <trans-unit id="ca9492c55521d58679efddf222b04fa3107c7b3e" translate="yes" xml:space="preserve">
          <source>CARET</source>
          <target state="translated">CARET</target>
        </trans-unit>
        <trans-unit id="dbc085ec855f8b3a49a9a1a6f68c65e17eb006d9" translate="yes" xml:space="preserve">
          <source>CARET_POSITION_CHANGED</source>
          <target state="translated">CARET_POSITION_CHANGED</target>
        </trans-unit>
        <trans-unit id="c322d8102091055b636aa85610f0bf11ac66f79b" translate="yes" xml:space="preserve">
          <source>CARIAN</source>
          <target state="translated">CARIAN</target>
        </trans-unit>
        <trans-unit id="55c417bda058d7601349aeb7556e3d8607c77f5d" translate="yes" xml:space="preserve">
          <source>CASE</source>
          <target state="translated">CASE</target>
        </trans-unit>
        <trans-unit id="10e789ffd9f830f91d28d54a15a2ea88b12a4bcb" translate="yes" xml:space="preserve">
          <source>CASE_INSENSITIVE</source>
          <target state="translated">CASE_INSENSITIVE</target>
        </trans-unit>
        <trans-unit id="05dff59689b060e392059bcb723a36e923fd7076" translate="yes" xml:space="preserve">
          <source>CASE_INSENSITIVE_ORDER</source>
          <target state="translated">CASE_INSENSITIVE_ORDER</target>
        </trans-unit>
        <trans-unit id="9a0adec3a0ec4477af85d5058520a6b061d9d716" translate="yes" xml:space="preserve">
          <source>CAT - Africa/Harare</source>
          <target state="translated">고양이-아프리카 /해라</target>
        </trans-unit>
        <trans-unit id="5e5312ba58e8cbd0d48442a0a88d2873f72fdc99" translate="yes" xml:space="preserve">
          <source>CATCH</source>
          <target state="translated">CATCH</target>
        </trans-unit>
        <trans-unit id="e74e225179d9178007bd00699acfcdc194f9ef3f" translate="yes" xml:space="preserve">
          <source>CAUCASIAN_ALBANIAN</source>
          <target state="translated">CAUCASIAN_ALBANIAN</target>
        </trans-unit>
        <trans-unit id="7293ca090f945fa4bb4262f6c9e344afb583db9c" translate="yes" xml:space="preserve">
          <source>CA_COMPROMISE</source>
          <target state="translated">CA_COMPROMISE</target>
        </trans-unit>
        <trans-unit id="56fe21163209fd8398405601090c40cdb82370d1" translate="yes" xml:space="preserve">
          <source>CBC</source>
          <target state="translated">CBC</target>
        </trans-unit>
        <trans-unit id="494bff78142278bf15c7806a089d7c002766f8bd" translate="yes" xml:space="preserve">
          <source>CDATA</source>
          <target state="translated">CDATA</target>
        </trans-unit>
        <trans-unit id="ca09c39a8289a477c6381ad02e2455a807023664" translate="yes" xml:space="preserve">
          <source>CDATA sections are used to escape blocks of text containing characters that would otherwise be regarded as markup.</source>
          <target state="translated">CDATA sections are used to escape blocks of text containing characters that would otherwise be regarded as markup.</target>
        </trans-unit>
        <trans-unit id="5d5b92244e96dbd33c8d7f02a8e847754779287f" translate="yes" xml:space="preserve">
          <source>CDATA sections are used to escape blocks of text containing characters that would otherwise be regarded as markup. The only delimiter that is recognized in a CDATA section is the &quot;]]&amp;gt;&quot; string that ends the CDATA section. CDATA sections cannot be nested. Their primary purpose is for including material such as XML fragments, without needing to escape all the delimiters.</source>
          <target state="translated">CDATA sections are used to escape blocks of text containing characters that would otherwise be regarded as markup. The only delimiter that is recognized in a CDATA section is the &quot;]]&amp;gt;&quot; string that ends the CDATA section. CDATA sections cannot be nested. Their primary purpose is for including material such as XML fragments, without needing to escape all the delimiters.</target>
        </trans-unit>
        <trans-unit id="fc92460aa983800938d07f61499adeb681e0fcf8" translate="yes" xml:space="preserve">
          <source>CDATASection</source>
          <target state="translated">CDATASection</target>
        </trans-unit>
        <trans-unit id="2a3f4692604f12351e8f5cce27f5d2cbe5cb4fd5" translate="yes" xml:space="preserve">
          <source>CDATA_SECTION_ELEMENTS</source>
          <target state="translated">CDATA_SECTION_ELEMENTS</target>
        </trans-unit>
        <trans-unit id="8cf36c957e2d7ea5ab4442c251007d8da0d135b2" translate="yes" xml:space="preserve">
          <source>CDATA_SECTION_NODE</source>
          <target state="translated">CDATA_SECTION_NODE</target>
        </trans-unit>
        <trans-unit id="d600a2de4de63d7d868b37ab702a9c92f4a3fae2" translate="yes" xml:space="preserve">
          <source>CD_Boolean</source>
          <target state="translated">CD_Boolean</target>
        </trans-unit>
        <trans-unit id="a5d3b3c8a6473445421082c9651d6204e80d51d8" translate="yes" xml:space="preserve">
          <source>CD_Byte</source>
          <target state="translated">CD_Byte</target>
        </trans-unit>
        <trans-unit id="392dc1c8a38db04ee5fc2a1347056d97a66feeba" translate="yes" xml:space="preserve">
          <source>CD_CallSite</source>
          <target state="translated">CD_CallSite</target>
        </trans-unit>
        <trans-unit id="9e4a588c3e7b11a290f4afa6a13f2dadcb33713e" translate="yes" xml:space="preserve">
          <source>CD_Character</source>
          <target state="translated">CD_Character</target>
        </trans-unit>
        <trans-unit id="97433a3bd571c6cd3a03fd06a02ba8b4254ca6b2" translate="yes" xml:space="preserve">
          <source>CD_Class</source>
          <target state="translated">CD_Class</target>
        </trans-unit>
        <trans-unit id="dd6901d9448b3b1d33f1c7f17dc62e4cee6d1b1e" translate="yes" xml:space="preserve">
          <source>CD_ClassDesc</source>
          <target state="translated">CD_ClassDesc</target>
        </trans-unit>
        <trans-unit id="eba8f2939882751f3fe86f14caf1e629985b54e6" translate="yes" xml:space="preserve">
          <source>CD_Collection</source>
          <target state="translated">CD_Collection</target>
        </trans-unit>
        <trans-unit id="f675f184a5f5da812739a3173406a4391c9f0f63" translate="yes" xml:space="preserve">
          <source>CD_ConstantBootstraps</source>
          <target state="translated">CD_ConstantBootstraps</target>
        </trans-unit>
        <trans-unit id="221b52666f6b9d11eee369a211469ef5f46cb685" translate="yes" xml:space="preserve">
          <source>CD_ConstantDesc</source>
          <target state="translated">CD_ConstantDesc</target>
        </trans-unit>
        <trans-unit id="01ec30cbdf6506f6541d59afb319196de1b611dc" translate="yes" xml:space="preserve">
          <source>CD_DirectMethodHandleDesc</source>
          <target state="translated">CD_DirectMethodHandleDesc</target>
        </trans-unit>
        <trans-unit id="4430c10b1ff4ec32f2bbbe4b5ce1268d42532bf4" translate="yes" xml:space="preserve">
          <source>CD_Double</source>
          <target state="translated">CD_Double</target>
        </trans-unit>
        <trans-unit id="68fca3fefbc5fb1d137296576ed1ead54e8f0c3c" translate="yes" xml:space="preserve">
          <source>CD_DynamicCallSiteDesc</source>
          <target state="translated">CD_DynamicCallSiteDesc</target>
        </trans-unit>
        <trans-unit id="aaa2ba9d02244e8d3e5f85e7748c662dabc5cb82" translate="yes" xml:space="preserve">
          <source>CD_DynamicConstantDesc</source>
          <target state="translated">CD_DynamicConstantDesc</target>
        </trans-unit>
        <trans-unit id="487ff072d1b00a5ae8ff7778cd819822b807aa1e" translate="yes" xml:space="preserve">
          <source>CD_Enum</source>
          <target state="translated">CD_Enum</target>
        </trans-unit>
        <trans-unit id="cb2857c303ba820f8ad63924c6d25b83511218b3" translate="yes" xml:space="preserve">
          <source>CD_EnumDesc</source>
          <target state="translated">CD_EnumDesc</target>
        </trans-unit>
        <trans-unit id="e6d68b028331fb33d30b7cac1e3fdc7b169dc323" translate="yes" xml:space="preserve">
          <source>CD_Exception</source>
          <target state="translated">CD_Exception</target>
        </trans-unit>
        <trans-unit id="55876e689aca5b7b0bf1d8985ed4443134e904a3" translate="yes" xml:space="preserve">
          <source>CD_Float</source>
          <target state="translated">CD_Float</target>
        </trans-unit>
        <trans-unit id="4ac86db050883fd2259eac7c5e9c28e6abf6aa64" translate="yes" xml:space="preserve">
          <source>CD_Integer</source>
          <target state="translated">CD_Integer</target>
        </trans-unit>
        <trans-unit id="66ec3d41c1c2b11192a54baa65ff91eab7603b99" translate="yes" xml:space="preserve">
          <source>CD_List</source>
          <target state="translated">CD_List</target>
        </trans-unit>
        <trans-unit id="0a1415bf145426e462dddde488264ca2c11aa8a9" translate="yes" xml:space="preserve">
          <source>CD_Long</source>
          <target state="translated">CD_Long</target>
        </trans-unit>
        <trans-unit id="fc4c331530f9b463f4ae96a0493f5d72c6a38784" translate="yes" xml:space="preserve">
          <source>CD_Map</source>
          <target state="translated">CD_Map</target>
        </trans-unit>
        <trans-unit id="44f673cc754a8adc291d9260ccd9b4ef256af399" translate="yes" xml:space="preserve">
          <source>CD_MethodHandle</source>
          <target state="translated">CD_MethodHandle</target>
        </trans-unit>
        <trans-unit id="2ee41077ba3bef0bfaa9947e0262f588ed8c8525" translate="yes" xml:space="preserve">
          <source>CD_MethodHandleDesc</source>
          <target state="translated">CD_MethodHandleDesc</target>
        </trans-unit>
        <trans-unit id="9003081d03decdfbc62343388ee1fe841a8a6bb8" translate="yes" xml:space="preserve">
          <source>CD_MethodHandleDesc_Kind</source>
          <target state="translated">CD_MethodHandleDesc_Kind</target>
        </trans-unit>
        <trans-unit id="4a72b3452f566ef6a6de04fde6281266225b72e7" translate="yes" xml:space="preserve">
          <source>CD_MethodHandles</source>
          <target state="translated">CD_MethodHandles</target>
        </trans-unit>
        <trans-unit id="0013b569205786bd1b26ae2480b9f21be1f61dc7" translate="yes" xml:space="preserve">
          <source>CD_MethodHandles_Lookup</source>
          <target state="translated">CD_MethodHandles_Lookup</target>
        </trans-unit>
        <trans-unit id="e77b3eeb5c5467d57e5ea05f6a4cc73bcde2714e" translate="yes" xml:space="preserve">
          <source>CD_MethodType</source>
          <target state="translated">CD_MethodType</target>
        </trans-unit>
        <trans-unit id="c316d662bd546421f2c2f293a5d6c2a8fab5ac33" translate="yes" xml:space="preserve">
          <source>CD_MethodTypeDesc</source>
          <target state="translated">CD_MethodTypeDesc</target>
        </trans-unit>
        <trans-unit id="5ad5e62fee5d64983d1861ea6b7151a49a8ab43e" translate="yes" xml:space="preserve">
          <source>CD_Number</source>
          <target state="translated">CD_Number</target>
        </trans-unit>
        <trans-unit id="4a9d5e29ac2f23ba17a71b626e4a699853453771" translate="yes" xml:space="preserve">
          <source>CD_Object</source>
          <target state="translated">CD_Object</target>
        </trans-unit>
        <trans-unit id="576ee32de3f8b39986126f2feb4cae6cce589904" translate="yes" xml:space="preserve">
          <source>CD_Set</source>
          <target state="translated">CD_Set</target>
        </trans-unit>
        <trans-unit id="8b44befccd575e74918fe18235b5c2076dc20ce3" translate="yes" xml:space="preserve">
          <source>CD_Short</source>
          <target state="translated">CD_Short</target>
        </trans-unit>
        <trans-unit id="fc9630f334c471c3bee268732b6f6dbe74f548f3" translate="yes" xml:space="preserve">
          <source>CD_String</source>
          <target state="translated">CD_String</target>
        </trans-unit>
        <trans-unit id="9b551f2982a63ce74c54f7c8cb3c8ff27445ddd8" translate="yes" xml:space="preserve">
          <source>CD_Throwable</source>
          <target state="translated">CD_Throwable</target>
        </trans-unit>
        <trans-unit id="f32fa9d46d8096023f7fc7168728734a89e1b3c9" translate="yes" xml:space="preserve">
          <source>CD_VarHandle</source>
          <target state="translated">CD_VarHandle</target>
        </trans-unit>
        <trans-unit id="1a7d3e4d21477efaabf7f7909f87ff8e8b4f3dab" translate="yes" xml:space="preserve">
          <source>CD_VarHandleDesc</source>
          <target state="translated">CD_VarHandleDesc</target>
        </trans-unit>
        <trans-unit id="0ff8259ed3269c946f9e023a84837ac12020b87e" translate="yes" xml:space="preserve">
          <source>CD_Void</source>
          <target state="translated">CD_Void</target>
        </trans-unit>
        <trans-unit id="55bd591f3599a920d39cc144294882f987cb70c0" translate="yes" xml:space="preserve">
          <source>CD_boolean</source>
          <target state="translated">CD_boolean</target>
        </trans-unit>
        <trans-unit id="e2f09183bf1a4f2ea3feba8e0aaeeabbd619cd8c" translate="yes" xml:space="preserve">
          <source>CD_byte</source>
          <target state="translated">CD_byte</target>
        </trans-unit>
        <trans-unit id="ca82d5897519109b9440347d922f929ff072d5d7" translate="yes" xml:space="preserve">
          <source>CD_char</source>
          <target state="translated">CD_char</target>
        </trans-unit>
        <trans-unit id="ab266e65b7c0f24098d1324e349f7e9fc7000d2a" translate="yes" xml:space="preserve">
          <source>CD_double</source>
          <target state="translated">CD_double</target>
        </trans-unit>
        <trans-unit id="26cc607fb1cc81c5f3ba7e18ec617e550e423358" translate="yes" xml:space="preserve">
          <source>CD_float</source>
          <target state="translated">CD_float</target>
        </trans-unit>
        <trans-unit id="c9ea4ea12c1abd83e884df0010b32e45d4929ca2" translate="yes" xml:space="preserve">
          <source>CD_int</source>
          <target state="translated">CD_int</target>
        </trans-unit>
        <trans-unit id="446b40d1f4a8fa5edbe36ca3180c9b2320c2d92f" translate="yes" xml:space="preserve">
          <source>CD_long</source>
          <target state="translated">CD_long</target>
        </trans-unit>
        <trans-unit id="3be449f2ef5d5076e03ddf6fb98d357fa3b6910d" translate="yes" xml:space="preserve">
          <source>CD_short</source>
          <target state="translated">CD_short</target>
        </trans-unit>
        <trans-unit id="3bc6f8b5716ae921300e6764340119d62713734a" translate="yes" xml:space="preserve">
          <source>CD_void</source>
          <target state="translated">CD_void</target>
        </trans-unit>
        <trans-unit id="b77da9422330fead9ab9ec32fbbd59bb9d5fc19a" translate="yes" xml:space="preserve">
          <source>CE</source>
          <target state="translated">CE</target>
        </trans-unit>
        <trans-unit id="9b840af21581bd3b3ea416fa8ad2dda03c9b0dd7" translate="yes" xml:space="preserve">
          <source>CEILING</source>
          <target state="translated">CEILING</target>
        </trans-unit>
        <trans-unit id="620b737c3bfd3d5f574dba7ba7b5a5d572340ef2" translate="yes" xml:space="preserve">
          <source>CELLEDITOR</source>
          <target state="translated">CELLEDITOR</target>
        </trans-unit>
        <trans-unit id="da03448b686c8f7a604b0a37418c2c1d9fd4b30a" translate="yes" xml:space="preserve">
          <source>CELLPADDING</source>
          <target state="translated">CELLPADDING</target>
        </trans-unit>
        <trans-unit id="ce985febbbd7c75cf4b43f32f6950205617f029c" translate="yes" xml:space="preserve">
          <source>CELLSPACING</source>
          <target state="translated">CELLSPACING</target>
        </trans-unit>
        <trans-unit id="cad7a33e358d9f9d52b89d577682354d40012e64" translate="yes" xml:space="preserve">
          <source>CELL_EDITOR_PROPERTY</source>
          <target state="translated">CELL_EDITOR_PROPERTY</target>
        </trans-unit>
        <trans-unit id="88e5f64f3d9d8c9df669bd4cd86becb1ea4976fb" translate="yes" xml:space="preserve">
          <source>CELL_RENDERER_PROPERTY</source>
          <target state="translated">CELL_RENDERER_PROPERTY</target>
        </trans-unit>
        <trans-unit id="fbab0510c931da86c52704ea1e99d4124cd5f298" translate="yes" xml:space="preserve">
          <source>CENATT</source>
          <target state="translated">CENATT</target>
        </trans-unit>
        <trans-unit id="ce8e75c04a03b8ca486f1c2e6add9bf7d728e32f" translate="yes" xml:space="preserve">
          <source>CENATX</source>
          <target state="translated">CENATX</target>
        </trans-unit>
        <trans-unit id="c47eeee3fced691e4c289c3cec60f19b07f52d28" translate="yes" xml:space="preserve">
          <source>CENCOM</source>
          <target state="translated">CENCOM</target>
        </trans-unit>
        <trans-unit id="b9d7f569a3ad69f31cf85eafdebd468b25625db6" translate="yes" xml:space="preserve">
          <source>CENCRC</source>
          <target state="translated">CENCRC</target>
        </trans-unit>
        <trans-unit id="eed19d59412f63fc47761f1b4fac0c5e09fbaa38" translate="yes" xml:space="preserve">
          <source>CENDSK</source>
          <target state="translated">CENDSK</target>
        </trans-unit>
        <trans-unit id="cf45f5a55c3cef01d10412fb820d074abd2035e7" translate="yes" xml:space="preserve">
          <source>CENEXT</source>
          <target state="translated">CENEXT</target>
        </trans-unit>
        <trans-unit id="9e3935a6def7c4333d59e14912eb4f4b8b8e4896" translate="yes" xml:space="preserve">
          <source>CENFLG</source>
          <target state="translated">CENFLG</target>
        </trans-unit>
        <trans-unit id="df210772ae6e5bef738378a5dc6e0ce503dc3122" translate="yes" xml:space="preserve">
          <source>CENHDR</source>
          <target state="translated">CENHDR</target>
        </trans-unit>
        <trans-unit id="e83ce9c23f2103bba6dd996001c291399fa09cf7" translate="yes" xml:space="preserve">
          <source>CENHOW</source>
          <target state="translated">CENHOW</target>
        </trans-unit>
        <trans-unit id="8cfb942b05a65db9166a6d4fae11a6c74da62bd6" translate="yes" xml:space="preserve">
          <source>CENLEN</source>
          <target state="translated">CENLEN</target>
        </trans-unit>
        <trans-unit id="01850cca552bc017a01001e48cdd492d2b993c2e" translate="yes" xml:space="preserve">
          <source>CENNAM</source>
          <target state="translated">CENNAM</target>
        </trans-unit>
        <trans-unit id="d8853c7b4a13476c389ac7b2723d7353cb8bf9cc" translate="yes" xml:space="preserve">
          <source>CENOFF</source>
          <target state="translated">CENOFF</target>
        </trans-unit>
        <trans-unit id="29014448ec337d2bd35cea2519629be3abe71aaa" translate="yes" xml:space="preserve">
          <source>CENSIG</source>
          <target state="translated">CENSIG</target>
        </trans-unit>
        <trans-unit id="2e6d5a1dba4938c8309b36a50699ec6adf85c315" translate="yes" xml:space="preserve">
          <source>CENSIZ</source>
          <target state="translated">CENSIZ</target>
        </trans-unit>
        <trans-unit id="c7eb0f35af725da3dc60c90ea4ae1aa406f4c05c" translate="yes" xml:space="preserve">
          <source>CENTER</source>
          <target state="translated">CENTER</target>
        </trans-unit>
        <trans-unit id="10f5cbbea013b203c08c7df2f39430d8c907a170" translate="yes" xml:space="preserve">
          <source>CENTER_ALIGNMENT</source>
          <target state="translated">CENTER_ALIGNMENT</target>
        </trans-unit>
        <trans-unit id="6e3fd1e806e90a6517c162aae4fff0f3bf6055e8" translate="yes" xml:space="preserve">
          <source>CENTER_BASELINE</source>
          <target state="translated">CENTER_BASELINE</target>
        </trans-unit>
        <trans-unit id="284206fedbae60204c9056afef476d0df75e5f62" translate="yes" xml:space="preserve">
          <source>CENTER_OFFSET</source>
          <target state="translated">CENTER_OFFSET</target>
        </trans-unit>
        <trans-unit id="a8753e4d2724f082c94118bc33d6a4256fec6dfa" translate="yes" xml:space="preserve">
          <source>CENTIM</source>
          <target state="translated">CENTIM</target>
        </trans-unit>
        <trans-unit id="970caf4339ac82e74a396289119f90a34e7de67c" translate="yes" xml:space="preserve">
          <source>CENTURIES</source>
          <target state="translated">CENTURIES</target>
        </trans-unit>
        <trans-unit id="d36c882dea8e1745711e33427ce54832e1fb3c97" translate="yes" xml:space="preserve">
          <source>CENVEM</source>
          <target state="translated">CENVEM</target>
        </trans-unit>
        <trans-unit id="a1452adb71eeb20c1332ba430f4d38f511db8bfa" translate="yes" xml:space="preserve">
          <source>CENVER</source>
          <target state="translated">CENVER</target>
        </trans-unit>
        <trans-unit id="398e092959400ce67b8805c41ad9546292733b57" translate="yes" xml:space="preserve">
          <source>CERTIFICATE_HOLD</source>
          <target state="translated">CERTIFICATE_HOLD</target>
        </trans-unit>
        <trans-unit id="88d92e450810d91aa53d39f8ef8ceb5a014bb03b" translate="yes" xml:space="preserve">
          <source>CESSATION_OF_OPERATION</source>
          <target state="translated">CESSATION_OF_OPERATION</target>
        </trans-unit>
        <trans-unit id="d0a7972528880d5c3bc82073c2567d9c352a4dfd" translate="yes" xml:space="preserve">
          <source>CFB</source>
          <target state="translated">CFB</target>
        </trans-unit>
        <trans-unit id="654878a8b2f7ce2b973a46579fddad0fd0455497" translate="yes" xml:space="preserve">
          <source>CHAKMA</source>
          <target state="translated">CHAKMA</target>
        </trans-unit>
        <trans-unit id="240d47eceef79b6bd00cdfc3f397948e28c3e28a" translate="yes" xml:space="preserve">
          <source>CHAM</source>
          <target state="translated">CHAM</target>
        </trans-unit>
        <trans-unit id="07b146812266b4e45ec799d003ee9e8fbe8669f2" translate="yes" xml:space="preserve">
          <source>CHANGE</source>
          <target state="translated">CHANGE</target>
        </trans-unit>
        <trans-unit id="3bb0a9ebe5fa8bfd63f46174141e8cd2ef430537" translate="yes" xml:space="preserve">
          <source>CHANGED</source>
          <target state="translated">CHANGED</target>
        </trans-unit>
        <trans-unit id="7d5c9bf3acb2d6a7d949b221090280e09c07c4d9" translate="yes" xml:space="preserve">
          <source>CHANNEL_PRESSURE</source>
          <target state="translated">CHANNEL_PRESSURE</target>
        </trans-unit>
        <trans-unit id="49279edf04879138e2ca01fe4da87f165bb8a556" translate="yes" xml:space="preserve">
          <source>CHAR</source>
          <target state="translated">CHAR</target>
        </trans-unit>
        <trans-unit id="6529f695ef6bea2b61be4f42d6af092fc3b74190" translate="yes" xml:space="preserve">
          <source>CHARACTER</source>
          <target state="translated">CHARACTER</target>
        </trans-unit>
        <trans-unit id="e0c7555f6a51645ace793bb65fbd9c1ea646d54f" translate="yes" xml:space="preserve">
          <source>CHARACTERS</source>
          <target state="translated">CHARACTERS</target>
        </trans-unit>
        <trans-unit id="747b6ab55b2977cff67bd269e90144e490dfc31b" translate="yes" xml:space="preserve">
          <source>CHARSET_RULE</source>
          <target state="translated">CHARSET_RULE</target>
        </trans-unit>
        <trans-unit id="9cc3e9f13c82cdb660a28e433d39775416e54f75" translate="yes" xml:space="preserve">
          <source>CHAR_ARRAY</source>
          <target state="translated">CHAR_ARRAY</target>
        </trans-unit>
        <trans-unit id="ee6b489f0289728c3819dc331f1663c96ca0785c" translate="yes" xml:space="preserve">
          <source>CHAR_LITERAL</source>
          <target state="translated">CHAR_LITERAL</target>
        </trans-unit>
        <trans-unit id="bc473ef52785062f9812e2577188f1acfc4bf88e" translate="yes" xml:space="preserve">
          <source>CHAR_REPLACEMENT</source>
          <target state="translated">CHAR_REPLACEMENT</target>
        </trans-unit>
        <trans-unit id="1d67db598706684578983ce447189300b245a732" translate="yes" xml:space="preserve">
          <source>CHAR_UNDEFINED</source>
          <target state="translated">CHAR_UNDEFINED</target>
        </trans-unit>
        <trans-unit id="661f13bc63a7f123bb5a8ba52bbf1df2ba244cee" translate="yes" xml:space="preserve">
          <source>CHECKED</source>
          <target state="translated">CHECKED</target>
        </trans-unit>
        <trans-unit id="6f3c66a8af665e0e7dd0e71fd0fe3d6b8fbd87ae" translate="yes" xml:space="preserve">
          <source>CHECK_BOX</source>
          <target state="translated">CHECK_BOX</target>
        </trans-unit>
        <trans-unit id="bfda331a11384a15dd4802009ed7e8e161815247" translate="yes" xml:space="preserve">
          <source>CHECK_BOX_MENU_ITEM</source>
          <target state="translated">CHECK_BOX_MENU_ITEM</target>
        </trans-unit>
        <trans-unit id="32a509e2ec6420c48a4ab53efb0083235ddd425e" translate="yes" xml:space="preserve">
          <source>CHEROKEE</source>
          <target state="translated">CHEROKEE</target>
        </trans-unit>
        <trans-unit id="4cc11879e11500d7edb0d9a6da4258940a52791b" translate="yes" xml:space="preserve">
          <source>CHEROKEE_SUPPLEMENT</source>
          <target state="translated">CHEROKEE_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="c3f7bbbc51d39bf49239ac747ee0cf65c4532968" translate="yes" xml:space="preserve">
          <source>CHESS_SYMBOLS</source>
          <target state="translated">CHESS_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="8af25b6e0a03da1c4dcb2db3d04cc7db46a0a2f5" translate="yes" xml:space="preserve">
          <source>CHILD_NODE_OF</source>
          <target state="translated">CHILD_NODE_OF</target>
        </trans-unit>
        <trans-unit id="16ecab73cd5cf1d40e054c64d85e53287283a63d" translate="yes" xml:space="preserve">
          <source>CHILD_NODE_OF_PROPERTY</source>
          <target state="translated">CHILD_NODE_OF_PROPERTY</target>
        </trans-unit>
        <trans-unit id="fe4dc7fc26f7e46ccc8676ae1eac13179c1cac35" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_ALL</source>
          <target state="translated">CHILD_POLICY_ALL</target>
        </trans-unit>
        <trans-unit id="423c2708084898a1d87d9af680bbd024fe47d0ae" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_CHOICE</source>
          <target state="translated">CHILD_POLICY_CHOICE</target>
        </trans-unit>
        <trans-unit id="ab2c051c94d3f89e17305fd5fbb9d8e2bcb9c392" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_EMPTY</source>
          <target state="translated">CHILD_POLICY_EMPTY</target>
        </trans-unit>
        <trans-unit id="0b80054583753c50ce868cf1ff927ad19beb0d8b" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_MAX</source>
          <target state="translated">CHILD_POLICY_MAX</target>
        </trans-unit>
        <trans-unit id="cba9011154658a2905ca2323a32d3432127da3c9" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_REPEAT</source>
          <target state="translated">CHILD_POLICY_REPEAT</target>
        </trans-unit>
        <trans-unit id="26509f5eca9644e2ba5eda5da2a707a039365ace" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_SEQUENCE</source>
          <target state="translated">CHILD_POLICY_SEQUENCE</target>
        </trans-unit>
        <trans-unit id="023ba52cc0316995383f6daeed3ddce9670549d0" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_SOME</source>
          <target state="translated">CHILD_POLICY_SOME</target>
        </trans-unit>
        <trans-unit id="7358da24e692c13d35e9097d4a34bd25c7add28f" translate="yes" xml:space="preserve">
          <source>CHINA</source>
          <target state="translated">CHINA</target>
        </trans-unit>
        <trans-unit id="a8910e62d8158fce16244f7d86e8ff3d5f02df45" translate="yes" xml:space="preserve">
          <source>CHINESE</source>
          <target state="translated">CHINESE</target>
        </trans-unit>
        <trans-unit id="9c4faba35b647339f3fd1b31dd741b6396d732e4" translate="yes" xml:space="preserve">
          <source>CHOOSABLE_FILE_FILTER_CHANGED_PROPERTY</source>
          <target state="translated">CHOOSABLE_FILE_FILTER_CHANGED_PROPERTY</target>
        </trans-unit>
        <trans-unit id="30f4527a557e3a9969717dc3e03fdd74078a91c6" translate="yes" xml:space="preserve">
          <source>CHOOSER_PANELS_PROPERTY</source>
          <target state="translated">CHOOSER_PANELS_PROPERTY</target>
        </trans-unit>
        <trans-unit id="690a552cb2a3b5a67d6b4631974b3d01ed517fd0" translate="yes" xml:space="preserve">
          <source>CHORASMIAN</source>
          <target state="translated">CHORASMIAN</target>
        </trans-unit>
        <trans-unit id="3347beb674d29d064358a4655c29b6cf8871dbbd" translate="yes" xml:space="preserve">
          <source>CHORD</source>
          <target state="translated">CHORD</target>
        </trans-unit>
        <trans-unit id="f95e11e39e8d7154ad66576ba9db28c987d18aba" translate="yes" xml:space="preserve">
          <source>CHOU_1</source>
          <target state="translated">CHOU_1</target>
        </trans-unit>
        <trans-unit id="badad29b57e3cd7a07ac955fa7923ea4e6468ded" translate="yes" xml:space="preserve">
          <source>CHOU_2</source>
          <target state="translated">CHOU_2</target>
        </trans-unit>
        <trans-unit id="60b57cafd6caef0f52d2b208bc00126a895cbac8" translate="yes" xml:space="preserve">
          <source>CHOU_3</source>
          <target state="translated">CHOU_3</target>
        </trans-unit>
        <trans-unit id="cb2e34a571895491438d2f4eac662c32d8b5fa7a" translate="yes" xml:space="preserve">
          <source>CHOU_30</source>
          <target state="translated">CHOU_30</target>
        </trans-unit>
        <trans-unit id="9b837675471e8bbde08a45803f6e9c55d1075e4c" translate="yes" xml:space="preserve">
          <source>CHOU_4</source>
          <target state="translated">CHOU_4</target>
        </trans-unit>
        <trans-unit id="4141608d20a27dfff3a6f87d969758836002bcbb" translate="yes" xml:space="preserve">
          <source>CHOU_40</source>
          <target state="translated">CHOU_40</target>
        </trans-unit>
        <trans-unit id="cf1ef329cd82882a0aea110e286859fb9c91ff0f" translate="yes" xml:space="preserve">
          <source>CITE</source>
          <target state="translated">CITE</target>
        </trans-unit>
        <trans-unit id="65642f867f6a7a745014fa8d3ed0aa16728e3776" translate="yes" xml:space="preserve">
          <source>CJK_COMPATIBILITY</source>
          <target state="translated">CJK_COMPATIBILITY</target>
        </trans-unit>
        <trans-unit id="bdb42c3c87ee511c5b698a16eba2fb6882800ba9" translate="yes" xml:space="preserve">
          <source>CJK_COMPATIBILITY_FORMS</source>
          <target state="translated">CJK_COMPATIBILITY_FORMS</target>
        </trans-unit>
        <trans-unit id="7b8c36368c0050c0cc17f43c4bfa867521a8c1f9" translate="yes" xml:space="preserve">
          <source>CJK_COMPATIBILITY_IDEOGRAPHS</source>
          <target state="translated">CJK_COMPATIBILITY_IDEOGRAPHS</target>
        </trans-unit>
        <trans-unit id="2555b6094eb534f3065a810fd353e98620ba8eff" translate="yes" xml:space="preserve">
          <source>CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT</source>
          <target state="translated">CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="44d03f6a4fc9ddd792bf8fbef8bead7b030ddc0b" translate="yes" xml:space="preserve">
          <source>CJK_RADICALS_SUPPLEMENT</source>
          <target state="translated">CJK_RADICALS_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="0d1afdf7139179d7e82f4dadc8aa80dde5095074" translate="yes" xml:space="preserve">
          <source>CJK_STROKES</source>
          <target state="translated">CJK_STROKES</target>
        </trans-unit>
        <trans-unit id="bf438864ed9326f44f5f40d1a61f018c9e06577c" translate="yes" xml:space="preserve">
          <source>CJK_SYMBOLS_AND_PUNCTUATION</source>
          <target state="translated">CJK_SYMBOLS_AND_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="058804b65f0c3927c23bf95ed97737b781079855" translate="yes" xml:space="preserve">
          <source>CJK_UNIFIED_IDEOGRAPHS</source>
          <target state="translated">CJK_UNIFIED_IDEOGRAPHS</target>
        </trans-unit>
        <trans-unit id="22f236027b3287f5f17519b3c0ae61499c5227aa" translate="yes" xml:space="preserve">
          <source>CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A</source>
          <target state="translated">CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A</target>
        </trans-unit>
        <trans-unit id="ca6abc40e39629ee685fe8f9cd81c97fc7a52671" translate="yes" xml:space="preserve">
          <source>CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B</source>
          <target state="translated">CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
