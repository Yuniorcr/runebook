<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="6a1013621b1c25803b67632835c2b6327a0957ce" translate="yes" xml:space="preserve">
          <source>Note that this method may be used to pass database- specific abstract data types, by using a driver-specific Java type. If the object is of a class implementing the interface &lt;code&gt;SQLData&lt;/code&gt;, the JDBC driver should call the method &lt;code&gt;SQLData.writeSQL&lt;/code&gt; to write it to the SQL data stream. If, on the other hand, the object is of a class implementing &lt;code&gt;Ref&lt;/code&gt;, &lt;code&gt;Blob&lt;/code&gt;, &lt;code&gt;Clob&lt;/code&gt;, &lt;code&gt;NClob&lt;/code&gt;, &lt;code&gt;Struct&lt;/code&gt;, &lt;code&gt;java.net.URL&lt;/code&gt;, &lt;code&gt;RowId&lt;/code&gt;, &lt;code&gt;SQLXML&lt;/code&gt; or &lt;code&gt;Array&lt;/code&gt;, the driver should pass it to the database as a value of the corresponding SQL type.</source>
          <target state="translated">이 메소드는 드라이버 특정 Java 유형을 사용하여 데이터베이스 특정 추상 데이터 유형을 전달하는 데 사용될 수 있습니다. 객체가 &lt;code&gt;SQLData&lt;/code&gt; 인터페이스를 구현하는 클래스 인 경우 JDBC 드라이버는 &lt;code&gt;SQLData.writeSQL&lt;/code&gt; 메서드 를 호출 하여 SQL 데이터 스트림에 기록해야합니다. 반면에 객체가 &lt;code&gt;Ref&lt;/code&gt; , &lt;code&gt;Blob&lt;/code&gt; , &lt;code&gt;Clob&lt;/code&gt; , &lt;code&gt;NClob&lt;/code&gt; , &lt;code&gt;Struct&lt;/code&gt; , &lt;code&gt;java.net.URL&lt;/code&gt; , &lt;code&gt;RowId&lt;/code&gt; , &lt;code&gt;SQLXML&lt;/code&gt; 또는 &lt;code&gt;Array&lt;/code&gt; 를 인 경우 드라이버는 해당 값을 데이터베이스에 전달해야합니다. SQL 유형.</target>
        </trans-unit>
        <trans-unit id="f6b1b3b07894fb34fc1c6f37da4f2f7e640d8cf6" translate="yes" xml:space="preserve">
          <source>Note that this method may be used to pass database- specific abstract data types, by using a driver-specific Java type. If the object is of a class implementing the interface &lt;code&gt;SQLData&lt;/code&gt;, the JDBC driver should call the method &lt;code&gt;SQLData.writeSQL&lt;/code&gt; to write it to the SQL data stream. If, on the other hand, the object is of a class implementing &lt;code&gt;Ref&lt;/code&gt;, &lt;code&gt;Blob&lt;/code&gt;, &lt;code&gt;Clob&lt;/code&gt;, &lt;code&gt;NClob&lt;/code&gt;, &lt;code&gt;Struct&lt;/code&gt;, &lt;code&gt;java.net.URL&lt;/code&gt;, or &lt;code&gt;Array&lt;/code&gt;, the driver should pass it to the database as a value of the corresponding SQL type.</source>
          <target state="translated">이 메소드는 드라이버 특정 Java 유형을 사용하여 데이터베이스 특정 추상 데이터 유형을 전달하는 데 사용될 수 있습니다. 객체가 &lt;code&gt;SQLData&lt;/code&gt; 인터페이스를 구현하는 클래스 인 경우 JDBC 드라이버는 &lt;code&gt;SQLData.writeSQL&lt;/code&gt; 메서드 를 호출 하여 SQL 데이터 스트림에 기록해야합니다. 반면에 객체가 &lt;code&gt;Ref&lt;/code&gt; , &lt;code&gt;Blob&lt;/code&gt; , &lt;code&gt;Clob&lt;/code&gt; , &lt;code&gt;NClob&lt;/code&gt; 을 구현하는 클래스 인 경우 , &lt;code&gt;Struct&lt;/code&gt; , &lt;code&gt;java.net.URL&lt;/code&gt; 또는 &lt;code&gt;Array&lt;/code&gt; 를 인 경우 드라이버는 해당 SQL 유형의 값으로 데이터베이스에 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="50668c292bb17d26944090bb68d263a3c5bc6986" translate="yes" xml:space="preserve">
          <source>Note that this method may be used to pass database- specific abstract data types.</source>
          <target state="translated">이 메소드는 데이터베이스 특정 추상 데이터 유형을 전달하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7d4c1e090a790c3de485c0151a929ce42d41c96" translate="yes" xml:space="preserve">
          <source>Note that this method may be used to pass database-specific abstract data types by using a driver-specific Java type. If the object is of a class implementing &lt;code&gt;SQLData&lt;/code&gt;, the rowset should call the method &lt;code&gt;SQLData.writeSQL&lt;/code&gt; to write the object to an &lt;code&gt;SQLOutput&lt;/code&gt; data stream. If, on the other hand, the object is of a class implementing &lt;code&gt;Ref&lt;/code&gt;, &lt;code&gt;Blob&lt;/code&gt;, &lt;code&gt;Clob&lt;/code&gt;, &lt;code&gt;NClob&lt;/code&gt;, &lt;code&gt;Struct&lt;/code&gt;, &lt;code&gt;java.net.URL&lt;/code&gt;, or &lt;code&gt;Array&lt;/code&gt;, the driver should pass it to the database as a value of the corresponding SQL type.</source>
          <target state="translated">이 메소드는 드라이버 특정 Java 유형을 사용하여 데이터베이스 특정 추상 데이터 유형을 전달하는 데 사용될 수 있습니다. 개체가 &lt;code&gt;SQLData&lt;/code&gt; 를 구현하는 클래스 인 경우 행 집합은 &lt;code&gt;SQLData.writeSQL&lt;/code&gt; 메서드 를 호출 하여 개체를 &lt;code&gt;SQLOutput&lt;/code&gt; 데이터 스트림 에 기록해야합니다 . 반면에 객체가 &lt;code&gt;Ref&lt;/code&gt; , &lt;code&gt;Blob&lt;/code&gt; , &lt;code&gt;Clob&lt;/code&gt; , &lt;code&gt;NClob&lt;/code&gt; , &lt;code&gt;Struct&lt;/code&gt; , &lt;code&gt;java.net.URL&lt;/code&gt; 또는 &lt;code&gt;Array&lt;/code&gt; 를 구현하는 클래스 인 경우 드라이버는 해당 SQL 유형의 값으로 데이터베이스에 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="553d4117f60da0fb301a0966016f70aca8113905" translate="yes" xml:space="preserve">
          <source>Note that this method may be used to pass database-specific abstract data types.</source>
          <target state="translated">이 메소드는 데이터베이스 특정 추상 데이터 유형을 전달하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a7730bd819d75e6aa02578efa2e9441e7a2bf25" translate="yes" xml:space="preserve">
          <source>Note that this method may be used to pass datatabase- specific abstract data types.</source>
          <target state="translated">이 메서드는 데이터베이스 특정 추상 데이터 유형을 전달하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="696d88c7e4fbeaa6d598552c1c9ec811d23f5407" translate="yes" xml:space="preserve">
          <source>Note that this method may not be able to return a &lt;code&gt;double&lt;/code&gt; NaN with exactly same bit pattern as the &lt;code&gt;long&lt;/code&gt; argument. IEEE 754 distinguishes between two kinds of NaNs, quiet NaNs and</source>
          <target state="translated">이 메소드는 &lt;code&gt;long&lt;/code&gt; 인수 와 정확히 동일한 비트 패턴으로 &lt;code&gt;double&lt;/code&gt; NaN 을 리턴하지 못할 수 있습니다 . IEEE 754는 두 종류의 NaN, 조용한 NaN과</target>
        </trans-unit>
        <trans-unit id="99db841235c5ffab9ca03c9f0d8ccfef1739d0ac" translate="yes" xml:space="preserve">
          <source>Note that this method may not be able to return a &lt;code&gt;float&lt;/code&gt; NaN with exactly same bit pattern as the &lt;code&gt;int&lt;/code&gt; argument. IEEE 754 distinguishes between two kinds of NaNs, quiet NaNs and</source>
          <target state="translated">이 메소드는 &lt;code&gt;int&lt;/code&gt; 인수 와 정확히 동일한 비트 패턴으로 &lt;code&gt;float&lt;/code&gt; NaN 을 리턴하지 못할 수도 있습니다 . IEEE 754는 두 종류의 NaN, 조용한 NaN과</target>
        </trans-unit>
        <trans-unit id="4c707cfe9b0be5010f0ba7940f4114887cccbbc2" translate="yes" xml:space="preserve">
          <source>Note that this method propagates any exception thrown by the nullary constructor, including a checked exception. Use of this method effectively bypasses the compile-time exception checking that would otherwise be performed by the compiler. The &lt;a href=&quot;reflect/constructor#newInstance-java.lang.Object...-&quot;&gt;&lt;code&gt;Constructor.newInstance&lt;/code&gt;&lt;/a&gt; method avoids this problem by wrapping any exception thrown by the constructor in a (checked) &lt;a href=&quot;reflect/invocationtargetexception&quot;&gt;&lt;code&gt;InvocationTargetException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 확인 된 예외를 포함하여 널 (null) 생성자가 던진 모든 예외를 전파합니다. 이 방법을 사용하면 컴파일러가 수행하는 컴파일 타임 예외 검사를 효과적으로 무시합니다. &lt;a href=&quot;reflect/constructor#newInstance-java.lang.Object...-&quot;&gt; &lt;code&gt;Constructor.newInstance&lt;/code&gt; &lt;/a&gt; 방법은 (선택)의 생성자에 의해 발생 예외 배치함으로써 이러한 문제를 피할 수 &lt;a href=&quot;reflect/invocationtargetexception&quot;&gt; &lt;code&gt;InvocationTargetException&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6f2ec30f1341df7ef8b9ea732a2e91136cb668fc" translate="yes" xml:space="preserve">
          <source>Note that this method provides similar functionality to methods on &lt;code&gt;DateFormat&lt;/code&gt; such as &lt;a href=&quot;../../text/dateformat#getDateTimeInstance(int,int)&quot;&gt;&lt;code&gt;DateFormat.getDateTimeInstance(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 다음과 같은 &lt;code&gt;DateFormat&lt;/code&gt; 의 메서드와 유사한 기능을 제공합니다.&lt;a href=&quot;../../text/dateformat#getDateTimeInstance(int,int)&quot;&gt; &lt;code&gt;DateFormat.getDateTimeInstance(int, int)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c2b76a1b626eab6d7248d3bd24d3815277260de1" translate="yes" xml:space="preserve">
          <source>Note that this method provides similar functionality to methods on &lt;code&gt;DateFormat&lt;/code&gt; such as &lt;a href=&quot;../../text/dateformat#getDateTimeInstance-int-int-&quot;&gt;&lt;code&gt;DateFormat.getDateTimeInstance(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법에 대한 방법과 유사한 기능을 제공하는 것을 주 &lt;code&gt;DateFormat&lt;/code&gt; 의 같은 &lt;a href=&quot;../../text/dateformat#getDateTimeInstance-int-int-&quot;&gt; &lt;code&gt;DateFormat.getDateTimeInstance(int, int)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="12d9c9d351d4678f222639e1a82253b1be4f2d86" translate="yes" xml:space="preserve">
          <source>Note that this method returns a reference to the password. If a clone of the array is created it is the caller's responsibility to zero out the password information after it is no longer needed.</source>
          <target state="translated">이 메소드는 비밀번호에 대한 참조를 리턴합니다. 배열의 복제본이 생성되면 더 이상 필요하지 않은 암호 정보를 제로화하는 것은 호출자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="6b7f1e14f1eb10864276d31bd94bfd0f39407834" translate="yes" xml:space="preserve">
          <source>Note that this method returns a reference to the password. It is the caller's responsibility to zero out the password information after it is no longer needed.</source>
          <target state="translated">이 메소드는 비밀번호에 대한 참조를 리턴합니다. 더 이상 필요하지 않은 비밀번호 정보를 제로화하는 것은 호출자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="dfe51901c961117b55961f779113b9ab751bfbef" translate="yes" xml:space="preserve">
          <source>Note that this method sets the default fetch direction for result sets generated by this &lt;code&gt;Statement&lt;/code&gt; object. Each result set has its own methods for getting and setting its own fetch direction.</source>
          <target state="translated">이 메소드는 이로 생성 된 결과 세트의 기본 가져 오기 방향을 설정합니다. &lt;code&gt;Statement&lt;/code&gt; 오브젝트에 합니다. 각 결과 집합에는 자체 가져 오기 방향을 가져오고 설정하는 자체 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="142466c43ed923eac8ea1fef7a9199aa60dd0025" translate="yes" xml:space="preserve">
          <source>Note that this method should be primarily used to initialize the state of the check box menu item. Programmatically setting the state of the check box menu item will</source>
          <target state="translated">이 메서드는 주로 확인란 메뉴 항목의 상태를 초기화하는 데 사용해야합니다. 확인란 메뉴 항목의 상태를 프로그래밍 방식으로 설정하면</target>
        </trans-unit>
        <trans-unit id="d35ae4657737da617ea6337f36ace435fea4112c" translate="yes" xml:space="preserve">
          <source>Note that this method should be primarily used to initialize the state of the checkbox. Programmatically setting the state of the checkbox will</source>
          <target state="translated">이 메서드는 주로 확인란의 상태를 초기화하는 데 사용해야합니다. 체크 박스 상태를 프로그래밍 방식으로 설정하면</target>
        </trans-unit>
        <trans-unit id="f32fd67b4ed6bea16ffb22dc0246fe4e75a32573" translate="yes" xml:space="preserve">
          <source>Note that this method should be primarily used to initially select an item in this component. Programmatically calling this method will</source>
          <target state="translated">이 방법은 주로이 구성 요소에서 항목을 처음 선택하는 데 사용되어야합니다. 이 메서드를 프로그래밍 방식으로 호출하면</target>
        </trans-unit>
        <trans-unit id="b422a1d63f4f0ffbda45d1b435ba9cb1ded5c119" translate="yes" xml:space="preserve">
          <source>Note that this method supports only the bit mask-based ranges. Call &lt;a href=&quot;#getRangeSet()&quot;&gt;&lt;code&gt;getRangeSet()&lt;/code&gt;&lt;/a&gt; for the enum-based ranges.</source>
          <target state="translated">이 방법은 비트 마스크 기반 범위 만 지원합니다. &lt;a href=&quot;#getRangeSet()&quot;&gt; &lt;code&gt;getRangeSet()&lt;/code&gt; &lt;/a&gt; 호출열거 형 기반 범위에 대해 를 합니다.</target>
        </trans-unit>
        <trans-unit id="805ac6ba76cb55023340f31df6b16e4bc7aec282" translate="yes" xml:space="preserve">
          <source>Note that this method throws errors related to loading, linking or initializing as specified in Sections 12.2, 12.3 and 12.4 of &lt;em&gt;The Java Language Specification&lt;/em&gt;. Note that this method does not check whether the requested class is accessible to its caller.</source>
          <target state="translated">이 메소드는 &lt;em&gt;The Java Language Specification&lt;/em&gt; 의 12.2, 12.3 및 12.4 섹션에 지정된대로로드, 링크 또는 초기화와 관련된 오류를 발생시킵니다 . 이 메소드는 요청한 클래스가 호출자에게 액세스 가능한지 여부를 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e94fef6feee764262dbd5afe31bc2f7c1c73702e" translate="yes" xml:space="preserve">
          <source>Note that this method throws errors related to loading, linking or initializing as specified in Sections &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se15/html/jls-12.html#jls-12.2&quot;&gt;12.2&lt;/a&gt;, &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se15/html/jls-12.html#jls-12.3&quot;&gt;12.3&lt;/a&gt;, and &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se15/html/jls-12.html#jls-12.4&quot;&gt;12.4&lt;/a&gt; of</source>
          <target state="translated">이 메서드는 섹션 &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se15/html/jls-12.html#jls-12.2&quot;&gt;12.2&lt;/a&gt; , &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se15/html/jls-12.html#jls-12.3&quot;&gt;12.3&lt;/a&gt; 및 &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se15/html/jls-12.html#jls-12.4&quot;&gt;12.4&lt;/a&gt; 에 지정된대로로드, 링크 또는 초기화와 관련된 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="ee028283d18fd793b2649a0899170975f3d894e8" translate="yes" xml:space="preserve">
          <source>Note that this method uses the &lt;a href=&quot;#addTo(java.util.Calendar)&quot;&gt;&lt;code&gt;addTo(Calendar)&lt;/code&gt;&lt;/a&gt; method, which may work incorrectly with &lt;code&gt;Duration&lt;/code&gt; objects with very large values in its fields. See the &lt;a href=&quot;#addTo(java.util.Calendar)&quot;&gt;&lt;code&gt;addTo(Calendar)&lt;/code&gt;&lt;/a&gt; method for details.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#addTo(java.util.Calendar)&quot;&gt; &lt;code&gt;addTo(Calendar)&lt;/code&gt; &lt;/a&gt; 메서드를 사용합니다.이 메서드는 해당 필드에 매우 큰 값이있는 &lt;code&gt;Duration&lt;/code&gt; 개체에서 잘못 작동 할 수 있습니다. &lt;a href=&quot;#addTo(java.util.Calendar)&quot;&gt; &lt;code&gt;addTo(Calendar)&lt;/code&gt; &lt;/a&gt; 참조하십시오. 메서드를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="60c0a9df7c1489a4d6bfeea45d2e9818706900bd" translate="yes" xml:space="preserve">
          <source>Note that this method uses the &lt;a href=&quot;#addTo(java.util.Date)&quot;&gt;&lt;code&gt;addTo(Date)&lt;/code&gt;&lt;/a&gt; method, which may work incorrectly with &lt;code&gt;Duration&lt;/code&gt; objects with very large values in its fields. See the &lt;a href=&quot;#addTo(java.util.Date)&quot;&gt;&lt;code&gt;addTo(Date)&lt;/code&gt;&lt;/a&gt; method for details.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#addTo(java.util.Date)&quot;&gt; &lt;code&gt;addTo(Date)&lt;/code&gt; &lt;/a&gt; 메서드를 사용합니다.이 메서드는 해당 필드에 값이 매우 큰 &lt;code&gt;Duration&lt;/code&gt; 개체에서 제대로 작동하지 않을 수 있습니다. 참조 &lt;a href=&quot;#addTo(java.util.Date)&quot;&gt; &lt;code&gt;addTo(Date)&lt;/code&gt; &lt;/a&gt; 메서드를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="288663efbcccab94d2947639494c2a4784a50b16" translate="yes" xml:space="preserve">
          <source>Note that this method will never be invoked for &lt;a href=&quot;support/typeutilities#isMethodInvocationConvertible(java.lang.Class,java.lang.Class)&quot;&gt;&lt;code&gt;method
 invocation conversions&lt;/code&gt;&lt;/a&gt; as those can be automatically applied by &lt;a href=&quot;../../../../java.base/java/lang/invoke/methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;MethodHandle.asType(MethodType)&lt;/code&gt;&lt;/a&gt;. An implementation can assume it is never requested to produce a converter for those conversions. If a language runtime needs to customize method invocation conversions, it should &lt;a href=&quot;../dynamiclinkerfactory#setAutoConversionStrategy(jdk.dynalink.linker.MethodTypeConversionStrategy)&quot;&gt;&lt;code&gt;set an autoconversion strategy in the dynamic linker factory&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../../../../java.base/java/lang/invoke/methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;MethodHandle.asType(MethodType)&lt;/code&gt; &lt;/a&gt; 에 의해 자동으로 적용될 수 있으므로 &lt;a href=&quot;support/typeutilities#isMethodInvocationConvertible(java.lang.Class,java.lang.Class)&quot;&gt; &lt;code&gt;method invocation conversions&lt;/code&gt; &lt;/a&gt; 대해 호출되지 않습니다 . 구현에서는 이러한 변환에 대해 변환기를 생성하도록 요청되지 않는다고 가정 할 수 있습니다. 언어 런타임이 메서드 호출 변환을 사용자 지정해야하는 경우 대신 &lt;a href=&quot;../dynamiclinkerfactory#setAutoConversionStrategy(jdk.dynalink.linker.MethodTypeConversionStrategy)&quot;&gt; &lt;code&gt;set an autoconversion strategy in the dynamic linker factory&lt;/code&gt; &lt;/a&gt; 변환 전략을 설정 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="51c991358efc6fdab00e0efd7eb0e963522c2717" translate="yes" xml:space="preserve">
          <source>Note that this method will not be usable in environments where the caller (perhaps an applet) is not permitted to load classes dynamically.</source>
          <target state="translated">이 메소드는 호출자 (아마도 애플릿)가 클래스를 동적으로로드 할 수없는 환경에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="84470b99872e593b80de8a654e4099aa1a42862a" translate="yes" xml:space="preserve">
          <source>Note that this method will not scroll outside of the valid viewport; for example, if &lt;code&gt;contentRect&lt;/code&gt; is larger than the viewport, scrolling will be confined to the viewport's bounds.</source>
          <target state="translated">이 메서드는 유효한 뷰포트 외부로 스크롤되지 않습니다. 예를 들어 &lt;code&gt;contentRect&lt;/code&gt; 가 뷰포트보다 크면 스크롤이 뷰포트의 경계로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="2c135ec7686c884cbfa703e4257e9a93c4683519" translate="yes" xml:space="preserve">
          <source>Note that this method will only be called if the ObjectOutputStream is not using the old serialization stream format (set by calling ObjectOutputStream's &lt;code&gt;useProtocolVersion&lt;/code&gt; method). If this serialization stream is using the old format (&lt;code&gt;PROTOCOL_VERSION_1&lt;/code&gt;), the class descriptor will be written internally in a manner that cannot be overridden or customized.</source>
          <target state="translated">이 메소드는 ObjectOutputStream이 이전 직렬화 스트림 형식을 사용하지 않는 경우에만 호출됩니다 (ObjectOutputStream의 &lt;code&gt;useProtocolVersion&lt;/code&gt; 메소드를 호출하여 설정 ). 이 직렬화 스트림이 이전 형식 ( &lt;code&gt;PROTOCOL_VERSION_1&lt;/code&gt; )을 사용하는 경우 클래스 설명자는 재정의하거나 사용자 정의 할 수없는 방식으로 내부적으로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="9836a98493b03a9138a4744311c0c0e9dbbc0ca5" translate="yes" xml:space="preserve">
          <source>Note that this method will reset the byte stream if it is provided, or the character stream if the byte stream is not provided.</source>
          <target state="translated">이 메소드는 제공된 경우 바이트 스트림을 재설정하고 바이트 스트림이 제공되지 않은 경우 문자 스트림을 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="6b4c803bd907f1cd9a6ea01493bf0b78266af8d4" translate="yes" xml:space="preserve">
          <source>Note that this notification mechanism has nothing to do with threads and is completely separate from the &lt;code&gt;wait&lt;/code&gt; and &lt;code&gt;notify&lt;/code&gt; mechanism of class &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">이 통지기구는 thread와는 관련이없고 , &lt;code&gt;Object&lt;/code&gt; 클래스 의 &lt;code&gt;wait&lt;/code&gt; 및 &lt;code&gt;notify&lt;/code&gt; 기구 와는 완전히 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="55d1f6a9c47780474a2729c0424f32c202de9d28" translate="yes" xml:space="preserve">
          <source>Note that this sourceClassName is not verified and may be spoofed. This information may either have been provided as part of the logging call, or it may have been inferred automatically by the logging framework. In the latter case, the information may only be approximate and may in fact describe an earlier call on the stack frame.</source>
          <target state="translated">이 sourceClassName은 확인되지 않았으며 스푸핑 될 수 있습니다. 이 정보는 로깅 호출의 일부로 제공되었거나 로깅 프레임 워크에 의해 자동으로 추론되었을 수 있습니다. 후자의 경우, 정보는 대략적인 것일 수 있으며 실제로 스택 프레임상의 이전 호출을 기술 할 수있다.</target>
        </trans-unit>
        <trans-unit id="4fecf0125546b77ee442bf47a1deb3e28d7aaefd" translate="yes" xml:space="preserve">
          <source>Note that this sourceMethodName is not verified and may be spoofed. This information may either have been provided as part of the logging call, or it may have been inferred automatically by the logging framework. In the latter case, the information may only be approximate and may in fact describe an earlier call on the stack frame.</source>
          <target state="translated">이 sourceMethodName은 확인되지 않았으며 스푸핑 될 수 있습니다. 이 정보는 로깅 호출의 일부로 제공되었거나 로깅 프레임 워크에 의해 자동으로 추론되었을 수 있습니다. 후자의 경우, 정보는 대략적인 것일 수 있으며 실제로 스택 프레임의 이전 호출을 설명 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="072c9369f2d0d7264b8145910d01f238de126855" translate="yes" xml:space="preserve">
          <source>Note that this value does not necessarily reflect the instantaneous level of the sound produced by this voice; that level is the result of many contributing factors, including the current instrument and the shape of the amplitude envelope it produces.</source>
          <target state="translated">이 값이이 음색에 의해 생성 된 사운드의 순간 레벨을 반드시 반영하는 것은 아닙니다. 이 레벨은 현재 계측기 및 진폭 엔벨로프의 모양을 포함하여 많은 기여 요인의 결과입니다.</target>
        </trans-unit>
        <trans-unit id="cbf8bdc49ffa099249209a36933be93a6529bbe7" translate="yes" xml:space="preserve">
          <source>Note that though the &lt;code&gt;Kind&lt;/code&gt; of a Snippet may be persistent, that does not mean that the Snippet will persist; For example it may be invalid or have been dropped. See: &lt;a href=&quot;snippet.status#isDefined()&quot;&gt;&lt;code&gt;Snippet.Status.isDefined()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">스 니펫 의 &lt;code&gt;Kind&lt;/code&gt; 는 영구적 일 수 있지만 이것이 스 니펫이 지속된다는 의미는 아닙니다. 예를 들어 유효하지 않거나 삭제되었을 수 있습니다. 참조 : &lt;a href=&quot;snippet.status#isDefined()&quot;&gt; &lt;code&gt;Snippet.Status.isDefined()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="207e2858d8fbb89a9e980fbe4de50e9d78b6f8e0" translate="yes" xml:space="preserve">
          <source>Note that to use a particular &lt;a href=&quot;../../../java/nio/charset/charset&quot;&gt;charset&lt;/a&gt; to encode the contents of the file, an &lt;code&gt;OutputStreamWriter&lt;/code&gt; with the chosen charset can be created from the &lt;code&gt;OutputStream&lt;/code&gt; from the returned object. If the &lt;code&gt;Writer&lt;/code&gt; from the returned object is directly used for writing, its charset is determined by the implementation. An annotation processing tool may have an &lt;code&gt;-encoding&lt;/code&gt; flag or analogous option for specifying this; otherwise, it will typically be the platform's default encoding.</source>
          <target state="translated">특정 &lt;a href=&quot;../../../java/nio/charset/charset&quot;&gt;문자 집합&lt;/a&gt; 을 사용하여 파일의 내용을 인코딩하기 위해 반환 된 객체 의 &lt;code&gt;OutputStream&lt;/code&gt; 에서 선택한 문자 &lt;code&gt;OutputStreamWriter&lt;/code&gt; 이 있는 OutputStreamWriter 를 만들 수 있습니다 . 리턴 된 오브젝트 의 &lt;code&gt;Writer&lt;/code&gt; 가 쓰기에 직접 사용되는 경우 해당 문자 세트는 구현에 의해 결정됩니다. 주석 처리 도구에는 이를 지정하기위한 &lt;code&gt;-encoding&lt;/code&gt; 플래그 또는 유사한 옵션이있을 수 있습니다. 그렇지 않으면 일반적으로 플랫폼의 기본 인코딩이됩니다.</target>
        </trans-unit>
        <trans-unit id="6a4e909d9659e363b65c49c622d4ba876251e24f" translate="yes" xml:space="preserve">
          <source>Note that tracks are not by default enabled for recording. In order to record MIDI data, at least one track must be specifically enabled for recording.</source>
          <target state="translated">트랙은 기본적으로 녹음을 위해 활성화되어 있지 않습니다. MIDI 데이터를 녹음하려면 녹음을 위해 하나 이상의 트랙을 특별히 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="2bbf644c605a281f000618bbb262296d588bd839" translate="yes" xml:space="preserve">
          <source>Note that trailing format specifiers, specifiers that determine the type of a floating-point literal (&lt;code&gt;1.0f&lt;/code&gt; is a &lt;code&gt;float&lt;/code&gt; value; &lt;code&gt;1.0d&lt;/code&gt; is a &lt;code&gt;double&lt;/code&gt; value), do &lt;em&gt;not&lt;/em&gt; influence the results of this method. In other words, the numerical value of the input string is converted directly to the target floating-point type. In general, the two-step sequence of conversions, string to &lt;code&gt;double&lt;/code&gt; followed by &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;float&lt;/code&gt;, is &lt;em&gt;not&lt;/em&gt; equivalent to converting a string directly to &lt;code&gt;float&lt;/code&gt;. For example, if first converted to an intermediate &lt;code&gt;double&lt;/code&gt; and then to &lt;code&gt;float&lt;/code&gt;, the string</source>
          <target state="translated">부동 소수점 리터럴의 유형을 결정하는 지정자 인 후행 형식 지정자 ( &lt;code&gt;1.0f&lt;/code&gt; 는 &lt;code&gt;float&lt;/code&gt; 값, &lt;code&gt;1.0d&lt;/code&gt; 는 &lt;code&gt;double&lt;/code&gt; 값임) 는이 메소드의 결과에 영향을 주지 &lt;em&gt;않습니다&lt;/em&gt; . 즉, 입력 문자열의 숫자 값이 대상 부동 소수점 유형으로 직접 변환됩니다. 일반적으로 변환하는 2 단계의 순서, 문자열하는 &lt;code&gt;double&lt;/code&gt; 이어서 &lt;code&gt;double&lt;/code&gt; 하는 &lt;code&gt;float&lt;/code&gt; 이다 &lt;em&gt;하지&lt;/em&gt; 에 직접 열로 변환하는 것과 &lt;code&gt;float&lt;/code&gt; . 예를 들어, 먼저 중간 &lt;code&gt;double&lt;/code&gt; 로 변환 한 다음 &lt;code&gt;float&lt;/code&gt; 로 변환하면, 문자열</target>
        </trans-unit>
        <trans-unit id="6716acfb0124f8d53ffe289e1b47bcf968a971e7" translate="yes" xml:space="preserve">
          <source>Note that trailing format specifiers, specifiers that determine the type of a floating-point literal (&lt;code&gt;1.0f&lt;/code&gt; is a &lt;code&gt;float&lt;/code&gt; value; &lt;code&gt;1.0d&lt;/code&gt; is a &lt;code&gt;double&lt;/code&gt; value), do &lt;em&gt;not&lt;/em&gt; influence the results of this method. In other words, the numerical value of the input string is converted directly to the target floating-point type. The two-step sequence of conversions, string to &lt;code&gt;float&lt;/code&gt; followed by &lt;code&gt;float&lt;/code&gt; to &lt;code&gt;double&lt;/code&gt;, is &lt;em&gt;not&lt;/em&gt; equivalent to converting a string directly to &lt;code&gt;double&lt;/code&gt;. For example, the &lt;code&gt;float&lt;/code&gt; literal &lt;code&gt;0.1f&lt;/code&gt; is equal to the &lt;code&gt;double&lt;/code&gt; value &lt;code&gt;0.10000000149011612&lt;/code&gt;; the &lt;code&gt;float&lt;/code&gt; literal &lt;code&gt;0.1f&lt;/code&gt; represents a different numerical value than the &lt;code&gt;double&lt;/code&gt; literal &lt;code&gt;0.1&lt;/code&gt;. (The numerical value 0.1 cannot be exactly represented in a binary floating-point number.)</source>
          <target state="translated">부동 소수점 리터럴의 유형을 결정하는 지정자 인 후행 형식 지정자 ( &lt;code&gt;1.0f&lt;/code&gt; 는 &lt;code&gt;float&lt;/code&gt; 값, &lt;code&gt;1.0d&lt;/code&gt; 는 &lt;code&gt;double&lt;/code&gt; 값임) 는이 메소드의 결과에 영향을 주지 &lt;em&gt;않습니다&lt;/em&gt; . 즉, 입력 문자열의 숫자 값이 대상 부동 소수점 유형으로 직접 변환됩니다. 전환 문자열의 2 단계의 시퀀스는하기 &lt;code&gt;float&lt;/code&gt; 를 이어서 &lt;code&gt;float&lt;/code&gt; 하는 &lt;code&gt;double&lt;/code&gt; 이다 &lt;em&gt;하지&lt;/em&gt; 에 직접 열로 변환하는 것과 &lt;code&gt;double&lt;/code&gt; . 예를 들어, &lt;code&gt;float&lt;/code&gt; 리터럴 &lt;code&gt;0.1f&lt;/code&gt; 는 &lt;code&gt;double&lt;/code&gt; 과 같습니다.값 &lt;code&gt;0.10000000149011612&lt;/code&gt; ; &lt;code&gt;float&lt;/code&gt; 리터럴 &lt;code&gt;0.1f&lt;/code&gt; 댄 다른 수치를 나타내고 &lt;code&gt;double&lt;/code&gt; 리터럴 &lt;code&gt;0.1&lt;/code&gt; . 숫자 0.1은 이진 부동 소수점 숫자로 정확하게 표현할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fcef5cfdd10d59acbdf3f4548f1f32292907968d" translate="yes" xml:space="preserve">
          <source>Note that unless a query method exists for a capability, it must be supported by all &lt;code&gt;ImageReader&lt;/code&gt; implementations (</source>
          <target state="translated">기능에 대한 쿼리 메소드가 없으면 모든 &lt;code&gt;ImageReader&lt;/code&gt; 구현에서 지원해야합니다 (</target>
        </trans-unit>
        <trans-unit id="d366be049fdb017948d0324c3732cd70c194a8c5" translate="yes" xml:space="preserve">
          <source>Note that unless a query method exists for a capability, it must be supported by all &lt;code&gt;ImageWriter&lt;/code&gt; implementations (</source>
          <target state="translated">기능에 대한 쿼리 메소드가 존재하지 않으면 모든 &lt;code&gt;ImageWriter&lt;/code&gt; 구현에서 지원되어야합니다 (</target>
        </trans-unit>
        <trans-unit id="1bb6d2b56a9343a1063230a04571fc27d6c60b94" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;a href=&quot;#definedClasses()&quot;&gt;&lt;code&gt;definedClasses()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;virtualmachine#allClasses()&quot;&gt;&lt;code&gt;VirtualMachine.allClasses()&lt;/code&gt;&lt;/a&gt;, some of the returned reference types may not be prepared. Attempts to perform some operations on unprepared reference types (e.g. &lt;a href=&quot;referencetype#fields()&quot;&gt;&lt;code&gt;fields()&lt;/code&gt;&lt;/a&gt;) will throw a &lt;a href=&quot;classnotpreparedexception&quot;&gt;&lt;code&gt;ClassNotPreparedException&lt;/code&gt;&lt;/a&gt;. Use &lt;a href=&quot;referencetype#isPrepared()&quot;&gt;&lt;code&gt;ReferenceType.isPrepared()&lt;/code&gt;&lt;/a&gt; to determine if a reference type is prepared.</source>
          <target state="translated">&lt;a href=&quot;#definedClasses()&quot;&gt; &lt;code&gt;definedClasses()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;virtualmachine#allClasses()&quot;&gt; &lt;code&gt;VirtualMachine.allClasses()&lt;/code&gt; &lt;/a&gt;() 와 달리 반환 된 참조 유형 중 일부는 준비되지 않을 수 있습니다. 준비되지 않은 참조 유형 (예 : &lt;a href=&quot;referencetype#fields()&quot;&gt; &lt;code&gt;fields()&lt;/code&gt; &lt;/a&gt; ) 에 대해 일부 작업을 수행하려고 하면 &lt;a href=&quot;classnotpreparedexception&quot;&gt; &lt;code&gt;ClassNotPreparedException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다. 사용 &lt;a href=&quot;referencetype#isPrepared()&quot;&gt; &lt;code&gt;ReferenceType.isPrepared()&lt;/code&gt; &lt;/a&gt; 참조 형이 준비되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e1cb4f0ec383633bbf43f9b612cc119172f5fa55" translate="yes" xml:space="preserve">
          <source>Note that unlike the &lt;a href=&quot;../io/closeable#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method of &lt;a href=&quot;../io/closeable&quot;&gt;&lt;code&gt;Closeable&lt;/code&gt;&lt;/a&gt;, this &lt;code&gt;close&lt;/code&gt; method is &lt;em&gt;not&lt;/em&gt; required to be idempotent. In other words, calling this &lt;code&gt;close&lt;/code&gt; method more than once may have some visible side effect, unlike &lt;code&gt;Closeable.close&lt;/code&gt; which is required to have no effect if called more than once. However, implementers of this interface are strongly encouraged to make their &lt;code&gt;close&lt;/code&gt; methods idempotent.</source>
          <target state="translated">달리합니다 &lt;a href=&quot;../io/closeable#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 방법 &lt;a href=&quot;../io/closeable&quot;&gt; &lt;code&gt;Closeable&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;close&lt;/code&gt; 방법입니다 &lt;em&gt;하지&lt;/em&gt; 나무 등이 요구. 즉,이 &lt;code&gt;close&lt;/code&gt; 메소드를 두 번 이상 호출하면 두 번 이상 호출하면 효과 가 없어야하는 &lt;code&gt;Closeable.close&lt;/code&gt; 와는 달리 눈에 보이는 부작용이있을 수 있습니다 . 그러나이 인터페이스의 구현자는 &lt;code&gt;close&lt;/code&gt; 를 강력히 권장합니다. 메소드를 멱등 적 .</target>
        </trans-unit>
        <trans-unit id="a30da7354901dee5f1d818bad173553c3e9b94a2" translate="yes" xml:space="preserve">
          <source>Note that unlike the &lt;a href=&quot;../io/closeable#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method of &lt;a href=&quot;../io/closeable&quot;&gt;&lt;code&gt;Closeable&lt;/code&gt;&lt;/a&gt;, this &lt;code&gt;close&lt;/code&gt; method is &lt;em&gt;not&lt;/em&gt; required to be idempotent. In other words, calling this &lt;code&gt;close&lt;/code&gt; method more than once may have some visible side effect, unlike &lt;code&gt;Closeable.close&lt;/code&gt; which is required to have no effect if called more than once. However, implementers of this interface are strongly encouraged to make their &lt;code&gt;close&lt;/code&gt; methods idempotent.</source>
          <target state="translated">달리합니다 &lt;a href=&quot;../io/closeable#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 방법 &lt;a href=&quot;../io/closeable&quot;&gt; &lt;code&gt;Closeable&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;close&lt;/code&gt; 방법입니다 &lt;em&gt;하지&lt;/em&gt; 나무 등이 요구. 다시 말해,이 &lt;code&gt;close&lt;/code&gt; 메소드를 두 번 이상 호출하면 &lt;code&gt;Closeable.close&lt;/code&gt; 와는 달리 한 번 이상 호출해도 아무런 영향을 미치지 않는 부작용이있을 수 있습니다. 그러나이 인터페이스의 구현자는 &lt;code&gt;close&lt;/code&gt; 메소드를 dem 등원 으로 만들 것을 강력히 권장합니다 .</target>
        </trans-unit>
        <trans-unit id="463b310cfe0a3025153890ea8ed2d15070d4468b" translate="yes" xml:space="preserve">
          <source>Note that updates to &lt;code&gt;Attribute&lt;/code&gt; (such as adding or removing a value) do not affect the corresponding representation of the attribute in the directory. Updates to the directory can only be effected using operations in the &lt;code&gt;DirContext&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;Attribute&lt;/code&gt; 대한 업데이트 (예 : 값 추가 또는 제거)는 디렉토리에서 해당 속성의 표현에 영향을 미치지 않습니다. 디렉토리 업데이트는 &lt;code&gt;DirContext&lt;/code&gt; 인터페이스의 조작을 통해서만 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9658d928e17ed5bc32b8907400db77094be24023" translate="yes" xml:space="preserve">
          <source>Note that updates to &lt;code&gt;BasicAttribute&lt;/code&gt; (such as adding or removing a value) does not affect the corresponding representation of the attribute in the directory. Updates to the directory can only be effected using operations in the &lt;code&gt;DirContext&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;BasicAttribute&lt;/code&gt; 에 대한 업데이트 (예 : 값 추가 또는 제거)는 디렉토리의 해당 속성 표현에 영향을 미치지 않습니다. 디렉토리 업데이트는 &lt;code&gt;DirContext&lt;/code&gt; 인터페이스의 조작을 통해서만 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2d9cc65a9f73f29d33f4ea5be300462a48c22763" translate="yes" xml:space="preserve">
          <source>Note that updates to Attributes (such as adding or removing an attribute) do not affect the corresponding representation in the directory. Updates to the directory can only be effected using operations in the DirContext interface.</source>
          <target state="translated">속성 업데이트 (예 : 속성 추가 또는 제거)는 디렉토리의 해당 표현에 영향을 미치지 않습니다. 디렉토리 업데이트는 DirContext 인터페이스의 조작을 통해서만 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="750ce2520a6a585da6d396316ab26f61252e2cb5" translate="yes" xml:space="preserve">
          <source>Note that updates to BasicAttributes (such as adding or removing an attribute) does not affect the corresponding representation in the directory. Updates to the directory can only be effected using operations in the DirContext interface.</source>
          <target state="translated">속성 추가 또는 제거와 같은 BasicAttributes 업데이트는 디렉토리의 해당 표현에 영향을 미치지 않습니다. 디렉토리 업데이트는 DirContext 인터페이스의 조작을 통해서만 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e4ae42cc278ca49314365093d2e8dd37bbe8b83" translate="yes" xml:space="preserve">
          <source>Note that user code cannot perform such an action directly in a subclass constructor, since the target must be fixed before the &lt;code&gt;ConstantCallSite&lt;/code&gt; constructor returns.</source>
          <target state="translated">&lt;code&gt;ConstantCallSite&lt;/code&gt; 생성자가 반환 되기 전에 대상을 수정해야하므로 사용자 코드는 서브 클래스 생성자에서 직접 이러한 작업을 수행 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="f79ec50bd9087460aae4469560b406104ab064d0" translate="yes" xml:space="preserve">
          <source>Note that we declare the value of the returned expression so that the value of the expression (as returned by &lt;code&gt;getValue&lt;/code&gt;) will be identical to &lt;code&gt;oldInstance&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getValue&lt;/code&gt; 로 반환 된 표현식의 값이 &lt;code&gt;oldInstance&lt;/code&gt; 와 동일하도록 반환 된 표현식의 값을 선언합니다 .</target>
        </trans-unit>
        <trans-unit id="c75e9a6ff05a55d9a150fd1393998104746b2424" translate="yes" xml:space="preserve">
          <source>Note that when a &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; is added to &lt;code&gt;PKIXParameters&lt;/code&gt;, it clones the &lt;code&gt;PKIXRevocationChecker&lt;/code&gt;; thus any subsequent modifications to the &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; have no effect.</source>
          <target state="translated">때 참고 &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; 이 추가됩니다 &lt;code&gt;PKIXParameters&lt;/code&gt; , 그것은 클론 &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; 을 ; 따라서 &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; 에 대한 후속 수정 사항 은 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="473638d91537ea67128bf789916fd2efeb4aa2db" translate="yes" xml:space="preserve">
          <source>Note that when a Cipher object is initialized, it loses all previously-acquired state. In other words, initializing a Cipher is equivalent to creating a new instance of that Cipher and initializing it.</source>
          <target state="translated">Cipher 객체가 초기화되면 이전에 획득 한 모든 상태가 손실됩니다. 즉, 암호를 초기화하는 것은 해당 암호의 새 인스턴스를 작성하고 초기화하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="300a2db0a001c3ca5ab320a539a7a1566452da5e" translate="yes" xml:space="preserve">
          <source>Note that when multiple windows is grouped in the task area the behavior is platform specific.</source>
          <target state="translated">작업 영역에 여러 개의 창이 그룹화되어있는 경우 동작은 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="7ccbb44d396138e99d2c81b88d2a1f2ee0b1dc2f" translate="yes" xml:space="preserve">
          <source>Note that when one exception &lt;a href=&quot;#initCause(java.lang.Throwable)&quot;&gt;causes&lt;/a&gt; another exception, the first exception is usually caught and then the second exception is thrown in response. In other words, there is a causal connection between the two exceptions. In contrast, there are situations where two independent exceptions can be thrown in sibling code blocks, in particular in the &lt;code&gt;try&lt;/code&gt; block of a &lt;code&gt;try&lt;/code&gt;-with-resources statement and the compiler-generated &lt;code&gt;finally&lt;/code&gt; block which closes the resource. In these situations, only one of the thrown exceptions can be propagated. In the &lt;code&gt;try&lt;/code&gt;-with-resources statement, when there are two such exceptions, the exception originating from the &lt;code&gt;try&lt;/code&gt; block is propagated and the exception from the &lt;code&gt;finally&lt;/code&gt; block is added to the list of exceptions suppressed by the exception from the &lt;code&gt;try&lt;/code&gt; block. As an exception unwinds the stack, it can accumulate multiple suppressed exceptions.</source>
          <target state="translated">한 예외로 &lt;a href=&quot;#initCause(java.lang.Throwable)&quot;&gt;인해&lt;/a&gt; 다른 예외가 발생 하면 일반적으로 첫 번째 예외가 포착되고 응답으로 두 번째 예외가 발생합니다. 즉, 두 예외 사이에는 인과 관계가 있습니다. 반대로 형제 코드 블록, 특히 &lt;code&gt;try&lt;/code&gt; -with-resources 문의 &lt;code&gt;try&lt;/code&gt; 블록과 리소스 를 닫는 컴파일러 생성 &lt;code&gt;finally&lt;/code&gt; 블록 에서 두 개의 독립적 인 예외가 발생할 수있는 상황 이 있습니다. 이러한 상황에서는 throw 된 예외 중 하나만 전파 될 수 있습니다. 에서 &lt;code&gt;try&lt;/code&gt; 가진 - - 자원 문, 때이 개 같은 예외로부터 예외 원래가 &lt;code&gt;try&lt;/code&gt; 블록 전파되고에서 예외가 &lt;code&gt;finally&lt;/code&gt; 블록은 &lt;code&gt;try&lt;/code&gt; 블록 의 예외에 의해 억제 된 예외 목록에 추가됩니다 . 예외로 인해 스택이 해제되므로 억제 된 여러 예외가 누적 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d407988a5b8d89845a30695f7bfe6e712dd9bc67" translate="yes" xml:space="preserve">
          <source>Note that when one exception &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt;causes&lt;/a&gt; another exception, the first exception is usually caught and then the second exception is thrown in response. In other words, there is a causal connection between the two exceptions. In contrast, there are situations where two independent exceptions can be thrown in sibling code blocks, in particular in the &lt;code&gt;try&lt;/code&gt; block of a &lt;code&gt;try&lt;/code&gt;-with-resources statement and the compiler-generated &lt;code&gt;finally&lt;/code&gt; block which closes the resource. In these situations, only one of the thrown exceptions can be propagated. In the &lt;code&gt;try&lt;/code&gt;-with-resources statement, when there are two such exceptions, the exception originating from the &lt;code&gt;try&lt;/code&gt; block is propagated and the exception from the &lt;code&gt;finally&lt;/code&gt; block is added to the list of exceptions suppressed by the exception from the &lt;code&gt;try&lt;/code&gt; block. As an exception unwinds the stack, it can accumulate multiple suppressed exceptions.</source>
          <target state="translated">한 예외에서 다른 예외가 발생 &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt;하면&lt;/a&gt; 일반적으로 첫 번째 예외가 발생하고 두 번째 예외가 응답으로 발생합니다. 다시 말해, 두 예외 사이에는 인과 관계가 있습니다. 반대로 형제 코드 블록, 특히 &lt;code&gt;try&lt;/code&gt; -with-resources 문의 &lt;code&gt;try&lt;/code&gt; 블록 및 리소스 를 닫는 컴파일러 생성 &lt;code&gt;finally&lt;/code&gt; 블록 에서 두 개의 독립적 인 예외가 발생할 수 있습니다 . 이러한 상황에서는 예외 중 하나만 전파 될 수 있습니다. 에서 &lt;code&gt;try&lt;/code&gt; 가진 - - 자원 문, 때이 개 같은 예외로부터 예외 원래가 &lt;code&gt;try&lt;/code&gt; 블록 전파되고에서 예외가 &lt;code&gt;finally&lt;/code&gt; 블록은 &lt;code&gt;try&lt;/code&gt; 블록 의 예외에 의해 억제 된 예외 목록에 추가됩니다 . 예외가 스택을 풀면 억제 된 여러 예외가 누적 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a5969c36884031eafa96ad5f4f9d137d63672fc" translate="yes" xml:space="preserve">
          <source>Note that when the expected length of the response APDU is specified in the &lt;a href=&quot;#%3Cinit%3E(int,int,int,int,int)&quot;&gt;constructors&lt;/a&gt;, the actual length (Ne) must be specified, not its encoded form (Le). Similarly, &lt;a href=&quot;#getNe()&quot;&gt;getNe()&lt;/a&gt; returns the actual value Ne. In other words, a value of 0 means &quot;no data in the response APDU&quot; rather than &quot;maximum length.&quot;</source>
          <target state="translated">응답 APDU의 예상 길이가 &lt;a href=&quot;#%3Cinit%3E(int,int,int,int,int)&quot;&gt;생성자&lt;/a&gt; 에 지정되면 인코딩 된 형식 (Le)이 ​​아니라 실제 길이 (Ne)를 지정해야합니다. 마찬가지로 &lt;a href=&quot;#getNe()&quot;&gt;getNe ()&lt;/a&gt; 는 실제 값 Ne를 반환합니다. 즉, 값이 0이면 &quot;최대 길이&quot;가 아니라 &quot;응답 APDU에 데이터가 없음&quot;을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="87f57622cf6b5f42a3c92ce69152ee817f8a71fc" translate="yes" xml:space="preserve">
          <source>Note that when this abstract pathname represents a UNC pathname then all components of the UNC (including the server name component) are encoded in the &lt;code&gt;URI&lt;/code&gt; path. The authority component is undefined, meaning that it is represented as &lt;code&gt;null&lt;/code&gt;. The &lt;a href=&quot;../nio/file/path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../nio/file/path#toUri()&quot;&gt;&lt;code&gt;toUri&lt;/code&gt;&lt;/a&gt; method to encode the server name in the authority component of the resulting &lt;code&gt;URI&lt;/code&gt;. The &lt;a href=&quot;#toPath()&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method may be used to obtain a &lt;code&gt;Path&lt;/code&gt; representing this abstract pathname.</source>
          <target state="translated">이 추상 경로 이름이 UNC 경로 이름을 나타내는 경우 UNC의 모든 구성 요소 (서버 이름 구성 요소 포함)가 &lt;code&gt;URI&lt;/code&gt; 경로에 인코딩됩니다 . 권한 구성 요소가 정의되지 않았으며 이는 &lt;code&gt;null&lt;/code&gt; 로 표시됨을 의미합니다 . &lt;a href=&quot;../nio/file/path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 클래스는 정의 &lt;a href=&quot;../nio/file/path#toUri()&quot;&gt; &lt;code&gt;toUri&lt;/code&gt; &lt;/a&gt; 결과의 기관 컴퍼넌트에 서버 이름을 인코딩하는 방법 &lt;code&gt;URI&lt;/code&gt; 를 . &lt;a href=&quot;#toPath()&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; 의&lt;/a&gt; 방법은 얻을 수 있습니다 &lt;code&gt;Path&lt;/code&gt; 이 추상 패스를 표현합니다.</target>
        </trans-unit>
        <trans-unit id="8010171859f8ce8e980b17a675037b7e43dc29a9" translate="yes" xml:space="preserve">
          <source>Note that when this abstract pathname represents a UNC pathname then all components of the UNC (including the server name component) are encoded in the &lt;code&gt;URI&lt;/code&gt; path. The authority component is undefined, meaning that it is represented as &lt;code&gt;null&lt;/code&gt;. The &lt;a href=&quot;../nio/file/path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../nio/file/path#toUri--&quot;&gt;&lt;code&gt;toUri&lt;/code&gt;&lt;/a&gt; method to encode the server name in the authority component of the resulting &lt;code&gt;URI&lt;/code&gt;. The &lt;a href=&quot;file#toPath--&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method may be used to obtain a &lt;code&gt;Path&lt;/code&gt; representing this abstract pathname.</source>
          <target state="translated">이 추상 경로 이름이 UNC 경로 이름을 나타내는 경우 UNC의 모든 구성 요소 (서버 이름 구성 요소 포함)가 &lt;code&gt;URI&lt;/code&gt; 경로 로 인코딩됩니다 . 권한 구성 요소가 정의되지 않았으므로 이는 &lt;code&gt;null&lt;/code&gt; 로 표시됩니다 . &lt;a href=&quot;../nio/file/path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 클래스는 정의 &lt;a href=&quot;../nio/file/path#toUri--&quot;&gt; &lt;code&gt;toUri&lt;/code&gt; &lt;/a&gt; 결과의 기관 컴퍼넌트에 서버 이름을 인코딩하는 방법 &lt;code&gt;URI&lt;/code&gt; 를 . &lt;a href=&quot;file#toPath--&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; 의&lt;/a&gt; 방법은 얻을 수 있습니다 &lt;code&gt;Path&lt;/code&gt; 이 추상 패스를 표현합니다.</target>
        </trans-unit>
        <trans-unit id="6b2d5e6a6aab5258c1deb7b06d583b33da8bf569" translate="yes" xml:space="preserve">
          <source>Note that when this class or any other Kerberos-related class is initially loaded and initialized, it may read and cache the default realm from the Kerberos configuration file or via the java.security.krb5.realm system property (the value will be empty if no default realm is specified), such that any subsequent calls to set or change the default realm by setting the java.security.krb5.realm system property may be ignored.</source>
          <target state="translated">이 클래스 또는 다른 Kerberos 관련 클래스가 처음에로드되고 초기화 될 때 Kerberos 구성 파일에서 또는 java.security.krb5.realm 시스템 속성을 통해 기본 영역을 읽고 캐시 할 수 있습니다. 기본 영역이 지정되지 않음), 따라서 java.security.krb5.realm 시스템 특성을 설정하여 기본 영역을 설정하거나 변경하기위한 후속 호출은 무시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="635e35af1584073cab6870c5956117e7936c22ce" translate="yes" xml:space="preserve">
          <source>Note that when using an enumeration type as the type of a set or as the type of the keys in a map, specialized and efficient &lt;a href=&quot;../util/enumset&quot;&gt;set&lt;/a&gt; and &lt;a href=&quot;../util/enummap&quot;&gt;map&lt;/a&gt; implementations are available.</source>
          <target state="translated">열거 유형을 세트의 유형 또는 맵의 키 유형으로 사용하는 경우 특수하고 효율적인 &lt;a href=&quot;../util/enumset&quot;&gt;세트&lt;/a&gt; 및 &lt;a href=&quot;../util/enummap&quot;&gt;맵&lt;/a&gt; 구현을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="096ca5bac8931eb0075687206638be08dcde240b" translate="yes" xml:space="preserve">
          <source>Note that while some implementations of &lt;code&gt;InputStream&lt;/code&gt; will return the total number of bytes in the stream, many will not. It is never correct to use the return value of this method to allocate a buffer intended to hold all data in this stream.</source>
          <target state="translated">&lt;code&gt;InputStream&lt;/code&gt; 의 일부 구현은 스트림의 총 바이트 수를 반환하지만 대부분은 그렇지 않습니다. 이 스트림 내의 모든 데이터를 보관 유지하기위한 버퍼를 할당하기 위해서,이 메서드의 반환 값을 사용하는 것은 결코 올바른 일이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="fb21d9190ee8fde43a50a9160cc07aba90233f74" translate="yes" xml:space="preserve">
          <source>Note that while tasks running within such threads will have the same access control and class loader settings as the current thread, they need not have the same &lt;a href=&quot;../../lang/threadlocal&quot;&gt;&lt;code&gt;ThreadLocal&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../lang/inheritablethreadlocal&quot;&gt;&lt;code&gt;InheritableThreadLocal&lt;/code&gt;&lt;/a&gt; values. If necessary, particular values of thread locals can be set or reset before any task runs in &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; subclasses using &lt;a href=&quot;threadpoolexecutor#beforeExecute(java.lang.Thread,java.lang.Runnable)&quot;&gt;&lt;code&gt;ThreadPoolExecutor.beforeExecute(Thread, Runnable)&lt;/code&gt;&lt;/a&gt;. Also, if it is necessary to initialize worker threads to have the same InheritableThreadLocal settings as some other designated thread, you can create a custom ThreadFactory in which that thread waits for and services requests to create others that will inherit its values.</source>
          <target state="translated">이러한 스레드 내에서 실행되는 작업은 현재 스레드와 동일한 액세스 제어 및 클래스 로더 설정을 &lt;a href=&quot;../../lang/threadlocal&quot;&gt; &lt;code&gt;ThreadLocal&lt;/code&gt; &lt;/a&gt; 동일한 ThreadLocal 또는 &lt;a href=&quot;../../lang/inheritablethreadlocal&quot;&gt; &lt;code&gt;InheritableThreadLocal&lt;/code&gt; &lt;/a&gt; 값을 가질 필요는 없습니다 . 필요한 경우, 스레드 지역 주민의 특정 값이 설정 될 또는 모든 작업이 실행되기 전에 재설정 할 수 &lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt; 사용 서브 클래스 &lt;a href=&quot;threadpoolexecutor#beforeExecute(java.lang.Thread,java.lang.Runnable)&quot;&gt; &lt;code&gt;ThreadPoolExecutor.beforeExecute(Thread, Runnable)&lt;/code&gt; &lt;/a&gt; . 또한 지정된 다른 스레드와 동일한 InheritableThreadLocal 설정을 갖도록 작업자 스레드를 초기화해야하는 경우 해당 스레드가 대기하고 값을 상속 할 다른 스레드를 생성하도록 요청을 처리하는 사용자 지정 ThreadFactory를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e65c28c5d460ba343c8a5353abb3934f52b76850" translate="yes" xml:space="preserve">
          <source>Note that while tasks running within such threads will have the same access control and class loader settings as the current thread, they need not have the same &lt;a href=&quot;../../lang/threadlocal&quot;&gt;&lt;code&gt;ThreadLocal&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../lang/inheritablethreadlocal&quot;&gt;&lt;code&gt;InheritableThreadLocal&lt;/code&gt;&lt;/a&gt; values. If necessary, particular values of thread locals can be set or reset before any task runs in &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; subclasses using &lt;a href=&quot;threadpoolexecutor#beforeExecute-java.lang.Thread-java.lang.Runnable-&quot;&gt;&lt;code&gt;ThreadPoolExecutor.beforeExecute(Thread, Runnable)&lt;/code&gt;&lt;/a&gt;. Also, if it is necessary to initialize worker threads to have the same InheritableThreadLocal settings as some other designated thread, you can create a custom ThreadFactory in which that thread waits for and services requests to create others that will inherit its values.</source>
          <target state="translated">이러한 스레드 내에서 실행되는 작업은 현재 스레드와 동일한 액세스 제어 및 클래스 로더 설정을 &lt;a href=&quot;../../lang/threadlocal&quot;&gt; &lt;code&gt;ThreadLocal&lt;/code&gt; &lt;/a&gt; 동일한 ThreadLocal 또는 &lt;a href=&quot;../../lang/inheritablethreadlocal&quot;&gt; &lt;code&gt;InheritableThreadLocal&lt;/code&gt; &lt;/a&gt; 값을 가질 필요는 없습니다 . 필요한 경우, 스레드 지역 주민의 특정 값 설정을 할 수 또는 모든 작업이 실행되기 전에 재설정 할 수 &lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt; 사용 서브 클래스 &lt;a href=&quot;threadpoolexecutor#beforeExecute-java.lang.Thread-java.lang.Runnable-&quot;&gt; &lt;code&gt;ThreadPoolExecutor.beforeExecute(Thread, Runnable)&lt;/code&gt; &lt;/a&gt; . 또한 지정된 다른 스레드와 동일한 InheritableThreadLocal 설정을 갖도록 작업자 스레드를 초기화해야하는 경우 해당 스레드가 대기하고 서비스 요청이 해당 값을 상속 할 다른 스레드를 작성하도록 요청하는 사용자 정의 ThreadFactory를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c77405030bf8b97fa55a2953bd4302b5ce0e5de" translate="yes" xml:space="preserve">
          <source>Note that while the target VM is suspended, no garbage collection will occur because all threads are suspended. The typical examination of variables, fields, and arrays during the suspension is safe without explicitly disabling garbage collection.</source>
          <target state="translated">대상 VM이 일시 중단 된 동안에는 모든 스레드가 일시 중단되므로 가비지 수집이 발생하지 않습니다. 일시 중단 중 변수, 필드 및 배열의 ​​일반적인 검사는 명시 적으로 가비지 수집을 비활성화하지 않고도 안전합니다.</target>
        </trans-unit>
        <trans-unit id="e100312f904c8d8b5483aa1dd39df75ec3b71ab5" translate="yes" xml:space="preserve">
          <source>Note that while there are a large number of classes representing different aspects of dates, there are relatively few dealing with different aspects of time. Following type-safety to its logical conclusion would have resulted in classes for hour-minute, hour-minute-second and hour-minute-second-nanosecond. While logically pure, this was not a practical option as it would have almost tripled the number of classes due to the combinations of date and time. Thus, &lt;code&gt;LocalTime&lt;/code&gt; is used for all precisions of time, with zeroes used to imply lower precision.</source>
          <target state="translated">날짜의 다른 측면을 나타내는 많은 클래스가 있지만 시간의 다른 측면을 다루는 것은 상대적으로 적습니다. 논리적 결론에 따른 유형 안전성에 따라 시간-분,시-분-초 및 시간-분-초-나노초의 클래스가 생겼을 것입니다. 논리적으로 순수하지만 날짜와 시간의 조합으로 인해 클래스 수를 거의 세 배로 늘렸으므로 실용적인 옵션은 아니 었습니다. 따라서 &lt;code&gt;LocalTime&lt;/code&gt; 은 모든 정밀도에 사용되며 0은 정밀도를 낮추는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="235c832a76e8a80ded3ea667d040f28fd40e430c" translate="yes" xml:space="preserve">
          <source>Note that while this method is very convenient, using it will imply an assumed reference to the default &lt;code&gt;FileSystem&lt;/code&gt; and limit the utility of the calling code. Hence it should not be used in library code intended for flexible reuse. A more flexible alternative is to use an existing &lt;code&gt;Path&lt;/code&gt; instance as an anchor, such as:</source>
          <target state="translated">이 방법은 매우 편리하지만이 방법을 사용하면 기본 &lt;code&gt;FileSystem&lt;/code&gt; 에 대한 가정 된 참조를 나타내며 호출 코드의 유틸리티가 제한됩니다. 따라서 유연한 재사용을 목적으로하는 라이브러리 코드에는 사용해서는 안됩니다. 보다 유연한 대안은 기존 &lt;code&gt;Path&lt;/code&gt; 인스턴스를 다음과 같은 앵커로 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="42119696d3ecadf8ddca514373c793769844a59d" translate="yes" xml:space="preserve">
          <source>Note that you &lt;em&gt;cannot&lt;/em&gt; always tell if an attempt to insert an element will succeed by inspecting &lt;code&gt;remainingCapacity&lt;/code&gt; because it may be the case that another thread is about to insert or remove an element.</source>
          <target state="translated">당신이주의 &lt;em&gt;할 수없는&lt;/em&gt; 요소를 삽입하는 시도가 검사하여 성공하면 항상 이야기 &lt;code&gt;remainingCapacity&lt;/code&gt; 또 다른 스레드 삽입하거나 요소를 제거하기에 관하여 인 경우 될 수 있기 때문이다.</target>
        </trans-unit>
        <trans-unit id="e4839f77da1e7400cd3ad07ff82c23bd1d881cd6" translate="yes" xml:space="preserve">
          <source>Note that you don't use this method to find out which instruments are currently loaded onto the synthesizer; for that purpose, you use &lt;code&gt;getLoadedInstruments()&lt;/code&gt;. Nor does the method indicate all the instruments that can be loaded onto the synthesizer; it only indicates the subset that come with the synthesizer. To learn whether another instrument can be loaded, you can invoke &lt;code&gt;isSoundbankSupported()&lt;/code&gt;, and if the instrument's &lt;code&gt;Soundbank&lt;/code&gt; is supported, you can try loading the instrument.</source>
          <target state="translated">신디사이저에 현재로드 된 악기를 찾기 위해이 방법을 사용하지 않습니다. 이를 위해 &lt;code&gt;getLoadedInstruments()&lt;/code&gt; 를 사용 합니다 . 이 방법은 신시사이저에로드 할 수있는 모든 악기를 나타내지 않습니다. 신디사이저와 함께 제공되는 부분 집합 만 나타냅니다. 다른 악기를로드 할 수 있는지 알아 보려면 &lt;code&gt;isSoundbankSupported()&lt;/code&gt; 호출 하고 악기의 &lt;code&gt;Soundbank&lt;/code&gt; 가 지원되는 경우 악기를로드 해보십시오.</target>
        </trans-unit>
        <trans-unit id="75e1575269eadeeb8434f2d0c79e9cbd283bd74a" translate="yes" xml:space="preserve">
          <source>Note that, as a consequence of the above rules, the bootstrap method may accept a primitive argument, if it can be represented by a constant pool entry. However, arguments of type &lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, or &lt;code&gt;char&lt;/code&gt; cannot be created for bootstrap methods, since such constants cannot be directly represented in the constant pool, and the invocation of the bootstrap method will not perform the necessary narrowing primitive conversions.</source>
          <target state="translated">위 규칙의 결과로 부트 스트랩 메소드는 상수 풀 항목으로 표시 될 수있는 경우 기본 인수를 승인 할 수 있습니다. 그러나 상수 풀에서 상수를 직접 표현할 수 없으므로 부트 스트랩 메소드에 대해 &lt;code&gt;boolean&lt;/code&gt; , &lt;code&gt;byte&lt;/code&gt; , &lt;code&gt;short&lt;/code&gt; 또는 &lt;code&gt;char&lt;/code&gt; 유형의 인수를 작성할 수 없으며 부트 스트랩 메소드를 호출하면 필요한 축소 기본 변환을 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="712ca22ba90f577e307971b0b5b345db88cbe031" translate="yes" xml:space="preserve">
          <source>Note that, in every case, neither &lt;code&gt;L&lt;/code&gt; (&lt;code&gt;'\u004C'&lt;/code&gt;) nor &lt;code&gt;l&lt;/code&gt; (&lt;code&gt;'\u006C'&lt;/code&gt;) is permitted to appear at the end of the property value as a type indicator, as would be permitted in Java programming language source code.</source>
          <target state="translated">모든 경우 에 Java 프로그래밍 언어 소스 코드에서 허용되는 것처럼 &lt;code&gt;L&lt;/code&gt; ( &lt;code&gt;'\u004C'&lt;/code&gt; ) 및 &lt;code&gt;l&lt;/code&gt; ( &lt;code&gt;'\u006C'&lt;/code&gt; )은 특성 값의 끝에 유형 표시 자로 표시 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="07f4e5af4d2e7cce73f43342b4c4feb9f7ca2d08" translate="yes" xml:space="preserve">
          <source>Note that, per &lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;RFC 6066&lt;/a&gt;, the returned hostname may be an internationalized domain name that contains A-labels. See &lt;a href=&quot;http://www.ietf.org/rfc/rfc5890.txt&quot;&gt;RFC 5890&lt;/a&gt; for more information about the detailed A-label specification.</source>
          <target state="translated">그 주, 당 &lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;RFC 6066&lt;/a&gt; , 반환 된 호스트 이름은 A-라벨을 포함하는 국제화 된 도메인 이름 일 수도있다. 자세한 A- 라벨 사양에 대한 자세한 내용은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc5890.txt&quot;&gt;RFC 5890&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="106258e9e4fd2b4dcf1843937eff3ef4dddea9d2" translate="yes" xml:space="preserve">
          <source>Note that, per &lt;a href=&quot;https://www.ietf.org/rfc/rfc6066.txt&quot;&gt;RFC 6066&lt;/a&gt;, the returned hostname may be an internationalized domain name that contains A-labels. See &lt;a href=&quot;https://www.ietf.org/rfc/rfc5890.txt&quot;&gt;RFC 5890&lt;/a&gt; for more information about the detailed A-label specification.</source>
          <target state="translated">그 주, 당 &lt;a href=&quot;https://www.ietf.org/rfc/rfc6066.txt&quot;&gt;RFC 6066&lt;/a&gt; , 반환 된 호스트 이름은 A-라벨을 포함하는 국제화 된 도메인 이름 일 수도있다. 자세한 A 레이블 사양에 대한 자세한 내용은 &lt;a href=&quot;https://www.ietf.org/rfc/rfc5890.txt&quot;&gt;RFC 5890&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="285f98e8d01e4962eff6724b78a3c6724d0931e6" translate="yes" xml:space="preserve">
          <source>Note that:</source>
          <target state="translated">참고 :</target>
        </trans-unit>
        <trans-unit id="77516cf2fb9e01ababe923552c392c12f3052832" translate="yes" xml:space="preserve">
          <source>Note the prefix value is &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; returned as part of the &lt;code&gt;String&lt;/code&gt; representation.</source>
          <target state="translated">접두사 값은 &lt;code&gt;String&lt;/code&gt; 일부로 반환 &lt;strong&gt;&lt;em&gt;되지 않습니다.&lt;/em&gt;&lt;/strong&gt; 표현의 .</target>
        </trans-unit>
        <trans-unit id="495a6f1c8c0b0b4b96ed615b23e5da838f33dc77" translate="yes" xml:space="preserve">
          <source>Note the presence of lines containing the characters &lt;code&gt;&quot;...&quot;&lt;/code&gt;. These lines indicate that the remainder of the stack trace for this exception matches the indicated number of frames from the bottom of the stack trace of the exception that was caused by this exception (the &quot;enclosing&quot; exception). This shorthand can greatly reduce the length of the output in the common case where a wrapped exception is thrown from same method as the &quot;causative exception&quot; is caught. The above example was produced by running the program:</source>
          <target state="translated">&lt;code&gt;&quot;...&quot;&lt;/code&gt; 문자를 포함하는 행이 있는지 확인하십시오 . 이 행은이 예외에 대한 나머지 스택 추적이이 예외로 인해 발생한 예외 ( &quot;클로 싱&quot;예외)의 스택 추적 맨 아래부터 표시된 프레임 수와 일치 함을 나타냅니다. 이 속기는 &quot;원인 예외&quot;가 발생하는 것과 같은 방법으로 랩핑 된 예외가 발생하는 일반적인 경우 출력 길이를 크게 줄일 수 있습니다. 위 예제는 프로그램을 실행하여 생성되었습니다.</target>
        </trans-unit>
        <trans-unit id="10fe1fc9733f539af2c0011e136b7e2e97d0e17f" translate="yes" xml:space="preserve">
          <source>Note the term</source>
          <target state="translated">용어를 참고하십시오</target>
        </trans-unit>
        <trans-unit id="7b2ccf196feed5bf7fcff8d2d49a80db7f6e9ca5" translate="yes" xml:space="preserve">
          <source>Note these are not the same as the installed look and feels.</source>
          <target state="translated">이들은 설치된 모양과 느낌과 동일하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="341f4cface17a7596330a94ffc95a397337cf425" translate="yes" xml:space="preserve">
          <source>Note, all conforming implementations must support at least one &lt;code&gt;NetworkInterface&lt;/code&gt; object, which must either be connected to a network, or be a &quot;loopback&quot; interface that can only communicate with entities on the same machine.</source>
          <target state="translated">준수하는 모든 구현은 하나 이상의 &lt;code&gt;NetworkInterface&lt;/code&gt; 개체를 지원해야합니다.이 개체는 네트워크에 연결되어 있거나 동일한 컴퓨터의 엔터티와 만 통신 할 수있는 &quot;루프백&quot;인터페이스 여야합니다.</target>
        </trans-unit>
        <trans-unit id="084c3539e8b26595361c61c6fa36633c74e6d1d2" translate="yes" xml:space="preserve">
          <source>Note, any URL instance that complies with RFC 2396 can be converted to a URI. However, some URLs that are not strictly in compliance can not be converted to a URI.</source>
          <target state="translated">RFC 2396을 준수하는 모든 URL 인스턴스는 URI로 변환 될 수 있습니다. 그러나 엄격하게 준수하지 않는 일부 URL은 URI로 변환 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e2d1f3266163ca19cb060c172f09b6771ea53a1a" translate="yes" xml:space="preserve">
          <source>Note, if you do not specify a representation class when creating a &lt;code&gt;DataFlavor&lt;/code&gt;, the default representation class is used. See appropriate documentation for &lt;code&gt;DataFlavor&lt;/code&gt;'s constructors.</source>
          <target state="translated">&lt;code&gt;DataFlavor&lt;/code&gt; 를 만들 때 표현 클래스를 지정하지 않으면 기본 표현 클래스가 사용됩니다. &lt;code&gt;DataFlavor&lt;/code&gt; 생성자에 대한 적절한 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="29145475c6b41db96b48e5a5de3ccad2255f094c" translate="yes" xml:space="preserve">
          <source>Note, only limited support is provided for handling incoming urgent data. In particular, no notification of incoming urgent data is provided and there is no capability to distinguish between normal data and urgent data unless provided by a higher level protocol.</source>
          <target state="translated">긴급 데이터 수신에 대한 지원은 제한적입니다. 특히, 긴급 데이터 수신에 대한 알림이 제공되지 않으며 상위 레벨 프로토콜에 의해 제공되지 않는 한 일반 데이터와 긴급 데이터를 구별 할 수있는 기능이 없습니다.</target>
        </trans-unit>
        <trans-unit id="e28b19f4cf6dfb7832cacb558945a2be00ef26cf" translate="yes" xml:space="preserve">
          <source>Note, that although InvalidPropertiesFormatException inherits Serializable interface from Exception, it is not intended to be Serializable. Appropriate serialization methods are implemented to throw NotSerializableException.</source>
          <target state="translated">InvalidPropertiesFormatException은 Exception에서 Serializable 인터페이스를 상속하지만 Serializable이 아닙니다. NotSerializableException을 발생시키기 위해 적절한 직렬화 메소드가 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="8d4b6b457cc5cdc10b1a20ebc442039387063f68" translate="yes" xml:space="preserve">
          <source>Note, that although NodeChangeEvent inherits Serializable interface from java.util.EventObject, it is not intended to be Serializable. Appropriate serialization methods are implemented to throw NotSerializableException.</source>
          <target state="translated">NodeChangeEvent는 java.util.EventObject에서 Serializable 인터페이스를 상속하지만 Serializable이 아닙니다. NotSerializableException을 발생시키기 위해 적절한 직렬화 메소드가 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="6dd561571f45d254c0c45958c4922d21e5682327" translate="yes" xml:space="preserve">
          <source>Note, that although PreferenceChangeEvent inherits Serializable interface from EventObject, it is not intended to be Serializable. Appropriate serialization methods are implemented to throw NotSerializableException.</source>
          <target state="translated">PreferenceChangeEvent는 EventObject에서 Serializable 인터페이스를 상속하지만 Serializable이 아닙니다. NotSerializableException을 발생시키기 위해 적절한 직렬화 메소드가 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="214391d9f91af17d005e04a8d8ab851efe21ab64" translate="yes" xml:space="preserve">
          <source>Note, that even though the pre-defined handlers do not examine the response code, the response code and headers are always retrievable from the &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;, when it is returned.</source>
          <target state="translated">미리 정의 된 처리기가 응답 코드를 검사하지 않더라도 응답 코드와 헤더 는 반환 될 때 항상 &lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; 에서 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0bd7e87c03806c8220816ba8ec6abf245afeedce" translate="yes" xml:space="preserve">
          <source>Note, that if the argument is equal to the value of Integer.MIN_VALUE, the most look and feels will not provide the scrolling to the right/down.</source>
          <target state="translated">인수가 Integer.MIN_VALUE의 값과 같으면 대부분의 모양과 느낌이 오른쪽 / 아래로 스크롤을 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="241936040000a94b096a7f27cde89db3bee18df8" translate="yes" xml:space="preserve">
          <source>Note, that if the argument is equal to the value of Integer.MIN_VALUE, then most look and feel implementations will not provide scrolling to the right/down.</source>
          <target state="translated">인수가 Integer.MIN_VALUE의 값과 같으면 대부분의 룩앤필 구현은 오른쪽 / 아래로 스크롤을 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f38a9358dc4ad4564a3ec5b572aa862055d02e21" translate="yes" xml:space="preserve">
          <source>Note, that not all request headers may be set by user code. Some are restricted for security reasons and others such as the headers relating to authentication, redirection and cookie management may be managed by specific APIs rather than through directly user set headers.</source>
          <target state="translated">모든 요청 헤더가 사용자 코드로 설정되는 것은 아닙니다. 일부는 보안상의 이유로 제한되며 인증, 리디렉션 및 쿠키 관리와 관련된 헤더와 같은 일부는 직접 사용자 설정 헤더를 통하지 않고 특정 API에 의해 관리 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0139a4fdaef91bf5619c5e533f6d5b29a102e12" translate="yes" xml:space="preserve">
          <source>Note, the &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; class does perform escaping of its component fields in certain circumstances. The recommended way to manage the encoding and decoding of URLs is to use &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;, and to convert between these two classes using &lt;a href=&quot;#toURI()&quot;&gt;&lt;code&gt;toURI()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;uri#toURL()&quot;&gt;&lt;code&gt;URI.toURL()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참고는 &lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 의&lt;/a&gt; 클래스는 특정 상황에서의 구성 요소 필드의 탈출 수행 않습니다. URL의 인코딩 및 디코딩을 관리하는 권장 방법은 &lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 를 사용 하고 &lt;a href=&quot;#toURI()&quot;&gt; &lt;code&gt;toURI()&lt;/code&gt; &lt;/a&gt; 및 URI.toURL () 을 사용 &lt;a href=&quot;uri#toURL()&quot;&gt; &lt;code&gt;URI.toURL()&lt;/code&gt; &lt;/a&gt; 두 클래스간에 변환하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="7b9791ad29280564bc91eb9bf5bf14b3ec9cd93f" translate="yes" xml:space="preserve">
          <source>Note, the &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; class does perform escaping of its component fields in certain circumstances. The recommended way to manage the encoding and decoding of URLs is to use &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;, and to convert between these two classes using &lt;a href=&quot;url#toURI--&quot;&gt;&lt;code&gt;toURI()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;uri#toURL--&quot;&gt;&lt;code&gt;URI.toURL()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참고는 &lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 의&lt;/a&gt; 클래스는 특정 상황에서의 구성 요소 필드의 탈출 수행 않습니다. URL의 인코딩 및 디코딩을 관리하는 권장 방법은 &lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 를 사용 하고 &lt;a href=&quot;url#toURI--&quot;&gt; &lt;code&gt;toURI()&lt;/code&gt; &lt;/a&gt; 및 URI.toURL () 을 사용 &lt;a href=&quot;uri#toURL--&quot;&gt; &lt;code&gt;URI.toURL()&lt;/code&gt; &lt;/a&gt; 두 클래스 사이를 변환하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="799dedf2fa84e1db557a5a29b441de63fb5b0e62" translate="yes" xml:space="preserve">
          <source>Note, the given maximized bounds are used as a hint for the native system, because the underlying platform may not support setting the location and/or size of the maximized windows. If that is the case, the provided values do not affect the appearance of the frame in the maximized state.</source>
          <target state="translated">기본 플랫폼이 최대화 된 창의 위치 및 / 또는 크기 설정을 지원하지 않을 수 있기 때문에 주어진 최대화 된 경계는 기본 시스템에 대한 힌트로 사용됩니다. 이 경우 제공된 값은 최대화 된 상태의 프레임 모양에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b4030ed735109102fede2865591b8e0c081abfc6" translate="yes" xml:space="preserve">
          <source>Note, the value actually set in the accepted socket is determined by calling &lt;a href=&quot;socket#getReceiveBufferSize()&quot;&gt;&lt;code&gt;Socket.getReceiveBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">허용 된 소켓에 실제로 설정된 값은 &lt;a href=&quot;socket#getReceiveBufferSize()&quot;&gt; &lt;code&gt;Socket.getReceiveBufferSize()&lt;/code&gt; &lt;/a&gt; 를 호출하여 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="008f4765e87008d4171d92e49f2d63d5f2239062" translate="yes" xml:space="preserve">
          <source>Note, the value actually set in the accepted socket is determined by calling &lt;a href=&quot;socket#getReceiveBufferSize--&quot;&gt;&lt;code&gt;Socket.getReceiveBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">수락 된 소켓에 실제로 설정된 값은 &lt;a href=&quot;socket#getReceiveBufferSize--&quot;&gt; &lt;code&gt;Socket.getReceiveBufferSize()&lt;/code&gt; &lt;/a&gt; 를 호출하여 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="3f6c00048b99f3e45ebe3bb7c86243acc8599a91" translate="yes" xml:space="preserve">
          <source>Note, this is a set only option and cannot be retrieved by &lt;code&gt;
 getOption&lt;/code&gt;. It is implementation specific whether or not this option is supported.</source>
          <target state="translated">이것은 설정 전용 옵션이며 &lt;code&gt; getOption&lt;/code&gt; 으로 검색 할 수 없습니다 . 이 옵션의 지원 여부는 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="114cf23c52fcddf4427b9d1e2e0ae56da6535574" translate="yes" xml:space="preserve">
          <source>Note.</source>
          <target state="translated">Note.</target>
        </trans-unit>
        <trans-unit id="a192e7d4822486a83d4b72809b9cd678009ae005" translate="yes" xml:space="preserve">
          <source>Note. Depending on the context of use, some request methods and headers may be permitted at all times, and others may not be permitted at any time. For example, the HTTP protocol handler might disallow certain headers such as Content-Length from being set by application code, regardless of whether the security policy in force, permits it.</source>
          <target state="translated">노트. 사용 컨텍스트에 따라 일부 요청 메소드 및 헤더는 항상 허용 될 수 있고 다른 요청 방법은 언제든지 허용되지 않을 수 있습니다. 예를 들어, HTTP 프로토콜 핸들러는 적용되는 보안 정책에 관계없이 Content-Length와 같은 특정 헤더가 애플리케이션 코드에 의해 설정되는 것을 허용하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d84ae9ba62eabc6b52fc5510cd366e08fde9de1" translate="yes" xml:space="preserve">
          <source>Note. This method and the ones following allow a user to add to or replace the structure model of a document using strings of unparsed HTML. At the time of writing alternate methods for providing similar functionality for both HTML and XML documents were being considered. The following methods may be deprecated at some point in the future in favor of a more general-purpose mechanism.</source>
          <target state="translated">노트. 이 방법과 다음 방법을 사용하면 구문 분석되지 않은 HTML 문자열을 사용하여 문서의 구조 모델을 추가하거나 대체 할 수 있습니다. HTML 및 XML 문서 모두에 대해 유사한 기능을 제공하기위한 대체 방법을 작성하는 시점에 고려되었습니다. 다음 메소드는보다 범용적인 메커니즘을 위해 향후 언젠가는 사용되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="1c1e292502c948ea2540aa911417c3ba6f0a7b88" translate="yes" xml:space="preserve">
          <source>Note: (1) The &lt;code&gt;Array&lt;/code&gt; object from which a &lt;code&gt;SerialArray&lt;/code&gt; object is created must have materialized the SQL &lt;code&gt;ARRAY&lt;/code&gt; value's data on the client before it is passed to the constructor. Otherwise, the new &lt;code&gt;SerialArray&lt;/code&gt; object will contain no data.</source>
          <target state="translated">주 : (1) &lt;code&gt;Array&lt;/code&gt; 있는 오브젝트 &lt;code&gt;SerialArray&lt;/code&gt; 객체가 SQL의 구체화해야합니다 생성 &lt;code&gt;ARRAY&lt;/code&gt; 의 이 생성자에 전달되기 전에 클라이언트에서 값의 데이터를. 그렇지 않으면 새 &lt;code&gt;SerialArray&lt;/code&gt; 개체에 데이터가 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="86419567047c8e33df7551a77183455cadf6415e" translate="yes" xml:space="preserve">
          <source>Note: (2) If the &lt;code&gt;Array&lt;/code&gt; contains &lt;code&gt;java.sql.Types.JAVA_OBJECT&lt;/code&gt; types, the &lt;code&gt;SerialJavaObject&lt;/code&gt; constructor is called where checks are made to ensure this object is serializable.</source>
          <target state="translated">참고 : (2) &lt;code&gt;Array&lt;/code&gt; 에 &lt;code&gt;java.sql.Types.JAVA_OBJECT&lt;/code&gt; 유형이 포함 된 경우 &lt;code&gt;SerialJavaObject&lt;/code&gt; 경우이 객체가 직렬화 가능한지 확인 생성자가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f2ab5273ebaf50850efbb3a5a3fae2eeb69eea14" translate="yes" xml:space="preserve">
          <source>Note: (2) The &lt;code&gt;Array&lt;/code&gt; object supplied to this constructor cannot return &lt;code&gt;null&lt;/code&gt; for any &lt;code&gt;Array.getArray()&lt;/code&gt; methods. &lt;code&gt;SerialArray&lt;/code&gt; cannot serialize &lt;code&gt;null&lt;/code&gt; array values.</source>
          <target state="translated">참고 : (2) 이 생성자에 제공된 &lt;code&gt;Array&lt;/code&gt; 객체는 &lt;code&gt;Array.getArray()&lt;/code&gt; 메서드에 대해 &lt;code&gt;null&lt;/code&gt; 을 반환 할 수 없습니다 . &lt;code&gt;SerialArray&lt;/code&gt; 는 &lt;code&gt;null&lt;/code&gt; 배열 값을 직렬화 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="77cbdc153f74b52e2330c098817f10ac4ac6e23d" translate="yes" xml:space="preserve">
          <source>Note: (3) The &lt;code&gt;Array&lt;/code&gt; object supplied to this constructor cannot return &lt;code&gt;null&lt;/code&gt; for any &lt;code&gt;Array.getArray()&lt;/code&gt; methods. &lt;code&gt;SerialArray&lt;/code&gt; cannot serialize null array values.</source>
          <target state="translated">참고 : (3) 이 생성자에 제공된 &lt;code&gt;Array&lt;/code&gt; 객체는 &lt;code&gt;Array.getArray()&lt;/code&gt; 메서드에 대해 &lt;code&gt;null&lt;/code&gt; 을 반환 할 수 없습니다 . &lt;code&gt;SerialArray&lt;/code&gt; 는 null 배열 값을 직렬화 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="743169cc2f7786ab9238e67965adb946d4be8d89" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;JdbcRowSet&lt;/code&gt; does not require the &lt;code&gt;populate&lt;/code&gt; method as it is undefined in this class.</source>
          <target state="translated">참고 : &lt;code&gt;JdbcRowSet&lt;/code&gt; 는 이 클래스에 정의되어 있지 않으므로 &lt;code&gt;populate&lt;/code&gt; 메소드가 필요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="0c9c385460860b0e957297b560d1b453306ec982" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;SwingWorker&lt;/code&gt; is only designed to be executed once. Executing a &lt;code&gt;SwingWorker&lt;/code&gt; more than once will not result in invoking the &lt;code&gt;doInBackground&lt;/code&gt; method twice.</source>
          <target state="translated">참고 : &lt;code&gt;SwingWorker&lt;/code&gt; 는 한 번만 실행되도록 설계되었습니다. &lt;code&gt;SwingWorker&lt;/code&gt; 를 두 번 이상 실행 해도 &lt;code&gt;doInBackground&lt;/code&gt; 메서드가 두 번 호출되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="254dafe97410ce13ab669b9f0949b009f389b447" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;password&lt;/code&gt; is cloned before it is stored in the new &lt;code&gt;PBEKeySpec&lt;/code&gt; object.</source>
          <target state="translated">참고 : &lt;code&gt;password&lt;/code&gt; 는 새 &lt;code&gt;PBEKeySpec&lt;/code&gt; 오브젝트에 저장되기 전에 복제됩니다 .</target>
        </trans-unit>
        <trans-unit id="46ab5930f3cbabd25f39b229ec05b8cfaba390de" translate="yes" xml:space="preserve">
          <source>Note: A &lt;code&gt;Joinable&lt;/code&gt; object is any &lt;code&gt;RowSet&lt;/code&gt; object that has implemented the &lt;code&gt;Joinable&lt;/code&gt; interface.</source>
          <target state="translated">참고 : &lt;code&gt;Joinable&lt;/code&gt; 개체는 &lt;code&gt;Joinable&lt;/code&gt; 인터페이스를 구현 한 &lt;code&gt;RowSet&lt;/code&gt; 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="040b0e9f8c6554028c4dc40a0cf14489770cd695" translate="yes" xml:space="preserve">
          <source>Note: A PostConstruct interceptor method must not throw application exceptions, but it may be declared to throw checked exceptions including the java.lang.Exception if the same interceptor method interposes on business or timeout methods in addition to lifecycle events. If a PostConstruct interceptor method returns a value, it is ignored by the container.</source>
          <target state="translated">참고 : PostConstruct 인터셉터 메소드는 애플리케이션 예외를 발생시키지 않아야하지만, 동일한 인터셉터 메소드가 라이프 사이클 이벤트 외에 비즈니스 또는 제한 시간 초과 메소드에 삽입되는 경우 java.lang.Exception을 포함하여 확인 된 예외를 발생 시키도록 선언 될 수 있습니다. PostConstruct 인터셉터 메소드가 값을 리턴하면 컨테이너에서이를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="fea6b6198364e245978b1624df46b8baf87128b5" translate="yes" xml:space="preserve">
          <source>Note: A PreDestroy interceptor method must not throw application exceptions, but it may be declared to throw checked exceptions including the java.lang.Exception if the same interceptor method interposes on business or timeout methods in addition to lifecycle events. If a PreDestroy interceptor method returns a value, it is ignored by the container.</source>
          <target state="translated">참고 : PreDestroy 인터셉터 메소드는 애플리케이션 예외를 발생시키지 않아야하지만 동일한 인터셉터 메소드가 라이프 사이클 이벤트 외에 비즈니스 또는 제한 시간 초과 메소드에 삽입되는 경우 java.lang.Exception을 포함하여 확인 된 예외를 발생 시키도록 선언 될 수 있습니다. PreDestroy 인터셉터 메소드가 값을 리턴하면 컨테이너에서이를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="dfa725603a4fb969b0f8ddaaff6ff51bf646fedb" translate="yes" xml:space="preserve">
          <source>Note: A pathname consisting of a single &quot;*&quot; indicates all the files in the current directory, while a pathname consisting of a single &quot;-&quot; indicates all the files in the current directory and (recursively) all files and subdirectories contained in the current directory.</source>
          <target state="translated">참고 : 단일 &quot;*&quot;로 구성된 경로 이름은 현재 디렉토리의 모든 파일을 나타내고, 단일 &quot;-&quot;로 구성된 경로 이름은 현재 디렉토리의 모든 파일 및 현재에 포함 된 모든 파일 및 서브 디렉토리를 나타냅니다. 예배 규칙서.</target>
        </trans-unit>
        <trans-unit id="601d43cd3faf7f02357671bd5912f9638a00920c" translate="yes" xml:space="preserve">
          <source>Note: A valid reduction polynomial is either a trinomial (X^&lt;code&gt;m&lt;/code&gt; + X^&lt;code&gt;k&lt;/code&gt; + 1 with &lt;code&gt;m&lt;/code&gt; &amp;gt; &lt;code&gt;k&lt;/code&gt; &amp;gt;= 1) or a pentanomial (X^&lt;code&gt;m&lt;/code&gt; + X^&lt;code&gt;k3&lt;/code&gt; + X^&lt;code&gt;k2&lt;/code&gt; + X^&lt;code&gt;k1&lt;/code&gt; + 1 with &lt;code&gt;m&lt;/code&gt; &amp;gt; &lt;code&gt;k3&lt;/code&gt; &amp;gt; &lt;code&gt;k2&lt;/code&gt; &amp;gt; &lt;code&gt;k1&lt;/code&gt; &amp;gt;= 1).</source>
          <target state="translated">참고 : 유효한 축소 다항식은 삼항식 (X ^ &lt;code&gt;m&lt;/code&gt; + X ^ &lt;code&gt;k&lt;/code&gt; + 1 인 &lt;code&gt;m&lt;/code&gt; &amp;gt; &lt;code&gt;k&lt;/code&gt; &amp;gt; = 1)이거나 오각형 (X ^ &lt;code&gt;m&lt;/code&gt; + X ^ &lt;code&gt;k3&lt;/code&gt; + X ^ &lt;code&gt;k2&lt;/code&gt; + X ^ &lt;code&gt;k1&lt;/code&gt; + 1)입니다. &lt;code&gt;m&lt;/code&gt; &amp;gt; &lt;code&gt;k3&lt;/code&gt; &amp;gt; &lt;code&gt;k2&lt;/code&gt; &amp;gt; &lt;code&gt;k1&lt;/code&gt; &amp;gt; = 1).</target>
        </trans-unit>
        <trans-unit id="6c108a434a0cc7b49517402fe3622f9977c52431" translate="yes" xml:space="preserve">
          <source>Note: All X509Certificate subclasses must provide a constructor of the form:</source>
          <target state="translated">참고 : 모든 X509Certificate 서브 클래스는 다음 형식의 생성자를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="23a9717c05af24a9b056171e4e2e247ae12ed3ce" translate="yes" xml:space="preserve">
          <source>Note: Allowing deleted rows to remain visible complicates the behavior of some of the methods. However, most &lt;code&gt;RowSet&lt;/code&gt; object users can simply ignore this extra detail because only sophisticated applications will likely want to take advantage of this feature.</source>
          <target state="translated">참고 : 삭제 된 행이 계속 표시되도록 허용하면 일부 메서드의 동작이 복잡해집니다. 그러나 대부분의 &lt;code&gt;RowSet&lt;/code&gt; 개체 사용자는 정교한 응용 프로그램 만이 기능을 이용하기를 원하기 때문에이 추가 세부 사항을 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a5399bf0b815dcc23647625f34051f621f58516" translate="yes" xml:space="preserve">
          <source>Note: Allowing deleted rows to remain visible complicates the behavior of some standard JDBC &lt;code&gt;RowSet&lt;/code&gt; Implementations methods. However, most rowset users can simply ignore this extra detail because only very specialized applications will likely want to take advantage of this feature.</source>
          <target state="translated">참고 : 삭제 된 행이 계속 표시되도록 허용하면 일부 표준 JDBC &lt;code&gt;RowSet&lt;/code&gt; 구현 메소드 의 동작이 복잡해집니다 . 그러나 대부분의 행 집합 사용자는 매우 전문화 된 응용 프로그램 만이 기능을 이용하기를 원하기 때문에이 추가 세부 정보를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="70bf90b0059e20282dec8b1fc95979dce51ba913" translate="yes" xml:space="preserve">
          <source>Note: Allowing deleted rows to remain visible complicates the behavior of some standard JDBC &lt;code&gt;RowSet&lt;/code&gt; implementations methods. However, most rowset users can simply ignore this extra detail because only very specialized applications will likely want to take advantage of this feature.</source>
          <target state="translated">참고 : 삭제 된 행이 계속 표시되도록 허용하면 일부 표준 JDBC &lt;code&gt;RowSet&lt;/code&gt; 구현 메소드 의 동작이 복잡해집니다 . 그러나 대부분의 행 집합 사용자는 매우 전문화 된 응용 프로그램 만이 기능을 이용하기를 원하기 때문에이 추가 세부 정보를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb1e0cf5a0c0e42b2b6e16c731f84f74ed100301" translate="yes" xml:space="preserve">
          <source>Note: Although this API consistently refers to the stimulus for a drag and drop operation being a physical gesture by a human user, this does not preclude a programmatically driven DnD operation given the appropriate implementation of a &lt;code&gt;DragSource&lt;/code&gt;. This package contains the abstract class &lt;code&gt;MouseDragGestureRecognizer&lt;/code&gt; for recognizing mouse device gestures. Other abstract subclasses may be provided by the platform to support other input devices or particular &lt;code&gt;Component&lt;/code&gt; class semantics.</source>
          <target state="translated">참고 :이 API는 드래그 앤 드롭 작업에 대한 자극을 인간 사용자의 물리적 제스처라고 일관되게 언급하지만, 이는 &lt;code&gt;DragSource&lt;/code&gt; 의 적절한 구현을 고려할 때 프로그래밍 방식으로 구동되는 DnD 작업을 배제하지 않습니다 . 이 패키지에는 마우스 장치 제스처를 인식하기위한 추상 클래스 &lt;code&gt;MouseDragGestureRecognizer&lt;/code&gt; 가 포함되어 있습니다. 다른 입력 장치 또는 특정 &lt;code&gt;Component&lt;/code&gt; 클래스 의미 체계 를 지원하기 위해 다른 추상 하위 클래스가 플랫폼에 의해 제공 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eb229cc90e4f767f54fad19b5d97dbde1db2768c" translate="yes" xml:space="preserve">
          <source>Note: Always use the &lt;a href=&quot;datatypefactory&quot;&gt;&lt;code&gt;DatatypeFactory&lt;/code&gt;&lt;/a&gt; to construct an instance of &lt;code&gt;Duration&lt;/code&gt;. The constructor on this class cannot be guaranteed to produce an object with a consistent state and may be removed in the future.</source>
          <target state="translated">참고 : 항상 &lt;a href=&quot;datatypefactory&quot;&gt; &lt;code&gt;DatatypeFactory&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;Duration&lt;/code&gt; 인스턴스를 생성하십시오 . 이 클래스의 생성자는 일관성있는 상태의 객체를 생성한다고 보장 할 수 없으며 나중에 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="252b6b87f84154da1d9cf7e84d8916f68a9053a3" translate="yes" xml:space="preserve">
          <source>Note: Always use the &lt;a href=&quot;datatypefactory&quot;&gt;&lt;code&gt;DatatypeFactory&lt;/code&gt;&lt;/a&gt; to construct an instance of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;. The constructor on this class cannot be guaranteed to produce an object with a consistent state and may be removed in the future.</source>
          <target state="translated">참고 : 항상 &lt;a href=&quot;datatypefactory&quot;&gt; &lt;code&gt;DatatypeFactory&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; 인스턴스를 생성하십시오 . 이 클래스의 생성자는 일관성있는 상태의 객체를 생성한다고 보장 할 수 없으며 나중에 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43f17d7a0f5b21fb69795c2667b72f034e5e19a6" translate="yes" xml:space="preserve">
          <source>Note: An implementation of this method typically performs an internal conversion from the runtime reflective representation of an annotation type as a &lt;code&gt;Class&lt;/code&gt; object to a different representation used for annotation processing. The set of annotation types present in the runtime context may differ from the set of annotation types present in the context of annotation processing in a particular environmental configuration. If an runtime annotation type is not present in the annotation processing context, the situation is not treated as an error and no elements are found for that annotation type.</source>
          <target state="translated">참고 :이 메서드의 구현은 일반적으로 주석 유형의 런타임 반영 표현에서 &lt;code&gt;Class&lt;/code&gt; 객체로 주석 처리에 사용되는 다른 표현 으로 내부 변환을 수행합니다 . 런타임 컨텍스트에있는 주석 유형 집합은 특정 환경 구성에서 주석 처리 컨텍스트에있는 주석 유형 집합과 다를 수 있습니다. 런타임 어노테이션 유형이 어노테이션 처리 컨텍스트에없는 경우 상황은 오류로 처리되지 않으며 해당 어노테이션 유형에 대한 요소를 찾을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e8153ceb395f3c9c5fbce1183a9833ea16ba0054" translate="yes" xml:space="preserve">
          <source>Note: Applications should use the &lt;code&gt;JScrollPane&lt;/code&gt; version of this method. It only exists for backwards compatibility with the Swing 1.0.2 (and earlier) versions of this class.</source>
          <target state="translated">참고 : 애플리케이션은 이 메소드 의 &lt;code&gt;JScrollPane&lt;/code&gt; 버전을 사용해야합니다 . 이 클래스의 Swing 1.0.2 (및 이전) 버전과의 하위 호환성을 위해서만 존재합니다.</target>
        </trans-unit>
        <trans-unit id="a1cc2841647fc82f79501840eb2841a8531b0315" translate="yes" xml:space="preserve">
          <source>Note: As of v1.3, it is recommended that developers call &lt;code&gt;Component.AccessibleAWTComponent.getAccessibleChild()&lt;/code&gt; instead of this method.</source>
          <target state="translated">참고 : v1.3부터는 개발자 가이 메소드 대신 &lt;code&gt;Component.AccessibleAWTComponent.getAccessibleChild()&lt;/code&gt; 를 호출하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="f37e0e69a5ef16e424f1577f447cc44c2f9db3cb" translate="yes" xml:space="preserve">
          <source>Note: Attempting to show the printing dialog or run interactively, while in headless mode, will result in a &lt;code&gt;HeadlessException&lt;/code&gt;.</source>
          <target state="translated">참고 : 헤드리스 모드에서 인쇄 대화 상자를 표시하거나 대화식으로 실행하려고하면 &lt;code&gt;HeadlessException&lt;/code&gt; 이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="2adec88ec6d6cd35667bae332e97cb78b026a927" translate="yes" xml:space="preserve">
          <source>Note: By default, a node allows children.</source>
          <target state="translated">참고 : 기본적으로 노드는 자식을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="c06f5db077ab1ba124afa4d306145569d1a0a304" translate="yes" xml:space="preserve">
          <source>Note: Calling &lt;code&gt;setTime()&lt;/code&gt; with &lt;code&gt;Date(Long.MAX_VALUE)&lt;/code&gt; or &lt;code&gt;Date(Long.MIN_VALUE)&lt;/code&gt; may yield incorrect field values from &lt;code&gt;get()&lt;/code&gt;.</source>
          <target state="translated">참고 : &lt;code&gt;Date(Long.MAX_VALUE)&lt;/code&gt; 또는 &lt;code&gt;Date(Long.MIN_VALUE)&lt;/code&gt; &lt;code&gt;setTime()&lt;/code&gt; 을 호출 &lt;code&gt;get()&lt;/code&gt; 에서 잘못된 필드 값이 생성 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f47afedb3f3f0b810383c13f7dd2ba3a43b6925e" translate="yes" xml:space="preserve">
          <source>Note: Calling the method &lt;code&gt;relative(1)&lt;/code&gt; is identical to calling the method &lt;code&gt;next()&lt;/code&gt; and calling the method &lt;code&gt;relative(-1)&lt;/code&gt; is identical to calling the method &lt;code&gt;previous()&lt;/code&gt;.</source>
          <target state="translated">참고 : &lt;code&gt;relative(1)&lt;/code&gt; 메서드를 호출하는 것은 &lt;code&gt;next()&lt;/code&gt; 메서드 를 호출하는 것과 &lt;code&gt;relative(-1)&lt;/code&gt; 메서드를 호출하는 것은 &lt;code&gt;previous()&lt;/code&gt; 메서드를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="3a3cfb9b03ce7b1128c80b10c3ccdfe1fea63487" translate="yes" xml:space="preserve">
          <source>Note: Closing a socket doesn't clear its binding state, which means this method will return &lt;code&gt;true&lt;/code&gt; for a closed socket (see &lt;a href=&quot;#isClosed()&quot;&gt;&lt;code&gt;isClosed()&lt;/code&gt;&lt;/a&gt;) if it was successfully bound prior to being closed.</source>
          <target state="translated">참고 : 소켓을 닫는 것은 바인딩 상태를 지우지 않습니다. 즉,이 메서드는 닫히기 전에 성공적으로 바인딩 된 경우 닫힌 소켓에 대해 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 ( &lt;a href=&quot;#isClosed()&quot;&gt; &lt;code&gt;isClosed()&lt;/code&gt; &lt;/a&gt; 참조 ) .</target>
        </trans-unit>
        <trans-unit id="6a685b174efe46752fec09e8d8e263034bafa3cd" translate="yes" xml:space="preserve">
          <source>Note: Closing a socket doesn't clear its binding state, which means this method will return &lt;code&gt;true&lt;/code&gt; for a closed socket (see &lt;a href=&quot;#isClosed()&quot;&gt;&lt;code&gt;isClosed()&lt;/code&gt;&lt;/a&gt;) if it was successfuly bound prior to being closed.</source>
          <target state="translated">참고 : 소켓을 닫는 것은 바인딩 상태를 지우지 않습니다. 즉,이 메서드는 닫히기 전에 성공적으로 바인딩 된 경우 닫힌 소켓에 대해 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 ( &lt;a href=&quot;#isClosed()&quot;&gt; &lt;code&gt;isClosed()&lt;/code&gt; &lt;/a&gt; 참조 ) .</target>
        </trans-unit>
        <trans-unit id="a83420c07620959c69b392fced7ba206ef6cf144" translate="yes" xml:space="preserve">
          <source>Note: Closing a socket doesn't clear its binding state, which means this method will return &lt;code&gt;true&lt;/code&gt; for a closed socket (see &lt;a href=&quot;socket#isClosed--&quot;&gt;&lt;code&gt;isClosed()&lt;/code&gt;&lt;/a&gt;) if it was successfuly bound prior to being closed.</source>
          <target state="translated">참고 : 소켓을 닫아도 바인딩 상태가 지워지지 않습니다. 즉,이 메소드가 닫힌 소켓 ( &lt;a href=&quot;socket#isClosed--&quot;&gt; &lt;code&gt;isClosed()&lt;/code&gt; &lt;/a&gt; 참조 ) 이 닫히기 전에 성공적으로 바인드 된 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="3ef4e948f57d2ee594e653de386f4be86189c516" translate="yes" xml:space="preserve">
          <source>Note: Closing a socket doesn't clear its connection state, which means this method will return &lt;code&gt;true&lt;/code&gt; for a closed socket (see &lt;a href=&quot;#isClosed()&quot;&gt;&lt;code&gt;isClosed()&lt;/code&gt;&lt;/a&gt;) if it was successfully connected prior to being closed.</source>
          <target state="translated">참고 : 소켓을 닫아도 연결 상태가 지워지지는 않습니다. 즉,이 메서드는 닫히기 전에 성공적으로 연결된 경우 닫힌 소켓에 대해 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 ( &lt;a href=&quot;#isClosed()&quot;&gt; &lt;code&gt;isClosed()&lt;/code&gt; &lt;/a&gt; 참조 ) .</target>
        </trans-unit>
        <trans-unit id="7761002f54a9c1f2f804c509442839f0ba8dca1d" translate="yes" xml:space="preserve">
          <source>Note: Closing a socket doesn't clear its connection state, which means this method will return &lt;code&gt;true&lt;/code&gt; for a closed socket (see &lt;a href=&quot;#isClosed()&quot;&gt;&lt;code&gt;isClosed()&lt;/code&gt;&lt;/a&gt;) if it was successfuly connected prior to being closed.</source>
          <target state="translated">참고 : 소켓을 닫아도 연결 상태는 지워지지 않습니다. 즉,이 메서드는 닫히기 전에 성공적으로 연결된 경우 닫힌 소켓에 대해 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 ( &lt;a href=&quot;#isClosed()&quot;&gt; &lt;code&gt;isClosed()&lt;/code&gt; &lt;/a&gt; 참조 ) .</target>
        </trans-unit>
        <trans-unit id="10f01f12f1a698aba85aafe79f168cd72a588f9c" translate="yes" xml:space="preserve">
          <source>Note: Closing a socket doesn't clear its connection state, which means this method will return &lt;code&gt;true&lt;/code&gt; for a closed socket (see &lt;a href=&quot;socket#isClosed--&quot;&gt;&lt;code&gt;isClosed()&lt;/code&gt;&lt;/a&gt;) if it was successfuly connected prior to being closed.</source>
          <target state="translated">참고 : 소켓을 닫아도 연결 상태가 지워지지 않습니다. 즉,이 방법은 닫힌 소켓 ( &lt;a href=&quot;socket#isClosed--&quot;&gt; &lt;code&gt;isClosed()&lt;/code&gt; &lt;/a&gt; 참조 ) 이 닫히기 전에 성공적으로 연결되면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="9f4ba21d3677cf8ccb8a6bd9c2bc3be7c6f13481" translate="yes" xml:space="preserve">
          <source>Note: Depending on the implementation, the &lt;code&gt;generateSeed&lt;/code&gt; and &lt;code&gt;nextBytes&lt;/code&gt; methods may block as entropy is being gathered, for example, if they need to read from /dev/random on various Unix-like operating systems.</source>
          <target state="translated">참고 : 구현에 따라 &lt;code&gt;generateSeed&lt;/code&gt; 및 &lt;code&gt;nextBytes&lt;/code&gt; 메소드는 엔트로피가 수집 될 때 차단 될 수 있습니다 (예 : 다양한 Unix 계열 운영 체제의 / dev / random에서 읽어야하는 경우).</target>
        </trans-unit>
        <trans-unit id="91f49ae78c5e67b727b21e0329fb8dd1044cc68f" translate="yes" xml:space="preserve">
          <source>Note: Depending on the implementation, the &lt;code&gt;generateSeed&lt;/code&gt;, &lt;code&gt;reseed&lt;/code&gt; and &lt;code&gt;nextBytes&lt;/code&gt; methods may block as entropy is being gathered, for example, if the entropy source is /dev/random on various Unix-like operating systems.</source>
          <target state="translated">참고 : 구현에 따라 엔트로피가 수집되는 동안 &lt;code&gt;generateSeed&lt;/code&gt; , &lt;code&gt;reseed&lt;/code&gt; 및 &lt;code&gt;nextBytes&lt;/code&gt; 메서드가 차단 될 수 있습니다 (예 : 다양한 Unix 유사 운영 체제에서 엔트로피 소스가 / dev / random 인 경우).</target>
        </trans-unit>
        <trans-unit id="e3abcb90f9fca795630637ce723df4e905c92f8c" translate="yes" xml:space="preserve">
          <source>Note: Disabling a component does not disable its children.</source>
          <target state="translated">참고 : 구성 요소를 비활성화해도 하위 구성 요소는 비활성화되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6a75c1b491a3283d2385a1f5bed1105019f4b2f7" translate="yes" xml:space="preserve">
          <source>Note: Disabling a heavyweight container prevents all components in this container from receiving any input events. But disabling a lightweight container affects only this container.</source>
          <target state="translated">참고 : 중량 컨테이너를 비활성화하면이 컨테이너의 모든 구성 요소가 입력 이벤트를 수신하지 못합니다. 그러나 경량 컨테이너를 비활성화하면이 컨테이너에만 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="ea026c18f95ff0c7387c7ef585b985251ee796e3" translate="yes" xml:space="preserve">
          <source>Note: Disabling a lightweight component does not prevent it from receiving MouseEvents.</source>
          <target state="translated">참고 : 경량 구성 요소를 비활성화해도 MouseEvents를 수신하지 못하는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="f5434552960c8c2dea533b2ca1ddeb3927183d35" translate="yes" xml:space="preserve">
          <source>Note: During the creation of a new &lt;a href=&quot;thread#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long,boolean)&quot;&gt;&lt;code&gt;thread&lt;/code&gt;&lt;/a&gt;, it is possible to</source>
          <target state="translated">참고 : 새 &lt;a href=&quot;thread#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long,boolean)&quot;&gt; &lt;code&gt;thread&lt;/code&gt; &lt;/a&gt; 만드는 동안 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="50dffa9483cbb54d86f861329d63921441eea696" translate="yes" xml:space="preserve">
          <source>Note: Each string should be of the form</source>
          <target state="translated">참고 : 각 문자열은 형식이어야합니다</target>
        </trans-unit>
        <trans-unit id="6a3087288ea895ef3d6a3ca12adc1620eb080716" translate="yes" xml:space="preserve">
          <source>Note: End users are able to determine the nature and details of the color support by querying the &lt;a href=&quot;printermoreinfomanufacturer&quot;&gt;&lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">참고 : 최종 사용자는 &lt;a href=&quot;printermoreinfomanufacturer&quot;&gt; &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt; &lt;/a&gt; 속성 을 쿼리하여 색상 지원의 특성과 세부 사항을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="20b962ae0f4b168a0cc979f0b6847c9bed17ec93" translate="yes" xml:space="preserve">
          <source>Note: Font rotations can cause text baselines to be rotated, and multiple runs with different rotations can cause the baseline to bend or zig-zag. In order to account for this (rare) possibility, some APIs are specified to return metrics and take parameters 'in baseline-relative coordinates' (e.g. ascent, advance), and others are in 'in standard coordinates' (e.g. getBounds). Values in baseline-relative coordinates map the 'x' coordinate to the distance along the baseline, (positive x is forward along the baseline), and the 'y' coordinate to a distance along the perpendicular to the baseline at 'x' (positive y is 90 degrees clockwise from the baseline vector). Values in standard coordinates are measured along the x and y axes, with 0,0 at the origin of the TextLayout. Documentation for each relevant API indicates what values are in what coordinate system. In general, measurement-related APIs are in baseline-relative coordinates, while display-related APIs are in standard coordinates.</source>
          <target state="translated">참고 : 글꼴 회전으로 인해 텍스트 기준선이 회전 될 수 있으며, 다른 회전으로 여러 번 실행하면 기준선이 구부러 지거나 지그재그로 표시 될 수 있습니다. 이 (희귀 한) 가능성을 설명하기 위해 일부 API는 메트릭을 반환하고 '기준선-상대 좌표'(예 : 상승, 전진)에서 매개 변수를 취하도록 지정되고 다른 API는 '표준 좌표'(예 : getBounds)에 있습니다. 기준선 상대 좌표의 값은 'x'좌표를 기준선을 따라 거리에 매핑하고 (양수 x는 기준선을 따라 앞쪽), 'y'좌표를 'x'에서 기준선에 수직 인 거리에 매핑합니다 (양수). y는 기준선 벡터에서 시계 방향으로 90 도입니다. 표준 좌표의 값은 x 및 y 축을 따라 측정되며 TextLayout의 원점에 0,0이 있습니다.각 관련 API에 대한 문서는 어떤 좌표계에 어떤 값이 있는지를 나타냅니다. 일반적으로 측정 관련 API는 기준선 기준 좌표에있는 반면 디스플레이 관련 API는 표준 좌표에 있습니다.</target>
        </trans-unit>
        <trans-unit id="53dbd3840742378264064623ca4a25b31735498f" translate="yes" xml:space="preserve">
          <source>Note: Font rotations can cause text baselines to be rotated. In order to account for this (rare) possibility, font APIs are specified to return metrics and take parameters 'in baseline-relative coordinates'. This maps the 'x' coordinate to the advance along the baseline, (positive x is forward along the baseline), and the 'y' coordinate to a distance along the perpendicular to the baseline at 'x' (positive y is 90 degrees clockwise from the baseline vector). APIs for which this is especially important are called out as having 'baseline-relative coordinates.'</source>
          <target state="translated">참고 : 글꼴을 회전하면 텍스트 기준선이 회전 될 수 있습니다. 이 (드문) 가능성을 고려하기 위해 글꼴 API는 메트릭을 반환하고 '기준선 상대 좌표'에서 매개 변수를 사용하도록 지정됩니다. 이것은 'x'좌표를 기준선을 따라 진행 (양수 x는 기준선을 따라 앞쪽)에 매핑하고 'y'좌표는 'x'기준선에 수직 인 거리 (양수 y는 시계 방향으로 90도)에 매핑합니다. 기준 벡터에서). 이것이 특히 중요한 API는 '기준 기준 좌표'를 갖는 것으로 불립니다.</target>
        </trans-unit>
        <trans-unit id="4139c01db4343c79097098788239a9b16c7e48ab" translate="yes" xml:space="preserve">
          <source>Note: For components with built-in drop support, this location will be a subclass of &lt;code&gt;DropLocation&lt;/code&gt; of the same type returned by that component's &lt;code&gt;getDropLocation&lt;/code&gt; method.</source>
          <target state="translated">참고 : 기본 제공 놓기 지원이 있는 구성 요소의 &lt;code&gt;getDropLocation&lt;/code&gt; 위치는 해당 구성 요소의 getDropLocation 메서드 에서 반환 된 동일한 유형 의 &lt;code&gt;DropLocation&lt;/code&gt; 하위 클래스가 됩니다.</target>
        </trans-unit>
        <trans-unit id="60f68f1265565a7812dc791614b1dbe6455201b6" translate="yes" xml:space="preserve">
          <source>Note: For values other than &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt; NaN and &amp;plusmn;Infinity, this constructor is compatible with the values returned by &lt;a href=&quot;../lang/float#toString-float-&quot;&gt;&lt;code&gt;Float.toString(float)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../lang/double#toString-double-&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt;. This is generally the preferred way to convert a &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt; into a BigDecimal, as it doesn't suffer from the unpredictability of the &lt;a href=&quot;bigdecimal#BigDecimal-double-&quot;&gt;&lt;code&gt;BigDecimal(double)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">참고 : &lt;code&gt;float&lt;/code&gt; 및 &lt;code&gt;double&lt;/code&gt; NaN 및 &amp;plusmn; Infinity 이외의 값의 경우이 생성자는 &lt;a href=&quot;../lang/float#toString-float-&quot;&gt; &lt;code&gt;Float.toString(float)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../lang/double#toString-double-&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt; 반환 된 값과 호환됩니다 . 이는 일반적으로 &lt;code&gt;float&lt;/code&gt; 또는 &lt;code&gt;double&lt;/code&gt; 을 BigDecimal로 변환하는 데 선호되는 방법 입니다. &lt;a href=&quot;bigdecimal#BigDecimal-double-&quot;&gt; &lt;code&gt;BigDecimal(double)&lt;/code&gt; &lt;/a&gt; 생성자 의 예측 불가능으로 어려움을 겪지 않기 때문입니다 .</target>
        </trans-unit>
        <trans-unit id="f894b657e9d4f97ef5bbf661355e6ceddf605aba" translate="yes" xml:space="preserve">
          <source>Note: Granting code permission to accept or make connections to remote hosts may be dangerous because malevolent code can then more easily transfer and share confidential data among parties who may not otherwise have access to the data.</source>
          <target state="translated">참고 : 악의적 인 코드는 데이터에 액세스 할 수없는 당사자간에 기밀 데이터를보다 쉽게 ​​전송하고 공유 할 수 있기 때문에 원격 호스트를 수락하거나 연결하는 코드 권한을 부여하는 것은 위험 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b51214b61156f3a246b3290a74dbc8a2e74b40eb" translate="yes" xml:space="preserve">
          <source>Note: Great care must be exercised if mutable objects are used as set elements. The behavior of a set is not specified if the value of an object is changed in a manner that affects &lt;code&gt;equals&lt;/code&gt; comparisons while the object is an element in the set. A special case of this prohibition is that it is not permissible for a set to contain itself as an element.</source>
          <target state="translated">참고 : 가변 객체를 세트 요소로 사용하는 경우 각별히주의해야합니다. 오브젝트가 세트의 요소 인 동안 오브젝트의 값이 &lt;code&gt;equals&lt;/code&gt; 비교에 영향을주는 방식으로 변경되는 경우 세트의 동작이 지정되지 않습니다 . 이 금지의 특별한 경우는 세트가 자신을 요소로 포함하는 것이 허용되지 않는다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="aa4ec39829945455942368945581912399ff4861" translate="yes" xml:space="preserve">
          <source>Note: IETF BCP 47 places syntactic restrictions on variant subtags. Also BCP 47 subtags are strictly used to indicate additional variations that define a language or its dialects that are not covered by any combinations of language, script and region subtags. You can find a full list of valid variant codes in the IANA Language Subtag Registry (search for &quot;Type: variant&quot;).</source>
          <target state="translated">참고 : IETF BCP 47은 변형 하위 태그에 구문 제한을두고 있습니다. 또한 BCP 47 하위 태그는 언어, 스크립트 및 지역 하위 태그의 조합으로 다루지 않는 언어 또는 언어를 정의하는 추가 변형을 나타내는 데 엄격하게 사용됩니다. IANA Language Subtag Registry에서 유효한 변형 코드의 전체 목록을 찾을 수 있습니다 ( &quot;Type : variant&quot;검색).</target>
        </trans-unit>
        <trans-unit id="d3678099dea00b684cd036ffeb8507d5238df9b9" translate="yes" xml:space="preserve">
          <source>Note: If &lt;a href=&quot;#send(java.net.DatagramPacket)&quot;&gt;&lt;code&gt;send(DatagramPacket)&lt;/code&gt;&lt;/a&gt; is used to send a &lt;code&gt;DatagramPacket&lt;/code&gt; that is larger than the setting of SO_SNDBUF then it is implementation specific if the packet is sent or discarded.</source>
          <target state="translated">참고 : &lt;a href=&quot;#send(java.net.DatagramPacket)&quot;&gt; &lt;code&gt;send(DatagramPacket)&lt;/code&gt; &lt;/a&gt; 를 사용하여 SO_SNDBUF의 설정보다 큰 &lt;code&gt;DatagramPacket&lt;/code&gt; 을 전송하는 경우 패킷이 전송되거나 폐기되는 경우 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="9551c9847eec1ce96e4a8eea3102dc88018de79b" translate="yes" xml:space="preserve">
          <source>Note: If &lt;a href=&quot;datagramsocket#send-java.net.DatagramPacket-&quot;&gt;&lt;code&gt;send(DatagramPacket)&lt;/code&gt;&lt;/a&gt; is used to send a &lt;code&gt;DatagramPacket&lt;/code&gt; that is larger than the setting of SO_SNDBUF then it is implementation specific if the packet is sent or discarded.</source>
          <target state="translated">참고 : &lt;a href=&quot;datagramsocket#send-java.net.DatagramPacket-&quot;&gt; &lt;code&gt;send(DatagramPacket)&lt;/code&gt; &lt;/a&gt; 를 사용하여 SO_SNDBUF의 설정보다 큰 &lt;code&gt;DatagramPacket&lt;/code&gt; 을 보내는 경우 패킷을 보내거나 버릴 경우 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="412bec2a9cc39312861108c58e11aacc5e6a6ae3" translate="yes" xml:space="preserve">
          <source>Note: If &lt;code&gt;border&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt;, this method will throw an exception as borders are not supported on a &lt;code&gt;JViewPort&lt;/code&gt;.</source>
          <target state="translated">참고 : &lt;code&gt;border&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 이 &lt;code&gt;JViewPort&lt;/code&gt; 에서 테두리가 지원되지 않으므로이 메서드는 예외를 throw합니다 .</target>
        </trans-unit>
        <trans-unit id="0fd951afc544adf41cc0d9a745afbc720a08b745" translate="yes" xml:space="preserve">
          <source>Note: If &lt;code&gt;mgr&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt;, this method will throw an exception as layout managers are not supported on a &lt;code&gt;JLayer&lt;/code&gt;.</source>
          <target state="translated">참고 : &lt;code&gt;mgr&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 이 아닌 경우 레이아웃 관리자가 &lt;code&gt;JLayer&lt;/code&gt; 에서 지원되지 않으므로이 메서드는 예외를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="7a93b19789849e21dab5046a5d7210e76b18c634" translate="yes" xml:space="preserve">
          <source>Note: If support for extended mouse buttons is &lt;a href=&quot;../toolkit#areExtraMouseButtonsEnabled()&quot;&gt;&lt;code&gt;disabled&lt;/code&gt;&lt;/a&gt; by Java then the AWT event subsystem does not produce mouse events for the extended mouse buttons. So it is not expected that this method returns anything except &lt;code&gt;NOBUTTON&lt;/code&gt;, &lt;code&gt;BUTTON1&lt;/code&gt;, &lt;code&gt;BUTTON2&lt;/code&gt;, &lt;code&gt;BUTTON3&lt;/code&gt;.</source>
          <target state="translated">참고 : 확장 된 마우스 단추에 대한 지원 이 Java에 의해 &lt;a href=&quot;../toolkit#areExtraMouseButtonsEnabled()&quot;&gt; &lt;code&gt;disabled&lt;/code&gt; &lt;/a&gt; 된 경우 AWT 이벤트 서브 시스템은 확장 된 마우스 단추에 대한 마우스 이벤트를 생성하지 않습니다. 따라서이 메서드는 &lt;code&gt;NOBUTTON&lt;/code&gt; , &lt;code&gt;BUTTON1&lt;/code&gt; , &lt;code&gt;BUTTON2&lt;/code&gt; , &lt;code&gt;BUTTON3&lt;/code&gt; 이외의 항목을 반환 할 것으로 예상되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="f21babe50fa616f9cdc93212eb79bc61122ee54b" translate="yes" xml:space="preserve">
          <source>Note: If the character at the given index is a supplementary character, this method does not remove the entire character. If correct handling of supplementary characters is required, determine the number of &lt;code&gt;char&lt;/code&gt;s to remove by calling &lt;code&gt;Character.charCount(thisSequence.codePointAt(index))&lt;/code&gt;, where &lt;code&gt;thisSequence&lt;/code&gt; is this sequence.</source>
          <target state="translated">참고 : 지정된 색인의 문자가 보충 문자 인 경우이 방법으로 전체 문자를 제거하지는 않습니다. 보충 문자를 올바르게 처리해야하는 경우 &lt;code&gt;Character.charCount(thisSequence.codePointAt(index))&lt;/code&gt; 를 호출하여 제거 할 &lt;code&gt;char&lt;/code&gt; 수를 판별하십시오 . 여기서 &lt;code&gt;thisSequence&lt;/code&gt; 는이 순서입니다.</target>
        </trans-unit>
        <trans-unit id="b0582b661e46b6e1ec1c1aa47237e51fd281161c" translate="yes" xml:space="preserve">
          <source>Note: In</source>
          <target state="translated">참고 :</target>
        </trans-unit>
        <trans-unit id="a9204ecfd44447c273dec742a35d1dc5e57a1462" translate="yes" xml:space="preserve">
          <source>Note: In headless mode, no dialogs are shown and printing occurs on the default printer.</source>
          <target state="translated">참고 : 헤드리스 모드에서는 대화 상자가 표시되지 않으며 기본 프린터에서 인쇄가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="80314b1180455ac678366834d1e02acb97495d07" translate="yes" xml:space="preserve">
          <source>Note: In order for this class to function correctly, a connection to the data source must be available in order for the SQL &lt;code&gt;Array&lt;/code&gt; object to be materialized (have all of its elements brought to the client server) if necessary. At this time, logical pointers to the data in the data source, such as locators, are not currently supported.</source>
          <target state="translated">참고 :이 클래스가 올바르게 작동하려면 필요한 경우 SQL &lt;code&gt;Array&lt;/code&gt; 객체를 구체화 (모든 요소를 ​​클라이언트 서버로 가져옴) 할 수 있도록 데이터 소스에 대한 연결을 사용할 수 있어야합니다 . 현재 로케이터와 같은 데이터 소스의 데이터에 대한 논리적 포인터는 현재 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b3b1a2c5e2a2e0399f254c3d98b5564c349ce290" translate="yes" xml:space="preserve">
          <source>Note: In order to successfully retrieve the enclosed PKCS8EncodedKeySpec object, &lt;code&gt;cipher&lt;/code&gt; needs to be initialized to either Cipher.DECRYPT_MODE or Cipher.UNWRAP_MODE, with the same key and parameters used for generating the encrypted data.</source>
          <target state="translated">참고 : 동봉 된 PKCS8EncodedKeySpec 오브젝트를 검색 하려면 암호화 된 데이터를 생성하는 데 사용 된 동일한 키 및 매개 변수를 사용하여 Cipher.DECRYPT_MODE 또는 Cipher.UNWRAP_MODE로 &lt;code&gt;cipher&lt;/code&gt; 를 초기화해야합니다.</target>
        </trans-unit>
        <trans-unit id="35f4e4d2c03ea17823a71d15896db48d9f259672" translate="yes" xml:space="preserve">
          <source>Note: Invoking close() on this class has no effect, and methods of this class can be called after the stream has closed without generating an IOException.</source>
          <target state="translated">참고 :이 클래스에서 close ()를 호출해도 효과가 없으며 IOException을 생성하지 않고 스트림을 닫은 후에이 클래스의 메소드를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9acd43684782f4c36516fa96703a712377fa15d3" translate="yes" xml:space="preserve">
          <source>Note: It is generally a good idea for comparators to also implement &lt;code&gt;java.io.Serializable&lt;/code&gt;, as they may be used as ordering methods in serializable data structures (like &lt;a href=&quot;treeset&quot;&gt;&lt;code&gt;TreeSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;treemap&quot;&gt;&lt;code&gt;TreeMap&lt;/code&gt;&lt;/a&gt;). In order for the data structure to serialize successfully, the comparator (if provided) must implement &lt;code&gt;Serializable&lt;/code&gt;.</source>
          <target state="translated">참고 : 일반적으로 비교기는 &lt;code&gt;java.io.Serializable&lt;/code&gt; 을 구현하는 것이 좋습니다.이 메소드는 직렬화 가능한 데이터 구조 ( &lt;a href=&quot;treeset&quot;&gt; &lt;code&gt;TreeSet&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;treemap&quot;&gt; &lt;code&gt;TreeMap&lt;/code&gt; 등&lt;/a&gt; ) 에서 순서 메소드로 사용될 수 있기 때문 입니다. 데이터 구조를 직렬화하려면 비교기 (제공된 경우)가 &lt;code&gt;Serializable&lt;/code&gt; 을 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0ea2906d3917b8abbddbc2038796605eff4c7ae5" translate="yes" xml:space="preserve">
          <source>Note: It is implementation specific if a packet larger than SO_RCVBUF can be received.</source>
          <target state="translated">참고 : SO_RCVBUF보다 큰 패킷을 수신 할 수있는 경우 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="2239f01d37c61b0ecb9c5783ae42b578b987f2ee" translate="yes" xml:space="preserve">
          <source>Note: It is possible for the lead or anchor to be changed without a change to the selection. Notification of these changes is often important, such as when the new lead or anchor needs to be updated in the view. Therefore, caution is urged when changing the default value.</source>
          <target state="translated">참고 : 선택 항목을 변경하지 않고 리드 또는 앵커를 변경할 수 있습니다. 새 리드 또는 앵커를보기에서 업데이트해야하는 경우와 같이 이러한 변경 사항에 대한 알림은 종종 중요합니다. 따라서 기본값을 변경할 때는주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="1c15fcfabb87eeba8b7d67b1dcd02e626c1d13a0" translate="yes" xml:space="preserve">
          <source>Note: Loggers may be added dynamically as new classes are loaded. This method only reports on the loggers that are currently registered. It is also important to note that this method only returns the name of a Logger, not a strong reference to the Logger itself. The returned String does nothing to prevent the Logger from being garbage collected. In particular, if the returned name is passed to &lt;code&gt;LogManager.getLogger()&lt;/code&gt;, then the caller must check the return value from &lt;code&gt;LogManager.getLogger()&lt;/code&gt; for null to properly handle the case where the Logger has been garbage collected in the time since its name was returned by this method.</source>
          <target state="translated">참고 : 새 클래스가로드되면 로거가 동적으로 추가 될 수 있습니다. 이 방법은 현재 등록 된 로거에 대해서만보고합니다. 이 방법은 Logger 자체에 대한 강력한 참조가 아니라 Logger의 이름 만 반환한다는 점에 유의해야합니다. 반환 된 String은 Logger가 가비지 수집되는 것을 막기 위해 아무 것도 수행하지 않습니다. 특히, 리턴 된 이름이 &lt;code&gt;LogManager.getLogger()&lt;/code&gt; 전달 되면 호출자는 Logger가 이름 이후 시간에 가비지 수집 된 경우를 올바르게 처리하기 위해 &lt;code&gt;LogManager.getLogger()&lt;/code&gt; 의 리턴 값 을 널 ( null ) 로 확인해야합니다. 이 메소드에 의해 반환되었습니다.</target>
        </trans-unit>
        <trans-unit id="3ec3a90b9ec368a0c2060da5080fdcc9de372e44" translate="yes" xml:space="preserve">
          <source>Note: Many methods in &lt;code&gt;java.applet.Applet&lt;/code&gt; may be invoked by the applet only after the applet is fully constructed; applet should avoid calling methods in &lt;code&gt;java.applet.Applet&lt;/code&gt; in the constructor.</source>
          <target state="translated">주 : &lt;code&gt;java.applet.Applet&lt;/code&gt; 의 많은 메소드 는 애플릿이 완전히 구성된 후에 만 ​​애플릿에 의해 호출 될 수 있습니다. 애플릿은 생성자의 &lt;code&gt;java.applet.Applet&lt;/code&gt; 에서 메소드 호출을 피해야 합니다.</target>
        </trans-unit>
        <trans-unit id="651a2063ac716df1b0bb56e33cf3b1186971a0c0" translate="yes" xml:space="preserve">
          <source>Note: Not all focus transfers result from invoking this method. As such, a component may receive focus without this or any of the other &lt;code&gt;requestFocus&lt;/code&gt; methods of &lt;code&gt;Component&lt;/code&gt; being invoked.</source>
          <target state="translated">참고 : 모든 포커스 전송이이 메서드 호출로 인해 발생하는 것은 아닙니다. 따라서 &lt;code&gt;Component&lt;/code&gt; 는 호출되는 컴포넌트 의 다른 &lt;code&gt;requestFocus&lt;/code&gt; 메소드 없이도 포커스를받을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d91232c24d23c2f41135390407008447460af5f6" translate="yes" xml:space="preserve">
          <source>Note: Only one DER-encoded certificate is expected to be in the input stream. Also, all X509Certificate subclasses must provide a constructor of the form:</source>
          <target state="translated">참고 : 하나의 DER 인코딩 된 인증서 만 입력 스트림에 있어야합니다. 또한 모든 X509Certificate 서브 클래스는 다음 형식의 생성자를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="9d691f41b6dcafd57b2df8df59ee659db9896ed3" translate="yes" xml:space="preserve">
          <source>Note: Since &lt;code&gt;PreparedStatement&lt;/code&gt; objects have usually been parsed prior to making this call, disabling escape processing for prepared statements will likely have no effect.</source>
          <target state="translated">참고 : &lt;code&gt;PreparedStatement&lt;/code&gt; 오브젝트는 일반적으로이 호출을 작성하기 전에 구문 분석되었으므로 준비된 명령문에 대해 이스케이프 처리를 비활성화해도 효과가 없을 것입니다.</target>
        </trans-unit>
        <trans-unit id="848e86494df548fc6ea5713503f79da2648aee28" translate="yes" xml:space="preserve">
          <source>Note: Since prepared statements have usually been parsed prior to making this call, disabling escape processing for &lt;code&gt;PreparedStatements&lt;/code&gt; objects will have no effect.</source>
          <target state="translated">참고 : 준비된 명령문은 일반적으로이 호출을 작성하기 전에 구문 분석되었으므로 &lt;code&gt;PreparedStatements&lt;/code&gt; 오브젝트에 대한 이스케이프 처리를 사용 안함으로 설정해 도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="caf027bde669dbaaf11479083f77dbafe0d2c487" translate="yes" xml:space="preserve">
          <source>Note: Some earlier implementations of this interface may not support larger sizes of DSA parameters such as 2048 and 3072-bit.</source>
          <target state="translated">참고 :이 인터페이스의 일부 이전 구현은 2048 및 3072 비트와 같은 더 큰 크기의 DSA 매개 변수를 지원하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec2b6fdf03e13d06e9e0b6a98f8b7548c1440c31" translate="yes" xml:space="preserve">
          <source>Note: Some earlier implementations of this interface may not support larger values of DSA parameters such as 3072-bit.</source>
          <target state="translated">참고 :이 인터페이스의 일부 이전 구현은 3072 비트와 같은 더 큰 DSA 매개 변수 값을 지원하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba511f3a441875e19dfaf22c49c2beaa4e9cb0ef" translate="yes" xml:space="preserve">
          <source>Note: Standard name is returned instead of the specified one in the constructor when such mapping is available. See Appendix A in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/crypto/CryptoSpec.html#AppA&quot;&gt; Java Cryptography Architecture Reference Guide&lt;/a&gt; for information about standard Cipher algorithm names.</source>
          <target state="translated">참고 : 이러한 맵핑이 사용 가능한 경우 생성자에서 지정된 이름 대신 표준 이름이 리턴됩니다. 표준 암호 알고리즘 이름에 대한 정보 는 &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/crypto/CryptoSpec.html#AppA&quot;&gt;Java 암호화 아키텍처 참조 안내서&lt;/a&gt; 의 부록 A를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2c2db3c69c7f69e3cb2b89f81c974e5aff29dd2e" translate="yes" xml:space="preserve">
          <source>Note: Standard name is returned instead of the specified one in the constructor when such mapping is available. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html&quot;&gt; Java Security Standard Algorithm Names&lt;/a&gt; document for information about standard Cipher algorithm names.</source>
          <target state="translated">참고 : 이러한 매핑을 사용할 수있는 경우 생성자에 지정된 이름 대신 표준 이름이 반환됩니다. 표준 Cipher 알고리즘 이름에 대한 정보 는 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html&quot;&gt;Java Security Standard Algorithm Names&lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="361349c1d626e5252d0eef667e975faa69546c1d" translate="yes" xml:space="preserve">
          <source>Note: Standard name is returned instead of the specified one in the constructor when such mapping is available. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/security/standard-names.html&quot;&gt; Java Security Standard Algorithm Names&lt;/a&gt; document for information about standard Cipher algorithm names.</source>
          <target state="translated">참고 : 이러한 매핑을 사용할 수있는 경우 생성자에 지정된 이름 대신 표준 이름이 반환됩니다. 표준 암호 알고리즘 이름에 대한 정보 는 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/security/standard-names.html&quot;&gt;Java 보안 표준 알고리즘 이름&lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="02ca53e7426de968d6b4390467d9ce03282652d8" translate="yes" xml:space="preserve">
          <source>Note: Subclasses should override this method. If not overridden, it will default to returning the X500Principal of the end-entity certificate that was sent to the server for certificate-based ciphersuites or, return null for non-certificate based ciphersuites, such as Kerberos.</source>
          <target state="translated">참고 : 서브 클래스는이 메소드를 대체해야합니다. 재정의되지 않은 경우 기본적으로 인증서 기반 암호 슈트를 위해 서버로 전송 된 엔드 엔티티 인증서의 X500Principal을 반환하거나 Kerberos와 같은 비 인증서 기반 암호 슈트는 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="181b38b916afc9a7e3cb0592916dee2435bd4057" translate="yes" xml:space="preserve">
          <source>Note: Subclasses should override this method. If not overridden, it will default to returning the X500Principal of the server's end-entity certificate for certificate-based ciphersuites, or throw an SSLPeerUnverifiedException for non-certificate based ciphersuites, such as Kerberos.</source>
          <target state="translated">참고 : 서브 클래스는이 메소드를 대체해야합니다. 재정의되지 않은 경우 기본적으로 인증서 기반 암호 슈트에 대한 서버의 엔드 엔터티 인증서 X500Principal을 반환하거나 Kerberos와 같은 비 인증서 기반 암호 슈트에 대해 SSLPeerUnverifiedException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4e0597c375ecd77e983347a6d8f736bf62b1ab15" translate="yes" xml:space="preserve">
          <source>Note: Subclasses should overwrite the default implementation.</source>
          <target state="translated">참고 : 서브 클래스는 기본 구현을 덮어 써야합니다.</target>
        </trans-unit>
        <trans-unit id="16a58c6ce5f2e360c902df800db7fbc9d1fe59ed" translate="yes" xml:space="preserve">
          <source>Note: Swing now calls the newer version of &lt;code&gt;canImport&lt;/code&gt; that takes a &lt;code&gt;TransferSupport&lt;/code&gt;, which in turn calls this method (only if the component in the &lt;code&gt;TransferSupport&lt;/code&gt; is a &lt;code&gt;JComponent&lt;/code&gt;). Developers are encouraged to call and override the newer version as it provides more information (and is the only version that supports use with a &lt;code&gt;TransferHandler&lt;/code&gt; set directly on a &lt;code&gt;JFrame&lt;/code&gt; or other non-&lt;code&gt;JComponent&lt;/code&gt;).</source>
          <target state="translated">참고 : Swing은 이제 &lt;code&gt;TransferSupport&lt;/code&gt; 를받는 최신 버전의 &lt;code&gt;canImport&lt;/code&gt; 를 호출하며 ,이 메서드 는 차례로이 메서드를 호출합니다 ( &lt;code&gt;TransferSupport&lt;/code&gt; 의 구성 요소가 가 &lt;code&gt;JComponent&lt;/code&gt; 인 ). 개발자는 더 많은 정보를 제공하므로 최신 버전을 호출하고 재정의하는 것이 좋습니다 (그리고 &lt;code&gt;JFrame&lt;/code&gt; 또는 기타 비 &lt;code&gt;JComponent&lt;/code&gt; 에 직접 설정된 &lt;code&gt;TransferHandler&lt;/code&gt; 와 함께 사용을 지원하는 유일한 버전입니다 ).</target>
        </trans-unit>
        <trans-unit id="a2ef303dc5896a382bfeec9da600a255a8435449" translate="yes" xml:space="preserve">
          <source>Note: Swing now calls the newer version of &lt;code&gt;importData&lt;/code&gt; that takes a &lt;code&gt;TransferSupport&lt;/code&gt;, which in turn calls this method (if the component in the &lt;code&gt;TransferSupport&lt;/code&gt; is a &lt;code&gt;JComponent&lt;/code&gt;). Developers are encouraged to call and override the newer version as it provides more information (and is the only version that supports use with a &lt;code&gt;TransferHandler&lt;/code&gt; set directly on a &lt;code&gt;JFrame&lt;/code&gt; or other non-&lt;code&gt;JComponent&lt;/code&gt;).</source>
          <target state="translated">참고 : Swing은 이제 &lt;code&gt;TransferSupport&lt;/code&gt; 를받는 최신 버전의 &lt;code&gt;importData&lt;/code&gt; 를 호출하고이 메서드 는 차례로이 메서드를 호출합니다 ( &lt;code&gt;TransferSupport&lt;/code&gt; 의 구성 요소 가 &lt;code&gt;JComponent&lt;/code&gt; 인 경우 ). 개발자는 더 많은 정보를 제공하므로 최신 버전을 호출하고 재정의하는 것이 좋습니다 (그리고 &lt;code&gt;JFrame&lt;/code&gt; 또는 기타 비 &lt;code&gt;JComponent&lt;/code&gt; 에 직접 설정된 &lt;code&gt;TransferHandler&lt;/code&gt; 와 함께 사용을 지원하는 유일한 버전입니다 ).</target>
        </trans-unit>
        <trans-unit id="eefb4ab75388eb8e2bf68b8d0b97c4da599de784" translate="yes" xml:space="preserve">
          <source>Note: That to the right of the caret will have the same index value as the offset (the caret is between two characters).</source>
          <target state="translated">참고 : 캐럿 오른쪽에는 오프셋과 동일한 인덱스 값이 있습니다 (캐럿은 두 문자 사이에 있음).</target>
        </trans-unit>
        <trans-unit id="829e8ef4ac4910ca11bd792b728127d71a3ea5d8" translate="yes" xml:space="preserve">
          <source>Note: The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class includes a set of methods that can convert some other common closure-like objects, for example, &lt;a href=&quot;../../security/privilegedaction&quot;&gt;&lt;code&gt;PrivilegedAction&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;callable&quot;&gt;&lt;code&gt;Callable&lt;/code&gt;&lt;/a&gt; form so they can be submitted.</source>
          <target state="translated">참고 : &lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt; 클래스는 다른 일반적인 폐쇄와 같은 물체, 예를 들어, 변환 할 수있는 메소드 세트가 포함 &lt;a href=&quot;../../security/privilegedaction&quot;&gt; &lt;code&gt;PrivilegedAction&lt;/code&gt; 의&lt;/a&gt; 에 &lt;a href=&quot;callable&quot;&gt; &lt;code&gt;Callable&lt;/code&gt; &lt;/a&gt; 양식들이 제출 될 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="d038e2ac66816e885c5abe1b8f25d98475e2e3be" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;Clob&lt;/code&gt; object supplied to this constructor must return non-null for both the &lt;code&gt;Clob.getCharacterStream()&lt;/code&gt; and &lt;code&gt;Clob.getAsciiStream&lt;/code&gt; methods. This &lt;code&gt;SerialClob&lt;/code&gt; constructor cannot serialize a &lt;code&gt;Clob&lt;/code&gt; object in this instance and will throw an &lt;code&gt;SQLException&lt;/code&gt; object.</source>
          <target state="translated">참고 : 이 생성자에 제공된 &lt;code&gt;Clob&lt;/code&gt; 객체는 &lt;code&gt;Clob.getCharacterStream()&lt;/code&gt; 및 &lt;code&gt;Clob.getAsciiStream&lt;/code&gt; 메서드 모두에 대해 null이 아닌 값을 반환해야합니다 . 이 &lt;code&gt;SerialClob&lt;/code&gt; 생성자는 이 인스턴스에서 &lt;code&gt;Clob&lt;/code&gt; 개체를 직렬화 할 수 없으며 &lt;code&gt;SQLException&lt;/code&gt; 개체를 throw 합니다.</target>
        </trans-unit>
        <trans-unit id="59edeaff2e6ceb0a281032fa44a530fb015d75d0" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;TransferSupport&lt;/code&gt; object passed to this method is only valid for the duration of the method call. It is undefined what values it may contain after this method returns.</source>
          <target state="translated">참고 : 이 메서드에 전달 된 &lt;code&gt;TransferSupport&lt;/code&gt; 개체는 메서드 호출 기간 동안 만 유효합니다. 이 메서드가 반환 된 후 어떤 값이 포함될 수 있는지는 정의되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="86df5714c64fe20e95c1bd1a299337b5666514b4" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;acceptChanges()&lt;/code&gt; method will determine if the &lt;code&gt;COMMIT_ON_ACCEPT_CHANGES&lt;/code&gt; is set to true or not. If it is set to true, all updates in the synchronization are committed to the data source. Otherwise, the application &lt;b&gt;must&lt;/b&gt; explicitly call the &lt;code&gt;commit()&lt;/code&gt; or &lt;code&gt;rollback()&lt;/code&gt; methods as appropriate.</source>
          <target state="translated">참고 : &lt;code&gt;acceptChanges()&lt;/code&gt; 메소드는 &lt;code&gt;COMMIT_ON_ACCEPT_CHANGES&lt;/code&gt; 가 true로 설정 되었는지 여부를 판별합니다 . true로 설정하면 동기화의 모든 업데이트가 데이터 소스에 커밋됩니다. 그렇지 않으면 응용 프로그램 &lt;b&gt;이&lt;/b&gt; 명시 적으로 &lt;code&gt;commit()&lt;/code&gt; 또는 &lt;code&gt;rollback()&lt;/code&gt; 메서드를 적절 하게 호출 &lt;b&gt;해야합니다&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="e09b6f97f52df276a7f2d8e7779b8d21ae07350e" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;acceptChanges()&lt;/code&gt; method will determine if the &lt;code&gt;COMMIT_ON_ACCEPT_CHANGES&lt;/code&gt; is set to true or not. If it is set to true, all updates in the synchronization are committed to the data source. Otherwise, the application &lt;b&gt;must&lt;/b&gt; explicitly call the &lt;code&gt;commit&lt;/code&gt; or &lt;code&gt;rollback&lt;/code&gt; methods as appropriate.</source>
          <target state="translated">참고 : &lt;code&gt;acceptChanges()&lt;/code&gt; 메소드는 &lt;code&gt;COMMIT_ON_ACCEPT_CHANGES&lt;/code&gt; 가 true로 설정 되었는지 여부를 판별합니다 . true로 설정하면 동기화의 모든 업데이트가 데이터 소스에 커밋됩니다. 그렇지 않으면 응용 프로그램 이 &lt;code&gt;commit&lt;/code&gt; 또는 &lt;code&gt;rollback&lt;/code&gt; 메서드를 적절하게 명시 적으로 호출 &lt;b&gt;해야합니다&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="5fc7d3199e794e858e1fae14ccd1dd4da161d25c" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;readAheadLimit&lt;/code&gt; for this class has no meaning.</source>
          <target state="translated">참고 : 이 클래스 의 &lt;code&gt;readAheadLimit&lt;/code&gt; 는 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="0c70d1e1b6f573784d8c941b1e75ceb283fad1d2" translate="yes" xml:space="preserve">
          <source>Note: The LogManager may only retain a weak reference to the newly created Logger. It is important to understand that a previously created Logger with the given name may be garbage collected at any time if there is no strong reference to the Logger. In particular, this means that two back-to-back calls like &lt;code&gt;getLogger(&quot;MyLogger&quot;).log(...)&lt;/code&gt; may use different Logger objects named &quot;MyLogger&quot; if there is no strong reference to the Logger named &quot;MyLogger&quot; elsewhere in the program.</source>
          <target state="translated">참고 : LogManager는 새로 작성된 Logger에 대한 약한 참조 만 보유 할 수 있습니다. 지정된 이름으로 이전에 작성된 로거가 로거에 대한 강한 참조가없는 경우 언제든지 가비지 콜렉션 될 수 있음을 이해해야합니다. 특히, 다른 곳에 &quot;MyLogger&quot;라는 로거에 대한 참조가 없으면 &lt;code&gt;getLogger(&quot;MyLogger&quot;).log(...)&lt;/code&gt; 와 같은 두 개의 연속 호출이 &quot;MyLogger&quot; 라는 다른 Logger 객체를 사용할 수 있음을 의미합니다. 프로그램에서.</target>
        </trans-unit>
        <trans-unit id="92741ee82cf7d8822f7fe805f7832a246f91b414" translate="yes" xml:space="preserve">
          <source>Note: The LogManager may only retain a weak reference to the newly created Logger. It is important to understand that a previously created Logger with the given name may be garbage collected at any time if there is no strong reference to the Logger. In particular, this means that two back-to-back calls like &lt;code&gt;getLogger(&quot;MyLogger&quot;, ...).log(...)&lt;/code&gt; may use different Logger objects named &quot;MyLogger&quot; if there is no strong reference to the Logger named &quot;MyLogger&quot; elsewhere in the program.</source>
          <target state="translated">참고 : LogManager는 새로 작성된 Logger에 대한 약한 참조 만 보유 할 수 있습니다. 지정된 이름으로 이전에 작성된 로거가 로거에 대한 강한 참조가없는 경우 언제든지 가비지 콜렉션 될 수 있음을 이해해야합니다. 특히, 이는 &lt;code&gt;getLogger(&quot;MyLogger&quot;, ...).log(...)&lt;/code&gt; 에 대한 강력한 참조가 없으면 getLogger ( &quot;MyLogger&quot;, ...). log (...) 와 같은 두 개의 연속 호출에서 &quot;MyLogger&quot; 라는 다른 Logger 객체를 사용할 수 있음을 의미합니다. 프로그램의 다른 곳에서 &quot;MyLogger&quot;</target>
        </trans-unit>
        <trans-unit id="feb96d73bb909fef954b2328b78013fad55f611e" translate="yes" xml:space="preserve">
          <source>Note: The component must not be one that the developer has already added to the tabbed pane.</source>
          <target state="translated">참고 : 구성 요소는 개발자가 탭 창에 이미 추가 한 구성 요소가 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="b1de07c852c45672833ff546ee0d2df9cab68f19" translate="yes" xml:space="preserve">
          <source>Note: The component type of a array will always be created or loaded before the array - see</source>
          <target state="translated">참고 : 배열의 구성 요소 유형은 항상 배열 전에 생성되거나로드됩니다.</target>
        </trans-unit>
        <trans-unit id="0c41d54bb9b5669b0c64912f8485c39fa1e24012" translate="yes" xml:space="preserve">
          <source>Note: The data transfer should be completed before the call to the &lt;code&gt;DropTargetDropEvent&lt;/code&gt;'s dropComplete(boolean success) method. After that, a call to the getTransferData() method of the &lt;code&gt;Transferable&lt;/code&gt; returned by &lt;code&gt;DropTargetDropEvent.getTransferable()&lt;/code&gt; is guaranteed to succeed only if the data transfer is local; that is, only if &lt;code&gt;DropTargetDropEvent.isLocalTransfer()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. Otherwise, the behavior of the call is implementation-dependent.</source>
          <target state="translated">참고 : 데이터 전송은 &lt;code&gt;DropTargetDropEvent&lt;/code&gt; 의 dropComplete (boolean success) 메서드를 호출하기 전에 완료되어야합니다 . 그 후 &lt;code&gt;DropTargetDropEvent.getTransferable()&lt;/code&gt; 이 반환 한 &lt;code&gt;Transferable&lt;/code&gt; 의 getTransferData () 메서드에 대한 호출 은 데이터 전송이 로컬 인 경우에만 성공할 수 있습니다. 즉, &lt;code&gt;DropTargetDropEvent.isLocalTransfer()&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 를 . 그렇지 않으면 호출 동작이 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="dc241da938e654c2874870e524b6658bbd0bf4e6" translate="yes" xml:space="preserve">
          <source>Note: The defined behavior for &lt;code&gt;equals&lt;/code&gt; is known to be inconsistent with virtual hosting in HTTP.</source>
          <target state="translated">참고 : &lt;code&gt;equals&lt;/code&gt; 에 대해 정의 된 동작 은 HTTP의 가상 호스팅과 일치하지 않는 것으로 알려져 있습니다.</target>
        </trans-unit>
        <trans-unit id="468af138ea1737287630fec9eab7e7e34cfe5243" translate="yes" xml:space="preserve">
          <source>Note: The object returned from this method may be an instance of an implementation-specific class. The &lt;code&gt;RemoteObject&lt;/code&gt; class ensures serialization portability of its instances' remote references through the behavior of its custom &lt;code&gt;writeObject&lt;/code&gt; and &lt;code&gt;readObject&lt;/code&gt; methods. An instance of &lt;code&gt;RemoteRef&lt;/code&gt; should not be serialized outside of its &lt;code&gt;RemoteObject&lt;/code&gt; wrapper instance or the result may be unportable.</source>
          <target state="translated">참고 :이 메서드에서 반환 된 개체는 구현 별 클래스의 인스턴스 일 수 있습니다. &lt;code&gt;RemoteObject&lt;/code&gt; 에의 그 사용자의 동작을 통해 인스턴스 '원격 참조의 클래스 보장하지만 직렬화 이동성 &lt;code&gt;writeObject&lt;/code&gt; 와 &lt;code&gt;readObject&lt;/code&gt; 에 방법. &lt;code&gt;RemoteRef&lt;/code&gt; 의 인스턴스는 &lt;code&gt;RemoteObject&lt;/code&gt; 래퍼 인스턴스 외부에서 직렬화되어서는 안됩니다. 그렇지 않으면 결과를 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="cb2c0125ca52804eb84e6185f726b4defde7f085" translate="yes" xml:space="preserve">
          <source>Note: The platform MXBean interfaces (i.e. all subinterfaces of &lt;code&gt;PlatformManagedObject&lt;/code&gt;) are implemented by the Java platform only. New methods may be added in these interfaces in future Java SE releases. In addition, this &lt;code&gt;PlatformManagedObject&lt;/code&gt; interface is only intended for the management interfaces for the platform to extend but not for applications.</source>
          <target state="translated">참고 : 플랫폼 MXBean 인터페이스 (예 : &lt;code&gt;PlatformManagedObject&lt;/code&gt; 의 모든 하위 인터페이스 )는 Java 플랫폼으로 만 구현됩니다. 향후 Java SE 릴리스에서는 이러한 인터페이스에 새로운 메소드가 추가 될 수 있습니다. 또한이 &lt;code&gt;PlatformManagedObject&lt;/code&gt; 인터페이스는 플랫폼 의 관리 인터페이스만을위한 것이지 애플리케이션을위한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="b080218a8b8b36e4aa5303cc15460cb9371e046f" translate="yes" xml:space="preserve">
          <source>Note: The process may not terminate immediately. For example, &lt;code&gt;isAlive()&lt;/code&gt; may return true for a brief period after &lt;code&gt;destroy()&lt;/code&gt; is called.</source>
          <target state="translated">참고 : 프로세스가 즉시 종료되지 않을 수 있습니다. 예를 들어 &lt;code&gt;isAlive()&lt;/code&gt; 는 &lt;code&gt;destroy()&lt;/code&gt; 가 호출 된 후 잠시 동안 true를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7d0bdb488b2efc07500d457d8d10faa20dc11ebe" translate="yes" xml:space="preserve">
          <source>Note: The process may not terminate immediately. For example, &lt;code&gt;isAlive()&lt;/code&gt; may return true for a brief period after &lt;code&gt;destroyForcibly()&lt;/code&gt; is called.</source>
          <target state="translated">참고 : 프로세스가 즉시 종료되지 않을 수 있습니다. 예를 들어 &lt;code&gt;isAlive()&lt;/code&gt; 는 다음과 같은 짧은 기간 동안 true를 반환 할 수 있습니다. &lt;code&gt;destroyForcibly()&lt;/code&gt; 가 호출 된 .</target>
        </trans-unit>
        <trans-unit id="6f19f44a34138ef570fdb2e012d7bf045747baf1" translate="yes" xml:space="preserve">
          <source>Note: The resolved address may be cached for a short period of time.</source>
          <target state="translated">참고 : 확인 된 주소는 짧은 시간 동안 캐시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6529efd19f9ce88cc38433cb40d4dbd8c320abb9" translate="yes" xml:space="preserve">
          <source>Note: The returned &lt;code&gt;PropertyChangeSupport&lt;/code&gt; notifies any &lt;code&gt;PropertyChangeListener&lt;/code&gt;s asynchronously on the</source>
          <target state="translated">참고 : 반환 &lt;code&gt;PropertyChangeSupport&lt;/code&gt; 어떤 통지 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 를 비동기 적으로</target>
        </trans-unit>
        <trans-unit id="099e578890eb02c5778f7dbd870796b27e93416c" translate="yes" xml:space="preserve">
          <source>Note: The returned bounds is in baseline-relative coordinates (see &lt;a href=&quot;font&quot;&gt;&lt;code&gt;class notes&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">참고 : 반환 된 경계는 기준선 기준 좌표에 있습니다 ( &lt;a href=&quot;font&quot;&gt; &lt;code&gt;class notes&lt;/code&gt; &lt;/a&gt; 참조). ).</target>
        </trans-unit>
        <trans-unit id="6b486ec4bb546b81e2bef4f03226078b2ee42cd9" translate="yes" xml:space="preserve">
          <source>Note: The returned bounds is in baseline-relative coordinates (see &lt;a href=&quot;fontmetrics&quot;&gt;&lt;code&gt;class notes&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">참고 : 반환 된 경계는 기준선 기준 좌표에 있습니다 ( &lt;a href=&quot;fontmetrics&quot;&gt; &lt;code&gt;class notes&lt;/code&gt; &lt;/a&gt; 참조). ).</target>
        </trans-unit>
        <trans-unit id="b3bfd4426fc891728706d1757aab601cdbe3889d" translate="yes" xml:space="preserve">
          <source>Note: The returned object is not guaranteed to operate correctly if multiple threads use it at the same time. A multi-threaded application should either allocate multiple packer engines, or else serialize use of one engine with a lock.</source>
          <target state="translated">참고 : 여러 스레드에서 동시에 사용하는 경우 반환 된 개체가 올바르게 작동하지 않을 수 있습니다. 멀티 스레드 응용 프로그램은 여러 패커 엔진을 할당하거나 잠금이있는 하나의 엔진 사용을 직렬화해야합니다.</target>
        </trans-unit>
        <trans-unit id="aa12d2d2d24e785c7e1d72092e7d61dfd111c7aa" translate="yes" xml:space="preserve">
          <source>Note: The returned object is not guaranteed to operate correctly if multiple threads use it at the same time. A multi-threaded application should either allocate multiple unpacker engines, or else serialize use of one engine with a lock.</source>
          <target state="translated">참고 : 여러 스레드에서 동시에 사용하는 경우 반환 된 개체가 올바르게 작동하지 않을 수 있습니다. 다중 스레드 응용 프로그램은 여러 언 패커 엔진을 할당하거나 잠금이있는 하나의 엔진 사용을 직렬화해야합니다.</target>
        </trans-unit>
        <trans-unit id="106838bc9b93664cc34ef27cb55a64598b97cd81" translate="yes" xml:space="preserve">
          <source>Note: The returned value may not be a valid certificate chain and should not be relied on for trust decisions.</source>
          <target state="translated">참고 : 반환 된 값은 유효한 인증서 체인이 아닐 수 있으며 신뢰 결정에 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="4cb9867785bc909af714b72748d5541deebbcd80" translate="yes" xml:space="preserve">
          <source>Note: The specialized private key interfaces extend this interface. See, for example, the &lt;code&gt;DSAPrivateKey&lt;/code&gt; interface in &lt;a href=&quot;interfaces/package-summary&quot;&gt;&lt;code&gt;java.security.interfaces&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참고 : 특수한 개인 키 인터페이스는이 인터페이스를 확장합니다. 예를 들어 &lt;a href=&quot;interfaces/package-summary&quot;&gt; &lt;code&gt;java.security.interfaces&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;DSAPrivateKey&lt;/code&gt; 인터페이스를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6eb3a7abe026de2d8a10bdb0a405dc217846b10a" translate="yes" xml:space="preserve">
          <source>Note: The subprocess may not terminate immediately. i.e. &lt;code&gt;isAlive()&lt;/code&gt; may return true for a brief period after &lt;code&gt;destroyForcibly()&lt;/code&gt; is called. This method may be chained to &lt;code&gt;waitFor()&lt;/code&gt; if needed.</source>
          <target state="translated">참고 : 하위 프로세스가 즉시 종료되지 않을 수 있습니다. 즉, &lt;code&gt;destroyForcibly()&lt;/code&gt; 가 호출 된 후 &lt;code&gt;isAlive()&lt;/code&gt; 가 잠시 동안 true를 리턴 할 수 있습니다 . 이 메소드는 필요한 경우 &lt;code&gt;waitFor()&lt;/code&gt; 연결될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eef0e99dd372e2efc3310880c1b817efec541eab" translate="yes" xml:space="preserve">
          <source>Note: There is also a &lt;code&gt;java.security.AllPermission&lt;/code&gt; permission that implies all permissions. It exists to simplify the work of system administrators who might need to perform multiple tasks that require all (or numerous) permissions.</source>
          <target state="translated">참고 : 모든 권한을 암시 하는 &lt;code&gt;java.security.AllPermission&lt;/code&gt; 권한 도 있습니다 . 모든 (또는 수많은) 권한이 필요한 여러 작업을 수행해야하는 시스템 관리자의 작업을 단순화하기 위해 존재합니다.</target>
        </trans-unit>
        <trans-unit id="161f6f9af0674cbec18438ee5499c28ed89293de" translate="yes" xml:space="preserve">
          <source>Note: This constructor will use null as the value of the algorithm parameters. If the encryption algorithm has parameters whose value is not null, a different constructor, e.g. EncryptedPrivateKeyInfo(AlgorithmParameters, byte[]), should be used.</source>
          <target state="translated">참고 :이 생성자는 알고리즘 매개 변수의 값으로 null을 사용합니다. 암호화 알고리즘에 값이 null이 아닌 매개 변수가있는 경우 다른 생성자 (예 : EncryptedPrivateKeyInfo (AlgorithmParameters, byte []))를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="f2df387d6ffad1cd1feb5babdedafd6cd1f5f317" translate="yes" xml:space="preserve">
          <source>Note: This functionality is not supported by all existing platforms, so it is implementation specific whether this option will be ignored or not. However, if it is not supported then &lt;a href=&quot;#getReuseAddress()&quot;&gt;&lt;code&gt;getReuseAddress()&lt;/code&gt;&lt;/a&gt; will always return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">참고 :이 기능은 모든 기존 플랫폼에서 지원되지 않으므로이 옵션을 무시할지 여부는 구현에 따라 다릅니다. 그러나 지원되지 않는 경우 &lt;a href=&quot;#getReuseAddress()&quot;&gt; &lt;code&gt;getReuseAddress()&lt;/code&gt; &lt;/a&gt; 는 항상 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="0a0a4ee13e9a6c6b352dbd8267c67b65f32862ca" translate="yes" xml:space="preserve">
          <source>Note: This functionality is not supported by all existing platforms, so it is implementation specific whether this option will be ignored or not. However, if it is not supported then &lt;a href=&quot;datagramsocket#getReuseAddress--&quot;&gt;&lt;code&gt;getReuseAddress()&lt;/code&gt;&lt;/a&gt; will always return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">참고 :이 기능은 모든 기존 플랫폼에서 지원되지 않으므로이 옵션을 무시할지 여부에 따라 구현에 따라 다릅니다. 그러나 지원되지 않으면 &lt;a href=&quot;datagramsocket#getReuseAddress--&quot;&gt; &lt;code&gt;getReuseAddress()&lt;/code&gt; &lt;/a&gt; 는 항상 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="ef7fdab8bb5612e618d1a7bc79a66a4de8a53dc5" translate="yes" xml:space="preserve">
          <source>Note: This implementation is missing many things and is not a recommended way to implement accessibility features for a toolkit. Instead of relying upon this code, a toolkit's components should implement interface &lt;code&gt;Accessible&lt;/code&gt; directly.</source>
          <target state="translated">참고 :이 구현에는 많은 것이 누락되었으며 툴킷의 내게 필요한 옵션 기능을 구현하는 데 권장되는 방법이 아닙니다. 이 코드에 의존하는 대신 툴킷의 구성 요소는 &lt;code&gt;Accessible&lt;/code&gt; 인터페이스를 직접 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="636978926816ab760e5f8bfa6d24cf456467b20b" translate="yes" xml:space="preserve">
          <source>Note: This is merely a convenience wrapper. All work is delegated to &lt;code&gt;PropertyChangeSupport&lt;/code&gt; from &lt;a href=&quot;#getPropertyChangeSupport()&quot;&gt;&lt;code&gt;getPropertyChangeSupport()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참고 : 이것은 단지 편의 래퍼입니다. 모든 작업은 &lt;a href=&quot;#getPropertyChangeSupport()&quot;&gt; &lt;code&gt;getPropertyChangeSupport()&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;PropertyChangeSupport&lt;/code&gt; 로 위임됩니다 .</target>
        </trans-unit>
        <trans-unit id="826c5e6814d12152b954e08bcffff53d549d2e5e" translate="yes" xml:space="preserve">
          <source>Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to UI object instances that support this listener type.</source>
          <target state="translated">참고 :이 리스너는이 메서드가 호출 된 후 생성 된 모든 구성 요소 인스턴스에 자동으로 추가됩니다. 또한이 리스너 유형을 지원하는 UI 객체 인스턴스에만 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="25c4f44027c7d3d4ead4c1082328bf9e98cc494d" translate="yes" xml:space="preserve">
          <source>Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.</source>
          <target state="translated">참고 :이 리스너는이 메서드가 호출 된 후 생성 된 모든 구성 요소 인스턴스에 자동으로 추가됩니다. 또한이 리스너 유형을 지원하는 구성 요소 인스턴스에만 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="94361f297ac53fd6e2fe262dfb0ec7c6082e72f2" translate="yes" xml:space="preserve">
          <source>Note: This method can be used only when using certificate-based cipher suites; using it with non-certificate-based cipher suites, such as Kerberos, will throw an SSLPeerUnverifiedException.</source>
          <target state="translated">참고 :이 방법은 인증서 기반 암호 제품군을 사용할 때만 사용할 수 있습니다. Kerberos와 같은 비인증 기반 암호 그룹과 함께 사용하면 SSLPeerUnverifiedException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="33eea527f5ec580857a4627523cfd3c4cde86c2c" translate="yes" xml:space="preserve">
          <source>Note: This method exists for backward binary compatibility with earlier versions of the Swing library. It simply returns the result returned by &lt;a href=&quot;#currentManager(java.awt.Component)&quot;&gt;&lt;code&gt;currentManager(Component)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참고 :이 메서드는 이전 버전의 Swing 라이브러리와의 하위 바이너리 호환성을 위해 존재합니다. 단순히 &lt;a href=&quot;#currentManager(java.awt.Component)&quot;&gt; &lt;code&gt;currentManager(Component)&lt;/code&gt; &lt;/a&gt; 의해 반환 된 결과를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e5a14fa0e58bb4ad092b08d41779f8de970fe707" translate="yes" xml:space="preserve">
          <source>Note: This method is intended to be called by the &lt;a href=&quot;imageproducer&quot;&gt;&lt;code&gt;ImageProducer&lt;/code&gt;&lt;/a&gt; of the &lt;code&gt;Image&lt;/code&gt; whose pixels are being filtered. Developers using this class to retrieve pixels from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels.</source>
          <target state="translated">참고 :이 메서드는 픽셀이 필터링되는 &lt;code&gt;Image&lt;/code&gt; 의 &lt;a href=&quot;imageproducer&quot;&gt; &lt;code&gt;ImageProducer&lt;/code&gt; &lt;/a&gt; 에 의해 호출됩니다 . 이 클래스를 사용하여 이미지에서 픽셀을 검색하는 개발자는이 메서드를 직접 호출하지 않아야합니다.이 작업은 요청 된 픽셀 검색에 문제를 일으킬 수 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="f4b7e71d9afb52221bee88c0a4a2f9ffcdbd8c6f" translate="yes" xml:space="preserve">
          <source>Note: This method is intended to be called by the &lt;code&gt;ImageProducer&lt;/code&gt; of the &lt;code&gt;Image&lt;/code&gt; whose pixels are being filtered. Developers using this class to filter pixels from an image should avoid calling this method directly since that operation could interfere with the filtering operation.</source>
          <target state="translated">참고 :이 메서드는 &lt;code&gt;Image&lt;/code&gt; 의 &lt;code&gt;ImageProducer&lt;/code&gt; 에 의해 호출됩니다. 픽셀이 필터링되는 . 이 클래스를 사용하여 이미지에서 픽셀을 필터링하는 개발자는이 작업이 필터링 작업을 방해 할 수 있으므로이 메서드를 직접 호출하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="0cef8832cdd205b2719b0e0946fff4fc10ffc81d" translate="yes" xml:space="preserve">
          <source>Note: This method is intended to be called by the &lt;code&gt;ImageProducer&lt;/code&gt; of the &lt;code&gt;Image&lt;/code&gt; whose pixels are being filtered. Developers using this class to retrieve pixels from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels.</source>
          <target state="translated">참고 :이 메서드는 픽셀이 필터링되는 &lt;code&gt;Image&lt;/code&gt; 의 &lt;code&gt;ImageProducer&lt;/code&gt; 에 의해 호출됩니다 . 이 클래스를 사용하여 이미지에서 픽셀을 검색하는 개발자는이 메서드를 직접 호출하지 않아야합니다.이 작업은 요청 된 픽셀 검색에 문제를 일으킬 수 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="9cbed1da035477ce5bc0b5afa5763ab6f9fcd84e" translate="yes" xml:space="preserve">
          <source>Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being filtered. Developers using this class to filter pixels from an image should avoid calling this method directly since that operation could interfere with the filtering operation.</source>
          <target state="translated">Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being filtered. Developers using this class to filter pixels from an image should avoid calling this method directly since that operation could interfere with the filtering operation.</target>
        </trans-unit>
        <trans-unit id="100545d6f4bfc8cd356ed5027863a959afefa37f" translate="yes" xml:space="preserve">
          <source>Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being grabbed. Developers using this class to retrieve pixels from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels.</source>
          <target state="translated">Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being grabbed. Developers using this class to retrieve pixels from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels.</target>
        </trans-unit>
        <trans-unit id="8e332b3dabe0b9e378ed40e7be4f3e446472fccd" translate="yes" xml:space="preserve">
          <source>Note: This method is useful only when using certificate-based cipher suites.</source>
          <target state="translated">참고 :이 방법은 인증서 기반 암호 제품군을 사용하는 경우에만 유용합니다.</target>
        </trans-unit>
        <trans-unit id="66ae0f7e3684dd3137d4b1574bf70434fe5d283b" translate="yes" xml:space="preserve">
          <source>Note: This method provides complimentary functionality to that provided by other high level Swing printing APIs. However, it deals strictly with painting and should not be confused as providing information on higher level print processes. For example, a &lt;a href=&quot;jtable#print()&quot;&gt;&lt;code&gt;JTable.print()&lt;/code&gt;&lt;/a&gt; operation doesn't necessarily result in a continuous rendering of the full component, and the return value of this method can change multiple times during that operation. It is even possible for the component to be painted to the screen while the printing process is ongoing. In such a case, the return value of this method is &lt;code&gt;true&lt;/code&gt; when, and only when, the table is being painted as part of the printing process.</source>
          <target state="translated">Note: This method provides complimentary functionality to that provided by other high level Swing printing APIs. However, it deals strictly with painting and should not be confused as providing information on higher level print processes. For example, a &lt;a href=&quot;jtable#print()&quot;&gt; &lt;code&gt;JTable.print()&lt;/code&gt; &lt;/a&gt; operation doesn't necessarily result in a continuous rendering of the full component, and the return value of this method can change multiple times during that operation. It is even possible for the component to be painted to the screen while the printing process is ongoing. In such a case, the return value of this method is &lt;code&gt;true&lt;/code&gt; when, and only when, the table is being painted as part of the printing process.</target>
        </trans-unit>
        <trans-unit id="bbe8d1e4d86c4411b4dfede1ea9306782c513bfb" translate="yes" xml:space="preserve">
          <source>Note: This method provides the same functionality as &lt;code&gt;getWindowAncestor&lt;/code&gt;.</source>
          <target state="translated">Note: This method provides the same functionality as &lt;code&gt;getWindowAncestor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8aabebac2509a2877a3ddc5ae871ed25bf3913a4" translate="yes" xml:space="preserve">
          <source>Note: This method should be called under AWT tree lock.</source>
          <target state="translated">Note: This method should be called under AWT tree lock.</target>
        </trans-unit>
        <trans-unit id="477184c0322c989403dcf2a2ce082334f1041366" translate="yes" xml:space="preserve">
          <source>Note: Unless it is necessary to fetch the &lt;code&gt;Transferable&lt;/code&gt; directly, use one of the other methods on this class to inquire about the transfer. This may perform better than fetching the &lt;code&gt;Transferable&lt;/code&gt; and asking it directly.</source>
          <target state="translated">Note: Unless it is necessary to fetch the &lt;code&gt;Transferable&lt;/code&gt; directly, use one of the other methods on this class to inquire about the transfer. This may perform better than fetching the &lt;code&gt;Transferable&lt;/code&gt; and asking it directly.</target>
        </trans-unit>
        <trans-unit id="0025b496272ff53acd29d2ec8253eb1cf0ca5710" translate="yes" xml:space="preserve">
          <source>Note: Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in this class will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">참고 : 달리 명시되지 않는 한이 클래스의 생성자 또는 메서드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6d73b71abd37a6b70a78bd968c113e2554e93e98" translate="yes" xml:space="preserve">
          <source>Note: Use &lt;code&gt;setBlockIncrement&lt;/code&gt; to set the block increment to a size slightly smaller than the view's extent. That way, when the user jumps the knob to an adjacent position, one or two lines of the original contents remain in view.</source>
          <target state="translated">Note: Use &lt;code&gt;setBlockIncrement&lt;/code&gt; to set the block increment to a size slightly smaller than the view's extent. That way, when the user jumps the knob to an adjacent position, one or two lines of the original contents remain in view.</target>
        </trans-unit>
        <trans-unit id="34ede23809d266a2bb257d3aae7951ad307ef882" translate="yes" xml:space="preserve">
          <source>Note: When used with &lt;code&gt;JApplet&lt;/code&gt;, &lt;code&gt;TransferHandler&lt;/code&gt; only provides data import capability, as the data export related methods are currently typed to &lt;code&gt;JComponent&lt;/code&gt;.</source>
          <target state="translated">Note: When used with &lt;code&gt;JApplet&lt;/code&gt; , &lt;code&gt;TransferHandler&lt;/code&gt; only provides data import capability, as the data export related methods are currently typed to &lt;code&gt;JComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df06db0f3294c6120242097a6af4757bb34f882c" translate="yes" xml:space="preserve">
          <source>Note: When used with &lt;code&gt;JDialog&lt;/code&gt;, &lt;code&gt;TransferHandler&lt;/code&gt; only provides data import capability, as the data export related methods are currently typed to &lt;code&gt;JComponent&lt;/code&gt;.</source>
          <target state="translated">Note: When used with &lt;code&gt;JDialog&lt;/code&gt; , &lt;code&gt;TransferHandler&lt;/code&gt; only provides data import capability, as the data export related methods are currently typed to &lt;code&gt;JComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="322e15c7dadef29a3e87b89c79ffab47c2a53df2" translate="yes" xml:space="preserve">
          <source>Note: When used with &lt;code&gt;JFrame&lt;/code&gt;, &lt;code&gt;TransferHandler&lt;/code&gt; only provides data import capability, as the data export related methods are currently typed to &lt;code&gt;JComponent&lt;/code&gt;.</source>
          <target state="translated">Note: When used with &lt;code&gt;JFrame&lt;/code&gt; , &lt;code&gt;TransferHandler&lt;/code&gt; only provides data import capability, as the data export related methods are currently typed to &lt;code&gt;JComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="197740af44caa7532f1e472ba1b85b1abffff1fa" translate="yes" xml:space="preserve">
          <source>Note: When used with &lt;code&gt;JWindow&lt;/code&gt;, &lt;code&gt;TransferHandler&lt;/code&gt; only provides data import capability, as the data export related methods are currently typed to &lt;code&gt;JComponent&lt;/code&gt;.</source>
          <target state="translated">Note: When used with &lt;code&gt;JWindow&lt;/code&gt; , &lt;code&gt;TransferHandler&lt;/code&gt; only provides data import capability, as the data export related methods are currently typed to &lt;code&gt;JComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f23f77f4ad25e60f14465494e7ece9e030e6cbf0" translate="yes" xml:space="preserve">
          <source>Note: When using the 'nowrap' option it is also necessary to provide an extra &quot;dummy&quot; byte as input. This is required by the ZLIB native library in order to support certain optimizations.</source>
          <target state="translated">참고 : 'nowrap'옵션을 사용하는 경우 추가 &quot;더미&quot;바이트를 입력으로 제공해야합니다. 이는 특정 최적화를 지원하기 위해 ZLIB 기본 라이브러리에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="3f937bca17c9ac9472d4a1054b2dbdf22c1cacc4" translate="yes" xml:space="preserve">
          <source>Note: While it is permissible for lists to contain themselves as elements, extreme caution is advised: the &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt; methods are no longer well defined on such a list.</source>
          <target state="translated">참고 :리스트가 자신을 요소로 포함하는 것이 허용되지만 극도의주의가 필요합니다. &lt;code&gt;equals&lt;/code&gt; 및 &lt;code&gt;hashCode&lt;/code&gt; 메소드는 더 이상 이러한리스트에서 잘 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ef81ab5f1d3acf8e1a63e6aa13c9698e0e0041a9" translate="yes" xml:space="preserve">
          <source>Note: an execution engine need not launch a remote JVM.</source>
          <target state="translated">참고 : 실행 엔진은 원격 JVM을 시작할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="505eabdf8606963a0a713cdc819bdc17903921f9" translate="yes" xml:space="preserve">
          <source>Note: array sizes of parameters should match. If both arrays are empty, then an empty descriptor is created.</source>
          <target state="translated">참고 : 매개 변수의 배열 크기가 일치해야합니다. 두 배열이 모두 비어 있으면 빈 설명자가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="9cb7ccc0dba74e30da8abb592eb7db1f3faea618" translate="yes" xml:space="preserve">
          <source>Note: as of the Java 2 platform v1.3, it is recommended that developers call Component.AccessibleAWTComponent.getAccessibleIndexInParent() instead of using this method.</source>
          <target state="translated">Note: as of the Java 2 platform v1.3, it is recommended that developers call Component.AccessibleAWTComponent.getAccessibleIndexInParent() instead of using this method.</target>
        </trans-unit>
        <trans-unit id="1d5d96eb05e04ae0dba09d15716924cf1671f4c9" translate="yes" xml:space="preserve">
          <source>Note: both &lt;code&gt;RECOVERABLE_DEFINED&lt;/code&gt; and &lt;code&gt;RECOVERABLE_NOT_DEFINED&lt;/code&gt; indicate potentially recoverable errors, they differ in that, for &lt;code&gt;RECOVERABLE_DEFINED&lt;/code&gt;, the snippet is &lt;a href=&quot;#isDefined()&quot;&gt;defined&lt;/a&gt;.</source>
          <target state="translated">참고 : &lt;code&gt;RECOVERABLE_DEFINED&lt;/code&gt; 및 &lt;code&gt;RECOVERABLE_NOT_DEFINED&lt;/code&gt; 모두 잠재적으로 복구 가능한 오류를 나타내며, &lt;code&gt;RECOVERABLE_DEFINED&lt;/code&gt; 의 경우 스 니펫이 &lt;a href=&quot;#isDefined()&quot;&gt;정의&lt;/a&gt; 된다는 점이 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="23df42e7e6dc01a77c67ab6ce4ec9cc24c2a3029" translate="yes" xml:space="preserve">
          <source>Note: calling &lt;code&gt;get&lt;/code&gt; on the</source>
          <target state="translated">Note: calling &lt;code&gt;get&lt;/code&gt; on the</target>
        </trans-unit>
        <trans-unit id="16c77652d4c9e7acdab4bd784b702218d68992cf" translate="yes" xml:space="preserve">
          <source>Note: care should be exercised if &lt;code&gt;BigDecimal&lt;/code&gt; objects are used as keys in a &lt;a href=&quot;../util/sortedmap&quot;&gt;&lt;code&gt;SortedMap&lt;/code&gt;&lt;/a&gt; or elements in a &lt;a href=&quot;../util/sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; since &lt;code&gt;BigDecimal&lt;/code&gt;'s</source>
          <target state="translated">참고 : 경우에주의를 기울여야한다 &lt;code&gt;BigDecimal&lt;/code&gt; 객체가 키로서 사용 &lt;a href=&quot;../util/sortedmap&quot;&gt; &lt;code&gt;SortedMap&lt;/code&gt; &lt;/a&gt; A의 또는 요소 &lt;a href=&quot;../util/sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; 의&lt;/a&gt; 이후 &lt;code&gt;BigDecimal&lt;/code&gt; 의</target>
        </trans-unit>
        <trans-unit id="741b0ef233c352c251d9a74cef092014bc932507" translate="yes" xml:space="preserve">
          <source>Note: changing modality of the visible dialog may have no effect until it is hidden and then shown again.</source>
          <target state="translated">Note: changing modality of the visible dialog may have no effect until it is hidden and then shown again.</target>
        </trans-unit>
        <trans-unit id="d7e1d73aa585de626fdba584c2f16fba537745eb" translate="yes" xml:space="preserve">
          <source>Note: changing the modal exclusion type for a visible window may have no effect until it is hidden and then shown again.</source>
          <target state="translated">Note: changing the modal exclusion type for a visible window may have no effect until it is hidden and then shown again.</target>
        </trans-unit>
        <trans-unit id="1798306e90fb7c0582f65fa555645adc7b33a9b8" translate="yes" xml:space="preserve">
          <source>Note: developers/admininstrators are responsible for verifying the trustworthiness of content and structure of the Java Agents they deploy, since those are able to arbitrarily transform the bytecode from other JAR files. Since that happens after the Jars containing the bytecode have been verified as trusted, the trustworthiness of a Java Agent can determine the trust towards the entire program.</source>
          <target state="translated">Note: developers/admininstrators are responsible for verifying the trustworthiness of content and structure of the Java Agents they deploy, since those are able to arbitrarily transform the bytecode from other JAR files. Since that happens after the Jars containing the bytecode have been verified as trusted, the trustworthiness of a Java Agent can determine the trust towards the entire program.</target>
        </trans-unit>
        <trans-unit id="6921cbe0752e6d510f001c2f6210fb8c10abaff6" translate="yes" xml:space="preserve">
          <source>Note: even if the given location is unknown to this file manager, it may not return &lt;code&gt;null&lt;/code&gt;. Also, an unknown location may not cause an exception.</source>
          <target state="translated">참고 : 지정된 위치를이 파일 관리자에게 알 수없는 경우에도 &lt;code&gt;null&lt;/code&gt; 을 반환하지 않을 수 있습니다 . 또한 알 수없는 위치에서 예외가 발생하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5124f5aec598032623493444e4d1dac43bd422f0" translate="yes" xml:space="preserve">
          <source>Note: event listener use is not recommended for normal application use, but are intended solely to support special purpose facilities including support for accessibility, event record/playback, and diagnostic tracing. If listener is null, no exception is thrown and no action is performed.</source>
          <target state="translated">Note: event listener use is not recommended for normal application use, but are intended solely to support special purpose facilities including support for accessibility, event record/playback, and diagnostic tracing. If listener is null, no exception is thrown and no action is performed.</target>
        </trans-unit>
        <trans-unit id="5d36a43ca82c79d0adc5acd45094dca1e12ee573" translate="yes" xml:space="preserve">
          <source>Note: for fields, this is the field name; for methods, this is the method name; for constructors, this is &amp;lt;init&amp;gt;; for static initializers, this is &amp;lt;clinit&amp;gt;.</source>
          <target state="translated">참고 : 필드의 경우 이것은 필드 이름입니다. 메소드의 경우 이것은 메소드 이름입니다. 생성자의 경우 이것은 &amp;lt;init&amp;gt;입니다. 정적 이니셜 라이저의 경우 &amp;lt;clinit&amp;gt;입니다.</target>
        </trans-unit>
        <trans-unit id="c17d1be9fbacb6d0a9f46afe0fcd683db397901f" translate="yes" xml:space="preserve">
          <source>Note: for the Kerberos 5 mechanism, the delegation policy is expressed through the OK-AS-DELEGATE flag in the service ticket. When it's true, the KDC permits delegation to the target server. In a cross-realm environment, in order for delegation be permitted, all cross-realm TGTs on the authentication path must also have the OK-AS-DELAGATE flags set.</source>
          <target state="translated">참고 : Kerberos 5 메커니즘의 경우 위임 정책은 서비스 티켓의 OK-AS-DELEGATE 플래그를 통해 표현됩니다. 사실이면 KDC는 대상 서버에 대한 위임을 허용합니다. 교차 영역 환경에서 위임을 허용하려면 인증 경로의 모든 교차 영역 TGT에도 OK-AS-DELAGATE 플래그가 설정되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="180c34d2e81d8e434398cee9487b9d0319236ffd" translate="yes" xml:space="preserve">
          <source>Note: great care must be exercised if mutable objects are used as map keys. The behavior of a map is not specified if the value of an object is changed in a manner that affects &lt;code&gt;equals&lt;/code&gt; comparisons while the object is a key in the map. A special case of this prohibition is that it is not permissible for a map to contain itself as a key. While it is permissible for a map to contain itself as a value, extreme caution is advised: the &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt; methods are no longer well defined on such a map.</source>
          <target state="translated">참고 : 가변 객체를 맵 키로 사용하는 경우 각별히주의해야합니다. 객체의 값이 &lt;code&gt;equals&lt;/code&gt; 비교에 영향을주는 방식으로 변경되고 객체가 맵의 키인 경우 맵의 동작이 지정되지 않습니다 . 이 금지의 특별한 경우는지도 자체를 키로 포함 할 수 없다는 것입니다. 맵 자체를 값으로 포함하는 것이 허용되지만, &lt;code&gt;equals&lt;/code&gt; 및 &lt;code&gt;hashCode&lt;/code&gt; 메소드는 더 이상 이러한 맵에서 잘 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a75de3ff31fb77a6247d0aa1dbb039e97f176e62" translate="yes" xml:space="preserve">
          <source>Note: identifiers are not used by the &lt;code&gt;JTable&lt;/code&gt;, they are purely a convenience for the external tagging and location of columns.</source>
          <target state="translated">Note: identifiers are not used by the &lt;code&gt;JTable&lt;/code&gt; , they are purely a convenience for the external tagging and location of columns.</target>
        </trans-unit>
        <trans-unit id="2931b23d7b7b4db43ee8187342264bc1d9c15128" translate="yes" xml:space="preserve">
          <source>Note: if a character is not assigned a name by the</source>
          <target state="translated">Note: if a character is not assigned a name by the</target>
        </trans-unit>
        <trans-unit id="ee88c3e4d27839298d1c22f3efa586d46721def1" translate="yes" xml:space="preserve">
          <source>Note: if an image is used which has more colors in its palette than the supported maximum, the Toolkit implementation will attempt to flatten the palette to the maximum. Since converting low-resolution images is difficult, no guarantees are made as to the quality of a cursor image which has more colors than the system supports. It is therefore recommended that this method be called and an appropriate image used so no image conversion is made.</source>
          <target state="translated">Note: if an image is used which has more colors in its palette than the supported maximum, the Toolkit implementation will attempt to flatten the palette to the maximum. Since converting low-resolution images is difficult, no guarantees are made as to the quality of a cursor image which has more colors than the system supports. It is therefore recommended that this method be called and an appropriate image used so no image conversion is made.</target>
        </trans-unit>
        <trans-unit id="4efe3de41f67dbcc306f4e2b9489df3b7a541757" translate="yes" xml:space="preserve">
          <source>Note: if an image is used whose dimensions don't match a supported size (as returned by this method), the Toolkit implementation will attempt to resize the image to a supported size. Since converting low-resolution images is difficult, no guarantees are made as to the quality of a cursor image which isn't a supported size. It is therefore recommended that this method be called and an appropriate image used so no image conversion is made.</source>
          <target state="translated">Note: if an image is used whose dimensions don't match a supported size (as returned by this method), the Toolkit implementation will attempt to resize the image to a supported size. Since converting low-resolution images is difficult, no guarantees are made as to the quality of a cursor image which isn't a supported size. It is therefore recommended that this method be called and an appropriate image used so no image conversion is made.</target>
        </trans-unit>
        <trans-unit id="8a697d8c55e21f60ed4e4901b9287f9774c575bd" translate="yes" xml:space="preserve">
          <source>Note: if any exception is thrown, this cipher object may need to be reset before it can be used again.</source>
          <target state="translated">참고 : 예외가 발생하면이 암호 오브젝트를 다시 사용하기 전에 재설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="2fbce5af855378db205c37caeced27c12b4240bc" translate="yes" xml:space="preserve">
          <source>Note: if the absolute value of the &lt;code&gt;year&lt;/code&gt; parameter is less than 10^9, the eon component of the XSD year field is set to &lt;code&gt;null&lt;/code&gt; by this method.</source>
          <target state="translated">Note: if the absolute value of the &lt;code&gt;year&lt;/code&gt; parameter is less than 10^9, the eon component of the XSD year field is set to &lt;code&gt;null&lt;/code&gt; by this method.</target>
        </trans-unit>
        <trans-unit id="49223d7ca37e2bad240e35483744013fbeff3243" translate="yes" xml:space="preserve">
          <source>Note: if the return type of this method is a reference type (class, interface, or array) and it has not been created or loaded by the declaring type's class loader - that is, &lt;a href=&quot;typecomponent#declaringType()&quot;&gt;&lt;code&gt;declaringType()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.classLoader()&lt;/code&gt;, then ClassNotLoadedException will be thrown. Also, a reference type may have been loaded but not yet prepared, in which case the type will be returned but attempts to perform some operations on the returned type (e.g. &lt;a href=&quot;referencetype#fields()&quot;&gt;&lt;code&gt;fields()&lt;/code&gt;&lt;/a&gt;) will throw a &lt;a href=&quot;classnotpreparedexception&quot;&gt;&lt;code&gt;ClassNotPreparedException&lt;/code&gt;&lt;/a&gt;. Use &lt;a href=&quot;referencetype#isPrepared()&quot;&gt;&lt;code&gt;ReferenceType.isPrepared()&lt;/code&gt;&lt;/a&gt; to determine if a reference type is prepared.</source>
          <target state="translated">참고 :이 메서드의 반환 유형이 참조 유형 (클래스, 인터페이스 또는 배열)이고 선언 유형의 클래스 로더 (즉, &lt;a href=&quot;typecomponent#declaringType()&quot;&gt; &lt;code&gt;declaringType()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;.classLoader()&lt;/code&gt; 의해 생성되거나로드되지 않은 경우 ClassNotLoadedException은 던져진다. 또한 참조 유형이로드되었지만 아직 준비되지 않은 경우 유형이 반환되지만 반환 된 유형 (예 : &lt;a href=&quot;referencetype#fields()&quot;&gt; &lt;code&gt;fields()&lt;/code&gt; &lt;/a&gt; ) 에 대해 일부 작업을 수행하려고 하면 &lt;a href=&quot;classnotpreparedexception&quot;&gt; &lt;code&gt;ClassNotPreparedException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다. 사용 &lt;a href=&quot;referencetype#isPrepared()&quot;&gt; &lt;code&gt;ReferenceType.isPrepared()&lt;/code&gt; &lt;/a&gt; 참조 형이 준비되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c4d18bf16fef65ee4df5429425c0b70bc20fc2c8" translate="yes" xml:space="preserve">
          <source>Note: if the specified character is not assigned a name by the</source>
          <target state="translated">참고 : 지정된 문자에 이름이 지정되지 않은 경우</target>
        </trans-unit>
        <trans-unit id="8d8eeafbd4864744c1b8efac25892d3e6593e811" translate="yes" xml:space="preserve">
          <source>Note: if the specified input stream is null, a NullPointerException may be thrown later when it is used.</source>
          <target state="translated">참고 : 지정된 입력 스트림이 null 인 경우 NullPointerException은 나중에 사용될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="db21cd5e3700d9fbc6e2592e22159b2290890ef5" translate="yes" xml:space="preserve">
          <source>Note: if the specified input stream or cipher is null, a NullPointerException may be thrown later when they are used.</source>
          <target state="translated">참고 : 지정된 입력 스트림 또는 암호가 null 인 경우, NullPointerException은 나중에 사용될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1d9c7d9dcc35f4bd90cfea6bfb1874a257dce012" translate="yes" xml:space="preserve">
          <source>Note: if the specified output stream is null, a NullPointerException may be thrown later when it is used.</source>
          <target state="translated">참고 : 지정된 출력 스트림이 null 인 경우 나중에 사용될 때 NullPointerException이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8856a6ecaa819114e46b4324d69892be4a896b4" translate="yes" xml:space="preserve">
          <source>Note: if the specified output stream or cipher is null, a NullPointerException may be thrown later when they are used.</source>
          <target state="translated">참고 : 지정된 출력 스트림 또는 암호가 null 인 경우 NullPointerException은 나중에 사용될 때 throw 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb0cef5485d61c91cd8cfb8fcd46b2b75b2d9ab4" translate="yes" xml:space="preserve">
          <source>Note: if the type of this field is a reference type (class, interface, or array) and it has not been created or loaded by the declaring type's class loader - that is, &lt;a href=&quot;typecomponent#declaringType()&quot;&gt;&lt;code&gt;declaringType()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.classLoader()&lt;/code&gt;, then ClassNotLoadedException will be thrown. Also, a reference type may have been loaded but not yet prepared, in which case the type will be returned but attempts to perform some operations on the returned type (e.g. &lt;a href=&quot;referencetype#fields()&quot;&gt;&lt;code&gt;fields()&lt;/code&gt;&lt;/a&gt;) will throw a &lt;a href=&quot;classnotpreparedexception&quot;&gt;&lt;code&gt;ClassNotPreparedException&lt;/code&gt;&lt;/a&gt;. Use &lt;a href=&quot;referencetype#isPrepared()&quot;&gt;&lt;code&gt;ReferenceType.isPrepared()&lt;/code&gt;&lt;/a&gt; to determine if a reference type is prepared.</source>
          <target state="translated">참고 :이 필드의 유형이 참조 유형 (클래스, 인터페이스 또는 배열)이고 선언 유형의 클래스 로더 (즉, &lt;a href=&quot;typecomponent#declaringType()&quot;&gt; &lt;code&gt;declaringType()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;.classLoader()&lt;/code&gt; 의해 생성 또는로드되지 않은 경우)는 ClassNotLoadedException이됩니다. 던졌다. 또한 참조 유형이로드되었지만 아직 준비되지 않은 경우 유형이 반환되지만 반환 된 유형 (예 : &lt;a href=&quot;referencetype#fields()&quot;&gt; &lt;code&gt;fields()&lt;/code&gt; &lt;/a&gt; ) 에 대해 일부 작업을 수행하려고 하면 &lt;a href=&quot;classnotpreparedexception&quot;&gt; &lt;code&gt;ClassNotPreparedException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다. 사용 &lt;a href=&quot;referencetype#isPrepared()&quot;&gt; &lt;code&gt;ReferenceType.isPrepared()&lt;/code&gt; &lt;/a&gt; 참조 형이 준비되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7bd79a3111aa2dd168c2390fe1a85f02423f1a8e" translate="yes" xml:space="preserve">
          <source>Note: if the type of this variable is a reference type (class, interface, or array) and it has not been created or loaded by the class loader of the enclosing class, then ClassNotLoadedException will be thrown. Also, a reference type may have been loaded but not yet prepared, in which case the type will be returned but attempts to perform some operations on the returned type (e.g. &lt;a href=&quot;referencetype#fields()&quot;&gt;&lt;code&gt;fields()&lt;/code&gt;&lt;/a&gt;) will throw a &lt;a href=&quot;classnotpreparedexception&quot;&gt;&lt;code&gt;ClassNotPreparedException&lt;/code&gt;&lt;/a&gt;. Use &lt;a href=&quot;referencetype#isPrepared()&quot;&gt;&lt;code&gt;ReferenceType.isPrepared()&lt;/code&gt;&lt;/a&gt; to determine if a reference type is prepared.</source>
          <target state="translated">참고 :이 변수의 유형이 참조 유형 (클래스, 인터페이스 또는 배열)이고 둘러싸는 클래스의 클래스 로더에 의해 생성되거나로드되지 않은 경우 ClassNotLoadedException이 발생합니다. 또한 참조 유형이로드되었지만 아직 준비되지 않은 경우 유형이 반환되지만 반환 된 유형 (예 : &lt;a href=&quot;referencetype#fields()&quot;&gt; &lt;code&gt;fields()&lt;/code&gt; &lt;/a&gt; ) 에 대해 일부 작업을 수행하려고 하면 &lt;a href=&quot;classnotpreparedexception&quot;&gt; &lt;code&gt;ClassNotPreparedException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다. 사용 &lt;a href=&quot;referencetype#isPrepared()&quot;&gt; &lt;code&gt;ReferenceType.isPrepared()&lt;/code&gt; &lt;/a&gt; 참조 형이 준비되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3e702fa1d92f933e43ae0d129e71d4b8e58494da" translate="yes" xml:space="preserve">
          <source>Note: if there is any parameter whose type is a reference type (class, interface, or array) and it has not been created or loaded by the declaring type's class loader - that is, &lt;a href=&quot;typecomponent#declaringType()&quot;&gt;&lt;code&gt;declaringType()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.classLoader()&lt;/code&gt;, then ClassNotLoadedException will be thrown. Also, a reference type may have been loaded but not yet prepared, in which case the list will be returned but attempts to perform some operations on the type (e.g. &lt;a href=&quot;referencetype#fields()&quot;&gt;&lt;code&gt;fields()&lt;/code&gt;&lt;/a&gt;) will throw a &lt;a href=&quot;classnotpreparedexception&quot;&gt;&lt;code&gt;ClassNotPreparedException&lt;/code&gt;&lt;/a&gt;. Use &lt;a href=&quot;referencetype#isPrepared()&quot;&gt;&lt;code&gt;ReferenceType.isPrepared()&lt;/code&gt;&lt;/a&gt; to determine if a reference type is prepared.</source>
          <target state="translated">참고 : 유형이 참조 유형 (클래스, 인터페이스 또는 배열)이고 선언 유형의 클래스 로더 (즉, &lt;a href=&quot;typecomponent#declaringType()&quot;&gt; &lt;code&gt;declaringType()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;.classLoader()&lt;/code&gt; 의해 생성 또는로드되지 않은 매개 변수가있는 경우 ClassNotLoadedException은 던져진다. 또한 참조 유형이로드되었지만 아직 준비되지 않은 경우 목록이 반환되지만 유형 (예 : &lt;a href=&quot;referencetype#fields()&quot;&gt; &lt;code&gt;fields()&lt;/code&gt; &lt;/a&gt; ) 에 대해 일부 작업을 수행하려고 하면 &lt;a href=&quot;classnotpreparedexception&quot;&gt; &lt;code&gt;ClassNotPreparedException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다. 사용 &lt;a href=&quot;referencetype#isPrepared()&quot;&gt; &lt;code&gt;ReferenceType.isPrepared()&lt;/code&gt; &lt;/a&gt; 참조 형이 준비되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="897316a0899efbadf3a585a6787a4cbe227b984f" translate="yes" xml:space="preserve">
          <source>Note: if there was a previous accessory, you should unregister any listeners that the accessory might have registered with the file chooser.</source>
          <target state="translated">Note: if there was a previous accessory, you should unregister any listeners that the accessory might have registered with the file chooser.</target>
        </trans-unit>
        <trans-unit id="c4fb9251f8e5e6cedab11c66269a494e164be98c" translate="yes" xml:space="preserve">
          <source>Note: it is not always necessary to do algorithm-specific initialization for a DSA key pair generator. That is, it is not always necessary to call an &lt;code&gt;initialize&lt;/code&gt; method in this interface. Algorithm-independent initialization using the &lt;code&gt;initialize&lt;/code&gt; method in the KeyPairGenerator interface is all that is needed when you accept defaults for algorithm-specific parameters.</source>
          <target state="translated">Note: it is not always necessary to do algorithm-specific initialization for a DSA key pair generator. That is, it is not always necessary to call an &lt;code&gt;initialize&lt;/code&gt; method in this interface. Algorithm-independent initialization using the &lt;code&gt;initialize&lt;/code&gt; method in the KeyPairGenerator interface is all that is needed when you accept defaults for algorithm-specific parameters.</target>
        </trans-unit>
        <trans-unit id="6e1bf534d41e15a9a6cf514a78139f8a46a780c7" translate="yes" xml:space="preserve">
          <source>Note: it is not always necessary to do do algorithm-specific initialization for a DSA key pair generator. That is, it is not always necessary to call an &lt;code&gt;initialize&lt;/code&gt; method in this interface. Algorithm-independent initialization using the &lt;code&gt;initialize&lt;/code&gt; method in the KeyPairGenerator interface is all that is needed when you accept defaults for algorithm-specific parameters.</source>
          <target state="translated">참고 : DSA 키 쌍 생성기에 대해 알고리즘 별 초기화를 항상 수행 할 필요는 없습니다. 즉, 이 인터페이스에서 항상 &lt;code&gt;initialize&lt;/code&gt; 메소드 를 호출 할 필요는 없습니다 . KeyPairGenerator 인터페이스에서 &lt;code&gt;initialize&lt;/code&gt; 메소드를 사용한 알고리즘 독립적 초기화 는 알고리즘 특정 매개 변수에 대한 기본값을 승인 할 때 필요한 모든 것입니다.</target>
        </trans-unit>
        <trans-unit id="4e86deb3c86955cf59ec0fb10a08a9b557e8c2a0" translate="yes" xml:space="preserve">
          <source>Note: several methods return subsets with restricted ranges. Such ranges are</source>
          <target state="translated">참고 : 일부 방법은 제한된 범위의 하위 집합을 반환합니다. 이러한 범위는</target>
        </trans-unit>
        <trans-unit id="ace7b5d400945c269ef96078c34aaecd9a3f554b" translate="yes" xml:space="preserve">
          <source>Note: some implementations may cache the value returned from the &lt;code&gt;LayoutManager2&lt;/code&gt;. Implementations that cache need not invoke &lt;code&gt;maximumLayoutSize&lt;/code&gt; on the &lt;code&gt;LayoutManager2&lt;/code&gt; every time this method is invoked, rather the &lt;code&gt;LayoutManager2&lt;/code&gt; will only be queried after the &lt;code&gt;Container&lt;/code&gt; becomes invalid.</source>
          <target state="translated">Note: some implementations may cache the value returned from the &lt;code&gt;LayoutManager2&lt;/code&gt; . Implementations that cache need not invoke &lt;code&gt;maximumLayoutSize&lt;/code&gt; on the &lt;code&gt;LayoutManager2&lt;/code&gt; every time this method is invoked, rather the &lt;code&gt;LayoutManager2&lt;/code&gt; will only be queried after the &lt;code&gt;Container&lt;/code&gt; becomes invalid.</target>
        </trans-unit>
        <trans-unit id="f13ee6cf9d73ed78cf46e2da2b90cecbc2454544" translate="yes" xml:space="preserve">
          <source>Note: some implementations may cache the value returned from the &lt;code&gt;LayoutManager&lt;/code&gt;. Implementations that cache need not invoke &lt;code&gt;minimumLayoutSize&lt;/code&gt; on the &lt;code&gt;LayoutManager&lt;/code&gt; every time this method is invoked, rather the &lt;code&gt;LayoutManager&lt;/code&gt; will only be queried after the &lt;code&gt;Container&lt;/code&gt; becomes invalid.</source>
          <target state="translated">Note: some implementations may cache the value returned from the &lt;code&gt;LayoutManager&lt;/code&gt; . Implementations that cache need not invoke &lt;code&gt;minimumLayoutSize&lt;/code&gt; on the &lt;code&gt;LayoutManager&lt;/code&gt; every time this method is invoked, rather the &lt;code&gt;LayoutManager&lt;/code&gt; will only be queried after the &lt;code&gt;Container&lt;/code&gt; becomes invalid.</target>
        </trans-unit>
        <trans-unit id="4ad34544e3be908d5dd481733189cf6dd60c0b4c" translate="yes" xml:space="preserve">
          <source>Note: some implementations may cache the value returned from the &lt;code&gt;LayoutManager&lt;/code&gt;. Implementations that cache need not invoke &lt;code&gt;preferredLayoutSize&lt;/code&gt; on the &lt;code&gt;LayoutManager&lt;/code&gt; every time this method is invoked, rather the &lt;code&gt;LayoutManager&lt;/code&gt; will only be queried after the &lt;code&gt;Container&lt;/code&gt; becomes invalid.</source>
          <target state="translated">Note: some implementations may cache the value returned from the &lt;code&gt;LayoutManager&lt;/code&gt; . Implementations that cache need not invoke &lt;code&gt;preferredLayoutSize&lt;/code&gt; on the &lt;code&gt;LayoutManager&lt;/code&gt; every time this method is invoked, rather the &lt;code&gt;LayoutManager&lt;/code&gt; will only be queried after the &lt;code&gt;Container&lt;/code&gt; becomes invalid.</target>
        </trans-unit>
        <trans-unit id="16136af4648dce88819b215df9b172cff3b42293" translate="yes" xml:space="preserve">
          <source>Note: some methods, such as &lt;code&gt;getLocationOnScreen&lt;/code&gt;, can only provide meaningful results if the applet is showing. Because &lt;code&gt;isShowing&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt; when the applet's &lt;code&gt;start&lt;/code&gt; is first called, methods requiring &lt;code&gt;isShowing&lt;/code&gt; to return &lt;code&gt;true&lt;/code&gt; should be called from a &lt;code&gt;ComponentListener&lt;/code&gt;.</source>
          <target state="translated">Note: some methods, such as &lt;code&gt;getLocationOnScreen&lt;/code&gt; , can only provide meaningful results if the applet is showing. Because &lt;code&gt;isShowing&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt; when the applet's &lt;code&gt;start&lt;/code&gt; is first called, methods requiring &lt;code&gt;isShowing&lt;/code&gt; to return &lt;code&gt;true&lt;/code&gt; should be called from a &lt;code&gt;ComponentListener&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9f5ecb473ea61e73f17835fd480c39b90f7da88" translate="yes" xml:space="preserve">
          <source>Note: the &lt;code&gt;password&lt;/code&gt; and &lt;code&gt;salt&lt;/code&gt; are cloned before they are stored in the new &lt;code&gt;PBEKeySpec&lt;/code&gt; object.</source>
          <target state="translated">참고 : &lt;code&gt;password&lt;/code&gt; 와 &lt;code&gt;salt&lt;/code&gt; 는 새 &lt;code&gt;PBEKeySpec&lt;/code&gt; 오브젝트에 저장되기 전에 복제됩니다 .</target>
        </trans-unit>
        <trans-unit id="215af8f9227e90af523822742aff59c3c61b8c2d" translate="yes" xml:space="preserve">
          <source>Note: the JTextComponent must have a valid size (e.g. have been added to a parent container whose ancestor container is a valid top-level window) for this method to be able to return a meaningful (non-null) value.</source>
          <target state="translated">Note: the JTextComponent must have a valid size (e.g. have been added to a parent container whose ancestor container is a valid top-level window) for this method to be able to return a meaningful (non-null) value.</target>
        </trans-unit>
        <trans-unit id="1f392a63ce8ca769190caf163bdd91184bd81b83" translate="yes" xml:space="preserve">
          <source>Note: the OAEPParameterSpec.DEFAULT uses the following:</source>
          <target state="translated">Note: the OAEPParameterSpec.DEFAULT uses the following:</target>
        </trans-unit>
        <trans-unit id="492c6d682f7eec9130f0855cc45fe510c22313ba" translate="yes" xml:space="preserve">
          <source>Note: the OAEPParameterSpec.DEFAULT uses the following: message digest -- &quot;SHA-1&quot; mask generation function (mgf) -- &quot;MGF1&quot; parameters for mgf -- MGF1ParameterSpec.SHA1 source of encoding input -- PSource.PSpecified.DEFAULT</source>
          <target state="translated">참고 : OAEPParameterSpec.DEFAULT는 다음을 사용합니다. 메시지 요약- &quot;SHA-1&quot;마스크 생성 함수 (mgf)-mgf의 &quot;MGF1&quot;매개 변수-MGF1ParameterSpec.SHA1 인코딩 입력 소스-PSource.PSpecified.DEFAULT</target>
        </trans-unit>
        <trans-unit id="b2ce9a87943a98d1b667c474c5c442d833fc1655" translate="yes" xml:space="preserve">
          <source>Note: the PSSParameterSpec.DEFAULT uses the following: message digest -- &quot;SHA-1&quot; mask generation function (mgf) -- &quot;MGF1&quot; parameters for mgf -- MGF1ParameterSpec.SHA1 SaltLength -- 20 TrailerField -- 1</source>
          <target state="translated">참고 : PSSParameterSpec.DEFAULT는 다음을 사용합니다. 메시지 요약- &quot;SHA-1&quot;마스크 생성 기능 (mgf)-mgf의 &quot;MGF1&quot;매개 변수-MGF1ParameterSpec.SHA1 SaltLength-20 TrailerField-1</target>
        </trans-unit>
        <trans-unit id="2d8b28baf51e748dc2d7af5797db037130390694" translate="yes" xml:space="preserve">
          <source>Note: the X509ExtendedKeyManager should be used in favor of this class.</source>
          <target state="translated">참고 :이 클래스를 위해 X509ExtendedKeyManager를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="b7325e6d320a9d911fcb0df72ba0a06d4d0671a0" translate="yes" xml:space="preserve">
          <source>Note: the local supported signature algorithms should conform to the algorithm constraints specified by &lt;a href=&quot;sslparameters#getAlgorithmConstraints()&quot;&gt;&lt;code&gt;getAlgorithmConstraints()&lt;/code&gt;&lt;/a&gt; method in &lt;code&gt;SSLParameters&lt;/code&gt;.</source>
          <target state="translated">Note: the local supported signature algorithms should conform to the algorithm constraints specified by &lt;a href=&quot;sslparameters#getAlgorithmConstraints()&quot;&gt; &lt;code&gt;getAlgorithmConstraints()&lt;/code&gt; &lt;/a&gt; method in &lt;code&gt;SSLParameters&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5510435a1a81e326f18dfb97c9eee1b6a3319a1" translate="yes" xml:space="preserve">
          <source>Note: the local supported signature algorithms should conform to the algorithm constraints specified by &lt;a href=&quot;sslparameters#getAlgorithmConstraints--&quot;&gt;&lt;code&gt;getAlgorithmConstraints()&lt;/code&gt;&lt;/a&gt; method in &lt;code&gt;SSLParameters&lt;/code&gt;.</source>
          <target state="translated">참고 : 로컬 지원 서명 알고리즘은 &lt;code&gt;SSLParameters&lt;/code&gt; 의&lt;a href=&quot;sslparameters#getAlgorithmConstraints--&quot;&gt; &lt;code&gt;getAlgorithmConstraints()&lt;/code&gt; &lt;/a&gt; 메소드로 지정된 알고리즘 제한 조건을 준수해야합니다 .</target>
        </trans-unit>
        <trans-unit id="41a3633c298cff106784ca675b5b46e661326da3" translate="yes" xml:space="preserve">
          <source>Note: the location and size of top-level windows (including &lt;code&gt;Window&lt;/code&gt;s, &lt;code&gt;Frame&lt;/code&gt;s, and &lt;code&gt;Dialog&lt;/code&gt;s) are under the control of the desktop's window management system. Calls to &lt;code&gt;setLocation&lt;/code&gt;, &lt;code&gt;setSize&lt;/code&gt;, and &lt;code&gt;setBounds&lt;/code&gt; are requests (not directives) which are forwarded to the window management system. Every effort will be made to honor such requests. However, in some cases the window management system may ignore such requests, or modify the requested geometry in order to place and size the &lt;code&gt;Window&lt;/code&gt; in a way that more closely matches the desktop settings.</source>
          <target state="translated">Note: the location and size of top-level windows (including &lt;code&gt;Window&lt;/code&gt; s, &lt;code&gt;Frame&lt;/code&gt; s, and &lt;code&gt;Dialog&lt;/code&gt; s) are under the control of the desktop's window management system. Calls to &lt;code&gt;setLocation&lt;/code&gt; , &lt;code&gt;setSize&lt;/code&gt; , and &lt;code&gt;setBounds&lt;/code&gt; are requests (not directives) which are forwarded to the window management system. Every effort will be made to honor such requests. However, in some cases the window management system may ignore such requests, or modify the requested geometry in order to place and size the &lt;code&gt;Window&lt;/code&gt; in a way that more closely matches the desktop settings.</target>
        </trans-unit>
        <trans-unit id="c67d873a58583850056bdd0c1c817640a6fc6e81" translate="yes" xml:space="preserve">
          <source>Note: the value of this field is prefixed with 'Swing' to avoid possible collisions with existing &lt;code&gt;Actions&lt;/code&gt;.</source>
          <target state="translated">Note: the value of this field is prefixed with 'Swing' to avoid possible collisions with existing &lt;code&gt;Actions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b5d13ed7a83329befedbde9d06258643c673381" translate="yes" xml:space="preserve">
          <source>Note: this constructor should only be used by AWT implementations as part of their support for custom cursors. Applications should use Toolkit.createCustomCursor().</source>
          <target state="translated">Note: this constructor should only be used by AWT implementations as part of their support for custom cursors. Applications should use Toolkit.createCustomCursor().</target>
        </trans-unit>
        <trans-unit id="28fdef5134bffa1cd75bacd02dbb9d809fb19a01" translate="yes" xml:space="preserve">
          <source>Note: this interface is required to permit the safe association of a DropTarget with a Component in one of two ways, either: &lt;code&gt;component.setDropTarget(droptarget);&lt;/code&gt; or &lt;code&gt;droptarget.setComponent(component);&lt;/code&gt;</source>
          <target state="translated">Note: this interface is required to permit the safe association of a DropTarget with a Component in one of two ways, either: &lt;code&gt;component.setDropTarget(droptarget);&lt;/code&gt; or &lt;code&gt;droptarget.setComponent(component);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="02f494dd31cb8ad0cb9346d53aa1b53cc95d6141" translate="yes" xml:space="preserve">
          <source>Note: this is used to indicate the preference on key length for variable-key-size ciphers. The actual key size depends on each provider's implementation.</source>
          <target state="translated">참고 : 가변 키 크기 암호의 키 길이에 대한 기본 설정을 나타내는 데 사용됩니다. 실제 키 크기는 각 공급자의 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="b4a064d1ad622f737a92ab3c47f2dd21cb6fcf6a" translate="yes" xml:space="preserve">
          <source>Note: this listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.</source>
          <target state="translated">참고 :이 리스너는이 메서드가 호출 된 후 생성 된 모든 구성 요소 인스턴스에 자동으로 추가됩니다. 또한이 리스너 유형을 지원하는 구성 요소 인스턴스에만 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="918c568ceea4a8ffb21d10a648c7036d7c8da530" translate="yes" xml:space="preserve">
          <source>Note: this method currently performs a shallow copy of the object (simply calls &lt;code&gt;Object.clone()&lt;/code&gt;). This may be changed in a future revision to perform a deep copy if new parameters are added that should not be shared.</source>
          <target state="translated">참고 :이 메서드는 현재 개체의 단순 복사본을 수행합니다 (단순히 &lt;code&gt;Object.clone()&lt;/code&gt; ). 공유하지 않아야 할 새 매개 변수가 추가 된 경우 딥 카피를 수행하기 위해 향후 개정판에서 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d8a9a0b5b93dae27f5f652a83007a6b2e89daa5" translate="yes" xml:space="preserve">
          <source>Note: this method is executed in a background thread.</source>
          <target state="translated">Note: this method is executed in a background thread.</target>
        </trans-unit>
        <trans-unit id="fbff139858d8c3526b7324d91174db8507a07ba4" translate="yes" xml:space="preserve">
          <source>Note: this method is used to indicate to the local side which signature algorithms may be used for digital signatures in TLS 1.2. It is not meaningful for TLS versions prior to 1.2.</source>
          <target state="translated">참고 :이 방법은 TLS 1.2에서 디지털 서명에 사용할 서명 알고리즘을 로컬에 표시하는 데 사용됩니다. 1.2 이전의 TLS 버전에는 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="f5169cbd1f9ba0ec8524abb160abb0f38a96e90b" translate="yes" xml:space="preserve">
          <source>Note: this method is used to indicate to the local side which signature algorithms may be used for digital signatures in TLS/DTLS 1.2. It is not meaningful for TLS/DTLS versions prior to 1.2.</source>
          <target state="translated">Note: this method is used to indicate to the local side which signature algorithms may be used for digital signatures in TLS/DTLS 1.2. It is not meaningful for TLS/DTLS versions prior to 1.2.</target>
        </trans-unit>
        <trans-unit id="b08ad47a1ab3e6fc63e3c26fff3909e3eac34fb8" translate="yes" xml:space="preserve">
          <source>Note: this method is used to indicate to the peer which signature algorithms may be used for digital signatures in TLS 1.2. It is not meaningful for TLS versions prior to 1.2.</source>
          <target state="translated">참고 :이 방법은 TLS 1.2에서 디지털 서명에 사용할 수있는 서명 알고리즘을 피어에게 표시하는 데 사용됩니다. 1.2 이전의 TLS 버전에는 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="a17cea5e85f658d0657fd0051ca3130494d5cdbe" translate="yes" xml:space="preserve">
          <source>Note: this method is used to indicate to the peer which signature algorithms may be used for digital signatures in TLS/DTLS 1.2. It is not meaningful for TLS/DTLS versions prior to 1.2.</source>
          <target state="translated">Note: this method is used to indicate to the peer which signature algorithms may be used for digital signatures in TLS/DTLS 1.2. It is not meaningful for TLS/DTLS versions prior to 1.2.</target>
        </trans-unit>
        <trans-unit id="8dd36c038ea2dda3842c71babdcf4b3bb8420720" translate="yes" xml:space="preserve">
          <source>Note: this method returns a copy of the password. It is the caller's responsibility to zero out the password information after it is no longer needed.</source>
          <target state="translated">참고 :이 메소드는 비밀번호 사본을 리턴합니다. 더 이상 필요하지 않은 비밀번호 정보를 제로화하는 것은 호출자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="0b9dba489ed38fc4a7327905b4ad19a291ade04c" translate="yes" xml:space="preserve">
          <source>Note: this method should</source>
          <target state="translated">참고 :이 방법은</target>
        </trans-unit>
        <trans-unit id="0cfe9c139559b84a217a77a85af3cdffe08474ba" translate="yes" xml:space="preserve">
          <source>Note: this method should be copy-safe, which means the &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;output&lt;/code&gt; buffers can reference the same block of memory and no unprocessed input data is overwritten when the result is copied into the output buffer.</source>
          <target state="translated">참고 :이 방법은 복사 안전해야합니다. 즉, &lt;code&gt;input&lt;/code&gt; 및 &lt;code&gt;output&lt;/code&gt; 버퍼가 동일한 메모리 블록을 참조 할 수 있으며 결과를 출력 버퍼에 복사 할 때 처리되지 않은 입력 데이터를 덮어 쓰지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1f4c8629628bd84ad72106429b5a2cd1ed15ba33" translate="yes" xml:space="preserve">
          <source>Note: this method should be copy-safe, which means the &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;output&lt;/code&gt; buffers can reference the same byte array and no unprocessed input data is overwritten when the result is copied into the output buffer.</source>
          <target state="translated">참고 :이 방법은 복사 안전해야합니다. 즉, &lt;code&gt;input&lt;/code&gt; 및 &lt;code&gt;output&lt;/code&gt; 버퍼가 동일한 바이트 배열을 참조 할 수 있으며 결과를 출력 버퍼에 복사 할 때 처리되지 않은 입력 데이터를 덮어 쓰지 않습니다.</target>
        </trans-unit>
        <trans-unit id="97ef58a2f1d6e59b709e15310606bab2789a38da" translate="yes" xml:space="preserve">
          <source>Note: this method should return a copy of the password. It is the caller's responsibility to zero out the password information after it is no longer needed.</source>
          <target state="translated">참고 :이 방법은 비밀번호 사본을 반환해야합니다. 더 이상 필요하지 않은 비밀번호 정보를 제로화하는 것은 호출자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="4551232f2a171e3a0d31788752ebdc2ee26b0971" translate="yes" xml:space="preserve">
          <source>Note: this method should return a copy of the salt. It is the caller's responsibility to zero out the salt information after it is no longer needed.</source>
          <target state="translated">참고 :이 방법은 소금 사본을 반환해야합니다. 더 이상 필요하지 않은 염분 정보를 제로화하는 것은 호출자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="be197317472aebc075cccf57792852ff71c0d925" translate="yes" xml:space="preserve">
          <source>Note: use the &lt;a href=&quot;#invokeLater(java.lang.Runnable)&quot;&gt;&lt;code&gt;invokeLater(java.lang.Runnable)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#invokeAndWait(java.lang.Runnable)&quot;&gt;&lt;code&gt;invokeAndWait(java.lang.Runnable)&lt;/code&gt;&lt;/a&gt; methods to execute a task in &lt;a href=&quot;toolkit#getSystemEventQueue()&quot;&gt;&lt;code&gt;the current AWT EventQueue&lt;/code&gt;&lt;/a&gt;'s dispatch thread.</source>
          <target state="translated">Note: use the &lt;a href=&quot;#invokeLater(java.lang.Runnable)&quot;&gt; &lt;code&gt;invokeLater(java.lang.Runnable)&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#invokeAndWait(java.lang.Runnable)&quot;&gt; &lt;code&gt;invokeAndWait(java.lang.Runnable)&lt;/code&gt; &lt;/a&gt; methods to execute a task in &lt;a href=&quot;toolkit#getSystemEventQueue()&quot;&gt; &lt;code&gt;the current AWT EventQueue&lt;/code&gt; &lt;/a&gt;'s dispatch thread.</target>
        </trans-unit>
        <trans-unit id="f0b92ce9d6be916045a08369abb63760c0b2e0e8" translate="yes" xml:space="preserve">
          <source>Note: when some action is invoked and the associated application is executed, it will be executed on the same system as the one on which the Java application was launched.</source>
          <target state="translated">Note: when some action is invoked and the associated application is executed, it will be executed on the same system as the one on which the Java application was launched.</target>
        </trans-unit>
        <trans-unit id="5d23ad42e7b1b94cdae4b3885610d8f7d25da71e" translate="yes" xml:space="preserve">
          <source>Note: you do not have to forward the event to sub-components. This is done automatically by the &lt;code&gt;MenuSelectionManager&lt;/code&gt;.</source>
          <target state="translated">Note: you do not have to forward the event to sub-components. This is done automatically by the &lt;code&gt;MenuSelectionManager&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="cab86ce653fd9d36eb02158c05614338a3ba6063" translate="yes" xml:space="preserve">
          <source>Notes on specific components</source>
          <target state="translated">Notes on specific components</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="4049468e6c6681b457b2a4eaf4db4bf2b0debae5" translate="yes" xml:space="preserve">
          <source>Nothing is done at the Relation Service level, i.e. the &lt;code&gt;RelationSupport&lt;/code&gt; object is not added to the &lt;code&gt;RelationService&lt;/code&gt; and no checks are performed to see if the provided values are correct. The object is always created, EXCEPT if:</source>
          <target state="translated">아무것도 즉, 관계 서비스 레벨에서 수행되지 않는 &lt;code&gt;RelationSupport&lt;/code&gt; 객체가 추가되지 않습니다 &lt;code&gt;RelationService&lt;/code&gt; 않고 검사가 제공된 값이 올바른지 있는지 확인하기 위해 수행되지 않습니다. 다음과 같은 경우에는 개체가 항상 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="9b893c7a20a2c07eedb44134ccd2d552d0e50174" translate="yes" xml:space="preserve">
          <source>Nothing is written to the output</source>
          <target state="translated">Nothing is written to the output</target>
        </trans-unit>
        <trans-unit id="591911d96d6cbaf146e6d8b47666e6f26b0f155a" translate="yes" xml:space="preserve">
          <source>Nothing prevents the use of these fields in MBeans that are not Model MBeans. The &lt;a href=&quot;#displayName&quot;&gt;displayName&lt;/a&gt;, &lt;a href=&quot;#severity&quot;&gt;severity&lt;/a&gt;, and &lt;a href=&quot;#visibility&quot;&gt;visibility&lt;/a&gt; fields are of interest outside Model MBeans, for example. But only Model MBeans have a predefined behavior for these fields.</source>
          <target state="translated">Model MBean이 아닌 MBean에서이 필드를 사용하는 것을 막는 것은 없습니다. &lt;a href=&quot;#displayName&quot;&gt;나 displayName&lt;/a&gt; , &lt;a href=&quot;#severity&quot;&gt;심각도&lt;/a&gt; 및 &lt;a href=&quot;#visibility&quot;&gt;가시성&lt;/a&gt; 필드는 예를 들어, 모델의 MBean 외부의 관심이다. 그러나 Model MBean 만이 필드에 대해 사전 정의 된 동작을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="3b90c6a1de7f48901621d393db07458a26b6cbbf" translate="yes" xml:space="preserve">
          <source>Nothing that can be done with a recording from this point, and it's no longer retrievable from the &lt;a href=&quot;flightrecorder#getRecordings()&quot;&gt;&lt;code&gt;FlightRecorder.getRecordings()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 시점에서 기록으로 수행 할 수있는 작업이 없으며 더 이상 &lt;a href=&quot;flightrecorder#getRecordings()&quot;&gt; &lt;code&gt;FlightRecorder.getRecordings()&lt;/code&gt; &lt;/a&gt; 메서드 에서 검색 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="970af143a639a5c1f5ce065871e6baf24e38c36e" translate="yes" xml:space="preserve">
          <source>Nothing, but ends quoting started by &lt;code&gt;\Q&lt;/code&gt;</source>
          <target state="translated">아무것도 없지만 &lt;code&gt;\Q&lt;/code&gt; 인용 인용</target>
        </trans-unit>
        <trans-unit id="153bd5cc523c8d331c4f6365c680600b92fc6d03" translate="yes" xml:space="preserve">
          <source>Nothing, but quotes all characters until &lt;code&gt;\E&lt;/code&gt;</source>
          <target state="translated">아무것도 아니지만 &lt;code&gt;\E&lt;/code&gt; 까지 모든 문자를 인용</target>
        </trans-unit>
        <trans-unit id="e7cfd3c952e52da6c393469ae466f5d942220df2" translate="yes" xml:space="preserve">
          <source>Nothing, but quotes the following character</source>
          <target state="translated">아무것도 아니지만 다음 문자를 인용</target>
        </trans-unit>
        <trans-unit id="f89ebdddae5018434afcfef64baa8e70cb6efb64" translate="yes" xml:space="preserve">
          <source>Nothing, but turns match flags &lt;a href=&quot;#CASE_INSENSITIVE&quot;&gt;i&lt;/a&gt;&lt;a href=&quot;#UNIX_LINES&quot;&gt;d&lt;/a&gt;&lt;a href=&quot;#MULTILINE&quot;&gt;m&lt;/a&gt;&lt;a href=&quot;#DOTALL&quot;&gt;s&lt;/a&gt;&lt;a href=&quot;#UNICODE_CASE&quot;&gt;u&lt;/a&gt;&lt;a href=&quot;#COMMENTS&quot;&gt;x&lt;/a&gt;&lt;a href=&quot;#UNICODE_CHARACTER_CLASS&quot;&gt;U&lt;/a&gt; on - off</source>
          <target state="translated">아무것도하지만, 회전이 플래그를 일치 &lt;a href=&quot;#CASE_INSENSITIVE&quot;&gt;내가 &lt;/a&gt;&lt;a href=&quot;#UNIX_LINES&quot;&gt;D &lt;/a&gt;&lt;a href=&quot;#MULTILINE&quot;&gt;m &lt;/a&gt;&lt;a href=&quot;#DOTALL&quot;&gt;s의 &lt;/a&gt;&lt;a href=&quot;#UNICODE_CASE&quot;&gt;u는 &lt;/a&gt;&lt;a href=&quot;#COMMENTS&quot;&gt;X &lt;/a&gt;&lt;a href=&quot;#UNICODE_CHARACTER_CLASS&quot;&gt;U를&lt;/a&gt; 에 - 오프</target>
        </trans-unit>
        <trans-unit id="184f7ad255398f3a5c2cf267a51f069c340c1bbf" translate="yes" xml:space="preserve">
          <source>Notice of modification to part of a document.</source>
          <target state="translated">문서 일부 수정 알림.</target>
        </trans-unit>
        <trans-unit id="ac3075034280e372bcafc43414dcafbee8ba353a" translate="yes" xml:space="preserve">
          <source>Notice of modification to part of a document. See the INS and DEL element definitions in HTML 4.0.</source>
          <target state="translated">문서 일부 수정 알림. HTML 4.0의 INS 및 DEL 요소 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ce1341fdc4c6c8f554a498bc9f036be29f8ffa4d" translate="yes" xml:space="preserve">
          <source>Notice that an application can supersede the registration of an earlier created font with a new one.</source>
          <target state="translated">Notice that an application can supersede the registration of an earlier created font with a new one.</target>
        </trans-unit>
        <trans-unit id="6e59ad8d4a856db627b0584733edb4bafea74dbf" translate="yes" xml:space="preserve">
          <source>Notice that only four kinds of attribute sets are listed here, but there are five kinds of attributes. Interface &lt;a href=&quot;supportedvaluesattribute&quot;&gt;SupportedValuesAttribute&lt;/a&gt; denotes an attribute that gives the supported values for another attribute. Supported-values attributes are never aggregated into attribute sets, so there is no attribute set subinterface defined for them.</source>
          <target state="translated">여기에는 4 가지 종류의 속성 세트 만 나열되어 있지만 5 가지 종류의 속성이 있습니다. &lt;a href=&quot;supportedvaluesattribute&quot;&gt;SupportedValuesAttribute&lt;/a&gt; 인터페이스 는 다른 속성에 지원되는 값을 제공하는 속성을 나타냅니다. 지원되는 값 속성은 속성 집합으로 집계되지 않으므로 속성 집합 하위 인터페이스가 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d8f022b5a1b710bbe975a5c370ec133a15d6f10b" translate="yes" xml:space="preserve">
          <source>Notice that the first character (or code point) is converted to lower case. This follows the Java Beans convention, which for historical reasons is different from the Standard MBean convention. In a Standard MBean or MXBean interface, a method &lt;code&gt;getOwner&lt;/code&gt; defines an attribute called &lt;code&gt;Owner&lt;/code&gt;, while in a Java Bean or mapped &lt;code&gt;CompositeType&lt;/code&gt;, a method &lt;code&gt;
      getOwner&lt;/code&gt; defines a property or item called &lt;code&gt;owner&lt;/code&gt;.</source>
          <target state="translated">Notice that the first character (or code point) is converted to lower case. This follows the Java Beans convention, which for historical reasons is different from the Standard MBean convention. In a Standard MBean or MXBean interface, a method &lt;code&gt;getOwner&lt;/code&gt; defines an attribute called &lt;code&gt;Owner&lt;/code&gt; , while in a Java Bean or mapped &lt;code&gt;CompositeType&lt;/code&gt; , a method &lt;code&gt; getOwner&lt;/code&gt; defines a property or item called &lt;code&gt;owner&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="417940b08f0f0f774790ee4661177279a6e94316" translate="yes" xml:space="preserve">
          <source>Notice that the first character (or code point) is converted to lower case. This follows the Java Beans convention, which for historical reasons is different from the Standard MBean convention. In a Standard MBean or MXBean interface, a method &lt;code&gt;getOwner&lt;/code&gt; defines an attribute called &lt;code&gt;Owner&lt;/code&gt;, while in a Java Bean or mapped &lt;code&gt;CompositeType&lt;/code&gt;, a method &lt;code&gt;getOwner&lt;/code&gt; defines a property or item called &lt;code&gt;owner&lt;/code&gt;.</source>
          <target state="translated">첫 문자 (또는 코드 포인트)는 소문자로 변환됩니다. 이것은 역사적 이유로 표준 MBean 규칙과 다른 Java Beans 규칙을 따릅니다. 표준 MBean 또는 MXBean 인터페이스에서 &lt;code&gt;getOwner&lt;/code&gt; 메소드 는 &lt;code&gt;Owner&lt;/code&gt; 라는 속성을 정의 하지만 Java Bean 또는 맵핑 된 &lt;code&gt;CompositeType&lt;/code&gt; 에서는 &lt;code&gt;getOwner&lt;/code&gt; 메소드가 &lt;code&gt;owner&lt;/code&gt; 라는 특성 또는 항목을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="835f19c3b0ad65e9e0400e2bf5db621f6319e918" translate="yes" xml:space="preserve">
          <source>Notice that the order is important, as the subsequent item goes immediately after the text-argument. The following are not equivalent:</source>
          <target state="translated">후속 항목이 텍스트 인수 직후에 오기 때문에 순서가 중요합니다. 다음은 동일하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c18f8f255ab9c208f23d0340eb9dff5a84efe311" translate="yes" xml:space="preserve">
          <source>Notification</source>
          <target state="translated">Notification</target>
        </trans-unit>
        <trans-unit id="939ed73960efba652806e6d5e4587c8e931369e8" translate="yes" xml:space="preserve">
          <source>Notification dispatch</source>
          <target state="translated">알림 발송</target>
        </trans-unit>
        <trans-unit id="a0582a95d51911509a77ba131393f5b5d51a1d31" translate="yes" xml:space="preserve">
          <source>Notification emitted when a client connection is opened or closed or when notifications are lost.</source>
          <target state="translated">클라이언트 연결을 열거 나 닫을 때 또는 알림이 유실 될 때 알림이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="d8add2cfda10bdc1d97d2cc180d9eff9ad450493" translate="yes" xml:space="preserve">
          <source>Notification emitted when a client connection is opened or closed or when notifications are lost. These notifications are sent by connector servers (instances of &lt;a href=&quot;jmxconnectorserver&quot;&gt;&lt;code&gt;JMXConnectorServer&lt;/code&gt;&lt;/a&gt;) and by connector clients (instances of &lt;a href=&quot;jmxconnector&quot;&gt;&lt;code&gt;JMXConnector&lt;/code&gt;&lt;/a&gt;). For certain connectors, a session can consist of a sequence of connections. Connection-opened and connection-closed notifications will be sent for each one.</source>
          <target state="translated">클라이언트 연결을 열거 나 닫을 때 또는 알림이 유실 될 때 알림이 생성됩니다. 이러한 알림은 커넥터 서버 (인스턴스에서 보낸 &lt;a href=&quot;jmxconnectorserver&quot;&gt; &lt;code&gt;JMXConnectorServer&lt;/code&gt; 를&lt;/a&gt; ) 및 커넥터 클라이언트 (의 인스턴스가 &lt;a href=&quot;jmxconnector&quot;&gt; &lt;code&gt;JMXConnector&lt;/code&gt; 에&lt;/a&gt; ). 특정 커넥터의 경우 세션은 일련의 연결로 구성 될 수 있습니다. 연결 열기 및 연결 닫기 알림이 각 알림에 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="891c68627fc9c082dbf6eab806f873190f289b5f" translate="yes" xml:space="preserve">
          <source>Notification emitted when a destination address on a multi-homed peer encounters a change.</source>
          <target state="translated">멀티 홈 피어의 대상 주소가 변경 될 때 발생하는 알림입니다.</target>
        </trans-unit>
        <trans-unit id="b38afa391afe1a6cd24009e779a1e725a03f560b" translate="yes" xml:space="preserve">
          <source>Notification emitted when a peers shutdowns an the association.</source>
          <target state="translated">피어가 연결을 종료 할 때 발생하는 알림입니다.</target>
        </trans-unit>
        <trans-unit id="585fba721c5c64e82a74b01dbfc518a260721fa5" translate="yes" xml:space="preserve">
          <source>Notification emitted when a send failed notification has been received.</source>
          <target state="translated">전송 실패 알림이 수신되었을 때 내 보낸 알림입니다.</target>
        </trans-unit>
        <trans-unit id="5a21180da787dc98b0208c25df7aa8d724b27040" translate="yes" xml:space="preserve">
          <source>Notification emitted when an association has either opened or closed.</source>
          <target state="translated">연결이 열리거나 닫 혔을 때 발생하는 알림입니다.</target>
        </trans-unit>
        <trans-unit id="372e0b46f21822b738d250fc0fc4972b96208cbf" translate="yes" xml:space="preserve">
          <source>Notification from the &lt;code&gt;UIFactory&lt;/code&gt; that the L&amp;amp;F has changed.</source>
          <target state="translated">Notification from the &lt;code&gt;UIFactory&lt;/code&gt; that the L&amp;amp;F has changed.</target>
        </trans-unit>
        <trans-unit id="802b0fb55cae7d438ff32da5956fecbb2b9dc7c3" translate="yes" xml:space="preserve">
          <source>Notification from the &lt;code&gt;UIFactory&lt;/code&gt; that the L&amp;amp;F has changed. Called to replace the UI with the latest version from the &lt;code&gt;UIFactory&lt;/code&gt;.</source>
          <target state="translated">Notification from the &lt;code&gt;UIFactory&lt;/code&gt; that the L&amp;amp;F has changed. Called to replace the UI with the latest version from the &lt;code&gt;UIFactory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ba46dbd2044a663917fd460cbfb13c6b6b32851" translate="yes" xml:space="preserve">
          <source>Notification from the &lt;code&gt;UIManager&lt;/code&gt; that the L&amp;amp;F has changed.</source>
          <target state="translated">Notification from the &lt;code&gt;UIManager&lt;/code&gt; that the L&amp;amp;F has changed.</target>
        </trans-unit>
        <trans-unit id="c6754a0526805458543dbac0d6ba26c27ec266e5" translate="yes" xml:space="preserve">
          <source>Notification from the &lt;code&gt;UIManager&lt;/code&gt; that the L&amp;amp;F has changed. Replaces the current UI object with the latest version from the &lt;code&gt;UIManager&lt;/code&gt;.</source>
          <target state="translated">Notification from the &lt;code&gt;UIManager&lt;/code&gt; that the L&amp;amp;F has changed. Replaces the current UI object with the latest version from the &lt;code&gt;UIManager&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f13ba58ad8a1313bdf6bb410208d3f02365b5124" translate="yes" xml:space="preserve">
          <source>Notification from the &lt;code&gt;UIManager&lt;/code&gt; that the look and feel (L&amp;amp;F) has changed.</source>
          <target state="translated">Notification from the &lt;code&gt;UIManager&lt;/code&gt; that the look and feel (L&amp;amp;F) has changed.</target>
        </trans-unit>
        <trans-unit id="6b950e99b349267fdb6b8c093339fcb6808cbb14" translate="yes" xml:space="preserve">
          <source>Notification from the &lt;code&gt;UIManager&lt;/code&gt; that the look and feel (L&amp;amp;F) has changed. Replaces the current UI object with the latest version from the &lt;code&gt;UIManager&lt;/code&gt;.</source>
          <target state="translated">Notification from the &lt;code&gt;UIManager&lt;/code&gt; that the look and feel (L&amp;amp;F) has changed. Replaces the current UI object with the latest version from the &lt;code&gt;UIManager&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31c9e45f9e240f3c65287df2b0c01a18292bc71a" translate="yes" xml:space="preserve">
          <source>Notification from the &lt;code&gt;UIManager&lt;/code&gt; that the look and feel [L&amp;amp;F] has changed.</source>
          <target state="translated">Notification from the &lt;code&gt;UIManager&lt;/code&gt; that the look and feel [L&amp;amp;F] has changed.</target>
        </trans-unit>
        <trans-unit id="913a559f03a7a288f5064fc9097853ad57f4b7e8" translate="yes" xml:space="preserve">
          <source>Notification from the &lt;code&gt;UIManager&lt;/code&gt; that the look and feel [L&amp;amp;F] has changed. Replaces the current UI object with the latest version from the &lt;code&gt;UIManager&lt;/code&gt;.</source>
          <target state="translated">Notification from the &lt;code&gt;UIManager&lt;/code&gt; that the look and feel [L&amp;amp;F] has changed. Replaces the current UI object with the latest version from the &lt;code&gt;UIManager&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc3eb0c51b74ab8f1c40e3cfe55cd6d1045a09b6" translate="yes" xml:space="preserve">
          <source>Notification from the &lt;code&gt;UIManager&lt;/code&gt; that the look and feel has changed.</source>
          <target state="translated">Notification from the &lt;code&gt;UIManager&lt;/code&gt; that the look and feel has changed.</target>
        </trans-unit>
        <trans-unit id="84bda32c453a0acaa4e5ac70523aa071e42c44c0" translate="yes" xml:space="preserve">
          <source>Notification from the &lt;code&gt;UIManager&lt;/code&gt; that the look and feel has changed. Replaces the current UI object with the latest version from the &lt;code&gt;UIManager&lt;/code&gt;.</source>
          <target state="translated">Notification from the &lt;code&gt;UIManager&lt;/code&gt; that the look and feel has changed. Replaces the current UI object with the latest version from the &lt;code&gt;UIManager&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ca23a9deaa41b1108bfd10ae3bcb8f11b330053" translate="yes" xml:space="preserve">
          <source>Notification is provided as two separate events, &lt;a href=&quot;../event/documentevent&quot;&gt;DocumentEvent&lt;/a&gt;, and &lt;a href=&quot;../event/undoableeditevent&quot;&gt;UndoableEditEvent&lt;/a&gt;. If a mutation is made to a &lt;code&gt;Document&lt;/code&gt; through its api, a &lt;code&gt;DocumentEvent&lt;/code&gt; will be sent to all of the registered &lt;code&gt;DocumentListeners&lt;/code&gt;. If the &lt;code&gt;Document&lt;/code&gt; implementation supports undo/redo capabilities, an &lt;code&gt;UndoableEditEvent&lt;/code&gt; will be sent to all of the registered &lt;code&gt;UndoableEditListener&lt;/code&gt;s. If an undoable edit is undone, a &lt;code&gt;DocumentEvent&lt;/code&gt; should be fired from the Document to indicate it has changed again. In this case however, there should be no &lt;code&gt;UndoableEditEvent&lt;/code&gt; generated since that edit is actually the source of the change rather than a mutation to the &lt;code&gt;Document&lt;/code&gt; made through its api.</source>
          <target state="translated">Notification is provided as two separate events, &lt;a href=&quot;../event/documentevent&quot;&gt;DocumentEvent&lt;/a&gt;, and &lt;a href=&quot;../event/undoableeditevent&quot;&gt;UndoableEditEvent&lt;/a&gt;. If a mutation is made to a &lt;code&gt;Document&lt;/code&gt; through its api, a &lt;code&gt;DocumentEvent&lt;/code&gt; will be sent to all of the registered &lt;code&gt;DocumentListeners&lt;/code&gt; . If the &lt;code&gt;Document&lt;/code&gt; implementation supports undo/redo capabilities, an &lt;code&gt;UndoableEditEvent&lt;/code&gt; will be sent to all of the registered &lt;code&gt;UndoableEditListener&lt;/code&gt; s. If an undoable edit is undone, a &lt;code&gt;DocumentEvent&lt;/code&gt; should be fired from the Document to indicate it has changed again. In this case however, there should be no &lt;code&gt;UndoableEditEvent&lt;/code&gt; generated since that edit is actually the source of the change rather than a mutation to the &lt;code&gt;Document&lt;/code&gt; made through its api.</target>
        </trans-unit>
        <trans-unit id="694b1592a8e9c79bcd8ec1a162c5e4db79933968" translate="yes" xml:space="preserve">
          <source>Notification listeners are potentially all executed in the same thread. Therefore, they should execute rapidly to avoid holding up other listeners or perturbing the regularity of fixed-delay executions. See &lt;a href=&quot;../notificationbroadcastersupport&quot;&gt;&lt;code&gt;NotificationBroadcasterSupport&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">알림 리스너는 모두 잠재적으로 동일한 스레드에서 실행됩니다. 따라서 다른 리스너를 유지하거나 고정 지연 실행 규칙을 방해하지 않도록 신속하게 실행해야합니다. &lt;a href=&quot;../notificationbroadcastersupport&quot;&gt; &lt;code&gt;NotificationBroadcasterSupport&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="27452d01b2e9bb34cb6ed06f0096f68eff1291d1" translate="yes" xml:space="preserve">
          <source>Notification name.</source>
          <target state="translated">알림 이름.</target>
        </trans-unit>
        <trans-unit id="144d4f9c0ca99888f7cfc93fe4e16f704221a7f7" translate="yes" xml:space="preserve">
          <source>Notification of a breakpoint in the target VM.</source>
          <target state="translated">대상 VM의 중단 점 알림.</target>
        </trans-unit>
        <trans-unit id="0e6012e5df8b0771584e4a6ecffd0c5a3cdcc367" translate="yes" xml:space="preserve">
          <source>Notification of a breakpoint in the target VM. The breakpoint event is generated before the code at its location is executed. When a location is reached which satisfies a currently enabled &lt;a href=&quot;../request/breakpointrequest&quot;&gt;&lt;code&gt;breakpoint request&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;eventset&quot;&gt;&lt;code&gt;event set&lt;/code&gt;&lt;/a&gt; containing an instance of this class will be added to the VM's event queue.</source>
          <target state="translated">대상 VM의 중단 점 알림. 중단 점 이벤트는 해당 위치의 코드가 실행되기 전에 생성됩니다. 위치에 도달하면되는 만족하는 현재 사용 &lt;a href=&quot;../request/breakpointrequest&quot;&gt; &lt;code&gt;breakpoint request&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;eventset&quot;&gt; &lt;code&gt;event set&lt;/code&gt; &lt;/a&gt; 이 클래스의 인스턴스를 포함는 VM의 이벤트 큐에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="d0c5a989f18cfaf7a9a3cee77461dbf229c9a6a1" translate="yes" xml:space="preserve">
          <source>Notification of a class prepare in the target VM.</source>
          <target state="translated">대상 VM에서 클래스 준비 알림.</target>
        </trans-unit>
        <trans-unit id="ef79e38ba754f601567a3046a36cb2fc7cd33a16" translate="yes" xml:space="preserve">
          <source>Notification of a class prepare in the target VM. See the JVM specification for a definition of class preparation. Class prepare events are not generated for primitive classes (for example, java.lang.Integer.TYPE).</source>
          <target state="translated">대상 VM에서 클래스 준비 알림. 클래스 준비에 대한 정의는 JVM 사양을 참조하십시오. 기본 클래스 (예 : java.lang.Integer.TYPE)에 대해서는 클래스 준비 이벤트가 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="98799912c350987a921c19ea33f3b590de196a22" translate="yes" xml:space="preserve">
          <source>Notification of a class unload in the target VM.</source>
          <target state="translated">대상 VM에서 클래스 언로드 알림.</target>
        </trans-unit>
        <trans-unit id="5b9e18c06fa9ebdbdf6333a957d6983ba98e8407" translate="yes" xml:space="preserve">
          <source>Notification of a completed thread in the target VM.</source>
          <target state="translated">대상 VM에서 완료된 스레드에 대한 알림.</target>
        </trans-unit>
        <trans-unit id="1c1c58f156018f66f8cf4d2148bc3de9fe91bcd4" translate="yes" xml:space="preserve">
          <source>Notification of a completed thread in the target VM. The notification is generated by the dying thread before it terminates. Because of this timing, it is possible for &lt;a href=&quot;../virtualmachine#allThreads()&quot;&gt;&lt;code&gt;VirtualMachine.allThreads()&lt;/code&gt;&lt;/a&gt; to return this thread after this event is received.</source>
          <target state="translated">대상 VM에서 완료된 스레드에 대한 알림. 알림은 종료되기 전에 죽어가는 스레드에 의해 생성됩니다. 이 타이밍 때문에 &lt;a href=&quot;../virtualmachine#allThreads()&quot;&gt; &lt;code&gt;VirtualMachine.allThreads()&lt;/code&gt; &lt;/a&gt; 가이 이벤트를 수신 한 후이 스레드를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3afd618b0b7f43acd389033847c488e2ccad39c5" translate="yes" xml:space="preserve">
          <source>Notification of a field access in the target VM.</source>
          <target state="translated">대상 VM의 필드 액세스 알림.</target>
        </trans-unit>
        <trans-unit id="9a41be8558dfc9af24891a2cdb6fd1c808739fa2" translate="yes" xml:space="preserve">
          <source>Notification of a field access in the target VM. Field modifications are not considered field accesses.</source>
          <target state="translated">대상 VM의 필드 액세스 알림. 필드 수정은 필드 액세스로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d5d3d80670b308dfd48d7b16ee8079e12400a7a2" translate="yes" xml:space="preserve">
          <source>Notification of a field modification in the target VM.</source>
          <target state="translated">대상 VM의 필드 수정 알림.</target>
        </trans-unit>
        <trans-unit id="b772cea6f4d3269958e6b3b0b29bb2c40fabc06f" translate="yes" xml:space="preserve">
          <source>Notification of a field triggered event encountered by a thread in the target VM.</source>
          <target state="translated">대상 VM의 스레드에서 발생한 필드 트리거 이벤트에 대한 알림입니다.</target>
        </trans-unit>
        <trans-unit id="a6336673e877c221e4da18ee6d1a79e059029a85" translate="yes" xml:space="preserve">
          <source>Notification of a method invocation in the target VM.</source>
          <target state="translated">대상 VM에서 메서드 호출 알림.</target>
        </trans-unit>
        <trans-unit id="219209591e2cd0717cbfd8f4aa1763a0473bef3b" translate="yes" xml:space="preserve">
          <source>Notification of a method invocation in the target VM. This event occurs after entry into the invoked method and before any code has executed. Method entry events are generated for both native and non-native methods.</source>
          <target state="translated">대상 VM의 메서드 호출 알림. 이 이벤트는 호출 된 메서드에 입력 한 후 코드가 실행되기 전에 발생합니다. 네이티브 메서드와 네이티브 메서드가 아닌 메서드 모두에 대해 메서드 항목 이벤트가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="279e0d911f9b62e073e8e54579543ff909c483f5" translate="yes" xml:space="preserve">
          <source>Notification of a method return in the target VM.</source>
          <target state="translated">대상 VM의 메서드 반환 알림.</target>
        </trans-unit>
        <trans-unit id="9430efb0b736a99e3acc08279f2f7d3701508046" translate="yes" xml:space="preserve">
          <source>Notification of a method return in the target VM. This event is generated after all code in the method has executed, but the location of this event is the last executed location in the method. Method exit events are generated for both native and non-native methods. Method exit events are not generated if the method terminates with a thrown exception.</source>
          <target state="translated">대상 VM의 메서드 반환 알림. 이 이벤트는 메서드의 모든 코드가 실행 된 후에 생성되지만이 이벤트의 위치는 메서드에서 마지막으로 실행 된 위치입니다. 네이티브 및 비 네이티브 메서드 모두에 대해 메서드 이탈 이벤트가 생성됩니다. 메서드가 throw 된 예외와 함께 종료되는 경우 메서드 종료 이벤트가 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cd0242c7e9567566e1a11107ec77ba3768e56590" translate="yes" xml:space="preserve">
          <source>Notification of a new running thread in the target VM.</source>
          <target state="translated">대상 VM에서 새 실행 스레드에 대한 알림.</target>
        </trans-unit>
        <trans-unit id="ca5937584bcfbd41a074ac28555f7b183503452f" translate="yes" xml:space="preserve">
          <source>Notification of a new running thread in the target VM. The new thread can be the result of a call to &lt;code&gt;&lt;a href=&quot;../../../../../java.base/java/lang/thread#start()&quot;&gt;&lt;code&gt;Thread.start()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; or the result of attaching a new thread to the VM though JNI. The notification is generated by the new thread some time before its execution starts. Because of this timing, it is possible to receive other events for the thread before this event is received. (Notably, &lt;a href=&quot;methodentryevent&quot;&gt;&lt;code&gt;MethodEntryEvent&lt;/code&gt;&lt;/a&gt;s and &lt;a href=&quot;methodexitevent&quot;&gt;&lt;code&gt;MethodExitEvent&lt;/code&gt;&lt;/a&gt;s might occur during thread initialization.) It is also possible for &lt;a href=&quot;../virtualmachine#allThreads()&quot;&gt;&lt;code&gt;VirtualMachine.allThreads()&lt;/code&gt;&lt;/a&gt; to return a new started thread before this event is received.</source>
          <target state="translated">대상 VM에서 새 실행 스레드에 대한 알림. 새 스레드는 &lt;code&gt;&lt;a href=&quot;../../../../../java.base/java/lang/thread#start()&quot;&gt;&lt;code&gt;Thread.start()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 호출 의 결과이거나 JNI를 통해 VM에 새 스레드를 연결 한 결과 일 수 있습니다. 알림은 실행이 시작되기 얼마 전에 새 스레드에 의해 생성됩니다. 이 타이밍 때문에이 이벤트가 수신되기 전에 스레드에 대한 다른 이벤트를 수신 할 수 있습니다. (특히 &lt;a href=&quot;methodentryevent&quot;&gt; &lt;code&gt;MethodEntryEvent&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;methodexitevent&quot;&gt; &lt;code&gt;MethodExitEvent&lt;/code&gt; &lt;/a&gt; 는 스레드 초기화 중에 발생할 수 있습니다.) &lt;a href=&quot;../virtualmachine#allThreads()&quot;&gt; &lt;code&gt;VirtualMachine.allThreads()&lt;/code&gt; &lt;/a&gt; 가이 이벤트를 수신하기 전에 새로 시작된 스레드를 반환 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a6ac8562571ce171990099361e4d4050bae7b9b1" translate="yes" xml:space="preserve">
          <source>Notification of an exception in the target VM.</source>
          <target state="translated">대상 VM의 예외 알림.</target>
        </trans-unit>
        <trans-unit id="84cfc7a409be86cf53426ddb43db7c0f23a6db2f" translate="yes" xml:space="preserve">
          <source>Notification of an exception in the target VM. When an exception is thrown which satisfies a currently enabled &lt;a href=&quot;../request/exceptionrequest&quot;&gt;&lt;code&gt;exception request&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;eventset&quot;&gt;&lt;code&gt;event set&lt;/code&gt;&lt;/a&gt; containing an instance of this class will be added to the VM's event queue. If the exception is thrown from a non-native method, the exception event is generated at the location where the exception is thrown. If the exception is thrown from a native method, the exception event is generated at the first non-native location reached after the exception is thrown.</source>
          <target state="translated">대상 VM의 예외 알림. 예외가 발생하면되는 만족, 현재 유효한 &lt;a href=&quot;../request/exceptionrequest&quot;&gt; &lt;code&gt;exception request&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;eventset&quot;&gt; &lt;code&gt;event set&lt;/code&gt; &lt;/a&gt; 이 클래스의 인스턴스를 포함는 VM의 이벤트 큐에 추가됩니다. 네이티브가 아닌 메서드에서 예외가 throw되면 예외가 throw 된 위치에서 예외 이벤트가 생성됩니다. 네이티브 메서드에서 예외가 throw되면 예외가 throw 된 후 도달 한 첫 번째 네이티브가 아닌 위치에서 예외 이벤트가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="3801c00c171a41ff4655d85acc479fe8e4b0ee91" translate="yes" xml:space="preserve">
          <source>Notification of an incoming push promise.</source>
          <target state="translated">Notification of an incoming push promise.</target>
        </trans-unit>
        <trans-unit id="c52e0c1323e23d116ee0afd83d2e3f29f555df23" translate="yes" xml:space="preserve">
          <source>Notification of disconnection from target VM.</source>
          <target state="translated">대상 VM에서 연결 해제 알림.</target>
        </trans-unit>
        <trans-unit id="e6e3c3dffcc5a895a2473f30410356bcaa4371a6" translate="yes" xml:space="preserve">
          <source>Notification of disconnection from target VM. May be caused by normal termination of a VM, VM termination by uncaught exception or other error, debugger action (&lt;a href=&quot;../virtualmachine#dispose()&quot;&gt;&lt;code&gt;VirtualMachine.dispose()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../virtualmachine#exit(int)&quot;&gt;&lt;code&gt;VirtualMachine.exit(int)&lt;/code&gt;&lt;/a&gt;) or by external events (for example, target process termination by the operating system, transport termination, etc).</source>
          <target state="translated">대상 VM에서 연결 해제 알림. VM의 정상적인 종료, 포착되지 않은 예외 또는 기타 오류로 인한 VM 종료, 디버거 작업 ( &lt;a href=&quot;../virtualmachine#dispose()&quot;&gt; &lt;code&gt;VirtualMachine.dispose()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../virtualmachine#exit(int)&quot;&gt; &lt;code&gt;VirtualMachine.exit(int)&lt;/code&gt; &lt;/a&gt; ) 또는 외부 이벤트 (예 : 운영 체제에 의한 대상 프로세스 종료)로 인해 발생할 수 있습니다. , 전송 종료 등).</target>
        </trans-unit>
        <trans-unit id="7b61653b9478e8ad46eb30cfed56a26258c6decf" translate="yes" xml:space="preserve">
          <source>Notification of initialization of a target VM.</source>
          <target state="translated">대상 VM 초기화 알림.</target>
        </trans-unit>
        <trans-unit id="0c9922f547736155e69a9cdd745ae9431042af8a" translate="yes" xml:space="preserve">
          <source>Notification of initialization of a target VM. This event is received before the main thread is started and before any application code has been executed. Before this event occurs a significant amount of system code has executed and a number of system classes have been loaded. This event is always generated by the target VM, even if not explicitly requested.</source>
          <target state="translated">대상 VM 초기화 알림. 이 이벤트는 주 스레드가 시작되기 전과 응용 프로그램 코드가 실행되기 전에 수신됩니다. 이 이벤트가 발생하기 전에 많은 양의 시스템 코드가 실행되고 많은 시스템 클래스가로드되었습니다. 이 이벤트는 명시 적으로 요청되지 않은 경우에도 항상 대상 VM에 의해 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="2de1392524229b5e1ca3be3d2334765ea37fc1c3" translate="yes" xml:space="preserve">
          <source>Notification of step completion in the target VM.</source>
          <target state="translated">대상 VM에서 단계 완료 알림.</target>
        </trans-unit>
        <trans-unit id="b92cc6a05b9cad116fc8b2fb6f852bae350e6144" translate="yes" xml:space="preserve">
          <source>Notification of step completion in the target VM. The step event is generated immediately before the code at its location is executed. Thus, if the step is entering a new method (as might occur with &lt;a href=&quot;../request/steprequest#STEP_INTO&quot;&gt;&lt;code&gt;StepRequest.STEP_INTO&lt;/code&gt;&lt;/a&gt;) the location of the event is the first instruction of the method. When a step leaves a method, the location of the event will be the first instruction after the call in the calling method; note that this location may not be at a line boundary, even if &lt;a href=&quot;../request/steprequest#STEP_LINE&quot;&gt;&lt;code&gt;StepRequest.STEP_LINE&lt;/code&gt;&lt;/a&gt; was used.</source>
          <target state="translated">대상 VM에서 단계 완료 알림. 단계 이벤트는 해당 위치의 코드가 실행되기 직전에 생성됩니다. 따라서 단계가 새 메서드를 입력하는 경우 ( &lt;a href=&quot;../request/steprequest#STEP_INTO&quot;&gt; &lt;code&gt;StepRequest.STEP_INTO&lt;/code&gt; 에서&lt;/a&gt; 발생할 수 있음 ) 이벤트의 위치는 메서드의 첫 번째 명령입니다. 단계가 메서드를 떠날 때 이벤트의 위치는 호출 메서드의 호출 이후 첫 번째 명령이됩니다. &lt;a href=&quot;../request/steprequest#STEP_LINE&quot;&gt; &lt;code&gt;StepRequest.STEP_LINE&lt;/code&gt; &lt;/a&gt; 이 사용 된 경우에도이 위치는 라인 경계에 있지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0c9500478364dedf6f4be2fc7b80ef1af11b326c" translate="yes" xml:space="preserve">
          <source>Notification of target VM termination.</source>
          <target state="translated">대상 VM 종료 알림.</target>
        </trans-unit>
        <trans-unit id="e4bd2fc5f7cf0658c53833cc5a03db065626b810" translate="yes" xml:space="preserve">
          <source>Notification of target VM termination. This event occurs if the target VM terminates before the VM disconnects (&lt;a href=&quot;vmdisconnectevent&quot;&gt;&lt;code&gt;VMDisconnectEvent&lt;/code&gt;&lt;/a&gt;). Thus, this event will NOT occur if external forces terminate the connection (e.g. a crash) or if the connection is intentionally terminated with &lt;a href=&quot;../virtualmachine#dispose()&quot;&gt;&lt;code&gt;VirtualMachine.dispose()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">대상 VM 종료 알림. 이 이벤트는 VM 연결이 끊어지기 전에 대상 VM이 종료되는 경우 발생합니다 ( &lt;a href=&quot;vmdisconnectevent&quot;&gt; &lt;code&gt;VMDisconnectEvent&lt;/code&gt; &lt;/a&gt; ). 따라서 외부 강제로 연결이 종료되거나 (예 : 충돌) 연결이 &lt;a href=&quot;../virtualmachine#dispose()&quot;&gt; &lt;code&gt;VirtualMachine.dispose()&lt;/code&gt; &lt;/a&gt; 의도적으로 종료 된 경우이 이벤트는 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="de773a8b353cc1e9800691bb5366653c54954eff" translate="yes" xml:space="preserve">
          <source>Notification that a &lt;code&gt;Component&lt;/code&gt; has been added to the parent container.</source>
          <target state="translated">Notification that a &lt;code&gt;Component&lt;/code&gt; has been added to the parent container.</target>
        </trans-unit>
        <trans-unit id="a65388df6bb2b78967991079d87c18d7673d884b" translate="yes" xml:space="preserve">
          <source>Notification that a &lt;code&gt;Component&lt;/code&gt; has been added to the parent container. You should not invoke this method directly, instead you should use one of the &lt;code&gt;Group&lt;/code&gt; methods to add a &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">Notification that a &lt;code&gt;Component&lt;/code&gt; has been added to the parent container. You should not invoke this method directly, instead you should use one of the &lt;code&gt;Group&lt;/code&gt; methods to add a &lt;code&gt;Component&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8abc0b014d54c1a2419941821cab4e1d90641c5b" translate="yes" xml:space="preserve">
          <source>Notification that a &lt;code&gt;Component&lt;/code&gt; has been removed from the parent container.</source>
          <target state="translated">Notification that a &lt;code&gt;Component&lt;/code&gt; has been removed from the parent container.</target>
        </trans-unit>
        <trans-unit id="ca98da142a268ac81e8936c7d077cf16307b67e0" translate="yes" xml:space="preserve">
          <source>Notification that a &lt;code&gt;Component&lt;/code&gt; has been removed from the parent container. You should not invoke this method directly, instead invoke &lt;code&gt;remove&lt;/code&gt; on the parent &lt;code&gt;Container&lt;/code&gt;.</source>
          <target state="translated">Notification that a &lt;code&gt;Component&lt;/code&gt; has been removed from the parent container. You should not invoke this method directly, instead invoke &lt;code&gt;remove&lt;/code&gt; on the parent &lt;code&gt;Container&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6093a2e04eadefcf2448e8d1ede95a3f49ff5ec5" translate="yes" xml:space="preserve">
          <source>Notification that a child changed.</source>
          <target state="translated">Notification that a child changed.</target>
        </trans-unit>
        <trans-unit id="b4217b60c6d45a785b01405d5cec6437448f2f7f" translate="yes" xml:space="preserve">
          <source>Notification that a child changed. This can effect whether or not new offset calculations are needed. This is called by a ChildState object that has changed it's major span. This can therefore be called by multiple threads.</source>
          <target state="translated">Notification that a child changed. This can effect whether or not new offset calculations are needed. This is called by a ChildState object that has changed it's major span. This can therefore be called by multiple threads.</target>
        </trans-unit>
        <trans-unit id="20a96a010ae79a1d303ea80cff79b98f1beabb37" translate="yes" xml:space="preserve">
          <source>Notification that a thread in the target VM has finished waiting on an monitor object.</source>
          <target state="translated">대상 VM의 스레드가 모니터 개체에서 대기를 완료했음을 알립니다.</target>
        </trans-unit>
        <trans-unit id="6b4a91c996d71d857d4f9ec82f176214a6433925" translate="yes" xml:space="preserve">
          <source>Notification that a thread in the target VM is about to wait on a monitor object.</source>
          <target state="translated">대상 VM의 스레드가 모니터 개체를 대기하려고한다는 알림입니다.</target>
        </trans-unit>
        <trans-unit id="e335c9e6163e40643f477f51e1e2f04f7a5b466c" translate="yes" xml:space="preserve">
          <source>Notification that a thread in the target VM is attempting to enter a monitor that is already acquired by another thread.</source>
          <target state="translated">대상 VM의 스레드가 다른 스레드에서 이미 획득 한 모니터에 들어 가려고한다는 알림입니다.</target>
        </trans-unit>
        <trans-unit id="c65b35c50aaa179f17e7d773ec05ea95c04ee098" translate="yes" xml:space="preserve">
          <source>Notification that a thread in the target VM is entering a monitor after waiting for it to be released by another thread.</source>
          <target state="translated">대상 VM의 스레드가 다른 스레드에서 해제되기를 기다린 후 모니터에 들어가고 있음을 알립니다.</target>
        </trans-unit>
        <trans-unit id="261971a8e82ca49fc96d2ac7f5057a0d46ff23dc" translate="yes" xml:space="preserve">
          <source>Notification that the &lt;code&gt;RowSorter&lt;/code&gt; has changed.</source>
          <target state="translated">Notification that the &lt;code&gt;RowSorter&lt;/code&gt; has changed.</target>
        </trans-unit>
        <trans-unit id="4e725d4638a2d843300180f800213747fa45f7e5" translate="yes" xml:space="preserve">
          <source>Notification that the &lt;code&gt;RowSorter&lt;/code&gt; has changed. The event describes the scope of the change.</source>
          <target state="translated">Notification that the &lt;code&gt;RowSorter&lt;/code&gt; has changed. The event describes the scope of the change.</target>
        </trans-unit>
        <trans-unit id="4bf16d83ada10204b5b89de10b3d8a73d9eeed07" translate="yes" xml:space="preserve">
          <source>Notification type denoting that a non-predefined error type has occurred when trying to get the value of the observed attribute.</source>
          <target state="translated">Notification type denoting that a non-predefined error type has occurred when trying to get the value of the observed attribute.</target>
        </trans-unit>
        <trans-unit id="a0fddc90122ba792c748bf2d62358d2725ddbe2b" translate="yes" xml:space="preserve">
          <source>Notification type denoting that a non-predefined error type has occurred when trying to get the value of the observed attribute. This notification is fired by all kinds of monitors.</source>
          <target state="translated">관찰 된 속성의 값을 가져 오려고 할 때 미리 정의되지 않은 오류 유형이 발생했음을 나타내는 알림 유형. 이 알림은 모든 종류의 모니터에서 발생합니다.</target>
        </trans-unit>
        <trans-unit id="16e878b11829d698e9924e53dcd04af099c162c3" translate="yes" xml:space="preserve">
          <source>Notification type denoting that an MBean has been registered.</source>
          <target state="translated">Notification type denoting that an MBean has been registered.</target>
        </trans-unit>
        <trans-unit id="53d10da6cb414d843d4eabec5e367f4a0cd07351" translate="yes" xml:space="preserve">
          <source>Notification type denoting that an MBean has been registered. Value is &quot;JMX.mbean.registered&quot;.</source>
          <target state="translated">MBean이 등록되었음을 나타내는 통지 형입니다. 값은 &quot;JMX.mbean.registered&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="032075da1242133d38c75850ffa98cc8172e4192" translate="yes" xml:space="preserve">
          <source>Notification type denoting that an MBean has been unregistered.</source>
          <target state="translated">Notification type denoting that an MBean has been unregistered.</target>
        </trans-unit>
        <trans-unit id="848f626ec20abea390df7797ba6d3339cedfdeac" translate="yes" xml:space="preserve">
          <source>Notification type denoting that an MBean has been unregistered. Value is &quot;JMX.mbean.unregistered&quot;.</source>
          <target state="translated">MBean이 등록 해제되었음을 나타내는 통지 유형. 값은 &quot;JMX.mbean.unregistered&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="0f633af305efb836d83b31d00a0d8f7764f025d3" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the Java virtual machine has completed a garbage collection cycle.</source>
          <target state="translated">JVM (Java Virtual Machine)이 가비지 콜렉션주기를 완료했음을 표시하는 알림 유형입니다.</target>
        </trans-unit>
        <trans-unit id="7b9ec971edb001495fe9099d621dcc9c2ccf6333" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the Java virtual machine has completed a garbage collection cycle. This notification is emitted by a &lt;a href=&quot;garbagecollectormxbean&quot;&gt;&lt;code&gt;GarbageCollectorMXBean&lt;/code&gt;&lt;/a&gt;. The value of this notification type is &lt;code&gt;com.sun.management.gc.notification&lt;/code&gt;.</source>
          <target state="translated">JVM (Java Virtual Machine)이 가비지 콜렉션주기를 완료했음을 표시하는 알림 유형입니다. 이 알림은 &lt;a href=&quot;garbagecollectormxbean&quot;&gt; &lt;code&gt;GarbageCollectorMXBean&lt;/code&gt; 에&lt;/a&gt; 의해 생성됩니다 . 이 알림 유형의 값은 &lt;code&gt;com.sun.management.gc.notification&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="37c5fbad323b41a62fe7f764ef8a9897859c6ba1" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the memory usage of a memory pool has reached or exceeded its &lt;a href=&quot;memorypoolmxbean#UsageThreshold&quot;&gt; usage threshold&lt;/a&gt; value.</source>
          <target state="translated">Notification type denoting that the memory usage of a memory pool has reached or exceeded its &lt;a href=&quot;memorypoolmxbean#UsageThreshold&quot;&gt; usage threshold&lt;/a&gt; value.</target>
        </trans-unit>
        <trans-unit id="4041a14df70e264efb3cd74e51db32ef9b3aaf57" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the memory usage of a memory pool has reached or exceeded its &lt;a href=&quot;memorypoolmxbean#UsageThreshold&quot;&gt; usage threshold&lt;/a&gt; value. This notification is emitted by &lt;a href=&quot;memorymxbean&quot;&gt;&lt;code&gt;MemoryMXBean&lt;/code&gt;&lt;/a&gt;. Subsequent crossing of the usage threshold value does not cause further notification until the memory usage has returned to become less than the usage threshold value. The value of this notification type is &lt;code&gt;java.management.memory.threshold.exceeded&lt;/code&gt;.</source>
          <target state="translated">메모리 풀의 메모리 사용량이 &lt;a href=&quot;memorypoolmxbean#UsageThreshold&quot;&gt;사용량 임계&lt;/a&gt; 값에 도달했거나 초과했음을 나타내는 알림 유형 . 이 통지는 &lt;a href=&quot;memorymxbean&quot;&gt; &lt;code&gt;MemoryMXBean&lt;/code&gt; 에&lt;/a&gt; 의해 발행 됩니다. 이후에 사용 임계 값을 초과해도 메모리 사용이 사용 임계 값보다 작아 질 때까지 추가 알림이 발생하지 않습니다. 이 통지 형의 값은 &lt;code&gt;java.management.memory.threshold.exceeded&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b2dd69f036ca7d2f7744379c5effd76b961d758e" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the memory usage of a memory pool is greater than or equal to its &lt;a href=&quot;memorypoolmxbean#CollectionThreshold&quot;&gt; collection usage threshold&lt;/a&gt; after the Java virtual machine has expended effort in recycling unused objects in that memory pool.</source>
          <target state="translated">Notification type denoting that the memory usage of a memory pool is greater than or equal to its &lt;a href=&quot;memorypoolmxbean#CollectionThreshold&quot;&gt; collection usage threshold&lt;/a&gt; after the Java virtual machine has expended effort in recycling unused objects in that memory pool.</target>
        </trans-unit>
        <trans-unit id="158f17482f10f8c0125f196d69000583e1b62ab6" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the memory usage of a memory pool is greater than or equal to its &lt;a href=&quot;memorypoolmxbean#CollectionThreshold&quot;&gt; collection usage threshold&lt;/a&gt; after the Java virtual machine has expended effort in recycling unused objects in that memory pool. This notification is emitted by &lt;a href=&quot;memorymxbean&quot;&gt;&lt;code&gt;MemoryMXBean&lt;/code&gt;&lt;/a&gt;. The value of this notification type is &lt;code&gt;java.management.memory.collection.threshold.exceeded&lt;/code&gt;.</source>
          <target state="translated">JVM (Java Virtual Machine)이 해당 메모리 풀에서 사용되지 않는 오브젝트를 재순환하려고 시도한 후 메모리 풀의 메모리 사용량이 &lt;a href=&quot;memorypoolmxbean#CollectionThreshold&quot;&gt;콜렉션 사용량 임계 값&lt;/a&gt; 이상임을 나타내는 알림 유형 . 이 통지는 &lt;a href=&quot;memorymxbean&quot;&gt; &lt;code&gt;MemoryMXBean&lt;/code&gt; 에&lt;/a&gt; 의해 발행 됩니다. 이 통지 형의 값은 &lt;code&gt;java.management.memory.collection.threshold.exceeded&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9434731e056545154ae55167b4fa3c1bb4bbe7c4" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the observed attribute has differed from the &quot;string to compare&quot; value.</source>
          <target state="translated">Notification type denoting that the observed attribute has differed from the &quot;string to compare&quot; value.</target>
        </trans-unit>
        <trans-unit id="2690956b940ae5334b1bcb1ccb8eb53a16716774" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the observed attribute has differed from the &quot;string to compare&quot; value. This notification is only fired by string monitors.</source>
          <target state="translated">관찰 된 속성이 &quot;string to compare&quot;값과 다르다는 것을 나타내는 알림 유형. 이 알림은 문자열 모니터에 의해서만 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9054757e9ef97d95e86bc056ff76345a825f3a43" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the observed attribute has exceeded the threshold high value.</source>
          <target state="translated">Notification type denoting that the observed attribute has exceeded the threshold high value.</target>
        </trans-unit>
        <trans-unit id="e2fd8c97a5b3afe669a6d3f49b2077f36fbdc056" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the observed attribute has exceeded the threshold high value. This notification is only fired by gauge monitors.</source>
          <target state="translated">관찰 된 속성이 임계 값 상한값을 초과했음을 나타내는 알림 유형. 이 알림은 게이지 모니터에 의해서만 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d7f690e376dc803bc06476127cc6b7e50552b487" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the observed attribute has exceeded the threshold low value.</source>
          <target state="translated">Notification type denoting that the observed attribute has exceeded the threshold low value.</target>
        </trans-unit>
        <trans-unit id="77c89bcc072fe4cfb7ba0c19217a2659755a728a" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the observed attribute has exceeded the threshold low value. This notification is only fired by gauge monitors.</source>
          <target state="translated">관찰 된 속성이 임계 값 하한값을 초과했음을 나타내는 알림 유형. 이 알림은 게이지 모니터에 의해서만 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7e91a6c0439d366c542139e77dfc804a24c9f3c5" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the observed attribute has matched the &quot;string to compare&quot; value.</source>
          <target state="translated">Notification type denoting that the observed attribute has matched the &quot;string to compare&quot; value.</target>
        </trans-unit>
        <trans-unit id="51ab42da1b6d70b8c58edbc7d39fb7c4cfe46b5a" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the observed attribute has matched the &quot;string to compare&quot; value. This notification is only fired by string monitors.</source>
          <target state="translated">관찰 된 속성이 &quot;string to compare&quot;값과 일치 함을 나타내는 알림 유형. 이 알림은 문자열 모니터에 의해서만 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6f6358c07968544210179a5ec080e3ad0b5f316b" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the observed attribute has reached the threshold value.</source>
          <target state="translated">Notification type denoting that the observed attribute has reached the threshold value.</target>
        </trans-unit>
        <trans-unit id="558029858a1ca17d3e4d41252a386e922eaf1c9a" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the observed attribute has reached the threshold value. This notification is only fired by counter monitors.</source>
          <target state="translated">관찰 된 속성이 임계 값에 도달했음을 나타내는 알림 유형. 이 알림은 카운터 모니터에 의해서만 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a6a7a6b64093943a9e61d1fadfa648bd94182717" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the observed attribute is not contained in the observed object.</source>
          <target state="translated">Notification type denoting that the observed attribute is not contained in the observed object.</target>
        </trans-unit>
        <trans-unit id="4490ccdc5a75db0d824c57147a015e661a181cec" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the observed attribute is not contained in the observed object. This notification is fired by all kinds of monitors.</source>
          <target state="translated">관찰 된 속성이 관찰 된 개체에 포함되지 않음을 나타내는 알림 유형. 이 알림은 모든 종류의 모니터에서 발생합니다.</target>
        </trans-unit>
        <trans-unit id="27f2279edfbd4ef3d197fcb7a99f3484c4be196b" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the observed object is not registered in the MBean server.</source>
          <target state="translated">Notification type denoting that the observed object is not registered in the MBean server.</target>
        </trans-unit>
        <trans-unit id="3b98d2c9bcce9fe2a2fb00619c1b5cc0b15dc48f" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the observed object is not registered in the MBean server. This notification is fired by all kinds of monitors.</source>
          <target state="translated">감시 대상이 MBean 서버에 등록되어 있지 않은 것을 나타내는 통지 형입니다. 이 알림은 모든 종류의 모니터에서 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1fc07bc845ab2425c0364224e32f627b40567afb" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the type of the observed attribute is not correct.</source>
          <target state="translated">Notification type denoting that the type of the observed attribute is not correct.</target>
        </trans-unit>
        <trans-unit id="2f3dc8e3715cf0778c237b5979aa82256cbc8b65" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the type of the observed attribute is not correct. This notification is fired by all kinds of monitors.</source>
          <target state="translated">관찰 된 속성의 유형이 올바르지 않음을 나타내는 알림 유형. 이 알림은 모든 종류의 모니터에서 발생합니다.</target>
        </trans-unit>
        <trans-unit id="666018b9c87c3e716c3d61e401f7fefef7b57251" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the type of the thresholds, offset or modulus is not correct.</source>
          <target state="translated">Notification type denoting that the type of the thresholds, offset or modulus is not correct.</target>
        </trans-unit>
        <trans-unit id="01307f514bdd64d7977a041d779b58f7919cc674" translate="yes" xml:space="preserve">
          <source>Notification type denoting that the type of the thresholds, offset or modulus is not correct. This notification is fired by counter and gauge monitors.</source>
          <target state="translated">임계 값, 오프셋 또는 계수의 유형이 올바르지 않음을 나타내는 알림 유형. 이 알림은 카운터 및 게이지 모니터에 의해 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="4ff62153e53dc2bd024742ba7a25d3bc57d8e985" translate="yes" xml:space="preserve">
          <source>Notification type string for a connection that has possibly lost notifications.</source>
          <target state="translated">알림이 손실 된 연결의 알림 유형 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="f122c83177b077e6769b659d636613e79ef0f5ae" translate="yes" xml:space="preserve">
          <source>Notification type string for a connection-closed notification.</source>
          <target state="translated">연결 종료 알림의 알림 유형 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="d16c2e68da72af827355bd99911ae2f4d63597f3" translate="yes" xml:space="preserve">
          <source>Notification type string for a connection-failed notification.</source>
          <target state="translated">연결 실패 알림에 대한 알림 유형 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="e243cce4c3cef0eb20c97358ab7062e24705366b" translate="yes" xml:space="preserve">
          <source>Notification type string for a connection-opened notification.</source>
          <target state="translated">연결이 열린 알림의 알림 유형 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="7c0a0038b2f650e0402c8c9eb7a18ad45000f8ec" translate="yes" xml:space="preserve">
          <source>Notification type which indicates that the observed MBean attribute value has changed.</source>
          <target state="translated">관찰 된 MBean 속성 값이 변경되었음을 나타내는 알림 유형.</target>
        </trans-unit>
        <trans-unit id="aa56c74aeca83ea513288bad353aff903e83999d" translate="yes" xml:space="preserve">
          <source>Notification.getMessage()</source>
          <target state="translated">Notification.getMessage()</target>
        </trans-unit>
        <trans-unit id="d2e56b83c9fb31a138b19264c05be4eb41856497" translate="yes" xml:space="preserve">
          <source>Notification.getSequenceNumber()</source>
          <target state="translated">Notification.getSequenceNumber()</target>
        </trans-unit>
        <trans-unit id="9a0cc30feeaa45575681f7742cb2a7ee50b6a74b" translate="yes" xml:space="preserve">
          <source>Notification.getTimeStamp()</source>
          <target state="translated">Notification.getTimeStamp()</target>
        </trans-unit>
        <trans-unit id="ccdac1975d9c18801897f2b4161f643706262ce0" translate="yes" xml:space="preserve">
          <source>Notification.getType()</source>
          <target state="translated">Notification.getType()</target>
        </trans-unit>
        <trans-unit id="37c7e70c2b913c9dbea3102095835d06bac9f3bc" translate="yes" xml:space="preserve">
          <source>Notification.getUserData()</source>
          <target state="translated">Notification.getUserData()</target>
        </trans-unit>
        <trans-unit id="8ebbe107aea31d1a87f9da417289ad8b27fadc78" translate="yes" xml:space="preserve">
          <source>Notification.setSequenceNumber()</source>
          <target state="translated">Notification.setSequenceNumber()</target>
        </trans-unit>
        <trans-unit id="72d905f2978536fefffe32f030401f83948114a9" translate="yes" xml:space="preserve">
          <source>Notification.setSource()</source>
          <target state="translated">Notification.setSource()</target>
        </trans-unit>
        <trans-unit id="03c172655d7a3834fcc4fe2d98c0019464544dc7" translate="yes" xml:space="preserve">
          <source>Notification.setTimeStamp()</source>
          <target state="translated">Notification.setTimeStamp()</target>
        </trans-unit>
        <trans-unit id="12ed75f8521d9f55d0607eacca423b8f96352dd7" translate="yes" xml:space="preserve">
          <source>Notification.setUserData()</source>
          <target state="translated">Notification.setUserData()</target>
        </trans-unit>
        <trans-unit id="d3c6d647e982f92c5081108e680e98d578a2c8da" translate="yes" xml:space="preserve">
          <source>Notification.toString()</source>
          <target state="translated">Notification.toString()</target>
        </trans-unit>
        <trans-unit id="8f7071d10f852466bc58fe91a066716a2abe6e62" translate="yes" xml:space="preserve">
          <source>NotificationBroadcaster</source>
          <target state="translated">NotificationBroadcaster</target>
        </trans-unit>
        <trans-unit id="d310bab9e3dea25cf291c2a7d1934c7de38dec1c" translate="yes" xml:space="preserve">
          <source>NotificationBroadcaster.addNotificationListener()</source>
          <target state="translated">NotificationBroadcaster.addNotificationListener()</target>
        </trans-unit>
        <trans-unit id="4dbc57cacb755390a61535780b3d40f512e1d2c8" translate="yes" xml:space="preserve">
          <source>NotificationBroadcaster.getNotificationInfo()</source>
          <target state="translated">NotificationBroadcaster.getNotificationInfo()</target>
        </trans-unit>
        <trans-unit id="72279c4046c4587343a36c6b1053755a10dc928f" translate="yes" xml:space="preserve">
          <source>NotificationBroadcaster.removeNotificationListener()</source>
          <target state="translated">NotificationBroadcaster.removeNotificationListener()</target>
        </trans-unit>
        <trans-unit id="6f86f6d3f8c66d4b7539b161d7a1d31518304e3b" translate="yes" xml:space="preserve">
          <source>NotificationBroadcasterSupport</source>
          <target state="translated">NotificationBroadcasterSupport</target>
        </trans-unit>
        <trans-unit id="55230b5d596e1d35800a3f2173fcf398cc270645" translate="yes" xml:space="preserve">
          <source>NotificationBroadcasterSupport.addNotificationListener()</source>
          <target state="translated">NotificationBroadcasterSupport.addNotificationListener()</target>
        </trans-unit>
        <trans-unit id="a07b901c595d1e1322eed5cf15547ccf23174a44" translate="yes" xml:space="preserve">
          <source>NotificationBroadcasterSupport.getNotificationInfo()</source>
          <target state="translated">NotificationBroadcasterSupport.getNotificationInfo()</target>
        </trans-unit>
        <trans-unit id="41868855a9131a177551012b9666dd9b10d2c5a1" translate="yes" xml:space="preserve">
          <source>NotificationBroadcasterSupport.handleNotification()</source>
          <target state="translated">NotificationBroadcasterSupport.handleNotification()</target>
        </trans-unit>
        <trans-unit id="c3dd06f33e04ff9e967ce7ed6be761a9b5033129" translate="yes" xml:space="preserve">
          <source>NotificationBroadcasterSupport.removeNotificationListener()</source>
          <target state="translated">NotificationBroadcasterSupport.removeNotificationListener()</target>
        </trans-unit>
        <trans-unit id="34729ce3251cfbfb00c0f6665adbf2a978f9dc76" translate="yes" xml:space="preserve">
          <source>NotificationBroadcasterSupport.sendNotification()</source>
          <target state="translated">NotificationBroadcasterSupport.sendNotification()</target>
        </trans-unit>
        <trans-unit id="7fdb3f0215b0c0001cc8b643e897f789814594c9" translate="yes" xml:space="preserve">
          <source>NotificationEmitter</source>
          <target state="translated">NotificationEmitter</target>
        </trans-unit>
        <trans-unit id="2e52f29f5c38915c9a069dea804235556c595ef1" translate="yes" xml:space="preserve">
          <source>NotificationEmitter.removeNotificationListener()</source>
          <target state="translated">NotificationEmitter.removeNotificationListener()</target>
        </trans-unit>
        <trans-unit id="be05f7f7138cbeb9c814cdeac208cddfba897657" translate="yes" xml:space="preserve">
          <source>NotificationFilter</source>
          <target state="translated">NotificationFilter</target>
        </trans-unit>
        <trans-unit id="1963dc8566f71acfe3e3e0af65ea9e0679b22cf2" translate="yes" xml:space="preserve">
          <source>NotificationFilter.isNotificationEnabled()</source>
          <target state="translated">NotificationFilter.isNotificationEnabled()</target>
        </trans-unit>
        <trans-unit id="4c284b3b36633ed4d3f7803d42e018536fe61810" translate="yes" xml:space="preserve">
          <source>NotificationFilterSupport</source>
          <target state="translated">NotificationFilterSupport</target>
        </trans-unit>
        <trans-unit id="7423244bd467e472ddd60a76122d7e13f8276295" translate="yes" xml:space="preserve">
          <source>NotificationFilterSupport.disableAllTypes()</source>
          <target state="translated">NotificationFilterSupport.disableAllTypes()</target>
        </trans-unit>
        <trans-unit id="12e8df073b3e001e3a8d14dc3d98c17d4147a66a" translate="yes" xml:space="preserve">
          <source>NotificationFilterSupport.disableType()</source>
          <target state="translated">NotificationFilterSupport.disableType()</target>
        </trans-unit>
        <trans-unit id="0cfc1ef6ce70e84b911daef8dc65d66cddab7997" translate="yes" xml:space="preserve">
          <source>NotificationFilterSupport.enableType()</source>
          <target state="translated">NotificationFilterSupport.enableType()</target>
        </trans-unit>
        <trans-unit id="1b905e94c9f524c0a095cef7b60bd3fc0194460b" translate="yes" xml:space="preserve">
          <source>NotificationFilterSupport.getEnabledTypes()</source>
          <target state="translated">NotificationFilterSupport.getEnabledTypes()</target>
        </trans-unit>
        <trans-unit id="0fbc4cc3fef944d192da21e993f354802276dd53" translate="yes" xml:space="preserve">
          <source>NotificationFilterSupport.isNotificationEnabled()</source>
          <target state="translated">NotificationFilterSupport.isNotificationEnabled()</target>
        </trans-unit>
        <trans-unit id="a8d1748571ba5b340e75bc08de985d4d62e8966e" translate="yes" xml:space="preserve">
          <source>NotificationListener</source>
          <target state="translated">NotificationListener</target>
        </trans-unit>
        <trans-unit id="d76a75bb45fae882a850107a24b3aae62228aa3d" translate="yes" xml:space="preserve">
          <source>NotificationListener.handleNotification()</source>
          <target state="translated">NotificationListener.handleNotification()</target>
        </trans-unit>
        <trans-unit id="d704e3a9a1fa3153d63cb4e1a6e127e0d09381c1" translate="yes" xml:space="preserve">
          <source>NotificationResult</source>
          <target state="translated">NotificationResult</target>
        </trans-unit>
        <trans-unit id="510260b0db5c2f4ed5b9ce7431f1a9e20e67ffbc" translate="yes" xml:space="preserve">
          <source>NotificationResult.getEarliestSequenceNumber()</source>
          <target state="translated">NotificationResult.getEarliestSequenceNumber()</target>
        </trans-unit>
        <trans-unit id="b12359b96454ba84d37aeb5816f73f51d0abb955" translate="yes" xml:space="preserve">
          <source>NotificationResult.getNextSequenceNumber()</source>
          <target state="translated">NotificationResult.getNextSequenceNumber()</target>
        </trans-unit>
        <trans-unit id="bd2379de7af875251e795e3439a5e9b190fede3e" translate="yes" xml:space="preserve">
          <source>NotificationResult.getTargetedNotifications()</source>
          <target state="translated">NotificationResult.getTargetedNotifications()</target>
        </trans-unit>
        <trans-unit id="9a934d4744704dc3c1f069fe20f1699a1e9e94ad" translate="yes" xml:space="preserve">
          <source>NotificationResult.toString()</source>
          <target state="translated">NotificationResult.toString()</target>
        </trans-unit>
        <trans-unit id="753a22b2eb617204efee4644795034b8ace1ee14" translate="yes" xml:space="preserve">
          <source>Notifications</source>
          <target state="translated">Notifications</target>
        </trans-unit>
        <trans-unit id="365fc838f26ca9b50037007e2490f538d084eb69" translate="yes" xml:space="preserve">
          <source>Notifications can be received by a &lt;em&gt;listener&lt;/em&gt;, which is an object that implements the &lt;a href=&quot;notificationlistener&quot;&gt;&lt;code&gt;NotificationListener&lt;/code&gt;&lt;/a&gt; interface. You can add a listener to an MBean with the method &lt;a href=&quot;mbeanserver#addNotificationListener(javax.management.ObjectName,javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)&quot;&gt;&lt;code&gt;MBeanServer.addNotificationListener(ObjectName,
            NotificationListener, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt;. You can optionally supply a &lt;em&gt;filter&lt;/em&gt; to this method, to select only notifications of interest. A filter is an object that implements the &lt;a href=&quot;notificationfilter&quot;&gt;&lt;code&gt;NotificationFilter&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">Notifications can be received by a &lt;em&gt;listener&lt;/em&gt;, which is an object that implements the &lt;a href=&quot;notificationlistener&quot;&gt; &lt;code&gt;NotificationListener&lt;/code&gt; &lt;/a&gt; interface. You can add a listener to an MBean with the method &lt;a href=&quot;mbeanserver#addNotificationListener(javax.management.ObjectName,javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)&quot;&gt; &lt;code&gt;MBeanServer.addNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt;. You can optionally supply a &lt;em&gt;filter&lt;/em&gt; to this method, to select only notifications of interest. A filter is an object that implements the &lt;a href=&quot;notificationfilter&quot;&gt; &lt;code&gt;NotificationFilter&lt;/code&gt; &lt;/a&gt; interface.</target>
        </trans-unit>
        <trans-unit id="8b27301704524b94896038801a175e4bec1c131b" translate="yes" xml:space="preserve">
          <source>Notifications can be received by a &lt;em&gt;listener&lt;/em&gt;, which is an object that implements the &lt;a href=&quot;notificationlistener&quot;&gt;&lt;code&gt;NotificationListener&lt;/code&gt;&lt;/a&gt; interface. You can add a listener to an MBean with the method &lt;a href=&quot;mbeanserver#addNotificationListener-javax.management.ObjectName-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;MBeanServer.addNotificationListener(ObjectName,
            NotificationListener, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt;. You can optionally supply a &lt;em&gt;filter&lt;/em&gt; to this method, to select only notifications of interest. A filter is an object that implements the &lt;a href=&quot;notificationfilter&quot;&gt;&lt;code&gt;NotificationFilter&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">통지가 수신 할 수있는 &lt;em&gt;수신기&lt;/em&gt; 객체 구현 그이다 &lt;a href=&quot;notificationlistener&quot;&gt; &lt;code&gt;NotificationListener&lt;/code&gt; &lt;/a&gt; 인터페이스. &lt;a href=&quot;mbeanserver#addNotificationListener-javax.management.ObjectName-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;MBeanServer.addNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 MBean에 리스너를 추가 할 수 있습니다 . 선택적 으로이 방법에 &lt;em&gt;필터&lt;/em&gt; 를 제공하여 관심있는 알림 만 선택할 수 있습니다. 필터는 &lt;a href=&quot;notificationfilter&quot;&gt; &lt;code&gt;NotificationFilter&lt;/code&gt; &lt;/a&gt; 인터페이스 를 구현하는 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="eefa75b651d391b09505de05fa6b0b2171c2c584" translate="yes" xml:space="preserve">
          <source>Notifies &lt;code&gt;ListSelectionListener&lt;/code&gt;s added directly to the list of selection changes made to the selection model.</source>
          <target state="translated">Notifies &lt;code&gt;ListSelectionListener&lt;/code&gt; s added directly to the list of selection changes made to the selection model.</target>
        </trans-unit>
        <trans-unit id="00f52878af0f265cef40f28c9d9b4fc9f5e68aac" translate="yes" xml:space="preserve">
          <source>Notifies &lt;code&gt;ListSelectionListener&lt;/code&gt;s added directly to the list of selection changes made to the selection model. &lt;code&gt;JList&lt;/code&gt; listens for changes made to the selection in the selection model, and forwards notification to listeners added to the list directly, by calling this method.</source>
          <target state="translated">Notifies &lt;code&gt;ListSelectionListener&lt;/code&gt; s added directly to the list of selection changes made to the selection model. &lt;code&gt;JList&lt;/code&gt; listens for changes made to the selection in the selection model, and forwards notification to listeners added to the list directly, by calling this method.</target>
        </trans-unit>
        <trans-unit id="ce74329f652a6d89e1a8885b4194e8e618c54b05" translate="yes" xml:space="preserve">
          <source>Notifies &lt;code&gt;ListSelectionListeners&lt;/code&gt; that the value of the selection, in the closed interval &lt;code&gt;firstIndex&lt;/code&gt;, &lt;code&gt;lastIndex&lt;/code&gt;, has changed.</source>
          <target state="translated">Notifies &lt;code&gt;ListSelectionListeners&lt;/code&gt; that the value of the selection, in the closed interval &lt;code&gt;firstIndex&lt;/code&gt; , &lt;code&gt;lastIndex&lt;/code&gt; , has changed.</target>
        </trans-unit>
        <trans-unit id="4c14da921e7ca805dbc264f99eb7b49b2c64b84f" translate="yes" xml:space="preserve">
          <source>Notifies &lt;code&gt;PopupMenuListener&lt;/code&gt;s that the popup portion of the combo box has become invisible.</source>
          <target state="translated">Notifies &lt;code&gt;PopupMenuListener&lt;/code&gt; s that the popup portion of the combo box has become invisible.</target>
        </trans-unit>
        <trans-unit id="8a03b95e7569924e0d40abe4c478d7db18a2ebb9" translate="yes" xml:space="preserve">
          <source>Notifies &lt;code&gt;PopupMenuListener&lt;/code&gt;s that the popup portion of the combo box has been canceled.</source>
          <target state="translated">Notifies &lt;code&gt;PopupMenuListener&lt;/code&gt; s that the popup portion of the combo box has been canceled.</target>
        </trans-unit>
        <trans-unit id="183363c0167eff033d947e60948991d35553c9a9" translate="yes" xml:space="preserve">
          <source>Notifies &lt;code&gt;PopupMenuListener&lt;/code&gt;s that the popup portion of the combo box will become visible.</source>
          <target state="translated">Notifies &lt;code&gt;PopupMenuListener&lt;/code&gt; s that the popup portion of the combo box will become visible.</target>
        </trans-unit>
        <trans-unit id="8c30b8e231b82aef04a6fe83048c70ef279197e5" translate="yes" xml:space="preserve">
          <source>Notifies &lt;code&gt;PopupMenuListener&lt;/code&gt;s that this popup menu will become invisible.</source>
          <target state="translated">Notifies &lt;code&gt;PopupMenuListener&lt;/code&gt; s that this popup menu will become invisible.</target>
        </trans-unit>
        <trans-unit id="3c4fa159541c5d588939b46f7279527202addf0d" translate="yes" xml:space="preserve">
          <source>Notifies &lt;code&gt;PopupMenuListener&lt;/code&gt;s that this popup menu will become visible.</source>
          <target state="translated">Notifies &lt;code&gt;PopupMenuListener&lt;/code&gt; s that this popup menu will become visible.</target>
        </trans-unit>
        <trans-unit id="e14f129dd6f5114911616ff030435ad3bd9c24f6" translate="yes" xml:space="preserve">
          <source>Notifies &lt;code&gt;PopupMenuListeners&lt;/code&gt; that this popup menu is cancelled.</source>
          <target state="translated">Notifies &lt;code&gt;PopupMenuListeners&lt;/code&gt; that this popup menu is cancelled.</target>
        </trans-unit>
        <trans-unit id="e3bb7e2a099e01d385457d644fc3541b032767e7" translate="yes" xml:space="preserve">
          <source>Notifies all &lt;code&gt;ChangeListeners&lt;/code&gt; when the views size, position, or the viewports extent size has changed.</source>
          <target state="translated">Notifies all &lt;code&gt;ChangeListeners&lt;/code&gt; when the views size, position, or the viewports extent size has changed.</target>
        </trans-unit>
        <trans-unit id="ebb4132ab73e5bc1b9d181b388d86da2b9037efd" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that all cell values in the table's rows may have changed.</source>
          <target state="translated">Notifies all listeners that all cell values in the table's rows may have changed.</target>
        </trans-unit>
        <trans-unit id="34ec16ec5ec856d75f3ff041e47769ec13b3545c" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that all cell values in the table's rows may have changed. The number of rows may also have changed and the &lt;code&gt;JTable&lt;/code&gt; should redraw the table from scratch. The structure of the table (as in the order of the columns) is assumed to be the same.</source>
          <target state="translated">Notifies all listeners that all cell values in the table's rows may have changed. The number of rows may also have changed and the &lt;code&gt;JTable&lt;/code&gt; should redraw the table from scratch. The structure of the table (as in the order of the columns) is assumed to be the same.</target>
        </trans-unit>
        <trans-unit id="e8df77be7de3970a7cf4ba6ce4c50c035b32a541" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that are registered for tree selection events on this object.</source>
          <target state="translated">Notifies all listeners that are registered for tree selection events on this object.</target>
        </trans-unit>
        <trans-unit id="2aa3fe8208d1cee87486e0c2af6a45c9464e9ef6" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that have registered interest for notification on this event type.</source>
          <target state="translated">Notifies all listeners that have registered interest for notification on this event type.</target>
        </trans-unit>
        <trans-unit id="0af082fd6999f73e0928adfa2b817b517588f37e" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that have registered interest for notification on this event type. The event instance is created lazily.</source>
          <target state="translated">Notifies all listeners that have registered interest for notification on this event type. The event instance is created lazily.</target>
        </trans-unit>
        <trans-unit id="5975d5374f7672c75ab39e81ffea17e0183d216d" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the &lt;code&gt;command&lt;/code&gt; parameter.</source>
          <target state="translated">Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the &lt;code&gt;command&lt;/code&gt; parameter.</target>
        </trans-unit>
        <trans-unit id="8411998562757d36e5b1de305167484d3b485544" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the &lt;code&gt;event&lt;/code&gt; parameter.</source>
          <target state="translated">Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the &lt;code&gt;event&lt;/code&gt; parameter.</target>
        </trans-unit>
        <trans-unit id="339fa92bfa87b307f97fb68ae128353845f40f55" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the &lt;code&gt;path&lt;/code&gt; parameter.</source>
          <target state="translated">Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the &lt;code&gt;path&lt;/code&gt; parameter.</target>
        </trans-unit>
        <trans-unit id="8213798045bc2373fac9277fc9dc4f459ab84b58" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method.</source>
          <target state="translated">Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method.</target>
        </trans-unit>
        <trans-unit id="8ad386a175ce1bb6a905f55cfd4d40861f55e6da" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method. The listener list is processed in a last-to-first manner.</source>
          <target state="translated">Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method. The listener list is processed in a last-to-first manner.</target>
        </trans-unit>
        <trans-unit id="3f756b56957b0d3c4b3b667469d6cd3e9d51f695" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method. The listener list is processed last to first.</source>
          <target state="translated">이 이벤트 유형에 대한 알림에 관심을 등록한 모든 리스너에게 알립니다. 이벤트 인스턴스는 fire 메소드에 전달 된 매개 변수를 사용하여 느리게 생성됩니다. 리스너 목록은 마지막에서 처음으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="bd55119f739f5d4c09e153d54e83ea359ad3b912" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created.</source>
          <target state="translated">이 이벤트 유형에 대한 알림에 관심을 등록한 모든 리스너에게 알립니다. 이벤트 인스턴스가 느리게 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="8372f7af34b34a60e0d3bee07b00065704ae9dc6" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created. The listener list is processed in last to first order.</source>
          <target state="translated">이 이벤트 유형에 대한 알림에 관심을 등록한 모든 리스너에게 알립니다. 이벤트 인스턴스가 느리게 생성됩니다. 리스너 목록은 마지막에서 첫 번째 순서로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="5a6cad73bf3e41e6ea9514adb80779531fdf6219" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that have registered interest for notification on this event type. This is normally called by the currently installed &lt;code&gt;EditorKit&lt;/code&gt; if a content type that supports hyperlinks is currently active and there was activity with a link. The listener list is processed last to first.</source>
          <target state="translated">이 이벤트 유형에 대한 알림에 관심을 등록한 모든 리스너에게 알립니다. 하이퍼 링크를 지원하는 콘텐츠 유형이 현재 활성화되어 있고 링크가있는 활동이있는 경우 일반적으로 현재 설치된 &lt;code&gt;EditorKit&lt;/code&gt; 에서 호출 합니다. 리스너 목록은 마지막에서 처음으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="04aa6778e21e224db781ccccd16ace56edb74cc2" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that rows in the range &lt;code&gt;[firstRow, lastRow]&lt;/code&gt;, inclusive, have been deleted.</source>
          <target state="translated">모든 리스너에게 &lt;code&gt;[firstRow, lastRow]&lt;/code&gt; 범위의 행 이 삭제 되었음을 알립니다 .</target>
        </trans-unit>
        <trans-unit id="283623e3b4eecd11ed045df6220766dc7a131121" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that rows in the range &lt;code&gt;[firstRow, lastRow]&lt;/code&gt;, inclusive, have been inserted.</source>
          <target state="translated">모든 리스너에게 &lt;code&gt;[firstRow, lastRow]&lt;/code&gt; 범위의 행 이 삽입 되었음을 알립니다 .</target>
        </trans-unit>
        <trans-unit id="42f8a0d1b4e00fd5ceb6182207e316ee69b7b550" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that rows in the range &lt;code&gt;[firstRow, lastRow]&lt;/code&gt;, inclusive, have been updated.</source>
          <target state="translated">모든 리스너에게 &lt;code&gt;[firstRow, lastRow]&lt;/code&gt; 범위의 행 이 업데이트 되었음을 알립니다 .</target>
        </trans-unit>
        <trans-unit id="45f28d1a215a691568d9045fa7791274c5b2a2c5" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that the table's structure has changed.</source>
          <target state="translated">테이블의 구조가 변경되었음을 모든 리스너에게 알립니다.</target>
        </trans-unit>
        <trans-unit id="6c3d150022af62b062380e53b43d4ecea6f58d26" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that the table's structure has changed. The number of columns in the table, and the names and types of the new columns may be different from the previous state. If the &lt;code&gt;JTable&lt;/code&gt; receives this event and its &lt;code&gt;autoCreateColumnsFromModel&lt;/code&gt; flag is set it discards any table columns that it had and reallocates default columns in the order they appear in the model. This is the same as calling &lt;code&gt;setModel(TableModel)&lt;/code&gt; on the &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">테이블의 구조가 변경되었음을 모든 리스너에게 알립니다. 테이블의 열 수와 새 열의 이름 및 유형은 이전 상태와 다를 수 있습니다. 는 IF &lt;code&gt;JTable&lt;/code&gt; 는, 이 이벤트를하고 수신 &lt;code&gt;autoCreateColumnsFromModel&lt;/code&gt; 의 플래그는 그것이 가지고 그들이 모델에 나타나는 순서에 재 할당의 기본 열 것을 모든 테이블의 열을 삭제 설정됩니다. 이것은 &lt;code&gt;JTable&lt;/code&gt; 에서 &lt;code&gt;setModel(TableModel)&lt;/code&gt; 을 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="07bafe7b16f2626257343eb9ba850c3557b130fc" translate="yes" xml:space="preserve">
          <source>Notifies all listeners that the value of the cell at &lt;code&gt;[row, column]&lt;/code&gt; has been updated.</source>
          <target state="translated">모든 리스너에게 &lt;code&gt;[row, column]&lt;/code&gt; 의 셀 값 이 업데이트 되었음을 알립니다 .</target>
        </trans-unit>
        <trans-unit id="5fb031bb3690c754b945415d634cda8d16d80834" translate="yes" xml:space="preserve">
          <source>Notifies all of the listeners registered with this &lt;code&gt;RowSet&lt;/code&gt; object that its cursor has moved.</source>
          <target state="translated">이 &lt;code&gt;RowSet&lt;/code&gt; 객체에 등록 된 모든 리스너에게 커서가 이동했음을 알립니다 .</target>
        </trans-unit>
        <trans-unit id="45ee82a2f09959dfe01ee3bd59b56330bb97dbc6" translate="yes" xml:space="preserve">
          <source>Notifies all of the listeners registered with this &lt;code&gt;RowSet&lt;/code&gt; object that its entire contents have changed.</source>
          <target state="translated">이 &lt;code&gt;RowSet&lt;/code&gt; 객체에 등록 된 모든 리스너에게 전체 내용이 변경 되었음을 알립니다 .</target>
        </trans-unit>
        <trans-unit id="02020a44a2210816ab369d8a135a20861f3138f1" translate="yes" xml:space="preserve">
          <source>Notifies all of the listeners registered with this &lt;code&gt;RowSet&lt;/code&gt; object that one of its rows has changed.</source>
          <target state="translated">이 &lt;code&gt;RowSet&lt;/code&gt; 객체에 등록 된 모든 리스너에게 행 중 하나가 변경 되었음을 알립니다 .</target>
        </trans-unit>
        <trans-unit id="2293141101dbed93872e24bd676035eed74a250d" translate="yes" xml:space="preserve">
          <source>Notifies any listeners if the model changes.</source>
          <target state="translated">모델이 변경되면 모든 리스너에게 알립니다.</target>
        </trans-unit>
        <trans-unit id="f9da49c5a2a18c65c2cb70b49cfb7d2a4af2b1d8" translate="yes" xml:space="preserve">
          <source>Notifies listener that the mapping has changed.</source>
          <target state="translated">리스너에게 매핑이 변경되었음을 알립니다.</target>
        </trans-unit>
        <trans-unit id="c3f4fb574ca3e0837f4021c04c7c466524e9903b" translate="yes" xml:space="preserve">
          <source>Notifies listener that the sort order has changed.</source>
          <target state="translated">리스너에게 정렬 순서가 변경되었음을 알립니다.</target>
        </trans-unit>
        <trans-unit id="4c3d08bad10a92f0a4c59eab10773af332fec45d" translate="yes" xml:space="preserve">
          <source>Notifies listeners of a change in path. changePaths should contain instances of PathPlaceHolder.</source>
          <target state="translated">리스너에게 경로 변경을 알립니다. changePaths는 PathPlaceHolder의 인스턴스를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="54ca24d15163b07535528826f779cb5cfd25cd61" translate="yes" xml:space="preserve">
          <source>Notifies listeners of a property change.</source>
          <target state="translated">리스너에게 속성 변경을 알립니다.</target>
        </trans-unit>
        <trans-unit id="b22ae3d8925bcae3e27e757627e7911f29391564" translate="yes" xml:space="preserve">
          <source>Notifies listeners of a property change. This is subclassed to update the &lt;code&gt;windowBlit&lt;/code&gt; property. (The &lt;code&gt;putClientProperty&lt;/code&gt; property is final).</source>
          <target state="translated">리스너에게 속성 변경을 알립니다. &lt;code&gt;windowBlit&lt;/code&gt; 속성 을 업데이트하기 위해 서브 클래 싱됩니다 . ( &lt;code&gt;putClientProperty&lt;/code&gt; 속성은 최종입니다).</target>
        </trans-unit>
        <trans-unit id="82bdd67d0a2598974d0fd2b27009dbfb5e6e1c13" translate="yes" xml:space="preserve">
          <source>Notifies listeners that we have ended a series of adjustments.</source>
          <target state="translated">일련의 조정이 종료되었음을 청취자에게 알립니다.</target>
        </trans-unit>
        <trans-unit id="2cad3779c98815140876abd52f6cc0abdec440f5" translate="yes" xml:space="preserve">
          <source>Notifies registered listeners that a &lt;code&gt;RowSet&lt;/code&gt; object has had a change in one of its rows.</source>
          <target state="translated">등록 된 리스너에게 &lt;code&gt;RowSet&lt;/code&gt; 를 알립니다. 객체의 행 중 하나가 변경 .</target>
        </trans-unit>
        <trans-unit id="8c336937e6fb8c29361206e3856d18bfacc4297f" translate="yes" xml:space="preserve">
          <source>Notifies registered listeners that a &lt;code&gt;RowSet&lt;/code&gt; object in the given &lt;code&gt;RowSetEvent&lt;/code&gt; object has changed its entire contents.</source>
          <target state="translated">지정된 &lt;code&gt;RowSetEvent&lt;/code&gt; 객체 의 &lt;code&gt;RowSet&lt;/code&gt; 객체가 전체 내용을 변경 했음을 등록 된 리스너에게 알립니다 .</target>
        </trans-unit>
        <trans-unit id="4a24a77d36e9e0b52c2a206e383d42b48c785723" translate="yes" xml:space="preserve">
          <source>Notifies registered listeners that a &lt;code&gt;RowSet&lt;/code&gt; object's cursor has moved.</source>
          <target state="translated">등록 된 리스너에게 &lt;code&gt;RowSet&lt;/code&gt; 객체의 커서가 이동 했음을 알립니다 .</target>
        </trans-unit>
        <trans-unit id="83b2914782157bd6af7614ba03af1fd3e860207f" translate="yes" xml:space="preserve">
          <source>Notifies registered listeners that a RowSet object in the given RowSetEvent object has populated a number of additional rows.</source>
          <target state="translated">지정된 RowSetEvent 객체의 RowSet 객체가 여러 추가 행을 채웠 음을 등록 된 리스너에게 알립니다.</target>
        </trans-unit>
        <trans-unit id="f7d0f63c882700e67471a75deba227b613f543f0" translate="yes" xml:space="preserve">
          <source>Notifies registered listeners that a RowSet object in the given RowSetEvent object has populated a number of additional rows. The &lt;code&gt;numRows&lt;/code&gt; parameter ensures that this event will only be fired every &lt;code&gt;numRow&lt;/code&gt;.</source>
          <target state="translated">지정된 RowSetEvent 객체의 RowSet 객체가 여러 추가 행을 채웠 음을 등록 된 리스너에게 알립니다. &lt;code&gt;numRows&lt;/code&gt; 의 보장하지만 매개 변수는이 이벤트는 모든 발사됩니다 &lt;code&gt;numRow&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="47429531aa33ffd7b1c50f9368ff1077d6c55021" translate="yes" xml:space="preserve">
          <source>Notifies the &lt;code&gt;LayerUI&lt;/code&gt; when any of its property are changed and enables updating every &lt;code&gt;JLayer&lt;/code&gt; this &lt;code&gt;LayerUI&lt;/code&gt; instance is set to.</source>
          <target state="translated">통지 &lt;code&gt;LayerUI&lt;/code&gt; 해당 속성의 변경하고 모든 업데이트 가능하면 &lt;code&gt;JLayer&lt;/code&gt; 이 &lt;code&gt;LayerUI&lt;/code&gt; 에 설정되어 인스턴스를.</target>
        </trans-unit>
        <trans-unit id="4c5e733a11c10c37958ad8e953cdd0b9402b5288" translate="yes" xml:space="preserve">
          <source>Notifies the external quit requester that the quit will proceed, and performs the default &lt;a href=&quot;quitstrategy&quot;&gt;&lt;code&gt;QuitStrategy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">종료가 진행될 것임을 외부 종료 요청자에게 &lt;a href=&quot;quitstrategy&quot;&gt; &lt;code&gt;QuitStrategy&lt;/code&gt; &lt;/a&gt; 기본 QuitStrategy를 수행합니다 .</target>
        </trans-unit>
        <trans-unit id="32009de0b276131aa341d4133646f8dfa0f15aa1" translate="yes" xml:space="preserve">
          <source>Notifies the external quit requester that the user has explicitly canceled the pending quit, and leaves the application running.</source>
          <target state="translated">사용자가 보류중인 종료를 명시 적으로 취소했음을 외부 종료 요청자에게 알리고 응용 프로그램을 계속 실행합니다.</target>
        </trans-unit>
        <trans-unit id="ab9651f8cc73d884a739840434de9398056b84d7" translate="yes" xml:space="preserve">
          <source>Notifies the external quit requester that the user has explicitly canceled the pending quit, and leaves the application running. &lt;b&gt;Note: this will cancel a pending log-out, restart, or shutdown.&lt;/b&gt;</source>
          <target state="translated">사용자가 보류중인 종료를 명시 적으로 취소했음을 외부 종료 요청자에게 알리고 응용 프로그램을 계속 실행합니다. &lt;b&gt;참고 : 이렇게하면 보류중인 로그 아웃, 다시 시작 또는 종료가 취소됩니다.&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="14f2874533f8f3706d8dbbf424e98a2610ba80df" translate="yes" xml:space="preserve">
          <source>Notifies the input context that a client component has been removed from its containment hierarchy, or that input method support has been disabled for the component.</source>
          <target state="translated">클라이언트 구성 요소가 포함 계층에서 제거되었거나 해당 구성 요소에 대한 입력 방법 지원이 비활성화되었음을 입력 컨텍스트에 알립니다.</target>
        </trans-unit>
        <trans-unit id="540788e644fda90fae8e124d30f13b2d6de9a0e3" translate="yes" xml:space="preserve">
          <source>Notifies the input context that a client component has been removed from its containment hierarchy, or that input method support has been disabled for the component. This method is usually called from the client component's &lt;a href=&quot;../component#removeNotify()&quot;&gt;&lt;code&gt;Component.removeNotify&lt;/code&gt;&lt;/a&gt; method. Potentially pending input from input methods for this component is discarded. If no input methods are available, then this method has no effect.</source>
          <target state="translated">클라이언트 구성 요소가 포함 계층에서 제거되었거나 해당 구성 요소에 대한 입력 방법 지원이 비활성화되었음을 입력 컨텍스트에 알립니다. 이 메서드는 일반적으로 클라이언트 구성 요소의 &lt;a href=&quot;../component#removeNotify()&quot;&gt; &lt;code&gt;Component.removeNotify&lt;/code&gt; &lt;/a&gt; 메서드 에서 호출됩니다 . 이 구성 요소에 대한 입력 방법에서 잠재적으로 보류중인 입력이 삭제됩니다. 사용할 수있는 입력 방법이 없으면이 방법은 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="3e2164d501041a25635c83f4b1967404cf8400b3" translate="yes" xml:space="preserve">
          <source>Notifies the input method that a client component has been removed from its containment hierarchy, or that input method support has been disabled for the component.</source>
          <target state="translated">클라이언트 구성 요소가 포함 계층에서 제거되었거나 해당 구성 요소에 대한 입력 방법 지원이 비활성화되었음을 입력 방법에 알립니다.</target>
        </trans-unit>
        <trans-unit id="b55fa248fda6d5b593d57ca3df57816f30a0cca2" translate="yes" xml:space="preserve">
          <source>Notifies the listener of a change in some print job attributes.</source>
          <target state="translated">일부 인쇄 작업 속성의 변경 사항을 리스너에게 알립니다.</target>
        </trans-unit>
        <trans-unit id="c80c5abc94bf7c97d0170e1395aaf2bd2e71b8ab" translate="yes" xml:space="preserve">
          <source>Notifies the listener of a change in some print job attributes. One example of an occurrence triggering this event is if the &lt;a href=&quot;../attribute/standard/jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; attribute changed from &lt;code&gt;PROCESSING&lt;/code&gt; to &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt;.</source>
          <target state="translated">일부 인쇄 작업 속성의 변경을 청취자에게 통지합니다. 이 경우 생성 트리거링 이벤트 발생의 일례이다 &lt;a href=&quot;../attribute/standard/jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; 가의&lt;/a&gt; 속성이 변경 &lt;code&gt;PROCESSING&lt;/code&gt; 에 &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4039989abd8d9177d35acb494f8a0e0c195c6654" translate="yes" xml:space="preserve">
          <source>Notifies the peer that the &lt;code&gt;Transferable&lt;/code&gt;'s &lt;code&gt;DataFlavor&lt;/code&gt;s have changed.</source>
          <target state="translated">&lt;code&gt;Transferable&lt;/code&gt; 의 &lt;code&gt;DataFlavor&lt;/code&gt; 가 변경 되었음을 피어에게 알립니다 .</target>
        </trans-unit>
        <trans-unit id="2f904e9224cb68a611a81a7d4546f4506a4a7cbb" translate="yes" xml:space="preserve">
          <source>Notifies this &lt;code&gt;ConnectionEventListener&lt;/code&gt; that a fatal error has occurred and the pooled connection can no longer be used.</source>
          <target state="translated">이 &lt;code&gt;ConnectionEventListener&lt;/code&gt; 에 치명적인 오류가 발생하여 풀링 된 연결을 더 이상 사용할 수 없음을 알립니다 .</target>
        </trans-unit>
        <trans-unit id="bbee7bca88bdf276608dd869d984bb9bdc7f815f" translate="yes" xml:space="preserve">
          <source>Notifies this &lt;code&gt;ConnectionEventListener&lt;/code&gt; that a fatal error has occurred and the pooled connection can no longer be used. The driver makes this notification just before it throws the application the &lt;code&gt;SQLException&lt;/code&gt; contained in the given &lt;code&gt;ConnectionEvent&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;ConnectionEventListener&lt;/code&gt; 에 치명적인 오류가 발생하여 풀링 된 연결을 더 이상 사용할 수 없음을 알립니다 . 드라이버는 주어진 &lt;code&gt;ConnectionEvent&lt;/code&gt; 객체에 포함 된 &lt;code&gt;SQLException&lt;/code&gt; 을 응용 프로그램에 던지기 직전에이 알림을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="2d851200358338c88c7da3886e048527695ad0e5" translate="yes" xml:space="preserve">
          <source>Notifies this &lt;code&gt;ConnectionEventListener&lt;/code&gt; that the application has called the method &lt;code&gt;close&lt;/code&gt; on its representation of a pooled connection.</source>
          <target state="translated">애플리케이션이 풀링 된 연결의 표현에 대해 &lt;code&gt;close&lt;/code&gt; 메소드를 호출했음을 이 &lt;code&gt;ConnectionEventListener&lt;/code&gt; 에 알립니다 .</target>
        </trans-unit>
        <trans-unit id="194636043f355cb2eb801dc635e1be5d48b6927d" translate="yes" xml:space="preserve">
          <source>Notifies this UI delegate that it is time to paint the specified component.</source>
          <target state="translated">이 UI 델리게이트에 지정된 컴포넌트를 그릴 때임을 알립니다.</target>
        </trans-unit>
        <trans-unit id="fcddeb3a8355ab75fe35ab7fe92e9e849df4da3a" translate="yes" xml:space="preserve">
          <source>Notifies this UI delegate that it is time to paint the specified component. This method is invoked by &lt;code&gt;JComponent&lt;/code&gt; when the specified component is being painted.</source>
          <target state="translated">이 UI 델리게이트에 지정된 컴포넌트를 그릴 때임을 알립니다. 이 메서드는 지정된 구성 요소 를 &lt;code&gt;JComponent&lt;/code&gt; 때 JComponent에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="b2ae8f2f524814a689e0f0891e8c6b789ca2710a" translate="yes" xml:space="preserve">
          <source>Notifies this UI delegate to repaint the specified component.</source>
          <target state="translated">지정된 구성 요소를 다시 그리도록이 UI 대리자에 알립니다.</target>
        </trans-unit>
        <trans-unit id="009340696b5a3efaf410c0a42b9545f60a4ce616" translate="yes" xml:space="preserve">
          <source>Notifies this UI delegate to repaint the specified component. This method paints the component background, then calls the &lt;a href=&quot;#paint(javax.swing.plaf.synth.SynthContext,java.awt.Graphics)&quot;&gt;&lt;code&gt;paint(SynthContext,Graphics)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">지정된 구성 요소를 다시 그리도록이 UI 대리자에 알립니다. 이 메서드는 구성 요소 배경을 &lt;a href=&quot;#paint(javax.swing.plaf.synth.SynthContext,java.awt.Graphics)&quot;&gt; &lt;code&gt;paint(SynthContext,Graphics)&lt;/code&gt; &lt;/a&gt; 다음 paint (SynthContext, Graphics) 메서드 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="328f4d7d2c5aa2b543090d2855cbfd3a43c00bac" translate="yes" xml:space="preserve">
          <source>Notifies this UI delegate to repaint the specified component. This method paints the component background, then calls the &lt;a href=&quot;../basic/basiclistui#paint(java.awt.Graphics,javax.swing.JComponent)&quot;&gt;&lt;code&gt;BasicListUI.paint(java.awt.Graphics, javax.swing.JComponent)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">지정된 구성 요소를 다시 그리도록이 UI 대리자에 알립니다. 이 메서드는 구성 요소 배경을 &lt;a href=&quot;../basic/basiclistui#paint(java.awt.Graphics,javax.swing.JComponent)&quot;&gt; &lt;code&gt;BasicListUI.paint(java.awt.Graphics, javax.swing.JComponent)&lt;/code&gt; &lt;/a&gt; 다음 BasicListUI.paint (java.awt.Graphics, javax.swing.JComponent) 메서드 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="02fbee18c05e80b3e85b51a809381083b8698ee4" translate="yes" xml:space="preserve">
          <source>Notifies this component that it no longer has a parent component.</source>
          <target state="translated">이 구성 요소에 더 이상 부모 구성 요소가 없음을 알립니다.</target>
        </trans-unit>
        <trans-unit id="1d814710418013ddd42fe0c3d06984b3daaf5b9f" translate="yes" xml:space="preserve">
          <source>Notifies this component that it no longer has a parent component. When this method is invoked, any &lt;code&gt;KeyboardAction&lt;/code&gt;s set up in the chain of parent components are removed. This method is called by the toolkit internally and should not be called directly by programs.</source>
          <target state="translated">이 구성 요소에 더 이상 부모 구성 요소가 없음을 알립니다. 이 메서드가 호출되면 상위 구성 요소의 체인에 설정된 &lt;code&gt;KeyboardAction&lt;/code&gt; 이 제거됩니다. 이 메소드는 툴킷에서 내부적으로 호출되며 프로그램에서 직접 호출해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="9aceb34005535bc842c4d05c00d416c7e75e8ebc" translate="yes" xml:space="preserve">
          <source>Notifies this component that it now has a parent component.</source>
          <target state="translated">이 구성 요소에 이제 부모 구성 요소가 있음을 알립니다.</target>
        </trans-unit>
        <trans-unit id="5707a80511f8904317a16ab440f09a37e751cacd" translate="yes" xml:space="preserve">
          <source>Notifies this component that it now has a parent component. When this method is invoked, the chain of parent components is set up with &lt;code&gt;KeyboardAction&lt;/code&gt; event listeners. This method is called by the toolkit internally and should not be called directly by programs.</source>
          <target state="translated">이 구성 요소에 이제 부모 구성 요소가 있음을 알립니다. 이 메서드가 호출되면 상위 구성 요소의 체인이 &lt;code&gt;KeyboardAction&lt;/code&gt; 이벤트 리스너로 설정됩니다 . 이 메소드는 툴킷에서 내부적으로 호출되며 프로그램에서 직접 호출해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="3f112b7f9112181c4626ad1bff48ce6fe541e81c" translate="yes" xml:space="preserve">
          <source>Notifies this input method of changes in the client window location or state.</source>
          <target state="translated">이 입력 방법에 클라이언트 창 위치 또는 상태의 변경을 알립니다.</target>
        </trans-unit>
        <trans-unit id="d82ef9d54e3a70ce6d99754ad89ead424035d217" translate="yes" xml:space="preserve">
          <source>Notifies this input method of changes in the client window location or state. This method is called while this input method is the current input method of its input context and notifications for it are enabled (see &lt;a href=&quot;inputmethodcontext#enableClientWindowNotification(java.awt.im.spi.InputMethod,boolean)&quot;&gt;&lt;code&gt;InputMethodContext.enableClientWindowNotification&lt;/code&gt;&lt;/a&gt;). Calls to this method are temporarily suspended if the input context's &lt;a href=&quot;../inputcontext#removeNotify(java.awt.Component)&quot;&gt;&lt;code&gt;removeNotify&lt;/code&gt;&lt;/a&gt; method is called, and resume when the input method is activated for a new client component. It is called in the following situations:</source>
          <target state="translated">이 입력 방법에 클라이언트 창 위치 또는 상태 변경을 알립니다. 이 입력 메서드가 입력 컨텍스트의 현재 입력 메서드이고 이에 대한 알림이 활성화되어있는 동안이 메서드가 호출됩니다 ( &lt;a href=&quot;inputmethodcontext#enableClientWindowNotification(java.awt.im.spi.InputMethod,boolean)&quot;&gt; &lt;code&gt;InputMethodContext.enableClientWindowNotification&lt;/code&gt; &lt;/a&gt; 참조 ). 이 메서드에 대한 호출은 입력 컨텍스트의 &lt;a href=&quot;../inputcontext#removeNotify(java.awt.Component)&quot;&gt; &lt;code&gt;removeNotify&lt;/code&gt; &lt;/a&gt; 메서드가 호출 되면 일시적으로 중단 되고 새 클라이언트 구성 요소에 대해 입력 메서드가 활성화되면 다시 시작됩니다. 다음 상황에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ab77d1f863fa6f91b46b7ace80f3dafba15b8ca2" translate="yes" xml:space="preserve">
          <source>Notifies this object that it is no longer the clipboard owner.</source>
          <target state="translated">더 이상 클립 보드 소유자가 아님을이 개체에 알립니다.</target>
        </trans-unit>
        <trans-unit id="d60c5a7fb0f6a047091f50a9facf5daa6cf3174b" translate="yes" xml:space="preserve">
          <source>Notifies this object that it is no longer the clipboard owner. This method will be called when another application or another object within this application asserts ownership of the clipboard.</source>
          <target state="translated">더 이상 클립 보드 소유자가 아님을이 개체에 알립니다. 이 메서드는 다른 응용 프로그램이나이 응용 프로그램 내의 다른 개체가 클립 보드의 소유권을 주장 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="67fcfd9b9f7f51339e4c19b5d597ff1661950663" translate="yes" xml:space="preserve">
          <source>Notify listeners that the scrollbar's model has changed.</source>
          <target state="translated">스크롤바의 모델이 변경되었음을 청취자에게 알립니다.</target>
        </trans-unit>
        <trans-unit id="8fa2d76b5f68a8d26e46eb6c00da5769845c2aad" translate="yes" xml:space="preserve">
          <source>Notify that classes have been redefined.</source>
          <target state="translated">클래스가 재정의되었음을 알립니다.</target>
        </trans-unit>
        <trans-unit id="591db5274b1b0ce13734ac76e6e3b4672c3a711e" translate="yes" xml:space="preserve">
          <source>Notify the DragGestureListener that a Drag and Drop initiating gesture has occurred.</source>
          <target state="translated">드래그 앤 드롭 시작 제스처가 발생했음을 DragGestureListener에 알립니다.</target>
        </trans-unit>
        <trans-unit id="7ced83e44f352eb61c0fc1ca66f3b13f4b5c3cd6" translate="yes" xml:space="preserve">
          <source>Notify the DragGestureListener that a Drag and Drop initiating gesture has occurred. Then reset the state of the Recognizer.</source>
          <target state="translated">드래그 앤 드롭 시작 제스처가 발생했음을 DragGestureListener에 알립니다. 그런 다음 인식기의 상태를 재설정하십시오.</target>
        </trans-unit>
        <trans-unit id="99a50a1622cabd999244719fcb9e8c7583d828b7" translate="yes" xml:space="preserve">
          <source>Notify the DropTarget that it has been associated with a Component This method is usually called from java.awt.Component.addNotify() of the Component associated with this DropTarget to notify the DropTarget that a ComponentPeer has been associated with that Component.</source>
          <target state="translated">DropTarget에 컴포넌트와 연관되었음을 알립니다.이 메소드는 일반적으로이 DropTarget과 연관된 컴포넌트의 java.awt.Component.addNotify ()에서 호출되어 ComponentPeer가 해당 컴포넌트와 연관되었음을 DropTarget에 알립니다.</target>
        </trans-unit>
        <trans-unit id="0f8327b875abb7ee55a41cd93bdcb8ffb952fbd4" translate="yes" xml:space="preserve">
          <source>Notify the DropTarget that it has been associated with a Component This method is usually called from java.awt.Component.addNotify() of the Component associated with this DropTarget to notify the DropTarget that a ComponentPeer has been associated with that Component. Calling this method, other than to notify this DropTarget of the association of the ComponentPeer with the Component may result in a malfunction of the DnD system.</source>
          <target state="translated">DropTarget에 컴포넌트와 연관되었음을 알립니다.이 메소드는 일반적으로이 DropTarget과 연관된 컴포넌트의 java.awt.Component.addNotify ()에서 호출되어 ComponentPeer가 해당 컴포넌트와 연관되었음을 DropTarget에 알립니다. ComponentPeer와 Component의 연관을이 DropTarget에 알리는 것 외에이 메소드를 호출하면 DnD 시스템의 오작동이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f444643da0b0da6472b30a22f92f88bbcb6e063" translate="yes" xml:space="preserve">
          <source>Notify the DropTarget that it has been disassociated from a Component This method is usually called from java.awt.Component.removeNotify() of the Component associated with this DropTarget to notify the DropTarget that a ComponentPeer has been disassociated with that Component.</source>
          <target state="translated">DropTarget에 컴포넌트로부터 분리되었음을 통지이 메소드는 일반적으로이 DropTarget과 연관된 Component의 java.awt.Component.removeNotify ()에서 호출되어 ComponentPeer가 해당 Component와 분리되었음을 DropTarget에 알립니다.</target>
        </trans-unit>
        <trans-unit id="647a469bff697c927b815cc1334a9d6411249009" translate="yes" xml:space="preserve">
          <source>Notify the DropTarget that it has been disassociated from a Component This method is usually called from java.awt.Component.removeNotify() of the Component associated with this DropTarget to notify the DropTarget that a ComponentPeer has been disassociated with that Component. Calling this method, other than to notify this DropTarget of the disassociation of the ComponentPeer from the Component may result in a malfunction of the DnD system.</source>
          <target state="translated">DropTarget에 컴포넌트로부터 분리되었음을 통지이 메소드는 일반적으로이 DropTarget과 연관된 Component의 java.awt.Component.removeNotify ()에서 호출되어 ComponentPeer가 해당 Component와 분리되었음을 DropTarget에 알립니다. 이 메서드를 호출하면이 DropTarget에 Component에서 ComponentPeer가 분리되었음을 알리는 것 외에 DnD 시스템이 오작동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80315f0dce814bbf46e04205cc70dab43c1e2774" translate="yes" xml:space="preserve">
          <source>Notify this instance that it may now render a GUI</source>
          <target state="translated">이 인스턴스에게 이제 GUI를 렌더링 할 수 있음을 알립니다.</target>
        </trans-unit>
        <trans-unit id="00c6cd4adf365fe863b70c8172a02358f7f6deb4" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;drPepper.toString()&lt;/code&gt; returns &quot;&lt;code&gt;{2, 4, 10}&lt;/code&gt;&quot;.</source>
          <target state="translated">이제 &lt;code&gt;drPepper.toString()&lt;/code&gt; 은 &quot; &lt;code&gt;{2, 4, 10}&lt;/code&gt; &quot;을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="0bd4d6a82fceef2bca6b406ef628bb6984700aa7" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;drPepper.toString()&lt;/code&gt; returns &quot;&lt;code&gt;{2}&lt;/code&gt;&quot;.</source>
          <target state="translated">이제 &lt;code&gt;drPepper.toString()&lt;/code&gt; 은 &quot; &lt;code&gt;{2}&lt;/code&gt; &quot;를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="96d3b60112097a6c40d82ae5ec11fad5d0f7896e" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;drPepper.toString()&lt;/code&gt; returns &quot;&lt;code&gt;{}&lt;/code&gt;&quot;.</source>
          <target state="translated">이제 &lt;code&gt;drPepper.toString()&lt;/code&gt; 은 &quot; &lt;code&gt;{}&lt;/code&gt; &quot;을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="803e2a3f55aa13f13f0208e3ecffb64e0d0be134" translate="yes" xml:space="preserve">
          <source>Now if it also desired that the mechanism of Oid m1 always be obtained from the provider B before the previously set A was checked, it would call:</source>
          <target state="translated">이제 이전에 설정된 A가 확인되기 전에 항상 공급자 B로부터 Oid m1의 메커니즘을 얻으려면 다음을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="b74f7d27956880462229cdeae61317d8a4821d4b" translate="yes" xml:space="preserve">
          <source>Now let's look at an example that requires a structure change. Instead of changing the first three characters shown in &lt;u&gt;Figure 9&lt;/u&gt;, let's change the first two characters. Because the end change offset (2) does not fall on a character Element boundary, the Element at offset 2 must be split in such a way that offset 2 is the boundary of two Elements. Invoking &lt;code&gt;setCharacterAttributes()&lt;/code&gt; with a start offset of 0 and length of 2 has the result shown earlier in &lt;u&gt;Figure 10&lt;/u&gt;.</source>
          <target state="translated">이제 구조 변경이 필요한 예를 살펴 보겠습니다. &lt;u&gt;그림 9에&lt;/u&gt; 표시된 처음 세 문자를 변경하는 대신 처음 두 문자를 변경해 보겠습니다. 끝 변경 오프셋 (2)은 문자 요소 경계에 속하지 않기 때문에 오프셋 2의 요소는 오프셋 2가 두 요소의 경계가되는 방식으로 분할되어야합니다. 시작 오프셋이 0이고 길이가 2 인 &lt;code&gt;setCharacterAttributes()&lt;/code&gt; 를 호출하면 &lt;u&gt;그림 10의&lt;/u&gt; 앞부분에 표시된 결과가 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="091ae4c7c8c8358b44ddb75261035daa079fd718" translate="yes" xml:space="preserve">
          <source>Now suppose that the component shown on the right mutates the same document. Again, the document dispatches a DocumentEvent to both component views and sends an UndoableEditEvent to the listening logic that is maintaining the history buffer.</source>
          <target state="translated">이제 오른쪽에 표시된 구성 요소가 동일한 문서를 변경한다고 가정합니다. 다시 말하지만 문서는 DocumentEvent를 두 구성 요소 뷰에 전달하고 UndoableEditEvent를 기록 버퍼를 유지하는 수신 논리로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="3514d6390bca3dcca8903cb558d7b86a37aef5dd" translate="yes" xml:space="preserve">
          <source>Now we want to find the first N prime numbers and display the results in a &lt;code&gt;JTextArea&lt;/code&gt;. While this is computing, we want to update our progress in a &lt;code&gt;JProgressBar&lt;/code&gt;. Finally, we also want to print the prime numbers to &lt;code&gt;System.out&lt;/code&gt;.</source>
          <target state="translated">이제 우리는 처음 N 개의 소수를 찾고 그 결과를 &lt;code&gt;JTextArea&lt;/code&gt; 에 표시하려고합니다 . 이것이 컴퓨팅하는 동안 &lt;code&gt;JProgressBar&lt;/code&gt; 에서 진행 상황을 업데이트하려고합니다 . 마지막으로, 우리는 또한 소수를 &lt;code&gt;System.out&lt;/code&gt; 에 출력하려고합니다 .</target>
        </trans-unit>
        <trans-unit id="5e3a28003c47e72477d5e337756ef599a1ce3706" translate="yes" xml:space="preserve">
          <source>Now, consider a printing client that is generating print data on the fly and does not have the resources to store more than one piece of print data at a time. If the print service proxy used the all-at-once pattern to get the print data, it would pose a problem for such a client; the client would have to keep all the docs' print data around until the print service proxy comes back and asks for them, which the client is not able to do. To work with such a client, the print service proxy must use the interleaved pattern.</source>
          <target state="translated">이제 인쇄 데이터를 즉석에서 생성하고 한 번에 둘 이상의 인쇄 데이터를 저장할 리소스가없는 인쇄 클라이언트를 고려하십시오. 인쇄 서비스 프록시가 한 번에 한 번만 인쇄 패턴을 사용하여 인쇄 데이터를 얻는 경우, 그러한 클라이언트에게는 문제가됩니다. 클라이언트는 인쇄 서비스 프록시가 돌아와서 클라이언트가 할 수없는 것을 요청할 때까지 모든 문서의 인쇄 데이터를 보관해야합니다. 이러한 클라이언트와 작업하려면 인쇄 서비스 프록시가 인터리브 패턴을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="225d39736a3d7caefc2e6bdf06b31ae36b695f06" translate="yes" xml:space="preserve">
          <source>Now, if it also desired that for all mechanisms the provider B be checked after all configured providers have been checked, it would then call:</source>
          <target state="translated">이제 모든 메커니즘에 대해 구성된 모든 공급자를 확인한 후 공급자 B를 확인하려면 다음을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="109085beaaa80ac89858b283a64f7c75d7e5bb12" translate="yes" xml:space="preserve">
          <source>Null</source>
          <target state="translated">Null</target>
        </trans-unit>
        <trans-unit id="3df381a68816c2469589062e5cb363e6b926b438" translate="yes" xml:space="preserve">
          <source>Null Pointers</source>
          <target state="translated">널 포인터</target>
        </trans-unit>
        <trans-unit id="7e59f2a73bec9bcd3687d05f625df9dd4a63d022" translate="yes" xml:space="preserve">
          <source>Null arguments in the array are treated as identity functions, and the corresponding arguments left unchanged. (If there are no non-null elements in the array, the original target is returned.) Each filter is applied to the corresponding argument of the adapter.</source>
          <target state="translated">배열의 널 인수는 항등 함수로 취급되며 해당 인수는 변경되지 않습니다. 배열에 널이 아닌 요소가 없으면 원래 대상이 리턴됩니다. 각 필터는 어댑터의 해당 인수에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="b9557fdae9118afa3703c57e9f2c83ab20121396" translate="yes" xml:space="preserve">
          <source>Null can be returned as the object to be substituted, but may cause NullReferenceException in classes that contain references to the original object since they may be expecting an object instead of null.</source>
          <target state="translated">대체 할 객체로 Null을 반환 할 수 있지만 원래 객체에 대한 참조가 포함 된 클래스에서 NullReferenceException이 발생할 수 있습니다 (Null 대신 객체를 기대할 수 있음).</target>
        </trans-unit>
        <trans-unit id="ff57e7fe3a21ec19d10e6320127c4fba1b53422f" translate="yes" xml:space="preserve">
          <source>Null elements are not permitted. Attempts to insert a null element will throw &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt;. Attempts to test for the presence of a null element or to remove one will, however, function properly.</source>
          <target state="translated">널 요소는 허용되지 않습니다. null 요소를 삽입하려고하면 &lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다. 그러나 널 요소가 있는지 테스트하거나 제거하려고 시도하면 제대로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="e17005de17f3228191c5a76ece844e070b3f46fe" translate="yes" xml:space="preserve">
          <source>Null handling</source>
          <target state="translated">널 처리</target>
        </trans-unit>
        <trans-unit id="99d73663c8cd68a453a5b53ada1c9383620f5f59" translate="yes" xml:space="preserve">
          <source>Null keys are not permitted. Attempts to insert a null key will throw &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt;. Attempts to test for the presence of a null key or to remove one will, however, function properly. Null values are permitted.</source>
          <target state="translated">널 키는 허용되지 않습니다. null 키를 삽입하려고하면 &lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다. 그러나 널 키가 있는지 테스트하거나 제거하려고 시도하면 제대로 작동합니다. 널값이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="772c54b99852bc610e7341a13124706b50844214" translate="yes" xml:space="preserve">
          <source>Null object reference.</source>
          <target state="translated">널 오브젝트 참조.</target>
        </trans-unit>
        <trans-unit id="2096bc943e08294c66dbbcb15427b0e30df0c07d" translate="yes" xml:space="preserve">
          <source>Null order which indicates the end of string is reached by the cursor.</source>
          <target state="translated">커서가 문자열의 끝을 나타내는 널 순서에 도달합니다.</target>
        </trans-unit>
        <trans-unit id="cc0060d98f783bf3e0456fa8c11757d479ca203d" translate="yes" xml:space="preserve">
          <source>Null values are allowed for all Java types and Open Types, except primitive Java types where they are not possible. When converting from type &lt;em&gt;J&lt;/em&gt; to type &lt;em&gt;opendata(J)&lt;/em&gt; or from type &lt;em&gt;opendata(J)&lt;/em&gt; to type &lt;em&gt;J&lt;/em&gt;, a null value is mapped to a null value.</source>
          <target state="translated">원시 Java 유형이 불가능한 경우를 제외하고 모든 Java 유형 및 개방 유형에 대해 널값이 허용됩니다. 형식 변환 할 때 &lt;em&gt;J&lt;/em&gt; 형을 &lt;em&gt;opendata (J)&lt;/em&gt; 또는 유형에서 &lt;em&gt;opendata (J)&lt;/em&gt; 입력 할 &lt;em&gt;J를&lt;/em&gt; , NULL 값이 널 (null) 값으로 매핑된다.</target>
        </trans-unit>
        <trans-unit id="f378e37247b1dd48bd9f3ce4c1bae66e3dc5554a" translate="yes" xml:space="preserve">
          <source>Null values may be provided for the old and the new values if their true values are not known.</source>
          <target state="translated">실제 값을 알 수없는 경우 이전 값과 새 값에 널값이 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b9dce3b811014979ea32e7279867974a9e65ea6" translate="yes" xml:space="preserve">
          <source>NullCipher</source>
          <target state="translated">NullCipher</target>
        </trans-unit>
        <trans-unit id="e96a81e5fc6aa1615fc78a379fdad68b748bc26c" translate="yes" xml:space="preserve">
          <source>NullPointerException</source>
          <target state="translated">NullPointerException</target>
        </trans-unit>
        <trans-unit id="366cbe18dd2549a01524b6cb1f5d3cc51fe727fe" translate="yes" xml:space="preserve">
          <source>NullType</source>
          <target state="translated">NullType</target>
        </trans-unit>
        <trans-unit id="1ebe038b9202f5d180880fc1488c8d940afea431" translate="yes" xml:space="preserve">
          <source>Nullify any allocated instance data objects to allow for GC.</source>
          <target state="translated">할당 된 인스턴스 데이터 개체를 무효화하여 GC를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="0b5ed4c34c253d09812087277513ab955ad5a0f9" translate="yes" xml:space="preserve">
          <source>Number formats are generally not synchronized. It is recommended to create separate format instances for each thread. If multiple threads access a format concurrently, it must be synchronized externally.</source>
          <target state="translated">숫자 형식은 일반적으로 동기화되지 않습니다. 각 스레드마다 별도의 형식 인스턴스를 작성하는 것이 좋습니다. 여러 스레드가 동시에 형식에 액세스하는 경우 외부에서 동기화해야합니다.</target>
        </trans-unit>
        <trans-unit id="cbea5318d64a1c0dfd0ff5d9c8210ec9aa19023d" translate="yes" xml:space="preserve">
          <source>Number of bands of the image data that this SampleModel describes.</source>
          <target state="translated">이 SampleModel이 설명하는 이미지 데이터의 밴드 수입니다.</target>
        </trans-unit>
        <trans-unit id="6ad0024713c0cfe3ffa900b694adf5f85c1d6824" translate="yes" xml:space="preserve">
          <source>Number of bits per pixel.</source>
          <target state="translated">픽셀 당 비트 수입니다.</target>
        </trans-unit>
        <trans-unit id="fee9798220461a27c23df34b47d32a7f6dc724f3" translate="yes" xml:space="preserve">
          <source>Number of bytes read from the file at the given &lt;code&gt;URL&lt;/code&gt; address</source>
          <target state="translated">주어진 &lt;code&gt;URL&lt;/code&gt; 주소 에서 파일에서 읽은 바이트 수</target>
        </trans-unit>
        <trans-unit id="0287a98f383a551612a87064fbfdc5f3eb5c6ff9" translate="yes" xml:space="preserve">
          <source>Number of bytes read from the file at the given URL address</source>
          <target state="translated">주어진 URL 주소에서 파일에서 읽은 바이트 수</target>
        </trans-unit>
        <trans-unit id="16d7d77192950420c76cd445efface8c25ce8dcc" translate="yes" xml:space="preserve">
          <source>Number of bytes read from the stream</source>
          <target state="translated">스트림에서 읽은 바이트 수</target>
        </trans-unit>
        <trans-unit id="d44b9a08747612387f480b611e8c5dac012fa866" translate="yes" xml:space="preserve">
          <source>Number of characters read from the stream x 2</source>
          <target state="translated">스트림 x 2에서 읽은 문자 수</target>
        </trans-unit>
        <trans-unit id="e43c5c90cd5dcc92202ee3e55d55a96709ce0afa" translate="yes" xml:space="preserve">
          <source>Number of columns spanned by cell.</source>
          <target state="translated">셀에 포함 된 열 수입니다.</target>
        </trans-unit>
        <trans-unit id="75d60b796c7c195b06a516dc2f89188db5c3a0df" translate="yes" xml:space="preserve">
          <source>Number of columns spanned by cell. See the colspan attribute definition in HTML 4.0.</source>
          <target state="translated">셀에 포함 된 열 수입니다. HTML 4.0의 colspan 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="409ef314b6dd58347b31f4f1c75a48abeac20c63" translate="yes" xml:space="preserve">
          <source>Number of components in a pixel.</source>
          <target state="translated">픽셀의 구성 요소 수입니다.</target>
        </trans-unit>
        <trans-unit id="33761b54268ad1e4d47e2f4ed0f1a1b84af11152" translate="yes" xml:space="preserve">
          <source>Number of milliseconds in one day.</source>
          <target state="translated">하루의 밀리 초 수입니다.</target>
        </trans-unit>
        <trans-unit id="53b79cf127fb73a8c837fe5202de2c63f0e6461d" translate="yes" xml:space="preserve">
          <source>Number of milliseconds in one day. Useful constant for the &lt;code&gt;addNotification&lt;/code&gt; method.</source>
          <target state="translated">하루의 밀리 초 수 &lt;code&gt;addNotification&lt;/code&gt; 메소드에 유용한 상수입니다 .</target>
        </trans-unit>
        <trans-unit id="3ef079a9fc688ec75b39150a5729a6f856414f41" translate="yes" xml:space="preserve">
          <source>Number of milliseconds in one hour.</source>
          <target state="translated">1 시간 동안의 밀리 초입니다.</target>
        </trans-unit>
        <trans-unit id="bcc7057caa94b0ddfb92a661ff4add5ad9b69412" translate="yes" xml:space="preserve">
          <source>Number of milliseconds in one hour. Useful constant for the &lt;code&gt;addNotification&lt;/code&gt; method.</source>
          <target state="translated">1 시간의 밀리 초 수 &lt;code&gt;addNotification&lt;/code&gt; 메소드에 유용한 상수입니다 .</target>
        </trans-unit>
        <trans-unit id="a47f6188fd3c0299be89116ef647abd08c4450b7" translate="yes" xml:space="preserve">
          <source>Number of milliseconds in one minute.</source>
          <target state="translated">1 분의 밀리 초 수입니다.</target>
        </trans-unit>
        <trans-unit id="c7a9cb9e760f07adba05a99f988465dc3a3f3a07" translate="yes" xml:space="preserve">
          <source>Number of milliseconds in one minute. Useful constant for the &lt;code&gt;addNotification&lt;/code&gt; method.</source>
          <target state="translated">1 분의 밀리 초 수 &lt;code&gt;addNotification&lt;/code&gt; 메소드에 유용한 상수입니다 .</target>
        </trans-unit>
        <trans-unit id="6c1e388b8e4a2b4fc1a1aac2437b7b5da0cb8f34" translate="yes" xml:space="preserve">
          <source>Number of milliseconds in one second.</source>
          <target state="translated">1 초의 밀리 초 수입니다.</target>
        </trans-unit>
        <trans-unit id="0597b8a5f1bd8667cc4afde6262a9c1755129072" translate="yes" xml:space="preserve">
          <source>Number of milliseconds in one second. Useful constant for the &lt;code&gt;addNotification&lt;/code&gt; method.</source>
          <target state="translated">1 초의 밀리 초 수 &lt;code&gt;addNotification&lt;/code&gt; 메소드에 유용한 상수입니다 .</target>
        </trans-unit>
        <trans-unit id="bca1c75978b9904ca13cfecee2e32d9fc75ea6ec" translate="yes" xml:space="preserve">
          <source>Number of milliseconds in one week.</source>
          <target state="translated">한 주 동안의 밀리 초 수입니다.</target>
        </trans-unit>
        <trans-unit id="88d82bfa9ef0cffbf588014393044368db61260d" translate="yes" xml:space="preserve">
          <source>Number of milliseconds in one week. Useful constant for the &lt;code&gt;addNotification&lt;/code&gt; method.</source>
          <target state="translated">일주일의 밀리 초 수 &lt;code&gt;addNotification&lt;/code&gt; 메소드에 유용한 상수입니다 .</target>
        </trans-unit>
        <trans-unit id="c8bd76a2a83c4fae55a9487b03decea7d2bf8719" translate="yes" xml:space="preserve">
          <source>Number of minutes or &lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt;&lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt;&lt;/a&gt;. Value range from -14 hours (-14 * 60 minutes) to 14 hours (14 * 60 minutes).</source>
          <target state="translated">분 또는 &lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt; &lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt; 수&lt;/a&gt; 입니다. 값 범위는 -14 시간 (-14 * 60 분)에서 14 시간 (14 * 60 분)까지입니다.</target>
        </trans-unit>
        <trans-unit id="fe206eb449155d250f0ad5bfad67b092a203ea1f" translate="yes" xml:space="preserve">
          <source>Number of mouse clicks before a node is expanded.</source>
          <target state="translated">노드가 확장되기 전 마우스 클릭 횟수입니다.</target>
        </trans-unit>
        <trans-unit id="35c818c1ae2dc96b48ca6750d5e31acae92a3874" translate="yes" xml:space="preserve">
          <source>Number of rows being displayed.</source>
          <target state="translated">표시되는 행 수.</target>
        </trans-unit>
        <trans-unit id="ac13827c11a14f7b8555ef3807458e1a14788b51" translate="yes" xml:space="preserve">
          <source>Number of rows spanned by cell.</source>
          <target state="translated">셀에 포함 된 행 수입니다.</target>
        </trans-unit>
        <trans-unit id="6e472cb3b1ea4c6079ac2cd30ce9f0c20f5a8499" translate="yes" xml:space="preserve">
          <source>Number of rows spanned by cell. See the rowspan attribute definition in HTML 4.0.</source>
          <target state="translated">셀에 포함 된 행 수입니다. HTML 4.0의 rowspan 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e0b092c644b61a9b683d7a07483dcd49b00ad30a" translate="yes" xml:space="preserve">
          <source>Number of rows to make visible at one time.</source>
          <target state="translated">한 번에 표시 할 행 수입니다.</target>
        </trans-unit>
        <trans-unit id="9c30060bbc1d3320ae0a4a3472368f6d419acad2" translate="yes" xml:space="preserve">
          <source>Number of rows to make visible at one time. This value is used for the &lt;code&gt;Scrollable&lt;/code&gt; interface. It determines the preferred size of the display area.</source>
          <target state="translated">한 번에 표시 할 행 수입니다. 이 값은 &lt;code&gt;Scrollable&lt;/code&gt; 인터페이스에 사용 됩니다. 디스플레이 영역의 선호하는 크기를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="35a4e433e44398106545d845d5c6678906d0855a" translate="yes" xml:space="preserve">
          <source>Number of significant bits per color and alpha component.</source>
          <target state="translated">색상 및 알파 구성 요소 당 중요한 비트 수입니다.</target>
        </trans-unit>
        <trans-unit id="ba07b6bcbdc1c8b07b6ef720a4f7c6ce4e5fee89" translate="yes" xml:space="preserve">
          <source>Number of text rows.</source>
          <target state="translated">텍스트 행 수.</target>
        </trans-unit>
        <trans-unit id="b4ae34f706ac75d9df3dd51adee2557764bfb32c" translate="yes" xml:space="preserve">
          <source>Number of text rows. See the rows attribute definition in HTML 4.0.</source>
          <target state="translated">텍스트 행 수. HTML 4.0의 행 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bec1e2b185b1066f5b4e424263f19a8a3e625f1c" translate="yes" xml:space="preserve">
          <source>Number of visible rows.</source>
          <target state="translated">보이는 행 수.</target>
        </trans-unit>
        <trans-unit id="b043719dc88d523a20f41ec35dde740fc0661f2f" translate="yes" xml:space="preserve">
          <source>Number of visible rows. See the size attribute definition in HTML 4.0.</source>
          <target state="translated">보이는 행 수. HTML 4.0의 크기 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bc47a126627863affc17b8d6350e3b5b5162a2ea" translate="yes" xml:space="preserve">
          <source>Number syntax</source>
          <target state="translated">숫자 구문</target>
        </trans-unit>
        <trans-unit id="c82aa82db3874e49ff2cd9642e4a61c61bed52a5" translate="yes" xml:space="preserve">
          <source>Number.byteValue()</source>
          <target state="translated">Number.byteValue()</target>
        </trans-unit>
        <trans-unit id="c09520aaefc183c89ffae575dbeba57416d6215a" translate="yes" xml:space="preserve">
          <source>Number.doubleValue()</source>
          <target state="translated">Number.doubleValue()</target>
        </trans-unit>
        <trans-unit id="c9efe1a864111286755cec224996a3e7ecbaa112" translate="yes" xml:space="preserve">
          <source>Number.floatValue()</source>
          <target state="translated">Number.floatValue()</target>
        </trans-unit>
        <trans-unit id="521eeb9a7ed19bc1dff12fa9e1bc80460d3c7be1" translate="yes" xml:space="preserve">
          <source>Number.intValue()</source>
          <target state="translated">Number.intValue()</target>
        </trans-unit>
        <trans-unit id="4dfda7929be3caced9a5711273ad59e61a015193" translate="yes" xml:space="preserve">
          <source>Number.longValue()</source>
          <target state="translated">Number.longValue()</target>
        </trans-unit>
        <trans-unit id="badbf29013da0292f20ffc61119228b79a969cd9" translate="yes" xml:space="preserve">
          <source>Number.shortValue()</source>
          <target state="translated">Number.shortValue()</target>
        </trans-unit>
        <trans-unit id="19ed87e59ff033b2a327312269102729b91e5653" translate="yes" xml:space="preserve">
          <source>NumberEditor</source>
          <target state="translated">NumberEditor</target>
        </trans-unit>
        <trans-unit id="ecdf9a9cff400558a75967f58230dd71e6503677" translate="yes" xml:space="preserve">
          <source>NumberFormat</source>
          <target state="translated">NumberFormat</target>
        </trans-unit>
        <trans-unit id="cd8ac908e8a63d933d08037e5eadb5c08561fab4" translate="yes" xml:space="preserve">
          <source>NumberFormat and DecimalFormat are designed such that some controls work for formatting and others work for parsing. The following is the detailed description for each these control methods,</source>
          <target state="translated">NumberFormat 및 DecimalFormat은 일부 컨트롤은 서식을 지정하고 다른 컨트롤은 구문 분석을 수행하도록 설계되었습니다. 다음은 이러한 각 제어 방법에 대한 자세한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="99f4fb7e14662594c5f93059865fe7e92aa85719" translate="yes" xml:space="preserve">
          <source>NumberFormat.Field</source>
          <target state="translated">NumberFormat.Field</target>
        </trans-unit>
        <trans-unit id="53a0e6a29cf26e3e0b2694041fb42b68782f8dce" translate="yes" xml:space="preserve">
          <source>NumberFormat.Field.readResolve()</source>
          <target state="translated">NumberFormat.Field.readResolve()</target>
        </trans-unit>
        <trans-unit id="525bdce55b3444fbe31b7276c51c44054664ec41" translate="yes" xml:space="preserve">
          <source>NumberFormat.Style</source>
          <target state="translated">NumberFormat.Style</target>
        </trans-unit>
        <trans-unit id="ff13b234ab17c893aa0ddf4fab45759b52624268" translate="yes" xml:space="preserve">
          <source>NumberFormat.clone()</source>
          <target state="translated">NumberFormat.clone()</target>
        </trans-unit>
        <trans-unit id="4561067a002862005bfe44a8cc4295485bc5aa89" translate="yes" xml:space="preserve">
          <source>NumberFormat.equals()</source>
          <target state="translated">NumberFormat.equals()</target>
        </trans-unit>
        <trans-unit id="de0456f9a47e35d051a29b9a7e1c0db11a92fef2" translate="yes" xml:space="preserve">
          <source>NumberFormat.format()</source>
          <target state="translated">NumberFormat.format()</target>
        </trans-unit>
        <trans-unit id="e41178ae8751c154d26897ab6c8ddf19b2a77d7d" translate="yes" xml:space="preserve">
          <source>NumberFormat.getAvailableLocales()</source>
          <target state="translated">NumberFormat.getAvailableLocales()</target>
        </trans-unit>
        <trans-unit id="47cd7eb097430ba25f7486923095efe262ab2d4b" translate="yes" xml:space="preserve">
          <source>NumberFormat.getCurrency()</source>
          <target state="translated">NumberFormat.getCurrency()</target>
        </trans-unit>
        <trans-unit id="b514c9833a0663c2d2bf70cbf3821db69c93fb64" translate="yes" xml:space="preserve">
          <source>NumberFormat.getCurrencyInstance()</source>
          <target state="translated">NumberFormat.getCurrencyInstance()</target>
        </trans-unit>
        <trans-unit id="e6728603be16a941d0aaf10c4225e1e147e52246" translate="yes" xml:space="preserve">
          <source>NumberFormat.getInstance()</source>
          <target state="translated">NumberFormat.getInstance()</target>
        </trans-unit>
        <trans-unit id="1d44850964175c15e82e71c38b020e93ed54ef69" translate="yes" xml:space="preserve">
          <source>NumberFormat.getIntegerInstance()</source>
          <target state="translated">NumberFormat.getIntegerInstance()</target>
        </trans-unit>
        <trans-unit id="06f647f6e386c0c4b3b69b70c6d9c223c48a864a" translate="yes" xml:space="preserve">
          <source>NumberFormat.getMaximumFractionDigits()</source>
          <target state="translated">NumberFormat.getMaximumFractionDigits()</target>
        </trans-unit>
        <trans-unit id="abbb3afad17b4c098ab1f65289d215181835bce8" translate="yes" xml:space="preserve">
          <source>NumberFormat.getMaximumIntegerDigits()</source>
          <target state="translated">NumberFormat.getMaximumIntegerDigits()</target>
        </trans-unit>
        <trans-unit id="4bcf26203bfb59dbed2a259b5e108495f06065af" translate="yes" xml:space="preserve">
          <source>NumberFormat.getMinimumFractionDigits()</source>
          <target state="translated">NumberFormat.getMinimumFractionDigits()</target>
        </trans-unit>
        <trans-unit id="bc5daa16a96997a43b74980cc1bd25ca1c657663" translate="yes" xml:space="preserve">
          <source>NumberFormat.getMinimumIntegerDigits()</source>
          <target state="translated">NumberFormat.getMinimumIntegerDigits()</target>
        </trans-unit>
        <trans-unit id="79a8c9d803ec5b21c2c7493811da272c680d8ba9" translate="yes" xml:space="preserve">
          <source>NumberFormat.getNumberInstance()</source>
          <target state="translated">NumberFormat.getNumberInstance()</target>
        </trans-unit>
        <trans-unit id="3922252206f03cfc784f810cba80bb3329668121" translate="yes" xml:space="preserve">
          <source>NumberFormat.getPercentInstance()</source>
          <target state="translated">NumberFormat.getPercentInstance()</target>
        </trans-unit>
        <trans-unit id="980afce9c38a5f5d8f7de47dafe1f2601bb3148b" translate="yes" xml:space="preserve">
          <source>NumberFormat.getRoundingMode()</source>
          <target state="translated">NumberFormat.getRoundingMode()</target>
        </trans-unit>
        <trans-unit id="b230ea36b5810c181335508fc9c608524b53b328" translate="yes" xml:space="preserve">
          <source>NumberFormat.hashCode()</source>
          <target state="translated">NumberFormat.hashCode()</target>
        </trans-unit>
        <trans-unit id="40516dabfe7e60746db664d56b3ac7bae01f2489" translate="yes" xml:space="preserve">
          <source>NumberFormat.isGroupingUsed()</source>
          <target state="translated">NumberFormat.isGroupingUsed()</target>
        </trans-unit>
        <trans-unit id="42d843d3dcd3685c08e1b9d97aa05f81cb60fd14" translate="yes" xml:space="preserve">
          <source>NumberFormat.isParseIntegerOnly()</source>
          <target state="translated">NumberFormat.isParseIntegerOnly()</target>
        </trans-unit>
        <trans-unit id="8fed3d57ecae827ed89f927c9e8998ee0551966b" translate="yes" xml:space="preserve">
          <source>NumberFormat.parse()</source>
          <target state="translated">NumberFormat.parse()</target>
        </trans-unit>
        <trans-unit id="eeea0be87e60850db29e6795798b47909630320f" translate="yes" xml:space="preserve">
          <source>NumberFormat.parseObject()</source>
          <target state="translated">NumberFormat.parseObject()</target>
        </trans-unit>
        <trans-unit id="10d5cec03be65924dce16e9daee148f075e2d63d" translate="yes" xml:space="preserve">
          <source>NumberFormat.setCurrency()</source>
          <target state="translated">NumberFormat.setCurrency()</target>
        </trans-unit>
        <trans-unit id="1b3faf3c56d3122336740bf0efe21716a052318d" translate="yes" xml:space="preserve">
          <source>NumberFormat.setGroupingUsed()</source>
          <target state="translated">NumberFormat.setGroupingUsed()</target>
        </trans-unit>
        <trans-unit id="87bbf4cef9b2bf3beabbb1c22b914e4854143a66" translate="yes" xml:space="preserve">
          <source>NumberFormat.setMaximumFractionDigits()</source>
          <target state="translated">NumberFormat.setMaximumFractionDigits()</target>
        </trans-unit>
        <trans-unit id="be24d5687574cc0843f682eb3ec189f954afe8a4" translate="yes" xml:space="preserve">
          <source>NumberFormat.setMaximumIntegerDigits()</source>
          <target state="translated">NumberFormat.setMaximumIntegerDigits()</target>
        </trans-unit>
        <trans-unit id="4498142b1d37749841f3fda8cb8173bb36c23840" translate="yes" xml:space="preserve">
          <source>NumberFormat.setMinimumFractionDigits()</source>
          <target state="translated">NumberFormat.setMinimumFractionDigits()</target>
        </trans-unit>
        <trans-unit id="9b3591b6ab743c4312fce536bdb0b3094a523783" translate="yes" xml:space="preserve">
          <source>NumberFormat.setMinimumIntegerDigits()</source>
          <target state="translated">NumberFormat.setMinimumIntegerDigits()</target>
        </trans-unit>
        <trans-unit id="a01981f5475e618fcfb7e99d752c0d17829e499e" translate="yes" xml:space="preserve">
          <source>NumberFormat.setParseIntegerOnly()</source>
          <target state="translated">NumberFormat.setParseIntegerOnly()</target>
        </trans-unit>
        <trans-unit id="fcab7a30e02a6e390001afa9b8fa539cfacd0032" translate="yes" xml:space="preserve">
          <source>NumberFormat.setRoundingMode()</source>
          <target state="translated">NumberFormat.setRoundingMode()</target>
        </trans-unit>
        <trans-unit id="2e1ee95668fd5f69d1925d4acd4d52b859469b82" translate="yes" xml:space="preserve">
          <source>NumberFormatException</source>
          <target state="translated">NumberFormatException</target>
        </trans-unit>
        <trans-unit id="bb938883171c2ef32694cb1eec8a7f08ee458521" translate="yes" xml:space="preserve">
          <source>NumberFormatProvider</source>
          <target state="translated">NumberFormatProvider</target>
        </trans-unit>
        <trans-unit id="d834a1a2018b2c027c977f928310722f86871eae" translate="yes" xml:space="preserve">
          <source>NumberFormatProvider.getCurrencyInstance()</source>
          <target state="translated">NumberFormatProvider.getCurrencyInstance()</target>
        </trans-unit>
        <trans-unit id="4ce3367c512630716dbbe5f574c2dfd9a6facd97" translate="yes" xml:space="preserve">
          <source>NumberFormatProvider.getIntegerInstance()</source>
          <target state="translated">NumberFormatProvider.getIntegerInstance()</target>
        </trans-unit>
        <trans-unit id="ab9e7be6a5738177a9a57f24c4059aa43203d119" translate="yes" xml:space="preserve">
          <source>NumberFormatProvider.getNumberInstance()</source>
          <target state="translated">NumberFormatProvider.getNumberInstance()</target>
        </trans-unit>
        <trans-unit id="3c97502da9e24443596f84f38b9866e7e067e888" translate="yes" xml:space="preserve">
          <source>NumberFormatProvider.getPercentInstance()</source>
          <target state="translated">NumberFormatProvider.getPercentInstance()</target>
        </trans-unit>
        <trans-unit id="683179775946c0d46fb4b3a1fc6176b527cca253" translate="yes" xml:space="preserve">
          <source>NumberFormatter</source>
          <target state="translated">NumberFormatter</target>
        </trans-unit>
        <trans-unit id="320b093813dcc13e7b90875df088f8cf53ef365a" translate="yes" xml:space="preserve">
          <source>NumberOfDocuments</source>
          <target state="translated">NumberOfDocuments</target>
        </trans-unit>
        <trans-unit id="0218c356f54d88550b935b4875651d24d4009e59" translate="yes" xml:space="preserve">
          <source>NumberOfDocuments.equals()</source>
          <target state="translated">NumberOfDocuments.equals()</target>
        </trans-unit>
        <trans-unit id="165aebe0d199a0185dc05bda07e7a532bceb18d8" translate="yes" xml:space="preserve">
          <source>NumberOfDocuments.getCategory()</source>
          <target state="translated">NumberOfDocuments.getCategory()</target>
        </trans-unit>
        <trans-unit id="94b5f65577e742dad2bbf78d9d9f9cd3a5eedd54" translate="yes" xml:space="preserve">
          <source>NumberOfDocuments.getName()</source>
          <target state="translated">NumberOfDocuments.getName()</target>
        </trans-unit>
        <trans-unit id="d479699f3069c1ccd390dc6774c1f57ab9ebfbf1" translate="yes" xml:space="preserve">
          <source>NumberOfInterveningJobs</source>
          <target state="translated">NumberOfInterveningJobs</target>
        </trans-unit>
        <trans-unit id="05c061c18fa7cbd656935d81f79ea38bcbfd6222" translate="yes" xml:space="preserve">
          <source>NumberOfInterveningJobs.equals()</source>
          <target state="translated">NumberOfInterveningJobs.equals()</target>
        </trans-unit>
        <trans-unit id="d47a58b90850d5188ddbd46f4cc41f62ca46dae3" translate="yes" xml:space="preserve">
          <source>NumberOfInterveningJobs.getCategory()</source>
          <target state="translated">NumberOfInterveningJobs.getCategory()</target>
        </trans-unit>
        <trans-unit id="9ca608c8d804c69d86f051553bf8885c6082cdd4" translate="yes" xml:space="preserve">
          <source>NumberOfInterveningJobs.getName()</source>
          <target state="translated">NumberOfInterveningJobs.getName()</target>
        </trans-unit>
        <trans-unit id="9f6acde7673e7741070d6b87f0e631441b594ea4" translate="yes" xml:space="preserve">
          <source>NumberUp</source>
          <target state="translated">NumberUp</target>
        </trans-unit>
        <trans-unit id="47ff652e542c3a2df7ea5d6f2476d4f4f078a71e" translate="yes" xml:space="preserve">
          <source>NumberUp.equals()</source>
          <target state="translated">NumberUp.equals()</target>
        </trans-unit>
        <trans-unit id="d2b5d2f9c74d9be88fd6856092c6862f04f6e6b6" translate="yes" xml:space="preserve">
          <source>NumberUp.getCategory()</source>
          <target state="translated">NumberUp.getCategory()</target>
        </trans-unit>
        <trans-unit id="15c4e249b9ea2dc4050bfa36eca74e3c85de2fe1" translate="yes" xml:space="preserve">
          <source>NumberUp.getName()</source>
          <target state="translated">NumberUp.getName()</target>
        </trans-unit>
        <trans-unit id="088fee5719622258ed9771a81130c30a6acfd4ce" translate="yes" xml:space="preserve">
          <source>NumberUpSupported</source>
          <target state="translated">NumberUpSupported</target>
        </trans-unit>
        <trans-unit id="d58de3f4f946c446406fd8216e7b258684549a2c" translate="yes" xml:space="preserve">
          <source>NumberUpSupported.equals()</source>
          <target state="translated">NumberUpSupported.equals()</target>
        </trans-unit>
        <trans-unit id="5c5a215bb27273c5a64660a979b3772d2f624eb2" translate="yes" xml:space="preserve">
          <source>NumberUpSupported.getCategory()</source>
          <target state="translated">NumberUpSupported.getCategory()</target>
        </trans-unit>
        <trans-unit id="8b59b6b3f2f5a783475c035cade54ee62fdc06dd" translate="yes" xml:space="preserve">
          <source>NumberUpSupported.getName()</source>
          <target state="translated">NumberUpSupported.getName()</target>
        </trans-unit>
        <trans-unit id="33b2750d3747e77813c8b0d22606ad9a37212348" translate="yes" xml:space="preserve">
          <source>Numberic</source>
          <target state="translated">Numberic</target>
        </trans-unit>
        <trans-unit id="7cd1dd99dac7375b598a6597313065f220f51dfc" translate="yes" xml:space="preserve">
          <source>Numbering style.</source>
          <target state="translated">번호 매기기 스타일.</target>
        </trans-unit>
        <trans-unit id="a41f439500f453b6e7a1f3cab6165b23e23cc43f" translate="yes" xml:space="preserve">
          <source>Numbering style. See the type attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">번호 매기기 스타일. HTML 4.0의 유형 속성 정의를 참조하십시오. 이 속성은 HTML 4.0에서 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="69c0f7c77d3628b99df431cdaede44d0967af8c0" translate="yes" xml:space="preserve">
          <source>Numbers are parsed.</source>
          <target state="translated">숫자가 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="defe0aaba1d7e9c66245407b34b5061c8ebb399e" translate="yes" xml:space="preserve">
          <source>Numbers in scientific notation are expressed as the product of a mantissa and a power of ten, for example, 1234 can be expressed as 1.234 x 10^3. The mantissa is often in the range 1.0 &amp;le; x &amp;lt; 10.0, but it need not be. &lt;code&gt;DecimalFormat&lt;/code&gt; can be instructed to format and parse scientific notation &lt;em&gt;only via a pattern&lt;/em&gt;; there is currently no factory method that creates a scientific notation format. In a pattern, the exponent character immediately followed by one or more digit characters indicates scientific notation. Example: &lt;code&gt;&quot;0.###E0&quot;&lt;/code&gt; formats the number 1234 as &lt;code&gt;&quot;1.234E3&quot;&lt;/code&gt;.</source>
          <target state="translated">과학적 표기법의 숫자는 가수의 곱과 10의 거듭 제곱으로 표시됩니다. 예를 들어 1234는 1.234 x 10 ^ 3으로 표현할 수 있습니다. 가수는 종종 1.0 &amp;le; x &amp;lt;10.0 범위에 있지만 반드시 그럴 필요는 없습니다. &lt;code&gt;DecimalFormat&lt;/code&gt; 은 &lt;em&gt;패턴을 통해서만&lt;/em&gt; 과학적 표기법을 형식화하고 구문 분석하도록 지시 할 수 있습니다 . 과학적 표기법 형식을 만드는 팩토리 방법은 현재 없습니다. 패턴에서 지수 문자 바로 다음에 하나 이상의 숫자 문자는 과학적 표기법을 나타냅니다. 예 : &lt;code&gt;&quot;0.###E0&quot;&lt;/code&gt; 은 숫자 1234를 &lt;code&gt;&quot;1.234E3&quot;&lt;/code&gt; 형식으로 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="c506a20a24e0cb0192c8195622dcfc37c02a26ec" translate="yes" xml:space="preserve">
          <source>Numeral</source>
          <target state="translated">Numeral</target>
        </trans-unit>
        <trans-unit id="30a62380404b3b267a5c4e21b5e111455d09031e" translate="yes" xml:space="preserve">
          <source>Numeric</source>
          <target state="translated">Numeric</target>
        </trans-unit>
        <trans-unit id="e5daa296e535a09c5058680c13804430ab64bbe7" translate="yes" xml:space="preserve">
          <source>Numeric conversions are divided into the following categories:</source>
          <target state="translated">숫자 변환은 다음 범주로 나뉩니다.</target>
        </trans-unit>
        <trans-unit id="02fd1fd3beeef92ba00889a41de6277c68b24898" translate="yes" xml:space="preserve">
          <source>Numeric types will be formatted according to the following algorithm:</source>
          <target state="translated">숫자 유형은 다음 알고리즘에 따라 형식이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="16685299ecffd4828aba5d805fc144129a83fc06" translate="yes" xml:space="preserve">
          <source>NumericShaper</source>
          <target state="translated">NumericShaper</target>
        </trans-unit>
        <trans-unit id="93aa50f6f3e6c6c0a4da19eab416c7abf48461cb" translate="yes" xml:space="preserve">
          <source>NumericShaper constants precedence</source>
          <target state="translated">NumericShaper 상수 우선 순위</target>
        </trans-unit>
        <trans-unit id="b91f6ad9099a4405ea24e44f4b3b22ee5377a2e0" translate="yes" xml:space="preserve">
          <source>NumericShaper.Range</source>
          <target state="translated">NumericShaper.Range</target>
        </trans-unit>
        <trans-unit id="849625e4e54e9ca97310307e3649e3f18ecc6b38" translate="yes" xml:space="preserve">
          <source>Numerous other stream-bearing methods in the JDK, including &lt;a href=&quot;../bitset#stream()&quot;&gt;&lt;code&gt;BitSet.stream()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../regex/pattern#splitAsStream(java.lang.CharSequence)&quot;&gt;&lt;code&gt;Pattern.splitAsStream(java.lang.CharSequence)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../jar/jarfile#stream()&quot;&gt;&lt;code&gt;JarFile.stream()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JDK 포함하는 수많은 다른 스트림 베어링 방법 &lt;a href=&quot;../bitset#stream()&quot;&gt; &lt;code&gt;BitSet.stream()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../regex/pattern#splitAsStream(java.lang.CharSequence)&quot;&gt; &lt;code&gt;Pattern.splitAsStream(java.lang.CharSequence)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../jar/jarfile#stream()&quot;&gt; &lt;code&gt;JarFile.stream()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ee710a634ea2d7386f461c73afe7e214d426cfd6" translate="yes" xml:space="preserve">
          <source>Numerous other stream-bearing methods in the JDK, including &lt;a href=&quot;../bitset#stream--&quot;&gt;&lt;code&gt;BitSet.stream()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../regex/pattern#splitAsStream-java.lang.CharSequence-&quot;&gt;&lt;code&gt;Pattern.splitAsStream(java.lang.CharSequence)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../jar/jarfile#stream--&quot;&gt;&lt;code&gt;JarFile.stream()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JDK 포함하는 수많은 다른 스트림 베어링 방법 &lt;a href=&quot;../bitset#stream--&quot;&gt; &lt;code&gt;BitSet.stream()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../regex/pattern#splitAsStream-java.lang.CharSequence-&quot;&gt; &lt;code&gt;Pattern.splitAsStream(java.lang.CharSequence)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../jar/jarfile#stream--&quot;&gt; &lt;code&gt;JarFile.stream()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="08a914cde05039694ef0194d9ee79ff9a79dde33" translate="yes" xml:space="preserve">
          <source>O</source>
          <target state="translated">O</target>
        </trans-unit>
        <trans-unit id="760aabc2f24f0ebeb7e257fd04d61092f5f127f0" translate="yes" xml:space="preserve">
          <source>OAEPParameterSpec</source>
          <target state="translated">OAEPParameterSpec</target>
        </trans-unit>
        <trans-unit id="4aa54f507e2e3fcff287e96550a4dab0997d6190" translate="yes" xml:space="preserve">
          <source>OAEPParameterSpec.getDigestAlgorithm()</source>
          <target state="translated">OAEPParameterSpec.getDigestAlgorithm()</target>
        </trans-unit>
        <trans-unit id="ab9951a35fdda285853fa68f9bb26be4f5c8c976" translate="yes" xml:space="preserve">
          <source>OAEPParameterSpec.getMGFAlgorithm()</source>
          <target state="translated">OAEPParameterSpec.getMGFAlgorithm()</target>
        </trans-unit>
        <trans-unit id="f42377e9c2433a792c21932bf06523a47cc59272" translate="yes" xml:space="preserve">
          <source>OAEPParameterSpec.getMGFParameters()</source>
          <target state="translated">OAEPParameterSpec.getMGFParameters()</target>
        </trans-unit>
        <trans-unit id="7b6eeb240b81580de261f4ad9402c0c9c604eaad" translate="yes" xml:space="preserve">
          <source>OAEPParameterSpec.getPSource()</source>
          <target state="translated">OAEPParameterSpec.getPSource()</target>
        </trans-unit>
        <trans-unit id="828f2a22520c1086f191a7adfcf910b96f4fe93b" translate="yes" xml:space="preserve">
          <source>OBJECT</source>
          <target state="translated">OBJECT</target>
        </trans-unit>
        <trans-unit id="ac11ef2546b08794998f8bb33e47de3ed6853498" translate="yes" xml:space="preserve">
          <source>OBJECTNAME</source>
          <target state="translated">OBJECTNAME</target>
        </trans-unit>
        <trans-unit id="3234fdefcb3b387f12a0a951430cd2f1c87b661b" translate="yes" xml:space="preserve">
          <source>OBJECT_ADDED</source>
          <target state="translated">OBJECT_ADDED</target>
        </trans-unit>
        <trans-unit id="4390107f98d6f0ab42270c45ce5df8703cd4512b" translate="yes" xml:space="preserve">
          <source>OBJECT_CHANGED</source>
          <target state="translated">OBJECT_CHANGED</target>
        </trans-unit>
        <trans-unit id="fcbe055891e154355e7e0e668ae2fec802f14cb2" translate="yes" xml:space="preserve">
          <source>OBJECT_FACTORIES</source>
          <target state="translated">OBJECT_FACTORIES</target>
        </trans-unit>
        <trans-unit id="9a10482813701de7e3044af98b30592407cc31cc" translate="yes" xml:space="preserve">
          <source>OBJECT_REMOVED</source>
          <target state="translated">OBJECT_REMOVED</target>
        </trans-unit>
        <trans-unit id="b6594d7603b401579d0968b33c506dc290677157" translate="yes" xml:space="preserve">
          <source>OBJECT_RENAMED</source>
          <target state="translated">OBJECT_RENAMED</target>
        </trans-unit>
        <trans-unit id="6cb23876eba7ca62fa58c242b48d8fadeb93715a" translate="yes" xml:space="preserve">
          <source>OBJECT_SCOPE</source>
          <target state="translated">OBJECT_SCOPE</target>
        </trans-unit>
        <trans-unit id="8b9134db2cb46632cfea4b2af180b6355a1fd468" translate="yes" xml:space="preserve">
          <source>OBSERVED_ATTRIBUTE_ERROR</source>
          <target state="translated">OBSERVED_ATTRIBUTE_ERROR</target>
        </trans-unit>
        <trans-unit id="6a5f6865b599436a5008ed63dc873474155c633e" translate="yes" xml:space="preserve">
          <source>OBSERVED_ATTRIBUTE_ERROR_NOTIFIED</source>
          <target state="translated">OBSERVED_ATTRIBUTE_ERROR_NOTIFIED</target>
        </trans-unit>
        <trans-unit id="eb2b4b17dc74b370149c7920c70e6284958c3bac" translate="yes" xml:space="preserve">
          <source>OBSERVED_ATTRIBUTE_TYPE_ERROR</source>
          <target state="translated">OBSERVED_ATTRIBUTE_TYPE_ERROR</target>
        </trans-unit>
        <trans-unit id="a68d5d7533bc7f557ce0e363d5aa5713458eb441" translate="yes" xml:space="preserve">
          <source>OBSERVED_ATTRIBUTE_TYPE_ERROR_NOTIFIED</source>
          <target state="translated">OBSERVED_ATTRIBUTE_TYPE_ERROR_NOTIFIED</target>
        </trans-unit>
        <trans-unit id="c072e04a1be3bde71dec4264fc3c339183a2b52a" translate="yes" xml:space="preserve">
          <source>OBSERVED_OBJECT_ERROR</source>
          <target state="translated">OBSERVED_OBJECT_ERROR</target>
        </trans-unit>
        <trans-unit id="2c6fa2eb238b04696336ec59cf347a3e7c10febe" translate="yes" xml:space="preserve">
          <source>OBSERVED_OBJECT_ERROR_NOTIFIED</source>
          <target state="translated">OBSERVED_OBJECT_ERROR_NOTIFIED</target>
        </trans-unit>
        <trans-unit id="48f096e5c58ce7c8441a8b669b8f2b5a2a25c46e" translate="yes" xml:space="preserve">
          <source>OCTOBER</source>
          <target state="translated">OCTOBER</target>
        </trans-unit>
        <trans-unit id="cf1172a29ee042efe36e6ddb3d0b5e6413bdebe7" translate="yes" xml:space="preserve">
          <source>OFB</source>
          <target state="translated">OFB</target>
        </trans-unit>
        <trans-unit id="ad50489054ddaae044be8b3054bf4d67480648d6" translate="yes" xml:space="preserve">
          <source>OFF</source>
          <target state="translated">OFF</target>
        </trans-unit>
        <trans-unit id="b865a521ba50fd1499171ba1ea9baa629feccf14" translate="yes" xml:space="preserve">
          <source>OFF is a special level that can be used to turn off logging.</source>
          <target state="translated">OFF는 로깅을 해제하는 데 사용할 수있는 특수 수준입니다.</target>
        </trans-unit>
        <trans-unit id="33aee2bb2f5df3a18cd8200280776bb7a5cd64c3" translate="yes" xml:space="preserve">
          <source>OFF is a special level that can be used to turn off logging. This level is initialized to &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;.</source>
          <target state="translated">OFF는 로깅을 끄는 데 사용할 수있는 특수 수준입니다. 이 레벨은 &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; 로 초기화 됩니다 .</target>
        </trans-unit>
        <trans-unit id="eaa2a668b7247283b41293c3e829e9d1f08599d3" translate="yes" xml:space="preserve">
          <source>OFFSET_SECONDS</source>
          <target state="translated">OFFSET_SECONDS</target>
        </trans-unit>
        <trans-unit id="dbd43fe7dd4837d4060947275f86ffae92a3fc43" translate="yes" xml:space="preserve">
          <source>OGHAM</source>
          <target state="translated">OGHAM</target>
        </trans-unit>
        <trans-unit id="4d314276ba61e4f3bc6a1b4a234e301a4e785ad9" translate="yes" xml:space="preserve">
          <source>OID</source>
          <target state="translated">OID</target>
        </trans-unit>
        <trans-unit id="906e9d879a014504870e0435eb6e461e475aaf15" translate="yes" xml:space="preserve">
          <source>OID &lt;em&gt;(Object Identifier)&lt;/em&gt;</source>
          <target state="translated">OID &lt;em&gt;(개체 식별자)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9ce3bd4224c8c1780db56b4125ecf3f24bf748b7" translate="yes" xml:space="preserve">
          <source>OK</source>
          <target state="translated">OK</target>
        </trans-unit>
        <trans-unit id="94a02dfa0a71e86d8d60d233eb875e3d18063db5" translate="yes" xml:space="preserve">
          <source>OK option.</source>
          <target state="translated">확인 옵션.</target>
        </trans-unit>
        <trans-unit id="8e6a872d9b16755aa424c41e5ccae62d012d210b" translate="yes" xml:space="preserve">
          <source>OK/CANCEL confirmation confirmation option.</source>
          <target state="translated">확인 / 취소 확인 확인 옵션.</target>
        </trans-unit>
        <trans-unit id="156ec7c3dad5daf5ae30c60331e29b6ba726e028" translate="yes" xml:space="preserve">
          <source>OK/CANCEL confirmation option.</source>
          <target state="translated">OK / CANCEL 확인 옵션.</target>
        </trans-unit>
        <trans-unit id="4b1b707592bd0aae92f962f2e8f7b313abab9e70" translate="yes" xml:space="preserve">
          <source>OK_CANCEL_OPTION</source>
          <target state="translated">OK_CANCEL_OPTION</target>
        </trans-unit>
        <trans-unit id="851dc9f7f6bb71e6fd1d219029d15a4245fe2d86" translate="yes" xml:space="preserve">
          <source>OK_OPTION</source>
          <target state="translated">OK_OPTION</target>
        </trans-unit>
        <trans-unit id="b57567d90c50926407564bebeffe67a9226aff39" translate="yes" xml:space="preserve">
          <source>OL</source>
          <target state="translated">OL</target>
        </trans-unit>
        <trans-unit id="411ca4942c2650895b11af1a4541e4328cb7ddb7" translate="yes" xml:space="preserve">
          <source>OLD_HUNGARIAN</source>
          <target state="translated">OLD_HUNGARIAN</target>
        </trans-unit>
        <trans-unit id="0f6033b8223b4ce9ffa0265c6c446233df3a8a5f" translate="yes" xml:space="preserve">
          <source>OLD_ITALIC</source>
          <target state="translated">OLD_ITALIC</target>
        </trans-unit>
        <trans-unit id="0aee696e954d7cffa87c8617f93820d5fdddd01a" translate="yes" xml:space="preserve">
          <source>OLD_NORTH_ARABIAN</source>
          <target state="translated">OLD_NORTH_ARABIAN</target>
        </trans-unit>
        <trans-unit id="21afc94ef5ae0a424b945c86cecfd867f93f4820" translate="yes" xml:space="preserve">
          <source>OLD_PERMIC</source>
          <target state="translated">OLD_PERMIC</target>
        </trans-unit>
        <trans-unit id="9812ffcb62f328007e92e2878ae357b51bc2a5d4" translate="yes" xml:space="preserve">
          <source>OLD_PERSIAN</source>
          <target state="translated">OLD_PERSIAN</target>
        </trans-unit>
        <trans-unit id="255e9ebcc4effbfe4c776bd404fdaeb739af6fb0" translate="yes" xml:space="preserve">
          <source>OLD_SOGDIAN</source>
          <target state="translated">OLD_SOGDIAN</target>
        </trans-unit>
        <trans-unit id="36501ea53eac234090b866977abd8ff0174664e5" translate="yes" xml:space="preserve">
          <source>OLD_SOUTH_ARABIAN</source>
          <target state="translated">OLD_SOUTH_ARABIAN</target>
        </trans-unit>
        <trans-unit id="95d83b928f73397bcb22506d193d1084a6a44124" translate="yes" xml:space="preserve">
          <source>OLD_TOKEN</source>
          <target state="translated">OLD_TOKEN</target>
        </trans-unit>
        <trans-unit id="a70dc836a4db4408741595bfb2b807fa630763f5" translate="yes" xml:space="preserve">
          <source>OLD_TURKIC</source>
          <target state="translated">OLD_TURKIC</target>
        </trans-unit>
        <trans-unit id="e5cbe5144e931f77a6b9fc9de97b7972c2637739" translate="yes" xml:space="preserve">
          <source>OL_CHIKI</source>
          <target state="translated">OL_CHIKI</target>
        </trans-unit>
        <trans-unit id="8dff1bae3ad5e69f09613b89356c7d9ad1445624" translate="yes" xml:space="preserve">
          <source>OMIT_XML_DECLARATION</source>
          <target state="translated">OMIT_XML_DECLARATION</target>
        </trans-unit>
        <trans-unit id="387d7a59dbaaef002e0f9ac69ecd4443b9c5cef2" translate="yes" xml:space="preserve">
          <source>ON</source>
          <target state="translated">ON</target>
        </trans-unit>
        <trans-unit id="10c471aa2abdbffe3e2633c1c454d72d20a236ee" translate="yes" xml:space="preserve">
          <source>ONE</source>
          <target state="translated">ONE</target>
        </trans-unit>
        <trans-unit id="b7a75f3f7ac63a1144fd396bde1482a156cb5961" translate="yes" xml:space="preserve">
          <source>ONELEVEL_SCOPE</source>
          <target state="translated">ONELEVEL_SCOPE</target>
        </trans-unit>
        <trans-unit id="93cd5ebe51932838430791a32eb0c595a1939788" translate="yes" xml:space="preserve">
          <source>ONE_DAY</source>
          <target state="translated">ONE_DAY</target>
        </trans-unit>
        <trans-unit id="6e775bf2825972614d2a216abab35e4642487f99" translate="yes" xml:space="preserve">
          <source>ONE_HOUR</source>
          <target state="translated">ONE_HOUR</target>
        </trans-unit>
        <trans-unit id="d5e12b99f0f6ca28a9378457a1846ba2423d28fd" translate="yes" xml:space="preserve">
          <source>ONE_MINUTE</source>
          <target state="translated">ONE_MINUTE</target>
        </trans-unit>
        <trans-unit id="5aec4d7c0518ca391025ac2af5664dc82f4f168d" translate="yes" xml:space="preserve">
          <source>ONE_SECOND</source>
          <target state="translated">ONE_SECOND</target>
        </trans-unit>
        <trans-unit id="c0a611b9e662ea65ffd67b4a4c2a639f335eea7a" translate="yes" xml:space="preserve">
          <source>ONE_SIDED</source>
          <target state="translated">ONE_SIDED</target>
        </trans-unit>
        <trans-unit id="390beab482f861b582657815e31ee701c1436197" translate="yes" xml:space="preserve">
          <source>ONE_TOUCH_EXPANDABLE_PROPERTY</source>
          <target state="translated">ONE_TOUCH_EXPANDABLE_PROPERTY</target>
        </trans-unit>
        <trans-unit id="c6710a12cc1d8c3a003f8bfc1a55f1eb6037e851" translate="yes" xml:space="preserve">
          <source>ONE_TOUCH_OFFSET</source>
          <target state="translated">ONE_TOUCH_OFFSET</target>
        </trans-unit>
        <trans-unit id="c752753c0624baed3be900ed9199903ac6cbc059" translate="yes" xml:space="preserve">
          <source>ONE_TOUCH_SIZE</source>
          <target state="translated">ONE_TOUCH_SIZE</target>
        </trans-unit>
        <trans-unit id="9371130e98366b890da9cb23d110d5ddb0308c3c" translate="yes" xml:space="preserve">
          <source>ONE_WEEK</source>
          <target state="translated">ONE_WEEK</target>
        </trans-unit>
        <trans-unit id="fb53f9a1d35c46abf65a6e69197302a146575771" translate="yes" xml:space="preserve">
          <source>ONLY_END_ENTITY</source>
          <target state="translated">ONLY_END_ENTITY</target>
        </trans-unit>
        <trans-unit id="3950103d125dc977560756dd0b55768c020b7ff0" translate="yes" xml:space="preserve">
          <source>ON_OR_INSERT</source>
          <target state="translated">ON_OR_INSERT</target>
        </trans-unit>
        <trans-unit id="f8c9d670dfb29ca580f6b561e14fd40542590e79" translate="yes" xml:space="preserve">
          <source>ON_OR_INSERT_COLS</source>
          <target state="translated">ON_OR_INSERT_COLS</target>
        </trans-unit>
        <trans-unit id="20a2b5fd1ac92a0431573a7f4ff5b6fcd3728d07" translate="yes" xml:space="preserve">
          <source>ON_OR_INSERT_ROWS</source>
          <target state="translated">ON_OR_INSERT_ROWS</target>
        </trans-unit>
        <trans-unit id="3e1d0194f086be2a46bec333cb224d85ebd86b97" translate="yes" xml:space="preserve">
          <source>OPAQUE</source>
          <target state="translated">OPAQUE</target>
        </trans-unit>
        <trans-unit id="e41d9a7b89cb5001aee3c44b53b4408a892fb10d" translate="yes" xml:space="preserve">
          <source>OPC_LIFE_OVER</source>
          <target state="translated">OPC_LIFE_OVER</target>
        </trans-unit>
        <trans-unit id="5ad3dedfffb74e11898bff63457bee2ac3a1dcc8" translate="yes" xml:space="preserve">
          <source>OPC_NEAR_EOL</source>
          <target state="translated">OPC_NEAR_EOL</target>
        </trans-unit>
        <trans-unit id="33906a7dfdec01bb765c738946d88161600ca35d" translate="yes" xml:space="preserve">
          <source>OPEN</source>
          <target state="translated">OPEN</target>
        </trans-unit>
        <trans-unit id="696cb53327b81eae5bb70c4ed15cdd66b40ba1d0" translate="yes" xml:space="preserve">
          <source>OPENED</source>
          <target state="translated">OPENED</target>
        </trans-unit>
        <trans-unit id="cf89c8ed234fa5983f7a2ca0bf3342eb7a85ca63" translate="yes" xml:space="preserve">
          <source>OPENS</source>
          <target state="translated">OPENS</target>
        </trans-unit>
        <trans-unit id="65fcc29824b314c5547fcdb0c09504b7ca45e19e" translate="yes" xml:space="preserve">
          <source>OPEN_DELETE</source>
          <target state="translated">OPEN_DELETE</target>
        </trans-unit>
        <trans-unit id="2becbaa989e42d54a7fee3aee50b5f4930616ec8" translate="yes" xml:space="preserve">
          <source>OPEN_DIALOG</source>
          <target state="translated">OPEN_DIALOG</target>
        </trans-unit>
        <trans-unit id="2da1bb03d6e27ff611b62e0b4f8174042c5c6d6e" translate="yes" xml:space="preserve">
          <source>OPEN_FAILURE</source>
          <target state="translated">OPEN_FAILURE</target>
        </trans-unit>
        <trans-unit id="2b2a69a8b03bf68ad50f3e485a781f5fe4e96fc6" translate="yes" xml:space="preserve">
          <source>OPEN_FAILURE is used when an open of an output stream fails.</source>
          <target state="translated">OPEN_FAILURE는 출력 스트림 열기가 실패 할 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a3c1f5a882658dead13325e10163ec6147f5d595" translate="yes" xml:space="preserve">
          <source>OPEN_READ</source>
          <target state="translated">OPEN_READ</target>
        </trans-unit>
        <trans-unit id="44c944988362bb356d8b841ae392ab7c481ec5e8" translate="yes" xml:space="preserve">
          <source>OPEN_TYPE_FIELD</source>
          <target state="translated">OPEN_TYPE_FIELD</target>
        </trans-unit>
        <trans-unit id="a7cc6aff50948b96ff5bd1d18ddea963cb36a91c" translate="yes" xml:space="preserve">
          <source>OPERATING_SYSTEM_MXBEAN_NAME</source>
          <target state="translated">OPERATING_SYSTEM_MXBEAN_NAME</target>
        </trans-unit>
        <trans-unit id="0684b9f3687e250654b613ebc883ef3ca4f5330e" translate="yes" xml:space="preserve">
          <source>OPTICAL_CHARACTER_RECOGNITION</source>
          <target state="translated">OPTICAL_CHARACTER_RECOGNITION</target>
        </trans-unit>
        <trans-unit id="5b8ec9255869d40cf54928a9631b1ba35367a79a" translate="yes" xml:space="preserve">
          <source>OPTION</source>
          <target state="translated">OPTION</target>
        </trans-unit>
        <trans-unit id="a10c3f25c81a857c7ec7c54210e6931745d9810e" translate="yes" xml:space="preserve">
          <source>OPTIONAL</source>
          <target state="translated">OPTIONAL</target>
        </trans-unit>
        <trans-unit id="39dd320e8c4e9f06b35e0be0b4942ac2022fb9c1" translate="yes" xml:space="preserve">
          <source>OPTIONS</source>
          <target state="translated">OPTIONS</target>
        </trans-unit>
        <trans-unit id="732c52bbc70fa3600175ad922a0e7d25720a7db9" translate="yes" xml:space="preserve">
          <source>OPTIONS_PROPERTY</source>
          <target state="translated">OPTIONS_PROPERTY</target>
        </trans-unit>
        <trans-unit id="89071e764a43ad38f076d66f79a89d518123f0bb" translate="yes" xml:space="preserve">
          <source>OPTION_PANE</source>
          <target state="translated">OPTION_PANE</target>
        </trans-unit>
        <trans-unit id="5d28a1f63ddab2682e3aef9fd89fcc2366bded76" translate="yes" xml:space="preserve">
          <source>OPTION_TYPE_PROPERTY</source>
          <target state="translated">OPTION_TYPE_PROPERTY</target>
        </trans-unit>
        <trans-unit id="28094d0e3c31b908fa880e63205123cfb8ba9675" translate="yes" xml:space="preserve">
          <source>OP_ACCEPT</source>
          <target state="translated">OP_ACCEPT</target>
        </trans-unit>
        <trans-unit id="8ca90c96f1dbd18c4ad75911beeba6c2414fa8ce" translate="yes" xml:space="preserve">
          <source>OP_CONNECT</source>
          <target state="translated">OP_CONNECT</target>
        </trans-unit>
        <trans-unit id="a08a7c938b7f2e10c1425f7f85ae96bd23df6a1f" translate="yes" xml:space="preserve">
          <source>OP_READ</source>
          <target state="translated">OP_READ</target>
        </trans-unit>
        <trans-unit id="abd6936f336625c51656bb7a68ae2cceb5ee76c5" translate="yes" xml:space="preserve">
          <source>OP_WRITE</source>
          <target state="translated">OP_WRITE</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="fd09c20fb205e745fc3bd47cc2212b145798d969" translate="yes" xml:space="preserve">
          <source>ORANGE</source>
          <target state="translated">ORANGE</target>
        </trans-unit>
        <trans-unit id="7da2f1046517dfdf6e94a20de15744021885e422" translate="yes" xml:space="preserve">
          <source>ORDERED</source>
          <target state="translated">ORDERED</target>
        </trans-unit>
        <trans-unit id="b74db04fe6e83b12c4dfc934f3c3d7c1eee0e67a" translate="yes" xml:space="preserve">
          <source>ORDERED_NODE_ITERATOR_TYPE</source>
          <target state="translated">ORDERED_NODE_ITERATOR_TYPE</target>
        </trans-unit>
        <trans-unit id="ad9cb5345326c7b53942835f6eba278c98a06fa4" translate="yes" xml:space="preserve">
          <source>ORDERED_NODE_SNAPSHOT_TYPE</source>
          <target state="translated">ORDERED_NODE_SNAPSHOT_TYPE</target>
        </trans-unit>
        <trans-unit id="b9fa47297e9b95f602f6fe79dfb24dca306e883f" translate="yes" xml:space="preserve">
          <source>ORIENTATION_PROPERTY</source>
          <target state="translated">ORIENTATION_PROPERTY</target>
        </trans-unit>
        <trans-unit id="d25c98a3cf3bf683908f28bbb0512be1e9e45d56" translate="yes" xml:space="preserve">
          <source>ORIENTATION_ROW_0_BOTTOM_COLUMN_0_LEFT</source>
          <target state="translated">ORIENTATION_ROW_0_BOTTOM_COLUMN_0_LEFT</target>
        </trans-unit>
        <trans-unit id="7f8c02b8eeed8f239d818bfd7b0439e9bffd6d88" translate="yes" xml:space="preserve">
          <source>ORIENTATION_ROW_0_BOTTOM_COLUMN_0_RIGHT</source>
          <target state="translated">ORIENTATION_ROW_0_BOTTOM_COLUMN_0_RIGHT</target>
        </trans-unit>
        <trans-unit id="95f78d2cbcf156e4d65944001c50eb08c6098bb0" translate="yes" xml:space="preserve">
          <source>ORIENTATION_ROW_0_LEFT_COLUMN_0_BOTTOM</source>
          <target state="translated">ORIENTATION_ROW_0_LEFT_COLUMN_0_BOTTOM</target>
        </trans-unit>
        <trans-unit id="353680245319982826dfe424a4295605f888bf30" translate="yes" xml:space="preserve">
          <source>ORIENTATION_ROW_0_LEFT_COLUMN_0_TOP</source>
          <target state="translated">ORIENTATION_ROW_0_LEFT_COLUMN_0_TOP</target>
        </trans-unit>
        <trans-unit id="57d572c42f80dab1b19a6eeb399ec13601d5393c" translate="yes" xml:space="preserve">
          <source>ORIENTATION_ROW_0_RIGHT_COLUMN_0_BOTTOM</source>
          <target state="translated">ORIENTATION_ROW_0_RIGHT_COLUMN_0_BOTTOM</target>
        </trans-unit>
        <trans-unit id="c9135a841a2af4c55c3d0b9d31ed4c66c3d93d59" translate="yes" xml:space="preserve">
          <source>ORIENTATION_ROW_0_RIGHT_COLUMN_0_TOP</source>
          <target state="translated">ORIENTATION_ROW_0_RIGHT_COLUMN_0_TOP</target>
        </trans-unit>
        <trans-unit id="f93d4775e96d7ffb2a710cd805bcd747dda35be7" translate="yes" xml:space="preserve">
          <source>ORIENTATION_ROW_0_TOP_COLUMN_0_LEFT</source>
          <target state="translated">ORIENTATION_ROW_0_TOP_COLUMN_0_LEFT</target>
        </trans-unit>
        <trans-unit id="ba01a8f7f5f4b9b123011fde05f53d4820bce255" translate="yes" xml:space="preserve">
          <source>ORIENTATION_ROW_0_TOP_COLUMN_0_RIGHT</source>
          <target state="translated">ORIENTATION_ROW_0_TOP_COLUMN_0_RIGHT</target>
        </trans-unit>
        <trans-unit id="854e7200579aa4e88a8d6b81ca849a18889c7e0f" translate="yes" xml:space="preserve">
          <source>ORIGINAL_TYPE_FIELD</source>
          <target state="translated">ORIGINAL_TYPE_FIELD</target>
        </trans-unit>
        <trans-unit id="b44ea66f4525b661666c9ddea55aace59afcd2e4" translate="yes" xml:space="preserve">
          <source>ORIYA</source>
          <target state="translated">ORIYA</target>
        </trans-unit>
        <trans-unit id="ac31c4fe2abf8ce0e4c7243fadf665e049015e66" translate="yes" xml:space="preserve">
          <source>ORNAMENTAL_DINGBATS</source>
          <target state="translated">ORNAMENTAL_DINGBATS</target>
        </trans-unit>
        <trans-unit id="ab1a2b8a3fa469496476ddcc1866490d67bf0cad" translate="yes" xml:space="preserve">
          <source>OR_ASSIGNMENT</source>
          <target state="translated">OR_ASSIGNMENT</target>
        </trans-unit>
        <trans-unit id="7db189f17d6349183205ca43e5fc0a07c3c4b135" translate="yes" xml:space="preserve">
          <source>OS/2 and Windows specific metrics.</source>
          <target state="translated">OS / 2 및 Windows 특정 메트릭.</target>
        </trans-unit>
        <trans-unit id="a1b6a71030f0d81e80088f418db236c95590f720" translate="yes" xml:space="preserve">
          <source>OS/2 and Windows specific metrics. Table tag &quot;OS/2&quot; in the Open Type Specification.</source>
          <target state="translated">OS / 2 및 Windows 특정 메트릭. Open Type 사양의 테이블 태그 「OS / 2」입니다.</target>
        </trans-unit>
        <trans-unit id="e5fd134ae5ec48a1d3ec5175870318a599950f0b" translate="yes" xml:space="preserve">
          <source>OSAGE</source>
          <target state="translated">OSAGE</target>
        </trans-unit>
        <trans-unit id="846e84ece7d673e6abdfff83460bec35ababcc85" translate="yes" xml:space="preserve">
          <source>OSMANYA</source>
          <target state="translated">OSMANYA</target>
        </trans-unit>
        <trans-unit id="957c024b38ce820878f03177ce3d2b83c26a82d0" translate="yes" xml:space="preserve">
          <source>OTHER</source>
          <target state="translated">OTHER</target>
        </trans-unit>
        <trans-unit id="5c9d212b09896a684e35e34a4bc7b0645b40092d" translate="yes" xml:space="preserve">
          <source>OTHERS_EXECUTE</source>
          <target state="translated">OTHERS_EXECUTE</target>
        </trans-unit>
        <trans-unit id="2deff91bb5e2eee42847fdb2921f051fe5365b75" translate="yes" xml:space="preserve">
          <source>OTHERS_READ</source>
          <target state="translated">OTHERS_READ</target>
        </trans-unit>
        <trans-unit id="2d7286f51aa3e46845334ddc52c7682f7554c277" translate="yes" xml:space="preserve">
          <source>OTHERS_WRITE</source>
          <target state="translated">OTHERS_WRITE</target>
        </trans-unit>
        <trans-unit id="543ac6218e752d5967fd22a7603a0e66ca2806e0" translate="yes" xml:space="preserve">
          <source>OTHER_EXPRESSION_SUBKIND</source>
          <target state="translated">OTHER_EXPRESSION_SUBKIND</target>
        </trans-unit>
        <trans-unit id="802bfbdcec1e0873ee0e4b3f43f68d3022244543" translate="yes" xml:space="preserve">
          <source>OTHER_LETTER</source>
          <target state="translated">OTHER_LETTER</target>
        </trans-unit>
        <trans-unit id="0528be3a553ee55304545e3df532c16619f9a75f" translate="yes" xml:space="preserve">
          <source>OTHER_NUMBER</source>
          <target state="translated">OTHER_NUMBER</target>
        </trans-unit>
        <trans-unit id="a79f18b5ad7c3bc6ad0e1685c0b9f1d91e9ea75c" translate="yes" xml:space="preserve">
          <source>OTHER_PUNCTUATION</source>
          <target state="translated">OTHER_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="5dcd7535199ae15a813d866ef04e762cfaa07f6c" translate="yes" xml:space="preserve">
          <source>OTHER_SYMBOL</source>
          <target state="translated">OTHER_SYMBOL</target>
        </trans-unit>
        <trans-unit id="0f25dcf23e96bec778b486a0f78fb4c2fa1a7ff1" translate="yes" xml:space="preserve">
          <source>OTTOMAN_SIYAQ_NUMBERS</source>
          <target state="translated">OTTOMAN_SIYAQ_NUMBERS</target>
        </trans-unit>
        <trans-unit id="6ac80f84ad7ae06f3e4a60b7b787a896096b18e0" translate="yes" xml:space="preserve">
          <source>OUTLINE_DRAG_MODE</source>
          <target state="translated">OUTLINE_DRAG_MODE</target>
        </trans-unit>
        <trans-unit id="b9137a5289af21a69955512b5c2930fc74a8475f" translate="yes" xml:space="preserve">
          <source>OUTPUT_AREA_ALMOST_FULL</source>
          <target state="translated">OUTPUT_AREA_ALMOST_FULL</target>
        </trans-unit>
        <trans-unit id="aeec86dea60802eab8044de971cadb6c296f86ca" translate="yes" xml:space="preserve">
          <source>OUTPUT_AREA_FULL</source>
          <target state="translated">OUTPUT_AREA_FULL</target>
        </trans-unit>
        <trans-unit id="7fb6f3a731940378037e922317ddccf6e2bf93b2" translate="yes" xml:space="preserve">
          <source>OUTPUT_TRAY_MISSING</source>
          <target state="translated">OUTPUT_TRAY_MISSING</target>
        </trans-unit>
        <trans-unit id="3689354e054240e9ce7ac34dc7bf0fba072df596" translate="yes" xml:space="preserve">
          <source>OUT_BOTTOM</source>
          <target state="translated">OUT_BOTTOM</target>
        </trans-unit>
        <trans-unit id="f11c7a78ced8ea8a9968bdb9b8aa3d96af14e92e" translate="yes" xml:space="preserve">
          <source>OUT_LEFT</source>
          <target state="translated">OUT_LEFT</target>
        </trans-unit>
        <trans-unit id="4fdb19d5ae312178d06916f05779f8b4547d64bb" translate="yes" xml:space="preserve">
          <source>OUT_RIGHT</source>
          <target state="translated">OUT_RIGHT</target>
        </trans-unit>
        <trans-unit id="d71ed9762570624ed15ee61bc6293a7accda0e57" translate="yes" xml:space="preserve">
          <source>OUT_TOP</source>
          <target state="translated">OUT_TOP</target>
        </trans-unit>
        <trans-unit id="cc11826689203b888f22525a7551a5472c324526" translate="yes" xml:space="preserve">
          <source>OVER</source>
          <target state="translated">OVER</target>
        </trans-unit>
        <trans-unit id="3fe485466d710a2326dae73df05426e5ae1b03ea" translate="yes" xml:space="preserve">
          <source>OVERFLOW</source>
          <target state="translated">OVERFLOW</target>
        </trans-unit>
        <trans-unit id="f275fdb83760cf7f81c0389520bf2b7351b38004" translate="yes" xml:space="preserve">
          <source>OVERVIEW</source>
          <target state="translated">OVERVIEW</target>
        </trans-unit>
        <trans-unit id="287f5351ee84c7bb75d66c276d5c2a79d3f6bedb" translate="yes" xml:space="preserve">
          <source>OVERWRITTEN</source>
          <target state="translated">OVERWRITTEN</target>
        </trans-unit>
        <trans-unit id="b1333600ff2f11ec0a569102817bd4c953b7720d" translate="yes" xml:space="preserve">
          <source>OWNER_EXECUTE</source>
          <target state="translated">OWNER_EXECUTE</target>
        </trans-unit>
        <trans-unit id="1b6f0e8d40d22075a3dbd9f23042c29bc9d8c058" translate="yes" xml:space="preserve">
          <source>OWNER_READ</source>
          <target state="translated">OWNER_READ</target>
        </trans-unit>
        <trans-unit id="076a91e3ae3c9aa46bd975145b4551a4d309574c" translate="yes" xml:space="preserve">
          <source>OWNER_WRITE</source>
          <target state="translated">OWNER_WRITE</target>
        </trans-unit>
        <trans-unit id="a55fbbf743bd9ca4b4275fd0ca7669a2a58e7e3a" translate="yes" xml:space="preserve">
          <source>Obeys the general contract of &lt;a href=&quot;../../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">순종의 일반 계약 &lt;a href=&quot;../../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f814496f853ed543edc9f690cd334a787b6e0896" translate="yes" xml:space="preserve">
          <source>Obeys the general contract of &lt;a href=&quot;../../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals&lt;/code&gt;&lt;/a&gt;. This method does not, however, indicate whether two types represent the same type. Semantic comparisons of type equality should instead use &lt;a href=&quot;../util/types#isSameType(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)&quot;&gt;&lt;code&gt;Types.isSameType(TypeMirror, TypeMirror)&lt;/code&gt;&lt;/a&gt;. The results of &lt;code&gt;t1.equals(t2)&lt;/code&gt; and &lt;code&gt;Types.isSameType(t1, t2)&lt;/code&gt; may differ.</source>
          <target state="translated">순종의 일반 계약 &lt;a href=&quot;../../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals&lt;/code&gt; &lt;/a&gt; . 그러나이 방법은 두 유형이 동일한 유형을 나타내는 지 여부를 나타내지 않습니다. 형식 동등성의 의미 비교는 대신 &lt;a href=&quot;../util/types#isSameType(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)&quot;&gt; &lt;code&gt;Types.isSameType(TypeMirror, TypeMirror)&lt;/code&gt; &lt;/a&gt; 사용해야 합니다. 결과 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 및 &lt;code&gt;Types.isSameType(t1, t2)&lt;/code&gt; 다를 수있다.</target>
        </trans-unit>
        <trans-unit id="3c6e57855e6516f49971084ffc18e286bf60d670" translate="yes" xml:space="preserve">
          <source>Obeys the general contract of &lt;a href=&quot;../../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt; 일반 계약을 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="d769f9861a8de3f9c22a6b460b41fb3ab1f2dd94" translate="yes" xml:space="preserve">
          <source>Obeys the general contract of &lt;a href=&quot;../../../../java/lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals&lt;/code&gt;&lt;/a&gt;. This method does not, however, indicate whether two types represent the same type. Semantic comparisons of type equality should instead use &lt;a href=&quot;../util/types#isSameType-javax.lang.model.type.TypeMirror-javax.lang.model.type.TypeMirror-&quot;&gt;&lt;code&gt;Types.isSameType(TypeMirror, TypeMirror)&lt;/code&gt;&lt;/a&gt;. The results of &lt;code&gt;t1.equals(t2)&lt;/code&gt; and &lt;code&gt;Types.isSameType(t1, t2)&lt;/code&gt; may differ.</source>
          <target state="translated">Object.equals의 일반 계약을 &lt;a href=&quot;../../../../java/lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals&lt;/code&gt; &lt;/a&gt; 합니다. 그러나이 방법은 두 유형이 동일한 유형을 나타내는 지 여부를 나타내지 않습니다. 형식 평등의 의미 론적 비교는 대신 &lt;a href=&quot;../util/types#isSameType-javax.lang.model.type.TypeMirror-javax.lang.model.type.TypeMirror-&quot;&gt; &lt;code&gt;Types.isSameType(TypeMirror, TypeMirror)&lt;/code&gt; &lt;/a&gt; 사용해야 합니다. 결과 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 및 &lt;code&gt;Types.isSameType(t1, t2)&lt;/code&gt; 다를 수있다.</target>
        </trans-unit>
        <trans-unit id="b8cb6104987aa6db954c9ae00a3372578f8f27e0" translate="yes" xml:space="preserve">
          <source>Obeys the general contract of &lt;a href=&quot;../../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt; 의 일반 계약을 준수 합니다.</target>
        </trans-unit>
        <trans-unit id="30d84d4b99f96d80e3481fba2a01265896796dcb" translate="yes" xml:space="preserve">
          <source>ObjDoubleConsumer</source>
          <target state="translated">ObjDoubleConsumer</target>
        </trans-unit>
        <trans-unit id="b3fa09ea133d036855f5c028675df6f3d2d7339e" translate="yes" xml:space="preserve">
          <source>ObjDoubleConsumer.accept()</source>
          <target state="translated">ObjDoubleConsumer.accept()</target>
        </trans-unit>
        <trans-unit id="d4d5bbe99e3545772754520b6cc81fd8255f448d" translate="yes" xml:space="preserve">
          <source>ObjID</source>
          <target state="translated">ObjID</target>
        </trans-unit>
        <trans-unit id="9d68e919e0e30929f8dc7e2c7ee884ba97918bcd" translate="yes" xml:space="preserve">
          <source>ObjIntConsumer</source>
          <target state="translated">ObjIntConsumer</target>
        </trans-unit>
        <trans-unit id="9c975d875be013886cdf0b5c98087b58343e6e01" translate="yes" xml:space="preserve">
          <source>ObjIntConsumer.accept()</source>
          <target state="translated">ObjIntConsumer.accept()</target>
        </trans-unit>
        <trans-unit id="a6a78c9ea7655fa5db10c9ac0d9fe6f97a281f39" translate="yes" xml:space="preserve">
          <source>ObjLongConsumer</source>
          <target state="translated">ObjLongConsumer</target>
        </trans-unit>
        <trans-unit id="aeb43723ea57720236d69ec60d300ceb39a1bce2" translate="yes" xml:space="preserve">
          <source>ObjLongConsumer.accept()</source>
          <target state="translated">ObjLongConsumer.accept()</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="091897cd35a3e46598e57dba02248c0c71eb5afa" translate="yes" xml:space="preserve">
          <source>Object &amp;lt;METHOD&amp;gt;(InvocationContext) throws Exception</source>
          <target state="translated">&amp;lt;METHOD&amp;gt; (InvocationContext) 개체에서 예외가 발생 함</target>
        </trans-unit>
        <trans-unit id="3e6416c549089d793b355231b4a195dcb855eb09" translate="yes" xml:space="preserve">
          <source>Object Serialization</source>
          <target state="translated">객체 직렬화</target>
        </trans-unit>
        <trans-unit id="f050af90df21b007ac02d46596fcfa404def90af" translate="yes" xml:space="preserve">
          <source>Object Serialization uses the Serializable and Externalizable interfaces. Object persistence mechanisms can use them as well. Each object to be stored is tested for the Externalizable interface. If the object supports Externalizable, the writeExternal method is called. If the object does not support Externalizable and does implement Serializable, the object is saved using ObjectOutputStream.</source>
          <target state="translated">객체 직렬화는 직렬화 가능 및 외부화 가능 인터페이스를 사용합니다. 객체 지속성 메커니즘도이를 사용할 수 있습니다. 저장할 각 오브젝트는 외부화 가능 인터페이스에 대해 테스트됩니다. 객체가 Externalizable을 지원하면 writeExternal 메소드가 호출됩니다. 객체가 Externalizable을 지원하지 않고 Serializable을 구현하면 ObjectOutputStream을 사용하여 객체가 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="612cccd9e33edab081593ffd5750b2774db607e4" translate="yes" xml:space="preserve">
          <source>Object arguments for parameters of type &lt;code&gt;T&lt;/code&gt; that are not instances of the class passed to &lt;a href=&quot;#newUpdater(java.lang.Class,java.lang.Class,java.lang.String)&quot;&gt;&lt;code&gt;newUpdater(java.lang.Class&amp;lt;U&amp;gt;, java.lang.Class&amp;lt;W&amp;gt;, java.lang.String)&lt;/code&gt;&lt;/a&gt; will result in a &lt;a href=&quot;../../../lang/classcastexception&quot;&gt;&lt;code&gt;ClassCastException&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="translated">&lt;a href=&quot;#newUpdater(java.lang.Class,java.lang.Class,java.lang.String)&quot;&gt; &lt;code&gt;newUpdater(java.lang.Class&amp;lt;U&amp;gt;, java.lang.Class&amp;lt;W&amp;gt;, java.lang.String)&lt;/code&gt; &lt;/a&gt; 전달 된 클래스의 인스턴스가 아닌 유형 &lt;code&gt;T&lt;/code&gt; 의 매개 변수에 대한 개체 인수 는 &lt;a href=&quot;../../../lang/classcastexception&quot;&gt; &lt;code&gt;ClassCastException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="8c79fdd85a745337a69c0a695956666099eba652" translate="yes" xml:space="preserve">
          <source>Object arguments for parameters of type &lt;code&gt;T&lt;/code&gt; that are not instances of the class passed to &lt;a href=&quot;#newUpdater(java.lang.Class,java.lang.String)&quot;&gt;&lt;code&gt;newUpdater(java.lang.Class&amp;lt;U&amp;gt;, java.lang.String)&lt;/code&gt;&lt;/a&gt; will result in a &lt;a href=&quot;../../../lang/classcastexception&quot;&gt;&lt;code&gt;ClassCastException&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="translated">&lt;a href=&quot;#newUpdater(java.lang.Class,java.lang.String)&quot;&gt; &lt;code&gt;newUpdater(java.lang.Class&amp;lt;U&amp;gt;, java.lang.String)&lt;/code&gt; &lt;/a&gt; 전달 된 클래스의 인스턴스가 아닌 유형 &lt;code&gt;T&lt;/code&gt; 의 매개 변수에 대한 개체 인수 는 &lt;a href=&quot;../../../lang/classcastexception&quot;&gt; &lt;code&gt;ClassCastException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="0fd6239241597977d99751f6f11a12bce4d54da1" translate="yes" xml:space="preserve">
          <source>Object arguments must be assignment compatible with the argument type (This implies that the argument type must be loaded through the enclosing class' class loader). Primitive arguments must be either assignment compatible with the argument type or must be convertible to the argument type without loss of information. If the method being called accepts a variable number of arguments, then the last argument type is an array of some component type. The argument in the matching position can be omitted, or can be null, an array of the same component type, or an argument of the component type followed by any number of other arguments of the same type. If the argument is omitted, then a 0 length array of the component type is passed. The component type can be a primitive type. Autoboxing is not supported. See Section 5.2 of</source>
          <target state="translated">객체 인수는 인수 유형과 호환되는 할당이어야합니다 (이는 인수 유형이 둘러싸는 클래스의 클래스 로더를 통해로드되어야 함을 의미합니다). 기본 인수는 인수 유형과 호환되는 할당이거나 정보 손실없이 인수 유형으로 변환 할 수 있어야합니다. 호출되는 메서드가 가변 개수의 인수를 허용하는 경우 마지막 인수 유형은 일부 구성 요소 유형의 배열입니다. 일치하는 위치의 인수는 생략되거나 null, 동일한 구성 요소 유형의 배열 또는 구성 요소 유형의 인수 다음에 동일한 유형의 다른 인수가 올 수 있습니다. 인수가 생략되면 구성 요소 유형의 길이가 0 인 배열이 전달됩니다. 구성 요소 유형은 기본 유형이 될 수 있습니다. 오토 박싱은 지원되지 않습니다. 섹션 5.2 참조</target>
        </trans-unit>
        <trans-unit id="4de1e25e902a4cd4bff95af3ebf9cf442bb6e15e" translate="yes" xml:space="preserve">
          <source>Object arguments must be assignment compatible with the argument type (This implies that the argument type must be loaded through the enclosing class' class loader). Primitive arguments must be either assignment compatible with the argument type or must be convertible to the argument type without loss of information. If the method being called accepts a variable number of arguments, then the last argument type is an array of some component type. The argument in the matching position can be omitted, or can be null, an array of the same component type, or an argument of the component type, followed by any number of other arguments of the same type. If the argument is omitted, then a 0 length array of the component type is passed. The component type can be a primitive type. Autoboxing is not supported. See section 5.2 of</source>
          <target state="translated">객체 인수는 인수 유형과 호환되는 할당이어야합니다 (이는 인수 유형이 둘러싸는 클래스의 클래스 로더를 통해로드되어야 함을 의미합니다). 기본 인수는 인수 유형과 호환되는 할당이거나 정보 손실없이 인수 유형으로 변환 할 수 있어야합니다. 호출되는 메서드가 가변 개수의 인수를 허용하는 경우 마지막 인수 유형은 일부 구성 요소 유형의 배열입니다. 일치하는 위치의 인수는 생략되거나 null, 동일한 구성 요소 유형의 배열 또는 구성 요소 유형의 인수 다음에 동일한 유형의 다른 인수가 올 수 있습니다. 인수가 생략되면 구성 요소 유형의 길이가 0 인 배열이 전달됩니다. 구성 요소 유형은 기본 유형이 될 수 있습니다. 오토 박싱은 지원되지 않습니다. 섹션 5.2 참조</target>
        </trans-unit>
        <trans-unit id="a63fce943ea6cb3805032405e632accdc3d20796" translate="yes" xml:space="preserve">
          <source>Object arguments must be assignment compatible with the argument type (This implies that the argument type must be loaded through the enclosing class's class loader). Primitive arguments must be either assignment compatible with the argument type or must be convertible to the argument type without loss of information. If the method being called accepts a variable number of arguments, then the last argument type is an array of some component type. The argument in the matching position can be omitted, or can be null, an array of the same component type, or an argument of the component type followed by any number of other arguments of the same type. If the argument is omitted, then a 0 length array of the component type is passed. The component type can be a primitive type. Autoboxing is not supported. See section 5.2 of</source>
          <target state="translated">객체 인수는 인수 유형과 호환되는 할당이어야합니다 (이는 인수 유형이 둘러싸는 클래스의 클래스 로더를 통해로드되어야 함을 의미합니다). 기본 인수는 인수 유형과 호환되는 할당이거나 정보 손실없이 인수 유형으로 변환 할 수 있어야합니다. 호출되는 메서드가 가변 개수의 인수를 허용하는 경우 마지막 인수 유형은 일부 구성 요소 유형의 배열입니다. 일치하는 위치의 인수는 생략되거나 null, 동일한 구성 요소 유형의 배열 또는 구성 요소 유형의 인수 다음에 동일한 유형의 다른 인수가 올 수 있습니다. 인수가 생략되면 구성 요소 유형의 길이가 0 인 배열이 전달됩니다. 구성 요소 유형은 기본 유형이 될 수 있습니다. 오토 박싱은 지원되지 않습니다. 섹션 5.2 참조</target>
        </trans-unit>
        <trans-unit id="7832ca3aba860442945365a7afc0fbb1ef8056b0" translate="yes" xml:space="preserve">
          <source>Object array of field values. If the list of &lt;code&gt;fieldNames&lt;/code&gt; is empty, you will get an empty array.</source>
          <target state="translated">필드 값의 객체 배열. &lt;code&gt;fieldNames&lt;/code&gt; 목록 이 비어 있으면 빈 배열이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="286877119eb6aa37777a1a5b13f05c91ce5ddd3d" translate="yes" xml:space="preserve">
          <source>Object indicating supported values for &lt;code&gt;category&lt;/code&gt;, or null if this Print Service does not support specifying a doc-level or job-level attribute in &lt;code&gt;category&lt;/code&gt; in a Print Request.</source>
          <target state="translated">&lt;code&gt;category&lt;/code&gt; 에 지원되는 값을 나타내는 객체. 이 인쇄 서비스가 인쇄 요구의 &lt;code&gt;category&lt;/code&gt; 에 문서 레벨 또는 작업 레벨 속성의 지정을 지원하지 않는 경우는 null</target>
        </trans-unit>
        <trans-unit id="41985ee7c1daaa7457a059f0fc2f63f8f3301f42" translate="yes" xml:space="preserve">
          <source>Object is used to alert the user about something.</source>
          <target state="translated">개체는 사용자에게 무언가에 대해 경고하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="801275ecdd4edfdd45972c289f4327e28e5ca15a" translate="yes" xml:space="preserve">
          <source>Object number for well-known &lt;code&gt;ObjID&lt;/code&gt; of the activator.</source>
          <target state="translated">활성기의 잘 알려진 &lt;code&gt;ObjID&lt;/code&gt; 에 대한 개체 번호입니다 .</target>
        </trans-unit>
        <trans-unit id="8bc25d6c11a0aae8f94b38e476ecf6fea98c08e4" translate="yes" xml:space="preserve">
          <source>Object number for well-known &lt;code&gt;ObjID&lt;/code&gt; of the distributed garbage collector.</source>
          <target state="translated">분산 가비지 수집기의 잘 알려진 &lt;code&gt;ObjID&lt;/code&gt; 에 대한 개체 번호입니다 .</target>
        </trans-unit>
        <trans-unit id="e45d96253f9bef398282ff1662b8b4e8d6dbdbf7" translate="yes" xml:space="preserve">
          <source>Object number for well-known &lt;code&gt;ObjID&lt;/code&gt; of the registry.</source>
          <target state="translated">레지스트리의 잘 알려진 &lt;code&gt;ObjID&lt;/code&gt; 에 대한 개체 번호입니다 .</target>
        </trans-unit>
        <trans-unit id="e099dd745b81d0798c68ba791262951f6f0c2d91" translate="yes" xml:space="preserve">
          <source>Object on which to execute this method.</source>
          <target state="translated">이 메소드를 실행할 객체입니다.</target>
        </trans-unit>
        <trans-unit id="b7d11d77d63a774c1d83e911ae54c8337c6eee05" translate="yes" xml:space="preserve">
          <source>Object representation of text</source>
          <target state="translated">텍스트의 객체 표현</target>
        </trans-unit>
        <trans-unit id="3bd5558961d4627cea1e9e0716fc25043ce927e2" translate="yes" xml:space="preserve">
          <source>Object responsible for getting the size of a node.</source>
          <target state="translated">노드의 크기를 가져 오는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="a269f684450c6f879bb6a1d4cd29059931c991ff" translate="yes" xml:space="preserve">
          <source>Object responsible for handling sizing and expanded issues.</source>
          <target state="translated">크기 조정 및 확장 문제를 처리하는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="a09b3de29f167ba6f3a25fcfec9dcb1bbf82c851" translate="yes" xml:space="preserve">
          <source>Object that allows access to the static members of a class (its static methods, properties, and fields), as well as construction of instances using &lt;a href=&quot;../standardoperation#NEW&quot;&gt;&lt;code&gt;StandardOperation.NEW&lt;/code&gt;&lt;/a&gt; operation.</source>
          <target state="translated">클래스의 정적 멤버 (정적 메서드, 속성 및 필드)에 대한 액세스와 &lt;a href=&quot;../standardoperation#NEW&quot;&gt; &lt;code&gt;StandardOperation.NEW&lt;/code&gt; &lt;/a&gt; 작업을 사용한 인스턴스 생성을 허용하는 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="7f34a079a1219f891a24d7811d128fdbb6061d36" translate="yes" xml:space="preserve">
          <source>Object that allows access to the static members of a class (its static methods, properties, and fields), as well as construction of instances using &lt;a href=&quot;../standardoperation#NEW&quot;&gt;&lt;code&gt;StandardOperation.NEW&lt;/code&gt;&lt;/a&gt; operation. In Dynalink, &lt;a href=&quot;../../../../java.base/java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; objects are not treated specially and act as ordinary Java objects; you can use e.g. &lt;code&gt;GET:PROPERTY:superclass&lt;/code&gt; as a property getter to invoke &lt;code&gt;clazz.getSuperclass()&lt;/code&gt;. On the other hand, you can not use &lt;code&gt;Class&lt;/code&gt; objects to access static members of a class, nor to create new instances of the class using &lt;code&gt;NEW&lt;/code&gt;. This is consistent with how &lt;code&gt;Class&lt;/code&gt; objects behave in Java: in Java, you write e.g. &lt;code&gt;new BitSet()&lt;/code&gt; instead of &lt;code&gt;new BitSet.class()&lt;/code&gt;. Similarly, you write &lt;code&gt;System.out&lt;/code&gt; and not &lt;code&gt;System.class.out&lt;/code&gt;. It is this aspect of using a class name as the constructor and a namespace for static members that &lt;code&gt;StaticClass&lt;/code&gt; embodies.</source>
          <target state="translated">클래스의 정적 멤버 (정적 메서드, 속성 및 필드)에 대한 액세스와 &lt;a href=&quot;../standardoperation#NEW&quot;&gt; &lt;code&gt;StandardOperation.NEW&lt;/code&gt; &lt;/a&gt; 작업을 사용한 인스턴스 생성을 허용하는 개체입니다 . Dynalink에서 &lt;a href=&quot;../../../../java.base/java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 객체는 특별히 취급되지 않으며 일반 Java 객체처럼 작동합니다. 예를 들어 &lt;code&gt;GET:PROPERTY:superclass&lt;/code&gt; 를 속성 getter로 사용하여 &lt;code&gt;clazz.getSuperclass()&lt;/code&gt; 를 호출 할 수 있습니다 . 반면에 &lt;code&gt;Class&lt;/code&gt; 객체를 사용하여 클래스의 정적 멤버에 액세스하거나 &lt;code&gt;NEW&lt;/code&gt; 를 사용하여 클래스의 새 인스턴스를 만들 수 없습니다 . 이것은 Java에서 &lt;code&gt;Class&lt;/code&gt; 객체가 작동 하는 방식과 일치합니다 . Java에서는 예를 들어 &lt;code&gt;new BitSet.class()&lt;/code&gt; 대신 &lt;code&gt;new BitSet()&lt;/code&gt; 합니다.. 마찬가지로 &lt;code&gt;System.class.out&lt;/code&gt; 이 아니라 &lt;code&gt;System.out&lt;/code&gt; 을 작성 합니다. 클래스 이름을 생성자로 사용하고 &lt;code&gt;StaticClass&lt;/code&gt; 가 구현 하는 정적 멤버에 대한 네임 스페이스를 사용하는 것이 바로 이러한 측면입니다 .</target>
        </trans-unit>
        <trans-unit id="e2f57d39c0e3ec4ff5bd731989e5d5061d6e1834" translate="yes" xml:space="preserve">
          <source>Object that can be drawn into and is used to trap events.</source>
          <target state="translated">끌어 올 수 있고 이벤트를 트랩하는 데 사용되는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="0a329633729873cbc88944690ab425017cc95a1c" translate="yes" xml:space="preserve">
          <source>Object that manages the offsets of the children.</source>
          <target state="translated">자식의 오프셋을 관리하는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="95ad70fa7185ef97f9f0fac71864494477933e11" translate="yes" xml:space="preserve">
          <source>Object that manages the offsets of the children. All locking for management of child locations is on this object.</source>
          <target state="translated">자식의 오프셋을 관리하는 개체입니다. 하위 위치 관리를위한 모든 잠금은이 개체에 있습니다.</target>
        </trans-unit>
        <trans-unit id="93316e19322a36365ba15446747a16aa21accbc0" translate="yes" xml:space="preserve">
          <source>Object values must be assignment compatible with the component type (This implies that the component type must be loaded through the declaring class's class loader). Primitive values must be either assignment compatible with the component type or must be convertible to the component type without loss of information. See JLS section 5.2 for more information on assignment compatibility.</source>
          <target state="translated">개체 값은 구성 요소 유형과 호환되는 할당이어야합니다 (이는 선언하는 클래스의 클래스 로더를 통해 구성 요소 유형을로드해야 함을 의미 함). 기본 값은 구성 요소 유형과 호환되는 할당이거나 정보 손실없이 구성 요소 유형으로 변환 할 수 있어야합니다. 할당 호환성에 대한 자세한 내용은 JLS 섹션 5.2를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a7a51d78e8c7f52052e403d356eb8af1145ea08e" translate="yes" xml:space="preserve">
          <source>Object values must be assignment compatible with the component type (This implies that the component type must be loaded through the enclosing class's class loader). Primitive values must be either assignment compatible with the component type or must be convertible to the component type without loss of information. See JLS section 5.2 for more information on assignment compatibility.</source>
          <target state="translated">객체 값은 구성 요소 유형과 호환되는 할당이어야합니다 (이는 구성 요소 유형이 둘러싸는 클래스의 클래스 로더를 통해로드되어야 함을 의미 함). 기본 값은 구성 요소 유형과 호환되는 할당이거나 정보 손실없이 구성 요소 유형으로 변환 할 수 있어야합니다. 할당 호환성에 대한 자세한 내용은 JLS 섹션 5.2를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="586ffc2cde2a883363f7dd83d49171346eb900c5" translate="yes" xml:space="preserve">
          <source>Object values must be assignment compatible with the element type (This implies that the component type must be loaded through the enclosing class's class loader). Primitive values must be either assignment compatible with the component type or must be convertible to the component type without loss of information. See JLS section 5.2 for more information on assignment compatibility.</source>
          <target state="translated">객체 값은 요소 유형과 호환되는 할당이어야합니다 (이는 구성 요소 유형이 둘러싸는 클래스의 클래스 로더를 통해로드되어야 함을 의미 함). 기본 값은 구성 요소 유형과 호환되는 할당이거나 정보 손실없이 구성 요소 유형으로 변환 할 수 있어야합니다. 할당 호환성에 대한 자세한 내용은 JLS 섹션 5.2를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d58f93e756b7acf675b1ed525dd9e24075ac2f25" translate="yes" xml:space="preserve">
          <source>Object values must be assignment compatible with the field type (This implies that the field type must be loaded through the enclosing class' class loader). Primitive values must be either assignment compatible with the field type or must be convertible to the field type without loss of information. See JLS section 5.2 for more information on assignment compatibility.</source>
          <target state="translated">객체 값은 필드 유형과 호환되는 할당이어야합니다 (이는 필드 유형이 둘러싸는 클래스의 클래스 로더를 통해로드되어야 함을 의미 함). 기본 값은 필드 유형과 호환되는 할당이거나 정보 손실없이 필드 유형으로 변환 할 수 있어야합니다. 할당 호환성에 대한 자세한 내용은 JLS 섹션 5.2를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="58dc3a09c4306075dd97270783aec1fb33865929" translate="yes" xml:space="preserve">
          <source>Object values must be assignment compatible with the field type (This implies that the field type must be loaded through the enclosing class's class loader). Primitive values must be either assignment compatible with the field type or must be convertible to the field type without loss of information. See section 5.2 of</source>
          <target state="translated">객체 값은 필드 유형과 호환되는 할당이어야합니다 (이는 필드 유형이 둘러싸는 클래스의 클래스 로더를 통해로드되어야 함을 의미 함). 기본 값은 필드 유형과 호환되는 할당이거나 정보 손실없이 필드 유형으로 변환 할 수 있어야합니다. 섹션 5.2 참조</target>
        </trans-unit>
        <trans-unit id="bb39d83f2a5025284580e255534a410901ea01cd" translate="yes" xml:space="preserve">
          <source>Object values must be assignment compatible with the variable type (This implies that the variable type must be loaded through the enclosing class's class loader). Primitive values must be either assignment compatible with the variable type or must be convertible to the variable type without loss of information. See JLS section 5.2 for more information on assignment compatibility.</source>
          <target state="translated">객체 값은 변수 유형과 호환되는 할당이어야합니다 (이는 변수 유형이 둘러싸는 클래스의 클래스 로더를 통해로드되어야 함을 의미 함). 기본 값은 변수 유형과 호환되는 할당이거나 정보 손실없이 변수 유형으로 변환 할 수 있어야합니다. 할당 호환성에 대한 자세한 내용은 JLS 섹션 5.2를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="649057e02f4eb86b298b9ae9c841c4cbb6f529db" translate="yes" xml:space="preserve">
          <source>Object.clone()</source>
          <target state="translated">Object.clone()</target>
        </trans-unit>
        <trans-unit id="50f4de7a641a1b6c9901b0d50a536842db7e1cbb" translate="yes" xml:space="preserve">
          <source>Object.equals()</source>
          <target state="translated">Object.equals()</target>
        </trans-unit>
        <trans-unit id="34af381ef0c20d61a1e1fdd7fd3b0376cb081370" translate="yes" xml:space="preserve">
          <source>Object.finalize()</source>
          <target state="translated">Object.finalize()</target>
        </trans-unit>
        <trans-unit id="3cc8b1bc7ec55230ab97b24e2a18091d997f4c1f" translate="yes" xml:space="preserve">
          <source>Object.getClass()</source>
          <target state="translated">Object.getClass()</target>
        </trans-unit>
        <trans-unit id="fb37d3172ce4528abb323db6c61289d5cb1ebb1e" translate="yes" xml:space="preserve">
          <source>Object.hashCode()</source>
          <target state="translated">Object.hashCode()</target>
        </trans-unit>
        <trans-unit id="4d505304cf4c6884173c3353fc83363731541f37" translate="yes" xml:space="preserve">
          <source>Object.notify()</source>
          <target state="translated">Object.notify()</target>
        </trans-unit>
        <trans-unit id="398c400aa89d97f5af81a86dccc70e25f6789c02" translate="yes" xml:space="preserve">
          <source>Object.notifyAll()</source>
          <target state="translated">Object.notifyAll()</target>
        </trans-unit>
        <trans-unit id="bf4c3396b148f59f39948cc7a604ccd89e29083c" translate="yes" xml:space="preserve">
          <source>Object.toString()</source>
          <target state="translated">Object.toString()</target>
        </trans-unit>
        <trans-unit id="4ae7c8a45badeb525993cf5c82b2cbdebf876740" translate="yes" xml:space="preserve">
          <source>Object.wait()</source>
          <target state="translated">Object.wait()</target>
        </trans-unit>
        <trans-unit id="d200106cfe53e89297bceb5bec450520ce39f2ab" translate="yes" xml:space="preserve">
          <source>ObjectChangeListener</source>
          <target state="translated">ObjectChangeListener</target>
        </trans-unit>
        <trans-unit id="c732353035b2bf69bcaf210c8b1bd7a41ce83892" translate="yes" xml:space="preserve">
          <source>ObjectChangeListener.objectChanged()</source>
          <target state="translated">ObjectChangeListener.objectChanged()</target>
        </trans-unit>
        <trans-unit id="c4df2ddb88f86c24a411263bf4ecee503bafa3d0" translate="yes" xml:space="preserve">
          <source>ObjectCollectedException</source>
          <target state="translated">ObjectCollectedException</target>
        </trans-unit>
        <trans-unit id="45ccd909d369cab7218e1cce086dcb00d59c9a25" translate="yes" xml:space="preserve">
          <source>ObjectFactory</source>
          <target state="translated">ObjectFactory</target>
        </trans-unit>
        <trans-unit id="33f70f3717a2a787751664acbae5e8a111ebe675" translate="yes" xml:space="preserve">
          <source>ObjectFactory.getObjectInstance()</source>
          <target state="translated">ObjectFactory.getObjectInstance()</target>
        </trans-unit>
        <trans-unit id="8ca2f557c811eb05fb7634a2e04cd5e48d6945b1" translate="yes" xml:space="preserve">
          <source>ObjectFactoryBuilder</source>
          <target state="translated">ObjectFactoryBuilder</target>
        </trans-unit>
        <trans-unit id="e9e8cd808801bb43d432641f7af03658720d08c8" translate="yes" xml:space="preserve">
          <source>ObjectFactoryBuilder.createObjectFactory()</source>
          <target state="translated">ObjectFactoryBuilder.createObjectFactory()</target>
        </trans-unit>
        <trans-unit id="45fd2d1cd618e826590ed269a2de38a1f4f7c7ee" translate="yes" xml:space="preserve">
          <source>ObjectInput</source>
          <target state="translated">ObjectInput</target>
        </trans-unit>
        <trans-unit id="cd59213e5250b922bde2f39c4519e83349ae10aa" translate="yes" xml:space="preserve">
          <source>ObjectInput extends the DataInput interface to include the reading of objects.</source>
          <target state="translated">ObjectInput은 DataInput 인터페이스를 확장하여 오브젝트 읽기를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="a5fe91160a36331d34bfe5a74be16fae94a6bd13" translate="yes" xml:space="preserve">
          <source>ObjectInput extends the DataInput interface to include the reading of objects. DataInput includes methods for the input of primitive types, ObjectInput extends that interface to include objects, arrays, and Strings.</source>
          <target state="translated">ObjectInput은 DataInput 인터페이스를 확장하여 오브젝트 읽기를 포함합니다. DataInput에는 기본 유형의 입력을위한 메소드가 포함되어 있으며 ObjectInput은 해당 인터페이스를 확장하여 객체, 배열 및 문자열을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="e4f7832a31e4c66258186f04dc3b12e86c9cb9f3" translate="yes" xml:space="preserve">
          <source>ObjectInput.available()</source>
          <target state="translated">ObjectInput.available()</target>
        </trans-unit>
        <trans-unit id="e853c90e44a0320b8a1be9392b83482895b0097f" translate="yes" xml:space="preserve">
          <source>ObjectInput.close()</source>
          <target state="translated">ObjectInput.close()</target>
        </trans-unit>
        <trans-unit id="98dfdcbba155497d20d9d9d4d9505434b5d34b65" translate="yes" xml:space="preserve">
          <source>ObjectInput.read()</source>
          <target state="translated">ObjectInput.read()</target>
        </trans-unit>
        <trans-unit id="7834b91525ffeda974e2ac4efd2dd6581d5bf835" translate="yes" xml:space="preserve">
          <source>ObjectInput.readObject()</source>
          <target state="translated">ObjectInput.readObject()</target>
        </trans-unit>
        <trans-unit id="e3ba1b6c068a1579fa7ed30107e82d10ae773c4b" translate="yes" xml:space="preserve">
          <source>ObjectInput.skip()</source>
          <target state="translated">ObjectInput.skip()</target>
        </trans-unit>
        <trans-unit id="3e4437546033ced33272e3d1df019ba37a4f7cf1" translate="yes" xml:space="preserve">
          <source>ObjectInputFilter</source>
          <target state="translated">ObjectInputFilter</target>
        </trans-unit>
        <trans-unit id="447c38c169590c68ea1ed05b91f64c148572ae30" translate="yes" xml:space="preserve">
          <source>ObjectInputFilter.Config</source>
          <target state="translated">ObjectInputFilter.Config</target>
        </trans-unit>
        <trans-unit id="619090a53b87ca6258cb5c8db13af69d95b3cc1b" translate="yes" xml:space="preserve">
          <source>ObjectInputFilter.FilterInfo</source>
          <target state="translated">ObjectInputFilter.FilterInfo</target>
        </trans-unit>
        <trans-unit id="70269e44cae979950d8174aaf625d863270e5d1f" translate="yes" xml:space="preserve">
          <source>ObjectInputFilter.Status</source>
          <target state="translated">ObjectInputFilter.Status</target>
        </trans-unit>
        <trans-unit id="d7dbe9e21eced0f7bdcf62cca2a5be5c317efaca" translate="yes" xml:space="preserve">
          <source>ObjectInputStream</source>
          <target state="translated">ObjectInputStream</target>
        </trans-unit>
        <trans-unit id="6b61ef3d10e77ce0189e9a3300121f0bd97f8611" translate="yes" xml:space="preserve">
          <source>ObjectInputStream ensures that the types of all objects in the graph created from the stream match the classes present in the Java Virtual Machine. Classes are loaded as required using the standard mechanisms.</source>
          <target state="translated">ObjectInputStream은 스트림에서 작성된 그래프의 모든 오브젝트 유형이 Java Virtual Machine에있는 클래스와 일치하는지 확인합니다. 클래스는 표준 메커니즘을 사용하여 필요에 따라로드됩니다.</target>
        </trans-unit>
        <trans-unit id="bb90a53415578af94f6102090bba0481b24a7abf" translate="yes" xml:space="preserve">
          <source>ObjectInputStream subclasses which override this method can only be constructed in security contexts possessing the &quot;enableSubclassImplementation&quot; SerializablePermission; any attempt to instantiate such a subclass without this permission will cause a SecurityException to be thrown.</source>
          <target state="translated">이 메소드를 오버라이드 (override)하는 ObjectInputStream 서브 클래스는, &quot;enableSubclassImplementation&quot;SerializablePermission를 가지는 시큐리티 문맥에서만 구축 할 수 있습니다. 이 권한없이 이러한 서브 클래스를 인스턴스화하려고하면 SecurityException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="32ab5d39427d716cae444ac8ec7da2131c86fcd0" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.GetField</source>
          <target state="translated">ObjectInputStream.GetField</target>
        </trans-unit>
        <trans-unit id="cb02bf6ec622bd0a78c57826f3a8ab386a454ff7" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.GetField.defaulted()</source>
          <target state="translated">ObjectInputStream.GetField.defaulted()</target>
        </trans-unit>
        <trans-unit id="4adefac9a18c718fd6a6d8619ba754ed0a8e7d9a" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.GetField.get()</source>
          <target state="translated">ObjectInputStream.GetField.get()</target>
        </trans-unit>
        <trans-unit id="95f451879468d1306dbf269bcdd4c4feb7cae976" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.GetField.getObjectStreamClass()</source>
          <target state="translated">ObjectInputStream.GetField.getObjectStreamClass()</target>
        </trans-unit>
        <trans-unit id="970794eb9fd8a28c5da03de4a407e86380489ff4" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.available()</source>
          <target state="translated">ObjectInputStream.available()</target>
        </trans-unit>
        <trans-unit id="c44560631d437e237d1cbdf19a5ca77495b13af9" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.close()</source>
          <target state="translated">ObjectInputStream.close()</target>
        </trans-unit>
        <trans-unit id="31a533a0de33b7b1e09a44f64ee05e69637238a0" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.defaultReadObject()</source>
          <target state="translated">ObjectInputStream.defaultReadObject()</target>
        </trans-unit>
        <trans-unit id="ae6812b1c9e1e67f009abad91032f879bd921e73" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.enableResolveObject()</source>
          <target state="translated">ObjectInputStream.enableResolveObject()</target>
        </trans-unit>
        <trans-unit id="271c4174e68e1694d44b73687882b4872d3ea340" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.read()</source>
          <target state="translated">ObjectInputStream.read()</target>
        </trans-unit>
        <trans-unit id="01a025c8a86ea474d63207414f1540b55e7903df" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readBoolean()</source>
          <target state="translated">ObjectInputStream.readBoolean()</target>
        </trans-unit>
        <trans-unit id="7c5a975d653c6a1fda2198c9a7af098d0c1bfa55" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readByte()</source>
          <target state="translated">ObjectInputStream.readByte()</target>
        </trans-unit>
        <trans-unit id="c2ac55233f02e9e1a00b5c0d9492a75be560286c" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readChar()</source>
          <target state="translated">ObjectInputStream.readChar()</target>
        </trans-unit>
        <trans-unit id="26ff910966cfb89411b6288c1533b790e6de050b" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readClassDescriptor()</source>
          <target state="translated">ObjectInputStream.readClassDescriptor()</target>
        </trans-unit>
        <trans-unit id="106285ee1ed52f2b2a3b26897cb9776ba147c77d" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readDouble()</source>
          <target state="translated">ObjectInputStream.readDouble()</target>
        </trans-unit>
        <trans-unit id="8e58e537ba62e390a9733df38e4e9583b2bf8749" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readFields()</source>
          <target state="translated">ObjectInputStream.readFields()</target>
        </trans-unit>
        <trans-unit id="4e06d4d9ace14a467d124a6677cd9eff34ffdc58" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readFloat()</source>
          <target state="translated">ObjectInputStream.readFloat()</target>
        </trans-unit>
        <trans-unit id="5b1c662c56e8f8632b3dfae3122b7f1d6f584d62" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readFully()</source>
          <target state="translated">ObjectInputStream.readFully()</target>
        </trans-unit>
        <trans-unit id="59f468ee4ab8c850e9949120fd8c4c5abb519dab" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readInt()</source>
          <target state="translated">ObjectInputStream.readInt()</target>
        </trans-unit>
        <trans-unit id="71c895e0048dee3ed4e1a8c92cb78c76d18cb43f" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readLine()</source>
          <target state="translated">ObjectInputStream.readLine()</target>
        </trans-unit>
        <trans-unit id="e501f928d87f9b567ff18fb682b60e22d9e24b6c" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readLong()</source>
          <target state="translated">ObjectInputStream.readLong()</target>
        </trans-unit>
        <trans-unit id="4904564ca2c726ad37230f3703e53b72ca51f6c7" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readObject()</source>
          <target state="translated">ObjectInputStream.readObject()</target>
        </trans-unit>
        <trans-unit id="ea05c742487328af68bdfbc5826ddea37b15e2a3" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readObjectOverride()</source>
          <target state="translated">ObjectInputStream.readObjectOverride()</target>
        </trans-unit>
        <trans-unit id="4ee33d690af15c77a4e863a9375a6d4c3e48b039" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readShort()</source>
          <target state="translated">ObjectInputStream.readShort()</target>
        </trans-unit>
        <trans-unit id="c635757463469471271fbdf778d0c40d385a9949" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readStreamHeader()</source>
          <target state="translated">ObjectInputStream.readStreamHeader()</target>
        </trans-unit>
        <trans-unit id="cacd11ef0cf4d6844d6a72b13a100c886f2d06cb" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readUTF()</source>
          <target state="translated">ObjectInputStream.readUTF()</target>
        </trans-unit>
        <trans-unit id="87836ffefd5990fc0fc8ecd7699c47d78acc84cc" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readUnshared()</source>
          <target state="translated">ObjectInputStream.readUnshared()</target>
        </trans-unit>
        <trans-unit id="e8da063152bfd4fe829f0babf9451e1535998bbc" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readUnsignedByte()</source>
          <target state="translated">ObjectInputStream.readUnsignedByte()</target>
        </trans-unit>
        <trans-unit id="3212dccedf547dd8be95ea022e8c338f27c81161" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.readUnsignedShort()</source>
          <target state="translated">ObjectInputStream.readUnsignedShort()</target>
        </trans-unit>
        <trans-unit id="89eae65b979b59b0e3a219a031f2efded85a8d3d" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.registerValidation()</source>
          <target state="translated">ObjectInputStream.registerValidation()</target>
        </trans-unit>
        <trans-unit id="b63c17b2709da48aa6d9bff1adbf81da8a28d69b" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.resolveClass()</source>
          <target state="translated">ObjectInputStream.resolveClass()</target>
        </trans-unit>
        <trans-unit id="7564186409ac0e4b71f81be56851828c9bc455c7" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.resolveObject()</source>
          <target state="translated">ObjectInputStream.resolveObject()</target>
        </trans-unit>
        <trans-unit id="5c48aae38fabf65afa75fbfc024ea52719eb13ea" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.resolveProxyClass()</source>
          <target state="translated">ObjectInputStream.resolveProxyClass()</target>
        </trans-unit>
        <trans-unit id="2c4066a7ecb46f193479e18eded2dc2ea24eed2a" translate="yes" xml:space="preserve">
          <source>ObjectInputStream.skipBytes()</source>
          <target state="translated">ObjectInputStream.skipBytes()</target>
        </trans-unit>
        <trans-unit id="1ee945d5cc0db43690d0ba638470b394273af8d4" translate="yes" xml:space="preserve">
          <source>ObjectInputValidation</source>
          <target state="translated">ObjectInputValidation</target>
        </trans-unit>
        <trans-unit id="e45bfeed8324b833ab541c3463621e842c2114f6" translate="yes" xml:space="preserve">
          <source>ObjectInputValidation.validateObject()</source>
          <target state="translated">ObjectInputValidation.validateObject()</target>
        </trans-unit>
        <trans-unit id="17faa1ff872e40c10d048c41205f8a2c1d705a2f" translate="yes" xml:space="preserve">
          <source>ObjectInstance</source>
          <target state="translated">ObjectInstance</target>
        </trans-unit>
        <trans-unit id="44fea9e031d26e797b2a69008bf724c9fb8bde02" translate="yes" xml:space="preserve">
          <source>ObjectInstance.equals()</source>
          <target state="translated">ObjectInstance.equals()</target>
        </trans-unit>
        <trans-unit id="1e32ecffc0ae66df9c155b33e4777144e5e52e3f" translate="yes" xml:space="preserve">
          <source>ObjectInstance.getClassName()</source>
          <target state="translated">ObjectInstance.getClassName()</target>
        </trans-unit>
        <trans-unit id="65e7dde5f4795bc9577895749564d6ddd87b1915" translate="yes" xml:space="preserve">
          <source>ObjectInstance.getObjectName()</source>
          <target state="translated">ObjectInstance.getObjectName()</target>
        </trans-unit>
        <trans-unit id="94b05914bd459f91e9e7f3a3dca9e8d4f170aecc" translate="yes" xml:space="preserve">
          <source>ObjectInstance.hashCode()</source>
          <target state="translated">ObjectInstance.hashCode()</target>
        </trans-unit>
        <trans-unit id="5bd81bf9b492e5ce3ee71debc3da8ff39cb2639a" translate="yes" xml:space="preserve">
          <source>ObjectInstance.toString()</source>
          <target state="translated">ObjectInstance.toString()</target>
        </trans-unit>
        <trans-unit id="25e8f332b20becafaa6ea2bf549ed52839115dde" translate="yes" xml:space="preserve">
          <source>ObjectMethods</source>
          <target state="translated">ObjectMethods</target>
        </trans-unit>
        <trans-unit id="f12e5f2033dfa9dc2494ec7a266b212e2ded7493" translate="yes" xml:space="preserve">
          <source>ObjectName</source>
          <target state="translated">ObjectName</target>
        </trans-unit>
        <trans-unit id="6429d4eb10983771419cc2f8e439d8e4702a3c40" translate="yes" xml:space="preserve">
          <source>ObjectName -&amp;gt; ArrayList of String (role names)</source>
          <target state="translated">ObjectName-&amp;gt; 문자열의 배열 목록 (역할 이름)</target>
        </trans-unit>
        <trans-unit id="d0b963096ce941a5a28db947b84efd6442d93de0" translate="yes" xml:space="preserve">
          <source>ObjectName of the corresponding relation MBean, or null if the relation is not an MBean.</source>
          <target state="translated">대응하는 관계 MBean ObjectName. 관계가 MBean가 아닌 경우는 null</target>
        </trans-unit>
        <trans-unit id="716ecead772827f72e2d3643f10dc403d39feb9f" translate="yes" xml:space="preserve">
          <source>ObjectName.apply()</source>
          <target state="translated">ObjectName.apply()</target>
        </trans-unit>
        <trans-unit id="72ccc60d6a44ed47892ca48e5a9569a62639427e" translate="yes" xml:space="preserve">
          <source>ObjectName.compareTo()</source>
          <target state="translated">ObjectName.compareTo()</target>
        </trans-unit>
        <trans-unit id="8392d20075c5649907d8777afce42296d369c0c3" translate="yes" xml:space="preserve">
          <source>ObjectName.equals()</source>
          <target state="translated">ObjectName.equals()</target>
        </trans-unit>
        <trans-unit id="9a651a1eef73f35393494f41a2cb04ab7bacf1d3" translate="yes" xml:space="preserve">
          <source>ObjectName.getCanonicalKeyPropertyListString()</source>
          <target state="translated">ObjectName.getCanonicalKeyPropertyListString()</target>
        </trans-unit>
        <trans-unit id="dc2e963c61c0c02b90cfb40287db0930819de72e" translate="yes" xml:space="preserve">
          <source>ObjectName.getCanonicalName()</source>
          <target state="translated">ObjectName.getCanonicalName()</target>
        </trans-unit>
        <trans-unit id="db3b2838cf2637489067283192a00a00d2595597" translate="yes" xml:space="preserve">
          <source>ObjectName.getDomain()</source>
          <target state="translated">ObjectName.getDomain()</target>
        </trans-unit>
        <trans-unit id="479f1d0418c25395da87bf1eb813774da085c289" translate="yes" xml:space="preserve">
          <source>ObjectName.getInstance()</source>
          <target state="translated">ObjectName.getInstance()</target>
        </trans-unit>
        <trans-unit id="ba0d09d35898ba4bf1b5a60dfed3c72bb97e06cc" translate="yes" xml:space="preserve">
          <source>ObjectName.getKeyProperty()</source>
          <target state="translated">ObjectName.getKeyProperty()</target>
        </trans-unit>
        <trans-unit id="c72ae8fd58c9b61722f9633bdb455789b0084f50" translate="yes" xml:space="preserve">
          <source>ObjectName.getKeyPropertyList()</source>
          <target state="translated">ObjectName.getKeyPropertyList()</target>
        </trans-unit>
        <trans-unit id="b90ac325e7d7a08b24c36b34d9eccadd41517980" translate="yes" xml:space="preserve">
          <source>ObjectName.getKeyPropertyListString()</source>
          <target state="translated">ObjectName.getKeyPropertyListString()</target>
        </trans-unit>
        <trans-unit id="ee2d3dbe5e7648b38c721503a04d4b06847cf572" translate="yes" xml:space="preserve">
          <source>ObjectName.hashCode()</source>
          <target state="translated">ObjectName.hashCode()</target>
        </trans-unit>
        <trans-unit id="e6dcd84eb97ac4d6a83f3a911d59ed67b2739f53" translate="yes" xml:space="preserve">
          <source>ObjectName.isDomainPattern()</source>
          <target state="translated">ObjectName.isDomainPattern()</target>
        </trans-unit>
        <trans-unit id="e9201fed975cc44b4e58c9d5a468084bcbf181e6" translate="yes" xml:space="preserve">
          <source>ObjectName.isPattern()</source>
          <target state="translated">ObjectName.isPattern()</target>
        </trans-unit>
        <trans-unit id="36930bcc6d40e7c26cfcb719c947f70dfdcee2bd" translate="yes" xml:space="preserve">
          <source>ObjectName.isPropertyListPattern()</source>
          <target state="translated">ObjectName.isPropertyListPattern()</target>
        </trans-unit>
        <trans-unit id="543fbc0c93cb4587a54a15103ae4f1b1fe339c8c" translate="yes" xml:space="preserve">
          <source>ObjectName.isPropertyPattern()</source>
          <target state="translated">ObjectName.isPropertyPattern()</target>
        </trans-unit>
        <trans-unit id="f5dcf8682339703a6cdc602c581437dda9a706fe" translate="yes" xml:space="preserve">
          <source>ObjectName.isPropertyValuePattern()</source>
          <target state="translated">ObjectName.isPropertyValuePattern()</target>
        </trans-unit>
        <trans-unit id="7689b81b20e1718b28143102e59bd23144b8eb27" translate="yes" xml:space="preserve">
          <source>ObjectName.quote()</source>
          <target state="translated">ObjectName.quote()</target>
        </trans-unit>
        <trans-unit id="dae8bfbcfa4ab5a1c424c14daec0f0b628cda465" translate="yes" xml:space="preserve">
          <source>ObjectName.setMBeanServer()</source>
          <target state="translated">ObjectName.setMBeanServer()</target>
        </trans-unit>
        <trans-unit id="e9196f3db0cc37d69b72e9fbb0eeaa3e4f8369fd" translate="yes" xml:space="preserve">
          <source>ObjectName.toString()</source>
          <target state="translated">ObjectName.toString()</target>
        </trans-unit>
        <trans-unit id="45c943e74911cfe1cd091cf3fd08d83ba6dd0f1c" translate="yes" xml:space="preserve">
          <source>ObjectName.unquote()</source>
          <target state="translated">ObjectName.unquote()</target>
        </trans-unit>
        <trans-unit id="31623460554683a0d18f48b007959e3a1d61f638" translate="yes" xml:space="preserve">
          <source>ObjectOutput</source>
          <target state="translated">ObjectOutput</target>
        </trans-unit>
        <trans-unit id="442091f1c411d56845a683c8d8c073ed8372639a" translate="yes" xml:space="preserve">
          <source>ObjectOutput extends the DataOutput interface to include writing of objects.</source>
          <target state="translated">ObjectOutput은 오브젝트 출력을 포함하도록 DataOutput 인터페이스를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="3b028b89b886084e54a2cee989d4d40dcbb51290" translate="yes" xml:space="preserve">
          <source>ObjectOutput extends the DataOutput interface to include writing of objects. DataOutput includes methods for output of primitive types, ObjectOutput extends that interface to include objects, arrays, and Strings.</source>
          <target state="translated">ObjectOutput은 오브젝트 출력을 포함하도록 DataOutput 인터페이스를 확장합니다. DataOutput에는 기본 유형의 출력을위한 메소드가 포함되어 있으며 ObjectOutput은 해당 인터페이스를 확장하여 오브젝트, 배열 및 문자열을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="b4480ae67d6cfd50192fd26a3937b096bb0014e3" translate="yes" xml:space="preserve">
          <source>ObjectOutput.close()</source>
          <target state="translated">ObjectOutput.close()</target>
        </trans-unit>
        <trans-unit id="47f134d3ac0ed8e4db89ce6f8a436841f11b8c23" translate="yes" xml:space="preserve">
          <source>ObjectOutput.flush()</source>
          <target state="translated">ObjectOutput.flush()</target>
        </trans-unit>
        <trans-unit id="688256638fb8e3a16d5a0aa803a0f2157ef116cd" translate="yes" xml:space="preserve">
          <source>ObjectOutput.write()</source>
          <target state="translated">ObjectOutput.write()</target>
        </trans-unit>
        <trans-unit id="1528668d7202983d50f4a299bbf7b0de7ec41e44" translate="yes" xml:space="preserve">
          <source>ObjectOutput.writeObject()</source>
          <target state="translated">ObjectOutput.writeObject()</target>
        </trans-unit>
        <trans-unit id="beeb355e54ca3f5e3bedafab743482b78805a98f" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream</source>
          <target state="translated">ObjectOutputStream</target>
        </trans-unit>
        <trans-unit id="9af987592c523e1069f53815b7085697a58a5ead" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream and ObjectInputStream can provide an application with persistent storage for graphs of objects when used with a FileOutputStream and FileInputStream respectively. ObjectInputStream is used to recover those objects previously serialized. Other uses include passing objects between hosts using a socket stream or for marshaling and unmarshaling arguments and parameters in a remote communication system.</source>
          <target state="translated">ObjectOutputStream 및 ObjectInputStream은 각각 FileOutputStream 및 FileInputStream과 함께 사용될 때 오브젝트의 그래프를위한 영구 스토리지를 응용 프로그램에 제공 할 수 있습니다. ObjectInputStream은 이전에 직렬화 된 해당 오브젝트를 복구하는 데 사용됩니다. 다른 용도로는 소켓 스트림을 사용하거나 원격 통신 시스템에서 인수 및 매개 변수를 마샬링 및 비 정렬 화하기 위해 호스트간에 오브젝트를 전달하는 것이 있습니다.</target>
        </trans-unit>
        <trans-unit id="334f8b31d2a79603b652a73a3236ff70a992944d" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream subclasses which override this method can only be constructed in security contexts possessing the &quot;enableSubclassImplementation&quot; SerializablePermission; any attempt to instantiate such a subclass without this permission will cause a SecurityException to be thrown.</source>
          <target state="translated">이 메소드를 오버라이드 (override)하는 ObjectOutputStream 서브 클래스는, &quot;enableSubclassImplementation&quot;SerializablePermission를 가지는 시큐리티 문맥에서만 구축 할 수 있습니다. 이 권한없이 이러한 서브 클래스를 인스턴스화하려고하면 SecurityException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f200a92a4e3da899f47a27a1f12b58b06b0ceb2e" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.PutField</source>
          <target state="translated">ObjectOutputStream.PutField</target>
        </trans-unit>
        <trans-unit id="99d255c19ade11ffe86c54e12c0dae9e91217473" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.PutField.put()</source>
          <target state="translated">ObjectOutputStream.PutField.put()</target>
        </trans-unit>
        <trans-unit id="b853819cca272c1f04508aa8cb6addb3a698d04a" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.PutField.write()</source>
          <target state="translated">ObjectOutputStream.PutField.write()</target>
        </trans-unit>
        <trans-unit id="03450966d3279fb11bf61bfcbf91aa2a9fb83038" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.annotateClass()</source>
          <target state="translated">ObjectOutputStream.annotateClass()</target>
        </trans-unit>
        <trans-unit id="9277ec4a03be68525a9f677e1060c8cf7418d306" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.annotateProxyClass()</source>
          <target state="translated">ObjectOutputStream.annotateProxyClass()</target>
        </trans-unit>
        <trans-unit id="f7c57133969cb87f3a98087e59d2324d18642155" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.close()</source>
          <target state="translated">ObjectOutputStream.close()</target>
        </trans-unit>
        <trans-unit id="9697daff48fe535a13f03ab776861c4226ca1ac0" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.defaultWriteObject()</source>
          <target state="translated">ObjectOutputStream.defaultWriteObject()</target>
        </trans-unit>
        <trans-unit id="bb183da4837a28cf32c0186f293d29bcba1b0052" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.drain()</source>
          <target state="translated">ObjectOutputStream.drain()</target>
        </trans-unit>
        <trans-unit id="53b9cc4df3143d717c2baa3ff961ff3a11b85fd4" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.enableReplaceObject()</source>
          <target state="translated">ObjectOutputStream.enableReplaceObject()</target>
        </trans-unit>
        <trans-unit id="82b85d156819e4eded5f35251f5680d899b16d30" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.flush()</source>
          <target state="translated">ObjectOutputStream.flush()</target>
        </trans-unit>
        <trans-unit id="0f9966ae0254299fb1cfe6fde3ed96742d789822" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.putFields()</source>
          <target state="translated">ObjectOutputStream.putFields()</target>
        </trans-unit>
        <trans-unit id="1854b30d037675077021731ce9a4c616febfeeb2" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.replaceObject()</source>
          <target state="translated">ObjectOutputStream.replaceObject()</target>
        </trans-unit>
        <trans-unit id="bf58430dc3887d3187d549ce41f6c4ce8abb9683" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.reset()</source>
          <target state="translated">ObjectOutputStream.reset()</target>
        </trans-unit>
        <trans-unit id="a134b52df0c926c9eadb3cb015ff13829a3cbba8" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.useProtocolVersion()</source>
          <target state="translated">ObjectOutputStream.useProtocolVersion()</target>
        </trans-unit>
        <trans-unit id="a413d28ea0995fbbbad8f7c95d0f91b16c8d8385" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.write()</source>
          <target state="translated">ObjectOutputStream.write()</target>
        </trans-unit>
        <trans-unit id="278275a9894e8715d5a46b31ff942a4559181c34" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.writeBoolean()</source>
          <target state="translated">ObjectOutputStream.writeBoolean()</target>
        </trans-unit>
        <trans-unit id="4f905fcf630037d6591e1314a27fdb4e6cb14be9" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.writeByte()</source>
          <target state="translated">ObjectOutputStream.writeByte()</target>
        </trans-unit>
        <trans-unit id="6e901f23d04fedc8f04460ac99cf37afc2f455d4" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.writeBytes()</source>
          <target state="translated">ObjectOutputStream.writeBytes()</target>
        </trans-unit>
        <trans-unit id="026aaf0366ccc2a53ba242b25761d0bc626cf73d" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.writeChar()</source>
          <target state="translated">ObjectOutputStream.writeChar()</target>
        </trans-unit>
        <trans-unit id="6446baa7257c46bf3433ad04803f68d78317b454" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.writeChars()</source>
          <target state="translated">ObjectOutputStream.writeChars()</target>
        </trans-unit>
        <trans-unit id="1e617a8ddcf9e94cd5e6c38974ddba1554f68c08" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.writeClassDescriptor()</source>
          <target state="translated">ObjectOutputStream.writeClassDescriptor()</target>
        </trans-unit>
        <trans-unit id="e00bb520350f54dcd54911d460b2eb9ecaf28ac6" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.writeDouble()</source>
          <target state="translated">ObjectOutputStream.writeDouble()</target>
        </trans-unit>
        <trans-unit id="fbaa99f47efb9e52aae50eb20fbb5b6895540580" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.writeFields()</source>
          <target state="translated">ObjectOutputStream.writeFields()</target>
        </trans-unit>
        <trans-unit id="f69144ee6ba5aaa95fa481902341bd32e14b7e4c" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.writeFloat()</source>
          <target state="translated">ObjectOutputStream.writeFloat()</target>
        </trans-unit>
        <trans-unit id="87596d7f38e297b7c9ac45a469b84207270c96cc" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.writeInt()</source>
          <target state="translated">ObjectOutputStream.writeInt()</target>
        </trans-unit>
        <trans-unit id="8bf448faeed04e74c96ec179dd82ec1b10ab0054" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.writeLong()</source>
          <target state="translated">ObjectOutputStream.writeLong()</target>
        </trans-unit>
        <trans-unit id="e78debf796352f648e620260ecb2c2a8bbc33fbb" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.writeObject()</source>
          <target state="translated">ObjectOutputStream.writeObject()</target>
        </trans-unit>
        <trans-unit id="352e5e74bdce90bc5ea4503899fc32be0f45f09e" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.writeObjectOverride()</source>
          <target state="translated">ObjectOutputStream.writeObjectOverride()</target>
        </trans-unit>
        <trans-unit id="8d5e8a6231bd5c96f7fd57fa0dc28af89ed7cdc0" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.writeShort()</source>
          <target state="translated">ObjectOutputStream.writeShort()</target>
        </trans-unit>
        <trans-unit id="b61206dc5705957e06115d3ab55c098eb50215e4" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.writeStreamHeader()</source>
          <target state="translated">ObjectOutputStream.writeStreamHeader()</target>
        </trans-unit>
        <trans-unit id="4615e2845f85e7113a307fa3f34525a959e1ab05" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.writeUTF()</source>
          <target state="translated">ObjectOutputStream.writeUTF()</target>
        </trans-unit>
        <trans-unit id="561b329dc09c5e487497c52ce8a294089a9d711e" translate="yes" xml:space="preserve">
          <source>ObjectOutputStream.writeUnshared()</source>
          <target state="translated">ObjectOutputStream.writeUnshared()</target>
        </trans-unit>
        <trans-unit id="58f6c102d2570d8e69cc31ca9126c60bd6f50f87" translate="yes" xml:space="preserve">
          <source>ObjectReference</source>
          <target state="translated">ObjectReference</target>
        </trans-unit>
        <trans-unit id="7d65be7f59897932e3f00126238224c7a6d1cc81" translate="yes" xml:space="preserve">
          <source>ObjectStreamClass</source>
          <target state="translated">ObjectStreamClass</target>
        </trans-unit>
        <trans-unit id="3459aa22ba2251dfb08a0bef906297bd6eb9b8bc" translate="yes" xml:space="preserve">
          <source>ObjectStreamClass.forClass()</source>
          <target state="translated">ObjectStreamClass.forClass()</target>
        </trans-unit>
        <trans-unit id="09a217e62ca19b7095e36b12dde86f43c7730bc5" translate="yes" xml:space="preserve">
          <source>ObjectStreamClass.getField()</source>
          <target state="translated">ObjectStreamClass.getField()</target>
        </trans-unit>
        <trans-unit id="075b6326dfe2cccf8057c5755289c553730a946f" translate="yes" xml:space="preserve">
          <source>ObjectStreamClass.getFields()</source>
          <target state="translated">ObjectStreamClass.getFields()</target>
        </trans-unit>
        <trans-unit id="f768814c61b861b3aad3aba7b3d182656d6d5a7c" translate="yes" xml:space="preserve">
          <source>ObjectStreamClass.getName()</source>
          <target state="translated">ObjectStreamClass.getName()</target>
        </trans-unit>
        <trans-unit id="5e4d33b954c11ec23c6e6d8eccb9f97b0aeab2bb" translate="yes" xml:space="preserve">
          <source>ObjectStreamClass.getSerialVersionUID()</source>
          <target state="translated">ObjectStreamClass.getSerialVersionUID()</target>
        </trans-unit>
        <trans-unit id="486fc836085d0bbd725705515798d6b391818647" translate="yes" xml:space="preserve">
          <source>ObjectStreamClass.lookup()</source>
          <target state="translated">ObjectStreamClass.lookup()</target>
        </trans-unit>
        <trans-unit id="d4d4c85c881154ee6108ccfb8ffaf03ba1339f1d" translate="yes" xml:space="preserve">
          <source>ObjectStreamClass.lookupAny()</source>
          <target state="translated">ObjectStreamClass.lookupAny()</target>
        </trans-unit>
        <trans-unit id="523940a2fa127a1c9667af8a2f2fac6a6b6e402b" translate="yes" xml:space="preserve">
          <source>ObjectStreamClass.toString()</source>
          <target state="translated">ObjectStreamClass.toString()</target>
        </trans-unit>
        <trans-unit id="422a38ebf52384d79370d382641d8027420baf01" translate="yes" xml:space="preserve">
          <source>ObjectStreamConstants</source>
          <target state="translated">ObjectStreamConstants</target>
        </trans-unit>
        <trans-unit id="df8c2dcca92b05a6acc45a4c1327385f07d2a14c" translate="yes" xml:space="preserve">
          <source>ObjectStreamException</source>
          <target state="translated">ObjectStreamException</target>
        </trans-unit>
        <trans-unit id="062f22772d956872731277821d3de4afb9f926fa" translate="yes" xml:space="preserve">
          <source>ObjectStreamField</source>
          <target state="translated">ObjectStreamField</target>
        </trans-unit>
        <trans-unit id="4202b8b62feadea7288baedf7a264a1e88446b41" translate="yes" xml:space="preserve">
          <source>ObjectStreamField.compareTo()</source>
          <target state="translated">ObjectStreamField.compareTo()</target>
        </trans-unit>
        <trans-unit id="965038634a75a52faa0ca90b841ad055772cd13e" translate="yes" xml:space="preserve">
          <source>ObjectStreamField.getName()</source>
          <target state="translated">ObjectStreamField.getName()</target>
        </trans-unit>
        <trans-unit id="de620dcdff89411b432ebd00089d5e2ea3e96954" translate="yes" xml:space="preserve">
          <source>ObjectStreamField.getOffset()</source>
          <target state="translated">ObjectStreamField.getOffset()</target>
        </trans-unit>
        <trans-unit id="484fb631559da3bba35b89ec9d1b7e61d867417e" translate="yes" xml:space="preserve">
          <source>ObjectStreamField.getType()</source>
          <target state="translated">ObjectStreamField.getType()</target>
        </trans-unit>
        <trans-unit id="9cc2d0ab80be5c6ad4c16ee51320ee614bf9b03d" translate="yes" xml:space="preserve">
          <source>ObjectStreamField.getTypeCode()</source>
          <target state="translated">ObjectStreamField.getTypeCode()</target>
        </trans-unit>
        <trans-unit id="138d98e8cb7e8ee22a1927472f57698c3a3b3dd4" translate="yes" xml:space="preserve">
          <source>ObjectStreamField.getTypeString()</source>
          <target state="translated">ObjectStreamField.getTypeString()</target>
        </trans-unit>
        <trans-unit id="bb44f0566dff8ac84d690dbbb3638fd0d0036aaa" translate="yes" xml:space="preserve">
          <source>ObjectStreamField.isPrimitive()</source>
          <target state="translated">ObjectStreamField.isPrimitive()</target>
        </trans-unit>
        <trans-unit id="f8c17dc91631e3dc553bbc27afffd714279a5274" translate="yes" xml:space="preserve">
          <source>ObjectStreamField.isUnshared()</source>
          <target state="translated">ObjectStreamField.isUnshared()</target>
        </trans-unit>
        <trans-unit id="9be95a96995d79080c848365a605877673c175eb" translate="yes" xml:space="preserve">
          <source>ObjectStreamField.setOffset()</source>
          <target state="translated">ObjectStreamField.setOffset()</target>
        </trans-unit>
        <trans-unit id="baf76bb0623c13005881ec17e10fcdc42a0c072e" translate="yes" xml:space="preserve">
          <source>ObjectStreamField.toString()</source>
          <target state="translated">ObjectStreamField.toString()</target>
        </trans-unit>
        <trans-unit id="6511579c113db7697e15ca4ad8fb5bd475669aad" translate="yes" xml:space="preserve">
          <source>ObjectView</source>
          <target state="translated">ObjectView</target>
        </trans-unit>
        <trans-unit id="a3c95219829b1b12ce2674f49df3a1a195407cfc" translate="yes" xml:space="preserve">
          <source>Object[]</source>
          <target state="translated">Object[]</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
