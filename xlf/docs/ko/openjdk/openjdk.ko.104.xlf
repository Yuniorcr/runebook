<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="9f94176502144d53f9b47819a2742a061514b473" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;String&lt;/code&gt; object represents an empty character sequence, or the first and last characters of character sequence represented by this &lt;code&gt;String&lt;/code&gt; object both have codes greater than &lt;code&gt;'\u0020'&lt;/code&gt; (the space character), then a reference to this &lt;code&gt;String&lt;/code&gt; object is returned.</source>
          <target state="translated">이 경우 &lt;code&gt;String&lt;/code&gt; 객체가 빈 문자 순서, 또는 이것에 의해 표현되는 문자 순서의 첫 번째와 마지막 문자를 나타내는 &lt;code&gt;String&lt;/code&gt; 객체를 모두보다 큰 코드가 &lt;code&gt;'\u0020'&lt;/code&gt; (공백 문자),이에 대한 참조 &lt;code&gt;String&lt;/code&gt; 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="8e661bd3fbcb9238d639e9f358a3c105fdd4e27d" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;String&lt;/code&gt; object represents an empty character sequence, or the first and last characters of character sequence represented by this &lt;code&gt;String&lt;/code&gt; object both have codes that are not space (as defined above), then a reference to this &lt;code&gt;String&lt;/code&gt; object is returned.</source>
          <target state="translated">If this &lt;code&gt;String&lt;/code&gt; object represents an empty character sequence, or the first and last characters of character sequence represented by this &lt;code&gt;String&lt;/code&gt; object both have codes that are not space (as defined above), then a reference to this &lt;code&gt;String&lt;/code&gt; object is returned.</target>
        </trans-unit>
        <trans-unit id="911e5c605977f7ff7f414a5a91d07f389358229f" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;String&lt;/code&gt; object represents an empty string, or if all characters in this string are &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;&lt;code&gt;white space&lt;/code&gt;&lt;/a&gt;, then an empty string is returned.</source>
          <target state="translated">If this &lt;code&gt;String&lt;/code&gt; object represents an empty string, or if all characters in this string are &lt;a href=&quot;character#isWhitespace(int)&quot;&gt; &lt;code&gt;white space&lt;/code&gt; &lt;/a&gt;, then an empty string is returned.</target>
        </trans-unit>
        <trans-unit id="326281a98cb22a9f3627a3782f07a151f6c0f6fc" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;String&lt;/code&gt; object represents an empty string, or if all characters in this string are &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;white space&lt;/a&gt;, then an empty string is returned.</source>
          <target state="translated">이 &lt;code&gt;String&lt;/code&gt; 객체가 빈 문자열을 나타내거나이 문자열의 모든 문자가 &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;공백&lt;/a&gt; 이면 빈 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="907b7706aa412262d6d1f186f1282aab8c1355b1" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;String&lt;/code&gt; object represents an empty string, or if all code points in this string are &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;&lt;code&gt;white space&lt;/code&gt;&lt;/a&gt;, then an empty string is returned.</source>
          <target state="translated">If this &lt;code&gt;String&lt;/code&gt; object represents an empty string, or if all code points in this string are &lt;a href=&quot;character#isWhitespace(int)&quot;&gt; &lt;code&gt;white space&lt;/code&gt; &lt;/a&gt;, then an empty string is returned.</target>
        </trans-unit>
        <trans-unit id="79aabe13e52ce846254941392982450b3f598b62" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;String&lt;/code&gt; object represents an empty string, or if all code points in this string are &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;white space&lt;/a&gt;, then an empty string is returned.</source>
          <target state="translated">이 &lt;code&gt;String&lt;/code&gt; 객체가 빈 문자열을 나타내거나이 문자열의 모든 코드 포인트가 &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;공백&lt;/a&gt; 이면 빈 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c35c025661a8df85760080b03beac96239abff5b" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;TextLayout&lt;/code&gt; has already been justified, an exception is thrown. If this &lt;code&gt;TextLayout&lt;/code&gt; object's justification ratio is zero, a &lt;code&gt;TextLayout&lt;/code&gt; identical to this &lt;code&gt;TextLayout&lt;/code&gt; is returned.</source>
          <target state="translated">If this &lt;code&gt;TextLayout&lt;/code&gt; has already been justified, an exception is thrown. If this &lt;code&gt;TextLayout&lt;/code&gt; object's justification ratio is zero, a &lt;code&gt;TextLayout&lt;/code&gt; identical to this &lt;code&gt;TextLayout&lt;/code&gt; is returned.</target>
        </trans-unit>
        <trans-unit id="adf903f3111a4dfc9f8e92b0b23326aa2d40a7d7" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;ZipFile&lt;/code&gt; has been subclassed and the &lt;code&gt;close&lt;/code&gt; method has been overridden, the &lt;code&gt;close&lt;/code&gt; method will be called by the finalization when &lt;code&gt;ZipFile&lt;/code&gt; is unreachable. But the subclasses should not depend on this specific implementation; the finalization is not reliable and the &lt;code&gt;finalize&lt;/code&gt; method is deprecated to be removed.</source>
          <target state="translated">If this &lt;code&gt;ZipFile&lt;/code&gt; has been subclassed and the &lt;code&gt;close&lt;/code&gt; method has been overridden, the &lt;code&gt;close&lt;/code&gt; method will be called by the finalization when &lt;code&gt;ZipFile&lt;/code&gt; is unreachable. But the subclasses should not depend on this specific implementation; the finalization is not reliable and the &lt;code&gt;finalize&lt;/code&gt; method is deprecated to be removed.</target>
        </trans-unit>
        <trans-unit id="0641d88a19fa03461ad937c4e8d60a3ebdde3009" translate="yes" xml:space="preserve">
          <source>If this CodeSource object was created using the &lt;a href=&quot;#%3Cinit%3E(java.net.URL,java.security.CodeSigner%5B%5D)&quot;&gt;&lt;code&gt;CodeSource(URL url, CodeSigner[] signers)&lt;/code&gt;&lt;/a&gt; constructor then its certificate chains are extracted and used to create an array of Certificate objects. Each signer certificate is followed by its supporting certificate chain (which may be empty). Each signer certificate and its supporting certificate chain is ordered bottom-to-top (i.e., with the signer certificate first and the (root) certificate authority last).</source>
          <target state="translated">If this CodeSource object was created using the &lt;a href=&quot;#%3Cinit%3E(java.net.URL,java.security.CodeSigner%5B%5D)&quot;&gt; &lt;code&gt;CodeSource(URL url, CodeSigner[] signers)&lt;/code&gt; &lt;/a&gt; constructor then its certificate chains are extracted and used to create an array of Certificate objects. Each signer certificate is followed by its supporting certificate chain (which may be empty). Each signer certificate and its supporting certificate chain is ordered bottom-to-top (i.e., with the signer certificate first and the (root) certificate authority last).</target>
        </trans-unit>
        <trans-unit id="0ed0d15694897962ee29941d8c146106102c788f" translate="yes" xml:space="preserve">
          <source>If this CodeSource object was created using the &lt;a href=&quot;#%3Cinit%3E(java.net.URL,java.security.cert.Certificate%5B%5D)&quot;&gt;&lt;code&gt;CodeSource(URL url, java.security.cert.Certificate[] certs)&lt;/code&gt;&lt;/a&gt; constructor then its certificate chains are extracted and used to create an array of CodeSigner objects. Note that only X.509 certificates are examined - all other certificate types are ignored.</source>
          <target state="translated">If this CodeSource object was created using the &lt;a href=&quot;#%3Cinit%3E(java.net.URL,java.security.cert.Certificate%5B%5D)&quot;&gt; &lt;code&gt;CodeSource(URL url, java.security.cert.Certificate[] certs)&lt;/code&gt; &lt;/a&gt; constructor then its certificate chains are extracted and used to create an array of CodeSigner objects. Note that only X.509 certificates are examined - all other certificate types are ignored.</target>
        </trans-unit>
        <trans-unit id="94372ce6dbad15dca713c930c5806a503901c516" translate="yes" xml:space="preserve">
          <source>If this CodeSource object was created using the &lt;a href=&quot;codesource#CodeSource-java.net.URL-java.security.CodeSigner:A-&quot;&gt;&lt;code&gt;CodeSource(URL url, CodeSigner[] signers)&lt;/code&gt;&lt;/a&gt; constructor then its certificate chains are extracted and used to create an array of Certificate objects. Each signer certificate is followed by its supporting certificate chain (which may be empty). Each signer certificate and its supporting certificate chain is ordered bottom-to-top (i.e., with the signer certificate first and the (root) certificate authority last).</source>
          <target state="translated">&lt;a href=&quot;codesource#CodeSource-java.net.URL-java.security.CodeSigner:A-&quot;&gt; &lt;code&gt;CodeSource(URL url, CodeSigner[] signers)&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여이 CodeSource 객체를 만든 경우 해당 인증서 체인이 추출되어 Certificate 객체 배열을 만드는 데 사용됩니다. 각 서명자 인증서 뒤에는 지원 인증서 체인 (비어있을 수 있음)이옵니다. 각 서명자 인증서 및 해당 지원 인증서 체인은 맨 아래에서 순서대로 주문됩니다 (즉, 서명자 인증서가 먼저 있고 (루트) 인증 기관이 마지막에 있음).</target>
        </trans-unit>
        <trans-unit id="ecab603cea1b392a04b99fd74cc5c16fc8600c78" translate="yes" xml:space="preserve">
          <source>If this CodeSource object was created using the &lt;a href=&quot;codesource#CodeSource-java.net.URL-java.security.cert.Certificate:A-&quot;&gt;&lt;code&gt;CodeSource(URL url, java.security.cert.Certificate[] certs)&lt;/code&gt;&lt;/a&gt; constructor then its certificate chains are extracted and used to create an array of CodeSigner objects. Note that only X.509 certificates are examined - all other certificate types are ignored.</source>
          <target state="translated">&lt;a href=&quot;codesource#CodeSource-java.net.URL-java.security.cert.Certificate:A-&quot;&gt; &lt;code&gt;CodeSource(URL url, java.security.cert.Certificate[] certs)&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여이 CodeSource 객체를 만든 경우 해당 인증서 체인이 추출되어 CodeSigner 객체의 배열을 만드는 데 사용됩니다. X.509 인증서 만 검사합니다. 다른 모든 인증서 유형은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="4e605e0e6fa6c10183464f9080e892b0e5d3fe36" translate="yes" xml:space="preserve">
          <source>If this Container is not a focus cycle root, the policy will be remembered, but will not be used or inherited by this or any other Containers until this Container is made a focus cycle root.</source>
          <target state="translated">이 컨테이너가 포커스주기 루트가 아닌 경우 정책이 기억되지만이 컨테이너가 포커스주기 루트가 될 때까지이 컨테이너 또는 다른 컨테이너에 의해 사용되거나 상속되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4340064742a9c485f2c6c279f6aee7ce3339a590" translate="yes" xml:space="preserve">
          <source>If this FileInputStream has been subclassed and the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method has been overridden, the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method will be called when the FileInputStream is unreachable. Otherwise, it is implementation specific how the resource cleanup described in &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; is performed.</source>
          <target state="translated">이 FileInputStream이 서브 클래 싱되고 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 메서드가 재정의 된 경우 FileInputStream에 연결할 수 없을 때 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 메서드가 호출됩니다. 그렇지 않으면 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 설명 된 리소스 정리 가 수행되는 방식이 구현에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="43680c89f10f44eef1d9f8b1810bca8a77fdf3cf" translate="yes" xml:space="preserve">
          <source>If this FileOutputStream has been subclassed and the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method has been overridden, the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method will be called when the FileInputStream is unreachable. Otherwise, it is implementation specific how the resource cleanup described in &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; is performed.</source>
          <target state="translated">이 FileOutputStream이 서브 클래 싱되고 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 메서드가 재정의 된 경우 FileInputStream에 연결할 수 없을 때 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 메서드가 호출됩니다. 그렇지 않으면 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 설명 된 리소스 정리 가 수행되는 방식이 구현에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="107ad55e095966d5579e393d582c1c9a341f8040" translate="yes" xml:space="preserve">
          <source>If this FileOutputStream has been subclassed and the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method has been overridden, the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method will be called when the FileOutputStream is unreachable. Otherwise, it is implementation specific how the resource cleanup described in &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; is performed.</source>
          <target state="translated">이 FileOutputStream이 서브 클래 싱되고 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 메서드가 재정의 된 경우 FileOutputStream에 연결할 수 없을 때 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 메서드가 호출됩니다. 그렇지 않으면 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 설명 된 리소스 정리 가 수행되는 방식이 구현에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="115bb1e8282eb709c8d2fef1809cf7522d3cb5c0" translate="yes" xml:space="preserve">
          <source>If this InetAddress was created with a host name, this host name will be remembered and returned; otherwise, a reverse name lookup will be performed and the result will be returned based on the system configured name lookup service. If a lookup of the name service is required, call &lt;a href=&quot;#getCanonicalHostName()&quot;&gt;&lt;code&gt;getCanonicalHostName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 InetAddress가 호스트 이름으로 생성 된 경우이 호스트 이름이 기억되고 반환됩니다. 그렇지 않으면 역방향 이름 조회가 수행되고 시스템에서 구성된 이름 조회 서비스를 기반으로 결과가 반환됩니다. 이름 서비스 조회가 필요한 경우 &lt;a href=&quot;#getCanonicalHostName()&quot;&gt; &lt;code&gt;getCanonicalHostName&lt;/code&gt; 을&lt;/a&gt; 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="87212e4e2a7f5242014dd7f84b673fda3009933f" translate="yes" xml:space="preserve">
          <source>If this InetAddress was created with a host name, this host name will be remembered and returned; otherwise, a reverse name lookup will be performed and the result will be returned based on the system configured name lookup service. If a lookup of the name service is required, call &lt;a href=&quot;inetaddress#getCanonicalHostName--&quot;&gt;&lt;code&gt;getCanonicalHostName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 InetAddress가 호스트 이름으로 생성 된 경우이 호스트 이름이 기억되고 반환됩니다. 그렇지 않으면 리버스 이름 검색이 수행되고 시스템 구성 이름 검색 서비스를 기반으로 결과가 반환됩니다. 이름 서비스를 찾아 &lt;a href=&quot;inetaddress#getCanonicalHostName--&quot;&gt; &lt;code&gt;getCanonicalHostName&lt;/code&gt; &lt;/a&gt; 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="8771b92415dc41144a3e4cc576f34f85f427b6e9" translate="yes" xml:space="preserve">
          <source>If this KeyPairGenerator has not been initialized explicitly, provider-specific defaults will be used for the size and other (algorithm-specific) values of the generated keys.</source>
          <target state="translated">이 KeyPairGenerator가 명시 적으로 초기화되지 않은 경우 생성 된 키의 크기 및 기타 (알고리즘 특정) 값에 공급자 별 기본값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dd80b9ee095b086c5f82414644de7ec8e7158a07" translate="yes" xml:space="preserve">
          <source>If this LDAP name is lexicographically lesser than obj, a negative number is returned. If this LDAP name is lexicographically greater than obj, a positive number is returned.</source>
          <target state="translated">이 LDAP 이름이 사전 순으로 obj보다 작은 경우 음수가 리턴됩니다. 이 LDAP 이름이 사전 순으로 obj보다 큰 경우 양수가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="93ce8760573543a1917584c2471805d594e30769" translate="yes" xml:space="preserve">
          <source>If this LoginModule's own authentication attempt succeeded (checked by retrieving the private state saved by the &lt;code&gt;login&lt;/code&gt; and &lt;code&gt;commit&lt;/code&gt; methods), then this method cleans up any state that was originally saved.</source>
          <target state="translated">이 LoginModule의 자체 인증 시도가 성공하면 ( &lt;code&gt;login&lt;/code&gt; 및 &lt;code&gt;commit&lt;/code&gt; 메서드로 저장된 개인 상태를 검색하여 확인 )이 메서드는 원래 저장된 모든 상태를 정리합니다.</target>
        </trans-unit>
        <trans-unit id="7befa2abe7017d542fcf35e09202738bf6f765b6" translate="yes" xml:space="preserve">
          <source>If this LoginModule's own authentication attempt succeeded (checked by retrieving the private state saved by the &lt;code&gt;login&lt;/code&gt; method), then this method associates a &lt;code&gt;Krb5Principal&lt;/code&gt; with the &lt;code&gt;Subject&lt;/code&gt; located in the &lt;code&gt;LoginModule&lt;/code&gt;. It adds Kerberos Credentials to the the Subject's private credentials set. If this LoginModule's own authentication attempted failed, then this method removes any state that was originally saved.</source>
          <target state="translated">이 LoginModule의 자체 인증 시도가 성공한 경우 ( &lt;code&gt;login&lt;/code&gt; 메서드에 의해 저장된 개인 상태를 검색하여 확인 됨 ),이 메서드는 &lt;code&gt;Krb5Principal&lt;/code&gt; 을 &lt;code&gt;LoginModule&lt;/code&gt; 에 있는 &lt;code&gt;Subject&lt;/code&gt; 와 연결합니다 . 주제의 개인 자격 증명 세트에 Kerberos 자격 증명을 추가합니다. 이 LoginModule의 자체 인증 시도가 실패한 경우이 메서드는 원래 저장된 모든 상태를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="eb3a4788c5d9fb1f0aea6c5dbe9b3795217c398e" translate="yes" xml:space="preserve">
          <source>If this LoginModule's own authentication attempt succeeded (checked by retrieving the private state saved by the &lt;code&gt;login&lt;/code&gt; method), then this method associates a &lt;code&gt;UnixPrincipal&lt;/code&gt; with the &lt;code&gt;Subject&lt;/code&gt; located in the &lt;code&gt;LoginModule&lt;/code&gt;. If this LoginModule's own authentication attempted failed, then this method removes any state that was originally saved.</source>
          <target state="translated">이 LoginModule의 자체 인증 시도가 성공한 경우 ( &lt;code&gt;login&lt;/code&gt; 메서드에 의해 저장된 개인 상태를 검색하여 확인 됨 )이 메서드는 &lt;code&gt;UnixPrincipal&lt;/code&gt; 을 &lt;code&gt;LoginModule&lt;/code&gt; 에 있는 &lt;code&gt;Subject&lt;/code&gt; 와 연결합니다 . 이 LoginModule의 자체 인증 시도가 실패한 경우이 메서드는 원래 저장된 모든 상태를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="267c8c8161a7959663bc76c6878ec874dae12a43" translate="yes" xml:space="preserve">
          <source>If this LoginModule's own authentication attempt succeeded (checked by retrieving the private state saved by the &lt;code&gt;login&lt;/code&gt; method), then this method associates a &lt;code&gt;X500Principal&lt;/code&gt; for the subject distinguished name of the first certificate in the alias's credentials in the subject's principals,the alias's certificate path in the subject's public credentials, and a &lt;code&gt;X500PrivateCredential&lt;/code&gt; whose certificate is the first certificate in the alias's certificate path and whose private key is the alias's private key in the subject's private credentials. If this LoginModule's own authentication attempted failed, then this method removes any state that was originally saved.</source>
          <target state="translated">이 LoginModule의 자체 인증 시도가 성공한 경우 ( &lt;code&gt;login&lt;/code&gt; 방법으로 저장된 개인 상태를 검색하여 확인 )이 방법 은 주체의 주체에있는 별칭의 자격 증명에있는 첫 번째 인증서의 주체 고유 이름에 대해 &lt;code&gt;X500Principal&lt;/code&gt; 을 연결합니다 . 주체의 공용 자격 증명 및 인증서가 별칭의 인증서 경로에있는 첫 번째 인증서이고 개인 키가 주체의 개인 자격 증명에있는 별칭의 개인 키인 &lt;code&gt;X500PrivateCredential&lt;/code&gt; . 이 LoginModule의 자체 인증 시도가 실패한 경우이 메서드는 원래 저장된 모든 상태를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="367a3e2df4b860110bef3589ba636ae8dbd15a68" translate="yes" xml:space="preserve">
          <source>If this LoginModule's own authentication attempt succeeded (checked by retrieving the private state saved by the &lt;code&gt;login&lt;/code&gt; method), then this method associates an &lt;code&gt;LdapPrincipal&lt;/code&gt; and one or more &lt;code&gt;UserPrincipal&lt;/code&gt;s with the &lt;code&gt;Subject&lt;/code&gt; located in the &lt;code&gt;LoginModule&lt;/code&gt;. If this LoginModule's own authentication attempted failed, then this method removes any state that was originally saved.</source>
          <target state="translated">이 LoginModule의 자체 인증 시도가 성공한 경우 ( &lt;code&gt;login&lt;/code&gt; 메서드에 의해 저장된 개인 상태를 검색하여 확인 됨 ),이 메서드는 &lt;code&gt;LdapPrincipal&lt;/code&gt; 및 하나 이상의 &lt;code&gt;UserPrincipal&lt;/code&gt; 을 &lt;code&gt;LoginModule&lt;/code&gt; 에 있는 &lt;code&gt;Subject&lt;/code&gt; 와 연결합니다 . 이 LoginModule의 자체 인증 시도가 실패한 경우이 메서드는 원래 저장된 모든 상태를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="f6337052f3e086791b9360f545e9101bb5279cf3" translate="yes" xml:space="preserve">
          <source>If this LoginModule's own authentication attempt succeeded (checked by retrieving the private state saved by the &lt;code&gt;login&lt;/code&gt; method), then this method associates relevant Principals and Credentials with the &lt;code&gt;Subject&lt;/code&gt; located in the &lt;code&gt;LoginModule&lt;/code&gt;. If this LoginModule's own authentication attempted failed, then this method removes/destroys any state that was originally saved.</source>
          <target state="translated">이 LoginModule 자신의 인증 시도가 성공한 경우 ( &lt;code&gt;login&lt;/code&gt; 방법으로 저장된 개인 상태를 검색하여 확인 ),이 방법은 관련 사용자 및 신임 정보를 &lt;code&gt;LoginModule&lt;/code&gt; 에 있는 &lt;code&gt;Subject&lt;/code&gt; 와 연관시킵니다 . 이 LoginModule 자체의 인증이 실패했을 경우,이 메소드는 원래 저장된 상태를 삭제 / 파기합니다.</target>
        </trans-unit>
        <trans-unit id="3716aa5ec52b6451d91dd4faccb2a589a6929e5f" translate="yes" xml:space="preserve">
          <source>If this LoginModule's own authentication attempt succeeded (checked by retrieving the private state saved by the &lt;code&gt;login&lt;/code&gt; method), then this method associates some number of various &lt;code&gt;Principal&lt;/code&gt;s with the &lt;code&gt;Subject&lt;/code&gt; located in the &lt;code&gt;LoginModuleContext&lt;/code&gt;. If this LoginModule's own authentication attempted failed, then this method removes any state that was originally saved.</source>
          <target state="translated">이 LoginModule의 자체 인증 시도가 성공하면 ( &lt;code&gt;login&lt;/code&gt; 메소드에 의해 저장된 개인 상태를 검색하여 확인 됨 ),이 메소드는 다양한 &lt;code&gt;Principal&lt;/code&gt; 을 &lt;code&gt;LoginModuleContext&lt;/code&gt; 에 있는 &lt;code&gt;Subject&lt;/code&gt; 와 연관시킵니다 . 이 LoginModule의 자체 인증 시도가 실패한 경우이 메서드는 원래 저장된 모든 상태를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="6b0c6b5c94882ad8131434b0393b17deee36d8cd" translate="yes" xml:space="preserve">
          <source>If this LoginModule's own authentication attempt succeeded (checked by retrieving the private state saved by the &lt;code&gt;login&lt;/code&gt; method), then this method cleans up any state that was originally saved.</source>
          <target state="translated">이 LoginModule 자신의 인증 시도가 성공한 경우 ( &lt;code&gt;login&lt;/code&gt; 방법으로 저장된 개인 상태를 검색하여 확인 )이 방법은 원래 저장된 상태를 정리합니다.</target>
        </trans-unit>
        <trans-unit id="999e624829675b38f4ee0955ec2760e04239d27a" translate="yes" xml:space="preserve">
          <source>If this LoginModule's own authentication attempt succeeded (the importing of the Unix authentication information succeeded), then this method associates the Unix Principals with the &lt;code&gt;Subject&lt;/code&gt; currently tied to the &lt;code&gt;LoginModule&lt;/code&gt;. If this LoginModule's authentication attempted failed, then this method removes any state that was originally saved.</source>
          <target state="translated">이 LoginModule의 자체 인증 시도가 성공한 경우 (Unix 인증 정보 가져 오기 성공),이 메서드는 Unix Principal을 현재 &lt;code&gt;LoginModule&lt;/code&gt; 에 연결된 &lt;code&gt;Subject&lt;/code&gt; 와 연결합니다 . 이 LoginModule의 인증 시도가 실패하면이 메서드는 원래 저장된 모든 상태를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="e09a41ae608a70b663b4e5f1ef7469b114140b78" translate="yes" xml:space="preserve">
          <source>If this Source object is used to process a stylesheet, normally setSystemId should also be called, so that relative URL references can be resolved.</source>
          <target state="translated">이 Source 개체를 사용하여 스타일 시트를 처리하는 경우 일반적으로 setSystemId도 호출해야 상대 URL 참조를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29a69979687e0c76a3bd5d545980490d1ceae072" translate="yes" xml:space="preserve">
          <source>If this Spliterator is &lt;a href=&quot;#ORDERED&quot;&gt;&lt;code&gt;ORDERED&lt;/code&gt;&lt;/a&gt;, the returned Spliterator must cover a strict prefix of the elements.</source>
          <target state="translated">이 Spliterator가 &lt;a href=&quot;#ORDERED&quot;&gt; &lt;code&gt;ORDERED&lt;/code&gt; &lt;/a&gt; 인 경우 반환 된 Spliterator는 요소의 엄격한 접두사를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="88283112521d63d534dc9a4df555e7375d62caf1" translate="yes" xml:space="preserve">
          <source>If this Spliterator is &lt;a href=&quot;#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt; and has not yet been partially traversed or split, or this Spliterator is &lt;a href=&quot;#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt; and has not yet been partially traversed, this estimate must be an accurate count of elements that would be encountered by a complete traversal. Otherwise, this estimate may be arbitrarily inaccurate, but must decrease as specified across invocations of &lt;a href=&quot;#trySplit()&quot;&gt;&lt;code&gt;trySplit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 Spliterator 인 경우 &lt;a href=&quot;#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; &lt;/a&gt; 아직 부분적으로 통과 또는 분할되지 않았거나이 Spliterator입니다 &lt;a href=&quot;#SUBSIZED&quot;&gt; &lt;code&gt;SUBSIZED&lt;/code&gt; &lt;/a&gt; 아직 부분적으로 통과되지 않은,이 예상은 완전한 탐색에 의해 발생 될 요소의 정확한 계산해야합니다. 그렇지 않으면이 추정값이 임의로 부정확 할 수 있지만 &lt;a href=&quot;#trySplit()&quot;&gt; &lt;code&gt;trySplit()&lt;/code&gt; &lt;/a&gt; 호출에서 지정된대로 감소해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c2e88106c6c744ebfa727aad7f15154d6461aeae" translate="yes" xml:space="preserve">
          <source>If this Spliterator is &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;ORDERED&lt;/code&gt;&lt;/a&gt;, the returned Spliterator must cover a strict prefix of the elements.</source>
          <target state="translated">이 Spliterator가 &lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;ORDERED&lt;/code&gt; &lt;/a&gt; 인 경우 리턴 된 Spliterator는 요소의 엄격한 접 두부를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="fb9e47f7f86d1768c1633e48cf94673a67f3b07f" translate="yes" xml:space="preserve">
          <source>If this Spliterator is &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, the returned Spliterator must cover a strict prefix of the elements.</source>
          <target state="translated">이 Spliterator가 &lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt; 인 경우 반환 된 Spliterator는 요소의 엄격한 접두사를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="dc3d02811da7cd52f8f2143d8108066a5174a2bd" translate="yes" xml:space="preserve">
          <source>If this Spliterator is &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt; and has not yet been partially traversed or split, or this Spliterator is &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt; and has not yet been partially traversed, this estimate must be an accurate count of elements that would be encountered by a complete traversal. Otherwise, this estimate may be arbitrarily inaccurate, but must decrease as specified across invocations of &lt;a href=&quot;spliterator#trySplit--&quot;&gt;&lt;code&gt;trySplit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 Spliterator 인 경우 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; &lt;/a&gt; 아직 부분적으로 통과 또는 분할되지 않았거나이 Spliterator입니다 &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;SUBSIZED&lt;/code&gt; &lt;/a&gt; 아직 부분적으로 통과되지 않은,이 예상은 완전한 탐색에 의해 발생 될 요소의 정확한 계산해야합니다. 그렇지 않으면이 추정값이 임의로 부정확 할 수 있지만 &lt;a href=&quot;spliterator#trySplit--&quot;&gt; &lt;code&gt;trySplit()&lt;/code&gt; &lt;/a&gt; 호출에서 지정한대로 감소해야합니다 .</target>
        </trans-unit>
        <trans-unit id="79f3ba36aca5b08bf5745ff2e336fc66b3d69907" translate="yes" xml:space="preserve">
          <source>If this Spliterator is &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and has not yet been partially traversed or split, or this Spliterator is &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt; and has not yet been partially traversed, this estimate must be an accurate count of elements that would be encountered by a complete traversal. Otherwise, this estimate may be arbitrarily inaccurate, but must decrease as specified across invocations of &lt;a href=&quot;spliterator#trySplit()&quot;&gt;&lt;code&gt;Spliterator.trySplit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 Spliterator가 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; 이고 아직 부분적으로 순회 또는 분할 되지 않았 &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt; Spliterator가 Spliterator.SUBSIZED 이고 아직 부분적으로 순회되지 않은 경우,이 추정치는 전체 순회에서 만날 수있는 정확한 요소 수 여야합니다. 그렇지 않으면이 추정값이 임의로 부정확 할 수 있지만 &lt;a href=&quot;spliterator#trySplit()&quot;&gt; &lt;code&gt;Spliterator.trySplit()&lt;/code&gt; &lt;/a&gt; 호출에서 지정된대로 감소해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f10f115293acf7405775035800014677ebc0f036" translate="yes" xml:space="preserve">
          <source>If this Spliterator is &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and has not yet been partially traversed or split, or this Spliterator is &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt; and has not yet been partially traversed, this estimate must be an accurate count of elements that would be encountered by a complete traversal. Otherwise, this estimate may be arbitrarily inaccurate, but must decrease as specified across invocations of &lt;a href=&quot;spliterator#trySplit--&quot;&gt;&lt;code&gt;Spliterator.trySplit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 스플리터가 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; 이고 아직 부분적으로 순회 또는 분할 되지 않았 &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt; 스플리터가 Spliterator.SUBSIZED 이고 아직 부분적으로 순회되지 않은 경우,이 추정값은 전체 순회가 발생할 정확한 요소 수 여야합니다. 그렇지 않으면이 추정값이 임의로 부정확 할 수 있지만 &lt;a href=&quot;spliterator#trySplit--&quot;&gt; &lt;code&gt;Spliterator.trySplit()&lt;/code&gt; &lt;/a&gt; 호출에서 지정한대로 감소해야합니다 .</target>
        </trans-unit>
        <trans-unit id="682bc010d06e54be90f9f68acd4412d80bea539d" translate="yes" xml:space="preserve">
          <source>If this Spliterator's source is &lt;a href=&quot;#SORTED&quot;&gt;&lt;code&gt;SORTED&lt;/code&gt;&lt;/a&gt; by a &lt;a href=&quot;comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt;, returns that &lt;code&gt;Comparator&lt;/code&gt;.</source>
          <target state="translated">이 Spliterator의 소스가되면 &lt;a href=&quot;#SORTED&quot;&gt; &lt;code&gt;SORTED&lt;/code&gt; &lt;/a&gt; a로 &lt;a href=&quot;comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt; , 반환하는 &lt;code&gt;Comparator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="905207a3af8d7d49514ef82f0871a4373713e621" translate="yes" xml:space="preserve">
          <source>If this Spliterator's source is &lt;a href=&quot;#SORTED&quot;&gt;&lt;code&gt;SORTED&lt;/code&gt;&lt;/a&gt; by a &lt;a href=&quot;comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt;, returns that &lt;code&gt;Comparator&lt;/code&gt;. If the source is &lt;code&gt;SORTED&lt;/code&gt; in &lt;a href=&quot;../lang/comparable&quot;&gt;natural order&lt;/a&gt;, returns &lt;code&gt;null&lt;/code&gt;. Otherwise, if the source is not &lt;code&gt;SORTED&lt;/code&gt;, throws &lt;a href=&quot;../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 Spliterator의 소스가되면 &lt;a href=&quot;#SORTED&quot;&gt; &lt;code&gt;SORTED&lt;/code&gt; &lt;/a&gt; a로 &lt;a href=&quot;comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt; , 반환하는 &lt;code&gt;Comparator&lt;/code&gt; . 소스가되면 &lt;code&gt;SORTED&lt;/code&gt; 에 &lt;a href=&quot;../lang/comparable&quot;&gt;자연 순서&lt;/a&gt; , 반환 &lt;code&gt;null&lt;/code&gt; . 소스가되지 않는 경우 그렇지 않으면, &lt;code&gt;SORTED&lt;/code&gt; , 발생 &lt;a href=&quot;../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; 이는&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f60f6f6cceac6f24471b339df70a79fb087d77de" translate="yes" xml:space="preserve">
          <source>If this Spliterator's source is &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;SORTED&lt;/code&gt;&lt;/a&gt; by a &lt;a href=&quot;comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt;, returns that &lt;code&gt;Comparator&lt;/code&gt;. If the source is &lt;code&gt;SORTED&lt;/code&gt; in &lt;a href=&quot;../lang/comparable&quot;&gt;natural order&lt;/a&gt;, returns &lt;code&gt;null&lt;/code&gt;. Otherwise, if the source is not &lt;code&gt;SORTED&lt;/code&gt;, throws &lt;a href=&quot;../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 Spliterator의 소스가 &lt;a href=&quot;comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; 에&lt;/a&gt; 의해 &lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;SORTED&lt;/code&gt; 인&lt;/a&gt; 경우 , 그 &lt;code&gt;Comparator&lt;/code&gt; 를 돌려줍니다 . 소스가 &lt;a href=&quot;../lang/comparable&quot;&gt;자연 순서대로 &lt;/a&gt; &lt;code&gt;SORTED&lt;/code&gt; 된 경우 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 소스가되지 않는 경우 그렇지 않으면, &lt;code&gt;SORTED&lt;/code&gt; , 발생 &lt;a href=&quot;../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; 이는&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6674dc0f86ff9e9b4b4c5a389e36f2e0dc71b59a" translate="yes" xml:space="preserve">
          <source>If this Toolkit is not a headless implementation and if they exist, service providers of &lt;a href=&quot;../../javax/accessibility/accessibilityprovider&quot;&gt;&lt;code&gt;AccessibilityProvider&lt;/code&gt;&lt;/a&gt; will be loaded if specified by the system property &lt;code&gt;javax.accessibility.assistive_technologies&lt;/code&gt;.</source>
          <target state="translated">이 툴킷이 헤드리스 구현이 아니고 존재하는 경우 서비스 제공 업체는 &lt;a href=&quot;../../javax/accessibility/accessibilityprovider&quot;&gt; &lt;code&gt;AccessibilityProvider&lt;/code&gt; &lt;/a&gt;하는 경우 시스템 속성 &lt;code&gt;javax.accessibility.assistive_technologies&lt;/code&gt; 에서 지정한 경우 AccessibilityProvider의가로드됩니다.</target>
        </trans-unit>
        <trans-unit id="1d47d9dbaa7d1cd77d733d9036821dd30adccdd2" translate="yes" xml:space="preserve">
          <source>If this URI does not contain any characters in the</source>
          <target state="translated">이 URI에 문자가 포함되어 있지 않은 경우</target>
        </trans-unit>
        <trans-unit id="953276a9eb7a662bc1d17295c7e9ca3ca9dc9fe3" translate="yes" xml:space="preserve">
          <source>If this URI is opaque, or if its path is already in normal form, then this URI is returned. Otherwise a new URI is constructed that is identical to this URI except that its path is computed by normalizing this URI's path in a manner consistent with &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt;, section 5.2, step 6, sub-steps c through f; that is:</source>
          <target state="translated">이 URI가 불투명하거나 해당 경로가 이미 일반 형식 인 경우이 URI가 반환됩니다. 그렇지 않으면 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt; , 섹션 5.2, 단계 6, 하위 단계 c-f 와 일치하는 방식으로이 URI 경로를 정규화하여 경로를 계산한다는 점을 제외하고는이 URI와 동일한 새 URI가 구성됩니다 . 그건:</target>
        </trans-unit>
        <trans-unit id="4104f8730f3d53dec073893189e92e03af85a66a" translate="yes" xml:space="preserve">
          <source>If this URI is opaque, or if its path is already in normal form, then this URI is returned. Otherwise a new URI is constructed that is identical to this URI except that its path is computed by normalizing this URI's path in a manner consistent with &lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt;, section 5.2, step 6, sub-steps c through f; that is:</source>
          <target state="translated">이 URI가 불투명하거나 경로가 이미 일반 형식이면이 URI가 반환됩니다. 그렇지 않으면 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt; , 섹션 5.2, 6 단계, 하위 단계 c ~ f 와 일치하는 방식으로이 URI의 경로를 정규화하여 경로가 계산된다는 점을 제외하면이 URI와 동일한 새 URI가 구성됩니다 . 그건:</target>
        </trans-unit>
        <trans-unit id="ef183e3c97a706cf2aab485f3b25ca02123979b8" translate="yes" xml:space="preserve">
          <source>If this URI was created by invoking one of the constructors in this class then a string equivalent to the original input string, or to the string computed from the originally-given components, as appropriate, is returned. Otherwise this URI was created by normalization, resolution, or relativization, and so a string is constructed from this URI's components according to the rules specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt;, section 5.2, step 7.</source>
          <target state="translated">이 클래스의 생성자 중 하나를 호출하여이 URI를 작성한 경우 원래 입력 문자열 또는 원래 제공된 컴포넌트에서 계산 된 문자열에 해당하는 문자열이 리턴됩니다. 그렇지 않으면이 URI는 정규화, 분석 또는 재배치에 의해 작성되므로 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt; , 섹션 5.2, 7 단계에 지정된 규칙에 따라이 URI의 컴포넌트에서 문자열이 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="8da6353d94d3d7fb8fc7ebd06dea656256e66a91" translate="yes" xml:space="preserve">
          <source>If this URI was created by invoking one of the constructors in this class then a string equivalent to the original input string, or to the string computed from the originally-given components, as appropriate, is returned. Otherwise this URI was created by normalization, resolution, or relativization, and so a string is constructed from this URI's components according to the rules specified in &lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt;, section 5.2, step 7.</source>
          <target state="translated">이 URI가이 클래스의 생성자 중 하나를 호출하여 생성 된 경우 원래 입력 문자열 또는 원래 제공된 구성 요소에서 계산 된 문자열에 해당하는 문자열이 적절하게 반환됩니다. 그렇지 않으면이 URI가 정규화, 확인 또는 상대화에 의해 생성되었으므로 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt; , 섹션 5.2, 7 단계에 지정된 규칙에 따라이 URI의 구성 요소에서 문자열이 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="35a608d401f58e4ebbe22c45677516aed01211dc" translate="yes" xml:space="preserve">
          <source>If this URI's authority component has already been recognized as being server-based then it will already have been parsed into user-information, host, and port components. In this case, or if this URI has no authority component, this method simply returns this URI.</source>
          <target state="translated">이 URI의 권한 구성 요소가 이미 서버 기반으로 인식 된 경우, 이미 사용자 정보, 호스트 및 포트 구성 요소로 구문 분석 된 것입니다. 이 경우 또는이 URI에 권한 컴포넌트가없는 경우이 메소드는 단순히이 URI를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="10af9a44e99bb61805a131e639458b07bd84921d" translate="yes" xml:space="preserve">
          <source>If this Window is visible, brings this Window to the front and may make it the focused Window.</source>
          <target state="translated">이 창이 표시되면이 창을 맨 앞으로 가져와 포커스가있는 창으로 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6e5240230eb6160b2ea5c94b7d9fadcdd61dfd5" translate="yes" xml:space="preserve">
          <source>If this Window is visible, sends this Window to the back and may cause it to lose focus or activation if it is the focused or active Window.</source>
          <target state="translated">이 창이 표시되면이 창을 뒤로 보내고 포커스가 있거나 활성 인 창인 경우 활성화를 잃을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef9fe6d6f3003383c86e1f86ad295780a616846e" translate="yes" xml:space="preserve">
          <source>If this abstract pathname does not denote a directory, then this method returns &lt;code&gt;null&lt;/code&gt;. Otherwise an array of &lt;code&gt;File&lt;/code&gt; objects is returned, one for each file or directory in the directory. Pathnames denoting the directory itself and the directory's parent directory are not included in the result. Each resulting abstract pathname is constructed from this abstract pathname using the &lt;a href=&quot;#%3Cinit%3E(java.io.File,java.lang.String)&quot;&gt;&lt;code&gt;File(File,&amp;nbsp;String)&lt;/code&gt;&lt;/a&gt; constructor. Therefore if this pathname is absolute then each resulting pathname is absolute; if this pathname is relative then each resulting pathname will be relative to the same directory.</source>
          <target state="translated">이 추상 경로 이름이 디렉토리를 나타내지 않으면이 메서드는 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 그렇지 않으면 디렉토리의 각 파일 또는 디렉토리에 대해 하나씩 &lt;code&gt;File&lt;/code&gt; 객체 의 배열 이 반환됩니다. 디렉토리 자체와 디렉토리의 상위 디렉토리를 나타내는 경로 이름은 결과에 포함되지 않습니다. 각 결과 추상 경로 이름은 &lt;a href=&quot;#%3Cinit%3E(java.io.File,java.lang.String)&quot;&gt; &lt;code&gt;File(File,&amp;nbsp;String)&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여이 추상 경로 이름에서 구성됩니다. 따라서이 경로 이름이 절대이면 각 결과 경로 이름은 절대입니다. 이 경로 이름이 상대적이면 각 결과 경로 이름은 동일한 디렉토리에 상대적입니다.</target>
        </trans-unit>
        <trans-unit id="f6747f06730f4f2cd3ccc7aa43e049d9e46fd3b4" translate="yes" xml:space="preserve">
          <source>If this abstract pathname does not denote a directory, then this method returns &lt;code&gt;null&lt;/code&gt;. Otherwise an array of &lt;code&gt;File&lt;/code&gt; objects is returned, one for each file or directory in the directory. Pathnames denoting the directory itself and the directory's parent directory are not included in the result. Each resulting abstract pathname is constructed from this abstract pathname using the &lt;a href=&quot;file#File-java.io.File-java.lang.String-&quot;&gt;&lt;code&gt;File(File,&amp;nbsp;String)&lt;/code&gt;&lt;/a&gt; constructor. Therefore if this pathname is absolute then each resulting pathname is absolute; if this pathname is relative then each resulting pathname will be relative to the same directory.</source>
          <target state="translated">이 추상 패스 명이 디렉토리를 나타내지 않는 경우,이 메소드는 &lt;code&gt;null&lt;/code&gt; 를 돌려 줍니다 . 그렇지 않으면 디렉토리의 각 파일 또는 디렉토리마다 하나씩 &lt;code&gt;File&lt;/code&gt; 객체 배열 이 반환됩니다. 디렉토리 자체를 나타내는 경로 이름과 디렉토리의 상위 디렉토리는 결과에 포함되지 않습니다. 각각의 결과 추상 경로 이름은 &lt;a href=&quot;file#File-java.io.File-java.lang.String-&quot;&gt; &lt;code&gt;File(File,&amp;nbsp;String)&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여이 추상 경로 이름으로 구성됩니다. 따라서이 경로 이름이 절대이면 각 결과 경로 이름은 절대입니다. 이 경로 이름이 상대적이면 각 결과 경로 이름은 동일한 디렉토리에 상대적입니다.</target>
        </trans-unit>
        <trans-unit id="0a706980eb4f663347a3cb237daa9264b98ba23c" translate="yes" xml:space="preserve">
          <source>If this abstract pathname does not denote a directory, then this method returns &lt;code&gt;null&lt;/code&gt;. Otherwise an array of strings is returned, one for each file or directory in the directory. Names denoting the directory itself and the directory's parent directory are not included in the result. Each string is a file name rather than a complete path.</source>
          <target state="translated">If this abstract pathname does not denote a directory, then this method returns &lt;code&gt;null&lt;/code&gt; . Otherwise an array of strings is returned, one for each file or directory in the directory. Names denoting the directory itself and the directory's parent directory are not included in the result. Each string is a file name rather than a complete path.</target>
        </trans-unit>
        <trans-unit id="5a33b76522577e69900c3545cb9ba6966bcd1873" translate="yes" xml:space="preserve">
          <source>If this abstract pathname is already absolute, then the pathname string is simply returned as if by the &lt;a href=&quot;#getPath()&quot;&gt;&lt;code&gt;getPath()&lt;/code&gt;&lt;/a&gt; method. If this abstract pathname is the empty abstract pathname then the pathname string of the current user directory, which is named by the system property &lt;code&gt;user.dir&lt;/code&gt;, is returned. Otherwise this pathname is resolved in a system-dependent way. On UNIX systems, a relative pathname is made absolute by resolving it against the current user directory. On Microsoft Windows systems, a relative pathname is made absolute by resolving it against the current directory of the drive named by the pathname, if any; if not, it is resolved against the current user directory.</source>
          <target state="translated">이 추상 경로 이름이 이미 절대적이면 경로 이름 문자열은 &lt;a href=&quot;#getPath()&quot;&gt; &lt;code&gt;getPath()&lt;/code&gt; &lt;/a&gt; 에서처럼 간단히 반환됩니다. 메서드 . 이 추상 경로 이름이 빈 추상 경로 이름이면 시스템 속성 &lt;code&gt;user.dir&lt;/code&gt; 에서 이름이 지정된 현재 사용자 디렉터리의 경로 이름 문자열 이 반환됩니다. 그렇지 않으면이 경로 이름은 시스템에 따라 결정됩니다. UNIX 시스템에서는 상대 경로 이름을 현재 사용자 디렉토리에 대해 분석하여 절대 경로로 만듭니다. Microsoft Windows 시스템에서 상대 경로 이름은 경로 이름으로 명명 된 드라이브의 현재 디렉토리 (있는 경우)에 대해 분석하여 절대 경로가됩니다. 그렇지 않은 경우 현재 사용자 디렉터리에 대해 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="7a3be84c548eed0823c8e3139a127143e82621eb" translate="yes" xml:space="preserve">
          <source>If this abstract pathname is already absolute, then the pathname string is simply returned as if by the &lt;code&gt;&lt;a href=&quot;file#getPath--&quot;&gt;&lt;code&gt;getPath()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method. If this abstract pathname is the empty abstract pathname then the pathname string of the current user directory, which is named by the system property &lt;code&gt;user.dir&lt;/code&gt;, is returned. Otherwise this pathname is resolved in a system-dependent way. On UNIX systems, a relative pathname is made absolute by resolving it against the current user directory. On Microsoft Windows systems, a relative pathname is made absolute by resolving it against the current directory of the drive named by the pathname, if any; if not, it is resolved against the current user directory.</source>
          <target state="translated">이 추상 경로명이 이미 절대이면, 경로명 문자열은 &lt;code&gt;&lt;a href=&quot;file#getPath--&quot;&gt;&lt;code&gt;getPath()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드에 의해 리턴되는 것처럼 간단 합니다. 이 추상 경로 이름이 빈 추상 경로 이름이면 시스템 특성 &lt;code&gt;user.dir&lt;/code&gt; 로 이름이 지정된 현재 사용자 디렉토리의 경로 이름 문자열 이 리턴됩니다. 그렇지 않으면이 경로 이름은 시스템에 따라 결정됩니다. UNIX 시스템에서 상대 경로 이름은 현재 사용자 디렉토리와 비교하여 절대 경로 이름이됩니다. Microsoft Windows 시스템에서 상대 경로 이름은 경로 이름으로 지정된 드라이브의 현재 디렉토리 (있는 경우)와 비교하여 절대 경로로 만듭니다. 그렇지 않은 경우 현재 사용자 디렉토리에 대해 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="01c37402cc1becc5bfd07365fcd08b2dbdad0ad1" translate="yes" xml:space="preserve">
          <source>If this abstract pathname is the empty abstract pathname then this method returns a &lt;code&gt;Path&lt;/code&gt; that may be used to access the current user directory.</source>
          <target state="translated">이 추상 경로명이 빈 추상 경로명 인 경우,이 메소드는 현재 사용자 디렉토리에 액세스하는 데 사용될 수 있는 &lt;code&gt;Path&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="9b7f67a5f088a680ac92408fde260047d736423c" translate="yes" xml:space="preserve">
          <source>If this buffer is backed by an array then buffer position</source>
          <target state="translated">이 버퍼가 배열에 의해 지원되는 경우 버퍼 위치</target>
        </trans-unit>
        <trans-unit id="ae4dc7275b1ba484f35d013645c9f8c4328bed2e" translate="yes" xml:space="preserve">
          <source>If this buffer is itself read-only then this method behaves in exactly the same way as the &lt;a href=&quot;#duplicate()&quot;&gt;&lt;code&gt;duplicate&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 버퍼 자체가 읽기 전용이면이 메서드는 다음과 같은 방식으로 작동합니다. &lt;a href=&quot;#duplicate()&quot;&gt; &lt;code&gt;duplicate&lt;/code&gt; &lt;/a&gt; 메서드합니다.</target>
        </trans-unit>
        <trans-unit id="f89b379a17fce051e1f16277ddcb14ccc4b66b84" translate="yes" xml:space="preserve">
          <source>If this buffer is itself read-only then this method behaves in exactly the same way as the &lt;a href=&quot;bytebuffer#duplicate--&quot;&gt;&lt;code&gt;duplicate&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 버퍼 자체가 읽기 전용 인 경우이 메소드는 &lt;a href=&quot;bytebuffer#duplicate--&quot;&gt; &lt;code&gt;duplicate&lt;/code&gt; &lt;/a&gt; 메소드 와 정확히 같은 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="156fa6ba3e659d60e072ffc378a13f068ae95a75" translate="yes" xml:space="preserve">
          <source>If this buffer is itself read-only then this method behaves in exactly the same way as the &lt;a href=&quot;charbuffer#duplicate--&quot;&gt;&lt;code&gt;duplicate&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 버퍼 자체가 읽기 전용 인 경우이 메소드는 &lt;a href=&quot;charbuffer#duplicate--&quot;&gt; &lt;code&gt;duplicate&lt;/code&gt; &lt;/a&gt; 메소드 와 정확히 같은 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="35a75ac82494b6599a9d8bae6f1e022d63bf504f" translate="yes" xml:space="preserve">
          <source>If this buffer is itself read-only then this method behaves in exactly the same way as the &lt;a href=&quot;doublebuffer#duplicate--&quot;&gt;&lt;code&gt;duplicate&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 버퍼 자체가 읽기 전용 인 경우이 메소드는 &lt;a href=&quot;doublebuffer#duplicate--&quot;&gt; &lt;code&gt;duplicate&lt;/code&gt; &lt;/a&gt; 메소드 와 정확히 같은 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="371c8e2f83e83deb4ece27649db80c4a89e64c63" translate="yes" xml:space="preserve">
          <source>If this buffer is itself read-only then this method behaves in exactly the same way as the &lt;a href=&quot;floatbuffer#duplicate--&quot;&gt;&lt;code&gt;duplicate&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 버퍼 자체가 읽기 전용 인 경우이 메소드는 &lt;a href=&quot;floatbuffer#duplicate--&quot;&gt; &lt;code&gt;duplicate&lt;/code&gt; &lt;/a&gt; 메소드 와 정확히 같은 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="6d9ca59cfd7a9df15a63ddbc3c00fb352f1667b5" translate="yes" xml:space="preserve">
          <source>If this buffer is itself read-only then this method behaves in exactly the same way as the &lt;a href=&quot;intbuffer#duplicate--&quot;&gt;&lt;code&gt;duplicate&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 버퍼 자체가 읽기 전용 인 경우이 메소드는 &lt;a href=&quot;intbuffer#duplicate--&quot;&gt; &lt;code&gt;duplicate&lt;/code&gt; &lt;/a&gt; 메소드 와 정확히 같은 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="eedcd5391de7d0bd92118ac43e586d896f287226" translate="yes" xml:space="preserve">
          <source>If this buffer is itself read-only then this method behaves in exactly the same way as the &lt;a href=&quot;longbuffer#duplicate--&quot;&gt;&lt;code&gt;duplicate&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 버퍼 자체가 읽기 전용 인 경우이 메소드는 &lt;a href=&quot;longbuffer#duplicate--&quot;&gt; &lt;code&gt;duplicate&lt;/code&gt; &lt;/a&gt; 메소드 와 정확히 같은 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="36c05dd52389e980b2b475c5bf397dcbfe429999" translate="yes" xml:space="preserve">
          <source>If this buffer is itself read-only then this method behaves in exactly the same way as the &lt;a href=&quot;shortbuffer#duplicate--&quot;&gt;&lt;code&gt;duplicate&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 버퍼 자체가 읽기 전용 인 경우이 메소드는 &lt;a href=&quot;shortbuffer#duplicate--&quot;&gt; &lt;code&gt;duplicate&lt;/code&gt; &lt;/a&gt; 메소드 와 정확히 같은 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="5877df09139688bd1d4dd4caded2b54d8b6ef182" translate="yes" xml:space="preserve">
          <source>If this buffer was not mapped in read/write mode (&lt;a href=&quot;channels/filechannel.mapmode#READ_WRITE&quot;&gt;&lt;code&gt;FileChannel.MapMode.READ_WRITE&lt;/code&gt;&lt;/a&gt;) then invoking this method has no effect.</source>
          <target state="translated">이 버퍼가 읽기 / 쓰기 모드 ( &lt;a href=&quot;channels/filechannel.mapmode#READ_WRITE&quot;&gt; &lt;code&gt;FileChannel.MapMode.READ_WRITE&lt;/code&gt; &lt;/a&gt; )로 매핑되지 않은 경우이 메서드를 호출해도 아무런 영향이 없습니다.</target>
        </trans-unit>
        <trans-unit id="acf7a96effaca3d6ae5cb6c88b86419669bb6e80" translate="yes" xml:space="preserve">
          <source>If this buffer was not mapped in read/write mode (&lt;a href=&quot;channels/filechannel.mapmode#READ_WRITE&quot;&gt;&lt;code&gt;FileChannel.MapMode.READ_WRITE&lt;/code&gt;&lt;/a&gt;) then invoking this method may have no effect. In particular, the method has no effect for buffers mapped in read-only or private mapping modes. This method may or may not have an effect for implementation-specific mapping modes.</source>
          <target state="translated">이 버퍼가 읽기 / 쓰기 모드 ( &lt;a href=&quot;channels/filechannel.mapmode#READ_WRITE&quot;&gt; &lt;code&gt;FileChannel.MapMode.READ_WRITE&lt;/code&gt; &lt;/a&gt; ) 에서 매핑되지 않은 경우이 메서드를 호출해도 효과가 없을 수 있습니다. 특히이 메서드는 읽기 전용 또는 개인 매핑 모드로 매핑 된 버퍼에는 영향을주지 않습니다. 이 메서드는 구현 별 매핑 모드에 영향을 줄 수도 있고 없을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a46445cea2b2d0e72d6b122d83869fbc86e4fec2" translate="yes" xml:space="preserve">
          <source>If this canonical name equals</source>
          <target state="translated">이 정식 이름이</target>
        </trans-unit>
        <trans-unit id="ca738f426c40cb3ea3806863cff08f7c8b90ba98" translate="yes" xml:space="preserve">
          <source>If this certificate does not contain a &lt;code&gt;SubjectAltName&lt;/code&gt; extension, &lt;code&gt;null&lt;/code&gt; is returned. Otherwise, a &lt;code&gt;Collection&lt;/code&gt; is returned with an entry representing each &lt;code&gt;GeneralName&lt;/code&gt; included in the extension. Each entry is a &lt;code&gt;List&lt;/code&gt; whose first entry is an &lt;code&gt;Integer&lt;/code&gt; (the name type, 0-8) and whose second entry is a &lt;code&gt;String&lt;/code&gt; or a byte array (the name, in string or ASN.1 DER encoded form, respectively).</source>
          <target state="translated">이 인증서에 &lt;code&gt;SubjectAltName&lt;/code&gt; 확장자 가 없으면 &lt;code&gt;null&lt;/code&gt; 이 리턴됩니다. 그렇지 않으면 확장에 포함 된 각 &lt;code&gt;GeneralName&lt;/code&gt; 을 나타내는 항목과 함께 &lt;code&gt;Collection&lt;/code&gt; 이 반환됩니다 . 각 항목은이다 &lt;code&gt;List&lt;/code&gt; 그 첫 번째 엔트리이다 &lt;code&gt;Integer&lt;/code&gt; (이름 타입, 0-8) 및 그 두 번째 항목 인 &lt;code&gt;String&lt;/code&gt; 또는 바이트 배열 (이름, 문자열 또는 ASN.1 DER 각각, 인코딩 형태).</target>
        </trans-unit>
        <trans-unit id="21ef757fd34257aff40a963d9fc1a1d93bd09628" translate="yes" xml:space="preserve">
          <source>If this certificate does not contain an &lt;code&gt;IssuerAltName&lt;/code&gt; extension, &lt;code&gt;null&lt;/code&gt; is returned. Otherwise, a &lt;code&gt;Collection&lt;/code&gt; is returned with an entry representing each &lt;code&gt;GeneralName&lt;/code&gt; included in the extension. Each entry is a &lt;code&gt;List&lt;/code&gt; whose first entry is an &lt;code&gt;Integer&lt;/code&gt; (the name type, 0-8) and whose second entry is a &lt;code&gt;String&lt;/code&gt; or a byte array (the name, in string or ASN.1 DER encoded form, respectively). For more details about the formats used for each name type, see the &lt;code&gt;getSubjectAlternativeNames&lt;/code&gt; method.</source>
          <target state="translated">이 인증서에 &lt;code&gt;IssuerAltName&lt;/code&gt; 확장이 포함되어 있지 않으면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다. 그렇지 않으면 확장에 포함 된 각 &lt;code&gt;GeneralName&lt;/code&gt; 을 나타내는 항목과 함께 &lt;code&gt;Collection&lt;/code&gt; 이 반환됩니다 . 각 항목은이다 &lt;code&gt;List&lt;/code&gt; 그 첫 번째 엔트리이다 &lt;code&gt;Integer&lt;/code&gt; (이름 타입, 0-8) 및 그 두 번째 항목 인 &lt;code&gt;String&lt;/code&gt; 또는 바이트 배열 (이름, 문자열 또는 ASN.1 DER 각각, 인코딩 형태). 각 이름 유형에 사용되는 형식에 대한 자세한 내용은 &lt;code&gt;getSubjectAlternativeNames&lt;/code&gt; 메소드를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb57839b1a1ab664307c336a0abc091c0ec8147d" translate="yes" xml:space="preserve">
          <source>If this channel is already closed then invoking this method has no effect.</source>
          <target state="translated">이 채널이 이미 닫혀 있으면이 메소드를 호출해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="5ab02f31b97ee071939ff874b950f37cd99195cf" translate="yes" xml:space="preserve">
          <source>If this channel is already connected then this method will not block and will immediately return &lt;code&gt;true&lt;/code&gt;. If this channel is in non-blocking mode then this method will return &lt;code&gt;false&lt;/code&gt; if the connection process is not yet complete. If this channel is in blocking mode then this method will block until the connection either completes or fails, and will always either return &lt;code&gt;true&lt;/code&gt; or throw a checked exception describing the failure.</source>
          <target state="translated">이 채널이 이미 연결되어 있으면이 메소드는 차단되지 않고 즉시 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 이 채널이 비 블로킹 모드 인 경우 연결 프로세스가 아직 완료되지 않은 경우이 메소드는 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다. 이 채널이 블로킹 모드 인 경우,이 메소드는 연결이 완료되거나 실패 할 때까지 차단되며 항상 &lt;code&gt;true&lt;/code&gt; 를 리턴 하거나 실패를 설명하는 점검 된 예외를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="3d7c302dbe2f695025b8640ac34f50a0de64f0c2" translate="yes" xml:space="preserve">
          <source>If this channel is already registered with the given selector then the selection key representing that registration is returned after setting its interest set to the given value.</source>
          <target state="translated">이 채널이 지정된 선택기로 이미 등록 된 경우 관심 설정을 지정된 값으로 설정 한 후 해당 등록을 나타내는 선택 키가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d87bd2f3adfdc3f28325dac54a700242beec8405" translate="yes" xml:space="preserve">
          <source>If this channel is closed by another thread during an invocation of this method then an &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">이 메소드의 호출 중에 다른 thread에 의해이 채널이 닫히면 (자), &lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; &lt;/a&gt; 가 Throw됩니다.</target>
        </trans-unit>
        <trans-unit id="7dbdb52e985c96146985878c92a9ee572c7a87bf" translate="yes" xml:space="preserve">
          <source>If this channel is closed then the value returned by this method is not specified.</source>
          <target state="translated">이 채널이 닫히면이 메소드가 리턴 한 값이 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="163dba92f7b27612158435e616665962f5f46564" translate="yes" xml:space="preserve">
          <source>If this channel is closed while this operation is in progress then the key returned by this method will have been cancelled and will therefore be invalid.</source>
          <target state="translated">이 작업이 진행되는 동안이 채널이 닫히면이 방법으로 반환 된 키가 취소되어 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="84c9fd31b88a7519ddc19ca6724be20f67fc5a71" translate="yes" xml:space="preserve">
          <source>If this channel is currently a member of the group on the given interface to receive all datagrams then the membership key, representing that membership, is returned. Otherwise this channel joins the group and the resulting new membership key is returned. The resulting membership key is not &lt;a href=&quot;membershipkey#sourceAddress()&quot;&gt;&lt;code&gt;source-specific&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 채널이 현재 모든 데이터 그램을 수신하기 위해 주어진 인터페이스에서 그룹의 구성원이면 해당 구성원을 나타내는 구성원 키가 반환됩니다. 그렇지 않으면이 채널이 그룹에 가입하고 결과 새 멤버십 키가 반환됩니다. 결과 멤버십 키는 &lt;a href=&quot;membershipkey#sourceAddress()&quot;&gt; &lt;code&gt;source-specific&lt;/code&gt; &lt;/a&gt; 되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="570c45f56fd23551052dac6addc16e9085479d7c" translate="yes" xml:space="preserve">
          <source>If this channel is currently a member of the group on the given interface to receive all datagrams then the membership key, representing that membership, is returned. Otherwise this channel joins the group and the resulting new membership key is returned. The resulting membership key is not &lt;a href=&quot;membershipkey#sourceAddress--&quot;&gt;&lt;code&gt;source-specific&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 채널이 현재 모든 인터페이스를 수신하기 위해 지정된 인터페이스에서 그룹의 구성원 인 경우 해당 구성원을 나타내는 멤버쉽 키가 리턴됩니다. 그렇지 않으면이 채널이 그룹에 가입하고 결과로 생성 된 새 멤버쉽 키가 반환됩니다. 결과 멤버십 키는 &lt;a href=&quot;membershipkey#sourceAddress--&quot;&gt; &lt;code&gt;source-specific&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="641402668a9668b943e42e87c3311792c3da6909" translate="yes" xml:space="preserve">
          <source>If this channel is currently a member of the group on the given interface to receive datagrams from the given source address then the membership key, representing that membership, is returned. Otherwise this channel joins the group and the resulting new membership key is returned. The resulting membership key is &lt;a href=&quot;membershipkey#sourceAddress()&quot;&gt;&lt;code&gt;source-specific&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 채널이 현재 지정된 소스 주소에서 데이터 그램을 수신하기 위해 지정된 인터페이스의 그룹 구성원 인 경우 해당 구성원을 나타내는 구성원 키가 반환됩니다. 그렇지 않으면이 채널이 그룹에 가입하고 결과 새 멤버십 키가 반환됩니다. 결과 멤버십 키는 &lt;a href=&quot;membershipkey#sourceAddress()&quot;&gt; &lt;code&gt;source-specific&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f801112322d04b871768e0c5d6c19666441d7d93" translate="yes" xml:space="preserve">
          <source>If this channel is currently a member of the group on the given interface to receive datagrams from the given source address then the membership key, representing that membership, is returned. Otherwise this channel joins the group and the resulting new membership key is returned. The resulting membership key is &lt;a href=&quot;membershipkey#sourceAddress--&quot;&gt;&lt;code&gt;source-specific&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 채널이 현재 지정된 인터페이스에서 그룹의 멤버 인 경우 지정된 소스 주소에서 데이터 그램을 수신하면 해당 멤버쉽을 나타내는 멤버쉽 키가 반환됩니다. 그렇지 않으면이 채널이 그룹에 가입하고 결과로 생성 된 새 멤버쉽 키가 반환됩니다. 결과 멤버십 키는 &lt;a href=&quot;membershipkey#sourceAddress--&quot;&gt; &lt;code&gt;source-specific&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d7ae74f038ce702c7795ca66e36fd03cf2ca6306" translate="yes" xml:space="preserve">
          <source>If this channel is currently registered with the given selector then the selection key representing that registration is returned. The key's interest set will have been changed to &lt;code&gt;ops&lt;/code&gt;, as if by invoking the &lt;a href=&quot;selectionkey#interestOps(int)&quot;&gt;&lt;code&gt;interestOps(int)&lt;/code&gt;&lt;/a&gt; method. If the &lt;code&gt;att&lt;/code&gt; argument is not &lt;code&gt;null&lt;/code&gt; then the key's attachment will have been set to that value. A &lt;a href=&quot;cancelledkeyexception&quot;&gt;&lt;code&gt;CancelledKeyException&lt;/code&gt;&lt;/a&gt; will be thrown if the key has already been cancelled.</source>
          <target state="translated">이 채널이 현재 지정된 선택기에 등록되어 있으면 해당 등록을 나타내는 선택 키가 반환됩니다. 키의 관심 세트는 &lt;a href=&quot;selectionkey#interestOps(int)&quot;&gt; &lt;code&gt;interestOps(int)&lt;/code&gt; &lt;/a&gt; 메소드를 호출하는 것처럼 &lt;code&gt;ops&lt;/code&gt; 로 변경됩니다 . 경우 &lt;code&gt;att&lt;/code&gt; 인수가 아닌 &lt;code&gt;null&lt;/code&gt; 다음 키의 첨부는 그 값으로 설정되어있는 것입니다. &lt;a href=&quot;cancelledkeyexception&quot;&gt; &lt;code&gt;CancelledKeyException&lt;/code&gt; 에러는&lt;/a&gt; 키가 이미 취소 된 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="10e0307a2763fb964960a3bb207d0318d28aa119" translate="yes" xml:space="preserve">
          <source>If this channel is currently registered with the given selector then the selection key representing that registration is returned. The key's interest set will have been changed to &lt;code&gt;ops&lt;/code&gt;, as if by invoking the &lt;a href=&quot;selectionkey#interestOps-int-&quot;&gt;&lt;code&gt;interestOps(int)&lt;/code&gt;&lt;/a&gt; method. If the &lt;code&gt;att&lt;/code&gt; argument is not &lt;code&gt;null&lt;/code&gt; then the key's attachment will have been set to that value. A &lt;a href=&quot;cancelledkeyexception&quot;&gt;&lt;code&gt;CancelledKeyException&lt;/code&gt;&lt;/a&gt; will be thrown if the key has already been cancelled.</source>
          <target state="translated">이 채널이 현재 지정된 선택기로 등록되어 있으면 해당 등록을 나타내는 선택 키가 반환됩니다. &lt;a href=&quot;selectionkey#interestOps-int-&quot;&gt; &lt;code&gt;interestOps(int)&lt;/code&gt; &lt;/a&gt; 메소드를 호출하는 것처럼 키의 관심사 세트가 &lt;code&gt;ops&lt;/code&gt; 로 변경되었습니다 . 경우 &lt;code&gt;att&lt;/code&gt; 인수가 아닌 &lt;code&gt;null&lt;/code&gt; 다음 키의 첨부는 그 값으로 설정되어있는 것입니다. &lt;a href=&quot;cancelledkeyexception&quot;&gt; &lt;code&gt;CancelledKeyException&lt;/code&gt; 에러는&lt;/a&gt; 키가 이미 취소 된 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="731ff7e16ea304387baccdf40ccf8446f1ff82b2" translate="yes" xml:space="preserve">
          <source>If this channel is in blocking mode then an invocation of this method will block until the connection is established or an I/O error occurs.</source>
          <target state="translated">이 채널이 블로킹 모드에 있으면이 메소드의 호출은 연결이 설정되거나 I / O 오류가 발생할 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="8932273d6aba49f3dec84473a845e51f5a2be1d5" translate="yes" xml:space="preserve">
          <source>If this channel is in blocking mode, there is sufficient room in the underlying output buffer, then the remaining bytes in the given byte buffer are transmitted as a single message. Sending a message is atomic unless explicit message completion &lt;a href=&quot;sctpstandardsocketoptions#SCTP_EXPLICIT_COMPLETE&quot;&gt;&lt;code&gt;SCTP_EXPLICIT_COMPLETE&lt;/code&gt;&lt;/a&gt; socket option is enabled on this channel's socket.</source>
          <target state="translated">이 채널이 차단 모드에있는 경우 기본 출력 버퍼에 충분한 공간이있는 경우 지정된 바이트 버퍼의 나머지 바이트가 단일 메시지로 전송됩니다. 이 채널의 소켓에서 명시 적 메시지 완료 &lt;a href=&quot;sctpstandardsocketoptions#SCTP_EXPLICIT_COMPLETE&quot;&gt; &lt;code&gt;SCTP_EXPLICIT_COMPLETE&lt;/code&gt; &lt;/a&gt; 소켓 옵션이 활성화되어 있지 않으면 메시지 전송은 원자 적 입니다.</target>
        </trans-unit>
        <trans-unit id="c4af049551fd4be314d3714c933c67ea1e633195" translate="yes" xml:space="preserve">
          <source>If this channel is in non-blocking mode and there is sufficient room in the underlying output buffer, or if this channel is in blocking mode and sufficient room becomes available, then the remaining bytes in the given buffer are transmitted as a single datagram to the given target address.</source>
          <target state="translated">이 채널이 비 차단 모드에 있고 기본 출력 버퍼에 충분한 공간이 있거나이 채널이 차단 모드에 있고 충분한 공간을 사용할 수있게되면 지정된 버퍼의 나머지 바이트가 단일 데이터 그램으로 전송됩니다. 주어진 목표 주소.</target>
        </trans-unit>
        <trans-unit id="f5a37889a25728f978063b354842aa35922caa19" translate="yes" xml:space="preserve">
          <source>If this channel is in non-blocking mode and there is sufficient room in the underlying output buffer, or if this channel is in blocking mode and sufficient room becomes available, then the remaining bytes in the given byte buffer are transmitted as a single message. Sending a message is atomic unless explicit message completion &lt;a href=&quot;sctpstandardsocketoptions#SCTP_EXPLICIT_COMPLETE&quot;&gt;&lt;code&gt;SCTP_EXPLICIT_COMPLETE&lt;/code&gt;&lt;/a&gt; socket option is enabled on this channel's socket.</source>
          <target state="translated">이 채널이 비 차단 모드이고 기본 출력 버퍼에 충분한 공간이 있거나이 채널이 차단 모드이고 충분한 공간이 사용 가능 해지면 주어진 바이트 버퍼의 나머지 바이트가 단일 메시지로 전송됩니다. 이 채널의 소켓에서 명시 적 메시지 완료 &lt;a href=&quot;sctpstandardsocketoptions#SCTP_EXPLICIT_COMPLETE&quot;&gt; &lt;code&gt;SCTP_EXPLICIT_COMPLETE&lt;/code&gt; &lt;/a&gt; 소켓 옵션이 활성화되어 있지 않으면 메시지 전송은 원자 적 입니다.</target>
        </trans-unit>
        <trans-unit id="fff98624798393795f6e6378a6255bda5994733c" translate="yes" xml:space="preserve">
          <source>If this channel is in non-blocking mode then an invocation of this method initiates a non-blocking connection operation. If the connection is established immediately, as can happen with a local connection, then this method returns &lt;code&gt;true&lt;/code&gt;. Otherwise this method returns &lt;code&gt;false&lt;/code&gt; and the connection operation must later be completed by invoking the &lt;a href=&quot;#finishConnect()&quot;&gt;&lt;code&gt;finishConnect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 채널이 비 차단 모드에있는 경우이 메서드를 호출하면 비 차단 연결 작업이 시작됩니다. 로컬 연결에서 발생할 수있는 것처럼 연결이 즉시 설정되면이 메서드는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그렇지 않으면이 메서드는 &lt;code&gt;false&lt;/code&gt; 를 반환 하고 연결 작업은 나중에 다음을 호출하여 완료해야합니다.&lt;a href=&quot;#finishConnect()&quot;&gt; &lt;code&gt;finishConnect&lt;/code&gt; &lt;/a&gt; 메서드.</target>
        </trans-unit>
        <trans-unit id="a8abf8e95673d1e00311052153bdf85098ea24d2" translate="yes" xml:space="preserve">
          <source>If this channel is in non-blocking mode then an invocation of this method initiates a non-blocking connection operation. If the connection is established immediately, as can happen with a local connection, then this method returns &lt;code&gt;true&lt;/code&gt;. Otherwise this method returns &lt;code&gt;false&lt;/code&gt; and the connection operation must later be completed by invoking the &lt;a href=&quot;socketchannel#finishConnect--&quot;&gt;&lt;code&gt;finishConnect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 채널이 비 차단 모드 인 경우이 방법을 호출하면 비 차단 연결 작업이 시작됩니다. 로컬 연결에서 발생할 수있는 것처럼 연결이 즉시 설정되면이 메소드는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면이 메소드는 &lt;code&gt;false&lt;/code&gt; 를 리턴 하고 &lt;a href=&quot;socketchannel#finishConnect--&quot;&gt; &lt;code&gt;finishConnect&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 나중에 연결 조작을 완료해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ea3db5f7103af4f696ee5defebd54a8aac37e2fa" translate="yes" xml:space="preserve">
          <source>If this channel is in non-blocking mode then this method will immediately return &lt;code&gt;null&lt;/code&gt; if there are no pending associations. Otherwise it will block indefinitely until a new association is available or an I/O error occurs.</source>
          <target state="translated">이 채널이 비 차단 모드에있는 경우 보류중인 연결이 없으면 이 메서드는 즉시 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다. 그렇지 않으면 새 연결을 사용할 수 있거나 I / O 오류가 발생할 때까지 무기한 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="96a8b30b6de24a4c9b0a5b52fe7f2986ad339a52" translate="yes" xml:space="preserve">
          <source>If this channel is in non-blocking mode then this method will immediately return &lt;code&gt;null&lt;/code&gt; if there are no pending connections. Otherwise it will block indefinitely until a new connection is available or an I/O error occurs.</source>
          <target state="translated">이 채널이 비 차단 모드 인 경우 보류중인 연결이 없으면 이 메서드는 즉시 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다. 그렇지 않으면 새 연결을 사용할 수 있거나 I / O 오류가 발생할 때까지 무기한 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="e9cbc977a90c4416c31e7b08ddccc99072ec6d5a" translate="yes" xml:space="preserve">
          <source>If this channel is in non-blocking mode, there is sufficient room in the underlying output buffer, and an implicit association setup is required, then the remaining bytes in the given byte buffer are transmitted as a single message, subject to &lt;a href=&quot;sctpstandardsocketoptions#SCTP_EXPLICIT_COMPLETE&quot;&gt;&lt;code&gt;SCTP_EXPLICIT_COMPLETE&lt;/code&gt;&lt;/a&gt;. If for any reason the message cannot be delivered an &lt;a href=&quot;associationchangenotification&quot;&gt;&lt;code&gt;association
 changed&lt;/code&gt;&lt;/a&gt; notification is put on the SCTP stack with its &lt;code&gt;event&lt;/code&gt; parameter set to &lt;a href=&quot;associationchangenotification.assocchangeevent#CANT_START&quot;&gt;&lt;code&gt;CANT_START&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 채널이 비 차단 모드에있는 경우 기본 출력 버퍼에 충분한 공간이 있고 암시 적 연관 설정이 필요하면 주어진 바이트 버퍼의 나머지 바이트가 &lt;a href=&quot;sctpstandardsocketoptions#SCTP_EXPLICIT_COMPLETE&quot;&gt; &lt;code&gt;SCTP_EXPLICIT_COMPLETE&lt;/code&gt; 에&lt;/a&gt; 따라 단일 메시지로 전송됩니다 . 어떤 이유로 든 메시지를 전달할 수없는 경우 &lt;a href=&quot;associationchangenotification&quot;&gt; &lt;code&gt;association changed&lt;/code&gt; &lt;/a&gt; 알림이 &lt;code&gt;event&lt;/code&gt; 매개 변수가 &lt;a href=&quot;associationchangenotification.assocchangeevent#CANT_START&quot;&gt; &lt;code&gt;CANT_START&lt;/code&gt; 로&lt;/a&gt; 설정된 SCTP 스택 에 배치 됩니다.</target>
        </trans-unit>
        <trans-unit id="90989044c141384d7c72d3db34ded45944982562" translate="yes" xml:space="preserve">
          <source>If this channel is registered with one or more selectors then an attempt to place it into blocking mode will cause an &lt;a href=&quot;illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">이 채널이 하나 이상의 선택기에 등록 된 경우 차단 모드로 설정하려고하면 &lt;a href=&quot;illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="25efd4b289b3812e18d741b941e0490ad40b0578" translate="yes" xml:space="preserve">
          <source>If this channel is unbound then this method will invoke &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt;&lt;code&gt;bind(null, 0)&lt;/code&gt;&lt;/a&gt; before sending any data.</source>
          <target state="translated">이 채널이 바인딩 해제 된 경우이 메서드는 데이터를 보내기 전에 &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt; &lt;code&gt;bind(null, 0)&lt;/code&gt; &lt;/a&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="69f3fb5016a511b899c6888623fee283b8c8ccae" translate="yes" xml:space="preserve">
          <source>If this channel's file resides on a local storage device then when this method returns it is guaranteed that all changes made to the file since this channel was created, or since this method was last invoked, will have been written to that device. This is useful for ensuring that critical information is not lost in the event of a system crash.</source>
          <target state="translated">이 채널의 파일이 로컬 저장 장치에 상주하는 경우이 메서드가 반환되면이 채널을 만든 후 또는이 메서드를 마지막으로 호출 한 이후에 파일에 대한 모든 변경 내용이 해당 장치에 기록 된 것입니다. 시스템 충돌시 중요한 정보가 손실되지 않도록하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="0983d675f212d67b75b1d6a5a184d98509d7348d" translate="yes" xml:space="preserve">
          <source>If this channel's socket is not connected, or if the channel is closed, then invoking this method has no effect.</source>
          <target state="translated">이 채널의 소켓이 연결되어 있지 않거나 채널이 닫혀 있으면이 메소드를 호출해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="e22345f8e4dbdb6cf9ef6dd7404a94dfa19e4d17" translate="yes" xml:space="preserve">
          <source>If this cipher (including its underlying feedback or padding scheme) requires any random bytes (e.g., for parameter generation), it will get them from &lt;code&gt;random&lt;/code&gt;.</source>
          <target state="translated">이 암호 (기본 피드백 또는 패딩 체계 포함)에 임의의 바이트가 필요한 경우 (예 : 매개 변수 생성) &lt;code&gt;random&lt;/code&gt; 에서 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="df4c7583376380d891b8180fbc799056297727ce" translate="yes" xml:space="preserve">
          <source>If this cipher (including its underlying feedback or padding scheme) requires any random bytes (e.g., for parameter generation), it will get them using the &lt;a href=&quot;../../java/security/securerandom&quot;&gt;&lt;code&gt;SecureRandom&lt;/code&gt;&lt;/a&gt; implementation of the highest-priority installed provider as the source of randomness. (If none of the installed providers supply an implementation of SecureRandom, a system-provided source of randomness will be used.)</source>
          <target state="translated">이 암호 (기본 피드백 또는 패딩 체계 포함)에 임의의 바이트 (예 : 매개 변수 생성)가 필요한 경우, 우선 순위가 가장 높은 설치된 제공자 의 &lt;a href=&quot;../../java/security/securerandom&quot;&gt; &lt;code&gt;SecureRandom&lt;/code&gt; &lt;/a&gt; 구현을 임의성 소스로 사용하여 암호를 가져옵니다 . (설치된 공급자 중 어느 것도 SecureRandom의 구현을 제공하지 않으면 시스템에서 제공하는 무작위 소스가 사용됩니다.)</target>
        </trans-unit>
        <trans-unit id="1f014b120b82cdd937f7d72a75fe35be62115d12" translate="yes" xml:space="preserve">
          <source>If this cipher (including its underlying feedback or padding scheme) requires any random bytes (e.g., for parameter generation), it will get them using the &lt;code&gt;SecureRandom&lt;/code&gt; implementation of the highest-priority installed provider as the source of randomness. (If none of the installed providers supply an implementation of SecureRandom, a system-provided source of randomness will be used.)</source>
          <target state="translated">이 암호 (기본 피드백 또는 패딩 체계 포함)에 임의의 바이트 (예 : 매개 변수 생성)가 필요한 경우, 우선 순위가 가장 높은 설치된 제공자 의 &lt;code&gt;SecureRandom&lt;/code&gt; 구현을 임의성 소스로 사용하여 암호를 가져옵니다 . (설치된 공급자 중 어느 것도 SecureRandom의 구현을 제공하지 않으면 시스템에서 제공하는 무작위 소스가 사용됩니다.)</target>
        </trans-unit>
        <trans-unit id="ba0b3c8786993d9f760f587fe2264fbe88b5a094" translate="yes" xml:space="preserve">
          <source>If this cipher requires algorithm parameters that cannot be derived from the input parameters, and there are no reasonable provider-specific default values, initialization will necessarily fail.</source>
          <target state="translated">이 암호에 입력 매개 변수에서 파생 될 수없는 알고리즘 매개 변수가 필요하고 적절한 공급자 별 기본값이 없으면 초기화가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="96e2ec548e664031381e0b6546b9fff93897ee2d" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters and &lt;code&gt;params&lt;/code&gt; is null, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;#engineGetParameters()&quot;&gt;&lt;code&gt;engineGetParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#engineGetIV()&quot;&gt;&lt;code&gt;engineGetIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">이 암호에 알고리즘 매개 변수가 필요하고 &lt;code&gt;params&lt;/code&gt; 가 null 인 경우 기본 암호 구현은 암호화 또는 키 래핑을 위해 초기화되는 경우 필요한 매개 변수 자체 (제공자 별 기본값 또는 임의 값 사용)를 생성하고 다음과 같은 경우 &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; 을 발생시킵니다. 암호 해독 또는 키 풀기 용으로 초기화 중입니다. 생성 된 매개 변수는 &lt;a href=&quot;#engineGetParameters()&quot;&gt; &lt;code&gt;engineGetParameters&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#engineGetIV()&quot;&gt; &lt;code&gt;engineGetIV&lt;/code&gt; 를&lt;/a&gt; 사용하여 검색 할 수 있습니다 (매개 변수가 IV 인 경우).</target>
        </trans-unit>
        <trans-unit id="295f1a894c11e8a083e8ff21f6cd1651b963b591" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters and &lt;code&gt;params&lt;/code&gt; is null, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;#getParameters()&quot;&gt;&lt;code&gt;getParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#getIV()&quot;&gt;&lt;code&gt;getIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">이 암호에 알고리즘 매개 변수가 필요하고 &lt;code&gt;params&lt;/code&gt; 가 null 인 경우 기본 암호 구현은 암호화 또는 키 래핑을 위해 초기화되는 경우 필요한 매개 변수 자체 (제공자 별 기본값 또는 임의 값 사용)를 생성하고 다음과 같은 경우 &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; 을 발생시킵니다. 암호 해독 또는 키 풀기 용으로 초기화 중입니다. 생성 된 매개 변수는 &lt;a href=&quot;#getParameters()&quot;&gt; &lt;code&gt;getParameters&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#getIV()&quot;&gt; &lt;code&gt;getIV&lt;/code&gt; 를&lt;/a&gt; 사용하여 검색 할 수 있습니다. (매개 변수가 IV 인 경우).</target>
        </trans-unit>
        <trans-unit id="c9607337bc0d2c4ac058d5f2be65c25112f2a16a" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters and &lt;code&gt;params&lt;/code&gt; is null, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;cipher#getParameters--&quot;&gt;&lt;code&gt;getParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cipher#getIV--&quot;&gt;&lt;code&gt;getIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">이 암호 알고리즘 파라미터 및 필요한 경우 &lt;code&gt;params&lt;/code&gt; NULL, 기본 암호화 구현은 암호화 또는 열쇠 랩핑 용으로 초기화되고 있으면 (공급자 별 기본 또는 임의의 값을 사용하여) 필요한 파라미터 자체를 생성 및 상승하도록되어있다 &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; 가 있는 경우를 암호 해독 또는 키 언 래핑을 위해 초기화되고 있습니다. 생성 된 매개 변수는 &lt;a href=&quot;cipher#getParameters--&quot;&gt; &lt;code&gt;getParameters&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;cipher#getIV--&quot;&gt; &lt;code&gt;getIV&lt;/code&gt; &lt;/a&gt; (매개 변수가 IV 인 경우)를 사용하여 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9885890d448faaca56b5580f516444c6cfac3586" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters and &lt;code&gt;params&lt;/code&gt; is null, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;cipherspi#engineGetParameters--&quot;&gt;&lt;code&gt;engineGetParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cipherspi#engineGetIV--&quot;&gt;&lt;code&gt;engineGetIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">이 암호 알고리즘 파라미터 및 필요한 경우 &lt;code&gt;params&lt;/code&gt; NULL, 기본 암호화 구현은 암호화 또는 열쇠 랩핑 용으로 초기화되고 있으면 (공급자 별 기본 또는 임의의 값을 사용하여) 필요한 파라미터 자체를 생성 및 상승하도록되어있다 &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; 가 있는 경우를 암호 해독 또는 키 언 래핑을 위해 초기화되고 있습니다. 생성 된 매개 변수는 &lt;a href=&quot;cipherspi#engineGetParameters--&quot;&gt; &lt;code&gt;engineGetParameters&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;cipherspi#engineGetIV--&quot;&gt; &lt;code&gt;engineGetIV&lt;/code&gt; 를&lt;/a&gt; 사용하여 검색 할 수 있습니다 (매개 변수가 IV 인 경우).</target>
        </trans-unit>
        <trans-unit id="5ca44083091b654a0ac5374679822a97ed0ebaa3" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters that cannot be derived from the given &lt;code&gt;key&lt;/code&gt;, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidKeyException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;#engineGetParameters()&quot;&gt;&lt;code&gt;engineGetParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#engineGetIV()&quot;&gt;&lt;code&gt;engineGetIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">이 암호에 주어진 &lt;code&gt;key&lt;/code&gt; 에서 파생 될 수없는 알고리즘 매개 변수가 필요한 경우 기본 암호 구현은 암호화 또는 키 래핑을 위해 초기화되는 경우 필요한 매개 변수 자체를 생성해야합니다 (제공자 별 기본값 또는 임의 값 사용). 제기 &lt;code&gt;InvalidKeyException&lt;/code&gt; 복호화 또는 키 랩핑 해제 용으로 초기화되고 있으면. 생성 된 매개 변수는 &lt;a href=&quot;#engineGetParameters()&quot;&gt; &lt;code&gt;engineGetParameters&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#engineGetIV()&quot;&gt; &lt;code&gt;engineGetIV&lt;/code&gt; 를&lt;/a&gt; 사용하여 검색 할 수 있습니다 (매개 변수가 IV 인 경우).</target>
        </trans-unit>
        <trans-unit id="e6179f11e920f6ee69b1258d8c269fd6827001c8" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters that cannot be derived from the given &lt;code&gt;key&lt;/code&gt;, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidKeyException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;#getParameters()&quot;&gt;&lt;code&gt;getParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#getIV()&quot;&gt;&lt;code&gt;getIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">이 암호에 주어진 &lt;code&gt;key&lt;/code&gt; 에서 파생 될 수없는 알고리즘 매개 변수가 필요한 경우 기본 암호 구현은 암호화 또는 키 래핑을 위해 초기화되는 경우 필요한 매개 변수 자체를 생성해야합니다 (제공자 별 기본값 또는 임의 값 사용). 제기 &lt;code&gt;InvalidKeyException&lt;/code&gt; 복호화 또는 키 랩핑 해제 용으로 초기화되고 있으면. 생성 된 매개 변수는 &lt;a href=&quot;#getParameters()&quot;&gt; &lt;code&gt;getParameters&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#getIV()&quot;&gt; &lt;code&gt;getIV&lt;/code&gt; 를&lt;/a&gt; 사용하여 검색 할 수 있습니다. (매개 변수가 IV 인 경우).</target>
        </trans-unit>
        <trans-unit id="1ee2bdd99eb0055747a5b587dd5410737fc50478" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters that cannot be derived from the given &lt;code&gt;key&lt;/code&gt;, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidKeyException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;cipher#getParameters--&quot;&gt;&lt;code&gt;getParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cipher#getIV--&quot;&gt;&lt;code&gt;getIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">이 암호에 지정된 &lt;code&gt;key&lt;/code&gt; 부터 파생 할 수없는 알고리즘 매개 변수가 필요한 경우, 암호화 또는 키 랩핑을 위해 초기화되는 경우 기본 암호 구현은 필요한 매개 변수 자체 (제공자 별 기본값 또는 임의 값 사용)를 생성해야합니다. 제기 &lt;code&gt;InvalidKeyException&lt;/code&gt; 복호화 또는 키 랩핑 해제 용으로 초기화되고 있으면. 생성 된 매개 변수는 &lt;a href=&quot;cipher#getParameters--&quot;&gt; &lt;code&gt;getParameters&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;cipher#getIV--&quot;&gt; &lt;code&gt;getIV&lt;/code&gt; &lt;/a&gt; (매개 변수가 IV 인 경우)를 사용하여 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d1a771ba743be01067043fa16cfae7decccc00fb" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters that cannot be derived from the given &lt;code&gt;key&lt;/code&gt;, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidKeyException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;cipherspi#engineGetParameters--&quot;&gt;&lt;code&gt;engineGetParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cipherspi#engineGetIV--&quot;&gt;&lt;code&gt;engineGetIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">이 암호에 지정된 &lt;code&gt;key&lt;/code&gt; 부터 파생 할 수없는 알고리즘 매개 변수가 필요한 경우, 암호화 또는 키 랩핑을 위해 초기화되는 경우 기본 암호 구현은 필요한 매개 변수 자체 (제공자 별 기본값 또는 임의 값 사용)를 생성해야합니다. 제기 &lt;code&gt;InvalidKeyException&lt;/code&gt; 복호화 또는 키 랩핑 해제 용으로 초기화되고 있으면. 생성 된 매개 변수는 &lt;a href=&quot;cipherspi#engineGetParameters--&quot;&gt; &lt;code&gt;engineGetParameters&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;cipherspi#engineGetIV--&quot;&gt; &lt;code&gt;engineGetIV&lt;/code&gt; 를&lt;/a&gt; 사용하여 검색 할 수 있습니다 (매개 변수가 IV 인 경우).</target>
        </trans-unit>
        <trans-unit id="2b3d39461792b1a28f5b6732bd8dfd526cf4645f" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters that cannot be derived from the public key in the given &lt;code&gt;certificate&lt;/code&gt;, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidKeyException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;#getParameters()&quot;&gt;&lt;code&gt;getParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#getIV()&quot;&gt;&lt;code&gt;getIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">이 암호에 지정된 &lt;code&gt;certificate&lt;/code&gt; 의 공개 키에서 파생 될 수없는 알고리즘 매개 변수가 필요한 경우 기본 암호 구현은 암호화를 위해 초기화되거나 또는 키 래핑을 수행하고, 암호 해독 또는 키 래핑 해제를 위해 초기화되는 경우 &lt;code&gt;InvalidKeyException&lt;/code&gt; 을 발생시킵니다. 생성 된 매개 변수는 &lt;a href=&quot;#getParameters()&quot;&gt; &lt;code&gt;getParameters&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#getIV()&quot;&gt; &lt;code&gt;getIV&lt;/code&gt; 를&lt;/a&gt; 사용하여 검색 할 수 있습니다 (매개 변수가 IV 인 경우).</target>
        </trans-unit>
        <trans-unit id="1ad3aae370c5f54c513619cd9029629a3de2dbf8" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters that cannot be derived from the public key in the given &lt;code&gt;certificate&lt;/code&gt;, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidKeyException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;cipher#getParameters--&quot;&gt;&lt;code&gt;getParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cipher#getIV--&quot;&gt;&lt;code&gt;getIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">이 암호에, 지정된 &lt;code&gt;certificate&lt;/code&gt; 내의 공개 키로부터 파생 할 수없는 알고리즘 파라미터가 필요한 경우, 암호화 또는 키 랩핑 을 해제하고, 해독 또는 키 언 랩핑을 위해 초기화되는 경우 &lt;code&gt;InvalidKeyException&lt;/code&gt; 을 발생시킵니다. 생성 된 매개 변수는 &lt;a href=&quot;cipher#getParameters--&quot;&gt; &lt;code&gt;getParameters&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;cipher#getIV--&quot;&gt; &lt;code&gt;getIV&lt;/code&gt; &lt;/a&gt; (매개 변수가 IV 인 경우)를 사용하여 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd810e0520a9cbad755c6af505916dd59eb466d1" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters that cannot be derived from the public key in the given certificate, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;
 InvalidKeyException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;cipher#getParameters--&quot;&gt;&lt;code&gt;getParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cipher#getIV--&quot;&gt;&lt;code&gt;getIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">이 암호에 지정된 인증서의 공개 키에서 파생 할 수없는 알고리즘 매개 변수가 필요한 경우 기본 암호 구현은 암호화 또는 키 랩핑 을 해제하고, 해독 또는 키 언 랩핑을 위해 초기화되는 경우 &lt;code&gt; InvalidKeyException&lt;/code&gt; 을 발생시킵니다. 생성 된 매개 변수는 &lt;a href=&quot;cipher#getParameters--&quot;&gt; &lt;code&gt;getParameters&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;cipher#getIV--&quot;&gt; &lt;code&gt;getIV&lt;/code&gt; &lt;/a&gt; (매개 변수가 IV 인 경우)를 사용하여 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="75019fbedbc85eb5e372cf044fc03f013866a158" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters that cannot be derived from the public key in the given certificate, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidKeyException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;#getParameters()&quot;&gt;&lt;code&gt;getParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#getIV()&quot;&gt;&lt;code&gt;getIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">이 암호가 지정된 인증서의 공개 키에서 파생 될 수없는 알고리즘 매개 변수를 필요로하는 경우, 암호화를 위해 초기화되는 경우 기본 암호 구현은 필요한 매개 변수 자체 (제공자 별 기본값 또는 임의 값 사용)를 생성해야합니다. 키 래핑을 수행하고, 암호 해독 또는 키 래핑 해제를 위해 초기화되는 경우 &lt;code&gt;InvalidKeyException&lt;/code&gt; 을 발생시킵니다. 생성 된 매개 변수는 &lt;a href=&quot;#getParameters()&quot;&gt; &lt;code&gt;getParameters&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#getIV()&quot;&gt; &lt;code&gt;getIV&lt;/code&gt; 를&lt;/a&gt; 사용하여 검색 할 수 있습니다 (매개 변수가 IV 인 경우).</target>
        </trans-unit>
        <trans-unit id="624f76b7bbcd95cfb5dce88f3ddce2f2d8116067" translate="yes" xml:space="preserve">
          <source>If this class does not exist, or if the class exists but it is not a subclass of &lt;code&gt;URLStreamHandler&lt;/code&gt;, then a &lt;code&gt;MalformedURLException&lt;/code&gt; is thrown.</source>
          <target state="translated">이 클래스가 존재하지 않거나 클래스는 존재하지만 &lt;code&gt;URLStreamHandler&lt;/code&gt; 의 서브 클래스가 아닌 경우 &lt;code&gt;MalformedURLException&lt;/code&gt; 가 Throw됩니다.</target>
        </trans-unit>
        <trans-unit id="9156c08e78113d71e6a9049d21a6d22fe0c0dce1" translate="yes" xml:space="preserve">
          <source>If this class is a &lt;a href=&quot;#isLocalClass()&quot;&gt;local class&lt;/a&gt; or an &lt;a href=&quot;#isAnonymousClass()&quot;&gt;anonymous class&lt;/a&gt;, then this method is equivalent to invoking &lt;code&gt;getPackageName()&lt;/code&gt; on the &lt;a href=&quot;#getDeclaringClass()&quot;&gt;declaring class&lt;/a&gt; of the &lt;a href=&quot;#getEnclosingMethod()&quot;&gt;enclosing method&lt;/a&gt; or &lt;a href=&quot;#getEnclosingConstructor()&quot;&gt;enclosing constructor&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 경우 &lt;a href=&quot;#isLocalClass()&quot;&gt;로컬 클래스&lt;/a&gt; 또는 &lt;a href=&quot;#isAnonymousClass()&quot;&gt;익명 클래스&lt;/a&gt; ,이 메소드 호출 동등 &lt;code&gt;getPackageName()&lt;/code&gt; 온 &lt;a href=&quot;#getDeclaringClass()&quot;&gt;선언 클래스&lt;/a&gt; 의 &lt;a href=&quot;#getEnclosingMethod()&quot;&gt;바깥 방법&lt;/a&gt; 또는&lt;a href=&quot;#getEnclosingConstructor()&quot;&gt; 생성자를 둘러싸&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d2cdfcbdb46e84a8f3e13641e2358031001847ac" translate="yes" xml:space="preserve">
          <source>If this class is a member class, then this method is equivalent to invoking &lt;code&gt;getPackageName()&lt;/code&gt; on the &lt;a href=&quot;#getEnclosingClass()&quot;&gt;enclosing class&lt;/a&gt;.</source>
          <target state="translated">이 클래스가 멤버 클래스 인 경우이 메서드는 &lt;a href=&quot;#getEnclosingClass()&quot;&gt;둘러싸는 클래스&lt;/a&gt; 에서 &lt;code&gt;getPackageName()&lt;/code&gt; 을 호출하는 것과 같습니다. .</target>
        </trans-unit>
        <trans-unit id="8626e2167f3acaf69ed44441ed4989daba19da55" translate="yes" xml:space="preserve">
          <source>If this class is a top level class, then this method returns the fully qualified name of the package that the class is a member of, or the empty string if the class is in an unnamed package.</source>
          <target state="translated">이 클래스가 최상위 클래스 인 경우이 메서드는 클래스가 구성원 인 패키지의 정규화 된 이름을 반환하거나 클래스가 명명되지 않은 패키지에있는 경우 빈 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ddaac24bb48e59e163f155e65b6c6c215be3e736" translate="yes" xml:space="preserve">
          <source>If this class is in a named &lt;a href=&quot;module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt; then this method will attempt to find the resource in the module. This is done by delegating to the module's class loader &lt;a href=&quot;classloader#findResource(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;findResource(String,String)&lt;/code&gt;&lt;/a&gt; method, invoking it with the module name and the absolute name of the resource. Resources in named modules are subject to the rules for encapsulation specified in the &lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;module#getResourceAsStream(java.lang.String)&quot;&gt;&lt;code&gt;getResourceAsStream&lt;/code&gt;&lt;/a&gt; method and so this method returns &lt;code&gt;null&lt;/code&gt; when the resource is a non-&quot;&lt;code&gt;.class&lt;/code&gt;&quot; resource in a package that is not open to the caller's module.</source>
          <target state="translated">이 클래스가 명명 된 &lt;a href=&quot;module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt; 에있는 경우이 메서드는 모듈에서 리소스를 찾으려고 시도합니다. 이는 모듈의 클래스 로더 &lt;a href=&quot;classloader#findResource(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;findResource(String,String)&lt;/code&gt; &lt;/a&gt; 메서드 에 위임 하여 모듈 이름과 리소스의 절대 이름으로 호출하여 수행됩니다. 명명 된 모듈의 리소스는 &lt;code&gt;Module&lt;/code&gt; &lt;a href=&quot;module#getResourceAsStream(java.lang.String)&quot;&gt; &lt;code&gt;getResourceAsStream&lt;/code&gt; &lt;/a&gt; 메서드에 지정된 캡슐화 규칙을 따르 므로이 메서드 는 리소스가 비 &quot;일 때 &lt;code&gt;null&lt;/code&gt; 을 반환합니다. &lt;code&gt;.class&lt;/code&gt; 호출자의 모듈에 대해 열려 있지 않은 패키지 .class &quot;리소스 인 합니다.</target>
        </trans-unit>
        <trans-unit id="9d33ad049e90274fa3c71445ef6c35b438fe87ac" translate="yes" xml:space="preserve">
          <source>If this class loader defines a &lt;code&gt;Package&lt;/code&gt; of the given name, the &lt;code&gt;Package&lt;/code&gt; is returned. Otherwise, the ancestors of this class loader are searched recursively (parent by parent) for a &lt;code&gt;Package&lt;/code&gt; of the given name.</source>
          <target state="translated">이 클래스 로더 가 지정된 이름 의 &lt;code&gt;Package&lt;/code&gt; 를 정의 하면 &lt;code&gt;Package&lt;/code&gt; 가 반환됩니다. 그렇지 않으면이 클래스 로더의 조상이 재귀 적으로 (상위 별 상위) 검색됩니다. &lt;code&gt;Package&lt;/code&gt; 주어진 이름 패키지 에 됩니다.</target>
        </trans-unit>
        <trans-unit id="69d4f238f20070124b52ae9bc4ef867a68c61d0a" translate="yes" xml:space="preserve">
          <source>If this class object represents a class of arrays, then the internal form of the name consists of the name of the element type preceded by one or more '&lt;code&gt;[&lt;/code&gt;' characters representing the depth of the array nesting. The encoding of element type names is as follows:</source>
          <target state="translated">이 클래스 객체가 배열 클래스를 나타내는 경우, 이름의 내부 형식은 요소 유형의 이름 앞에 배열 중첩의 깊이를 나타내는 하나 이상의 ' &lt;code&gt;[&lt;/code&gt; '문자로 구성됩니다. 요소 유형 이름의 인코딩은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="def3edfc8fbf2a15bf3c8b618faaee89903ad9aa" translate="yes" xml:space="preserve">
          <source>If this class object represents a primitive type or void, then the name returned is a &lt;code&gt;String&lt;/code&gt; equal to the Java language keyword corresponding to the primitive type or void.</source>
          <target state="translated">이 클래스 객체가 프리미티브 유형 또는 void를 나타내는 경우, 리턴 된 이름 은 프리미티브 유형 또는 void에 해당하는 Java 언어 키워드와 동일한 &lt;code&gt;String&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a3d80b3d6f4447468d30f956a1a77f5832658ebf" translate="yes" xml:space="preserve">
          <source>If this class object represents a reference type that is not an array type then the binary name of the class is returned, as specified by</source>
          <target state="translated">이 클래스 객체가 배열 유형이 아닌 참조 유형을 나타내는 경우 클래스의 이진 이름이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="db28040b45d2a98f52c1833ce5f4c36ec6224266" translate="yes" xml:space="preserve">
          <source>If this class represents an array type then this method returns the package name of the element type. If this class represents a primitive type or void then the package name &quot;&lt;code&gt;java.lang&lt;/code&gt;&quot; is returned.</source>
          <target state="translated">이 클래스가 배열 유형을 나타내는 경우이 메소드는 요소 유형의 패키지 이름을 리턴합니다. 이 클래스가 기본 유형 또는 void를 나타내는 경우 패키지 이름 &quot; &lt;code&gt;java.lang&lt;/code&gt; &quot;이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="6f77ca8fe264d910e6b42fc0f47e0891e55279e4" translate="yes" xml:space="preserve">
          <source>If this class represents an array type, a primitive type or void, this method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 클래스가 배열 유형, 기본 유형 또는 void를 나타내는 경우이 메서드는 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="fef86f537c4d25ec3304e0508d1b9e97b4310b7c" translate="yes" xml:space="preserve">
          <source>If this code resides in a module, then in order to refer to the &lt;code&gt;com.example.CodecFactory&lt;/code&gt; interface, the module declaration would require the module which exports the interface. The module declaration would also specify use of &lt;code&gt;com.example.CodecFactory&lt;/code&gt;:</source>
          <target state="translated">이 코드가 모듈에있는 경우 &lt;code&gt;com.example.CodecFactory&lt;/code&gt; 인터페이스 를 참조 하려면 모듈 선언에 인터페이스를 내보내는 모듈이 필요합니다. 모듈 선언은 또한 &lt;code&gt;com.example.CodecFactory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09a4dc4cb86e1e2f58f6aef9bb6951ac52447ad2" translate="yes" xml:space="preserve">
          <source>If this collection fits in the specified array with room to spare (i.e., the array has more elements than this collection), the element in the array immediately following the end of the collection is set to &lt;code&gt;null&lt;/code&gt;. (This is useful in determining the length of this collection</source>
          <target state="translated">이 컬렉션이 여유 공간이있는 지정된 배열에 맞는 경우 (즉, 배열에이 컬렉션보다 많은 요소가있는 경우) 컬렉션의 끝 바로 뒤에있는 배열의 요소는 &lt;code&gt;null&lt;/code&gt; 로 설정됩니다 . (이 모음의 길이를 결정하는 데 유용합니다</target>
        </trans-unit>
        <trans-unit id="78d6d731c58007d098ae33f9cb0873fdf5217de6" translate="yes" xml:space="preserve">
          <source>If this collection makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order.</source>
          <target state="translated">이 컬렉션이 요소가 iterator에 의해 리턴되는 순서를 보증하는 경우,이 메소드는 요소를 동일한 순서로 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="c9446c62948f501cababa3237edd9e6e3d9650e0" translate="yes" xml:space="preserve">
          <source>If this component is a lightweight component, this method causes a call to this component's &lt;code&gt;paint&lt;/code&gt; method as soon as possible. Otherwise, this method causes a call to this component's &lt;code&gt;update&lt;/code&gt; method as soon as possible.</source>
          <target state="translated">이 컴포넌트가 경량 컴포넌트 인 경우이 메소드는 가능한 한 빨리이 컴포넌트의 &lt;code&gt;paint&lt;/code&gt; 메소드를 호출 합니다. 그렇지 않으면이 메소드는이 컴포넌트의 &lt;code&gt;update&lt;/code&gt; 호출합니다. 가능한 한 빨리이 메서드를 합니다.</target>
        </trans-unit>
        <trans-unit id="43c6df72f69fc2a5fdc4f0aef260da90a54256f3" translate="yes" xml:space="preserve">
          <source>If this component is a lightweight component, this method causes a call to this component's &lt;code&gt;paint&lt;/code&gt; method. Otherwise, this method causes a call to this component's &lt;code&gt;update&lt;/code&gt; method.</source>
          <target state="translated">이 컴포넌트가 경량 컴포넌트 인 경우이 메서드는이 컴포넌트의 &lt;code&gt;paint&lt;/code&gt; 메서드를 호출합니다 . 그렇지 않으면이 메서드는이 구성 요소의 &lt;code&gt;update&lt;/code&gt; 메서드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="18095941c15618d966f7b371c9f6f6b0d2557e6a" translate="yes" xml:space="preserve">
          <source>If this component is not a lightweight component, the AWT calls the &lt;code&gt;update&lt;/code&gt; method in response to a call to &lt;code&gt;repaint&lt;/code&gt;. You can assume that the background is not cleared.</source>
          <target state="translated">이 구성 요소가 경량 구성 요소가 아닌 경우 AWT는 다음 에 대한 호출에 대한 응답으로 &lt;code&gt;update&lt;/code&gt; 메서드를 호출합니다. &lt;code&gt;repaint&lt;/code&gt; . 배경이 지워지지 않았다고 가정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c98bf87256cbfcf308d313fd2f95fc4c59ba56e" translate="yes" xml:space="preserve">
          <source>If this connector is not already associated with an &lt;code&gt;MBeanServer&lt;/code&gt; object, or if the &lt;code&gt;mbsf.setMBeanServer&lt;/code&gt; call just mentioned succeeds, then &lt;code&gt;mbsf&lt;/code&gt; becomes this connector server's &lt;code&gt;MBeanServer&lt;/code&gt;.</source>
          <target state="translated">이 커넥터가 아직 &lt;code&gt;MBeanServer&lt;/code&gt; 오브젝트 와 연관되어 있지 않거나 방금 언급 한 &lt;code&gt;mbsf.setMBeanServer&lt;/code&gt; 호출이 성공하면 &lt;code&gt;mbsf&lt;/code&gt; 가이 커넥터 서버의 &lt;code&gt;MBeanServer&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="58e96a5a6e2be6622a22adedba3560a6b7eb53b6" translate="yes" xml:space="preserve">
          <source>If this connector server is already associated with an &lt;code&gt;MBeanServer&lt;/code&gt; object, then that object is given to &lt;a href=&quot;../mbeanserverforwarder#setMBeanServer-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;mbsf.setMBeanServer&lt;/code&gt;&lt;/a&gt;. If doing so produces an exception, this method throws the same exception without any other effect.</source>
          <target state="translated">이 커넥터 서버가 이미 &lt;code&gt;MBeanServer&lt;/code&gt; 오브젝트 와 연관되어 있으면 해당 오브젝트가 &lt;a href=&quot;../mbeanserverforwarder#setMBeanServer-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;mbsf.setMBeanServer&lt;/code&gt; 에&lt;/a&gt; 제공됩니다 . 그렇게하면 예외가 발생하면이 방법은 다른 효과없이 동일한 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="54238ea0dde39365f3abd9591fec0cc2e7191d52" translate="yes" xml:space="preserve">
          <source>If this connector server is already associated with an &lt;code&gt;MBeanServer&lt;/code&gt; object, then that object is given to &lt;a href=&quot;mbeanserverforwarder#setMBeanServer(javax.management.MBeanServer)&quot;&gt;&lt;code&gt;mbsf.setMBeanServer&lt;/code&gt;&lt;/a&gt;. If doing so produces an exception, this method throws the same exception without any other effect.</source>
          <target state="translated">이 커넥터 서버가 이미 &lt;code&gt;MBeanServer&lt;/code&gt; 오브젝트 와 연관되어 있으면 해당 오브젝트가 &lt;a href=&quot;mbeanserverforwarder#setMBeanServer(javax.management.MBeanServer)&quot;&gt; &lt;code&gt;mbsf.setMBeanServer&lt;/code&gt; 에&lt;/a&gt; 제공됩니다. . 이렇게하면 예외가 발생하면이 메서드는 다른 효과없이 동일한 예외를 throw합니다.</target>
        </trans-unit>
        <trans-unit id="e199ab0891f8cfdd3a886ca4d5502a09e0396dc4" translate="yes" xml:space="preserve">
          <source>If this connector server is already associated with an &lt;code&gt;MBeanServer&lt;/code&gt; object, then that object is given to &lt;a href=&quot;mbeanserverforwarder#setMBeanServer-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;mbsf.setMBeanServer&lt;/code&gt;&lt;/a&gt;. If doing so produces an exception, this method throws the same exception without any other effect.</source>
          <target state="translated">이 커넥터 서버가 이미 &lt;code&gt;MBeanServer&lt;/code&gt; 오브젝트 와 연관되어 있으면 해당 오브젝트가 &lt;a href=&quot;mbeanserverforwarder#setMBeanServer-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;mbsf.setMBeanServer&lt;/code&gt; 에&lt;/a&gt; 제공됩니다 . 그렇게하면 예외가 발생하면이 방법은 다른 효과없이 동일한 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="ae5f6cf31f822688ca1f884ee4068dbfa858e7ae" translate="yes" xml:space="preserve">
          <source>If this connector server is already attached to an MBean server, this method has no effect. The MBean server it is attached to is not necessarily the one it is being registered in.</source>
          <target state="translated">이 커넥터 서버가 이미 MBean 서버에 연결되어 있으면이 방법은 효과가 없습니다. 접속 된 MBean 서버가 반드시 등록되어있는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="0a9e140cb0c832ab6b488c178969be92c585856f" translate="yes" xml:space="preserve">
          <source>If this constitutes a change in the selected item, &lt;code&gt;ItemListener&lt;/code&gt;s added to the combo box will be notified with one or two &lt;code&gt;ItemEvent&lt;/code&gt;s. If there is a current selected item, an &lt;code&gt;ItemEvent&lt;/code&gt; will be fired and the state change will be &lt;code&gt;ItemEvent.DESELECTED&lt;/code&gt;. If &lt;code&gt;anObject&lt;/code&gt; is in the list and is not currently selected then an &lt;code&gt;ItemEvent&lt;/code&gt; will be fired and the state change will be &lt;code&gt;ItemEvent.SELECTED&lt;/code&gt;.</source>
          <target state="translated">이것이 선택된 항목의 변경을 구성하는 경우 콤보 상자에 추가 된 &lt;code&gt;ItemListener&lt;/code&gt; 는 하나 또는 두 개의 &lt;code&gt;ItemEvent&lt;/code&gt; 로 알림을 받습니다. 현재 선택된 항목이 있으면 &lt;code&gt;ItemEvent&lt;/code&gt; 가 시작되고 상태 변경은 &lt;code&gt;ItemEvent.DESELECTED&lt;/code&gt; 가 됩니다. 경우 &lt;code&gt;anObject&lt;/code&gt; 를이 목록에 현재 다음 선택되지 &lt;code&gt;ItemEvent&lt;/code&gt; 트리거되어 상태 변화가있을 것입니다 &lt;code&gt;ItemEvent.SELECTED&lt;/code&gt; 로 .</target>
        </trans-unit>
        <trans-unit id="37c1761b33f633d4ce5e3fd3edbd2ab61e42fe4f" translate="yes" xml:space="preserve">
          <source>If this constructor is used to process a stylesheet, normally setSystemId should also be called, so that relative URI references can be resolved.</source>
          <target state="translated">이 생성자가 스타일 시트를 처리하는 데 사용되는 경우 일반적으로 setSystemId도 호출해야 상대 URI 참조를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="591c70492849834b0b9910ca18bf79e4808ef615" translate="yes" xml:space="preserve">
          <source>If this decoder has already been flushed then invoking this method has no effect.</source>
          <target state="translated">이 디코더가 벌써 플러쉬 된 경우,이 메소드의 호출은 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="86ca06031a1ecf73bf9da47b58681d2e12423abc" translate="yes" xml:space="preserve">
          <source>If this decoder implements an auto-detecting charset then at a single point during a decoding operation this method may start returning &lt;code&gt;true&lt;/code&gt; to indicate that a specific charset has been detected in the input byte sequence. Once this occurs, the &lt;a href=&quot;#detectedCharset()&quot;&gt;&lt;code&gt;detectedCharset&lt;/code&gt;&lt;/a&gt; method may be invoked to retrieve the detected charset.</source>
          <target state="translated">이 디코더가 자동 감지 문자 집합을 구현하면 디코딩 작업 중 단일 지점에서이 메서드는 입력 바이트 시퀀스에서 특정 문자 집합이 감지되었음을 나타 내기 위해 &lt;code&gt;true&lt;/code&gt; 를 반환 하기 시작할 수 있습니다 . 이 문제가 발생하면 &lt;a href=&quot;#detectedCharset()&quot;&gt; &lt;code&gt;detectedCharset&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 탐지 된 문자 집합을 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29e1093694eed107a88bf7c07bbd5945249dbbd2" translate="yes" xml:space="preserve">
          <source>If this decoder implements an auto-detecting charset then at a single point during a decoding operation this method may start returning &lt;code&gt;true&lt;/code&gt; to indicate that a specific charset has been detected in the input byte sequence. Once this occurs, the &lt;a href=&quot;charsetdecoder#detectedCharset--&quot;&gt;&lt;code&gt;detectedCharset&lt;/code&gt;&lt;/a&gt; method may be invoked to retrieve the detected charset.</source>
          <target state="translated">이 디코더가 자동 검출 문자셋을 구현하면, 디코딩 동작 동안 단일 지점에서이 방법은 특정 문자셋이 입력 바이트 시퀀스에서 검출되었음을 나타 내기 위해 &lt;code&gt;true&lt;/code&gt; 를 리턴 하기 시작할 수있다 . 이 문제가 발생 하면 감지 된 문자 세트를 검색하기 위해 &lt;a href=&quot;charsetdecoder#detectedCharset--&quot;&gt; &lt;code&gt;detectedCharset&lt;/code&gt; &lt;/a&gt; 메소드가 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94371ead6eeef262635714af7aa3dd537f5b17ff" translate="yes" xml:space="preserve">
          <source>If this decoder implements an auto-detecting charset then this method returns the actual charset once it has been detected. After that point, this method returns the same value for the duration of the current decoding operation. If not enough input bytes have yet been read to determine the actual charset then this method throws an &lt;a href=&quot;../../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 디코더가 자동 감지 문자 세트를 구현하면이 메소드는 감지 된 실제 문자 세트를 리턴합니다. 이 시점 이후에이 메서드는 현재 디코딩 작업 기간 동안 동일한 값을 반환합니다. 실제 문자 세트를 판별하기 위해 충분한 입력 바이트를 아직 읽지 않은 경우이 메소드는 &lt;a href=&quot;../../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="c64bf88c12ecf5625c8218a6500e6ed616cbae7d" translate="yes" xml:space="preserve">
          <source>If this deque fits in the specified array with room to spare (i.e., the array has more elements than this deque), the element in the array immediately following the end of the deque is set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 deque가 여유 공간이있는 지정된 배열에 맞는 경우 (즉, 배열에이 deque보다 많은 요소가있는 경우) deque 끝 바로 다음에있는 배열의 요소가 &lt;code&gt;null&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="b460cff057520076da53b17b67bc663d2eae2c6f" translate="yes" xml:space="preserve">
          <source>If this dialog is modal and blocks some windows, then all of them are also sent to the back to keep them below the blocking dialog.</source>
          <target state="translated">이 대화 상자가 모달이고 일부 창을 차단하는 경우 모든 창도 뒤로 보내져 차단 대화 상자 아래에 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="02f57345a6452f5e9026d62211962bbc940e055e" translate="yes" xml:space="preserve">
          <source>If this dictionary already contains an entry for the specified &lt;code&gt;key&lt;/code&gt;, the value already in this dictionary for that &lt;code&gt;key&lt;/code&gt; is returned, after modifying the entry to contain the new element.</source>
          <target state="translated">이 사전에 지정된 &lt;code&gt;key&lt;/code&gt; 에 대한 항목이 이미 포함되어 있으면 새 요소를 포함하도록 항목을 수정 한 후 해당 &lt;code&gt;key&lt;/code&gt; 대한이 사전에 이미있는 값 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="21cdc0ae4deca45735edd1a8c869ab07f87eadf6" translate="yes" xml:space="preserve">
          <source>If this dictionary does not already have an entry for the specified &lt;code&gt;key&lt;/code&gt;, an entry is created for the specified &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;, and &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">이 사전에 지정된 &lt;code&gt;key&lt;/code&gt; 에 대한 항목이 없으면 지정된 &lt;code&gt;key&lt;/code&gt; 및 &lt;code&gt;value&lt;/code&gt; 에 대한 항목이 작성 되고 &lt;code&gt;null&lt;/code&gt; 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="5ba6239de0cab448d7826072832e3944f0eff1f3" translate="yes" xml:space="preserve">
          <source>If this duration has greater than millisecond precision, then the conversion will drop any excess precision information as though the amount in nanoseconds was subject to integer division by one million.</source>
          <target state="translated">이 지속 시간이 밀리 초보다 큰 정밀도를 갖는 경우, 변환은 나노초 단위의 양이 백만 분의 정수로 분할되는 것처럼 초과 정밀도 정보를 떨어 뜨릴 것이다.</target>
        </trans-unit>
        <trans-unit id="646430d8f0c3cf4b060406c066441d14b415faf2" translate="yes" xml:space="preserve">
          <source>If this duration is too large to fit in a &lt;code&gt;long&lt;/code&gt; milliseconds, then an exception is thrown.</source>
          <target state="translated">이 지속 시간이 너무 &lt;code&gt;long&lt;/code&gt; 밀리 초 에 맞지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5eb1910e8a8632050383d1502ff10c5891a131f7" translate="yes" xml:space="preserve">
          <source>If this duration is too large to fit in a &lt;code&gt;long&lt;/code&gt; nanoseconds, then an exception is thrown.</source>
          <target state="translated">이 지속 시간이 너무 &lt;code&gt;long&lt;/code&gt; 나노초 에 맞지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fc847af510710c196d33cacd1e6c4938549822f3" translate="yes" xml:space="preserve">
          <source>If this edit is &lt;code&gt;inProgress&lt;/code&gt;, accepts &lt;code&gt;anEdit&lt;/code&gt; and returns true.</source>
          <target state="translated">이 편집이 &lt;code&gt;inProgress&lt;/code&gt; 인 경우 &lt;code&gt;anEdit&lt;/code&gt; 를 수락합니다. 하고 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4a91202676916cac7dee740e5b4030146c55eaee" translate="yes" xml:space="preserve">
          <source>If this element is one whose declaration is lexically enclosed immediately within the declaration of another element, that other element is returned.</source>
          <target state="translated">이 요소가 선언이 다른 요소의 선언 내에 즉시 어휘 적으로 묶인 요소 인 경우 해당 요소가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="f792c4a3d4c584f788e17666a92b9623483ee223" translate="yes" xml:space="preserve">
          <source>If this encoder has already been flushed then invoking this method has no effect.</source>
          <target state="translated">이 엔코더가 이미 세척 된 경우이 방법을 호출해도 아무런 영향이 없습니다.</target>
        </trans-unit>
        <trans-unit id="fec1a4cca0a225ea2cbc3a553e3c13b67dbfe972" translate="yes" xml:space="preserve">
          <source>If this end of the connection is expected to offer application protocol values, all protocols configured by this method will be sent to the peer.</source>
          <target state="translated">이 연결 끝이 응용 프로그램 프로토콜 값을 제공 할 것으로 예상되는 경우이 방법으로 구성된 모든 프로토콜이 피어로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="f2bb0b0bcd59eee69bd5351804855fdd2bdb7afa" translate="yes" xml:space="preserve">
          <source>If this end of the connection is expected to select the application protocol value, the &lt;code&gt;protocols&lt;/code&gt; configured by this method are compared with those sent by the peer. The first matched value becomes the negotiated value. If none of the &lt;code&gt;protocols&lt;/code&gt; were actually requested by the peer, the underlying protocol will determine what action to take. (For example, ALPN will send a &lt;code&gt;&quot;no_application_protocol&quot;&lt;/code&gt; alert and terminate the connection.)</source>
          <target state="translated">이 연결 끝에서 응용 프로그램 프로토콜 값을 선택할 것으로 예상 되는 경우이 방법으로 구성된 &lt;code&gt;protocols&lt;/code&gt; 이 피어에서 보낸 프로토콜 과 비교됩니다. 첫 번째로 일치하는 값이 협상 된 값이됩니다. 피어가 실제로 요청한 &lt;code&gt;protocols&lt;/code&gt; 이 없으면 기본 프로토콜이 수행 할 작업을 결정합니다. (예를 들어, ALPN은 &lt;code&gt;&quot;no_application_protocol&quot;&lt;/code&gt; 을 보냅니다. 경고를 연결을 종료합니다.)</target>
        </trans-unit>
        <trans-unit id="6c074959dfda7a1b8ccc45069a9e2c3e535da645" translate="yes" xml:space="preserve">
          <source>If this exemption mechanism requires any algorithm parameters and &lt;code&gt;params&lt;/code&gt; is null, the underlying exemption mechanism implementation is supposed to generate the required parameters itself (using provider-specific default values); in the case that algorithm parameters must be specified by the caller, an &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; is raised.</source>
          <target state="translated">이 제외 메커니즘에 알고리즘 매개 변수가 필요하고 &lt;code&gt;params&lt;/code&gt; 가 널인 경우 기본 제외 메커니즘 구현은 필수 매개 변수 자체를 생성합니다 (제공자 별 기본값 사용). 호출자가 알고리즘 매개 변수를 지정해야하는 경우 &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f48b406dc55c7d93d9b734b8f828b98a0c6d2cb0" translate="yes" xml:space="preserve">
          <source>If this exemption mechanism requires any algorithm parameters that cannot be derived from the given &lt;code&gt;key&lt;/code&gt;, the underlying exemption mechanism implementation is supposed to generate the required parameters itself (using provider-specific default values); in the case that algorithm parameters must be specified by the caller, an &lt;code&gt;InvalidKeyException&lt;/code&gt; is raised.</source>
          <target state="translated">이 제외 메커니즘에 지정된 &lt;code&gt;key&lt;/code&gt; 에서 파생 될 수없는 알고리즘 매개 변수가 필요한 경우 기본 제외 메커니즘 구현은 필요한 매개 변수 자체를 제공합니다 (제공자 별 기본값 사용). 호출자가 알고리즘 매개 변수를 지정해야하는 경우 &lt;code&gt;InvalidKeyException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="50aecb57b570915b3125ed9e4b7405a7c9a0b5c2" translate="yes" xml:space="preserve">
          <source>If this factory cannot create a control using the argument supplied, it should return null. A factory should only throw an exception if it is sure that it is the only intended factory and that no other control factories should be tried. This might happen, for example, if the BER data in the control does not match what is expected of a control with the given OID. Since this method throws &lt;code&gt;NamingException&lt;/code&gt;, any other internally generated exception that should be propagated must be wrapped inside a &lt;code&gt;NamingException&lt;/code&gt;.</source>
          <target state="translated">이 팩토리가 제공된 인수를 사용하여 제어를 작성할 수 없으면 널을 리턴해야합니다. 팩토리가 유일한 팩토리이고 다른 제어 팩토리를 시도해서는 안되는 경우에만 팩토리에서 예외를 처리해야합니다. 예를 들어, 컨트롤의 BER 데이터가 주어진 OID를 가진 컨트롤의 예상치와 일치하지 않는 경우에 발생할 수 있습니다. 이 메소드는 &lt;code&gt;NamingException&lt;/code&gt; 을 Throw하기 때문에 , 전파해야 할 내부적으로 생성 된 다른 예외는 &lt;code&gt;NamingException&lt;/code&gt; 에 랩됩니다 .</target>
        </trans-unit>
        <trans-unit id="efb22e1e9f3e374655d1b34fc555ad0e137e1b09" translate="yes" xml:space="preserve">
          <source>If this field descriptor describes an array type, return a descriptor for its component type, otherwise return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 필드 설명자가 배열 유형을 설명하는 경우 해당 구성 요소 유형에 대한 설명자를 반환하고, 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="45e27c4c938fbe66c22c4c86a3ed6d25c1cb9914" translate="yes" xml:space="preserve">
          <source>If this file has an associated channel then the channel is closed as well.</source>
          <target state="translated">이 파일에 연결된 채널이 있으면 채널도 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="40514a98cfea1f91e67b273067b4bdf04e4a3289" translate="yes" xml:space="preserve">
          <source>If this flavor does not support the charset parameter, its representation must be &lt;code&gt;java.io.InputStream&lt;/code&gt;, &lt;code&gt;java.nio.ByteBuffer&lt;/code&gt;, or &lt;code&gt;[B&lt;/code&gt;.</source>
          <target state="translated">이 플레이버가 charset 매개 변수를 지원하지 않는 경우 해당 표현은 &lt;code&gt;java.io.InputStream&lt;/code&gt; , &lt;code&gt;java.nio.ByteBuffer&lt;/code&gt; 또는 &lt;code&gt;[B&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9244b141762feecbc0e9471262e7bf28fb2d00c" translate="yes" xml:space="preserve">
          <source>If this flavor supports the charset parameter, it must be equivalent to &lt;code&gt;DataFlavor.stringFlavor&lt;/code&gt;, or its representation must be &lt;code&gt;java.io.Reader&lt;/code&gt;, &lt;code&gt;java.lang.String&lt;/code&gt;, &lt;code&gt;java.nio.CharBuffer&lt;/code&gt;, &lt;code&gt;[C&lt;/code&gt;, &lt;code&gt;java.io.InputStream&lt;/code&gt;, &lt;code&gt;java.nio.ByteBuffer&lt;/code&gt;, or &lt;code&gt;[B&lt;/code&gt;. If the representation is &lt;code&gt;java.io.InputStream&lt;/code&gt;, &lt;code&gt;java.nio.ByteBuffer&lt;/code&gt;, or &lt;code&gt;[B&lt;/code&gt;, then this flavor's &lt;code&gt;charset&lt;/code&gt; parameter must be supported by this implementation of the Java platform. If a charset is not specified, then the platform default charset, which is always supported, is assumed.</source>
          <target state="translated">이 플레이버가 charset 매개 변수를 지원하는 경우 &lt;code&gt;DataFlavor.stringFlavor&lt;/code&gt; 와 동등 하거나 해당 표현은 &lt;code&gt;java.io.Reader&lt;/code&gt; , &lt;code&gt;java.lang.String&lt;/code&gt; , &lt;code&gt;java.nio.CharBuffer&lt;/code&gt; , &lt;code&gt;[C&lt;/code&gt; , &lt;code&gt;java.io.InputStream&lt;/code&gt; , &lt;code&gt;java.nio.ByteBuffer&lt;/code&gt; 또는 &lt;code&gt;[B&lt;/code&gt; . 표현이 &lt;code&gt;java.io.InputStream&lt;/code&gt; , &lt;code&gt;java.nio.ByteBuffer&lt;/code&gt; 또는 &lt;code&gt;[B&lt;/code&gt; 이면이 플레이버의 &lt;code&gt;charset&lt;/code&gt; 매개 변수는이 Java 플랫폼 구현에서 지원되어야합니다. 문자 집합이 지정되지 않은 경우 항상 지원되는 플랫폼 기본 문자 집합이 가정됩니다.</target>
        </trans-unit>
        <trans-unit id="635e785cd12b388367b6da4d211b51f42af3dbeb" translate="yes" xml:space="preserve">
          <source>If this implementation supports</source>
          <target state="translated">이 구현이 지원하는 경우</target>
        </trans-unit>
        <trans-unit id="cb6cded9975349e57e55f0c24d9a6249435ce9e2" translate="yes" xml:space="preserve">
          <source>If this instance was created with the &lt;a href=&quot;#%3Cinit%3E(java.io.InputStream,java.lang.String)&quot;&gt;&lt;code&gt;InputStreamReader(InputStream, String)&lt;/code&gt;&lt;/a&gt; constructor then the returned name, being unique for the encoding, may differ from the name passed to the constructor. This method will return &lt;code&gt;null&lt;/code&gt; if the stream has been closed.</source>
          <target state="translated">이 인스턴스가 &lt;a href=&quot;#%3Cinit%3E(java.io.InputStream,java.lang.String)&quot;&gt; &lt;code&gt;InputStreamReader(InputStream, String)&lt;/code&gt; &lt;/a&gt; 생성자로 생성 된 경우 인코딩에 대해 고유 한 반환 된 이름은 생성자에 전달 된 이름과 다를 수 있습니다. 이 메서드는 &lt;code&gt;null&lt;/code&gt; 을 반환합니다. 스트림이 닫힌 경우 합니다.</target>
        </trans-unit>
        <trans-unit id="ec5e9663cdfaff9a4389c4e89da42425e3294af1" translate="yes" xml:space="preserve">
          <source>If this instance was created with the &lt;a href=&quot;#%3Cinit%3E(java.io.OutputStream,java.lang.String)&quot;&gt;&lt;code&gt;OutputStreamWriter(OutputStream, String)&lt;/code&gt;&lt;/a&gt; constructor then the returned name, being unique for the encoding, may differ from the name passed to the constructor. This method may return &lt;code&gt;null&lt;/code&gt; if the stream has been closed.</source>
          <target state="translated">이 인스턴스가 &lt;a href=&quot;#%3Cinit%3E(java.io.OutputStream,java.lang.String)&quot;&gt; &lt;code&gt;OutputStreamWriter(OutputStream, String)&lt;/code&gt; &lt;/a&gt; 생성자로 생성 된 경우 반환 된 이름은 인코딩에 대해 고유하며 생성자에 전달 된 이름과 다를 수 있습니다. 이 메서드는 &lt;code&gt;null&lt;/code&gt; 을 반환 할 수 있습니다. 스트림이 닫힌 경우 .</target>
        </trans-unit>
        <trans-unit id="fe133eddff804df44bcaf058ea960eef008f4711" translate="yes" xml:space="preserve">
          <source>If this instance was created with the &lt;a href=&quot;inputstreamreader#InputStreamReader-java.io.InputStream-java.lang.String-&quot;&gt;&lt;code&gt;InputStreamReader(InputStream, String)&lt;/code&gt;&lt;/a&gt; constructor then the returned name, being unique for the encoding, may differ from the name passed to the constructor. This method will return &lt;code&gt;null&lt;/code&gt; if the stream has been closed.</source>
          <target state="translated">이 인스턴스가 &lt;a href=&quot;inputstreamreader#InputStreamReader-java.io.InputStream-java.lang.String-&quot;&gt; &lt;code&gt;InputStreamReader(InputStream, String)&lt;/code&gt; &lt;/a&gt; 생성자 로 작성된 경우 , 인코딩에 고유 한 리턴 된 이름이 생성자에 전달 된 이름과 다를 수 있습니다. 이 메소드는 스트림이 닫힌 경우 &lt;code&gt;null&lt;/code&gt; 을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="890b309648dad3759e14d379a74cbd471b520cc0" translate="yes" xml:space="preserve">
          <source>If this instance was created with the &lt;a href=&quot;outputstreamwriter#OutputStreamWriter-java.io.OutputStream-java.lang.String-&quot;&gt;&lt;code&gt;OutputStreamWriter(OutputStream, String)&lt;/code&gt;&lt;/a&gt; constructor then the returned name, being unique for the encoding, may differ from the name passed to the constructor. This method may return &lt;code&gt;null&lt;/code&gt; if the stream has been closed.</source>
          <target state="translated">이 인스턴스가 &lt;a href=&quot;outputstreamwriter#OutputStreamWriter-java.io.OutputStream-java.lang.String-&quot;&gt; &lt;code&gt;OutputStreamWriter(OutputStream, String)&lt;/code&gt; &lt;/a&gt; 생성자로 생성 된 경우 인코딩에 고유 한 반환 이름은 생성자에 전달 된 이름과 다를 수 있습니다. 스트림이 닫힌 경우이 메서드는 &lt;code&gt;null&lt;/code&gt; 을 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9c0c7ed5296853c747df2e52d735327259e31d7a" translate="yes" xml:space="preserve">
          <source>If this instant has greater than millisecond precision, then the conversion will drop any excess precision information as though the amount in nanoseconds was subject to integer division by one million.</source>
          <target state="translated">이 순간이 밀리 초보다 큰 정밀도를 갖는 경우, 변환은 나노초 단위의 양이 백만 분의 정수로 분할되는 것처럼 초과 정밀도 정보를 떨어 뜨릴 것이다.</target>
        </trans-unit>
        <trans-unit id="af5f9e803caf892e414dbe5489eabcd25bc34fc5" translate="yes" xml:space="preserve">
          <source>If this instant represents a point on the time-line too far in the future or past to fit in a &lt;code&gt;long&lt;/code&gt; milliseconds, then an exception is thrown.</source>
          <target state="translated">이 순간이 너무 멀리에 맞게 미래 또는 과거의 시간 라인에 포인트 나타내는 경우 &lt;code&gt;long&lt;/code&gt; 밀리 초, 다음 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c551a84fb345608aa01aa4a9b03a192e434b911e" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;moduleelement#getEnclosingElement()&quot;&gt;module&lt;/a&gt;, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">이는 경우 &lt;a href=&quot;moduleelement#getEnclosingElement()&quot;&gt;모듈&lt;/a&gt; , &lt;code&gt;null&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1d83f2f13eb01a02375941491729e755fa976b00" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;packageelement#getEnclosingElement()&quot;&gt;package&lt;/a&gt;, its module is returned if such a module exists. Otherwise, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">이것이 &lt;a href=&quot;packageelement#getEnclosingElement()&quot;&gt;package 인&lt;/a&gt; 경우 해당 모듈이 있으면 해당 모듈이 반환됩니다. 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="51dd5d8c5d533ffbfd6b5e326c493179436819ba" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;packageelement#getEnclosingElement--&quot;&gt;package&lt;/a&gt;, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">이것이 &lt;a href=&quot;packageelement#getEnclosingElement--&quot;&gt;package 인&lt;/a&gt; 경우 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6e6f344863957cf1374347b65728d2e7cc61d9fd" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;recordcomponentelement#getEnclosingElement()&quot;&gt;record component&lt;/a&gt;, &lt;a href=&quot;typeelement&quot;&gt;the type&lt;/a&gt; which declares the record component is returned.</source>
          <target state="translated">이것이 &lt;a href=&quot;recordcomponentelement#getEnclosingElement()&quot;&gt;레코드 컴포넌트&lt;/a&gt; 인 &lt;a href=&quot;typeelement&quot;&gt;경우 &lt;/a&gt;레코드 컴포넌트 를 선언하는 유형 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="a01b93df7c40fa1373936e0085684f8ee1ae5419" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;typeelement#getEnclosingElement()&quot;&gt;top-level type&lt;/a&gt;, its package is returned.</source>
          <target state="translated">이것이 &lt;a href=&quot;typeelement#getEnclosingElement()&quot;&gt;최상위 유형 인&lt;/a&gt; 경우 패키지가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="bf598f6c1d24fa4deedb239a99d3523a7ece48da" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;typeelement#getEnclosingElement--&quot;&gt;top-level type&lt;/a&gt;, its package is returned.</source>
          <target state="translated">이것이 &lt;a href=&quot;typeelement#getEnclosingElement--&quot;&gt;최상위 유형 인&lt;/a&gt; 경우 패키지가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f59ab5756a1f1e0f8946d6203578b85d274d2444" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;typeparameterelement#getEnclosingElement()&quot;&gt;type parameter&lt;/a&gt;, &lt;a href=&quot;typeparameterelement#getGenericElement()&quot;&gt;the generic element&lt;/a&gt; of the type parameter is returned.</source>
          <target state="translated">이것은 경우 &lt;a href=&quot;typeparameterelement#getEnclosingElement()&quot;&gt;형식 매개 변수&lt;/a&gt; , &lt;a href=&quot;typeparameterelement#getGenericElement()&quot;&gt;일반 요소&lt;/a&gt; 유형 매개 변수가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6e96bb4b14e3eba6404c2f781fb3a62e040d52fd" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;typeparameterelement#getEnclosingElement--&quot;&gt;type parameter&lt;/a&gt;, &lt;a href=&quot;typeparameterelement#getGenericElement--&quot;&gt;the generic element&lt;/a&gt; of the type parameter is returned.</source>
          <target state="translated">이것이 &lt;a href=&quot;typeparameterelement#getEnclosingElement--&quot;&gt;type 매개 변수&lt;/a&gt; 인 &lt;a href=&quot;typeparameterelement#getGenericElement--&quot;&gt;경우 &lt;/a&gt;type 매개 변수 의 일반 요소 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="cf80274b5d3d13cbea85b0d82765c6140bc5c500" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;variableelement#getEnclosingElement()&quot;&gt;method or constructor parameter&lt;/a&gt;, &lt;a href=&quot;executableelement&quot;&gt;the executable element&lt;/a&gt; which declares the parameter is returned.</source>
          <target state="translated">이것이 &lt;a href=&quot;variableelement#getEnclosingElement()&quot;&gt; 메소드 또는 생성자 매개 변수&lt;/a&gt; , &lt;a href=&quot;executableelement&quot;&gt;실행 요소&lt;/a&gt; 매개 변수가 반환됩니다 선언합니다.</target>
        </trans-unit>
        <trans-unit id="78cf6561ffb980740deb1888906856d467f5457b" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;variableelement#getEnclosingElement--&quot;&gt;method or constructor parameter&lt;/a&gt;, &lt;a href=&quot;executableelement&quot;&gt;the executable element&lt;/a&gt; which declares the parameter is returned.</source>
          <target state="translated">이것이 &lt;a href=&quot;variableelement#getEnclosingElement--&quot;&gt;메소드 또는 생성자 매개 변수&lt;/a&gt; 인 &lt;a href=&quot;executableelement&quot;&gt;경우 &lt;/a&gt;매개 변수 를 선언하는 실행 가능 요소 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="0a7a248892ccdcbf22ee9292577b0bb6d55804c0" translate="yes" xml:space="preserve">
          <source>If this is not done the results are undefined.</source>
          <target state="translated">이것이 완료되지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f851c4382c4142bf086b49847505a9f497c77cff" translate="yes" xml:space="preserve">
          <source>If this is the first &lt;code&gt;InitialDirContext&lt;/code&gt; created with a &lt;code&gt;java.naming.provider.url&lt;/code&gt; using the ldap protocol then the &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;ServiceLoader&lt;/a&gt; mechanism is used to locate &lt;a href=&quot;../ldap/spi/ldapdnsprovider&quot;&gt;LdapDnsProvider&lt;/a&gt; implementations using the system class loader. The order that providers are located is implementation specific and an implementation is free to cache the located providers.</source>
          <target state="translated">이것이 ldap 프로토콜을 사용하여 &lt;code&gt;java.naming.provider.url&lt;/code&gt; 로 생성 된 첫 번째 &lt;code&gt;InitialDirContext&lt;/code&gt; 인 경우 &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;ServiceLoader&lt;/a&gt; 메커니즘은 시스템 클래스 로더를 사용하여 &lt;a href=&quot;../ldap/spi/ldapdnsprovider&quot;&gt;LdapDnsProvider&lt;/a&gt; 구현 을 찾는 데 사용됩니다 . 공급자를 찾는 순서는 구현에 따라 다르며 구현은 찾은 공급자를 자유롭게 캐시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b763c6b818e8148b4556ea7a6bafd024a995a8e8" translate="yes" xml:space="preserve">
          <source>If this is the first &lt;code&gt;LogRecord&lt;/code&gt; to be written to a given &lt;code&gt;OutputStream&lt;/code&gt;, the &lt;code&gt;Formatter&lt;/code&gt;'s &quot;head&quot; string is written to the stream before the &lt;code&gt;LogRecord&lt;/code&gt; is written.</source>
          <target state="translated">이 첫 번째 경우 &lt;code&gt;LogRecord&lt;/code&gt; 의 주어진에 기록되는 &lt;code&gt;OutputStream&lt;/code&gt; 에가 의 &lt;code&gt;Formatter&lt;/code&gt; 전과의 &quot;머리&quot;문자열을 스트림에 기록됩니다 &lt;code&gt;LogRecord&lt;/code&gt; 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="9c8044ad26a6d20700b19f55ec42869a70d922ea" translate="yes" xml:space="preserve">
          <source>If this is the first URL object being created with the specified protocol, a</source>
          <target state="translated">지정된 프로토콜로 생성 된 첫 번째 URL 객체 인 경우</target>
        </trans-unit>
        <trans-unit id="50aab0b1a9c70ab29fd7b9c662b5e7a0eca89f64" translate="yes" xml:space="preserve">
          <source>If this key agreement requires any random bytes, it will get them using the &lt;a href=&quot;../../java/security/securerandom&quot;&gt;&lt;code&gt;SecureRandom&lt;/code&gt;&lt;/a&gt; implementation of the highest-priority installed provider as the source of randomness. (If none of the installed providers supply an implementation of SecureRandom, a system-provided source of randomness will be used.)</source>
          <target state="translated">이 키 계약에 임의의 바이트가 필요한 경우 우선 순위가 가장 높은 설치된 공급자 의 &lt;a href=&quot;../../java/security/securerandom&quot;&gt; &lt;code&gt;SecureRandom&lt;/code&gt; &lt;/a&gt; 구현을 임의 의 소스로 사용하여 가져옵니다 . (설치된 공급자 중 어느 것도 SecureRandom의 구현을 제공하지 않으면 시스템에서 제공하는 무작위 소스가 사용됩니다.)</target>
        </trans-unit>
        <trans-unit id="3d76c6a8bf2b303cf2221e92b4e42d6ba8afabe8" translate="yes" xml:space="preserve">
          <source>If this key generator requires any random bytes, it will get them using the &lt;a href=&quot;../../java/security/securerandom&quot;&gt;&lt;code&gt;SecureRandom&lt;/code&gt;&lt;/a&gt; implementation of the highest-priority installed provider as the source of randomness. (If none of the installed providers supply an implementation of SecureRandom, a system-provided source of randomness will be used.)</source>
          <target state="translated">이 키 생성기에 임의의 바이트가 필요한 경우, 우선 순위가 가장 높은 설치된 제공자 의 &lt;a href=&quot;../../java/security/securerandom&quot;&gt; &lt;code&gt;SecureRandom&lt;/code&gt; &lt;/a&gt; 구현을 임의 의 소스로 사용하여이를 확보합니다. (설치된 공급자 중 어느 것도 SecureRandom의 구현을 제공하지 않으면 시스템에서 제공하는 무작위 소스가 사용됩니다.)</target>
        </trans-unit>
        <trans-unit id="9bddd254d42eea8986a11358178cffc024f93953" translate="yes" xml:space="preserve">
          <source>If this key has already been cancelled then invoking this method has no effect. Once cancelled, a key remains forever invalid.</source>
          <target state="translated">이 키가 이미 취소 된 경우이 방법을 호출해도 아무런 영향이 없습니다. 취소되면 키는 영원히 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="83da59ce9539f95ec07aaec1f4842a15915ef06b" translate="yes" xml:space="preserve">
          <source>If this key has not yet been cancelled then it is added to its selector's cancelled-key set while synchronized on that set.</source>
          <target state="translated">이 키가 아직 취소되지 않은 경우 해당 세트에서 동기화되는 동안 선택기의 취소 된 키 세트에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="5f1efc582a6c2c71ff3e5aca522b4daaec159e53" translate="yes" xml:space="preserve">
          <source>If this key's channel does not support read operations then this method always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 키의 채널이 읽기 조작을 지원하지 않는 경우,이 메소드는 항상 &lt;code&gt;false&lt;/code&gt; 를 돌려줍니다 .</target>
        </trans-unit>
        <trans-unit id="890e145cfc4f3f9520f22ce4fa868c255e45c263" translate="yes" xml:space="preserve">
          <source>If this key's channel does not support socket-accept operations then this method always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 키의 채널이 소켓 수락 조작을 지원하지 않는 경우,이 메소드는 항상 &lt;code&gt;false&lt;/code&gt; 를 돌려줍니다 .</target>
        </trans-unit>
        <trans-unit id="7ebd7fa86869fc4b87322f9cf2053e6de7a63c99" translate="yes" xml:space="preserve">
          <source>If this key's channel does not support socket-connect operations then this method always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 키의 채널이 소켓 접속 조작을 지원하지 않는 경우,이 메소드는 항상 &lt;code&gt;false&lt;/code&gt; 를 돌려줍니다 .</target>
        </trans-unit>
        <trans-unit id="e4beaec2b79e41b2d36924704bcbb11dc0727f4f" translate="yes" xml:space="preserve">
          <source>If this key's channel does not support write operations then this method always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 키의 채널이 쓰기 조작을 지원하지 않는 경우,이 메소드는 항상 &lt;code&gt;false&lt;/code&gt; 를 돌려줍니다 .</target>
        </trans-unit>
        <trans-unit id="008cdfca03fe48931c96cba5011bb7ee5c689831" translate="yes" xml:space="preserve">
          <source>If this keytab is bound to a specific principal, calling this method on another principal will return an empty array.</source>
          <target state="translated">이 키탭이 특정 주체에 바인딩 된 경우 다른 주체에서이 메서드를 호출하면 빈 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="000a1bab763399031238aaa35977217bf11683de" translate="yes" xml:space="preserve">
          <source>If this list fits in the specified array with room to spare (i.e., the array has more elements than this list), the element in the array immediately following the end of the list is set to &lt;code&gt;null&lt;/code&gt;. (This is useful in determining the length of this list</source>
          <target state="translated">이 목록이 여유 공간이있는 지정된 배열에 맞는 경우 (즉, 배열에이 목록보다 많은 요소가있는 경우) 목록 끝 바로 다음에있는 배열의 요소는 &lt;code&gt;null&lt;/code&gt; 로 설정됩니다 . (이 목록의 길이를 결정할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="1db15b17eadbce7af9b771b8b76f56db6588ba62" translate="yes" xml:space="preserve">
          <source>If this list has not been explicitly modified, a system-provided default guarantees a minimum quality of service in all enabled cipher suites.</source>
          <target state="translated">이 목록이 명시 적으로 수정되지 않은 경우 시스템 제공 기본값은 사용 가능한 모든 암호 스위트에서 최소 서비스 품질을 보장합니다.</target>
        </trans-unit>
        <trans-unit id="f08c49c8dd0ded476a055cdc55092bd8f4e5968b" translate="yes" xml:space="preserve">
          <source>If this lock is not held when any of the &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;condition#await()&quot;&gt;waiting&lt;/a&gt; or &lt;a href=&quot;condition#signal()&quot;&gt;signalling&lt;/a&gt; methods are called, then an &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt;&lt;code&gt;IllegalMonitorStateException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;condition#await()&quot;&gt; 대기 중이&lt;/a&gt; 거나 &lt;a href=&quot;condition#signal()&quot;&gt;신호를 보낼&lt;/a&gt; 때이 잠금이 유지되지 않는 경우 메서드가 호출&lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt; &lt;code&gt;IllegalMonitorStateException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="82085a0ded0a26a4ae9cce5749ded99e5178ffdd" translate="yes" xml:space="preserve">
          <source>If this lock is not held when any of the &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;condition#await--&quot;&gt;waiting&lt;/a&gt; or &lt;a href=&quot;condition#signal--&quot;&gt;signalling&lt;/a&gt; methods are called, then an &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt;&lt;code&gt;IllegalMonitorStateException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;condition#await--&quot;&gt; 대기 중이&lt;/a&gt; 거나 &lt;a href=&quot;condition#signal--&quot;&gt;신호&lt;/a&gt; 방식이 호출 될 때이 잠금이 유지되지 않으면 &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt; &lt;code&gt;IllegalMonitorStateException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5eee26829fd18b6973e06016bd08f5d58312d50f" translate="yes" xml:space="preserve">
          <source>If this lock object is valid then invoking this method releases the lock and renders the object invalid. If this lock object is invalid then invoking this method has no effect.</source>
          <target state="translated">이 잠금 오브젝트가 유효하면이 메소드를 호출하면 잠금이 해제되고 오브젝트가 유효하지 않게됩니다. 이 락 객체가 무효 인 경우,이 메소드의 호출은 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="dd34ba917d5295a815bbda9dde708f4cf82646ea" translate="yes" xml:space="preserve">
          <source>If this lookup has &lt;a href=&quot;#MODULE&quot;&gt;&lt;code&gt;MODULE&lt;/code&gt;&lt;/a&gt; access, &lt;code&gt;targetClass&lt;/code&gt; is a public type in &lt;code&gt;M1&lt;/code&gt;.</source>
          <target state="translated">이 조회에 &lt;a href=&quot;#MODULE&quot;&gt; &lt;code&gt;MODULE&lt;/code&gt; &lt;/a&gt; 액세스 권한이있는 경우 &lt;code&gt;targetClass&lt;/code&gt; 는 &lt;code&gt;M1&lt;/code&gt; 의 공용 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="5dd123036d3412e1e023275cacd68fb11de11215" translate="yes" xml:space="preserve">
          <source>If this lookup has &lt;a href=&quot;#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt; access, &lt;code&gt;targetClass&lt;/code&gt; is in the same runtime package of &lt;code&gt;LC&lt;/code&gt;.</source>
          <target state="translated">이 조회에 &lt;a href=&quot;#PACKAGE&quot;&gt; &lt;code&gt;PACKAGE&lt;/code&gt; &lt;/a&gt; 액세스 권한이있는 경우 &lt;code&gt;targetClass&lt;/code&gt; 는 &lt;code&gt;LC&lt;/code&gt; 의 동일한 런타임 패키지에 있습니다.</target>
        </trans-unit>
        <trans-unit id="9cdadb98c87427c65e5c1a0f0d283d601e8f4118" translate="yes" xml:space="preserve">
          <source>If this lookup has &lt;a href=&quot;#PRIVATE&quot;&gt;&lt;code&gt;PRIVATE&lt;/code&gt;&lt;/a&gt; access, &lt;code&gt;targetClass&lt;/code&gt; is &lt;code&gt;LC&lt;/code&gt; or other class in the same nest of &lt;code&gt;LC&lt;/code&gt;.</source>
          <target state="translated">이 조회에 &lt;a href=&quot;#PRIVATE&quot;&gt; &lt;code&gt;PRIVATE&lt;/code&gt; &lt;/a&gt; 액세스 권한이있는 경우 &lt;code&gt;targetClass&lt;/code&gt; 는 &lt;code&gt;LC&lt;/code&gt; 또는 동일한 &lt;code&gt;LC&lt;/code&gt; 중첩의 다른 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="a68b721f06ccad127c185fabb849bb6466872e88" translate="yes" xml:space="preserve">
          <source>If this lookup has &lt;a href=&quot;#PUBLIC&quot;&gt;&lt;code&gt;PUBLIC&lt;/code&gt;&lt;/a&gt; access, &lt;code&gt;targetClass&lt;/code&gt; is a public type in a package exported by &lt;code&gt;M1&lt;/code&gt; to at least &lt;code&gt;M0&lt;/code&gt; if the previous lookup class is present; otherwise, &lt;code&gt;targetClass&lt;/code&gt; is a public type in a package exported by &lt;code&gt;M1&lt;/code&gt; unconditionally.</source>
          <target state="translated">이 조회에 &lt;a href=&quot;#PUBLIC&quot;&gt; &lt;code&gt;PUBLIC&lt;/code&gt; &lt;/a&gt; 액세스 권한이있는 경우 &lt;code&gt;targetClass&lt;/code&gt; 는 이전 조회 클래스가있는 경우 &lt;code&gt;M1&lt;/code&gt; 에서 &lt;code&gt;M0&lt;/code&gt; 이상으로 내 보낸 패키지의 공용 유형입니다 . 그렇지 않으면 &lt;code&gt;targetClass&lt;/code&gt; 는 &lt;code&gt;M1&lt;/code&gt; 이 무조건 내 보낸 패키지의 공용 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="74dc3669cf6114e19a53ee4d8dceebd9adba6b0c" translate="yes" xml:space="preserve">
          <source>If this lookup is a &lt;a href=&quot;methodhandles#publicLookup()&quot;&gt;public lookup&lt;/a&gt;, this lookup has &lt;code&gt;UNCONDITIONAL&lt;/code&gt; mode set and it has no other mode set. When dropping &lt;code&gt;UNCONDITIONAL&lt;/code&gt; on a public lookup then the resulting lookup has no access.</source>
          <target state="translated">이 조회가 &lt;a href=&quot;methodhandles#publicLookup()&quot;&gt;공개 조회&lt;/a&gt; 인 경우이 조회에는 &lt;code&gt;UNCONDITIONAL&lt;/code&gt; 모드가 설정되어 있고 다른 모드가 설정되어 있지 않습니다. 공개 조회에서 &lt;code&gt;UNCONDITIONAL&lt;/code&gt; 을 삭제 하면 결과 조회에 액세스 권한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="a5713c637db08be36f5da569a3f070cd7f0da44b" translate="yes" xml:space="preserve">
          <source>If this lookup is not a public lookup, then the following applies regardless of its &lt;a href=&quot;#lookupModes()&quot;&gt;lookup modes&lt;/a&gt;. &lt;a href=&quot;#PROTECTED&quot;&gt;&lt;code&gt;PROTECTED&lt;/code&gt;&lt;/a&gt; is always dropped and so the resulting lookup mode will never have this access capability. When dropping &lt;code&gt;PACKAGE&lt;/code&gt; then the resulting lookup will not have &lt;code&gt;PACKAGE&lt;/code&gt; or &lt;code&gt;PRIVATE&lt;/code&gt; access. When dropping &lt;code&gt;MODULE&lt;/code&gt; then the resulting lookup will not have &lt;code&gt;MODULE&lt;/code&gt;, &lt;code&gt;PACKAGE&lt;/code&gt;, or &lt;code&gt;PRIVATE&lt;/code&gt; access. When dropping &lt;code&gt;PUBLIC&lt;/code&gt; then the resulting lookup has no access.</source>
          <target state="translated">이 조회가 공개 조회가 아닌 경우 &lt;a href=&quot;#lookupModes()&quot;&gt;조회 모드에&lt;/a&gt; 관계없이 다음이 적용됩니다 . &lt;a href=&quot;#PROTECTED&quot;&gt; &lt;code&gt;PROTECTED&lt;/code&gt; &lt;/a&gt; 는 항상 삭제되므로 결과 조회 모드에는이 액세스 기능이 없습니다. &lt;code&gt;PACKAGE&lt;/code&gt; 를 삭제 하면 결과 조회에 &lt;code&gt;PACKAGE&lt;/code&gt; 또는 &lt;code&gt;PRIVATE&lt;/code&gt; 액세스 권한 이 없습니다 . &lt;code&gt;MODULE&lt;/code&gt; 를 삭제 하면 결과 조회에 &lt;code&gt;MODULE&lt;/code&gt; , &lt;code&gt;PACKAGE&lt;/code&gt; 또는 &lt;code&gt;PRIVATE&lt;/code&gt; 액세스 권한이 없습니다. &lt;code&gt;PUBLIC&lt;/code&gt; 을 삭제 하면 결과 조회에 액세스 권한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="3d1278e1473a5cbd02944461d24ee16b78d0072d" translate="yes" xml:space="preserve">
          <source>If this lookup mode is set, the &lt;a href=&quot;#previousLookupClass()&quot;&gt;previous lookup class&lt;/a&gt; is always &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 조회 모드가 설정된 경우 &lt;a href=&quot;#previousLookupClass()&quot;&gt;이전 조회 클래스&lt;/a&gt; 는 항상 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0e73db2543a176a66e66ab8434fd8e7bb94e7676" translate="yes" xml:space="preserve">
          <source>If this lookup object has a &lt;a href=&quot;#previousLookupClass()&quot;&gt;previous lookup class&lt;/a&gt;, access checks are performed against both the lookup class and the previous lookup class.</source>
          <target state="translated">이 조회 객체에 &lt;a href=&quot;#previousLookupClass()&quot;&gt;이전 조회 클래스&lt;/a&gt; 가있는 경우 조회 클래스와 이전 조회 클래스 모두에 대해 액세스 검사가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="ced0aadf82c54cdaa29d509af41e23c06fee2d2b" translate="yes" xml:space="preserve">
          <source>If this map permits null values, then a return value of &lt;code&gt;null&lt;/code&gt; does not</source>
          <target state="translated">이 맵이 널값을 허용하는 경우, 리턴 값은 &lt;code&gt;null&lt;/code&gt; 이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="38c84e3f3622968548e8ca88b47186596616c713" translate="yes" xml:space="preserve">
          <source>If this membership key is not source-specific, and the underlying operating system supports source filtering, then this method blocks multicast datagrams from the given source address. If the given source address is already blocked then this method has no effect. After a source address is blocked it may still be possible to receive datagrams from that source. This can arise when datagrams are waiting to be received in the socket's receive buffer.</source>
          <target state="translated">이 멤버쉽 키가 소스별로 다르고 기본 운영 체제가 소스 필터링을 지원하는 경우이 방법은 지정된 소스 주소에서 멀티 캐스트 데이터 그램을 차단합니다. 지정된 소스 주소가 이미 차단 된 경우이 방법은 적용되지 않습니다. 소스 주소가 차단 된 후에도 해당 소스에서 데이터 그램을 수신 할 수 있습니다. 이것은 데이터 그램이 소켓의 수신 버퍼에서 수신 대기 중일 때 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa3370fa2c521cef5ca42d1f38eef3085fe4df23" translate="yes" xml:space="preserve">
          <source>If this method causes a node to be created, this node is not guaranteed to be persistent until the &lt;code&gt;flush&lt;/code&gt; method is invoked on this node or one of its ancestors (or descendants).</source>
          <target state="translated">이 메소드로 인해 노드가 작성되면 이 노드 또는 해당 노드 (조상 또는 후손) 중 하나 에서 &lt;code&gt;flush&lt;/code&gt; 메소드가 호출 될 때까지이 노드가 지속되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c7412b62e7bb966d312d57972a324cef595d40b8" translate="yes" xml:space="preserve">
          <source>If this method causes this Window to be focused, and this Window is a Frame or a Dialog, it will also become activated. If this Window is focused, but it is not a Frame or a Dialog, then the first Frame or Dialog that is an owner of this Window will be activated.</source>
          <target state="translated">이 방법으로이 창에 초점이 맞춰지고이 창이 프레임 또는 대화 상자 인 경우에도 활성화됩니다. 이 창에 포커스가 있지만 프레임이나 대화 상자가 아닌 경우이 창의 소유자 인 첫 번째 프레임 또는 대화 상자가 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="b7763898ffe1310d7a9cc8d3b7a661370fcf75bb" translate="yes" xml:space="preserve">
          <source>If this method completes successfully then it returns &lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt;&lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt;&lt;/a&gt;. If there is insufficient room in the output buffer then it returns &lt;a href=&quot;coderresult#OVERFLOW&quot;&gt;&lt;code&gt;CoderResult.OVERFLOW&lt;/code&gt;&lt;/a&gt;. If this happens then this method must be invoked again, with an output buffer that has more room, in order to complete the current &lt;a href=&quot;#steps&quot;&gt;decoding operation&lt;/a&gt;.</source>
          <target state="translated">이 메소드가 성공적으로 완료되면 &lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt; &lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt; 를&lt;/a&gt; 리턴합니다 . 출력 버퍼에 공간이 부족하면 &lt;a href=&quot;coderresult#OVERFLOW&quot;&gt; &lt;code&gt;CoderResult.OVERFLOW&lt;/code&gt; 를&lt;/a&gt; 반환합니다 . 이 경우 현재 &lt;a href=&quot;#steps&quot;&gt;디코딩 작업&lt;/a&gt; 을 완료하려면 더 많은 공간이있는 출력 버퍼를 사용하여이 메소드를 다시 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="da3a441ed392e261c85ef52698fd864dc0d74f93" translate="yes" xml:space="preserve">
          <source>If this method completes successfully then it returns &lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt;&lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt;&lt;/a&gt;. If there is insufficient room in the output buffer then it returns &lt;a href=&quot;coderresult#OVERFLOW&quot;&gt;&lt;code&gt;CoderResult.OVERFLOW&lt;/code&gt;&lt;/a&gt;. If this happens then this method must be invoked again, with an output buffer that has more room, in order to complete the current &lt;a href=&quot;#steps&quot;&gt;encoding operation&lt;/a&gt;.</source>
          <target state="translated">이 메소드가 성공적으로 완료되면 &lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt; &lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt; 를&lt;/a&gt; 리턴합니다 . 출력 버퍼에 공간이 부족하면 &lt;a href=&quot;coderresult#OVERFLOW&quot;&gt; &lt;code&gt;CoderResult.OVERFLOW&lt;/code&gt; 를&lt;/a&gt; 반환합니다 . 이 경우 현재 &lt;a href=&quot;#steps&quot;&gt;인코딩 작업&lt;/a&gt; 을 완료하려면 더 많은 공간이있는 출력 버퍼와 함께이 메소드를 다시 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fdb01c443602da582441fbfb332da44d888c80b9" translate="yes" xml:space="preserve">
          <source>If this method doesn't belong to a Java frame the result is undefined.</source>
          <target state="translated">이 메소드가 Java 프레임에 속하지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="324b36187a0aaac5c30dc8a35d81f821ab024999" translate="yes" xml:space="preserve">
          <source>If this method doesn't belong to a Java frame then the result is undefined.</source>
          <target state="translated">이 메소드가 Java 프레임에 속하지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d54dec3691def46cbe5fad3976376bed042d367b" translate="yes" xml:space="preserve">
          <source>If this method doesn't belong to a Java frame, then the result is undefined.</source>
          <target state="translated">이 메소드가 Java 프레임에 속하지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4f5838e3631d37a22c2762422064d85d5ff87054" translate="yes" xml:space="preserve">
          <source>If this method fails, then it may do so after creating some, but not all, of the parent directories.</source>
          <target state="translated">이 방법이 실패하면 부모 디렉토리의 전부는 아니지만 일부를 만든 후에 그렇게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9c0928502e859e85a0de01a5473b5cf15abaacf" translate="yes" xml:space="preserve">
          <source>If this method has ever been called on a given &lt;code&gt;AttributeList&lt;/code&gt; instance, a subsequent attempt to add an object to that instance which is not an &lt;code&gt;Attribute&lt;/code&gt; will fail with a &lt;code&gt;IllegalArgumentException&lt;/code&gt;. For compatibility reasons, an &lt;code&gt;AttributeList&lt;/code&gt; on which this method has never been called does allow objects other than &lt;code&gt;Attribute&lt;/code&gt;s to be added.</source>
          <target state="translated">이 방법은 지금까지 주어진 호출 한 경우 &lt;code&gt;AttributeList&lt;/code&gt; 예를, 이후 시도는 인스턴스에 객체를 추가하는 &lt;code&gt;Attribute&lt;/code&gt; 실패합니다 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 가 . 호환성을 이유로 들어, &lt;code&gt;AttributeList&lt;/code&gt; 이 방법은 수 있습니까 불려 간 적이없는이 아닌 다른 객체 &lt;code&gt;Attribute&lt;/code&gt; 의 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0500439e742b4ff042ba98dad057f7e1d48debf5" translate="yes" xml:space="preserve">
          <source>If this method has ever been called on a given &lt;code&gt;AttributeList&lt;/code&gt; instance, a subsequent attempt to add an object to that instance which is not an &lt;code&gt;Attribute&lt;/code&gt; will fail with an &lt;code&gt;IllegalArgumentException&lt;/code&gt;. For compatibility reasons, an &lt;code&gt;AttributeList&lt;/code&gt; on which this method has never been called does allow objects other than &lt;code&gt;Attribute&lt;/code&gt;s to be added.</source>
          <target state="translated">이 방법은 지금까지 주어진 호출 한 경우 &lt;code&gt;AttributeList&lt;/code&gt; 예를, 이후 시도는 인스턴스에 객체를 추가하는 &lt;code&gt;Attribute&lt;/code&gt; 실패합니다 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 가 . 호환성 을 위해이 메서드가 호출 된 적이없는 &lt;code&gt;AttributeList&lt;/code&gt; 는 다음 이외의 개체를 허용합니다. &lt;code&gt;Attribute&lt;/code&gt; 의 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="359793ad6432cb9cd5fa8412782ecca71d3df2d7" translate="yes" xml:space="preserve">
          <source>If this method has ever been called on a given &lt;code&gt;RoleList&lt;/code&gt; instance, a subsequent attempt to add an object to that instance which is not a &lt;code&gt;Role&lt;/code&gt; will fail with an &lt;code&gt;IllegalArgumentException&lt;/code&gt;. For compatibility reasons, a &lt;code&gt;RoleList&lt;/code&gt; on which this method has never been called does allow objects other than &lt;code&gt;Role&lt;/code&gt;s to be added.</source>
          <target state="translated">주어진 &lt;code&gt;RoleList&lt;/code&gt; 인스턴스 에서이 메소드를 호출 한 경우, 해당 인스턴스에 &lt;code&gt;Role&lt;/code&gt; 이 아닌 오브젝트를 추가하려는 후속 시도 는 실패합니다. &lt;code&gt;IllegalArgumentException&lt;/code&gt; 으로 . 호환성 때문에이 메소드를 호출 한 적이없는 &lt;code&gt;RoleList&lt;/code&gt; 에서는 &lt;code&gt;Role&lt;/code&gt; 이외의 오브젝트 를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28b83e7c1301d5a763b5d828fb7d5af0319b1267" translate="yes" xml:space="preserve">
          <source>If this method has ever been called on a given &lt;code&gt;RoleUnresolvedList&lt;/code&gt; instance, a subsequent attempt to add an object to that instance which is not a &lt;code&gt;RoleUnresolved&lt;/code&gt; will fail with an &lt;code&gt;IllegalArgumentException&lt;/code&gt;. For compatibility reasons, a &lt;code&gt;RoleUnresolvedList&lt;/code&gt; on which this method has never been called does allow objects other than &lt;code&gt;RoleUnresolved&lt;/code&gt;s to be added.</source>
          <target state="translated">지정된 &lt;code&gt;RoleUnresolvedList&lt;/code&gt; 인스턴스 에서이 메소드를 호출 한 경우, RoleUnresolved 가 아닌 해당 인스턴스에 오브젝트를 추가하려는 후속 시도 는 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 으로 실패 합니다 &lt;code&gt;RoleUnresolved&lt;/code&gt; . 호환성을 이유로 들어, &lt;code&gt;RoleUnresolvedList&lt;/code&gt; 이 방법은 수 있습니까 불려 간 적이없는이 아닌 다른 객체 &lt;code&gt;RoleUnresolved&lt;/code&gt; 를 의 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a89dbb40e04018e0b66f0ca12cc41f8ee3b33dc" translate="yes" xml:space="preserve">
          <source>If this method is called by &lt;a href=&quot;securerandom#reseed()&quot;&gt;&lt;code&gt;SecureRandom.reseed()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;params&lt;/code&gt; will be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 메서드가 &lt;a href=&quot;securerandom#reseed()&quot;&gt; &lt;code&gt;SecureRandom.reseed()&lt;/code&gt; &lt;/a&gt; 의해 호출 되면 &lt;code&gt;params&lt;/code&gt; 는 &lt;code&gt;null&lt;/code&gt; 이됩니다. 됩니다.</target>
        </trans-unit>
        <trans-unit id="d5e28ad1b99be76e057ec854fd96e8b1df9a3fda" translate="yes" xml:space="preserve">
          <source>If this method is called more than once with the same library name, the second and subsequent calls are ignored.</source>
          <target state="translated">이 메소드가 동일한 라이브러리 이름으로 두 번 이상 호출되면 두 번째 및 후속 호출은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="0fb5871243f1fc7f904199ffee2ce68c73aa2015" translate="yes" xml:space="preserve">
          <source>If this method is called remotely from another process, the heap dump output is written to a file named &lt;code&gt;outputFile&lt;/code&gt; on the machine where the target VM is running. If outputFile is a relative path, it is relative to the working directory where the target VM was started.</source>
          <target state="translated">이 메서드가 다른 프로세스에서 원격으로 호출되면 힙 덤프 출력이 대상 VM이 실행중인 시스템의 &lt;code&gt;outputFile&lt;/code&gt; 이라는 파일에 기록됩니다 . outputFile이 상대 경로 인 경우 대상 VM이 시작된 작업 디렉토리에 상대적입니다.</target>
        </trans-unit>
        <trans-unit id="fbfcc216e34885d1aec97f4ba5324f44277fc91c" translate="yes" xml:space="preserve">
          <source>If this method is called when an implementation has already been populated, the contents and the metadata are (re)set. Also, if this method is called before the method &lt;code&gt;acceptChanges&lt;/code&gt; has been called to commit outstanding updates, those updates are lost.</source>
          <target state="translated">구현이 이미 채워 졌을 때이 메서드가 호출되면 콘텐츠와 메타 데이터가 (재) 설정됩니다. 또한 미해결 업데이트를 커밋 하기 위해 &lt;code&gt;acceptChanges&lt;/code&gt; 메서드가 호출되기 전에이 메서드가 호출 되면 해당 업데이트가 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="fec3f1658c64077416de46608c8e7d21bb8a2d5d" translate="yes" xml:space="preserve">
          <source>If this method is called when it is not an overlap, &lt;code&gt;this&lt;/code&gt; is returned.</source>
          <target state="translated">이 메소드가 겹치지 않을 때 호출되면 &lt;code&gt;this&lt;/code&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="09d39856608d2161bc318ac6c82c24e80fb67f6f" translate="yes" xml:space="preserve">
          <source>If this method is invoked after all shutdown hooks have already been run and the status is nonzero then this method halts the virtual machine with the given status code. Otherwise, this method blocks indefinitely.</source>
          <target state="translated">모든 종료 후크가 이미 실행 된 후이 메서드가 호출되고 상태가 0이 아닌 경우이 메서드는 지정된 상태 코드로 가상 머신을 중지합니다. 그렇지 않으면이 메서드는 무기한 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="7a895efab6b10c654536ae18029ccdc62da13ad3" translate="yes" xml:space="preserve">
          <source>If this method is invoked after the virtual machine has begun its shutdown sequence then if shutdown hooks are being run this method will block indefinitely. If shutdown hooks have already been run and on-exit finalization has been enabled then this method halts the virtual machine with the given status code if the status is nonzero; otherwise, it blocks indefinitely.</source>
          <target state="translated">가상 머신이 종료 시퀀스를 시작한 후에이 메소드를 호출하면 종료 후크가 실행중인 경우이 메소드가 무기한 차단됩니다. 종료 후크가 이미 실행되고 종료시 종료가 활성화 된 경우이 방법은 상태가 0이 아닌 경우 지정된 상태 코드로 가상 머신을 중지합니다. 그렇지 않으면 무기한 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="8f976beb6129f3d6706110931ec248056a42e618" translate="yes" xml:space="preserve">
          <source>If this method is invoked from another process, the data is written on the machine where the target JVM is running. If destination is a relative path, it is relative to the working directory where the target JVM was started.}</source>
          <target state="translated">이 메소드가 다른 프로세스에서 호출되면 대상 JVM이 실행중인 시스템에 데이터가 기록됩니다. 대상이 상대 경로 인 경우 대상 JVM이 시작된 작업 디렉토리에 상대적입니다.}</target>
        </trans-unit>
        <trans-unit id="894475c0bcb56ac0876e481b75d6830011412522" translate="yes" xml:space="preserve">
          <source>If this method is invoked on a channel that does not have &lt;code&gt;address&lt;/code&gt; as one of its bound addresses, or that has only one local address bound to it, then this method throws &lt;a href=&quot;illegalunbindexception&quot;&gt;&lt;code&gt;IllegalUnbindException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법이없는 채널에서 호출하면 &lt;code&gt;address&lt;/code&gt; 바인딩 된 주소 중 하나, 또는 그 바인드 하나의 로컬 주소를 가지고,이 메소드는 발생 &lt;a href=&quot;illegalunbindexception&quot;&gt; &lt;code&gt;IllegalUnbindException&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ccc8a406470db7d0239114df44fa72db3c11d7b5" translate="yes" xml:space="preserve">
          <source>If this method is invoked on a node that has been removed with the &lt;a href=&quot;#removeNode()&quot;&gt;&lt;code&gt;removeNode()&lt;/code&gt;&lt;/a&gt; method, flushSpi() is invoked on this node, but not on others.</source>
          <target state="translated">&lt;a href=&quot;#removeNode()&quot;&gt; &lt;code&gt;removeNode()&lt;/code&gt; &lt;/a&gt; 로 제거 된 노드에서이 메소드가 호출되는 경우 메서드 에서 flushSpi ()가 호출되지만 다른 노드에서는 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="41db96f0ae0cfb287399c72e6b99e0ffae187d24" translate="yes" xml:space="preserve">
          <source>If this method is invoked on a node that has been removed with the &lt;a href=&quot;abstractpreferences#removeNode--&quot;&gt;&lt;code&gt;removeNode()&lt;/code&gt;&lt;/a&gt; method, flushSpi() is invoked on this node, but not on others.</source>
          <target state="translated">&lt;a href=&quot;abstractpreferences#removeNode--&quot;&gt; &lt;code&gt;removeNode()&lt;/code&gt; &lt;/a&gt; 로 제거 된 노드에서이 메소드를 호출 한 경우 메소드 하면 flushSpi ()가이 노드에서 호출되지만 다른 노드에서는 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7cb89a6eb185edcb78db3f7c05fc5b72ac8edd89" translate="yes" xml:space="preserve">
          <source>If this method is invoked on a node that has been removed with the &lt;a href=&quot;preferences#removeNode--&quot;&gt;&lt;code&gt;removeNode()&lt;/code&gt;&lt;/a&gt; method, flushSpi() is invoked on this node, but not on others.</source>
          <target state="translated">&lt;a href=&quot;preferences#removeNode--&quot;&gt; &lt;code&gt;removeNode()&lt;/code&gt; &lt;/a&gt; 로 제거 된 노드에서이 메소드를 호출 한 경우 메소드 하면 flushSpi ()가이 노드에서 호출되지만 다른 노드에서는 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4263bfdfc92818067f2524d08c263bd0631281bb" translate="yes" xml:space="preserve">
          <source>If this method is invoked remotely from another process, the data is written to a file named &lt;code&gt;outputFile&lt;/code&gt; on the machine where the target Java Virtual Machine (JVM) is running. If the file location is a relative path, it is relative to the working directory where the target JVM was started.</source>
          <target state="translated">이 메소드가 다른 프로세스에서 원격으로 호출 되면 대상 JVM (Java Virtual Machine)이 실행중인 시스템의 &lt;code&gt;outputFile&lt;/code&gt; 이라는 파일에 데이터가 기록됩니다 . 파일 위치가 상대 경로 인 경우 대상 JVM이 시작된 작업 디렉토리에 상대적입니다.</target>
        </trans-unit>
        <trans-unit id="e5481c92fb18810f94fae330d2ba7c65a26e4d45" translate="yes" xml:space="preserve">
          <source>If this method is invoked while another invocation of this method or of the &lt;a href=&quot;#register(java.nio.channels.Selector,int)&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method is in progress then it will first block until the other operation is complete.</source>
          <target state="translated">이 메서드 또는 &lt;a href=&quot;#register(java.nio.channels.Selector,int)&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt; 의 다른 호출 중에이 메서드가 호출되는 경우 메서드 되면 다른 작업이 완료 될 때까지 먼저 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="897ec622f1324a90c92ac76dcd58ecbd59846a3b" translate="yes" xml:space="preserve">
          <source>If this method is invoked while another invocation of this method or of the &lt;a href=&quot;selectablechannel#register-java.nio.channels.Selector-int-&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method is in progress then it will first block until the other operation is complete.</source>
          <target state="translated">이 메소드 또는 &lt;a href=&quot;selectablechannel#register-java.nio.channels.Selector-int-&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt; 메소드 의 다른 호출이 진행되는 동안이 메소드가 호출 되면 다른 조작이 완료 될 때까지 먼저 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="f9870c4dbe5964f938a44c3304f30bf52d5b60c0" translate="yes" xml:space="preserve">
          <source>If this method is invoked with equal minimum and maximum widths and a sign style of &lt;code&gt;NOT_NEGATIVE&lt;/code&gt; then it delegates to &lt;code&gt;appendValue(TemporalField,int)&lt;/code&gt;. In this scenario, the formatting and parsing behavior described there occur.</source>
          <target state="translated">이 메서드가 최소 폭과 최대 폭이 같고 부호 스타일이 &lt;code&gt;NOT_NEGATIVE&lt;/code&gt; 인 경우 호출 됩니다. &lt;code&gt;appendValue(TemporalField,int)&lt;/code&gt; . 이 시나리오에서는 설명 된 형식화 및 구문 분석 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9c7a22af65f7dac109fea9e309d6dff414361ce3" translate="yes" xml:space="preserve">
          <source>If this method is not called, the behavior should be equivalent to calling &lt;code&gt;env(System.getenv())&lt;/code&gt;.</source>
          <target state="translated">이 메서드가 호출되지 않은 경우 동작은 &lt;code&gt;env(System.getenv())&lt;/code&gt; 호출과 동일해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4e653b9be0e974ca85e95b7e0212e7163d791435" translate="yes" xml:space="preserve">
          <source>If this method is not called, the behavior should be equivalent to calling &lt;code&gt;in(System.in, null)&lt;/code&gt;.</source>
          <target state="translated">이 메서드가 호출되지 않은 경우 동작은 &lt;code&gt;in(System.in, null)&lt;/code&gt; 을 호출하는 것과 동일해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c476c02120523426fba8b1f345c8e221b52edddc" translate="yes" xml:space="preserve">
          <source>If this method is not called, the behavior should be equivalent to calling &lt;code&gt;locale(Locale.getDefault())&lt;/code&gt;.</source>
          <target state="translated">이 메서드가 호출되지 않은 경우 동작은 &lt;code&gt;locale(Locale.getDefault())&lt;/code&gt; 호출과 동일해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e2e1712550287eea90662f9fa84fdd7652057f7e" translate="yes" xml:space="preserve">
          <source>If this method is not called, the behavior should be equivalent to calling &lt;code&gt;promptCapture(false)&lt;/code&gt;.</source>
          <target state="translated">이 메서드가 호출되지 않은 경우 동작은 &lt;code&gt;promptCapture(false)&lt;/code&gt; 를 호출하는 것과 동일해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ad729037675a25baa03f0d24a4acba5ac35b089b" translate="yes" xml:space="preserve">
          <source>If this method is not called, the default &lt;code&gt;HostnameVerifier&lt;/code&gt; assumes the connection should not be permitted.</source>
          <target state="translated">이 메소드가 호출되지 않으면 기본 &lt;code&gt;HostnameVerifier&lt;/code&gt; 는 연결이 허용되지 않아야한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="cff732818ecd7302ea4cdeb46f23fd6601d2ed0b" translate="yes" xml:space="preserve">
          <source>If this method is not invoked prior to &lt;a href=&quot;#build()&quot;&gt;building&lt;/a&gt;, a default executor is created for each newly built &lt;code&gt;
 HttpClient&lt;/code&gt;.</source>
          <target state="translated">이 메서드가 &lt;a href=&quot;#build()&quot;&gt;빌드&lt;/a&gt; 전에 호출되지 않으면 새로 빌드 된 각 &lt;code&gt; HttpClient&lt;/code&gt; 에 대해 기본 실행기가 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="aab45f2845da83f00ee5c4a94877f399af47d579" translate="yes" xml:space="preserve">
          <source>If this method is not invoked prior to &lt;a href=&quot;#build()&quot;&gt;building&lt;/a&gt;, then newly built clients will prefer &lt;a href=&quot;httpclient.version#HTTP_2&quot;&gt;HTTP/2&lt;/a&gt;.</source>
          <target state="translated">이 메서드가 &lt;a href=&quot;#build()&quot;&gt;빌드&lt;/a&gt; 전에 호출되지 않으면 새로 빌드 된 클라이언트가 &lt;a href=&quot;httpclient.version#HTTP_2&quot;&gt;HTTP / 2를&lt;/a&gt; 선호합니다 .</target>
        </trans-unit>
        <trans-unit id="c1ed2bdc8c3abf3e4f471c982e0b087cf9cc5096" translate="yes" xml:space="preserve">
          <source>If this method is not invoked prior to &lt;a href=&quot;#build()&quot;&gt;building&lt;/a&gt;, then newly built clients will use a default redirection policy of &lt;a href=&quot;httpclient.redirect#NEVER&quot;&gt;&lt;code&gt;NEVER&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드가 &lt;a href=&quot;#build()&quot;&gt;빌드&lt;/a&gt; 전에 호출되지 않으면 새로 빌드 된 클라이언트는 기본 리디렉션 정책 인 &lt;a href=&quot;httpclient.redirect#NEVER&quot;&gt; &lt;code&gt;NEVER&lt;/code&gt; 를 사용&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="d9fd19662a5fecef3b9c48291aa270d041956c26" translate="yes" xml:space="preserve">
          <source>If this method is not invoked prior to &lt;a href=&quot;#build()&quot;&gt;building&lt;/a&gt;, then newly built clients will use a default, implementation specific, set of parameters.</source>
          <target state="translated">이 메소드가 &lt;a href=&quot;#build()&quot;&gt;빌드&lt;/a&gt; 전에 호출되지 않으면 새로 빌드 된 클라이언트는 기본 구현 별 매개 변수 세트를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f36457ffc469cd7eeb2282723f43e1abe511e734" translate="yes" xml:space="preserve">
          <source>If this method is not invoked prior to &lt;a href=&quot;#build()&quot;&gt;building&lt;/a&gt;, then newly built clients will use the &lt;a href=&quot;../../../../java.base/java/net/proxyselector#getDefault()&quot;&gt;default proxy selector&lt;/a&gt;, which is usually adequate for client applications. The default proxy selector supports a set of system properties related to &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html#Proxies&quot;&gt; proxy settings&lt;/a&gt;. This default behavior can be disabled by supplying an explicit proxy selector, such as &lt;a href=&quot;#NO_PROXY&quot;&gt;&lt;code&gt;NO_PROXY&lt;/code&gt;&lt;/a&gt; or one returned by &lt;a href=&quot;../../../../java.base/java/net/proxyselector#of(java.net.InetSocketAddress)&quot;&gt;&lt;code&gt;ProxySelector::of&lt;/code&gt;&lt;/a&gt;, before &lt;a href=&quot;#build()&quot;&gt;building&lt;/a&gt;.</source>
          <target state="translated">이 메서드를 &lt;a href=&quot;#build()&quot;&gt;빌드&lt;/a&gt; 하기 전에 호출하지 않으면 새로 빌드 된 클라이언트 는 일반적으로 클라이언트 애플리케이션에 적합한 &lt;a href=&quot;../../../../java.base/java/net/proxyselector#getDefault()&quot;&gt;기본 프록시 선택기를&lt;/a&gt; 사용합니다 . 기본 프록시 선택기는 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html#Proxies&quot;&gt;프록시 설정&lt;/a&gt; 과 관련된 일련의 시스템 속성을 지원합니다 . 이 기본 동작은 &lt;a href=&quot;#build()&quot;&gt;빌드&lt;/a&gt; 하기 전에 &lt;a href=&quot;#NO_PROXY&quot;&gt; &lt;code&gt;NO_PROXY&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../../../java.base/java/net/proxyselector#of(java.net.InetSocketAddress)&quot;&gt; &lt;code&gt;ProxySelector::of&lt;/code&gt; &lt;/a&gt; 의해 반환 된 것과 같은 명시 적 프록시 선택기를 제공하여 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="edbcbbb05797cf891f3ef9e263c9b07419513567" translate="yes" xml:space="preserve">
          <source>If this method is not invoked prior to &lt;a href=&quot;#build()&quot;&gt;building&lt;/a&gt;, then newly built clients will use the &lt;a href=&quot;../../../../java.base/java/net/proxyselector#getDefault()&quot;&gt;default proxy selector&lt;/a&gt;, which is usually adequate for client applications. The default proxy selector supports a set of system properties related to &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/net/doc-files/net-properties.html#Proxies&quot;&gt; proxy settings&lt;/a&gt;. This default behavior can be disabled by supplying an explicit proxy selector, such as &lt;a href=&quot;#NO_PROXY&quot;&gt;&lt;code&gt;NO_PROXY&lt;/code&gt;&lt;/a&gt; or one returned by &lt;a href=&quot;../../../../java.base/java/net/proxyselector#of(java.net.InetSocketAddress)&quot;&gt;&lt;code&gt;ProxySelector::of&lt;/code&gt;&lt;/a&gt;, before &lt;a href=&quot;#build()&quot;&gt;building&lt;/a&gt;.</source>
          <target state="translated">이 메소드가 &lt;a href=&quot;#build()&quot;&gt;빌드&lt;/a&gt; 전에 호출되지 않으면 새로 빌드 된 클라이언트 는 일반적으로 클라이언트 애플리케이션에 적합한 &lt;a href=&quot;../../../../java.base/java/net/proxyselector#getDefault()&quot;&gt;기본 프록시 선택기를&lt;/a&gt; 사용합니다 . 기본 프록시 선택기는 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/net/doc-files/net-properties.html#Proxies&quot;&gt;프록시 설정&lt;/a&gt; 과 관련된 일련의 시스템 속성을 지원합니다 . 이 기본 동작은 &lt;a href=&quot;#build()&quot;&gt;빌드&lt;/a&gt; 하기 전에 &lt;a href=&quot;#NO_PROXY&quot;&gt; &lt;code&gt;NO_PROXY&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../../../java.base/java/net/proxyselector#of(java.net.InetSocketAddress)&quot;&gt; &lt;code&gt;ProxySelector::of&lt;/code&gt; &lt;/a&gt; 의해 반환 된 것과 같은 명시 적 프록시 선택기를 제공하여 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a27b1871b7875ff1cb2b341387ce929b23591825" translate="yes" xml:space="preserve">
          <source>If this method is not invoked prior to &lt;a href=&quot;#build()&quot;&gt;building&lt;/a&gt;, then newly built clients will use the &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslcontext#getDefault()&quot;&gt;default context&lt;/a&gt;, which is normally adequate for client applications that do not need to specify protocols, or require client authentication.</source>
          <target state="translated">이 메서드가 &lt;a href=&quot;#build()&quot;&gt;빌드&lt;/a&gt; 전에 호출되지 않으면 새로 빌드 된 클라이언트가 &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslcontext#getDefault()&quot;&gt;기본 컨텍스트를&lt;/a&gt; 사용합니다. 는 일반적으로 프로토콜을 지정할 필요가 없거나 클라이언트 인증이 필요한 클라이언트 애플리케이션에 적합한 를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b0b6b511fb044eb39545567fe94d211a4d867129" translate="yes" xml:space="preserve">
          <source>If this method is overridden, then &lt;code&gt;super.checkAccess&lt;/code&gt; should be called by the first statement in the overridden method, or the equivalent security check should be placed in the overridden method.</source>
          <target state="translated">이 방법을 재정의하면 &lt;code&gt;super.checkAccess&lt;/code&gt; 하는 경우 대체 된 메소드의 첫 번째 명령문에서 를 호출하거나 대체 된 메소드에서 동등한 보안 검사를 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="bba6df9ffc21dac2bfe7a31f9c32e2fce7cb953f" translate="yes" xml:space="preserve">
          <source>If this method is overridden, then &lt;code&gt;super.checkPackageAccess&lt;/code&gt; should be called as the first line in the overridden method.</source>
          <target state="translated">이 메소드를 오버라이드 (override)하면 &lt;code&gt;super.checkPackageAccess&lt;/code&gt; 하는 경우 대체 된 메소드에서 첫 번째 행으로 를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="8717d447e57fbb7a357ddb19fca08779dbcd403d" translate="yes" xml:space="preserve">
          <source>If this method is overridden, then &lt;code&gt;super.checkPackageDefinition&lt;/code&gt; should be called as the first line in the overridden method.</source>
          <target state="translated">이 방법을 재정의하면 &lt;code&gt;super.checkPackageDefinition&lt;/code&gt; 하는 경우 대체 된 메소드의 첫 번째 행으로 을 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="d2716b5886dbb3910a787a5d7351e3a6f9642796" translate="yes" xml:space="preserve">
          <source>If this method is overridden, then a call to &lt;code&gt;super.checkMemberAccess&lt;/code&gt; cannot be made, as the default implementation of &lt;code&gt;checkMemberAccess&lt;/code&gt; relies on the code being checked being at a stack depth of 4.</source>
          <target state="translated">이 메소드가 재정의되면 &lt;code&gt;checkMemberAccess&lt;/code&gt; 의 기본 구현은 스택 깊이 4 인 검사중인 코드에 의존 하므로 &lt;code&gt;super.checkMemberAccess&lt;/code&gt; 를 호출 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="e9a8e5cf837747c5348075aa084ae65fb8880d78" translate="yes" xml:space="preserve">
          <source>If this method itself throws an exception, resulting behavior is undefined.</source>
          <target state="translated">이 메서드 자체에서 예외가 발생하면 결과 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0a627af6855d7d2f9803b691c2e2cdf8a000563f" translate="yes" xml:space="preserve">
          <source>If this method receives a message it is copied into the given byte buffer and an &lt;a href=&quot;messageinfo&quot;&gt;&lt;code&gt;MessageInfo&lt;/code&gt;&lt;/a&gt; is returned. The message is transferred into the given byte buffer starting at its current position and the buffers position is incremented by the number of bytes read. If there are fewer bytes remaining in the buffer than are required to hold the message, or the underlying input buffer does not contain the complete message, then an invocation of &lt;a href=&quot;messageinfo#isComplete()&quot;&gt;&lt;code&gt;isComplete&lt;/code&gt;&lt;/a&gt; on the returned &lt;code&gt;
 MessageInfo&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt;, and more invocations of this method will be necessary to completely consume the messgae. Only one message at a time will be partially delivered in any stream. The socket option &lt;a href=&quot;sctpstandardsocketoptions#SCTP_FRAGMENT_INTERLEAVE&quot;&gt;&lt;code&gt;SCTP_FRAGMENT_INTERLEAVE&lt;/code&gt;&lt;/a&gt; controls various aspects of what interlacing of messages occurs.</source>
          <target state="translated">이 메서드가 메시지를 수신하면 지정된 바이트 버퍼에 복사되고 &lt;a href=&quot;messageinfo&quot;&gt; &lt;code&gt;MessageInfo&lt;/code&gt; &lt;/a&gt; 가 반환됩니다. 메시지는 현재 위치에서 시작하여 주어진 바이트 버퍼로 전송되고 버퍼 위치는 읽은 바이트 수만큼 증가합니다. 메시지를 보관하는 데 필요한 것보다 버퍼에 남아있는 바이트 수가 적거나 기본 입력 버퍼에 전체 메시지가 포함되지 않은 경우 반환 된 &lt;code&gt; MessageInfo&lt;/code&gt; 에 대한 &lt;a href=&quot;messageinfo#isComplete()&quot;&gt; &lt;code&gt;isComplete&lt;/code&gt; &lt;/a&gt; 호출은 &lt;code&gt;false&lt;/code&gt; 를 반환 하고이 메서드의 더 많은 호출은 다음과 같습니다. 메스 개를 완전히 소비하는 데 필요합니다. 한 번에 하나의 메시지 만 모든 스트림에서 부분적으로 전달됩니다. 소켓 옵션 &lt;a href=&quot;sctpstandardsocketoptions#SCTP_FRAGMENT_INTERLEAVE&quot;&gt; &lt;code&gt;SCTP_FRAGMENT_INTERLEAVE&lt;/code&gt; &lt;/a&gt;메시지 인터레이스가 발생하는 다양한 측면을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="fc1193552b6ede9aba1a21b5aff805ae2120dbd6" translate="yes" xml:space="preserve">
          <source>If this method receives a message it is copied into the given byte buffer. The message is transferred into the given byte buffer starting at its current position and the buffers position is incremented by the number of bytes read. If there are fewer bytes remaining in the buffer than are required to hold the message, or the underlying input buffer does not contain the complete message, then an invocation of &lt;a href=&quot;messageinfo#isComplete()&quot;&gt;&lt;code&gt;isComplete&lt;/code&gt;&lt;/a&gt; on the returned &lt;code&gt;
 MessageInfo&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt;, and more invocations of this method will be necessary to completely consume the messgae. Only one message at a time will be partially delivered in any stream. The socket option &lt;a href=&quot;sctpstandardsocketoptions#SCTP_FRAGMENT_INTERLEAVE&quot;&gt;&lt;code&gt;SCTP_FRAGMENT_INTERLEAVE&lt;/code&gt;&lt;/a&gt; controls various aspects of what interlacing of messages occurs.</source>
          <target state="translated">이 메소드가 메시지를 수신하면 주어진 바이트 버퍼로 복사됩니다. 메시지는 현재 위치에서 시작하여 주어진 바이트 버퍼로 전송되고 버퍼 위치는 읽은 바이트 수만큼 증가합니다. 메시지를 보관하는 데 필요한 것보다 버퍼에 남아있는 바이트 수가 적거나 기본 입력 버퍼에 전체 메시지가 포함되지 않은 경우 반환 된 &lt;code&gt; MessageInfo&lt;/code&gt; 에 대한 &lt;a href=&quot;messageinfo#isComplete()&quot;&gt; &lt;code&gt;isComplete&lt;/code&gt; &lt;/a&gt; 호출은 &lt;code&gt;false&lt;/code&gt; 를 반환 하고이 메서드의 더 많은 호출은 다음과 같습니다. 메스 개를 완전히 소비하는 데 필요합니다. 한 번에 하나의 메시지 만 모든 스트림에서 부분적으로 전달됩니다. 소켓 옵션 &lt;a href=&quot;sctpstandardsocketoptions#SCTP_FRAGMENT_INTERLEAVE&quot;&gt; &lt;code&gt;SCTP_FRAGMENT_INTERLEAVE&lt;/code&gt; &lt;/a&gt; 는 메시지 인터레이스가 발생하는 다양한 측면을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="5fe5f9e6790116735293882010aa0257634d8dac" translate="yes" xml:space="preserve">
          <source>If this method receives a notification then the appropriate method of the given handler, if there is one, is invoked. If the handler returns &lt;a href=&quot;handlerresult#CONTINUE&quot;&gt;&lt;code&gt;CONTINUE&lt;/code&gt;&lt;/a&gt; then this method will try to receive another message/notification, otherwise, if &lt;a href=&quot;handlerresult#RETURN&quot;&gt;&lt;code&gt;RETURN&lt;/code&gt;&lt;/a&gt; is returned this method will return &lt;code&gt;
 null&lt;/code&gt;. If an uncaught exception is thrown by the handler it will be propagated up the stack through this method.</source>
          <target state="translated">이 메소드가 알림을 받으면 주어진 핸들러의 적절한 메소드 (있는 경우)가 호출됩니다. 핸들러가 &lt;a href=&quot;handlerresult#CONTINUE&quot;&gt; &lt;code&gt;CONTINUE&lt;/code&gt; &lt;/a&gt; 를 반환 하면이 메서드는 다른 메시지 / 알림을 수신하려고 시도하고, 그렇지 않으면 &lt;a href=&quot;handlerresult#RETURN&quot;&gt; &lt;code&gt;RETURN&lt;/code&gt; &lt;/a&gt; 이 반환 되면 이 메서드는 &lt;code&gt; null&lt;/code&gt; 을 반환 합니다. 처리기에 의해 포착되지 않은 예외가 발생하면이 메서드를 통해 스택 위로 전파됩니다.</target>
        </trans-unit>
        <trans-unit id="372d71ce22b5d0f30b6cd6996a421f4f7ecd5e62" translate="yes" xml:space="preserve">
          <source>If this method receives a notification then the appropriate method of the given handler, if there is one, is invoked. If the handler returns &lt;a href=&quot;handlerresult#CONTINUE&quot;&gt;&lt;code&gt;CONTINUE&lt;/code&gt;&lt;/a&gt; then this method will try to receive another message/notification, otherwise, if &lt;a href=&quot;handlerresult#RETURN&quot;&gt;&lt;code&gt;RETURN&lt;/code&gt;&lt;/a&gt; is returned this method will return &lt;code&gt;null&lt;/code&gt;. If an uncaught exception is thrown by the handler it will be propagated up the stack through this method.</source>
          <target state="translated">이 메소드가 알림을 받으면 주어진 핸들러의 적절한 메소드 (있는 경우)가 호출됩니다. 핸들러가 &lt;a href=&quot;handlerresult#CONTINUE&quot;&gt; &lt;code&gt;CONTINUE&lt;/code&gt; &lt;/a&gt; 를 반환 하면이 메서드는 다른 메시지 / 알림을 수신하려고 시도하고, 그렇지 않으면 &lt;a href=&quot;handlerresult#RETURN&quot;&gt; &lt;code&gt;RETURN&lt;/code&gt; &lt;/a&gt; 이 반환 되면 이 메서드는 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다. 처리기에 의해 포착되지 않은 예외가 발생하면이 메서드를 통해 스택 위로 전파됩니다.</target>
        </trans-unit>
        <trans-unit id="1f2fe15a0c80e5590ecfc272b969b250dc9971d7" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;a href=&quot;filevisitresult#CONTINUE&quot;&gt;&lt;code&gt;CONTINUE&lt;/code&gt;&lt;/a&gt;, then entries in the directory are visited. If this method returns &lt;a href=&quot;filevisitresult#SKIP_SUBTREE&quot;&gt;&lt;code&gt;SKIP_SUBTREE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;filevisitresult#SKIP_SIBLINGS&quot;&gt;&lt;code&gt;SKIP_SIBLINGS&lt;/code&gt;&lt;/a&gt; then entries in the directory (and any descendants) will not be visited.</source>
          <target state="translated">이 메소드가 &lt;a href=&quot;filevisitresult#CONTINUE&quot;&gt; &lt;code&gt;CONTINUE&lt;/code&gt; 를&lt;/a&gt; 리턴 하면 디렉토리의 항목이 방문됩니다. 이 메소드가 &lt;a href=&quot;filevisitresult#SKIP_SUBTREE&quot;&gt; &lt;code&gt;SKIP_SUBTREE&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;filevisitresult#SKIP_SIBLINGS&quot;&gt; &lt;code&gt;SKIP_SIBLINGS&lt;/code&gt; &lt;/a&gt; 를 리턴 하면 디렉토리 (및 모든 하위 항목)의 항목을 방문하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e39185a4e0c8088f7aade4e05eb53553f43af678" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;UNSPECIFIED_OPTION&lt;/code&gt;, then this &lt;code&gt;ConfirmationCallback&lt;/code&gt; was instantiated with &lt;code&gt;options&lt;/code&gt; instead of an &lt;code&gt;optionType&lt;/code&gt;. In this case, invoke the &lt;code&gt;getOptions&lt;/code&gt; method to determine which confirmation options to display.</source>
          <target state="translated">이 방법은 반환하면 &lt;code&gt;UNSPECIFIED_OPTION&lt;/code&gt; 을 ,이 &lt;code&gt;ConfirmationCallback&lt;/code&gt; 를가 인스턴스화 된 &lt;code&gt;options&lt;/code&gt; 대신의 &lt;code&gt;optionType&lt;/code&gt; . 이 경우 &lt;code&gt;getOptions&lt;/code&gt; 를 호출하십시오. 메소드를 표시 할 확인 옵션을 판별하십시오.</target>
        </trans-unit>
        <trans-unit id="a4f8442da076503f391489329dc072c7aef9f736" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;false&lt;/code&gt; for a particular character sequence then more information about why the sequence cannot be encoded may be obtained by performing a full &lt;a href=&quot;#steps&quot;&gt;encoding operation&lt;/a&gt;.</source>
          <target state="translated">이 메서드가 특정 문자 시퀀스에 대해 &lt;code&gt;false&lt;/code&gt; 를 반환 하면 전체 &lt;a href=&quot;#steps&quot;&gt;인코딩 작업&lt;/a&gt; 을 수행하여 시퀀스를 인코딩 할 수없는 이유에 대한 자세한 정보를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="89741f03e2c12e3f9d0377de8cdbc5a8a096de70" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;hasThumbnails&lt;/code&gt; and &lt;code&gt;getNumThumbnails&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt;, respectively, and &lt;code&gt;readThumbnail&lt;/code&gt; will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;, regardless of their arguments.</source>
          <target state="translated">이 메소드가 &lt;code&gt;false&lt;/code&gt; 를 &lt;code&gt;hasThumbnails&lt;/code&gt; 주는 경우 , hasThumbnails 및 &lt;code&gt;getNumThumbnails&lt;/code&gt; 는 각각 &lt;code&gt;false&lt;/code&gt; 와 &lt;code&gt;0&lt;/code&gt; 을 리턴 해 , &lt;code&gt;readThumbnail&lt;/code&gt; 는 인수에 관계없이 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 Throw합니다 .</target>
        </trans-unit>
        <trans-unit id="583ee50e7f99c02fd6ebcf8333ad462d124187da" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;null&lt;/code&gt;, i.e. the libraries were not found in any of the JAR files loaded with this class loader, the VM searches the library along the path specified as the &lt;code&gt;java.library.path&lt;/code&gt; property.</source>
          <target state="translated">이 메소드가 &lt;code&gt;null&lt;/code&gt; 를 돌려주는 경우 , 즉이 클래스 로더에 의해로드 된 JAR 파일로 라이브러리가 발견되지 않는 경우, VM은 &lt;code&gt;java.library.path&lt;/code&gt; 프로퍼티 로서 지정된 경로를 따라 라이브러리를 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="34c10f29d2d818803ba8f12114cc76e265da1c7f" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; then the &lt;a href=&quot;#array()&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#arrayOffset()&quot;&gt;&lt;code&gt;arrayOffset&lt;/code&gt;&lt;/a&gt; methods may safely be invoked.</source>
          <target state="translated">이 메서드가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 &lt;a href=&quot;#array()&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#arrayOffset()&quot;&gt; &lt;code&gt;arrayOffset&lt;/code&gt; &lt;/a&gt; 메서드가 안전하게 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd48509152a373edcec8f406d8b8e5710f1c1c27" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; then the &lt;a href=&quot;buffer#array--&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;buffer#arrayOffset--&quot;&gt;&lt;code&gt;arrayOffset&lt;/code&gt;&lt;/a&gt; methods may safely be invoked.</source>
          <target state="translated">이 메소드가 &lt;code&gt;true&lt;/code&gt; 를 리턴 하면, &lt;a href=&quot;buffer#array--&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;buffer#arrayOffset--&quot;&gt; &lt;code&gt;arrayOffset&lt;/code&gt; &lt;/a&gt; 메소드가 안전하게 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbdb6410341007d87b08daec6c7107ce0df914c6" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; then the &lt;a href=&quot;bytebuffer#array--&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;bytebuffer#arrayOffset--&quot;&gt;&lt;code&gt;arrayOffset&lt;/code&gt;&lt;/a&gt; methods may safely be invoked.</source>
          <target state="translated">이 메소드가 &lt;code&gt;true&lt;/code&gt; 를 리턴 하면, &lt;a href=&quot;bytebuffer#array--&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;bytebuffer#arrayOffset--&quot;&gt; &lt;code&gt;arrayOffset&lt;/code&gt; &lt;/a&gt; 메소드가 안전하게 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a857f7c1ccccfd0ee4edfcfe5dd250a8768e0861" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; then the &lt;a href=&quot;charbuffer#array--&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;charbuffer#arrayOffset--&quot;&gt;&lt;code&gt;arrayOffset&lt;/code&gt;&lt;/a&gt; methods may safely be invoked.</source>
          <target state="translated">이 메소드가 &lt;code&gt;true&lt;/code&gt; 를 리턴 하면, &lt;a href=&quot;charbuffer#array--&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;charbuffer#arrayOffset--&quot;&gt; &lt;code&gt;arrayOffset&lt;/code&gt; &lt;/a&gt; 메소드가 안전하게 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63c55591e8102bdcf445fe25c70543f8c60cb25a" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; then the &lt;a href=&quot;doublebuffer#array--&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;doublebuffer#arrayOffset--&quot;&gt;&lt;code&gt;arrayOffset&lt;/code&gt;&lt;/a&gt; methods may safely be invoked.</source>
          <target state="translated">이 메소드가 &lt;code&gt;true&lt;/code&gt; 를 리턴 하면, &lt;a href=&quot;doublebuffer#array--&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;doublebuffer#arrayOffset--&quot;&gt; &lt;code&gt;arrayOffset&lt;/code&gt; &lt;/a&gt; 메소드가 안전하게 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eaa27e79e71eea321ee777191049d775b73b8810" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; then the &lt;a href=&quot;floatbuffer#array--&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;floatbuffer#arrayOffset--&quot;&gt;&lt;code&gt;arrayOffset&lt;/code&gt;&lt;/a&gt; methods may safely be invoked.</source>
          <target state="translated">이 메소드가 &lt;code&gt;true&lt;/code&gt; 를 리턴 하면, &lt;a href=&quot;floatbuffer#array--&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;floatbuffer#arrayOffset--&quot;&gt; &lt;code&gt;arrayOffset&lt;/code&gt; &lt;/a&gt; 메소드가 안전하게 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b13dc213a3ee30b61fca492d489a4c0f9eb2f263" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; then the &lt;a href=&quot;intbuffer#array--&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;intbuffer#arrayOffset--&quot;&gt;&lt;code&gt;arrayOffset&lt;/code&gt;&lt;/a&gt; methods may safely be invoked.</source>
          <target state="translated">이 메소드가 &lt;code&gt;true&lt;/code&gt; 를 리턴 하면, &lt;a href=&quot;intbuffer#array--&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;intbuffer#arrayOffset--&quot;&gt; &lt;code&gt;arrayOffset&lt;/code&gt; &lt;/a&gt; 메소드가 안전하게 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="17d0fce648cd581a214ad523211f985748ce4de4" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; then the &lt;a href=&quot;longbuffer#array--&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;longbuffer#arrayOffset--&quot;&gt;&lt;code&gt;arrayOffset&lt;/code&gt;&lt;/a&gt; methods may safely be invoked.</source>
          <target state="translated">이 메소드가 &lt;code&gt;true&lt;/code&gt; 를 리턴 하면, &lt;a href=&quot;longbuffer#array--&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;longbuffer#arrayOffset--&quot;&gt; &lt;code&gt;arrayOffset&lt;/code&gt; &lt;/a&gt; 메소드가 안전하게 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2694b014a8ca3bb488a35a3293aadfd6acca88e" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; then the &lt;a href=&quot;shortbuffer#array--&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;shortbuffer#arrayOffset--&quot;&gt;&lt;code&gt;arrayOffset&lt;/code&gt;&lt;/a&gt; methods may safely be invoked.</source>
          <target state="translated">이 메소드가 &lt;code&gt;true&lt;/code&gt; 를 리턴 하면, &lt;a href=&quot;shortbuffer#array--&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;shortbuffer#arrayOffset--&quot;&gt; &lt;code&gt;arrayOffset&lt;/code&gt; &lt;/a&gt; 메소드가 안전하게 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08485d094525344dfb1b973f481b43764248b8eb" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt;, subsequent invocations will also return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 메서드가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 후속 호출도 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="f8907e1a89a6c4f4321d84d0e2ff0cb7800f431f" translate="yes" xml:space="preserve">
          <source>If this method returns successfully, the &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt; the &lt;code&gt;Receiver&lt;/code&gt; belongs to is opened implicitly, if it is not already open. It is possible to close an implicitly opened device by calling &lt;a href=&quot;receiver#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; on the returned &lt;code&gt;Receiver&lt;/code&gt;. All open &lt;code&gt;Receiver&lt;/code&gt; instances have to be closed in order to release system resources hold by the &lt;code&gt;MidiDevice&lt;/code&gt;. For a detailed description of open/close behaviour see the class description of &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드가 성공적으로 반환 되면 &lt;code&gt;Receiver&lt;/code&gt; 속한 &lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; &lt;/a&gt; 가 아직 열려 있지 않은 경우 암시 적으로 열립니다. 반환 된 &lt;code&gt;Receiver&lt;/code&gt; 에서 &lt;a href=&quot;receiver#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 를 호출하여 암시 적으로 열린 장치를 닫을 수 있습니다 . &lt;code&gt;MidiDevice&lt;/code&gt; 가 보유한 시스템 리소스를 해제하려면 열려있는 모든 &lt;code&gt;Receiver&lt;/code&gt; 인스턴스를 닫아야 합니다 . 열기 / 닫기 동작에 대한 자세한 설명은 &lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; &lt;/a&gt; 의 클래스 설명을 참조하십시오. .</target>
        </trans-unit>
        <trans-unit id="f30f43a24fc957d3345e50bb02daec3098aff3e0" translate="yes" xml:space="preserve">
          <source>If this method returns successfully, the &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt; the &lt;code&gt;Receiver&lt;/code&gt; belongs to is opened implicitly, if it is not already open. It is possible to close an implicitly opened device by calling &lt;a href=&quot;receiver#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; on the returned &lt;code&gt;Receiver&lt;/code&gt;. All open &lt;code&gt;Receiver&lt;/code&gt; instances have to be closed in order to release system resources hold by the &lt;code&gt;MidiDevice&lt;/code&gt;. For a detailed description of open/close behaviour see the class description of &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드가 성공적으로 반환 되면 &lt;code&gt;Receiver&lt;/code&gt; 속한 &lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; &lt;/a&gt; 가 아직 열려 있지 않은 경우 암시 적으로 열립니다. 반환 된 값에 대해 &lt;a href=&quot;receiver#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 를 호출하여 내재적으로 열린 장치를 닫을 수 있습니다. &lt;code&gt;Receiver&lt;/code&gt; . &lt;code&gt;MidiDevice&lt;/code&gt; 가 보유한 시스템 자원을 해제하려면 열려있는 모든 &lt;code&gt;Receiver&lt;/code&gt; 인스턴스를 닫아야 합니다 . 열기 / 닫기 동작에 대한 자세한 설명은 &lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; &lt;/a&gt; 클래스 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b235bca343629e2e912e0601c27d3bda0c86741d" translate="yes" xml:space="preserve">
          <source>If this method returns successfully, the &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt; the &lt;code&gt;Transmitter&lt;/code&gt; belongs to is opened implicitly, if it is not already open. It is possible to close an implicitly opened device by calling &lt;a href=&quot;transmitter#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; on the returned &lt;code&gt;Transmitter&lt;/code&gt;. All open &lt;code&gt;Transmitter&lt;/code&gt; instances have to be closed in order to release system resources hold by the &lt;code&gt;MidiDevice&lt;/code&gt;. For a detailed description of open/close behaviour see the class description of &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드가 성공적으로 반환 되면 &lt;code&gt;Transmitter&lt;/code&gt; 속한 &lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; &lt;/a&gt; 가 아직 열려 있지 않은 경우 암시 적으로 열립니다. 반환 된 &lt;code&gt;Transmitter&lt;/code&gt; 에서 &lt;a href=&quot;transmitter#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 를 호출하여 암시 적으로 열린 장치를 닫을 수 있습니다 . &lt;code&gt;MidiDevice&lt;/code&gt; 가 보유한 시스템 리소스를 해제하려면 열려있는 모든 &lt;code&gt;Transmitter&lt;/code&gt; 인스턴스를 닫아야 합니다 . 열기 / 닫기 동작에 대한 자세한 설명은 &lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; &lt;/a&gt; 클래스 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="11090b93bbbee91fc5f0393730ae36edec55ac29" translate="yes" xml:space="preserve">
          <source>If this method returns successfully, the &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt; the &lt;code&gt;Transmitter&lt;/code&gt; belongs to is opened implicitly, if it is not already open. It is possible to close an implicitly opened device by calling &lt;a href=&quot;transmitter#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; on the returned &lt;code&gt;Transmitter&lt;/code&gt;. All open &lt;code&gt;Transmitter&lt;/code&gt; instances have to be closed in order to release system resources hold by the &lt;code&gt;MidiDevice&lt;/code&gt;. For a detailed description of open/close behaviour see the class description of &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드가 성공적으로 리턴되면 , &lt;code&gt;Transmitter&lt;/code&gt; 속한 &lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; &lt;/a&gt; 가 아직 열려 있지 않은 경우 내재적으로 열립니다. 리턴 된 &lt;code&gt;Transmitter&lt;/code&gt; 에서 &lt;a href=&quot;transmitter#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 를 호출하여 내재적으로 열린 장치를 닫을 수 있습니다. . &lt;code&gt;MidiDevice&lt;/code&gt; 가 보유한 시스템 자원을 해제하려면 열려있는 모든 &lt;code&gt;Transmitter&lt;/code&gt; 인스턴스를 닫아야 합니다 . 열기 / 닫기 동작에 대한 자세한 설명은 &lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; &lt;/a&gt; 클래스 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f2b383ee53687a5dfc8c5593166fa61cf5add2d7" translate="yes" xml:space="preserve">
          <source>If this method returns true, &lt;code&gt;revalidate&lt;/code&gt; calls by descendants of this component will cause the entire tree beginning with this root to be validated.</source>
          <target state="translated">이 메서드가 true를 반환 하는 경우이 구성 요소의 하위 항목에 의한 호출을 &lt;code&gt;revalidate&lt;/code&gt; 하면이 루트로 시작하는 전체 트리의 유효성이 검사됩니다.</target>
        </trans-unit>
        <trans-unit id="c488385ff0122c73db4b6166122428d5abbfa5bf" translate="yes" xml:space="preserve">
          <source>If this method returns true, &lt;code&gt;revalidate&lt;/code&gt; calls by descendants of this component will cause the entire tree beginning with this root to be validated. Returns false by default. &lt;code&gt;JScrollPane&lt;/code&gt; overrides this method and returns true.</source>
          <target state="translated">이 메서드가 true를 반환 하는 경우이 구성 요소의 하위 항목에 의한 호출을 &lt;code&gt;revalidate&lt;/code&gt; 하면이 루트로 시작하는 전체 트리의 유효성이 검사됩니다. 기본적으로 false를 반환합니다. &lt;code&gt;JScrollPane&lt;/code&gt; 은이 메서드를 재정의하고 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="014b30135306d4074b7578319732d53aa9c447fc" translate="yes" xml:space="preserve">
          <source>If this method returns true, and a match was found, then more input could cause the match to be lost. If this method returns false and a match was found, then more input might change the match but the match won't be lost. If a match was not found, then requireEnd has no meaning.</source>
          <target state="translated">이 메소드가 true를 리턴하고 일치하는 것이 발견되면, 더 많은 입력으로 일치가 손실 될 수 있습니다. 이 메소드가 false를 리턴하고 일치하는 것이 발견되면, 더 많은 입력이 일치를 변경할 수 있지만 일치는 유실되지 않습니다. 일치하는 것이 없으면 requireEnd는 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="fb5a99f4d37b88e56a040cef00ac9b0e8bbdb966" translate="yes" xml:space="preserve">
          <source>If this method successfully creates an MBean, a notification is sent as described &lt;a href=&quot;#notif&quot;&gt;above&lt;/a&gt;.</source>
          <target state="translated">이 메소드가 MBean을 작성하면 &lt;a href=&quot;#notif&quot;&gt;위에&lt;/a&gt; 설명한대로 알림이 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="f0872f63d827bd783c6afa520726b944970b97a1" translate="yes" xml:space="preserve">
          <source>If this method successfully registers an MBean, a notification is sent as described &lt;a href=&quot;#notif&quot;&gt;above&lt;/a&gt;.</source>
          <target state="translated">이 메소드가 MBean을 성공적으로 등록하면 &lt;a href=&quot;#notif&quot;&gt;위에&lt;/a&gt; 설명한대로 알림이 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="1ae3a101c67d63daa605cb7ec0e8cbf30e62e517" translate="yes" xml:space="preserve">
          <source>If this method successfully unregisters an MBean, a notification is sent as described &lt;a href=&quot;#notif&quot;&gt;above&lt;/a&gt;.</source>
          <target state="translated">이 메소드가 MBean의 등록을 해제하면, 설명 된대로 알림이 전송됩니다. &lt;a href=&quot;#notif&quot;&gt; 위에&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="06105512734e5a3f2498ad736c12524606a32c7e" translate="yes" xml:space="preserve">
          <source>If this method throws an IOException, the channel's socket may be left in an unspecified state. It is strongly recommended that the channel be closed when disconnect fails.</source>
          <target state="translated">이 메서드에서 IOException이 발생하면 채널의 소켓이 지정되지 않은 상태로 남아있을 수 있습니다. 연결 해제에 실패하면 채널을 닫는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b19bf65a12a35734af469f52dc8ab620de5c6eac" translate="yes" xml:space="preserve">
          <source>If this method throws an UncheckedIOException, the socket may be left in an unspecified state. It is strongly recommended that the socket be closed when disconnect fails.</source>
          <target state="translated">이 메서드가 UncheckedIOException을 throw하면 소켓이 지정되지 않은 상태로 남아있을 수 있습니다. 연결 해제가 실패하면 소켓을 닫는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="19bb00699df718b977df1da7ce02cb1fa1580c55" translate="yes" xml:space="preserve">
          <source>If this method throws an exception, no classes have been redefined.</source>
          <target state="translated">이 메소드에서 예외가 발생하면 클래스가 다시 정의되지 않은 것입니다.</target>
        </trans-unit>
        <trans-unit id="d645fdf0c0b5590fb0091579dadbcf7c2685180b" translate="yes" xml:space="preserve">
          <source>If this method throws an exception, no classes have been retransformed.</source>
          <target state="translated">이 메소드에서 예외가 발생하면 클래스가 재 변환되지 않은 것입니다.</target>
        </trans-unit>
        <trans-unit id="80b175ddef3aedcef9f2574b1f0955c043f5beb5" translate="yes" xml:space="preserve">
          <source>If this method throws an exception, the corresponding call to &lt;code&gt;get&lt;/code&gt; will terminate abnormally with that exception, and no class value will be recorded.</source>
          <target state="translated">이 메소드에서 예외가 발생하면 해당하는 호출 &lt;code&gt;get&lt;/code&gt; 비정상적으로 종료되고 클래스 값이 기록되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="910e35df66a580af0800017efe4b713c9c828271" translate="yes" xml:space="preserve">
          <source>If this method throws an exception, this &lt;code&gt;XMLSignature&lt;/code&gt; and the &lt;code&gt;signContext&lt;/code&gt; parameter will be left in the state that it was in prior to the invocation.</source>
          <target state="translated">이 메소드에서 예외가 발생하면이 &lt;code&gt;XMLSignature&lt;/code&gt; 및 &lt;code&gt;signContext&lt;/code&gt; 매개 변수는 호출 이전의 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="5fd430ffc317edcb87d69e83ff90f7430c8c5d2c" translate="yes" xml:space="preserve">
          <source>If this method type can be &lt;a href=&quot;#descriptor&quot;&gt;described nominally&lt;/a&gt;, then the result is a method type descriptor (JVMS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.3.3&quot;&gt;4.3.3&lt;/a&gt;). &lt;a href=&quot;../constant/methodtypedesc&quot;&gt;&lt;code&gt;MethodTypeDesc&lt;/code&gt;&lt;/a&gt; for this method type can be produced by calling &lt;a href=&quot;../constant/methodtypedesc#ofDescriptor(java.lang.String)&quot;&gt;&lt;code&gt;MethodTypeDesc::ofDescriptor&lt;/code&gt;&lt;/a&gt; with the result descriptor string.</source>
          <target state="translated">이 메소드 유형을 &lt;a href=&quot;#descriptor&quot;&gt;명목상&lt;/a&gt; 으로 설명 할 수있는 경우 결과는 메소드 유형 설명자 (JVMS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.3.3&quot;&gt;4.3.3&lt;/a&gt; )입니다. &lt;a href=&quot;../constant/methodtypedesc&quot;&gt; &lt;code&gt;MethodTypeDesc&lt;/code&gt; &lt;/a&gt; 이 방법의 유형은 호출에 의해 제조 할 수있다 &lt;a href=&quot;../constant/methodtypedesc#ofDescriptor(java.lang.String)&quot;&gt; &lt;code&gt;MethodTypeDesc::ofDescriptor&lt;/code&gt; &lt;/a&gt; 결과 설명 문자열.</target>
        </trans-unit>
        <trans-unit id="523bb8f6ba820520ae3795685cf5265d498f5039" translate="yes" xml:space="preserve">
          <source>If this method type cannot be &lt;a href=&quot;#descriptor&quot;&gt;described nominally&lt;/a&gt; and the result is a string of the form:</source>
          <target state="translated">이 메소드 유형을 &lt;a href=&quot;#descriptor&quot;&gt;명목상&lt;/a&gt; 으로 설명 할 수없고 결과가 다음 형식의 문자열 인 경우 :</target>
        </trans-unit>
        <trans-unit id="5b94f232bfc11e798823a37144c27011e6dba614" translate="yes" xml:space="preserve">
          <source>If this module has &lt;em&gt;opened&lt;/em&gt; a package to at least the caller module then update this module to open the package to the given module.</source>
          <target state="translated">이 모듈이있는 경우 &lt;em&gt;열&lt;/em&gt; 적어도 발신자 모듈 패키지를, 지정된 모듈에 패키지를 열려면이 모듈을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="f723ebe2ffb1ae52653e8d93ca37072b353084f9" translate="yes" xml:space="preserve">
          <source>If this module has &lt;em&gt;opened&lt;/em&gt; a package to at least the caller module then update this module to open the package to the given module. Opening a package with this method allows all types in the package, and all their members, not just public types and their public members, to be reflected on by the given module when using APIs that support private access or a way to bypass or suppress default Java language access control checks.</source>
          <target state="translated">이 모듈이있는 경우 &lt;em&gt;열&lt;/em&gt; 적어도 발신자 모듈 패키지를, 지정된 모듈에 패키지를 열려면이 모듈을 업데이트합니다. 이 방법으로 패키지를 열면 비공개 액세스를 지원하는 API를 사용하거나 기본값을 우회하거나 억제하는 방법을 사용할 때 패키지의 모든 유형과 공개 유형 및 해당 공개 멤버뿐 아니라 모든 멤버가 지정된 모듈에 반영 될 수 있습니다. Java 언어 액세스 제어 검사.</target>
        </trans-unit>
        <trans-unit id="9158ebabb3074c00ff084a88493416c9d3b195ce" translate="yes" xml:space="preserve">
          <source>If this module is an automatic module then the set of exports is empty.</source>
          <target state="translated">이 모듈이 자동 모듈이면 내보내기 세트가 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c744027c10c46409b4db7683f060c99946b8944" translate="yes" xml:space="preserve">
          <source>If this module is an automatic module then the set of service dependences is empty.</source>
          <target state="translated">이 모듈이 자동 모듈이면 서비스 종속성 집합이 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="62b1488d1b9b86f341446bb19e41951a81a12ad9" translate="yes" xml:space="preserve">
          <source>If this module is an open module or an automatic module then the set of open packages is empty.</source>
          <target state="translated">이 모듈이 열린 모듈이거나 자동 모듈이면 열린 패키지 세트가 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e179a64be9fb9ee6dc94f8fc89a80a08acd7b29" translate="yes" xml:space="preserve">
          <source>If this new node is rejected, the parser might reuse the new node and any of its descendants.</source>
          <target state="translated">이 새 노드가 거부되면 구문 분석기는 새 노드와 그 하위 항목을 재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e569b4228f8cda6f74b4fdc1864b51ff1f931e8" translate="yes" xml:space="preserve">
          <source>If this node (or an ancestor) has already been removed with the &lt;a href=&quot;#removeNode()&quot;&gt;&lt;code&gt;removeNode()&lt;/code&gt;&lt;/a&gt; method, it</source>
          <target state="translated">이 노드 (또는 조상)가 &lt;a href=&quot;#removeNode()&quot;&gt; &lt;code&gt;removeNode()&lt;/code&gt; &lt;/a&gt; 메서드로 이미 제거 된 경우</target>
        </trans-unit>
        <trans-unit id="31f24edbd9312a49f2c5d55339e1a0c7b714be08" translate="yes" xml:space="preserve">
          <source>If this node (or an ancestor) has already been removed with the &lt;a href=&quot;preferences#removeNode--&quot;&gt;&lt;code&gt;removeNode()&lt;/code&gt;&lt;/a&gt; method, it</source>
          <target state="translated">이 노드 (또는 상위 노드)가 &lt;a href=&quot;preferences#removeNode--&quot;&gt; &lt;code&gt;removeNode()&lt;/code&gt; &lt;/a&gt; 메소드로 이미 제거 된 경우</target>
        </trans-unit>
        <trans-unit id="11fd0532efc80189db90d8c84065b54ac7952a81" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;#childrenNames()&quot;&gt;&lt;code&gt;childrenNames()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">이 노드가 &lt;code&gt;BackingStoreException&lt;/code&gt; 을 던지면 예외는 둘러싸는 &lt;a href=&quot;#childrenNames()&quot;&gt; &lt;code&gt;childrenNames()&lt;/code&gt; &lt;/a&gt; 호출을 넘어 전파 됩니다.</target>
        </trans-unit>
        <trans-unit id="9da2bd57bb1661add34a2e0af4a3add4dcef99f2" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;#flush()&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">이 노드가 &lt;code&gt;BackingStoreException&lt;/code&gt; 을 throw 하면 예외가 바깥 쪽 &lt;a href=&quot;#flush()&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; &lt;/a&gt; 호출을 넘어 전파 됩니다.</target>
        </trans-unit>
        <trans-unit id="9ec392e357bcea6d570727a6b34121290f2b22f9" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;#keys()&quot;&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">이 노드가 &lt;code&gt;BackingStoreException&lt;/code&gt; 을 throw 하면 예외가 둘러싸는 &lt;a href=&quot;#keys()&quot;&gt; &lt;code&gt;keys()&lt;/code&gt; &lt;/a&gt; 호출을 넘어 전파 됩니다.</target>
        </trans-unit>
        <trans-unit id="45273adec0bde1f8d359b9ed20dc3cfe6ca0f98e" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;#removeNode()&quot;&gt;&lt;code&gt;removeNode()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">이 노드가 &lt;code&gt;BackingStoreException&lt;/code&gt; 을 던지면 예외는 둘러싸는 &lt;a href=&quot;#removeNode()&quot;&gt; &lt;code&gt;removeNode()&lt;/code&gt; &lt;/a&gt; 호출을 넘어 전파 됩니다.</target>
        </trans-unit>
        <trans-unit id="c33ba696714afc4ddb52c65719d7024ee3159994" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;#sync()&quot;&gt;&lt;code&gt;sync()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">이 노드가 &lt;code&gt;BackingStoreException&lt;/code&gt; 을 던지면 예외는 둘러싸는 &lt;a href=&quot;#sync()&quot;&gt; &lt;code&gt;sync()&lt;/code&gt; &lt;/a&gt; 호출을 넘어 전파 됩니다.</target>
        </trans-unit>
        <trans-unit id="5ee7f0b7048c262e543adfeeb22a030246d06650" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;abstractpreferences#childrenNames--&quot;&gt;&lt;code&gt;childrenNames()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">이 노드가 &lt;code&gt;BackingStoreException&lt;/code&gt; 을 발생 시키면 예외는 둘러싸는 &lt;a href=&quot;abstractpreferences#childrenNames--&quot;&gt; &lt;code&gt;childrenNames()&lt;/code&gt; &lt;/a&gt; 호출을 넘어 전파 됩니다.</target>
        </trans-unit>
        <trans-unit id="559431be004f78cfedf89622122e661e8465d896" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;abstractpreferences#flush--&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">이 노드가 &lt;code&gt;BackingStoreException&lt;/code&gt; 을 발생 시키면 예외는 둘러싸는 &lt;a href=&quot;abstractpreferences#flush--&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; &lt;/a&gt; 호출을 넘어 전파 됩니다.</target>
        </trans-unit>
        <trans-unit id="92b05339fcd195b8f7ac0393a4c15f2aba767bd7" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;abstractpreferences#keys--&quot;&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">이 노드가 &lt;code&gt;BackingStoreException&lt;/code&gt; 을 발생 시키면, 예외는 둘러싼 &lt;a href=&quot;abstractpreferences#keys--&quot;&gt; &lt;code&gt;keys()&lt;/code&gt; &lt;/a&gt; 호출을 넘어 전파 됩니다.</target>
        </trans-unit>
        <trans-unit id="fd45290603e6a182e39c137fb954292209622352" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;abstractpreferences#removeNode--&quot;&gt;&lt;code&gt;removeNode()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">이 노드가 &lt;code&gt;BackingStoreException&lt;/code&gt; 을 발생 시키면 예외는 둘러싸는 &lt;a href=&quot;abstractpreferences#removeNode--&quot;&gt; &lt;code&gt;removeNode()&lt;/code&gt; &lt;/a&gt; 호출을 넘어 전파 됩니다.</target>
        </trans-unit>
        <trans-unit id="146b76b44e28b571c84f2ccde9b8eac9e2e10eb5" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;abstractpreferences#sync--&quot;&gt;&lt;code&gt;sync()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">이 노드가 &lt;code&gt;BackingStoreException&lt;/code&gt; 을 발생 시키면 예외는 둘러싸는 &lt;a href=&quot;abstractpreferences#sync--&quot;&gt; &lt;code&gt;sync()&lt;/code&gt; &lt;/a&gt; 호출을 넘어 전파 됩니다.</target>
        </trans-unit>
        <trans-unit id="9042e3a5360f606a37243806960e35e2291e5980" translate="yes" xml:space="preserve">
          <source>If this object has changed, as indicated by the &lt;code&gt;hasChanged&lt;/code&gt; method, then notify all of its observers and then call the &lt;code&gt;clearChanged&lt;/code&gt; method to indicate that this object has no longer changed.</source>
          <target state="translated">&lt;code&gt;hasChanged&lt;/code&gt; 메소드 로 표시된 대로이 오브젝트가 변경된 경우 모든 관찰자에게 알리고 &lt;code&gt;clearChanged&lt;/code&gt; 메소드를 호출 하여이 오브젝트가 더 이상 변경되지 않았 음을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="e46dcf3742b810f650685026727e6d26524c25bb" translate="yes" xml:space="preserve">
          <source>If this object is a wildcard domain (such as *.example.com), and</source>
          <target state="translated">이 개체가 와일드 카드 도메인 (예 : * .example.com)이고</target>
        </trans-unit>
        <trans-unit id="9f163d00f83379280da474191b92bc7dee7c9f64" translate="yes" xml:space="preserve">
          <source>If this object is a wildcard domain (such as *.sun.com), and</source>
          <target state="translated">이 객체가 와일드 카드 도메인 인 경우 (예 : * .sun.com)</target>
        </trans-unit>
        <trans-unit id="3cea4ac3417339627d77e490ba6aa487e04415af" translate="yes" xml:space="preserve">
          <source>If this object represents a class or interface that implements no interfaces, the method returns an array of length 0.</source>
          <target state="translated">이 객체가 인터페이스를 구현하지 않는 클래스 또는 인터페이스를 나타내는 경우, 메소드는 길이가 0 인 배열을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1e7bddff8a66051cccc6cb0d03b1327a284a5f6f" translate="yes" xml:space="preserve">
          <source>If this object represents a class, the return value is an array containing objects representing all interfaces directly implemented by the class. The order of the interface objects in the array corresponds to the order of the interface names in the &lt;code&gt;implements&lt;/code&gt; clause of the declaration of the class represented by this object.</source>
          <target state="translated">이 객체가 클래스를 나타내는 경우 반환 값은 클래스에서 직접 구현 한 모든 인터페이스를 나타내는 객체를 포함하는 배열입니다. 배열에서 인터페이스 객체의 순서는 이 객체가 나타내는 클래스 선언의 &lt;code&gt;implements&lt;/code&gt; 절에있는 인터페이스 이름의 순서에 해당 합니다.</target>
        </trans-unit>
        <trans-unit id="6801d640226a494d8fea4dee7eebc54a8b1b4ce4" translate="yes" xml:space="preserve">
          <source>If this object represents a class, the return value is an array containing objects representing all interfaces directly implemented by the class. The order of the interface objects in the array corresponds to the order of the interface names in the &lt;code&gt;implements&lt;/code&gt; clause of the declaration of the class represented by this object. For example, given the declaration:</source>
          <target state="translated">이 객체가 클래스를 나타내는 경우 반환 값은 클래스에서 직접 구현 한 모든 인터페이스를 나타내는 객체를 포함하는 배열입니다. 배열에서 인터페이스 객체의 순서는 이 객체가 나타내는 클래스 선언의 &lt;code&gt;implements&lt;/code&gt; 절에있는 인터페이스 이름의 순서에 해당 합니다. 예를 들어 다음과 같은 선언이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6bbfde3dbccd1b93d90d863f22fea55a2270b449" translate="yes" xml:space="preserve">
          <source>If this object represents a class, the return value is an array containing objects representing all interfaces implemented by the class. The order of the interface objects in the array corresponds to the order of the interface names in the &lt;code&gt;implements&lt;/code&gt; clause of the declaration of the class represented by this object. For example, given the declaration:</source>
          <target state="translated">이 객체가 클래스를 나타내는 경우, 반환 값은 클래스가 구현 한 모든 인터페이스를 나타내는 객체를 포함하는 배열입니다. 배열에서 인터페이스 객체의 순서는 이 객체가 나타내는 클래스 선언의 &lt;code&gt;implements&lt;/code&gt; 절에있는 인터페이스 이름의 순서와 일치 합니다. 예를 들어, 다음과 같이 선언하면 :</target>
        </trans-unit>
        <trans-unit id="68a0eb9644f50dfa3365237e48206912657dedee" translate="yes" xml:space="preserve">
          <source>If this object represents a class, the return value is an array containing objects representing all interfaces implemented by the class. The order of the interface objects in the array corresponds to the order of the interface names in the &lt;code&gt;implements&lt;/code&gt; clause of the declaration of the class represented by this object. In the case of an array class, the interfaces &lt;code&gt;Cloneable&lt;/code&gt; and &lt;code&gt;Serializable&lt;/code&gt; are returned in that order.</source>
          <target state="translated">이 객체가 클래스를 나타내는 경우, 반환 값은 클래스가 구현 한 모든 인터페이스를 나타내는 객체를 포함하는 배열입니다. 배열에서 인터페이스 객체의 순서는 이 객체가 나타내는 클래스 선언의 &lt;code&gt;implements&lt;/code&gt; 절에있는 인터페이스 이름의 순서와 일치 합니다. 배열 클래스의 경우 &lt;code&gt;Cloneable&lt;/code&gt; 및 &lt;code&gt;Serializable&lt;/code&gt; 인터페이스 가 순서대로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c7e1fecec3e1842cf6d0a7c3c48522e500eb7718" translate="yes" xml:space="preserve">
          <source>If this object represents a primitive type or void, null is returned.</source>
          <target state="translated">이 객체가 프리미티브 유형을 나타내거나 void이면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="102d58b2bf49f93aca1515c64c4c34bb49821710" translate="yes" xml:space="preserve">
          <source>If this object represents a primitive type or void, the method returns an array of length 0.</source>
          <target state="translated">이 객체가 프리미티브 유형 또는 void를 나타내는 경우, 메소드는 길이가 0 인 배열을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="215f219962b0e236319b5b858d3118667b63b93f" translate="yes" xml:space="preserve">
          <source>If this object represents an interface, the array contains objects representing all interfaces directly extended by the interface. The order of the interface objects in the array corresponds to the order of the interface names in the &lt;code&gt;extends&lt;/code&gt; clause of the declaration of the interface represented by this object.</source>
          <target state="translated">이 객체가 인터페이스를 나타내는 경우, 배열은 인터페이스가 직접 확장 한 모든 인터페이스를 나타내는 객체를 포함합니다. 배열의 인터페이스 객체 순서는 이 객체가 나타내는 인터페이스 선언의 &lt;code&gt;extends&lt;/code&gt; 절에있는 인터페이스 이름의 순서와 일치 합니다.</target>
        </trans-unit>
        <trans-unit id="030be3302e9112b6d0ab9c62370805d7a4c2a90a" translate="yes" xml:space="preserve">
          <source>If this object represents an interface, the array contains objects representing all interfaces extended by the interface. The order of the interface objects in the array corresponds to the order of the interface names in the &lt;code&gt;extends&lt;/code&gt; clause of the declaration of the interface represented by this object.</source>
          <target state="translated">이 객체가 인터페이스를 나타내는 경우, 배열은 인터페이스가 확장 한 모든 인터페이스를 나타내는 객체를 포함합니다. 배열의 인터페이스 객체 순서는 이 객체가 나타내는 인터페이스 선언의 &lt;code&gt;extends&lt;/code&gt; 절에있는 인터페이스 이름의 순서와 일치 합니다.</target>
        </trans-unit>
        <trans-unit id="107c6791019a8d7adff1747d6751033e870c95bb" translate="yes" xml:space="preserve">
          <source>If this object was initialized with a single IP address and one of</source>
          <target state="translated">이 개체가 단일 IP 주소와 다음 중 하나를 사용하여 초기화 된 경우</target>
        </trans-unit>
        <trans-unit id="c94c2acd246f41a3340bde4e01678205c3f7fa20" translate="yes" xml:space="preserve">
          <source>If this object was not initialized with a single IP address, and one of this object's IP addresses equals one of</source>
          <target state="translated">이 객체가 단일 IP 주소로 초기화되지 않고이 객체의 IP 주소 중 하나가</target>
        </trans-unit>
        <trans-unit id="2c565fa50ed849b3fe574e7e2acaddd76ed6b27d" translate="yes" xml:space="preserve">
          <source>If this object's certificates are not null, then all of this object's certificates must be present in</source>
          <target state="translated">이 객체의 증명서가 null가 아닌 경우,이 객체의 증명서가 모두 존재해야한다</target>
        </trans-unit>
        <trans-unit id="a8a4f359cc185445100b803f449de95a93aa8f07" translate="yes" xml:space="preserve">
          <source>If this object's className is &quot;&lt;code&gt;*&lt;/code&gt;&quot;,</source>
          <target state="translated">이 객체의 className이 &quot; &lt;code&gt;*&lt;/code&gt; &quot;인 경우</target>
        </trans-unit>
        <trans-unit id="2a727f9940692bdd710512a875498d902fb56362" translate="yes" xml:space="preserve">
          <source>If this object's file (getLocation().getFile()) doesn't equal</source>
          <target state="translated">이 객체의 파일 (getLocation (). getFile ())이 다른 경우</target>
        </trans-unit>
        <trans-unit id="8d1575bbfa673d9c98ae1f0a6fbc3c9445cfd46a" translate="yes" xml:space="preserve">
          <source>If this object's host (getLocation().getHost()) is not null, then the SocketPermission constructed with this object's host must imply the SocketPermission constructed with</source>
          <target state="translated">이 객체의 호스트 (getLocation (). getHost ())가 null가 아닌 경우,이 객체의 호스트로 구축 된 SocketPermission는</target>
        </trans-unit>
        <trans-unit id="f93e8a81abaed7c6dfb8d9745b5294f8948ed92f" translate="yes" xml:space="preserve">
          <source>If this object's location (getLocation()) is not null, then the following checks are made against this object's location and</source>
          <target state="translated">이 객체의 위치 (getLocation ())가 null가 아닌 경우,이 객체의 위치에 대해서 다음의 확인이 행해집니다.</target>
        </trans-unit>
        <trans-unit id="1265a2276f6c2efb4e71acc80c2059bb1488b30c" translate="yes" xml:space="preserve">
          <source>If this object's location equals</source>
          <target state="translated">이 객체의 위치가 같은 경우</target>
        </trans-unit>
        <trans-unit id="accff77e178dc73cf6d4bfd526487c56cebf9d8d" translate="yes" xml:space="preserve">
          <source>If this object's member is &quot;&lt;code&gt;*&lt;/code&gt;&quot;,</source>
          <target state="translated">이 객체의 멤버가 &quot; &lt;code&gt;*&lt;/code&gt; &quot;인 경우</target>
        </trans-unit>
        <trans-unit id="72946dcef5d00302973d96c029cfad37ee53b4d4" translate="yes" xml:space="preserve">
          <source>If this object's objectName</source>
          <target state="translated">이 객체의 objectName</target>
        </trans-unit>
        <trans-unit id="bfdbd62eac79913358a6a925e81b8a1c4083d7be" translate="yes" xml:space="preserve">
          <source>If this object's port (getLocation().getPort()) is not equal to -1 (that is, if a port is specified), it must equal</source>
          <target state="translated">이 객체의 포트 (getLocation (). getPort ())가 -1이 아닌 경우 (즉, 포트가 지정된 경우) 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="e20be575a118272802cce2851bb247a6c997d8f9" translate="yes" xml:space="preserve">
          <source>If this object's reference (getLocation().getRef()) is not null, it must equal</source>
          <target state="translated">이 객체의 참조 (getLocation (). getRef ())가 null이 아닌 경우는</target>
        </trans-unit>
        <trans-unit id="36a6bacc65976b84bf714a2531ee877f4eff267e" translate="yes" xml:space="preserve">
          <source>If this operation succeeds, the line is marked as open, and an &lt;a href=&quot;lineevent.type#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt; event is dispatched to the line's listeners.</source>
          <target state="translated">이 작업이 성공하면 해당 줄이 열린 것으로 표시되고 &lt;a href=&quot;lineevent.type#OPEN&quot;&gt; &lt;code&gt;OPEN&lt;/code&gt; &lt;/a&gt; 이벤트가 해당 줄의 리스너로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="29a4fac479570251a6b38b322c42aff61644037e" translate="yes" xml:space="preserve">
          <source>If this operation succeeds, the line is marked as open, and an &lt;code&gt;&lt;a href=&quot;lineevent.type#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; event is dispatched to the line's listeners.</source>
          <target state="translated">이 작업이 성공하면 회선이 열린 것으로 표시되고 &lt;code&gt;&lt;a href=&quot;lineevent.type#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 이벤트가 회선의 리스너로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="e693e570c2d3a4cf22cb3f646db70276ee3f3cfe" translate="yes" xml:space="preserve">
          <source>If this option is present then a new file is created, failing if the file already exists or is a symbolic link. When creating a file the check for the existence of the file and the creation of the file if it does not exist is atomic with respect to other file system operations. This option is ignored when the file is opened only for reading.</source>
          <target state="translated">이 옵션이 존재하면 파일이 이미 존재하거나 기호 링크 인 경우 실패하는 새 파일이 작성됩니다. 파일을 작성할 때 파일 존재 여부를 점검하고 파일이 존재하지 않는 경우 파일 작성은 다른 파일 시스템 조작과 관련하여 원 자성입니다. 읽기 전용으로 파일을 열면이 옵션이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="5bdcb9ea5fd489f84524729f8084b77cb2a731fb" translate="yes" xml:space="preserve">
          <source>If this option is present then a new file is created, failing if the file already exists. When creating a file the check for the existence of the file and the creation of the file if it does not exist is atomic with respect to other file system operations. This option is ignored when the file is opened only for reading.</source>
          <target state="translated">이 옵션이 있으면 새 파일이 작성되고 파일이 이미 있으면 실패합니다. 파일을 작성할 때 파일 존재 여부를 점검하고 파일이 존재하지 않는 경우 파일 작성은 다른 파일 시스템 조작과 관련하여 원 자성입니다. 읽기 전용으로 파일을 열면이 옵션이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="cfedbbbeb7c34fd91e56623eb3a72c083a4274f9" translate="yes" xml:space="preserve">
          <source>If this option is present then an existing file is opened if it exists, otherwise a new file is created. This option is ignored if the &lt;code&gt;CREATE_NEW&lt;/code&gt; option is also present or the file is opened only for reading.</source>
          <target state="translated">이 옵션이 있으면 기존 파일이 존재하면 열려고, 그렇지 않으면 새 파일이 작성됩니다. &lt;code&gt;CREATE_NEW&lt;/code&gt; 옵션이 있거나 파일을 읽기 전용으로 열면 이 옵션이 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="65f047e4530eeb8e098678a36747b78cda483f61" translate="yes" xml:space="preserve">
          <source>If this option is present then an existing file is opened if it exists, otherwise a new file is created. When creating a file the check for the existence of the file and the creation of the file if it does not exist is atomic with respect to other file system operations. This option is ignored if the &lt;code&gt;CREATE_NEW&lt;/code&gt; option is also present or the file is opened only for reading.</source>
          <target state="translated">이 옵션이 있으면 기존 파일이 존재하면 열려고, 그렇지 않으면 새 파일이 작성됩니다. 파일을 작성할 때 파일 존재 여부를 점검하고 파일이 존재하지 않는 경우 파일 작성은 다른 파일 시스템 조작과 관련하여 원 자성입니다. &lt;code&gt;CREATE_NEW&lt;/code&gt; 옵션이 있거나 파일을 읽기 전용으로 열면 이 옵션이 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="58acc2fa4fe310e68564a49365b12f42e0810bf3" translate="yes" xml:space="preserve">
          <source>If this option is present then the existing file is truncated to a size of 0 bytes. This option is ignored when the file is opened only for reading.</source>
          <target state="translated">이 옵션이 있으면 기존 파일이 0 바이트 크기로 잘립니다. 읽기 전용으로 파일을 열면이 옵션이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="c7db5f0753fc18eb30790c031e675e1a8c799a37" translate="yes" xml:space="preserve">
          <source>If this option is present then the file is opened for writing and each invocation of the channel's &lt;code&gt;write&lt;/code&gt; method first advances the position to the end of the file and then writes the requested data. Whether the advancement of the position and the writing of the data are done in a single atomic operation is system-dependent and therefore unspecified. This option may not be used in conjunction with the &lt;code&gt;READ&lt;/code&gt; or &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; options.</source>
          <target state="translated">이 옵션이 존재하면 파일을 쓰기 위해 열고 채널의 &lt;code&gt;write&lt;/code&gt; 메소드를 호출 할 때마다 위치가 파일의 끝으로 이동 한 다음 요청 된 데이터를 씁니다. 위치의 발전과 데이터 쓰기가 단일 원자 작업으로 수행되는지 여부는 시스템에 따라 다르므로 지정되지 않습니다. 이 옵션은 &lt;code&gt;READ&lt;/code&gt; 또는 &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; 옵션 과 함께 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="66c6dc5970de51d1f06f65735ef325c6138ef5c3" translate="yes" xml:space="preserve">
          <source>If this path has more than one element, and no root component, then this method is equivalent to evaluating the expression:</source>
          <target state="translated">이 경로에 두 개 이상의 요소가 있고 루트 구성 요소가없는 경우이 메서드는 식을 평가하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6fd3aa8f58cf9f02bfcdc80cec86a501a8a7247c" translate="yes" xml:space="preserve">
          <source>If this path has one or more elements, and no root component, then this method is equivalent to evaluating the expression:</source>
          <target state="translated">이 경로에 하나 이상의 요소가 있고 루트 구성 요소가없는 경우이 메소드는 표현식을 평가하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7bdccf19fbaba86c3c4bc96e529073319744a29f" translate="yes" xml:space="preserve">
          <source>If this path is already &lt;a href=&quot;#isAbsolute()&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; then this method simply returns this path. Otherwise, this method resolves the path in an implementation dependent manner, typically by resolving the path against a file system default directory. Depending on the implementation, this method may throw an I/O error if the file system is not accessible.</source>
          <target state="translated">이 경로가 이미 &lt;a href=&quot;#isAbsolute()&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt; 이면이 메서드는 단순히이 경로를 반환합니다. 그렇지 않으면이 메서드는 일반적으로 파일 시스템 기본 디렉터리에 대해 경로를 확인하여 구현에 따라 경로를 확인합니다. 구현에 따라이 메서드는 파일 시스템에 액세스 할 수없는 경우 I / O 오류를 발생시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30aeff65d6a5437b4b182c4f62c0198083fc0c78" translate="yes" xml:space="preserve">
          <source>If this path is already &lt;a href=&quot;path#isAbsolute--&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; then this method simply returns this path. Otherwise, this method resolves the path in an implementation dependent manner, typically by resolving the path against a file system default directory. Depending on the implementation, this method may throw an I/O error if the file system is not accessible.</source>
          <target state="translated">이 경로가 이미 &lt;a href=&quot;path#isAbsolute--&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt; 이면이 메소드는 단순히이 경로를 반환합니다. 그렇지 않은 경우,이 메소드는 일반적으로 파일 시스템 기본 디렉토리에 대한 경로를 분석하여 구현에 의존하는 방식으로 경로를 분석합니다. 구현에 따라이 방법은 파일 시스템에 액세스 할 수없는 경우 I / O 오류를 발생시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6892f69e3e1e770ec7e246fc902d15ecb6a87cd1" translate="yes" xml:space="preserve">
          <source>If this path is relative then its absolute path is first obtained, as if by invoking the &lt;a href=&quot;#toAbsolutePath()&quot;&gt;&lt;code&gt;toAbsolutePath&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 경로가 상대적이면 &lt;a href=&quot;#toAbsolutePath()&quot;&gt; &lt;code&gt;toAbsolutePath&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하는 것처럼 먼저 절대 경로를 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="2c90a56c401bf7a00c5a062ce8dc90f5fbdad860" translate="yes" xml:space="preserve">
          <source>If this path is relative then its absolute path is first obtained, as if by invoking the &lt;a href=&quot;path#toAbsolutePath--&quot;&gt;&lt;code&gt;toAbsolutePath&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 경로가 상대 경로 인 경우 &lt;a href=&quot;path#toAbsolutePath--&quot;&gt; &lt;code&gt;toAbsolutePath&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하는 것처럼 절대 경로가 먼저 확보됩니다 .</target>
        </trans-unit>
        <trans-unit id="d084b978d5c7338be74d967e3522b19da13a6657" translate="yes" xml:space="preserve">
          <source>If this path was created by converting a path string using the &lt;a href=&quot;filesystem#getPath(java.lang.String,java.lang.String...)&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method then the path string returned by this method may differ from the original String used to create the path.</source>
          <target state="translated">&lt;a href=&quot;filesystem#getPath(java.lang.String,java.lang.String...)&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 경로 문자열을 변환하여이 경로를 만든 경우이 메서드에서 반환 된 경로 문자열은 경로를 만드는 데 사용 된 원래 문자열과 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cee4ecf521bbf7c48468eb74ea9ed7b0eef09055" translate="yes" xml:space="preserve">
          <source>If this path was created by converting a path string using the &lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method then the path string returned by this method may differ from the original String used to create the path.</source>
          <target state="translated">&lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 경로 문자열을 변환하여이 경로를 작성한 경우이 메소드가 리턴 한 경로 문자열은 경로를 작성하는 데 사용 된 원래 문자열과 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3053881f193bb1bd318e35bb56a8a6d86a8eb15e" translate="yes" xml:space="preserve">
          <source>If this path was created by invoking the &lt;code&gt;File&lt;/code&gt;&lt;a href=&quot;../../io/file#toPath()&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method then there is no guarantee that the &lt;code&gt;
 File&lt;/code&gt; object returned by this method is &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equal&lt;/code&gt;&lt;/a&gt; to the original &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">이 경로가 &lt;code&gt;File&lt;/code&gt; &lt;a href=&quot;../../io/file#toPath()&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 생성 된 경우이 메서드에서 반환 된 &lt;code&gt; File&lt;/code&gt; 객체 가 원래 &lt;code&gt;File&lt;/code&gt; &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equal&lt;/code&gt; &lt;/a&gt; 보장이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="f9f3f316869769c8f30bbf29b48d50988b855cb9" translate="yes" xml:space="preserve">
          <source>If this path was created by invoking the &lt;code&gt;File&lt;/code&gt;&lt;a href=&quot;../../io/file#toPath--&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method then there is no guarantee that the &lt;code&gt;File&lt;/code&gt; object returned by this method is &lt;a href=&quot;path#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equal&lt;/code&gt;&lt;/a&gt; to the original &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; &lt;a href=&quot;../../io/file#toPath--&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여이 경로를 작성한 경우이 메소드가 리턴 한 &lt;code&gt;File&lt;/code&gt; 오브젝트 가 원래 &lt;code&gt;File&lt;/code&gt; &lt;a href=&quot;path#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equal&lt;/code&gt; &lt;/a&gt; 보장은 없습니다 .</target>
        </trans-unit>
        <trans-unit id="2380c1feeac1df8b717ffb6d8b0f464f5c1469c4" translate="yes" xml:space="preserve">
          <source>If this pattern does not match any subsequence of the input then the resulting stream has just one element, namely the input sequence in string form.</source>
          <target state="translated">이 패턴이 입력의 서브 시퀀스와 일치하지 않으면 결과 스트림에는 하나의 요소, 즉 문자열 형식의 입력 시퀀스가 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="6c129875659d42e8617f0f6fe9f8eeaed922599a" translate="yes" xml:space="preserve">
          <source>If this phaser is a member of a tiered set of phasers, then &lt;code&gt;onAdvance&lt;/code&gt; is invoked only for its root phaser on each advance.</source>
          <target state="translated">이 페이저가 계층화 된 페이저 세트 세트의 구성원 인 경우, 각 사전에 루트 페이저에 대해서만 &lt;code&gt;onAdvance&lt;/code&gt; 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="25e351e3788079c7fe12a6a6df200389fde78fe7" translate="yes" xml:space="preserve">
          <source>If this plug-in does not allow the rendering size to be set, an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; will be thrown.</source>
          <target state="translated">이 플러그인으로 렌더링 크기를 설정할 수 없으면 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e1302a6790f93ba102338f3d550fd48fb15554d7" translate="yes" xml:space="preserve">
          <source>If this property is &lt;code&gt;true&lt;/code&gt;, then any error output generated by subprocesses subsequently started by this object's &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method will be merged with the standard output, so that both can be read using the &lt;a href=&quot;process#getInputStream()&quot;&gt;&lt;code&gt;Process.getInputStream()&lt;/code&gt;&lt;/a&gt; method. This makes it easier to correlate error messages with the corresponding output. The initial value is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 속성이 &lt;code&gt;true&lt;/code&gt; 이면 이 객체의 &lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt; 메서드에 의해 이후에 시작된 하위 프로세스에서 생성 된 오류 출력이 표준 출력과 병합되어 둘 다 &lt;a href=&quot;process#getInputStream()&quot;&gt; &lt;code&gt;Process.getInputStream()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 읽을 수 있습니다 . 이렇게하면 오류 메시지를 해당 출력과 쉽게 연관시킬 수 있습니다. 초기 값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="59ba1fa4accaead615f724e3c7c028034f29cc41" translate="yes" xml:space="preserve">
          <source>If this property is &lt;code&gt;true&lt;/code&gt;, then any error output generated by subprocesses subsequently started by this object's &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method will be merged with the standard output, so that both can be read using the &lt;a href=&quot;process#getInputStream--&quot;&gt;&lt;code&gt;Process.getInputStream()&lt;/code&gt;&lt;/a&gt; method. This makes it easier to correlate error messages with the corresponding output. The initial value is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 프로퍼티이 &lt;code&gt;true&lt;/code&gt; 의 경우 ,이 객체의 &lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt; 메소드에 의해 이후에 시작된 서브 프로세스에 의해 생성 된 에러 출력 은 표준 출력과 병합되므로, &lt;a href=&quot;process#getInputStream--&quot;&gt; &lt;code&gt;Process.getInputStream()&lt;/code&gt; &lt;/a&gt; 메소드를 사용해 양쪽 모두를 읽을 수 있습니다 . 따라서 오류 메시지를 해당 출력과 쉽게 연관시킬 수 있습니다. 초기 값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ed9500168343cb56332d4fc88ac168ed027dc4ed" translate="yes" xml:space="preserve">
          <source>If this property is absent, the default size is defined by the mechanism.</source>
          <target state="translated">이 속성이 없으면 기본 크기는 메커니즘에 의해 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="06e5e28626bd6eda0b86511efffb808fc70159b4" translate="yes" xml:space="preserve">
          <source>If this property is absent, the default strength is &lt;code&gt;&quot;high,medium,low&quot;&lt;/code&gt;. The value of this constant is &lt;code&gt;&quot;javax.security.sasl.strength&quot;&lt;/code&gt;.</source>
          <target state="translated">이 속성이 없으면 기본 강도는 &lt;code&gt;&quot;high,medium,low&quot;&lt;/code&gt; 입니다. 이 상수의 값은 &lt;code&gt;&quot;javax.security.sasl.strength&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8cc3eda816a77b81a2af6ebc25e493966bcf228c" translate="yes" xml:space="preserve">
          <source>If this property is not specified, the default is determined by the provider.</source>
          <target state="translated">이 속성을 지정하지 않으면 공급자가 기본값을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="af876f8d384b15c054bb402554c1137e11adc57d" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;a href=&quot;#TRUE&quot;&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#FALSE&quot;&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/a&gt;, the packer will set the deflation hint accordingly in the output archive, and will not transmit the individual deflation hints of archive elements.</source>
          <target state="translated">이 속성이 &lt;a href=&quot;#TRUE&quot;&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#FALSE&quot;&gt; &lt;code&gt;FALSE&lt;/code&gt; 로&lt;/a&gt; 설정되면 패커는 출력 아카이브에서 그에 따라 디플레이션 힌트를 설정하고 아카이브 요소의 개별 디플레이션 힌트를 전송하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2f3346ddfaecc67d0b0d9ad2a653482ef13da088" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;a href=&quot;#TRUE&quot;&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/a&gt;, the packer will transmit all elements in their original order within the source archive.</source>
          <target state="translated">이 속성이 &lt;a href=&quot;#TRUE&quot;&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/a&gt; 로 설정 되면 패커는 소스 아카이브 내에서 원래 순서대로 모든 요소를 ​​전송합니다.</target>
        </trans-unit>
        <trans-unit id="bc49fbf015d08e3eea6e2ecba88f5740773ba2e8" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;a href=&quot;pack200.packer#TRUE&quot;&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pack200.packer#FALSE&quot;&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/a&gt;, the packer will set the deflation hint accordingly in the output archive, and will not transmit the individual deflation hints of archive elements.</source>
          <target state="translated">이 특성이 &lt;a href=&quot;pack200.packer#TRUE&quot;&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;pack200.packer#FALSE&quot;&gt; &lt;code&gt;FALSE&lt;/code&gt; 로&lt;/a&gt; 설정되면 패커는 출력 아카이브에서 이에 따라 수축 힌트를 설정하고 아카이브 요소의 개별 수축 힌트를 전송하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d03d5dc13a687142c5929c662ca49d36074a7ded" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;a href=&quot;pack200.packer#TRUE&quot;&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/a&gt;, the packer will transmit all elements in their original order within the source archive.</source>
          <target state="translated">이 특성이 &lt;a href=&quot;pack200.packer#TRUE&quot;&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/a&gt; 로 설정 되면 패커는 소스 아카이브 내에서 모든 요소를 ​​원래 순서대로 전송합니다.</target>
        </trans-unit>
        <trans-unit id="f4c9444c28ff4c5488966f754a768c212ad49602" translate="yes" xml:space="preserve">
          <source>If this property is set to a single decimal digit, the packer will use the indicated amount of effort in compressing the archive.</source>
          <target state="translated">이 속성이 10 진수 한 자리로 설정되면 패커는 아카이브를 압축하는 데 표시된 양의 노력을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="75f525ec3fc65cfee3f8f241c0b2d719029df8df" translate="yes" xml:space="preserve">
          <source>If this property is set to a single decimal digit, the packer will use the indicated amount of effort in compressing the archive. Level 1 may produce somewhat larger size and faster compression speed, while level 9 will take much longer but may produce better compression.</source>
          <target state="translated">이 특성이 10 진수 한 자릿수로 설정되면 패커는 표시된 압축 노력을 아카이브 압축에 사용합니다. 수준 1은 다소 큰 크기와 빠른 압축 속도를 생성 할 수 있지만 수준 9는 훨씬 오래 걸리지 만 더 나은 압축을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f2b33eebed320a2dc74cf999bd1d76647d1445d" translate="yes" xml:space="preserve">
          <source>If this property is set to the special string &lt;a href=&quot;#KEEP&quot;&gt;&lt;code&gt;KEEP&lt;/code&gt;&lt;/a&gt;, the packer transmits a separate modification time for each input element.</source>
          <target state="translated">이 속성이 특수 문자열 &lt;a href=&quot;#KEEP&quot;&gt; &lt;code&gt;KEEP&lt;/code&gt; &lt;/a&gt; 로 설정되면 패커는 각 입력 요소에 대해 별도의 수정 시간을 전송합니다.</target>
        </trans-unit>
        <trans-unit id="452a55781f99f11209ae42716d118ef02153d4b9" translate="yes" xml:space="preserve">
          <source>If this property is set to the special string &lt;a href=&quot;#KEEP&quot;&gt;&lt;code&gt;KEEP&lt;/code&gt;&lt;/a&gt;, the packer will attempt to determine an independent deflation hint for each available element of the input archive, and transmit this hint separately.</source>
          <target state="translated">이 속성이 특수 문자열 &lt;a href=&quot;#KEEP&quot;&gt; &lt;code&gt;KEEP&lt;/code&gt; &lt;/a&gt; 로 설정되면 패커는 입력 아카이브의 사용 가능한 각 요소에 대해 독립적 인 디플레이션 힌트를 결정하고이 힌트를 개별적으로 전송합니다.</target>
        </trans-unit>
        <trans-unit id="b87e5014cdc339bdbe3dfa1e45ca7593f03ce19b" translate="yes" xml:space="preserve">
          <source>If this property is set to the special string &lt;a href=&quot;#LATEST&quot;&gt;&lt;code&gt;LATEST&lt;/code&gt;&lt;/a&gt;, the packer will attempt to determine the latest modification time, among all the available entries in the original archive or the latest modification time of all the available entries in each segment.</source>
          <target state="translated">이 속성이 특수 문자열 &lt;a href=&quot;#LATEST&quot;&gt; &lt;code&gt;LATEST&lt;/code&gt; &lt;/a&gt; 로 설정되면 패커는 원본 아카이브에서 사용 가능한 모든 항목 중에서 최신 수정 시간을 결정하거나 각 세그먼트에서 사용 가능한 모든 항목의 최신 수정 시간을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="2072ad7aa3f491703c95e59ec856d9a51192711f" translate="yes" xml:space="preserve">
          <source>If this property is set to the special string &lt;a href=&quot;#LATEST&quot;&gt;&lt;code&gt;LATEST&lt;/code&gt;&lt;/a&gt;, the packer will attempt to determine the latest modification time, among all the available entries in the original archive or the latest modification time of all the available entries in each segment. This single value will be transmitted as part of the segment and applied to all the entries in each segment, &lt;a href=&quot;#SEGMENT_LIMIT&quot;&gt;&lt;code&gt;SEGMENT_LIMIT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 속성이 특수 문자열 &lt;a href=&quot;#LATEST&quot;&gt; &lt;code&gt;LATEST&lt;/code&gt; &lt;/a&gt; 로 설정되면 패커는 원본 아카이브에서 사용 가능한 모든 항목 중에서 최신 수정 시간을 결정하거나 각 세그먼트에서 사용 가능한 모든 항목의 최신 수정 시간을 결정합니다. 이 단일 값은 세그먼트의 일부로 전송되고 각 세그먼트 &lt;a href=&quot;#SEGMENT_LIMIT&quot;&gt; &lt;code&gt;SEGMENT_LIMIT&lt;/code&gt; 의&lt;/a&gt; 모든 항목에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="c26004343d49f4de62b441eeb8bc5f6df79863d9" translate="yes" xml:space="preserve">
          <source>If this property is set to the special string &lt;a href=&quot;pack200.packer#KEEP&quot;&gt;&lt;code&gt;KEEP&lt;/code&gt;&lt;/a&gt;, the packer transmits a separate modification time for each input element.</source>
          <target state="translated">이 속성이 특수 문자열 &lt;a href=&quot;pack200.packer#KEEP&quot;&gt; &lt;code&gt;KEEP&lt;/code&gt; &lt;/a&gt; 로 설정되면 패커는 각 입력 요소에 대해 별도의 수정 시간을 전송합니다.</target>
        </trans-unit>
        <trans-unit id="7183fc1cd09c99a8f2ef588139d7494408411a2c" translate="yes" xml:space="preserve">
          <source>If this property is set to the special string &lt;a href=&quot;pack200.packer#KEEP&quot;&gt;&lt;code&gt;KEEP&lt;/code&gt;&lt;/a&gt;, the packer will attempt to determine an independent deflation hint for each available element of the input archive, and transmit this hint separately.</source>
          <target state="translated">이 속성이 특수 문자열 &lt;a href=&quot;pack200.packer#KEEP&quot;&gt; &lt;code&gt;KEEP&lt;/code&gt; &lt;/a&gt; 로 설정되면 패커는 입력 아카이브의 사용 가능한 각 요소에 대해 독립적 인 디플레이션 힌트를 결정하고이 힌트를 별도로 전송합니다.</target>
        </trans-unit>
        <trans-unit id="6707f281e27f03d84f3a7a3c629cdd4096bad1c7" translate="yes" xml:space="preserve">
          <source>If this property is set to the special string &lt;a href=&quot;pack200.packer#LATEST&quot;&gt;&lt;code&gt;LATEST&lt;/code&gt;&lt;/a&gt;, the packer will attempt to determine the latest modification time, among all the available entries in the original archive or the latest modification time of all the available entries in each segment. This single value will be transmitted as part of the segment and applied to all the entries in each segment, &lt;a href=&quot;pack200.packer#SEGMENT_LIMIT&quot;&gt;&lt;code&gt;SEGMENT_LIMIT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 특성이 특수 문자열 &lt;a href=&quot;pack200.packer#LATEST&quot;&gt; &lt;code&gt;LATEST&lt;/code&gt; &lt;/a&gt; 로 설정되면 패커는 원본 아카이브에서 사용 가능한 모든 항목 중에서 최신 수정 시간 또는 각 세그먼트에서 사용 가능한 모든 항목의 최신 수정 시간을 판별하려고 시도합니다. 이 단일 값은 세그먼트의 일부로 전송되어 각 세그먼트 &lt;a href=&quot;pack200.packer#SEGMENT_LIMIT&quot;&gt; &lt;code&gt;SEGMENT_LIMIT&lt;/code&gt; 의&lt;/a&gt; 모든 항목에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="223580f4429eb5c6ae28663e207c1e32ba4d790d" translate="yes" xml:space="preserve">
          <source>If this provider does not support the creation of such file systems or if the provider does not recognize the file type of the given file then it throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. The default implementation of this method throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">이 프로 바이더가 그러한 파일 시스템의 작성을 지원하지 않는 경우, 또는 프로 바이더가 지정된 파일의 파일 형식을 인식하지 않는 경우 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 가 Throw 됩니다. 이 메소드의 기본 구현은 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="adebdb1d5e5973bafb9cf6145ce5e6e780e19399" translate="yes" xml:space="preserve">
          <source>If this queue fits in the specified array with room to spare (i.e., the array has more elements than this queue), the element in the array immediately following the end of the queue is set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 대기열이 여유 공간이있는 지정된 배열에 들어가면 (즉, 배열에이 대기열보다 많은 요소가있는 경우) 대기열 끝 바로 다음에있는 배열의 요소가 &lt;code&gt;null&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="1f1a1229bbbf922c0ae5c26b76ce2ee228aa9fbd" translate="yes" xml:space="preserve">
          <source>If this represents a change to the current selection, then each &lt;code&gt;ListSelectionListener&lt;/code&gt; is notified of the change.</source>
          <target state="translated">이것이 현재 선택에 대한 변경을 나타내는 경우 각 &lt;code&gt;ListSelectionListener&lt;/code&gt; 는 변경에 대한 알림을받습니다.</target>
        </trans-unit>
        <trans-unit id="086422cf5e0f973445bf41f69710c9d0ec575a99" translate="yes" xml:space="preserve">
          <source>If this represents a change to the current selection, then each &lt;code&gt;ListSelectionListener&lt;/code&gt; is notified of the change. Note that &lt;code&gt;index0&lt;/code&gt; doesn't have to be less than or equal to &lt;code&gt;index1&lt;/code&gt;.</source>
          <target state="translated">이것이 현재 선택에 대한 변경을 나타내는 경우 각 &lt;code&gt;ListSelectionListener&lt;/code&gt; 는 변경에 대한 알림을받습니다. 참고 &lt;code&gt;index0&lt;/code&gt; 이상이 없는 미만이거나 동일합니다 &lt;code&gt;index1&lt;/code&gt; 의 .</target>
        </trans-unit>
        <trans-unit id="7406de7532c88edbedb6d358c0eacc66deaaa5c2" translate="yes" xml:space="preserve">
          <source>If this represents a change, all registered &lt;code&gt;
 TreeSelectionListener&lt;/code&gt;s are notified.</source>
          <target state="translated">이것이 변경을 나타내는 경우 등록 된 모든 &lt;code&gt; TreeSelectionListener&lt;/code&gt; 에 알림이 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="bfd5799cc5838acdef0c8e596fa4859393e3555c" translate="yes" xml:space="preserve">
          <source>If this results in changing the sort order and sorting, the appropriate &lt;code&gt;RowSorterListener&lt;/code&gt; notification will be sent.</source>
          <target state="translated">이로 인해 정렬 순서 및 정렬이 변경되면 적절한 &lt;code&gt;RowSorterListener&lt;/code&gt; 알림이 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="5f4b03a158599630ccea9e6b39da6c0565b03058" translate="yes" xml:space="preserve">
          <source>If this rule is contained inside another rule (e.g. a style rule inside an @media block), this is the containing rule.</source>
          <target state="translated">이 규칙이 다른 규칙 (예 : @media 블록 내부의 스타일 규칙)에 포함 된 경우 포함 규칙입니다.</target>
        </trans-unit>
        <trans-unit id="256b2d7a5f85d34c423b6614e4d95714f32962ed" translate="yes" xml:space="preserve">
          <source>If this rule is contained inside another rule (e.g. a style rule inside an @media block), this is the containing rule. If this rule is not nested inside any other rules, this returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 규칙이 다른 규칙 (예 : @media 블록 내부의 스타일 규칙)에 포함 된 경우 포함 규칙입니다. 이 규칙이 다른 규칙 내에 중첩되지 않은 경우 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cf508307dff261e21d8f3b185fd8f0856bc1d5c1" translate="yes" xml:space="preserve">
          <source>If this scanner contains a resource that must be released, this scanner should be closed, either by calling its &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method, or by closing the returned stream. Closing the stream will close the underlying scanner. &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown if the scanner has been closed when this method is called, or if this scanner is closed during stream pipeline execution.</source>
          <target state="translated">이 스캐너에 해제해야하는 리소스가 포함 된 경우이 스캐너는 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하거나 반환 된 스트림을 닫아 닫아야합니다. 스트림을 닫으면 기본 스캐너가 닫힙니다. 이 메서드가 호출 될 때 스캐너가 닫혔거나 스트림 파이프 라인 실행 중에이 스캐너가 닫히면 &lt;code&gt;IllegalStateException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1cc39709616b45493aeca7f5e8ac69e5cb52f845" translate="yes" xml:space="preserve">
          <source>If this scanner has not yet been closed then if its underlying &lt;a href=&quot;../lang/readable&quot;&gt;readable&lt;/a&gt; also implements the &lt;a href=&quot;../io/closeable&quot;&gt;&lt;code&gt;Closeable&lt;/code&gt;&lt;/a&gt; interface then the readable's &lt;code&gt;close&lt;/code&gt; method will be invoked. If this scanner is already closed then invoking this method will have no effect.</source>
          <target state="translated">이 스캐너가 아직 닫히지 않은 경우, 기본 &lt;a href=&quot;../lang/readable&quot;&gt;판독 가능 항목&lt;/a&gt; 도 &lt;a href=&quot;../io/closeable&quot;&gt; &lt;code&gt;Closeable&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현하는 경우, 읽을 수있는 &lt;code&gt;close&lt;/code&gt; 메소드가 호출됩니다. 이 스캐너가 이미 닫혀 있으면이 방법을 호출해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="ff4b0c6c9059d67b56956170121bc63b9b075533" translate="yes" xml:space="preserve">
          <source>If this secondary loop has not been started with the &lt;a href=&quot;#enter()&quot;&gt;&lt;code&gt;enter()&lt;/code&gt;&lt;/a&gt; method, or this secondary loop has already finished with the &lt;a href=&quot;#exit()&quot;&gt;&lt;code&gt;exit()&lt;/code&gt;&lt;/a&gt; method, this method returns &lt;code&gt;
 false&lt;/code&gt;, otherwise &lt;code&gt;true&lt;/code&gt; is returned.</source>
          <target state="translated">이 보조 루프가 &lt;a href=&quot;#enter()&quot;&gt; &lt;code&gt;enter()&lt;/code&gt; &lt;/a&gt; 메서드 로 시작되지 않았거나이 보조 루프가 이미 &lt;a href=&quot;#exit()&quot;&gt; &lt;code&gt;exit()&lt;/code&gt; &lt;/a&gt; 메서드로 완료된 경우이 메서드는 &lt;code&gt; false&lt;/code&gt; 를 반환 하고 그렇지 않으면 &lt;code&gt;true&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d9680b4cd443282d4931c860767ed3e58a7bf480" translate="yes" xml:space="preserve">
          <source>If this segment was not mapped in read/write mode (&lt;a href=&quot;../../../../java.base/java/nio/channels/filechannel.mapmode#READ_WRITE&quot;&gt;&lt;code&gt;FileChannel.MapMode.READ_WRITE&lt;/code&gt;&lt;/a&gt;) then invoking this method may have no effect. In particular, the method has no effect for segments mapped in read-only or private mapping modes. This method may or may not have an effect for implementation-specific mapping modes.</source>
          <target state="translated">이 세그먼트가 읽기 / 쓰기 모드 ( &lt;a href=&quot;../../../../java.base/java/nio/channels/filechannel.mapmode#READ_WRITE&quot;&gt; &lt;code&gt;FileChannel.MapMode.READ_WRITE&lt;/code&gt; &lt;/a&gt; ) 에서 매핑되지 않은 경우이 메서드를 호출해도 효과가 없을 수 있습니다. 특히이 메서드는 읽기 전용 또는 개인용 매핑 모드로 매핑 된 세그먼트에는 영향을주지 않습니다. 이 메서드는 구현 별 매핑 모드에 영향을 줄 수도 있고 없을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a15e47874a4460c8788d8fab1f7c5d6bc3952dd3" translate="yes" xml:space="preserve">
          <source>If this selector is already closed then invoking this method has no effect.</source>
          <target state="translated">이 셀렉터가 이미 닫혀 있으면이 메소드를 호출해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="6405daa2c069d6b40d10358e7bb77371faa4a3a2" translate="yes" xml:space="preserve">
          <source>If this set fits in the specified array with room to spare (i.e., the array has more elements than this set), the element in the array immediately following the end of the set is set to &lt;code&gt;null&lt;/code&gt;. (This is useful in determining the length of this set</source>
          <target state="translated">이 세트가 여유 공간이있는 지정된 배열에 적합하면 (즉, 배열에이 세트보다 많은 요소가있는 경우) 세트의 끝 바로 다음에있는 배열의 요소는 &lt;code&gt;null&lt;/code&gt; 로 설정됩니다 . (이 세트의 길이를 결정할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="c80184b3688b04badc083e61b15fdf0059d3f2c1" translate="yes" xml:space="preserve">
          <source>If this set makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order.</source>
          <target state="translated">이 세트가, 반복자에 의해 요소가 돌려 주어지는 순서를 보증하는 경우,이 메소드는 요소를 같은 순서로 돌려 주어야합니다.</target>
        </trans-unit>
        <trans-unit id="4846a36a1b7750bc6366e3038108ee0a4a96ec79" translate="yes" xml:space="preserve">
          <source>If this signature engine has been initialized with parameters (by calling &lt;a href=&quot;#engineSetParameter(java.security.spec.AlgorithmParameterSpec)&quot;&gt;&lt;code&gt;engineSetParameter(AlgorithmParameterSpec)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#engineSetParameter(java.lang.String,java.lang.Object)&quot;&gt;&lt;code&gt;engineSetParameter(String, Object)&lt;/code&gt;&lt;/a&gt;) and the underlying signature implementation supports returning the parameters as &lt;code&gt;AlgorithmParameters&lt;/code&gt;, this method returns the same parameters. If the parameters were not set, this method may return a combination of default and randomly generated parameter values if the underlying signature implementation supports it and can successfully generate them. Otherwise, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">이 서명 엔진이 매개 변수 ( &lt;a href=&quot;#engineSetParameter(java.security.spec.AlgorithmParameterSpec)&quot;&gt; &lt;code&gt;engineSetParameter(AlgorithmParameterSpec)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#engineSetParameter(java.lang.String,java.lang.Object)&quot;&gt; &lt;code&gt;engineSetParameter(String, Object)&lt;/code&gt; &lt;/a&gt; 를 호출하여)로 초기화되고 기본 서명 구현이 매개 변수를 &lt;code&gt;AlgorithmParameters&lt;/code&gt; 로 반환하는 것을 지원하는 경우이 메서드는 동일한 매개 변수를 반환합니다. 매개 변수가 설정되지 않은 경우이 메소드는 기본 서명 구현이이를 지원하고 성공적으로 생성 할 수있는 경우 기본 및 무작위로 생성 된 매개 변수 값의 조합을 리턴 할 수 있습니다. 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e9d73276f82261367117e5a4c176a4aad69b8bb2" translate="yes" xml:space="preserve">
          <source>If this signature engine has been previously initialized with parameters (by calling the &lt;code&gt;engineSetParameter&lt;/code&gt; method), this method returns the same parameters. If this signature engine has not been initialized with parameters, this method may return a combination of default and randomly generated parameter values if the underlying signature implementation supports it and can successfully generate them. Otherwise, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">이 서명 엔진이 이전에 매개 변수로 초기화 된 경우 ( &lt;code&gt;engineSetParameter&lt;/code&gt; 메서드 호출 )이 메서드는 동일한 매개 변수를 반환합니다. 이 서명 엔진이 매개 변수로 초기화되지 않은 경우이 메소드는 기본 서명 구현이이를 지원하고 성공적으로 생성 할 수있는 경우 기본 및 무작위로 생성 된 매개 변수 값의 조합을 리턴 할 수 있습니다. 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="52065ebca5c204f2433000e93c0786e3f606ea17" translate="yes" xml:space="preserve">
          <source>If this signature has been initialized with parameters (by calling &lt;a href=&quot;#setParameter(java.security.spec.AlgorithmParameterSpec)&quot;&gt;&lt;code&gt;setParameter(AlgorithmParameterSpec)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#setParameter(java.lang.String,java.lang.Object)&quot;&gt;&lt;code&gt;setParameter(String, Object)&lt;/code&gt;&lt;/a&gt;) and the underlying signature implementation supports returning the parameters as &lt;code&gt;AlgorithmParameters&lt;/code&gt;, this method returns the same parameters. If the parameters were not set, this method may return a combination of default and randomly generated parameter values if the underlying signature implementation supports it and can successfully generate them. Otherwise, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">이 서명이 매개 변수로 초기화되고 ( &lt;a href=&quot;#setParameter(java.security.spec.AlgorithmParameterSpec)&quot;&gt; &lt;code&gt;setParameter(AlgorithmParameterSpec)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#setParameter(java.lang.String,java.lang.Object)&quot;&gt; &lt;code&gt;setParameter(String, Object)&lt;/code&gt; &lt;/a&gt; 를 호출 하여) 기본 서명 구현이 매개 변수를 &lt;code&gt;AlgorithmParameters&lt;/code&gt; 로 반환하는 것을 지원하는 경우이 메서드는 동일한 매개 변수를 반환합니다. 매개 변수가 설정되지 않은 경우이 메소드는 기본 서명 구현이이를 지원하고 성공적으로 생성 할 수있는 경우 기본 및 무작위로 생성 된 매개 변수 값의 조합을 리턴 할 수 있습니다. 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2650322772dd73c845098b0058d3bdc5f4dc3489" translate="yes" xml:space="preserve">
          <source>If this signature has been previously initialized with parameters (by calling the &lt;code&gt;setParameter&lt;/code&gt; method), this method returns the same parameters. If this signature has not been initialized with parameters, this method may return a combination of default and randomly generated parameter values if the underlying signature implementation supports it and can successfully generate them. Otherwise, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">이 서명이 이전에 매개 변수로 초기화 된 경우 ( &lt;code&gt;setParameter&lt;/code&gt; 메소드 를 호출하여 )이 메소드는 동일한 매개 변수를 리턴합니다. 이 서명이 매개 변수로 초기화되지 않은 경우,이 메소드는 기본 서명 구현이이를 지원하고 성공적으로 생성 할 수있는 경우 기본 및 무작위로 생성 된 매개 변수 값의 조합을 리턴 할 수 있습니다. 그렇지 않으면, &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="94d1259b873602b3b91dfea6d2c8e9566dd609a2" translate="yes" xml:space="preserve">
          <source>If this socket has an associated channel then the channel is closed as well.</source>
          <target state="translated">이 소켓에 연결된 채널이 있으면 채널도 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="e0939c800f0a2312fef33d7c5d500964dbec69f2" translate="yes" xml:space="preserve">
          <source>If this socket has an associated channel then the resulting input stream delegates all of its operations to the channel. If the channel is in non-blocking mode then the input stream's &lt;code&gt;read&lt;/code&gt; operations will throw an &lt;a href=&quot;../nio/channels/illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 소켓에 연결된 채널이 있으면 결과 입력 스트림이 모든 작업을 채널에 위임합니다. 채널이 비 블로킹 모드 인 경우 입력 스트림의 &lt;code&gt;read&lt;/code&gt; 작업에서 &lt;a href=&quot;../nio/channels/illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="d7ee7bd8c081806387ada503ad7b8c514e5dfac1" translate="yes" xml:space="preserve">
          <source>If this socket has an associated channel then the resulting output stream delegates all of its operations to the channel. If the channel is in non-blocking mode then the output stream's &lt;code&gt;write&lt;/code&gt; operations will throw an &lt;a href=&quot;../nio/channels/illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 소켓에 연결된 채널이 있으면 결과 출력 스트림은 모든 작업을 채널에 위임합니다. 채널이 비 블로킹 모드 인 경우 출력 스트림의 &lt;code&gt;write&lt;/code&gt; 작업에서 &lt;a href=&quot;../nio/channels/illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="de23d13d90953929962451b70b3b2849567e7157" translate="yes" xml:space="preserve">
          <source>If this socket is not bound then this method will first cause the socket to be bound to an address that is assigned automatically, as if invoking the &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method with a parameter of &lt;code&gt;null&lt;/code&gt;. If the remote destination to which the socket is connected does not exist, or is otherwise unreachable, and if an ICMP destination unreachable packet has been received for that address, then a subsequent call to send or receive may throw a PortUnreachableException. Note, there is no guarantee that the exception will be thrown.</source>
          <target state="translated">이 소켓이 바인드되지 않은 경우이 메소드는 먼저 매개 변수가 &lt;code&gt;null&lt;/code&gt; 인&lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 메소드를 호출하는 것처럼 소켓이 자동으로 할당 된 주소에 바인드되도록합니다 . 소켓이 연결된 원격 대상이 존재하지 않거나 다른 방법으로는 도달 할 수없고 해당 주소에 대해 ICMP 대상에 도달 할 수없는 패킷이 수신 된 경우, 송신 또는 수신을위한 후속 호출에서 PortUnreachableException이 발생할 수 있습니다. 예외가 발생한다는 보장은 없습니다.</target>
        </trans-unit>
        <trans-unit id="693a1800e76c5ac59beead537e01064ff0c4be28" translate="yes" xml:space="preserve">
          <source>If this spliterator can be partitioned, returns a Spliterator covering elements, that will, upon return from this method, not be covered by this Spliterator.</source>
          <target state="translated">이 스플리터를 분할 할 수있는 경우 요소를 포함하는 스플리터를 반환합니다.이 메서드는이 메서드에서 돌아 왔을 때이 스플리터에서 다루지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c735b11df0039877353011e334fc443d166561ca" translate="yes" xml:space="preserve">
          <source>If this stream has an associated channel then the channel is closed as well.</source>
          <target state="translated">이 스트림에 연결된 채널이 있으면 채널도 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="177e9350f1f0711c97d9bfd13687beb39a3a889a" translate="yes" xml:space="preserve">
          <source>If this stream is ordered then the longest prefix is a contiguous sequence of elements of this stream that match the given predicate. The first element of the sequence is the first element of this stream, and the element immediately following the last element of the sequence does not match the given predicate.</source>
          <target state="translated">이 스트림이 정렬 된 경우 가장 긴 접두사는 주어진 술어와 일치하는이 스트림 요소의 연속적인 시퀀스입니다. 시퀀스의 첫 번째 요소는이 스트림의 첫 번째 요소이며 시퀀스의 마지막 요소 바로 뒤의 요소는 주어진 술어와 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="356be1dc205c83dcf292598b3b75f01323500759" translate="yes" xml:space="preserve">
          <source>If this stream is unordered, and some (but not all) elements of this stream match the given predicate, then the behavior of this operation is nondeterministic; it is free to drop any subset of matching elements (which includes the empty set).</source>
          <target state="translated">이 스트림이 순서가없고이 스트림의 일부 (전부는 아님) 요소가 주어진 술어와 일치하는 경우이 작업의 동작은 비 결정적입니다. 빈 집합을 포함하는 일치하는 요소의 하위 집합을 자유롭게 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb02b482b547fe37636958df4ee195f2c0bb9c2c" translate="yes" xml:space="preserve">
          <source>If this stream is unordered, and some (but not all) elements of this stream match the given predicate, then the behavior of this operation is nondeterministic; it is free to take any subset of matching elements (which includes the empty set).</source>
          <target state="translated">이 스트림이 순서가없고이 스트림의 일부 (전부는 아님) 요소가 주어진 술어와 일치하는 경우이 작업의 동작은 비 결정적입니다. 빈 집합을 포함하여 일치하는 요소의 하위 집합을 자유롭게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92d68b98e0019a083095ba0519f2ddd9fb22048a" translate="yes" xml:space="preserve">
          <source>If this stream was created from an enumeration, all remaining elements are requested from the enumeration and closed before the &lt;code&gt;close&lt;/code&gt; method returns.</source>
          <target state="translated">이 스트림이 열거에서 작성된 경우, 나머지 모든 요소는 열거에서 요청되고 &lt;code&gt;close&lt;/code&gt; 메소드가 리턴 되기 전에 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="b28d05117321f34852c21f8fd9e3fbad28413d0c" translate="yes" xml:space="preserve">
          <source>If this string is empty or count is zero then the empty string is returned.</source>
          <target state="translated">이 문자열이 비어 있거나 개수가 0이면 빈 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a5e57ee1bfeef67728b969ebaf9c8d22fa999a80" translate="yes" xml:space="preserve">
          <source>If this style sheet comes from an &lt;code&gt;@import&lt;/code&gt; rule, the &lt;code&gt;ownerRule&lt;/code&gt; attribute will contain the &lt;code&gt;CSSImportRule&lt;/code&gt;.</source>
          <target state="translated">이 스타일 시트가 &lt;code&gt;@import&lt;/code&gt; 규칙에서 &lt;code&gt;ownerRule&lt;/code&gt; 경우 ownerRule 속성 에 CSSImportRule 이 포함 &lt;code&gt;CSSImportRule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d614bc8befea70c30b08067d791da76c3b27f3b1" translate="yes" xml:space="preserve">
          <source>If this style sheet comes from an &lt;code&gt;@import&lt;/code&gt; rule, the &lt;code&gt;ownerRule&lt;/code&gt; attribute will contain the &lt;code&gt;CSSImportRule&lt;/code&gt;. In that case, the &lt;code&gt;ownerNode&lt;/code&gt; attribute in the &lt;code&gt;StyleSheet&lt;/code&gt; interface will be &lt;code&gt;null&lt;/code&gt;. If the style sheet comes from an element or a processing instruction, the &lt;code&gt;ownerRule&lt;/code&gt; attribute will be &lt;code&gt;null&lt;/code&gt; and the &lt;code&gt;ownerNode&lt;/code&gt; attribute will contain the &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">이 스타일 시트가 &lt;code&gt;@import&lt;/code&gt; 규칙에서 &lt;code&gt;ownerRule&lt;/code&gt; 경우 ownerRule 속성 에 CSSImportRule 이 포함 &lt;code&gt;CSSImportRule&lt;/code&gt; . 이 경우 &lt;code&gt;StyleSheet&lt;/code&gt; 인터페이스 의 &lt;code&gt;ownerNode&lt;/code&gt; 속성은 &lt;code&gt;null&lt;/code&gt; 이 됩니다. 스타일 시트가 요소 또는 처리 명령에서 제공되는 경우 &lt;code&gt;ownerRule&lt;/code&gt; 속성은 &lt;code&gt;null&lt;/code&gt; 이고 &lt;code&gt;ownerNode&lt;/code&gt; 속성에는 &lt;code&gt;Node&lt;/code&gt; 가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="0c4965fafc2bbdd4fa179ac33145faa345f5d3a6" translate="yes" xml:space="preserve">
          <source>If this taglet supports &lt;a href=&quot;#isInlineTag()&quot;&gt;&lt;code&gt;inline&lt;/code&gt;&lt;/a&gt; tags, it will be called once per instance of the inline tag, each time with a singleton list. If this taglet supports &lt;a href=&quot;#isBlockTag()&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; tags, it will be called once for each comment containing instances of block tags, with a list of all the instances of the block tag in that comment.</source>
          <target state="translated">이 태그 렛이 &lt;a href=&quot;#isInlineTag()&quot;&gt; &lt;code&gt;inline&lt;/code&gt; &lt;/a&gt; 태그를 지원하는 경우 , 단일 목록과 함께 매번 인라인 태그의 인스턴스 당 한 번씩 호출됩니다. 이 태그 렛이 &lt;a href=&quot;#isBlockTag()&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt; 태그를 지원 하는 경우 블록 태그의 인스턴스를 포함하는 각 주석에 대해 해당 주석에있는 블록 태그의 모든 인스턴스 목록과 함께 한 번씩 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0ba26efbe973bccaefedf139be56e1371adf12c3" translate="yes" xml:space="preserve">
          <source>If this task does not have a completer, invokes &lt;a href=&quot;forkjointask#quietlyComplete()&quot;&gt;&lt;code&gt;ForkJoinTask.quietlyComplete()&lt;/code&gt;&lt;/a&gt; and returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 작업에 완료자가 없으면 &lt;a href=&quot;forkjointask#quietlyComplete()&quot;&gt; &lt;code&gt;ForkJoinTask.quietlyComplete()&lt;/code&gt; &lt;/a&gt; 호출 하고 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8ad26ee087327b18521b9d6c34bd0f93f8aa1174" translate="yes" xml:space="preserve">
          <source>If this task does not have a completer, invokes &lt;a href=&quot;forkjointask#quietlyComplete()&quot;&gt;&lt;code&gt;ForkJoinTask.quietlyComplete()&lt;/code&gt;&lt;/a&gt; and returns &lt;code&gt;null&lt;/code&gt;. Or, if the completer's pending count is non-zero, decrements that pending count and returns &lt;code&gt;null&lt;/code&gt;. Otherwise, returns the completer. This method can be used as part of a completion traversal loop for homogeneous task hierarchies:</source>
          <target state="translated">이 작업에 완료자가 없으면 &lt;a href=&quot;forkjointask#quietlyComplete()&quot;&gt; &lt;code&gt;ForkJoinTask.quietlyComplete()&lt;/code&gt; &lt;/a&gt; 호출 하고 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 또는 완료 자의 보류중인 개수가 0이 아니면 보류중인 개수를 줄이고 &lt;code&gt;null&lt;/code&gt; 을 반환합니다. . 그렇지 않으면 완료자를 반환합니다. 이 메서드는 동종 작업 계층에 대한 완료 순회 루프의 일부로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d83610308e8ed4feab83660c34b5cc784dbd534" translate="yes" xml:space="preserve">
          <source>If this task does not have a completer, invokes &lt;a href=&quot;forkjointask#quietlyComplete--&quot;&gt;&lt;code&gt;ForkJoinTask.quietlyComplete()&lt;/code&gt;&lt;/a&gt; and returns &lt;code&gt;null&lt;/code&gt;. Or, if the completer's pending count is non-zero, decrements that pending count and returns &lt;code&gt;null&lt;/code&gt;. Otherwise, returns the completer. This method can be used as part of a completion traversal loop for homogeneous task hierarchies:</source>
          <target state="translated">이 작업에 완료자가 없으면 &lt;a href=&quot;forkjointask#quietlyComplete--&quot;&gt; &lt;code&gt;ForkJoinTask.quietlyComplete()&lt;/code&gt; &lt;/a&gt; 호출 하고 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 또는 완료 자의 보류 카운트가 0이 아닌 경우 해당 카운트를 감소시키고 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 그렇지 않으면 완료자를 반환합니다. 이 방법은 동종 작업 계층에 대한 완료 순회 루프의 일부로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd12cf42083780739c6a825c0d630d6b5ba9cfcf" translate="yes" xml:space="preserve">
          <source>If this task has not completed, attempts to process at most the given number of other unprocessed tasks for which this task is on the completion path, if any are known to exist.</source>
          <target state="translated">이 태스크가 완료되지 않은 경우, 존재하는 것으로 알려진 경우이 태스크가 완료 경로에있는 지정된 수의 다른 처리되지 않은 태스크를 처리하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="531b04b1809bf496472c1400438f923297751d99" translate="yes" xml:space="preserve">
          <source>If this task's pending count is zero, returns this task; otherwise decrements its pending count and returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 작업의 보류 횟수가 0이면이 작업을 반환합니다. 그렇지 않으면 보류 횟수를 줄이고 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a92717ec23f413eb8c0291d87e494517a42fdcb0" translate="yes" xml:space="preserve">
          <source>If this task's pending count is zero, returns this task; otherwise decrements its pending count and returns &lt;code&gt;null&lt;/code&gt;. This method is designed to be used with &lt;a href=&quot;#nextComplete()&quot;&gt;&lt;code&gt;nextComplete()&lt;/code&gt;&lt;/a&gt; in completion traversal loops.</source>
          <target state="translated">이 작업의 보류 횟수가 0이면이 작업을 반환합니다. 그렇지 않으면 보류 횟수를 줄이고 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 이 메서드는 완료 순회 루프에서 &lt;a href=&quot;#nextComplete()&quot;&gt; &lt;code&gt;nextComplete()&lt;/code&gt; &lt;/a&gt; 와 함께 사용하도록 설계되었습니다 .</target>
        </trans-unit>
        <trans-unit id="062c4f45b9bcf8888c66111d88b0a6efdd255e64" translate="yes" xml:space="preserve">
          <source>If this task's pending count is zero, returns this task; otherwise decrements its pending count and returns &lt;code&gt;null&lt;/code&gt;. This method is designed to be used with &lt;a href=&quot;countedcompleter#nextComplete--&quot;&gt;&lt;code&gt;nextComplete()&lt;/code&gt;&lt;/a&gt; in completion traversal loops.</source>
          <target state="translated">이 작업의 보류 카운트가 0이면이 작업을 반환합니다. 그렇지 않으면 보류중인 카운트를 줄이고 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 이 메소드는 완료 순회 루프에서 &lt;a href=&quot;countedcompleter#nextComplete--&quot;&gt; &lt;code&gt;nextComplete()&lt;/code&gt; &lt;/a&gt; 과 함께 사용하도록 설계되었습니다 .</target>
        </trans-unit>
        <trans-unit id="e9668040405953ec55c4fc6dc1d0198c7aa37ad9" translate="yes" xml:space="preserve">
          <source>If this the stream was an http connection, redirects will be followed and the resulting URL will be set as the &lt;code&gt;Document.StreamDescriptionProperty&lt;/code&gt; so that relative URL's can be properly resolved.</source>
          <target state="translated">이 스트림이 http 연결 인 경우 리디렉션을 따르고 결과 URL이 &lt;code&gt;Document.StreamDescriptionProperty&lt;/code&gt; 로 설정됩니다. 상대 URL이 제대로 해석 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="37210489834346fdfa0ada349e6c4f85f2e096b6" translate="yes" xml:space="preserve">
          <source>If this thread group has a parent thread group, the &lt;code&gt;uncaughtException&lt;/code&gt; method of that parent is called with the same two arguments.</source>
          <target state="translated">이 스레드 그룹에 상위 스레드 그룹이 있으면 해당 상위 의 &lt;code&gt;uncaughtException&lt;/code&gt; 메소드가 동일한 두 인수로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="15f32ba0c7cf17c7430d343be040346b3a0a7775" translate="yes" xml:space="preserve">
          <source>If this thread is blocked in a &lt;a href=&quot;../nio/channels/selector&quot;&gt;&lt;code&gt;Selector&lt;/code&gt;&lt;/a&gt; then the thread's interrupt status will be set and it will return immediately from the selection operation, possibly with a non-zero value, just as if the selector's &lt;a href=&quot;../nio/channels/selector#wakeup()&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method were invoked.</source>
          <target state="translated">이 스레드가 &lt;a href=&quot;../nio/channels/selector&quot;&gt; &lt;code&gt;Selector&lt;/code&gt; &lt;/a&gt; 에서 차단 되면 스레드의 인터럽트 상태가 설정되고 선택기의 &lt;a href=&quot;../nio/channels/selector#wakeup()&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; 메서드가 호출 된 것처럼 0이 아닌 값으로 선택 작업에서 즉시 반환 됩니다.</target>
        </trans-unit>
        <trans-unit id="136205f825397c64ddc73f65dffe39be30ff4a5a" translate="yes" xml:space="preserve">
          <source>If this thread is blocked in a &lt;a href=&quot;../nio/channels/selector&quot;&gt;&lt;code&gt;Selector&lt;/code&gt;&lt;/a&gt; then the thread's interrupt status will be set and it will return immediately from the selection operation, possibly with a non-zero value, just as if the selector's &lt;a href=&quot;../nio/channels/selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method were invoked.</source>
          <target state="translated">이 스레드가 &lt;a href=&quot;../nio/channels/selector&quot;&gt; &lt;code&gt;Selector&lt;/code&gt; &lt;/a&gt; 에서 차단 되면 스레드의 인터럽트 상태가 설정되고 선택기의 &lt;a href=&quot;../nio/channels/selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; 메소드가 호출 된 것처럼 0이 아닌 값으로 선택 조작에서 즉시 리턴 됩니다.</target>
        </trans-unit>
        <trans-unit id="de3aec7f5e3ea72da2979ae96ca609512aa7e1ac" translate="yes" xml:space="preserve">
          <source>If this thread is blocked in an I/O operation upon an &lt;a href=&quot;../nio/channels/interruptiblechannel&quot;&gt;&lt;code&gt;InterruptibleChannel&lt;/code&gt;&lt;/a&gt; then the channel will be closed, the thread's interrupt status will be set, and the thread will receive a &lt;a href=&quot;../nio/channels/closedbyinterruptexception&quot;&gt;&lt;code&gt;ClosedByInterruptException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 스레드가 &lt;a href=&quot;../nio/channels/interruptiblechannel&quot;&gt; &lt;code&gt;InterruptibleChannel&lt;/code&gt; &lt;/a&gt; 에 대한 I / O 조작에서 차단 되면 채널이 닫히고 스레드의 인터럽트 상태가 설정되며 스레드는 &lt;a href=&quot;../nio/channels/closedbyinterruptexception&quot;&gt; &lt;code&gt;ClosedByInterruptException&lt;/code&gt; &lt;/a&gt; 을 수신합니다 .</target>
        </trans-unit>
        <trans-unit id="0d0f71fefdd2a3553023bcb248dd5148bfb96254" translate="yes" xml:space="preserve">
          <source>If this thread is blocked in an invocation of the &lt;a href=&quot;object#wait()&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;object#wait(long)&quot;&gt;&lt;code&gt;wait(long)&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;object#wait(long,int)&quot;&gt;&lt;code&gt;wait(long, int)&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; class, or of the &lt;a href=&quot;#join()&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#join(long)&quot;&gt;&lt;code&gt;join(long)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#join(long,int)&quot;&gt;&lt;code&gt;join(long, int)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#sleep(long)&quot;&gt;&lt;code&gt;sleep(long)&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#sleep(long,int)&quot;&gt;&lt;code&gt;sleep(long, int)&lt;/code&gt;&lt;/a&gt;, methods of this class, then its interrupt status will be cleared and it will receive an &lt;a href=&quot;interruptedexception&quot;&gt;&lt;code&gt;InterruptedException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 스레드가 &lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 클래스 의 &lt;a href=&quot;object#wait()&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;object#wait(long)&quot;&gt; &lt;code&gt;wait(long)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;object#wait(long,int)&quot;&gt; &lt;code&gt;wait(long, int)&lt;/code&gt; &lt;/a&gt; 메서드 또는 &lt;a href=&quot;#join()&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#join(long)&quot;&gt; &lt;code&gt;join(long)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#join(long,int)&quot;&gt; &lt;code&gt;join(long, int)&lt;/code&gt; &lt;/a&gt; 호출에서 차단 된 경우 , &lt;a href=&quot;#sleep(long)&quot;&gt; &lt;code&gt;sleep(long)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#sleep(long,int)&quot;&gt; &lt;code&gt;sleep(long, int)&lt;/code&gt; &lt;/a&gt; ,이 클래스의 메서드를 사용하면 인터럽트 상태가 지워지고 &lt;a href=&quot;interruptedexception&quot;&gt; &lt;code&gt;InterruptedException&lt;/code&gt; &lt;/a&gt; 을 수신합니다 .</target>
        </trans-unit>
        <trans-unit id="4f7e022d7d703785a470b724182da4d83682bbf3" translate="yes" xml:space="preserve">
          <source>If this thread is blocked in an invocation of the &lt;a href=&quot;object#wait--&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;object#wait-long-&quot;&gt;&lt;code&gt;wait(long)&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;object#wait-long-int-&quot;&gt;&lt;code&gt;wait(long, int)&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; class, or of the &lt;a href=&quot;thread#join--&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;thread#join-long-&quot;&gt;&lt;code&gt;join(long)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;thread#join-long-int-&quot;&gt;&lt;code&gt;join(long, int)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;thread#sleep-long-&quot;&gt;&lt;code&gt;sleep(long)&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;thread#sleep-long-int-&quot;&gt;&lt;code&gt;sleep(long, int)&lt;/code&gt;&lt;/a&gt;, methods of this class, then its interrupt status will be cleared and it will receive an &lt;a href=&quot;interruptedexception&quot;&gt;&lt;code&gt;InterruptedException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 스레드가 &lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 클래스 또는 &lt;a href=&quot;thread#join--&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;thread#join-long-&quot;&gt; &lt;code&gt;join(long)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;thread#join-long-int-&quot;&gt; &lt;code&gt;join(long, int)&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;object#wait--&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;object#wait-long-&quot;&gt; &lt;code&gt;wait(long)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;object#wait-long-int-&quot;&gt; &lt;code&gt;wait(long, int)&lt;/code&gt; &lt;/a&gt; 메소드 호출에서 차단 된 경우 이 클래스의 , &lt;a href=&quot;thread#sleep-long-&quot;&gt; &lt;code&gt;sleep(long)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;thread#sleep-long-int-&quot;&gt; &lt;code&gt;sleep(long, int)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하면 인터럽트 상태가 지워지고 &lt;a href=&quot;interruptedexception&quot;&gt; &lt;code&gt;InterruptedException&lt;/code&gt; &lt;/a&gt; 이 수신됩니다 .</target>
        </trans-unit>
        <trans-unit id="7dee04fe29a564110a8edc14c833afd51b71a8fd" translate="yes" xml:space="preserve">
          <source>If this thread is different from the current thread (that is, the current thread is trying to stop a thread other than itself), the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method (with a &lt;code&gt;RuntimePermission(&quot;stopThread&quot;)&lt;/code&gt; argument) is called in addition. Again, this may result in throwing a &lt;code&gt;SecurityException&lt;/code&gt; (in the current thread).</source>
          <target state="translated">이 스레드가 현재 스레드와 다른 경우 (즉, 현재 스레드가 자신 이외의 스레드를 중지하려고 시도하는 경우) Security Manager의 &lt;code&gt;checkPermission&lt;/code&gt; 메소드 ( &lt;code&gt;RuntimePermission(&quot;stopThread&quot;)&lt;/code&gt; 인수 사용)가 추가로 호출됩니다. 다시 말하지만, 현재 스레드에서 &lt;code&gt;SecurityException&lt;/code&gt; 이 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6eb1caff0d211bf12bda29597feac8eecc8df201" translate="yes" xml:space="preserve">
          <source>If this thread was constructed using a separate &lt;code&gt;Runnable&lt;/code&gt; run object, then that &lt;code&gt;Runnable&lt;/code&gt; object's &lt;code&gt;run&lt;/code&gt; method is called; otherwise, this method does nothing and returns.</source>
          <target state="translated">이 스레드가 별도의 &lt;code&gt;Runnable&lt;/code&gt; 실행 객체를 사용하여 구성된 경우 해당 &lt;code&gt;Runnable&lt;/code&gt; 객체의 &lt;code&gt;run&lt;/code&gt; 메소드가 호출됩니다. 그렇지 않으면이 메소드는 아무 것도 수행하지 않고 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="32c3e37dfdbc9761a0862e9cdb4601e86792e3e1" translate="yes" xml:space="preserve">
          <source>If this toggle button is a member of the &lt;a href=&quot;buttongroup&quot;&gt;&lt;code&gt;ButtonGroup&lt;/code&gt;&lt;/a&gt; which has another toggle button which is selected and can be the focus owner, and the focus cause argument denotes window activation or focus traversal action of any direction the result of the method execution is the same as calling &lt;a href=&quot;../../java/awt/component#requestFocus(java.awt.event.FocusEvent.Cause)&quot;&gt;&lt;code&gt;Component.requestFocus(FocusEvent.Cause)&lt;/code&gt;&lt;/a&gt; on the toggle button selected in the group.</source>
          <target state="translated">이 토글 버튼이 다른 토글 버튼이 선택되어 있고 포커스 소유자가 될 수있는 &lt;a href=&quot;buttongroup&quot;&gt; &lt;code&gt;ButtonGroup&lt;/code&gt; &lt;/a&gt; 의 구성원이고 포커스 원인 인수가 모든 방향의 창 활성화 또는 포커스 탐색 동작을 나타내는 경우 메서드 실행의 결과는 다음과 같습니다. 그룹에서 선택한 토글 버튼에서 &lt;a href=&quot;../../java/awt/component#requestFocus(java.awt.event.FocusEvent.Cause)&quot;&gt; &lt;code&gt;Component.requestFocus(FocusEvent.Cause)&lt;/code&gt; &lt;/a&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="9767edce27460f57eec16d2a2cd36a03faa259a5" translate="yes" xml:space="preserve">
          <source>If this toggle button is a member of the &lt;a href=&quot;buttongroup&quot;&gt;&lt;code&gt;ButtonGroup&lt;/code&gt;&lt;/a&gt; which has another toggle button which is selected and can be the focus owner, and the focus cause argument denotes window activation or focus traversal action of any direction the result of the method execution is the same as calling &lt;a href=&quot;../../java/awt/component#requestFocus(java.awt.event.FocusEvent.Cause)&quot;&gt;&lt;code&gt;Component.requestFocus(FocusEvent.Cause)&lt;/code&gt;&lt;/a&gt; on the toggle button selected in the group. In all other cases the result of the method is the same as calling &lt;a href=&quot;../../java/awt/component#requestFocus(java.awt.event.FocusEvent.Cause)&quot;&gt;&lt;code&gt;Component.requestFocus(FocusEvent.Cause)&lt;/code&gt;&lt;/a&gt; on this toggle button.</source>
          <target state="translated">이 토글 버튼이 다른 토글 버튼이 선택되어 있고 포커스 소유자가 될 수있는 &lt;a href=&quot;buttongroup&quot;&gt; &lt;code&gt;ButtonGroup&lt;/code&gt; &lt;/a&gt; 의 구성원이고 포커스 원인 인수가 모든 방향의 창 활성화 또는 포커스 탐색 동작을 나타내는 경우 메서드 실행의 결과는 다음과 같습니다. 그룹에서 선택한 토글 버튼에서 &lt;a href=&quot;../../java/awt/component#requestFocus(java.awt.event.FocusEvent.Cause)&quot;&gt; &lt;code&gt;Component.requestFocus(FocusEvent.Cause)&lt;/code&gt; &lt;/a&gt; 를 호출 합니다. 다른 모든 경우 메서드의 결과는 이 토글 버튼에서 &lt;a href=&quot;../../java/awt/component#requestFocus(java.awt.event.FocusEvent.Cause)&quot;&gt; &lt;code&gt;Component.requestFocus(FocusEvent.Cause)&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="7c336255926d4e5bbbcaf58e4863d5c2d8eea790" translate="yes" xml:space="preserve">
          <source>If this toggle button is a member of the &lt;a href=&quot;buttongroup&quot;&gt;&lt;code&gt;ButtonGroup&lt;/code&gt;&lt;/a&gt; which has another toggle button which is selected and can be the focus owner, and the focus cause argument denotes window activation or focus traversal action of any direction the result of the method execution is the same as calling &lt;a href=&quot;../../java/awt/component#requestFocusInWindow(java.awt.event.FocusEvent.Cause)&quot;&gt;&lt;code&gt;Component.requestFocusInWindow(FocusEvent.Cause)&lt;/code&gt;&lt;/a&gt; on the toggle button selected in the group.</source>
          <target state="translated">이 토글 버튼이 다른 토글 버튼이 선택되어 있고 포커스 소유자가 될 수있는 &lt;a href=&quot;buttongroup&quot;&gt; &lt;code&gt;ButtonGroup&lt;/code&gt; &lt;/a&gt; 의 구성원이고 포커스 원인 인수가 모든 방향의 창 활성화 또는 포커스 탐색 동작을 나타내는 경우 메서드 실행의 결과는 다음과 같습니다. 그룹에서 선택한 토글 버튼에서 &lt;a href=&quot;../../java/awt/component#requestFocusInWindow(java.awt.event.FocusEvent.Cause)&quot;&gt; &lt;code&gt;Component.requestFocusInWindow(FocusEvent.Cause)&lt;/code&gt; &lt;/a&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="bd56d40b18444ca2e5dc9d837c5bd6035097d000" translate="yes" xml:space="preserve">
          <source>If this toggle button is a member of the &lt;a href=&quot;buttongroup&quot;&gt;&lt;code&gt;ButtonGroup&lt;/code&gt;&lt;/a&gt; which has another toggle button which is selected and can be the focus owner, and the focus cause argument denotes window activation or focus traversal action of any direction the result of the method execution is the same as calling &lt;a href=&quot;../../java/awt/component#requestFocusInWindow(java.awt.event.FocusEvent.Cause)&quot;&gt;&lt;code&gt;Component.requestFocusInWindow(FocusEvent.Cause)&lt;/code&gt;&lt;/a&gt; on the toggle button selected in the group. In all other cases the result of the method is the same as calling &lt;a href=&quot;../../java/awt/component#requestFocusInWindow(java.awt.event.FocusEvent.Cause)&quot;&gt;&lt;code&gt;Component.requestFocusInWindow(FocusEvent.Cause)&lt;/code&gt;&lt;/a&gt; on this toggle button.</source>
          <target state="translated">이 토글 버튼이 다른 토글 버튼이 선택되어 있고 포커스 소유자가 될 수있는 &lt;a href=&quot;buttongroup&quot;&gt; &lt;code&gt;ButtonGroup&lt;/code&gt; &lt;/a&gt; 의 구성원이고 포커스 원인 인수가 모든 방향의 창 활성화 또는 포커스 탐색 동작을 나타내는 경우 메서드 실행의 결과는 다음과 같습니다. 그룹에서 선택한 토글 버튼에서 &lt;a href=&quot;../../java/awt/component#requestFocusInWindow(java.awt.event.FocusEvent.Cause)&quot;&gt; &lt;code&gt;Component.requestFocusInWindow(FocusEvent.Cause)&lt;/code&gt; &lt;/a&gt; 를 호출 합니다. 다른 모든 경우 메서드의 결과는 이 토글 버튼에서 &lt;a href=&quot;../../java/awt/component#requestFocusInWindow(java.awt.event.FocusEvent.Cause)&quot;&gt; &lt;code&gt;Component.requestFocusInWindow(FocusEvent.Cause)&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="37767eb6921e26f533f59c9be98a081367dcd47e" translate="yes" xml:space="preserve">
          <source>If this transform maps all coordinates onto a point or a line then it will not have an inverse, since coordinates that do not lie on the destination point or line will not have an inverse mapping. The &lt;code&gt;getDeterminant&lt;/code&gt; method can be used to determine if this transform has no inverse, in which case an exception will be thrown if the &lt;code&gt;createInverse&lt;/code&gt; method is called.</source>
          <target state="translated">이 변환이 모든 좌표를 점이나 선에 매핑하면 대상 점이나 선에 있지 않은 좌표에는 역 매핑이 없으므로 역이 없습니다. &lt;code&gt;getDeterminant&lt;/code&gt; 인 방법이 경우는 예외가 발생 될 경우에는 역이없는 변화를 결정하는데 사용될 수있다 &lt;code&gt;createInverse&lt;/code&gt; 의 메소드가 호출된다.</target>
        </trans-unit>
        <trans-unit id="2851f91604666b2de18be820f1b354071d947d41" translate="yes" xml:space="preserve">
          <source>If this transform maps all coordinates onto a point or a line then it will not have an inverse, since coordinates that do not lie on the destination point or line will not have an inverse mapping. The &lt;code&gt;getDeterminant&lt;/code&gt; method can be used to determine if this transform has no inverse, in which case an exception will be thrown if the &lt;code&gt;invert&lt;/code&gt; method is called.</source>
          <target state="translated">이 변환이 모든 좌표를 점이나 선에 매핑하면 대상 점이나 선에 있지 않은 좌표에는 역 매핑이 없으므로 역이 없습니다. &lt;code&gt;getDeterminant&lt;/code&gt; 인 방법이 경우는 예외가 발생 될 경우에는 역이없는 경우, 변환을 결정하는데 이용 될 수있는 &lt;code&gt;invert&lt;/code&gt; 메소드가 호출된다.</target>
        </trans-unit>
        <trans-unit id="59689268fc97705b98f90aa745a03383fca62775" translate="yes" xml:space="preserve">
          <source>If this transform represents a uniform scale, as indicated by the &lt;code&gt;getType&lt;/code&gt; method then the determinant also represents the square of the uniform scale factor by which all of the points are expanded from or contracted towards the origin. If this transform represents a non-uniform scale or more general transform then the determinant is not likely to represent a value useful for any purpose other than determining if inverse transforms are possible.</source>
          <target state="translated">이 변환이 &lt;code&gt;getType&lt;/code&gt; 메서드에 표시된대로 균일 한 배율을 나타내는 경우 결정자는 모든 점이 원점에서 확장되거나 축소되는 균일 배율 인수의 제곱을 나타냅니다. 이 변환이 비 균일 스케일 또는 더 일반적인 변환을 나타내는 경우 결정자는 역변환이 가능한지 여부를 결정하는 것 이외의 다른 목적에 유용한 값을 나타낼 가능성이 없습니다.</target>
        </trans-unit>
        <trans-unit id="1036a7dd624514ec464cb770020aa6e61ea13a75" translate="yes" xml:space="preserve">
          <source>If this type is a top-level type, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">이 유형이 최상위 유형 인 경우 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9ea8dd4b3ea5292082d744fa63292b6b0b628b15" translate="yes" xml:space="preserve">
          <source>If this type is referenced from an &lt;code&gt;Attr&lt;/code&gt; node, &lt;code&gt;typeNamespace&lt;/code&gt; is &lt;code&gt;&quot;http://www.w3.org/TR/REC-xml&quot;&lt;/code&gt; and &lt;code&gt;typeName&lt;/code&gt; represents the &lt;b&gt;[attribute type]&lt;/b&gt; property in the [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-infoset-20040204/&quot;&gt;XML Information Set&lt;/a&gt;] . If there is no declaration for the attribute, &lt;code&gt;typeNamespace&lt;/code&gt; and &lt;code&gt;typeName&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 유형이 &lt;code&gt;Attr&lt;/code&gt; 노드 에서 참조되는 경우 &lt;code&gt;typeNamespace&lt;/code&gt; 는 &lt;code&gt;&quot;http://www.w3.org/TR/REC-xml&quot;&lt;/code&gt; 이고 &lt;code&gt;typeName&lt;/code&gt; 은 [ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-infoset-20040204/&quot;&gt;XML Information Set&lt;/a&gt; ] 의 &lt;b&gt;[attribute type]&lt;/b&gt; 속성을 나타냅니다 . 속성에 대한 선언이없는 경우 &lt;code&gt;typeNamespace&lt;/code&gt; 및 &lt;code&gt;typeName&lt;/code&gt; 은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="267a83842c1c9ccb837509ee2602b3cbdd39f356" translate="yes" xml:space="preserve">
          <source>If this type is referenced from an &lt;code&gt;Attr&lt;/code&gt; node, &lt;code&gt;typeNamespace&lt;/code&gt; is &lt;code&gt;&quot;http://www.w3.org/TR/REC-xml&quot;&lt;/code&gt; and &lt;code&gt;typeName&lt;/code&gt; represents the &lt;b&gt;[attribute type]&lt;/b&gt; property in the [&lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-infoset-20040204/&quot;&gt;XML Information Set&lt;/a&gt;] . If there is no declaration for the attribute, &lt;code&gt;typeNamespace&lt;/code&gt; and &lt;code&gt;typeName&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 유형이 &lt;code&gt;Attr&lt;/code&gt; 노드 에서 참조되는 경우 &lt;code&gt;typeNamespace&lt;/code&gt; 는 &lt;code&gt;&quot;http://www.w3.org/TR/REC-xml&quot;&lt;/code&gt; 이고 &lt;code&gt;typeName&lt;/code&gt; 은 [ &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-infoset-20040204/&quot;&gt;XML Information Set&lt;/a&gt; ] 의 &lt;b&gt;[attribute type]&lt;/b&gt; 속성을 나타냅니다 . 속성에 대한 선언이없는 경우 &lt;code&gt;typeNamespace&lt;/code&gt; 및 &lt;code&gt;typeName&lt;/code&gt; 은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cd4ca7d563a5061f719840cd6f06b071fe6ce8a8" translate="yes" xml:space="preserve">
          <source>If this type is referenced from an &lt;code&gt;Element&lt;/code&gt; node, &lt;code&gt;typeNamespace&lt;/code&gt; and &lt;code&gt;typeName&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 유형이 &lt;code&gt;Element&lt;/code&gt; 노드 에서 참조되는 경우 &lt;code&gt;typeNamespace&lt;/code&gt; 및 &lt;code&gt;typeName&lt;/code&gt; 은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f7813e021bf6635b0bf1ddc22622b64a5e844fa8" translate="yes" xml:space="preserve">
          <source>If this type variable was declared with no explicit upper bounds, the result is &lt;code&gt;java.lang.Object&lt;/code&gt;. If it was declared with multiple upper bounds, the result is an &lt;a href=&quot;intersectiontype&quot;&gt;intersection type&lt;/a&gt;; individual bounds can be found by examining the result's &lt;a href=&quot;intersectiontype#getBounds()&quot;&gt;bounds&lt;/a&gt;.</source>
          <target state="translated">이 유형 변수가 명시 적 상한없이 선언 된 경우 결과는 &lt;code&gt;java.lang.Object&lt;/code&gt; 입니다. 여러 상한값으로 선언 된 경우 결과는 &lt;a href=&quot;intersectiontype&quot;&gt;교차 유형입니다&lt;/a&gt; . 개별 경계는 결과의 &lt;a href=&quot;intersectiontype#getBounds()&quot;&gt;경계를&lt;/a&gt; 검사하여 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e08bb6c116e1da83b9d529a037838f86be336252" translate="yes" xml:space="preserve">
          <source>If this type variable was declared with no explicit upper bounds, the result is &lt;code&gt;java.lang.Object&lt;/code&gt;. If it was declared with multiple upper bounds, the result is an &lt;a href=&quot;intersectiontype&quot;&gt;intersection type&lt;/a&gt;; individual bounds can be found by examining the result's &lt;a href=&quot;intersectiontype#getBounds--&quot;&gt;bounds&lt;/a&gt;.</source>
          <target state="translated">이 타입 변수가 명시적인 상한없이 선언 된 경우 결과는 &lt;code&gt;java.lang.Object&lt;/code&gt; 입니다. 여러 개의 상한으로 선언 된 경우 결과는 &lt;a href=&quot;intersectiontype&quot;&gt;교차 유형입니다&lt;/a&gt; . 결과의 &lt;a href=&quot;intersectiontype#getBounds--&quot;&gt;범위를&lt;/a&gt; 검사하여 개별 범위를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5a05dc0d9a56c8456e3726f00dc66c1b2848ab48" translate="yes" xml:space="preserve">
          <source>If this value is false, then any node which has no children is a leaf node, and any node may acquire children.</source>
          <target state="translated">이 값이 false이면 자식이없는 노드는 리프 노드이고 모든 노드는 자식을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="359e36de815ffc1ab4a4612554160471de4265f0" translate="yes" xml:space="preserve">
          <source>If this virtual machine has a console then it is represented by a unique instance of this class which can be obtained by invoking the &lt;a href=&quot;../lang/system#console()&quot;&gt;&lt;code&gt;System.console()&lt;/code&gt;&lt;/a&gt; method. If no console device is available then an invocation of that method will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 가상 머신에 콘솔이 있으면 &lt;a href=&quot;../lang/system#console()&quot;&gt; &lt;code&gt;System.console()&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 얻을 수있는이 클래스의 고유 인스턴스로 표시됩니다 . 콘솔 장치를 사용할 수없는 경우 해당 메서드를 호출하면 &lt;code&gt;null&lt;/code&gt; 이 반환 됩니다.</target>
        </trans-unit>
        <trans-unit id="acbf944d3989fe8aba9f6f6ea4080273b18cb6ee" translate="yes" xml:space="preserve">
          <source>If this virtual machine has a console then it is represented by a unique instance of this class which can be obtained by invoking the &lt;a href=&quot;../lang/system#console--&quot;&gt;&lt;code&gt;System.console()&lt;/code&gt;&lt;/a&gt; method. If no console device is available then an invocation of that method will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 가상 머신에 콘솔이있는 경우, &lt;a href=&quot;../lang/system#console--&quot;&gt; &lt;code&gt;System.console()&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 얻을 수있는이 클래스의 고유 인스턴스로 표시됩니다 . 사용 가능한 콘솔 장치가없는 경우 해당 메소드를 호출하면 &lt;code&gt;null&lt;/code&gt; 이 리턴 됩니다.</target>
        </trans-unit>
        <trans-unit id="bfb30c4d00faeeb962ddb4c865ecf63132c1c820" translate="yes" xml:space="preserve">
          <source>If this watch key has already been cancelled then invoking this method has no effect. Once cancelled, a watch key remains forever invalid.</source>
          <target state="translated">이 감시 키가 이미 취소 된 경우이 방법을 호출해도 효과가 없습니다. 일단 취소되면 감시 키는 영원히 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="67ae0cc16c031b634fcbfcefd9879a42a332defc" translate="yes" xml:space="preserve">
          <source>If this watch key has been cancelled or this watch key is already in the ready state then invoking this method has no effect. Otherwise if there are pending events for the object then this watch key is immediately re-queued to the watch service. If there are no pending events then the watch key is put into the ready state and will remain in that state until an event is detected or the watch key is cancelled.</source>
          <target state="translated">If this watch key has been cancelled or this watch key is already in the ready state then invoking this method has no effect. Otherwise if there are pending events for the object then this watch key is immediately re-queued to the watch service. If there are no pending events then the watch key is put into the ready state and will remain in that state until an event is detected or the watch key is cancelled.</target>
        </trans-unit>
        <trans-unit id="d49de95f89fde0886c65b941dace6cda23c222a5" translate="yes" xml:space="preserve">
          <source>If this window is blocked by modal dialog, then the blocking dialog is brought to the front and remains above the blocked window.</source>
          <target state="translated">이 창이 모달 대화 상자에 의해 차단되면 차단 대화 상자가 맨 앞으로 표시되고 차단 된 창 위에 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="fc96c97802231f3c6be6068b9e85703f581d32c1" translate="yes" xml:space="preserve">
          <source>If this write lock is not held when any &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; method is called then an &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt;&lt;code&gt;IllegalMonitorStateException&lt;/code&gt;&lt;/a&gt; is thrown. (Read locks are held independently of write locks, so are not checked or affected. However it is essentially always an error to invoke a condition waiting method when the current thread has also acquired read locks, since other threads that could unblock it will not be able to acquire the write lock.)</source>
          <target state="translated">&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt; 메서드가 호출 될 때이 쓰기 잠금이 유지되지 않으면 &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt; &lt;code&gt;IllegalMonitorStateException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. (읽기 잠금은 쓰기 잠금과 독립적으로 유지되므로 검사되거나 영향을받지 않습니다. 그러나 현재 스레드가 읽기 잠금을 획득했을 때 조건 대기 메소드를 호출하는 것은 본질적으로 항상 오류입니다. 쓰기 잠금을 획득 할 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="2bd03be9c8d94f644535c98be8e6d748dbb0c092" translate="yes" xml:space="preserve">
          <source>If thread memory allocation measurement is enabled after the thread has started, the Java virtual machine implementation may choose any time up to and including the time that the capability is enabled as the point where thread memory allocation measurement starts.</source>
          <target state="translated">스레드가 시작된 후 스레드 메모리 할당 측정이 활성화 된 경우 Java 가상 머신 구현은 스레드 메모리 할당 측정이 시작되는 지점으로 기능이 활성화 된 시간까지 포함하여 임의의 시간을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f79e63814e29ed4746eb250848d65b14d8ed57d" translate="yes" xml:space="preserve">
          <source>If timed out while blocked in step 4, return false, else true.</source>
          <target state="translated">4 단계에서 차단되는 동안 시간이 초과되면 false를, 그렇지 않으면 true를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="dd02389962799011ed43b909ccafdaba1a291d37" translate="yes" xml:space="preserve">
          <source>If timezone field is defined for this instance, returns TimeZone initialized with custom timezone id of zoneoffset. If timezone field is undefined, try the defaultZoneoffset that was passed in. If defaultZoneoffset is FIELD_UNDEFINED, return default timezone for this host. (Same default as java.util.GregorianCalendar).</source>
          <target state="translated">이 인스턴스에 대해 시간대 필드가 정의 된 경우 zoneoffset의 사용자 지정 시간대 ID로 초기화 된 TimeZone을 반환합니다. 시간대 필드가 정의되지 않은 경우 전달 된 defaultZoneoffset을 시도합니다. defaultZoneoffset이 FIELD_UNDEFINED이면이 호스트에 대한 기본 시간대를 반환합니다. (java.util.GregorianCalendar와 동일한 기본값).</target>
        </trans-unit>
        <trans-unit id="b0ec1a1fd90d92ff0078be5238c111fb08420bf2" translate="yes" xml:space="preserve">
          <source>If true if this viewport will maintain an offscreen image of its contents. The image is used to reduce the cost of small one dimensional changes to the &lt;code&gt;viewPosition&lt;/code&gt;. Rather than repainting the entire viewport we use &lt;code&gt;Graphics.copyArea&lt;/code&gt; to effect some of the scroll.</source>
          <target state="translated">이 뷰포트가 내용의 오프 스크린 이미지를 유지한다면 참이면. 이 이미지는 &lt;code&gt;viewPosition&lt;/code&gt; 에 대한 작은 1 차원 변경 비용을 줄이는 데 사용됩니다 . 전체 뷰포트를 다시 그리는 대신 &lt;code&gt;Graphics.copyArea&lt;/code&gt; 를 사용 하여 일부 스크롤에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="e467f99e60229d1977e4a1de331a926f94fdf8dc" translate="yes" xml:space="preserve">
          <source>If true is returned, from now on &lt;code&gt;anEdit&lt;/code&gt; must return false from &lt;code&gt;canUndo&lt;/code&gt; and &lt;code&gt;canRedo&lt;/code&gt;, and must throw the appropriate exception on &lt;code&gt;undo&lt;/code&gt; or &lt;code&gt;redo&lt;/code&gt;.</source>
          <target state="translated">true가 반환되면 지금부터 &lt;code&gt;anEdit&lt;/code&gt; 는 &lt;code&gt;canUndo&lt;/code&gt; 및 &lt;code&gt;canRedo&lt;/code&gt; 에서 false를 반환 해야하며 &lt;code&gt;undo&lt;/code&gt; 또는 &lt;code&gt;redo&lt;/code&gt; 에 적절한 예외를 throw해야합니다 .</target>
        </trans-unit>
        <trans-unit id="04c2fc4ae7631258b0dbfd823fe7b5c9310cf52b" translate="yes" xml:space="preserve">
          <source>If true is returned, from now on anEdit must return false from canUndo() and canRedo(), and must throw the appropriate exception on undo() or redo().</source>
          <target state="translated">true가 반환되면 지금부터 anEdit는 canUndo () 및 canRedo ()에서 false를 반환해야하며 undo () 또는 redo ()에서 적절한 예외를 throw해야합니다.</target>
        </trans-unit>
        <trans-unit id="6916f52b9fd823a56ab09614084906369db32a1c" translate="yes" xml:space="preserve">
          <source>If true the component paints every pixel within its bounds.</source>
          <target state="translated">true이면 구성 요소가 경계 내의 모든 픽셀을 그립니다.</target>
        </trans-unit>
        <trans-unit id="12f2d9700a79c864d2a7eaa68066228008a04181" translate="yes" xml:space="preserve">
          <source>If true the component paints every pixel within its bounds. Otherwise, the component may not paint some or all of its pixels, allowing the underlying pixels to show through.</source>
          <target state="translated">true이면 구성 요소가 경계 내의 모든 픽셀을 그립니다. 그렇지 않으면 구성 요소가 픽셀의 일부 또는 전체를 칠하지 않아 기본 픽셀이 비쳐 보일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7201394a7f2040ff5bf0612fb8fc8c4d161fb5e2" translate="yes" xml:space="preserve">
          <source>If true then calls to &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;setLayout&lt;/code&gt; will be forwarded to the &lt;code&gt;contentPane&lt;/code&gt;.</source>
          <target state="translated">true이면 &lt;code&gt;add&lt;/code&gt; 및 &lt;code&gt;setLayout&lt;/code&gt; 호출 이 &lt;code&gt;contentPane&lt;/code&gt; 으로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="4e74dd4cc94c60e1b595da5bcb2c9a9df53d6c5e" translate="yes" xml:space="preserve">
          <source>If true then calls to &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;setLayout&lt;/code&gt; will be forwarded to the &lt;code&gt;contentPane&lt;/code&gt;. This is initially false, but is set to true when the &lt;code&gt;JApplet&lt;/code&gt; is constructed.</source>
          <target state="translated">true이면 &lt;code&gt;add&lt;/code&gt; 및 &lt;code&gt;setLayout&lt;/code&gt; 호출 이 &lt;code&gt;contentPane&lt;/code&gt; 으로 전달됩니다 . 초기에는 false이지만 &lt;code&gt;JApplet&lt;/code&gt; 이 구성 될 때 true로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="854dcdafa3fa78350a1864ae85a31471ad3035da" translate="yes" xml:space="preserve">
          <source>If true then calls to &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;setLayout&lt;/code&gt; will be forwarded to the &lt;code&gt;contentPane&lt;/code&gt;. This is initially false, but is set to true when the &lt;code&gt;JDialog&lt;/code&gt; is constructed.</source>
          <target state="translated">true이면 &lt;code&gt;add&lt;/code&gt; 및 &lt;code&gt;setLayout&lt;/code&gt; 호출 이 &lt;code&gt;contentPane&lt;/code&gt; 으로 전달됩니다 . 처음에는 false이지만 &lt;code&gt;JDialog&lt;/code&gt; 가 구성 될 때 true로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="d373410ddca3643cffc49576cccbc461f05db310" translate="yes" xml:space="preserve">
          <source>If true then calls to &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;setLayout&lt;/code&gt; will be forwarded to the &lt;code&gt;contentPane&lt;/code&gt;. This is initially false, but is set to true when the &lt;code&gt;JFrame&lt;/code&gt; is constructed.</source>
          <target state="translated">true이면 &lt;code&gt;add&lt;/code&gt; 및 &lt;code&gt;setLayout&lt;/code&gt; 호출 이 &lt;code&gt;contentPane&lt;/code&gt; 으로 전달됩니다 . 초기에는 false이지만 &lt;code&gt;JFrame&lt;/code&gt; 이 구성 되면 true로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="a0c538940593e9ac1d0c818484980ecc99c315f9" translate="yes" xml:space="preserve">
          <source>If true then calls to &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;setLayout&lt;/code&gt; will be forwarded to the &lt;code&gt;contentPane&lt;/code&gt;. This is initially false, but is set to true when the &lt;code&gt;JInternalFrame&lt;/code&gt; is constructed.</source>
          <target state="translated">true이면 &lt;code&gt;add&lt;/code&gt; 및 &lt;code&gt;setLayout&lt;/code&gt; 호출 이 &lt;code&gt;contentPane&lt;/code&gt; 으로 전달됩니다 . 이것은 처음에는 거짓이지만 &lt;code&gt;JInternalFrame&lt;/code&gt; 이 생성 되면 참으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="4da24a21d9c698c6f913f7fa649749a4d1a7b319" translate="yes" xml:space="preserve">
          <source>If true then calls to &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;setLayout&lt;/code&gt; will be forwarded to the &lt;code&gt;contentPane&lt;/code&gt;. This is initially false, but is set to true when the &lt;code&gt;JWindow&lt;/code&gt; is constructed.</source>
          <target state="translated">true이면 &lt;code&gt;add&lt;/code&gt; 및 &lt;code&gt;setLayout&lt;/code&gt; 호출 이 &lt;code&gt;contentPane&lt;/code&gt; 으로 전달됩니다 . 이것은 처음에는 거짓이지만 &lt;code&gt;JWindow&lt;/code&gt; 가 구성 될 때 참으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="4e348a7eb7b47a5c2b20b07b9e5a5556fd59d6ff" translate="yes" xml:space="preserve">
          <source>If true, a UI widget will be provided to the user to get input.</source>
          <target state="translated">참이면 UI 위젯이 입력을받을 수 있도록 사용자에게 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="a2d5f9160b48c06286f5396c83b01b8cbe0b9dec" translate="yes" xml:space="preserve">
          <source>If true, children are lumped together in parent.</source>
          <target state="translated">사실이라면, 아이들은 부모 안에 함께 모여 있습니다.</target>
        </trans-unit>
        <trans-unit id="781efdba3c3ec3111655ac4c903ff67382acc85c" translate="yes" xml:space="preserve">
          <source>If true, highlights are drawn as the Views draw the text.</source>
          <target state="translated">참이면 뷰가 텍스트를 그릴 때 하이라이트가 그려집니다.</target>
        </trans-unit>
        <trans-unit id="13cb3ab4be8c1b49952a74d086ba1a1d81ae6d84" translate="yes" xml:space="preserve">
          <source>If true, highlights are drawn as the Views draw the text. That is the Views will call into &lt;code&gt;paintLayeredHighlight&lt;/code&gt; which will result in a rectangle being drawn before the text is drawn (if the offsets are in a highlighted region that is). For this to work the painter supplied must be an instance of LayeredHighlightPainter.</source>
          <target state="translated">참이면 뷰가 텍스트를 그릴 때 하이라이트가 그려집니다. 즉, 뷰가 &lt;code&gt;paintLayeredHighlight&lt;/code&gt; 를 호출 하여 텍스트가 그려지기 전에 직사각형이 그려집니다 (오프셋이 강조 표시된 영역에있는 경우). 이 작업을 수행하려면 제공된 painter가 LayeredHighlightPainter의 인스턴스 여야합니다.</target>
        </trans-unit>
        <trans-unit id="0c2b3b0a0974d5b38d200de7adff60d693b9b8a0" translate="yes" xml:space="preserve">
          <source>If true, multiple &lt;code&gt;OPTION&lt;/code&gt; elements may be selected in this &lt;code&gt;SELECT&lt;/code&gt; .</source>
          <target state="translated">true이면 이 &lt;code&gt;SELECT&lt;/code&gt; 에서 여러 &lt;code&gt;OPTION&lt;/code&gt; 요소를 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3cd1ecbd46a1b37d324bf5a1a3e127d5c16d12ab" translate="yes" xml:space="preserve">
          <source>If true, multiple &lt;code&gt;OPTION&lt;/code&gt; elements may be selected in this &lt;code&gt;SELECT&lt;/code&gt; . See the multiple attribute definition in HTML 4.0.</source>
          <target state="translated">true이면 이 &lt;code&gt;SELECT&lt;/code&gt; 에서 여러 &lt;code&gt;OPTION&lt;/code&gt; 요소를 선택할 수 있습니다 . HTML 4.0의 다중 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c219da54b1ac57e2690d1d060b724469d3ccd98c" translate="yes" xml:space="preserve">
          <source>If true, reordering of columns are allowed by the user; the default is true.</source>
          <target state="translated">true 인 경우 사용자가 열 재정렬을 허용합니다. 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="71831bb9b7cec752ccec9933744fb012db9dede1" translate="yes" xml:space="preserve">
          <source>If true, resizing of columns are allowed by the user; the default is true.</source>
          <target state="translated">true이면 사용자가 열 크기 조정을 허용합니다. 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="ecdae079ab4f2db424b9773ecff0b2849ab7ec27" translate="yes" xml:space="preserve">
          <source>If true, specifies that a sort should happen when the underlying model is updated (&lt;code&gt;rowsUpdated&lt;/code&gt; is invoked).</source>
          <target state="translated">true 인 경우 기본 모델이 업데이트 될 때 정렬이 발생하도록 지정합니다 ( &lt;code&gt;rowsUpdated&lt;/code&gt; 가 호출 됨).</target>
        </trans-unit>
        <trans-unit id="d9fd6fcf0f4287798bf6cf679fd20c273c55e3d9" translate="yes" xml:space="preserve">
          <source>If true, specifies that a sort should happen when the underlying model is updated (&lt;code&gt;rowsUpdated&lt;/code&gt; is invoked). For example, if this is true and the user edits an entry the location of that item in the view may change. The default is false.</source>
          <target state="translated">true 인 경우 기본 모델이 업데이트 될 때 정렬이 발생하도록 지정합니다 ( &lt;code&gt;rowsUpdated&lt;/code&gt; 가 호출 됨). 예를 들어 이것이 참이고 사용자가 항목을 편집하면보기에서 해당 항목의 위치가 변경 될 수 있습니다. 기본값은 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="0667c5b38856c5f66fd4d855f3cc7a2b4807c724" translate="yes" xml:space="preserve">
          <source>If true, the knob (and the data value it represents) resolve to the closest tick mark next to where the user positioned the knob.</source>
          <target state="translated">참이면, 노브 (및 그것이 나타내는 데이터 값)는 사용자가 노브를 배치 한 위치 옆에 가장 가까운 눈금 표시로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="c09c276d855943c51957c89d18df4eef427bf9bb" translate="yes" xml:space="preserve">
          <source>If true, the knob (and the data value it represents) resolve to the closest tick mark next to where the user positioned the knob. The default is false.</source>
          <target state="translated">참이면, 노브 (및 그것이 나타내는 데이터 값)는 사용자가 노브를 배치 한 위치 옆에 가장 가까운 눈금 표시로 해석됩니다. 기본값은 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="ac1483298083f3abb8afa0f1aa85d3e5075f14df" translate="yes" xml:space="preserve">
          <source>If true, the proxy is for an MXBean, and appropriate mappings are applied to method parameters and return values.</source>
          <target state="translated">true 인 경우 프록시는 MXBean 용이며 메소드 매개 변수 및 리턴 값에 적절한 맵핑이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="44e659fe6dd1c0340a1bbcac9e4f683a73c2bed0" translate="yes" xml:space="preserve">
          <source>If true, the returned value and set value will also contain the literal characters in mask.</source>
          <target state="translated">true이면 반환 된 값과 설정 값에 마스크의 리터럴 문자도 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="903c9379c419acc26a59d820c01995013108ceb3" translate="yes" xml:space="preserve">
          <source>If true, the user is allowed to resize the column; the default is true.</source>
          <target state="translated">true이면 사용자가 열 크기를 조정할 수 있습니다. 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="6724ec65dfd9f45b0ac95aff3a6b8b0d839d4b0e" translate="yes" xml:space="preserve">
          <source>If true, when a node is expanded, as many of the descendants are scrolled to be visible.</source>
          <target state="translated">true 인 경우 노드가 확장되면 많은 하위 항목이 스크롤되어 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="e2c0749ee1ac640ac1b23f01230f5013e6830a3f" translate="yes" xml:space="preserve">
          <source>If true, when editing is to be stopped by way of selection changing, data in tree changing or other means &lt;code&gt;stopCellEditing&lt;/code&gt; is invoked, and changes are saved.</source>
          <target state="translated">참이면 선택 변경을 통해 편집을 중지 할 때 트리 변경 등의 방법으로 &lt;code&gt;stopCellEditing&lt;/code&gt; 이 호출되고 변경 사항이 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="3f1b38a0d951633878aeb3e05c664eb8beabd095" translate="yes" xml:space="preserve">
          <source>If true, when editing is to be stopped by way of selection changing, data in tree changing or other means &lt;code&gt;stopCellEditing&lt;/code&gt; is invoked, and changes are saved. If false, &lt;code&gt;cancelCellEditing&lt;/code&gt; is invoked, and changes are discarded. Default is false.</source>
          <target state="translated">참이면 선택 변경을 통해 편집을 중지 할 때 트리 변경 등의 방법으로 &lt;code&gt;stopCellEditing&lt;/code&gt; 이 호출되고 변경 사항이 저장됩니다. false이면 &lt;code&gt;cancelCellEditing&lt;/code&gt; 이 호출되고 변경 사항이 삭제됩니다. 기본값은 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="7b514e3ca049e844626b929e4397fb69536176a9" translate="yes" xml:space="preserve">
          <source>If two MBeanInfo objects return the same values in one of their arrays but in a different order then they are not equal.</source>
          <target state="translated">두 MBeanInfo 오브젝트가 배열 중 하나에서 동일한 값을 리턴하지만 다른 순서로 리턴하면 동일하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3de416a161d2a7eece4b7d623902e09f45d1ac1a" translate="yes" xml:space="preserve">
          <source>If two Permission objects are equal according to the &lt;code&gt;equals&lt;/code&gt; method, then calling the &lt;code&gt;hashCode&lt;/code&gt; method on each of the two Permission objects must produce the same integer result.</source>
          <target state="translated">&lt;code&gt;equals&lt;/code&gt; 메소드 에 따라 2 개의 Permission 오브젝트가 동일한 경우, 2 개의 Permission 오브젝트 각각 에서 &lt;code&gt;hashCode&lt;/code&gt; 메소드 를 호출 하면 동일한 정수 결과가 생성되어야합니다.</target>
        </trans-unit>
        <trans-unit id="e0a883ac4c9f090a20d5a7c637148cd5c404124c" translate="yes" xml:space="preserve">
          <source>If two instances of &lt;code&gt;Random&lt;/code&gt; are created with the same seed, and the same sequence of method calls is made for each, they will generate and return identical sequences of numbers. In order to guarantee this property, particular algorithms are specified for the class &lt;code&gt;Random&lt;/code&gt;. Java implementations must use all the algorithms shown here for the class &lt;code&gt;Random&lt;/code&gt;, for the sake of absolute portability of Java code. However, subclasses of class &lt;code&gt;Random&lt;/code&gt; are permitted to use other algorithms, so long as they adhere to the general contracts for all the methods.</source>
          <target state="translated">동일한 시드로 두 개의 &lt;code&gt;Random&lt;/code&gt; 인스턴스 가 작성되고 각각에 대해 동일한 시퀀스의 메소드 호출이 수행되면 동일한 시퀀스의 숫자를 생성하고 리턴합니다. 이 속성을 보장하기 위해 &lt;code&gt;Random&lt;/code&gt; 클래스에 특정 알고리즘이 지정됩니다 . Java 구현 은 Java 코드의 절대 이식성을 위해 &lt;code&gt;Random&lt;/code&gt; 클래스에 대해 여기에 표시된 모든 알고리즘을 사용해야합니다 . 그러나 &lt;code&gt;Random&lt;/code&gt; 클래스의 서브 클래스는 모든 메소드에 대한 일반 계약을 준수하는 한 다른 알고리즘을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a0cd66d26c3291f114f5bd917b5a1d8a4185523" translate="yes" xml:space="preserve">
          <source>If two methods produce the same item name (for example, &lt;code&gt;
      getOwner&lt;/code&gt; and &lt;code&gt;isOwner&lt;/code&gt;, or &lt;code&gt;getOwner&lt;/code&gt; and &lt;code&gt;
      getowner&lt;/code&gt;) then the type is not convertible.</source>
          <target state="translated">두 메서드가 동일한 항목 이름 (예 : &lt;code&gt; getOwner&lt;/code&gt; 및 &lt;code&gt;isOwner&lt;/code&gt; 또는 &lt;code&gt;getOwner&lt;/code&gt; 및 &lt;code&gt; getowner&lt;/code&gt; )을 생성하면 형식을 변환 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c0375c976322546dce1a4576dbb74510f34a3ade" translate="yes" xml:space="preserve">
          <source>If two methods produce the same item name (for example, &lt;code&gt;getOwner&lt;/code&gt; and &lt;code&gt;isOwner&lt;/code&gt;, or &lt;code&gt;getOwner&lt;/code&gt; and &lt;code&gt;getowner&lt;/code&gt;) then the type is not convertible.</source>
          <target state="translated">두 메소드가 동일한 항목 이름을 생성하는 경우 (예 : &lt;code&gt;getOwner&lt;/code&gt; 및 &lt;code&gt;isOwner&lt;/code&gt; 또는 &lt;code&gt;getOwner&lt;/code&gt; 및 &lt;code&gt;getowner&lt;/code&gt; ) 유형을 변환 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="cea1bcc2545da2681608af0aef2a71633ab2ff67" translate="yes" xml:space="preserve">
          <source>If two objects are equal according to the &lt;code&gt;equals(Object)&lt;/code&gt; method, then calling the &lt;code&gt;hashCode&lt;/code&gt; method on each of the two objects must produce the same integer result.</source>
          <target state="translated">&lt;code&gt;equals(Object)&lt;/code&gt; 메소드 에 따라 두 오브젝트가 동일한 경우 두 오브젝트 각각 에서 &lt;code&gt;hashCode&lt;/code&gt; 메소드 를 호출 하면 동일한 정수 결과가 생성되어야합니다.</target>
        </trans-unit>
        <trans-unit id="8f61ba8d66f9ba7904edb30cfdda34da8f8257fa" translate="yes" xml:space="preserve">
          <source>If two or more flavors share the best MIME type in the array, then that MIME type will be checked to see if it supports the charset parameter.</source>
          <target state="translated">둘 이상의 플레이버가 배열에서 최상의 MIME 유형을 공유하는 경우 해당 MIME 유형이 charset 매개 변수를 지원하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f909b4f68c1a354c02807cfa17e9954f5a2992f4" translate="yes" xml:space="preserve">
          <source>If two or more flavors share the best charset, the flavors will then again be sorted by their representation classes in the following order: &lt;code&gt;java.io.InputStream&lt;/code&gt;, &lt;code&gt;java.nio.ByteBuffer&lt;/code&gt;, &lt;code&gt;[B&lt;/code&gt;, &amp;lt;all others&amp;gt;.</source>
          <target state="translated">둘 이상의 플레이버가 최상의 문자 세트를 공유하는 경우, 플레이버는 &lt;code&gt;java.io.InputStream&lt;/code&gt; , &lt;code&gt;java.nio.ByteBuffer&lt;/code&gt; , &lt;code&gt;[B&lt;/code&gt; , &amp;lt;모든 기타&amp;gt; 순서로 표현 클래스별로 다시 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="9460be18726bf4cb7cfa0eb56dbf185fbe47ad00" translate="yes" xml:space="preserve">
          <source>If two or more flavors share the best representation class, and that representation is one of the four explicitly listed, then one of those flavors will be chosen non-deterministically. If, however, no flavor has one of the four specified representations, the flavors will then be sorted by their charsets. Unicode charsets, such as &quot;UTF-16&quot;, &quot;UTF-8&quot;, &quot;UTF-16BE&quot;, &quot;UTF-16LE&quot;, and their aliases, are considered best. After them, the platform default charset and its aliases are selected. &quot;US-ASCII&quot; and its aliases are worst. All other charsets are chosen in alphabetical order, but only charsets supported by this implementation of the Java platform will be considered.</source>
          <target state="translated">둘 이상의 플레이버가 최상의 표현 클래스를 공유하고 해당 표현이 명시 적으로 나열된 네 가지 중 하나 인 경우 이러한 플레이버 중 하나가 비 결정적으로 선택됩니다. 그러나 플레이버에 지정된 네 가지 표현 중 하나가없는 경우 플레이버는 해당 문자셋별로 정렬됩니다. &quot;UTF-16&quot;, &quot;UTF-8&quot;, &quot;UTF-16BE&quot;, &quot;UTF-16LE&quot;및 해당 별칭과 같은 유니 코드 문자 집합이 가장 좋은 것으로 간주됩니다. 그 다음에는 플랫폼 기본 문자 집합과 별칭이 선택됩니다. &quot;US-ASCII&quot;와 그 별칭은 최악입니다. 다른 모든 문자 집합은 알파벳 순서로 선택되지만이 Java 플랫폼 구현에서 지원하는 문자 집합 만 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="06c93a52f76af90db85c04e2a23ce0c15dda8100" translate="yes" xml:space="preserve">
          <source>If two or more flavors share the best representation class, or if no flavor has one of the three specified representations, then one of those flavors will be chosen non-deterministically.</source>
          <target state="translated">둘 이상의 플레이버가 최상의 표현 클래스를 공유하거나 지정된 세 가지 표현 중 하나가없는 플레이버 인 경우 해당 플레이버 중 하나가 비 결정적으로 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="06301635cc60473f7fc2e976be322e3b2d4e8e9c" translate="yes" xml:space="preserve">
          <source>If typed, pressed or released is not specified, pressed is assumed. Here are some examples:</source>
          <target state="translated">입력, 눌렀거나 떼는 것이 지정되지 않은 경우 눌린 것으로 간주됩니다. 여기 예시들이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="c9f5bd1b4fb2c1a9738bcfa0e0f9e6da939c239a" translate="yes" xml:space="preserve">
          <source>If updateLayoutStateNeeded is non zero, call updateLayoutState() and reset updateLayoutStateNeeded.</source>
          <target state="translated">updateLayoutStateNeeded가 0이 아니면 updateLayoutState ()를 호출하고 updateLayoutStateNeeded를 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="95aed599f54cec36bc047078751a2df8ad9fa5c9" translate="yes" xml:space="preserve">
          <source>If updateLayoutStateNeeded is non zero, call updateLayoutState() and reset updateLayoutStateNeeded. This method should be called by methods before doing any computation based on the geometry of the list. For example it's the first call in paint() and getPreferredSize().</source>
          <target state="translated">updateLayoutStateNeeded가 0이 아니면 updateLayoutState ()를 호출하고 updateLayoutStateNeeded를 재설정합니다. 이 메서드는 목록의 기하학적 구조를 기반으로 계산을 수행하기 전에 메서드에 의해 호출되어야합니다. 예를 들어 paint () 및 getPreferredSize ()의 첫 번째 호출입니다.</target>
        </trans-unit>
        <trans-unit id="944fd68c8db30eaf7c2065a550cd3f6569a2e061" translate="yes" xml:space="preserve">
          <source>If used in &lt;code&gt;getInstance&lt;/code&gt;, returns the minimum capability requested. If used in &lt;code&gt;getParameters&lt;/code&gt;, returns information on the effective prediction resistance flag and whether it supports reseeding.</source>
          <target state="translated">&lt;code&gt;getInstance&lt;/code&gt; 에서 사용되는 경우 요청 된 최소 기능을 반환합니다. &lt;code&gt;getParameters&lt;/code&gt; 에서 사용되는 경우 유효 예측 저항 플래그에 대한 정보와 리 시드 지원 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fb4e37bf374357e0387efdf847ef3d4852881471" translate="yes" xml:space="preserve">
          <source>If used in &lt;code&gt;getInstance&lt;/code&gt;, returns the minimum strength requested, or -1 if there is no specific request on the strength. If used in &lt;code&gt;getParameters&lt;/code&gt;, returns the effective strength. The effective strength must be greater than or equal to the minimum strength requested.</source>
          <target state="translated">&lt;code&gt;getInstance&lt;/code&gt; 에서 사용되는 경우 요청 된 최소 강도를 반환하거나 강도에 대한 특정 요청이없는 경우 -1을 반환합니다. &lt;code&gt;getParameters&lt;/code&gt; 에서 사용되는 경우 유효 강도를 반환합니다. 유효 강도는 요청 된 최소 강도보다 크거나 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="47ef320174ead760eb088df369a951d8ab789ccf" translate="yes" xml:space="preserve">
          <source>If used in &lt;code&gt;getInstance&lt;/code&gt;, returns the requested personalization string as a newly allocated array, or &lt;code&gt;null&lt;/code&gt; if no personalization string is requested. The same string should be returned in &lt;code&gt;getParameters&lt;/code&gt; as a new copy, or &lt;code&gt;null&lt;/code&gt; if no personalization string is requested in &lt;code&gt;getInstance&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getInstance&lt;/code&gt; 에서 사용되는 경우 요청 된 개인화 문자열을 새로 할당 된 배열로 반환하거나 개인화 문자열이 요청되지 않은 경우 &lt;code&gt;null&lt;/code&gt; 을 반환합니다. &lt;code&gt;getParameters&lt;/code&gt; 에서 새 복사본으로 동일한 문자열을 반환 하거나, &lt;code&gt;getInstance&lt;/code&gt; 에서 개인화 문자열이 요청되지 않은 경우 &lt;code&gt;null&lt;/code&gt; 을 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="70c98c2264176024b5b44e24255d881ddec4b3f0" translate="yes" xml:space="preserve">
          <source>If user information is given then it is appended, followed by a commercial-at character (&lt;code&gt;'@'&lt;/code&gt;). Any character not in the</source>
          <target state="translated">사용자 정보가 제공되면 추가되고 상업 문자 ( &lt;code&gt;'@'&lt;/code&gt; )가 옵니다 . 에없는 모든 문자</target>
        </trans-unit>
        <trans-unit id="39dd44621dc4e48c6ce7a185460bfc4a326f4e14" translate="yes" xml:space="preserve">
          <source>If user information, a host, or a port are given then the string &lt;code&gt;&quot;//&quot;&lt;/code&gt; is appended.</source>
          <target state="translated">사용자 정보, 호스트 또는 포트가 제공되면 &lt;code&gt;&quot;//&quot;&lt;/code&gt; 문자열 이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="4926d30c1bef4c033272a1bcb735cc550193a37e" translate="yes" xml:space="preserve">
          <source>If validation occurred using a DTD while loading the document or while invoking &lt;code&gt;Document.normalizeDocument()&lt;/code&gt;, the infoset &lt;b&gt;[type definition]&lt;/b&gt; value is used to determine if this attribute is a DTD-determined ID attribute using the &lt;a href=&quot;http://www.w3.org/TR/2003/REC-xptr-framework-20030325/#term-ddi&quot;&gt; DTD-determined ID&lt;/a&gt; definition in [&lt;a href=&quot;http://www.w3.org/TR/2003/REC-xptr-framework-20030325/&quot;&gt;XPointer&lt;/a&gt;] .</source>
          <target state="translated">문서를로드하는 동안 또는 &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; 를 호출하는 동안 DTD를 사용하여 유효성 검사가 발생한 경우 infoset &lt;b&gt;[type definition]&lt;/b&gt; 값을 사용하여이 속성이 [ &lt;a href=&quot;http://www.w3.org/TR/2003/REC-xptr-framework-20030325/&quot;&gt;XPointer&lt;/a&gt; 의 &lt;a href=&quot;http://www.w3.org/TR/2003/REC-xptr-framework-20030325/#term-ddi&quot;&gt;DTD 결정 ID&lt;/a&gt; 정의를 사용하는 DTD 결정 ID 속성인지 확인합니다. ].</target>
        </trans-unit>
        <trans-unit id="0867e844172c39dbaac577d2d06858154a79d392" translate="yes" xml:space="preserve">
          <source>If validation occurred using a DTD while loading the document or while invoking &lt;code&gt;Document.normalizeDocument()&lt;/code&gt;, the infoset &lt;b&gt;[type definition]&lt;/b&gt; value is used to determine if this attribute is a DTD-determined ID attribute using the &lt;a href=&quot;https://www.w3.org/TR/2003/REC-xptr-framework-20030325/#term-ddi&quot;&gt; DTD-determined ID&lt;/a&gt; definition in [&lt;a href=&quot;https://www.w3.org/TR/2003/REC-xptr-framework-20030325/&quot;&gt;XPointer&lt;/a&gt;] .</source>
          <target state="translated">문서를로드하는 동안 또는 &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; 를 호출하는 동안 DTD를 사용하여 유효성 검사가 발생한 경우 infoset &lt;b&gt;[type definition]&lt;/b&gt; 값은 [ &lt;a href=&quot;https://www.w3.org/TR/2003/REC-xptr-framework-20030325/&quot;&gt;XPointer&lt;/a&gt; 의 &lt;a href=&quot;https://www.w3.org/TR/2003/REC-xptr-framework-20030325/#term-ddi&quot;&gt;DTD 결정 ID&lt;/a&gt; 정의를 사용하여이 속성이 DTD 결정 ID 속성인지 확인하는 데 사용됩니다. ].</target>
        </trans-unit>
        <trans-unit id="407a294b170fd537f0784112be92112126c292ec" translate="yes" xml:space="preserve">
          <source>If validation occurred using an XML Schema [&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XML Schema Part 1&lt;/a&gt;] while loading the document or while invoking &lt;code&gt;Document.normalizeDocument()&lt;/code&gt;, the post-schema-validation infoset contributions (PSVI contributions) values are used to determine if this attribute is a schema-determined ID attribute using the &lt;a href=&quot;http://www.w3.org/TR/2003/REC-xptr-framework-20030325/#term-sdi&quot;&gt; schema-determined ID&lt;/a&gt; definition in [&lt;a href=&quot;http://www.w3.org/TR/2003/REC-xptr-framework-20030325/&quot;&gt;XPointer&lt;/a&gt;] .</source>
          <target state="translated">문서를로드하는 동안 또는 &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; 를 호출하는 동안 XML 스키마 [ &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XML Schema Part 1&lt;/a&gt; ]을 사용하여 유효성 검사가 발생한 경우 PSVI 컨트 리뷰 션 값을 사용하여이 속성이 스키마인지 확인합니다. [ &lt;a href=&quot;http://www.w3.org/TR/2003/REC-xptr-framework-20030325/&quot;&gt;XPointer&lt;/a&gt; ] 의 &lt;a href=&quot;http://www.w3.org/TR/2003/REC-xptr-framework-20030325/#term-sdi&quot;&gt;스키마 결정 ID&lt;/a&gt; 정의를 사용하여 ID 속성을 결정했습니다 .</target>
        </trans-unit>
        <trans-unit id="7028b3ded466e8183faa9e6728d35ec11b8a50d5" translate="yes" xml:space="preserve">
          <source>If validation occurred using an XML Schema [&lt;a href=&quot;https://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XML Schema Part 1&lt;/a&gt;] while loading the document or while invoking &lt;code&gt;Document.normalizeDocument()&lt;/code&gt;, the post-schema-validation infoset contributions (PSVI contributions) values are used to determine if this attribute is a schema-determined ID attribute using the &lt;a href=&quot;https://www.w3.org/TR/2003/REC-xptr-framework-20030325/#term-sdi&quot;&gt; schema-determined ID&lt;/a&gt; definition in [&lt;a href=&quot;https://www.w3.org/TR/2003/REC-xptr-framework-20030325/&quot;&gt;XPointer&lt;/a&gt;] .</source>
          <target state="translated">문서를로드하는 동안 또는 &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; 를 호출하는 동안 XML 스키마 [ &lt;a href=&quot;https://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XML Schema Part 1&lt;/a&gt; ]을 사용하여 유효성 검사가 발생한 경우 PSVI 기여도 값을 사용하여이 속성이 스키마인지 확인합니다. [ &lt;a href=&quot;https://www.w3.org/TR/2003/REC-xptr-framework-20030325/&quot;&gt;XPointer&lt;/a&gt; ] 의 &lt;a href=&quot;https://www.w3.org/TR/2003/REC-xptr-framework-20030325/#term-sdi&quot;&gt;스키마 결정 ID&lt;/a&gt; 정의를 사용하여 ID 속성을 결정했습니다 .</target>
        </trans-unit>
        <trans-unit id="c0a2c2ff96b927547df533f198a3de74f1ca590a" translate="yes" xml:space="preserve">
          <source>If validation occurred while invoking &lt;code&gt;Document.normalizeDocument()&lt;/code&gt;, all user-determined ID attributes are reset and all attribute nodes ID information are then reevaluated in accordance to the schema used. As a consequence, if the &lt;code&gt;Attr.schemaTypeInfo&lt;/code&gt; attribute contains an ID type, &lt;code&gt;isId&lt;/code&gt; will always return true.</source>
          <target state="translated">&lt;code&gt;Document.normalizeDocument()&lt;/code&gt; 를 호출하는 동안 유효성 검사가 발생하면 모든 사용자 결정 ID 속성이 재설정되고 사용 된 스키마에 따라 모든 속성 노드 ID 정보가 재평가됩니다. 결과적으로 &lt;code&gt;Attr.schemaTypeInfo&lt;/code&gt; 속성에 ID 유형이 포함 된 경우 &lt;code&gt;isId&lt;/code&gt; 는 항상 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="453b86a3d961e3b09d58b9c00df382b3b2c69dca" translate="yes" xml:space="preserve">
          <source>If value is &lt;code&gt;null&lt;/code&gt; this method will remove the property. Changes to client properties are reported with &lt;code&gt;PropertyChange&lt;/code&gt; events. The name of the property (for the sake of PropertyChange events) is &lt;code&gt;key.toString()&lt;/code&gt;.</source>
          <target state="translated">값이 &lt;code&gt;null&lt;/code&gt; 이면 이 메서드는 속성을 제거합니다. 클라이언트 속성에 대한 변경 사항은 &lt;code&gt;PropertyChange&lt;/code&gt; 이벤트 와 함께보고됩니다 . (PropertyChange 이벤트를위한) 속성의 이름은 &lt;code&gt;key.toString()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="924ba8b823bfe686972833d403812243b016b7f5" translate="yes" xml:space="preserve">
          <source>If value is null this method will remove the property.</source>
          <target state="translated">값이 null이면이 메서드는 속성을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="089586f6ef0f3f5a54a1a65889d478428c17c4ec" translate="yes" xml:space="preserve">
          <source>If w == 0, it will be taken to equal Math.round(h*(getWidth()/getHeight())). Similarly, if h == 0, it will be taken to equal Math.round(w*(getHeight()/getWidth())). One of w or h must be non-zero or else an IllegalArgumentException will be thrown.</source>
          <target state="translated">w == 0이면 Math.round (h * (getWidth () / getHeight ()))와 같게됩니다. 마찬가지로, h == 0이면 Math.round (w * (getHeight () / getWidth ()))와 동일하게됩니다. w 또는 h 중 하나는 0이 아니어야합니다. 그렇지 않으면 IllegalArgumentException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3152539e07d896468f8f347e607a93b65706f639" translate="yes" xml:space="preserve">
          <source>If we denote &lt;code&gt;Spring&lt;/code&gt;s as &lt;code&gt;[a, b, c]&lt;/code&gt;, where &lt;code&gt;a &amp;lt;= b &amp;lt;= c&lt;/code&gt;, we can define the same arithmetic operators on &lt;code&gt;Spring&lt;/code&gt;s:</source>
          <target state="translated">우리 나타내는 경우 &lt;code&gt;Spring&lt;/code&gt; 으로들 &lt;code&gt;[a, b, c]&lt;/code&gt; , &lt;code&gt;a &amp;lt;= b &amp;lt;= c&lt;/code&gt; , 우리가 동일한 연산기 정의 할 &lt;code&gt;Spring&lt;/code&gt; 들 :</target>
        </trans-unit>
        <trans-unit id="4992c99e0e1791dc3d662a55a95e751e859f3fe7" translate="yes" xml:space="preserve">
          <source>If we don't find explicit BeanInfo on a class, we use low-level reflection to study the methods of the class and apply standard design patterns to identify property accessors, event sources, or public methods. We then proceed to analyze the class's superclass and add in the information from it (and possibly on up the superclass chain).</source>
          <target state="translated">클래스에서 명시 적 BeanInfo를 찾지 못하면 저수준 반영을 사용하여 클래스의 메소드를 연구하고 표준 디자인 패턴을 적용하여 특성 접근 자, 이벤트 소스 또는 공용 메소드를 식별합니다. 그런 다음 클래스의 수퍼 클래스를 분석하고 그 정보를 추가합니다 (가능하면 수퍼 클래스 체인에 추가).</target>
        </trans-unit>
        <trans-unit id="9e2af0b32378df8ce48674db7f26c1fefa192f17" translate="yes" xml:space="preserve">
          <source>If we wanted to create a collector to tabulate the sum of salaries by department, we could reuse the &quot;sum of salaries&quot; logic using &lt;a href=&quot;collectors#groupingBy(java.util.function.Function,java.util.stream.Collector)&quot;&gt;&lt;code&gt;Collectors.groupingBy(Function, Collector)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">부서별 급여 합계를 표로 만드는 수집기를 만들려면 &lt;a href=&quot;collectors#groupingBy(java.util.function.Function,java.util.stream.Collector)&quot;&gt; &lt;code&gt;Collectors.groupingBy(Function, Collector)&lt;/code&gt; &lt;/a&gt; 사용하여 &quot;급여 합계&quot;논리를 재사용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="249f1ecd847d4ff837d620f68c34ba098b73ce31" translate="yes" xml:space="preserve">
          <source>If we wanted to create a collector to tabulate the sum of salaries by department, we could reuse the &quot;sum of salaries&quot; logic using &lt;a href=&quot;collectors#groupingBy-java.util.function.Function-java.util.stream.Collector-&quot;&gt;&lt;code&gt;Collectors.groupingBy(Function, Collector)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">부서별로 급여의 합계를 표시하는 수집기를 만들려면 &lt;a href=&quot;collectors#groupingBy-java.util.function.Function-java.util.stream.Collector-&quot;&gt; &lt;code&gt;Collectors.groupingBy(Function, Collector)&lt;/code&gt; &lt;/a&gt; 사용하여 &quot;봉급 합계&quot;논리를 재사용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="26d7e844a9f8459934217a70e48f27af2b1b69c5" translate="yes" xml:space="preserve">
          <source>If we wanted to take a stream of strings and concatenate them into a single long string, we &lt;em&gt;could&lt;/em&gt; achieve this with ordinary reduction:</source>
          <target state="translated">문자열 스트림을 가져 와서 하나의 긴 문자열로 연결하려면 일반적인 축소로이를 달성 할 &lt;em&gt;수 있습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="6858e8bffde3c3d0cca8b6c6d185dca102ebc8f4" translate="yes" xml:space="preserve">
          <source>If week year &lt;code&gt;'Y'&lt;/code&gt; is specified and the &lt;a href=&quot;dateformat#getCalendar()&quot;&gt;calendar&lt;/a&gt; doesn't support any &lt;a href=&quot;../util/gregoriancalendar#week_year&quot;&gt; week years&lt;/a&gt;, the calendar year (&lt;code&gt;'y'&lt;/code&gt;) is used instead. The support of week years can be tested with a call to &lt;a href=&quot;dateformat#getCalendar()&quot;&gt;&lt;code&gt;getCalendar()&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;../util/calendar#isWeekDateSupported()&quot;&gt;&lt;code&gt;isWeekDateSupported()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주 연도 &lt;code&gt;'Y'&lt;/code&gt; 가 지정되고 &lt;a href=&quot;dateformat#getCalendar()&quot;&gt;달력&lt;/a&gt; 이 &lt;a href=&quot;../util/gregoriancalendar#week_year&quot;&gt;주 연도를&lt;/a&gt; 지원하지 않는 경우 역년 ( &lt;code&gt;'y'&lt;/code&gt; )이 대신 사용됩니다. &lt;a href=&quot;dateformat#getCalendar()&quot;&gt; &lt;code&gt;getCalendar()&lt;/code&gt; &lt;/a&gt; 호출하여 1 주일 지원 여부를 테스트 할 수 있습니다 . &lt;a href=&quot;../util/calendar#isWeekDateSupported()&quot;&gt; &lt;code&gt;isWeekDateSupported()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="75d993d59371bab20ce135584545b17525307c4a" translate="yes" xml:space="preserve">
          <source>If week year &lt;code&gt;'Y'&lt;/code&gt; is specified and the &lt;a href=&quot;dateformat#getCalendar--&quot;&gt;calendar&lt;/a&gt; doesn't support any &lt;a href=&quot;../util/gregoriancalendar#week_year&quot;&gt; week years&lt;/a&gt;, the calendar year (&lt;code&gt;'y'&lt;/code&gt;) is used instead. The support of week years can be tested with a call to &lt;a href=&quot;dateformat#getCalendar--&quot;&gt;&lt;code&gt;getCalendar()&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;../util/calendar#isWeekDateSupported--&quot;&gt;&lt;code&gt;isWeekDateSupported()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주년 &lt;code&gt;'Y'&lt;/code&gt; 가 지정되고 &lt;a href=&quot;dateformat#getCalendar--&quot;&gt;달력&lt;/a&gt; 이 &lt;a href=&quot;../util/gregoriancalendar#week_year&quot;&gt;주년을&lt;/a&gt; 지원하지 않으면 달력 연도 ( &lt;code&gt;'y'&lt;/code&gt; )가 대신 사용됩니다. 주별 지원은 &lt;a href=&quot;dateformat#getCalendar--&quot;&gt; &lt;code&gt;getCalendar()&lt;/code&gt; &lt;/a&gt; 호출로 테스트 할 수 있습니다 . &lt;a href=&quot;../util/calendar#isWeekDateSupported--&quot;&gt; &lt;code&gt;isWeekDateSupported()&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d9c5076b34c11ad263e543753904a22f31b4f17c" translate="yes" xml:space="preserve">
          <source>If wheel scrolling is enabled, we return true for MouseWheelEvents</source>
          <target state="translated">휠 스크롤링이 활성화되면 MouseWheelEvents에 대해 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e787fae525d53f984b40c242326308dcc608cfbc" translate="yes" xml:space="preserve">
          <source>If writeObject is used to write an object that has been previously written with writeUnshared, the previous writeUnshared operation is treated as if it were a write of a separate object. In other words, ObjectOutputStream will never generate back-references to object data written by calls to writeUnshared.</source>
          <target state="translated">writeObject를 사용하여 이전에 writeUnshared로 작성된 오브젝트를 작성하는 경우 이전 writeUnshared 조작은 별도의 오브젝트의 쓰기 인 것처럼 처리됩니다. 다시 말해 ObjectOutputStream은 writeUnshared 호출로 작성된 객체 데이터에 대한 역 참조를 생성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1298194026547206a4f33e5f08827958de4cdbfe" translate="yes" xml:space="preserve">
          <source>If you are displaying scientific numbers, you may wish to turn on overwrite mode, &lt;code&gt;setOverwriteMode(true)&lt;/code&gt;. For example:</source>
          <target state="translated">과학 숫자를 표시하는 경우 덮어 쓰기 모드 인 &lt;code&gt;setOverwriteMode(true)&lt;/code&gt; 를 켜고 싶을 수 있습니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="33329ee24831b4b830806a0df21b74b91fbe2bdb" translate="yes" xml:space="preserve">
          <source>If you are formatting multiple dates, it is more efficient to get the format and use it multiple times so that the system doesn't have to fetch the information about the local language and country conventions multiple times.</source>
          <target state="translated">여러 날짜의 형식을 지정하는 경우 시스템에서 현지 언어 및 국가 규칙에 대한 정보를 여러 번 가져올 필요가 없도록 형식을 가져와 여러 번 사용하는 것이 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="dd1b56a949a2d40e2ef6096bec1333c2fcd9c70c" translate="yes" xml:space="preserve">
          <source>If you are formatting multiple numbers, it is more efficient to get the format and use it multiple times so that the system doesn't have to fetch the information about the local language and country conventions multiple times.</source>
          <target state="translated">여러 숫자를 형식화하는 경우 시스템에서 현지 언어 및 국가 규칙에 대한 정보를 여러 번 가져올 필요가 없도록 형식을 가져와 여러 번 사용하는 것이 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="7113f4e3c5927c4f914e11ec7edab32e28370f64" translate="yes" xml:space="preserve">
          <source>If you are going to allow the user to enter decimal values, you should either force the DecimalFormat to contain at least one decimal (&lt;code&gt;#.0###&lt;/code&gt;), or allow the value to be invalid &lt;code&gt;setAllowsInvalid(true)&lt;/code&gt;. Otherwise users may not be able to input decimal values.</source>
          <target state="translated">사용자가 10 진수 값을 입력하도록 허용하려면 DecimalFormat에 하나 이상의 10 진수 ( &lt;code&gt;#.0###&lt;/code&gt; ) 가 포함되도록 강제 하거나 값이 잘못된 &lt;code&gt;setAllowsInvalid(true)&lt;/code&gt; 가되도록 허용해야합니다 . 그렇지 않으면 사용자가 10 진수 값을 입력하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63b7be51d58c4b8de0299d6dd7014915988c6f65" translate="yes" xml:space="preserve">
          <source>If you are implementing a &lt;code&gt;BoxLayout&lt;/code&gt; you can find further information and examples in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/box.html&quot;&gt;How to Use BoxLayout&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;BoxLayout&lt;/code&gt; 을 구현하는 경우 &lt;em&gt;Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/box.html&quot;&gt;How to Use BoxLayout&lt;/a&gt; 에서 추가 정보와 예제를 찾을 수 있습니다 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eb38ea8cb37f51a3c6b97487ea4f54e0c8b441fe" translate="yes" xml:space="preserve">
          <source>If you are implementing a &lt;code&gt;BoxLayout&lt;/code&gt; you can find further information and examples in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/layout/box.html&quot;&gt;How to Use BoxLayout&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;BoxLayout&lt;/code&gt; 을 구현하는 경우 &lt;em&gt;Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/layout/box.html&quot;&gt;How to Use BoxLayout&lt;/a&gt; 에서 추가 정보와 예제를 찾을 수 있습니다 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="29a3400a63146f2516d9f23c1631f1d914a11abd" translate="yes" xml:space="preserve">
          <source>If you are implementing a &lt;code&gt;SpringLayout&lt;/code&gt; you can find further information and examples in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/spring.html&quot;&gt;How to Use SpringLayout&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SpringLayout&lt;/code&gt; 을 구현하는 경우 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/spring.html&quot;&gt;How to Use SpringLayout&lt;/a&gt; 에서 추가 정보와 예제를 찾을 수 있습니다 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0ed0c7bdbb0c335b824d8a452eae020a16e9cea5" translate="yes" xml:space="preserve">
          <source>If you are implementing a &lt;code&gt;SpringLayout&lt;/code&gt; you can find further information and examples in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/layout/spring.html&quot;&gt;How to Use SpringLayout&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SpringLayout&lt;/code&gt; 을 구현하는 경우 &lt;em&gt;Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/layout/spring.html&quot;&gt;How to Use SpringLayout&lt;/a&gt; 에서 추가 정보와 예제를 찾을 수 있습니다 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a8b2f33fb2743d0cc710de7c78760dd6832905cb" translate="yes" xml:space="preserve">
          <source>If you are interested in detecting either double-click events or when a user clicks on a node, regardless of whether or not it was selected, we recommend you do the following:</source>
          <target state="translated">선택 여부에 관계없이 두 번 클릭 이벤트 또는 사용자가 노드를 클릭 할 때 감지하려는 경우 다음을 수행하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="34c3bca4893fa1f8ae459c26e85ec0a4d931f6e4" translate="yes" xml:space="preserve">
          <source>If you are interested in knowing when the selection changes implement the &lt;code&gt;TreeSelectionListener&lt;/code&gt; interface and add the instance using the method &lt;code&gt;addTreeSelectionListener&lt;/code&gt;. &lt;code&gt;valueChanged&lt;/code&gt; will be invoked when the selection changes, that is if the user clicks twice on the same node &lt;code&gt;valueChanged&lt;/code&gt; will only be invoked once.</source>
          <target state="translated">선택 변경시기를 알고 싶다면 &lt;code&gt;TreeSelectionListener&lt;/code&gt; 인터페이스를 구현하고 &lt;code&gt;addTreeSelectionListener&lt;/code&gt; 메서드를 사용하여 인스턴스를 추가합니다 . &lt;code&gt;valueChanged&lt;/code&gt; 는 선택이 변경 될 때 호출됩니다. 즉, 사용자가 동일한 노드를 두 번 클릭하면 &lt;code&gt;valueChanged&lt;/code&gt; 는 한 번만 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="cbc79913bd626004719fe8514d3567201aed1ed4" translate="yes" xml:space="preserve">
          <source>If you are interested in the positions of all attributes in the formatted string use the &lt;code&gt;Format&lt;/code&gt; method &lt;code&gt;formatToCharacterIterator&lt;/code&gt;.</source>
          <target state="translated">형식화 된 문자열에서 모든 속성의 위치에 관심이있는 경우 &lt;code&gt;Format&lt;/code&gt; 메소드 &lt;code&gt;formatToCharacterIterator&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c4facb91de8b32639ccf8a84b652bd430e83444a" translate="yes" xml:space="preserve">
          <source>If you are using a monospaced font with spacing for alignment, you can pass the &lt;code&gt;FieldPosition&lt;/code&gt; in your format call, with &lt;code&gt;field&lt;/code&gt; = &lt;code&gt;INTEGER_FIELD&lt;/code&gt;. On output, &lt;code&gt;getEndIndex&lt;/code&gt; will be set to the offset between the last character of the integer and the decimal. Add (desiredSpaceCount - getEndIndex) spaces at the front of the string.</source>
          <target state="translated">간격을두고 공백이있는 고정 폭 글꼴을 사용하는 경우 &lt;code&gt;field&lt;/code&gt; = &lt;code&gt;INTEGER_FIELD&lt;/code&gt; 와 함께 형식 호출에서 &lt;code&gt;FieldPosition&lt;/code&gt; 을 전달할 수 있습니다 . 출력시, &lt;code&gt;getEndIndex&lt;/code&gt; 는 정수의 마지막 문자와 소수 사이의 오프셋으로 설정됩니다. 문자열 앞에 (desiredSpaceCount-getEndIndex) 공백을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="9406e93ec5832fb57d51414b10aab81a761c42ae" translate="yes" xml:space="preserve">
          <source>If you are using proportional fonts, instead of padding with spaces, measure the width of the string in pixels from the start to &lt;code&gt;getEndIndex&lt;/code&gt;. Then move the pen by (desiredPixelWidth - widthToAlignmentPoint) before drawing the text. It also works where there is no decimal, but possibly additional characters at the end, e.g., with parentheses in negative numbers: &quot;(12)&quot; for -12.</source>
          <target state="translated">공백으로 채우는 대신 비례 글꼴을 사용하는 경우 시작에서 &lt;code&gt;getEndIndex&lt;/code&gt; 까지 문자열 너비를 픽셀 단위로 측정하십시오 . 그런 다음 텍스트를 그리기 전에 (desiredPixelWidth-widthToAlignmentPoint)만큼 펜을 이동하십시오. 소수점이없는 경우에도 작동하지만 끝에 추가 문자가있을 수 있습니다 (예 : 음수로 괄호를 사용하는 경우 : -12의 경우 &quot;(12)&quot;).</target>
        </trans-unit>
        <trans-unit id="79735a19a55942b2a6b8b95f3a8ec2359c3ff181" translate="yes" xml:space="preserve">
          <source>If you are using the declaration handler together with a lexical handler, all of the events will occur between the &lt;a href=&quot;lexicalhandler#startDTD(java.lang.String,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;startDTD&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;lexicalhandler#endDTD()&quot;&gt;&lt;code&gt;endDTD&lt;/code&gt;&lt;/a&gt; events.</source>
          <target state="translated">어휘 핸들러와 함께 선언 핸들러를 사용하는 경우 모든 이벤트가 &lt;a href=&quot;lexicalhandler#startDTD(java.lang.String,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;startDTD&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;lexicalhandler#endDTD()&quot;&gt; &lt;code&gt;endDTD&lt;/code&gt; &lt;/a&gt; 이벤트 사이에 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="0f106737aef6a81a4054543d7f78f0e7b7a5e9c4" translate="yes" xml:space="preserve">
          <source>If you decide to create a date-time formatter with a specific format pattern for a specific locale, you can do so with:</source>
          <target state="translated">특정 로케일에 대해 특정 형식 패턴으로 날짜-시간 포맷터를 작성하기로 결정한 경우 다음을 사용하여 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b53011de1b25c0a46d0d3ab82b02d6081131a48" translate="yes" xml:space="preserve">
          <source>If you do not want the text of the button to mirror that of the &lt;code&gt;Action&lt;/code&gt;, set the property &lt;code&gt;hideActionText&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;hideActionText&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, setting the &lt;code&gt;Action&lt;/code&gt; changes the text of the button to &lt;code&gt;null&lt;/code&gt; and any changes to &lt;code&gt;NAME&lt;/code&gt; are ignored. &lt;code&gt;hideActionText&lt;/code&gt; is useful for tool bar buttons that typically only show an &lt;code&gt;Icon&lt;/code&gt;. &lt;code&gt;JToolBar.add(Action)&lt;/code&gt; sets the property to &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;Action&lt;/code&gt; has a non-&lt;code&gt;null&lt;/code&gt; value for &lt;code&gt;LARGE_ICON_KEY&lt;/code&gt; or &lt;code&gt;SMALL_ICON&lt;/code&gt;.</source>
          <target state="translated">버튼의 텍스트가 &lt;code&gt;Action&lt;/code&gt; 의 텍스트를 미러링하지 않도록 하려면 속성을 설정하십시오. &lt;code&gt;hideActionText&lt;/code&gt; 을 &lt;code&gt;true&lt;/code&gt; 로 합니다 . 경우 &lt;code&gt;hideActionText&lt;/code&gt; 가 있다 &lt;code&gt;true&lt;/code&gt; 의 설정 &lt;code&gt;Action&lt;/code&gt; 에 버튼의 텍스트를 변경 &lt;code&gt;null&lt;/code&gt; 과의 변경 &lt;code&gt;NAME&lt;/code&gt; 은 무시됩니다. &lt;code&gt;hideActionText&lt;/code&gt; 는 일반적으로 &lt;code&gt;Icon&lt;/code&gt; 만 표시하는 도구 모음 버튼에 유용합니다 . &lt;code&gt;JToolBar.add(Action)&lt;/code&gt; 은 &lt;code&gt;Action&lt;/code&gt; 에 &lt;code&gt;LARGE_ICON_KEY&lt;/code&gt; 또는 &lt;code&gt;SMALL_ICON&lt;/code&gt; 에 대한 &lt;code&gt;null&lt;/code&gt; 이 아닌 값 이있는 경우 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="559f017d53b18de77b3ca6b79e24fb041f8dcdee" translate="yes" xml:space="preserve">
          <source>If you draw a figure that covers a given rectangle, that figure occupies one extra row of pixels on the right and bottom edges as compared to filling a figure that is bounded by that same rectangle.</source>
          <target state="translated">주어진 사각형을 덮는 그림을 그리는 경우 해당 그림은 동일한 사각형으로 경계가 지정된 그림을 채우는 것과 비교하여 오른쪽과 아래쪽 가장자리에 하나의 추가 픽셀 행을 차지합니다.</target>
        </trans-unit>
        <trans-unit id="265e773e00c7bbde5b66e750f7b5582c9dfd4ec6" translate="yes" xml:space="preserve">
          <source>If you draw a horizontal line along the same</source>
          <target state="translated">같은 방향으로 수평선을 그리면</target>
        </trans-unit>
        <trans-unit id="b89b9b5073a828f26593bdbb0fe34c879267e67e" translate="yes" xml:space="preserve">
          <source>If you experiment with this example, you will see that failing to terminate a statement or variable declaration with a semi-colon will simply fail. An unfinished entry (for example a desired multi-line method) will also just fail after one line. The utilities in &lt;a href=&quot;sourcecodeanalysis&quot;&gt;&lt;code&gt;SourceCodeAnalysis&lt;/code&gt;&lt;/a&gt; provide source boundary and completeness analysis to address cases like those. &lt;code&gt;SourceCodeAnalysis&lt;/code&gt; also provides suggested completions of input, as might be used in tab-completion.</source>
          <target state="translated">이 예제를 실험 해보면 세미콜론을 사용하여 문이나 변수 선언을 종료하지 못하면 단순히 실패한다는 것을 알 수 있습니다. 완료되지 않은 항목 (예 : 원하는 여러 줄 방법)도 한 줄 후에 실패합니다. &lt;a href=&quot;sourcecodeanalysis&quot;&gt; &lt;code&gt;SourceCodeAnalysis&lt;/code&gt; &lt;/a&gt; 의 유틸리티는 이러한 경우를 해결하기 위해 소스 경계 및 완전성 분석을 제공합니다. &lt;code&gt;SourceCodeAnalysis&lt;/code&gt; 는 또한 탭 완성에 사용될 수있는 제안 된 입력 완료를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="070efbcdda3c8c0eac4a300c16551b13a11fe76b" translate="yes" xml:space="preserve">
          <source>If you generated a Java class to represent the above one-line program, its bytecode would look something like this:</source>
          <target state="translated">위의 한 줄 프로그램을 나타내는 Java 클래스를 생성 한 경우 해당 바이트 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a64ac8c1421bcee0c93f8d4f878d8ecbf3d1a551" translate="yes" xml:space="preserve">
          <source>If you have an MBean Server &lt;code&gt;mbs&lt;/code&gt; containing an MBean with &lt;a href=&quot;objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt;&lt;code&gt;name&lt;/code&gt;, and if the MBean's management interface is described by the Java interface &lt;code&gt;MyMBean&lt;/code&gt;, you can construct a proxy for the MBean like this:</source>
          <target state="translated">당신의 MBean 서버가있는 경우 &lt;code&gt;mbs&lt;/code&gt; 와 MBean에 포함 &lt;a href=&quot;objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt; &lt;code&gt;name&lt;/code&gt; 가 MBean의 관리 인터페이스는 인터페이스 자바에 의해 기술되는 경우, 그리고 &lt;code&gt;MyMBean&lt;/code&gt; ,이 같은 MBean의 프록시를 구성 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="88dcf89fa7f0531902cdd760892b5fd0c5d30465" translate="yes" xml:space="preserve">
          <source>If you have an MBean Server &lt;code&gt;mbs&lt;/code&gt; containing an MXBean with &lt;a href=&quot;objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt;&lt;code&gt;name&lt;/code&gt;, and if the MXBean's management interface is described by the Java interface &lt;code&gt;MyMXBean&lt;/code&gt;, you can construct a proxy for the MXBean like this:</source>
          <target state="translated">당신의 MBean 서버가있는 경우 &lt;code&gt;mbs&lt;/code&gt; 와 함께 MXBean의를 포함하는 &lt;a href=&quot;objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt; &lt;code&gt;name&lt;/code&gt; , 그리고의 MXBean의 관리 인터페이스는 자바 인터페이스에 의해 설명되는 경우 &lt;code&gt;MyMXBean&lt;/code&gt; ,이 같은 MXBean의 프록시를 구성 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="aeeadc6bd76712b1cf5b57f384a18bfbf8ff9346" translate="yes" xml:space="preserve">
          <source>If you have an MBeanPermission, it allows operations only if all four of the items match.</source>
          <target state="translated">MBeanPermission이 있으면 네 항목 모두가 일치하는 경우에만 조작을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="dcf357f105ce4230844a06dba35ba909423f4aa5" translate="yes" xml:space="preserve">
          <source>If you have an RMI stub of type &lt;a href=&quot;rmiserver&quot;&gt;&lt;code&gt;RMIServer&lt;/code&gt;&lt;/a&gt;, you can construct an RMI connection directly by using the appropriate constructor of &lt;a href=&quot;rmiconnector&quot;&gt;&lt;code&gt;RMIConnector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;rmiserver&quot;&gt; &lt;code&gt;RMIServer&lt;/code&gt; &lt;/a&gt; 유형의 RMI 스텁이있는 경우 적절한 &lt;a href=&quot;rmiconnector&quot;&gt; &lt;code&gt;RMIConnector&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 RMI 연결을 직접 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="51966aa87be2c5a38906ad52d8d6b38d55316bbf" translate="yes" xml:space="preserve">
          <source>If you have not explicitly set an &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; by way of this method (or a constructor) an &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; and consequently an &lt;code&gt;AbstractFormatter&lt;/code&gt; will be used based on the &lt;code&gt;Class&lt;/code&gt; of the value. &lt;code&gt;NumberFormatter&lt;/code&gt; will be used for &lt;code&gt;Number&lt;/code&gt;s, &lt;code&gt;DateFormatter&lt;/code&gt; will be used for &lt;code&gt;Dates&lt;/code&gt;, otherwise &lt;code&gt;DefaultFormatter&lt;/code&gt; will be used.</source>
          <target state="translated">당신은 명시 적으로 설정하지 않은 경우 &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; 이 방법 (또는 생성자)를의 방법으로 &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; 결과적으로 &lt;code&gt;AbstractFormatter&lt;/code&gt; 에 기초 사용되는 &lt;code&gt;Class&lt;/code&gt; 값을. &lt;code&gt;NumberFormatter&lt;/code&gt; 는 &lt;code&gt;Number&lt;/code&gt; , &lt;code&gt;DateFormatter&lt;/code&gt; 는 &lt;code&gt;Dates&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;DefaultFormatter&lt;/code&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="628fef5a2d7e67a922c2fee7660623e63863dc01" translate="yes" xml:space="preserve">
          <source>If you have problems loading &lt;a href=&quot;documentbuilder&quot;&gt;&lt;code&gt;DocumentBuilder&lt;/code&gt;&lt;/a&gt;s, try:</source>
          <target state="translated">&lt;a href=&quot;documentbuilder&quot;&gt; &lt;code&gt;DocumentBuilder&lt;/code&gt; &lt;/a&gt; 로드에 문제가있는 경우 다음을 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="13fe1ef1b0b48e8f63e70f3f0881b5ccacf15742" translate="yes" xml:space="preserve">
          <source>If you have problems loading &lt;a href=&quot;saxparser&quot;&gt;&lt;code&gt;SAXParser&lt;/code&gt;&lt;/a&gt;s, try:</source>
          <target state="translated">&lt;a href=&quot;saxparser&quot;&gt; &lt;code&gt;SAXParser&lt;/code&gt; 를&lt;/a&gt; 로드하는 데 문제가있는 경우 다음을 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="48c0af5f2625d397edaac10a8eccd95a46e51894" translate="yes" xml:space="preserve">
          <source>If you have problems try:</source>
          <target state="translated">문제가있는 경우 다음을 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="ff3de5910b165b3d1cc56a7e515269c368915b84" translate="yes" xml:space="preserve">
          <source>If you have problems, try:</source>
          <target state="translated">문제가있는 경우 다음을 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="2b73d488c63631c8e1ac17c17d549411373a505e" translate="yes" xml:space="preserve">
          <source>If you have used the nullary constructor the value of this property will be determined for the current locale by way of the &lt;code&gt;Dateformat.getDateInstance()&lt;/code&gt; method.</source>
          <target state="translated">nullary 생성자를 사용한 경우이 속성의 값은 &lt;code&gt;Dateformat.getDateInstance()&lt;/code&gt; 메서드 를 통해 현재 로케일에 대해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="0e0c64ec95cefdb9065bca01d64ac116e1988e2c" translate="yes" xml:space="preserve">
          <source>If you have used the nullary constructor the value of this property will be determined for the current locale by way of the &lt;code&gt;NumberFormat.getNumberInstance()&lt;/code&gt; method.</source>
          <target state="translated">nullary 생성자를 사용한 경우이 속성의 값은 &lt;code&gt;NumberFormat.getNumberInstance()&lt;/code&gt; 메서드 를 통해 현재 로케일에 대해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="3f7d5e542503c18e6a8dbde4d4161605db9d31dd" translate="yes" xml:space="preserve">
          <source>If you implement your own animation thread, you must override this method.</source>
          <target state="translated">자체 애니메이션 스레드를 구현하는 경우이 메서드를 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="96de002b6b1a0357b9cf9b61f8d859126ba1287c" translate="yes" xml:space="preserve">
          <source>If you make an MXBean proxy for a &lt;code&gt;ModuleMXBean&lt;/code&gt; and call its &lt;code&gt;getProduct()&lt;/code&gt; method, the proxy will map the &lt;code&gt;ObjectName&lt;/code&gt; back into a &lt;code&gt;ProductMXBean&lt;/code&gt; by making another MXBean proxy. More formally, when a proxy made with &lt;a href=&quot;jmx#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;&lt;code&gt;JMX.newMXBeanProxy(mbeanServerConnection, objectNameX,
      interfaceX)&lt;/code&gt;&lt;/a&gt; needs to map &lt;code&gt;objectNameY&lt;/code&gt; back into &lt;code&gt;
      interfaceY&lt;/code&gt;, another MXBean interface, it does so with &lt;code&gt;
      JMX.newMXBeanProxy(mbeanServerConnection, objectNameY,
      interfaceY)&lt;/code&gt;. The implementation may return a proxy that was previously created by a call to &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; with the same parameters, or it may create a new proxy.</source>
          <target state="translated">&lt;code&gt;ModuleMXBean&lt;/code&gt; 에 대한 MXBean 프록시를 만들고 &lt;code&gt;getProduct()&lt;/code&gt; 메소드를 호출 하면 프록시는 다른 MXBean 프록시를 만들어 &lt;code&gt;ObjectName&lt;/code&gt; 을 &lt;code&gt;ProductMXBean&lt;/code&gt; 으로 다시 매핑합니다 . 좀 더 공식적으로 &lt;a href=&quot;jmx#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt; &lt;code&gt;JMX.newMXBeanProxy(mbeanServerConnection, objectNameX, interfaceX)&lt;/code&gt; &lt;/a&gt; 로 만든 프록시가 &lt;code&gt;objectNameY&lt;/code&gt; 를 다시 &lt;code&gt; interfaceY&lt;/code&gt; , 다른 MXBean 인터페이스 로 매핑해야하는 경우 동일한 매개 변수를 사용하여 &lt;code&gt; JMX.newMXBeanProxy(mbeanServerConnection, objectNameY, interfaceY)&lt;/code&gt; . 구현은 &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; 에 대한 호출로 이전에 생성 된 프록시를 반환 할 수 있습니다. 사용합니다. 새 프록시를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42e51cf36b22f71cae737ff0a604aab0e89fa946" translate="yes" xml:space="preserve">
          <source>If you make an MXBean proxy for a &lt;code&gt;ModuleMXBean&lt;/code&gt; and call its &lt;code&gt;getProduct()&lt;/code&gt; method, the proxy will map the &lt;code&gt;ObjectName&lt;/code&gt; back into a &lt;code&gt;ProductMXBean&lt;/code&gt; by making another MXBean proxy. More formally, when a proxy made with &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;JMX.newMXBeanProxy(mbeanServerConnection, objectNameX,
      interfaceX)&lt;/code&gt;&lt;/a&gt; needs to map &lt;code&gt;objectNameY&lt;/code&gt; back into &lt;code&gt;interfaceY&lt;/code&gt;, another MXBean interface, it does so with &lt;code&gt;JMX.newMXBeanProxy(mbeanServerConnection, objectNameY,
      interfaceY)&lt;/code&gt;. The implementation may return a proxy that was previously created by a call to &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; with the same parameters, or it may create a new proxy.</source>
          <target state="translated">&lt;code&gt;ModuleMXBean&lt;/code&gt; 에 대해 MXBean 프록시를 작성 하고 &lt;code&gt;getProduct()&lt;/code&gt; 메소드를 호출 하면 프록시는 다른 MXBean 프록시를 작성 하여 &lt;code&gt;ObjectName&lt;/code&gt; 을 &lt;code&gt;ProductMXBean&lt;/code&gt; 에 다시 맵핑합니다 . 더 공식적으로 만든 프록시 때 &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;JMX.newMXBeanProxy(mbeanServerConnection, objectNameX, interfaceX)&lt;/code&gt; &lt;/a&gt; 매핑해야 &lt;code&gt;objectNameY&lt;/code&gt; 에 다시 &lt;code&gt;interfaceY&lt;/code&gt; , 다른 MXBean의 인터페이스를, 그것과 그렇게 &lt;code&gt;JMX.newMXBeanProxy(mbeanServerConnection, objectNameY, interfaceY)&lt;/code&gt; . 구현시 동일한 매개 변수를 사용하여 &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; 를 호출하여 이전에 작성된 프록시를 리턴 하거나 새 프록시를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52ac32f1cd2512eeac38e2d301626d8b2e49025c" translate="yes" xml:space="preserve">
          <source>If you make an MXBean proxy for a &lt;code&gt;ModuleMXBean&lt;/code&gt; and call its &lt;code&gt;setProduct&lt;/code&gt; method, the proxy will map its &lt;code&gt;ProductMXBean&lt;/code&gt; argument back into an &lt;code&gt;ObjectName&lt;/code&gt;. This will only work if the argument is in fact another proxy, for a &lt;code&gt;ProductMXBean&lt;/code&gt; in the same &lt;code&gt;
      MBeanServerConnection&lt;/code&gt;. The proxy can have been returned from another proxy (like &lt;code&gt;ModuleMXBean.getProduct()&lt;/code&gt; which returns a proxy for a &lt;code&gt;ProductMXBean&lt;/code&gt;); or it can have been created by &lt;a href=&quot;jmx#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;&lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt;&lt;/a&gt;; or it can have been created using &lt;a href=&quot;../../../java.base/java/lang/reflect/proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; with an invocation handler that is &lt;a href=&quot;mbeanserverinvocationhandler&quot;&gt;&lt;code&gt;MBeanServerInvocationHandler&lt;/code&gt;&lt;/a&gt; or a subclass.</source>
          <target state="translated">&lt;code&gt;ModuleMXBean&lt;/code&gt; 에 대한 MXBean 프록시를 만들고 &lt;code&gt;setProduct&lt;/code&gt; 메소드를 호출 하면 프록시는 &lt;code&gt;ProductMXBean&lt;/code&gt; 인수를 다시 &lt;code&gt;ObjectName&lt;/code&gt; 에 매핑합니다 . 이것은 동일한 &lt;code&gt; MBeanServerConnection&lt;/code&gt; 의 &lt;code&gt;ProductMXBean&lt;/code&gt; 에 대해 인수가 실제로 다른 프록시 인 경우에만 작동합니다 . 프록시는 &lt;code&gt;ProductMXBean&lt;/code&gt; 에 대한 프록시를 반환하는 &lt;code&gt;ModuleMXBean.getProduct()&lt;/code&gt; 와 같은 다른 프록시에서 반환되었을 수 있습니다 . 또는 &lt;a href=&quot;jmx#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt; &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; 에&lt;/a&gt; 의해 생성 될 수 있습니다 . 또는 &lt;a href=&quot;mbeanserverinvocationhandler&quot;&gt; &lt;code&gt;MBeanServerInvocationHandler&lt;/code&gt; 인&lt;/a&gt; 호출 핸들러와 함께 &lt;a href=&quot;../../../java.base/java/lang/reflect/proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt; 를 사용하여 생성되었을 수 있습니다. 또는 하위 클래스.</target>
        </trans-unit>
        <trans-unit id="36de616fe3a9de0652b022e0f4521a1bc90414b1" translate="yes" xml:space="preserve">
          <source>If you make an MXBean proxy for a &lt;code&gt;ModuleMXBean&lt;/code&gt; and call its &lt;code&gt;setProduct&lt;/code&gt; method, the proxy will map its &lt;code&gt;ProductMXBean&lt;/code&gt; argument back into an &lt;code&gt;ObjectName&lt;/code&gt;. This will only work if the argument is in fact another proxy, for a &lt;code&gt;ProductMXBean&lt;/code&gt; in the same &lt;code&gt;MBeanServerConnection&lt;/code&gt;. The proxy can have been returned from another proxy (like &lt;code&gt;ModuleMXBean.getProduct()&lt;/code&gt; which returns a proxy for a &lt;code&gt;ProductMXBean&lt;/code&gt;); or it can have been created by &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt;&lt;/a&gt;; or it can have been created using &lt;a href=&quot;../../java/lang/reflect/proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; with an invocation handler that is &lt;a href=&quot;mbeanserverinvocationhandler&quot;&gt;&lt;code&gt;MBeanServerInvocationHandler&lt;/code&gt;&lt;/a&gt; or a subclass.</source>
          <target state="translated">&lt;code&gt;ModuleMXBean&lt;/code&gt; 에 대한 MXBean 프록시를 작성 하고 &lt;code&gt;setProduct&lt;/code&gt; 메소드를 호출 하면 프록시는 &lt;code&gt;ProductMXBean&lt;/code&gt; 인수를 다시 &lt;code&gt;ObjectName&lt;/code&gt; 에 맵핑합니다 . 이것은 같은 &lt;code&gt;MBeanServerConnection&lt;/code&gt; 의 &lt;code&gt;ProductMXBean&lt;/code&gt; 에 대한 인수가 실제로 다른 프록시 인 경우에만 작동합니다 . 프록시는 다른 프록시 ( &lt;code&gt;ProductMXBean&lt;/code&gt; 에 대한 프록시를 리턴하는 &lt;code&gt;ModuleMXBean.getProduct()&lt;/code&gt; 와 같은)에서 리턴 될 수 있습니다 . 또는 &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; 에&lt;/a&gt; 의해 작성되었을 수도 있습니다 . 또는 &lt;a href=&quot;mbeanserverinvocationhandler&quot;&gt; &lt;code&gt;MBeanServerInvocationHandler&lt;/code&gt; 인&lt;/a&gt; 호출 핸들러와 함께 &lt;a href=&quot;../../java/lang/reflect/proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt; 를 사용하여 작성할 수 있습니다. 또는 서브 클래스.</target>
        </trans-unit>
        <trans-unit id="3e2b53ae02293acead2a531e5c995698a3d635fc" translate="yes" xml:space="preserve">
          <source>If you need (or choose) to provide a persistence delegate for a bean, you can do so either by using a &lt;a href=&quot;defaultpersistencedelegate&quot;&gt;&lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt;&lt;/a&gt; instance or by creating your own subclass of &lt;code&gt;PersistenceDelegate&lt;/code&gt;. If the only reason a bean needs a persistence delegate is because you want to invoke the bean's constructor with property values as arguments, you can create the bean's persistence delegate with the one-argument &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; constructor. Otherwise, you need to implement your own persistence delegate, for which you're likely to need the following classes:</source>
          <target state="translated">Bean에 대한 지속성 위임을 제공해야하는 경우 (또는 선택) &lt;a href=&quot;defaultpersistencedelegate&quot;&gt; &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; &lt;/a&gt; 인스턴스를 사용하거나 고유 한 &lt;code&gt;PersistenceDelegate&lt;/code&gt; 서브 클래스를 작성 하여 수행 할 수 있습니다 . Bean에 지속성 위임이 필요한 유일한 이유는 특성 값을 인수로 사용하여 Bean의 생성자를 호출하려는 경우 한 인수 &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; 생성자를 사용하여 Bean의 지속성 위임을 작성할 수 있습니다 . 그렇지 않으면 다음과 같은 클래스가 필요할 수있는 자체 지속성 위임을 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="6f489d4a0e8c62f4faa7fab289ad65258b11c6f2" translate="yes" xml:space="preserve">
          <source>If you need to return a value, you can do something like the following:</source>
          <target state="translated">값을 반환해야하는 경우 다음과 같은 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c560280eeb4fbe15243f3c4de692a415c582e8d" translate="yes" xml:space="preserve">
          <source>If you override this in a subclass you should not make permanent changes to the passed in &lt;code&gt;Graphics&lt;/code&gt;. For example, you should not alter the clip &lt;code&gt;Rectangle&lt;/code&gt; or modify the transform. If you need to do these operations you may find it easier to create a new &lt;code&gt;Graphics&lt;/code&gt; from the passed in &lt;code&gt;Graphics&lt;/code&gt; and manipulate it.</source>
          <target state="translated">하위 클래스에서 이것을 재정의하는 경우 전달 된 &lt;code&gt;Graphics&lt;/code&gt; 를 영구적으로 변경해서는 안됩니다 . 예를 들어 클립 &lt;code&gt;Rectangle&lt;/code&gt; 변경 하거나 변형을 수정 해서는 안됩니다 . 이러한 작업을 수행해야하는 경우 전달 된 &lt;code&gt;Graphics&lt;/code&gt; 에서 새 &lt;code&gt;Graphics&lt;/code&gt; 를 만들고 조작하는 것이 더 쉬울 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8f64acd43858b62f5e89d842a5d4eced298f7447" translate="yes" xml:space="preserve">
          <source>If you override this in a subclass you should not make permanent changes to the passed in &lt;code&gt;Graphics&lt;/code&gt;. For example, you should not alter the clip &lt;code&gt;Rectangle&lt;/code&gt; or modify the transform. If you need to do these operations you may find it easier to create a new &lt;code&gt;Graphics&lt;/code&gt; from the passed in &lt;code&gt;Graphics&lt;/code&gt; and manipulate it. Further, if you do not invoke super's implementation you must honor the opaque property, that is if this component is opaque, you must completely fill in the background in an opaque color. If you do not honor the opaque property you will likely see visual artifacts.</source>
          <target state="translated">하위 클래스에서 이것을 재정의하는 경우 전달 된 &lt;code&gt;Graphics&lt;/code&gt; 를 영구적으로 변경해서는 안됩니다 . 예를 들어 클립 &lt;code&gt;Rectangle&lt;/code&gt; 변경 하거나 변형을 수정 해서는 안됩니다 . 이러한 작업을 수행해야하는 경우 전달 된 &lt;code&gt;Graphics&lt;/code&gt; 에서 새 &lt;code&gt;Graphics&lt;/code&gt; 를 만들고 조작하는 것이 더 쉬울 수 있습니다 . 또한 super의 구현을 호출하지 않는 경우 불투명 속성을 적용해야합니다. 즉,이 구성 요소가 불투명 한 경우 배경을 불투명 한 색상으로 완전히 채워야합니다. 불투명 속성을 준수하지 않으면 시각적 아티팩트가 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8c2b1b32a99074d0ed797e0b2d27a5393d1b97c" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkAccept&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">이 메소드를 대체하는 경우 대체 된 메소드가 일반적으로 예외를 발생시키는 지점에서 &lt;code&gt;super.checkAccept&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="32a163e4193ac982fc24cb8d0e24b6ff2e92df6b" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkAwtEventQueueAccess&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">이 메소드를 대체하는 경우 대체 된 메소드가 일반적으로 예외를 발생시키는 시점에서 &lt;code&gt;super.checkAwtEventQueueAccess&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2b0bf23ffdb875cb462ac3762bf0b0f61436b578" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkConnect&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">이 메소드를 대체하는 경우 대체 된 메소드가 일반적으로 예외를 발생시키는 지점에서 &lt;code&gt;super.checkConnect&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9b25c342fd63139aa40f0f94857b7bcc782f9565" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkCreateClassLoader&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">이 메소드를 대체하는 경우 대체 된 메소드가 일반적으로 예외를 발생시키는 시점에서 &lt;code&gt;super.checkCreateClassLoader&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c89616b32751c00600ebd3ccc8535ec049f9fdfa" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkDelete&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">이 메소드를 대체하는 경우 대체 된 메소드가 일반적으로 예외를 발생시키는 지점에서 &lt;code&gt;super.checkDelete&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d275b056a9090e158c634d81a08838570939532f" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkExec&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">이 메소드를 재정의하는 경우 대체 된 메소드가 일반적으로 예외를 발생시키는 시점에서 &lt;code&gt;super.checkExec&lt;/code&gt; 을 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8fad4004790324c59ba0ed5dd06d44da82aaedda" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkExit&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">이 메소드를 대체하는 경우 대체 된 메소드가 일반적으로 예외를 발생시키는 지점에서 &lt;code&gt;super.checkExit&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="efcc6f30743e16455930171e5a781be9f204238f" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkLink&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">이 메소드를 재정의하는 경우 대체 된 메소드가 일반적으로 예외를 발생시키는 지점에서 &lt;code&gt;super.checkLink&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7e6877a896c1d32e57ba90da2c55b2663b1b78ec" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkListen&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">이 메소드를 대체하는 경우 대체 된 메소드가 일반적으로 예외를 발생시키는 지점에서 &lt;code&gt;super.checkListen&lt;/code&gt; 을 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a4d26672886acca0d759af04d237b7c1efbe698e" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkMulticast&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">이 메소드를 대체하는 경우 대체 된 메소드가 일반적으로 예외를 발생시키는 지점에서 &lt;code&gt;super.checkMulticast&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="251fab6eb9acffef8859edc74b706798e78e6e8b" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkPrintJobAccess&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">이 메소드를 대체하는 경우 대체 된 메소드가 일반적으로 예외를 발생시키는 시점에서 &lt;code&gt;super.checkPrintJobAccess&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e10ad25cab0f05b0222d29bd5e36927db4eeb6b2" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkPropertiesAccess&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">이 메소드를 대체하는 경우 대체 된 메소드가 일반적으로 예외를 발생시키는 시점에서 &lt;code&gt;super.checkPropertiesAccess&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a86588c85e4d6399731a04d49863896ed2dc3e28" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkPropertyAccess&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">이 메소드를 대체하는 경우 대체 된 메소드가 일반적으로 예외를 발생시키는 지점에서 &lt;code&gt;super.checkPropertyAccess&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fa5bed7cbc4197994e6709d36a446566db9ba266" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkRead&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">이 메소드를 대체하는 경우 대체 된 메소드가 일반적으로 예외를 발생시키는 지점에서 &lt;code&gt;super.checkRead&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8d57848509497be814c85001e6b95b9646bffc2a" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkSecurityAccess&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">이 메소드를 대체하는 경우 대체 된 메소드가 일반적으로 예외를 발생시키는 시점에서 &lt;code&gt;super.checkSecurityAccess&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="eebab1fb31a31734e30e41e1327c09607085023c" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkSetFactory&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">이 메소드를 대체하는 경우 대체 된 메소드가 일반적으로 예외를 발생시키는 지점에서 &lt;code&gt;super.checkSetFactory&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d2401855174b74221644d242d6cb2acd443f9052" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkSystemClipboardAccess&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">이 메소드를 대체하는 경우 대체 된 메소드가 일반적으로 예외를 발생시키는 지점에서 &lt;code&gt;super.checkSystemClipboardAccess&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d59d3d943d86eedf5cde305b53f409a81429ea16" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkTopLevelWindow&lt;/code&gt; at the point the overridden method would normally return &lt;code&gt;false&lt;/code&gt;, and the value of &lt;code&gt;super.checkTopLevelWindow&lt;/code&gt; should be returned.</source>
          <target state="translated">이 메소드를 대체하는 경우 대체 된 메소드가 일반적으로 &lt;code&gt;false&lt;/code&gt; 를 리턴하는 지점에서 &lt;code&gt;super.checkTopLevelWindow&lt;/code&gt; 를 호출 해야하며 &lt;code&gt;super.checkTopLevelWindow&lt;/code&gt; 의 값 이 리턴되어야합니다.</target>
        </trans-unit>
        <trans-unit id="8cecc78a2cd42444c250869d1b1fffc199c4eb79" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkWrite&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">이 메소드를 재정의하는 경우 대체 된 메소드가 일반적으로 예외를 발생시키는 지점에서 &lt;code&gt;super.checkWrite&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f815873740d2c0dd0b99f8dcd4261d6dddac268a" translate="yes" xml:space="preserve">
          <source>If you position a component along the baseline, but the component does not have a valid baseline, it will be vertically centered in its space. Similarly if you have positioned a component relative to the baseline and none of the components in the row have a valid baseline the component is vertically centered.</source>
          <target state="translated">기준선을 따라 구성 요소를 배치했지만 구성 요소에 유효한 기준선이없는 경우 공간에서 수직으로 중앙에 배치됩니다. 마찬가지로 기준선을 기준으로 구성 요소를 배치했고 행의 어떤 구성 요소에도 유효한 기준선이없는 경우 구성 요소는 수직 중앙에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="8b77207df3b1139f3ea68a88d7c6de19a281d70e" translate="yes" xml:space="preserve">
          <source>If you produce one of these errors, a &lt;code&gt;RuleBasedCollator&lt;/code&gt; throws a &lt;code&gt;ParseException&lt;/code&gt;.</source>
          <target state="translated">이러한 오류 중 하나를 생성하면 &lt;code&gt;RuleBasedCollator&lt;/code&gt; 가 &lt;code&gt;ParseException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="e6f41edec5bd75c329a95672b206803463bfa5e8" translate="yes" xml:space="preserve">
          <source>If you read from a socket input stream after invoking this method on the socket, the stream's &lt;code&gt;available&lt;/code&gt; method will return 0, and its &lt;code&gt;read&lt;/code&gt; methods will return &lt;code&gt;-1&lt;/code&gt; (end of stream).</source>
          <target state="translated">소켓에서이 메소드를 호출 한 후 소켓 입력 스트림에서 읽을 경우 스트림의 &lt;code&gt;available&lt;/code&gt; 메소드는 0을 리턴하고 해당 &lt;code&gt;read&lt;/code&gt; 메소드는 &lt;code&gt;-1&lt;/code&gt; (스트림 끝)을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="2a949b9c219b8703c097ac5ccd1885b82d466a45" translate="yes" xml:space="preserve">
          <source>If you replace the &lt;code&gt;LayoutManager&lt;/code&gt; of the &lt;code&gt;JRootPane&lt;/code&gt;, you are responsible for managing all of these views. So ordinarily you will want to be sure that you change the layout manager for the &lt;code&gt;contentPane&lt;/code&gt; rather than for the &lt;code&gt;JRootPane&lt;/code&gt; itself!</source>
          <target state="translated">당신이 교체 할 경우 &lt;code&gt;LayoutManager&lt;/code&gt; 의 &lt;code&gt;JRootPane&lt;/code&gt; 의를 , 당신은이 모든보기를 관리 할 책임이 있습니다. 따라서 일반적으로 &lt;code&gt;JRootPane&lt;/code&gt; 자체가 아닌 &lt;code&gt;contentPane&lt;/code&gt; 의 레이아웃 관리자를 변경해야 합니다!</target>
        </trans-unit>
        <trans-unit id="7912fd66dd008be635d668d5b08d5f186daf19bc" translate="yes" xml:space="preserve">
          <source>If you simply need to pass a known MIDI byte value as a method parameter, it can be expressed directly as an integer, using (for example) decimal or hexadecimal notation. For instance, to pass the &quot;active sensing&quot; status byte as the first argument to &lt;code&gt;ShortMessage&lt;/code&gt;'s &lt;a href=&quot;shortmessage#setMessage(int)&quot;&gt;&lt;code&gt;setMessage(int)&lt;/code&gt;&lt;/a&gt; method, you can express it as 254 or 0xFE.</source>
          <target state="translated">알려진 MIDI 바이트 값을 메소드 매개 변수로 전달해야하는 경우 10 진수 또는 16 진수 표기법을 사용하여 정수로 직접 표현할 수 있습니다. 예를 들어 &quot;활성 감지&quot;상태 바이트를 &lt;code&gt;ShortMessage&lt;/code&gt; 의 &lt;a href=&quot;shortmessage#setMessage(int)&quot;&gt; &lt;code&gt;setMessage(int)&lt;/code&gt; &lt;/a&gt; 메서드에 대한 첫 번째 인수로 전달하려면 254 또는 0xFE로 표현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9adc7053a82a501abb4cad7dc21865d522ec6e09" translate="yes" xml:space="preserve">
          <source>If you simply need to pass a known MIDI byte value as a method parameter, it can be expressed directly as an integer, using (for example) decimal or hexadecimal notation. For instance, to pass the &quot;active sensing&quot; status byte as the first argument to ShortMessage's &lt;a href=&quot;shortmessage#setMessage-int-&quot;&gt;&lt;code&gt;setMessage(int)&lt;/code&gt;&lt;/a&gt; method, you can express it as 254 or 0xFE.</source>
          <target state="translated">알려진 MIDI 바이트 값을 메소드 매개 변수로 전달해야하는 경우 10 진수 또는 16 진 표기법을 사용하여 정수로 직접 표현할 수 있습니다. 예를 들어, &quot;활성 감지&quot;상태 바이트를 ShortMessage의 &lt;a href=&quot;shortmessage#setMessage-int-&quot;&gt; &lt;code&gt;setMessage(int)&lt;/code&gt; &lt;/a&gt; 메소드 의 첫 번째 인수로 전달하려면 254 또는 0xFE로 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f82211cc64a1f68c6b81cddc89e6c43b654c2f8" translate="yes" xml:space="preserve">
          <source>If you specify a &lt;code&gt;Comparator&lt;/code&gt; that casts its argument to a type other than that provided by the model, a &lt;code&gt;ClassCastException&lt;/code&gt; will be thrown when the data is sorted.</source>
          <target state="translated">인수를 모델에서 제공하는 유형 이외의 유형으로 캐스트 하는 &lt;code&gt;Comparator&lt;/code&gt; 를 지정 하면 데이터가 정렬 될 때 &lt;code&gt;ClassCastException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="91f7306d8499b34903e2cc1875a00f1c655ed83e" translate="yes" xml:space="preserve">
          <source>If you specify a component for a tab, the &lt;code&gt;JTabbedPane&lt;/code&gt; will not render any text or icon you have specified for the tab.</source>
          <target state="translated">탭에 대한 구성 요소를 지정하면 &lt;code&gt;JTabbedPane&lt;/code&gt; 은 탭에 대해 지정한 텍스트 나 아이콘을 렌더링하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4e8fb80f4ed34ae1edf11157185a35c8590ba959" translate="yes" xml:space="preserve">
          <source>If you then wanted to insert a newline at offset 2, you would again use the method &lt;code&gt;insertString()&lt;/code&gt;, as follows:</source>
          <target state="translated">그런 다음 오프셋 2에 개행 문자를 삽입하려면 다음 과 같이 &lt;code&gt;insertString()&lt;/code&gt; 메서드를 다시 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="2650b7bc33c78322e175eacb857a01654ab2bdf1" translate="yes" xml:space="preserve">
          <source>If you try to replace the element at length you will most likely end up with two elements, eg &lt;code&gt;setOuterHTML(getCharacterElement (getLength()),
 &quot;blah&quot;)&lt;/code&gt; will result in two leaf elements at the end, one representing 'blah', and the other representing the end element.</source>
          <target state="translated">요소를 길게 바꾸려고하면 두 요소로 끝날 가능성이 높습니다. 예를 들어 &lt;code&gt;setOuterHTML(getCharacterElement (getLength()), &quot;blah&quot;)&lt;/code&gt; 끝에 두 개의 리프 요소가 생성되고 하나는 'blah'를 나타냅니다. 다른 하나는 끝 요소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8c27d27a49a2f1900e3aeb0cf3f1b19c7796998d" translate="yes" xml:space="preserve">
          <source>If you want the timer to fire only the first time and then stop, invoke &lt;code&gt;setRepeats(false)&lt;/code&gt; on the timer.</source>
          <target state="translated">타이머를 처음 실행 한 다음 중지 하려면 타이머에서 &lt;code&gt;setRepeats(false)&lt;/code&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="36a952ab19f38824917517900fe8a8157e0bfe9c" translate="yes" xml:space="preserve">
          <source>If you wish to implement additional built-in functions, you will have to extend the underlying implementation directly.</source>
          <target state="translated">추가 내장 함수를 구현하려면 기본 구현을 직접 확장해야합니다.</target>
        </trans-unit>
        <trans-unit id="e679b7c6584d18d3576f32c519b50742a591ce10" translate="yes" xml:space="preserve">
          <source>If you would like more information on focus, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt; How to Use the Focus Subsystem&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">포커스에 대한 자세한 내용 은 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt;How to Use the Focus Subsystem을&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a6985a141b45b8ff55590ad316e3c154ea0f10a0" translate="yes" xml:space="preserve">
          <source>If you would like more information on focus, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt; How to Use the Focus Subsystem&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">포커스에 대한 자세한 내용 은 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt;How to Use the Focus Subsystem을&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe1b642d6abf000e5a6aebbe484690cdcc9c2881" translate="yes" xml:space="preserve">
          <source>If you would like to immediately block waiting for a task, you can use constructions of the form &lt;code&gt;result = exec.submit(aCallable).get();&lt;/code&gt;</source>
          <target state="translated">작업 대기를 즉시 차단하려면 &lt;code&gt;result = exec.submit(aCallable).get();&lt;/code&gt; 형식의 구성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="63977c4fa317e4941d4d4939619f0c1013da9fe6" translate="yes" xml:space="preserve">
          <source>If your application is packaged in a jar file, you can use the &quot;SplashScreen-Image&quot; option in a manifest file to show a splash screen. Place the image in the jar archive and specify the path in the option. The path should not have a leading slash.</source>
          <target state="translated">애플리케이션이 jar 파일에 패키지 된 경우 매니페스트 파일에서 &quot;SplashScreen-Image&quot;옵션을 사용하여 스플래시 화면을 표시 할 수 있습니다. jar 아카이브에 이미지를 배치하고 옵션에 경로를 지정하십시오. 경로에는 슬래시가 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="1142a8caafbf1a4fea97b5248fd7d75759e54e3b" translate="yes" xml:space="preserve">
          <source>If {name} is not absent, then expose {name} and {target namespace} properties of the &lt;b&gt;[member type definition]&lt;/b&gt; property;</source>
          <target state="translated">{name}이 없으면 &lt;b&gt;[멤버 유형 정의]&lt;/b&gt; 속성의 {name} 및 {target namespace} 속성을 노출 합니다.</target>
        </trans-unit>
        <trans-unit id="c829170eff2415a44cc461aeb3394365f76bd6a0" translate="yes" xml:space="preserve">
          <source>If {name} is not absent, then expose {name} and {target namespace} properties of the &lt;b&gt;[type definition]&lt;/b&gt; property;</source>
          <target state="translated">{name}이 없으면 &lt;b&gt;[type definition]&lt;/b&gt; 속성의 {name} 및 {target namespace} 속성을 노출 합니다.</target>
        </trans-unit>
        <trans-unit id="0817bc0b871977b1a8c9e94b1ef78e8841f5ed3c" translate="yes" xml:space="preserve">
          <source>If, after possible unwrapping, the new value cannot be converted to the type of the underlying field by an identity or widening conversion, the method throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">가능한 랩핑 해제 후 ID 또는 확장 변환으로 새 값을 기본 필드의 유형으로 변환 할 수없는 경우, 메소드는 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="24cfa618cbc5961c88abb6321f352d54db94f655" translate="yes" xml:space="preserve">
          <source>If, after processing, the locale would exactly match either ja_JP_JP or th_TH_TH with no extensions, the appropriate extensions are added as though the constructor had been called:</source>
          <target state="translated">처리 후 로케일이 확장자가없는 ja_JP_JP 또는 th_TH_TH와 정확히 일치하면 생성자가 호출 된 것처럼 적절한 확장자가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="6c08f223dd80703077dada0f83d9b60721b452cd" translate="yes" xml:space="preserve">
          <source>If, if the address is &lt;code&gt;null&lt;/code&gt;, creates an unbound socket.</source>
          <target state="translated">주소가 &lt;code&gt;null&lt;/code&gt; 인 경우 언 바운드 소켓을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="af0d6e75737e8d512f1d2dc81914343a4327ba77" translate="yes" xml:space="preserve">
          <source>If, on the other hand, the object is of a class implementing &lt;code&gt;Ref&lt;/code&gt;, &lt;code&gt;Blob&lt;/code&gt;, &lt;code&gt;Clob&lt;/code&gt;, &lt;code&gt;Struct&lt;/code&gt;, or &lt;code&gt;Array&lt;/code&gt;, the driver should pass it to the database as a value of the corresponding SQL type.</source>
          <target state="translated">반면에 객체가 &lt;code&gt;Ref&lt;/code&gt; , &lt;code&gt;Blob&lt;/code&gt; , &lt;code&gt;Clob&lt;/code&gt; , &lt;code&gt;Struct&lt;/code&gt; 또는 &lt;code&gt;Array&lt;/code&gt; 를 구현하는 클래스 인 경우 드라이버는 해당 SQL 유형의 값으로 데이터베이스에 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="b7a3944583d471c07a700e6fff18fb04ba3825df" translate="yes" xml:space="preserve">
          <source>If, when the adapter is called, the supplied array argument does not have the correct number of elements, the adapter will throw an &lt;a href=&quot;../illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; instead of invoking the target.</source>
          <target state="translated">어댑터가 호출 될 때 제공된 배열 인수에 올바른 수의 요소가없는 경우 어댑터는 대상을 호출하는 대신 &lt;a href=&quot;../illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt; 을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="5aeb3634e8da1950aa7c188cf3e3aa2eabece572" translate="yes" xml:space="preserve">
          <source>If, when used, the base URI is itself a relative URI, an empty string, or null, the behavior is implementation dependent.</source>
          <target state="translated">사용되는 경우 기본 URI 자체가 상대 URI, 빈 문자열 또는 null 인 경우 동작은 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="50a53d6760e4f33109326a6a1af782ed05797935" translate="yes" xml:space="preserve">
          <source>If:</source>
          <target state="translated">If:</target>
        </trans-unit>
        <trans-unit id="49d406d9e898140c729d7c6200a7c75ad26b7465" translate="yes" xml:space="preserve">
          <source>IfTree</source>
          <target state="translated">IfTree</target>
        </trans-unit>
        <trans-unit id="b72b090877eea86916f15a461dd07d59e2745346" translate="yes" xml:space="preserve">
          <source>Ignoring the many semantic differences from C and C++, this method has memory ordering effects compatible with &lt;code&gt;atomic_thread_fence(memory_order_acquire)&lt;/code&gt;</source>
          <target state="translated">C와 C ++와의 많은 의미 적 차이를 무시하고,이 방법은 &lt;code&gt;atomic_thread_fence(memory_order_acquire)&lt;/code&gt; 와 호환되는 메모리 정렬 효과를 가지고 있습니다.</target>
        </trans-unit>
        <trans-unit id="93c1375be76ead11897a91ef18f5fe064e6e083d" translate="yes" xml:space="preserve">
          <source>Ignoring the many semantic differences from C and C++, this method has memory ordering effects compatible with &lt;code&gt;atomic_thread_fence(memory_order_release)&lt;/code&gt;</source>
          <target state="translated">C 및 C ++와의 많은 의미 적 차이를 무시하고이 메서드는 &lt;code&gt;atomic_thread_fence(memory_order_release)&lt;/code&gt; 와 호환되는 메모리 순서 효과를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="633eeda099a8b512b8b2238c00245486ce758c37" translate="yes" xml:space="preserve">
          <source>Ignoring the many semantic differences from C and C++, this method has memory ordering effects compatible with &lt;code&gt;atomic_thread_fence(memory_order_seq_cst)&lt;/code&gt;</source>
          <target state="translated">C 및 C ++와의 많은 의미 적 차이를 무시하고,이 메서드는 &lt;code&gt;atomic_thread_fence(memory_order_seq_cst)&lt;/code&gt; 와 호환되는 메모리 정렬 효과 를가집니다.</target>
        </trans-unit>
        <trans-unit id="8e9d3ebb4bc58d23e73778efe9aed83591477802" translate="yes" xml:space="preserve">
          <source>Ignoring the many semantic differences from C and C++, this method has memory ordering effects compatible with &lt;code&gt;memory_order_acquire&lt;/code&gt; ordering.</source>
          <target state="translated">C 및 C ++와의 많은 의미 적 차이를 무시하고이 메서드는 &lt;code&gt;memory_order_acquire&lt;/code&gt; 순서 와 호환되는 메모리 순서 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="365387338e41c520bb1c8fb8c29bf1daf9c93bce" translate="yes" xml:space="preserve">
          <source>Ignoring the many semantic differences from C and C++, this method has memory ordering effects compatible with &lt;code&gt;memory_order_release&lt;/code&gt; ordering.</source>
          <target state="translated">C 및 C ++와의 많은 의미 적 차이를 무시하고이 메서드는 &lt;code&gt;memory_order_release&lt;/code&gt; 순서 지정 과 호환되는 메모리 순서 지정 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="54a6d1d497ce81be500ac92faa8ed5f667ef3d58" translate="yes" xml:space="preserve">
          <source>Ignoring the many semantic differences from C and C++, this method has memory ordering effects compatible with &lt;code&gt;memory_order_seq_cst&lt;/code&gt;.</source>
          <target state="translated">C 및 C ++와의 많은 의미 적 차이를 무시하고이 메서드는 &lt;code&gt;memory_order_seq_cst&lt;/code&gt; 와 호환되는 메모리 정렬 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="21847df5c5cb4e7672a041f56f6d078037fceb03" translate="yes" xml:space="preserve">
          <source>IllegalAccessError</source>
          <target state="translated">IllegalAccessError</target>
        </trans-unit>
        <trans-unit id="dd91bcefa6284f552972a0be97fee45225f084db" translate="yes" xml:space="preserve">
          <source>IllegalAccessException</source>
          <target state="translated">IllegalAccessException</target>
        </trans-unit>
        <trans-unit id="07762b664ab5db9b2429f8c1a03a6fdc3ea71fdc" translate="yes" xml:space="preserve">
          <source>IllegalAccessException &amp;mdash; if the member exists but an access check fails</source>
          <target state="translated">IllegalAccessException &amp;mdash; 멤버가 존재하지만 액세스 검사에 실패한 경우</target>
        </trans-unit>
        <trans-unit id="ea0b39c7ffc510626fe28212437d8a57285e5a4c" translate="yes" xml:space="preserve">
          <source>IllegalArgumentException</source>
          <target state="translated">IllegalArgumentException</target>
        </trans-unit>
        <trans-unit id="5cba9941f37a9bb4e09bf14b74224997efa1538b" translate="yes" xml:space="preserve">
          <source>IllegalBlockSizeException</source>
          <target state="translated">IllegalBlockSizeException</target>
        </trans-unit>
        <trans-unit id="72bee4f060e1046316b9d9208f43a1e30f093b56" translate="yes" xml:space="preserve">
          <source>IllegalBlockingModeException</source>
          <target state="translated">IllegalBlockingModeException</target>
        </trans-unit>
        <trans-unit id="e7f30ea2e2be851aa1bd0caa52479522de238235" translate="yes" xml:space="preserve">
          <source>IllegalCallerException</source>
          <target state="translated">IllegalCallerException</target>
        </trans-unit>
        <trans-unit id="728ba9e6dd595a3196c4ac4b622b54d1c837df50" translate="yes" xml:space="preserve">
          <source>IllegalChannelGroupException</source>
          <target state="translated">IllegalChannelGroupException</target>
        </trans-unit>
        <trans-unit id="08856e863e3820d0924f3ef1be4b809519443035" translate="yes" xml:space="preserve">
          <source>IllegalCharsetNameException</source>
          <target state="translated">IllegalCharsetNameException</target>
        </trans-unit>
        <trans-unit id="1ee77982e6e3d907bbc5b59a832da5d3e0e28e63" translate="yes" xml:space="preserve">
          <source>IllegalCharsetNameException.getCharsetName()</source>
          <target state="translated">IllegalCharsetNameException.getCharsetName()</target>
        </trans-unit>
        <trans-unit id="3f2717d0b8f564968056d35a3e99daf87783976b" translate="yes" xml:space="preserve">
          <source>IllegalClassFormatException</source>
          <target state="translated">IllegalClassFormatException</target>
        </trans-unit>
        <trans-unit id="0f0123b56b86fc92b1e47a70455d908f3f5c42ca" translate="yes" xml:space="preserve">
          <source>IllegalComponentStateException</source>
          <target state="translated">IllegalComponentStateException</target>
        </trans-unit>
        <trans-unit id="fe80cbb6afbc531edf6a00e1d04289b48cbd7dc2" translate="yes" xml:space="preserve">
          <source>IllegalConnectorArgumentsException</source>
          <target state="translated">IllegalConnectorArgumentsException</target>
        </trans-unit>
        <trans-unit id="2e88f78ae51e3f9d1be0762af4b7ca8e8f11f783" translate="yes" xml:space="preserve">
          <source>IllegalFormatCodePointException</source>
          <target state="translated">IllegalFormatCodePointException</target>
        </trans-unit>
        <trans-unit id="01e9b728feda93c0804cfc60551e0a73ac67cb23" translate="yes" xml:space="preserve">
          <source>IllegalFormatCodePointException.getCodePoint()</source>
          <target state="translated">IllegalFormatCodePointException.getCodePoint()</target>
        </trans-unit>
        <trans-unit id="b58e3a3bb89019a4239ddcc347dd9da221bd439c" translate="yes" xml:space="preserve">
          <source>IllegalFormatCodePointException.getMessage()</source>
          <target state="translated">IllegalFormatCodePointException.getMessage()</target>
        </trans-unit>
        <trans-unit id="cf694920d369177ecd98f05c63ceccfd014dfb3a" translate="yes" xml:space="preserve">
          <source>IllegalFormatConversionException</source>
          <target state="translated">IllegalFormatConversionException</target>
        </trans-unit>
        <trans-unit id="c2af42e8201376b34c77bc1352974c64f68a5c82" translate="yes" xml:space="preserve">
          <source>IllegalFormatConversionException.getArgumentClass()</source>
          <target state="translated">IllegalFormatConversionException.getArgumentClass()</target>
        </trans-unit>
        <trans-unit id="93cfe6fd63a97ee0cb039d0f535c1bec0f8381bb" translate="yes" xml:space="preserve">
          <source>IllegalFormatConversionException.getConversion()</source>
          <target state="translated">IllegalFormatConversionException.getConversion()</target>
        </trans-unit>
        <trans-unit id="32267ab7467ebe1517e9a90793fb60edfa337c8f" translate="yes" xml:space="preserve">
          <source>IllegalFormatConversionException.getMessage()</source>
          <target state="translated">IllegalFormatConversionException.getMessage()</target>
        </trans-unit>
        <trans-unit id="6fc8f0163cbca539149d1e776e01d43e638d91f1" translate="yes" xml:space="preserve">
          <source>IllegalFormatException</source>
          <target state="translated">IllegalFormatException</target>
        </trans-unit>
        <trans-unit id="c860a8ffb590545dad947d6d0a32f4306f0b6669" translate="yes" xml:space="preserve">
          <source>IllegalFormatFlagsException</source>
          <target state="translated">IllegalFormatFlagsException</target>
        </trans-unit>
        <trans-unit id="5d2373c99c0c78d388f5d343129d99c232ecdb83" translate="yes" xml:space="preserve">
          <source>IllegalFormatFlagsException.getFlags()</source>
          <target state="translated">IllegalFormatFlagsException.getFlags()</target>
        </trans-unit>
        <trans-unit id="64c3da34100c4721209bf9cd2b15ee2ec4a71d99" translate="yes" xml:space="preserve">
          <source>IllegalFormatFlagsException.getMessage()</source>
          <target state="translated">IllegalFormatFlagsException.getMessage()</target>
        </trans-unit>
        <trans-unit id="5b3fb4fc418e6c049903e5b64d9f8e8768116ade" translate="yes" xml:space="preserve">
          <source>IllegalFormatPrecisionException</source>
          <target state="translated">IllegalFormatPrecisionException</target>
        </trans-unit>
        <trans-unit id="4906b7cf69fa0eca0016b6d9e6fa7ee8fa52cb68" translate="yes" xml:space="preserve">
          <source>IllegalFormatPrecisionException.getMessage()</source>
          <target state="translated">IllegalFormatPrecisionException.getMessage()</target>
        </trans-unit>
        <trans-unit id="f8b90130a9087589e9ccb2175b557399069a72e1" translate="yes" xml:space="preserve">
          <source>IllegalFormatPrecisionException.getPrecision()</source>
          <target state="translated">IllegalFormatPrecisionException.getPrecision()</target>
        </trans-unit>
        <trans-unit id="150579129307b1603edaa8afafecdfc747707a0c" translate="yes" xml:space="preserve">
          <source>IllegalFormatWidthException</source>
          <target state="translated">IllegalFormatWidthException</target>
        </trans-unit>
        <trans-unit id="c1a5b579faf7cca9bf3f94878c79fb0f475cf233" translate="yes" xml:space="preserve">
          <source>IllegalFormatWidthException.getMessage()</source>
          <target state="translated">IllegalFormatWidthException.getMessage()</target>
        </trans-unit>
        <trans-unit id="8f52f453c1c984aec8936f3217284e6377d96c69" translate="yes" xml:space="preserve">
          <source>IllegalFormatWidthException.getWidth()</source>
          <target state="translated">IllegalFormatWidthException.getWidth()</target>
        </trans-unit>
        <trans-unit id="32d0389d11053deed8d75849534640e819bb4527" translate="yes" xml:space="preserve">
          <source>IllegalMonitorStateException</source>
          <target state="translated">IllegalMonitorStateException</target>
        </trans-unit>
        <trans-unit id="847476880539b37f0639fe77932a4fcc9349e03e" translate="yes" xml:space="preserve">
          <source>IllegalPathStateException</source>
          <target state="translated">IllegalPathStateException</target>
        </trans-unit>
        <trans-unit id="8a12030eef1ee59e848f8c37cfe509cdd60418bf" translate="yes" xml:space="preserve">
          <source>IllegalReceiveException</source>
          <target state="translated">IllegalReceiveException</target>
        </trans-unit>
        <trans-unit id="e9bfc30e12d08117404111c4265dd4ec5ebc94c4" translate="yes" xml:space="preserve">
          <source>IllegalSelectorException</source>
          <target state="translated">IllegalSelectorException</target>
        </trans-unit>
        <trans-unit id="63b3abc14a5b2c9db143083b94887cb72910c4de" translate="yes" xml:space="preserve">
          <source>IllegalStateException</source>
          <target state="translated">IllegalStateException</target>
        </trans-unit>
        <trans-unit id="ac921dc0ca27355ce8a5b55265b8b7ba05f069f0" translate="yes" xml:space="preserve">
          <source>IllegalThreadStateException</source>
          <target state="translated">IllegalThreadStateException</target>
        </trans-unit>
        <trans-unit id="8034ba5388cd96dfdf225f6f15bf0f1a49f29663" translate="yes" xml:space="preserve">
          <source>IllegalUnbindException</source>
          <target state="translated">IllegalUnbindException</target>
        </trans-unit>
        <trans-unit id="e967f0136e45172f483f99e3bfebb380a3980435" translate="yes" xml:space="preserve">
          <source>IllformedLocaleException</source>
          <target state="translated">IllformedLocaleException</target>
        </trans-unit>
        <trans-unit id="3d9fd3af220073c500b086cc9fbdcb26786c4326" translate="yes" xml:space="preserve">
          <source>IllformedLocaleException.getErrorIndex()</source>
          <target state="translated">IllformedLocaleException.getErrorIndex()</target>
        </trans-unit>
        <trans-unit id="50e19fda0d5b4b74a4a1a1d584e56578693a4ea4" translate="yes" xml:space="preserve">
          <source>Image</source>
          <target state="translated">Image</target>
        </trans-unit>
        <trans-unit id="0ac87287b2cb6da3b3b61e91007c82a3e99e1e15" translate="yes" xml:space="preserve">
          <source>Image Read</source>
          <target state="translated">이미지 읽기</target>
        </trans-unit>
        <trans-unit id="81c623be96be9ab15f333b7fd120f407bab265bc" translate="yes" xml:space="preserve">
          <source>Image Resize</source>
          <target state="translated">이미지 크기 조정</target>
        </trans-unit>
        <trans-unit id="e221fe5a3e6f4ff124e28b73d70e7afa9ab3f313" translate="yes" xml:space="preserve">
          <source>Image Types</source>
          <target state="translated">이미지 타입</target>
        </trans-unit>
        <trans-unit id="f7cfd48529941d535157663a60fbbba31b7cf266" translate="yes" xml:space="preserve">
          <source>Image Write</source>
          <target state="translated">이미지 쓰기</target>
        </trans-unit>
        <trans-unit id="c177d6ae70be09c0df8491f4bb934a1ebcbac143" translate="yes" xml:space="preserve">
          <source>Image format</source>
          <target state="translated">이미지 형식</target>
        </trans-unit>
        <trans-unit id="6aee9e0a545bac355253cbf8e0ad47ff07100f74" translate="yes" xml:space="preserve">
          <source>Image objects created by the Component methods which take a width and height leave their primary buffer of pixels untouched, but have all cached information released much like is done for BufferedImage objects.</source>
          <target state="translated">너비와 높이를 취하는 Component 메서드에 의해 생성 된 이미지 객체는 픽셀의 기본 버퍼를 그대로 유지하지만 BufferedImage 객체에 대해 수행되는 것과 매우 유사한 모든 캐시 된 정보가 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="57d857d37de257a376e5ddad5e7521d04ff5aa1b" translate="yes" xml:space="preserve">
          <source>Image objects created by the Toolkit and Component classes which are loaded from files, URLs or produced by an &lt;a href=&quot;image/imageproducer&quot;&gt;&lt;code&gt;ImageProducer&lt;/code&gt;&lt;/a&gt; are unloaded and all local resources are released. These objects can later be reloaded from their original source as needed when they are rendered, just as when they were first created.</source>
          <target state="translated">파일, URL에서로드되거나 &lt;a href=&quot;image/imageproducer&quot;&gt; &lt;code&gt;ImageProducer&lt;/code&gt; &lt;/a&gt; 에 의해 생성 된 Toolkit 및 Component 클래스에서 생성 된 이미지 객체 는 언로드되고 모든 로컬 리소스가 해제됩니다. 이러한 객체는 처음 생성되었을 때와 마찬가지로 나중에 렌더링 될 때 필요에 따라 원래 소스에서 다시로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3ed144f5da6c1389ccea2ba0f18557df20eae6b" translate="yes" xml:space="preserve">
          <source>Image resolution variant hint key.</source>
          <target state="translated">이미지 해상도 변형 힌트 키입니다.</target>
        </trans-unit>
        <trans-unit id="ac8b9a84b792193e959a8b4ffecf2c028a3806da" translate="yes" xml:space="preserve">
          <source>Image resolution variant hint key. The &lt;code&gt;RESOLUTION_VARIANT&lt;/code&gt; hint controls which image resolution variant should be chosen for image drawing.</source>
          <target state="translated">이미지 해상도 변형 힌트 키입니다. &lt;code&gt;RESOLUTION_VARIANT&lt;/code&gt; 에 있는 화상 해상도 변형 힌트 제어 화상 그리기를 위해 선택되어야한다.</target>
        </trans-unit>
        <trans-unit id="e7b9c9cc705fad55ed70c68de20a2d67124541eb" translate="yes" xml:space="preserve">
          <source>Image resolution variant hint value -- an image resolution variant is chosen based on a default heuristic which may depend on the policies of the platform</source>
          <target state="translated">이미지 해상도 변형 힌트 값-플랫폼의 정책에 따라 달라질 수있는 기본 휴리스틱을 기반으로 이미지 해상도 변형이 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="974a9fd1c8a628aedd947bb0cb4c1f9ca7e7b4bf" translate="yes" xml:space="preserve">
          <source>Image resolution variant hint value -- an image resolution variant is chosen based on the DPI of the screen and the transform in the Graphics2D context.</source>
          <target state="translated">이미지 해상도 변형 힌트 값-이미지 해상도 변형은 화면의 DPI 및 Graphics2D 컨텍스트의 변환을 기반으로 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="7e0b9dbef325958500a62f39e6111248f1fbffee" translate="yes" xml:space="preserve">
          <source>Image resolution variant hint value -- an image resolution variant is chosen based only on the DPI of the screen.</source>
          <target state="translated">이미지 해상도 변형 힌트 값-이미지 해상도 변형은 화면의 DPI만을 기준으로 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="4892351b67a0b8f01884352565cef3d7e348cb61" translate="yes" xml:space="preserve">
          <source>Image resolution variant hint value -- the standard resolution of an image is always used.</source>
          <target state="translated">이미지 해상도 변형 힌트 값-이미지의 표준 해상도가 항상 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="aaac2c0392a2c900804f16f66e9ca1c70515aa2e" translate="yes" xml:space="preserve">
          <source>Image type is not recognized so it must be a customized image.</source>
          <target state="translated">이미지 유형이 인식되지 않으므로 사용자 정의 된 이미지 여야합니다.</target>
        </trans-unit>
        <trans-unit id="7a6125632e280859d05ab254524a7e44eae7814c" translate="yes" xml:space="preserve">
          <source>Image type is not recognized so it must be a customized image. This type is only used as a return value for the getType() method.</source>
          <target state="translated">이미지 유형이 인식되지 않으므로 사용자 정의 된 이미지 여야합니다. 이 유형은 getType () 메서드의 반환 값으로 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="89acf40882c7634e6591debb984e1ecf5dcc20b0" translate="yes" xml:space="preserve">
          <source>ImageCapabilities</source>
          <target state="translated">ImageCapabilities</target>
        </trans-unit>
        <trans-unit id="c7799ce714030501dd68095ad53079bd167859a5" translate="yes" xml:space="preserve">
          <source>ImageConsumer</source>
          <target state="translated">ImageConsumer</target>
        </trans-unit>
        <trans-unit id="bb30cc1f9e723a53cbbd1338e67481705771f818" translate="yes" xml:space="preserve">
          <source>ImageFilter</source>
          <target state="translated">ImageFilter</target>
        </trans-unit>
        <trans-unit id="2b0b6b5e693c18798a5164d2641e99ba7948e431" translate="yes" xml:space="preserve">
          <source>ImageGraphicAttribute</source>
          <target state="translated">ImageGraphicAttribute</target>
        </trans-unit>
        <trans-unit id="9cfa0ee34d7252ba885e40e3d0bae9b6168fffbc" translate="yes" xml:space="preserve">
          <source>ImageIO</source>
          <target state="translated">ImageIO</target>
        </trans-unit>
        <trans-unit id="fb08904deaf392352762e63593d408f30ad7592f" translate="yes" xml:space="preserve">
          <source>ImageIO provides &lt;code&gt;ImageReader&lt;/code&gt; and &lt;code&gt;ImageWriter&lt;/code&gt; plug-ins for the &lt;a href=&quot;http://www.w3.org/Graphics/GIF/spec-gif89a.txt&quot;&gt; Graphics Interchange Format (GIF)&lt;/a&gt; image format. These are the &quot;standard&quot; GIF plug-ins, meaning those that are included in the JRE, as distinct from those included in standard extensions, or 3rd party plug-ins. The following notes and metadata specification apply to the standard plug-ins.</source>
          <target state="translated">ImageIO는 &lt;a href=&quot;http://www.w3.org/Graphics/GIF/spec-gif89a.txt&quot;&gt;GIF (Graphics Interchange Format)&lt;/a&gt; 이미지 형식 을위한 &lt;code&gt;ImageReader&lt;/code&gt; 및 &lt;code&gt;ImageWriter&lt;/code&gt; 플러그인을 제공 합니다. &quot;표준&quot;GIF 플러그인은 표준 확장 또는 타사 플러그인에 포함 된 것과 달리 JRE에 포함 된 것을 의미합니다. 다음 참고 사항 및 메타 데이터 사양은 표준 플러그인에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="49f25b54dbc3dea8f181479f03f0ffa723228847" translate="yes" xml:space="preserve">
          <source>ImageIO provides &lt;code&gt;ImageReader&lt;/code&gt; and &lt;code&gt;ImageWriter&lt;/code&gt;plug-ins for the &lt;a href=&quot;http://www.w3.org/Graphics/GIF/spec-gif89a.txt&quot;&gt; Graphics Interchange Format (GIF)&lt;/a&gt; image format. These are the &quot;standard&quot; GIF plug-ins, meaning those that are included in the JRE, as distinct from those included in standard extensions, or 3rd party plug-ins. The following notes and metadata specification apply to the standard plug-ins.</source>
          <target state="translated">ImageIO는 &lt;a href=&quot;http://www.w3.org/Graphics/GIF/spec-gif89a.txt&quot;&gt;GIF (Graphics Interchange Format)&lt;/a&gt; 이미지 형식 을위한 &lt;code&gt;ImageReader&lt;/code&gt; 및 &lt;code&gt;ImageWriter&lt;/code&gt; 플러그인을 제공 합니다. 이는 &quot;표준&quot;GIF 플러그인으로, 표준 확장 또는 타사 플러그인에 포함 된 것과 구별되는 JRE에 포함 된 플러그인을 의미합니다. 다음 참고 및 메타 데이터 사양은 표준 플러그인에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="9611139f43b0b9983faf1613be6160f0f19f6fe7" translate="yes" xml:space="preserve">
          <source>ImageIO provides &lt;code&gt;ImageReader&lt;/code&gt; and &lt;code&gt;ImageWriter&lt;/code&gt;plug-ins for the &lt;a href=&quot;https://www.w3.org/Graphics/GIF/spec-gif89a.txt&quot;&gt; Graphics Interchange Format (GIF)&lt;/a&gt; image format. These are the &quot;standard&quot; GIF plug-ins, meaning those that are included in the JRE, as distinct from those included in standard extensions, or 3rd party plug-ins. The following notes and metadata specification apply to the standard plug-ins.</source>
          <target state="translated">ImageIO는 &lt;a href=&quot;https://www.w3.org/Graphics/GIF/spec-gif89a.txt&quot;&gt;GIF (Graphics Interchange Format)&lt;/a&gt; 이미지 형식 을위한 &lt;code&gt;ImageReader&lt;/code&gt; 및 &lt;code&gt;ImageWriter&lt;/code&gt; 플러그인을 제공 합니다. 이는 &quot;표준&quot;GIF 플러그인으로, 표준 확장 또는 타사 플러그인에 포함 된 것과 구별되는 JRE에 포함 된 플러그인을 의미합니다. 다음 참고 및 메타 데이터 사양은 표준 플러그인에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="da7c9851db149fedc74fd958b51bbff7e3c3e4cb" translate="yes" xml:space="preserve">
          <source>ImageIO.createImageInputStream()</source>
          <target state="translated">ImageIO.createImageInputStream()</target>
        </trans-unit>
        <trans-unit id="c95c8213476c7bf7c6e8cd2a4156f6aad06b2ede" translate="yes" xml:space="preserve">
          <source>ImageIO.createImageOutputStream()</source>
          <target state="translated">ImageIO.createImageOutputStream()</target>
        </trans-unit>
        <trans-unit id="09fd3c3ef36b3e3b4e27a58c340ac1498c852811" translate="yes" xml:space="preserve">
          <source>ImageIO.getCacheDirectory()</source>
          <target state="translated">ImageIO.getCacheDirectory()</target>
        </trans-unit>
        <trans-unit id="b8d56c96a5e032b322a7dfc9e9dfd4f7d3163210" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageReader()</source>
          <target state="translated">ImageIO.getImageReader()</target>
        </trans-unit>
        <trans-unit id="7e76eb241ccb26f43c390618bae46f5d10b95238" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageReaders()</source>
          <target state="translated">ImageIO.getImageReaders()</target>
        </trans-unit>
        <trans-unit id="44ef81251a0359e10da539ea0c926738bc079d80" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageReadersByFormatName()</source>
          <target state="translated">ImageIO.getImageReadersByFormatName()</target>
        </trans-unit>
        <trans-unit id="64a0bc918bed1738502afad4783faccab9c2186b" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageReadersByMIMEType()</source>
          <target state="translated">ImageIO.getImageReadersByMIMEType()</target>
        </trans-unit>
        <trans-unit id="afa949cd049242f118953cd39b6f5c21cd74bfbe" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageReadersBySuffix()</source>
          <target state="translated">ImageIO.getImageReadersBySuffix()</target>
        </trans-unit>
        <trans-unit id="de6da74d518b0c2784171323506bb5b1ee6d852b" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageTranscoders()</source>
          <target state="translated">ImageIO.getImageTranscoders()</target>
        </trans-unit>
        <trans-unit id="5e29940fba4bc557445fc983f308938e46bd224f" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageWriter()</source>
          <target state="translated">ImageIO.getImageWriter()</target>
        </trans-unit>
        <trans-unit id="56bc830a97378de25ad150d4e503fc48f66dc3ec" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageWriters()</source>
          <target state="translated">ImageIO.getImageWriters()</target>
        </trans-unit>
        <trans-unit id="89db07061cc0732e6ab14d4c068e2d7eceb3e2a9" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageWritersByFormatName()</source>
          <target state="translated">ImageIO.getImageWritersByFormatName()</target>
        </trans-unit>
        <trans-unit id="e750e9b780c2367dccb6426f7d619b865597416c" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageWritersByMIMEType()</source>
          <target state="translated">ImageIO.getImageWritersByMIMEType()</target>
        </trans-unit>
        <trans-unit id="ce7337d2c90e5649fdf14512d0e005a7d112c6cb" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageWritersBySuffix()</source>
          <target state="translated">ImageIO.getImageWritersBySuffix()</target>
        </trans-unit>
        <trans-unit id="fe5c85a5282508405c3f1206d09bed976dd42965" translate="yes" xml:space="preserve">
          <source>ImageIO.getReaderFileSuffixes()</source>
          <target state="translated">ImageIO.getReaderFileSuffixes()</target>
        </trans-unit>
        <trans-unit id="06d8f415a89de32cffca703fc29bbb91572fbc9f" translate="yes" xml:space="preserve">
          <source>ImageIO.getReaderFormatNames()</source>
          <target state="translated">ImageIO.getReaderFormatNames()</target>
        </trans-unit>
        <trans-unit id="0645e1589c3071d7502c318da4c3c2b061194cb7" translate="yes" xml:space="preserve">
          <source>ImageIO.getReaderMIMETypes()</source>
          <target state="translated">ImageIO.getReaderMIMETypes()</target>
        </trans-unit>
        <trans-unit id="07ad9f1d97f6d3e904844a56851b3bcda99b2c43" translate="yes" xml:space="preserve">
          <source>ImageIO.getUseCache()</source>
          <target state="translated">ImageIO.getUseCache()</target>
        </trans-unit>
        <trans-unit id="5169caa39bfd700d76397736d7e285aa33f9c7a7" translate="yes" xml:space="preserve">
          <source>ImageIO.getWriterFileSuffixes()</source>
          <target state="translated">ImageIO.getWriterFileSuffixes()</target>
        </trans-unit>
        <trans-unit id="7e7a97a50c9d05a7a40adf51dd33a857053c65da" translate="yes" xml:space="preserve">
          <source>ImageIO.getWriterFormatNames()</source>
          <target state="translated">ImageIO.getWriterFormatNames()</target>
        </trans-unit>
        <trans-unit id="01db539be762fbfd821ea09f01177e71fd96fc8c" translate="yes" xml:space="preserve">
          <source>ImageIO.getWriterMIMETypes()</source>
          <target state="translated">ImageIO.getWriterMIMETypes()</target>
        </trans-unit>
        <trans-unit id="463d1f56e81833ff31c3d295de1bb6fcfda5275d" translate="yes" xml:space="preserve">
          <source>ImageIO.read()</source>
          <target state="translated">ImageIO.read()</target>
        </trans-unit>
        <trans-unit id="c7d104e02651636725b9f8fe56a25a4d2c570bf1" translate="yes" xml:space="preserve">
          <source>ImageIO.scanForPlugins()</source>
          <target state="translated">ImageIO.scanForPlugins()</target>
        </trans-unit>
        <trans-unit id="d62714299e20b57d1592d993d43407e41aa2164e" translate="yes" xml:space="preserve">
          <source>ImageIO.setCacheDirectory()</source>
          <target state="translated">ImageIO.setCacheDirectory()</target>
        </trans-unit>
        <trans-unit id="792babf03cb2c5b21cc1ccff7d0276833b152238" translate="yes" xml:space="preserve">
          <source>ImageIO.setUseCache()</source>
          <target state="translated">ImageIO.setUseCache()</target>
        </trans-unit>
        <trans-unit id="740030501c0f7240b3fef74e1112008cba5f6479" translate="yes" xml:space="preserve">
          <source>ImageIO.write()</source>
          <target state="translated">ImageIO.write()</target>
        </trans-unit>
        <trans-unit id="f6563667fde6d26e4066fc6aa1228cb0f06c1e71" translate="yes" xml:space="preserve">
          <source>ImageIcon</source>
          <target state="translated">ImageIcon</target>
        </trans-unit>
        <trans-unit id="fdbe48fe33b524022f43b766d4d6e9d66a68197c" translate="yes" xml:space="preserve">
          <source>ImageIcon.AccessibleImageIcon</source>
          <target state="translated">ImageIcon.AccessibleImageIcon</target>
        </trans-unit>
        <trans-unit id="0245e9e67a54a472fc25581d5c9f9f41c5862fe9" translate="yes" xml:space="preserve">
          <source>ImageInputStream</source>
          <target state="translated">ImageInputStream</target>
        </trans-unit>
        <trans-unit id="fdb0db46a0549545118bcfab191f5a01bb7b7856" translate="yes" xml:space="preserve">
          <source>ImageInputStream.close()</source>
          <target state="translated">ImageInputStream.close()</target>
        </trans-unit>
        <trans-unit id="74e92bb6efaabdb3e1364e44d9201955d9a97ecd" translate="yes" xml:space="preserve">
          <source>ImageInputStream.flush()</source>
          <target state="translated">ImageInputStream.flush()</target>
        </trans-unit>
        <trans-unit id="f2c19a159035aa426a1b4fa9ff8fef450cf20186" translate="yes" xml:space="preserve">
          <source>ImageInputStream.flushBefore()</source>
          <target state="translated">ImageInputStream.flushBefore()</target>
        </trans-unit>
        <trans-unit id="3e3dcc8b7874fe66b112c67eb0131282cf5be45d" translate="yes" xml:space="preserve">
          <source>ImageInputStream.getBitOffset()</source>
          <target state="translated">ImageInputStream.getBitOffset()</target>
        </trans-unit>
        <trans-unit id="ed0c413a5cdd9ba2f88e8004941a2b40d5be3aca" translate="yes" xml:space="preserve">
          <source>ImageInputStream.getByteOrder()</source>
          <target state="translated">ImageInputStream.getByteOrder()</target>
        </trans-unit>
        <trans-unit id="a9f86dc54492d048236b77adbd714aeca40c9e51" translate="yes" xml:space="preserve">
          <source>ImageInputStream.getFlushedPosition()</source>
          <target state="translated">ImageInputStream.getFlushedPosition()</target>
        </trans-unit>
        <trans-unit id="7fac3b49b57032a0641c75807a3c18076b5da2b5" translate="yes" xml:space="preserve">
          <source>ImageInputStream.getStreamPosition()</source>
          <target state="translated">ImageInputStream.getStreamPosition()</target>
        </trans-unit>
        <trans-unit id="1acb72377037719672c98f780c77e950ff820492" translate="yes" xml:space="preserve">
          <source>ImageInputStream.isCached()</source>
          <target state="translated">ImageInputStream.isCached()</target>
        </trans-unit>
        <trans-unit id="5f69754bd4d96138a7c22bbedd6aefaabde231a8" translate="yes" xml:space="preserve">
          <source>ImageInputStream.isCachedFile()</source>
          <target state="translated">ImageInputStream.isCachedFile()</target>
        </trans-unit>
        <trans-unit id="5c548a7b471d7672ecb6792e54d5bdc21e4d2387" translate="yes" xml:space="preserve">
          <source>ImageInputStream.isCachedMemory()</source>
          <target state="translated">ImageInputStream.isCachedMemory()</target>
        </trans-unit>
        <trans-unit id="5261bd544299c757e4b1f336fdefee6de42c7b4c" translate="yes" xml:space="preserve">
          <source>ImageInputStream.length()</source>
          <target state="translated">ImageInputStream.length()</target>
        </trans-unit>
        <trans-unit id="cfabbc33a2b60af25762be95a557f5de9c1ba8ea" translate="yes" xml:space="preserve">
          <source>ImageInputStream.mark()</source>
          <target state="translated">ImageInputStream.mark()</target>
        </trans-unit>
        <trans-unit id="07764b9f240c07205fc1c6d6c63a27c1372ff701" translate="yes" xml:space="preserve">
          <source>ImageInputStream.read()</source>
          <target state="translated">ImageInputStream.read()</target>
        </trans-unit>
        <trans-unit id="fb57b6a837e11c39f6562a7a887b53c7dc1c09f5" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readBit()</source>
          <target state="translated">ImageInputStream.readBit()</target>
        </trans-unit>
        <trans-unit id="0917c6385b2ac3e649e5b9a229ff8852a7e03f14" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readBits()</source>
          <target state="translated">ImageInputStream.readBits()</target>
        </trans-unit>
        <trans-unit id="0c8ff8f950621dce17dda1c964b80be167dd2cee" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readBoolean()</source>
          <target state="translated">ImageInputStream.readBoolean()</target>
        </trans-unit>
        <trans-unit id="7a252976aef85f172deca195d4e9d13d7ffeca7b" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readByte()</source>
          <target state="translated">ImageInputStream.readByte()</target>
        </trans-unit>
        <trans-unit id="76a124f0baeafb323fcdeb4600b759c65f8d0176" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readBytes()</source>
          <target state="translated">ImageInputStream.readBytes()</target>
        </trans-unit>
        <trans-unit id="b2e9a3b48f6aeb1974e857f3d1dc37592e8a6ddc" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readChar()</source>
          <target state="translated">ImageInputStream.readChar()</target>
        </trans-unit>
        <trans-unit id="e06adfc4448348b3acddca93f268a2153ab1a3ee" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readDouble()</source>
          <target state="translated">ImageInputStream.readDouble()</target>
        </trans-unit>
        <trans-unit id="257f1ac56d5e6e98ef9a7c125604a204d17b5d18" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readFloat()</source>
          <target state="translated">ImageInputStream.readFloat()</target>
        </trans-unit>
        <trans-unit id="cf9313280471b393d59238085e0efa067c010043" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readFully()</source>
          <target state="translated">ImageInputStream.readFully()</target>
        </trans-unit>
        <trans-unit id="2cf680fda4d5eb74c626d594fd5817dad1ebb713" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readInt()</source>
          <target state="translated">ImageInputStream.readInt()</target>
        </trans-unit>
        <trans-unit id="af33fd30f73a756d5dabfadf948021b8a508cc2c" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readLine()</source>
          <target state="translated">ImageInputStream.readLine()</target>
        </trans-unit>
        <trans-unit id="c502e57ec334956d872b572bcb59a8d15e976afc" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readLong()</source>
          <target state="translated">ImageInputStream.readLong()</target>
        </trans-unit>
        <trans-unit id="560d5375c889ea524187a3cf8aca901ebf457cb1" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readShort()</source>
          <target state="translated">ImageInputStream.readShort()</target>
        </trans-unit>
        <trans-unit id="7c6880473353874f02e9c2ae4fcba87e85333517" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readUTF()</source>
          <target state="translated">ImageInputStream.readUTF()</target>
        </trans-unit>
        <trans-unit id="dab86d8b4038eb19b0b3a15dd627a0d8b836e2c3" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readUnsignedByte()</source>
          <target state="translated">ImageInputStream.readUnsignedByte()</target>
        </trans-unit>
        <trans-unit id="87eb9f587b973471d74845a3ddc84409ec8adf3b" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readUnsignedInt()</source>
          <target state="translated">ImageInputStream.readUnsignedInt()</target>
        </trans-unit>
        <trans-unit id="f35074f6242fa76bc133147208ccc387bac999de" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readUnsignedShort()</source>
          <target state="translated">ImageInputStream.readUnsignedShort()</target>
        </trans-unit>
        <trans-unit id="00a12c946b17c606257256e3e6378b114e2e9c05" translate="yes" xml:space="preserve">
          <source>ImageInputStream.reset()</source>
          <target state="translated">ImageInputStream.reset()</target>
        </trans-unit>
        <trans-unit id="90be6fbdd0622d26d611dfbaa9e05e7fd752415f" translate="yes" xml:space="preserve">
          <source>ImageInputStream.seek()</source>
          <target state="translated">ImageInputStream.seek()</target>
        </trans-unit>
        <trans-unit id="85a0afa0fb736f9a6a3be490b62269fb855570a6" translate="yes" xml:space="preserve">
          <source>ImageInputStream.setBitOffset()</source>
          <target state="translated">ImageInputStream.setBitOffset()</target>
        </trans-unit>
        <trans-unit id="e72841dd92c4486f8ecb47461c0ae520978c01fc" translate="yes" xml:space="preserve">
          <source>ImageInputStream.setByteOrder()</source>
          <target state="translated">ImageInputStream.setByteOrder()</target>
        </trans-unit>
        <trans-unit id="cdbbc1faf80c7c46e3e14c86efeb22e4d29bd35c" translate="yes" xml:space="preserve">
          <source>ImageInputStream.skipBytes()</source>
          <target state="translated">ImageInputStream.skipBytes()</target>
        </trans-unit>
        <trans-unit id="8656b12ebd4577f365f30700a4965ac15bc88eb3" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl</source>
          <target state="translated">ImageInputStreamImpl</target>
        </trans-unit>
        <trans-unit id="e0c3696efb1099cc8eed113cd35fe056c319999b" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.checkClosed()</source>
          <target state="translated">ImageInputStreamImpl.checkClosed()</target>
        </trans-unit>
        <trans-unit id="782595d006aa0abb71963fe9baf1cc70df4da48b" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.close()</source>
          <target state="translated">ImageInputStreamImpl.close()</target>
        </trans-unit>
        <trans-unit id="a27706961795dad7d8923c0071f3c550dbffe802" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.finalize()</source>
          <target state="translated">ImageInputStreamImpl.finalize()</target>
        </trans-unit>
        <trans-unit id="9431ae756c0353adf60204204171a32b3973cc72" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.flush()</source>
          <target state="translated">ImageInputStreamImpl.flush()</target>
        </trans-unit>
        <trans-unit id="168614a85c503d2d4cc8ce626e217d7f77f8faed" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.flushBefore()</source>
          <target state="translated">ImageInputStreamImpl.flushBefore()</target>
        </trans-unit>
        <trans-unit id="981a58447ac21e8c657544ed69ffb81fa14d1e22" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.getBitOffset()</source>
          <target state="translated">ImageInputStreamImpl.getBitOffset()</target>
        </trans-unit>
        <trans-unit id="ba306fe0c0ab7cc5d661d7a915cb0e8fb1a3614e" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.getByteOrder()</source>
          <target state="translated">ImageInputStreamImpl.getByteOrder()</target>
        </trans-unit>
        <trans-unit id="e471eeed2837714dd874a503b9a005465e7d9378" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.getFlushedPosition()</source>
          <target state="translated">ImageInputStreamImpl.getFlushedPosition()</target>
        </trans-unit>
        <trans-unit id="31c54856fb3d87a3c4f706059d932317bdb5fd70" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.getStreamPosition()</source>
          <target state="translated">ImageInputStreamImpl.getStreamPosition()</target>
        </trans-unit>
        <trans-unit id="594592c73635611de1bb90869376a480b3d175fd" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.isCached()</source>
          <target state="translated">ImageInputStreamImpl.isCached()</target>
        </trans-unit>
        <trans-unit id="3e815c25865006ecb81b108a964827b1d0f3cece" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.isCachedFile()</source>
          <target state="translated">ImageInputStreamImpl.isCachedFile()</target>
        </trans-unit>
        <trans-unit id="3243c5d2ecc0d3399d30bc93ff50a264f67ba333" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.isCachedMemory()</source>
          <target state="translated">ImageInputStreamImpl.isCachedMemory()</target>
        </trans-unit>
        <trans-unit id="e5ac4ec2e26729b99cd28a078d488c8935aba2be" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.length()</source>
          <target state="translated">ImageInputStreamImpl.length()</target>
        </trans-unit>
        <trans-unit id="7bbd52b0fbf58b6798e63d8b0c87497a56df66f6" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.mark()</source>
          <target state="translated">ImageInputStreamImpl.mark()</target>
        </trans-unit>
        <trans-unit id="1f55b2cfe2b750f10111c7035e587f1ceb7d09ed" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.read()</source>
          <target state="translated">ImageInputStreamImpl.read()</target>
        </trans-unit>
        <trans-unit id="aabb5f23baeb84e5f6f3ac1ff541b929760ceb92" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readBit()</source>
          <target state="translated">ImageInputStreamImpl.readBit()</target>
        </trans-unit>
        <trans-unit id="f8e0d5cb350a27e01a0e88fcbc5dc0060ae78474" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readBits()</source>
          <target state="translated">ImageInputStreamImpl.readBits()</target>
        </trans-unit>
        <trans-unit id="e68b253d54db897da7d251ca7724e7c3894b0592" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readBoolean()</source>
          <target state="translated">ImageInputStreamImpl.readBoolean()</target>
        </trans-unit>
        <trans-unit id="79329a0abc951e56dcca4a1789034a361ae747f5" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readByte()</source>
          <target state="translated">ImageInputStreamImpl.readByte()</target>
        </trans-unit>
        <trans-unit id="71cdd7657c8e38c8c63465cad9d8fcb058772a3d" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readBytes()</source>
          <target state="translated">ImageInputStreamImpl.readBytes()</target>
        </trans-unit>
        <trans-unit id="96b166e904694f192ebd27a9749b7fab7e1eae91" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readChar()</source>
          <target state="translated">ImageInputStreamImpl.readChar()</target>
        </trans-unit>
        <trans-unit id="42ee4e564f1504e893ac6b1b35e7055913601286" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readDouble()</source>
          <target state="translated">ImageInputStreamImpl.readDouble()</target>
        </trans-unit>
        <trans-unit id="2f8d752842016666b1aedf8121b8348521d31b30" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readFloat()</source>
          <target state="translated">ImageInputStreamImpl.readFloat()</target>
        </trans-unit>
        <trans-unit id="f92136c9a37ae3d989b1909b62111e2e310a8378" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readFully()</source>
          <target state="translated">ImageInputStreamImpl.readFully()</target>
        </trans-unit>
        <trans-unit id="eb6805ccf006d0398ca358e9619d5f5eebda940b" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readInt()</source>
          <target state="translated">ImageInputStreamImpl.readInt()</target>
        </trans-unit>
        <trans-unit id="8642b232a3108c5773bc9627c92583405125e05f" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readLine()</source>
          <target state="translated">ImageInputStreamImpl.readLine()</target>
        </trans-unit>
        <trans-unit id="6f6f63ca415b0e89f8ae5c30c1a3018e595b6068" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readLong()</source>
          <target state="translated">ImageInputStreamImpl.readLong()</target>
        </trans-unit>
        <trans-unit id="b617d67507eca06216066c571114be11c0751e31" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readShort()</source>
          <target state="translated">ImageInputStreamImpl.readShort()</target>
        </trans-unit>
        <trans-unit id="698dc14620f50ae23a50d28ab1fe8525bc7b6c9d" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readUTF()</source>
          <target state="translated">ImageInputStreamImpl.readUTF()</target>
        </trans-unit>
        <trans-unit id="b5f1586569947e262ec3518385bc537415c0e03e" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readUnsignedByte()</source>
          <target state="translated">ImageInputStreamImpl.readUnsignedByte()</target>
        </trans-unit>
        <trans-unit id="d8947b30c253b0c61bc67637afb8d343cc16f7e0" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readUnsignedInt()</source>
          <target state="translated">ImageInputStreamImpl.readUnsignedInt()</target>
        </trans-unit>
        <trans-unit id="8ea1539b573be4ee8f231d4ad18a0d5f1fd114ae" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readUnsignedShort()</source>
          <target state="translated">ImageInputStreamImpl.readUnsignedShort()</target>
        </trans-unit>
        <trans-unit id="e567969379ca63dc0a8d56046863f56c6269e1b5" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.reset()</source>
          <target state="translated">ImageInputStreamImpl.reset()</target>
        </trans-unit>
        <trans-unit id="bb704f2bb8a0ae856f08dff751400fd6014d8230" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.seek()</source>
          <target state="translated">ImageInputStreamImpl.seek()</target>
        </trans-unit>
        <trans-unit id="58977f5c2fcf07fe4e22f6971622098bbb2cf156" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.setBitOffset()</source>
          <target state="translated">ImageInputStreamImpl.setBitOffset()</target>
        </trans-unit>
        <trans-unit id="b2d11387197b1eb752c26b411519321f23b1e961" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.setByteOrder()</source>
          <target state="translated">ImageInputStreamImpl.setByteOrder()</target>
        </trans-unit>
        <trans-unit id="81cbaf9dfa780bf07efce1dbde0370337472ec57" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.skipBytes()</source>
          <target state="translated">ImageInputStreamImpl.skipBytes()</target>
        </trans-unit>
        <trans-unit id="6c016edb7393ee78be323cdee64306abc5c33a76" translate="yes" xml:space="preserve">
          <source>ImageInputStreamSpi</source>
          <target state="translated">ImageInputStreamSpi</target>
        </trans-unit>
        <trans-unit id="98f3c89642183c2de7b74025c9a94892a10c8290" translate="yes" xml:space="preserve">
          <source>ImageInputStreamSpi.canUseCacheFile()</source>
          <target state="translated">ImageInputStreamSpi.canUseCacheFile()</target>
        </trans-unit>
        <trans-unit id="cfc724f334540654cf7bd9bb0273b3b20fb1cab9" translate="yes" xml:space="preserve">
          <source>ImageInputStreamSpi.createInputStreamInstance()</source>
          <target state="translated">ImageInputStreamSpi.createInputStreamInstance()</target>
        </trans-unit>
        <trans-unit id="e28bb6fdf2a6fe5a11d08bbd9dabfed557c79dde" translate="yes" xml:space="preserve">
          <source>ImageInputStreamSpi.getInputClass()</source>
          <target state="translated">ImageInputStreamSpi.getInputClass()</target>
        </trans-unit>
        <trans-unit id="bab49208b3442ad088d417fd6882ece7eb22c453" translate="yes" xml:space="preserve">
          <source>ImageInputStreamSpi.needsCacheFile()</source>
          <target state="translated">ImageInputStreamSpi.needsCacheFile()</target>
        </trans-unit>
        <trans-unit id="3116998e332779eed46a3cf65c07805979ea35a6" translate="yes" xml:space="preserve">
          <source>ImageObserver</source>
          <target state="translated">ImageObserver</target>
        </trans-unit>
        <trans-unit id="83452b3370966adeb8529169778744f6e09ff6af" translate="yes" xml:space="preserve">
          <source>ImageOutputStream</source>
          <target state="translated">ImageOutputStream</target>
        </trans-unit>
        <trans-unit id="9a7340fd79bf4a3bd17e4efc378a302841865164" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.flushBefore()</source>
          <target state="translated">ImageOutputStream.flushBefore()</target>
        </trans-unit>
        <trans-unit id="96d9f9f0c87a58778def7cb4472f9e30f72c9ed1" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.write()</source>
          <target state="translated">ImageOutputStream.write()</target>
        </trans-unit>
        <trans-unit id="2a749a2ab1d342fdbe254964c94d9dc6e10d6335" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeBit()</source>
          <target state="translated">ImageOutputStream.writeBit()</target>
        </trans-unit>
        <trans-unit id="a6bd0332e894f3faebb742ce886bef1b0ca3072b" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeBits()</source>
          <target state="translated">ImageOutputStream.writeBits()</target>
        </trans-unit>
        <trans-unit id="8eea4d74a7715f2548485de45d4641de28d84d29" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeBoolean()</source>
          <target state="translated">ImageOutputStream.writeBoolean()</target>
        </trans-unit>
        <trans-unit id="340a472f842b04b86af885671257d5256986b53d" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeByte()</source>
          <target state="translated">ImageOutputStream.writeByte()</target>
        </trans-unit>
        <trans-unit id="22db935c085af8d2c472ea2849517b813ad1f3ed" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeBytes()</source>
          <target state="translated">ImageOutputStream.writeBytes()</target>
        </trans-unit>
        <trans-unit id="6d08d9de75de11b5d66b87c7b7d2d68abb4df88c" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeChar()</source>
          <target state="translated">ImageOutputStream.writeChar()</target>
        </trans-unit>
        <trans-unit id="75afc2031ad65ed5b89bec90a825f5be8fa0d014" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeChars()</source>
          <target state="translated">ImageOutputStream.writeChars()</target>
        </trans-unit>
        <trans-unit id="fb2b58ece7b590e768f813dc298c99bf314a3232" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeDouble()</source>
          <target state="translated">ImageOutputStream.writeDouble()</target>
        </trans-unit>
        <trans-unit id="b482f3b68f7be8d4a57bdd6647d17e30c247283d" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeDoubles()</source>
          <target state="translated">ImageOutputStream.writeDoubles()</target>
        </trans-unit>
        <trans-unit id="43acf80f83723f299ebf51426b7fef88628108c7" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeFloat()</source>
          <target state="translated">ImageOutputStream.writeFloat()</target>
        </trans-unit>
        <trans-unit id="42313ffd030977d4a3eadc27f5b1a50e373481aa" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeFloats()</source>
          <target state="translated">ImageOutputStream.writeFloats()</target>
        </trans-unit>
        <trans-unit id="d86afeab1a6a45ac1f3cede360cec9c35ddfa0e2" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeInt()</source>
          <target state="translated">ImageOutputStream.writeInt()</target>
        </trans-unit>
        <trans-unit id="b75d0d72ffb9a076f3698444a5c3d154adcd2744" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeInts()</source>
          <target state="translated">ImageOutputStream.writeInts()</target>
        </trans-unit>
        <trans-unit id="f4292b5040fa930bcf8f0f53bf7f055a1ac9c78a" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeLong()</source>
          <target state="translated">ImageOutputStream.writeLong()</target>
        </trans-unit>
        <trans-unit id="0246e3aa4a07aed1c640740521fc0870e0ff5c0f" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeLongs()</source>
          <target state="translated">ImageOutputStream.writeLongs()</target>
        </trans-unit>
        <trans-unit id="1f3727fa7152d18143df7ebe1ebb2c9947230c62" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeShort()</source>
          <target state="translated">ImageOutputStream.writeShort()</target>
        </trans-unit>
        <trans-unit id="491e72b4dcac099107b1db722933b0052128b231" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeShorts()</source>
          <target state="translated">ImageOutputStream.writeShorts()</target>
        </trans-unit>
        <trans-unit id="e08fcb28ace3d3e84578214b9b4d4d83bcc71a48" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeUTF()</source>
          <target state="translated">ImageOutputStream.writeUTF()</target>
        </trans-unit>
        <trans-unit id="72b99a9a0945d72b23e4c7cd15e0ca4370caa83d" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl</source>
          <target state="translated">ImageOutputStreamImpl</target>
        </trans-unit>
        <trans-unit id="b94df9c7619840c20a9af8bb6d7976dc537c692d" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.flushBits()</source>
          <target state="translated">ImageOutputStreamImpl.flushBits()</target>
        </trans-unit>
        <trans-unit id="730f1cdbd189048de523719e5b0ff1f89fa69f1a" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.write()</source>
          <target state="translated">ImageOutputStreamImpl.write()</target>
        </trans-unit>
        <trans-unit id="f1b3f1b6c632622f8e619e2ac5fbfd01ca7c1ee5" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeBit()</source>
          <target state="translated">ImageOutputStreamImpl.writeBit()</target>
        </trans-unit>
        <trans-unit id="9393ba275c9ea1f015e3d4ab25fdde23e0ac1067" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeBits()</source>
          <target state="translated">ImageOutputStreamImpl.writeBits()</target>
        </trans-unit>
        <trans-unit id="d3c067d1d56c1470e93a5bf33fa3280efe069058" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeBoolean()</source>
          <target state="translated">ImageOutputStreamImpl.writeBoolean()</target>
        </trans-unit>
        <trans-unit id="f15ad350c4b938293d993a25eba797c8db998a3e" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeByte()</source>
          <target state="translated">ImageOutputStreamImpl.writeByte()</target>
        </trans-unit>
        <trans-unit id="095bb6cefb5354d2f7c4f0a22c12443ef62ac1dc" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeBytes()</source>
          <target state="translated">ImageOutputStreamImpl.writeBytes()</target>
        </trans-unit>
        <trans-unit id="521e6614a439aa71cfcbbacfc51409ff6ad51c36" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeChar()</source>
          <target state="translated">ImageOutputStreamImpl.writeChar()</target>
        </trans-unit>
        <trans-unit id="334dd26e9aa2141489f61cebfce3d91fd9810de8" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeChars()</source>
          <target state="translated">ImageOutputStreamImpl.writeChars()</target>
        </trans-unit>
        <trans-unit id="2c9a5b7a1ec440545f7662de460fbeadfd3d7ece" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeDouble()</source>
          <target state="translated">ImageOutputStreamImpl.writeDouble()</target>
        </trans-unit>
        <trans-unit id="e1333d7825287cc0f22a19657c00a1a290595890" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeDoubles()</source>
          <target state="translated">ImageOutputStreamImpl.writeDoubles()</target>
        </trans-unit>
        <trans-unit id="197e47ac604fffd79dd1b7217f6c18e8d617db02" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeFloat()</source>
          <target state="translated">ImageOutputStreamImpl.writeFloat()</target>
        </trans-unit>
        <trans-unit id="94642ce32c1a3ed90a2320a50906426c9bef3109" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeFloats()</source>
          <target state="translated">ImageOutputStreamImpl.writeFloats()</target>
        </trans-unit>
        <trans-unit id="cf0acbd914d5ff262a81300aa0318afe64266461" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeInt()</source>
          <target state="translated">ImageOutputStreamImpl.writeInt()</target>
        </trans-unit>
        <trans-unit id="a3cfd025a02e305b2a2830ae1b5194f4b274eed9" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeInts()</source>
          <target state="translated">ImageOutputStreamImpl.writeInts()</target>
        </trans-unit>
        <trans-unit id="dba6391684abecf926b01dfb902078ced0cfb8ca" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeLong()</source>
          <target state="translated">ImageOutputStreamImpl.writeLong()</target>
        </trans-unit>
        <trans-unit id="9e426a86c094e0adb14df7ac3b38f0e9d52c28c2" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeLongs()</source>
          <target state="translated">ImageOutputStreamImpl.writeLongs()</target>
        </trans-unit>
        <trans-unit id="0cf54f61217e13cdd0f2c560981703c79d6e0231" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeShort()</source>
          <target state="translated">ImageOutputStreamImpl.writeShort()</target>
        </trans-unit>
        <trans-unit id="c025774860a58ffe651c29b29ac3ef8721bbc953" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeShorts()</source>
          <target state="translated">ImageOutputStreamImpl.writeShorts()</target>
        </trans-unit>
        <trans-unit id="147c12a0a914540fbe428bd115e9f1f47a62611f" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeUTF()</source>
          <target state="translated">ImageOutputStreamImpl.writeUTF()</target>
        </trans-unit>
        <trans-unit id="5b31c596804eae9fe47d2e389a77a1a15db3fcac" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamSpi</source>
          <target state="translated">ImageOutputStreamSpi</target>
        </trans-unit>
        <trans-unit id="c41355ca3fef446e456f7414fb6307475fd139b1" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamSpi.canUseCacheFile()</source>
          <target state="translated">ImageOutputStreamSpi.canUseCacheFile()</target>
        </trans-unit>
        <trans-unit id="a6c7fcb65468a4ded2040925c5b97fb20b574f69" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamSpi.createOutputStreamInstance()</source>
          <target state="translated">ImageOutputStreamSpi.createOutputStreamInstance()</target>
        </trans-unit>
        <trans-unit id="67d7de5675588e83404da953f0e8085b1083f41d" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamSpi.getOutputClass()</source>
          <target state="translated">ImageOutputStreamSpi.getOutputClass()</target>
        </trans-unit>
        <trans-unit id="2058ca306ee8f78dfbd63327e0de312210c1b1c1" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamSpi.needsCacheFile()</source>
          <target state="translated">ImageOutputStreamSpi.needsCacheFile()</target>
        </trans-unit>
        <trans-unit id="251888c3a686da692a9551719446147dd34da96c" translate="yes" xml:space="preserve">
          <source>ImageProducer</source>
          <target state="translated">ImageProducer</target>
        </trans-unit>
        <trans-unit id="cd2cd26b1dd4bf4d9188ff3707eaaa081bf1035f" translate="yes" xml:space="preserve">
          <source>ImageReadParam</source>
          <target state="translated">ImageReadParam</target>
        </trans-unit>
        <trans-unit id="1201d8d62bd34eabb029c751e075ad9c3a694230" translate="yes" xml:space="preserve">
          <source>ImageReadParam.canSetSourceRenderSize()</source>
          <target state="translated">ImageReadParam.canSetSourceRenderSize()</target>
        </trans-unit>
        <trans-unit id="7d70a5327a4b03f33e450ac9974dd7150da0cb22" translate="yes" xml:space="preserve">
          <source>ImageReadParam.getDestination()</source>
          <target state="translated">ImageReadParam.getDestination()</target>
        </trans-unit>
        <trans-unit id="56b8b8fa4c49d4b3d42080bf6e079d7e7c47736d" translate="yes" xml:space="preserve">
          <source>ImageReadParam.getDestinationBands()</source>
          <target state="translated">ImageReadParam.getDestinationBands()</target>
        </trans-unit>
        <trans-unit id="10b87be325ee80f458950abf026570aa1721b8e0" translate="yes" xml:space="preserve">
          <source>ImageReadParam.getSourceMaxProgressivePass()</source>
          <target state="translated">ImageReadParam.getSourceMaxProgressivePass()</target>
        </trans-unit>
        <trans-unit id="64baebae8df2c30bdcaa009fa90a8fafaf8374a0" translate="yes" xml:space="preserve">
          <source>ImageReadParam.getSourceMinProgressivePass()</source>
          <target state="translated">ImageReadParam.getSourceMinProgressivePass()</target>
        </trans-unit>
        <trans-unit id="2a9e30e7ab09c34d21976c697343b0ddb7fdf4c2" translate="yes" xml:space="preserve">
          <source>ImageReadParam.getSourceNumProgressivePasses()</source>
          <target state="translated">ImageReadParam.getSourceNumProgressivePasses()</target>
        </trans-unit>
        <trans-unit id="979e6351f23c4d15b32fcfc2dd1e2e42c39caf1a" translate="yes" xml:space="preserve">
          <source>ImageReadParam.getSourceRenderSize()</source>
          <target state="translated">ImageReadParam.getSourceRenderSize()</target>
        </trans-unit>
        <trans-unit id="8fa94c9268843bf28b601aec3e833b199101d137" translate="yes" xml:space="preserve">
          <source>ImageReadParam.setDestination()</source>
          <target state="translated">ImageReadParam.setDestination()</target>
        </trans-unit>
        <trans-unit id="d26f0854d8589f1ab523c1d34c410a49623f03a2" translate="yes" xml:space="preserve">
          <source>ImageReadParam.setDestinationBands()</source>
          <target state="translated">ImageReadParam.setDestinationBands()</target>
        </trans-unit>
        <trans-unit id="4a5c79c15a0e6dd8aa1340f4967dd5b96b0ea9ce" translate="yes" xml:space="preserve">
          <source>ImageReadParam.setDestinationType()</source>
          <target state="translated">ImageReadParam.setDestinationType()</target>
        </trans-unit>
        <trans-unit id="f3b2bae255bfd5a49cdea25971232f60ab5f428b" translate="yes" xml:space="preserve">
          <source>ImageReadParam.setSourceProgressivePasses()</source>
          <target state="translated">ImageReadParam.setSourceProgressivePasses()</target>
        </trans-unit>
        <trans-unit id="f81a8a635bd5c447a283fcda74554a5cf0e1a36d" translate="yes" xml:space="preserve">
          <source>ImageReadParam.setSourceRenderSize()</source>
          <target state="translated">ImageReadParam.setSourceRenderSize()</target>
        </trans-unit>
        <trans-unit id="f906495681b83a7a65361e49916ce979a0426c83" translate="yes" xml:space="preserve">
          <source>ImageReader</source>
          <target state="translated">ImageReader</target>
        </trans-unit>
        <trans-unit id="dc96d2a37589b461a1a2f4153e1a69d22416ed5b" translate="yes" xml:space="preserve">
          <source>ImageReader.abort()</source>
          <target state="translated">ImageReader.abort()</target>
        </trans-unit>
        <trans-unit id="83f2ec08c69f7b5fc978c20bd79a32f0b4f2197c" translate="yes" xml:space="preserve">
          <source>ImageReader.abortRequested()</source>
          <target state="translated">ImageReader.abortRequested()</target>
        </trans-unit>
        <trans-unit id="5ffcbeadfa0c662e8519d7f22e35f802a4161aeb" translate="yes" xml:space="preserve">
          <source>ImageReader.addIIOReadProgressListener()</source>
          <target state="translated">ImageReader.addIIOReadProgressListener()</target>
        </trans-unit>
        <trans-unit id="55ab4d1ac22f560753cab40ba690b36dc7b0e87d" translate="yes" xml:space="preserve">
          <source>ImageReader.addIIOReadUpdateListener()</source>
          <target state="translated">ImageReader.addIIOReadUpdateListener()</target>
        </trans-unit>
        <trans-unit id="00f5ad390becce52c29dd2e5c4c6ffea976f7d75" translate="yes" xml:space="preserve">
          <source>ImageReader.addIIOReadWarningListener()</source>
          <target state="translated">ImageReader.addIIOReadWarningListener()</target>
        </trans-unit>
        <trans-unit id="04557cc6b974931172aa306cd0120d6bdfcb7944" translate="yes" xml:space="preserve">
          <source>ImageReader.canReadRaster()</source>
          <target state="translated">ImageReader.canReadRaster()</target>
        </trans-unit>
        <trans-unit id="bb47920d771bacef735a7542995c7120f95f227c" translate="yes" xml:space="preserve">
          <source>ImageReader.checkReadParamBandSettings()</source>
          <target state="translated">ImageReader.checkReadParamBandSettings()</target>
        </trans-unit>
        <trans-unit id="1c6ce2ff37299628966cfe31bee7c6648fa58294" translate="yes" xml:space="preserve">
          <source>ImageReader.clearAbortRequest()</source>
          <target state="translated">ImageReader.clearAbortRequest()</target>
        </trans-unit>
        <trans-unit id="60e428b87efa48f5947edb064d44a48fefd6dc8c" translate="yes" xml:space="preserve">
          <source>ImageReader.computeRegions()</source>
          <target state="translated">ImageReader.computeRegions()</target>
        </trans-unit>
        <trans-unit id="0b02305cba48707110942e47479fd4de96aaba83" translate="yes" xml:space="preserve">
          <source>ImageReader.dispose()</source>
          <target state="translated">ImageReader.dispose()</target>
        </trans-unit>
        <trans-unit id="862f19c5fec013bdca9d3acaa7d1d02fe6e60221" translate="yes" xml:space="preserve">
          <source>ImageReader.getAspectRatio()</source>
          <target state="translated">ImageReader.getAspectRatio()</target>
        </trans-unit>
        <trans-unit id="9f7937f38c6919792f25c0c297d3c2d9560c302a" translate="yes" xml:space="preserve">
          <source>ImageReader.getAvailableLocales()</source>
          <target state="translated">ImageReader.getAvailableLocales()</target>
        </trans-unit>
        <trans-unit id="6ef2cfc3e9cee276d76912054d603565ad80e897" translate="yes" xml:space="preserve">
          <source>ImageReader.getDefaultReadParam()</source>
          <target state="translated">ImageReader.getDefaultReadParam()</target>
        </trans-unit>
        <trans-unit id="a6f7e6bef5ae2e033bf2d0309e37885b20a2a7a4" translate="yes" xml:space="preserve">
          <source>ImageReader.getDestination()</source>
          <target state="translated">ImageReader.getDestination()</target>
        </trans-unit>
        <trans-unit id="ed6f46842d3eb44cf80250063a801e8ee871b0f5" translate="yes" xml:space="preserve">
          <source>ImageReader.getFormatName()</source>
          <target state="translated">ImageReader.getFormatName()</target>
        </trans-unit>
        <trans-unit id="af5e6ef5861bb73f88c830f220e29d57f93ef484" translate="yes" xml:space="preserve">
          <source>ImageReader.getHeight()</source>
          <target state="translated">ImageReader.getHeight()</target>
        </trans-unit>
        <trans-unit id="67fc0c0f685a171c6be1b5b4630458248a66bb51" translate="yes" xml:space="preserve">
          <source>ImageReader.getImageMetadata()</source>
          <target state="translated">ImageReader.getImageMetadata()</target>
        </trans-unit>
        <trans-unit id="0cd9e56e497f979ded19cd949256048ec05a8908" translate="yes" xml:space="preserve">
          <source>ImageReader.getImageTypes()</source>
          <target state="translated">ImageReader.getImageTypes()</target>
        </trans-unit>
        <trans-unit id="89ab2b0df8dec8b194c46f9eed32ea752dcd253a" translate="yes" xml:space="preserve">
          <source>ImageReader.getInput()</source>
          <target state="translated">ImageReader.getInput()</target>
        </trans-unit>
        <trans-unit id="7645c286f114ef27413cc9252235a04024cffeba" translate="yes" xml:space="preserve">
          <source>ImageReader.getLocale()</source>
          <target state="translated">ImageReader.getLocale()</target>
        </trans-unit>
        <trans-unit id="05881ac0d7c50df1fedce4c2265168876a1dd69f" translate="yes" xml:space="preserve">
          <source>ImageReader.getMinIndex()</source>
          <target state="translated">ImageReader.getMinIndex()</target>
        </trans-unit>
        <trans-unit id="f5fb554919b40b5bf590e52fdf32545a178965ec" translate="yes" xml:space="preserve">
          <source>ImageReader.getNumImages()</source>
          <target state="translated">ImageReader.getNumImages()</target>
        </trans-unit>
        <trans-unit id="4dc313e7e6c80c0f80ea20afcf72779aad62f48d" translate="yes" xml:space="preserve">
          <source>ImageReader.getNumThumbnails()</source>
          <target state="translated">ImageReader.getNumThumbnails()</target>
        </trans-unit>
        <trans-unit id="fa51cfecd8d98b8edc0ef85e12c99e34375f3980" translate="yes" xml:space="preserve">
          <source>ImageReader.getOriginatingProvider()</source>
          <target state="translated">ImageReader.getOriginatingProvider()</target>
        </trans-unit>
        <trans-unit id="2dd35ae30620fad4265584b22f6dd0d301b80a31" translate="yes" xml:space="preserve">
          <source>ImageReader.getRawImageType()</source>
          <target state="translated">ImageReader.getRawImageType()</target>
        </trans-unit>
        <trans-unit id="772c3749de9149545c202f7bf846a91eae70bd01" translate="yes" xml:space="preserve">
          <source>ImageReader.getSourceRegion()</source>
          <target state="translated">ImageReader.getSourceRegion()</target>
        </trans-unit>
        <trans-unit id="21a53fd1b290330b6ee9001e7897cc9124608203" translate="yes" xml:space="preserve">
          <source>ImageReader.getStreamMetadata()</source>
          <target state="translated">ImageReader.getStreamMetadata()</target>
        </trans-unit>
        <trans-unit id="422bdb64a898763b81ebd4c6c0a49ffa50614262" translate="yes" xml:space="preserve">
          <source>ImageReader.getThumbnailHeight()</source>
          <target state="translated">ImageReader.getThumbnailHeight()</target>
        </trans-unit>
        <trans-unit id="2409b2e10d1ca6bc1887e2473a01d6b5ddd88d3a" translate="yes" xml:space="preserve">
          <source>ImageReader.getThumbnailWidth()</source>
          <target state="translated">ImageReader.getThumbnailWidth()</target>
        </trans-unit>
        <trans-unit id="f6079ff16724edea440c9aef05092dd180ca03e9" translate="yes" xml:space="preserve">
          <source>ImageReader.getTileGridXOffset()</source>
          <target state="translated">ImageReader.getTileGridXOffset()</target>
        </trans-unit>
        <trans-unit id="b7bed61e0f6b2e832750f5320539d86bcd8f1d73" translate="yes" xml:space="preserve">
          <source>ImageReader.getTileGridYOffset()</source>
          <target state="translated">ImageReader.getTileGridYOffset()</target>
        </trans-unit>
        <trans-unit id="a9ffe8eebbb18c47f7ab7d45c2860aeba23fe03c" translate="yes" xml:space="preserve">
          <source>ImageReader.getTileHeight()</source>
          <target state="translated">ImageReader.getTileHeight()</target>
        </trans-unit>
        <trans-unit id="c598984eea032bfe6a67df6db445eb3c61a9cec7" translate="yes" xml:space="preserve">
          <source>ImageReader.getTileWidth()</source>
          <target state="translated">ImageReader.getTileWidth()</target>
        </trans-unit>
        <trans-unit id="239b57f4d284c9ed81be32877db7ca829d6aad8c" translate="yes" xml:space="preserve">
          <source>ImageReader.getWidth()</source>
          <target state="translated">ImageReader.getWidth()</target>
        </trans-unit>
        <trans-unit id="95fb5a83ad4728cf0d19d28beb840d0ab015cfc3" translate="yes" xml:space="preserve">
          <source>ImageReader.hasThumbnails()</source>
          <target state="translated">ImageReader.hasThumbnails()</target>
        </trans-unit>
        <trans-unit id="6a535c8397fa10b6b5c78d496c964f2c8684453b" translate="yes" xml:space="preserve">
          <source>ImageReader.isIgnoringMetadata()</source>
          <target state="translated">ImageReader.isIgnoringMetadata()</target>
        </trans-unit>
        <trans-unit id="fd46f791b3df8fda404201934f2e552fdc7786d2" translate="yes" xml:space="preserve">
          <source>ImageReader.isImageTiled()</source>
          <target state="translated">ImageReader.isImageTiled()</target>
        </trans-unit>
        <trans-unit id="e3b888b29f4f77e432159cab9ac83c2bdeee6f78" translate="yes" xml:space="preserve">
          <source>ImageReader.isRandomAccessEasy()</source>
          <target state="translated">ImageReader.isRandomAccessEasy()</target>
        </trans-unit>
        <trans-unit id="21cb4aa283e4998ab3cc4eba6b03f638b2206274" translate="yes" xml:space="preserve">
          <source>ImageReader.isSeekForwardOnly()</source>
          <target state="translated">ImageReader.isSeekForwardOnly()</target>
        </trans-unit>
        <trans-unit id="83405980505714fab061b5e73072682831fd1099" translate="yes" xml:space="preserve">
          <source>ImageReader.processImageComplete()</source>
          <target state="translated">ImageReader.processImageComplete()</target>
        </trans-unit>
        <trans-unit id="a825cd399a303adaba67bb2d44903c1156834b5d" translate="yes" xml:space="preserve">
          <source>ImageReader.processImageProgress()</source>
          <target state="translated">ImageReader.processImageProgress()</target>
        </trans-unit>
        <trans-unit id="2f5606c190b01674cb99b14e8bfbcbb7c7a4962b" translate="yes" xml:space="preserve">
          <source>ImageReader.processImageStarted()</source>
          <target state="translated">ImageReader.processImageStarted()</target>
        </trans-unit>
        <trans-unit id="12d63aab61b5bc5958d9dfef431913f87fe28d16" translate="yes" xml:space="preserve">
          <source>ImageReader.processImageUpdate()</source>
          <target state="translated">ImageReader.processImageUpdate()</target>
        </trans-unit>
        <trans-unit id="dfe1c122805842bfe5b3f20a7db22b48cd761796" translate="yes" xml:space="preserve">
          <source>ImageReader.processPassComplete()</source>
          <target state="translated">ImageReader.processPassComplete()</target>
        </trans-unit>
        <trans-unit id="f4a909463f9e14f96174182c1794c53f7d83a2e4" translate="yes" xml:space="preserve">
          <source>ImageReader.processPassStarted()</source>
          <target state="translated">ImageReader.processPassStarted()</target>
        </trans-unit>
        <trans-unit id="1ccff571a4dfc2b5085f661fb338eb1acc3e5c92" translate="yes" xml:space="preserve">
          <source>ImageReader.processReadAborted()</source>
          <target state="translated">ImageReader.processReadAborted()</target>
        </trans-unit>
        <trans-unit id="e5dd31c7a713893ea8ac32e5e37bb4404d8083a7" translate="yes" xml:space="preserve">
          <source>ImageReader.processSequenceComplete()</source>
          <target state="translated">ImageReader.processSequenceComplete()</target>
        </trans-unit>
        <trans-unit id="ef653be7cb0793be5d89120339dab603586d9f46" translate="yes" xml:space="preserve">
          <source>ImageReader.processSequenceStarted()</source>
          <target state="translated">ImageReader.processSequenceStarted()</target>
        </trans-unit>
        <trans-unit id="e0ec2514327f115f940fac18bbab7e79c4467cb5" translate="yes" xml:space="preserve">
          <source>ImageReader.processThumbnailComplete()</source>
          <target state="translated">ImageReader.processThumbnailComplete()</target>
        </trans-unit>
        <trans-unit id="c034d8d050941821b2eeb39dcf96c2097bc552d1" translate="yes" xml:space="preserve">
          <source>ImageReader.processThumbnailPassComplete()</source>
          <target state="translated">ImageReader.processThumbnailPassComplete()</target>
        </trans-unit>
        <trans-unit id="27bd8f1a631567b196e414ce17394485cb3b4a05" translate="yes" xml:space="preserve">
          <source>ImageReader.processThumbnailPassStarted()</source>
          <target state="translated">ImageReader.processThumbnailPassStarted()</target>
        </trans-unit>
        <trans-unit id="47060488d6f55ce0e446c835d52343cebce515e9" translate="yes" xml:space="preserve">
          <source>ImageReader.processThumbnailProgress()</source>
          <target state="translated">ImageReader.processThumbnailProgress()</target>
        </trans-unit>
        <trans-unit id="5b89cffe604158032bd2f4456be04fcfd1fc7091" translate="yes" xml:space="preserve">
          <source>ImageReader.processThumbnailStarted()</source>
          <target state="translated">ImageReader.processThumbnailStarted()</target>
        </trans-unit>
        <trans-unit id="f9c9ad260fb38f12182956612b850bbcf23c0ed4" translate="yes" xml:space="preserve">
          <source>ImageReader.processThumbnailUpdate()</source>
          <target state="translated">ImageReader.processThumbnailUpdate()</target>
        </trans-unit>
        <trans-unit id="5b2f86a5e49e056589fa20c70b320b343f82a972" translate="yes" xml:space="preserve">
          <source>ImageReader.processWarningOccurred()</source>
          <target state="translated">ImageReader.processWarningOccurred()</target>
        </trans-unit>
        <trans-unit id="402b088f594fb72f39498c4a355c4ffed0b74070" translate="yes" xml:space="preserve">
          <source>ImageReader.read()</source>
          <target state="translated">ImageReader.read()</target>
        </trans-unit>
        <trans-unit id="ee5a1f319268437ff8387bb0981f3fe47eb57f8a" translate="yes" xml:space="preserve">
          <source>ImageReader.readAll()</source>
          <target state="translated">ImageReader.readAll()</target>
        </trans-unit>
        <trans-unit id="22a5fda3d9b4d4ee2fa0bf74803c2f5115d9ff2d" translate="yes" xml:space="preserve">
          <source>ImageReader.readAsRenderedImage()</source>
          <target state="translated">ImageReader.readAsRenderedImage()</target>
        </trans-unit>
        <trans-unit id="ae9330919034f80a8c2d87c450e681a2a8053aa3" translate="yes" xml:space="preserve">
          <source>ImageReader.readRaster()</source>
          <target state="translated">ImageReader.readRaster()</target>
        </trans-unit>
        <trans-unit id="a09688ff6526526ab7a6038bdd4141c6afe8f1f6" translate="yes" xml:space="preserve">
          <source>ImageReader.readThumbnail()</source>
          <target state="translated">ImageReader.readThumbnail()</target>
        </trans-unit>
        <trans-unit id="3c89f7d36bd8010987131b228345a25d066b76e9" translate="yes" xml:space="preserve">
          <source>ImageReader.readTile()</source>
          <target state="translated">ImageReader.readTile()</target>
        </trans-unit>
        <trans-unit id="8c813dd87cf577e7d6234c47a677676477d95a8a" translate="yes" xml:space="preserve">
          <source>ImageReader.readTileRaster()</source>
          <target state="translated">ImageReader.readTileRaster()</target>
        </trans-unit>
        <trans-unit id="64d3eb2a5d9017a4f0b5f5bbbfdf1c8261f95dbf" translate="yes" xml:space="preserve">
          <source>ImageReader.readerSupportsThumbnails()</source>
          <target state="translated">ImageReader.readerSupportsThumbnails()</target>
        </trans-unit>
        <trans-unit id="099fd73475427f29d3f49fc033fbe68b5e0622e2" translate="yes" xml:space="preserve">
          <source>ImageReader.removeAllIIOReadProgressListeners()</source>
          <target state="translated">ImageReader.removeAllIIOReadProgressListeners()</target>
        </trans-unit>
        <trans-unit id="7df56151d938be64315fcccd83f9d37acf0e82a4" translate="yes" xml:space="preserve">
          <source>ImageReader.removeAllIIOReadUpdateListeners()</source>
          <target state="translated">ImageReader.removeAllIIOReadUpdateListeners()</target>
        </trans-unit>
        <trans-unit id="8b915f705163455fb8a9a23532fec9a43b3d29d5" translate="yes" xml:space="preserve">
          <source>ImageReader.removeAllIIOReadWarningListeners()</source>
          <target state="translated">ImageReader.removeAllIIOReadWarningListeners()</target>
        </trans-unit>
        <trans-unit id="07c92fd388eedbf20e32ad9dc36615cd6bbae20f" translate="yes" xml:space="preserve">
          <source>ImageReader.removeIIOReadProgressListener()</source>
          <target state="translated">ImageReader.removeIIOReadProgressListener()</target>
        </trans-unit>
        <trans-unit id="e9722b3a2f5391a950193f30cd3d54628879aaa6" translate="yes" xml:space="preserve">
          <source>ImageReader.removeIIOReadUpdateListener()</source>
          <target state="translated">ImageReader.removeIIOReadUpdateListener()</target>
        </trans-unit>
        <trans-unit id="023ab851da16bf3a07c58ef101014a670cd932b0" translate="yes" xml:space="preserve">
          <source>ImageReader.removeIIOReadWarningListener()</source>
          <target state="translated">ImageReader.removeIIOReadWarningListener()</target>
        </trans-unit>
        <trans-unit id="e4e83add06a2b48e9526683b506060ae5ed77130" translate="yes" xml:space="preserve">
          <source>ImageReader.reset()</source>
          <target state="translated">ImageReader.reset()</target>
        </trans-unit>
        <trans-unit id="dbdc25a3690bbe4534e5dc416172e1d0ea1288a8" translate="yes" xml:space="preserve">
          <source>ImageReader.setInput()</source>
          <target state="translated">ImageReader.setInput()</target>
        </trans-unit>
        <trans-unit id="23ceac5a96e27350a57962919a976aeb9bfb567a" translate="yes" xml:space="preserve">
          <source>ImageReader.setLocale()</source>
          <target state="translated">ImageReader.setLocale()</target>
        </trans-unit>
        <trans-unit id="376e41ebaa573602896e8d479c0176731174559e" translate="yes" xml:space="preserve">
          <source>ImageReaderSpi</source>
          <target state="translated">ImageReaderSpi</target>
        </trans-unit>
        <trans-unit id="ac7dbd0a753e7ac2ff7335fba8639219adcd8713" translate="yes" xml:space="preserve">
          <source>ImageReaderSpi.canDecodeInput()</source>
          <target state="translated">ImageReaderSpi.canDecodeInput()</target>
        </trans-unit>
        <trans-unit id="3c7dcc0f3b62f34c44289be9aad680842dc8c4ed" translate="yes" xml:space="preserve">
          <source>ImageReaderSpi.createReaderInstance()</source>
          <target state="translated">ImageReaderSpi.createReaderInstance()</target>
        </trans-unit>
        <trans-unit id="50806e3d08c420c4abfcbe7facfd3dc09ec03dce" translate="yes" xml:space="preserve">
          <source>ImageReaderSpi.getImageWriterSpiNames()</source>
          <target state="translated">ImageReaderSpi.getImageWriterSpiNames()</target>
        </trans-unit>
        <trans-unit id="cefb63caddb366bd1eb1c31f48a0ab71564a4c84" translate="yes" xml:space="preserve">
          <source>ImageReaderSpi.getInputTypes()</source>
          <target state="translated">ImageReaderSpi.getInputTypes()</target>
        </trans-unit>
        <trans-unit id="d3136c51d01b4b0b3b305ef950d1ad5a92943e5a" translate="yes" xml:space="preserve">
          <source>ImageReaderSpi.isOwnReader()</source>
          <target state="translated">ImageReaderSpi.isOwnReader()</target>
        </trans-unit>
        <trans-unit id="3443fa6fc0a7963d5ead490360966c6f8774c754" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi</source>
          <target state="translated">ImageReaderWriterSpi</target>
        </trans-unit>
        <trans-unit id="393233988cc33bb6fba0cc35469857ee9f1a8d7f" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getExtraImageMetadataFormatNames()</source>
          <target state="translated">ImageReaderWriterSpi.getExtraImageMetadataFormatNames()</target>
        </trans-unit>
        <trans-unit id="c4fb202455044529cf3c4e4612f21afe062e4963" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getExtraStreamMetadataFormatNames()</source>
          <target state="translated">ImageReaderWriterSpi.getExtraStreamMetadataFormatNames()</target>
        </trans-unit>
        <trans-unit id="48b2bf826dd931098ac161cd8ab73455652f7bb1" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getFileSuffixes()</source>
          <target state="translated">ImageReaderWriterSpi.getFileSuffixes()</target>
        </trans-unit>
        <trans-unit id="345e065fd098396a0dd7c5ef0358fada7b3afa62" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getFormatNames()</source>
          <target state="translated">ImageReaderWriterSpi.getFormatNames()</target>
        </trans-unit>
        <trans-unit id="df48f7d071dd4a2d7c1049cb61f609462a3abaa4" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getImageMetadataFormat()</source>
          <target state="translated">ImageReaderWriterSpi.getImageMetadataFormat()</target>
        </trans-unit>
        <trans-unit id="7b85260052834d518879df691ee7bd10990c050c" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getMIMETypes()</source>
          <target state="translated">ImageReaderWriterSpi.getMIMETypes()</target>
        </trans-unit>
        <trans-unit id="a7c7658657946362cacb3a50d22d77b43b3100bd" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getNativeImageMetadataFormatName()</source>
          <target state="translated">ImageReaderWriterSpi.getNativeImageMetadataFormatName()</target>
        </trans-unit>
        <trans-unit id="a2e2fc9fffc6df64409092179b1f4bad5625f480" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getNativeStreamMetadataFormatName()</source>
          <target state="translated">ImageReaderWriterSpi.getNativeStreamMetadataFormatName()</target>
        </trans-unit>
        <trans-unit id="0b328ac0a7c07da6d3ad5bc66a4afd80f7610bd1" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getPluginClassName()</source>
          <target state="translated">ImageReaderWriterSpi.getPluginClassName()</target>
        </trans-unit>
        <trans-unit id="a3cfa123b91136daa887bb526626487cfaaa1409" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getStreamMetadataFormat()</source>
          <target state="translated">ImageReaderWriterSpi.getStreamMetadataFormat()</target>
        </trans-unit>
        <trans-unit id="7ac0b3089b0a649caccc4374df94fb3e823364b6" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.isStandardImageMetadataFormatSupported()</source>
          <target state="translated">ImageReaderWriterSpi.isStandardImageMetadataFormatSupported()</target>
        </trans-unit>
        <trans-unit id="7454ccb9648639eac2c96414321e87ec66e98786" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.isStandardStreamMetadataFormatSupported()</source>
          <target state="translated">ImageReaderWriterSpi.isStandardStreamMetadataFormatSupported()</target>
        </trans-unit>
        <trans-unit id="7074989e970140ccbe5497322f7c8cef8fe1663a" translate="yes" xml:space="preserve">
          <source>ImageTranscoder</source>
          <target state="translated">ImageTranscoder</target>
        </trans-unit>
        <trans-unit id="b65c3add20132f879aa036db292c79a29d3ca488" translate="yes" xml:space="preserve">
          <source>ImageTranscoder.convertImageMetadata()</source>
          <target state="translated">ImageTranscoder.convertImageMetadata()</target>
        </trans-unit>
        <trans-unit id="877dcd3940ee4c1f24efb96f1bd64897c4963bce" translate="yes" xml:space="preserve">
          <source>ImageTranscoder.convertStreamMetadata()</source>
          <target state="translated">ImageTranscoder.convertStreamMetadata()</target>
        </trans-unit>
        <trans-unit id="34cb2653707bc3d390fb96709f633289b6833ab3" translate="yes" xml:space="preserve">
          <source>ImageTranscoderSpi</source>
          <target state="translated">ImageTranscoderSpi</target>
        </trans-unit>
        <trans-unit id="7dcf7fb9441e9be7a2d69c7af23e41cb047e93e2" translate="yes" xml:space="preserve">
          <source>ImageTranscoderSpi.createTranscoderInstance()</source>
          <target state="translated">ImageTranscoderSpi.createTranscoderInstance()</target>
        </trans-unit>
        <trans-unit id="397cb3241db131e36b52f8ecc780c8867166595e" translate="yes" xml:space="preserve">
          <source>ImageTranscoderSpi.getReaderServiceProviderName()</source>
          <target state="translated">ImageTranscoderSpi.getReaderServiceProviderName()</target>
        </trans-unit>
        <trans-unit id="34b0abd472106b1013e774590a3046f282e9a71b" translate="yes" xml:space="preserve">
          <source>ImageTranscoderSpi.getWriterServiceProviderName()</source>
          <target state="translated">ImageTranscoderSpi.getWriterServiceProviderName()</target>
        </trans-unit>
        <trans-unit id="bf50296a873ae59a7d7778a3ed242c052be43098" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier</source>
          <target state="translated">ImageTypeSpecifier</target>
        </trans-unit>
        <trans-unit id="8567bfd1b3de238aea08d0617373266b768a64cd" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.createBanded()</source>
          <target state="translated">ImageTypeSpecifier.createBanded()</target>
        </trans-unit>
        <trans-unit id="6a0fae9470c6e2ba3648f004192b22c9a6f30ea6" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.createBufferedImage()</source>
          <target state="translated">ImageTypeSpecifier.createBufferedImage()</target>
        </trans-unit>
        <trans-unit id="c9eea4554eb312780cc7b1c2ae286a32c7fa59e2" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.createFromBufferedImageType()</source>
          <target state="translated">ImageTypeSpecifier.createFromBufferedImageType()</target>
        </trans-unit>
        <trans-unit id="d711b829e0890002b2a91a880e4e25e63fda3730" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.createFromRenderedImage()</source>
          <target state="translated">ImageTypeSpecifier.createFromRenderedImage()</target>
        </trans-unit>
        <trans-unit id="a0ea04c2125a810758a9582b6f48810c6c8b8089" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.createGrayscale()</source>
          <target state="translated">ImageTypeSpecifier.createGrayscale()</target>
        </trans-unit>
        <trans-unit id="fc83b2d72b5153f93778d0864dad26c5e7097c5b" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.createIndexed()</source>
          <target state="translated">ImageTypeSpecifier.createIndexed()</target>
        </trans-unit>
        <trans-unit id="97badba223b73a028a6dd43f25ca5d9071a9fe30" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.createInterleaved()</source>
          <target state="translated">ImageTypeSpecifier.createInterleaved()</target>
        </trans-unit>
        <trans-unit id="ae499dfc3b95f67fe6d966d7c9687c98ade3face" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.createPacked()</source>
          <target state="translated">ImageTypeSpecifier.createPacked()</target>
        </trans-unit>
        <trans-unit id="e8360d73a22bf926157c8f48eba9af4d29fedac4" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.equals()</source>
          <target state="translated">ImageTypeSpecifier.equals()</target>
        </trans-unit>
        <trans-unit id="d7b571daa3f9bb6c2031b7ef1d881e74fdd1d4ff" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.getBitsPerBand()</source>
          <target state="translated">ImageTypeSpecifier.getBitsPerBand()</target>
        </trans-unit>
        <trans-unit id="b8c286b8d4bde28e992024df5b5a8ed7f3edefca" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.getBufferedImageType()</source>
          <target state="translated">ImageTypeSpecifier.getBufferedImageType()</target>
        </trans-unit>
        <trans-unit id="1a6bf2a63f0739c1077b3e3098e53fcef1ae1ced" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.getColorModel()</source>
          <target state="translated">ImageTypeSpecifier.getColorModel()</target>
        </trans-unit>
        <trans-unit id="e66273a7d655626df06f98d5dd65e6ecdb55ed63" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.getNumBands()</source>
          <target state="translated">ImageTypeSpecifier.getNumBands()</target>
        </trans-unit>
        <trans-unit id="f829597101acf9d5743e4311e6294f51d12d3c46" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.getNumComponents()</source>
          <target state="translated">ImageTypeSpecifier.getNumComponents()</target>
        </trans-unit>
        <trans-unit id="40217a206fe4c99da358dbb01869b89d042d7f68" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.getSampleModel()</source>
          <target state="translated">ImageTypeSpecifier.getSampleModel()</target>
        </trans-unit>
        <trans-unit id="9476b6b5282eef57fb6d8642e44cd44dc849fdb2" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.hashCode()</source>
          <target state="translated">ImageTypeSpecifier.hashCode()</target>
        </trans-unit>
        <trans-unit id="2c29b257caed91d39e611e60c5698f251c7e46a7" translate="yes" xml:space="preserve">
          <source>ImageView</source>
          <target state="translated">ImageView</target>
        </trans-unit>
        <trans-unit id="07683084bc9eafadf7bb5ab59817c271f28e7ca5" translate="yes" xml:space="preserve">
          <source>ImageWriteParam</source>
          <target state="translated">ImageWriteParam</target>
        </trans-unit>
        <trans-unit id="6dc3171d7ef8bffe69ca5d3a9f3dab7f36980640" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.canOffsetTiles()</source>
          <target state="translated">ImageWriteParam.canOffsetTiles()</target>
        </trans-unit>
        <trans-unit id="475e8299763b3f808fea8a780162d768a366114a" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.canWriteCompressed()</source>
          <target state="translated">ImageWriteParam.canWriteCompressed()</target>
        </trans-unit>
        <trans-unit id="bd57676b35d6d2d71f22ae6fa059ab875cb75579" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.canWriteProgressive()</source>
          <target state="translated">ImageWriteParam.canWriteProgressive()</target>
        </trans-unit>
        <trans-unit id="99be13b9ee21eb767ed6c1f05abca26887b0d158" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.canWriteTiles()</source>
          <target state="translated">ImageWriteParam.canWriteTiles()</target>
        </trans-unit>
        <trans-unit id="2e9f75633cc6ca3dc8df3258ec1106f8a88042a5" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getBitRate()</source>
          <target state="translated">ImageWriteParam.getBitRate()</target>
        </trans-unit>
        <trans-unit id="b3885e99ad3bdca8a00ac5ba3bb8a9943d565224" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getCompressionMode()</source>
          <target state="translated">ImageWriteParam.getCompressionMode()</target>
        </trans-unit>
        <trans-unit id="61121fff18c829b95668813fe016c042a1cc4255" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getCompressionQuality()</source>
          <target state="translated">ImageWriteParam.getCompressionQuality()</target>
        </trans-unit>
        <trans-unit id="6babb304bcc35a37b4fa5ae725e4416c07d39b8c" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getCompressionQualityDescriptions()</source>
          <target state="translated">ImageWriteParam.getCompressionQualityDescriptions()</target>
        </trans-unit>
        <trans-unit id="1bc463905c78e183d00029b667c84948a25dcf46" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getCompressionQualityValues()</source>
          <target state="translated">ImageWriteParam.getCompressionQualityValues()</target>
        </trans-unit>
        <trans-unit id="7bce38049e7b015c9210d033a761c00397269971" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getCompressionType()</source>
          <target state="translated">ImageWriteParam.getCompressionType()</target>
        </trans-unit>
        <trans-unit id="120fd5386b558bae7b698d70df640560e01387a5" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getCompressionTypes()</source>
          <target state="translated">ImageWriteParam.getCompressionTypes()</target>
        </trans-unit>
        <trans-unit id="ca298a4496ff7f080b2ceb35fef7ebd4f453e6a1" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getLocale()</source>
          <target state="translated">ImageWriteParam.getLocale()</target>
        </trans-unit>
        <trans-unit id="7c44903cef90cb8b271db6fe029b03bcacde7152" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getLocalizedCompressionTypeName()</source>
          <target state="translated">ImageWriteParam.getLocalizedCompressionTypeName()</target>
        </trans-unit>
        <trans-unit id="f323ca52d15633b8524d32324c152c53fb27584b" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getPreferredTileSizes()</source>
          <target state="translated">ImageWriteParam.getPreferredTileSizes()</target>
        </trans-unit>
        <trans-unit id="912209f5a4b1d009431bef6c30e73e483a5ea36d" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getProgressiveMode()</source>
          <target state="translated">ImageWriteParam.getProgressiveMode()</target>
        </trans-unit>
        <trans-unit id="f02a967bd40a471af171d11100a9bf989e6b753b" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getTileGridXOffset()</source>
          <target state="translated">ImageWriteParam.getTileGridXOffset()</target>
        </trans-unit>
        <trans-unit id="b688c968cc015c550840729aef049e208a474759" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getTileGridYOffset()</source>
          <target state="translated">ImageWriteParam.getTileGridYOffset()</target>
        </trans-unit>
        <trans-unit id="223ba30a3d8d30ac19b4c024ed256ee13f3b5a0b" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getTileHeight()</source>
          <target state="translated">ImageWriteParam.getTileHeight()</target>
        </trans-unit>
        <trans-unit id="c8536380edb0accf3360e06ba7d3b95289337625" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getTileWidth()</source>
          <target state="translated">ImageWriteParam.getTileWidth()</target>
        </trans-unit>
        <trans-unit id="300d303fcb42fea0bab918d263d0cb51f641b271" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getTilingMode()</source>
          <target state="translated">ImageWriteParam.getTilingMode()</target>
        </trans-unit>
        <trans-unit id="4df72fb263a5522f7a874ac051fd5eaff93c839b" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.isCompressionLossless()</source>
          <target state="translated">ImageWriteParam.isCompressionLossless()</target>
        </trans-unit>
        <trans-unit id="8fff1e955237d51ee22d2e2afa3e834707d92156" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.setCompressionMode()</source>
          <target state="translated">ImageWriteParam.setCompressionMode()</target>
        </trans-unit>
        <trans-unit id="8450501a9c81e824c9b19f0ace510839d247289b" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.setCompressionQuality()</source>
          <target state="translated">ImageWriteParam.setCompressionQuality()</target>
        </trans-unit>
        <trans-unit id="ef6e2c0065a88138164685c22b362043d944b36e" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.setCompressionType()</source>
          <target state="translated">ImageWriteParam.setCompressionType()</target>
        </trans-unit>
        <trans-unit id="885029e5b6f663d0db40574b49c292996c41bb83" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.setProgressiveMode()</source>
          <target state="translated">ImageWriteParam.setProgressiveMode()</target>
        </trans-unit>
        <trans-unit id="0f5c357e718859d4ab4fcb8954692487ec570f9e" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.setTiling()</source>
          <target state="translated">ImageWriteParam.setTiling()</target>
        </trans-unit>
        <trans-unit id="3573442ec6942f8378ae4ae34a30e19a64ada6bf" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.setTilingMode()</source>
          <target state="translated">ImageWriteParam.setTilingMode()</target>
        </trans-unit>
        <trans-unit id="b1f9535946bbf40d49d701cdb7851551f5d1f445" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.unsetCompression()</source>
          <target state="translated">ImageWriteParam.unsetCompression()</target>
        </trans-unit>
        <trans-unit id="1685ca130d8e5f51d7594294aa05354251b83e47" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.unsetTiling()</source>
          <target state="translated">ImageWriteParam.unsetTiling()</target>
        </trans-unit>
        <trans-unit id="5fba1640e942b7ec12607cb762460e194c6ddaf0" translate="yes" xml:space="preserve">
          <source>ImageWriter</source>
          <target state="translated">ImageWriter</target>
        </trans-unit>
        <trans-unit id="3f598a742e8fdc592bed4e3edd80ceccd1832c25" translate="yes" xml:space="preserve">
          <source>ImageWriter.abort()</source>
          <target state="translated">ImageWriter.abort()</target>
        </trans-unit>
        <trans-unit id="7d7721ffd2b23cd8f347cc9e8386027c9b7c31fb" translate="yes" xml:space="preserve">
          <source>ImageWriter.abortRequested()</source>
          <target state="translated">ImageWriter.abortRequested()</target>
        </trans-unit>
        <trans-unit id="e4b4813b91ba24ef180c41de0e405ab953b793e6" translate="yes" xml:space="preserve">
          <source>ImageWriter.addIIOWriteProgressListener()</source>
          <target state="translated">ImageWriter.addIIOWriteProgressListener()</target>
        </trans-unit>
        <trans-unit id="d1dba3c86a102bb8a27c019a2e1862faa82b8c4d" translate="yes" xml:space="preserve">
          <source>ImageWriter.addIIOWriteWarningListener()</source>
          <target state="translated">ImageWriter.addIIOWriteWarningListener()</target>
        </trans-unit>
        <trans-unit id="88ef5be0c1a01698599bd1744b79b4b0acdba7aa" translate="yes" xml:space="preserve">
          <source>ImageWriter.canInsertEmpty()</source>
          <target state="translated">ImageWriter.canInsertEmpty()</target>
        </trans-unit>
        <trans-unit id="5d9932c3c55f9a93b56c054ab70bfaa81233e682" translate="yes" xml:space="preserve">
          <source>ImageWriter.canInsertImage()</source>
          <target state="translated">ImageWriter.canInsertImage()</target>
        </trans-unit>
        <trans-unit id="c55fd73eef7cec45a0476aedae00b5d2c0c5fe1a" translate="yes" xml:space="preserve">
          <source>ImageWriter.canRemoveImage()</source>
          <target state="translated">ImageWriter.canRemoveImage()</target>
        </trans-unit>
        <trans-unit id="077828fc76e1b686cb8e443e6552931f5f8ccbee" translate="yes" xml:space="preserve">
          <source>ImageWriter.canReplaceImageMetadata()</source>
          <target state="translated">ImageWriter.canReplaceImageMetadata()</target>
        </trans-unit>
        <trans-unit id="dde6bf583032f420007ff04df4ea48b393adab68" translate="yes" xml:space="preserve">
          <source>ImageWriter.canReplacePixels()</source>
          <target state="translated">ImageWriter.canReplacePixels()</target>
        </trans-unit>
        <trans-unit id="8219df68c104673c9948072c620d4c4be6366647" translate="yes" xml:space="preserve">
          <source>ImageWriter.canReplaceStreamMetadata()</source>
          <target state="translated">ImageWriter.canReplaceStreamMetadata()</target>
        </trans-unit>
        <trans-unit id="702f7f8bb240a638dfe12a43e4fba5d6f190ce79" translate="yes" xml:space="preserve">
          <source>ImageWriter.canWriteEmpty()</source>
          <target state="translated">ImageWriter.canWriteEmpty()</target>
        </trans-unit>
        <trans-unit id="bc33598046176d9eab7bba30e8222147757f2f72" translate="yes" xml:space="preserve">
          <source>ImageWriter.canWriteRasters()</source>
          <target state="translated">ImageWriter.canWriteRasters()</target>
        </trans-unit>
        <trans-unit id="c5136c9bda61ca27c5cd0dae82f2baf85b060c58" translate="yes" xml:space="preserve">
          <source>ImageWriter.canWriteSequence()</source>
          <target state="translated">ImageWriter.canWriteSequence()</target>
        </trans-unit>
        <trans-unit id="8c93b907cf061808747b0600c515e9f003b0e137" translate="yes" xml:space="preserve">
          <source>ImageWriter.clearAbortRequest()</source>
          <target state="translated">ImageWriter.clearAbortRequest()</target>
        </trans-unit>
        <trans-unit id="69c2b9ab433f8e2fd072dfed1da17c92bae04c90" translate="yes" xml:space="preserve">
          <source>ImageWriter.convertImageMetadata()</source>
          <target state="translated">ImageWriter.convertImageMetadata()</target>
        </trans-unit>
        <trans-unit id="495ce4c2c4273e1e46a930a8187c9f45f94c9896" translate="yes" xml:space="preserve">
          <source>ImageWriter.convertStreamMetadata()</source>
          <target state="translated">ImageWriter.convertStreamMetadata()</target>
        </trans-unit>
        <trans-unit id="b6649f60f10be92daf80ffb85853cd4e31d8d80d" translate="yes" xml:space="preserve">
          <source>ImageWriter.dispose()</source>
          <target state="translated">ImageWriter.dispose()</target>
        </trans-unit>
        <trans-unit id="d9a96211e88c46d8122ba717844aa90f2fe59ae5" translate="yes" xml:space="preserve">
          <source>ImageWriter.endInsertEmpty()</source>
          <target state="translated">ImageWriter.endInsertEmpty()</target>
        </trans-unit>
        <trans-unit id="02c53a0a5a5040166dad2ff2b70bf6417932e5a9" translate="yes" xml:space="preserve">
          <source>ImageWriter.endReplacePixels()</source>
          <target state="translated">ImageWriter.endReplacePixels()</target>
        </trans-unit>
        <trans-unit id="243445b4691380bda3e90240c0c25fbf2db5cfa7" translate="yes" xml:space="preserve">
          <source>ImageWriter.endWriteEmpty()</source>
          <target state="translated">ImageWriter.endWriteEmpty()</target>
        </trans-unit>
        <trans-unit id="7f53b9aebaff977beb83d1ab112645f4aac5efe2" translate="yes" xml:space="preserve">
          <source>ImageWriter.endWriteSequence()</source>
          <target state="translated">ImageWriter.endWriteSequence()</target>
        </trans-unit>
        <trans-unit id="048ac4db3ab2569e1a0464b22494fad23e59c667" translate="yes" xml:space="preserve">
          <source>ImageWriter.getAvailableLocales()</source>
          <target state="translated">ImageWriter.getAvailableLocales()</target>
        </trans-unit>
        <trans-unit id="186f09acf93554a35caa650f580388f83fab1b64" translate="yes" xml:space="preserve">
          <source>ImageWriter.getDefaultImageMetadata()</source>
          <target state="translated">ImageWriter.getDefaultImageMetadata()</target>
        </trans-unit>
        <trans-unit id="261e96dca25da3b6ddc2ddf6270898ef54647ebd" translate="yes" xml:space="preserve">
          <source>ImageWriter.getDefaultStreamMetadata()</source>
          <target state="translated">ImageWriter.getDefaultStreamMetadata()</target>
        </trans-unit>
        <trans-unit id="3b0ecc6a3712bede4df8b034146694078aea067c" translate="yes" xml:space="preserve">
          <source>ImageWriter.getDefaultWriteParam()</source>
          <target state="translated">ImageWriter.getDefaultWriteParam()</target>
        </trans-unit>
        <trans-unit id="d27a11604f88d6dd3d5e1dac72049b7318fa68d4" translate="yes" xml:space="preserve">
          <source>ImageWriter.getLocale()</source>
          <target state="translated">ImageWriter.getLocale()</target>
        </trans-unit>
        <trans-unit id="b1dcdc90769debae6b4b53593e7f1b23abaf557d" translate="yes" xml:space="preserve">
          <source>ImageWriter.getNumThumbnailsSupported()</source>
          <target state="translated">ImageWriter.getNumThumbnailsSupported()</target>
        </trans-unit>
        <trans-unit id="70342f647937897e5a8f931d41cfeeffd55e1d58" translate="yes" xml:space="preserve">
          <source>ImageWriter.getOriginatingProvider()</source>
          <target state="translated">ImageWriter.getOriginatingProvider()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
