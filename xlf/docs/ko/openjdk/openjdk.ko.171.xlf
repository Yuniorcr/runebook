<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="77969f6eaf794b1740a68878035f3a34622d3563" translate="yes" xml:space="preserve">
          <source>This implementation extracts the number's value using &lt;a href=&quot;../lang/number#longValue--&quot;&gt;&lt;code&gt;Number.longValue()&lt;/code&gt;&lt;/a&gt; for all integral type values that can be converted to &lt;code&gt;long&lt;/code&gt; without loss of information, including &lt;code&gt;BigInteger&lt;/code&gt; values with a &lt;a href=&quot;../math/biginteger#bitLength--&quot;&gt;&lt;code&gt;bit length&lt;/code&gt;&lt;/a&gt; of less than 64, and &lt;a href=&quot;../lang/number#doubleValue--&quot;&gt;&lt;code&gt;Number.doubleValue()&lt;/code&gt;&lt;/a&gt; for all other types. It then calls &lt;a href=&quot;numberformat#format-long-java.lang.StringBuffer-java.text.FieldPosition-&quot;&gt;&lt;code&gt;format(long,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;numberformat#format-double-java.lang.StringBuffer-java.text.FieldPosition-&quot;&gt;&lt;code&gt;format(double,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt;&lt;/a&gt;. This may result in loss of magnitude information and precision for &lt;code&gt;BigInteger&lt;/code&gt; and &lt;code&gt;BigDecimal&lt;/code&gt; values.</source>
          <target state="translated">이 구현 은 &lt;a href=&quot;../math/biginteger#bitLength--&quot;&gt; &lt;code&gt;bit length&lt;/code&gt; &lt;/a&gt; 가 64보다 작은 &lt;code&gt;BigInteger&lt;/code&gt; 값 및 다른 모든 유형의 &lt;a href=&quot;../lang/number#doubleValue--&quot;&gt; &lt;code&gt;Number.doubleValue()&lt;/code&gt; &lt;/a&gt; 를 포함하여 정보 손실없이 &lt;code&gt;long&lt;/code&gt; 으로 변환 할 수있는 모든 정수 유형 값에 대해 &lt;a href=&quot;../lang/number#longValue--&quot;&gt; &lt;code&gt;Number.longValue()&lt;/code&gt; &lt;/a&gt; 를 사용하여 숫자 값을 추출합니다. . 그런 다음 &lt;a href=&quot;numberformat#format-long-java.lang.StringBuffer-java.text.FieldPosition-&quot;&gt; &lt;code&gt;format(long,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;numberformat#format-double-java.lang.StringBuffer-java.text.FieldPosition-&quot;&gt; &lt;code&gt;format(double,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt; &lt;/a&gt; 을 호출 합니다 . 이로 인해 &lt;code&gt;BigInteger&lt;/code&gt; 및 &lt;code&gt;BigDecimal&lt;/code&gt; 값에 대한 크기 정보 및 정밀도가 손실 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="06a487a72bad774e9ba467624c797a1c7b0f89e1" translate="yes" xml:space="preserve">
          <source>This implementation first checks if the specified object is this list. If so, it returns &lt;code&gt;true&lt;/code&gt;; if not, it checks if the specified object is a list. If not, it returns &lt;code&gt;false&lt;/code&gt;; if so, it iterates over both lists, comparing corresponding pairs of elements. If any comparison returns &lt;code&gt;false&lt;/code&gt;, this method returns &lt;code&gt;false&lt;/code&gt;. If either iterator runs out of elements before the other it returns &lt;code&gt;false&lt;/code&gt; (as the lists are of unequal length); otherwise it returns &lt;code&gt;true&lt;/code&gt; when the iterations complete.</source>
          <target state="translated">이 구현은 먼저 지정된 객체가이 목록인지 확인합니다. 그렇다면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그렇지 않은 경우 지정된 개체가 목록인지 확인합니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 그렇다면 두 요소를 반복하여 해당 요소 쌍을 비교합니다. 비교가 &lt;code&gt;false&lt;/code&gt; 를 돌려주는 경우 ,이 메소드는 &lt;code&gt;false&lt;/code&gt; 를 돌려줍니다 . 반복자 중 하나에 다른 반복자보다 요소가 부족 하면 목록의 길이가 동일하지 않으므로 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다 . 그렇지 않으면 반복이 완료되면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="6acfc81ffe615763d29e37e8c25feb492ce0e9c5" translate="yes" xml:space="preserve">
          <source>This implementation first checks if the specified object is this map; if so it returns &lt;code&gt;true&lt;/code&gt;. Then, it checks if the specified object is a map whose size is identical to the size of this map; if not, it returns &lt;code&gt;false&lt;/code&gt;. If so, it iterates over this map's &lt;code&gt;entrySet&lt;/code&gt; collection, and checks that the specified map contains each mapping that this map contains. If the specified map fails to contain such a mapping, &lt;code&gt;false&lt;/code&gt; is returned. If the iteration completes, &lt;code&gt;true&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 먼저 지정된 객체가이 맵인지 확인합니다. 그렇다면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그런 다음 지정된 객체가이지도의 크기와 크기가 동일한지도인지 확인합니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 그렇다면이지도의 &lt;code&gt;entrySet&lt;/code&gt; 컬렉션을 반복 하고 지정된지도 에이지 도에 포함 된 각지도가 포함되어 있는지 확인합니다. 지정된 맵에 이러한 맵핑이 포함되지 않으면 &lt;code&gt;false&lt;/code&gt; 가 리턴됩니다. 반복이 완료되면 &lt;code&gt;true&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="06d9255728d4216ea62d7bdbc2262038b5d02cf3" translate="yes" xml:space="preserve">
          <source>This implementation first checks if the specified object is this set; if so it returns &lt;code&gt;true&lt;/code&gt;. Then, it checks if the specified object is a set whose size is identical to the size of this set; if not, it returns false. If so, it returns &lt;code&gt;containsAll((Collection) o)&lt;/code&gt;.</source>
          <target state="translated">이 구현은 먼저 지정된 객체가이 세트인지 확인합니다. 그렇다면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그런 다음 지정된 객체가이 세트의 크기와 크기가 동일한 세트인지 확인합니다. 그렇지 않으면 false를 반환합니다. 그렇다면 &lt;code&gt;containsAll((Collection) o)&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="52c174e1c2dac76d8c52fee93af4f4ced2a9abb0" translate="yes" xml:space="preserve">
          <source>This implementation first checks to see if &lt;code&gt;key&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; throwing a &lt;code&gt;NullPointerException&lt;/code&gt; if this is the case. Then it obtains this preference node's lock, checks that the node has not been removed, invokes &lt;a href=&quot;#getSpi(java.lang.String)&quot;&gt;&lt;code&gt;getSpi(String)&lt;/code&gt;&lt;/a&gt;, and returns the result, unless the &lt;code&gt;getSpi&lt;/code&gt; invocation returns &lt;code&gt;null&lt;/code&gt; or throws an exception, in which case this invocation returns &lt;code&gt;def&lt;/code&gt;.</source>
          <target state="translated">이 경우 제 이행 여부를 확인하기위한 &lt;code&gt;key&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; 송구 &lt;code&gt;NullPointerException&lt;/code&gt; 이 이러한 경우는. 그런 다음이 기본 설정 노드의 잠금을 얻고, 노드가 제거되지 않았는지 확인하고, &lt;a href=&quot;#getSpi(java.lang.String)&quot;&gt; &lt;code&gt;getSpi(String)&lt;/code&gt; &lt;/a&gt; 호출 하고, &lt;code&gt;getSpi&lt;/code&gt; 호출이 &lt;code&gt;null&lt;/code&gt; 을 반환 하거나 예외를 throw 하지 않는 한 결과를 반환합니다 . 이 경우이 호출이 &lt;code&gt;def&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="89d4ba544bd7e07117341a7a4caf76eca5348b14" translate="yes" xml:space="preserve">
          <source>This implementation first checks to see if &lt;code&gt;key&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; throwing a &lt;code&gt;NullPointerException&lt;/code&gt; if this is the case. Then it obtains this preference node's lock, checks that the node has not been removed, invokes &lt;a href=&quot;abstractpreferences#getSpi-java.lang.String-&quot;&gt;&lt;code&gt;getSpi(String)&lt;/code&gt;&lt;/a&gt;, and returns the result, unless the &lt;code&gt;getSpi&lt;/code&gt; invocation returns &lt;code&gt;null&lt;/code&gt; or throws an exception, in which case this invocation returns &lt;code&gt;def&lt;/code&gt;.</source>
          <target state="translated">이 경우 제 이행 여부를 확인하기위한 &lt;code&gt;key&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; 송구 &lt;code&gt;NullPointerException&lt;/code&gt; 이 이러한 경우는. 그런 다음이 환경 설정 노드의 잠금을 확보하고 노드가 제거되지 않았는지 확인하고 &lt;a href=&quot;abstractpreferences#getSpi-java.lang.String-&quot;&gt; &lt;code&gt;getSpi(String)&lt;/code&gt; &lt;/a&gt; 호출 한 후 &lt;code&gt;getSpi&lt;/code&gt; 호출이 &lt;code&gt;null&lt;/code&gt; 하거나 예외를 던지지 않는 한 결과를 리턴합니다 . 이 경우이 호출은 &lt;code&gt;def&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="dddaa6e52aca08a9102e08c6e519960a6d98aa8e" translate="yes" xml:space="preserve">
          <source>This implementation first checks to see if the stream has already encountered this object. Next the &lt;code&gt;mutatesTo&lt;/code&gt; method is called to see if that candidate returned from the stream can be mutated into an accurate copy of &lt;code&gt;oldInstance&lt;/code&gt;. If it can, the &lt;code&gt;initialize&lt;/code&gt; method is called to perform the initialization. If not, the candidate is removed from the stream, and the &lt;code&gt;instantiate&lt;/code&gt; method is called to create a new candidate for this object.</source>
          <target state="translated">이 구현은 먼저 스트림에이 객체가 이미 있는지 확인합니다. 다음 으로, 스트림에서 리턴 된 후보가 &lt;code&gt;oldInstance&lt;/code&gt; 의 정확한 사본으로 변경 될 수 있는지 확인하기 위해 &lt;code&gt;mutatesTo&lt;/code&gt; 메소드가 호출됩니다 . 가능하면 &lt;code&gt;initialize&lt;/code&gt; 메소드가 호출되어 초기화를 수행합니다. 그렇지 않으면 후보가 스트림에서 제거되고 &lt;code&gt;instantiate&lt;/code&gt; 메소드가 호출 되어이 오브젝트에 대한 새 후보를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="5327d07eb58755323196e2a95c6f08fa487d46d1" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator (with &lt;code&gt;listIterator()&lt;/code&gt;). Then, it iterates over the list until the specified element is found or the end of the list is reached.</source>
          <target state="translated">이 구현은 먼저 list iterator ()를 사용하여 목록 반복자를 가져 &lt;code&gt;listIterator()&lt;/code&gt; . 그런 다음 지정된 요소를 찾거나 목록의 끝에 도달 할 때까지 목록을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="dc9d7a122f099945829e1c98c0486717790727d4" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it gets the current element using &lt;code&gt;ListIterator.next&lt;/code&gt; and replaces it with &lt;code&gt;ListIterator.set&lt;/code&gt;.</source>
          <target state="translated">이 구현은 먼저 색인화 된 요소를 가리키는 목록 반복자를 가져옵니다 ( &lt;code&gt;listIterator(index)&lt;/code&gt; ). 그런 다음, 그것을 사용하여 현재 요소를 가져 &lt;code&gt;ListIterator.next&lt;/code&gt; 로 대체합니다 그것을 &lt;code&gt;ListIterator.set&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="e94cbc58e8b1485db6bcbce917f139de4be54ac3" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it gets the element using &lt;code&gt;ListIterator.next&lt;/code&gt; and returns it.</source>
          <target state="translated">이 구현은 먼저 색인화 된 요소를 가리키는 목록 반복자를 가져옵니다 ( &lt;code&gt;listIterator(index)&lt;/code&gt; ). 그런 다음 &lt;code&gt;ListIterator.next&lt;/code&gt; 를 사용하여 요소를 가져 와서 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2da626b5c6657de0464c8ef2394bd0efc74d9c6b" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it inserts the specified element with &lt;code&gt;ListIterator.add&lt;/code&gt;.</source>
          <target state="translated">이 구현은 먼저 색인화 된 요소를 가리키는 목록 반복자를 가져옵니다 ( &lt;code&gt;listIterator(index)&lt;/code&gt; ). 그런 다음 &lt;code&gt;ListIterator.add&lt;/code&gt; 로 지정된 요소를 삽입합니다 .</target>
        </trans-unit>
        <trans-unit id="2b8f920de51f0ee215c05809c4bb2d19ee4bed13" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it removes the element with &lt;code&gt;ListIterator.remove&lt;/code&gt;.</source>
          <target state="translated">이 구현은 먼저 색인화 된 요소를 가리키는 목록 반복자를 가져옵니다 ( &lt;code&gt;listIterator(index)&lt;/code&gt; ). 그런 다음 &lt;code&gt;ListIterator.remove&lt;/code&gt; 를 사용 하여 요소를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="7fb7d178ee862da67fdef96de1ba0c5057a0710f" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator that points to the end of the list (with &lt;code&gt;listIterator(size())&lt;/code&gt;). Then, it iterates backwards over the list until the specified element is found, or the beginning of the list is reached.</source>
          <target state="translated">이 구현은 먼저 목록의 끝을 가리키는 목록 반복자를 가져옵니다 ( &lt;code&gt;listIterator(size())&lt;/code&gt; ). 그런 다음 지정된 요소를 찾거나 목록의 시작 부분에 도달 할 때까지 목록을 거꾸로 반복합니다.</target>
        </trans-unit>
        <trans-unit id="d2a27d154f3e0194d0c042524e29a2445294c11d" translate="yes" xml:space="preserve">
          <source>This implementation first scans the type parameters, if any, and then the parameters.</source>
          <target state="translated">이 구현은 먼저 유형 매개 변수 (있는 경우)를 스캔 한 다음 매개 변수를 스캔합니다.</target>
        </trans-unit>
        <trans-unit id="94a0697d84c6d719a5a90f5bb76123e29ec4e37d" translate="yes" xml:space="preserve">
          <source>This implementation gets a list iterator positioned before &lt;code&gt;fromIndex&lt;/code&gt;, and repeatedly calls &lt;code&gt;ListIterator.next&lt;/code&gt; followed by &lt;code&gt;ListIterator.remove&lt;/code&gt; until the entire range has been removed. &lt;b&gt;Note: if &lt;code&gt;ListIterator.remove&lt;/code&gt; requires linear time, this implementation requires quadratic time.&lt;/b&gt;</source>
          <target state="translated">이 구현은 앞에 위치리스트 반복자 얻는다 &lt;code&gt;fromIndex&lt;/code&gt; 로를 반복해서 호출 &lt;code&gt;ListIterator.next&lt;/code&gt; 는 다음 &lt;code&gt;ListIterator.remove&lt;/code&gt; 를 전체 범위가 제거 될 때까지. &lt;b&gt;참고 : &lt;code&gt;ListIterator.remove&lt;/code&gt; 에 선형 시간이 필요한 경우이 구현에는 2 차 시간이 필요합니다.&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="870ec3beb0fb9f2b7a44d7c32a60f5e32d6f2bc6" translate="yes" xml:space="preserve">
          <source>This implementation gets an iterator over the specified collection and a list iterator over this list pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it iterates over the specified collection, inserting the elements obtained from the iterator into this list, one at a time, using &lt;code&gt;ListIterator.add&lt;/code&gt; followed by &lt;code&gt;ListIterator.next&lt;/code&gt; (to skip over the added element).</source>
          <target state="translated">이 구현은 지정된 콜렉션에 대한 반복자와 색인화 된 요소를 가리키는이 목록에 대한 목록 반복자를 가져옵니다 ( &lt;code&gt;listIterator(index)&lt;/code&gt; ). 그런 다음 &lt;code&gt;ListIterator.add&lt;/code&gt; 다음에 &lt;code&gt;ListIterator.next&lt;/code&gt; (추가 된 요소를 건너 뛰기)를 사용하여 반복자에서 얻은 요소를 한 번에 하나씩이 콜렉션에 삽입하여 지정된 콜렉션을 반복합니다 .</target>
        </trans-unit>
        <trans-unit id="5646cdbc01162ddd7ea9fb47be104c59af9f0bfb" translate="yes" xml:space="preserve">
          <source>This implementation gets an iterator over the specified collection and iterates over it, inserting the elements obtained from the iterator into this list at the appropriate position, one at a time, using &lt;code&gt;add(int, E)&lt;/code&gt;. Many implementations will override this method for efficiency.</source>
          <target state="translated">이 구현은 지정된 컬렉션에 대해 반복자를 가져 와서 반복합니다. 반복기에서 얻은 요소를 &lt;code&gt;add(int, E)&lt;/code&gt; 사용하여 한 번에 하나씩 적절한 위치에서이 목록에 삽입합니다 . 많은 구현이 효율성을 위해이 방법을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="463b50b06c64074fcab6e4894833b96fa7aea751" translate="yes" xml:space="preserve">
          <source>This implementation has passed all tests included in the 20151104 version of &lt;a href=&quot;http://csrc.nist.gov/groups/STM/cavp/documents/drbg/drbgtestvectors.zip&quot;&gt; The DRBG Test Vectors&lt;/a&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;http://csrc.nist.gov/groups/STM/cavp/documents/drbg/drbgtestvectors.zip&quot;&gt;DRBG 테스트 벡터&lt;/a&gt; 의 20151104 버전에 포함 된 모든 테스트를 통과했습니다 .</target>
        </trans-unit>
        <trans-unit id="56e226c00665f15374e514b39e186317a37541a9" translate="yes" xml:space="preserve">
          <source>This implementation intentionally re-abstracts the inappropriate default provided in &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">이 구현은 의도적으로 &lt;code&gt;Map&lt;/code&gt; 에 제공된 부적절한 기본값을 다시 요약합니다 .</target>
        </trans-unit>
        <trans-unit id="8c2220e643bcd894a8a399218113267a436a9f2e" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, it is compared with &lt;code&gt;&quot;true&quot;&lt;/code&gt; using &lt;a href=&quot;../../../../java.base/java/lang/string#equalsIgnoreCase(java.lang.String)&quot;&gt;&lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt;&lt;/a&gt;. If the comparison returns &lt;code&gt;true&lt;/code&gt;, this invocation returns &lt;code&gt;true&lt;/code&gt;. Otherwise, the original return value is compared with &lt;code&gt;&quot;false&quot;&lt;/code&gt;, again using &lt;a href=&quot;../../../../java.base/java/lang/string#equalsIgnoreCase(java.lang.String)&quot;&gt;&lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt;&lt;/a&gt;. If the comparison returns &lt;code&gt;true&lt;/code&gt;, this invocation returns &lt;code&gt;false&lt;/code&gt;. Otherwise, this invocation returns &lt;code&gt;def&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;get(key, null)&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null이 &lt;a href=&quot;../../../../java.base/java/lang/string#equalsIgnoreCase(java.lang.String)&quot;&gt; &lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;&quot;true&quot;&lt;/code&gt; 와 비교됩니다 . 비교가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면이 호출은 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그렇지 않으면 원래 반환 값이 다시 &lt;a href=&quot;../../../../java.base/java/lang/string#equalsIgnoreCase(java.lang.String)&quot;&gt; &lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 와 비교됩니다 . 비교가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면이 호출은 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 그렇지 않으면이 호출은 &lt;code&gt;def&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="24a0ff826a27f569d99801badcf81829ee000550" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to a &lt;code&gt;long&lt;/code&gt; with &lt;a href=&quot;../../../../java.base/java/lang/long#parseLong(java.lang.String)&quot;&gt;&lt;code&gt;Long.parseLong(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;get(key, null)&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null이 아닌 경우 구현 은 &lt;a href=&quot;../../../../java.base/java/lang/long#parseLong(java.lang.String)&quot;&gt; &lt;code&gt;Long.parseLong(String)&lt;/code&gt; &lt;/a&gt; 을 사용하여이를 &lt;code&gt;long&lt;/code&gt; 으로 변환하려고합니다 . 시도가 성공하면이 메서드에서 반환 값을 반환합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5f41b1f6ba460d62750205eb0daf08309ae5d77f" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to an &lt;code&gt;double&lt;/code&gt; with &lt;a href=&quot;../../../../java.base/java/lang/double#parseDouble(java.lang.String)&quot;&gt;&lt;code&gt;Double.parseDouble(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;get(key, null)&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null이 아닌 경우 구현시 &lt;a href=&quot;../../../../java.base/java/lang/double#parseDouble(java.lang.String)&quot;&gt; &lt;code&gt;Double.parseDouble(String)&lt;/code&gt; &lt;/a&gt; 사용 하여이를 &lt;code&gt;double&lt;/code&gt; 로 변환하려고합니다 . 시도가 성공하면이 메서드에서 반환 값을 반환합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f53d461c98292d8deabca1ad3b239775775f810d" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to an &lt;code&gt;float&lt;/code&gt; with &lt;a href=&quot;../../../../java.base/java/lang/float#parseFloat(java.lang.String)&quot;&gt;&lt;code&gt;Float.parseFloat(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;get(key, null)&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null이 아닌 경우 구현 은 &lt;a href=&quot;../../../../java.base/java/lang/float#parseFloat(java.lang.String)&quot;&gt; &lt;code&gt;Float.parseFloat(String)&lt;/code&gt; &lt;/a&gt; 사용 하여이를 &lt;code&gt;float&lt;/code&gt; 로 변환하려고합니다 . 시도가 성공하면이 메서드에서 반환 값을 반환합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c50b3857b7481abb81f498641211d99e3d3d1806" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to an &lt;code&gt;int&lt;/code&gt; with &lt;a href=&quot;../../../../java.base/java/lang/integer#parseInt(java.lang.String)&quot;&gt;&lt;code&gt;Integer.parseInt(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;#get(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;get(key, null)&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null이 아닌 경우 구현 은 &lt;a href=&quot;../../../../java.base/java/lang/integer#parseInt(java.lang.String)&quot;&gt; &lt;code&gt;Integer.parseInt(String)&lt;/code&gt; &lt;/a&gt; 을 사용하여 값을 &lt;code&gt;int&lt;/code&gt; 로 변환하려고합니다 . 시도가 성공하면이 메서드에서 반환 값을 반환합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a23cd81529aca4b49176192e8c858092c326638d" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;#getEntry(java.lang.String)&quot;&gt;&lt;code&gt;getEntry(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;#getEntry(java.lang.String)&quot;&gt; &lt;code&gt;getEntry(String)&lt;/code&gt; &lt;/a&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="b635e6d0c6e154375dc4a10f158124210ed6fb62" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, it is compared with &lt;code&gt;&quot;true&quot;&lt;/code&gt; using &lt;a href=&quot;../../lang/string#equalsIgnoreCase-java.lang.String-&quot;&gt;&lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt;&lt;/a&gt;. If the comparison returns &lt;code&gt;true&lt;/code&gt;, this invocation returns &lt;code&gt;true&lt;/code&gt;. Otherwise, the original return value is compared with &lt;code&gt;&quot;false&quot;&lt;/code&gt;, again using &lt;a href=&quot;../../lang/string#equalsIgnoreCase-java.lang.String-&quot;&gt;&lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt;&lt;/a&gt;. If the comparison returns &lt;code&gt;true&lt;/code&gt;, this invocation returns &lt;code&gt;false&lt;/code&gt;. Otherwise, this invocation returns &lt;code&gt;def&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 호출합니다 . 리턴 값이 널이 아닌 경우 &lt;a href=&quot;../../lang/string#equalsIgnoreCase-java.lang.String-&quot;&gt; &lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;&quot;true&quot;&lt;/code&gt; 와 비교됩니다 . 비교가 &lt;code&gt;true&lt;/code&gt; 를 돌려주는 경우 ,이 호출은 &lt;code&gt;true&lt;/code&gt; 를 돌려줍니다 . 그렇지 않으면 원래 반환 값이 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 와 비교되고 다시 &lt;a href=&quot;../../lang/string#equalsIgnoreCase-java.lang.String-&quot;&gt; &lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt; &lt;/a&gt; 됩니다. 비교가 &lt;code&gt;true&lt;/code&gt; 를 돌려주는 경우 ,이 호출은 &lt;code&gt;false&lt;/code&gt; 를 돌려줍니다 . 그렇지 않으면이 호출은 &lt;code&gt;def&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="66c71fae686f72098bae0c92b0f058077f985cde" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to a &lt;code&gt;long&lt;/code&gt; with &lt;a href=&quot;../../lang/long#parseLong-java.lang.String-&quot;&gt;&lt;code&gt;Long.parseLong(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null이 아닌 경우, 구현 시도는로 번역하는 &lt;code&gt;long&lt;/code&gt; 과 &lt;a href=&quot;../../lang/long#parseLong-java.lang.String-&quot;&gt; &lt;code&gt;Long.parseLong(String)&lt;/code&gt; &lt;/a&gt; . 시도가 성공하면이 메소드가 리턴 값을 리턴합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="a5a96dd92a8a2de99c9bb4309548d692948530dc" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to an &lt;code&gt;double&lt;/code&gt; with &lt;a href=&quot;../../lang/double#parseDouble-java.lang.String-&quot;&gt;&lt;code&gt;Double.parseDouble(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null 이외의 경우, 구현 은 &lt;a href=&quot;../../lang/double#parseDouble-java.lang.String-&quot;&gt; &lt;code&gt;Double.parseDouble(String)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;double&lt;/code&gt; 을 변환하려고합니다 . 시도가 성공하면이 메소드가 리턴 값을 리턴합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="7794ec8b7b429260de48f273b8796a51252bad95" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to an &lt;code&gt;float&lt;/code&gt; with &lt;a href=&quot;../../lang/float#parseFloat-java.lang.String-&quot;&gt;&lt;code&gt;Float.parseFloat(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null 이외의 경우, 구현 은 &lt;a href=&quot;../../lang/float#parseFloat-java.lang.String-&quot;&gt; &lt;code&gt;Float.parseFloat(String)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;float&lt;/code&gt; 값을 변환하려고합니다 . 시도가 성공하면이 메소드가 리턴 값을 리턴합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="eb14543b444c0f393274309002b25292204401a3" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to an &lt;code&gt;int&lt;/code&gt; with &lt;a href=&quot;../../lang/integer#parseInt-java.lang.String-&quot;&gt;&lt;code&gt;Integer.parseInt(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 호출합니다 . 반환 값이 null 이외의 경우, 구현 은 &lt;a href=&quot;../../lang/integer#parseInt-java.lang.String-&quot;&gt; &lt;code&gt;Integer.parseInt(String)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;int&lt;/code&gt; 로 변환하려고합니다 . 시도가 성공하면이 메소드가 리턴 값을 리턴합니다. 그렇지 않으면 &lt;code&gt;def&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="94ecc5689d3e638b6cf536a9fef78b9d540f7a3c" translate="yes" xml:space="preserve">
          <source>This implementation is a stable, adaptive, iterative mergesort that requires far fewer than n lg(n) comparisons when the input array is partially sorted, while offering the performance of a traditional mergesort when the input array is randomly ordered. If the input array is nearly sorted, the implementation requires approximately n comparisons. Temporary storage requirements vary from a small constant for nearly sorted input arrays to n/2 object references for randomly ordered input arrays.</source>
          <target state="translated">이 구현은 입력 배열이 부분적으로 정렬 될 때 n lg (n)보다 훨씬 적은 수의 비교를 요구하는 안정적이고 적응적인 반복 병합 소 르트이며, 입력 배열이 무작위로 정렬 될 때 기존의 머그 소트의 성능을 제공합니다. 입력 배열이 거의 정렬 된 경우 구현에는 대략 n 개의 비교가 필요합니다. 임시 저장 요구 사항은 거의 정렬 된 입력 배열에 대한 작은 상수부터 무작위로 정렬 된 입력 배열에 대한 n / 2 객체 참조까지 다양합니다.</target>
        </trans-unit>
        <trans-unit id="911416a70503239ead8d008361455812329dda42" translate="yes" xml:space="preserve">
          <source>This implementation is an integer version of MJD with the decimal part rounded to floor.</source>
          <target state="translated">이 구현은 소수 부분이 바닥으로 반올림 된 정수 버전의 MJD입니다.</target>
        </trans-unit>
        <trans-unit id="e6a26421733ec0b06980c0e432edc11963385ea9" translate="yes" xml:space="preserve">
          <source>This implementation is based on the chronology ID and class. Subclasses should add any additional state that they store.</source>
          <target state="translated">이 구현은 연대기 ID 및 클래스를 기반으로합니다. 서브 클래스는 그들이 저장하는 추가 상태를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="e69caee99467717738ba7a0c01390cd3506a98fa" translate="yes" xml:space="preserve">
          <source>This implementation is compliant with the requirements of RFC 3280.</source>
          <target state="translated">이 구현은 RFC 3280의 요구 사항을 준수합니다.</target>
        </trans-unit>
        <trans-unit id="ede7f4534a613f4a405a29252ce71f2415a83a31" translate="yes" xml:space="preserve">
          <source>This implementation is compliant with the requirements of RFC 5280.</source>
          <target state="translated">이 구현은 RFC 5280의 요구 사항을 준수합니다.</target>
        </trans-unit>
        <trans-unit id="80ed6f92296fdcb0b3f7cf370eff414073c8afca" translate="yes" xml:space="preserve">
          <source>This implementation is currently incomplete. It can be replaced with alternative implementations that are complete. Future versions of this class will provide better CSS support.</source>
          <target state="translated">이 구현은 현재 불완전합니다. 완전한 대체 구현으로 대체 될 수 있습니다. 이 클래스의 향후 버전은 더 나은 CSS 지원을 제공 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="1f6469a05db1d2f55f7f8ffcb39886d5437ee861" translate="yes" xml:space="preserve">
          <source>This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingDouble(java.util.function.ToDoubleFunction)&quot;&gt;&lt;code&gt;Collectors.summarizingDouble()&lt;/code&gt;&lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)&quot;&gt;&lt;code&gt;Stream.collect()&lt;/code&gt;&lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</source>
          <target state="translated">This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingDouble(java.util.function.ToDoubleFunction)&quot;&gt; &lt;code&gt;Collectors.summarizingDouble()&lt;/code&gt; &lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)&quot;&gt; &lt;code&gt;Stream.collect()&lt;/code&gt; &lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</target>
        </trans-unit>
        <trans-unit id="3c357fd574f41001350324ef3f5db039d50d1eff" translate="yes" xml:space="preserve">
          <source>This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingDouble-java.util.function.ToDoubleFunction-&quot;&gt;&lt;code&gt;Collectors.toDoubleStatistics()&lt;/code&gt;&lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt;&lt;code&gt;Stream.collect()&lt;/code&gt;&lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</source>
          <target state="translated">이 구현은 스레드로부터 안전하지 않습니다. 그러나 &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt; &lt;code&gt;Stream.collect()&lt;/code&gt; &lt;/a&gt; 의 병렬 구현은 안전하고 효율적인 병렬 실행을 위해 필요한 분할, 격리 및 병합 결과를 제공 하므로 병렬 스트림에서 &lt;a href=&quot;stream/collectors#summarizingDouble-java.util.function.ToDoubleFunction-&quot;&gt; &lt;code&gt;Collectors.toDoubleStatistics()&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 안전합니다 .</target>
        </trans-unit>
        <trans-unit id="4dcfae5955255075a4878f9d9d6795cb24209e0e" translate="yes" xml:space="preserve">
          <source>This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingInt(java.util.function.ToIntFunction)&quot;&gt;&lt;code&gt;Collectors.summarizingInt()&lt;/code&gt;&lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)&quot;&gt;&lt;code&gt;Stream.collect()&lt;/code&gt;&lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</source>
          <target state="translated">This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingInt(java.util.function.ToIntFunction)&quot;&gt; &lt;code&gt;Collectors.summarizingInt()&lt;/code&gt; &lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)&quot;&gt; &lt;code&gt;Stream.collect()&lt;/code&gt; &lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</target>
        </trans-unit>
        <trans-unit id="fe542b73779aa75906a286f7e4474cc4e7a6f3dd" translate="yes" xml:space="preserve">
          <source>This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingInt-java.util.function.ToIntFunction-&quot;&gt;&lt;code&gt;Collectors.toIntStatistics()&lt;/code&gt;&lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt;&lt;code&gt;Stream.collect()&lt;/code&gt;&lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</source>
          <target state="translated">이 구현은 스레드로부터 안전하지 않습니다. 그러나 &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt; &lt;code&gt;Stream.collect()&lt;/code&gt; &lt;/a&gt; 의 병렬 구현은 안전하고 효율적인 병렬 실행을 위해 필요한 분할, 격리 및 병합 결과를 제공 하므로 병렬 스트림에서 &lt;a href=&quot;stream/collectors#summarizingInt-java.util.function.ToIntFunction-&quot;&gt; &lt;code&gt;Collectors.toIntStatistics()&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 안전합니다 .</target>
        </trans-unit>
        <trans-unit id="165b30e0148d82f07c6e0e812d44fc8f9fb4d0f1" translate="yes" xml:space="preserve">
          <source>This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingLong(java.util.function.ToLongFunction)&quot;&gt;&lt;code&gt;Collectors.summarizingLong()&lt;/code&gt;&lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)&quot;&gt;&lt;code&gt;Stream.collect()&lt;/code&gt;&lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</source>
          <target state="translated">This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingLong(java.util.function.ToLongFunction)&quot;&gt; &lt;code&gt;Collectors.summarizingLong()&lt;/code&gt; &lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)&quot;&gt; &lt;code&gt;Stream.collect()&lt;/code&gt; &lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</target>
        </trans-unit>
        <trans-unit id="815e99e203755418cfc4a22f8d98449c453fd284" translate="yes" xml:space="preserve">
          <source>This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingLong-java.util.function.ToLongFunction-&quot;&gt;&lt;code&gt;Collectors.toLongStatistics()&lt;/code&gt;&lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt;&lt;code&gt;Stream.collect()&lt;/code&gt;&lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</source>
          <target state="translated">이 구현은 스레드로부터 안전하지 않습니다. 그러나 &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt; &lt;code&gt;Stream.collect()&lt;/code&gt; &lt;/a&gt; 의 병렬 구현은 병렬 스트림에서 &lt;a href=&quot;stream/collectors#summarizingLong-java.util.function.ToLongFunction-&quot;&gt; &lt;code&gt;Collectors.toLongStatistics()&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 안전합니다. 안전하고 효율적인 병렬 실행을 위해 필요한 분할, 격리 및 병합 결과를 제공 .</target>
        </trans-unit>
        <trans-unit id="afc96743025cb10c54054129e73a466cf806174a" translate="yes" xml:space="preserve">
          <source>This implementation is very similar to &lt;a href=&quot;#node(java.lang.String)&quot;&gt;&lt;code&gt;node(String)&lt;/code&gt;&lt;/a&gt;, except that &lt;a href=&quot;#getChild(java.lang.String)&quot;&gt;&lt;code&gt;getChild(String)&lt;/code&gt;&lt;/a&gt; is used instead of &lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This implementation is very similar to &lt;a href=&quot;#node(java.lang.String)&quot;&gt; &lt;code&gt;node(String)&lt;/code&gt; &lt;/a&gt;, except that &lt;a href=&quot;#getChild(java.lang.String)&quot;&gt; &lt;code&gt;getChild(String)&lt;/code&gt; &lt;/a&gt; is used instead of &lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c65a4e114757cd95cb0b1af51c5a8f17d55667f4" translate="yes" xml:space="preserve">
          <source>This implementation is very similar to &lt;a href=&quot;abstractpreferences#node-java.lang.String-&quot;&gt;&lt;code&gt;node(String)&lt;/code&gt;&lt;/a&gt;, except that &lt;a href=&quot;abstractpreferences#getChild-java.lang.String-&quot;&gt;&lt;code&gt;getChild(String)&lt;/code&gt;&lt;/a&gt; is used instead of &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;abstractpreferences#getChild-java.lang.String-&quot;&gt; &lt;code&gt;getChild(String)&lt;/code&gt; &lt;/a&gt; 이 사용 된다는 점을 제외하면 &lt;a href=&quot;abstractpreferences#node-java.lang.String-&quot;&gt; &lt;code&gt;node(String)&lt;/code&gt; &lt;/a&gt; 과 매우 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="4aac7cc407da5580cb81c86b96e060fa67eed65c" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt; searching for an entry with the specified key. If such an entry is found, &lt;code&gt;true&lt;/code&gt; is returned. If the iteration terminates without finding such an entry, &lt;code&gt;false&lt;/code&gt; is returned. Note that this implementation requires linear time in the size of the map; many implementations will override this method.</source>
          <target state="translated">이 구현은 지정된 키를 가진 항목을 검색하는 &lt;code&gt;entrySet()&lt;/code&gt; 반복 합니다. 이러한 항목을 찾으면 &lt;code&gt;true&lt;/code&gt; 가 리턴됩니다. 그러한 항목을 찾지 않고 반복이 종료되면 &lt;code&gt;false&lt;/code&gt; 가 리턴됩니다. 이 구현에는 맵 크기의 선형 시간이 필요합니다. 많은 구현이이 메소드를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="374c02342ca9ed7bb65e8c45f44f04fe03fc0a54" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt; searching for an entry with the specified key. If such an entry is found, its value is obtained with its &lt;code&gt;getValue&lt;/code&gt; operation, the entry is removed from the collection (and the backing map) with the iterator's &lt;code&gt;remove&lt;/code&gt; operation, and the saved value is returned. If the iteration terminates without finding such an entry, &lt;code&gt;null&lt;/code&gt; is returned. Note that this implementation requires linear time in the size of the map; many implementations will override this method.</source>
          <target state="translated">이 구현은 지정된 키를 가진 항목을 검색하는 &lt;code&gt;entrySet()&lt;/code&gt; 반복 합니다. 그러한 엔트리가 발견되면, &lt;code&gt;getValue&lt;/code&gt; 오퍼레이션으로 그 값이 얻어 지고, 이터레이터의 &lt;code&gt;remove&lt;/code&gt; 오퍼레이션으로 콜렉션 (및 백킹 맵)으로부터 엔트리가 삭제되어 , 저장된 값이 돌려 주어집니다. 이러한 항목을 찾지 않고 반복이 종료되면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다. 이 구현에는 맵 크기의 선형 시간이 필요합니다. 많은 구현이이 메소드를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="81700431dabd9c61ce32f9c13c0156c858f13af9" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt; searching for an entry with the specified key. If such an entry is found, the entry's value is returned. If the iteration terminates without finding such an entry, &lt;code&gt;null&lt;/code&gt; is returned. Note that this implementation requires linear time in the size of the map; many implementations will override this method.</source>
          <target state="translated">이 구현은 지정된 키를 가진 항목을 검색하는 &lt;code&gt;entrySet()&lt;/code&gt; 반복 합니다. 이러한 항목을 찾으면 항목 값이 반환됩니다. 이러한 항목을 찾지 않고 반복이 종료되면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다. 이 구현에는 맵 크기의 선형 시간이 필요합니다. 많은 구현이이 메소드를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="f766c5a2cb3b29aa94b14f7e1863646750f5d4cf" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt; searching for an entry with the specified value. If such an entry is found, &lt;code&gt;true&lt;/code&gt; is returned. If the iteration terminates without finding such an entry, &lt;code&gt;false&lt;/code&gt; is returned. Note that this implementation requires linear time in the size of the map.</source>
          <target state="translated">이 구현은 지정된 값을 가진 항목을 검색하는 &lt;code&gt;entrySet()&lt;/code&gt; 반복 합니다. 이러한 항목을 찾으면 &lt;code&gt;true&lt;/code&gt; 가 리턴됩니다. 그러한 항목을 찾지 않고 반복이 종료되면 &lt;code&gt;false&lt;/code&gt; 가 리턴됩니다. 이 구현에는 맵 크기의 선형 시간이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="2367dfe0fd94a0fefa25ddcd2f7ad478565d1f4f" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt;, calling &lt;a href=&quot;map.entry#hashCode()&quot;&gt;&lt;code&gt;hashCode()&lt;/code&gt;&lt;/a&gt; on each element (entry) in the set, and adding up the results.</source>
          <target state="translated">This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt; , calling &lt;a href=&quot;map.entry#hashCode()&quot;&gt; &lt;code&gt;hashCode()&lt;/code&gt; &lt;/a&gt; on each element (entry) in the set, and adding up the results.</target>
        </trans-unit>
        <trans-unit id="8300a6372ea19c93763fb3af3d8f015529a42126" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt;, calling &lt;a href=&quot;map.entry#hashCode--&quot;&gt;&lt;code&gt;hashCode()&lt;/code&gt;&lt;/a&gt; on each element (entry) in the set, and adding up the results.</source>
          <target state="translated">이 구현은 &lt;code&gt;entrySet()&lt;/code&gt; 반복 하여 세트의 각 요소 (entry)에서 &lt;a href=&quot;map.entry#hashCode--&quot;&gt; &lt;code&gt;hashCode()&lt;/code&gt; &lt;/a&gt; 를 호출 하고 결과를 합산합니다.</target>
        </trans-unit>
        <trans-unit id="ca0dbdf4776d51bd0c011b2ccf1832a90ecef222" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the collection looking for the specified element. If it finds the element, it removes the element from the collection using the iterator's remove method.</source>
          <target state="translated">이 구현은 지정된 요소를 찾는 컬렉션을 반복합니다. 요소를 찾으면 반복자의 remove 메소드를 사용하여 컬렉션에서 요소를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="e8d1b36ecb6afc9c1b2a76d59260c0a6aa2c241e" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the elements in the collection, checking each element in turn for equality with the specified element.</source>
          <target state="translated">이 구현은 컬렉션의 요소를 반복하여 각 요소가 지정된 요소와 동일한 지 차례로 확인합니다.</target>
        </trans-unit>
        <trans-unit id="39f403dab1f207dcaf913c9aaa3525eee2914312" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the set, calling the &lt;code&gt;hashCode&lt;/code&gt; method on each element in the set, and adding up the results.</source>
          <target state="translated">이 구현은 세트의 각 요소에 대해 &lt;code&gt;hashCode&lt;/code&gt; 메소드를 호출 하고 결과를 합산 하여 세트를 반복 합니다.</target>
        </trans-unit>
        <trans-unit id="3c0d85f7c8b81e41420ddfc89ef5a64de801eb4a" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the specified collection, and adds each element returned by the iterator to this queue, in turn. A runtime exception encountered while trying to add an element (including, in particular, a &lt;code&gt;null&lt;/code&gt; element) may result in only some of the elements having been successfully added when the associated exception is thrown.</source>
          <target state="translated">이 구현은 지정된 컬렉션을 반복하고 반복자가 반환 한 각 요소를이 큐에 추가합니다. 요소 (특히 &lt;code&gt;null&lt;/code&gt; 요소 포함)를 추가하는 중에 런타임 예외가 발생 하면 연관된 예외가 발생할 때 일부 요소 만 성공적으로 추가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb49e9f211a7b5c45d27f20fd7c5b707404d8891" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the specified collection, and adds each object returned by the iterator to this collection, in turn.</source>
          <target state="translated">이 구현은 지정된 컬렉션을 반복하고 반복자가 반환 한 각 객체를이 컬렉션에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="45df9afc1d5dba7b2ae374ddc1d5fd770727ccb5" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the specified collection, checking each element returned by the iterator in turn to see if it's contained in this collection. If all elements are so contained &lt;code&gt;true&lt;/code&gt; is returned, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 구현은 지정된 컬렉션을 반복하여 반복자가 반환 한 각 요소를 차례로 확인하여이 컬렉션에 포함되어 있는지 확인합니다. 모든 요소가 포함되어 있으면 &lt;code&gt;true&lt;/code&gt; 가 반환되고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d277f54573e93fd99212202d3cc79336a92e3996" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the specified map's &lt;code&gt;entrySet()&lt;/code&gt; collection, and calls this map's &lt;code&gt;put&lt;/code&gt; operation once for each entry returned by the iteration.</source>
          <target state="translated">이 구현은 지정된 맵의 &lt;code&gt;entrySet()&lt;/code&gt; 컬렉션을 반복하고, 반복에 의해 반환 된 각 항목에 대해이 맵의 &lt;code&gt;put&lt;/code&gt; 작업을 한 번 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="94358541f9d35d39b3a9c9aa36e2326b7df4d1a1" translate="yes" xml:space="preserve">
          <source>This implementation iterates over this collection, checking each element returned by the iterator in turn to see if it's contained in the specified collection. If it's not so contained, it's removed from this collection with the iterator's &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">이 구현은이 컬렉션을 반복하여 지정된 컬렉션에 포함되어 있는지 반복자가 반환 한 각 요소를 확인합니다. 포함되어 있지 않으면 이터레이터의 &lt;code&gt;remove&lt;/code&gt; 메소드 를 사용하여이 콜렉션에서 제거 됩니다.</target>
        </trans-unit>
        <trans-unit id="5752c24310b5d5e92d2aeed3eac68c1753b8f209" translate="yes" xml:space="preserve">
          <source>This implementation iterates over this collection, checking each element returned by the iterator in turn to see if it's contained in the specified collection. If it's so contained, it's removed from this collection with the iterator's &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">이 구현은이 컬렉션을 반복하여 지정된 컬렉션에 포함되어 있는지 반복자가 반환 한 각 요소를 확인합니다. 포함되어 있으면 iterator의 &lt;code&gt;remove&lt;/code&gt; 메소드 를 사용하여이 콜렉션에서 제거 됩니다.</target>
        </trans-unit>
        <trans-unit id="519b7265bd069092f1ee87ef17492b432c1b0c47" translate="yes" xml:space="preserve">
          <source>This implementation iterates over this collection, removing each element using the &lt;code&gt;Iterator.remove&lt;/code&gt; operation. Most implementations will probably choose to override this method for efficiency.</source>
          <target state="translated">이 구현은이 컬렉션을 반복하여 &lt;code&gt;Iterator.remove&lt;/code&gt; 작업을 사용하여 각 요소를 제거 합니다. 대부분의 구현은 효율성을 위해이 메소드를 대체하도록 선택합니다.</target>
        </trans-unit>
        <trans-unit id="f3580cf7276e17829e23380692494de55ce776a5" translate="yes" xml:space="preserve">
          <source>This implementation makes use of comparable strengths as defined in Tables 2 and 3 of NIST SP 800-57 Part 1-Rev.4. Specifically, if a DSA or RSA key with a key size greater than 7680 bits, or an EC key with a key size greater than or equal to 512 bits, SHA-512 will be used as the hash function for the signature. If a DSA or RSA key has a key size greater than 3072 bits, or an EC key has a key size greater than or equal to 384 bits, SHA-384 will be used. Otherwise, SHA-256 will be used. The value may change in the future.</source>
          <target state="translated">이 구현은 NIST SP 800-57 Part 1-Rev.4의 표 2 및 3에 정의 된 것과 유사한 강점을 사용합니다. 특히 키 크기가 7680 비트보다 큰 DSA 또는 RSA 키 또는 키 크기가 512 비트보다 크거나 같은 EC 키인 경우 SHA-512가 서명의 해시 함수로 사용됩니다. DSA 또는 RSA 키의 키 크기가 3072 비트보다 크거나 EC 키의 키 크기가 384 비트 이상이면 SHA-384가 사용됩니다. 그렇지 않으면 SHA-256이 사용됩니다. 값은 향후 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36794295265f6f32c93e0be73a9cfbf03ee2e801" translate="yes" xml:space="preserve">
          <source>This implementation may return a versioned entry for the requested name even if there is not a corresponding base entry. This can occur if there is a private or package-private versioned entry that matches. If a subclass overrides this method, assure that the override method invokes &lt;code&gt;super.getEntry(name)&lt;/code&gt; to obtain all versioned entries.</source>
          <target state="translated">This implementation may return a versioned entry for the requested name even if there is not a corresponding base entry. This can occur if there is a private or package-private versioned entry that matches. If a subclass overrides this method, assure that the override method invokes &lt;code&gt;super.getEntry(name)&lt;/code&gt; to obtain all versioned entries.</target>
        </trans-unit>
        <trans-unit id="4576fde91ee155ce3e66f4d0a74f6b3c167a9415" translate="yes" xml:space="preserve">
          <source>This implementation merely returns &lt;code&gt; compare((String)o1, (String)o2) &lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt; compare((String)o1, (String)o2) &lt;/code&gt; 만 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="23c718d9502111d93dc30f6a9345580a960a58b8" translate="yes" xml:space="preserve">
          <source>This implementation merely returns &lt;code&gt;false&lt;/code&gt; (so that this map acts like a normal map - the eldest element is never removed).</source>
          <target state="translated">이 구현은 단순히 &lt;code&gt;false&lt;/code&gt; 를 반환 하므로이 맵은 일반 맵처럼 작동합니다. 가장 오래된 요소는 제거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ea2eb5e1b3e1ace11518ffb09a6647f94311ccce" translate="yes" xml:space="preserve">
          <source>This implementation merely returns a list iterator over the list.</source>
          <target state="translated">이 구현은 단순히 목록에 대한 목록 반복자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ad35e878c9e5603591403a18f61e9d3c699a94f2" translate="yes" xml:space="preserve">
          <source>This implementation merely returns the absolute path name that was computed at the time that this node was constructed (based on the name that was passed to this node's constructor, and the names that were passed to this node's ancestors' constructors).</source>
          <target state="translated">이 구현은이 노드가 생성 될 때 계산 된 절대 경로 이름 만 반환합니다 (이 노드의 생성자에 전달 된 이름 및이 노드의 조상 생성자에 전달 된 이름에 따라).</target>
        </trans-unit>
        <trans-unit id="51709a75571ee5b8a6c54ce09f4bdb149dee3efa" translate="yes" xml:space="preserve">
          <source>This implementation merely returns the name that was passed to this node's constructor.</source>
          <target state="translated">이 구현은이 노드의 생성자에 전달 된 이름 만 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8f65c739f678fea14b614108e3fb48f5030e0688" translate="yes" xml:space="preserve">
          <source>This implementation must return the same value as &lt;a href=&quot;#getCpuLoad()&quot;&gt;&lt;code&gt;getCpuLoad()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;#getCpuLoad()&quot;&gt; &lt;code&gt;getCpuLoad()&lt;/code&gt; &lt;/a&gt; 와 동일한 값을 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d0c7ed9c241bb81349afff855c8ac6c649559c72" translate="yes" xml:space="preserve">
          <source>This implementation must return the same value as &lt;a href=&quot;#getFreeMemorySize()&quot;&gt;&lt;code&gt;getFreeMemorySize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;#getFreeMemorySize()&quot;&gt; &lt;code&gt;getFreeMemorySize()&lt;/code&gt; &lt;/a&gt; 와 동일한 값을 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e6257920f50d59c581564c7be9367ca20b04cce7" translate="yes" xml:space="preserve">
          <source>This implementation must return the same value as &lt;a href=&quot;#getTotalMemorySize()&quot;&gt;&lt;code&gt;getTotalMemorySize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;#getTotalMemorySize()&quot;&gt; &lt;code&gt;getTotalMemorySize()&lt;/code&gt; &lt;/a&gt; 와 동일한 값을 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ffe6e12917362cfc1a9ffbecfd927d48e9406320" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock and checks that the node has not been removed. If &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;&quot;&quot;&lt;/code&gt;, this node is returned; if &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;&quot;/&quot;&lt;/code&gt;, this node's root is returned. If the first character in &lt;code&gt;path&lt;/code&gt; is not &lt;code&gt;'/'&lt;/code&gt;, the implementation breaks &lt;code&gt;path&lt;/code&gt; into tokens and recursively traverses the path from this node to the named node, &quot;consuming&quot; a name and a slash from &lt;code&gt;path&lt;/code&gt; at each step of the traversal. At each step, the current node is locked and the node's child-cache is checked for the named node. If it is not found, the name is checked to make sure its length does not exceed &lt;code&gt;MAX_NAME_LENGTH&lt;/code&gt;. Then the &lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; method is invoked, and the result stored in this node's child-cache. If the newly created &lt;code&gt;Preferences&lt;/code&gt; object's &lt;a href=&quot;#newNode&quot;&gt;&lt;code&gt;newNode&lt;/code&gt;&lt;/a&gt; field is &lt;code&gt;true&lt;/code&gt; and there are any node change listeners, a notification event is enqueued for processing by the event dispatch thread.</source>
          <target state="translated">This implementation obtains this preference node's lock and checks that the node has not been removed. If &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;&quot;&quot;&lt;/code&gt; , this node is returned; if &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;&quot;/&quot;&lt;/code&gt; , this node's root is returned. If the first character in &lt;code&gt;path&lt;/code&gt; is not &lt;code&gt;'/'&lt;/code&gt; , the implementation breaks &lt;code&gt;path&lt;/code&gt; into tokens and recursively traverses the path from this node to the named node, &quot;consuming&quot; a name and a slash from &lt;code&gt;path&lt;/code&gt; at each step of the traversal. At each step, the current node is locked and the node's child-cache is checked for the named node. If it is not found, the name is checked to make sure its length does not exceed &lt;code&gt;MAX_NAME_LENGTH&lt;/code&gt; . Then the &lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt; method is invoked, and the result stored in this node's child-cache. If the newly created &lt;code&gt;Preferences&lt;/code&gt; object's &lt;a href=&quot;#newNode&quot;&gt; &lt;code&gt;newNode&lt;/code&gt; &lt;/a&gt; field is &lt;code&gt;true&lt;/code&gt; and there are any node change listeners, a notification event is enqueued for processing by the event dispatch thread.</target>
        </trans-unit>
        <trans-unit id="db1425f08beb2d7b2314a47941db6d97a1bcac81" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock and checks that the node has not been removed. If &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;&quot;&quot;&lt;/code&gt;, this node is returned; if &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;&quot;/&quot;&lt;/code&gt;, this node's root is returned. If the first character in &lt;code&gt;path&lt;/code&gt; is not &lt;code&gt;'/'&lt;/code&gt;, the implementation breaks &lt;code&gt;path&lt;/code&gt; into tokens and recursively traverses the path from this node to the named node, &quot;consuming&quot; a name and a slash from &lt;code&gt;path&lt;/code&gt; at each step of the traversal. At each step, the current node is locked and the node's child-cache is checked for the named node. If it is not found, the name is checked to make sure its length does not exceed &lt;code&gt;MAX_NAME_LENGTH&lt;/code&gt;. Then the &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; method is invoked, and the result stored in this node's child-cache. If the newly created &lt;code&gt;Preferences&lt;/code&gt; object's &lt;a href=&quot;abstractpreferences#newNode&quot;&gt;&lt;code&gt;newNode&lt;/code&gt;&lt;/a&gt; field is &lt;code&gt;true&lt;/code&gt; and there are any node change listeners, a notification event is enqueued for processing by the event dispatch thread.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금을 획득하고 노드가 제거되지 않았는지 확인합니다. 경우 &lt;code&gt;path&lt;/code&gt; 이다 &lt;code&gt;&quot;&quot;&lt;/code&gt; 이 노드가 반환됩니다; 경우 &lt;code&gt;path&lt;/code&gt; 입니다 &lt;code&gt;&quot;/&quot;&lt;/code&gt; ,이 노드의 루트가 돌려 주어집니다. &lt;code&gt;path&lt;/code&gt; 의 첫 문자 가 &lt;code&gt;'/'&lt;/code&gt; 가 아닌 경우, 구현은 &lt;code&gt;path&lt;/code&gt; 를 토큰으로 나누고이 노드에서 명명 된 노드로 경로를 재귀 적으로 순회하여 순회의 각 단계 에서 &lt;code&gt;path&lt;/code&gt; 에서 이름과 슬래시를 &quot;소비&quot;합니다 . 각 단계에서 현재 노드가 잠기고 명명 된 노드에 대해 노드의 자식 캐시가 검사됩니다. 찾을 수 없으면 이름이 길이를 초과하지 않는지 확인합니다 &lt;code&gt;MAX_NAME_LENGTH&lt;/code&gt; . 그런 다음&lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt; 메소드가 호출되고 결과는이 노드의 하위 캐시에 저장됩니다. 새로 작성된 &lt;code&gt;Preferences&lt;/code&gt; 오브젝트의&lt;a href=&quot;abstractpreferences#newNode&quot;&gt; &lt;code&gt;newNode&lt;/code&gt; &lt;/a&gt; 필드가 &lt;code&gt;true&lt;/code&gt; 이고 노드 변경 리스너가있는 경우, 이벤트 디스패치 스레드에 의해 처리되도록 알림 이벤트가 큐에 대기됩니다.</target>
        </trans-unit>
        <trans-unit id="d089659cb66d57741a2a7b73c7ec3a9673d19ab8" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed and invokes &lt;a href=&quot;#keysSpi()&quot;&gt;&lt;code&gt;keysSpi()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This implementation obtains this preference node's lock, checks that the node has not been removed and invokes &lt;a href=&quot;#keysSpi()&quot;&gt; &lt;code&gt;keysSpi()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b4e9074e793652f799c8cfa243efa22f5492c1f1" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed and invokes &lt;a href=&quot;abstractpreferences#keysSpi--&quot;&gt;&lt;code&gt;keysSpi()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금을 획득하고 노드가 제거되지 않았는지 점검하고 &lt;a href=&quot;abstractpreferences#keysSpi--&quot;&gt; &lt;code&gt;keysSpi()&lt;/code&gt; &lt;/a&gt; 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="ee523996d355981b8029699f775d6640fb17d2b8" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed and returns the parent value that was passed to this node's constructor.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금을 획득하고 노드가 제거되지 않았는지 점검 한 후이 노드의 생성자에 전달 된 상위 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8624adf2c23a453ea24453fedf1db44a7231918e" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed, constructs a &lt;code&gt;TreeSet&lt;/code&gt; initialized to the names of children already cached (the children in this node's &quot;child-cache&quot;), invokes &lt;a href=&quot;#childrenNamesSpi()&quot;&gt;&lt;code&gt;childrenNamesSpi()&lt;/code&gt;&lt;/a&gt;, and adds all of the returned child-names into the set. The elements of the tree set are dumped into a &lt;code&gt;String&lt;/code&gt; array using the &lt;code&gt;toArray&lt;/code&gt; method, and this array is returned.</source>
          <target state="translated">This implementation obtains this preference node's lock, checks that the node has not been removed, constructs a &lt;code&gt;TreeSet&lt;/code&gt; initialized to the names of children already cached (the children in this node's &quot;child-cache&quot;), invokes &lt;a href=&quot;#childrenNamesSpi()&quot;&gt; &lt;code&gt;childrenNamesSpi()&lt;/code&gt; &lt;/a&gt;, and adds all of the returned child-names into the set. The elements of the tree set are dumped into a &lt;code&gt;String&lt;/code&gt; array using the &lt;code&gt;toArray&lt;/code&gt; method, and this array is returned.</target>
        </trans-unit>
        <trans-unit id="9c1dca6ba54dc0a25dec6160d7a80a95ee75a6d1" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed, constructs a &lt;code&gt;TreeSet&lt;/code&gt; initialized to the names of children already cached (the children in this node's &quot;child-cache&quot;), invokes &lt;a href=&quot;abstractpreferences#childrenNamesSpi--&quot;&gt;&lt;code&gt;childrenNamesSpi()&lt;/code&gt;&lt;/a&gt;, and adds all of the returned child-names into the set. The elements of the tree set are dumped into a &lt;code&gt;String&lt;/code&gt; array using the &lt;code&gt;toArray&lt;/code&gt; method, and this array is returned.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금을 획득하고, 노드가 제거되지 않았는지 점검하고, 이미 캐시 된 하위 (이 노드의 &quot;하위 캐시&quot;의 하위) 이름으로 초기화 된 &lt;code&gt;TreeSet&lt;/code&gt; 을 구성하고 &lt;a href=&quot;abstractpreferences#childrenNamesSpi--&quot;&gt; &lt;code&gt;childrenNamesSpi()&lt;/code&gt; &lt;/a&gt; 호출 하고 모든 것을 추가합니다. 세트에 돌려 주어진 아이 이름 트리 세트의 요소는 &lt;code&gt;toArray&lt;/code&gt; 메소드를 사용하여 &lt;code&gt;String&lt;/code&gt; 배열 로 덤프 되고이 배열이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="7d01e6ece790750f731306a2007fcb28034a632b" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed, invokes &lt;a href=&quot;#removeSpi(java.lang.String)&quot;&gt;&lt;code&gt;removeSpi(String)&lt;/code&gt;&lt;/a&gt; and if there are any preference change listeners, enqueues a notification event for processing by the event dispatch thread.</source>
          <target state="translated">This implementation obtains this preference node's lock, checks that the node has not been removed, invokes &lt;a href=&quot;#removeSpi(java.lang.String)&quot;&gt; &lt;code&gt;removeSpi(String)&lt;/code&gt; &lt;/a&gt; and if there are any preference change listeners, enqueues a notification event for processing by the event dispatch thread.</target>
        </trans-unit>
        <trans-unit id="ff328080236bc53bbb21d28fd82c8ab703ac9410" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed, invokes &lt;a href=&quot;abstractpreferences#removeSpi-java.lang.String-&quot;&gt;&lt;code&gt;removeSpi(String)&lt;/code&gt;&lt;/a&gt; and if there are any preference change listeners, enqueues a notification event for processing by the event dispatch thread.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금을 확보하고 노드가 제거되지 않았는지 점검하고 &lt;a href=&quot;abstractpreferences#removeSpi-java.lang.String-&quot;&gt; &lt;code&gt;removeSpi(String)&lt;/code&gt; &lt;/a&gt; 호출 하며 환경 설정 변경 리스너가있는 경우 이벤트 디스패치 스레드에 의해 처리 할 알림 이벤트를 큐에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="646cf136a4cbce02f196d03c5168a651c12d8199" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, invokes &lt;a href=&quot;#childrenNames()&quot;&gt;&lt;code&gt;childrenNames()&lt;/code&gt;&lt;/a&gt; to get an array of the names of this node's children, and iterates over the array comparing the name of each child with the specified node name. If a child node has the correct name, the &lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; method is invoked and the resulting node is returned. If the iteration completes without finding the specified name, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">This implementation obtains this preference node's lock, invokes &lt;a href=&quot;#childrenNames()&quot;&gt; &lt;code&gt;childrenNames()&lt;/code&gt; &lt;/a&gt; to get an array of the names of this node's children, and iterates over the array comparing the name of each child with the specified node name. If a child node has the correct name, the &lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt; method is invoked and the resulting node is returned. If the iteration completes without finding the specified name, &lt;code&gt;null&lt;/code&gt; is returned.</target>
        </trans-unit>
        <trans-unit id="85cc7d72ba0f421214abb0a2d34a19f6fe5c4f52" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, invokes &lt;a href=&quot;#keys()&quot;&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/a&gt; to obtain an array of keys, and iterates over the array invoking &lt;a href=&quot;#remove(java.lang.String)&quot;&gt;&lt;code&gt;remove(String)&lt;/code&gt;&lt;/a&gt; on each key.</source>
          <target state="translated">This implementation obtains this preference node's lock, invokes &lt;a href=&quot;#keys()&quot;&gt; &lt;code&gt;keys()&lt;/code&gt; &lt;/a&gt; to obtain an array of keys, and iterates over the array invoking &lt;a href=&quot;#remove(java.lang.String)&quot;&gt; &lt;code&gt;remove(String)&lt;/code&gt; &lt;/a&gt; on each key.</target>
        </trans-unit>
        <trans-unit id="7d06d3af75722399c69cf0a06d1b73a18139b052" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, invokes &lt;a href=&quot;abstractpreferences#childrenNames--&quot;&gt;&lt;code&gt;childrenNames()&lt;/code&gt;&lt;/a&gt; to get an array of the names of this node's children, and iterates over the array comparing the name of each child with the specified node name. If a child node has the correct name, the &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; method is invoked and the resulting node is returned. If the iteration completes without finding the specified name, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금을 획득하고 &lt;a href=&quot;abstractpreferences#childrenNames--&quot;&gt; &lt;code&gt;childrenNames()&lt;/code&gt; &lt;/a&gt; 를 호출 하여이 노드의 하위 이름의 배열을 가져오고 각 하위의 이름을 지정된 노드 이름과 비교하여 배열을 반복합니다. 하위 노드의 이름이 올바른 경우 &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt; 메소드가 호출되고 결과 노드가 리턴됩니다. 지정된 이름을 찾지 않고 반복이 완료되면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="68dd71631e243d62782c7a1d3233e4f3411bf3d0" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, invokes &lt;a href=&quot;abstractpreferences#keys--&quot;&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/a&gt; to obtain an array of keys, and iterates over the array invoking &lt;a href=&quot;abstractpreferences#remove-java.lang.String-&quot;&gt;&lt;code&gt;remove(String)&lt;/code&gt;&lt;/a&gt; on each key.</source>
          <target state="translated">이 구현은이 환경 설정 노드의 잠금 을 획득하고 &lt;a href=&quot;abstractpreferences#keys--&quot;&gt; &lt;code&gt;keys()&lt;/code&gt; &lt;/a&gt; 를 호출하여 키 배열을 확보 한 후 각 키에서 &lt;a href=&quot;abstractpreferences#remove-java.lang.String-&quot;&gt; &lt;code&gt;remove(String)&lt;/code&gt; &lt;/a&gt; 를 호출하는 배열을 반복 합니다.</target>
        </trans-unit>
        <trans-unit id="3168ea6988716449b260f200e6698ef0c52801b1" translate="yes" xml:space="preserve">
          <source>This implementation of &lt;code&gt;coalesceEvents&lt;/code&gt; coalesces two event types: mouse move (and drag) events, and paint (and update) events. For mouse move events the last event is always returned, causing intermediate moves to be discarded. For paint events, the new event is coalesced into a complex &lt;code&gt;RepaintArea&lt;/code&gt; in the peer. The new &lt;code&gt;AWTEvent&lt;/code&gt; is always returned.</source>
          <target state="translated">This implementation of &lt;code&gt;coalesceEvents&lt;/code&gt; coalesces two event types: mouse move (and drag) events, and paint (and update) events. For mouse move events the last event is always returned, causing intermediate moves to be discarded. For paint events, the new event is coalesced into a complex &lt;code&gt;RepaintArea&lt;/code&gt; in the peer. The new &lt;code&gt;AWTEvent&lt;/code&gt; is always returned.</target>
        </trans-unit>
        <trans-unit id="68fb70f6859bc881ca8591ac741e9e9459eb437f" translate="yes" xml:space="preserve">
          <source>This implementation of the counter monitor requires the observed attribute to be of the type integer (&lt;code&gt;Byte&lt;/code&gt;, &lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Short&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;).</source>
          <target state="translated">카운터 모니터를 구현하려면 관찰 된 속성이 정수 유형 ( &lt;code&gt;Byte&lt;/code&gt; , &lt;code&gt;Integer&lt;/code&gt; , &lt;code&gt;Short&lt;/code&gt; , &lt;code&gt;Long&lt;/code&gt; ) 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="56c64353580b5bd2b143fc61404b3daed810592f" translate="yes" xml:space="preserve">
          <source>This implementation of the gauge monitor requires the observed attribute to be of the type integer or floating-point (&lt;code&gt;Byte&lt;/code&gt;, &lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Short&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt;, &lt;code&gt;Double&lt;/code&gt;).</source>
          <target state="translated">게이지 모니터를 구현하려면 관찰 된 속성이 정수 또는 부동 소수점 유형 ( &lt;code&gt;Byte&lt;/code&gt; , &lt;code&gt;Integer&lt;/code&gt; , &lt;code&gt;Short&lt;/code&gt; , &lt;code&gt;Long&lt;/code&gt; , &lt;code&gt;Float&lt;/code&gt; , &lt;code&gt;Double&lt;/code&gt; ) 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2ddbea53defab69d9606ffb011766ce60be8a7aa" translate="yes" xml:space="preserve">
          <source>This implementation provides constant-time performance for the basic operations (&lt;code&gt;get&lt;/code&gt; and &lt;code&gt;put&lt;/code&gt;), assuming the hash function disperses the elements properly among the buckets. Iteration over collection views requires time proportional to the &quot;capacity&quot; of the &lt;code&gt;HashMap&lt;/code&gt; instance (the number of buckets) plus its size (the number of key-value mappings). Thus, it's very important not to set the initial capacity too high (or the load factor too low) if iteration performance is important.</source>
          <target state="translated">이 구현은 해시 함수가 버킷간에 요소를 올바르게 분산시키는 것으로 가정하여 기본 작업 ( &lt;code&gt;get&lt;/code&gt; 및 &lt;code&gt;put&lt;/code&gt; )에 일정한 시간 성능을 제공합니다 . 컬렉션 뷰를 반복하면 &lt;code&gt;HashMap&lt;/code&gt; 인스턴스 의 &quot;용량&quot; (버킷 수)에 크기 (키-값 매핑 수)를 더한 시간이 필요합니다 . 따라서 반복 성능이 중요한 경우 초기 용량을 너무 높게 (또는로드 팩터가 너무 낮게) 설정하지 않는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="8c27c8f93fb0c5e1304d66a7f7e6788cb8b334d2" translate="yes" xml:space="preserve">
          <source>This implementation provides expected average</source>
          <target state="translated">이 구현은 예상 평균을 제공합니다</target>
        </trans-unit>
        <trans-unit id="0927d54bcfd80f8aefb6120fb2f7298a28299ab9" translate="yes" xml:space="preserve">
          <source>This implementation provides guaranteed log(n) time cost for the &lt;code&gt;containsKey&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt; operations. Algorithms are adaptations of those in Cormen, Leiserson, and Rivest's &lt;em&gt;Introduction to Algorithms&lt;/em&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;containsKey&lt;/code&gt; , &lt;code&gt;get&lt;/code&gt; , &lt;code&gt;put&lt;/code&gt; 및 &lt;code&gt;remove&lt;/code&gt; 작업에 대해 보장 된 log (n) 시간 비용을 제공합니다 . 알고리즘은 Cormen, Leiserson 및 Rivest의 &lt;em&gt;알고리즘 소개에 적용됩니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="36ff11dc05516f440cd0122d1f08e33fd3b4d671" translate="yes" xml:space="preserve">
          <source>This implementation provides guaranteed log(n) time cost for the basic operations (&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt; and &lt;code&gt;contains&lt;/code&gt;).</source>
          <target state="translated">이 구현은 기본 작업 ( &lt;code&gt;add&lt;/code&gt; , &lt;code&gt;remove&lt;/code&gt; 및 &lt;code&gt;contains&lt;/code&gt; )에 대해 보장 된 log (n) 시간 비용을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="adb9b1e2380a066f0731a42f986462a4e9caef74" translate="yes" xml:space="preserve">
          <source>This implementation reads fresh entropy from the system default entropy source determined by the security property &lt;code&gt;securerandom.source&lt;/code&gt;.</source>
          <target state="translated">This implementation reads fresh entropy from the system default entropy source determined by the security property &lt;code&gt;securerandom.source&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60c4f7fa5f2db32614f524b752c0959196d6bb59" translate="yes" xml:space="preserve">
          <source>This implementation rejects submitted tasks (that is, by throwing &lt;a href=&quot;rejectedexecutionexception&quot;&gt;&lt;code&gt;RejectedExecutionException&lt;/code&gt;&lt;/a&gt;) only when the pool is shut down or internal resources have been exhausted.</source>
          <target state="translated">이 구현은 풀이 종료되거나 내부 자원이 소진 된 경우에만 제출 된 작업을 거부합니다 (즉, &lt;a href=&quot;rejectedexecutionexception&quot;&gt; &lt;code&gt;RejectedExecutionException&lt;/code&gt; 발생&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5e13716cb6d75832662bdbdfbcd14584e2b3dc22" translate="yes" xml:space="preserve">
          <source>This implementation repeatedly invokes &lt;a href=&quot;queue#poll()&quot;&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/a&gt; until it returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">This implementation repeatedly invokes &lt;a href=&quot;queue#poll()&quot;&gt; &lt;code&gt;poll&lt;/code&gt; &lt;/a&gt; until it returns &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="363bdcdf1055b4b3a93d614d60e563148e7f8e19" translate="yes" xml:space="preserve">
          <source>This implementation repeatedly invokes &lt;a href=&quot;queue#poll--&quot;&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/a&gt; until it returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 구현 은 &lt;code&gt;null&lt;/code&gt; 을 리턴 할 때까지 &lt;a href=&quot;queue#poll--&quot;&gt; &lt;code&gt;poll&lt;/code&gt; &lt;/a&gt; 반복적으로 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="42b8f39f4de84dc5013aa7b4933bc01700727615" translate="yes" xml:space="preserve">
          <source>This implementation returned &lt;code&gt;Printable&lt;/code&gt; performs all painting on the</source>
          <target state="translated">This implementation returned &lt;code&gt;Printable&lt;/code&gt; performs all painting on the</target>
        </trans-unit>
        <trans-unit id="2b9b9c2a6a53a3405f25a56a693f6318ab8bad69" translate="yes" xml:space="preserve">
          <source>This implementation returns &quot;SHA-256&quot;. The value may change in the future.</source>
          <target state="translated">이 구현은 &quot;SHA-256&quot;을 반환합니다. 값은 향후 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c28808be8906fbe4173771d18301aaa9ab4f926" translate="yes" xml:space="preserve">
          <source>This implementation returns -1, indicating the &lt;code&gt;AbstractColorChooserPanel&lt;/code&gt; does not support a mnemonic, subclasses wishing a mnemonic will need to override this.</source>
          <target state="translated">This implementation returns -1, indicating the &lt;code&gt;AbstractColorChooserPanel&lt;/code&gt; does not support a mnemonic, subclasses wishing a mnemonic will need to override this.</target>
        </trans-unit>
        <trans-unit id="7a8193d83a58b4693e51fd1645579525c4754def" translate="yes" xml:space="preserve">
          <source>This implementation returns 0, indicating the &lt;code&gt;AbstractColorChooserPanel&lt;/code&gt; does not support a mnemonic, subclasses wishing a mnemonic will need to override this.</source>
          <target state="translated">This implementation returns 0, indicating the &lt;code&gt;AbstractColorChooserPanel&lt;/code&gt; does not support a mnemonic, subclasses wishing a mnemonic will need to override this.</target>
        </trans-unit>
        <trans-unit id="093b6aef4ed6c5733778902eedda2a13e2341f03" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;0L&lt;/code&gt;.</source>
          <target state="translated">This implementation returns &lt;code&gt;0L&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="adbd9f8ccc390387c4b3a8d79e90767a5e78efc8" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;0L&lt;/code&gt;. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">이 구현은 &lt;code&gt;0L&lt;/code&gt; 을 반환합니다 . &lt;a href=&quot;fileobject&quot;&gt; &lt;code&gt;FileObject&lt;/code&gt; &lt;/a&gt; 의 계약을 준수 하는 한 서브 클래스는이 동작을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d64e5ac8d3f658cbe256bb54a117217a2bd8b5fd" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;entrySet().size()&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;entrySet().size()&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="46c3da213422759dc708bac3ab8116393923e0d9" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;listIterator(0)&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;listIterator(0)&lt;/code&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="c378923c7444f9a5c08f787af5f79ce1433b3e23" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">This implementation returns &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd3af095c822c9240cdacce1cb763985dd95df24" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;null&lt;/code&gt;. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;javafileobject&quot;&gt;&lt;code&gt;JavaFileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">이 구현은 &lt;code&gt;null&lt;/code&gt; 을 리턴합니다 . &lt;a href=&quot;javafileobject&quot;&gt; &lt;code&gt;JavaFileObject&lt;/code&gt; &lt;/a&gt; 의 계약을 준수 하는 한 서브 클래스는이 동작을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5d5e13dea15f16ec8302f9e2259fab6b5b2c4758" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;size() == 0&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;size() == 0&lt;/code&gt; 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="df25612aa66d4f90035fb6231f749225db7f8ac6" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;offer&lt;/code&gt; succeeds, else throws an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">이 구현은 반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;offer&lt;/code&gt; 성공 다른, 발생 &lt;code&gt;IllegalStateException&lt;/code&gt; 이를 .</target>
        </trans-unit>
        <trans-unit id="254fea90d7d01c3b9c172b9baffd20906fb95245" translate="yes" xml:space="preserve">
          <source>This implementation returns a String containing the transformation, mode, and provider of this Cipher. The exact format of the String is unspecified and is subject to change.</source>
          <target state="translated">이 구현은이 암호의 변환, 모드 및 공급자를 포함하는 문자열을 반환합니다. 문자열의 정확한 형식은 지정되지 않았으며 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fcc8f2abac7f7acb9536a3f5c83b27d8e81afe3e" translate="yes" xml:space="preserve">
          <source>This implementation returns a collection that subclasses &lt;a href=&quot;abstractcollection&quot;&gt;&lt;code&gt;AbstractCollection&lt;/code&gt;&lt;/a&gt;. The subclass's iterator method returns a &quot;wrapper object&quot; over this map's &lt;code&gt;entrySet()&lt;/code&gt; iterator. The &lt;code&gt;size&lt;/code&gt; method delegates to this map's &lt;code&gt;size&lt;/code&gt; method and the &lt;code&gt;contains&lt;/code&gt; method delegates to this map's &lt;code&gt;containsValue&lt;/code&gt; method.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractcollection&quot;&gt; &lt;code&gt;AbstractCollection&lt;/code&gt; &lt;/a&gt; 을 서브 클래 싱하는 컬렉션을 반환합니다 . 서브 클래스의 반복자 메소드는이 맵의 &lt;code&gt;entrySet()&lt;/code&gt; 반복자에 대해 &quot;래퍼 오브젝트&quot;를 리턴 합니다. &lt;code&gt;size&lt;/code&gt; 방법이지도의 대의원 &lt;code&gt;size&lt;/code&gt; 방식과는 &lt;code&gt;contains&lt;/code&gt; 이지도의에 방법 대표를 &lt;code&gt;containsValue&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="8191a32f38fd937c6297e93d11b76ba70f9602c4" translate="yes" xml:space="preserve">
          <source>This implementation returns a list that subclasses &lt;code&gt;AbstractList&lt;/code&gt;. The subclass stores, in private fields, the offset of the subList within the backing list, the size of the subList (which can change over its lifetime), and the expected &lt;code&gt;modCount&lt;/code&gt; value of the backing list. There are two variants of the subclass, one of which implements &lt;code&gt;RandomAccess&lt;/code&gt;. If this list implements &lt;code&gt;RandomAccess&lt;/code&gt; the returned list will be an instance of the subclass that implements &lt;code&gt;RandomAccess&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;AbstractList&lt;/code&gt; 를 서브 클래 싱하는 목록을 반환합니다 . 서브 클래스는 백킹리스트 내의 서브리스트의 오프셋, 서브리스트의 크기 (수명에 따라 변할 수있는) 및 백킹리스트 의 예상 &lt;code&gt;modCount&lt;/code&gt; 값을 개인 필드에 저장 합니다. 서브 클래스에는 두 가지 변형이 있으며 그중 하나는 &lt;code&gt;RandomAccess&lt;/code&gt; 를 구현 합니다. 이 목록 구현하면 &lt;code&gt;RandomAccess&lt;/code&gt; 반환 된 목록은 구현이 서브 클래스의 인스턴스가 될 것입니다 &lt;code&gt;RandomAccess&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8b763326bba5a126624e545f6de6b0542209cf2" translate="yes" xml:space="preserve">
          <source>This implementation returns a list that subclasses &lt;code&gt;AbstractList&lt;/code&gt;. The subclass stores, in private fields, the size of the subList (which can change over its lifetime), and the expected &lt;code&gt;modCount&lt;/code&gt; value of the backing list. There are two variants of the subclass, one of which implements &lt;code&gt;RandomAccess&lt;/code&gt;. If this list implements &lt;code&gt;RandomAccess&lt;/code&gt; the returned list will be an instance of the subclass that implements &lt;code&gt;RandomAccess&lt;/code&gt;.</source>
          <target state="translated">This implementation returns a list that subclasses &lt;code&gt;AbstractList&lt;/code&gt; . The subclass stores, in private fields, the size of the subList (which can change over its lifetime), and the expected &lt;code&gt;modCount&lt;/code&gt; value of the backing list. There are two variants of the subclass, one of which implements &lt;code&gt;RandomAccess&lt;/code&gt; . If this list implements &lt;code&gt;RandomAccess&lt;/code&gt; the returned list will be an instance of the subclass that implements &lt;code&gt;RandomAccess&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3cab51ad575be1260ab2ed83ebe6d50da83f18f8" translate="yes" xml:space="preserve">
          <source>This implementation returns a set that subclasses &lt;a href=&quot;abstractset&quot;&gt;&lt;code&gt;AbstractSet&lt;/code&gt;&lt;/a&gt;. The subclass's iterator method returns a &quot;wrapper object&quot; over this map's &lt;code&gt;entrySet()&lt;/code&gt; iterator. The &lt;code&gt;size&lt;/code&gt; method delegates to this map's &lt;code&gt;size&lt;/code&gt; method and the &lt;code&gt;contains&lt;/code&gt; method delegates to this map's &lt;code&gt;containsKey&lt;/code&gt; method.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;abstractset&quot;&gt; &lt;code&gt;AbstractSet&lt;/code&gt; &lt;/a&gt; 를 서브 클래스 화하는 세트를 돌려줍니다 . 서브 클래스의 반복자 메소드는이 맵의 &lt;code&gt;entrySet()&lt;/code&gt; 반복자에 대해 &quot;래퍼 오브젝트&quot;를 리턴 합니다. &lt;code&gt;size&lt;/code&gt; 방법이지도의 대의원 &lt;code&gt;size&lt;/code&gt; 방식과는 &lt;code&gt;contains&lt;/code&gt; 이지도의에 방법 위임을 &lt;code&gt;containsKey&lt;/code&gt; 의 방법.</target>
        </trans-unit>
        <trans-unit id="c0a2466ae2426c574f6ea8c8e11764f1022dc5f9" translate="yes" xml:space="preserve">
          <source>This implementation returns a straightforward implementation of the &lt;code&gt;ListIterator&lt;/code&gt; interface that extends the implementation of the &lt;code&gt;Iterator&lt;/code&gt; interface returned by the &lt;code&gt;iterator()&lt;/code&gt; method. The &lt;code&gt;ListIterator&lt;/code&gt; implementation relies on the backing list's &lt;code&gt;get(int)&lt;/code&gt;, &lt;code&gt;set(int, E)&lt;/code&gt;, &lt;code&gt;add(int, E)&lt;/code&gt; and &lt;code&gt;remove(int)&lt;/code&gt; methods.</source>
          <target state="translated">이 구현은 &lt;code&gt;ListIterator&lt;/code&gt; 의 간단한 구현을 리턴합니다. 을 확장하는 인터페이스 합니다. &lt;code&gt;Iterator&lt;/code&gt; &lt;code&gt;iterator()&lt;/code&gt; 메소드에 의해 리턴 된 Iterator 인터페이스 리턴 합니다 . &lt;code&gt;ListIterator&lt;/code&gt; 구현은 백업 목록의에 의존 &lt;code&gt;get(int)&lt;/code&gt; , &lt;code&gt;set(int, E)&lt;/code&gt; , &lt;code&gt;add(int, E)&lt;/code&gt; 및 &lt;code&gt;remove(int)&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="ce06f71af91689be6b60c9092b5a458e6979ddc3" translate="yes" xml:space="preserve">
          <source>This implementation returns a straightforward implementation of the iterator interface, relying on the backing list's &lt;code&gt;size()&lt;/code&gt;, &lt;code&gt;get(int)&lt;/code&gt;, and &lt;code&gt;remove(int)&lt;/code&gt; methods.</source>
          <target state="translated">이 구현은 지원 목록의 &lt;code&gt;size()&lt;/code&gt; , &lt;code&gt;get(int)&lt;/code&gt; 및 &lt;code&gt;remove(int)&lt;/code&gt; 메소드에 의존하여 반복자 인터페이스의 간단한 구현을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="d795f8b47a16c270aa92fb3f0d6b094bda81af83" translate="yes" xml:space="preserve">
          <source>This implementation returns all children as: &lt;a href=&quot;#toHandle()&quot;&gt;&lt;code&gt;toHandle().descendants()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This implementation returns all children as: &lt;a href=&quot;#toHandle()&quot;&gt; &lt;code&gt;toHandle().descendants()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b0c598712b22d7cfa94338717f17450745aa979d" translate="yes" xml:space="preserve">
          <source>This implementation returns an &lt;a href=&quot;../../../../../../java.base/java/util/collections#unmodifiableList(java.util.List)&quot;&gt;&lt;code&gt;unmodifiable list&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This implementation returns an &lt;a href=&quot;../../../../../../java.base/java/util/collections#unmodifiableList(java.util.List)&quot;&gt; &lt;code&gt;unmodifiable list&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="752ca0f1df1e1845124d29a271e108476d28a1b3" translate="yes" xml:space="preserve">
          <source>This implementation returns an &lt;a href=&quot;../../../../../../java.base/java/util/collections#unmodifiableMap(java.util.Map)&quot;&gt;&lt;code&gt;unmodifiable map&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This implementation returns an &lt;a href=&quot;../../../../../../java.base/java/util/collections#unmodifiableMap(java.util.Map)&quot;&gt; &lt;code&gt;unmodifiable map&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cb219c6439d78f7f174cb2d3ad915bb22e12743f" translate="yes" xml:space="preserve">
          <source>This implementation returns an array containing all the elements returned by this collection's iterator in the same order, stored in consecutive elements of the array, starting with index &lt;code&gt;0&lt;/code&gt;. If the number of elements returned by the iterator is too large to fit into the specified array, then the elements are returned in a newly allocated array with length equal to the number of elements returned by the iterator, even if the size of this collection changes during iteration, as might happen if the collection permits concurrent modification during iteration. The &lt;code&gt;size&lt;/code&gt; method is called only as an optimization hint; the correct result is returned even if the iterator returns a different number of elements.</source>
          <target state="translated">이 구현은,이 컬렉션의 반복자에 의해 돌려 주어진 모든 요소가 같은 순서로 배열의 연속 요소에 격납되어 인덱스 &lt;code&gt;0&lt;/code&gt; 로부터 시작되는 모든 요소를 ​​포함한 배열을 돌려줍니다 . 반복자가 반환 한 요소 수가 지정된 배열에 맞지 않을 경우이 컬렉션의 크기가 변경 되더라도 반복자가 반환 한 요소 수와 길이가 같은 새로 할당 된 배열로 반환됩니다. 콜렉션이 반복 중에 동시 수정을 허용하는 경우 발생할 수있는 반복 중. &lt;code&gt;size&lt;/code&gt; 방법은 최적화 힌트라고한다; 반복자가 다른 수의 요소를 리턴하더라도 올바른 결과가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="ea412474fbde6ee2834444f6e6d242fb6287dcd4" translate="yes" xml:space="preserve">
          <source>This implementation returns an array containing all the elements returned by this collection's iterator, in the same order, stored in consecutive elements of the array, starting with index &lt;code&gt;0&lt;/code&gt;. The length of the returned array is equal to the number of elements returned by the iterator, even if the size of this collection changes during iteration, as might happen if the collection permits concurrent modification during iteration. The &lt;code&gt;size&lt;/code&gt; method is called only as an optimization hint; the correct result is returned even if the iterator returns a different number of elements.</source>
          <target state="translated">이 구현은,이 컬렉션의 반복자에 의해 돌려 주어진 모든 요소가 같은 순서로 배열의 연속 요소에 격납되어 인덱스 &lt;code&gt;0&lt;/code&gt; 로부터 시작되는 모든 요소를 ​​포함한 배열을 돌려줍니다 . 컬렉션이 반복 중에 동시에 수정을 허용하는 경우 발생할 수있는 것처럼이 컬렉션의 크기가 반복 중에 변경 되더라도 반환 된 배열의 길이는 반복자가 반환 한 요소 수와 같습니다. &lt;code&gt;size&lt;/code&gt; 방법은 최적화 힌트라고한다; 반복자가 다른 수의 요소를 리턴하더라도 올바른 결과가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="4213ac0815880b4db863eb1de657c3e44b7db9b1" translate="yes" xml:space="preserve">
          <source>This implementation returns an empty list.</source>
          <target state="translated">이 구현은 빈 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="10736bffd5dad112a1ea7d4127b9ec8a2aba7320" translate="yes" xml:space="preserve">
          <source>This implementation returns an empty string.</source>
          <target state="translated">This implementation returns an empty string.</target>
        </trans-unit>
        <trans-unit id="9266c2e083a35167037f5508a8b6e979f053b125" translate="yes" xml:space="preserve">
          <source>This implementation returns false.</source>
          <target state="translated">이 구현은 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="22e2de5edd687b4e765414bf07556b3d3072188b" translate="yes" xml:space="preserve">
          <source>This implementation returns information about the process as: &lt;a href=&quot;#toHandle()&quot;&gt;&lt;code&gt;toHandle().info()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This implementation returns information about the process as: &lt;a href=&quot;#toHandle()&quot;&gt; &lt;code&gt;toHandle().info()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a2ee6ff2248ef13e09c4047ccbe2f811e7e95636" translate="yes" xml:space="preserve">
          <source>This implementation returns the cause that was supplied via one of the constructors requiring a &lt;code&gt;Throwable&lt;/code&gt;, or that was set after creation with the &lt;a href=&quot;#initCause(java.lang.Throwable)&quot;&gt;&lt;code&gt;initCause(Throwable)&lt;/code&gt;&lt;/a&gt; method. While it is typically unnecessary to override this method, a subclass can override it to return a cause set by some other means. This is appropriate for a &quot;legacy chained throwable&quot; that predates the addition of chained exceptions to &lt;code&gt;Throwable&lt;/code&gt;. Note that it is</source>
          <target state="translated">This implementation returns the cause that was supplied via one of the constructors requiring a &lt;code&gt;Throwable&lt;/code&gt; , or that was set after creation with the &lt;a href=&quot;#initCause(java.lang.Throwable)&quot;&gt; &lt;code&gt;initCause(Throwable)&lt;/code&gt; &lt;/a&gt; method. While it is typically unnecessary to override this method, a subclass can override it to return a cause set by some other means. This is appropriate for a &quot;legacy chained throwable&quot; that predates the addition of chained exceptions to &lt;code&gt;Throwable&lt;/code&gt; . Note that it is</target>
        </trans-unit>
        <trans-unit id="704a9caba648812bf75c8fceaeaf7f825f422d89" translate="yes" xml:space="preserve">
          <source>This implementation returns the cause that was supplied via one of the constructors requiring a &lt;code&gt;Throwable&lt;/code&gt;, or that was set after creation with the &lt;a href=&quot;../../../java/lang/throwable#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;Throwable.initCause(Throwable)&lt;/code&gt;&lt;/a&gt; method. While it is typically unnecessary to override this method, a subclass can override it to return a cause set by some other means. This is appropriate for a &quot;legacy chained throwable&quot; that predates the addition of chained exceptions to &lt;code&gt;Throwable&lt;/code&gt;. Note that it is</source>
          <target state="translated">이 구현은 다음을 요구하는 생성자 중 하나를 통해 제공된 원인을 반환합니다. &lt;code&gt;Throwable&lt;/code&gt; 이 되었거나 &lt;a href=&quot;../../../java/lang/throwable#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;Throwable.initCause(Throwable)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 작성된 . 일반적으로이 메소드를 대체 할 필요는 없지만 서브 클래스는 다른 방법으로 원인 세트를 리턴하기 위해이를 대체 할 수 있습니다. 이는 체인 예외를 &lt;code&gt;Throwable&lt;/code&gt; 에 추가하기 이전의 &quot;레거시 체인 던지기 가능&quot;에 적합합니다 . 참고</target>
        </trans-unit>
        <trans-unit id="0806e0bd9953db61186592b082389efb9c9f7ef8" translate="yes" xml:space="preserve">
          <source>This implementation returns the cause that was supplied via one of the constructors requiring a &lt;code&gt;Throwable&lt;/code&gt;, or that was set after creation with the &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;initCause(Throwable)&lt;/code&gt;&lt;/a&gt; method. While it is typically unnecessary to override this method, a subclass can override it to return a cause set by some other means. This is appropriate for a &quot;legacy chained throwable&quot; that predates the addition of chained exceptions to &lt;code&gt;Throwable&lt;/code&gt;. Note that it is</source>
          <target state="translated">이 구현은 다음을 요구하는 생성자 중 하나를 통해 제공된 원인을 반환합니다. &lt;code&gt;Throwable&lt;/code&gt; 이 되었거나 &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;initCause(Throwable)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 작성된 . 일반적으로이 메소드를 대체 할 필요는 없지만 서브 클래스는 다른 방법으로 원인 세트를 리턴하기 위해이를 대체 할 수 있습니다. 이는 체인 예외를 &lt;code&gt;Throwable&lt;/code&gt; 에 추가하기 이전의 &quot;레거시 체인 던지기 가능&quot;에 적합합니다 . 참고</target>
        </trans-unit>
        <trans-unit id="28a2e3805ca1f4e6d4b6419bd0153cbdd02bd025" translate="yes" xml:space="preserve">
          <source>This implementation returns the characteristics as reported when created.</source>
          <target state="translated">이 구현은 작성시보고 된 특성을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="aab72488b6c2f2a2a604180eee11afc023ecff02" translate="yes" xml:space="preserve">
          <source>This implementation returns the compiler provided by the &lt;code&gt;jdk.compiler&lt;/code&gt; module if that module is available, and &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">This implementation returns the compiler provided by the &lt;code&gt;jdk.compiler&lt;/code&gt; module if that module is available, and &lt;code&gt;null&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="428583642274503a5ea05361f78656d2fd0b9dfe" translate="yes" xml:space="preserve">
          <source>This implementation returns the direct children as: &lt;a href=&quot;#toHandle()&quot;&gt;&lt;code&gt;toHandle().children()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This implementation returns the direct children as: &lt;a href=&quot;#toHandle()&quot;&gt; &lt;code&gt;toHandle().children()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="06b0e25656160a2bd660c5d5da8f9216b5c2b92a" translate="yes" xml:space="preserve">
          <source>This implementation returns the estimated size as reported when created and, if the estimate size is known, decreases in size when split.</source>
          <target state="translated">이 구현은 생성시보고 된 예상 크기를 반환하고, 추정 크기를 알고 있으면 분할시 크기가 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="98329e6ec9710a436d16bdff3cab443e5566e472" translate="yes" xml:space="preserve">
          <source>This implementation returns the following value:</source>
          <target state="translated">이 구현은 다음 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="82252aa44aca13e18dcc9d5c5326d8563d9b771a" translate="yes" xml:space="preserve">
          <source>This implementation returns the inverse result to &lt;code&gt;isInlineTag&lt;/code&gt;.</source>
          <target state="translated">이 구현은 역 결과를 &lt;code&gt;isInlineTag&lt;/code&gt; 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f36f77d7c345cfae5bcd2ab6015b54142fde8b75" translate="yes" xml:space="preserve">
          <source>This implementation returns the longest non-breakable area within the view as a minimum span for &lt;code&gt;View.X_AXIS&lt;/code&gt;.</source>
          <target state="translated">This implementation returns the longest non-breakable area within the view as a minimum span for &lt;code&gt;View.X_AXIS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="960b87298f6d46d9554aad11014cb553841b3e23" translate="yes" xml:space="preserve">
          <source>This implementation returns the result of &lt;a href=&quot;#intValue()&quot;&gt;&lt;code&gt;intValue()&lt;/code&gt;&lt;/a&gt; cast to a &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">This implementation returns the result of &lt;a href=&quot;#intValue()&quot;&gt; &lt;code&gt;intValue()&lt;/code&gt; &lt;/a&gt; cast to a &lt;code&gt;byte&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9322ef0fdb96bc21334ec2b96883906a72e328a0" translate="yes" xml:space="preserve">
          <source>This implementation returns the result of &lt;a href=&quot;#intValue()&quot;&gt;&lt;code&gt;intValue()&lt;/code&gt;&lt;/a&gt; cast to a &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">This implementation returns the result of &lt;a href=&quot;#intValue()&quot;&gt; &lt;code&gt;intValue()&lt;/code&gt; &lt;/a&gt; cast to a &lt;code&gt;short&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee1a335203f53f9f48dde9056117773ff28d4e6e" translate="yes" xml:space="preserve">
          <source>This implementation returns the result of &lt;a href=&quot;number#intValue--&quot;&gt;&lt;code&gt;intValue()&lt;/code&gt;&lt;/a&gt; cast to a &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;number#intValue--&quot;&gt; &lt;code&gt;intValue()&lt;/code&gt; &lt;/a&gt; 의 결과를 반환합니다 캐스트 &lt;code&gt;byte&lt;/code&gt; 로 .</target>
        </trans-unit>
        <trans-unit id="924fd521b97b725a535575773f690037451d3223" translate="yes" xml:space="preserve">
          <source>This implementation returns the result of &lt;a href=&quot;number#intValue--&quot;&gt;&lt;code&gt;intValue()&lt;/code&gt;&lt;/a&gt; cast to a &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;number#intValue--&quot;&gt; &lt;code&gt;intValue()&lt;/code&gt; &lt;/a&gt; 캐스트 결과를 &lt;code&gt;short&lt;/code&gt; 로 .</target>
        </trans-unit>
        <trans-unit id="cdebbceb0ccb7ee345e3d55ab419fec243b6be92" translate="yes" xml:space="preserve">
          <source>This implementation returns the result of &lt;code&gt;peek&lt;/code&gt; unless the queue is empty.</source>
          <target state="translated">이 구현은 다음의 결과를 반환합니다 &lt;code&gt;peek&lt;/code&gt; 큐가 비어 있지 않으면 .</target>
        </trans-unit>
        <trans-unit id="2811fdbefc2411a03c42ac53f622bc96435355df" translate="yes" xml:space="preserve">
          <source>This implementation returns the result of &lt;code&gt;poll&lt;/code&gt; unless the queue is empty.</source>
          <target state="translated">이 구현은 다음의 결과를 반환합니다 &lt;code&gt;poll&lt;/code&gt; 큐가 비어 있지 않으면 .</target>
        </trans-unit>
        <trans-unit id="9cec4a2ca10de01a37284358761c58fd7a602902" translate="yes" xml:space="preserve">
          <source>This implementation returns the tool provided by the &lt;code&gt;jdk.javadoc&lt;/code&gt; module if that module is available, and &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">This implementation returns the tool provided by the &lt;code&gt;jdk.javadoc&lt;/code&gt; module if that module is available, and &lt;code&gt;null&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="0c670b276788c247adc636b3260421658ed4ca31" translate="yes" xml:space="preserve">
          <source>This implementation returns true if the name includes the word &quot;MODULE&quot;.</source>
          <target state="translated">This implementation returns true if the name includes the word &quot;MODULE&quot;.</target>
        </trans-unit>
        <trans-unit id="9350ebc66cfeb51b88e4ee4f1e30810848995f04" translate="yes" xml:space="preserve">
          <source>This implementation scans the enclosed elements, unless the element is a &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; in which case &lt;code&gt;
 visitUnknown&lt;/code&gt; is called.</source>
          <target state="translated">This implementation scans the enclosed elements, unless the element is a &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; in which case &lt;code&gt; visitUnknown&lt;/code&gt; is called.</target>
        </trans-unit>
        <trans-unit id="80a8983cbfced2aba34489f927790fdd09e806e7" translate="yes" xml:space="preserve">
          <source>This implementation scans the enclosed elements.</source>
          <target state="translated">이 구현은 동봉 된 요소를 스캔합니다.</target>
        </trans-unit>
        <trans-unit id="11a00c8342bc5f3676a33bcd182169a1815bcacb" translate="yes" xml:space="preserve">
          <source>This implementation scans the enclosed elements. Note that type parameters are &lt;em&gt;not&lt;/em&gt; scanned by this implementation since type parameters are not considered to be &lt;a href=&quot;../element/typeelement#getEnclosedElements()&quot;&gt;enclosed elements of a type&lt;/a&gt;.</source>
          <target state="translated">이 구현은 포함 된 요소를 스캔합니다. 유형 매개 변수는 유형의 포함 &lt;a href=&quot;../element/typeelement#getEnclosedElements()&quot;&gt;된 요소로&lt;/a&gt; 간주 &lt;em&gt;되지&lt;/em&gt; 않으므로이 구현 에서는 유형 매개 변수를 스캔하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="f7ceceff1d565910520e2ba88e2cafb53e750c67" translate="yes" xml:space="preserve">
          <source>This implementation scans the parameters.</source>
          <target state="translated">This implementation scans the parameters.</target>
        </trans-unit>
        <trans-unit id="7fbe21decc89f0a72ab44d399951f2c903f79728" translate="yes" xml:space="preserve">
          <source>This implementation scans the parameters. Note that type parameters are &lt;em&gt;not&lt;/em&gt; scanned by this implementation.</source>
          <target state="translated">이 구현은 매개 변수를 스캔합니다. 이 구현 에서는 유형 매개 변수를 스캔 &lt;em&gt;하지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="9c69aeefb36c1cd30ede8b1d67753053cdf875f5" translate="yes" xml:space="preserve">
          <source>This implementation scans the type parameters, if any, and then the enclosed elements.</source>
          <target state="translated">이 구현은 유형 매개 변수 (있는 경우)를 스캔 한 다음 포함 된 요소를 스캔합니다.</target>
        </trans-unit>
        <trans-unit id="2471a45a6da31959c0293a90c4124d8d52d212d0" translate="yes" xml:space="preserve">
          <source>This implementation simply returns &lt;code&gt;null&lt;/code&gt;; if the programmer desires thread-local variables to have an initial value other than &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;ThreadLocal&lt;/code&gt; must be subclassed, and this method overridden. Typically, an anonymous inner class will be used.</source>
          <target state="translated">이 구현은 단순히 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 프로그래머는 스레드 로컬 변수를 원하면 이외 초기치 갖도록 &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;ThreadLocal&lt;/code&gt; 서브 클래스되어야하며,이 방법은 무시. 일반적으로 익명의 내부 클래스가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8fdeca85dae0066c2a40c745927f2be370fd3a7d" translate="yes" xml:space="preserve">
          <source>This implementation spares its clients from the unspecified, generally chaotic ordering provided by &lt;a href=&quot;hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; (and &lt;a href=&quot;hashtable&quot;&gt;&lt;code&gt;Hashtable&lt;/code&gt;&lt;/a&gt;), without incurring the increased cost associated with &lt;a href=&quot;treemap&quot;&gt;&lt;code&gt;TreeMap&lt;/code&gt;&lt;/a&gt;. It can be used to produce a copy of a map that has the same order as the original, regardless of the original map's implementation:</source>
          <target state="translated">이 구현 은 &lt;a href=&quot;treemap&quot;&gt; &lt;code&gt;TreeMap&lt;/code&gt; &lt;/a&gt; 과 관련된 비용 증가없이 &lt;a href=&quot;hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; (및 &lt;a href=&quot;hashtable&quot;&gt; &lt;code&gt;Hashtable&lt;/code&gt; &lt;/a&gt; )에서 제공하는 지정되지 않은 일반적으로 혼란스러운 순서에서 클라이언트를 보호합니다. . 원본지도의 구현에 관계없이 원본과 동일한 순서의지도 사본을 생성하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0fc4962cd6567a4ad63d2821a4062c380719662" translate="yes" xml:space="preserve">
          <source>This implementation spares its clients from the unspecified, generally chaotic ordering provided by &lt;a href=&quot;hashset&quot;&gt;&lt;code&gt;HashSet&lt;/code&gt;&lt;/a&gt;, without incurring the increased cost associated with &lt;a href=&quot;treeset&quot;&gt;&lt;code&gt;TreeSet&lt;/code&gt;&lt;/a&gt;. It can be used to produce a copy of a set that has the same order as the original, regardless of the original set's implementation:</source>
          <target state="translated">이 구현 은 &lt;a href=&quot;treeset&quot;&gt; &lt;code&gt;TreeSet&lt;/code&gt; &lt;/a&gt; 과 관련된 비용 증가없이 &lt;a href=&quot;hashset&quot;&gt; &lt;code&gt;HashSet&lt;/code&gt; &lt;/a&gt; 에서 제공하는 지정되지 않은 일반적으로 혼란스러운 순서에서 클라이언트를 보호합니다. . 원본 세트의 구현에 관계없이 원본과 동일한 순서의 세트 사본을 생성하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c344557b692068b2c12f7bacd2b9ca2f60bf7040" translate="yes" xml:space="preserve">
          <source>This implementation supports good parallel stream performance for the standard charsets &lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt;&lt;code&gt;UTF-8&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../charset/standardcharsets#US_ASCII&quot;&gt;&lt;code&gt;US-ASCII&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../charset/standardcharsets#ISO_8859_1&quot;&gt;&lt;code&gt;ISO-8859-1&lt;/code&gt;&lt;/a&gt;. Such &lt;em&gt;line-optimal&lt;/em&gt; charsets have the property that the encoded bytes of a line feed ('\n') or a carriage return ('\r') are efficiently identifiable from other encoded characters when randomly accessing the bytes of the file.</source>
          <target state="translated">This implementation supports good parallel stream performance for the standard charsets &lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt; &lt;code&gt;UTF-8&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;../charset/standardcharsets#US_ASCII&quot;&gt; &lt;code&gt;US-ASCII&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;../charset/standardcharsets#ISO_8859_1&quot;&gt; &lt;code&gt;ISO-8859-1&lt;/code&gt; &lt;/a&gt;. Such &lt;em&gt;line-optimal&lt;/em&gt; charsets have the property that the encoded bytes of a line feed ('\n') or a carriage return ('\r') are efficiently identifiable from other encoded characters when randomly accessing the bytes of the file.</target>
        </trans-unit>
        <trans-unit id="d2599e56cc3392b60cf84b1b831e1588abdea598" translate="yes" xml:space="preserve">
          <source>This implementation supports only one line style key, &lt;code&gt;&quot;dashed&quot;&lt;/code&gt;. The &lt;code&gt;&quot;dashed&quot;&lt;/code&gt; line style is applied only to vertical and horizontal lines.</source>
          <target state="translated">This implementation supports only one line style key, &lt;code&gt;&quot;dashed&quot;&lt;/code&gt; . The &lt;code&gt;&quot;dashed&quot;&lt;/code&gt; line style is applied only to vertical and horizontal lines.</target>
        </trans-unit>
        <trans-unit id="5bb7b3ee488ca277dea76aee2c189a7e5d119226" translate="yes" xml:space="preserve">
          <source>This implementation supports the Hash_DRBG and HMAC_DRBG mechanisms with DRBG algorithm SHA-224, SHA-512/224, SHA-256, SHA-512/256, SHA-384 and SHA-512, and CTR_DRBG (both using derivation function and not using derivation function) with DRBG algorithm AES-128, AES-192 and AES-256.</source>
          <target state="translated">This implementation supports the Hash_DRBG and HMAC_DRBG mechanisms with DRBG algorithm SHA-224, SHA-512/224, SHA-256, SHA-512/256, SHA-384 and SHA-512, and CTR_DRBG (both using derivation function and not using derivation function) with DRBG algorithm AES-128, AES-192 and AES-256.</target>
        </trans-unit>
        <trans-unit id="b6ea1454b0cfa77075dec019d46708b271749b1c" translate="yes" xml:space="preserve">
          <source>This implementation supports the following properties:</source>
          <target state="translated">이 구현은 다음 속성을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="2db06ced763fc0897fb2b47a05296e08a31038e8" translate="yes" xml:space="preserve">
          <source>This implementation throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt; for non-direct buffers when the given unit size is greater then &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="translated">This implementation throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt; for non-direct buffers when the given unit size is greater then &lt;code&gt;8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2278fc7d8d81075e7dc682d5c1964b5ba9e317dc" translate="yes" xml:space="preserve">
          <source>This implementation throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">This implementation throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c07c35b1bf658b1db6ad70d8efec9569af733df7" translate="yes" xml:space="preserve">
          <source>This implementation throws an instance of &lt;a href=&quot;unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; and performs no other action.</source>
          <target state="translated">This implementation throws an instance of &lt;a href=&quot;unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt; and performs no other action.</target>
        </trans-unit>
        <trans-unit id="c5ad30d23e2ab40e16e608925d2bf93878ed2a07" translate="yes" xml:space="preserve">
          <source>This implementation throws an instance of &lt;a href=&quot;unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; and performs no other action. Subclasses should override this method to provide a ProcessHandle for the process. The methods &lt;a href=&quot;#pid()&quot;&gt;&lt;code&gt;pid()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#info()&quot;&gt;&lt;code&gt;info()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#children()&quot;&gt;&lt;code&gt;children()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#descendants()&quot;&gt;&lt;code&gt;descendants()&lt;/code&gt;&lt;/a&gt;, unless overridden, operate on the ProcessHandle.</source>
          <target state="translated">This implementation throws an instance of &lt;a href=&quot;unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt; and performs no other action. Subclasses should override this method to provide a ProcessHandle for the process. The methods &lt;a href=&quot;#pid()&quot;&gt; &lt;code&gt;pid()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#info()&quot;&gt; &lt;code&gt;info()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#children()&quot;&gt; &lt;code&gt;children()&lt;/code&gt; &lt;/a&gt;, and &lt;a href=&quot;#descendants()&quot;&gt; &lt;code&gt;descendants()&lt;/code&gt; &lt;/a&gt;, unless overridden, operate on the ProcessHandle.</target>
        </trans-unit>
        <trans-unit id="3ae0eadc482bb3dd6f94d7a921caae9778892af8" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../../../java.base/java/lang/double#toString(double)&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;#put(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../../../java.base/java/lang/double#toString(double)&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt; and invokes &lt;a href=&quot;#put(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt; on the result.</target>
        </trans-unit>
        <trans-unit id="3a43161c5f74ad66541f2d6fbe8cfbe35d057ff4" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../../../java.base/java/lang/float#toString(float)&quot;&gt;&lt;code&gt;Float.toString(float)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;#put(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../../../java.base/java/lang/float#toString(float)&quot;&gt; &lt;code&gt;Float.toString(float)&lt;/code&gt; &lt;/a&gt; and invokes &lt;a href=&quot;#put(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt; on the result.</target>
        </trans-unit>
        <trans-unit id="f890c620e6e41d3b75d9295eb00167ccf7579dd9" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../../../java.base/java/lang/integer#toString(int)&quot;&gt;&lt;code&gt;Integer.toString(int)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;#put(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../../../java.base/java/lang/integer#toString(int)&quot;&gt; &lt;code&gt;Integer.toString(int)&lt;/code&gt; &lt;/a&gt; and invokes &lt;a href=&quot;#put(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt; on the result.</target>
        </trans-unit>
        <trans-unit id="2264c7deefec63fb136b45ac7683d907ba78e030" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../../../java.base/java/lang/long#toString(long)&quot;&gt;&lt;code&gt;Long.toString(long)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;#put(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../../../java.base/java/lang/long#toString(long)&quot;&gt; &lt;code&gt;Long.toString(long)&lt;/code&gt; &lt;/a&gt; and invokes &lt;a href=&quot;#put(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt; on the result.</target>
        </trans-unit>
        <trans-unit id="a48ff0df2800703013cc1ff881741a6a7a513052" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../../../java.base/java/lang/string#valueOf(boolean)&quot;&gt;&lt;code&gt;String.valueOf(boolean)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;#put(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../../../java.base/java/lang/string#valueOf(boolean)&quot;&gt; &lt;code&gt;String.valueOf(boolean)&lt;/code&gt; &lt;/a&gt; and invokes &lt;a href=&quot;#put(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt; on the result.</target>
        </trans-unit>
        <trans-unit id="38ddaee3e2a8cc1216c7e211ce350572b21593fc" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../lang/double#toString-double-&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">이 구현은 &lt;code&gt;value&lt;/code&gt; 을 &lt;a href=&quot;../../lang/double#toString-double-&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt; 을 사용하여 문자열로 변환 하고 &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt; 호출합니다. 하고 결과에서 을 .</target>
        </trans-unit>
        <trans-unit id="c6ae24a4ad7f2a852e967502804260f467790765" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../lang/float#toString-float-&quot;&gt;&lt;code&gt;Float.toString(float)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">이 구현은 &lt;code&gt;value&lt;/code&gt; 을 &lt;a href=&quot;../../lang/float#toString-float-&quot;&gt; &lt;code&gt;Float.toString(float)&lt;/code&gt; &lt;/a&gt; 을 사용하여 문자열로 변환 하고 결과에서 &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="056cadfc097f302397f3fb575eec2d56d791a826" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../lang/integer#toString-int-&quot;&gt;&lt;code&gt;Integer.toString(int)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">이 구현은 &lt;code&gt;value&lt;/code&gt; 을 &lt;a href=&quot;../../lang/integer#toString-int-&quot;&gt; &lt;code&gt;Integer.toString(int)&lt;/code&gt; &lt;/a&gt; 를 사용하여 문자열로 하고 &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt; 호출합니다. 하고 결과에서 을 .</target>
        </trans-unit>
        <trans-unit id="b23b5c5f5c0a34d89c0c59e2eb58a4b6d38735ab" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../lang/long#toString-long-&quot;&gt;&lt;code&gt;Long.toString(long)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">이 구현은 &lt;code&gt;value&lt;/code&gt; 을 &lt;a href=&quot;../../lang/long#toString-long-&quot;&gt; &lt;code&gt;Long.toString(long)&lt;/code&gt; &lt;/a&gt; 을 사용하여 문자열로 하고 &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt; 호출합니다. 하고 결과에서 을 .</target>
        </trans-unit>
        <trans-unit id="8fa99b352d0f068eb1a697f5edfb312d215c767f" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../lang/string#valueOf-boolean-&quot;&gt;&lt;code&gt;String.valueOf(boolean)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">이 구현은 &lt;code&gt;value&lt;/code&gt; 을 &lt;a href=&quot;../../lang/string#valueOf-boolean-&quot;&gt; &lt;code&gt;String.valueOf(boolean)&lt;/code&gt; &lt;/a&gt; 를 사용하여 문자열로 변환 하고 결과에서 &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="ecc55d2fb2670411be5184623c7fed4b584a48eb" translate="yes" xml:space="preserve">
          <source>This implementation traverses the list backwards, from the last element up to the second, repeatedly swapping a randomly selected element into the &quot;current position&quot;. Elements are randomly selected from the portion of the list that runs from the first element to the current position, inclusive.</source>
          <target state="translated">이 구현은 마지막 요소에서 두 번째 요소까지 목록을 거꾸로 이동하여 무작위로 선택한 요소를 &quot;현재 위치&quot;로 반복적으로 교체합니다. 요소는 목록에서 첫 번째 요소부터 현재 위치까지 무작위로 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="393c9593a9c4850ebf28971767bc3b70ee28ff1a" translate="yes" xml:space="preserve">
          <source>This implementation traverses the queue to determine presence of the given thread.</source>
          <target state="translated">이 구현은 큐를 통과하여 주어진 스레드의 존재를 판별합니다.</target>
        </trans-unit>
        <trans-unit id="25e4a623578cd4a0058e409c160a0210ab4e3644" translate="yes" xml:space="preserve">
          <source>This implementation uses &lt;a href=&quot;#getMinimum()&quot;&gt;&lt;code&gt;getMinimum()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getMaximum()&quot;&gt;&lt;code&gt;getMaximum()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This implementation uses &lt;a href=&quot;#getMinimum()&quot;&gt; &lt;code&gt;getMinimum()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#getMaximum()&quot;&gt; &lt;code&gt;getMaximum()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cef951e7879d4c1876cd9e5bc5f7c44351095af7" translate="yes" xml:space="preserve">
          <source>This implementation uses &lt;a href=&quot;valuerange#getMinimum--&quot;&gt;&lt;code&gt;getMinimum()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;valuerange#getMaximum--&quot;&gt;&lt;code&gt;getMaximum()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;valuerange#getMinimum--&quot;&gt; &lt;code&gt;getMinimum()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;valuerange#getMaximum--&quot;&gt; &lt;code&gt;getMaximum()&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="927eb81b8c5081c20bc3ef1e685a1e076d590bb3" translate="yes" xml:space="preserve">
          <source>This implementation uses a loop of &lt;code&gt;this.wait&lt;/code&gt; calls conditioned on &lt;code&gt;this.isAlive&lt;/code&gt;. As a thread terminates the &lt;code&gt;this.notifyAll&lt;/code&gt; method is invoked. It is recommended that applications not use &lt;code&gt;wait&lt;/code&gt;, &lt;code&gt;notify&lt;/code&gt;, or &lt;code&gt;notifyAll&lt;/code&gt; on &lt;code&gt;Thread&lt;/code&gt; instances.</source>
          <target state="translated">이 구현은 &lt;code&gt;this.wait&lt;/code&gt; 에 &lt;code&gt;this.isAlive&lt;/code&gt; 조정 된 this.wait 호출 의 루프를 사용합니다 . 스레드가 종료되면 &lt;code&gt;this.notifyAll&lt;/code&gt; 메소드가 호출됩니다. 응용 프로그램은 &lt;code&gt;wait&lt;/code&gt; , &lt;code&gt;notify&lt;/code&gt; 사용하지 않는 것이 좋습니다 &lt;code&gt;Thread&lt;/code&gt; 에서 또는 &lt;code&gt;notifyAll&lt;/code&gt; 을 인스턴스 .</target>
        </trans-unit>
        <trans-unit id="4069343896d4b82815ee02298da5311977ca0784" translate="yes" xml:space="preserve">
          <source>This implementation uses an internal &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; to get the element that the specified attribute value maps to.</source>
          <target state="translated">This implementation uses an internal &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; to get the element that the specified attribute value maps to.</target>
        </trans-unit>
        <trans-unit id="031f3dc60a67a9dff7126a882bd0e103c21fe4c2" translate="yes" xml:space="preserve">
          <source>This implementation uses an internal &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; to get the object that the specified key maps to.</source>
          <target state="translated">This implementation uses an internal &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; to get the object that the specified key maps to.</target>
        </trans-unit>
        <trans-unit id="6f3992566e042f852fe6b7e4274216c628dd542d" translate="yes" xml:space="preserve">
          <source>This implementation uses an internal &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; to get the object that the specified name maps to.</source>
          <target state="translated">This implementation uses an internal &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; to get the object that the specified name maps to.</target>
        </trans-unit>
        <trans-unit id="7f63d8b10f737192b47eba3a3894feb90f8517d7" translate="yes" xml:space="preserve">
          <source>This implementation uses an internal &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; to get the prefix that the specified URI maps to.</source>
          <target state="translated">This implementation uses an internal &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; to get the prefix that the specified URI maps to.</target>
        </trans-unit>
        <trans-unit id="0f5f135d3ef27922f8ab33111abe8433444124b9" translate="yes" xml:space="preserve">
          <source>This implementation uses an internal &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; to get the prefix that the specified URI maps to. It returns the &lt;code&gt;defaultPrefix&lt;/code&gt; if it maps to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">This implementation uses an internal &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; to get the prefix that the specified URI maps to. It returns the &lt;code&gt;defaultPrefix&lt;/code&gt; if it maps to &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab0fc4713f6b6de474ddacc697e316ab635be645" translate="yes" xml:space="preserve">
          <source>This implementation uses an internal &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; to map the URI to the specified prefix.</source>
          <target state="translated">This implementation uses an internal &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; to map the URI to the specified prefix.</target>
        </trans-unit>
        <trans-unit id="ea39fd18be7e13975eeaf952e88c1725cf4993c4" translate="yes" xml:space="preserve">
          <source>This implementation uses an internal &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; to map the attribute's value to the specified element.</source>
          <target state="translated">This implementation uses an internal &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; to map the attribute's value to the specified element.</target>
        </trans-unit>
        <trans-unit id="b23b91f3d620b30634c329b067d6bfbbfb0e27b2" translate="yes" xml:space="preserve">
          <source>This implementation uses an internal &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; to map the key to the specified object.</source>
          <target state="translated">This implementation uses an internal &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; to map the key to the specified object.</target>
        </trans-unit>
        <trans-unit id="ca2ff5255cf1ce5af6645c0aa87857ee7a622a36" translate="yes" xml:space="preserve">
          <source>This implementation uses an internal &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; to map the name to the specified object.</source>
          <target state="translated">This implementation uses an internal &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; to map the name to the specified object.</target>
        </trans-unit>
        <trans-unit id="c8cf8282423eecea40de527be554183320871c70" translate="yes" xml:space="preserve">
          <source>This implementation uses exactly the code that is used to define the list hash function in the documentation for the &lt;a href=&quot;list#hashCode()&quot;&gt;&lt;code&gt;List.hashCode()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">This implementation uses exactly the code that is used to define the list hash function in the documentation for the &lt;a href=&quot;list#hashCode()&quot;&gt; &lt;code&gt;List.hashCode()&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="8a7a4c7205be9eb69ea10599d01ef228d924269f" translate="yes" xml:space="preserve">
          <source>This implementation uses exactly the code that is used to define the list hash function in the documentation for the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;List.hashCode()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 구현은 설명서의 목록 해시 함수를 정의하는 데 사용되는 코드를 정확하게 사용합니다. &lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;List.hashCode()&lt;/code&gt; &lt;/a&gt; 메소드.</target>
        </trans-unit>
        <trans-unit id="acfbb2c041d33577954cd004acf9a51be65d50da" translate="yes" xml:space="preserve">
          <source>This implementation uses the &quot;brute force&quot; technique of iterating over the source list, looking for a match with the target at each location in turn.</source>
          <target state="translated">이 구현은 소스리스트를 반복하는 &quot;브 루트 포스 (brute force)&quot;기술을 사용하여 각 위치의 타겟과 차례로 일치하는 것을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="8dde92dccf9d72b58e5fe332fe33651b12d4f2ce" translate="yes" xml:space="preserve">
          <source>This implementation uses the &quot;brute force&quot; technique of scanning over the source list, looking for a match with the target at each location in turn.</source>
          <target state="translated">이 구현은 소스 목록을 스캔하는 &quot;브 루트 포스 (brute force)&quot;기술을 사용하여 각 위치의 대상과 차례로 일치하는 것을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="3379ebb080333763dba69727307e05a65c792a9d" translate="yes" xml:space="preserve">
          <source>This implementation uses the definition in &lt;a href=&quot;../list#hashCode()&quot;&gt;&lt;code&gt;List.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This implementation uses the definition in &lt;a href=&quot;../list#hashCode()&quot;&gt; &lt;code&gt;List.hashCode()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="49934b26305a4f375c48a4c6d7996c96b3439772" translate="yes" xml:space="preserve">
          <source>This implementation uses the definition in &lt;a href=&quot;../list#hashCode--&quot;&gt;&lt;code&gt;List.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구현은 &lt;a href=&quot;../list#hashCode--&quot;&gt; &lt;code&gt;List.hashCode()&lt;/code&gt; &lt;/a&gt; 의 정의를 사용합니다. .</target>
        </trans-unit>
        <trans-unit id="49c0cfc7db86efa0b7ec47b25cfb4e839a95bb14" translate="yes" xml:space="preserve">
          <source>This implementation uses the following conventions:</source>
          <target state="translated">This implementation uses the following conventions:</target>
        </trans-unit>
        <trans-unit id="c95f555f1ecee25c437e8120bab1a5963d7c3aca" translate="yes" xml:space="preserve">
          <source>This implementation uses the maximum precision permitted.</source>
          <target state="translated">이 구현은 허용되는 최대 정밀도를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="0d43eb1ea18d7f470c63957e171ef2dc09c5dceb" translate="yes" xml:space="preserve">
          <source>This implementation visits a &lt;code&gt;UnionType&lt;/code&gt; by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;defaultAction&lt;/code&gt; 을 호출 하여 &lt;code&gt;UnionType&lt;/code&gt; 을 방문 합니다. .</target>
        </trans-unit>
        <trans-unit id="8091c6a3910dfa3d0a46046879296ccd04d0645e" translate="yes" xml:space="preserve">
          <source>This implementation visits an &lt;code&gt;IntersectionType&lt;/code&gt; by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">이 구현은 &lt;code&gt;defaultAction&lt;/code&gt; 을 호출 하여 &lt;code&gt;IntersectionType&lt;/code&gt; 을 방문 합니다. .</target>
        </trans-unit>
        <trans-unit id="1f81326f8ef0b160f1d0c19191ce576d4992257f" translate="yes" xml:space="preserve">
          <source>This implementation will throw an &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; when illegal strings are encountered.</source>
          <target state="translated">This implementation will throw an &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt; when illegal strings are encountered.</target>
        </trans-unit>
        <trans-unit id="31252614ee9691fa839fb205f3d5dd4fab008b72" translate="yes" xml:space="preserve">
          <source>This implementation wraps the &lt;code&gt;out&lt;/code&gt; and &lt;code&gt;err&lt;/code&gt; streams within &lt;a href=&quot;../../io/printwriter&quot;&gt;&lt;code&gt;PrintWriter&lt;/code&gt;&lt;/a&gt;s, and then calls &lt;a href=&quot;#run(java.io.PrintWriter,java.io.PrintWriter,java.lang.String...)&quot;&gt;&lt;code&gt;run(PrintWriter, PrintWriter, String[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This implementation wraps the &lt;code&gt;out&lt;/code&gt; and &lt;code&gt;err&lt;/code&gt; streams within &lt;a href=&quot;../../io/printwriter&quot;&gt; &lt;code&gt;PrintWriter&lt;/code&gt; &lt;/a&gt;s, and then calls &lt;a href=&quot;#run(java.io.PrintWriter,java.io.PrintWriter,java.lang.String...)&quot;&gt; &lt;code&gt;run(PrintWriter, PrintWriter, String[])&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="854e75472c0c156f0fb1a19fed8da6fd2cd49cf4" translate="yes" xml:space="preserve">
          <source>This implements the 'Language-Tag' production of BCP47, and so supports grandfathered (regular and irregular) as well as private use language tags. Stand alone private use tags are represented as empty language and extension 'x-whatever', and grandfathered tags are converted to their canonical replacements where they exist.</source>
          <target state="translated">이것은 BCP47의 'Language-Tag'제작을 구현하므로 개인용 언어 태그뿐만 아니라 할아버지 (정규 및 비정규)를 지원합니다. 독립형 개인용 태그는 빈 언어 및 확장명 'x-whatever'로 표시되며 할아버지 태그는 기존의 표준 대체 태그로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="7345571d9209f5573f66233070aae319f4ff02f7" translate="yes" xml:space="preserve">
          <source>This information is particularly useful in session management policies. For example, a session manager thread could leave all sessions in a given context which haven't been used in a long time; or, the sessions might be sorted according to age to optimize some task.</source>
          <target state="translated">이 정보는 특히 세션 관리 정책에 유용합니다. 예를 들어, 세션 관리자 스레드는 오랫동안 사용되지 않은 주어진 컨텍스트에서 모든 세션을 남길 수 있습니다. 또는 세션을 연령에 따라 정렬하여 일부 작업을 최적화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d288a196331108d79bb2f97ac268bedf329eb47" translate="yes" xml:space="preserve">
          <source>This instance is immutable and unaffected by this method call.</source>
          <target state="translated">이 인스턴스는 변경할 수 없으며이 메서드 호출의 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="469d4656dd9d4e02473925c545e0c3355ec9c2a6" translate="yes" xml:space="preserve">
          <source>This integer attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">이 정수 속성의 값과 &lt;code&gt;object&lt;/code&gt; 값이 같습니다.</target>
        </trans-unit>
        <trans-unit id="3582c615678f54acf024243a8713af8a036b6022" translate="yes" xml:space="preserve">
          <source>This interface additionally defines methods &lt;a href=&quot;#firstEntry()&quot;&gt;&lt;code&gt;firstEntry()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pollFirstEntry()&quot;&gt;&lt;code&gt;pollFirstEntry()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#lastEntry()&quot;&gt;&lt;code&gt;lastEntry()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#pollLastEntry()&quot;&gt;&lt;code&gt;pollLastEntry()&lt;/code&gt;&lt;/a&gt; that return and/or remove the least and greatest mappings, if any exist, else returning &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">This interface additionally defines methods &lt;a href=&quot;#firstEntry()&quot;&gt; &lt;code&gt;firstEntry()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#pollFirstEntry()&quot;&gt; &lt;code&gt;pollFirstEntry()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#lastEntry()&quot;&gt; &lt;code&gt;lastEntry()&lt;/code&gt; &lt;/a&gt;, and &lt;a href=&quot;#pollLastEntry()&quot;&gt; &lt;code&gt;pollLastEntry()&lt;/code&gt; &lt;/a&gt; that return and/or remove the least and greatest mappings, if any exist, else returning &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad1b5102ef95da02a5e4be12b417c932fd8c0ee9" translate="yes" xml:space="preserve">
          <source>This interface additionally defines methods &lt;code&gt;firstEntry&lt;/code&gt;, &lt;code&gt;pollFirstEntry&lt;/code&gt;, &lt;code&gt;lastEntry&lt;/code&gt;, and &lt;code&gt;pollLastEntry&lt;/code&gt; that return and/or remove the least and greatest mappings, if any exist, else returning &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스는 또한 방법을 정의 &lt;code&gt;firstEntry&lt;/code&gt; , &lt;code&gt;pollFirstEntry&lt;/code&gt; , &lt;code&gt;lastEntry&lt;/code&gt; , 및 &lt;code&gt;pollLastEntry&lt;/code&gt; 를 반환 및 / 또는 최소 및 최대 매핑을 제거하면 어떤 존재, 다른 반환한다는 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d9e96c611d1b30e8a97ce58ae5ca37c6e841703" translate="yes" xml:space="preserve">
          <source>This interface allows access to a list of attributes in three different ways:</source>
          <target state="translated">This interface allows access to a list of attributes in three different ways:</target>
        </trans-unit>
        <trans-unit id="5834764c04ff1ff1e138755016a29cd25f86ffa8" translate="yes" xml:space="preserve">
          <source>This interface allows an application to encapsulate information about an input source in a single object, which may include a public identifier, a system identifier, a byte stream (possibly with a specified encoding), a base URI, and/or a character stream.</source>
          <target state="translated">This interface allows an application to encapsulate information about an input source in a single object, which may include a public identifier, a system identifier, a byte stream (possibly with a specified encoding), a base URI, and/or a character stream.</target>
        </trans-unit>
        <trans-unit id="ad826728a7eda70e246b5561ea061a26b56b79ac" translate="yes" xml:space="preserve">
          <source>This interface allows an application to encapsulate information about an output destination in a single object, which may include a URI, a byte stream (possibly with a specified encoding), a base URI, and/or a character stream.</source>
          <target state="translated">This interface allows an application to encapsulate information about an output destination in a single object, which may include a URI, a byte stream (possibly with a specified encoding), a base URI, and/or a character stream.</target>
        </trans-unit>
        <trans-unit id="f3feef9bc60a8171956fea249ea22112a0551085" translate="yes" xml:space="preserve">
          <source>This interface allows annotations to be read reflectively. All annotations returned by methods in this interface are immutable and serializable. The arrays returned by methods of this interface may be modified by callers without affecting the arrays returned to other callers.</source>
          <target state="translated">이 인터페이스를 사용하면 주석을 반사적으로 읽을 수 있습니다. 이 인터페이스의 메서드에 의해 반환 된 모든 주석은 변경 불가능하고 직렬화 가능합니다. 이 인터페이스의 메서드에 의해 반환 된 배열은 다른 호출자에게 반환 된 배열에 영향을주지 않고 호출자에 의해 수정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f5c5a511f52126b4f376d52088ca0ab8a176fbd" translate="yes" xml:space="preserve">
          <source>This interface allows arbitrary objects to be &quot;wrapped&quot; by instances of &lt;code&gt;ImageInputStream&lt;/code&gt;. For example, a particular &lt;code&gt;ImageInputStreamSpi&lt;/code&gt; might allow a generic &lt;code&gt;InputStream&lt;/code&gt; to be used as an input source; another might take input from a &lt;code&gt;URL&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;ImageInputStream&lt;/code&gt; 의 인스턴스에 의해 임의의 객체가 &quot;랩핑&quot;될 수있게합니다 . 예를 들어, 특정 &lt;code&gt;ImageInputStreamSpi&lt;/code&gt; 를 사용하면 일반 &lt;code&gt;InputStream&lt;/code&gt; 을 입력 소스로 사용할 수 있습니다. 다른 하나는 &lt;code&gt;URL&lt;/code&gt; 에서 입력을받을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="51d4031fe0d1457beffb452131aeb094f21c3e2e" translate="yes" xml:space="preserve">
          <source>This interface allows arbitrary objects to be &quot;wrapped&quot; by instances of &lt;code&gt;ImageOutputStream&lt;/code&gt;. For example, a particular &lt;code&gt;ImageOutputStreamSpi&lt;/code&gt; might allow a generic &lt;code&gt;OutputStream&lt;/code&gt; to be used as a destination; another might output to a &lt;code&gt;File&lt;/code&gt; or to a device such as a serial port.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;ImageOutputStream&lt;/code&gt; 의 인스턴스에 의해 임의의 객체를 &quot;랩핑&quot;할 수있게합니다 . 예를 들어 특정 &lt;code&gt;ImageOutputStreamSpi&lt;/code&gt; 를 사용하면 일반 &lt;code&gt;OutputStream&lt;/code&gt; 을 대상으로 사용할 수 있습니다. 다른 &lt;code&gt;File&lt;/code&gt; 출력 할 수 있습니다 장치 또는 직렬 포트와 같은 장치로 .</target>
        </trans-unit>
        <trans-unit id="88339ccc0bd083901d0a5373ad30bda0c3ff4603" translate="yes" xml:space="preserve">
          <source>This interface allows the DOM user to create a &lt;code&gt;CSSStyleSheet&lt;/code&gt; outside the context of a document.</source>
          <target state="translated">이 인터페이스를 통해 DOM 사용자 는 문서 컨텍스트 외부에서 &lt;code&gt;CSSStyleSheet&lt;/code&gt; 를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="352e142e821a05186700c59caae664ad8e7a60ba" translate="yes" xml:space="preserve">
          <source>This interface allows the DOM user to create a &lt;code&gt;CSSStyleSheet&lt;/code&gt; outside the context of a document. There is no way to associate the new &lt;code&gt;CSSStyleSheet&lt;/code&gt; with a document in DOM Level 2.</source>
          <target state="translated">이 인터페이스를 통해 DOM 사용자 는 문서 컨텍스트 외부에서 &lt;code&gt;CSSStyleSheet&lt;/code&gt; 를 만들 수 있습니다. 새 &lt;code&gt;CSSStyleSheet&lt;/code&gt; 를 DOM 레벨 2의 문서와 연결할 방법이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="fe84c0bca2cc1bdc3225b86ef57cc1b109bd4761" translate="yes" xml:space="preserve">
          <source>This interface can be added to an existing class or used to create an adapter (typically, by subclassing &lt;code&gt;AbstractAction&lt;/code&gt;). The &lt;code&gt;Action&lt;/code&gt; object can then be added to multiple &lt;code&gt;Action&lt;/code&gt;-aware containers and connected to &lt;code&gt;Action&lt;/code&gt;-capable components. The GUI controls can then be activated or deactivated all at once by invoking the &lt;code&gt;Action&lt;/code&gt; object's &lt;code&gt;setEnabled&lt;/code&gt; method.</source>
          <target state="translated">This interface can be added to an existing class or used to create an adapter (typically, by subclassing &lt;code&gt;AbstractAction&lt;/code&gt; ). The &lt;code&gt;Action&lt;/code&gt; object can then be added to multiple &lt;code&gt;Action&lt;/code&gt; -aware containers and connected to &lt;code&gt;Action&lt;/code&gt; -capable components. The GUI controls can then be activated or deactivated all at once by invoking the &lt;code&gt;Action&lt;/code&gt; object's &lt;code&gt;setEnabled&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="9a64f53de63b3ec864b519d2597bf24b7ae1dc78" translate="yes" xml:space="preserve">
          <source>This interface can be obtained from the object implementing the &lt;code&gt;Document&lt;/code&gt; interface using binding-specific casting methods.</source>
          <target state="translated">This interface can be obtained from the object implementing the &lt;code&gt;Document&lt;/code&gt; interface using binding-specific casting methods.</target>
        </trans-unit>
        <trans-unit id="65856d6d5997f1bb48dd7edb67e2268898de75bc" translate="yes" xml:space="preserve">
          <source>This interface cannot be used to describe more sophisticated operations such as those that take multiple sources. Note that this restriction also means that the values of the destination pixels prior to the operation are not used as input to the filter operation.</source>
          <target state="translated">This interface cannot be used to describe more sophisticated operations such as those that take multiple sources. Note that this restriction also means that the values of the destination pixels prior to the operation are not used as input to the filter operation.</target>
        </trans-unit>
        <trans-unit id="6ebe017d830506ee915f100aedda7de89ae89748" translate="yes" xml:space="preserve">
          <source>This interface contains a single method, &lt;code&gt;checkGuard&lt;/code&gt;, with a single &lt;code&gt;object&lt;/code&gt; argument. &lt;code&gt;checkGuard&lt;/code&gt; is invoked (by the GuardedObject &lt;code&gt;getObject&lt;/code&gt; method) to determine whether or not to allow access to the object.</source>
          <target state="translated">이 인터페이스에는 &lt;code&gt;checkGuard&lt;/code&gt; 라는 단일 메소드가 포함되어 있습니다. 단일 &lt;code&gt;object&lt;/code&gt; 인수 와 함께 됩니다. &lt;code&gt;checkGuard&lt;/code&gt; 는 (GuardedObject &lt;code&gt;getObject&lt;/code&gt; 메소드에 의해) 호출 되어 객체에 대한 액세스를 허용할지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="c306b2d9261b2da8361315fad5be5dd3c3d93fb9" translate="yes" xml:space="preserve">
          <source>This interface contains a single method, &lt;code&gt;namingExceptionThrown()&lt;/code&gt;, that must be implemented so that the listener can be notified of exceptions that are thrown (by the service provider) while gathering information about the events that they're interested in. When this method is invoked, the listener has been automatically deregistered from the &lt;code&gt;EventContext&lt;/code&gt; with which it has registered.</source>
          <target state="translated">이 인터페이스에는 단일 메소드 인 &lt;code&gt;namingExceptionThrown()&lt;/code&gt; 이 포함되어 있습니다.이 메소드 는 리스너에게 관심있는 이벤트에 대한 정보를 수집하는 동안 서비스 제공 업체가 예외를 통지 할 수 있도록 구현되어야합니다. 호출되면 리스너가 등록 된 &lt;code&gt;EventContext&lt;/code&gt; 에서 리스너가 자동으로 등록 취소 되었습니다.</target>
        </trans-unit>
        <trans-unit id="4132f60d26cff9a5eddd1f50b00f14741924cbca" translate="yes" xml:space="preserve">
          <source>This interface contains methods for setting and retrieving properties that affect the processing of XML signatures or XML encrypted structures.</source>
          <target state="translated">This interface contains methods for setting and retrieving properties that affect the processing of XML signatures or XML encrypted structures.</target>
        </trans-unit>
        <trans-unit id="5ca4236b5f433f71783d4ddd093a03eff5e70357" translate="yes" xml:space="preserve">
          <source>This interface contains no methods or constants. Its only purpose is to group (and provide type safety for) all key specifications. All key specifications must implement this interface.</source>
          <target state="translated">이 인터페이스에는 메서드 나 상수가 없습니다. 유일한 목적은 모든 주요 사양을 그룹화하고 (유형 안전을 제공하는) 것입니다. 모든 주요 사양은이 인터페이스를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="b06d28d0bacdca8e2f018032211114ee0a66fe51" translate="yes" xml:space="preserve">
          <source>This interface contains no methods or constants. Its only purpose is to group (and provide type safety for) all parameter specifications. All parameter specifications must implement this interface.</source>
          <target state="translated">이 인터페이스에는 메서드 나 상수가 없습니다. 유일한 목적은 모든 매개 변수 사양을 그룹화 (및 유형 안전을 제공)하는 것입니다. 모든 매개 변수 스펙은이 인터페이스를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="b4045188daf07ad611d2a99cfb0c7d811dfd285c" translate="yes" xml:space="preserve">
          <source>This interface contains query methods used to determine the results of a match against a regular expression. The match boundaries, groups and group boundaries can be seen but not modified through a &lt;code&gt;MatchResult&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스에는 정규식과의 일치 결과를 판별하는 데 사용되는 조회 메소드가 포함되어 있습니다. 경기 경계, 그룹 및 그룹 경계는 볼 수 있지만 &lt;code&gt;MatchResult&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="212fa3a7c55421c54025d465919307d3aedea70e" translate="yes" xml:space="preserve">
          <source>This interface corresponds to an applet's environment: the document containing the applet and the other applets in the same document.</source>
          <target state="translated">This interface corresponds to an applet's environment: the document containing the applet and the other applets in the same document.</target>
        </trans-unit>
        <trans-unit id="cc9203aaaf5cbe1b4443529eff84a70996449e58" translate="yes" xml:space="preserve">
          <source>This interface declares a simple filter interface that one can create to filter XMLEventReaders</source>
          <target state="translated">This interface declares a simple filter interface that one can create to filter XMLEventReaders</target>
        </trans-unit>
        <trans-unit id="ec19d34f8996be4efd6ccde9a035a4978bb2a8e6" translate="yes" xml:space="preserve">
          <source>This interface declares a simple filter interface that one can create to filter XMLStreamReaders</source>
          <target state="translated">This interface declares a simple filter interface that one can create to filter XMLStreamReaders</target>
        </trans-unit>
        <trans-unit id="8e30e7500dc5102220350cfeead811d546d72f95" translate="yes" xml:space="preserve">
          <source>This interface declares the constants used in this API.</source>
          <target state="translated">This interface declares the constants used in this API.</target>
        </trans-unit>
        <trans-unit id="0746477c7fd2ef2f314c6fb9ecff07202a6261af" translate="yes" xml:space="preserve">
          <source>This interface declares the constants used in this API. Numbers in the range 0 to 256 are reserved for the specification, user defined events must use event codes outside that range.</source>
          <target state="translated">This interface declares the constants used in this API. Numbers in the range 0 to 256 are reserved for the specification, user defined events must use event codes outside that range.</target>
        </trans-unit>
        <trans-unit id="e517a421bef28408a320ff897d3311fc46251ae0" translate="yes" xml:space="preserve">
          <source>This interface declares the same methods as the class &lt;a href=&quot;../mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;. A class implementing this interface (typically &lt;a href=&quot;openmbeanattributeinfosupport&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt;&lt;/a&gt;) should extend &lt;a href=&quot;../mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 클래스 &lt;a href=&quot;../mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt; 와 같은 메소드를 선언합니다 . 이 인터페이스를 구현하는 클래스 (일반적으로 &lt;a href=&quot;openmbeanattributeinfosupport&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; &lt;/a&gt; )는 &lt;a href=&quot;../mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt; 를 확장해야합니다. .</target>
        </trans-unit>
        <trans-unit id="edbb1b3ad396afa62ac46dd78ac9b0088f6ef7fb" translate="yes" xml:space="preserve">
          <source>This interface declares the same methods as the class &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt;&lt;code&gt;MBeanConstructorInfo&lt;/code&gt;&lt;/a&gt;. A class implementing this interface (typically &lt;a href=&quot;openmbeanconstructorinfosupport&quot;&gt;&lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt;&lt;/a&gt;) should extend &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt;&lt;code&gt;MBeanConstructorInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 클래스 &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt; &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; &lt;/a&gt; 와 같은 메소드를 선언합니다 . 이 인터페이스를 구현하는 클래스 (일반적으로 &lt;a href=&quot;openmbeanconstructorinfosupport&quot;&gt; &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; &lt;/a&gt; )는 &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt; &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; &lt;/a&gt; 를 확장해야합니다. .</target>
        </trans-unit>
        <trans-unit id="d3bc2e3a828cade27afa90478db2c1f08f16ccff" translate="yes" xml:space="preserve">
          <source>This interface declares the same methods as the class &lt;a href=&quot;../mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt;. A class implementing this interface (typically &lt;a href=&quot;openmbeaninfosupport&quot;&gt;&lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt;&lt;/a&gt;) should extend &lt;a href=&quot;../mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 클래스 &lt;a href=&quot;../mbeaninfo&quot;&gt; &lt;code&gt;MBeanInfo&lt;/code&gt; &lt;/a&gt; 와 같은 메소드를 선언합니다 . 이 인터페이스를 구현하는 클래스 (일반적으로 &lt;a href=&quot;openmbeaninfosupport&quot;&gt; &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; &lt;/a&gt; )는 &lt;a href=&quot;../mbeaninfo&quot;&gt; &lt;code&gt;MBeanInfo&lt;/code&gt; &lt;/a&gt; 를 확장해야합니다. .</target>
        </trans-unit>
        <trans-unit id="7388b34f799b7c48b65115bb03d5989736f99078" translate="yes" xml:space="preserve">
          <source>This interface declares the same methods as the class &lt;a href=&quot;../mbeanoperationinfo&quot;&gt;&lt;code&gt;MBeanOperationInfo&lt;/code&gt;&lt;/a&gt;. A class implementing this interface (typically &lt;a href=&quot;openmbeanoperationinfosupport&quot;&gt;&lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt;&lt;/a&gt;) should extend &lt;a href=&quot;../mbeanoperationinfo&quot;&gt;&lt;code&gt;MBeanOperationInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 클래스 &lt;a href=&quot;../mbeanoperationinfo&quot;&gt; &lt;code&gt;MBeanOperationInfo&lt;/code&gt; &lt;/a&gt; 와 같은 메소드를 선언합니다 . 이 인터페이스를 구현하는 클래스 (일반적으로 &lt;a href=&quot;openmbeanoperationinfosupport&quot;&gt; &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; &lt;/a&gt; )는 &lt;a href=&quot;../mbeanoperationinfo&quot;&gt; &lt;code&gt;MBeanOperationInfo&lt;/code&gt; &lt;/a&gt; 를 확장해야합니다. .</target>
        </trans-unit>
        <trans-unit id="a9c2d28b9cc1668c9c8dd51118539c24ca4e713a" translate="yes" xml:space="preserve">
          <source>This interface declares the same methods as the class &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt;. A class implementing this interface (typically &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;) should extend &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 클래스 &lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt; 와 같은 메소드를 선언합니다 . 이 인터페이스를 구현하는 클래스 (일반적으로 &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; &lt;/a&gt; )는 &lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt; 를 확장해야합니다. .</target>
        </trans-unit>
        <trans-unit id="f6fd00e9a5b738e07e67a2da7cc3b1dc0b3592cf" translate="yes" xml:space="preserve">
          <source>This interface defines a class that allows a user to register a way to allocate events given an XMLStreamReader.</source>
          <target state="translated">This interface defines a class that allows a user to register a way to allocate events given an XMLStreamReader.</target>
        </trans-unit>
        <trans-unit id="3f089923e3a4a329acc7c3e1bf63cc0759123859" translate="yes" xml:space="preserve">
          <source>This interface defines a class that allows a user to register a way to allocate events given an XMLStreamReader. An implementation is not required to use the XMLEventFactory implementation but this is recommended. The XMLEventAllocator can be set on an XMLInputFactory using the property &quot;javax.xml.stream.allocator&quot;</source>
          <target state="translated">This interface defines a class that allows a user to register a way to allocate events given an XMLStreamReader. An implementation is not required to use the XMLEventFactory implementation but this is recommended. The XMLEventAllocator can be set on an XMLInputFactory using the property &quot;javax.xml.stream.allocator&quot;</target>
        </trans-unit>
        <trans-unit id="fcee2a5734dc97a45d6e39882824a8302ac40340" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for &lt;code&gt;URL&lt;/code&gt; stream protocol handlers.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;URL&lt;/code&gt; 스트림 프로토콜 핸들러 의 팩토리를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="6be0f6bc90087933dbaff7fed910ca6ce8d677ae" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for content handlers.</source>
          <target state="translated">이 인터페이스는 컨텐츠 핸들러의 팩토리를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="23eae2af0036167828d21e49398391e8ffb220dc" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for content handlers. An implementation of this interface should map a MIME type into an instance of &lt;code&gt;ContentHandler&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스는 컨텐츠 핸들러의 팩토리를 정의합니다. 이 인터페이스의 구현은 MIME 형식을 &lt;code&gt;ContentHandler&lt;/code&gt; 인스턴스에 매핑해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7f82e9602edf403031f30e6736d4d8d0c2c9dddf" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for datagram socket implementations.</source>
          <target state="translated">이 인터페이스는 데이터 그램 소켓 구현을위한 팩토리를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="10f03f5ccdc6793ded5325daadffb335f19bf06d" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for datagram socket implementations. It is used by the classes &lt;code&gt;DatagramSocket&lt;/code&gt; to create actual socket implementations.</source>
          <target state="translated">이 인터페이스는 데이터 그램 소켓 구현을위한 팩토리를 정의합니다. &lt;code&gt;DatagramSocket&lt;/code&gt; 클래스에서 실제 소켓 구현을 작성 하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="5afb356be5d880813cca90a36ac9be14f4b3c045" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for socket implementations.</source>
          <target state="translated">이 인터페이스는 소켓 구현을위한 팩토리를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="c5579eb760f1a48c6dd85e66c97f05e2028b2514" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for socket implementations. It is used by the classes &lt;code&gt;Socket&lt;/code&gt; and &lt;code&gt;ServerSocket&lt;/code&gt; to create actual socket implementations.</source>
          <target state="translated">이 인터페이스는 소켓 구현을위한 팩토리를 정의합니다. &lt;code&gt;Socket&lt;/code&gt; 및 &lt;code&gt;ServerSocket&lt;/code&gt; 클래스에서 실제 소켓 구현을 작성 하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="21a8a1555cc1a14eef6e86573ad7336663a3b025" translate="yes" xml:space="preserve">
          <source>This interface defines a protocol for bidirectional iteration over text.</source>
          <target state="translated">이 인터페이스는 텍스트에 대한 양방향 반복 프로토콜을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="76fa2a2f8d529eb8423e7c062f1de625cf9ed5e3" translate="yes" xml:space="preserve">
          <source>This interface defines a protocol for bidirectional iteration over text. The iterator iterates over a bounded sequence of characters. Characters are indexed with values beginning with the value returned by getBeginIndex() and continuing through the value returned by getEndIndex()-1.</source>
          <target state="translated">이 인터페이스는 텍스트에 대한 양방향 반복 프로토콜을 정의합니다. 반복자는 한정된 문자 시퀀스를 반복합니다. 문자는 getBeginIndex ()에 의해 리턴 된 값으로 시작하고 getEndIndex ()-1에 의해 리턴 된 값을 계속하여 값으로 인덱싱됩니다.</target>
        </trans-unit>
        <trans-unit id="3dd259c9f101922535246ab8c32e14d98672d18c" translate="yes" xml:space="preserve">
          <source>This interface defines a utility class for creating instances of XMLEvents</source>
          <target state="translated">This interface defines a utility class for creating instances of XMLEvents</target>
        </trans-unit>
        <trans-unit id="9c84199a5a704fc55c8bd9ed866f6f64d31c5e8b" translate="yes" xml:space="preserve">
          <source>This interface defines an event consumer interface.</source>
          <target state="translated">This interface defines an event consumer interface.</target>
        </trans-unit>
        <trans-unit id="ee8ac4e612cbf1db3d2076d050ac5f78385711a9" translate="yes" xml:space="preserve">
          <source>This interface defines an event consumer interface. The contract of the of a consumer is to accept the event. This interface can be used to mark an object as able to receive events. Add may be called several times in immediate succession so a consumer must be able to cache events it hasn't processed yet.</source>
          <target state="translated">This interface defines an event consumer interface. The contract of the of a consumer is to accept the event. This interface can be used to mark an object as able to receive events. Add may be called several times in immediate succession so a consumer must be able to cache events it hasn't processed yet.</target>
        </trans-unit>
        <trans-unit id="448282b92fb9bf9a3db24d428ff888e802d4b79e" translate="yes" xml:space="preserve">
          <source>This interface defines methods to access the elements at both ends of the deque. Methods are provided to insert, remove, and examine the element. Each of these methods exists in two forms: one throws an exception if the operation fails, the other returns a special value (either &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, depending on the operation). The latter form of the insert operation is designed specifically for use with capacity-restricted &lt;code&gt;Deque&lt;/code&gt; implementations; in most implementations, insert operations cannot fail.</source>
          <target state="translated">이 인터페이스는 deque의 양쪽 끝에있는 요소에 액세스하는 메소드를 정의합니다. 요소를 삽입, 제거 및 검사하는 방법이 제공됩니다. 이러한 각 메소드는 두 가지 형태로 존재합니다. 하나는 작업이 실패하면 예외가 발생하고 다른 하나는 특수한 값을 반환합니다 ( 작업에 따라 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; ). 후자의 삽입 작업 형식은 용량 제한 &lt;code&gt;Deque&lt;/code&gt; 구현 과 함께 사용하도록 특별히 설계되었습니다 . 대부분의 구현에서 삽입 작업은 실패 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="bda0cf1fe07a11059d91980163f82518b8f89324" translate="yes" xml:space="preserve">
          <source>This interface defines several convenient methods for accessing system properties about the Java virtual machine.</source>
          <target state="translated">이 인터페이스는 Java 가상 머신에 대한 시스템 특성에 액세스하기위한 몇 가지 편리한 방법을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="5b872681f860ac20536c7b74f06f8a0b7c0e0bb9" translate="yes" xml:space="preserve">
          <source>This interface defines several convenient methods for accessing system properties about the operating system on which the Java virtual machine is running.</source>
          <target state="translated">이 인터페이스는 JVM (Java Virtual Machine)이 실행중인 운영 체제에 대한 시스템 특성에 액세스하기위한 몇 가지 편리한 방법을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="537242cb8774a44993fab5b2835f481f86f3b6b6" translate="yes" xml:space="preserve">
          <source>This interface defines the &lt;a href=&quot;#register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind%5B%5D,java.nio.file.WatchEvent.Modifier...)&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method to register the object with a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt; returning a &lt;a href=&quot;watchkey&quot;&gt;&lt;code&gt;WatchKey&lt;/code&gt;&lt;/a&gt; to represent the registration. An object may be registered with more than one watch service. Registration with a watch service is cancelled by invoking the key's &lt;a href=&quot;watchkey#cancel()&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">This interface defines the &lt;a href=&quot;#register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind%5B%5D,java.nio.file.WatchEvent.Modifier...)&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt; method to register the object with a &lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; &lt;/a&gt; returning a &lt;a href=&quot;watchkey&quot;&gt; &lt;code&gt;WatchKey&lt;/code&gt; &lt;/a&gt; to represent the registration. An object may be registered with more than one watch service. Registration with a watch service is cancelled by invoking the key's &lt;a href=&quot;watchkey#cancel()&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="18ca3c52abe340e512dfa5f3e878cb2eb10780e3" translate="yes" xml:space="preserve">
          <source>This interface defines the &lt;a href=&quot;watchable#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method to register the object with a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt; returning a &lt;a href=&quot;watchkey&quot;&gt;&lt;code&gt;WatchKey&lt;/code&gt;&lt;/a&gt; to represent the registration. An object may be registered with more than one watch service. Registration with a watch service is cancelled by invoking the key's &lt;a href=&quot;watchkey#cancel--&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 인터페이스는 정의 &lt;a href=&quot;watchable#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt; 로 개체를 등록하는 방법 &lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; 가&lt;/a&gt; 복귀 &lt;a href=&quot;watchkey&quot;&gt; &lt;code&gt;WatchKey&lt;/code&gt; &lt;/a&gt; 등록을 대표한다. 하나 이상의 시계 서비스에 개체가 등록되어있을 수 있습니다. 시계의 등록은 키의 &lt;a href=&quot;watchkey#cancel--&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt; 방법 을 호출하여 취소 됩니다.</target>
        </trans-unit>
        <trans-unit id="cea0f5a5801f0a04790c3464d143e6bb51c50098" translate="yes" xml:space="preserve">
          <source>This interface defines the method any object that would like to be an editor of values for components such as &lt;code&gt;JListBox&lt;/code&gt;, &lt;code&gt;JComboBox&lt;/code&gt;, &lt;code&gt;JTree&lt;/code&gt;, or &lt;code&gt;JTable&lt;/code&gt; needs to implement.</source>
          <target state="translated">This interface defines the method any object that would like to be an editor of values for components such as &lt;code&gt;JListBox&lt;/code&gt; , &lt;code&gt;JComboBox&lt;/code&gt; , &lt;code&gt;JTree&lt;/code&gt; , or &lt;code&gt;JTable&lt;/code&gt; needs to implement.</target>
        </trans-unit>
        <trans-unit id="8d271146f104e046efed5052da6e3727e5599dd2" translate="yes" xml:space="preserve">
          <source>This interface defines the method required by any object that would like to be a renderer for cells in a &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">This interface defines the method required by any object that would like to be a renderer for cells in a &lt;code&gt;JTable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b7718c11e2e6897057fbbc50fbaa2d10f9e0f4e" translate="yes" xml:space="preserve">
          <source>This interface defines the methods any general editor should be able to implement.</source>
          <target state="translated">This interface defines the methods any general editor should be able to implement.</target>
        </trans-unit>
        <trans-unit id="7de5e823884a10cab7fee3d3d07f8d08711880b6" translate="yes" xml:space="preserve">
          <source>This interface defines the methods components like JList use to get the value of each cell in a list and the length of the list.</source>
          <target state="translated">This interface defines the methods components like JList use to get the value of each cell in a list and the length of the list.</target>
        </trans-unit>
        <trans-unit id="0946ec95650d00b5362d435d7575dd446c83e988" translate="yes" xml:space="preserve">
          <source>This interface defines the methods components like JList use to get the value of each cell in a list and the length of the list. Logically the model is a vector, indices vary from 0 to ListDataModel.getSize() - 1. Any change to the contents or length of the data model must be reported to all of the ListDataListeners.</source>
          <target state="translated">This interface defines the methods components like JList use to get the value of each cell in a list and the length of the list. Logically the model is a vector, indices vary from 0 to ListDataModel.getSize() - 1. Any change to the contents or length of the data model must be reported to all of the ListDataListeners.</target>
        </trans-unit>
        <trans-unit id="fe430f3abffe3415cf732485ad8c52a651b54e24" translate="yes" xml:space="preserve">
          <source>This interface describes single-input/single-output operations performed on &lt;code&gt;BufferedImage&lt;/code&gt; objects.</source>
          <target state="translated">This interface describes single-input/single-output operations performed on &lt;code&gt;BufferedImage&lt;/code&gt; objects.</target>
        </trans-unit>
        <trans-unit id="2a8aa05753b51406f0acc6fb76d129a0623c5e08" translate="yes" xml:space="preserve">
          <source>This interface describes single-input/single-output operations performed on &lt;code&gt;BufferedImage&lt;/code&gt; objects. It is implemented by &lt;code&gt;AffineTransformOp&lt;/code&gt;, &lt;code&gt;ConvolveOp&lt;/code&gt;, &lt;code&gt;ColorConvertOp&lt;/code&gt;, &lt;code&gt;RescaleOp&lt;/code&gt;, and &lt;code&gt;LookupOp&lt;/code&gt;. These objects can be passed into a &lt;code&gt;BufferedImageFilter&lt;/code&gt; to operate on a &lt;code&gt;BufferedImage&lt;/code&gt; in the ImageProducer-ImageFilter-ImageConsumer paradigm.</source>
          <target state="translated">This interface describes single-input/single-output operations performed on &lt;code&gt;BufferedImage&lt;/code&gt; objects. It is implemented by &lt;code&gt;AffineTransformOp&lt;/code&gt; , &lt;code&gt;ConvolveOp&lt;/code&gt; , &lt;code&gt;ColorConvertOp&lt;/code&gt; , &lt;code&gt;RescaleOp&lt;/code&gt; , and &lt;code&gt;LookupOp&lt;/code&gt; . These objects can be passed into a &lt;code&gt;BufferedImageFilter&lt;/code&gt; to operate on a &lt;code&gt;BufferedImage&lt;/code&gt; in the ImageProducer-ImageFilter-ImageConsumer paradigm.</target>
        </trans-unit>
        <trans-unit id="2ec7557cd2e656165a49a7f96dbbe97bc943bc6d" translate="yes" xml:space="preserve">
          <source>This interface describes single-input/single-output operations performed on Raster objects.</source>
          <target state="translated">This interface describes single-input/single-output operations performed on Raster objects.</target>
        </trans-unit>
        <trans-unit id="54459d2290fa0746c80bc63a35a61eb741bc4672" translate="yes" xml:space="preserve">
          <source>This interface describes single-input/single-output operations performed on Raster objects. It is implemented by such classes as AffineTransformOp, ConvolveOp, and LookupOp. The Source and Destination objects must contain the appropriate number of bands for the particular classes implementing this interface. Otherwise, an exception is thrown. This interface cannot be used to describe more sophisticated Ops such as ones that take multiple sources. Each class implementing this interface will specify whether or not it will allow an in-place filtering operation (i.e. source object equal to the destination object). Note that the restriction to single-input operations means that the values of destination pixels prior to the operation are not used as input to the filter operation.</source>
          <target state="translated">This interface describes single-input/single-output operations performed on Raster objects. It is implemented by such classes as AffineTransformOp, ConvolveOp, and LookupOp. The Source and Destination objects must contain the appropriate number of bands for the particular classes implementing this interface. Otherwise, an exception is thrown. This interface cannot be used to describe more sophisticated Ops such as ones that take multiple sources. Each class implementing this interface will specify whether or not it will allow an in-place filtering operation (i.e. source object equal to the destination object). Note that the restriction to single-input operations means that the values of destination pixels prior to the operation are not used as input to the filter operation.</target>
        </trans-unit>
        <trans-unit id="ff82d62b82ab8a912852af14bd87b083a841aa2b" translate="yes" xml:space="preserve">
          <source>This interface does not define methods for initially creating, forcibly completing normally or exceptionally, probing completion status or results, or awaiting completion of a stage. Implementations of CompletionStage may provide means of achieving such effects, as appropriate. Method &lt;a href=&quot;#toCompletableFuture()&quot;&gt;&lt;code&gt;toCompletableFuture()&lt;/code&gt;&lt;/a&gt; enables interoperability among different implementations of this interface by providing a common conversion type.</source>
          <target state="translated">This interface does not define methods for initially creating, forcibly completing normally or exceptionally, probing completion status or results, or awaiting completion of a stage. Implementations of CompletionStage may provide means of achieving such effects, as appropriate. Method &lt;a href=&quot;#toCompletableFuture()&quot;&gt; &lt;code&gt;toCompletableFuture()&lt;/code&gt; &lt;/a&gt; enables interoperability among different implementations of this interface by providing a common conversion type.</target>
        </trans-unit>
        <trans-unit id="20613db0060f764304efbc08ba3ce707d7d086e9" translate="yes" xml:space="preserve">
          <source>This interface does not define methods for initially creating, forcibly completing normally or exceptionally, probing completion status or results, or awaiting completion of a stage. Implementations of CompletionStage may provide means of achieving such effects, as appropriate. Method &lt;a href=&quot;completionstage#toCompletableFuture--&quot;&gt;&lt;code&gt;toCompletableFuture()&lt;/code&gt;&lt;/a&gt; enables interoperability among different implementations of this interface by providing a common conversion type.</source>
          <target state="translated">이 인터페이스는 초기에 작성, 강제 또는 정상적으로 완료, 완료 상태 또는 결과 조사 또는 스테이지 완료를 기다리는 메소드를 정의하지 않습니다. CompletionStage의 구현은 적절한 경우 그러한 효과를 달성 할 수있는 수단을 제공 할 수 있습니다. Method &lt;a href=&quot;completionstage#toCompletableFuture--&quot;&gt; &lt;code&gt;toCompletableFuture()&lt;/code&gt; &lt;/a&gt; 는 공통 변환 유형을 제공하여이 인터페이스의 여러 구현간에 상호 운용성을 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="74843de30c25c114ce13bc58e998e2e30ee98987" translate="yes" xml:space="preserve">
          <source>This interface does not refine the general contracts of the &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;object#hashCode()&quot;&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/a&gt; methods. The result of testing two objects that implement &lt;code&gt;CharSequence&lt;/code&gt; for equality is therefore, in general, undefined. Each object may be implemented by a different class, and there is no guarantee that each class will be capable of testing its instances for equality with those of the other. It is therefore inappropriate to use arbitrary &lt;code&gt;CharSequence&lt;/code&gt; instances as elements in a set or as keys in a map.</source>
          <target state="translated">This interface does not refine the general contracts of the &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;object#hashCode()&quot;&gt; &lt;code&gt;hashCode&lt;/code&gt; &lt;/a&gt; methods. The result of testing two objects that implement &lt;code&gt;CharSequence&lt;/code&gt; for equality is therefore, in general, undefined. Each object may be implemented by a different class, and there is no guarantee that each class will be capable of testing its instances for equality with those of the other. It is therefore inappropriate to use arbitrary &lt;code&gt;CharSequence&lt;/code&gt; instances as elements in a set or as keys in a map.</target>
        </trans-unit>
        <trans-unit id="10e20735637c76f0b5597095a4d871eb54e5fe26" translate="yes" xml:space="preserve">
          <source>This interface does not refine the general contracts of the &lt;a href=&quot;object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;object#hashCode--&quot;&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/a&gt; methods. The result of comparing two objects that implement &lt;code&gt;CharSequence&lt;/code&gt; is therefore, in general, undefined. Each object may be implemented by a different class, and there is no guarantee that each class will be capable of testing its instances for equality with those of the other. It is therefore inappropriate to use arbitrary &lt;code&gt;CharSequence&lt;/code&gt; instances as elements in a set or as keys in a map.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;object#hashCode--&quot;&gt; &lt;code&gt;hashCode&lt;/code&gt; &lt;/a&gt; 메소드 의 일반 계약을 세분화하지 않습니다 . 따라서 &lt;code&gt;CharSequence&lt;/code&gt; 를 구현하는 두 객체를 비교 한 결과는 일반적으로 정의되지 않습니다. 각 객체는 서로 다른 클래스로 구현 될 수 있으며 각 클래스가 다른 인스턴스와 동일한 지 테스트합니다. 따라서 임의의 &lt;code&gt;CharSequence&lt;/code&gt; 인스턴스를 세트의 요소 또는 맵의 키로 사용하는 것은 부적절합니다 .</target>
        </trans-unit>
        <trans-unit id="2a2525f74e6f2b529890b5df3b4dde69a9a52a1f" translate="yes" xml:space="preserve">
          <source>This interface encapsulates a single GSS-API principal entity.</source>
          <target state="translated">This interface encapsulates a single GSS-API principal entity.</target>
        </trans-unit>
        <trans-unit id="d3e74795d609b8dad7adcf2818178afbdac34d75" translate="yes" xml:space="preserve">
          <source>This interface encapsulates a single GSS-API principal entity. The application obtains an implementation of this interface through one of the &lt;code&gt;createName&lt;/code&gt; methods that exist in the &lt;a href=&quot;gssmanager&quot;&gt;&lt;code&gt;GSSManager&lt;/code&gt;&lt;/a&gt; class. Conceptually a GSSName contains many representations of the entity or many primitive name elements, one for each supported underlying mechanism. In GSS terminology, a GSSName that contains an element from just one mechanism is called a Mechanism Name (MN)</source>
          <target state="translated">This interface encapsulates a single GSS-API principal entity. The application obtains an implementation of this interface through one of the &lt;code&gt;createName&lt;/code&gt; methods that exist in the &lt;a href=&quot;gssmanager&quot;&gt; &lt;code&gt;GSSManager&lt;/code&gt; &lt;/a&gt; class. Conceptually a GSSName contains many representations of the entity or many primitive name elements, one for each supported underlying mechanism. In GSS terminology, a GSSName that contains an element from just one mechanism is called a Mechanism Name (MN)</target>
        </trans-unit>
        <trans-unit id="b72680310c0ffb76c0a8602b068542f6b042db38" translate="yes" xml:space="preserve">
          <source>This interface encapsulates the GSS-API credentials for an entity.</source>
          <target state="translated">This interface encapsulates the GSS-API credentials for an entity.</target>
        </trans-unit>
        <trans-unit id="d32cce5254b4cb8ad8f10cf5870e47a731af7967" translate="yes" xml:space="preserve">
          <source>This interface encapsulates the GSS-API credentials for an entity. A credential contains all the necessary cryptographic information to enable the creation of a context on behalf of the entity that it represents. It may contain multiple, distinct, mechanism specific credential elements, each containing information for a specific security mechanism, but all referring to the same entity. A credential may be used to perform context initiation, acceptance, or both.</source>
          <target state="translated">This interface encapsulates the GSS-API credentials for an entity. A credential contains all the necessary cryptographic information to enable the creation of a context on behalf of the entity that it represents. It may contain multiple, distinct, mechanism specific credential elements, each containing information for a specific security mechanism, but all referring to the same entity. A credential may be used to perform context initiation, acceptance, or both.</target>
        </trans-unit>
        <trans-unit id="5695c147f0484a5f9e0daf796b67f2665849a3b2" translate="yes" xml:space="preserve">
          <source>This interface encapsulates the GSS-API security context and provides the security services that are available over the context.</source>
          <target state="translated">This interface encapsulates the GSS-API security context and provides the security services that are available over the context.</target>
        </trans-unit>
        <trans-unit id="6446557f5fcebc3fdad330e100cb8aa84c2e3ef1" translate="yes" xml:space="preserve">
          <source>This interface encapsulates the GSS-API security context and provides the security services that are available over the context. Security contexts are established between peers using locally acquired credentials. Multiple contexts may exist simultaneously between a pair of peers, using the same or different set of credentials. GSS-API functions in a manner independent of the underlying transport protocol and depends on its calling application to transport the tokens that are generated by the security context between the peers.</source>
          <target state="translated">This interface encapsulates the GSS-API security context and provides the security services that are available over the context. Security contexts are established between peers using locally acquired credentials. Multiple contexts may exist simultaneously between a pair of peers, using the same or different set of credentials. GSS-API functions in a manner independent of the underlying transport protocol and depends on its calling application to transport the tokens that are generated by the security context between the peers.</target>
        </trans-unit>
        <trans-unit id="3d0d74d796beb94a270ac8b096f703568bfe698f" translate="yes" xml:space="preserve">
          <source>This interface encapsulates the parameters for a ContentSigner object.</source>
          <target state="translated">이 인터페이스는 ContentSigner 객체의 매개 변수를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="ebbc8e3e982576c17ab34a9cbdc34c9349ad45c0" translate="yes" xml:space="preserve">
          <source>This interface extends &lt;a href=&quot;watchable&quot;&gt;&lt;code&gt;Watchable&lt;/code&gt;&lt;/a&gt; interface so that a directory located by a path can be &lt;a href=&quot;#register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind%5B%5D,java.nio.file.WatchEvent.Modifier...)&quot;&gt;&lt;code&gt;registered&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt; and entries in the directory watched.</source>
          <target state="translated">This interface extends &lt;a href=&quot;watchable&quot;&gt; &lt;code&gt;Watchable&lt;/code&gt; &lt;/a&gt; interface so that a directory located by a path can be &lt;a href=&quot;#register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind%5B%5D,java.nio.file.WatchEvent.Modifier...)&quot;&gt; &lt;code&gt;registered&lt;/code&gt; &lt;/a&gt; with a &lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; &lt;/a&gt; and entries in the directory watched.</target>
        </trans-unit>
        <trans-unit id="fd33f3250d6416037f0ee6c850afd056f50ca002" translate="yes" xml:space="preserve">
          <source>This interface extends &lt;a href=&quot;watchable&quot;&gt;&lt;code&gt;Watchable&lt;/code&gt;&lt;/a&gt; interface so that a directory located by a path can be &lt;a href=&quot;path#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-&quot;&gt;&lt;code&gt;registered&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt; and entries in the directory watched.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;watchable&quot;&gt; &lt;code&gt;Watchable&lt;/code&gt; &lt;/a&gt; 인터페이스를 확장 하여 경로로 위치한 디렉토리를 &lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; 에&lt;/a&gt;&lt;a href=&quot;path#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-&quot;&gt; &lt;code&gt;registered&lt;/code&gt; &lt;/a&gt; 하고 감시 한 디렉토리의 항목을 등록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9dcecebf796719144c09143f3c0f99704a8025a1" translate="yes" xml:space="preserve">
          <source>This interface extends the &lt;a href=&quot;queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; interface. When a deque is used as a queue, FIFO (First-In-First-Out) behavior results. Elements are added at the end of the deque and removed from the beginning. The methods inherited from the &lt;code&gt;Queue&lt;/code&gt; interface are precisely equivalent to &lt;code&gt;Deque&lt;/code&gt; methods as indicated in the following table:</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; 인터페이스를 확장합니다 . 큐가 큐로 사용되면 FIFO (선입 선출) 동작이 발생합니다. 요소는 deque의 끝에 추가되고 처음부터 제거됩니다. &lt;code&gt;Queue&lt;/code&gt; 인터페이스 에서 상속 된 메소드는 다음 표에 표시된대로 &lt;code&gt;Deque&lt;/code&gt; 메소드와 정확히 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="49c4dd48519ef6903fb8726b5ae4044b62f5c5ca" translate="yes" xml:space="preserve">
          <source>This interface has been deprecated.</source>
          <target state="translated">이 인터페이스는 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8132161c2d6ca08b67cb8c9e9ad75b99fc3fdc24" translate="yes" xml:space="preserve">
          <source>This interface has been deprecated. See the &lt;a href=&quot;observable&quot;&gt;&lt;code&gt;Observable&lt;/code&gt;&lt;/a&gt; class for further information.</source>
          <target state="translated">이 인터페이스는 더 이상 사용되지 않습니다. 자세한 내용은 &lt;a href=&quot;observable&quot;&gt; &lt;code&gt;Observable&lt;/code&gt; &lt;/a&gt; 클래스를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3be066f456ba4f5891580344c8e4456359b77ffa" translate="yes" xml:space="preserve">
          <source>This interface has been replaced by the SAX2 &lt;a href=&quot;attributes&quot;&gt;&lt;code&gt;Attributes&lt;/code&gt;&lt;/a&gt; interface, which includes Namespace support.</source>
          <target state="translated">이 인터페이스는 네임 스페이스 지원을 포함 하는 SAX2 &lt;a href=&quot;attributes&quot;&gt; &lt;code&gt;Attributes&lt;/code&gt; &lt;/a&gt; 인터페이스 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="46f0114251d5dc9efb5d2e69c257075fa69d13ec" translate="yes" xml:space="preserve">
          <source>This interface has been replaced by the SAX2 &lt;a href=&quot;contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; interface, which includes Namespace support.</source>
          <target state="translated">이 인터페이스는 네임 스페이스 지원을 포함 하는 SAX2 &lt;a href=&quot;contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt; 인터페이스 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="75fb99741ae590f4edf56d40c3ccc1473b79d1dc" translate="yes" xml:space="preserve">
          <source>This interface has been replaced by the SAX2 &lt;a href=&quot;xmlreader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; interface, which includes Namespace support.</source>
          <target state="translated">이 인터페이스는 네임 스페이스 지원을 포함 하는 SAX2 &lt;a href=&quot;xmlreader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt; 인터페이스 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="b61a7814aec60c920bd2352c7aa6433d76505fe1" translate="yes" xml:space="preserve">
          <source>This interface has to be implemented by any MBean class expected to represent a relation managed using the Relation Service.</source>
          <target state="translated">이 인터페이스는 관계 서비스를 사용하여 관리되는 관계를 나타낼 것으로 예상되는 모든 MBean 클래스에 의해 구현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="93664bd1dba9adbd3e908cae896ede7ee73a80f0" translate="yes" xml:space="preserve">
          <source>This interface imposes a total ordering on the objects of each class that implements it.</source>
          <target state="translated">이 인터페이스는이를 구현하는 각 클래스의 객체에 총 정렬을 부과합니다.</target>
        </trans-unit>
        <trans-unit id="8d04fa3a064f1d5d2441d626c114de6dea5d3db0" translate="yes" xml:space="preserve">
          <source>This interface imposes a total ordering on the objects of each class that implements it. This ordering is referred to as the class's</source>
          <target state="translated">이 인터페이스는이를 구현하는 각 클래스의 객체에 총 정렬을 부과합니다. 이 순서는 클래스의</target>
        </trans-unit>
        <trans-unit id="8be0f84e3882f00e9823e74db581bc6a2967df61" translate="yes" xml:space="preserve">
          <source>This interface inherits from &lt;code&gt;CharacterData&lt;/code&gt; and represents the content of a comment, i.e., all the characters between the starting '&lt;code&gt;&amp;lt;!--&lt;/code&gt;' and ending '&lt;code&gt;--&amp;gt;&lt;/code&gt;'.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;CharacterData&lt;/code&gt; 에서 상속되며 주석의 내용, 즉 시작 ' &lt;code&gt;&amp;lt;!--&lt;/code&gt; '과 끝 ' &lt;code&gt;--&amp;gt;&lt;/code&gt; ' 사이의 모든 문자 를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="1e337fc9962a1e94391dba9801414f1f67094fbc" translate="yes" xml:space="preserve">
          <source>This interface inherits from &lt;code&gt;CharacterData&lt;/code&gt; and represents the content of a comment, i.e., all the characters between the starting '&lt;code&gt;&amp;lt;!--&lt;/code&gt;' and ending '&lt;code&gt;--&amp;gt;&lt;/code&gt;'. Note that this is the definition of a comment in XML, and, in practice, HTML, although some HTML tools may implement the full SGML comment structure.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;CharacterData&lt;/code&gt; 에서 상속되며 주석의 내용, 즉 시작 ' &lt;code&gt;&amp;lt;!--&lt;/code&gt; '과 끝 ' &lt;code&gt;--&amp;gt;&lt;/code&gt; ' 사이의 모든 문자 를 나타냅니다 . 이것은 일부 HTML 도구가 전체 SGML 주석 구조를 구현할 수 있지만 실제로는 HTML의 주석 정의입니다.</target>
        </trans-unit>
        <trans-unit id="e64f69133c0d52ffe7dab7201f742682bff8ec3d" translate="yes" xml:space="preserve">
          <source>This interface is a framework-level interface that should not be widely used in application code. Instead, applications should create and pass around instances of concrete types, such as &lt;code&gt;LocalDate&lt;/code&gt;. There are many reasons for this, part of which is that implementations of this interface may be in calendar systems other than ISO. See &lt;a href=&quot;../chrono/chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt; for a fuller discussion of the issues.</source>
          <target state="translated">이 인터페이스는 응용 프로그램 코드에서 널리 사용되지 않아야하는 프레임 워크 수준의 인터페이스입니다. 대신 응용 프로그램은 &lt;code&gt;LocalDate&lt;/code&gt; 와 같은 구체적인 유형의 인스턴스를 만들어 전달해야합니다 . 이에 대한 많은 이유가 있으며, 그 중 일부는이 인터페이스의 구현이 ISO 이외의 캘린더 시스템에있을 수 있다는 것입니다. 문제에 대한 자세한 내용은 &lt;a href=&quot;../chrono/chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dbbb7bb0cadbe941c36d7f06bb82ecd5502f3d22" translate="yes" xml:space="preserve">
          <source>This interface is a framework-level interface that should not be widely used in application code. Instead, applications should create and pass around instances of concrete types, such as &lt;code&gt;Period&lt;/code&gt; and &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스는 응용 프로그램 코드에서 널리 사용되지 않아야하는 프레임 워크 수준의 인터페이스입니다. 대신 애플리케이션은 &lt;code&gt;Period&lt;/code&gt; 및 &lt;code&gt;Duration&lt;/code&gt; 과 같은 구체적인 유형의 인스턴스를 작성하고 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="aa3c702fd4d168ea9cf556c79e47f6b47cd68357" translate="yes" xml:space="preserve">
          <source>This interface is a member of the &lt;a href=&quot;../package-summary#CollectionsFramework&quot;&gt; Java Collections Framework&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;../package-summary#CollectionsFramework&quot;&gt;Java Collections Framework&lt;/a&gt; 의 멤버입니다 .</target>
        </trans-unit>
        <trans-unit id="9862cf59ac51a4de405245ee9ecf1f3ecb0df2de" translate="yes" xml:space="preserve">
          <source>This interface is a member of the &lt;a href=&quot;../util/package-summary#CollectionsFramework&quot;&gt; Java Collections Framework&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;../util/package-summary#CollectionsFramework&quot;&gt;Java Collections Framework&lt;/a&gt; 의 멤버입니다 .</target>
        </trans-unit>
        <trans-unit id="7625f17ecb6936d21e07364e1ea399ae070d3fcd" translate="yes" xml:space="preserve">
          <source>This interface is a member of the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/collections/index.html&quot;&gt; Java Collections Framework&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/collections/index.html&quot;&gt;Java Collections Framework&lt;/a&gt; 의 멤버입니다 .</target>
        </trans-unit>
        <trans-unit id="fd9a1eb2f04b243886224d0aae29dd1b987f1386" translate="yes" xml:space="preserve">
          <source>This interface is a member of the &lt;a href=&quot;package-summary#CollectionsFramework&quot;&gt; Java Collections Framework&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;package-summary#CollectionsFramework&quot;&gt;Java Collections Framework&lt;/a&gt; 의 멤버입니다 .</target>
        </trans-unit>
        <trans-unit id="05880429a3a9bec34d8484810f39e9eb49490711" translate="yes" xml:space="preserve">
          <source>This interface is a service provider that can be called by multiple threads. Implementations must be immutable and thread-safe.</source>
          <target state="translated">이 인터페이스는 여러 스레드에서 호출 할 수있는 서비스 공급자입니다. 구현은 변경 불가능하고 스레드로부터 안전해야합니다.</target>
        </trans-unit>
        <trans-unit id="fb55d5e76ad09a5cf2a8f4cd8d4df8abc2076928" translate="yes" xml:space="preserve">
          <source>This interface is also used to provide a read-only access to the computed values of an element. See also the &lt;code&gt;ViewCSS&lt;/code&gt; interface. The CSS Object Model doesn't provide an access to the specified or actual values of the CSS cascade.</source>
          <target state="translated">이 인터페이스는 요소의 계산 된 값에 대한 읽기 전용 액세스를 제공하는데도 사용됩니다. &lt;code&gt;ViewCSS&lt;/code&gt; 인터페이스 도 참조하십시오 . CSS 개체 모델은 CSS 캐스케이드의 지정된 값이나 실제 값에 대한 액세스를 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7e07de26246704dc339ed48f22eaf454e3b3dc14" translate="yes" xml:space="preserve">
          <source>This interface is associated with</source>
          <target state="translated">이 인터페이스는</target>
        </trans-unit>
        <trans-unit id="334d1e55704e26c5dad92d1230a4cdbc730f81a3" translate="yes" xml:space="preserve">
          <source>This interface is deprecated, and is planned for removal in a future release.</source>
          <target state="translated">이 인터페이스는 더 이상 사용되지 않으며 향후 릴리스에서 제거 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="e4ee1d23f4982b4b2e189254b3c0588bb66a0a4b" translate="yes" xml:space="preserve">
          <source>This interface is designed to be an optional additional API supported by some implementations of &lt;a href=&quot;../image&quot;&gt;&lt;code&gt;Image&lt;/code&gt;&lt;/a&gt; to allow them to provide alternate images for various rendering resolutions.</source>
          <target state="translated">이 인터페이스는 다양한 렌더링 해상도에 대한 대체 이미지를 제공 할 수 있도록 &lt;a href=&quot;../image&quot;&gt; &lt;code&gt;Image&lt;/code&gt; 의&lt;/a&gt; 일부 구현에서 지원하는 선택적 추가 API로 설계되었습니다 .</target>
        </trans-unit>
        <trans-unit id="9d020816ba2c1170c92bd0e48164ee9d77625760" translate="yes" xml:space="preserve">
          <source>This interface is designed to be an optional additional API supported by some implementations of &lt;a href=&quot;../image&quot;&gt;&lt;code&gt;Image&lt;/code&gt;&lt;/a&gt; to allow them to provide alternate images for various rendering resolutions. The various &lt;code&gt;Graphics.drawImage(...)&lt;/code&gt; variant methods will consult the methods of this interface if it is implemented on the argument &lt;code&gt;Image&lt;/code&gt; object in order to choose the best representation to use for each rendering operation.</source>
          <target state="translated">이 인터페이스는 다양한 렌더링 해상도에 대한 대체 이미지를 제공 할 수 있도록 &lt;a href=&quot;../image&quot;&gt; &lt;code&gt;Image&lt;/code&gt; 의&lt;/a&gt; 일부 구현에서 지원하는 선택적 추가 API로 설계되었습니다 . 다양한 &lt;code&gt;Graphics.drawImage(...)&lt;/code&gt; 변형 메서드는 각 렌더링 작업에 사용할 최상의 표현을 선택하기 위해 인수 &lt;code&gt;Image&lt;/code&gt; 객체에 구현 된 경우이 인터페이스의 메서드를 참조합니다 .</target>
        </trans-unit>
        <trans-unit id="a6da5a934ce2519fa4cabf061819bd93f7a8c447" translate="yes" xml:space="preserve">
          <source>This interface is designed to provide a common protocol for objects that wish to execute code while they are active. For example, &lt;code&gt;Runnable&lt;/code&gt; is implemented by class &lt;code&gt;Thread&lt;/code&gt;. Being active simply means that a thread has been started and has not yet been stopped.</source>
          <target state="translated">이 인터페이스는 코드가 활성화 된 상태에서 코드를 실행하려는 객체에 공통 프로토콜을 제공하도록 설계되었습니다. 예를 들어 &lt;code&gt;Runnable&lt;/code&gt; 은 &lt;code&gt;Thread&lt;/code&gt; 클래스에 의해 구현됩니다 . 활성 상태는 단순히 스레드가 시작되었고 아직 중지되지 않았 음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="baebffb89378f52d414503c8af09aa94a8fc2b01" translate="yes" xml:space="preserve">
          <source>This interface is designed to provide access to a single extension, unlike &lt;a href=&quot;x509extension&quot;&gt;&lt;code&gt;X509Extension&lt;/code&gt;&lt;/a&gt; which is more suitable for accessing a set of extensions.</source>
          <target state="translated">이 인터페이스는 확장 세트에 액세스하는 데 더 적합한 &lt;a href=&quot;x509extension&quot;&gt; &lt;code&gt;X509Extension&lt;/code&gt; &lt;/a&gt; 과 달리 단일 확장에 대한 액세스를 제공하도록 설계되었습니다 .</target>
        </trans-unit>
        <trans-unit id="b3ecbfd46c181133e8ebd6cbff9b95dc0123276a" translate="yes" xml:space="preserve">
          <source>This interface is designed to provide the access to core JShell functionality needed to implement ExecutionControl.</source>
          <target state="translated">이 인터페이스는 ExecutionControl을 구현하는 데 필요한 핵심 JShell 기능에 대한 액세스를 제공하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="9aa3a81748f01451ac101285be9788ba4f953e94" translate="yes" xml:space="preserve">
          <source>This interface is designed to work in collusion with java.beans.Beans.instantiate.</source>
          <target state="translated">이 인터페이스는 java.beans.Beans.instantiate와 함께 작동하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="ad54b3e9604379578a01600df8a39ea107c331a1" translate="yes" xml:space="preserve">
          <source>This interface is designed to work in collusion with java.beans.Beans.instantiate. The interface is intended to provide mechanism to allow the proper initialization of JavaBeans that are also Applets, during their instantiation by java.beans.Beans.instantiate().</source>
          <target state="translated">이 인터페이스는 java.beans.Beans.instantiate와 함께 작동하도록 설계되었습니다. 이 인터페이스는 java.beans.Beans.instantiate ()에 의해 인스턴스화하는 동안 애플릿 인 JavaBean의 적절한 초기화를 허용하는 메커니즘을 제공하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="89682a28cc8f0667dd31310511233ea47a03db14" translate="yes" xml:space="preserve">
          <source>This interface is for enumerating lists returned by methods in the javax.naming and javax.naming.directory packages.</source>
          <target state="translated">이 인터페이스는 javax.naming 및 javax.naming.directory 패키지의 메소드가 리턴 한 목록을 열거하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="e1c8ade94408470188a3b624fd0ce556a7ee75f3" translate="yes" xml:space="preserve">
          <source>This interface is for enumerating lists returned by methods in the javax.naming and javax.naming.directory packages. It extends Enumeration to allow as exceptions to be thrown during the enumeration.</source>
          <target state="translated">이 인터페이스는 javax.naming 및 javax.naming.directory 패키지의 메소드가 리턴 한 목록을 열거하기위한 것입니다. 열거하는 동안 예외가 발생하도록 열거를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="49838318dec1de002134998d30a13c554ab74bfc" translate="yes" xml:space="preserve">
          <source>This interface is for expert developers, and is not needed for normal simple beans. To avoid confusing end-users we avoid using getXXX setXXX design patterns for these methods.</source>
          <target state="translated">이 인터페이스는 전문가 개발자를위한 것이며 일반적인 단순 Bean에는 필요하지 않습니다. 최종 사용자의 혼동을 피하기 위해 이러한 메소드에 getXXX setXXX 디자인 패턴을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="e8a9ccee46f85a945ce7fc25af131821526aa30d" translate="yes" xml:space="preserve">
          <source>This interface is for handling &lt;code&gt;UnsolicitedNotificationEvent&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;UnsolicitedNotificationEvent&lt;/code&gt; 처리를위한 것 입니다.</target>
        </trans-unit>
        <trans-unit id="48eda86c2269012ae794adcc546191dccfa01906" translate="yes" xml:space="preserve">
          <source>This interface is for handling &lt;code&gt;UnsolicitedNotificationEvent&lt;/code&gt;. &quot;Unsolicited notification&quot; is defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;. It allows the server to send unsolicited notifications to the client. A &lt;code&gt;UnsolicitedNotificationListener&lt;/code&gt; must:</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;UnsolicitedNotificationEvent&lt;/code&gt; 처리를위한 것 입니다. &quot;원치 않는 통지&quot;는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의되어 있습니다. 서버가 요청하지 않은 알림을 클라이언트에 보낼 수 있습니다. &lt;code&gt;UnsolicitedNotificationListener&lt;/code&gt; 에의 필수 :</target>
        </trans-unit>
        <trans-unit id="2d4875d4dd0c18e18dbaaba692dec9eb72807f3c" translate="yes" xml:space="preserve">
          <source>This interface is for handling &lt;code&gt;UnsolicitedNotificationEvent&lt;/code&gt;. &quot;Unsolicited notification&quot; is defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;. It allows the server to send unsolicited notifications to the client. An &lt;code&gt;UnsolicitedNotificationListener&lt;/code&gt; must:</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;UnsolicitedNotificationEvent&lt;/code&gt; 처리를위한 것 입니다. &quot;요청하지 않은 알림&quot;은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의되어 있습니다. 서버가 요청하지 않은 알림을 클라이언트에 보낼 수 있습니다. &lt;code&gt;UnsolicitedNotificationListener&lt;/code&gt; 에의 필수 :</target>
        </trans-unit>
        <trans-unit id="62b7767159b1fc6d0a912acff244fc74bdb0623b" translate="yes" xml:space="preserve">
          <source>This interface is for handling &lt;code&gt;UnsolicitedNotificationEvent&lt;/code&gt;. &quot;Unsolicited notification&quot; is defined in &lt;a href=&quot;https://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;. It allows the server to send unsolicited notifications to the client. An &lt;code&gt;UnsolicitedNotificationListener&lt;/code&gt; must:</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;UnsolicitedNotificationEvent&lt;/code&gt; 를 처리 하기 위한 것 입니다. &quot;요청하지 않은 알림&quot;은 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의되어 있습니다. 서버가 요청하지 않은 알림을 클라이언트에 보낼 수 있습니다. &lt;code&gt;UnsolicitedNotificationListener&lt;/code&gt; 에의 필수 :</target>
        </trans-unit>
        <trans-unit id="79c93f43e6f69c7f0f8c9513039f9b516fbeafe4" translate="yes" xml:space="preserve">
          <source>This interface is for returning controls with objects returned in NamingEnumerations.</source>
          <target state="translated">이 인터페이스는 NamingEnumerations에 반환 된 개체가있는 컨트롤을 반환하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="f0541440ec51bff0f6a8b8dcb75edeed9fa77769" translate="yes" xml:space="preserve">
          <source>This interface is for returning controls with objects returned in NamingEnumerations. For example, suppose a server sends back controls with the results of a search operation, the service provider would return a NamingEnumeration of objects that are both SearchResult and implement HasControls.</source>
          <target state="translated">이 인터페이스는 NamingEnumerations에 반환 된 개체가있는 컨트롤을 반환하기위한 것입니다. 예를 들어, 서버가 검색 작업 결과와 함께 컨트롤을 다시 전송한다고 가정하면 서비스 공급자는 SearchResult 및 HasControls를 모두 구현하는 개체의 NamingEnumeration을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d25e0d6b22b27ec8c972b9e3eb41afd50a72be0c" translate="yes" xml:space="preserve">
          <source>This interface is implemented by &lt;code&gt;BeanContextChildren&lt;/code&gt; that have an AWT &lt;code&gt;Component&lt;/code&gt; associated with them.</source>
          <target state="translated">이 인터페이스는 AWT &lt;code&gt;Component&lt;/code&gt; 연관된 &lt;code&gt;BeanContextChildren&lt;/code&gt; 에 의해 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="34049a3edf989c23887780df8a1b71d390eb37f2" translate="yes" xml:space="preserve">
          <source>This interface is implemented by BeanContexts' that have an AWT Container associated with them.</source>
          <target state="translated">이 인터페이스는 AWT 컨테이너가 연결된 BeanContexts에 의해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="0b33eb3b8422d4dfabd5731cf56218846d077b1a" translate="yes" xml:space="preserve">
          <source>This interface is implemented by a JavaBean that does not directly have a BeanContext(Child) associated with it (via implementing that interface or a subinterface thereof), but has a public BeanContext(Child) delegated from it.</source>
          <target state="translated">이 인터페이스는 그와 연관된 BeanContext (Child)를 직접 갖지 않고 (그 인터페이스 또는 서브 인터페이스를 구현하여) JavaBean에 의해 구현되지만 공용 BeanContext (Child)가 위임되었습니다.</target>
        </trans-unit>
        <trans-unit id="1655d19a231b743bd5a279c27ced1f86578aac1b" translate="yes" xml:space="preserve">
          <source>This interface is implemented by a JavaBean that does not directly have a BeanContext(Child) associated with it (via implementing that interface or a subinterface thereof), but has a public BeanContext(Child) delegated from it. For example, a subclass of java.awt.Container may have a BeanContext associated with it that all Component children of that Container shall be contained within.</source>
          <target state="translated">이 인터페이스는 그와 연관된 BeanContext (Child)를 직접 갖지 않고 (그 인터페이스 또는 서브 인터페이스를 구현하여) JavaBean에 의해 구현되지만 공용 BeanContext (Child)가 위임되었습니다. 예를 들어, java.awt.Container의 서브 클래스는 해당 컨테이너의 모든 컴포넌트 하위가 포함되도록 BeanContext와 연관 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="920ac66844da30d241c685eac6b029b1a37306e4" translate="yes" xml:space="preserve">
          <source>This interface is implemented by an object that can provide a Reference to itself.</source>
          <target state="translated">이 인터페이스는 자신에 대한 참조를 제공 할 수있는 객체로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="d4a8a9d9b1adcb62a656bfc0ccd286bec6832a76" translate="yes" xml:space="preserve">
          <source>This interface is implemented by any class which wants to receive notifications about the completion of an SSL protocol handshake on a given SSL connection.</source>
          <target state="translated">이 인터페이스는 지정된 SSL 연결에서 SSL 프로토콜 핸드 셰이크 완료에 대한 알림을 수신하려는 모든 클래스에 의해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="006710bd3322764b5852529a2e0360b31cc8094a" translate="yes" xml:space="preserve">
          <source>This interface is implemented by components that have a single JRootPane child: JDialog, JFrame, JWindow, JApplet, JInternalFrame.</source>
          <target state="translated">이 인터페이스는 JDialog, JFrame, JWindow, JApplet, JInternalFrame과 같은 단일 JRootPane 자식이있는 구성 요소에 의해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="21d0ad449348d8f3d2e7d7053587428ba8b359ec" translate="yes" xml:space="preserve">
          <source>This interface is implemented by components that have a single JRootPane child: JDialog, JFrame, JWindow, JApplet, JInternalFrame. The methods in this interface are just</source>
          <target state="translated">이 인터페이스는 JDialog, JFrame, JWindow, JApplet, JInternalFrame과 같은 단일 JRootPane 자식이있는 구성 요소에 의해 구현됩니다. 이 인터페이스의 메소드는</target>
        </trans-unit>
        <trans-unit id="15d8daa1f8f9297001987357f9de5ef69560e255" translate="yes" xml:space="preserve">
          <source>This interface is implemented by driver vendors to let users know the capabilities of a Database Management System (DBMS) in combination with the driver based on JDBC technology (&quot;JDBC driver&quot;) that is used with it. Different relational DBMSs often support different features, implement features in different ways, and use different data types. In addition, a driver may implement a feature on top of what the DBMS offers. Information returned by methods in this interface applies to the capabilities of a particular driver and a particular DBMS working together. Note that as used in this documentation, the term &quot;database&quot; is used generically to refer to both the driver and DBMS.</source>
          <target state="translated">이 인터페이스는 드라이버 공급 업체에 의해 구현되어 사용자가 함께 사용되는 JDBC 기술 기반 드라이버 ( &quot;JDBC 드라이버&quot;)와 결합하여 데이터베이스 관리 시스템 (DBMS)의 기능을 알 수 있습니다. 서로 다른 관계형 DBMS는 종종 서로 다른 기능을 지원하고 서로 다른 방식으로 기능을 구현하며 서로 다른 데이터 유형을 사용합니다. 또한 드라이버는 DBMS가 제공하는 기능 위에 기능을 구현할 수 있습니다. 이 인터페이스의 메서드에서 반환 된 정보는 특정 드라이버와 함께 작동하는 특정 DBMS의 기능에 적용됩니다. 이 문서에서 사용되는 &quot;데이터베이스&quot;라는 용어는 일반적으로 드라이버와 DBMS를 모두 지칭하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9cdf206fa404f4d84f4d48233879301e23c46248" translate="yes" xml:space="preserve">
          <source>This interface is implemented by driver vendors to let users know the capabilities of a Database Management System (DBMS) in combination with the driver based on JDBC&amp;trade; technology (&quot;JDBC driver&quot;) that is used with it. Different relational DBMSs often support different features, implement features in different ways, and use different data types. In addition, a driver may implement a feature on top of what the DBMS offers. Information returned by methods in this interface applies to the capabilities of a particular driver and a particular DBMS working together. Note that as used in this documentation, the term &quot;database&quot; is used generically to refer to both the driver and DBMS.</source>
          <target state="translated">이 인터페이스는 사용자가 JDBC &amp;trade; 기술 기반 드라이버 ( &quot;JDBC 드라이버&quot;)와 함께 사용되는 DBMS (데이터베이스 관리 시스템)의 기능을 알 수 있도록 드라이버 공급 업체에 의해 구현됩니다. 서로 다른 관계형 DBMS는 종종 서로 다른 기능을 지원하고 서로 다른 방식으로 기능을 구현하며 서로 다른 데이터 유형을 사용합니다. 또한 드라이버는 DBMS가 제공하는 기능 위에 기능을 구현할 수 있습니다. 이 인터페이스의 메소드가 반환하는 정보는 특정 드라이버와 함께 작동하는 특정 DBMS의 기능에 적용됩니다. 이 문서에서 사용되는 &quot;데이터베이스&quot;라는 용어는 일반적으로 드라이버와 DBMS를 모두 지칭하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="656f13a410784cc1fac4bc273185b924ebf3a59f" translate="yes" xml:space="preserve">
          <source>This interface is implemented by objects which want to know when they are being bound or unbound from a SSLSession.</source>
          <target state="translated">이 인터페이스는 SSLSession에서 바인드 또는 바인드 해제시기를 알고 자하는 오브젝트로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="7354604976277d6ca4afa624f47270e30788e70e" translate="yes" xml:space="preserve">
          <source>This interface is implemented by objects which want to know when they are being bound or unbound from a SSLSession. When either event occurs via &lt;a href=&quot;sslsession#putValue(java.lang.String,java.lang.Object)&quot;&gt;&lt;code&gt;SSLSession.putValue(String, Object)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sslsession#removeValue(java.lang.String)&quot;&gt;&lt;code&gt;SSLSession.removeValue(String)&lt;/code&gt;&lt;/a&gt;, the event is communicated through a SSLSessionBindingEvent identifying the session.</source>
          <target state="translated">이 인터페이스는 SSLSession에서 바인드되거나 바인드 해제되는시기를 알고 자하는 객체에 의해 구현됩니다. &lt;a href=&quot;sslsession#putValue(java.lang.String,java.lang.Object)&quot;&gt; &lt;code&gt;SSLSession.putValue(String, Object)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;sslsession#removeValue(java.lang.String)&quot;&gt; &lt;code&gt;SSLSession.removeValue(String)&lt;/code&gt; &lt;/a&gt; 를 통해 이벤트가 발생 하면 세션을 식별하는 SSLSessionBindingEvent를 통해 이벤트가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="a345e72ec4def1a0226b56ac04238afce772397f" translate="yes" xml:space="preserve">
          <source>This interface is implemented by objects which want to know when they are being bound or unbound from a SSLSession. When either event occurs via &lt;a href=&quot;sslsession#putValue-java.lang.String-java.lang.Object-&quot;&gt;&lt;code&gt;SSLSession.putValue(String, Object)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sslsession#removeValue-java.lang.String-&quot;&gt;&lt;code&gt;SSLSession.removeValue(String)&lt;/code&gt;&lt;/a&gt;, the event is communicated through a SSLSessionBindingEvent identifying the session.</source>
          <target state="translated">이 인터페이스는 SSLSession에서 바인드 또는 바인드 해제시기를 알고 자하는 오브젝트로 구현됩니다. &lt;a href=&quot;sslsession#putValue-java.lang.String-java.lang.Object-&quot;&gt; &lt;code&gt;SSLSession.putValue(String, Object)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;sslsession#removeValue-java.lang.String-&quot;&gt; &lt;code&gt;SSLSession.removeValue(String)&lt;/code&gt; &lt;/a&gt; 통해 이벤트가 발생 하면 세션을 식별하는 SSLSessionBindingEvent를 통해 이벤트가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="fd9a3b92d17c8ffaf6c96372a056af0d67848156" translate="yes" xml:space="preserve">
          <source>This interface is implemented by the ModelMBeanInfo for every ModelMBean.</source>
          <target state="translated">이 인터페이스는 모든 ModelMBean의 ModelMBeanInfo에 의해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="cf7a6bc97229154759ae9b0cfbfd7896061be296" translate="yes" xml:space="preserve">
          <source>This interface is implemented by the ModelMBeanInfo for every ModelMBean. An implementation of this interface must be shipped with every JMX Agent.</source>
          <target state="translated">이 인터페이스는 모든 ModelMBean의 ModelMBeanInfo에 의해 구현됩니다. 이 인터페이스의 구현은 모든 JMX 에이전트와 함께 제공되어야합니다.</target>
        </trans-unit>
        <trans-unit id="b43c9be936ad05cfff2dac9eda97914a837fddbb" translate="yes" xml:space="preserve">
          <source>This interface is intended to be implemented by, or delegated from, instances of java.beans.beancontext.BeanContext, in order to propagate to its nested hierarchy of java.beans.beancontext.BeanContextChild instances, the current &quot;designTime&quot; property.</source>
          <target state="translated">이 인터페이스는 java.beans.beancontext.BeanContext 인스턴스에 의해 구현되거나 위임되어 현재 &quot;designTime&quot;특성 인 중첩 된 java.beans.beancontext.BeanContextChild 인스턴스의 계층 구조로 전파됩니다.</target>
        </trans-unit>
        <trans-unit id="dc34c16887e8ae25de2f5a8a64fefb829d601d75" translate="yes" xml:space="preserve">
          <source>This interface is not intended to be implemented outside of the java.instrument module.</source>
          <target state="translated">이 인터페이스는 java.instrument 모듈 외부에서 구현하기위한 것이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="b0b095d0496841d272d349431d8a7e47cced4d07" translate="yes" xml:space="preserve">
          <source>This interface is not normally accessed directly by a client, which will use the &lt;code&gt;Sasl&lt;/code&gt; static methods instead. However, a particular environment may provide and install a new or different &lt;code&gt;SaslClientFactory&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스는 일반적으로 클라이언트가 직접 액세스하지 않으며 대신 &lt;code&gt;Sasl&lt;/code&gt; 정적 메소드를 사용합니다. 그러나 특정 환경에서 새 &lt;code&gt;SaslClientFactory&lt;/code&gt; 를 제공하고 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="37b6973450b3fd46d3a5711b21b32050a0df559f" translate="yes" xml:space="preserve">
          <source>This interface is not normally accessed directly by a server, which will use the &lt;code&gt;Sasl&lt;/code&gt; static methods instead. However, a particular environment may provide and install a new or different &lt;code&gt;SaslServerFactory&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스는 일반적으로 서버에서 직접 액세스하지 않으며 대신 &lt;code&gt;Sasl&lt;/code&gt; 정적 메소드를 사용합니다. 그러나 특정 환경에서 새 &lt;code&gt;SaslServerFactory&lt;/code&gt; 를 제공하고 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="97251ffcaabfe750496d216284609649ca98ac33" translate="yes" xml:space="preserve">
          <source>This interface is primarily for the purposes of reporting where an error occurred in the XML source or transformation instructions.</source>
          <target state="translated">이 인터페이스는 주로 XML 소스 또는 변환 지침에서 오류가 발생한 위치를보고하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="7ab123f7b63a9b065a0a0d9f6aca5ed1452181b9" translate="yes" xml:space="preserve">
          <source>This interface is similar to the now-deprecated SAX 1.0 DocumentHandler interface, but it adds support for Namespaces and for reporting skipped entities (in non-validating XML processors).</source>
          <target state="translated">이 인터페이스는 현재 사용되지 않는 SAX 1.0 DocumentHandler 인터페이스와 유사하지만 네임 스페이스 및 건너 뛴 엔티티보고 (비 검증 XML 프로세서에서)에 대한 지원을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="8c48630dafc6b59c3fa9c33a93e77fb49e688684" translate="yes" xml:space="preserve">
          <source>This interface is the root of listener interfaces that handle &lt;code&gt;NamingEvent&lt;/code&gt;s.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;NamingEvent&lt;/code&gt; 를 처리하는 청취자 인터페이스의 루트입니다 .</target>
        </trans-unit>
        <trans-unit id="244791bd9f009696907848289ade648f819a7bd1" translate="yes" xml:space="preserve">
          <source>This interface is the root of listener interfaces that handle &lt;code&gt;NamingEvent&lt;/code&gt;s. It does not make sense for a listener to implement just this interface. A listener typically implements a subinterface of &lt;code&gt;NamingListener&lt;/code&gt;, such as &lt;code&gt;ObjectChangeListener&lt;/code&gt; or &lt;code&gt;NamespaceChangeListener&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;NamingEvent&lt;/code&gt; 를 처리하는 청취자 인터페이스의 루트입니다 . 리스너가이 인터페이스 만 구현하는 것은 이치에 맞지 않습니다. 리스너는 일반적 으로 &lt;code&gt;ObjectChangeListener&lt;/code&gt; 또는 &lt;code&gt;NamespaceChangeListener&lt;/code&gt; 와 같은 &lt;code&gt;NamingListener&lt;/code&gt; 의 하위 인터페이스를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="3f8f2c9484ab68b7feaa9063d8408b134ff1c748" translate="yes" xml:space="preserve">
          <source>This interface is the type signature that is expected to be present on any attribute key that contributes to character level presentation.</source>
          <target state="translated">이 인터페이스는 문자 수준 표시에 기여하는 모든 속성 키에있을 것으로 예상되는 유형 서명입니다.</target>
        </trans-unit>
        <trans-unit id="c276a2d8da90f5251e14a518f42f97ef0622e864" translate="yes" xml:space="preserve">
          <source>This interface is the type signature that is expected to be present on any attribute key that contributes to character level presentation. This would be any attribute that applies to a so-called</source>
          <target state="translated">이 인터페이스는 문자 수준 표시에 기여하는 모든 속성 키에있을 것으로 예상되는 유형 서명입니다. 이것은 소위에 적용되는 속성입니다.</target>
        </trans-unit>
        <trans-unit id="87f744ddcdd0ea35642fa299e0359013cd2e018f" translate="yes" xml:space="preserve">
          <source>This interface is the type signature that is expected to be present on any attribute key that contributes to presentation of color.</source>
          <target state="translated">이 인터페이스는 색상 표현에 기여하는 모든 속성 키에 존재할 것으로 예상되는 유형 서명입니다.</target>
        </trans-unit>
        <trans-unit id="27e7503aef54cf9a67387f8529b8adf9c2987046" translate="yes" xml:space="preserve">
          <source>This interface is the type signature that is expected to be present on any attribute key that contributes to the determination of what font to use to render some text.</source>
          <target state="translated">이 인터페이스는 일부 텍스트를 렌더링하는 데 사용할 글꼴을 결정하는 데 기여하는 속성 키에 표시 될 것으로 예상되는 유형 서명입니다.</target>
        </trans-unit>
        <trans-unit id="8ba6a7f5fdb7cd1ee3fa4973de811526c29d0d99" translate="yes" xml:space="preserve">
          <source>This interface is the type signature that is expected to be present on any attribute key that contributes to the determination of what font to use to render some text. This is not considered to be a closed set, the definition can change across version of the platform and can be amended by additional user added entries that correspond to logical settings that are specific to some type of content.</source>
          <target state="translated">이 인터페이스는 일부 텍스트를 렌더링하는 데 사용할 글꼴을 결정하는 데 기여하는 속성 키에 표시 될 것으로 예상되는 유형 서명입니다. 이것은 폐쇄 된 세트로 간주되지 않으며 정의는 플랫폼 버전에 따라 변경 될 수 있으며 일부 유형의 콘텐츠에 특정한 논리적 설정에 해당하는 추가 사용자 추가 항목으로 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7f6502a128a1f525b8590ac6b658aec7a94ba55" translate="yes" xml:space="preserve">
          <source>This interface is the type signature that is expected to be present on any attribute key that contributes to the paragraph level presentation.</source>
          <target state="translated">이 인터페이스는 단락 수준 표시에 기여하는 모든 속성 키에 표시 될 것으로 예상되는 형식 서명입니다.</target>
        </trans-unit>
        <trans-unit id="e5a6352150d08ebc2e5a39ca1323fb83bed2bcd3" translate="yes" xml:space="preserve">
          <source>This interface is used by a printing application to cancel a print job.</source>
          <target state="translated">이 인터페이스는 인쇄 응용 프로그램에서 인쇄 작업을 취소하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5d8568390b6f9f0eaa74daede0f68341e379330f" translate="yes" xml:space="preserve">
          <source>This interface is used by a printing application to cancel a print job. This interface extends &lt;a href=&quot;docprintjob&quot;&gt;&lt;code&gt;DocPrintJob&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;DocPrintJob&lt;/code&gt; implementation returned from a print service implements this interface if the print job can be cancelled. Before trying to cancel a print job, the client needs to test if the &lt;code&gt;DocPrintJob&lt;/code&gt; object returned from the print service actually implements this interface. Clients should never assume that a &lt;code&gt;DocPrintJob&lt;/code&gt; implements this interface. A print service might support cancellation only for certain types of print data and representation class names. This means that only some of the &lt;code&gt;DocPrintJob&lt;/code&gt; objects returned from a service will implement this interface.</source>
          <target state="translated">이 인터페이스는 인쇄 응용 프로그램에서 인쇄 작업을 취소하는 데 사용됩니다. 이 인터페이스는 &lt;a href=&quot;docprintjob&quot;&gt; &lt;code&gt;DocPrintJob&lt;/code&gt; 를&lt;/a&gt; 확장 합니다. 인쇄 서비스에서 반환 된 &lt;code&gt;DocPrintJob&lt;/code&gt; 구현은 인쇄 작업을 취소 할 수있는 경우이 인터페이스를 구현합니다. 인쇄 작업을 취소하기 전에 인쇄 서비스에서 반환 된 &lt;code&gt;DocPrintJob&lt;/code&gt; 개체가 실제로이 인터페이스를 구현 하는지 테스트해야합니다 . 클라이언트는 &lt;code&gt;DocPrintJob&lt;/code&gt; 이이 인터페이스를 구현 한다고 가정해서는 안됩니다 . 인쇄 서비스는 특정 유형의 인쇄 데이터 및 표현 클래스 이름에 대해서만 취소를 지원할 수 있습니다. 이는 서비스에서 반환 된 일부 &lt;code&gt;DocPrintJob&lt;/code&gt; 개체 만이 인터페이스를 구현 한다는 것을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="074b62606ae32a44fe06467f74de5be148e56e17" translate="yes" xml:space="preserve">
          <source>This interface is used by the &lt;code&gt;URLStreamHandler&lt;/code&gt; class to create a &lt;code&gt;ContentHandler&lt;/code&gt; for a MIME type.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;URLStreamHandler&lt;/code&gt; 클래스에서 MIME 유형 의 &lt;code&gt;ContentHandler&lt;/code&gt; 를 작성하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="d907dca7978a8a7583146b02293a9738deb0a3ee" translate="yes" xml:space="preserve">
          <source>This interface is used for parsing names from a hierarchical namespace.</source>
          <target state="translated">이 인터페이스는 계층 네임 스페이스에서 이름을 구문 분석하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f60532ed074ee027ac09d7b29908e2dadb8369f1" translate="yes" xml:space="preserve">
          <source>This interface is used for parsing names from a hierarchical namespace. The NameParser contains knowledge of the syntactic information (like left-to-right orientation, name separator, etc.) needed to parse names. The equals() method, when used to compare two NameParsers, returns true if and only if they serve the same namespace.</source>
          <target state="translated">이 인터페이스는 계층 네임 스페이스에서 이름을 구문 분석하는 데 사용됩니다. NameParser에는 이름을 구문 분석하는 데 필요한 구문 정보 (예 : 왼쪽에서 오른쪽 방향, 이름 구분 기호 등)에 대한 정보가 들어 있습니다. equals () 메소드는 두 NameParsers를 비교하는 데 사용될 때 동일한 네임 스페이스를 제공하는 경우에만 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9ab8fc00f2fe87f5cabca057cfbe16188b246a14" translate="yes" xml:space="preserve">
          <source>This interface is used only for tagging keys for client properties for &lt;code&gt;JComponent&lt;/code&gt; set by UI which needs to be cleared on L&amp;amp;F change and serialization.</source>
          <target state="translated">이 인터페이스는 L &amp;amp; F 변경 및 직렬화시 지워야하는 UI에 의해 설정된 &lt;code&gt;JComponent&lt;/code&gt; 클라이언트 속성에 대한 태그 키에만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="076abc1b74828fbba351e8b88423155f0b672104" translate="yes" xml:space="preserve">
          <source>This interface is used to gain access to descriptors of the Descriptor class which are associated with a JMX component, i.e.</source>
          <target state="translated">이 인터페이스는 JMX 컴포넌트와 관련된 Descriptor 클래스의 디스크립터에 액세스하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="44f802fc086439b08afe9600dcec1ce759a42034" translate="yes" xml:space="preserve">
          <source>This interface is used to gain access to descriptors of the Descriptor class which are associated with a JMX component, i.e. MBean, MBeanInfo, MBeanAttributeInfo, MBeanNotificationInfo, MBeanOperationInfo, MBeanParameterInfo.</source>
          <target state="translated">이 인터페이스는 JMX 컴포넌트와 관련된 Descriptor 클래스의 디스크립터 (예 : MBean, MBeanInfo, MBeanAttributeInfo, MBeanNotificationInfo, MBeanOperationInfo, MBeanParameterInfo)에 액세스하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8dae2f254b0b76c720124a616d4c4361b57e2c34" translate="yes" xml:space="preserve">
          <source>This interface is used to mark objects created by ComponentUI delegates.</source>
          <target state="translated">이 인터페이스는 ComponentUI 대리자가 만든 개체를 표시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="455b71aee5e7e2f632fd245b5ef25439c62c135c" translate="yes" xml:space="preserve">
          <source>This interface is used to mark objects created by ComponentUI delegates. The &lt;code&gt;ComponentUI.installUI()&lt;/code&gt; and &lt;code&gt;ComponentUI.uninstallUI()&lt;/code&gt; methods can use this interface to decide if a properties value has been overridden. For example, the JList cellRenderer property is initialized by BasicListUI.installUI(), only if it's initial value is null:</source>
          <target state="translated">이 인터페이스는 ComponentUI 대리자가 만든 개체를 표시하는 데 사용됩니다. &lt;code&gt;ComponentUI.installUI()&lt;/code&gt; 및 &lt;code&gt;ComponentUI.uninstallUI()&lt;/code&gt; 메소드는 속성 값을 오버라이드 (override)되어있는 경우 결정이 인터페이스를 사용할 수 있습니다. 예를 들어 JList cellRenderer 속성은 초기 값이 null 인 경우에만 BasicListUI.installUI ()에 의해 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="7181250569511d967c9a8892d23cc68933707500" translate="yes" xml:space="preserve">
          <source>This interface is used to report non-fatal errors.</source>
          <target state="translated">이 인터페이스는 치명적이지 않은 오류를보고하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="996a2688daec118aa5d6f4efb9036ffafbc94a98" translate="yes" xml:space="preserve">
          <source>This interface is used to report non-fatal errors. Only warnings should be echoed through this interface.</source>
          <target state="translated">이 인터페이스는 치명적이지 않은 오류를보고하는 데 사용됩니다. 이 인터페이스를 통해 경고 만 에코되어야합니다.</target>
        </trans-unit>
        <trans-unit id="9ca6172bb904cedb5d362dd9390ef18f55e2e118" translate="yes" xml:space="preserve">
          <source>This interface is used to represent a group of principals.</source>
          <target state="translated">이 인터페이스는 프린시 펄 그룹을 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ceee39651e54044edcdcdaf4963811ee9e6f901a" translate="yes" xml:space="preserve">
          <source>This interface is used to represent a group of principals. (A principal represents an entity such as an individual user or a company).</source>
          <target state="translated">이 인터페이스는 프린시 펄 그룹을 나타내는 데 사용됩니다. (주체는 개인 사용자 또는 회사와 같은 엔티티를 나타냅니다).</target>
        </trans-unit>
        <trans-unit id="a70e6061c67c02fac0e46321a73916ac2a0c1833" translate="yes" xml:space="preserve">
          <source>This interface is used to represent both request and response controls.</source>
          <target state="translated">이 인터페이스는 요청 및 응답 제어를 모두 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ac40da6494532f14409d1178aab243139664f7d4" translate="yes" xml:space="preserve">
          <source>This interface is used to resolve resources during an XML parse.</source>
          <target state="translated">이 인터페이스는 XML 구문 분석 중에 리소스를 확인하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f36553232720f5760b0b3e4eefa8286abec9f5d6" translate="yes" xml:space="preserve">
          <source>This interface is used to resolve resources during an XML parse. If an application wishes to perform custom entity resolution it must register an instance of this interface with the XMLInputFactory using the setXMLResolver method.</source>
          <target state="translated">이 인터페이스는 XML 구문 분석 중에 리소스를 확인하는 데 사용됩니다. 응용 프로그램이 사용자 지정 엔티티 확인을 수행하려면 setXMLResolver 메서드를 사용하여 XMLInputFactory에이 인터페이스의 인스턴스를 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="0fa2ee49e0eb652d96916cd6dcc4c15cad9c7faa" translate="yes" xml:space="preserve">
          <source>This interface makes no guarantees of threadsafety.</source>
          <target state="translated">이 인터페이스는 스레드 안전성을 보장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0f46e9e4bc3be154040bd66722db940a2d60af7a" translate="yes" xml:space="preserve">
          <source>This interface models a date-based amount of time in a calendar system. While most calendar systems use years, months and days, some do not. Therefore, this interface operates solely in terms of a set of supported units that are defined by the &lt;code&gt;Chronology&lt;/code&gt;. The set of supported units is fixed for a given chronology. The amount of a supported unit may be set to zero.</source>
          <target state="translated">이 인터페이스는 달력 시스템에서 날짜 기반 시간을 모델링합니다. 대부분의 달력 시스템은 년, 월, 일을 사용하지만 일부는 사용하지 않습니다. 따라서이 인터페이스는 &lt;code&gt;Chronology&lt;/code&gt; 에 의해 정의 된 일련의 지원되는 단위로만 작동합니다 . 지원되는 단위 집합은 주어진 연대기에 고정되어 있습니다. 지원되는 단위의 양은 0으로 설정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="20430dbeb8a3f24e7dcb2f50c94ffe179fd1f09c" translate="yes" xml:space="preserve">
          <source>This interface must be implemented by the ModelMBeans.</source>
          <target state="translated">이 인터페이스는 ModelMBean에 의해 구현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="467c2addae0db824ff5f7376404c724eeedbdfeb" translate="yes" xml:space="preserve">
          <source>This interface must be implemented by the ModelMBeans. An implementation of this interface must be shipped with every JMX Agent.</source>
          <target state="translated">이 인터페이스는 ModelMBean에 의해 구현되어야합니다. 이 인터페이스의 구현은 모든 JMX 에이전트와 함께 제공되어야합니다.</target>
        </trans-unit>
        <trans-unit id="83f733922c99b35c6e1680d0b8af6de818b2b7f8" translate="yes" xml:space="preserve">
          <source>This interface must be implemented with care to ensure other classes operate correctly. All implementations must be singletons - final, immutable and thread-safe. It is recommended to use an enum whenever possible.</source>
          <target state="translated">이 클래스는 다른 클래스가 올바르게 작동하도록주의해서 구현해야합니다. 모든 구현은 싱글 톤이어야합니다 (최종, 불변 및 스레드 안전). 가능할 때마다 열거 형을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5c6210646c87a287e29c46c2713efefd4d88577a" translate="yes" xml:space="preserve">
          <source>This interface must be implemented with care to ensure other classes operate correctly. All implementations that can be instantiated must be final, immutable and thread-safe. Implementations should be &lt;code&gt;Serializable&lt;/code&gt; where possible. An enum is as effective implementation choice.</source>
          <target state="translated">이 클래스는 다른 클래스가 올바르게 작동하도록주의해서 구현해야합니다. 인스턴스화 할 수있는 모든 구현은 최종적이고 변경 불가능하며 스레드로부터 안전해야합니다. 가능한 경우 구현은 &lt;code&gt;Serializable&lt;/code&gt; 가능 해야 합니다. 열거 형은 효과적인 구현 선택입니다.</target>
        </trans-unit>
        <trans-unit id="161c6b5d10da8965538c1afbf9b74b0e0e9c7f5b" translate="yes" xml:space="preserve">
          <source>This interface must be implemented with care to ensure other classes operate correctly. All implementations that can be instantiated must be final, immutable and thread-safe. It is recommended to use an enum where possible.</source>
          <target state="translated">이 클래스는 다른 클래스가 올바르게 작동하도록주의해서 구현해야합니다. 인스턴스화 할 수있는 모든 구현은 최종적이고 변경 불가능하며 스레드로부터 안전해야합니다. 가능하면 열거 형을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="257e1181e58f4a3969fcea60d7c3a9a00c744300" translate="yes" xml:space="preserve">
          <source>This interface must be implemented with care to ensure other classes operate correctly. All implementations that can be instantiated must be final, immutable and thread-safe. Subclasses should be Serializable wherever possible.</source>
          <target state="translated">이 클래스는 다른 클래스가 올바르게 작동하도록주의해서 구현해야합니다. 인스턴스화 할 수있는 모든 구현은 최종적이고 변경 불가능하며 스레드로부터 안전해야합니다. 서브 클래스는 가능하면 직렬화 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="30feaa795325e08aa69396dfbe32b3d5738df073" translate="yes" xml:space="preserve">
          <source>This interface permits a DOM implementer to supply one or more implementations, based upon requested features and versions, as specified in &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMFeatures&quot;&gt;DOM Features&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스를 사용하면 DOM 구현자가 &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMFeatures&quot;&gt;DOM 기능에&lt;/a&gt; 지정된대로 요청 된 기능 및 버전을 기반으로 하나 이상의 구현을 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bdc02281b7759043cddc213d3ff05b156371301d" translate="yes" xml:space="preserve">
          <source>This interface permits a DOM implementer to supply one or more implementations, based upon requested features and versions, as specified in &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMFeatures&quot;&gt;DOM Features&lt;/a&gt;. Each implemented &lt;code&gt;DOMImplementationSource&lt;/code&gt; object is listed in the binding-specific list of available sources so that its &lt;code&gt;DOMImplementation&lt;/code&gt; objects are made available.</source>
          <target state="translated">이 인터페이스를 사용하면 DOM 구현자가 &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMFeatures&quot;&gt;DOM 기능에&lt;/a&gt; 지정된대로 요청 된 기능 및 버전을 기반으로 하나 이상의 구현을 제공 할 수 있습니다 . 구현 된 각 &lt;code&gt;DOMImplementationSource&lt;/code&gt; 개체는 해당 &lt;code&gt;DOMImplementation&lt;/code&gt; 개체 를 사용할 수 있도록 사용 가능한 소스의 바인딩 별 목록에 나열 됩니다.</target>
        </trans-unit>
        <trans-unit id="d3275d98523e0d70d970c155710aa12c3b33dfb7" translate="yes" xml:space="preserve">
          <source>This interface permits a DOM implementer to supply one or more implementations, based upon requested features and versions, as specified in &lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMFeatures&quot;&gt;DOM Features&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스를 사용하면 DOM 구현자가 &lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMFeatures&quot;&gt;DOM 기능에&lt;/a&gt; 지정된대로 요청 된 기능 및 버전을 기반으로 하나 이상의 구현을 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9b9c30d2112d87ba95337dd97f0e816855f4352b" translate="yes" xml:space="preserve">
          <source>This interface permits a DOM implementer to supply one or more implementations, based upon requested features and versions, as specified in &lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMFeatures&quot;&gt;DOM Features&lt;/a&gt;. Each implemented &lt;code&gt;DOMImplementationSource&lt;/code&gt; object is listed in the binding-specific list of available sources so that its &lt;code&gt;DOMImplementation&lt;/code&gt; objects are made available.</source>
          <target state="translated">이 인터페이스를 사용하면 DOM 구현자가 &lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMFeatures&quot;&gt;DOM 기능에&lt;/a&gt; 지정된대로 요청 된 기능 및 버전을 기반으로 하나 이상의 구현을 제공 할 수 있습니다 . 구현 된 각 &lt;code&gt;DOMImplementationSource&lt;/code&gt; 개체는 해당 &lt;code&gt;DOMImplementation&lt;/code&gt; 개체 를 사용할 수 있도록 사용 가능한 소스의 바인딩 별 목록에 나열 됩니다.</target>
        </trans-unit>
        <trans-unit id="ae149d549d1d6a678a9441b933e37ca23db6f01a" translate="yes" xml:space="preserve">
          <source>This interface places no restrictions on the mutability of implementations, however immutability is strongly recommended.</source>
          <target state="translated">이 인터페이스는 구현의 변경 가능성에 제한을 두지 않지만 변경 불가능한 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="1a0c052e14d226a661651a2a4dc383219d642f56" translate="yes" xml:space="preserve">
          <source>This interface places no restrictions on the mutability of implementations, however immutability is strongly recommended. All implementations must be &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 구현의 변경 가능성에 제한을 두지 않지만 변경 불가능한 것이 좋습니다. 모든 구현은 &lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3360ba103f225c4444bb417ec7f3b95ea3d713bf" translate="yes" xml:space="preserve">
          <source>This interface provides error, warning and notice reporting.</source>
          <target state="translated">이 인터페이스는 오류, 경고 및 알림보고를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="159886760eff5b85c6d63f290c717553c149a431" translate="yes" xml:space="preserve">
          <source>This interface provides information about the operating environment on which the Java virtual machine is running. That might be a native operating system, a virtualized operating system environment, or a container-managed environment.</source>
          <target state="translated">이 인터페이스는 JVM (Java Virtual Machine)이 실행중인 운영 환경에 대한 정보를 제공합니다. 이는 기본 운영 체제, 가상화 된 운영 체제 환경 또는 컨테이너 관리 환경 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="855c8f167da7dae31a6decb8e15f6f6ca477b618" translate="yes" xml:space="preserve">
          <source>This interface provides support for LDAP v3 controls. At a high level, this support allows a user program to set request controls for LDAP operations that are executed in the course of the user program's invocation of &lt;code&gt;Context&lt;/code&gt;/&lt;code&gt;DirContext&lt;/code&gt; methods, and read response controls resulting from LDAP operations. At the implementation level, there are some details that developers of both the user program and service providers need to understand in order to correctly use request and response controls.</source>
          <target state="translated">이 인터페이스는 LDAP v3 컨트롤을 지원합니다. 높은 수준에서이 지원을 통해 사용자 프로그램은 사용자 프로그램의 &lt;code&gt;Context&lt;/code&gt; / &lt;code&gt;DirContext&lt;/code&gt; 메소드 호출 과정에서 실행되는 LDAP 조작에 대한 요청 제어를 설정하고 LDAP 조작으로 인한 응답 제어를 읽을 수 있습니다. 구현 레벨에는 요청 및 응답 제어를 올바르게 사용하기 위해 사용자 프로그램 및 서비스 제공자 모두의 개발자가 이해해야하는 세부 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3daf52a9c33b19e23b198490886f0a5f75ac1c9" translate="yes" xml:space="preserve">
          <source>This interface provides support for going between pixel coordinates and the text at a given pixel coordinate, for retrieving the letter, word, and sentence at, before, or after a given position in the text. This interface provides support for retrieving the attributes of the character at a given position in the text (font, font size, style, etc.), as well as getting the selected text (if any), the length of the text, and the location of the text caret.</source>
          <target state="translated">이 인터페이스는 텍스트의 지정된 위치에서 문자, 단어 및 문장을 검색하기 위해 지정된 픽셀 좌표에서 픽셀 좌표와 텍스트 사이를 이동할 수 있도록 지원합니다. 이 인터페이스는 텍스트의 지정된 위치 (글꼴, 글꼴 크기, 스타일 등)에서 문자 속성을 검색하고 선택한 텍스트 (있는 경우), 텍스트 길이 및 텍스트 캐럿의 위치.</target>
        </trans-unit>
        <trans-unit id="60bfac4795e2948ad50ab817c08224c9374da7f1" translate="yes" xml:space="preserve">
          <source>This interface provides two methods to remove interior elements, &lt;a href=&quot;#removeFirstOccurrence(java.lang.Object)&quot;&gt;&lt;code&gt;removeFirstOccurrence&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#removeLastOccurrence(java.lang.Object)&quot;&gt;&lt;code&gt;removeLastOccurrence&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 내부 요소를 제거하는 두 가지 메소드 인 &lt;a href=&quot;#removeFirstOccurrence(java.lang.Object)&quot;&gt; &lt;code&gt;removeFirstOccurrence&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#removeLastOccurrence(java.lang.Object)&quot;&gt; &lt;code&gt;removeLastOccurrence&lt;/code&gt; 를 제공&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="150a2094b96dcc568b26abb547cc19627766fad5" translate="yes" xml:space="preserve">
          <source>This interface provides two methods to remove interior elements, &lt;a href=&quot;deque#removeFirstOccurrence-java.lang.Object-&quot;&gt;&lt;code&gt;removeFirstOccurrence&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;deque#removeLastOccurrence-java.lang.Object-&quot;&gt;&lt;code&gt;removeLastOccurrence&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 내부 요소를 제거하는 두 가지 방법 인 &lt;a href=&quot;deque#removeFirstOccurrence-java.lang.Object-&quot;&gt; &lt;code&gt;removeFirstOccurrence&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;deque#removeLastOccurrence-java.lang.Object-&quot;&gt; &lt;code&gt;removeLastOccurrence&lt;/code&gt; 를 제공&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="9bdc0b24cf47ba19da2586695afe6b2f53bb9018" translate="yes" xml:space="preserve">
          <source>This interface receives general indications of decoding progress (via the &lt;code&gt;imageProgress&lt;/code&gt; and &lt;code&gt;thumbnailProgress&lt;/code&gt; methods), and events indicating when an entire image has been updated (via the &lt;code&gt;imageStarted&lt;/code&gt;, &lt;code&gt;imageComplete&lt;/code&gt;, &lt;code&gt;thumbnailStarted&lt;/code&gt; and &lt;code&gt;thumbnailComplete&lt;/code&gt; methods). Applications that wish to be informed of pixel updates as they happen (for example, during progressive decoding), should provide an &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;imageProgress&lt;/code&gt; 및 &lt;code&gt;thumbnailProgress&lt;/code&gt; 메소드 를 통해 디코딩 진행률에 대한 일반적인 표시 와 전체 이미지가 업데이트 된시기를 나타내는 이벤트 ( &lt;code&gt;imageStarted&lt;/code&gt; , &lt;code&gt;imageComplete&lt;/code&gt; , &lt;code&gt;thumbnailStarted&lt;/code&gt; 및 &lt;code&gt;thumbnailComplete&lt;/code&gt; 메소드를 통해)를 수신합니다. 점진적 디코딩과 같이 픽셀 업데이트가 발생할 때 알림을 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 응용 프로그램은 IIOReadUpdateListener를 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fae762c8e06f536ea2d22930fe23961c329e95fe" translate="yes" xml:space="preserve">
          <source>This interface replaces the (now deprecated) SAX 1.0 &lt;a href=&quot;parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt; interface. The XMLReader interface contains two important enhancements over the old Parser interface (as well as some minor ones):</source>
          <target state="translated">이 인터페이스는 현재 사용되지 않는 SAX 1.0 &lt;a href=&quot;parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt; 인터페이스를 대체합니다 . XMLReader 인터페이스에는 이전 파서 인터페이스 (및 일부 사소한 인터페이스)에 비해 두 가지 중요한 개선 사항이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e4b40f44a814ad1da687121dd1f49641ddd7940" translate="yes" xml:space="preserve">
          <source>This interface replaces the now-deprecated SAX1 &lt;a href=&quot;attributelist&quot;&gt;&lt;code&gt;AttributeList&lt;/code&gt;&lt;/a&gt; interface, which does not contain Namespace support. In addition to Namespace support, it adds the &lt;var&gt;getIndex&lt;/var&gt; methods (below).</source>
          <target state="translated">이 인터페이스는 네임 스페이스 지원을 포함하지 않는 현재 사용되지 않는 SAX1 &lt;a href=&quot;attributelist&quot;&gt; &lt;code&gt;AttributeList&lt;/code&gt; &lt;/a&gt; 인터페이스를 대체합니다 . 네임 스페이스 지원 외에도 &lt;var&gt;getIndex&lt;/var&gt; 메소드 (아래)를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="8090297ef8e1a2cc895b7031e9e15f142da28155" translate="yes" xml:space="preserve">
          <source>This interface represents a CSS view.</source>
          <target state="translated">이 인터페이스는 CSS보기를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="176bfb943f9f4086a9a21aca2256e4950874bfa9" translate="yes" xml:space="preserve">
          <source>This interface represents a CSS view. The &lt;code&gt;getComputedStyle&lt;/code&gt; method provides a read only access to the computed values of an element.</source>
          <target state="translated">이 인터페이스는 CSS보기를 나타냅니다. &lt;code&gt;getComputedStyle&lt;/code&gt; 의 방법은이 요소의 계산 값을 읽기 전용 액세스를 제공한다.</target>
        </trans-unit>
        <trans-unit id="45ba54db570d87231418ef99ab3cb9a3347ed69f" translate="yes" xml:space="preserve">
          <source>This interface represents a builder that creates initial context factories.</source>
          <target state="translated">이 인터페이스는 초기 컨텍스트 팩토리를 작성하는 빌더를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9981f2cb44da0b7c6a202762b0db784ddbcb0b8d" translate="yes" xml:space="preserve">
          <source>This interface represents a builder that creates object factories.</source>
          <target state="translated">이 인터페이스는 오브젝트 팩토리를 작성하는 빌더를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4a12945c443b939441f98eb8553e34ae5c4f3d22" translate="yes" xml:space="preserve">
          <source>This interface represents a collection of attributes.</source>
          <target state="translated">이 인터페이스는 속성 모음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b6469383ce35180e1663bc2483e3c70eb3b6a31d" translate="yes" xml:space="preserve">
          <source>This interface represents a context in which you can perform operations with LDAPv3-style controls and perform LDAPv3-style extended operations.</source>
          <target state="translated">이 인터페이스는 LDAPv3 스타일 컨트롤을 사용하여 작업을 수행하고 LDAPv3 스타일 확장 작업을 수행 할 수있는 컨텍스트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="343e2c7a84b3d9546377b22bb3f56a9c6b2b9e1e" translate="yes" xml:space="preserve">
          <source>This interface represents a context in which you can perform operations with LDAPv3-style controls and perform LDAPv3-style extended operations. For applications that do not require such controls or extended operations, the more generic &lt;code&gt;javax.naming.directory.DirContext&lt;/code&gt; should be used instead.</source>
          <target state="translated">이 인터페이스는 LDAPv3 스타일 컨트롤을 사용하여 작업을 수행하고 LDAPv3 스타일 확장 작업을 수행 할 수있는 컨텍스트를 나타냅니다. 이러한 제어 또는 확장 조작이 필요없는 애플리케이션의 경우보다 일반적인 &lt;code&gt;javax.naming.directory.DirContext&lt;/code&gt; 를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="0c134afb96830094c6baf126fe982ab4aba38e04" translate="yes" xml:space="preserve">
          <source>This interface represents a document with a CSS view.</source>
          <target state="translated">이 인터페이스는 CSS보기가있는 문서를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="35a0b6e509abc49766ccce52911b51cf01912d12" translate="yes" xml:space="preserve">
          <source>This interface represents a factory for creating an object given an object and attributes about the object.</source>
          <target state="translated">이 인터페이스는 객체와 객체에 대한 속성이 주어진 객체를 만들기위한 팩토리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f489703502d879077c8caab3c1f6521870884c9b" translate="yes" xml:space="preserve">
          <source>This interface represents a factory for creating an object.</source>
          <target state="translated">이 인터페이스는 객체를 만들기위한 팩토리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="af7968f0c302bb3322b41669df7a2f1e3b215f0a" translate="yes" xml:space="preserve">
          <source>This interface represents a factory for obtaining the state of an object and corresponding attributes for binding.</source>
          <target state="translated">이 인터페이스는 객체의 상태와 바인딩을위한 해당 속성을 얻기위한 팩토리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9f158d213f97878aa587553be1c1f97f9f28dce3" translate="yes" xml:space="preserve">
          <source>This interface represents a factory for obtaining the state of an object for binding.</source>
          <target state="translated">이 인터페이스는 바인딩 할 객체의 상태를 얻기위한 팩토리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="95885d4605a3fbf5462145dedc66ad28c73b6dd3" translate="yes" xml:space="preserve">
          <source>This interface represents a factory that creates an initial context.</source>
          <target state="translated">이 인터페이스는 초기 컨텍스트를 생성하는 팩토리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9488c36305cbc070f0b53e059c371e79a87f4ec5" translate="yes" xml:space="preserve">
          <source>This interface represents a guard, which is an object that is used to protect access to another object.</source>
          <target state="translated">이 인터페이스는 다른 객체에 대한 액세스를 보호하는 데 사용되는 객체 인 보호를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8080ce89fe1a0374a5083ac92cf91145427d0845" translate="yes" xml:space="preserve">
          <source>This interface represents a known entity, either parsed or unparsed, in an XML document.</source>
          <target state="translated">이 인터페이스는 XML 문서에서 구문 분석되었거나 구문 분석되지 않은 알려진 엔티티를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="299307c035b3d613efd1cdd5d79cefde03666b01" translate="yes" xml:space="preserve">
          <source>This interface represents a known entity, either parsed or unparsed, in an XML document. Note that this models the entity itself &lt;em&gt;not&lt;/em&gt; the entity declaration.</source>
          <target state="translated">이 인터페이스는 XML 문서에서 구문 분석되거나 구문 분석되지 않은 알려진 엔티티를 나타냅니다. 이것은 엔티티 선언이 &lt;em&gt;아닌&lt;/em&gt; 엔티티 자체를 모델링합니다 .</target>
        </trans-unit>
        <trans-unit id="6a5c286b392c5a19e914383a30c12a03f9b53fb5" translate="yes" xml:space="preserve">
          <source>This interface represents a load event object that signals the completion of a document load.</source>
          <target state="translated">이 인터페이스는 문서로드 완료를 알리는로드 이벤트 객체를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ca3f4948c28745b4653a2c61d572c27adeef794f" translate="yes" xml:space="preserve">
          <source>This interface represents a naming context, which consists of a set of name-to-object bindings.</source>
          <target state="translated">이 인터페이스는 이름-객체 바인딩 세트로 구성된 이름 지정 컨텍스트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6e3be4da16233be9331839ab8890976e43f0dce1" translate="yes" xml:space="preserve">
          <source>This interface represents a naming context, which consists of a set of name-to-object bindings. It contains methods for examining and updating these bindings.</source>
          <target state="translated">이 인터페이스는 이름-객체 바인딩 세트로 구성된 이름 지정 컨텍스트를 나타냅니다. 이러한 바인딩을 검사하고 업데이트하는 방법이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="00a7397abda80babb1003cea82a23430e9f18a67" translate="yes" xml:space="preserve">
          <source>This interface represents a notation declared in the DTD.</source>
          <target state="translated">이 인터페이스는 DTD에 선언 된 표기법을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3d8fda24a8c17675c6632dd16d5b8f4bc696cc7c" translate="yes" xml:space="preserve">
          <source>This interface represents a notation declared in the DTD. A notation either declares, by name, the format of an unparsed entity (see &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#Notations&quot;&gt;section 4.7&lt;/a&gt; of the XML 1.0 specification [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt;]), or is used for formal declaration of processing instruction targets (see &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#sec-pi&quot;&gt;section 2.6&lt;/a&gt; of the XML 1.0 specification [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt;]). The &lt;code&gt;nodeName&lt;/code&gt; attribute inherited from &lt;code&gt;Node&lt;/code&gt; is set to the declared name of the notation.</source>
          <target state="translated">이 인터페이스는 DTD에 선언 된 표기법을 나타냅니다. 표기법은 파싱되지 않은 엔티티의 형식을 이름으로 선언하거나 ( XML 1.0 사양 [ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt; ] 의 &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#Notations&quot;&gt;섹션 4.7&lt;/a&gt; 참조 ) 또는 처리 명령 대상의 형식적인 선언에 사용됩니다 ( XML 1.0 사양의 &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#sec-pi&quot;&gt;섹션 2.6&lt;/a&gt; 참조 [ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt; ]). &lt;code&gt;nodeName&lt;/code&gt; 에서 상속 속성 &lt;code&gt;Node&lt;/code&gt; 표기법의 선언 된 이름으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="686af9a510742d922abcb5c5672a97162369ccb4" translate="yes" xml:space="preserve">
          <source>This interface represents a notation declared in the DTD. A notation either declares, by name, the format of an unparsed entity (see &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#Notations&quot;&gt;section 4.7&lt;/a&gt; of the XML 1.0 specification [&lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt;]), or is used for formal declaration of processing instruction targets (see &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#sec-pi&quot;&gt;section 2.6&lt;/a&gt; of the XML 1.0 specification [&lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt;]). The &lt;code&gt;nodeName&lt;/code&gt; attribute inherited from &lt;code&gt;Node&lt;/code&gt; is set to the declared name of the notation.</source>
          <target state="translated">이 인터페이스는 DTD에 선언 된 표기법을 나타냅니다. 표기법은 파싱되지 않은 엔티티의 형식을 이름으로 선언하거나 ( XML 1.0 사양 [ &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt; ] 의 &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#Notations&quot;&gt;섹션 4.7&lt;/a&gt; 참조 ) 또는 처리 명령 대상의 형식적인 선언에 사용됩니다 ( XML 1.0 사양의 &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#sec-pi&quot;&gt;섹션 2.6&lt;/a&gt; 참조 [ &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt; ]). &lt;code&gt;nodeName&lt;/code&gt; 에서 상속 속성 &lt;code&gt;Node&lt;/code&gt; 표기법의 선언 된 이름으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="e25015956405bfa4a664c36fff9af774f56c4387" translate="yes" xml:space="preserve">
          <source>This interface represents a permission, such as that used to grant a particular type of access to a resource.</source>
          <target state="translated">이 인터페이스는 리소스에 특정 유형의 액세스 권한을 부여하는 데 사용되는 권한과 같은 권한을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a5815f8bbbcd197884ae382a6e0a8ba8baee951e" translate="yes" xml:space="preserve">
          <source>This interface represents a print job that can print a specified document with a set of job attributes.</source>
          <target state="translated">이 인터페이스는 일련의 작업 속성으로 지정된 문서를 인쇄 할 수있는 인쇄 작업을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="46b4e603c1c01481644b8f7ff7680232271fc858" translate="yes" xml:space="preserve">
          <source>This interface represents a print job that can print a specified document with a set of job attributes. An object implementing this interface is obtained from a print service.</source>
          <target state="translated">이 인터페이스는 일련의 작업 속성으로 지정된 문서를 인쇄 할 수있는 인쇄 작업을 나타냅니다. 이 인터페이스를 구현하는 객체는 인쇄 서비스에서 얻습니다.</target>
        </trans-unit>
        <trans-unit id="d7d7a944806072cdaae55caf69b12f69f828bf28" translate="yes" xml:space="preserve">
          <source>This interface represents a progress event object that notifies the application about progress as a document is parsed.</source>
          <target state="translated">이 인터페이스는 문서가 구문 분석 될 때 진행 상황을 애플리케이션에 알리는 진행 이벤트 개체를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9ad725bba65d6c25276d01dacecb1cc0958a9451" translate="yes" xml:space="preserve">
          <source>This interface represents a progress event object that notifies the application about progress as a document is parsed. It extends the &lt;code&gt;Event&lt;/code&gt; interface defined in [&lt;a href=&quot;http://www.w3.org/TR/2003/NOTE-DOM-Level-3-Events-20031107&quot;&gt;DOM Level 3 Events&lt;/a&gt;] .</source>
          <target state="translated">이 인터페이스는 문서가 구문 분석 될 때 진행 상황을 애플리케이션에 알리는 진행 이벤트 개체를 나타냅니다. [ &lt;a href=&quot;http://www.w3.org/TR/2003/NOTE-DOM-Level-3-Events-20031107&quot;&gt;DOM Level 3 Events&lt;/a&gt; ]에 정의 된 &lt;code&gt;Event&lt;/code&gt; 인터페이스를 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="2c521b7b750e073c217cae26a72b33fcfb596305" translate="yes" xml:space="preserve">
          <source>This interface represents a progress event object that notifies the application about progress as a document is parsed. It extends the &lt;code&gt;Event&lt;/code&gt; interface defined in [&lt;a href=&quot;https://www.w3.org/TR/2003/NOTE-DOM-Level-3-Events-20031107&quot;&gt;DOM Level 3 Events&lt;/a&gt;] .</source>
          <target state="translated">이 인터페이스는 문서가 구문 분석 될 때 진행 상황을 애플리케이션에 알리는 진행 이벤트 객체를 나타냅니다. [ &lt;a href=&quot;https://www.w3.org/TR/2003/NOTE-DOM-Level-3-Events-20031107&quot;&gt;DOM Level 3 Events&lt;/a&gt; ]에 정의 된 &lt;code&gt;Event&lt;/code&gt; 인터페이스를 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="c23738f1679f80ab02137c29819021b5d4ae15a8" translate="yes" xml:space="preserve">
          <source>This interface represents a way to talk to an MBean server, whether local or remote.</source>
          <target state="translated">이 인터페이스는 로컬이든 원격이든 MBean 서버와 통신하는 방법을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f54940313160cd15157e1df851c1e226d5033c69" translate="yes" xml:space="preserve">
          <source>This interface represents a way to talk to an MBean server, whether local or remote. The &lt;a href=&quot;mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt; interface, representing a local MBean server, extends this interface.</source>
          <target state="translated">이 인터페이스는 로컬이든 원격이든 MBean 서버와 통신하는 방법을 나타냅니다. &lt;a href=&quot;mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; &lt;/a&gt; 로컬의 MBean 서버를 나타내는 인터페이스는,이 인터페이스를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="1085a2f2d41e08b08eea97d0daf626dd7290441b" translate="yes" xml:space="preserve">
          <source>This interface represents an &quot;intermediate context&quot; for name resolution.</source>
          <target state="translated">이 인터페이스는 이름 확인을위한 &quot;중간 컨텍스트&quot;를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0f14834a0b07c4dbbfad127b5d67997e6eed4945" translate="yes" xml:space="preserve">
          <source>This interface represents an LDAP extended operation response as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의 된 LDAP 확장 작업 응답을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="30f38881a73972294b81974851e10a3687adfc01" translate="yes" xml:space="preserve">
          <source>This interface represents an LDAP extended operation response as defined in &lt;a href=&quot;https://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의 된 LDAP 확장 작업 응답을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b2dec6542b2ef6f3cdc9e8c71ead74cbdc8472c9" translate="yes" xml:space="preserve">
          <source>This interface represents an LDAPv3 control as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의 된 LDAPv3 컨트롤을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="64d94c3ed6af04d3a82f49a8484f212ab52e3607" translate="yes" xml:space="preserve">
          <source>This interface represents an LDAPv3 control as defined in &lt;a href=&quot;https://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의 된 LDAPv3 컨트롤을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="5809f12fcfdf6763082ca53b6b8fe07442cfd16d" translate="yes" xml:space="preserve">
          <source>This interface represents an LDAPv3 extended operation request as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의 된 LDAPv3 확장 작업 요청을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="642f48325c0ec4a2e22ba7bb97a50729e959d44c" translate="yes" xml:space="preserve">
          <source>This interface represents an LDAPv3 extended operation request as defined in &lt;a href=&quot;https://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의 된 LDAPv3 확장 작업 요청을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="06abcbfc7e0a66ed6d42262a67289542df0460aa" translate="yes" xml:space="preserve">
          <source>This interface represents an X.509 extension.</source>
          <target state="translated">이 인터페이스는 X.509 확장을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="72ad3cf498a93c212959646d1ca238f33e48469a" translate="yes" xml:space="preserve">
          <source>This interface represents an attribute associated with a named object.</source>
          <target state="translated">이 인터페이스는 명명 된 객체와 관련된 속성을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5519d222fafee9d391a214d13424d1104d477350" translate="yes" xml:space="preserve">
          <source>This interface represents an elliptic curve (EC) finite field.</source>
          <target state="translated">이 인터페이스는 EC (Elliptic Curve) 유한 필드를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="391bb9ec03cf1ede13d55fb3e34bb5db0675709b" translate="yes" xml:space="preserve">
          <source>This interface represents an elliptic curve (EC) finite field. All specialized EC fields must implements this interface.</source>
          <target state="translated">이 인터페이스는 EC (Elliptic Curve) 유한 필드를 나타냅니다. 모든 전문화 된 EC 필드는이 인터페이스를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="b732036f8922125c4afcb4f2839c84a750c16332" translate="yes" xml:space="preserve">
          <source>This interface represents an input source for data.</source>
          <target state="translated">이 인터페이스는 데이터의 입력 소스를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3d2c26bbc9c76c834b5243ca2d89f7ac5a10a988" translate="yes" xml:space="preserve">
          <source>This interface represents an output destination for data.</source>
          <target state="translated">이 인터페이스는 데이터의 출력 대상을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0ec863793f9f13bfac31f1708559c62660a761a4" translate="yes" xml:space="preserve">
          <source>This interface represents an unsolicited notification as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의 된 요청하지 않은 알림을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="3fd81adae4af65beb3ebd88b5b33ab295c1ceb5a" translate="yes" xml:space="preserve">
          <source>This interface represents an unsolicited notification as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;. An unsolicited notification is sent by the LDAP server to the LDAP client without any provocation from the client. Its format is that of an extended response (&lt;code&gt;ExtendedResponse&lt;/code&gt;).</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의 된 요청하지 않은 알림을 나타냅니다 . 요청하지 않은 알림은 클라이언트의 도발없이 LDAP 서버에서 LDAP 클라이언트로 전송됩니다. 형식은 확장 응답 ( &lt;code&gt;ExtendedResponse&lt;/code&gt; ) 형식입니다 .</target>
        </trans-unit>
        <trans-unit id="3749022e18a6651ab410d8452ac9d0e3cf830b4d" translate="yes" xml:space="preserve">
          <source>This interface represents an unsolicited notification as defined in &lt;a href=&quot;https://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의 된 원치 않는 알림을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="dcf6201356f1f25c968313431dc842ec4936abc4" translate="yes" xml:space="preserve">
          <source>This interface represents an unsolicited notification as defined in &lt;a href=&quot;https://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;. An unsolicited notification is sent by the LDAP server to the LDAP client without any provocation from the client. Its format is that of an extended response (&lt;code&gt;ExtendedResponse&lt;/code&gt;).</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의 된 원치 않는 알림을 나타냅니다 . 클라이언트의 도발없이 LDAP 서버가 요청하지 않은 알림을 LDAP 클라이언트로 보냅니다. 그 형식은 확장 응답 ( &lt;code&gt;ExtendedResponse&lt;/code&gt; ) 의 형식입니다 .</target>
        </trans-unit>
        <trans-unit id="77460c18f87eccacb2253739ad6159c425c1219e" translate="yes" xml:space="preserve">
          <source>This interface represents the abstract notion of a principal, which can be used to represent any entity, such as an individual, a corporation, and a login id.</source>
          <target state="translated">이 인터페이스는 주체의 추상 개념을 나타내며 개인, 회사 및 로그인 ID와 같은 엔티티를 나타내는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e6a35e4e125cc964a75b428f7935c3fbb9c4182" translate="yes" xml:space="preserve">
          <source>This interface represents the current state of the selection for any of the components that display a list of values with stable indices.</source>
          <target state="translated">이 인터페이스는 안정적인 인덱스가있는 값 목록을 표시하는 구성 요소에 대한 현재 선택 상태를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3e8397b2b7e69e22fc5cf08bb2d987cb287183c4" translate="yes" xml:space="preserve">
          <source>This interface represents the current state of the selection for any of the components that display a list of values with stable indices. The selection is modeled as a set of intervals, each interval represents a contiguous range of selected list elements. The methods for modifying the set of selected intervals all take a pair of indices, index0 and index1, that represent a closed interval, i.e. the interval includes both index0 and index1.</source>
          <target state="translated">이 인터페이스는 안정적인 인덱스가있는 값 목록을 표시하는 구성 요소에 대한 현재 선택 상태를 나타냅니다. 선택은 일련의 간격으로 모델링되며 각 간격은 선택된 목록 요소의 연속 범위를 나타냅니다. 선택된 간격 세트를 수정하는 방법은 모두 닫힌 간격을 나타내는 인덱스 쌍 index0 및 index1을 사용합니다. 즉 간격에는 index0과 index1이 모두 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="d778f56ecffec7958ab61b20e73fb6718bccb8a2" translate="yes" xml:space="preserve">
          <source>This interface represents the current state of the selection for the tree component.</source>
          <target state="translated">이 인터페이스는 트리 구성 요소 선택의 현재 상태를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e886e4b00a0f9d75f3ad4d7056b4cd0d80f3f24e" translate="yes" xml:space="preserve">
          <source>This interface represents the current state of the selection for the tree component. For information and examples of using tree selection models, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">이 인터페이스는 트리 구성 요소 선택의 현재 상태를 나타냅니다. 트리 선택 모델 사용에 대한 정보와 예제는 &lt;em&gt;Java Tutorial의 &lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; 를 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd08091c8cf862ba48bea910515168c9a95f3394" translate="yes" xml:space="preserve">
          <source>This interface represents the current state of the selection for the tree component. For information and examples of using tree selection models, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">이 인터페이스는 트리 구성 요소 선택의 현재 상태를 나타냅니다. 트리 선택 모델 사용에 대한 정보와 예제는 &lt;em&gt;Java Tutorial의 &lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; 를 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f074c7050308c91da0899bec7954a86e6d53c77c" translate="yes" xml:space="preserve">
          <source>This interface serves as a</source>
          <target state="translated">이 인터페이스는</target>
        </trans-unit>
        <trans-unit id="57884505de8217da2d49cc4fa0f4319801c9e57d" translate="yes" xml:space="preserve">
          <source>This interface should be used by new code in preference to the &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt; 인터페이스 보다 새로운 코드에서 사용되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="c38946aaa3a7c28236fd93c356f6428eb500bd2f" translate="yes" xml:space="preserve">
          <source>This interface specifies constraints for cryptographic algorithms, keys (key sizes), and other algorithm parameters.</source>
          <target state="translated">이 인터페이스는 암호화 알고리즘, 키 (키 크기) 및 기타 알고리즘 매개 변수에 대한 제약 조건을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f948ece1dccdf8f06f5ea96906aa43ffd673d4f0" translate="yes" xml:space="preserve">
          <source>This interface specifies the functionality that must provided to implement a pluggable JShell execution engine.</source>
          <target state="translated">이 인터페이스는 플러그 가능한 JShell 실행 엔진을 구현하기 위해 제공해야하는 기능을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a7e222414a3ec580b29db0cf22841932c4745395" translate="yes" xml:space="preserve">
          <source>This interface specifies the loading specific subset of &lt;a href=&quot;../spi/executioncontrol&quot;&gt;&lt;code&gt;ExecutionControl&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;../spi/executioncontrol&quot;&gt; &lt;code&gt;ExecutionControl&lt;/code&gt; &lt;/a&gt; 의 로딩 특정 하위 집합을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="99aba2677ead2544ac9d3cef43f335b062d5343b" translate="yes" xml:space="preserve">
          <source>This interface specifies the loading specific subset of &lt;a href=&quot;../spi/executioncontrol&quot;&gt;&lt;code&gt;ExecutionControl&lt;/code&gt;&lt;/a&gt;. For use in encapsulating the &lt;a href=&quot;../../../../java.base/java/lang/classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">이 인터페이스는 &lt;a href=&quot;../spi/executioncontrol&quot;&gt; &lt;code&gt;ExecutionControl&lt;/code&gt; &lt;/a&gt; 의 로딩 특정 하위 집합을 지정합니다 . &lt;a href=&quot;../../../../java.base/java/lang/classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; &lt;/a&gt; 구현 을 캡슐화하는 데 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="650f3d97151f406b5422f564f6e92afe5665adcb" translate="yes" xml:space="preserve">
          <source>This interface supports the creation of new files by an annotation processor.</source>
          <target state="translated">이 인터페이스는 주석 처리기에서 새 파일 작성을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="d9372b31cfb9e3eede80561030c13c09188c7530" translate="yes" xml:space="preserve">
          <source>This interface supports the creation of new files by an annotation processor. Files created in this way will be known to the annotation processing tool implementing this interface, better enabling the tool to manage them. Source and class files so created will be &lt;a href=&quot;roundenvironment#getRootElements()&quot;&gt;considered for processing&lt;/a&gt; by the tool in a subsequent &lt;a href=&quot;roundenvironment&quot;&gt;round of processing&lt;/a&gt; after the &lt;code&gt;close&lt;/code&gt; method has been called on the &lt;code&gt;Writer&lt;/code&gt; or &lt;code&gt;
 OutputStream&lt;/code&gt; used to write the contents of the file. Three kinds of files are distinguished: source files, class files, and auxiliary resource files.</source>
          <target state="translated">이 인터페이스는 주석 프로세서에 의한 새 파일 생성을 지원합니다. 이러한 방식으로 생성 된 파일은이 인터페이스를 구현하는 주석 처리 도구에 알려 지므로 도구에서 파일을 더 잘 관리 할 수 ​​있습니다. 이렇게 생성 된 소스 및 클래스 파일 은 파일의 내용을 작성하는 데 사용 된 &lt;code&gt;Writer&lt;/code&gt; 또는 &lt;code&gt; OutputStream&lt;/code&gt; 에서 &lt;code&gt;close&lt;/code&gt; 메서드가 호출 된 후 후속 &lt;a href=&quot;roundenvironment&quot;&gt;처리 라운드&lt;/a&gt; 에서 도구에서 &lt;a href=&quot;roundenvironment#getRootElements()&quot;&gt;처리&lt;/a&gt; 하도록 고려 됩니다. 소스 파일, 클래스 파일 및 보조 리소스 파일의 세 가지 종류의 파일이 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="a3310965cb28e603a3dd2b4aac33095619c6f858" translate="yes" xml:space="preserve">
          <source>This interface supports the creation of new files by an annotation processor. Files created in this way will be known to the annotation processing tool implementing this interface, better enabling the tool to manage them. Source and class files so created will be &lt;a href=&quot;roundenvironment#getRootElements--&quot;&gt;considered for processing&lt;/a&gt; by the tool in a subsequent &lt;a href=&quot;roundenvironment&quot;&gt;round of processing&lt;/a&gt; after the &lt;code&gt;close&lt;/code&gt; method has been called on the &lt;code&gt;Writer&lt;/code&gt; or &lt;code&gt;OutputStream&lt;/code&gt; used to write the contents of the file. Three kinds of files are distinguished: source files, class files, and auxiliary resource files.</source>
          <target state="translated">이 인터페이스는 주석 처리기에서 새 파일 작성을 지원합니다. 이러한 방식으로 생성 된 파일은이 인터페이스를 구현하는 주석 처리 도구에 알려져 도구를보다 효과적으로 관리 할 수 ​​있습니다. 이렇게 작성된 소스 및 클래스 파일 은 파일의 내용을 작성하는 데 사용 된 &lt;code&gt;Writer&lt;/code&gt; 또는 &lt;code&gt;OutputStream&lt;/code&gt; 에서 &lt;code&gt;close&lt;/code&gt; 메소드가 호출 된 후 후속 &lt;a href=&quot;roundenvironment&quot;&gt;처리 라운드&lt;/a&gt; 에서 도구에 의해 &lt;a href=&quot;roundenvironment#getRootElements--&quot;&gt;처리&lt;/a&gt; 되는 것으로 간주 됩니다. 소스 파일, 클래스 파일 및 보조 자원 파일의 세 가지 파일이 구별됩니다.</target>
        </trans-unit>
        <trans-unit id="b0d2937feacc801c2cb8a56d6b2595dcdc3e5efb" translate="yes" xml:space="preserve">
          <source>This interface takes the place of the &lt;code&gt;Dictionary&lt;/code&gt; class, which was a totally abstract class rather than an interface.</source>
          <target state="translated">이 인터페이스는 인터페이스가 아닌 완전히 추상적 인 클래스 인 &lt;code&gt;Dictionary&lt;/code&gt; 클래스를 대신합니다.</target>
        </trans-unit>
        <trans-unit id="ab330947150f79931853fa1d2f673c419a8550db" translate="yes" xml:space="preserve">
          <source>This interface, derived from the &lt;code&gt;ResultSetMetaData&lt;/code&gt; interface, provides information about the columns in a &lt;code&gt;RowSet&lt;/code&gt; object. An application can use &lt;code&gt;RowSetMetaData&lt;/code&gt; methods to find out how many columns the rowset contains and what kind of data each column can contain.</source>
          <target state="translated">&lt;code&gt;ResultSetMetaData&lt;/code&gt; 인터페이스 에서 파생 된이 인터페이스 는 &lt;code&gt;RowSet&lt;/code&gt; 오브젝트 의 열에 대한 정보를 제공 합니다. 응용 프로그램은 &lt;code&gt;RowSetMetaData&lt;/code&gt; 메서드를 사용 하여 행 집합에 포함 된 열 수와 각 열에 포함 할 수있는 데이터의 종류를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7844f198450bb3e5c04046c372a7eb04761c5ff9" translate="yes" xml:space="preserve">
          <source>This interface, in addition to the mapped form, provides the context and position mapping information.</source>
          <target state="translated">이 인터페이스는 매핑 된 양식 외에도 컨텍스트 및 위치 매핑 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="dc627d82e33b95e53d21ca56130d14934235a2ce" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt;&lt;code&gt;concurrent&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt;&lt;code&gt;unordered&lt;/code&gt;&lt;/a&gt; Collector.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt; &lt;code&gt;concurrent&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt; &lt;code&gt;unordered&lt;/code&gt; &lt;/a&gt; 콜렉터.</target>
        </trans-unit>
        <trans-unit id="0de1426912eb5cb4448d40b3ead8866973542807" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html&quot;&gt;JavaBeans&lt;/a&gt; bound property.</source>
          <target state="translated">이것은 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html&quot;&gt;JavaBeans&lt;/a&gt; 바인딩 된 속성입니다.</target>
        </trans-unit>
        <trans-unit id="6a22ee1b64e0008e216b9a3d9eb34590b3b1d748" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Duration&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;Duration&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="7d3ba0666edaf82364d49a5a04f4dbd09f1fcaec" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;HijrahDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;HijrahDate&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예상치 못한 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="cc188dca2084ddcc3b3d0edec9c5b07b61a9f7f9" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Instant&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;Instant&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="0040380a9b2a58fb3afc6ded0392bbfc4610f782" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;JapaneseDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;JapaneseDate&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예상치 못한 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="dcd8b263a0537c559e84ce20de6001f497bc20c6" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;LocalDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;LocalDate&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="4799c74b85c1e75f951d3db5f3a4706a8143ad21" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;LocalDateTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;LocalDateTime&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1e8e76d877f2c83daed32a7f3997c7aba88cbc10" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;LocalTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;LocalTime&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예상치 못한 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="4f674684281e0f6a5868f7fafdd3647b199b4fe9" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;MinguoDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;MinguoDate&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예상치 못한 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="7003189279dd6a4070ec8ae3d9d99ebb8a20be52" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;MonthDay&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;MonthDay&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예상치 못한 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="6279ede7cfd29a98d9558f02169f9e70b89318ae" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OffsetDateTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;OffsetDateTime&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="19dc8350b87a0f5a3998fb05beb8fef7e3bc19f3" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OffsetTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;OffsetTime&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="683e0a6d232eea430f6f7f68bb53825c684bc494" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Optional&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;Optional&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예상치 못한 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="4345976ec65791fca643bff4a0e21ab18d3378b4" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OptionalDouble&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;OptionalDouble&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="eb6d66d466df69538f12c469e1eeae6b7c53743a" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OptionalInt&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;OptionalInt&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예상치 못한 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="56fe0d1ef564a1c4a9a90a2c4884bd8fa1221806" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OptionalLong&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;OptionalLong&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예상치 못한 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="a943130a612e6ec6a1c63a662f1fbc2ae37e94d0" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Period&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;Period&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예상치 못한 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="0f943272b68022f9e2cbb2deb60e71204ad26671" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예상치 못한 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a8d35c78583f2f231461c4a08423924dd109be75" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Version&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;Version&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예상치 못한 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="053523f3460aa968cf499925a2a044d00f45e020" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Year&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;Year&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="24c8ee1b9f38030fedd15ef6d031e7e74d359bdf" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;YearMonth&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;YearMonth&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a2d148d41abdf564a4be19c0cc5a381486de8d44" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ZoneId&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;ZoneId&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="cfb3efd8ae2dd7adbc260e9e0f3dffc6f609eeb9" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ZoneOffset&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;ZoneOffset&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예상치 못한 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="bca5753a06cd26400148e77b164531d6937ae369" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ZonedDateTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;ZonedDateTime&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예상치 못한 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="37fd6437830ce8c4d64ff48874765a9fb4b7b37a" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Duration&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;Duration&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="f61c79dcfe520aecbbdb5be848e8b25810e2a6f0" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;GroupLayout&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;GroupLayout&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="eaec77b3af6edfe5be4178e1f51f0cc498618209" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;HijrahDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;HijrahDate&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예측할 수없는 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="75fd3c075f9d2060cc64813e8a259e891c61b423" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Instant&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;Instant&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="f0a354917f46a2755e86a956a9f9c836cd3c0b94" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;JapaneseDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;JapaneseDate&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="dfae60d9c69a03b80a29fd435f8e406eacf7775e" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;LocalDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;LocalDate&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1406872eb30db3fdf77a323a2e3b5f5407613e98" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;LocalDateTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;LocalDateTime&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="399071ccd56fedb591f6f4087f998ace5faf123c" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;LocalTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;LocalTime&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="d15ee6385be53252b4de7ff0835c72fba5922487" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;MinguoDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;MinguoDate&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="899810ca8ea257b80ab69645858297ee25c12468" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;MonthDay&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;MonthDay&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="2ca07219d73e266ec85b3acfab85ae413abbad83" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OffsetDateTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;OffsetDateTime&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="7e3b0d330d4a67a2769047a40d967ee01ca8e136" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OffsetTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;OffsetTime&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="40cc03fa2e3364302712b4f49372c5631c21cc18" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Optional&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;Optional&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="3ce2dceb13255ce091296de538db185291b41577" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OptionalDouble&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;OptionalDouble&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="474072325f2a6447af327a6c17f31914e7e0e560" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OptionalInt&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;OptionalInt&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="d16ecc385e026c99014304378b1bb77cc98aea94" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OptionalLong&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;OptionalLong&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="e5d201a2e6c51c4d7ae0e7193635c350cbf5a1cc" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Period&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;Period&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="69f7e84ada0f1111d9abcaa02ed41ec3343f4458" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;SequenceLayout&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;SequenceLayout&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="7a405425a086b1aef7b398c46b96a9193e2a6466" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="4e84f9ae82a78a3ad8c21b492c429833f5a4723f" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ValueLayout&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;ValueLayout&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a96836939bc3167a87a779a199ab703f8c5138cd" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Version&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;Version&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="28f8644593228e5b6bb97eca6edd5c47216d7c1d" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Year&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;Year&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="41992dae573526084372ef04d11ecc97c20966a2" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;YearMonth&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;YearMonth&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="76292588eb3e7500d76a6cd7e869725e7804e4ff" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ZoneId&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;ZoneId&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="0d326397426f6aa7c887054263b3448d9c1bc369" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ZoneOffset&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;ZoneOffset&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1d76613aba48ea1c6f9a4df89fe0c28d25a399e0" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt; class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ZonedDateTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;가치 기반&lt;/a&gt; 클래스입니다. &lt;code&gt;ZonedDateTime&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="606d8267120b5aa514f477a5a48b7e426ef0f1de" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html&quot;&gt;JavaBeans&lt;/a&gt; bound property.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html&quot;&gt;JavaBeans&lt;/a&gt; 바인딩 된 속성입니다.</target>
        </trans-unit>
        <trans-unit id="26303e4ad52e0840f44c4af10c00b1ebbd0aea1e" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#accept(T)&quot;&gt;&lt;code&gt;accept(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;package-summary&quot;&gt;기능 인터페이스&lt;/a&gt; 그 기능 방법 &lt;a href=&quot;#accept(T)&quot;&gt; &lt;code&gt;accept(Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b2ab3d7389114abdd62ae196fb02991ae685a020" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#accept(T,U)&quot;&gt;&lt;code&gt;accept(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;package-summary&quot;&gt;기능 인터페이스&lt;/a&gt; 그 기능 방법 &lt;a href=&quot;#accept(T,U)&quot;&gt; &lt;code&gt;accept(Object, Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c3c8ef2a3f492b0fbbd1d73197480d90fa21e010" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#accept(T,double)&quot;&gt;&lt;code&gt;accept(Object, double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;package-summary&quot;&gt;기능 인터페이스&lt;/a&gt; 그 기능 방법 &lt;a href=&quot;#accept(T,double)&quot;&gt; &lt;code&gt;accept(Object, double)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="29e70ae6159a4e44008db0c11b315f5f9fada2e3" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#accept(T,int)&quot;&gt;&lt;code&gt;accept(Object, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 기능적 메소드가 &lt;a href=&quot;#accept(T,int)&quot;&gt; &lt;code&gt;accept(Object, int)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="5985cd696553540f610910adca6db8d335fde721" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#accept(T,long)&quot;&gt;&lt;code&gt;accept(Object, long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 기능적 메소드가 &lt;a href=&quot;#accept(T,long)&quot;&gt; &lt;code&gt;accept(Object, long)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="c0dc71c8a05337ad2d80b16743081fc1d32a7e2e" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#accept(double)&quot;&gt;&lt;code&gt;accept(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 기능적 메소드가 &lt;a href=&quot;#accept(double)&quot;&gt; &lt;code&gt;accept(double)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="e7f57a40a3f4e415a4e6cb14c5f2868456136bc4" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#accept(int)&quot;&gt;&lt;code&gt;accept(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능성 계면&lt;/a&gt; 그 작용 방법 &lt;a href=&quot;#accept(int)&quot;&gt; &lt;code&gt;accept(int)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1f4a0357b51472359485dde9d7612f704f745e3c" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#accept(long)&quot;&gt;&lt;code&gt;accept(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 기능적 메소드가 &lt;a href=&quot;#accept(long)&quot;&gt; &lt;code&gt;accept(long)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="39ebda72dea4befef1f0a82bdd981f99776424fb" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#apply(T)&quot;&gt;&lt;code&gt;apply(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;package-summary&quot;&gt;기능 인터페이스&lt;/a&gt; 그 기능 방법 &lt;a href=&quot;#apply(T)&quot;&gt; &lt;code&gt;apply(Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="78e785869cafa32caee805cc6d935837e1668a01" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#apply(T,U)&quot;&gt;&lt;code&gt;apply(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;package-summary&quot;&gt;기능 인터페이스&lt;/a&gt; 그 기능 방법 &lt;a href=&quot;#apply(T,U)&quot;&gt; &lt;code&gt;apply(Object, Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="307de36c1738beaeb28285c972b157d60de93a68" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#apply(double)&quot;&gt;&lt;code&gt;apply(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능성 계면&lt;/a&gt; 그 작용 방법 &lt;a href=&quot;#apply(double)&quot;&gt; &lt;code&gt;apply(double)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f2029b75317c44800ac21fdc22d318a6d16b3b41" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#apply(int)&quot;&gt;&lt;code&gt;apply(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능성 계면&lt;/a&gt; 그 작용 방법 &lt;a href=&quot;#apply(int)&quot;&gt; &lt;code&gt;apply(int)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fb2d2ac24e8eba3d731a4e80872e0a6010374c36" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#apply(long)&quot;&gt;&lt;code&gt;apply(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능성 계면&lt;/a&gt; 그 작용 방법 &lt;a href=&quot;#apply(long)&quot;&gt; &lt;code&gt;apply(long)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f6bddf58d54b638d056efb38b2e2fcc74d63c067" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#applyAsDouble(T)&quot;&gt;&lt;code&gt;applyAsDouble(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#applyAsDouble(T)&quot;&gt; &lt;code&gt;applyAsDouble(Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7f74a4386925daa13081e0491f295538fcad65bb" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#applyAsDouble(T,U)&quot;&gt;&lt;code&gt;applyAsDouble(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#applyAsDouble(T,U)&quot;&gt; &lt;code&gt;applyAsDouble(Object, Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f9c4bcf86bfb9390f06bc3e0994b5f2fba52e952" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#applyAsDouble(double)&quot;&gt;&lt;code&gt;applyAsDouble(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능성 계면&lt;/a&gt; 그 작용 방법 &lt;a href=&quot;#applyAsDouble(double)&quot;&gt; &lt;code&gt;applyAsDouble(double)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea336d698a18d34646781822bdad93c65f31dbbb" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#applyAsDouble(double,double)&quot;&gt;&lt;code&gt;applyAsDouble(double, double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능성 계면&lt;/a&gt; 그 작용 방법 &lt;a href=&quot;#applyAsDouble(double,double)&quot;&gt; &lt;code&gt;applyAsDouble(double, double)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9c2639359dc42e3d83d55086a5f09b554e9b7c4a" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#applyAsDouble(int)&quot;&gt;&lt;code&gt;applyAsDouble(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#applyAsDouble(int)&quot;&gt; &lt;code&gt;applyAsDouble(int)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="543ecea94fe5f98e11bf13e7cc624518fa8eee67" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#applyAsDouble(long)&quot;&gt;&lt;code&gt;applyAsDouble(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#applyAsDouble(long)&quot;&gt; &lt;code&gt;applyAsDouble(long)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="815ce03f314ebb9e22418a126004fa69ad450f44" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#applyAsInt(T)&quot;&gt;&lt;code&gt;applyAsInt(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#applyAsInt(T)&quot;&gt; &lt;code&gt;applyAsInt(Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ee2978bba76a26dff44378b4ea77afafeaca6c35" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#applyAsInt(T,U)&quot;&gt;&lt;code&gt;applyAsInt(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#applyAsInt(T,U)&quot;&gt; &lt;code&gt;applyAsInt(Object, Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="06535ec853f2553567edccca16eb895258862f09" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#applyAsInt(double)&quot;&gt;&lt;code&gt;applyAsInt(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 기능적 메소드가 &lt;a href=&quot;#applyAsInt(double)&quot;&gt; &lt;code&gt;applyAsInt(double)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="60f6bdce2e142307b8c151ebcc00dd0663346199" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#applyAsInt(int)&quot;&gt;&lt;code&gt;applyAsInt(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#applyAsInt(int)&quot;&gt; &lt;code&gt;applyAsInt(int)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="77cfba752d2caf928ac3e138a4a3e066528c8191" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#applyAsInt(int,int)&quot;&gt;&lt;code&gt;applyAsInt(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 기능적 메서드가 &lt;a href=&quot;#applyAsInt(int,int)&quot;&gt; &lt;code&gt;applyAsInt(int, int)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="5c633343de9ef7921b8fb3e3ff3369d43ebafa40" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#applyAsInt(long)&quot;&gt;&lt;code&gt;applyAsInt(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#applyAsInt(long)&quot;&gt; &lt;code&gt;applyAsInt(long)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="91d294ba9aa80395cca21740a9e4f57b60f26c25" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#applyAsLong(T)&quot;&gt;&lt;code&gt;applyAsLong(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#applyAsLong(T)&quot;&gt; &lt;code&gt;applyAsLong(Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5545152561b6ccdb5a0e02ebdfc8e8d30aa33b49" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#applyAsLong(T,U)&quot;&gt;&lt;code&gt;applyAsLong(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#applyAsLong(T,U)&quot;&gt; &lt;code&gt;applyAsLong(Object, Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6216402211358557111cf918d423eaec1ca98d1b" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#applyAsLong(double)&quot;&gt;&lt;code&gt;applyAsLong(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능성 계면&lt;/a&gt; 그 작용 방법 &lt;a href=&quot;#applyAsLong(double)&quot;&gt; &lt;code&gt;applyAsLong(double)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35697d63570b51ba4a6d2ff72edee35bc37e6a9a" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#applyAsLong(int)&quot;&gt;&lt;code&gt;applyAsLong(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#applyAsLong(int)&quot;&gt; &lt;code&gt;applyAsLong(int)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ed3d49a8bb93db0065896e9b107fd3d1cd998527" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#applyAsLong(long)&quot;&gt;&lt;code&gt;applyAsLong(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#applyAsLong(long)&quot;&gt; &lt;code&gt;applyAsLong(long)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8bd13bbc5de372132454a512ae78093976af600e" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#applyAsLong(long,long)&quot;&gt;&lt;code&gt;applyAsLong(long, long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#applyAsLong(long,long)&quot;&gt; &lt;code&gt;applyAsLong(long, long)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="41eae2b0b37dcf59cef52f80e4c46f9bdf82542e" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#get()&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;package-summary&quot;&gt;기능 인터페이스&lt;/a&gt; 그 기능 방법입니다 &lt;a href=&quot;#get()&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="44a28ca489486b147200d363a8e34c187dff7f75" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#getAsBoolean()&quot;&gt;&lt;code&gt;getAsBoolean()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#getAsBoolean()&quot;&gt; &lt;code&gt;getAsBoolean()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2c15548bc74d467994786b4ead563e31af9b5ab1" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#getAsDouble()&quot;&gt;&lt;code&gt;getAsDouble()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#getAsDouble()&quot;&gt; &lt;code&gt;getAsDouble()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="29374b7b957d71d8d96070ac5b25d412a642b229" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#getAsInt()&quot;&gt;&lt;code&gt;getAsInt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#getAsInt()&quot;&gt; &lt;code&gt;getAsInt()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="505c688f8e2744d3b9378ab1cb8b24bcde131dee" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#getAsLong()&quot;&gt;&lt;code&gt;getAsLong()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#getAsLong()&quot;&gt; &lt;code&gt;getAsLong()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4ae276e93fcb8ad5e6d315b792da6652dc89efc2" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#test(T)&quot;&gt;&lt;code&gt;test(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#test(T)&quot;&gt; &lt;code&gt;test(Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a407decf28b98c4da480719147a7123a9676d25" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#test(T,U)&quot;&gt;&lt;code&gt;test(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#test(T,U)&quot;&gt; &lt;code&gt;test(Object, Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="103de397fdb76d2c93cc28bd370991c8a6857605" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#test(double)&quot;&gt;&lt;code&gt;test(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#test(double)&quot;&gt; &lt;code&gt;test(double)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1f758844f03ded1f90de8a180e0a6e5e32027bcd" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#test(int)&quot;&gt;&lt;code&gt;test(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#test(int)&quot;&gt; &lt;code&gt;test(int)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e76dced74e021d4fe316b8dc52bc00c34ad2c789" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;#test(long)&quot;&gt;&lt;code&gt;test(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;#test(long)&quot;&gt; &lt;code&gt;test(long)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="23d95505e22c14462cabd3aa922526f370095bb6" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;biconsumer#accept-T-U-&quot;&gt;&lt;code&gt;accept(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;package-summary&quot;&gt;기능 인터페이스&lt;/a&gt; 그 기능 방법 &lt;a href=&quot;biconsumer#accept-T-U-&quot;&gt; &lt;code&gt;accept(Object, Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dc58947b48c087488739d267c72b90336a755933" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;bifunction#apply(T,U)&quot;&gt;&lt;code&gt;BiFunction.apply(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;bifunction#apply(T,U)&quot;&gt; &lt;code&gt;BiFunction.apply(Object, Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="947a7435b4ca3db843a54d4a982b871e9e6d10b3" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;bifunction#apply-T-U-&quot;&gt;&lt;code&gt;BiFunction.apply(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 기능적 메소드가 &lt;a href=&quot;bifunction#apply-T-U-&quot;&gt; &lt;code&gt;BiFunction.apply(Object, Object)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="eee16c770d693d02152db3c308800b474ce07d2b" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;bifunction#apply-T-U-&quot;&gt;&lt;code&gt;apply(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 기능적 메소드가 &lt;a href=&quot;bifunction#apply-T-U-&quot;&gt; &lt;code&gt;apply(Object, Object)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="de8483165f774b131e073c9037e36d34f4ac4057" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;bipredicate#test-T-U-&quot;&gt;&lt;code&gt;test(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;bipredicate#test-T-U-&quot;&gt; &lt;code&gt;test(Object, Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d0b42dc82e83dd8f0685d8b8abce12f9b22d90e4" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;booleansupplier#getAsBoolean--&quot;&gt;&lt;code&gt;getAsBoolean()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;booleansupplier#getAsBoolean--&quot;&gt; &lt;code&gt;getAsBoolean()&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="b82233a26d8ec4b1f0ead992f8b66665b7e4fd03" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;consumer#accept-T-&quot;&gt;&lt;code&gt;accept(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;package-summary&quot;&gt;기능 인터페이스&lt;/a&gt; 그 기능 방법 &lt;a href=&quot;consumer#accept-T-&quot;&gt; &lt;code&gt;accept(Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="feed7b921d3afa0aff44e28c122f48625314da45" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doublebinaryoperator#applyAsDouble-double-double-&quot;&gt;&lt;code&gt;applyAsDouble(double, double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;doublebinaryoperator#applyAsDouble-double-double-&quot;&gt; &lt;code&gt;applyAsDouble(double, double)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="625c7390d0cfdffa14487e376ddd15557661505b" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doubleconsumer#accept-double-&quot;&gt;&lt;code&gt;accept(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;package-summary&quot;&gt;기능 인터페이스&lt;/a&gt; 그 기능 방법 &lt;a href=&quot;doubleconsumer#accept-double-&quot;&gt; &lt;code&gt;accept(double)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cef5551e0b40e1feb2180320562a5467e1260822" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doublefunction#apply-double-&quot;&gt;&lt;code&gt;apply(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능성 계면&lt;/a&gt; 그 작용 방법 &lt;a href=&quot;doublefunction#apply-double-&quot;&gt; &lt;code&gt;apply(double)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b4dc1dc81bd3e31b87bf16cf34db3d33c346eff" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doublepredicate#test-double-&quot;&gt;&lt;code&gt;test(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;doublepredicate#test-double-&quot;&gt; &lt;code&gt;test(double)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02d927d182fc65cbeccb77d8bd478f225017ca44" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doublesupplier#getAsDouble--&quot;&gt;&lt;code&gt;getAsDouble()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;doublesupplier#getAsDouble--&quot;&gt; &lt;code&gt;getAsDouble()&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="14dde154b57fe34bc58aa95d1ab701873cf36fae" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doubletointfunction#applyAsInt-double-&quot;&gt;&lt;code&gt;applyAsInt(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;doubletointfunction#applyAsInt-double-&quot;&gt; &lt;code&gt;applyAsInt(double)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="54fa8316aa541a8095fbf21e5d4433529eaf3f63" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doubletolongfunction#applyAsLong-double-&quot;&gt;&lt;code&gt;applyAsLong(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;doubletolongfunction#applyAsLong-double-&quot;&gt; &lt;code&gt;applyAsLong(double)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="437174ca1707fe033a57d51dc1887b609adc48d4" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doubleunaryoperator#applyAsDouble-double-&quot;&gt;&lt;code&gt;applyAsDouble(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;doubleunaryoperator#applyAsDouble-double-&quot;&gt; &lt;code&gt;applyAsDouble(double)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="d488f65ae90616b4b435a60338957ea042fcb51a" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;function#apply(T)&quot;&gt;&lt;code&gt;Function.apply(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;function#apply(T)&quot;&gt; &lt;code&gt;Function.apply(Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a90c05eecc9b96fb0798e19823a0259e7480da08" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;function#apply-T-&quot;&gt;&lt;code&gt;Function.apply(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;function#apply-T-&quot;&gt; &lt;code&gt;Function.apply(Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a1651ace3447f3cb2948f86832dd5df2e8893791" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;function#apply-T-&quot;&gt;&lt;code&gt;apply(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;function#apply-T-&quot;&gt; &lt;code&gt;apply(Object)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="6c2ebdc64214cc919b6d7296171a81ed396b8554" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;intbinaryoperator#applyAsInt-int-int-&quot;&gt;&lt;code&gt;applyAsInt(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;intbinaryoperator#applyAsInt-int-int-&quot;&gt; &lt;code&gt;applyAsInt(int, int)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="ee34a59ae3a55ec3b7bd01654ba0de8912085085" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;intconsumer#accept-int-&quot;&gt;&lt;code&gt;accept(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;intconsumer#accept-int-&quot;&gt; &lt;code&gt;accept(int)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="dd8c743916e1f470ecddb6f3ea62afe876554db8" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;intfunction#apply-int-&quot;&gt;&lt;code&gt;apply(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;intfunction#apply-int-&quot;&gt; &lt;code&gt;apply(int)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="76ec6eddf617873e36216fe1c69ac71ad39a86e7" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;intpredicate#test-int-&quot;&gt;&lt;code&gt;test(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;intpredicate#test-int-&quot;&gt; &lt;code&gt;test(int)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="6f66a001977e876f8002ffc4c84917bf6b996d95" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;intsupplier#getAsInt--&quot;&gt;&lt;code&gt;getAsInt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;intsupplier#getAsInt--&quot;&gt; &lt;code&gt;getAsInt()&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="228694a853dbb3229ec00a4218d56eb99603077e" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;inttodoublefunction#applyAsDouble-int-&quot;&gt;&lt;code&gt;applyAsDouble(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;inttodoublefunction#applyAsDouble-int-&quot;&gt; &lt;code&gt;applyAsDouble(int)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="0a8c09e34761c36bad4357d2f50f9ea5ee73e3f5" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;inttolongfunction#applyAsLong-int-&quot;&gt;&lt;code&gt;applyAsLong(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;inttolongfunction#applyAsLong-int-&quot;&gt; &lt;code&gt;applyAsLong(int)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="9b677297b203675bb540ee01fd43ce2e225b0ccb" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;intunaryoperator#applyAsInt-int-&quot;&gt;&lt;code&gt;applyAsInt(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;intunaryoperator#applyAsInt-int-&quot;&gt; &lt;code&gt;applyAsInt(int)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="c14050baf0cd35ec605547c0f766662283b317a9" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longbinaryoperator#applyAsLong-long-long-&quot;&gt;&lt;code&gt;applyAsLong(long, long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;longbinaryoperator#applyAsLong-long-long-&quot;&gt; &lt;code&gt;applyAsLong(long, long)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="876cc436c42a0025cc88da794624d9a7e7ab2bbc" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longconsumer#accept-long-&quot;&gt;&lt;code&gt;accept(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;package-summary&quot;&gt;기능 인터페이스&lt;/a&gt; 그 기능 방법 &lt;a href=&quot;longconsumer#accept-long-&quot;&gt; &lt;code&gt;accept(long)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c3a54e2c4b2e6483023138130a309e65456d9355" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longfunction#apply-long-&quot;&gt;&lt;code&gt;apply(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능성 계면&lt;/a&gt; 그 작용 방법 &lt;a href=&quot;longfunction#apply-long-&quot;&gt; &lt;code&gt;apply(long)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e796456c6cdb902ddedb78dc86ab470172cb5c3" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longpredicate#test-long-&quot;&gt;&lt;code&gt;test(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;longpredicate#test-long-&quot;&gt; &lt;code&gt;test(long)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14dc71540ec3dd9da399059b894e32f45a0b1104" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longsupplier#getAsLong--&quot;&gt;&lt;code&gt;getAsLong()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;longsupplier#getAsLong--&quot;&gt; &lt;code&gt;getAsLong()&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="8d84ace773902105df96a362f149933c2372b33b" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longtodoublefunction#applyAsDouble-long-&quot;&gt;&lt;code&gt;applyAsDouble(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;longtodoublefunction#applyAsDouble-long-&quot;&gt; &lt;code&gt;applyAsDouble(long)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="5767a02f715673605df8ab1c07a0cd9c23fe09dc" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longtointfunction#applyAsInt-long-&quot;&gt;&lt;code&gt;applyAsInt(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;longtointfunction#applyAsInt-long-&quot;&gt; &lt;code&gt;applyAsInt(long)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="edabe3b752c21cdcb3d8b61c340cb45073553884" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longunaryoperator#applyAsLong-long-&quot;&gt;&lt;code&gt;applyAsLong(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 기능적 방법이 &lt;a href=&quot;longunaryoperator#applyAsLong-long-&quot;&gt; &lt;code&gt;applyAsLong(long)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="c107b00f4c172c129cbfdfe9db8937b2f51201a9" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;objdoubleconsumer#accept-T-double-&quot;&gt;&lt;code&gt;accept(Object, double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;package-summary&quot;&gt;기능 인터페이스&lt;/a&gt; 그 기능 방법 &lt;a href=&quot;objdoubleconsumer#accept-T-double-&quot;&gt; &lt;code&gt;accept(Object, double)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61b509856449bf28a2144ee3539c7b11d1c18177" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;objintconsumer#accept-T-int-&quot;&gt;&lt;code&gt;accept(Object, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;objintconsumer#accept-T-int-&quot;&gt; &lt;code&gt;accept(Object, int)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="385a27c104a9667378588dcc082b9cd07faef589" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;objlongconsumer#accept-T-long-&quot;&gt;&lt;code&gt;accept(Object, long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은이다 &lt;a href=&quot;package-summary&quot;&gt;기능 인터페이스&lt;/a&gt; 그 기능 방법 &lt;a href=&quot;objlongconsumer#accept-T-long-&quot;&gt; &lt;code&gt;accept(Object, long)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="335bb3e986bdaec85f93d6a604222ca93fecf9b9" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;predicate#test-T-&quot;&gt;&lt;code&gt;test(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 인 &lt;a href=&quot;package-summary&quot;&gt;기능적 인터페이스&lt;/a&gt; 그의 기능적 방법 &lt;a href=&quot;predicate#test-T-&quot;&gt; &lt;code&gt;test(Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="30e54ba7674096e4be0a285fc8c169ad038bf12c" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;supplier#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;supplier#get--&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="b9d5f13d2cf8f35e9df7b7982efcefc6f0901e9f" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;todoublebifunction#applyAsDouble-T-U-&quot;&gt;&lt;code&gt;applyAsDouble(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;todoublebifunction#applyAsDouble-T-U-&quot;&gt; &lt;code&gt;applyAsDouble(Object, Object)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="5c18190e729bf073a74c9dab21f88515920ecc2f" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;todoublefunction#applyAsDouble-T-&quot;&gt;&lt;code&gt;applyAsDouble(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;todoublefunction#applyAsDouble-T-&quot;&gt; &lt;code&gt;applyAsDouble(Object)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="1f6fb1a358146e5cf4e85d44591f0c6e1287ebd4" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;tointbifunction#applyAsInt-T-U-&quot;&gt;&lt;code&gt;applyAsInt(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;tointbifunction#applyAsInt-T-U-&quot;&gt; &lt;code&gt;applyAsInt(Object, Object)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="888bcb7c7ac17b788faf5f54f7ca2b854903a356" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;tointfunction#applyAsInt-T-&quot;&gt;&lt;code&gt;applyAsInt(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;tointfunction#applyAsInt-T-&quot;&gt; &lt;code&gt;applyAsInt(Object)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="ebce2ad151b7e651125b67551fc0e7898304f666" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;tolongbifunction#applyAsLong-T-U-&quot;&gt;&lt;code&gt;applyAsLong(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;tolongbifunction#applyAsLong-T-U-&quot;&gt; &lt;code&gt;applyAsLong(Object, Object)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="b4243e0e0d96016a563eb752b051e8a9353d386a" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;tolongfunction#applyAsLong-T-&quot;&gt;&lt;code&gt;applyAsLong(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 함수 메소드가 &lt;a href=&quot;tolongfunction#applyAsLong-T-&quot;&gt; &lt;code&gt;applyAsLong(Object)&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;package-summary&quot;&gt;함수 인터페이스&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="b8d258b12a70013a60abae2d3c2102f4bb1feca7" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary#StreamOps&quot;&gt;short-circuiting stateful intermediate operation&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;package-summary#StreamOps&quot;&gt;단락 상태 저장 중간 작동&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="85016ecd4e3ddabe1a873e02ba93aafedbb89ef2" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary#StreamOps&quot;&gt;short-circuiting terminal operation&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;package-summary#StreamOps&quot;&gt;단락 터미널 작업&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7b6c8a986be7ee6309dbcbb422f6d15881c32a38" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary#StreamOps&quot;&gt;stateful intermediate operation&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;package-summary#StreamOps&quot;&gt;상태 저장 중간 작업&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="81f0c9d12a1c79737ee9c6efec3e96a23965f9fc" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary#StreamOps&quot;&gt;terminal operation&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;package-summary#StreamOps&quot;&gt;터미널 작업&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f273236ad1259737c9d94bf9fe056fa3d3102a0a" translate="yes" xml:space="preserve">
          <source>This is a JavaBeans bound property.</source>
          <target state="translated">이것은 JavaBeans 바인딩 된 속성입니다.</target>
        </trans-unit>
        <trans-unit id="0c6c3380037233543572900023a78f6a51263560" translate="yes" xml:space="preserve">
          <source>This is a basic implementation of the &lt;code&gt;ComboPopup&lt;/code&gt; interface.</source>
          <target state="translated">이것은 &lt;code&gt;ComboPopup&lt;/code&gt; 인터페이스 의 기본 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="1ab893d72fbd74a5ca61342e8ac8ced0cc794d16" translate="yes" xml:space="preserve">
          <source>This is a basic implementation of the &lt;code&gt;ComboPopup&lt;/code&gt; interface. This class represents the ui for the popup portion of the combo box.</source>
          <target state="translated">이것은 &lt;code&gt;ComboPopup&lt;/code&gt; 인터페이스 의 기본 구현입니다 . 이 클래스는 콤보 상자의 팝업 부분에 대한 UI를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="199d628d2dd6d9a55f248d05d484bf80c9adffbb" translate="yes" xml:space="preserve">
          <source>This is a bound property.</source>
          <target state="translated">이것은 바인딩 된 속성입니다.</target>
        </trans-unit>
        <trans-unit id="9d70d5ce12612bb1e7aaddcc7a2e3c6218ff04aa" translate="yes" xml:space="preserve">
          <source>This is a classic &quot;bounded buffer&quot;, in which a fixed-sized array holds elements inserted by producers and extracted by consumers. Once created, the capacity cannot be changed. Attempts to &lt;code&gt;put&lt;/code&gt; an element into a full queue will result in the operation blocking; attempts to &lt;code&gt;take&lt;/code&gt; an element from an empty queue will similarly block.</source>
          <target state="translated">고정 된 크기의 배열은 생산자가 삽입하고 소비자가 추출한 요소를 보유하는 고전적인 &quot;바운드 버퍼&quot;입니다. 일단 생성되면 용량을 변경할 수 없습니다. 요소를 전체 대기열 에 &lt;code&gt;put&lt;/code&gt; 하면 작업이 차단됩니다. 빈 대기열에서 요소 를 &lt;code&gt;take&lt;/code&gt; 오려고 시도 하면 마찬가지로 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="c755c40c7c61f7d9cf9efd668be4225ecb1d1001" translate="yes" xml:space="preserve">
          <source>This is a convenience attribute that allows direct access to the child node that is the document element of the document.</source>
          <target state="translated">이는 문서의 문서 요소 인 하위 노드에 직접 액세스 할 수있는 편의 속성입니다.</target>
        </trans-unit>
        <trans-unit id="6d86d9a99c193f0eb03e1e0bd3d455b4c6c31416" translate="yes" xml:space="preserve">
          <source>This is a convenience constructor. An invocation of the form &lt;code&gt;InvocationEvent(source, runnable)&lt;/code&gt; behaves in exactly the same way as the invocation of &lt;a href=&quot;#%3Cinit%3E(java.lang.Object,java.lang.Runnable,java.lang.Object,boolean)&quot;&gt;&lt;code&gt;InvocationEvent(source, runnable, null, false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 편의 생성자입니다. &lt;code&gt;InvocationEvent(source, runnable)&lt;/code&gt; 형식 의 호출은 &lt;a href=&quot;#%3Cinit%3E(java.lang.Object,java.lang.Runnable,java.lang.Object,boolean)&quot;&gt; &lt;code&gt;InvocationEvent(source, runnable, null, false)&lt;/code&gt; &lt;/a&gt; 호출과 정확히 동일한 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="26a3be553c97dbcdfd0ece81200946851d743c62" translate="yes" xml:space="preserve">
          <source>This is a convenience method and is equivalent to evaluating the following expression:</source>
          <target state="translated">이것은 편리한 방법이며 다음 표현식을 평가하는 것과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="9170e5a9a5ccceacb587c2d99ddb612d702b80f1" translate="yes" xml:space="preserve">
          <source>This is a convenience method for &lt;a href=&quot;#newSchema(javax.xml.transform.Source%5B%5D)&quot;&gt;&lt;code&gt;newSchema(Source[] schemas)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;#newSchema(javax.xml.transform.Source%5B%5D)&quot;&gt; &lt;code&gt;newSchema(Source[] schemas)&lt;/code&gt; &lt;/a&gt; 대한 편리한 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="48e948fb932942248a5eadd8c21d5efa1a87e7a3" translate="yes" xml:space="preserve">
          <source>This is a convenience method for &lt;a href=&quot;#newSchema(javax.xml.transform.Source)&quot;&gt;&lt;code&gt;newSchema(Source schema)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;#newSchema(javax.xml.transform.Source)&quot;&gt; &lt;code&gt;newSchema(Source schema)&lt;/code&gt; &lt;/a&gt; 의 편리한 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="6d7ecf61c0a7cbd42df9f4ec5de097e74bfadacd" translate="yes" xml:space="preserve">
          <source>This is a convenience method for &lt;code&gt;getReader(int, int, int, HTML.Tag, TRUE)&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;getReader(int, int, int, HTML.Tag, TRUE)&lt;/code&gt; 대한 편리한 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="54f7cabd1a4c7fce0cac3893cdca9f9b4fd71a4f" translate="yes" xml:space="preserve">
          <source>This is a convenience method for local management use and is equivalent to calling:</source>
          <target state="translated">이것은 로컬 관리 사용을위한 편리한 방법이며 다음을 호출하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="58cc589d7865f15bee0f2f6b60cc21924c83d713" translate="yes" xml:space="preserve">
          <source>This is a convenience method supposed to help application developers avoid looking for validate roots manually. Basically, it's equivalent to first calling the &lt;a href=&quot;#invalidate()&quot;&gt;&lt;code&gt;invalidate()&lt;/code&gt;&lt;/a&gt; method on this component, and then calling the &lt;a href=&quot;#validate()&quot;&gt;&lt;code&gt;validate()&lt;/code&gt;&lt;/a&gt; method on the nearest validate root.</source>
          <target state="translated">이것은 응용 프로그램 개발자가 수동으로 루트 유효성 검사를 찾지 않도록 도와주는 편리한 방법입니다. 기본적 으로이 구성 요소에서 먼저 &lt;a href=&quot;#invalidate()&quot;&gt; &lt;code&gt;invalidate()&lt;/code&gt; &lt;/a&gt; 메서드를 호출 한 다음 가장 가까운 validate 루트에서 &lt;a href=&quot;#validate()&quot;&gt; &lt;code&gt;validate()&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="e959474c3a5948e338d55715e25cb555c3cca9d5" translate="yes" xml:space="preserve">
          <source>This is a convenience method that can be used to log entry to a method. A LogRecord with message &quot;ENTRY {0}&quot;, log level FINER, and the given sourceMethod, sourceClass, and parameter is logged.</source>
          <target state="translated">이것은 메소드에 대한 입력을 기록하는 데 사용할 수있는 편리한 메소드입니다. &quot;ENTRY {0}&quot;메시지, 로그 레벨 FINER 및 지정된 sourceMethod, sourceClass 및 매개 변수가있는 LogRecord가 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="828f2868ff5ac7338513a03553198b5b2c56c2be" translate="yes" xml:space="preserve">
          <source>This is a convenience method that can be used to log entry to a method. A LogRecord with message &quot;ENTRY&quot; (followed by a format {N} indicator for each entry in the parameter array), log level FINER, and the given sourceMethod, sourceClass, and parameters is logged.</source>
          <target state="translated">이것은 메소드에 대한 입력을 기록하는 데 사용할 수있는 편리한 메소드입니다. 메시지 &quot;ENTRY&quot;(매개 변수 배열의 각 항목에 대한 형식 {N} 표시기), 로그 레벨 FINER 및 지정된 sourceMethod, sourceClass 및 매개 변수가있는 LogRecord가 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="34bda061cf7a96f3aa1be24cacae7600e1f013c9" translate="yes" xml:space="preserve">
          <source>This is a convenience method that can be used to log entry to a method. A LogRecord with message &quot;ENTRY&quot;, log level FINER, and the given sourceMethod and sourceClass is logged.</source>
          <target state="translated">이것은 메소드에 대한 입력을 기록하는 데 사용할 수있는 편리한 메소드입니다. &quot;ENTRY&quot;메시지, 로그 레벨 FINER 및 지정된 sourceMethod 및 sourceClass가있는 LogRecord가 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="59a538c35cfad44f5bc58a272cb23dae34322e98" translate="yes" xml:space="preserve">
          <source>This is a convenience method that can be used to log returning from a method. A LogRecord with message &quot;RETURN {0}&quot;, log level FINER, and the gives sourceMethod, sourceClass, and result object is logged.</source>
          <target state="translated">메소드에서 리턴을 로그하는 데 사용할 수있는 편리한 메소드입니다. &quot;RETURN {0}&quot;메시지, 로그 레벨 FINER 및 제공 sourceMethod, sourceClass 및 결과 오브젝트가있는 LogRecord가 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="1d269250334a81c7b5c96143a33dcdd6f421b0e2" translate="yes" xml:space="preserve">
          <source>This is a convenience method that can be used to log returning from a method. A LogRecord with message &quot;RETURN&quot;, log level FINER, and the given sourceMethod and sourceClass is logged.</source>
          <target state="translated">메소드에서 리턴을 로그하는 데 사용할 수있는 편리한 메소드입니다. &quot;RETURN&quot;메시지, 로그 레벨 FINER 및 지정된 sourceMethod 및 sourceClass가있는 LogRecord가 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="307173f7ee44c7e1183ae72188c262df17090c73" translate="yes" xml:space="preserve">
          <source>This is a convenience method that simply returns the model value for &lt;code&gt;getMinSelectionIndex&lt;/code&gt;.</source>
          <target state="translated">이것은 단순히 &lt;code&gt;getMinSelectionIndex&lt;/code&gt; 의 모델 값을 반환하는 편리한 메서드입니다 .</target>
        </trans-unit>
        <trans-unit id="a3e338068b47bfc3b97b75b492f3efd8dcd05ae3" translate="yes" xml:space="preserve">
          <source>This is a convenience method to aid in the implementation of the common-case MouseWheelListener - to scroll a ScrollPane or JScrollPane by an amount which conforms to the platform settings.</source>
          <target state="translated">이것은 일반적인 경우 MouseWheelListener의 구현을 지원하는 편리한 방법입니다.-플랫폼 설정에 맞는 양만큼 ScrollPane 또는 JScrollPane을 스크롤합니다.</target>
        </trans-unit>
        <trans-unit id="748657422afc4818503f371e98ef8028d8641faa" translate="yes" xml:space="preserve">
          <source>This is a convenience method to aid in the implementation of the common-case MouseWheelListener - to scroll a ScrollPane or JScrollPane by an amount which conforms to the platform settings. (Note, however, that &lt;code&gt;ScrollPane&lt;/code&gt; and &lt;code&gt;JScrollPane&lt;/code&gt; already have this functionality built in.)</source>
          <target state="translated">이것은 일반적인 경우 MouseWheelListener의 구현을 지원하는 편리한 방법입니다.-플랫폼 설정에 맞는 양만큼 ScrollPane 또는 JScrollPane을 스크롤합니다. (그러나 &lt;code&gt;ScrollPane&lt;/code&gt; 및 &lt;code&gt;JScrollPane&lt;/code&gt; 에는 이미이 기능이 내장되어 있습니다.)</target>
        </trans-unit>
        <trans-unit id="c2ab1ba9839c76ee1f2566d4656c9b74507e8266" translate="yes" xml:space="preserve">
          <source>This is a convenience method to call &lt;code&gt;setBorderNormal&lt;/code&gt; for each child component.</source>
          <target state="translated">이는 각 하위 구성 요소에 대해 &lt;code&gt;setBorderNormal&lt;/code&gt; 을 호출하는 편리한 메서드 입니다.</target>
        </trans-unit>
        <trans-unit id="79047f60c61b9dd85c9ab80fa682f5db1630176f" translate="yes" xml:space="preserve">
          <source>This is a convenience method to call &lt;code&gt;setBorderToNonRollover&lt;/code&gt; for each child component.</source>
          <target state="translated">이는 각 하위 구성 요소에 대해 &lt;code&gt;setBorderToNonRollover&lt;/code&gt; 를 호출하는 편리한 메소드 입니다.</target>
        </trans-unit>
        <trans-unit id="c34736339266b7010555ab173885634a9d6531af" translate="yes" xml:space="preserve">
          <source>This is a convenience method to call &lt;code&gt;setBorderToRollover&lt;/code&gt; for each child component.</source>
          <target state="translated">이는 각 하위 구성 요소에 대해 &lt;code&gt;setBorderToRollover&lt;/code&gt; 를 호출하는 편리한 메소드 입니다.</target>
        </trans-unit>
        <trans-unit id="469d4aed40c128701207e2291e95bb088d12bddb" translate="yes" xml:space="preserve">
          <source>This is a convenience method to determine if the category would be a member of the result of &lt;code&gt;getSupportedAttributeCategories()&lt;/code&gt;.</source>
          <target state="translated">이것은 카테고리가 &lt;code&gt;getSupportedAttributeCategories()&lt;/code&gt; 결과의 멤버인지 판별하기위한 편리한 메소드 입니다.</target>
        </trans-unit>
        <trans-unit id="47880d5e2a8965f45542e772b5f3c48ad9b88d9b" translate="yes" xml:space="preserve">
          <source>This is a convenience method to determine if the value would be a member of the result of &lt;code&gt;getSupportedAttributeValues(...)&lt;/code&gt;.</source>
          <target state="translated">이것은 값이 &lt;code&gt;getSupportedAttributeValues(...)&lt;/code&gt; 결과의 멤버인지 판별하기위한 편리한 메소드 입니다.</target>
        </trans-unit>
        <trans-unit id="d5e32d098a20a7668fc6cd0e7091c0b3042ac28d" translate="yes" xml:space="preserve">
          <source>This is a convenience method to log that a method is terminating by throwing an exception. The logging is done using the FINER level.</source>
          <target state="translated">이는 예외를 발생시켜 메소드가 종료되고 있음을 기록하는 편리한 방법입니다. 로깅은 FINER 레벨을 사용하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="951eee9db51537806145034698bb751aa785a2aa" translate="yes" xml:space="preserve">
          <source>This is a convenience method, equivalent to invoking the &lt;code&gt;with(&quot;threshold&quot;, &quot;0 s&quot;)&lt;/code&gt; method.</source>
          <target state="translated">이것은 &lt;code&gt;with(&quot;threshold&quot;, &quot;0 s&quot;)&lt;/code&gt; 메서드 를 호출하는 것과 같은 편리한 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="9ff2b719a3774a6a5dea506babe564980e8a16fc" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form</source>
          <target state="translated">이것은 편리한 방법입니다. 폼의 호출</target>
        </trans-unit>
        <trans-unit id="653e6c106d9d0ddaa4b28d4cf98d22e4b11636c0" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(cmdarray)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;#exec(java.lang.String%5B%5D,java.lang.String%5B%5D,java.io.File)&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(cmdarray, null, null)&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;exec(cmdarray)&lt;/code&gt; 형식의 호출은 호출 &lt;a href=&quot;#exec(java.lang.String%5B%5D,java.lang.String%5B%5D,java.io.File)&quot;&gt; &lt;code&gt;exec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(cmdarray, null, null)&lt;/code&gt; 과 정확히 동일한 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="c96ca48246895e1e75154e61e8f4eb3246fe3100" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(cmdarray)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(cmdarray, null, null)&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;exec(cmdarray)&lt;/code&gt; 형식의 호출은 호출 &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(cmdarray, null, null)&lt;/code&gt; 와 정확히 같은 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="08c5079562d2fb38e8976fdf579e1d7408afea1c" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(cmdarray, envp)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;#exec(java.lang.String%5B%5D,java.lang.String%5B%5D,java.io.File)&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(cmdarray, envp, null)&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;exec(cmdarray, envp)&lt;/code&gt; 형식 의 호출은 &lt;a href=&quot;#exec(java.lang.String%5B%5D,java.lang.String%5B%5D,java.io.File)&quot;&gt; &lt;code&gt;exec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(cmdarray, envp, null)&lt;/code&gt; 호출과 정확히 동일한 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="671558323b15a9545826acf332fefc3ae04da28a" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(cmdarray, envp)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(cmdarray, envp, null)&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;exec(cmdarray, envp)&lt;/code&gt; 형식의 호출은 호출 &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(cmdarray, envp, null)&lt;/code&gt; 와 정확히 같은 방식으로 동작 합니다.</target>
        </trans-unit>
        <trans-unit id="3c9d339d0d4b7ceb0a2490ed906c7dcca9ccece5" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(command)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;#exec(java.lang.String,java.lang.String%5B%5D,java.io.File)&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(command, null, null)&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;exec(command)&lt;/code&gt; 형식 의 호출은 &lt;a href=&quot;#exec(java.lang.String,java.lang.String%5B%5D,java.io.File)&quot;&gt; &lt;code&gt;exec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(command, null, null)&lt;/code&gt; 호출과 정확히 동일한 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="8762622585d07d1a3fe3a27666aca4dd1c6cc4e1" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(command)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(command, null, null)&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;exec(command)&lt;/code&gt; 형식의 호출은 호출 &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(command, null, null)&lt;/code&gt; 와 정확히 같은 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="c27408d2f3f3151ec4386f65341ea57eaae46930" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(command, envp)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;#exec(java.lang.String,java.lang.String%5B%5D,java.io.File)&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(command, envp, null)&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;exec(command, envp)&lt;/code&gt; 형식 의 호출은 &lt;a href=&quot;#exec(java.lang.String,java.lang.String%5B%5D,java.io.File)&quot;&gt; &lt;code&gt;exec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(command, envp, null)&lt;/code&gt; 호출과 정확히 동일한 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="ebb030791474af30bc1bb5c12fde15e50a5e6bb0" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(command, envp)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(command, envp, null)&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;exec(command, envp)&lt;/code&gt; 형식의 호출은 호출 &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(command, envp, null)&lt;/code&gt; 와 정확히 같은 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="630a40b5e7296d23abb713a8f932ad288abbc339" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(command, envp, dir)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;#exec(java.lang.String%5B%5D,java.lang.String%5B%5D,java.io.File)&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(cmdarray, envp, dir)&lt;/code&gt;, where &lt;code&gt;cmdarray&lt;/code&gt; is an array of all the tokens in &lt;code&gt;command&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. 폼의 호출 &lt;code&gt;exec(command, envp, dir)&lt;/code&gt; 호출과 완전히 같게 &lt;a href=&quot;#exec(java.lang.String%5B%5D,java.lang.String%5B%5D,java.io.File)&quot;&gt; &lt;code&gt;exec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(cmdarray, envp, dir)&lt;/code&gt; , &lt;code&gt;cmdarray&lt;/code&gt; 인수는 모든 토큰의 배열 &lt;code&gt;command&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22a3355a183efd6c613c54a3204fe60f8280bd46" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(command, envp, dir)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(cmdarray, envp, dir)&lt;/code&gt;, where &lt;code&gt;cmdarray&lt;/code&gt; is an array of all the tokens in &lt;code&gt;command&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;exec(command, envp, dir)&lt;/code&gt; 형식의 호출은 호출 &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(cmdarray, envp, dir)&lt;/code&gt; 와 정확히 동일한 방식으로 작동합니다 . 여기서 &lt;code&gt;cmdarray&lt;/code&gt; 는 &lt;code&gt;command&lt;/code&gt; 에있는 모든 토큰의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="47a8d99b73723412244f554cc2ac849ccedb3949" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;redirectError(file)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;#redirectError(java.lang.ProcessBuilder.Redirect)&quot;&gt;&lt;code&gt;redirectError&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(Redirect.to(file))&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;redirectError(file)&lt;/code&gt; 형식 의 호출은 &lt;a href=&quot;#redirectError(java.lang.ProcessBuilder.Redirect)&quot;&gt; &lt;code&gt;redirectError&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(Redirect.to(file))&lt;/code&gt; 호출과 똑같은 방식으로 작동 합니다 .</target>
        </trans-unit>
        <trans-unit id="212085ea90e849fac4d77206ae33749cd6bfe7b8" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;redirectError(file)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;processbuilder#redirectError-java.lang.ProcessBuilder.Redirect-&quot;&gt;&lt;code&gt;redirectError&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(Redirect.to(file))&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;redirectError(file)&lt;/code&gt; 형식의 호출은, &lt;a href=&quot;processbuilder#redirectError-java.lang.ProcessBuilder.Redirect-&quot;&gt; &lt;code&gt;redirectError&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(Redirect.to(file))&lt;/code&gt; 호출과 정확히 같은 방식으로 동작 합니다 .</target>
        </trans-unit>
        <trans-unit id="33b0ae21522c08da5c32d26874043f63168c6657" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;redirectInput(file)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;#redirectInput(java.lang.ProcessBuilder.Redirect)&quot;&gt;&lt;code&gt;redirectInput&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(Redirect.from(file))&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;redirectInput(file)&lt;/code&gt; 형식 의 호출은 &lt;a href=&quot;#redirectInput(java.lang.ProcessBuilder.Redirect)&quot;&gt; &lt;code&gt;redirectInput&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(Redirect.from(file))&lt;/code&gt; 호출과 정확히 동일한 방식으로 작동 합니다 .</target>
        </trans-unit>
        <trans-unit id="ba0089888bbd426596a94e0c7c90005a82da2ab9" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;redirectInput(file)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;processbuilder#redirectInput-java.lang.ProcessBuilder.Redirect-&quot;&gt;&lt;code&gt;redirectInput&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(Redirect.from(file))&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;redirectInput(file)&lt;/code&gt; 형식 의 호출은 &lt;a href=&quot;processbuilder#redirectInput-java.lang.ProcessBuilder.Redirect-&quot;&gt; &lt;code&gt;redirectInput&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(Redirect.from(file))&lt;/code&gt; 호출과 정확히 같은 방식으로 작동 합니다 .</target>
        </trans-unit>
        <trans-unit id="ee4f918f6bfcabe8b646f4f4c68dd1e37b4be38a" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;redirectOutput(file)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;#redirectOutput(java.lang.ProcessBuilder.Redirect)&quot;&gt;&lt;code&gt;redirectOutput&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(Redirect.to(file))&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;redirectOutput(file)&lt;/code&gt; 형식 의 호출은 &lt;a href=&quot;#redirectOutput(java.lang.ProcessBuilder.Redirect)&quot;&gt; &lt;code&gt;redirectOutput&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(Redirect.to(file))&lt;/code&gt; 호출과 정확히 동일한 방식으로 작동 합니다 .</target>
        </trans-unit>
        <trans-unit id="b9d640027f8f852b0f012e2990ab44d8363b093c" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;redirectOutput(file)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;processbuilder#redirectOutput-java.lang.ProcessBuilder.Redirect-&quot;&gt;&lt;code&gt;redirectOutput&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(Redirect.to(file))&lt;/code&gt;.</source>
          <target state="translated">이것은 편리한 방법입니다. &lt;code&gt;redirectOutput(file)&lt;/code&gt; 형식의 호출은, &lt;a href=&quot;processbuilder#redirectOutput-java.lang.ProcessBuilder.Redirect-&quot;&gt; &lt;code&gt;redirectOutput&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(Redirect.to(file))&lt;/code&gt; 호출과 정확히 같은 방식으로 동작 합니다 .</target>
        </trans-unit>
        <trans-unit id="83dad16fed9c97dd0cd81ca912b951952c0c925b" translate="yes" xml:space="preserve">
          <source>This is a convenience object that can be passed to &lt;a href=&quot;#proxy(java.net.ProxySelector)&quot;&gt;&lt;code&gt;proxy(ProxySelector)&lt;/code&gt;&lt;/a&gt; in order to build an instance of &lt;a href=&quot;httpclient&quot;&gt;&lt;code&gt;HttpClient&lt;/code&gt;&lt;/a&gt; that uses no proxy.</source>
          <target state="translated">&lt;a href=&quot;#proxy(java.net.ProxySelector)&quot;&gt; &lt;code&gt;proxy(ProxySelector)&lt;/code&gt; &lt;/a&gt; 를 사용하지 않는 &lt;a href=&quot;httpclient&quot;&gt; &lt;code&gt;HttpClient&lt;/code&gt; &lt;/a&gt; 의 인스턴스를 구축하기 위해 proxy (ProxySelector) 에 전달할 수있는 편리한 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="8e4268e72b3ce5f149dda082bb9fd2e67942b968" translate="yes" xml:space="preserve">
          <source>This is a convenient method for local management use and is equivalent to calling:</source>
          <target state="translated">이것은 로컬 관리 사용에 편리한 방법이며 다음을 호출하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="586d5371168e88c7205726a3e3f34b1dccfba615" translate="yes" xml:space="preserve">
          <source>This is a convience method and is equivalent to evaluating the following expression:</source>
          <target state="translated">이것은 convience 방법이며 다음 표현식을 평가하는 것과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="0b4c6330126cfe57dc435d47841ddc04c33ed925" translate="yes" xml:space="preserve">
          <source>This is a cover method that delegates to the method of the same name in the list's &lt;code&gt;ListUI&lt;/code&gt;. It returns &lt;code&gt;-1&lt;/code&gt; if the list has no &lt;code&gt;ListUI&lt;/code&gt;.</source>
          <target state="translated">이것은 목록의 &lt;code&gt;ListUI&lt;/code&gt; 에서 동일한 이름의 메서드에 위임하는 커버 메서드입니다 . 목록에 &lt;code&gt;ListUI&lt;/code&gt; 가 없으면 &lt;code&gt;-1&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4451c221e8a567fa1667ef62bcde659913b6aa83" translate="yes" xml:space="preserve">
          <source>This is a cover method that delegates to the method of the same name in the list's &lt;code&gt;ListUI&lt;/code&gt;. It returns &lt;code&gt;null&lt;/code&gt; if the list has no &lt;code&gt;ListUI&lt;/code&gt;.</source>
          <target state="translated">이것은 목록의 &lt;code&gt;ListUI&lt;/code&gt; 에서 동일한 이름의 메서드에 위임하는 커버 메서드입니다 . 목록에 &lt;code&gt;ListUI&lt;/code&gt; 가 없으면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f14f52d3e0d1294485af15d86a16f6ca79ee4dc6" translate="yes" xml:space="preserve">
          <source>This is a cover method that delegates to the method of the same name on the list's selection model.</source>
          <target state="translated">목록의 선택 모델에서 동일한 이름의 메서드를 위임하는 커버 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="2eef668849a67ebbe9b3ddf7804f494e9f470e59" translate="yes" xml:space="preserve">
          <source>This is a cover method that delegates to the method of the same name on the list's selection model. See the documentation for &lt;a href=&quot;listselectionmodel#setValueIsAdjusting(boolean)&quot;&gt;&lt;code&gt;ListSelectionModel.setValueIsAdjusting(boolean)&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">목록의 선택 모델에서 동일한 이름의 메서드를 위임하는 커버 메서드입니다. 자세한 내용은 &lt;a href=&quot;listselectionmodel#setValueIsAdjusting(boolean)&quot;&gt; &lt;code&gt;ListSelectionModel.setValueIsAdjusting(boolean)&lt;/code&gt; &lt;/a&gt; 문서 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="bc5390e94fba7abd759529cc7840bc9bf0242fca" translate="yes" xml:space="preserve">
          <source>This is a dangerous permission to grant. The contents of the log may contain usernames and passwords, SQL statements, and SQL data.</source>
          <target state="translated">이것은 허가 할 수있는 위험한 권한입니다. 로그 내용에는 사용자 이름과 암호, SQL 문 및 SQL 데이터가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2528de4679efaae8cdc8aa0d25cf0179c90daf52" translate="yes" xml:space="preserve">
          <source>This is a final, immutable and thread-safe enum.</source>
          <target state="translated">이것은, 불변의 thread 세이프 열거 형입니다.</target>
        </trans-unit>
        <trans-unit id="5574943ba9d22f3ea1608d8d1a0edd6d592193b7" translate="yes" xml:space="preserve">
          <source>This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference.</source>
          <target state="translated">이것은 기능적인 인터페이스이므로 람다 식 또는 메서드 참조의 할당 대상으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63486938df39a133193a80dfcdbfafd173d12c38" translate="yes" xml:space="preserve">
          <source>This is a general support class to provide support for implementing the BeanContextChild protocol.</source>
          <target state="translated">BeanContextChild 프로토콜 구현을 지원하기위한 일반 지원 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="868f36c96277c40dcdb01d6ff71e13bf08caa9df" translate="yes" xml:space="preserve">
          <source>This is a general support class to provide support for implementing the BeanContextChild protocol. This class may either be directly subclassed, or encapsulated and delegated to in order to implement this interface for a given component.</source>
          <target state="translated">BeanContextChild 프로토콜 구현을 지원하기위한 일반 지원 클래스입니다. 이 클래스는 지정된 컴포넌트에 대해이 인터페이스를 구현하기 위해 직접 서브 클래 싱되거나 캡슐화 및 위임 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d17d7850524e0058998c00979afaa8fc15f15c2" translate="yes" xml:space="preserve">
          <source>This is a high-level method that uses &lt;code&gt;getMixer&lt;/code&gt; and &lt;code&gt;getLine&lt;/code&gt; internally.</source>
          <target state="translated">이것은 &lt;code&gt;getMixer&lt;/code&gt; 및 &lt;code&gt;getLine&lt;/code&gt; 을 내부적으로 사용하는 고급 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="2e6a65eaffef9458b40ebbb548d73c991322871f" translate="yes" xml:space="preserve">
          <source>This is a linear congruential pseudorandom number generator, as defined by D. H. Lehmer and described by Donald E. Knuth in</source>
          <target state="translated">이것은 DH Lehmer에 의해 정의되고 Donald E. Knuth에 의해 기술 된 선형 합동 의사 난수 생성기입니다.</target>
        </trans-unit>
        <trans-unit id="106b936e2e842f0b986924bcfc92c3f35fc3dd9d" translate="yes" xml:space="preserve">
          <source>This is a primitive reshape method.</source>
          <target state="translated">이것은 원시적 인 모양 변경 방법입니다.</target>
        </trans-unit>
        <trans-unit id="05d87ae7463b357a9419d89ddc334a8a74c99ed6" translate="yes" xml:space="preserve">
          <source>This is a simple</source>
          <target state="translated">이것은 간단합니다</target>
        </trans-unit>
        <trans-unit id="0466222f15dd496eeb3158ec6b459c0b5df10f76" translate="yes" xml:space="preserve">
          <source>This is a special case formatter intended to allow a human readable form of an &lt;a href=&quot;../instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Instant&lt;/code&gt; class is designed to only represent a point in time and internally stores a value in nanoseconds from a fixed epoch of 1970-01-01Z. As such, an &lt;code&gt;Instant&lt;/code&gt; cannot be formatted as a date or time without providing some form of time-zone. This formatter allows the &lt;code&gt;Instant&lt;/code&gt; to be formatted, by providing a suitable conversion using &lt;code&gt;ZoneOffset.UTC&lt;/code&gt;.</source>
          <target state="translated">이것은 사람이 읽을 수있는 형태의 &lt;a href=&quot;../instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; &lt;/a&gt; 형식을 허용하기위한 특수한 경우의 포맷터입니다 . &lt;code&gt;Instant&lt;/code&gt; 클래스 만의 시점을 나타내도록 설계 내부적으로 1970-01-01Z의 고정 시대에서 나노초의 값을 저장한다. 따라서 어떤 형태의 시간대도 제공하지 않으면 &lt;code&gt;Instant&lt;/code&gt; 를 날짜 또는 시간으로 포맷 할 수 없습니다. 이 포맷터를 사용하면 &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; 를 사용하여 적절한 변환을 제공 하여 &lt;code&gt;Instant&lt;/code&gt; 를 포맷 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="60e5b42155fba90d448f0df8642048d312059ab4" translate="yes" xml:space="preserve">
          <source>This is a support class to help build property editors.</source>
          <target state="translated">속성 편집기를 빌드하는 데 도움이되는 지원 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="ccd29d1661e043815e58d17366c7d67a45c86be2" translate="yes" xml:space="preserve">
          <source>This is a support class to make it easier for people to provide BeanInfo classes.</source>
          <target state="translated">사람들이 BeanInfo 클래스를 더 쉽게 제공 할 수 있도록 지원 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="ba18bbc6664b6a4c3e00f930a80488a32ad39747" translate="yes" xml:space="preserve">
          <source>This is a tag synthesized by the HTML reader. Since elements are identified by their tag type, we create a some fake tag types to mark the elements that were manufactured.</source>
          <target state="translated">이것은 HTML 리더에 의해 합성 된 태그입니다. 요소는 태그 유형으로 식별되기 때문에 제조 된 요소를 표시하기 위해 가짜 태그 유형을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="9cda0a03cbc603a4acf1ad5e9f84ab0090c400e7" translate="yes" xml:space="preserve">
          <source>This is a thread identifier within the Java VM and may or may not map to any operating system ID.</source>
          <target state="translated">이것은 Java VM 내의 스레드 식별자이며 운영 체제 ID에 매핑되거나 매핑되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6a538972f56cec130d4b938eef44581309ddd10" translate="yes" xml:space="preserve">
          <source>This is a typesafe enumeration of the &lt;em&gt;well-known&lt;/em&gt; attributes that contribute to a character style.</source>
          <target state="translated">이것은 문자 스타일에 기여 하는 &lt;em&gt;잘 알려진&lt;/em&gt; 속성 의 형식이 안전한 열거 입니다.</target>
        </trans-unit>
        <trans-unit id="2cda3e615a3cbbbb72f2bbcee7a3cf338b2bacf2" translate="yes" xml:space="preserve">
          <source>This is a typesafe enumeration of the &lt;em&gt;well-known&lt;/em&gt; attributes that contribute to a character style. These are aliased by the outer class for general presentation.</source>
          <target state="translated">이것은 문자 스타일에 기여 하는 &lt;em&gt;잘 알려진&lt;/em&gt; 속성 의 형식이 안전한 열거 입니다. 이들은 일반적인 표현을 위해 외부 클래스에 의해 별칭이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="2d1fa0bd35c50cea457a0ddc9f1973ba32f3eaa9" translate="yes" xml:space="preserve">
          <source>This is a typesafe enumeration of the &lt;em&gt;well-known&lt;/em&gt; attributes that contribute to a color.</source>
          <target state="translated">이것은 색상에 기여 하는 &lt;em&gt;잘 알려진&lt;/em&gt; 속성 의 형식이 안전한 열거입니다 .</target>
        </trans-unit>
        <trans-unit id="c8ed375b5d1486e82bc867fd139b4a4db302669d" translate="yes" xml:space="preserve">
          <source>This is a typesafe enumeration of the &lt;em&gt;well-known&lt;/em&gt; attributes that contribute to a color. These are aliased by the outer class for general presentation.</source>
          <target state="translated">이것은 색상에 기여 하는 &lt;em&gt;잘 알려진&lt;/em&gt; 속성 의 형식이 안전한 열거입니다 . 이들은 일반적인 표현을 위해 외부 클래스에 의해 별칭이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="aafed6b856dab7694de472359b29b565cbdcc666" translate="yes" xml:space="preserve">
          <source>This is a typesafe enumeration of the &lt;em&gt;well-known&lt;/em&gt; attributes that contribute to a font.</source>
          <target state="translated">이것은 글꼴에 기여 하는 &lt;em&gt;잘 알려진&lt;/em&gt; 속성 의 형식이 안전한 열거입니다 .</target>
        </trans-unit>
        <trans-unit id="c8e2a8484b89c43b5a994ad53f5e85d5f6b268b4" translate="yes" xml:space="preserve">
          <source>This is a typesafe enumeration of the &lt;em&gt;well-known&lt;/em&gt; attributes that contribute to a font. These are aliased by the outer class for general presentation.</source>
          <target state="translated">이것은 글꼴에 기여 하는 &lt;em&gt;잘 알려진&lt;/em&gt; 속성 의 형식이 안전한 열거입니다 . 이들은 일반적인 표현을 위해 외부 클래스에 의해 별칭이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="dcefd9e97b47a3dcaa7c005c0c42a494974d4946" translate="yes" xml:space="preserve">
          <source>This is a typesafe enumeration of the &lt;em&gt;well-known&lt;/em&gt; attributes that contribute to a paragraph style.</source>
          <target state="translated">단락 스타일에 기여 하는 &lt;em&gt;잘 알려진&lt;/em&gt; 속성 의 형식이 안전한 열거 입니다.</target>
        </trans-unit>
        <trans-unit id="38ec553e296036fe142b1febe7af205611300a1c" translate="yes" xml:space="preserve">
          <source>This is a typesafe enumeration of the &lt;em&gt;well-known&lt;/em&gt; attributes that contribute to a paragraph style. These are aliased by the outer class for general presentation.</source>
          <target state="translated">단락 스타일에 기여 하는 &lt;em&gt;잘 알려진&lt;/em&gt; 속성 의 형식이 안전한 열거 입니다. 이들은 일반적인 표현을 위해 외부 클래스에 의해 별칭이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="8aa043856befd05c11fd9452ca267a1820fc5e48" translate="yes" xml:space="preserve">
          <source>This is a useful hook for cleaning up state no longer needed once undoing or redoing is impossible--for example, deleting file resources used by objects that can no longer be undeleted. &lt;code&gt;UndoManager&lt;/code&gt; calls this before it dequeues edits.</source>
          <target state="translated">이는 실행 취소 또는 다시 실행이 불가능한 경우 더 이상 필요하지 않은 상태를 정리하는 데 유용한 후크입니다 (예 : 더 이상 삭제 취소 할 수없는 객체에서 사용하는 파일 리소스 삭제). &lt;code&gt;UndoManager&lt;/code&gt; 는 편집을 대기열에서 빼기 전에 이것을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="01084dceb461526b617297bafd51f11e7a439210" translate="yes" xml:space="preserve">
          <source>This is a utility class that can be used by beans that support bound properties.</source>
          <target state="translated">바운드 특성을 지원하는 Bean에서 사용할 수있는 유틸리티 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="3b0a3eede1c3963cf6966a668b7be5229af3d0a8" translate="yes" xml:space="preserve">
          <source>This is a utility class that can be used by beans that support bound properties. It manages a list of listeners and dispatches &lt;a href=&quot;propertychangeevent&quot;&gt;&lt;code&gt;PropertyChangeEvent&lt;/code&gt;&lt;/a&gt;s to them. You can use an instance of this class as a member field of your bean and delegate these types of work to it. The &lt;a href=&quot;propertychangelistener&quot;&gt;&lt;code&gt;PropertyChangeListener&lt;/code&gt;&lt;/a&gt; can be registered for all properties or for a property specified by name.</source>
          <target state="translated">바운드 특성을 지원하는 Bean에서 사용할 수있는 유틸리티 클래스입니다. 리스너리스트를 관리하고 &lt;a href=&quot;propertychangeevent&quot;&gt; &lt;code&gt;PropertyChangeEvent&lt;/code&gt; &lt;/a&gt; 를 리스너에게 전달 합니다. 이 클래스의 인스턴스를 Bean의 멤버 필드로 사용하여 이러한 유형의 작업을 위임 할 수 있습니다. &lt;a href=&quot;propertychangelistener&quot;&gt; &lt;code&gt;PropertyChangeListener&lt;/code&gt; &lt;/a&gt; 모든 속성 또는 지정된 이름의 속성에 대해 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d19549616feac6415c714ea10468a1e96f848c97" translate="yes" xml:space="preserve">
          <source>This is a utility class that can be used by beans that support constrained properties.</source>
          <target state="translated">제한된 특성을 지원하는 Bean에서 사용할 수있는 유틸리티 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="3be5b5cb8b7dd31dfd8d66f53b49f9b65a0db827" translate="yes" xml:space="preserve">
          <source>This is a utility class that can be used by beans that support constrained properties. It manages a list of listeners and dispatches &lt;a href=&quot;propertychangeevent&quot;&gt;&lt;code&gt;PropertyChangeEvent&lt;/code&gt;&lt;/a&gt;s to them. You can use an instance of this class as a member field of your bean and delegate these types of work to it. The &lt;a href=&quot;vetoablechangelistener&quot;&gt;&lt;code&gt;VetoableChangeListener&lt;/code&gt;&lt;/a&gt; can be registered for all properties or for a property specified by name.</source>
          <target state="translated">제한된 특성을 지원하는 Bean에서 사용할 수있는 유틸리티 클래스입니다. 리스너리스트를 관리하고 &lt;a href=&quot;propertychangeevent&quot;&gt; &lt;code&gt;PropertyChangeEvent&lt;/code&gt; &lt;/a&gt; 를 리스너에게 전달 합니다. 이 클래스의 인스턴스를 Bean의 멤버 필드로 사용하여 이러한 유형의 작업을 위임 할 수 있습니다. &lt;a href=&quot;vetoablechangelistener&quot;&gt; &lt;code&gt;VetoableChangeListener&lt;/code&gt; &lt;/a&gt; 모든 속성 또는 지정된 이름의 속성에 대해 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a29d619c80c8650820b7103ca80c45d788c26dc" translate="yes" xml:space="preserve">
          <source>This is a utility class used within the per-message GSSContext methods to convey per-message properties.</source>
          <target state="translated">메시지 별 속성을 전달하기 위해 메시지 별 GSSContext 메서드 내에서 사용되는 유틸리티 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="9b5f358fd3f32097ce738fe95328be3777413d93" translate="yes" xml:space="preserve">
          <source>This is a utility method that helps event handlers figure out where to send the focus when the popup is brought up.</source>
          <target state="translated">이것은 이벤트 핸들러가 팝업이 표시 될 때 포커스를 보낼 위치를 파악하는 데 도움이되는 유틸리티 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="5345e7bc21f2edec0b3502ae001c1a2dc643d493" translate="yes" xml:space="preserve">
          <source>This is a utility method that helps event handlers figure out where to send the focus when the popup is brought up. The standard implementation delegates the focus to the editor (if the combo box is editable) or to the JComboBox if it is not editable.</source>
          <target state="translated">이것은 이벤트 핸들러가 팝업이 표시 될 때 포커스를 보낼 위치를 파악하는 데 도움이되는 유틸리티 메서드입니다. 표준 구현은 포커스를 편집기 (콤보 상자가 편집 가능한 경우) 또는 JComboBox (편집 할 수없는 경우)에 위임합니다.</target>
        </trans-unit>
        <trans-unit id="acd442f210445dbbc32c877f5d06c5c233acc583" translate="yes" xml:space="preserve">
          <source>This is a utility method to help in loading icon images.</source>
          <target state="translated">아이콘 이미지를로드하는 데 도움이되는 유틸리티 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="d31108f927cb982cb85a92cad07a664cd3c0a6f9" translate="yes" xml:space="preserve">
          <source>This is a utility method to help in loading icon images. It takes the name of a resource file associated with the current object's class file and loads an image object from that file. Typically images will be GIFs.</source>
          <target state="translated">아이콘 이미지를로드하는 데 도움이되는 유틸리티 방법입니다. 현재 객체의 클래스 파일과 관련된 리소스 파일의 이름을 가져와 해당 파일에서 이미지 객체를로드합니다. 일반적으로 이미지는 GIF입니다.</target>
        </trans-unit>
        <trans-unit id="db051e9d5703d4dd6d2efbb762c35ab0a75469a7" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Duration&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;Duration&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="2be9491526db295587b2e489d1760e589f7766e4" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;HijrahDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;HijrahDate&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="f9ebc9d394afc85407e28f7fc6976860c6d08162" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Instant&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;Instant&lt;/code&gt; 인스턴스 에서 아이디에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), 아이디 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="e018df6a28bbbcbd231d6281d29b3e936cd88e60" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;JapaneseDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;JapaneseDate&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="494d3e8e30f9011f1cdcda210eb8686777f91916" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;LocalDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;LocalDate&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="4e5076d4a09c5c4249687174e07abedd30ab9b4c" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;LocalDateTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;LocalDateTime&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="9f0db73c4b96fefd63f2e00ac7d9cf510629a618" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;LocalTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;LocalTime&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="90319b4136346b5ffec6d6b3cd2d2d5a1e6d46e2" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;MinguoDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;MinguoDate&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="ac04185fa9f728229e4221fd9c39acea84a0ffc4" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;MonthDay&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;MonthDay&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="2ee0ef855bb12b3bef14522678e734ad9b230e48" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OffsetDateTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;OffsetDateTime&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="e33daf7e991f9944ffd875df2ed8e2f886cdc3ae" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OffsetTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;OffsetTime&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="3330e449971a1d5eaf69f40e260dc27fda86ef09" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Optional&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;Optional&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="cd1f28591dfcdb110e5da476e0ff97335ab8103e" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OptionalDouble&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;OptionalDouble&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="e74c1ef2981faa175203df98990a14b0eebd0491" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OptionalInt&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;OptionalInt&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="5c688254c5025afc4f2a875a659e93dae44820a2" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OptionalLong&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;OptionalLong&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="d5c50720880481fd20cf0256ce8bf0f67a2daa02" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Period&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;Period&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="df011717331e007b4a641b1d63a3ecc13b21c574" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="97f328bfd3f2f368018cd3747dc3e50528ab59f1" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Year&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;Year&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="8a1200a7d72bbd3ac59359f0efb0cc7e0266be13" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;YearMonth&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;YearMonth&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="da89bc5dde597a447d39a9b10f407ac910c7e3c4" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ZoneId&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;ZoneId&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="6fac88b14dc78105f4f3efd35f1db2d29c05bedd" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ZoneOffset&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;ZoneOffset&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="343748352d26af32da2cdf02c0dbb9052e7cc00e" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ZonedDateTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이것은 가치 기반 클래스입니다. &lt;code&gt;ZonedDateTime&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 등식 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. &lt;code&gt;equals&lt;/code&gt; 방법은 비교를 위해 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="a86b9ebae5d067fb26168ba4323056fbed86181d" translate="yes" xml:space="preserve">
          <source>This is a very useful mechanism for avoiding deadlocks. If a thread is executing in a critical section (i.e., it has entered one or more monitors), calling other synchronized code may cause deadlocks. To avoid the potential deadlocks, an &lt;code&gt;ActiveEvent&lt;/code&gt; can be created to run the second section of code at later time. If there is contention on the monitor, the second thread will simply block until the first thread has finished its work and exited its monitors.</source>
          <target state="translated">이것은 교착 상태를 피하는 데 매우 유용한 메커니즘입니다. 스레드가 중요한 섹션에서 실행중인 경우 (즉, 하나 이상의 모니터에 들어간 경우) 다른 동기화 된 코드를 호출하면 교착 상태가 발생할 수 있습니다. 잠재적 교착 상태를 방지하기 위해 &lt;code&gt;ActiveEvent&lt;/code&gt; 를 만들어 나중에 코드의 두 번째 섹션을 실행할 수 있습니다. 모니터에 경합이있는 경우 두 번째 스레드는 첫 번째 스레드가 작업을 완료하고 모니터를 종료 할 때까지 단순히 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="ba4466fc45b12680b47146b039df59893c71b17e" translate="yes" xml:space="preserve">
          <source>This is a writer for HTMLDocuments.</source>
          <target state="translated">이것은 HTMLDocuments 작성자입니다.</target>
        </trans-unit>
        <trans-unit id="cd13856617975e50f0da0abb632ec707744e7e01" translate="yes" xml:space="preserve">
          <source>This is almost equivalent to the following code, with some differences noted below:</source>
          <target state="translated">이는 다음 코드와 거의 동일하지만 아래에 몇 가지 차이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4d480278d056eccb680f14d9dc395194160fe1d" translate="yes" xml:space="preserve">
          <source>This is an &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt;&lt;code&gt;unordered&lt;/code&gt;&lt;/a&gt; Collector.</source>
          <target state="translated">이것은 &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt; &lt;code&gt;unordered&lt;/code&gt; &lt;/a&gt; 가 없는 수집기입니다.</target>
        </trans-unit>
        <trans-unit id="f8db533e2cb8b4d41e0d2eab1742a8f7f7f42602" translate="yes" xml:space="preserve">
          <source>This is an &lt;a href=&quot;package-summary#StreamOps&quot;&gt; intermediate operation&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;package-summary#StreamOps&quot;&gt;중간 작업&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ca5bbe7ff8ccd0893a3cb3fcb1a02b79ad25d960" translate="yes" xml:space="preserve">
          <source>This is an &lt;a href=&quot;package-summary#StreamOps&quot;&gt;intermediate operation&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;package-summary#StreamOps&quot;&gt;중간 작업&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ce019e4655ca904f0b9b4d64e2ad6c0b2d07ad76" translate="yes" xml:space="preserve">
          <source>This is an abstract class and cannot be instantiated directly.</source>
          <target state="translated">이것은 추상 클래스이며 직접 인스턴스화 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="81c394fbe5c7a1a440a606b3047e5efc3af2badf" translate="yes" xml:space="preserve">
          <source>This is an abstract class and cannot be instantiated directly. Instances must be obtained from a suitable factory or query method.</source>
          <target state="translated">이것은 추상 클래스이며 직접 인스턴스화 할 수 없습니다. 인스턴스는 적절한 팩토리 또는 쿼리 메서드에서 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="26f219c73e1205f8e307da3efe39fa4566429f2a" translate="yes" xml:space="preserve">
          <source>This is an abstract class for representing the system policy for Subject-based authorization. A subclass implementation of this class provides a means to specify a Subject-based access control &lt;code&gt;Policy&lt;/code&gt;.</source>
          <target state="translated">이것은 주제 기반 권한 부여에 대한 시스템 정책을 나타내는 추상 클래스입니다. 이 클래스의 서브 클래스 구현은 주제 기반 액세스 제어 &lt;code&gt;Policy&lt;/code&gt; 을 지정하는 수단을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="75a98b118f48eb7b0569e8c7edfa37557bb336a7" translate="yes" xml:space="preserve">
          <source>This is an abstract class that cannot be instantiated directly.</source>
          <target state="translated">이것은 직접 인스턴스화 할 수없는 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="1a4dad500170946632e3c1abe3fb7cb543e9b820" translate="yes" xml:space="preserve">
          <source>This is an abstract class that cannot be instantiated directly. Instances must be obtained from a suitable factory or query method.</source>
          <target state="translated">이것은 직접 인스턴스화 할 수없는 추상 클래스입니다. 인스턴스는 적절한 팩토리 또는 쿼리 메서드에서 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="434ba78e63b5cd6ad2c8c964bdab56b2c5b058f2" translate="yes" xml:space="preserve">
          <source>This is an abstract class that cannot be instantiated directly. Type-specific implementation subclasses are available for instantiation and provide a number of formats for storing the information necessary to satisfy the various accessor methods below.</source>
          <target state="translated">이것은 직접 인스턴스화 할 수없는 추상 클래스입니다. 유형별 구현 하위 클래스는 인스턴스화에 사용할 수 있으며 아래의 다양한 접근 자 메서드를 충족하는 데 필요한 정보를 저장하기위한 여러 형식을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="41a9fd2e0c829eb4ead734d9c56319e158f7554b" translate="yes" xml:space="preserve">
          <source>This is an abstract class that cannot be instantiated directly. Type-specific implementation subclasses are available for instantiation and provide a number of formats for storing the information necessary to satisfy the various accessory methods below.</source>
          <target state="translated">이것은 직접 인스턴스화 할 수없는 추상 클래스입니다. 유형별 구현 하위 클래스는 인스턴스화에 사용할 수 있으며 아래의 다양한 액세서리 메서드를 충족하는 데 필요한 정보를 저장하기위한 여러 형식을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="72e4063af55512d59af15a29ad7bce5a2d420583" translate="yes" xml:space="preserve">
          <source>This is an abstract class that defines the methods common to all &lt;code&gt;CertPath&lt;/code&gt;s. Subclasses can handle different kinds of certificates (X.509, PGP, etc.).</source>
          <target state="translated">이것은 모든 &lt;code&gt;CertPath&lt;/code&gt; 에 공통의 메소드를 정의하는 추상 클래스입니다 . 서브 클래스는 다양한 종류의 인증서 (X.509, PGP 등)를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="1e3ef7d2171a6918e94882f35a1e60fab5544fa0" translate="yes" xml:space="preserve">
          <source>This is an abstract class. Concrete subclasses define the details of the client connection objects, such as whether they use JRMP or IIOP.</source>
          <target state="translated">이것은 추상 클래스입니다. 구체적 서브 클래스는 클라이언트 연결 오브젝트의 세부 사항 (예 : JRMP 또는 IIOP 사용 여부)을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="1fa0ec377fee0d07c48da7076a0d3731b0ce8050" translate="yes" xml:space="preserve">
          <source>This is an abstract class. Concrete subclasses define the details of the client connection objects.</source>
          <target state="translated">이것은 추상 클래스입니다. 구체적인 하위 클래스는 클라이언트 연결 개체의 세부 정보를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="70cd7da95b0fcc86b724fc2692da86565b6445c2" translate="yes" xml:space="preserve">
          <source>This is an exception that is thrown whenever a reference is made to a non-existent ACL (Access Control List).</source>
          <target state="translated">존재하지 않는 ACL (Access Control List)을 참조 할 때마다 발생하는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="010128e6fb649061dbfcd00afbf2f75b833bec88" translate="yes" xml:space="preserve">
          <source>This is an exception that is thrown whenever an attempt is made to delete the last owner of an Access Control List.</source>
          <target state="translated">액세스 제어 목록의 마지막 소유자를 삭제하려고 할 때마다 발생하는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="48a66a99ea966a383143cdf191984e7432c1b05e" translate="yes" xml:space="preserve">
          <source>This is an exception that is thrown whenever the modification of an object (such as an Access Control List) is only allowed to be done by an owner of the object, but the Principal attempting the modification is not an owner.</source>
          <target state="translated">액세스 제어 목록과 같은 개체의 수정이 개체의 소유자 만 수행 할 수 있지만 수정을 시도하는 주체가 소유자가 아닌 경우에만 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e08d8b3488f7a4983c33273b2c50a405c41a2490" translate="yes" xml:space="preserve">
          <source>This is an external encoded form for the key used when a standard representation of the key is needed outside the Java Virtual Machine, as when transmitting the key to some other party. The key is encoded according to a standard format (such as X.509 &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; or PKCS#8), and is returned using the &lt;a href=&quot;#getEncoded()&quot;&gt;&lt;code&gt;getEncoded&lt;/code&gt;&lt;/a&gt; method. Note: The syntax of the ASN.1 type &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; is defined as follows:</source>
          <target state="translated">이것은 키를 다른 당사자에게 전송할 때와 같이 Java Virtual Machine 외부에서 키의 표준 표현이 필요할 때 사용되는 키에 대한 외부 인코딩 형식입니다. 키는 표준 형식 (예 : X.509 &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; 또는 PKCS # 8) 에 따라 인코딩 되며 &lt;a href=&quot;#getEncoded()&quot;&gt; &lt;code&gt;getEncoded&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 반환됩니다 . 참고 : ASN.1 유형 &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; 의 구문은 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="9be8e9f9f47f0a943fca6e3ecc37a48b79f53b55" translate="yes" xml:space="preserve">
          <source>This is an external encoded form for the key used when a standard representation of the key is needed outside the Java Virtual Machine, as when transmitting the key to some other party. The key is encoded according to a standard format (such as X.509 &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; or PKCS#8), and is returned using the &lt;a href=&quot;key#getEncoded--&quot;&gt;&lt;code&gt;getEncoded&lt;/code&gt;&lt;/a&gt; method. Note: The syntax of the ASN.1 type &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; is defined as follows:</source>
          <target state="translated">이는 키를 다른 사람에게 전송할 때와 같이 Java 가상 머신 외부에서 키의 표준 표현이 필요할 때 사용되는 키의 외부 인코딩 양식입니다. 키는 표준 형식 (예 : X.509 &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; 또는 PKCS # 8) 에 따라 인코딩 되며 &lt;a href=&quot;key#getEncoded--&quot;&gt; &lt;code&gt;getEncoded&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 리턴됩니다 . 참고 : ASN.1 유형 &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; 의 구문은 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="903dba422590f39b3723df4aa7227c07eb444066" translate="yes" xml:space="preserve">
          <source>This is an extremely dangerous permission to grant. Malicious applications that can instantiate their own class loaders could then load their own rogue classes into the system. These newly loaded classes could be placed into any protection domain by the class loader, thereby automatically granting the classes the permissions for that domain.</source>
          <target state="translated">이것은 매우 위험한 허가입니다. 자체 클래스 로더를 인스턴스화 할 수있는 악성 응용 프로그램은 자체 불량 클래스를 시스템에로드 할 수 있습니다. 새로로드 된 이러한 클래스는 클래스 로더가 보호 도메인에 배치 할 수 있으므로 클래스에 해당 도메인에 대한 권한이 자동으로 부여됩니다.</target>
        </trans-unit>
        <trans-unit id="45254637bebfc1107d1fef78a2a236f73f27bcc9" translate="yes" xml:space="preserve">
          <source>This is an illegal combination since &lt;code&gt;storeKey&lt;/code&gt; is set to true but the key can not be obtained either by prompting the user or from the keytab, or from the shared state. A configuration error will occur.</source>
          <target state="translated">&lt;code&gt;storeKey&lt;/code&gt; 가 true로 설정되어 있지만 사용자에게 프롬프트를 표시하거나 키 탭 또는 공유 상태에서 키를 얻을 수 없기 때문에 이는 잘못된 조합 입니다. 구성 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a51c17b00cfcfd7314531d58bdc500d22ac613d2" translate="yes" xml:space="preserve">
          <source>This is an illegal combination since &lt;code&gt;useTicketCache&lt;/code&gt; is not set to true and renewTGT is set. A configuration error will occur.</source>
          <target state="translated">&lt;code&gt;useTicketCache&lt;/code&gt; 가 true로 설정되지 않았고 renewTGT가 설정 되었기 때문에 이것은 잘못된 조합 입니다. 구성 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f076c46d3dee8b9ce57a09cb3801e919d4234ded" translate="yes" xml:space="preserve">
          <source>This is an illegal combination since &lt;code&gt;useTicketCache&lt;/code&gt; is not set to true and the ticketCache is set. A configuration error will occur.</source>
          <target state="translated">&lt;code&gt;useTicketCache&lt;/code&gt; 가 true로 설정되지 않고 ticketCache 가 설정되어 있으므로 이는 잘못된 조합 입니다. 구성 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="041bf904385ac2608129bd1f9cad00598abf935d" translate="yes" xml:space="preserve">
          <source>This is an illegal combination since none of &lt;code&gt;useTicketCache,
 useKeyTab, useFirstPass&lt;/code&gt; and &lt;code&gt;tryFirstPass&lt;/code&gt; is set and the user can not be prompted for the password.</source>
          <target state="translated">&lt;code&gt;useTicketCache, useKeyTab, useFirstPass&lt;/code&gt; 및 &lt;code&gt;tryFirstPass&lt;/code&gt; 가 설정되어 있지 않고 사용자에게 암호를 입력하라는 메시지가 표시되지 않으므로 이는 잘못된 조합 입니다.</target>
        </trans-unit>
        <trans-unit id="441faaaffefbbef97ea05406916c19f219202bc4" translate="yes" xml:space="preserve">
          <source>This is an illegal combination since useKeyTab is not set to true and the keyTab is set. A configuration error will occur.</source>
          <target state="translated">useKeyTab이 true로 설정되어 있지 않고 keyTab이 설정되어 있으므로 이는 잘못된 조합입니다. 구성 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="84f43451804d3b84cfb6c81fd648179b0ec74c5d" translate="yes" xml:space="preserve">
          <source>This is an immutable and thread-safe class.</source>
          <target state="translated">이것은 불변의 thread 세이프 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="7b8b9cf0e645a92373798c47b0a4a435c6439661" translate="yes" xml:space="preserve">
          <source>This is an immutable and thread-safe enum.</source>
          <target state="translated">이것은 불변의 thread 세이프 열거 형입니다.</target>
        </trans-unit>
        <trans-unit id="27bd04eadac5cd71dbdcbb7fe982d290446c8865" translate="yes" xml:space="preserve">
          <source>This is an implementation of &lt;code&gt;TableModel&lt;/code&gt; that uses a &lt;code&gt;Vector&lt;/code&gt; of &lt;code&gt;Vectors&lt;/code&gt; to store the cell value objects.</source>
          <target state="translated">이것의 구현 &lt;code&gt;TableModel&lt;/code&gt; 사용하는 &lt;code&gt;Vector&lt;/code&gt; 의 &lt;code&gt;Vectors&lt;/code&gt; 세포 값 객체를 저장할.</target>
        </trans-unit>
        <trans-unit id="120e11953aaef1d31781cc3045ff32eb18dfcd58" translate="yes" xml:space="preserve">
          <source>This is an implementation of the &lt;code&gt;DesktopManager&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;DesktopManager&lt;/code&gt; 의 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="89164fecdf0d27f379291c9f8fd377ee20248a09" translate="yes" xml:space="preserve">
          <source>This is an implementation of the &lt;code&gt;DesktopManager&lt;/code&gt;. It currently implements the basic behaviors for managing &lt;code&gt;JInternalFrame&lt;/code&gt;s in an arbitrary parent. &lt;code&gt;JInternalFrame&lt;/code&gt;s that are not children of a &lt;code&gt;JDesktop&lt;/code&gt; will use this component to handle their desktop-like actions.</source>
          <target state="translated">이것은 &lt;code&gt;DesktopManager&lt;/code&gt; 의 구현입니다 . 현재 임의의 부모에서 &lt;code&gt;JInternalFrame&lt;/code&gt; 을 관리하기위한 기본 동작을 구현합니다 . &lt;code&gt;JDesktop&lt;/code&gt; 의 자식이 아닌 &lt;code&gt;JInternalFrame&lt;/code&gt; 은이 구성 요소를 사용하여 데스크톱과 같은 작업을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="e3cc63dede934fb82f7d897cb9660815ade2e1d7" translate="yes" xml:space="preserve">
          <source>This is an integer-based version of the Julian Day Number. Julian Day is a well-known system that represents the count of whole days since day 0, which is defined to be January 1, 4713 BCE in the Julian calendar, and -4713-11-24 Gregorian. The field has &quot;JulianDay&quot; as 'name', and 'DAYS' as 'baseUnit'. The field always refers to the local date-time, ignoring the offset or zone.</source>
          <target state="translated">이것은 율리우스 일 수의 정수 기반 버전입니다. Julian Day는 0 일 이후의 하루 수를 나타내는 잘 알려진 시스템으로, 율리우스 력으로 기원전 4713 년 1 월 1 일과 그레고리력으로 -4713-11-24로 정의됩니다. 이 필드의 이름은 &quot;JulianDay&quot;이며 'DAYS'는 'baseUnit'입니다. 이 필드는 항상 오프셋 또는 영역을 무시하고 현지 날짜-시간을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c76b9785544144c309bda399e12e307a4ab5bfa8" translate="yes" xml:space="preserve">
          <source>This is an integer-based version of the Modified Julian Day Number. Modified Julian Day (MJD) is a well-known system that counts days continuously. It is defined relative to astronomical Julian Day as &lt;code&gt;MJD = JD - 2400000.5&lt;/code&gt;. Each Modified Julian Day runs from midnight to midnight. The field always refers to the local date-time, ignoring the offset or zone.</source>
          <target state="translated">이것은 수정 된 율리우스 일 수의 정수 기반 버전입니다. MJD (Modified Julian Day)는 일을 지속적으로 계산하는 잘 알려진 시스템입니다. 천문학적 줄리안 데이에 대해 &lt;code&gt;MJD = JD - 2400000.5&lt;/code&gt; 됩니다. 수정 된 줄리안 데이는 자정부터 자정까지입니다. 이 필드는 항상 오프셋 또는 영역을 무시하고 현지 날짜-시간을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8e72b4b2f096ca37313ce16df6f52598ee2ed1c2" translate="yes" xml:space="preserve">
          <source>This is an interface of abstract methods for managing a variety of identity certificates. An identity certificate is a guarantee by a principal that a public key is that of another principal. (A principal represents an entity such as an individual user, a group, or a corporation.)</source>
          <target state="translated">이것은 다양한 ID 인증서를 관리하기위한 추상적 인 방법의 인터페이스입니다. 신원 인증서는 공개 키가 다른 사용자의 공개 키임을 보증하는 것입니다. (주체는 개인 사용자, 그룹 또는 회사와 같은 엔티티를 나타냅니다.)</target>
        </trans-unit>
        <trans-unit id="00eace08954bc3ee4d091b8e56aacf02c0a7a074" translate="yes" xml:space="preserve">
          <source>This is an optional extension handler for SAX2 to provide lexical information about an XML document, such as comments and CDATA section boundaries. XML readers are not required to recognize this handler, and it is not part of core-only SAX2 distributions.</source>
          <target state="translated">주석 및 CDATA 섹션 경계와 같은 XML 문서에 대한 어휘 정보를 제공하기위한 SAX2 용 선택적 확장 핸들러입니다. XML 판독기는이 핸들러를 인식 할 필요가 없으며 코어 전용 SAX2 배포의 일부가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="6237697ed117d696eb3a26c56e5341eec2ff5ca2" translate="yes" xml:space="preserve">
          <source>This is an optional extension handler for SAX2 to provide more complete information about DTD declarations in an XML document. XML readers are not required to recognize this handler, and it is not part of core-only SAX2 distributions.</source>
          <target state="translated">이것은 XML 문서에서 DTD 선언에 대한보다 완전한 정보를 제공하기위한 SAX2의 선택적 확장 핸들러입니다. XML 판독기는이 핸들러를 인식 할 필요가 없으며 코어 전용 SAX2 배포의 일부가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="77d338608b1565f69f52b4f60e50c12c8dad9eb9" translate="yes" xml:space="preserve">
          <source>This is available for backward compatibility to code that called this method on &lt;code&gt;java.awt.TextComponent&lt;/code&gt;. This is implemented to forward to the &lt;code&gt;Caret&lt;/code&gt; implementation which is where the actual selection is maintained.</source>
          <target state="translated">이것은 &lt;code&gt;java.awt.TextComponent&lt;/code&gt; 에서이 메소드를 호출 한 코드에 대한 하위 호환성을 위해 사용할 수 있습니다 . 이것은 실제 선택이 유지되는 &lt;code&gt;Caret&lt;/code&gt; 구현으로 전달하기 위해 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="46b8baf47c2eb5369e5b136562169ad49fae7984" translate="yes" xml:space="preserve">
          <source>This is called anytime the caret moves over a different location.</source>
          <target state="translated">캐럿이 다른 위치로 이동할 때마다 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2cba5a8d57be854d95ee880173b2e8835a01ac67" translate="yes" xml:space="preserve">
          <source>This is called by a child to indicate its preferred span has changed.</source>
          <target state="translated">이것은 선호하는 범위가 변경되었음을 나타 내기 위해 자식에 의해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="903f694471da3c0c95d17eae751f20a1fe05aa54" translate="yes" xml:space="preserve">
          <source>This is called by a child to indicate its preferred span has changed. This is implemented to throw away cached layout information so that new calculations will be done the next time the children need an allocation.</source>
          <target state="translated">이것은 선호하는 범위가 변경되었음을 나타 내기 위해 자식에 의해 호출됩니다. 이것은 캐시 된 레이아웃 정보를 버리기 위해 구현되어 다음에 자식에게 할당이 필요할 때 새로운 계산이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="a8d61df8db95631fecaa951131d2914ba63bf100" translate="yes" xml:space="preserve">
          <source>This is called by the nested wrapped line views to determine the break location.</source>
          <target state="translated">이것은 중단 위치를 결정하기 위해 내포 된 줄 바꿈 된 선보기에 의해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="94349c44dfb97f2128ee04e48d18cda551ed2b8f" translate="yes" xml:space="preserve">
          <source>This is called by the nested wrapped line views to determine the break location. This can be reimplemented to alter the breaking behavior. It will either break at word or character boundaries depending upon the break argument given at construction.</source>
          <target state="translated">이것은 중단 위치를 결정하기 위해 내포 된 줄 바꿈 된 선보기에 의해 호출됩니다. 이는 중단 동작을 변경하기 위해 다시 구현할 수 있습니다. 구성시 주어진 break 인수에 따라 단어 또는 문자 경계에서 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="96cc34d0becca8008b3e851f6a03b5601d2dc565" translate="yes" xml:space="preserve">
          <source>This is called to notify the listener that it is being bound into an SSLSession.</source>
          <target state="translated">리스너에게 SSLSession에 바인드되었음을 알리기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2930c84f7410730984796c2fa9f9bd4f9be76740" translate="yes" xml:space="preserve">
          <source>This is called to notify the listener that it is being unbound from a SSLSession.</source>
          <target state="translated">SSLSession에서 바운드되지 않음을 리스너에게 알리기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="8a67832c7b5557d1eb29706727f56695729b95a7" translate="yes" xml:space="preserve">
          <source>This is comparable to writing a &lt;code&gt;MouseListener&lt;/code&gt; in which all of the methods except &lt;code&gt;mousePressed&lt;/code&gt; are no-ops:</source>
          <target state="translated">이는 &lt;code&gt;mousePressed&lt;/code&gt; 를 제외한 모든 메소드 가 작동하지 않는 &lt;code&gt;MouseListener&lt;/code&gt; 작성과 비교할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ee18249988bb55c3b3a9233be63b45b8a1b90623" translate="yes" xml:space="preserve">
          <source>This is dangerous because malicious code can replace the actual object with one which has incorrect or malignant data.</source>
          <target state="translated">악성 코드가 실제 개체를 부정확하거나 악성 데이터가있는 개체로 대체 할 수 있기 때문에 위험합니다.</target>
        </trans-unit>
        <trans-unit id="82186227b9628325e87a15ababffbb65738f260a" translate="yes" xml:space="preserve">
          <source>This is dangerous in that information (possibly confidential) and methods normally unavailable would be accessible to malicious code.</source>
          <target state="translated">이것은 정보 (아마 기밀 정보)와 일반적으로 사용할 수없는 방법으로 악성 코드에 액세스 할 수 있다는 점에서 위험합니다.</target>
        </trans-unit>
        <trans-unit id="3923231eb70fcc2f5d33cddcd33125ef0e2f6ce6" translate="yes" xml:space="preserve">
          <source>This is done as follows:</source>
          <target state="translated">이것은 다음과 같이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="fc63fab45c4471069844d52ce576fc70d2b9eacd" translate="yes" xml:space="preserve">
          <source>This is done in the paint method, which is pretty much like a component paint method. Views are expected to potentially populate a fairly large tree. A &lt;code&gt;View&lt;/code&gt; has the following semantics for rendering:</source>
          <target state="translated">이것은 구성 요소 페인트 방법과 매우 유사한 페인트 방법에서 수행됩니다. 뷰는 잠재적으로 상당히 큰 트리를 채울 것으로 예상됩니다. &lt;code&gt;View&lt;/code&gt; 렌더링을위한 다음과 같은 의미가 있습니다 :</target>
        </trans-unit>
        <trans-unit id="20dede5137a017573e55a26ab1af924b585e4561" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdate#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;LocalDate.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../localdate#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;LocalDate.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b08380682f55ba97d8fa2e8eaa92bc75db71e899" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdate#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;LocalDate.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../localdate#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;LocalDate.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="d9d9d83d3ac0e3663f0cc1510f34657878d13faf" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdate#of(int,int,int)&quot;&gt;&lt;code&gt;LocalDate.of(int, int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../localdate#of(int,int,int)&quot;&gt; &lt;code&gt;LocalDate.of(int, int, int)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b7334ddae536980dc640f5aa6512f8edbf1c2ac7" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdate#of-int-int-int-&quot;&gt;&lt;code&gt;LocalDate.of(int, int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../localdate#of-int-int-int-&quot;&gt; &lt;code&gt;LocalDate.of(int, int, int)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b8978979a88c86dfbde586c47dccae224bb4df97" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdate#ofEpochDay(long)&quot;&gt;&lt;code&gt;LocalDate.ofEpochDay(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../localdate#ofEpochDay(long)&quot;&gt; &lt;code&gt;LocalDate.ofEpochDay(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="d46a1cb7630da5692c35eb790bb637485fc53de0" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdate#ofEpochDay-long-&quot;&gt;&lt;code&gt;LocalDate.ofEpochDay(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../localdate#ofEpochDay-long-&quot;&gt; &lt;code&gt;LocalDate.ofEpochDay(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="4904dc168f244b9e285e940b7133d12d608d62cd" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdate#ofYearDay(int,int)&quot;&gt;&lt;code&gt;LocalDate.ofYearDay(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../localdate#ofYearDay(int,int)&quot;&gt; &lt;code&gt;LocalDate.ofYearDay(int, int)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="d1b35eadf657b9fb567f5812bb951cf79258156b" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdate#ofYearDay-int-int-&quot;&gt;&lt;code&gt;LocalDate.ofYearDay(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../localdate#ofYearDay-int-int-&quot;&gt; &lt;code&gt;LocalDate.ofYearDay(int, int)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="7cc5a48ed5fe1efd8998b61ebb782723abddcf8f" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdatetime#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;LocalDateTime.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../localdatetime#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;LocalDateTime.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="47832d281a535c5af3493409800459879e08ace2" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;LocalDateTime.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../localdatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;LocalDateTime.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="8830002ee94620cc8f808a3e392d04ad9ab5fb64" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../zoneddatetime#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;ZonedDateTime.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../zoneddatetime#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;ZonedDateTime.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="bb00819db1b26a667ce4fa4b3057bcf4364e9aff" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../zoneddatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;ZonedDateTime.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../zoneddatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;ZonedDateTime.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="7a7523848382e75b4c33ce1b9ba2fc3052f9e07e" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../zoneddatetime#ofInstant(java.time.Instant,java.time.ZoneId)&quot;&gt;&lt;code&gt;ZonedDateTime.ofInstant(Instant, ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../zoneddatetime#ofInstant(java.time.Instant,java.time.ZoneId)&quot;&gt; &lt;code&gt;ZonedDateTime.ofInstant(Instant, ZoneId)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="eeb9c3cf991b539e9b26bfb29940af886d7df231" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../zoneddatetime#ofInstant-java.time.Instant-java.time.ZoneId-&quot;&gt;&lt;code&gt;ZonedDateTime.ofInstant(Instant, ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;../zoneddatetime#ofInstant-java.time.Instant-java.time.ZoneId-&quot;&gt; &lt;code&gt;ZonedDateTime.ofInstant(Instant, ZoneId)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="e3d8a007a95d6fc90c8ca31e75f1f06c7d836035" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;LanguageRange(range, MAX_WEIGHT)&lt;/code&gt;.</source>
          <target state="translated">이는 &lt;code&gt;LanguageRange(range, MAX_WEIGHT)&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="80ddd8795e5560be9f1a64f38c5c6ec9e1a00b14" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;ZonedDateTime.of(zdt.toLocalDateTime(), zdt.getOffset())&lt;/code&gt;.</source>
          <target state="translated">이는 &lt;code&gt;ZonedDateTime.of(zdt.toLocalDateTime(), zdt.getOffset())&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56890b11ccdc1ecfebf967e008cef5b6372b5cba" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling</source>
          <target state="translated">이것은 호출과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="d59df1b72ab27e37fe6b5b730fd2854f2cc0a02b" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;SimpleDateFormat(pattern, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이는 &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;SimpleDateFormat(pattern, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 을 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="492cc34b5dcb47d5a0c6d21653ced486066f9357" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#%3Cinit%3E(java.util.Locale)&quot;&gt;&lt;code&gt;DateFormatSymbols(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이는 &lt;a href=&quot;#%3Cinit%3E(java.util.Locale)&quot;&gt; &lt;code&gt;DateFormatSymbols(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="e685672c12b6cdf380c2c25fb05257af27dff0d2" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#%3Cinit%3E(java.util.Locale)&quot;&gt;&lt;code&gt;DecimalFormatSymbols(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;#%3Cinit%3E(java.util.Locale)&quot;&gt; &lt;code&gt;DecimalFormatSymbols(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 을 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="646ecf06b0b4990d5579c2c93bf4ad6b821a27a1" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#getCurrencyInstance(java.util.Locale)&quot;&gt;&lt;code&gt;getCurrencyInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이는 &lt;a href=&quot;#getCurrencyInstance(java.util.Locale)&quot;&gt; &lt;code&gt;getCurrencyInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="42642dd43bf9619ee722d0c7df99ac7e618fcbd2" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#getDateInstance(int,java.util.Locale)&quot;&gt;&lt;code&gt;getDateInstance(DEFAULT,
     Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이는 &lt;a href=&quot;#getDateInstance(int,java.util.Locale)&quot;&gt; &lt;code&gt;getDateInstance(DEFAULT, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="e88e9a73dc8043c68c1c5fc57f2cc032abd91751" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#getDateInstance(int,java.util.Locale)&quot;&gt;&lt;code&gt;getDateInstance(style,
     Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이는 &lt;a href=&quot;#getDateInstance(int,java.util.Locale)&quot;&gt; &lt;code&gt;getDateInstance(style, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 을 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="659362d04fb2615770b92ed09a615a1c502650e3" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#getDateTimeInstance(int,int,java.util.Locale)&quot;&gt;&lt;code&gt;getDateTimeInstance(DEFAULT,
     DEFAULT, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이는 &lt;a href=&quot;#getDateTimeInstance(int,int,java.util.Locale)&quot;&gt; &lt;code&gt;getDateTimeInstance(DEFAULT, DEFAULT, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="afbfaaa9564cf654e08f50da302ea62104cda2b3" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#getDateTimeInstance(int,int,java.util.Locale)&quot;&gt;&lt;code&gt;getDateTimeInstance(dateStyle,
     timeStyle, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이는 &lt;a href=&quot;#getDateTimeInstance(int,int,java.util.Locale)&quot;&gt; &lt;code&gt;getDateTimeInstance(dateStyle, timeStyle, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 을 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="0716bec874cf793ce915b71a401f42588eac075a" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#getDisplayName(java.util.Locale)&quot;&gt;&lt;code&gt;getDisplayName(Locale.getDefault(Locale.Category.DISPLAY))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이는 &lt;a href=&quot;#getDisplayName(java.util.Locale)&quot;&gt; &lt;code&gt;getDisplayName(Locale.getDefault(Locale.Category.DISPLAY))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="108d5a619869a0344d39ecd83b997dafe5438007" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#getInstance(java.util.Locale)&quot;&gt;&lt;code&gt;getInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이는 &lt;a href=&quot;#getInstance(java.util.Locale)&quot;&gt; &lt;code&gt;getInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="474bdc8f052ca8675b7b5ee5e643d7393d7c82fb" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#getInstant()&quot;&gt;&lt;code&gt;getInstant().toEpochMilli()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;#getInstant()&quot;&gt; &lt;code&gt;getInstant().toEpochMilli()&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="3dd1aa9de566be82be0b0ade64dd8b475d4b3c4d" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#getIntegerInstance(java.util.Locale)&quot;&gt;&lt;code&gt;getIntegerInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이는 &lt;a href=&quot;#getIntegerInstance(java.util.Locale)&quot;&gt; &lt;code&gt;getIntegerInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="b5fdb5680ec03ecfed157ffab9cd34c5736ce8d0" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#getNumberInstance(java.util.Locale)&quot;&gt;&lt;code&gt;getNumberInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이는 &lt;a href=&quot;#getNumberInstance(java.util.Locale)&quot;&gt; &lt;code&gt;getNumberInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="98d8a5aa3be5316857da546eee3bb54b5f82217f" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#getPercentInstance(java.util.Locale)&quot;&gt;&lt;code&gt;getPercentInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이는 &lt;a href=&quot;#getPercentInstance(java.util.Locale)&quot;&gt; &lt;code&gt;getPercentInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f66e563b8db0f0714dd5bc2ef450fed6eaa54b1f" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#getSymbol(java.util.Locale)&quot;&gt;&lt;code&gt;getSymbol(Locale.getDefault(Locale.Category.DISPLAY))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;#getSymbol(java.util.Locale)&quot;&gt; &lt;code&gt;getSymbol(Locale.getDefault(Locale.Category.DISPLAY))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="c1d820e8322c0017d5cd51b486339baa72fe3f6f" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#getTimeInstance(int,java.util.Locale)&quot;&gt;&lt;code&gt;getTimeInstance(DEFAULT,
     Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이는 &lt;a href=&quot;#getTimeInstance(int,java.util.Locale)&quot;&gt; &lt;code&gt;getTimeInstance(DEFAULT, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="98be47eb36d6bd68336695b748b931f4854ad123" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#getTimeInstance(int,java.util.Locale)&quot;&gt;&lt;code&gt;getTimeInstance(style,
     Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이는 &lt;a href=&quot;#getTimeInstance(int,java.util.Locale)&quot;&gt; &lt;code&gt;getTimeInstance(style, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 을 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ff1fbbb6608f00c48aff91b4b75b7af204e35631" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#of(java.util.Locale)&quot;&gt;&lt;code&gt;of(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이는 &lt;a href=&quot;#of(java.util.Locale)&quot;&gt; &lt;code&gt;of(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 호출 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="191a43b476b75d695d91979b5dd78e3a7910632e" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;#setInstant(java.time.Instant)&quot;&gt;&lt;code&gt;setInstant(Instant.ofEpochMilli(millis))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;#setInstant(java.time.Instant)&quot;&gt; &lt;code&gt;setInstant(Instant.ofEpochMilli(millis))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="55a7199f8b839d3c5ba8c5ec1a7a616243bab0a6" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;../lang/math#nextDown(double)&quot;&gt;&lt;code&gt;Math.nextDown(d)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이것은 &lt;a href=&quot;../lang/math#nextDown(double)&quot;&gt; &lt;code&gt;Math.nextDown(d)&lt;/code&gt; &lt;/a&gt; 을 호출하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="caa96943d70cec20cd2c250e877419179b0986cf" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;../lang/math#nextUp(double)&quot;&gt;&lt;code&gt;Math.nextUp(d)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이것은 &lt;a href=&quot;../lang/math#nextUp(double)&quot;&gt; &lt;code&gt;Math.nextUp(d)&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4a57ae1cba24030e3b8229b1eb55973ce1229963" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;currency#getDisplayName-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName(Locale.getDefault(Locale.Category.DISPLAY))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;currency#getDisplayName-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName(Locale.getDefault(Locale.Category.DISPLAY))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="70bb4ca40e07439a79c3da7de6d78fe0a284e3dc" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;currency#getSymbol-java.util.Locale-&quot;&gt;&lt;code&gt;getSymbol(Locale.getDefault(Locale.Category.DISPLAY))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;currency#getSymbol-java.util.Locale-&quot;&gt; &lt;code&gt;getSymbol(Locale.getDefault(Locale.Category.DISPLAY))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="82106b1468274d95d3bc3f8f544fe6dc67d6ddb0" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDateInstance(DEFAULT,
     Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDateInstance(DEFAULT, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="606abad2b5133505b9cc83f29ea9de02de07259a" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDateInstance(style,
     Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDateInstance(style, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="44604b7369a7b284caad58a087b782eff01ebdb4" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformat#getDateTimeInstance-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDateTimeInstance(DEFAULT,
     DEFAULT, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;dateformat#getDateTimeInstance-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDateTimeInstance(DEFAULT, DEFAULT, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="93c158b0050e237254c666224ac7bcaf16d7bbff" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformat#getDateTimeInstance-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDateTimeInstance(dateStyle,
     timeStyle, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;dateformat#getDateTimeInstance-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDateTimeInstance(dateStyle, timeStyle, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d6f03d8278d1398182bd518aed24f438d88d3fb8" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformat#getTimeInstance-int-java.util.Locale-&quot;&gt;&lt;code&gt;getTimeInstance(DEFAULT,
     Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;dateformat#getTimeInstance-int-java.util.Locale-&quot;&gt; &lt;code&gt;getTimeInstance(DEFAULT, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="2735042011ede9f9d8e7d68812f636df49c94cd7" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformat#getTimeInstance-int-java.util.Locale-&quot;&gt;&lt;code&gt;getTimeInstance(style,
     Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;dateformat#getTimeInstance-int-java.util.Locale-&quot;&gt; &lt;code&gt;getTimeInstance(style, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="196d984cffaf2f193ca06157a9274cfd7f1215bd" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformatsymbols#DateFormatSymbols-java.util.Locale-&quot;&gt;&lt;code&gt;DateFormatSymbols(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;dateformatsymbols#DateFormatSymbols-java.util.Locale-&quot;&gt; &lt;code&gt;DateFormatSymbols(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="0f1bd34565f41c8513456e03db2f6c6ac0e51a19" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformatsymbols#getInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;dateformatsymbols#getInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="e783ca10f86d23a2065defdb07a478293f77186c" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;decimalformatsymbols#DecimalFormatSymbols-java.util.Locale-&quot;&gt;&lt;code&gt;DecimalFormatSymbols(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;decimalformatsymbols#DecimalFormatSymbols-java.util.Locale-&quot;&gt; &lt;code&gt;DecimalFormatSymbols(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="836eb322235d93a845c4d65186757c291f30343c" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;decimalformatsymbols#getInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;decimalformatsymbols#getInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f265ad6b5a3473b6ab1fcfa0421acd7f2e341030" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;decimalstyle#of-java.util.Locale-&quot;&gt;&lt;code&gt;of(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;decimalstyle#of-java.util.Locale-&quot;&gt; &lt;code&gt;of(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 호출 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="6c97cfdff5e1901a519a07303e8dad0752d86205" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;numberformat#getCurrencyInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getCurrencyInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;numberformat#getCurrencyInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getCurrencyInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="56b1fcca493696e5b47f9ce010400f80002bf476" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;numberformat#getIntegerInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getIntegerInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;numberformat#getIntegerInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getIntegerInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="b56e150222602b5616e14f89404883d82ce20a0d" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;numberformat#getNumberInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getNumberInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;numberformat#getNumberInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getNumberInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="260b6a8a3ca2ebb6c45361e50160c452470d0bfb" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;numberformat#getPercentInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getPercentInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;numberformat#getPercentInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getPercentInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d8ab9ad4051f8749dc671f121c1baba34a3a4dd3" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;simpledateformat#SimpleDateFormat-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;SimpleDateFormat(pattern, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;simpledateformat#SimpleDateFormat-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;SimpleDateFormat(pattern, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt; 을 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="4fb7cc0b02477d8ae654c7b0da9e5781eb3d1672" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;code&gt;positive ? Math.nextUp(d) : Math.nextDown(d)&lt;/code&gt;</source>
          <target state="translated">이것은 &lt;code&gt;positive ? Math.nextUp(d) : Math.nextDown(d)&lt;/code&gt; 이라고 부르는 것과 같습니다 . Math.nextUp (d) : Math.nextDown (d)</target>
        </trans-unit>
        <trans-unit id="8b27aed9ee162e49847966b3b51b71c4860ae778" translate="yes" xml:space="preserve">
          <source>This is equivalent to the following code:</source>
          <target state="translated">이것은 다음 코드와 같습니다.</target>
        </trans-unit>
        <trans-unit id="3e75935872b6fcf765339513a8c646a4285fbfa3" translate="yes" xml:space="preserve">
          <source>This is expected to be called by the GUI thread, holding a read-lock on the associated model. It is implemented to locate the child view and determine it's allocation with a lock on the ChildLocator object, and to call viewToModel on the child view with a lock on the ChildState object to avoid interaction with the layout thread.</source>
          <target state="translated">이것은 연관된 모델에 대한 읽기 잠금을 유지하면서 GUI 스레드에 의해 호출 될 것으로 예상됩니다. 자식 뷰를 찾고 ChildLocator 개체에 대한 잠금을 사용하여 할당을 결정하고 레이아웃 스레드와의 상호 작용을 피하기 위해 ChildState 개체에 대한 잠금을 사용하여 자식보기에서 viewToModel을 호출하도록 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="fba7eb89f5732a71ba327e7941e876cae190dc08" translate="yes" xml:space="preserve">
          <source>This is generally the preferred way to convert a &lt;code&gt;double&lt;/code&gt; (or &lt;code&gt;float&lt;/code&gt;) into a &lt;code&gt;BigDecimal&lt;/code&gt;, as the value returned is equal to that resulting from constructing a &lt;code&gt;BigDecimal&lt;/code&gt; from the result of using &lt;a href=&quot;../lang/double#toString(double)&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">반환 된 값이 &lt;a href=&quot;../lang/double#toString(double)&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt; 을 사용한 결과에서 &lt;code&gt;BigDecimal&lt;/code&gt; 을 생성 한 결과와 같기 때문에 일반적으로 &lt;code&gt;double&lt;/code&gt; (또는 &lt;code&gt;float&lt;/code&gt; )을 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환하는 데 선호되는 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="a4206946c713acf1e263d89932a265fd04c2332a" translate="yes" xml:space="preserve">
          <source>This is immutable and thread-safe enum.</source>
          <target state="translated">이것은 불변의 thread 세이프 enum입니다.</target>
        </trans-unit>
        <trans-unit id="eb098bd67d3aebe3b0e8799857a7505a1efc1d38" translate="yes" xml:space="preserve">
          <source>This is implemented as a hierarchy of boxes, the table itself is a vertical box, the rows are horizontal boxes, and the cells are vertical boxes. The cells are allowed to span multiple columns and rows. By default, the table can be thought of as being formed over a grid (i.e. somewhat like one would find in gridbag layout), where table cells can request to span more than one grid cell. The default horizontal span of table cells will be based upon this grid, but can be changed by reimplementing the requested span of the cell (i.e. table cells can have independent spans if desired).</source>
          <target state="translated">이것은 상자의 계층 구조로 구현되며 테이블 자체는 수직 상자이고 행은 수평 상자이며 셀은 수직 상자입니다. 셀은 여러 열과 행에 걸쳐있을 수 있습니다. 기본적으로 테이블은 그리드 위에 형성되는 것으로 생각할 수 있습니다 (즉, 그리드 백 레이아웃에서 찾을 수있는 것과 비슷 함). 여기서 테이블 셀은 둘 이상의 그리드 셀에 걸쳐 있도록 요청할 수 있습니다. 테이블 셀의 기본 가로 범위는이 그리드를 기반으로하지만 요청 된 셀 범위를 다시 구현하여 변경할 수 있습니다 (예 : 원하는 경우 테이블 셀에 독립 범위가있을 수 있음).</target>
        </trans-unit>
        <trans-unit id="3d805dba115abfc2a97f70ec9895a4e5ef6ea6d3" translate="yes" xml:space="preserve">
          <source>This is implemented to acquire a read lock for the duration of the runnables execution. There may be multiple runnables executing at the same time, and all writers will be blocked while there are active rendering runnables. If the runnable throws an exception, its lock will be safely released. There is no protection against a runnable that never exits, which will effectively leave the document locked for it's lifetime.</source>
          <target state="translated">이는 실행 파일 실행 기간 동안 읽기 잠금을 획득하기 위해 구현됩니다. 동시에 실행되는 여러 실행 파일이있을 수 있으며 활성 렌더링 실행 파일이있는 동안에는 모든 작성자가 차단됩니다. 실행 가능 파일에서 예외가 발생하면 잠금이 안전하게 해제됩니다. 절대로 종료되지 않는 실행 파일에 대한 보호 기능이 없으므로 문서가 수명 동안 잠긴 상태로 효과적으로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="ac5ce2884781bec3caef6d086212265b9a9f35c9" translate="yes" xml:space="preserve">
          <source>This is implemented to calculate the requirements as the sum of the requirements of the columns.</source>
          <target state="translated">이것은 요구 사항을 열 요구 사항의 합계로 계산하기 위해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="b9220ecd2a753a7af62506e18b4aa468589363a1" translate="yes" xml:space="preserve">
          <source>This is implemented to call the &lt;a href=&quot;#layoutColumns(int,int%5B%5D,int%5B%5D,javax.swing.SizeRequirements%5B%5D)&quot;&gt;&lt;code&gt;layoutColumns&lt;/code&gt;&lt;/a&gt; method, and then forward to the superclass to actually carry out the layout of the tables rows.</source>
          <target state="translated">이는 &lt;a href=&quot;#layoutColumns(int,int%5B%5D,int%5B%5D,javax.swing.SizeRequirements%5B%5D)&quot;&gt; &lt;code&gt;layoutColumns&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 한 다음 슈퍼 클래스로 전달하여 실제로 테이블 행의 레이아웃을 수행하도록 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="f9b3eca99bf374f6b0f299030600387b67a18611" translate="yes" xml:space="preserve">
          <source>This is implemented to delegate to the superclass, then adjust the span for any cell that spans multiple rows.</source>
          <target state="translated">이것은 슈퍼 클래스에 위임 한 다음 여러 행에 걸쳐있는 셀의 범위를 조정하기 위해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="7f9fd75110d032bad6bb99d4b897e371eadd6753" translate="yes" xml:space="preserve">
          <source>This is implemented to determine whether or not the desired region to be rendered (i.e. the unclipped area) is up to date or not. If up-to-date the children are rendered. If not up-to-date, a task to build the desired area is placed on the layout queue as a high priority task. This keeps by event thread moving by rendering if ready, and postponing until a later time if not ready (since paint requests can be rescheduled).</source>
          <target state="translated">이것은 렌더링 할 원하는 영역 (예 : 잘리지 않은 영역)이 최신인지 여부를 결정하기 위해 구현됩니다. 최신 인 경우 하위가 렌더링됩니다. 최신 상태가 아닌 경우 원하는 영역을 구축하는 작업이 우선 순위가 높은 작업으로 레이아웃 대기열에 배치됩니다. 이것은 이벤트 스레드가 준비되면 렌더링하고 준비되지 않은 경우 나중에 연기하여 계속 이동합니다 (페인트 요청을 다시 예약 할 수 있기 때문에).</target>
        </trans-unit>
        <trans-unit id="9f1398ffb1bb40580995b4169941a5d484c9054e" translate="yes" xml:space="preserve">
          <source>This is implemented to forward to the method with the same name, but with the following args both == -1.</source>
          <target state="translated">이것은 동일한 이름을 가진 메소드로 전달하도록 구현되지만 다음 인수는 모두 == -1입니다.</target>
        </trans-unit>
        <trans-unit id="af387a3691588015771353c7d8103964cab6dee1" translate="yes" xml:space="preserve">
          <source>This is implemented to forward to the superclass as well as call the &lt;a href=&quot;#setPropertiesFromAttributes()&quot;&gt;&lt;code&gt;setPropertiesFromAttributes()&lt;/code&gt;&lt;/a&gt; method to set the paragraph properties from the css attributes. The call is made at this time to ensure the ability to resolve upward through the parents view attributes.</source>
          <target state="translated">이것은 css 속성에서 단락 속성을 설정하기 위해 &lt;a href=&quot;#setPropertiesFromAttributes()&quot;&gt; &lt;code&gt;setPropertiesFromAttributes()&lt;/code&gt; &lt;/a&gt; 메서드를 호출 할뿐만 아니라 수퍼 클래스로 전달하기 위해 구현됩니다 . 이 시점에서 부모 뷰 속성을 통해 상향 해결 능력을 보장하기 위해 호출이 이루어집니다.</target>
        </trans-unit>
        <trans-unit id="dd8a31127cfb75859890d19b6345bcc87540901a" translate="yes" xml:space="preserve">
          <source>This is implemented to forward to the superclass as well as call the &lt;a href=&quot;#setPropertiesFromAttributes()&quot;&gt;&lt;code&gt;setPropertiesFromAttributes&lt;/code&gt;&lt;/a&gt; method to set the paragraph properties from the css attributes. The call is made at this time to ensure the ability to resolve upward through the parents view attributes.</source>
          <target state="translated">이것은 CSS 속성에서 단락 속성을 설정하기 위해 &lt;a href=&quot;#setPropertiesFromAttributes()&quot;&gt; &lt;code&gt;setPropertiesFromAttributes&lt;/code&gt; &lt;/a&gt; 메서드를 호출 할뿐만 아니라 수퍼 클래스로 전달하기 위해 구현됩니다 . 이 시점에서 부모 뷰 속성을 통해 상향 해결 능력을 보장하기 위해 호출이 이루어집니다.</target>
        </trans-unit>
        <trans-unit id="4bf4f555d0366ed03766b9a887dca5fad2508e17" translate="yes" xml:space="preserve">
          <source>This is implemented to forward to the superclass for the Y_AXIS. Along the X_AXIS the following values may be returned.</source>
          <target state="translated">이것은 Y_AXIS의 슈퍼 클래스로 전달하기 위해 구현됩니다. X_AXIS와 함께 다음 값이 반환 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc8e12d17bd2303fc9e73e56ac5971fd2ba8000c" translate="yes" xml:space="preserve">
          <source>This is implemented to mark the major axis as having changed so that a future check to see if the requirements need to be published to the parent view will consider the major axis. If the span along the major axis is not estimated, it is updated by the given delta to reflect the incremental change. The delta is ignored if the major span is estimated.</source>
          <target state="translated">이는 주요 축이 변경된 것으로 표시하기 위해 구현되어 향후 요구 사항을 상위 뷰에 게시해야하는지 확인하기 위해 주요 축을 고려할 것입니다. 장축의 범위가 추정되지 않으면 증분 변경을 반영하기 위해 주어진 델타에 의해 업데이트됩니다. 주요 범위가 추정되는 경우 델타는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="fa6665ea0cd94a09946a03f5d8f8b17fbec60fbe" translate="yes" xml:space="preserve">
          <source>This is implemented to provide the default behavior of returning &lt;code&gt;BadBreakWeight&lt;/code&gt; unless the length is greater than the length of the view in which case the entire view represents the fragment. Unless a view has been written to support breaking behavior, it is not attractive to try and break the view. An example of a view that does support breaking is &lt;code&gt;LabelView&lt;/code&gt;. An example of a view that uses break weight is &lt;code&gt;ParagraphView&lt;/code&gt;.</source>
          <target state="translated">길이가 전체 뷰가 조각을 나타내는 뷰의 길이보다 크지 않으면 &lt;code&gt;BadBreakWeight&lt;/code&gt; 를 반환하는 기본 동작을 제공하기 위해 구현됩니다 . 파괴 행위를 지원하는 견해가 작성되지 않은 한, 견해를 깨뜨 리려고 시도하는 것은 매력적이지 않습니다. &lt;code&gt;LabelView&lt;/code&gt; 지원하는보기의 예는 LabelView 입니다. 구분 가중치를 사용하는보기의 예는 &lt;code&gt;ParagraphView&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b0b11906a5fe8806970d6ff501276e7dba4a7964" translate="yes" xml:space="preserve">
          <source>This is implemented to remove the contents of the current document, and replace them by parsing the given string using the current &lt;code&gt;EditorKit&lt;/code&gt;. This gives the semantics of the superclass by not changing out the model, while supporting the content type currently set on this component. The assumption is that the previous content is relatively small, and that the previous content doesn't have side effects. Both of those assumptions can be violated and cause undesirable results. To avoid this, create a new document, &lt;code&gt;getEditorKit().createDefaultDocument()&lt;/code&gt;, and replace the existing &lt;code&gt;Document&lt;/code&gt; with the new one. You are then assured the previous &lt;code&gt;Document&lt;/code&gt; won't have any lingering state.</source>
          <target state="translated">이것은 현재 문서의 내용을 제거하고 현재 &lt;code&gt;EditorKit&lt;/code&gt; 를 사용하여 주어진 문자열을 구문 분석하여 대체하기 위해 구현됩니다 . 이것은이 컴포넌트에 현재 설정된 컨텐츠 유형을 지원하면서 모델을 변경하지 않음으로써 수퍼 클래스의 의미를 제공합니다. 이전 콘텐츠는 비교적 작고 이전 콘텐츠에는 부작용이 없다는 가정이 있습니다. 이 두 가지 가정은 모두 위반 될 수 있으며 바람직하지 않은 결과를 초래할 수 있습니다. 이를 방지하려면 새 문서 &lt;code&gt;getEditorKit().createDefaultDocument()&lt;/code&gt; 를 만들고 기존 &lt;code&gt;Document&lt;/code&gt; 를 새 문서로 바꿉니다 . 그러면 이전 &lt;code&gt;Document&lt;/code&gt; 남아있는 상태가 없을 것입니다.</target>
        </trans-unit>
        <trans-unit id="299c92887ce6d06bbd69b82fed6793569d3c6c6b" translate="yes" xml:space="preserve">
          <source>This is implemented to return the view itself, which represents the default behavior on not being breakable. If the view does support breaking, the starting offset of the view returned should be the given offset, and the end offset should be less than or equal to the end offset of the view being broken.</source>
          <target state="translated">이는 뷰 자체를 반환하기 위해 구현되며, 깨지지 않는 기본 동작을 나타냅니다. 뷰가 분할을 지원하는 경우 반환 된 뷰의 시작 오프셋은 주어진 오프셋이어야하며 끝 오프셋은 분할되는 뷰의 끝 오프셋보다 작거나 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="f9e89daae75f7b410851daba3d61f3654c3e879a" translate="yes" xml:space="preserve">
          <source>This is implemented to try and locate a &lt;code&gt;TabSet&lt;/code&gt; in the paragraph element's attribute set. If one can be found, its settings will be used, otherwise a default expansion will be provided. The base location for tab expansion is the left inset from the paragraphs most recent allocation (which is what the layout of the children is based upon).</source>
          <target state="translated">이것은 단락 요소의 속성 집합에서 &lt;code&gt;TabSet&lt;/code&gt; 을 찾으려고 구현됩니다 . 찾을 수있는 경우 해당 설정이 사용되며 그렇지 않으면 기본 확장이 제공됩니다. 탭 확장의 기본 위치는 가장 최근 할당 된 단락 (하위 레이아웃의 기반)에서 왼쪽 삽입입니다.</target>
        </trans-unit>
        <trans-unit id="6db99c3d6d69cd32fa756508f88b895e0c2c5c63" translate="yes" xml:space="preserve">
          <source>This is important to have for methods such as &lt;a href=&quot;configuration#resolveAndBind(java.lang.module.ModuleFinder,java.lang.module.ModuleFinder,java.util.Collection)&quot;&gt;&lt;code&gt;resolveAndBind&lt;/code&gt;&lt;/a&gt; that need to scan the module path to find modules that provide a specific service.</source>
          <target state="translated">이것은 특정 서비스를 제공하는 모듈을 찾기 위해 모듈 경로를 스캔해야하는 &lt;a href=&quot;configuration#resolveAndBind(java.lang.module.ModuleFinder,java.lang.module.ModuleFinder,java.util.Collection)&quot;&gt; &lt;code&gt;resolveAndBind&lt;/code&gt; &lt;/a&gt; 와 같은 메소드에 중요합니다 .</target>
        </trans-unit>
        <trans-unit id="7ae5e25992a4d0ae58624c26ed6dd12c0b9f72db" translate="yes" xml:space="preserve">
          <source>This is invoked after the stream has been parsed, but before &lt;code&gt;flush&lt;/code&gt;.</source>
          <target state="translated">이것은 스트림이 파싱 된 후 &lt;code&gt;flush&lt;/code&gt; 전에 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="53e54dcb6056ce3ab5a30dc01178ed46e2f7b299" translate="yes" xml:space="preserve">
          <source>This is invoked after the stream has been parsed, but before &lt;code&gt;flush&lt;/code&gt;. &lt;code&gt;eol&lt;/code&gt; will be one of \n, \r or \r\n, which ever is encountered the most in parsing the stream.</source>
          <target state="translated">이것은 스트림이 파싱 된 후 &lt;code&gt;flush&lt;/code&gt; 전에 호출됩니다 . &lt;code&gt;eol&lt;/code&gt; 은 스트림 구문 분석에서 가장 많이 발생하는 \ n, \ r 또는 \ r \ n 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="5e8a4d0249c1936e59fe23459febab74a0a9a526" translate="yes" xml:space="preserve">
          <source>This is invoked during a printing operation.</source>
          <target state="translated">인쇄 작업 중에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c9083e7adcb49dc60cd3dc1614c68ca807dfcfd0" translate="yes" xml:space="preserve">
          <source>This is invoked during a printing operation. This is implemented to invoke &lt;code&gt;paintComponent&lt;/code&gt; on the component. Override this if you wish to add special painting behavior when printing.</source>
          <target state="translated">인쇄 작업 중에 호출됩니다. 컴포넌트에서 &lt;code&gt;paintComponent&lt;/code&gt; 를 호출하기 위해 구현됩니다 . 인쇄 할 때 특별한 페인팅 동작을 추가하려면 이것을 재정의하십시오.</target>
        </trans-unit>
        <trans-unit id="843561e4a2c44474b50e6a6a3d7101d1fa00b5c8" translate="yes" xml:space="preserve">
          <source>This is invoked if a &lt;code&gt;TreeCellEditor&lt;/code&gt; is not supplied in the constructor.</source>
          <target state="translated">생성자에 &lt;code&gt;TreeCellEditor&lt;/code&gt; 가 제공되지 않은 경우 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="47e2c130426c521cdcb72978e20a025f6bf3bb1c" translate="yes" xml:space="preserve">
          <source>This is invoked if a &lt;code&gt;TreeCellEditor&lt;/code&gt; is not supplied in the constructor. It returns a &lt;code&gt;TextField&lt;/code&gt; editor.</source>
          <target state="translated">생성자에 &lt;code&gt;TreeCellEditor&lt;/code&gt; 가 제공되지 않은 경우 호출됩니다 . &lt;code&gt;TextField&lt;/code&gt; 편집기를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ff634a6c237070787b9bcd58390beb39a1274d55" translate="yes" xml:space="preserve">
          <source>This is invoked when inserting at a boundary.</source>
          <target state="translated">경계에 삽입 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="18d311ab4405fd39a181d99f5095aed0cced6fcc" translate="yes" xml:space="preserve">
          <source>This is invoked when inserting at a boundary. It determines the number of pops, and then the number of pushes that need to be performed, and then invokes insertHTML.</source>
          <target state="translated">경계에 삽입 할 때 호출됩니다. 팝 수와 수행해야하는 푸시 수를 결정한 다음 insertHTML을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="7295ae0e1a0c9685679b1915882b71564ee35125" translate="yes" xml:space="preserve">
          <source>This is just a convenience method for &lt;a href=&quot;#validate(javax.xml.transform.Source,javax.xml.transform.Result)&quot;&gt;&lt;code&gt;validate(Source source, Result result)&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;result&lt;/code&gt; of &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이는 단지 편의를위한 방법에있어서 &lt;a href=&quot;#validate(javax.xml.transform.Source,javax.xml.transform.Result)&quot;&gt; &lt;code&gt;validate(Source source, Result result)&lt;/code&gt; &lt;/a&gt; 와 함께 &lt;code&gt;result&lt;/code&gt; 의 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f95880fec5e6ba22a288f41e840a04422e9c0c2" translate="yes" xml:space="preserve">
          <source>This is meant for internal usage, and is generally not of interest to subclasses.</source>
          <target state="translated">이것은 내부 사용을위한 것이며 일반적으로 하위 클래스에는 관심이 없습니다.</target>
        </trans-unit>
        <trans-unit id="6fa84712b49be143efe5ca393d4a270fcb32b019" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;#fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)&quot;&gt;&lt;code&gt;fireIndexedPropertyChange(String, int, Object, Object)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것은보다 일반적인 &lt;a href=&quot;#fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)&quot;&gt; &lt;code&gt;fireIndexedPropertyChange(String, int, Object, Object)&lt;/code&gt; &lt;/a&gt; 메서드를 둘러싼 편의 래퍼 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="42ed4bc74223d3ac445167d20adedd83eaacbe93" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;#firePropertyChange(java.beans.PropertyChangeEvent)&quot;&gt;&lt;code&gt;firePropertyChange(PropertyChangeEvent)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것은 좀 더 일반적인 &lt;a href=&quot;#firePropertyChange(java.beans.PropertyChangeEvent)&quot;&gt; &lt;code&gt;firePropertyChange(PropertyChangeEvent)&lt;/code&gt; &lt;/a&gt; 메서드를 둘러싼 편의 래퍼 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="3aaecab16e4144e1c282871823925dddc4cb21a4" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)&quot;&gt;&lt;code&gt;firePropertyChange(String, Object, Object)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것은 좀 더 일반적인 &lt;a href=&quot;#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)&quot;&gt; &lt;code&gt;firePropertyChange(String, Object, Object)&lt;/code&gt; &lt;/a&gt; 메서드에 대한 편의 래퍼 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="970071bc017dcb7288f19836feeeb1ed2e957f49" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;#fireVetoableChange(java.beans.PropertyChangeEvent)&quot;&gt;&lt;code&gt;fireVetoableChange(PropertyChangeEvent)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것은 좀 더 일반적인 &lt;a href=&quot;#fireVetoableChange(java.beans.PropertyChangeEvent)&quot;&gt; &lt;code&gt;fireVetoableChange(PropertyChangeEvent)&lt;/code&gt; &lt;/a&gt; 메서드를 둘러싼 편의 래퍼 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="c2183d17d1df352fcbe0f73c2aeccc48068ebda1" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;#fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)&quot;&gt;&lt;code&gt;fireVetoableChange(String, Object, Object)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것은 좀 더 일반적인 &lt;a href=&quot;#fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)&quot;&gt; &lt;code&gt;fireVetoableChange(String, Object, Object)&lt;/code&gt; &lt;/a&gt; 메서드를 둘러싼 편의 래퍼 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="622df1c67821419f61dc684cc374bb330f2dfc9d" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;propertychangesupport#fireIndexedPropertyChange-java.lang.String-int-java.lang.Object-java.lang.Object-&quot;&gt;&lt;code&gt;fireIndexedPropertyChange(String, int, Object, Object)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것은 일반적인 &lt;a href=&quot;propertychangesupport#fireIndexedPropertyChange-java.lang.String-int-java.lang.Object-java.lang.Object-&quot;&gt; &lt;code&gt;fireIndexedPropertyChange(String, int, Object, Object)&lt;/code&gt; &lt;/a&gt; 메소드를 둘러싼 편리한 래퍼 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="8f091859fb475e60993901acd750e80b0000f8b9" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;propertychangesupport#firePropertyChange-java.beans.PropertyChangeEvent-&quot;&gt;&lt;code&gt;firePropertyChange(PropertyChangeEvent)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것은 일반적인 &lt;a href=&quot;propertychangesupport#firePropertyChange-java.beans.PropertyChangeEvent-&quot;&gt; &lt;code&gt;firePropertyChange(PropertyChangeEvent)&lt;/code&gt; &lt;/a&gt; 메소드를 둘러싼 편리한 래퍼 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="654274011d7392c6bb4f52523cadc6b4ecc88873" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;propertychangesupport#firePropertyChange-java.lang.String-java.lang.Object-java.lang.Object-&quot;&gt;&lt;code&gt;firePropertyChange(String, Object, Object)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것은 일반적인 &lt;a href=&quot;propertychangesupport#firePropertyChange-java.lang.String-java.lang.Object-java.lang.Object-&quot;&gt; &lt;code&gt;firePropertyChange(String, Object, Object)&lt;/code&gt; &lt;/a&gt; 메소드를 둘러싼 편리한 래퍼 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="29632b45e0af7d060aa561dbb3b9f5dbc8f17999" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;vetoablechangesupport#fireVetoableChange-java.beans.PropertyChangeEvent-&quot;&gt;&lt;code&gt;fireVetoableChange(PropertyChangeEvent)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것은 일반적인 &lt;a href=&quot;vetoablechangesupport#fireVetoableChange-java.beans.PropertyChangeEvent-&quot;&gt; &lt;code&gt;fireVetoableChange(PropertyChangeEvent)&lt;/code&gt; &lt;/a&gt; 메소드를 둘러싼 편의 래퍼 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="3fd763055dac8f63ce21cba144a69a2ea4e0ba46" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;vetoablechangesupport#fireVetoableChange-java.lang.String-java.lang.Object-java.lang.Object-&quot;&gt;&lt;code&gt;fireVetoableChange(String, Object, Object)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것은 일반적인 &lt;a href=&quot;vetoablechangesupport#fireVetoableChange-java.lang.String-java.lang.Object-java.lang.Object-&quot;&gt; &lt;code&gt;fireVetoableChange(String, Object, Object)&lt;/code&gt; &lt;/a&gt; 메소드를 둘러싼 편리한 래퍼 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="6035bf886160a52b44567d3780233698ad7fef73" translate="yes" xml:space="preserve">
          <source>This is merely a hint for programs that wish to be efficient; all readers must be able to read arbitrary regions as specified in an &lt;code&gt;ImageReadParam&lt;/code&gt;.</source>
          <target state="translated">이것은 단지 효율적이기를 원하는 프로그램에 대한 힌트 일뿐입니다. 모든 리더는 &lt;code&gt;ImageReadParam&lt;/code&gt; 에 지정된 임의의 영역을 읽을 수 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="ecc2ccc0821e04332284cd3ddc99d41dc0092892" translate="yes" xml:space="preserve">
          <source>This is needed to handle XML comments and the like. If the lexical handler is not set, an attempt should be made by the transformer to cast the &lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; to a &lt;code&gt;LexicalHandler&lt;/code&gt;.</source>
          <target state="translated">이것은 XML 주석 등을 처리하는 데 필요합니다. 어휘 핸들러가 설정되지 않은 경우 변환기는 &lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;LexicalHandler&lt;/code&gt; 로 캐스트하기 위해 시도해야합니다 .</target>
        </trans-unit>
        <trans-unit id="93783da70e569732662101e1d18276ba921b4e46" translate="yes" xml:space="preserve">
          <source>This is no longer used, instead &amp;lt;span&amp;gt; will be written out.</source>
          <target state="translated">더 이상 사용되지 않고 대신 &amp;lt;span&amp;gt;이 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="8fa403cc763e18feee228b7e1758f58b1c66b413" translate="yes" xml:space="preserve">
          <source>This is not a computed value that is the result of a namespace lookup based on an examination of the namespace declarations in scope. It is merely the namespace URI given at creation time.</source>
          <target state="translated">이것은 범위의 네임 스페이스 선언 검사를 기반으로하는 네임 스페이스 조회의 결과 인 계산 된 값이 아닙니다. 생성시 제공된 네임 스페이스 URI 일뿐입니다.</target>
        </trans-unit>
        <trans-unit id="3105128fe005119dbe4c7380b262f3b23c13685a" translate="yes" xml:space="preserve">
          <source>This is not a strict inverse of &lt;a href=&quot;#forName(java.lang.String)&quot;&gt;&lt;code&gt;forName(java.lang.String)&lt;/code&gt;&lt;/a&gt;; distinct classes which share a common name but have different class loaders will have identical descriptor strings.</source>
          <target state="translated">이것은 &lt;a href=&quot;#forName(java.lang.String)&quot;&gt; &lt;code&gt;forName(java.lang.String)&lt;/code&gt; &lt;/a&gt; 의 엄격한 역이 아닙니다 . 공통 이름을 공유하지만 클래스 로더가 다른 개별 클래스는 동일한 설명자 문자열을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="827ed3297a34dd0cb92b779cc3567d5e00c35ee8" translate="yes" xml:space="preserve">
          <source>This is not an IPP V1.1 attribute.</source>
          <target state="translated">이것은 IPP V1.1 속성이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="603d4387d2f6d569c64d57c4a2d0f8d964a30047" translate="yes" xml:space="preserve">
          <source>This is not part of core-only SAX2 distributions.</source>
          <target state="translated">이것은 코어 전용 SAX2 배포의 일부가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="491d93bd7ce77821e7c619b5b94d5e0d4be54218" translate="yes" xml:space="preserve">
          <source>This is not supported in SAX2, and will always throw an exception.</source>
          <target state="translated">이것은 SAX2에서 지원되지 않으며 항상 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="49b6454e8dd1b0a1936c3bfef4fe1e0f09a696e0" translate="yes" xml:space="preserve">
          <source>This is one of the kinds of descriptor returned by a BeanInfo object, which also returns descriptors for properties, method, and events.</source>
          <target state="translated">이것은 BeanInfo 객체에 의해 반환되는 설명자 중 하나이며, 속성, 메서드 및 이벤트에 대한 설명자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f9016a5a41cfd95f1d6a7b81c79228ea30d5fe47" translate="yes" xml:space="preserve">
          <source>This is one year earlier than the minimum &lt;code&gt;LocalDateTime&lt;/code&gt;. This provides sufficient values to handle the range of &lt;code&gt;ZoneOffset&lt;/code&gt; which affect the instant in addition to the local date-time. The value is also chosen such that the value of the year fits in an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">최소 &lt;code&gt;LocalDateTime&lt;/code&gt; 보다 1 년 빠릅니다 . 이는 현지 날짜-시간 외에 순간에 영향을주는 &lt;code&gt;ZoneOffset&lt;/code&gt; 범위를 처리하기에 충분한 값을 제공합니다 . 연도 값이 &lt;code&gt;int&lt;/code&gt; 에 맞도록 값도 선택 됩니다.</target>
        </trans-unit>
        <trans-unit id="babc195db8874dee4e9718f6adf857d6970a0eae" translate="yes" xml:space="preserve">
          <source>This is one year later than the maximum &lt;code&gt;LocalDateTime&lt;/code&gt;. This provides sufficient values to handle the range of &lt;code&gt;ZoneOffset&lt;/code&gt; which affect the instant in addition to the local date-time. The value is also chosen such that the value of the year fits in an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">이것은 최대 &lt;code&gt;LocalDateTime&lt;/code&gt; 보다 1 년 늦습니다 . 이는 현지 날짜-시간 외에 순간에 영향을주는 &lt;code&gt;ZoneOffset&lt;/code&gt; 범위를 처리하기에 충분한 값을 제공합니다 . 연도 값이 &lt;code&gt;int&lt;/code&gt; 에 맞도록 값도 선택 됩니다.</target>
        </trans-unit>
        <trans-unit id="7800578b88932b38dfb383e618b2f10b0b6630b5" translate="yes" xml:space="preserve">
          <source>This is only a hint, and some look and feels may not support this. This is a bound property.</source>
          <target state="translated">이는 힌트 일 뿐이며 일부 룩앤필은이를 지원하지 않을 수 있습니다. 이것은 바인딩 된 속성입니다.</target>
        </trans-unit>
        <trans-unit id="f3f40ee1ade89f714edd649802fb9680332ff08d" translate="yes" xml:space="preserve">
          <source>This is only applicable if the placeholder string has not been specified, or does not completely fill in the mask.</source>
          <target state="translated">이것은 자리 표시 자 문자열이 지정되지 않았거나 마스크를 완전히 채우지 않은 경우에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="908753d55bea97c51b086ef58a2e2995a9522905" translate="yes" xml:space="preserve">
          <source>This is ordinarily too costly, but may be &lt;em&gt;more&lt;/em&gt; efficient than alternatives when traversal operations vastly outnumber mutations, and is useful when you cannot or don't want to synchronize traversals, yet need to preclude interference among concurrent threads. The &quot;snapshot&quot; style iterator method uses a reference to the state of the array at the point that the iterator was created. This array never changes during the lifetime of the iterator, so interference is impossible and the iterator is guaranteed not to throw &lt;code&gt;ConcurrentModificationException&lt;/code&gt;. The iterator will not reflect additions, removals, or changes to the list since the iterator was created. Element-changing operations on iterators themselves (&lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, and &lt;code&gt;add&lt;/code&gt;) are not supported. These methods throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">이것은 일반적으로 너무 비싸지 만 순회 작업이 돌연변이 수보다 훨씬 많을 때 순회 작업보다 대안 이 &lt;em&gt;더&lt;/em&gt; 효율적일 수 있으며 순회를 동기화 할 수 없거나 원하지는 않지만 동시 스레드 간의 간섭을 배제해야 할 때 유용합니다. &quot;스냅 샷&quot;스타일 반복자 메소드는 반복자가 작성된 시점의 배열 상태에 대한 참조를 사용합니다. 이 배열은 반복기 수명 동안 변경되지 않으므로 간섭이 불가능하며 반복기는 &lt;code&gt;ConcurrentModificationException&lt;/code&gt; 을 발생 시키지 않습니다 . 반복자는 반복자가 작성된 이후 목록에 대한 추가, 제거 또는 변경 사항을 반영하지 않습니다. 반복자 자체의 요소 변경 작업 ( &lt;code&gt;remove&lt;/code&gt; , &lt;code&gt;set&lt;/code&gt; 및 &lt;code&gt;add&lt;/code&gt; )는 지원되지 않습니다. 이 메소드는 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="447bc8d9c7c7141e703f9509757efce1581829a7" translate="yes" xml:space="preserve">
          <source>This is overridden only to increase the invalid area.</source>
          <target state="translated">이것은 유효하지 않은 영역을 늘리기 위해서만 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="3804c7a73d4ec88bc7d75215ae1cedad04291508" translate="yes" xml:space="preserve">
          <source>This is overridden only to increase the invalid area. This ensures that the &quot;Shadow&quot; below the thumb is invalidated</source>
          <target state="translated">이것은 유효하지 않은 영역을 늘리기 위해서만 무시됩니다. 이렇게하면 엄지 손가락 아래의 &quot;그림자&quot;가 무효화됩니다.</target>
        </trans-unit>
        <trans-unit id="73392709fa8d3df3be13853fc4d85b9c41eff9c2" translate="yes" xml:space="preserve">
          <source>This is overridden to return false if the current &lt;code&gt;Icon&lt;/code&gt;'s &lt;code&gt;Image&lt;/code&gt; is not equal to the passed in &lt;code&gt;Image&lt;/code&gt;&lt;code&gt;img&lt;/code&gt;.</source>
          <target state="translated">현재 &lt;code&gt;Icon&lt;/code&gt; 의 &lt;code&gt;Image&lt;/code&gt; 가 &lt;code&gt;Image&lt;/code&gt; &lt;code&gt;img&lt;/code&gt; 에 전달 된 것과 같지 않으면 false를 반환하도록 재정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="29c19aee35fda193c3155b2c8441f620f52e516d" translate="yes" xml:space="preserve">
          <source>This is overridden to return false if the current Icon's Image is not equal to the passed in Image &lt;code&gt;img&lt;/code&gt;.</source>
          <target state="translated">현재 Icon의 Image가 Image &lt;code&gt;img&lt;/code&gt; 에 전달 된 것과 같지 않으면 false를 반환하도록 재정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="b2fe9e5fced87565502a2b80c69fc8f80a8a6e1a" translate="yes" xml:space="preserve">
          <source>This is overriden to do nothing; &lt;code&gt;EmptySelectionModel&lt;/code&gt; does not allow a selection.</source>
          <target state="translated">이것은 아무것도하지 않도록 무시됩니다. &lt;code&gt;EmptySelectionModel&lt;/code&gt; 은 선택을 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9f028d4e37554d5380639ab006ce04ae729a1820" translate="yes" xml:space="preserve">
          <source>This is particularly useful when, for instance, the application wishes to have a number of sporadic message senders/receivers remain under the original SCTP multi channel but branch off those associations carrying high volume data traffic into their own separate SCTP channels.</source>
          <target state="translated">이는 예를 들어 애플리케이션이 여러 산발적 인 메시지 발신자 / 수신자가 원래 SCTP 다중 채널에 남아 있지만 대용량 데이터 트래픽을 전달하는 연결을 별도의 SCTP 채널로 분기하려는 경우에 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="bc344d6ed1b77ca3b6688f7a62ff9dcd4c2df7ad" translate="yes" xml:space="preserve">
          <source>This is passed as an attribute in the attributeset to indicate the element is implied eg, the string '&amp;lt;&amp;gt;foo&amp;lt;\t&amp;gt;' contains an implied html element and an implied body element.</source>
          <target state="translated">이것은 요소가 함축되었음을 나타내는 속성 세트의 속성으로 전달됩니다. 예를 들어, 문자열 '&amp;lt;&amp;gt; foo &amp;lt;\ t&amp;gt;'는 함축 된 html 요소와 함축 된 본문 요소를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="4de4aa69664f3d7f98d4504ab4ea59cf7595c859" translate="yes" xml:space="preserve">
          <source>This is primarily intended as a base class or support class to be used in implementing other logging &lt;code&gt;Handlers&lt;/code&gt;.</source>
          <target state="translated">이것은 기본 적으로 다른 로깅 &lt;code&gt;Handlers&lt;/code&gt; 구현에 사용되는 기본 클래스 또는 지원 클래스로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="c0e290b9848d66fb0d59ebaadaa856e1aa2cf4a2" translate="yes" xml:space="preserve">
          <source>This is re-implemented to give each child the span of the column width for the table, and to give cells that span multiple columns the multi-column span.</source>
          <target state="translated">이는 각 자식에게 테이블의 열 너비 범위를 제공하고 여러 열에 걸쳐있는 셀에 여러 열 범위를 제공하기 위해 다시 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="14452071d8b4998cac2e2079ea1b30eda24dddba" translate="yes" xml:space="preserve">
          <source>This is routed to the &lt;a href=&quot;../basic/basictextui#paintSafely(java.awt.Graphics)&quot;&gt;&lt;code&gt;BasicTextUI.paintSafely(java.awt.Graphics)&lt;/code&gt;&lt;/a&gt; method under the guarantee that the model does not change from the view of this thread while it is rendering (if the associated model is derived from &lt;code&gt;AbstractDocument&lt;/code&gt;). This enables the model to potentially be updated asynchronously.</source>
          <target state="translated">이것은 렌더링하는 동안 모델이이 스레드의 뷰에서 변경되지 않는다는 보장하에 &lt;a href=&quot;../basic/basictextui#paintSafely(java.awt.Graphics)&quot;&gt; &lt;code&gt;BasicTextUI.paintSafely(java.awt.Graphics)&lt;/code&gt; &lt;/a&gt; 메서드 로 라우팅됩니다 (연관된 모델이 &lt;code&gt;AbstractDocument&lt;/code&gt; 에서 파생 된 경우 ). 이를 통해 모델이 잠재적으로 비동기 적으로 업데이트 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00832e8856b2758f05b8346338b3a0d1dc141f66" translate="yes" xml:space="preserve">
          <source>This is set to true in validateComponent if a Component is contained in either the message or the buttons.</source>
          <target state="translated">컴포넌트가 메시지 또는 버튼에 포함 된 경우 validateComponent에서 true로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="5859a6481a8be21f8924ed6212952e4dd1ffa43c" translate="yes" xml:space="preserve">
          <source>This is shorthand for &lt;code&gt;new DateFormatter(DateFormat.getDateInstance())&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;new DateFormatter(DateFormat.getDateInstance())&lt;/code&gt; 약어입니다 .</target>
        </trans-unit>
        <trans-unit id="2ed01533b1bff0e5617a980199fd14d61b0c744a" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;chronofield#DAY_OF_WEEK&quot;&gt;&lt;code&gt;ChronoField.DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; but uses values for the day-of-week based on this &lt;code&gt;WeekFields&lt;/code&gt;. The days are numbered from 1 to 7 where the &lt;a href=&quot;#getFirstDayOfWeek()&quot;&gt;&lt;code&gt;first day-of-week&lt;/code&gt;&lt;/a&gt; is assigned the value 1.</source>
          <target state="translated">이것은 &lt;a href=&quot;chronofield#DAY_OF_WEEK&quot;&gt; &lt;code&gt;ChronoField.DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt; 와 유사 하지만이 &lt;code&gt;WeekFields&lt;/code&gt; 를 기반으로 요일 값을 사용합니다 . 요일은 1부터 7까지 번호가 매겨지며 &lt;a href=&quot;#getFirstDayOfWeek()&quot;&gt; &lt;code&gt;first day-of-week&lt;/code&gt; &lt;/a&gt; 에 값 1이 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="b91547e40d584ed1b2bea7e9880ab6300f07ef9e" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;chronofield#DAY_OF_WEEK&quot;&gt;&lt;code&gt;ChronoField.DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; but uses values for the day-of-week based on this &lt;code&gt;WeekFields&lt;/code&gt;. The days are numbered from 1 to 7 where the &lt;a href=&quot;weekfields#getFirstDayOfWeek--&quot;&gt;&lt;code&gt;first day-of-week&lt;/code&gt;&lt;/a&gt; is assigned the value 1.</source>
          <target state="translated">이것은 &lt;a href=&quot;chronofield#DAY_OF_WEEK&quot;&gt; &lt;code&gt;ChronoField.DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt; 와 비슷 하지만이 &lt;code&gt;WeekFields&lt;/code&gt; 를 기준으로 요일 값을 사용합니다 . 요일은 1에서 7까지 번호가 매겨지며 &lt;a href=&quot;weekfields#getFirstDayOfWeek--&quot;&gt; &lt;code&gt;first day-of-week&lt;/code&gt; &lt;/a&gt; 에는 값 1이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="218aafcd51bc6f1a4805ffa2b3cb8b79dde0dcbe" translate="yes" xml:space="preserve">
          <source>This is similar to the method &lt;a href=&quot;#loadLibrary(java.lang.String)&quot;&gt;&lt;code&gt;loadLibrary(String)&lt;/code&gt;&lt;/a&gt;, but it accepts a general file name as an argument rather than just a library name, allowing any file of native code to be loaded.</source>
          <target state="translated">이는 &lt;a href=&quot;#loadLibrary(java.lang.String)&quot;&gt; &lt;code&gt;loadLibrary(String)&lt;/code&gt; &lt;/a&gt; 메소드와 유사 하지만 라이브러리 이름이 아닌 일반 파일 이름을 인수로 받아 모든 네이티브 코드 파일을로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0799a9f926ef0aa369986515f9873c1cc6c83532" translate="yes" xml:space="preserve">
          <source>This is similar to the method &lt;a href=&quot;runtime#loadLibrary-java.lang.String-&quot;&gt;&lt;code&gt;loadLibrary(String)&lt;/code&gt;&lt;/a&gt;, but it accepts a general file name as an argument rather than just a library name, allowing any file of native code to be loaded.</source>
          <target state="translated">이것은 &lt;a href=&quot;runtime#loadLibrary-java.lang.String-&quot;&gt; &lt;code&gt;loadLibrary(String)&lt;/code&gt; &lt;/a&gt; 메소드와 유사 하지만 라이브러리 이름이 아닌 일반 파일 이름을 인수로 허용하여 기본 코드 파일을로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea571efa1ec2014e680c546d629c81558049a263" translate="yes" xml:space="preserve">
          <source>This is the &lt;a href=&quot;../xmlreader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; from which this filter will obtain its events and to which it will pass its configuration requests. The parent may itself be another filter.</source>
          <target state="translated">이것은 이 필터가 이벤트를 가져오고 구성 요청을 전달할 &lt;a href=&quot;../xmlreader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt; 입니다. 부모 자체가 다른 필터 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae3c3900deb2fe8491221e2286ab08d014f15615" translate="yes" xml:space="preserve">
          <source>This is the Namespace URI that is automatically mapped to the &quot;xml&quot; prefix.</source>
          <target state="translated">&quot;xml&quot;접두사에 자동으로 매핑되는 네임 스페이스 URI입니다.</target>
        </trans-unit>
        <trans-unit id="42e4da84f0719577a66594240bcd1d2ee44737cb" translate="yes" xml:space="preserve">
          <source>This is the Namespace URI that is optionally applied to &lt;em&gt;xmlns&lt;/em&gt; and &lt;em&gt;xmlns:*&lt;/em&gt; attributes, which are used to declare namespaces.</source>
          <target state="translated">네임 스페이스 를 선언하는 데 사용되는 &lt;em&gt;xmlns&lt;/em&gt; 및 &lt;em&gt;xmlns : *&lt;/em&gt; 속성에 선택적으로 적용되는 네임 스페이스 URI입니다 .</target>
        </trans-unit>
        <trans-unit id="33d0b5fbca66879c6163d7a3d0c3e4a34783ca59" translate="yes" xml:space="preserve">
          <source>This is the ResourceBundle that should be used to localize the message string before formatting it. The result may be null if the message is not localizable, or if no suitable ResourceBundle is available.</source>
          <target state="translated">이것은 메시지 문자열을 형식화하기 전에 지역화하는 데 사용해야하는 ResourceBundle입니다. 메시지를 지역화 할 수 없거나 적절한 ResourceBundle을 사용할 수없는 경우 결과는 null 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42f7e9973dc8ec0ed2fe3ec3b26442c4796788cb" translate="yes" xml:space="preserve">
          <source>This is the abstract superclass for color choosers.</source>
          <target state="translated">이것은 색상 선택기의 추상 수퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="375e29ac066ff1910f7d1bd09733adebd7c5f413" translate="yes" xml:space="preserve">
          <source>This is the abstract superclass for color choosers. If you want to add a new color chooser panel into a &lt;code&gt;JColorChooser&lt;/code&gt;, subclass this class.</source>
          <target state="translated">이것은 색상 선택기의 추상 수퍼 클래스입니다. 새로운 색상 선택기 패널을 &lt;code&gt;JColorChooser&lt;/code&gt; 에 추가하려면 이 클래스를 하위 클래스로 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="b17620b07601e82119d63679c5409ef5947bff19" translate="yes" xml:space="preserve">
          <source>This is the array containing the text of interest.</source>
          <target state="translated">관심있는 텍스트를 포함하는 배열입니다.</target>
        </trans-unit>
        <trans-unit id="d6262a266677f3dce55ca7aff879c3554d17ef58" translate="yes" xml:space="preserve">
          <source>This is the array containing the text of interest. This array should never be modified; it is available only for efficiency.</source>
          <target state="translated">관심있는 텍스트를 포함하는 배열입니다. 이 배열은 수정해서는 안됩니다. 효율성을 위해서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16d2ceee4cb3ada750d8d07a5d5f9082461bedb0" translate="yes" xml:space="preserve">
          <source>This is the base class for deriving an XMLEventReader filter.</source>
          <target state="translated">XMLEventReader 필터를 파생하기위한 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="d6f88873f5f120d55fecc83499d6485e8c12b9fb" translate="yes" xml:space="preserve">
          <source>This is the base class for deriving an XMLEventReader filter. This class is designed to sit between an XMLEventReader and an application's XMLEventReader. By default each method does nothing but call the corresponding method on the parent interface.</source>
          <target state="translated">XMLEventReader 필터를 파생하기위한 기본 클래스입니다. 이 클래스는 XMLEventReader와 응용 프로그램의 XMLEventReader 사이에 위치하도록 설계되었습니다. 기본적으로 각 메서드는 아무것도하지 않고 부모 인터페이스에서 해당 메서드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="873de00f79738b35b46e4d66169520501370cf30" translate="yes" xml:space="preserve">
          <source>This is the base class for deriving an XMLStreamReader filter This class is designed to sit between an XMLStreamReader and an application's XMLStreamReader.</source>
          <target state="translated">XMLStreamReader 필터를 파생하기위한 기본 클래스입니다.이 클래스는 XMLStreamReader와 응용 프로그램의 XMLStreamReader 사이에 위치하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="01957ecdcd2b5e143b04a62a9d4db5c0a7dadcca" translate="yes" xml:space="preserve">
          <source>This is the base class for deriving an XMLStreamReader filter This class is designed to sit between an XMLStreamReader and an application's XMLStreamReader. By default each method does nothing but call the corresponding method on the parent interface.</source>
          <target state="translated">XMLStreamReader 필터를 파생하기위한 기본 클래스입니다.이 클래스는 XMLStreamReader와 응용 프로그램의 XMLStreamReader 사이에 위치하도록 설계되었습니다. 기본적으로 각 메서드는 아무것도하지 않고 부모 인터페이스에서 해당 메서드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="4bd672846d3de866df6fd8da69d720923828d798" translate="yes" xml:space="preserve">
          <source>This is the base event interface for handling markup events.</source>
          <target state="translated">이것은 마크 업 이벤트를 처리하기위한 기본 이벤트 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="373543e82f5d6503254502a5f64cae54862a1ff2" translate="yes" xml:space="preserve">
          <source>This is the base event interface for handling markup events. Events are value objects that are used to communicate the XML 1.0 InfoSet to the Application. Events may be cached and referenced after the parse has completed.</source>
          <target state="translated">이것은 마크 업 이벤트를 처리하기위한 기본 이벤트 인터페이스입니다. 이벤트는 XML 1.0 InfoSet을 응용 프로그램에 전달하는 데 사용되는 값 개체입니다. 이벤트는 구문 분석이 완료된 후 캐시되고 참조 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6dabae1b21967bb23bf4f00f6101dc2fdc500c63" translate="yes" xml:space="preserve">
          <source>This is the base interface for JSSE key managers.</source>
          <target state="translated">이것은 JSSE 키 관리자의 기본 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="bba56f23c7c9ee83be45b2eed8efd5e9a7dfb64b" translate="yes" xml:space="preserve">
          <source>This is the base interface for JSSE trust managers.</source>
          <target state="translated">이것은 JSSE 신뢰 관리자의 기본 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="620922410bf39c1c0c1daa8ac6943ea2cc388f04" translate="yes" xml:space="preserve">
          <source>This is the base interface type for amounts of time. An amount is distinct from a date or time-of-day in that it is not tied to any specific point on the time-line.</source>
          <target state="translated">이것은 기본 인터페이스 유형입니다. 금액은 타임 라인의 특정 지점에 연결되지 않았다는 점에서 날짜 또는 시간과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="ec01a51404d32a88570f2ad643af04f876b7bf9c" translate="yes" xml:space="preserve">
          <source>This is the base interface type for date, time and offset objects that are complete enough to be manipulated using plus and minus. It is implemented by those classes that can provide and manipulate information as &lt;a href=&quot;temporalfield&quot;&gt;fields&lt;/a&gt; or &lt;a href=&quot;temporalquery&quot;&gt;queries&lt;/a&gt;. See &lt;a href=&quot;temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt; for the read-only version of this interface.</source>
          <target state="translated">이것은 플러스 및 마이너스를 사용하여 조작 할 수있을 정도로 완전한 날짜, 시간 및 오프셋 객체의 기본 인터페이스 유형입니다. &lt;a href=&quot;temporalfield&quot;&gt;필드&lt;/a&gt; 또는 &lt;a href=&quot;temporalquery&quot;&gt;쿼리&lt;/a&gt; 로 정보를 제공하고 조작 할 수있는 클래스로 구현됩니다 . 이 인터페이스의 읽기 전용 버전은 &lt;a href=&quot;temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="703bcf283cbcdbff4c645509f86d6c38abfcbe23" translate="yes" xml:space="preserve">
          <source>This is the base interface type for date, time and offset objects. It is implemented by those classes that can provide information as &lt;a href=&quot;temporalfield&quot;&gt;fields&lt;/a&gt; or &lt;a href=&quot;temporalquery&quot;&gt;queries&lt;/a&gt;.</source>
          <target state="translated">날짜, 시간 및 오프셋 객체의 기본 인터페이스 유형입니다. &lt;a href=&quot;temporalfield&quot;&gt;필드&lt;/a&gt; 나 &lt;a href=&quot;temporalquery&quot;&gt;쿼리&lt;/a&gt; 로 정보를 제공 할 수있는 클래스로 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="8c98dfe1fe2ce5ebcc8dbef53de98caa33b2e98c" translate="yes" xml:space="preserve">
          <source>This is the basic key exception.</source>
          <target state="translated">이것은 기본 키 예외입니다.</target>
        </trans-unit>
        <trans-unit id="d6038e5e9a6aab44c79d941693ba0286f3f22fb2" translate="yes" xml:space="preserve">
          <source>This is the basic login exception.</source>
          <target state="translated">기본 로그인 예외입니다.</target>
        </trans-unit>
        <trans-unit id="9a657413d441e96b7f56d2db4629a07d602752bd" translate="yes" xml:space="preserve">
          <source>This is the common base class of all Java language enumeration types.</source>
          <target state="translated">이것은 모든 Java 언어 열거 유형의 공통 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="86d5d50b46f393ff72b89fdb180edc74ecd75014" translate="yes" xml:space="preserve">
          <source>This is the common base class of all Java language enumeration types. More information about enums, including descriptions of the implicitly declared methods synthesized by the compiler, can be found in section 8.9 of</source>
          <target state="translated">이것은 모든 Java 언어 열거 유형의 공통 기본 클래스입니다. 컴파일러에 의해 합성 된 암시 적으로 선언 된 메소드의 설명을 포함하여 열거 형에 대한 자세한 정보는 섹션 8.9에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45d0d3f70727906b7b6e90a897789abf97c8fee0" translate="yes" xml:space="preserve">
          <source>This is the common base class of all Java language enumeration types. More information about enums, including descriptions of the implicitly declared methods synthesized by the compiler, can be found in section &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se15/html/jls-8.html#jls-8.9&quot;&gt;8.9&lt;/a&gt; of</source>
          <target state="translated">이것은 모든 Java 언어 열거 유형의 공통 기본 클래스입니다. 컴파일러에 의해 합성 된 암시 적 선언 방법의 설명을 포함하여 열거에 대한 자세한 정보는, 절에서 발견 될 수 &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se15/html/jls-8.html#jls-8.9&quot;&gt;8.9&lt;/a&gt; 의</target>
        </trans-unit>
        <trans-unit id="c069cd89ec32dcfce9dbe4dfad691c8ecb2c6b5a" translate="yes" xml:space="preserve">
          <source>This is the common base class of all Java language record classes.</source>
          <target state="translated">이것은 모든 Java 언어 레코드 클래스의 공통 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="ea8c2fe8bdfe513ef8892e2808e3e8ba4baf279b" translate="yes" xml:space="preserve">
          <source>This is the core package of the Java Debug Interface (JDI), it defines mirrors for values, types, and the target VirtualMachine itself - as well bootstrapping facilities.</source>
          <target state="translated">이것은 JDI (Java Debug Interface)의 핵심 패키지이며 값, 유형 및 대상 VirtualMachine 자체에 대한 미러와 부트 스트랩 기능을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="c2ad1be5981381f104e47956310724192a40d84f" translate="yes" xml:space="preserve">
          <source>This is the core package of the Java Debug Interface (JDI), it defines mirrors for values, types, and the target VirtualMachine itself - as well bootstrapping facilities. &lt;a href=&quot;virtualmachine&quot;&gt;&lt;code&gt;VirtualMachine&lt;/code&gt;&lt;/a&gt; mirrors the target virtual machine and is the origin of all information provided by the JDI. A VirtualMachine is typically created by using the &lt;a href=&quot;virtualmachinemanager&quot;&gt;&lt;code&gt;VirtualMachineManager&lt;/code&gt;&lt;/a&gt; to create a connection to the target virtual machine (see the &lt;a href=&quot;connect/package-summary&quot;&gt;&lt;code&gt;com.sun.jdi.connect&lt;/code&gt;&lt;/a&gt; package). In turn the &lt;a href=&quot;virtualmachinemanager&quot;&gt;&lt;code&gt;VirtualMachineManager&lt;/code&gt;&lt;/a&gt; is typically created by calling &lt;a href=&quot;bootstrap#virtualMachineManager()&quot;&gt;&lt;code&gt;Bootstrap.virtualMachineManager()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 JDI (Java Debug Interface)의 핵심 패키지이며 값, 유형 및 대상 VirtualMachine 자체에 대한 미러와 부트 스트랩 기능을 정의합니다. &lt;a href=&quot;virtualmachine&quot;&gt; &lt;code&gt;VirtualMachine&lt;/code&gt; &lt;/a&gt; 은 대상 가상 머신을 미러링하며 JDI에서 제공하는 모든 정보의 출처입니다. VirtualMachine은 일반적으로 &lt;a href=&quot;virtualmachinemanager&quot;&gt; &lt;code&gt;VirtualMachineManager&lt;/code&gt; &lt;/a&gt; 를 사용하여 대상 가상 시스템에 대한 연결을 생성 하여 생성됩니다 ( &lt;a href=&quot;connect/package-summary&quot;&gt; &lt;code&gt;com.sun.jdi.connect&lt;/code&gt; &lt;/a&gt; 패키지 참조 ). 차례로 &lt;a href=&quot;virtualmachinemanager&quot;&gt; &lt;code&gt;VirtualMachineManager&lt;/code&gt; &lt;/a&gt; 는 일반적으로 &lt;a href=&quot;bootstrap#virtualMachineManager()&quot;&gt; &lt;code&gt;Bootstrap.virtualMachineManager()&lt;/code&gt; &lt;/a&gt; 를 호출하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="e7999052240fa29f6f49f08bfa42fafd0d1ed60d" translate="yes" xml:space="preserve">
          <source>This is the date-time where the discontinuity begins expressed with the 'before' offset. At this instant, the 'after' offset is actually used, therefore the combination of this date-time and the 'before' offset will never occur.</source>
          <target state="translated">불연속성이 시작되기 시작한 날짜-시간은 '이전'오프셋으로 표시됩니다. 이 시점에서 '후'오프셋이 실제로 사용되므로이 날짜-시간과 '이전'오프셋의 조합은 절대 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="96cd5940164452e6e83f5fd6c5524b7c71d0d4f3" translate="yes" xml:space="preserve">
          <source>This is the default implementation of RTF editing functionality.</source>
          <target state="translated">이것은 RTF 편집 기능의 기본 구현입니다.</target>
        </trans-unit>
        <trans-unit id="8dbeacc4492d0b3e3f5745a227aec53adb4747da" translate="yes" xml:space="preserve">
          <source>This is the default implementation of RTF editing functionality. The RTF support was not written by the Swing team. In the future we hope to improve the support provided.</source>
          <target state="translated">이것은 RTF 편집 기능의 기본 구현입니다. RTF 지원은 Swing 팀에 의해 작성되지 않았습니다. 앞으로 제공되는 지원을 개선 할 수 있기를 바랍니다.</target>
        </trans-unit>
        <trans-unit id="737b59e5cc1f042f439f5ab4ec96d7743c5358df" translate="yes" xml:space="preserve">
          <source>This is the default mode for all features, so that a read including metadata followed by a write including metadata will preserve as much information as possible.</source>
          <target state="translated">이것은 모든 기능에 대한 기본 모드이므로 메타 데이터를 포함한 읽기와 메타 데이터를 포함한 쓰기는 가능한 많은 정보를 보존합니다.</target>
        </trans-unit>
        <trans-unit id="331df379f833692b4e6b7f276e68b9ad3fa53648" translate="yes" xml:space="preserve">
          <source>This is the default type returned if the result is a node set and &lt;code&gt;ANY_TYPE&lt;/code&gt; is requested.</source>
          <target state="translated">결과가 노드 집합이고 &lt;code&gt;ANY_TYPE&lt;/code&gt; 이 요청 된 경우 반환되는 기본 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="27a2264bca908d1a3dfc0a8b67e2d192bde8b531" translate="yes" xml:space="preserve">
          <source>This is the definition of lexicographic ordering. If two strings are different, then either they have different characters at some index that is a valid index for both strings, or their lengths are different, or both. If they have different characters at one or more index positions, let</source>
          <target state="translated">이것은 사전 식 순서의 정의입니다. 두 문자열이 다른 경우 두 문자열에 대해 유효한 인덱스 인 일부 인덱스에서 다른 문자를 가지거나 길이가 다르거 나 둘 다입니다. 하나 이상의 색인 위치에 다른 문자가있는 경우</target>
        </trans-unit>
        <trans-unit id="155f4775dfe67f2e37ac3a0fe24fa7a373a1ef26" translate="yes" xml:space="preserve">
          <source>This is the distance from 0, 0 to the left (top) of the glyph bounds. If the bounds of the glyph is to the left of (above) the origin, the LSB is negative.</source>
          <target state="translated">이것은 0, 0에서 글리프 경계의 왼쪽 (위쪽)까지의 거리입니다. 글리프의 경계가 원점의 왼쪽 (위)에 있으면 LSB는 음수입니다.</target>
        </trans-unit>
        <trans-unit id="ead650b19053a4c0cf98869bf8cc4671a6f5fce2" translate="yes" xml:space="preserve">
          <source>This is the distance from the right (bottom) of the glyph bounds to the advance. If the bounds of the glyph is to the right of (below) the advance, the RSB is negative.</source>
          <target state="translated">이것은 글리프 경계의 오른쪽 (아래)에서 진행까지의 거리입니다. 문양의 경계가 진행의 오른쪽 (아래)에 있으면 RSB는 음수입니다.</target>
        </trans-unit>
        <trans-unit id="6ca4a154ab196aa185f6aa2bb880b1b5df0caad5" translate="yes" xml:space="preserve">
          <source>This is the engine scope bindings.</source>
          <target state="translated">이것은 엔진 범위 바인딩입니다.</target>
        </trans-unit>
        <trans-unit id="e11662348c78bc3fe8b7e30770a72eb59c1679f5" translate="yes" xml:space="preserve">
          <source>This is the engine scope bindings. By default, a &lt;code&gt;SimpleBindings&lt;/code&gt; is used. Accessor methods setBindings, getBindings are used to manage this field.</source>
          <target state="translated">이것이 엔진 범위 바인딩입니다. 기본적으로 &lt;code&gt;SimpleBindings&lt;/code&gt; 가 사용됩니다. 접근 자 메소드 setBindings, getBindings가이 필드를 관리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6cdf09d60b9159dfd07a85f758f7b5b0c2a021fc" translate="yes" xml:space="preserve">
          <source>This is the exception for invalid Keys (invalid encoding, wrong length, uninitialized, etc).</source>
          <target state="translated">유효하지 않은 키 (유효하지 않은 인코딩, 잘못된 길이, 초기화되지 않은 등)는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="664a30463733160575da0c331e578d8c1f2d4a3b" translate="yes" xml:space="preserve">
          <source>This is the exception for invalid key specifications.</source>
          <target state="translated">유효하지 않은 키 사양은 예외입니다.</target>
        </trans-unit>
        <trans-unit id="6cd1bb760a87cf38c43b0c5de81b84ac2d84a535" translate="yes" xml:space="preserve">
          <source>This is the exception for invalid or inappropriate algorithm parameters.</source>
          <target state="translated">이는 유효하지 않거나 부적절한 알고리즘 매개 변수에 대한 예외입니다.</target>
        </trans-unit>
        <trans-unit id="eb90331dcc7b676ae4aa32ccd44000ad6717006e" translate="yes" xml:space="preserve">
          <source>This is the exception for invalid parameter specifications.</source>
          <target state="translated">유효하지 않은 매개 변수 스펙의 예외입니다.</target>
        </trans-unit>
        <trans-unit id="25d7ddc403a91d82aa917f3247a9006d65af997b" translate="yes" xml:space="preserve">
          <source>This is the first date-time after the discontinuity, when the new offset applies.</source>
          <target state="translated">새 오프셋이 적용되는 불연속 이후 첫 번째 날짜-시간입니다.</target>
        </trans-unit>
        <trans-unit id="f7a41d64caa3cfdb1e048821ab3910d9818c9709" translate="yes" xml:space="preserve">
          <source>This is the general key management exception for all operations dealing with key management.</source>
          <target state="translated">이것은 키 관리를 다루는 모든 작업에 대한 일반적인 키 관리 예외입니다.</target>
        </trans-unit>
        <trans-unit id="bf2ef16309826b550c7ce4745a8a6f870bc33d8b" translate="yes" xml:space="preserve">
          <source>This is the general key management exception for all operations dealing with key management. Examples of subclasses of KeyManagementException that developers might create for giving more detailed information could include:</source>
          <target state="translated">이것은 키 관리를 다루는 모든 작업에 대한 일반적인 키 관리 예외입니다. 개발자가보다 자세한 정보를 제공하기 위해 생성 할 수있는 KeyManagementException의 서브 클래스의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3ea4ec451d72714b5571c57fd12c92a06fdd6848" translate="yes" xml:space="preserve">
          <source>This is the general, more flexible metafactory; a streamlined version is provided by &lt;a href=&quot;#metafactory(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;metafactory(java.lang.invoke.MethodHandles.Lookup,
 String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt;&lt;/a&gt;. A general description of the behavior of this method is provided &lt;a href=&quot;lambdametafactory&quot;&gt;&lt;code&gt;above&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 일반적이고보다 유연한 메타 팩토리입니다. 간소화 된 버전은 &lt;a href=&quot;#metafactory(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;metafactory(java.lang.invoke.MethodHandles.Lookup, String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt; &lt;/a&gt; 의해 제공됩니다 . 이 메서드의 동작에 대한 일반적인 설명은 &lt;a href=&quot;lambdametafactory&quot;&gt; &lt;code&gt;above&lt;/code&gt; &lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="92d3b50297fc56af57293a45a3c283351489c1c5" translate="yes" xml:space="preserve">
          <source>This is the general, more flexible metafactory; a streamlined version is provided by &lt;a href=&quot;lambdametafactory#metafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.invoke.MethodType-java.lang.invoke.MethodHandle-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;metafactory(java.lang.invoke.MethodHandles.Lookup,
 String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt;&lt;/a&gt;. A general description of the behavior of this method is provided &lt;a href=&quot;lambdametafactory&quot;&gt;&lt;code&gt;above&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 일반적이고 더 유연한 메타 팩토리입니다. 간소화 된 버전은 &lt;a href=&quot;lambdametafactory#metafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.invoke.MethodType-java.lang.invoke.MethodHandle-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;metafactory(java.lang.invoke.MethodHandles.Lookup, String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt; &lt;/a&gt; 의해 제공됩니다 . 이 방법의 동작에 대한 일반적인 설명은 &lt;a href=&quot;lambdametafactory&quot;&gt; &lt;code&gt;above&lt;/code&gt; &lt;/a&gt; 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="e91505182be4126c5af1b01bcc868d5ea491c1b8" translate="yes" xml:space="preserve">
          <source>This is the generic ExemptionMechanism exception.</source>
          <target state="translated">일반적인 ExemptionMechanism 예외입니다.</target>
        </trans-unit>
        <trans-unit id="99e7effb9560ac617ed439fce362d9b254bf5d1e" translate="yes" xml:space="preserve">
          <source>This is the generic KeyStore exception.</source>
          <target state="translated">이것은 일반적인 KeyStore 예외입니다.</target>
        </trans-unit>
        <trans-unit id="801316b487c2cd85d868aecbc469985be180cda6" translate="yes" xml:space="preserve">
          <source>This is the generic Message Digest exception.</source>
          <target state="translated">일반적인 메시지 요약 예외입니다.</target>
        </trans-unit>
        <trans-unit id="b76e4d69e464c7f1937b0a95e3180dc52c85b711" translate="yes" xml:space="preserve">
          <source>This is the generic Signature exception.</source>
          <target state="translated">이것은 일반적인 서명 예외입니다.</target>
        </trans-unit>
        <trans-unit id="eab4e66ab52836de66597186310f52915009f8d4" translate="yes" xml:space="preserve">
          <source>This is the global scope bindings.</source>
          <target state="translated">이것은 전역 범위 바인딩입니다.</target>
        </trans-unit>
        <trans-unit id="1c3f0b0b32f41381ce44379f5cb04156e9192d14" translate="yes" xml:space="preserve">
          <source>This is the global scope bindings. By default, a null value (which means no global scope) is used. Accessor methods setBindings, getBindings are used to manage this field.</source>
          <target state="translated">이것이 전역 범위 바인딩입니다. 기본적으로 널값 (글로벌 범위가 없음)이 사용됩니다. 접근 자 메소드 setBindings, getBindings가이 필드를 관리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a034135b1db2b3f1c2313332885379923eb8a551" translate="yes" xml:space="preserve">
          <source>This is the initial invocation and it is made once. It is typically used to make a request for more invocations.</source>
          <target state="translated">이것은 초기 호출이며 한 번만 수행됩니다. 일반적으로 더 많은 호출을 요청하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e5da7a96e9ed77d91ce83fa5e0c2d3c3356f842f" translate="yes" xml:space="preserve">
          <source>This is the instant of the discontinuity, which is defined as the first instant that the 'after' offset applies.</source>
          <target state="translated">이것은 불연속의 순간이며, '후'오프셋이 적용되는 첫 번째 순간으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="2c186ccbee16f0419c2016ae00928bddd8a7ccf3" translate="yes" xml:space="preserve">
          <source>This is the interface for MBean manipulation on the agent side.</source>
          <target state="translated">이것은 에이전트 측에서 MBean 조작을위한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="bd295e3366839668f2129d91cb294757200e5960" translate="yes" xml:space="preserve">
          <source>This is the interface for MBean manipulation on the agent side. It contains the methods necessary for the creation, registration, and deletion of MBeans as well as the access methods for registered MBeans. This is the core component of the JMX infrastructure.</source>
          <target state="translated">이것은 에이전트 측에서 MBean 조작을위한 인터페이스입니다. 여기에는 등록 된 MBean에 대한 액세스 메소드뿐만 아니라 MBean의 작성, 등록 및 삭제에 필요한 메소드가 포함됩니다. 이것이 JMX 인프라의 핵심 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="3caef2258932cdb871defea1f3b66b38e45f843c" translate="yes" xml:space="preserve">
          <source>This is the interface used for representing one entry in an Access Control List (ACL).</source>
          <target state="translated">ACL (Access Control List)에서 하나의 항목을 나타내는 데 사용되는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="e094af8774233acb682e40164308fe43be589fea" translate="yes" xml:space="preserve">
          <source>This is the key algorithm for that key. The key algorithm is usually an encryption or asymmetric operation algorithm (such as DSA or RSA), which will work with those algorithms and with related algorithms (such as MD5 with RSA, SHA-1 with RSA, Raw DSA, etc.) The name of the algorithm of a key is obtained using the &lt;a href=&quot;#getAlgorithm()&quot;&gt;&lt;code&gt;getAlgorithm&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것이 해당 키의 키 알고리즘입니다. 키 알고리즘은 일반적으로 암호화 또는 비대칭 작업 알고리즘 (예 : DSA 또는 RSA)이며 이러한 알고리즘 및 관련 알고리즘 (예 : RSA가있는 MD5, RSA가있는 SHA-1, 원시 DSA 등)과 함께 작동합니다. 키 알고리즘의 값은 &lt;a href=&quot;#getAlgorithm()&quot;&gt; &lt;code&gt;getAlgorithm&lt;/code&gt; &lt;/a&gt; 메소드 를 사용하여 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="48f7efce64d4b1895ee005221d1242197f938904" translate="yes" xml:space="preserve">
          <source>This is the key algorithm for that key. The key algorithm is usually an encryption or asymmetric operation algorithm (such as DSA or RSA), which will work with those algorithms and with related algorithms (such as MD5 with RSA, SHA-1 with RSA, Raw DSA, etc.) The name of the algorithm of a key is obtained using the &lt;a href=&quot;key#getAlgorithm--&quot;&gt;&lt;code&gt;getAlgorithm&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것이 해당 키의 키 알고리즘입니다. 주요 알고리즘은 일반적으로 암호화 또는 비대칭 연산 알고리즘 (예 : DSA 또는 RSA)이며 해당 알고리즘 및 관련 알고리즘 (예 : MD5 RSA, SHA-1 RSA, Raw DSA 등)에서 작동합니다. 이름 키 알고리즘은 &lt;a href=&quot;key#getAlgorithm--&quot;&gt; &lt;code&gt;getAlgorithm&lt;/code&gt; &lt;/a&gt; 메소드 를 사용하여 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="01e5302844e01de3feca2764edf5599440d3d112" translate="yes" xml:space="preserve">
          <source>This is the last invocation from the specified &lt;code&gt;WebSocket&lt;/code&gt;. By the time this invocation begins the WebSocket's input will have been closed.</source>
          <target state="translated">이것은 지정된 &lt;code&gt;WebSocket&lt;/code&gt; 의 마지막 호출입니다 . 이 호출이 시작될 때까지 WebSocket의 입력이 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="611bcffa6e1eacbe7c0e9a679cbbf5e75ba70079" translate="yes" xml:space="preserve">
          <source>This is the last invocation from the specified WebSocket. By the time this invocation begins both the WebSocket's input and output will have been closed. A WebSocket may invoke this method on the associated listener at any time after it has invoked &lt;code&gt;onOpen&lt;/code&gt;, regardless of whether or not any invocations have been requested from the WebSocket.</source>
          <target state="translated">이것은 지정된 WebSocket의 마지막 호출입니다. 이 호출이 시작되면 WebSocket의 입력과 출력이 모두 닫힙니다. WebSocket은 WebSocket에서 호출이 요청되었는지 여부에 관계없이 &lt;code&gt;onOpen&lt;/code&gt; 을 호출 한 후 언제든지 연결된 리스너에서이 메서드를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c3bee9a4724d67f89fea0adf93f2c83f342904d5" translate="yes" xml:space="preserve">
          <source>This is the main interface that most SAX applications implement: if the application needs to be informed of basic parsing events, it implements this interface and registers an instance with the SAX parser using the &lt;a href=&quot;xmlreader#setContentHandler(org.xml.sax.ContentHandler)&quot;&gt;&lt;code&gt;setContentHandler&lt;/code&gt;&lt;/a&gt; method. The parser uses the instance to report basic document-related events like the start and end of elements and character data.</source>
          <target state="translated">이것은 대부분의 SAX 응용 프로그램이 구현하는 기본 인터페이스입니다. 응용 프로그램에 기본 구문 분석 이벤트를 알려야하는 경우이 인터페이스를 구현하고 &lt;a href=&quot;xmlreader#setContentHandler(org.xml.sax.ContentHandler)&quot;&gt; &lt;code&gt;setContentHandler&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 SAX 파서에 인스턴스를 등록합니다 . 구문 분석기는 인스턴스를 사용하여 요소 및 문자 데이터의 시작 및 끝과 같은 기본 문서 관련 이벤트를보고합니다.</target>
        </trans-unit>
        <trans-unit id="dd809badf4082c863429074d3401edf75f48784b" translate="yes" xml:space="preserve">
          <source>This is the main method for class loaders that is being redefined.</source>
          <target state="translated">이것은 재정의되는 클래스 로더의 기본 방법입니다.</target>
        </trans-unit>
        <trans-unit id="c8d438584001b8fd9cac0f4e95810f61e6c6a5e5" translate="yes" xml:space="preserve">
          <source>This is the method that is used by the default implementation of the action for inserting content that gets bound to the keymap actions.</source>
          <target state="translated">이는 키맵 작업에 바인딩되는 콘텐츠를 삽입하기 위해 작업의 기본 구현에서 사용되는 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="520d87aefc2e87acb5bdc674ba517a09aa75552d" translate="yes" xml:space="preserve">
          <source>This is the method to override if a program needs to track every add request to a container as all other add methods defer to this one. An overriding method should usually include a call to the superclass's version of the method:</source>
          <target state="translated">다른 모든 추가 메소드가이 요청을 연기하므로 프로그램이 컨테이너에 대한 모든 추가 요청을 추적해야하는 경우 대체 할 메소드입니다. 대체 메서드는 일반적으로 메서드의 수퍼 클래스 버전에 대한 호출을 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="889f9078f7a00476e777e0e09d47001df3896257" translate="yes" xml:space="preserve">
          <source>This is the name for the ResourceBundle that should be used to localize the message string before formatting it. The result may be null if the message is not localizable.</source>
          <target state="translated">메시지 문자열을 형식화하기 전에 현지화하는 데 사용해야하는 ResourceBundle의 이름입니다. 메시지를 현지화 할 수없는 경우 결과는 null 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b695194fbf219aa3ef1e192d0e23f1091223639b" translate="yes" xml:space="preserve">
          <source>This is the name of the format of the encoded key. It is returned by the &lt;a href=&quot;#getFormat()&quot;&gt;&lt;code&gt;getFormat&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것은 인코딩 된 키 형식의 이름입니다. &lt;a href=&quot;#getFormat()&quot;&gt; &lt;code&gt;getFormat&lt;/code&gt; &lt;/a&gt; 메소드에 의해 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="76735f0dd1715ad11b7bef5ec50b5a0df3241abe" translate="yes" xml:space="preserve">
          <source>This is the name of the format of the encoded key. It is returned by the &lt;a href=&quot;key#getFormat--&quot;&gt;&lt;code&gt;getFormat&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">인코딩 된 키 형식의 이름입니다. &lt;a href=&quot;key#getFormat--&quot;&gt; &lt;code&gt;getFormat&lt;/code&gt; &lt;/a&gt; 메소드에 의해 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="59145f1680e358c36514a0b5f00256f9067a358b" translate="yes" xml:space="preserve">
          <source>This is the number of array elements that make up the text of interest.</source>
          <target state="translated">관심있는 텍스트를 구성하는 배열 요소의 수입니다.</target>
        </trans-unit>
        <trans-unit id="646dd597b918e6ca522de0fa02a51111d5c4f094" translate="yes" xml:space="preserve">
          <source>This is the object which manages the header of the &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 헤더를 관리하는 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="49769a6086eb6a35292a153192bf3a147ad64c34" translate="yes" xml:space="preserve">
          <source>This is the offset in use before the instant of the transition.</source>
          <target state="translated">전환 직전에 사용중인 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="3336f6a5b69cc122c14e4a39dabd5406670f44e9" translate="yes" xml:space="preserve">
          <source>This is the offset in use on and after the instant of the transition.</source>
          <target state="translated">전환 순간 및 이후에 사용중인 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="3fda97c7198c3388d2c498299b0647f5c9166e69" translate="yes" xml:space="preserve">
          <source>This is the offset into the array that the desired text begins.</source>
          <target state="translated">이것은 원하는 텍스트가 시작되는 배열로의 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="17db630c5e8a9e913c98f31e592ac067bde6f55b" translate="yes" xml:space="preserve">
          <source>This is the offset of the local date-time from UTC/Greenwich.</source>
          <target state="translated">UTC / 그리니치에서 현지 날짜-시간의 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="4ef3b706de11081e89b9ba52606d129da4202b9a" translate="yes" xml:space="preserve">
          <source>This is the offset of the local time from UTC/Greenwich.</source>
          <target state="translated">UTC / 그리니치에서 현지 시간의 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="05409061fb787a89d2cbb18ecaf5e0a08757177f" translate="yes" xml:space="preserve">
          <source>This is the only method that can set the match column before a &lt;code&gt;RowSet&lt;/code&gt; object is added to a &lt;code&gt;JoinRowSet&lt;/code&gt; object. The &lt;code&gt;RowSet&lt;/code&gt; object must have implemented the &lt;code&gt;Joinable&lt;/code&gt; interface in order to use the method &lt;code&gt;setMatchColumn&lt;/code&gt;. Once the match column value has been set, this method can be used to reset the match column at any time.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 개체가 &lt;code&gt;JoinRowSet&lt;/code&gt; 개체에 추가 되기 전에 일치 열을 설정할 수있는 유일한 방법입니다 . &lt;code&gt;RowSet&lt;/code&gt; 객체는 구현해야합니다 &lt;code&gt;Joinable&lt;/code&gt; 메소드를 사용하기 위해 인터페이스를 &lt;code&gt;setMatchColumn&lt;/code&gt; 을 . 일치 열 값이 설정되면이 방법을 사용하여 언제든지 일치 열을 재설정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5aba2a062cf622f7d01991ec5da88105d558936a" translate="yes" xml:space="preserve">
          <source>This is the original SAX1 interface for reporting an element's attributes. Unlike the new &lt;a href=&quot;attributes&quot;&gt;&lt;code&gt;Attributes&lt;/code&gt;&lt;/a&gt; interface, it does not support Namespace-related information.</source>
          <target state="translated">이것은 요소의 속성을보고하기위한 원래 SAX1 인터페이스입니다. 새로운 &lt;a href=&quot;attributes&quot;&gt; &lt;code&gt;Attributes&lt;/code&gt; &lt;/a&gt; 인터페이스 와 달리 네임 스페이스 관련 정보를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="979acb87fadba3b726da7853124682c019fa4347" translate="yes" xml:space="preserve">
          <source>This is the primary way to access the offset amount. It returns the total of the hours, minutes and seconds fields as a single offset that can be added to a time.</source>
          <target state="translated">이것이 오프셋 금액에 액세스하는 기본 방법입니다. 총 시간, 분 및 초 필드를 시간에 추가 할 수있는 단일 오프셋으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="214dd6cb25c17056815b188b4026faa8f8f435e2" translate="yes" xml:space="preserve">
          <source>This is the reader to be used for input from scripts.</source>
          <target state="translated">이것은 스크립트 입력에 사용되는 리더입니다.</target>
        </trans-unit>
        <trans-unit id="6632f7dc2ed6c06c20da5f1a65d5136887759f6c" translate="yes" xml:space="preserve">
          <source>This is the reader to be used for input from scripts. By default, a &lt;code&gt;InputStreamReader&lt;/code&gt; based on &lt;code&gt;System.in&lt;/code&gt; is used and default charset is used by this reader. Accessor methods getReader, setReader are used to manage this field.</source>
          <target state="translated">스크립트에서 입력하는 데 사용되는 리더입니다. 기본적 으로 &lt;code&gt;System.in&lt;/code&gt; 기반 의 &lt;code&gt;InputStreamReader&lt;/code&gt; 가 사용 되며이 리더는 기본 문자 집합을 사용합니다. 접근 자 메소드 getReader, setReader는이 필드를 관리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="08fd920b17aff702ea6034c1bebdd6fa96aa2254" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;Cipher&lt;/code&gt; object..</source>
          <target state="translated">이 &lt;code&gt;Cipher&lt;/code&gt; 객체 를 생성 한 &lt;code&gt;getInstance&lt;/code&gt; 호출 중 하나에 지정된 것과 동일한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="362a26bc3d245df7a2d010ad098ab67af5f1ba2e" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;ExemptionMechanism&lt;/code&gt; object.</source>
          <target state="translated">이것은 이 &lt;code&gt;ExemptionMechanism&lt;/code&gt; 객체 를 생성 한 &lt;code&gt;getInstance&lt;/code&gt; 호출 중 하나에 지정된 것과 동일한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="44689924d94c1486a7d9640da4b3f0035cbf5abc" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;KeyAgreement&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;KeyAgreement&lt;/code&gt; 객체 를 생성 한 &lt;code&gt;getInstance&lt;/code&gt; 호출 중 하나에 지정된 것과 동일한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="551467dd191fa5aef5c311da22739f792a7767ef" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;KeyGenerator&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;KeyGenerator&lt;/code&gt; 객체 를 생성 한 &lt;code&gt;getInstance&lt;/code&gt; 호출 중 하나에 지정된 것과 동일한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="9484af8f721dd283f10e59fe4ca2c142caa75487" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;KeyManagerFactory&lt;/code&gt; object.</source>
          <target state="translated">이것은 이 &lt;code&gt;KeyManagerFactory&lt;/code&gt; 객체 를 작성한 &lt;code&gt;getInstance&lt;/code&gt; 호출 중 하나에서 지정된 것과 동일한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="af57c1c1d0a69b5cdf217e8c1fe51bfa1921cc97" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;Mac&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;Mac&lt;/code&gt; 객체 를 생성 한 &lt;code&gt;getInstance&lt;/code&gt; 호출 중 하나에 지정된 것과 동일한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="7153172d23e14a921e004133f3bec7aa304caf05" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;SSLContext&lt;/code&gt; object.</source>
          <target state="translated">이것은 이 &lt;code&gt;SSLContext&lt;/code&gt; 객체 를 작성한 &lt;code&gt;getInstance&lt;/code&gt; 호출 중 하나에 지정된 것과 동일한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="9570fdde85fff859b0f918774978949b2b648a93" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;SecretKeyFactory&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;SecretKeyFactory&lt;/code&gt; 객체 를 생성 한 &lt;code&gt;getInstance&lt;/code&gt; 호출 중 하나에 지정된 것과 동일한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="e63b3fc817900ea7fafcde912d2710d7f67edc04" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;TrustManagerFactory&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;TrustManagerFactory&lt;/code&gt; 객체 를 작성한 &lt;code&gt;getInstance&lt;/code&gt; 호출 중 하나에 지정된 것과 동일한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="16ec8b07e09705167861a12991dd68860340b6e2" translate="yes" xml:space="preserve">
          <source>This is the set of things needed by a text component to be a reasonably functioning editor for some &lt;em&gt;type&lt;/em&gt; of text document.</source>
          <target state="translated">이것은 텍스트 문서 &lt;em&gt;유형&lt;/em&gt; 에 대해 합리적으로 작동하는 편집기가되기 위해 텍스트 구성 요소에 필요한 일련의 것 입니다.</target>
        </trans-unit>
        <trans-unit id="ef95de213eb90379b9fcd4eeabcd200a698db3d1" translate="yes" xml:space="preserve">
          <source>This is the set of things needed by a text component to be a reasonably functioning editor for some &lt;em&gt;type&lt;/em&gt; of text document. This implementation provides a default implementation which treats text as plain text and provides a minimal set of actions for a simple editor.</source>
          <target state="translated">이것은 텍스트 문서 &lt;em&gt;유형&lt;/em&gt; 에 대해 합리적으로 작동하는 편집기가되기 위해 텍스트 구성 요소가 필요로하는 일련의 것 입니다. 이 구현은 텍스트를 일반 텍스트로 처리하는 기본 구현을 제공하고 간단한 편집기에 최소한의 작업 집합을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c5d690b90694c13be1ae5de3afc18ab60b107f90" translate="yes" xml:space="preserve">
          <source>This is the set of things needed by a text component to be a reasonably functioning editor for some &lt;em&gt;type&lt;/em&gt; of text document. This implementation provides a default implementation which treats text as styled text and provides a minimal set of actions for editing styled text.</source>
          <target state="translated">이것은 텍스트 문서 &lt;em&gt;유형&lt;/em&gt; 에 대해 합리적으로 작동하는 편집기가되기 위해 텍스트 구성 요소에 필요한 일련의 것 입니다. 이 구현은 텍스트를 스타일이 지정된 텍스트로 취급하고 스타일이 지정된 텍스트를 편집하기위한 최소한의 작업 집합을 제공하는 기본 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b668ecee10ee11f0ccedbc56a179561332fd5e58" translate="yes" xml:space="preserve">
          <source>This is the standard, streamlined metafactory; additional flexibility is provided by &lt;a href=&quot;#altMetafactory(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.Object...)&quot;&gt;&lt;code&gt;altMetafactory(MethodHandles.Lookup, String, MethodType, Object...)&lt;/code&gt;&lt;/a&gt;. A general description of the behavior of this method is provided &lt;a href=&quot;lambdametafactory&quot;&gt;&lt;code&gt;above&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 표준적이고 간소화 된 메타 팩토리입니다. 추가 유연성은 &lt;a href=&quot;#altMetafactory(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.Object...)&quot;&gt; &lt;code&gt;altMetafactory(MethodHandles.Lookup, String, MethodType, Object...)&lt;/code&gt; &lt;/a&gt; 의해 제공됩니다 . 이 메서드의 동작에 대한 일반적인 설명은 &lt;a href=&quot;lambdametafactory&quot;&gt; &lt;code&gt;above&lt;/code&gt; &lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d9f4e9b7cfc383346308adeaf21a1db9d0c63cb" translate="yes" xml:space="preserve">
          <source>This is the standard, streamlined metafactory; additional flexibility is provided by &lt;a href=&quot;lambdametafactory#altMetafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.Object...-&quot;&gt;&lt;code&gt;altMetafactory(MethodHandles.Lookup, String, MethodType, Object...)&lt;/code&gt;&lt;/a&gt;. A general description of the behavior of this method is provided &lt;a href=&quot;lambdametafactory&quot;&gt;&lt;code&gt;above&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 표준적이고 간결한 메타 팩토리입니다. 추가 유연성은 &lt;a href=&quot;lambdametafactory#altMetafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.Object...-&quot;&gt; &lt;code&gt;altMetafactory(MethodHandles.Lookup, String, MethodType, Object...)&lt;/code&gt; &lt;/a&gt; 의해 제공됩니다 . 이 방법의 동작에 대한 일반적인 설명은 &lt;a href=&quot;lambdametafactory&quot;&gt; &lt;code&gt;above&lt;/code&gt; &lt;/a&gt; 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="08713ab9a869e7d5fc69a3646dc0fdc0be83b7e7" translate="yes" xml:space="preserve">
          <source>This is the super class of all the locale sensitive service provider interfaces (SPIs).</source>
          <target state="translated">이것은 모든 로케일 구분 서비스 제공자 인터페이스 (SPI)의 수퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="2ae4fcfa7f98dc6b0ddeb539533392a72feb00a9" translate="yes" xml:space="preserve">
          <source>This is the superclass for Paints which use a multiple color gradient to fill in their raster.</source>
          <target state="translated">이것은 래스터를 채우기 위해 다중 색상 그라디언트를 사용하는 페인트의 수퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="0e9cbf2f6db728bcf1173c91c07cb87377f7739a" translate="yes" xml:space="preserve">
          <source>This is the superclass for Paints which use a multiple color gradient to fill in their raster. It provides storage for variables and enumerated values common to &lt;code&gt;LinearGradientPaint&lt;/code&gt; and &lt;code&gt;RadialGradientPaint&lt;/code&gt;.</source>
          <target state="translated">이것은 래스터를 채우기 위해 다중 색상 그라디언트를 사용하는 페인트의 수퍼 클래스입니다. &lt;code&gt;LinearGradientPaint&lt;/code&gt; 및 &lt;code&gt;RadialGradientPaint&lt;/code&gt; 에 공통적 인 변수 및 열거 된 값에 대한 저장소를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="7cf71e1b96731023ae05e625836032d436f13cff" translate="yes" xml:space="preserve">
          <source>This is the superclass of all exceptions thrown by operations in the Context and DirContext interfaces.</source>
          <target state="translated">이것은 Context 및 DirContext 인터페이스의 오퍼레이션에 의해 발생 된 모든 예외의 수퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="c09719224a14a1f8c021b38f5294d739a940b8e3" translate="yes" xml:space="preserve">
          <source>This is the superclass of all exceptions thrown by operations in the Context and DirContext interfaces. The nature of the failure is described by the name of the subclass. This exception captures the information pinpointing where the operation failed, such as where resolution last proceeded to.</source>
          <target state="translated">이것은 Context 및 DirContext 인터페이스의 오퍼레이션에 의해 발생 된 모든 예외의 수퍼 클래스입니다. 실패의 특성은 서브 클래스의 이름으로 설명됩니다. 이 예외는 해결이 마지막으로 진행된 곳과 같이 작업이 실패한 곳을 정확하게 나타내는 정보를 캡처합니다.</target>
        </trans-unit>
        <trans-unit id="bac966b23fc2541f976ddd7be68a237883504b6e" translate="yes" xml:space="preserve">
          <source>This is the superclass of security-related exceptions thrown by operations in the Context and DirContext interfaces.</source>
          <target state="translated">이는 Context 및 DirContext 인터페이스의 조작에 의해 발생되는 보안 관련 예외의 수퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="6643b141302429d4fea2b066f297c10dbed91915" translate="yes" xml:space="preserve">
          <source>This is the superclass of security-related exceptions thrown by operations in the Context and DirContext interfaces. The nature of the failure is described by the name of the subclass.</source>
          <target state="translated">이는 Context 및 DirContext 인터페이스의 조작에 의해 발생되는 보안 관련 예외의 수퍼 클래스입니다. 실패의 특성은 서브 클래스의 이름으로 설명됩니다.</target>
        </trans-unit>
        <trans-unit id="8d2cd4f4f4e3f42c858d27879ced679106ac9aaf" translate="yes" xml:space="preserve">
          <source>This is the top level interface for events dealing with DTDs</source>
          <target state="translated">DTD를 다루는 이벤트를위한 최상위 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="6a99f649310da6f34936c4191b3ec7228a897699" translate="yes" xml:space="preserve">
          <source>This is the top level interface for parsing XML Events.</source>
          <target state="translated">XML 이벤트 구문 분석을위한 최상위 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="0956afcea5544855b360fc8789a2b0eec8504fa4" translate="yes" xml:space="preserve">
          <source>This is the top level interface for parsing XML Events. It provides the ability to peek at the next event and returns configuration information through the property interface.</source>
          <target state="translated">XML 이벤트 구문 분석을위한 최상위 인터페이스입니다. 다음 이벤트를 엿볼 수있는 기능을 제공하고 속성 인터페이스를 통해 구성 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="32a076f7b506324d0674d288a95342d45ece5732" translate="yes" xml:space="preserve">
          <source>This is the top level interface for writing XML documents.</source>
          <target state="translated">이것은 XML 문서 작성을위한 최상위 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="e4876d3f3643dcd96600c97c7861bd99d4baff85" translate="yes" xml:space="preserve">
          <source>This is the top level interface for writing XML documents. Instances of this interface are not required to validate the form of the XML.</source>
          <target state="translated">이것은 XML 문서 작성을위한 최상위 인터페이스입니다. 이 인터페이스의 인스턴스는 XML 형식의 유효성을 검사하는 데 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e1bc9f629208dc151d250d0c30ef46ac45bcee34" translate="yes" xml:space="preserve">
          <source>This is the writer to be used to output errors from scripts.</source>
          <target state="translated">스크립트에서 오류를 출력하는 데 사용되는 작성기입니다.</target>
        </trans-unit>
        <trans-unit id="6080b203c70f7a616bcedbc5fd678fce4238c455" translate="yes" xml:space="preserve">
          <source>This is the writer to be used to output errors from scripts. By default, a &lt;code&gt;PrintWriter&lt;/code&gt; based on &lt;code&gt;System.err&lt;/code&gt; is used. Accessor methods getErrorWriter, setErrorWriter are used to manage this field.</source>
          <target state="translated">스크립트에서 오류를 출력하는 데 사용되는 기록기입니다. 기본적 으로 &lt;code&gt;System.err&lt;/code&gt; 기반 의 &lt;code&gt;PrintWriter&lt;/code&gt; 가 사용됩니다. 접근 자 메소드 getErrorWriter, setErrorWriter가이 필드를 관리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e5f7601a93b83b68419b9e234391cf04bddac54a" translate="yes" xml:space="preserve">
          <source>This is the writer to be used to output from scripts.</source>
          <target state="translated">이것은 스크립트에서 출력하는 데 사용되는 작성기입니다.</target>
        </trans-unit>
        <trans-unit id="15af96f510cf6e282b8213079f3b883baccf707e" translate="yes" xml:space="preserve">
          <source>This is the writer to be used to output from scripts. By default, a &lt;code&gt;PrintWriter&lt;/code&gt; based on &lt;code&gt;System.out&lt;/code&gt; is used. Accessor methods getWriter, setWriter are used to manage this field.</source>
          <target state="translated">스크립트에서 출력하는 데 사용되는 기록기입니다. 기본적 으로 &lt;code&gt;System.out&lt;/code&gt; 을 기반으로 하는 &lt;code&gt;PrintWriter&lt;/code&gt; 가 사용됩니다. 접근 자 메소드 getWriter, setWriter는이 필드를 관리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1eb981c12f7779ad67b66f4870a9708221efbc1e" translate="yes" xml:space="preserve">
          <source>This is trivial if both &lt;code&gt;fixedCellWidth&lt;/code&gt; and &lt;code&gt;fixedCellHeight&lt;/code&gt; have been set (either explicitly or by specifying a prototype cell value). The width is simply the &lt;code&gt;fixedCellWidth&lt;/code&gt; plus the list's horizontal insets. The height is the &lt;code&gt;fixedCellHeight&lt;/code&gt; multiplied by the &lt;code&gt;visibleRowCount&lt;/code&gt;, plus the list's vertical insets.</source>
          <target state="translated">&lt;code&gt;fixedCellWidth&lt;/code&gt; 와 &lt;code&gt;fixedCellHeight&lt;/code&gt; 가 모두 설정 되어 있는 경우 (명시 적으로 또는 프로토 타입 셀 값을 지정하여) 이는 간단합니다 . 너비는 단순히 &lt;code&gt;fixedCellWidth&lt;/code&gt; 에 목록의 가로 삽입을 더한 것입니다. 높이는 &lt;code&gt;fixedCellHeight&lt;/code&gt; 에 &lt;code&gt;visibleRowCount&lt;/code&gt; 를 곱한 값 과 목록의 수직 인세 트를 더한 값입니다.</target>
        </trans-unit>
        <trans-unit id="8ee9c9da35fb85a4d327067b64bc367ee4905caa" translate="yes" xml:space="preserve">
          <source>This is typically used for formatting and parsing a two digit year.</source>
          <target state="translated">이것은 일반적으로 2 자리 연도를 형식화하고 구문 분석하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4acd6d6c05f433c02dd76e40276f8611fbddf766" translate="yes" xml:space="preserve">
          <source>This is unsafe, since more constants may be added in the future and since it is not guaranteed that orientation objects will be unique.</source>
          <target state="translated">앞으로 더 많은 상수가 추가 될 수 있고 방향 개체가 고유 할 것이라는 보장이 없기 때문에 이것은 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7623267430712a3687f94d46fbfb93f4f22f7f00" translate="yes" xml:space="preserve">
          <source>This is used for throwing processor exceptions before the processing has started.</source>
          <target state="translated">이것은 처리가 시작되기 전에 프로세서 예외를 발생시키는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cfb9868971416de5823f6b3430dc2140d38adf3f" translate="yes" xml:space="preserve">
          <source>This is used to get multiple key down events to appropriately generate events.</source>
          <target state="translated">이벤트를 적절하게 생성하기 위해 여러 키 다운 이벤트를 가져 오는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4f4575371195406b5c199ded211735094638a4eb" translate="yes" xml:space="preserve">
          <source>This is used to lookup any part of the formatter needing specific localization, such as the text or localized pattern.</source>
          <target state="translated">텍스트 또는 현지화 된 패턴과 같이 특정 현지화가 필요한 포맷터의 일부를 조회하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ae317f0258d49c6428d47611ea4df68856b21b04" translate="yes" xml:space="preserve">
          <source>This is used to lookup any part of the formatter needing specific localization, such as the text or localized pattern. If the locale contains the &quot;ca&quot; (calendar), &quot;nu&quot; (numbering system), &quot;rg&quot; (region override), and/or &quot;tz&quot; (timezone) &lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt;Unicode extensions&lt;/a&gt;, the chronology, numbering system and/or the zone are overridden. If both &quot;ca&quot; and &quot;rg&quot; are specified, the chronology from the &quot;ca&quot; extension supersedes the implicit one from the &quot;rg&quot; extension. Same is true for the &quot;nu&quot; extension.</source>
          <target state="translated">이는 텍스트 또는 지역화 된 패턴과 같은 특정 지역화가 필요한 포맷터의 모든 부분을 조회하는 데 사용됩니다. 로케일에 &quot;ca&quot;(달력), &quot;nu&quot;(번호 체계), &quot;rg&quot;(지역 재정의) 및 / 또는 &quot;tz&quot;(시간대) &lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt;유니 코드 확장&lt;/a&gt; , 연대기, 번호 체계 및 / 또는 영역이 포함 된 경우 재정의됩니다. &quot;ca&quot;와 &quot;rg&quot;가 모두 지정되면 &quot;ca&quot;확장의 연대기가 &quot;rg&quot;확장의 암시 적 연대기를 대체합니다. &quot;nu&quot;확장자도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="feda7da25d4b9ad70063ab270c0d7b03ce728049" translate="yes" xml:space="preserve">
          <source>This is useful for highlighting the search term in the documents when they are opened.</source>
          <target state="translated">이는 문서를 열 때 문서에서 검색어를 강조하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="0422da1a451403f134567c7c9f1705c12666722f" translate="yes" xml:space="preserve">
          <source>This is useful if an existing KeyStore object needs to be used with Builder-based APIs.</source>
          <target state="translated">기존 키 저장소 오브젝트를 빌더 기반 API와 함께 사용해야하는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e982851c7c5c4136cdaa4ba7b98867e7e1d69a54" translate="yes" xml:space="preserve">
          <source>This is useful in the case where a random IV was created, or in the context of password-based encryption or decryption, where the IV is derived from a user-supplied password.</source>
          <target state="translated">이는 임의 IV가 생성 된 경우 또는 IV가 사용자 제공 암호에서 파생 된 암호 기반 암호화 또는 암호 해독의 컨텍스트에서 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e2535746cccdbbca1ab930ed4fcdb0c529016428" translate="yes" xml:space="preserve">
          <source>This is useful in the context of password-based encryption or decryption, where the IV is derived from a user-provided passphrase.</source>
          <target state="translated">이것은 암호 기반 암호화 또는 암호 해독의 컨텍스트에서 유용합니다. 여기서 IV는 사용자 제공 암호문에서 파생됩니다.</target>
        </trans-unit>
        <trans-unit id="38ac76a18b55090cf606b0fdc4029b6b203666d4" translate="yes" xml:space="preserve">
          <source>This is useful, for example, if running under full-screen mode and better performance is desired, or if page-flipping is used as the buffer strategy.</source>
          <target state="translated">예를 들어 전체 화면 모드에서 실행되고 더 나은 성능이 필요한 경우 또는 페이지 넘기기가 버퍼 전략으로 사용되는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="a93d19bf7ddbd83d7a3a8caba522abd78a82d30e" translate="yes" xml:space="preserve">
          <source>This is what a menu bar might look like:</source>
          <target state="translated">메뉴 표시 줄은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9cf54f5c44b9b05526dc556c0af31e68f521cdb6" translate="yes" xml:space="preserve">
          <source>This is where MXBeans differ from Standard MBeans. Although we define the management interface in almost exactly the same way, the MXBean framework &lt;em&gt;converts&lt;/em&gt; model-specific classes into standard classes from the Java platform. Using arrays and the &lt;a href=&quot;openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;openmbean/tabulardata&quot;&gt;&lt;code&gt;TabularData&lt;/code&gt;&lt;/a&gt; classes from the standard &lt;a href=&quot;openmbean/package-summary&quot;&gt;&lt;code&gt;javax.management.openmbean&lt;/code&gt;&lt;/a&gt; package, it is possible to build data structures of arbitrary complexity using only standard classes.</source>
          <target state="translated">MXBean과 표준 MBean이 다른 곳입니다. 거의 동일한 방식으로 관리 인터페이스를 정의하지만 MXBean 프레임 워크 &lt;em&gt;는&lt;/em&gt; 모델 별 클래스를 Java 플랫폼에서 표준 클래스로 &lt;em&gt;변환&lt;/em&gt; 합니다. 표준 &lt;a href=&quot;openmbean/package-summary&quot;&gt; &lt;code&gt;javax.management.openmbean&lt;/code&gt; 의&lt;/a&gt; 배열과 &lt;a href=&quot;openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;openmbean/tabulardata&quot;&gt; &lt;code&gt;TabularData&lt;/code&gt; &lt;/a&gt; 클래스 사용 패키지의 사용하면 표준 클래스 만 사용하여 임의의 복잡한 데이터 구조를 구축 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="151df2660c7d755c42534037d205d93fbee51de1" translate="yes" xml:space="preserve">
          <source>This iterator iterates over a sequence of collation elements that were built from the string. Because there isn't necessarily a one-to-one mapping from characters to collation elements, this doesn't mean the same thing as &quot;return the collation element [or ordering priority] of the next character in the string&quot;.</source>
          <target state="translated">이 반복자는 문자열에서 만들어진 일련의 데이터 정렬 요소를 반복합니다. 문자에서 데이터 정렬 요소로의 일대일 맵핑이 반드시 필요한 것은 아니므로 &quot;문자열에서 다음 문자의 데이터 정렬 요소 (또는 순서 우선 순위)를 리턴&quot;과 동일한 의미는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="fd4de962aa64b9c7d9a0ab672023e53024308e67" translate="yes" xml:space="preserve">
          <source>This iterator iterates over a sequence of collation elements that were built from the string. Because there isn't necessarily a one-to-one mapping from characters to collation elements, this doesn't mean the same thing as &quot;return the collation element [or ordering priority] of the previous character in the string&quot;.</source>
          <target state="translated">이 반복자는 문자열에서 만들어진 일련의 데이터 정렬 요소를 반복합니다. 문자에서 데이터 정렬 요소로의 일대일 맵핑이 반드시 필요한 것은 아니기 때문에 &quot;문자열에서 이전 문자의 데이터 정렬 요소 (또는 순서 우선 순위)를 리턴&quot;과 동일한 의미는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="8df0ad3bbb219e858791d7f90e24949d640b25d9" translate="yes" xml:space="preserve">
          <source>This job K octets attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">이 작업 K octets 속성 값과 &lt;code&gt;object&lt;/code&gt; 값이 같습니다.</target>
        </trans-unit>
        <trans-unit id="d940bed118346ee64706ad2f7d87e1ab7995a09d" translate="yes" xml:space="preserve">
          <source>This job K octets processed attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">이 작업 K octets 처리 된 속성 값과 &lt;code&gt;object&lt;/code&gt; 값이 같습니다.</target>
        </trans-unit>
        <trans-unit id="3f65bbab161b42056574e749ee8d56462819b331" translate="yes" xml:space="preserve">
          <source>This job K octets supported attribute's members and &lt;code&gt;object&lt;/code&gt;'s members are the same.</source>
          <target state="translated">이 작업 K octets 지원되는 속성의 멤버와 &lt;code&gt;object&lt;/code&gt; 의 멤버는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="9fed9deb5f20016ee1bed1062ecf52c4dc61c391" translate="yes" xml:space="preserve">
          <source>This job hold until attribute's &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value and &lt;code&gt;object&lt;/code&gt;'s &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value are equal.</source>
          <target state="translated">이 작업은 속성의 &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값과 &lt;code&gt;object&lt;/code&gt; 의 &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값이 같을 때까지 보류 됩니다.</target>
        </trans-unit>
        <trans-unit id="172b8f5af9b5cdedc44a30285eeb85b93f0b0cb8" translate="yes" xml:space="preserve">
          <source>This job hold until attribute's &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value and &lt;code&gt;object&lt;/code&gt;'s &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value are equal.</source>
          <target state="translated">이 작업은 속성의 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값과 &lt;code&gt;object&lt;/code&gt; 의 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 값이 같아 질 때까지 보류 됩니다.</target>
        </trans-unit>
        <trans-unit id="5ae1c3b0410efd951e802d6b4307d1b876418adf" translate="yes" xml:space="preserve">
          <source>This job impressions attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">이 직업은 속성의 가치와 &lt;code&gt;object&lt;/code&gt; 인상 합니다 값이 같습니다.</target>
        </trans-unit>
        <trans-unit id="827ef65f7ef707c073e8c41d3ef72aa77843b894" translate="yes" xml:space="preserve">
          <source>This job impressions completed attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">이 작업 노출 완료 속성 값과 &lt;code&gt;object&lt;/code&gt; 값이 같습니다.</target>
        </trans-unit>
        <trans-unit id="f6139b149f601585bc21d4753f1e2e0c7d403119" translate="yes" xml:space="preserve">
          <source>This job impressions supported attribute's members and &lt;code&gt;object&lt;/code&gt;'s members are the same.</source>
          <target state="translated">이 작업 노출 지원 속성의 구성원과 &lt;code&gt;object&lt;/code&gt; 의 구성원이 동일합니다.</target>
        </trans-unit>
        <trans-unit id="728ad9de98302e8507d3b5bf1be7c0a5581815c8" translate="yes" xml:space="preserve">
          <source>This job is retained and is currently able to be restarted.</source>
          <target state="translated">이 작업은 유지되며 현재 다시 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb6483defd35f76c155afbe008fe1a4b8343ac10" translate="yes" xml:space="preserve">
          <source>This job is retained and is currently able to be restarted. If &lt;code&gt;JOB_RESTARTABLE&lt;/code&gt; is contained in the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute, then the printer must accept a request to restart that job. This value should be supported if restarting jobs is supported.</source>
          <target state="translated">이 작업은 유지되며 현재 다시 시작할 수 있습니다. &lt;code&gt;JOB_RESTARTABLE&lt;/code&gt; 이 작업의 &lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt; 속성에 포함 된 경우 프린터는 해당 작업을 다시 시작하기위한 요청을 수락해야합니다. 작업 다시 시작이 지원되는 경우이 값이 지원되어야합니다.</target>
        </trans-unit>
        <trans-unit id="6be0f8fe2fb5cb41ae59c02f23e0143618bcf3fa" translate="yes" xml:space="preserve">
          <source>This job is retained and is currently able to be restarted. If JOB_RESTARTABLE is contained in the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute, then the printer must accept a request to restart that job. This value should be supported if restarting jobs is supported.</source>
          <target state="translated">이 작업은 유지되며 현재 다시 시작할 수 있습니다. JOB_RESTARTABLE이 작업의 &lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt; 속성에 포함 된 경우 프린터는 해당 작업을 다시 시작하라는 요청을 수락해야합니다. 작업 재시작이 지원되는 경우이 값이 지원되어야합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
