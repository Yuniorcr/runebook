<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="9b4969a30f3abb5784f65eb0a75bafb9d271d87f" translate="yes" xml:space="preserve">
          <source>!= &quot;never&quot;</source>
          <target state="translated">! = &quot;절대&quot;</target>
        </trans-unit>
        <trans-unit id="2ace62c1befa19e3ea37dd52be9f6d508c5163e6" translate="yes" xml:space="preserve">
          <source>&quot;</source>
          <target state="translated">&quot;</target>
        </trans-unit>
        <trans-unit id="ee94937565210791dcbb5a4089c7786c9d1240de" translate="yes" xml:space="preserve">
          <source>&quot; (note the double slashes).</source>
          <target state="translated">&quot;(이중 슬래시에 유의하십시오).</target>
        </trans-unit>
        <trans-unit id="1398c1a7f310583aaf27a0e47cda0a4c2fad1ab4" translate="yes" xml:space="preserve">
          <source>&quot; (the default entry name). If there is no entry for &quot;</source>
          <target state="translated">&quot;(기본 항목 이름).&quot;에 대한 항목이없는 경우</target>
        </trans-unit>
        <trans-unit id="9c9746d9348e56b221a6f103370c834e65f0798b" translate="yes" xml:space="preserve">
          <source>&quot; or</source>
          <target state="translated">&quot;또는</target>
        </trans-unit>
        <trans-unit id="bfc0a451fce125000a5bf7d561205a91a1b8b16b" translate="yes" xml:space="preserve">
          <source>&quot; transformation.</source>
          <target state="translated">&quot;변환.</target>
        </trans-unit>
        <trans-unit id="0d14a00d96df2f608f56183c6505f0a0b84f90cf" translate="yes" xml:space="preserve">
          <source>&quot; will be treated as representing a byte where</source>
          <target state="translated">&quot;는 바이트를 나타내는 것으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="dd29ecf524b030a65261e3059c48ab9e1ecb2585" translate="yes" xml:space="preserve">
          <source>&quot;&quot;</source>
          <target state="translated">&quot;&quot;</target>
        </trans-unit>
        <trans-unit id="0ce08eaa048ec929228bdc33f1bf9e3bdc82c61a" translate="yes" xml:space="preserve">
          <source>&quot;&quot; + &quot;x&quot; = &quot;x&quot;</source>
          <target state="translated">&quot;&quot;+ &quot;x&quot;= &quot;x&quot;</target>
        </trans-unit>
        <trans-unit id="64b03061d0878df3ede2e553049e8f24c6d71f0a" translate="yes" xml:space="preserve">
          <source>&quot;%%&quot; translates to a single percent sign &quot;%&quot;</source>
          <target state="translated">&quot;%%&quot;는 단일 퍼센트 기호 &quot;%&quot;로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="b1a2e618e6ab44fc5d282cfb08ad04262c5632be" translate="yes" xml:space="preserve">
          <source>&quot;%g&quot; the generation number to distinguish rotated logs</source>
          <target state="translated">회전 된 로그를 구별하기위한 생성 번호 &quot;% g&quot;</target>
        </trans-unit>
        <trans-unit id="c59ccab6600e9dc3d3417b9c357c18d2dbbc619b" translate="yes" xml:space="preserve">
          <source>&quot;%h&quot; the value of the &quot;user.home&quot; system property</source>
          <target state="translated">&quot;% h&quot;는 &quot;user.home&quot;시스템 속성의 값입니다.</target>
        </trans-unit>
        <trans-unit id="8c511cc49d72d6c1b7826fe8974940f191b71f2a" translate="yes" xml:space="preserve">
          <source>&quot;%t&quot; the system temporary directory</source>
          <target state="translated">시스템 임시 디렉토리 &quot;% t&quot;</target>
        </trans-unit>
        <trans-unit id="e6ca796de27fb2d282b957a457f9d8fd23a7d9b6" translate="yes" xml:space="preserve">
          <source>&quot;%u&quot; a unique number to resolve conflicts</source>
          <target state="translated">&quot;% u&quot;는 충돌을 해결하기위한 고유 번호입니다.</target>
        </trans-unit>
        <trans-unit id="c68d73595542a58c7378be8ebfb87831896e6c53" translate="yes" xml:space="preserve">
          <source>&quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot; implies every other pathname. No pathname, except for &quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot; itself, implies &quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot;.</source>
          <target state="translated">&quot;&amp;lt;&amp;lt; 모든 파일 &amp;gt;&amp;gt;&quot;은 다른 모든 경로 이름을 의미합니다. &quot;&amp;lt;&amp;lt; ALL FILES &amp;gt;&amp;gt;&quot;자체를 제외한 경로 이름은 &quot;&amp;lt;&amp;lt; ALL FILES &amp;gt;&amp;gt;&quot;를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="4006d9ed137653f96ce1c31b62e4b63254f0c616" translate="yes" xml:space="preserve">
          <source>&quot;), or if a configuration entry for</source>
          <target state="translated">&quot;) 또는 구성 항목이</target>
        </trans-unit>
        <trans-unit id="eda5d35f3eded71d87c730db746c9da2078f142b" translate="yes" xml:space="preserve">
          <source>&quot;), or if a configuration entry for &lt;code&gt;name&lt;/code&gt; does not exist and the caller does not additionally have AuthPermission(&quot;createLoginContext.other&quot;)</source>
          <target state="translated">&quot;) 또는 &lt;code&gt;name&lt;/code&gt; 대한 구성 항목 이 존재하지 않고 호출자에게 AuthPermission (&quot;createLoginContext.other &quot;)가 추가로없는 경우</target>
        </trans-unit>
        <trans-unit id="75e428f2f2590f3dc8a2d76d5fe53d9ba9006c11" translate="yes" xml:space="preserve">
          <source>&quot;, if the caller-specified &lt;code&gt;subject&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, or if the</source>
          <target state="translated">&quot;발신자가 지정한 경우 &lt;code&gt;subject&lt;/code&gt; 있다 &lt;code&gt;null&lt;/code&gt; 의 경우, 또는</target>
        </trans-unit>
        <trans-unit id="22c0bce515d58a17a4c63290cbf5b912bb117b57" translate="yes" xml:space="preserve">
          <source>&quot;, or if the</source>
          <target state="translated">&quot;또는</target>
        </trans-unit>
        <trans-unit id="21dbc31c52698ccca07c49c59fe0fd7e1341cb63" translate="yes" xml:space="preserve">
          <source>&quot;, or if the caller-specified &lt;code&gt;callbackHandler&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&quot;또는 호출자 지정 &lt;code&gt;callbackHandler&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 인 경우 .</target>
        </trans-unit>
        <trans-unit id="18ddf20e802e71e8758485e7cb584d0e0ef31c3a" translate="yes" xml:space="preserve">
          <source>&quot;, or if the caller-specified &lt;code&gt;subject&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, or if the caller-specified &lt;code&gt;callbackHandler&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&quot;, 또는 발신자가 지정한 경우 &lt;code&gt;subject&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; , 또는 발신자가 지정한 경우 &lt;code&gt;callbackHandler&lt;/code&gt; 를 하다 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4114e3774abdca77aef9080c3a4a7a359b81109c" translate="yes" xml:space="preserve">
          <source>&quot;, then a &lt;code&gt;LoginException&lt;/code&gt; is thrown.</source>
          <target state="translated">&quot;이면 &lt;code&gt;LoginException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d3a6fef61acbfd89d03be0cfd444ccbeef821d53" translate="yes" xml:space="preserve">
          <source>&quot;, where</source>
          <target state="translated">&quot;, 어디</target>
        </trans-unit>
        <trans-unit id="f8d1786cf7a23d7c5e90dc84390f00ec8874ee73" translate="yes" xml:space="preserve">
          <source>&quot;.</source>
          <target state="translated">&quot;.</target>
        </trans-unit>
        <trans-unit id="8fa2d03a2b403448134bb2c0585319104e1aca91" translate="yes" xml:space="preserve">
          <source>&quot;/&quot; + &quot;x&quot; = &quot;/x&quot;</source>
          <target state="translated">&quot;/&quot;+ &quot;x&quot;= &quot;/ x&quot;</target>
        </trans-unit>
        <trans-unit id="d94592b4d43d8281e85e1f0b0f408a5396021e5d" translate="yes" xml:space="preserve">
          <source>&quot;/&quot; the local pathname separator</source>
          <target state="translated">&quot;/&quot;로컬 경로 이름 구분 기호</target>
        </trans-unit>
        <trans-unit id="1ef6f75cf6947f2ed8634761560261f801e35816" translate="yes" xml:space="preserve">
          <source>&quot;/x&quot;</source>
          <target state="translated">&quot;/x&quot;</target>
        </trans-unit>
        <trans-unit id="c5ba9e88b9f5f6775782087ece06231603992ed5" translate="yes" xml:space="preserve">
          <source>&quot;/x/&quot;</source>
          <target state="translated">&quot;/x/&quot;</target>
        </trans-unit>
        <trans-unit id="28c616fd3d08ca83e24e34bc34649d91ccd80bb4" translate="yes" xml:space="preserve">
          <source>&quot;1000&quot;</source>
          <target state="translated">&quot;1000&quot;</target>
        </trans-unit>
        <trans-unit id="55bc6c13a0e1dd84f623655da116c69a1724be4f" translate="yes" xml:space="preserve">
          <source>&quot;:</source>
          <target state="translated">&quot;:</target>
        </trans-unit>
        <trans-unit id="7d779007a949a7a13c9a933bff2ab7ecaf0a5905" translate="yes" xml:space="preserve">
          <source>&quot;: &quot; (a colon and a space)</source>
          <target state="translated">&quot;:&quot;(콜론 및 공백)</target>
        </trans-unit>
        <trans-unit id="269e9c7a89570769de13a64cf467db10083f3638" translate="yes" xml:space="preserve">
          <source>&quot;&lt;code&gt;MyClass.mash(MyClass.java:9)&lt;/code&gt;&quot; - &lt;code&gt;MyClass&lt;/code&gt; class is on the application class path.</source>
          <target state="translated">&quot; &lt;code&gt;MyClass.mash(MyClass.java:9)&lt;/code&gt; &quot;- &lt;code&gt;MyClass&lt;/code&gt; 에의 클래스는 응용 프로그램 클래스 경로에 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd8a0e1e427f05557f51da28d34db2fa20afaf1b" translate="yes" xml:space="preserve">
          <source>&quot;&lt;code&gt;acme@2.1/org.acme.Lib.test(Lib.java:80)&lt;/code&gt;&quot; - The class of the execution point is defined in &lt;code&gt;acme&lt;/code&gt; module loaded by a built-in class loader such as the application class loader.</source>
          <target state="translated">&quot; &lt;code&gt;acme@2.1/org.acme.Lib.test(Lib.java:80)&lt;/code&gt; 실행 지점의 클래스는 애플리케이션 클래스 로더와 같은 내장 클래스 로더에 의해로드 된 &lt;code&gt;acme&lt;/code&gt; 모듈에 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="be1975dedc3d5931676988d334b424dc118fec6b" translate="yes" xml:space="preserve">
          <source>&quot;&lt;code&gt;com.foo.loader//com.foo.bar.App.run(App.java:12)&lt;/code&gt;&quot; - The class of the execution point is defined in the unnamed module of the class loader named &lt;code&gt;com.foo.loader&lt;/code&gt;.</source>
          <target state="translated">&quot; &lt;code&gt;com.foo.loader//com.foo.bar.App.run(App.java:12)&lt;/code&gt; 실행 지점의 클래스는 &lt;code&gt;com.foo.loader&lt;/code&gt; 라는 클래스 로더의 이름없는 모듈에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5aa7e4a0492f20a0c9f1a5ec80c674e052e2d7a" translate="yes" xml:space="preserve">
          <source>&quot;&lt;code&gt;com.foo.loader/foo@9.0/com.foo.Main.run(Main.java)&lt;/code&gt;&quot; - The line number is unavailable.</source>
          <target state="translated">&quot; &lt;code&gt;com.foo.loader/foo@9.0/com.foo.Main.run(Main.java)&lt;/code&gt; &quot;-라인 번호를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="bcb791f0c5044fd669e954280faf0a9597a2d68e" translate="yes" xml:space="preserve">
          <source>&quot;&lt;code&gt;com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)&lt;/code&gt;&quot; - See the description below.</source>
          <target state="translated">&quot; &lt;code&gt;com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)&lt;/code&gt; 아래 설명을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7cd2078c72b50efcadbe691164ac6ac90f6f1df8" translate="yes" xml:space="preserve">
          <source>&quot;&lt;code&gt;com.foo.loader/foo@9.0/com.foo.Main.run(Native Method)&lt;/code&gt;&quot; - The method containing the execution point is a native method.</source>
          <target state="translated">&quot; &lt;code&gt;com.foo.loader/foo@9.0/com.foo.Main.run(Native Method)&lt;/code&gt; &quot;-실행 지점을 포함하는 메소드는 기본 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="7232931a9360c0091f920d746fc136b94b9265a8" translate="yes" xml:space="preserve">
          <source>&quot;&lt;code&gt;com.foo.loader/foo@9.0/com.foo.Main.run(Unknown Source)&lt;/code&gt;&quot; - Neither the file name nor the line number is available.</source>
          <target state="translated">&quot; &lt;code&gt;com.foo.loader/foo@9.0/com.foo.Main.run(Unknown Source)&lt;/code&gt; &quot;-파일 이름이나 줄 번호를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8721ffd724a735a35a77b50e22eda2f7484565cd" translate="yes" xml:space="preserve">
          <source>&quot;Bruce Wayne&quot;</source>
          <target state="translated">&quot;브루스 웨인&quot;</target>
        </trans-unit>
        <trans-unit id="1bd8e30b82edde04ed485076004f76b1e913413e" translate="yes" xml:space="preserve">
          <source>&quot;CLDR&quot;: A provider based on Unicode Consortium's &lt;a href=&quot;http://cldr.unicode.org/&quot;&gt;CLDR Project&lt;/a&gt;.</source>
          <target state="translated">&quot;CLDR&quot;: 유니 코드 컨소시엄의 &lt;a href=&quot;http://cldr.unicode.org/&quot;&gt;CLDR 프로젝트를&lt;/a&gt; 기반으로하는 공급자 .</target>
        </trans-unit>
        <trans-unit id="39533e1bc72f7e2d2c317a75b61d12270b4ef870" translate="yes" xml:space="preserve">
          <source>&quot;COMPAT&quot;: represents the locale sensitive services that is compatible with the prior JDK releases up to JDK8 (same as JDK8's &quot;JRE&quot;).</source>
          <target state="translated">&quot;COMPAT&quot;: JDK8까지의 이전 JDK 릴리스와 호환되는 로케일 민감 서비스를 나타냅니다 (JDK8의 &quot;JRE&quot;와 동일).</target>
        </trans-unit>
        <trans-unit id="af662c40c69c926962bd18884bf0a674091d9571" translate="yes" xml:space="preserve">
          <source>&quot;CheckBoxMenuItemUI&quot;</source>
          <target state="translated">&quot;CheckBoxMenuItemUI&quot;</target>
        </trans-unit>
        <trans-unit id="5826d976160ccc2fa9332e2acfa035b17b0c9807" translate="yes" xml:space="preserve">
          <source>&quot;Clearing&quot; of a Provider so that it no longer contains the properties used to look up services implemented by the provider</source>
          <target state="translated">공급자가 구현 한 서비스를 조회하는 데 사용되는 속성을 더 이상 포함하지 않도록 공급자 &quot;삭제&quot;</target>
        </trans-unit>
        <trans-unit id="5603da2a157e3b5814a4c3e0d388e5b79284dcc8" translate="yes" xml:space="preserve">
          <source>&quot;Default&quot; (use platform default)</source>
          <target state="translated">&quot;Default&quot;(플랫폼 기본값 사용)</target>
        </trans-unit>
        <trans-unit id="4c51d6b978439b5bec909d76e43b3ca238abdb33" translate="yes" xml:space="preserve">
          <source>&quot;G'Day&quot;</source>
          <target state="translated">&quot;G'Day&quot;</target>
        </trans-unit>
        <trans-unit id="5fad5b1a957aafccda809426f7ba62d7980a3e2c" translate="yes" xml:space="preserve">
          <source>&quot;GET:X-Foo-Request,X-Bar-Request&quot;</source>
          <target state="translated">&quot;GET:X-Foo-Request,X-Bar-Request&quot;</target>
        </trans-unit>
        <trans-unit id="790b2260017ade7e09f0589c53f77fd5aeb90365" translate="yes" xml:space="preserve">
          <source>&quot;GoodDay$&quot;</source>
          <target state="translated">&quot;GoodDay$&quot;</target>
        </trans-unit>
        <trans-unit id="e6406f8e2494d87eedb8a68186972ae2fe233981" translate="yes" xml:space="preserve">
          <source>&quot;HOST&quot;: A provider that reflects the user's custom settings in the underlying operating system. This provider may not be available, depending on the Java Runtime Environment implementation.</source>
          <target state="translated">&quot;HOST&quot;: 기본 운영 체제에서 사용자의 사용자 지정 설정을 반영하는 공급자입니다. 이 공급자는 Java Runtime Environment 구현에 따라 사용하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba9277fc4c6190fb875ad8f9cee848dba699937f" translate="yes" xml:space="preserve">
          <source>&quot;Hello&quot;</source>
          <target state="translated">&quot;Hello&quot;</target>
        </trans-unit>
        <trans-unit id="1419f570033f3197936b2a4ce3b4a8d679f72b76" translate="yes" xml:space="preserve">
          <source>&quot;Hello&quot;World&quot;</source>
          <target state="translated">&quot;Hello&quot;World&quot;</target>
        </trans-unit>
        <trans-unit id="e165002d5a111498bd78daf71725fe1a6447aeb1" translate="yes" xml:space="preserve">
          <source>&quot;JRE&quot;: represents a synonym to &quot;COMPAT&quot;. This name is deprecated and will be removed in the future release of JDK.</source>
          <target state="translated">&quot;JRE&quot;: &quot;COMPAT&quot;의 동의어를 나타냅니다. 이 이름은 더 이상 사용되지 않으며 향후 JDK 릴리스에서 제거 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="5b8985eb7e50909feca7a24a9f0bad0c8cd9b5ee" translate="yes" xml:space="preserve">
          <source>&quot;Loading&quot; an instrument means that that instrument becomes available for synthesizing notes. The instrument is loaded into the bank and program location specified by its &lt;code&gt;Patch&lt;/code&gt; object. Loading does not necessarily mean that subsequently played notes will immediately have the sound of this newly loaded instrument. For the instrument to play notes, one of the synthesizer's &lt;code&gt;MidiChannel&lt;/code&gt; objects must receive (or have received) a program-change message that causes that particular instrument's bank and program number to be selected.</source>
          <target state="translated">악기를 &quot;로드&quot;하면 해당 악기가 음표를 합성 할 수있게됩니다. 악기는 &lt;code&gt;Patch&lt;/code&gt; 객체에 의해 지정된 뱅크 및 프로그램 위치에로드됩니다 . 로드한다고해서 다음에 연주되는 음이 새로로드 된 악기의 사운드가 즉시 재생된다는 의미는 아닙니다. 악기가 음을 연주하려면 신디사이저의 &lt;code&gt;MidiChannel&lt;/code&gt; 객체 중 하나 가 특정 악기의 뱅크와 프로그램 번호를 선택하도록하는 프로그램 변경 메시지를 수신 (또는 수신)해야합니다.</target>
        </trans-unit>
        <trans-unit id="f2a7897df76c63b8d4a1e30f860a470dc1f2cc33" translate="yes" xml:space="preserve">
          <source>&quot;Mono&quot; is short for the word &quot;monophonic,&quot; which in this context is opposed to the word &quot;polyphonic&quot; and refers to a single synthesizer voice per MIDI channel. It has nothing to do with how many audio channels there might be (as in &quot;monophonic&quot; versus &quot;stereophonic&quot; recordings).</source>
          <target state="translated">&quot;Mono&quot;는 &quot;monophonic&quot;이라는 단어의 줄임말로,이 문맥에서 &quot;polyphonic&quot;이라는 단어와 반대되며 MIDI 채널당 단일 신디사이저 음색을 나타냅니다. 얼마나 많은 오디오 채널이있을 수 있는지와는 상관이 없습니다 ( &quot;단음&quot;대 &quot;스테레오&quot;녹음에서와 같이).</target>
        </trans-unit>
        <trans-unit id="76c5eaddec0f85eb768844d7d0c9bcf9273b73a8" translate="yes" xml:space="preserve">
          <source>&quot;Mono&quot; is short for the word &quot;monophonic,&quot; which in this context is opposed to the word &quot;polyphonic&quot; and refers to a single synthesizer voice per MIDI channel. It has nothing to do with how many audio channels there might be (as in &quot;monophonic&quot; versus &quot;stereophonic&quot; recordings). It is possible that the underlying synthesizer does not support mono mode. In order to verify that a call to &lt;code&gt;setMono&lt;/code&gt; was successful, use &lt;code&gt;getMono&lt;/code&gt;.</source>
          <target state="translated">&quot;Mono&quot;는 &quot;monophonic&quot;이라는 단어의 줄임말로,이 문맥에서 &quot;polyphonic&quot;이라는 단어와 반대되며 MIDI 채널당 단일 신디사이저 음색을 나타냅니다. 얼마나 많은 오디오 채널이있을 수 있는지와는 상관이 없습니다 ( &quot;단음&quot;대 &quot;스테레오&quot;녹음에서와 같이). 기본 신디사이저가 모노 모드를 지원하지 않을 수 있습니다. &lt;code&gt;setMono&lt;/code&gt; 호출 이 성공 했는지 확인 하려면 &lt;code&gt;getMono&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="cc60ed26cbf7d196c79d8aff9e25f066f4467c60" translate="yes" xml:space="preserve">
          <source>&quot;Multiplex&quot;</source>
          <target state="translated">&quot;Multiplex&quot;</target>
        </trans-unit>
        <trans-unit id="e64057bdd719dd6e57b8d60ee0171706d1fe08b7" translate="yes" xml:space="preserve">
          <source>&quot;Ocean&quot;</source>
          <target state="translated">&quot;Ocean&quot;</target>
        </trans-unit>
        <trans-unit id="46950e08fde0d4ef9f392b0375db85c686b7c155" translate="yes" xml:space="preserve">
          <source>&quot;OnUpdate&quot;, &quot;OnTimer&quot;, &quot;NoMoreOftenThan&quot;, &quot;OnUnregister&quot;, &quot;Always&quot;, &quot;Never&quot;. These String values must not be case sensitive.</source>
          <target state="translated">&quot;OnUpdate&quot;, &quot;OnTimer&quot;, &quot;NoMoreOftenThan&quot;, &quot;OnUnregister&quot;, &quot;Always&quot;, &quot;Never&quot;. 이러한 문자열 값은 대소 문자를 구분하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="c860012d0550ecb6002f028118932c022e284390" translate="yes" xml:space="preserve">
          <source>&quot;POST,GET,DELETE&quot;</source>
          <target state="translated">&quot;POST,GET,DELETE&quot;</target>
        </trans-unit>
        <trans-unit id="de78174280329485f5854176e6016904ad832d61" translate="yes" xml:space="preserve">
          <source>&quot;POST,GET:Header1,Header2&quot;</source>
          <target state="translated">&quot;POST,GET:Header1,Header2&quot;</target>
        </trans-unit>
        <trans-unit id="42af1e15b7410bc1333485be23dd7983b4810eec" translate="yes" xml:space="preserve">
          <source>&quot;PanelUI&quot;</source>
          <target state="translated">&quot;PanelUI&quot;</target>
        </trans-unit>
        <trans-unit id="da7b615c47333c0a784adde4f0db896618efb182" translate="yes" xml:space="preserve">
          <source>&quot;SEVERE&quot;</source>
          <target state="translated">&quot;SEVERE&quot;</target>
        </trans-unit>
        <trans-unit id="ae75b9f001458eb08fd3592e5823eaef79074b14" translate="yes" xml:space="preserve">
          <source>&quot;SPI&quot;: represents the locale sensitive services implementing the subclasses of this &lt;code&gt;LocaleServiceProvider&lt;/code&gt; class.</source>
          <target state="translated">&quot;SPI&quot;:이 &lt;code&gt;LocaleServiceProvider&lt;/code&gt; 클래스 의 서브 클래스를 구현하는 로케일 민감 서비스를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="413dfffaf3d8d11cf9218565fbb387ad5bed1fcf" translate="yes" xml:space="preserve">
          <source>&quot;ScrollBarUI&quot;</source>
          <target state="translated">&quot;ScrollBarUI&quot;</target>
        </trans-unit>
        <trans-unit id="370d463502e818888b73aad3d884e1e9e368f498" translate="yes" xml:space="preserve">
          <source>&quot;SliderUI&quot;</source>
          <target state="translated">&quot;SliderUI&quot;</target>
        </trans-unit>
        <trans-unit id="13d551880e3cb43d3fec7a81c131dfbe2c0eb134" translate="yes" xml:space="preserve">
          <source>&quot;TitledBorder.border&quot;</source>
          <target state="translated">&quot;TitledBorder.border&quot;</target>
        </trans-unit>
        <trans-unit id="3f8c5186b53db9ca9978c82a2a1cf13f1f5b4da6" translate="yes" xml:space="preserve">
          <source>&quot;TitledBorder.font&quot;</source>
          <target state="translated">&quot;TitledBorder.font&quot;</target>
        </trans-unit>
        <trans-unit id="99948c7fc37ab240932ffe9ef95b04642ff7ec77" translate="yes" xml:space="preserve">
          <source>&quot;TitledBorder.titleColor&quot;</source>
          <target state="translated">&quot;TitledBorder.titleColor&quot;</target>
        </trans-unit>
        <trans-unit id="e39d654f90e1ece61829466ab309b3f5936d1f13" translate="yes" xml:space="preserve">
          <source>&quot;Tree.closedIcon&quot;</source>
          <target state="translated">&quot;Tree.closedIcon&quot;</target>
        </trans-unit>
        <trans-unit id="cb1c4ba3697f43d10bf0c3c1ccd5b7f04a55e2c3" translate="yes" xml:space="preserve">
          <source>&quot;Tree.leafIcon&quot;</source>
          <target state="translated">&quot;Tree.leafIcon&quot;</target>
        </trans-unit>
        <trans-unit id="b3411fd23947bcf980caaeeba1ea4465d9db7a04" translate="yes" xml:space="preserve">
          <source>&quot;Tree.openIcon&quot;</source>
          <target state="translated">&quot;Tree.openIcon&quot;</target>
        </trans-unit>
        <trans-unit id="620698c74902523a73bf2549c9ab8d6060b940e9" translate="yes" xml:space="preserve">
          <source>&quot;Tree.selectionBackground&quot;</source>
          <target state="translated">&quot;Tree.selectionBackground&quot;</target>
        </trans-unit>
        <trans-unit id="4fb03bf71431eaa65f056b67d637b6e87f4ec25f" translate="yes" xml:space="preserve">
          <source>&quot;Tree.selectionBorderColor&quot;</source>
          <target state="translated">&quot;Tree.selectionBorderColor&quot;</target>
        </trans-unit>
        <trans-unit id="1558352c67cb42e1a73b99f33fd090922e0831a3" translate="yes" xml:space="preserve">
          <source>&quot;Tree.selectionForeground&quot;</source>
          <target state="translated">&quot;Tree.selectionForeground&quot;</target>
        </trans-unit>
        <trans-unit id="f6c3bed90d442be644f16e2f12e0d4bcbdb0b204" translate="yes" xml:space="preserve">
          <source>&quot;Tree.textBackground&quot;</source>
          <target state="translated">&quot;Tree.textBackground&quot;</target>
        </trans-unit>
        <trans-unit id="082db2ef87fc96db3ca45d3355f32396ae8bdf9a" translate="yes" xml:space="preserve">
          <source>&quot;Tree.textForeground&quot;</source>
          <target state="translated">&quot;Tree.textForeground&quot;</target>
        </trans-unit>
        <trans-unit id="3aae53d0a63ee1d98672bfbf26c12dbb33c89b55" translate="yes" xml:space="preserve">
          <source>&quot;acl&quot;</source>
          <target state="translated">&quot;acl&quot;</target>
        </trans-unit>
        <trans-unit id="fe64fe557aa92d187aef8dc0f0f05aec62ef73f0" translate="yes" xml:space="preserve">
          <source>&quot;activeCaption&quot;</source>
          <target state="translated">&quot;activeCaption&quot;</target>
        </trans-unit>
        <trans-unit id="6e10bbd7dbf358ab9cc242400731e91d3e32fac5" translate="yes" xml:space="preserve">
          <source>&quot;activeCaptionBorder&quot;</source>
          <target state="translated">&quot;activeCaptionBorder&quot;</target>
        </trans-unit>
        <trans-unit id="87769d41465d5215110d6c7fad6919c46769631b" translate="yes" xml:space="preserve">
          <source>&quot;activeCaptionText&quot;</source>
          <target state="translated">&quot;activeCaptionText&quot;</target>
        </trans-unit>
        <trans-unit id="c6f246e46776e4dd97db72684f8c11af8b3b537c" translate="yes" xml:space="preserve">
          <source>&quot;application/x-java-serialized-object&quot;</source>
          <target state="translated">&quot;application/x-java-serialized-object&quot;</target>
        </trans-unit>
        <trans-unit id="8ffd38ddeec2126d02bb7d696ccf800a900ec653" translate="yes" xml:space="preserve">
          <source>&quot;author&quot;</source>
          <target state="translated">&quot;author&quot;</target>
        </trans-unit>
        <trans-unit id="398bb32800ff3fd21582e16e518baba127635b0b" translate="yes" xml:space="preserve">
          <source>&quot;backgroundNonSelectionColor&quot;</source>
          <target state="translated">&quot;backgroundNonSelectionColor&quot;</target>
        </trans-unit>
        <trans-unit id="b3053ed3b361ad5e2a7f94cd7b70592cc2e915c7" translate="yes" xml:space="preserve">
          <source>&quot;backgroundSelectionColor&quot;</source>
          <target state="translated">&quot;backgroundSelectionColor&quot;</target>
        </trans-unit>
        <trans-unit id="9b969716f0c3b3ab8775f7ea035ba580a635d1d3" translate="yes" xml:space="preserve">
          <source>&quot;bitrate&quot;</source>
          <target state="translated">&quot;bitrate&quot;</target>
        </trans-unit>
        <trans-unit id="92f05cb533f401b46c86039fe89eb1201de99dd7" translate="yes" xml:space="preserve">
          <source>&quot;body&quot;</source>
          <target state="translated">&quot;body&quot;</target>
        </trans-unit>
        <trans-unit id="29b4564152228dde72bd3ab3ca6eab3cd5656d90" translate="yes" xml:space="preserve">
          <source>&quot;borderSelectionColor&quot;</source>
          <target state="translated">&quot;borderSelectionColor&quot;</target>
        </trans-unit>
        <trans-unit id="b64f683d0e588b7b03b62f62460efd553df9491e" translate="yes" xml:space="preserve">
          <source>&quot;bytes&quot;</source>
          <target state="translated">&quot;bytes&quot;</target>
        </trans-unit>
        <trans-unit id="261939a6dc727cdfd3e9978fbc84b5c673868946" translate="yes" xml:space="preserve">
          <source>&quot;bytes.key&quot;</source>
          <target state="translated">&quot;bytes.key&quot;</target>
        </trans-unit>
        <trans-unit id="b8859767269826a1423944480d2c3c095c658a41" translate="yes" xml:space="preserve">
          <source>&quot;cc&quot;</source>
          <target state="translated">&quot;cc&quot;</target>
        </trans-unit>
        <trans-unit id="4bddd76cac416b126dc55046d142a3d88f0e6b24" translate="yes" xml:space="preserve">
          <source>&quot;closedIcon&quot;</source>
          <target state="translated">&quot;closedIcon&quot;</target>
        </trans-unit>
        <trans-unit id="05ca63db22fe38856551b21b432738d061e1e847" translate="yes" xml:space="preserve">
          <source>&quot;com.example.foo.MBeanResources&quot;</source>
          <target state="translated">&quot;com.example.foo.MBeanResources&quot;</target>
        </trans-unit>
        <trans-unit id="6d5338393e7cd1a5925880b098572d2d965fd2c9" translate="yes" xml:space="preserve">
          <source>&quot;comment&quot;</source>
          <target state="translated">&quot;comment&quot;</target>
        </trans-unit>
        <trans-unit id="dc0caf0dd5187a7b0702b6539ab60899d3d6cd4c" translate="yes" xml:space="preserve">
          <source>&quot;control&quot;</source>
          <target state="translated">&quot;control&quot;</target>
        </trans-unit>
        <trans-unit id="31534485333d7bb54bb8763cb047b1d0aaee9bd3" translate="yes" xml:space="preserve">
          <source>&quot;controlDkShadow&quot;</source>
          <target state="translated">&quot;controlDkShadow&quot;</target>
        </trans-unit>
        <trans-unit id="e72023d679fc684f6aec1469f8a620582206911d" translate="yes" xml:space="preserve">
          <source>&quot;controlHighlight&quot;</source>
          <target state="translated">&quot;controlHighlight&quot;</target>
        </trans-unit>
        <trans-unit id="b1df715397c7fb8e581a5653ad3d8260d67fd4cd" translate="yes" xml:space="preserve">
          <source>&quot;controlLtHighlight&quot;</source>
          <target state="translated">&quot;controlLtHighlight&quot;</target>
        </trans-unit>
        <trans-unit id="42e784bf89323f62c7df2fcd9d5d0571b341c4c3" translate="yes" xml:space="preserve">
          <source>&quot;controlShadow&quot;</source>
          <target state="translated">&quot;controlShadow&quot;</target>
        </trans-unit>
        <trans-unit id="ed67baa5f82812c9c459cf7b2d54c9dc1217f77e" translate="yes" xml:space="preserve">
          <source>&quot;controlText&quot;</source>
          <target state="translated">&quot;controlText&quot;</target>
        </trans-unit>
        <trans-unit id="cfa9b21c0717f39a553818e6dd18e6c7c4a804f6" translate="yes" xml:space="preserve">
          <source>&quot;copyright&quot;</source>
          <target state="translated">&quot;copyright&quot;</target>
        </trans-unit>
        <trans-unit id="1f0c5a006c679c1f4beec05d39ba5907885efa32" translate="yes" xml:space="preserve">
          <source>&quot;creationTime&quot;</source>
          <target state="translated">&quot;creationTime&quot;</target>
        </trans-unit>
        <trans-unit id="086d402e5cc4b7ed6214123d80802330f7b924ba" translate="yes" xml:space="preserve">
          <source>&quot;date&quot;</source>
          <target state="translated">&quot;date&quot;</target>
        </trans-unit>
        <trans-unit id="d3bd4b68690a3a853d4881b1d920fc378da53b1c" translate="yes" xml:space="preserve">
          <source>&quot;desktop&quot;</source>
          <target state="translated">&quot;desktop&quot;</target>
        </trans-unit>
        <trans-unit id="10b2a77294393c7318ca7aae7b523b8dd603124a" translate="yes" xml:space="preserve">
          <source>&quot;duration&quot;</source>
          <target state="translated">&quot;duration&quot;</target>
        </trans-unit>
        <trans-unit id="96768401cb1f67c69198243e45e16437842665df" translate="yes" xml:space="preserve">
          <source>&quot;export&quot;</source>
          <target state="translated">&quot;export&quot;</target>
        </trans-unit>
        <trans-unit id="de7c0d9c04b793687afd833cbf4eee910cf42252" translate="yes" xml:space="preserve">
          <source>&quot;fileKey&quot;</source>
          <target state="translated">&quot;fileKey&quot;</target>
        </trans-unit>
        <trans-unit id="0e452eaf8845ffccb17052e41e146f41a9eabbdc" translate="yes" xml:space="preserve">
          <source>&quot;follow&quot;</source>
          <target state="translated">&quot;follow&quot;</target>
        </trans-unit>
        <trans-unit id="67637b106784fff09db0902bd9875ba7866ca34c" translate="yes" xml:space="preserve">
          <source>&quot;gathering&quot;</source>
          <target state="translated">&quot;gathering&quot;</target>
        </trans-unit>
        <trans-unit id="4ec19e558a7ece273f854e364efa0f2210bd05f9" translate="yes" xml:space="preserve">
          <source>&quot;group&quot;</source>
          <target state="translated">&quot;group&quot;</target>
        </trans-unit>
        <trans-unit id="e6fb150468e1d9f22c1d3716652784208ad79a65" translate="yes" xml:space="preserve">
          <source>&quot;ignore&quot;</source>
          <target state="translated">&quot;ignore&quot;</target>
        </trans-unit>
        <trans-unit id="90af0020d7bf3836aae77a01fe9999eb7b5a7925" translate="yes" xml:space="preserve">
          <source>&quot;inactiveCaption&quot;</source>
          <target state="translated">&quot;inactiveCaption&quot;</target>
        </trans-unit>
        <trans-unit id="ad99afe8d9ab6df43c9548302f001114bde06e7c" translate="yes" xml:space="preserve">
          <source>&quot;inactiveCaptionBorder&quot;</source>
          <target state="translated">&quot;inactiveCaptionBorder&quot;</target>
        </trans-unit>
        <trans-unit id="46d55abd8a2757a5dd4a50603d897869ad72ec9c" translate="yes" xml:space="preserve">
          <source>&quot;inactiveCaptionText&quot;</source>
          <target state="translated">&quot;inactiveCaptionText&quot;</target>
        </trans-unit>
        <trans-unit id="ed2f9d3177863f95dab406030e96806bae92faf0" translate="yes" xml:space="preserve">
          <source>&quot;info&quot;</source>
          <target state="translated">&quot;info&quot;</target>
        </trans-unit>
        <trans-unit id="4baf5f5d9692d8ecc903171b88a15309e274872c" translate="yes" xml:space="preserve">
          <source>&quot;infoText&quot;</source>
          <target state="translated">&quot;infoText&quot;</target>
        </trans-unit>
        <trans-unit id="bdf4125183c5f1af5adf805ab7a88c71201fe018" translate="yes" xml:space="preserve">
          <source>&quot;isDirectory&quot;</source>
          <target state="translated">&quot;isDirectory&quot;</target>
        </trans-unit>
        <trans-unit id="f8fabc0100e189a0ce3ca728ecf1d0f299eb4c51" translate="yes" xml:space="preserve">
          <source>&quot;isOther&quot;</source>
          <target state="translated">&quot;isOther&quot;</target>
        </trans-unit>
        <trans-unit id="c0febedaac739cd7e742e56b986498b8cdee8e98" translate="yes" xml:space="preserve">
          <source>&quot;isRegularFile&quot;</source>
          <target state="translated">&quot;isRegularFile&quot;</target>
        </trans-unit>
        <trans-unit id="e5bc80400e1454cc15935726596be33cfdab1129" translate="yes" xml:space="preserve">
          <source>&quot;isSymbolicLink&quot;</source>
          <target state="translated">&quot;isSymbolicLink&quot;</target>
        </trans-unit>
        <trans-unit id="10c11d2d9da509a6e880076ad35691bebf73d4bd" translate="yes" xml:space="preserve">
          <source>&quot;java.util.logging.config.class&quot;</source>
          <target state="translated">&quot;java.util.logging.config.class&quot;</target>
        </trans-unit>
        <trans-unit id="8848b0baad93a0a69769ef91bb433d0e8135e032" translate="yes" xml:space="preserve">
          <source>&quot;java.util.logging.config.file&quot;</source>
          <target state="translated">&quot;java.util.logging.config.file&quot;</target>
        </trans-unit>
        <trans-unit id="75335e8066fcf615a9958d555af6c4f478be1a69" translate="yes" xml:space="preserve">
          <source>&quot;lastAccessTime&quot;</source>
          <target state="translated">&quot;lastAccessTime&quot;</target>
        </trans-unit>
        <trans-unit id="0760d493b344de629702c4bd5259c6adfd0cfb84" translate="yes" xml:space="preserve">
          <source>&quot;lastModifiedTime&quot;</source>
          <target state="translated">&quot;lastModifiedTime&quot;</target>
        </trans-unit>
        <trans-unit id="4592dfd5d097ea24c3d7a4f024f35c381d74fa00" translate="yes" xml:space="preserve">
          <source>&quot;leafIcon&quot;</source>
          <target state="translated">&quot;leafIcon&quot;</target>
        </trans-unit>
        <trans-unit id="78ff6b89cd42b3b2c279782320acc135871ea07b" translate="yes" xml:space="preserve">
          <source>&quot;menu&quot;</source>
          <target state="translated">&quot;menu&quot;</target>
        </trans-unit>
        <trans-unit id="b78f7a0d4b048ab528242fac0d2c584543b31d00" translate="yes" xml:space="preserve">
          <source>&quot;menuText&quot;</source>
          <target state="translated">&quot;menuText&quot;</target>
        </trans-unit>
        <trans-unit id="b7d906882e8dc989b3da41157094b0eaa444fb2b" translate="yes" xml:space="preserve">
          <source>&quot;openIcon&quot;</source>
          <target state="translated">&quot;openIcon&quot;</target>
        </trans-unit>
        <trans-unit id="70865af765a7259bb6d1702593d2541692b923b1" translate="yes" xml:space="preserve">
          <source>&quot;owner&quot;</source>
          <target state="translated">&quot;owner&quot;</target>
        </trans-unit>
        <trans-unit id="c00a6463fb2391f1753660ed2a7ae495ef6099cd" translate="yes" xml:space="preserve">
          <source>&quot;permissions&quot;</source>
          <target state="translated">&quot;permissions&quot;</target>
        </trans-unit>
        <trans-unit id="fc4698bb189a3469d5fb4bfc4f15cad9a16789d2" translate="yes" xml:space="preserve">
          <source>&quot;quality&quot;</source>
          <target state="translated">&quot;quality&quot;</target>
        </trans-unit>
        <trans-unit id="7d0b848b61c81440a5377285ac55afc9a8b49e80" translate="yes" xml:space="preserve">
          <source>&quot;read through&quot; to</source>
          <target state="translated">&quot;읽기&quot;</target>
        </trans-unit>
        <trans-unit id="5aeacf767c75e6e0017448517251dd0a31be4ad2" translate="yes" xml:space="preserve">
          <source>&quot;scattering&quot;</source>
          <target state="translated">&quot;scattering&quot;</target>
        </trans-unit>
        <trans-unit id="bdd449d8fb2fc1ad3380ff1882964bbb55d7d003" translate="yes" xml:space="preserve">
          <source>&quot;scrollbar&quot;</source>
          <target state="translated">&quot;scrollbar&quot;</target>
        </trans-unit>
        <trans-unit id="fdccdbb36ae1b1d4eaee6c7786c7f33f9c062e5d" translate="yes" xml:space="preserve">
          <source>&quot;size&quot;</source>
          <target state="translated">&quot;size&quot;</target>
        </trans-unit>
        <trans-unit id="571d26cac92f550ff30f612f96612af8cc58239b" translate="yes" xml:space="preserve">
          <source>&quot;subject&quot;</source>
          <target state="translated">&quot;subject&quot;</target>
        </trans-unit>
        <trans-unit id="3ade2bd0c2a4121dbb3955aecc452ae62749c6e3" translate="yes" xml:space="preserve">
          <source>&quot;text&quot;</source>
          <target state="translated">&quot;text&quot;</target>
        </trans-unit>
        <trans-unit id="36488e8a7103ffce74f0d4f58fcc78cfa5873168" translate="yes" xml:space="preserve">
          <source>&quot;text/&amp;lt;other&amp;gt;&quot;</source>
          <target state="translated">&quot;text/&amp;lt;other&amp;gt;&quot;</target>
        </trans-unit>
        <trans-unit id="24c747dea77c0c78ef63ec1785e3db35a463bdec" translate="yes" xml:space="preserve">
          <source>&quot;text/calendar&quot;</source>
          <target state="translated">&quot;text/calendar&quot;</target>
        </trans-unit>
        <trans-unit id="a712a5f53a9c28e8716b43bbfdfa6aa160c8c1a7" translate="yes" xml:space="preserve">
          <source>&quot;text/css&quot;</source>
          <target state="translated">&quot;text/css&quot;</target>
        </trans-unit>
        <trans-unit id="5d26073f03a41450548546997cbe7be280786748" translate="yes" xml:space="preserve">
          <source>&quot;text/directory&quot;</source>
          <target state="translated">&quot;text/directory&quot;</target>
        </trans-unit>
        <trans-unit id="570e4b491701647bc1497e05ff764b36ddd49ea9" translate="yes" xml:space="preserve">
          <source>&quot;text/enriched&quot;</source>
          <target state="translated">&quot;text/enriched&quot;</target>
        </trans-unit>
        <trans-unit id="d388155f38dfebd43eb9513e3ab78cdfd0bd597a" translate="yes" xml:space="preserve">
          <source>&quot;text/html&quot;</source>
          <target state="translated">&quot;text/html&quot;</target>
        </trans-unit>
        <trans-unit id="1802b8e362e8caea18a24c2a3445dcca2e94c523" translate="yes" xml:space="preserve">
          <source>&quot;text/parityfec&quot;</source>
          <target state="translated">&quot;text/parityfec&quot;</target>
        </trans-unit>
        <trans-unit id="8b954060ddc9024c04bf827b5051ce07b26568ed" translate="yes" xml:space="preserve">
          <source>&quot;text/plain&quot;</source>
          <target state="translated">&quot;text/plain&quot;</target>
        </trans-unit>
        <trans-unit id="d8287f142aaf48e3e0a5b43d748bc605b209c5f9" translate="yes" xml:space="preserve">
          <source>&quot;text/rfc822-headers&quot;</source>
          <target state="translated">&quot;text/rfc822-headers&quot;</target>
        </trans-unit>
        <trans-unit id="e1890fd7b8c08e13546e3b61ed3a4c82fc10a92c" translate="yes" xml:space="preserve">
          <source>&quot;text/richtext&quot;</source>
          <target state="translated">&quot;text/richtext&quot;</target>
        </trans-unit>
        <trans-unit id="2a250f7e3444ddc591d558d403a4b12d5cd23e33" translate="yes" xml:space="preserve">
          <source>&quot;text/rtf&quot;</source>
          <target state="translated">&quot;text/rtf&quot;</target>
        </trans-unit>
        <trans-unit id="a42ebf109f2bf334cf5349ebd631fd66ace1b64b" translate="yes" xml:space="preserve">
          <source>&quot;text/sgml&quot;</source>
          <target state="translated">&quot;text/sgml&quot;</target>
        </trans-unit>
        <trans-unit id="7b5e8f8a30262a4d0c310129321c6a466ee380c5" translate="yes" xml:space="preserve">
          <source>&quot;text/t140&quot;</source>
          <target state="translated">&quot;text/t140&quot;</target>
        </trans-unit>
        <trans-unit id="5144c2723695618cfbc23e9cc0a4a217ecbd0168" translate="yes" xml:space="preserve">
          <source>&quot;text/tab-separated-values&quot;</source>
          <target state="translated">&quot;text/tab-separated-values&quot;</target>
        </trans-unit>
        <trans-unit id="33bbe70f50c7476ad007c4ea0f30e1e12784cb7d" translate="yes" xml:space="preserve">
          <source>&quot;text/uri-list&quot;</source>
          <target state="translated">&quot;text/uri-list&quot;</target>
        </trans-unit>
        <trans-unit id="9dca49eec4c229843bda02c24e4655b8a6da35e6" translate="yes" xml:space="preserve">
          <source>&quot;text/xml&quot;</source>
          <target state="translated">&quot;text/xml&quot;</target>
        </trans-unit>
        <trans-unit id="5abf3c334b60487ff52862ff2f78a2a1072bb0e9" translate="yes" xml:space="preserve">
          <source>&quot;textHighlight&quot;</source>
          <target state="translated">&quot;textHighlight&quot;</target>
        </trans-unit>
        <trans-unit id="2c43418b65d32100bbdc104c89e654daddd941f0" translate="yes" xml:space="preserve">
          <source>&quot;textHighlightText&quot;</source>
          <target state="translated">&quot;textHighlightText&quot;</target>
        </trans-unit>
        <trans-unit id="0ebf067deb20d432f1b96ad5528ada1b0d2868d0" translate="yes" xml:space="preserve">
          <source>&quot;textInactiveText&quot;</source>
          <target state="translated">&quot;textInactiveText&quot;</target>
        </trans-unit>
        <trans-unit id="1ce270e9ccbd2f523f0057e9ae381eb90a417e9f" translate="yes" xml:space="preserve">
          <source>&quot;textNonSelectionColor&quot;</source>
          <target state="translated">&quot;textNonSelectionColor&quot;</target>
        </trans-unit>
        <trans-unit id="4d75b5b982e1d93d115451b4ae3695009e4ccaa4" translate="yes" xml:space="preserve">
          <source>&quot;textSelectionColor&quot;</source>
          <target state="translated">&quot;textSelectionColor&quot;</target>
        </trans-unit>
        <trans-unit id="47d20e1336e448f5697e677b7bef613c83eeeb97" translate="yes" xml:space="preserve">
          <source>&quot;textText&quot;</source>
          <target state="translated">&quot;textText&quot;</target>
        </trans-unit>
        <trans-unit id="720110a675e3e8419ebaee8852f44811733d8c12" translate="yes" xml:space="preserve">
          <source>&quot;throw&quot;</source>
          <target state="translated">&quot;throw&quot;</target>
        </trans-unit>
        <trans-unit id="cffc96831d64f0f51d8d4cf29fd63520361dd172" translate="yes" xml:space="preserve">
          <source>&quot;title&quot;</source>
          <target state="translated">&quot;title&quot;</target>
        </trans-unit>
        <trans-unit id="36a06a8c9eafab5348b37a518091b16140b609c4" translate="yes" xml:space="preserve">
          <source>&quot;to&quot;</source>
          <target state="translated">&quot;to&quot;</target>
        </trans-unit>
        <trans-unit id="62926d1ae6a19f86ce969daf743857728ab4436f" translate="yes" xml:space="preserve">
          <source>&quot;true&quot; if the given bean supports the given targetType.</source>
          <target state="translated">주어진 bean이 주어진 targetType을 지원하면 &quot;true&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="b560b5cbc4e8b7e1cc7605615d9fff9650140aff" translate="yes" xml:space="preserve">
          <source>&quot;vbr&quot;</source>
          <target state="translated">&quot;vbr&quot;</target>
        </trans-unit>
        <trans-unit id="ab09ff09734f60de507077ecc40cc0806d5ad8f2" translate="yes" xml:space="preserve">
          <source>&quot;window&quot;</source>
          <target state="translated">&quot;window&quot;</target>
        </trans-unit>
        <trans-unit id="44f56430c795150fb0eaaee55688d41334bbb933" translate="yes" xml:space="preserve">
          <source>&quot;windowBorder&quot;</source>
          <target state="translated">&quot;windowBorder&quot;</target>
        </trans-unit>
        <trans-unit id="e51f969b1bd68f0ff94f6a5703c063aecc23ddd7" translate="yes" xml:space="preserve">
          <source>&quot;windowText&quot;</source>
          <target state="translated">&quot;windowText&quot;</target>
        </trans-unit>
        <trans-unit id="a81fa20d625fc8e5a04721cdf61f056fc2e22496" translate="yes" xml:space="preserve">
          <source>&quot;x&quot;</source>
          <target state="translated">&quot;x&quot;</target>
        </trans-unit>
        <trans-unit id="1dec2a7f5584260f8b4ebd4a872aaac32760d438" translate="yes" xml:space="preserve">
          <source>&quot;x&quot; + &quot;&quot; + &quot;&quot; = &quot;x&quot;</source>
          <target state="translated">&quot;x&quot;+ &quot;&quot;+ &quot;&quot;= &quot;x&quot;</target>
        </trans-unit>
        <trans-unit id="59109899c5aee796285f7ecab37225ef658dc618" translate="yes" xml:space="preserve">
          <source>&quot;x/&quot;</source>
          <target state="translated">&quot;x/&quot;</target>
        </trans-unit>
        <trans-unit id="66bc62cdf974194b6d4d7df3e2cdea30f7b8855c" translate="yes" xml:space="preserve">
          <source>&quot;x//y&quot;</source>
          <target state="translated">&quot;x//y&quot;</target>
        </trans-unit>
        <trans-unit id="341566eff7b7019966377c92ead5b74bdb7f8c84" translate="yes" xml:space="preserve">
          <source>&quot;x/y&quot;</source>
          <target state="translated">&quot;x/y&quot;</target>
        </trans-unit>
        <trans-unit id="b798b5e493b202ba335a5888ec255796687942b8" translate="yes" xml:space="preserve">
          <source>&quot;x/y&quot; + &quot;/&quot; = x/y/</source>
          <target state="translated">&quot;x / y&quot;+ &quot;/&quot;= x / y /</target>
        </trans-unit>
        <trans-unit id="d08f88df745fa7950b104e4a707a31cfce7b5841" translate="yes" xml:space="preserve">
          <source>#</source>
          <target state="translated">#</target>
        </trans-unit>
        <trans-unit id="ae700a6bff24d040586b58f707901a0d97ded8da" translate="yes" xml:space="preserve">
          <source>&amp;Iota;&amp;Chi;&amp;Theta;&amp;Upsilon;&amp;Sigma;</source>
          <target state="translated">&amp;Iota;&amp;Chi;&amp;Theta;&amp;Upsilon;&amp;Sigma;</target>
        </trans-unit>
        <trans-unit id="5b838b7ebf1f60596d6ee50396a860cb268ef446" translate="yes" xml:space="preserve">
          <source>&amp;copy; 1993&amp;ndash;2017, Oracle and/or its affiliates. All rights reserved.</source>
          <target state="translated">&amp;copy; 1993&amp;ndash;2017, Oracle 및 / 또는 그 계열사. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="fe8aab1a32e8014ed2351efd46239200b23684cd" translate="yes" xml:space="preserve">
          <source>&amp;copy; 1993, 2020, Oracle and/or its affiliates. All rights reserved.</source>
          <target state="translated">&amp;copy; 1993, 2020, Oracle 및 / 또는 그 계열사. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="03c7b3d3b9655eace132158a150dcd952feb9a0a" translate="yes" xml:space="preserve">
          <source>&amp;gt;</source>
          <target state="translated">&amp;gt;</target>
        </trans-unit>
        <trans-unit id="cd88cd0470ef202a8c2367fe034571daa3ba4617" translate="yes" xml:space="preserve">
          <source>&amp;gt; &lt;code&gt;0)&lt;/code&gt;, where &amp;lt;</source>
          <target state="translated">&amp;gt; &lt;code&gt;0)&lt;/code&gt; , 여기서 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="f3f2fc870feb742181398e2286d4a40decfebfee" translate="yes" xml:space="preserve">
          <source>&amp;gt; is formed by taking the content-type string, replacing all slash characters with a &lt;code&gt;period&lt;/code&gt; ('.'), and all other non-alphanumeric characters with the underscore character '&lt;code&gt;_&lt;/code&gt;'. The alphanumeric characters are specifically the 26 uppercase ASCII letters '&lt;code&gt;A&lt;/code&gt;' through '&lt;code&gt;Z&lt;/code&gt;', the 26 lowercase ASCII letters '&lt;code&gt;a&lt;/code&gt;' through '&lt;code&gt;z&lt;/code&gt;', and the 10 ASCII digits '&lt;code&gt;0&lt;/code&gt;' through '&lt;code&gt;9&lt;/code&gt;'. If the specified class does not exist, or is not a subclass of &lt;code&gt;ContentHandler&lt;/code&gt;, then an &lt;code&gt;UnknownServiceException&lt;/code&gt; is thrown.</source>
          <target state="translated">&amp;gt;는 내용 유형 문자열을 취하여 모든 슬래시 문자를 &lt;code&gt;period&lt;/code&gt; ( '.')로 바꾸고 기타 모든 영숫자가 아닌 문자는 밑줄 문자 ' &lt;code&gt;_&lt;/code&gt; '로 대체하여 구성됩니다 . 영숫자는 구체적으로 26 개의 대문자 ASCII 문자 ' &lt;code&gt;A&lt;/code&gt; '~ ' &lt;code&gt;Z&lt;/code&gt; ', 26 개의 ASCII 소문자 ' &lt;code&gt;a&lt;/code&gt; '~ ' &lt;code&gt;z&lt;/code&gt; '및 10 개의 ASCII 숫자 ' &lt;code&gt;0&lt;/code&gt; '~ ' &lt;code&gt;9&lt;/code&gt; '입니다. 지정된 클래스가 존재하지 않거나 &lt;code&gt;ContentHandler&lt;/code&gt; 의 서브 클래스가 아닌 경우 &lt;code&gt;UnknownServiceException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="037c04308c6de547040d5873f8f6813a8ad6713b" translate="yes" xml:space="preserve">
          <source>&amp;gt; is one of the six comparison operators.</source>
          <target state="translated">&amp;gt;는 6 개의 비교 연산자 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="e1c61c47e5613c61a16daceca8ca80788fb72283" translate="yes" xml:space="preserve">
          <source>&amp;gt; is replaced by the name of the package and &amp;lt;</source>
          <target state="translated">&amp;gt;는 패키지 이름으로 대체되고 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="2c468e7dc1aed6589a0f1030d7d3d732117a4511" translate="yes" xml:space="preserve">
          <source>&amp;gt; is replaced by the name of the protocol. If this class does not exist, or if the class exists but it is not a subclass of &lt;code&gt;URLStreamHandler&lt;/code&gt;, then the next package in the list is tried.</source>
          <target state="translated">&amp;gt;는 프로토콜 이름으로 대체됩니다. 이 클래스가 없거나 클래스가 있지만 &lt;code&gt;URLStreamHandler&lt;/code&gt; 의 하위 클래스가 아닌 경우 목록의 다음 패키지가 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="189e471e5370b80aa28802c9de5455fea6644ff2" translate="yes" xml:space="preserve">
          <source>&amp;gt;= 0 &amp;amp;&amp;amp;</source>
          <target state="translated">&amp;gt; = 0 &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="dbbadebddd8a0b17d8a912227036295de97ce309" translate="yes" xml:space="preserve">
          <source>&amp;iota;&amp;chi;&amp;theta;&amp;upsilon;&amp;sigma;</source>
          <target state="translated">&amp;iota;&amp;chi;&amp;theta;&amp;upsilon;&amp;sigma;</target>
        </trans-unit>
        <trans-unit id="b541bb4e69618676b0b38ca5895d65468b649c1f" translate="yes" xml:space="preserve">
          <source>&amp;le; &lt;code&gt;nPoints&lt;/code&gt;. The figure is automatically closed by drawing a line connecting the final point to the first point, if those points are different.</source>
          <target state="translated">&amp;le; &lt;code&gt;nPoints&lt;/code&gt; . 마지막 점과 첫 번째 점이 다른 경우 마지막 점을 연결하는 선을 그리면 그림이 자동으로 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="ecc040616fd053f6612e194ccd741212e68327f8" translate="yes" xml:space="preserve">
          <source>&amp;lt; 10. The magnitude is then represented as the integer part of</source>
          <target state="translated">&amp;lt;10. 크기는 다음의 정수 부분으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="c79e409ee53558f8170378e01abe927e2a9da6a1" translate="yes" xml:space="preserve">
          <source>&amp;lt; 10&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;+1&lt;/sup&gt;; then let</source>
          <target state="translated">&amp;lt; &lt;sup&gt;&lt;i&gt;10n&lt;/i&gt; +1&lt;/sup&gt; ; 그럼</target>
        </trans-unit>
        <trans-unit id="ef2cba256aa51f89b672b43fe65005550e3436b6" translate="yes" xml:space="preserve">
          <source>&amp;lt; getChildCount(</source>
          <target state="translated">&amp;lt;getChildCount (</target>
        </trans-unit>
        <trans-unit id="24d78d27bb745f5188b22f727dea88ae7d3fbdcb" translate="yes" xml:space="preserve">
          <source>&amp;lt;&lt;code&gt;/MLET&lt;/code&gt;&amp;gt;</source>
          <target state="translated">&amp;lt;&lt;code&gt;/MLET&lt;/code&gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="dbe0e94f2aadcea8fbbff9d2ab91fc0bed0afde0" translate="yes" xml:space="preserve">
          <source>&amp;lt;&lt;code&gt;ARG TYPE=&lt;/code&gt;&lt;var&gt;argumentType&lt;/var&gt;&lt;code&gt;VALUE=&lt;/code&gt;&lt;var&gt;value&lt;/var&gt;&amp;gt;</source>
          <target state="translated">&amp;lt; &lt;code&gt;ARG TYPE=&lt;/code&gt; &lt;var&gt;argumentType&lt;/var&gt; 유형 &lt;code&gt;VALUE=&lt;/code&gt; &lt;var&gt;value&lt;/var&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="e98533c1f4d237a417a0ce54908e320f61106ef0" translate="yes" xml:space="preserve">
          <source>&amp;lt;&lt;code&gt;MLET&lt;/code&gt;</source>
          <target state="translated">&amp;lt;&lt;code&gt;MLET&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53efcaf4c2bd67dd1ada3aeecff95568b2a39f00" translate="yes" xml:space="preserve">
          <source>&amp;lt;= 4-bits/sample</source>
          <target state="translated">&amp;lt;= 4 비트 / 샘플</target>
        </trans-unit>
        <trans-unit id="be4c0088f8d8818559f3fd594bed5da6f9f39287" translate="yes" xml:space="preserve">
          <source>&amp;lt;= 8-bits/sample</source>
          <target state="translated">&amp;lt;= 8 비트 / 샘플</target>
        </trans-unit>
        <trans-unit id="87795e9c1efa74f895aefc5a0f46d2fbf7ccbbf0" translate="yes" xml:space="preserve">
          <source>&amp;lt;= &lt;a href=&quot;../../lang/character#MAX_CODE_POINT&quot;&gt;&lt;code&gt;Character.MAX_CODE_POINT&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&amp;lt;= &lt;a href=&quot;../../lang/character#MAX_CODE_POINT&quot;&gt; &lt;code&gt;Character.MAX_CODE_POINT&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="18e4870471d9888417c38f13fff93477c38b4dc2" translate="yes" xml:space="preserve">
          <source>&amp;lt;algorithm_or_type&amp;gt;</source>
          <target state="translated">&amp;lt;algorithm_or_type&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ad50a1ef615b5bd6907b4ee86654d5d529d72074" translate="yes" xml:space="preserve">
          <source>&amp;lt;attribute_name&amp;gt;</source>
          <target state="translated">&amp;lt;attribute_name&amp;gt;</target>
        </trans-unit>
        <trans-unit id="79c3405469f03808f07d638dc9aa4b6c82c8af3d" translate="yes" xml:space="preserve">
          <source>&amp;lt;crypto_service&amp;gt;. &amp;lt;algorithm_or_type&amp;gt; &amp;lt;attribute_name&amp;gt;</source>
          <target state="translated">&amp;lt;crypto_service&amp;gt;. &amp;lt;algorithm_or_type&amp;gt; &amp;lt;attribute_name&amp;gt;</target>
        </trans-unit>
        <trans-unit id="a5fd45286d93de51dcf96d19eeb0c86ec88f840a" translate="yes" xml:space="preserve">
          <source>&amp;lt;crypto_service&amp;gt;.&amp;lt;algorithm_or_type&amp;gt;</source>
          <target state="translated">&amp;lt;crypto_service&amp;gt;.&amp;lt;algorithm_or_type&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bee50d42af1cc5579e9c51d4416426cd7e54a585" translate="yes" xml:space="preserve">
          <source>&amp;lt;crypto_service&amp;gt;.&amp;lt;algorithm_or_type&amp;gt; &amp;lt;attribute_name&amp;gt;:&amp;lt;attribute_value&amp;gt;</source>
          <target state="translated">&amp;lt;crypto_service&amp;gt;. &amp;lt;algorithm_or_type&amp;gt; &amp;lt;attribute_name&amp;gt; : &amp;lt;attribute_value&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8df12d0de1d1739e9e4ff7361dca4378d707b716" translate="yes" xml:space="preserve">
          <source>&amp;lt;handler-name&amp;gt;.append specifies whether the FileHandler should append onto any existing files (defaults to false).</source>
          <target state="translated">&amp;lt;handler-name&amp;gt; .append는 FileHandler가 기존 파일에 추가해야하는지 여부를 지정합니다 (기본값은 false).</target>
        </trans-unit>
        <trans-unit id="6f93874e36125753b612f5ca596115ebb34757df" translate="yes" xml:space="preserve">
          <source>&amp;lt;handler-name&amp;gt;.count specifies how many output files to cycle through (defaults to 1).</source>
          <target state="translated">&amp;lt;handler-name&amp;gt; .count는 순환 할 출력 파일 수를 지정합니다 (기본값은 1).</target>
        </trans-unit>
        <trans-unit id="ba286c12f58dc3f61f4f9d2fe4183046a0f650f1" translate="yes" xml:space="preserve">
          <source>&amp;lt;handler-name&amp;gt;.encoding the name of the character set encoding to use (defaults to the default platform encoding).</source>
          <target state="translated">&amp;lt;handler-name&amp;gt; .encoding 사용할 문자 집합 인코딩의 이름 (기본값은 기본 플랫폼 인코딩).</target>
        </trans-unit>
        <trans-unit id="5ccc1ffa872042e4adaa9b8e2307447862821b27" translate="yes" xml:space="preserve">
          <source>&amp;lt;handler-name&amp;gt;.filter specifies the name of a &lt;code&gt;Filter&lt;/code&gt; class to use (defaults to no &lt;code&gt;Filter&lt;/code&gt;).</source>
          <target state="translated">&amp;lt;handler-name&amp;gt; .filter 는 사용할 &lt;code&gt;Filter&lt;/code&gt; 클래스 의 이름을 지정합니다 (기본값은 &lt;code&gt;Filter&lt;/code&gt; 없음 ).</target>
        </trans-unit>
        <trans-unit id="9a817a1e441bb3171fe6a7182eac5680b0ef2750" translate="yes" xml:space="preserve">
          <source>&amp;lt;handler-name&amp;gt;.formatter specifies the name of a &lt;code&gt;Formatter&lt;/code&gt; class to use (defaults to &lt;code&gt;java.util.logging.SimpleFormatter&lt;/code&gt;).</source>
          <target state="translated">&amp;lt;handler-name&amp;gt; .formatter 는 사용할 &lt;code&gt;Formatter&lt;/code&gt; 클래스 의 이름을 지정합니다 (기본값은 &lt;code&gt;java.util.logging.SimpleFormatter&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d38a70656ce7064e7c49bbd62c373eb33748d603" translate="yes" xml:space="preserve">
          <source>&amp;lt;handler-name&amp;gt;.formatter specifies the name of a &lt;code&gt;Formatter&lt;/code&gt; class to use (defaults to &lt;code&gt;java.util.logging.XMLFormatter&lt;/code&gt;)</source>
          <target state="translated">&amp;lt;handler-name&amp;gt; .formatter 는 사용할 &lt;code&gt;Formatter&lt;/code&gt; 클래스 의 이름을 지정합니다 (기본값은 &lt;code&gt;java.util.logging.XMLFormatter&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d399ab52a70c7e84f9e447aab912bf7c23388488" translate="yes" xml:space="preserve">
          <source>&amp;lt;handler-name&amp;gt;.formatter specifies the name of a &lt;code&gt;Formatter&lt;/code&gt; class to use (defaults to &lt;code&gt;java.util.logging.XMLFormatter&lt;/code&gt;).</source>
          <target state="translated">&amp;lt;handler-name&amp;gt; .formatter 는 사용할 &lt;code&gt;Formatter&lt;/code&gt; 클래스 의 이름을 지정합니다 (기본값은 &lt;code&gt;java.util.logging.XMLFormatter&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="999b4500bc13e9d788c9313abb00415004066ad2" translate="yes" xml:space="preserve">
          <source>&amp;lt;handler-name&amp;gt;.host specifies the target host name to connect to (no default).</source>
          <target state="translated">&amp;lt;handler-name&amp;gt; .host는 연결할 대상 호스트 이름을 지정합니다 (기본값 없음).</target>
        </trans-unit>
        <trans-unit id="f6bbd60a3c317d89686055470831fa7be9bfb780" translate="yes" xml:space="preserve">
          <source>&amp;lt;handler-name&amp;gt;.level specifies the default level for the &lt;code&gt;Handler&lt;/code&gt; (defaults to &lt;code&gt;Level.ALL&lt;/code&gt;).</source>
          <target state="translated">&amp;lt;handler-name&amp;gt; .level은 &lt;code&gt;Handler&lt;/code&gt; 의 기본 레벨을 지정합니다 (기본값은 &lt;code&gt;Level.ALL&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f60f126978aae86bcfd6b78067c713a4f8f2828f" translate="yes" xml:space="preserve">
          <source>&amp;lt;handler-name&amp;gt;.level specifies the default level for the &lt;code&gt;Handler&lt;/code&gt; (defaults to &lt;code&gt;Level.INFO&lt;/code&gt;).</source>
          <target state="translated">&amp;lt;handler-name&amp;gt; .level은 &lt;code&gt;Handler&lt;/code&gt; 의 기본 레벨을 지정합니다 (기본값은 &lt;code&gt;Level.INFO&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="db64d6d158ee404ffa74c93c466e6fb6f22cebb9" translate="yes" xml:space="preserve">
          <source>&amp;lt;handler-name&amp;gt;.level specifies the level for the &lt;code&gt;Handler&lt;/code&gt; (defaults to &lt;code&gt;Level.ALL&lt;/code&gt;).</source>
          <target state="translated">&amp;lt;handler-name&amp;gt; .level은 &lt;code&gt;Handler&lt;/code&gt; 의 레벨을 지정합니다 (기본값은 &lt;code&gt;Level.ALL&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="53667cb3324e4ecc5184f7f67d84c6e713d42900" translate="yes" xml:space="preserve">
          <source>&amp;lt;handler-name&amp;gt;.limit specifies an approximate maximum amount to write (in bytes) to any one file. If this is zero, then there is no limit. (Defaults to no limit).</source>
          <target state="translated">&amp;lt;handler-name&amp;gt; .limit는 하나의 파일에 쓸 대략적인 최대 양 (바이트)을 지정합니다. 이것이 0이면 제한이 없습니다. (기본값은 제한 없음).</target>
        </trans-unit>
        <trans-unit id="9e432f7bab2d099e98a0f378f2314c484bf6536e" translate="yes" xml:space="preserve">
          <source>&amp;lt;handler-name&amp;gt;.maxLocks specifies the maximum number of concurrent locks held by FileHandler (defaults to 100).</source>
          <target state="translated">&amp;lt;handler-name&amp;gt; .maxLocks는 FileHandler가 보유하는 최대 동시 잠금 수를 지정합니다 (기본값은 100).</target>
        </trans-unit>
        <trans-unit id="39037e24ccf18c2b65d6a481acdd745baa150232" translate="yes" xml:space="preserve">
          <source>&amp;lt;handler-name&amp;gt;.pattern specifies a pattern for generating the output file name. See below for details. (Defaults to &quot;%h/java%u.log&quot;).</source>
          <target state="translated">&amp;lt;handler-name&amp;gt; .pattern은 출력 파일 이름을 생성하기위한 패턴을 지정합니다. 자세한 내용은 아래를 참조하십시오. (기본값은 &quot;% h / java % u.log&quot;).</target>
        </trans-unit>
        <trans-unit id="bcaa84662ea5a82b897737aef1771bf24bd62a63" translate="yes" xml:space="preserve">
          <source>&amp;lt;handler-name&amp;gt;.port specifies the target TCP port to use (no default).</source>
          <target state="translated">&amp;lt;handler-name&amp;gt; .port는 사용할 대상 TCP 포트를 지정합니다 (기본값 없음).</target>
        </trans-unit>
        <trans-unit id="ff0f58e49799e98b98469bd0e6030f7e29bee5b7" translate="yes" xml:space="preserve">
          <source>&amp;lt;handler-name&amp;gt;.push defines the &lt;code&gt;pushLevel&lt;/code&gt; (defaults to &lt;code&gt;level.SEVERE&lt;/code&gt;).</source>
          <target state="translated">정의 .push &amp;lt;핸들러 이름&amp;gt; &lt;code&gt;pushLevel&lt;/code&gt; (에 기본값을 &lt;code&gt;level.SEVERE&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="592abaade2039f04312fa565a59b9a2929a86f88" translate="yes" xml:space="preserve">
          <source>&amp;lt;handler-name&amp;gt;.size defines the buffer size (defaults to 1000).</source>
          <target state="translated">&amp;lt;handler-name&amp;gt; .size는 버퍼 크기를 정의합니다 (기본값은 1000).</target>
        </trans-unit>
        <trans-unit id="87e3be51857c32ccb20dbd132c45eb519d184552" translate="yes" xml:space="preserve">
          <source>&amp;lt;handler-name&amp;gt;.target specifies the name of the target &lt;code&gt;Handler &lt;/code&gt; class. (no default).</source>
          <target state="translated">&amp;lt;handler-name&amp;gt; .target은 대상 &lt;code&gt;Handler &lt;/code&gt; 클래스 의 이름을 지정합니다 . (기본값 없음).</target>
        </trans-unit>
        <trans-unit id="2684751bda9e34bc665929c6bd77d65fe2e08cc1" translate="yes" xml:space="preserve">
          <source>&amp;lt;node name&amp;gt;</source>
          <target state="translated">&amp;lt;노드 이름&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bd689c841ea09615839b8c3779bf04820e497ca4" translate="yes" xml:space="preserve">
          <source>&amp;lt;parent's absolute path name&amp;gt;</source>
          <target state="translated">&amp;lt;부모의 절대 경로 이름&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b8b4d71adfec25800db0e9993e3bf3b137379879" translate="yes" xml:space="preserve">
          <source>&amp;lt;provider, oid&amp;gt;</source>
          <target state="translated">&amp;lt;공급자, oid&amp;gt;</target>
        </trans-unit>
        <trans-unit id="acd84a607dd3065e91625c6ceced49061beff9f7" translate="yes" xml:space="preserve">
          <source>&amp;lt;unknown&amp;gt;</source>
          <target state="translated">&amp;lt;unknown&amp;gt;</target>
        </trans-unit>
        <trans-unit id="383f134e05f2a4eb1c9f02511f76241f497dabd8" translate="yes" xml:space="preserve">
          <source>&amp;middot;</source>
          <target state="translated">&amp;middot;</target>
        </trans-unit>
        <trans-unit id="85848e65d16c282e3a55aaa67a25249196c3c4bd" translate="yes" xml:space="preserve">
          <source>&amp;middot; &lt;code&gt;(&quot;application/x-java-jvm-local-objectref&quot;, &quot;java.awt.image.renderable.RenderableImage&quot;)&lt;/code&gt;</source>
          <target state="translated">&amp;middot; &lt;code&gt;(&quot;application/x-java-jvm-local-objectref&quot;, &quot;java.awt.image.renderable.RenderableImage&quot;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6bb834b8b032b2652a2bc5aedb00077fbc7fb28c" translate="yes" xml:space="preserve">
          <source>&amp;middot; &lt;code&gt;(&quot;text/plain&quot;, &quot;java.io.InputStream&quot;)&lt;/code&gt;</source>
          <target state="translated">&amp;middot; &lt;code&gt;(&quot;text/plain&quot;, &quot;java.io.InputStream&quot;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d5933c30e6598c1d1e89814abfa3f9a4e893f80" translate="yes" xml:space="preserve">
          <source>&amp;middot; &lt;code&gt;(&quot;text/plain; charset=us-ascii&quot;, &quot;java.io.InputStream&quot;)&lt;/code&gt;</source>
          <target state="translated">&amp;middot; &lt;code&gt;(&quot;text/plain; charset=us-ascii&quot;, &quot;java.io.InputStream&quot;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4bf6558d39b16c63984da7d18ab9a7bad477c34c" translate="yes" xml:space="preserve">
          <source>&amp;middot; &lt;code&gt;(&quot;text/plain; charset=utf-8&quot;, &quot;java.io.InputStream&quot;)&lt;/code&gt;</source>
          <target state="translated">&amp;middot; &lt;code&gt;(&quot;text/plain; charset=utf-8&quot;, &quot;java.io.InputStream&quot;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b77c36053e1d6656c3b38c9f32bc6476ae893832" translate="yes" xml:space="preserve">
          <source>&amp;middot;2&lt;sup&gt;&lt;i&gt;e&lt;/i&gt;-1075&lt;/sup&gt;.</source>
          <target state="translated">&amp;middot;2&lt;sup&gt;&lt;i&gt;e&lt;/i&gt;-1075&lt;/sup&gt;.</target>
        </trans-unit>
        <trans-unit id="47da12e614123dec424eb71af88aeec704579e2a" translate="yes" xml:space="preserve">
          <source>&amp;middot;2&lt;sup&gt;&lt;i&gt;e&lt;/i&gt;-150&lt;/sup&gt;.</source>
          <target state="translated">&amp;middot;2&lt;sup&gt;&lt;i&gt;e&lt;/i&gt;-150&lt;/sup&gt;.</target>
        </trans-unit>
        <trans-unit id="77d7c9778f4d818ba15cfb0534bbcd934419113c" translate="yes" xml:space="preserve">
          <source>&amp;times;</source>
          <target state="translated">&amp;times;</target>
        </trans-unit>
        <trans-unit id="484849ba48e1556ccc4f26f52956679ef708db89" translate="yes" xml:space="preserve">
          <source>&amp;times; 10&lt;sup&gt; &lt;i&gt;exponent&lt;/i&gt;&lt;/sup&gt;. For each string on the left, the resulting representation [&lt;code&gt;BigInteger&lt;/code&gt;, &lt;code&gt;scale&lt;/code&gt;] is shown on the right.</source>
          <target state="translated">&amp;times; 10 &lt;sup&gt;&lt;i&gt;지수&lt;/i&gt;&lt;/sup&gt; . 왼쪽의 각 문자열에 대해 결과 표현 [ &lt;code&gt;BigInteger&lt;/code&gt; , &lt;code&gt;scale&lt;/code&gt; ]이 오른쪽에 표시됩니다.&lt;sup&gt; &lt;i&gt;&lt;/i&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="bb589d0621e5472f470fa3425a234c74b1e202e8" translate="yes" xml:space="preserve">
          <source>'</source>
          <target state="translated">'</target>
        </trans-unit>
        <trans-unit id="88ad0bc92845e50969f63989a457dada879c1193" translate="yes" xml:space="preserve">
          <source>' '</source>
          <target state="translated">''</target>
        </trans-unit>
        <trans-unit id="cf83f9def935ee81c09ef7836419bcba36bf2443" translate="yes" xml:space="preserve">
          <source>' ( the value is 'zero' A).</source>
          <target state="translated">'(값은'0 'A).</target>
        </trans-unit>
        <trans-unit id="bbc91e5ac2689eefd0a70f3cf52cea44519e491a" translate="yes" xml:space="preserve">
          <source>' ( the value is 'zero' A). This indicates that the JDBC driver does not support an optional JDBC feature. Optional JDBC features can fall into the fallowing categories:</source>
          <target state="translated">'(값은'0 'A). 이는 JDBC 드라이버가 선택적 JDBC 기능을 지원하지 않음을 나타냅니다. 선택적 JDBC 기능은 다음과 같은 범주에 속할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4762af621eb9ca684f9abc85c7b784cc8842dd1e" translate="yes" xml:space="preserve">
          <source>'!' : Turns on Thai/Lao vowel-consonant swapping. If this rule is in force when a Thai vowel of the range \U0E40-\U0E44 precedes a Thai consonant of the range \U0E01-\U0E2E OR a Lao vowel of the range \U0EC0-\U0EC4 precedes a Lao consonant of the range \U0E81-\U0EAE then the vowel is placed after the consonant for collation purposes.</source>
          <target state="translated">'!' : 태국어 / 라오 어 모음-자음 교환을 켭니다. 이 규칙이 적용되는 경우 \ U0E40- \ U0E44 범위의 태국 모음이 \ U0E01- \ U0E2E 범위의 태국어 자음 앞에 있거나 \ U0EC0- \ U0EC4 범위의 라오 어 모음이 \ 범위의 라오 어 자음 앞에 올 때 적용됩니다. U0E81- \ U0EAE 그러면 조합 목적으로 모음이 자음 뒤에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="961eeaff55b3e91d7d008fad7c682211cae68618" translate="yes" xml:space="preserve">
          <source>'#'</source>
          <target state="translated">'#'</target>
        </trans-unit>
        <trans-unit id="1a821cfa496eb704f2306338ebd5ecbdb766d16d" translate="yes" xml:space="preserve">
          <source>'&amp;amp;' : Indicates that the next rule follows the position to where the reset text-argument would be sorted.</source>
          <target state="translated">'&amp;amp;': 다음 규칙이 재설정 텍스트 인수가 정렬되는 위치를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="fd3ec689cf0aff2e0ef09a21127dac28d38ef702" translate="yes" xml:space="preserve">
          <source>'&amp;lt;' : Greater, as a letter difference (primary)</source>
          <target state="translated">'&amp;lt;': 문자 차이만큼 큼 (기본)</target>
        </trans-unit>
        <trans-unit id="ecdf0f45556614dfe871edd46e95a0c26e14e403" translate="yes" xml:space="preserve">
          <source>'&amp;lt;b&amp;gt;blah &amp;lt;i&amp;gt; &amp;lt;strike&amp;gt; foo' which can be treated as: '&amp;lt;b&amp;gt;blah &amp;lt;i&amp;gt;&amp;lt;strike&amp;gt;foo'</source>
          <target state="translated">'&amp;lt;b&amp;gt; blah &amp;lt;i&amp;gt; &amp;lt;strike&amp;gt; foo'는 '&amp;lt;b&amp;gt; blah &amp;lt;i&amp;gt; &amp;lt;strike&amp;gt; foo'로 취급 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="976926f681c94650d40e5482789950456cca4238" translate="yes" xml:space="preserve">
          <source>'''G''''Day'''</source>
          <target state="translated">'''G''''Day'''</target>
        </trans-unit>
        <trans-unit id="94d56771416d9bbc058af41360e9ce01a8efdb84" translate="yes" xml:space="preserve">
          <source>'('</source>
          <target state="translated">'('</target>
        </trans-unit>
        <trans-unit id="6192ad8ce14fbfe2a5c2cecafaf933a0d09e108f" translate="yes" xml:space="preserve">
          <source>'+'</source>
          <target state="translated">'+'</target>
        </trans-unit>
        <trans-unit id="f205759055b34d459a39e13e1d1b7b11f573a3bc" translate="yes" xml:space="preserve">
          <source>', or under vendor-specified conditions.</source>
          <target state="translated">'또는 공급 업체가 지정한 조건에서.</target>
        </trans-unit>
        <trans-unit id="bb2dc6217ceb57620d1901a80f2f749212f8d2e7" translate="yes" xml:space="preserve">
          <source>', or under vendor-specified conditions. This indicates that an integrity constraint (foreign key, primary key or unique key) has been violated.</source>
          <target state="translated">'또는 공급 업체가 지정한 조건에서. 이는 무결성 제약 (외래 키, 기본 키 또는 고유 키)이 위반되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f6d251ab5bbd10d3924d3ee87e8e5179f9a92243" translate="yes" xml:space="preserve">
          <source>', or under vendor-specified conditions. This indicates that the authorization credentials presented during connection establishment are not valid.</source>
          <target state="translated">'또는 공급 업체가 지정한 조건에서. 이는 연결 설정 중에 제시된 권한 부여 자격 증명이 유효하지 않음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="29e23069e67af368811591faf2eeb920e7c041c8" translate="yes" xml:space="preserve">
          <source>', or under vendor-specified conditions. This indicates that the connection operation that failed might be able to succeed if the operation is retried without any application-level changes.</source>
          <target state="translated">'또는 공급 업체가 지정한 조건에서. 이는 응용 프로그램 수준 변경없이 작업을 다시 시도하면 실패한 연결 작업이 성공할 수 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c583179b93a9f1096c86df5f91d258ef1f575ede" translate="yes" xml:space="preserve">
          <source>', or under vendor-specified conditions. This indicates that the connection operation that failed will not succeed if the operation is retried without the cause of the failure being corrected.</source>
          <target state="translated">'또는 공급 업체가 지정한 조건에서. 이는 실패 원인을 수정하지 않고 작업을 재 시도하면 실패한 연결 작업이 성공하지 않음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="944f63adaf24b5d5e1b0d177720729285b3a6323" translate="yes" xml:space="preserve">
          <source>', or under vendor-specified conditions. This indicates that the current statement was automatically rolled back by the database because of deadlock or other transaction serialization failures.</source>
          <target state="translated">'또는 공급 업체가 지정한 조건에서. 이는 교착 상태 또는 기타 트랜잭션 직렬화 실패로 인해 현재 문이 데이터베이스에 의해 자동으로 롤백되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2ab5860888750b9ee82ee7d9135a0a066ed5a7d8" translate="yes" xml:space="preserve">
          <source>', or under vendor-specified conditions. This indicates that the in-progress query has violated SQL syntax rules.</source>
          <target state="translated">'또는 공급 업체가 지정한 조건에서. 이는 진행중인 쿼리가 SQL 구문 규칙을 위반했음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bd517f2e907ef511ec85b9f2a072cb6491662c2b" translate="yes" xml:space="preserve">
          <source>', or under vendor-specified conditions. This indicates various data errors, including but not limited to data conversion errors, division by 0, and invalid arguments to functions.</source>
          <target state="translated">'또는 공급 업체가 지정한 조건에서. 이는 데이터 변환 오류, 0으로 나누기 및 함수에 대한 유효하지 않은 인수를 포함하되 이에 국한되지 않는 다양한 데이터 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="951073bf3052137f10909c5d078fc8fbefbab5b8" translate="yes" xml:space="preserve">
          <source>','</source>
          <target state="translated">','</target>
        </trans-unit>
        <trans-unit id="245ebdb6dad4e59ac1d76be411a889219d689a6a" translate="yes" xml:space="preserve">
          <source>',' : Greater, as a case difference (tertiary)</source>
          <target state="translated">',': 대소 문자 차이로 더 큼 (3 차)</target>
        </trans-unit>
        <trans-unit id="10b91d5a75e7b65ff366831e2988a75099c6a036" translate="yes" xml:space="preserve">
          <source>'-'</source>
          <target state="translated">'-'</target>
        </trans-unit>
        <trans-unit id="69a57c4b79e0f5fe32dca1f62d083167cbffc2b6" translate="yes" xml:space="preserve">
          <source>'0'</source>
          <target state="translated">'0'</target>
        </trans-unit>
        <trans-unit id="5e663d333de58c90a851b7ab4fe8ffdff8d17bbe" translate="yes" xml:space="preserve">
          <source>'10:15:30'</source>
          <target state="translated">'10:15:30'</target>
        </trans-unit>
        <trans-unit id="89d73b20c3e351aedf527a299dd13c7a79e12d12" translate="yes" xml:space="preserve">
          <source>'10:15:30+01:00'; '10:15:30'</source>
          <target state="translated">'10 : 15 : 30 + 01 : 00 '; '10 : 15 : 30 '</target>
        </trans-unit>
        <trans-unit id="dbec0343df908ac4c0c1a10092a3d3bb8a42782b" translate="yes" xml:space="preserve">
          <source>'2011-12-03'</source>
          <target state="translated">'2011-12-03'</target>
        </trans-unit>
        <trans-unit id="1deaf8c8c7342ad21966bdd20c958f95abba68d8" translate="yes" xml:space="preserve">
          <source>'2011-12-03+01:00'; '2011-12-03'</source>
          <target state="translated">'2011-12-03 + 01 : 00'; '2011-12-03'</target>
        </trans-unit>
        <trans-unit id="2592400c0618528864310fd9392c5084d0367e49" translate="yes" xml:space="preserve">
          <source>'2011-12-03T10:15:30'</source>
          <target state="translated">'2011-12-03T10:15:30'</target>
        </trans-unit>
        <trans-unit id="78b31c3d03c157b5c542cd418e9073d718b4a0bc" translate="yes" xml:space="preserve">
          <source>'2011-12-03T10:15:30+01:00'</source>
          <target state="translated">'2011-12-03T10:15:30+01:00'</target>
        </trans-unit>
        <trans-unit id="b2e06cf66d1d822bb76a67a55567147745a44489" translate="yes" xml:space="preserve">
          <source>'2011-12-03T10:15:30+01:00[Europe/Paris]'</source>
          <target state="translated">'2011-12-03T10:15:30+01:00[Europe/Paris]'</target>
        </trans-unit>
        <trans-unit id="e5c6958e11df624da4e5a0d927bb854ceb07eb73" translate="yes" xml:space="preserve">
          <source>'2011-12-03T10:15:30Z'</source>
          <target state="translated">'2011-12-03T10:15:30Z'</target>
        </trans-unit>
        <trans-unit id="efc4f407eb9f558a2fcc9abcc97cb81e2aac7834" translate="yes" xml:space="preserve">
          <source>'2012-W48-6'</source>
          <target state="translated">'2012-W48-6'</target>
        </trans-unit>
        <trans-unit id="bbe9c7aa99db396825d5061bb609d363b6dc62bd" translate="yes" xml:space="preserve">
          <source>'3 Jun 2008 11:05'</source>
          <target state="translated">'2008 년 6 월 3 일 11:05'</target>
        </trans-unit>
        <trans-unit id="ef6bda054beea4803c61f7f53c4fa3258c55eb15" translate="yes" xml:space="preserve">
          <source>'3 Jun 2008 11:05:30'</source>
          <target state="translated">'2008 년 6 월 3 일 11:05:30'</target>
        </trans-unit>
        <trans-unit id="5acbcb49665d7a8b1bffb7037f4eb0e19e5abb75" translate="yes" xml:space="preserve">
          <source>';' : Greater, as an accent difference (secondary)</source>
          <target state="translated">';' : 더 큼, 악센트 차이 (보조)</target>
        </trans-unit>
        <trans-unit id="bd1b0e83970de8e88c59c7a7d3d2628b4e84ea9d" translate="yes" xml:space="preserve">
          <source>'=' : Equal</source>
          <target state="translated">'=': 같음</target>
        </trans-unit>
        <trans-unit id="df43f0adcb26842d5057af7afff9c81db9f9da1a" translate="yes" xml:space="preserve">
          <source>'@' : Indicates that accents are sorted backwards, as in French.</source>
          <target state="translated">'@': 프랑스어에서와 같이 악센트가 거꾸로 정렬됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2053de05f16e38ba9e1881ede265132c4a6d6992" translate="yes" xml:space="preserve">
          <source>'@' : Turns on backwards sorting of accents (secondary differences), as in French.</source>
          <target state="translated">'@': 프랑스어에서와 같이 악센트 (2 차 차이점)의 역방향 정렬을 켭니다.</target>
        </trans-unit>
        <trans-unit id="b5231e92a91416eb9bcf9356b7eb5ffd1043d728" translate="yes" xml:space="preserve">
          <source>'G''Day'</source>
          <target state="translated">'G''Day'</target>
        </trans-unit>
        <trans-unit id="f032a18b88c410bbd675e22f92b0f7979f8848a6" translate="yes" xml:space="preserve">
          <source>'Hello'</source>
          <target state="translated">'Hello'</target>
        </trans-unit>
        <trans-unit id="a51f9674001f917d171d4db4ccc99f13edbb9c00" translate="yes" xml:space="preserve">
          <source>'I''''''M'</source>
          <target state="translated">'I''''''M'</target>
        </trans-unit>
        <trans-unit id="86b6dac7f16c52bd70e3847e61dd3a62a837e636" translate="yes" xml:space="preserve">
          <source>'Tue, 3 Jun 2008 11:05:30 GMT'</source>
          <target state="translated">'2008 년 6 월 3 일 화요일 11:05:30 GMT'</target>
        </trans-unit>
        <trans-unit id="074f37f28ed6b817dabfa2aaf89c5e2e00aee8b0" translate="yes" xml:space="preserve">
          <source>'name'</source>
          <target state="translated">'name'</target>
        </trans-unit>
        <trans-unit id="a64cc37d4c7f1b12bae32dd308713fb712dfab14" translate="yes" xml:space="preserve">
          <source>'requires' directives that have the 'static' modifier express an optional dependence at run time. If a module declares that it 'requires static M' then resolution does not search the observable modules for M to satisfy the dependency. However, if M is recursively enumerated at step 1 then all modules that are enumerated and `requires static M` will read M.</source>
          <target state="translated">'static'수정자가있는 'requires'지시문은 런타임에 선택적 종속성을 나타냅니다. 모듈이 '정적 M 필요'를 선언하면 해상도는 종속성을 충족시키기 위해 관찰 가능한 모듈에서 M을 검색하지 않습니다. 그러나 M이 1 단계에서 재귀 적으로 열거되면 열거되고`정적 M이 필요함`인 모든 모듈은 M을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="13d2792fb1121cba0cdb3675ca011c7b6246f91c" translate="yes" xml:space="preserve">
          <source>'requires' directives with 'static' modifier</source>
          <target state="translated">'static'수정자가있는 'requires'지시문</target>
        </trans-unit>
        <trans-unit id="c33b22e81bb5c9bc0145aea68c38a9b201347b19" translate="yes" xml:space="preserve">
          <source>'s &lt;a href=&quot;../../util/function/consumer#accept(T)&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method is invoked with the key for each channel that is ready to perform an operation identified by its key's interest set. The &lt;code&gt;accept&lt;/code&gt; method may be invoked more than once for the same key but with the ready-operation set containing a subset of the operations for which the channel is ready (as described above). The &lt;code&gt;accept&lt;/code&gt; method is invoked while synchronized on the selector and its selected-key set. Great care must be taken to avoid deadlocking with other threads that also synchronize on these objects. Selection operations are not reentrant in general and consequently the</source>
          <target state="translated">의 &lt;a href=&quot;../../util/function/consumer#accept(T)&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt; 메소드는 키의 관심 세트로 식별되는 작업을 수행 할 준비가 된 각 채널에 대한 키와 함께 호출됩니다. &lt;code&gt;accept&lt;/code&gt; (위에서 설명 됨)에있어서 더 동일한 키 번 이상하지만 채널이 준비되는 동작들의 서브 세트를 포함하는 준비된 작동 세트를 호출 할 수있다. &lt;code&gt;accept&lt;/code&gt; 셀렉터와 선택 키 세트를 동기화하는 동안 메서드가 호출됩니다. 이러한 개체에서도 동기화되는 다른 스레드와의 교착 상태를 방지하려면 세심한주의를 기울여야합니다. 선택 작업은 일반적으로 재진입되지 않으며 결과적으로</target>
        </trans-unit>
        <trans-unit id="34f48f2dd232961572dc2d0d3fe29ea39c54c61b" translate="yes" xml:space="preserve">
          <source>'s IP addresses is equal to this object's IP address.</source>
          <target state="translated">의 IP 주소는이 개체의 IP 주소와 같습니다.</target>
        </trans-unit>
        <trans-unit id="07e49c403a2f64b7d82f87466223b115a070300c" translate="yes" xml:space="preserve">
          <source>'s IP addresses.</source>
          <target state="translated">의 IP 주소.</target>
        </trans-unit>
        <trans-unit id="276199857a20b234879372f1ce3d991abf41c5be" translate="yes" xml:space="preserve">
          <source>'s absolute path name in order to form</source>
          <target state="translated">형성하기위한의 절대 경로 이름</target>
        </trans-unit>
        <trans-unit id="0e84ce2799630cfbc8dd80626036e0543193a24b" translate="yes" xml:space="preserve">
          <source>'s absolute path name, with the initial slash character (if present) removed. Note that:</source>
          <target state="translated">초기 슬래시 문자 (있는 경우)가 제거 된의 절대 경로 이름입니다. 참고 :</target>
        </trans-unit>
        <trans-unit id="83c8b9bed97329e33a7586cc6e685ee61a890559" translate="yes" xml:space="preserve">
          <source>'s actions are a proper subset of this &lt;code&gt;ServicePermission&lt;/code&gt;'s actions,</source>
          <target state="translated">의 작업은이 &lt;code&gt;ServicePermission&lt;/code&gt; 작업의 적절한 하위 집합입니다 .</target>
        </trans-unit>
        <trans-unit id="686597ab5890c6a7eb0bb59296b8ff1055167e4b" translate="yes" xml:space="preserve">
          <source>'s actions are a proper subset of this object's actions, and</source>
          <target state="translated">의 작업은이 개체 작업의 적절한 하위 집합입니다.</target>
        </trans-unit>
        <trans-unit id="a37b95364847604c837cb9a23cf0ad95e9d6d0c8" translate="yes" xml:space="preserve">
          <source>'s actions are a subset of this object's actions</source>
          <target state="translated">의 작업은이 개체 작업의 하위 집합입니다.</target>
        </trans-unit>
        <trans-unit id="c08314005e1c1cb9d9e3d6b4e5affc8b17e6e2fa" translate="yes" xml:space="preserve">
          <source>'s actions are a subset of this object's actions, and</source>
          <target state="translated">의 작업은이 개체 작업의 하위 집합입니다.</target>
        </trans-unit>
        <trans-unit id="01901f6d4449ad83c2a256e94fba5a72fd8664d1" translate="yes" xml:space="preserve">
          <source>'s canonical name (the name without any preceding *) ends with this object's canonical host name. For example, *.sun.com implies *.eng.sun.com.</source>
          <target state="translated">의 정식 이름 (앞에 *가없는 이름)은이 개체의 정식 호스트 이름으로 끝납니다. 예를 들어, * .sun.com은 * .eng.sun.com을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="6ee0fee00a03288256dbf84b94fcf48ca82b7c4c" translate="yes" xml:space="preserve">
          <source>'s canonical name.</source>
          <target state="translated">의 정식 이름입니다.</target>
        </trans-unit>
        <trans-unit id="4c838388193a22566ac67ff9dcc77790254ab744" translate="yes" xml:space="preserve">
          <source>'s certificates.</source>
          <target state="translated">의 인증서.</target>
        </trans-unit>
        <trans-unit id="af3d9fca3a25a7818e383ea499340ef5518ec440" translate="yes" xml:space="preserve">
          <source>'s class is the same as this object's class and has the same name as this BasicPermission object, false otherwise.</source>
          <target state="translated">의 클래스는이 객체의 클래스와 같고이 BasicPermission 객체와 이름이 같고 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="630e7bf31979b6926e29e8e8c0cddd0817b20086" translate="yes" xml:space="preserve">
          <source>'s class is the same as this object's class and has the same name as this object.</source>
          <target state="translated">의 클래스는이 객체의 클래스와 같고이 객체와 이름이 같습니다.</target>
        </trans-unit>
        <trans-unit id="2f4aa36d47ffc8cfbbfaffd9d4ac6374ffdae25e" translate="yes" xml:space="preserve">
          <source>'s class is the same as this object's class, and</source>
          <target state="translated">의 클래스는이 객체의 클래스와 동일하며</target>
        </trans-unit>
        <trans-unit id="3a33d82a10da517be79898566b50e327ed8d3dc3" translate="yes" xml:space="preserve">
          <source>'s className always matches it. If it is &quot;&lt;code&gt;a.*&lt;/code&gt;&quot;,</source>
          <target state="translated">의 className은 항상 일치합니다. &quot; &lt;code&gt;a.*&lt;/code&gt; &quot;인 경우</target>
        </trans-unit>
        <trans-unit id="77db3e983bacefe2df728c852df0d2a749ddd6bb" translate="yes" xml:space="preserve">
          <source>'s className matches it if it begins with &quot;&lt;code&gt;a.&lt;/code&gt;&quot;.</source>
          <target state="translated">의 className이 &quot; &lt;code&gt;a.&lt;/code&gt; &quot;로 시작하면 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="193c86ba3a034796e151dec1e5ec06d25d37e050" translate="yes" xml:space="preserve">
          <source>'s className matches this object's className; and</source>
          <target state="translated">의 className은이 객체의 className과 일치합니다. 과</target>
        </trans-unit>
        <trans-unit id="da7dba7d2639ef75383a98ff8594d6757b674eee" translate="yes" xml:space="preserve">
          <source>'s file must match this object's file with a '/' appended.</source>
          <target state="translated">의 파일은 '/'가 추가 된이 개체의 파일과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="a403018b5d98ba2a9a9fe3c7cf7934767101b844" translate="yes" xml:space="preserve">
          <source>'s file must start with this object's file (exclusive the trailing &quot;-&quot;). If this object's file ends with a &quot;/*&quot;, then</source>
          <target state="translated">의 파일은이 개체의 파일로 시작해야합니다 (후행 &quot;-&quot;제외). 이 개체의 파일이 &quot;/ *&quot;로 끝나면</target>
        </trans-unit>
        <trans-unit id="485f1b95d7fcfedd60916bc3b1f669a2929ea415" translate="yes" xml:space="preserve">
          <source>'s file must start with this object's file and must not have any further &quot;/&quot; separators. If this object's file doesn't end with a &quot;/&quot;, then</source>
          <target state="translated">의 파일은이 개체의 파일로 시작해야하며 &quot;/&quot;구분 기호가 없어야합니다. 이 개체의 파일이 &quot;/&quot;로 끝나지 않으면</target>
        </trans-unit>
        <trans-unit id="1648dc02089c47796e5bcd2748b01e6309fbd929" translate="yes" xml:space="preserve">
          <source>'s file, then the following checks are made: If this object's file ends with &quot;/-&quot;, then</source>
          <target state="translated">파일이 다음과 같이 검사됩니다.이 객체의 파일이 &quot;/-&quot;로 끝나면</target>
        </trans-unit>
        <trans-unit id="f08409cc81cfadab742683290e95f8553efbe75a" translate="yes" xml:space="preserve">
          <source>'s host.</source>
          <target state="translated">님의 호스트</target>
        </trans-unit>
        <trans-unit id="c10a716a0c7e52d3f5a1d81fee27386e90683226" translate="yes" xml:space="preserve">
          <source>'s location must not be null.</source>
          <target state="translated">의 위치는 null이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="a3e3dd135c62f1b55469bc7df42cfecbf36af09d" translate="yes" xml:space="preserve">
          <source>'s location, then return true.</source>
          <target state="translated">의 위치에서 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="28fb0fca69ab9cb46b46b9485970049199d6775e" translate="yes" xml:space="preserve">
          <source>'s member always matches it.</source>
          <target state="translated">님의 멤버가 항상 일치합니다.</target>
        </trans-unit>
        <trans-unit id="435ea76b5884e8fbfb6e37fe174c2b74093ced2b" translate="yes" xml:space="preserve">
          <source>'s member matches this object's member; and</source>
          <target state="translated">의 멤버가이 개체의 멤버와 일치합니다. 과</target>
        </trans-unit>
        <trans-unit id="d7c3a2aa9ab94fd6c3577a4fb90b4abeadb465ad" translate="yes" xml:space="preserve">
          <source>'s name equals or (in the case of wildcards) is implied by this object's name. For example, &quot;a.b.*&quot; implies &quot;a.b.c&quot;.</source>
          <target state="translated">의 이름과 같거나 (와일드 카드의 경우)이 객체의 이름으로 암시됩니다. 예를 들어 &quot;ab *&quot;는 &quot;abc&quot;를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="3afcc92cb036a5cd0a969aa34ffbcd107aeafc89" translate="yes" xml:space="preserve">
          <source>'s name is equal to this &lt;code&gt;ServicePermission&lt;/code&gt;'s name or this &lt;code&gt;ServicePermission&lt;/code&gt;'s name is &quot;*&quot;.</source>
          <target state="translated">의 이름이 동일하다 &lt;code&gt;ServicePermission&lt;/code&gt; 의 이름 또는이 ' &lt;code&gt;ServicePermission&lt;/code&gt; 의 이름이 &quot;*&quot;이다.</target>
        </trans-unit>
        <trans-unit id="a2640fd39b81418baa809f6cce8a32b491d333db" translate="yes" xml:space="preserve">
          <source>'s name is implied by this object's name. For example, &quot;java.*&quot; implies &quot;java.home&quot;.</source>
          <target state="translated">의 이름은이 객체의 이름으로 암시됩니다. 예를 들어, &quot;java. *&quot;는 &quot;java.home&quot;을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="2ae18a6c282cdd1ed9c616d8c196ad0b6c2d3c89" translate="yes" xml:space="preserve">
          <source>'s object name matches this object's object name; and</source>
          <target state="translated">의 객체 이름이이 객체의 객체 이름과 일치합니다. 과</target>
        </trans-unit>
        <trans-unit id="dc9f010ad830e00de18b030c55b8134d500a01be" translate="yes" xml:space="preserve">
          <source>'s objectName</source>
          <target state="translated">의 objectName</target>
        </trans-unit>
        <trans-unit id="c525c3529afafe7192f4853bb5b696d0a52cba93" translate="yes" xml:space="preserve">
          <source>'s path name relative to its ancestor</source>
          <target state="translated">조상을 기준으로 한 경로 이름</target>
        </trans-unit>
        <trans-unit id="ee60b248b8c16a427c21f076ec439252a535c001" translate="yes" xml:space="preserve">
          <source>'s pathname is implied by this object's pathname. For example, &quot;/tmp/*&quot; implies &quot;/tmp/foo&quot;, since &quot;/tmp/*&quot; encompasses all files in the &quot;/tmp&quot; directory, including the one named &quot;foo&quot;.</source>
          <target state="translated">의 경로명은이 객체의 경로명으로 암시됩니다. 예를 들어, &quot;/ tmp / *&quot;는 &quot;/ tmp / *&quot;는 &quot;foo&quot;라는 파일을 포함하여 &quot;/ tmp&quot;디렉토리의 모든 파일을 포함하므로 &quot;/ tmp / foo&quot;를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f1e41caeb80ffee0ea6a88843cab3dbd1ca9c101" translate="yes" xml:space="preserve">
          <source>'s port or default port (codesource.getLocation().getDefaultPort()).</source>
          <target state="translated">의 포트 또는 기본 포트 (codesource.getLocation (). getDefaultPort ())</target>
        </trans-unit>
        <trans-unit id="33cd401be9efbf76ea63cee748044d46bd2a89d5" translate="yes" xml:space="preserve">
          <source>'s port range is included in this port range. Note: port range is ignored when p only contains the action, 'resolve'.</source>
          <target state="translated">포트 범위는이 포트 범위에 포함됩니다. 참고 : p에 'resolve'작업 만 포함 된 경우 포트 범위는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="9a6cf6f7f252f977c5efe480cdf8402053b56b00" translate="yes" xml:space="preserve">
          <source>'s protocol, ignoring case.</source>
          <target state="translated">의 경우를 무시하고의 프로토콜.</target>
        </trans-unit>
        <trans-unit id="236825797661ee71d3217df0214acd82dc92b7c1" translate="yes" xml:space="preserve">
          <source>'s reference.</source>
          <target state="translated">의 참조.</target>
        </trans-unit>
        <trans-unit id="996527b360d87aa5ae74f5f01f3f797b931bcae8" translate="yes" xml:space="preserve">
          <source>'s target names are a subset of this object's target names</source>
          <target state="translated">의 대상 이름은이 객체의 대상 이름의 하위 집합입니다</target>
        </trans-unit>
        <trans-unit id="88774f59e9e45d0c6486417abbbb26135675040e" translate="yes" xml:space="preserve">
          <source>'s type is directly or indirectly present on</source>
          <target state="translated">의 유형이 직간접 적으로 존재합니다</target>
        </trans-unit>
        <trans-unit id="8a10ec31cba0974fcc2e21861c693ba86ae5eefd" translate="yes" xml:space="preserve">
          <source>'s type is directly present on</source>
          <target state="translated">의 유형은</target>
        </trans-unit>
        <trans-unit id="4f0ba4fabdb8f9bf26b58c1c8a1a36349a397370" translate="yes" xml:space="preserve">
          <source>'s type is inheritable, and</source>
          <target state="translated">의 유형은 상속 가능하며</target>
        </trans-unit>
        <trans-unit id="7f5c0b638addaed5f32098fd9f76b7c9c95d514d" translate="yes" xml:space="preserve">
          <source>'s type is repeatable, and the attribute contains exactly one annotation whose value element contains</source>
          <target state="translated">의 유형은 반복 가능하며 속성에는 value 요소에 포함 된 주석이 정확히 하나만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="5876ebb60aeb5698f92671973c616d7824c28667" translate="yes" xml:space="preserve">
          <source>'s type.</source>
          <target state="translated">의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="e4622825b5a0b6e16f125783acb673f67e346150" translate="yes" xml:space="preserve">
          <source>'s:</source>
          <target state="translated">'s:</target>
        </trans-unit>
        <trans-unit id="28ed3a797da3c48c309a4ef792147f3c56cfec40" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>
        </trans-unit>
        <trans-unit id="6af4739d6c491133eccaed6c67db1156e03e17be" translate="yes" xml:space="preserve">
          <source>(0 &lt;code&gt;&amp;lt;=&lt;/code&gt;</source>
          <target state="translated">(0 &lt;code&gt;&amp;lt;=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e4eaa11499dfc4d34c7b7bd7c47db830dd8e1833" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;../../lang/character#MIN_CODE_POINT&quot;&gt;&lt;code&gt;Character.MIN_CODE_POINT&lt;/code&gt;&lt;/a&gt; &amp;lt;= &lt;code&gt;0x&lt;/code&gt;</source>
          <target state="translated">( &lt;a href=&quot;../../lang/character#MIN_CODE_POINT&quot;&gt; &lt;code&gt;Character.MIN_CODE_POINT&lt;/code&gt; &lt;/a&gt; &amp;lt;= &lt;code&gt;0x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e25241d822040f1bb7eb2ab4b0bc51440d5a2413" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;../byte&quot;&gt;&lt;code&gt;Byte&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../double&quot;&gt;&lt;code&gt;Double&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../long&quot;&gt;&lt;code&gt;Long&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../short&quot;&gt;&lt;code&gt;Short&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">( &lt;a href=&quot;../byte&quot;&gt; &lt;code&gt;Byte&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../double&quot;&gt; &lt;code&gt;Double&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../long&quot;&gt; &lt;code&gt;Long&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../short&quot;&gt; &lt;code&gt;Short&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d4c7fee73d6a4dbc3370316adc72fef51506c8d7" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;Deviation from RFC 2396&lt;/b&gt;, which does not specify any particular character set.)</source>
          <target state="translated">( 특정 문자 세트를 지정하지 않는 &lt;b&gt;RFC 2396의 편차&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="d27b9639f325e069053dd3b2e8b233590f6df858" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;Deviation from RFC 2396&lt;/b&gt;, which is limited to US-ASCII)</source>
          <target state="translated">( US-ASCII로 제한되는 &lt;b&gt;RFC 2396에서의 편차&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="93139a117512eeabf3e6e054b004af55f267ac8e" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;a href=&quot;certpathbuilder&quot;&gt;&lt;code&gt;CertPathBuilder&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;certpathbuilder&quot;&gt; &lt;code&gt;CertPathBuilder&lt;/code&gt; &lt;/a&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="2a7f223202201e2a21994a5106b14c6945c7c72d" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;a href=&quot;certpathbuilder&quot;&gt;&lt;code&gt;CertPathBuilder&lt;/code&gt;&lt;/a&gt; class. All &lt;code&gt;CertPathBuilder&lt;/code&gt; implementations must include a class (the SPI class) that extends this class (&lt;code&gt;CertPathBuilderSpi&lt;/code&gt;) and implements all of its methods. In general, instances of this class should only be accessed through the &lt;code&gt;CertPathBuilder&lt;/code&gt; class. For details, see the Java Cryptography Architecture.</source>
          <target state="translated">&lt;a href=&quot;certpathbuilder&quot;&gt; &lt;code&gt;CertPathBuilder&lt;/code&gt; &lt;/a&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; ) 모든 &lt;code&gt;CertPathBuilder&lt;/code&gt; 구현에는이 클래스 ( &lt;code&gt;CertPathBuilderSpi&lt;/code&gt; ) 를 확장 하고 모든 메소드를 구현 하는 클래스 (SPI 클래스)가 포함되어야합니다 . 일반적으로이 클래스의 인스턴스는 &lt;code&gt;CertPathBuilder&lt;/code&gt; 클래스 를 통해서만 액세스해야합니다 . 자세한 내용은 Java Cryptography Architecture를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="16782574679ae9ef4e7e1bf6fae0207c18a47131" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;a href=&quot;certpathvalidator&quot;&gt;&lt;code&gt;CertPathValidator&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;certpathvalidator&quot;&gt; &lt;code&gt;CertPathValidator&lt;/code&gt; &lt;/a&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="d29035f350a27a69448f2c8278e8226e2b58783c" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;a href=&quot;certpathvalidator&quot;&gt;&lt;code&gt;CertPathValidator&lt;/code&gt;&lt;/a&gt; class. All &lt;code&gt;CertPathValidator&lt;/code&gt; implementations must include a class (the SPI class) that extends this class (&lt;code&gt;CertPathValidatorSpi&lt;/code&gt;) and implements all of its methods. In general, instances of this class should only be accessed through the &lt;code&gt;CertPathValidator&lt;/code&gt; class. For details, see the Java Cryptography Architecture.</source>
          <target state="translated">&lt;a href=&quot;certpathvalidator&quot;&gt; &lt;code&gt;CertPathValidator&lt;/code&gt; &lt;/a&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; ) 모든 &lt;code&gt;CertPathValidator&lt;/code&gt; 구현에는이 클래스 ( &lt;code&gt;CertPathValidatorSpi&lt;/code&gt; ) 를 확장 하고 모든 메소드를 구현 하는 클래스 (SPI 클래스)가 포함되어야합니다 . 일반적으로이 클래스의 인스턴스는 &lt;code&gt;CertPathValidator&lt;/code&gt; 클래스 를 통해서만 액세스해야합니다 . 자세한 내용은 Java Cryptography Architecture를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="94b9683432a9eacab7afb0ce81ac17cdb7162e5a" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;a href=&quot;certstore&quot;&gt;&lt;code&gt;CertStore&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;certstore&quot;&gt; &lt;code&gt;CertStore&lt;/code&gt; &lt;/a&gt; 클래스의 경우 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="81fae03329c5cd08bdfd00a4f212c2d05191db40" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;a href=&quot;certstore&quot;&gt;&lt;code&gt;CertStore&lt;/code&gt;&lt;/a&gt; class. All &lt;code&gt;CertStore&lt;/code&gt; implementations must include a class (the SPI class) that extends this class (&lt;code&gt;CertStoreSpi&lt;/code&gt;), provides a constructor with a single argument of type &lt;code&gt;CertStoreParameters&lt;/code&gt;, and implements all of its methods. In general, instances of this class should only be accessed through the &lt;code&gt;CertStore&lt;/code&gt; class. For details, see the Java Cryptography Architecture.</source>
          <target state="translated">&lt;a href=&quot;certstore&quot;&gt; &lt;code&gt;CertStore&lt;/code&gt; &lt;/a&gt; 클래스의 경우 ( &lt;b&gt;SPI&lt;/b&gt; ) 모두 &lt;code&gt;CertStore&lt;/code&gt; 구현은이 클래스 (확장하는 클래스 (SPI 클래스)가 포함되어야합니다 &lt;code&gt;CertStoreSpi&lt;/code&gt; 에를 ) 형의 단일 인수 생성자 제공 &lt;code&gt;CertStoreParameters&lt;/code&gt; 라고를 , 그리고 모든 방법을 구현한다. 일반적으로이 클래스의 인스턴스는 &lt;code&gt;CertStore&lt;/code&gt; 클래스 를 통해서만 액세스해야합니다 . 자세한 내용은 Java Cryptography Architecture를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e15941f61462c1678f68292690e4d1746e752435" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;a href=&quot;securerandom&quot;&gt;&lt;code&gt;SecureRandom&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">( &lt;b&gt;SPI&lt;/b&gt; )는 &lt;a href=&quot;securerandom&quot;&gt; &lt;code&gt;SecureRandom&lt;/code&gt; &lt;/a&gt; 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="e7463bd202e5d9a5905b9196bf094a9dcc323c03" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; class, which is used to generate a set of parameters to be used with a certain algorithm.</source>
          <target state="translated">&lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; ) : 특정 알고리즘에 사용할 매개 변수 세트를 생성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6f1488ed7031a3018a0653d5a2abadca19055488" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;AlgorithmParameters&lt;/code&gt; class, which is used to manage algorithm parameters.</source>
          <target state="translated">알고리즘 매개 변수를 관리하는 데 사용되는 &lt;code&gt;AlgorithmParameters&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="5b2d732b50d961795d908b68d2e4032bcb146239" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;CertificateFactory&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;CertificateFactory&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="ba2d54bb7327170949a8c69fe2d6b76436e6ffb3" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;CertificateFactory&lt;/code&gt; class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a certificate factory for a particular certificate type, e.g., X.509.</source>
          <target state="translated">&lt;code&gt;CertificateFactory&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; ) 이 클래스의 모든 추상 메소드는 특정 인증서 유형 (예 : X.509)에 대한 인증서 팩토리 구현을 제공하려는 각 암호화 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="13e778b7b1306b7983b74a0c49756555c449331e" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;Cipher&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;Cipher&lt;/code&gt; 클래스의 경우 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="e5b4c49ee84e1063dd1a9064b56d8c126ff99483" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;Cipher&lt;/code&gt; class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a particular cipher algorithm.</source>
          <target state="translated">&lt;code&gt;Cipher&lt;/code&gt; 클래스의 경우 ( &lt;b&gt;SPI&lt;/b&gt; ) 이 클래스의 모든 추상 메소드는 특정 암호 알고리즘의 구현을 제공하려는 각 암호화 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="791a86a660a1274800e091013f82a20d1854a89b" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;Configuration&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;Configuration&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="11abe06484e41b00b84dcda799919084b4d03e7a" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;Configuration&lt;/code&gt; class. All the abstract methods in this class must be implemented by each service provider who wishes to supply a Configuration implementation.</source>
          <target state="translated">&lt;code&gt;Configuration&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; ) 이 클래스의 모든 추상 메소드는 구성 구현을 제공하려는 각 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="660f3b423665a7494ce3d0df5f7948730a828c98" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;ExemptionMechanism&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;ExemptionMechanism&lt;/code&gt; 클래스의 경우 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="5d0dce1f10feb8e9c438e8d01aee45c573595c32" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;ExemptionMechanism&lt;/code&gt; class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a particular exemption mechanism.</source>
          <target state="translated">&lt;code&gt;ExemptionMechanism&lt;/code&gt; 클래스의 경우 ( &lt;b&gt;SPI&lt;/b&gt; ) 이 클래스의 모든 추상 메소드는 특정 면제 메커니즘의 구현을 제공하려는 각 암호화 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="5b1a2927f98c34fa0a5f1e59cfe666817ec533d0" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;KeyAgreement&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;KeyAgreement&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="41aad1cbb0581217593ba0e3218e821ad4357e81" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;KeyAgreement&lt;/code&gt; class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a particular key agreement algorithm.</source>
          <target state="translated">&lt;code&gt;KeyAgreement&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; ) 이 클래스의 모든 추상 메소드는 특정 키 계약 알고리즘의 구현을 제공하려는 각 암호화 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="d8d70b7e76e9039d77abb19823df709614d9c30c" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;KeyFactory&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;KeyFactory&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="5128db4e345ed95c7729081cfb948644f21ae111" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;KeyFactory&lt;/code&gt; class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a key factory for a particular algorithm.</source>
          <target state="translated">&lt;code&gt;KeyFactory&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; ) 이 클래스의 모든 추상 메소드는 특정 알고리즘의 키 팩토리 구현을 제공하려는 각 암호화 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="8875b68f7517591a982e13372259d9376b13ec10" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;KeyGenerator&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;KeyGenerator&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="2ee82b210730deef59520a26c83cb570acdf7516" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;KeyGenerator&lt;/code&gt; class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a key generator for a particular algorithm.</source>
          <target state="translated">&lt;code&gt;KeyGenerator&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; ) 이 클래스의 모든 추상 메소드는 특정 알고리즘에 대한 키 생성기의 구현을 제공하려는 각 암호화 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="cb18cbea92bbb9ca80237baf5f83d1d02903fbeb" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;KeyManagerFactory&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;KeyManagerFactory&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="b3ab515733b606d6ab4227ef20cc24882a8674d4" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;KeyPairGenerator&lt;/code&gt; class, which is used to generate pairs of public and private keys.</source>
          <target state="translated">공개 및 개인 키 쌍을 생성하는 데 사용되는 &lt;code&gt;KeyPairGenerator&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="87f9b7bdf85bfefa7ff52806efa091dc762de2b4" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;KeyStore&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;KeyStore&lt;/code&gt; 클래스의 경우 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="5f4a2b14ce9c53cf734f6cd9cc07cd9c1527d984" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;KeyStore&lt;/code&gt; class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a keystore for a particular keystore type.</source>
          <target state="translated">&lt;code&gt;KeyStore&lt;/code&gt; 클래스의 경우 ( &lt;b&gt;SPI&lt;/b&gt; ) 이 클래스의 모든 추상 메소드는 특정 키 저장소 유형에 대한 키 저장소 구현을 제공하려는 각 암호화 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="1f786b76b040d3b1a44cbd5161ebd051ff1c4045" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;Mac&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;Mac&lt;/code&gt; 클래스의 경우 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="27cca2ee743e9946a6b1ac0c9ff54778070d731e" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;Mac&lt;/code&gt; class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a particular MAC algorithm.</source>
          <target state="translated">&lt;code&gt;Mac&lt;/code&gt; 클래스의 경우 ( &lt;b&gt;SPI&lt;/b&gt; ) 이 클래스의 모든 추상 메소드는 특정 MAC 알고리즘의 구현을 제공하려는 각 암호화 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="c19766b393cf2855c654cfa16bde6a96148e2390" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;MessageDigest&lt;/code&gt; class, which provides the functionality of a message digest algorithm, such as MD5 or SHA.</source>
          <target state="translated">MD5 또는 SHA와 같은 메시지 요약 알고리즘의 기능을 제공 하는 &lt;code&gt;MessageDigest&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="6aded57b15a45d9c828859018501b38b289ab155" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;MessageDigest&lt;/code&gt; class, which provides the functionality of a message digest algorithm, such as MD5 or SHA. Message digests are secure one-way hash functions that take arbitrary-sized data and output a fixed-length hash value.</source>
          <target state="translated">MD5 또는 SHA와 같은 메시지 요약 알고리즘의 기능을 제공 하는 &lt;code&gt;MessageDigest&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; ) 메시지 요약은 임의 크기의 데이터를 가져와 고정 길이 해시 값을 출력하는 안전한 단방향 해시 함수입니다.</target>
        </trans-unit>
        <trans-unit id="d1dc91c9b26ff1b0b323c23e1a96e674106c37ce" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;Policy&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;Policy&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="a020e24593ae74c46ecbdf3cd987a2f62dd6de17" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;Policy&lt;/code&gt; class. All the abstract methods in this class must be implemented by each service provider who wishes to supply a Policy implementation.</source>
          <target state="translated">&lt;code&gt;Policy&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; ) 이 클래스의 모든 추상 메소드는 정책 구현을 제공하려는 각 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="93b425b7f63b23fa905a821929c279f1f1280ca5" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;SSLContext&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;SSLContext&lt;/code&gt; 클래스의 경우 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="18db1134ba8dec11cc91204d87c1f0b32f8d0f66" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;SecretKeyFactory&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;SecretKeyFactory&lt;/code&gt; 클래스의 경우 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="6d38eace84cc3e6ddec36d734622671bba4b3d1f" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;SecretKeyFactory&lt;/code&gt; class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a secret-key factory for a particular algorithm.</source>
          <target state="translated">&lt;code&gt;SecretKeyFactory&lt;/code&gt; 클래스의 경우 ( &lt;b&gt;SPI&lt;/b&gt; ) 이 클래스의 모든 추상 메소드는 특정 알고리즘에 대한 비밀 키 팩토리의 구현을 제공하려는 각 암호화 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="a318753c0cf71b7ad6f0d9791a5bd20de0a65a59" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;SecureRandom&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;SecureRandom&lt;/code&gt; 클래스의 경우 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="059b775a7fb9a0587f6638e356f41bdce212ae04" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;SecureRandom&lt;/code&gt; class. All the abstract methods in this class must be implemented by each service provider who wishes to supply the implementation of a cryptographically strong pseudo-random number generator.</source>
          <target state="translated">&lt;code&gt;SecureRandom&lt;/code&gt; 클래스의 경우 ( &lt;b&gt;SPI&lt;/b&gt; ) 이 클래스의 모든 추상 메소드는 암호화 적으로 강력한 의사 난수 생성기의 구현을 제공하려는 각 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="3d52856f050de83680565c29f037cca997254a56" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;Signature&lt;/code&gt; class, which is used to provide the functionality of a digital signature algorithm.</source>
          <target state="translated">&lt;code&gt;Signature&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; ) 는 디지털 서명 알고리즘의 기능을 제공하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="12b3417e9203bcb803c131da54186f860ad940f7" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;Signature&lt;/code&gt; class, which is used to provide the functionality of a digital signature algorithm. Digital signatures are used for authentication and integrity assurance of digital data.</source>
          <target state="translated">( &lt;b&gt;SPI&lt;/b&gt; )- 디지털 서명 알고리즘의 기능을 제공하는 데 사용되는 &lt;code&gt;Signature&lt;/code&gt; 클래스. 디지털 서명은 디지털 데이터의 인증 및 무결성 보장에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="178746d22de89526d7b2c2291b4192b97ce261ef" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;Signature&lt;/code&gt; class, which is used to provide the functionality of a digital signature algorithm. Digital signatures are used for authentication and integrity assurance of digital data. .</source>
          <target state="translated">&lt;code&gt;Signature&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; ) 는 디지털 서명 알고리즘의 기능을 제공하는 데 사용됩니다. 디지털 서명은 디지털 데이터의 인증 및 무결성 보증에 사용됩니다. .</target>
        </trans-unit>
        <trans-unit id="4e0528d7d924f69d195473d50260b0a9cdcee390" translate="yes" xml:space="preserve">
          <source>(&lt;b&gt;SPI&lt;/b&gt;) for the &lt;code&gt;TrustManagerFactory&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;TrustManagerFactory&lt;/code&gt; 클래스 의 ( &lt;b&gt;SPI&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="ff2e37cb3f121e8afe9542f06e90828d21392e94" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;String&lt;/code&gt;, &lt;code&gt;String[]&lt;/code&gt;, &lt;code&gt;int[]&lt;/code&gt;, etc)</source>
          <target state="translated">( &lt;code&gt;String&lt;/code&gt; , &lt;code&gt;String[]&lt;/code&gt; , &lt;code&gt;int[]&lt;/code&gt; 등)</target>
        </trans-unit>
        <trans-unit id="b8a3a6ae686eded71f1cb3ba5d0d9d490a38d009" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;nextDouble&lt;/code&gt; can be used to get the next higher double, to make the half-open interval.)</source>
          <target state="translated">( &lt;code&gt;nextDouble&lt;/code&gt; 은 하프 오픈 간격을 만들기 위해 다음 더 높은 더블을 얻는 데 사용할 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="aebf4391b9736bb75843aa4e8d43148aaa15627e" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;static&lt;/code&gt;)?</source>
          <target state="translated">(&lt;code&gt;static&lt;/code&gt;)?</target>
        </trans-unit>
        <trans-unit id="2cea1a6e4b59c6470e1ed0aa078779eeb6f52f09" translate="yes" xml:space="preserve">
          <source>(&lt;em&gt;Note:&lt;/em&gt; Because method handles are immutable, the target method handle retains its original type and behavior.)</source>
          <target state="translated">( &lt;em&gt;참고 :&lt;/em&gt; 메소드 핸들은 변경할 수 없으므로 대상 메소드 핸들은 원래 유형과 동작을 유지합니다.)</target>
        </trans-unit>
        <trans-unit id="c947bd1f21a081d11ecfcba3db31a8042eed6e79" translate="yes" xml:space="preserve">
          <source>(&lt;em&gt;Note:&lt;/em&gt; Both &lt;em&gt;T0&lt;/em&gt; and &lt;em&gt;T1&lt;/em&gt; may be regarded as static types, because neither corresponds specifically to the &lt;em&gt;dynamic type&lt;/em&gt; of any actual argument or return value.)</source>
          <target state="translated">( &lt;em&gt;참고 :&lt;/em&gt; 실제 인수 또는 반환 값 의 &lt;em&gt;동적 유형&lt;/em&gt; 에 해당하지 않기 때문에 &lt;em&gt;T0&lt;/em&gt; 및 &lt;em&gt;T1&lt;/em&gt; 은 모두 정적 유형으로 간주 될 수 있습니다 .)&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="df76bc93198d4cf2b5601bb31b6dd0b6e6e01a30" translate="yes" xml:space="preserve">
          <source>(&lt;em&gt;Note:&lt;/em&gt; Future releases of this API may add further information to the string representation. Therefore, the present syntax should not be parsed by applications.)</source>
          <target state="translated">( &lt;em&gt;참고 :&lt;/em&gt; 이 API의 이후 릴리스에서는 문자열 표현에 추가 정보가 추가 될 수 있으므로 현재 구문을 응용 프로그램에서 구문 분석하지 않아야합니다.)</target>
        </trans-unit>
        <trans-unit id="cc5e0acf2f221239773f68f611335e5f86cadc3b" translate="yes" xml:space="preserve">
          <source>(&lt;em&gt;Note:&lt;/em&gt; The &lt;code&gt;arrayType&lt;/code&gt; is often identical to the &lt;a href=&quot;methodtype#lastParameterType()&quot;&gt;last parameter type&lt;/a&gt; of the original target. It is an explicit argument for symmetry with &lt;code&gt;asSpreader&lt;/code&gt;, and also to allow the target to use a simple &lt;code&gt;Object&lt;/code&gt; as its last parameter type.)</source>
          <target state="translated">( &lt;em&gt;참고 : &lt;/em&gt; &lt;code&gt;arrayType&lt;/code&gt; 은 종종 동일 &lt;a href=&quot;methodtype#lastParameterType()&quot;&gt;마지막 매개 변수 유형&lt;/a&gt; 원래 목표의 그것과 대칭에 대한 명시 적 인수입니다. &lt;code&gt;asSpreader&lt;/code&gt; , 또한 대상이 간단한 사용할 수 있도록 &lt;code&gt;Object&lt;/code&gt; 의 마지막 매개 변수 유형으로.)</target>
        </trans-unit>
        <trans-unit id="479da911e8a71e66004e0ff7dffba263957728b3" translate="yes" xml:space="preserve">
          <source>(&lt;em&gt;Note:&lt;/em&gt; The &lt;code&gt;arrayType&lt;/code&gt; is often identical to the last parameter type of the original target. It is an explicit argument for symmetry with &lt;code&gt;asSpreader&lt;/code&gt;, and also to allow the target to use a simple &lt;code&gt;Object&lt;/code&gt; as its last parameter type.)</source>
          <target state="translated">( &lt;em&gt;참고 : &lt;/em&gt; &lt;code&gt;arrayType&lt;/code&gt; 은 종종 원래 목표의 마지막 매개 변수 유형과 동일 그것과 대칭에 대한 명시 적 인수입니다. &lt;code&gt;asSpreader&lt;/code&gt; , 또한 대상이 간단한 사용할 수 있도록 &lt;code&gt;Object&lt;/code&gt; 의 마지막 매개 변수 유형으로.)</target>
        </trans-unit>
        <trans-unit id="a53f202d6791eb092e9cb72934c778fddeffc714" translate="yes" xml:space="preserve">
          <source>(&lt;em&gt;Note:&lt;/em&gt; The adjusted method handle &lt;code&gt;M2&lt;/code&gt; is not directly observable, and implementations are therefore not required to materialize it.)</source>
          <target state="translated">( &lt;em&gt;참고 :&lt;/em&gt; 조정 된 메소드 핸들 &lt;code&gt;M2&lt;/code&gt; 는 직접 관찰 할 수 없으므로 구현할 필요가 없습니다.)</target>
        </trans-unit>
        <trans-unit id="bcef8b48f271dd243960d43e242b7f54ecd31afd" translate="yes" xml:space="preserve">
          <source>(A Mersenne prime is prime number of the form 2&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt; - 1.) Given an &lt;code&gt;AnnotationMirror&lt;/code&gt; for this annotation type, a list of all such primes in the &lt;code&gt;int&lt;/code&gt; range could be returned without examining any other arguments to &lt;code&gt;getCompletions&lt;/code&gt;:</source>
          <target state="translated">(Mersenne 소수는 2 &lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt; -1 형식의 소수입니다 .) 이 주석 형에 &lt;code&gt;AnnotationMirror&lt;/code&gt; 가 주어진 경우 , &lt;code&gt;int&lt;/code&gt; 범위 내의 모든 소수의리스트는 &lt;code&gt;getCompletions&lt;/code&gt; 에 대한 다른 인수를 조사하지 않고 리턴 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fa6855e1c3d71e2753df3d0abeea14ceb702093b" translate="yes" xml:space="preserve">
          <source>(Addison-Wesley, 1986).</source>
          <target state="translated">(애디슨-웨슬리, 1986).</target>
        </trans-unit>
        <trans-unit id="c658334a0c4a9ae58141007422e26a4d25efca07" translate="yes" xml:space="preserve">
          <source>(CRT) information values.</source>
          <target state="translated">(CRT) 정보 값.</target>
        </trans-unit>
        <trans-unit id="94426da9ae679173d5c4c68a7d26cf88c959f962" translate="yes" xml:space="preserve">
          <source>(Does not return)</source>
          <target state="translated">(돌아 오지 않음)</target>
        </trans-unit>
        <trans-unit id="ca9c467b8fd5b21ee0663beaa0447c555d4193e7" translate="yes" xml:space="preserve">
          <source>(EDT) for all GUI-related activities. This involves inter-thread communication which can be tricky to implement.</source>
          <target state="translated">(EDT) 모든 GUI 관련 활동. 여기에는 구현하기 까다로울 수있는 스레드 간 통신이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="09c39d203954f05125aa027cfe84194be992dbe8" translate="yes" xml:space="preserve">
          <source>(For more information on this topic, see Section 3.2.3 in Doug Lea's &quot;Concurrent Programming in Java (Second Edition)&quot; (Addison-Wesley, 2000), or Item 50 in Joshua Bloch's &quot;Effective Java Programming Language Guide&quot; (Addison-Wesley, 2001).</source>
          <target state="translated">(이 주제에 대한 자세한 내용은 Doug Lea의 &quot;Java에서의 동시 프로그래밍 (제 2 판)&quot;(Addison-Wesley, 2000)의 3.2.3 절 또는 Joshua Bloch의 &quot;Effective Java Programming Language Guide&quot;(Addison- 웨슬리, 2001).</target>
        </trans-unit>
        <trans-unit id="a8959ca18ae2bc7f5c4764a12c72ca0472377c3b" translate="yes" xml:space="preserve">
          <source>(Here's why this works: Any reordering the packer does of any classfile structures is idempotent, so the second packing does not change the orderings produced by the first packing. Also, the unpacker is guaranteed by the JSR 200 specification to produce a specific bytewise image for any given transmission ordering of archive elements.)</source>
          <target state="translated">(이것이 작동하는 이유 : 클래스 파일 구조의 패커 순서를 바꾸는 것은 dem 등하므로 두 번째 패킹은 첫 번째 패킹에서 생성 된 순서를 변경하지 않습니다. 또한 JSR 200 스펙에 의해 언 패커는 특정 바이트 단위 이미지를 생성하도록 보장됩니다 아카이브 요소의 전송 순서를 지정합니다.)</target>
        </trans-unit>
        <trans-unit id="52f1efa4683ae2931f5c107b64fed1307d716c64" translate="yes" xml:space="preserve">
          <source>(Here, the square brackets &lt;code&gt;[]&lt;/code&gt; are not part of the address but indicate that the host and port are optional.)</source>
          <target state="translated">(여기에서 대괄호 &lt;code&gt;[]&lt;/code&gt; 는 주소의 일부가 아니지만 호스트와 포트가 선택 사항임을 나타냅니다.)</target>
        </trans-unit>
        <trans-unit id="8bd696039f9a733ead0c27d50388f58845fa94c7" translate="yes" xml:space="preserve">
          <source>(IV).</source>
          <target state="translated">(IV).</target>
        </trans-unit>
        <trans-unit id="3c56ce3d8497c447c59f4d545396b5e7f7175316" translate="yes" xml:space="preserve">
          <source>(IV). Examples which use IVs are ciphers in feedback mode, e.g., DES in CBC mode and RSA ciphers with OAEP encoding operation.</source>
          <target state="translated">(IV). IV를 사용하는 예는 피드백 모드의 암호, 예를 들어 CBC 모드의 DES 및 OAEP 인코딩 작업이있는 RSA 암호입니다.</target>
        </trans-unit>
        <trans-unit id="4cac5aaee2d35ab19f4e7a2785e72a42fa795b94" translate="yes" xml:space="preserve">
          <source>(In the context of an &lt;code&gt;SSLEngine&lt;/code&gt;, the term &quot;handshake data&quot; is taken to mean any data exchanged to establish and control a secure connection. Handshake data includes the SSL/TLS messages &quot;alert&quot;, &quot;change_cipher_spec,&quot; and &quot;handshake.&quot;)</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 의 맥락에서 &quot;핸드 셰이크 데이터&quot;라는 용어는 보안 연결을 설정하고 제어하기 위해 교환되는 모든 데이터를 의미합니다. 핸드 셰이크 데이터에는 SSL / TLS 메시지 &quot;경고&quot;, &quot;change_cipher_spec&quot;및 &quot;핸드 셰이크&quot;가 포함됩니다. )</target>
        </trans-unit>
        <trans-unit id="cb06e25064ca2782953ca3a7f5fb3f83703189f4" translate="yes" xml:space="preserve">
          <source>(In the context of an &lt;code&gt;SSLEngine&lt;/code&gt;, the term &quot;handshake data&quot; is taken to mean any data exchanged to establish and control a secure connection. Handshake data includes the SSL/TLS/DTLS messages &quot;alert&quot;, &quot;change_cipher_spec,&quot; and &quot;handshake.&quot;)</source>
          <target state="translated">( &lt;code&gt;SSLEngine&lt;/code&gt; 의 맥락에서 &quot;핸드 셰이크 데이터&quot;라는 용어는 보안 연결을 설정하고 제어하기 위해 교환되는 모든 데이터를 의미합니다. 핸드 셰이크 데이터에는 SSL / TLS / DTLS 메시지 &quot;경고&quot;, &quot;change_cipher_spec&quot;및 &quot;핸드 셰이크&quot;가 포함됩니다. . &quot;)</target>
        </trans-unit>
        <trans-unit id="a09d5fbebb0e630ffa1e0baaf5f5d87b2efc3c6c" translate="yes" xml:space="preserve">
          <source>(In the foregoing descriptions, a floating-point value is considered to be an integer if and only if it is finite and a fixed point of the method &lt;a href=&quot;#ceil(double)&quot;&gt;&lt;code&gt;ceil&lt;/code&gt;&lt;/a&gt; or, equivalently, a fixed point of the method &lt;a href=&quot;#floor(double)&quot;&gt;&lt;code&gt;floor&lt;/code&gt;&lt;/a&gt;. A value is a fixed point of a one-argument method if and only if the result of applying the method to the value is equal to the value.)</source>
          <target state="translated">(앞의 설명에서 부동 소수점 값은 유한하고 메서드 &lt;a href=&quot;#ceil(double)&quot;&gt; &lt;code&gt;ceil&lt;/code&gt; &lt;/a&gt; 의 고정 소수점 또는 동등하게 방법 &lt;a href=&quot;#floor(double)&quot;&gt; &lt;code&gt;floor&lt;/code&gt; &lt;/a&gt; 의 고정 소수점 인 경우에만 정수로 간주됩니다 . 값은 고정 소수점입니다. 값에 메서드를 적용한 결과가 값과 같은 경우에만 단일 인수 메서드의.)</target>
        </trans-unit>
        <trans-unit id="ac22cd86d9103571d0bc7a9a36a6f3b44ae94f5f" translate="yes" xml:space="preserve">
          <source>(In the foregoing descriptions, a floating-point value is considered to be an integer if and only if it is finite and a fixed point of the method &lt;a href=&quot;math#ceil-double-&quot;&gt;&lt;code&gt;ceil&lt;/code&gt;&lt;/a&gt; or, equivalently, a fixed point of the method &lt;a href=&quot;math#floor-double-&quot;&gt;&lt;code&gt;floor&lt;/code&gt;&lt;/a&gt;. A value is a fixed point of a one-argument method if and only if the result of applying the method to the value is equal to the value.)</source>
          <target state="translated">(상기 설명에서, 부동 소수점 값이 유한하고 방법의 정점 경우만 및 정수로 간주 &lt;a href=&quot;math#ceil-double-&quot;&gt; &lt;code&gt;ceil&lt;/code&gt; &lt;/a&gt; 등가, 상기 방법은 고정 점 또는 &lt;a href=&quot;math#floor-double-&quot;&gt; &lt;code&gt;floor&lt;/code&gt; &lt;/a&gt; . 값은 고정 점이며 방법을 값에 적용한 결과가 값과 동일한 경우에만 1 인수 방법</target>
        </trans-unit>
        <trans-unit id="2ed9ebe57d3558a753fcef99ee394d1a1c4d6884" translate="yes" xml:space="preserve">
          <source>(In the foregoing descriptions, a floating-point value is considered to be an integer if and only if it is finite and a fixed point of the method &lt;a href=&quot;strictmath#ceil-double-&quot;&gt;&lt;code&gt;ceil&lt;/code&gt;&lt;/a&gt; or, equivalently, a fixed point of the method &lt;a href=&quot;strictmath#floor-double-&quot;&gt;&lt;code&gt;floor&lt;/code&gt;&lt;/a&gt;. A value is a fixed point of a one-argument method if and only if the result of applying the method to the value is equal to the value.)</source>
          <target state="translated">(상기 설명에서, 부동 소수점 값이 유한하고 방법의 정점 경우만 및 정수로 간주 &lt;a href=&quot;strictmath#ceil-double-&quot;&gt; &lt;code&gt;ceil&lt;/code&gt; &lt;/a&gt; 등가, 상기 방법은 고정 점 또는 &lt;a href=&quot;strictmath#floor-double-&quot;&gt; &lt;code&gt;floor&lt;/code&gt; &lt;/a&gt; . 값은 고정 점이며 방법을 값에 적용한 결과가 값과 동일한 경우에만 1 인수 방법</target>
        </trans-unit>
        <trans-unit id="a2d97221d721bb54a831355b15a25513df2bcf0d" translate="yes" xml:space="preserve">
          <source>(In the header, the two-letter abbreviation represents the item direction in the first letter, and the line direction in the second. For example, LT means &quot;items left-to-right, lines top-to-bottom&quot;, TL means &quot;items top-to-bottom, lines left-to-right&quot;, and so on.)</source>
          <target state="translated">(헤더에서 두 글자로 된 약어는 첫 번째 글자의 항목 방향을 나타내고 두 번째 글자의 줄 방향을 나타냅니다. 예를 들어 LT는 &quot;항목 왼쪽에서 오른쪽, 줄 위에서 아래로&quot;를 의미하고 TL은 &quot;위에서 아래로 항목, 왼쪽에서 오른쪽으로 행&quot;등)</target>
        </trans-unit>
        <trans-unit id="33a32d78da36b745da88f9f86f3debdd51ae08f1" translate="yes" xml:space="preserve">
          <source>(It may seem strange that protected access should be stronger than private access. Viewed independently from package access, protected access is the first to be lost, because it requires a direct subclass relationship between caller and callee.)</source>
          <target state="translated">(보호 된 액세스는 개인 액세스보다 강력해야한다는 것이 이상하게 보일 수 있습니다. 패키지 액세스와 독립적으로 볼 때 보호 된 액세스는 발신자와 수신자 사이의 직접적인 하위 클래스 관계를 필요로하기 때문에 가장 먼저 손실됩니다.)</target>
        </trans-unit>
        <trans-unit id="a3965e34ed337d39d5138ba15bd22c344e222b68" translate="yes" xml:space="preserve">
          <source>(Method &lt;a href=&quot;#merge(K,V,java.util.function.BiFunction)&quot;&gt;&lt;code&gt;merge()&lt;/code&gt;&lt;/a&gt; is often simpler to use for such purposes.)</source>
          <target state="translated">(메소드 &lt;a href=&quot;#merge(K,V,java.util.function.BiFunction)&quot;&gt; &lt;code&gt;merge()&lt;/code&gt; &lt;/a&gt; 는 종종 이러한 목적으로 사용하는 것이 더 간단합니다.)</target>
        </trans-unit>
        <trans-unit id="a0b42a7a41e49ede720a3ed9ff321dca02a083f9" translate="yes" xml:space="preserve">
          <source>(Method &lt;a href=&quot;../map#merge(K,V,java.util.function.BiFunction)&quot;&gt;&lt;code&gt;merge()&lt;/code&gt;&lt;/a&gt; is often simpler to use for such purposes.)</source>
          <target state="translated">(메소드 &lt;a href=&quot;../map#merge(K,V,java.util.function.BiFunction)&quot;&gt; &lt;code&gt;merge()&lt;/code&gt; &lt;/a&gt; 는 종종 이러한 목적으로 사용하는 것이 더 간단합니다.)</target>
        </trans-unit>
        <trans-unit id="cb79afb23eaee39725b668a91f069f5b001b6311" translate="yes" xml:space="preserve">
          <source>(Method &lt;a href=&quot;../map#merge-K-V-java.util.function.BiFunction-&quot;&gt;&lt;code&gt;merge()&lt;/code&gt;&lt;/a&gt; is often simpler to use for such purposes.)</source>
          <target state="translated">(메소드 &lt;a href=&quot;../map#merge-K-V-java.util.function.BiFunction-&quot;&gt; &lt;code&gt;merge()&lt;/code&gt; &lt;/a&gt; 는 종종 그러한 목적으로 사용하는 것이 더 간단합니다.)</target>
        </trans-unit>
        <trans-unit id="cdeccbabe205f55ddeae2d6f49e99fc0a4372efc" translate="yes" xml:space="preserve">
          <source>(Method &lt;a href=&quot;map#merge(K,V,java.util.function.BiFunction)&quot;&gt;&lt;code&gt;merge()&lt;/code&gt;&lt;/a&gt; is often simpler to use for such purposes.)</source>
          <target state="translated">(메소드 &lt;a href=&quot;map#merge(K,V,java.util.function.BiFunction)&quot;&gt; &lt;code&gt;merge()&lt;/code&gt; &lt;/a&gt; 는 종종 이러한 목적으로 사용하는 것이 더 간단합니다.)</target>
        </trans-unit>
        <trans-unit id="60e2a9dbd5995d8d19d639701ff6382d872eb462" translate="yes" xml:space="preserve">
          <source>(Method &lt;a href=&quot;map#merge-K-V-java.util.function.BiFunction-&quot;&gt;&lt;code&gt;merge()&lt;/code&gt;&lt;/a&gt; is often simpler to use for such purposes.)</source>
          <target state="translated">(메소드 &lt;a href=&quot;map#merge-K-V-java.util.function.BiFunction-&quot;&gt; &lt;code&gt;merge()&lt;/code&gt; &lt;/a&gt; 는 종종 그러한 목적으로 사용하는 것이 더 간단합니다.)</target>
        </trans-unit>
        <trans-unit id="a1e5ad5fc005b5186d91be585a1c0edd4fb06b85" translate="yes" xml:space="preserve">
          <source>(Note that 0x01 divided by 0x01 gives you 1.0, which is equivalent to the value 0xff in an 8-bit storage format.)</source>
          <target state="translated">(0x01을 0x01로 나눈 값은 1.0을 제공하며 이는 8 비트 저장 형식의 0xff 값과 동일합니다.)</target>
        </trans-unit>
        <trans-unit id="78d82c5c812f8708792da0e21335ddd583bcc019" translate="yes" xml:space="preserve">
          <source>(Note that &lt;a href=&quot;#dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)&quot;&gt;&lt;code&gt;dropArguments&lt;/code&gt;&lt;/a&gt; can be used to remove any arguments that either the combiner or the target does not wish to receive. If some of the incoming arguments are destined only for the combiner, consider using &lt;a href=&quot;methodhandle#asCollector(java.lang.Class,int)&quot;&gt;&lt;code&gt;asCollector&lt;/code&gt;&lt;/a&gt; instead, since those arguments will not need to be live on the stack on entry to the target.)</source>
          <target state="translated">( &lt;a href=&quot;#dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)&quot;&gt; &lt;code&gt;dropArguments&lt;/code&gt; &lt;/a&gt; 는 결합기 또는 대상이 수신하지 않으려는 인수를 제거하는 데 사용할 수 있습니다. 들어오는 인수 중 일부가 결합기 전용 인 경우 &lt;a href=&quot;methodhandle#asCollector(java.lang.Class,int)&quot;&gt; &lt;code&gt;asCollector&lt;/code&gt; 를&lt;/a&gt; 대신 사용하는 것이 좋습니다. 표적에 대한 진입시 스택에 살고 있습니다.)</target>
        </trans-unit>
        <trans-unit id="90f37137748b4cd55d0e384493293061c9f7c796" translate="yes" xml:space="preserve">
          <source>(Note that &lt;a href=&quot;methodhandles#dropArguments-java.lang.invoke.MethodHandle-int-java.util.List-&quot;&gt;&lt;code&gt;dropArguments&lt;/code&gt;&lt;/a&gt; can be used to remove any arguments that either the combiner or the target does not wish to receive. If some of the incoming arguments are destined only for the combiner, consider using &lt;a href=&quot;methodhandle#asCollector-java.lang.Class-int-&quot;&gt;&lt;code&gt;asCollector&lt;/code&gt;&lt;/a&gt; instead, since those arguments will not need to be live on the stack on entry to the target.)</source>
          <target state="translated">( &lt;a href=&quot;methodhandles#dropArguments-java.lang.invoke.MethodHandle-int-java.util.List-&quot;&gt; &lt;code&gt;dropArguments&lt;/code&gt; &lt;/a&gt; 는 컴 바이 너나 대상이받지 않으려는 인수를 제거하는 데 사용할 수 있습니다. 들어오는 인수 중 일부가 컴 바이 너 전용 인 경우 대신 &lt;a href=&quot;methodhandle#asCollector-java.lang.Class-int-&quot;&gt; &lt;code&gt;asCollector&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 좋습니다. 대상에 진입 할 때 스택에 삽니다.)</target>
        </trans-unit>
        <trans-unit id="8e9c6c7433c811ec031d397a34b91605e25ca52b" translate="yes" xml:space="preserve">
          <source>(Note that an initial context factory (an object that implements the InitialContextFactory interface) must be public and must have a public constructor that accepts no arguments. In cases where the factory is in a named module then it must be in a package which is exported by that module to the &lt;code&gt;java.naming&lt;/code&gt; module.)</source>
          <target state="translated">(초기 컨텍스트 팩토리 (InitialContextFactory 인터페이스를 구현하는 객체)는 공용이어야하며 인수를 허용하지 않는 공용 생성자가 있어야합니다. 팩토리가 명명 된 모듈에있는 경우 내보내는 패키지에 있어야합니다. 해당 모듈에서 &lt;code&gt;java.naming&lt;/code&gt; 모듈로.)</target>
        </trans-unit>
        <trans-unit id="da94356a9d4b0d684c828921728ad8fb8a0d7e1d" translate="yes" xml:space="preserve">
          <source>(Note that regardless of this switch, namespace bindings are always notified to applications through &lt;a href=&quot;../../../org/xml/sax/contenthandler#startPrefixMapping(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;ContentHandler.startPrefixMapping(String,String)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../org/xml/sax/contenthandler#endPrefixMapping(java.lang.String)&quot;&gt;&lt;code&gt;ContentHandler.endPrefixMapping(String)&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; specified by the user.)</source>
          <target state="translated">(에 관계없이이 스위치의 네임 스페이스 바인딩은 항상을 통해 응용 프로그램에 통지 참고 &lt;a href=&quot;../../../org/xml/sax/contenthandler#startPrefixMapping(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;ContentHandler.startPrefixMapping(String,String)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../../org/xml/sax/contenthandler#endPrefixMapping(java.lang.String)&quot;&gt; &lt;code&gt;ContentHandler.endPrefixMapping(String)&lt;/code&gt; &lt;/a&gt; 의 방법 &lt;a href=&quot;../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt; 사용자가 지정한.)</target>
        </trans-unit>
        <trans-unit id="34af7c0137a71938d607180307638537d790d374" translate="yes" xml:space="preserve">
          <source>(Note that the JDBC 2.1 core API and the JDBC 2.0 Optional Package API together are referred to as the JDBC 2.0 API.)</source>
          <target state="translated">(JDBC 2.1 코어 API와 JDBC 2.0 선택적 패키지 API를 함께 JDBC 2.0 API라고합니다.)</target>
        </trans-unit>
        <trans-unit id="20b47884dd8b87919794f136c2bc41ca27d63245" translate="yes" xml:space="preserve">
          <source>(Note that the result of getLength() will be zero if there are no attributes.)</source>
          <target state="translated">(속성이없는 경우 getLength ()의 결과는 0이됩니다.)</target>
        </trans-unit>
        <trans-unit id="f2ef677b5dd8607843ee6103dde811c83f3426fe" translate="yes" xml:space="preserve">
          <source>(Note that there is also a &lt;a href=&quot;jar/jarfile#stream()&quot;&gt;&lt;code&gt;JarFile.stream()&lt;/code&gt;&lt;/a&gt; method that returns a &lt;code&gt;Stream&lt;/code&gt; of entries, which may be more convenient in some cases.)</source>
          <target state="translated">( 항목 의 &lt;code&gt;Stream&lt;/code&gt; 을 반환 하는 &lt;a href=&quot;jar/jarfile#stream()&quot;&gt; &lt;code&gt;JarFile.stream()&lt;/code&gt; &lt;/a&gt; 메서드도 있으므로 경우에 따라 더 편리 할 수 ​​있습니다.)</target>
        </trans-unit>
        <trans-unit id="df2ffea88c54975a0673879e6881773df7cdabcd" translate="yes" xml:space="preserve">
          <source>(Note: 60 only allowable for leap second.)</source>
          <target state="translated">(참고 : 60은 윤초에만 허용됩니다.)</target>
        </trans-unit>
        <trans-unit id="5f4a2929961568123ed9361d6db57c7e976fa60b" translate="yes" xml:space="preserve">
          <source>(Shared mode is similar but may involve cascading signals.)</source>
          <target state="translated">(공유 모드는 비슷하지만 계단식 신호가 포함될 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="fe9fc3495c50b2de2a42feb0174b9f138407c9df" translate="yes" xml:space="preserve">
          <source>(The &lt;a href=&quot;../arrayblockingqueue&quot;&gt;&lt;code&gt;ArrayBlockingQueue&lt;/code&gt;&lt;/a&gt; class provides this functionality, so there is no reason to implement this sample usage class.)</source>
          <target state="translated">합니다 ( &lt;a href=&quot;../arrayblockingqueue&quot;&gt; &lt;code&gt;ArrayBlockingQueue&lt;/code&gt; 등의&lt;/a&gt; 클래스는 그래서이 샘플 사용 클래스를 구현 할 이유가 없다,이 기능을 제공합니다.)</target>
        </trans-unit>
        <trans-unit id="ce4130c2e8cca6b3c52e803be5d59104a045edea" translate="yes" xml:space="preserve">
          <source>(The &lt;code&gt;?&lt;/code&gt; for the second type parameter merely indicates that we don't care about the intermediate representation used by this collector.) If we wanted to create a collector to tabulate the sum of salaries by department, we could reuse &lt;code&gt;summingSalaries&lt;/code&gt; using &lt;a href=&quot;collectors#groupingBy(java.util.function.Function,java.util.stream.Collector)&quot;&gt;&lt;code&gt;groupingBy&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">( 두 번째 유형 매개 변수에 대한 &lt;code&gt;?&lt;/code&gt; 는 &lt;code&gt;summingSalaries&lt;/code&gt; 수집기가 사용하는 중간 표현에 관심이 없음을 나타냅니다.) 부서별 급여 합계를 표로 만드는 수집기를 만들려면 &lt;a href=&quot;collectors#groupingBy(java.util.function.Function,java.util.stream.Collector)&quot;&gt; &lt;code&gt;groupingBy&lt;/code&gt; 를&lt;/a&gt; 사용하여 summingSalaries 를 재사용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cbd62b631d1134a6c4a56b66ca207dd4fc46f2f5" translate="yes" xml:space="preserve">
          <source>(The &lt;code&gt;?&lt;/code&gt; for the second type parameter merely indicates that we don't care about the intermediate representation used by this collector.) If we wanted to create a collector to tabulate the sum of salaries by department, we could reuse &lt;code&gt;summingSalaries&lt;/code&gt; using &lt;a href=&quot;collectors#groupingBy-java.util.function.Function-java.util.stream.Collector-&quot;&gt;&lt;code&gt;groupingBy&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">( 두 번째 유형 매개 변수 의 &lt;code&gt;?&lt;/code&gt; 는 &lt;code&gt;summingSalaries&lt;/code&gt; 콜렉터가 사용하는 중간 표현에 신경 쓰지 않는다는 것을 나타냅니다.) 부서별로 급여의 합계를 표시하는 콜렉터를 작성하려는 경우 &lt;a href=&quot;collectors#groupingBy-java.util.function.Function-java.util.stream.Collector-&quot;&gt; &lt;code&gt;groupingBy&lt;/code&gt; 를&lt;/a&gt; 사용하여 summingSalaries 를 재사용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b2d993b023ebadf38e5e095ad44713149386749c" translate="yes" xml:space="preserve">
          <source>(The array may also be a shared constant when &lt;code&gt;arrayLength&lt;/code&gt; is zero.)</source>
          <target state="translated">&lt;code&gt;arrayLength&lt;/code&gt; 가 0 인 경우 배열은 공유 상수 일 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="747d2f4a895e5bfa3c9a7f032f8640240640ba15" translate="yes" xml:space="preserve">
          <source>(This behavior is also implemented by the predefined collector &lt;a href=&quot;collectors#toCollection(java.util.function.Supplier)&quot;&gt;&lt;code&gt;Collectors.toCollection(Supplier)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">(이 동작은 미리 정의 된 수집기 &lt;a href=&quot;collectors#toCollection(java.util.function.Supplier)&quot;&gt; &lt;code&gt;Collectors.toCollection(Supplier)&lt;/code&gt; &lt;/a&gt; 에서도 구현됩니다 ).</target>
        </trans-unit>
        <trans-unit id="f5dc29eb2774142089e8d2244de2a5ccb25ba368" translate="yes" xml:space="preserve">
          <source>(This behavior is also implemented by the predefined collector &lt;a href=&quot;collectors#toCollection-java.util.function.Supplier-&quot;&gt;&lt;code&gt;Collectors.toCollection(Supplier)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">이 동작은 사전 정의 된 콜렉터 &lt;a href=&quot;collectors#toCollection-java.util.function.Supplier-&quot;&gt; &lt;code&gt;Collectors.toCollection(Supplier)&lt;/code&gt; &lt;/a&gt; 의해 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="cce1ec263277101bf57a75e59d14f9b6ee3d03e2" translate="yes" xml:space="preserve">
          <source>(This method is designed for use in conjunction with &lt;a href=&quot;#exportNode(java.io.OutputStream)&quot;&gt;&lt;code&gt;exportNode(OutputStream)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#exportSubtree(java.io.OutputStream)&quot;&gt;&lt;code&gt;exportSubtree(OutputStream)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">(이 메서드는 &lt;a href=&quot;#exportNode(java.io.OutputStream)&quot;&gt; &lt;code&gt;exportNode(OutputStream)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#exportSubtree(java.io.OutputStream)&quot;&gt; &lt;code&gt;exportSubtree(OutputStream)&lt;/code&gt; &lt;/a&gt; 와 함께 사용하도록 설계되었습니다 .</target>
        </trans-unit>
        <trans-unit id="6dc79e6a2e111776e6636a5ede275b7c3c8f8973" translate="yes" xml:space="preserve">
          <source>(This method is designed for use in conjunction with &lt;a href=&quot;preferences#exportNode-java.io.OutputStream-&quot;&gt;&lt;code&gt;exportNode(OutputStream)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;preferences#exportSubtree-java.io.OutputStream-&quot;&gt;&lt;code&gt;exportSubtree(OutputStream)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;preferences#exportNode-java.io.OutputStream-&quot;&gt; &lt;code&gt;exportNode(OutputStream)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;preferences#exportSubtree-java.io.OutputStream-&quot;&gt; &lt;code&gt;exportSubtree(OutputStream)&lt;/code&gt; &lt;/a&gt; 와 함께 사용하도록 설계되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8ea4adc818f330937ec9176b3541be233fb296b6" translate="yes" xml:space="preserve">
          <source>(URNs), which name resources but do not specify how to locate them. The &lt;code&gt;mailto&lt;/code&gt;, &lt;code&gt;news&lt;/code&gt;, and &lt;code&gt;isbn&lt;/code&gt; URIs shown above are examples of URNs.</source>
          <target state="translated">(URN)-리소스 이름을 지정하지만 리소스를 찾는 방법을 지정하지 않습니다. 위에 표시된 &lt;code&gt;mailto&lt;/code&gt; , &lt;code&gt;news&lt;/code&gt; 및 &lt;code&gt;isbn&lt;/code&gt; URI는 URN의 예입니다.</target>
        </trans-unit>
        <trans-unit id="89369f840b5afa256ccae2008a278887221bf258" translate="yes" xml:space="preserve">
          <source>(Unlike the &lt;code&gt;==&lt;/code&gt; operator, this method considers &lt;code&gt;NaN&lt;/code&gt; equals to itself, and 0.0d unequal to -0.0d.)</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt; 연산자 와 달리이 방법은 &lt;code&gt;NaN&lt;/code&gt; 이 자체와 같고 0.0d가 -0.0d와 같지 않다고 간주합니다.</target>
        </trans-unit>
        <trans-unit id="fa58c46bec17a71b9b6fe016255f3e02bdd14e95" translate="yes" xml:space="preserve">
          <source>(Unlike the &lt;code&gt;==&lt;/code&gt; operator, this method considers &lt;code&gt;NaN&lt;/code&gt; equals to itself, and 0.0f unequal to -0.0f.)</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt; 연산자 와 달리이 방법은 &lt;code&gt;NaN&lt;/code&gt; 이 자체와 같고 0.0f가 -0.0f와 같지 않다고 간주 합니다.</target>
        </trans-unit>
        <trans-unit id="2f21d68cbcde920d3af7b93239cf62dc321db4ce" translate="yes" xml:space="preserve">
          <source>(a one-dimensional array with</source>
          <target state="translated">(일차원 배열</target>
        </trans-unit>
        <trans-unit id="2f9170dfe3652f59a131472d270496f7b7ae8e6e" translate="yes" xml:space="preserve">
          <source>(a one-dimensional array with primitive element type)</source>
          <target state="translated">(기본 요소 유형이있는 1 차원 배열)</target>
        </trans-unit>
        <trans-unit id="aaa5528602fe4b2299e21db137e2a42130e2cbf6" translate="yes" xml:space="preserve">
          <source>(all)</source>
          <target state="translated">(all)</target>
        </trans-unit>
        <trans-unit id="ffd8684cd70779aa04a5435d72fa86c35352300e" translate="yes" xml:space="preserve">
          <source>(an array with non-primitive element type &lt;em&gt;E&lt;/em&gt;; this includes &lt;code&gt;int[][]&lt;/code&gt;, where &lt;em&gt;E&lt;/em&gt; is &lt;code&gt;int[]&lt;/code&gt;)</source>
          <target state="translated">(기본이 아닌 요소 유형 &lt;em&gt;E&lt;/em&gt; 인 배열 ; 여기에는 &lt;code&gt;int[][]&lt;/code&gt; , 여기서 &lt;em&gt;E&lt;/em&gt; 는 &lt;code&gt;int[]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f2e85863fe90e69de6de09f0a7a4b13370be3dba" translate="yes" xml:space="preserve">
          <source>(as defined in section 15.18.1.1 of</source>
          <target state="translated">(섹션 15.18.1.1에 정의 된대로)</target>
        </trans-unit>
        <trans-unit id="c9b2dbe9ef31d438be1b7c5d675e4dca0115c685" translate="yes" xml:space="preserve">
          <source>(commutativity)</source>
          <target state="translated">(commutativity)</target>
        </trans-unit>
        <trans-unit id="b3bebcf7b375c4622c5fbe5e608aea7719e88f32" translate="yes" xml:space="preserve">
          <source>(declared in Java as &lt;code&gt;enum &lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;{...}&lt;/code&gt;)</source>
          <target state="translated">(Java에서 &lt;code&gt;enum &lt;/code&gt; &lt;em&gt;E &lt;/em&gt; &lt;code&gt;{...}&lt;/code&gt; 로 선언 됨 )</target>
        </trans-unit>
        <trans-unit id="6e031173fa2e024508348be61c38ded0bf45e144" translate="yes" xml:space="preserve">
          <source>(file.separator), are expanded to their respective values.</source>
          <target state="translated">(file.separator)는 해당 값으로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="163b93184cffbac20a5e2b49cc22f95260adc55f" translate="yes" xml:space="preserve">
          <source>(for example, strings and integers)</source>
          <target state="translated">(예 : 문자열 및 정수)</target>
        </trans-unit>
        <trans-unit id="304701ec6d090877b22206d73b7ac2aa69fd40c9" translate="yes" xml:space="preserve">
          <source>(for example, strings and integers), or the search key is not mutually comparable with the elements of the list.</source>
          <target state="translated">(예 : 문자열 및 정수) 또는 검색 키는 목록의 요소와 서로 비교할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e0ed458b355780f64a2657936c88df1e10871272" translate="yes" xml:space="preserve">
          <source>(for example, strings and integers).</source>
          <target state="translated">(예 : 문자열 및 정수).</target>
        </trans-unit>
        <trans-unit id="cdeeb9e98b8431a9148fbaef1a26f93dbd67df09" translate="yes" xml:space="preserve">
          <source>(generated here)</source>
          <target state="translated">(여기에서 생성됨)</target>
        </trans-unit>
        <trans-unit id="775532693b8d905c2b34713d61592ae168a9a936" translate="yes" xml:space="preserve">
          <source>(in conjunction with the &lt;code&gt;
 try&lt;/code&gt;-with-resources statement). Any exceptions that were suppressed in order to deliver an exception are printed out beneath the stack trace. The format of this information depends on the implementation, but the following example may be regarded as typical:</source>
          <target state="translated">( &lt;code&gt; try&lt;/code&gt; -with-resources 문과 함께). 예외를 전달하기 위해 억제 된 예외는 스택 추적 아래에 인쇄됩니다. 이 정보의 형식은 구현에 따라 다르지만 다음 예는 일반적인 것으로 간주 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d99601856659d14f631d1dbc087bb8afa630319" translate="yes" xml:space="preserve">
          <source>(in conjunction with the &lt;code&gt;try&lt;/code&gt;-with-resources statement). Any exceptions that were suppressed in order to deliver an exception are printed out beneath the stack trace. The format of this information depends on the implementation, but the following example may be regarded as typical:</source>
          <target state="translated">( &lt;code&gt;try&lt;/code&gt; -with-resources 문과 함께). 예외를 전달하기 위해 억제 된 예외는 스택 추적 아래에 인쇄됩니다. 이 정보의 형식은 구현에 따라 다르지만 다음 예는 일반적인 것으로 간주 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2eb028d9aad773ff1a389c368d0f7a547baf26cc" translate="yes" xml:space="preserve">
          <source>(in the latter case, provider-specific default values for the mode and padding scheme are used). For example, the following is a valid transformation:</source>
          <target state="translated">후자의 경우 모드 및 패딩 체계에 대한 공급자 별 기본값이 사용됩니다. 예를 들어 다음은 유효한 변환입니다.</target>
        </trans-unit>
        <trans-unit id="0dd6e4ac0044c1a7839ad33a17b833a1666dce47" translate="yes" xml:space="preserve">
          <source>(inclusively), where</source>
          <target state="translated">(포함) 여기서</target>
        </trans-unit>
        <trans-unit id="e25ee812e2822e0f7a1de0c346966e3410739c6f" translate="yes" xml:space="preserve">
          <source>(modulo access mode methods do not declare throwing of &lt;code&gt;Throwable&lt;/code&gt;). This is equivalent to:</source>
          <target state="translated">(모듈로 액세스 모드 메소드는 &lt;code&gt;Throwable&lt;/code&gt; 던짐을 선언하지 않습니다 ). 이것은 다음과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="a8798feb9b5562057dd40eb23b3c7597cf4856af" translate="yes" xml:space="preserve">
          <source>(never returns)</source>
          <target state="translated">(반품하지 않음)</target>
        </trans-unit>
        <trans-unit id="3c6b183d348f955357b33a3fba45083e98ab8125" translate="yes" xml:space="preserve">
          <source>(none)</source>
          <target state="translated">(none)</target>
        </trans-unit>
        <trans-unit id="b6f0c2babbf5347b32ed817cdfb6fff27b740b9f" translate="yes" xml:space="preserve">
          <source>(note the double slashes), in which case the requested mode and/or padding are set automatically by the &lt;code&gt;getInstance&lt;/code&gt; methods of &lt;code&gt;Cipher&lt;/code&gt;, which invoke the &lt;a href=&quot;#engineSetMode(java.lang.String)&quot;&gt;&lt;code&gt;engineSetMode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#engineSetPadding(java.lang.String)&quot;&gt;&lt;code&gt;engineSetPadding&lt;/code&gt;&lt;/a&gt; methods of the provider's subclass of &lt;code&gt;CipherSpi&lt;/code&gt;.</source>
          <target state="translated">(이중 슬래시 참고),이 경우 요청 된 모드 및 / 또는 패딩은 &lt;code&gt;Cipher&lt;/code&gt; 의 &lt;code&gt;getInstance&lt;/code&gt; 메서드에 의해 자동으로 설정되며, &lt;code&gt;CipherSpi&lt;/code&gt; 의 공급자 하위 클래스의 &lt;a href=&quot;#engineSetMode(java.lang.String)&quot;&gt; &lt;code&gt;engineSetMode&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#engineSetPadding(java.lang.String)&quot;&gt; &lt;code&gt;engineSetPadding&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="2d08c6c81a4b003f081d68baba1c29544634389c" translate="yes" xml:space="preserve">
          <source>(note the double slashes), in which case the requested mode and/or padding are set automatically by the &lt;code&gt;getInstance&lt;/code&gt; methods of &lt;code&gt;Cipher&lt;/code&gt;, which invoke the &lt;a href=&quot;cipherspi#engineSetMode-java.lang.String-&quot;&gt;&lt;code&gt;engineSetMode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cipherspi#engineSetPadding-java.lang.String-&quot;&gt;&lt;code&gt;engineSetPadding&lt;/code&gt;&lt;/a&gt; methods of the provider's subclass of &lt;code&gt;CipherSpi&lt;/code&gt;.</source>
          <target state="translated">(이중 슬래시 참고)이 경우 요청 된 모드 및 / 또는 패딩은 &lt;code&gt;Cipher&lt;/code&gt; 의 &lt;code&gt;getInstance&lt;/code&gt; 메소드에 의해 자동으로 설정되며, &lt;code&gt;CipherSpi&lt;/code&gt; 제공자 서브 클래스의 &lt;a href=&quot;cipherspi#engineSetMode-java.lang.String-&quot;&gt; &lt;code&gt;engineSetMode&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;cipherspi#engineSetPadding-java.lang.String-&quot;&gt; &lt;code&gt;engineSetPadding&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="aa4727c8d925849b0ef451d97ccebdaffbabf19a" translate="yes" xml:space="preserve">
          <source>(opaque cryptographic keys of type &lt;code&gt;Key&lt;/code&gt;) into</source>
          <target state="translated">( &lt;code&gt;Key&lt;/code&gt; 유형의 불투명 암호화 키 )</target>
        </trans-unit>
        <trans-unit id="58dd1449cc68db0a6c3fec05411a29d9445c7592" translate="yes" xml:space="preserve">
          <source>(optional operation)</source>
          <target state="translated">(옵션 조작)</target>
        </trans-unit>
        <trans-unit id="e5f8cbba5381337054c886e320af34509a7b09f6" translate="yes" xml:space="preserve">
          <source>(optional specific exception)</source>
          <target state="translated">(선택적 특정 예외)</target>
        </trans-unit>
        <trans-unit id="6867c3a9fb3f7a7a4b00720f5f8c71209c7a7dae" translate="yes" xml:space="preserve">
          <source>(optional specific exceptions)</source>
          <target state="translated">(선택적 특정 예외)</target>
        </trans-unit>
        <trans-unit id="7739136dc697141cd8d76585cab6736b910f012b" translate="yes" xml:space="preserve">
          <source>(or</source>
          <target state="translated">(or</target>
        </trans-unit>
        <trans-unit id="779dfd49396637eeaf54e30f480f8e6317d4c1d2" translate="yes" xml:space="preserve">
          <source>(or just</source>
          <target state="translated">(또는 그냥</target>
        </trans-unit>
        <trans-unit id="55c80c000bd79898c1a8aca8e869d603b68c8ea2" translate="yes" xml:space="preserve">
          <source>(or with other kinds of uses of type</source>
          <target state="translated">(또는 다른 종류의 유형의 사용</target>
        </trans-unit>
        <trans-unit id="500adcfeaa1e22fc717bdfd1bc65be6215b7820c" translate="yes" xml:space="preserve">
          <source>(owner) of the certificate.</source>
          <target state="translated">인증서의 (소유자).</target>
        </trans-unit>
        <trans-unit id="547bee3263396e87fbab35a9016a6879969c604a" translate="yes" xml:space="preserve">
          <source>(parsing) &lt;em&gt;read-only&lt;/em&gt;, (not parsing) &lt;em&gt;none&lt;/em&gt;</source>
          <target state="translated">(파싱 중) &lt;em&gt;읽기 전용&lt;/em&gt; , (파싱하지 않음) &lt;em&gt;없음&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="23647afe2bb9c7adcad49b87ea47bff7f82ddae9" translate="yes" xml:space="preserve">
          <source>(see below)</source>
          <target state="translated">(아래 참조)</target>
        </trans-unit>
        <trans-unit id="ac3aca69e39abf93fbefc4a589fbf70b90246fd7" translate="yes" xml:space="preserve">
          <source>(see class)</source>
          <target state="translated">(수업 참조)</target>
        </trans-unit>
        <trans-unit id="8524bf8287e197f8e7f23c6cbb9d6078a7ff9b48" translate="yes" xml:space="preserve">
          <source>(simply referred to as a</source>
          <target state="translated">(간단히</target>
        </trans-unit>
        <trans-unit id="698cacfa444497e7ac4b571dc7bb2ec02fdf076d" translate="yes" xml:space="preserve">
          <source>(so</source>
          <target state="translated">(so</target>
        </trans-unit>
        <trans-unit id="76ec894640446756db2138a1567f7ec2042ab8d1" translate="yes" xml:space="preserve">
          <source>(that is</source>
          <target state="translated">(그건</target>
        </trans-unit>
        <trans-unit id="c4418aeb64b25601d401998784ae926971fd8fa1" translate="yes" xml:space="preserve">
          <source>(that is, &lt;code&gt;e1.compareTo(e2)&lt;/code&gt; must not throw a &lt;code&gt;ClassCastException&lt;/code&gt; for any elements &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; in the array).</source>
          <target state="translated">&lt;code&gt;e1.compareTo(e2)&lt;/code&gt; , e1.compareTo (e2) 는 배열의 &lt;code&gt;e1&lt;/code&gt; 및 &lt;code&gt;e2&lt;/code&gt; 요소에 대해 &lt;code&gt;ClassCastException&lt;/code&gt; 을 발생 시키지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="51162ee68d06f2e143a0d9d9e2b854715102d289" translate="yes" xml:space="preserve">
          <source>(that is, &lt;code&gt;e1.compareTo(e2)&lt;/code&gt; must not throw a &lt;code&gt;ClassCastException&lt;/code&gt; for any elements &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; in the collection).</source>
          <target state="translated">&lt;code&gt;e1.compareTo(e2)&lt;/code&gt; , e1.compareTo (e2) 는 컬렉션의 &lt;code&gt;e1&lt;/code&gt; 및 &lt;code&gt;e2&lt;/code&gt; 요소에 대해 &lt;code&gt;ClassCastException&lt;/code&gt; 을 발생 시키지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="ce864bcad1c431bd534f0ddce2cb91441629de20" translate="yes" xml:space="preserve">
          <source>(that is, &lt;code&gt;e1.compareTo(e2)&lt;/code&gt; must not throw a &lt;code&gt;ClassCastException&lt;/code&gt; for any elements &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; in the list).</source>
          <target state="translated">&lt;code&gt;e1.compareTo(e2)&lt;/code&gt; , e1.compareTo (e2) 는 목록의 &lt;code&gt;e1&lt;/code&gt; 및 &lt;code&gt;e2&lt;/code&gt; 요소에 대해 &lt;code&gt;ClassCastException&lt;/code&gt; 을 발생 시키지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="134e4090761d72cab5a5196b2d9edf0b6191e92e" translate="yes" xml:space="preserve">
          <source>(that is, internal data structures are rebuilt) so that the hash table has approximately twice the number of buckets.</source>
          <target state="translated">(즉, 내부 데이터 구조가 재 빌드 됨) 해시 테이블이 대략 두 배의 버킷 수를 갖도록합니다.</target>
        </trans-unit>
        <trans-unit id="960a2276b1c5f40606643c65d2d5e7123f4ca5d3" translate="yes" xml:space="preserve">
          <source>(the 8 primitive Java types)</source>
          <target state="translated">(8 가지 기본 Java 유형)</target>
        </trans-unit>
        <trans-unit id="4fe72db57a89ca80d507afc84bcd0143bef9e46a" translate="yes" xml:space="preserve">
          <source>(the corresponding boxed types)</source>
          <target state="translated">(해당 박스 타입)</target>
        </trans-unit>
        <trans-unit id="429e5d34a1ae5db9a0ba5ce177a20c3abdd3f919" translate="yes" xml:space="preserve">
          <source>(the order in which the enum constants are declared). The returned iterator is</source>
          <target state="translated">열거 형 상수가 선언 된 순서입니다. 반환 된 반복자는</target>
        </trans-unit>
        <trans-unit id="8218f282bccd67d22a644e11772c8918e618cef7" translate="yes" xml:space="preserve">
          <source>(the types covered by &lt;a href=&quot;openmbean/simpletype&quot;&gt;&lt;code&gt;SimpleType&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">( &lt;a href=&quot;openmbean/simpletype&quot;&gt; &lt;code&gt;SimpleType&lt;/code&gt; 에서&lt;/a&gt; 다루는 유형 )</target>
        </trans-unit>
        <trans-unit id="1f226103eea6de1b77561a0a7783271744a4cac4" translate="yes" xml:space="preserve">
          <source>(timezone is optional for all date/time datatypes)</source>
          <target state="translated">(시간대는 모든 날짜 / 시간 데이터 유형에 대해 선택 사항입니다.)</target>
        </trans-unit>
        <trans-unit id="baafc25632c02da69cb911105b1ae1fd9682514e" translate="yes" xml:space="preserve">
          <source>(transparent representations of the underlying key material), and vice versa.</source>
          <target state="translated">(기본 핵심 자료의 투명 표현) 및 그 반대도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="5f0e2b2ed993798ef0889362b6756e1574e59b6d" translate="yes" xml:space="preserve">
          <source>(transparent representations of the underlying key material), and vice versa. Secret key factories operate only on secret (symmetric) keys.</source>
          <target state="translated">(기본 핵심 자료의 투명 표현) 및 그 반대도 마찬가지입니다. 비밀 키 팩토리는 비밀 (대칭) 키에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="b309327de4afa742991a1a8a059ec8e3167c8d24" translate="yes" xml:space="preserve">
          <source>(unordered collections that may contain duplicate elements) should implement this interface directly.</source>
          <target state="translated">(중복 요소를 포함 할 수있는 정렬되지 않은 컬렉션)이 인터페이스를 직접 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="84e40529b237a057f5911fc300da2bfb10bf50d1" translate="yes" xml:space="preserve">
          <source>(where &lt;a href=&quot;collectors#groupingByConcurrent(java.util.function.Function)&quot;&gt;&lt;code&gt;Collectors.groupingByConcurrent(java.util.function.Function&amp;lt;? super T, ? extends K&amp;gt;)&lt;/code&gt;&lt;/a&gt; is the concurrent equivalent of &lt;code&gt;groupingBy&lt;/code&gt;).</source>
          <target state="translated">(여기서 &lt;a href=&quot;collectors#groupingByConcurrent(java.util.function.Function)&quot;&gt; &lt;code&gt;Collectors.groupingByConcurrent(java.util.function.Function&amp;lt;? super T, ? extends K&amp;gt;)&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;groupingBy&lt;/code&gt; 와 동시에 동일합니다 ).</target>
        </trans-unit>
        <trans-unit id="fb1c5a04626f96c922b8dd3a64843b75b596babd" translate="yes" xml:space="preserve">
          <source>(where &lt;a href=&quot;collectors#groupingByConcurrent-java.util.function.Function-&quot;&gt;&lt;code&gt;Collectors.groupingByConcurrent(java.util.function.Function&amp;lt;? super T, ? extends K&amp;gt;)&lt;/code&gt;&lt;/a&gt; is the concurrent equivalent of &lt;code&gt;groupingBy&lt;/code&gt;).</source>
          <target state="translated">(여기서 &lt;a href=&quot;collectors#groupingByConcurrent-java.util.function.Function-&quot;&gt; &lt;code&gt;Collectors.groupingByConcurrent(java.util.function.Function&amp;lt;? super T, ? extends K&amp;gt;)&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;groupingBy&lt;/code&gt; 와 동시에 동일합니다 ).</target>
        </trans-unit>
        <trans-unit id="217448d919c1c212d4f00479887f88ee893d252a" translate="yes" xml:space="preserve">
          <source>(which contains neither endpoint). The following idiom obtains a view containing all of the Strings in &lt;code&gt;s&lt;/code&gt; from &lt;code&gt;low&lt;/code&gt; to &lt;code&gt;high&lt;/code&gt;, exclusive:</source>
          <target state="translated">(끝점을 포함하지 않음). 다음 관용구에서 모든 스트링을 포함하는 도면 취득 &lt;code&gt;s&lt;/code&gt; 로부터 &lt;code&gt;low&lt;/code&gt; 로 &lt;code&gt;high&lt;/code&gt; , 배타적 :</target>
        </trans-unit>
        <trans-unit id="0f9d902556139100172ba538fa420c9b3a071487" translate="yes" xml:space="preserve">
          <source>(which includes both endpoints), and the element type allows for calculation of the successor of a given value, merely request the subrange from &lt;code&gt;lowEndpoint&lt;/code&gt; to &lt;code&gt;successor(highEndpoint)&lt;/code&gt;. For example, suppose that &lt;code&gt;s&lt;/code&gt; is a sorted set of strings. The following idiom obtains a view containing all of the strings in &lt;code&gt;s&lt;/code&gt; from &lt;code&gt;low&lt;/code&gt; to &lt;code&gt;high&lt;/code&gt;, inclusive:</source>
          <target state="translated">(두 끝점 모두 포함), 요소 유형을 사용하면 주어진 값의 후속 작업을 계산할 수 있으며 &lt;code&gt;lowEndpoint&lt;/code&gt; 에서 &lt;code&gt;successor(highEndpoint)&lt;/code&gt; 로 하위 범위를 요청하기 만하면 됩니다. 예를 들어, &lt;code&gt;s&lt;/code&gt; 가 정렬 된 문자열 세트 라고 가정하십시오 . 다음 관용구는 &lt;code&gt;s&lt;/code&gt; 의 모든 문자열 을 &lt;code&gt;low&lt;/code&gt; 에서 &lt;code&gt;high&lt;/code&gt; 로 포함 하는 뷰를 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="63f09b5e2d82841017e36b65848b9acec84be3ef" translate="yes" xml:space="preserve">
          <source>(which is not necessarily unique), a unique</source>
          <target state="translated">(이것은 반드시 독특한 것은 아닙니다), 독특한</target>
        </trans-unit>
        <trans-unit id="049626009d1e3fd149bcb7ca52d5e31c6cc6ce36" translate="yes" xml:space="preserve">
          <source>(x,y,w,h)</source>
          <target state="translated">(x,y,w,h)</target>
        </trans-unit>
        <trans-unit id="e7064f0b80f61dbc65915311032d27baa569ae2a" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>
        </trans-unit>
        <trans-unit id="503cf04a4f66db8a75a1ccd0489ef4c43b912051" translate="yes" xml:space="preserve">
          <source>) and &lt;code&gt;
 get[Declared]Annotations()&lt;/code&gt; methods because the results of the methods will not change due to</source>
          <target state="translated">) 및 &lt;code&gt; get[Declared]Annotations()&lt;/code&gt; 메서드는 다음으로 인해 메서드의 결과가 변경되지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="530b0fdb3c662998fc4c8963bb67f5a08aa51a15" translate="yes" xml:space="preserve">
          <source>) and &lt;code&gt;get[Declared]Annotations()&lt;/code&gt; methods because the results of the methods will not change due to</source>
          <target state="translated">) 및 &lt;code&gt;get[Declared]Annotations()&lt;/code&gt; 메소드로 인해 메소드 결과가 변경되지 않으므로</target>
        </trans-unit>
        <trans-unit id="496260a71fca04fb434af752df6eac70e4dbd09b" translate="yes" xml:space="preserve">
          <source>) and the number of pages printed so far. These pieces of information are also attributes. Attributes can also describe the printer itself, such as: the printer name, the printer location, and the number of jobs queued.</source>
          <target state="translated">) 및 지금까지 인쇄 된 페이지 수입니다. 이러한 정보도 속성입니다. 속성은 프린터 이름, 프린터 위치 및 대기중인 작업 수와 같은 프린터 자체를 설명 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb4c3021cf743a12107c145a1fd8352df105c07a" translate="yes" xml:space="preserve">
          <source>) and the value associated with</source>
          <target state="translated">) 및 관련 값</target>
        </trans-unit>
        <trans-unit id="acf440107a14aa34c85eae52e36fe1f4e29ec6c3" translate="yes" xml:space="preserve">
          <source>) and whose size is specified by the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; arguments.</source>
          <target state="translated">) 및 &lt;code&gt;width&lt;/code&gt; 및 &lt;code&gt;height&lt;/code&gt; 인수 로 크기가 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="b26a1483fde63de3ee624399b003c786f3dc6dc8" translate="yes" xml:space="preserve">
          <source>) computed, as if with unlimited range and precision, and rounded once to the nearest &lt;code&gt;double&lt;/code&gt; value</source>
          <target state="translated">) 무제한 범위 및 정밀도를 사용하는 것처럼 계산되고 가장 가까운 &lt;code&gt;double&lt;/code&gt; 값으로 한 번 반올림됩니다.</target>
        </trans-unit>
        <trans-unit id="53e2db233bd32da5c9f2be2d6af7ee19d12accde" translate="yes" xml:space="preserve">
          <source>) computed, as if with unlimited range and precision, and rounded once to the nearest &lt;code&gt;float&lt;/code&gt; value</source>
          <target state="translated">) 무제한 범위와 정밀도를 사용하는 것처럼 계산되고 가장 가까운 &lt;code&gt;float&lt;/code&gt; 값으로 한 번 반올림됩니다.</target>
        </trans-unit>
        <trans-unit id="ab840e3ac3687f0fdb820d7ad80039a3ee90b9e8" translate="yes" xml:space="preserve">
          <source>) coordinate location is inside its bounding box, and &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">) 좌표 위치는 경계 상자 안에 있고 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a1dd53226f265a2587e089d0feee97b3eb9b1a75" translate="yes" xml:space="preserve">
          <source>) coordinates defines a point.</source>
          <target state="translated">) 좌표는 점을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="558ad5c6e85f5e622372e4c921ddf1ffec28cbd6" translate="yes" xml:space="preserve">
          <source>) coordinates defines a point. The figure is not closed if the first point differs from the last point.</source>
          <target state="translated">) 좌표는 점을 정의합니다. 첫 번째 점이 마지막 점과 다른 경우 그림은 닫히지 않습니다.</target>
        </trans-unit>
        <trans-unit id="32e43d56a55d886a90c27aec1aefdd44b2aa79b9" translate="yes" xml:space="preserve">
          <source>) had occurred This parameter may be &lt;code&gt;null&lt;/code&gt; if there were no ProtectionDomains inherited from the parent Thread, or from the privileged</source>
          <target state="translated">)이 발생했습니다 . 상위 Thread 또는 상속 된 ProtectionDomain에서 상속 된 ProtectionDomain이없는 경우이 매개 변수는 &lt;code&gt;null&lt;/code&gt; 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce9397317350c237803dc40f3eccd359c5259ef2" translate="yes" xml:space="preserve">
          <source>) in Cartesian coordinates.</source>
          <target state="translated">)를 직교 좌표로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="3772ea124eade9b4e55bcd41583c2fd018b6aa65" translate="yes" xml:space="preserve">
          <source>) in User Space. For characters in script systems such as Hebrew and Arabic, the glyphs can be rendered from right to left, in which case the coordinate supplied is the location of the leftmost character on the baseline.</source>
          <target state="translated">). 히브리어 및 아랍어와 같은 스크립트 시스템의 문자의 경우 글리프를 오른쪽에서 왼쪽으로 렌더링 할 수 있습니다.이 경우 제공된 좌표는 기준선에서 가장 왼쪽 문자의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="dfbb6da328ccefe4e18fc429364dddcf35b55f8c" translate="yes" xml:space="preserve">
          <source>) in polar coordinates that corresponds to the point (</source>
          <target state="translated">) 지점에 해당하는 극좌표</target>
        </trans-unit>
        <trans-unit id="04344607eec52c64b27603e02cdb91df6e8cd254" translate="yes" xml:space="preserve">
          <source>) in the &lt;code&gt;Graphics2D&lt;/code&gt; context's former coordinate system. All coordinates used in subsequent rendering operations on this graphics context are relative to this new origin.</source>
          <target state="translated">) &lt;code&gt;Graphics2D&lt;/code&gt; 컨텍스트의 이전 좌표계에서. 이 그래픽 컨텍스트의 후속 렌더링 작업에 사용되는 모든 좌표는이 새 원점에 상대적입니다.</target>
        </trans-unit>
        <trans-unit id="950b87d6cea4cb90b2194ded7e55b70980ddf47b" translate="yes" xml:space="preserve">
          <source>) in the User Space. The rendering attributes applied include the &lt;code&gt;Clip&lt;/code&gt;, &lt;code&gt;Transform&lt;/code&gt;, &lt;code&gt;Paint&lt;/code&gt;, &lt;code&gt;Font&lt;/code&gt; and &lt;code&gt;Composite&lt;/code&gt; attributes. For characters in script systems such as Hebrew and Arabic, the glyphs can be rendered from right to left, in which case the coordinate supplied is the location of the leftmost character on the baseline.</source>
          <target state="translated">). 적용된 렌더링 속성에는 &lt;code&gt;Clip&lt;/code&gt; , &lt;code&gt;Transform&lt;/code&gt; , &lt;code&gt;Paint&lt;/code&gt; , &lt;code&gt;Font&lt;/code&gt; 및 &lt;code&gt;Composite&lt;/code&gt; 속성이 포함됩니다. 히브리어 및 아랍어와 같은 스크립트 시스템의 문자의 경우 글리프를 오른쪽에서 왼쪽으로 렌더링 할 수 있습니다.이 경우 제공된 좌표는 기준선에서 가장 왼쪽 문자의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="eb68cf3c56102a8fbb2797c462bc99a8d9588136" translate="yes" xml:space="preserve">
          <source>) in the current coordinate system.</source>
          <target state="translated">) 현재 좌표계에서.</target>
        </trans-unit>
        <trans-unit id="a1c49533d9f09d2d6150fb2d0d4bfcf276e87721" translate="yes" xml:space="preserve">
          <source>) in the current coordinate system. Modifies the &lt;code&gt;Graphics2D&lt;/code&gt; context so that its new origin corresponds to the point (</source>
          <target state="translated">) 현재 좌표계에서. &lt;code&gt;Graphics2D&lt;/code&gt; 컨텍스트를 수정하여 새 원점이 점 (</target>
        </trans-unit>
        <trans-unit id="9a3489fbd8f2e1f3357764bfc7afeb3c22a86395" translate="yes" xml:space="preserve">
          <source>) in the current coordinate system. Modifies this graphics context so that its new origin corresponds to the point (</source>
          <target state="translated">) 현재 좌표계에서. 새 원점이 점 ()에 해당하도록이 그래픽 컨텍스트를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="2a765d25ddb487d35a6ac91dd7c8deebe1e73690" translate="yes" xml:space="preserve">
          <source>) in the original graphics context.</source>
          <target state="translated">) 원본 그래픽 컨텍스트에서.</target>
        </trans-unit>
        <trans-unit id="59be6bf000ca7bd88c3f9a0c337589f04e4cccbb" translate="yes" xml:space="preserve">
          <source>) in this graphics context's coordinate space. Transparent pixels are drawn in the specified background color.</source>
          <target state="translated">)이 그래픽 컨텍스트의 좌표 공간에서. 투명 픽셀은 지정된 배경색으로 그려집니다.</target>
        </trans-unit>
        <trans-unit id="c7a0c3b95e9776e4c972fb7c9654bd564d57dfa7" translate="yes" xml:space="preserve">
          <source>) in this graphics context's coordinate space. Transparent pixels in the image do not affect whatever pixels are already there.</source>
          <target state="translated">)이 그래픽 컨텍스트의 좌표 공간에서. 이미지의 투명한 픽셀은 이미있는 픽셀에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0234a27c92bddcb89db5d95401b2cfa205788068" translate="yes" xml:space="preserve">
          <source>) in this graphics context's coordinate system.</source>
          <target state="translated">)이 그래픽 컨텍스트의 좌표계에서.</target>
        </trans-unit>
        <trans-unit id="ba48c43632f391b8eeed030aa8e5c269f4290d4d" translate="yes" xml:space="preserve">
          <source>) in this graphics context's original coordinate system. All coordinates used in subsequent rendering operations on this graphics context will be relative to this new origin.</source>
          <target state="translated">)이 그래픽 컨텍스트의 원래 좌표계에서. 이 그래픽 컨텍스트의 후속 렌더링 작업에 사용되는 모든 좌표는이 새 원점을 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="f23741db5b4926b2006db0445287ce5a9a038723" translate="yes" xml:space="preserve">
          <source>) is a class that implements or subclasses the well-known interface or class. A &lt;code&gt;ServiceLoader&lt;/code&gt; is an object that locates and loads service providers deployed in the run time environment at a time of an application's choosing. Application code refers only to the service, not to service providers, and is assumed to be capable of differentiating between multiple service providers as well as handling the possibility that no service providers are located.</source>
          <target state="translated">)는 잘 알려진 인터페이스 또는 클래스를 구현하거나 하위 클래스를 구성하는 클래스입니다. &lt;code&gt;ServiceLoader&lt;/code&gt; 이 있는지 찾아로드 서비스 제공 업체가 응용 프로그램의 선택의 시간에 런타임 환경에 배포하는 것이 목적이다. 애플리케이션 코드는 서비스 제공 업체가 아닌 서비스만을 지칭하며, 여러 서비스 제공 업체를 구별 할 수있을뿐만 아니라 서비스 제공 업체가 없을 가능성을 처리 할 수 ​​있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="d789525f39227e8e8123e2709bbd62ba4427b74e" translate="yes" xml:space="preserve">
          <source>) is inside a subcomponent that itself has subcomponents, it does not go looking down the subcomponent tree.</source>
          <target state="translated">)는 자체적으로 하위 구성 요소가있는 하위 구성 요소 안에 있으며 하위 구성 요소 트리를 내려다 보지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6ed36c6916da6fb2624e7be4c8c958ccf1fb6c52" translate="yes" xml:space="preserve">
          <source>) is the same object as the</source>
          <target state="translated">)는</target>
        </trans-unit>
        <trans-unit id="257f673f40fe0619357eaa80ad97c98abbdd5f62" translate="yes" xml:space="preserve">
          <source>) is used to start programs to service requests when a request arrives on an associated network port. In this example, the process that is started, inherits a channel representing a network socket.</source>
          <target state="translated">)는 요청이 연결된 네트워크 포트에 도착할 때 요청을 서비스하기 위해 프로그램을 시작하는 데 사용됩니다. 이 예제에서 시작된 프로세스는 네트워크 소켓을 나타내는 채널을 상속합니다.</target>
        </trans-unit>
        <trans-unit id="bdae37de53c64bd526f4199378c9ebea9dfc81de" translate="yes" xml:space="preserve">
          <source>) location, and if so, returns the containing component.</source>
          <target state="translated">) 위치를 포함하고있는 경우 포함하는 구성 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5c64b5e101bf35a352a7e57d3573d22f7f853b94" translate="yes" xml:space="preserve">
          <source>) location, and if so, returns the containing component. This method only looks one level deep. If the point (</source>
          <target state="translated">) 위치를 포함하고있는 경우 포함하는 구성 요소를 반환합니다. 이 방법은 한 수준 깊이 만 보입니다. 포인트 (</target>
        </trans-unit>
        <trans-unit id="6703919013fe8fdebeebe7aa64d09c990908793c" translate="yes" xml:space="preserve">
          <source>) location; &lt;code&gt;null&lt;/code&gt; if the location is outside this component</source>
          <target state="translated">) 위치; 위치가이 컴포넌트 외부에 있으면 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44e82c907788db790434de4451c652b68b25c3e8" translate="yes" xml:space="preserve">
          <source>) of a &lt;code&gt;double&lt;/code&gt; value.</source>
          <target state="translated">)의 &lt;code&gt;double&lt;/code&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="863654a3576c9ef47c23eeb46dda5ab594aec6d5" translate="yes" xml:space="preserve">
          <source>) of a &lt;code&gt;double&lt;/code&gt; value. Special cases:</source>
          <target state="translated">)를 &lt;code&gt;double&lt;/code&gt; 값으로 특수한 상황들:</target>
        </trans-unit>
        <trans-unit id="4ab5cba68ba308602d6c7fcd995ca9f524100314" translate="yes" xml:space="preserve">
          <source>) of the former. See &lt;a href=&quot;../element/typeelement&quot;&gt;&lt;code&gt;TypeElement&lt;/code&gt;&lt;/a&gt; for more on this distinction.</source>
          <target state="translated">)의 이 차이점에 대한 자세한 내용은 &lt;a href=&quot;../element/typeelement&quot;&gt; &lt;code&gt;TypeElement&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="219207a2b4d31d1b0c17ba78637e47ff3ddd78b2" translate="yes" xml:space="preserve">
          <source>) of the former. The distinction is most apparent with generic types, for which a single element can define a whole family of types. For example, the element &lt;code&gt;java.util.Set&lt;/code&gt; corresponds to the parameterized types &lt;code&gt;java.util.Set&amp;lt;String&amp;gt;&lt;/code&gt; and &lt;code&gt;java.util.Set&amp;lt;Number&amp;gt;&lt;/code&gt; (and many others), and to the raw type &lt;code&gt;java.util.Set&lt;/code&gt;.</source>
          <target state="translated">)의 단일 요소가 전체 유형의 패밀리를 정의 할 수있는 일반 유형이 가장 두드러집니다. 예를 들어, &lt;code&gt;java.util.Set&lt;/code&gt; 요소 는 매개 변수화 된 유형 &lt;code&gt;java.util.Set&amp;lt;String&amp;gt;&lt;/code&gt; 및 &lt;code&gt;java.util.Set&amp;lt;Number&amp;gt;&lt;/code&gt; (및 기타 여러 유형) 및 원시 유형 &lt;code&gt;java.util.Set&lt;/code&gt; 에 해당 합니다.</target>
        </trans-unit>
        <trans-unit id="e44a7543de79af973c78d9d28bbc6ba069cd590e" translate="yes" xml:space="preserve">
          <source>) of the model will be &lt;code&gt;values.get(0)&lt;/code&gt;. If &lt;code&gt;values&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or has zero size, an &lt;code&gt;IllegalArugmentException&lt;/code&gt; is thrown.</source>
          <target state="translated">)는 &lt;code&gt;values.get(0)&lt;/code&gt; 입니다. 경우 &lt;code&gt;values&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; 또는 제로의 크기가, &lt;code&gt;IllegalArugmentException&lt;/code&gt; 가 슬로우됩니다.</target>
        </trans-unit>
        <trans-unit id="d6649d3cbcd9ed87caa5a5b8f7b392fc1b5e6190" translate="yes" xml:space="preserve">
          <source>) relational database tables based upon a common attribute. By establishing and then enforcing column matches, a &lt;code&gt;JoinRowSet&lt;/code&gt; object establishes relationships between &lt;code&gt;RowSet&lt;/code&gt; instances without the need to touch the originating data source.</source>
          <target state="translated">) 공통 속성을 기반으로하는 관계형 데이터베이스 테이블. 열 일치를 설정 한 다음 적용함으로써 &lt;code&gt;JoinRowSet&lt;/code&gt; 개체 는 원래 데이터 원본을 건드릴 필요없이 &lt;code&gt;RowSet&lt;/code&gt; 인스턴스 간의 관계를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="731bf69587883c13a8a45c60d4c6b5d9c9857d31" translate="yes" xml:space="preserve">
          <source>) returns a value then</source>
          <target state="translated">)는 값을 반환하고</target>
        </trans-unit>
        <trans-unit id="8536577537d0357f3ff0242a15ffc6fb011938f2" translate="yes" xml:space="preserve">
          <source>) succeeds.</source>
          <target state="translated">)가 성공합니다.</target>
        </trans-unit>
        <trans-unit id="2a0d77e3dad0aa1c7c059d00f79a6814b5695dc0" translate="yes" xml:space="preserve">
          <source>) to an IPv6 address.</source>
          <target state="translated">)를 IPv6 주소로</target>
        </trans-unit>
        <trans-unit id="adab916369e52570340653144e8b7d2437a13535" translate="yes" xml:space="preserve">
          <source>) will link against the modified version of</source>
          <target state="translated">)는 수정 된 버전의</target>
        </trans-unit>
        <trans-unit id="1559e7b565e2c23d81c5e782c3a6464acc3d9932" translate="yes" xml:space="preserve">
          <source>), and may be followed by a feedback mode and padding scheme.</source>
          <target state="translated">)에 이어 피드백 모드 및 패딩 방식이 이어질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="993a039de35340b8365b0da181a25be53cfe17bc" translate="yes" xml:space="preserve">
          <source>), as shown in the following figure.</source>
          <target state="translated">), 다음 그림과 같이.</target>
        </trans-unit>
        <trans-unit id="231b238fc4fe961659e55dd80a02aee2986384a4" translate="yes" xml:space="preserve">
          <source>), if the corresponding resource bundles for the candidate locales exist and their parents are not defined by loaded resource bundles themselves. The last element of the list must be a &lt;a href=&quot;locale#ROOT&quot;&gt;root locale&lt;/a&gt; if it is desired to have the base bundle as the terminal of the parent chain.</source>
          <target state="translated">), 후보 로케일에 해당하는 자원 번들이 존재하고로드 된 자원 번들 자체에 의해 상위가 정의되지 않은 경우. 기본 번들을 상위 체인의 터미널로 사용하려면 목록의 마지막 요소가 &lt;a href=&quot;locale#ROOT&quot;&gt;루트 로케일&lt;/a&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="9205a40499475e493e000850120c055eb0c5ac29" translate="yes" xml:space="preserve">
          <source>), in other words, &lt;a href=&quot;#sinh(double)&quot;&gt;sinh(&lt;i&gt;x&lt;/i&gt;)&lt;/a&gt;/&lt;a href=&quot;#cosh(double)&quot;&gt;cosh(&lt;i&gt;x&lt;/i&gt;)&lt;/a&gt;. Note that the absolute value of the exact tanh is always less than 1.</source>
          <target state="translated">), 즉 &lt;a href=&quot;#sinh(double)&quot;&gt;sinh ( &lt;i&gt;x&lt;/i&gt; )&lt;/a&gt; / &lt;a href=&quot;#cosh(double)&quot;&gt;cosh ( &lt;i&gt;x&lt;/i&gt; )&lt;/a&gt; 입니다. 정확한 tanh의 절대 값은 항상 1보다 작습니다.</target>
        </trans-unit>
        <trans-unit id="1778de033c80ce8a52be70b21e979f261f08dbe0" translate="yes" xml:space="preserve">
          <source>), in other words, &lt;a href=&quot;math#sinh(double)&quot;&gt;sinh(&lt;i&gt;x&lt;/i&gt;)&lt;/a&gt;/&lt;a href=&quot;math#cosh(double)&quot;&gt;cosh(&lt;i&gt;x&lt;/i&gt;)&lt;/a&gt;. Note that the absolute value of the exact tanh is always less than 1.</source>
          <target state="translated">), 즉 &lt;a href=&quot;math#sinh(double)&quot;&gt;sinh ( &lt;i&gt;x&lt;/i&gt; )&lt;/a&gt; / &lt;a href=&quot;math#cosh(double)&quot;&gt;cosh ( &lt;i&gt;x&lt;/i&gt; )&lt;/a&gt; 입니다. 정확한 tanh의 절대 값은 항상 1보다 작습니다.</target>
        </trans-unit>
        <trans-unit id="31cb1140bcb17e255bd1dc1ef7d327f3238cbc02" translate="yes" xml:space="preserve">
          <source>), in other words, &lt;a href=&quot;math#sinh-double-&quot;&gt;sinh(&lt;i&gt;x&lt;/i&gt;)&lt;/a&gt;/&lt;a href=&quot;math#cosh-double-&quot;&gt;cosh(&lt;i&gt;x&lt;/i&gt;)&lt;/a&gt;. Note that the absolute value of the exact tanh is always less than 1.</source>
          <target state="translated">즉, &lt;a href=&quot;math#sinh-double-&quot;&gt;sinh ( &lt;i&gt;x&lt;/i&gt; )&lt;/a&gt; / &lt;a href=&quot;math#cosh-double-&quot;&gt;cosh ( &lt;i&gt;x&lt;/i&gt; )&lt;/a&gt; 입니다. 정확한 tanh의 절대 값은 항상 1보다 작습니다.</target>
        </trans-unit>
        <trans-unit id="cc38b31ccd767ea4c85e084094827f4c922cfa87" translate="yes" xml:space="preserve">
          <source>), one class for</source>
          <target state="translated">), 한 클래스</target>
        </trans-unit>
        <trans-unit id="7e16246f0a441ac72cc2408b1ef8eda553524b14" translate="yes" xml:space="preserve">
          <source>), regardless of the type of</source>
          <target state="translated">)의 유형에 관계없이</target>
        </trans-unit>
        <trans-unit id="c5f4c2d180b5e5c2f70dbb3450b03ce32279b55f" translate="yes" xml:space="preserve">
          <source>), the character is placed so that its reference point (shown as the dot in the accompanying image) is put at that position. The reference point specifies a horizontal line called the</source>
          <target state="translated">), 문자는 참조 포인트 (첨부 이미지에서 점으로 표시됨)가 해당 위치에 놓 이도록 배치됩니다. 기준점은</target>
        </trans-unit>
        <trans-unit id="258ea9510cbba1513b92f748076b62cd3120eae7" translate="yes" xml:space="preserve">
          <source>), the code then enters the &lt;code&gt;while&lt;/code&gt; loop to get to the ninth page, go through the rows backwards, go to the eighth page, go through the rows backwards, and so on to the first row of the first page.</source>
          <target state="translated">) 코드는 &lt;code&gt;while&lt;/code&gt; 루프를 입력하여 9 번째 페이지로 이동하고, 행을 뒤로 이동하고, 8 번째 페이지로 이동하고, 행을 뒤로 이동하는 식으로 첫 번째 페이지의 첫 번째 행으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="055d32f4144c3fa22b4cb04dc88a26e8e56ef546" translate="yes" xml:space="preserve">
          <source>), which may be null.</source>
          <target state="translated">)이며 null 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d41919407ce8f78b6cd89401353e39179fec9ab2" translate="yes" xml:space="preserve">
          <source>).</source>
          <target state="translated">).</target>
        </trans-unit>
        <trans-unit id="dea2f936373449774f3526bc34d28c9a63d0717f" translate="yes" xml:space="preserve">
          <source>). Its clip area is determined by the intersection of the original clip area with the specified rectangle. The arguments are all interpreted in the coordinate system of the original &lt;code&gt;Graphics&lt;/code&gt; object. The new graphics context is identical to the original, except in two respects:</source>
          <target state="translated">). 클립 영역은 원본 클립 영역과 지정된 사각형의 교차점에 의해 결정됩니다. 인수는 모두 원본 &lt;code&gt;Graphics&lt;/code&gt; 객체 의 좌표계에서 해석됩니다 . 새 그래픽 컨텍스트는 다음 두 가지 측면을 제외하고 원본과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="1f9f97cf8c2587b3b7d1c3c15ccc44e70d76d916" translate="yes" xml:space="preserve">
          <source>). Note that in the following table, the most significant bit appears in the far left-hand column.</source>
          <target state="translated">). 다음 표에서 맨 왼쪽 열에 가장 중요한 비트가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="17b22f0f32bb09a37890cfd2c42fe09c5e595d04" translate="yes" xml:space="preserve">
          <source>). Note that insertion order is</source>
          <target state="translated">). 게재 신청서는</target>
        </trans-unit>
        <trans-unit id="48fab98b25825fee98bbb0d7bfb9d93363241937" translate="yes" xml:space="preserve">
          <source>). Note that insertion order is not affected if a key is</source>
          <target state="translated">). 키가 다음과 같은 경우 삽입 순서는 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e54edfefa69fca305b3174958d327968f04ec0a1" translate="yes" xml:space="preserve">
          <source>). That is to say, the point (&lt;code&gt;0&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;) in the new graphics context is the same as (</source>
          <target state="translated">). 즉 , 새 그래픽 컨텍스트 의 점 ( &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;0&lt;/code&gt; )은 (</target>
        </trans-unit>
        <trans-unit id="b1581ea0fed46da4024735b85f0d55adf68c182f" translate="yes" xml:space="preserve">
          <source>). The differences from the character escape sequences and Unicode escapes used for characters and strings are:</source>
          <target state="translated">). 문자 이스케이프 시퀀스와 문자 및 문자열에 사용되는 유니 코드 이스케이프와의 차이점은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8acd65876bf3ce425855301836df5991d8a1b417" translate="yes" xml:space="preserve">
          <source>). The non-heap memory includes the</source>
          <target state="translated">). 힙이 아닌 메모리에는</target>
        </trans-unit>
        <trans-unit id="d5fe53ab9818ec2d87b2985aa6777dd1c45169f0" translate="yes" xml:space="preserve">
          <source>). The user of this interface has precise control over where in the list each element is inserted. The user can access elements by their integer index (position in the list), and search for elements in the list.</source>
          <target state="translated">). 이 인터페이스의 사용자는 목록에서 각 요소가 삽입되는 위치를 정확하게 제어 할 수 있습니다. 사용자는 정수 인덱스 (목록의 위치)로 요소에 액세스하고 목록에서 요소를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c41e3c5a02b026882adba76669e7648c9b1ed301" translate="yes" xml:space="preserve">
          <source>). This kind of map is well-suited to building LRU caches. Invoking the &lt;code&gt;put&lt;/code&gt;, &lt;code&gt;putIfAbsent&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;getOrDefault&lt;/code&gt;, &lt;code&gt;compute&lt;/code&gt;, &lt;code&gt;computeIfAbsent&lt;/code&gt;, &lt;code&gt;computeIfPresent&lt;/code&gt;, or &lt;code&gt;merge&lt;/code&gt; methods results in an access to the corresponding entry (assuming it exists after the invocation completes). The &lt;code&gt;replace&lt;/code&gt; methods only result in an access of the entry if the value is replaced. The &lt;code&gt;putAll&lt;/code&gt; method generates one entry access for each mapping in the specified map, in the order that key-value mappings are provided by the specified map's entry set iterator.</source>
          <target state="translated">). 이러한 종류의 맵은 LRU 캐시를 구축하는 데 적합합니다. 호출 &lt;code&gt;put&lt;/code&gt; , &lt;code&gt;putIfAbsent&lt;/code&gt; , &lt;code&gt;get&lt;/code&gt; , &lt;code&gt;getOrDefault&lt;/code&gt; 는 , &lt;code&gt;compute&lt;/code&gt; , &lt;code&gt;computeIfAbsent&lt;/code&gt; , &lt;code&gt;computeIfPresent&lt;/code&gt; 또는 &lt;code&gt;merge&lt;/code&gt; 당해 엔트리의 액세스 메소드 결과 (가정 그 호출이 완료된 후에 존재). &lt;code&gt;replace&lt;/code&gt; 값을 바꾸면 방법은 항목의 액세스를 초래한다. &lt;code&gt;putAll&lt;/code&gt; 에의 방법은 키 값의 매핑이 지정된 맵의 엔트리가 제공 반복자 설정되는 순서로, 지정된 맵에 매핑마다 엔트리 액세스를 생성한다.</target>
        </trans-unit>
        <trans-unit id="b5f091e1d4aa72c8281e58d869449cfd032bb6bc" translate="yes" xml:space="preserve">
          <source>). This method computes the phase</source>
          <target state="translated">). 이 방법은 위상을 계산합니다</target>
        </trans-unit>
        <trans-unit id="b7be05960e737ea4ca56b6e9300a7334e178e567" translate="yes" xml:space="preserve">
          <source>)/2 where</source>
          <target state="translated">) / 2 여기서</target>
        </trans-unit>
        <trans-unit id="df58248c414f342c81e056b40bee12d17a08bf61" translate="yes" xml:space="preserve">
          <source>*</source>
          <target state="translated">*</target>
        </trans-unit>
        <trans-unit id="2e0976bd1aad43a675fe3e54986e750583506fec" translate="yes" xml:space="preserve">
          <source>* In these cases the Print Service itself generates the print data sent to the printer. If the Print Service supports the &lt;code&gt;JobKOctets&lt;/code&gt; attribute, for these cases the Print Service itself must calculate the size of the print data, replacing any &lt;code&gt;JobKOctets&lt;/code&gt; value the client specified.</source>
          <target state="translated">*이 경우 인쇄 서비스 자체가 프린터로 전송 된 인쇄 데이터를 생성합니다. 인쇄 서비스가 &lt;code&gt;JobKOctets&lt;/code&gt; 속성을 지원하는 경우 이러한 경우 인쇄 서비스 자체가 인쇄 데이터의 크기를 계산 하여 클라이언트가 지정한 &lt;code&gt;JobKOctets&lt;/code&gt; 값을 대체해야 합니다.</target>
        </trans-unit>
        <trans-unit id="39f6009dfce546d0e80db81c0c084a297e7f1e2f" translate="yes" xml:space="preserve">
          <source>* In these cases the Print Service itself generates the print data sent to the printer. If the Print Service supports the JobKOctets attribute, for these cases the Print Service itself must calculate the size of the print data, replacing any JobKOctets value the client specified.</source>
          <target state="translated">*이 경우 인쇄 서비스 자체가 프린터로 전송 된 인쇄 데이터를 생성합니다. 인쇄 서비스가 JobKOctets 속성을 지원하는 경우, 이러한 경우 인쇄 서비스 자체는 클라이언트가 지정한 JobKOctets 값을 대체하여 인쇄 데이터의 크기를 계산해야합니다.</target>
        </trans-unit>
        <trans-unit id="a979ef10cc6f6a36df6b8a323307ee3bb2e2db9c" translate="yes" xml:space="preserve">
          <source>+</source>
          <target state="translated">+</target>
        </trans-unit>
        <trans-unit id="36926091a90783598769b8fc6d1aaa4ff806b8e1" translate="yes" xml:space="preserve">
          <source>+ 1 is copied to index one, and so forth until the byte at index &lt;code&gt;limit()&lt;/code&gt; - 1 is copied to index</source>
          <target state="translated">+ 1은 인덱스 1에 복사되며 인덱스 &lt;code&gt;limit()&lt;/code&gt; -1 의 바이트가 인덱스 에 복사 될 때까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="40209046460f843a484570637184270e39319af1" translate="yes" xml:space="preserve">
          <source>+ 1 is copied to index one, and so forth until the char at index &lt;code&gt;limit()&lt;/code&gt; - 1 is copied to index</source>
          <target state="translated">+ 1은 인덱스 1에 복사되며, index &lt;code&gt;limit()&lt;/code&gt; -1 의 문자가 인덱스 에 복사 될 때까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="c7adb7e3a5d77231c6c054c7fc452aff3d4f09f5" translate="yes" xml:space="preserve">
          <source>+ 1 is copied to index one, and so forth until the double at index &lt;code&gt;limit()&lt;/code&gt; - 1 is copied to index</source>
          <target state="translated">+ 1은 인덱스 1에 복사되고 인덱스의 double at &lt;code&gt;limit()&lt;/code&gt; -1이 인덱스에 복사 될 때까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="10663ddfe26ca5243479cbe87a7c0fdab4a05ec5" translate="yes" xml:space="preserve">
          <source>+ 1 is copied to index one, and so forth until the float at index &lt;code&gt;limit()&lt;/code&gt; - 1 is copied to index</source>
          <target state="translated">+ 1은 인덱스 1에 복사됩니다. index &lt;code&gt;limit()&lt;/code&gt; 의 float -1이 인덱스에 복사 될 때까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="cf06b4a4dad49c6379c59ff8eded42d4a4f017b9" translate="yes" xml:space="preserve">
          <source>+ 1 is copied to index one, and so forth until the int at index &lt;code&gt;limit()&lt;/code&gt; - 1 is copied to index</source>
          <target state="translated">+ 1은 인덱스 1에 복사되고 int at index &lt;code&gt;limit()&lt;/code&gt; -1이 인덱스에 복사 될 때까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="fdcc0efdc875d7875c2f8b9bdde4c366914da7e4" translate="yes" xml:space="preserve">
          <source>+ 1 is copied to index one, and so forth until the long at index &lt;code&gt;limit()&lt;/code&gt; - 1 is copied to index</source>
          <target state="translated">+ 1은 인덱스 1에 복사되고 long at index &lt;code&gt;limit()&lt;/code&gt; -1이 인덱스에 복사 될 때까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="31c697e184a37cc94ef6ddbc07678317424e3bcf" translate="yes" xml:space="preserve">
          <source>+ 1 is copied to index one, and so forth until the short at index &lt;code&gt;limit()&lt;/code&gt; - 1 is copied to index</source>
          <target state="translated">+ 1은 인덱스 1에 복사되며 short at index &lt;code&gt;limit()&lt;/code&gt; -1이 인덱스에 복사 될 때까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="109c1afe12501c8f10533ce4eac28422cbd3ff6a" translate="yes" xml:space="preserve">
          <source>+ &lt;code&gt;arrayOffset()&lt;/code&gt;.</source>
          <target state="translated">+ &lt;code&gt;arrayOffset()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0abba3c1ebec8036ce8f675f89afff2b2443fd27" translate="yes" xml:space="preserve">
          <source>+ getDomain().toLowerCase().hashCode()</source>
          <target state="translated">+ getDomain (). toLowerCase (). hashCode ()</target>
        </trans-unit>
        <trans-unit id="527a1c3a0594d5c001e4254d999dc57c4c1b9fbe" translate="yes" xml:space="preserve">
          <source>+ getPath().hashCode()</source>
          <target state="translated">+ getPath (). hashCode ()</target>
        </trans-unit>
        <trans-unit id="c3741a1ce4afbe73a591c985f10b0c496be91300" translate="yes" xml:space="preserve">
          <source>+ z</source>
          <target state="translated">+ z</target>
        </trans-unit>
        <trans-unit id="ab7942258e6bfa60aaf9961c0b91bb1779a3bab8" translate="yes" xml:space="preserve">
          <source>+0000; -0800; -08:00</source>
          <target state="translated">+0000; -0800; -08 : 00</target>
        </trans-unit>
        <trans-unit id="5f82f7ddac3b67b502943e2d5bb3ed6f73d54a56" translate="yes" xml:space="preserve">
          <source>+0000; -08; -0830; -08:30; -083015; -08:30:15</source>
          <target state="translated">+0000; -08; -0830; -08 : 30; -083015; -08 : 30 : 15</target>
        </trans-unit>
        <trans-unit id="959bf3c52eecd58a21c5e183070a918c3cab4d84" translate="yes" xml:space="preserve">
          <source>+1 of the same document. To specify that, see the &lt;a href=&quot;sheetcollate&quot;&gt;&lt;code&gt;SheetCollate&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">동일한 문서의 +1 이를 지정하려면 &lt;a href=&quot;sheetcollate&quot;&gt; &lt;code&gt;SheetCollate&lt;/code&gt; &lt;/a&gt; 속성을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="2f9036f0d062f887f9d966173d7fff5040383582" translate="yes" xml:space="preserve">
          <source>, &quot;image/jpeg&quot; or &quot;image/x-bmp&quot;).</source>
          <target state="translated">, &quot;image / jpeg&quot;또는 &quot;image / x-bmp&quot;).</target>
        </trans-unit>
        <trans-unit id="eaed63fe935b43a59c28b14f45ebbb525bc58443" translate="yes" xml:space="preserve">
          <source>, &quot;jpeg&quot; or &quot;tiff&quot;.</source>
          <target state="translated">, &quot;jpeg&quot;또는 &quot;tiff&quot;.</target>
        </trans-unit>
        <trans-unit id="0d2ef32649950d64774da5bea8448cf1c3eb88e3" translate="yes" xml:space="preserve">
          <source>, &quot;jpg&quot; or &quot;tiff&quot;).</source>
          <target state="translated">, &quot;jpg&quot;또는 &quot;tiff&quot;).</target>
        </trans-unit>
        <trans-unit id="e594000a3570cc342ffd911fb8d69e2583ad2eee" translate="yes" xml:space="preserve">
          <source>, (Addison Wesley, 2002).</source>
          <target state="translated">(Addison Wesley, 2002).</target>
        </trans-unit>
        <trans-unit id="b6240c2fff29e73a52214e241ffa86f02e9bc77e" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;&amp;lt;init&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt;, as per Section 3.9 of</source>
          <target state="translated">, &lt;code&gt;&amp;lt;init&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt; 섹션 3.9에 따라</target>
        </trans-unit>
        <trans-unit id="2d295e3e895192ae4d61a7b2b37c0a56c4f8041f" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;minPass + numPasses - 1&lt;/code&gt;) must not exceed &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;.</source>
          <target state="translated">, &lt;code&gt;minPass + numPasses - 1&lt;/code&gt; ) 초과해야되지 &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae8c11458fec295ddc028887da2ee32fd63f24f6" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;ulp(-&lt;i&gt;x&lt;/i&gt;) == ulp(&lt;i&gt;x&lt;/i&gt;)&lt;/code&gt;.</source>
          <target state="translated">, &lt;code&gt;ulp(-&lt;i&gt;x&lt;/i&gt;) == ulp(&lt;i&gt;x&lt;/i&gt;)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e83439693fe63f2828b80170e9902006cf3647ca" translate="yes" xml:space="preserve">
          <source>, Example that illustrates the usage of &lt;a href=&quot;#dropArgumentsToMatch(java.lang.invoke.MethodHandle,int,java.util.List,int)&quot;&gt;&lt;code&gt;dropArgumentsToMatch(MethodHandle, int, List, int)&lt;/code&gt;&lt;/a&gt; to enforce a loop type:</source>
          <target state="translated">, 루프 유형을 적용하기위한 &lt;a href=&quot;#dropArgumentsToMatch(java.lang.invoke.MethodHandle,int,java.util.List,int)&quot;&gt; &lt;code&gt;dropArgumentsToMatch(MethodHandle, int, List, int)&lt;/code&gt; &lt;/a&gt; 사용법을 보여주는 예 :</target>
        </trans-unit>
        <trans-unit id="81841938a5bdbe1ebab0c20a1e0eaf59c4a0bec7" translate="yes" xml:space="preserve">
          <source>, Example that treats the number of iterations, string to append to, and string to append as loop parameters:</source>
          <target state="translated">, 반복 횟수, 추가 할 문자열 및 추가 할 문자열을 루프 매개 변수로 처리하는 예 :</target>
        </trans-unit>
        <trans-unit id="cc21dddb023e92e86469f66c6494a857a2add9e4" translate="yes" xml:space="preserve">
          <source>, Example with the simplest possible body method type, and passing the number of iterations to the loop invocation:</source>
          <target state="translated">, 가능한 가장 간단한 본문 메서드 유형을 사용하고 반복 횟수를 루프 호출에 전달하는 예제 :</target>
        </trans-unit>
        <trans-unit id="7c39d50f5868fc333decd02f762b62398208843f" translate="yes" xml:space="preserve">
          <source>, Section 3.2.1.)</source>
          <target state="translated">섹션 3.2.1.)</target>
        </trans-unit>
        <trans-unit id="054ae871c6b2e0d91c72f22d703677f78cc620be" translate="yes" xml:space="preserve">
          <source>, Section 4.7.7). In some systems, the name may refer to some source code unit other than a file, such as an entry in source repository.</source>
          <target state="translated">섹션 4.7.7). 일부 시스템에서 이름은 소스 저장소의 항목과 같이 파일 이외의 일부 소스 코드 단위를 나타낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="171ee4357a8385bbb6322eb3aa4cd4e2d08daa0c" translate="yes" xml:space="preserve">
          <source>, Section 4.7.8).</source>
          <target state="translated">섹션 4.7.8).</target>
        </trans-unit>
        <trans-unit id="7d3934f4e6841a4084f0b7c6ca02b97706dfc877" translate="yes" xml:space="preserve">
          <source>, The implementation of this method can be expressed approximately as follows:</source>
          <target state="translated">,이 메서드의 구현은 대략 다음과 같이 표현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4f0090510d4eabcb0cd728263e6a39943a29489" translate="yes" xml:space="preserve">
          <source>, The implementation of this method can be expressed as follows:</source>
          <target state="translated">,이 메서드의 구현은 다음과 같이 표현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2fe0e633484f1d80fa671ade64cd7271ad60d886" translate="yes" xml:space="preserve">
          <source>, The process may be observed to have terminated with &lt;a href=&quot;#isAlive()&quot;&gt;&lt;code&gt;isAlive()&lt;/code&gt;&lt;/a&gt; before the ComputableFuture is completed and dependent actions are invoked.</source>
          <target state="translated">, ComputableFuture가 완료되고 종속 작업이 호출되기 전에 프로세스가 &lt;a href=&quot;#isAlive()&quot;&gt; &lt;code&gt;isAlive()&lt;/code&gt; &lt;/a&gt; 종료 된 것으로 관찰 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e03fbcb81d0736115e14c0f631df97adba1ed20b" translate="yes" xml:space="preserve">
          <source>, Volume 2:</source>
          <target state="translated">, 볼륨 2 :</target>
        </trans-unit>
        <trans-unit id="8dce312c668be3666616b1fa042f445045946be6" translate="yes" xml:space="preserve">
          <source>, Volume 3:</source>
          <target state="translated">, 3 권 :</target>
        </trans-unit>
        <trans-unit id="3c66be1a2f410e82664004cd3f7de54ddf1a390c" translate="yes" xml:space="preserve">
          <source>, a</source>
          <target state="translated">, ㅏ</target>
        </trans-unit>
        <trans-unit id="54c232f63863cb26a3ee458dc69e9d087858c974" translate="yes" xml:space="preserve">
          <source>, a &lt;a href=&quot;../type/declaredtype&quot;&gt;&lt;code&gt;DeclaredType&lt;/code&gt;&lt;/a&gt; represents a class or interface</source>
          <target state="translated">하는 &lt;a href=&quot;../type/declaredtype&quot;&gt; &lt;code&gt;DeclaredType&lt;/code&gt; &lt;/a&gt; 클래스 또는 인터페이스를 나타내는</target>
        </trans-unit>
        <trans-unit id="8036f4d53d5af904ad955b366bf6f27fd065473b" translate="yes" xml:space="preserve">
          <source>, a &lt;code&gt;DeclaredType&lt;/code&gt; represents a class or interface</source>
          <target state="translated">하는 &lt;code&gt;DeclaredType&lt;/code&gt; 클래스 또는 인터페이스를 나타내는</target>
        </trans-unit>
        <trans-unit id="a425aaf43018c82567e5ea21a1278abeb4a0d43a" translate="yes" xml:space="preserve">
          <source>, a &lt;code&gt;RowSetReader&lt;/code&gt; or &lt;code&gt;XMLReader&lt;/code&gt; object, reads data into a &lt;code&gt;RowSet&lt;/code&gt; object when the &lt;code&gt;CachedRowSet&lt;/code&gt; methods &lt;code&gt;execute&lt;/code&gt; or &lt;code&gt;populate&lt;/code&gt; are called. A</source>
          <target state="translated">, &lt;code&gt;RowSetReader&lt;/code&gt; 또는 &lt;code&gt;XMLReader&lt;/code&gt; 객체 는 &lt;code&gt;CachedRowSet&lt;/code&gt; 메서드가 &lt;code&gt;execute&lt;/code&gt; 되거나 &lt;code&gt;populate&lt;/code&gt; 가 호출 될 때 데이터를 &lt;code&gt;RowSet&lt;/code&gt; 객체 로 읽습니다 . ㅏ</target>
        </trans-unit>
        <trans-unit id="561a26385d11c32fbeb3cf947f675eeb45329d92" translate="yes" xml:space="preserve">
          <source>, a &lt;code&gt;RowSetWriter&lt;/code&gt; or &lt;code&gt;XMLWriter&lt;/code&gt; object, writes changes back to the underlying data source when the &lt;code&gt;CachedRowSet&lt;/code&gt; method &lt;code&gt;acceptChanges&lt;/code&gt; is called.</source>
          <target state="translated">, &lt;code&gt;RowSetWriter&lt;/code&gt; 또는 &lt;code&gt;XMLWriter&lt;/code&gt; 객체는 &lt;code&gt;CachedRowSet&lt;/code&gt; 메서드 &lt;code&gt;acceptChanges&lt;/code&gt; 가 호출 될 때 기본 데이터 소스에 변경 내용을 다시 씁니다 .</target>
        </trans-unit>
        <trans-unit id="91b0ae2ac646c98602f18594ba92e01399acd4f5" translate="yes" xml:space="preserve">
          <source>, a list of strings which signifies the external program file to be invoked and its arguments, if any. Which string lists represent a valid operating system command is system-dependent. For example, it is common for each conceptual argument to be an element in this list, but there are operating systems where programs are expected to tokenize command line strings themselves - on such a system a Java implementation might require commands to contain exactly two elements.</source>
          <target state="translated">호출 될 외부 프로그램 파일 및 해당 인수 (있는 경우)를 나타내는 문자열 목록. 유효한 운영 체제 명령을 나타내는 문자열 목록은 시스템에 따라 다릅니다. 예를 들어, 각 개념 인수가이 목록의 요소 인 것이 일반적이지만 프로그램이 명령 행 문자열 자체를 토큰 화해야하는 운영 체제가 있습니다. 이러한 시스템에서 Java 구현에는 명령에 정확히 두 개의 요소가 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="c2fee18834a9ca29f11cd8b783bc91a24a833a7b" translate="yes" xml:space="preserve">
          <source>, a pair of single quotes can be used to quote any arbitrary characters except single quotes. For example, pattern string &lt;code&gt;&quot;'{0}'&quot;&lt;/code&gt; represents string &lt;code&gt;&quot;{0}&quot;&lt;/code&gt;, not a</source>
          <target state="translated">작은 따옴표를 사용하면 작은 따옴표를 제외한 임의의 문자를 따옴표로 묶을 수 있습니다. 예를 들어, 패턴 문자열이 &lt;code&gt;&quot;'{0}'&quot;&lt;/code&gt; 문자열을 나타냅니다 &lt;code&gt;&quot;{0}&quot;&lt;/code&gt; 이 아닌</target>
        </trans-unit>
        <trans-unit id="8733bac2cbf5ad70c1ecca288a1ad0a7fa32c311" translate="yes" xml:space="preserve">
          <source>, an</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="8278d2adba7612cf98a492d21a4ac4c78acb1202" translate="yes" xml:space="preserve">
          <source>, and</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="48b523ad6dc5c10eb3f6d260531044d77517bd95" translate="yes" xml:space="preserve">
          <source>, and &lt;b&gt;A&lt;/b&gt;, in that order, setting the index of the next edit to 0, as shown in the following figure.</source>
          <target state="translated">, 및 &lt;b&gt;A&lt;/b&gt; 는 다음 그림과 같이 다음 편집의 인덱스를 0으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4008c96cf98805cbce5a0ccfa2e20228c5bb11ea" translate="yes" xml:space="preserve">
          <source>, and a generic</source>
          <target state="translated">및 일반</target>
        </trans-unit>
        <trans-unit id="182c132fdcbb8e0d5068f902be310874859a19e7" translate="yes" xml:space="preserve">
          <source>, and a path name</source>
          <target state="translated">및 경로 이름</target>
        </trans-unit>
        <trans-unit id="9c0decbf10abba3422cccdfcc643a3d8c87a9e27" translate="yes" xml:space="preserve">
          <source>, and an</source>
          <target state="translated">, 그리고</target>
        </trans-unit>
        <trans-unit id="141c7779e4177a7d67e80a3657cf391640e16467" translate="yes" xml:space="preserve">
          <source>, and another may apply to all other users. The access permissions on an object may cause some methods in this class to fail.</source>
          <target state="translated">다른 사용자는 다른 모든 사용자에게 적용될 수 있습니다. 개체에 대한 액세스 권한으로 인해이 클래스의 일부 메서드가 실패 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="744862a164842a1e075e3f99f307401b1c26705f" translate="yes" xml:space="preserve">
          <source>, and contains a list of LoginModules configured for that application. Each &lt;code&gt;LoginModule&lt;/code&gt; is specified via its fully qualified class name. Authentication proceeds down the module list in the exact order specified. If an application does not have a specific entry, it defaults to the specific entry for &quot;</source>
          <target state="translated">이 애플리케이션에 대해 구성된 LoginModule 목록을 포함합니다. 각 &lt;code&gt;LoginModule&lt;/code&gt; 은 정규화 된 클래스 이름을 통해 지정됩니다. 인증은 지정된 순서대로 모듈 목록 아래로 진행됩니다. 애플리케이션에 특정 항목이없는 경우 기본적으로 &quot;</target>
        </trans-unit>
        <trans-unit id="d405110e0154f96f11857a8bf85b1595d0883450" translate="yes" xml:space="preserve">
          <source>, and granted to the code specified by the provided</source>
          <target state="translated">제공 한 코드에 부여</target>
        </trans-unit>
        <trans-unit id="e0759275e1a8a558c4e51b07e75b44231f3dde9d" translate="yes" xml:space="preserve">
          <source>, and group index</source>
          <target state="translated">및 그룹 색인</target>
        </trans-unit>
        <trans-unit id="05f35951a8ba73822c9f7de9d0aabd8c0a980486" translate="yes" xml:space="preserve">
          <source>, and its default, min, max and legal values).</source>
          <target state="translated">및 기본값, 최소, 최대 및 유효한 값).</target>
        </trans-unit>
        <trans-unit id="182117f9d8344514cef7bc37ee0eee3d8338d1d8" translate="yes" xml:space="preserve">
          <source>, and may be accessed via the &lt;a href=&quot;../../../../java.base/java/lang/throwable#getCause()&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method, as well as the aforementioned &quot;legacy field.&quot;</source>
          <target state="translated">이며 &lt;a href=&quot;../../../../java.base/java/lang/throwable#getCause()&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메서드와 앞서 언급 한 &quot;레거시 필드&quot; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e3718f737baaa0677dfa5203dbcb5ab82094ed6f" translate="yes" xml:space="preserve">
          <source>, and may be accessed via the &lt;a href=&quot;../../../../java.base/java/lang/throwable#getCause()&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method, as well as the aforementioned &quot;legacy method.&quot;</source>
          <target state="translated">, &lt;a href=&quot;../../../../java.base/java/lang/throwable#getCause()&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메서드 및 앞서 언급 한 &quot;레거시 메서드&quot; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aae16ff95a968c89a39504ed675589dc4de56aed" translate="yes" xml:space="preserve">
          <source>, and may be accessed via the &lt;a href=&quot;../../../java.base/java/lang/throwable#getCause()&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method, as well as the aforementioned &quot;legacy field.&quot;</source>
          <target state="translated">이며 &lt;a href=&quot;../../../java.base/java/lang/throwable#getCause()&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메서드와 앞서 언급 한 &quot;레거시 필드&quot; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2a63be5084a2ef6b1c0e68f4f391a4603b28a5bf" translate="yes" xml:space="preserve">
          <source>, and may be accessed via the &lt;a href=&quot;../lang/throwable#getCause()&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method, as well as the aforementioned &quot;legacy field.&quot;</source>
          <target state="translated">이며 &lt;a href=&quot;../lang/throwable#getCause()&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메서드와 앞서 언급 한 &quot;레거시 필드&quot; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6548a265b65a64412a50d0f00c0af8f8dd5bded6" translate="yes" xml:space="preserve">
          <source>, and may be accessed via the &lt;a href=&quot;../lang/throwable#getCause()&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method, as well as the aforementioned &quot;legacy method.&quot;</source>
          <target state="translated">, &lt;a href=&quot;../lang/throwable#getCause()&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메서드 및 앞서 언급 한 &quot;레거시 메서드&quot; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="37a88887a1f1649d19334e7857fe59064975d285" translate="yes" xml:space="preserve">
          <source>, and may be accessed via the &lt;a href=&quot;../lang/throwable#getCause--&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method, as well as the aforementioned &quot;legacy field.&quot;</source>
          <target state="translated">위에서 언급 한 &quot;레거시 필드&quot;뿐만 아니라 &lt;a href=&quot;../lang/throwable#getCause--&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="28a59bdb1bdd6105dd3b560bb06ddb2d244c1a22" translate="yes" xml:space="preserve">
          <source>, and may be accessed via the &lt;a href=&quot;../lang/throwable#getCause--&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method, as well as the aforementioned &quot;legacy method.&quot;</source>
          <target state="translated">위에서 언급 한 &quot;레거시 메소드&quot;뿐만 아니라 &lt;a href=&quot;../lang/throwable#getCause--&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="045da46eb4bcc140d6167a82cce0ca79f9f7b75c" translate="yes" xml:space="preserve">
          <source>, and may be accessed via the &lt;a href=&quot;../throwable#getCause()&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method, as well as the aforementioned &quot;legacy method.&quot;</source>
          <target state="translated">, &lt;a href=&quot;../throwable#getCause()&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메서드 및 앞서 언급 한 &quot;레거시 메서드&quot; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="15db616aecf5fd786ec0e98cc0fcfff7416a7b13" translate="yes" xml:space="preserve">
          <source>, and may be accessed via the &lt;a href=&quot;../throwable#getCause--&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method, as well as the aforementioned &quot;legacy method.&quot;</source>
          <target state="translated">위에서 언급 한 &quot;레거시 메소드&quot;뿐만 아니라 &lt;a href=&quot;../throwable#getCause--&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="30c18c1a20811f424d4170ebdca3d483056e1ed4" translate="yes" xml:space="preserve">
          <source>, and may be accessed via the &lt;a href=&quot;throwable#getCause()&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method, as well as the aforementioned &quot;legacy method.&quot;</source>
          <target state="translated">, &lt;a href=&quot;throwable#getCause()&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메서드 및 앞서 언급 한 &quot;레거시 메서드&quot; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6f2a76baf8838fb31461ef20f56305b6cb987a88" translate="yes" xml:space="preserve">
          <source>, and may be accessed via the &lt;a href=&quot;throwable#getCause--&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method, as well as the aforementioned &quot;legacy method.&quot;</source>
          <target state="translated">위에서 언급 한 &quot;레거시 메소드&quot;뿐만 아니라 &lt;a href=&quot;throwable#getCause--&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a74c445ae0d2199d4df230ceec409187563d9834" translate="yes" xml:space="preserve">
          <source>, and one for</source>
          <target state="translated">, 그리고 하나</target>
        </trans-unit>
        <trans-unit id="7b410e10184ce986d71ead2776d4612aebf7eff8" translate="yes" xml:space="preserve">
          <source>, and so on.</source>
          <target state="translated">, 등등.</target>
        </trans-unit>
        <trans-unit id="ebb1cb8010bb08e3ed8c7c346f95596620b163b5" translate="yes" xml:space="preserve">
          <source>, and the array's last entry will contain all input beyond the last matched delimiter.</source>
          <target state="translated">, 배열의 마지막 항목에는 마지막으로 일치하는 구분 기호를 초과하는 모든 입력이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="63876a99cdf277bdece169da237040db07b8da42" translate="yes" xml:space="preserve">
          <source>, and the array's last entry will contain all input beyond the last matched delimiter. If</source>
          <target state="translated">배열의 마지막 항목에는 마지막으로 일치 한 구분자를 초과하는 모든 입력이 포함됩니다. 만약</target>
        </trans-unit>
        <trans-unit id="af705ccb3c68fa5aa7c6562be835011a6d867557" translate="yes" xml:space="preserve">
          <source>, and the class's &lt;code&gt;compareTo&lt;/code&gt; method is referred to as its</source>
          <target state="translated">클래스의 &lt;code&gt;compareTo&lt;/code&gt; 메소드를</target>
        </trans-unit>
        <trans-unit id="60e1453aaf48f2c7bda2a0c2e42c28a411749004" translate="yes" xml:space="preserve">
          <source>, and the third element is the value set for</source>
          <target state="translated">, 세 번째 요소는 다음에 대해 설정된 값입니다.</target>
        </trans-unit>
        <trans-unit id="ad45c40055a8e9e4e9f4e949e98f85ca223a480a" translate="yes" xml:space="preserve">
          <source>, and there is such a default for the specified preference, the stored default will be &quot;exposed&quot; by this call, in the sense that it will be returned by a succeeding call to &lt;code&gt;get&lt;/code&gt;.</source>
          <target state="translated">지정된 기본 설정에 대해 이러한 기본값이 있으며, 저장된 기본값은이 호출에 의해 &quot;노출&quot;되며, 후속 호출에서 &lt;code&gt;get&lt;/code&gt; 으로 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="7eda71376b72a85462d6fe2f8502875f1488e6d0" translate="yes" xml:space="preserve">
          <source>, and this node in the preferences hierarchy contains any such defaults, the stored defaults will be &quot;exposed&quot; by this call, in the sense that they will be returned by succeeding calls to &lt;code&gt;get&lt;/code&gt;.</source>
          <target state="translated">기본 설정 계층의이 노드에는 이러한 기본값이 포함되어 있으며, 저장된 호출 된 기본값은이 호출에 의해 &quot;노출&quot;되며, &lt;code&gt;get&lt;/code&gt; 에 대한 후속 호출에 의해 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="f2fbae89902440e59b649704b182ba8c19e27db7" translate="yes" xml:space="preserve">
          <source>, and with any implementation of the interface &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt;. The example uses the class &lt;a href=&quot;notificationbroadcastersupport&quot;&gt;&lt;code&gt;NotificationBroadcasterSupport&lt;/code&gt;&lt;/a&gt; as an implementation of the interface &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">및 인터페이스의 구현 &lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt; . 예는 클래스 사용 &lt;a href=&quot;notificationbroadcastersupport&quot;&gt; &lt;code&gt;NotificationBroadcasterSupport&lt;/code&gt; 이&lt;/a&gt; 인터페이스의 구현으로 &lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7dc6d46deedf8e825d98f4cd3a089822a2f1d9cb" translate="yes" xml:space="preserve">
          <source>, and yet another one that implements</source>
          <target state="translated">을 구현하는 또 다른 하나</target>
        </trans-unit>
        <trans-unit id="04fd3ce4090f4960fe3a558e0eb99320ebc41d13" translate="yes" xml:space="preserve">
          <source>, approximately 1/72 of an inch.</source>
          <target state="translated">, 약 1/72 인치입니다.</target>
        </trans-unit>
        <trans-unit id="974438b0c9e5164c2d3e4ac917bb60be6be8fc6d" translate="yes" xml:space="preserve">
          <source>, are passed to the</source>
          <target state="translated">에 전달됩니다</target>
        </trans-unit>
        <trans-unit id="2a06bbd7c8dd0211d793f5e6f665c7d8dd6dbef4" translate="yes" xml:space="preserve">
          <source>, are thrown by the implementation where it can detect the specific error. Where the specific error cannot be detected then the more general &lt;code&gt;
 IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">, 특정 오류를 감지 할 수있는 구현에서 발생합니다. 특정 오류를 감지 할 수없는 경우보다 일반적인 &lt;code&gt; IOException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0043be54c356d1fd3935e6362a71f9def8aad3ff" translate="yes" xml:space="preserve">
          <source>, are thrown by the implementation where it can detect the specific error. Where the specific error cannot be detected then the more general &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">특정 오류를 감지 할 수있는 구현에서 발생합니다. 특정 오류를 감지 할 수없는 경우보다 일반적인 &lt;code&gt;IOException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9a029dd8a850fbfa90f10bdadaa98579364c7871" translate="yes" xml:space="preserve">
          <source>, as a &lt;a href=&quot;#cg&quot;&gt;non-capturing group&lt;/a&gt; with the given flags &lt;a href=&quot;#CASE_INSENSITIVE&quot;&gt;i&lt;/a&gt;&lt;a href=&quot;#UNIX_LINES&quot;&gt;d&lt;/a&gt;&lt;a href=&quot;#MULTILINE&quot;&gt;m&lt;/a&gt;&lt;a href=&quot;#DOTALL&quot;&gt;s&lt;/a&gt;&lt;a href=&quot;#UNICODE_CASE&quot;&gt;u&lt;/a&gt;&lt;a href=&quot;#COMMENTS&quot;&gt;x&lt;/a&gt; on - off</source>
          <target state="translated">, A와 &lt;a href=&quot;#cg&quot;&gt;비 - 포착 기&lt;/a&gt; 지정된 플래그 &lt;a href=&quot;#CASE_INSENSITIVE&quot;&gt;I &lt;/a&gt;&lt;a href=&quot;#UNIX_LINES&quot;&gt;거라고 &lt;/a&gt;&lt;a href=&quot;#MULTILINE&quot;&gt;m은 &lt;/a&gt;&lt;a href=&quot;#DOTALL&quot;&gt;s의 &lt;/a&gt;&lt;a href=&quot;#UNICODE_CASE&quot;&gt;유 &lt;/a&gt;&lt;a href=&quot;#COMMENTS&quot;&gt;X&lt;/a&gt; 에 - 오프</target>
        </trans-unit>
        <trans-unit id="1b81beca74ab44addcb454fa49bf88d656764947" translate="yes" xml:space="preserve">
          <source>, as a named-capturing group</source>
          <target state="translated">, 명명 된 캡처 그룹으로서</target>
        </trans-unit>
        <trans-unit id="875b06c9d949f71f43e1a2ed910da24de977ff83" translate="yes" xml:space="preserve">
          <source>, as a non-capturing group</source>
          <target state="translated">캡처하지 않은 그룹으로</target>
        </trans-unit>
        <trans-unit id="e542b26b56ebcf12c6a0ea2138ecdb1416dd6488" translate="yes" xml:space="preserve">
          <source>, as a single decimal digit, followed by '&lt;code&gt;.&lt;/code&gt;' (&lt;code&gt;'\u002E'&lt;/code&gt;), followed by decimal digits representing the fractional part of</source>
          <target state="translated">을 하나의 십진수로 표시 한 다음 ' &lt;code&gt;.&lt;/code&gt; '( &lt;code&gt;'\u002E'&lt;/code&gt; ) 뒤에 소수 부분을 나타내는 10 진수</target>
        </trans-unit>
        <trans-unit id="0dbd5de45f43cf66259004d8d9edb674bff9c17f" translate="yes" xml:space="preserve">
          <source>, as a single decimal digit, followed by the decimal separator followed by decimal digits representing the fractional part of</source>
          <target state="translated">, 단일 소수 자릿수, 소수 구분 기호, 소수 자릿수를 나타내는 소수 자릿수가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="70f0946ac3635139d8468967515df719d04e36b2" translate="yes" xml:space="preserve">
          <source>, as an independent, non-capturing group</source>
          <target state="translated">독립적 인 비 캡처 그룹으로서</target>
        </trans-unit>
        <trans-unit id="8363501d94b1f9621bc1609d2bbf89192a955cef" translate="yes" xml:space="preserve">
          <source>, as defined below. If a matching method is found, it is reflected.</source>
          <target state="translated">아래 정의 된대로 일치하는 방법을 찾으면 반영됩니다.</target>
        </trans-unit>
        <trans-unit id="a9828cee42ea70da6880c3c2225627b820f0905b" translate="yes" xml:space="preserve">
          <source>, as defined by the PKCS #8 standard; in this case, the returned format is &lt;code&gt;&quot;PKCS#8&quot;&lt;/code&gt;.</source>
          <target state="translated">PKCS # 8 표준에 의해 정의 된 바와 같이; 이 경우 반환되는 형식은 &lt;code&gt;&quot;PKCS#8&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bb69964a67a84a33158e0561c9751683a57fc14f" translate="yes" xml:space="preserve">
          <source>, as defined by the X.509 standard; in this case, the returned format is &lt;code&gt;&quot;X.509&quot;&lt;/code&gt;. Similarly, the name of the ASN.1 data format for private keys is</source>
          <target state="translated">X.509 표준에 정의 된대로; 이 경우 반환되는 형식은 &lt;code&gt;&quot;X.509&quot;&lt;/code&gt; 입니다. 마찬가지로 개인 키에 대한 ASN.1 데이터 형식의 이름은</target>
        </trans-unit>
        <trans-unit id="8d9f550ca3fd3444237c243deba0085765b0e38d" translate="yes" xml:space="preserve">
          <source>, as shown in the following figure.</source>
          <target state="translated">, 다음 그림과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c4187e1194cb98fb94fa28920baa8507101c5f5b" translate="yes" xml:space="preserve">
          <source>, as specified in &lt;a href=&quot;../../../../java.base/java/util/timer&quot;&gt;&lt;code&gt;Timer&lt;/code&gt;&lt;/a&gt;. In order to use</source>
          <target state="translated">, &lt;a href=&quot;../../../../java.base/java/util/timer&quot;&gt; &lt;code&gt;Timer&lt;/code&gt; 에&lt;/a&gt; 지정된대로 . 사용하기 위해</target>
        </trans-unit>
        <trans-unit id="56354f195066922bd12647eb478924cfb127018c" translate="yes" xml:space="preserve">
          <source>, as specified in &lt;a href=&quot;../../../java/util/timer&quot;&gt;&lt;code&gt;Timer&lt;/code&gt;&lt;/a&gt;. In order to use</source>
          <target state="translated">뿐만에 지정된 &lt;a href=&quot;../../../java/util/timer&quot;&gt; &lt;code&gt;Timer&lt;/code&gt; &lt;/a&gt; . 사용하기 위해</target>
        </trans-unit>
        <trans-unit id="79ecd09d07165c4cb709799501d156631dc9d678" translate="yes" xml:space="preserve">
          <source>, as well as with the Principals from the &lt;code&gt;Subject&lt;/code&gt; associated with this &lt;code&gt;SubjectDomainCombiner&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; 와 연관된 &lt;code&gt;Subject&lt;/code&gt; 의 프린시 펄 과 함께 .</target>
        </trans-unit>
        <trans-unit id="ab66b00fb889ab34420e0fe58faa98ea3fe188e3" translate="yes" xml:space="preserve">
          <source>, at least</source>
          <target state="translated">, 적어도</target>
        </trans-unit>
        <trans-unit id="a0d47475f9913b766a3b2973ceec1d23d2b5534a" translate="yes" xml:space="preserve">
          <source>, because those methods will now recognize an annotation of type</source>
          <target state="translated">이러한 메소드는 이제 유형의 주석을 인식하므로</target>
        </trans-unit>
        <trans-unit id="86a122648ac34ec875a8483709d679cf493e7608" translate="yes" xml:space="preserve">
          <source>, beginning after the specified delay.</source>
          <target state="translated">, 지정된 지연 후에 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="bf772ccad2efd31f6e9adfb4b71407a36857d4de" translate="yes" xml:space="preserve">
          <source>, beginning after the specified delay. Subsequent executions take place at approximately regular intervals separated by the specified period.</source>
          <target state="translated">지정된 지연 후에 시작합니다. 후속 실행은 지정된 기간으로 구분 된 대략 일정한 간격으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="0eb37cafec0b8d115d65397e4cd7ee822cd6ccdd" translate="yes" xml:space="preserve">
          <source>, beginning after the specified delay. Subsequent executions take place at approximately regular intervals, separated by the specified period.</source>
          <target state="translated">지정된 지연 후에 시작합니다. 후속 실행은 지정된 기간으로 구분 된 대략 일정한 간격으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="abcb8babbf0b8e5d6ab42545968ca0de4410d51d" translate="yes" xml:space="preserve">
          <source>, beginning at the specified time.</source>
          <target state="translated">, 지정된 시간에 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="bd2b43401ead6d5fc2672ab8d1e557c7f75e95c3" translate="yes" xml:space="preserve">
          <source>, beginning at the specified time. Subsequent executions take place at approximately regular intervals, separated by the specified period.</source>
          <target state="translated">지정된 시간부터 시작합니다. 후속 실행은 지정된 기간으로 구분 된 대략 일정한 간격으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="dede3fcec9d24efd69bab11e5e1f01fef5520b97" translate="yes" xml:space="preserve">
          <source>, but</source>
          <target state="translated">하지만</target>
        </trans-unit>
        <trans-unit id="843b02e011d93c8e355d37b64f94743f72e2e749" translate="yes" xml:space="preserve">
          <source>, but eliminates the references to the cancelled tasks from the queue. If there are no external references to these tasks, they become eligible for garbage collection.</source>
          <target state="translated">대기열에서 취소 된 작업에 대한 참조를 제거합니다. 이러한 작업에 대한 외부 참조가 없으면 가비지 수집 대상이됩니다.</target>
        </trans-unit>
        <trans-unit id="f58b8dd7fdf1dfab2dbf6f1f7bb72e10aba69220" translate="yes" xml:space="preserve">
          <source>, by simply providing and declaring an implementation of the &lt;a href=&quot;system.loggerfinder&quot;&gt;&lt;code&gt;System.LoggerFinder&lt;/code&gt;&lt;/a&gt; service.</source>
          <target state="translated">, &lt;a href=&quot;system.loggerfinder&quot;&gt; &lt;code&gt;System.LoggerFinder&lt;/code&gt; &lt;/a&gt; 서비스 의 구현을 제공하고 선언하기 만하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="694a1acd725475cc473bc780d7db667f519bc025" translate="yes" xml:space="preserve">
          <source>, each of which is defined by a class of interface (described by a &lt;code&gt;Class&lt;/code&gt; object) that all of its members must implement. The set of categories may be changed dynamically.</source>
          <target state="translated">각 멤버는 모든 멤버가 구현해야하는 인터페이스 클래스 ( &lt;code&gt;Class&lt;/code&gt; 객체로 설명)에 의해 정의됩니다 . 카테고리 세트는 동적으로 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c44e161b85d01d161e250e8a7899085708dc2f5" translate="yes" xml:space="preserve">
          <source>, each of which is defined by a class or interface (described by a &lt;code&gt;Class&lt;/code&gt; object) that all of its members must implement.</source>
          <target state="translated">, 각각은 모든 멤버가 구현해야하는 클래스 또는 인터페이스 ( &lt;code&gt;Class&lt;/code&gt; 객체로 설명 됨)에 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="90c700e477fafc3f7982cf636000f70250afcf08" translate="yes" xml:space="preserve">
          <source>, either the form defined in RFC 2732 or the literal IPv6 address format defined in RFC 2373 is accepted. A literal IPv6 address may also be qualified by appending a scoped zone identifier or scope_id. The syntax and usage of scope_ids is described &lt;a href=&quot;inet6address#scoped&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">RFC 2732에 정의 된 형식 또는 RFC 2373에 정의 된 리터럴 IPv6 주소 형식이 허용됩니다. 범위가 지정된 영역 식별자 또는 scope_id를 추가하여 리터럴 IPv6 주소를 규정 할 수도 있습니다. scope_ids의 구문과 사용법은 &lt;a href=&quot;inet6address#scoped&quot;&gt;여기&lt;/a&gt; 에 설명되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="454dac5dfbbdeff2896c46565dfb4c1dfc9e4375" translate="yes" xml:space="preserve">
          <source>, either the native format name, the standard format name, or one of those returned by &lt;code&gt;getExtraMetadataFormatNames&lt;/code&gt;).</source>
          <target state="translated">기본 형식 이름, 표준 형식 이름 또는 &lt;code&gt;getExtraMetadataFormatNames&lt;/code&gt; 에 의해 리턴되는 이름 중 하나 ).</target>
        </trans-unit>
        <trans-unit id="2b8b4efc6fd5cdcdcff7d79f0d5a1b38557b0a50" translate="yes" xml:space="preserve">
          <source>, etc. See &lt;a href=&quot;http://www.ietf.org/rfc/rfc2368.txt&quot;&gt;The mailto URL scheme (RFC 2368)&lt;/a&gt; for the &lt;code&gt;mailto:&lt;/code&gt; URI specification details.</source>
          <target state="translated">등. &lt;code&gt;mailto:&lt;/code&gt; URI 사양에 대한 자세한 내용 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2368.txt&quot;&gt;은 mailto URL 체계 (RFC 2368)&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b333e2fb20e71b19ec66c0298efdc6e22e515d17" translate="yes" xml:space="preserve">
          <source>, exactly</source>
          <target state="translated">, 바로 그거죠</target>
        </trans-unit>
        <trans-unit id="20aebde99a0362bd8db6faa6c462ebaa3dcc22c4" translate="yes" xml:space="preserve">
          <source>, except that underscores are not accepted between digits.</source>
          <target state="translated">자릿수 사이에는 밑줄을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fec1b75b97d1a0f1c9e182005c3b8da97bf4cc74" translate="yes" xml:space="preserve">
          <source>, except that underscores are not accepted between digits. If &lt;code&gt;s&lt;/code&gt; does not have the form of a</source>
          <target state="translated">자릿수 사이에는 밑줄을 사용할 수 없습니다. &lt;code&gt;s&lt;/code&gt; 의 형식이없는 경우</target>
        </trans-unit>
        <trans-unit id="08ea52d1d973d2e671106093233c202df27ac19d" translate="yes" xml:space="preserve">
          <source>, finally, is the inverse of resolution: For any two normalized URIs</source>
          <target state="translated">마지막으로 해결의 반대입니다. 정규화 된 두 URI의 경우</target>
        </trans-unit>
        <trans-unit id="0aeabc2293bac5ab24d1f3eeb0c20d55e4cfc60e" translate="yes" xml:space="preserve">
          <source>, followed by the exponent symbol &lt;code&gt;'e'&lt;/code&gt; (&lt;code&gt;'\u0065'&lt;/code&gt;), followed by the sign of the exponent, followed by a representation of</source>
          <target state="translated">, 지수 기호 &lt;code&gt;'e'&lt;/code&gt; ( &lt;code&gt;'\u0065'&lt;/code&gt; ), 지수 기호, 다음에</target>
        </trans-unit>
        <trans-unit id="7877cfc10fb2434c1aea0f5337d685185a36b469" translate="yes" xml:space="preserve">
          <source>, followed by the fully- qualified type of the parameter (excluding the last [] if the parameter is variable arity), followed by &quot;...&quot; if the parameter is variable arity, followed by a space, followed by the name of the parameter.</source>
          <target state="translated">, 매개 변수의 정규화 된 유형 (매개 변수가 변수 arity 인 경우 마지막 [] 제외), 매개 변수가 변수 arity 인 경우 &quot;...&quot;, 공백, 뒤에 공백 매개 변수.</target>
        </trans-unit>
        <trans-unit id="e3327bee40c96cf6887151ada0b4129755bb5c4a" translate="yes" xml:space="preserve">
          <source>, followed by the letter '&lt;code&gt;E&lt;/code&gt;' (&lt;code&gt;'\u0045'&lt;/code&gt;), followed by a representation of</source>
          <target state="translated">, 뒤에 문자 ' &lt;code&gt;E&lt;/code&gt; '( &lt;code&gt;'\u0045'&lt;/code&gt; ) 가오고 그 뒤에</target>
        </trans-unit>
        <trans-unit id="2a695ad85a7468f1f722be7deaad2247c9be4498" translate="yes" xml:space="preserve">
          <source>, for</source>
          <target state="translated">에 대한</target>
        </trans-unit>
        <trans-unit id="a3df9754726c60f78c54458f759aaf018fb2fabc" translate="yes" xml:space="preserve">
          <source>, for an array of &lt;code&gt;int&lt;/code&gt;s, this method would return &lt;code&gt;int.class&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 배열의 경우이 메소드는 &lt;code&gt;int.class&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="bff17ee683dabedee4bd04d7f04de8f0c05e0f5b" translate="yes" xml:space="preserve">
          <source>, for example if it was obtained from a file-output stream that was created by invoking the &lt;a href=&quot;../../io/fileoutputstream#%3Cinit%3E(java.io.File,boolean)&quot;&gt;&lt;code&gt;FileOutputStream(File,boolean)&lt;/code&gt;&lt;/a&gt; constructor and passing &lt;code&gt;true&lt;/code&gt; for the second parameter. In this mode each invocation of a relative write operation first advances the position to the end of the file and then writes the requested data. Whether the advancement of the position and the writing of the data are done in a single atomic operation is system-dependent and therefore unspecified.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;../../io/fileoutputstream#%3Cinit%3E(java.io.File,boolean)&quot;&gt; &lt;code&gt;FileOutputStream(File,boolean)&lt;/code&gt; &lt;/a&gt; 생성자 를 호출 하고 두 번째 매개 변수에 대해 &lt;code&gt;true&lt;/code&gt; 를 전달 하여 생성 된 파일 출력 스트림에서 가져온 경우 입니다. 이 모드에서 상대 쓰기 작업의 각 호출은 먼저 위치를 파일의 끝으로 이동 한 다음 요청 된 데이터를 씁니다. 위치의 향상과 데이터의 쓰기가 단일 원자 적 작업으로 수행되는지 여부는 시스템에 따라 다르므로 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e51d09b9da76bb79e59f47f1b3e9d5fd2a8939ce" translate="yes" xml:space="preserve">
          <source>, for example if it was obtained from a file-output stream that was created by invoking the &lt;a href=&quot;../../io/fileoutputstream#FileOutputStream-java.io.File-boolean-&quot;&gt;&lt;code&gt;FileOutputStream(File,boolean)&lt;/code&gt;&lt;/a&gt; constructor and passing &lt;code&gt;true&lt;/code&gt; for the second parameter. In this mode each invocation of a relative write operation first advances the position to the end of the file and then writes the requested data. Whether the advancement of the position and the writing of the data are done in a single atomic operation is system-dependent and therefore unspecified.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;../../io/fileoutputstream#FileOutputStream-java.io.File-boolean-&quot;&gt; &lt;code&gt;FileOutputStream(File,boolean)&lt;/code&gt; &lt;/a&gt; 생성자 를 호출 하고 두 번째 매개 변수에 대해 &lt;code&gt;true&lt;/code&gt; 를 전달 하여 작성된 파일 출력 스트림에서 얻은 경우 입니다. 이 모드에서 상대 쓰기 조작의 각 호출은 먼저 파일의 끝으로 위치를 전진 한 다음 요청 된 데이터를 씁니다. 위치의 발전과 데이터 쓰기가 단일 원자 작업으로 수행되는지 여부는 시스템에 따라 다르므로 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="71eccd0f370b360ca3c6e5f4b72fb2b886dc624c" translate="yes" xml:space="preserve">
          <source>, for example, &lt;code&gt;
 &quot;java.lang&quot;&lt;/code&gt;. The map value is the non-empty set of modules that the package should be exported or opened to.</source>
          <target state="translated">예 : &lt;code&gt; &quot;java.lang&quot;&lt;/code&gt; . 맵 값은 패키지를 내보내거나 열어야하는 비어 있지 않은 모듈 집합입니다.</target>
        </trans-unit>
        <trans-unit id="6024f3e6951f6d7ab39f42d4ef85fb11657cdc22" translate="yes" xml:space="preserve">
          <source>, for example, &lt;code&gt;&quot;java.lang&quot;&lt;/code&gt;.</source>
          <target state="translated">예 : &lt;code&gt;&quot;java.lang&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eaccb9c36e4b198ec0e91dd375d8cfe9723ac6e7" translate="yes" xml:space="preserve">
          <source>, for example, &lt;code&gt;java.lang&lt;/code&gt;</source>
          <target state="translated">예를 들어, &lt;code&gt;java.lang&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="86c30a42c8d336c2cbdaf1f5fb1abb0e7394f514" translate="yes" xml:space="preserve">
          <source>, for which:</source>
          <target state="translated">을 위해 :</target>
        </trans-unit>
        <trans-unit id="088241d72683330337e427a29e7001fec28f6de0" translate="yes" xml:space="preserve">
          <source>, gives the SQL name of the user-defined type. As is true with the other setter methods, the number of the placeholder parameter to be set is indicated by an element's position in the array returned by &lt;code&gt;getParams&lt;/code&gt;. So, for example, if the parameter supplied to &lt;code&gt;setNull&lt;/code&gt; is &lt;code&gt;2&lt;/code&gt;, the second element in the array returned by &lt;code&gt;getParams&lt;/code&gt; will be an array of two or three elements.</source>
          <target state="translated">, 사용자 정의 유형의 SQL 이름을 제공합니다. 다른 setter 메소드와 마찬가지로 설정할 자리 표시 자 매개 변수의 수는 &lt;code&gt;getParams&lt;/code&gt; 가 반환하는 배열에서 요소의 위치로 표시됩니다 . 따라서 예를 들어 &lt;code&gt;setNull&lt;/code&gt; 에 제공된 매개 변수 가 &lt;code&gt;2&lt;/code&gt; 이면 &lt;code&gt;getParams&lt;/code&gt; 에서 반환 하는 배열의 두 번째 요소는 두 개 또는 세 개의 요소로 구성된 배열이됩니다.</target>
        </trans-unit>
        <trans-unit id="eb060e2440a623b7127d458808183275f0865ff1" translate="yes" xml:space="preserve">
          <source>, headers must be represented by a single entry in the given map, whose entry value is a list that represents the multiple header string values. Leading and trailing whitespaces are removed from all string values retrieved from the given map and its lists before processing. Only headers that, after filtering, contain at least one, possibly empty string, value will be added to the HTTP headers.</source>
          <target state="translated">, 헤더는 지정된 맵에서 단일 항목으로 표시되어야하며 항목 값은 여러 헤더 문자열 값을 나타내는 목록입니다. 처리하기 전에 지정된 맵과 해당 목록에서 검색된 모든 문자열 값에서 선행 및 후행 공백이 제거됩니다. 필터링 후 하나 이상의 빈 문자열 값을 포함하는 헤더 만 HTTP 헤더에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="d6300f02fefcb5b37063a69e707f2016b9362434" translate="yes" xml:space="preserve">
          <source>, if &lt;code&gt;getObjectValueType(elementName) == VALUE_NONE&lt;/code&gt;).</source>
          <target state="translated">, 만약 &lt;code&gt;getObjectValueType(elementName) == VALUE_NONE&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9362ee1934fb40bdae5f5d44336917328731c6a8" translate="yes" xml:space="preserve">
          <source>, if a call to AccessController.doPrivileged(...,</source>
          <target state="translated">AccessController.doPrivileged (...,</target>
        </trans-unit>
        <trans-unit id="ec453c999f73e8399dfa3f0d34c72a4ae5347791" translate="yes" xml:space="preserve">
          <source>, if an attempt to resolve a symbolic reference fails because of a linkage error, then subsequent attempts to resolve the reference always fail with the same error that was thrown as a result of the initial resolution attempt.</source>
          <target state="translated">, 연결 오류로 인해 기호 참조를 확인하려는 시도가 실패하면 이후 참조 확인 시도가 항상 초기 확인 시도의 결과로 발생한 동일한 오류와 함께 실패합니다.</target>
        </trans-unit>
        <trans-unit id="00ddb1378852a244d903e9eab961f9204a505d2d" translate="yes" xml:space="preserve">
          <source>, if the lookup class has permission.</source>
          <target state="translated">, 조회 클래스에 권한이있는 경우.</target>
        </trans-unit>
        <trans-unit id="eefaebe43af2117ce1d0ad8597a08ff4734eed27" translate="yes" xml:space="preserve">
          <source>, if the lookup class has permission. If</source>
          <target state="translated">조회 클래스에 권한이있는 경우 만약</target>
        </trans-unit>
        <trans-unit id="79776b2ce470fb73b209afe8c5d840b8ef447505" translate="yes" xml:space="preserve">
          <source>, in decimal form with no leading zeroes, followed by '&lt;code&gt;.&lt;/code&gt;' (&lt;code&gt;'\u002E'&lt;/code&gt;), followed by one or more decimal digits representing the fractional part of</source>
          <target state="translated">앞에 0이없는 10 진수 형식의 뒤에 '가옵니다 &lt;code&gt;.&lt;/code&gt; '( &lt;code&gt;'\u002E'&lt;/code&gt; ) 뒤에 소수 부분을 나타내는 하나 이상의 10 진수</target>
        </trans-unit>
        <trans-unit id="2de82fbfba759b7eb3508491e56038c8aaa9c360" translate="yes" xml:space="preserve">
          <source>, in one of two general ways:</source>
          <target state="translated">일반적인 두 가지 방법 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="d401d6d64634170e8ce2695fe2059e05111df4b2" translate="yes" xml:space="preserve">
          <source>, in which case it uses the standard mapping. This version of the method &lt;code&gt;getResultSet&lt;/code&gt; uses either the given type map or the standard mapping; it never uses the type map associated with the connection.</source>
          <target state="translated">,이 경우 표준 매핑을 사용합니다. 이 버전의 &lt;code&gt;getResultSet&lt;/code&gt; 메소드 는 주어진 유형 맵 또는 표준 매핑을 사용합니다. 연결과 연관된 유형 맵을 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e2e118137a7db4a855c668357e49afd56ac2d389" translate="yes" xml:space="preserve">
          <source>, input sequence</source>
          <target state="translated">입력 순서</target>
        </trans-unit>
        <trans-unit id="741b189761eb4e16940c241bb5c165c8dfb97881" translate="yes" xml:space="preserve">
          <source>, is a valid input string for the name type, KRB_NT_PRINCIPAL where</source>
          <target state="translated">, 이름 유형 KRB_NT_PRINCIPAL에 유효한 입력 문자열입니다. 여기서</target>
        </trans-unit>
        <trans-unit id="19364d8f1599936525044fe8e17f4d62b2a7217e" translate="yes" xml:space="preserve">
          <source>, is added the edit &lt;b&gt;D&lt;/b&gt; is removed from the list (after having &lt;code&gt;die&lt;/code&gt; invoked on it). If</source>
          <target state="translated">, 편집 &lt;b&gt;D&lt;/b&gt; 가 목록에서 제거됩니다 ( &lt;code&gt;die&lt;/code&gt; 가 호출 된 후). 만약</target>
        </trans-unit>
        <trans-unit id="0e073ec547d240692aa519b36187b1455d65964c" translate="yes" xml:space="preserve">
          <source>, is established.</source>
          <target state="translated">,가 설립되었습니다.</target>
        </trans-unit>
        <trans-unit id="24437a761b945a58e0d6973f39dd87e5a7bab90b" translate="yes" xml:space="preserve">
          <source>, is present and any of the following conditions is met:</source>
          <target state="translated">가 존재하고 다음 조건 중 하나가 충족됩니다.</target>
        </trans-unit>
        <trans-unit id="06cf78b6ecac9e983de1625ea75605c14d7a9fb9" translate="yes" xml:space="preserve">
          <source>, is present and the caller's class loader is not the same as or an ancestor of the class loader for that returned class and invocation of &lt;a href=&quot;securitymanager#checkPackageAccess(java.lang.String)&quot;&gt;&lt;code&gt;s.checkPackageAccess()&lt;/code&gt;&lt;/a&gt; denies access to the package of that returned class</source>
          <target state="translated">,이 존재하고 호출자의 클래스 로더가 해당 반환 된 클래스에 대한 클래스 로더의 조상과 &lt;a href=&quot;securitymanager#checkPackageAccess(java.lang.String)&quot;&gt; &lt;code&gt;s.checkPackageAccess()&lt;/code&gt; &lt;/a&gt; 않거나 s.checkPackageAccess () 호출이 반환 된 클래스 의 패키지에 대한 액세스를 거부합니다.</target>
        </trans-unit>
        <trans-unit id="02263e654ed8bf9cd7f15c4c8c9ce9de324fb824" translate="yes" xml:space="preserve">
          <source>, is present and the caller's class loader is not the same as or an ancestor of the class loader for the class of the &lt;a href=&quot;#getObject()&quot;&gt;object&lt;/a&gt; being serialized and invocation of &lt;a href=&quot;../../../../../java.base/java/lang/securitymanager#checkPackageAccess(java.lang.String)&quot;&gt;&lt;code&gt;s.checkPackageAccess()&lt;/code&gt;&lt;/a&gt; denies access to the package of that class.</source>
          <target state="translated">가 존재하고 호출자의 클래스 로더가 직렬화 되는 &lt;a href=&quot;#getObject()&quot;&gt;객체&lt;/a&gt; 의 클래스에 대한 클래스 로더의 조상과 같지 않거나 &lt;a href=&quot;../../../../../java.base/java/lang/securitymanager#checkPackageAccess(java.lang.String)&quot;&gt; &lt;code&gt;s.checkPackageAccess()&lt;/code&gt; &lt;/a&gt; 호출 이 해당 클래스의 패키지에 대한 액세스를 거부합니다.</target>
        </trans-unit>
        <trans-unit id="ae8edff53b54b3a2d28d915b70be185e16defbee" translate="yes" xml:space="preserve">
          <source>, is present and the caller's class loader is not the same as or an ancestor of the class loader for the current class and invocation of &lt;a href=&quot;securitymanager#checkPackageAccess(java.lang.String)&quot;&gt;&lt;code&gt;s.checkPackageAccess()&lt;/code&gt;&lt;/a&gt; denies access to the package of this class.</source>
          <target state="translated">,이 존재하고 호출자의 클래스 로더가 현재 클래스에 대한 클래스 로더의 조상과 &lt;a href=&quot;securitymanager#checkPackageAccess(java.lang.String)&quot;&gt; &lt;code&gt;s.checkPackageAccess()&lt;/code&gt; &lt;/a&gt; 않거나 s.checkPackageAccess () 호출 이이 클래스의 패키지에 대한 액세스를 거부합니다.</target>
        </trans-unit>
        <trans-unit id="bd70f685efe70843358b66c02e536e4f727b4bb2" translate="yes" xml:space="preserve">
          <source>, is present and the caller's class loader is not the same as or an ancestor of the class loader for the current class and invocation of &lt;a href=&quot;securitymanager#checkPackageAccess-java.lang.String-&quot;&gt;&lt;code&gt;s.checkPackageAccess()&lt;/code&gt;&lt;/a&gt; denies access to the package of this class.</source>
          <target state="translated">이 있고 호출자의 클래스 로더가 현재 클래스에 대한 클래스 로더의 조상과 &lt;a href=&quot;securitymanager#checkPackageAccess-java.lang.String-&quot;&gt; &lt;code&gt;s.checkPackageAccess()&lt;/code&gt; &lt;/a&gt; 않거나 s.checkPackageAccess ()를 호출 하면이 클래스의 패키지에 대한 액세스가 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="49eced84301361068bffd9551ff02ce829dc63a3" translate="yes" xml:space="preserve">
          <source>, is present and the caller's class loader is not the same as or an ancestor of the class loader for the declaring class and invocation of &lt;a href=&quot;securitymanager#checkPackageAccess(java.lang.String)&quot;&gt;&lt;code&gt;s.checkPackageAccess()&lt;/code&gt;&lt;/a&gt; denies access to the package of the declaring class</source>
          <target state="translated">,이 존재하고 호출자의 클래스 로더가 클래스를 선언하는 클래스 로더의 조상과 &lt;a href=&quot;securitymanager#checkPackageAccess(java.lang.String)&quot;&gt; &lt;code&gt;s.checkPackageAccess()&lt;/code&gt; &lt;/a&gt; 않거나 s.checkPackageAccess () 호출이 선언하는 클래스 의 패키지에 대한 액세스를 거부합니다.</target>
        </trans-unit>
        <trans-unit id="61e308a430f828474d15152652912bbbd2c94ffb" translate="yes" xml:space="preserve">
          <source>, is present and the caller's class loader is not the same as or an ancestor of the class loader for the declaring class and invocation of &lt;a href=&quot;securitymanager#checkPackageAccess-java.lang.String-&quot;&gt;&lt;code&gt;s.checkPackageAccess()&lt;/code&gt;&lt;/a&gt; denies access to the package of the declaring class</source>
          <target state="translated">이 있고 호출자의 클래스 로더가 선언 클래스 및 &lt;a href=&quot;securitymanager#checkPackageAccess-java.lang.String-&quot;&gt; &lt;code&gt;s.checkPackageAccess()&lt;/code&gt; &lt;/a&gt; 호출에 대한 클래스 로더의 조상과 같지 않거나 상위 클래스가 아니므로 선언 클래스 의 패키지에 대한 액세스가 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="f4c256ff9cd060df05bd4f1629302535ddecce4c" translate="yes" xml:space="preserve">
          <source>, is present and the caller's class loader is not the same as or an ancestor of the class loader for the enclosing class and invocation of &lt;a href=&quot;securitymanager#checkPackageAccess(java.lang.String)&quot;&gt;&lt;code&gt;s.checkPackageAccess()&lt;/code&gt;&lt;/a&gt; denies access to the package of the enclosing class</source>
          <target state="translated">,이 존재하고 호출자의 클래스 로더가 둘러싸는 클래스에 대한 클래스 로더의 조상과 &lt;a href=&quot;securitymanager#checkPackageAccess(java.lang.String)&quot;&gt; &lt;code&gt;s.checkPackageAccess()&lt;/code&gt; &lt;/a&gt; 않거나 s.checkPackageAccess () 호출이 둘러싸는 클래스 의 패키지에 대한 액세스를 거부합니다.</target>
        </trans-unit>
        <trans-unit id="ed3faecf43958338a5f4991051cd3f86d3dbffb7" translate="yes" xml:space="preserve">
          <source>, is present and the caller's class loader is not the same as or an ancestor of the class loader for the enclosing class and invocation of &lt;a href=&quot;securitymanager#checkPackageAccess-java.lang.String-&quot;&gt;&lt;code&gt;s.checkPackageAccess()&lt;/code&gt;&lt;/a&gt; denies access to the package of the enclosing class</source>
          <target state="translated">이 있고 호출자의 클래스 로더가 클래스의 클래스 로더와 동일하거나 &lt;a href=&quot;securitymanager#checkPackageAccess-java.lang.String-&quot;&gt; &lt;code&gt;s.checkPackageAccess()&lt;/code&gt; &lt;/a&gt; 클래스가 아니고 s.checkPackageAccess ()의 호출이 클래스 의 패키지에 대한 액세스를 거부합니다.</target>
        </trans-unit>
        <trans-unit id="29ada5558afb5e9d9d9f141febbd4489a74756a7" translate="yes" xml:space="preserve">
          <source>, is present and the caller's class loader is not the same as or an ancestor of the class loader for the returned class and invocation of &lt;a href=&quot;securitymanager#checkPackageAccess(java.lang.String)&quot;&gt;&lt;code&gt;s.checkPackageAccess()&lt;/code&gt;&lt;/a&gt; denies access to the package of the returned class</source>
          <target state="translated">,가 있고 호출자의 클래스 로더가 반환 된 클래스에 대한 클래스 로더의 조상과 &lt;a href=&quot;securitymanager#checkPackageAccess(java.lang.String)&quot;&gt; &lt;code&gt;s.checkPackageAccess()&lt;/code&gt; &lt;/a&gt; 않거나 s.checkPackageAccess () 호출이 반환 된 클래스 의 패키지에 대한 액세스를 거부합니다.</target>
        </trans-unit>
        <trans-unit id="dfd0064166206055137557b96e90b09eccade536" translate="yes" xml:space="preserve">
          <source>, it is always the case that</source>
          <target state="translated">항상 그런 경우입니다</target>
        </trans-unit>
        <trans-unit id="e880934765c070ad8d047da8221457a68c3b1fdc" translate="yes" xml:space="preserve">
          <source>, it is guaranteed that</source>
          <target state="translated">, 보장된다</target>
        </trans-unit>
        <trans-unit id="58ffcfdb3d9a084c7beefb46178f4683da7f3762" translate="yes" xml:space="preserve">
          <source>, it is returned in preference to the specified default.</source>
          <target state="translated">지정된 기본 설정보다 우선적으로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="73c3e2d189542da4215e49616bb87b3831d2069c" translate="yes" xml:space="preserve">
          <source>, it returns &lt;code&gt;new ImageReadParam()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;new ImageReadParam()&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3e694430f92ce7093a1ce2ce1fd7a569e41af5e1" translate="yes" xml:space="preserve">
          <source>, it should generally be passed in to a GSSContext that will use provider</source>
          <target state="translated">, 일반적으로 provider를 사용할 GSSContext에 전달되어야합니다.</target>
        </trans-unit>
        <trans-unit id="0441c0427b4f54df21de8e245e5b229c8c164168" translate="yes" xml:space="preserve">
          <source>, its default, min, max and legal values, and its Descriptor).</source>
          <target state="translated">, 기본값, 최소, 최대 및 유효한 값 및 설명자).</target>
        </trans-unit>
        <trans-unit id="208cc3af9b649b285a127d16cbb86657333f1d98" translate="yes" xml:space="preserve">
          <source>, meaning that if one program locks a region of a file then other programs are actually prevented from accessing that region in a way that would violate the lock. On yet other systems, whether native file locks are advisory or mandatory is configurable on a per-file basis. To ensure consistent and correct behavior across platforms, it is strongly recommended that the locks provided by this API be used as if they were advisory locks.</source>
          <target state="translated">즉, 한 프로그램이 파일의 영역을 잠그면 다른 프로그램은 실제로 잠금을 위반하는 방식으로 해당 영역에 액세스 할 수 없습니다. 다른 시스템에서는 기본 파일 잠금이 권고 또는 필수인지 여부를 파일별로 구성 할 수 있습니다. 플랫폼 전체에서 일관되고 올바른 동작을 보장하려면이 API에서 제공하는 잠금을 권고 잠금 인 것처럼 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f2586aa23164a92f5a379a1a276ddb08f500b1df" translate="yes" xml:space="preserve">
          <source>, meaning that programs must cooperatively observe a known locking protocol in order to guarantee data integrity. On other systems native file locks are</source>
          <target state="translated">이는 데이터 무결성을 보장하기 위해 프로그램이 알려진 잠금 프로토콜을 협력 적으로 준수해야 함을 의미합니다. 다른 시스템에서 기본 파일 잠금은</target>
        </trans-unit>
        <trans-unit id="0c1bb2d7f275c5c23ccc7c7b9500e2c559491884" translate="yes" xml:space="preserve">
          <source>, nesting is not allowed).</source>
          <target state="translated">, 중첩은 허용되지 않습니다).</target>
        </trans-unit>
        <trans-unit id="ee279ae874ca29ce44b236e216c94ec0f8c878eb" translate="yes" xml:space="preserve">
          <source>, once or not at all</source>
          <target state="translated">한 번 또는 전혀</target>
        </trans-unit>
        <trans-unit id="c01cf2cc151e96346bc14b405edd6b6ace203537" translate="yes" xml:space="preserve">
          <source>, one for</source>
          <target state="translated">, 하나</target>
        </trans-unit>
        <trans-unit id="33a1770c226ef379427a50f1ec1ef2f8e1acea89" translate="yes" xml:space="preserve">
          <source>, one for every node in the subtree rooted at the removed node.)</source>
          <target state="translated">하위 트리의 모든 노드에 대해 하나씩 제거 된 노드를 기반으로합니다.)</target>
        </trans-unit>
        <trans-unit id="b376fbd7f599d9558f5c4aced7bfb6c5a819df5b" translate="yes" xml:space="preserve">
          <source>, one or more times</source>
          <target state="translated">, 한 번 이상</target>
        </trans-unit>
        <trans-unit id="046cbd082d4cd86a329c6108770fbe1ac46858f2" translate="yes" xml:space="preserve">
          <source>, one that implements</source>
          <target state="translated">구현하는 것</target>
        </trans-unit>
        <trans-unit id="4d95a524190b5acabd52ef01621af533e38c8b51" translate="yes" xml:space="preserve">
          <source>, only the rows in &lt;code&gt;ESSP_BONUS_PLAN&lt;/code&gt; whose &lt;code&gt;EMP_ID&lt;/code&gt; value matches an &lt;code&gt;EMP_ID&lt;/code&gt; value in the &lt;code&gt;EMPLOYEES&lt;/code&gt; table are added. In this case, everyone in the bonus plan is an employee, so all of the rows in the table &lt;code&gt;ESSP_BONUS_PLAN&lt;/code&gt; are added to the &lt;code&gt;JoinRowSet&lt;/code&gt; object. In this example, both &lt;code&gt;CachedRowSet&lt;/code&gt; objects being added have implemented the &lt;code&gt;Joinable&lt;/code&gt; interface and can therefore call the &lt;code&gt;Joinable&lt;/code&gt; method &lt;code&gt;setMatchColumn&lt;/code&gt;.</source>
          <target state="translated">, &lt;code&gt;EMP_ID&lt;/code&gt; 값이 &lt;code&gt;EMPLOYEES&lt;/code&gt; 테이블 의 &lt;code&gt;EMP_ID&lt;/code&gt; 값과 일치하는 &lt;code&gt;ESSP_BONUS_PLAN&lt;/code&gt; 의 행만 추가됩니다. 이 경우 보너스 플랜의 모든 사람이 직원이므로 &lt;code&gt;ESSP_BONUS_PLAN&lt;/code&gt; 테이블의 모든 행 이 &lt;code&gt;JoinRowSet&lt;/code&gt; 개체에 추가됩니다 . 이 예제에서 추가되는 &lt;code&gt;CachedRowSet&lt;/code&gt; 객체는 모두 &lt;code&gt;Joinable&lt;/code&gt; 인터페이스를 구현했으며 따라서 &lt;code&gt;Joinable&lt;/code&gt; 메서드 &lt;code&gt;setMatchColumn&lt;/code&gt; 을 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b366d1a229ec84d93ba42e7ecafb33db5b7b9b39" translate="yes" xml:space="preserve">
          <source>, or</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="1845a902ca24e2f4c855c8b34fca82fdcd1b4276" translate="yes" xml:space="preserve">
          <source>, or (3)</source>
          <target state="translated">, 또는 (3)</target>
        </trans-unit>
        <trans-unit id="e8d84cfff2993e2da0567d4dde89298b9718c61e" translate="yes" xml:space="preserve">
          <source>, or (3) a &lt;code&gt;RowSet&lt;/code&gt; object being added violates the active &lt;code&gt;JOIN&lt;/code&gt;</source>
          <target state="translated">, 또는 (3) 추가 되는 &lt;code&gt;RowSet&lt;/code&gt; 객체가 활성 &lt;code&gt;JOIN&lt;/code&gt; 을 위반합니다.</target>
        </trans-unit>
        <trans-unit id="8564c713e7d29f20aa22c41be8d6ddaadc18063e" translate="yes" xml:space="preserve">
          <source>, or &lt;code&gt;null&lt;/code&gt; if the subprocess should inherit the environment of the current process.</source>
          <target state="translated">또는 &lt;code&gt;null&lt;/code&gt; 서브 프로세스는 현재의 프로세스의 환경을 상속해야합니다.</target>
        </trans-unit>
        <trans-unit id="c7b64b8546f1c0e65b0fa41e95201f2f1638166c" translate="yes" xml:space="preserve">
          <source>, or may decide to provide more generic classes representing sub-transformations corresponding to</source>
          <target state="translated">또는에 해당하는 하위 변환을 나타내는보다 일반적인 클래스를 제공하기로 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e12bdfed60ba24ce67309e2c531cdf42ffb6f56" translate="yes" xml:space="preserve">
          <source>, or null if there are no entries.</source>
          <target state="translated">, 또는 항목이없는 경우 null</target>
        </trans-unit>
        <trans-unit id="e9d7132513f372280cdb173229cf92f2456bb14d" translate="yes" xml:space="preserve">
          <source>, or the thread interrupted during the read, is highly input stream specific, and therefore not specified.</source>
          <target state="translated">또는 읽기 중에 인터럽트 된 스레드는 입력 스트림에 따라 다르므로 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b9dbc5eae30382e9c044a16643d897a6973dcbd5" translate="yes" xml:space="preserve">
          <source>, or the thread interrupted during the transfer, is highly input and output stream specific, and therefore not specified.</source>
          <target state="translated">, 또는 전송 중에 인터럽트 된 스레드는 입력 및 출력 스트림에 따라 다르므로 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6d6bba88e585076b2d75f857a3aa9f916bcb7b6b" translate="yes" xml:space="preserve">
          <source>, or the thread interrupted during the transfer, is highly reader and writer specific, and therefore not specified.</source>
          <target state="translated">, 또는 전송 중에 중단 된 스레드는 읽기 및 쓰기에 따라 다르므로 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="54426ccb2d8d7627bdfba52aab0c7fdef2667406" translate="yes" xml:space="preserve">
          <source>, or what is currently displayed on the device; this is called</source>
          <target state="translated">또는 현재 장치에 표시된 내용 이것은 ... 불리운다</target>
        </trans-unit>
        <trans-unit id="f280accc251e25abdbf20dae6a4ac65b2f88d364" translate="yes" xml:space="preserve">
          <source>, rather than parts of the</source>
          <target state="translated">의 일부가 아닌</target>
        </trans-unit>
        <trans-unit id="066940207141811889f3f4aee6af92f171a21427" translate="yes" xml:space="preserve">
          <source>, regardless of what thread it is used on.</source>
          <target state="translated">, 사용되는 스레드에 관계없이.</target>
        </trans-unit>
        <trans-unit id="b71bceff18ca46e099c53b914fe4fbfa5ef9927f" translate="yes" xml:space="preserve">
          <source>, removing a node exposes any stored defaults at or below this node. Thus, a subsequent call to &lt;code&gt;nodeExists&lt;/code&gt; on this node's path name may return &lt;code&gt;true&lt;/code&gt;, and a subsequent call to &lt;code&gt;node&lt;/code&gt; on this path name may return a (different) &lt;code&gt;Preferences&lt;/code&gt; instance representing a non-empty collection of preferences and/or children.</source>
          <target state="translated">노드를 제거하면이 노드에서 또는 아래에 저장된 기본값이 노출됩니다. 따라서이 노드의 경로 이름에있는 &lt;code&gt;nodeExists&lt;/code&gt; 에 대한 후속 호출 은 &lt;code&gt;true&lt;/code&gt; 를 리턴 할 수 있으며이 경로 이름 에있는 &lt;code&gt;node&lt;/code&gt; 에 대한 후속 호출은 비어 있지 않은 환경 설정 및 / 또는 하위 콜렉션을 나타내는 (다른) &lt;code&gt;Preferences&lt;/code&gt; 인스턴스를 리턴 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="12d501570d9936bde7534d9241ac0db13d604a8d" translate="yes" xml:space="preserve">
          <source>, respectively.</source>
          <target state="translated">각각.</target>
        </trans-unit>
        <trans-unit id="fa3d7ae0e62726bccbcf3b38a98da1efa58575f1" translate="yes" xml:space="preserve">
          <source>, results in an &lt;code&gt;UnmodifiableSetException&lt;/code&gt;. The unmodifiable view object</source>
          <target state="translated">, 결과 &lt;code&gt;UnmodifiableSetException&lt;/code&gt; . 수정할 수없는보기 개체</target>
        </trans-unit>
        <trans-unit id="a81e6f25fe2b2f2b16c8b6eff5fc87d6f61dd886" translate="yes" xml:space="preserve">
          <source>, results in an UnmodifiableSetException. The unmodifiable view object</source>
          <target state="translated">이면 UnmodifiableSetException이 발생합니다. 수정 불가능한 뷰 객체</target>
        </trans-unit>
        <trans-unit id="26f4ecd5b63a9dcc4f72e75ff6ea0b3411aa04af" translate="yes" xml:space="preserve">
          <source>, returning elements reflecting the state of the queue at some point at or since the creation of the iterator. They do &lt;em&gt;not&lt;/em&gt; throw &lt;a href=&quot;../concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;, and may proceed concurrently with other operations. Elements contained in the queue since the creation of the iterator will be returned exactly once.</source>
          <target state="translated">이터레이터를 생성 한 이후 또는 이후 큐 상태를 반영하는 요소를 반환합니다. 그들은 할 &lt;em&gt;수 없습니다&lt;/em&gt; 던져 &lt;a href=&quot;../concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; 를&lt;/a&gt; 하고, 다른 작업과 동시에 진행할 수있다. 반복자 작성 이후 큐에 포함 된 요소는 정확히 한 번 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="87149554efd9a60c1fbcd11861fa5d011e7a7ab6" translate="yes" xml:space="preserve">
          <source>, section 13.1 &quot;The Form of a Binary&quot;.</source>
          <target state="translated">섹션 13.1 &quot;이진 형식&quot;.</target>
        </trans-unit>
        <trans-unit id="076a217b54b13721449e0cb087406a4e2f2ec3e0" translate="yes" xml:space="preserve">
          <source>, section 3.2.1.</source>
          <target state="translated">섹션 3.2.1.</target>
        </trans-unit>
        <trans-unit id="f8beea222e7ff90a24d3b40def98645d5c619549" translate="yes" xml:space="preserve">
          <source>, section 3.4.1, subsection C, algorithm P. Note that it generates two independent values at the cost of only one call to &lt;code&gt;StrictMath.log&lt;/code&gt; and one call to &lt;code&gt;StrictMath.sqrt&lt;/code&gt;.</source>
          <target state="translated">섹션 3.4.1, C 항, 그것은 단 하나의 호출의 비용이 두 개의 독립적 인 값을 생성하는 알고리즘 P. 참고 &lt;code&gt;StrictMath.log&lt;/code&gt; 및 하나의 호 &lt;code&gt;StrictMath.sqrt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8d7a67f47ce10e89a143c549e1c8c5b75520ddb" translate="yes" xml:space="preserve">
          <source>, section 6.2 &quot;Names and Identifiers&quot;.</source>
          <target state="translated">섹션 6.2 &quot;이름과 식별자&quot;.</target>
        </trans-unit>
        <trans-unit id="a7ba3fe9ac2c7b168f8cc815bdabe05b8c9b30e7" translate="yes" xml:space="preserve">
          <source>, shows the code required to update two column values in the current row and also update the &lt;code&gt;RowSet&lt;/code&gt; object's underlying data source.</source>
          <target state="translated">, 현재 행에서 두 개의 열 값을 업데이트하고 &lt;code&gt;RowSet&lt;/code&gt; 객체의 기본 데이터 소스 도 업데이트하는 데 필요한 코드를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="d5da2f83ca72572e2a3cc2cadfb4a939ad6c066f" translate="yes" xml:space="preserve">
          <source>, so it is capable of keeping an application from terminating. If a caller wants to terminate a timer's task execution thread rapidly, the caller should invoke the timer's &lt;code&gt;cancel&lt;/code&gt; method.</source>
          <target state="translated">따라서 응용 프로그램이 종료되지 않도록 할 수 있습니다. 호출자가 타이머의 작업 실행 스레드를 빠르게 종료하려는 경우 호출자는 타이머의 &lt;code&gt;cancel&lt;/code&gt; 메소드를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d37465271be67ecc64e19ce86344e37bd7d7070a" translate="yes" xml:space="preserve">
          <source>, such as serialization or deep-copying. To perform such a transformation, a program must maintain a &quot;node table&quot; that keeps track of all the object references that have already been processed. The node table must not equate distinct objects even if they happen to be equal. Another typical use of this class is to maintain</source>
          <target state="translated">직렬화 또는 심층 복사와 같은 이러한 변환을 수행하려면 프로그램이 이미 처리 된 모든 오브젝트 참조를 추적하는 &quot;노드 테이블&quot;을 유지 보수해야합니다. 노드 테이블은 고유 한 오브젝트가 동일하더라도 동일 오브젝트와 동일해서는 안됩니다. 이 클래스의 또 다른 일반적인 사용은 유지하는 것입니다</target>
        </trans-unit>
        <trans-unit id="81084daf93f05cceab98110b914dade934e076a6" translate="yes" xml:space="preserve">
          <source>, such as the &lt;code&gt;RuntimeVisibleAnnotations&lt;/code&gt; or &lt;code&gt;RuntimeVisibleParameterAnnotations&lt;/code&gt; attributes of a class file.</source>
          <target state="translated">클래스 파일 의 &lt;code&gt;RuntimeVisibleAnnotations&lt;/code&gt; 또는 &lt;code&gt;RuntimeVisibleParameterAnnotations&lt;/code&gt; 속성과 같은</target>
        </trans-unit>
        <trans-unit id="38ad745ee0ad9f95ce9c3e8f777d454e84bdbe40" translate="yes" xml:space="preserve">
          <source>, that is, adding n elements requires O(n) time. All of the other operations run in linear time (roughly speaking). The constant factor is low compared to that for the &lt;code&gt;LinkedList&lt;/code&gt; implementation.</source>
          <target state="translated">즉, n 개의 요소를 추가하려면 O (n) 시간이 필요합니다. 다른 모든 작업은 선형 시간 (대략 말하기)으로 실행됩니다. 상수 요소는 &lt;code&gt;LinkedList&lt;/code&gt; 구현에 비해 낮습니다 .</target>
        </trans-unit>
        <trans-unit id="7042fba89b42441cb1f9c37759632db9924e2b24" translate="yes" xml:space="preserve">
          <source>, that is, equal-sized non-overlapping rectangles.</source>
          <target state="translated">즉, 동일한 크기의 겹치지 않는 사각형입니다.</target>
        </trans-unit>
        <trans-unit id="2b9c016a9654c2c2952df1351afc2f8e0f50596e" translate="yes" xml:space="preserve">
          <source>, that is, stop running without shutting down cleanly. This occurs when the virtual machine is terminated externally, for example with the &lt;code&gt;SIGKILL&lt;/code&gt; signal on Unix or the &lt;code&gt;TerminateProcess&lt;/code&gt; call on Microsoft Windows. The virtual machine may also abort if a native method goes awry by, for example, corrupting internal data structures or attempting to access nonexistent memory. If the virtual machine aborts then no guarantee can be made about whether or not any shutdown hooks will be run.</source>
          <target state="translated">즉, 완전히 종료하지 않고 실행을 중지하십시오. 가상 머신이 외부에서 종료 될 때 발생합니다 (예 : Unix 의 &lt;code&gt;SIGKILL&lt;/code&gt; 신호 또는 Microsoft Windows 의 &lt;code&gt;TerminateProcess&lt;/code&gt; 호출). 예를 들어 내부 데이터 구조를 손상 시키거나 존재하지 않는 메모리에 액세스하려고 시도하여 원시 메소드가 잘못되면 가상 머신이 중단 될 수도 있습니다. 가상 머신이 중단되면 종료 후크의 실행 여부에 대한 보장이 없습니다.</target>
        </trans-unit>
        <trans-unit id="65b7e0c7b4412f592d5abb334672166fdd46740d" translate="yes" xml:space="preserve">
          <source>, that is, they include their low endpoint but not their high endpoint (where applicable). If you need a</source>
          <target state="translated">즉, 낮은 엔드 포인트를 포함하지만 높은 엔드 포인트 (해당되는 경우)는 포함하지 않습니다. 필요한 경우</target>
        </trans-unit>
        <trans-unit id="7df969454b139368b02d374462aa4cf714e9584c" translate="yes" xml:space="preserve">
          <source>, that takes the old value and new value and returns the resulting value to be applied in the resulting configuration, as specified in the table below.</source>
          <target state="translated">이는 이전 값과 새 값을 취하고 아래 표에 지정된대로 결과 구성에 적용될 결과 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="028f417d80fc689c2464cf54046ad1dd99a6220a" translate="yes" xml:space="preserve">
          <source>, the &lt;code&gt;CachedRowSet&lt;/code&gt; object created with the default constructor.</source>
          <target state="translated">, 기본 생성자로 생성 된 &lt;code&gt;CachedRowSet&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="103406ca83b3cffc8e19681ffc24bba83cf1ece5" translate="yes" xml:space="preserve">
          <source>, the base of the natural logarithms.</source>
          <target state="translated">자연 로그의 밑입니다.</target>
        </trans-unit>
        <trans-unit id="168170642860acbf12ac7736d23d67634914b55c" translate="yes" xml:space="preserve">
          <source>, the conflicting values can be retrieved and compared to decide which one should be persisted. In this code fragment, the value in</source>
          <target state="translated">, 충돌하는 값을 검색하고 비교하여 유지할 값을 결정할 수 있습니다. 이 코드 조각에서 값은</target>
        </trans-unit>
        <trans-unit id="ec0752780cbe41ff66a274bf8a5a546b589186ff" translate="yes" xml:space="preserve">
          <source>, the current method handle by binding it to the given argument. The type of the bound handle will be the same as the type of the target, except that a single leading reference parameter will be omitted.</source>
          <target state="translated">현재 메소드는 주어진 인수에 바인딩하여 처리합니다. 바인딩 된 핸들의 유형은 단일 선행 참조 매개 변수가 생략된다는 점을 제외하고 대상 유형과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="1da6bd3ea828b33b6861b6c0ff9e96ddab589863" translate="yes" xml:space="preserve">
          <source>, the current method handle. The type of the adapter will be the same as the type of the target, except that a single trailing parameter (usually of type &lt;code&gt;arrayType&lt;/code&gt;) is replaced by &lt;code&gt;arrayLength&lt;/code&gt; parameters whose type is element type of &lt;code&gt;arrayType&lt;/code&gt;.</source>
          <target state="translated">현재 메소드 핸들 어댑터의 유형은 단일 후행 매개 변수 (일반적으로 &lt;code&gt;arrayType&lt;/code&gt; 유형 )가 유형이 &lt;code&gt;arrayType&lt;/code&gt; 의 요소 유형 인 &lt;code&gt;arrayLength&lt;/code&gt; 매개 변수로 대체 된다는 점을 제외하면 대상의 유형과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="cf3d38223d5a77c80d7bdef2a84ce5de59acb492" translate="yes" xml:space="preserve">
          <source>, the current method handle. The type of the adapter will be the same as the type of the target, except that the &lt;code&gt;arrayLength&lt;/code&gt; parameters of the target's type, starting at the zero-based position &lt;code&gt;spreadArgPos&lt;/code&gt;, are replaced by a single array parameter of type &lt;code&gt;arrayType&lt;/code&gt;.</source>
          <target state="translated">, 현재 메서드 핸들입니다. 어댑터 유형은 0부터 시작하는 위치 &lt;code&gt;spreadArgPos&lt;/code&gt; 에서 시작하는 대상 유형 의 &lt;code&gt;arrayLength&lt;/code&gt; 매개 변수가 arrayType 유형 의 단일 배열 매개 변수로 대체 된다는 점을 제외하고 는 대상 유형과 &lt;code&gt;arrayType&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="e9ea9933f3c8cabb36239c33d91a86547ba6a646" translate="yes" xml:space="preserve">
          <source>, the current method handle. The type of the adapter will be the same as the type of the target, except that the final &lt;code&gt;arrayLength&lt;/code&gt; parameters of the target's type are replaced by a single array parameter of type &lt;code&gt;arrayType&lt;/code&gt;.</source>
          <target state="translated">현재 메소드 핸들 어댑터 유형은 대상 유형의 최종 &lt;code&gt;arrayLength&lt;/code&gt; 매개 변수가 arrayType 유형의 단일 배열 매개 변수로 대체 된다는 점을 제외 하면 대상 유형과 &lt;code&gt;arrayType&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="57004a146286a6ff9d03622a4529dd9425f3db27" translate="yes" xml:space="preserve">
          <source>, the current method handle. The type of the adapter will be the same as the type of the target, except that the parameter at the position indicated by &lt;code&gt;collectArgPos&lt;/code&gt; (usually of type &lt;code&gt;arrayType&lt;/code&gt;) is replaced by &lt;code&gt;arrayLength&lt;/code&gt; parameters whose type is element type of &lt;code&gt;arrayType&lt;/code&gt;.</source>
          <target state="translated">, 현재 메서드 핸들입니다. 어댑터의 유형은 &lt;code&gt;collectArgPos&lt;/code&gt; (일반적으로 &lt;code&gt;arrayType&lt;/code&gt; 유형 )로 표시된 위치의 매개 변수가 유형이 &lt;code&gt;arrayType&lt;/code&gt; 의 요소 유형 인 &lt;code&gt;arrayLength&lt;/code&gt; 매개 변수로 대체 된다는 점을 제외하고는 대상 유형과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="6c840d5c7e164a64a3e166441c2a86afca5aef59" translate="yes" xml:space="preserve">
          <source>, the expressions</source>
          <target state="translated">, 표현</target>
        </trans-unit>
        <trans-unit id="c06d3420138e70f64948b70922996c0e570612b0" translate="yes" xml:space="preserve">
          <source>, the first number after the &lt;code&gt;$&lt;/code&gt; is always treated as part of the group reference. Subsequent numbers are incorporated into g if they would form a legal group reference. Only the numerals '0' through '9' are considered as potential components of the group reference. If the second group matched the string &lt;code&gt;&quot;foo&quot;&lt;/code&gt;, for example, then passing the replacement string &lt;code&gt;&quot;$2bar&quot;&lt;/code&gt; would cause &lt;code&gt;&quot;foobar&quot;&lt;/code&gt; to be appended to the string buffer. A dollar sign (&lt;code&gt;$&lt;/code&gt;) may be included as a literal in the replacement string by preceding it with a backslash (&lt;code&gt;\$&lt;/code&gt;).</source>
          <target state="translated">, &lt;code&gt;$&lt;/code&gt; 다음의 첫 번째 숫자 는 항상 그룹 참조의 일부로 취급됩니다. 법정 그룹 참조를 구성 할 경우 후속 번호는 g에 통합됩니다. 숫자 '0'부터 '9'만 그룹 참조의 잠재적 구성 요소로 간주됩니다. 예를 들어 두 번째 그룹이 &lt;code&gt;&quot;foo&quot;&lt;/code&gt; 문자열과 일치하면 대체 문자열 &lt;code&gt;&quot;$2bar&quot;&lt;/code&gt; 를 전달 하면 &lt;code&gt;&quot;foobar&quot;&lt;/code&gt; 가 문자열 버퍼에 추가됩니다. 달러 기호 ( &lt;code&gt;$&lt;/code&gt; )는 백 슬래시 ( &lt;code&gt;\$&lt;/code&gt; )로 대체하여 대체 문자열에 리터럴로 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="05853748390e52cbeb2784457e462172c61c6858" translate="yes" xml:space="preserve">
          <source>, the image's &lt;code&gt;SampleModel&lt;/code&gt; and &lt;code&gt;ColorModel&lt;/code&gt;) is described by an &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; object.</source>
          <target state="translated">이미지의 &lt;code&gt;SampleModel&lt;/code&gt; 및 &lt;code&gt;ColorModel&lt;/code&gt; )은 &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; 객체로 설명됩니다 .</target>
        </trans-unit>
        <trans-unit id="08bf38e92aeacfa0c34a7a2ac24770766c0e1a49" translate="yes" xml:space="preserve">
          <source>, the internal fields corresponding to the name and description of this &lt;code&gt;SimpleType&lt;/code&gt; instance are also set to</source>
          <target state="translated">이 &lt;code&gt;SimpleType&lt;/code&gt; 인스턴스 의 이름 및 설명에 해당하는 내부 필드 도로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="9bb42e63a38cf3d1b43a762050af395c01e6b140" translate="yes" xml:space="preserve">
          <source>, the latter being a use (or</source>
          <target state="translated">후자는 사용 (또는</target>
        </trans-unit>
        <trans-unit id="7ca6f2a3429e08be4e951702be5a4842cc9ebdfb" translate="yes" xml:space="preserve">
          <source>, the mapped function</source>
          <target state="translated">, 매핑 된 함수</target>
        </trans-unit>
        <trans-unit id="e7e4d72c2b03960536bf746e056e559ff7d2112f" translate="yes" xml:space="preserve">
          <source>, the number of rows and columns to advance after every source pixel). Specifically, a period of 1 will use every row or column; a period of 2 will use every other row or column. The &lt;code&gt;subsamplingXOffset&lt;/code&gt; and &lt;code&gt;subsamplingYOffset&lt;/code&gt; parameters specify an offset from the region (or image) origin for the first subsampled pixel. Adjusting the origin of the subsample grid is useful for avoiding seams when subsampling a very large source image into destination regions that will be assembled into a complete subsampled image. Most users will want to simply leave these parameters at 0.</source>
          <target state="translated">, 모든 소스 픽셀 이후에 진행될 행 및 열 수). 특히 기간 1은 모든 행 또는 열을 사용합니다. 2의 기간은 다른 모든 행 또는 열을 사용합니다. &lt;code&gt;subsamplingXOffset&lt;/code&gt; 및 &lt;code&gt;subsamplingYOffset&lt;/code&gt; 파라미터는 먼저 서브 샘플링하는 화소 영역 (또는 화상)으로부터 오프셋 원점을 지정. 서브 샘플 그리드의 원점을 조정하면 매우 큰 소스 이미지를 대상 서브 영역으로 서브 샘플링하여 완전한 서브 샘플링 이미지로 조립할 때 이음새를 피할 수 있습니다. 대부분의 사용자는이 매개 변수를 0으로두기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="e072299df67ff53fd3a62f6d1d1c556dcc27f3f0" translate="yes" xml:space="preserve">
          <source>, the overall authentication succeeds only if the</source>
          <target state="translated">, 전체 인증은</target>
        </trans-unit>
        <trans-unit id="ccbbd1521306ae39120a56fbb95877671ad1febb" translate="yes" xml:space="preserve">
          <source>, the ratio of the circumference of a circle to its diameter.</source>
          <target state="translated">, 원주와 지름의 비율.</target>
        </trans-unit>
        <trans-unit id="962348e3c855b16b6f8ea05bd95befb58b60d16e" translate="yes" xml:space="preserve">
          <source>, the second element of</source>
          <target state="translated">, 두 번째 요소</target>
        </trans-unit>
        <trans-unit id="cd2d880a015260df0db5aa68d0b4a53963667649" translate="yes" xml:space="preserve">
          <source>, the shorter sequence is considered lexicographically less than the other. If the sequences have the same length, the sequences are considered lexicographically equal.</source>
          <target state="translated">, 더 짧은 시퀀스는 사 전적으로 다른 시퀀스보다 적은 것으로 간주됩니다. 시퀀스의 길이가 같은 경우 시퀀스는 사전 식적으로 동일한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="63d5cf322be712035c95accb4563bf4f78d8cfab" translate="yes" xml:space="preserve">
          <source>, the user canceled the operation).</source>
          <target state="translated">, 사용자가 작업을 취소했습니다).</target>
        </trans-unit>
        <trans-unit id="e189049326051591313d1c5688fafbf491aeaf0f" translate="yes" xml:space="preserve">
          <source>, then</source>
          <target state="translated">그런 다음</target>
        </trans-unit>
        <trans-unit id="337f02cf1b70d39e4046857e8440d6ae1ce3a6a7" translate="yes" xml:space="preserve">
          <source>, then a &lt;code&gt;NumberFormatException&lt;/code&gt; is thrown. Otherwise, &lt;code&gt;s&lt;/code&gt; is regarded as representing an exact decimal value in the usual &quot;computerized scientific notation&quot; or as an exact hexadecimal value; this exact numerical value is then conceptually converted to an &quot;infinitely precise&quot; binary value that is then rounded to type &lt;code&gt;double&lt;/code&gt; by the usual round-to-nearest rule of IEEE 754 floating-point arithmetic, which includes preserving the sign of a zero value. Note that the round-to-nearest rule also implies overflow and underflow behaviour; if the exact value of &lt;code&gt;s&lt;/code&gt; is large enough in magnitude (greater than or equal to (&lt;a href=&quot;#MAX_VALUE&quot;&gt;&lt;code&gt;MAX_VALUE&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;math#ulp(double)&quot;&gt;&lt;code&gt;ulp(MAX_VALUE)&lt;/code&gt;&lt;/a&gt;/2), rounding to &lt;code&gt;double&lt;/code&gt; will result in an infinity and if the exact value of &lt;code&gt;s&lt;/code&gt; is small enough in magnitude (less than or equal to &lt;a href=&quot;#MIN_VALUE&quot;&gt;&lt;code&gt;MIN_VALUE&lt;/code&gt;&lt;/a&gt;/2), rounding to float will result in a zero. Finally, after rounding a &lt;code&gt;Double&lt;/code&gt; object representing this &lt;code&gt;double&lt;/code&gt; value is returned.</source>
          <target state="translated">이면 &lt;code&gt;NumberFormatException&lt;/code&gt; 이 발생합니다. 그렇지 않으면, &lt;code&gt;s&lt;/code&gt; 는 일반적인 &quot;컴퓨터 과학 표기법&quot;에서 정확한 10 진수 값 또는 정확한 16 진수 값으로 간주됩니다. 이 정확한 숫자 값은 개념적으로 &quot;무한 정확한&quot;이진 값으로 변환 된 다음 0 값의 부호를 유지하는 것을 포함하는 IEEE 754 부동 소수점 산술의 일반적인 반올림 규칙에 따라 &lt;code&gt;double&lt;/code&gt; 유형으로 반올림됩니다 . 가장 가까운 반올림 규칙은 오버플로 및 언더 플로 동작도 암시합니다. &lt;code&gt;s&lt;/code&gt; 의 정확한 값 이 크기가 충분히 큰 경우 (( &lt;a href=&quot;#MAX_VALUE&quot;&gt; &lt;code&gt;MAX_VALUE&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;math#ulp(double)&quot;&gt; &lt;code&gt;ulp(MAX_VALUE)&lt;/code&gt; &lt;/a&gt; / 2 이상), &lt;code&gt;double&lt;/code&gt; 반올림 &lt;code&gt;s&lt;/code&gt; 의 정확한 값이 크기가 충분히 작 으면 ( &lt;a href=&quot;#MIN_VALUE&quot;&gt; &lt;code&gt;MIN_VALUE&lt;/code&gt; &lt;/a&gt; / 2 이하) float로 반올림하면 0이됩니다. 마지막으로, 이 &lt;code&gt;double&lt;/code&gt; 값을 나타내는 &lt;code&gt;Double&lt;/code&gt; 객체를 반올림 한 후 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="86f862d098fcb352904833adc9fda5f0c24785ab" translate="yes" xml:space="preserve">
          <source>, then a &lt;code&gt;NumberFormatException&lt;/code&gt; is thrown. Otherwise, &lt;code&gt;s&lt;/code&gt; is regarded as representing an exact decimal value in the usual &quot;computerized scientific notation&quot; or as an exact hexadecimal value; this exact numerical value is then conceptually converted to an &quot;infinitely precise&quot; binary value that is then rounded to type &lt;code&gt;double&lt;/code&gt; by the usual round-to-nearest rule of IEEE 754 floating-point arithmetic, which includes preserving the sign of a zero value. Note that the round-to-nearest rule also implies overflow and underflow behaviour; if the exact value of &lt;code&gt;s&lt;/code&gt; is large enough in magnitude (greater than or equal to (&lt;a href=&quot;double#MAX_VALUE&quot;&gt;&lt;code&gt;MAX_VALUE&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;math#ulp-double-&quot;&gt;&lt;code&gt;ulp(MAX_VALUE)&lt;/code&gt;&lt;/a&gt;/2), rounding to &lt;code&gt;double&lt;/code&gt; will result in an infinity and if the exact value of &lt;code&gt;s&lt;/code&gt; is small enough in magnitude (less than or equal to &lt;a href=&quot;double#MIN_VALUE&quot;&gt;&lt;code&gt;MIN_VALUE&lt;/code&gt;&lt;/a&gt;/2), rounding to float will result in a zero. Finally, after rounding a &lt;code&gt;Double&lt;/code&gt; object representing this &lt;code&gt;double&lt;/code&gt; value is returned.</source>
          <target state="translated">이면 &lt;code&gt;NumberFormatException&lt;/code&gt; 이 발생합니다. 그렇지 않으면, &lt;code&gt;s&lt;/code&gt; 는 일반적인 &quot;컴퓨터 화 된 과학적 표기법&quot;에서 정확한 10 진수 값 또는 정확한 16 진수 값으로 간주됩니다. 이 정확한 숫자 값은 개념적으로 &quot;무한 정밀도&quot;이진 값으로 변환 된 다음 IEEE 754 부동 소수점 산술의 일반적인 반올림 규칙에 의해 &lt;code&gt;double&lt;/code&gt; 형식으로 반올림됩니다 . 여기에는 0 값의 부호 유지가 포함됩니다. 가장 가까운 반올림 규칙은 오버플로 및 언더 플로 동작을 의미합니다. 정확한 값 경우 &lt;code&gt;s&lt;/code&gt; 충분한 크기보다 (보다 중이거나 (동일 &lt;a href=&quot;double#MAX_VALUE&quot;&gt; &lt;code&gt;MAX_VALUE&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;math#ulp-double-&quot;&gt; &lt;code&gt;ulp(MAX_VALUE)&lt;/code&gt; &lt;/a&gt; 로 반올림 / 2) &lt;code&gt;double&lt;/code&gt; 무한대가되며 &lt;code&gt;s&lt;/code&gt; 의 정확한 값이 충분히 작은 경우 ( &lt;a href=&quot;double#MIN_VALUE&quot;&gt; &lt;code&gt;MIN_VALUE&lt;/code&gt; &lt;/a&gt; / 2 이하) 부동 소수점으로 반올림하면 0이됩니다. 마지막 으로이 &lt;code&gt;double&lt;/code&gt; 값을 나타내는 &lt;code&gt;Double&lt;/code&gt; 객체를 반올림 한 후에 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="48ad3a315bdae71ffe7515a3f61b8b15e19774e8" translate="yes" xml:space="preserve">
          <source>, then a &lt;code&gt;NumberFormatException&lt;/code&gt; is thrown. Otherwise, &lt;code&gt;s&lt;/code&gt; is regarded as representing an exact decimal value in the usual &quot;computerized scientific notation&quot; or as an exact hexadecimal value; this exact numerical value is then conceptually converted to an &quot;infinitely precise&quot; binary value that is then rounded to type &lt;code&gt;float&lt;/code&gt; by the usual round-to-nearest rule of IEEE 754 floating-point arithmetic, which includes preserving the sign of a zero value. Note that the round-to-nearest rule also implies overflow and underflow behaviour; if the exact value of &lt;code&gt;s&lt;/code&gt; is large enough in magnitude (greater than or equal to (&lt;a href=&quot;#MAX_VALUE&quot;&gt;&lt;code&gt;MAX_VALUE&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;math#ulp(float)&quot;&gt;&lt;code&gt;ulp(MAX_VALUE)&lt;/code&gt;&lt;/a&gt;/2), rounding to &lt;code&gt;float&lt;/code&gt; will result in an infinity and if the exact value of &lt;code&gt;s&lt;/code&gt; is small enough in magnitude (less than or equal to &lt;a href=&quot;#MIN_VALUE&quot;&gt;&lt;code&gt;MIN_VALUE&lt;/code&gt;&lt;/a&gt;/2), rounding to float will result in a zero. Finally, after rounding a &lt;code&gt;Float&lt;/code&gt; object representing this &lt;code&gt;float&lt;/code&gt; value is returned.</source>
          <target state="translated">이면 &lt;code&gt;NumberFormatException&lt;/code&gt; 이 발생합니다. 그렇지 않으면, &lt;code&gt;s&lt;/code&gt; 는 일반적인 &quot;컴퓨터 과학 표기법&quot;에서 정확한 10 진수 값 또는 정확한 16 진수 값으로 간주됩니다. 이 정확한 숫자 값은 개념적으로 &quot;무한 정확한&quot;이진 값으로 변환 된 다음 0 값의 부호 유지를 포함하는 IEEE 754 부동 소수점 산술의 일반적인 반올림 규칙에 따라 &lt;code&gt;float&lt;/code&gt; 유형으로 반올림됩니다 . 가장 가까운 반올림 규칙은 오버플로 및 언더 플로 동작도 암시합니다. &lt;code&gt;s&lt;/code&gt; 의 정확한 값 이 크기가 충분히 큰 경우 (( &lt;a href=&quot;#MAX_VALUE&quot;&gt; &lt;code&gt;MAX_VALUE&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;math#ulp(float)&quot;&gt; &lt;code&gt;ulp(MAX_VALUE)&lt;/code&gt; &lt;/a&gt; / 2 이상), &lt;code&gt;float&lt;/code&gt; 반올림 &lt;code&gt;s&lt;/code&gt; 의 정확한 값이 크기가 충분히 작은 경우 ( &lt;a href=&quot;#MIN_VALUE&quot;&gt; &lt;code&gt;MIN_VALUE&lt;/code&gt; &lt;/a&gt; / 2 보다 작거나 같음 ) float로 반올림하면 0이됩니다. 마지막으로, 이 &lt;code&gt;float&lt;/code&gt; 값을 나타내는 &lt;code&gt;Float&lt;/code&gt; 객체를 반올림 한 후 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c3f8e97948877a62780874aca8477bd046c0e357" translate="yes" xml:space="preserve">
          <source>, then a &lt;code&gt;NumberFormatException&lt;/code&gt; is thrown. Otherwise, &lt;code&gt;s&lt;/code&gt; is regarded as representing an exact decimal value in the usual &quot;computerized scientific notation&quot; or as an exact hexadecimal value; this exact numerical value is then conceptually converted to an &quot;infinitely precise&quot; binary value that is then rounded to type &lt;code&gt;float&lt;/code&gt; by the usual round-to-nearest rule of IEEE 754 floating-point arithmetic, which includes preserving the sign of a zero value. Note that the round-to-nearest rule also implies overflow and underflow behaviour; if the exact value of &lt;code&gt;s&lt;/code&gt; is large enough in magnitude (greater than or equal to (&lt;a href=&quot;float#MAX_VALUE&quot;&gt;&lt;code&gt;MAX_VALUE&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;math#ulp-float-&quot;&gt;&lt;code&gt;ulp(MAX_VALUE)&lt;/code&gt;&lt;/a&gt;/2), rounding to &lt;code&gt;float&lt;/code&gt; will result in an infinity and if the exact value of &lt;code&gt;s&lt;/code&gt; is small enough in magnitude (less than or equal to &lt;a href=&quot;float#MIN_VALUE&quot;&gt;&lt;code&gt;MIN_VALUE&lt;/code&gt;&lt;/a&gt;/2), rounding to float will result in a zero. Finally, after rounding a &lt;code&gt;Float&lt;/code&gt; object representing this &lt;code&gt;float&lt;/code&gt; value is returned.</source>
          <target state="translated">이면 &lt;code&gt;NumberFormatException&lt;/code&gt; 이 발생합니다. 그렇지 않으면, &lt;code&gt;s&lt;/code&gt; 는 일반적인 &quot;컴퓨터 화 된 과학적 표기법&quot;에서 정확한 10 진수 값 또는 정확한 16 진수 값으로 간주됩니다. 이 정확한 숫자 값은 개념적으로 &quot;무한 정확도&quot;이진 값으로 변환 된 다음 , IEEE 754 부동 소수점 산술의 일반적인 반올림 규칙에 의해 &lt;code&gt;float&lt;/code&gt; 유형으로 반올림됩니다 . 여기에는 0 값의 부호가 포함됩니다. 가장 가까운 반올림 규칙은 오버플로 및 언더 플로 동작을 의미합니다. &lt;code&gt;s&lt;/code&gt; 의 정확한 값 이 크기가 충분히 클 경우 (( &lt;a href=&quot;float#MAX_VALUE&quot;&gt; &lt;code&gt;MAX_VALUE&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;math#ulp-float-&quot;&gt; &lt;code&gt;ulp(MAX_VALUE)&lt;/code&gt; &lt;/a&gt; / 2 이상), &lt;code&gt;float&lt;/code&gt; 반올림무한대의 결과가되며 &lt;code&gt;s&lt;/code&gt; 의 정확한 값이 충분히 작은 경우 ( &lt;a href=&quot;float#MIN_VALUE&quot;&gt; &lt;code&gt;MIN_VALUE&lt;/code&gt; &lt;/a&gt; / 2 이하) 부동 소수점으로 반올림하면 0이됩니다. 마지막 으로이 &lt;code&gt;float&lt;/code&gt; 값을 나타내는 &lt;code&gt;Float&lt;/code&gt; 객체를 반올림 한 후에 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="91a5508adbbf3bddb427d1c646ca0e57a5292269" translate="yes" xml:space="preserve">
          <source>, then any &lt;code&gt;@A&lt;/code&gt; annotation on an element is considered part of the element's public contract.</source>
          <target state="translated">이면 요소의 &lt;code&gt;@A&lt;/code&gt; 주석이 요소의 공개 계약의 일부로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="f255a891931556636ce11acc6282d942ca622ef9" translate="yes" xml:space="preserve">
          <source>, then any &lt;code&gt;@A&lt;/code&gt; annotation on an element is considered part of the element's public contract. In more detail, when an annotation type</source>
          <target state="translated">이면 요소의 &lt;code&gt;@A&lt;/code&gt; 주석이 요소의 공개 계약의 일부로 간주됩니다. 보다 자세하게는 주석 유형이</target>
        </trans-unit>
        <trans-unit id="92712496b07b6cb63f6b6403eee745e79e24cf2c" translate="yes" xml:space="preserve">
          <source>, then if</source>
          <target state="translated">이면</target>
        </trans-unit>
        <trans-unit id="29f70ae689c760d8db7b3832033abf065017fe25" translate="yes" xml:space="preserve">
          <source>, then the &lt;code&gt;LoginContext&lt;/code&gt; calls &lt;code&gt;getAppConfigurationEntry&lt;/code&gt; with the name, &quot;</source>
          <target state="translated">그런 다음 &lt;code&gt;LoginContext&lt;/code&gt; 는 이름이 &quot;&quot;인 &lt;code&gt;getAppConfigurationEntry&lt;/code&gt; 를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="66947490fab91c3ed15fbce45b2c4f6cf104e3e9" translate="yes" xml:space="preserve">
          <source>, then the result is</source>
          <target state="translated">그러면 결과는</target>
        </trans-unit>
        <trans-unit id="1a565ba7547cd232b1d3a5f5bfb2ceee6a6c2196" translate="yes" xml:space="preserve">
          <source>, there is no requirement that a given implementation supports all possible choices indicated below or that it can respond to requests to modify its choice of algorithm. The values of the various hint keys may also interact such that while all variants of a given key are supported in one situation, the implementation may be more restricted when the values associated with other keys are modified. For example, some implementations may be able to provide several types of dithering when the antialiasing hint is turned off, but have little control over dithering when antialiasing is on. The full set of supported keys and hints may also vary by destination since runtimes may use different underlying modules to render to the screen, or to &lt;a href=&quot;image/bufferedimage&quot;&gt;&lt;code&gt;BufferedImage&lt;/code&gt;&lt;/a&gt; objects, or while printing.</source>
          <target state="translated">, 주어진 구현이 아래 표시된 모든 가능한 선택을 지원하거나 알고리즘 선택을 수정하기위한 요청에 응답 할 수 있어야한다는 요구 사항은 없습니다. 다양한 힌트 키의 값은 주어진 키의 모든 변형이 한 상황에서 지원되는 동안 다른 키와 관련된 값이 수정 될 때 구현이 더 제한 될 수 있도록 상호 작용할 수도 있습니다. 예를 들어, 일부 구현은 앤티 앨리어싱 힌트가 꺼져있을 때 여러 유형의 디더링을 제공 할 수 있지만 앤티 앨리어싱이 켜져 있으면 디더링을 거의 제어 할 수 없습니다. 지원되는 키 및 힌트의 전체 세트는 런타임이 화면, &lt;a href=&quot;image/bufferedimage&quot;&gt; &lt;code&gt;BufferedImage&lt;/code&gt; &lt;/a&gt; 객체 또는 인쇄 중에 다른 기본 모듈을 사용할 수 있으므로 대상에 따라 다를 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c46af6d9d37aebe50010eb899b2fd5f646504348" translate="yes" xml:space="preserve">
          <source>, to mean a sequence of bytes in class file format, whether or not they reside in a file.</source>
          <target state="translated">파일에 상주하는지 여부에 관계없이 클래스 파일 형식의 바이트 시퀀스를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="d538479801fbd0efd999a7f18ba2425c7a02eaaa" translate="yes" xml:space="preserve">
          <source>, units in the last place. For a given floating-point format, an &lt;a href=&quot;#ulp(double)&quot;&gt;ulp&lt;/a&gt; of a specific real number value is the distance between the two floating-point values bracketing that numerical value. When discussing the accuracy of a method as a whole rather than at a specific argument, the number of ulps cited is for the worst-case error at any argument. If a method always has an error less than 0.5 ulps, the method always returns the floating-point number nearest the exact result; such a method is</source>
          <target state="translated">, 마지막 장소에 단위. 주어진 부동 소수점 형식 의 경우 특정 실수 값 의 &lt;a href=&quot;#ulp(double)&quot;&gt;ulp&lt;/a&gt; 는 해당 숫자 값을 괄호로 묶는 두 부동 소수점 값 사이의 거리입니다. 특정 인수가 아닌 전체적으로 메서드의 정확성을 논의 할 때 인용 된 ulps의 수는 모든 인수에서 최악의 오류에 대한 것입니다. 메서드의 오류가 항상 0.5ulps 미만이면 메서드는 항상 정확한 결과에 가장 가까운 부동 소수점 숫자를 반환합니다. 그러한 방법은</target>
        </trans-unit>
        <trans-unit id="24aabc35c5229d14172f9a6c0cd61c52076b65b7" translate="yes" xml:space="preserve">
          <source>, units in the last place. For a given floating-point format, an &lt;a href=&quot;math#ulp-double-&quot;&gt;ulp&lt;/a&gt; of a specific real number value is the distance between the two floating-point values bracketing that numerical value. When discussing the accuracy of a method as a whole rather than at a specific argument, the number of ulps cited is for the worst-case error at any argument. If a method always has an error less than 0.5 ulps, the method always returns the floating-point number nearest the exact result; such a method is</source>
          <target state="translated">, 마지막 장소의 단위. 주어진 부동 소수점 형식 의 경우 특정 실수 값 의 &lt;a href=&quot;math#ulp-double-&quot;&gt;ulp&lt;/a&gt; 는 해당 숫자 값을 묶는 두 부동 소수점 값 사이의 거리입니다. 특정 인수가 아닌 전체 방법의 정확성을 논의 할 때 인용 된 ulps 수는 모든 인수에서 최악의 오류에 대한 것입니다. 메서드에 항상 0.5 ulps 미만의 오류가 있으면 항상 정확한 결과에 가장 가까운 부동 소수점 숫자를 반환합니다. 그런 방법은</target>
        </trans-unit>
        <trans-unit id="ba7b87aeb57d0b8bf5d911100a579bd83c00059f" translate="yes" xml:space="preserve">
          <source>, use the overloaded &lt;a href=&quot;#addNotification(java.lang.String,java.lang.String,java.lang.Object,java.util.Date,long,long,boolean)&quot;&gt;&lt;code&gt;addNotification(String, String, Object, Date, long, long, boolean)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">, 오버로드 된 &lt;a href=&quot;#addNotification(java.lang.String,java.lang.String,java.lang.Object,java.util.Date,long,long,boolean)&quot;&gt; &lt;code&gt;addNotification(String, String, Object, Date, long, long, boolean)&lt;/code&gt; &lt;/a&gt; 메서드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6ed5226458c5195b09972f76f10f94187ae79b05" translate="yes" xml:space="preserve">
          <source>, use the overloaded &lt;a href=&quot;timer#addNotification-java.lang.String-java.lang.String-java.lang.Object-java.util.Date-long-long-boolean-&quot;&gt;&lt;code&gt;addNotification(String, String, Object, Date, long, long, boolean)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">오버로드 된 &lt;a href=&quot;timer#addNotification-java.lang.String-java.lang.String-java.lang.Object-java.util.Date-long-long-boolean-&quot;&gt; &lt;code&gt;addNotification(String, String, Object, Date, long, long, boolean)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5e6d5b4448e096dd99236f468d7b85472a4155af" translate="yes" xml:space="preserve">
          <source>, via zero-width negative lookahead</source>
          <target state="translated">너비가 0 인 마이너스 예측을 통해</target>
        </trans-unit>
        <trans-unit id="c09d2e32732a743392d1e42704ff7a887416e2e9" translate="yes" xml:space="preserve">
          <source>, via zero-width negative lookbehind</source>
          <target state="translated">너비가 0 인 네거티브 룩백을 통해</target>
        </trans-unit>
        <trans-unit id="d2a2c5012b8e872791b8db6d7f9e23e0dc098207" translate="yes" xml:space="preserve">
          <source>, via zero-width positive lookahead</source>
          <target state="translated">너비가 0 인 긍정적 예측을 통해</target>
        </trans-unit>
        <trans-unit id="1e60e3336d6a81f30c97398cdd074084376293f0" translate="yes" xml:space="preserve">
          <source>, via zero-width positive lookbehind</source>
          <target state="translated">너비가 0 인 양의 lookbehind를 통해</target>
        </trans-unit>
        <trans-unit id="031517d0d0932935a7d09573903e06e87d419488" translate="yes" xml:space="preserve">
          <source>, we mean that the quotient for the natural ordering is the equivalence relation defined by the class's &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals(Object)&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">, 우리는 자연 순서에 대한 몫이 클래스의 &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals(Object)&lt;/code&gt; &lt;/a&gt; 메소드에 의해 정의 된 동등 관계임을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="dc77da647d3c2c0d64a0a920a9d54e5f6c4fd0b7" translate="yes" xml:space="preserve">
          <source>, we mean that the quotient for the natural ordering is the equivalence relation defined by the class's &lt;a href=&quot;object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(Object)&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">우리는 자연 순서에 대한 몫이 클래스의 &lt;a href=&quot;object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(Object)&lt;/code&gt; &lt;/a&gt; 메소드에 의해 정의 된 동등성 관계임을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="193a43e0deefb1f76cdf6bfebfcdfb6e36b58519" translate="yes" xml:space="preserve">
          <source>, we mean that the quotient for the ordering is the equivalence relation defined by the objects' &lt;a href=&quot;../lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals(Object)&lt;/code&gt;&lt;/a&gt; method(s):</source>
          <target state="translated">, 우리는 순서에 대한 몫이 객체의 &lt;a href=&quot;../lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals(Object)&lt;/code&gt; &lt;/a&gt; 메소드에 의해 정의 된 동등 관계임을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="fffeb93ca3041e0bf250368e8fc6e9000d6eff7d" translate="yes" xml:space="preserve">
          <source>, we mean that the quotient for the ordering is the equivalence relation defined by the objects' &lt;a href=&quot;../lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(Object)&lt;/code&gt;&lt;/a&gt; method(s):</source>
          <target state="translated">, 우리는 순서에 대한 몫이 객체의 &lt;a href=&quot;../lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(Object)&lt;/code&gt; &lt;/a&gt; 메소드에 의해 정의 된 동등성 관계임을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="3b0f7047b46880d41a686f2c811ef29e0dc8fb9e" translate="yes" xml:space="preserve">
          <source>, what you would get by calling &lt;code&gt;new ImageWriteParam(getLocale())&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;new ImageWriteParam(getLocale())&lt;/code&gt; 을 호출하면 얻을 수있는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="a8fbd0202d5d59bb16abfc27a4a724fcbb5feb8c" translate="yes" xml:space="preserve">
          <source>, where</source>
          <target state="translated">, 어디</target>
        </trans-unit>
        <trans-unit id="8b6c0f232725fc329b6a89d0cfe72882e53598f4" translate="yes" xml:space="preserve">
          <source>, where the year is less than &quot;&lt;code&gt;0001&lt;/code&gt;&quot; or greater than &quot;&lt;code&gt;9999&lt;/code&gt;&quot; then this method deviates from ISO 8601 in the same manner as the &lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#deviantformats&quot;&gt;XML Schema language&lt;/a&gt;. That is, the year may be expanded to more than four digits and may be negative-signed. If more than four digits then leading zeros are not present. The year before &quot;&lt;code&gt;0001&lt;/code&gt;&quot; is &quot;&lt;code&gt;-0001&lt;/code&gt;&quot;.</source>
          <target state="translated">연도가 &quot; &lt;code&gt;0001&lt;/code&gt; &quot;보다 작거나 &quot; &lt;code&gt;9999&lt;/code&gt; &quot; 보다 큰 경우, 이 방법은 &lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#deviantformats&quot;&gt;XML 스키마 언어&lt;/a&gt; 와 동일한 방식으로 ISO 8601에서 벗어납니다 . 즉, 연도는 4 자리 이상으로 확장 될 수 있으며 음수 부호 일 수 있습니다. 4 자리를 초과하면 선행 0이 존재하지 않습니다. &quot; &lt;code&gt;0001&lt;/code&gt; &quot; 의 전년도 는 &quot; &lt;code&gt;-0001&lt;/code&gt; &quot;입니다.</target>
        </trans-unit>
        <trans-unit id="497c54187dd53a2ba213d6fb85879778a8fd1afd" translate="yes" xml:space="preserve">
          <source>, whereas their font face names are</source>
          <target state="translated">, 글꼴 이름은</target>
        </trans-unit>
        <trans-unit id="2ae80ddc9b4d13f10481a2d18ff14cd702d40073" translate="yes" xml:space="preserve">
          <source>, whether the controller puts up a GUI or merely computes a set of values is irrelevant to this interface).</source>
          <target state="translated">컨트롤러가 GUI를 구성하는지 또는 단순히 값 집합을 계산하는지 여부는이 인터페이스와 관련이 없습니다.</target>
        </trans-unit>
        <trans-unit id="b2a334ed69097f997e757813fbb4f9131e3d7775" translate="yes" xml:space="preserve">
          <source>, which allow a byte buffer to be viewed as a buffer containing values of some other primitive type; and</source>
          <target state="translated">바이트 버퍼를 다른 프리미티브 유형의 값을 포함하는 버퍼로 볼 수 있습니다. 과</target>
        </trans-unit>
        <trans-unit id="6da58327afacbdb198f7e977dc912a5c16b61d85" translate="yes" xml:space="preserve">
          <source>, which allow a map's contents to be viewed as a set of keys, collection of values, or set of key-value mappings. The</source>
          <target state="translated">을 통해지도의 내용을 키 집합, 값 모음 또는 키-값 매핑 집합으로 볼 수 있습니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="d8083390509f7ce5fc34ad6b36e43825292b31bc" translate="yes" xml:space="preserve">
          <source>, which are basic bidirectional data communication mechanisms.</source>
          <target state="translated">기본 양방향 데이터 통신 메커니즘입니다.</target>
        </trans-unit>
        <trans-unit id="3f8850e7c631a71ea29ae63dc9d3b0a24939aca3" translate="yes" xml:space="preserve">
          <source>, which are common in concurrent programming. These methods, which wait for elements to appear or for space to become available, are defined in the &lt;a href=&quot;concurrent/blockingqueue&quot;&gt;&lt;code&gt;BlockingQueue&lt;/code&gt;&lt;/a&gt; interface, which extends this interface.</source>
          <target state="translated">동시 프로그래밍에서 일반적입니다. 요소가 나타나거나 공간이 확보 될 때까지 대기하는 이러한 메소드는 이 인터페이스를 확장 하는 &lt;a href=&quot;concurrent/blockingqueue&quot;&gt; &lt;code&gt;BlockingQueue&lt;/code&gt; &lt;/a&gt; 인터페이스 에서 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="c3f938b864d7d40717f8fca888479a9a7f5dba45" translate="yes" xml:space="preserve">
          <source>, which are networking identifiers, like IP addresses.</source>
          <target state="translated">IP 주소와 같은 네트워킹 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="a360a74299d438041e910e049eeb894ca3adb376" translate="yes" xml:space="preserve">
          <source>, which are stored in memory. At any given time, the data from only one &lt;code&gt;CachedRowSet&lt;/code&gt; object is stored in memory.</source>
          <target state="translated">, 메모리에 저장됩니다. 주어진 시간에 하나의 &lt;code&gt;CachedRowSet&lt;/code&gt; 개체 의 데이터 만 메모리에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="9e478c1d7314bee5d31d538dd16ac275832996d1" translate="yes" xml:space="preserve">
          <source>, which contains the binding to &lt;code&gt;MyProvider&lt;/code&gt;.</source>
          <target state="translated">, &lt;code&gt;MyProvider&lt;/code&gt; 에 대한 바인딩을 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="f2b99bb29628e19ef38590d46832095097a6f2d9" translate="yes" xml:space="preserve">
          <source>, which deals with the following abstractions:</source>
          <target state="translated">다음 추상화를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="ad56ef2f66b2138e1cf2c8099225a7ebec1e878b" translate="yes" xml:space="preserve">
          <source>, which describe network interfaces.</source>
          <target state="translated">네트워크 인터페이스를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="7cad6d289f96fbb63f9d747c1c1098a7e4d8a07e" translate="yes" xml:space="preserve">
          <source>, which determines the final clipping region. The user clip cannot be modified by the rendering system to reflect the resulting composite clip. The user clip can only be changed through the &lt;code&gt;setClip&lt;/code&gt; or &lt;code&gt;clipRect&lt;/code&gt; methods. All drawing or writing is done in the current color, using the current paint mode, and in the current font.</source>
          <target state="translated">, 최종 클리핑 영역을 결정합니다. 사용자 클립은 결과 합성 클립을 반영하기 위해 렌더링 시스템에서 수정할 수 없습니다. 사용자 클립은 &lt;code&gt;setClip&lt;/code&gt; 또는 &lt;code&gt;clipRect&lt;/code&gt; 메서드 를 통해서만 변경할 수 있습니다 . 모든 그리기 또는 쓰기는 현재 페인트 모드 및 현재 글꼴을 사용하여 현재 색상으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="874dd4c8dd0389952becde908f2127486e5ea95a" translate="yes" xml:space="preserve">
          <source>, which determines the final clipping region. The user clip is not modified by the rendering system to reflect the resulting composite clip.</source>
          <target state="translated">, 최종 클리핑 영역을 결정합니다. 사용자 클립은 결과 합성 클립을 반영하기 위해 렌더링 시스템에 의해 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8ad83b4547c7a28e88ffc185d454f74fe6db1bb5" translate="yes" xml:space="preserve">
          <source>, which includes the &lt;code&gt;
 strictfp&lt;/code&gt; modifier.</source>
          <target state="translated">&lt;code&gt; strictfp&lt;/code&gt; 수정자를 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="7fb58d8d368522ddb261d4905225349333da63e1" translate="yes" xml:space="preserve">
          <source>, which includes the &lt;code&gt;strictfp&lt;/code&gt; modifier.</source>
          <target state="translated">&lt;code&gt;strictfp&lt;/code&gt; 수정자를 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="1cb1ec2439cfd6083ce0a27ea8d0e3e9b2e605d1" translate="yes" xml:space="preserve">
          <source>, which indicates the type of SQL value that is being set to &lt;code&gt;null&lt;/code&gt;. This information is needed by some DBMSs and is therefore required in order to ensure that applications are portable. The other version is intended to be used when the value to be set to &lt;code&gt;null&lt;/code&gt; is a user-defined type. It takes three parameters (&lt;code&gt;setNull(int parameterIndex, int sqlType, String typeName)&lt;/code&gt;) and also requires an array to contain the information to be passed to the driver and DBMS. The first two elements in this array are the same as for the first version of &lt;code&gt;setNull&lt;/code&gt;. The third element,</source>
          <target state="translated">, 이는 &lt;code&gt;null&lt;/code&gt; 로 설정되는 SQL 값의 유형을 나타냅니다 . 이 정보는 일부 DBMS에 필요하므로 응용 프로그램의 이식성을 보장하기 위해 필요합니다. 다른 버전은 &lt;code&gt;null&lt;/code&gt; 로 설정할 값 이 사용자 정의 형식 인 경우 사용됩니다. 세 개의 매개 변수 ( &lt;code&gt;setNull(int parameterIndex, int sqlType, String typeName)&lt;/code&gt; )를 사용하며 드라이버 및 DBMS에 전달할 정보를 포함하는 배열도 필요합니다. 이 배열의 처음 두 요소는 &lt;code&gt;setNull&lt;/code&gt; 의 첫 번째 버전과 동일 합니다. 세 번째 요소는</target>
        </trans-unit>
        <trans-unit id="45436bde9b51e2d33dfbfa89abf7ce1ca306bbd7" translate="yes" xml:space="preserve">
          <source>, which is a system-dependent mapping from</source>
          <target state="translated">의 시스템 종속 매핑입니다.</target>
        </trans-unit>
        <trans-unit id="5b3722b448a4606abd071b3bbfe5f793483e2748" translate="yes" xml:space="preserve">
          <source>, which is defined by the visibility of windows and device extents. The combination of the user clip and device clip defines the</source>
          <target state="translated">, 이는 창 및 장치 범위의 가시성에 의해 정의됩니다. 사용자 클립과 장치 클립의 조합은</target>
        </trans-unit>
        <trans-unit id="4361ac9a8d1c4cf30485b2c072f9a42b9b7f915f" translate="yes" xml:space="preserve">
          <source>, which is initially zero and is updated by the &lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">, 처음에는 0이고 &lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt; 메서드에 의해 업데이트됩니다 .</target>
        </trans-unit>
        <trans-unit id="e43033e63d7ceab91460021edf0b7b35745628df" translate="yes" xml:space="preserve">
          <source>, which is initially zero and is updated by the &lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">처음에는 0이며 &lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt; 메소드로 업데이트됩니다 .</target>
        </trans-unit>
        <trans-unit id="6d5cd8cf553af4dbd5c8a5bca8279043bef16bc6" translate="yes" xml:space="preserve">
          <source>, which is required to succeed. Even if the</source>
          <target state="translated">성공해야합니다. 경우에</target>
        </trans-unit>
        <trans-unit id="96d76a09a0aef4483a25597e2ba826c5ee110abd" translate="yes" xml:space="preserve">
          <source>, which is the index of the first element that should not be read or written. The base &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; class defines these properties as well as methods for</source>
          <target state="translated">, 읽거나 쓰지 말아야 할 첫 번째 요소의 인덱스입니다. 기본 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 클래스는 이러한 속성과 메서드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="74fb73451b43116edc82c8c1ebb7bc5aa05e5676" translate="yes" xml:space="preserve">
          <source>, which is the index of the next element to be read or written, and a</source>
          <target state="translated">다음에 읽거나 쓸 요소의 색인 인 a</target>
        </trans-unit>
        <trans-unit id="7a9bcc4f7193cc01c86741399a376f8bc5684cc5" translate="yes" xml:space="preserve">
          <source>, which makes the cookie visible to all directories on the server under</source>
          <target state="translated">쿠키는 서버의 모든 디렉토리에서 쿠키를 볼 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="222add9acbc876e1229d4f67ad2561a8fbd3dd76" translate="yes" xml:space="preserve">
          <source>, which represent Universal Resource Identifiers.</source>
          <target state="translated">범용 리소스 식별자를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a6abbee04d77f7a287bde2482dc5d89c9ae06315" translate="yes" xml:space="preserve">
          <source>, which represent Universal Resource Locators.</source>
          <target state="translated">범용 리소스 로케이터를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bec7245cb3d02340a3613a02193a0909c8733a16" translate="yes" xml:space="preserve">
          <source>, which represents connections to the resource pointed to by</source>
          <target state="translated">로 가리키는 리소스에 대한 연결을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="260fddefdb775f3b6fe92d2a0c4fb3c0e49179ea" translate="yes" xml:space="preserve">
          <source>, which the driver will ignore if the type of the object being set is not &lt;code&gt;java.sql.Types.NUMERIC&lt;/code&gt; or &lt;code&gt;java.sql.Types.DECIMAL&lt;/code&gt;. The parameter number is indicated by an element's position in the array returned by the method &lt;code&gt;getParams&lt;/code&gt;, with the first element being the value for the first placeholder parameter, the second element being the value for the second placeholder parameter, and so on. In other words, if the object being set is the value for the second placeholder parameter, the array containing it will be the second element in the array returned by &lt;code&gt;getParams&lt;/code&gt;.</source>
          <target state="translated">, 설정중인 객체의 유형이 &lt;code&gt;java.sql.Types.NUMERIC&lt;/code&gt; 또는 &lt;code&gt;java.sql.Types.DECIMAL&lt;/code&gt; 이 아닌 경우 드라이버가 무시합니다 . 매개 변수 번호는 &lt;code&gt;getParams&lt;/code&gt; 메소드에 의해 반환 된 배열에서 요소의 위치로 표시됩니다 . 첫 번째 요소는 첫 번째 자리 표시 자 매개 변수의 값이고 두 번째 요소는 두 번째 자리 표시 자 매개 변수의 값입니다. 즉, 설정되는 객체가 두 번째 자리 표시 자 매개 변수의 값인 경우이를 포함하는 배열은 &lt;code&gt;getParams&lt;/code&gt; 가 반환하는 배열의 두 번째 요소가됩니다 .</target>
        </trans-unit>
        <trans-unit id="53fb19d843676ce8b8935c86d9f3ae89c2b9e83b" translate="yes" xml:space="preserve">
          <source>, which together with</source>
          <target state="translated">와 함께</target>
        </trans-unit>
        <trans-unit id="4063dad31f80dd582aa34f61ea4d49daade6332e" translate="yes" xml:space="preserve">
          <source>, while &lt;code&gt;\P{&lt;/code&gt;</source>
          <target state="translated">하면서 &lt;code&gt;\P{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6fc19e6e1cca2b0502ad41042409fc0931c0c011" translate="yes" xml:space="preserve">
          <source>, with a TCP RST. Enabling the option with a timeout of zero does a forceful close immediately. If the specified timeout value exceeds 65,535 it will be reduced to 65,535.</source>
          <target state="translated">TCP RST를 사용합니다. 시간 초과가 0 인 옵션을 활성화하면 즉시 강제 종료됩니다. 지정된 시간 초과 값이 65,535를 초과하면 65,535로 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="0e6b17133ee203ec79f00ae950b0f3644bac8390" translate="yes" xml:space="preserve">
          <source>, with a management interface defined (as for current Standard MBeans) by any interface</source>
          <target state="translated">인터페이스에 의해 정의 된 관리 인터페이스 (현재 표준 MBean의 경우)</target>
        </trans-unit>
        <trans-unit id="51472f4e505e13be4546b408214b1193a49a29fe" translate="yes" xml:space="preserve">
          <source>, with no leading zeroes, followed by the decimal separator followed by one or more decimal digits representing the fractional part of</source>
          <target state="translated">앞에 0이없고, 소수점 구분 기호와 소수점 이하 자릿수를 나타내는 하나 이상의 소수가옵니다.</target>
        </trans-unit>
        <trans-unit id="5013ca3b49ff1600bdfc771f86cad03b695377fb" translate="yes" xml:space="preserve">
          <source>, with the variation noted in the class description.</source>
          <target state="translated">, 클래스 설명에 변형이 명시되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3ba20d78d4c62861c76fa35089e4ac73d342aba" translate="yes" xml:space="preserve">
          <source>, writers for single-image formats) should return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">, 단일 이미지 형식의 작성자는 &lt;code&gt;null&lt;/code&gt; 을 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="49f2c27de0c62874979145d559cf43aea5ff8758" translate="yes" xml:space="preserve">
          <source>, zero or more times</source>
          <target state="translated">, 0 번 이상</target>
        </trans-unit>
        <trans-unit id="3bc15c8aae3e4124dd409035f32ea2fd6835efc9" translate="yes" xml:space="preserve">
          <source>-</source>
          <target state="translated">-</target>
        </trans-unit>
        <trans-unit id="34a8742c72c6fcba26b1752531783d2c86cda0b5" translate="yes" xml:space="preserve">
          <source>- 0 if role can be read</source>
          <target state="translated">-역할을 읽을 수있는 경우 0</target>
        </trans-unit>
        <trans-unit id="ca6d6cf46a256d6c54c006af9c7f3d9846bd75f0" translate="yes" xml:space="preserve">
          <source>- 0 if role can be set</source>
          <target state="translated">-역할을 설정할 수있는 경우 0</target>
        </trans-unit>
        <trans-unit id="2079d97d9723c48114c3ec71092fc764a1b46e22" translate="yes" xml:space="preserve">
          <source>- 1 times, the array's length will be no greater than</source>
          <target state="translated">-1 배, 배열의 길이는</target>
        </trans-unit>
        <trans-unit id="a49c5a6fa6c6fd1cb9bb6413a96fbb723f82d1ed" translate="yes" xml:space="preserve">
          <source>- RELATION_BASIC_CREATION</source>
          <target state="translated">-RELATION_BASIC_CREATION</target>
        </trans-unit>
        <trans-unit id="b6620b69dbedf01b877555672178c18592db00fe" translate="yes" xml:space="preserve">
          <source>- RELATION_BASIC_REMOVAL</source>
          <target state="translated">-RELATION_BASIC_REMOVAL</target>
        </trans-unit>
        <trans-unit id="ede88e3d479f3367111a65b02f8a3b46bd7e9fc2" translate="yes" xml:space="preserve">
          <source>- RELATION_BASIC_UPDATE</source>
          <target state="translated">-RELATION_BASIC_UPDATE</target>
        </trans-unit>
        <trans-unit id="86bfd488b8ebb4666868df2b508187cd64c06def" translate="yes" xml:space="preserve">
          <source>- RELATION_MBEAN_CREATION</source>
          <target state="translated">-RELATION_MBEAN_CREATION</target>
        </trans-unit>
        <trans-unit id="5295d95f0a60cb5379ca369aa2e988c6509868d5" translate="yes" xml:space="preserve">
          <source>- RELATION_MBEAN_REMOVAL</source>
          <target state="translated">-RELATION_MBEAN_REMOVAL</target>
        </trans-unit>
        <trans-unit id="f27f141bac4a6a33d2e7612f090954390c506dbe" translate="yes" xml:space="preserve">
          <source>- RELATION_MBEAN_UPDATE</source>
          <target state="translated">-RELATION_MBEAN_UPDATE</target>
        </trans-unit>
        <trans-unit id="22ed75c13d53e0755fd2596c6e10ed6d57a87b47" translate="yes" xml:space="preserve">
          <source>- RelationNotification.RELATION_BASIC_CREATION if the relation is an object internal to the Relation Service</source>
          <target state="translated">-관계가 관계 서비스 내부의 오브젝트 인 경우 RelationNotification.RELATION_BASIC_CREATION</target>
        </trans-unit>
        <trans-unit id="0bf48622a63c23459def57045ad1c5388e32d96b" translate="yes" xml:space="preserve">
          <source>- RelationNotification.RELATION_BASIC_REMOVAL if the relation is an object internal to the Relation Service</source>
          <target state="translated">-관계가 관계 서비스 내부의 오브젝트 인 경우 RelationNotification.RELATION_BASIC_REMOVAL</target>
        </trans-unit>
        <trans-unit id="ec36adc6e8efcae9726b2b4c79b0007452d7f59b" translate="yes" xml:space="preserve">
          <source>- RelationNotification.RELATION_BASIC_REMOVAL if the relation was only internal to the Relation Service</source>
          <target state="translated">-관계가 관계 서비스 내부에만있는 경우 RelationNotification.RELATION_BASIC_REMOVAL</target>
        </trans-unit>
        <trans-unit id="ef9324c88a43b53ce7f3cb340f45b7e0e80ec913" translate="yes" xml:space="preserve">
          <source>- RelationNotification.RELATION_BASIC_UPDATE if the relation is an object internal to the Relation Service</source>
          <target state="translated">-관계가 관계 서비스 내부의 오브젝트 인 경우 RelationNotification.RELATION_BASIC_UPDATE</target>
        </trans-unit>
        <trans-unit id="c4584a41a4dc54bc63f52123fd7cf0529b5ac2bd" translate="yes" xml:space="preserve">
          <source>- RelationNotification.RELATION_MBEAN_CREATION if the relation is a MBean added as a relation.</source>
          <target state="translated">-RelationNotification. 관계가 관계로 추가 된 MBean 인 경우 RELATION_MBEAN_CREATION</target>
        </trans-unit>
        <trans-unit id="1fccdd524a7dde2a654533a2e1244da872d9709e" translate="yes" xml:space="preserve">
          <source>- RelationNotification.RELATION_MBEAN_REMOVAL if the relation is a MBean added as a relation.</source>
          <target state="translated">-관계가 관계로 추가 된 MBean 인 경우 RelationNotification.RELATION_MBEAN_REMOVAL</target>
        </trans-unit>
        <trans-unit id="1e08cd88ba6dcee948f0db2761891b5184096c4c" translate="yes" xml:space="preserve">
          <source>- RelationNotification.RELATION_MBEAN_REMOVAL if the relation is registered as an MBean.</source>
          <target state="translated">-관계가 MBean으로 등록 된 경우 RelationNotification.RELATION_MBEAN_REMOVAL</target>
        </trans-unit>
        <trans-unit id="48784a2a96086f332d5cdd929149f2ade0f75571" translate="yes" xml:space="preserve">
          <source>- RelationNotification.RELATION_MBEAN_UPDATE if the relation is a MBean added as a relation.</source>
          <target state="translated">-관계가 관계로 추가 된 MBean 인 경우 RelationNotification.RELATION_MBEAN_UPDATE</target>
        </trans-unit>
        <trans-unit id="d62d108f58330c6037dbe261dfea92afb068532f" translate="yes" xml:space="preserve">
          <source>- Replaced by &lt;a href=&quot;../basic/basicscrollpaneui#uninstallListeners(javax.swing.JComponent)&quot;&gt;&lt;code&gt;BasicScrollPaneUI.uninstallListeners(JComponent)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../basic/basicscrollpaneui#uninstallListeners(javax.swing.JComponent)&quot;&gt; &lt;code&gt;BasicScrollPaneUI.uninstallListeners(JComponent)&lt;/code&gt; &lt;/a&gt; 로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="eed7c07243c72a162365c2e2e35bc6e0d5d4eefb" translate="yes" xml:space="preserve">
          <source>- Replaced by &lt;code&gt;getText&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;getText&lt;/code&gt; 로 대체</target>
        </trans-unit>
        <trans-unit id="697642088edd07f079e38b885515410728f5e128" translate="yes" xml:space="preserve">
          <source>- Replaced by &lt;code&gt;setText(text)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;setText(text)&lt;/code&gt; 로 대체</target>
        </trans-unit>
        <trans-unit id="9d24a81f3f2b308f38f3f4be57d26c2a5a0151b5" translate="yes" xml:space="preserve">
          <source>- a MBean provided for that role does not exist</source>
          <target state="translated">-해당 역할에 제공된 MBean이 존재하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2400529439d7d1eab78b1f3223b4885b30e9799e" translate="yes" xml:space="preserve">
          <source>- a MBean provided for that role does not exist.</source>
          <target state="translated">-해당 역할에 제공된 MBean이 존재하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="88a64957edf00d9474f015fb761c9b025c85ec60" translate="yes" xml:space="preserve">
          <source>- an MBean provided for a role does not exist</source>
          <target state="translated">-역할에 제공된 MBean이 존재하지 않습니다</target>
        </trans-unit>
        <trans-unit id="3d2fa7fc6fa3d52373d667c3b984ecfc114f8880" translate="yes" xml:space="preserve">
          <source>- an MBean provided for that role does not exist</source>
          <target state="translated">-해당 역할에 제공된 MBean이 존재하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9cf7cdc0521221522bd0bd6e7a591f70a3c29d6c" translate="yes" xml:space="preserve">
          <source>- any of the required parameters is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">-필요한 매개 변수 중 하나가 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4242290d71a5d9e6aa6ebca8ea9b25e4a8f4db6e" translate="yes" xml:space="preserve">
          <source>- does not cut out anything from heavyweight components. This makes this lightweight component effectively transparent. Note that descendants of the lightweight component still affect the shapes of heavyweight components. An example of an</source>
          <target state="translated">-무거운 부품에서 아무것도 잘라 내지 않습니다. 이렇게하면이 경량 부품이 효과적으로 투명 해집니다. 경량 부품의 하위 항목은 여전히 ​​중량 부품의 모양에 영향을줍니다. 의 예</target>
        </trans-unit>
        <trans-unit id="295e100beb81b1cfc4cdcff65507b8e11d9c9151" translate="yes" xml:space="preserve">
          <source>- either using the addRelationType() method where the user has to create an object implementing the RelationType interface, and this object will be used as representing a relation type in the Relation Service.</source>
          <target state="translated">-사용자가 RelationType 인터페이스를 구현하는 오브젝트를 작성해야하는 addRelationType () 메소드를 사용하면이 오브젝트가 관계 서비스에서 관계 유형을 나타내는 것으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="58b7cc07e8df3d42b3c2a520b43e2505ec95dc67" translate="yes" xml:space="preserve">
          <source>- either using the createRelationType() method, where a RelationTypeSupport object will be created and kept in the Relation Service</source>
          <target state="translated">-RelationTypeSupport 오브젝트가 작성되어 관계 서비스에 보관되는 createRelationType () 메소드를 사용한다</target>
        </trans-unit>
        <trans-unit id="59c00d0a4c779d328983981c2186df4390b00f55" translate="yes" xml:space="preserve">
          <source>- empty means all ObjectNames are deselected, i.e. no ObjectName selected.</source>
          <target state="translated">-empty는 모든 ObjectName이 선택 해제되었음을 의미합니다. 즉, 선택된 ObjectName이 없습니다.</target>
        </trans-unit>
        <trans-unit id="913f752398689122cf822e7b446a72be4db940c7" translate="yes" xml:space="preserve">
          <source>- empty means all ObjectNames are selected, i.e. no ObjectName deselected.</source>
          <target state="translated">-empty는 모든 ObjectName이 선택되었음을 의미합니다. 즉 ObjectName이 선택 해제되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="711b9056952f63be734d6ab5fe24036f9f5d0d36" translate="yes" xml:space="preserve">
          <source>- have a relation id that is unique and unused in current Relation Service</source>
          <target state="translated">-현재 관계 서비스에서 고유하고 사용되지 않는 관계 ID를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="17ca790601c311c8c09b4169ab73883dc9a4dc56" translate="yes" xml:space="preserve">
          <source>- have a relation id unique and unused in current Relation Service</source>
          <target state="translated">-현재 관계 서비스에서 고유하고 사용되지 않는 관계 ID를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="9410a1457fd6acda9374d411517d9696bc8cf168" translate="yes" xml:space="preserve">
          <source>- have for RelationService ObjectName the ObjectName of current Relation Service</source>
          <target state="translated">-RelationService ObjectName에 현재 관계 서비스의 ObjectName이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="c971bf154de718fd78ffdabc4e7ad9e9283b5858" translate="yes" xml:space="preserve">
          <source>- have for relation type a relation type created in the Relation Service</source>
          <target state="translated">-관계 유형에 관계 서비스에서 작성된 관계 유형이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="c5178e089ce7a5bdbe53e1c8dde0fa33019f7bd0" translate="yes" xml:space="preserve">
          <source>- have roles conforming to the role info provided in the relation type.</source>
          <target state="translated">-관계 유형에 제공된 역할 정보를 준수하는 역할을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="e833685c9fbff05178eddda6a5d50665aa64b2ce" translate="yes" xml:space="preserve">
          <source>- if removing one MBean reference in the role makes its number of references less than the minimum degree, the relation has to be removed.</source>
          <target state="translated">-역할에서 하나의 MBean 참조를 제거하면 해당 참조 수가 최소 등급보다 작 으면 관계를 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="2a6de998659c660d0031ab9cd1a6eb4a48543518" translate="yes" xml:space="preserve">
          <source>- if the 1st day of the month is a Monday, week one starts on the 1st and there is no week zero</source>
          <target state="translated">-매월 1 일이 월요일 인 경우 1 주일은 1 일에 시작하며 0 주가 없습니다.</target>
        </trans-unit>
        <trans-unit id="b880dd95ca62ab8067f2db083da5beafee01c67d" translate="yes" xml:space="preserve">
          <source>- if the 1st day of the year is a Monday, week one starts on the 1st</source>
          <target state="translated">-첫 번째 요일이 월요일 인 경우 첫 번째 요일은 첫 번째 요일에 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="8440431edd4386f854c71ee2e0b52a4b41892f11" translate="yes" xml:space="preserve">
          <source>- if the 1st day of the year is a Monday, week one starts on the 1st and there is no week zero</source>
          <target state="translated">-첫 번째 요일이 월요일 인 경우 첫 번째 주에 첫 번째 주가 시작되고 0 주가 없습니다.</target>
        </trans-unit>
        <trans-unit id="cf0d4829e6a952b50ef42ff74d1837b395ed7078" translate="yes" xml:space="preserve">
          <source>- if the 2nd day of the month is a Monday, week one starts on the 2nd and the 1st is in week zero</source>
          <target state="translated">-매월 둘째 날이 월요일이면 첫째주는 둘째 주에 시작하고 첫째주는 0 주입니다.</target>
        </trans-unit>
        <trans-unit id="073ca2f20cfda560e04581cc9339c0ee9e5574c7" translate="yes" xml:space="preserve">
          <source>- if the 2nd day of the year is a Monday, week one starts on the 2nd and the 1st is in the last week of the previous year</source>
          <target state="translated">-올해의 두 번째 날이 월요일이면 첫 번째 주가 두 번째 주에 시작하고 첫 번째 주가 전년도 마지막 주에 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2d9ffaed9869a3c60ca1db2740e038afef073a8" translate="yes" xml:space="preserve">
          <source>- if the 2nd day of the year is a Monday, week one starts on the 2nd and the 1st is in week zero</source>
          <target state="translated">-올해의 두 번째 날이 월요일이면 첫 번째주는 두 번째 주에 시작하고 첫 번째주는 0 주에 있습니다.</target>
        </trans-unit>
        <trans-unit id="714a76ef8786762f2d6ca2713bcc3f810526877b" translate="yes" xml:space="preserve">
          <source>- if the 4th day of the month is a Monday, week one starts on the 4th and the 1st to 3rd is in week zero</source>
          <target state="translated">-해당 월의 4 일이 월요일 인 경우 1 주일은 4 일에 시작하고 1 일부터 3 일은 0 주입니다.</target>
        </trans-unit>
        <trans-unit id="678bd05da0c88f88923eb2d710ee41126b0f60a4" translate="yes" xml:space="preserve">
          <source>- if the 4th day of the year is a Monday, week one starts on the 4th and the 1st to 3rd is in the last week of the previous year</source>
          <target state="translated">-연중 4 일이 월요일 인 경우 1 주일은 4 일에 시작하고 1 일부터 3 일은 전년도 마지막 주에</target>
        </trans-unit>
        <trans-unit id="66c95fe3c8aee68d8c323f541d16a528610ed1cf" translate="yes" xml:space="preserve">
          <source>- if the 4th day of the year is a Monday, week one starts on the 4th and the 1st to 3rd is in week zero</source>
          <target state="translated">-연중 4 일이 월요일 인 경우 1 주일은 4 일에 시작하고 1 일부터 3 일은 0 주입니다.</target>
        </trans-unit>
        <trans-unit id="716445101df0524b9159defd5e403e7e69dda99c" translate="yes" xml:space="preserve">
          <source>- if the 5th day of the month is a Monday, week two starts on the 5th and the 1st to 4th is in week one</source>
          <target state="translated">-매월 5 일이 월요일 인 경우 2 주차는 5 일에 시작하고 1 일부터 4 일은 1 주차</target>
        </trans-unit>
        <trans-unit id="cccce4ffe150fc903cb501ef69dc6a4a4436c2fb" translate="yes" xml:space="preserve">
          <source>- if the 5th day of the year is a Monday, week two starts on the 5th and the 1st to 4th is in week one</source>
          <target state="translated">-연중 5 일이 월요일 인 경우 2 주차는 5 일에 시작하며 1 일부터 4 일은 1 주차</target>
        </trans-unit>
        <trans-unit id="27d797653129bd33f3f6defdadcbe13e5288db36" translate="yes" xml:space="preserve">
          <source>- if the remaining number of references after removing the MBean reference is still in the cardinality range, keep the relation and update it calling its handleMBeanUnregistration() callback.</source>
          <target state="translated">-MBean 참조를 제거한 후 남은 참조 수가 카디널리티 범위에 있으면 관계를 유지하고 handleMBeanUnregistration () 콜백을 호출하여 관계를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="73842186de5d5c93e290b0518e7580587c77d1e7" translate="yes" xml:space="preserve">
          <source>- implement the Relation interface</source>
          <target state="translated">-관계 인터페이스 구현</target>
        </trans-unit>
        <trans-unit id="71cba09cf54647d5da2865f1e1185b3c29fd77a0" translate="yes" xml:space="preserve">
          <source>- integer corresponding to RoleStatus.NO_ROLE_WITH_NAME</source>
          <target state="translated">-RoleStatus에 해당하는 정수. NO_ROLE_WITH_NAME</target>
        </trans-unit>
        <trans-unit id="35cd080779d22f077492e6c1125109075bd1a101" translate="yes" xml:space="preserve">
          <source>- integer corresponding to RoleStatus.ROLE_NOT_READABLE</source>
          <target state="translated">-RoleStatus.ROLE_NOT_READABLE에 해당하는 정수</target>
        </trans-unit>
        <trans-unit id="fbfbb25fcdd96d433d138ff1d0f37ac677473e6d" translate="yes" xml:space="preserve">
          <source>- integer for RoleStatus.LESS_THAN_MIN_ROLE_DEGREE</source>
          <target state="translated">-RoleStatus.LESS_THAN_MIN_ROLE_DEGREE에 대한 정수</target>
        </trans-unit>
        <trans-unit id="53b92f6986e2d06ee0fed7680aad942cd46e4028" translate="yes" xml:space="preserve">
          <source>- integer for RoleStatus.MORE_THAN_MAX_ROLE_DEGREE</source>
          <target state="translated">-RoleStatus에 대한 정수입니다 .MORE_THAN_MAX_ROLE_DEGREE</target>
        </trans-unit>
        <trans-unit id="3c7eec6efa5096a887fd9472be1a406ebb2c52cc" translate="yes" xml:space="preserve">
          <source>- integer for RoleStatus.REF_MBEAN_NOT_REGISTERED</source>
          <target state="translated">-RoleStatus의 정수 .REF_MBEAN_NOT_REGISTERED</target>
        </trans-unit>
        <trans-unit id="7ae0ee4cf10e4db68c1cbcea9ed995e301041b98" translate="yes" xml:space="preserve">
          <source>- integer for RoleStatus.REF_MBEAN_OF_INCORRECT_CLASS</source>
          <target state="translated">-RoleStatus의 정수 .REF_MBEAN_OF_INCORRECT_CLASS</target>
        </trans-unit>
        <trans-unit id="3bd45a04cba630b0a20a5641df41e4b4fe6f1c22" translate="yes" xml:space="preserve">
          <source>- integer for RoleStatus.ROLE_NOT_WRITABLE</source>
          <target state="translated">-RoleStatus.ROLE_NOT_WRITABLE 정수</target>
        </trans-unit>
        <trans-unit id="708af544b5b40d553bc8b199c3405e1db9a7fa7f" translate="yes" xml:space="preserve">
          <source>- internal relation</source>
          <target state="translated">-내부 관계</target>
        </trans-unit>
        <trans-unit id="27863559c765450f92d640333eb502062a46b928" translate="yes" xml:space="preserve">
          <source>- maliciously misspelled by substitution of non-Latin letters. &lt;a href=&quot;http://www.unicode.org/reports/tr36/&quot;&gt;Unicode Technical Report #36&lt;/a&gt; discusses security issues of IDN support as well as possible solutions. Applications are responsible for taking adequate security measures when using international domain names.</source>
          <target state="translated">-비 라틴 문자를 대체하여 악의적으로 철자가 잘못되었습니다. &lt;a href=&quot;http://www.unicode.org/reports/tr36/&quot;&gt;유니 코드 기술 보고서 ​​# 36&lt;/a&gt; 에서는 IDN 지원의 보안 문제와 가능한 솔루션에 대해 설명합니다. 국제 도메인 이름을 사용할 때 응용 프로그램은 적절한 보안 조치를 취해야합니다.</target>
        </trans-unit>
        <trans-unit id="18d04cebd3dc96d2c82a1cf7defe580a05ab1f71" translate="yes" xml:space="preserve">
          <source>- matching factories for stream print service instance, empty if no suitable factories could be located.</source>
          <target state="translated">-스트림 인쇄 서비스 인스턴스에 대한 일치하는 팩토리. 적합한 팩토리를 찾을 수 없으면 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="60d0f355e26021b2700f0adc231c35443e4d3ac1" translate="yes" xml:space="preserve">
          <source>- no Relation Service name in MBean</source>
          <target state="translated">-MBean에 관계 서비스 이름이 없음</target>
        </trans-unit>
        <trans-unit id="47876c47a901db79d766d16af096cd6aced8b876" translate="yes" xml:space="preserve">
          <source>- no relation id</source>
          <target state="translated">-관계 ID 없음</target>
        </trans-unit>
        <trans-unit id="b088fe99052c36faa0fb8020a77e9df97a12e3ad" translate="yes" xml:space="preserve">
          <source>- no relation identifier in MBean</source>
          <target state="translated">-MBean에 관계 식별자가 없다</target>
        </trans-unit>
        <trans-unit id="e602fc4a88ca73f5bab90664d7fe46b0b918a5c4" translate="yes" xml:space="preserve">
          <source>- no relation type name</source>
          <target state="translated">-관계 유형 이름이 없습니다.</target>
        </trans-unit>
        <trans-unit id="e6c4af68ef20959108709e047716d955b79ed458" translate="yes" xml:space="preserve">
          <source>- no relation type name in MBean</source>
          <target state="translated">-MBean에 관계형 명 없음</target>
        </trans-unit>
        <trans-unit id="a064e5745708ab6b95a07be2cb627c6dd35fd10c" translate="yes" xml:space="preserve">
          <source>- no role info provided</source>
          <target state="translated">-역할 정보가 제공되지 않음</target>
        </trans-unit>
        <trans-unit id="d59ff706b8e0e9ccb05c366c3e9c5358f7fbda54" translate="yes" xml:space="preserve">
          <source>- no source object</source>
          <target state="translated">-소스 객체가 없습니다</target>
        </trans-unit>
        <trans-unit id="969cd0ee8bc3f53533bc79d677ba5461c2e522f4" translate="yes" xml:space="preserve">
          <source>- no value for the notification type</source>
          <target state="translated">-알림 유형에 대한 값이 없습니다.</target>
        </trans-unit>
        <trans-unit id="325b81a2f3ba87cbc1ecfb230ab740dbe011a297" translate="yes" xml:space="preserve">
          <source>- null means all ObjectNames are implicitly deselected, except the ObjectNames explicitly selected</source>
          <target state="translated">-null은 명시 적으로 선택된 ObjectNames를 제외하고 모든 ObjectNames가 암시 적으로 선택 취소되었음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="11794dcb02043108ccd93e386b5e41720fabd6d1" translate="yes" xml:space="preserve">
          <source>- null means all ObjectNames are implicitly selected, except the ObjectNames explicitly deselected</source>
          <target state="translated">-null은 ObjectNames가 명시 적으로 선택 해제 된 것을 제외하고 모든 ObjectNames가 암시 적으로 선택됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="a062f470048d33af8784a87a700f4f2f535beef0" translate="yes" xml:space="preserve">
          <source>- one null role info provided</source>
          <target state="translated">-하나의 null 역할 정보 제공</target>
        </trans-unit>
        <trans-unit id="c22203c1d36e3c3eec21c07d3fd76bd022720899" translate="yes" xml:space="preserve">
          <source>- one referenced MBean in the value is not an Object of the MBean class expected for that role</source>
          <target state="translated">-값에서 참조 된 하나의 MBean이 해당 역할에 필요한 MBean 클래스의 오브젝트가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="67dfa3f8db2e1d4148e516aee26006a423f1c62f" translate="yes" xml:space="preserve">
          <source>- the ObjectName of the concerned MBean is selected (explicitly OR (implicitly and not explicitly deselected))</source>
          <target state="translated">-관련 MBean의 ObjectName이 선택됨 (명시 적으로 OR (암시 적으로 명시 적으로 선택 취소되지 않음))</target>
        </trans-unit>
        <trans-unit id="487f98c1113f41a4bc0a5ba3b4f862d71614b960" translate="yes" xml:space="preserve">
          <source>- the Relation Service name in the MBean is not the one of the current Relation Service</source>
          <target state="translated">-MBean의 관계 서비스 이름이 현재 관계 서비스 이름이 아님</target>
        </trans-unit>
        <trans-unit id="db00da19cb3d65c170d5c2bccd60e3b748d6c63e" translate="yes" xml:space="preserve">
          <source>- the given shape will be cut out from heavyweight components.</source>
          <target state="translated">-주어진 모양은 무거운 부품에서 잘릴 것입니다.</target>
        </trans-unit>
        <trans-unit id="b7b6e83a67eeff51081cee64851141e81e575513" translate="yes" xml:space="preserve">
          <source>- the notification type is not RELATION_BASIC_CREATION, RELATION_MBEAN_CREATION, RELATION_BASIC_REMOVAL or RELATION_MBEAN_REMOVAL</source>
          <target state="translated">-알림 유형이 RELATION_BASIC_CREATION, RELATION_MBEAN_CREATION, RELATION_BASIC_REMOVAL 또는 RELATION_MBEAN_REMOVAL이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="d5b4236ee459a4aec0d98eaf2c827d00e89a0810" translate="yes" xml:space="preserve">
          <source>- the number of referenced MBeans in a role exceeds expected maximum degree</source>
          <target state="translated">-역할에서 참조 된 MBean 수가 예상 최대 값을 초과 함</target>
        </trans-unit>
        <trans-unit id="cfd86134c78a8a65d7aaf23a32f20ef6ee1b159f" translate="yes" xml:space="preserve">
          <source>- the number of referenced MBeans in a role is less than expected minimum degree</source>
          <target state="translated">-역할에서 참조 된 MBean의 수가 예상 최소도보다 적습니다.</target>
        </trans-unit>
        <trans-unit id="dcf22f5d2c59081cd0ac605a08f6ea96f5e209a4" translate="yes" xml:space="preserve">
          <source>- the number of referenced MBeans in given value is less than expected minimum degree</source>
          <target state="translated">-주어진 값에서 참조 된 MBean의 수가 예상 최소도보다 적습니다.</target>
        </trans-unit>
        <trans-unit id="dfbd17da406339c3343bdb00b8123a9d9ca4acca" translate="yes" xml:space="preserve">
          <source>- the number of referenced MBeans in provided value exceeds expected maximum degree</source>
          <target state="translated">-제공된 값에서 참조 된 MBean 수가 예상 최대 값을 초과 함</target>
        </trans-unit>
        <trans-unit id="0d8b17650de13b6abd25c64392eb65194c0b4e37" translate="yes" xml:space="preserve">
          <source>- the relation identifier is already used in the Relation Service</source>
          <target state="translated">-관계 식별자가 관계 서비스에서 이미 사용 중입니다.</target>
        </trans-unit>
        <trans-unit id="656f29da828a5638b776a109ed30330dd9e851d5" translate="yes" xml:space="preserve">
          <source>- the relation type name in MBean does not correspond to a relation type created in the Relation Service</source>
          <target state="translated">-MBean의 관계 유형 이름이 관계 서비스에서 작성된 관계 유형에 해당하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c6ec8e3ebc6ecdcd0e3e50cc24f9d178b4bf3f1c" translate="yes" xml:space="preserve">
          <source>- the role does not exist or is not writable</source>
          <target state="translated">-해당 역할이 존재하지 않거나 쓸 수 없습니다</target>
        </trans-unit>
        <trans-unit id="f83bb07b1fc60f146f2a5b2009e37df86ca73fac" translate="yes" xml:space="preserve">
          <source>- the role is not readable.</source>
          <target state="translated">-역할을 읽을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4b0dca14388e9ce37bbfb08411b2c31ac742b17e" translate="yes" xml:space="preserve">
          <source>- the same name has been used for two different role infos</source>
          <target state="translated">-서로 다른 두 가지 역할 정보에 동일한 이름이 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="04af8472af0d19560e2047d33e544d9a635a42c5" translate="yes" xml:space="preserve">
          <source>- the same name has been used for two different roles</source>
          <target state="translated">-두 개의 다른 역할에 동일한 이름이 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="0260803d6e98417ea4084ed4f19bc9bf15ead604" translate="yes" xml:space="preserve">
          <source>- the same name is used for two roles.</source>
          <target state="translated">-동일한 이름이 두 가지 역할에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="34f3c0f22031d3a251fb076e5512276ba6a53a38" translate="yes" xml:space="preserve">
          <source>- the same role name is used for two different roles</source>
          <target state="translated">-동일한 역할 이름이 서로 다른 두 역할에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4be44fa273af71714a49299228c39332b6064116" translate="yes" xml:space="preserve">
          <source>- the source object is not a Relation Service</source>
          <target state="translated">-소스 오브젝트가 관계 서비스가 아닙니다</target>
        </trans-unit>
        <trans-unit id="0b256196f8f6d9656c17f3bc496234d349715235" translate="yes" xml:space="preserve">
          <source>- the type of the operation (registration or unregistration) is selected</source>
          <target state="translated">-작업 유형 (등록 또는 등록 취소)이 선택됨</target>
        </trans-unit>
        <trans-unit id="189e0e0c7f4bf570604556df587d201ffad2ab3e" translate="yes" xml:space="preserve">
          <source>- there is already a relation type with that name</source>
          <target state="translated">-이미 그 이름을 가진 관계 유형이 있습니다</target>
        </trans-unit>
        <trans-unit id="f37524571253e1282a01b41b1d2528a34fd7a8e8" translate="yes" xml:space="preserve">
          <source>- there is no role with given name</source>
          <target state="translated">-이름이 지정된 역할이 없습니다</target>
        </trans-unit>
        <trans-unit id="3e3d917e0ac20b8d7a997e92dd5a4652d462c476" translate="yes" xml:space="preserve">
          <source>- year-proleptic -1 = 'BCE' year-of-era 2</source>
          <target state="translated">-연도 별 -1 = 'BCE'연도 2</target>
        </trans-unit>
        <trans-unit id="9676618c2a093d384154e9e8ed0a6fcfc65516f9" translate="yes" xml:space="preserve">
          <source>- year-proleptic 0 = 'BCE' year-of-era 1</source>
          <target state="translated">-연도 별 0 = 'BCE'연도 1</target>
        </trans-unit>
        <trans-unit id="5d29e2a6a5abc080fb6f25a49acdcd39b7289cb5" translate="yes" xml:space="preserve">
          <source>- year-proleptic 1 = 'CE' year-of-era 1</source>
          <target state="translated">-다년 1 = 'CE'연도 1</target>
        </trans-unit>
        <trans-unit id="dfd1a912cefe97afa00bb135c9caa808bebe2a75" translate="yes" xml:space="preserve">
          <source>- year-proleptic 2 = 'CE' year-of-era 2</source>
          <target state="translated">-다 학년 2 = 'CE'년도 2</target>
        </trans-unit>
        <trans-unit id="cd714b63a78768a7af434e130937845ac115d4f8" translate="yes" xml:space="preserve">
          <source>-- &lt;a href=&quot;jobstatereason&quot;&gt;JobStateReason&lt;/a&gt;</source>
          <target state="translated">- &lt;a href=&quot;jobstatereason&quot;&gt;에 JobStateReason&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a22c047690405b0a1e8bb31e9ee4dd87ea4ad1c" translate="yes" xml:space="preserve">
          <source>-- &lt;a href=&quot;printerstatereason&quot;&gt; PrinterStateReason&lt;/a&gt;</source>
          <target state="translated">- &lt;a href=&quot;printerstatereason&quot;&gt;PrinterStateReason와&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf33b4d60be9332952d7d66bae107fe7666042ca" translate="yes" xml:space="preserve">
          <source>-- &lt;a href=&quot;printerstatereason&quot;&gt;PrinterStateReason&lt;/a&gt;</source>
          <target state="translated">- &lt;a href=&quot;printerstatereason&quot;&gt;PrinterStateReason와&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e6c1f25fbb2cfe6490b97de65cf4a96f2577657" translate="yes" xml:space="preserve">
          <source>-- &lt;a href=&quot;severity&quot;&gt;Severity&lt;/a&gt;</source>
          <target state="translated">- &lt;a href=&quot;severity&quot;&gt;심각도&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5666d45ec6053745b30e8ac4fb3d8566affb3b7" translate="yes" xml:space="preserve">
          <source>----------------------------&amp;gt;</source>
          <target state="translated">----------------------------&amp;gt;</target>
        </trans-unit>
        <trans-unit id="62b449d772dde4e7e9951eca6f4d269476cd49be" translate="yes" xml:space="preserve">
          <source>-0.7</source>
          <target state="translated">-0.7</target>
        </trans-unit>
        <trans-unit id="19ec27b39a757d74c82ec2714e64f1542e1ca909" translate="yes" xml:space="preserve">
          <source>-1 (do not render underline)</source>
          <target state="translated">-1 (밑줄을 렌더링하지 않음)</target>
        </trans-unit>
        <trans-unit id="fd6d649f20a2dfcf69061a7eadb54a90bce4c273" translate="yes" xml:space="preserve">
          <source>-1 for all</source>
          <target state="translated">모두 -1</target>
        </trans-unit>
        <trans-unit id="be3dd2feaa8f294d9f197bab95cd26834341b9ad" translate="yes" xml:space="preserve">
          <source>-1 if this duration is negative, 0 if the duration is zero, and 1 if the duration is positive.</source>
          <target state="translated">이 기간이 음수이면 -1, 기간이 0이면 0, 기간이 양수이면 1입니다.</target>
        </trans-unit>
        <trans-unit id="2e1333c6352aba882c06441fc474d8ac7fde5a83" translate="yes" xml:space="preserve">
          <source>-1 of this object does not have an accessible parent. Otherwise, the index of the child in its accessible parent.</source>
          <target state="translated">이 개체의 -1에 액세스 가능한 부모가 없습니다. 그렇지 않으면 액세스 가능한 부모에있는 자식의 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="f8b9f339b55f04d8f4de30185120d8967dd0d753" translate="yes" xml:space="preserve">
          <source>-1, 0 or 1 as the value of this BigInteger is negative, zero or positive.</source>
          <target state="translated">이 BigInteger의 값이 -1, 0 또는 1이면 음수, 0 또는 양수입니다.</target>
        </trans-unit>
        <trans-unit id="782197104c77f94167797eeaac4f83c57acbdf6a" translate="yes" xml:space="preserve">
          <source>-1, 0 or 1 as this &lt;code&gt;UUID&lt;/code&gt; is less than, equal to, or greater than &lt;code&gt;val&lt;/code&gt;</source>
          <target state="translated">이 &lt;code&gt;UUID&lt;/code&gt; 가 &lt;code&gt;val&lt;/code&gt; 보다 작거나 같거나 크므 로 -1, 0 또는 1</target>
        </trans-unit>
        <trans-unit id="178c0c0826dacbc10840d529c2ebf0364b36bd35" translate="yes" xml:space="preserve">
          <source>-1, 0 or 1 as this BigInteger is numerically less than, equal to, or greater than &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="translated">이 BigInteger가 &lt;code&gt;val&lt;/code&gt; 보다 작거나 같거나 크므로 -1, 0 또는 1 입니다.</target>
        </trans-unit>
        <trans-unit id="e4d8d1f51c6800c77c83e9f4ec7e99a5b6f1a395" translate="yes" xml:space="preserve">
          <source>-1, 0 or 1 depending on whether the corresponding boundary-point of the Range is respectively before, equal to, or after the corresponding boundary-point of &lt;code&gt;sourceRange&lt;/code&gt;.</source>
          <target state="translated">Range의 해당 경계 지점이 각각 &lt;code&gt;sourceRange&lt;/code&gt; 의 해당 경계 지점 이전인지, 같은지 또는 이후인지에 따라 -1, 0 또는 1 입니다.</target>
        </trans-unit>
        <trans-unit id="59ecf1ee064f435132bc1f5f5f7595603b7e5542" translate="yes" xml:space="preserve">
          <source>-1, 0, or 1 as the value of this &lt;code&gt;BigDecimal&lt;/code&gt; is negative, zero, or positive.</source>
          <target state="translated">이 &lt;code&gt;BigDecimal&lt;/code&gt; 의 값 이 음수, 0 또는 양수인 경우 -1, 0 또는 1 입니다.</target>
        </trans-unit>
        <trans-unit id="54b7c83f7b9ea92bc44500fa4bd7427737cd0135" translate="yes" xml:space="preserve">
          <source>-1, 0, or 1 as this &lt;code&gt;BigDecimal&lt;/code&gt; is numerically less than, equal to, or greater than &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;BigDecimal&lt;/code&gt; 이 수치 적으로 &lt;code&gt;val&lt;/code&gt; 보다 작거나 같거나 같으 므로 -1, 0 또는 1 입니다.</target>
        </trans-unit>
        <trans-unit id="d8d26e15fca9e3df24eb0fbb3d4cee21c6464897" translate="yes" xml:space="preserve">
          <source>-1, where</source>
          <target state="translated">-1, 여기서</target>
        </trans-unit>
        <trans-unit id="d7cef43b644004ebaf7ab4ea711c9f2cf8d93ecd" translate="yes" xml:space="preserve">
          <source>-1.</source>
          <target state="translated">-1.</target>
        </trans-unit>
        <trans-unit id="3b75a28be8e68812da8cc1a9c77f1f04dfa30815" translate="yes" xml:space="preserve">
          <source>-1.0</source>
          <target state="translated">-1.0</target>
        </trans-unit>
        <trans-unit id="f11071fd6a8d7fff0a2b1c7f9ae99800857c17f2" translate="yes" xml:space="preserve">
          <source>-1.4</source>
          <target state="translated">-1.4</target>
        </trans-unit>
        <trans-unit id="cba359d9156fd30d7aabda7ab98eec54851b0b01" translate="yes" xml:space="preserve">
          <source>-10.0</source>
          <target state="translated">-10.0</target>
        </trans-unit>
        <trans-unit id="c679b691bc57b5b565da3fd3b2e394a9a91d2173" translate="yes" xml:space="preserve">
          <source>-1L to indicate unknown length.</source>
          <target state="translated">알 수없는 길이를 나타내는 -1L</target>
        </trans-unit>
        <trans-unit id="0138c87e8acdcbde843ff9f154dc418938ce1d03" translate="yes" xml:space="preserve">
          <source>-2.0</source>
          <target state="translated">-2.0</target>
        </trans-unit>
        <trans-unit id="d2c2a7e0e223546832dc13ef80bdeb56ddbd8109" translate="yes" xml:space="preserve">
          <source>-3.0</source>
          <target state="translated">-3.0</target>
        </trans-unit>
        <trans-unit id="867216daf8b64b72e4fbd6d417049af17f3bb2eb" translate="yes" xml:space="preserve">
          <source>-4.0</source>
          <target state="translated">-4.0</target>
        </trans-unit>
        <trans-unit id="146c6cd2ea1fab72f1c7bb5f6295950df3281b0b" translate="yes" xml:space="preserve">
          <source>-6.0</source>
          <target state="translated">-6.0</target>
        </trans-unit>
        <trans-unit id="8050b11ef63234f6ee0bbc6aa0f8a798948333ea" translate="yes" xml:space="preserve">
          <source>-7.0</source>
          <target state="translated">-7.0</target>
        </trans-unit>
        <trans-unit id="715a7ed0768cc4023420bb10be1ac166ca0de933" translate="yes" xml:space="preserve">
          <source>-Djavax.sql.rowset.RowSetFactory=com.sun.rowset.RowSetFactoryImpl</source>
          <target state="translated">-Djavax.sql.rowset.RowSetFactory=com.sun.rowset.RowSetFactoryImpl</target>
        </trans-unit>
        <trans-unit id="d34bb288eeccb2934622f2e8f452c86f125f45ce" translate="yes" xml:space="preserve">
          <source>-based design; see</source>
          <target state="translated">기반 디자인; 보다</target>
        </trans-unit>
        <trans-unit id="dea1838a7404d0523c614f11ecece49c2266ff50" translate="yes" xml:space="preserve">
          <source>-coordinate of the new location's top-left corner in the parent's coordinate space</source>
          <target state="translated">-부모 좌표 공간에서 새 위치의 왼쪽 상단 모서리 좌표</target>
        </trans-unit>
        <trans-unit id="c7a1f6b4e3c1dd3b86799267aa6320a68d22121e" translate="yes" xml:space="preserve">
          <source>-coordinate of this component</source>
          <target state="translated">-이 구성 요소의 좌표</target>
        </trans-unit>
        <trans-unit id="24277dcc6ce49dc0983e8f79c7a7139fcfd93a89" translate="yes" xml:space="preserve">
          <source>-default value has a corresponding &lt;code&gt;set&lt;i&gt;attributeName&lt;/i&gt;ToDefault&lt;/code&gt; method. Default value fields are not provided.</source>
          <target state="translated">-default 값에는 해당 &lt;code&gt;set&lt;i&gt;attributeName&lt;/i&gt;ToDefault&lt;/code&gt; 메소드가 있습니다. 기본값 필드는 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c52c48ccb0f8097ac9def2a01b5298cfefefb451" translate="yes" xml:space="preserve">
          <source>-style pattern. Instead of modifying a class directly, the class is designed so that either its superclass is generated by annotation processing or subclasses of the class are generated by annotation processing. If the subclasses are generated, the parent class may be designed to use factories instead of public constructors so that only subclass instances would be presented to clients of the parent class.</source>
          <target state="translated">스타일 패턴. 클래스를 직접 수정하는 대신 클래스는 주석 처리에 의해 수퍼 클래스가 생성되거나 주석 처리에 의해 클래스의 서브 클래스가 생성되도록 설계되었습니다. 서브 클래스가 생성되면, 부모 클래스는 퍼블릭 생성자 대신 팩토리를 사용하도록 설계되어 서브 클래스 인스턴스 만 상위 클래스의 클라이언트에 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed83deecc850793b894d3f24bfc7c47412dba4bf" translate="yes" xml:space="preserve">
          <source>-that is, the result of &lt;code&gt;this.substring(k, m + 1)&lt;/code&gt;.</source>
          <target state="translated">즉, &lt;code&gt;this.substring(k, m + 1)&lt;/code&gt; 의 결과입니다 .</target>
        </trans-unit>
        <trans-unit id="3a52ce780950d4d969792a2559cd519d7ee8c727" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>
        </trans-unit>
        <trans-unit id="daa465f8efb7138adf721d518a1b5bcfa5e8d914" translate="yes" xml:space="preserve">
          <source>. (Two elements &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; are</source>
          <target state="translated">. (두 요소 &lt;code&gt;e1&lt;/code&gt; 과 &lt;code&gt;e2&lt;/code&gt; 는</target>
        </trans-unit>
        <trans-unit id="6a7e1859fc323854d47ce86452386a58e1c6117e" translate="yes" xml:space="preserve">
          <source>. A</source>
          <target state="translated">. ㅏ</target>
        </trans-unit>
        <trans-unit id="621a3630a4e66ea98edef5c550d214dfc4f6ab8e" translate="yes" xml:space="preserve">
          <source>. A block is the smallest storage unit of a file store. Every read and write operation is performed on a multiple of blocks.</source>
          <target state="translated">. 블록은 파일 저장소의 가장 작은 저장 단위입니다. 모든 읽기 및 쓰기 작업은 여러 블록에서 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="7edd73744ee1c8554a2d59e118be1d04bd85caad" translate="yes" xml:space="preserve">
          <source>. A collection represents a group of objects, known as its</source>
          <target state="translated">. 컬렉션은 개체 그룹으로 알려진 개체 그룹을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="89db566b9248b2ba0e371e4091084d97d5357519" translate="yes" xml:space="preserve">
          <source>. A correctly rounded method is generally the best a floating-point approximation can be; however, it is impractical for many floating-point methods to be correctly rounded. Instead, for the &lt;code&gt;Math&lt;/code&gt; class, a larger error bound of 1 or 2 ulps is allowed for certain methods. Informally, with a 1 ulp error bound, when the exact result is a representable number, the exact result should be returned as the computed result; otherwise, either of the two floating-point values which bracket the exact result may be returned. For exact results large in magnitude, one of the endpoints of the bracket may be infinite. Besides accuracy at individual arguments, maintaining proper relations between the method at different arguments is also important. Therefore, most methods with more than 0.5 ulp errors are required to be</source>
          <target state="translated">. 올바르게 반올림 된 방법이 일반적으로 부동 소수점 근사값 일 수 있습니다. 그러나 많은 부동 소수점 메서드를 올바르게 반올림하는 것은 비현실적입니다. 대신 &lt;code&gt;Math&lt;/code&gt; 클래스의 경우 특정 메서드에 대해 1 또는 2 ulps의 더 큰 오류 범위가 허용됩니다. 비공식적으로, 1 ulp 에러 바운드, 정확한 결과가 표현 가능한 숫자 일 때, 정확한 결과는 계산 된 결과로 반환되어야합니다; 그렇지 않으면 정확한 결과를 괄호로 묶는 두 개의 부동 소수점 값 중 하나가 리턴 될 수 있습니다. 정확한 결과가 큰 경우, 브래킷의 끝점 중 하나가 무한 할 수 있습니다. 개별 논거의 정확성 외에도, 다른 논거에서 방법 사이의 적절한 관계를 유지하는 것도 중요합니다. 따라서 0.5 ulp 오류 이상의 대부분의 방법은</target>
        </trans-unit>
        <trans-unit id="05d55cefc89d067b6ec2b9a3c851f7f9034e51fb" translate="yes" xml:space="preserve">
          <source>. A leap-second may be added or removed depending on the Earth's rotational changes. As such, UTC permits a day to have 86399 SI seconds or 86401 SI seconds where necessary in order to keep the day aligned with the Sun.</source>
          <target state="translated">. 지구의 회전 변화에 따라 윤초가 추가되거나 제거 될 수 있습니다. 따라서 UTC는 하루를 태양과 맞추기 위해 필요한 경우 하루에 86399 SI 초 또는 86401 SI 초를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88e3a64bd52bde6de24094391c1e684f41460781" translate="yes" xml:space="preserve">
          <source>. A natural line is defined as a line of characters that is terminated either by a set of line terminator characters (&lt;code&gt;\n&lt;/code&gt; or &lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\r\n&lt;/code&gt;) or by the end of the stream. A natural line may be either a blank line, a comment line, or hold all or some of a key-element pair. A logical line holds all the data of a key-element pair, which may be spread out across several adjacent natural lines by escaping the line terminator sequence with a backslash character &lt;code&gt;\&lt;/code&gt;. Note that a comment line cannot be extended in this manner; every natural line that is a comment must have its own comment indicator, as described below. Lines are read from input until the end of the stream is reached.</source>
          <target state="translated">. 자연 줄은 줄 종결 자 문자 ( &lt;code&gt;\n&lt;/code&gt; 또는 &lt;code&gt;\r&lt;/code&gt; 또는 &lt;code&gt;\r\n&lt;/code&gt; ) 또는 스트림 끝으로 끝나는 문자 줄로 정의됩니다 . 자연 라인은 빈 라인, 주석 라인 또는 키 요소 쌍의 전부 또는 일부를 보유 할 수 있습니다. 논리 행은 키 요소 쌍의 모든 데이터를 보유하며, 행 종결 자 시퀀스를 백 슬래시 문자 &lt;code&gt;\&lt;/code&gt; 로 이스케이프 처리하여 인접한 여러 자연 행에 분산 될 수 있습니다 . 주석 행은이 방식으로 확장 할 수 없습니다. 주석 인 모든 자연 줄에는 아래 설명과 같이 자체 주석 표시기가 있어야합니다. 스트림의 끝에 도달 할 때까지 입력에서 행을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="49c8657eb9673b9ddeb52ae09b78bf6614e1a26b" translate="yes" xml:space="preserve">
          <source>. A partition is an operating system-specific portion of storage for a file system. A single storage device (e.g. a physical disk-drive, flash memory, CD-ROM) may contain multiple partitions. The object, if any, will reside on the partition &lt;a id=&quot;partName&quot;&gt;named&lt;/a&gt; by some ancestor of the absolute form of this pathname.</source>
          <target state="translated">. 파티션은 파일 시스템 스토리지의 운영 체제 특정 부분입니다. 단일 저장 장치 (예 : 물리적 디스크 드라이브, 플래시 메모리, CD-ROM)에는 여러 파티션이 포함될 수 있습니다. 개체 가있는 경우이 경로 이름의 절대 형식의 일부 조상이 &lt;a id=&quot;partName&quot;&gt;명명&lt;/a&gt; 한 파티션에 상주합니다 .</target>
        </trans-unit>
        <trans-unit id="0a5aafc8c9d95228e8bb2425ffcdb1c57b37297d" translate="yes" xml:space="preserve">
          <source>. A partition is an operating system-specific portion of storage for a file system. A single storage device (e.g. a physical disk-drive, flash memory, CD-ROM) may contain multiple partitions. The object, if any, will reside on the partition &lt;a name=&quot;partName&quot;&gt;named&lt;/a&gt; by some ancestor of the absolute form of this pathname.</source>
          <target state="translated">. 파티션은 파일 시스템을위한 운영 체제 별 스토리지 부분입니다. 단일 스토리지 장치 (예 : 실제 디스크 드라이브, 플래시 메모리, CD-ROM)에는 여러 파티션이 포함될 수 있습니다. 객체는 존재하는 경우이 경로명의 절대 형식의 일부 조상으로 &lt;a name=&quot;partName&quot;&gt;명명&lt;/a&gt; 된 파티션에 상주합니다 .</target>
        </trans-unit>
        <trans-unit id="6200d34164c17b656bb0650f9a9a87168f29f9fa" translate="yes" xml:space="preserve">
          <source>. A server-based authority parses according to the familiar syntax</source>
          <target state="translated">. 친숙한 구문에 따라 서버 기반 권한 분석</target>
        </trans-unit>
        <trans-unit id="2b6f978194a2a66e4d22ced283cb6c29509cd722" translate="yes" xml:space="preserve">
          <source>. A shared lock prevents other concurrently-running programs from acquiring an overlapping exclusive lock, but does allow them to acquire overlapping shared locks. An exclusive lock prevents other programs from acquiring an overlapping lock of either type. Once it is released, a lock has no further effect on the locks that may be acquired by other programs.</source>
          <target state="translated">. 공유 잠금은 동시에 실행중인 다른 프로그램이 겹치는 독점 잠금을 얻지 못하도록하지만 겹치는 공유 잠금을 획득 할 수 있습니다. 단독 잠금은 다른 프로그램이 두 유형의 겹치는 잠금을 획득하지 못하게합니다. 잠금이 해제되면 다른 프로그램에서 확보 할 수있는 잠금에는 더 이상 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0391c41875c0093cb661fcd8942cb4d5a174323b" translate="yes" xml:space="preserve">
          <source>. A simple rule of thumb that will maximize portability is that objects created from different GSSManager's should not be mixed, and if possible, a different GSSManager instance should be created if the application wants to invoke the &lt;code&gt;addProviderAtFront&lt;/code&gt; method on a GSSManager that has already created an object.</source>
          <target state="translated">. 이식성을 극대화 할 수있는 간단한 규칙은 서로 다른 GSSManager에서 생성 된 객체를 혼합해서는 안되며, 가능하면 애플리케이션 이 이미 객체를 생성 한 GSSManager 에서 &lt;code&gt;addProviderAtFront&lt;/code&gt; 메소드 를 호출하려는 경우 다른 GSSManager 인스턴스를 생성해야한다는 것입니다. .</target>
        </trans-unit>
        <trans-unit id="715b24eeae493bed10bb689163b38c8c83438b0c" translate="yes" xml:space="preserve">
          <source>. A single quote itself must be represented by doubled single quotes &lt;code&gt;''&lt;/code&gt; throughout a</source>
          <target state="translated">. 작은 따옴표 자체가 두 배로 따옴표로 표현되어야한다 &lt;code&gt;''&lt;/code&gt; 에 걸쳐</target>
        </trans-unit>
        <trans-unit id="a029c687714f93ca65980118d0e1665eb32f8243" translate="yes" xml:space="preserve">
          <source>. A value</source>
          <target state="translated">. 가치</target>
        </trans-unit>
        <trans-unit id="f428fe17967e50fb6d8a64ed7bdd829fbf022dae" translate="yes" xml:space="preserve">
          <source>. A window type defines the generic visual appearance and behavior of a top-level window. For example, the type may affect the kind of decorations of a decorated &lt;code&gt;Frame&lt;/code&gt; or &lt;code&gt;Dialog&lt;/code&gt; instance.</source>
          <target state="translated">. 창 유형은 최상위 창의 일반적인 시각적 모양과 동작을 정의합니다. 예를 들어, 유형은 데코 레이팅 된 &lt;code&gt;Frame&lt;/code&gt; 또는 &lt;code&gt;Dialog&lt;/code&gt; 인스턴스 의 데코레이션 종류에 영향을 미칠 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af7436e3c8a1745d59751cd48ac81efee6618920" translate="yes" xml:space="preserve">
          <source>. A writer may be registered with a &lt;code&gt;RowSet&lt;/code&gt; object that supports the reader/writer paradigm.</source>
          <target state="translated">. 기록기는 판독기 / 기록기 패러다임을 지원 하는 &lt;code&gt;RowSet&lt;/code&gt; 개체에 등록 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bdb4b8aeb0409f1ff36b0076bf6ddac55003b7bc" translate="yes" xml:space="preserve">
          <source>. After doing what it needs to do with the data in these first 100 rows, the application can again call the method &lt;code&gt;nextPage&lt;/code&gt; to create another &lt;code&gt;CachedRowSet&lt;/code&gt; object with the second 100 rows from</source>
          <target state="translated">. 처음 100 개 행의 데이터로 수행해야하는 작업을 수행 한 후 애플리케이션은 &lt;code&gt;nextPage&lt;/code&gt; 메서드를 다시 호출 하여 두 번째 100 개 행이있는 또 다른 &lt;code&gt;CachedRowSet&lt;/code&gt; 개체 를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9dc005e4ee5e24d48ae01908ef9acb6a6982fade" translate="yes" xml:space="preserve">
          <source>. All other nodes have absolute path names of</source>
          <target state="translated">. 다른 모든 노드의 절대 경로 이름은</target>
        </trans-unit>
        <trans-unit id="a9c295044f40413578f0e926a0f39b948a86b4d5" translate="yes" xml:space="preserve">
          <source>. Also note: An empty</source>
          <target state="translated">. 참고 사항 : 빈</target>
        </trans-unit>
        <trans-unit id="398bdc75f0af7e918548fd2cf0e8c1d7e573ff52" translate="yes" xml:space="preserve">
          <source>. An applet is an embeddable window (see the Panel class) with a few extra methods that the applet context can use to initialize, start, and stop the applet.</source>
          <target state="translated">. 애플릿은 애플릿 컨텍스트가 애플릿을 초기화, 시작 및 중지하는 데 사용할 수있는 몇 가지 추가 메서드가있는 포함 가능한 창 (Panel 클래스 참조)입니다.</target>
        </trans-unit>
        <trans-unit id="75b9143c5e25cc9ff3f45ad2b82e4e4c2aed222c" translate="yes" xml:space="preserve">
          <source>. An application is then able to operate on the data in</source>
          <target state="translated">. 그런 다음 응용 프로그램은</target>
        </trans-unit>
        <trans-unit id="09319590ab289d195a0adc65bc068d30c561e86f" translate="yes" xml:space="preserve">
          <source>. By default this returns any string set using &lt;code&gt;setToolTipText&lt;/code&gt;. If a component provides more extensive API to support differing tooltips at different locations, this method should be overridden.</source>
          <target state="translated">. 기본적으로 이것은 &lt;code&gt;setToolTipText&lt;/code&gt; 를 사용하여 설정된 모든 문자열을 반환합니다 . 구성 요소가 다른 위치에서 다른 도구 설명을 지원하기 위해 더 광범위한 API를 제공하는 경우이 메서드를 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="1ee56c8eb7f1a7f7093666a1652df585a05fa204" translate="yes" xml:space="preserve">
          <source>. By default, the region contains all of the matcher's input. The region can be modified via the &lt;a href=&quot;#region(int,int)&quot;&gt;&lt;code&gt;region&lt;/code&gt;&lt;/a&gt; method and queried via the &lt;a href=&quot;#regionStart()&quot;&gt;&lt;code&gt;regionStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#regionEnd()&quot;&gt;&lt;code&gt;regionEnd&lt;/code&gt;&lt;/a&gt; methods. The way that the region boundaries interact with some pattern constructs can be changed. See &lt;a href=&quot;#useAnchoringBounds(boolean)&quot;&gt;&lt;code&gt;useAnchoringBounds&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#useTransparentBounds(boolean)&quot;&gt;&lt;code&gt;useTransparentBounds&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">. 기본적으로 영역에는 모든 일치 자의 입력이 포함됩니다. region은 &lt;a href=&quot;#region(int,int)&quot;&gt; &lt;code&gt;region&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 수정 하고 &lt;a href=&quot;#regionStart()&quot;&gt; &lt;code&gt;regionStart&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#regionEnd()&quot;&gt; &lt;code&gt;regionEnd&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 쿼리 할 수 있습니다 . 영역 경계가 일부 패턴 구성과 상호 작용하는 방식을 변경할 수 있습니다. 자세한 내용은 &lt;a href=&quot;#useAnchoringBounds(boolean)&quot;&gt; &lt;code&gt;useAnchoringBounds&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#useTransparentBounds(boolean)&quot;&gt; &lt;code&gt;useTransparentBounds&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="16b339a9bb1c5edb119ad68156e6dd30c4417ded" translate="yes" xml:space="preserve">
          <source>. By default, the region contains all of the matcher's input. The region can be modified via the&lt;a href=&quot;matcher#region-int-int-&quot;&gt;&lt;code&gt;region&lt;/code&gt;&lt;/a&gt; method and queried via the &lt;a href=&quot;matcher#regionStart--&quot;&gt;&lt;code&gt;regionStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;matcher#regionEnd--&quot;&gt;&lt;code&gt;regionEnd&lt;/code&gt;&lt;/a&gt; methods. The way that the region boundaries interact with some pattern constructs can be changed. See &lt;a href=&quot;matcher#useAnchoringBounds-boolean-&quot;&gt;&lt;code&gt;useAnchoringBounds&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;matcher#useTransparentBounds-boolean-&quot;&gt;&lt;code&gt;useTransparentBounds&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">. 기본적으로이 영역에는 모든 매처의 입력이 포함됩니다. region은 &lt;a href=&quot;matcher#region-int-int-&quot;&gt; &lt;code&gt;region&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 수정 하고 &lt;a href=&quot;matcher#regionStart--&quot;&gt; &lt;code&gt;regionStart&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;matcher#regionEnd--&quot;&gt; &lt;code&gt;regionEnd&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 조회 할 수 있습니다 . 영역 경계가 일부 패턴 구성과 상호 작용하는 방식이 변경 될 수 있습니다. 자세한 내용은 &lt;a href=&quot;matcher#useAnchoringBounds-boolean-&quot;&gt; &lt;code&gt;useAnchoringBounds&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;matcher#useTransparentBounds-boolean-&quot;&gt; &lt;code&gt;useTransparentBounds&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7cbe3e4ed66747179bb1f8378a699a717db8ac10" translate="yes" xml:space="preserve">
          <source>. By iterating through the columns of that row in both</source>
          <target state="translated">. 두 행 모두에서 해당 행의 열을 반복하여</target>
        </trans-unit>
        <trans-unit id="ae2a5431ffb8abc06d713d1aa20d5d332f0cc2ac" translate="yes" xml:space="preserve">
          <source>. Cancelling a key requests that the channel be deregistered during the selector's next selection operation. A key may be cancelled explicitly by invoking its &lt;a href=&quot;selectionkey#cancel()&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method. All of a channel's keys are cancelled implicitly when the channel is closed, whether by invoking its &lt;a href=&quot;channel#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method or by interrupting a thread blocked in an I/O operation upon the channel.</source>
          <target state="translated">. 키를 취소하면 선택기의 다음 선택 작업 중에 채널 등록이 취소됩니다. 키는 &lt;a href=&quot;selectionkey#cancel()&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 명시 적으로 취소 할 수 있습니다 . 채널의 모든 키는 &lt;a href=&quot;channel#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 채널의 I / O 작업에서 차단 된 스레드를 인터럽트 하여 채널이 닫힐 때 암시 적으로 취소됩니다 .</target>
        </trans-unit>
        <trans-unit id="6decc994475ccb621a6c0cd2d87e7a87ceda79a7" translate="yes" xml:space="preserve">
          <source>. Cancelling a key requests that the channel be deregistered during the selector's next selection operation. A key may be cancelled explicitly by invoking its &lt;a href=&quot;selectionkey#cancel--&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method. All of a channel's keys are cancelled implicitly when the channel is closed, whether by invoking its &lt;a href=&quot;channel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method or by interrupting a thread blocked in an I/O operation upon the channel.</source>
          <target state="translated">. 키를 취소하면 셀렉터의 다음 선택 작업 중에 채널을 등록 취소해야합니다. &lt;a href=&quot;selectionkey#cancel--&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 키를 명시 적으로 취소 할 수 있습니다 . &lt;a href=&quot;channel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 채널에서 I / O 조작으로 차단 된 스레드를 인터럽트 하여 채널이 닫히면 채널의 모든 키가 내재적으로 취소됩니다 .</target>
        </trans-unit>
        <trans-unit id="c747988fd3782865da77fcfa17f3b83237ce392d" translate="yes" xml:space="preserve">
          <source>. Consider the following example:</source>
          <target state="translated">. 다음 예제를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="c67e4e20e0ea870085a5e4e1425daf22777b59f4" translate="yes" xml:space="preserve">
          <source>. Each character can have zero or more of these attributes.</source>
          <target state="translated">. 각 문자는 이러한 특성을 0 개 이상 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5cb46a66eb9ec69f39628d2c422a2800dfa49c9e" translate="yes" xml:space="preserve">
          <source>. Each operation of</source>
          <target state="translated">. 각 작업</target>
        </trans-unit>
        <trans-unit id="56e176d3d41dadfb2e64bc632dbceeeacd8eae38" translate="yes" xml:space="preserve">
          <source>. First release to support generics, annotations, autoboxing, var-args, enhanced &lt;code&gt;
 for&lt;/code&gt; loop, and hexadecimal floating-point literals.</source>
          <target state="translated">. 제네릭, 주석, 오토 박싱, var-args, 향상된 &lt;code&gt; for&lt;/code&gt; 루프 및 16 진수 부동 소수점 리터럴 을 지원하는 첫 번째 릴리스 입니다.</target>
        </trans-unit>
        <trans-unit id="3bd43afc2a5c6431f9694c585be98883bf272329" translate="yes" xml:space="preserve">
          <source>. First release to support generics, annotations, autoboxing, var-args, enhanced &lt;code&gt;for&lt;/code&gt; loop, and hexadecimal floating-point literals.</source>
          <target state="translated">. 제네릭, 주석, 오토 박싱, var-args, 향상된 &lt;code&gt;for&lt;/code&gt; 루프 및 16 진 부동 소수점 리터럴 을 지원하는 첫 번째 릴리스 입니다.</target>
        </trans-unit>
        <trans-unit id="33078e60cc9ab6de66709d149b7f5ef181573fa0" translate="yes" xml:space="preserve">
          <source>. For example, &lt;code&gt;&quot;java/util/List&quot;&lt;/code&gt;.</source>
          <target state="translated">. 예를 들어 &lt;code&gt;&quot;java/util/List&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="26f49db38833840112856e786e35b9c030d627a9" translate="yes" xml:space="preserve">
          <source>. For example, a debugging facility might wish to maintain a proxy object for each object in the program being debugged.</source>
          <target state="translated">. 예를 들어, 디버깅 기능은 디버깅중인 프로그램의 각 오브젝트에 대한 프록시 오브젝트를 유지 보수하고자 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26e975e0806e18087691cc51ea4d37f6cd3245d4" translate="yes" xml:space="preserve">
          <source>. For example, division by zero throws an &lt;code&gt;ArithmeticException&lt;/code&gt;, and division of a negative by a positive yields a negative (or zero) remainder.</source>
          <target state="translated">. 예를 들어, 0으로 나누면 &lt;code&gt;ArithmeticException&lt;/code&gt; 이 발생하고, 음수를 양수로 나누면 나머지는 음수 (또는 0)가됩니다.</target>
        </trans-unit>
        <trans-unit id="ab6f99468dd1cd309e11f6107b1bf587666faa68" translate="yes" xml:space="preserve">
          <source>. For example, division by zero throws an &lt;code&gt;ArithmeticException&lt;/code&gt;, and division of a negative by a positive yields a negative (or zero) remainder. All of the details in the Spec concerning overflow are ignored, as BigIntegers are made as large as necessary to accommodate the results of an operation.</source>
          <target state="translated">. 예를 들어, 0으로 나누면 &lt;code&gt;ArithmeticException&lt;/code&gt; 이 발생하고, 음수를 양수로 나누면 음수 (또는 0)가 남습니다. BigInteger가 조작 결과를 수용하기 위해 필요한만큼 크게 만들어 지므로 오버 플로우에 관한 스펙의 모든 세부 사항은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="19deacd6150e087948d9f2542fc4d35c6bd5fd06" translate="yes" xml:space="preserve">
          <source>. For example, pattern string &lt;code&gt;&quot;'{''}'&quot;&lt;/code&gt; is interpreted as a sequence of &lt;code&gt;'{&lt;/code&gt; (start of quoting and a left curly brace), &lt;code&gt;''&lt;/code&gt; (a single quote), and &lt;code&gt;}'&lt;/code&gt; (a right curly brace and end of quoting), &lt;em&gt;not&lt;/em&gt;&lt;code&gt;'{'&lt;/code&gt; and &lt;code&gt;'}'&lt;/code&gt; (quoted left and right curly braces): representing string &lt;code&gt;&quot;{'}&quot;&lt;/code&gt;, &lt;em&gt;not&lt;/em&gt;&lt;code&gt;&quot;{}&quot;&lt;/code&gt;.</source>
          <target state="translated">. 예를 들어, 패턴 문자열 &lt;code&gt;&quot;'{''}'&quot;&lt;/code&gt; 은 &lt;code&gt;'{&lt;/code&gt; (따옴표 시작 및 왼쪽 중괄호), &lt;code&gt;''&lt;/code&gt; (작은 따옴표) 및 &lt;code&gt;}'&lt;/code&gt; (오른쪽 중괄호 및 끝 ) 의 시퀀스로 해석됩니다. ) 인용의 &lt;em&gt;하지 &lt;/em&gt; &lt;code&gt;'{'&lt;/code&gt; 와 &lt;code&gt;'}'&lt;/code&gt; (인용 왼쪽 및 오른쪽 중괄호) : 나타내는 문자열 &lt;code&gt;&quot;{'}&quot;&lt;/code&gt; , &lt;em&gt;아니 &lt;/em&gt; &lt;code&gt;&quot;{}&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8275f36a2d45c969253c182aacf29060ce2d21c" translate="yes" xml:space="preserve">
          <source>. For example, the &lt;code&gt;javac&lt;/code&gt; compiler may implement the operator with &lt;code&gt;StringBuffer&lt;/code&gt;, &lt;code&gt;StringBuilder&lt;/code&gt;, or &lt;code&gt;java.lang.invoke.StringConcatFactory&lt;/code&gt; depending on the JDK version. The implementation of string conversion is typically through the method &lt;code&gt;toString&lt;/code&gt;, defined by &lt;code&gt;Object&lt;/code&gt; and inherited by all classes in Java.</source>
          <target state="translated">. 예를 들어 &lt;code&gt;javac&lt;/code&gt; 컴파일러는 JDK 버전에 따라 &lt;code&gt;StringBuffer&lt;/code&gt; , &lt;code&gt;StringBuilder&lt;/code&gt; 또는 &lt;code&gt;java.lang.invoke.StringConcatFactory&lt;/code&gt; 로 연산자를 구현할 수 있습니다 . 문자열 변환의 구현은 일반적으로 &lt;code&gt;Object&lt;/code&gt; 에 의해 정의되고 Java의 모든 클래스에서 상속되는 &lt;code&gt;toString&lt;/code&gt; 메소드를 통해 이루어 집니다.</target>
        </trans-unit>
        <trans-unit id="b17ecac96b1adb18dd520ee9c0b9bae11aca3ab3" translate="yes" xml:space="preserve">
          <source>. For example:</source>
          <target state="translated">. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="923efe198d7e537a74ff73cf0da9938f5e13866e" translate="yes" xml:space="preserve">
          <source>. For example: (new int[][] { new int[] { 1, 3 }, new int[] { 5, 5 }, new int[] { 15, 19 } }), specifies pages 1, 2, 3, 5, 15, 16, 17, 18, and 19.</source>
          <target state="translated">. 예 : (new int [] [] {new int [] {1, 3}, new int [] {5, 5}, new int [] {15, 19}}), 페이지 1, 2, 3 지정 , 5, 15, 16, 17, 18 및 19.</target>
        </trans-unit>
        <trans-unit id="0cb0ac11c2f4f64677e2b43d03b888e1a784a08d" translate="yes" xml:space="preserve">
          <source>. For example: (new int[][] { new int[] { 1, 3 }, new int[] { 5, 5 }, new int[] { 15, 19 } }), specifies pages 1, 2, 3, 5, 15, 16, 17, 18, and 19. Note that (new int[][] { new int[] { 1, 1 }, new int[] { 1, 2 } }), is an invalid set of page ranges because the two ranges overlap.</source>
          <target state="translated">. 예 : (new int [] [] {new int [] {1, 3}, new int [] {5, 5}, new int [] {15, 19}}), 페이지 1, 2, 3 지정 , 5, 15, 16, 17, 18 및 19. (new int [] [] {new int [] {1, 1}, new int [] {1, 2}})는 잘못된 집합입니다. 두 범위가 겹치기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="f28ca9cf6610de33c018c2cf7503362f0b322c9c" translate="yes" xml:space="preserve">
          <source>. Given a direct byte buffer, the Java virtual machine will make a best effort to perform native I/O operations directly upon it. That is, it will attempt to avoid copying the buffer's content to (or from) an intermediate buffer before (or after) each invocation of one of the underlying operating system's native I/O operations.</source>
          <target state="translated">. 직접 바이트 버퍼가 주어지면 Java 가상 머신은 네이티브 I / O 작업을 직접 수행하기 위해 최선을 다할 것입니다. 즉, 기본 운영 체제의 고유 I / O 조작 중 하나를 호출하기 전 (또는 후에) 버퍼의 내용을 중간 버퍼로 (또는) 복사하지 않도록 시도합니다.</target>
        </trans-unit>
        <trans-unit id="ae5ab96ffce00d1b41d266b3389cf4c66eedfe88" translate="yes" xml:space="preserve">
          <source>. Growing metrics are used when the glyphs on a line are to be spread apart to fit a larger width. Shrinking metrics are used when the glyphs are to be moved together to fit a smaller width.</source>
          <target state="translated">. 증가하는 메트릭은 선의 글리프를 더 큰 너비에 맞게 벌려야 할 때 사용됩니다. 축소 메트릭은 글리프가 더 작은 너비에 맞게 함께 이동 될 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ccf40bb1cb46afc354564daf1bcaf7a21201e375" translate="yes" xml:space="preserve">
          <source>. Hence every URL is a URI, abstractly speaking, but not every URI is a URL. This is because there is another subcategory of URIs, uniform resource</source>
          <target state="translated">. 따라서 모든 URL은 추상적으로 말해서 URI이지만 모든 URI가 URL 인 것은 아닙니다. URI의 다른 하위 범주, 균일 한 리소스가 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="6f6cd629086ede6628d70788196e2af8d478e484" translate="yes" xml:space="preserve">
          <source>. However, any attempt to modify</source>
          <target state="translated">. 그러나 모든 수정 시도</target>
        </trans-unit>
        <trans-unit id="f863c23a93501fd973cdcb1d746f38bd8aa20cad" translate="yes" xml:space="preserve">
          <source>. If</source>
          <target state="translated">. 만약</target>
        </trans-unit>
        <trans-unit id="2a9895c6d2c1d3ae151f39ff8af48822d3fd5304" translate="yes" xml:space="preserve">
          <source>. If a charset has more than one registry name then its canonical name must be the MIME-preferred name and the other names in the registry must be valid aliases. If a supported charset is not listed in the IANA registry then its canonical name must begin with one of the strings &lt;code&gt;&quot;X-&quot;&lt;/code&gt; or &lt;code&gt;&quot;x-&quot;&lt;/code&gt;.</source>
          <target state="translated">. 문자 세트에 둘 이상의 레지스트리 이름이있는 경우 정규 이름은 MIME 선호 이름이어야하고 레지스트리의 다른 이름은 유효한 별명이어야합니다. 지원되는 문자 세트가 IANA 레지스트리에 나열되지 않으면 표준 이름은 &lt;code&gt;&quot;X-&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;x-&quot;&lt;/code&gt; 문자열 중 하나로 시작해야합니다 .</target>
        </trans-unit>
        <trans-unit id="12507af6f5e5c296fa0c3284d42179e100e94151" translate="yes" xml:space="preserve">
          <source>. If a collection implementation doesn't implement a particular operation, it should define the corresponding method to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. Such methods are marked &quot;optional operation&quot; in method specifications of the collections interfaces.</source>
          <target state="translated">. 컬렉션 구현이 특정 작업을 구현하지 않는 경우 해당 메서드를 정의하여 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 throw해야합니다 . 이러한 메서드는 컬렉션 인터페이스의 메서드 사양에서 &quot;선택적 작업&quot;으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="173eabbfd2c2c6ff5b508c0e784cf91e264dbb24" translate="yes" xml:space="preserve">
          <source>. If a resource manager does not support explicitly setting the transaction timeout value, this method returns</source>
          <target state="translated">. 리소스 관리자가 명시 적으로 트랜잭션 제한 시간 값 설정을 지원하지 않는 경우이 메서드는</target>
        </trans-unit>
        <trans-unit id="95648ab5cc37849a89d5cc59ee991c8df33a3a62" translate="yes" xml:space="preserve">
          <source>. If a target named</source>
          <target state="translated">. 대상 이름이</target>
        </trans-unit>
        <trans-unit id="ab275be3357b972dde6ef337a11902d7e8c14928" translate="yes" xml:space="preserve">
          <source>. If a thread is blocked on the directory stream's iterator reading from the directory, and another thread invokes the &lt;code&gt;close&lt;/code&gt; method, then the second thread may block until the read operation is complete.</source>
          <target state="translated">. 스레드가 디렉토리에서 읽기를 반복하는 디렉토리 스트림의 반복자에서 다른 스레드가 &lt;code&gt;close&lt;/code&gt; 메소드를 호출 하면 읽기 작업이 완료 될 때까지 두 번째 스레드가 차단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1efe9fbc64064fe9212e65a1f27477158bb19ad" translate="yes" xml:space="preserve">
          <source>. If an integer within the above range is not used by any enumeration value, leave the corresponding table element &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">. 위 범위 내의 정수가 열거 형 값에 사용되지 않는 경우 해당 테이블 요소를 &lt;code&gt;null&lt;/code&gt; 로 둡니다 .</target>
        </trans-unit>
        <trans-unit id="f3f5fa35cdc3218cd88644a3abe249ccbe82cf3d" translate="yes" xml:space="preserve">
          <source>. If an integer within the above range is not used by any enumeration value, leave the corresponding table element null.</source>
          <target state="translated">. 위의 범위 내의 정수가 열거 값에 사용되지 않는 경우 해당 테이블 요소를 널로 두십시오.</target>
        </trans-unit>
        <trans-unit id="9b6dcc649998e30a0c39dfb12e70fa75bf6d4ab0" translate="yes" xml:space="preserve">
          <source>. If the argument index does not correspond to an available argument, then a &lt;a href=&quot;missingformatargumentexception&quot;&gt;&lt;code&gt;MissingFormatArgumentException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">. 인수 인덱스가 사용 가능한 인수에 해당하지 않으면 &lt;a href=&quot;missingformatargumentexception&quot;&gt; &lt;code&gt;MissingFormatArgumentException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3c8a5aeda74cf7fceda1fe2962e52188a732dc86" translate="yes" xml:space="preserve">
          <source>. If the argument index is does not correspond to an available argument, then a &lt;a href=&quot;missingformatargumentexception&quot;&gt;&lt;code&gt;MissingFormatArgumentException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">. 인수 인덱스가 사용 가능한 인수와 일치하지 않으면 &lt;a href=&quot;missingformatargumentexception&quot;&gt; &lt;code&gt;MissingFormatArgumentException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="efb3dcc92630b8a84478f353a3886c803ac55ab5" translate="yes" xml:space="preserve">
          <source>. If the input byte sequence is legal but cannot be mapped to a valid Unicode character then an</source>
          <target state="translated">. 입력 바이트 시퀀스가 ​​유효하지만 유효한 유니 코드 문자로 맵핑 될 수없는 경우</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
