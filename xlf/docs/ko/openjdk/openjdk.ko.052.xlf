<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="fdab3de9abf820203ceaf09327cc721a7901d721" translate="yes" xml:space="preserve">
          <source>A CipherOutputStream is composed of an OutputStream and a Cipher so that write() methods first process the data before writing them out to the underlying OutputStream. The cipher must be fully initialized before being used by a CipherOutputStream.</source>
          <target state="translated">CipherOutputStream은 OutputStream과 Cipher로 구성되어 있으므로 write () 메소드가 기본 OutputStream에 데이터를 쓰기 전에 먼저 데이터를 처리합니다. CipherOutputStream에서 사용하기 전에 암호를 완전히 초기화해야합니다.</target>
        </trans-unit>
        <trans-unit id="e140636c2a1d6e8b05c54e920844f13300e3f6d9" translate="yes" xml:space="preserve">
          <source>A Close message consists of a status code and a reason for closing. The status code is an integer from the range &lt;code&gt;1000 &amp;lt;= code &amp;lt;= 65535&lt;/code&gt;. The &lt;code&gt;reason&lt;/code&gt; is a string which has a UTF-8 representation not longer than &lt;code&gt;123&lt;/code&gt; bytes.</source>
          <target state="translated">닫기 메시지는 상태 코드와 닫기 이유로 구성됩니다. 상태 코드는 &lt;code&gt;1000 &amp;lt;= code &amp;lt;= 65535&lt;/code&gt; 범위의 정수입니다 . 그 &lt;code&gt;reason&lt;/code&gt; 는 UTF-8 표현이 &lt;code&gt;123&lt;/code&gt; 바이트 이하인 문자열 때문 입니다 .</target>
        </trans-unit>
        <trans-unit id="46ddcc0101e10b1298538225e81f409130eeefd4" translate="yes" xml:space="preserve">
          <source>A Comparator that orders &lt;code&gt;String&lt;/code&gt; objects as by &lt;code&gt;compareToIgnoreCase&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;compareToIgnoreCase&lt;/code&gt; 에 의해 &lt;code&gt;String&lt;/code&gt; 객체를 정렬 하는 Comparator .</target>
        </trans-unit>
        <trans-unit id="9c41e56ee0d72ad167ee0d749b8fbdd54ce445e6" translate="yes" xml:space="preserve">
          <source>A Comparator that orders &lt;code&gt;String&lt;/code&gt; objects as by &lt;code&gt;compareToIgnoreCase&lt;/code&gt;. This comparator is serializable.</source>
          <target state="translated">비교기는 주문 것을 &lt;code&gt;String&lt;/code&gt; 로로 객체 &lt;code&gt;compareToIgnoreCase&lt;/code&gt; . 이 비교기는 직렬화 가능합니다.</target>
        </trans-unit>
        <trans-unit id="d97585da074cc604cb9f746899eec743346edb74" translate="yes" xml:space="preserve">
          <source>A ConcurrentHashMap can be used as a scalable frequency map (a form of histogram or multiset) by using &lt;a href=&quot;atomic/longadder&quot;&gt;&lt;code&gt;LongAdder&lt;/code&gt;&lt;/a&gt; values and initializing via &lt;a href=&quot;#computeIfAbsent(K,java.util.function.Function)&quot;&gt;&lt;code&gt;computeIfAbsent&lt;/code&gt;&lt;/a&gt;. For example, to add a count to a &lt;code&gt;ConcurrentHashMap&amp;lt;String,LongAdder&amp;gt; freqs&lt;/code&gt;, you can use &lt;code&gt;freqs.computeIfAbsent(key, k -&amp;gt; new LongAdder()).increment();&lt;/code&gt;</source>
          <target state="translated">는 ConcurrentHashMap의 사용에 의해 확장 가능한 주파수 맵 (또는 MULTISET 히스토그램의 형태)로서 사용될 수있다 &lt;a href=&quot;atomic/longadder&quot;&gt; &lt;code&gt;LongAdder&lt;/code&gt; 의&lt;/a&gt; 값을 초기화하고 통해 &lt;a href=&quot;#computeIfAbsent(K,java.util.function.Function)&quot;&gt; &lt;code&gt;computeIfAbsent&lt;/code&gt; &lt;/a&gt; . 예를 들어 &lt;code&gt;ConcurrentHashMap&amp;lt;String,LongAdder&amp;gt; freqs&lt;/code&gt; 개수를 추가 하려면 &lt;code&gt;freqs.computeIfAbsent(key, k -&amp;gt; new LongAdder()).increment();&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a88c7751045f06ed8e90b4b1167c2d52e5b7889f" translate="yes" xml:space="preserve">
          <source>A ConcurrentHashMap can be used as scalable frequency map (a form of histogram or multiset) by using &lt;a href=&quot;atomic/longadder&quot;&gt;&lt;code&gt;LongAdder&lt;/code&gt;&lt;/a&gt; values and initializing via &lt;a href=&quot;concurrenthashmap#computeIfAbsent-K-java.util.function.Function-&quot;&gt;&lt;code&gt;computeIfAbsent&lt;/code&gt;&lt;/a&gt;. For example, to add a count to a &lt;code&gt;ConcurrentHashMap&amp;lt;String,LongAdder&amp;gt; freqs&lt;/code&gt;, you can use &lt;code&gt;freqs.computeIfAbsent(k -&amp;gt; new LongAdder()).increment();&lt;/code&gt;</source>
          <target state="translated">ConcurrentHashMap의 확장을 이용하여 주파수 맵 (또는 MULTISET 히스토그램의 형태)로서 사용될 수있다 &lt;a href=&quot;atomic/longadder&quot;&gt; &lt;code&gt;LongAdder&lt;/code&gt; 의&lt;/a&gt; 값을 초기화하고 통해 &lt;a href=&quot;concurrenthashmap#computeIfAbsent-K-java.util.function.Function-&quot;&gt; &lt;code&gt;computeIfAbsent&lt;/code&gt; &lt;/a&gt; . 예를 들어 &lt;code&gt;ConcurrentHashMap&amp;lt;String,LongAdder&amp;gt; freqs&lt;/code&gt; 카운트를 추가 하려면 &lt;code&gt;freqs.computeIfAbsent(k -&amp;gt; new LongAdder()).increment();&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd0f5b492e5e79e1dd49d103d07a9725793440ef" translate="yes" xml:space="preserve">
          <source>A Configuration object is responsible for specifying which LoginModules should be used for a particular application, and in what order the LoginModules should be invoked.</source>
          <target state="translated">Configuration 객체는 특정 응용 프로그램에 사용해야하는 LoginModules와 LoginModules를 어떤 순서로 호출해야하는지 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d807e9225ff301fb922ab51b4ba82a0d2d0e2426" translate="yes" xml:space="preserve">
          <source>A Container that manages the contentPane and in some cases a menu bar.</source>
          <target state="translated">contentPane 및 경우에 따라 메뉴 모음을 관리하는 컨테이너입니다.</target>
        </trans-unit>
        <trans-unit id="fcfe802b91350378730e5dab30a4dc357f811011" translate="yes" xml:space="preserve">
          <source>A Container that manages the contentPane and in some cases a menu bar. The layeredPane can be used by descendants that want to add a child to the RootPaneContainer that isn't layout managed. For example an internal dialog or a drag and drop effect component.</source>
          <target state="translated">contentPane 및 경우에 따라 메뉴 모음을 관리하는 컨테이너입니다. layeredPane은 레이아웃이 관리되지 않는 RootPaneContainer에 자식을 추가하려는 자손이 사용할 수 있습니다. 예를 들어 내부 대화 상자 또는 드래그 앤 드롭 효과 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="d8f93adfaaae3440a93e9e8eeecd144151228a0d" translate="yes" xml:space="preserve">
          <source>A ContainerListener object is registered via &lt;code&gt;addContainerListener&lt;/code&gt;</source>
          <target state="translated">ContainerListener 객체는 &lt;code&gt;addContainerListener&lt;/code&gt; 를 통해 등록됩니다.</target>
        </trans-unit>
        <trans-unit id="b22423bd271ef93fff76399aaab94802a3cd9de4" translate="yes" xml:space="preserve">
          <source>A Context instance is not guaranteed to be synchronized against concurrent access by multiple threads. Threads that need to access a single Context instance concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating a different Context instance need not synchronize. Note that the &lt;a href=&quot;#lookup(javax.naming.Name)&quot;&gt;&lt;code&gt;lookup&lt;/code&gt;&lt;/a&gt; method, when passed an empty name, will return a new Context instance representing the same naming context.</source>
          <target state="translated">Context 인스턴스는 여러 스레드의 동시 액세스에 대해 동기화되지 않을 수 있습니다. 단일 Context 인스턴스에 동시에 액세스해야하는 스레드는 서로 동기화하고 필요한 잠금을 제공해야합니다. 서로 다른 Context 인스턴스를 조작하는 여러 스레드는 동기화 할 필요가 없습니다. 점을 유의 &lt;a href=&quot;#lookup(javax.naming.Name)&quot;&gt; &lt;code&gt;lookup&lt;/code&gt; &lt;/a&gt; 방법은 빈 이름을 통과 할 때, 같은 네이밍 문맥을 나타내는 새로운 컨텍스트 인스턴스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="74d36f2b93f37113d35e86b570595f7563d7d60a" translate="yes" xml:space="preserve">
          <source>A Context instance is not guaranteed to be synchronized against concurrent access by multiple threads. Threads that need to access a single Context instance concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating a different Context instance need not synchronize. Note that the &lt;a href=&quot;context#lookup-javax.naming.Name-&quot;&gt;&lt;code&gt;&lt;code&gt;lookup&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method, when passed an empty name, will return a new Context instance representing the same naming context.</source>
          <target state="translated">컨텍스트 인스턴스는 여러 스레드의 동시 액세스와 동기화되지 않을 수 있습니다. 단일 컨텍스트 인스턴스에 동시에 액세스해야하는 스레드는 서로 동기화하고 필요한 잠금을 제공해야합니다. 각각 다른 컨텍스트 인스턴스를 조작하는 여러 스레드는 동기화 할 필요가 없습니다. 점을 유의 &lt;a href=&quot;context#lookup-javax.naming.Name-&quot;&gt; &lt;code&gt;&lt;code&gt;lookup&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 방법은 빈 이름을 통과 할 때, 같은 네이밍 문맥을 나타내는 새로운 컨텍스트 인스턴스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4b29cc8def858a24b7c7f09750b3ab466a9bfce1" translate="yes" xml:space="preserve">
          <source>A CookieHandler object provides a callback mechanism to hook up a HTTP state management policy implementation into the HTTP protocol handler.</source>
          <target state="translated">CookieHandler 객체는 HTTP 상태 관리 정책 구현을 HTTP 프로토콜 핸들러에 연결하는 콜백 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2e14cec95df0f08d9bad153498b207b612469b68" translate="yes" xml:space="preserve">
          <source>A CookieHandler object provides a callback mechanism to hook up a HTTP state management policy implementation into the HTTP protocol handler. The HTTP state management mechanism specifies a way to create a stateful session with HTTP requests and responses.</source>
          <target state="translated">CookieHandler 객체는 HTTP 상태 관리 정책 구현을 HTTP 프로토콜 핸들러에 연결하는 콜백 메커니즘을 제공합니다. HTTP 상태 관리 메커니즘은 HTTP 요청 및 응답으로 상태 저장 세션을 작성하는 방법을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="79ca6a09288e0d8b71c28a349bae374ffee24a89" translate="yes" xml:space="preserve">
          <source>A CookieStore object represents a storage for cookie.</source>
          <target state="translated">CookieStore 객체는 쿠키의 스토리지를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="283551993d847395f826933009f09ddcd3e07680" translate="yes" xml:space="preserve">
          <source>A CookieStore object represents a storage for cookie. Can store and retrieve cookies.</source>
          <target state="translated">CookieStore 객체는 쿠키의 스토리지를 나타냅니다. 쿠키를 저장하고 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3000b76d11fcc2997e83c8de2ec99b40336ee1d9" translate="yes" xml:space="preserve">
          <source>A CountedCompleter that does not itself have a completer (i.e., one for which &lt;a href=&quot;#getCompleter()&quot;&gt;&lt;code&gt;getCompleter()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;null&lt;/code&gt;) can be used as a regular ForkJoinTask with this added functionality. However, any completer that in turn has another completer serves only as an internal helper for other computations, so its own task status (as reported in methods such as &lt;a href=&quot;future#isDone()&quot;&gt;&lt;code&gt;Future.isDone()&lt;/code&gt;&lt;/a&gt;) is arbitrary; this status changes only upon explicit invocations of &lt;a href=&quot;#complete(T)&quot;&gt;&lt;code&gt;complete(T)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;forkjointask#cancel(boolean)&quot;&gt;&lt;code&gt;ForkJoinTask.cancel(boolean)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;forkjointask#completeExceptionally(java.lang.Throwable)&quot;&gt;&lt;code&gt;ForkJoinTask.completeExceptionally(Throwable)&lt;/code&gt;&lt;/a&gt; or upon exceptional completion of method &lt;code&gt;compute&lt;/code&gt;. Upon any exceptional completion, the exception may be relayed to a task's completer (and its completer, and so on), if one exists and it has not otherwise already completed. Similarly, cancelling an internal CountedCompleter has only a local effect on that completer, so is not often useful.</source>
          <target state="translated">완료자가없는 CountedCompleter (즉, &lt;a href=&quot;#getCompleter()&quot;&gt; &lt;code&gt;getCompleter()&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;null&lt;/code&gt; 을 반환 하는 것) 는 이 추가 기능을 사용하여 일반 ForkJoinTask로 사용할 수 있습니다. 그러나 다른 완성자가있는 완성 자는 다른 계산을위한 내부 도우미 역할 &lt;a href=&quot;future#isDone()&quot;&gt; &lt;code&gt;Future.isDone()&lt;/code&gt; &lt;/a&gt; 므로 자체 작업 상태 ( Future.isDone () 와 같은 메서드에서보고 됨 )는 임의적입니다. 이 상태는 &lt;a href=&quot;#complete(T)&quot;&gt; &lt;code&gt;complete(T)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;forkjointask#cancel(boolean)&quot;&gt; &lt;code&gt;ForkJoinTask.cancel(boolean)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;forkjointask#completeExceptionally(java.lang.Throwable)&quot;&gt; &lt;code&gt;ForkJoinTask.completeExceptionally(Throwable)&lt;/code&gt; &lt;/a&gt; 명시 적 호출 또는 메서드 &lt;code&gt;compute&lt;/code&gt; 예외적 인 완료시 에만 변경됩니다.. 예외적으로 완료되면 예외가 작업 완료 자 (및 해당 완료 자 등)에게 전달 될 수 있습니다 (존재하고 아직 완료되지 않은 경우). 마찬가지로 내부 CountedCompleter를 취소하면 해당 완료 자에 로컬 영향 만 미치므로 유용하지 않은 경우가 많습니다.</target>
        </trans-unit>
        <trans-unit id="0b58e7c6e736957a773f6daa4515fd1439a70f91" translate="yes" xml:space="preserve">
          <source>A CountedCompleter that does not itself have a completer (i.e., one for which &lt;a href=&quot;countedcompleter#getCompleter--&quot;&gt;&lt;code&gt;getCompleter()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;null&lt;/code&gt;) can be used as a regular ForkJoinTask with this added functionality. However, any completer that in turn has another completer serves only as an internal helper for other computations, so its own task status (as reported in methods such as &lt;a href=&quot;forkjointask#isDone--&quot;&gt;&lt;code&gt;ForkJoinTask.isDone()&lt;/code&gt;&lt;/a&gt;) is arbitrary; this status changes only upon explicit invocations of &lt;a href=&quot;countedcompleter#complete-T-&quot;&gt;&lt;code&gt;complete(T)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;forkjointask#cancel-boolean-&quot;&gt;&lt;code&gt;ForkJoinTask.cancel(boolean)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;forkjointask#completeExceptionally-java.lang.Throwable-&quot;&gt;&lt;code&gt;ForkJoinTask.completeExceptionally(Throwable)&lt;/code&gt;&lt;/a&gt; or upon exceptional completion of method &lt;code&gt;compute&lt;/code&gt;. Upon any exceptional completion, the exception may be relayed to a task's completer (and its completer, and so on), if one exists and it has not otherwise already completed. Similarly, cancelling an internal CountedCompleter has only a local effect on that completer, so is not often useful.</source>
          <target state="translated">자체가 완전하지 않은 CountedCompleter (즉, &lt;a href=&quot;countedcompleter#getCompleter--&quot;&gt; &lt;code&gt;getCompleter()&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;null&lt;/code&gt; 을 리턴 하는 것) 는 이 추가 된 기능을 가진 일반 ForkJoinTask로 사용될 수 있습니다. 그러나 다른 완료자를 갖는 완료 자는 다른 계산을위한 내부 도우미로만 사용되므로 자체 작업 상태 ( &lt;a href=&quot;forkjointask#isDone--&quot;&gt; &lt;code&gt;ForkJoinTask.isDone()&lt;/code&gt; &lt;/a&gt; 와 같은 메소드에보고 됨 )는 임의적입니다. 이 상태는 &lt;a href=&quot;countedcompleter#complete-T-&quot;&gt; &lt;code&gt;complete(T)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;forkjointask#cancel-boolean-&quot;&gt; &lt;code&gt;ForkJoinTask.cancel(boolean)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;forkjointask#completeExceptionally-java.lang.Throwable-&quot;&gt; &lt;code&gt;ForkJoinTask.completeExceptionally(Throwable)&lt;/code&gt; &lt;/a&gt; 명시 적 호출 또는 예외적 인 메소드 &lt;code&gt;compute&lt;/code&gt; 완료시 에만 변경됩니다. 예외적으로 완료되면 작업 완료 자 (및 완료 자 등)가 있고 아직 완료되지 않은 경우 예외가 릴레이에 전달 될 수 있습니다. 마찬가지로 내부 CountedCompleter를 취소하면 해당 완성기에 로컬 효과 만 있으므로 종종 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e6f1d597ff81bc116ebafb1af1319ec9950f7a72" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../urireference&quot;&gt;&lt;code&gt;URIReference&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">DOM 특정 &lt;a href=&quot;../urireference&quot;&gt; &lt;code&gt;URIReference&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ca5803d4a9c3a3c1bcc79939307b2f4e73b6e895" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../urireference&quot;&gt;&lt;code&gt;URIReference&lt;/code&gt;&lt;/a&gt;. The purpose of this class is to provide additional context necessary for resolving XPointer URIs or same-document references.</source>
          <target state="translated">DOM 특정 &lt;a href=&quot;../urireference&quot;&gt; &lt;code&gt;URIReference&lt;/code&gt; &lt;/a&gt; . 이 클래스의 목적은 XPointer URI 또는 ​​동일한 문서 참조를 확인하는 데 필요한 추가 컨텍스트를 제공하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="bfcd6af043d697ad391ab62fae22184ba5ce3987" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../xmlsigncontext&quot;&gt;&lt;code&gt;XMLSignContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">DOM 특정 &lt;a href=&quot;../xmlsigncontext&quot;&gt; &lt;code&gt;XMLSignContext&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d85da757381ee419d046495d07e13697cdab0559" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../xmlsigncontext&quot;&gt;&lt;code&gt;XMLSignContext&lt;/code&gt;&lt;/a&gt;. This class contains additional methods to specify the location in a DOM tree where an &lt;a href=&quot;../xmlsignature&quot;&gt;&lt;code&gt;XMLSignature&lt;/code&gt;&lt;/a&gt; object is to be marshalled when generating the signature.</source>
          <target state="translated">DOM 특정 &lt;a href=&quot;../xmlsigncontext&quot;&gt; &lt;code&gt;XMLSignContext&lt;/code&gt; &lt;/a&gt; . 이 클래스에는 서명을 생성 할 때 &lt;a href=&quot;../xmlsignature&quot;&gt; &lt;code&gt;XMLSignature&lt;/code&gt; &lt;/a&gt; 객체가 마샬링 될 DOM 트리의 위치를 ​​지정하는 추가 메서드가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="84c78b84756fe7f1ca4c1a22cd637f11ae715df0" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../xmlstructure&quot;&gt;&lt;code&gt;XMLStructure&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">DOM 특정 &lt;a href=&quot;../xmlstructure&quot;&gt; &lt;code&gt;XMLStructure&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f4b452597df4c938ae233ce6592a0bc4944e188" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../xmlstructure&quot;&gt;&lt;code&gt;XMLStructure&lt;/code&gt;&lt;/a&gt;. The purpose of this class is to allow a DOM node to be used to represent extensible content (any elements or mixed content) in XML Signature structures.</source>
          <target state="translated">DOM 특정 &lt;a href=&quot;../xmlstructure&quot;&gt; &lt;code&gt;XMLStructure&lt;/code&gt; &lt;/a&gt; . 이 클래스의 목적은 XML 서명 구조에서 확장 가능한 콘텐츠 (모든 요소 또는 혼합 콘텐츠)를 나타내는 데 DOM 노드를 사용할 수 있도록하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a1811213e46c06173f561a1fc0f03c49dcb92d2d" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../xmlvalidatecontext&quot;&gt;&lt;code&gt;XMLValidateContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">DOM 특정 &lt;a href=&quot;../xmlvalidatecontext&quot;&gt; &lt;code&gt;XMLValidateContext&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c2118176a43e7a7922a590821742530dde4b1591" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../xmlvalidatecontext&quot;&gt;&lt;code&gt;XMLValidateContext&lt;/code&gt;&lt;/a&gt;. This class contains additional methods to specify the location in a DOM tree where an &lt;a href=&quot;../xmlsignature&quot;&gt;&lt;code&gt;XMLSignature&lt;/code&gt;&lt;/a&gt; is to be unmarshalled and validated from.</source>
          <target state="translated">DOM 특정 &lt;a href=&quot;../xmlvalidatecontext&quot;&gt; &lt;code&gt;XMLValidateContext&lt;/code&gt; &lt;/a&gt; . 이 클래스에는 &lt;a href=&quot;../xmlsignature&quot;&gt; &lt;code&gt;XMLSignature&lt;/code&gt; &lt;/a&gt; 가 비 정렬 화되고 유효성이 검사되는 DOM 트리의 위치를 ​​지정하는 추가 메서드가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="27aa58ab7098ad2b7fa2c5756767850495dc2269" translate="yes" xml:space="preserve">
          <source>A DRBG implementation should support serialization and deserialization by retaining the configuration and effective parameters, but the internal state must not be serialized and the deserialized object must be reinstantiated.</source>
          <target state="translated">DRBG 구현은 구성 및 유효 매개 변수를 유지하여 직렬화 및 역 직렬화를 지원해야하지만 내부 상태는 직렬화되어서는 안되며 역 직렬화 된 개체는 다시 인스턴스화되어야합니다.</target>
        </trans-unit>
        <trans-unit id="e83369b8a7eb7f1233b3798dc826997f74691129" translate="yes" xml:space="preserve">
          <source>A DRBG implementation supporting prediction resistance must also support reseeding.</source>
          <target state="translated">예측 저항을 지원하는 DRBG 구현은 리 시드도 지원해야합니다.</target>
        </trans-unit>
        <trans-unit id="45c11400a585fe73c83ee3f1b8958999facd625f" translate="yes" xml:space="preserve">
          <source>A DRBG instance can be instantiated with parameters from an &lt;a href=&quot;drbgparameters.instantiation&quot;&gt;&lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt;&lt;/a&gt; object and other information (for example, the nonce, which is not managed by this API). This maps to the &lt;code&gt;Instantiate_function&lt;/code&gt; defined in NIST SP 800-90Ar1.</source>
          <target state="translated">DRBG 인스턴스는 &lt;a href=&quot;drbgparameters.instantiation&quot;&gt; &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; &lt;/a&gt; 개체의 매개 변수 및 기타 정보 (예 :이 API에서 관리하지 않는 nonce) 로 인스턴스화 할 수 있습니다 . 이는 NIST SP 800-90Ar1에 정의 된 &lt;code&gt;Instantiate_function&lt;/code&gt; 에 매핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="157c829c498bb73c9b920748902894633791d9e6" translate="yes" xml:space="preserve">
          <source>A DRBG instance can be reseeded with parameters from a &lt;a href=&quot;drbgparameters.reseed&quot;&gt;&lt;code&gt;DrbgParameters.Reseed&lt;/code&gt;&lt;/a&gt; object. This maps to the &lt;code&gt;Reseed_function&lt;/code&gt; defined in NIST SP 800-90Ar1. Calling &lt;a href=&quot;securerandom#reseed()&quot;&gt;&lt;code&gt;SecureRandom.reseed()&lt;/code&gt;&lt;/a&gt; is equivalent to calling &lt;a href=&quot;securerandom#reseed(java.security.SecureRandomParameters)&quot;&gt;&lt;code&gt;SecureRandom.reseed(SecureRandomParameters)&lt;/code&gt;&lt;/a&gt; with the effective instantiated prediction resistance flag (as returned by &lt;a href=&quot;securerandom#getParameters()&quot;&gt;&lt;code&gt;SecureRandom.getParameters()&lt;/code&gt;&lt;/a&gt;) with no additional input.</source>
          <target state="translated">DRBG 인스턴스는 &lt;a href=&quot;drbgparameters.reseed&quot;&gt; &lt;code&gt;DrbgParameters.Reseed&lt;/code&gt; &lt;/a&gt; 개체의 매개 변수로 다시 시드 할 수 있습니다 . 이는 NIST SP 800-90Ar1에 정의 된 &lt;code&gt;Reseed_function&lt;/code&gt; 에 매핑됩니다 . &lt;a href=&quot;securerandom#reseed()&quot;&gt; &lt;code&gt;SecureRandom.reseed()&lt;/code&gt; &lt;/a&gt; 호출 은 추가 입력없이 효과적인 인스턴스화 된 예측 저항 플래그 ( &lt;a href=&quot;securerandom#getParameters()&quot;&gt; &lt;code&gt;SecureRandom.getParameters()&lt;/code&gt; &lt;/a&gt; 반환 됨 &lt;a href=&quot;securerandom#reseed(java.security.SecureRandomParameters)&quot;&gt; &lt;code&gt;SecureRandom.reseed(SecureRandomParameters)&lt;/code&gt; &lt;/a&gt; 사용하여 SecureRandom.reseed (SecureRandomParameters) 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="3885218929e4820b5ba912a1a78e9c95cc7a3762" translate="yes" xml:space="preserve">
          <source>A DRBG instance generates data with additional parameters from a &lt;a href=&quot;drbgparameters.nextbytes&quot;&gt;&lt;code&gt;DrbgParameters.NextBytes&lt;/code&gt;&lt;/a&gt; object. This maps to the &lt;code&gt;Generate_function&lt;/code&gt; defined in NIST SP 800-90Ar1. Calling &lt;a href=&quot;securerandom#nextBytes(byte%5B%5D)&quot;&gt;&lt;code&gt;SecureRandom.nextBytes(byte[])&lt;/code&gt;&lt;/a&gt; is equivalent to calling &lt;a href=&quot;securerandom#nextBytes(byte%5B%5D,java.security.SecureRandomParameters)&quot;&gt;&lt;code&gt;SecureRandom.nextBytes(byte[], SecureRandomParameters)&lt;/code&gt;&lt;/a&gt; with the effective instantiated strength and prediction resistance flag (as returned by &lt;a href=&quot;securerandom#getParameters()&quot;&gt;&lt;code&gt;SecureRandom.getParameters()&lt;/code&gt;&lt;/a&gt;) with no additional input.</source>
          <target state="translated">DRBG 인스턴스는 &lt;a href=&quot;drbgparameters.nextbytes&quot;&gt; &lt;code&gt;DrbgParameters.NextBytes&lt;/code&gt; &lt;/a&gt; 개체 에서 추가 매개 변수를 사용하여 데이터를 생성 합니다. 이는 NIST SP 800-90Ar1에 정의 된 &lt;code&gt;Generate_function&lt;/code&gt; 에 매핑됩니다 . 호출 &lt;a href=&quot;securerandom#nextBytes(byte%5B%5D)&quot;&gt; &lt;code&gt;SecureRandom.nextBytes(byte[])&lt;/code&gt; &lt;/a&gt; 호출하는 것과 &lt;a href=&quot;securerandom#nextBytes(byte%5B%5D,java.security.SecureRandomParameters)&quot;&gt; &lt;code&gt;SecureRandom.nextBytes(byte[], SecureRandomParameters)&lt;/code&gt; &lt;/a&gt; (에 의해 반환되는 유효 인스턴스화 강도와 저항 예측 플래그 &lt;a href=&quot;securerandom#getParameters()&quot;&gt; &lt;code&gt;SecureRandom.getParameters()&lt;/code&gt; &lt;/a&gt; 추가로 입력).</target>
        </trans-unit>
        <trans-unit id="40ed60db9d5800cf52c2cf5ded24397954bd0443" translate="yes" xml:space="preserve">
          <source>A DRBG is based on a DRBG mechanism as specified in this Recommendation and includes a source of randomness. A DRBG mechanism uses an algorithm (i.e., a DRBG algorithm) that produces a sequence of bits from an initial value that is determined by a seed that is determined from the output of the randomness source.&quot;</source>
          <target state="translated">DRBG는이 권고에 명시된 DRBG 메커니즘을 기반으로하며 임의성 소스를 포함합니다. DRBG 메커니즘은 임의성 소스의 출력에서 ​​결정된 시드에 의해 결정되는 초기 값에서 비트 시퀀스를 생성하는 알고리즘 (즉, DRBG 알고리즘)을 사용합니다. &quot;</target>
        </trans-unit>
        <trans-unit id="e4520b15cb71855ef5387229fdf25dbee934f5ca" translate="yes" xml:space="preserve">
          <source>A DRBG might reseed itself automatically if the seed period is bigger than the maximum seed life defined by the DRBG mechanism.</source>
          <target state="translated">시드 기간이 DRBG 메커니즘에서 정의한 최대 시드 수명보다 크면 DRBG가 자동으로 다시 시드 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cda30c8b519b6b092599c3f12ea40b0b472b259c" translate="yes" xml:space="preserve">
          <source>A DRBG should be implemented as a subclass of &lt;a href=&quot;securerandomspi&quot;&gt;&lt;code&gt;SecureRandomSpi&lt;/code&gt;&lt;/a&gt;. It is recommended that the implementation contain the 1-arg &lt;a href=&quot;securerandomspi#%3Cinit%3E(java.security.SecureRandomParameters)&quot;&gt;constructor&lt;/a&gt; that takes a &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; argument. If implemented this way, this implementation can be chosen by any &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; method. If it is chosen by a &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; with a &lt;a href=&quot;securerandomparameters&quot;&gt;&lt;code&gt;SecureRandomParameters&lt;/code&gt;&lt;/a&gt; parameter, the parameter is passed into this constructor. If it is chosen by a &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; without a &lt;code&gt;SecureRandomParameters&lt;/code&gt; parameter, the constructor is called with a &lt;code&gt;null&lt;/code&gt; argument and the implementation should choose its own parameters. Its &lt;a href=&quot;securerandom#getParameters()&quot;&gt;&lt;code&gt;SecureRandom.getParameters()&lt;/code&gt;&lt;/a&gt; must always return a non-null effective &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; object that reflects how the DRBG is actually instantiated. A caller can use this information to determine whether a &lt;code&gt;SecureRandom&lt;/code&gt; object is a DRBG and what features it supports. Please note that the returned value does not necessarily equal to the &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; object passed into the &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; call. For example, the requested capability can be &lt;a href=&quot;drbgparameters.capability#NONE&quot;&gt;&lt;code&gt;DrbgParameters.Capability.NONE&lt;/code&gt;&lt;/a&gt; but the effective value can be &lt;a href=&quot;drbgparameters.capability#RESEED_ONLY&quot;&gt;&lt;code&gt;DrbgParameters.Capability.RESEED_ONLY&lt;/code&gt;&lt;/a&gt; if the implementation supports reseeding. The implementation must implement the &lt;a href=&quot;securerandomspi#engineNextBytes(byte%5B%5D,java.security.SecureRandomParameters)&quot;&gt;&lt;code&gt;SecureRandomSpi.engineNextBytes(byte[], SecureRandomParameters)&lt;/code&gt;&lt;/a&gt; method which takes a &lt;code&gt;DrbgParameters.NextBytes&lt;/code&gt; parameter. Unless the result of &lt;a href=&quot;securerandom#getParameters()&quot;&gt;&lt;code&gt;SecureRandom.getParameters()&lt;/code&gt;&lt;/a&gt; has its &lt;a href=&quot;drbgparameters.instantiation#getCapability()&quot;&gt;capability&lt;/a&gt; being &lt;a href=&quot;drbgparameters.capability#NONE&quot;&gt;&lt;code&gt;NONE&lt;/code&gt;&lt;/a&gt;, it must implement &lt;a href=&quot;securerandomspi#engineReseed(java.security.SecureRandomParameters)&quot;&gt;&lt;code&gt;SecureRandomSpi.engineReseed(SecureRandomParameters)&lt;/code&gt;&lt;/a&gt; which takes a &lt;code&gt;DrbgParameters.Reseed&lt;/code&gt; parameter.</source>
          <target state="translated">DRBG는 &lt;a href=&quot;securerandomspi&quot;&gt; &lt;code&gt;SecureRandomSpi&lt;/code&gt; &lt;/a&gt; 의 하위 클래스로 구현되어야합니다 . 구현에는 &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; 인수를 사용 하는 1 인수 &lt;a href=&quot;securerandomspi#%3Cinit%3E(java.security.SecureRandomParameters)&quot;&gt;생성자&lt;/a&gt; 가 포함되는 것이 좋습니다 . 이 방법으로 구현하면 &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; 메서드 에서이 구현을 선택할 수 있습니다 . 그것이 의해 선택되면 &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; A의 &lt;a href=&quot;securerandomparameters&quot;&gt; &lt;code&gt;SecureRandomParameters&lt;/code&gt; 의&lt;/a&gt; 매개 변수는이 생성자로 전달된다. &lt;code&gt;SecureRandomParameters&lt;/code&gt; 매개 변수 없이 &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; 의해 선택되는 경우 생성자는 &lt;code&gt;null&lt;/code&gt; 로 호출됩니다.인수와 구현은 자체 매개 변수를 선택해야합니다. 그 &lt;a href=&quot;securerandom#getParameters()&quot;&gt; &lt;code&gt;SecureRandom.getParameters()&lt;/code&gt; &lt;/a&gt; 항상 null 이외의 효과적인 반환해야 &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; 의 DRBG 실제로 인스턴스화하는 방법을 반영하는 개체를. 호출자는이 정보를 사용하여 &lt;code&gt;SecureRandom&lt;/code&gt; 개체가 DRBG 인지 여부 와 지원하는 기능을 확인할 수 있습니다. 반환 된 값이 &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; 호출에 전달 된 &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; 개체와 반드시 동일하지는 않습니다 . 예를 들어 요청 된 기능은 &lt;a href=&quot;drbgparameters.capability#NONE&quot;&gt; &lt;code&gt;DrbgParameters.Capability.NONE&lt;/code&gt; 일 수&lt;/a&gt; 있지만 유효 값은 &lt;a href=&quot;drbgparameters.capability#RESEED_ONLY&quot;&gt; &lt;code&gt;DrbgParameters.Capability.RESEED_ONLY&lt;/code&gt; 일&lt;/a&gt; 수 있습니다 .구현이 다시 시드를 지원하는 경우. 구현은 &lt;code&gt;DrbgParameters.NextBytes&lt;/code&gt; 매개 변수를 사용 하는 &lt;a href=&quot;securerandomspi#engineNextBytes(byte%5B%5D,java.security.SecureRandomParameters)&quot;&gt; &lt;code&gt;SecureRandomSpi.engineNextBytes(byte[], SecureRandomParameters)&lt;/code&gt; &lt;/a&gt; 메서드를 구현해야합니다 . 의 결과를 제외 &lt;a href=&quot;securerandom#getParameters()&quot;&gt; &lt;code&gt;SecureRandom.getParameters()&lt;/code&gt; &lt;/a&gt; 자사가없는 &lt;a href=&quot;drbgparameters.instantiation#getCapability()&quot;&gt;능력&lt;/a&gt; 있는 &lt;a href=&quot;drbgparameters.capability#NONE&quot;&gt; &lt;code&gt;NONE&lt;/code&gt; 을&lt;/a&gt; , 그것을 구현해야합니다 &lt;a href=&quot;securerandomspi#engineReseed(java.security.SecureRandomParameters)&quot;&gt; &lt;code&gt;SecureRandomSpi.engineReseed(SecureRandomParameters)&lt;/code&gt; &lt;/a&gt; 소요 &lt;code&gt;DrbgParameters.Reseed&lt;/code&gt; 의 매개 변수를.</target>
        </trans-unit>
        <trans-unit id="50ed389c980a3b82f5fa1dcf9431f3b476fcb7a5" translate="yes" xml:space="preserve">
          <source>A Dialog is a top-level window with a title and a border that is typically used to take some form of input from the user.</source>
          <target state="translated">대화 상자는 일반적으로 사용자로부터 어떤 형태의 입력을받는 데 사용되는 제목과 테두리가있는 최상위 창입니다.</target>
        </trans-unit>
        <trans-unit id="fe1b9faf4546dec2300125abdf988d84664ea20f" translate="yes" xml:space="preserve">
          <source>A Dialog is a top-level window with a title and a border that is typically used to take some form of input from the user. The size of the dialog includes any area designated for the border. The dimensions of the border area can be obtained using the &lt;code&gt;getInsets&lt;/code&gt; method, however, since these dimensions are platform-dependent, a valid insets value cannot be obtained until the dialog is made displayable by either calling &lt;code&gt;pack&lt;/code&gt; or &lt;code&gt;show&lt;/code&gt;. Since the border area is included in the overall size of the dialog, the border effectively obscures a portion of the dialog, constraining the area available for rendering and/or displaying subcomponents to the rectangle which has an upper-left corner location of &lt;code&gt;(insets.left, insets.top)&lt;/code&gt;, and has a size of &lt;code&gt;width - (insets.left + insets.right)&lt;/code&gt; by &lt;code&gt;height - (insets.top + insets.bottom)&lt;/code&gt;.</source>
          <target state="translated">대화 상자는 일반적으로 사용자로부터 어떤 형태의 입력을받는 데 사용되는 제목과 테두리가있는 최상위 창입니다. 대화 상자의 크기에는 테두리로 지정된 모든 영역이 포함됩니다. 테두리 영역의 크기는 &lt;code&gt;getInsets&lt;/code&gt; 메서드 를 사용하여 얻을 수 있지만, 이러한 차원은 플랫폼에 따라 다르기 때문에 &lt;code&gt;pack&lt;/code&gt; 또는 &lt;code&gt;show&lt;/code&gt; 를 호출하여 대화 상자를 표시 할 수있을 때까지 유효한 삽입 값을 얻을 수 없습니다 . 테두리 영역이 대화 상자의 전체 크기에 포함되므로 테두리는 대화 상자의 일부를 효과적으로 가려서 렌더링 및 / 또는 하위 구성 요소 표시에 사용할 수있는 영역을 왼쪽 위 모서리 위치가 &lt;code&gt;(insets.left, insets.top)&lt;/code&gt; 이며 크기는 &lt;code&gt;width - (insets.left + insets.right)&lt;/code&gt; x &lt;code&gt;height - (insets.top + insets.bottom)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c0ae9f894e19bb52c1d4d3e09f60802c800601c" translate="yes" xml:space="preserve">
          <source>A Dimension object that indicates the size of this component; null if this object is not on the screen</source>
          <target state="translated">이 구성 요소의 크기를 나타내는 Dimension 개체입니다. 이 객체가 화면에 없으면 null</target>
        </trans-unit>
        <trans-unit id="e06695bbc72ff1b5ce51b060c69b0b7a40f516e3" translate="yes" xml:space="preserve">
          <source>A DocAttributeSet is just an &lt;a href=&quot;attributeset&quot;&gt;&lt;code&gt;AttributeSet&lt;/code&gt;&lt;/a&gt; whose constructors and mutating operations guarantee an additional invariant, namely that all attribute values in the DocAttributeSet must be instances of interface &lt;a href=&quot;docattribute&quot;&gt;&lt;code&gt;DocAttribute&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;docattributeset#add-javax.print.attribute.Attribute-&quot;&gt;&lt;code&gt;add(Attribute)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;docattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt;&lt;code&gt;addAll(AttributeSet)&lt;/code&gt;&lt;/a&gt; operations are respecified below to guarantee this additional invariant.</source>
          <target state="translated">해, DocAttributeSet 단지입니다 &lt;a href=&quot;attributeset&quot;&gt; &lt;code&gt;AttributeSet&lt;/code&gt; 에&lt;/a&gt; 그 생성자와 돌연변이의 조작 해, DocAttributeSet의 모든 속성 값은 인터페이스의 인스턴스해야합니다 즉 것을 추가 불변 보장 &lt;a href=&quot;docattribute&quot;&gt; &lt;code&gt;DocAttribute&lt;/code&gt; 를&lt;/a&gt; . &lt;a href=&quot;docattributeset#add-javax.print.attribute.Attribute-&quot;&gt; &lt;code&gt;add(Attribute)&lt;/code&gt; &lt;/a&gt; , 및 &lt;a href=&quot;docattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt; &lt;code&gt;addAll(AttributeSet)&lt;/code&gt; &lt;/a&gt; 작업이 추가 불변을 보장하기 위해 아래 respecified된다.</target>
        </trans-unit>
        <trans-unit id="9526eb9e07d3f0d597f8deb47aa3a8a53b2774f7" translate="yes" xml:space="preserve">
          <source>A DocumentFragment containing the extracted contents.</source>
          <target state="translated">추출 된 내용을 포함하는 DocumentFragment입니다.</target>
        </trans-unit>
        <trans-unit id="d885aecedb913e7e9ad58e330026c748fe5d6401" translate="yes" xml:space="preserve">
          <source>A DocumentFragment that contains content equivalent to this Range.</source>
          <target state="translated">이 Range에 해당하는 콘텐츠를 포함하는 DocumentFragment입니다.</target>
        </trans-unit>
        <trans-unit id="21f6b69850f9a459ccf9785d7b301978a813eb95" translate="yes" xml:space="preserve">
          <source>A Duration object represents a period of Gregorian time, which consists of six fields (years, months, days, hours, minutes, and seconds) plus a sign (+/-) field.</source>
          <target state="translated">Duration 개체는 6 개의 필드 (년, 월, 일, 시간, 분 및 초)와 기호 (+/-) 필드로 구성된 그레고리력 시간의 기간을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="540605bdc46068b28f36fc2fbe886657aecbbe59" translate="yes" xml:space="preserve">
          <source>A Feature type as defined in the &lt;a href=&quot;catalogfeatures#CatalogFeatures&quot;&gt;Catalog Features table&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;catalogfeatures#CatalogFeatures&quot;&gt;카탈로그 기능 테이블에&lt;/a&gt; 정의 된 기능 유형 .</target>
        </trans-unit>
        <trans-unit id="dca67a6c4e0325cfb67cd9c03877cb0ceaed02e9" translate="yes" xml:space="preserve">
          <source>A Filter can be used to provide fine grain control over what is logged, beyond the control provided by log levels.</source>
          <target state="translated">필터를 사용하면 로그 수준에서 제공하는 제어를 넘어서 기록 된 내용을 세밀하게 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4c9a148d25d26005d31ec79131ad55e93256cdf" translate="yes" xml:space="preserve">
          <source>A FlavorMap which relaxes the traditional 1-to-1 restriction of a Map.</source>
          <target state="translated">맵의 전통적인 일대일 제한을 완화하는 FlavorMap.</target>
        </trans-unit>
        <trans-unit id="3a992429c52c81d400c8823b0098a371a1a65594" translate="yes" xml:space="preserve">
          <source>A FlavorMap which relaxes the traditional 1-to-1 restriction of a Map. A flavor is permitted to map to any number of natives, and likewise a native is permitted to map to any number of flavors. FlavorTables need not be symmetric, but typically are.</source>
          <target state="translated">맵의 전통적인 일대일 제한을 완화하는 FlavorMap. 맛은 원하는 수의 네이티브에 매핑 할 수 있으며 마찬가지로 네이티브는 원하는 수의 맛에 매핑 할 수 있습니다. FlavorTable은 대칭 일 필요는 없지만 일반적으로 대칭입니다.</target>
        </trans-unit>
        <trans-unit id="e1d9b95370b4f9df8a6d70a956837bb6799f17f8" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy defines the order in which Components with a particular focus cycle root are traversed.</source>
          <target state="translated">FocusTraversalPolicy는 특정 포커스주기 루트가있는 구성 요소가 순회되는 순서를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="9bb82711aef2432546f117d8e08ea56e21f68ac1" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy defines the order in which Components with a particular focus cycle root are traversed. Instances can apply the policy to arbitrary focus cycle roots, allowing themselves to be shared across Containers. They do not need to be reinitialized when the focus cycle roots of a Component hierarchy change.</source>
          <target state="translated">FocusTraversalPolicy는 특정 포커스주기 루트가있는 구성 요소가 순회되는 순서를 정의합니다. 인스턴스는 임의의 포커스주기 루트에 정책을 적용하여 컨테이너간에 공유 할 수 있습니다. 구성 요소 계층 구조의 포커스주기 루트가 변경 될 때 다시 초기화 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="302ac4a992098dd291ee9fbed1be3b0b5de7f45a" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy that determines traversal order based on the order of child Components in a Container.</source>
          <target state="translated">컨테이너에서 자식 구성 요소의 순서를 기반으로 순회 순서를 결정하는 FocusTraversalPolicy입니다.</target>
        </trans-unit>
        <trans-unit id="274bc4a822765b08e82d940279bca9411febe9a1" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy that determines traversal order based on the order of child Components in a Container. From a particular focus cycle root, the policy makes a pre-order traversal of the Component hierarchy, and traverses a Container's children according to the ordering of the array returned by &lt;code&gt;Container.getComponents()&lt;/code&gt;. Portions of the hierarchy that are not visible and displayable will not be searched.</source>
          <target state="translated">컨테이너에서 자식 구성 요소의 순서를 기반으로 순회 순서를 결정하는 FocusTraversalPolicy입니다. 특정 포커스주기 루트에서 정책은 구성 요소 계층 구조의 사전 주문 순회를 만들고 &lt;code&gt;Container.getComponents()&lt;/code&gt; 반환 한 배열 순서에 따라 컨테이너의 자식을 순회합니다 . 보이지 않고 표시 할 수없는 계층 구조 부분은 검색되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="16d3e951d9cfb4b5c0983d839e0275daab570b30" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy that determines traversal order by sorting the Components of a focus traversal cycle based on a given Comparator.</source>
          <target state="translated">지정된 Comparator를 기반으로 포커스 탐색주기의 구성 요소를 정렬하여 탐색 순서를 결정하는 FocusTraversalPolicy입니다.</target>
        </trans-unit>
        <trans-unit id="28e6d08b1a0a8ff91d5931eea821c9b751c3af21" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy that determines traversal order by sorting the Components of a focus traversal cycle based on a given Comparator. Portions of the Component hierarchy that are not visible and displayable will not be included.</source>
          <target state="translated">지정된 Comparator를 기반으로 포커스 탐색주기의 구성 요소를 정렬하여 탐색 순서를 결정하는 FocusTraversalPolicy입니다. 보이지 않고 표시 할 수없는 구성 요소 계층 구조의 일부는 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="698aaf8759f47e00f9e85c5a656eba498985410d" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy which can optionally provide an algorithm for determining a JInternalFrame's initial Component.</source>
          <target state="translated">JInternalFrame의 초기 컴포넌트를 결정하기위한 알고리즘을 선택적으로 제공 할 수있는 FocusTraversalPolicy.</target>
        </trans-unit>
        <trans-unit id="603c6fd19f8c9bfa4462453a5c87aa26a6d0596a" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy which can optionally provide an algorithm for determining a JInternalFrame's initial Component. The initial Component is the first to receive focus when the JInternalFrame is first selected. By default, this is the same as the JInternalFrame's default Component to focus.</source>
          <target state="translated">JInternalFrame의 초기 컴포넌트를 결정하기위한 알고리즘을 선택적으로 제공 할 수있는 FocusTraversalPolicy. 초기 컴포넌트는 JInternalFrame이 처음 선택 될 때 가장 먼저 포커스를받습니다. 기본적으로 이것은 JInternalFrame의 기본 컴포넌트와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="ecb63af3753ed032809d47c9dac0e904126fcbc0" translate="yes" xml:space="preserve">
          <source>A Format</source>
          <target state="translated">형식</target>
        </trans-unit>
        <trans-unit id="bbcc0a1f7b91d484f43961c41f2b9e4a4e5bee04" translate="yes" xml:space="preserve">
          <source>A Formatter provides support for formatting LogRecords.</source>
          <target state="translated">포맷터는 LogRecord의 포맷을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="3608d52e4dbd328bc721e5e2b9946b7f8c5348fb" translate="yes" xml:space="preserve">
          <source>A Future representing the result of the operation</source>
          <target state="translated">작업 결과를 나타내는 미래</target>
        </trans-unit>
        <trans-unit id="77df36e7d76d3d9d3302e4a05f0c08c1f7c69e5b" translate="yes" xml:space="preserve">
          <source>A GlyphView is a styled chunk of text that represents a view mapped over an element in the text model.</source>
          <target state="translated">GlyphView는 텍스트 모델의 요소에 매핑 된 뷰를 나타내는 스타일이 지정된 텍스트 청크입니다.</target>
        </trans-unit>
        <trans-unit id="fe06c64887e8525641c9b2e3bf0d0229ff870a18" translate="yes" xml:space="preserve">
          <source>A GlyphView is a styled chunk of text that represents a view mapped over an element in the text model. This view is generally responsible for displaying text glyphs using character level attributes in some way. An implementation of the GlyphPainter class is used to do the actual rendering and model/view translations. This separates rendering from layout and management of the association with the model.</source>
          <target state="translated">GlyphView는 텍스트 모델의 요소에 매핑 된 뷰를 나타내는 스타일이 지정된 텍스트 청크입니다. 이보기는 일반적으로 어떤 방식 으로든 문자 수준 속성을 사용하여 텍스트 글리프를 표시합니다. GlyphPainter 클래스의 구현은 실제 렌더링 및 모델 / 뷰 변환을 수행하는 데 사용됩니다. 이것은 모델과의 연결 관리 및 레이아웃에서 렌더링을 분리합니다.</target>
        </trans-unit>
        <trans-unit id="457cb135519bf29ef81b844625f7d44dfa89268c" translate="yes" xml:space="preserve">
          <source>A Graphic Control Extension block is written to the output stream only if image metadata containing a GraphicControlExtension element is supplied to the writer, or no image metadata is supplied and the local color table generated from the image requires a transparent index. Application, Plain Text, and Comment Extension blocks are written only if they are supplied to the writer via image metadata.</source>
          <target state="translated">GraphicControlExtension 요소를 포함하는 이미지 메타 데이터가 기록기에 제공되거나 이미지 메타 데이터가 제공되지 않고 이미지에서 생성 된 로컬 색상 표에 투명한 인덱스가 필요한 경우에만 그래픽 제어 확장 블록이 출력 스트림에 기록됩니다. 응용 프로그램, 일반 텍스트 및 주석 확장명 블록은 이미지 메타 데이터를 통해 기록기에 제공되는 경우에만 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="af50eb5591ce520db7166060578eb5119637a841" translate="yes" xml:space="preserve">
          <source>A GuardedObject encapsulates a target object and a Guard object, such that access to the target object is possible only if the Guard object allows it. Once an object is encapsulated by a GuardedObject, access to that object is controlled by the &lt;code&gt;getObject&lt;/code&gt; method, which invokes the &lt;code&gt;checkGuard&lt;/code&gt; method on the Guard object that is guarding access. If access is not allowed, an exception is thrown.</source>
          <target state="translated">GuardedObject는 대상 개체와 Guard 개체를 캡슐화하여 Guard 개체가 허용하는 경우에만 대상 개체에 액세스 할 수 있도록합니다. GuardedObject에 의해 객체가 캡슐화되면 액세스를 보호하는 Guard 객체 에서 &lt;code&gt;checkGuard&lt;/code&gt; 메소드 를 호출하는 &lt;code&gt;getObject&lt;/code&gt; 메소드에 의해 해당 객체에 대한 액세스가 제어됩니다 . 액세스가 허용되지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0d2351b4772e9dd16b7c18f880f43463fbe76dff" translate="yes" xml:space="preserve">
          <source>A GuardedObject is an object that is used to protect access to another object.</source>
          <target state="translated">GuardedObject는 다른 개체에 대한 액세스를 보호하는 데 사용되는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="a8cab0413a630393329d2147838049ef36d1f63c" translate="yes" xml:space="preserve">
          <source>A High Level API</source>
          <target state="translated">고급 API</target>
        </trans-unit>
        <trans-unit id="4b568137ce228a499651a74987888d9f610f408c" translate="yes" xml:space="preserve">
          <source>A JDBC &lt;code&gt;FilteredRowSet&lt;/code&gt; standard implementation implements the &lt;code&gt;RowSet&lt;/code&gt; interfaces and extends the &lt;code&gt;CachedRowSet&lt;/code&gt;&amp;trade; class. The &lt;code&gt;CachedRowSet&lt;/code&gt; class provides a set of protected cursor manipulation methods, which a &lt;code&gt;FilteredRowSet&lt;/code&gt; implementation can override to supply filtering support.</source>
          <target state="translated">JDBC &lt;code&gt;FilteredRowSet&lt;/code&gt; 표준 구현은 &lt;code&gt;RowSet&lt;/code&gt; 인터페이스를 구현 하고 &lt;code&gt;CachedRowSet&lt;/code&gt; &amp;trade; 클래스를 확장합니다 . &lt;code&gt;CachedRowSet&lt;/code&gt; 클래스는 보호 커서 조작 방법, 세트 제공 &lt;code&gt;FilteredRowSet&lt;/code&gt; 구현이 지원을 필터링 공급 오버라이드 (override) 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0c4285b19f9b0fd1c94cb6a7db61c10c4f56263" translate="yes" xml:space="preserve">
          <source>A JDBC driver implementation should use the constructor &lt;code&gt;BatchUpdateException(String reason, String SQLState,
 int vendorCode, long []updateCounts,Throwable cause) &lt;/code&gt; instead of constructors that take &lt;code&gt;int[]&lt;/code&gt; for the update counts to avoid the possibility of overflow.</source>
          <target state="translated">JDBC 드라이버 구현은 오버플로 가능성을 피하기 위해 업데이트 카운트에 &lt;code&gt;int[]&lt;/code&gt; 를 사용하는 생성자 대신 &lt;code&gt;BatchUpdateException(String reason, String SQLState, int vendorCode, long []updateCounts,Throwable cause) &lt;/code&gt; 생성자를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="afe77a9a4f253a94bef7be1d1c15dad00d77f18e" translate="yes" xml:space="preserve">
          <source>A JDBC driver may create a &lt;a href=&quot;driveraction&quot;&gt;DriverAction&lt;/a&gt; implementation in order to receive notifications when &lt;a href=&quot;drivermanager#deregisterDriver(java.sql.Driver)&quot;&gt;DriverManager.deregisterDriver(java.sql.Driver)&lt;/a&gt; has been called.</source>
          <target state="translated">JDBC 드라이버는 &lt;a href=&quot;drivermanager#deregisterDriver(java.sql.Driver)&quot;&gt;DriverManager.deregisterDriver (java.sql.Driver)&lt;/a&gt; 가 호출 되었을 때 알림을 받기 위해 &lt;a href=&quot;driveraction&quot;&gt;DriverAction&lt;/a&gt; 구현을 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ff73ce0cbe8e77a9a813ec78bb01ad5e71852504" translate="yes" xml:space="preserve">
          <source>A JMX API connector server that creates RMI-based connections from remote clients.</source>
          <target state="translated">원격 클라이언트에서 RMI 기반 연결을 작성하는 JMX API 커넥터 서버.</target>
        </trans-unit>
        <trans-unit id="f3afe2bdfa3c0dbc4a8b8de29b9607e68d7a3f26" translate="yes" xml:space="preserve">
          <source>A JMX API connector server that creates RMI-based connections from remote clients. Usually, such connector servers are made using &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorserverfactory&quot;&gt;&lt;code&gt;JMXConnectorServerFactory&lt;/code&gt;&lt;/a&gt;. However, specialized applications can use this class directly, for example with an &lt;a href=&quot;rmiserverimpl&quot;&gt;&lt;code&gt;RMIServerImpl&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">원격 클라이언트에서 RMI 기반 연결을 만드는 JMX API 커넥터 서버입니다. 일반적으로 이러한 커넥터 서버는 &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorserverfactory&quot;&gt; &lt;code&gt;JMXConnectorServerFactory&lt;/code&gt; 를&lt;/a&gt; 사용하여 만들어집니다 . 그러나 특수 응용 프로그램은이 클래스를 직접 사용할 수 있습니다 (예 : &lt;a href=&quot;rmiserverimpl&quot;&gt; &lt;code&gt;RMIServerImpl&lt;/code&gt; &lt;/a&gt; 개체).</target>
        </trans-unit>
        <trans-unit id="ae6c98f065b6700b78cceaae125cd30aa4ee675a" translate="yes" xml:space="preserve">
          <source>A JMX API connector server that creates RMI-based connections from remote clients. Usually, such connector servers are made using &lt;a href=&quot;../jmxconnectorserverfactory&quot;&gt;&lt;code&gt;JMXConnectorServerFactory&lt;/code&gt;&lt;/a&gt;. However, specialized applications can use this class directly, for example with an &lt;a href=&quot;rmiserverimpl&quot;&gt;&lt;code&gt;RMIServerImpl&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">원격 클라이언트에서 RMI 기반 연결을 작성하는 JMX API 커넥터 서버. 일반적으로 이러한 커넥터 서버는 &lt;a href=&quot;../jmxconnectorserverfactory&quot;&gt; &lt;code&gt;JMXConnectorServerFactory&lt;/code&gt; 를&lt;/a&gt; 사용하여 작성됩니다 . 그러나 특수 응용 프로그램은이 클래스를 &lt;a href=&quot;rmiserverimpl&quot;&gt; &lt;code&gt;RMIServerImpl&lt;/code&gt; &lt;/a&gt; 객체 와 같이 직접 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b7e6c2614e2f71adc4152c814a2dce219bcaa2a4" translate="yes" xml:space="preserve">
          <source>A Jar directory</source>
          <target state="translated">Jar 디렉토리</target>
        </trans-unit>
        <trans-unit id="6dc19b4c0c9bf7e2c340017f908ce07b36d720a9" translate="yes" xml:space="preserve">
          <source>A Jar entry</source>
          <target state="translated">항아리 항목</target>
        </trans-unit>
        <trans-unit id="33f576854d1202217500a73131dc51de90b4477a" translate="yes" xml:space="preserve">
          <source>A Jar file</source>
          <target state="translated">Jar 파일</target>
        </trans-unit>
        <trans-unit id="297b2a16ec407bba3eff5fdf89b75e43355d9a86" translate="yes" xml:space="preserve">
          <source>A Java L&amp;amp;F implementation of SliderUI.</source>
          <target state="translated">SliderUI의 Java L &amp;amp; F 구현입니다.</target>
        </trans-unit>
        <trans-unit id="1da6827faf9d07ac2f0b35aead3537d4219ce887" translate="yes" xml:space="preserve">
          <source>A Java Print Service instance is allowed to support any other doc flavors (or none) in addition to the above mandatory ones, at the implementation's choice.</source>
          <target state="translated">Java Print Service 인스턴스는, 구현의 선택에 의해, 위의 필수의 것 외에, 다른 doc 플레이버를 지원할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a66aee2d7211302980680b8958d4f89d8a39a52b" translate="yes" xml:space="preserve">
          <source>A Java Print Service instance is not &lt;b&gt;&lt;i&gt;required&lt;/i&gt;&lt;/b&gt; to support the following print data formats and print data representation classes. In fact, a developer using this class should &lt;b&gt;never&lt;/b&gt; assume that a particular print service supports the document types corresponding to these pre-defined doc flavors. Always query the print service to determine what doc flavors it supports. However, developers who have print services that support these doc flavors are encouraged to refer to the predefined singleton instances created here.</source>
          <target state="translated">다음 인쇄 데이터 형식 및 인쇄 데이터 표현 클래스를 지원하기 위해 Java 인쇄 서비스 인스턴스가 &lt;b&gt;&lt;i&gt;필요&lt;/i&gt;&lt;/b&gt; 하지 않습니다 . 실제로이 클래스를 사용하는 개발자 는 특정 인쇄 서비스가 이러한 사전 정의 된 문서 종류에 해당하는 문서 유형을 지원한다고 가정 해서는 &lt;b&gt;안됩니다&lt;/b&gt; . 지원하는 doc 후 레이 바를 결정하려면 항상 인쇄 서비스에 문의하십시오. 그러나 이러한 문서 형태를 지원하는 인쇄 서비스를 보유한 개발자는 여기에서 생성 된 사전 정의 된 싱글 톤 인스턴스를 참조하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="80192c859d3924988eb6d8c333ea17126c2df7c7" translate="yes" xml:space="preserve">
          <source>A Java Virtual Machine implementation may hide implementation specific frames in addition to &lt;a href=&quot;#SHOW_REFLECT_FRAMES&quot;&gt;reflection frames&lt;/a&gt;. A &lt;code&gt;StackWalker&lt;/code&gt; with this &lt;code&gt;SHOW_HIDDEN_FRAMES&lt;/code&gt; option will show all hidden frames (including reflection frames).</source>
          <target state="translated">Java Virtual Machine 구현은 &lt;a href=&quot;#SHOW_REFLECT_FRAMES&quot;&gt;리플렉션 프레임&lt;/a&gt; 외에도 구현 특정 프레임을 숨길 수 있습니다 . 이 &lt;code&gt;SHOW_HIDDEN_FRAMES&lt;/code&gt; 옵션 이 있는 &lt;code&gt;StackWalker&lt;/code&gt; 는 모든 숨겨진 프레임 (반사 프레임 포함)을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="8d892ffdda46a2fc60c6a1d8a7c68c1f25ce0467" translate="yes" xml:space="preserve">
          <source>A Java class can implement this interface to indicate how it is to be converted into a &lt;code&gt;CompositeData&lt;/code&gt; by the MXBean framework.</source>
          <target state="translated">Java 클래스는이 인터페이스를 구현 하여 MXBean 프레임 워크 에서 &lt;code&gt;CompositeData&lt;/code&gt; 로 변환하는 방법을 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6edf0111df61af6dbdeb9ee50bfaf78d76b3ee69" translate="yes" xml:space="preserve">
          <source>A Java method call expression naming &lt;code&gt;invokeExact&lt;/code&gt; or &lt;code&gt;invoke&lt;/code&gt; can invoke a method handle from Java source code. From the viewpoint of source code, these methods can take any arguments and their result can be cast to any return type. Formally this is accomplished by giving the invoker methods &lt;code&gt;Object&lt;/code&gt; return types and variable arity &lt;code&gt;Object&lt;/code&gt; arguments, but they have an additional quality called &lt;em&gt;signature polymorphism&lt;/em&gt; which connects this freedom of invocation directly to the JVM execution stack.</source>
          <target state="translated">&lt;code&gt;invokeExact&lt;/code&gt; 또는 &lt;code&gt;invoke&lt;/code&gt; 라는 Java 메소드 호출 표현식 은 Java 소스 코드에서 메소드 핸들을 호출 할 수 있습니다. 소스 코드의 관점에서 이러한 메소드는 인수를 사용할 수 있으며 결과는 모든 리턴 유형으로 캐스트 될 수 있습니다. 공식적으로 이것은 호출자 메소드에 &lt;code&gt;Object&lt;/code&gt; 리턴 유형 및 변수 arity &lt;code&gt;Object&lt;/code&gt; 인수 를 제공함으로써 달성 되지만, 이러한 호출의 자유를 JVM 실행 스택에 직접 연결하는 &lt;em&gt;시그니처 다형성&lt;/em&gt; 이라는 추가 품질 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1bc0756c84e38c0f95a41e93652ab4f8e248990e" translate="yes" xml:space="preserve">
          <source>A Java method call expression naming an access mode method can invoke a VarHandle from Java source code. From the viewpoint of source code, these methods can take any arguments and their polymorphic result (if expressed) can be cast to any return type. Formally this is accomplished by giving the access mode methods variable arity &lt;code&gt;Object&lt;/code&gt; arguments and &lt;code&gt;Object&lt;/code&gt; return types (if the return type is polymorphic), but they have an additional quality called &lt;em&gt;signature polymorphism&lt;/em&gt; which connects this freedom of invocation directly to the JVM execution stack.</source>
          <target state="translated">액세스 모드 메소드의 이름을 지정하는 Java 메소드 호출 표현식은 Java 소스 코드에서 VarHandle을 호출 할 수 있습니다. 소스 코드의 관점에서 이러한 메서드는 모든 인수를 취할 수 있으며 다형성 결과 (표현 된 경우)를 모든 반환 유형으로 캐스팅 할 수 있습니다. 공식적으로 이것은 액세스 모드 메소드에 변수 arity &lt;code&gt;Object&lt;/code&gt; 인수 및 &lt;code&gt;Object&lt;/code&gt; 리턴 유형 (반환 유형이 다형성 인 경우)을 제공하여 수행되지만, 이러한 호출의 자유를 JVM 실행 스택에 직접 연결하는 &lt;em&gt;서명 다형성&lt;/em&gt; 이라는 추가 품질 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="58e91acafe8fe67ec2c2ccabb641a8ae3f696d06" translate="yes" xml:space="preserve">
          <source>A Java object cannot be registered in the MBeanServer unless it is a JMX compliant MBean. By instantiating a RequiredModelMBean, resources are guaranteed that the MBean is valid. MBeanException and RuntimeOperationsException must be thrown on every public method. This allows for wrapping exceptions from distributed communications (RMI, EJB, etc.)</source>
          <target state="translated">JMX 호환 MBean이 아닌 경우 MBeanServer에 Java 오브젝트를 등록 할 수 없습니다. RequiredModelMBean을 인스턴스화함으로써 자원은 MBean이 유효 함을 보증합니다. 모든 공용 메소드에서 MBeanException 및 RuntimeOperationsException이 발생해야합니다. 이를 통해 분산 통신 (RMI, EJB 등)의 예외를 랩핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e09f03419e3950f2881774c48754316dc68ddd62" translate="yes" xml:space="preserve">
          <source>A Java platform implementation may support only a limited, non-empty set of echo characters. Attempts to set an unsupported echo character will cause the default echo character to be used instead. Subsequent calls to getEchoChar() will return the echo character originally requested. This might or might not be identical to the echo character actually used by the TextField implementation.</source>
          <target state="translated">Java 플랫폼 구현은 제한적이고 비어 있지 않은 에코 문자 집합 만 지원할 수 있습니다. 지원되지 않는 에코 문자를 설정하려고하면 기본 에코 문자가 대신 사용됩니다. getEchoChar ()에 대한 후속 호출은 원래 요청 된 에코 문자를 반환합니다. 이것은 TextField 구현에서 실제로 사용되는 에코 문자와 동일하거나 동일하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="095bc22faf4c5e3630fb6dfd307c760dbd1d9547" translate="yes" xml:space="preserve">
          <source>A Java platform implementation may support only a limited, non-empty set of echo characters. This function returns the echo character originally requested via setEchoChar(). The echo character actually used by the TextField implementation might be different.</source>
          <target state="translated">Java 플랫폼 구현은 제한적이고 비어 있지 않은 에코 문자 집합 만 지원할 수 있습니다. 이 함수는 원래 setEchoChar ()를 통해 요청 된 에코 문자를 반환합니다. TextField 구현에서 실제로 사용되는 에코 문자는 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58c03aa680d8c3910bd52a6133e2ef98635461ef" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the following management interfaces:</source>
          <target state="translated">Java 가상 머신에는 다음 관리 인터페이스의 단일 인스턴스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ec588c4eb2d7f429dc6d90136bd82c63be83482" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getClassLoadingMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getClassLoadingMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JVM (Java Virtual Machine)에는이 인터페이스의 구현 클래스의 단일 인스턴스가 있습니다. 이 인터페이스를 구현하는이 인스턴스 는 &lt;a href=&quot;managementfactory#getClassLoadingMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getClassLoadingMXBean()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt; 에서 얻을 수 있는 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="70c8f67671b8966ac11b075966365897c84518be" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getClassLoadingMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getClassLoadingMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Java 가상 머신에는이 인터페이스의 구현 클래스의 단일 인스턴스가 있습니다. 이 인터페이스를 구현하는이 인스턴스 는 &lt;a href=&quot;managementfactory#getClassLoadingMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getClassLoadingMXBean()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;MBeanServer&lt;/code&gt; 에서 얻을 수 있는 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="697fcfae7e6cab80b51bc022451b82dddc540831" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getCompilationMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getCompilationMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">JVM (Java Virtual Machine)에는이 인터페이스의 구현 클래스의 단일 인스턴스가 있습니다. 이 인터페이스를 구현하는이 인스턴스 는 &lt;a href=&quot;managementfactory#getCompilationMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getCompilationMXBean()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt; 메소드 에서 얻을 수 있는 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="347e8813cc60d56413338a44f31ad5ee9c2fa302" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getCompilationMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getCompilationMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java 가상 머신에는이 인터페이스의 구현 클래스의 단일 인스턴스가 있습니다. 이 인터페이스를 구현하는이 인스턴스 는 &lt;a href=&quot;managementfactory#getCompilationMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getCompilationMXBean()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;MBeanServer&lt;/code&gt; 메소드 에서 얻을 수 있는 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="3a90239fd82a5490b3ea8e410880f47d3498d8d2" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">JVM (Java Virtual Machine)에는이 인터페이스의 구현 클래스의 단일 인스턴스가 있습니다. 이 인터페이스를 구현하는이 인스턴스 는 &lt;a href=&quot;managementfactory#getMemoryMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt; 메소드 에서 얻을 수 있는 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="5fa8db4ab567a59fc5f60ec01c6e824fe7c05a22" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java 가상 머신에는이 인터페이스의 구현 클래스의 단일 인스턴스가 있습니다. 이 인터페이스를 구현하는이 인스턴스 는 &lt;a href=&quot;managementfactory#getMemoryMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;MBeanServer&lt;/code&gt; 메소드 에서 얻을 수 있는 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="4705fea51ed57ff81141225fcc84ffcaa313f0e7" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getOperatingSystemMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getOperatingSystemMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">JVM (Java Virtual Machine)에는이 인터페이스의 구현 클래스의 단일 인스턴스가 있습니다. 이 인터페이스를 구현하는이 인스턴스 는 &lt;a href=&quot;managementfactory#getOperatingSystemMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getOperatingSystemMXBean()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt; 메소드 에서 얻을 수 있는 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="67d5e334705bccf69af8d75f22e7f727e30e55d9" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getOperatingSystemMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getOperatingSystemMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java 가상 머신에는이 인터페이스의 구현 클래스의 단일 인스턴스가 있습니다. 이 인터페이스를 구현하는이 인스턴스 는 &lt;a href=&quot;managementfactory#getOperatingSystemMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getOperatingSystemMXBean()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;MBeanServer&lt;/code&gt; 메소드 에서 얻을 수 있는 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="9147b460a50b435cc53f63706f359ace7746be8c" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getRuntimeMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getRuntimeMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">JVM (Java Virtual Machine)에는이 인터페이스의 구현 클래스의 단일 인스턴스가 있습니다. 이 인터페이스를 구현하는이 인스턴스 는 &lt;a href=&quot;managementfactory#getRuntimeMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getRuntimeMXBean()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt; 메소드 에서 얻을 수 있는 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="afc0758b2e4f293302644dac2a4656ff98d653c2" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getRuntimeMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getRuntimeMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java 가상 머신에는이 인터페이스의 구현 클래스의 단일 인스턴스가 있습니다. 이 인터페이스를 구현하는이 인스턴스 는 &lt;a href=&quot;managementfactory#getRuntimeMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getRuntimeMXBean()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;MBeanServer&lt;/code&gt; 메소드 에서 얻을 수 있는 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="ee17a3fa41a1ceba5841d3cf559df83560728d76" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getThreadMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getThreadMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">JVM (Java Virtual Machine)에는이 인터페이스의 구현 클래스의 단일 인스턴스가 있습니다. 이 인터페이스를 구현하는이 인스턴스 는 &lt;a href=&quot;managementfactory#getThreadMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getThreadMXBean()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt; 메소드 에서 얻을 수 있는 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="cde8a42465b0560c9bd42d46d1f0eabb338a9d89" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getThreadMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getThreadMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java 가상 머신에는이 인터페이스의 구현 클래스의 단일 인스턴스가 있습니다. 이 인터페이스를 구현하는이 인스턴스 는 &lt;a href=&quot;managementfactory#getThreadMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getThreadMXBean()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;MBeanServer&lt;/code&gt; 메소드 에서 얻을 수 있는 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="474a94763f2c5c22a83857e1b426a51503734da1" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has at least one non-empty layer, the &lt;a href=&quot;#boot()&quot;&gt;&lt;code&gt;boot&lt;/code&gt;&lt;/a&gt; layer, that is created when the Java virtual machine is started. The boot layer contains module &lt;code&gt;java.base&lt;/code&gt; and is the only layer in the Java virtual machine with a module named &quot;&lt;code&gt;java.base&lt;/code&gt;&quot;. The modules in the boot layer are mapped to the bootstrap class loader and other class loaders that are &lt;a href=&quot;classloader#builtinLoaders&quot;&gt; built-in&lt;/a&gt; into the Java virtual machine. The boot layer will often be the &lt;a href=&quot;#parents()&quot;&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/a&gt; when creating additional layers.</source>
          <target state="translated">Java 가상 머신에는 Java 가상 머신이 시작될 때 작성되는 하나 이상의 비어 있지 않은 계층 인 &lt;a href=&quot;#boot()&quot;&gt; &lt;code&gt;boot&lt;/code&gt; &lt;/a&gt; 계층이 있습니다. 부트 계층은 모듈 &lt;code&gt;java.base&lt;/code&gt; 를 포함 하며 &quot; &lt;code&gt;java.base&lt;/code&gt; &quot; 라는 모듈이있는 Java 가상 머신의 유일한 계층입니다 . 부트 계층의 모듈 은 Java 가상 머신 &lt;a href=&quot;classloader#builtinLoaders&quot;&gt;에 내장 된&lt;/a&gt; 부트 스트랩 클래스 로더 및 기타 클래스 로더에 맵핑됩니다 . 추가 레이어를 만들 때 부팅 레이어가 종종 &lt;a href=&quot;#parents()&quot;&gt; &lt;code&gt;parent&lt;/code&gt; &lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="8e05fc4a55f98c87df7022394b7fa8fb70a14dce" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has one or more instances of the implementation class of this interface. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryPoolMXBeans()&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryPoolMXBeans()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">JVM (Java Virtual Machine)에는이 인터페이스의 구현 클래스 인스턴스가 하나 이상 있습니다. 이 인터페이스를 구현하는 인스턴스 는 &lt;a href=&quot;managementfactory#getMemoryPoolMXBeans()&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryPoolMXBeans()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt; 메소드 에서 얻을 수 있는 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="5cdd50ff313fa53fb85c54c49e1ba0d35d26a61b" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has one or more instances of the implementation class of this interface. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryPoolMXBeans--&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryPoolMXBeans()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java 가상 머신에는이 인터페이스의 구현 클래스 인스턴스가 하나 이상 있습니다. 이 인터페이스를 구현하는 인스턴스 는 &lt;a href=&quot;managementfactory#getMemoryPoolMXBeans--&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryPoolMXBeans()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;MBeanServer&lt;/code&gt; 메소드 에서 얻을 수 있는 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="6850a97c2118b0e5557ce433324f39f61a7bcbcb" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has one or more memory managers. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryManagerMXBeans()&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryManagerMXBeans()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">JVM (Java Virtual Machine)에는 하나 이상의 메모리 관리자가 있습니다. 이 인터페이스를 구현하는 인스턴스 는 &lt;a href=&quot;managementfactory#getMemoryManagerMXBeans()&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryManagerMXBeans()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt; 메소드 에서 얻을 수 있는 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="8a6b48dc53a0805d7177ee1ae5c3d1d720dd2b4d" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has one or more memory managers. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryManagerMXBeans--&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryManagerMXBeans()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java 가상 머신에는 하나 이상의 메모리 관리자가 있습니다. 이 인터페이스를 구현하는 인스턴스 는 &lt;a href=&quot;managementfactory#getMemoryManagerMXBeans--&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryManagerMXBeans()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;MBeanServer&lt;/code&gt; 메소드 에서 얻을 수 있는 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="7690649d409fc24f67e4adade638be6ff2f11b9b" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has zero or a single instance of the following management interfaces.</source>
          <target state="translated">Java 가상 머신에는 다음 관리 인터페이스의 인스턴스가 없거나 하나만 있습니다.</target>
        </trans-unit>
        <trans-unit id="3643080b6a5df5b46e7094eca6936cb87018df88" translate="yes" xml:space="preserve">
          <source>A Java virtual machine implementation may add its platform extension to the management interface by defining platform-dependent interfaces that extend the standard management interfaces to include platform-specific metrics and management operations. The static factory methods in the &lt;code&gt;ManagementFactory&lt;/code&gt; class will return the MXBeans with the platform extension.</source>
          <target state="translated">Java 가상 머신 구현에서는 플랫폼 별 메트릭 및 관리 작업을 포함하도록 표준 관리 인터페이스를 확장하는 플랫폼 종속 인터페이스를 정의하여 플랫폼 확장을 관리 인터페이스에 추가 할 수 있습니다. &lt;code&gt;ManagementFactory&lt;/code&gt; 클래스 의 정적 팩토리 메소드 는 플랫폼 확장이있는 MXBean을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="aa2fce070965d52fff3fd77ec7dbd45ec8214fd6" translate="yes" xml:space="preserve">
          <source>A Java virtual machine implementation may not support the boot class path mechanism for the bootstrap class loader to search for class files. The &lt;a href=&quot;#isBootClassPathSupported()&quot;&gt;&lt;code&gt;isBootClassPathSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if the Java virtual machine supports this method.</source>
          <target state="translated">Java 가상 머신 구현은 부트 스트랩 클래스 로더가 클래스 파일을 검색하기위한 부트 클래스 경로 메커니즘을 지원하지 않을 수 있습니다. &lt;a href=&quot;#isBootClassPathSupported()&quot;&gt; &lt;code&gt;isBootClassPathSupported()&lt;/code&gt; &lt;/a&gt; 메소드는 자바 가상 머신이 방법을 지원하는지 여부를 결정하기 위해 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="0fdebaa2381914e0bb13323b3f7999aa8c1d3f43" translate="yes" xml:space="preserve">
          <source>A Java virtual machine implementation may not support the boot class path mechanism for the bootstrap class loader to search for class files. The &lt;a href=&quot;runtimemxbean#isBootClassPathSupported--&quot;&gt;&lt;code&gt;isBootClassPathSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if the Java virtual machine supports this method.</source>
          <target state="translated">JVM (Java Virtual Machine) 구현은 부트 스트랩 클래스 로더가 클래스 파일을 검색하기위한 부트 클래스 경로 메커니즘을 지원하지 않을 수 있습니다. &lt;a href=&quot;runtimemxbean#isBootClassPathSupported--&quot;&gt; &lt;code&gt;isBootClassPathSupported()&lt;/code&gt; &lt;/a&gt; 메소드는 자바 가상 머신이 방법을 지원하는지 여부를 결정하기 위해 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="cbbf7263ee3ada105d25e3a25dac19fb977c0afe" translate="yes" xml:space="preserve">
          <source>A Java virtual machine implementation may support measuring the CPU time for the current thread, for any thread, or for no threads.</source>
          <target state="translated">JVM (Java Virtual Machine) 구현은 현재 스레드, 모든 스레드 또는 스레드가없는 CPU 시간 측정을 지원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8771f6593b5af27179c3bb03a94a2816a796c54" translate="yes" xml:space="preserve">
          <source>A Java virtual machine may disable CPU time measurement by default. The &lt;a href=&quot;#isThreadCpuTimeEnabled()&quot;&gt;&lt;code&gt;isThreadCpuTimeEnabled()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#setThreadCpuTimeEnabled(boolean)&quot;&gt;&lt;code&gt;setThreadCpuTimeEnabled(boolean)&lt;/code&gt;&lt;/a&gt; methods can be used to test if CPU time measurement is enabled and to enable/disable this support respectively. Enabling thread CPU measurement could be expensive in some Java virtual machine implementations.</source>
          <target state="translated">Java 가상 머신은 기본적으로 CPU 시간 측정을 비활성화 할 수 있습니다. &lt;a href=&quot;#isThreadCpuTimeEnabled()&quot;&gt; &lt;code&gt;isThreadCpuTimeEnabled()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;#setThreadCpuTimeEnabled(boolean)&quot;&gt; &lt;code&gt;setThreadCpuTimeEnabled(boolean)&lt;/code&gt; &lt;/a&gt; CPU 시간 측정이 가능하고,이 지지체를 각각 활성화 / 비활성화하는 경우, 방법은 시험에 사용될 수있다. 스레드 CPU 측정을 활성화하는 것은 일부 Java 가상 머신 구현에서 비용이 많이들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9fd238169eb9f786a282e184b0797c3100026965" translate="yes" xml:space="preserve">
          <source>A Java virtual machine may disable CPU time measurement by default. The &lt;a href=&quot;threadmxbean#isThreadCpuTimeEnabled--&quot;&gt;&lt;code&gt;isThreadCpuTimeEnabled()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;threadmxbean#setThreadCpuTimeEnabled-boolean-&quot;&gt;&lt;code&gt;setThreadCpuTimeEnabled(boolean)&lt;/code&gt;&lt;/a&gt; methods can be used to test if CPU time measurement is enabled and to enable/disable this support respectively. Enabling thread CPU measurement could be expensive in some Java virtual machine implementations.</source>
          <target state="translated">Java 가상 머신은 기본적으로 CPU 시간 측정을 비활성화 할 수 있습니다. &lt;a href=&quot;threadmxbean#isThreadCpuTimeEnabled--&quot;&gt; &lt;code&gt;isThreadCpuTimeEnabled()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;threadmxbean#setThreadCpuTimeEnabled-boolean-&quot;&gt; &lt;code&gt;setThreadCpuTimeEnabled(boolean)&lt;/code&gt; &lt;/a&gt; CPU 시간 측정이 가능하고,이 지지체를 각각 활성화 / 비활성화하는 경우, 방법은 시험에 사용될 수있다. 일부 Java 가상 머신 구현에서 스레드 CPU 측정을 사용하면 비용이 많이들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5af48488aaddcec098475db597e0b2ea17a79281" translate="yes" xml:space="preserve">
          <source>A Java virtual machine may have one or more instances of the following management interfaces.</source>
          <target state="translated">Java 가상 머신에는 다음 관리 인터페이스의 인스턴스가 하나 이상있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e36433af5b9e48410e17f94fe22c92e9be5113cf" translate="yes" xml:space="preserve">
          <source>A Java virtual machine may have one or more instances of the implementation class of this interface. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getGarbageCollectorMXBeans()&quot;&gt;&lt;code&gt;ManagementFactory.getGarbageCollectorMXBeans()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java 가상 머신에는이 인터페이스의 구현 클래스 인스턴스가 하나 이상있을 수 있습니다. 이 인터페이스를 구현하는 인스턴스 는 &lt;a href=&quot;managementfactory#getGarbageCollectorMXBeans()&quot;&gt; &lt;code&gt;ManagementFactory.getGarbageCollectorMXBeans()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt; 메소드 에서 얻을 수 있는 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="95203d6db041687aade0c2be196517a165b0adcb" translate="yes" xml:space="preserve">
          <source>A Java virtual machine may have one or more instances of the implementation class of this interface. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getGarbageCollectorMXBeans--&quot;&gt;&lt;code&gt;ManagementFactory.getGarbageCollectorMXBeans()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java 가상 머신에는이 인터페이스의 구현 클래스의 인스턴스가 하나 이상있을 수 있습니다. 이 인터페이스를 구현하는 인스턴스는 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; 을 호출하여 얻을 수 있는 MXBean 입니다.&lt;a href=&quot;managementfactory#getGarbageCollectorMXBeans--&quot;&gt; &lt;code&gt;ManagementFactory.getGarbageCollectorMXBeans()&lt;/code&gt; &lt;/a&gt; 메소드하거나&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 메소드에서.</target>
        </trans-unit>
        <trans-unit id="efb1cbd2f64596a7e895a5a7b43612a96af7c59d" translate="yes" xml:space="preserve">
          <source>A Java virtual machine performs collection usage threshold checking on a memory pool basis. This checking is enabled if the collection usage threshold is set to a positive value. If the collection usage threshold is set to zero, this checking is disabled on this memory pool. Default value is zero. The Java virtual machine performs the collection usage threshold checking at garbage collection time.</source>
          <target state="translated">Java 가상 머신은 메모리 풀 단위로 콜렉션 사용 임계 값 점검을 수행합니다. 콜렉션 사용 임계 값이 양수 값으로 설정된 경우이 점검이 사용 가능합니다. 콜렉션 사용 임계 값이 0으로 설정되면이 메모리 풀에서이 점검이 사용 불가능합니다. 기본값은 0입니다. Java 가상 머신은 가비지 콜렉션 시간에 콜렉션 사용 임계 값 점검을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="8a86334f9b1ec01b79c33f43a194f31c7eb87240" translate="yes" xml:space="preserve">
          <source>A Java virtual machine performs usage threshold crossing checking on a memory pool basis at its best appropriate time, typically, at garbage collection time. Each memory pool maintains a &lt;a href=&quot;#getUsageThresholdCount()&quot;&gt;&lt;code&gt;usage threshold count&lt;/code&gt;&lt;/a&gt; that will get incremented every time when the Java virtual machine detects that the memory pool usage is crossing the threshold.</source>
          <target state="translated">JVM (Java Virtual Machine)은 최적의 적절한 시간 (일반적으로 가비지 콜렉션 시간)에 메모리 풀 기준으로 사용량 임계 값 교차 검사를 수행합니다. 각 메모리 풀 은 Java 가상 머신이 메모리 풀 사용량이 임계 값을 초과하는 것을 감지 할 때마다 증가 하는 &lt;a href=&quot;#getUsageThresholdCount()&quot;&gt; &lt;code&gt;usage threshold count&lt;/code&gt; &lt;/a&gt; 를 유지합니다 .</target>
        </trans-unit>
        <trans-unit id="a8b2b51d16e2e228fa4a5cbcce2fb6267e261d1e" translate="yes" xml:space="preserve">
          <source>A Java virtual machine performs usage threshold crossing checking on a memory pool basis at its best appropriate time, typically, at garbage collection time. Each memory pool maintains a &lt;a href=&quot;memorypoolmxbean#getUsageThresholdCount--&quot;&gt;&lt;code&gt;usage threshold count&lt;/code&gt;&lt;/a&gt; that will get incremented every time when the Java virtual machine detects that the memory pool usage is crossing the threshold.</source>
          <target state="translated">Java 가상 머신은 최적의 적절한 시간, 일반적으로 가비지 수집 시간에 메모리 풀 단위로 사용량 임계 값 교차 확인을 수행합니다. 각 메모리 풀 은 Java 가상 머신이 메모리 풀 사용량이 임계 값을 넘고 있음을 감지 할 때마다 증가 하는 &lt;a href=&quot;memorypoolmxbean#getUsageThresholdCount--&quot;&gt; &lt;code&gt;usage threshold count&lt;/code&gt; &lt;/a&gt; 를 유지합니다 .</target>
        </trans-unit>
        <trans-unit id="657273352ec0c0d17b18a655ec31ad2fce7306d4" translate="yes" xml:space="preserve">
          <source>A JavaBean nested within a BeanContext, may ask that BeanContext to provide an instance of a &quot;service&quot;, based upon a reference to a Java Class object that represents that service.</source>
          <target state="translated">BeanContext 내에 중첩 된 JavaBean은 해당 서비스를 나타내는 Java 클래스 오브젝트에 대한 참조를 기반으로 BeanContext에 &quot;서비스&quot;의 인스턴스를 제공하도록 요청할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbfa3a04746bf2e669058dbb316d63d08277b0ab" translate="yes" xml:space="preserve">
          <source>A KRB_CRED message is defined in Section 5.8.1 of the Kerberos Protocol Specification (&lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;) as:</source>
          <target state="translated">KRB_CRED 메시지는 Kerberos 프로토콜 사양 ( &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt; ) 의 섹션 5.8.1에서 다음과 같이 정의 됩니다.</target>
        </trans-unit>
        <trans-unit id="4856ceba23801dd7f33418aeaae137318b971a6d" translate="yes" xml:space="preserve">
          <source>A Kerberos JAAS login module that obtains long term secret keys from a keytab file should use this class. The login module will store an instance of this class in the private credential set of a &lt;a href=&quot;../../../../../java.base/javax/security/auth/subject&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt; during the commit phase of the authentication process.</source>
          <target state="translated">keytab 파일에서 장기 비밀 키를 얻는 Kerberos JAAS 로그인 모듈은이 클래스를 사용해야합니다. 로그인 모듈은 인증 프로세스의 커밋 단계 동안 &lt;a href=&quot;../../../../../java.base/javax/security/auth/subject&quot;&gt; &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt; 의 개인 자격 증명 집합에이 클래스의 인스턴스를 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="3abf2e9662154c3360ad9e12084989fccc02c4fc" translate="yes" xml:space="preserve">
          <source>A Kerberos JAAS login module that obtains long term secret keys from a keytab file should use this class. The login module will store an instance of this class in the private credential set of a &lt;a href=&quot;../subject&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt; during the commit phase of the authentication process.</source>
          <target state="translated">키탭 파일에서 장기 비밀 키를 얻는 Kerberos JAAS 로그인 모듈은이 클래스를 사용해야합니다. 로그인 모듈은이 클래스의 인스턴스를 &lt;a href=&quot;../subject&quot;&gt; &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt; 의 개인 자격 증명 세트에 저장합니다. 인증 프로세스의 커밋 단계 동안 .</target>
        </trans-unit>
        <trans-unit id="447d01d458e313cec32a02eaa5cecaa0a26e2112" translate="yes" xml:space="preserve">
          <source>A Kerberos service using a keytab to read secret keys should use the &lt;a href=&quot;keytab&quot;&gt;&lt;code&gt;KeyTab&lt;/code&gt;&lt;/a&gt; class, where latest keys can be read when needed.</source>
          <target state="translated">비밀 키를 읽기 위해 키탭을 사용하는 Kerberos 서비스는 &lt;a href=&quot;keytab&quot;&gt; &lt;code&gt;KeyTab&lt;/code&gt; 을&lt;/a&gt; 사용해야합니다 클래스를 , 필요한 경우 최신 키를 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f4eb7d3eddf9e5cdd73c01e702fff914c37ea87" translate="yes" xml:space="preserve">
          <source>A Key pair generator for a particular algorithm creates a public/private key pair that can be used with this algorithm. It also associates algorithm-specific parameters with each of the generated keys.</source>
          <target state="translated">특정 알고리즘의 키 페어 생성기는이 알고리즘과 함께 사용할 수있는 공개 / 개인 키 페어를 생성합니다. 또한 알고리즘 특정 매개 변수를 생성 된 각 키와 연관시킵니다.</target>
        </trans-unit>
        <trans-unit id="096673ba135366e0327920d2953045ffc1a73dc8" translate="yes" xml:space="preserve">
          <source>A Key should use KeyRep as its serialized representation. Note that a serialized Key may contain sensitive information which should not be exposed in untrusted environments. See the  Security Appendix of the Serialization Specification for more information.</source>
          <target state="translated">키는 직렬화 된 표현으로 KeyRep을 사용해야합니다. 직렬화 된 키에는 신뢰할 수없는 환경에 노출되어서는 안되는 민감한 정보가 포함될 수 있습니다. 자세한 내용은 직렬화 사양의 보안 부록을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2dbe2f6e28368d28b4e57a87d42ca110e25332c7" translate="yes" xml:space="preserve">
          <source>A Key should use KeyRep as its serialized representation. Note that a serialized Key may contain sensitive information which should not be exposed in untrusted environments. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/serialization/security.html&quot;&gt; Security Appendix&lt;/a&gt; of the Serialization Specification for more information.</source>
          <target state="translated">Key는 직렬화 된 표현으로 KeyRep을 사용해야합니다. 직렬화 된 키에는 신뢰할 수없는 환경에 노출되어서는 안되는 민감한 정보가 포함될 수 있습니다. 자세한 내용은 직렬화 사양 의 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/serialization/security.html&quot;&gt;보안 부록&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3465d18f7c958f4eeced04692ba85e06b354c9ec" translate="yes" xml:space="preserve">
          <source>A KeyAlreadyExistsException with a detail message.</source>
          <target state="translated">세부 메시지가있는 KeyAlreadyExistsException</target>
        </trans-unit>
        <trans-unit id="e37b2fbff6d8ebf1d7b8bd7d21ae02fa2e660373" translate="yes" xml:space="preserve">
          <source>A KeyAlreadyExistsException with no detail message.</source>
          <target state="translated">세부 메시지가없는 KeyAlreadyExistsException</target>
        </trans-unit>
        <trans-unit id="8bc4eacbad1d0c40ed7878a2f885b6d5f62533b7" translate="yes" xml:space="preserve">
          <source>A KeyEventDispatcher cooperates with the current KeyboardFocusManager in the targeting and dispatching of all KeyEvents.</source>
          <target state="translated">KeyEventDispatcher는 모든 KeyEvent의 대상 지정 및 전달에서 현재 KeyboardFocusManager와 협력합니다.</target>
        </trans-unit>
        <trans-unit id="ac54a63dd2de6f1d147a892a47d92518fafab8e3" translate="yes" xml:space="preserve">
          <source>A KeyEventDispatcher cooperates with the current KeyboardFocusManager in the targeting and dispatching of all KeyEvents. KeyEventDispatchers registered with the current KeyboardFocusManager will receive KeyEvents before they are dispatched to their targets, allowing each KeyEventDispatcher to retarget the event, consume it, dispatch the event itself, or make other changes.</source>
          <target state="translated">KeyEventDispatcher는 모든 KeyEvent의 대상 지정 및 전달에서 현재 KeyboardFocusManager와 협력합니다. 현재 KeyboardFocusManager에 등록 된 KeyEventDispatcher는 대상으로 전달되기 전에 KeyEvents를 수신하여 각 KeyEventDispatcher가 이벤트 대상을 다시 지정하거나, 사용하거나, 이벤트 자체를 전달하거나, 다른 변경을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="bed31dbb99340dc18c4a0575e4637bb187d0fa64" translate="yes" xml:space="preserve">
          <source>A KeyEventPostProcessor cooperates with the current KeyboardFocusManager in the final resolution of all unconsumed KeyEvents.</source>
          <target state="translated">KeyEventPostProcessor는 사용되지 않은 모든 KeyEvents의 최종 해결에서 현재 KeyboardFocusManager와 협력합니다.</target>
        </trans-unit>
        <trans-unit id="60e283cd00d232003055cd84c668841c63a28591" translate="yes" xml:space="preserve">
          <source>A KeyEventPostProcessor cooperates with the current KeyboardFocusManager in the final resolution of all unconsumed KeyEvents. KeyEventPostProcessors registered with the current KeyboardFocusManager will receive KeyEvents after the KeyEvents have been dispatched to and handled by their targets. KeyEvents that would have been otherwise discarded because no Component in the application currently owns the focus will also be forwarded to registered KeyEventPostProcessors. This will allow applications to implement features that require global KeyEvent post-handling, such as menu shortcuts.</source>
          <target state="translated">KeyEventPostProcessor는 사용되지 않은 모든 KeyEvents의 최종 해결에서 현재 KeyboardFocusManager와 협력합니다. 현재 KeyboardFocusManager에 등록 된 KeyEventPostProcessors는 KeyEvents가 대상에 전달되고 처리 된 후 KeyEvents를 수신합니다. 응용 프로그램의 어떤 구성 요소도 현재 포커스를 소유하지 않기 때문에 삭제되었을 KeyEvents도 등록 된 KeyEventPostProcessors로 전달됩니다. 이를 통해 응용 프로그램은 메뉴 바로 가기와 같은 전역 KeyEvent 사후 처리가 필요한 기능을 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d43ddd3fd0e04d7152918c4a6544b9288fdb112" translate="yes" xml:space="preserve">
          <source>A KeyStroke represents a key action on the keyboard, or equivalent input device.</source>
          <target state="translated">KeyStroke는 키보드 또는 이에 상응하는 입력 장치의 키 동작을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="df1b8e126758b85c9a9308b975a57f80e0949491" translate="yes" xml:space="preserve">
          <source>A KeyStroke represents a key action on the keyboard, or equivalent input device. KeyStrokes can correspond to only a press or release of a particular key, just as KEY_PRESSED and KEY_RELEASED KeyEvents do; alternately, they can correspond to typing a specific Java character, just as KEY_TYPED KeyEvents do. In all cases, KeyStrokes can specify modifiers (alt, shift, control, meta, altGraph, or a combination thereof) which must be present during the action for an exact match.</source>
          <target state="translated">KeyStroke는 키보드 또는 이에 상응하는 입력 장치의 키 동작을 나타냅니다. KeyStrokes는 KEY_PRESSED 및 KEY_RELEASED KeyEvents와 마찬가지로 특정 키의 누르기 또는 놓기에만 대응할 수 있습니다. 또는 KEY_TYPED KeyEvents처럼 특정 Java 문자를 입력하는 것과 일치 할 수 있습니다. 모든 경우에 KeyStrokes는 정확한 일치를 위해 작업 중에 있어야하는 수정 자 (alt, shift, control, meta, altGraph 또는 이들의 조합)를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9cb9d5595a420716375bdc90a99c076fa50ccbc" translate="yes" xml:space="preserve">
          <source>A Latin script character (&lt;a href=&quot;#usc&quot;&gt;script&lt;/a&gt;)</source>
          <target state="translated">라틴 문자 ( &lt;a href=&quot;#usc&quot;&gt;스크립트)&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="3df86ed1a5c5d9a4c4287bba1036f7e47b615722" translate="yes" xml:space="preserve">
          <source>A LinkException instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single LinkException instance should lock the object.</source>
          <target state="translated">LinkException 인스턴스는 동시 다중 스레드 액세스와 동기화되지 않습니다. 단일 LinkException 인스턴스에 액세스하고 수정하려는 여러 스레드가 객체를 잠 가야합니다.</target>
        </trans-unit>
        <trans-unit id="b68abbabb6e97ad8331f3d5518e74f7c062df9f1" translate="yes" xml:space="preserve">
          <source>A LinkRef contains a single StringRefAddr, whose type is &quot;LinkAddress&quot;, and whose contents is the link name. The class name field of the Reference is that of this (LinkRef) class.</source>
          <target state="translated">LinkRef에는 유형이 &quot;LinkAddress&quot;이고 내용이 링크 이름 인 단일 StringRefAddr이 포함됩니다. 참조의 클래스 이름 필드는이 (LinkRef) 클래스의 클래스 이름 필드입니다.</target>
        </trans-unit>
        <trans-unit id="84f7678a14a9b51bae97ebf4cbbebc77f8fd09e2" translate="yes" xml:space="preserve">
          <source>A LinkRef instance is not synchronized against concurrent access by multiple threads. Threads that need to access a LinkRef instance concurrently should synchronize amongst themselves and provide the necessary locking.</source>
          <target state="translated">LinkRef 인스턴스는 여러 스레드의 동시 액세스와 동기화되지 않습니다. LinkRef 인스턴스에 동시에 액세스해야하는 스레드는 서로 동기화하고 필요한 잠금을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="1a22a9eae003d2fd4d91b57b9501d9c8bd8e05f4" translate="yes" xml:space="preserve">
          <source>A Locale.</source>
          <target state="translated">로케일.</target>
        </trans-unit>
        <trans-unit id="8e9450ade3577279276bfc67304338bff8c8a567" translate="yes" xml:space="preserve">
          <source>A LogManager initializes the logging configuration via the &lt;a href=&quot;#readConfiguration()&quot;&gt;&lt;code&gt;readConfiguration()&lt;/code&gt;&lt;/a&gt; method during LogManager initialization. By default, LogManager default configuration is used. The logging configuration read by LogManager must be in the &lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt;properties file&lt;/a&gt; format.</source>
          <target state="translated">LogManager는 LogManager 초기화 중에 &lt;a href=&quot;#readConfiguration()&quot;&gt; &lt;code&gt;readConfiguration()&lt;/code&gt; &lt;/a&gt; 메서드 를 통해 로깅 구성을 초기화합니다. 기본적으로 LogManager 기본 구성이 사용됩니다. LogManager에서 읽은 로깅 구성은 &lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt;속성 파일&lt;/a&gt; 형식 이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="6779005abde1a1d41736e7235a71052354ae112b" translate="yes" xml:space="preserve">
          <source>A Logger object is used to log messages for a specific system or application component.</source>
          <target state="translated">로거 개체는 특정 시스템 또는 응용 프로그램 구성 요소에 대한 메시지를 기록하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c499d734d095b4b498a4bc777509de20cc1569e0" translate="yes" xml:space="preserve">
          <source>A Logger object is used to log messages for a specific system or application component. Loggers are normally named, using a hierarchical dot-separated namespace. Logger names can be arbitrary strings, but they should normally be based on the package name or class name of the logged component, such as java.net or javax.swing. In addition it is possible to create &quot;anonymous&quot; Loggers that are not stored in the Logger namespace.</source>
          <target state="translated">로거 개체는 특정 시스템 또는 응용 프로그램 구성 요소에 대한 메시지를 기록하는 데 사용됩니다. 로거는 일반적으로 계층 적으로 점으로 구분 된 네임 스페이스를 사용하여 이름이 지정됩니다. 로거 이름은 임의의 문자열 일 수 있지만 일반적으로 java.net 또는 javax.swing과 같은 로깅 된 구성 요소의 패키지 이름 또는 클래스 이름을 기반으로해야합니다. 또한 Logger 네임 스페이스에 저장되지 않은 &quot;익명&quot;Logger를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3004083b41f7279bccf2d376054f13365417107a" translate="yes" xml:space="preserve">
          <source>A LoginContext should not be used to authenticate more than one Subject. A separate LoginContext should be used to authenticate each different Subject.</source>
          <target state="translated">LoginContext를 사용하여 둘 이상의 주제를 인증해서는 안됩니다. 각기 다른 주제를 인증하려면 별도의 LoginContext를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="d08eeb72c55f5def07e0edd5465431aea0a4bae5" translate="yes" xml:space="preserve">
          <source>A Low Level API</source>
          <target state="translated">저수준 API</target>
        </trans-unit>
        <trans-unit id="0e4bee990e5dd51f412e4e4f387a0961aa4345bb" translate="yes" xml:space="preserve">
          <source>A MAC mechanism that is based on cryptographic hash functions is referred to as HMAC. HMAC can be used with any cryptographic hash function, e.g., MD5 or SHA-1, in combination with a secret shared key. HMAC is specified in RFC 2104.</source>
          <target state="translated">암호화 해시 기능을 기반으로하는 MAC 메커니즘을 HMAC라고합니다. HMAC는 비밀 공유 키와 함께 모든 암호화 해시 기능 (예 : MD5 또는 SHA-1)과 함께 사용할 수 있습니다. HMAC는 RFC 2104에 지정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdf1d560479dc25561c05387e1a440a1e90682b9" translate="yes" xml:space="preserve">
          <source>A MAC mechanism that is based on cryptographic hash functions is referred to as HMAC. HMAC can be used with any cryptographic hash function, e.g., SHA256 or SHA384, in combination with a secret shared key. HMAC is specified in RFC 2104.</source>
          <target state="translated">암호화 해시 함수를 기반으로하는 MAC 메커니즘을 HMAC라고합니다. HMAC는 암호 공유 키와 함께 SHA256 또는 SHA384와 같은 암호화 해시 기능과 함께 사용할 수 있습니다. HMAC는 RFC 2104에 지정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a23eefafff3c08d819fbb5e313f435090a8297a6" translate="yes" xml:space="preserve">
          <source>A MAC provides a way to check the integrity of information transmitted over or stored in an unreliable medium, based on a secret key. Typically, message authentication codes are used between two parties that share a secret key in order to validate information transmitted between these parties.</source>
          <target state="translated">MAC은 비밀 키를 기반으로 신뢰할 수없는 매체로 전송되거나 신뢰할 수없는 매체에 저장된 정보의 무결성을 검사하는 방법을 제공합니다. 일반적으로 비밀 키를 공유하는 두 당사자간에 메시지 인증 코드가 사용되어 당사자간에 전송 된 정보의 유효성을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="d41c3f0b35e054811d0849376f58a811e7f00a9f" translate="yes" xml:space="preserve">
          <source>A MIDI track is an independent stream of MIDI events (time-stamped MIDI data) that can be stored along with other tracks in a standard MIDI file.</source>
          <target state="translated">MIDI 트랙은 표준 MIDI 파일에 다른 트랙과 함께 저장할 수있는 독립적 인 MIDI 이벤트 스트림 (타임 스탬프 된 MIDI 데이터)입니다.</target>
        </trans-unit>
        <trans-unit id="d2a10cf14dbd436a9cd345369966e488cc6b0cd9" translate="yes" xml:space="preserve">
          <source>A MIDI track is an independent stream of MIDI events (time-stamped MIDI data) that can be stored along with other tracks in a standard MIDI file. The MIDI specification allows only 16 channels of MIDI data, but tracks are a way to get around this limitation. A MIDI file can contain any number of tracks, each containing its own stream of up to 16 channels of MIDI data.</source>
          <target state="translated">MIDI 트랙은 표준 MIDI 파일에 다른 트랙과 함께 저장할 수있는 독립적 인 MIDI 이벤트 스트림 (타임 스탬프 된 MIDI 데이터)입니다. MIDI 사양은 16 채널의 MIDI 데이터 만 허용하지만 트랙은이 한계를 극복 할 수있는 방법입니다. MIDI 파일에는 여러 트랙이 포함될 수 있으며 각 트랙에는 최대 16 개의 MIDI 데이터 스트림이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d0adcd7942ffec4cb4b752421915de265cef59a0" translate="yes" xml:space="preserve">
          <source>A MIME Content-Type of application/x-java-serialized-object represents a graph of Java object(s) that have been made persistent.</source>
          <target state="translated">application / x-java-serialized-object의 MIME Content-Type은 지속적으로 만들어진 Java 객체의 그래프를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="38f511a1ae137bb74e5a438fa8768396bf4ae4f0" translate="yes" xml:space="preserve">
          <source>A Media object is constructed with a value which represents one of the ways in which the Media attribute can be specified.</source>
          <target state="translated">Media 객체는 Media 속성을 지정할 수있는 방법 중 하나를 나타내는 값으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="b13c27ef195bd2599009457a31387e46c3d6317f" translate="yes" xml:space="preserve">
          <source>A MenuSelectionManager owns the selection in menu hierarchy.</source>
          <target state="translated">MenuSelectionManager는 메뉴 계층 구조의 선택을 소유합니다.</target>
        </trans-unit>
        <trans-unit id="19cfdd71c28853aeb68181d5e607cc11e56ea2a2" translate="yes" xml:space="preserve">
          <source>A MessageDigest object starts out initialized. The data is processed through it using the &lt;a href=&quot;#update(byte)&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt; methods. At any point &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; can be called to reset the digest. Once all the data to be updated has been updated, one of the &lt;a href=&quot;#digest()&quot;&gt;&lt;code&gt;digest&lt;/code&gt;&lt;/a&gt; methods should be called to complete the hash computation.</source>
          <target state="translated">MessageDigest 객체는 초기화 된 상태로 시작됩니다. 데이터는 &lt;a href=&quot;#update(byte)&quot;&gt; &lt;code&gt;update&lt;/code&gt; &lt;/a&gt; 방법을 사용하여 처리됩니다 . 언제든지 &lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt; 을 호출하여 다이제스트를 재설정 할 수 있습니다. 업데이트 할 모든 데이터가 업데이트되면 &lt;a href=&quot;#digest()&quot;&gt; &lt;code&gt;digest&lt;/code&gt; &lt;/a&gt; 메서드 중 하나를 호출하여 해시 계산을 완료해야합니다.</target>
        </trans-unit>
        <trans-unit id="955576c5a5581056e12e98e515200ac2a050d292" translate="yes" xml:space="preserve">
          <source>A MessageDigest object starts out initialized. The data is processed through it using the &lt;a href=&quot;messagedigest#update-byte-&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt; methods. At any point &lt;a href=&quot;messagedigest#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; can be called to reset the digest. Once all the data to be updated has been updated, one of the &lt;a href=&quot;messagedigest#digest--&quot;&gt;&lt;code&gt;digest&lt;/code&gt;&lt;/a&gt; methods should be called to complete the hash computation.</source>
          <target state="translated">MessageDigest 객체가 초기화됩니다. 데이터는 &lt;a href=&quot;messagedigest#update-byte-&quot;&gt; &lt;code&gt;update&lt;/code&gt; &lt;/a&gt; 방법을 사용하여 처리됩니다 . 어느 시점에서든 &lt;a href=&quot;messagedigest#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt; 을 호출하여 다이제스트를 재설정 할 수 있습니다. 업데이트 할 모든 데이터가 업데이트 되면 해시 계산을 완료하기 위해 &lt;a href=&quot;messagedigest#digest--&quot;&gt; &lt;code&gt;digest&lt;/code&gt; &lt;/a&gt; 메서드 중 하나를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="760b5e67094e5d1666915b913b1ebe906a629622" translate="yes" xml:space="preserve">
          <source>A Metal L&amp;amp;F extension of BasicToolTipUI.</source>
          <target state="translated">BasicToolTipUI의 Metal L &amp;amp; F 확장입니다.</target>
        </trans-unit>
        <trans-unit id="e8be3781f7693e04538ce956a8377ac5041a0e14" translate="yes" xml:space="preserve">
          <source>A Metal L&amp;amp;F implementation of PopupMenuSeparatorUI.</source>
          <target state="translated">PopupMenuSeparatorUI의 Metal L &amp;amp; F 구현입니다.</target>
        </trans-unit>
        <trans-unit id="c3e774ebb2ddabdb4af3ae4661c351e8180b863a" translate="yes" xml:space="preserve">
          <source>A Metal L&amp;amp;F implementation of PopupMenuSeparatorUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">PopupMenuSeparatorUI의 Metal L &amp;amp; F 구현입니다. 이 구현은 &quot;결합 된&quot;보기 / 컨트롤러입니다.</target>
        </trans-unit>
        <trans-unit id="1e7532460d65efaa82224f91f9286332e436cba3" translate="yes" xml:space="preserve">
          <source>A Metal L&amp;amp;F implementation of ScrollPaneUI.</source>
          <target state="translated">ScrollPaneUI의 Metal L &amp;amp; F 구현입니다.</target>
        </trans-unit>
        <trans-unit id="1fb41a1a8a5537b8af07056ae6285b86ffa805a9" translate="yes" xml:space="preserve">
          <source>A Metal L&amp;amp;F implementation of SeparatorUI.</source>
          <target state="translated">SeparatorUI의 Metal L &amp;amp; F 구현.</target>
        </trans-unit>
        <trans-unit id="121fc4578012ff2fd48e3a89a545be23c8baafe6" translate="yes" xml:space="preserve">
          <source>A Metal L&amp;amp;F implementation of SeparatorUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">SeparatorUI의 Metal L &amp;amp; F 구현. 이 구현은 &quot;결합 된&quot;보기 / 컨트롤러입니다.</target>
        </trans-unit>
        <trans-unit id="10797e2b0052195d122ff78c9fae404da94c4e90" translate="yes" xml:space="preserve">
          <source>A Metal Look and Feel implementation of ToolBarUI.</source>
          <target state="translated">ToolBarUI의 Metal Look and Feel 구현입니다.</target>
        </trans-unit>
        <trans-unit id="f1e589b1e5c5d2fae61d29209696a8efd1be4199" translate="yes" xml:space="preserve">
          <source>A Metal Look and Feel implementation of ToolBarUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">ToolBarUI의 Metal Look and Feel 구현입니다. 이 구현은 &quot;결합 된&quot;보기 / 컨트롤러입니다.</target>
        </trans-unit>
        <trans-unit id="803d83c43dc480618586a553a4b522b5a0ec2e04" translate="yes" xml:space="preserve">
          <source>A MethodDescriptor describes a particular method that a Java Bean supports for external access from other components.</source>
          <target state="translated">MethodDescriptor는 Java Bean이 다른 구성 요소의 외부 액세스를 지원하는 특정 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="d0f804d7008af50737f94d6477754beb1010e9fb" translate="yes" xml:space="preserve">
          <source>A Model MBean implements the &lt;a href=&quot;modelmbean&quot;&gt;&lt;code&gt;ModelMBean&lt;/code&gt;&lt;/a&gt; interface. It is a &lt;a href=&quot;../dynamicmbean&quot;&gt;&lt;code&gt;DynamicMBean&lt;/code&gt;&lt;/a&gt; whose &lt;a href=&quot;../dynamicmbean#getMBeanInfo()&quot;&gt;&lt;code&gt;getMBeanInfo&lt;/code&gt;&lt;/a&gt; method returns an object implementing &lt;a href=&quot;modelmbeaninfo&quot;&gt;&lt;code&gt;ModelMBeanInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Model MBean은 &lt;a href=&quot;modelmbean&quot;&gt; &lt;code&gt;ModelMBean&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현합니다 . 그것은이다 &lt;a href=&quot;../dynamicmbean&quot;&gt; &lt;code&gt;DynamicMBean&lt;/code&gt; 를&lt;/a&gt; 그 &lt;a href=&quot;../dynamicmbean#getMBeanInfo()&quot;&gt; &lt;code&gt;getMBeanInfo&lt;/code&gt; 메소드의&lt;/a&gt; 방법을 구현하는 객체 반환 &lt;a href=&quot;modelmbeaninfo&quot;&gt; &lt;code&gt;ModelMBeanInfo&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="91d72defe3fc764893ef27e5b33b5fbfd41ea16c" translate="yes" xml:space="preserve">
          <source>A Model MBean implements the &lt;a href=&quot;modelmbean&quot;&gt;&lt;code&gt;ModelMBean&lt;/code&gt;&lt;/a&gt; interface. It is a &lt;a href=&quot;../dynamicmbean&quot;&gt;&lt;code&gt;DynamicMBean&lt;/code&gt;&lt;/a&gt; whose &lt;a href=&quot;../dynamicmbean#getMBeanInfo--&quot;&gt;&lt;code&gt;getMBeanInfo&lt;/code&gt;&lt;/a&gt; method returns an object implementing &lt;a href=&quot;modelmbeaninfo&quot;&gt;&lt;code&gt;ModelMBeanInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Model MBean은 &lt;a href=&quot;modelmbean&quot;&gt; &lt;code&gt;ModelMBean&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현합니다 . 그것은이다 &lt;a href=&quot;../dynamicmbean&quot;&gt; &lt;code&gt;DynamicMBean&lt;/code&gt; 를&lt;/a&gt; 그 &lt;a href=&quot;../dynamicmbean#getMBeanInfo--&quot;&gt; &lt;code&gt;getMBeanInfo&lt;/code&gt; 메소드의&lt;/a&gt; 방법을 구현하는 객체 반환 &lt;a href=&quot;modelmbeaninfo&quot;&gt; &lt;code&gt;ModelMBeanInfo&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5fa4459bcc5c002c0889ae2582fb13f8b72d3392" translate="yes" xml:space="preserve">
          <source>A ModificationItem instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single ModificationItem instance should lock the object.</source>
          <target state="translated">ModificationItem 인스턴스는 동시 다중 스레드 액세스와 동기화되지 않습니다. 단일 ModificationItem 인스턴스에 액세스하고 수정하려는 여러 스레드가 객체를 잠 가야합니다.</target>
        </trans-unit>
        <trans-unit id="5f24c3518d3a348a45bfe52460020ee3686cf3c7" translate="yes" xml:space="preserve">
          <source>A MouseWheelEvent object is passed to every &lt;code&gt;MouseWheelListener&lt;/code&gt; object which registered to receive the &quot;interesting&quot; mouse events using the component's &lt;code&gt;addMouseWheelListener&lt;/code&gt; method. Each such listener object gets a &lt;code&gt;MouseEvent&lt;/code&gt; containing the mouse event.</source>
          <target state="translated">MouseWheelEvent 객체는 구성 요소의 &lt;code&gt;addMouseWheelListener&lt;/code&gt; 메서드를 사용하여 &quot;흥미로운&quot;마우스 이벤트를 수신하도록 등록 된 모든 &lt;code&gt;MouseWheelListener&lt;/code&gt; 객체에 전달됩니다 . 이러한 각 리스너 객체는 마우스 이벤트를 포함 하는 &lt;code&gt;MouseEvent&lt;/code&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="749c912382df2f74f77f5f7b63be25733a99d8a9" translate="yes" xml:space="preserve">
          <source>A NameClassPair instance is not synchronized against concurrent access by multiple threads. Threads that need to access a NameClassPair concurrently should synchronize amongst themselves and provide the necessary locking.</source>
          <target state="translated">NameClassPair 인스턴스는 여러 스레드의 동시 액세스와 동기화되지 않습니다. NameClassPair에 동시에 액세스해야하는 스레드는 서로 동기화하고 필요한 잠금을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="92a4e5c819312f8959ac271f2ff97604c99409a2" translate="yes" xml:space="preserve">
          <source>A Namespace isA Attribute. One can iterate over a list of namespaces as a list of attributes. However this method returns only the list of namespaces declared on this START_ELEMENT and does not include the attributes declared on this START_ELEMENT. Returns an empty iterator if there are no namespaces.</source>
          <target state="translated">네임 스페이스는 속성입니다. 속성 목록으로 네임 스페이스 목록을 반복 할 수 있습니다. 그러나이 메소드는이 START_ELEMENT에 선언 된 네임 스페이스 목록 만 반환하고이 START_ELEMENT에 선언 된 속성은 포함하지 않습니다. 네임 스페이스가 없으면 빈 반복기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7e7295790c1a5d3bd815dd25f033a68bd2490d77" translate="yes" xml:space="preserve">
          <source>A NamingException instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single NamingException instance should lock the object.</source>
          <target state="translated">NamingException 인스턴스는 동시 다중 스레드 액세스와 동기화되지 않습니다. 단일 NamingException 인스턴스에 액세스하고 수정하려는 여러 스레드가 객체를 잠 가야합니다.</target>
        </trans-unit>
        <trans-unit id="164b36b7d4fc68ee83c3981d6470a16a12b3861e" translate="yes" xml:space="preserve">
          <source>A NamingException or null if the result code indicates success.</source>
          <target state="translated">NamingException. 결과 코드가 성공을 나타내는 경우는 null</target>
        </trans-unit>
        <trans-unit id="8f45b936b6c00effd5463dc498cdf2a68178fb76" translate="yes" xml:space="preserve">
          <source>A Number representing the value of the number parsed.</source>
          <target state="translated">파싱 ​​된 숫자의 값을 나타내는 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="7947363f410e759dec4cff244cf40fe7626b45bb" translate="yes" xml:space="preserve">
          <source>A PKIX &lt;code&gt;CertPathBuilder&lt;/code&gt; uses these parameters to &lt;a href=&quot;certpathbuilder#build(java.security.cert.CertPathParameters)&quot;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt; a &lt;code&gt;CertPath&lt;/code&gt; which has been validated according to the PKIX certification path validation algorithm.</source>
          <target state="translated">PKIX &lt;code&gt;CertPathBuilder&lt;/code&gt; 는 이러한 매개 변수를 사용 하여 PKIX 인증 경로 검증 알고리즘에 따라 검증 된 &lt;code&gt;CertPath&lt;/code&gt; 를 &lt;a href=&quot;certpathbuilder#build(java.security.cert.CertPathParameters)&quot;&gt; &lt;code&gt;build&lt;/code&gt; &lt;/a&gt; 합니다 .</target>
        </trans-unit>
        <trans-unit id="9135000054431edfc163866d6964d598cbae6906" translate="yes" xml:space="preserve">
          <source>A PKIX &lt;code&gt;CertPathBuilder&lt;/code&gt; uses these parameters to &lt;a href=&quot;certpathbuilder#build-java.security.cert.CertPathParameters-&quot;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt; a &lt;code&gt;CertPath&lt;/code&gt; which has been validated according to the PKIX certification path validation algorithm.</source>
          <target state="translated">PKIX &lt;code&gt;CertPathBuilder&lt;/code&gt; 는이 매개 변수를 사용 하여 PKIX 인증 경로 유효성 검증 알고리즘에 따라 유효성이 검증 된 &lt;code&gt;CertPath&lt;/code&gt; 를 &lt;a href=&quot;certpathbuilder#build-java.security.cert.CertPathParameters-&quot;&gt; &lt;code&gt;build&lt;/code&gt; &lt;/a&gt; 합니다 .</target>
        </trans-unit>
        <trans-unit id="1c49f7526051c142ee0dd56661e95608920ec388" translate="yes" xml:space="preserve">
          <source>A PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; uses these parameters to validate a &lt;code&gt;CertPath&lt;/code&gt; according to the PKIX certification path validation algorithm.</source>
          <target state="translated">PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; 는이 매개 변수를 사용 하여 PKIX 인증 경로 유효성 검증 알고리즘에 따라 &lt;code&gt;CertPath&lt;/code&gt; 의 유효성을 검증합니다.</target>
        </trans-unit>
        <trans-unit id="48c412dcaf046147fa71cc4a6fcbc23aa8ff0005" translate="yes" xml:space="preserve">
          <source>A PRNG &lt;code&gt;SecureRandom&lt;/code&gt; will not seed itself automatically if &lt;code&gt;setSeed&lt;/code&gt; is called before any &lt;code&gt;nextBytes&lt;/code&gt; or &lt;code&gt;reseed&lt;/code&gt; calls. The caller should make sure that the &lt;code&gt;seed&lt;/code&gt; argument contains enough entropy for the security of this &lt;code&gt;SecureRandom&lt;/code&gt;.</source>
          <target state="translated">PRNG &lt;code&gt;SecureRandom&lt;/code&gt; 은 &lt;code&gt;nextBytes&lt;/code&gt; 또는 &lt;code&gt;reseed&lt;/code&gt; 호출 전에 &lt;code&gt;setSeed&lt;/code&gt; 가 호출 되면 자동으로 시드되지 않습니다 . 호출자는 &lt;code&gt;seed&lt;/code&gt; 인수에이 &lt;code&gt;SecureRandom&lt;/code&gt; 보안을위한 충분한 엔트로피가 포함되어 있는지 확인해야합니다 .</target>
        </trans-unit>
        <trans-unit id="854617ae48663537c49b436fc3d7da84f4484169" translate="yes" xml:space="preserve">
          <source>A Pack200 file compressed with gzip can be hosted on HTTP/1.1 web servers. The deployment applications can use &quot;Accept-Encoding=pack200-gzip&quot;. This indicates to the server that the client application desires a version of the file encoded with Pack200 and further compressed with gzip. Please refer to &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/deployment/deployment-guide/pack200.html&quot;&gt;Java Deployment Guide&lt;/a&gt; for more details and techniques.</source>
          <target state="translated">gzip으로 압축 된 Pack200 파일은 HTTP / 1.1 웹 서버에서 호스팅 될 수 있습니다. 배포 응용 프로그램은 &quot;Accept-Encoding = pack200-gzip&quot;을 사용할 수 있습니다. 이것은 클라이언트 응용 프로그램이 Pack200으로 인코딩되고 gzip으로 추가로 압축 된 파일 버전을 원한다는 것을 서버에 나타냅니다. &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/deployment/deployment-guide/pack200.html&quot;&gt;Java Deployment Guide를&lt;/a&gt; 참조하십시오 자세한 내용과 기술을 위해.</target>
        </trans-unit>
        <trans-unit id="ac4cc50612cc686681e2c61b64290b6abe06eb08" translate="yes" xml:space="preserve">
          <source>A Pack200 file compressed with gzip can be hosted on HTTP/1.1 web servers. The deployment applications can use &quot;Accept-Encoding=pack200-gzip&quot;. This indicates to the server that the client application desires a version of the file encoded with Pack200 and further compressed with gzip. Please refer to the Java Deployment Guide for techniques and details.</source>
          <target state="translated">gzip으로 압축 된 Pack200 파일은 HTTP / 1.1 웹 서버에서 호스팅 할 수 있습니다. 배포 응용 프로그램은 &quot;Accept-Encoding = pack200-gzip&quot;을 사용할 수 있습니다. 이는 클라이언트 응용 프로그램이 Pack200으로 인코딩되고 gzip으로 더 압축 된 파일 버전을 원한다는 것을 서버에 나타냅니다. 기술과 세부 사항은 Java Deployment Guide를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="26b5bebd1f3102a674fcfd96ea05dcefd49708a7" translate="yes" xml:space="preserve">
          <source>A Parser for HTML Documents (actually, you can specify a DTD, but you should really only use this class with the html dtd in swing).</source>
          <target state="translated">HTML 문서 용 파서 (실제로 DTD를 지정할 수 있지만 실제로 스윙에서 html dtd와 함께이 클래스를 사용해야합니다).</target>
        </trans-unit>
        <trans-unit id="df141f22315b40619f7602dbe08b6ccd3361b66a" translate="yes" xml:space="preserve">
          <source>A Parser for HTML Documents (actually, you can specify a DTD, but you should really only use this class with the html dtd in swing). Reads an InputStream of HTML and invokes the appropriate methods in the ParserCallback class. This is the default parser used by HTMLEditorKit to parse HTML url's.</source>
          <target state="translated">HTML 문서를위한 파서 (실제로 DTD를 지정할 수 있지만 실제로 스윙에서 html dtd와 함께이 클래스를 사용해야합니다). HTML의 InputStream을 읽고 ParserCallback 클래스에서 적절한 메서드를 호출합니다. 이것은 HTML url의 구문을 분석하기 위해 HTMLEditorKit에서 사용하는 기본 구문 분석기입니다.</target>
        </trans-unit>
        <trans-unit id="84cb7411320ac8ed87b1f652e437833252a4f096" translate="yes" xml:space="preserve">
          <source>A Permission to perform actions related to MBeanServers.</source>
          <target state="translated">MBeanServer와 관련된 조치를 수행 할 수있는 권한</target>
        </trans-unit>
        <trans-unit id="5a50af10f0548cc284f1921ca0fb4100116c9960" translate="yes" xml:space="preserve">
          <source>A Permission to perform actions related to MBeanServers. The &lt;em&gt;name&lt;/em&gt; of the permission specifies the operation requested or granted by the permission. For a granted permission, it can be &lt;code&gt;*&lt;/code&gt; to allow all of the MBeanServer operations specified below. Otherwise, for a granted or requested permission, it must be one of the following:</source>
          <target state="translated">MBeanServer와 관련된 조치를 수행 할 수있는 권한 &lt;em&gt;이름&lt;/em&gt; 권한의는 작업 요청 또는 권한 부여를 지정합니다. 부여 된 허가를 들어, 할 수 있습니다 &lt;code&gt;*&lt;/code&gt; 이 아래의 모든 MBeanServer 오퍼레이션을 허용 할 수 있습니다. 그렇지 않으면 부여되거나 요청 된 권한에 대해 다음 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="1a23c34cdf952da9a88f0b4beee8c3caff55a3af" translate="yes" xml:space="preserve">
          <source>A Ping message has been received.</source>
          <target state="translated">Ping 메시지가 수신되었습니다.</target>
        </trans-unit>
        <trans-unit id="9ba3cf2463264b9d3d582745ac8e03f1e41d35e3" translate="yes" xml:space="preserve">
          <source>A Policy object is responsible for determining whether code executing in the Java runtime environment has permission to perform a security-sensitive operation.</source>
          <target state="translated">정책 개체는 Java 런타임 환경에서 실행되는 코드에 보안에 민감한 작업을 수행 할 권한이 있는지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="bab7b72d49f304e2d347eefbf65b392b3d1d5ce9" translate="yes" xml:space="preserve">
          <source>A Pong message has been received.</source>
          <target state="translated">Pong 메시지가 수신되었습니다.</target>
        </trans-unit>
        <trans-unit id="01126747f862efe506045e674ab008983953a57d" translate="yes" xml:space="preserve">
          <source>A Print Job's attribute set includes zero instances or one instance of a &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute, not more than one instance. A new &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute replaces an existing &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute, if any. In other words, &lt;code&gt;JobMessageFromOperator&lt;/code&gt; is not intended to be a history log. If it wishes, the client can detect changes to a Print Job's &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute and maintain the client's own history log of the &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute values.</source>
          <target state="translated">인쇄 작업의 속성 집합에는 인스턴스가 0 개이거나 하나 이상의 &lt;code&gt;JobMessageFromOperator&lt;/code&gt; 속성 인스턴스가 포함됩니다. 새로운 &lt;code&gt;JobMessageFromOperator&lt;/code&gt; 의 속성은 기존의 대체 &lt;code&gt;JobMessageFromOperator&lt;/code&gt; 에 있는 경우, 속성을. 즉, &lt;code&gt;JobMessageFromOperator&lt;/code&gt; 는 기록 로그가 아닙니다. 원하는 경우 클라이언트는 인쇄 작업의 &lt;code&gt;JobMessageFromOperator&lt;/code&gt; 속성 에 대한 변경 사항을 감지 하고 &lt;code&gt;JobMessageFromOperator&lt;/code&gt; 속성 값에 대한 클라이언트의 자체 기록 로그를 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="788dd3b9cb5575680ee8b91fc4a7829f040d4177" translate="yes" xml:space="preserve">
          <source>A Print Job's attribute set includes zero instances or one instance of a JobMessageFromOperator attribute, not more than one instance. A new JobMessageFromOperator attribute replaces an existing JobMessageFromOperator attribute, if any. In other words, JobMessageFromOperator is not intended to be a history log. If it wishes, the client can detect changes to a Print Job's JobMessageFromOperator attribute and maintain the client's own history log of the JobMessageFromOperator attribute values.</source>
          <target state="translated">인쇄 작업의 속성 세트에는 인스턴스가 0 개 또는 JobMessageFromOperator 속성의 인스턴스가 하나 이상 포함됩니다. 새 JobMessageFromOperator 속성이 기존 JobMessageFromOperator 속성 (있는 경우)을 대체합니다. 즉, JobMessageFromOperator는 히스토리 로그가 아닙니다. 원하는 경우 클라이언트는 인쇄 작업의 JobMessageFromOperator 속성에 대한 변경 사항을 감지하고 JobMessageFromOperator 속성 값의 클라이언트 자체 히스토리 로그를 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9bb43db8ad0625147b830d3d2525c9ce45b6fb2" translate="yes" xml:space="preserve">
          <source>A Print Service's attribute set includes zero instances or one instance of a &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute, not more than one instance. A new &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute replaces an existing &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute, if any. In other words, &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; is not intended to be a history log. If it wishes, the client can detect changes to a Print Service's &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute and maintain the client's own history log of the &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute values.</source>
          <target state="translated">인쇄 서비스의 속성 집합에는 하나 이상의 인스턴스가 아닌 &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; 속성 의 인스턴스가 없거나 하나의 인스턴스가 포함됩니다 . 새로운 &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; 의 속성은 기존의 대체 &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; 에 있는 경우, 속성을. 즉, &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; 는 기록 로그가 아닙니다. 원하는 경우 클라이언트는 인쇄 서비스의 &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; 속성 에 대한 변경 사항을 감지 하고 &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; 속성 값에 대한 클라이언트의 자체 기록 로그를 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3fbfe61d65c959def5e9c362257b887a2cb544e" translate="yes" xml:space="preserve">
          <source>A Print Service's attribute set includes zero instances or one instance of a PrinterMessageFromOperator attribute, not more than one instance. A new PrinterMessageFromOperator attribute replaces an existing PrinterMessageFromOperator attribute, if any. In other words, PrinterMessageFromOperator is not intended to be a history log. If it wishes, the client can detect changes to a Print Service's PrinterMessageFromOperator attribute and maintain the client's own history log of the PrinterMessageFromOperator attribute values.</source>
          <target state="translated">인쇄 서비스의 속성 세트에는 인스턴스가 0 개 또는 PrinterMessageFromOperator 속성의 인스턴스 하나가 포함됩니다. 새 PrinterMessageFromOperator 속성이 기존 PrinterMessageFromOperator 속성 (있는 경우)을 대체합니다. 즉, PrinterMessageFromOperator는 히스토리 로그가 아닙니다. 원하는 경우 클라이언트는 인쇄 서비스의 PrinterMessageFromOperator 속성에 대한 변경을 감지하고 PrinterMessageFromOperator 속성 값의 클라이언트 자체 히스토리 로그를 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00809d2345c35d6032f2b3d9c3d237d721951fd9" translate="yes" xml:space="preserve">
          <source>A PrintJobAttributeSet is just an &lt;a href=&quot;attributeset&quot;&gt;&lt;code&gt;AttributeSet&lt;/code&gt;&lt;/a&gt; whose constructors and mutating operations guarantee an additional invariant, namely that all attribute values in the PrintJobAttributeSet must be instances of interface &lt;a href=&quot;printjobattribute&quot;&gt;&lt;code&gt;PrintJobAttribute&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;printjobattributeset#add-javax.print.attribute.Attribute-&quot;&gt;&lt;code&gt;add(Attribute)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;printjobattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt;&lt;code&gt;&amp;gt;addAll(AttributeSet)&lt;/code&gt;&lt;/a&gt; operations are respecified below to guarantee this additional invariant.</source>
          <target state="translated">해, PrintJobAttributeSet 단지입니다 &lt;a href=&quot;attributeset&quot;&gt; &lt;code&gt;AttributeSet&lt;/code&gt; 에&lt;/a&gt; 그 생성자와 돌연변이의 조작 해, PrintJobAttributeSet의 모든 속성 값은 인터페이스의 인스턴스해야합니다 즉 것을 추가 불변 보장 &lt;a href=&quot;printjobattribute&quot;&gt; &lt;code&gt;PrintJobAttribute&lt;/code&gt; 을&lt;/a&gt; . &lt;a href=&quot;printjobattributeset#add-javax.print.attribute.Attribute-&quot;&gt; &lt;code&gt;add(Attribute)&lt;/code&gt; &lt;/a&gt; , 및 &lt;a href=&quot;printjobattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt; &lt;code&gt;&amp;gt;addAll(AttributeSet)&lt;/code&gt; &lt;/a&gt; 작업이 추가 불변을 보장하기 위해 아래 respecified된다.</target>
        </trans-unit>
        <trans-unit id="aded721603c3407f5fe76e7ae0854d15518d503d" translate="yes" xml:space="preserve">
          <source>A PrintServiceAttributeSet is just an &lt;a href=&quot;attributeset&quot;&gt;&lt;code&gt;AttributeSet&lt;/code&gt;&lt;/a&gt; whose constructors and mutating operations guarantee an additional invariant, namely that all attribute values in the PrintServiceAttributeSet must be instances of interface &lt;a href=&quot;printserviceattribute&quot;&gt;&lt;code&gt;PrintServiceAttribute&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;printserviceattributeset#add-javax.print.attribute.Attribute-&quot;&gt;&lt;code&gt;add(Attribute)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;printserviceattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt;&lt;code&gt;addAll(AttributeSet)&lt;/code&gt;&lt;/a&gt; operations are respecified below to guarantee this additional invariant.</source>
          <target state="translated">해, PrintServiceAttributeSet 단지입니다 &lt;a href=&quot;attributeset&quot;&gt; &lt;code&gt;AttributeSet&lt;/code&gt; 에&lt;/a&gt; 그 생성자와 돌연변이의 조작 해, PrintServiceAttributeSet의 모든 속성 값은 인터페이스의 인스턴스해야합니다 즉 것을 추가 불변 보장 &lt;a href=&quot;printserviceattribute&quot;&gt; &lt;code&gt;PrintServiceAttribute&lt;/code&gt; 을&lt;/a&gt; . &lt;a href=&quot;printserviceattributeset#add-javax.print.attribute.Attribute-&quot;&gt; &lt;code&gt;add(Attribute)&lt;/code&gt; &lt;/a&gt; , 및 &lt;a href=&quot;printserviceattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt; &lt;code&gt;addAll(AttributeSet)&lt;/code&gt; &lt;/a&gt; 작업이 추가 불변을 보장하기 위해 아래 respecified된다.</target>
        </trans-unit>
        <trans-unit id="d18341003dec13cb3f1d230f871b24a6e72ee60b" translate="yes" xml:space="preserve">
          <source>A PrintServiceLookup implementor is recommended to check for the SecurityManager.checkPrintJobAccess() to deny access to untrusted code. Following this recommended policy means that untrusted code may not be able to locate any print services. Downloaded applets are the most common example of untrusted code.</source>
          <target state="translated">신뢰할 수없는 코드에 대한 액세스를 거부하려면 SecurityManager.checkPrintJobAccess ()를 확인하기 위해 PrintServiceLookup 구현자가 권장됩니다. 이 권장 정책을 따르면 신뢰할 수없는 코드가 인쇄 서비스를 찾지 못할 수 있습니다. 다운로드 된 애플릿은 신뢰할 수없는 코드의 가장 일반적인 예입니다.</target>
        </trans-unit>
        <trans-unit id="e3d3b699ec44fa5cb9418453115f10cc05579590" translate="yes" xml:space="preserve">
          <source>A Properties object, never null.</source>
          <target state="translated">null이 아닌 속성 개체입니다.</target>
        </trans-unit>
        <trans-unit id="10b040397443e35ff9a1b4b3fb6ab446d6ad464b" translate="yes" xml:space="preserve">
          <source>A PropertyChangeEvent describing the vetoed change.</source>
          <target state="translated">거부 된 변경 사항을 설명하는 PropertyChangeEvent입니다.</target>
        </trans-unit>
        <trans-unit id="ab73ff36dfb487a2f44f83849e1b4b10be50fd68" translate="yes" xml:space="preserve">
          <source>A PropertyChangeEvent will be fired after the properties are read.</source>
          <target state="translated">속성을 읽은 후 PropertyChangeEvent가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="a16db4dd463f94a63a6456263d04a8f035b25366" translate="yes" xml:space="preserve">
          <source>A PropertyChangeEvent will get fired when the selection mode changes.</source>
          <target state="translated">선택 모드가 변경되면 PropertyChangeEvent가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="3e24b6e6debe053e3f9cb736a6248ea32cde627e" translate="yes" xml:space="preserve">
          <source>A PropertyChangeListener for the JSpinner itself</source>
          <target state="translated">JSpinner 자체에 대한 PropertyChangeListener</target>
        </trans-unit>
        <trans-unit id="210fdaae95a7097543fc846ccda7b63eb7c4f1e2" translate="yes" xml:space="preserve">
          <source>A PropertyDescriptor describes one property that a Java Bean exports via a pair of accessor methods.</source>
          <target state="translated">PropertyDescriptor는 Java Bean이 한 쌍의 접근 자 메소드를 통해 내보내는 하나의 특성을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="1464e97af59354fbd845d53627b8278e9c59294d" translate="yes" xml:space="preserve">
          <source>A PropertyEditor class provides support for GUIs that want to allow users to edit a property value of a given type.</source>
          <target state="translated">PropertyEditor 클래스는 사용자가 주어진 유형의 특성 값을 편집 할 수있게하려는 GUI를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="d5cf0eea0af22ebff646362d36d7efcc29d1b673" translate="yes" xml:space="preserve">
          <source>A PropertyEditor may choose to make available a full custom Component that edits its property value.</source>
          <target state="translated">PropertyEditor는 속성 값을 편집하는 전체 사용자 정의 구성 요소를 사용할 수 있도록 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc13a76e8f1c594363edc02c7a10b439d47023e5" translate="yes" xml:space="preserve">
          <source>A PropertyEditor may choose to make available a full custom Component that edits its property value. It is the responsibility of the PropertyEditor to hook itself up to its editor Component itself and to report property value changes by firing a PropertyChange event.</source>
          <target state="translated">PropertyEditor는 속성 값을 편집하는 완전한 사용자 정의 구성 요소를 사용 가능하게 할 수 있습니다. PropertyEditor는 에디터 컴포넌트 자체에 연결하고 PropertyChange 이벤트를 발생시켜 프로퍼티 값 변경을보고하는 책임이 있습니다.</target>
        </trans-unit>
        <trans-unit id="38a8e61b7acfa8c231a16d409b25ad982881fa13" translate="yes" xml:space="preserve">
          <source>A PropertyEditor may chose to make available a full custom Component that edits its property value.</source>
          <target state="translated">PropertyEditor는 속성 값을 편집하는 전체 사용자 정의 구성 요소를 사용할 수 있도록 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44ea1cd4419c757f6d11083ec4202002c7a9e613" translate="yes" xml:space="preserve">
          <source>A PropertyEditor may chose to make available a full custom Component that edits its property value. It is the responsibility of the PropertyEditor to hook itself up to its editor Component itself and to report property value changes by firing a PropertyChange event.</source>
          <target state="translated">PropertyEditor는 속성 값을 편집하는 완전한 사용자 정의 구성 요소를 제공하도록 선택할 수 있습니다. PropertyEditor는 에디터 컴포넌트 자체에 연결하고 PropertyChange 이벤트를 발생시켜 프로퍼티 값 변경을보고하는 책임이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4f2e8c8f1f59cc189f5bb0901bb99e8d1a07215" translate="yes" xml:space="preserve">
          <source>A PropertyVetoException is thrown when a proposed change to a property represents an unacceptable value.</source>
          <target state="translated">제안 된 속성 변경이 허용 할 수없는 값을 나타내는 경우 PropertyVetoException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6df0896862f9934ca74f436ed4ffa6672430f1df" translate="yes" xml:space="preserve">
          <source>A ProtectionParameter encapsulating a CallbackHandler.</source>
          <target state="translated">CallbackHandler를 캡슐화하는 ProtectionParameter</target>
        </trans-unit>
        <trans-unit id="8d0b3b6eaa138860768bfa20636e6a955c42c7d3" translate="yes" xml:space="preserve">
          <source>A QueryExp that represents the constraint. The returned object will be serialized as an instance of the non-public class  javax.management.InQueryExp.</source>
          <target state="translated">제약 조건을 나타내는 QueryExp 리턴 된 오브젝트는 비 공용 클래스 javax.management.InQueryExp의 인스턴스로 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="effc9e70adbfc6da748c614eb4be50c4cbf263aa" translate="yes" xml:space="preserve">
          <source>A QueryExp that represents the constraint. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.InQueryExp&quot;&gt; javax.management.InQueryExp&lt;/a&gt;.</source>
          <target state="translated">제약 조건을 나타내는 QueryExp입니다. 반환 된 객체는 비공개 클래스 &lt;a href=&quot;../../serialized-form#javax.management.InQueryExp&quot;&gt;javax.management.InQueryExp&lt;/a&gt; 의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="583e71a7f6e2aff967487468f384738975930ffe" translate="yes" xml:space="preserve">
          <source>A Raster defines values for pixels occupying a particular rectangular area of the plane, not necessarily including (0, 0). The rectangle, known as the Raster's bounding rectangle and available by means of the getBounds method, is defined by minX, minY, width, and height values. The minX and minY values define the coordinate of the upper left corner of the Raster. References to pixels outside of the bounding rectangle may result in an exception being thrown, or may result in references to unintended elements of the Raster's associated DataBuffer. It is the user's responsibility to avoid accessing such pixels.</source>
          <target state="translated">래스터는 반드시 (0, 0)을 포함하지 않고 평면의 특정 직사각형 영역을 차지하는 픽셀에 대한 값을 정의합니다. 래스터의 경계 사각형이라고하며 getBounds 메서드를 통해 사용할 수있는 사각형은 minX, minY, 너비 및 높이 값으로 정의됩니다. minX 및 minY 값은 Raster의 왼쪽 상단 모서리의 좌표를 정의합니다. 경계 사각형 외부의 픽셀을 참조하면 예외가 발생하거나 Raster의 관련 DataBuffer의 의도하지 않은 요소에 대한 참조가 발생할 수 있습니다. 이러한 픽셀에 액세스하지 않는 것은 사용자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="d2bd9b552fb40d834460bb85f3d834ecdc269a9b" translate="yes" xml:space="preserve">
          <source>A Raster may share a DataBuffer with another Raster either by explicit construction or by the use of the createChild and createTranslatedChild methods. Rasters created by these methods can return a reference to the Raster they were created from by means of the getParent method. For a Raster that was not constructed by means of a call to createTranslatedChild or createChild, getParent will return null.</source>
          <target state="translated">Raster는 명시 적 구성이나 createChild 및 createTranslatedChild 메서드를 사용하여 DataBuffer를 다른 Raster와 공유 할 수 있습니다. 이러한 메서드로 생성 된 래스터는 getParent 메서드를 통해 생성 된 Raster에 대한 참조를 반환 할 수 있습니다. createTranslatedChild 또는 createChild 호출을 통해 생성되지 않은 Raster의 경우 getParent는 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="52905c2d1fd8ebf284d91b93183febbbf5b93aa3" translate="yes" xml:space="preserve">
          <source>A Red-Black tree based &lt;a href=&quot;navigablemap&quot;&gt;&lt;code&gt;NavigableMap&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">레드-블랙 트리 기반 &lt;a href=&quot;navigablemap&quot;&gt; &lt;code&gt;NavigableMap&lt;/code&gt; &lt;/a&gt; 구현.</target>
        </trans-unit>
        <trans-unit id="2790240116df87dc3724e9b84e65f5cd4d285f7c" translate="yes" xml:space="preserve">
          <source>A Red-Black tree based &lt;a href=&quot;navigablemap&quot;&gt;&lt;code&gt;NavigableMap&lt;/code&gt;&lt;/a&gt; implementation. The map is sorted according to the &lt;a href=&quot;../lang/comparable&quot;&gt;natural ordering&lt;/a&gt; of its keys, or by a &lt;a href=&quot;comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; provided at map creation time, depending on which constructor is used.</source>
          <target state="translated">레드-블랙 트리 기반 &lt;a href=&quot;navigablemap&quot;&gt; &lt;code&gt;NavigableMap&lt;/code&gt; &lt;/a&gt; 구현. 맵 은 사용 된 생성자에 따라 키 의 &lt;a href=&quot;../lang/comparable&quot;&gt;자연 순서&lt;/a&gt; 에 따라 또는 맵 생성시 제공된 &lt;a href=&quot;comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt; 에 따라 정렬 됩니다.</target>
        </trans-unit>
        <trans-unit id="de24db46360a144e5972237ad65900278ca0e818" translate="yes" xml:space="preserve">
          <source>A RefAddr is contained within a Reference.</source>
          <target state="translated">RefAddr은 참조 내에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="db17f35dc3353169ebcd282698b849c67f5cfba3" translate="yes" xml:space="preserve">
          <source>A Reference also contains information to assist in creating an instance of the object to which this Reference refers. It contains the class name of that object, and the class name and location of the factory to be used to create the object. The class factory location is a space-separated list of URLs representing the class path used to load the factory. When the factory class (or any class or resource upon which it depends) needs to be loaded, each URL is used (in order) to attempt to load the class.</source>
          <target state="translated">참조에는이 참조가 참조하는 객체의 인스턴스를 만드는 데 도움이되는 정보도 포함되어 있습니다. 여기에는 해당 객체의 클래스 이름과 객체를 만드는 데 사용될 팩토리의 클래스 이름 및 위치가 포함됩니다. 클래스 팩토리 위치는 팩토리를로드하는 데 사용되는 클래스 경로를 나타내는 공백으로 구분 된 URL 목록입니다. 팩토리 클래스 (또는 그에 의존하는 클래스 또는 리소스)를로드해야 할 때, 클래스를로드하기 위해 각 URL이 (순서대로) 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8440e1f50dc257e8c791e88363c2bc8840c48660" translate="yes" xml:space="preserve">
          <source>A Reference consists of an ordered list of addresses and class information about the object being referenced. Each address in the list identifies a communications endpoint for the same conceptual object. The &quot;communications endpoint&quot; is information that indicates how to contact the object. It could be, for example, a network address, a location in memory on the local machine, another process on the same machine, etc. The order of the addresses in the list may be of significance to object factories that interpret the reference.</source>
          <target state="translated">참조는 순서가 지정된 주소 목록과 참조되는 객체에 대한 클래스 정보로 구성됩니다. 목록의 각 주소는 동일한 개념적 개체에 대한 통신 끝점을 식별합니다. &quot;통신 끝점&quot;은 개체에 연결하는 방법을 나타내는 정보입니다. 예를 들어 네트워크 주소, 로컬 시스템의 메모리 위치, 동일한 시스템의 다른 프로세스 등일 수 있습니다. 목록의 주소 순서는 참조를 해석하는 오브젝트 팩토리에 중요 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d09a0ffc22c477d525609b2de8a150f2e3869fd" translate="yes" xml:space="preserve">
          <source>A Reference instance is not synchronized against concurrent access by multiple threads. Threads that need to access a single Reference concurrently should synchronize amongst themselves and provide the necessary locking.</source>
          <target state="translated">참조 인스턴스는 여러 스레드의 동시 액세스와 동기화되지 않습니다. 단일 참조에 동시에 액세스해야하는 스레드는 서로 동기화하고 필요한 잠금을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="6db43dcfd60566c1dccf7a3e8ecca2a4da050eb1" translate="yes" xml:space="preserve">
          <source>A Reference represents a way of recording address information about objects which themselves are not directly bound to the naming system. Such objects can implement the Referenceable interface as a way for programs that use that object to determine what its Reference is. For example, when binding a object, if an object implements the Referenceable interface, getReference() can be invoked on the object to get its Reference to use for binding.</source>
          <target state="translated">참조는 이름 지정 시스템에 직접 바인딩되지 않은 객체에 대한 주소 정보를 기록하는 방법을 나타냅니다. 이러한 오브젝트는 해당 오브젝트를 사용하는 프로그램이 참조가 무엇인지 판별하는 방법으로 참조 가능 인터페이스를 구현할 수 있습니다. 예를 들어, 객체를 바인딩 할 때 객체가 Referenceable 인터페이스를 구현하면 객체에서 getReference ()를 호출하여 바인딩에 사용할 Reference를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0731039932ddf04f89aec388bc10248aa71c3293" translate="yes" xml:space="preserve">
          <source>A Reference represents a way of recording address information about objects which themselves are not directly bound to the naming system. Such objects can implement the Referenceable interface as a way for programs that use that object to determine what its Reference is. For example, when binding an object, if an object implements the Referenceable interface, getReference() can be invoked on the object to get its Reference to use for binding.</source>
          <target state="translated">참조는 이름 지정 시스템에 직접 바인딩되지 않은 객체에 대한 주소 정보를 기록하는 방법을 나타냅니다. 이러한 개체는 해당 개체를 사용하여 참조가 무엇인지 확인하는 프로그램의 방법으로 Referenceable 인터페이스를 구현할 수 있습니다. 예를 들어, 객체를 바인딩 할 때 객체가 Referenceable 인터페이스를 구현하는 경우 객체에서 getReference ()를 호출하여 바인딩에 사용할 Reference를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4264db3c7ee124c340e610e7ebefdc1a8451fa89" translate="yes" xml:space="preserve">
          <source>A RelationNotification notification is sent, its type being:</source>
          <target state="translated">RelationNotification 알림이 전송되며 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5ac61035063a73b282ef8ef40f44e455f0e65bf7" translate="yes" xml:space="preserve">
          <source>A RelationNotification, with type RELATION_BASIC_CREATION, is sent.</source>
          <target state="translated">유형이 RELATION_BASIC_CREATION 인 RelationNotification이 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="9bfca27e3cf3e160da5442cef2903f856d3a0a9d" translate="yes" xml:space="preserve">
          <source>A RelationSupport object is used internally by the Relation Service to represent simple relations (only roles, no properties or methods), with an unlimited number of roles, of any relation type.</source>
          <target state="translated">RelationSupport 오브젝트는 관계 서비스에 의해 내부적으로 사용되어 관계 유형에 관계없이 역할이 무제한 인 단순한 관계 (역할 또는 특성이없는 역할 만)를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2b5afc0ac78c2cf646952eec6da6199ce1326de0" translate="yes" xml:space="preserve">
          <source>A RelationSupport object is used internally by the Relation Service to represent simple relations (only roles, no properties or methods), with an unlimited number of roles, of any relation type. As internal representation, it is not exposed to the user.</source>
          <target state="translated">RelationSupport 오브젝트는 관계 서비스에 의해 내부적으로 사용되어 관계 유형에 관계없이 역할이 무제한 인 단순한 관계 (역할 또는 특성이없는 역할 만)를 나타냅니다. 내부 표현으로는 사용자에게 노출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b629caa896430c731614690866acaa67f23a1984" translate="yes" xml:space="preserve">
          <source>A RelationTypeSupport object implements the RelationType interface.</source>
          <target state="translated">RelationTypeSupport 객체는 RelationType 인터페이스를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="ee8b0968b179d91d5ed759fc07925e3159b47910" translate="yes" xml:space="preserve">
          <source>A RenderContext encapsulates the information needed to produce a specific rendering from a RenderableImage.</source>
          <target state="translated">RenderContext는 RenderableImage에서 특정 렌더링을 생성하는 데 필요한 정보를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="9078261ada39638a99acac9f9d32ef7fda248bd5" translate="yes" xml:space="preserve">
          <source>A RenderContext encapsulates the information needed to produce a specific rendering from a RenderableImage. It contains the area to be rendered specified in rendering-independent terms, the resolution at which the rendering is to be performed, and hints used to control the rendering process.</source>
          <target state="translated">RenderContext는 RenderableImage에서 특정 렌더링을 생성하는 데 필요한 정보를 캡슐화합니다. 렌더링에 독립적 인 용어로 지정된 렌더링 할 영역, 렌더링이 수행 될 해상도 및 렌더링 프로세스를 제어하는 ​​데 사용되는 힌트가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9dddeb4ca105c0161e9ad1fd2771bd4578b4cbed" translate="yes" xml:space="preserve">
          <source>A RenderableImage is a common interface for rendering-independent images (a notion which subsumes resolution independence).</source>
          <target state="translated">RenderableImage는 렌더링 독립 이미지 (해상도 독립성을 포함하는 개념)를위한 공통 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="3c59214ddcb483d8f48a85ae353d28a809916b68" translate="yes" xml:space="preserve">
          <source>A RenderableImage is a common interface for rendering-independent images (a notion which subsumes resolution independence). That is, images which are described and have operations applied to them independent of any specific rendering of the image. For example, a RenderableImage can be rotated and cropped in resolution-independent terms. Then, it can be rendered for various specific contexts, such as a draft preview, a high-quality screen display, or a printer, each in an optimal fashion.</source>
          <target state="translated">RenderableImage는 렌더링 독립 이미지 (해상도 독립성을 포함하는 개념)를위한 공통 인터페이스입니다. 즉, 이미지의 특정 렌더링과 관계없이 설명되고 작업이 적용되는 이미지입니다. 예를 들어, RenderableImage는 해상도에 독립적 인 용어로 회전 및자를 수 있습니다. 그런 다음 초안 미리보기, 고품질 화면 표시 또는 프린터와 같은 다양한 특정 컨텍스트에 대해 각각 최적의 방식으로 렌더링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e93dc7725a42f90d07760849bb6d6f6bbdeeac7a" translate="yes" xml:space="preserve">
          <source>A RenderedImage containing the desired output.</source>
          <target state="translated">원하는 출력을 포함하는 RenderedImage.</target>
        </trans-unit>
        <trans-unit id="79bde1b0e74701b93db9ea2bcc42075ced48b74d" translate="yes" xml:space="preserve">
          <source>A RenderedImage is returned from a RenderableImage via the createRendering() method, which takes a RenderContext. The RenderContext specifies how the RenderedImage should be constructed. Note that it is not possible to extract pixels directly from a RenderableImage.</source>
          <target state="translated">RenderedImage는 RenderContext를 취하는 createRendering () 메서드를 통해 RenderableImage에서 반환됩니다. RenderContext는 RenderedImage를 구성하는 방법을 지정합니다. RenderableImage에서 직접 픽셀을 추출하는 것은 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="93cdea27087d9b8a8a0a537fb17f4e431c836a31" translate="yes" xml:space="preserve">
          <source>A ResolveResult instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single ResolveResult instance should lock the object.</source>
          <target state="translated">ResolveResult 인스턴스는 동시 다중 스레드 액세스와 동기화되지 않습니다. 단일 ResolveResult 인스턴스에 액세스하고 수정하려는 여러 스레드가 객체를 잠 가야합니다.</target>
        </trans-unit>
        <trans-unit id="d6ace36ae9882cf1b5bf51c8fccd0fb9fe4684da" translate="yes" xml:space="preserve">
          <source>A Retention meta-annotation has effect only if the meta-annotated type is used directly for annotation. It has no effect if the meta-annotated type is used as a member type in another annotation type.</source>
          <target state="translated">보존 메타 주석은 메타 주석 유형이 주석에 직접 사용되는 경우에만 적용됩니다. 메타 주석 유형이 다른 주석 유형의 멤버 유형으로 사용되는 경우에는 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="ed104d8e87a3d8da6b36e28ccb0aec3193af8db7" translate="yes" xml:space="preserve">
          <source>A RoleInfo object summarises a role in a relation type.</source>
          <target state="translated">RoleInfo 객체는 관계 유형의 역할을 요약합니다.</target>
        </trans-unit>
        <trans-unit id="ec0a32da937a776c1063eab47ab7ca3cd55d6864" translate="yes" xml:space="preserve">
          <source>A RoleList represents a list of roles (Role objects).</source>
          <target state="translated">RoleList는 역할 목록 (역할 개체)을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="791805f3afacc64ffc2d229168541451185927aa" translate="yes" xml:space="preserve">
          <source>A RoleList represents a list of roles (Role objects). It is used as parameter when creating a relation, and when trying to set several roles in a relation (via 'setRoles()' method). It is returned as part of a RoleResult, to provide roles successfully retrieved.</source>
          <target state="translated">RoleList는 역할 목록 (역할 개체)을 나타냅니다. 관계를 작성할 때 및 관계에서 여러 역할을 설정하려고 할 때 ( 'setRoles ()'메소드를 통해) 매개 변수로 사용됩니다. 성공적으로 검색된 역할을 제공하기 위해 RoleResult의 일부로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="777446281cfb44efc3a7765d7980e9e852336293" translate="yes" xml:space="preserve">
          <source>A RoleUnresolvedList represents a list of RoleUnresolved objects, representing roles not retrieved from a relation due to a problem encountered when trying to access (read or write) the roles.</source>
          <target state="translated">RoleUnresolvedList는 역할에 액세스 (읽기 또는 쓰기) 할 때 발생하는 문제로 인해 관계에서 검색되지 않은 역할을 나타내는 RoleUnresolved 객체 목록을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7325ddd62ff36e6331d01ce341d2cf4fcf2ec099" translate="yes" xml:space="preserve">
          <source>A SAX ContentHandler that may be used to process SAX parse events (parsing transformation instructions) into a Templates object.</source>
          <target state="translated">SAX 구문 분석 이벤트 (변환 명령 구문 분석)를 Templates 객체로 처리하는 데 사용할 수있는 SAX ContentHandler입니다.</target>
        </trans-unit>
        <trans-unit id="ec7f22b21a9a2bac2d33c6eefb18ff62d0660ac4" translate="yes" xml:space="preserve">
          <source>A SAX parser must never report an XML declaration (XML 1.0, section 2.8) or a text declaration (XML 1.0, section 4.3.1) using this method.</source>
          <target state="translated">SAX 파서는이 메서드를 사용하여 XML 선언 (XML 1.0, 섹션 2.8) 또는 텍스트 선언 (XML 1.0, 섹션 4.3.1)을보고해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="288bc4bc5d2c7f142d7ecd425afbdd9da11413c7" translate="yes" xml:space="preserve">
          <source>A SAX parser should never report an XML declaration (XML 1.0, section 2.8) or a text declaration (XML 1.0, section 4.3.1) using this method.</source>
          <target state="translated">SAX 파서는이 방법을 사용하여 XML 선언 (XML 1.0, 섹션 2.8) 또는 텍스트 선언 (XML 1.0, 섹션 4.3.1)을보고해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="283f19aa4142dd07d10f92cdf68cd1663a23134a" translate="yes" xml:space="preserve">
          <source>A SQL statement is precompiled and stored in a &lt;code&gt;PreparedStatement&lt;/code&gt; object. This object can then be used to efficiently execute this statement multiple times.</source>
          <target state="translated">SQL 문은 미리 컴파일되어 &lt;code&gt;PreparedStatement&lt;/code&gt; 개체에 저장됩니다 . 그런 다음이 개체를 사용하여이 문을 여러 번 효율적으로 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f38ffe217bbbe39b23e4a9e889a3ea0ff7647bb" translate="yes" xml:space="preserve">
          <source>A SQL statement with or without IN parameters can be pre-compiled and stored in a &lt;code&gt;PreparedStatement&lt;/code&gt; object. This object can then be used to efficiently execute this statement multiple times.</source>
          <target state="translated">IN 매개 변수가 있거나없는 SQL 문은 미리 컴파일되어 &lt;code&gt;PreparedStatement&lt;/code&gt; 오브젝트에 저장 될 수 있습니다 . 그런 다음이 개체를 사용하여이 문을 여러 번 효율적으로 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbe07bcb178ca907bd1ca81ab707c31bcf66f7a6" translate="yes" xml:space="preserve">
          <source>A SSL socket must choose to operate in the client or server mode. This will determine who begins the handshaking process, as well as which messages should be sent by each party. Each connection must have one client and one server, or handshaking will not progress properly. Once the initial handshaking has started, a socket can not switch between client and server modes, even when performing renegotiations.</source>
          <target state="translated">SSL 소켓은 클라이언트 또는 서버 모드에서 작동하도록 선택해야합니다. 그러면 핸드 셰이 킹 프로세스를 시작한 사람과 각 당사자가 어떤 메시지를 보내야하는지 결정됩니다. 각 연결에는 하나의 클라이언트와 하나의 서버가 있어야합니다. 그렇지 않으면 핸드 쉐이킹이 제대로 진행되지 않습니다. 초기 핸드 쉐이킹이 시작되면 소켓은 재협상을 수행하더라도 클라이언트와 서버 모드간에 전환 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a613da8e4c6656a826823882ea40c2c07b2ade72" translate="yes" xml:space="preserve">
          <source>A START_DOCUMENT event is not required to be written to the stream. If present the attributes are written inside the appropriate XML declaration syntax</source>
          <target state="translated">START_DOCUMENT 이벤트는 스트림에 기록 할 필요가 없습니다. 존재하는 경우 속성은 적절한 XML 선언 구문 내에 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="d9343126a3fde0ac1e5e14db634f7712b994d330" translate="yes" xml:space="preserve">
          <source>A START_ELEMENT will be written by writing the name, namespaces, and attributes of the event in XML 1.0 valid syntax for START_ELEMENTs. The name is written by looking up the prefix for the namespace uri. The writer can be configured to respect prefixes of QNames. If the writer is respecting prefixes it must use the prefix set on the QName. The default behavior is to lookup the value for the prefix on the EventWriter's internal namespace context. Each attribute (if any) is written using the behavior specified in the attribute section of this table. Each namespace (if any) is written using the behavior specified in the namespace section of this table.</source>
          <target state="translated">START_ELEMENT는 START_ELEMENT에 대한 XML 1.0 유효한 구문으로 이벤트의 이름, 네임 스페이스 및 속성을 작성하여 작성됩니다. 이름은 네임 스페이스 uri의 접두사를 검색하여 작성됩니다. 작성자는 QName의 접두사를 고려하도록 구성 할 수 있습니다. 작성자가 접두사를 존중하는 경우 QName에 설정된 접두사를 사용해야합니다. 기본 동작은 EventWriter의 내부 네임 스페이스 컨텍스트에서 접두사 값을 조회하는 것입니다. 각 속성 (있는 경우)은이 표의 속성 섹션에 지정된 동작을 사용하여 작성됩니다. 각 네임 스페이스 (있는 경우)는이 표의 네임 스페이스 섹션에 지정된 동작을 사용하여 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="002e3d363e7411d3e07136d328c345b536631fcc" translate="yes" xml:space="preserve">
          <source>A SampleModel describes how samples of a Raster are stored in the primitive array elements of a DataBuffer. Samples may be stored one per data element, as in a PixelInterleavedSampleModel or BandedSampleModel, or packed several to an element, as in a SinglePixelPackedSampleModel or MultiPixelPackedSampleModel. The SampleModel is also controls whether samples are sign extended, allowing unsigned data to be stored in signed Java data types such as byte, short, and int.</source>
          <target state="translated">SampleModel은 Raster의 샘플이 DataBuffer의 기본 배열 요소에 저장되는 방법을 설명합니다. 샘플은 PixelInterleavedSampleModel 또는 BandedSampleModel에서와 같이 데이터 요소 당 하나씩 저장되거나 SinglePixelPackedSampleModel 또는 MultiPixelPackedSampleModel에서와 같이 요소에 여러 개가 패킹 될 수 있습니다. SampleModel은 또한 샘플이 부호 확장되는지 여부를 제어하여 부호없는 데이터를 byte, short 및 int와 같은 서명 된 Java 데이터 유형에 저장할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="dbb4f8e610bbe24f131ded77d36352e5f9cdd1df" translate="yes" xml:space="preserve">
          <source>A SearchControls instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single SearchControls instance should lock the object.</source>
          <target state="translated">SearchControls 인스턴스는 동시 멀티 스레드 액세스와 동기화되지 않습니다. 단일 SearchControls 인스턴스에 액세스하고 수정하려는 여러 스레드가 객체를 잠 가야합니다.</target>
        </trans-unit>
        <trans-unit id="1679714a37191663024ae5020a1a32e147d2158f" translate="yes" xml:space="preserve">
          <source>A SearchResult instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single SearchResult instance should lock the object.</source>
          <target state="translated">SearchResult 인스턴스는 동시 다중 스레드 액세스와 동기화되지 않습니다. 단일 SearchResult 인스턴스에 액세스하고 수정하려는 여러 스레드가 객체를 잠 가야합니다.</target>
        </trans-unit>
        <trans-unit id="ddc878f0525a0ae2c63096397e4b4f076e278727" translate="yes" xml:space="preserve">
          <source>A Selector and its key set are safe for use by multiple concurrent threads. Its selected-key set and cancelled-key set, however, are not.</source>
          <target state="translated">선택기 및 해당 키 세트는 여러 동시 스레드에서 사용하기에 안전합니다. 그러나 선택된 키 세트와 취소 된 키 세트는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2cfbf9afee5ca6970c51fad8addcc8b290639a32" translate="yes" xml:space="preserve">
          <source>A Selector's key set is safe for use by multiple concurrent threads. Retrieval operations from the key set do not generally block and so may overlap with new registrations that add to the set, or with the cancellation steps of selection operations that remove keys from the set. Iterators and spliterators return elements reflecting the state of the set at some point at or since the creation of the iterator/spliterator. They do not throw &lt;a href=&quot;../../util/concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">선택기의 키 세트는 여러 동시 스레드에서 사용하기에 안전합니다. 키 세트에서 검색 작업은 일반적으로 차단되지 않으므로 세트에 추가되는 새 등록 또는 세트에서 키를 제거하는 선택 작업의 취소 단계와 겹칠 수 있습니다. 반복기 및 분할기는 반복기 / 분할기 생성 시점 또는 생성 이후에 집합의 상태를 반영하는 요소를 반환합니다. &lt;a href=&quot;../../util/concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt; 은 발생하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="e00d2a48cc88debbbc8ff846e3e8b6896bb31b19" translate="yes" xml:space="preserve">
          <source>A SerialArray is not safe for use by multiple concurrent threads. If a SerialArray is to be used by more than one thread then access to the SerialArray should be controlled by appropriate synchronization.</source>
          <target state="translated">SerialArray는 여러 동시 스레드에서 사용하기에 안전하지 않습니다. SerialArray가 둘 이상의 스레드에서 사용되는 경우 적절한 동기화를 통해 SerialArray에 대한 액세스를 제어해야합니다.</target>
        </trans-unit>
        <trans-unit id="44e526f281e668fb5e09c5ab3c87140d7227ca3e" translate="yes" xml:space="preserve">
          <source>A SerialBlob is not safe for use by multiple concurrent threads. If a SerialBlob is to be used by more than one thread then access to the SerialBlob should be controlled by appropriate synchronization.</source>
          <target state="translated">SerialBlob은 여러 동시 스레드에서 사용하기에 안전하지 않습니다. SerialBlob이 둘 이상의 스레드에서 사용되는 경우 SerialBlob에 대한 액세스는 적절한 동기화를 통해 제어되어야합니다.</target>
        </trans-unit>
        <trans-unit id="dd646d03ddb105d0bac81eced4b8eb0e3ff3c917" translate="yes" xml:space="preserve">
          <source>A SerialClob is not safe for use by multiple concurrent threads. If a SerialClob is to be used by more than one thread then access to the SerialClob should be controlled by appropriate synchronization.</source>
          <target state="translated">SerialClob은 여러 동시 스레드에서 사용하기에 안전하지 않습니다. SerialClob이 둘 이상의 스레드에서 사용되는 경우 SerialClob에 대한 액세스는 적절한 동기화로 제어되어야합니다.</target>
        </trans-unit>
        <trans-unit id="81574c1043d87636a063adedeabc66f1d61ceb85" translate="yes" xml:space="preserve">
          <source>A SerialDatalink is not safe for use by multiple concurrent threads. If a SerialDatalink is to be used by more than one thread then access to the SerialDatalink should be controlled by appropriate synchronization.</source>
          <target state="translated">SerialDatalink는 여러 동시 스레드에서 사용하기에 안전하지 않습니다. SerialDatalink가 둘 이상의 스레드에서 사용되는 경우 SerialDatalink에 대한 액세스는 적절한 동기화를 통해 제어되어야합니다.</target>
        </trans-unit>
        <trans-unit id="9f3eec55f797b3747a05d13091a8e49d493d2406" translate="yes" xml:space="preserve">
          <source>A SerialJavaObject is not safe for use by multiple concurrent threads. If a SerialJavaObject is to be used by more than one thread then access to the SerialJavaObject should be controlled by appropriate synchronization.</source>
          <target state="translated">SerialJavaObject는 여러 동시 스레드에서 사용하기에 안전하지 않습니다. SerialJavaObject가 둘 이상의 스레드에서 사용되는 경우 SerialJavaObject에 대한 액세스는 적절한 동기화를 통해 제어되어야합니다.</target>
        </trans-unit>
        <trans-unit id="de69347512c9e24edad8226eeb10a28653f5fdad" translate="yes" xml:space="preserve">
          <source>A SerialRef is not safe for use by multiple concurrent threads. If a SerialRef is to be used by more than one thread then access to the SerialRef should be controlled by appropriate synchronization.</source>
          <target state="translated">SerialRef는 여러 동시 스레드에서 사용하기에 안전하지 않습니다. SerialRef가 둘 이상의 스레드에서 사용되는 경우 SerialRef에 대한 액세스는 적절한 동기화에 의해 제어되어야합니다.</target>
        </trans-unit>
        <trans-unit id="64045efc284039aa388c3d2b54ec25a5435fe1b9" translate="yes" xml:space="preserve">
          <source>A SerialStruct is not safe for use by multiple concurrent threads. If a SerialStruct is to be used by more than one thread then access to the SerialStruct should be controlled by appropriate synchronization.</source>
          <target state="translated">SerialStruct는 여러 동시 스레드에서 사용하기에 안전하지 않습니다. SerialStruct가 둘 이상의 스레드에서 사용되는 경우 SerialStruct에 대한 액세스는 적절한 동기화를 통해 제어되어야합니다.</target>
        </trans-unit>
        <trans-unit id="3f04f99687730ce27ecb80dc343284595a3a84ae" translate="yes" xml:space="preserve">
          <source>A ServerRef represents the server-side handle for a remote object implementation.</source>
          <target state="translated">ServerRef는 원격 객체 구현을위한 서버 측 핸들을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8b7dfc401c9e2278b7a452ecc6049b6c585c7a6e" translate="yes" xml:space="preserve">
          <source>A Service Provider Interface for transform and canonicalization algorithms.</source>
          <target state="translated">변환 및 정규화 알고리즘을위한 서비스 제공 업체 인터페이스.</target>
        </trans-unit>
        <trans-unit id="29f771aa9fe09756354550c2ac62170658a3b899" translate="yes" xml:space="preserve">
          <source>A ServicePermission contains a service principal name and a list of actions which specify the context the credential can be used within.</source>
          <target state="translated">ServicePermission에는 서비스 사용자 이름과 자격 증명을 사용할 수있는 컨텍스트를 지정하는 작업 목록이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ba48579f134d97906faffaf9f6e57bf973f9875" translate="yes" xml:space="preserve">
          <source>A Set-Cookie2 from request-host example for Domain=.local will be accepted, because the effective host name for the request- host is example.local, and example.local domain-matches .local.</source>
          <target state="translated">요청 호스트의 유효 호스트 이름은 example.local이고 example.local domain-matches는 .local이므로 Domain = .local에 대한 요청 호스트 예제의 Set-Cookie2가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="6895bf828873767919772735d8c4d1094678e223" translate="yes" xml:space="preserve">
          <source>A Set-Cookie2 from request-host x.foo.com for Domain=.foo.com would be accepted.</source>
          <target state="translated">Domain = .foo.com에 대한 요청 호스트 x.foo.com의 Set-Cookie2가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="6f2144bbbd723933bf48da180bed425d06939a0b" translate="yes" xml:space="preserve">
          <source>A Set-Cookie2 from request-host y.x.foo.com for Domain=.foo.com would be rejected, because H is y.x and contains a dot.</source>
          <target state="translated">H는 yx이고 점이 포함되어 있기 때문에 Domain = .foo.com에 대한 요청 호스트 yxfoo.com의 Set-Cookie2는 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="6fb58c1fb8b4e8eee8655028b90b8e904f3c7f2e" translate="yes" xml:space="preserve">
          <source>A Set-Cookie2 with Domain=.com or Domain=.com., will always be rejected, because there is no embedded dot.</source>
          <target state="translated">Domain = .com 또는 Domain = .com. 인 Set-Cookie2는 포함 된 점이 없으므로 항상 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="b858838aeabfa1457392741cd815a016065affc6" translate="yes" xml:space="preserve">
          <source>A Signature object can be used to generate and verify digital signatures.</source>
          <target state="translated">서명 개체를 사용하여 디지털 서명을 생성하고 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a93a9f1ae30f6c50f9486ccbbeaba1b1e61a03bf" translate="yes" xml:space="preserve">
          <source>A Smart Card terminal, sometimes referred to as a Smart Card Reader.</source>
          <target state="translated">스마트 카드 판독기라고도하는 스마트 카드 터미널.</target>
        </trans-unit>
        <trans-unit id="45dd47d159d4276919bf9e71ace96b84aa36c9fe" translate="yes" xml:space="preserve">
          <source>A Smart Card terminal, sometimes referred to as a Smart Card Reader. A CardTerminal object can be obtained by calling &lt;a href=&quot;cardterminals#list()&quot;&gt;CardTerminals.list()&lt;/a&gt; or &lt;a href=&quot;cardterminals#getTerminal(java.lang.String)&quot;&gt;CardTerminals.getTerminal()&lt;/a&gt;.</source>
          <target state="translated">스마트 카드 판독기라고도하는 스마트 카드 터미널. CardTerminal 객체는 &lt;a href=&quot;cardterminals#list()&quot;&gt;CardTerminals.list ()&lt;/a&gt; 또는 &lt;a href=&quot;cardterminals#getTerminal(java.lang.String)&quot;&gt;CardTerminals.getTerminal ()&lt;/a&gt; 을 호출하여 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="77a8571605263fd69eb1b488f0ad385fbdb5015f" translate="yes" xml:space="preserve">
          <source>A Smart Card with which a connection has been established.</source>
          <target state="translated">연결이 설정된 스마트 카드.</target>
        </trans-unit>
        <trans-unit id="42b8587782f713a7077049c19b38b7ff3a2fe65d" translate="yes" xml:space="preserve">
          <source>A Smart Card with which a connection has been established. Card objects are obtained by calling &lt;a href=&quot;cardterminal#connect(java.lang.String)&quot;&gt;&lt;code&gt;CardTerminal.connect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">연결이 설정된 스마트 카드. &lt;a href=&quot;cardterminal#connect(java.lang.String)&quot;&gt; &lt;code&gt;CardTerminal.connect()&lt;/code&gt; &lt;/a&gt; 를 호출하여 카드 객체를 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="a255907101cfd692c0186357164537023b4a6bbc" translate="yes" xml:space="preserve">
          <source>A Smart Card's answer-to-reset bytes.</source>
          <target state="translated">재설정에 대한 스마트 카드의 응답 바이트.</target>
        </trans-unit>
        <trans-unit id="fdd4774986903d05177ad526d61b0b11a04cf2ae" translate="yes" xml:space="preserve">
          <source>A Smart Card's answer-to-reset bytes. A Card's ATR object can be obtained by calling &lt;a href=&quot;card#getATR()&quot;&gt;Card.getATR()&lt;/a&gt;. This class does not attempt to verify that the ATR encodes a semantically valid structure.</source>
          <target state="translated">재설정에 대한 스마트 카드의 응답 바이트. Card의 ATR 객체는 &lt;a href=&quot;card#getATR()&quot;&gt;Card.getATR ()&lt;/a&gt; 을 호출하여 얻을 수 있습니다 . 이 클래스는 ATR이 의미 상 유효한 구조를 인코딩하는지 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="93d994609fb379ae52ffefc83a20c2cfde345a5e" translate="yes" xml:space="preserve">
          <source>A SortingFocusTraversalPolicy which sorts Components based on their size, position, and orientation.</source>
          <target state="translated">크기, 위치 및 방향에 따라 구성 요소를 정렬하는 SortingFocusTraversalPolicy</target>
        </trans-unit>
        <trans-unit id="53f9189199a4c22307fee1ec82d36a18c980a207" translate="yes" xml:space="preserve">
          <source>A SortingFocusTraversalPolicy which sorts Components based on their size, position, and orientation. Based on their size and position, Components are roughly categorized into rows and columns. For a Container with horizontal orientation, columns run left-to-right or right-to-left, and rows run top- to-bottom. For a Container with vertical orientation, columns run top-to- bottom and rows run left-to-right or right-to-left. See &lt;code&gt;ComponentOrientation&lt;/code&gt; for more information. All columns in a row are fully traversed before proceeding to the next row.</source>
          <target state="translated">크기, 위치 및 방향에 따라 구성 요소를 정렬하는 SortingFocusTraversalPolicy입니다. 크기와 위치에 따라 구성 요소는 대략 행과 열로 분류됩니다. 가로 방향의 컨테이너의 경우 열은 왼쪽에서 오른쪽 또는 오른쪽에서 왼쪽으로 실행되고 행은 위에서 아래로 실행됩니다. 세로 방향의 컨테이너의 경우 열은 위에서 아래로 실행되고 행은 왼쪽에서 오른쪽 또는 오른쪽에서 왼쪽으로 실행됩니다. 자세한 내용은 &lt;code&gt;ComponentOrientation&lt;/code&gt; 을 참조하십시오. 행의 모든 ​​열은 다음 행으로 진행하기 전에 완전히 순회됩니다.</target>
        </trans-unit>
        <trans-unit id="0f0f751c9f2576a082cf218b4944a0824c05d3d9" translate="yes" xml:space="preserve">
          <source>A Source object, or null if the href cannot be resolved, and the processor should try to resolve the URI itself.</source>
          <target state="translated">Source 객체 또는 href를 확인할 수없는 경우 null이며 프로세서가 URI 자체를 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="0c7d2d97ab5f9a2a4c2647296f0fc3ee7ed7f73e" translate="yes" xml:space="preserve">
          <source>A SourceLocator object, or null if none was specified.</source>
          <target state="translated">SourceLocator 개체. 지정되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="5d60c9454eec886f4519e3a8d389a6f15b69f6a8" translate="yes" xml:space="preserve">
          <source>A Spliterator also reports a set of &lt;a href=&quot;#characteristics()&quot;&gt;&lt;code&gt;characteristics()&lt;/code&gt;&lt;/a&gt; of its structure, source, and elements from among &lt;a href=&quot;#ORDERED&quot;&gt;&lt;code&gt;ORDERED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#DISTINCT&quot;&gt;&lt;code&gt;DISTINCT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#SORTED&quot;&gt;&lt;code&gt;SORTED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#NONNULL&quot;&gt;&lt;code&gt;NONNULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#IMMUTABLE&quot;&gt;&lt;code&gt;IMMUTABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#CONCURRENT&quot;&gt;&lt;code&gt;CONCURRENT&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt;. These may be employed by Spliterator clients to control, specialize or simplify computation. For example, a Spliterator for a &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; would report &lt;code&gt;SIZED&lt;/code&gt;, a Spliterator for a &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; would report &lt;code&gt;DISTINCT&lt;/code&gt;, and a Spliterator for a &lt;a href=&quot;sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; would also report &lt;code&gt;SORTED&lt;/code&gt;. Characteristics are reported as a simple unioned bit set. Some characteristics additionally constrain method behavior; for example if &lt;code&gt;ORDERED&lt;/code&gt;, traversal methods must conform to their documented ordering. New characteristics may be defined in the future, so implementors should not assign meanings to unlisted values.</source>
          <target state="translated">Spliterator 또한 집합보고 &lt;a href=&quot;#characteristics()&quot;&gt; &lt;code&gt;characteristics()&lt;/code&gt; &lt;/a&gt; 구조, 소스, 그리고 요소들 중 &lt;a href=&quot;#ORDERED&quot;&gt; &lt;code&gt;ORDERED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#DISTINCT&quot;&gt; &lt;code&gt;DISTINCT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#SORTED&quot;&gt; &lt;code&gt;SORTED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#NONNULL&quot;&gt; &lt;code&gt;NONNULL&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#IMMUTABLE&quot;&gt; &lt;code&gt;IMMUTABLE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#CONCURRENT&quot;&gt; &lt;code&gt;CONCURRENT&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#SUBSIZED&quot;&gt; &lt;code&gt;SUBSIZED&lt;/code&gt; &lt;/a&gt; . 이들은 계산을 제어, 전문화 또는 단순화하기 위해 Spliterator 클라이언트에서 사용할 수 있습니다. 예를 들어,에 대한 Spliterator &lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt; 보고 할 것 &lt;code&gt;SIZED&lt;/code&gt; 에 대한 Spliterator, &lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 보고 할 &lt;code&gt;DISTINCT&lt;/code&gt; , 그리고에 대한 Spliterator &lt;a href=&quot;sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; &lt;/a&gt; 도보고 할 것 &lt;code&gt;SORTED&lt;/code&gt; 을. 특성은 단순 유니온 비트 세트로보고됩니다. 일부 특성은 메서드 동작을 추가로 제한합니다. 예를 들어 &lt;code&gt;ORDERED&lt;/code&gt; 인 경우 순회 메서드는 문서화 된 순서를 따라야합니다. 향후 새로운 특성이 정의 될 수 있으므로 구현자는 나열되지 않은 값에 의미를 할당해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="6248ef2d830cf1c3f13c7471c9dc229c171552bb" translate="yes" xml:space="preserve">
          <source>A Spliterator also reports a set of &lt;a href=&quot;spliterator#characteristics--&quot;&gt;&lt;code&gt;characteristics()&lt;/code&gt;&lt;/a&gt; of its structure, source, and elements from among &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;ORDERED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#DISTINCT&quot;&gt;&lt;code&gt;DISTINCT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;SORTED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#NONNULL&quot;&gt;&lt;code&gt;NONNULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#IMMUTABLE&quot;&gt;&lt;code&gt;IMMUTABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#CONCURRENT&quot;&gt;&lt;code&gt;CONCURRENT&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt;. These may be employed by Spliterator clients to control, specialize or simplify computation. For example, a Spliterator for a &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; would report &lt;code&gt;SIZED&lt;/code&gt;, a Spliterator for a &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; would report &lt;code&gt;DISTINCT&lt;/code&gt;, and a Spliterator for a &lt;a href=&quot;sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; would also report &lt;code&gt;SORTED&lt;/code&gt;. Characteristics are reported as a simple unioned bit set. Some characteristics additionally constrain method behavior; for example if &lt;code&gt;ORDERED&lt;/code&gt;, traversal methods must conform to their documented ordering. New characteristics may be defined in the future, so implementors should not assign meanings to unlisted values.</source>
          <target state="translated">Spliterator 또한 집합보고 &lt;a href=&quot;spliterator#characteristics--&quot;&gt; &lt;code&gt;characteristics()&lt;/code&gt; &lt;/a&gt; 구조, 소스, 그리고 요소들 중 &lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;ORDERED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;spliterator#DISTINCT&quot;&gt; &lt;code&gt;DISTINCT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;SORTED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;spliterator#NONNULL&quot;&gt; &lt;code&gt;NONNULL&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;spliterator#IMMUTABLE&quot;&gt; &lt;code&gt;IMMUTABLE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;spliterator#CONCURRENT&quot;&gt; &lt;code&gt;CONCURRENT&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;SUBSIZED&lt;/code&gt; &lt;/a&gt; . 이는 Spliterator 클라이언트가 계산을 제어, 전문화 또는 단순화하기 위해 사용할 수 있습니다. 예를 들어,에 대한 Spliterator &lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt; 보고 할 것 &lt;code&gt;SIZED&lt;/code&gt; 에 대한 Spliterator, &lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 보고 할 &lt;code&gt;DISTINCT&lt;/code&gt; , 그리고에 대한 Spliterator &lt;a href=&quot;sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; &lt;/a&gt; 도보고 할 것 &lt;code&gt;SORTED&lt;/code&gt; 을. 특성은 단순 통합 비트 세트로보고됩니다. 일부 특성은 추가적으로 메소드 동작을 제한합니다. 예를 들어 &lt;code&gt;ORDERED&lt;/code&gt; 인 경우 순회 메소드는 문서화 된 순서를 준수해야합니다. 미래에는 새로운 특성이 정의 될 수 있으므로 구현자는 목록에없는 값에 의미를 할당해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="b367edba58ac5adb0acfdef2911c33149e7143da" translate="yes" xml:space="preserve">
          <source>A Spliterator may also partition off some of its elements (using &lt;a href=&quot;#trySplit()&quot;&gt;&lt;code&gt;trySplit()&lt;/code&gt;&lt;/a&gt;) as another Spliterator, to be used in possibly-parallel operations. Operations using a Spliterator that cannot split, or does so in a highly imbalanced or inefficient manner, are unlikely to benefit from parallelism. Traversal and splitting exhaust elements; each Spliterator is useful for only a single bulk computation.</source>
          <target state="translated">Spliterator는 병렬 연산에 사용하기 위해 다른 Spliterator로 일부 요소 ( &lt;a href=&quot;#trySplit()&quot;&gt; &lt;code&gt;trySplit()&lt;/code&gt; &lt;/a&gt; )를 분할 할 수도 있습니다. 분할 할 수 없거나 매우 불균형하거나 비효율적 인 방식으로 분할을 수행하는 분할기를 사용하는 작업은 병렬 처리의 이점을 거의 얻지 못합니다. 횡단 및 분할 배기 요소; 각 Spliterator는 단일 대량 계산에만 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d9f6a0c6465be108c334cf628409a3ad690f8f7b" translate="yes" xml:space="preserve">
          <source>A Spliterator may also partition off some of its elements (using &lt;a href=&quot;spliterator#trySplit--&quot;&gt;&lt;code&gt;trySplit()&lt;/code&gt;&lt;/a&gt;) as another Spliterator, to be used in possibly-parallel operations. Operations using a Spliterator that cannot split, or does so in a highly imbalanced or inefficient manner, are unlikely to benefit from parallelism. Traversal and splitting exhaust elements; each Spliterator is useful for only a single bulk computation.</source>
          <target state="translated">Spliterator는 &lt;a href=&quot;spliterator#trySplit--&quot;&gt; &lt;code&gt;trySplit()&lt;/code&gt; &lt;/a&gt; 사용하여 일부 요소 를 다른 Spliterator로 분할하여 병렬 작업에 사용할 수 있습니다. 분할이 불가능하거나 불균형 또는 비효율적 인 방식으로 분할기를 사용하는 작업은 병렬 처리의 이점을 얻지 못할 수 있습니다. 순회 및 분할 배기 요소; 각 Spliterator는 단일 벌크 계산에만 유용합니다.</target>
        </trans-unit>
        <trans-unit id="368447ad2a78e05e6fa041cfd6cfcca60712beff" translate="yes" xml:space="preserve">
          <source>A Spliterator may traverse elements individually (&lt;a href=&quot;#tryAdvance(java.util.function.Consumer)&quot;&gt;&lt;code&gt;tryAdvance()&lt;/code&gt;&lt;/a&gt;) or sequentially in bulk (&lt;a href=&quot;#forEachRemaining(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEachRemaining()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Spliterator 개별적 요소를 통과 할 수있다 ( &lt;a href=&quot;#tryAdvance(java.util.function.Consumer)&quot;&gt; &lt;code&gt;tryAdvance()&lt;/code&gt; &lt;/a&gt; ) 또는 순차적으로 일괄 ( &lt;a href=&quot;#forEachRemaining(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEachRemaining()&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9e6ecfecbfb5711aba7a9b40c9f235874d4a36ff" translate="yes" xml:space="preserve">
          <source>A Spliterator may traverse elements individually (&lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt;&lt;code&gt;tryAdvance()&lt;/code&gt;&lt;/a&gt;) or sequentially in bulk (&lt;a href=&quot;spliterator#forEachRemaining-java.util.function.Consumer-&quot;&gt;&lt;code&gt;forEachRemaining()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Spliterator는 요소를 개별적으로 ( &lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt; &lt;code&gt;tryAdvance()&lt;/code&gt; &lt;/a&gt; ) 또는 순차적으로 일괄 적으로 ( &lt;a href=&quot;spliterator#forEachRemaining-java.util.function.Consumer-&quot;&gt; &lt;code&gt;forEachRemaining()&lt;/code&gt; &lt;/a&gt; ) 탐색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d7d4efb72039f9c4f8f7a5d8d0153ab18c6bbe28" translate="yes" xml:space="preserve">
          <source>A Spliterator specialized for &lt;code&gt;double&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 값에 특화된 Spliterator입니다 .</target>
        </trans-unit>
        <trans-unit id="ee9833694647b182022aea939627acec11e77f90" translate="yes" xml:space="preserve">
          <source>A Spliterator specialized for &lt;code&gt;int&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 값에 특화된 Spliterator입니다 .</target>
        </trans-unit>
        <trans-unit id="d75cf90e20587284a83f9f86eeabb428d03d4edb" translate="yes" xml:space="preserve">
          <source>A Spliterator specialized for &lt;code&gt;long&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; 값에 특화된 스플리터입니다 .</target>
        </trans-unit>
        <trans-unit id="67268317020c1926976403229b9b1887973879f6" translate="yes" xml:space="preserve">
          <source>A Spliterator specialized for primitive values.</source>
          <target state="translated">프리미티브 값에 특화된 스플리터.</target>
        </trans-unit>
        <trans-unit id="ca86126b3a78cfaba2bff794833a4eed9c92e384" translate="yes" xml:space="preserve">
          <source>A Spliterator that does not report &lt;code&gt;SIZED&lt;/code&gt; as required by &lt;code&gt;SUBSIZED&lt;/code&gt; is inconsistent and no guarantees can be made about any computation using that Spliterator.</source>
          <target state="translated">보고하지 않는 Spliterator &lt;code&gt;SIZED&lt;/code&gt; 에서 요구하는 &lt;code&gt;SUBSIZED&lt;/code&gt; 은 일관성이없고 보장 Spliterator 것을 사용하는 계산에 대해 수행 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e3d62906e8da82ee77e8b2f4c0973f7fd498db04" translate="yes" xml:space="preserve">
          <source>A Spliterator that reports &lt;code&gt;SORTED&lt;/code&gt; must also report &lt;code&gt;ORDERED&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SORTED&lt;/code&gt; 를보고하는 Spliterator는 &lt;code&gt;ORDERED&lt;/code&gt; 도보고 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="05ee8b03530406302bf575aa5044154d110cfecb" translate="yes" xml:space="preserve">
          <source>A Stream Protocol Version.</source>
          <target state="translated">스트림 프로토콜 버전.</target>
        </trans-unit>
        <trans-unit id="d8cf2e470f091b5c07da8eea4c11ca61ccf46934" translate="yes" xml:space="preserve">
          <source>A String consisting of the ObjectNames separated by newlines (\n).</source>
          <target state="translated">개행 (\ n)으로 구분 된 ObjectName으로 구성된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="3903bf31aa42e6c114795cdf491dbf0aa9693f8f" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;Dialog&quot;.</source>
          <target state="translated">논리 글꼴 &quot;Dialog&quot;의 표준 패밀리 이름에 대한 문자열 상수입니다.</target>
        </trans-unit>
        <trans-unit id="0b30368c4aee17afbc6a4a4b0b74819e41ede594" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;Dialog&quot;. It is useful in Font construction to provide compile-time verification of the name.</source>
          <target state="translated">논리 글꼴 &quot;Dialog&quot;의 표준 패밀리 이름에 대한 문자열 상수입니다. 이름의 컴파일 타임 확인을 제공하는 글꼴 구성에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="f2718ae0b228c2ef8b11627c7586bdba20041b95" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;DialogInput&quot;.</source>
          <target state="translated">논리 글꼴 &quot;DialogInput&quot;의 표준 패밀리 이름에 대한 문자열 상수입니다.</target>
        </trans-unit>
        <trans-unit id="f370d094613558702ae869f997abe0955fc1a50b" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;DialogInput&quot;. It is useful in Font construction to provide compile-time verification of the name.</source>
          <target state="translated">논리 글꼴 &quot;DialogInput&quot;의 표준 패밀리 이름에 대한 문자열 상수입니다. 이름의 컴파일 타임 확인을 제공하는 글꼴 구성에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d21788d7d87c95f563cdd3e22817cfdd45783207" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;Monospaced&quot;.</source>
          <target state="translated">논리 글꼴 &quot;Monospaced&quot;의 표준 패밀리 이름에 대한 문자열 상수입니다.</target>
        </trans-unit>
        <trans-unit id="59e6387686d4fbb9048e1731fd584211e5bc1033" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;Monospaced&quot;. It is useful in Font construction to provide compile-time verification of the name.</source>
          <target state="translated">논리 글꼴 &quot;Monospaced&quot;의 표준 패밀리 이름에 대한 문자열 상수입니다. 이름의 컴파일 타임 확인을 제공하는 글꼴 구성에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="adb0d16a019ad98c65549a78060709b3c0ca6429" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;SansSerif&quot;.</source>
          <target state="translated">논리 글꼴 &quot;SansSerif&quot;의 표준 패밀리 이름에 대한 문자열 상수입니다.</target>
        </trans-unit>
        <trans-unit id="82061b16ff90e409acf21344956476d7b26d4d2a" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;SansSerif&quot;. It is useful in Font construction to provide compile-time verification of the name.</source>
          <target state="translated">논리 글꼴 &quot;SansSerif&quot;의 표준 패밀리 이름에 대한 문자열 상수입니다. 이름의 컴파일 타임 확인을 제공하는 글꼴 구성에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="dc8777c651c7eb618ad5b85e41b91d2568ef8166" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;Serif&quot;.</source>
          <target state="translated">논리 글꼴 &quot;Serif&quot;의 정식 패밀리 이름에 대한 문자열 상수입니다.</target>
        </trans-unit>
        <trans-unit id="b0155bb93a72b6201d47b316c10976ba587dcf66" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;Serif&quot;. It is useful in Font construction to provide compile-time verification of the name.</source>
          <target state="translated">논리 글꼴 &quot;Serif&quot;의 정식 패밀리 이름에 대한 문자열 상수입니다. 이름의 컴파일 타임 확인을 제공하는 글꼴 구성에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="a69696403e137dac0fd6dabe54afedd9ef18c862" translate="yes" xml:space="preserve">
          <source>A String containing the contents of the line, not including any &lt;a href=&quot;#lt&quot;&gt;line termination characters&lt;/a&gt;, or &lt;code&gt;null&lt;/code&gt; if the end of the stream has been reached</source>
          <target state="translated">&lt;a href=&quot;#lt&quot;&gt;행 종료 문자를&lt;/a&gt; 포함하지 않고 행의 내용을 포함하는 문자열 또는 스트림 끝에 도달 한 경우 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db6d1021028e3cbf16df11dca2fd2f2666ebbd60" translate="yes" xml:space="preserve">
          <source>A String containing the contents of the line, not including any line-termination characters, or null if the end of the stream has been reached</source>
          <target state="translated">행 종료 문자를 포함하지 않고 행의 내용을 포함하는 문자열이거나 스트림의 끝에 도달 한 경우 null</target>
        </trans-unit>
        <trans-unit id="87ae167984e6cc087671c105cb70aada9cb50df5" translate="yes" xml:space="preserve">
          <source>A String containing the contents of the line, not including any line-termination characters, or null if the end of the stream has been reached without reading any characters</source>
          <target state="translated">행 종료 문자를 포함하지 않고 행의 내용을 포함하는 문자열 또는 문자를 읽지 않고 스트림의 끝에 도달 한 경우 null</target>
        </trans-unit>
        <trans-unit id="8b2bdd600c04329d16ed051f51385b7261b43223" translate="yes" xml:space="preserve">
          <source>A String containing the name of the attribute.</source>
          <target state="translated">속성 이름이 포함 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="3cde810521bbbdbb0180b17cab5426000e0d4345" translate="yes" xml:space="preserve">
          <source>A String containing the resulting Base64 encoded characters</source>
          <target state="translated">결과 Base64 인코딩 문자를 포함하는 문자열</target>
        </trans-unit>
        <trans-unit id="8fe1847821681223cea518f8aa25b33656ee96f0" translate="yes" xml:space="preserve">
          <source>A String containing the type of the attribute.</source>
          <target state="translated">속성 유형을 포함하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="fd57db6a7931be2d9006628a23d2fcc5acc407dc" translate="yes" xml:space="preserve">
          <source>A String identifying this object.</source>
          <target state="translated">이 객체를 식별하는 String</target>
        </trans-unit>
        <trans-unit id="08477f881587328d65b47e64452e3918f1b048f3" translate="yes" xml:space="preserve">
          <source>A String representation of this notification.</source>
          <target state="translated">이 통지의 캐릭터 라인 표현</target>
        </trans-unit>
        <trans-unit id="c5ccd1cc097e027dc844e7f01ac67691287abb3b" translate="yes" xml:space="preserve">
          <source>A String representing the host operating system encoding. This will follow the conventions documented in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2278.txt&quot;&gt; &lt;i&gt;RFC 2278: IANA Charset Registration Procedures&lt;/i&gt;&lt;/a&gt; except where historical names are returned for compatibility with previous versions of the Java platform. The value returned from method is valid only for the VM which returns it, for use in a DocFlavor. This is the charset for all the &quot;HOST&quot; pre-defined DocFlavors in the executing VM.</source>
          <target state="translated">호스트 운영 체제 인코딩을 나타내는 문자열입니다. 이는 이전 버전의 Java 플랫폼과의 호환성을 위해 히스토리 이름이 리턴되는 경우를 제외하고 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2278.txt&quot;&gt;&lt;i&gt;RFC 2278 : IANA 문자 세트 등록 절차에&lt;/i&gt;&lt;/a&gt; 문서화 된 규칙을 따릅니다 . method에서 반환 된 값은 DocFlavor에서 사용하기 위해 VM을 반환하는 VM에만 유효합니다. 실행중인 VM에서 모든 &quot;HOST&quot;사전 정의 된 DocFlavors의 문자 집합입니다. &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="c1623ad3e0ba0f38c19e3766c7458e7310d27f8d" translate="yes" xml:space="preserve">
          <source>A SubjectDelegationPermission contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">SubjectDelegationPermission은 이름 ( &quot;대상 이름&quot;이라고도 함)을 포함하지만 조치 목록은 없습니다. 당신은 명명 된 권한이 있거나 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a50393320641aa55977e14747b2b9d9fedb6e4ab" translate="yes" xml:space="preserve">
          <source>A SubmissionPublisher uses the &lt;a href=&quot;executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; supplied in its constructor for delivery to subscribers. The best choice of Executor depends on expected usage. If the generator(s) of submitted items run in separate threads, and the number of subscribers can be estimated, consider using a &lt;a href=&quot;executors#newFixedThreadPool(int)&quot;&gt;&lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt;&lt;/a&gt;. Otherwise consider using the default, normally the &lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">SubmissionPublisher는 구독자에게 전달하기 위해 생성자에 제공된 &lt;a href=&quot;executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; 를&lt;/a&gt; 사용합니다 . Executor의 최선의 선택은 예상되는 사용량에 따라 다릅니다. 제출 된 항목의 생성기가 별도의 스레드에서 실행되고 구독자 수를 추정 할 수있는 경우 &lt;a href=&quot;executors#newFixedThreadPool(int)&quot;&gt; &lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt; &lt;/a&gt; 사용을 고려하십시오 . 그렇지 않으면 기본값, 일반적으로 &lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt; 사용을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="1c296903804a48c18c444aaf1353143c6219973a" translate="yes" xml:space="preserve">
          <source>A Swing component, but nothing else is known about it.</source>
          <target state="translated">Swing 구성 요소이지만 그것에 대해 알려진 것은 없습니다.</target>
        </trans-unit>
        <trans-unit id="d973f324cf2b66189a9c2d305928a62c0a540f2c" translate="yes" xml:space="preserve">
          <source>A SynthStyle implementation used by Nimbus.</source>
          <target state="translated">Nimbus에서 사용하는 SynthStyle 구현입니다.</target>
        </trans-unit>
        <trans-unit id="195ecfc6c24b070b2bbae61bce38bb6797ed4f1a" translate="yes" xml:space="preserve">
          <source>A SynthStyle implementation used by Nimbus. Each Region that has been registered with the NimbusLookAndFeel will have an associated NimbusStyle. Third party components that are registered with the NimbusLookAndFeel will therefore be handed a NimbusStyle from the look and feel from the #getStyle(JComponent, Region) method.</source>
          <target state="translated">Nimbus에서 사용하는 SynthStyle 구현입니다. NimbusLookAndFeel에 등록 된 각 지역에는 연결된 NimbusStyle이 있습니다. 따라서 NimbusLookAndFeel에 등록 된 타사 구성 요소에는 #getStyle (JComponent, Region) 메서드의 룩앤필에서 NimbusStyle이 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="6f5fb5f7436e1169598f89979c615e1c6b421f2b" translate="yes" xml:space="preserve">
          <source>A TabSet is comprised of many TabStops.</source>
          <target state="translated">TabSet은 많은 TabStop으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="4d2e65f1afaadf6e5b56ca96babd1e67ffc575b9" translate="yes" xml:space="preserve">
          <source>A TabSet is comprised of many TabStops. It offers methods for locating the closest TabStop to a given position and finding all the potential TabStops. It is also immutable.</source>
          <target state="translated">TabSet은 많은 TabStop으로 구성됩니다. 주어진 위치에 가장 가까운 TabStop을 찾고 잠재적 인 모든 TabStop을 찾는 방법을 제공합니다. 또한 불변입니다.</target>
        </trans-unit>
        <trans-unit id="99a0f3b7d598fe63eb79043c7f602515aefc7bf9" translate="yes" xml:space="preserve">
          <source>A Templates object capable of being used for transformation purposes, never &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">변환 목적으로 사용할 수있는 Templates 객체이며 &lt;code&gt;null&lt;/code&gt; 이 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="a0afb5034cda03fb53773a3b8b6c76d13225c26e" translate="yes" xml:space="preserve">
          <source>A Transformer object that may be used to perform a transformation in a single thread, never null.</source>
          <target state="translated">단일 스레드에서 변환을 수행하는 데 사용할 수있는 Transformer 개체이며 null이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="165121885ff7031bb1ba281672c4c781d9e0c325" translate="yes" xml:space="preserve">
          <source>A TransformerFactory instance can be used to create &lt;a href=&quot;javax/xml/transform/transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;javax/xml/transform/templates&quot;&gt;&lt;code&gt;Templates&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">TransformerFactory 인스턴스를 사용하여 &lt;a href=&quot;javax/xml/transform/transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;javax/xml/transform/templates&quot;&gt; &lt;code&gt;Templates&lt;/code&gt; &lt;/a&gt; 개체 를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="738d3ef9016284d5a4197e0c10f8c08675850a70" translate="yes" xml:space="preserve">
          <source>A TransformerFactory instance can be used to create &lt;a href=&quot;transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;templates&quot;&gt;&lt;code&gt;Templates&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">TransformerFactory 인스턴스를 사용하여 &lt;a href=&quot;transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;templates&quot;&gt; &lt;code&gt;Templates&lt;/code&gt; &lt;/a&gt; 개체 를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cab3ffd0b2890e9d3a40921261596ce362fa06cd" translate="yes" xml:space="preserve">
          <source>A TransformerHandler listens for SAX ContentHandler parse events and transforms them to a Result.</source>
          <target state="translated">TransformerHandler는 SAX ContentHandler 구문 분석 이벤트를 수신하고이를 결과로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="f03eff628fc4eb1c7d82bf513d09fea53f007eb4" translate="yes" xml:space="preserve">
          <source>A TreeSelectionModel can be configured to allow only one path (&lt;code&gt;SINGLE_TREE_SELECTION&lt;/code&gt;) a number of contiguous paths (&lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt;) or a number of discontiguous paths (&lt;code&gt;DISCONTIGUOUS_TREE_SELECTION&lt;/code&gt;). A &lt;code&gt;RowMapper&lt;/code&gt; is used to determine if TreePaths are contiguous. In the absence of a RowMapper &lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt; and &lt;code&gt;DISCONTIGUOUS_TREE_SELECTION&lt;/code&gt; behave the same, that is they allow any number of paths to be contained in the TreeSelectionModel.</source>
          <target state="translated">TreeSelectionModel은 하나의 경로 ( &lt;code&gt;SINGLE_TREE_SELECTION&lt;/code&gt; ), 여러 개의 연속 경로 ( &lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt; ) 또는 여러 개의 불연속 경로 ( &lt;code&gt;DISCONTIGUOUS_TREE_SELECTION&lt;/code&gt; ) 만 허용하도록 구성 할 수 있습니다 . &lt;code&gt;RowMapper&lt;/code&gt; 의 TreePath가 연속 있는지 확인하는 데 사용됩니다. RowMapper가없는 경우 &lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt; 및 &lt;code&gt;DISCONTIGUOUS_TREE_SELECTION&lt;/code&gt; 은 동일하게 동작합니다. 즉, TreeSelectionModel에 포함 할 수있는 경로 수에 관계없이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="46172656d648db0ec18759d51f5eabcbde6598f3" translate="yes" xml:space="preserve">
          <source>A URI equivalent to this URI, but whose path is in normal form</source>
          <target state="translated">이 URI와 동일하지만 경로가 정상적인 형식 인 URI</target>
        </trans-unit>
        <trans-unit id="a4305f044aa66375e2cc03aeddd3d88bf93aaf85" translate="yes" xml:space="preserve">
          <source>A URI for this file object.</source>
          <target state="translated">이 파일 객체의 URI입니다.</target>
        </trans-unit>
        <trans-unit id="154269b7e32c514b5b1642379b1e1117058a96da" translate="yes" xml:space="preserve">
          <source>A URI is a uniform resource</source>
          <target state="translated">URI는 균일 한 자원입니다</target>
        </trans-unit>
        <trans-unit id="9367949ffb8f452862af1ba00ea6c875ca3f9707" translate="yes" xml:space="preserve">
          <source>A URI is absolute if, and only if, it has a scheme component.</source>
          <target state="translated">URI는 구성 요소가있는 경우에만 절대적입니다.</target>
        </trans-unit>
        <trans-unit id="94345fc265e9b24959e3d1ed9134dad6dc7e8e04" translate="yes" xml:space="preserve">
          <source>A URI is opaque if, and only if, it is absolute and its scheme-specific part does not begin with a slash character ('/'). An opaque URI has a scheme, a scheme-specific part, and possibly a fragment; all other components are undefined.</source>
          <target state="translated">URI는 절대적이며 스키마 특정 부분이 슬래시 문자 ( '/')로 시작하지 않는 경우에만 불투명합니다. 불투명 한 URI에는 체계, 체계 특정 부분 및 가능하면 조각이 있습니다. 다른 모든 구성 요소는 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="da466cddbd0f1331bfef8b2b4d58d23551683564" translate="yes" xml:space="preserve">
          <source>A URI to the resource; an empty &lt;code&gt;Optional&lt;/code&gt; if the resource is not found or a URI cannot be constructed to locate the resource</source>
          <target state="translated">리소스에 대한 URI입니다. 자원을 찾을 수 없거나 자원을 찾기 위해 URI를 구성 할 수없는 경우 빈 &lt;code&gt;Optional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0e3fa5f67754d2e9848e74d28feb8d7ca0cc28c" translate="yes" xml:space="preserve">
          <source>A URI whose authority field has been parsed as a server-based authority</source>
          <target state="translated">권한 필드가 서버 기반 권한으로 구문 분석 된 URI</target>
        </trans-unit>
        <trans-unit id="2fcf4a492d36b6af7584282a3e866b529a8ee186" translate="yes" xml:space="preserve">
          <source>A URL Connection to a Java ARchive (JAR) file or an entry in a JAR file.</source>
          <target state="translated">JAR (Java ARchive) 파일 또는 JAR 파일의 항목에 대한 URL 연결</target>
        </trans-unit>
        <trans-unit id="7b36cd88efa53b8fd8140df198b49bbe4ab1f7ce" translate="yes" xml:space="preserve">
          <source>A URL can optionally specify a &quot;port&quot;, which is the port number to which the TCP connection is made on the remote host machine. If the port is not specified, the default port for the protocol is used instead. For example, the default port for &lt;code&gt;http&lt;/code&gt; is &lt;code&gt;80&lt;/code&gt;. An alternative port could be specified as:</source>
          <target state="translated">URL은 선택적으로 &quot;포트&quot;를 지정할 수 있으며, 이는 원격 호스트 시스템에서 TCP 연결이 수행되는 포트 번호입니다. 포트를 지정하지 않으면 프로토콜의 기본 포트가 대신 사용됩니다. 예를 들어 &lt;code&gt;http&lt;/code&gt; 의 기본 포트 는 &lt;code&gt;80&lt;/code&gt; 입니다. 대체 포트는 다음과 같이 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa5301852c56aba73f775bfa7a5b22d2603450d5" translate="yes" xml:space="preserve">
          <source>A URL connection can be used for input and/or output. Set the DoInput flag to true if you intend to use the URL connection for input, false if not. The default is true.</source>
          <target state="translated">입력 및 / 또는 출력에 URL 연결을 사용할 수 있습니다. 입력에 URL 연결을 사용하려면 DoInput 플래그를 true로 설정하고, 그렇지 않으면 false를 설정하십시오. 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="5244de89744fc5c25c418eba65578cda558ff54b" translate="yes" xml:space="preserve">
          <source>A URL connection can be used for input and/or output. Set the DoOutput flag to true if you intend to use the URL connection for output, false if not. The default is false.</source>
          <target state="translated">입력 및 / 또는 출력에 URL 연결을 사용할 수 있습니다. 출력에 URL 연결을 사용하려면 DoOutput 플래그를 true로 설정하고, 그렇지 않으면 false를 설정하십시오. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="8d8c5f4cb6e58fe5b76f34e8407b7e7bd29dcba8" translate="yes" xml:space="preserve">
          <source>A URL connection can be used for input and/or output. Set the doInput flag to true if you intend to use the URL connection for input, false if not. The default is true.</source>
          <target state="translated">입력 및 / 또는 출력에 URL 연결을 사용할 수 있습니다. 입력에 URL 연결을 사용하려면 doInput 플래그를 true로 설정하고 그렇지 않으면 false로 설정하십시오. 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="4910ed6e30f883b0fe7e39dcfe9293b8a7ef6ac1" translate="yes" xml:space="preserve">
          <source>A URL connection can be used for input and/or output. Set the doOutput flag to true if you intend to use the URL connection for output, false if not. The default is false.</source>
          <target state="translated">입력 및 / 또는 출력에 URL 연결을 사용할 수 있습니다. URL 연결을 출력에 사용하려면 doOutput 플래그를 true로 설정하고 그렇지 않으면 false로 설정하십시오. 기본값은 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="766c723594f236c4538ccfb762a210a591498917" translate="yes" xml:space="preserve">
          <source>A URL connection can be used for input and/or output. Setting the &lt;code&gt;doInput&lt;/code&gt; flag to &lt;code&gt;true&lt;/code&gt; indicates that the application intends to read data from the URL connection.</source>
          <target state="translated">입력 및 / 또는 출력에 URL 연결을 사용할 수 있습니다. &lt;code&gt;doInput&lt;/code&gt; 플래그를 &lt;code&gt;true&lt;/code&gt; 로 설정하면 애플리케이션이 URL 연결에서 데이터를 읽으려고 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1a7da67c471a96ebf79df397de1637daa0bc78b3" translate="yes" xml:space="preserve">
          <source>A URL connection can be used for input and/or output. Setting the &lt;code&gt;doOutput&lt;/code&gt; flag to &lt;code&gt;true&lt;/code&gt; indicates that the application intends to write data to the URL connection.</source>
          <target state="translated">입력 및 / 또는 출력에 URL 연결을 사용할 수 있습니다. &lt;code&gt;doOutput&lt;/code&gt; 플래그를 &lt;code&gt;true&lt;/code&gt; 로 설정하면 애플리케이션이 URL 연결에 데이터를 쓰려고 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1fbebfef446b244f3203c437b814094e77364922" translate="yes" xml:space="preserve">
          <source>A URL constructed from this URI</source>
          <target state="translated">이 URI로 구성된 URL</target>
        </trans-unit>
        <trans-unit id="9d10a2603b4e208793c8c68d9fdac790148d2841" translate="yes" xml:space="preserve">
          <source>A URL context for &lt;code&gt;name&lt;/code&gt; or the cached initial context. The result cannot be null.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 또는 캐시 된 초기 컨텍스트에 대한 URL 컨텍스트입니다 . 결과는 null 일 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="35e31bbbe45e6238bb463b154a7d9ec5a91fb8b1" translate="yes" xml:space="preserve">
          <source>A URL may have appended to it a &quot;fragment&quot;, also known as a &quot;ref&quot; or a &quot;reference&quot;. The fragment is indicated by the sharp sign character &quot;#&quot; followed by more characters. For example,</source>
          <target state="translated">URL에는 &quot;조각&quot;이라고도하며 &quot;ref&quot;또는 &quot;reference&quot;라고도합니다. 조각은 날카로운 기호 문자 &quot;#&quot;다음에 더 많은 문자가 표시됩니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="2039d67b96f857326c2ff123c85b3a8a95404175" translate="yes" xml:space="preserve">
          <source>A URL object representing the equivalent file URL</source>
          <target state="translated">동등한 파일 URL을 나타내는 URL 객체</target>
        </trans-unit>
        <trans-unit id="5d9699ce86879480eb18d3fbd5b85ec03b6b3614" translate="yes" xml:space="preserve">
          <source>A URL stream handler factory is used as specified in the &lt;a href=&quot;url#%3Cinit%3E(java.lang.String,java.lang.String,int,java.lang.String)&quot;&gt;URL constructor&lt;/a&gt;.</source>
          <target state="translated">URL 스트림 처리기 팩토리는 &lt;a href=&quot;url#%3Cinit%3E(java.lang.String,java.lang.String,int,java.lang.String)&quot;&gt;URL 생성자에&lt;/a&gt; 지정된대로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="c2e302f5891d1b4c08f7bcf5df80f1ab5397f165" translate="yes" xml:space="preserve">
          <source>A URL stream handler provider identifies itself with a provider-configuration file named java.net.spi.URLStreamHandlerProvider in the resource directory META-INF/services. The file should contain a list of fully-qualified concrete URL stream handler provider class names, one per line.</source>
          <target state="translated">URL 스트림 핸들러 제공자는 자원 디렉토리 META-INF / services에있는 java.net.spi.URLStreamHandlerProvider라는 제공자 구성 파일로 자신을 식별합니다. 파일에는 한 줄에 하나씩 정규화 된 구체적인 URL 스트림 처리기 공급자 클래스 이름 목록이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="e791f7fee7aedc0ed0a03c5e49fd427ae335c426" translate="yes" xml:space="preserve">
          <source>A URL stream handler provider is a concrete subclass of this class that has a zero-argument constructor. URL stream handler providers may be installed in an instance of the Java platform by adding them to the application class path.</source>
          <target state="translated">URL 스트림 핸들러 공급자는 인수가없는 생성자를 가진이 클래스의 구체적인 하위 클래스입니다. URL 스트림 처리기 공급자는 응용 프로그램 클래스 경로에 추가하여 Java 플랫폼의 인스턴스에 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa63bf2e1ce3456d75297bda8f8418e5ea88c614" translate="yes" xml:space="preserve">
          <source>A URL to the resource; &lt;code&gt;null&lt;/code&gt; if the resource could not be found, a URL could not be constructed to locate the resource, access to the resource is denied by the security manager, or there isn't a module of the given name defined to the class loader.</source>
          <target state="translated">리소스에 대한 URL. 리소스를 찾을 수 없거나 리소스를 찾기위한 URL을 구성 할 수 없거나 보안 관리자가 리소스에 대한 액세스를 거부하거나 클래스 로더에 정의 된 지정된 이름의 모듈이없는 경우 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="686d1942f27451f39cf3f8eb1804e867663d839a" translate="yes" xml:space="preserve">
          <source>A URLConnection with support for HTTP-specific features.</source>
          <target state="translated">HTTP 관련 기능을 지원하는 URLConnection입니다.</target>
        </trans-unit>
        <trans-unit id="9af20c4c1e6ff5245b9204d42ad98ee746d95004" translate="yes" xml:space="preserve">
          <source>A URLConnection with support for HTTP-specific features. See &lt;a href=&quot;http://www.w3.org/pub/WWW/Protocols/&quot;&gt; the spec &lt;/a&gt; for details.</source>
          <target state="translated">HTTP 관련 기능을 지원하는 URLConnection입니다. 자세한 내용 &lt;a href=&quot;http://www.w3.org/pub/WWW/Protocols/&quot;&gt;은 사양&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="be182296d2804d94b9a2ee18ba5793be943e43fe" translate="yes" xml:space="preserve">
          <source>A Unicode character can also be represented by using its &lt;b&gt;Hex notation&lt;/b&gt; (hexadecimal code point value) directly as described in construct &lt;code&gt;\x{...}&lt;/code&gt;, for example a supplementary character U+2011F can be specified as &lt;code&gt;\x{2011F}&lt;/code&gt;, instead of two consecutive Unicode escape sequences of the surrogate pair &lt;code&gt;\uD840&lt;/code&gt;&lt;code&gt;\uDD1F&lt;/code&gt;.</source>
          <target state="translated">유니 코드 문자는 &lt;code&gt;\x{...}&lt;/code&gt; 구문에 설명 된대로 16 &lt;b&gt;진수 표기법&lt;/b&gt; (16 진수 코드 포인트 값) 을 사용하여 직접 나타낼 수도 있습니다. 예를 들어 보조 문자 U + 2011F를 대신 &lt;code&gt;\x{2011F}&lt;/code&gt; 로 지정할 수 있습니다. 서로 게이트 쌍 두 개의 연속 유니 코드 이스케이프 시퀀스 &lt;code&gt;\uD840&lt;/code&gt; &lt;code&gt;\uDD1F&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f38ebc1a2646d495dcc65b799102891c80b966a" translate="yes" xml:space="preserve">
          <source>A Unicode character can also be represented in a regular-expression by using its &lt;b&gt;Hex notation&lt;/b&gt;(hexadecimal code point value) directly as described in construct &lt;code&gt;\x{...}&lt;/code&gt;, for example a supplementary character U+2011F can be specified as &lt;code&gt;\x{2011F}&lt;/code&gt;, instead of two consecutive Unicode escape sequences of the surrogate pair &lt;code&gt;\uD840&lt;/code&gt;&lt;code&gt;\uDD1F&lt;/code&gt;.</source>
          <target state="translated">구성 &lt;code&gt;\x{...}&lt;/code&gt; 설명 된대로 16 &lt;b&gt;진 표기법&lt;/b&gt; (16 &lt;b&gt;진&lt;/b&gt; 코드 포인트 값)을 직접 사용하여 유니 코드 문자를 정규식으로 표현할 수도 있습니다. 예를 들어 보충 문자 U + 2011F는 &lt;code&gt;\x{2011F}&lt;/code&gt; 로 지정할 수 있습니다. {2011 년} , 대신 서로 게이트 쌍의 두 개의 연속 유니 코드 이스케이프 시퀀스 &lt;code&gt;\uD840&lt;/code&gt; &lt;code&gt;\uDD1F&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eaf310432ca180b7afec132043396dd76e215fa9" translate="yes" xml:space="preserve">
          <source>A Unicode extended grapheme cluster boundary</source>
          <target state="translated">유니 코드 확장 자소 클러스터 경계</target>
        </trans-unit>
        <trans-unit id="38aae3de7952dbe48a6406151bec5cf5e28b311d" translate="yes" xml:space="preserve">
          <source>A Unicode range may have more than one set of decimal digits. If multiple decimal digits sets are specified for the same Unicode range, one of the sets will take precedence as follows.</source>
          <target state="translated">유니 코드 범위에는 둘 이상의 십진수 세트가있을 수 있습니다. 동일한 유니 코드 범위에 대해 여러 십진수 세트가 지정된 경우 세트 중 하나가 다음과 같이 우선합니다.</target>
        </trans-unit>
        <trans-unit id="d674c354c7dc403f6c1635412848be85e540fb69" translate="yes" xml:space="preserve">
          <source>A VMID is a identifier that is unique across all Java virtual machines.</source>
          <target state="translated">VMID는 모든 JVM (Java Virtual Machine)에서 고유 한 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="90196b6563f9763af14eecbb3ae5c84ae6e40d4a" translate="yes" xml:space="preserve">
          <source>A VMID is a identifier that is unique across all Java virtual machines. VMIDs are used by the distributed garbage collector to identify client VMs.</source>
          <target state="translated">VMID는 모든 JVM (Java Virtual Machine)에서 고유 한 식별자입니다. VMID는 분산 가비지 수집기에서 클라이언트 VM을 식별하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e9a3d6f9767ce3a5ff8e8a2ee12bc9bad41f8362" translate="yes" xml:space="preserve">
          <source>A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class  javax.management.BooleanValueExp.</source>
          <target state="translated">인수가 포함 된 ValueExp 객체 리턴 된 오브젝트는 비 공용 클래스 javax.management.BooleanValueExp의 인스턴스로 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="3ac069999aacbbba7fe0c87a4e7cd0b23e05b604" translate="yes" xml:space="preserve">
          <source>A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class  javax.management.NumericValueExp.</source>
          <target state="translated">인수가 포함 된 ValueExp 객체 리턴 된 오브젝트는 비 공용 클래스 javax.management.NumericValueExp의 인스턴스로 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="6466036f6be6a06d3789cc75bdde132b7fc34cd2" translate="yes" xml:space="preserve">
          <source>A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BooleanValueExp&quot;&gt; javax.management.BooleanValueExp&lt;/a&gt;.</source>
          <target state="translated">인수를 포함하는 ValueExp 개체입니다. 반환 된 객체는 비공개 클래스 &lt;a href=&quot;../../serialized-form#javax.management.BooleanValueExp&quot;&gt;javax.management.BooleanValueExp&lt;/a&gt; 의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="21ce50c2a44dda142eee93ab86df474408b2b106" translate="yes" xml:space="preserve">
          <source>A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.NumericValueExp&quot;&gt; javax.management.NumericValueExp&lt;/a&gt;.</source>
          <target state="translated">인수를 포함하는 ValueExp 개체입니다. 반환 된 객체는 비 공용 클래스 &lt;a href=&quot;../../serialized-form#javax.management.NumericValueExp&quot;&gt;javax.management.NumericValueExp&lt;/a&gt; 의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="e009f231e6128eed9dd899a26aad65683e5ff76e" translate="yes" xml:space="preserve">
          <source>A ValueExp object containing the string argument.</source>
          <target state="translated">문자열 인수를 포함하는 ValueExp 객체.</target>
        </trans-unit>
        <trans-unit id="de22c6e9990da5a49747707bdd019ef158c6a772" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the difference between two arguments. The returned object will be serialized as an instance of the non-public class  javax.management.BinaryOpValueExp with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;query#MINUS&quot;&gt;&lt;code&gt;MINUS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 인수의 차이를 나타내는 ValueExp 리턴 된 오브젝트는 &lt;code&gt;op&lt;/code&gt; 가 &lt;a href=&quot;query#MINUS&quot;&gt; &lt;code&gt;MINUS&lt;/code&gt; 인&lt;/a&gt; 비 공용 클래스 javax.management.BinaryOpValueExp의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="8c74afc32a5f7e81f815386cc19dea701c149ae0" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the difference between two arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt; javax.management.BinaryOpValueExp&lt;/a&gt; with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;#MINUS&quot;&gt;&lt;code&gt;MINUS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 인수의 차이를 나타내는 ValueExp입니다. 반환 된 객체는 &lt;a href=&quot;#MINUS&quot;&gt; &lt;code&gt;MINUS&lt;/code&gt; &lt;/a&gt; 와 동일한 &lt;code&gt;op&lt;/code&gt; 를 사용하여 public이 아닌 클래스 &lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt;javax.management.BinaryOpValueExp&lt;/a&gt; 의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="dac970aefa6859b648a0490bbf81cfc0c56fbaf3" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the product. The returned object will be serialized as an instance of the non-public class  javax.management.BinaryOpValueExp with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;query#TIMES&quot;&gt;&lt;code&gt;TIMES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">제품을 나타내는 ValueExp. 리턴 된 오브젝트는 &lt;code&gt;op&lt;/code&gt; 가 &lt;a href=&quot;query#TIMES&quot;&gt; &lt;code&gt;TIMES&lt;/code&gt; 인&lt;/a&gt; 비 공용 클래스 javax.management.BinaryOpValueExp의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="e3e2bd1be6dfba00422a2838a4d23ed7dcffc30b" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the product. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt; javax.management.BinaryOpValueExp&lt;/a&gt; with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;#TIMES&quot;&gt;&lt;code&gt;TIMES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">제품을 나타내는 ValueExp입니다. 반환 된 객체는 &lt;a href=&quot;#TIMES&quot;&gt; &lt;code&gt;TIMES&lt;/code&gt; &lt;/a&gt; 와 동일한 &lt;code&gt;op&lt;/code&gt; 를 사용하여 public이 아닌 클래스 &lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt;javax.management.BinaryOpValueExp&lt;/a&gt; 의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="fb2307ebe7608266981f5807bc8dca0e01ae2792" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the quotient of two arguments. The returned object will be serialized as an instance of the non-public class  javax.management.BinaryOpValueExp with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;query#DIV&quot;&gt;&lt;code&gt;DIV&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 인수의 몫을 나타내는 ValueExp 리턴 된 오브젝트는 &lt;code&gt;op&lt;/code&gt; 가 &lt;a href=&quot;query#DIV&quot;&gt; &lt;code&gt;DIV&lt;/code&gt; 인&lt;/a&gt; 비 공용 클래스 javax.management.BinaryOpValueExp의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="0913e6076e38486448e01405a844d0dbd00409ad" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the quotient of two arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt; javax.management.BinaryOpValueExp&lt;/a&gt; with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;#DIV&quot;&gt;&lt;code&gt;DIV&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 인수의 몫을 나타내는 ValueExp입니다. 반환 된 객체는 &lt;a href=&quot;#DIV&quot;&gt; &lt;code&gt;DIV&lt;/code&gt; &lt;/a&gt; 와 동일한 &lt;code&gt;op&lt;/code&gt; 를 사용하여 public이 아닌 클래스 &lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt;javax.management.BinaryOpValueExp&lt;/a&gt; 의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="e478ed03b6fed397fd38511cec48ee079619762f" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the sum or concatenation of the two arguments. The returned object will be serialized as an instance of the non-public class  javax.management.BinaryOpValueExp with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;query#PLUS&quot;&gt;&lt;code&gt;PLUS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 인수의 합 또는 연결을 나타내는 ValueExp 리턴 된 오브젝트는 &lt;code&gt;op&lt;/code&gt; 가 &lt;a href=&quot;query#PLUS&quot;&gt; &lt;code&gt;PLUS&lt;/code&gt; 인&lt;/a&gt; 비 공용 클래스 javax.management.BinaryOpValueExp의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="15cab161546e026ef993a9b8da56f93da01f2b44" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the sum or concatenation of the two arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt; javax.management.BinaryOpValueExp&lt;/a&gt; with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;#PLUS&quot;&gt;&lt;code&gt;PLUS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 인수의 합계 또는 연결을 나타내는 ValueExp입니다. 리턴 된 객체는 비공개 클래스의 인스턴스로서 직렬화한다 &lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt;javax.management.BinaryOpValueExp&lt;/a&gt; 함께 &lt;code&gt;op&lt;/code&gt; 동일 &lt;a href=&quot;#PLUS&quot;&gt; &lt;code&gt;PLUS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="da79d6a27b9722bcbb8eb927ed21919c37c40df7" translate="yes" xml:space="preserve">
          <source>A VarHandle can be obtained for a variable, such as a field, which is declared with Java generic types. As with the Core Reflection API, the VarHandle's variable type will be constructed from the erasure of the source-level type. When a VarHandle access mode method is invoked, the types of its arguments or the return value cast type may be generic types or type instances. If this occurs, the compiler will replace those types by their erasures when it constructs the symbolic type descriptor for the &lt;code&gt;invokevirtual&lt;/code&gt; instruction.</source>
          <target state="translated">Java 일반 유형으로 선언 된 필드와 같은 변수에 대해 VarHandle을 얻을 수 있습니다. Core Reflection API와 마찬가지로 VarHandle의 변수 유형은 소스 수준 유형의 삭제로 구성됩니다. VarHandle 액세스 모드 메서드가 호출되면 인수의 형식 또는 반환 값 캐스트 형식은 제네릭 형식 또는 형식 인스턴스 일 수 있습니다. 이 경우 컴파일러는 &lt;code&gt;invokevirtual&lt;/code&gt; 명령어에 대한 기호 유형 설명자를 구성 할 때 해당 유형을 삭제하여 대체 합니다.</target>
        </trans-unit>
        <trans-unit id="2d64337fca144335343a7688adc0906139915db5" translate="yes" xml:space="preserve">
          <source>A VarHandle has:</source>
          <target state="translated">VarHandle에는 다음이 있습니다.</target>
        </trans-unit>
        <trans-unit id="346d4362ea02fde74f598e5306bb7b843b16795e" translate="yes" xml:space="preserve">
          <source>A VarHandle is a dynamically strongly typed reference to a variable, or to a parametrically-defined family of variables, including static fields, non-static fields, array elements, or components of an off-heap data structure.</source>
          <target state="translated">VarHandle은 변수 또는 정적 필드, 비 정적 필드, 배열 요소 또는 힙을 벗어난 데이터 구조의 구성 요소를 포함하여 매개 변수로 정의 된 변수 패밀리에 대한 동적으로 강력한 형식의 참조입니다.</target>
        </trans-unit>
        <trans-unit id="de1aa02407688dae7f5153e91a6ab574a175ad64" translate="yes" xml:space="preserve">
          <source>A VarHandle is a dynamically strongly typed reference to a variable, or to a parametrically-defined family of variables, including static fields, non-static fields, array elements, or components of an off-heap data structure. Access to such variables is supported under various &lt;em&gt;access modes&lt;/em&gt;, including plain read/write access, volatile read/write access, and compare-and-set.</source>
          <target state="translated">VarHandle은 변수 또는 정적 필드, 비 정적 필드, 배열 요소 또는 힙을 벗어난 데이터 구조의 구성 요소를 포함하여 매개 변수로 정의 된 변수 패밀리에 대한 동적으로 강력한 형식의 참조입니다. 이러한 변수에 &lt;em&gt;대한 액세스&lt;/em&gt; 는 일반 읽기 / 쓰기 액세스, 휘발성 읽기 / 쓰기 액세스 및 비교 및 ​​설정을 포함한 다양한 &lt;em&gt;액세스 모드&lt;/em&gt; 에서 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="1dade9420af64edb18e50f6ed324d8bae4afc3fc" translate="yes" xml:space="preserve">
          <source>A Vector of non-source parameters, stored as arbitrary Objects.</source>
          <target state="translated">임의의 객체로 저장된 비 소스 매개 변수의 Vector입니다.</target>
        </trans-unit>
        <trans-unit id="0eaf561a3048faba6888488a8a46614e7b4a0163" translate="yes" xml:space="preserve">
          <source>A Vector of sources, stored as arbitrary Objects.</source>
          <target state="translated">임의의 객체로 저장된 소스의 Vector입니다.</target>
        </trans-unit>
        <trans-unit id="aac5e0222272bb261720ffcaaeeb78590ccfa9eb" translate="yes" xml:space="preserve">
          <source>A VetoableChange event gets fired whenever a bean changes a &quot;constrained&quot; property.</source>
          <target state="translated">Bean이 &quot;제한된&quot;특성을 변경할 때마다 VetoableChange 이벤트가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="47e1ca5f54a2d9b2109e0fe47cb06e0eeb891d55" translate="yes" xml:space="preserve">
          <source>A VetoableChange event gets fired whenever a bean changes a &quot;constrained&quot; property. You can register a VetoableChangeListener with a source bean so as to be notified of any constrained property updates.</source>
          <target state="translated">Bean이 &quot;제한된&quot;특성을 변경할 때마다 VetoableChange 이벤트가 시작됩니다. 제한된 특성 업데이트가 통지되도록 소스 Bean에 VetoableChangeListener를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f5c093ca0710ef1569a35eb50ff32a656d0bd3f" translate="yes" xml:space="preserve">
          <source>A View expresses the size that it would like to be in terms of three values, a minimum, a preferred, and a maximum span. Layout in a view is can be done independently upon each axis. For a properly functioning View implementation, the minimum span will be &amp;lt;= the preferred span which in turn will be &amp;lt;= the maximum span.</source>
          <target state="translated">View는 최소, 선호, 최대 범위의 세 가지 값으로 원하는 크기를 표현합니다. 뷰의 레이아웃은 각 축에서 독립적으로 수행 할 수 있습니다. 올바르게 작동하는 View 구현의 경우 최소 범위는 &amp;lt;= 기본 범위가되고 다시 최대 범위는 &amp;lt;=입니다.</target>
        </trans-unit>
        <trans-unit id="aeb283117ceef294fc1fa38376fad98b35fbca1c" translate="yes" xml:space="preserve">
          <source>A View that tries to flow it's children into some partially constrained space.</source>
          <target state="translated">부분적으로 제한된 공간으로 자식을 흐르게하는 뷰.</target>
        </trans-unit>
        <trans-unit id="03d9d433c2e4e3037e29a1c00df9d2571ecc9562" translate="yes" xml:space="preserve">
          <source>A View that tries to flow it's children into some partially constrained space. This can be used to build things like paragraphs, pages, etc. The flow is made up of the following pieces of functionality.</source>
          <target state="translated">부분적으로 제한된 공간으로 자식을 흐르게하는 뷰. 이것은 단락, 페이지 등과 같은 것을 구축하는 데 사용할 수 있습니다. 흐름은 다음 기능으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="a59dbcf0e5ed997449c1ca960d3cfad12429ccf0" translate="yes" xml:space="preserve">
          <source>A WebSocket Client.</source>
          <target state="translated">WebSocket 클라이언트.</target>
        </trans-unit>
        <trans-unit id="6c0caac0032d15b5cbcf0bb9f34cc7144c7ecb40" translate="yes" xml:space="preserve">
          <source>A WindowListener object is registered via &lt;code&gt;addWindowListener&lt;/code&gt;</source>
          <target state="translated">WindowListener 객체는 &lt;code&gt;addWindowListener&lt;/code&gt; 를 통해 등록됩니다.</target>
        </trans-unit>
        <trans-unit id="c20c932d676d18ddbf6f8a194924859cc6b4263d" translate="yes" xml:space="preserve">
          <source>A Windows L&amp;amp;F implementation of LabelUI.</source>
          <target state="translated">LabelUI의 Windows L &amp;amp; F 구현입니다.</target>
        </trans-unit>
        <trans-unit id="4639c9c8aed77f95dec0c260268ce49ea6b2573b" translate="yes" xml:space="preserve">
          <source>A Windows L&amp;amp;F implementation of LabelUI. This implementation is completely static, i.e. there's only one UIView implementation that's shared by all JLabel objects.</source>
          <target state="translated">LabelUI의 Windows L &amp;amp; F 구현입니다. 이 구현은 완전히 정적입니다. 즉, 모든 JLabel 객체가 공유하는 UIView 구현이 하나뿐입니다.</target>
        </trans-unit>
        <trans-unit id="6b46cfcc9ae92123b341dd696dd87a0c0c364511" translate="yes" xml:space="preserve">
          <source>A Windows L&amp;amp;F implementation of PopupMenuUI.</source>
          <target state="translated">PopupMenuUI의 Windows L &amp;amp; F 구현입니다.</target>
        </trans-unit>
        <trans-unit id="38783a10643ea6017b77fdca0ae7c524df8d5714" translate="yes" xml:space="preserve">
          <source>A Windows L&amp;amp;F implementation of PopupMenuUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">PopupMenuUI의 Windows L &amp;amp; F 구현입니다. 이 구현은 &quot;결합 된&quot;보기 / 컨트롤러입니다.</target>
        </trans-unit>
        <trans-unit id="b2aa3bd8fd31cdb2a0f7b728153dcf915cbfbbcf" translate="yes" xml:space="preserve">
          <source>A a String representation of this EventObject.</source>
          <target state="translated">이 EventObject의 String 표현입니다.</target>
        </trans-unit>
        <trans-unit id="11757ec3e3827cf92d351ba865dfed39ea1240a9" translate="yes" xml:space="preserve">
          <source>A backslash ('\') is replaced by two backslashes.</source>
          <target state="translated">백 슬래시 ( '\')는 두 개의 백 슬래시로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="d13a207d7d90fb5512d75f0c3479cc11ff6801c9" translate="yes" xml:space="preserve">
          <source>A backward focus traversal action.</source>
          <target state="translated">후방 초점 순회 동작입니다.</target>
        </trans-unit>
        <trans-unit id="cada23d86d062aa416b782b62eb17b32428f781c" translate="yes" xml:space="preserve">
          <source>A bar or palette usually composed of push buttons or toggle buttons.</source>
          <target state="translated">일반적으로 푸시 버튼 또는 토글 버튼으로 구성된 바 또는 팔레트입니다.</target>
        </trans-unit>
        <trans-unit id="a955ae175ef5ad4bc0e6ffb66794bdd6dd6a1ca8" translate="yes" xml:space="preserve">
          <source>A bar or palette usually composed of push buttons or toggle buttons. It is often used to provide the most frequently used functions for an application.</source>
          <target state="translated">일반적으로 푸시 버튼 또는 토글 버튼으로 구성된 바 또는 팔레트입니다. 응용 프로그램에서 가장 자주 사용되는 기능을 제공하는 데 자주 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b644c455a9509cb9d591b444af1a13434e31e755" translate="yes" xml:space="preserve">
          <source>A base class for &lt;code&gt;CellEditors&lt;/code&gt;, providing default implementations for the methods in the &lt;code&gt;CellEditor&lt;/code&gt; interface except &lt;code&gt;getCellEditorValue()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CellEditors&lt;/code&gt; 의 기본 클래스로 &lt;code&gt;getCellEditorValue()&lt;/code&gt; 제외하고 &lt;code&gt;CellEditor&lt;/code&gt; 인터페이스 의 메서드에 대한 기본 구현을 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="91798e6442ae977e2b893d183265edc3147c3870" translate="yes" xml:space="preserve">
          <source>A base class for &lt;code&gt;CellEditors&lt;/code&gt;, providing default implementations for the methods in the &lt;code&gt;CellEditor&lt;/code&gt; interface except &lt;code&gt;getCellEditorValue()&lt;/code&gt;. Like the other abstract implementations in Swing, also manages a list of listeners.</source>
          <target state="translated">&lt;code&gt;CellEditors&lt;/code&gt; 의 기본 클래스로 &lt;code&gt;getCellEditorValue()&lt;/code&gt; 제외하고 &lt;code&gt;CellEditor&lt;/code&gt; 인터페이스 의 메서드에 대한 기본 구현을 제공 합니다. Swing의 다른 추상 구현과 마찬가지로 리스너 목록도 관리합니다.</target>
        </trans-unit>
        <trans-unit id="455e59b9955df043ed94f5a654bafd77c5c2c54e" translate="yes" xml:space="preserve">
          <source>A base class to use in creating a look and feel for Swing.</source>
          <target state="translated">Swing의 룩앤필을 만드는 데 사용할 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="d0a9ecceee606636d10d1821b425fc447cbb76bd" translate="yes" xml:space="preserve">
          <source>A base interface that all views shall derive from.</source>
          <target state="translated">모든 뷰가 파생되는 기본 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="85a695e0a1b18958abe873386285f1bdbac52158" translate="yes" xml:space="preserve">
          <source>A base type for primitive specializations of &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; 의 기본 특수화를위한 기본 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="dee3cc77f71740db72c16054028dc7ae130310d3" translate="yes" xml:space="preserve">
          <source>A base type for primitive specializations of &lt;code&gt;Iterator&lt;/code&gt;. Specialized subtypes are provided for &lt;a href=&quot;primitiveiterator.ofint&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;primitiveiterator.oflong&quot;&gt;&lt;code&gt;long&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;primitiveiterator.ofdouble&quot;&gt;&lt;code&gt;double&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; 의 기본 특수화를위한 기본 유형입니다 . &lt;a href=&quot;primitiveiterator.ofint&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;primitiveiterator.oflong&quot;&gt; &lt;code&gt;long&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;primitiveiterator.ofdouble&quot;&gt; &lt;code&gt;double&lt;/code&gt; &lt;/a&gt; 값에 특수 하위 유형이 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="2b346f931b744f2effa3e679b4d22baf582e2493" translate="yes" xml:space="preserve">
          <source>A basic L&amp;amp;F implementation of JInternalFrame.</source>
          <target state="translated">JInternalFrame의 기본 L &amp;amp; F 구현입니다.</target>
        </trans-unit>
        <trans-unit id="03e5c62b1ef7855739731ed5053d55441ac097df" translate="yes" xml:space="preserve">
          <source>A basic file view.</source>
          <target state="translated">기본 파일보기.</target>
        </trans-unit>
        <trans-unit id="757c0088402967d24f23a8035cef98a04f349e45" translate="yes" xml:space="preserve">
          <source>A bean may have a default event typically applied when this bean is used.</source>
          <target state="translated">Bean은이 Bean이 사용될 때 일반적으로 적용되는 기본 이벤트를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2a15aefed6017824efeac0412e782440b3a0c35" translate="yes" xml:space="preserve">
          <source>A bean may have a default property commonly updated when this bean is customized.</source>
          <target state="translated">Bean은이 Bean이 사용자 정의 될 때 일반적으로 업데이트되는 기본 특성을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b273b9931986f91991a96e656bfa52cdde7293e" translate="yes" xml:space="preserve">
          <source>A bevel border UI resource.</source>
          <target state="translated">베벨 테두리 UI 리소스입니다.</target>
        </trans-unit>
        <trans-unit id="018d39cd93e976ee471a7864af5f3ac20158c282" translate="yes" xml:space="preserve">
          <source>A binary data has been received.</source>
          <target state="translated">바이너리 데이터가 수신되었습니다.</target>
        </trans-unit>
        <trans-unit id="4648940a25187a7ad9c93ab3e21a7689feb5c6d2" translate="yes" xml:space="preserve">
          <source>A binary reference address is immutable in the sense that its fields once created, cannot be replaced. However, it is possible to access the byte array used to hold the opaque buffer. Programs are strongly recommended against changing this byte array. Changes to this byte array need to be explicitly synchronized.</source>
          <target state="translated">이진 참조 주소는 필드를 만든 후에는 바꿀 수 없다는 점에서 변경할 수 없습니다. 그러나 불투명 버퍼를 보유하는 데 사용되는 바이트 배열에 액세스 할 수 있습니다. 이 바이트 배열을 변경하지 않도록 프로그램을 강력히 권장합니다. 이 바이트 배열에 대한 변경 사항은 명시 적으로 동기화해야합니다.</target>
        </trans-unit>
        <trans-unit id="b7f76763a178b32dc17af7fcf8ca87ef2efe4315" translate="yes" xml:space="preserve">
          <source>A black and white only printer must not include the &lt;code&gt;PagesPerMinuteColor&lt;/code&gt; attribute in its attribute set or service registration. If this attribute is present, then the &lt;a href=&quot;colorsupported&quot;&gt;&lt;code&gt;ColorSupported&lt;/code&gt;&lt;/a&gt; printer description attribute must also be present and have a value of &lt;code&gt;SUPPORTED&lt;/code&gt;.</source>
          <target state="translated">흑백 전용 프린터는 속성 집합 또는 서비스 등록에 &lt;code&gt;PagesPerMinuteColor&lt;/code&gt; 속성을 포함하지 않아야합니다 . 이 속성이있는 경우 &lt;a href=&quot;colorsupported&quot;&gt; &lt;code&gt;ColorSupported&lt;/code&gt; &lt;/a&gt; 프린터 설명 속성도 있어야하며 &lt;code&gt;SUPPORTED&lt;/code&gt; 값을 가져야합니다 .</target>
        </trans-unit>
        <trans-unit id="28756260cab42ed3fc29c2fd2d2d202118fb38c6" translate="yes" xml:space="preserve">
          <source>A black and white only printer must not include the PagesPerMinuteColor attribute in its attribute set or service registration. If this attribute is present, then the &lt;a href=&quot;colorsupported&quot;&gt;&lt;code&gt;ColorSupported&lt;/code&gt;&lt;/a&gt; printer description attribute must also be present and have a value of SUPPORTED.</source>
          <target state="translated">흑백 전용 프린터는 속성 세트 또는 서비스 등록에 PagesPerMinuteColor 속성을 포함하지 않아야합니다. 이 속성이 있으면 &lt;a href=&quot;colorsupported&quot;&gt; &lt;code&gt;ColorSupported&lt;/code&gt; &lt;/a&gt; 프린터 설명 속성도 존재해야하며 SUPPORTED 값을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="53259515a896c061e25a9ed15f463634c03f56e2" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether the concrete subclass supports the standard metadata format, set via the constructor.</source>
          <target state="translated">구체적 하위 클래스가 생성자를 통해 설정된 표준 메타 데이터 형식을 지원하는지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="d9477ca049b88489d2b38149a23433afe1bc4eed" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether this plug-in supports the standard metadata format for image metadata, initially &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 플러그인이 이미지 메타 데이터에 대한 표준 메타 데이터 형식을 지원하는지 여부를 나타내는 부울 (처음 &lt;code&gt;false&lt;/code&gt; ) 입니다.</target>
        </trans-unit>
        <trans-unit id="b83ab706b6e17d09a40ff25d34c822ad27c15d07" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether this plug-in supports the standard metadata format for stream metadata, initially &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 플러그인이 스트림 메타 데이터에 대한 표준 메타 데이터 형식을 지원하는지 여부를 나타내는 부울 (처음 &lt;code&gt;false&lt;/code&gt; ) 입니다.</target>
        </trans-unit>
        <trans-unit id="586dc302c71cd147bbd0eb1bda6c4463b2e7b5ff" translate="yes" xml:space="preserve">
          <source>A border layout lays out a container, arranging and resizing its components to fit in five regions: north, south, east, west, and center.</source>
          <target state="translated">테두리 레이아웃은 컨테이너를 배치하고 구성 요소를 북쪽, 남쪽, 동쪽, 서쪽 및 중앙의 5 개 영역에 맞게 배열하고 크기를 조정합니다.</target>
        </trans-unit>
        <trans-unit id="c8e83443a66028005dedb3435b96388107b471da" translate="yes" xml:space="preserve">
          <source>A border layout lays out a container, arranging and resizing its components to fit in five regions: north, south, east, west, and center. Each region may contain no more than one component, and is identified by a corresponding constant: &lt;code&gt;NORTH&lt;/code&gt;, &lt;code&gt;SOUTH&lt;/code&gt;, &lt;code&gt;EAST&lt;/code&gt;, &lt;code&gt;WEST&lt;/code&gt;, and &lt;code&gt;CENTER&lt;/code&gt;. When adding a component to a container with a border layout, use one of these five constants, for example:</source>
          <target state="translated">테두리 레이아웃은 컨테이너를 배치하고 구성 요소를 북쪽, 남쪽, 동쪽, 서쪽 및 중앙의 5 개 영역에 맞게 배열하고 크기를 조정합니다. 각 영역에는 구성 요소가 하나만 포함될 수 있으며 해당 상수 인 &lt;code&gt;NORTH&lt;/code&gt; , &lt;code&gt;SOUTH&lt;/code&gt; , &lt;code&gt;EAST&lt;/code&gt; , &lt;code&gt;WEST&lt;/code&gt; , &lt;code&gt;CENTER&lt;/code&gt; 로 식별됩니다 . 테두리 레이아웃이있는 컨테이너에 구성 요소를 추가 할 때 다음과 같은 다섯 가지 상수 중 하나를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="517df06dadc252901da6ef01e78578e693ec0af0" translate="yes" xml:space="preserve">
          <source>A border without focus.</source>
          <target state="translated">초점이없는 테두리.</target>
        </trans-unit>
        <trans-unit id="b39ce668b8a6a89fc32432670ce35ae52e61bcc0" translate="yes" xml:space="preserve">
          <source>A bounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; backed by an array.</source>
          <target state="translated">어레이가 지원 하는 바운드 &lt;a href=&quot;blockingqueue&quot;&gt;블로킹 대기열&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="62ef4090491b3f77e59b611b48659dc0dcd37310" translate="yes" xml:space="preserve">
          <source>A bounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; backed by an array. This queue orders elements FIFO (first-in-first-out). The &lt;em&gt;head&lt;/em&gt; of the queue is that element that has been on the queue the longest time. The &lt;em&gt;tail&lt;/em&gt; of the queue is that element that has been on the queue the shortest time. New elements are inserted at the tail of the queue, and the queue retrieval operations obtain elements at the head of the queue.</source>
          <target state="translated">어레이가 지원 하는 바운드 &lt;a href=&quot;blockingqueue&quot;&gt;블로킹 대기열&lt;/a&gt; . 이 대기열은 FIFO (선입 선출) 요소를 주문합니다. 큐 의 &lt;em&gt;헤드&lt;/em&gt; 는 큐에 가장 오래 있었던 요소입니다. 대기열 의 &lt;em&gt;꼬리&lt;/em&gt; 는 대기열에 가장 짧은 시간에 있었던 요소입니다. 새 요소가 큐의 끝에 삽입되고 큐 검색 조작이 큐의 헤드에서 요소를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="b53d722b4fd560e25dee8f224333fbad41cf9fb4" translate="yes" xml:space="preserve">
          <source>A box that does layout asynchronously.</source>
          <target state="translated">비동기 적으로 레이아웃을 수행하는 상자입니다.</target>
        </trans-unit>
        <trans-unit id="0e61d562b479de3b9e950e78b73dc829234eeec4" translate="yes" xml:space="preserve">
          <source>A box that does layout asynchronously. This is useful to keep the GUI event thread moving by not doing any layout on it. The layout is done on a granularity of operations on the child views. After each child view is accessed for some part of layout (a potentially time consuming operation) the remaining tasks can be abandoned or a new higher priority task (i.e. to service a synchronous request or a visible area) can be taken on.</source>
          <target state="translated">비동기 적으로 레이아웃을 수행하는 상자입니다. 이것은 레이아웃을 수행하지 않음으로써 GUI 이벤트 스레드를 계속 이동시키는 데 유용합니다. 레이아웃은 하위 뷰의 작업 세분화에 따라 수행됩니다. 레이아웃의 일부 (잠재적으로 시간이 많이 걸리는 작업)에 대해 각 자식보기에 액세스 한 후에는 나머지 작업을 중단하거나 우선 순위가 더 높은 새 작업 (즉, 동기 요청 또는 가시 영역 서비스)을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4abeac083bd93bc54fb7b00d129de9a377831f0" translate="yes" xml:space="preserve">
          <source>A break iterator for character breaks</source>
          <target state="translated">문자 나누기를위한 나누기 반복자</target>
        </trans-unit>
        <trans-unit id="51a9a46286d79ded1086a034d58ac0c2a8978838" translate="yes" xml:space="preserve">
          <source>A break iterator for line breaks</source>
          <target state="translated">줄 바꿈을위한 나누기 반복기</target>
        </trans-unit>
        <trans-unit id="617aea254f35f926f8aa9dc19969e3dc93afda12" translate="yes" xml:space="preserve">
          <source>A break iterator for sentence breaks</source>
          <target state="translated">문장 나누기를위한 나누기 반복자</target>
        </trans-unit>
        <trans-unit id="bd76fb690012655da975ab2cbf26de08e24283dd" translate="yes" xml:space="preserve">
          <source>A break iterator for word breaks</source>
          <target state="translated">단어 나누기를위한 나누기 반복자</target>
        </trans-unit>
        <trans-unit id="406bc890e10642a15686bc5abafda22562398985" translate="yes" xml:space="preserve">
          <source>A brief description of the property, which may be null.</source>
          <target state="translated">속성에 대한 간략한 설명이며 null 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7dc94e24dcfe5c7b1314267497f1ff31df1b8d99" translate="yes" xml:space="preserve">
          <source>A buffer is a linear, finite sequence of elements of a specific primitive type. Aside from its content, the essential properties of a buffer are its capacity, limit, and position:</source>
          <target state="translated">버퍼는 특정 기본 유형의 선형의 유한 요소 시퀀스입니다. 내용 외에 버퍼의 필수 속성은 용량, 한계 및 위치입니다.</target>
        </trans-unit>
        <trans-unit id="324c6bf038720a465066054397d4264a929bfa20" translate="yes" xml:space="preserve">
          <source>A buffer's</source>
          <target state="translated">버퍼</target>
        </trans-unit>
        <trans-unit id="a38d36a5171b52d9f4d2d9a4cc3e0cd798f3a0e0" translate="yes" xml:space="preserve">
          <source>A buffered character-input stream that keeps track of line numbers.</source>
          <target state="translated">행 번호를 추적하는 버퍼 된 문자 입력 스트림입니다.</target>
        </trans-unit>
        <trans-unit id="b3d3e341d936c2a9318fb36824834ab6e62b6e5a" translate="yes" xml:space="preserve">
          <source>A buffered character-input stream that keeps track of line numbers. This class defines methods &lt;a href=&quot;#setLineNumber(int)&quot;&gt;&lt;code&gt;setLineNumber(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getLineNumber()&quot;&gt;&lt;code&gt;getLineNumber()&lt;/code&gt;&lt;/a&gt; for setting and getting the current line number respectively.</source>
          <target state="translated">줄 번호를 추적하는 버퍼링 된 문자 입력 스트림입니다. 이 클래스는 현재 줄 번호를 설정하고 가져 오기위한 &lt;a href=&quot;#setLineNumber(int)&quot;&gt; &lt;code&gt;setLineNumber(int)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#getLineNumber()&quot;&gt; &lt;code&gt;getLineNumber()&lt;/code&gt; &lt;/a&gt; 메서드를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="127c3edf2b5b53a296ab7ff8b00ca59e412aef0d" translate="yes" xml:space="preserve">
          <source>A buffered character-input stream that keeps track of line numbers. This class defines methods &lt;a href=&quot;linenumberreader#setLineNumber-int-&quot;&gt;&lt;code&gt;setLineNumber(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;linenumberreader#getLineNumber--&quot;&gt;&lt;code&gt;getLineNumber()&lt;/code&gt;&lt;/a&gt; for setting and getting the current line number respectively.</source>
          <target state="translated">행 번호를 추적하는 버퍼 된 문자 입력 스트림입니다. 이 클래스는 각각 현재 행 번호를 설정하고 가져 오기 위해 &lt;a href=&quot;linenumberreader#setLineNumber-int-&quot;&gt; &lt;code&gt;setLineNumber(int)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;linenumberreader#getLineNumber--&quot;&gt; &lt;code&gt;getLineNumber()&lt;/code&gt; &lt;/a&gt; 메소드를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="e65216352a7cdc1813ee9c1f3621f5fff483eb48" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; object, used to establish a connection to the database that the &lt;code&gt;data source&lt;/code&gt; object represents.</source>
          <target state="translated">&lt;code&gt;data source&lt;/code&gt; 오브젝트가 나타내는 데이터베이스에 대한 연결을 설정하는 데 사용되는 &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; 오브젝트 에서 작성된 빌더입니다 .</target>
        </trans-unit>
        <trans-unit id="3f9ce534d0b45e9473e99dfe870a0419c1b21269" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; object, used to establish a connection to the database that the &lt;code&gt;data source&lt;/code&gt; object represents. The connection properties that were specified for the &lt;code&gt;data source&lt;/code&gt; are used as the default values by the &lt;code&gt;PooledConnectionBuilder&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;data source&lt;/code&gt; 오브젝트가 나타내는 데이터베이스에 대한 연결을 설정하는 데 사용되는 &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; 오브젝트 에서 작성된 빌더입니다 . &lt;code&gt;data source&lt;/code&gt; 대해 지정된 연결 속성 은 &lt;code&gt;PooledConnectionBuilder&lt;/code&gt; 에서 기본값으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="c42aec692303e67d7e0cd838bc2b34e718365f35" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;DataSource&lt;/code&gt; object, used to establish a connection to the database that the &lt;code&gt;data source&lt;/code&gt; object represents.</source>
          <target state="translated">&lt;code&gt;DataSource&lt;/code&gt; 개체 에서 생성 된 빌더로 , &lt;code&gt;data source&lt;/code&gt; 개체가 나타내는 데이터베이스에 대한 연결을 설정하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="558091f1b6a3efb4688fae32804636fdfc712164" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;DataSource&lt;/code&gt; object, used to establish a connection to the database that the &lt;code&gt;data source&lt;/code&gt; object represents. The connection properties that were specified for the &lt;code&gt;data source&lt;/code&gt; are used as the default values by the &lt;code&gt;ConnectionBuilder&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DataSource&lt;/code&gt; 개체 에서 생성 된 빌더로 , &lt;code&gt;data source&lt;/code&gt; 개체가 나타내는 데이터베이스에 대한 연결을 설정하는 데 사용됩니다 . &lt;code&gt;data source&lt;/code&gt; 대해 지정된 연결 속성 은 &lt;code&gt;ConnectionBuilder&lt;/code&gt; 에서 기본값으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="566021a6baaeed56333107094a71714d8032b0e5" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;DataSource&lt;/code&gt; or &lt;code&gt;XADataSource&lt;/code&gt; object, used to create a &lt;a href=&quot;shardingkey&quot;&gt;&lt;code&gt;ShardingKey&lt;/code&gt;&lt;/a&gt; with sub-keys of supported data types.</source>
          <target state="translated">지원되는 데이터 유형의 하위 키 를 사용하여 &lt;a href=&quot;shardingkey&quot;&gt; &lt;code&gt;ShardingKey&lt;/code&gt; &lt;/a&gt; 를 만드는 데 사용되는 &lt;code&gt;DataSource&lt;/code&gt; 또는 &lt;code&gt;XADataSource&lt;/code&gt; 개체 에서 만든 빌더입니다 .</target>
        </trans-unit>
        <trans-unit id="61d9e88e2b428c2193e3b6be7223e6a2534e5383" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;DataSource&lt;/code&gt; or &lt;code&gt;XADataSource&lt;/code&gt; object, used to create a &lt;a href=&quot;shardingkey&quot;&gt;&lt;code&gt;ShardingKey&lt;/code&gt;&lt;/a&gt; with sub-keys of supported data types. Implementations must support JDBCType.VARCHAR and may also support additional data types.</source>
          <target state="translated">지원되는 데이터 유형의 하위 키 를 사용하여 &lt;a href=&quot;shardingkey&quot;&gt; &lt;code&gt;ShardingKey&lt;/code&gt; &lt;/a&gt; 를 만드는 데 사용되는 &lt;code&gt;DataSource&lt;/code&gt; 또는 &lt;code&gt;XADataSource&lt;/code&gt; 개체 에서 만든 빌더입니다 . 구현은 JDBCType.VARCHAR을 지원해야하며 추가 데이터 유형도 지원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4bfe00bc2cd3b2a915143b2b25128ac3d505377" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;XADataSource&lt;/code&gt; object, used to establish a connection to the database that the &lt;code&gt;data source&lt;/code&gt; object represents.</source>
          <target state="translated">&lt;code&gt;XADataSource&lt;/code&gt; 객체 에서 생성 된 빌더로 , &lt;code&gt;data source&lt;/code&gt; 객체가 나타내는 데이터베이스에 대한 연결을 설정하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="bd7714e68eb51e63c2d6f82ae5563dd469619854" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;XADataSource&lt;/code&gt; object, used to establish a connection to the database that the &lt;code&gt;data source&lt;/code&gt; object represents. The connection properties that were specified for the &lt;code&gt;data source&lt;/code&gt; are used as the default values by the &lt;code&gt;XAConnectionBuilder&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XADataSource&lt;/code&gt; 객체 에서 생성 된 빌더로 , &lt;code&gt;data source&lt;/code&gt; 객체가 나타내는 데이터베이스에 대한 연결을 설정하는 데 사용됩니다 . &lt;code&gt;data source&lt;/code&gt; 대해 지정된 연결 속성 은 &lt;code&gt;XAConnectionBuilder&lt;/code&gt; 에서 기본값으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="fd06f2bbd6f49b4bdcf7cba3b88e386982cbd5ce" translate="yes" xml:space="preserve">
          <source>A builder for building &lt;a href=&quot;moduledescriptor&quot;&gt;&lt;code&gt;ModuleDescriptor&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;moduledescriptor&quot;&gt; &lt;code&gt;ModuleDescriptor&lt;/code&gt; &lt;/a&gt; 개체 를 빌드하기위한 빌더입니다 .</target>
        </trans-unit>
        <trans-unit id="bfe1209556db202095f679c78205318316cc3c7f" translate="yes" xml:space="preserve">
          <source>A builder of &lt;a href=&quot;aclentry&quot;&gt;&lt;code&gt;AclEntry&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;aclentry&quot;&gt; &lt;code&gt;AclEntry&lt;/code&gt; &lt;/a&gt; 객체 의 빌더 .</target>
        </trans-unit>
        <trans-unit id="48657716ecde9cf1aa0386b562b3c7f6b1e93571" translate="yes" xml:space="preserve">
          <source>A builder of &lt;a href=&quot;httpclient&quot;&gt;HTTP Clients&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;httpclient&quot;&gt;HTTP 클라이언트&lt;/a&gt; 의 빌더 .</target>
        </trans-unit>
        <trans-unit id="9c1d56acb9250faa10dd305af9b2a71d1a6d125d" translate="yes" xml:space="preserve">
          <source>A builder of &lt;a href=&quot;httprequest&quot;&gt;HTTP requests&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;httprequest&quot;&gt;HTTP 요청&lt;/a&gt; 작성기 .</target>
        </trans-unit>
        <trans-unit id="3cd01e0b6f4639058df49a2a83a3afc3c4502df0" translate="yes" xml:space="preserve">
          <source>A builder of &lt;a href=&quot;websocket&quot;&gt;WebSocket Clients&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;websocket&quot;&gt;WebSocket 클라이언트&lt;/a&gt; 빌더 .</target>
        </trans-unit>
        <trans-unit id="74c899729de99eee302f7445e3e0184e12bcf2d5" translate="yes" xml:space="preserve">
          <source>A built-in linear RGB color space.</source>
          <target state="translated">내장 된 선형 RGB 색 공간.</target>
        </trans-unit>
        <trans-unit id="0062b3fcd663e4e029d1ea6f304a146815cd4949" translate="yes" xml:space="preserve">
          <source>A built-in linear RGB color space. This space is based on the same RGB primaries as CS_sRGB, but has a linear tone reproduction curve.</source>
          <target state="translated">내장 된 선형 RGB 색 공간. 이 공간은 CS_sRGB와 동일한 RGB 원색을 기반으로하지만 선형 톤 재현 곡선을 가지고 있습니다.</target>
        </trans-unit>
        <trans-unit id="30c3cd71c2aa594ef9ceaa865aafe8177481a872" translate="yes" xml:space="preserve">
          <source>A byte array containing the complete message</source>
          <target state="translated">완전한 메시지를 포함하는 바이트 배열</target>
        </trans-unit>
        <trans-unit id="2fdf2d1cb3dfe2091e6c1d8bd86c78745f1e654c" translate="yes" xml:space="preserve">
          <source>A byte array that contains the profile data.</source>
          <target state="translated">프로필 데이터를 포함하는 바이트 배열입니다.</target>
        </trans-unit>
        <trans-unit id="1c29cf60f4f20b273d6f101f890b7459c68d9951" translate="yes" xml:space="preserve">
          <source>A byte array that contains the tagged data element. Returns &lt;code&gt;null&lt;/code&gt; if the specified tag doesn't exist.</source>
          <target state="translated">태그가 지정된 데이터 요소를 포함하는 바이트 배열입니다. 지정된 태그가 없으면 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="cbc9cc88f9018e37e4137ac516b27f389f5eccd6" translate="yes" xml:space="preserve">
          <source>A byte buffer can be allocated as a &lt;a href=&quot;bytebuffer#direct&quot;&gt; &lt;i&gt;direct&lt;/i&gt;&lt;/a&gt; buffer, in which case the Java virtual machine will make a best effort to perform native I/O operations directly upon it.</source>
          <target state="translated">바이트 버퍼는 &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;직접&lt;/i&gt;&lt;/a&gt; 버퍼 로 할당 될 수 있으며 ,이 경우 Java 가상 머신은 기본 I / O 작업을 직접 수행하기 위해 최선의 노력을 다할 것입니다. &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="0fe13aa63192114f12b3a8e344ea4d7117f95759" translate="yes" xml:space="preserve">
          <source>A byte buffer can be created by &lt;a href=&quot;channels/filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt;&lt;code&gt;&lt;i&gt;mapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; a region of a file directly into memory, in which case a few additional file-related operations defined in the &lt;a href=&quot;mappedbytebuffer&quot;&gt;&lt;code&gt;MappedByteBuffer&lt;/code&gt;&lt;/a&gt; class are available.</source>
          <target state="translated">바이트 버퍼는 파일의 영역을 메모리에 직접 &lt;a href=&quot;channels/filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt; &lt;code&gt;&lt;i&gt;mapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 하여 만들 수 있으며 ,이 경우 &lt;a href=&quot;mappedbytebuffer&quot;&gt; &lt;code&gt;MappedByteBuffer&lt;/code&gt; &lt;/a&gt; 클래스에 정의 된 몇 가지 추가 파일 관련 작업 을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c5f814251ab0cac9e1798c421a7d52224d57054" translate="yes" xml:space="preserve">
          <source>A byte buffer can be created by &lt;a href=&quot;channels/filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt;&lt;code&gt;&lt;i&gt;mapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; a region of a file directly into memory, in which case a few additional file-related operations defined in the &lt;a href=&quot;mappedbytebuffer&quot;&gt;&lt;code&gt;MappedByteBuffer&lt;/code&gt;&lt;/a&gt; class are available.</source>
          <target state="translated">파일의 영역을 메모리에 직접 &lt;a href=&quot;channels/filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt; &lt;code&gt;&lt;i&gt;mapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 하여 바이트 버퍼를 작성할 수 있으며 ,이 경우 &lt;a href=&quot;mappedbytebuffer&quot;&gt; &lt;code&gt;MappedByteBuffer&lt;/code&gt; &lt;/a&gt; 클래스에 정의 된 몇 가지 추가 파일 관련 조작 을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2eb05d66e3c7c4442b0b85a159ad1f90174e0af1" translate="yes" xml:space="preserve">
          <source>A byte buffer containing the contents of the resource or an empty &lt;code&gt;Optional&lt;/code&gt; if not found</source>
          <target state="translated">자원의 내용을 포함하는 바이트 버퍼 또는 찾을 수없는 경우 빈 &lt;code&gt;Optional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cae5d7e92a952c9f183b9ac23cef0349767f9c4d" translate="yes" xml:space="preserve">
          <source>A byte buffer containing the encoded characters</source>
          <target state="translated">인코딩 된 문자를 포함하는 바이트 버퍼</target>
        </trans-unit>
        <trans-unit id="2b25d877daf83d19cc13a61ba16bd3ff131bbe6a" translate="yes" xml:space="preserve">
          <source>A byte buffer is either</source>
          <target state="translated">바이트 버퍼는</target>
        </trans-unit>
        <trans-unit id="8fe357f9c74421b793e6def02c6dd8e017a504dd" translate="yes" xml:space="preserve">
          <source>A byte buffer is not comparable to any other type of object.</source>
          <target state="translated">바이트 버퍼는 다른 유형의 객체와 비교할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4c8399125540b20bdb02f8e90db06eefe52cd4ac" translate="yes" xml:space="preserve">
          <source>A byte buffer is not equal to any other type of object.</source>
          <target state="translated">바이트 버퍼는 다른 유형의 객체와 같지 않습니다.</target>
        </trans-unit>
        <trans-unit id="928e7d1b2622daaff3134713be2904a81648a760" translate="yes" xml:space="preserve">
          <source>A byte buffer mapped to a file</source>
          <target state="translated">파일에 매핑 된 바이트 버퍼</target>
        </trans-unit>
        <trans-unit id="25b8cb5ca683a1699796ded61ded855a5cee13da" translate="yes" xml:space="preserve">
          <source>A byte buffer provides access to its content as either a heterogeneous or homogeneous sequence of &lt;a href=&quot;bytebuffer#bin&quot;&gt;&lt;i&gt;binary data&lt;/i&gt;&lt;/a&gt; of any non-boolean primitive type, in either big-endian or little-endian &lt;a href=&quot;byteorder&quot;&gt;byte order&lt;/a&gt;.</source>
          <target state="translated">바이트 버퍼는 빅 엔디안 또는 리틀 엔디안 &lt;a href=&quot;byteorder&quot;&gt;바이트 순서&lt;/a&gt; 로 부울이 아닌 기본 유형 의 이종 또는 동종 &lt;a href=&quot;bytebuffer#bin&quot;&gt;&lt;i&gt;이진 데이터&lt;/i&gt;&lt;/a&gt; 시퀀스로 콘텐츠에 대한 액세스를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="0b52ba3ab4c5d7deeda40a8723f5b43184feaa37" translate="yes" xml:space="preserve">
          <source>A byte buffer provides access to its content as either a heterogeneous or homogeneous sequence of &lt;a href=&quot;bytebuffer#bin&quot;&gt;binary data&lt;/a&gt; of any non-boolean primitive type, in either big-endian or little-endian &lt;a href=&quot;byteorder&quot;&gt;byte order&lt;/a&gt;.</source>
          <target state="translated">바이트 버퍼는 빅 엔디안 또는 리틀 엔디안 &lt;a href=&quot;byteorder&quot;&gt;바이트 순서로&lt;/a&gt; 비 부울 프리미티브 유형 의 &lt;a href=&quot;bytebuffer#bin&quot;&gt;이진&lt;/a&gt; 또는 이진 시퀀스의 이진 데이터 시퀀스로 컨텐츠에 대한 액세스를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="89b17475be8ed8b74d9824ee945925183e8c4b46" translate="yes" xml:space="preserve">
          <source>A byte buffer.</source>
          <target state="translated">바이트 버퍼.</target>
        </trans-unit>
        <trans-unit id="88bcbe82898f6c96d90acd1c56b5987f6f08ad0f" translate="yes" xml:space="preserve">
          <source>A byte channel that maintains a current</source>
          <target state="translated">전류를 유지하는 바이트 채널</target>
        </trans-unit>
        <trans-unit id="845ad2cb4762b64991c6e2d6e95d59612deaf435" translate="yes" xml:space="preserve">
          <source>A calendar system is defined by the &lt;a href=&quot;chronology&quot;&gt;&lt;code&gt;Chronology&lt;/code&gt;&lt;/a&gt; interface, while a date in a calendar system is defined by the &lt;a href=&quot;chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">달력 시스템은 &lt;a href=&quot;chronology&quot;&gt; &lt;code&gt;Chronology&lt;/code&gt; &lt;/a&gt; 인터페이스에 의해 정의되고 달력 시스템 의 날짜는 &lt;a href=&quot;chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt; 인터페이스에 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="ce4b54aff35ccf9905033e61ef22da804a259a1e" translate="yes" xml:space="preserve">
          <source>A calendar system, used to organize and identify dates.</source>
          <target state="translated">날짜를 구성하고 식별하는 데 사용되는 달력 시스템.</target>
        </trans-unit>
        <trans-unit id="b8c17792b7dc5b2e841edb56de9cd4dc47f658c5" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;checkPermission&lt;/code&gt; with &lt;code&gt;java.security.AllPermission&lt;/code&gt; does not result in a SecurityException.</source>
          <target state="translated">&lt;code&gt;java.security.AllPermission&lt;/code&gt; 으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출 해도 SecurityException이 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0153f14fc38bde22e0a2e72d882599272b17331f" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;forName(&quot;X&quot;)&lt;/code&gt; causes the class named &lt;code&gt;X&lt;/code&gt; to be initialized.</source>
          <target state="translated">의 호출 &lt;code&gt;forName(&quot;X&quot;)&lt;/code&gt; 클래스라는 이름의 원인이 &lt;code&gt;X&lt;/code&gt; 를 초기화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccc6dca760accd0b2d5c4147af5d2b22b5e1ceaa" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;nn.getNumber()&lt;/code&gt; will then return &lt;b&gt;5&lt;/b&gt;.</source>
          <target state="translated">&lt;code&gt;nn.getNumber()&lt;/code&gt; 호출하면 &lt;b&gt;5&lt;/b&gt; 가 반환 됩니다.</target>
        </trans-unit>
        <trans-unit id="acc3befecff36defc80810488e5d4f79be41dab2" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;setOriginalRow&lt;/code&gt; is irreversible.</source>
          <target state="translated">&lt;code&gt;setOriginalRow&lt;/code&gt; 에 대한 호출 은 되돌릴 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5d9747712d9c7476a00f6fa1bc5816c855acb2f5" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;start&lt;/code&gt; on a thread</source>
          <target state="translated">스레드 에서 &lt;code&gt;start&lt;/code&gt; 하는 호출</target>
        </trans-unit>
        <trans-unit id="fb38ea61db2c8d9a29ac9db67146e75701ab7b75" translate="yes" xml:space="preserve">
          <source>A call to plain &lt;code&gt;invoke&lt;/code&gt; works the same as a call to &lt;code&gt;invokeExact&lt;/code&gt;, if the symbolic type descriptor specified by the caller exactly matches the method handle's own type. If there is a type mismatch, &lt;code&gt;invoke&lt;/code&gt; attempts to adjust the type of the receiving method handle, as if by a call to &lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt;, to obtain an exactly invokable method handle &lt;code&gt;M2&lt;/code&gt;. This allows a more powerful negotiation of method type between caller and callee.</source>
          <target state="translated">일반 &lt;code&gt;invoke&lt;/code&gt; 에 대한 호출은 호출자가 지정한 기호 유형 설명자가 메소드 핸들의 고유 유형과 정확히 일치하는 경우 &lt;code&gt;invokeExact&lt;/code&gt; 호출과 동일하게 작동합니다 . 유형 불일치가있는 경우 &lt;code&gt;invoke&lt;/code&gt; 는 정확히 호출 가능한 메소드 핸들 &lt;code&gt;M2&lt;/code&gt; 를 얻기 위해 &lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;asType&lt;/code&gt; 을&lt;/a&gt; 호출하는 것처럼 수신 메소드 핸들의 유형을 조정하려고 시도합니다 . 이를 통해 호출자와 수신자 간의 메서드 유형에 대한보다 강력한 협상이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="a1273885f9474307edbb63fe4336b5043edf79d1" translate="yes" xml:space="preserve">
          <source>A call to plain &lt;code&gt;invoke&lt;/code&gt; works the same as a call to &lt;code&gt;invokeExact&lt;/code&gt;, if the symbolic type descriptor specified by the caller exactly matches the method handle's own type. If there is a type mismatch, &lt;code&gt;invoke&lt;/code&gt; attempts to adjust the type of the receiving method handle, as if by a call to &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt;, to obtain an exactly invokable method handle &lt;code&gt;M2&lt;/code&gt;. This allows a more powerful negotiation of method type between caller and callee.</source>
          <target state="translated">호출자가 지정한 기호 유형 설명자가 메소드 핸들의 자체 유형과 정확히 일치하는 경우 일반 &lt;code&gt;invoke&lt;/code&gt; 대한 호출은 &lt;code&gt;invokeExact&lt;/code&gt; 호출과 동일하게 작동합니다 . 형식 불일치가 있으면, &lt;code&gt;invoke&lt;/code&gt; 의 수신 방법 손잡이의 형태를 조절하는 호출하여 마치 시도 &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt; , 정확히 호출 가능한 메소드 핸들 수득 &lt;code&gt;M2&lt;/code&gt; 는 . 이를 통해 호출자와 수신자 사이의 메소드 유형을보다 강력하게 협상 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a17c6a5af8605b07ab534ab287ceff2fa43816d7" translate="yes" xml:space="preserve">
          <source>A call to the method &lt;code&gt;getParams&lt;/code&gt; returns the values stored in the &lt;code&gt;Hashtable&lt;/code&gt; object as an array of &lt;code&gt;Object&lt;/code&gt; instances. An element in this array may be a simple &lt;code&gt;Object&lt;/code&gt; instance or an array (which is a type of &lt;code&gt;Object&lt;/code&gt;). The particular setter method used determines whether an element in this array is an &lt;code&gt;Object&lt;/code&gt; or an array.</source>
          <target state="translated">&lt;code&gt;getParams&lt;/code&gt; 메소드를 호출 하면 &lt;code&gt;Hashtable&lt;/code&gt; 객체에 저장된 값 이 &lt;code&gt;Object&lt;/code&gt; 인스턴스 의 배열로 반환 됩니다. 이 배열의 요소는 단순 &lt;code&gt;Object&lt;/code&gt; 인스턴스 또는 배열 ( &lt;code&gt;Object&lt;/code&gt; 유형 ) 일 수 있습니다. 사용 된 특정 setter 메서드는이 배열의 요소가 &lt;code&gt;Object&lt;/code&gt; 인지 배열인지를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="50587dcf47bbbd5d977c6c68d1dba4482e20af75" translate="yes" xml:space="preserve">
          <source>A call to the method &lt;code&gt;nextConflict&lt;/code&gt; will implicitly close an input stream if one is open and will clear the &lt;code&gt;SyncResolver&lt;/code&gt; object's warning chain.</source>
          <target state="translated">&lt;code&gt;nextConflict&lt;/code&gt; 메서드를 호출 하면 입력 스트림이 열려있는 경우 암시 적으로 닫히고 &lt;code&gt;SyncResolver&lt;/code&gt; 개체의 경고 체인이 지워 집니다 .</target>
        </trans-unit>
        <trans-unit id="518e192efe315dd3fb9a9fff3c71548a6a80b7d0" translate="yes" xml:space="preserve">
          <source>A call to the method &lt;code&gt;previousConflict&lt;/code&gt; will implicitly close an input stream if one is open and will clear the &lt;code&gt;SyncResolver&lt;/code&gt; object's warning chain.</source>
          <target state="translated">&lt;code&gt;previousConflict&lt;/code&gt; 메서드를 호출 하면 입력 스트림이 열려있는 경우 암시 적으로 닫히고 &lt;code&gt;SyncResolver&lt;/code&gt; 개체의 경고 체인 이 지워 집니다.</target>
        </trans-unit>
        <trans-unit id="634085829af74ce806f9f2d387d3f5c712eaf824" translate="yes" xml:space="preserve">
          <source>A call to this method resets this &lt;code&gt;Mac&lt;/code&gt; object to the state it was in when previously initialized via a call to &lt;code&gt;init(Key)&lt;/code&gt; or &lt;code&gt;init(Key, AlgorithmParameterSpec)&lt;/code&gt;. That is, the object is reset and available to generate another MAC from the same key, if desired, via new calls to &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;doFinal&lt;/code&gt;. (In order to reuse this &lt;code&gt;Mac&lt;/code&gt; object with a different key, it must be reinitialized via a call to &lt;code&gt;init(Key)&lt;/code&gt; or &lt;code&gt;init(Key, AlgorithmParameterSpec)&lt;/code&gt;.</source>
          <target state="translated">이 메소드를 호출하면 (자),이 &lt;code&gt;Mac&lt;/code&gt; 객체를 &lt;code&gt;init(Key)&lt;/code&gt; 또는 &lt;code&gt;init(Key, AlgorithmParameterSpec)&lt;/code&gt; 호출을 사용해, 이전에 초기화되었을 때의 상태로 리셋합니다 . 즉, 객체는 재설정되고 원하는 경우 &lt;code&gt;update&lt;/code&gt; 및 &lt;code&gt;doFinal&lt;/code&gt; 에 대한 새 호출을 통해 동일한 키에서 다른 MAC을 생성 할 수 있습니다 . 이 &lt;code&gt;Mac&lt;/code&gt; 객체를 다른 키로 재사용 하려면 &lt;code&gt;init(Key)&lt;/code&gt; 또는 &lt;code&gt;init(Key, AlgorithmParameterSpec)&lt;/code&gt; 호출을 통해 다시 초기화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4886ead2dadc8153d8df2ce75f91333caf2a6224" translate="yes" xml:space="preserve">
          <source>A call to this method resets this signature object to the state it was in when previously initialized for signing via a call to &lt;code&gt;initSign(PrivateKey)&lt;/code&gt;. That is, the object is reset and available to generate another signature from the same signer, if desired, via new calls to &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;sign&lt;/code&gt;.</source>
          <target state="translated">이 메소드를 호출하면 (자),이 서명 오브젝트를 &lt;code&gt;initSign(PrivateKey)&lt;/code&gt; 호출을 사용해 , 서명하기 위해서 이전에 초기화 된 상태로 리셋합니다 . 즉, 원하는 경우 &lt;code&gt;update&lt;/code&gt; 및 &lt;code&gt;sign&lt;/code&gt; 을위한 새 호출을 통해 동일한 서명자에서 다른 서명을 생성하기 위해 오브젝트가 재설정되고 사용 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="76fc154e54203ae305cc7d9a3ee179a09214b472" translate="yes" xml:space="preserve">
          <source>A call to this method resets this signature object to the state it was in when previously initialized for verification via a call to &lt;code&gt;initVerify(PublicKey)&lt;/code&gt;. That is, the object is reset and available to verify another signature from the identity whose public key was specified in the call to &lt;code&gt;initVerify&lt;/code&gt;.</source>
          <target state="translated">이 메소드를 호출하면 (자),이 서명 오브젝트를 &lt;code&gt;initVerify(PublicKey)&lt;/code&gt; 호출을 사용해 검증 용으로 초기화했을 때의 상태로 리셋합니다 . 즉, 객체가 재설정되어 &lt;code&gt;initVerify&lt;/code&gt; 호출에 공개 키가 지정된 ID의 다른 서명을 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3c3f413a455df6c2e8fd25015d50c0b20ad9ebe5" translate="yes" xml:space="preserve">
          <source>A call to this method will return each outstanding task exactly once.</source>
          <target state="translated">이 메소드를 호출하면 각 미해결 작업이 정확히 한 번만 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="eea4bd5a33950b5798360bfeb8fc27d91943934a" translate="yes" xml:space="preserve">
          <source>A callback that will be called exactly once after the Spi class has been instantiated and registered in a &lt;code&gt;ServiceRegistry&lt;/code&gt;.</source>
          <target state="translated">Spi 클래스가 인스턴스화되고 &lt;code&gt;ServiceRegistry&lt;/code&gt; 에 등록 된 후 정확히 한 번 호출되는 콜백입니다 .</target>
        </trans-unit>
        <trans-unit id="73594faaa9514a1c74b8c1749cd461ade7dd464c" translate="yes" xml:space="preserve">
          <source>A callback that will be called exactly once after the Spi class has been instantiated and registered in a &lt;code&gt;ServiceRegistry&lt;/code&gt;. This may be used to verify that the environment is suitable for this service, for example that native libraries can be loaded. If the service cannot function in the environment where it finds itself, it should deregister itself from the registry.</source>
          <target state="translated">Spi 클래스가 인스턴스화되고 &lt;code&gt;ServiceRegistry&lt;/code&gt; 에 등록 된 후 정확히 한 번 호출되는 콜백입니다 . 이는 환경이이 서비스에 적합한 지 (예 : 기본 라이브러리를로드 할 수 있는지) 확인하는 데 사용될 수 있습니다. 서비스가있는 환경에서 서비스가 작동하지 않으면 레지스트리에서 자신을 등록 취소해야합니다.</target>
        </trans-unit>
        <trans-unit id="d9e488bdf35f09c0f0d09e9364cbcf74bf1848b2" translate="yes" xml:space="preserve">
          <source>A callback that will be whenever the Spi class has been deregistered from a &lt;code&gt;ServiceRegistry&lt;/code&gt;.</source>
          <target state="translated">Spi 클래스가 &lt;code&gt;ServiceRegistry&lt;/code&gt; 에서 등록 취소 될 때마다 발생하는 콜백입니다 .</target>
        </trans-unit>
        <trans-unit id="0b158ecbe2cce58e46d356dc6dbe9612a22819c5" translate="yes" xml:space="preserve">
          <source>A caller can be marked as being &quot;privileged&quot; (see &lt;a href=&quot;#doPrivileged(java.security.PrivilegedAction)&quot;&gt;&lt;code&gt;doPrivileged&lt;/code&gt;&lt;/a&gt; and below). When making access control decisions, the &lt;code&gt;checkPermission&lt;/code&gt; method stops checking if it reaches a caller that was marked as &quot;privileged&quot; via a &lt;code&gt;doPrivileged&lt;/code&gt; call without a context argument (see below for information about a context argument). If that caller's domain has the specified permission and at least one limiting permission argument (if any) implies the requested permission, no further checking is done and &lt;code&gt;checkPermission&lt;/code&gt; returns quietly, indicating that the requested access is allowed. If that domain does not have the specified permission, an exception is thrown, as usual. If the caller's domain had the specified permission but it was not implied by any limiting permission arguments given in the call to &lt;code&gt;doPrivileged&lt;/code&gt; then the permission checking continues until there are no more callers or another &lt;code&gt;doPrivileged&lt;/code&gt; call matches the requested permission and returns normally.</source>
          <target state="translated">발신자는 &quot;권한&quot;으로 표시 될 수 있습니다 ( &lt;a href=&quot;#doPrivileged(java.security.PrivilegedAction)&quot;&gt; &lt;code&gt;doPrivileged&lt;/code&gt; &lt;/a&gt; 및 아래 참조). 액세스 제어 결정을 내릴 때 &lt;code&gt;checkPermission&lt;/code&gt; 메소드 는 컨텍스트 인수없이 &lt;code&gt;doPrivileged&lt;/code&gt; 호출을 통해 &quot;권한 있음&quot;으로 표시된 호출자에 도달하는지 확인을 중지 합니다 (컨텍스트 인수에 대한 정보는 아래 참조). 해당 호출자의 도메인에 지정된 권한이 있고 하나 이상의 제한 권한 인수 (있는 경우)가 요청 된 권한을 암시하는 경우 추가 검사가 수행되지 않고 &lt;code&gt;checkPermission&lt;/code&gt; 요청 된 액세스가 허용됨을 나타내는 조용히 반환합니다. 해당 도메인에 지정된 권한이 없으면 평소와 같이 예외가 발생합니다. 호출자의 도메인에 지정된 권한이 있지만 &lt;code&gt;doPrivileged&lt;/code&gt; 호출에 제공된 제한 권한 인수에 의해 암시되지 않은 경우 더 이상 호출자가 없거나 다른 &lt;code&gt;doPrivileged&lt;/code&gt; 호출이 요청 된 권한과 일치하고 정상적으로 반환 될 때까지 권한 검사가 계속 됩니다.</target>
        </trans-unit>
        <trans-unit id="0862bd54496a4757c9e9f164297b979e3e8f8ea7" translate="yes" xml:space="preserve">
          <source>A caller can be marked as being &quot;privileged&quot; (see &lt;a href=&quot;accesscontroller#doPrivileged-java.security.PrivilegedAction-&quot;&gt;&lt;code&gt;doPrivileged&lt;/code&gt;&lt;/a&gt; and below). When making access control decisions, the &lt;code&gt;checkPermission&lt;/code&gt; method stops checking if it reaches a caller that was marked as &quot;privileged&quot; via a &lt;code&gt;doPrivileged&lt;/code&gt; call without a context argument (see below for information about a context argument). If that caller's domain has the specified permission and at least one limiting permission argument (if any) implies the requested permission, no further checking is done and &lt;code&gt;checkPermission&lt;/code&gt; returns quietly, indicating that the requested access is allowed. If that domain does not have the specified permission, an exception is thrown, as usual. If the caller's domain had the specified permission but it was not implied by any limiting permission arguments given in the call to &lt;code&gt;doPrivileged&lt;/code&gt; then the permission checking continues until there are no more callers or another &lt;code&gt;doPrivileged&lt;/code&gt; call matches the requested permission and returns normally.</source>
          <target state="translated">발신자는 &quot;권한 있음&quot;으로 표시 될 수 있습니다 ( &lt;a href=&quot;accesscontroller#doPrivileged-java.security.PrivilegedAction-&quot;&gt; &lt;code&gt;doPrivileged&lt;/code&gt; &lt;/a&gt; 및 아래 참조). 액세스 제어 결정을 수행 할 때 &lt;code&gt;checkPermission&lt;/code&gt; 메소드 는 컨텍스트 인수없이 &lt;code&gt;doPrivileged&lt;/code&gt; 호출을 통해 &quot;권한&quot;으로 표시된 호출자에 도달하는지 확인을 중지 합니다 (컨텍스트 인수에 대한 정보는 아래 참조). 호출자의 도메인에 지정된 권한이 있고 하나 이상의 제한 권한 인수 (있는 경우)가 요청 된 권한을 암시하면 더 이상 점검하지 않으며 &lt;code&gt;checkPermission&lt;/code&gt; 요청 된 액세스가 허용됨을 나타내는 자동으로 리턴합니다. 해당 도메인에 지정된 권한이 없으면 평소와 같이 예외가 발생합니다. 호출자의 도메인에 지정된 권한이 있지만 &lt;code&gt;doPrivileged&lt;/code&gt; 에 대한 호출에 제공된 제한 권한 인수에 의해 암시되지 않은 경우, 호출자 가 더 이상 없거나 다른 &lt;code&gt;doPrivileged&lt;/code&gt; 호출이 요청 된 권한과 일치하고 정상적으로 리턴 될 때까지 권한 점검이 계속 됩니다.</target>
        </trans-unit>
        <trans-unit id="f4f31ba8f0b9f51355a1e48264e3f68465bf471d" translate="yes" xml:space="preserve">
          <source>A caller can use the returned value to find out what features this &lt;code&gt;SecureRandom&lt;/code&gt; supports.</source>
          <target state="translated">호출자는 반환 된 값을 사용하여이 &lt;code&gt;SecureRandom&lt;/code&gt; 이 지원 하는 기능을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e4753d9b632b33c1a0abdaa51b4b703409680b9b" translate="yes" xml:space="preserve">
          <source>A caller obtains a &lt;code&gt;SecureRandom&lt;/code&gt; instance via the no-argument constructor or one of the &lt;code&gt;getInstance&lt;/code&gt; methods. For example:</source>
          <target state="translated">호출자는 인수없는 생성자 또는 &lt;code&gt;getInstance&lt;/code&gt; 메서드 중 하나를 통해 &lt;code&gt;SecureRandom&lt;/code&gt; 인스턴스를 얻습니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="4f95088e3230b86cb9b7c79d72fd9093503b3392" translate="yes" xml:space="preserve">
          <source>A caller obtains a SecureRandom instance via the no-argument constructor or one of the &lt;code&gt;getInstance&lt;/code&gt; methods:</source>
          <target state="translated">호출자는 인수가없는 생성자 또는 &lt;code&gt;getInstance&lt;/code&gt; 메소드 중 하나를 통해 SecureRandom 인스턴스를 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="3c51b9f09fa6bf9ea50aeda8b949600008199a46" translate="yes" xml:space="preserve">
          <source>A caller requires permissions to access the Credentials in the returned &lt;code&gt;Set&lt;/code&gt;, or to modify the &lt;code&gt;Set&lt;/code&gt; itself. A &lt;code&gt;SecurityException&lt;/code&gt; is thrown if the caller does not have the proper permissions.</source>
          <target state="translated">호출자는 반환 된 &lt;code&gt;Set&lt;/code&gt; 의 자격 증명에 액세스 하거나 &lt;code&gt;Set&lt;/code&gt; 자체 를 수정할 수있는 권한이 필요 합니다. &lt;code&gt;SecurityException&lt;/code&gt; 호출자가 적절한 권한이없는 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1e48b60ad6e578809d6b962cd5312d6a4b206220" translate="yes" xml:space="preserve">
          <source>A cancellable asynchronous computation.</source>
          <target state="translated">취소 가능한 비동기 계산.</target>
        </trans-unit>
        <trans-unit id="67943adf19495c6479d17dbaae4d893b5cc515c6" translate="yes" xml:space="preserve">
          <source>A cancellable asynchronous computation. This class provides a base implementation of &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;, with methods to start and cancel a computation, query to see if the computation is complete, and retrieve the result of the computation. The result can only be retrieved when the computation has completed; the &lt;code&gt;get&lt;/code&gt; methods will block if the computation has not yet completed. Once the computation has completed, the computation cannot be restarted or cancelled (unless the computation is invoked using &lt;a href=&quot;#runAndReset()&quot;&gt;&lt;code&gt;runAndReset()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">취소 가능한 비동기 계산입니다. 이 클래스는 계산을 시작 및 취소하고 계산이 완료되었는지 쿼리하고 계산 결과를 검색하는 메서드와 함께 &lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; 의 기본 구현을 제공합니다 . 결과는 계산이 완료된 경우에만 검색 할 수 있습니다. &lt;code&gt;get&lt;/code&gt; 계산이 아직 완료되지 않은 경우, 방법은 차단된다. 계산이 완료되면 계산을 다시 시작하거나 취소 할 수 없습니다 ( &lt;a href=&quot;#runAndReset()&quot;&gt; &lt;code&gt;runAndReset()&lt;/code&gt; &lt;/a&gt; 사용하여 계산을 호출하지 않는 한 ).</target>
        </trans-unit>
        <trans-unit id="8a206c9c1ebd0c5daa3ba1ae87da2f6428b62838" translate="yes" xml:space="preserve">
          <source>A cancellable asynchronous computation. This class provides a base implementation of &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;, with methods to start and cancel a computation, query to see if the computation is complete, and retrieve the result of the computation. The result can only be retrieved when the computation has completed; the &lt;code&gt;get&lt;/code&gt; methods will block if the computation has not yet completed. Once the computation has completed, the computation cannot be restarted or cancelled (unless the computation is invoked using &lt;a href=&quot;futuretask#runAndReset--&quot;&gt;&lt;code&gt;runAndReset()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">취소 가능한 비동기 계산. 이 클래스는 &lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; 의 기본 구현 , 계산 시작 및 취소, 계산이 완료되었는지 확인하기위한 쿼리 및 계산 결과를 검색하는 메소드를 제공합니다. 계산이 완료된 경우에만 결과를 검색 할 수 있습니다. &lt;code&gt;get&lt;/code&gt; 계산이 아직 완료되지 않은 경우, 방법은 차단된다. 계산이 완료되면 계산을 다시 시작하거나 취소 할 수 없습니다 ( &lt;a href=&quot;futuretask#runAndReset--&quot;&gt; &lt;code&gt;runAndReset()&lt;/code&gt; &lt;/a&gt; 사용하여 계산을 호출하지 않은 경우 ).</target>
        </trans-unit>
        <trans-unit id="b21dfa611af8d9c0df34407a03e5ebd1c6a33f75" translate="yes" xml:space="preserve">
          <source>A canonical pathname is both absolute and unique. The precise definition of canonical form is system-dependent. This method first converts this pathname to absolute form if necessary, as if by invoking the &lt;a href=&quot;#getAbsolutePath()&quot;&gt;&lt;code&gt;getAbsolutePath()&lt;/code&gt;&lt;/a&gt; method, and then maps it to its unique form in a system-dependent way. This typically involves removing redundant names such as &lt;code&gt;&quot;.&quot;&lt;/code&gt; and &lt;code&gt;&quot;..&quot;&lt;/code&gt; from the pathname, resolving symbolic links (on UNIX platforms), and converting drive letters to a standard case (on Microsoft Windows platforms).</source>
          <target state="translated">표준 경로 이름은 절대적이고 고유합니다. 표준 형식의 정확한 정의는 시스템에 따라 다릅니다. 이 메서드는 먼저 &lt;a href=&quot;#getAbsolutePath()&quot;&gt; &lt;code&gt;getAbsolutePath()&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하는 것처럼 필요한 경우이 경로 이름을 절대 형식으로 변환 한 다음 시스템 종속 방식으로 고유 한 형식에 매핑합니다. 여기에는 일반적으로 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 와 같은 중복 이름 제거가 포함됩니다 . 및 경로 이름에서 &lt;code&gt;&quot;..&quot;&lt;/code&gt; , 심볼릭 링크 확인 (UNIX 플랫폼), 드라이브 문자를 표준 대소 문자로 변환 (Microsoft Windows 플랫폼).</target>
        </trans-unit>
        <trans-unit id="b24dd18062248073c34de95bfbf526897b131dd5" translate="yes" xml:space="preserve">
          <source>A canonical pathname is both absolute and unique. The precise definition of canonical form is system-dependent. This method first converts this pathname to absolute form if necessary, as if by invoking the &lt;a href=&quot;file#getAbsolutePath--&quot;&gt;&lt;code&gt;getAbsolutePath()&lt;/code&gt;&lt;/a&gt; method, and then maps it to its unique form in a system-dependent way. This typically involves removing redundant names such as &lt;code&gt;&quot;.&quot;&lt;/code&gt; and &lt;code&gt;&quot;..&quot;&lt;/code&gt; from the pathname, resolving symbolic links (on UNIX platforms), and converting drive letters to a standard case (on Microsoft Windows platforms).</source>
          <target state="translated">정식 경로 이름은 절대적이고 고유합니다. 정식 형식의 정확한 정의는 시스템에 따라 다릅니다. 이 메소드는 먼저 &lt;a href=&quot;file#getAbsolutePath--&quot;&gt; &lt;code&gt;getAbsolutePath()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하는 것처럼 필요한 경우이 경로 이름을 절대 형식으로 변환 한 다음 시스템 종속 방식으로 고유 한 형식으로 맵핑합니다. 일반적으로 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 와 같은 중복 이름을 제거 합니다. 그리고 &lt;code&gt;&quot;..&quot;&lt;/code&gt; 경로명에서, (UNIX 플랫폼) 심볼릭 링크를 해결하고, (Microsoft Windows 플랫폼에서) 표준 경우에 드라이브 문자를 변환.</target>
        </trans-unit>
        <trans-unit id="81bf709141336beed8f753343474c99206c52e04" translate="yes" xml:space="preserve">
          <source>A capability-based lock with three modes for controlling read/write access.</source>
          <target state="translated">읽기 / 쓰기 액세스를 제어하기위한 세 가지 모드가있는 기능 기반 잠금.</target>
        </trans-unit>
        <trans-unit id="3c2e4112d21cf12f2a7a271b9c964f9ff2328115" translate="yes" xml:space="preserve">
          <source>A capability-based lock with three modes for controlling read/write access. The state of a StampedLock consists of a version and mode. Lock acquisition methods return a stamp that represents and controls access with respect to a lock state; &quot;try&quot; versions of these methods may instead return the special value zero to represent failure to acquire access. Lock release and conversion methods require stamps as arguments, and fail if they do not match the state of the lock. The three modes are:</source>
          <target state="translated">읽기 / 쓰기 액세스를 제어하기위한 세 가지 모드가있는 기능 기반 잠금. StampedLock의 상태는 버전과 모드로 구성됩니다. 잠금 획득 방법은 잠금 상태에 대한 액세스를 나타내는 스탬프를 반환합니다. 이러한 방법의 &quot;시도&quot;버전은 대신 특수 값 0을 반환하여 액세스 획득 실패를 나타낼 수 있습니다. 잠금 해제 및 변환 방법에는 스탬프로 인수가 필요하며 잠금 상태와 일치하지 않으면 실패합니다. 세 가지 모드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b4c23c15c033507b435f0f0a354dbc2b8655d74c" translate="yes" xml:space="preserve">
          <source>A capturing group can also be assigned a &quot;name&quot;, a &lt;code&gt;named-capturing group&lt;/code&gt;, and then be back-referenced later by the &quot;name&quot;. Group names are composed of the following characters. The first character must be a &lt;code&gt;letter&lt;/code&gt;.</source>
          <target state="translated">캡처 그룹에 &quot;이름&quot;, &lt;code&gt;named-capturing group&lt;/code&gt; 할당 한 다음 나중에 &quot;이름&quot;으로 다시 참조 할 수도 있습니다 . 그룹 이름은 다음 문자로 구성됩니다. 첫 번째 문자가 있어야합니다 &lt;code&gt;letter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cff8bffd93ff124f465e2fd1a81f11d6fce23cb2" translate="yes" xml:space="preserve">
          <source>A carriage return (CR) character standing by itself means &quot;go to column 1 of the next line.&quot;</source>
          <target state="translated">캐리지 리턴 (CR) 문자 자체는 &quot;다음 줄의 1 열로 이동&quot;을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="c9d0a280ee3997ec1b9b09288f8793052e7adc66" translate="yes" xml:space="preserve">
          <source>A carriage-return character followed immediately by a newline character (&lt;code&gt;&quot;\r\n&quot;&lt;/code&gt;),</source>
          <target state="translated">캐리지 리턴 문자 뒤에 바로 줄 바꿈 문자 ( &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt; )가 옵니다 .</target>
        </trans-unit>
        <trans-unit id="7d281acac654e42af39e1b04fe639f300961197b" translate="yes" xml:space="preserve">
          <source>A catalog can be used in two situations:</source>
          <target state="translated">카탈로그는 두 가지 상황에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9fd75cd2b59eced2f9f99a3d712bf466288bc82" translate="yes" xml:space="preserve">
          <source>A catalog is an XML file that contains a root &lt;code&gt;catalog&lt;/code&gt; entry with a list of catalog entries. The entries can also be grouped with a &lt;code&gt;group&lt;/code&gt; entry. The catalog and group entries may specify &lt;code&gt;prefer&lt;/code&gt; and &lt;code&gt;xml:base&lt;/code&gt; attributes that set preference of public or system type of entries and base URI to resolve relative URIs.</source>
          <target state="translated">카탈로그는 &lt;code&gt;catalog&lt;/code&gt; 항목 목록이 있는 루트 카탈로그 항목 을 포함하는 XML 파일입니다 . 항목을 &lt;code&gt;group&lt;/code&gt; 항목 으로 그룹화 할 수도 있습니다 . 카탈로그 및 그룹 항목은 상대 URI를 확인하기 위해 공용 또는 시스템 유형의 항목과 기본 URI의 선호도를 설정 &lt;code&gt;prefer&lt;/code&gt; 및 &lt;code&gt;xml:base&lt;/code&gt; 속성을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="710bcf1312738b711a53e4482726a0d613afae7f" translate="yes" xml:space="preserve">
          <source>A cause can be associated with a throwable in two ways: via a constructor that takes the cause as an argument, or via the &lt;a href=&quot;#initCause(java.lang.Throwable)&quot;&gt;&lt;code&gt;initCause(Throwable)&lt;/code&gt;&lt;/a&gt; method. New throwable classes that wish to allow causes to be associated with them should provide constructors that take a cause and delegate (perhaps indirectly) to one of the &lt;code&gt;Throwable&lt;/code&gt; constructors that takes a cause. Because the &lt;code&gt;initCause&lt;/code&gt; method is public, it allows a cause to be associated with any throwable, even a &quot;legacy throwable&quot; whose implementation predates the addition of the exception chaining mechanism to &lt;code&gt;Throwable&lt;/code&gt;.</source>
          <target state="translated">원인은 두 가지 방법으로 throwable과 연결될 수 있습니다. 원인을 인수로 사용하는 생성자를 통해 또는 &lt;a href=&quot;#initCause(java.lang.Throwable)&quot;&gt; &lt;code&gt;initCause(Throwable)&lt;/code&gt; &lt;/a&gt; 메서드를 통해. 원인을 연관시키려는 새로운 throwable 클래스는 원인을 취하는 생성자를 제공하고 원인 을 취하는 &lt;code&gt;Throwable&lt;/code&gt; 생성자 중 하나에 (아마도 간접적으로) 위임해야합니다 . &lt;code&gt;initCause&lt;/code&gt; 메소드는 공개 이기 때문에 원인이 &lt;code&gt;Throwable&lt;/code&gt; 에 예외 체인 메커니즘을 추가하기 이전에 구현 된 &quot;레거시 throwable&quot;을 포함하여 throwable과 연관 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="200e757132c0a25b1d7ddb249bee8390af696aeb" translate="yes" xml:space="preserve">
          <source>A cause can be associated with a throwable in two ways: via a constructor that takes the cause as an argument, or via the &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;initCause(Throwable)&lt;/code&gt;&lt;/a&gt; method. New throwable classes that wish to allow causes to be associated with them should provide constructors that take a cause and delegate (perhaps indirectly) to one of the &lt;code&gt;Throwable&lt;/code&gt; constructors that takes a cause. Because the &lt;code&gt;initCause&lt;/code&gt; method is public, it allows a cause to be associated with any throwable, even a &quot;legacy throwable&quot; whose implementation predates the addition of the exception chaining mechanism to &lt;code&gt;Throwable&lt;/code&gt;.</source>
          <target state="translated">원인은 두 가지 방법으로 원인을 인수로 사용하는 생성자 또는 &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;initCause(Throwable)&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 Throwable 과 연관 될 수 있습니다 . 원인을 원인과 연관시킬 수있는 새로운 Throwable 클래스는 원인을 취하는 생성자를 제공하고 원인 을 취하는 &lt;code&gt;Throwable&lt;/code&gt; 생성자 중 하나에 간접적으로 위임 할 수 있습니다. &lt;code&gt;initCause&lt;/code&gt; 메소드는 공용 이기 때문에, 예외 체인 메커니즘을 &lt;code&gt;Throwable&lt;/code&gt; 에 추가하기 전에 구현이 발생하는 &quot;레거시 Throwable&quot;과 같은 원인을 발생 원인과 연관시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eb9adaf3b7e2f40fbde1879f520e8811bd797f68" translate="yes" xml:space="preserve">
          <source>A central authority generates parameters and gives them to the two entities seeking to generate a secret key. The parameters are a prime &lt;code&gt;p&lt;/code&gt;, a base &lt;code&gt;g&lt;/code&gt;, and optionally the length in bits of the private value, &lt;code&gt;l&lt;/code&gt;.</source>
          <target state="translated">중앙 권한은 매개 변수를 생성하고 비밀 키를 생성하려는 두 엔티티에 매개 변수를 제공합니다. 매개 변수는 소수 &lt;code&gt;p&lt;/code&gt; , 밑수 &lt;code&gt;g&lt;/code&gt; 및 선택적으로 개인 값 &lt;code&gt;l&lt;/code&gt; 의 비트 길이입니다 .</target>
        </trans-unit>
        <trans-unit id="b15f87ac85c08bc308c57b0713f245a6c447fad2" translate="yes" xml:space="preserve">
          <source>A certificate factory for X.509 must return certificates that are an instance of &lt;code&gt;java.security.cert.X509Certificate&lt;/code&gt;, and CRLs that are an instance of &lt;code&gt;java.security.cert.X509CRL&lt;/code&gt;.</source>
          <target state="translated">X. 509의 증명서 팩토리는의 인스턴스 인 증명서 돌려 줄 필요 &lt;code&gt;java.security.cert.X509Certificate&lt;/code&gt; 의 인스턴스이며, CRL을 &lt;code&gt;java.security.cert.X509CRL&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="d13204c98a6ed6a0090b39584fbff66ef2fd4ba5" translate="yes" xml:space="preserve">
          <source>A certificate path.</source>
          <target state="translated">인증서 경로.</target>
        </trans-unit>
        <trans-unit id="69bc8c8897a2aaa1567c6f12d93e327556a92e8e" translate="yes" xml:space="preserve">
          <source>A certificate policies extension, if present in an X.509 version 3 certificate, contains a sequence of one or more policy information terms, each of which consists of an object identifier (OID) and optional qualifiers. In an end-entity certificate, these policy information terms indicate the policy under which the certificate has been issued and the purposes for which the certificate may be used. In a CA certificate, these policy information terms limit the set of policies for certification paths which include this certificate.</source>
          <target state="translated">인증서 정책 확장 (X.509 버전 3 인증서에있는 경우)에는 하나 이상의 정책 정보 용어가 포함되어 있으며 각각은 OID (개체 식별자)와 선택적 한정자로 구성됩니다. 엔드 엔티티 인증서에서 이러한 정책 정보 용어는 인증서가 발급 된 정책 및 인증서 사용 목적을 나타냅니다. CA 인증서에서이 정책 정보 용어는이 인증서를 포함하는 인증 경로에 대한 정책 세트를 제한합니다.</target>
        </trans-unit>
        <trans-unit id="85319023e489273c315d40932bdf85cb3186c72f" translate="yes" xml:space="preserve">
          <source>A change flag indicates that the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; event was generated by a reparenting operation.</source>
          <target state="translated">변경 플래그는 상위 지정 작업에 의해 &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; 이벤트가 생성 되었음을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="bb2b625f6b484a7070cb6e62b9b33def551595c3" translate="yes" xml:space="preserve">
          <source>A change flag indicates that the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; event was generated due to the changing of the hierarchy displayability.</source>
          <target state="translated">변경 플래그는 계층 표시 가능성의 변경으로 인해 &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; 이벤트가 생성 되었음을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="837626a41ae79571ddaeb140f3b90f20eb1b3985" translate="yes" xml:space="preserve">
          <source>A change flag indicates that the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; event was generated due to the changing of the hierarchy displayability. To discern the current displayability of the hierarchy, call the &lt;code&gt;Component.isDisplayable&lt;/code&gt; method. Displayability changes occur in response to explicit or implicit calls of the &lt;code&gt;Component.addNotify&lt;/code&gt; and &lt;code&gt;Component.removeNotify&lt;/code&gt; methods.</source>
          <target state="translated">변경 플래그는 계층 표시 가능성의 변경으로 인해 &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; 이벤트가 생성 되었음을 나타냅니다 . 계층 구조의 현재 표시 가능성을 식별하려면 &lt;code&gt;Component.isDisplayable&lt;/code&gt; 메서드를 호출합니다 . 표시 가능성 변경은 &lt;code&gt;Component.addNotify&lt;/code&gt; 및 &lt;code&gt;Component.removeNotify&lt;/code&gt; 메서드 의 명시 적 또는 암시 적 호출에 대한 응답으로 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="5472c41138de79447fec8dc2fc20286b49ea8028" translate="yes" xml:space="preserve">
          <source>A change flag indicates that the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; event was generated due to the changing of the hierarchy showing state.</source>
          <target state="translated">변경 플래그는 상태를 표시하는 계층 구조의 변경으로 인해 &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; 이벤트가 생성 되었음을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="1cc8f0028793cf25800b99b5d052a1c9a42d1f0c" translate="yes" xml:space="preserve">
          <source>A change flag indicates that the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; event was generated due to the changing of the hierarchy showing state. To discern the current showing state of the hierarchy, call the &lt;code&gt;Component.isShowing&lt;/code&gt; method. Showing state changes occur when either the displayability or visibility of the hierarchy occurs. Visibility changes occur in response to explicit or implicit calls of the &lt;code&gt;Component.show&lt;/code&gt; and &lt;code&gt;Component.hide&lt;/code&gt; methods.</source>
          <target state="translated">변경 플래그는 상태를 표시하는 계층 구조의 변경으로 인해 &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; 이벤트가 생성 되었음을 나타냅니다 . 계층 구조의 현재 표시 상태를 식별하려면 &lt;code&gt;Component.isShowing&lt;/code&gt; 메서드를 호출합니다 . 상태 변경 표시는 계층의 표시 가능성 또는 가시성이 발생할 때 발생합니다. 가시성 변경은 &lt;code&gt;Component.show&lt;/code&gt; 및 &lt;code&gt;Component.hide&lt;/code&gt; 메서드 의 명시 적 또는 암시 적 호출에 대한 응답으로 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="12b7e0369567e0a42b4add2191ea7b355c8240c6" translate="yes" xml:space="preserve">
          <source>A change in the value of the nesting BeanContext property of this BeanContextChild may be vetoed by throwing the appropriate exception.</source>
          <target state="translated">이 BeanContextChild의 중첩 BeanContext 프로퍼티의 값의 변경은, 적절한 예외를 throw함으로써 거부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d72d29acf86e7702c32bda0ec435a23e72471262" translate="yes" xml:space="preserve">
          <source>A channel cannot be deregistered directly; instead, the key representing its registration must be</source>
          <target state="translated">채널은 직접 등록 취소 할 수 없습니다. 대신 등록을 나타내는 키는</target>
        </trans-unit>
        <trans-unit id="8d7e774f5d23e83f7b27801d7e8202ecdb67d702" translate="yes" xml:space="preserve">
          <source>A channel for a stream-oriented connecting socket</source>
          <target state="translated">스트림 지향 연결 소켓을위한 채널</target>
        </trans-unit>
        <trans-unit id="9e1601a8223fa155ec20c1df5e38f1e8f95ed05f" translate="yes" xml:space="preserve">
          <source>A channel for reading, writing, mapping, and manipulating a file.</source>
          <target state="translated">파일 읽기, 쓰기, 매핑 및 조작을위한 채널입니다.</target>
        </trans-unit>
        <trans-unit id="7af84c638e550c68636fe765e24dc5f5baf6f9db" translate="yes" xml:space="preserve">
          <source>A channel is either open or closed. A channel is open upon creation, and once closed it remains closed. Once a channel is closed, any attempt to invoke an I/O operation upon it will cause a &lt;a href=&quot;closedchannelexception&quot;&gt;&lt;code&gt;ClosedChannelException&lt;/code&gt;&lt;/a&gt; to be thrown. Whether or not a channel is open may be tested by invoking its &lt;a href=&quot;#isOpen()&quot;&gt;&lt;code&gt;isOpen&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">채널이 열려 있거나 닫혀 있습니다. 채널은 생성시 열리고 닫히면 닫힌 상태로 유지됩니다. 채널이 닫히면 I / O 작업을 호출하려고하면 &lt;a href=&quot;closedchannelexception&quot;&gt; &lt;code&gt;ClosedChannelException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다. 채널이 열려 있는지 여부는 &lt;a href=&quot;#isOpen()&quot;&gt; &lt;code&gt;isOpen&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하여 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9ac0c81f717986b03ee3daf2a9350d01082aa55a" translate="yes" xml:space="preserve">
          <source>A channel is either open or closed. A channel is open upon creation, and once closed it remains closed. Once a channel is closed, any attempt to invoke an I/O operation upon it will cause a &lt;a href=&quot;closedchannelexception&quot;&gt;&lt;code&gt;ClosedChannelException&lt;/code&gt;&lt;/a&gt; to be thrown. Whether or not a channel is open may be tested by invoking its &lt;a href=&quot;channel#isOpen--&quot;&gt;&lt;code&gt;isOpen&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">채널이 열려 있거나 닫혀 있습니다. 생성시 채널이 열리고 닫히면 채널이 닫힌 상태로 유지됩니다. 채널이 닫히면 I / O 작업을 호출하려고하면 &lt;a href=&quot;closedchannelexception&quot;&gt; &lt;code&gt;ClosedChannelException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. 채널이 열려 있는지 여부는 &lt;a href=&quot;channel#isOpen--&quot;&gt; &lt;code&gt;isOpen&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7bb5a0f968508f5be9958440240f5d1267c99a94" translate="yes" xml:space="preserve">
          <source>A channel may be registered at most once with any particular selector.</source>
          <target state="translated">채널은 특정 선택기로 최대 한 번 등록 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21fb8ef335a3687ca6d6626447bc68cde9a71bdf" translate="yes" xml:space="preserve">
          <source>A channel representing the readable end of a &lt;a href=&quot;pipe&quot;&gt;&lt;code&gt;Pipe&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pipe&quot;&gt; &lt;code&gt;Pipe&lt;/code&gt; &lt;/a&gt; 의 읽을 수있는 끝을 나타내는 채널 입니다.</target>
        </trans-unit>
        <trans-unit id="d85558a6843581591cf1be190cf66c79e3f828ac" translate="yes" xml:space="preserve">
          <source>A channel representing the writable end of a &lt;a href=&quot;pipe&quot;&gt;&lt;code&gt;Pipe&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pipe&quot;&gt; &lt;code&gt;Pipe&lt;/code&gt; &lt;/a&gt; 의 쓰기 가능한 끝을 나타내는 채널 입니다.</target>
        </trans-unit>
        <trans-unit id="70dc1aab8c52e3f7d92aa4d0c02a1489f7dbc0ea" translate="yes" xml:space="preserve">
          <source>A channel represents an open connection to an entity such as a hardware device, a file, a network socket, or a program component that is capable of performing one or more distinct I/O operations, for example reading or writing.</source>
          <target state="translated">채널은 하드웨어 장치, 파일, 네트워크 소켓 또는 하나 이상의 고유 한 I / O 작업 (예 : 읽기 또는 쓰기)을 수행 할 수있는 프로그램 구성 요소와 같은 엔터티에 대한 열린 연결을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b8fef62afdf0975eec2e59fb2c36004534d294f5" translate="yes" xml:space="preserve">
          <source>A channel supports asynchronous closing and interruption if, and only if, it implements this interface. This can be tested at runtime, if necessary, via the &lt;code&gt;instanceof&lt;/code&gt; operator.</source>
          <target state="translated">채널은이 인터페이스를 구현하는 경우에만 비동기 닫기 및 중단을 지원합니다. 필요한 경우 &lt;code&gt;instanceof&lt;/code&gt; 연산자 를 통해 런타임에 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fc0d5b76afd6f0f29b38f37a05ac0c3b9c5f72e6" translate="yes" xml:space="preserve">
          <source>A channel that can be asynchronously closed and interrupted.</source>
          <target state="translated">비동기 적으로 닫히고 중단 될 수있는 채널.</target>
        </trans-unit>
        <trans-unit id="59b7b7fac8ee9975147807e839aeb8fe38d241bb" translate="yes" xml:space="preserve">
          <source>A channel that can be multiplexed</source>
          <target state="translated">다중화 할 수있는 채널</target>
        </trans-unit>
        <trans-unit id="1214854eb0213a1ff43a9021db015696b91deec7" translate="yes" xml:space="preserve">
          <source>A channel that can be multiplexed via a &lt;a href=&quot;selector&quot;&gt;&lt;code&gt;Selector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;selector&quot;&gt; &lt;code&gt;Selector&lt;/code&gt; &lt;/a&gt; 를 통해 멀티플렉싱 할 수있는 채널 .</target>
        </trans-unit>
        <trans-unit id="800646be4ec902c097761409c9fd09caafb4a495" translate="yes" xml:space="preserve">
          <source>A channel that can read and write bytes.</source>
          <target state="translated">바이트를 읽고 쓸 수있는 채널.</target>
        </trans-unit>
        <trans-unit id="3a18d46d23ef0ee898d000c7fdbcf8d70cccbb4c" translate="yes" xml:space="preserve">
          <source>A channel that can read and write bytes. This interface simply unifies &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt;; it does not specify any new operations.</source>
          <target state="translated">바이트를 읽고 쓸 수있는 채널. 이 인터페이스는 단순히 &lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; 을&lt;/a&gt; 통합합니다 . 새로운 작업을 지정하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="42a631ef4c7905c22f79a70339587d209893d713" translate="yes" xml:space="preserve">
          <source>A channel that can read bytes into a sequence of buffers.</source>
          <target state="translated">일련의 버퍼로 바이트를 읽을 수있는 채널.</target>
        </trans-unit>
        <trans-unit id="ecb9b303f470a97f2f08805d8d8c94b642db6ff2" translate="yes" xml:space="preserve">
          <source>A channel that can read bytes.</source>
          <target state="translated">바이트를 읽을 수있는 채널.</target>
        </trans-unit>
        <trans-unit id="95845315fdbf28ed7bd0ae0197a23b2ef4a4b208" translate="yes" xml:space="preserve">
          <source>A channel that can write bytes from a sequence of buffers.</source>
          <target state="translated">일련의 버퍼에서 바이트를 쓸 수있는 채널.</target>
        </trans-unit>
        <trans-unit id="8f098a9ecf20dc34b289410aad7ca21436a5b36f" translate="yes" xml:space="preserve">
          <source>A channel that can write bytes.</source>
          <target state="translated">바이트를 쓸 수있는 채널.</target>
        </trans-unit>
        <trans-unit id="b4efac3fa36ee432ca8226ac9cfe90afc82a7eaa" translate="yes" xml:space="preserve">
          <source>A channel that implements this interface is</source>
          <target state="translated">이 인터페이스를 구현하는 채널은</target>
        </trans-unit>
        <trans-unit id="9de1e12b8a7a8c3fb32ce8821603d037f0633115" translate="yes" xml:space="preserve">
          <source>A channel that implements this interface is &lt;em&gt;asynchronously closeable&lt;/em&gt;: If an I/O operation is outstanding on the channel and the channel's &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method is invoked, then the I/O operation fails with the exception &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스를 구현하는 채널은 &lt;em&gt;비동기식으로 &lt;/em&gt;&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; . 채널에서 I / O 작업이 미해결 상태이고 채널의 close 메서드가 호출되면 I / O 작업이 &lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; &lt;/a&gt; 예외와 함께 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="5b097b4ced43ca741c0e40c7c3e34b41dfce4add" translate="yes" xml:space="preserve">
          <source>A channel that implements this interface is &lt;em&gt;asynchronously closeable&lt;/em&gt;: If an I/O operation is outstanding on the channel and the channel's &lt;a href=&quot;asynchronouschannel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method is invoked, then the I/O operation fails with the exception &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스를 구현하는 채널은 &lt;em&gt;비동기 적으로 &lt;/em&gt;&lt;a href=&quot;asynchronouschannel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;&lt;em&gt; 수 있습니다&lt;/em&gt; . I / O 조작이 채널에서 처리되지 않고 채널의 close 메소드가 호출되면 &lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; &lt;/a&gt; 예외와 함께 I / O 조작이 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="90dcd4176d9405a8587e9db345ff7af48f1eba63" translate="yes" xml:space="preserve">
          <source>A channel that implements this interface is a channel to a network socket. The &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method is used to bind the socket to a local &lt;a href=&quot;../../net/socketaddress&quot;&gt;&lt;code&gt;address&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#getLocalAddress()&quot;&gt;&lt;code&gt;getLocalAddress&lt;/code&gt;&lt;/a&gt; method returns the address that the socket is bound to, and the &lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getOption(java.net.SocketOption)&quot;&gt;&lt;code&gt;getOption&lt;/code&gt;&lt;/a&gt; methods are used to set and query socket options. An implementation of this interface should specify the socket options that it supports.</source>
          <target state="translated">이 인터페이스를 구현하는 채널은 네트워크 소켓에 대한 채널입니다. &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 방법은 지역에 소켓을 바인딩하는 데 사용되는 &lt;a href=&quot;../../net/socketaddress&quot;&gt; &lt;code&gt;address&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;#getLocalAddress()&quot;&gt; &lt;code&gt;getLocalAddress&lt;/code&gt; 의&lt;/a&gt; 방법은 소켓이 바인딩되는 주소 및 반환 &lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; &lt;/a&gt; 하고 &lt;a href=&quot;#getOption(java.net.SocketOption)&quot;&gt; &lt;code&gt;getOption&lt;/code&gt; &lt;/a&gt; 방법은 세트와 쿼리 소켓 옵션에 사용됩니다. 이 인터페이스의 구현은 지원하는 소켓 옵션을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="d5b8a450c6a26f4e50db17fd5ebc4459ce7d7949" translate="yes" xml:space="preserve">
          <source>A channel that implements this interface is a channel to a network socket. The &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method is used to bind the socket to a local &lt;a href=&quot;../../net/socketaddress&quot;&gt;&lt;code&gt;address&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;networkchannel#getLocalAddress--&quot;&gt;&lt;code&gt;getLocalAddress&lt;/code&gt;&lt;/a&gt; method returns the address that the socket is bound to, and the &lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;networkchannel#getOption-java.net.SocketOption-&quot;&gt;&lt;code&gt;getOption&lt;/code&gt;&lt;/a&gt; methods are used to set and query socket options. An implementation of this interface should specify the socket options that it supports.</source>
          <target state="translated">이 인터페이스를 구현하는 채널은 네트워크 소켓에 대한 채널입니다. &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 방법은 지역에 소켓을 바인딩하는 데 사용되는 &lt;a href=&quot;../../net/socketaddress&quot;&gt; &lt;code&gt;address&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;networkchannel#getLocalAddress--&quot;&gt; &lt;code&gt;getLocalAddress&lt;/code&gt; 의&lt;/a&gt; 방법은 소켓이 바인딩되는 주소 및 반환 &lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; &lt;/a&gt; 하고 &lt;a href=&quot;networkchannel#getOption-java.net.SocketOption-&quot;&gt; &lt;code&gt;getOption&lt;/code&gt; &lt;/a&gt; 방법은 세트와 쿼리 소켓 옵션에 사용됩니다. 이 인터페이스의 구현은 지원하는 소켓 옵션을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="9b4ffd0b00aae234d34f01c53dd96dc57bf6b6e0" translate="yes" xml:space="preserve">
          <source>A channel that implements this interface is also</source>
          <target state="translated">이 인터페이스를 구현하는 채널도</target>
        </trans-unit>
        <trans-unit id="d9796e052a0f539e5d20f76e2665722b23b84065" translate="yes" xml:space="preserve">
          <source>A channel that supports asynchronous I/O operations.</source>
          <target state="translated">비동기 I / O 작업을 지원하는 채널입니다.</target>
        </trans-unit>
        <trans-unit id="191edb71e4e511906b4a3aabedb3d6703cb5257a" translate="yes" xml:space="preserve">
          <source>A channel that supports asynchronous I/O operations. Asynchronous I/O operations will usually take one of two forms:</source>
          <target state="translated">비동기 I / O 작업을 지원하는 채널입니다. 비동기 I / O 작업은 일반적으로 다음 두 가지 형식 중 하나를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="9ed40df29696c88e6c71549b1c57172f2535d2e1" translate="yes" xml:space="preserve">
          <source>A channel to a datagram-oriented socket</source>
          <target state="translated">데이터 그램 지향 소켓에 대한 채널</target>
        </trans-unit>
        <trans-unit id="8dd23ea95fe683f2446dc0f81225ff9c1aa46c49" translate="yes" xml:space="preserve">
          <source>A channel to a network socket</source>
          <target state="translated">네트워크 소켓에 대한 채널</target>
        </trans-unit>
        <trans-unit id="0b7fadce40dec6dc50b0937f58a33b6784464fad" translate="yes" xml:space="preserve">
          <source>A channel to a network socket.</source>
          <target state="translated">네트워크 소켓에 대한 채널.</target>
        </trans-unit>
        <trans-unit id="fba973fb0458ecef3b4ce50b17afa170ef7b7640" translate="yes" xml:space="preserve">
          <source>A channel to a stream-oriented listening socket</source>
          <target state="translated">스트림 지향 청취 소켓에 대한 채널</target>
        </trans-unit>
        <trans-unit id="db20aa88a7238119d3ad50b601b0e37532ec55a6" translate="yes" xml:space="preserve">
          <source>A char buffer containing the decoded characters</source>
          <target state="translated">디코딩 된 문자를 포함하는 문자 버퍼</target>
        </trans-unit>
        <trans-unit id="f83ee77e42e8490f810288c59eb103b9eb63a96e" translate="yes" xml:space="preserve">
          <source>A char buffer is not comparable to any other type of object.</source>
          <target state="translated">char 버퍼는 다른 유형의 객체와 비교할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="bc1b6b1c3f1c52066b1cf54b29319071b3f900d3" translate="yes" xml:space="preserve">
          <source>A char buffer is not equal to any other type of object.</source>
          <target state="translated">char 버퍼는 다른 유형의 객체와 같지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c92b2e8ed081e77f9fb1315da995d59a732735d8" translate="yes" xml:space="preserve">
          <source>A char buffer.</source>
          <target state="translated">문자 버퍼</target>
        </trans-unit>
        <trans-unit id="4b1521bc66da3c7b406225d686d4a3b8aab6e713" translate="yes" xml:space="preserve">
          <source>A char value is a surrogate code unit if and only if it is either a &lt;a href=&quot;#isLowSurrogate(char)&quot;&gt;low-surrogate code unit&lt;/a&gt; or a &lt;a href=&quot;#isHighSurrogate(char)&quot;&gt;high-surrogate code unit&lt;/a&gt;.</source>
          <target state="translated">char 값은 &lt;a href=&quot;#isLowSurrogate(char)&quot;&gt;하위 대리 코드 단위&lt;/a&gt; 또는 &lt;a href=&quot;#isHighSurrogate(char)&quot;&gt;상위&lt;/a&gt; 대리 코드 단위 인 경우에만 대리 코드 단위 입니다.</target>
        </trans-unit>
        <trans-unit id="b747af939ee20ee5f1cd9aefd76c5b5096a87a8b" translate="yes" xml:space="preserve">
          <source>A char value is a surrogate code unit if and only if it is either a &lt;a href=&quot;character#isLowSurrogate-char-&quot;&gt;low-surrogate code unit&lt;/a&gt; or a &lt;a href=&quot;character#isHighSurrogate-char-&quot;&gt;high-surrogate code unit&lt;/a&gt;.</source>
          <target state="translated">숯불 값 대리 코드 유닛 인 경우에만 그것이 어느 경우 &lt;a href=&quot;character#isLowSurrogate-char-&quot;&gt;낮은 대리 코드 부&lt;/a&gt; 또는 &lt;a href=&quot;character#isHighSurrogate-char-&quot;&gt;고 대리 코드 유닛&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d41302344e7fbbca3b8d487f3516ee3b89ee120f" translate="yes" xml:space="preserve">
          <source>A character array containing the password or passphrase read from the console, not including any line-termination characters, or &lt;code&gt;null&lt;/code&gt; if an end of stream has been reached.</source>
          <target state="translated">콘솔에서 읽은 비밀번호 또는 비밀번호 문구가 포함 된 문자 배열 (줄 ​​종결 문자는 포함하지 않음) 또는 스트림 끝에 도달 한 경우 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="86592acb8a1516339482f65b9fe9fea4d5b1cbbf" translate="yes" xml:space="preserve">
          <source>A character in the Greek block (&lt;a href=&quot;#ubc&quot;&gt;block&lt;/a&gt;)</source>
          <target state="translated">그리스어 블록의 문자 ( &lt;a href=&quot;#ubc&quot;&gt;block&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="43025dbde61ef9eae4dedd1a09f0b0781d452fd0" translate="yes" xml:space="preserve">
          <source>A character is</source>
          <target state="translated">캐릭터는</target>
        </trans-unit>
        <trans-unit id="cb0553deb810e8d6dd8f9d602644b698eec9741e" translate="yes" xml:space="preserve">
          <source>A character is a digit if its general category type, provided by &lt;a href=&quot;#getType(int)&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;DECIMAL_DIGIT_NUMBER&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#getType(int)&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt; 에서 제공하는 일반 카테고리 유형 이 &lt;code&gt;DECIMAL_DIGIT_NUMBER&lt;/code&gt; 인 경우 문자는 숫자 입니다.</target>
        </trans-unit>
        <trans-unit id="7f4ce8079139a88322f4ae2aba1220448793d458" translate="yes" xml:space="preserve">
          <source>A character is a digit if its general category type, provided by &lt;a href=&quot;character#getType-int-&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;DECIMAL_DIGIT_NUMBER&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;character#getType-int-&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt; 의해 제공되는 일반 카테고리 유형 이 &lt;code&gt;DECIMAL_DIGIT_NUMBER&lt;/code&gt; 인 경우 문자는 숫자 입니다.</target>
        </trans-unit>
        <trans-unit id="fdd1a754889230886d0a4a8fb8d9c2f75250cd5a" translate="yes" xml:space="preserve">
          <source>A character is a digit if its general category type, provided by &lt;code&gt;Character.getType(ch)&lt;/code&gt;, is &lt;code&gt;DECIMAL_DIGIT_NUMBER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Character.getType(ch)&lt;/code&gt; 의해 제공되는 일반 카테고리 유형 이 &lt;code&gt;DECIMAL_DIGIT_NUMBER&lt;/code&gt; 인 경우 문자는 숫자 입니다.</target>
        </trans-unit>
        <trans-unit id="86596435c2b454f09594fe7bcb120fdcbf6b33f8" translate="yes" xml:space="preserve">
          <source>A character is a titlecase character if its general category type, provided by &lt;a href=&quot;#getType(int)&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;TITLECASE_LETTER&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#getType(int)&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt; 에서 제공하는 일반 카테고리 유형 이 &lt;code&gt;TITLECASE_LETTER&lt;/code&gt; 인 경우 문자는 제목 케이스 문자 입니다.</target>
        </trans-unit>
        <trans-unit id="ed0b005fbc298f5a0e45fbdd786dd40107520eed" translate="yes" xml:space="preserve">
          <source>A character is a titlecase character if its general category type, provided by &lt;a href=&quot;character#getType-int-&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;TITLECASE_LETTER&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;character#getType-int-&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt; 의해 제공되는 일반 카테고리 유형 이 &lt;code&gt;TITLECASE_LETTER&lt;/code&gt; 인 경우 문자는 제목 케이스 문자 입니다.</target>
        </trans-unit>
        <trans-unit id="40b7e7e298658479c6f67b4c32be450022509975" translate="yes" xml:space="preserve">
          <source>A character is a titlecase character if its general category type, provided by &lt;code&gt;Character.getType(ch)&lt;/code&gt;, is &lt;code&gt;TITLECASE_LETTER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Character.getType(ch)&lt;/code&gt; 의해 제공되는 일반 카테고리 유형 이 &lt;code&gt;TITLECASE_LETTER&lt;/code&gt; 인 경우 문자는 제목 케이스 문자 입니다.</target>
        </trans-unit>
        <trans-unit id="9e7bd610b8db92391f43cfc39a18c3845bd141e6" translate="yes" xml:space="preserve">
          <source>A character is considered to be a letter if its general category type, provided by &lt;a href=&quot;#getType(int)&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is any of the following:</source>
          <target state="translated">문자는 &lt;a href=&quot;#getType(int)&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt; 에서 제공하는 일반 범주 유형 이 다음 중 하나 인 경우 문자로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="b3e93e58c4c08afdd56f97246f883396140cfeb6" translate="yes" xml:space="preserve">
          <source>A character is considered to be a letter if its general category type, provided by &lt;a href=&quot;character#getType-int-&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is any of the following:</source>
          <target state="translated">&lt;a href=&quot;character#getType-int-&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt; 의해 제공되는 일반 카테고리 유형 이 다음 중 하나 인 경우 문자는 문자로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="cfd74a58d4f3e068c12a4637ed1ea71a70c63fca" translate="yes" xml:space="preserve">
          <source>A character is considered to be a letter if its general category type, provided by &lt;code&gt;Character.getType(ch)&lt;/code&gt;, is any of the following:</source>
          <target state="translated">&lt;code&gt;Character.getType(ch)&lt;/code&gt; 의해 제공되는 일반 카테고리 유형 이 다음 중 하나 인 경우 문자는 문자로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="eb9be73ffc1dba87de77bf2d3f3de709be554f21" translate="yes" xml:space="preserve">
          <source>A character is considered to be a letter or digit if either &lt;a href=&quot;#isLetter(int)&quot;&gt;&lt;code&gt;isLetter(codePoint)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#isDigit(int)&quot;&gt;&lt;code&gt;isDigit(codePoint)&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt; for the character.</source>
          <target state="translated">&lt;a href=&quot;#isLetter(int)&quot;&gt; &lt;code&gt;isLetter(codePoint)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#isDigit(int)&quot;&gt; &lt;code&gt;isDigit(codePoint)&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;true&lt;/code&gt; 문자에 대해 true 를 리턴하는 경우 문자는 문자 또는 숫자로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="257a1fc191243a38382ed54b91922f94818951c2" translate="yes" xml:space="preserve">
          <source>A character is considered to be a letter or digit if either &lt;a href=&quot;character#isLetter-int-&quot;&gt;&lt;code&gt;isLetter(codePoint)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;character#isDigit-int-&quot;&gt;&lt;code&gt;isDigit(codePoint)&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt; for the character.</source>
          <target state="translated">문자에 대해 &lt;a href=&quot;character#isLetter-int-&quot;&gt; &lt;code&gt;isLetter(codePoint)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;character#isDigit-int-&quot;&gt; &lt;code&gt;isDigit(codePoint)&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;true&lt;/code&gt; 를 리턴 하면 문자 는 문자 또는 숫자로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="56e9e520047941ac231e484f638ee37ff36c4c23" translate="yes" xml:space="preserve">
          <source>A character is considered to be a letter or digit if either &lt;code&gt;Character.isLetter(char ch)&lt;/code&gt; or &lt;code&gt;Character.isDigit(char ch)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; for the character.</source>
          <target state="translated">&lt;code&gt;Character.isLetter(char ch)&lt;/code&gt; 또는 &lt;code&gt;Character.isDigit(char ch)&lt;/code&gt; 가 문자에 대해 &lt;code&gt;true&lt;/code&gt; 를 리턴 하면 문자 는 문자 또는 숫자로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="2d4c273187e4ccb1b8ec6cc8e1f191b5bd57f64c" translate="yes" xml:space="preserve">
          <source>A character is considered to be alphabetic if its general category type, provided by &lt;a href=&quot;#getType(int)&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is any of the following:</source>
          <target state="translated">&lt;a href=&quot;#getType(int)&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt; 에서 제공하는 일반 범주 유형 이 다음 중 하나 인 경우 문자는 알파벳으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="1daab1c6e481dada609c883697d804983fd2e80e" translate="yes" xml:space="preserve">
          <source>A character is considered to be alphabetic if its general category type, provided by &lt;a href=&quot;character#getType-int-&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is any of the following:</source>
          <target state="translated">&lt;a href=&quot;character#getType-int-&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt; 의해 제공되는 일반 카테고리 유형 이 다음 중 하나 인 경우 문자는 알파벳으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="846ad6665f9e9112c25d9f35739a2d02161fe462" translate="yes" xml:space="preserve">
          <source>A character is defined if at least one of the following is true:</source>
          <target state="translated">다음 중 하나 이상에 해당하면 문자가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="ea5a7550d236465222599d48f08d22aa0cb71565" translate="yes" xml:space="preserve">
          <source>A character is lowercase if its general category type, provided by &lt;a href=&quot;#getType(char)&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;LOWERCASE_LETTER&lt;/code&gt;, or it has contributory property Other_Lowercase as defined by the Unicode Standard.</source>
          <target state="translated">&lt;a href=&quot;#getType(char)&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt; 에서 제공하는 일반 범주 유형 이 &lt;code&gt;LOWERCASE_LETTER&lt;/code&gt; 이거나 유니 코드 표준에서 정의한 기여 속성 Other_Lowercase가있는 경우 문자는 소문자 입니다.</target>
        </trans-unit>
        <trans-unit id="7b4fe37a529ecb9e0094fe32d5a9d41a0084dcdd" translate="yes" xml:space="preserve">
          <source>A character is lowercase if its general category type, provided by &lt;a href=&quot;character#getType-char-&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;LOWERCASE_LETTER&lt;/code&gt;, or it has contributory property Other_Lowercase as defined by the Unicode Standard.</source>
          <target state="translated">&lt;a href=&quot;character#getType-char-&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt; 의해 제공되는 일반 카테고리 유형 이 &lt;code&gt;LOWERCASE_LETTER&lt;/code&gt; 이거나 유니 코드 표준에 의해 정의 된 컨트 리뷰 션 특성 Other_Lowercase를 갖는 경우 문자는 소문자 입니다.</target>
        </trans-unit>
        <trans-unit id="770ed3a3b7a1750f819b0f53d78ab4e560573022" translate="yes" xml:space="preserve">
          <source>A character is lowercase if its general category type, provided by &lt;code&gt;Character.getType(ch)&lt;/code&gt;, is &lt;code&gt;LOWERCASE_LETTER&lt;/code&gt;, or it has contributory property Other_Lowercase as defined by the Unicode Standard.</source>
          <target state="translated">&lt;code&gt;Character.getType(ch)&lt;/code&gt; 의해 제공되는 일반 카테고리 유형 이 &lt;code&gt;LOWERCASE_LETTER&lt;/code&gt; 이거나 유니 코드 표준에 의해 정의 된 컨트 리뷰 션 특성 Other_Lowercase를 갖는 경우 문자는 소문자 입니다.</target>
        </trans-unit>
        <trans-unit id="eec0334e27b2f98bcaa2468f12171e3996f3bb46" translate="yes" xml:space="preserve">
          <source>A character is uppercase if its general category type, provided by &lt;a href=&quot;#getType(int)&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;UPPERCASE_LETTER&lt;/code&gt;, or it has contributory property Other_Uppercase as defined by the Unicode Standard.</source>
          <target state="translated">&lt;a href=&quot;#getType(int)&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt; 에서 제공하는 일반 범주 유형 이 &lt;code&gt;UPPERCASE_LETTER&lt;/code&gt; 이거나 유니 코드 표준에 정의 된 기여 속성 Other_Uppercase가있는 경우 문자는 대문자 입니다.</target>
        </trans-unit>
        <trans-unit id="a03c0a4129a458c83450c7f6d5b8a7d9f5975f99" translate="yes" xml:space="preserve">
          <source>A character is uppercase if its general category type, provided by &lt;a href=&quot;character#getType-int-&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;UPPERCASE_LETTER&lt;/code&gt;, or it has contributory property Other_Uppercase as defined by the Unicode Standard.</source>
          <target state="translated">&lt;a href=&quot;character#getType-int-&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt; 의해 제공되는 일반 카테고리 유형 이 &lt;code&gt;UPPERCASE_LETTER&lt;/code&gt; 이거나 유니 코드 표준에 의해 정의 된대로 기여 특성 Other_Uppercase를 갖는 경우 문자는 대문자 입니다.</target>
        </trans-unit>
        <trans-unit id="691356a97a7e1df0d7387885124751d46be64f49" translate="yes" xml:space="preserve">
          <source>A character is uppercase if its general category type, provided by &lt;code&gt;Character.getType(ch)&lt;/code&gt;, is &lt;code&gt;UPPERCASE_LETTER&lt;/code&gt;. or it has contributory property Other_Uppercase as defined by the Unicode Standard.</source>
          <target state="translated">&lt;code&gt;Character.getType(ch)&lt;/code&gt; 의해 제공되는 일반 카테고리 유형 이 &lt;code&gt;UPPERCASE_LETTER&lt;/code&gt; 인 경우문자 는 대문자 입니다. 또는 유니 코드 표준에 의해 정의 된 컨트 리뷰 션 특성 Other_Uppercase를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="3e6d561d343a7744b12d7a0fc05b3bcf33b29211" translate="yes" xml:space="preserve">
          <source>A character may be part of a Java identifier if and only if any of the following are true:</source>
          <target state="translated">다음 중 하나에 해당하는 경우에만 문자가 Java 식별자의 일부일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d03aa6ebaecd70cf74508561b81aa7dff281fc5" translate="yes" xml:space="preserve">
          <source>A character may be part of a Java identifier if and only if one of the following conditions is true:</source>
          <target state="translated">다음 조건 중 하나가 참인 경우에만 문자가 Java 식별자의 일부가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ac0fb63df90ee768362eb2ea36be06b1c3ba9f2" translate="yes" xml:space="preserve">
          <source>A character may be part of a Java identifier if any of the following are true:</source>
          <target state="translated">다음 중 하나에 해당하면 문자가 Java 식별자의 일부일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d681d7b226cccb4843f419f5ed003d0a55f37320" translate="yes" xml:space="preserve">
          <source>A character may be part of a Java identifier if any of the following conditions are true:</source>
          <target state="translated">다음 조건 중 하나라도 참인 경우 문자는 Java 식별자의 일부가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d4c6b2fd3ac5173e7a35051a02bcb5aca73d33c" translate="yes" xml:space="preserve">
          <source>A character may be part of a Unicode identifier if and only if one of the following statements is true:</source>
          <target state="translated">다음 명령문 중 하나에 해당하는 경우에만 문자가 유니 코드 식별자의 일부일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6acb9fd8c4c0db766c6d1bcd34828dc2a4ff4f1b" translate="yes" xml:space="preserve">
          <source>A character may start a Java identifier if and only if one of the following conditions is true:</source>
          <target state="translated">다음 조건 중 하나에 해당하는 경우에만 문자가 Java 식별자를 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3fada3cffc279f5988b5a9f5e97628c24a2aa3eb" translate="yes" xml:space="preserve">
          <source>A character may start a Java identifier if and only if one of the following is true:</source>
          <target state="translated">다음 중 하나에 해당하는 경우에만 문자가 Java 식별자를 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8765bea07151f2ce322c2b3d88588b5932784a7e" translate="yes" xml:space="preserve">
          <source>A character may start a Unicode identifier if and only if one of the following conditions is true:</source>
          <target state="translated">다음 조건 중 하나에 해당하는 경우에만 문자가 유니 코드 식별자를 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="691511f32534c704fa5a722392a9bc0eb20fb683" translate="yes" xml:space="preserve">
          <source>A character stream that collects its output in a string buffer, which can then be used to construct a string.</source>
          <target state="translated">문자열 버퍼에서 출력을 수집하여 문자열을 구성하는 데 사용할 수있는 문자 스트림입니다.</target>
        </trans-unit>
        <trans-unit id="6e7b08f91b89d317251e96eea88d34f90455c7a7" translate="yes" xml:space="preserve">
          <source>A character stream whose source is a string.</source>
          <target state="translated">소스가 문자열 인 문자 스트림.</target>
        </trans-unit>
        <trans-unit id="d75764e4070dffd8fcb663eb5024c4e2583781ea" translate="yes" xml:space="preserve">
          <source>A character-stream reader that allows characters to be pushed back into the stream.</source>
          <target state="translated">문자를 스트림으로 다시 밀어 넣을 수있는 문자 스트림 판독기입니다.</target>
        </trans-unit>
        <trans-unit id="7e71cb0a066a90cfe9e8b1752b6cfd83166a3957" translate="yes" xml:space="preserve">
          <source>A charset</source>
          <target state="translated">문자셋</target>
        </trans-unit>
        <trans-unit id="d22770c7dbf1fb019d5babc9504c5657e1aba041" translate="yes" xml:space="preserve">
          <source>A charset coder, that is, either a decoder or an encoder, consumes bytes (or characters) from an input buffer, translates them, and writes the resulting characters (or bytes) to an output buffer. A coding process terminates for one of four categories of reasons, which are described by instances of this class:</source>
          <target state="translated">문자 세트 코더, 즉 디코더 또는 인코더는 입력 버퍼에서 바이트 (또는 문자)를 소비하고 변환하여 결과 문자 (또는 바이트)를 출력 버퍼에 씁니다. 코딩 프로세스는 다음과 같은 4 가지 범주 중 하나의 이유로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="bcd0ab276ddc94d3bcc05a6158cfcc333e771240" translate="yes" xml:space="preserve">
          <source>A charset name must begin with either a letter or a digit. The empty string is not a legal charset name. Charset names are not case-sensitive; that is, case is always ignored when comparing charset names. Charset names generally follow the conventions documented in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2278.txt&quot;&gt;&lt;i&gt;RFC 2278: IANA Charset Registration Procedures&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">문자 세트 이름은 문자 나 숫자로 시작해야합니다. 빈 문자열은 유효한 문자셋 이름이 아닙니다. 문자셋 이름은 대소 문자를 구분하지 않습니다. 즉, 문자 세트 이름을 비교할 때 대소 문자는 항상 무시됩니다. 문자 세트 이름은 일반적으로 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2278.txt&quot;&gt;&lt;i&gt;RFC 2278 : IANA 문자 세트 등록 절차에&lt;/i&gt;&lt;/a&gt; 설명 된 규칙을 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="4fe6216b2b6912b763b72e1be7ba9f4eee5aa678" translate="yes" xml:space="preserve">
          <source>A charset object for the default charset</source>
          <target state="translated">기본 캐릭터 셋의 캐릭터 셋 객체</target>
        </trans-unit>
        <trans-unit id="21f8395adeb2457ad7d39af82263c878f2937a8d" translate="yes" xml:space="preserve">
          <source>A charset object for the named charset</source>
          <target state="translated">명명 된 캐릭터 세트의 캐릭터 세트 객체</target>
        </trans-unit>
        <trans-unit id="18bb2c3bab5292ed8acddebeb49d66ce2ec77bbb" translate="yes" xml:space="preserve">
          <source>A charset object for the named charset, or &lt;code&gt;null&lt;/code&gt; if the named charset is not supported by this provider</source>
          <target state="translated">명명 된 캐릭터 세트의 캐릭터 세트 객체. 이 프로 바이더가 명명 된 캐릭터 세트를 지원하지 않는 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb32edc10313e3f65dbd9b8601d559d2295da0ed" translate="yes" xml:space="preserve">
          <source>A charset provider identifies itself with a provider-configuration file named &lt;code&gt;java.nio.charset.spi.CharsetProvider&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;. The file should contain a list of fully-qualified concrete charset-provider class names, one per line. A line is terminated by any one of a line feed (&lt;code&gt;'\n'&lt;/code&gt;), a carriage return (&lt;code&gt;'\r'&lt;/code&gt;), or a carriage return followed immediately by a line feed. Space and tab characters surrounding each name, as well as blank lines, are ignored. The comment character is &lt;code&gt;'#'&lt;/code&gt; (&lt;code&gt;'\u0023'&lt;/code&gt;); on each line all characters following the first comment character are ignored. The file must be encoded in UTF-8.</source>
          <target state="translated">문자 세트 제공자 는 자원 디렉토리 &lt;code&gt;META-INF/services&lt;/code&gt; 에있는 &lt;code&gt;java.nio.charset.spi.CharsetProvider&lt;/code&gt; 라는 제공자 구성 파일로 자신을 식별합니다 . 파일에는 한 줄에 하나씩 정규화 된 구체적 문자셋 공급자 클래스 이름 목록이 포함되어야합니다. 줄 바꿈 ( &lt;code&gt;'\n'&lt;/code&gt; ), 캐리지 리턴 ( &lt;code&gt;'\r'&lt;/code&gt; ) 또는 캐리지 리턴 바로 다음에 줄 바꿈이 있으면 줄이 종료됩니다 . 빈 줄뿐만 아니라 각 이름을 둘러싼 공백과 탭 문자는 무시됩니다. 주석 문자는 &lt;code&gt;'#'&lt;/code&gt; ( &lt;code&gt;'\u0023'&lt;/code&gt; )입니다. 각 줄에서 첫 번째 주석 문자 다음의 모든 문자는 무시됩니다. 파일은 UTF-8로 인코딩되어야합니다.</target>
        </trans-unit>
        <trans-unit id="3bb5f8d2cb453a6dc7cf144db31f427c7be37ff5" translate="yes" xml:space="preserve">
          <source>A charset provider is a concrete subclass of this class that has a zero-argument constructor and some number of associated charset implementation classes. Charset providers may be installed in an instance of the Java platform as extensions, that is, jar files placed into any of the usual extension directories. Providers may also be made available by adding them to the applet or application class path or by some other platform-specific means. Charset providers are looked up via the current thread's &lt;a href=&quot;../../../lang/thread#getContextClassLoader--&quot;&gt;&lt;code&gt;context class
 loader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">캐릭터 세트 프로 바이더는 인수 없음의 생성자와 몇 개의 관련 캐릭터 세트 구현 클래스를 가지는이 클래스의 구상 서브 클래스입니다. 문자 세트 제공자는 Java 플랫폼의 인스턴스에 확장, 즉 일반적인 확장 디렉토리에 배치 된 jar 파일로 설치 될 수 있습니다. 애플릿이나 응용 프로그램 클래스 경로에 추가하거나 다른 플랫폼 별 수단으로 공급자를 제공 할 수도 있습니다. 문자셋 제공자는 현재 스레드의 &lt;a href=&quot;../../../lang/thread#getContextClassLoader--&quot;&gt; &lt;code&gt;context class loader&lt;/code&gt; &lt;/a&gt; 를 통해 조회됩니다 .</target>
        </trans-unit>
        <trans-unit id="fcdd4387e1735ee181ae70c77eedb02f69bb3a74" translate="yes" xml:space="preserve">
          <source>A charset provider is a concrete subclass of this class that has a zero-argument constructor and some number of associated charset implementation classes. Charset providers may be installed in an instance of the Java platform as extensions. Providers may also be made available by adding them to the applet or application class path or by some other platform-specific means. Charset providers are looked up via the current thread's &lt;a href=&quot;../../../lang/thread#getContextClassLoader()&quot;&gt;&lt;code&gt;context class
 loader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">문자 집합 공급자는 인수가없는 생성자와 몇 가지 관련 문자 집합 구현 클래스가있는이 클래스의 구체적인 하위 클래스입니다. 문자셋 공급자는 확장으로 Java 플랫폼의 인스턴스에 설치할 수 있습니다. 공급자는 애플릿 또는 응용 프로그램 클래스 경로에 추가하거나 다른 플랫폼 별 수단을 통해 사용할 수도 있습니다. Charset 공급자는 현재 스레드의 &lt;a href=&quot;../../../lang/thread#getContextClassLoader()&quot;&gt; &lt;code&gt;context class loader&lt;/code&gt; &lt;/a&gt; 를 통해 조회됩니다 .</target>
        </trans-unit>
        <trans-unit id="9d6dc81ecb99a6a83dfb6cadac6c7fa6effcc17c" translate="yes" xml:space="preserve">
          <source>A check box is a graphical component that can be in either an &quot;on&quot; (&lt;code&gt;true&lt;/code&gt;) or &quot;off&quot; (&lt;code&gt;false&lt;/code&gt;) state.</source>
          <target state="translated">확인란은 &quot;on&quot;( &lt;code&gt;true&lt;/code&gt; ) 또는 &quot;off&quot;( &lt;code&gt;false&lt;/code&gt; ) 상태 일 수있는 그래픽 구성 요소입니다 .</target>
        </trans-unit>
        <trans-unit id="66ae41487fb0f59ebd90709f08e9e6d7764b16f8" translate="yes" xml:space="preserve">
          <source>A check box is a graphical component that can be in either an &quot;on&quot; (&lt;code&gt;true&lt;/code&gt;) or &quot;off&quot; (&lt;code&gt;false&lt;/code&gt;) state. Clicking on a check box changes its state from &quot;on&quot; to &quot;off,&quot; or from &quot;off&quot; to &quot;on.&quot;</source>
          <target state="translated">확인란은 &quot;on&quot;( &lt;code&gt;true&lt;/code&gt; ) 또는 &quot;off&quot;( &lt;code&gt;false&lt;/code&gt; ) 상태 일 수있는 그래픽 구성 요소입니다 . 확인란을 클릭하면 상태가 &quot;on&quot;에서 &quot;off&quot;로 또는 &quot;off&quot;에서 &quot;on&quot;으로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="fc996ae529d54a16a993527ce6766ddeeb05b1e1" translate="yes" xml:space="preserve">
          <source>A choice that can be checked or unchecked and provides a separate indicator for the current state.</source>
          <target state="translated">선택하거나 선택 취소 할 수 있으며 현재 상태에 대한 별도의 표시기를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ece31ac787ed07fbedfac8cb5253447ae75ba96a" translate="yes" xml:space="preserve">
          <source>A class &lt;code&gt;Foo&lt;/code&gt; wishing to access preferences pertaining to its package can obtain a preference node as follows:</source>
          <target state="translated">패키지와 관련된 환경 설정에 액세스하려는 &lt;code&gt;Foo&lt;/code&gt; 클래스 는 다음과 같이 환경 설정 노드를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6fba903462c5e274f857cc56faf41e8e1cdf8504" translate="yes" xml:space="preserve">
          <source>A class attribute expression. The returned object will be serialized as an instance of the non-public class  javax.management.ClassAttributeValueExp.</source>
          <target state="translated">클래스 속성 표현식. 리턴 된 오브젝트는 비 공용 클래스 javax.management.ClassAttributeValueExp의 인스턴스로 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="b70e7a0c27b89abfe494762079ddd5f5ea4432e8" translate="yes" xml:space="preserve">
          <source>A class attribute expression. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.ClassAttributeValueExp&quot;&gt; javax.management.ClassAttributeValueExp&lt;/a&gt;.</source>
          <target state="translated">클래스 속성 표현식입니다. 반환 된 객체는 public이 아닌 클래스 &lt;a href=&quot;../../serialized-form#javax.management.ClassAttributeValueExp&quot;&gt;javax.management.ClassAttributeValueExp&lt;/a&gt; 의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="c89a8aacf78b87597462542f12b1287b60ecb678" translate="yes" xml:space="preserve">
          <source>A class can implement the &lt;code&gt;Observer&lt;/code&gt; interface when it wants to be informed of changes in observable objects.</source>
          <target state="translated">클래스는 관찰 가능한 객체의 변경 사항에 대한 정보를 원할 때 &lt;code&gt;Observer&lt;/code&gt; 인터페이스를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aba1fcf9735c8794d9553c9de8b9def398f44c4b" translate="yes" xml:space="preserve">
          <source>A class containing static convenience methods for locating &lt;code&gt;ImageReader&lt;/code&gt;s and &lt;code&gt;ImageWriter&lt;/code&gt;s, and performing simple encoding and decoding.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 및 &lt;code&gt;ImageWriter&lt;/code&gt; 를 찾고 간단한 인코딩 및 디코딩을 수행 하기위한 정적 편의 메소드가 포함 된 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="c0334b4ce731ca83d507f211dc5bcced61e8bc5f" translate="yes" xml:space="preserve">
          <source>A class containing the TIFF tags used to reference the Exif and GPS IFDs.</source>
          <target state="translated">Exif 및 GPS IFD를 참조하는 데 사용되는 TIFF 태그가 포함 된 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="1c946b8d62ea15a903d31e5943f708157fec4d07" translate="yes" xml:space="preserve">
          <source>A class containing the TIFF tags used to reference the Exif and GPS IFDs. This tag set should be added to the root tag set by means of the &lt;a href=&quot;tiffimagereadparam#addAllowedTagSet(javax.imageio.plugins.tiff.TIFFTagSet)&quot;&gt;&lt;code&gt;TIFFImageReadParam.addAllowedTagSet&lt;/code&gt;&lt;/a&gt; method if Exif support is desired.</source>
          <target state="translated">Exif 및 GPS IFD를 참조하는 데 사용되는 TIFF 태그가 포함 된 클래스입니다. 이 태그 세트는 Exif 지원이 필요한 경우 &lt;a href=&quot;tiffimagereadparam#addAllowedTagSet(javax.imageio.plugins.tiff.TIFFTagSet)&quot;&gt; &lt;code&gt;TIFFImageReadParam.addAllowedTagSet&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 루트 태그 세트에 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ce0000d9fedd31b80c15cba3d9a9ef3dc49592dd" translate="yes" xml:space="preserve">
          <source>A class defining the notion of a TIFF tag.</source>
          <target state="translated">TIFF 태그의 개념을 정의하는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="f4de1c4fa220b7678865e87b1b2b26f0c6f28c68" translate="yes" xml:space="preserve">
          <source>A class defining the notion of a TIFF tag. A TIFF tag is a key that may appear in an Image File Directory (IFD). In the IFD each tag has some data associated with it, which may consist of zero or more values of a given data type. The combination of a tag and a value is known as an IFD Entry or TIFF Field.</source>
          <target state="translated">TIFF 태그의 개념을 정의하는 클래스입니다. TIFF 태그는 IDF (Image File Directory)에 나타날 수있는 키입니다. IFD에서 각 태그에는 연관된 데이터가 있으며, 이는 주어진 데이터 유형의 0 개 이상의 값으로 구성 될 수 있습니다. 태그와 값의 조합을 IFD 항목 또는 TIFF 필드라고합니다.</target>
        </trans-unit>
        <trans-unit id="317047d47afb67f04ec027478f70d7ecc2962ebb" translate="yes" xml:space="preserve">
          <source>A class describing how a stream is to be decoded.</source>
          <target state="translated">스트림의 디코딩 방법을 설명하는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="c9b6d1a8dfd34b6a2f783596c581d7bf8cfbfa2a" translate="yes" xml:space="preserve">
          <source>A class describing how a stream is to be decoded. Instances of this class or its subclasses are used to supply prescriptive &quot;how-to&quot; information to instances of &lt;code&gt;ImageReader&lt;/code&gt;.</source>
          <target state="translated">스트림의 디코딩 방법을 설명하는 클래스입니다. 이 클래스 또는 서브 클래스의 인스턴스는 &lt;code&gt;ImageReader&lt;/code&gt; 인스턴스에 규범적인 &quot;방법&quot;정보를 제공하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="bdb5406053749def02227e1d5e2b473d7e57d6aa" translate="yes" xml:space="preserve">
          <source>A class describing how a stream is to be encoded.</source>
          <target state="translated">스트림의 인코딩 방법을 설명하는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="eb7e66efcdb5a0340069e0f95db4d8c40901525c" translate="yes" xml:space="preserve">
          <source>A class describing how a stream is to be encoded. Instances of this class or its subclasses are used to supply prescriptive &quot;how-to&quot; information to instances of &lt;code&gt;ImageWriter&lt;/code&gt;.</source>
          <target state="translated">스트림의 인코딩 방법을 설명하는 클래스입니다. 이 클래스 또는 서브 클래스의 인스턴스는 &lt;code&gt;ImageWriter&lt;/code&gt; 인스턴스에 규범적인 &quot;방법&quot;정보를 제공하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="e5034257b5743dfaf2facf699619ce7949ccab52" translate="yes" xml:space="preserve">
          <source>A class designed to produce preconfigured &quot;accessory&quot; objects to insert into color choosers.</source>
          <target state="translated">색상 선택기에 삽입 할 미리 구성된 &quot;액세서리&quot;개체를 생성하도록 설계된 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="c4cea7f0cea8b3c4c1d900e2c74bafad3d5dc6b1" translate="yes" xml:space="preserve">
          <source>A class encapsulating a single JPEG Huffman table.</source>
          <target state="translated">단일 JPEG Huffman 테이블을 캡슐화하는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="321f8c15f8e226bd6268946f3635814d5dc70788" translate="yes" xml:space="preserve">
          <source>A class encapsulating a single JPEG Huffman table. Fields are provided for the &quot;standard&quot; tables taken from Annex K of the JPEG specification. These are the tables used as defaults.</source>
          <target state="translated">단일 JPEG Huffman 테이블을 캡슐화하는 클래스입니다. JPEG 사양의 부록 K에서 가져온 &quot;표준&quot;테이블에 대한 필드가 제공됩니다. 기본값으로 사용되는 테이블입니다.</target>
        </trans-unit>
        <trans-unit id="7d0f9ed539cc05958b0c68b8a54ebd530f7cf999" translate="yes" xml:space="preserve">
          <source>A class encapsulating a single JPEG quantization table.</source>
          <target state="translated">단일 JPEG 양자화 테이블을 캡슐화하는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="9a5e3d73505c4420c99527a5d829a03a35d0ff9c" translate="yes" xml:space="preserve">
          <source>A class encapsulating a single JPEG quantization table. The elements appear in natural order (as opposed to zig-zag order). Static variables are provided for the &quot;standard&quot; tables taken from Annex K of the JPEG specification, as well as the default tables conventionally used for visually lossless encoding.</source>
          <target state="translated">단일 JPEG 양자화 테이블을 캡슐화하는 클래스입니다. 요소는 지그재그 순서와 달리 자연 순서로 나타납니다. 정적 변수는 JPEG 사양의 부록 K에서 가져온 &quot;표준&quot;테이블과 시각적으로 무손실 인코딩에 일반적으로 사용되는 기본 테이블에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="44f8037065e3191d22b9bee6220170570919d116" translate="yes" xml:space="preserve">
          <source>A class encapsulating state useful when painting.</source>
          <target state="translated">페인팅 할 때 유용한 상태를 캡슐화하는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="cc9d6ee592a3b7b332ff1cbb6d82df947b65806d" translate="yes" xml:space="preserve">
          <source>A class encapsulating state useful when painting. Generally, instances of this class are created once, and reused for each paint request without modification. This class contains values useful when hinting the cache engine, and when decoding control points and bezier curve anchors.</source>
          <target state="translated">페인팅 할 때 유용한 상태를 캡슐화하는 클래스입니다. 일반적으로이 클래스의 인스턴스는 한 번 생성되고 수정없이 각 페인트 요청에 재사용됩니다. 이 클래스에는 캐시 엔진을 암시하고 제어점 및 베 지어 곡선 앵커를 디코딩 할 때 유용한 값이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="bde55079a3684e11cbe1598e95c1ba9db4e8a1f3" translate="yes" xml:space="preserve">
          <source>A class file can also be created to hold information about a package, including package annotations. To create a class file for a named package, have the &lt;code&gt;name&lt;/code&gt; argument be the package's name followed by &lt;code&gt;&quot;.package-info&quot;&lt;/code&gt;; creating a class file for an unnamed package is not supported.</source>
          <target state="translated">패키지 주석을 포함하여 패키지에 대한 정보를 보관하기 위해 클래스 파일을 만들 수도 있습니다. 명명 된 패키지에 대한 클래스 파일을 만들려면 &lt;code&gt;name&lt;/code&gt; 인수를 패키지 이름 뒤에 &lt;code&gt;&quot;.package-info&quot;&lt;/code&gt; 로 지정하십시오 . 이름이 지정되지 않은 패키지에 대한 클래스 파일 생성은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d524dbc67636cae0787b2f597b10cfb1ce326300" translate="yes" xml:space="preserve">
          <source>A class for building certification paths (also known as certificate chains).</source>
          <target state="translated">인증 경로를 구축하기위한 클래스 (인증서 체인이라고도 함).</target>
        </trans-unit>
        <trans-unit id="79a919ed13386b15bc475fe84e9d59954394707e" translate="yes" xml:space="preserve">
          <source>A class for retrieving &lt;code&gt;Certificate&lt;/code&gt;s and &lt;code&gt;CRL&lt;/code&gt;s from a repository.</source>
          <target state="translated">저장소에서 &lt;code&gt;Certificate&lt;/code&gt; 및 &lt;code&gt;CRL&lt;/code&gt; 을 검색하기위한 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="ec4b47f315864b8bfb44767c9e4144c8782ed06e" translate="yes" xml:space="preserve">
          <source>A class for validating certification paths (also known as certificate chains).</source>
          <target state="translated">인증 경로를 확인하는 클래스 (인증서 체인이라고도 함).</target>
        </trans-unit>
        <trans-unit id="b5cf2a4811c8c47c2f2e81f99cd8b41ae527cd0f" translate="yes" xml:space="preserve">
          <source>A class implementing this interface is an &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;&lt;code&gt;MXBean&lt;/code&gt;&lt;/a&gt;. A Java virtual machine has one or more implementations of this interface. The &lt;a href=&quot;managementfactory#getPlatformMXBeans(java.lang.Class)&quot;&gt;&lt;code&gt;getPlatformMXBeans&lt;/code&gt;&lt;/a&gt; method can be used to obtain the list of &lt;code&gt;BufferPoolMXBean&lt;/code&gt; objects representing the management interfaces for pools of buffers as follows:</source>
          <target state="translated">이 인터페이스를 구현하는 클래스는 &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt; &lt;code&gt;MXBean&lt;/code&gt; &lt;/a&gt; 입니다. Java 가상 머신에는이 인터페이스의 구현이 하나 이상 있습니다. &lt;a href=&quot;managementfactory#getPlatformMXBeans(java.lang.Class)&quot;&gt; &lt;code&gt;getPlatformMXBeans&lt;/code&gt; 에&lt;/a&gt; 있어서의리스트 취득 할 수 &lt;code&gt;BufferPoolMXBean&lt;/code&gt; 을 다음과 같이 버퍼 풀의 관리 인터페이스를 나타내는 제품 :</target>
        </trans-unit>
        <trans-unit id="a4826fac13ffcb96ddcf1d4b8835ded2eb4fc3d3" translate="yes" xml:space="preserve">
          <source>A class implementing this interface is an &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;&lt;code&gt;MXBean&lt;/code&gt;&lt;/a&gt;. A Java virtual machine has one or more implementations of this interface. The &lt;a href=&quot;managementfactory#getPlatformMXBeans-java.lang.Class-&quot;&gt;&lt;code&gt;getPlatformMXBeans&lt;/code&gt;&lt;/a&gt; method can be used to obtain the list of &lt;code&gt;BufferPoolMXBean&lt;/code&gt; objects representing the management interfaces for pools of buffers as follows:</source>
          <target state="translated">이 인터페이스를 구현하는 클래스는 &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt; &lt;code&gt;MXBean&lt;/code&gt; &lt;/a&gt; 입니다. Java 가상 머신에는이 인터페이스의 구현이 하나 이상 있습니다. &lt;a href=&quot;managementfactory#getPlatformMXBeans-java.lang.Class-&quot;&gt; &lt;code&gt;getPlatformMXBeans&lt;/code&gt; 에&lt;/a&gt; 있어서의리스트 취득 할 수 &lt;code&gt;BufferPoolMXBean&lt;/code&gt; 을 다음과 같이 버퍼 풀의 관리 인터페이스를 나타내는 제품 :</target>
        </trans-unit>
        <trans-unit id="30cb9bfe590afa7140059341db51e815882fadf3" translate="yes" xml:space="preserve">
          <source>A class implements the &lt;code&gt;Cloneable&lt;/code&gt; interface to indicate to the &lt;a href=&quot;object#clone()&quot;&gt;&lt;code&gt;Object.clone()&lt;/code&gt;&lt;/a&gt; method that it is legal for that method to make a field-for-field copy of instances of that class.</source>
          <target state="translated">클래스는 &lt;code&gt;Cloneable&lt;/code&gt; 인터페이스를 구현하여 해당 메서드가 해당 클래스의 인스턴스에 대한 필드 별 복사본을 만드는 것이 합법적임을 &lt;a href=&quot;object#clone()&quot;&gt; &lt;code&gt;Object.clone()&lt;/code&gt; &lt;/a&gt; 메서드에 표시합니다.</target>
        </trans-unit>
        <trans-unit id="3428d317a441756ed9f2c24a1df7a91726e5d72d" translate="yes" xml:space="preserve">
          <source>A class implements the &lt;code&gt;Cloneable&lt;/code&gt; interface to indicate to the &lt;a href=&quot;object#clone--&quot;&gt;&lt;code&gt;Object.clone()&lt;/code&gt;&lt;/a&gt; method that it is legal for that method to make a field-for-field copy of instances of that class.</source>
          <target state="translated">클래스는 &lt;code&gt;Cloneable&lt;/code&gt; 인터페이스를 구현하여 &lt;a href=&quot;object#clone--&quot;&gt; &lt;code&gt;Object.clone()&lt;/code&gt; &lt;/a&gt; 메소드에 해당 메소드가 해당 클래스의 인스턴스에 대한 필드 필드 사본을 작성하는 것이 합법적임을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="9c8b9f339d61d938dcccc73bcd63029bdd10d347" translate="yes" xml:space="preserve">
          <source>A class loader is an object that is responsible for loading classes.</source>
          <target state="translated">클래스 로더는 클래스로드를 담당하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="483c50e9fa089e4562649e86aded48aaae4bb6ff" translate="yes" xml:space="preserve">
          <source>A class loader is an object that is responsible for loading classes. The class &lt;code&gt;ClassLoader&lt;/code&gt; is an abstract class. Given the &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt; of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class. A typical strategy is to transform the name into a file name and then read a &quot;class file&quot; of that name from a file system.</source>
          <target state="translated">클래스 로더는 클래스로드를 담당하는 객체입니다. 클래스의 &lt;code&gt;ClassLoader&lt;/code&gt; 추상 클래스입니다. 클래스 의 &lt;a href=&quot;#binary-name&quot;&gt;이진 이름&lt;/a&gt; 이 주어지면 클래스 로더는 클래스에 대한 정의를 구성하는 데이터를 찾거나 생성하려고 시도해야합니다. 일반적인 전략은 이름을 파일 이름으로 변환 한 다음 파일 시스템에서 해당 이름의 &quot;클래스 파일&quot;을 읽는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9cff8322dc2f981b7001727324b185bd2894264e" translate="yes" xml:space="preserve">
          <source>A class loader is an object that is responsible for loading classes. The class &lt;code&gt;ClassLoader&lt;/code&gt; is an abstract class. Given the &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt; of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class. A typical strategy is to transform the name into a file name and then read a &quot;class file&quot; of that name from a file system.</source>
          <target state="translated">클래스 로더는 클래스로드를 담당하는 객체입니다. 클래스의 &lt;code&gt;ClassLoader&lt;/code&gt; 추상 클래스입니다. 클래스 의 &lt;a href=&quot;#name&quot;&gt;이진 이름&lt;/a&gt; 이 주어지면 클래스 로더는 클래스의 정의를 구성하는 데이터를 찾거나 생성해야합니다. 일반적인 전략은 이름을 파일 이름으로 변환 한 다음 파일 시스템에서 해당 이름의 &quot;클래스 파일&quot;을 읽는 것입니다.</target>
        </trans-unit>
        <trans-unit id="28bc76f0c319effd2168c6c88997fb73db1ee3ba" translate="yes" xml:space="preserve">
          <source>A class loader that wishes to define a package for classes in a JAR typically uses the specification and implementation titles, versions, and vendors from the JAR's manifest. If the package is specified as &lt;a href=&quot;../util/jar/attributes.name#SEALED&quot;&gt;sealed&lt;/a&gt; in the JAR's manifest, the &lt;code&gt;URL&lt;/code&gt; of the JAR file is typically used as the &lt;code&gt;sealBase&lt;/code&gt;. If classes of package &lt;code&gt;'p'&lt;/code&gt; defined by this class loader are loaded from multiple JARs, the &lt;code&gt;Package&lt;/code&gt; object may contain different information depending on the first class of package &lt;code&gt;'p'&lt;/code&gt; defined and which JAR's manifest is read first to explicitly define package &lt;code&gt;'p'&lt;/code&gt;.</source>
          <target state="translated">JAR의 클래스에 대한 패키지를 정의하려는 클래스 로더는 일반적으로 JAR의 매니페스트에서 사양 및 구현 제목, 버전 및 공급 업체를 사용합니다. 패키지가 JAR의 매니페스트에 &lt;a href=&quot;../util/jar/attributes.name#SEALED&quot;&gt;봉인 된&lt;/a&gt; 것으로 지정된 경우 일반적으로 JAR 파일 의 &lt;code&gt;URL&lt;/code&gt; 이 &lt;code&gt;sealBase&lt;/code&gt; 로 사용됩니다 . 이 클래스 로더에 의해 정의 된 패키지 &lt;code&gt;'p'&lt;/code&gt; 의 클래스가 여러 JAR에서로드되는 경우 &lt;code&gt;Package&lt;/code&gt; 객체는 정의 된 패키지 &lt;code&gt;'p'&lt;/code&gt; 의 첫 번째 클래스 와 명시 적으로 패키지 &lt;code&gt;'p'&lt;/code&gt; 를 정의하기 위해 먼저 읽은 JAR의 매니페스트 에 따라 다른 정보를 포함 할 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="7ce39fd66531a7a384263f9e859092a5c3c09aed" translate="yes" xml:space="preserve">
          <source>A class name pattern can also be empty or the single character &quot;&lt;code&gt;*&lt;/code&gt;&quot;, both of which grant access to any class.</source>
          <target state="translated">클래스 이름 패턴은 비어 있거나 단일 문자 &quot; &lt;code&gt;*&lt;/code&gt; &quot;일 수 있으며 둘 다 클래스에 대한 액세스 권한을 부여합니다.</target>
        </trans-unit>
        <trans-unit id="e317baf1134b30d7d9e54b8f4adcb3831a0e31b4" translate="yes" xml:space="preserve">
          <source>A class not described by a more specific kind (like &lt;code&gt;ENUM&lt;/code&gt;).</source>
          <target state="translated">보다 구체적인 종류로 설명되지 않은 클래스 (예 : &lt;code&gt;ENUM&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="bc3cd42645526b63c6b87578e25cc1cecfc66711" translate="yes" xml:space="preserve">
          <source>A class or interface type that could not be resolved.</source>
          <target state="translated">확인할 수없는 클래스 또는 인터페이스 유형입니다.</target>
        </trans-unit>
        <trans-unit id="6a03a390b706ffc95966f4d839f5e6763859f7f2" translate="yes" xml:space="preserve">
          <source>A class or interface type.</source>
          <target state="translated">클래스 또는 인터페이스 유형</target>
        </trans-unit>
        <trans-unit id="eeec5ed6b752d7b244e35cceec9fac5e56058a29" translate="yes" xml:space="preserve">
          <source>A class representing a field in a TIFF 6.0 Image File Directory.</source>
          <target state="translated">TIFF 6.0 이미지 파일 디렉토리의 필드를 나타내는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="1ceaf0ae9fac66af5c5c71328e5f53e64786f589" translate="yes" xml:space="preserve">
          <source>A class representing a mutable reference to an array of bytes and an offset and length within that array.</source>
          <target state="translated">바이트 배열에 대한 변경 가능한 참조와 해당 배열 내의 오프셋 및 길이를 나타내는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="4a48a4b9106cdb7952ce705c7bb7a3668a981ba8" translate="yes" xml:space="preserve">
          <source>A class representing a mutable reference to an array of bytes and an offset and length within that array. &lt;code&gt;IIOByteBuffer&lt;/code&gt; is used by &lt;code&gt;ImageInputStream&lt;/code&gt; to supply a sequence of bytes to the caller, possibly with fewer copies than using the conventional &lt;code&gt;read&lt;/code&gt; methods that take a user-supplied byte array.</source>
          <target state="translated">바이트 배열에 대한 변경 가능한 참조와 해당 배열 내의 오프셋 및 길이를 나타내는 클래스입니다. &lt;code&gt;IIOByteBuffer&lt;/code&gt; 는 &lt;code&gt;ImageInputStream&lt;/code&gt; 에서 호출자에게 바이트 시퀀스를 제공하는 데 사용되며 , 사용자가 제공 한 바이트 배열을 사용하는 일반적인 &lt;code&gt;read&lt;/code&gt; 방법을 사용하는 것보다 적은 수의 사본을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e9dd636c411f076fe4378038d5f1703cc19f7d24" translate="yes" xml:space="preserve">
          <source>A class representing a node in a meta-data tree, which implements the  &lt;code&gt;org.w3c.dom.Element&lt;/code&gt; interface and additionally allows for the storage of non-textual objects via the &lt;code&gt;getUserObject&lt;/code&gt; and &lt;code&gt;setUserObject&lt;/code&gt; methods.</source>
          <target state="translated">메타 데이터 트리의 노드를 나타내는 클래스로, &lt;code&gt;org.w3c.dom.Element&lt;/code&gt; 인터페이스 를 구현하고 , &lt;code&gt;getUserObject&lt;/code&gt; 및 &lt;code&gt;setUserObject&lt;/code&gt; 메소드 를 통해 텍스트가 아닌 객체를 저장할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="31770ec82ed7a7631fb0df3ef8512d4ee88b8cad" translate="yes" xml:space="preserve">
          <source>A class representing a node in a meta-data tree, which implements the &lt;a href=&quot;../../../../java.xml/org/w3c/dom/element&quot;&gt;&lt;code&gt;org.w3c.dom.Element&lt;/code&gt;&lt;/a&gt; interface and additionally allows for the storage of non-textual objects via the &lt;code&gt;getUserObject&lt;/code&gt; and &lt;code&gt;setUserObject&lt;/code&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../../../../java.xml/org/w3c/dom/element&quot;&gt; &lt;code&gt;org.w3c.dom.Element&lt;/code&gt; &lt;/a&gt; 인터페이스 를 구현 하고 &lt;code&gt;getUserObject&lt;/code&gt; 및 &lt;code&gt;setUserObject&lt;/code&gt; 메소드 를 통해 비 텍스트 객체의 저장을 추가로 허용 하는 메타 데이터 트리의 노드를 나타내는 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="aa458131f0ff37b7112e04879ddc2839c58b609a" translate="yes" xml:space="preserve">
          <source>A class representing a rectangular array of pixels.</source>
          <target state="translated">직사각형 픽셀 배열을 나타내는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="0240e3aa9f0230fc803745e8fa3b52820913e9df" translate="yes" xml:space="preserve">
          <source>A class representing a rectangular array of pixels. A Raster encapsulates a DataBuffer that stores the sample values and a SampleModel that describes how to locate a given sample value in a DataBuffer.</source>
          <target state="translated">직사각형 픽셀 배열을 나타내는 클래스입니다. Raster는 샘플 값을 저장하는 DataBuffer와 DataBuffer에서 주어진 샘플 값을 찾는 방법을 설명하는 SampleModel을 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="dc59480a1d752590ed85efab39445c512153f1b4" translate="yes" xml:space="preserve">
          <source>A class representing a set of TIFF tags.</source>
          <target state="translated">TIFF 태그 집합을 나타내는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="549cc45802ab080822e624dddc4d2092ceaada25" translate="yes" xml:space="preserve">
          <source>A class representing a set of TIFF tags. Each tag in the set must have a unique number (this is a limitation of the TIFF specification itself).</source>
          <target state="translated">TIFF 태그 집합을 나타내는 클래스입니다. 세트의 각 태그에는 고유 번호가 있어야합니다 (이는 TIFF 사양 자체의 제한 사항입니다).</target>
        </trans-unit>
        <trans-unit id="bf3e8146bb2649a21a546240318b9148a02bf417" translate="yes" xml:space="preserve">
          <source>A class representing elliptic curve private keys as defined in RFC 7748, including the curve and other algorithm parameters.</source>
          <target state="translated">곡선 및 기타 알고리즘 매개 변수를 포함하여 RFC 7748에 정의 된 타원 곡선 개인 키를 나타내는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="6350dab2b329b90dfef3c402ac607a717719da0d" translate="yes" xml:space="preserve">
          <source>A class representing elliptic curve private keys as defined in RFC 7748, including the curve and other algorithm parameters. The private key is represented as an encoded scalar value. The decoding procedure defined in the RFC includes an operation that forces certain bits of the key to either 1 or 0. This operation is known as &quot;pruning&quot; or &quot;clamping&quot; the private key. All arrays in this spec are unpruned, and implementations will need to prune the array before using it in any numerical operations.</source>
          <target state="translated">곡선 및 기타 알고리즘 매개 변수를 포함하여 RFC 7748에 정의 된 타원 곡선 개인 키를 나타내는 클래스입니다. 개인 키는 인코딩 된 스칼라 값으로 표시됩니다. RFC에 정의 된 디코딩 절차에는 키의 특정 비트를 1 또는 0으로 강제하는 작업이 포함됩니다.이 작업을 개인 키 &quot;프 루닝&quot;또는 &quot;클램핑&quot;이라고합니다. 이 사양의 모든 배열은 정리되지 않으며, 구현시 숫자 연산에 사용하기 전에 배열을 정리해야합니다.</target>
        </trans-unit>
        <trans-unit id="47e6d76e25b1c4d7ec2e9a6c6896665d47bf80f7" translate="yes" xml:space="preserve">
          <source>A class representing elliptic curve public keys as defined in RFC 7748, including the curve and other algorithm parameters.</source>
          <target state="translated">곡선 및 기타 알고리즘 매개 변수를 포함하여 RFC 7748에 정의 된 타원 곡선 공개 키를 나타내는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="0fa31fb1db3f2bf4170a4504fda888238f5857ac" translate="yes" xml:space="preserve">
          <source>A class representing elliptic curve public keys as defined in RFC 7748, including the curve and other algorithm parameters. The public key is a particular point on the curve, which is represented using only its u-coordinate. A u-coordinate is an element of the field of integers modulo some value that is determined by the algorithm parameters. This field element is represented by a BigInteger which may hold any value. That is, the BigInteger is not restricted to the range of canonical field elements.</source>
          <target state="translated">곡선 및 기타 알고리즘 매개 변수를 포함하여 RFC 7748에 정의 된 타원 곡선 공개 키를 나타내는 클래스입니다. 공개 키는 곡선의 특정 지점으로, U 좌표 만 사용하여 표시됩니다. u 좌표는 알고리즘 매개 변수에 의해 결정되는 일부 값을 모듈로하는 정수 필드의 요소입니다. 이 필드 요소는 모든 값을 보유 할 수있는 BigInteger로 표시됩니다. 즉, BigInteger는 표준 필드 요소의 범위로 제한되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="65c946c01af08b81e126884eb2cf472a54fa6698" translate="yes" xml:space="preserve">
          <source>A class representing the extra tags found in a &lt;a href=&quot;http://tools.ietf.org/html/rfc2306.html&quot;&gt;TIFF-F&lt;/a&gt; (RFC 2036) file.</source>
          <target state="translated">&lt;a href=&quot;http://tools.ietf.org/html/rfc2306.html&quot;&gt;TIFF-F&lt;/a&gt; (RFC 2036) 파일 에있는 추가 태그를 나타내는 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="e2465331bfa6b2ec667a7a1a199b513b9f4467c6" translate="yes" xml:space="preserve">
          <source>A class representing the set of tags found in the baseline TIFF specification as well as some common additional tags.</source>
          <target state="translated">기본 TIFF 사양과 몇 가지 일반적인 추가 태그에서 발견 된 태그 집합을 나타내는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="b85817ff47ba848e015b8adf4ea8038a4777bdf3" translate="yes" xml:space="preserve">
          <source>A class representing the tags found in a GeoTIFF IFD.</source>
          <target state="translated">GeoTIFF IFD에서 찾은 태그를 나타내는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="639aa3e6bfa855a19d38be8bddb1f4b7cf9e77ce" translate="yes" xml:space="preserve">
          <source>A class representing the tags found in a GeoTIFF IFD. GeoTIFF is a standard for annotating georeferenced or geocoded raster imagery. This class does</source>
          <target state="translated">GeoTIFF IFD에서 찾은 태그를 나타내는 클래스입니다. GeoTIFF는 지리 참조 또는 지오 코딩 된 래스터 이미지에 주석을 달기위한 표준입니다. 이 수업은</target>
        </trans-unit>
        <trans-unit id="ad48f4700fc5b0e6bc913680cdd26ad0db193c79" translate="yes" xml:space="preserve">
          <source>A class representing the tags found in an Exif GPS Info IFD.</source>
          <target state="translated">Exif GPS 정보 IFD에서 찾은 태그를 나타내는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="84527dca923846fad6949b91ca530336221f8b18" translate="yes" xml:space="preserve">
          <source>A class representing the tags found in an Exif IFD.</source>
          <target state="translated">Exif IFD에서 찾은 태그를 나타내는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="ff411da7e062b66bf98168cb887363bdde4fa6e4" translate="yes" xml:space="preserve">
          <source>A class representing the tags found in an Exif IFD. Exif is a standard for annotating images used by most digital camera manufacturers. The Exif specification may be found at &lt;a href=&quot;http://www.exif.org/Exif2-2.PDF&quot;&gt; &lt;code&gt;http://www.exif.org/Exif2-2.PDF&lt;/code&gt; &lt;/a&gt;.</source>
          <target state="translated">Exif IFD에서 찾은 태그를 나타내는 클래스입니다. Exif는 대부분의 디지털 카메라 제조업체에서 사용하는 이미지에 주석을 달기위한 표준입니다. Exif 사양은 &lt;a href=&quot;http://www.exif.org/Exif2-2.PDF&quot;&gt; &lt;code&gt;http://www.exif.org/Exif2-2.PDF&lt;/code&gt; &lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="37f8dd762267c3d3d350af455503509a6ba5e61a" translate="yes" xml:space="preserve">
          <source>A class representing the tags found in an Exif Interoperability IFD.</source>
          <target state="translated">Exif 상호 운용성 IFD에서 찾은 태그를 나타내는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="0faaa8cb7ea41080a9897a029d07ba7f64951d59" translate="yes" xml:space="preserve">
          <source>A class should implement this interface if it meets three criteria:</source>
          <target state="translated">클래스가 세 가지 기준을 충족하는 경우이 인터페이스를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="92346a2f99faeaaa261517e46da5df7b89aef4c7" translate="yes" xml:space="preserve">
          <source>A class that allows the format of an image (in particular, its &lt;code&gt;SampleModel&lt;/code&gt; and &lt;code&gt;ColorModel&lt;/code&gt;) to be specified in a convenient manner.</source>
          <target state="translated">이미지 형식 (특히 &lt;code&gt;SampleModel&lt;/code&gt; 및 &lt;code&gt;ColorModel&lt;/code&gt; )을 편리한 방식으로 지정할 수있는 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="9c8e539dbcfd8560d6896c579d5cc9832b8d9d59" translate="yes" xml:space="preserve">
          <source>A class that can be used to compute the Adler-32 checksum of a data stream.</source>
          <target state="translated">데이터 스트림의 Adler-32 체크섬을 계산하는 데 사용할 수있는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="cdd5cc0c0766766349e5a8df9631efc59ea37f9a" translate="yes" xml:space="preserve">
          <source>A class that can be used to compute the Adler-32 checksum of a data stream. An Adler-32 checksum is almost as reliable as a CRC-32 but can be computed much faster.</source>
          <target state="translated">데이터 스트림의 Adler-32 체크섬을 계산하는 데 사용할 수있는 클래스입니다. Adler-32 체크섬은 CRC-32와 거의 비슷하지만 훨씬 빠르게 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c514c4d4229f220cdf94ab33ba1f0e3f329c671" translate="yes" xml:space="preserve">
          <source>A class that can be used to compute the CRC-32 of a data stream.</source>
          <target state="translated">데이터 스트림의 CRC-32를 계산하는 데 사용할 수있는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="5ea18e62bf6041eb3df169d804ad7a5cd70f37dd" translate="yes" xml:space="preserve">
          <source>A class that can be used to compute the CRC-32C of a data stream.</source>
          <target state="translated">데이터 스트림의 CRC-32C를 계산하는 데 사용할 수있는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="b4438f53bff9ad76b2b996f593f314197aaa9ed9" translate="yes" xml:space="preserve">
          <source>A class that describes the pointer position.</source>
          <target state="translated">포인터 위치를 설명하는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="2b974107948994a749fc354434093fd17886c263" translate="yes" xml:space="preserve">
          <source>A class that describes the pointer position. It provides the &lt;code&gt;GraphicsDevice&lt;/code&gt; where the pointer is and the &lt;code&gt;Point&lt;/code&gt; that represents the coordinates of the pointer.</source>
          <target state="translated">포인터 위치를 설명하는 클래스입니다. 포인터가 있는 &lt;code&gt;GraphicsDevice&lt;/code&gt; 와 포인터 의 좌표를 나타내는 &lt;code&gt;Point&lt;/code&gt; 를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="01fd859a5bddef604f485cd1d6721c1620367871" translate="yes" xml:space="preserve">
          <source>A class that holds a list of EventListeners.</source>
          <target state="translated">EventListener 목록을 보유하는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="bccbef1b527baff869bc778e0f10bad79b251f40" translate="yes" xml:space="preserve">
          <source>A class that holds a list of EventListeners. A single instance can be used to hold all listeners (of all types) for the instance using the list. It is the responsiblity of the class using the EventListenerList to provide type-safe API (preferably conforming to the JavaBeans spec) and methods which dispatch event notification methods to appropriate Event Listeners on the list. The main benefits that this class provides are that it is relatively cheap in the case of no listeners, and it provides serialization for event-listener lists in a single place, as well as a degree of MT safety (when used correctly). Usage example: Say one is defining a class that sends out FooEvents, and one wants to allow users of the class to register FooListeners and receive notification when FooEvents occur. The following should be added to the class definition:</source>
          <target state="translated">EventListener 목록을 보유하는 클래스입니다. 단일 인스턴스를 사용하여 목록을 사용하는 인스턴스에 대한 모든 유형의 리스너를 보유 할 수 있습니다. Type-safe API (가급적이면 JavaBeans 사양에 따름)를 제공하는 것은 EventListenerList를 사용하는 클래스의 책임이며 이벤트 알림 메소드를 목록의 적절한 이벤트 리스너에 전달하는 메소드를 제공합니다. 이 클래스가 제공하는 주요 이점은 리스너가없는 경우 상대적으로 저렴하고 한 곳에서 이벤트 리스너 목록에 대한 직렬화와 MT 안전성 (올바르게 사용되는 경우)의 정도를 제공한다는 것입니다. 사용 예 : FooEvents를 보내는 클래스를 정의하고 클래스의 사용자가 FooListeners를 등록하고 FooEvents 발생시 알림을 받도록 허용하려고한다고 가정 해 보겠습니다. 클래스 정의에 다음을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="561f7d252748cac94cef43b93aa50d3e54fc0a81" translate="yes" xml:space="preserve">
          <source>A class that implements a mechanism to transfer data using cut/copy/paste operations.</source>
          <target state="translated">잘라 내기 / 복사 / 붙여 넣기 작업을 사용하여 데이터를 전송하는 메커니즘을 구현하는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="0b9ccb86c63ff8e5e87cf5de1df071397be14468" translate="yes" xml:space="preserve">
          <source>A class that implements a menu which can be dynamically popped up at a specified position within a component.</source>
          <target state="translated">A class that implements a menu which can be dynamically popped up at a specified position within a component.</target>
        </trans-unit>
        <trans-unit id="aa6462377deb828ac8fabeb31954961761d5ec35" translate="yes" xml:space="preserve">
          <source>A class that implements an empty border with no size.</source>
          <target state="translated">A class that implements an empty border with no size.</target>
        </trans-unit>
        <trans-unit id="b014c94e857bb1e947e25e73bed04f20f2b5deb9" translate="yes" xml:space="preserve">
          <source>A class that implements an empty border with no size. This provides a convenient base class from which other border classes can be easily derived.</source>
          <target state="translated">A class that implements an empty border with no size. This provides a convenient base class from which other border classes can be easily derived.</target>
        </trans-unit>
        <trans-unit id="ca6acaf5f47411e180b6a86f697ad80777c28261" translate="yes" xml:space="preserve">
          <source>A class that represents an immutable universally unique identifier (UUID).</source>
          <target state="translated">불변의 UUID (Universally Unique Identifier)를 나타내는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="eb88a241c9240d74a35296b3eb6f058d620a61af" translate="yes" xml:space="preserve">
          <source>A class that represents an immutable universally unique identifier (UUID). A UUID represents a 128-bit value.</source>
          <target state="translated">불변의 UUID (Universally Unique Identifier)를 나타내는 클래스입니다. UUID는 128 비트 값을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="50fc59ed7536359ec8a59f0e493fe3242a135a31" translate="yes" xml:space="preserve">
          <source>A class to encapsulate MimeType parsing related exceptions.</source>
          <target state="translated">A class to encapsulate MimeType parsing related exceptions.</target>
        </trans-unit>
        <trans-unit id="8ad4c7c92a2deb2763930f0efab0ca42fe600177" translate="yes" xml:space="preserve">
          <source>A class to encapsulate symbolic colors representing the color of native GUI objects on a system.</source>
          <target state="translated">A class to encapsulate symbolic colors representing the color of native GUI objects on a system.</target>
        </trans-unit>
        <trans-unit id="325b06e0b2c5d8f415697a9862a7840ea37a5102" translate="yes" xml:space="preserve">
          <source>A class to encapsulate symbolic colors representing the color of native GUI objects on a system. For systems which support the dynamic update of the system colors (when the user changes the colors) the actual RGB values of these symbolic colors will also change dynamically. In order to compare the &quot;current&quot; RGB value of a &lt;code&gt;SystemColor&lt;/code&gt; object with a non-symbolic Color object, &lt;code&gt;getRGB&lt;/code&gt; should be used rather than &lt;code&gt;equals&lt;/code&gt;.</source>
          <target state="translated">A class to encapsulate symbolic colors representing the color of native GUI objects on a system. For systems which support the dynamic update of the system colors (when the user changes the colors) the actual RGB values of these symbolic colors will also change dynamically. In order to compare the &quot;current&quot; RGB value of a &lt;code&gt;SystemColor&lt;/code&gt; object with a non-symbolic Color object, &lt;code&gt;getRGB&lt;/code&gt; should be used rather than &lt;code&gt;equals&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="030b29871944e589acd7496284b1c4426c4716e2" translate="yes" xml:space="preserve">
          <source>A class to encapsulate the bitmap representation of the mouse cursor.</source>
          <target state="translated">A class to encapsulate the bitmap representation of the mouse cursor.</target>
        </trans-unit>
        <trans-unit id="2616ee32c896220e397e902634bd1c1e8c1589bd" translate="yes" xml:space="preserve">
          <source>A class to manage the effective position of the child views in a localized area while changes are being made around the localized area.</source>
          <target state="translated">A class to manage the effective position of the child views in a localized area while changes are being made around the localized area.</target>
        </trans-unit>
        <trans-unit id="37be1b43a2f31099bae6adbd6242fcde167cd4c4" translate="yes" xml:space="preserve">
          <source>A class to manage the effective position of the child views in a localized area while changes are being made around the localized area. The AsyncBoxView may be continuously changing, but the visible area needs to remain fairly stable until the layout thread decides to publish an update to the parent.</source>
          <target state="translated">A class to manage the effective position of the child views in a localized area while changes are being made around the localized area. The AsyncBoxView may be continuously changing, but the visible area needs to remain fairly stable until the layout thread decides to publish an update to the parent.</target>
        </trans-unit>
        <trans-unit id="9670fee5d37230af79301f57acb9eece66d27fe5" translate="yes" xml:space="preserve">
          <source>A class to monitor the progress of some operation.</source>
          <target state="translated">A class to monitor the progress of some operation.</target>
        </trans-unit>
        <trans-unit id="9fd4e45fc15093167532ea519baf9d505efa6efa" translate="yes" xml:space="preserve">
          <source>A class to monitor the progress of some operation. If it looks like the operation will take a while, a progress dialog will be popped up. When the ProgressMonitor is created it is given a numeric range and a descriptive string. As the operation progresses, call the setProgress method to indicate how far along the [min,max] range the operation is. Initially, there is no ProgressDialog. After the first millisToDecideToPopup milliseconds (default 500) the progress monitor will predict how long the operation will take. If it is longer than millisToPopup (default 2000, 2 seconds) a ProgressDialog will be popped up.</source>
          <target state="translated">A class to monitor the progress of some operation. If it looks like the operation will take a while, a progress dialog will be popped up. When the ProgressMonitor is created it is given a numeric range and a descriptive string. As the operation progresses, call the setProgress method to indicate how far along the [min,max] range the operation is. Initially, there is no ProgressDialog. After the first millisToDecideToPopup milliseconds (default 500) the progress monitor will predict how long the operation will take. If it is longer than millisToPopup (default 2000, 2 seconds) a ProgressDialog will be popped up.</target>
        </trans-unit>
        <trans-unit id="8aa982ebac932e2a0592a5cc78b9283fd6107389" translate="yes" xml:space="preserve">
          <source>A class to perform rendering of the glyphs.</source>
          <target state="translated">A class to perform rendering of the glyphs.</target>
        </trans-unit>
        <trans-unit id="cd7e5df83035855ad2d528ef68b31448dee3c330" translate="yes" xml:space="preserve">
          <source>A class to perform rendering of the glyphs. This can be implemented to be stateless, or to hold some information as a cache to facilitate faster rendering and model/view translation. At a minimum, the GlyphPainter allows a View implementation to perform its duties independent of a particular version of JVM and selection of capabilities (i.e. shaping for i18n, etc).</source>
          <target state="translated">A class to perform rendering of the glyphs. This can be implemented to be stateless, or to hold some information as a cache to facilitate faster rendering and model/view translation. At a minimum, the GlyphPainter allows a View implementation to perform its duties independent of a particular version of JVM and selection of capabilities (i.e. shaping for i18n, etc).</target>
        </trans-unit>
        <trans-unit id="bca4de61f3be4e6b7ba61ee56e5ad81c0eec2dcc" translate="yes" xml:space="preserve">
          <source>A class which enables secure communications using protocols such as the Secure Sockets Layer (SSL) or &lt;a href=&quot;http://www.ietf.org/rfc/rfc2246.txt&quot;&gt; IETF RFC 2246 &quot;Transport Layer Security&quot; (TLS) &lt;/a&gt; protocols, but is transport independent.</source>
          <target state="translated">SSL (Secure Sockets Layer) 또는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2246.txt&quot;&gt;IETF RFC 2246 &quot;TLS (Transport Layer Security)&quot;&lt;/a&gt; 프로토콜과 같은 프로토콜을 사용하여 보안 통신을 가능하게 하지만 전송에 독립적 인 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="21ca1c378b497afd314ff5f225a2637e9eaa55fe" translate="yes" xml:space="preserve">
          <source>A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding a &lt;code&gt;PropertyChangeListener&lt;/code&gt; with a &quot;bound&quot; property.</source>
          <target state="translated">&quot;바운드&quot;속성 으로 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 를 추가하기 위해 &lt;code&gt;EventListenerProxy&lt;/code&gt; 를 확장하는 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="0f3ca17d6fac572ec6a95c1b55d04d926f20879a" translate="yes" xml:space="preserve">
          <source>A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding a &lt;code&gt;PropertyChangeListener&lt;/code&gt; with a &quot;bound&quot; property. Instances of this class can be added as &lt;code&gt;PropertyChangeListener&lt;/code&gt;s to a bean which supports firing property change events.</source>
          <target state="translated">&quot;바운드&quot;속성 으로 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 를 추가하기 위해 &lt;code&gt;EventListenerProxy&lt;/code&gt; 를 확장하는 클래스입니다 . 이 클래스의 인스턴스는 속성 변경 이벤트 발생을 지원하는 Bean에 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 로 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0314ff4c39d100d0f62f503ec1527df57cbde8df" translate="yes" xml:space="preserve">
          <source>A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding a &lt;code&gt;VetoableChangeListener&lt;/code&gt; with a &quot;constrained&quot; property.</source>
          <target state="translated">&quot;제한된&quot;속성 으로 &lt;code&gt;VetoableChangeListener&lt;/code&gt; 를 추가하기 위해 &lt;code&gt;EventListenerProxy&lt;/code&gt; 를 확장하는 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="08dd04ae093513ff4643c0d0511758136f388009" translate="yes" xml:space="preserve">
          <source>A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding a &lt;code&gt;VetoableChangeListener&lt;/code&gt; with a &quot;constrained&quot; property. Instances of this class can be added as &lt;code&gt;VetoableChangeListener&lt;/code&gt;s to a bean which supports firing vetoable change events.</source>
          <target state="translated">&quot;제한된&quot;속성 으로 &lt;code&gt;VetoableChangeListener&lt;/code&gt; 를 추가하기 위해 &lt;code&gt;EventListenerProxy&lt;/code&gt; 를 확장하는 클래스입니다 . 이 클래스의 인스턴스는 거부 가능한 변경 이벤트 발생을 지원하는 Bean에 &lt;code&gt;VetoableChangeListener&lt;/code&gt; 로 추가 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f4f59cb8ccd1394ce9dce3aaab5645471dfc04e9" translate="yes" xml:space="preserve">
          <source>A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding an &lt;code&gt;AWTEventListener&lt;/code&gt; for a specific event mask.</source>
          <target state="translated">A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding an &lt;code&gt;AWTEventListener&lt;/code&gt; for a specific event mask.</target>
        </trans-unit>
        <trans-unit id="c7eabbe3e661a2f1aec0a2f4de36c118c72ac391" translate="yes" xml:space="preserve">
          <source>A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding an &lt;code&gt;AWTEventListener&lt;/code&gt; for a specific event mask. Instances of this class can be added as &lt;code&gt;AWTEventListener&lt;/code&gt;s to a &lt;code&gt;Toolkit&lt;/code&gt; object.</source>
          <target state="translated">A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding an &lt;code&gt;AWTEventListener&lt;/code&gt; for a specific event mask. Instances of this class can be added as &lt;code&gt;AWTEventListener&lt;/code&gt; s to a &lt;code&gt;Toolkit&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="dd13932c0d22b0160242af32a989bade22bb60de" translate="yes" xml:space="preserve">
          <source>A class which implements a border of an arbitrary stroke.</source>
          <target state="translated">A class which implements a border of an arbitrary stroke.</target>
        </trans-unit>
        <trans-unit id="a9d774a2ad1c34f943fd3f35eec23cc0435ff679" translate="yes" xml:space="preserve">
          <source>A class which implements a line border of arbitrary thickness and of a single color.</source>
          <target state="translated">A class which implements a line border of arbitrary thickness and of a single color.</target>
        </trans-unit>
        <trans-unit id="af729e265d8facc27cf4d8a66ab8677d821faede" translate="yes" xml:space="preserve">
          <source>A class which implements a raised or lowered bevel with softened corners.</source>
          <target state="translated">A class which implements a raised or lowered bevel with softened corners.</target>
        </trans-unit>
        <trans-unit id="b7f926173de62d6b847f8323ac6334b03a1ecf24" translate="yes" xml:space="preserve">
          <source>A class which implements a simple etched border which can either be etched-in or etched-out.</source>
          <target state="translated">A class which implements a simple etched border which can either be etched-in or etched-out.</target>
        </trans-unit>
        <trans-unit id="9b29e9316680a3927d3ec38f4e1643fb2880f946" translate="yes" xml:space="preserve">
          <source>A class which implements a simple etched border which can either be etched-in or etched-out. If no highlight/shadow colors are initialized when the border is created, then these colors will be dynamically derived from the background color of the component argument passed into the paintBorder() method.</source>
          <target state="translated">A class which implements a simple etched border which can either be etched-in or etched-out. If no highlight/shadow colors are initialized when the border is created, then these colors will be dynamically derived from the background color of the component argument passed into the paintBorder() method.</target>
        </trans-unit>
        <trans-unit id="b3caff1179de3b708c9ee025e3ade256a0f5bf51" translate="yes" xml:space="preserve">
          <source>A class which implements a simple two-line bevel border.</source>
          <target state="translated">A class which implements a simple two-line bevel border.</target>
        </trans-unit>
        <trans-unit id="ec95e0328e1937e3c469a14b4cca798e2ff74f43" translate="yes" xml:space="preserve">
          <source>A class which implements an arbitrary border with the addition of a String title in a specified position and justification.</source>
          <target state="translated">A class which implements an arbitrary border with the addition of a String title in a specified position and justification.</target>
        </trans-unit>
        <trans-unit id="0dfe0cda489fd1752a80ce4eb44364ba506773f3" translate="yes" xml:space="preserve">
          <source>A class which provides a matte-like border of either a solid color or a tiled icon.</source>
          <target state="translated">A class which provides a matte-like border of either a solid color or a tiled icon.</target>
        </trans-unit>
        <trans-unit id="5273e822b15f7fdd2b253dfd633abca7b4f55002" translate="yes" xml:space="preserve">
          <source>A class which provides an empty, transparent border which takes up space but does no drawing.</source>
          <target state="translated">A class which provides an empty, transparent border which takes up space but does no drawing.</target>
        </trans-unit>
        <trans-unit id="b1e64d61b139a3339ef50761bae5d21d454e68e6" translate="yes" xml:space="preserve">
          <source>A client connection has been closed.</source>
          <target state="translated">클라이언트 연결이 닫혔습니다.</target>
        </trans-unit>
        <trans-unit id="7b6c01324c3ee4c5d8a2eca046353dc1ea9bd2ae" translate="yes" xml:space="preserve">
          <source>A client connection has failed unexpectedly.</source>
          <target state="translated">클라이언트 연결이 예기치 않게 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="ebbd35c91f41e39a02ce595327e7d60d48a87106" translate="yes" xml:space="preserve">
          <source>A client connection has potentially lost notifications. This notification only appears on the client side.</source>
          <target state="translated">클라이언트 연결에서 알림이 손실 될 수 있습니다. 이 알림은 클라이언트쪽에 만 나타납니다.</target>
        </trans-unit>
        <trans-unit id="321eb78d1a8f4a5ebde928ad8b9f55df945982a9" translate="yes" xml:space="preserve">
          <source>A client usually needs to provide more than one processing instruction when submitting a print job. For example, the client might need to specify a media size of A4 and a landscape orientation. To send more than one processing instruction, the client collects the attributes into an attribute set, which the Java Print Service API represents with the &lt;a href=&quot;attributeset&quot;&gt;AttributeSet&lt;/a&gt; interface.</source>
          <target state="translated">클라이언트는 일반적으로 인쇄 작업을 제출할 때 둘 이상의 처리 명령을 제공해야합니다. 예를 들어 클라이언트는 A4의 용지 크기와 가로 방향을 지정해야합니다. 둘 이상의 처리 명령을 전송하기 위해 클라이언트는 속성 세트로 속성을 수집합니다. 속성 세트는 Java Print Service API가 &lt;a href=&quot;attributeset&quot;&gt;AttributeSet&lt;/a&gt; 인터페이스로 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="0b3646c8eee79de5884011a641b442d887ea986b" translate="yes" xml:space="preserve">
          <source>A clock providing access to the current instant, date and time using a time-zone.</source>
          <target state="translated">시간대를 사용하여 현재 순간, 날짜 및 시간에 액세스 할 수있는 시계입니다.</target>
        </trans-unit>
        <trans-unit id="411022af40541bd60a70533dd8bb81f330bbe450" translate="yes" xml:space="preserve">
          <source>A clock will typically obtain the current instant and then convert that to a date or time using a time-zone. This method returns a clock with similar properties but using a different time-zone.</source>
          <target state="translated">시계는 일반적으로 현재 순간을 얻은 다음 시간대를 사용하여 날짜 또는 시간으로 변환합니다. 이 메서드는 속성은 비슷하지만 시간대는 다른 시계를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d73f130682600c047cfb7bb69f8f3922da7e3c8a" translate="yes" xml:space="preserve">
          <source>A clock will typically obtain the current instant and then convert that to a date or time using a time-zone. This method returns the time-zone used.</source>
          <target state="translated">시계는 일반적으로 현재 순간을 얻은 다음 시간대를 사용하여 날짜 또는 시간으로 변환합니다. 이 메소드는 사용 된 시간대를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="a03ba4716d7f3442eb5f94c77e6e8bfaf44ac187" translate="yes" xml:space="preserve">
          <source>A clone of this &lt;code&gt;TIFFDirectory&lt;/code&gt;.</source>
          <target state="translated">A clone of this &lt;code&gt;TIFFDirectory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1575e46f4c5894841b9bc15230c2209aba6759ca" translate="yes" xml:space="preserve">
          <source>A clone of this &lt;code&gt;TIFFField&lt;/code&gt;.</source>
          <target state="translated">A clone of this &lt;code&gt;TIFFField&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d032403b72ab32c0db49ce6607f5c43e7ea0265" translate="yes" xml:space="preserve">
          <source>A close square bracket ']'.</source>
          <target state="translated">닫는 대괄호 ']'.</target>
        </trans-unit>
        <trans-unit id="16d9daac0def4e983ab4c345604f43aa4b945147" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#div(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;div(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression.</source>
          <target state="translated">A code representing the &lt;a href=&quot;#div(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;div(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; expression.</target>
        </trans-unit>
        <trans-unit id="274120ef259900f587c826ae4fad58dc903ce5f7" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#div(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;div(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">A code representing the &lt;a href=&quot;#div(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;div(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</target>
        </trans-unit>
        <trans-unit id="756e5b583471e455897a7576819b503cbab87645" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#eq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;eq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query.</source>
          <target state="translated">A code representing the &lt;a href=&quot;#eq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;eq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; query.</target>
        </trans-unit>
        <trans-unit id="f1422a61531e7ab11df0fbe57dcaf39896d2617f" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#eq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;eq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">A code representing the &lt;a href=&quot;#eq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;eq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</target>
        </trans-unit>
        <trans-unit id="2e09148fead05ae5e4c4acd6942f9b8d3553e934" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#geq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;geq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query.</source>
          <target state="translated">A code representing the &lt;a href=&quot;#geq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;geq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; query.</target>
        </trans-unit>
        <trans-unit id="0f02aa79f6bc2b0698074f7c981c7447533ebf61" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#geq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;geq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">A code representing the &lt;a href=&quot;#geq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;geq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</target>
        </trans-unit>
        <trans-unit id="65639dae217f0171d1cbc9fcc085e8381bb991fa" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#gt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;gt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query.</source>
          <target state="translated">A code representing the &lt;a href=&quot;#gt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;gt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; query.</target>
        </trans-unit>
        <trans-unit id="72e4a41d5f53410fcee634c5b960892e2ab132ba" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#gt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;gt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">A code representing the &lt;a href=&quot;#gt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;gt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</target>
        </trans-unit>
        <trans-unit id="356bf4bc91720230a8de12a728316e7e4afe957f" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#leq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;leq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query.</source>
          <target state="translated">A code representing the &lt;a href=&quot;#leq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;leq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; query.</target>
        </trans-unit>
        <trans-unit id="b4d193635627eb8b0d32271d8266d898212ae087" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#leq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;leq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">A code representing the &lt;a href=&quot;#leq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;leq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</target>
        </trans-unit>
        <trans-unit id="4772932c32caf465517bbb17560ee1a5df935a55" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#lt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;lt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query.</source>
          <target state="translated">A code representing the &lt;a href=&quot;#lt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;lt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; query.</target>
        </trans-unit>
        <trans-unit id="1a14a97eef7fd8e0b40bbcd0a0f0e9978da41c9d" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#lt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;lt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">A code representing the &lt;a href=&quot;#lt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;lt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</target>
        </trans-unit>
        <trans-unit id="d4d1d20b7db8d473db7b9c0173c7ed1be02118db" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#minus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;minus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression.</source>
          <target state="translated">A code representing the &lt;a href=&quot;#minus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;minus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; expression.</target>
        </trans-unit>
        <trans-unit id="9d06f858e5f7e75827ccceb5504a9a693be878f3" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#minus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;minus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">A code representing the &lt;a href=&quot;#minus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;minus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</target>
        </trans-unit>
        <trans-unit id="c2592553116110b83871597faf2ef3d219afb57c" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#plus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;plus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression.</source>
          <target state="translated">A code representing the &lt;a href=&quot;#plus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;plus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; expression.</target>
        </trans-unit>
        <trans-unit id="6f3c8ffe6b209dc3c393905c377cd0bd4455b398" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#plus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;plus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">A code representing the &lt;a href=&quot;#plus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;plus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</target>
        </trans-unit>
        <trans-unit id="28091a6029c4893f031676693a7b37de5ae873b8" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#times(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;times(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression.</source>
          <target state="translated">A code representing the &lt;a href=&quot;#times(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;times(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; expression.</target>
        </trans-unit>
        <trans-unit id="16064b74275b2ada36b278bd9880d50992e31d6c" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#times(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;times(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">A code representing the &lt;a href=&quot;#times(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;times(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</target>
        </trans-unit>
        <trans-unit id="a3167f8e6fb50dd28fb24a3c88ebe100fe20efca" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#div-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;div(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;query#div-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;div(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; 표현식을 나타내는 코드 입니다. 이것은 직렬화 된 형식의 쿼리에서 주로 중요합니다.</target>
        </trans-unit>
        <trans-unit id="7bb36ba56666bf2d309a7d849a64f0feb91a1c90" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#eq-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;eq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;query#eq-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;eq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; 쿼리를 나타내는 코드 입니다. 이것은 직렬화 된 형식의 쿼리에서 주로 중요합니다.</target>
        </trans-unit>
        <trans-unit id="e1f3063b18e6a5262c8d2ca620f2e501fed8e478" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#geq-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;geq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;query#geq-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;geq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; 쿼리를 나타내는 코드 입니다. 이것은 직렬화 된 형식의 쿼리에서 주로 중요합니다.</target>
        </trans-unit>
        <trans-unit id="76157a29212309c8696c9440a7608cee01f04524" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#gt-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;gt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;query#gt-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;gt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; 쿼리를 나타내는 코드 입니다. 이것은 직렬화 된 형식의 쿼리에서 주로 중요합니다.</target>
        </trans-unit>
        <trans-unit id="aaf590563a128b508138fdcf398112e1e233a859" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#leq-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;leq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;query#leq-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;leq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; 쿼리를 나타내는 코드 입니다. 이것은 직렬화 된 형식의 쿼리에서 주로 중요합니다.</target>
        </trans-unit>
        <trans-unit id="b3e616c5883d2f276fc5ec2915c117e7e83e390d" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#lt-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;lt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;query#lt-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;lt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; 쿼리를 나타내는 코드 입니다. 이것은 직렬화 된 형식의 쿼리에서 주로 중요합니다.</target>
        </trans-unit>
        <trans-unit id="9f32472a91294d62e6f749d86f189b4cf1130071" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#minus-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;minus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;query#minus-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;minus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; 표현식을 나타내는 코드 입니다. 이것은 직렬화 된 형식의 쿼리에서 주로 중요합니다.</target>
        </trans-unit>
        <trans-unit id="131ebaef4e8f0c0eada9e793b43e33f7c63c1497" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#plus-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;plus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;query#plus-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;plus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; 표현식을 나타내는 코드 입니다. 이것은 직렬화 된 형식의 쿼리에서 주로 중요합니다.</target>
        </trans-unit>
        <trans-unit id="086389d031264f0909b42a38a4d40ccaa6ef304e" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#times-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;times(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;query#times-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;times(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt; 표현식을 나타내는 코드 입니다. 이것은 직렬화 된 형식의 쿼리에서 주로 중요합니다.</target>
        </trans-unit>
        <trans-unit id="15959f314ff470e7f4e0c8ec74706e2bbe3e1b8a" translate="yes" xml:space="preserve">
          <source>A code representing the type of the underlying object, as defined above.</source>
          <target state="translated">A code representing the type of the underlying object, as defined above.</target>
        </trans-unit>
        <trans-unit id="9e046118fc615d90a21c6a38e709d405bcdb107b" translate="yes" xml:space="preserve">
          <source>A coder-result object describing the reason for termination</source>
          <target state="translated">종료 이유를 설명하는 코더 결과 개체</target>
        </trans-unit>
        <trans-unit id="1bc357c45dad65bdc1abef893fd379bb2a9a1253" translate="yes" xml:space="preserve">
          <source>A coder-result object, either &lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt;&lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;coderresult#OVERFLOW&quot;&gt;&lt;code&gt;CoderResult.OVERFLOW&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt; &lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;coderresult#OVERFLOW&quot;&gt; &lt;code&gt;CoderResult.OVERFLOW&lt;/code&gt; &lt;/a&gt; 중 하나 인 코더 결과 개체</target>
        </trans-unit>
        <trans-unit id="6cb44da210a8abf4eb01f4e0b39fcd31491af613" translate="yes" xml:space="preserve">
          <source>A collection adapter &lt;code&gt;collectArguments(mh, 0, coll)&lt;/code&gt; is equivalent to one which first &quot;folds&quot; the affected arguments, and then drops them, in separate steps as follows:</source>
          <target state="translated">콜렉션 어댑터 &lt;code&gt;collectArguments(mh, 0, coll)&lt;/code&gt; 는 다음과 같이 영향을받는 인수를 먼저 &quot;접은 후&quot;분리하는 단계와 같습니다.</target>
        </trans-unit>
        <trans-unit id="2d53b7ff736eba16937ab8f02218e094fde7b521" translate="yes" xml:space="preserve">
          <source>A collection designed for holding elements prior to processing.</source>
          <target state="translated">처리 전에 요소를 고정하도록 설계된 컬렉션입니다.</target>
        </trans-unit>
        <trans-unit id="68b3debc55e51d5e6557af0db3301e3ccdcb6461" translate="yes" xml:space="preserve">
          <source>A collection designed for holding elements prior to processing. Besides basic &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; operations, queues provide additional insertion, extraction, and inspection operations. Each of these methods exists in two forms: one throws an exception if the operation fails, the other returns a special value (either &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, depending on the operation). The latter form of the insert operation is designed specifically for use with capacity-restricted &lt;code&gt;Queue&lt;/code&gt; implementations; in most implementations, insert operations cannot fail.</source>
          <target state="translated">처리 전에 요소를 고정하도록 설계된 컬렉션입니다. 기본 &lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt; 작업 외에도 대기열은 추가 삽입, 추출 및 검사 작업을 제공합니다. 이러한 각 메소드는 두 가지 형태로 존재합니다. 하나는 작업이 실패하면 예외가 발생하고 다른 하나는 특수한 값을 반환합니다 ( 작업에 따라 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; ). 후자의 삽입 조작 양식은 용량 제한 &lt;code&gt;Queue&lt;/code&gt; 구현 에 사용하도록 특별히 설계되었습니다 . 대부분의 구현에서 삽입 작업은 실패 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f59aab2d9547406cafa399bd2d77f092dd7a82e2" translate="yes" xml:space="preserve">
          <source>A collection of &lt;em&gt;well known&lt;/em&gt; or common attribute keys and methods to apply to an AttributeSet or MutableAttributeSet to get/set the properties in a typesafe manner.</source>
          <target state="translated">A collection of &lt;em&gt;well known&lt;/em&gt; or common attribute keys and methods to apply to an AttributeSet or MutableAttributeSet to get/set the properties in a typesafe manner.</target>
        </trans-unit>
        <trans-unit id="461ccfb5dcfe04e9522249ee785de05875b3ef4a" translate="yes" xml:space="preserve">
          <source>A collection of attributes to associate with an element in a document.</source>
          <target state="translated">A collection of attributes to associate with an element in a document.</target>
        </trans-unit>
        <trans-unit id="938b9f3e55564142422e27aa653a0da3ed879659" translate="yes" xml:space="preserve">
          <source>A collection of attributes to associate with an element in a document. Since these are typically used to associate character and paragraph styles with the element, operations for this are provided. Other customized attributes that get associated with the element will effectively be name-value pairs that live in a hierarchy and if a name (key) is not found locally, the request is forwarded to the parent. Commonly used attributes are separated out to facilitate alternative implementations that are more efficient.</source>
          <target state="translated">A collection of attributes to associate with an element in a document. Since these are typically used to associate character and paragraph styles with the element, operations for this are provided. Other customized attributes that get associated with the element will effectively be name-value pairs that live in a hierarchy and if a name (key) is not found locally, the request is forwarded to the parent. Commonly used attributes are separated out to facilitate alternative implementations that are more efficient.</target>
        </trans-unit>
        <trans-unit id="320018eaa34b7b516123d4e578088cd6f97ff4ed" translate="yes" xml:space="preserve">
          <source>A collection of attributes, typically used to represent character and paragraph styles.</source>
          <target state="translated">A collection of attributes, typically used to represent character and paragraph styles.</target>
        </trans-unit>
        <trans-unit id="6c8e3eb74807024b9845a5446b8991354e3afd80" translate="yes" xml:space="preserve">
          <source>A collection of attributes, typically used to represent character and paragraph styles. This is an implementation of MutableAttributeSet that can be observed if desired. These styles will take advantage of immutability while the sets are small enough, and may be substantially more efficient than something like SimpleAttributeSet.</source>
          <target state="translated">A collection of attributes, typically used to represent character and paragraph styles. This is an implementation of MutableAttributeSet that can be observed if desired. These styles will take advantage of immutability while the sets are small enough, and may be substantially more efficient than something like SimpleAttributeSet.</target>
        </trans-unit>
        <trans-unit id="daad42586d8382773f61a80ac9d8a9a960bc9ed2" translate="yes" xml:space="preserve">
          <source>A collection of bindings of KeyStrokes to actions.</source>
          <target state="translated">A collection of bindings of KeyStrokes to actions.</target>
        </trans-unit>
        <trans-unit id="214488a70119ea5c739cf23236a2ecb22add7f67" translate="yes" xml:space="preserve">
          <source>A collection of bindings of KeyStrokes to actions. The bindings are basically name-value pairs that potentially resolve in a hierarchy.</source>
          <target state="translated">A collection of bindings of KeyStrokes to actions. The bindings are basically name-value pairs that potentially resolve in a hierarchy.</target>
        </trans-unit>
        <trans-unit id="bd0c8e2a8c90cddd8d3a20af3894414e16b21b63" translate="yes" xml:space="preserve">
          <source>A collection of constants generally used for positioning and orienting components on the screen.</source>
          <target state="translated">A collection of constants generally used for positioning and orienting components on the screen.</target>
        </trans-unit>
        <trans-unit id="ad2b8f0ed4118ca4e414b433ca3f2198d41ed52f" translate="yes" xml:space="preserve">
          <source>A collection of methods to deal with various text related activities.</source>
          <target state="translated">A collection of methods to deal with various text related activities.</target>
        </trans-unit>
        <trans-unit id="819f9a66ec486a6661a3a43fb152349b79c11a6d" translate="yes" xml:space="preserve">
          <source>A collection of pixels is represented as a Raster, which consists of a DataBuffer and a SampleModel. The SampleModel allows access to samples in the DataBuffer and may provide low-level information that a programmer can use to directly manipulate samples and pixels in the DataBuffer.</source>
          <target state="translated">A collection of pixels is represented as a Raster, which consists of a DataBuffer and a SampleModel. The SampleModel allows access to samples in the DataBuffer and may provide low-level information that a programmer can use to directly manipulate samples and pixels in the DataBuffer.</target>
        </trans-unit>
        <trans-unit id="7637646e14f7755f8e9aeb36fd802da41f8fb558" translate="yes" xml:space="preserve">
          <source>A collection of unique attributes.</source>
          <target state="translated">A collection of unique attributes.</target>
        </trans-unit>
        <trans-unit id="dcf32be1ae22a40a3b351bd2ff31dffecf4e02e6" translate="yes" xml:space="preserve">
          <source>A collection of unique attributes. This is a read-only, immutable interface. An attribute is basically a key and a value assigned to the key. The collection may represent something like a style run, a logical style, etc. These are generally used to describe features that will contribute to some graphical representation such as a font. The set of possible keys is unbounded and can be anything. Typically View implementations will respond to attribute definitions and render something to represent the attributes.</source>
          <target state="translated">A collection of unique attributes. This is a read-only, immutable interface. An attribute is basically a key and a value assigned to the key. The collection may represent something like a style run, a logical style, etc. These are generally used to describe features that will contribute to some graphical representation such as a font. The set of possible keys is unbounded and can be anything. Typically View implementations will respond to attribute definitions and render something to represent the attributes.</target>
        </trans-unit>
        <trans-unit id="d056f201a492fbd928cfc64c39c7c8c570d12dc7" translate="yes" xml:space="preserve">
          <source>A collection of utility methods for Swing.</source>
          <target state="translated">A collection of utility methods for Swing.</target>
        </trans-unit>
        <trans-unit id="35eecf8b6bf9de4c11825dba857014a73dae84d7" translate="yes" xml:space="preserve">
          <source>A collection that contains no duplicate elements.</source>
          <target state="translated">중복 요소가없는 컬렉션입니다.</target>
        </trans-unit>
        <trans-unit id="d9305b926296adf001ad4ca75d6bb83b0e0e24fd" translate="yes" xml:space="preserve">
          <source>A collection that contains no duplicate elements. More formally, sets contain no pair of elements &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; such that &lt;code&gt;e1.equals(e2)&lt;/code&gt;, and at most one null element. As implied by its name, this interface models the mathematical</source>
          <target state="translated">중복 요소가없는 컬렉션입니다. 보다 공식적으로, 세트에는 &lt;code&gt;e1.equals(e2)&lt;/code&gt; 와 같은 한 쌍의 요소 &lt;code&gt;e1&lt;/code&gt; 및 &lt;code&gt;e2&lt;/code&gt; 가없고 최대 하나의 null 요소가 포함됩니다. 이름에서 알 수 있듯이이 인터페이스는 수학을 모델링합니다.</target>
        </trans-unit>
        <trans-unit id="e30d7f9b91d5a7ffab48faee759b58d4ae7bc7c2" translate="yes" xml:space="preserve">
          <source>A colon</source>
          <target state="translated">콜론</target>
        </trans-unit>
        <trans-unit id="a5774fa8d9c069418206ed483e2ca2f3cf35a52d" translate="yes" xml:space="preserve">
          <source>A colon (&lt;code&gt;:&lt;/code&gt;).</source>
          <target state="translated">콜론 ( &lt;code&gt;:&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f3014f21a6bc8bc6dcb869994f59c9558c53b7eb" translate="yes" xml:space="preserve">
          <source>A comma</source>
          <target state="translated">쉼표</target>
        </trans-unit>
        <trans-unit id="58bed6c2bf813dbd5b59b07d5f4ba3ec11ec7f9e" translate="yes" xml:space="preserve">
          <source>A comma-separated list of &lt;code&gt;.jar&lt;/code&gt; file names.</source>
          <target state="translated">&lt;code&gt;.jar&lt;/code&gt; 파일 이름 의 쉼표로 구분 된 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="3e15ed690ab5b10b6bbfffdf6ea9f15a49f6225b" translate="yes" xml:space="preserve">
          <source>A command APDU following the structure defined in ISO/IEC 7816-4.</source>
          <target state="translated">A command APDU following the structure defined in ISO/IEC 7816-4.</target>
        </trans-unit>
        <trans-unit id="681b75f4208064da9a591ffc6a26dbde63b01fc6" translate="yes" xml:space="preserve">
          <source>A command APDU following the structure defined in ISO/IEC 7816-4. It consists of a four byte header and a conditional body of variable length. This class does not attempt to verify that the APDU encodes a semantically valid command.</source>
          <target state="translated">A command APDU following the structure defined in ISO/IEC 7816-4. It consists of a four byte header and a conditional body of variable length. This class does not attempt to verify that the APDU encodes a semantically valid command.</target>
        </trans-unit>
        <trans-unit id="c28100e80e883d1cd0313829f4706d03760bb13d" translate="yes" xml:space="preserve">
          <source>A common format of resource bundles is in &lt;a href=&quot;propertyresourcebundle&quot;&gt;.properties&lt;/a&gt; file format. Typically &lt;code&gt;.properties&lt;/code&gt; resource bundles are packaged in a JAR file. Resource bundle only JAR file can be readily deployed as an &lt;a href=&quot;../lang/module/modulefinder#automatic-modules&quot;&gt; automatic module&lt;/a&gt;. For example, if the JAR file contains the entry &quot;&lt;code&gt;p/q/Foo_ja.properties&lt;/code&gt;&quot; and no &lt;code&gt;.class&lt;/code&gt; entry, when resolved and defined as an automatic module, no package is derived for this module. This allows resource bundles in &lt;code&gt;.properties&lt;/code&gt; format packaged in one or more JAR files that may contain entries in the same directory and can be resolved successfully as automatic modules.</source>
          <target state="translated">A common format of resource bundles is in &lt;a href=&quot;propertyresourcebundle&quot;&gt;.properties&lt;/a&gt; file format. Typically &lt;code&gt;.properties&lt;/code&gt; resource bundles are packaged in a JAR file. Resource bundle only JAR file can be readily deployed as an &lt;a href=&quot;../lang/module/modulefinder#automatic-modules&quot;&gt; automatic module&lt;/a&gt;. For example, if the JAR file contains the entry &quot; &lt;code&gt;p/q/Foo_ja.properties&lt;/code&gt; &quot; and no &lt;code&gt;.class&lt;/code&gt; entry, when resolved and defined as an automatic module, no package is derived for this module. This allows resource bundles in &lt;code&gt;.properties&lt;/code&gt; format packaged in one or more JAR files that may contain entries in the same directory and can be resolved successfully as automatic modules.</target>
        </trans-unit>
        <trans-unit id="69b0d2636d902fad23aed7fa5d62125f0203e8ab" translate="yes" xml:space="preserve">
          <source>A common interface for all entities that declare type variables.</source>
          <target state="translated">유형 변수를 선언하는 모든 엔티티에 대한 공통 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="c0a8585c7a0901c1332aef262b2493ef29edd91b" translate="yes" xml:space="preserve">
          <source>A common operation to want to do is to set the background color that will be used if the main viewport view is smaller than the viewport, or is not opaque. This can be accomplished by setting the background color of the viewport, via &lt;code&gt;scrollPane.getViewport().setBackground()&lt;/code&gt;. The reason for setting the color of the viewport and not the scrollpane is that by default &lt;code&gt;JViewport&lt;/code&gt; is opaque which, among other things, means it will completely fill in its background using its background color. Therefore when &lt;code&gt;JScrollPane&lt;/code&gt; draws its background the viewport will usually draw over it.</source>
          <target state="translated">A common operation to want to do is to set the background color that will be used if the main viewport view is smaller than the viewport, or is not opaque. This can be accomplished by setting the background color of the viewport, via &lt;code&gt;scrollPane.getViewport().setBackground()&lt;/code&gt; . The reason for setting the color of the viewport and not the scrollpane is that by default &lt;code&gt;JViewport&lt;/code&gt; is opaque which, among other things, means it will completely fill in its background using its background color. Therefore when &lt;code&gt;JScrollPane&lt;/code&gt; draws its background the viewport will usually draw over it.</target>
        </trans-unit>
        <trans-unit id="473969e4a73feeded3816bdf23272e57822f32d1" translate="yes" xml:space="preserve">
          <source>A common strategy for creating more complex types of documents is to have the EditorKit implementation return a factory. Since the EditorKit ties all of the pieces necessary to maintain a type of document, the factory is typically an important part of that and should be produced by the EditorKit implementation.</source>
          <target state="translated">A common strategy for creating more complex types of documents is to have the EditorKit implementation return a factory. Since the EditorKit ties all of the pieces necessary to maintain a type of document, the factory is typically an important part of that and should be produced by the EditorKit implementation.</target>
        </trans-unit>
        <trans-unit id="f9828806665693a1722cf24a45e24e2a1d43bf9f" translate="yes" xml:space="preserve">
          <source>A common superclass for exceptions specific to different kinds of unknown entities allows a single catch block to easily provide uniform handling of those related conditions.</source>
          <target state="translated">A common superclass for exceptions specific to different kinds of unknown entities allows a single catch block to easily provide uniform handling of those related conditions.</target>
        </trans-unit>
        <trans-unit id="7b03fd8af749e1a3ce6657ea29c356afa369685b" translate="yes" xml:space="preserve">
          <source>A common superclass for those exceptions allows a single catch block to have code handling them uniformly.</source>
          <target state="translated">이러한 예외에 대한 공통 수퍼 클래스를 사용하면 단일 catch 블록이 코드를 균일하게 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="149122bbabc5bd28e11163d620d20637d4bfd2af" translate="yes" xml:space="preserve">
          <source>A common use for this attribute will be applications which want to redirect output to a local disk file : eg.&quot;file:out.prn&quot;. Note that proper construction of &quot;file:&quot; scheme &lt;code&gt;URI&lt;/code&gt; instances should be performed using the &lt;code&gt;toURI()&lt;/code&gt; method of class &lt;a href=&quot;../../../../../java.base/java/io/file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;. See the documentation on that class for more information.</source>
          <target state="translated">A common use for this attribute will be applications which want to redirect output to a local disk file : eg.&quot;file:out.prn&quot;. Note that proper construction of &quot;file:&quot; scheme &lt;code&gt;URI&lt;/code&gt; instances should be performed using the &lt;code&gt;toURI()&lt;/code&gt; method of class &lt;a href=&quot;../../../../../java.base/java/io/file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;. See the documentation on that class for more information.</target>
        </trans-unit>
        <trans-unit id="5a2eb4eb16e9b666e1d02dd5dca1670d20c9c93d" translate="yes" xml:space="preserve">
          <source>A common use for this attribute will be applications which want to redirect output to a local disk file : eg.&quot;file:out.prn&quot;. Note that proper construction of &quot;file:&quot; scheme URI instances should be performed using the &lt;code&gt;toURI()&lt;/code&gt; method of class &lt;a href=&quot;../../../../java/io/file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;. See the documentation on that class for more information.</source>
          <target state="translated">이 속성의 일반적인 사용은 출력을 로컬 디스크 파일 (예 : &quot;file : out.prn&quot;)로 리디렉션하려는 응용 프로그램입니다. &quot;file :&quot;스킴 URI 인스턴스의 올바른 구성은 &lt;a href=&quot;../../../../java/io/file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 클래스 의 &lt;code&gt;toURI()&lt;/code&gt; 메소드를 사용하여 수행해야합니다 . 자세한 내용은 해당 클래스의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b812460359ac28696c5c53d6194bcc0b4e3e6d4b" translate="yes" xml:space="preserve">
          <source>A comparator that imposes the reverse of the</source>
          <target state="translated">의 반대를 부과하는 비교기</target>
        </trans-unit>
        <trans-unit id="b1069285dcf5aa4a511fd41ed7ca14c6e2a346c9" translate="yes" xml:space="preserve">
          <source>A comparator that imposes the reverse ordering of the specified comparator.</source>
          <target state="translated">지정된 비교기의 역순을 부과하는 비교기.</target>
        </trans-unit>
        <trans-unit id="88cbfaab6cde9461570cfd17bac039d6f107d7c6" translate="yes" xml:space="preserve">
          <source>A comparison function, which imposes a</source>
          <target state="translated">비교 함수는</target>
        </trans-unit>
        <trans-unit id="8611f588b20f634a35201b6faa98a5b6fa04b35e" translate="yes" xml:space="preserve">
          <source>A compiled representation of a regular expression.</source>
          <target state="translated">정규식의 컴파일 된 표현.</target>
        </trans-unit>
        <trans-unit id="ecd305d3625122d943cbe093e927d37229d6ccf1" translate="yes" xml:space="preserve">
          <source>A compiler tool has an associated standard file manager, which is the file manager that is native to the tool (or built-in). The standard file manager can be obtained by calling &lt;a href=&quot;#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt;getStandardFileManager&lt;/a&gt;.</source>
          <target state="translated">A compiler tool has an associated standard file manager, which is the file manager that is native to the tool (or built-in). The standard file manager can be obtained by calling &lt;a href=&quot;#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt;getStandardFileManager&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="507982c243d52965e48c7b0732508c6ac665735a" translate="yes" xml:space="preserve">
          <source>A compiler tool has an associated standard file manager, which is the file manager that is native to the tool (or built-in). The standard file manager can be obtained by calling &lt;a href=&quot;javacompiler#getStandardFileManager-javax.tools.DiagnosticListener-java.util.Locale-java.nio.charset.Charset-&quot;&gt;getStandardFileManager&lt;/a&gt;.</source>
          <target state="translated">컴파일러 도구에는 도구 (또는 기본 제공 도구)의 기본 파일 관리자 인 관련 표준 파일 관리자가 있습니다. 표준 파일 관리자는 &lt;a href=&quot;javacompiler#getStandardFileManager-javax.tools.DiagnosticListener-java.util.Locale-java.nio.charset.Charset-&quot;&gt;getStandardFileManager&lt;/a&gt; 를 호출하여 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="317c0a69ba9309f170888d8994808d0c8f23b104" translate="yes" xml:space="preserve">
          <source>A compiler tool must function with any file manager as long as any additional requirements as detailed in the methods below are met. If no file manager is provided, the compiler tool will use a standard file manager such as the one returned by &lt;a href=&quot;#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt;getStandardFileManager&lt;/a&gt;.</source>
          <target state="translated">A compiler tool must function with any file manager as long as any additional requirements as detailed in the methods below are met. If no file manager is provided, the compiler tool will use a standard file manager such as the one returned by &lt;a href=&quot;#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt;getStandardFileManager&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a22de5f7495f42b8eb96d0161f9be3e98aab30a9" translate="yes" xml:space="preserve">
          <source>A compiler tool must function with any file manager as long as any additional requirements as detailed in the methods below are met. If no file manager is provided, the compiler tool will use a standard file manager such as the one returned by &lt;a href=&quot;javacompiler#getStandardFileManager-javax.tools.DiagnosticListener-java.util.Locale-java.nio.charset.Charset-&quot;&gt;getStandardFileManager&lt;/a&gt;.</source>
          <target state="translated">아래 방법에 설명 된 추가 요구 사항이 충족되는 한 컴파일러 도구는 모든 파일 관리자와 함께 작동해야합니다. 파일 관리자가 제공되지 않으면 컴파일러 도구는 &lt;a href=&quot;javacompiler#getStandardFileManager-javax.tools.DiagnosticListener-java.util.Locale-java.nio.charset.Charset-&quot;&gt;getStandardFileManager가&lt;/a&gt; 리턴 한 것과 같은 표준 파일 관리자를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="c8340a51d99720fe0c029bc676ff25eb592e4528" translate="yes" xml:space="preserve">
          <source>A compiler-specific value, or &lt;code&gt;null&lt;/code&gt; if no compiler is available</source>
          <target state="translated">컴파일러 고유의 값. 사용 가능한 컴파일러가 &lt;code&gt;null&lt;/code&gt; 경우는 null</target>
        </trans-unit>
        <trans-unit id="c013238a0fecb5ce789627bf17d6e1e533e68de4" translate="yes" xml:space="preserve">
          <source>A compliant &lt;code&gt;SyncProvider&lt;/code&gt; implementation that is fully pluggable into the &lt;code&gt;SyncFactory&lt;/code&gt;&lt;b&gt;must&lt;/b&gt; extend and implement all abstract methods in the &lt;a href=&quot;syncprovider&quot;&gt;&lt;code&gt;SyncProvider&lt;/code&gt;&lt;/a&gt; class. In addition, an implementation &lt;b&gt;must&lt;/b&gt; determine the grade, locking and updatable view capabilities defined in the &lt;code&gt;SyncProvider&lt;/code&gt; class definition. One or more of the &lt;code&gt;SyncProvider&lt;/code&gt; description criteria &lt;b&gt;must&lt;/b&gt; be supported. It is expected that vendor implementations will offer a range of grade, locking, and updatable view capabilities.</source>
          <target state="translated">A compliant &lt;code&gt;SyncProvider&lt;/code&gt; implementation that is fully pluggable into the &lt;code&gt;SyncFactory&lt;/code&gt; &lt;b&gt;must&lt;/b&gt; extend and implement all abstract methods in the &lt;a href=&quot;syncprovider&quot;&gt; &lt;code&gt;SyncProvider&lt;/code&gt; &lt;/a&gt; class. In addition, an implementation &lt;b&gt;must&lt;/b&gt; determine the grade, locking and updatable view capabilities defined in the &lt;code&gt;SyncProvider&lt;/code&gt; class definition. One or more of the &lt;code&gt;SyncProvider&lt;/code&gt; description criteria &lt;b&gt;must&lt;/b&gt; be supported. It is expected that vendor implementations will offer a range of grade, locking, and updatable view capabilities.</target>
        </trans-unit>
        <trans-unit id="ef095778aeb29d0bee970385d5cf9a54e63ddb71" translate="yes" xml:space="preserve">
          <source>A compliant JDBC &lt;code&gt;RowSet&lt;/code&gt; implementation &lt;b&gt;must&lt;/b&gt; implement one or more standard interfaces specified in this package and &lt;b&gt;may&lt;/b&gt; extend the &lt;a href=&quot;baserowset&quot;&gt;&lt;code&gt;BaseRowSet&lt;/code&gt;&lt;/a&gt; abstract class. For example, a &lt;code&gt;CachedRowSet&lt;/code&gt; implementation must implement the &lt;code&gt;CachedRowSet&lt;/code&gt; interface and extend the &lt;code&gt;BaseRowSet&lt;/code&gt; abstract class. The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the standard architecture on which all &lt;code&gt;RowSet&lt;/code&gt; implementations should be built, regardless of whether the &lt;code&gt;RowSet&lt;/code&gt; objects exist in a connected or disconnected environment. The &lt;code&gt;BaseRowSet&lt;/code&gt; abstract class provides any &lt;code&gt;RowSet&lt;/code&gt; implementation with its base functionality, including property manipulation and event notification that is fully compliant with &lt;a href=&quot;http://java.sun.com/products/javabeans&quot;&gt;JavaBeans&lt;/a&gt; component requirements. As an example, all implementations provided in the reference implementations (contained in the &lt;code&gt;com.sun.rowset&lt;/code&gt; package) use the &lt;code&gt;BaseRowSet&lt;/code&gt; class as a basis for their implementations.</source>
          <target state="translated">A compliant JDBC &lt;code&gt;RowSet&lt;/code&gt; implementation &lt;b&gt;must&lt;/b&gt; implement one or more standard interfaces specified in this package and &lt;b&gt;may&lt;/b&gt; extend the &lt;a href=&quot;baserowset&quot;&gt; &lt;code&gt;BaseRowSet&lt;/code&gt; &lt;/a&gt; abstract class. For example, a &lt;code&gt;CachedRowSet&lt;/code&gt; implementation must implement the &lt;code&gt;CachedRowSet&lt;/code&gt; interface and extend the &lt;code&gt;BaseRowSet&lt;/code&gt; abstract class. The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the standard architecture on which all &lt;code&gt;RowSet&lt;/code&gt; implementations should be built, regardless of whether the &lt;code&gt;RowSet&lt;/code&gt; objects exist in a connected or disconnected environment. The &lt;code&gt;BaseRowSet&lt;/code&gt; abstract class provides any &lt;code&gt;RowSet&lt;/code&gt; implementation with its base functionality, including property manipulation and event notification that is fully compliant with &lt;a href=&quot;http://java.sun.com/products/javabeans&quot;&gt;JavaBeans&lt;/a&gt; component requirements. As an example, all implementations provided in the reference implementations (contained in the &lt;code&gt;com.sun.rowset&lt;/code&gt; package) use the &lt;code&gt;BaseRowSet&lt;/code&gt; class as a basis for their implementations.</target>
        </trans-unit>
        <trans-unit id="fd54ac5c73834653a330eeea3f04f9607f95a18f" translate="yes" xml:space="preserve">
          <source>A component can be moved to the top or bottom position within its layer by calling &lt;code&gt;moveToFront&lt;/code&gt; or &lt;code&gt;moveToBack&lt;/code&gt;.</source>
          <target state="translated">A component can be moved to the top or bottom position within its layer by calling &lt;code&gt;moveToFront&lt;/code&gt; or &lt;code&gt;moveToBack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce680a6c1c38459061c4c3b21c2f89763dc41c31" translate="yes" xml:space="preserve">
          <source>A component gained the focus.</source>
          <target state="translated">A component gained the focus.</target>
        </trans-unit>
        <trans-unit id="09dfef83c5863bccfcebb0659b7993032c336b08" translate="yes" xml:space="preserve">
          <source>A component is made displayable either when it is added to a displayable containment hierarchy or when its containment hierarchy is made displayable. A containment hierarchy is made displayable when its ancestor window is either packed or made visible.</source>
          <target state="translated">A component is made displayable either when it is added to a displayable containment hierarchy or when its containment hierarchy is made displayable. A containment hierarchy is made displayable when its ancestor window is either packed or made visible.</target>
        </trans-unit>
        <trans-unit id="b2cebf45dce5e66f26a7b4a8b67921e722feb059" translate="yes" xml:space="preserve">
          <source>A component is made undisplayable either when it is removed from a displayable containment hierarchy or when its containment hierarchy is made undisplayable. A containment hierarchy is made undisplayable when its ancestor window is disposed.</source>
          <target state="translated">A component is made undisplayable either when it is removed from a displayable containment hierarchy or when its containment hierarchy is made undisplayable. A containment hierarchy is made undisplayable when its ancestor window is disposed.</target>
        </trans-unit>
        <trans-unit id="2c7dfbc065f1196e41f2a84cc03c919a7d0aba07" translate="yes" xml:space="preserve">
          <source>A component listener to track show/hide/resize events and convert them to PropertyChange events.</source>
          <target state="translated">A component listener to track show/hide/resize events and convert them to PropertyChange events.</target>
        </trans-unit>
        <trans-unit id="a1e4aea39b32a55132a7191c95ec3d6490806639" translate="yes" xml:space="preserve">
          <source>A component lost the focus.</source>
          <target state="translated">A component lost the focus.</target>
        </trans-unit>
        <trans-unit id="679d259c58ee38716564f2caf4e42a4aa66a6aa4" translate="yes" xml:space="preserve">
          <source>A component may be left undefined by passing &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 을 건네 주어 컴퍼넌트는 정의되지 않은 채로 둘 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="020fba51ee1091155e2da3e20554783a558aaf13" translate="yes" xml:space="preserve">
          <source>A component that acts as both a Subscriber and Publisher.</source>
          <target state="translated">A component that acts as both a Subscriber and Publisher.</target>
        </trans-unit>
        <trans-unit id="15ceae254918b0ef6d94940a0ec178f6e5336260" translate="yes" xml:space="preserve">
          <source>A component that combines a button or editable field and a drop-down list.</source>
          <target state="translated">A component that combines a button or editable field and a drop-down list.</target>
        </trans-unit>
        <trans-unit id="5faef24a6fc07543039a7b12cf55022c812cece0" translate="yes" xml:space="preserve">
          <source>A component that combines a button or editable field and a drop-down list. The user can select a value from the drop-down list, which appears at the user's request. If you make the combo box editable, then the combo box includes an editable field into which the user can type a value.</source>
          <target state="translated">A component that combines a button or editable field and a drop-down list. The user can select a value from the drop-down list, which appears at the user's request. If you make the combo box editable, then the combo box includes an editable field into which the user can type a value.</target>
        </trans-unit>
        <trans-unit id="704f9861bf93bff7d6f2a884c9f6fcda58ad6a1a" translate="yes" xml:space="preserve">
          <source>A component that displays a list of objects and allows the user to select one or more items.</source>
          <target state="translated">A component that displays a list of objects and allows the user to select one or more items.</target>
        </trans-unit>
        <trans-unit id="0eb8518159403706b6e12f50a429cbdbbe4b48bc" translate="yes" xml:space="preserve">
          <source>A component that displays a list of objects and allows the user to select one or more items. A separate model, &lt;code&gt;ListModel&lt;/code&gt;, maintains the contents of the list.</source>
          <target state="translated">A component that displays a list of objects and allows the user to select one or more items. A separate model, &lt;code&gt;ListModel&lt;/code&gt; , maintains the contents of the list.</target>
        </trans-unit>
        <trans-unit id="a3e56e4baebcff6472e0d38834430c3e1a5ed1d0" translate="yes" xml:space="preserve">
          <source>A component that lets the user graphically select a value by sliding a knob within a bounded interval.</source>
          <target state="translated">A component that lets the user graphically select a value by sliding a knob within a bounded interval.</target>
        </trans-unit>
        <trans-unit id="4a97e366ad870b7ed4064276a5470ba5b5ba0526" translate="yes" xml:space="preserve">
          <source>A component that lets the user graphically select a value by sliding a knob within a bounded interval. The knob is always positioned at the points that match integer values within the specified interval.</source>
          <target state="translated">A component that lets the user graphically select a value by sliding a knob within a bounded interval. The knob is always positioned at the points that match integer values within the specified interval.</target>
        </trans-unit>
        <trans-unit id="0dc2d5a67102bfcb565b400826769c8ed453c1ba" translate="yes" xml:space="preserve">
          <source>A component that lets the user switch between a group of components by clicking on a tab with a given title and/or icon.</source>
          <target state="translated">A component that lets the user switch between a group of components by clicking on a tab with a given title and/or icon.</target>
        </trans-unit>
        <trans-unit id="a543cd02bd31e7234610b239b52d4ebf49372b46" translate="yes" xml:space="preserve">
          <source>A component that lets the user switch between a group of components by clicking on a tab with a given title and/or icon. For examples and information on using tabbed panes see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tabbedpane.html&quot;&gt;How to Use Tabbed Panes&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">A component that lets the user switch between a group of components by clicking on a tab with a given title and/or icon. For examples and information on using tabbed panes see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tabbedpane.html&quot;&gt;How to Use Tabbed Panes&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="ca411fd4076f10e631b20e5262e62782a1730dca" translate="yes" xml:space="preserve">
          <source>A component that visually displays the progress of some task.</source>
          <target state="translated">A component that visually displays the progress of some task.</target>
        </trans-unit>
        <trans-unit id="490c085d9d786efb4c130b5466ea2b4c8247ff15" translate="yes" xml:space="preserve">
          <source>A component that visually displays the progress of some task. As the task progresses towards completion, the progress bar displays the task's percentage of completion. This percentage is typically represented visually by a rectangle which starts out empty and gradually becomes filled in as the task progresses. In addition, the progress bar can display a textual representation of this percentage.</source>
          <target state="translated">A component that visually displays the progress of some task. As the task progresses towards completion, the progress bar displays the task's percentage of completion. This percentage is typically represented visually by a rectangle which starts out empty and gradually becomes filled in as the task progresses. In addition, the progress bar can display a textual representation of this percentage.</target>
        </trans-unit>
        <trans-unit id="b481c61e6ab81c9981655232bcaa4eb8b0e7e43e" translate="yes" xml:space="preserve">
          <source>A component whose paint() method will render the specified value.</source>
          <target state="translated">A component whose paint() method will render the specified value.</target>
        </trans-unit>
        <trans-unit id="6612f77e16c0f91da39443d81f8e28776739b289" translate="yes" xml:space="preserve">
          <source>A component's own internal selection mechanism (or caret for text components) should be used to track the drop location.</source>
          <target state="translated">A component's own internal selection mechanism (or caret for text components) should be used to track the drop location.</target>
        </trans-unit>
        <trans-unit id="910aea3bab537d73873ced3f63278e9b9ed9f3e5" translate="yes" xml:space="preserve">
          <source>A composite Border class used to compose two Border objects into a single border by nesting an inside Border object within the insets of an outside Border object.</source>
          <target state="translated">A composite Border class used to compose two Border objects into a single border by nesting an inside Border object within the insets of an outside Border object.</target>
        </trans-unit>
        <trans-unit id="fa5a35f7f4b3f674832802a41333821de4426d13" translate="yes" xml:space="preserve">
          <source>A composite Border class used to compose two Border objects into a single border by nesting an inside Border object within the insets of an outside Border object. For example, this class may be used to add blank margin space to a component with an existing decorative border:</source>
          <target state="translated">A composite Border class used to compose two Border objects into a single border by nesting an inside Border object within the insets of an outside Border object. For example, this class may be used to add blank margin space to a component with an existing decorative border:</target>
        </trans-unit>
        <trans-unit id="c240d3ac3169c5fa449a090551b1533296f8d47e" translate="yes" xml:space="preserve">
          <source>A composite name consisting of the components at indexes in the range [0,posn).</source>
          <target state="translated">[0, posn) 범위의 인덱스에있는 구성 요소로 구성된 복합 이름입니다.</target>
        </trans-unit>
        <trans-unit id="e307b9d7fcecb7e46cc83b164a05b08703be2f60" translate="yes" xml:space="preserve">
          <source>A composite name consisting of the components at indexes in the range [posn,size()). If posn is equal to size(), an empty composite name is returned.</source>
          <target state="translated">[posn, size ()) 범위의 인덱스에있는 구성 요소로 구성된 복합 이름입니다. posn이 size ()와 같으면 빈 복합 이름이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="012ac5ae3a315f67bc8b90d54324f1996bc43f52" translate="yes" xml:space="preserve">
          <source>A compound border UI resource.</source>
          <target state="translated">A compound border UI resource.</target>
        </trans-unit>
        <trans-unit id="388d169a4059ab43399d30021348063b4a944861" translate="yes" xml:space="preserve">
          <source>A compound name consisting of the components at indexes in the range [0,posn).</source>
          <target state="translated">[0, posn) 범위의 색인에있는 구성 요소로 구성된 복합 이름입니다.</target>
        </trans-unit>
        <trans-unit id="76c4e0dce25522531bae9b9e60264ef59857ae2b" translate="yes" xml:space="preserve">
          <source>A compound name consisting of the components at indexes in the range [posn,size()). If posn is equal to size(), an empty compound name is returned.</source>
          <target state="translated">[posn, size ()) 범위의 색인에있는 구성 요소로 구성된 복합 이름입니다. posn이 size ()와 같으면 빈 복합 이름이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="870a4660763c1f34e013dffa68e06e176fa3b5fb" translate="yes" xml:space="preserve">
          <source>A compression quality setting of 0.0 is most generically interpreted as &quot;high compression is important,&quot; while a setting of 1.0 is most generically interpreted as &quot;high image quality is important.&quot;</source>
          <target state="translated">압축 품질 설정 0.0은 가장 일반적으로 &quot;높은 압축이 중요합니다&quot;로 해석되는 반면, 1.0 설정은 가장 일반적으로 &quot;고화질이 중요합니다&quot;로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="e55237d8b1c126bd419cb998c4d2143c21b0a60c" translate="yes" xml:space="preserve">
          <source>A computation to be performed with privileges enabled, that throws one or more checked exceptions.</source>
          <target state="translated">하나 이상의 확인 된 예외를 발생시키는 권한을 사용하여 수행 할 계산입니다.</target>
        </trans-unit>
        <trans-unit id="df5aa60f9378ed72d43eb803f402550168f3ddfe" translate="yes" xml:space="preserve">
          <source>A computation to be performed with privileges enabled, that throws one or more checked exceptions. The computation is performed by invoking &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; on the &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; object. This interface is used only for computations that throw checked exceptions; computations that do not throw checked exceptions should use &lt;code&gt;PrivilegedAction&lt;/code&gt; instead.</source>
          <target state="translated">하나 이상의 확인 된 예외를 발생시키는 권한을 사용하여 수행 할 계산입니다. &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; 객체 에서 &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; 를 호출하여 계산을 수행 합니다. 이 인터페이스는 확인 된 예외를 발생시키는 계산에만 사용됩니다. 확인 된 예외를 발생시키지 않는 계산은 &lt;code&gt;PrivilegedAction&lt;/code&gt; 을 대신 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="53d6bfa858b3f3fb8deab95e04cbb70669ba6ea2" translate="yes" xml:space="preserve">
          <source>A computation to be performed with privileges enabled.</source>
          <target state="translated">권한이 활성화 된 상태에서 수행 할 계산입니다.</target>
        </trans-unit>
        <trans-unit id="a84d8847cd9be7eb09312d16b993c90bbee17967" translate="yes" xml:space="preserve">
          <source>A computation to be performed with privileges enabled. The computation is performed by invoking &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; on the &lt;code&gt;PrivilegedAction&lt;/code&gt; object. This interface is used only for computations that do not throw checked exceptions; computations that throw checked exceptions must use &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; instead.</source>
          <target state="translated">권한이 활성화 된 상태에서 수행 할 계산입니다. &lt;code&gt;PrivilegedAction&lt;/code&gt; 객체 에서 &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; 를 호출하여 계산을 수행 합니다. 이 인터페이스는 확인 된 예외를 발생시키지 않는 계산에만 사용됩니다. 검사 된 예외를 발생시키는 계산은 &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; 을 대신 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="4962e8975e2684994a507f252d7cedb853ac1283" translate="yes" xml:space="preserve">
          <source>A concrete CountedCompleter class must define method &lt;a href=&quot;#compute()&quot;&gt;&lt;code&gt;compute()&lt;/code&gt;&lt;/a&gt;, that should in most cases (as illustrated below), invoke &lt;code&gt;tryComplete()&lt;/code&gt; once before returning. The class may also optionally override method &lt;a href=&quot;#onCompletion(java.util.concurrent.CountedCompleter)&quot;&gt;&lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt;&lt;/a&gt; to perform an action upon normal completion, and method &lt;a href=&quot;#onExceptionalCompletion(java.lang.Throwable,java.util.concurrent.CountedCompleter)&quot;&gt;&lt;code&gt;onExceptionalCompletion(Throwable, CountedCompleter)&lt;/code&gt;&lt;/a&gt; to perform an action upon any exception.</source>
          <target state="translated">A concrete CountedCompleter class must define method &lt;a href=&quot;#compute()&quot;&gt; &lt;code&gt;compute()&lt;/code&gt; &lt;/a&gt;, that should in most cases (as illustrated below), invoke &lt;code&gt;tryComplete()&lt;/code&gt; once before returning. The class may also optionally override method &lt;a href=&quot;#onCompletion(java.util.concurrent.CountedCompleter)&quot;&gt; &lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt; &lt;/a&gt; to perform an action upon normal completion, and method &lt;a href=&quot;#onExceptionalCompletion(java.lang.Throwable,java.util.concurrent.CountedCompleter)&quot;&gt; &lt;code&gt;onExceptionalCompletion(Throwable, CountedCompleter)&lt;/code&gt; &lt;/a&gt; to perform an action upon any exception.</target>
        </trans-unit>
        <trans-unit id="592ff92d53f5fd5d1113ffb2481eaf8c68991cfb" translate="yes" xml:space="preserve">
          <source>A concrete CountedCompleter class must define method &lt;a href=&quot;countedcompleter#compute--&quot;&gt;&lt;code&gt;compute()&lt;/code&gt;&lt;/a&gt;, that should in most cases (as illustrated below), invoke &lt;code&gt;tryComplete()&lt;/code&gt; once before returning. The class may also optionally override method &lt;a href=&quot;countedcompleter#onCompletion-java.util.concurrent.CountedCompleter-&quot;&gt;&lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt;&lt;/a&gt; to perform an action upon normal completion, and method &lt;a href=&quot;countedcompleter#onExceptionalCompletion-java.lang.Throwable-java.util.concurrent.CountedCompleter-&quot;&gt;&lt;code&gt;onExceptionalCompletion(Throwable, CountedCompleter)&lt;/code&gt;&lt;/a&gt; to perform an action upon any exception.</source>
          <target state="translated">구체적인 CountedCompleter 클래스는 대부분의 경우 (아래 그림 참조) 반환하기 전에 &lt;code&gt;tryComplete()&lt;/code&gt; 한 번 호출 해야하는 &lt;a href=&quot;countedcompleter#compute--&quot;&gt; &lt;code&gt;compute()&lt;/code&gt; &lt;/a&gt; 메소드를 정의해야합니다 . 이 클래스는 선택적으로 &lt;a href=&quot;countedcompleter#onCompletion-java.util.concurrent.CountedCompleter-&quot;&gt; &lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt; &lt;/a&gt; 메소드를 대체 하여 정상 완료시 조치를 수행하고 &lt;a href=&quot;countedcompleter#onExceptionalCompletion-java.lang.Throwable-java.util.concurrent.CountedCompleter-&quot;&gt; &lt;code&gt;onExceptionalCompletion(Throwable, CountedCompleter)&lt;/code&gt; &lt;/a&gt; 메소드를 대체 하여 예외에 대한 조치를 수행 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d75c025f877b02d00b1e105a4eccc88b0eaef34" translate="yes" xml:space="preserve">
          <source>A concrete channel class must also implement the &lt;a href=&quot;#implCloseChannel()&quot;&gt;&lt;code&gt;implCloseChannel&lt;/code&gt;&lt;/a&gt; method in such a way that if it is invoked while another thread is blocked in a native I/O operation upon the channel then that operation will immediately return, either by throwing an exception or by returning normally. If a thread is interrupted or the channel upon which it is blocked is asynchronously closed then the channel's &lt;a href=&quot;#end(boolean)&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method will throw the appropriate exception.</source>
          <target state="translated">A concrete channel class must also implement the &lt;a href=&quot;#implCloseChannel()&quot;&gt; &lt;code&gt;implCloseChannel&lt;/code&gt; &lt;/a&gt; method in such a way that if it is invoked while another thread is blocked in a native I/O operation upon the channel then that operation will immediately return, either by throwing an exception or by returning normally. If a thread is interrupted or the channel upon which it is blocked is asynchronously closed then the channel's &lt;a href=&quot;#end(boolean)&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt; method will throw the appropriate exception.</target>
        </trans-unit>
        <trans-unit id="7c5d3b0a75ab72fca28782e0f37995ed37f00346" translate="yes" xml:space="preserve">
          <source>A concrete channel class must also implement the &lt;a href=&quot;abstractinterruptiblechannel#implCloseChannel--&quot;&gt;&lt;code&gt;implCloseChannel&lt;/code&gt;&lt;/a&gt; method in such a way that if it is invoked while another thread is blocked in a native I/O operation upon the channel then that operation will immediately return, either by throwing an exception or by returning normally. If a thread is interrupted or the channel upon which it is blocked is asynchronously closed then the channel's &lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method will throw the appropriate exception.</source>
          <target state="translated">또한 구체적인 채널 클래스는 다른 스레드가 호출 될 때 다른 스레드가 채널의 원시 I / O 작업에서 차단 된 경우 예외를 발생 시키거나 정상적으로 반환함으로써 해당 작업이 즉시 반환 되도록 &lt;a href=&quot;abstractinterruptiblechannel#implCloseChannel--&quot;&gt; &lt;code&gt;implCloseChannel&lt;/code&gt; &lt;/a&gt; 메소드를 구현해야 합니다. . 스레드가 중단되거나 스레드가 차단 된 채널이 비동기 적으로 닫힌 경우 채널의 &lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt; 메소드는 적절한 예외를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="f923d4960b765d0c3f8ba0b31067d29761b88f04" translate="yes" xml:space="preserve">
          <source>A concrete class providing a reusable implementation of the &lt;code&gt;IIOMetadataFormat&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;IIOMetadataFormat&lt;/code&gt; 인터페이스 의 재사용 가능한 구현을 제공하는 구체적 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="d282fdf80a823d1b9ce109892a02adada32f1789" translate="yes" xml:space="preserve">
          <source>A concrete class providing a reusable implementation of the &lt;code&gt;IIOMetadataFormat&lt;/code&gt; interface. In addition, a static instance representing the standard, plug-in neutral &lt;code&gt;javax_imageio_1.0&lt;/code&gt; format is provided by the &lt;code&gt;getStandardFormatInstance&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;IIOMetadataFormat&lt;/code&gt; 인터페이스 의 재사용 가능한 구현을 제공하는 구체적 클래스 입니다. 또한 표준 플러그인 중립 &lt;code&gt;javax_imageio_1.0&lt;/code&gt; 형식을 나타내는 정적 인스턴스는 &lt;code&gt;getStandardFormatInstance&lt;/code&gt; 메소드에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="3a859801a589e89ad20bf50860bca6d1644bd9df" translate="yes" xml:space="preserve">
          <source>A concrete implementation of &lt;code&gt;MetalTheme&lt;/code&gt; providing the original look of the Java Look and Feel, code-named &quot;Steel&quot;.</source>
          <target state="translated">A concrete implementation of &lt;code&gt;MetalTheme&lt;/code&gt; providing the original look of the Java Look and Feel, code-named &quot;Steel&quot;.</target>
        </trans-unit>
        <trans-unit id="3e45fae144bb45f682a4256d4bde5bda7c7e35cd" translate="yes" xml:space="preserve">
          <source>A concrete implementation of &lt;code&gt;MetalTheme&lt;/code&gt; providing the original look of the Java Look and Feel, code-named &quot;Steel&quot;. Refer to &lt;a href=&quot;metallookandfeel#setCurrentTheme(javax.swing.plaf.metal.MetalTheme)&quot;&gt;&lt;code&gt;MetalLookAndFeel.setCurrentTheme(javax.swing.plaf.metal.MetalTheme)&lt;/code&gt;&lt;/a&gt; for details on changing the default theme.</source>
          <target state="translated">A concrete implementation of &lt;code&gt;MetalTheme&lt;/code&gt; providing the original look of the Java Look and Feel, code-named &quot;Steel&quot;. Refer to &lt;a href=&quot;metallookandfeel#setCurrentTheme(javax.swing.plaf.metal.MetalTheme)&quot;&gt; &lt;code&gt;MetalLookAndFeel.setCurrentTheme(javax.swing.plaf.metal.MetalTheme)&lt;/code&gt; &lt;/a&gt; for details on changing the default theme.</target>
        </trans-unit>
        <trans-unit id="712749aaea88a267414698100643df70c8e94b89" translate="yes" xml:space="preserve">
          <source>A concrete implementation of the &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; class can be created to extend the PKIX certification path validation algorithm. For example, an implementation may check for and process a critical private extension of each certificate in a certification path.</source>
          <target state="translated">PKIX 인증 경로 확인 알고리즘을 확장하기 위해 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; 클래스 의 구체적인 구현을 작성할 수 있습니다. 예를 들어, 구현시 인증 경로에서 각 인증서의 중요한 개인 확장을 확인하고 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="1b8f023ff523d8ca2174982322b18fc912277484" translate="yes" xml:space="preserve">
          <source>A concrete provider class cannot be instantiated; or</source>
          <target state="translated">구체적 제공자 클래스는 인스턴스화 할 수 없습니다. 또는</target>
        </trans-unit>
        <trans-unit id="cc3f133bae4475dd14d8dd56a065e5893f608a9b" translate="yes" xml:space="preserve">
          <source>A concrete provider class is not a subclass of the service class;</source>
          <target state="translated">구체적 제공자 클래스는 서비스 클래스의 서브 클래스가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="3f8ded546ab785eb4d9c3cb4e994d57af15e27e9" translate="yes" xml:space="preserve">
          <source>A concrete provider class named in a provider-configuration file cannot be found;</source>
          <target state="translated">제공자 구성 파일에 이름 지정된 구체적 제공자 클래스를 찾을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="bd3332e52829c9939c6c0ecf492723b00eb5c0f9" translate="yes" xml:space="preserve">
          <source>A concrete subclass of AbstractUndoableEdit, used to assemble little UndoableEdits into great big ones.</source>
          <target state="translated">A concrete subclass of AbstractUndoableEdit, used to assemble little UndoableEdits into great big ones.</target>
        </trans-unit>
        <trans-unit id="ceafe9ec57fc5178908de09d46ccde06e41ae006" translate="yes" xml:space="preserve">
          <source>A concrete subclass of this class must call this constructor when it is</source>
          <target state="translated">A concrete subclass of this class must call this constructor when it is</target>
        </trans-unit>
        <trans-unit id="b35811703a10342f5d9a4a448b169f0e54e12d29" translate="yes" xml:space="preserve">
          <source>A condition that violates the integrity of the resource was detected.</source>
          <target state="translated">A condition that violates the integrity of the resource was detected.</target>
        </trans-unit>
        <trans-unit id="07aeda6128298b4c1cf51a969819ad2ad9cb99b8" translate="yes" xml:space="preserve">
          <source>A configuration encapsulates the &lt;em&gt;readability graph&lt;/em&gt; that is the output of resolution. A readability graph is a directed graph whose vertices are of type &lt;a href=&quot;resolvedmodule&quot;&gt;&lt;code&gt;ResolvedModule&lt;/code&gt;&lt;/a&gt; and the edges represent the readability amongst the modules. &lt;code&gt;Configuration&lt;/code&gt; defines the &lt;a href=&quot;#modules()&quot;&gt;&lt;code&gt;modules()&lt;/code&gt;&lt;/a&gt; method to get the set of resolved modules in the graph. &lt;code&gt;
 ResolvedModule&lt;/code&gt; defines the &lt;a href=&quot;resolvedmodule#reads()&quot;&gt;&lt;code&gt;reads()&lt;/code&gt;&lt;/a&gt; method to get the set of modules that a resolved module reads. The modules that are read may be in the same configuration or may be in &lt;a href=&quot;#parents()&quot;&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/a&gt; configurations.</source>
          <target state="translated">A configuration encapsulates the &lt;em&gt;readability graph&lt;/em&gt; that is the output of resolution. A readability graph is a directed graph whose vertices are of type &lt;a href=&quot;resolvedmodule&quot;&gt; &lt;code&gt;ResolvedModule&lt;/code&gt; &lt;/a&gt; and the edges represent the readability amongst the modules. &lt;code&gt;Configuration&lt;/code&gt; defines the &lt;a href=&quot;#modules()&quot;&gt; &lt;code&gt;modules()&lt;/code&gt; &lt;/a&gt; method to get the set of resolved modules in the graph. &lt;code&gt; ResolvedModule&lt;/code&gt; defines the &lt;a href=&quot;resolvedmodule#reads()&quot;&gt; &lt;code&gt;reads()&lt;/code&gt; &lt;/a&gt; method to get the set of modules that a resolved module reads. The modules that are read may be in the same configuration or may be in &lt;a href=&quot;#parents()&quot;&gt; &lt;code&gt;parent&lt;/code&gt; &lt;/a&gt; configurations.</target>
        </trans-unit>
        <trans-unit id="6d4a50dce10eebcc0c661ebcd24fec5ac19d2f24" translate="yes" xml:space="preserve">
          <source>A configuration that is the result of &lt;a href=&quot;package-summary#resolution&quot;&gt; resolution&lt;/a&gt; or resolution with &lt;a href=&quot;configuration#service-binding&quot;&gt;service binding&lt;/a&gt;.</source>
          <target state="translated">A configuration that is the result of &lt;a href=&quot;package-summary#resolution&quot;&gt; resolution&lt;/a&gt; or resolution with &lt;a href=&quot;configuration#service-binding&quot;&gt;service binding&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b6b77ef77fa579c1e5efd157525e672a61cae898" translate="yes" xml:space="preserve">
          <source>A conflict exists when a value that a &lt;code&gt;RowSet&lt;/code&gt; object has changed and is attempting to write to the data source has also been changed in the data source since the last synchronization. An application can call the &lt;code&gt;SyncResolver&lt;/code&gt; method &lt;code&gt;getConflictValue&lt;/code&gt; to retrieve the value in the data source that is the cause of the conflict because the values in a &lt;code&gt;SyncResolver&lt;/code&gt; object are the conflict values from the data source.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 개체가 변경되어 데이터 소스에 쓰려는 값이 마지막 동기화 이후 데이터 소스에서도 변경 되면 충돌이 발생 합니다. &lt;code&gt;SyncResolver&lt;/code&gt; 객체의 값은 데이터 소스의 충돌 값 이기 때문에 애플리케이션은 &lt;code&gt;SyncResolver&lt;/code&gt; 메소드 &lt;code&gt;getConflictValue&lt;/code&gt; 를 호출하여 충돌의 원인이되는 데이터 소스의 값을 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc609d610081d3eb2009f3b0b682a2d0744654f4" translate="yes" xml:space="preserve">
          <source>A connection (session) with a specific database.</source>
          <target state="translated">특정 데이터베이스와의 연결 (세션).</target>
        </trans-unit>
        <trans-unit id="ee9aefb429edbd8df1f29763cff2d2eb28169d9d" translate="yes" xml:space="preserve">
          <source>A connection (session) with a specific database. SQL statements are executed and results are returned within the context of a connection.</source>
          <target state="translated">특정 데이터베이스와의 연결 (세션). SQL 문이 실행되고 연결 컨텍스트 내에서 결과가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="39c6171b927625f248ca9cc137d36414e7251ecb" translate="yes" xml:space="preserve">
          <source>A connection pool manager is often also a statement pool manager, maintaining a pool of &lt;code&gt;PreparedStatement&lt;/code&gt; objects. When an application closes a prepared statement, it calls the &lt;code&gt;PreparedStatement&lt;/code&gt; method &lt;code&gt;close&lt;/code&gt;. When &lt;code&gt;Statement&lt;/code&gt; pooling is being done, the pool manager is notified because it has registered itself as a &lt;code&gt;StatementEventListener&lt;/code&gt; object using the &lt;code&gt;ConnectionPool&lt;/code&gt; method &lt;code&gt;addStatementEventListener&lt;/code&gt;. Thus, when an application closes its &lt;code&gt;PreparedStatement&lt;/code&gt;, the underlying prepared statement is recycled rather than being closed.</source>
          <target state="translated">연결 풀 관리자는 종종 &lt;code&gt;PreparedStatement&lt;/code&gt; 개체 풀을 유지 관리하는 문 풀 관리자이기도 합니다. 애플리케이션이 준비된 명령문을 닫을 때 &lt;code&gt;PreparedStatement&lt;/code&gt; 메소드 &lt;code&gt;close&lt;/code&gt; 를 호출합니다 . 때 &lt;code&gt;Statement&lt;/code&gt; 풀링 행해지고 그것 자체를 등록하고 있으므로, 풀 관리자는 통지 &lt;code&gt;StatementEventListener&lt;/code&gt; 를 용 은 USING 객체 &lt;code&gt;ConnectionPool&lt;/code&gt; 의 방법 &lt;code&gt;addStatementEventListener&lt;/code&gt; 를 . 따라서 애플리케이션이 &lt;code&gt;PreparedStatement&lt;/code&gt; 를 닫을 때 기본 준비된 명령문이 닫히지 않고 재활용됩니다.</target>
        </trans-unit>
        <trans-unit id="a4759012fd2d12d2910e6e9a75125a735e1330fd" translate="yes" xml:space="preserve">
          <source>A connection to a remote RMI connector.</source>
          <target state="translated">원격 RMI 커넥터에 연결</target>
        </trans-unit>
        <trans-unit id="3a5e32e0701cdda0f60e3703da4ba437ad78a105" translate="yes" xml:space="preserve">
          <source>A connection to a remote RMI connector. Usually, such connections are made using &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt;. However, specialized applications can use this class directly, for example with an &lt;a href=&quot;rmiserver&quot;&gt;&lt;code&gt;RMIServer&lt;/code&gt;&lt;/a&gt; stub obtained without going through JNDI.</source>
          <target state="translated">원격 RMI 커넥터에 대한 연결. 일반적으로 이러한 연결은 &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; 를&lt;/a&gt; 사용하여 이루어집니다 . 그러나 특수 애플리케이션은이 클래스를 직접 사용할 수 있습니다 (예 : JNDI를 거치지 않고 얻은 &lt;a href=&quot;rmiserver&quot;&gt; &lt;code&gt;RMIServer&lt;/code&gt; &lt;/a&gt; 스텁 과 함께) .</target>
        </trans-unit>
        <trans-unit id="5281da5fc208b5e3d2084885ed1d79b4dffb1e6b" translate="yes" xml:space="preserve">
          <source>A connection to a remote RMI connector. Usually, such connections are made using &lt;a href=&quot;../jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt;. However, specialized applications can use this class directly, for example with an &lt;a href=&quot;rmiserver&quot;&gt;&lt;code&gt;RMIServer&lt;/code&gt;&lt;/a&gt; stub obtained without going through JNDI.</source>
          <target state="translated">원격 RMI 커넥터에 연결 일반적으로 이러한 연결은 &lt;a href=&quot;../jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; 를&lt;/a&gt; 사용하여 이루어집니다 . 그러나 특수 응용 프로그램은이 클래스를 직접 사용할 수 있습니다 (예 : JNDI를 거치지 않고 얻은 &lt;a href=&quot;rmiserver&quot;&gt; &lt;code&gt;RMIServer&lt;/code&gt; &lt;/a&gt; 스텁).</target>
        </trans-unit>
        <trans-unit id="71906a6e7fa82ce2f2832820f8575698417e451d" translate="yes" xml:space="preserve">
          <source>A connector client is usually created by supplying the &lt;code&gt;JMXServiceURL&lt;/code&gt; of the connector server to connect to to the &lt;a href=&quot;jmxconnectorfactory#connect(javax.management.remote.JMXServiceURL)&quot;&gt;&lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">커넥터 클라이언트는 일반적으로 &lt;a href=&quot;jmxconnectorfactory#connect(javax.management.remote.JMXServiceURL)&quot;&gt; &lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt; &lt;/a&gt; 메소드 에 연결할 커넥터 서버 의 &lt;code&gt;JMXServiceURL&lt;/code&gt; 을 제공하여 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="dc1d7a566611a4eca771151edadc407ccf141315" translate="yes" xml:space="preserve">
          <source>A connector client is usually created by supplying the &lt;code&gt;JMXServiceURL&lt;/code&gt; of the connector server to connect to to the &lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-&quot;&gt;&lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">커넥터 클라이언트는 일반적으로 &lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-&quot;&gt; &lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt; &lt;/a&gt; 메소드 에 연결하기 위해 커넥터 서버 의 &lt;code&gt;JMXServiceURL&lt;/code&gt; 을 제공하여 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="65172dc0939a2899342cf72ef4c3f4d5e6170f30" translate="yes" xml:space="preserve">
          <source>A connector makes an MBean server remotely accessible through a given protocol. The JMX Remote API allows the use of different type of connectors:</source>
          <target state="translated">커넥터는 지정된 프로토콜을 통해 MBean 서버에 원격으로 액세스 할 수있게합니다. JMX Remote API를 사용하면 다양한 유형의 커넥터를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf69170289a60c8bf7efda788561d4a3030c1e4f" translate="yes" xml:space="preserve">
          <source>A connector server for which this is inappropriate must override this method so that it either implements the appropriate logic or throws &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것이 부적절한 커넥터 서버는 적절한 논리를 구현하거나 &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생&lt;/a&gt; 시키도록이 메서드를 재정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8b06816216886f3a82230d72723751d319943331" translate="yes" xml:space="preserve">
          <source>A connector server for which this is inappropriate must override this method so that it either implements the appropriate logic or throws &lt;a href=&quot;../../../java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">부적절한 커넥터 서버는 적절한 로직을 구현하거나 &lt;a href=&quot;../../../java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생&lt;/a&gt; 시키도록이 메소드를 대체해야합니다 .</target>
        </trans-unit>
        <trans-unit id="cc00c2f98497585b47c3192d00eadd75676cea50" translate="yes" xml:space="preserve">
          <source>A connector server is associated with an MBean server either by registering it in that MBean server, or by passing the MBean server to its constructor.</source>
          <target state="translated">커넥터 서버는 MBean 서버에 등록하거나 MBean 서버를 생성자에 전달하여 MBean 서버와 연관됩니다.</target>
        </trans-unit>
        <trans-unit id="6fac640212c8d0324caf80a8772bfee8a59e6f76" translate="yes" xml:space="preserve">
          <source>A connector server is created by constructing an instance of a subclass of &lt;a href=&quot;jmxconnectorserver&quot;&gt;&lt;code&gt;JMXConnectorServer&lt;/code&gt;&lt;/a&gt;. Usually, this instance is created using the method &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt;&lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">커넥터 서버는 &lt;a href=&quot;jmxconnectorserver&quot;&gt; &lt;code&gt;JMXConnectorServer&lt;/code&gt; &lt;/a&gt; 서브 클래스의 인스턴스를 구성하여 생성됩니다 . 일반적으로이 인스턴스는 &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt; &lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="fd981a4467010ba08d191c25715b89bbb07202d0" translate="yes" xml:space="preserve">
          <source>A connector server is created by constructing an instance of a subclass of &lt;a href=&quot;jmxconnectorserver&quot;&gt;&lt;code&gt;JMXConnectorServer&lt;/code&gt;&lt;/a&gt;. Usually, this instance is created using the method &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">커넥터 서버는 &lt;a href=&quot;jmxconnectorserver&quot;&gt; &lt;code&gt;JMXConnectorServer&lt;/code&gt; &lt;/a&gt; 서브 클래스의 인스턴스를 구성하여 작성됩니다 . 일반적으로이 인스턴스는 &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="2a47d2048c31d3b32a0bd0153594dc11132afdaf" translate="yes" xml:space="preserve">
          <source>A connector server is inactive when created. It only starts listening for client connections when the &lt;a href=&quot;jmxconnectorservermbean#start()&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. A connector server stops listening for client connections when the &lt;a href=&quot;jmxconnectorservermbean#stop()&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called or when the connector server is unregistered from its MBean server.</source>
          <target state="translated">커넥터 서버는 생성 될 때 비활성화됩니다. &lt;a href=&quot;jmxconnectorservermbean#start()&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; 메서드가 호출 될 때만 클라이언트 연결 수신을 시작 합니다. 커넥터 서버는 &lt;a href=&quot;jmxconnectorservermbean#stop()&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt; 메소드가 호출되거나 커넥터 서버가 MBean 서버에서 등록 해제 될 때 클라이언트 연결 수신을 중지 합니다.</target>
        </trans-unit>
        <trans-unit id="729de493400b8161527e266d3a8c893c12cafa51" translate="yes" xml:space="preserve">
          <source>A connector server is inactive when created. It only starts listening for client connections when the &lt;a href=&quot;jmxconnectorservermbean#start--&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. A connector server stops listening for client connections when the &lt;a href=&quot;jmxconnectorservermbean#stop--&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called or when the connector server is unregistered from its MBean server.</source>
          <target state="translated">커넥터 서버를 만들 때 비활성화됩니다. &lt;a href=&quot;jmxconnectorservermbean#start--&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; 메소드가 호출 될 때만 클라이언트 연결 청취를 시작 합니다. &lt;a href=&quot;jmxconnectorservermbean#stop--&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt; 메소드가 호출되거나 커넥터 서버가 MBean 서버에서 등록 취소되면 커넥터 서버는 클라이언트 연결 청취를 중지 합니다.</target>
        </trans-unit>
        <trans-unit id="b4357533106a251a960a61dd27d9689023c47e50" translate="yes" xml:space="preserve">
          <source>A consecutive sequence of decimal digits is treated as a decimal number:</source>
          <target state="translated">연속적인 10 진수 시퀀스는 10 진수로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="b50e7d81381adb7c96ec61ab5d96776c14c3174c" translate="yes" xml:space="preserve">
          <source>A consecutive sequence of letters is regarded as a word and treated as follows:</source>
          <target state="translated">연속 된 문자 시퀀스는 단어로 간주되며 다음과 같이 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="3845fd433ee9f6ab5405a2a4af3547c641770e94" translate="yes" xml:space="preserve">
          <source>A consequence of the use of &lt;code&gt;ScheduledFuture&lt;/code&gt; objects is that &lt;a href=&quot;threadpoolexecutor#afterExecute(java.lang.Runnable,java.lang.Throwable)&quot;&gt;&lt;code&gt;afterExecute&lt;/code&gt;&lt;/a&gt; is always called with a null second &lt;code&gt;Throwable&lt;/code&gt; argument, even if the &lt;code&gt;command&lt;/code&gt; terminated abruptly. Instead, the &lt;code&gt;Throwable&lt;/code&gt; thrown by such a task can be obtained via &lt;a href=&quot;future#get()&quot;&gt;&lt;code&gt;Future.get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ScheduledFuture&lt;/code&gt; 개체를 사용 하면 &lt;code&gt;command&lt;/code&gt; 이 갑자기 종료 된 경우에도 &lt;a href=&quot;threadpoolexecutor#afterExecute(java.lang.Runnable,java.lang.Throwable)&quot;&gt; &lt;code&gt;afterExecute&lt;/code&gt; &lt;/a&gt; 가 항상 null 두 번째 &lt;code&gt;Throwable&lt;/code&gt; 인수 와 함께 호출됩니다 . 대신, 그러한 작업에 의해 던져진 &lt;code&gt;Throwable&lt;/code&gt; 은 &lt;a href=&quot;future#get()&quot;&gt; &lt;code&gt;Future.get()&lt;/code&gt; &lt;/a&gt; 통해 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c154b2d7544e9e17d7ac9c57de6d6ed0d852b19a" translate="yes" xml:space="preserve">
          <source>A consequence of the use of &lt;code&gt;ScheduledFuture&lt;/code&gt; objects is that &lt;a href=&quot;threadpoolexecutor#afterExecute-java.lang.Runnable-java.lang.Throwable-&quot;&gt;&lt;code&gt;afterExecute&lt;/code&gt;&lt;/a&gt; is always called with a null second &lt;code&gt;Throwable&lt;/code&gt; argument, even if the &lt;code&gt;command&lt;/code&gt; terminated abruptly. Instead, the &lt;code&gt;Throwable&lt;/code&gt; thrown by such a task can be obtained via &lt;a href=&quot;future#get--&quot;&gt;&lt;code&gt;Future.get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ScheduledFuture&lt;/code&gt; 객체를 사용 하면 &lt;code&gt;command&lt;/code&gt; 이 갑자기 종료 되더라도 &lt;a href=&quot;threadpoolexecutor#afterExecute-java.lang.Runnable-java.lang.Throwable-&quot;&gt; &lt;code&gt;afterExecute&lt;/code&gt; &lt;/a&gt; 가 항상 null second &lt;code&gt;Throwable&lt;/code&gt; 인수 와 함께 호출됩니다 . 대신, 그러한 작업에 의해 발생되는 &lt;code&gt;Throwable&lt;/code&gt; 은 &lt;a href=&quot;future#get--&quot;&gt; &lt;code&gt;Future.get()&lt;/code&gt; &lt;/a&gt; 통해 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="622ec8aa9696f49b5a1d49f1ec97d4e475ae08b1" translate="yes" xml:space="preserve">
          <source>A constant for a period of zero.</source>
          <target state="translated">기간이 0 인 상수.</target>
        </trans-unit>
        <trans-unit id="1477f5f68f8134d2aecf8c4707dc2163e321bbce" translate="yes" xml:space="preserve">
          <source>A constant holding a Not-a-Number (NaN) value of type &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 유형의 NaN (Not-a-Number) 값을 보유하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="408ab1d95aeb7f78d5620b36adb094b5f8e386ed" translate="yes" xml:space="preserve">
          <source>A constant holding a Not-a-Number (NaN) value of type &lt;code&gt;double&lt;/code&gt;. It is equivalent to the value returned by &lt;code&gt;Double.longBitsToDouble(0x7ff8000000000000L)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 유형의 NaN (Not-a-Number) 값을 보유하는 상수 입니다. &lt;code&gt;Double.longBitsToDouble(0x7ff8000000000000L)&lt;/code&gt; 반환 한 값과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d8788ee830046de75b94187700a963f5317049c0" translate="yes" xml:space="preserve">
          <source>A constant holding a Not-a-Number (NaN) value of type &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 유형의 NaN (Not-a-Number) 값을 보유하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="7a9f41909332598bf0fe8a6b6c7e05fcc54b78f8" translate="yes" xml:space="preserve">
          <source>A constant holding a Not-a-Number (NaN) value of type &lt;code&gt;float&lt;/code&gt;. It is equivalent to the value returned by &lt;code&gt;Float.intBitsToFloat(0x7fc00000)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 유형의 NaN (Not-a-Number) 값을 보유하는 상수 입니다. &lt;code&gt;Float.intBitsToFloat(0x7fc00000)&lt;/code&gt; 반환 한 값과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="0c3f813cf29203f458e4a403c0749db1ce8e4539" translate="yes" xml:space="preserve">
          <source>A constant holding the largest positive finite value of type &lt;code&gt;double&lt;/code&gt;, (2-2&lt;sup&gt;-52&lt;/sup&gt;)&amp;middot;2&lt;sup&gt;1023&lt;/sup&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 유형의 가장 큰 양의 유한 값 , (2-2 &lt;sup&gt;-52&lt;/sup&gt; ) &amp;middot; 2 &lt;sup&gt;1023을&lt;/sup&gt; 보유하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="c2370477399c9d24edd4e5ac9a5b7d569b9b314b" translate="yes" xml:space="preserve">
          <source>A constant holding the largest positive finite value of type &lt;code&gt;double&lt;/code&gt;, (2-2&lt;sup&gt;-52&lt;/sup&gt;)&amp;middot;2&lt;sup&gt;1023&lt;/sup&gt;. It is equal to the hexadecimal floating-point literal &lt;code&gt;0x1.fffffffffffffP+1023&lt;/code&gt; and also equal to &lt;code&gt;Double.longBitsToDouble(0x7fefffffffffffffL)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 형의 최대 양의 유한 유한 값 (2-2 &lt;sup&gt;-52&lt;/sup&gt; ) &amp;middot; 2 &lt;sup&gt;1023을&lt;/sup&gt; 유지하는 상수 입니다. 16 진 부동 소수점 리터럴 &lt;code&gt;0x1.fffffffffffffP+1023&lt;/code&gt; 과 같 &lt;code&gt;Double.longBitsToDouble(0x7fefffffffffffffL)&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="49c356c451cc04904396932fe1a3f20233a7f5a8" translate="yes" xml:space="preserve">
          <source>A constant holding the largest positive finite value of type &lt;code&gt;float&lt;/code&gt;, (2-2&lt;sup&gt;-23&lt;/sup&gt;)&amp;middot;2&lt;sup&gt;127&lt;/sup&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 유형의 최대 양의 유한 값 , (2-2 &lt;sup&gt;-23&lt;/sup&gt; ) &amp;middot; 2 &lt;sup&gt;127을&lt;/sup&gt; 보유하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="1559c3190af98081a3a4166e36cd940881955573" translate="yes" xml:space="preserve">
          <source>A constant holding the largest positive finite value of type &lt;code&gt;float&lt;/code&gt;, (2-2&lt;sup&gt;-23&lt;/sup&gt;)&amp;middot;2&lt;sup&gt;127&lt;/sup&gt;. It is equal to the hexadecimal floating-point literal &lt;code&gt;0x1.fffffeP+127f&lt;/code&gt; and also equal to &lt;code&gt;Float.intBitsToFloat(0x7f7fffff)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 유형의 최대 양의 유한 유한 값 (2-2 &lt;sup&gt;-23&lt;/sup&gt; ) &amp;middot; 2 &lt;sup&gt;127을&lt;/sup&gt; 유지하는 상수 입니다. 16 진 부동 소수점 리터럴 &lt;code&gt;0x1.fffffeP+127f&lt;/code&gt; 와 같고 &lt;code&gt;Float.intBitsToFloat(0x7f7fffff)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="aa45635c3dac94b3e1415bc2816262b93420be17" translate="yes" xml:space="preserve">
          <source>A constant holding the maximum value a &lt;code&gt;byte&lt;/code&gt; can have, 2&lt;sup&gt;7&lt;/sup&gt;-1.</source>
          <target state="translated">&lt;code&gt;byte&lt;/code&gt; 가 가질 수 있는 최대 값을 보유하는 상수 는 2 &lt;sup&gt;7&lt;/sup&gt; -1입니다.</target>
        </trans-unit>
        <trans-unit id="c81538130b7723dffb4e565ca4c43f81ab349db0" translate="yes" xml:space="preserve">
          <source>A constant holding the maximum value a &lt;code&gt;long&lt;/code&gt; can have, 2&lt;sup&gt;63&lt;/sup&gt;-1.</source>
          <target state="translated">최대 값을 &lt;code&gt;long&lt;/code&gt; 유지하는 상수 는 2 &lt;sup&gt;63&lt;/sup&gt; -1입니다.</target>
        </trans-unit>
        <trans-unit id="a20a77b22599d89aa750f87d3b8f6393a31871b6" translate="yes" xml:space="preserve">
          <source>A constant holding the maximum value a &lt;code&gt;short&lt;/code&gt; can have, 2&lt;sup&gt;15&lt;/sup&gt;-1.</source>
          <target state="translated">최대 값을 &lt;code&gt;short&lt;/code&gt; 유지하는 상수 는 2 &lt;sup&gt;15&lt;/sup&gt; -1입니다.</target>
        </trans-unit>
        <trans-unit id="89f6fa143f9ec2f083ee659804ad1b8c50e1db45" translate="yes" xml:space="preserve">
          <source>A constant holding the maximum value an &lt;code&gt;int&lt;/code&gt; can have, 2&lt;sup&gt;31&lt;/sup&gt;-1.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 가 가질 수 있는 최대 값을 유지하는 상수 는 2 &lt;sup&gt;31&lt;/sup&gt; -1입니다.</target>
        </trans-unit>
        <trans-unit id="213c983a4885ceaaad32258ba70bcf2aca3ef5ce" translate="yes" xml:space="preserve">
          <source>A constant holding the maximum value of weight, 1.0, which indicates that the language range is a good fit for the user.</source>
          <target state="translated">최대 가중치 1.0을 유지하는 상수는 언어 범위가 사용자에게 적합 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="195e5bbc3041eea84adab54a11e575298b1c41cf" translate="yes" xml:space="preserve">
          <source>A constant holding the minimum value a &lt;code&gt;byte&lt;/code&gt; can have, -2&lt;sup&gt;7&lt;/sup&gt;.</source>
          <target state="translated">최소값 들고 상수는 &lt;code&gt;byte&lt;/code&gt; 가질 수 -2 &lt;sup&gt;7&lt;/sup&gt; .</target>
        </trans-unit>
        <trans-unit id="52acf66e806a2a273588e0eb3f8f800460ba9f69" translate="yes" xml:space="preserve">
          <source>A constant holding the minimum value a &lt;code&gt;long&lt;/code&gt; can have, -2&lt;sup&gt;63&lt;/sup&gt;.</source>
          <target state="translated">최소값을 &lt;code&gt;long&lt;/code&gt; 유지하는 상수 는 -2 &lt;sup&gt;63&lt;/sup&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d88b8661d44e693837e8dcbbb8ad71a38058f36b" translate="yes" xml:space="preserve">
          <source>A constant holding the minimum value a &lt;code&gt;short&lt;/code&gt; can have, -2&lt;sup&gt;15&lt;/sup&gt;.</source>
          <target state="translated">&lt;code&gt;short&lt;/code&gt; 를 가질 수 있는 최소값을 유지하는 상수 는 -2 &lt;sup&gt;15&lt;/sup&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fd86206e57defe248bbdbdca1a38c5b7fe7516c3" translate="yes" xml:space="preserve">
          <source>A constant holding the minimum value an &lt;code&gt;int&lt;/code&gt; can have, -2&lt;sup&gt;31&lt;/sup&gt;.</source>
          <target state="translated">최소값 들고 상수는 &lt;code&gt;int&lt;/code&gt; 가질 수 -2 &lt;sup&gt;31&lt;/sup&gt; .</target>
        </trans-unit>
        <trans-unit id="366d749bc03e21a5730979c744989b2ca9b9b0f7" translate="yes" xml:space="preserve">
          <source>A constant holding the minimum value of weight, 0.0, which indicates that the language range is not a good fit for the user.</source>
          <target state="translated">최소 가중치 0.0을 유지하는 상수는 언어 범위가 사용자에게 적합하지 않음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ec09f1e6a384ccf4edc76113c490998c57d6faf9" translate="yes" xml:space="preserve">
          <source>A constant holding the negative infinity of type &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 형의 음의 무한대를 유지하는 상수 .</target>
        </trans-unit>
        <trans-unit id="03a6d5a6655c2a060db44ef940b07a63cb0d9b15" translate="yes" xml:space="preserve">
          <source>A constant holding the negative infinity of type &lt;code&gt;double&lt;/code&gt;. It is equal to the value returned by &lt;code&gt;Double.longBitsToDouble(0xfff0000000000000L)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 형의 부의 무한대를 보관 유지하는 정수 입니다. &lt;code&gt;Double.longBitsToDouble(0xfff0000000000000L)&lt;/code&gt; 반환 한 값과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="237d098976370c391bc3e6e82087bc622bb9f347" translate="yes" xml:space="preserve">
          <source>A constant holding the negative infinity of type &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 유형의 음의 무한대를 유지하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="562f4fa39e792042eda77256d90f71f667f9cb4d" translate="yes" xml:space="preserve">
          <source>A constant holding the negative infinity of type &lt;code&gt;float&lt;/code&gt;. It is equal to the value returned by &lt;code&gt;Float.intBitsToFloat(0xff800000)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 형의 부의 무한대를 보관 유지하는 정수 입니다. &lt;code&gt;Float.intBitsToFloat(0xff800000)&lt;/code&gt; 반환 한 값과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="520f3294013e64c156f492ac639180a454efb1f2" translate="yes" xml:space="preserve">
          <source>A constant holding the positive infinity of type &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 유형의 양의 무한대를 유지하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="89bdfdbbe53820259637babc21d8836fd71ccc85" translate="yes" xml:space="preserve">
          <source>A constant holding the positive infinity of type &lt;code&gt;double&lt;/code&gt;. It is equal to the value returned by &lt;code&gt;Double.longBitsToDouble(0x7ff0000000000000L)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 형의 정의 무한대를 보관 유지하는 정수 입니다. &lt;code&gt;Double.longBitsToDouble(0x7ff0000000000000L)&lt;/code&gt; 반환 한 값과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="476c7126d47afc9d47bd86d5d8fe47269ec1e776" translate="yes" xml:space="preserve">
          <source>A constant holding the positive infinity of type &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 유형의 양의 무한대를 유지하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="e4edd55348f3bbcf29f947e2199d27f6106b6d21" translate="yes" xml:space="preserve">
          <source>A constant holding the positive infinity of type &lt;code&gt;float&lt;/code&gt;. It is equal to the value returned by &lt;code&gt;Float.intBitsToFloat(0x7f800000)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 형의 정의 무한대를 보관 유지하는 정수 입니다. &lt;code&gt;Float.intBitsToFloat(0x7f800000)&lt;/code&gt; 반환 한 값과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="b6ebed79b2e5b37f5b30f735301a55cdb9a92c0c" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive nonzero value of type &lt;code&gt;double&lt;/code&gt;, 2&lt;sup&gt;-1074&lt;/sup&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 유형의 0이 아닌 가장 작은 양의 값인 2 &lt;sup&gt;-1074를&lt;/sup&gt; 보유하는 상수 &lt;sup&gt;입니다&lt;/sup&gt; .</target>
        </trans-unit>
        <trans-unit id="997f769b40571ffd14031483d8e7531f40e5ad0f" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive nonzero value of type &lt;code&gt;double&lt;/code&gt;, 2&lt;sup&gt;-1074&lt;/sup&gt;. It is equal to the hexadecimal floating-point literal &lt;code&gt;0x0.0000000000001P-1022&lt;/code&gt; and also equal to &lt;code&gt;Double.longBitsToDouble(0x1L)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 유형의 최소 양수가 아닌 0 , &lt;sup&gt;2-1074&lt;/sup&gt; 값을 보유하는 상수 &lt;sup&gt;입니다&lt;/sup&gt; . 16 진 부동 소수점 리터럴 &lt;code&gt;0x0.0000000000001P-1022&lt;/code&gt; 와 같 &lt;code&gt;Double.longBitsToDouble(0x1L)&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="72c438d246bb6c822505f14b07f2b5af54558848" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive nonzero value of type &lt;code&gt;float&lt;/code&gt;, 2&lt;sup&gt;-149&lt;/sup&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 유형의 0이 아닌 가장 작은 양의 값을 보유하는 상수 , 2 &lt;sup&gt;-149&lt;/sup&gt; .</target>
        </trans-unit>
        <trans-unit id="31f87b77b0b8567fdb51e96a07e699ba219f199a" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive nonzero value of type &lt;code&gt;float&lt;/code&gt;, 2&lt;sup&gt;-149&lt;/sup&gt;. It is equal to the hexadecimal floating-point literal &lt;code&gt;0x0.000002P-126f&lt;/code&gt; and also equal to &lt;code&gt;Float.intBitsToFloat(0x1)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 유형의 최소 양수가 아닌 0 , 2 &lt;sup&gt;-149&lt;/sup&gt; 값을 보유하는 상수 입니다. 16 진 부동 소수점 리터럴 &lt;code&gt;0x0.000002P-126f&lt;/code&gt; 와 같고 &lt;code&gt;Float.intBitsToFloat(0x1)&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="c3c55a987c7ceb1b6d0cd0c0bc00253de8cc2f2f" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive normal value of type &lt;code&gt;double&lt;/code&gt;, 2&lt;sup&gt;-1022&lt;/sup&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 유형의 가장 작은 양의 정상 값 2 &lt;sup&gt;-1022를&lt;/sup&gt; 보유하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="43ac95af04530b21424fe9fe4d0d50cb98b1f66e" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive normal value of type &lt;code&gt;double&lt;/code&gt;, 2&lt;sup&gt;-1022&lt;/sup&gt;. It is equal to the hexadecimal floating-point literal &lt;code&gt;0x1.0p-1022&lt;/code&gt; and also equal to &lt;code&gt;Double.longBitsToDouble(0x0010000000000000L)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 유형의 최소 양수 정상 값 2 &lt;sup&gt;-1022를&lt;/sup&gt; 유지하는 상수 입니다. 16 진 부동 소수점 리터럴 &lt;code&gt;0x1.0p-1022&lt;/code&gt; 와 같고 &lt;code&gt;Double.longBitsToDouble(0x0010000000000000L)&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="56e942658197cbb108717eeb662e7b73120d0074" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive normal value of type &lt;code&gt;float&lt;/code&gt;, 2&lt;sup&gt;-126&lt;/sup&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 유형의 가장 작은 양의 일반 값 , 2 &lt;sup&gt;-126을&lt;/sup&gt; 보유하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="981c4e581250bfe1199ccc6d949a0d2120c2ca33" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive normal value of type &lt;code&gt;float&lt;/code&gt;, 2&lt;sup&gt;-126&lt;/sup&gt;. It is equal to the hexadecimal floating-point literal &lt;code&gt;0x1.0p-126f&lt;/code&gt; and also equal to &lt;code&gt;Float.intBitsToFloat(0x00800000)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 유형의 최소 양수 정상 값 2 &lt;sup&gt;-126을&lt;/sup&gt; 유지하는 상수 입니다. 16 진 부동 소수점 리터럴 &lt;code&gt;0x1.0p-126f&lt;/code&gt; 와 같고 &lt;code&gt;Float.intBitsToFloat(0x00800000)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="56d934c7a517e9935eda91929df3ed1fbd67c0e3" translate="yes" xml:space="preserve">
          <source>A constant indicating that a number token has been read.</source>
          <target state="translated">숫자 토큰을 읽었 음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="648ea7585761892bba4a14317322b6419df48f35" translate="yes" xml:space="preserve">
          <source>A constant indicating that a word token has been read.</source>
          <target state="translated">단어 토큰을 읽었 음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="98b4a9c5387ca18d776a07de80c4f34274c13477" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads and non-repeatable reads are prevented; phantom reads can occur.</source>
          <target state="translated">더티 읽기 및 반복 불가능 읽기가 방지됨을 나타내는 상수입니다. 팬텀 읽기가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd9b1bce18e7e3d182ec7959d944a03570266ccb" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads and non-repeatable reads are prevented; phantom reads can occur. This level prohibits a transaction from reading a row with uncommitted changes in it, and it also prohibits the situation where one transaction reads a row, a second transaction alters the row, and the first transaction rereads the row, getting different values the second time (a &quot;non-repeatable read&quot;).</source>
          <target state="translated">더티 읽기 및 반복 불가능 읽기가 방지됨을 나타내는 상수입니다. 팬텀 읽기가 발생할 수 있습니다. 이 수준은 트랜잭션이 커밋되지 않은 변경 사항이있는 행을 읽는 것을 금지하고, 한 트랜잭션이 행을 읽고, 두 번째 트랜잭션이 행을 변경하고, 첫 번째 트랜잭션이 행을 다시 읽어 두 번째로 다른 값을 얻는 상황을 금지합니다 ( &quot;반복 불가능한 읽기&quot;).</target>
        </trans-unit>
        <trans-unit id="5ccebbb810455f6dcf6fbc1780c90f63ef476103" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads are prevented; non-repeatable reads and phantom reads can occur.</source>
          <target state="translated">더티 읽기가 방지됨을 나타내는 상수입니다. 반복 불가능한 읽기 및 팬텀 읽기가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49efda05d67d342a70be7ecd6deb6a94a376bd49" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads are prevented; non-repeatable reads and phantom reads can occur. This level only prohibits a transaction from reading a row with uncommitted changes in it.</source>
          <target state="translated">더티 읽기가 방지됨을 나타내는 상수입니다. 반복 불가능한 읽기 및 팬텀 읽기가 발생할 수 있습니다. 이 수준은 트랜잭션이 커밋되지 않은 변경 사항이있는 행을 읽는 것을 금지합니다.</target>
        </trans-unit>
        <trans-unit id="37d9f7bc59529a0ca49b271888a4f173001c8c7f" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads, non-repeatable reads and phantom reads are prevented.</source>
          <target state="translated">더티 읽기, 반복 불가능한 읽기 및 팬텀 읽기가 금지됨을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="1cd08ab7a3dbb038e7b29ee382cc26d88ac61eb5" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads, non-repeatable reads and phantom reads are prevented. This level includes the prohibitions in &lt;code&gt;TRANSACTION_REPEATABLE_READ&lt;/code&gt; and further prohibits the situation where one transaction reads all rows that satisfy a &lt;code&gt;WHERE&lt;/code&gt; condition, a second transaction inserts a row that satisfies that &lt;code&gt;WHERE&lt;/code&gt; condition, and the first transaction rereads for the same condition, retrieving the additional &quot;phantom&quot; row in the second read.</source>
          <target state="translated">더티 읽기, 반복 불가능한 읽기 및 팬텀 읽기가 금지됨을 나타내는 상수입니다. 이 수준에는 &lt;code&gt;TRANSACTION_REPEATABLE_READ&lt;/code&gt; 의 금지가 포함되어 있으며 한 트랜잭션이 &lt;code&gt;WHERE&lt;/code&gt; 조건 을 충족하는 모든 행을 읽고 두 번째 트랜잭션이 해당 &lt;code&gt;WHERE&lt;/code&gt; 조건 을 충족하는 행을 삽입 하고 첫 번째 트랜잭션이 동일한 조건에 대해 다시 읽어 추가 &quot;를 검색하는 상황을 추가로 금지합니다. 두 번째 읽기의 phantom &quot;행.</target>
        </trans-unit>
        <trans-unit id="900f9670f4b5738ea6e1f6deeecfb6113cadf9d1" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads, non-repeatable reads and phantom reads can occur.</source>
          <target state="translated">더티 읽기, 반복 불가능한 읽기 및 팬텀 읽기가 발생할 수 있음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="75e113b185a8034fd038a5931ef3fc02dd1f98ac" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads, non-repeatable reads and phantom reads can occur. This level allows a row changed by one transaction to be read by another transaction before any changes in that row have been committed (a &quot;dirty read&quot;). If any of the changes are rolled back, the second transaction will have retrieved an invalid row.</source>
          <target state="translated">더티 읽기, 반복 불가능한 읽기 및 팬텀 읽기가 발생할 수 있음을 나타내는 상수입니다. 이 수준에서는 해당 행의 변경 사항이 커밋되기 전에 한 트랜잭션에서 변경된 행을 다른 트랜잭션에서 읽을 수 있습니다 ( &quot;더티 읽기&quot;). 변경 사항이 롤백되면 두 번째 트랜잭션이 잘못된 행을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="b15777e7d884a405608153040cd013c01f5d0b33" translate="yes" xml:space="preserve">
          <source>A constant indicating that the end of the line has been read.</source>
          <target state="translated">행의 끝을 읽었 음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="3e9ce93a619d65834f17595305fc77f97a49324d" translate="yes" xml:space="preserve">
          <source>A constant indicating that the end of the stream has been read.</source>
          <target state="translated">스트림의 끝을 읽었 음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="05ff7d5d039f3d599a44d1a82113a8346729d551" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key event originated on the numeric keypad or with a virtual key corresponding to the numeric keypad.</source>
          <target state="translated">키 이벤트가 숫자 키패드 또는 숫자 키패드에 해당하는 가상 키에서 시작되었음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="9be0ab06be8a50e56ba406130301c789831fded3" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is in the left key location (there is more than one possible location for this key).</source>
          <target state="translated">눌렀거나 놓은 키가 왼쪽 키 위치에 있음을 나타내는 상수입니다 (이 키에 대해 둘 이상의 가능한 위치가 있음).</target>
        </trans-unit>
        <trans-unit id="d7762c22e001277ee5cd6aeecabf121605fbece7" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is in the left key location (there is more than one possible location for this key). Example: the left shift key.</source>
          <target state="translated">눌렀거나 놓은 키가 왼쪽 키 위치에 있음을 나타내는 상수입니다 (이 키에 대해 둘 이상의 가능한 위치가 있음). 예 : 왼쪽 Shift 키.</target>
        </trans-unit>
        <trans-unit id="9a1f11a170c0a575584e55c5fb1d677bb6358739" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is in the right key location (there is more than one possible location for this key).</source>
          <target state="translated">눌렀거나 놓은 키가 올바른 키 위치에 있음을 나타내는 상수입니다 (이 키에 대해 둘 이상의 가능한 위치가 있음).</target>
        </trans-unit>
        <trans-unit id="98822459a383fdb86b1f6269201518447e31508e" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is in the right key location (there is more than one possible location for this key). Example: the right shift key.</source>
          <target state="translated">눌렀거나 놓은 키가 올바른 키 위치에 있음을 나타내는 상수입니다 (이 키에 대해 둘 이상의 가능한 위치가 있음). 예 : 오른쪽 Shift 키.</target>
        </trans-unit>
        <trans-unit id="29d575fa10f7d1466aa0adcd76dc7b048791c20c" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is not distinguished as the left or right version of a key, and did not originate on the numeric keypad (or did not originate with a virtual key corresponding to the numeric keypad).</source>
          <target state="translated">눌렀거나 놓은 키가 키의 왼쪽 또는 오른쪽 버전으로 구분되지 않고 숫자 키패드에서 시작되지 않았거나 숫자 키패드에 해당하는 가상 키에서 시작되지 않았 음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="4f8a965994d6bdff67c964a039e7f1a4fd80747d" translate="yes" xml:space="preserve">
          <source>A constant indicating that the keyLocation is indeterminate or not relevant.</source>
          <target state="translated">keyLocation이 불확실하거나 관련이 없음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="9f2c38207a19702e47eb202ace4e581e89aa869f" translate="yes" xml:space="preserve">
          <source>A constant indicating that the keyLocation is indeterminate or not relevant. &lt;code&gt;KEY_TYPED&lt;/code&gt; events do not have a keyLocation; this value is used instead.</source>
          <target state="translated">keyLocation이 불확실하거나 관련이 없음을 나타내는 상수입니다. &lt;code&gt;KEY_TYPED&lt;/code&gt; 이벤트에는 keyLocation이 없습니다. 이 값이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="20c201122998a1314d1f84487379aeb5d8cd68c9" translate="yes" xml:space="preserve">
          <source>A constant indicating that transactions are not supported.</source>
          <target state="translated">트랜잭션이 지원되지 않음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="2d5ee397d0953f8c878592a157223de0668f57de" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is a Unicode stream.</source>
          <target state="translated">지정된 매개 변수가 유니 코드 스트림임을 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 오브젝트에 표시하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="444a3b653570cc75145a9db33019375cdb0d23ea" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is a Unicode stream. This &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object is provided as an extension of the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class defined in the &lt;code&gt;SyncFactory&lt;/code&gt; static factory SPI mechanism.</source>
          <target state="translated">지정된 매개 변수가 유니 코드 스트림임을 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 오브젝트에 표시하는 상수 입니다. 이 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 객체는 &lt;code&gt;SyncFactory&lt;/code&gt; 정적 팩토리 SPI 메커니즘에 정의 된 &lt;code&gt;SyncProvider&lt;/code&gt; 추상 클래스 의 확장으로 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="d1af75dffd4a28ad609bd172e9df6b60b0492280" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is a binary stream.</source>
          <target state="translated">지정된 매개 변수가 2 진 스트림임을 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 오브젝트에 표시하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="82f3fde9e0a9c49845f36259d577d009885b6c5d" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is a binary stream. A &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object is provided as an extension of the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class defined in the &lt;code&gt;SyncFactory&lt;/code&gt; static factory SPI mechanism.</source>
          <target state="translated">지정된 매개 변수가 2 진 스트림임을 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 오브젝트에 표시하는 상수 입니다. &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 의 객체의 확장으로 제공 &lt;code&gt;SyncProvider&lt;/code&gt; 에 정의 추상 클래스 &lt;code&gt;SyncFactory&lt;/code&gt; 에의 static 팩토리 SPI 메커니즘.</target>
        </trans-unit>
        <trans-unit id="b2e11b618c4a9eb29b087fecb9e638df2e5f9e9c" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is an ASCII stream.</source>
          <target state="translated">지정된 매개 변수가 ASCII 스트림임을 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 오브젝트에 표시하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="778c619722f209ee6e231b3b6a638d87619250b4" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is an ASCII stream. A &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object is provided as an extension of the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class defined in the &lt;code&gt;SyncFactory&lt;/code&gt; static factory SPI mechanism.</source>
          <target state="translated">지정된 매개 변수가 ASCII 스트림임을 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 오브젝트에 표시하는 상수 입니다. &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 의 객체의 확장으로 제공 &lt;code&gt;SyncProvider&lt;/code&gt; 에 정의 추상 클래스 &lt;code&gt;SyncFactory&lt;/code&gt; 에의 static 팩토리 SPI 메커니즘.</target>
        </trans-unit>
        <trans-unit id="05fd9daac8cc107ac74022f8e6a431daa3310be1" translate="yes" xml:space="preserve">
          <source>A constant pool index does not refer to a UTF-8 entry</source>
          <target state="translated">상수 풀 인덱스는 UTF-8 항목을 참조하지 않습니다</target>
        </trans-unit>
        <trans-unit id="6b17d0eb335bec84834c46dc6002183dea1ae9ba" translate="yes" xml:space="preserve">
          <source>A constant pool index is out of bounds.</source>
          <target state="translated">상수 풀 인덱스가 범위를 벗어났습니다.</target>
        </trans-unit>
        <trans-unit id="b83da880fe62fcf431fa2b80b966091f24e6c21a" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is a general Unicode string.</source>
          <target state="translated">속성 값이 일반 유니 코드 문자열임을 나타내는 &lt;code&gt;getAttributeDataType&lt;/code&gt; 에 의해 리턴되는 상수 .</target>
        </trans-unit>
        <trans-unit id="7e64a1186b69b4d433ea2f6a6e2d5e8963e0b2a9" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is a string representation of a decimal floating-point number.</source>
          <target state="translated">속성 값이 10 진 부동 소수점 숫자의 문자열 표현임을 나타내는 &lt;code&gt;getAttributeDataType&lt;/code&gt; 에 의해 리턴되는 상수 .</target>
        </trans-unit>
        <trans-unit id="ab34a89f1927a75ce08a7f8cd06fc8745928ab5f" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is a string representation of a double-precision decimal floating-point number.</source>
          <target state="translated">속성 값이 배정도 십진 부동 소수점 숫자의 문자열 표현임을 나타내는 &lt;code&gt;getAttributeDataType&lt;/code&gt; 에 의해 리턴되는 상수 .</target>
        </trans-unit>
        <trans-unit id="1dc9d55cfd527b1e9a8494e21da70bbc73b4a0ca" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is a string representation of an integer.</source>
          <target state="translated">속성 값이 정수의 문자열 표현임을 나타내는 &lt;code&gt;getAttributeDataType&lt;/code&gt; 에 의해 리턴되는 상수 .</target>
        </trans-unit>
        <trans-unit id="b055c29b61d38048b3db837907dda4788b82beaf" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is one of the boolean values 'true' or 'false'.</source>
          <target state="translated">속성 값이 부울 값 'true'또는 'false'중 하나임을 나타내는 &lt;code&gt;getAttributeDataType&lt;/code&gt; 에서 리턴하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="9c7921138692ad31aed03ed87a2c18d7559fa6f8" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is one of the boolean values 'true' or 'false'. Attribute values of type DATATYPE_BOOLEAN should be marked as enumerations, and the permitted values should be the string literal values &quot;TRUE&quot; or &quot;FALSE&quot;, although a plugin may also recognise lower or mixed case equivalents.</source>
          <target state="translated">속성의 값이 부울 값 'true'또는 'false'중 하나임을 나타내는 &lt;code&gt;getAttributeDataType&lt;/code&gt; 에 의해 리턴되는 상수 . 유형이 DATATYPE_BOOLEAN 인 속성 값은 열거로 표시되어야하며 허용되는 값은 문자열 리터럴 값 &quot;TRUE&quot;또는 &quot;FALSE&quot;여야하지만 플러그인은 소문자 또는 대소 문자를 동등한 것으로 인식 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="566bce4b46c648ea6165b9faa10f160b834017b7" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set a range of values.</source>
          <target state="translated">속성 또는 사용자 개체가 값 범위를 설정할 수 있음을 나타 내기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에서 반환하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="536b4870053ade20fbb0746b24a7e47d769bbe9e" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set a range of values. Both the minimum and maximum values of the range are exclusive. It is recommended that ranges of integers be inclusive on both ends, and that exclusive ranges be used only for floating-point data.</source>
          <target state="translated">속성 또는 사용자 오브젝트가 값 범위를 설정할 수 있음을 표시하기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에 의해 리턴되는 상수 . 범위의 최소값과 최대 값이 모두 배타적입니다. 정수 범위는 양쪽 끝을 포함하고 배타적 범위는 부동 소수점 데이터에만 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="0b757473db53368a2ef12d97dd50853ce089eaf3" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set a range of values. Both the minimum and maximum values of the range are inclusive. It is recommended that ranges of integers be inclusive on both ends, and that exclusive ranges be used only for floating-point data.</source>
          <target state="translated">속성 또는 사용자 오브젝트가 값 범위를 설정할 수 있음을 표시하기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에 의해 리턴되는 상수 . 범위의 최소값과 최대 값이 모두 포함됩니다. 정수 범위는 양쪽 끝을 포함하고 배타적 범위는 부동 소수점 데이터에만 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="2983d9a4c8f0070d53ebb95bf9e8a10f5fc81489" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set a single, arbitrary value.</source>
          <target state="translated">속성 또는 사용자 객체가 임의의 단일 값으로 설정 될 수 있음을 표시하기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에 의해 리턴되는 상수 .</target>
        </trans-unit>
        <trans-unit id="7dd2ee1ceefd12d472ba5e7d72f427399d68f9c3" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set one of a number of enumerated values.</source>
          <target state="translated">&lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에서 반환하는 상수 는 속성 또는 사용자 개체가 여러 열거 된 값 중 하나로 설정 될 수 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0700eebf90e2b9b27717269ad4daa5ca6eaf8941" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set one of a number of enumerated values. In the case of attributes, these values are &lt;code&gt;String&lt;/code&gt;s; for objects, they are &lt;code&gt;Object&lt;/code&gt;s implementing a given class or interface.</source>
          <target state="translated">속성 또는 사용자 오브젝트가 열거 된 값 중 하나를 설정할 수 있음을 표시하기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에 의해 리턴되는 상수 . 속성의 경우 이러한 값은 &lt;code&gt;String&lt;/code&gt; 입니다 . 객체의 경우, 주어진 클래스 또는 인터페이스를 구현하는 &lt;code&gt;Object&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2ec6012b51cd19cccf833c92407daa945b1a03e9" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a list or array of values.</source>
          <target state="translated">속성 또는 사용자 개체가 값 목록 또는 배열로 설정 될 수 있음을 나타 내기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에서 반환하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="01a4565fe7f6e19d3ab523d52b2e3d4022290f1b" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a list or array of values. In the case of attributes, the list will consist of whitespace-separated values within a &lt;code&gt;String&lt;/code&gt;; for objects, an array will be used.</source>
          <target state="translated">속성 또는 사용자 오브젝트가 값의 목록 또는 배열로 설정 될 수 있음을 표시하기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에 의해 리턴되는 상수 . 속성의 경우 목록은 &lt;code&gt;String&lt;/code&gt; 내에 공백으로 구분 된 값으로 구성됩니다 . 객체의 경우 배열이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="80334552b3aebe7d8c7a06d06da04a1a3568a90f" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a range of values.</source>
          <target state="translated">속성 또는 사용자 개체가 값 범위로 설정 될 수 있음을 나타 내기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에서 반환하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="1b6629d90c3b11283881b0238ff02a1f68047efe" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a range of values. The maximum (but not the minimum) value of the range is inclusive.</source>
          <target state="translated">속성 또는 사용자 오브젝트가 값 범위로 설정 될 수 있음을 표시하기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에 의해 리턴되는 상수 . 범위의 최대 값 (최소한은 아님)이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="772f7ec75791ea05130b58e948867c25d7e5fe15" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a range of values. The minimum (but not the maximum) value of the range is inclusive.</source>
          <target state="translated">속성 또는 사용자 오브젝트가 값 범위로 설정 될 수 있음을 표시하기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에 의해 리턴되는 상수 . 범위의 최소값 (최대 값은 아님)이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="17abfcd5d959c22775f6b62852cd890d8ecc15d8" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element may not have any children.</source>
          <target state="translated">요소에 자식이 없을 수 있음을 나타 내기 위해 &lt;code&gt;getChildPolicy&lt;/code&gt; 에서 반환하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="1514659e4abf19076195fdc813b9841606a061a9" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element may not have any children. In other words, it is required to be a leaf node.</source>
          <target state="translated">요소에 자식이 없을 수 있음을 나타 내기 위해 &lt;code&gt;getChildPolicy&lt;/code&gt; 에 의해 리턴되는 상수 . 즉, 리프 노드 여야합니다.</target>
        </trans-unit>
        <trans-unit id="b270fd2569573332c2d9e007ae63e71559dcca3c" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have a sequence of instances of any of its legal child elements.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; 에 의해 반환 된 상수 는 요소에 해당하는 유효한 자식 요소의 인스턴스 시퀀스가 ​​있어야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0ca721acca6c2ee0f535842aac83a6e8e73d7b2b" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have a sequence of instances of any of its legal child elements. In DTD terms, the contents of the element are defined by a sequence &lt;code&gt;(a|b|c|d|...)*&lt;/code&gt;.</source>
          <target state="translated">요소에 유효한 자식 요소의 시퀀스가 ​​있어야 함을 나타 내기 위해 &lt;code&gt;getChildPolicy&lt;/code&gt; 에 의해 반환되는 상수 . DTD 용어에서, 요소의 내용은 시퀀스 &lt;code&gt;(a|b|c|d|...)*&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="349d171edd3b592ceb01cdb21161389dea4db0db" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have a single instance of each of its legal child elements, in order.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; 가 반환하는 상수로 , 요소는 순서대로 각 유효한 자식 요소의 단일 인스턴스를 가져야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="25307fe80f331b10c26c8b31d0ddbea83dc5eb8e" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have a single instance of each of its legal child elements, in order. In DTD terms, the contents of the element are defined by a sequence &lt;code&gt;a,b,c,d,...&lt;/code&gt;.</source>
          <target state="translated">요소가 유효한 각 자식 요소의 단일 인스턴스를 순서대로 가져야한다는 것을 나타 내기 위해 &lt;code&gt;getChildPolicy&lt;/code&gt; 에 의해 리턴되는 상수 . DTD 용어에서 요소의 내용은 시퀀스 &lt;code&gt;a,b,c,d,...&lt;/code&gt; 로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="62b7bc8bdc42c3f8bc44d2fd527e686dc6e82432" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or more instances of its unique legal child element.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; 에서 반환하는 상수 는 요소에 고유 한 법적 자식 요소의 인스턴스가 0 개 이상 있어야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d2a5ac0abac4124c2691f77efb666b9cd9be6e2f" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or more instances of its unique legal child element. In DTD terms, the contents of the element are defined by a starred expression &lt;code&gt;a*&lt;/code&gt;.</source>
          <target state="translated">요소에 고유의 유효한 자식 요소 인스턴스가 0 개 이상 있어야 함을 나타 내기 위해 &lt;code&gt;getChildPolicy&lt;/code&gt; 에서 반환하는 상수 입니다. DTD 용어에서 요소의 내용은 별표 표시된 표현식 &lt;code&gt;a*&lt;/code&gt; 로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="55f9aa4fe76b8c0ceece5c17f4e27e5156875298" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or one children, selected from among its legal child elements.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; 에 의해 반환되는 상수 는 요소에 유효한 자식 요소 중에서 선택된 0 개 또는 1 개의 자식이 있어야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="25a43eb749e0d4acdb5a2d1a97249b39d470bc43" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or one children, selected from among its legal child elements. In DTD terms, the contents of the element are defined by a selection &lt;code&gt;a|b|c|d|...&lt;/code&gt;.</source>
          <target state="translated">요소가 합법적 인 자식 요소 중 하나 또는 하나의 자식을 가져야한다는 것을 나타 내기 위해 &lt;code&gt;getChildPolicy&lt;/code&gt; 에 의해 반환되는 상수 . DTD 용어에서, 요소의 내용은 선택 &lt;code&gt;a|b|c|d|...&lt;/code&gt; 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="2158f87b8f92b42c073e896d0d5528d518ffe0e1" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or one instance of each of its legal child elements, in order.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; 가 반환하는 상수로 , 요소는 순서대로 각 유효한 자식 요소의 인스턴스가 0 개 또는 1 개 있어야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="94f4855baee14b64d1efe591ef1cabf5480c75ae" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or one instance of each of its legal child elements, in order. In DTD terms, the contents of the element are defined by a sequence &lt;code&gt;a?,b?,c?,d?,...&lt;/code&gt;.</source>
          <target state="translated">요소가 유효한 각 하위 요소의 인스턴스를 순서대로 0 개 또는 1 개 가져야 함을 표시하기 위해 &lt;code&gt;getChildPolicy&lt;/code&gt; 에서 리턴 한 상수 . DTD 용어에서 요소의 내용은 시퀀스 &lt;code&gt;a?,b?,c?,d?,...&lt;/code&gt; 로 정의 됩니다.</target>
        </trans-unit>
        <trans-unit id="d25737fce32883b6c144ed133d1e77a8c2421fac" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate the absence of a user object.</source>
          <target state="translated">사용자 객체가 없음을 나타 내기 위해 &lt;code&gt;getObjectValueType&lt;/code&gt; 에 의해 리턴되는 상수 .</target>
        </trans-unit>
        <trans-unit id="9958a5b1e7e52f53c31a2b6e90641f49be5abe83" translate="yes" xml:space="preserve">
          <source>A constant that indicates a horizontal scroll bar.</source>
          <target state="translated">가로 스크롤 막대를 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="2a664bb96fbace79e8921afd5d417d9d8f0a8b80" translate="yes" xml:space="preserve">
          <source>A constant that indicates a vertical scroll bar.</source>
          <target state="translated">세로 스크롤 막대를 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="9f3b1eee9cafae4150875d4465c302deee8b24bd" translate="yes" xml:space="preserve">
          <source>A constant that represents the days field.</source>
          <target state="translated">days 필드를 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="d50083a6b811310bfcdc88e734bb35da6b1077b7" translate="yes" xml:space="preserve">
          <source>A constant that represents the hours field.</source>
          <target state="translated">시간 필드를 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="b17282818a9c4ae66351fe225c2aa4c623204a5c" translate="yes" xml:space="preserve">
          <source>A constant that represents the minutes field.</source>
          <target state="translated">분 필드를 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="485fdf7fd1644fefedcc79390cca96901956c9af" translate="yes" xml:space="preserve">
          <source>A constant that represents the months field.</source>
          <target state="translated">월 필드를 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="bfeb5d39997aa2b454607fa8adcb25d4cf79ebfb" translate="yes" xml:space="preserve">
          <source>A constant that represents the seconds field.</source>
          <target state="translated">초 필드를 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="b48e61a5313fb72ce52d866513c4f3214262890d" translate="yes" xml:space="preserve">
          <source>A constant that represents the years field.</source>
          <target state="translated">연도 필드를 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="5abebda073f15c5667612d5bce665df5e30f7ecd" translate="yes" xml:space="preserve">
          <source>A constant to determine whether the node is accepted, rejected, or skipped, as defined above.</source>
          <target state="translated">위에 정의 된대로 노드가 승인, 거부 또는 건너 뛰는 지 여부를 판별하는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="a9bb52a1a0861cec5571123e621ea88ed9320640" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt; or &lt;code&gt;setCompressionMode&lt;/code&gt; to enable a feature for future writes.</source>
          <target state="translated">향후 쓰기를위한 기능을 활성화하기 위해 &lt;code&gt;setTilingMode&lt;/code&gt; 또는 &lt;code&gt;setCompressionMode&lt;/code&gt; 와 같은 메서드에 전달할 수있는 상수 값입니다 .</target>
        </trans-unit>
        <trans-unit id="35d4eb9703c2210692f0d6cfb2192f616bfd7eae" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt; or &lt;code&gt;setCompressionMode&lt;/code&gt; to enable a feature for future writes. That is, when this mode is set the stream will be tiled or compressed according to additional information supplied to the corresponding &lt;code&gt;set&lt;/code&gt; methods in this class and retrievable from the corresponding &lt;code&gt;get&lt;/code&gt; methods. Note that this mode is not supported for progressive output.</source>
          <target state="translated">향후 쓰기 기능을 사용하기 위해 &lt;code&gt;setTilingMode&lt;/code&gt; 또는 &lt;code&gt;setCompressionMode&lt;/code&gt; 와 같은 메소드에 전달 될 수있는 상수 값입니다 . 즉,이 모드가 설정되면 이 클래스 의 해당 &lt;code&gt;set&lt;/code&gt; 메소드에 제공되는 추가 정보에 따라 스트림이 타일링되거나 압축 되어 해당 &lt;code&gt;get&lt;/code&gt; 메소드 에서 검색 할 수 있습니다. 점진적 출력에는이 모드가 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="559ccbc6f19c151bdc59b4dda6613806012db4fa" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, and &lt;code&gt;setCompressionMode&lt;/code&gt; to disable a feature for future writes.</source>
          <target state="translated">향후 쓰기를 위해 기능을 비활성화하기 위해 &lt;code&gt;setTilingMode&lt;/code&gt; , &lt;code&gt;setProgressiveMode&lt;/code&gt; 및 &lt;code&gt;setCompressionMode&lt;/code&gt; 와 같은 메서드에 전달할 수있는 상수 값입니다 .</target>
        </trans-unit>
        <trans-unit id="5e3bdadffec9d389f0e6f442f4a8826a156f5a94" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, and &lt;code&gt;setCompressionMode&lt;/code&gt; to disable a feature for future writes. That is, when this mode is set the stream will &lt;b&gt;not&lt;/b&gt; be tiled, progressive, or compressed, and the relevant accessor methods will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">향후 쓰기 기능을 비활성화하기 위해 &lt;code&gt;setTilingMode&lt;/code&gt; , &lt;code&gt;setProgressiveMode&lt;/code&gt; 및 &lt;code&gt;setCompressionMode&lt;/code&gt; 와 같은 메서드에 전달 될 수있는 상수 값입니다 . 즉,이 모드가 설정되면 스트림이 바둑판 식으로 진행되거나 압축 &lt;b&gt;되지 않으며&lt;/b&gt; 관련 액세서 메소드가 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="3ab70b2d758691d0eea3255e3dfcc38b6fab8268" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, and &lt;code&gt;setCompressionMode&lt;/code&gt; to enable that feature for future writes.</source>
          <target state="translated">&lt;code&gt;setTilingMode&lt;/code&gt; , &lt;code&gt;setProgressiveMode&lt;/code&gt; 및 &lt;code&gt;setCompressionMode&lt;/code&gt; 와 같은 메서드에 전달되어 향후 쓰기를 위해 해당 기능을 활성화 할 수있는 상수 값입니다 .</target>
        </trans-unit>
        <trans-unit id="c8f7898366002f517660648a2793ba433862bbdf" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, and &lt;code&gt;setCompressionMode&lt;/code&gt; to enable that feature for future writes. That is, when this mode is enabled the stream will be tiled, progressive, or compressed according to a sensible default chosen internally by the writer in a plug-in dependent way, and the relevant accessor methods will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">향후 쓰기를 위해 해당 기능을 사용하기 위해 &lt;code&gt;setTilingMode&lt;/code&gt; , &lt;code&gt;setProgressiveMode&lt;/code&gt; 및 &lt;code&gt;setCompressionMode&lt;/code&gt; 와 같은 메소드에 전달 될 수있는 상수 값입니다 . 즉,이 모드가 활성화되면, 플러그인에 의존하여 라이터가 내부적으로 선택한 적절한 기본값에 따라 스트림이 바둑판 식, 프로그레시브 또는 압축되며 관련 액세서 메소드가 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="67a60cf03e51978f5cc896a2789a14cf370f1371" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, or &lt;code&gt;setCompressionMode&lt;/code&gt; to enable that feature for future writes.</source>
          <target state="translated">&lt;code&gt;setTilingMode&lt;/code&gt; , &lt;code&gt;setProgressiveMode&lt;/code&gt; 또는 &lt;code&gt;setCompressionMode&lt;/code&gt; 와 같은 메서드에 전달되어 향후 쓰기를 위해 해당 기능을 활성화 할 수있는 상수 값입니다 .</target>
        </trans-unit>
        <trans-unit id="ee2714f160a481212e68cea2fc3d76b6fb1a8d6a" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, or &lt;code&gt;setCompressionMode&lt;/code&gt; to enable that feature for future writes. That is, when this mode is enabled the stream will be tiled, progressive, or compressed based on the contents of stream and/or image metadata passed into the write operation, and any relevant accessor methods will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">향후 쓰기를 위해 해당 기능을 사용하기 위해 &lt;code&gt;setTilingMode&lt;/code&gt; , &lt;code&gt;setProgressiveMode&lt;/code&gt; 또는 &lt;code&gt;setCompressionMode&lt;/code&gt; 와 같은 메소드에 전달 될 수있는 상수 값입니다 . 즉,이 모드가 활성화되면 쓰기 작업으로 전달 된 스트림 및 / 또는 이미지 메타 데이터의 내용을 기반으로 스트림이 바둑판 식, 프로그레시브 또는 압축되며 관련 액세서 메소드가 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="7279f33ba91d89c119cc784b7519e6b9ac4694d5" translate="yes" xml:space="preserve">
          <source>A constructor consumes an extra argument for the object which is being constructed.</source>
          <target state="translated">생성자는 생성중인 객체에 대한 추가 인수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="57902652588e33d2d2877e5267fcd4fb79931dc7" translate="yes" xml:space="preserve">
          <source>A constructor with a single argument of type &lt;code&gt;Comparator&lt;/code&gt;, which creates an empty sorted map sorted according to the specified comparator.</source>
          <target state="translated">&lt;code&gt;Comparator&lt;/code&gt; 유형의 단일 인수를 가진 생성자 . 지정된 비교 자에 따라 정렬 된 빈 정렬 된 맵을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="25c8b9f747c078b778797b44d629f2869067a88a" translate="yes" xml:space="preserve">
          <source>A constructor with a single argument of type &lt;code&gt;Map&lt;/code&gt;, which creates a new map with the same key-value mappings as its argument, sorted according to the keys' natural ordering.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 유형의 단일 인수를 가진 생성자. 인수 와 동일한 키-값 매핑을 사용하여 키의 자연 순서에 따라 정렬 된 새 맵을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e3fc63f43b8fbf5b83832243411d77bf7df6af1f" translate="yes" xml:space="preserve">
          <source>A constructor with a single argument of type &lt;code&gt;SortedMap&lt;/code&gt;, which creates a new sorted map with the same key-value mappings and the same ordering as the input sorted map.</source>
          <target state="translated">&lt;code&gt;SortedMap&lt;/code&gt; 유형의 단일 인수를 가진 생성자. 입력 정렬 맵과 동일한 키-값 맵핑 및 동일한 순서로 새로운 정렬 맵을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="bb2ddb390065f595439cee7ee8032949a41e280e" translate="yes" xml:space="preserve">
          <source>A constructor.</source>
          <target state="translated">생성자</target>
        </trans-unit>
        <trans-unit id="f1c2c74a3242b5c113a78d6363133d53c47f8c7a" translate="yes" xml:space="preserve">
          <source>A container class which implements automatic horizontal and/or vertical scrolling for a single child component.</source>
          <target state="translated">단일 자식 구성 요소에 대해 자동 수평 및 / 또는 수직 스크롤을 구현하는 컨테이너 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="bfeb7ff9e9012b81d288e07e149e676bb15c69a9" translate="yes" xml:space="preserve">
          <source>A container class which implements automatic horizontal and/or vertical scrolling for a single child component. The display policy for the scrollbars can be set to:</source>
          <target state="translated">단일 자식 구성 요소에 대해 자동 수평 및 / 또는 수직 스크롤을 구현하는 컨테이너 클래스입니다. 스크롤바의 표시 정책은 다음과 같이 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="033a41394c724546f3c08acfb5335c17f8e39383" translate="yes" xml:space="preserve">
          <source>A container for data of a specific primitive type.</source>
          <target state="translated">특정 기본 유형의 데이터를위한 컨테이너입니다.</target>
        </trans-unit>
        <trans-unit id="0fe5ece952a897ad3f011797cc5800337da1ccf1" translate="yes" xml:space="preserve">
          <source>A container is a component that can contain components and other containers. A container can also have a layout manager that controls the visual placement of components in the container. The AWT package contains several layout manager classes and an interface for building your own layout manager. See Container and LayoutManager for more information.</source>
          <target state="translated">컨테이너는 구성 요소 및 기타 컨테이너를 포함 할 수있는 구성 요소입니다. 컨테이너에는 컨테이너에서 구성 요소의 시각적 배치를 제어하는 ​​레이아웃 관리자가있을 수도 있습니다. AWT 패키지에는 여러 레이아웃 관리자 클래스와 자체 레이아웃 관리자를 구축하기위한 인터페이스가 포함되어 있습니다. 자세한 내용은 컨테이너 및 LayoutManager를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d301613cbda6d20a56bf5fe3261d32c8415661bf" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;double&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="2e040a2204bf84dfc907e22c7186ff1dd00d1f3d" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;double&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. If no value is present, the object is considered</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 개체입니다 . 값이 있으면 &lt;code&gt;isPresent()&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 값이 없으면 개체가 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="4ff6f48ffb79030c6e6d4e15b3600b41ee558686" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;double&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;getAsDouble()&lt;/code&gt; will return the value.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 객체입니다 . 값이 있으면 &lt;code&gt;isPresent()&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 &lt;code&gt;getAsDouble()&lt;/code&gt; 은 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="494737a0966b7218e4ec36fd115c3df7489bf2ab" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="0a04a3c3154a4d845ca222b91180f4f9964d877d" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;int&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;getAsInt()&lt;/code&gt; will return the value.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 객체입니다 . 값이 있으면 &lt;code&gt;isPresent()&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 &lt;code&gt;getAsInt()&lt;/code&gt; 는 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f4dcdc898b7b16e8f53dc7fbd5332c85cd925ef5" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;long&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 객체 .</target>
        </trans-unit>
        <trans-unit id="2e8bc20ff92caf071e1a187b92d99c84b7060ce0" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;long&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. If no value is present, the object is considered</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 개체입니다 . 값이 있으면 &lt;code&gt;isPresent()&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 값이 없으면 개체가 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="7ba6650f4dd8bcb2a89191e9f85ba776ac9fbf51" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;long&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;getAsLong()&lt;/code&gt; will return the value.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 개체입니다 . 값이 있으면 &lt;code&gt;isPresent()&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 &lt;code&gt;getAsLong()&lt;/code&gt; 은 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5c434ceb61c7062bc7fbbc566df4838fccea2d8a" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a non-&lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 이 아닌 값을 포함하거나 포함하지 않을 수있는 컨테이너 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="5ea105fdcda73f70cb854a64b62b86d90652415a" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a non-&lt;code&gt;null&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. If no value is present, the object is considered</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 이 아닌 값을 포함하거나 포함하지 않을 수있는 컨테이너 개체입니다 . 값이 있으면 &lt;code&gt;isPresent()&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 값이 없으면 개체가 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="ea0d5d0324a2c3445923b7e686fe31c2a89e78f7" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a non-null value.</source>
          <target state="translated">널이 아닌 값을 포함하거나 포함하지 않을 수있는 컨테이너 오브젝트.</target>
        </trans-unit>
        <trans-unit id="c89988fd4f74ec363ece708cf6ca9597a2151ab0" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a non-null value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;get()&lt;/code&gt; will return the value.</source>
          <target state="translated">널이 아닌 값을 포함하거나 포함하지 않을 수있는 컨테이너 오브젝트. 값이 있으면 &lt;code&gt;isPresent()&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 &lt;code&gt;get()&lt;/code&gt; 은 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8c3f2db677ea0ff39d4e792525d50b18477b99aa" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain an &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="48a83d02c6e3550c5cd54b82f9175944ccf50df2" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain an &lt;code&gt;int&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. If no value is present, the object is considered</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 개체입니다 . 값이 있으면 &lt;code&gt;isPresent()&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 값이 없으면 개체가 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="b91c8230c80b13f05800d49bab2e18616b06eedc" translate="yes" xml:space="preserve">
          <source>A container used to create a multiple-document interface or a virtual desktop.</source>
          <target state="translated">다중 문서 인터페이스 또는 가상 데스크톱을 만드는 데 사용되는 컨테이너입니다.</target>
        </trans-unit>
        <trans-unit id="460e235cc5d693c9143dca60521c64fd21d3afb3" translate="yes" xml:space="preserve">
          <source>A container used to create a multiple-document interface or a virtual desktop. You create &lt;code&gt;JInternalFrame&lt;/code&gt; objects and add them to the &lt;code&gt;JDesktopPane&lt;/code&gt;. &lt;code&gt;JDesktopPane&lt;/code&gt; extends &lt;code&gt;JLayeredPane&lt;/code&gt; to manage the potentially overlapping internal frames. It also maintains a reference to an instance of &lt;code&gt;DesktopManager&lt;/code&gt; that is set by the UI class for the current look and feel (L&amp;amp;F). Note that &lt;code&gt;JDesktopPane&lt;/code&gt; does not support borders.</source>
          <target state="translated">다중 문서 인터페이스 또는 가상 데스크톱을 만드는 데 사용되는 컨테이너입니다. &lt;code&gt;JInternalFrame&lt;/code&gt; 객체를 생성 하고 &lt;code&gt;JDesktopPane&lt;/code&gt; 에 추가 합니다 . &lt;code&gt;JDesktopPane&lt;/code&gt; 은 잠재적으로 겹치는 내부 프레임을 관리하기 위해 &lt;code&gt;JLayeredPane&lt;/code&gt; 을 확장 합니다 . 또한 현재 룩앤필 (L &amp;amp; F)에 대해 UI 클래스에서 설정 한 &lt;code&gt;DesktopManager&lt;/code&gt; 인스턴스에 대한 참조도 유지합니다 . 참고 &lt;code&gt;JDesktopPane&lt;/code&gt; 에이 국경을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="759245797f4e5d9025f0f817bf669b092afd8bdd" translate="yes" xml:space="preserve">
          <source>A content type consists of a media type (referred to as the primary type), a subtype, and optional parameters. See &lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt; for details on the syntax of a MIME type.</source>
          <target state="translated">콘텐츠 유형은 미디어 유형 (기본 유형이라고 함), 하위 유형 및 선택적 매개 변수로 구성됩니다. MIME 유형의 구문에 대한 자세한 내용 은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="31d867731596f79566c79cb5d48b9bcbf97a9cc3" translate="yes" xml:space="preserve">
          <source>A context consists of name-to-object bindings. The Binding class represents such a binding. It consists of a name and an object. The &lt;code&gt;Context.listBindings()&lt;/code&gt; method returns an enumeration of Binding.</source>
          <target state="translated">컨텍스트는 이름 대 오브젝트 바인딩으로 구성됩니다. Binding 클래스는 이러한 바인딩을 나타냅니다. 이름과 객체로 구성됩니다. &lt;code&gt;Context.listBindings()&lt;/code&gt; 메소드는 바인딩의 열거를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="6fe4f651e32a551af03604ca60b8a21ff254ecfc" translate="yes" xml:space="preserve">
          <source>A context consists of name-to-object bindings. The NameClassPair class represents the name and the class of the bound object. It consists of a name and a string representing the package-qualified class name.</source>
          <target state="translated">컨텍스트는 이름 대 오브젝트 바인딩으로 구성됩니다. NameClassPair 클래스는 바인딩 된 개체의 이름과 클래스를 나타냅니다. 패키지 규정 된 클래스 이름을 나타내는 이름과 문자열로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="6b1263a6521cddb7203c713b91d8a90e7ac7f9e3" translate="yes" xml:space="preserve">
          <source>A context for resolving URLs with the scheme id &lt;code&gt;scheme&lt;/code&gt;; &lt;code&gt;null&lt;/code&gt; if the factory for creating the context is not found.</source>
          <target state="translated">계획 아이디와 URL을 해결하는 문맥 &lt;code&gt;scheme&lt;/code&gt; ; 컨텍스트를 작성하는 팩토리를 찾을 수 &lt;code&gt;null&lt;/code&gt; 경우는 null</target>
        </trans-unit>
        <trans-unit id="b7377c77308502e8c96858c12fe1aaf5cda4abe1" translate="yes" xml:space="preserve">
          <source>A context instance's connection request controls are retrieved using the method &lt;code&gt;getConnectControls()&lt;/code&gt;.</source>
          <target state="translated">컨텍스트 인스턴스의 연결 요청 제어는 &lt;code&gt;getConnectControls()&lt;/code&gt; 메소드를 사용하여 검색됩니다 .</target>
        </trans-unit>
        <trans-unit id="7dcb16da6df7e43ac4ec30b2d1186f29508041d6" translate="yes" xml:space="preserve">
          <source>A context instance's request controls are retrieved using the method &lt;code&gt;getRequestControls()&lt;/code&gt;.</source>
          <target state="translated">컨텍스트 인스턴스의 요청 제어는 &lt;code&gt;getRequestControls()&lt;/code&gt; 메소드를 사용하여 검색됩니다 .</target>
        </trans-unit>
        <trans-unit id="b3986a2d2458e187acf1c4e8bd0f8e686f85ea03" translate="yes" xml:space="preserve">
          <source>A control character: &lt;code&gt;[\x00-\x1F\x7F]&lt;/code&gt;</source>
          <target state="translated">제어 문자 : &lt;code&gt;[\x00-\x1F\x7F]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f98f93af0f8e1282f6442fa10efae582e9be0974" translate="yes" xml:space="preserve">
          <source>A control character: &lt;code&gt;\p{gc=Cc}&lt;/code&gt;</source>
          <target state="translated">제어 문자 : &lt;code&gt;\p{gc=Cc}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03f0ef9add23fa9fe6cf9ea49f54ef4dd6fddc66" translate="yes" xml:space="preserve">
          <source>A control object created using &lt;code&gt;ctl&lt;/code&gt;; or &lt;code&gt;ctl&lt;/code&gt; if a control object cannot be created using the algorithm described above.</source>
          <target state="translated">&lt;code&gt;ctl&lt;/code&gt; 을 사용하여 생성 된 컨트롤 개체 ; 또는 위에서 설명한 알고리즘을 사용하여 컨트롤 개체를 만들 수없는 경우 &lt;code&gt;ctl&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="15fd2bad66ad41394b33f2026df97fb9742abb62" translate="yes" xml:space="preserve">
          <source>A control object from the current input method, or null.</source>
          <target state="translated">현재 입력 방법의 컨트롤 개체 또는 null입니다.</target>
        </trans-unit>
        <trans-unit id="a96bcedbc8cade8ee1583d1bef494bb5a4cd2784" translate="yes" xml:space="preserve">
          <source>A control that displays a set of hierarchical data as an outline.</source>
          <target state="translated">계층 적 데이터 집합을 개요로 표시하는 컨트롤입니다.</target>
        </trans-unit>
        <trans-unit id="c4e331080c956ba6b483e5d9420bef3aff651730" translate="yes" xml:space="preserve">
          <source>A control that displays a set of hierarchical data as an outline. You can find task-oriented documentation and examples of using trees in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">계층 적 데이터 집합을 개요로 표시하는 컨트롤입니다. &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; 에서 작업 지향 문서와 트리 사용 예제를 찾을 수 있습니다 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6c76468063f6a347a02b2e829bca94d83e038db4" translate="yes" xml:space="preserve">
          <source>A controller that controls the newly created layer</source>
          <target state="translated">새로 생성 된 레이어를 제어하는 ​​컨트롤러</target>
        </trans-unit>
        <trans-unit id="e8b5bb1e0993770f9414abaef919d2a5802810a9" translate="yes" xml:space="preserve">
          <source>A convenience class for simplifying interaction with TIFF native image metadata.</source>
          <target state="translated">TIFF 기본 이미지 메타 데이터와의 상호 작용을 단순화하기위한 편의 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="1a75c57f730d220aff1a3d906e24e8f446b9eb34" translate="yes" xml:space="preserve">
          <source>A convenience class for simplifying interaction with TIFF native image metadata. A TIFF image metadata tree represents an Image File Directory (IFD) from a TIFF 6.0 stream. An IFD consists of a number of IFD Entries each of which associates an identifying tag number with a compatible value. A &lt;code&gt;TIFFDirectory&lt;/code&gt; instance corresponds to an IFD and contains a set of &lt;a href=&quot;tifffield&quot;&gt;&lt;code&gt;TIFFField&lt;/code&gt;&lt;/a&gt;s each of which corresponds to an IFD Entry in the IFD.</source>
          <target state="translated">TIFF 기본 이미지 메타 데이터와의 상호 작용을 단순화하기위한 편의 클래스입니다. TIFF 이미지 메타 데이터 트리는 TIFF 6.0 스트림의 IDF (Image File Directory)를 나타냅니다. IFD는 각각 식별 태그 번호를 호환 가능한 값과 연관시키는 여러 IFD 항목으로 구성됩니다. &lt;code&gt;TIFFDirectory&lt;/code&gt; 의 인스턴스기로 IFD에 대응하고, 세트 포함 &lt;a href=&quot;tifffield&quot;&gt; &lt;code&gt;TIFFField&lt;/code&gt; 는&lt;/a&gt; IFD에서 IFD 항목에 대응하는 각각의 S는.</target>
        </trans-unit>
        <trans-unit id="f8a647654bd9827401aa4fa86ac7705f850e64b2" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;v.visit(av, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;v.visit(av, null)&lt;/code&gt; 동일한 편의 메소드 입니다.</target>
        </trans-unit>
        <trans-unit id="16a529aa63d7b6f13c0e894161babc3d250fb7d3" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;v.visit(e, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;v.visit(e, null)&lt;/code&gt; 동일한 편의 메소드 입니다.</target>
        </trans-unit>
        <trans-unit id="ebffac1d76e29602ecbccd02cb486db670466a22" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;v.visit(t, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;v.visit(t, null)&lt;/code&gt; 동일한 편의 메소드 입니다.</target>
        </trans-unit>
        <trans-unit id="c7e2bb4b27f4ec5751c6bdc3e1a96d4fc5026a5b" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;visit(av, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;visit(av, null)&lt;/code&gt; 해당하는 편리한 메서드 입니다.</target>
        </trans-unit>
        <trans-unit id="e027c55d6f63aefa9109af389bfa002788c9fa27" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;visit(e, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;visit(e, null)&lt;/code&gt; 해당하는 편리한 메서드 입니다.</target>
        </trans-unit>
        <trans-unit id="f950fa78fa10c16997c1f6fbd3be463e7b7ace85" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;visit(t, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;visit(t, null)&lt;/code&gt; 해당하는 편리한 메서드 입니다.</target>
        </trans-unit>
        <trans-unit id="99b2a2e379217d8a0d4b8ef3dd5abf7e7a7ebf16" translate="yes" xml:space="preserve">
          <source>A convenience method for looking up a property value.</source>
          <target state="translated">속성 값을 조회하는 편리한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="cbc44c2a4d64a62243581006ccd8548476d7bd75" translate="yes" xml:space="preserve">
          <source>A convenience method for looking up a property value. It is equivalent to:</source>
          <target state="translated">속성 값을 조회하는 편리한 방법입니다. 다음과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="dd485d4e5579dedc9b9b1bfb030340f3998e0248" translate="yes" xml:space="preserve">
          <source>A convenience method for storing up a property value.</source>
          <target state="translated">속성 값을 저장하는 편리한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="1e18895b1e56a88f711cf08b63e41a03fe2225fc" translate="yes" xml:space="preserve">
          <source>A convenience method for storing up a property value. It is equivalent to:</source>
          <target state="translated">속성 값을 저장하는 편리한 방법입니다. 다음과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="54ae1ece57ee9ffdae9f1667cbe9a12df084c4eb" translate="yes" xml:space="preserve">
          <source>A convenience method that acts as if &lt;code&gt;LSSerializer.write&lt;/code&gt; was called with a &lt;code&gt;LSOutput&lt;/code&gt; with no encoding specified and &lt;code&gt;LSOutput.systemId&lt;/code&gt; set to the &lt;code&gt;uri&lt;/code&gt; argument.</source>
          <target state="translated">인코딩이 지정되지 않고 &lt;code&gt;LSOutput.systemId&lt;/code&gt; 가 &lt;code&gt;uri&lt;/code&gt; 인수로 설정된 &lt;code&gt;LSOutput&lt;/code&gt; 을 사용하여 &lt;code&gt;LSSerializer.write&lt;/code&gt; 가 호출 된 것처럼 작동하는 편리한 메서드입니다 .</target>
        </trans-unit>
        <trans-unit id="7c27733947ef3a444f59481b63f3bb1fc034a487" translate="yes" xml:space="preserve">
          <source>A convenience method that calls &lt;code&gt;read(b, 0, b.length)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;read(b, 0, b.length)&lt;/code&gt; 를 호출하는 편리한 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="807e70668dbaedff20cf9b8a517a79a6404816d3" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in mode &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt;, with no header or footer text.</source>
          <target state="translated">인쇄 대화 상자를 표시 한 다음 머리글 또는 바닥 글 텍스트없이 &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt; 모드 에서이 &lt;code&gt;JTable&lt;/code&gt; 을 인쇄하는 편리한 메서드입니다 .</target>
        </trans-unit>
        <trans-unit id="ceedfd41667c1bda072569a382c479a19e63d68e" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in mode &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt;, with no header or footer text. A modal progress dialog, with an abort option, will be shown for the duration of printing.</source>
          <target state="translated">인쇄 대화 상자를 표시 한 다음 머리글 또는 바닥 글 텍스트없이 &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt; 모드 에서이 &lt;code&gt;JTable&lt;/code&gt; 을 인쇄하는 편리한 메서드입니다 . 중단 옵션이있는 모달 진행 대화 상자가 인쇄 기간 동안 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="6223c755bd1a3f99a9d9956cc7466b6caf4b3fcb" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in the given printing mode, with no header or footer text.</source>
          <target state="translated">인쇄 대화 상자를 표시 한 다음 머리글 또는 바닥 글 텍스트없이 지정된 인쇄 모드 에서이 &lt;code&gt;JTable&lt;/code&gt; 을 인쇄하는 편리한 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="877633eadeea377c10e3fbe8b2d649f1bd5706e3" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in the given printing mode, with no header or footer text. A modal progress dialog, with an abort option, will be shown for the duration of printing.</source>
          <target state="translated">인쇄 대화 상자를 표시 한 다음 머리글 또는 바닥 글 텍스트없이 지정된 인쇄 모드 에서이 &lt;code&gt;JTable&lt;/code&gt; 을 인쇄하는 편리한 방법입니다 . 중단 옵션이있는 모달 진행 대화 상자가 인쇄 기간 동안 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="ecfe982eaffed33abd7f4d8a496ed6b0dcae69c5" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in the given printing mode, with the specified header and footer text.</source>
          <target state="translated">인쇄 대화 상자를 표시 한 다음 지정된 머리글 및 바닥 글 텍스트와 함께 지정된 인쇄 모드 에서이 &lt;code&gt;JTable&lt;/code&gt; 을 인쇄하는 편리한 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="797ddd61d31da4855ab5fb584acf4b15d2543b26" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in the given printing mode, with the specified header and footer text. A modal progress dialog, with an abort option, will be shown for the duration of printing.</source>
          <target state="translated">인쇄 대화 상자를 표시 한 다음 지정된 머리글 및 바닥 글 텍스트와 함께 지정된 인쇄 모드 에서이 &lt;code&gt;JTable&lt;/code&gt; 을 인쇄하는 편리한 방법입니다 . 중단 옵션이있는 모달 진행 대화 상자가 인쇄 기간 동안 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="283a99263b3a7a4ec3eb5efe9c38b580f6c5ced4" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a byte.</source>
          <target state="translated">매개 변수를 바이트로 리턴하는 편리한 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="28c9fbd2ef30bbeae2eb3befcc763aba1fa2e0eb" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a byte. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Byte&lt;/code&gt;.</source>
          <target state="translated">매개 변수를 바이트로 리턴하는 편리한 메소드입니다. 매개 변수가 &lt;code&gt;null&lt;/code&gt; 이거나 &lt;code&gt;Byte&lt;/code&gt; 가 아닌 경우 예외가 발생합니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
