<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="08635b4d2c31b178cab0dff6331454a2ce0e3829" translate="yes" xml:space="preserve">
          <source>For class JobSheets and any vendor-defined subclasses, the category is class JobSheets itself.</source>
          <target state="translated">JobSheets 클래스 및 벤더 정의 서브 클래스의 경우 카테고리는 JobSheets 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="71446d47b48784e7ff553bd8da1658389b5d2f23" translate="yes" xml:space="preserve">
          <source>For class JobSheets and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-sheets&quot;&lt;/code&gt;.</source>
          <target state="translated">JobSheets 클래스 및 벤더 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-sheets&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a8170f7f0ffca7b963fce46f1c79886b100ded91" translate="yes" xml:space="preserve">
          <source>For class JobState and any vendor-defined subclasses, the category is class JobState itself.</source>
          <target state="translated">JobState 클래스 및 벤더 정의 서브 클래스의 경우 카테고리는 JobState 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="de1cfc9b5e2eca0387a6cbf6b9671b5e0909f312" translate="yes" xml:space="preserve">
          <source>For class JobState and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-state&quot;&lt;/code&gt;.</source>
          <target state="translated">JobState 클래스 및 벤더 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-state&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="653376caf1a3418e9063f33ff2fe20a57da04c8f" translate="yes" xml:space="preserve">
          <source>For class JobStateReason and any vendor-defined subclasses, the category is class JobStateReason itself.</source>
          <target state="translated">JobStateReason 클래스 및 벤더 정의 서브 클래스의 경우 카테고리는 JobStateReason 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="b3ddae2ef6f7432cf73b5be9105ad4ecf53afcd2" translate="yes" xml:space="preserve">
          <source>For class JobStateReason and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-state-reason&quot;&lt;/code&gt;.</source>
          <target state="translated">JobStateReason 클래스 및 벤더 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-state-reason&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="dfbdbe2790acae32d23312b21eddd8d7e025518d" translate="yes" xml:space="preserve">
          <source>For class JobStateReasons, the category is class JobStateReasons itself.</source>
          <target state="translated">JobStateReasons 클래스의 경우 카테고리는 JobStateReasons 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="23baf7c64ea9b95a67a83036824005151d4ee4ad" translate="yes" xml:space="preserve">
          <source>For class JobStateReasons, the category name is &lt;code&gt;&quot;job-state-reasons&quot;&lt;/code&gt;.</source>
          <target state="translated">JobStateReasons 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-state-reasons&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="76e305ec9df07083f4a03bce58c310f04a069567" translate="yes" xml:space="preserve">
          <source>For class Media and any vendor-defined subclasses, the category is class Media itself.</source>
          <target state="translated">미디어 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리는 미디어 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="63aac2809d48a40719da92a486aca03ea048211a" translate="yes" xml:space="preserve">
          <source>For class Media and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;media&quot;&lt;/code&gt;.</source>
          <target state="translated">Media 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;media&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1eebe8d13bec04bb83fd3cdedb183d88549f7716" translate="yes" xml:space="preserve">
          <source>For class MediaPrintableArea, the category is class MediaPrintableArea itself.</source>
          <target state="translated">MediaPrintableArea 클래스의 경우, 카테고리는 MediaPrintableArea 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="6f3383a496f3ced46a73b82b0d97aa06701b296e" translate="yes" xml:space="preserve">
          <source>For class MediaPrintableArea, the category name is &lt;code&gt;&quot;media-printable-area&quot;&lt;/code&gt;.</source>
          <target state="translated">MediaPrintableArea 클래스의 경우, 카테고리 이름은 &lt;code&gt;&quot;media-printable-area&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b16bb9bb31c348614af9361198929e0e4c9e3d75" translate="yes" xml:space="preserve">
          <source>For class MediaSize and any vendor-defined subclasses, the category is class MediaSize itself.</source>
          <target state="translated">MediaSize 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리는 MediaSize 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="dcaa0b98dfb736343dba9f90ceee28a35402fb0b" translate="yes" xml:space="preserve">
          <source>For class MediaSize and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;media-size&quot;&lt;/code&gt;.</source>
          <target state="translated">MediaSize 클래스 및 벤더 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;media-size&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c94b84051032fff8f407be040afd8b908718b0e5" translate="yes" xml:space="preserve">
          <source>For class MultipleDocumentHandling and any vendor-defined subclasses, the category is class MultipleDocumentHandling itself.</source>
          <target state="translated">MultipleDocumentHandling 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리는 MultipleDocumentHandling 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="5a15c896684c3bdae21a952fc314bc83e432b65a" translate="yes" xml:space="preserve">
          <source>For class MultipleDocumentHandling and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;multiple-document-handling&quot;&lt;/code&gt;.</source>
          <target state="translated">MultipleDocumentHandling 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;multiple-document-handling&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9d80aca402535b79315974f7262cb5caf36ece03" translate="yes" xml:space="preserve">
          <source>For class NumberOfDocuments, the category is class NumberOfDocuments itself.</source>
          <target state="translated">NumberOfDocuments 클래스의 경우 카테고리는 NumberOfDocuments 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="7a4f4357a00f01b7773082cf51d10e445b0c684e" translate="yes" xml:space="preserve">
          <source>For class NumberOfDocuments, the category name is &lt;code&gt;&quot;number-of-documents&quot;&lt;/code&gt;.</source>
          <target state="translated">NumberOfDocuments 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;number-of-documents&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a15143dc5c9eaa5cfb57170f82d6c2c78842dc82" translate="yes" xml:space="preserve">
          <source>For class NumberOfInterveningJobs, the category is class NumberOfInterveningJobs itself.</source>
          <target state="translated">NumberOfInterveningJobs 클래스의 경우 카테고리는 NumberOfInterveningJobs 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="4f64d68c238a1069789d44fdc2461b1b3abfd3f3" translate="yes" xml:space="preserve">
          <source>For class NumberOfInterveningJobs, the category name is &lt;code&gt;&quot;number-of-intervening-jobs&quot;&lt;/code&gt;.</source>
          <target state="translated">NumberOfInterveningJobs 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;number-of-intervening-jobs&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bbebe8d07517db48f6ceb60ef3eda69a123a4ca6" translate="yes" xml:space="preserve">
          <source>For class NumberUp, the category is class NumberUp itself.</source>
          <target state="translated">NumberUp 클래스의 경우 카테고리는 NumberUp 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="679d46d1327714f3b8a4ffe2ac56338f3140bd2d" translate="yes" xml:space="preserve">
          <source>For class NumberUp, the category name is &lt;code&gt;&quot;number-up&quot;&lt;/code&gt;.</source>
          <target state="translated">NumberUp 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;number-up&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="43898aa6f875f8e6510fb0adc64cbe5396f5d910" translate="yes" xml:space="preserve">
          <source>For class NumberUpSupported, the category is class NumberUpSupported itself.</source>
          <target state="translated">NumberUpSupported 클래스의 경우 카테고리는 NumberUpSupported 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="84efd2894a327c192bb5f0bdcaa0b6f9b76bb8f9" translate="yes" xml:space="preserve">
          <source>For class NumberUpSupported, the category name is &lt;code&gt;&quot;number-up-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">NumberUpSupported 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;number-up-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="565e4c6e7614396692edb4af2f709c35214286d4" translate="yes" xml:space="preserve">
          <source>For class OrientationRequested, the category is class OrientationRequested itself.</source>
          <target state="translated">OrientationRequested 클래스의 경우 범주는 OrientationRequested 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="52fcaeb0ba5aa93429c5861479086b2d3a01eafd" translate="yes" xml:space="preserve">
          <source>For class OrientationRequested, the category name is &lt;code&gt;&quot;orientation-requested&quot;&lt;/code&gt;.</source>
          <target state="translated">OrientationRequested 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;orientation-requested&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="abde76b383658ea382bc59eff2fb0367dfc991de" translate="yes" xml:space="preserve">
          <source>For class OutputDeviceAssigned, the category is class OutputDeviceAssigned itself.</source>
          <target state="translated">OutputDeviceAssigned 클래스의 경우 카테고리는 OutputDeviceAssigned 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="8c848d24bcfaa87be7b3eaaafab61333297d4de5" translate="yes" xml:space="preserve">
          <source>For class OutputDeviceAssigned, the category name is &lt;code&gt;&quot;output-device-assigned&quot;&lt;/code&gt;.</source>
          <target state="translated">OutputDeviceAssigned 클래스의 경우, 카테고리 이름은 &lt;code&gt;&quot;output-device-assigned&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b50e8daad8ee24c6bb2f8f8f02fb8d2ae166cd84" translate="yes" xml:space="preserve">
          <source>For class PDLOverrideSupported and any vendor-defined subclasses, the category is class PDLOverrideSupported itself.</source>
          <target state="translated">PDLOverrideSupported 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리는 PDLOverrideSupported 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="1862855f9347a76978b17a738e7c5bbb33f59cc0" translate="yes" xml:space="preserve">
          <source>For class PDLOverrideSupported and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;pdl-override-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">PDLOverrideSupported 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;pdl-override-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ce220ceb7741aa95d88a2fe3bc6c7db7d98e7d95" translate="yes" xml:space="preserve">
          <source>For class PageRanges, the category is class PageRanges itself.</source>
          <target state="translated">PageRanges 클래스의 경우 카테고리는 PageRanges 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="36e6d05319c67769fc3db5bb0ecdbb4b60392f46" translate="yes" xml:space="preserve">
          <source>For class PageRanges, the category name is &lt;code&gt;&quot;page-ranges&quot;&lt;/code&gt;.</source>
          <target state="translated">PageRanges 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;page-ranges&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c7f01eada40934f6714620dd2a2b554f377c9308" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinute, the category is class PagesPerMinute itself.</source>
          <target state="translated">PagesPerMinute 클래스의 경우 카테고리는 PagesPerMinute 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="e14ff0028ffef5fede72d51eb82a6235e41c4323" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinute, the category name is &lt;code&gt;&quot;pages-per-minute&quot;&lt;/code&gt;.</source>
          <target state="translated">PagesPerMinute 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;pages-per-minute&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d522346d833c539376b5f07c17f5f72b79dd7f0f" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinuteColor, the category is class PagesPerMinuteColor itself.</source>
          <target state="translated">PagesPerMinuteColor 클래스의 경우 카테고리는 PagesPerMinuteColor 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="7c660c99e02d7c212af35cc7873730d7af2cf120" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinuteColor, the category name is &lt;code&gt;&quot;pages-per-minute-color&quot;&lt;/code&gt;.</source>
          <target state="translated">PagesPerMinuteColor 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;pages-per-minute-color&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8aaee8c396105cb02829f6cbc1aea2b4ca171041" translate="yes" xml:space="preserve">
          <source>For class PresentationDirection the category is class PresentationDirection itself.</source>
          <target state="translated">PresentationDirection 클래스의 경우 범주는 PresentationDirection 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="09e0c06b664549dedff4cfd3e2b0109f7061132a" translate="yes" xml:space="preserve">
          <source>For class PresentationDirection the category name is &lt;code&gt;&quot;presentation-direction&quot;&lt;/code&gt;.</source>
          <target state="translated">PresentationDirection 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;presentation-direction&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="73ab431070b7902f07a4e2eb111942a3d3c89260" translate="yes" xml:space="preserve">
          <source>For class PrintQuality and any vendor-defined subclasses, the category is class PrintQuality itself.</source>
          <target state="translated">PrintQuality 클래스 및 벤더 정의 서브 클래스의 경우, 카테고리는 PrintQuality 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="ad6627e73fffda4d8a63d01e1314eb76d67d38ee" translate="yes" xml:space="preserve">
          <source>For class PrintQuality and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;print-quality&quot;&lt;/code&gt;.</source>
          <target state="translated">PrintQuality 클래스 및 벤더 정의 서브 클래스의 경우, 카테고리 명은 &lt;code&gt;&quot;print-quality&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fb6f0cc027e88992fdedf39e07582b1430266e3c" translate="yes" xml:space="preserve">
          <source>For class PrinterInfo, the category is class PrinterInfo itself.</source>
          <target state="translated">PrinterInfo 클래스의 경우, 카테고리는 PrinterInfo 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="25b6527a1b2b670e8d591c05cce9bc5e9d9447a2" translate="yes" xml:space="preserve">
          <source>For class PrinterInfo, the category name is &lt;code&gt;&quot;printer-info&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterInfo 클래스의 경우, 카테고리 명은 &lt;code&gt;&quot;printer-info&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="06c9256086f531efae796e8d8690666052354d1b" translate="yes" xml:space="preserve">
          <source>For class PrinterIsAcceptingJobs, the category is class PrinterIsAcceptingJobs itself.</source>
          <target state="translated">PrinterIsAcceptingJobs 클래스의 경우, 카테고리는 PrinterIsAcceptingJobs 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="3b444196d4a92442d1815635095756fb443b3c8b" translate="yes" xml:space="preserve">
          <source>For class PrinterIsAcceptingJobs, the category name is &lt;code&gt;&quot;printer-is-accepting-jobs&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterIsAcceptingJobs 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-is-accepting-jobs&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="f689abe18da853c0516008897c2e59452d205a11" translate="yes" xml:space="preserve">
          <source>For class PrinterLocation, the category is class PrinterLocation itself.</source>
          <target state="translated">PrinterLocation 클래스의 경우 카테고리는 PrinterLocation 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="cd2fea8becd5eb8189e9b5472dff8986755fda80" translate="yes" xml:space="preserve">
          <source>For class PrinterLocation, the category name is &lt;code&gt;&quot;printer-location&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterLocation 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-location&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="4c1dd9a747520f8dbedcf4f13a83a0e4af94e2ba" translate="yes" xml:space="preserve">
          <source>For class PrinterMakeAndModel, the category is class PrinterMakeAndModel itself.</source>
          <target state="translated">PrinterMakeAndModel 클래스의 경우, 카테고리는 PrinterMakeAndModel 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="ba4fae7b3cb6c2828fcdbaf1716fd8c108dc1d52" translate="yes" xml:space="preserve">
          <source>For class PrinterMakeAndModel, the category name is &lt;code&gt;&quot;printer-make-and-model&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterMakeAndModel 클래스의 경우, 카테고리 명은 &lt;code&gt;&quot;printer-make-and-model&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="25e865fa5a526858929f1ec74db4ddabb2559cfd" translate="yes" xml:space="preserve">
          <source>For class PrinterMessageFromOperator, the category is class PrinterMessageFromOperator itself.</source>
          <target state="translated">PrinterMessageFromOperator 클래스의 경우 카테고리는 PrinterMessageFromOperator 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="63bdaad11dc64623e0b9ad73640ced1a04cd8190" translate="yes" xml:space="preserve">
          <source>For class PrinterMessageFromOperator, the category name is &lt;code&gt;&quot;printer-message-from-operator&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterMessageFromOperator 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-message-from-operator&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fc38988d14d54c070df510381432956fb04be2b5" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfo, the category is class PrinterMoreInfo itself.</source>
          <target state="translated">PrinterMoreInfo 클래스의 경우, 카테고리는 PrinterMoreInfo 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="07993e08f2f2ff8aca46598c2c607bf8b4f7551b" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfo, the category name is &lt;code&gt;&quot;printer-more-info&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterMoreInfo 클래스의 경우, 카테고리 명은 &lt;code&gt;&quot;printer-more-info&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="241cfde9db629abbf16d37ecf1ba0b5701fa39bb" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfoManufacturer, the category is class PrinterMoreInfoManufacturer itself.</source>
          <target state="translated">PrinterMoreInfoManufacturer 클래스의 경우, 카테고리는 PrinterMoreInfoManufacturer 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="48561e0264312aaad1e530ded45d0c142643d71d" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfoManufacturer, the category name is &lt;code&gt;&quot;printer-more-info-manufacturer&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterMoreInfoManufacturer 클래스의 경우, 카테고리 이름은 &lt;code&gt;&quot;printer-more-info-manufacturer&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="3d09189884a718425f1dd44675f4544e703b2dc4" translate="yes" xml:space="preserve">
          <source>For class PrinterName, the category is class PrinterName itself.</source>
          <target state="translated">PrinterName 클래스의 경우, 카테고리는 PrinterName 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="f981b8db2489e51ff8a0c52f0213cad136f70214" translate="yes" xml:space="preserve">
          <source>For class PrinterName, the category name is &lt;code&gt;&quot;printer-name&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterName 클래스의 경우, 카테고리 이름은 &lt;code&gt;&quot;printer-name&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b653a81213f2676d2a468fbe40f45aeb6bb23eb0" translate="yes" xml:space="preserve">
          <source>For class PrinterResolution, the category is class PrinterResolution itself.</source>
          <target state="translated">PrinterResolution 클래스의 경우 카테고리는 PrinterResolution 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="089c03e6282acc3da250b5bbf8c9b3c0723bc5de" translate="yes" xml:space="preserve">
          <source>For class PrinterResolution, the category name is &lt;code&gt;&quot;printer-resolution&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterResolution 클래스의 경우, 카테고리 이름은 &lt;code&gt;&quot;printer-resolution&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9ddf3275c606f2df378612cccd2405b28e94d547" translate="yes" xml:space="preserve">
          <source>For class PrinterState, the category is class PrinterState itself.</source>
          <target state="translated">PrinterState 클래스의 경우, 카테고리는 PrinterState 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="cbc846db841ae5c9762311f9887a7ed626d21ac2" translate="yes" xml:space="preserve">
          <source>For class PrinterState, the category name is &lt;code&gt;&quot;printer-state&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterState 클래스의 경우, 카테고리 이름은 &lt;code&gt;&quot;printer-state&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f8e4577f59fa87e6b5beb516c568387c170e4b8c" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReason and any vendor-defined subclasses, the category is class PrinterStateReason itself.</source>
          <target state="translated">PrinterStateReason 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리는 PrinterStateReason 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="faeb3e536e0a737a954b661a24e00e48ef3bcef4" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReason and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;printer-state-reason&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterStateReason 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-state-reason&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="4e808c039b758b2f59db1f7d952b1bf58c1aa4a7" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReasons, the category is class PrinterStateReasons itself.</source>
          <target state="translated">PrinterStateReasons 클래스의 경우, 카테고리는 PrinterStateReasons 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="e14e080c82b2595f0ad5da46fffd3e824d0f9490" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReasons, the category name is &lt;code&gt;&quot;printer-state-reasons&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterStateReasons 클래스의 경우, 카테고리 이름은 &lt;code&gt;&quot;printer-state-reasons&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7a33b14dd071582edba93515dae6937007a50673" translate="yes" xml:space="preserve">
          <source>For class PrinterURI and any vendor-defined subclasses, the category is class PrinterURI itself.</source>
          <target state="translated">PrinterURI 클래스 및 벤더 정의 서브 클래스의 경우 카테고리는 PrinterURI 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="b5c54c79aa3a2ed3bc26221d866d3bf0414ab4d0" translate="yes" xml:space="preserve">
          <source>For class PrinterURI and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;printer-uri&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterURI 클래스 및 벤더 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-uri&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="427bb8ae79ce5ce6305815064eb955898deba35e" translate="yes" xml:space="preserve">
          <source>For class QueuedJobCount, the category is class QueuedJobCount itself.</source>
          <target state="translated">QueuedJobCount 클래스의 경우 카테고리는 QueuedJobCount 자체 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="8c2032679b33ee7eeab7ea70028fe4a54b11a34b" translate="yes" xml:space="preserve">
          <source>For class QueuedJobCount, the category name is &lt;code&gt;&quot;queued-job-count&quot;&lt;/code&gt;.</source>
          <target state="translated">QueuedJobCount 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;queued-job-count&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ed9b64b1898dc19b34e09680ab59f290a11180b1" translate="yes" xml:space="preserve">
          <source>For class ReferenceUriSchemesSupported and any vendor-defined subclasses, the category is class ReferenceUriSchemesSupported itself.</source>
          <target state="translated">ReferenceUriSchemesSupported 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리는 ReferenceUriSchemesSupported 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="936b31b70be0215f64773fb73ec5e86c0ca36d06" translate="yes" xml:space="preserve">
          <source>For class ReferenceUriSchemesSupported and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;reference-uri-schemes-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">ReferenceUriSchemesSupported 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;reference-uri-schemes-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5468094b261f63f7a851ffdea2ab7b4ba7224051" translate="yes" xml:space="preserve">
          <source>For class RequestingUserName, the category is class RequestingUserName itself.</source>
          <target state="translated">RequestingUserName 클래스의 경우 카테고리는 RequestingUserName 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="794b8d2f9a18f1de951bd2a77cf8d9823f430c19" translate="yes" xml:space="preserve">
          <source>For class RequestingUserName, the category name is &lt;code&gt;&quot;requesting-user-name&quot;&lt;/code&gt;.</source>
          <target state="translated">RequestingUserName 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;requesting-user-name&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b817b624e8fc642c4c82793be6aece9829795dc5" translate="yes" xml:space="preserve">
          <source>For class Severit, the category name is &lt;code&gt;&quot;severity&quot;&lt;/code&gt;.</source>
          <target state="translated">Severit 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;severity&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="95cf92446e07a3726f7d683aed39c191dd9dd0f7" translate="yes" xml:space="preserve">
          <source>For class Severity, the category is class Severity itself.</source>
          <target state="translated">클래스 심각도의 경우 카테고리는 클래스 심각도 자체입니다.</target>
        </trans-unit>
        <trans-unit id="1df6ec0b95bed137549c213c42c887235000d710" translate="yes" xml:space="preserve">
          <source>For class SheetCollate, the category is class SheetCollate itself.</source>
          <target state="translated">SheetCollate 클래스의 경우 카테고리는 SheetCollate 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="eec42e414ddbb008a0160e654bcfebb31c674017" translate="yes" xml:space="preserve">
          <source>For class SheetCollate, the category name is &lt;code&gt;&quot;sheet-collate&quot;&lt;/code&gt;.</source>
          <target state="translated">SheetCollate 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;sheet-collate&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a54a6c66b3185766ef8980b2b771f7a5145737b9" translate="yes" xml:space="preserve">
          <source>For class Sides, the category is class Sides itself.</source>
          <target state="translated">클래스 측면의 경우 카테고리는 클래스 측면 자체입니다.</target>
        </trans-unit>
        <trans-unit id="00e176bee23fa052a123452f97bdfd610c3f76aa" translate="yes" xml:space="preserve">
          <source>For class Sides, the category name is &lt;code&gt;&quot;sides&quot;&lt;/code&gt;.</source>
          <target state="translated">Sides 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;sides&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e291d7686d6bf5a610fa7b42648acca9aac4fbe1" translate="yes" xml:space="preserve">
          <source>For client formatted print data, the print data representation class is typically one of the following (although other representation classes are permitted):</source>
          <target state="translated">클라이언트 형식의 인쇄 데이터의 경우 인쇄 데이터 표현 클래스는 일반적으로 다음 중 하나입니다 (다른 표현 클래스도 허용됨).</target>
        </trans-unit>
        <trans-unit id="e6d74a7546298ead87242134049dd273d250b2d3" translate="yes" xml:space="preserve">
          <source>For client sockets, setReceiveBufferSize() must be called before connecting the socket to its remote peer.</source>
          <target state="translated">클라이언트 소켓의 경우 소켓을 원격 피어에 연결하기 전에 setReceiveBufferSize ()를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="b4d07d8b04ebb5bf8cd0d980eb8abf2e92d0b689" translate="yes" xml:space="preserve">
          <source>For collectors that do not have the &lt;code&gt;UNORDERED&lt;/code&gt; characteristic, two accumulated results &lt;code&gt;a1&lt;/code&gt; and &lt;code&gt;a2&lt;/code&gt; are equivalent if &lt;code&gt;finisher.apply(a1).equals(finisher.apply(a2))&lt;/code&gt;. For unordered collectors, equivalence is relaxed to allow for non-equality related to differences in order. (For example, an unordered collector that accumulated elements to a &lt;code&gt;List&lt;/code&gt; would consider two lists equivalent if they contained the same elements, ignoring order.)</source>
          <target state="translated">&lt;code&gt;UNORDERED&lt;/code&gt; 특성 이없는 수집기의 경우 &lt;code&gt;finisher.apply(a1).equals(finisher.apply(a2))&lt;/code&gt; 경우 두 개의 누적 결과 &lt;code&gt;a1&lt;/code&gt; 및 &lt;code&gt;a2&lt;/code&gt; 는 같습니다 . 정렬되지 않은 수집기의 경우, 차이와 관련된 비평 등을 허용하도록 동등성이 완화됩니다. 예를 들어, &lt;code&gt;List&lt;/code&gt; 요소를 누적 한 정렬되지 않은 수집기는 순서를 무시하고 동일한 요소가 포함 된 경우 두 목록이 동등한 것으로 간주합니다.</target>
        </trans-unit>
        <trans-unit id="5daebfee18e6210b1df3959fb579eb8ef2b007d1" translate="yes" xml:space="preserve">
          <source>For combo boxes with a non trivial number of items, it is recommended to use a prototype display value to significantly speed up the display size calculation.</source>
          <target state="translated">항목 수가 적지 않은 콤보 상자의 경우 프로토 타입 표시 값을 사용하여 표시 크기 계산 속도를 크게 높이는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="e2c5f24899985c8ea850d045b39ba018e910066b" translate="yes" xml:space="preserve">
          <source>For common system types, including all the primitive types, there are predefined &lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt; constants in &lt;a href=&quot;constantdescs&quot;&gt;&lt;code&gt;ConstantDescs&lt;/code&gt;&lt;/a&gt;. (The &lt;code&gt;java.lang.constant&lt;/code&gt; APIs consider &lt;code&gt;void&lt;/code&gt; to be a primitive type.) To create a &lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt; for a class or interface type, use &lt;a href=&quot;#of(java.lang.String)&quot;&gt;&lt;code&gt;of(java.lang.String)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ofDescriptor(java.lang.String)&quot;&gt;&lt;code&gt;ofDescriptor(String)&lt;/code&gt;&lt;/a&gt;; to create a &lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt; for an array type, use &lt;a href=&quot;#ofDescriptor(java.lang.String)&quot;&gt;&lt;code&gt;ofDescriptor(String)&lt;/code&gt;&lt;/a&gt;, or first obtain a &lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt; for the component type and then call the &lt;a href=&quot;#arrayType()&quot;&gt;&lt;code&gt;arrayType()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#arrayType(int)&quot;&gt;&lt;code&gt;arrayType(int)&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">모든 기본 유형을 포함한 일반적인 시스템 유형의 경우 &lt;a href=&quot;constantdescs&quot;&gt; &lt;code&gt;ConstantDescs&lt;/code&gt; 에&lt;/a&gt; 미리 정의 된 &lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt; 상수가 있습니다. ( &lt;code&gt;java.lang.constant&lt;/code&gt; API는 &lt;code&gt;void&lt;/code&gt; 를 기본 유형으로 간주 합니다.) 클래스 또는 인터페이스 유형에 대한 &lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt; 를 작성하려면 &lt;a href=&quot;#of(java.lang.String)&quot;&gt; &lt;code&gt;of(java.lang.String)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#ofDescriptor(java.lang.String)&quot;&gt; &lt;code&gt;ofDescriptor(String)&lt;/code&gt; &lt;/a&gt; . 배열 유형에 대한 &lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt; 를 만들려면 &lt;a href=&quot;#ofDescriptor(java.lang.String)&quot;&gt; &lt;code&gt;ofDescriptor(String)&lt;/code&gt; &lt;/a&gt; 를 사용하거나 먼저 구성 요소 유형에 대한 &lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt; 를 &lt;a href=&quot;#arrayType()&quot;&gt; &lt;code&gt;arrayType()&lt;/code&gt; &lt;/a&gt; 다음 arrayType () 또는 &lt;a href=&quot;#arrayType(int)&quot;&gt; &lt;code&gt;arrayType(int)&lt;/code&gt; &lt;/a&gt; 메서드 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="3a2967995857133da00d1565c63fb3be5ba528a4" translate="yes" xml:space="preserve">
          <source>For comparing &lt;code&gt;String&lt;/code&gt;s exactly once, the &lt;code&gt;compare&lt;/code&gt; method provides the best performance. When sorting a list of &lt;code&gt;String&lt;/code&gt;s however, it is generally necessary to compare each &lt;code&gt;String&lt;/code&gt; multiple times. In this case, &lt;code&gt;CollationKey&lt;/code&gt;s provide better performance. The &lt;code&gt;CollationKey&lt;/code&gt; class converts a &lt;code&gt;String&lt;/code&gt; to a series of bits that can be compared bitwise against other &lt;code&gt;CollationKey&lt;/code&gt;s. A &lt;code&gt;CollationKey&lt;/code&gt; is created by a &lt;code&gt;Collator&lt;/code&gt; object for a given &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">비교를 위해 &lt;code&gt;String&lt;/code&gt; 회만들의 &lt;code&gt;compare&lt;/code&gt; 방법은 최상의 성능을 제공합니다. 그러나 &lt;code&gt;String&lt;/code&gt; 목록을 정렬 할 때는 일반적으로 각 &lt;code&gt;String&lt;/code&gt; 을 여러 번 비교해야합니다 . 이 경우 &lt;code&gt;CollationKey&lt;/code&gt; 는 더 나은 성능을 제공합니다. &lt;code&gt;CollationKey&lt;/code&gt; 클래스는 변환 &lt;code&gt;String&lt;/code&gt; 기타와 비트 단위로 비교할 수있는 비트의 일련 &lt;code&gt;CollationKey&lt;/code&gt; 들. &lt;code&gt;CollationKey&lt;/code&gt; a로 만든 &lt;code&gt;Collator&lt;/code&gt; 주어진에 대한 객체 &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af7d1003679e326a588379c3ddd16e561bb257a9" translate="yes" xml:space="preserve">
          <source>For compatibility reasons, it is possible, though highly discouraged, to add objects to an &lt;code&gt;AttributeList&lt;/code&gt; that are not instances of &lt;code&gt;Attribute&lt;/code&gt;. However, an &lt;code&gt;AttributeList&lt;/code&gt; can be made &lt;em&gt;type-safe&lt;/em&gt;, which means that an attempt to add an object that is not an &lt;code&gt;Attribute&lt;/code&gt; will produce an &lt;code&gt;
 IllegalArgumentException&lt;/code&gt;. An &lt;code&gt;AttributeList&lt;/code&gt; becomes type-safe when the method &lt;a href=&quot;#asList()&quot;&gt;&lt;code&gt;asList()&lt;/code&gt;&lt;/a&gt; is called on it.</source>
          <target state="translated">호환성을 위해, 그것은 개체를 추가, 매우 낙담하지만, 수 &lt;code&gt;AttributeList&lt;/code&gt; 의 인스턴스 수없는 &lt;code&gt;Attribute&lt;/code&gt; . 그러나 &lt;code&gt;AttributeList&lt;/code&gt; 는 &lt;em&gt;type-safe&lt;/em&gt; 로 만들 수 있습니다. 즉, &lt;code&gt;Attribute&lt;/code&gt; 가 아닌 객체를 추가하려고 하면 &lt;code&gt; IllegalArgumentException&lt;/code&gt; 이 생성됩니다 . &lt;code&gt;AttributeList&lt;/code&gt; 메소드 때 형 안전해진다 &lt;a href=&quot;#asList()&quot;&gt; &lt;code&gt;asList()&lt;/code&gt; &lt;/a&gt; 그것에 불린다.</target>
        </trans-unit>
        <trans-unit id="3bda8af9f3ea2c182bc4edb9c9e7d569970e2c7c" translate="yes" xml:space="preserve">
          <source>For compatibility reasons, it is possible, though highly discouraged, to add objects to an &lt;code&gt;AttributeList&lt;/code&gt; that are not instances of &lt;code&gt;Attribute&lt;/code&gt;. However, an &lt;code&gt;AttributeList&lt;/code&gt; can be made &lt;em&gt;type-safe&lt;/em&gt;, which means that an attempt to add an object that is not an &lt;code&gt;Attribute&lt;/code&gt; will produce an &lt;code&gt;IllegalArgumentException&lt;/code&gt;. An &lt;code&gt;AttributeList&lt;/code&gt; becomes type-safe when the method &lt;a href=&quot;attributelist#asList--&quot;&gt;&lt;code&gt;asList()&lt;/code&gt;&lt;/a&gt; is called on it.</source>
          <target state="translated">호환성 문제로 인해 권장 되지는 않지만 &lt;code&gt;Attribute&lt;/code&gt; 인스턴스가 아닌 &lt;code&gt;AttributeList&lt;/code&gt; 에 객체를 추가 할 수 있습니다 . 그러나 &lt;code&gt;AttributeList&lt;/code&gt; 를 &lt;em&gt;type-safe&lt;/em&gt; 로 만들 수 있습니다. 즉, &lt;code&gt;Attribute&lt;/code&gt; 가 아닌 객체를 추가하려고 하면 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 발생합니다 . &lt;code&gt;AttributeList&lt;/code&gt; 메소드 때 형 안전해진다 &lt;a href=&quot;attributelist#asList--&quot;&gt; &lt;code&gt;asList()&lt;/code&gt; &lt;/a&gt; 그것에 불린다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fa3fadeadc9c59b0bb290751e24959992cae4d8a" translate="yes" xml:space="preserve">
          <source>For compatibility reasons, two non-conforming locales are treated as special cases. These are &lt;b&gt;&lt;code&gt;ja_JP_JP&lt;/code&gt;&lt;/b&gt; and &lt;b&gt;&lt;code&gt;th_TH_TH&lt;/code&gt;&lt;/b&gt;. These are ill-formed in BCP 47 since the variants are too short. To ease migration to BCP 47, these are treated specially during construction. These two cases (and only these) cause a constructor to generate an extension, all other values behave exactly as they did prior to Java 7.</source>
          <target state="translated">호환성을 위해 두 가지 부적합 로케일이 특수한 경우로 취급됩니다. 이들은 &lt;b&gt; &lt;code&gt;ja_JP_JP&lt;/code&gt; &lt;/b&gt; 및 &lt;b&gt; &lt;code&gt;th_TH_TH&lt;/code&gt; &lt;/b&gt; 입니다. 변형이 너무 짧기 때문에 BCP 47에서는 형식이 잘못되었습니다. BCP 47로 쉽게 마이그레이션 할 수 있도록 건설 과정에서 특별히 처리됩니다. 이 두 경우 (및이 경우에만)는 생성자가 확장을 생성하게하며 다른 모든 값은 Java 7 이전과 동일하게 동작합니다.</target>
        </trans-unit>
        <trans-unit id="88ffec9f8f3ececb82205df4b4f1f28ffab318bb" translate="yes" xml:space="preserve">
          <source>For compatibility with JDK 1.1.x, some other three-letter time zone IDs (such as &quot;PST&quot;, &quot;CTT&quot;, &quot;AST&quot;) are also supported. However, &lt;strong&gt;their use is deprecated&lt;/strong&gt; because the same abbreviation is often used for multiple time zones (for example, &quot;CST&quot; could be U.S. &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;), and the Java platform can then only recognize one of them.</source>
          <target state="translated">JDK 1.1.x와의 호환성을 위해 다른 3 글자 시간대 ID (예 : &quot;PST&quot;, &quot;CTT&quot;, &quot;AST&quot;)도 지원됩니다. 그러나 동일한 약어가 여러 시간대에 자주 사용되므로 (예 : &quot;CST&quot;는 미국 &quot;중부 표준시&quot;및 &quot;중국 표준시&quot;일 수 있음) Java 플랫폼은 다음 중 하나만 인식 할 수 있으므로 &lt;strong&gt;사용이 중단&lt;/strong&gt; 됩니다. 그들.</target>
        </trans-unit>
        <trans-unit id="fd60c878e75d2f5708d5f3e6789fa9e2306f96c1" translate="yes" xml:space="preserve">
          <source>For compatibility with applications developed earlier this method still accepts &lt;code&gt;Frame.NORMAL&lt;/code&gt; and &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; only. The iconic state of the frame is only changed, other aspects of frame state are not affected by this method. If the state passed to this method is neither &lt;code&gt;
 Frame.NORMAL&lt;/code&gt; nor &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; the method performs no actions at all.</source>
          <target state="translated">이전에 개발 된 응용 프로그램과의 호환성을 위해이 메서드는 여전히 &lt;code&gt;Frame.NORMAL&lt;/code&gt; 및 &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; 만 허용 합니다. 프레임의 아이콘 상태는 변경 될 뿐이며 프레임 상태의 다른 측면은이 방법의 영향을받지 않습니다. 이 메서드에 전달 된 상태도 아닌 경우 &lt;code&gt; Frame.NORMAL&lt;/code&gt; 도 &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; 없는 방법의 수행을 전혀 행동을.</target>
        </trans-unit>
        <trans-unit id="c9eb361e769ed726818ef4786ab9e82032615e2e" translate="yes" xml:space="preserve">
          <source>For compatibility with old parsers, XMLFormatters can be configured to revert to the old format by specifying a &lt;code&gt;&amp;lt;xml-formatter-fully-qualified-class-name&amp;gt;.useInstant = false&lt;/code&gt;&lt;a href=&quot;logmanager#getProperty(java.lang.String)&quot;&gt;property&lt;/a&gt; in the logging configuration. When &lt;code&gt;useInstant&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the old formatting will be preserved. When &lt;code&gt;useInstant&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; (the default), the &lt;code&gt;&amp;lt;nanos&amp;gt;&lt;/code&gt; element will be printed and the &lt;code&gt;&amp;lt;date&amp;gt;&lt;/code&gt; element will contain the &lt;a href=&quot;../../../../java.base/java/time/format/datetimeformatter#ISO_INSTANT&quot;&gt;formatted&lt;/a&gt; instant.</source>
          <target state="translated">이전 파서와의 호환성을 위해 로깅 구성에서 &lt;code&gt;&amp;lt;xml-formatter-fully-qualified-class-name&amp;gt;.useInstant = false&lt;/code&gt; &lt;a href=&quot;logmanager#getProperty(java.lang.String)&quot;&gt;속성&lt;/a&gt; 을 지정하여 이전 형식으로 되돌 리도록 XMLFormatters를 구성 할 수 있습니다 . 때 &lt;code&gt;useInstant&lt;/code&gt; 이 있다 &lt;code&gt;false&lt;/code&gt; , 기존의 형식이 유지됩니다. 때 &lt;code&gt;useInstant&lt;/code&gt; 이 있다 &lt;code&gt;true&lt;/code&gt; (기본값) &lt;code&gt;&amp;lt;nanos&amp;gt;&lt;/code&gt; 요소가 인쇄되고 &lt;code&gt;&amp;lt;date&amp;gt;&lt;/code&gt; 요소가 포함됩니다 &lt;a href=&quot;../../../../java.base/java/time/format/datetimeformatter#ISO_INSTANT&quot;&gt;형식의&lt;/a&gt; 순간.</target>
        </trans-unit>
        <trans-unit id="4ae98774e76aff887be754e2a71ca1589d7931b3" translate="yes" xml:space="preserve">
          <source>For compatibility with old programs this method still returns &lt;code&gt;Frame.NORMAL&lt;/code&gt; and &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; but it only reports the iconic state of the frame, other aspects of frame state are not reported by this method.</source>
          <target state="translated">이전 프로그램과의 호환성을 위해이 메서드는 여전히 &lt;code&gt;Frame.NORMAL&lt;/code&gt; 및 &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; 를 반환 하지만 프레임의 아이콘 상태 만보 고 하고 프레임 상태의 다른 측면은이 메서드에서보고하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fdb12ba84178516e070cb7e3438381124465f720" translate="yes" xml:space="preserve">
          <source>For compatibility with previous releases, &lt;code&gt;BorderLayout&lt;/code&gt; also includes the relative positioning constants &lt;code&gt;BEFORE_FIRST_LINE&lt;/code&gt;, &lt;code&gt;AFTER_LAST_LINE&lt;/code&gt;, &lt;code&gt;BEFORE_LINE_BEGINS&lt;/code&gt; and &lt;code&gt;AFTER_LINE_ENDS&lt;/code&gt;. These are equivalent to &lt;code&gt;PAGE_START&lt;/code&gt;, &lt;code&gt;PAGE_END&lt;/code&gt;, &lt;code&gt;LINE_START&lt;/code&gt; and &lt;code&gt;LINE_END&lt;/code&gt; respectively. For consistency with the relative positioning constants used by other components, the latter constants are preferred.</source>
          <target state="translated">이전 릴리스와의 호환성을 위해 &lt;code&gt;BorderLayout&lt;/code&gt; 에는 상대 위치 지정 상수 &lt;code&gt;BEFORE_FIRST_LINE&lt;/code&gt; , &lt;code&gt;AFTER_LAST_LINE&lt;/code&gt; , &lt;code&gt;BEFORE_LINE_BEGINS&lt;/code&gt; 및 &lt;code&gt;AFTER_LINE_ENDS&lt;/code&gt; 도 포함 됩니다. 이들은 &lt;code&gt;PAGE_END&lt;/code&gt; &lt;code&gt;PAGE_START&lt;/code&gt; , PAGE_END , &lt;code&gt;LINE_START&lt;/code&gt; 및 &lt;code&gt;LINE_END&lt;/code&gt; 에 해당합니다. 다른 구성 요소에서 사용하는 상대 위치 상수와의 일관성을 위해 후자의 상수가 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="780dc5f76884169760a87fecc1ed665350c52d37" translate="yes" xml:space="preserve">
          <source>For compatibility, the default implementation of this method returns an empty &lt;code&gt;Optional&lt;/code&gt;. Subclasses should override this method with an appropriate implementation since an application may need to access additional parameters associated with the SSL session.</source>
          <target state="translated">호환성을 위해이 메서드의 기본 구현은 빈 &lt;code&gt;Optional&lt;/code&gt; 을 반환합니다 . 응용 프로그램이 SSL 세션과 관련된 추가 매개 변수에 액세스해야 할 수 있으므로 하위 클래스는 적절한 구현으로이 메서드를 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="0b68d1775fb9f96001888959c6d32bec9d0ab9b8" translate="yes" xml:space="preserve">
          <source>For complete details on RMI, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/rmi/index.html&quot;&gt;RMI Specification&lt;/a&gt; which describes the RMI API and system.</source>
          <target state="translated">RMI에 대한 자세한 내용 은 RMI API 및 시스템을 설명하는 RMI &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/rmi/index.html&quot;&gt;사양&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="108b8b0eaa56c557c0ce561d43ddd6032ceaaa24" translate="yes" xml:space="preserve">
          <source>For complete details on RMI, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/rmi/index.html&quot;&gt;RMI Specification&lt;/a&gt; which describes the RMI API and system.</source>
          <target state="translated">RMI에 대한 자세한 내용 은 RMI API 및 시스템을 설명하는 RMI &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/rmi/index.html&quot;&gt;사양&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b9423ca6a745439d228e81775dfe1289ff98c768" translate="yes" xml:space="preserve">
          <source>For complete examples and further documentation see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">전체 예제 및 추가 문서 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd9b622a83fcede5c32b8b6dd8e0ecaa49e64f16" translate="yes" xml:space="preserve">
          <source>For complete examples and further documentation see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">전체 예제 및 추가 문서 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="426d2bc87f59f5f0cb4ba388ec2d7d4edcc97713" translate="yes" xml:space="preserve">
          <source>For concurrent collectors, an implementation is free to (but not required to) implement reduction concurrently. A concurrent reduction is one where the accumulator function is called concurrently from multiple threads, using the same concurrently-modifiable result container, rather than keeping the result isolated during accumulation. A concurrent reduction should only be applied if the collector has the &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt;&lt;code&gt;Collector.Characteristics.UNORDERED&lt;/code&gt;&lt;/a&gt; characteristics or if the originating data is unordered.</source>
          <target state="translated">동시 콜렉터의 경우 구현은 축소를 동시에 구현할 수는 있지만 자유롭게 수행 할 수는 없습니다. 동시 축소는 누적 동안 결과를 분리하지 않고 동일한 동시 수정 가능한 결과 컨테이너를 사용하여 누산기 함수를 여러 스레드에서 동시에 호출하는 것입니다. &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt; &lt;code&gt;Collector.Characteristics.UNORDERED&lt;/code&gt; &lt;/a&gt; 특성이 있거나 원래 데이터가 정렬되지 않은 경우에만 동시 축소를 적용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5b77db919dc549d42aa7190b43a492b8ea4ee578" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;code&gt;JLayeredPane&lt;/code&gt; divides the depth-range into several different layers. Putting a component into one of those layers makes it easy to ensure that components overlap properly, without having to worry about specifying numbers for specific depths:</source>
          <target state="translated">편의를 위해 &lt;code&gt;JLayeredPane&lt;/code&gt; 은 깊이 범위를 여러 레이어로 나눕니다. 구성 요소를 이러한 레이어 중 하나에 배치하면 특정 깊이에 대한 번호를 지정하는 것에 대해 걱정할 필요없이 구성 요소가 올바르게 겹치는 지 쉽게 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c27fac6ea267b3ee9bd3b0f98727a50d9691f093" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;a href=&quot;#isError()&quot;&gt;&lt;code&gt;isError&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;true&lt;/code&gt; for result objects that describe malformed-input and unmappable-character errors but &lt;code&gt;false&lt;/code&gt; for those that describe underflow or overflow conditions.</source>
          <target state="translated">편의를 위해 &lt;a href=&quot;#isError()&quot;&gt; &lt;code&gt;isError&lt;/code&gt; &lt;/a&gt; 메서드는 잘못된 입력 및 매핑 할 수없는 문자 오류를 설명하는 결과 개체에 대해 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 언더 플로 또는 오버플로 조건을 설명하는 오류에 대해서는 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="b87f89f0734b0f681dabea429fae1aace7b8245d" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;a href=&quot;coderresult#isError--&quot;&gt;&lt;code&gt;isError&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;true&lt;/code&gt; for result objects that describe malformed-input and unmappable-character errors but &lt;code&gt;false&lt;/code&gt; for those that describe underflow or overflow conditions.</source>
          <target state="translated">편의를 위해, &lt;a href=&quot;coderresult#isError--&quot;&gt; &lt;code&gt;isError&lt;/code&gt; &lt;/a&gt; 메소드가 반환 &lt;code&gt;true&lt;/code&gt; 부정 입력 에러 나 맵 불가 문자 에러 있지만, 설명 결과 개체에 대한 &lt;code&gt;false&lt;/code&gt; 언더 나 오버 플로우 조건을 설명하는 사람들을 위해.</target>
        </trans-unit>
        <trans-unit id="f29ffc46a44dbbbeb0d145ab11e0eed98f221342" translate="yes" xml:space="preserve">
          <source>For convenience, this class declares a number of public static final fields that refer to singleton instances returned by the &lt;a href=&quot;#values()&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">편의를 위해이 클래스는 &lt;a href=&quot;#values()&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt; 메서드 에서 반환 된 싱글 톤 인스턴스를 참조하는 여러 공개 정적 최종 필드를 선언합니다 .</target>
        </trans-unit>
        <trans-unit id="ebada93ed27c6249289f1e3fb580ab3052fec92c" translate="yes" xml:space="preserve">
          <source>For convenience, this class declares a number of public static final fields that refer to singleton instances returned by the values() method.</source>
          <target state="translated">편의를 위해이 클래스는 values ​​() 메서드에서 반환 된 싱글 톤 인스턴스를 참조하는 여러 공개 정적 최종 필드를 선언합니다.</target>
        </trans-unit>
        <trans-unit id="22c5cc62321a61e23fe5e092c90e1a30e44ff7cd" translate="yes" xml:space="preserve">
          <source>For correct printing behaviour, the following points should be observed:</source>
          <target state="translated">올바른 인쇄 동작을 위해 다음 사항을 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="cb5e8dedd374a70c1c847661490301249aacc703" translate="yes" xml:space="preserve">
          <source>For data in &lt;code&gt;TIFFTag.TIFF_BYTE&lt;/code&gt; format, the application must take care when promoting the data to longer integral types to avoid sign extension.</source>
          <target state="translated">&lt;code&gt;TIFFTag.TIFF_BYTE&lt;/code&gt; 형식의 데이터의 경우 응용 프로그램은 부호 확장을 방지하기 위해 데이터를 더 긴 정수 유형으로 승격 할 때주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="1540b9260398a27c20afbc75e79f7e85a69fa272" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets the socket option is used to allow multiple programs bind to the same address. This option should be enabled when the socket is to be used for Internet Protocol (IP) multicasting.</source>
          <target state="translated">데이터 그램 지향 소켓의 경우 소켓 옵션을 사용하여 여러 프로그램이 동일한 주소에 바인딩 할 수 있습니다. 소켓이 인터넷 프로토콜 (IP) 멀티 캐스팅에 사용될 경우이 옵션을 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="0f95b5e33b3ee975e827804d3ac17eb2566ce8e5" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets the socket option usually allows multiple UDP sockets to be bound to the same address and port.</source>
          <target state="translated">데이터 그램 지향 소켓의 경우 소켓 옵션은 일반적으로 여러 UDP 소켓이 동일한 주소 및 포트에 바인딩되도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="786c72f86388cb950616d047202d32b3eb1c3b0f" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets, the size of the receive buffer may limit the size of the datagrams that can be received. Whether datagrams larger than the buffer size can be received is system dependent. Increasing the socket receive buffer may be important for cases where datagrams arrive in bursts faster than they can be processed.</source>
          <target state="translated">데이터 그램 지향 소켓의 경우, 수신 버퍼의 크기는 수신 할 수있는 데이터 그램의 크기를 제한 할 수 있습니다. 버퍼 크기보다 큰 데이터 그램을 수신 할 수 있는지 여부는 시스템에 따라 다릅니다. 소켓 수신 버퍼를 늘리는 것은 데이터 그램이 처리 할 수있는 것보다 빠르게 버스트에 도착하는 경우 중요 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="966cd6f9c064ea098962ea14f75ef3365435e675" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets, the size of the send buffer may limit the size of the datagrams that may be sent by the socket. Whether datagrams larger than the buffer size are sent or discarded is system dependent.</source>
          <target state="translated">데이터 그램 지향 소켓의 경우, 송신 버퍼의 크기는 소켓이 전송할 수있는 데이터 그램의 크기를 제한 할 수 있습니다. 버퍼 크기보다 큰 데이터 그램을 보내거나 버릴지 여부는 시스템에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="e144e4de7a25df3ef3b62d81140888932e771f2c" translate="yes" xml:space="preserve">
          <source>For date-times, 'JULIAN_DAY.getFrom()' assumes the same value from midnight until just before the next midnight. When 'JULIAN_DAY.adjustInto()' is applied to a date-time, the time of day portion remains unaltered. 'JULIAN_DAY.adjustInto()' and 'JULIAN_DAY.getFrom()' only apply to &lt;code&gt;Temporal&lt;/code&gt; objects that can be converted into &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;&lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;&lt;/a&gt; is thrown for any other type of object.</source>
          <target state="translated">날짜-시간의 경우, 'JULIAN_DAY.getFrom ()'은 자정부터 다음 자정 직전까지 동일한 값을 가정합니다. 'JULIAN_DAY.adjustInto ()'를 날짜-시간에 적용하면 시간 부분이 변경되지 않습니다. 'JULIAN_DAY.adjustInto ()'및 'JULIAN_DAY.getFrom ()' 은 &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 로 변환 할 수있는 &lt;code&gt;Temporal&lt;/code&gt; 오브젝트 에만 적용됩니다 . &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt; &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; 는&lt;/a&gt; 다른 형태의 객체 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0cc6b45ec07db1a8b27e379302a25193156d3ffa" translate="yes" xml:space="preserve">
          <source>For date-times, 'MODIFIED_JULIAN_DAY.getFrom()' assumes the same value from midnight until just before the next midnight. When 'MODIFIED_JULIAN_DAY.adjustInto()' is applied to a date-time, the time of day portion remains unaltered. 'MODIFIED_JULIAN_DAY.adjustInto()' and 'MODIFIED_JULIAN_DAY.getFrom()' only apply to &lt;code&gt;Temporal&lt;/code&gt; objects that can be converted into &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;&lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;&lt;/a&gt; is thrown for any other type of object.</source>
          <target state="translated">날짜-시간의 경우, 'MODIFIED_JULIAN_DAY.getFrom ()'은 자정부터 다음 자정 직전까지 동일한 값을 가정합니다. 'MODIFIED_JULIAN_DAY.adjustInto ()'가 날짜-시간에 적용되는 경우 시간 부분은 변경되지 않습니다. 'MODIFIED_JULIAN_DAY.adjustInto ()'및 'MODIFIED_JULIAN_DAY.getFrom ()' 은 &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 로 변환 할 수있는 &lt;code&gt;Temporal&lt;/code&gt; 객체 에만 적용됩니다 . &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt; &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; 는&lt;/a&gt; 다른 형태의 객체 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8cbb52d0e448ae0028f420b523fc0e8fe8889086" translate="yes" xml:space="preserve">
          <source>For date-times, 'RATA_DIE.getFrom()' assumes the same value from midnight until just before the next midnight. When 'RATA_DIE.adjustInto()' is applied to a date-time, the time of day portion remains unaltered. 'RATA_DIE.adjustInto()' and 'RATA_DIE.getFrom()' only apply to &lt;code&gt;Temporal&lt;/code&gt; objects that can be converted into &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;&lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;&lt;/a&gt; is thrown for any other type of object.</source>
          <target state="translated">날짜-시간의 경우, 'RATA_DIE.getFrom ()'은 자정부터 다음 자정 직전까지 동일한 값을 가정합니다. 'RATA_DIE.adjustInto ()'가 날짜-시간에 적용되면 시간 부분은 변경되지 않습니다. 'RATA_DIE.adjustInto ()'및 'RATA_DIE.getFrom ()' 은 &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 로 변환 할 수있는 &lt;code&gt;Temporal&lt;/code&gt; 오브젝트 에만 적용됩니다 . &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt; &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; 는&lt;/a&gt; 다른 형태의 객체 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5917af1a5a5388259e477975711371546feece14" translate="yes" xml:space="preserve">
          <source>For default values not specified by SAX2, each XMLReader implementation specifies its default, or may choose not to expose the feature flag. Unless otherwise specified here, implementations may support changing current values of these standard feature flags, but not while parsing.</source>
          <target state="translated">SAX2에 의해 지정되지 않은 기본값의 경우 각 XMLReader 구현은 기본값을 지정하거나 기능 플래그를 노출하지 않도록 선택할 수 있습니다. 여기에서 달리 지정하지 않는 한 구현은 이러한 표준 기능 플래그의 현재 값 변경을 지원할 수 있지만 구문 분석 중에는 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d21c60d5fb09e760cc030c28677e9de4a9cb8ba5" translate="yes" xml:space="preserve">
          <source>For deletes, the indexes represent the</source>
          <target state="translated">삭제의 경우 색인은</target>
        </trans-unit>
        <trans-unit id="28d681735625cb5b074de969173935dda35c689f" translate="yes" xml:space="preserve">
          <source>For details and the values of parameter that are valid for the various types of services see the top of this class and the  Java Cryptography Architecture API Specification &amp;amp; Reference. Security providers can override it to implement their own test.</source>
          <target state="translated">다양한 서비스 유형에 유효한 매개 변수의 세부 사항 및 값은이 클래스의 맨 위 및 Java Cryptography Architecture API 스펙 및 참조를 참조하십시오. 보안 공급자는 자신의 테스트를 구현하기 위해 보안 공급자를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b68492db6a0c7fda9b50e23139dd936779868511" translate="yes" xml:space="preserve">
          <source>For details and the values of parameter that are valid for the various types of services see the top of this class and the &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=security_guide_jca&quot;&gt;Java Cryptography Architecture (JCA) Reference Guide&lt;/a&gt;. Security providers can override it to implement their own test.</source>
          <target state="translated">다양한 유형의 서비스에 유효한 매개 변수 값과 세부 사항은이 클래스의 맨 위와 &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=security_guide_jca&quot;&gt;JCA (Java Cryptography Architecture) 참조 안내서를 참조하십시오&lt;/a&gt; . 보안 공급자는이를 재정 의하여 자체 테스트를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="804b34ef3e3e29b6ff0dcdc4e3200775ed24a3f5" translate="yes" xml:space="preserve">
          <source>For details and the values of parameter that are valid for the various types of services see the top of this class and the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jca&quot;&gt;Java Cryptography Architecture (JCA) Reference Guide&lt;/a&gt;. Security providers can override it to implement their own test.</source>
          <target state="translated">다양한 유형의 서비스에 유효한 매개 변수 값과 세부 사항은이 클래스의 맨 위와 &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jca&quot;&gt;JCA (Java Cryptography Architecture) 참조 안내서를 참조하십시오&lt;/a&gt; . 보안 공급자는이를 재정 의하여 자체 테스트를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c68701285e7b960e6e93d95808cdd4a77d317a1f" translate="yes" xml:space="preserve">
          <source>For details on how the widths of columns in the &lt;code&gt;JTable&lt;/code&gt; (and &lt;code&gt;JTableHeader&lt;/code&gt;) are calculated from the &lt;code&gt;preferredWidth&lt;/code&gt;, see the &lt;code&gt;doLayout&lt;/code&gt; method in &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">의 열의 폭 자세한 방법 &lt;code&gt;JTable&lt;/code&gt; (및 &lt;code&gt;JTableHeader&lt;/code&gt; 에가 )로부터 계산 &lt;code&gt;preferredWidth&lt;/code&gt; 상기 참조 &lt;code&gt;doLayout&lt;/code&gt; 의 방법 &lt;code&gt;JTable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5aab162f3d6513fcbe058868b382f7a560c31fe9" translate="yes" xml:space="preserve">
          <source>For details on the focus subsystem, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt; How to Use the Focus Subsystem&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;, and the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;Focus Specification&lt;/a&gt; for more information.</source>
          <target state="translated">포커스 하위 시스템에 대한 자세한 내용은 포커스 하위 시스템 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt;사용 방법&lt;/a&gt; , &lt;em&gt;Java 자습서&lt;/em&gt; 의 섹션 및 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;포커스 사양&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5b1b03e23526eb89a32170bba3eac6c71adb286b" translate="yes" xml:space="preserve">
          <source>For details on the focus subsystem, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt; How to Use the Focus Subsystem&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;, and the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;Focus Specification&lt;/a&gt; for more information.</source>
          <target state="translated">포커스 하위 시스템에 대한 자세한 내용은 포커스 하위 시스템 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt;사용 방법&lt;/a&gt; , &lt;em&gt;Java 자습서&lt;/em&gt; 의 섹션 및 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;포커스 사양&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="265e8a5599432ddf889d173f21ff483b5caee801" translate="yes" xml:space="preserve">
          <source>For directories that do not use a string representation for some or all of their attributes, the filter argument corresponding to an attribute value may be of a type other than String. Directories that support unstructured binary-valued attributes, for example, should accept byte arrays as filter arguments. The interpretation (if any) of filter arguments of any other type is determined by the service provider for that directory, which maps the filter operations onto operations with corresponding semantics in the underlying directory.</source>
          <target state="translated">일부 또는 모든 속성에 대해 문자열 표현을 사용하지 않는 디렉토리의 경우 속성 값에 해당하는 필터 인수는 문자열 이외의 유형일 수 있습니다. 예를 들어 구조화되지 않은 이진 값 속성을 지원하는 디렉토리는 바이트 배열을 필터 인수로 허용해야합니다. 다른 유형의 필터 인수에 대한 해석 (해당되는 경우)은 해당 디렉토리의 서비스 제공자에 의해 결정되며, 기본 디렉토리에서 해당 시맨틱이있는 조작에 필터 조작을 맵핑합니다.</target>
        </trans-unit>
        <trans-unit id="518376a1f0776715181d384c293e66dd7896f2e6" translate="yes" xml:space="preserve">
          <source>For documentation that includes information about algorithm parameter and key specifications, please see:</source>
          <target state="translated">알고리즘 매개 변수 및 키 사양에 대한 정보가 포함 된 문서는 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b6a829f85f8f642a1c89efe627173daa5255f0cb" translate="yes" xml:space="preserve">
          <source>For drop mode &lt;code&gt;DropMode.INSERT&lt;/code&gt;, this index indicates the index at which the data should be inserted into the parent path represented by &lt;code&gt;getPath()&lt;/code&gt;. &lt;code&gt;-1&lt;/code&gt; indicates that the drop occurred over the parent itself, and in most cases should be treated as inserting into either the beginning or the end of the parent's list of children.</source>
          <target state="translated">드롭 모드 &lt;code&gt;DropMode.INSERT&lt;/code&gt; 의 경우이 인덱스는 &lt;code&gt;getPath()&lt;/code&gt; 로 표시되는 부모 경로에 데이터를 삽입해야하는 인덱스를 나타냅니다 . &lt;code&gt;-1&lt;/code&gt; 은 드롭이 부모 자체에서 발생했음을 나타내며 대부분의 경우 부모의 자식 목록 시작 또는 끝에 삽입하는 것으로 처리되어야합니다.</target>
        </trans-unit>
        <trans-unit id="7fcd28f67347c51882b14015451795cd74b74cd2" translate="yes" xml:space="preserve">
          <source>For drop modes &lt;code&gt;DropMode.USE_SELECTION&lt;/code&gt; and &lt;code&gt;DropMode.ON&lt;/code&gt;, this index is unimportant (and it will always be &lt;code&gt;-1&lt;/code&gt;) as the only interesting data is the path over which the drop operation occurred.</source>
          <target state="translated">드롭 모드 &lt;code&gt;DropMode.USE_SELECTION&lt;/code&gt; 및 &lt;code&gt;DropMode.ON&lt;/code&gt; 의 경우 유일한 흥미로운 데이터는 드롭 작업이 발생한 경로 이므로이 인덱스는 중요하지 않습니다 (항상 &lt;code&gt;-1&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5e8ebd7b5b5944d400b4ddb7391f9d645ae1a1ac" translate="yes" xml:space="preserve">
          <source>For each</source>
          <target state="translated">각각</target>
        </trans-unit>
        <trans-unit id="48eda97c675ea6215a67a5147e8e38b46a61c861" translate="yes" xml:space="preserve">
          <source>For each &lt;a href=&quot;#isBlank()&quot;&gt;non-blank&lt;/a&gt; line,</source>
          <target state="translated">&lt;a href=&quot;#isBlank()&quot;&gt;공백이 아닌&lt;/a&gt; 각 줄에 대해</target>
        </trans-unit>
        <trans-unit id="45d82f9f72a200ec7154f206947a25a77ab40162" translate="yes" xml:space="preserve">
          <source>For each TransportService installed on the platform, the VirtualMachineManager creates a corresponding &lt;a href=&quot;connect/attachingconnector&quot;&gt;&lt;code&gt;AttachingConnector&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;connect/listeningconnector&quot;&gt;&lt;code&gt;ListeningConnector&lt;/code&gt;&lt;/a&gt;. These Connectors are created to encapsulate a &lt;a href=&quot;connect/transport&quot;&gt;&lt;code&gt;Transport&lt;/code&gt;&lt;/a&gt; that in turn encapsulates the TransportService. The AttachingConnector will be named based on the name of the transport service concatenated with the string &lt;code&gt;Attach&lt;/code&gt;. For example, if the transport service &lt;a href=&quot;connect/spi/transportservice#name()&quot;&gt;&lt;code&gt;name()&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;telepathic&lt;/code&gt; then the AttachingConnector will be named &lt;code&gt;telepathicAttach&lt;/code&gt;. Similiarly the ListeningConnector will be named with the string &lt;code&gt;Listen&lt;/code&gt; tagged onto the name of the transport service. The &lt;a href=&quot;connect/connector#description()&quot;&gt;&lt;code&gt;description()&lt;/code&gt;&lt;/a&gt; method of both the AttachingConnector, and the ListeningConnector, will delegate to the &lt;a href=&quot;connect/spi/transportservice#description()&quot;&gt;&lt;code&gt;description()&lt;/code&gt;&lt;/a&gt; method of the underlying transport service. Both the AttachingConnector and the ListeningConnector will have two Connector &lt;a href=&quot;connect/connector.argument&quot;&gt;&lt;code&gt;Arguments&lt;/code&gt;&lt;/a&gt;. A &lt;a href=&quot;connect/connector.stringargument&quot;&gt;&lt;code&gt;StringArgument&lt;/code&gt;&lt;/a&gt; named &lt;code&gt;address&lt;/code&gt; is the connector argument to specify the address to attach too, or to listen on. A &lt;a href=&quot;connect/connector.integerargument&quot;&gt;&lt;code&gt;IntegerArgument&lt;/code&gt;&lt;/a&gt; named &lt;code&gt;timeout&lt;/code&gt; is the connector argument to specify the timeout when attaching, or accepting. The timeout connector may be ignored depending on if the transport service supports an attach timeout or accept timeout.</source>
          <target state="translated">플랫폼에 설치된 각 TransportService에 대해 VirtualMachineManager는 해당 &lt;a href=&quot;connect/attachingconnector&quot;&gt; &lt;code&gt;AttachingConnector&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;connect/listeningconnector&quot;&gt; &lt;code&gt;ListeningConnector&lt;/code&gt; 를&lt;/a&gt; 만듭니다 . 이러한 커넥터는 &lt;a href=&quot;connect/transport&quot;&gt; &lt;code&gt;Transport&lt;/code&gt; Service&lt;/a&gt; 를 캡슐화하는 Transport 를 캡슐화하기 위해 만들어집니다 . AttachingConnector는 &lt;code&gt;Attach&lt;/code&gt; 문자열로 연결된 전송 서비스의 이름을 기반으로 이름이 지정 됩니다. 예를 들어 전송 서비스 &lt;a href=&quot;connect/spi/transportservice#name()&quot;&gt; &lt;code&gt;name()&lt;/code&gt; &lt;/a&gt; 메서드가 &lt;code&gt;telepathic&lt;/code&gt; 을 반환 하면 AttachingConnector의 이름은 &lt;code&gt;telepathicAttach&lt;/code&gt; 가 됩니다. 마찬가지로 ListeningConnector는 전송 서비스의 이름에 태그가 붙은 &lt;code&gt;Listen&lt;/code&gt; 문자열로 이름이 지정됩니다 . 그만큼&lt;a href=&quot;connect/connector#description()&quot;&gt; &lt;code&gt;description()&lt;/code&gt; &lt;/a&gt; 으로 AttachingConnector 및 ListeningConnector가 모두있어서, 상기 위임한다&lt;a href=&quot;connect/spi/transportservice#description()&quot;&gt; &lt;code&gt;description()&lt;/code&gt; &lt;/a&gt; 기본 전송 서비스 방법. AttachingConnector 및 ListeningConnector 모두 두 개의 커넥터&lt;a href=&quot;connect/connector.argument&quot;&gt; &lt;code&gt;Arguments&lt;/code&gt; &lt;/a&gt; 갖습니다.&lt;a href=&quot;connect/connector.stringargument&quot;&gt; &lt;code&gt;StringArgument&lt;/code&gt; &lt;/a&gt; 라는 이름의 &lt;code&gt;address&lt;/code&gt; 주소도 첨부하거나 수신 할 지정 커넥터 인수입니다.&lt;a href=&quot;connect/connector.integerargument&quot;&gt; &lt;code&gt;IntegerArgument&lt;/code&gt; &lt;/a&gt; 라는 &lt;code&gt;timeout&lt;/code&gt; 부착하거나 수락 할 때 타임 아웃을 지정하는 커넥터 인자이다. 전송 서비스가 연결 제한 시간을 지원하는지 또는 제한 시간을 허용하는지에 따라 제한 시간 커넥터가 무시 ​​될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5e87de10ee00b022602cd0fe8a0bf81b92bb32e" translate="yes" xml:space="preserve">
          <source>For each call of &lt;code&gt;publish&lt;/code&gt; the &lt;code&gt;Handler&lt;/code&gt; will call this &lt;code&gt;Filter&lt;/code&gt; (if it is non-null) to check if the &lt;code&gt;LogRecord&lt;/code&gt; should be published or discarded.</source>
          <target state="translated">&lt;code&gt;publish&lt;/code&gt; 호출 할 때 마다 &lt;code&gt;Handler&lt;/code&gt; 는이 &lt;code&gt;Filter&lt;/code&gt; (널이 아닌 경우)를 호출 하여 &lt;code&gt;LogRecord&lt;/code&gt; 가 게시 또는 삭제되어야 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="286cc615cc027b7399bc8f36bf03bcc0ce9d8b08" translate="yes" xml:space="preserve">
          <source>For each class &quot;Foo&quot;, explicit information may be available if there exists a corresponding &quot;FooBeanInfo&quot; class that provides a non-null value when queried for the information. We first look for the BeanInfo class by taking the full package-qualified name of the target bean class and appending &quot;BeanInfo&quot; to form a new class name. If this fails, then we take the final classname component of this name, and look for that class in each of the packages specified in the BeanInfo package search path.</source>
          <target state="translated">각 클래스 &quot;Foo&quot;에 대해 정보를 쿼리 할 때 널이 아닌 값을 제공하는 해당 &quot;FooBeanInfo&quot;클래스가있는 경우 명시 적 정보를 사용할 수 있습니다. 먼저 대상 Bean 클래스의 전체 패키지 규정 된 이름을 가져 와서 &quot;BeanInfo&quot;를 추가하여 새 클래스 이름을 작성하여 BeanInfo 클래스를 찾으십시오. 이것이 실패하면, 우리는이 이름의 최종 classname 컴포넌트를 가져 와서 BeanInfo 패키지 검색 경로에 지정된 각 패키지에서 해당 클래스를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="20256c9d6947200a5e94011138eea8b1897119cf" translate="yes" xml:space="preserve">
          <source>For each combination, the security strength can be requested from 112 up to the highest strength it supports. Both reseeding and prediction resistance are supported.</source>
          <target state="translated">각 조합에 대해 보안 강도는 112에서 지원하는 최고 강도까지 요청할 수 있습니다. 재시 딩 및 예측 저항이 모두 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="4d952801a5093c12c28f05ad1d4bdd655a37742c" translate="yes" xml:space="preserve">
          <source>For each configuration key in the &lt;a href=&quot;#getProperty(java.lang.String)&quot;&gt;existing configuration&lt;/a&gt; and the given input stream configuration, the given &lt;code&gt;mapper&lt;/code&gt; function is invoked to map from the configuration key to a function,</source>
          <target state="translated">&lt;a href=&quot;#getProperty(java.lang.String)&quot;&gt;기존 구성&lt;/a&gt; 의 각 구성 키 와 지정된 입력 스트림 구성에 대해 지정된 &lt;code&gt;mapper&lt;/code&gt; 함수가 호출되어 구성 키에서 함수로 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="b6e30f6a64e00d84dcf684b247b7c04cb7d796f1" translate="yes" xml:space="preserve">
          <source>For each entry of &lt;code&gt;providers&lt;/code&gt; that implements the &lt;code&gt;RegisterableService&lt;/code&gt; interface, its &lt;code&gt;onRegistration&lt;/code&gt; method will be called once for each category it is registered under. Its &lt;code&gt;onDeregistration&lt;/code&gt; method will be called each time it is deregistered from a category or when the registry is finalized.</source>
          <target state="translated">&lt;code&gt;RegisterableService&lt;/code&gt; 인터페이스 를 구현하는 각 &lt;code&gt;providers&lt;/code&gt; 항목에 대해 등록 된 각 카테고리에 대해 &lt;code&gt;onRegistration&lt;/code&gt; 메소드가 한 번 호출됩니다. 그 &lt;code&gt;onDeregistration&lt;/code&gt; 의 방법은이 범주하거나 레지스트리가 완료됩니다로부터 등록 해제 될 때마다 불려갑니다.</target>
        </trans-unit>
        <trans-unit id="c516132c3718d7f067332d5c83b439ea451e810e" translate="yes" xml:space="preserve">
          <source>For each enumerated module A that &quot;reads&quot; B:</source>
          <target state="translated">B를 &quot;읽는&quot;열거 된 각 모듈 A에 대해 :</target>
        </trans-unit>
        <trans-unit id="a25403e3f97a5b7ac07a000714e826226e543668" translate="yes" xml:space="preserve">
          <source>For each enumerated module A that 'requires' B: A &quot;reads&quot; B.</source>
          <target state="translated">B를 '필요로하는'열거 된 각 모듈 A에 대해 : A는 B를 &quot;읽습니다&quot;.</target>
        </trans-unit>
        <trans-unit id="35aeee93cde14551d6eade0a0c737d8f9a729564" translate="yes" xml:space="preserve">
          <source>For each enumerated module X that is automatic: X &quot;reads&quot; every other enumerated module (it is &quot;as if&quot; an automatic module has 'requires' directives for every other enumerated module).</source>
          <target state="translated">자동 인 열거 된 모듈 X 각각에 대해 : X는 다른 모든 열거 된 모듈을 &quot;읽습니다&quot;(자동 모듈이 다른 모든 열거 된 모듈에 대해 'requires'지시문을 갖는 것처럼 &quot;마치&quot;).</target>
        </trans-unit>
        <trans-unit id="96d2961bb25e716d2f6e80a236a212dd331a8ca6" translate="yes" xml:space="preserve">
          <source>For each file encountered this method attempts to read its &lt;a href=&quot;attribute/basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt;. If the file is not a directory then the &lt;a href=&quot;filevisitor#visitFile(T,java.nio.file.attribute.BasicFileAttributes)&quot;&gt;&lt;code&gt;visitFile&lt;/code&gt;&lt;/a&gt; method is invoked with the file attributes. If the file attributes cannot be read, due to an I/O exception, then the &lt;a href=&quot;filevisitor#visitFileFailed(T,java.io.IOException)&quot;&gt;&lt;code&gt;visitFileFailed&lt;/code&gt;&lt;/a&gt; method is invoked with the I/O exception.</source>
          <target state="translated">발견 된 각 파일에 대해이 메소드는 &lt;a href=&quot;attribute/basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; &lt;/a&gt; 읽기를 시도합니다 . 파일이 디렉토리가 아닌 경우 파일 속성과 함께 &lt;a href=&quot;filevisitor#visitFile(T,java.nio.file.attribute.BasicFileAttributes)&quot;&gt; &lt;code&gt;visitFile&lt;/code&gt; &lt;/a&gt; 메소드가 호출됩니다. I / O 예외로 인해 파일 속성을 읽을 수없는 경우, I / O 예외 와 함께 &lt;a href=&quot;filevisitor#visitFileFailed(T,java.io.IOException)&quot;&gt; &lt;code&gt;visitFileFailed&lt;/code&gt; &lt;/a&gt; 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6ca5a3eb61a3c0a9243e70fdb42a70d21404ae0f" translate="yes" xml:space="preserve">
          <source>For each file encountered this method attempts to read its &lt;a href=&quot;attribute/basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt;. If the file is not a directory then the &lt;a href=&quot;filevisitor#visitFile-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt;&lt;code&gt;visitFile&lt;/code&gt;&lt;/a&gt; method is invoked with the file attributes. If the file attributes cannot be read, due to an I/O exception, then the &lt;a href=&quot;filevisitor#visitFileFailed-T-java.io.IOException-&quot;&gt;&lt;code&gt;visitFileFailed&lt;/code&gt;&lt;/a&gt; method is invoked with the I/O exception.</source>
          <target state="translated">발견 된 각 파일에 대해이 메소드는 &lt;a href=&quot;attribute/basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; &lt;/a&gt; 를 읽으려고 시도합니다 . 파일이 디렉토리가 아닌 경우 파일 속성과 함께 &lt;a href=&quot;filevisitor#visitFile-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt; &lt;code&gt;visitFile&lt;/code&gt; &lt;/a&gt; 메소드가 호출됩니다. I / O 예외로 인해 파일 속성을 읽을 수없는 경우 &lt;a href=&quot;filevisitor#visitFileFailed-T-java.io.IOException-&quot;&gt; &lt;code&gt;visitFileFailed&lt;/code&gt; &lt;/a&gt; 메소드가 I / O 예외와 함께 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4d739c9464a9a531eadc74d9ce9305fefe52ff7c" translate="yes" xml:space="preserve">
          <source>For each glyph in the &lt;code&gt;GlyphVector&lt;/code&gt;, you can obtain:</source>
          <target state="translated">&lt;code&gt;GlyphVector&lt;/code&gt; 의 각 글리프에 대해 다음을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddf36bbce577351f24028eda6666f70d941e508b" translate="yes" xml:space="preserve">
          <source>For each listener, the original &lt;code&gt;NotificationListener&lt;/code&gt; and &lt;code&gt;handback&lt;/code&gt; are kept on the client side; in order for the client to be able to identify them, the server generates and returns a unique &lt;code&gt;listenerID&lt;/code&gt;. This &lt;code&gt;listenerID&lt;/code&gt; is forwarded with the &lt;code&gt;Notifications&lt;/code&gt; to the remote client.</source>
          <target state="translated">각 리스너에 대해 원래 &lt;code&gt;NotificationListener&lt;/code&gt; 및 &lt;code&gt;handback&lt;/code&gt; 은 클라이언트 측에 유지됩니다. 클라이언트가 클라이언트를 식별 할 수 있도록 서버는 고유 한 &lt;code&gt;listenerID&lt;/code&gt; 를 생성하고 리턴합니다 . 이 &lt;code&gt;listenerID&lt;/code&gt; 는 &lt;code&gt;Notifications&lt;/code&gt; 과 함께 원격 클라이언트로 전달 됩니다.</target>
        </trans-unit>
        <trans-unit id="97a84cf424a476d032f4b6ffd9d39b7dddecc378" translate="yes" xml:space="preserve">
          <source>For each lower bound B :</source>
          <target state="translated">각 하한 B에 대해 :</target>
        </trans-unit>
        <trans-unit id="560c97173e52668310a247ab36d49a521c8f9040" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server on behalf of the given delegation subject instead of the authenticated subject. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;../jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">리턴 된 &lt;code&gt;MBeanServerConnection&lt;/code&gt; 의 각 메소드에 대해 메소드를 호출하면 인증 된 주제 대신 지정된 위임 주제 대신 원격 MBean 서버에서 해당 메소드가 호출됩니다. MBean 서버 메소드에 의해 리턴 된 값은 클라이언트에 리턴 된 값입니다. MBean 서버 메소드가 &lt;code&gt;Exception&lt;/code&gt; 를 생성하면 (자) , 클라이언트는 같은 &lt;code&gt;Exception&lt;/code&gt; 를 보게됩니다. MBean 서버 메소드 또는 호출 시도가 &lt;code&gt;Error&lt;/code&gt; 를 생성하면 (자 ), &lt;code&gt;Error&lt;/code&gt; 는 &lt;a href=&quot;../jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; 에&lt;/a&gt; 랩 됩니다.</target>
        </trans-unit>
        <trans-unit id="6cab9b7add9ebb79364ab1771d1e616553c1e6db" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server on behalf of the given delegation subject instead of the authenticated subject. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">리턴 된 &lt;code&gt;MBeanServerConnection&lt;/code&gt; 의 각 메소드에 대해 메소드를 호출하면 인증 된 주제 대신 지정된 위임 주제 대신 원격 MBean 서버에서 해당 메소드가 호출됩니다. MBean 서버 메소드에 의해 리턴 된 값은 클라이언트에 리턴 된 값입니다. MBean 서버 메소드가 &lt;code&gt;Exception&lt;/code&gt; 를 생성하면 (자) , 클라이언트는 같은 &lt;code&gt;Exception&lt;/code&gt; 를 보게됩니다. MBean 서버 메소드 또는 호출 시도가 &lt;code&gt;Error&lt;/code&gt; 를 생성하면 (자 ), &lt;code&gt;Error&lt;/code&gt; 는 &lt;a href=&quot;jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; 에&lt;/a&gt; 랩 됩니다.</target>
        </trans-unit>
        <trans-unit id="b4d1d1cbcb4df50206304dcd7ddd941a7faf1321" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;../jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">리턴 된 &lt;code&gt;MBeanServerConnection&lt;/code&gt; 의 각 메소드에 대해 메소드를 호출하면 원격 MBean 서버에서 해당 메소드가 호출됩니다. MBean 서버 메소드에 의해 리턴 된 값은 클라이언트에 리턴 된 값입니다. MBean 서버 메소드가 &lt;code&gt;Exception&lt;/code&gt; 를 생성하면 (자) , 클라이언트는 같은 &lt;code&gt;Exception&lt;/code&gt; 를 보게됩니다. MBean 서버 메소드 또는 호출 시도가 &lt;code&gt;Error&lt;/code&gt; 를 생성하면 (자 ), &lt;code&gt;Error&lt;/code&gt; 는 &lt;a href=&quot;../jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; 에&lt;/a&gt; 랩 됩니다.</target>
        </trans-unit>
        <trans-unit id="af553cdcbe446f41ad75bb0c253ebededf33d396" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">리턴 된 &lt;code&gt;MBeanServerConnection&lt;/code&gt; 의 각 메소드에 대해 메소드를 호출하면 원격 MBean 서버에서 해당 메소드가 호출됩니다. MBean 서버 메소드에 의해 리턴 된 값은 클라이언트에 리턴 된 값입니다. MBean 서버 메소드가 &lt;code&gt;Exception&lt;/code&gt; 를 생성하면 (자) , 클라이언트는 같은 &lt;code&gt;Exception&lt;/code&gt; 를 보게됩니다. MBean 서버 메소드 또는 호출 시도가 &lt;code&gt;Error&lt;/code&gt; 를 생성하면 (자 ), &lt;code&gt;Error&lt;/code&gt; 는 &lt;a href=&quot;jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; 에&lt;/a&gt; 랩 됩니다.</target>
        </trans-unit>
        <trans-unit id="a088159314769f3251dc5a987ee7696aef6ceb45" translate="yes" xml:space="preserve">
          <source>For each non-blank line (as defined by &lt;a href=&quot;#isBlank()&quot;&gt;&lt;code&gt;isBlank()&lt;/code&gt;&lt;/a&gt;), the leading &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;white space&lt;/a&gt; characters are counted.</source>
          <target state="translated">공백이 아닌 각 줄 ( &lt;a href=&quot;#isBlank()&quot;&gt; &lt;code&gt;isBlank()&lt;/code&gt; &lt;/a&gt; 정의 된 대로 )에 대해 선행 &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;공백&lt;/a&gt; 문자가 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="719f9f441ad2dee9837b67bc47a02d9badbbe4a3" translate="yes" xml:space="preserve">
          <source>For each non-transient property, an expression is created in which the nullary &quot;getter&quot; method is applied to the &lt;code&gt;oldInstance&lt;/code&gt;. The value of this expression is the value of the property in the instance that is being serialized. If the value of this expression in the cloned environment &lt;code&gt;mutatesTo&lt;/code&gt; the target value, the new value is initialized to make it equivalent to the old value. In this case, because the property value has not changed there is no need to call the corresponding &quot;setter&quot; method and no statement is emitted. If not however, the expression for this value is replaced with another expression (normally a constructor) and the corresponding &quot;setter&quot; method is called to install the new property value in the object. This scheme removes default information from the output produced by streams using this delegate.</source>
          <target state="translated">일시적이지 않은 각 속성에 대해 nullary &quot;getter&quot;메서드가 &lt;code&gt;oldInstance&lt;/code&gt; 에 적용되는식이 만들어 집니다. 이 표현식의 값은 직렬화되는 인스턴스의 특성 값입니다. 만약 복제 된 환경에서이 식의 값 &lt;code&gt;mutatesTo&lt;/code&gt; 목표 값, 새로운 값은 이전 값과 동일하게 초기화됩니다. 이 경우 특성 값이 변경되지 않았으므로 해당 &quot;setter&quot;메소드를 호출 할 필요가 없으며 명령문이 생성되지 않습니다. 그러나 그렇지 않은 경우이 값의 표현식이 다른 표현식 (일반적으로 생성자)으로 대체되고 해당 &quot;setter&quot;메소드가 호출되어 오브젝트에 새 특성 값을 설치합니다. 이 체계는이 대리자를 사용하여 스트림에서 생성 된 출력에서 ​​기본 정보를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="b6e68cba9e515c80a86dee74a48fa0652d49385f" translate="yes" xml:space="preserve">
          <source>For each of the correspondents in the key exchange, &lt;code&gt;doPhase&lt;/code&gt; needs to be called. For example, if this key exchange is with one other party, &lt;code&gt;doPhase&lt;/code&gt; needs to be called once, with the &lt;code&gt;lastPhase&lt;/code&gt; flag set to &lt;code&gt;true&lt;/code&gt;. If this key exchange is with two other parties, &lt;code&gt;doPhase&lt;/code&gt; needs to be called twice, the first time setting the &lt;code&gt;lastPhase&lt;/code&gt; flag to &lt;code&gt;false&lt;/code&gt;, and the second time setting it to &lt;code&gt;true&lt;/code&gt;. There may be any number of parties involved in a key exchange.</source>
          <target state="translated">키 교환의 각 통신원에 대해 &lt;code&gt;doPhase&lt;/code&gt; 를 호출해야합니다. 예를 들어,이 키 교환이 다른 당사자 와 이루어지면 &lt;code&gt;lastPhase&lt;/code&gt; 플래그가 &lt;code&gt;true&lt;/code&gt; 로 설정된 &lt;code&gt;doPhase&lt;/code&gt; 를 한 번 호출 해야 합니다 . 이 키 교환이 다른 두 당사자와의 경우 &lt;code&gt;doPhase&lt;/code&gt; 를 두 번 호출해야합니다. 처음은 &lt;code&gt;lastPhase&lt;/code&gt; 플래그를 &lt;code&gt;false&lt;/code&gt; 로 설정하고 두 번째는이를 &lt;code&gt;true&lt;/code&gt; 로 설정해야 합니다 . 키 교환에는 여러 당사자가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf1abc49e05851db66fa969e8d77a4a123b0ee0f" translate="yes" xml:space="preserve">
          <source>For each of the correspondents in the key exchange, &lt;code&gt;engineDoPhase&lt;/code&gt; needs to be called. For example, if the key exchange is with one other party, &lt;code&gt;engineDoPhase&lt;/code&gt; needs to be called once, with the &lt;code&gt;lastPhase&lt;/code&gt; flag set to &lt;code&gt;true&lt;/code&gt;. If the key exchange is with two other parties, &lt;code&gt;engineDoPhase&lt;/code&gt; needs to be called twice, the first time setting the &lt;code&gt;lastPhase&lt;/code&gt; flag to &lt;code&gt;false&lt;/code&gt;, and the second time setting it to &lt;code&gt;true&lt;/code&gt;. There may be any number of parties involved in a key exchange.</source>
          <target state="translated">키 교환의 각 통신원에 대해 &lt;code&gt;engineDoPhase&lt;/code&gt; 를 호출해야합니다. 예를 들어, 키 교환이 다른 당사자 와의 경우 &lt;code&gt;lastPhase&lt;/code&gt; 플래그를 &lt;code&gt;true&lt;/code&gt; 로 설정하여 &lt;code&gt;engineDoPhase&lt;/code&gt; 를 한 번 호출 해야 합니다 . 키 교환이 다른 두 당사자와의 경우 &lt;code&gt;engineDoPhase&lt;/code&gt; 를 두 번 호출해야합니다. 처음은 &lt;code&gt;lastPhase&lt;/code&gt; 플래그를 &lt;code&gt;false&lt;/code&gt; 로 설정하고 두 번째는이를 &lt;code&gt;true&lt;/code&gt; 로 설정해야 합니다 . 키 교환에는 여러 당사자가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6705d80531c8f298495e16bdc3ba61df9ab6cbdc" translate="yes" xml:space="preserve">
          <source>For each of those three kinds of information, the Introspector will separately analyze the bean's class and superclasses looking for either explicit or implicit information and use that information to build a BeanInfo object that comprehensively describes the target bean.</source>
          <target state="translated">Introspector는 이러한 세 가지 정보 각각에 대해 명시 적 또는 암시 적 정보를 찾고있는 Bean 클래스 및 수퍼 클래스를 개별적으로 분석하고 해당 정보를 사용하여 대상 Bean을 포괄적으로 설명하는 BeanInfo 오브젝트를 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="3ff74e9e3b5f2e83be3535442fcbac4322b4605f" translate="yes" xml:space="preserve">
          <source>For each pair of threads that successfully exchange objects via an &lt;code&gt;Exchanger&lt;/code&gt;, actions prior to the &lt;code&gt;exchange()&lt;/code&gt; in each thread</source>
          <target state="translated">&lt;code&gt;Exchanger&lt;/code&gt; 를 통해 객체를 성공적으로 교환하는 각 스레드 쌍 에 대해 각 스레드에서 &lt;code&gt;exchange()&lt;/code&gt; 이전 조치</target>
        </trans-unit>
        <trans-unit id="077272393c1edab2916968364e29494b3d96b143" translate="yes" xml:space="preserve">
          <source>For each path identifies if that path is in fact new.</source>
          <target state="translated">각 경로에 대해 해당 경로가 실제로 새로운 것인지 식별합니다.</target>
        </trans-unit>
        <trans-unit id="70daddc43f303edbcbd09b46d7f6250e5c21d2f8" translate="yes" xml:space="preserve">
          <source>For each property found in both of these two sources, JNDI determines the property's value as follows. If the property is one of the standard JNDI properties that specify a list of JNDI factories (listed &lt;a href=&quot;#LISTPROPS&quot;&gt;above&lt;/a&gt;), the values are concatenated into a single colon-separated list. For other properties, only the first value found is used.</source>
          <target state="translated">이 두 소스 모두에서 발견 된 각 속성에 대해 JNDI는 다음과 같이 속성 값을 결정합니다. 특성이 JNDI 팩토리 목록을 지정하는 표준 JNDI 특성 중 하나 인 경우 ( &lt;a href=&quot;#LISTPROPS&quot;&gt;위에&lt;/a&gt; 나열 됨 ) 값이 단일 콜론으로 구분 된 목록으로 연결됩니다. 다른 속성의 경우 찾은 첫 번째 값만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="90dc92c1a206cf79e9d08ca3b0fa19bc4dfdd624" translate="yes" xml:space="preserve">
          <source>For each property found in both of these two sources, or in more than one application resource file, the property's value is determined as follows. If the property is one of the standard JNDI properties that specify a list of JNDI factories (see &lt;a href=&quot;context#LISTPROPS&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt;), all of the values are concatenated into a single colon-separated list. For other properties, only the first value found is used.</source>
          <target state="translated">이 두 소스 또는 둘 이상의 응용 프로그램 리소스 파일에서 발견되는 각 속성에 대해 속성 값은 다음과 같이 결정됩니다. 특성이 JNDI 팩토리 목록을 지정하는 표준 JNDI 특성 중 하나 인 경우 ( &lt;a href=&quot;context#LISTPROPS&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt; 참조 ) 모든 값이 단일 콜론으로 구분 된 목록으로 연결됩니다. 다른 속성의 경우 찾은 첫 번째 값만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b2a5c213817cdd80511492b1f5a1b49d548c1151" translate="yes" xml:space="preserve">
          <source>For each property found in more than one application resource file, JNDI uses the first value found or, in a few cases where it makes sense to do so, it concatenates all of the values (details are given below). For example, if the &quot;java.naming.factory.object&quot; property is found in three &lt;code&gt;jndi.properties&lt;/code&gt; resource files, the list of object factories is a concatenation of the property values from all three files. Using this scheme, each deployable component is responsible for listing the factories that it exports. JNDI automatically collects and uses all of these export lists when searching for factory classes.</source>
          <target state="translated">둘 이상의 응용 프로그램 자원 파일에서 발견 된 각 특성에 대해 JNDI는 발견 된 첫 번째 값을 사용하거나 일부 경우에는 모든 값을 연결합니다 (자세한 내용은 아래 참조). 예를 들어, &quot;java.naming.factory.object&quot;특성이 세 개의 &lt;code&gt;jndi.properties&lt;/code&gt; 자원 파일에있는 경우, 오브젝트 팩토리 목록은 세 파일 모두에서 특성 값을 연결 한 것입니다. 이 구성표를 사용하면 배포 가능한 각 구성 요소가 내보내는 팩토리를 나열해야합니다. JNDI는 팩토리 클래스를 검색 할 때 이러한 모든 내보내기 목록을 자동으로 수집하고 사용합니다.</target>
        </trans-unit>
        <trans-unit id="cebf057d31e3a874e277390510d8867ee4415f1a" translate="yes" xml:space="preserve">
          <source>For each representation [</source>
          <target state="translated">각 표현에 대해 [</target>
        </trans-unit>
        <trans-unit id="47a9561df7b527f4b2aab61f4f34ec8cc6a9b40c" translate="yes" xml:space="preserve">
          <source>For each text attribute, the documentation provides:</source>
          <target state="translated">각 텍스트 속성에 대해 문서는 다음을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3fc4fa19139d0316b7911716ec07a2b22e32aa79" translate="yes" xml:space="preserve">
          <source>For each upper bound B :</source>
          <target state="translated">각 상한 B에 대해 :</target>
        </trans-unit>
        <trans-unit id="b1963cf2281039f3bd61fa6e3d2bbdd1608d8271" translate="yes" xml:space="preserve">
          <source>For each upper bound B:</source>
          <target state="translated">각 상한 B에 대해 :</target>
        </trans-unit>
        <trans-unit id="0f830a65e3f2e9d17727af61b48af4b494bd849c" translate="yes" xml:space="preserve">
          <source>For efficiency, a node passed to the filter may not be the same as the one that is actually in the tree. And the actual node (node object identity) may be reused during the process of filtering and serializing a document.</source>
          <target state="translated">효율성을 위해 필터에 전달 된 노드는 실제로 트리에있는 노드와 동일하지 않을 수 있습니다. 그리고 문서를 필터링하고 직렬화하는 과정에서 실제 노드 (노드 개체 ID)를 재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="851ce3cbc9de3b0a8b7e8eabea78affca6c64eaf" translate="yes" xml:space="preserve">
          <source>For efficiency, the Element node passed to the filter may not be the same one as is actually placed in the tree if the node is accepted. And the actual node (node object identity) may be reused during the process of reading in and filtering a document.</source>
          <target state="translated">효율성을 위해 필터에 전달 된 요소 노드는 노드가 승인 된 경우 실제로 트리에 배치 된 것과 동일하지 않을 수 있습니다. 그리고 문서를 읽고 필터링하는 과정에서 실제 노드 (노드 개체 ID)를 재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6808db189d4064c914947cfda276df1fb67492d5" translate="yes" xml:space="preserve">
          <source>For encodings consisting of multiple certificates, use &lt;code&gt;generateCertificates&lt;/code&gt; when you want to parse a collection of possibly unrelated certificates. Otherwise, use &lt;code&gt;generateCertPath&lt;/code&gt; when you want to generate a &lt;code&gt;CertPath&lt;/code&gt; (a certificate chain) and subsequently validate it with a &lt;code&gt;CertPathValidator&lt;/code&gt;.</source>
          <target state="translated">여러 인증서로 구성된 인코딩 의 경우 관련이없는 인증서 컬렉션을 구문 분석하려는 경우 &lt;code&gt;generateCertificates&lt;/code&gt; 를 사용하십시오 . 그렇지 않으면, 사용 &lt;code&gt;generateCertPath&lt;/code&gt; 당신이 생성 할 &lt;code&gt;CertPath&lt;/code&gt; (인증서 체인) 및 후속으로 유효성을 검사 &lt;code&gt;CertPathValidator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6442f87b0f03b18ad3f252a02ec0dd0852bad5c7" translate="yes" xml:space="preserve">
          <source>For events related to the parsing of a file.</source>
          <target state="translated">파일 구문 분석과 관련된 이벤트의 경우.</target>
        </trans-unit>
        <trans-unit id="6119a588162f17f778d02e4197d780c8a89fc19a" translate="yes" xml:space="preserve">
          <source>For events relating to an individual annotation processing round.</source>
          <target state="translated">개별 주석 처리 라운드와 관련된 이벤트의 경우.</target>
        </trans-unit>
        <trans-unit id="000f7e62b833e5f35b5ce3cc6a4c0eab6e0b58e9" translate="yes" xml:space="preserve">
          <source>For events relating to class files being generated.</source>
          <target state="translated">생성되는 클래스 파일과 관련된 이벤트의 경우.</target>
        </trans-unit>
        <trans-unit id="e1b6d4df43d90f4a744a97db77e904c593298d64" translate="yes" xml:space="preserve">
          <source>For events relating to elements being analyzed for errors.</source>
          <target state="translated">오류 분석중인 요소와 관련된 이벤트의 경우.</target>
        </trans-unit>
        <trans-unit id="022e46c741aec213a3a33e316e458ad4ac5e21cb" translate="yes" xml:space="preserve">
          <source>For events relating to elements being entered.</source>
          <target state="translated">입력중인 요소와 관련된 이벤트 용입니다.</target>
        </trans-unit>
        <trans-unit id="51b13fbcf15ea4eff73687711f5e62eacd6fa470" translate="yes" xml:space="preserve">
          <source>For events relating to overall annotation processing.</source>
          <target state="translated">전체 주석 처리와 관련된 이벤트 용입니다.</target>
        </trans-unit>
        <trans-unit id="3c58b6e9bc484c08c212d940518dbfc22676fe01" translate="yes" xml:space="preserve">
          <source>For every Java type &lt;em&gt;J&lt;/em&gt;, the MXBean mapping is described by the following information:</source>
          <target state="translated">모든 Java 유형 &lt;em&gt;J&lt;/em&gt; 에 대해 MXBean 맵핑은 다음 정보로 설명됩니다.</target>
        </trans-unit>
        <trans-unit id="dc3c09a115b4ee611eb7505826a4fa0c2a8495d8" translate="yes" xml:space="preserve">
          <source>For example</source>
          <target state="translated">예를 들면</target>
        </trans-unit>
        <trans-unit id="670a909717db4485fe98bcf482ca6b5ed344272b" translate="yes" xml:space="preserve">
          <source>For example -</source>
          <target state="translated">예를 들면-</target>
        </trans-unit>
        <trans-unit id="6d25b7b1723971b685662d129ae6845002a82989" translate="yes" xml:space="preserve">
          <source>For example this code returns a date on the last day of July:</source>
          <target state="translated">예를 들어이 코드는 7 월 마지막 날의 날짜를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2e17e901f7efa9c67eab5d1d5cbdc89f3e5ba8cd" translate="yes" xml:space="preserve">
          <source>For example to count the unique imports for all the files in a file hierarchy on a Unix compatible platform:</source>
          <target state="translated">예를 들어 Unix 호환 플랫폼에서 파일 계층 구조의 모든 파일에 대한 고유 가져 오기를 계산하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="a93be9a98e0ead9fb758dc65b47e6eacc04ae211" translate="yes" xml:space="preserve">
          <source>For example to read from a stream as written by the example in ObjectOutputStream:</source>
          <target state="translated">예를 들어 ObjectOutputStream의 예제에서 작성된대로 스트림에서 읽으려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="dea8f92e5ff92dd10bdae905afaf950bcc028834" translate="yes" xml:space="preserve">
          <source>For example to write an object that can be read by the example in ObjectInputStream:</source>
          <target state="translated">예를 들어 ObjectInputStream의 예제에서 읽을 수있는 오브젝트를 작성하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="ed3bd207737b554201ad4873d19d79f75b22c5dd" translate="yes" xml:space="preserve">
          <source>For example using UTF-8 as the encoding scheme the string &quot;The string &amp;uuml;@foo-bar&quot; would get converted to &quot;The+string+%C3%BC%40foo-bar&quot; because in UTF-8 the character &amp;uuml; is encoded as two bytes C3 (hex) and BC (hex), and the character @ is encoded as one byte 40 (hex).</source>
          <target state="translated">예를 들어, UTF-8을 인코딩 체계로 사용하면 문자열 &quot;문자열 &amp;uuml; @ foo-bar&quot;는 UTF-8에서 문자 &amp;uuml;가 2로 인코딩되므로 &quot;The + string + % C3 % BC % 40foo-bar&quot;로 변환됩니다. 바이트 C3 (16 진) 및 BC (16 진)이며 문자 @는 1 바이트 40 (16 진)으로 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">예를 들어</target>
        </trans-unit>
        <trans-unit id="77436c62db40fb0d8e10ad4f0044d6f872750e7a" translate="yes" xml:space="preserve">
          <source>For example, &quot;*&quot;, &quot;javax.management.remote.JMXPrincipal.*&quot; and &quot;javax.management.remote.JMXPrincipal.delegate&quot; are valid target names. The first one denotes any principal name from any principal class, the second one denotes any principal name of the concrete principal class &lt;code&gt;javax.management.remote.JMXPrincipal&lt;/code&gt; and the third one denotes a concrete principal name &lt;code&gt;delegate&lt;/code&gt; of the concrete principal class &lt;code&gt;javax.management.remote.JMXPrincipal&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &quot;*&quot;, &quot;javax.management.remote.JMXPrincipal. *&quot;및 &quot;javax.management.remote.JMXPrincipal.delegate&quot;는 유효한 대상 이름입니다. 첫 번째, 두 번째는 콘크리트 주요 클래스의 모든 사용자 이름이고, 모든 주요한 클래스에서 모든 사용자 이름을 나타낸다 &lt;code&gt;javax.management.remote.JMXPrincipal&lt;/code&gt; 을 세번째 콘크리트 주체 이름이다 &lt;code&gt;delegate&lt;/code&gt; 콘크리트 주요 클래스의 &lt;code&gt;javax.management.remote.JMXPrincipal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1f1fc71f706b96406965545c5a72537af23c22f" translate="yes" xml:space="preserve">
          <source>For example, &quot;1 year, 6 months and 3 days&quot; minus &quot;2 years, 2 months and 2 days&quot; returns &quot;-1 years, 4 months and 1 day&quot;.</source>
          <target state="translated">예를 들어 &quot;1 년, 6 개월 및 3 일&quot;에서 &quot;2 년, 2 개월 및 2 일&quot;을 뺀 값은 &quot;-1 년, 4 개월 및 1 일&quot;을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ce2f04507ae8e2998174aa82e754a89ec2df289f" translate="yes" xml:space="preserve">
          <source>For example, &quot;1 year, 6 months and 3 days&quot; plus &quot;2 years, 2 months and 2 days&quot; returns &quot;3 years, 8 months and 5 days&quot;.</source>
          <target state="translated">예를 들어 &quot;1 년, 6 개월 및 3 일&quot;에 &quot;2 년, 2 개월 및 2 일&quot;을 더한 경우 &quot;3 년, 8 개월 및 5 일&quot;이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="cd1ca285238b6f4f71a5a84cbdfe707d75fa2f47" translate="yes" xml:space="preserve">
          <source>For example, &quot;CertificateFactory.X.509&quot; would be satisfied by any provider that supplied a CertificateFactory implementation for X.509 certificates.</source>
          <target state="translated">예를 들어, &quot;CertificateFactory.X.509&quot;는 X.509 인증서에 대한 CertificateFactory 구현을 제공 한 모든 제공자가 만족합니다.</target>
        </trans-unit>
        <trans-unit id="c41348f1997c9b465cb11a4e4b35ee11f6fc435c" translate="yes" xml:space="preserve">
          <source>For example, &quot;P1D&quot; (1 day) is equal to &quot;PT24H&quot; (24 hours).</source>
          <target state="translated">예를 들어 &quot;P1D&quot;(1 일)는 &quot;PT24H&quot;(24 시간)와 같습니다.</target>
        </trans-unit>
        <trans-unit id="01a5173bc02a3a282df0b5b324e7dd8980aadd3c" translate="yes" xml:space="preserve">
          <source>For example, &quot;P1D&quot; (one day) &amp;gt; &quot;PT12H&quot; (12 hours) and &quot;P2Y&quot; (two years) &amp;gt; &quot;P23M&quot; (23 months).</source>
          <target state="translated">예 : &quot;P1D&quot;(1 일)&amp;gt; &quot;PT12H&quot;(12 시간) 및 &quot;P2Y&quot;(2 년)&amp;gt; &quot;P23M&quot;(23 개월).</target>
        </trans-unit>
        <trans-unit id="f63fe4a2a7c054829c4bfb4607b20ee971586bd3" translate="yes" xml:space="preserve">
          <source>For example, &quot;Signature.SHA1withDSA KeySize:1024&quot; would be satisfied by any provider that implemented the SHA1withDSA signature algorithm with a keysize of 1024 (or larger).</source>
          <target state="translated">예를 들어 &quot;Signature.SHA1withDSA KeySize : 1024&quot;는 키 크기가 1024 이상인 SHA1withDSA 서명 알고리즘을 구현 한 모든 공급자가 만족합니다.</target>
        </trans-unit>
        <trans-unit id="23834668b4f42aa3eff36d9dc3af1cb803a05d8f" translate="yes" xml:space="preserve">
          <source>For example, &quot;d:k=*&quot; and &quot;d:k=*,*&quot; are property value patterns whereas &quot;d:k=v,*&quot; is not.</source>
          <target state="translated">예를 들어 &quot;d : k = *&quot;및 &quot;d : k = *, *&quot;는 속성 값 패턴이지만 &quot;d : k = v, *&quot;는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="693804fe51c05f08e1e089946166fd022bbe5638" translate="yes" xml:space="preserve">
          <source>For example, &quot;d:k=v,*&quot; and &quot;d:k=*,*&quot; are key property list patterns whereas &quot;d:k=*&quot; is not.</source>
          <target state="translated">예를 들어 &quot;d : k = v, *&quot;및 &quot;d : k = *, *&quot;는 주요 속성 목록 패턴이지만 &quot;d : k = *&quot;는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8dfc24b67f40b9ce20a215e59dc00c07892dee26" translate="yes" xml:space="preserve">
          <source>For example, &quot;text/sgml&quot; will be selected over &quot;text/html&quot;, and &lt;code&gt;DataFlavor.stringFlavor&lt;/code&gt; will be chosen over &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &quot;텍스트 / SGML은&quot;이상 &quot;text / html과&quot;선택되고, &lt;code&gt;DataFlavor.stringFlavor&lt;/code&gt; 이상 선택됩니다 &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f203035b2d853f5578c6fa1376f1f2226371e963" translate="yes" xml:space="preserve">
          <source>For example, 'ppH' outputs the hour-of-day padded on the left with spaces to a width of 2.</source>
          <target state="translated">예를 들어, 'ppH'는 왼쪽에 공백으로 채워진 시간을 너비 2로 출력합니다.</target>
        </trans-unit>
        <trans-unit id="fe932a3580bdae7afe6e0a4a9de58c7157cf7a7c" translate="yes" xml:space="preserve">
          <source>For example, 1904 is a leap year it is divisible by 4. 1900 was not a leap year as it is divisible by 100, however 2000 was a leap year as it is divisible by 400.</source>
          <target state="translated">예를 들어, 1904는 4로 나눌 수있는 윤년입니다. 1900은 100으로 나눌 수있는 윤년이 아니었지만 2000은 400으로 나눌 수있는 윤년입니다.</target>
        </trans-unit>
        <trans-unit id="6a78f26713124191fac2e6d28003f9a9ac84e472" translate="yes" xml:space="preserve">
          <source>For example, 2007-03-31 minus one month would result in the invalid date 2007-02-31. Instead of returning an invalid result, the last valid day of the month, 2007-02-28, is selected instead.</source>
          <target state="translated">예를 들어 2007-03-31에서 1 개월을 뺀 값은 2007-02-31의 유효하지 않은 날짜가됩니다. 유효하지 않은 결과를 반환하는 대신 2007-02-28의 마지막 유효 날짜가 대신 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="4f6ba16c2096d7d81200bdc33b24cb5f6ab6239d" translate="yes" xml:space="preserve">
          <source>For example, 2007-03-31 minus one month would result in the invalid date 2007-04-31. Instead of returning an invalid result, the last valid day of the month, 2007-04-30, is selected instead.</source>
          <target state="translated">예를 들어 2007-03-31에서 1 개월을 뺀 값은 2007-04-31의 유효하지 않은 날짜가됩니다. 유효하지 않은 결과를 반환하는 대신 2007-04-30의 마지막 유효 날짜가 대신 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="bd615cd01a73b4d5679c49655d40ba2b42a8ae69" translate="yes" xml:space="preserve">
          <source>For example, 2007-03-31 plus one month would result in the invalid date 2007-04-31. Instead of returning an invalid result, the last valid day of the month, 2007-04-30, is selected instead.</source>
          <target state="translated">예를 들어 2007-03-31에 1 개월을 더한 날짜는 2007-04-31 일이 아닙니다. 유효하지 않은 결과를 반환하는 대신 2007-04-30의 마지막 유효 날짜가 대신 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="e868a34fb2f73ca67495f195fb00081f0ca9a55a" translate="yes" xml:space="preserve">
          <source>For example, 2008-02-29 (leap year) minus one year would result in the invalid date 2007-02-29 (standard year). Instead of returning an invalid result, the last valid day of the month, 2007-02-28, is selected instead.</source>
          <target state="translated">예를 들어 2008-02-29 (윤년)에서 1 년을 뺀 값은 2007-02-29 (표준 연도)에 유효하지 않은 날짜가됩니다. 유효하지 않은 결과를 반환하는 대신 2007-02-28의 마지막 유효 날짜가 대신 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="04433b015b19f6077c09b7c0646d9668dd2e4865" translate="yes" xml:space="preserve">
          <source>For example, 2008-02-29 (leap year) minus one year would result in the invalid date 2009-02-29 (standard year). Instead of returning an invalid result, the last valid day of the month, 2009-02-28, is selected instead.</source>
          <target state="translated">예를 들어 2008-02-29 (윤년)에서 1 년을 뺀 값은 2009-02-29 (표준 연도)에 유효하지 않은 날짜가됩니다. 유효하지 않은 결과를 반환하는 대신 2009-02-28의 마지막 유효 날짜가 대신 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="4c2323f63b708163f478b22afb5d3d7394c2b7fb" translate="yes" xml:space="preserve">
          <source>For example, 2008-02-29 (leap year) plus one year would result in the invalid date 2009-02-29 (standard year). Instead of returning an invalid result, the last valid day of the month, 2009-02-28, is selected instead.</source>
          <target state="translated">예를 들어 2008-02-29 (윤년)에 1 년을 더하면 유효하지 않은 날짜는 2009-02-29 (표준 연도)가됩니다. 유효하지 않은 결과를 반환하는 대신 2009-02-28의 마지막 유효 날짜가 대신 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="fc67e734a945db6ecd093cddd5d355c674f7062b" translate="yes" xml:space="preserve">
          <source>For example, 2008-12-31 minus one day would result in 2009-01-01.</source>
          <target state="translated">예를 들어, 2008-12-31에서 하루를 뺀 값은 2009-01-01이됩니다.</target>
        </trans-unit>
        <trans-unit id="f1a5ba47be43a81f6ae6988d7484d726497287d1" translate="yes" xml:space="preserve">
          <source>For example, 2008-12-31 minus one week would result in 2009-01-07.</source>
          <target state="translated">예를 들어, 2008-12-31에서 일주일을 빼면 2009-01-07이됩니다.</target>
        </trans-unit>
        <trans-unit id="a47190266a9dbf83e8257ded9a0ae0d448f4ea1b" translate="yes" xml:space="preserve">
          <source>For example, 2008-12-31 plus one day would result in 2009-01-01.</source>
          <target state="translated">예를 들어 2008-12-31에 하루를 더한 결과는 2009-01-01이됩니다.</target>
        </trans-unit>
        <trans-unit id="be8b9caab1cbe23452ae062409cbc54469046fd9" translate="yes" xml:space="preserve">
          <source>For example, 2008-12-31 plus one week would result in 2009-01-07.</source>
          <target state="translated">예를 들어 2008-12-31에 1 주를 더한 결과는 2009-01-07이됩니다.</target>
        </trans-unit>
        <trans-unit id="753c745299a18ae4a799071980d0926142c9ce97" translate="yes" xml:space="preserve">
          <source>For example, 2009-01-01 minus one day would result in 2008-12-31.</source>
          <target state="translated">예를 들어 2009-01-01에서 하루를 뺀 값은 2008-12-31이됩니다.</target>
        </trans-unit>
        <trans-unit id="b4903b02ec0ad82ff029ba8cebb4d342c8e56e1a" translate="yes" xml:space="preserve">
          <source>For example, 2009-01-07 minus one week would result in 2008-12-31.</source>
          <target state="translated">예를 들어, 2009-01-07에서 1 주일을 빼면 2008-12-31이됩니다.</target>
        </trans-unit>
        <trans-unit id="5dc35db9167b570ffed75aadc5b48a485ca7282f" translate="yes" xml:space="preserve">
          <source>For example, 30 days cannot be meaningfully compared to one month. The &lt;a href=&quot;#compare(javax.xml.datatype.Duration)&quot;&gt;&lt;code&gt;compare(Duration duration)&lt;/code&gt;&lt;/a&gt; method implements this relationship.</source>
          <target state="translated">예를 들어 30 일은 한 달과 의미있게 비교할 수 없습니다. &lt;a href=&quot;#compare(javax.xml.datatype.Duration)&quot;&gt; &lt;code&gt;compare(Duration duration)&lt;/code&gt; &lt;/a&gt; 방식의 구현이 관계.</target>
        </trans-unit>
        <trans-unit id="fc133e42d70b82a62bf05a26a79b0108e9f8886f" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;&quot;en&quot;&lt;/code&gt; (English), &lt;code&gt;&quot;ja-JP&quot;&lt;/code&gt; (Japanese, Japan), &lt;code&gt;&quot;*&quot;&lt;/code&gt; (special language range which matches any language tag) are basic language ranges, whereas &lt;code&gt;&quot;*-CH&quot;&lt;/code&gt; (any languages, Switzerland), &lt;code&gt;&quot;es-*&quot;&lt;/code&gt; (Spanish, any regions), and &lt;code&gt;&quot;zh-Hant-*&quot;&lt;/code&gt; (Traditional Chinese, any regions) are extended language ranges.</source>
          <target state="translated">예를 들어 &lt;code&gt;&quot;en&quot;&lt;/code&gt; (영어), &lt;code&gt;&quot;ja-JP&quot;&lt;/code&gt; (일본어, 일본), &lt;code&gt;&quot;*&quot;&lt;/code&gt; (모든 언어 태그와 일치하는 특수 언어 범위)는 기본 언어 범위이고 &lt;code&gt;&quot;*-CH&quot;&lt;/code&gt; (모든 언어, 스위스 ), &lt;code&gt;&quot;es-*&quot;&lt;/code&gt; (스페인어, 모든 지역) 및 &lt;code&gt;&quot;zh-Hant-*&quot;&lt;/code&gt; (중국어 번체, 모든 지역)는 확장 된 언어 범위입니다.</target>
        </trans-unit>
        <trans-unit id="1fb8432db4bbea954a98cb622124c212bb94692c" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;Util::getResourceBundle&lt;/code&gt; loads a resource bundle on behalf of the caller. It invokes &lt;code&gt;getCallerClass&lt;/code&gt; to identify the class whose method called &lt;code&gt;Util::getResourceBundle&lt;/code&gt;. Then, it obtains the class loader of that class, and uses the class loader to load the resource bundle. The caller class in this example is &lt;code&gt;MyTool&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;Util::getResourceBundle&lt;/code&gt; 은 호출자를 대신하여 리소스 번들을로드합니다. &lt;code&gt;getCallerClass&lt;/code&gt; 를 호출 하여 메소드가 &lt;code&gt;Util::getResourceBundle&lt;/code&gt; 이라는 클래스를 식별합니다 . 그런 다음 해당 클래스의 클래스 로더를 가져 와서 클래스 로더를 사용하여 리소스 번들을로드합니다. 이 예제에서 호출자 클래스는 &lt;code&gt;MyTool&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="307ac7475a5766fb24af31c365da55c146a7a4e7" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;floorDiv(-4, 3) == -2&lt;/code&gt;, whereas &lt;code&gt;(-4 / 3) == -1&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;floorDiv(-4, 3) == -2&lt;/code&gt; 이지만 &lt;code&gt;(-4 / 3) == -1&lt;/code&gt; -4/3 ) == -1 입니다.</target>
        </trans-unit>
        <trans-unit id="9357617bd335f33004f692f6a9b76c59dbe77c62" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;floorDiv(4, 3) == 1&lt;/code&gt; and &lt;code&gt;(4 / 3) == 1&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;floorDiv(4, 3) == 1&lt;/code&gt; 및 &lt;code&gt;(4 / 3) == 1&lt;/code&gt; 4/3 ) == 1 입니다.</target>
        </trans-unit>
        <trans-unit id="2bb31b06521f7f1a31052bea36561e3ebec1375c" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;unwrap()&lt;/code&gt; will return a &lt;a href=&quot;sslengineresult.status#BUFFER_OVERFLOW&quot;&gt;&lt;code&gt;SSLEngineResult.Status.BUFFER_OVERFLOW&lt;/code&gt;&lt;/a&gt; result if the engine determines that there is not enough destination buffer space available. Applications should call &lt;a href=&quot;sslsession#getApplicationBufferSize()&quot;&gt;&lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt;&lt;/a&gt; and compare that value with the space available in the destination buffer, enlarging the buffer if necessary. Similarly, if &lt;code&gt;unwrap()&lt;/code&gt; were to return a &lt;a href=&quot;sslengineresult.status#BUFFER_UNDERFLOW&quot;&gt;&lt;code&gt;SSLEngineResult.Status.BUFFER_UNDERFLOW&lt;/code&gt;&lt;/a&gt;, the application should call &lt;a href=&quot;sslsession#getPacketBufferSize()&quot;&gt;&lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt;&lt;/a&gt; to ensure that the source buffer has enough room to hold a record (enlarging if necessary), and then obtain more inbound data.</source>
          <target state="translated">예를 들어, 엔진이 사용 가능한 대상 버퍼 공간이 충분하지 않다고 판단하면 &lt;code&gt;unwrap()&lt;/code&gt; 은 &lt;a href=&quot;sslengineresult.status#BUFFER_OVERFLOW&quot;&gt; &lt;code&gt;SSLEngineResult.Status.BUFFER_OVERFLOW&lt;/code&gt; &lt;/a&gt; 결과 를 반환 합니다. 애플리케이션은 &lt;a href=&quot;sslsession#getApplicationBufferSize()&quot;&gt; &lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt; &lt;/a&gt; 호출 하고 해당 값을 대상 버퍼에서 사용 가능한 공간과 비교하여 필요한 경우 버퍼를 확대해야합니다. 마찬가지로 &lt;code&gt;unwrap()&lt;/code&gt; 이 &lt;a href=&quot;sslengineresult.status#BUFFER_UNDERFLOW&quot;&gt; &lt;code&gt;SSLEngineResult.Status.BUFFER_UNDERFLOW&lt;/code&gt; &lt;/a&gt; 를 반환하는 경우 응용 프로그램은 &lt;a href=&quot;sslsession#getPacketBufferSize()&quot;&gt; &lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt; &lt;/a&gt; 를 호출 하여 소스 버퍼에 레코드를 저장할 충분한 공간이 있는지 확인한 다음 (필요한 경우 확대) 더 많은 인바운드 데이터를 가져와야합니다. .</target>
        </trans-unit>
        <trans-unit id="2a3db823fd5d154379db38330c70c6aa05d95a7b" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;unwrap()&lt;/code&gt; will return a &lt;a href=&quot;sslengineresult.status#BUFFER_OVERFLOW&quot;&gt;&lt;code&gt;SSLEngineResult.Status.BUFFER_OVERFLOW&lt;/code&gt;&lt;/a&gt; result if the engine determines that there is not enough destination buffer space available. Applications should call &lt;a href=&quot;sslsession#getApplicationBufferSize--&quot;&gt;&lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt;&lt;/a&gt; and compare that value with the space available in the destination buffer, enlarging the buffer if necessary. Similarly, if &lt;code&gt;unwrap()&lt;/code&gt; were to return a &lt;a href=&quot;sslengineresult.status#BUFFER_UNDERFLOW&quot;&gt;&lt;code&gt;SSLEngineResult.Status.BUFFER_UNDERFLOW&lt;/code&gt;&lt;/a&gt;, the application should call &lt;a href=&quot;sslsession#getPacketBufferSize--&quot;&gt;&lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt;&lt;/a&gt; to ensure that the source buffer has enough room to hold a record (enlarging if necessary), and then obtain more inbound data.</source>
          <target state="translated">예를 들어, 엔진이 사용 가능한 대상 버퍼 공간이 충분하지 않다고 판단하면 &lt;code&gt;unwrap()&lt;/code&gt; 은 &lt;a href=&quot;sslengineresult.status#BUFFER_OVERFLOW&quot;&gt; &lt;code&gt;SSLEngineResult.Status.BUFFER_OVERFLOW&lt;/code&gt; &lt;/a&gt; 결과 를 반환 합니다. 애플리케이션은 &lt;a href=&quot;sslsession#getApplicationBufferSize--&quot;&gt; &lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt; &lt;/a&gt; 호출 하고 해당 값을 대상 버퍼에서 사용 가능한 공간과 비교하여 필요한 경우 버퍼를 확대해야합니다. 마찬가지로 &lt;code&gt;unwrap()&lt;/code&gt; 이 &lt;a href=&quot;sslengineresult.status#BUFFER_UNDERFLOW&quot;&gt; &lt;code&gt;SSLEngineResult.Status.BUFFER_UNDERFLOW&lt;/code&gt; &lt;/a&gt; 를 리턴하는 경우, 애플리케이션은 &lt;a href=&quot;sslsession#getPacketBufferSize--&quot;&gt; &lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt; &lt;/a&gt; 를 호출 하여 소스 버퍼에 레코드를 보유 할 충분한 공간이 있는지 확인하고 (필요한 경우 확대) 더 많은 인바운드 데이터를 확보해야합니다. .</target>
        </trans-unit>
        <trans-unit id="3427a048cebb7d267538d0ecbaae0369b4a34189" translate="yes" xml:space="preserve">
          <source>For example, January 1, 1998 is a Thursday. If &lt;code&gt;
 getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;MONDAY&lt;/code&gt; and &lt;code&gt;
 getMinimalDaysInFirstWeek()&lt;/code&gt; is 4 (ISO 8601 standard compatible setting), then week 1 of 1998 starts on December 29, 1997, and ends on January 4, 1998. The week year is 1998 for the last three days of calendar year 1997. If, however, &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;SUNDAY&lt;/code&gt;, then week 1 of 1998 starts on January 4, 1998, and ends on January 10, 1998; the first three days of 1998 then are part of week 53 of 1997 and their week year is 1997.</source>
          <target state="translated">예를 들어 1998 년 1 월 1 일은 목요일입니다. 경우 &lt;code&gt; getFirstDayOfWeek()&lt;/code&gt; 입니다 &lt;code&gt;MONDAY&lt;/code&gt; 및 &lt;code&gt; getMinimalDaysInFirstWeek()&lt;/code&gt; 4 (ISO 8601 표준 호환 설정)이며, 다음 주 1997년 12월 29일 및 끝에 1998 시작 1 월 4 일 1998 년에 주 년 지난 3 일 동안 1998입니다 그러나 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; 가 &lt;code&gt;SUNDAY&lt;/code&gt; 이면 1998 년의 1주는 1998 년 1 월 4 일에 시작하여 1998 년 1 월 10 일에 끝납니다. 1998 년의 처음 3 일은 1997 년 53 주차의 일부이며 주연도는 1997 년입니다.</target>
        </trans-unit>
        <trans-unit id="1998d630e1504268351aa6615083ecf8974433fd" translate="yes" xml:space="preserve">
          <source>For example, January 1, 1998 is a Thursday. If &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;MONDAY&lt;/code&gt; and &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; is 4 (ISO 8601 standard compatible setting), then week 1 of 1998 starts on December 29, 1997, and ends on January 4, 1998. The week year is 1998 for the last three days of calendar year 1997. If, however, &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;SUNDAY&lt;/code&gt;, then week 1 of 1998 starts on January 4, 1998, and ends on January 10, 1998; the first three days of 1998 then are part of week 53 of 1997 and their week year is 1997.</source>
          <target state="translated">예를 들어, 1998 년 1 월 1 일은 목요일입니다. 경우 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; 입니다 &lt;code&gt;MONDAY&lt;/code&gt; 및 &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; 4 (ISO 8601 표준 호환 설정)이며, 다음 주 1997년 12월 29일 및 끝에 1998 시작 1 월 4 일 1998 년에 주 년 지난 3 일 동안 1998입니다 그러나 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; 가 &lt;code&gt;SUNDAY&lt;/code&gt; 인 경우 1998 년 1 주차는 1998 년 1 월 4 일에 시작하여 1998 년 1 월 10 일에 종료됩니다. 1998 년의 첫 3 일은 1997 년 53 주차에 속하며 그들의 주해는 1997 년입니다.</target>
        </trans-unit>
        <trans-unit id="e092825d8d7d24993000ffbf9f66dd544c8f8c1a" translate="yes" xml:space="preserve">
          <source>For example, Paris is one hour ahead of Greenwich/UTC in winter and two hours ahead in summer. The &lt;code&gt;ZoneId&lt;/code&gt; instance for Paris will reference two &lt;code&gt;ZoneOffset&lt;/code&gt; instances - a &lt;code&gt;+01:00&lt;/code&gt; instance for winter, and a &lt;code&gt;+02:00&lt;/code&gt; instance for summer.</source>
          <target state="translated">예를 들어 파리는 겨울에 그리니치 / UTC보다 1 시간 앞서고 여름에는 2 시간 앞서 있습니다. 파리 의 &lt;code&gt;ZoneId&lt;/code&gt; 인스턴스는 두 개의 &lt;code&gt;ZoneOffset&lt;/code&gt; 인스턴스 ( 겨울의 경우 &lt;code&gt;+01:00&lt;/code&gt; 인스턴스, 여름의 경우 &lt;code&gt;+02:00&lt;/code&gt; 인스턴스)를 참조합니다.</target>
        </trans-unit>
        <trans-unit id="d688f4f440475c5a1db8e0e10b800e36113df212" translate="yes" xml:space="preserve">
          <source>For example, TimeZone.getTimeZone(&quot;GMT-8&quot;).getID() returns &quot;GMT-08:00&quot;.</source>
          <target state="translated">예를 들어 TimeZone.getTimeZone ( &quot;GMT-8&quot;). getID ()는 &quot;GMT-08 : 00&quot;를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="57c7ca5a012c91a082608be74e8403d76eb6feca" translate="yes" xml:space="preserve">
          <source>For example, a 3-banded &lt;code&gt;Raster&lt;/code&gt; might have the following transformation applied to each pixel in order to invert the second band of the &lt;code&gt;Raster&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 3 밴드 &lt;code&gt;Raster&lt;/code&gt; 의 두 번째 대역을 반전하기 위해 각 화소에인가 된 다음 변환있을 &lt;code&gt;Raster&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe9f6aeedfb8de865524def4fbb728eedaecd29c" translate="yes" xml:space="preserve">
          <source>For example, a Start TLS extended request class would need to know how to process a Start TLS extended response. It does this by creating a class that implements ExtendedResponse.</source>
          <target state="translated">예를 들어, Start TLS 확장 요청 클래스는 Start TLS 확장 응답을 처리하는 방법을 알아야합니다. ExtendedResponse를 구현하는 클래스를 작성하여이를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="0c39f664631a0cf28a49a0e35b1cefa452e0a0bb" translate="yes" xml:space="preserve">
          <source>For example, a base value of &lt;code&gt;1980&lt;/code&gt; and a width of &lt;code&gt;2&lt;/code&gt; will have valid values from &lt;code&gt;1980&lt;/code&gt; to &lt;code&gt;2079&lt;/code&gt;. During parsing, the text &lt;code&gt;&quot;12&quot;&lt;/code&gt; will result in the value &lt;code&gt;2012&lt;/code&gt; as that is the value within the range where the last two characters are &quot;12&quot;. By contrast, parsing the text &lt;code&gt;&quot;1915&quot;&lt;/code&gt; will result in the value &lt;code&gt;1915&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 기본 값 &lt;code&gt;1980&lt;/code&gt; 과 너비 &lt;code&gt;2&lt;/code&gt; 는 &lt;code&gt;1980&lt;/code&gt; 에서 &lt;code&gt;2079&lt;/code&gt; 사이의 유효한 값을 갖습니다 . 구문 분석 중 텍스트 &lt;code&gt;&quot;12&quot;&lt;/code&gt; 는 마지막 두 문자가 &quot;12&quot;인 범위 내의 값이므로 &lt;code&gt;2012&lt;/code&gt; 값이됩니다. 반대로 텍스트 &lt;code&gt;&quot;1915&quot;&lt;/code&gt; 를 구문 분석 하면 값이 &lt;code&gt;1915&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="66c71f404fe84e7574fa1935e3403b27fa6ab778" translate="yes" xml:space="preserve">
          <source>For example, a bean which supports named properties would have a two argument method signature for adding a &lt;code&gt;PropertyChangeListener&lt;/code&gt; for a property:</source>
          <target state="translated">예를 들어, 명명 된 속성을 지원하는 Bean에는 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 대한 PropertyChangeListener 를 추가하기위한 두 개의 인수 메소드 서명 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="42cb1eb4764ec3ddad58273862c1d25cfa5133d2" translate="yes" xml:space="preserve">
          <source>For example, a caller can invoke &lt;code&gt;trySetAccessible&lt;/code&gt; on a &lt;code&gt;Method&lt;/code&gt; object for a private instance method &lt;code&gt;p.T::privateMethod&lt;/code&gt; to suppress the checks for Java language access control when the &lt;code&gt;Method&lt;/code&gt; is invoked. If &lt;code&gt;p.T&lt;/code&gt; class is in a different module to the caller and package &lt;code&gt;p&lt;/code&gt; is open to at least the caller's module, the code below successfully sets the &lt;code&gt;accessible&lt;/code&gt; flag to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 호출자는 전용 인스턴스 메소드 &lt;code&gt;p.T::privateMethod&lt;/code&gt; &lt;code&gt;trySetAccessible&lt;/code&gt; 에 대한 &lt;code&gt;Method&lt;/code&gt; 객체에서 trySetAccessible 을 호출 하여 &lt;code&gt;Method&lt;/code&gt; 가 호출 될 때 Java 언어 액세스 제어에 대한 검사를 억제 할 수 있습니다 . 경우 &lt;code&gt;p.T&lt;/code&gt; 클래스가 호출자와 패키지에 다른 모듈에있는 &lt;code&gt;p&lt;/code&gt; 적어도 발신자의 모듈은, 코드가 아래 성공적 설정에 개방 &lt;code&gt;accessible&lt;/code&gt; 에 플래그를 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f98bd693b65418b7676311d076cc95cc65256ecb" translate="yes" xml:space="preserve">
          <source>For example, a caller might bind a printer object with some printer-related attributes.</source>
          <target state="translated">예를 들어, 호출자는 프린터 관련 속성으로 프린터 개체를 바인딩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d94c61f647d454a1fa4c444b818c29312b4a2a0" translate="yes" xml:space="preserve">
          <source>For example, a factory might use the BER encoded data in basic control and return an instance of a VirtualListReplyControl.</source>
          <target state="translated">예를 들어, 팩토리는 기본 제어에서 BER 인코딩 데이터를 사용하고 VirtualListReplyControl의 인스턴스를 리턴 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f4c82aa3549e686137815bb739d3a70a2ae3334" translate="yes" xml:space="preserve">
          <source>For example, a field with the value &lt;code&gt;0.5&lt;/code&gt; annotated by this annotation, should be interpreted as &lt;code&gt;50%&lt;/code&gt; and rendered in a graphical user interface with a percentage sign to avoid confusion with &lt;code&gt;0.005%&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 이 주석으로 주석이 달린 값이 &lt;code&gt;0.5&lt;/code&gt; 인 필드 는 &lt;code&gt;50%&lt;/code&gt; 로 해석되어야하며 &lt;code&gt;0.005%&lt;/code&gt; 와의 혼동을 피하기 위해 백분율 기호가있는 그래픽 사용자 인터페이스에서 렌더링 되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="3fa59bf2661efe7c994e38c7d7b8d6548f8749dc" translate="yes" xml:space="preserve">
          <source>For example, a key set of a &lt;a href=&quot;concurrent/concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt; is a concurrent source. A Spliterator created from the source reports a characteristic of &lt;code&gt;CONCURRENT&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;concurrent/concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; &lt;/a&gt; 의 키 세트 는 동시 소스입니다. 소스에서 생성 된 Spliterator는 &lt;code&gt;CONCURRENT&lt;/code&gt; 의 특성을보고합니다 .</target>
        </trans-unit>
        <trans-unit id="f3bf09d65d1b744736bfff4d727827c030a90735" translate="yes" xml:space="preserve">
          <source>For example, a plugin constructor can call this method to register a listener to listen to the &lt;a href=&quot;jconsolecontext.connectionstate&quot;&gt;&lt;code&gt;connectionState&lt;/code&gt;&lt;/a&gt; property changes and the listener will be added to the &lt;a href=&quot;jconsolecontext#addPropertyChangeListener(java.beans.PropertyChangeListener)&quot;&gt;&lt;code&gt;JConsoleContext&lt;/code&gt;&lt;/a&gt; object when it is available.</source>
          <target state="translated">예를 들어 플러그인 생성자는이 메서드를 호출하여 &lt;a href=&quot;jconsolecontext.connectionstate&quot;&gt; &lt;code&gt;connectionState&lt;/code&gt; &lt;/a&gt; 속성 변경 을 수신하는 리스너를 등록 할 수 있으며 리스너 는 사용 가능할 때 &lt;a href=&quot;jconsolecontext#addPropertyChangeListener(java.beans.PropertyChangeListener)&quot;&gt; &lt;code&gt;JConsoleContext&lt;/code&gt; &lt;/a&gt; 객체에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="b126924e79c2834f2d9a043c26ae9dc7d8a62dfd" translate="yes" xml:space="preserve">
          <source>For example, a provider may supply a subclass of &lt;code&gt;CipherSpi&lt;/code&gt; that implements</source>
          <target state="translated">예를 들어, 제공자는 다음 을 구현 하는 &lt;code&gt;CipherSpi&lt;/code&gt; 의 서브 클래스를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a588ecb609a8731396bc6e7d6ee6ce1237d9150" translate="yes" xml:space="preserve">
          <source>For example, after the following code is executed:</source>
          <target state="translated">예를 들어 다음 코드가 실행 된 후 :</target>
        </trans-unit>
        <trans-unit id="2267a27b43c9dd4b60e4328d79e5f67cbcbd0a30" translate="yes" xml:space="preserve">
          <source>For example, an MBean representing an application's configuration could have attributes representing the different configuration items. Reading the &lt;code&gt;CacheSize&lt;/code&gt; attribute would return the current value of that item. Writing it would update the item, potentially changing the behavior of the running application. An operation such as &lt;code&gt;save&lt;/code&gt; could store the current configuration persistently. A notification such as &lt;code&gt;ConfigurationChangedNotification&lt;/code&gt; could be sent every time the configuration is changed.</source>
          <target state="translated">예를 들어, 애플리케이션의 구성을 나타내는 MBean은 다른 구성 항목을 나타내는 속성을 가질 수 있습니다. &lt;code&gt;CacheSize&lt;/code&gt; 속성을 읽으면 해당 항목의 현재 값이 반환됩니다. 쓰면 항목이 업데이트되어 실행중인 응용 프로그램의 동작이 변경 될 수 있습니다. &lt;code&gt;save&lt;/code&gt; 와 같은 작업 은 현재 구성을 지속적 으로 저장할 수 있습니다. 구성을 변경할 때마다 &lt;code&gt;ConfigurationChangedNotification&lt;/code&gt; 과 같은 알림을 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6bec37e50bd07a7b9a1146826f2b4add33836ad5" translate="yes" xml:space="preserve">
          <source>For example, an address type could be &quot;BSD Printer Address&quot;, which specifies that it is an address to be used with the BSD printing protocol. Its contents could be the machine name identifying the location of the printer server that understands this protocol.</source>
          <target state="translated">예를 들어, 주소 유형은 &quot;BSD 프린터 주소&quot;일 수 있으며, 이는 BSD 인쇄 프로토콜에 사용될 주소임을 지정합니다. 내용은이 프로토콜을 이해하는 프린터 서버의 위치를 ​​식별하는 시스템 이름 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95e1d5796d48a176413567e598e8ec0c386d451c" translate="yes" xml:space="preserve">
          <source>For example, an annotation whose type is meta-annotated with &lt;code&gt;@Target(ElementType.FIELD)&lt;/code&gt; may only be written as a modifier for a field declaration.</source>
          <target state="translated">예를 들어, &lt;code&gt;@Target(ElementType.FIELD)&lt;/code&gt; 로 형식이 주석 처리 된 주석은 필드 선언의 수정 자로 만 작성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a2148da4efe014a9df975d69808a41981018913" translate="yes" xml:space="preserve">
          <source>For example, an annotation whose type is meta-annotated with &lt;code&gt;@Target(ElementType.TYPE_USE)&lt;/code&gt; may be written on the type of a field (or within the type of the field, if it is a nested, parameterized, or array type), and may also appear as a modifier for, say, a class declaration.</source>
          <target state="translated">예를 들어, 형식이 &lt;code&gt;@Target(ElementType.TYPE_USE)&lt;/code&gt; 메타 주석 처리 된 주석은 필드 유형 (또는 중첩, 매개 변수화 또는 배열 유형 인 경우 필드 유형)에 기록 될 수 있습니다. 클래스 선언에 대한 수정 자로 나타날 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3d7fa5f16112c607e685e5e651f88ca7e56d2d8" translate="yes" xml:space="preserve">
          <source>For example, an application could create a network class loader to download class files from a server. Sample code might look like:</source>
          <target state="translated">예를 들어, 응용 프로그램은 서버에서 클래스 파일을 다운로드하기 위해 네트워크 클래스 로더를 작성할 수 있습니다. 샘플 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="52bfe2a8d638a77e4e3824130d95a5f8a374d5d7" translate="yes" xml:space="preserve">
          <source>For example, an application or library gets a SASL client by doing something like:</source>
          <target state="translated">예를 들어, 응용 프로그램 또는 라이브러리는 다음과 같은 작업을 수행하여 SASL 클라이언트를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1828960382a974d4643dd826be7d24df87a13a41" translate="yes" xml:space="preserve">
          <source>For example, an implementation of the &lt;a href=&quot;../../text/spi/dateformatprovider&quot;&gt;&lt;code&gt;DateFormatProvider&lt;/code&gt;&lt;/a&gt; class should take the form of a jar file which contains the file:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;../../text/spi/dateformatprovider&quot;&gt; &lt;code&gt;DateFormatProvider&lt;/code&gt; &lt;/a&gt; 클래스 의 구현은 파일을 포함하는 jar 파일의 형식을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="c4504425379be6e57446a265c161123e2f772abb" translate="yes" xml:space="preserve">
          <source>For example, an instance of &lt;a href=&quot;concurrent/copyonwritearraylist&quot;&gt;&lt;code&gt;CopyOnWriteArrayList&lt;/code&gt;&lt;/a&gt; is an immutable source. A Spliterator created from the source reports a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;concurrent/copyonwritearraylist&quot;&gt; &lt;code&gt;CopyOnWriteArrayList&lt;/code&gt; &lt;/a&gt; 의 인스턴스 는 변경할 수없는 소스입니다. 소스에서 생성 된 Spliterator는 &lt;code&gt;IMMUTABLE&lt;/code&gt; 의 특성을보고합니다 .</target>
        </trans-unit>
        <trans-unit id="4d64ae9863fdb213ccc2efe6d6e0617a30bbaa25" translate="yes" xml:space="preserve">
          <source>For example, an instance of &lt;code&gt;gYear&lt;/code&gt; can be created invoking this factory with &lt;code&gt;month&lt;/code&gt; and &lt;code&gt;day&lt;/code&gt; parameters set to &lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt;&lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;month&lt;/code&gt; 및 &lt;code&gt;day&lt;/code&gt; 매개 변수를 &lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt; &lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt; 로&lt;/a&gt; 설정 하여이 팩토리를 호출하는 &lt;code&gt;gYear&lt;/code&gt; 인스턴스를 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eebff7ebeaf954ec4ab1a27b1905b35bb41b2bae" translate="yes" xml:space="preserve">
          <source>For example, calling &lt;code&gt;ScrollPane.setScrollPosition&lt;/code&gt; and then &lt;code&gt;getScrollPosition&lt;/code&gt; may return an incorrect value if the original request has not yet been processed.</source>
          <target state="translated">예를 들어, 원본 요청이 아직 처리되지 않은 경우 &lt;code&gt;ScrollPane.setScrollPosition&lt;/code&gt; 을 호출 한 다음 &lt;code&gt;getScrollPosition&lt;/code&gt; 을 호출 하면 잘못된 값이 반환 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c49493292c987a394b19f8ed522472d06c5c2f95" translate="yes" xml:space="preserve">
          <source>For example, configuration data for a simple keystore domain comprising three keystores is shown below:</source>
          <target state="translated">예를 들어, 세 개의 키 저장소를 포함하는 단순 키 저장소 도메인의 구성 데이터는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="99107e117c2889e51b14699fb5352bf8f38f4d15" translate="yes" xml:space="preserve">
          <source>For example, consider &lt;code&gt;builder.appendValue(YEAR).appendValue(MONTH_OF_YEAR, 2);&lt;/code&gt; The year is a variable width parse of between 1 and 19 digits. The month is a fixed width parse of 2 digits. Because these were appended to the same builder immediately after one another, the year parser will reserve two digits for the month to parse. Thus, the text '201106' will correctly parse to a year of 2011 and a month of 6. Without adjacent value parsing, the year would greedily parse all six digits and leave nothing for the month.</source>
          <target state="translated">예를 들어 &lt;code&gt;builder.appendValue(YEAR).appendValue(MONTH_OF_YEAR, 2);&lt;/code&gt; 연도는 1에서 19 사이의 가변 너비 구문 분석입니다. 월은 2 자리의 고정 너비 구문 분석입니다. 이것들은 서로 즉시 같은 빌더에 추가되었으므로, 연도 파서는 한 달에 구문 분석 할 두 자리 숫자를 예약합니다. 따라서 '201106'이라는 텍스트는 2011 년과 6 개월로 올바르게 구문 분석됩니다. 인접한 값 구문 분석이 없으면 연도는 6 자리 숫자를 탐욕스럽게 구문 분석하고 해당 월에는 아무 것도 남기지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4eb27e173bb555deeaace6ea758fa2e284bad81e" translate="yes" xml:space="preserve">
          <source>For example, consider a builder setup as &lt;code&gt;builder.appendValue(HOUR_OF_DAY,2).optionalStart().appendValue(MINUTE_OF_HOUR,2).optionalEnd()&lt;/code&gt;. During formatting, the minute will only be output if its value can be obtained from the date-time. During parsing, the input will be successfully parsed whether the minute is present or not.</source>
          <target state="translated">예를 들어 빌더 설정을 &lt;code&gt;builder.appendValue(HOUR_OF_DAY,2).optionalStart().appendValue(MINUTE_OF_HOUR,2).optionalEnd()&lt;/code&gt; . 서식을 지정하는 동안 날짜-시간에서 값을 얻을 수있는 경우에만 분이 출력됩니다. 구문 분석 중에 분이 있는지 여부에 관계없이 입력이 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="bd8dd1ddf4f32aeb5b0a11f4fe5fb43881c7c42d" translate="yes" xml:space="preserve">
          <source>For example, consider a builder setup as &lt;code&gt;builder.appendValue(HOUR_OF_DAY,2).optionalStart().appendValue(MINUTE_OF_HOUR,2)&lt;/code&gt;. The optional section ends automatically at the end of the builder. During formatting, the minute will only be output if its value can be obtained from the date-time. During parsing, the input will be successfully parsed whether the minute is present or not.</source>
          <target state="translated">예를 들어 빌더 설정을 &lt;code&gt;builder.appendValue(HOUR_OF_DAY,2).optionalStart().appendValue(MINUTE_OF_HOUR,2)&lt;/code&gt; . 선택적 섹션은 빌더의 끝에서 자동으로 끝납니다. 서식을 지정하는 동안 날짜-시간에서 값을 얻을 수있는 경우에만 분이 출력됩니다. 구문 분석 중에 분이 있는지 여부에 관계없이 입력이 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="2ef221f9f647dba2a0421f5ea02960bcddf562fa" translate="yes" xml:space="preserve">
          <source>For example, consider a formatter that parses the year, followed by an optional month, with a further optional day-of-month. Using such a formatter would require the calling code to check whether a full date, year-month or just a year had been parsed. This method can be used to default the month and day-of-month to a sensible value, such as the first of the month, allowing the calling code to always get a date.</source>
          <target state="translated">예를 들어, 연도를 구문 분석하고 선택적 월이 추가되는 선택적 포매터가있는 포맷터를 고려하십시오. 이러한 포맷터를 사용하려면 전체 날짜, 연도 또는 단 1 년이 구문 분석되었는지 확인하기 위해 호출 코드가 필요합니다. 이 방법을 사용하면 월과 일을 월의 첫 번째와 같은 합리적인 값으로 기본값을 설정하여 호출 코드가 항상 날짜를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08a27a201770a8b8829db90b4ec6af7aee1a054b" translate="yes" xml:space="preserve">
          <source>For example, consider a time-zone where the spring DST cutover means that the local times 01:00 to 01:59 occur twice changing from offset +02:00 to +01:00.</source>
          <target state="translated">예를 들어, 스프링 DST 컷 오버가 로컬 시간 01:00에서 01:59로 오프셋 +02 : 00에서 +01 : 00로 두 번 변경되는 시간대를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="502bf92ccc45e1f0f6974f47520f50019d3995f1" translate="yes" xml:space="preserve">
          <source>For example, consider a time-zone, such as 'Europe/Paris', where the Autumn DST cutover means that the local times 02:00 to 02:59 occur twice changing from offset +02:00 in summer to +01:00 in winter.</source>
          <target state="translated">예를 들어 'Europe / Paris'와 같은 시간대를 생각해보십시오. 가을 DST 컷 오버는 현지 시간 02:00에서 02:59가 여름의 오프셋 +02 : 00에서 +01 : 00으로 변경되는 두 번 발생 함을 의미합니다. 겨울에.</target>
        </trans-unit>
        <trans-unit id="2d42880f23c0e646f2d4e506ad0e04510090d6f3" translate="yes" xml:space="preserve">
          <source>For example, consider adding a period of one day and a duration of one day to 18:00 on the evening before a daylight savings gap. The &lt;code&gt;Period&lt;/code&gt; will add the conceptual day and result in a &lt;code&gt;ZonedDateTime&lt;/code&gt; at 18:00 the following day. By contrast, the &lt;code&gt;Duration&lt;/code&gt; will add exactly 24 hours, resulting in a &lt;code&gt;ZonedDateTime&lt;/code&gt; at 19:00 the following day (assuming a one hour DST gap).</source>
          <target state="translated">예를 들어, 일광 절약 시간이 끝나기 전에 저녁에 하루의 기간과 하루의 지속 시간을 18:00에 추가하는 것을 고려하십시오. &lt;code&gt;Period&lt;/code&gt; A의 개념 일 및 결과 추가합니다 &lt;code&gt;ZonedDateTime&lt;/code&gt; 다음날 18:00. 반대로, &lt;code&gt;Duration&lt;/code&gt; 은 정확히 24 시간을 추가 하여 다음 날 19:00에 &lt;code&gt;ZonedDateTime&lt;/code&gt; 을 발생 시킵니다 (1 시간 DST 간격을 가정).</target>
        </trans-unit>
        <trans-unit id="68df5296d7673eca3d6b63955d031bc849454994" translate="yes" xml:space="preserve">
          <source>For example, consider the following in Spanish:</source>
          <target state="translated">예를 들어 스페인어로 다음을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="7cb5a4cf14b5c96f0ad5dede731407c75cf7f15a" translate="yes" xml:space="preserve">
          <source>For example, consider the text &quot;abc&quot;. TextHitInfo.trailing(1) corresponds to the right side of the 'b' in the text.</source>
          <target state="translated">예를 들어, 텍스트 &quot;abc&quot;를 고려하십시오. TextHitInfo.trailing (1)은 텍스트에서 'b'의 오른쪽에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="4af7bb1c185aedbecaa994ec6f7728a83767bcac" translate="yes" xml:space="preserve">
          <source>For example, duration of one month normalizes to 31 days given the start time instance &quot;July 8th 2003, 17:40:32&quot;.</source>
          <target state="translated">예를 들어, 한 달의 기간은 시작 시간 인스턴스 &quot;July 8th 2003, 17:40:32&quot;가 주어지면 31 일로 정규화됩니다.</target>
        </trans-unit>
        <trans-unit id="9f37546673d9f0750b6986e9d6915ec5ac72652f" translate="yes" xml:space="preserve">
          <source>For example, even though a value might be a Java String object, its directory syntax might be &quot;Printable String&quot; or &quot;Telephone Number&quot;. Or a value might be a byte array, and its directory syntax is &quot;JPEG&quot; or &quot;Certificate&quot;. For example, if this attribute's syntax is &quot;JPEG&quot;, this method would return the syntax definition for &quot;JPEG&quot;.</source>
          <target state="translated">예를 들어, 값이 Java String 객체 일 수 있지만 디렉토리 구문은 &quot;Printable String&quot;또는 &quot;Telephone Number&quot;일 수 있습니다. 또는 값은 바이트 배열 일 수 있으며 디렉토리 구문은 &quot;JPEG&quot;또는 &quot;Certificate&quot;입니다. 예를 들어,이 속성의 구문이 &quot;JPEG&quot;인 경우이 메소드는 &quot;JPEG&quot;에 대한 구문 정의를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9ce595e1a571880b369b3dfa35a7aa34a29c458b" translate="yes" xml:space="preserve">
          <source>For example, for dynamically-computed call site, a the first argument could be &lt;code&gt;Object&lt;/code&gt; instead of &lt;code&gt;MethodHandles.Lookup&lt;/code&gt;, and the return type could also be &lt;code&gt;Object&lt;/code&gt; instead of &lt;code&gt;CallSite&lt;/code&gt;. (Note that the types and number of the stacked arguments limit the legal kinds of bootstrap methods to appropriately typed static methods and constructors.)</source>
          <target state="translated">예를 들어 동적으로 계산 된 호출 사이트의 경우 첫 번째 인수 는 &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; 대신 &lt;code&gt;Object&lt;/code&gt; 가 될 수 있고 반환 유형 은 &lt;code&gt;CallSite&lt;/code&gt; 대신 &lt;code&gt;Object&lt;/code&gt; 가 될 수도 있습니다 . (스택 된 인수의 유형과 수는 적절한 유형의 정적 메서드 및 생성자에 대한 법적 종류의 부트 스트랩 메서드를 제한합니다.)</target>
        </trans-unit>
        <trans-unit id="a1b86776e44cd97bbaf6958da2a1af7a82be3f3e" translate="yes" xml:space="preserve">
          <source>For example, for dynamically-computed call site, the first argument could be &lt;code&gt;Object&lt;/code&gt; instead of &lt;code&gt;MethodHandles.Lookup&lt;/code&gt;, and the return type could also be &lt;code&gt;Object&lt;/code&gt; instead of &lt;code&gt;CallSite&lt;/code&gt;. (Note that the types and number of the stacked arguments limit the legal kinds of bootstrap methods to appropriately typed static methods and constructors.)</source>
          <target state="translated">예를 들어 동적으로 계산 된 호출 사이트의 경우 첫 번째 인수 는 &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; 대신 &lt;code&gt;Object&lt;/code&gt; 가 될 수 있으며 반환 유형 은 &lt;code&gt;CallSite&lt;/code&gt; 대신 &lt;code&gt;Object&lt;/code&gt; 가 될 수도 있습니다 . (스택 된 인수의 유형과 수는 적절한 유형의 정적 메서드 및 생성자에 대한 합법적 인 종류의 부트 스트랩 메서드를 제한합니다.)</target>
        </trans-unit>
        <trans-unit id="74a4d26cb6efe1f523aa46724f8fb96f7856600d" translate="yes" xml:space="preserve">
          <source>For example, for the Java type &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">예를 들어 Java 유형 &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="24ffbeae9f0f48649ff9382de5a91c3902e5591e" translate="yes" xml:space="preserve">
          <source>For example, given a beanName of &quot;x.y&quot;, Beans.instantiate would first try to read a serialized object from the resource &quot;x/y.ser&quot; and if that failed it would try to load the class &quot;x.y&quot; and create an instance of that class.</source>
          <target state="translated">예를 들어 beanName이 &quot;xy&quot;인 경우 Beans.instantiate는 먼저 &quot;x / y.ser&quot;리소스에서 직렬화 된 객체를 읽으려고 시도하고 실패하면 &quot;xy&quot;클래스를로드하고 인스턴스를 작성합니다. 그 클래스의.</target>
        </trans-unit>
        <trans-unit id="35d92376d82e73bb63b8e40f940e5ec4a077d198" translate="yes" xml:space="preserve">
          <source>For example, given a date in May, the following are output:</source>
          <target state="translated">예를 들어, 5 월의 날짜가 주어지면 다음이 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="ecda29c3f3147c74316769a89dd8f6fe868f7043" translate="yes" xml:space="preserve">
          <source>For example, given a date that is a Wednesday, the following are output:</source>
          <target state="translated">예를 들어, 수요일 인 날짜가 제공되면 다음이 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="c965f7a5f41ce80f1a25cbd34c8d47aad5df9f54" translate="yes" xml:space="preserve">
          <source>For example, given a stream of &lt;code&gt;Person&lt;/code&gt;, to calculate tallest person in each city:</source>
          <target state="translated">예를 들어, &lt;code&gt;Person&lt;/code&gt; 의 스트림이 주어지면 각 도시에서 가장 높은 사람을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="b713374a02cb786860f1fc8ec9775898d60b3245" translate="yes" xml:space="preserve">
          <source>For example, given a stream of &lt;code&gt;Person&lt;/code&gt;, to calculate the longest last name of residents in each city:</source>
          <target state="translated">예를 들어, &lt;code&gt;Person&lt;/code&gt; 이라는 스트림이 주어지면 각 도시에서 가장 긴 주민 이름을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="7e31c382624c9d6b1c417bd25fa1df6a1652aebf" translate="yes" xml:space="preserve">
          <source>For example, here is a ManagedBlocker based on a ReentrantLock:</source>
          <target state="translated">예를 들어, 다음은 ReentrantLock을 기반으로하는 ManagedBlocker입니다.</target>
        </trans-unit>
        <trans-unit id="82156eae8fb0fc5dde9fadba753d71470b6abeef" translate="yes" xml:space="preserve">
          <source>For example, here is an initial version of a class that uses divide-by-two recursive decomposition to divide work into single pieces (leaf tasks). Even when work is split into individual calls, tree-based techniques are usually preferable to directly forking leaf tasks, because they reduce inter-thread communication and improve load balancing. In the recursive case, the second of each pair of subtasks to finish triggers completion of its parent (because no result combination is performed, the default no-op implementation of method &lt;code&gt;onCompletion&lt;/code&gt; is not overridden). A static utility method sets up the base task and invokes it (here, implicitly using the &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">예를 들어, 두 개의 재귀 분해를 사용하여 작업을 단일 조각 (리프 작업)으로 나누는 클래스의 초기 버전이 있습니다. 작업이 개별 호출로 분할 되더라도 트리 기반 기술은 스레드 간 통신을 줄이고로드 밸런싱을 향상시키기 때문에 리프 작업을 직접 포크하는 것보다 일반적으로 선호됩니다. 재귀 적 경우, 각 하위 작업 쌍 중 두 번째 작업을 완료하는 두 번째 작업은 결과 조합이 수행되지 않기 때문에 &lt;code&gt;onCompletion&lt;/code&gt; 메서드의 기본 no-op 구현이 재정의되지 않습니다. 정적 유틸리티 메소드는 기본 태스크를 설정하고이를 호출합니다 (여기서는 암시 적으로 &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="18b23dc8445eab9aeb0ac59b00c49b4df2c79b88" translate="yes" xml:space="preserve">
          <source>For example, here is an initial version of a utility method that uses divide-by-two recursive decomposition to divide work into single pieces (leaf tasks). Even when work is split into individual calls, tree-based techniques are usually preferable to directly forking leaf tasks, because they reduce inter-thread communication and improve load balancing. In the recursive case, the second of each pair of subtasks to finish triggers completion of their parent (because no result combination is performed, the default no-op implementation of method &lt;code&gt;onCompletion&lt;/code&gt; is not overridden). The utility method sets up the root task and invokes it (here, implicitly using the &lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt;). It is straightforward and reliable (but not optimal) to always set the pending count to the number of child tasks and call &lt;code&gt;
 tryComplete()&lt;/code&gt; immediately before returning.</source>
          <target state="translated">예를 들어, 다음은 작업을 단일 조각으로 나누기 위해 2로 나누기 재귀 적 분해를 사용하는 유틸리티 메서드의 초기 버전입니다 (리프 작업). 작업이 개별 호출로 분할 된 경우에도 트리 기반 기술은 일반적으로 리프 작업을 직접 분기하는 것보다 선호됩니다. 이는 스레드 간 통신을 줄이고로드 균형을 개선하기 때문입니다. 재귀적인 경우, 완료 할 각 하위 작업 쌍 중 두 번째는 부모의 완료를 트리거합니다 (결과 조합이 수행되지 않기 때문에 &lt;code&gt;onCompletion&lt;/code&gt; 메서드의 기본 no-op 구현이 재정의되지 않음). 유틸리티 메소드는 루트 태스크를 설정하고 호출합니다 (여기서는 암시 적으로 &lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt; 사용 ).). 항상 보류중인 수를 자식 작업 수로 설정하고 반환하기 직전에 &lt;code&gt; tryComplete()&lt;/code&gt; 호출하는 것이 간단하고 안정적입니다 (최적은 아님) .</target>
        </trans-unit>
        <trans-unit id="85e275d8300f52d19c548442729a421b90979a34" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;baseName&lt;/code&gt; is &lt;code&gt;&quot;baseName&quot;&lt;/code&gt; and &lt;code&gt;locale&lt;/code&gt; is &lt;code&gt;Locale(&quot;ja&quot;,&amp;nbsp;&quot;&quot;,&amp;nbsp;&quot;XX&quot;)&lt;/code&gt;, then &lt;code&gt;&quot;baseName_ja_&amp;thinsp;_XX&quot;&lt;/code&gt; is returned. If the given locale is &lt;code&gt;Locale(&quot;en&quot;)&lt;/code&gt;, then &lt;code&gt;&quot;baseName_en&quot;&lt;/code&gt; is returned.</source>
          <target state="translated">예를 들어 &lt;code&gt;baseName&lt;/code&gt; 이 &lt;code&gt;&quot;baseName&quot;&lt;/code&gt; 이고 &lt;code&gt;locale&lt;/code&gt; 이 &lt;code&gt;Locale(&quot;ja&quot;,&amp;nbsp;&quot;&quot;,&amp;nbsp;&quot;XX&quot;)&lt;/code&gt; 인 경우 &lt;code&gt;&quot;baseName_ja_&amp;thinsp;_XX&quot;&lt;/code&gt; 가 반환됩니다. 지정된 로케일이 &lt;code&gt;Locale(&quot;en&quot;)&lt;/code&gt; 인 경우 &lt;code&gt;&quot;baseName_en&quot;&lt;/code&gt; 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="ae5e4a94ee896495a820fe44097fd53ab44491bb" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;baseName&lt;/code&gt; is &lt;code&gt;&quot;p.resources.Bundle&quot;&lt;/code&gt; then the resource bundle name of &lt;code&gt;&quot;p.resources.Bundle&quot;&lt;/code&gt; of &lt;code&gt;Locale(&quot;ja&quot;, &quot;&quot;, &quot;XX&quot;)&lt;/code&gt; and &lt;code&gt;Locale(&quot;en&quot;)&lt;/code&gt; could be &lt;code&gt;
 &quot;p.resources.ja.Bundle_ja_&amp;thinsp;_XX&quot;&lt;/code&gt; and &lt;code&gt;&quot;p.resources.Bundle_en&quot;&lt;/code&gt; respectively.</source>
          <target state="translated">예를 들어, &lt;code&gt;baseName&lt;/code&gt; 의가 있다 &lt;code&gt;&quot;p.resources.Bundle&quot;&lt;/code&gt; 의 다음 자원 번들 명 &lt;code&gt;&quot;p.resources.Bundle&quot;&lt;/code&gt; 의 &lt;code&gt;Locale(&quot;ja&quot;, &quot;&quot;, &quot;XX&quot;)&lt;/code&gt; 와 &lt;code&gt;Locale(&quot;en&quot;)&lt;/code&gt; 될 수있다 &lt;code&gt; &quot;p.resources.ja.Bundle_ja_&amp;thinsp;_XX&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;p.resources.Bundle_en&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e94ed48679a1350002fbfba72ed6d70a0774deb8" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;com.vendor.VendorJavaCompiler&lt;/code&gt; is a provider of the &lt;code&gt;JavaCompiler&lt;/code&gt; tool then its jar file would contain the file &lt;code&gt;
 META-INF/services/javax.tools.JavaCompiler&lt;/code&gt;. This file would contain the single line:</source>
          <target state="translated">예를 들어, &lt;code&gt;com.vendor.VendorJavaCompiler&lt;/code&gt; 가 &lt;code&gt;JavaCompiler&lt;/code&gt; 도구 의 제공자 인 경우 해당 jar 파일에는 &lt;code&gt; META-INF/services/javax.tools.JavaCompiler&lt;/code&gt; 파일이 포함 됩니다. 이 파일에는 한 줄이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="830d8126196c337be8d88ddce1630721ca654641" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;com.vendor.VendorJavaCompiler&lt;/code&gt; is a provider of the &lt;code&gt;JavaCompiler&lt;/code&gt; tool then its jar file would contain the file &lt;code&gt;META-INF/services/javax.tools.JavaCompiler&lt;/code&gt;. This file would contain the single line:</source>
          <target state="translated">예를 들어 &lt;code&gt;com.vendor.VendorJavaCompiler&lt;/code&gt; 가 &lt;code&gt;JavaCompiler&lt;/code&gt; 도구 의 제공자 인 경우 해당 jar 파일에는 &lt;code&gt;META-INF/services/javax.tools.JavaCompiler&lt;/code&gt; 파일이 포함 됩니다. 이 파일에는 한 줄이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="3a67cf7851c6b086e93044a3d3dddc5b85bcbeab" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;from&lt;/code&gt; was located at bank number 2, program number 11, remapping causes that bank and program location to be occupied instead by &lt;code&gt;to&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;from&lt;/code&gt; 은행 프로그램 위치를 대신하여 점유되는 것이 원인 리매핑 뱅크 번호 2, 프로그램 번호 11에있는 경우 &lt;code&gt;to&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="899a0fe3dc85838c3957e2652979a348ab972b1e" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;SUNDAY&lt;/code&gt; and &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; is 4, then the first week of January 1998 is Sunday, January 4 through Saturday, January 10. These days have a &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; of 1. Thursday, January 1 through Saturday, January 3 have a &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; of 0. If &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; is changed to 3, then January 1 through January 3 have a &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; of 1.</source>
          <target state="translated">예를 들어, &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; 가 &lt;code&gt;SUNDAY&lt;/code&gt; 이고 &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; 가 4 인 경우 1998 년 1 월 첫주는 1 월 4 일부터 1 월 10 일 토요일까지입니다.이 요일의 &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; 는 1입니다. 1 월 1 일 ~ 1 월 토요일 3의 &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; 는 0입니다. &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; 가 3으로 변경되면 1 월 1 일부터 1 월 3 일까지 &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; 는 1입니다.</target>
        </trans-unit>
        <trans-unit id="cb253ab77f0e4e443fb7be6278c680bfc999539d" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;z&lt;/code&gt; refers to a string buffer object whose current contents are &lt;code&gt;&quot;start&quot;&lt;/code&gt;, then the method call &lt;code&gt;z.append(&quot;le&quot;)&lt;/code&gt; would cause the string buffer to contain &lt;code&gt;&quot;startle&quot;&lt;/code&gt;, whereas &lt;code&gt;z.insert(4, &quot;le&quot;)&lt;/code&gt; would alter the string buffer to contain &lt;code&gt;&quot;starlet&quot;&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;z&lt;/code&gt; 그의 현재 내용되는 문자열 버퍼 개체를 지칭 &lt;code&gt;&quot;start&quot;&lt;/code&gt; , 방법 호출 &lt;code&gt;z.append(&quot;le&quot;)&lt;/code&gt; 포함하는 문자열 버퍼를 야기 &lt;code&gt;&quot;startle&quot;&lt;/code&gt; 하는 반면, &lt;code&gt;z.insert(4, &quot;le&quot;)&lt;/code&gt; 은 &lt;code&gt;&quot;starlet&quot;&lt;/code&gt; 을 포함하도록 문자열 버퍼를 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="e17dfa1bfe4e57090ded791b7e9e279a25dffa9a" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;z&lt;/code&gt; refers to a string builder object whose current contents are &quot;&lt;code&gt;start&lt;/code&gt;&quot;, then the method call &lt;code&gt;z.append(&quot;le&quot;)&lt;/code&gt; would cause the string builder to contain &quot;&lt;code&gt;startle&lt;/code&gt;&quot;, whereas &lt;code&gt;z.insert(4, &quot;le&quot;)&lt;/code&gt; would alter the string builder to contain &quot;&lt;code&gt;starlet&lt;/code&gt;&quot;.</source>
          <target state="translated">예를 들어, &lt;code&gt;z&lt;/code&gt; 가 현재 컨텐츠가 &quot; &lt;code&gt;start&lt;/code&gt; &quot; 인 문자열 빌더 오브젝트를 참조하는 경우 &lt;code&gt;z.append(&quot;le&quot;)&lt;/code&gt; 메소드 호출로 인해 문자열 빌더에 &quot; &lt;code&gt;startle&lt;/code&gt; &quot; 이 포함 되지만 &lt;code&gt;z.insert(4, &quot;le&quot;)&lt;/code&gt; 는&quot; &lt;code&gt;starlet&lt;/code&gt; &quot; 을 포함하도록 문자열 빌더를 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="547c3c9ef6a5b6ebe0e6555d8b1a531ba67282a4" translate="yes" xml:space="preserve">
          <source>For example, if a &lt;code&gt;MouseListener&lt;/code&gt; has been added to a component, or &lt;code&gt;enableEvents(AWTEvent.MOUSE_EVENT_MASK)&lt;/code&gt; has been invoked, then all the events defined by &lt;code&gt;MouseListener&lt;/code&gt; are dispatched to the component. On the other hand, if a &lt;code&gt;MouseMotionListener&lt;/code&gt; has not been added and &lt;code&gt;enableEvents&lt;/code&gt; has not been invoked with &lt;code&gt;AWTEvent.MOUSE_MOTION_EVENT_MASK&lt;/code&gt;, then mouse motion events are not dispatched to the component. Instead the mouse motion events are dispatched to the first ancestors that has enabled mouse motion events.</source>
          <target state="translated">예를 들어 &lt;code&gt;MouseListener&lt;/code&gt; 가 구성 요소에 추가되었거나 &lt;code&gt;enableEvents(AWTEvent.MOUSE_EVENT_MASK)&lt;/code&gt; 가 호출 된 경우 &lt;code&gt;MouseListener&lt;/code&gt; 에서 정의한 모든 이벤트 가 구성 요소로 전달됩니다. 반면 &lt;code&gt;MouseMotionListener&lt;/code&gt; 가 추가 되지 않았고 &lt;code&gt;AWTEvent.MOUSE_MOTION_EVENT_MASK&lt;/code&gt; 로 &lt;code&gt;enableEvents&lt;/code&gt; 가 호출되지 않은 경우 마우스 모션 이벤트가 구성 요소로 전달되지 않습니다. 대신 마우스 모션 이벤트가 마우스 모션 이벤트를 활성화 한 첫 번째 조상에게 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="710d856edbf8bf84aeb5220900f3b61fda35b993" translate="yes" xml:space="preserve">
          <source>For example, if a Language Priority List consists of two language ranges, &lt;code&gt;&quot;zh-Hant-TW&quot;&lt;/code&gt; and &lt;code&gt;&quot;en-US&quot;&lt;/code&gt;, in prioritized order, lookup method progressively searches the language tags below in order to find the best matching language tag.</source>
          <target state="translated">예를 들어 언어 우선 순위 목록이 &lt;code&gt;&quot;zh-Hant-TW&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;en-US&quot;&lt;/code&gt; 라는 두 가지 언어 범위로 구성된 경우 우선 순위가 높은 언어 태그를 찾기 위해 아래의 언어 태그를 순차적으로 검색합니다.</target>
        </trans-unit>
        <trans-unit id="53695bf5cdd86be952751803915692383845fafa" translate="yes" xml:space="preserve">
          <source>For example, if a URI and local name were obtained from an element defined with &amp;lt;xyz:foo xmlns:xyz=&quot;http://xyz.foo.com/yada/baz.html&quot;/&amp;gt;, then the Qualified Name would be &quot;{http://xyz.foo.com/yada/baz.html}foo&quot;. Note that the prefix is lost.</source>
          <target state="translated">예를 들어 &amp;lt;xyz : foo xmlns : xyz = &quot;http://xyz.foo.com/yada/baz.html&quot;/&amp;gt;로 정의 된 요소에서 URI 및 로컬 이름을 가져온 경우 정규화 된 이름은 다음과 같습니다. &quot;{http://xyz.foo.com/yada/baz.html}foo&quot;. 접두사는 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="c282276491a44688232676e097fd20aa874468e4" translate="yes" xml:space="preserve">
          <source>For example, if a URI and local name were obtained from an element defined with &amp;lt;xyz:foo xmlns:xyz=&quot;http://xyz.foo.com/yada/baz.html&quot;/&amp;gt;, then the qualified name would be &quot;{http://xyz.foo.com/yada/baz.html}foo&quot;. Note that no prefix is used.</source>
          <target state="translated">예를 들어 &amp;lt;xyz : foo xmlns : xyz = &quot;http://xyz.foo.com/yada/baz.html&quot;/&amp;gt;로 정의 된 요소에서 URI 및 로컬 이름을 얻은 경우 정규화 된 이름은 다음과 같습니다. &quot;{http://xyz.foo.com/yada/baz.html}foo&quot;. 접두사는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="37ee5516da7948e7d83ec435b55ced0c950b2636" translate="yes" xml:space="preserve">
          <source>For example, if a response header instance contains one key &quot;HeaderName&quot; with two values &quot;value1 and value2&quot; then this object is output as two header lines:</source>
          <target state="translated">예를 들어, 응답 헤더 인스턴스에 &quot;value1 및 value2&quot;값이 두 개인 &quot;HeaderName&quot;키 하나가 포함 된 경우이 개체는 두 개의 헤더 행으로 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="d721c1b03d9d14a9e4cf807cebbec792a07dec1f" translate="yes" xml:space="preserve">
          <source>For example, if a target class defines:</source>
          <target state="translated">예를 들어, 대상 클래스가 다음을 정의하는 경우 :</target>
        </trans-unit>
        <trans-unit id="c4ddb7bd9c556e0ea81e6d434c0f8f6fb2342bb1" translate="yes" xml:space="preserve">
          <source>For example, if a user's Language Priority List consists of five language ranges (&lt;code&gt;&quot;zh&quot;&lt;/code&gt;, &lt;code&gt;&quot;zh-CN&quot;&lt;/code&gt;, &lt;code&gt;&quot;en&quot;&lt;/code&gt;, &lt;code&gt;&quot;zh-TW&quot;&lt;/code&gt;, and &lt;code&gt;&quot;zh-HK&quot;&lt;/code&gt;), the newly generated Language Priority List which is customized using the above map example will consists of &lt;code&gt;&quot;zh&quot;&lt;/code&gt;, &lt;code&gt;&quot;zh-Hans&quot;&lt;/code&gt;, &lt;code&gt;&quot;zh-CN&quot;&lt;/code&gt;, &lt;code&gt;&quot;zh-Hans-CN&quot;&lt;/code&gt;, &lt;code&gt;&quot;en&quot;&lt;/code&gt;, &lt;code&gt;&quot;zh-TW&quot;&lt;/code&gt;, and &lt;code&gt;&quot;zh-HK&quot;&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 사용자의 언어 우선 순위 목록이 5 개의 언어 범위 ( &lt;code&gt;&quot;zh&quot;&lt;/code&gt; , &lt;code&gt;&quot;zh-CN&quot;&lt;/code&gt; , &lt;code&gt;&quot;en&quot;&lt;/code&gt; , &lt;code&gt;&quot;zh-TW&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;zh-HK&quot;&lt;/code&gt; )로 구성된 경우 새로 생성 된 언어 우선 순위 목록 &lt;code&gt;&quot;zh&quot;&lt;/code&gt; , &lt;code&gt;&quot;zh-Hans&quot;&lt;/code&gt; , &lt;code&gt;&quot;zh-CN&quot;&lt;/code&gt; , &lt;code&gt;&quot;zh-Hans-CN&quot;&lt;/code&gt; , &lt;code&gt;&quot;en&quot;&lt;/code&gt; , &lt;code&gt;&quot;zh-TW&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;zh-HK&quot;&lt;/code&gt; 로 구성된 위의지도 예제를 사용하여 사용자 정의됩니다. .</target>
        </trans-unit>
        <trans-unit id="dccca141c8e739b24a4309512cb89730110c45cb" translate="yes" xml:space="preserve">
          <source>For example, if one adds two keys &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; such that &lt;code&gt;(!a.equals(b) &amp;amp;&amp;amp; a.compareTo(b) == 0)&lt;/code&gt; to a sorted set that does not use an explicit comparator, the second &lt;code&gt;add&lt;/code&gt; operation returns false (and the size of the sorted set does not increase) because &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are equivalent from the sorted set's perspective.</source>
          <target state="translated">예를 들어, 한 개의 키를 추가하면 및 &lt;code&gt;b&lt;/code&gt; 되도록 &lt;code&gt;(!a.equals(b) &amp;amp;&amp;amp; a.compareTo(b) == 0)&lt;/code&gt; 명시 비교기를 사용하지 않는 정렬 된 세트에, 제 &lt;code&gt;add&lt;/code&gt; 동작 오류를 반환 &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 가 정렬 된 세트의 관점과 동일 하기 때문에 정렬 된 세트의 크기가 증가하지 않습니다 . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9281b71706921b868196d03b533cffbd112d303a" translate="yes" xml:space="preserve">
          <source>For example, if the &lt;code&gt;JMXServiceURL&lt;/code&gt; is:</source>
          <target state="translated">예를 들어, &lt;code&gt;JMXServiceURL&lt;/code&gt; 이 다음 과 같은 경우</target>
        </trans-unit>
        <trans-unit id="8b529e25ea8f5209f163d42a160cb2fc30151d43" translate="yes" xml:space="preserve">
          <source>For example, if the Cipher is initialized for decryption, the CipherInputStream will attempt to read in data and decrypt them, before returning the decrypted data.</source>
          <target state="translated">예를 들어, 암호가 해독을 위해 초기화 된 경우 CipherInputStream은 해독 된 데이터를 반환하기 전에 데이터를 읽고 해독하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="7724368f3e485ffdfec604e01e07ff3df51b34fc" translate="yes" xml:space="preserve">
          <source>For example, if the Gregorian change date is January 10, 1970 and the date of this &lt;code&gt;GregorianCalendar&lt;/code&gt; is January 20, 1970, the actual minimum value of the &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; field is 10 because the previous date of January 10, 1970 is December 27, 1996 (in the Julian calendar). Therefore, December 28, 1969 to January 9, 1970 don't exist.</source>
          <target state="translated">그레고리력 변경 날짜가 1970 년 1 월 10 일로,이며,이 날짜 예를 들어, &lt;code&gt;GregorianCalendar&lt;/code&gt; 와는 1970 년 1 월 20,의 실제 최소 값 &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; 의 1970 년 1 월 10 일로, 이전 날짜가 1996 년 12 월 27 일 (때문에 필드 10 율리우스 력에서). 따라서 1969 년 12 월 28 일부터 1970 년 1 월 9 일까지는 존재하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e8447515f016fd7e843ce62844c4f2eb71755b43" translate="yes" xml:space="preserve">
          <source>For example, if the an element is removed from it's parent, this method should report that the parent changed and provide an ElementChange implementation that describes the change to the parent. If the child element removed had children, these elements do not need to be reported as removed.</source>
          <target state="translated">예를 들어, 요소가 부모에서 제거 된 경우이 메서드는 부모가 변경되었음을보고하고 부모에 대한 변경을 설명하는 ElementChange 구현을 제공해야합니다. 제거 된 자식 요소에 자식이있는 경우 이러한 요소는 제거 된 것으로보고 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="33aa87758d6fb8746e61cd5b9e96eee72ff67fdd" translate="yes" xml:space="preserve">
          <source>For example, if the cipher is initialized for encryption, the CipherOutputStream will attempt to encrypt data before writing out the encrypted data.</source>
          <target state="translated">예를 들어, 암호화가 암호화를 위해 초기화 된 경우 CipherOutputStream은 암호화 된 데이터를 쓰기 전에 데이터 암호화를 시도합니다.</target>
        </trans-unit>
        <trans-unit id="1479475ea5c9bec50119b10a7a4c2d86c208fd36" translate="yes" xml:space="preserve">
          <source>For example, if the first day-of-week is Sunday, then that will have the value 1, with other days ranging from Monday as 2 to Saturday as 7.</source>
          <target state="translated">예를 들어, 첫 번째 요일이 일요일이면 1의 값을 가지며 다른 요일은 월요일부터 2 일부터 토요일까지 7입니다.</target>
        </trans-unit>
        <trans-unit id="b4895bff52e5cdcffa088092aeb0f239bdd75672" translate="yes" xml:space="preserve">
          <source>For example, if the first mouse button is pressed, events are sent in the following order:</source>
          <target state="translated">예를 들어 첫 번째 마우스 버튼을 누르면 이벤트가 다음 순서로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="a2f2eb4c48388118ea43438f47cc5002b3188b1b" translate="yes" xml:space="preserve">
          <source>For example, if the following is specified in the property:</source>
          <target state="translated">예를 들어, 특성에 다음이 지정된 경우 :</target>
        </trans-unit>
        <trans-unit id="9a6f20f96d154000d074240aaa31c798fdc07419" translate="yes" xml:space="preserve">
          <source>For example, if the fully-qualified name of the class that implements &lt;code&gt;java.awt.im.spi.InputMethodDesciptor&lt;/code&gt; for the &lt;em&gt;Foo&lt;/em&gt; input method is &lt;code&gt;com.sun.ime.FooInputMethodDescriptor&lt;/code&gt;, the file &lt;code&gt;META-INF/services/java.awt.im.spi.InputMethodDescriptor&lt;/code&gt; contains a line:</source>
          <target state="translated">예를 들어, &lt;em&gt;Foo&lt;/em&gt; 입력 &lt;code&gt;java.awt.im.spi.InputMethodDesciptor&lt;/code&gt; 대해 java.awt.im.spi.InputMethodDesciptor 를 구현하는 클래스의 완전한 이름 이 &lt;code&gt;com.sun.ime.FooInputMethodDescriptor&lt;/code&gt; 인 경우 파일 &lt;code&gt;META-INF/services/java.awt.im.spi.InputMethodDescriptor&lt;/code&gt; 에는 다음 행이 포함됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0d7d62e74d7435814a6cf38d36bfaaf109d9a51" translate="yes" xml:space="preserve">
          <source>For example, if the given &lt;code&gt;baseName&lt;/code&gt; is &quot;Messages&quot; and the given &lt;code&gt;locale&lt;/code&gt; is &lt;code&gt;Locale(&quot;ja&quot;,&amp;nbsp;&quot;&quot;,&amp;nbsp;&quot;XX&quot;)&lt;/code&gt;, then a &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;Locale&lt;/code&gt;s:</source>
          <target state="translated">예를 들어, 지정된 &lt;code&gt;baseName&lt;/code&gt; 이 &quot;Messages&quot;이고 지정된 &lt;code&gt;locale&lt;/code&gt; 이 &lt;code&gt;Locale(&quot;ja&quot;,&amp;nbsp;&quot;&quot;,&amp;nbsp;&quot;XX&quot;)&lt;/code&gt; 인 경우 &lt;code&gt;Locale&lt;/code&gt; &lt;code&gt;List&lt;/code&gt; 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="60cd652c0516c6edb966a6f2150f2e358c4fe8b3" translate="yes" xml:space="preserve">
          <source>For example, if the list() is returning only a partial answer, the corresponding exception would be PartialResultException. list() would first return a NamingEnumeration. When the last of the results has been returned by the NamingEnumeration's next(), invoking hasMore() would result in PartialResultException being thrown.</source>
          <target state="translated">예를 들어 list ()가 부분 응답 만 반환하는 경우 해당 예외는 PartialResultException입니다. list ()는 먼저 NamingEnumeration을 반환합니다. NamingEnumeration의 next ()에 의해 최종 결과가 반환 된 경우 hasMore ()를 호출하면 PartialResultException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cf271c5db83413140525b967e8a237980c46cf6f" translate="yes" xml:space="preserve">
          <source>For example, if the mask is &lt;code&gt;'(###) ###-####'&lt;/code&gt;, the current value is &lt;code&gt;'(415) 555-1212'&lt;/code&gt;, and &lt;code&gt;valueContainsLiteralCharacters&lt;/code&gt; is true &lt;code&gt;stringToValue&lt;/code&gt; will return &lt;code&gt;'(415) 555-1212'&lt;/code&gt;. On the other hand, if &lt;code&gt;valueContainsLiteralCharacters&lt;/code&gt; is false, &lt;code&gt;stringToValue&lt;/code&gt; will return &lt;code&gt;'4155551212'&lt;/code&gt;.</source>
          <target state="translated">예를 들어 마스크가 &lt;code&gt;'(###) ###-####'&lt;/code&gt; 이면 현재 값은 &lt;code&gt;'(415) 555-1212'&lt;/code&gt; 이고 &lt;code&gt;valueContainsLiteralCharacters&lt;/code&gt; 가 true이면 &lt;code&gt;stringToValue&lt;/code&gt; 는 &lt;code&gt;'(415) 555-1212'&lt;/code&gt; 반환합니다. ' . 반면에 &lt;code&gt;valueContainsLiteralCharacters&lt;/code&gt; 가 false이면 &lt;code&gt;stringToValue&lt;/code&gt; 는 &lt;code&gt;'4155551212'&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="331dbdc8afa3ed2fafd4f2269cdca47bfcf3b063" translate="yes" xml:space="preserve">
          <source>For example, if the scheme id is &quot;ldap&quot;, and the &lt;code&gt;Context.URL_PKG_PREFIXES&lt;/code&gt; property contains &quot;com.widget:com.wiz.jndi&quot;, the naming manager would attempt to load the following classes until one is successfully instantiated:</source>
          <target state="translated">예를 들어, 스키마 ID가 &quot;ldap&quot;이고 &lt;code&gt;Context.URL_PKG_PREFIXES&lt;/code&gt; 속성에 &quot;com.widget : com.wiz.jndi&quot;가 포함되어 있으면 명명 관리자는 인스턴스가 성공적으로 인스턴스화 될 때까지 다음 클래스를로드하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="9946384c3fd6b072df324bd1293690a1c0583c54" translate="yes" xml:space="preserve">
          <source>For example, if the selection is being updated in response to a user drag, this property can be set to &lt;code&gt;true&lt;/code&gt; when the drag is initiated and set to &lt;code&gt;false&lt;/code&gt; when the drag is finished. During the drag, listeners receive events with a &lt;code&gt;valueIsAdjusting&lt;/code&gt; property set to &lt;code&gt;true&lt;/code&gt;. At the end of the drag, when the change is finalized, listeners receive an event with the value set to &lt;code&gt;false&lt;/code&gt;. Listeners can use this pattern if they wish to update only when a change has been finalized.</source>
          <target state="translated">예를 들어, 사용자 드래그에 대한 응답으로 선택 항목이 업데이트되는 경우 드래그가 시작되면 이 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정 하고 드래그가 완료되면 &lt;code&gt;false&lt;/code&gt; 로 설정할 수 있습니다. 드래그하는 동안 리스너는 &lt;code&gt;valueIsAdjusting&lt;/code&gt; 속성이 &lt;code&gt;true&lt;/code&gt; 로 설정된 이벤트를받습니다 . 드래그가 끝나면 변경이 완료되면 리스너는 값이 &lt;code&gt;false&lt;/code&gt; 로 설정된 이벤트를 수신합니다 . 리스너는 변경이 완료된 경우에만 업데이트하려는 경우이 패턴을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a5af4fc040f0ce0de3df6b5ef5d4bd424a6f4cf" translate="yes" xml:space="preserve">
          <source>For example, if the setting descriptor represents a percentage, then &lt;code&gt;&quot;jdk.jfr.Percentage&quot;&lt;/code&gt; hints to a client that a value of &quot;0.5&quot; is formatted as &quot;50%&quot;.</source>
          <target state="translated">예를 들어, 설정 설명자가 백분율을 나타내는 경우 &lt;code&gt;&quot;jdk.jfr.Percentage&quot;&lt;/code&gt; 는 &quot;0.5&quot;값이 &quot;50 %&quot;로 형식화되었음을 클라이언트에 힌트합니다.</target>
        </trans-unit>
        <trans-unit id="d410392dee140daf0f08572b9afdeaf55f6469ad" translate="yes" xml:space="preserve">
          <source>For example, if the user presses &lt;b&gt;button 1&lt;/b&gt; followed by &lt;b&gt;button 2&lt;/b&gt;, and then releases them in the same order, the following sequence of events is generated:</source>
          <target state="translated">예를 들어, 사용자가 &lt;b&gt;버튼 1&lt;/b&gt; 다음에 &lt;b&gt;버튼 2&lt;/b&gt; 를 &lt;b&gt;눌렀다&lt;/b&gt; 가 같은 순서로 놓으면 다음과 같은 일련의 이벤트가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="46297070dbcf189b984984a0a199e305142ec624" translate="yes" xml:space="preserve">
          <source>For example, if the val is &quot;Sue, Grabbit and Runn&quot;, the escaped value returned by this method is &quot;Sue\, Grabbit and Runn&quot;.</source>
          <target state="translated">예를 들어, val이 &quot;Sue, Grabbit and Runn&quot;인 경우이 메소드가 리턴 한 이스케이프 된 값은 &quot;Sue \, Grabbit 및 Runn&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="4bd1055cc9f89a1e5bd1d53415f67354b34766c2" translate="yes" xml:space="preserve">
          <source>For example, if the value descriptor's type is &lt;code&gt;float&lt;/code&gt; and the event value is &lt;code&gt;0.5f&lt;/code&gt;, a content type of &lt;code&gt;&quot;jdk.jfr.Percentage&quot;&lt;/code&gt; hints to a client that the value is a percentage and that it should be rendered as &lt;code&gt;&quot;50%&quot;&lt;/code&gt;.</source>
          <target state="translated">예를 들어 값 설명 자의 유형이 &lt;code&gt;float&lt;/code&gt; 이고 이벤트 값이 &lt;code&gt;0.5f&lt;/code&gt; 인 경우 &lt;code&gt;&quot;jdk.jfr.Percentage&quot;&lt;/code&gt; 의 콘텐츠 유형은 값이 백분율이며 &lt;code&gt;&quot;50%&quot;&lt;/code&gt; 로 렌더링되어야 함을 클라이언트에 알립니다. .</target>
        </trans-unit>
        <trans-unit id="1354cf34e1ac70df7295a90262b1d890c1d1c39d" translate="yes" xml:space="preserve">
          <source>For example, if this &lt;code&gt;Calendar&lt;/code&gt; is a &lt;code&gt;GregorianCalendar&lt;/code&gt; and its date is 2005-01-01, then the string representation of the &lt;a href=&quot;#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field would be &quot;January&quot; in the long style in an English locale or &quot;Jan&quot; in the short style. However, no string representation would be available for the &lt;a href=&quot;#DAY_OF_MONTH&quot;&gt;&lt;code&gt;DAY_OF_MONTH&lt;/code&gt;&lt;/a&gt; field, and this method would return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">예를 들어,이 &lt;code&gt;Calendar&lt;/code&gt; 이 &lt;code&gt;GregorianCalendar&lt;/code&gt; 이고 날짜가 2005-01-01 인 경우 &lt;a href=&quot;#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt; 필드 의 문자열 표현은 영어 로케일의 긴 스타일에서 &quot;January&quot;, 짧은 스타일에서 &quot;Jan&quot;이됩니다. 그러나 &lt;a href=&quot;#DAY_OF_MONTH&quot;&gt; &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; &lt;/a&gt; 필드 에는 문자열 표현을 사용할 수 없으며이 메서드는 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="9d08c542a01363da65f25cae9dcf86b3ab527e74" translate="yes" xml:space="preserve">
          <source>For example, if this &lt;code&gt;Calendar&lt;/code&gt; is a &lt;code&gt;GregorianCalendar&lt;/code&gt; and its date is 2005-01-01, then the string representation of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field would be &quot;January&quot; in the long style in an English locale or &quot;Jan&quot; in the short style. However, no string representation would be available for the &lt;a href=&quot;calendar#DAY_OF_MONTH&quot;&gt;&lt;code&gt;DAY_OF_MONTH&lt;/code&gt;&lt;/a&gt; field, and this method would return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">예를 들어,이 &lt;code&gt;Calendar&lt;/code&gt; 이 &lt;code&gt;GregorianCalendar&lt;/code&gt; 이고 날짜가 2005-01-01 인 경우 &lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt; 필드 의 문자열 표현은 영어 로케일에서 긴 스타일에서 &quot;1 월&quot;이거나 짧은 스타일에서 &quot;Jan&quot;입니다. 그러나 &lt;a href=&quot;calendar#DAY_OF_MONTH&quot;&gt; &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; &lt;/a&gt; 필드에 사용 가능한 문자열 표현이 없으며이 메소드는 &lt;code&gt;null&lt;/code&gt; 을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="f3f8dec20a3958e1902910e524d78edacaf8262f" translate="yes" xml:space="preserve">
          <source>For example, if this &lt;code&gt;GregorianCalendar&lt;/code&gt;'s date is December 31, 2008 with &lt;a href=&quot;#iso8601_compatible_setting&quot;&gt;the ISO 8601 compatible setting&lt;/a&gt;, this method will return 53 for the period: December 29, 2008 to January 3, 2010 while &lt;a href=&quot;#getActualMaximum(int)&quot;&gt;&lt;code&gt;getActualMaximum(WEEK_OF_YEAR)&lt;/code&gt;&lt;/a&gt; will return 52 for the period: December 31, 2007 to December 28, 2008.</source>
          <target state="translated">예를 &lt;code&gt;GregorianCalendar&lt;/code&gt; 의 날짜가 &lt;a href=&quot;#iso8601_compatible_setting&quot;&gt;ISO 8601 호환 설정으로&lt;/a&gt; 2008 년 12 월 31 일인 경우이 메서드는 2008 년 12 월 29 일부터 2010 년 1 월 3 일까지 기간 동안 53을 반환하고 &lt;a href=&quot;#getActualMaximum(int)&quot;&gt; &lt;code&gt;getActualMaximum(WEEK_OF_YEAR)&lt;/code&gt; &lt;/a&gt; 은 해당 기간 동안 52를 반환합니다. : 2007 년 12 월 31 일 ~ 2008 년 12 월 28 일</target>
        </trans-unit>
        <trans-unit id="3643c6484340ffe26a21c4d8fab930e16ffe032d" translate="yes" xml:space="preserve">
          <source>For example, if this &lt;code&gt;GregorianCalendar&lt;/code&gt;'s date is December 31, 2008 with &lt;a href=&quot;#iso8601_compatible_setting&quot;&gt;the ISO 8601 compatible setting&lt;/a&gt;, this method will return 53 for the period: December 29, 2008 to January 3, 2010 while &lt;a href=&quot;gregoriancalendar#getActualMaximum-int-&quot;&gt;&lt;code&gt;getActualMaximum(WEEK_OF_YEAR)&lt;/code&gt;&lt;/a&gt; will return 52 for the period: December 31, 2007 to December 28, 2008.</source>
          <target state="translated">예를 들어,이 &lt;code&gt;GregorianCalendar&lt;/code&gt; 날짜가 &lt;a href=&quot;#iso8601_compatible_setting&quot;&gt;ISO 8601 호환 설정으로&lt;/a&gt; 2008 년 12 월 31 일인 경우이 메소드는 2008 년 12 월 29 일부터 2010 년 1 월 3 일까지 53을 리턴하고 &lt;a href=&quot;gregoriancalendar#getActualMaximum-int-&quot;&gt; &lt;code&gt;getActualMaximum(WEEK_OF_YEAR)&lt;/code&gt; &lt;/a&gt; 은 52를 리턴합니다. : 2007 년 12 월 31 일 ~ 2008 년 12 월 28 일</target>
        </trans-unit>
        <trans-unit id="e16d20b9efdce35bec0d0944cd28ae28c29420bc" translate="yes" xml:space="preserve">
          <source>For example, if this context is named &quot;wiz.com&quot; relative to the initial context, then</source>
          <target state="translated">예를 들어이 컨텍스트의 이름이 초기 컨텍스트와 관련하여 &quot;wiz.com&quot;인 경우</target>
        </trans-unit>
        <trans-unit id="23ce10b77d4d60ce2e4667d7daf8fcc5e575e436" translate="yes" xml:space="preserve">
          <source>For example, if you have specified the WIDTH and WEST (X) location the EAST is calculated as WEST + WIDTH. If you instead specified the WIDTH and EAST locations the WEST (X) location is then calculated as EAST - WIDTH.</source>
          <target state="translated">예를 들어 WIDTH 및 WEST (X) 위치를 지정한 경우 EAST는 WEST + WIDTH로 계산됩니다. 대신 WIDTH 및 EAST 위치를 지정한 경우 WEST (X) 위치는 EAST-WIDTH로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="3070fbc0afefe4ba32efdbac515d776b347e33bf" translate="yes" xml:space="preserve">
          <source>For example, if you have two FilePermissions:</source>
          <target state="translated">예를 들어, FilePermissions가 두 개인 경우 :</target>
        </trans-unit>
        <trans-unit id="0a4d7501c36e5c5efefa917cb0f7c1e40b482f63" translate="yes" xml:space="preserve">
          <source>For example, in Massachusetts, five time zones west of Greenwich:</source>
          <target state="translated">예를 들어, 그리니치 서쪽 5 개 시간대 인 매사추세츠에서 :</target>
        </trans-unit>
        <trans-unit id="64a75c6e6a5e2cdb362552f912fa2ac36588aead" translate="yes" xml:space="preserve">
          <source>For example, in a calendar systems with a seven day week, the first aligned-week-of-month starts on day-of-month 1, the second aligned-week starts on day-of-month 8, and so on. Thus, day-of-month values 1 to 7 are in aligned-week 1, while day-of-month values 8 to 14 are in aligned-week 2, and so on.</source>
          <target state="translated">예를 들어, 7 일 주가있는 달력 시스템에서 첫 번째 주 조정은 월 1에 시작되고 두 번째 주 정렬은 8 일에 시작됩니다. 따라서 월 값 1-7은 정렬 된 주 1에 있고 월 값 8-14는 정렬 된 주 2에 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c9c772cedc41791f8d1cb68769035e91f2f41e3" translate="yes" xml:space="preserve">
          <source>For example, in a calendar systems with a seven day week, the first aligned-week-of-month starts on day-of-month 1, the second aligned-week starts on day-of-month 8, and so on. Within each of these aligned-weeks, the days are numbered from 1 to 7 and returned as the value of this field. As such, day-of-month 1 to 7 will have aligned-day-of-week values from 1 to 7. And day-of-month 8 to 14 will repeat this with aligned-day-of-week values from 1 to 7.</source>
          <target state="translated">예를 들어, 7 일 주가있는 달력 시스템에서 첫 번째 주 조정은 월 1에 시작되고 두 번째 주 정렬은 8 일에 시작됩니다. 정렬 된 각 주 내에서 일 수는 1에서 7까지이며이 필드의 값으로 반환됩니다. 따라서 월 1-7은 1에서 7까지의 일주일 값을 갖습니다. 월 8-14는 1에서 일주일의 일주일 값으로이를 반복합니다. 7.</target>
        </trans-unit>
        <trans-unit id="f5dda9b2475fff15bbb36c85195a054becb35bb2" translate="yes" xml:space="preserve">
          <source>For example, in a calendar systems with a seven day week, the first aligned-week-of-year starts on day-of-year 1, the second aligned-week starts on day-of-year 8, and so on. Thus, day-of-year values 1 to 7 are in aligned-week 1, while day-of-year values 8 to 14 are in aligned-week 2, and so on.</source>
          <target state="translated">예를 들어, 주 7 일의 달력 시스템에서 첫 번째 주중 일 년은 1 일에 시작하고 두 번째 주중 일주일은 8 일에 시작합니다. 따라서, 일 값 1-7은 정렬 된 주 1에 있고, 일 값 8-14는 정렬 된 주 2에 있습니다.</target>
        </trans-unit>
        <trans-unit id="df0baee2845f9a21e825c757acaf8a692815fac2" translate="yes" xml:space="preserve">
          <source>For example, in a calendar systems with a seven day week, the first aligned-week-of-year starts on day-of-year 1, the second aligned-week starts on day-of-year 8, and so on. Within each of these aligned-weeks, the days are numbered from 1 to 7 and returned as the value of this field. As such, day-of-year 1 to 7 will have aligned-day-of-week values from 1 to 7. And day-of-year 8 to 14 will repeat this with aligned-day-of-week values from 1 to 7.</source>
          <target state="translated">예를 들어, 주 7 일의 달력 시스템에서 첫 번째 주중 일 년은 1 일에 시작하고 두 번째 주중 일주일은 8 일에 시작합니다. 정렬 된 각 주 내에서 일 수는 1에서 7까지이며이 필드의 값으로 반환됩니다. 따라서 1 일부터 7 일까지는 일의 일주일 값이 1에서 7이됩니다. 8 일에서 14 일일은 일주일의 일주일 값이 1에서 1 일 때이를 반복합니다. 7.</target>
        </trans-unit>
        <trans-unit id="667454b51ee160e5f830b2fdf48f69b11def86bc" translate="yes" xml:space="preserve">
          <source>For example, in an instance method the expression:</source>
          <target state="translated">예를 들어, 인스턴스 메소드에서 표현식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="83711f22cafdaf4358be276e1bd1b5420f8d198f" translate="yes" xml:space="preserve">
          <source>For example, in progressive JPEG decoding each pass contains updates to a set of coefficients, which would have to be transformed into pixel values and converted to an RGB color space for each pass if listeners are present. If no listeners are present, the coefficients may simply be accumulated and the final results transformed and color converted one time only.</source>
          <target state="translated">예를 들어, 점진적 JPEG 디코딩에서 각 패스에는 계수 세트에 대한 업데이트가 포함되어 있는데, 리스너가있는 경우 픽셀 값으로 변환하고 각 패스의 RGB 색상 공간으로 변환해야합니다. 리스너가 없으면 계수가 간단히 누적되고 최종 결과가 한 번만 변환되고 색상이 변환 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1662d32e2f27b7909577fedec74e294858f30bb" translate="yes" xml:space="preserve">
          <source>For example, in the &lt;code&gt;manifest.mf&lt;/code&gt; file:</source>
          <target state="translated">예를 들어 &lt;code&gt;manifest.mf&lt;/code&gt; 파일에서 :</target>
        </trans-unit>
        <trans-unit id="1a59ad602d23ec59462a674a66faf3132c7e3c63" translate="yes" xml:space="preserve">
          <source>For example, invoking getObjectInstance() as shown above on a LDAP URL context factory would return a context that can resolve LDAP urls (e.g. &quot;ldap://ldap.wiz.com/o=wiz,c=us&quot;, &quot;ldap://ldap.umich.edu/o=umich,c=us&quot;, ...).</source>
          <target state="translated">예를 들어, LDAP URL 컨텍스트 팩토리에서 위에 표시된대로 getObjectInstance ()를 호출하면 LDAP URL을 해석 할 수있는 컨텍스트가 리턴됩니다 (예 : &quot;ldap : //ldap.wiz.com/o=wiz,c=us&quot;, &quot;ldap : //ldap.umich.edu/o=umich,c=us &quot;, ...).</target>
        </trans-unit>
        <trans-unit id="977510c92080ba8010d28759c38eb8389f8d2b36" translate="yes" xml:space="preserve">
          <source>For example, it is not generally permissible for one thread to modify a Collection while another thread is iterating over it. In general, the results of the iteration are undefined under these circumstances. Some Iterator implementations (including those of all the general purpose collection implementations provided by the JRE) may choose to throw this exception if this behavior is detected. Iterators that do this are known as</source>
          <target state="translated">예를 들어, 일반적으로 한 스레드가 콜렉션을 수정하는 동안 다른 스레드가 반복적으로 콜렉션을 수정하는 것은 허용되지 않습니다. 일반적으로 반복 결과는 이러한 상황에서 정의되지 않습니다. JRE가 제공하는 모든 범용 콜렉션 구현을 포함하여 일부 반복기 구현은이 동작이 감지되면이 예외를 처리하도록 선택할 수 있습니다. 이를 수행하는 반복기는</target>
        </trans-unit>
        <trans-unit id="55a369ef0fe8ebad5b029b1f28bb54b108692dc0" translate="yes" xml:space="preserve">
          <source>For example, launching a process to compare two files and get a boolean if they are identical:</source>
          <target state="translated">예를 들어 두 파일을 비교하고 동일한 경우 부울을 가져 오는 프로세스를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="419095da819dea8caeaf54e67c3bbf2bbe849031" translate="yes" xml:space="preserve">
          <source>For example, lenient mode allows the month in the ISO calendar system to be outside the range 1 to 12. For example, month 15 is treated as being 3 months after month 12.</source>
          <target state="translated">예를 들어 무의미 모드를 사용하면 ISO 캘린더 시스템의 한 달이 1에서 12 사이의 범위를 벗어날 수 있습니다. 예를 들어 15 개월은 12 개월 후 3 개월로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="9260a232005f2151adc172f87bb59f3c1c47b1d2" translate="yes" xml:space="preserve">
          <source>For example, lets say you wanted to create an action to insert a table into the body. The parentTag would be HTML.Tag.BODY, addTag would be HTML.Tag.TABLE, and the string could be something like &amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;.</source>
          <target state="translated">예를 들어, 표를 본문에 삽입하는 작업을 만들고 싶다고 가정 해 보겠습니다. parentTag는 HTML.Tag.BODY, addTag는 HTML.Tag.TABLE, 문자열은 &amp;lt;table&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; &amp;lt;/ td&amp;gt; &amp;lt;/ tr&amp;gt; &amp;lt;/ table&amp;gt;과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a1b8d9519a762fcc4900410f219bae25bde25134" translate="yes" xml:space="preserve">
          <source>For example, passing in April and day 31 will throw an exception, as there can never be April 31st in any year. By contrast, passing in February 29th is permitted, as that month-day can sometimes be valid.</source>
          <target state="translated">예를 들어, 4 월 31 일에 통과하면 어떤 해에도 4 월 31 일이 될 수 없으므로 예외가 발생합니다. 대조적으로, 2 월 29 일을 통과하는 것이 허용되는데, 그 달의 날짜는 때때로 유효 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95a9ab686c164d231a3c13b53e175a3015e71b35" translate="yes" xml:space="preserve">
          <source>For example, passing in month 4 (April) and day 31 will throw an exception, as there can never be April 31st in any year. By contrast, passing in February 29th is permitted, as that month-day can sometimes be valid.</source>
          <target state="translated">예를 들어, 4 월 31 일 (4 월)과 31 일을 지나면 어느 해에도 4 월 31 일이 될 수 없으므로 예외가 발생합니다. 대조적으로, 2 월 29 일을 통과하는 것이 허용되는데, 그 달의 날짜는 때때로 유효 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="17c293c7e39e8e3b727ae44a1a1381c381faf03b" translate="yes" xml:space="preserve">
          <source>For example, pressing the Shift key will cause a KEY_PRESSED event with a VK_SHIFT keyCode, while pressing the 'a' key will result in a VK_A keyCode. After the 'a' key is released, a KEY_RELEASED event will be fired with VK_A. Separately, a KEY_TYPED event with a keyChar value of 'A' is generated.</source>
          <target state="translated">예를 들어, Shift 키를 누르면 VK_SHIFT keyCode와 함께 KEY_PRESSED 이벤트가 발생하고 'a'키를 누르면 VK_A keyCode가 생성됩니다. 'a'키를 놓으면 VK_A와 함께 KEY_RELEASED 이벤트가 발생합니다. 별도로 keyChar 값이 'A'인 KEY_TYPED 이벤트가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="9a1ab47a4b02f92a0615112e10f6f5e8a8a01d5a" translate="yes" xml:space="preserve">
          <source>For example, querying for the &lt;code&gt;font&lt;/code&gt; property should not return &quot;normal normal normal 14pt/normal Arial, sans-serif&quot;, when &quot;14pt Arial, sans-serif&quot; suffices. (The normals are initial values, and are implied by use of the longhand property.)</source>
          <target state="translated">예를 들어 &lt;code&gt;font&lt;/code&gt; 속성에 대한 쿼리는 &quot;14pt Arial, sans-serif&quot;로 충분할 때 &quot;normal normal normal 14pt / normal Arial, sans-serif&quot;를 반환해서는 안됩니다. (법선은 초기 값이며 longhand 속성을 사용하여 암시합니다.)</target>
        </trans-unit>
        <trans-unit id="5ece2aad41b9136b32570fffbcf0f35d16e2c7ef" translate="yes" xml:space="preserve">
          <source>For example, resolving year-month and day-of-month in the ISO calendar system using smart mode will ensure that the day-of-month is from 1 to 31, converting any value beyond the last valid day-of-month to be the last valid day-of-month.</source>
          <target state="translated">예를 들어, 스마트 모드를 사용하여 ISO 캘린더 시스템에서 월 및 월을 해결하면 월의 유효 기간이 1에서 31로 유지되어 마지막 유효 기간을 초과하는 모든 값이 마지막 유효 일.</target>
        </trans-unit>
        <trans-unit id="e8610632f6733c46625ec28b668d9d0958dfcb9b" translate="yes" xml:space="preserve">
          <source>For example, resolving year-month and day-of-month in the ISO calendar system using strict mode will ensure that the day-of-month is valid for the year-month, rejecting invalid values.</source>
          <target state="translated">예를 들어, 엄격 모드를 사용하여 ISO 달력 시스템에서 년과 월을 해결하면 유효 기간이 월에 유효하고 유효하지 않은 값이 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="c2960524da870ffd8c45901d28d87d1b01945cd8" translate="yes" xml:space="preserve">
          <source>For example, subtracting a year each time yield the following:</source>
          <target state="translated">예를 들어, 매번 1을 빼면 다음과 같은 결과가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="47aabc43dc57e9cc5bf0a224360db057f6055a41" translate="yes" xml:space="preserve">
          <source>For example, suppose &lt;code&gt;list&lt;/code&gt; comprises&lt;code&gt; [t, a, n, k, s]&lt;/code&gt;. After invoking &lt;code&gt;Collections.rotate(list, 1)&lt;/code&gt; (or &lt;code&gt;Collections.rotate(list, -4)&lt;/code&gt;), &lt;code&gt;list&lt;/code&gt; will comprise &lt;code&gt;[s, t, a, n, k]&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;list&lt;/code&gt; &lt;code&gt; [t, a, n, k, s]&lt;/code&gt; 포함 한다고 가정 하십시오 . &lt;code&gt;Collections.rotate(list, 1)&lt;/code&gt; (또는 &lt;code&gt;Collections.rotate(list, -4)&lt;/code&gt; ) 를 호출 한 후 &lt;code&gt;list&lt;/code&gt; 는 &lt;code&gt;[s, t, a, n, k]&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="a9ba05200c79cd884e3728c4efa7d1c62535fcce" translate="yes" xml:space="preserve">
          <source>For example, suppose I had a component named JFoo. Suppose I then registered this component with the NimbusLookAndFeel in this manner:</source>
          <target state="translated">예를 들어 JFoo라는 구성 요소가 있다고 가정합니다. 그런 다음이 구성 요소를 다음과 같은 방식으로 NimbusLookAndFeel에 등록했다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="b56f40200256403e55b2d08f2b4cfa0ac29aa223" translate="yes" xml:space="preserve">
          <source>For example, suppose I have a &lt;code&gt;Painter&lt;/code&gt; implementation that draws a gradient. The gradient goes from white to black. It &quot;stretches&quot; to fill the painted region. Thus, if I use this &lt;code&gt;Painter&lt;/code&gt; to paint a 500 x 500 region, the far left would be black, the far right would be white, and a smooth gradient would be painted between. I could then, without modification, reuse the &lt;code&gt;Painter&lt;/code&gt; to paint a region that is 20x20 in size. This region would also be black on the left, white on the right, and a smooth gradient painted between.</source>
          <target state="translated">예를 들어 그라디언트를 그리는 &lt;code&gt;Painter&lt;/code&gt; 구현이 있다고 가정 합니다. 그라디언트가 흰색에서 검정색으로 바뀝니다. 칠해진 영역을 채우기 위해 &quot;늘어납니다&quot;. 따라서이 &lt;code&gt;Painter&lt;/code&gt; 를 사용하여 500 x 500 영역을 칠하면 맨 왼쪽은 검은 색이고 맨 오른쪽은 흰색이되고 그 사이에 부드러운 그라데이션이 그려집니다. 그런 다음 수정하지 않고 &lt;code&gt;Painter&lt;/code&gt; 를 다시 사용하여 크기가 20x20 인 영역을 그릴 수 있습니다. 이 영역은 또한 왼쪽은 검은 색, 오른쪽은 흰색, 그 사이에 부드러운 그라데이션이 그려집니다.</target>
        </trans-unit>
        <trans-unit id="86dbe4bd6065b4cb0b731de33bae24d41dbc526b" translate="yes" xml:space="preserve">
          <source>For example, suppose a listener implements &lt;code&gt;ObjectChangeListener&lt;/code&gt; and registers with a &lt;code&gt;EventContext&lt;/code&gt;. Then, if the connection to the server is subsequently broken, the listener will receive a &lt;code&gt;NamingExceptionEvent&lt;/code&gt; and may take some corrective action, such as notifying the user of the application.</source>
          <target state="translated">예를 들어 리스너가 &lt;code&gt;ObjectChangeListener&lt;/code&gt; 를 구현 하고 &lt;code&gt;EventContext&lt;/code&gt; 에 등록 한다고 가정합니다 . 그런 다음 서버에 대한 연결이 끊어지면 리스너는 &lt;code&gt;NamingExceptionEvent&lt;/code&gt; 를 수신 하고 사용자에게 응용 프로그램을 알리는 등의 수정 조치를 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d5c51db318646847151e6b97346f9afc762c064" translate="yes" xml:space="preserve">
          <source>For example, suppose a listener implements &lt;code&gt;ObjectChangeListener&lt;/code&gt; and registers with an &lt;code&gt;EventContext&lt;/code&gt;. Then, if the connection to the server is subsequently broken, the listener will receive a &lt;code&gt;NamingExceptionEvent&lt;/code&gt; and may take some corrective action, such as notifying the user of the application.</source>
          <target state="translated">예를 들어 리스너가 &lt;code&gt;ObjectChangeListener&lt;/code&gt; 를 구현 하고 &lt;code&gt;EventContext&lt;/code&gt; 에 등록 한다고 가정합니다 . 그런 다음 나중에 서버에 대한 연결이 끊어지면 리스너는 &lt;code&gt;NamingExceptionEvent&lt;/code&gt; 를 수신 하고 사용자에게 응용 프로그램을 알리는 등의 수정 조치를 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecccb48383e0235028ba4e42b0ed5977d52f556f" translate="yes" xml:space="preserve">
          <source>For example, suppose a listener makes the following registration:</source>
          <target state="translated">예를 들어, 리스너가 다음 등록을한다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="544466e03cf4e204054f295a7affd3dd6dee5a02" translate="yes" xml:space="preserve">
          <source>For example, suppose an LDAP server sends back a &quot;change ID&quot; control in response to a successful modification. It would supply a class &lt;code&gt;ChangeIDControl&lt;/code&gt; so that the application can use this feature. An application would perform an update, and then try to get the change ID.</source>
          <target state="translated">예를 들어, LDAP 서버가 성공적인 수정에 대한 응답으로 &quot;변경 ID&quot;제어를 다시 전송한다고 가정하십시오. 응용 프로그램이이 기능을 사용할 수 있도록 클래스 &lt;code&gt;ChangeIDControl&lt;/code&gt; 을 제공 합니다. 응용 프로그램은 업데이트를 수행 한 다음 변경 ID를 가져 오려고합니다.</target>
        </trans-unit>
        <trans-unit id="06c3623b514eb5cdba5ee8dc296c328e7f84e249" translate="yes" xml:space="preserve">
          <source>For example, suppose an LDAP server supports a &quot;get time&quot; extended operation. It would supply classes such as &lt;code&gt;GetTimeRequest&lt;/code&gt; and &lt;code&gt;GetTimeResponse&lt;/code&gt;, so that applications can use this feature. An application would use these classes as follows:</source>
          <target state="translated">예를 들어, LDAP 서버가 &quot;get time&quot;확장 조작을 지원한다고 가정하십시오. 응용 프로그램에서이 기능을 사용할 수 있도록 &lt;code&gt;GetTimeRequest&lt;/code&gt; 및 &lt;code&gt;GetTimeResponse&lt;/code&gt; 와 같은 클래스를 제공 합니다. 응용 프로그램은 다음과 같이 이러한 클래스를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="79d99dd15c47ddf1bd0f160d5ec3694f7617029b" translate="yes" xml:space="preserve">
          <source>For example, suppose an LDAP server supports a &quot;signed results&quot; request control, which when sent with a request, asks the server to digitally sign the results of an operation. It would supply a class &lt;code&gt;SignedResultsControl&lt;/code&gt; so that applications can use this feature. An application would use this class as follows:</source>
          <target state="translated">예를 들어, LDAP 서버가 &quot;서명 된 결과&quot;요청 제어를 지원한다고 가정하면, 요청과 함께 전송 될 때 서버가 조작 결과에 디지털 서명하도록 요청합니다. 응용 프로그램이이 기능을 사용할 수 있도록 클래스 &lt;code&gt;SignedResultsControl&lt;/code&gt; 을 제공 합니다. 애플리케이션은이 클래스를 다음과 같이 사용합니다.</target>
        </trans-unit>
        <trans-unit id="be8902c946be1fc9e100cbe20068110411a50507" translate="yes" xml:space="preserve">
          <source>For example, suppose one adds two elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; such that &lt;code&gt;(a.equals(b) &amp;amp;&amp;amp; c.compare(a, b) != 0)&lt;/code&gt; to an empty &lt;code&gt;TreeSet&lt;/code&gt; with comparator &lt;code&gt;c&lt;/code&gt;. The second &lt;code&gt;add&lt;/code&gt; operation will return true (and the size of the tree set will increase) because &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are not equivalent from the tree set's perspective, even though this is contrary to the specification of the &lt;a href=&quot;set#add(E)&quot;&gt;&lt;code&gt;Set.add&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">예를 들어, 두 엘리먼트 추가 가정 &lt;code&gt;a&lt;/code&gt; 하고 &lt;code&gt;b&lt;/code&gt; 되도록 &lt;code&gt;(a.equals(b) &amp;amp;&amp;amp; c.compare(a, b) != 0)&lt;/code&gt; 에 빈에 &lt;code&gt;TreeSet&lt;/code&gt; 의 비교기와 &lt;code&gt;c&lt;/code&gt; . 두 번째 &lt;code&gt;add&lt;/code&gt; 작업은 true를 반환하고 트리 집합의 크기가 증가합니다. &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 가 &lt;a href=&quot;set#add(E)&quot;&gt; &lt;code&gt;Set.add&lt;/code&gt; &lt;/a&gt; 메서드 의 사양에 반하는 경우에도 트리 집합의 관점에서 동일하지 않기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="e6856361217873808048fcc8d8563713fdb9f1e9" translate="yes" xml:space="preserve">
          <source>For example, suppose one adds two elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; such that &lt;code&gt;(a.equals(b) &amp;amp;&amp;amp; c.compare(a, b) != 0)&lt;/code&gt; to an empty &lt;code&gt;TreeSet&lt;/code&gt; with comparator &lt;code&gt;c&lt;/code&gt;. The second &lt;code&gt;add&lt;/code&gt; operation will return true (and the size of the tree set will increase) because &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are not equivalent from the tree set's perspective, even though this is contrary to the specification of the &lt;a href=&quot;set#add-E-&quot;&gt;&lt;code&gt;Set.add&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">예를 들어, 두 엘리먼트 추가 가정 &lt;code&gt;a&lt;/code&gt; 하고 &lt;code&gt;b&lt;/code&gt; 되도록 &lt;code&gt;(a.equals(b) &amp;amp;&amp;amp; c.compare(a, b) != 0)&lt;/code&gt; 에 빈에 &lt;code&gt;TreeSet&lt;/code&gt; 의 비교기와 &lt;code&gt;c&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 가 &lt;a href=&quot;set#add-E-&quot;&gt; &lt;code&gt;Set.add&lt;/code&gt; &lt;/a&gt; 메소드 의 스펙과 상반되는 경우에도 a 와 b 가 트리 세트의 관점과 동일하지 않기 때문에 두 번째 &lt;code&gt;add&lt;/code&gt; 조작은 true를 리턴합니다 (트리 세트의 크기가 증가 함) .</target>
        </trans-unit>
        <trans-unit id="b8429399a8ee6dd81aeccd65edca7dd387d5a635" translate="yes" xml:space="preserve">
          <source>For example, suppose the LDAP server supported a 'get time' extended operation. It would supply GetTimeRequest and GetTimeResponse classes. The GetTimeResponse class might look like:</source>
          <target state="translated">예를 들어, LDAP 서버가 'get time'확장 조작을 지원한다고 가정하십시오. GetTimeRequest 및 GetTimeResponse 클래스를 제공합니다. GetTimeResponse 클래스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fdd5ec9d3034278b63d192b66c4021fe19238ac6" translate="yes" xml:space="preserve">
          <source>For example, suppose the LDAP server supported a 'get time' extended operation. It would supply GetTimeRequest and GetTimeResponse classes:</source>
          <target state="translated">예를 들어, LDAP 서버가 'get time'확장 조작을 지원한다고 가정하십시오. GetTimeRequest 및 GetTimeResponse 클래스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c850829ad67f48ce83d754eaa746b9238fc6f58a" translate="yes" xml:space="preserve">
          <source>For example, suppose the service provider &lt;code&gt;com.example.impl.StandardCodecs&lt;/code&gt; is packaged in a JAR file for the class path. The JAR file will contain a provider-configuration file named:</source>
          <target state="translated">For example, suppose the service provider &lt;code&gt;com.example.impl.StandardCodecs&lt;/code&gt; is packaged in a JAR file for the class path. The JAR file will contain a provider-configuration file named:</target>
        </trans-unit>
        <trans-unit id="4b7aaba7c594c43cc60d302e8d8ff53dc01af76f" translate="yes" xml:space="preserve">
          <source>For example, suppose there are &lt;code&gt;Module&lt;/code&gt; MBeans, representing modules within an application. A &lt;code&gt;DependsOn&lt;/code&gt; relation type could express the relationship that some modules depend on others, which could be used to determine the order in which the modules are started or stopped. The &lt;code&gt;DependsOn&lt;/code&gt; relation type would have two roles, &lt;code&gt;dependent&lt;/code&gt; and &lt;code&gt;dependedOn&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 거기에 가정 &lt;code&gt;Module&lt;/code&gt; 응용 프로그램 내에서 모듈을 나타내는 MBean를,. &lt;code&gt;DependsOn&lt;/code&gt; 관계 유형은 어떤 모듈은 모듈이 시작 또는 중지되는 순서를 결정하는 데 사용될 수있는 다른 사람에 의존하는 관계를 표현할 수있다. &lt;code&gt;DependsOn&lt;/code&gt; 관계 유형은 두 가지 역할, 것 &lt;code&gt;dependent&lt;/code&gt; 와 &lt;code&gt;dependedOn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6851c4e026126d2cadb4456f8c17deadeed95c47" translate="yes" xml:space="preserve">
          <source>For example, suppose there is a FilePermissionCollection in this Permissions object, and it contains one FilePermission that specifies &quot;read&quot; access for all files in all subdirectories of the &quot;/tmp&quot; directory, and another FilePermission that specifies &quot;write&quot; access for all files in the &quot;/tmp/scratch/foo&quot; directory. Then if the &lt;code&gt;implies&lt;/code&gt; method is called with a permission specifying both &quot;read&quot; and &quot;write&quot; access to files in the &quot;/tmp/scratch/foo&quot; directory, &lt;code&gt;true&lt;/code&gt; is returned.</source>
          <target state="translated">예를 들어,이 Permissions 객체에 FilePermissionCollection이 있고 &quot;/ tmp&quot;디렉토리의 모든 하위 디렉토리에있는 모든 파일에 대한 &quot;읽기&quot;액세스를 지정하는 FilePermission 하나와 모든 파일에 대한 &quot;쓰기&quot;액세스를 지정하는 다른 FilePermission이 포함되어 있다고 가정합니다. &quot;/ tmp / scratch / foo&quot;디렉토리에 있습니다. 그런 다음 &quot;/ tmp / scratch / foo&quot;디렉토리의 파일에 대한 &quot;읽기&quot;및 &quot;쓰기&quot;액세스 권한을 모두 지정하는 권한으로 &lt;code&gt;implies&lt;/code&gt; 메소드를 호출하면 &lt;code&gt;true&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="b859271d9922abcaf237d74c6f4004f67d23dfcf" translate="yes" xml:space="preserve">
          <source>For example, suppose there is a module layer where each module is in its own class loader (see &lt;a href=&quot;../lang/modulelayer#defineModulesWithManyLoaders(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;defineModulesWithManyLoaders&lt;/code&gt;&lt;/a&gt;). If this &lt;code&gt;ServiceLoader.load&lt;/code&gt; method is invoked to locate providers using any of the class loaders created for the module layer, then it will locate all of the providers in the module layer, irrespective of their defining class loader.</source>
          <target state="translated">For example, suppose there is a module layer where each module is in its own class loader (see &lt;a href=&quot;../lang/modulelayer#defineModulesWithManyLoaders(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;defineModulesWithManyLoaders&lt;/code&gt; &lt;/a&gt;). If this &lt;code&gt;ServiceLoader.load&lt;/code&gt; method is invoked to locate providers using any of the class loaders created for the module layer, then it will locate all of the providers in the module layer, irrespective of their defining class loader.</target>
        </trans-unit>
        <trans-unit id="9c4a3c6accaf2a649faf04567656523f83868294" translate="yes" xml:space="preserve">
          <source>For example, suppose we want to iterate over the files ending with &quot;.java&quot; in a directory:</source>
          <target state="translated">예를 들어 디렉토리에서 &quot;.java&quot;로 끝나는 파일을 반복한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="05a4d1c5d07862052a8718331187b8f1781335a5" translate="yes" xml:space="preserve">
          <source>For example, suppose you have a class &lt;code&gt;Measure&lt;/code&gt; that consists of a String called &lt;code&gt;units&lt;/code&gt; and a &lt;code&gt;value&lt;/code&gt; that is either a &lt;code&gt;long&lt;/code&gt; or a &lt;code&gt;double&lt;/code&gt;. It might look like this:</source>
          <target state="translated">예를 들어, 클래스가 있다고 가정 &lt;code&gt;Measure&lt;/code&gt; 하는 String라는 구성 &lt;code&gt;units&lt;/code&gt; 와 &lt;code&gt;value&lt;/code&gt; 중 하나입니다 &lt;code&gt;long&lt;/code&gt; 또는 &lt;code&gt;double&lt;/code&gt; . 다음과 같이 보일 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="84544c4734f4c5f5229790515b9195bff2e4d7dd" translate="yes" xml:space="preserve">
          <source>For example, suppose you have a horizontal box that contains two fixed-size components. If the box gets extra space, the fixed-size components won't become larger, so where does the extra space go? Without glue, the extra space goes to the right of the second component. If you put glue between the fixed-size components, then the extra space goes there. If you put glue before the first fixed-size component, the extra space goes there, and the fixed-size components are shoved against the right edge of the box. If you put glue before the first fixed-size component and after the second fixed-size component, the fixed-size components are centered in the box.</source>
          <target state="translated">For example, suppose you have a horizontal box that contains two fixed-size components. If the box gets extra space, the fixed-size components won't become larger, so where does the extra space go? Without glue, the extra space goes to the right of the second component. If you put glue between the fixed-size components, then the extra space goes there. If you put glue before the first fixed-size component, the extra space goes there, and the fixed-size components are shoved against the right edge of the box. If you put glue before the first fixed-size component and after the second fixed-size component, the fixed-size components are centered in the box.</target>
        </trans-unit>
        <trans-unit id="4a2a226a5afd671906af81bfc5026907a68833b6" translate="yes" xml:space="preserve">
          <source>For example, suppose you have an interface like this:</source>
          <target state="translated">예를 들어 다음과 같은 인터페이스가 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="feed7a297ad146234d8242fae2e6875af7601dfd" translate="yes" xml:space="preserve">
          <source>For example, suppose you have two MXBean interfaces like this:</source>
          <target state="translated">예를 들어, 다음과 같은 두 개의 MXBean 인터페이스가 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="4b96eed8b9322570b8d411a7bacaa4906fe3c08d" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;IsoFields&lt;/code&gt; class contains the quarter-of-year and day-of-quarter fields. The implementation of this method in that class resolves the two fields plus the &lt;a href=&quot;chronofield#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt; into a complete &lt;code&gt;LocalDate&lt;/code&gt;. The resolve method will remove all three fields from the map before returning the &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;IsoFields&lt;/code&gt; 클래스에는 연도 및 분기 필드가 포함됩니다. 해당 클래스에서이 메소드의 구현은 두 필드와 &lt;a href=&quot;chronofield#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt; 를 완전한 &lt;code&gt;LocalDate&lt;/code&gt; 로 분석 합니다. resolve 메소드는 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환하기 전에 맵에서 세 필드를 모두 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="0b355f8589a768bee7cdd6e2b374f9f88e59b5ef" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;TabularType&lt;/code&gt; for a &lt;code&gt;
      Map&amp;lt;String,ObjectName&amp;gt;&lt;/code&gt; might be constructed with code like this:</source>
          <target state="translated">For example, the &lt;code&gt;TabularType&lt;/code&gt; for a &lt;code&gt; Map&amp;lt;String,ObjectName&amp;gt;&lt;/code&gt; might be constructed with code like this:</target>
        </trans-unit>
        <trans-unit id="5b81c7338939efbb5d98eb4eaeb30e317371878a" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;TabularType&lt;/code&gt; for a &lt;code&gt;Map&amp;lt;String,ObjectName&amp;gt;&lt;/code&gt; might be constructed with code like this:</source>
          <target state="translated">예를 들어 &lt;code&gt;Map&amp;lt;String,ObjectName&amp;gt;&lt;/code&gt; 대한 &lt;code&gt;TabularType&lt;/code&gt; 은 다음 과 같은 코드로 구성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5fbd75fecfcbea62d5180938bfee7d0a96f67fb8" translate="yes" xml:space="preserve">
          <source>For example, the ISO day-of-month always starts at 1. The largest minimum is therefore 1.</source>
          <target state="translated">예를 들어 ISO 월은 항상 1에서 시작합니다. 따라서 가장 큰 최소값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="9954675608ba0d2447d8c70c553ce4908bf6872e" translate="yes" xml:space="preserve">
          <source>For example, the ISO day-of-month always starts at 1. The minimum is therefore 1.</source>
          <target state="translated">예를 들어 ISO 월은 항상 1에서 시작합니다. 따라서 최소값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="753698f108344c2b6f822295f83686eb7deeb43a" translate="yes" xml:space="preserve">
          <source>For example, the ISO day-of-month runs from 1 to between 28 and 31. Since there is uncertainty about the maximum value, the range is not fixed. However, for the month of January, the range is always 1 to 31, thus it is fixed.</source>
          <target state="translated">예를 들어 ISO의 월은 1에서 28과 31 사이입니다. 최대 값에 대한 불확실성이 있으므로 범위는 고정되지 않습니다. 그러나 1 월의 경우 범위는 항상 1-31이므로 고정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1825874677c8efec6c434b63e4f9a58ffa2948ba" translate="yes" xml:space="preserve">
          <source>For example, the ISO day-of-month runs to between 28 and 31 days. The maximum is therefore 31.</source>
          <target state="translated">예를 들어 ISO 기간은 28 일에서 31 일 사이입니다. 따라서 최대 값은 31입니다.</target>
        </trans-unit>
        <trans-unit id="6bcb8a8d31e6b5bda8c8a31339caadd463dbafdb" translate="yes" xml:space="preserve">
          <source>For example, the ISO day-of-month runs to between 28 and 31 days. The smallest maximum is therefore 28.</source>
          <target state="translated">예를 들어 ISO 기간은 28 일에서 31 일 사이입니다. 따라서 가장 작은 최대 값은 28입니다.</target>
        </trans-unit>
        <trans-unit id="3126ea544624f04dc4af914a288e43e4b5e44c06" translate="yes" xml:space="preserve">
          <source>For example, the ISO month-of-year has values from 1 to 12, which fits in an &lt;code&gt;int&lt;/code&gt;. By comparison, ISO nano-of-day runs from 1 to 86,400,000,000,000 which does not fit in an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">예를 들어 ISO의 월은 1에서 12 사이의 값을 가지며 &lt;code&gt;int&lt;/code&gt; 에 맞습니다 . 이에 비해 ISO nano-of-day는 1에서 86,400,000,000,000까지이며 &lt;code&gt;int&lt;/code&gt; 에 맞지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="891514d228ba0a680cfae01cc75cb0c878ac816b" translate="yes" xml:space="preserve">
          <source>For example, the Japanese year &quot;Heisei 24&quot; corresponds to ISO year &quot;2012&quot;.</source>
          <target state="translated">예를 들어, 일본 연도 &quot;Heisei 24&quot;는 ISO 연도 &quot;2012&quot;에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="f057bc50d4f9cbcee2fd03e25db7ad75bc897348" translate="yes" xml:space="preserve">
          <source>For example, the ObjectName instances below:</source>
          <target state="translated">예를 들어 아래 ObjectName 인스턴스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="44e96a62da6c4e34494e786a872f8b8a5113b965" translate="yes" xml:space="preserve">
          <source>For example, the Thai Buddhist calendar system divides time into two eras, before and after a single date. By contrast, the Japanese calendar system has one era for the reign of each Emperor.</source>
          <target state="translated">예를 들어, 태국 불교 달력 시스템은 단일 날짜 전후에 시간을 두 시대로 나눕니다. 대조적으로, 일본 달력 시스템은 각 황제의 통치 기간이 하나 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a2d59c315643a0b3b1942f96a7e22778bf58b94" translate="yes" xml:space="preserve">
          <source>For example, the class below generates unique identifiers local to each thread. A thread's id is assigned the first time it invokes &lt;code&gt;ThreadId.get()&lt;/code&gt; and remains unchanged on subsequent calls.</source>
          <target state="translated">예를 들어 아래 클래스는 각 스레드에 고유 한 고유 식별자를 생성합니다. 스레드의 ID는 &lt;code&gt;ThreadId.get()&lt;/code&gt; 처음 호출 할 때 할당 되며 후속 호출에서 변경되지 않은 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="9b4b8c7af567aec1dfe22cdd402ec5ac4a2fe5e6" translate="yes" xml:space="preserve">
          <source>For example, the code . . .</source>
          <target state="translated">For example, the code . . .</target>
        </trans-unit>
        <trans-unit id="1dd5f7b4ebe0cc41842611a133e002691579b0ee" translate="yes" xml:space="preserve">
          <source>For example, the codesource objects with the following locations and null certificates all imply the codesource with the location &quot;http://java.sun.com/classes/foo.jar&quot; and null certificates:</source>
          <target state="translated">예를 들어, 다음 위치와 널 인증서가있는 코드 소스 객체는 모두 &quot;http://java.sun.com/classes/foo.jar&quot;위치와 널 인증서가있는 코드 소스를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="8c4f42dbcf8b2164f2e204cf1d44084d7f59456e" translate="yes" xml:space="preserve">
          <source>For example, the codesource objects with the following locations and null certificates all imply the codesource with the location &quot;http://www.example.com/classes/foo.jar&quot; and null certificates:</source>
          <target state="translated">예를 들어 다음 위치와 null 인증서가있는 코드 소스 개체는 모두 &quot;http://www.example.com/classes/foo.jar&quot;위치와 null 인증서가있는 코드 소스를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="756f8e79ed2bdcf15890e6f3746ee619b529186f" translate="yes" xml:space="preserve">
          <source>For example, the compact number pattern representing millions in German locale can be specified as &lt;code&gt;&quot;{one:0' 'Million other:0' 'Millionen}&quot;&lt;/code&gt;. The &lt;code&gt;count&lt;/code&gt; follows LDML's &lt;a href=&quot;https://unicode.org/reports/tr35/tr35-numbers.html#Language_Plural_Rules&quot;&gt; Language Plural Rules&lt;/a&gt;.</source>
          <target state="translated">예를 들어 독일어 로케일에서 수백만을 나타내는 간결한 숫자 패턴은 &lt;code&gt;&quot;{one:0' 'Million other:0' 'Millionen}&quot;&lt;/code&gt; 로 지정 될 수 있습니다 . &lt;code&gt;count&lt;/code&gt; LDML의 다음 &lt;a href=&quot;https://unicode.org/reports/tr35/tr35-numbers.html#Language_Plural_Rules&quot;&gt;언어 복수 규칙&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9577516c18720a6506a145d0e8f0b0ac70992df8" translate="yes" xml:space="preserve">
          <source>For example, the effect of this option is built in: &lt;code&gt;pack.class.attribute.SourceFile=RUH&lt;/code&gt;.</source>
          <target state="translated">예를 들어,이 옵션의 효과는 &lt;code&gt;pack.class.attribute.SourceFile=RUH&lt;/code&gt; 에 내장되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="8920e276528365953f0968f14c401f25817bbf7a" translate="yes" xml:space="preserve">
          <source>For example, the following action listener</source>
          <target state="translated">예를 들어 다음 액션 리스너</target>
        </trans-unit>
        <trans-unit id="af842b0f3fef4c9e26a527cffd159eb564cb80d9" translate="yes" xml:space="preserve">
          <source>For example, the following are valid inputs:</source>
          <target state="translated">예를 들어 다음은 유효한 입력입니다.</target>
        </trans-unit>
        <trans-unit id="c04d542de8d7b4c4a927f2f1b22e6b4845d556d4" translate="yes" xml:space="preserve">
          <source>For example, the following call registers a callback function that examines the TLS handshake parameters and selects an application protocol name:</source>
          <target state="translated">For example, the following call registers a callback function that examines the TLS handshake parameters and selects an application protocol name:</target>
        </trans-unit>
        <trans-unit id="3e9548168ee523ea98776ac0d99dc8e2e03140ae" translate="yes" xml:space="preserve">
          <source>For example, the following call will return &lt;code&gt;&quot;Sunday&quot;&lt;/code&gt;.</source>
          <target state="translated">예를 들어 다음 호출은 &lt;code&gt;&quot;Sunday&quot;&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="800db53de5ef69ffa1c8bdf9c66fd2ba83b76e33" translate="yes" xml:space="preserve">
          <source>For example, the following call will return a &lt;code&gt;Map&lt;/code&gt; containing &lt;code&gt;&quot;January&quot;&lt;/code&gt; to &lt;a href=&quot;../calendar#JANUARY&quot;&gt;&lt;code&gt;Calendar.JANUARY&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&quot;Jan&quot;&lt;/code&gt; to &lt;a href=&quot;../calendar#JANUARY&quot;&gt;&lt;code&gt;Calendar.JANUARY&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&quot;February&quot;&lt;/code&gt; to &lt;a href=&quot;../calendar#FEBRUARY&quot;&gt;&lt;code&gt;Calendar.FEBRUARY&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&quot;Feb&quot;&lt;/code&gt; to &lt;a href=&quot;../calendar#FEBRUARY&quot;&gt;&lt;code&gt;Calendar.FEBRUARY&lt;/code&gt;&lt;/a&gt;, and so on.</source>
          <target state="translated">예를 들어 다음 호출은 &lt;code&gt;&quot;January&quot;&lt;/code&gt; 를 포함 하는 &lt;code&gt;Map&lt;/code&gt; 을 &lt;a href=&quot;../calendar#JANUARY&quot;&gt; &lt;code&gt;Calendar.JANUARY&lt;/code&gt; 로&lt;/a&gt; , &lt;code&gt;&quot;Jan&quot;&lt;/code&gt; 을 &lt;a href=&quot;../calendar#JANUARY&quot;&gt; &lt;code&gt;Calendar.JANUARY&lt;/code&gt; 로&lt;/a&gt; , &lt;code&gt;&quot;February&quot;&lt;/code&gt; 을 &lt;a href=&quot;../calendar#FEBRUARY&quot;&gt; &lt;code&gt;Calendar.FEBRUARY&lt;/code&gt; 로&lt;/a&gt; , &lt;code&gt;&quot;Feb&quot;&lt;/code&gt; 를 &lt;a href=&quot;../calendar#FEBRUARY&quot;&gt; &lt;code&gt;Calendar.FEBRUARY&lt;/code&gt; 로&lt;/a&gt; 등 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ab160cea5fa5d97b5c742b66b19a144cd1be2739" translate="yes" xml:space="preserve">
          <source>For example, the following code fragment returns the runtime &lt;code&gt;Class&lt;/code&gt; descriptor for the class named &lt;code&gt;java.lang.Thread&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 다음 코드 조각은 &lt;code&gt;java.lang.Thread&lt;/code&gt; 클래스 의 런타임 &lt;code&gt;Class&lt;/code&gt; 디스크립터를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="e6fa08051fad1a7c686f1f3704a31cec262ab998" translate="yes" xml:space="preserve">
          <source>For example, the following code fragment specifies that the SQL type &lt;code&gt;ATHLETES&lt;/code&gt; will be mapped to the class &lt;code&gt;Athletes&lt;/code&gt; in the Java programming language. The code fragment retrieves the type map for the &lt;code&gt;Connection
 &lt;/code&gt; object &lt;code&gt;con&lt;/code&gt;, inserts the entry into it, and then sets the type map with the new entry as the connection's type map.</source>
          <target state="translated">For example, the following code fragment specifies that the SQL type &lt;code&gt;ATHLETES&lt;/code&gt; will be mapped to the class &lt;code&gt;Athletes&lt;/code&gt; in the Java programming language. The code fragment retrieves the type map for the &lt;code&gt;Connection &lt;/code&gt; object &lt;code&gt;con&lt;/code&gt; , inserts the entry into it, and then sets the type map with the new entry as the connection's type map.</target>
        </trans-unit>
        <trans-unit id="a576e32ce142dd687d0baaa037ad19f28b0a4f92" translate="yes" xml:space="preserve">
          <source>For example, the following code will create a list of comma-delimited tokens from a string:</source>
          <target state="translated">For example, the following code will create a list of comma-delimited tokens from a string:</target>
        </trans-unit>
        <trans-unit id="decb7a755353f013553fca3c806cc1fc507bd702" translate="yes" xml:space="preserve">
          <source>For example, the following code will read a file and return a list of all sequences of characters consisting of seven or more Latin capital letters:</source>
          <target state="translated">For example, the following code will read a file and return a list of all sequences of characters consisting of seven or more Latin capital letters:</target>
        </trans-unit>
        <trans-unit id="06e4d3fa5fd40c797500d85cae43cf41dec447dd" translate="yes" xml:space="preserve">
          <source>For example, the following image depicts a frame with four text fields of varying widths. Two of these text fields display the predefined text &lt;code&gt;&quot;Hello&quot;&lt;/code&gt;.</source>
          <target state="translated">For example, the following image depicts a frame with four text fields of varying widths. Two of these text fields display the predefined text &lt;code&gt;&quot;Hello&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e735d68b24fa929d7974b81ffd2f14c7e8e3db24" translate="yes" xml:space="preserve">
          <source>For example, the following invokations:</source>
          <target state="translated">For example, the following invokations:</target>
        </trans-unit>
        <trans-unit id="ebfa64934fbb8d8c13e300499c0fbfd299c59fe6" translate="yes" xml:space="preserve">
          <source>For example, the following is the comparator order:</source>
          <target state="translated">예를 들어, 다음은 비교기 순서입니다.</target>
        </trans-unit>
        <trans-unit id="2e5145fc0b1887c7f338976c09c1b22e0149535b" translate="yes" xml:space="preserve">
          <source>For example, the following might be an implementation of a custom &quot;Indeterminate&quot; state for JProgressBars:</source>
          <target state="translated">For example, the following might be an implementation of a custom &quot;Indeterminate&quot; state for JProgressBars:</target>
        </trans-unit>
        <trans-unit id="579d2788523bcba78702221bcf8dfcda1fdb0cd3" translate="yes" xml:space="preserve">
          <source>For example, the following permission grants access to the com.sun.PrivateCredential owned by Subjects which have a com.sun.Principal with the name, &quot;duke&quot;. Note that although this example, as well as all the examples below, do not contain Codebase, SignedBy, or Principal information in the grant statement (for simplicity reasons), actual policy configurations should specify that information when appropriate.</source>
          <target state="translated">예를 들어, 다음 권한은 &quot;duke&quot;라는 이름의 com.sun.Principal을 가진 Subject가 소유 한 com.sun.PrivateCredential에 대한 액세스 권한을 부여합니다. 이 예제와 아래의 모든 예제가 grant 문에 Codebase, SignedBy 또는 Principal 정보를 포함하지 않지만 (간단한 이유로) 실제 정책 구성은 해당 정보를 적절하게 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="4be8500e7495aef23b54930b5292f0022824cecd" translate="yes" xml:space="preserve">
          <source>For example, the following picture shows an applet using the flow layout manager (its default layout manager) to position three buttons:</source>
          <target state="translated">For example, the following picture shows an applet using the flow layout manager (its default layout manager) to position three buttons:</target>
        </trans-unit>
        <trans-unit id="7522e8223fe59cfba16079804d94817adcde32ed" translate="yes" xml:space="preserve">
          <source>For example, the following security policy grants an application in the user's current directory all the permissions required by this module:</source>
          <target state="translated">예를 들어 다음 보안 정책은 사용자의 현재 디렉터리에있는 응용 프로그램에이 모듈에 필요한 모든 권한을 부여합니다.</target>
        </trans-unit>
        <trans-unit id="da170e009e37813248dc29ce5b6b7ee536e58d5c" translate="yes" xml:space="preserve">
          <source>For example, the following will parse:</source>
          <target state="translated">예를 들어 다음은 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="dfaeb77baccf84c3cc12b85797b2a674e2da2753" translate="yes" xml:space="preserve">
          <source>For example, the following would be correct:</source>
          <target state="translated">For example, the following would be correct:</target>
        </trans-unit>
        <trans-unit id="f982d151697783cd09896775b1dfd2a8059c4f1e" translate="yes" xml:space="preserve">
          <source>For example, the properties for &lt;code&gt;ConsoleHandler&lt;/code&gt; would be:</source>
          <target state="translated">예를 들어 &lt;code&gt;ConsoleHandler&lt;/code&gt; 의 속성 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d8f931db20e6cd28062e3c50f185c3c6ecce4677" translate="yes" xml:space="preserve">
          <source>For example, the properties for &lt;code&gt;FileHandler&lt;/code&gt; would be:</source>
          <target state="translated">예를 들어 &lt;code&gt;FileHandler&lt;/code&gt; 의 속성 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="70ee2fbf03d54cbdd60a163f88386cac3ed53cb7" translate="yes" xml:space="preserve">
          <source>For example, the properties for &lt;code&gt;MemoryHandler&lt;/code&gt; would be:</source>
          <target state="translated">예를 들어 &lt;code&gt;MemoryHandler&lt;/code&gt; 의 속성 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a1f43cf1f2bf6da316757e63f6b8452206d8f683" translate="yes" xml:space="preserve">
          <source>For example, the properties for &lt;code&gt;SocketHandler&lt;/code&gt; would be:</source>
          <target state="translated">예를 들어 &lt;code&gt;SocketHandler&lt;/code&gt; 의 속성 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="07d06c623a74187c226038a1ba49eb4b2125ca1b" translate="yes" xml:space="preserve">
          <source>For example, the properties for &lt;code&gt;StreamHandler&lt;/code&gt; would be:</source>
          <target state="translated">예를 들어 &lt;code&gt;StreamHandler&lt;/code&gt; 의 속성 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="db09fd6c4a0b3f3ccde0e332b40eaa8dd7c8c19b" translate="yes" xml:space="preserve">
          <source>For example, the property &lt;code&gt;javax.sound.midi.Receiver&lt;/code&gt; with a value &lt;code&gt;&quot;com.sun.media.sound.MidiProvider#SunMIDI1&quot;&lt;/code&gt; will have the following consequences when &lt;code&gt;getReceiver&lt;/code&gt; is called: if the class &lt;code&gt;com.sun.media.sound.MidiProvider&lt;/code&gt; exists in the list of installed MIDI device providers, the first &lt;code&gt;Receiver&lt;/code&gt; device with name &lt;code&gt;&quot;SunMIDI1&quot;&lt;/code&gt; will be returned. If it cannot be found, the first &lt;code&gt;Receiver&lt;/code&gt; from that provider will be returned, regardless of name. If there is none, the first &lt;code&gt;Receiver&lt;/code&gt; with name &lt;code&gt;&quot;SunMIDI1&quot;&lt;/code&gt; in the list of all devices (as returned by &lt;code&gt;getMidiDeviceInfo&lt;/code&gt;) will be returned, or, if not found, the first &lt;code&gt;Receiver&lt;/code&gt; that can be found in the list of all devices is returned. If that fails, too, a &lt;code&gt;MidiUnavailableException&lt;/code&gt; is thrown.</source>
          <target state="translated">For example, the property &lt;code&gt;javax.sound.midi.Receiver&lt;/code&gt; with a value &lt;code&gt;&quot;com.sun.media.sound.MidiProvider#SunMIDI1&quot;&lt;/code&gt; will have the following consequences when &lt;code&gt;getReceiver&lt;/code&gt; is called: if the class &lt;code&gt;com.sun.media.sound.MidiProvider&lt;/code&gt; exists in the list of installed MIDI device providers, the first &lt;code&gt;Receiver&lt;/code&gt; device with name &lt;code&gt;&quot;SunMIDI1&quot;&lt;/code&gt; will be returned. If it cannot be found, the first &lt;code&gt;Receiver&lt;/code&gt; from that provider will be returned, regardless of name. If there is none, the first &lt;code&gt;Receiver&lt;/code&gt; with name &lt;code&gt;&quot;SunMIDI1&quot;&lt;/code&gt; in the list of all devices (as returned by &lt;code&gt;getMidiDeviceInfo&lt;/code&gt; ) will be returned, or, if not found, the first &lt;code&gt;Receiver&lt;/code&gt; that can be found in the list of all devices is returned. If that fails, too, a &lt;code&gt;MidiUnavailableException&lt;/code&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="7575a2a6b1ae6067582981f8aa6f22b796df82cf" translate="yes" xml:space="preserve">
          <source>For example, the property &lt;code&gt;javax.sound.sampled.Clip&lt;/code&gt; with a value &lt;code&gt;&quot;com.sun.media.sound.MixerProvider#SunClip&quot;&lt;/code&gt; will have the following consequences when &lt;code&gt;getLine&lt;/code&gt; is called requesting a &lt;code&gt;Clip&lt;/code&gt; instance: if the class &lt;code&gt;com.sun.media.sound.MixerProvider&lt;/code&gt; exists in the list of installed mixer providers, the first &lt;code&gt;Clip&lt;/code&gt; from the first mixer with name &lt;code&gt;&quot;SunClip&quot;&lt;/code&gt; will be returned. If it cannot be found, the first &lt;code&gt;Clip&lt;/code&gt; from the first mixer of the specified provider will be returned, regardless of name. If there is none, the first &lt;code&gt;Clip&lt;/code&gt; from the first &lt;code&gt;Mixer&lt;/code&gt; with name &lt;code&gt;&quot;SunClip&quot;&lt;/code&gt; in the list of all mixers (as returned by &lt;code&gt;getMixerInfo&lt;/code&gt;) will be returned, or, if not found, the first &lt;code&gt;Clip&lt;/code&gt; of the first &lt;code&gt;Mixer&lt;/code&gt; that can be found in the list of all mixers is returned. If that fails, too, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">For example, the property &lt;code&gt;javax.sound.sampled.Clip&lt;/code&gt; with a value &lt;code&gt;&quot;com.sun.media.sound.MixerProvider#SunClip&quot;&lt;/code&gt; will have the following consequences when &lt;code&gt;getLine&lt;/code&gt; is called requesting a &lt;code&gt;Clip&lt;/code&gt; instance: if the class &lt;code&gt;com.sun.media.sound.MixerProvider&lt;/code&gt; exists in the list of installed mixer providers, the first &lt;code&gt;Clip&lt;/code&gt; from the first mixer with name &lt;code&gt;&quot;SunClip&quot;&lt;/code&gt; will be returned. If it cannot be found, the first &lt;code&gt;Clip&lt;/code&gt; from the first mixer of the specified provider will be returned, regardless of name. If there is none, the first &lt;code&gt;Clip&lt;/code&gt; from the first &lt;code&gt;Mixer&lt;/code&gt; with name &lt;code&gt;&quot;SunClip&quot;&lt;/code&gt; in the list of all mixers (as returned by &lt;code&gt;getMixerInfo&lt;/code&gt; ) will be returned, or, if not found, the first &lt;code&gt;Clip&lt;/code&gt; of the first &lt;code&gt;Mixer&lt;/code&gt; that can be found in the list of all mixers is returned. If that fails, too, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="f54d17b66104630b955178605a2279a2ac88c658" translate="yes" xml:space="preserve">
          <source>For example, this &lt;code&gt;@Target&lt;/code&gt; meta-annotation indicates that the declared type is itself a meta-annotation type. It can only be used on annotation type declarations:</source>
          <target state="translated">예를 &lt;code&gt;@Target&lt;/code&gt; 메타 주석은 선언 된 유형 자체가 메타 주석 유형임을 나타냅니다. 주석 유형 선언에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e89a04f3da4efa728a7469acac726ca3cfa4b865" translate="yes" xml:space="preserve">
          <source>For example, this code allows a user to read a number from &lt;code&gt;System.in&lt;/code&gt;:</source>
          <target state="translated">예를 &lt;code&gt;System.in&lt;/code&gt; 코드를 사용하면 System.in 에서 숫자를 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dc0aeff52d98963e9b52ef9b7492a0f9f8e38a99" translate="yes" xml:space="preserve">
          <source>For example, this method allows the number of days between two dates to be calculated:</source>
          <target state="translated">예를 들어이 방법을 사용하면 두 날짜 사이의 일 수를 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52cd17ffbe39b63f68834b0ef711a4383a761739" translate="yes" xml:space="preserve">
          <source>For example, to check if a shaper shapes to Arabic, you would use the following:</source>
          <target state="translated">For example, to check if a shaper shapes to Arabic, you would use the following:</target>
        </trans-unit>
        <trans-unit id="3063291fbeb8cab7d02fe3b39ad0305adadd4b7d" translate="yes" xml:space="preserve">
          <source>For example, to compute the set of last names of people in each city, where the city names are sorted:</source>
          <target state="translated">예를 들어, 도시 이름이 정렬 된 각 도시에있는 사람들의 성 집합을 계산하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="542c0e3ace7d7c931e3fca12ab5e385bf8b8c0c0" translate="yes" xml:space="preserve">
          <source>For example, to compute the set of last names of people in each city:</source>
          <target state="translated">예를 들어, 각 도시에있는 사람들의 성 집합을 계산하려면 :</target>
        </trans-unit>
        <trans-unit id="f05452af65e15167a37042770e9c5b3da86616ac" translate="yes" xml:space="preserve">
          <source>For example, to convert 10 minutes to milliseconds, use: &lt;code&gt;TimeUnit.MILLISECONDS.convert(10L, TimeUnit.MINUTES)&lt;/code&gt;</source>
          <target state="translated">예를 들어, 10 분을 밀리 초로 변환하려면 다음을 사용하십시오. &lt;code&gt;TimeUnit.MILLISECONDS.convert(10L, TimeUnit.MINUTES)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0d9e251461e5a6e353041a4a4542e479d3f2028" translate="yes" xml:space="preserve">
          <source>For example, to create a &lt;code&gt;MouseListener&lt;/code&gt; that sets the target object's &lt;code&gt;origin&lt;/code&gt; property to the incoming &lt;code&gt;MouseEvent&lt;/code&gt;'s location (that's the value of &lt;code&gt;mouseEvent.getPoint()&lt;/code&gt;) each time a mouse button is pressed, one would write:</source>
          <target state="translated">예를 들어, 마우스 버튼을 누를 때마다 대상 객체의 &lt;code&gt;origin&lt;/code&gt; 속성을 수신 &lt;code&gt;MouseEvent&lt;/code&gt; 의 위치 ( &lt;code&gt;mouseEvent.getPoint()&lt;/code&gt; 값)로 설정 하는 &lt;code&gt;MouseListener&lt;/code&gt; 를 작성 하려면 다음과 같이 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="7c169d1425b0d3d047f986a746865e5bcd17ca63" translate="yes" xml:space="preserve">
          <source>For example, to find the first 10 calling frames, first skipping those frames whose declaring class is in package &lt;code&gt;com.foo&lt;/code&gt;:</source>
          <target state="translated">For example, to find the first 10 calling frames, first skipping those frames whose declaring class is in package &lt;code&gt;com.foo&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="81105bd41c2fbf89b34ee447551dfb47d67c897e" translate="yes" xml:space="preserve">
          <source>For example, to identify the &lt;code&gt;SPLIT_PANE&lt;/code&gt;&lt;code&gt;Region&lt;/code&gt; you would use &lt;code&gt;SplitPane&lt;/code&gt;. The following shows a custom &lt;code&gt;SynthStyleFactory&lt;/code&gt; that returns a specific style for split panes:</source>
          <target state="translated">For example, to identify the &lt;code&gt;SPLIT_PANE&lt;/code&gt; &lt;code&gt;Region&lt;/code&gt; you would use &lt;code&gt;SplitPane&lt;/code&gt; . The following shows a custom &lt;code&gt;SynthStyleFactory&lt;/code&gt; that returns a specific style for split panes:</target>
        </trans-unit>
        <trans-unit id="039e8b55bb061518d4b6a27396dcc8fc21604cf2" translate="yes" xml:space="preserve">
          <source>For example, to measure how long some code takes to execute:</source>
          <target state="translated">예를 들어, 일부 코드를 실행하는 데 걸리는 시간을 측정하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="8064ab890fae301b1c872df07a0c453c310705c9" translate="yes" xml:space="preserve">
          <source>For example, to monitor image uploads to a web server with a separate thread for each upload, an event called File Upload starts when the user uploads a file and ends when the upload is complete. For advanced diagnostics about image uploads, more detailed events are created (for example, Image Read, Image Resize, and Image Write). During these detailed events, other low- level events could occur (for example, Socket Read and File Write).</source>
          <target state="translated">예를 들어, 각 업로드에 대해 별도의 스레드를 사용하여 웹 서버에 대한 이미지 업로드를 모니터링하려면 사용자가 파일을 업로드 할 때 파일 업로드라는 이벤트가 시작되고 업로드가 완료되면 종료됩니다. 이미지 업로드에 대한 고급 진단을 위해 더 자세한 이벤트가 생성됩니다 (예 : 이미지 읽기, 이미지 크기 조정 및 이미지 쓰기). 이러한 세부 이벤트 동안 다른 낮은 수준의 이벤트 (예 : 소켓 읽기 및 파일 쓰기)가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb09925aecc146e184d9ca3d6ae2de5f80ef10f2" translate="yes" xml:space="preserve">
          <source>For example, to obtain a &lt;code&gt;Comparator&lt;/code&gt; that compares &lt;code&gt;
 Person&lt;/code&gt; objects by their last name ignoring case differences,</source>
          <target state="translated">For example, to obtain a &lt;code&gt;Comparator&lt;/code&gt; that compares &lt;code&gt; Person&lt;/code&gt; objects by their last name ignoring case differences,</target>
        </trans-unit>
        <trans-unit id="c9d3d4ff8736c7b66d61fc02698ec045f178ad78" translate="yes" xml:space="preserve">
          <source>For example, to obtain a &lt;code&gt;Comparator&lt;/code&gt; that compares &lt;code&gt;
 Person&lt;/code&gt; objects by their last name,</source>
          <target state="translated">For example, to obtain a &lt;code&gt;Comparator&lt;/code&gt; that compares &lt;code&gt; Person&lt;/code&gt; objects by their last name,</target>
        </trans-unit>
        <trans-unit id="d27c11303b6f84d44156eb74f65cb1fb6557f6f1" translate="yes" xml:space="preserve">
          <source>For example, to obtain a &lt;code&gt;Comparator&lt;/code&gt; that compares &lt;code&gt;Person&lt;/code&gt; objects by their last name ignoring case differences,</source>
          <target state="translated">예를 들어 대소 문자 차이를 무시하고 성을 기준으로 &lt;code&gt;Person&lt;/code&gt; 개체 를 비교 하는 &lt;code&gt;Comparator&lt;/code&gt; 를 얻으려면 ,</target>
        </trans-unit>
        <trans-unit id="354ab1d14b7fe39532cb8c574202480e62f34ef8" translate="yes" xml:space="preserve">
          <source>For example, to obtain a &lt;code&gt;Comparator&lt;/code&gt; that compares &lt;code&gt;Person&lt;/code&gt; objects by their last name,</source>
          <target state="translated">예를 들어 &lt;code&gt;Person&lt;/code&gt; 객체를 성 을 기준으로 비교 하는 &lt;code&gt;Comparator&lt;/code&gt; 를 얻으려면</target>
        </trans-unit>
        <trans-unit id="8221a33305d40e06cb9be3bf03c846af33b861de" translate="yes" xml:space="preserve">
          <source>For example, to obtain a DOM Document Node:</source>
          <target state="translated">For example, to obtain a DOM Document Node:</target>
        </trans-unit>
        <trans-unit id="d766cb4d571bbdc6c5fbd68fc0b953fc1af8846b" translate="yes" xml:space="preserve">
          <source>For example, to parse an XML value with a DOM parser:</source>
          <target state="translated">For example, to parse an XML value with a DOM parser:</target>
        </trans-unit>
        <trans-unit id="63b9e3822258c48e3b16d7faa3a5376c66a4942d" translate="yes" xml:space="preserve">
          <source>For example, to print all elements of a &lt;code&gt;Vector&amp;lt;E&amp;gt;&lt;/code&gt;</source>
          <target state="translated">예를 들어 &lt;code&gt;Vector&amp;lt;E&amp;gt;&lt;/code&gt; 의 모든 요소를 ​​인쇄하려면</target>
        </trans-unit>
        <trans-unit id="edbb747839df6ac31ee4fba787419b796a8f7906" translate="yes" xml:space="preserve">
          <source>For example, to set the sample interval of the CPU Load event to once every second, use the name &lt;code&gt;&quot;jdk.CPULoad#period&quot;&lt;/code&gt; and the value &lt;code&gt;&quot;1 s&quot;&lt;/code&gt;. If multiple events use the same name, for example if an event class is loaded in multiple class loaders, and differentiation is needed between them, then the name is &lt;code&gt;&quot;56#period&quot;&lt;/code&gt;. The ID for an event is obtained by invoking &lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/eventtype#getId()&quot;&gt;&lt;code&gt;EventType.getId()&lt;/code&gt;&lt;/a&gt; method and is valid for the Java Virtual Machine (JVM) instance that the event is registered in.</source>
          <target state="translated">예를 들어, CPU로드 이벤트의 샘플 간격을 1 초에 한 번으로 설정하려면 이름 &lt;code&gt;&quot;jdk.CPULoad#period&quot;&lt;/code&gt; 및 값 &lt;code&gt;&quot;1 s&quot;&lt;/code&gt; 를 사용하십시오 . 여러 이벤트가 동일한 이름을 사용하는 경우 (예 : 이벤트 클래스가 여러 클래스 로더에로드되고 이들간에 구별이 필요한 경우) 이름은 &lt;code&gt;&quot;56#period&quot;&lt;/code&gt; 입니다. 이벤트의 ID는 &lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/eventtype#getId()&quot;&gt; &lt;code&gt;EventType.getId()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 가져 오며 이벤트가 등록 된 JVM (Java Virtual Machine) 인스턴스에 유효합니다.</target>
        </trans-unit>
        <trans-unit id="e9d5df42ba7a06759bf1297e4828fc9f44238ff4" translate="yes" xml:space="preserve">
          <source>For example, to set the sample interval of the CPU Load event to once every second, use the name &lt;code&gt;&quot;jdk.CPULoad#period&quot;&lt;/code&gt; and the value &lt;code&gt;&quot;1 s&quot;&lt;/code&gt;. If multiple events use the same name, for example if an event class is loaded in multiple class loaders, and differentiation is needed between them, then the name is &lt;code&gt;&quot;56#period&quot;&lt;/code&gt;. The ID for an event is obtained by invoking &lt;a href=&quot;eventtype#getId()&quot;&gt;&lt;code&gt;EventType.getId()&lt;/code&gt;&lt;/a&gt; method and is valid for the Java Virtual Machine instance that the event is registered in.</source>
          <target state="translated">예를 들어, CPU로드 이벤트의 샘플 간격을 1 초에 한 번으로 설정하려면 이름 &lt;code&gt;&quot;jdk.CPULoad#period&quot;&lt;/code&gt; 및 값 &lt;code&gt;&quot;1 s&quot;&lt;/code&gt; 를 사용하십시오 . 여러 이벤트가 동일한 이름을 사용하는 경우 (예 : 이벤트 클래스가 여러 클래스 로더에로드되고 이들간에 구별이 필요한 경우) 이름은 &lt;code&gt;&quot;56#period&quot;&lt;/code&gt; 입니다. 이벤트의 ID는 &lt;a href=&quot;eventtype#getId()&quot;&gt; &lt;code&gt;EventType.getId()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 가져 오며 이벤트가 등록 된 Java Virtual Machine 인스턴스에 유효합니다.</target>
        </trans-unit>
        <trans-unit id="0507a7d537ae9945a10e6635aaa2418e8fc20e24" translate="yes" xml:space="preserve">
          <source>For example, to sort a collection of &lt;code&gt;String&lt;/code&gt; based on the length and then case-insensitive natural ordering, the comparator can be composed using following code,</source>
          <target state="translated">예를 들어 길이를 기준으로 한 &lt;code&gt;String&lt;/code&gt; 모음을 정렬 한 다음 대소 문자를 구분하지 않는 자연 순서를 정렬하려면 다음 코드를 사용하여 비교기를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5496677e05a9fd5dfd0e6a5b8d5d4c7e0a44f20" translate="yes" xml:space="preserve">
          <source>For example, to specify the &quot;host&quot; service use of a forwardable TGT the target permission is specified as follows:</source>
          <target state="translated">예를 들어, 전달 가능한 TGT의 &quot;호스트&quot;서비스 사용을 지정하려면 대상 권한이 다음과 같이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="533a0f50bf0b375e4e417e9cacef45695527dd13" translate="yes" xml:space="preserve">
          <source>For example, to specify the permission to access to the TGT to initiate a security context the permission is constructed as follows:</source>
          <target state="translated">예를 들어, 보안 컨텍스트를 시작하기 위해 TGT에 액세스 할 수있는 권한을 지정하기 위해 권한은 다음과 같이 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="b342cdb19cfb253b2fc3d5084c2213b875e77218" translate="yes" xml:space="preserve">
          <source>For example, you can align numbers in two ways:</source>
          <target state="translated">예를 들어 두 가지 방법으로 숫자를 정렬 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fe7b4fb9a2ed77429bfbc46219b1d2c87900bad" translate="yes" xml:space="preserve">
          <source>For example, you can construct a SocketPermission instance as the following:</source>
          <target state="translated">예를 들어 다음과 같이 SocketPermission 인스턴스를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="911931a41db3ff2123e7246a13c4b78a0cf276f7" translate="yes" xml:space="preserve">
          <source>For example, you can print a slide presentation on US letter-sized white paper, double-sided, stapled, 20 copies to make handouts for a talk; and you could print the same slide presentation on US letter-sized transparencies, single-sided, one copy to make the actual slides for the talk.</source>
          <target state="translated">예를 들어, 미국 레터 크기의 흰 종이, 양면, 스테이플, 20 매로 슬라이드 프레젠테이션을 인쇄하여 대화를위한 유인물을 만들 수 있습니다. 그리고 대화를위한 실제 슬라이드를 만들기 위해 미국 서신 크기의 투명 용지, 단면, 사본 한 부에 동일한 슬라이드 프레젠테이션을 인쇄 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f85cf8c2987e395efc8c2eac232884781ca0b58" translate="yes" xml:space="preserve">
          <source>For example, you could implement a blocking &lt;code&gt;poll&lt;/code&gt; method (see &lt;a href=&quot;blockingqueue#poll(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;BlockingQueue.poll&lt;/code&gt;&lt;/a&gt;) using:</source>
          <target state="translated">For example, you could implement a blocking &lt;code&gt;poll&lt;/code&gt; method (see &lt;a href=&quot;blockingqueue#poll(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;BlockingQueue.poll&lt;/code&gt; &lt;/a&gt;) using:</target>
        </trans-unit>
        <trans-unit id="b6ac85d9e48f5b4a3d8639df9f4a72b7a35300d5" translate="yes" xml:space="preserve">
          <source>For example, you could implement a blocking &lt;code&gt;poll&lt;/code&gt; method (see &lt;a href=&quot;blockingqueue#poll-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;BlockingQueue.poll&lt;/code&gt;&lt;/a&gt;) using:</source>
          <target state="translated">예를 들어 다음을 사용하여 블로킹 &lt;code&gt;poll&lt;/code&gt; 방법 ( &lt;a href=&quot;blockingqueue#poll-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;BlockingQueue.poll&lt;/code&gt; &lt;/a&gt; 참조 )을 구현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fdcbab4aae2389893f867fa63018aa69e039b2ef" translate="yes" xml:space="preserve">
          <source>For example: com.company.package.classname. The date element is used to indicate the date the source was generated. The date element must follow the ISO 8601 standard. For example the date element would have the following value 2001-07-04T12:08:56.235-0700 which represents 2001-07-04 12:08:56 local time in the U.S. Pacific Time time zone.</source>
          <target state="translated">예를 들면 다음과 같습니다. com.company.package.classname. 날짜 요소는 소스가 생성 된 날짜를 나타내는 데 사용됩니다. 날짜 요소는 ISO 8601 표준을 따라야합니다. 예를 들어 날짜 요소는 미국 태평양 표준 시간대의 2001-07-04 12:08:56 현지 시간을 나타내는 2001-07-04T12 : 08 : 56.235-0700 값을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="7e5f4a789a81a7ee9220bb8bdf29a0137643b64b" translate="yes" xml:space="preserve">
          <source>For examples and further information on using button groups see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html#radiobutton&quot;&gt;How to Use Radio Buttons&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">For examples and further information on using button groups see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html#radiobutton&quot;&gt;How to Use Radio Buttons&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="f48b1839f0d9d7bcb6fda541874914f2e598de29" translate="yes" xml:space="preserve">
          <source>For examples and further information on using button groups see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/button.html#radiobutton&quot;&gt;How to Use Radio Buttons&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">버튼 그룹 사용에 대한 예제 및 추가 정보 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/button.html#radiobutton&quot;&gt;How to Use Radio Buttons를&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c717625bd61cd01493fbcc4cadd7d2934e4cec61" translate="yes" xml:space="preserve">
          <source>For examples, see &lt;a href=&quot;#floorDiv(int,int)&quot;&gt;&lt;code&gt;floorDiv(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">For examples, see &lt;a href=&quot;#floorDiv(int,int)&quot;&gt; &lt;code&gt;floorDiv(int, int)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="278b9a1168df3127c25b5587e0e84a19abe4b0fb" translate="yes" xml:space="preserve">
          <source>For examples, see &lt;a href=&quot;#floorDiv(long,long)&quot;&gt;&lt;code&gt;floorDiv(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">예제는 &lt;a href=&quot;#floorDiv(long,long)&quot;&gt; &lt;code&gt;floorDiv(int, int)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1de7cccbbe2af214ee09fe3b941c433108d19943" translate="yes" xml:space="preserve">
          <source>For examples, see &lt;a href=&quot;#floorMod(int,int)&quot;&gt;&lt;code&gt;floorMod(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">For examples, see &lt;a href=&quot;#floorMod(int,int)&quot;&gt; &lt;code&gt;floorMod(int, int)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="56727bc3623e0ddfd80f98aae78c7797481c52a2" translate="yes" xml:space="preserve">
          <source>For examples, see &lt;a href=&quot;#floorMod(long,long)&quot;&gt;&lt;code&gt;floorMod(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">예제는 &lt;a href=&quot;#floorMod(long,long)&quot;&gt; &lt;code&gt;floorMod(int, int)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="60d302a6835077ac5f129f7fde727dfa42966be4" translate="yes" xml:space="preserve">
          <source>For examples, see &lt;a href=&quot;math#floorDiv-int-int-&quot;&gt;&lt;code&gt;floorDiv(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;math#floorDiv-int-int-&quot;&gt; &lt;code&gt;floorDiv(int, int)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b2170f0d8e4fb039d7c4dce593784b3310564d9a" translate="yes" xml:space="preserve">
          <source>For examples, see &lt;a href=&quot;math#floorMod-int-int-&quot;&gt;&lt;code&gt;floorMod(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">예를 들어, &lt;a href=&quot;math#floorMod-int-int-&quot;&gt; &lt;code&gt;floorMod(int, int)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a97093b8a6da476bf44b7f54ca0f23866085823d" translate="yes" xml:space="preserve">
          <source>For file objects representing regular files</source>
          <target state="translated">일반 파일을 나타내는 파일 객체</target>
        </trans-unit>
        <trans-unit id="107fea67ce4853781cd6165337272b1075f787c3" translate="yes" xml:space="preserve">
          <source>For finer-grained String comparison, refer to &lt;a href=&quot;../text/collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">For finer-grained String comparison, refer to &lt;a href=&quot;../text/collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1f44070d7d95f5a7e5a8b0198d911637f271e9cf" translate="yes" xml:space="preserve">
          <source>For finer-grained, locale-sensitive String comparison, refer to &lt;a href=&quot;../text/collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">For finer-grained, locale-sensitive String comparison, refer to &lt;a href=&quot;../text/collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="af275deed54fcb5d94febf308381f0c41ceb385f" translate="yes" xml:space="preserve">
          <source>For formatting, &lt;code&gt;DecimalFormat&lt;/code&gt; uses the ten consecutive characters starting with the localized zero digit defined in the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object as digits. For parsing, these digits as well as all Unicode decimal digits, as defined by &lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, are recognized.</source>
          <target state="translated">For formatting, &lt;code&gt;DecimalFormat&lt;/code&gt; uses the ten consecutive characters starting with the localized zero digit defined in the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object as digits. For parsing, these digits as well as all Unicode decimal digits, as defined by &lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; &lt;/a&gt;, are recognized.</target>
        </trans-unit>
        <trans-unit id="bbd0239ac79e980c77f30b8f9af1ba23162cd46a" translate="yes" xml:space="preserve">
          <source>For formatting, &lt;code&gt;DecimalFormat&lt;/code&gt; uses the ten consecutive characters starting with the localized zero digit defined in the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object as digits. For parsing, these digits as well as all Unicode decimal digits, as defined by &lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, are recognized.</source>
          <target state="translated">포맷의 경우, &lt;code&gt;DecimalFormat&lt;/code&gt; 는, 에 정의 지역화 제로 숫자로 시작되는 10 개가 연속 한 문자를 사용 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; 가의 숫자와 같은 객체입니다. 구문 분석의 경우, &lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; &lt;/a&gt; 에 의해 정의 된대로 이러한 숫자와 모든 유니 코드 10 진수 가 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="1ff16dff24bd3a7f7ada71f36fe1fa2079304912" translate="yes" xml:space="preserve">
          <source>For formatting, if the number of pattern letters is 2, the year is truncated to 2 digits; otherwise it is interpreted as a &lt;a href=&quot;#number&quot;&gt;number&lt;/a&gt;.</source>
          <target state="translated">서식의 경우 패턴 문자 수가 2이면 연도가 2 자리로 잘립니다. 그렇지 않으면 &lt;a href=&quot;#number&quot;&gt;숫자&lt;/a&gt; 로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="ddb6fed4a81ca53cc369192aacd8582ee4ce8e0a" translate="yes" xml:space="preserve">
          <source>For formatting, if the offset value from GMT is 0, &lt;code&gt;&quot;Z&quot;&lt;/code&gt; is produced. If the number of pattern letters is 1, any fraction of an hour is ignored. For example, if the pattern is &lt;code&gt;&quot;X&quot;&lt;/code&gt; and the time zone is &lt;code&gt;&quot;GMT+05:30&quot;&lt;/code&gt;, &lt;code&gt;&quot;+05&quot;&lt;/code&gt; is produced.</source>
          <target state="translated">포맷팅의 경우 GMT의 오프셋 값이 0이면 &lt;code&gt;&quot;Z&quot;&lt;/code&gt; 가 생성됩니다. 패턴 글자 수가 1이면 한 시간의 일부만 무시됩니다. 예를 들어 패턴이 &lt;code&gt;&quot;X&quot;&lt;/code&gt; 이고 시간대가 &lt;code&gt;&quot;GMT+05:30&quot;&lt;/code&gt; 인 경우 &lt;code&gt;&quot;+05&quot;&lt;/code&gt; 가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="30762100cef30818142dda2795a16148020ed918" translate="yes" xml:space="preserve">
          <source>For formatting, the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;maxWidth&lt;/code&gt; are used to determine the number of characters to format. If they are equal then the format is fixed width. If the value of the field is within the range of the &lt;code&gt;baseValue&lt;/code&gt; using &lt;code&gt;width&lt;/code&gt; characters then the reduced value is formatted otherwise the value is truncated to fit &lt;code&gt;maxWidth&lt;/code&gt;. The rightmost characters are output to match the width, left padding with zero.</source>
          <target state="translated">서식을 지정할 경우 &lt;code&gt;width&lt;/code&gt; 와 &lt;code&gt;maxWidth&lt;/code&gt; 를 사용하여 서식을 지정할 문자 수를 결정합니다. 그것들이 같으면 형식은 고정 너비입니다. 필드의 값이 &lt;code&gt;width&lt;/code&gt; 문자를 사용 하여 &lt;code&gt;baseValue&lt;/code&gt; 의 범위 내에 있으면 감소 된 값의 형식이 지정되고 그렇지 않으면 &lt;code&gt;maxWidth&lt;/code&gt; 에 맞게 값이 잘립니다 . 가장 오른쪽의 문자는 너비와 일치하도록 왼쪽 패딩은 0으로 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="86307ef52182c337ecdeed0a18f594ba47f90dbc" translate="yes" xml:space="preserve">
          <source>For further details on the makeup of the returned &lt;code&gt;Hashtable&lt;/code&gt;, see the &lt;code&gt;setLabelTable&lt;/code&gt; documentation.</source>
          <target state="translated">For further details on the makeup of the returned &lt;code&gt;Hashtable&lt;/code&gt; , see the &lt;code&gt;setLabelTable&lt;/code&gt; documentation.</target>
        </trans-unit>
        <trans-unit id="70177aedeb0091d3f5131204109f5188dbfe7cf0" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;How to Use Internal Frames&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">For further documentation and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;How to Use Internal Frames&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="3e4b037bbbe770f333358d04be0b29cf63399e18" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">For further documentation and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5c55da39c499a60c82c691b8be9607fd4d72241" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">For further documentation and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bc0794470ab2d5218687b182417d70c95c4efbf1" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;How to Use Internal Frames&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">추가 문서 및 예제 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;How to Use Internal Frames를&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9400509e10d6f9c91228f40cc27b68a4bd780fd8" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">추가 문서 및 예제 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5444a9c69b0235795e7ff8b94c2258df216fc7e3" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">추가 문서 및 예제 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3cec4a9555e2d3c867d9f5618a404938d6de5cde" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see the following sections in &lt;em&gt;The Java Tutorial&lt;/em&gt;: &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;How to Write a Tree Expansion Listener&lt;/a&gt; and &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;How to Write a Tree-Will-Expand Listener&lt;/a&gt;.</source>
          <target state="translated">For further documentation and examples see the following sections in &lt;em&gt;The Java Tutorial&lt;/em&gt;: &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;How to Write a Tree Expansion Listener&lt;/a&gt; and &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;How to Write a Tree-Will-Expand Listener&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cec016b2f97e881f2ef8cd31a48fecf887e596a6" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see the following sections in &lt;em&gt;The Java Tutorial&lt;/em&gt;: &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;How to Write a Tree Expansion Listener&lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;How to Write a Tree-Will-Expand Listener&lt;/a&gt;.</source>
          <target state="translated">추가 문서 및 예제는 &lt;em&gt;The Java Tutorial&lt;/em&gt; : &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;How to Write a Tree Expansion Listener&lt;/a&gt; 및 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;How to Write a Tree-Will-Expand Listener&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="48582963a77ba74bf88d3b898d4ce9c917800ae0" translate="yes" xml:space="preserve">
          <source>For further documentation and for examples, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">For further documentation and for examples, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e1284681b4c2b5d1f6b1055809882c4572cff72" translate="yes" xml:space="preserve">
          <source>For further documentation and for examples, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">추가 문서 및 예제 &lt;em&gt;는 Java Tutorial의 &lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt; 를 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0c3d831d0c3d774c07aabb377adbb94d8c02b4b" translate="yes" xml:space="preserve">
          <source>For further documentation, please see:</source>
          <target state="translated">For further documentation, please see:</target>
        </trans-unit>
        <trans-unit id="fcec9208587350945fcaf80b6a1f5f94eb52edd2" translate="yes" xml:space="preserve">
          <source>For further documentation, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/table.html#data&quot;&gt;Creating a Table Model&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">For further documentation, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/table.html#data&quot;&gt;Creating a Table Model&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="0f06d9b519d18282f33f57472142b94ccacaeb96" translate="yes" xml:space="preserve">
          <source>For further documentation, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/table.html#data&quot;&gt;Creating a Table Model&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">추가 문서 &lt;em&gt;는 Java Tutorial의 &lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/table.html#data&quot;&gt;Creating a Table Model&lt;/a&gt; 을 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="db98ffc64d074e9381de37b26512bf1d106a9bd5" translate="yes" xml:space="preserve">
          <source>For further information and examples of using check box menu items, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">For further information and examples of using check box menu items, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f0ce83de447a00856f5201ae11cc7e4f9f3ecf2" translate="yes" xml:space="preserve">
          <source>For further information and examples of using check box menu items, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">확인란 메뉴 항목 사용에 대한 자세한 정보와 예제는 &lt;em&gt;Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cf2a4252e04c57eefeb7b1ecc400cf9feab741de" translate="yes" xml:space="preserve">
          <source>For further information and examples of using image icons, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/icon.html&quot;&gt;How to Use Icons&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">For further information and examples of using image icons, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/icon.html&quot;&gt;How to Use Icons&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="882bf3f7567c15e80ad1071053fff49b01cb39ab" translate="yes" xml:space="preserve">
          <source>For further information and examples of using image icons, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/icon.html&quot;&gt;How to Use Icons&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">이미지 아이콘 사용에 대한 자세한 정보와 예제는 &lt;em&gt;Java Tutorial의 &lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/icon.html&quot;&gt;How to Use Icons&lt;/a&gt; 를 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47c9910bdc3fd79ca4fea29dc730177492456718" translate="yes" xml:space="preserve">
          <source>For further information and examples of using tree paths, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">For further information and examples of using tree paths, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="36c2dcdc449a0e6853fe47da5e21301140952033" translate="yes" xml:space="preserve">
          <source>For further information and examples of using tree paths, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">트리 경로 사용에 대한 자세한 정보와 예제는 &lt;em&gt;Java Tutorial의 &lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; 를 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e7a90ce028732da31dc2085bfa4e6d659d483dbf" translate="yes" xml:space="preserve">
          <source>For further information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/slider.html&quot;&gt;How to Use Sliders&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">For further information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/slider.html&quot;&gt;How to Use Sliders&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bbfc882840839be130d27c6cdcfcd5a22fbca81b" translate="yes" xml:space="preserve">
          <source>For further information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/box.html&quot;&gt;How to Use BoxLayout&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">For further information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/box.html&quot;&gt;How to Use BoxLayout&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="455ecf20c7af5b27aa51bb82f3a662b2b0819b43" translate="yes" xml:space="preserve">
          <source>For further information and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/slider.html&quot;&gt;How to Use Sliders&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">자세한 내용과 예제 는 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/slider.html&quot;&gt;How to Use Sliders를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1607668101eaae1f1e933aff0c2d46c5b910018e" translate="yes" xml:space="preserve">
          <source>For further information and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/layout/box.html&quot;&gt;How to Use BoxLayout&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">자세한 내용과 예제 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/layout/box.html&quot;&gt;How to Use BoxLayout을&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="64c1185b29041da35b97ab7eab62b5e3abc72849" translate="yes" xml:space="preserve">
          <source>For further information on tree models, including an example of a custom implementation, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">For further information on tree models, including an example of a custom implementation, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f8869140d50a8b31e5be1a1a94a8fba8436ea85e" translate="yes" xml:space="preserve">
          <source>For further information on tree models, including an example of a custom implementation, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">사용자 정의 구현의 예를 포함하여 트리 모델에 대한 자세한 내용 은 &lt;em&gt;The Java Tutorial의 &lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; 를 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f28bbe0d1ed64d964af58c8022a109ae9ccc10f" translate="yes" xml:space="preserve">
          <source>For further information see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;How to Use Buttons, Check Boxes, and Radio Buttons&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">For further information see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;How to Use Buttons, Check Boxes, and Radio Buttons&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="96b6840b6054b516727fe81bcf15ce39e95a61a4" translate="yes" xml:space="preserve">
          <source>For further information see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;How to Use Buttons, Check Boxes, and Radio Buttons&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">더 자세한 정보는 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;How to Use Buttons, Check Boxes, and Radio Buttons&lt;/a&gt; , a section in &lt;em&gt;The Java Tutorial&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="fffa387798756e472ad4ed19066f2f96eeb6d8b9" translate="yes" xml:space="preserve">
          <source>For further information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt;Using the Multiplexing Look and Feel.&lt;/a&gt;</source>
          <target state="translated">For further information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt;Using the Multiplexing Look and Feel.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e018c6fbeea3ae17d14fcc58c8a97447d4b29ec5" translate="yes" xml:space="preserve">
          <source>For further information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt;Using the Multiplexing Look and Feel.&lt;/a&gt;</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt;은 멀티플렉싱 룩앤필 사용을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0b240043433660c7e11e9eaf3757b9adfa7c62ee" translate="yes" xml:space="preserve">
          <source>For general argument types, the precision is the maximum number of characters to be written to the output.</source>
          <target state="translated">일반 인수 유형의 경우 정밀도는 출력에 쓸 최대 문자 수입니다.</target>
        </trans-unit>
        <trans-unit id="6ac3bc0ccd869fb439d7cb91a237f9f63e1b3d00" translate="yes" xml:space="preserve">
          <source>For historical reasons, this method is not static, but its behavior does not depend on the instance on which it is called.</source>
          <target state="translated">역사적 이유로이 메서드는 정적이 아니지만 해당 메서드는 호출 된 인스턴스에 따라 달라지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9ef1222a3aa584be05528f73a489e06ed37b9719" translate="yes" xml:space="preserve">
          <source>For horizontal scrolling and &lt;code&gt;VERTICAL&lt;/code&gt; orientation, returns &lt;code&gt;visibleRect.width&lt;/code&gt;.</source>
          <target state="translated">For horizontal scrolling and &lt;code&gt;VERTICAL&lt;/code&gt; orientation, returns &lt;code&gt;visibleRect.width&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f9614c4b6677d682d6ebf32146e4b40ca83ced4" translate="yes" xml:space="preserve">
          <source>For horizontal scrolling, if the layout orientation is &lt;code&gt;VERTICAL&lt;/code&gt;, then the list's font size is returned (or &lt;code&gt;1&lt;/code&gt; if the font is &lt;code&gt;null&lt;/code&gt;).</source>
          <target state="translated">For horizontal scrolling, if the layout orientation is &lt;code&gt;VERTICAL&lt;/code&gt; , then the list's font size is returned (or &lt;code&gt;1&lt;/code&gt; if the font is &lt;code&gt;null&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e93dfe403e923c48d7c3ec78228e39fdac5fbbe3" translate="yes" xml:space="preserve">
          <source>For horizontal scrolling, when the layout orientation is either &lt;code&gt;VERTICAL_WRAP&lt;/code&gt; or &lt;code&gt;HORIZONTAL_WRAP&lt;/code&gt;:</source>
          <target state="translated">For horizontal scrolling, when the layout orientation is either &lt;code&gt;VERTICAL_WRAP&lt;/code&gt; or &lt;code&gt;HORIZONTAL_WRAP&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ffdf89fbfae740196b5bdae01ce560a68c803bc1" translate="yes" xml:space="preserve">
          <source>For i=1..K, Di = Ai</source>
          <target state="translated">i = 1..K의 경우 Di = Ai</target>
        </trans-unit>
        <trans-unit id="09b9b63237aaa55086913ffd8a2b891202973f33" translate="yes" xml:space="preserve">
          <source>For i=1..N, Ti is adaptable to Aj, where j=i+k</source>
          <target state="translated">i = 1..N의 경우, Ti는 Aj에 적응 가능하며, 여기서 j = i + k</target>
        </trans-unit>
        <trans-unit id="59d9dde9e53f112cf0672b2c57e8e527ae4c2cfc" translate="yes" xml:space="preserve">
          <source>For ignorable characters, the first rule must start with a relation (the examples we have used above are really fragments; &quot;a &amp;lt; b&quot; really should be &quot;&amp;lt; a &amp;lt; b&quot;). If, however, the first relation is not &quot;&amp;lt;&quot;, then all the all text-arguments up to the first &quot;&amp;lt;&quot; are ignorable. For example, &quot;, - &amp;lt; a &amp;lt; b&quot; makes &quot;-&quot; an ignorable character, as we saw earlier in the word &quot;black-birds&quot;. In the samples for different languages, you see that most accents are ignorable.</source>
          <target state="translated">무시할 수없는 문자의 경우 첫 번째 규칙은 관계로 시작해야합니다 (위에서 사용한 예제는 실제로 조각입니다. &quot;a &amp;lt;b&quot;는 실제로 &quot;&amp;lt;a &amp;lt;b&quot;여야 함). 그러나 첫 번째 관계가 &quot;&amp;lt;&quot;이 아닌 경우 첫 번째 &quot;&amp;lt;&quot;까지의 모든 텍스트 인수는 무시할 수 있습니다. 예를 들어 &quot;,-&amp;lt;a &amp;lt;b&quot;는 &quot;black-birds&quot;라는 단어에서 앞에서 본 것처럼 &quot;-&quot;를 무시할 수없는 문자로 만듭니다. 다른 언어의 샘플에서 대부분의 악센트는 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fabd85b21ae351b462896cf695c97093bbffa124" translate="yes" xml:space="preserve">
          <source>For images the tooltip text comes from text specified with the &lt;code&gt;ALT&lt;/code&gt; attribute.</source>
          <target state="translated">For images the tooltip text comes from text specified with the &lt;code&gt;ALT&lt;/code&gt; attribute.</target>
        </trans-unit>
        <trans-unit id="0d9b4f443a1f2d7650a9da382d578987b32be1b0" translate="yes" xml:space="preserve">
          <source>For images the tooltip text comes from text specified with the &lt;code&gt;ALT&lt;/code&gt; attribute. This is overriden to return &lt;code&gt;getAltText&lt;/code&gt;.</source>
          <target state="translated">For images the tooltip text comes from text specified with the &lt;code&gt;ALT&lt;/code&gt; attribute. This is overriden to return &lt;code&gt;getAltText&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9fd31dcc26a3c512fd5aca7bd3a9885c31b1e33" translate="yes" xml:space="preserve">
          <source>For implementations that support a command-line interface, an agent can be started by specifying an option on the command-line.</source>
          <target state="translated">For implementations that support a command-line interface, an agent can be started by specifying an option on the command-line.</target>
        </trans-unit>
        <trans-unit id="999a3b10953e4e7b359f0edd758b57b264e2b633" translate="yes" xml:space="preserve">
          <source>For implementations where multiple copies are produced by the interpreter with only a single pass over the data, the final value of the JobKOctetsProcessed attribute must be equal to the value of the &lt;a href=&quot;jobkoctets&quot;&gt;&lt;code&gt;JobKOctets&lt;/code&gt;&lt;/a&gt; attribute. For implementations where multiple copies are produced by the interpreter by processing the data for each copy, the final value must be a multiple of the value of the &lt;a href=&quot;jobkoctets&quot;&gt;&lt;code&gt;JobKOctets&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">다수의 사본은 데이터에 대한 단일 패스로 인터프리터에 의해 생성 구현의 경우, JobKOctetsProcessed 속성의 최종 값은의 값과 동일해야 &lt;a href=&quot;jobkoctets&quot;&gt; &lt;code&gt;JobKOctets&lt;/code&gt; 의&lt;/a&gt; 속성. 각 사본에 대한 데이터를 처리하여 인터프리터가 여러 사본을 생성하는 구현의 경우 최종 값은 &lt;a href=&quot;jobkoctets&quot;&gt; &lt;code&gt;JobKOctets&lt;/code&gt; &lt;/a&gt; 속성 값의 배수 여야 합니다.</target>
        </trans-unit>
        <trans-unit id="1d7dfecee7ffa161616519435e3d44d03df9362c" translate="yes" xml:space="preserve">
          <source>For imports, the import is added. Classes, interfaces. methods, and variables are defined. The initializer of variables, statements, and expressions are executed. The modifiers public, protected, private, static, and final are not allowed on op-level declarations and are ignored with a warning. Synchronized, native, abstract, and default top-level methods are not allowed and are errors. If a previous definition of a declaration is overwritten then there will be an event showing its status changed to OVERWRITTEN, this will not occur for dropped, rejected, or already overwritten declarations.</source>
          <target state="translated">가져 오기의 경우 가져 오기가 추가됩니다. 클래스, 인터페이스. 메소드 및 변수가 정의됩니다. 변수, 명령문 및 표현식의 이니셜 라이저가 실행됩니다. public, protected, private, static 및 final 수정자는 op 수준 선언에서 허용되지 않으며 경고와 함께 무시됩니다. 동기화, 기본, 추상 및 기본 최상위 메소드는 허용되지 않으며 오류입니다. 선언의 이전 정의를 덮어 쓰면 해당 상태가 OVERWRITTEN으로 변경된 이벤트가 발생하며 삭제, 거부 또는 이미 덮어 쓴 선언에 대해서는 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e2b22519a10688f4a1bea8cd9d520a60881a40d7" translate="yes" xml:space="preserve">
          <source>For information about X.509 certificates and CRLs, please see:</source>
          <target state="translated">X.509 인증서 및 CRL에 대한 자세한 내용은 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8688fad722f03c47fb91dbf39fb3661b85bb1d1f" translate="yes" xml:space="preserve">
          <source>For information and examples of using menu bars see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">For information and examples of using menu bars see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c36647438815ab06cecb187171d9acc3f9da96f3" translate="yes" xml:space="preserve">
          <source>For information and examples of using menu bars see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">메뉴 모음 사용에 대한 정보와 예제는 &lt;em&gt;Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="662cb4e57dc7b68ed821cd0497757b673c382163" translate="yes" xml:space="preserve">
          <source>For information and examples of using menus see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">For information and examples of using menus see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="29c1aba2fc55df113dfa14e1346ad458c76a3252" translate="yes" xml:space="preserve">
          <source>For information and examples of using menus see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">메뉴 사용에 대한 정보와 예제는 &lt;em&gt;Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0ade067e2e1dd72bc80cc13e6334ca8c385d22f" translate="yes" xml:space="preserve">
          <source>For information and examples of using popup menus, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">For information and examples of using popup menus, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7320901564e73dd2695096a69f88132162b7f72d" translate="yes" xml:space="preserve">
          <source>For information and examples of using popup menus, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">팝업 메뉴 사용에 대한 정보와 예제는 &lt;em&gt;Java Tutorial의 &lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt; 를 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="708a47bc63c338712226c228b897d83e7e0726e3" translate="yes" xml:space="preserve">
          <source>For information and examples of using spinner see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/spinner.html&quot;&gt;How to Use Spinners&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">For information and examples of using spinner see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/spinner.html&quot;&gt;How to Use Spinners&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c8c064ed84ca74c33ee63994a1ca4ab3bb2a6df" translate="yes" xml:space="preserve">
          <source>For information and examples of using spinner see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/spinner.html&quot;&gt;How to Use Spinners&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">스피너 사용에 대한 정보와 예제는 &lt;em&gt;Java 자습서&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/spinner.html&quot;&gt;스피너 사용 방법을&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07700dd83b22b86d17d2b19aa278c34c33dca7f9" translate="yes" xml:space="preserve">
          <source>For information on customizing how &lt;b&gt;text/html&lt;/b&gt; is rendered please see &lt;a href=&quot;#W3C_LENGTH_UNITS&quot;&gt;&lt;code&gt;W3C_LENGTH_UNITS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#HONOR_DISPLAY_PROPERTIES&quot;&gt;&lt;code&gt;HONOR_DISPLAY_PROPERTIES&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">For information on customizing how &lt;b&gt;text/html&lt;/b&gt; is rendered please see &lt;a href=&quot;#W3C_LENGTH_UNITS&quot;&gt; &lt;code&gt;W3C_LENGTH_UNITS&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#HONOR_DISPLAY_PROPERTIES&quot;&gt; &lt;code&gt;HONOR_DISPLAY_PROPERTIES&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a8c5755ffed0a58e3924605a1239109dbdea591" translate="yes" xml:space="preserve">
          <source>For information on how mouse wheel events are dispatched, see the class description for &lt;a href=&quot;event/mousewheelevent&quot;&gt;&lt;code&gt;MouseWheelEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">For information on how mouse wheel events are dispatched, see the class description for &lt;a href=&quot;event/mousewheelevent&quot;&gt; &lt;code&gt;MouseWheelEvent&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a39eb611ccb9eb6a80e659baf0b72ce7b96dd4eb" translate="yes" xml:space="preserve">
          <source>For information on how mouse wheel events are dispatched, see the class description for &lt;a href=&quot;mousewheelevent&quot;&gt;&lt;code&gt;MouseWheelEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">For information on how mouse wheel events are dispatched, see the class description for &lt;a href=&quot;mousewheelevent&quot;&gt; &lt;code&gt;MouseWheelEvent&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0cfabcb2d4ce1ff88f8b33c668fb5c06a02d8216" translate="yes" xml:space="preserve">
          <source>For information on how to create and deploy service providers, refer to the documentation on &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">For information on how to create and deploy service providers, refer to the documentation on &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e77a1bf016a3e275018812830c53ab5dfce41c9" translate="yes" xml:space="preserve">
          <source>For information on the names, see startElement.</source>
          <target state="translated">For information on the names, see startElement.</target>
        </trans-unit>
        <trans-unit id="f05dee150a8a7141366a693983458a0d9ef32ff7" translate="yes" xml:space="preserve">
          <source>For information on the threading issues of the event dispatch machinery, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/AWTThreadIssues.html#Autoshutdown&quot;&gt;AWT Threading Issues&lt;/a&gt;.</source>
          <target state="translated">For information on the threading issues of the event dispatch machinery, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/AWTThreadIssues.html#Autoshutdown&quot;&gt;AWT Threading Issues&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="311e3cf159bf4759d9af450775b9054c6a7f7561" translate="yes" xml:space="preserve">
          <source>For information on the threading issues of the event dispatch machinery, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/AWTThreadIssues.html#Autoshutdown&quot;&gt;AWT Threading Issues&lt;/a&gt;.</source>
          <target state="translated">이벤트 디스패치 기계의 스레딩 문제에 대한 정보는 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/AWTThreadIssues.html#Autoshutdown&quot;&gt;AWT 스레딩 문제를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6bca1a70b8a9d47b42d800fe5073e4db6547f559" translate="yes" xml:space="preserve">
          <source>For information on using data transfer with Swing, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt; How to Use Drag and Drop and Data Transfer&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;, for more information.</source>
          <target state="translated">For information on using data transfer with Swing, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt; How to Use Drag and Drop and Data Transfer&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;, for more information.</target>
        </trans-unit>
        <trans-unit id="d1add2573ab1adf12bb7e6697260a8cdb349a6c6" translate="yes" xml:space="preserve">
          <source>For information on using data transfer with Swing, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt; How to Use Drag and Drop and Data Transfer&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;, for more information.</source>
          <target state="translated">Swing에서 데이터 전송 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt;을 사용하는 방법에&lt;/a&gt; 대한 자세한 내용 은 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 How to Use Drag and Drop and Data Transfer 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="38ee7b0d0a82550013b02d59ffc3943a4f4f8f71" translate="yes" xml:space="preserve">
          <source>For input methods provided by host operating systems, it is not always possible to determine whether this operation is supported. For example, an input method may enable composition only for some locales, and do nothing for other locales. For such input methods, it is possible that this method does not throw &lt;a href=&quot;../../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;, but also does not affect whether composition is enabled.</source>
          <target state="translated">For input methods provided by host operating systems, it is not always possible to determine whether this operation is supported. For example, an input method may enable composition only for some locales, and do nothing for other locales. For such input methods, it is possible that this method does not throw &lt;a href=&quot;../../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;, but also does not affect whether composition is enabled.</target>
        </trans-unit>
        <trans-unit id="9fbd613382fe235d1118481dbe11ae0114c491df" translate="yes" xml:space="preserve">
          <source>For input methods provided by host operating systems, it is not always possible to determine whether this operation is supported. For example, an input method may enable composition only for some locales, and do nothing for other locales. For such input methods, it is possible that this method does not throw &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;, but also does not affect whether composition is enabled.</source>
          <target state="translated">For input methods provided by host operating systems, it is not always possible to determine whether this operation is supported. For example, an input method may enable composition only for some locales, and do nothing for other locales. For such input methods, it is possible that this method does not throw &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;, but also does not affect whether composition is enabled.</target>
        </trans-unit>
        <trans-unit id="079a98af4118c7db3c6ea12ffe6be5c1b4f3db94" translate="yes" xml:space="preserve">
          <source>For inserts, the indexes represent the</source>
          <target state="translated">For inserts, the indexes represent the</target>
        </trans-unit>
        <trans-unit id="d82a0da809e48b52c3793077a5499e2f62e6d228" translate="yes" xml:space="preserve">
          <source>For instance eth0:1 will be a subinterface to eth0.</source>
          <target state="translated">예를 들어 eth0 : 1은 eth0의 하위 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="22e4d1bfbba0c0574d67f23e7853a569a58881c5" translate="yes" xml:space="preserve">
          <source>For instance, consider the following struct declaration in C:</source>
          <target state="translated">예를 들어 C에서 다음 구조체 선언을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="2ef404ebc66421af26a36682a8560469fc8a566c" translate="yes" xml:space="preserve">
          <source>For instance, given a sequence layout of the kind:</source>
          <target state="translated">예를 들어 다음과 같은 종류의 시퀀스 레이아웃이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b679074e1f9aaff9fab194a3eb3eb1d920c34d0" translate="yes" xml:space="preserve">
          <source>For instance, if a vendor named Fred, Inc. offered a &lt;code&gt;SyncProvider&lt;/code&gt; implementation, you could have the following:</source>
          <target state="translated">For instance, if a vendor named Fred, Inc. offered a &lt;code&gt;SyncProvider&lt;/code&gt; implementation, you could have the following:</target>
        </trans-unit>
        <trans-unit id="f799caef16ddd4d32fdd7fb7fb732b6b99f8fe9f" translate="yes" xml:space="preserve">
          <source>For instance, in order to configure plain instances of XMLFormatter to omit the new &lt;code&gt;&amp;lt;nano&amp;gt;&lt;/code&gt; element, &lt;code&gt;java.util.logging.XMLFormatter.useInstant = false&lt;/code&gt; can be specified in the logging configuration.</source>
          <target state="translated">For instance, in order to configure plain instances of XMLFormatter to omit the new &lt;code&gt;&amp;lt;nano&amp;gt;&lt;/code&gt; element, &lt;code&gt;java.util.logging.XMLFormatter.useInstant = false&lt;/code&gt; can be specified in the logging configuration.</target>
        </trans-unit>
        <trans-unit id="70234272a3b0d056278aecef0730ed49132b14a6" translate="yes" xml:space="preserve">
          <source>For instance, in the above example calling &lt;code&gt;replaceWholeText&lt;/code&gt; on the &lt;code&gt;Text&lt;/code&gt; node that contains &quot;bar&quot; with &quot;yo&quot; in argument results in the following:</source>
          <target state="translated">For instance, in the above example calling &lt;code&gt;replaceWholeText&lt;/code&gt; on the &lt;code&gt;Text&lt;/code&gt; node that contains &quot;bar&quot; with &quot;yo&quot; in argument results in the following:</target>
        </trans-unit>
        <trans-unit id="eac033dcc4f324e4af48e46ba5cfcda47230874d" translate="yes" xml:space="preserve">
          <source>For instance, in the example below &lt;code&gt;wholeText&lt;/code&gt; on the &lt;code&gt;Text&lt;/code&gt; node that contains &quot;bar&quot; returns &quot;barfoo&quot;, while on the &lt;code&gt;Text&lt;/code&gt; node that contains &quot;foo&quot; it returns &quot;barfoo&quot;.</source>
          <target state="translated">For instance, in the example below &lt;code&gt;wholeText&lt;/code&gt; on the &lt;code&gt;Text&lt;/code&gt; node that contains &quot;bar&quot; returns &quot;barfoo&quot;, while on the &lt;code&gt;Text&lt;/code&gt; node that contains &quot;foo&quot; it returns &quot;barfoo&quot;.</target>
        </trans-unit>
        <trans-unit id="ffee8bd9056a2b45a907b0b3baabeded0bf3eea4" translate="yes" xml:space="preserve">
          <source>For instance, in the example below calling &lt;code&gt;replaceWholeText&lt;/code&gt; on the &lt;code&gt;Text&lt;/code&gt; node that contains &quot;bar&quot; fails, because the &lt;code&gt;EntityReference&lt;/code&gt; node &quot;ent&quot; contains an &lt;code&gt;Element&lt;/code&gt; node which cannot be removed.</source>
          <target state="translated">For instance, in the example below calling &lt;code&gt;replaceWholeText&lt;/code&gt; on the &lt;code&gt;Text&lt;/code&gt; node that contains &quot;bar&quot; fails, because the &lt;code&gt;EntityReference&lt;/code&gt; node &quot;ent&quot; contains an &lt;code&gt;Element&lt;/code&gt; node which cannot be removed.</target>
        </trans-unit>
        <trans-unit id="c1496abd7300063ad9deaa506cbc8b1f4d0ce10e" translate="yes" xml:space="preserve">
          <source>For instanceof with a pattern, i.e. in the following form:</source>
          <target state="translated">예를 들어 패턴이있는 instanceof, 즉 다음 형식 :</target>
        </trans-unit>
        <trans-unit id="03a512596becc85c896f6e223cb9d257c4363540" translate="yes" xml:space="preserve">
          <source>For instanceof without a pattern, i.e. in the following form:</source>
          <target state="translated">예를 들어 패턴이없는 인스턴스, 즉 다음과 같은 형식 :</target>
        </trans-unit>
        <trans-unit id="b3a692e5bb2f1b4f5bf2ce0c8822cf89de2eecf4" translate="yes" xml:space="preserve">
          <source>For instances with unsigned sample values, the unnormalized color/alpha component representation is only supported if two conditions hold. First, sample value 0 must map to normalized component value 0.0 and sample value 2&lt;sup&gt;n&lt;/sup&gt; - 1 to 1.0. Second the min/max range of all color components of the &lt;code&gt;ColorSpace&lt;/code&gt; must be 0.0 to 1.0. In this case, the component representation is the n least significant bits of the corresponding sample. Thus each component is an unsigned integral value between 0 and 2&lt;sup&gt;n&lt;/sup&gt; - 1, where n is the number of significant bits for a particular component. If these conditions are not met, any method taking an unnormalized component argument will throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">For instances with unsigned sample values, the unnormalized color/alpha component representation is only supported if two conditions hold. First, sample value 0 must map to normalized component value 0.0 and sample value 2&lt;sup&gt;n&lt;/sup&gt; - 1 to 1.0. Second the min/max range of all color components of the &lt;code&gt;ColorSpace&lt;/code&gt; must be 0.0 to 1.0. In this case, the component representation is the n least significant bits of the corresponding sample. Thus each component is an unsigned integral value between 0 and 2&lt;sup&gt;n&lt;/sup&gt; - 1, where n is the number of significant bits for a particular component. If these conditions are not met, any method taking an unnormalized component argument will throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="719fe421d98202b344f227f4d64df21fe27399aa" translate="yes" xml:space="preserve">
          <source>For key pressed and key released events, the getKeyCode method returns the event's keyCode. For key typed events, the getKeyCode method always returns &lt;code&gt;VK_UNDEFINED&lt;/code&gt;. The &lt;code&gt;getExtendedKeyCode&lt;/code&gt; method may also be used with many international keyboard layouts.</source>
          <target state="translated">For key pressed and key released events, the getKeyCode method returns the event's keyCode. For key typed events, the getKeyCode method always returns &lt;code&gt;VK_UNDEFINED&lt;/code&gt; . The &lt;code&gt;getExtendedKeyCode&lt;/code&gt; method may also be used with many international keyboard layouts.</target>
        </trans-unit>
        <trans-unit id="54bf9c03f8ae4c844a7fb836b024adb6eeab7bd2" translate="yes" xml:space="preserve">
          <source>For keyboard events, &lt;a href=&quot;#key&quot;&gt;&lt;code&gt;key&lt;/code&gt;&lt;/a&gt; contains a value indicating which key was activated, and &lt;a href=&quot;#modifiers&quot;&gt;&lt;code&gt;modifiers&lt;/code&gt;&lt;/a&gt; contains the modifiers for that event. For the KEY_PRESS and KEY_RELEASE event ids, the value of &lt;code&gt;key&lt;/code&gt; is the unicode character code for the key. For KEY_ACTION and KEY_ACTION_RELEASE, the value of &lt;code&gt;key&lt;/code&gt; is one of the defined action-key identifiers in the &lt;code&gt;Event&lt;/code&gt; class (&lt;code&gt;PGUP&lt;/code&gt;, &lt;code&gt;PGDN&lt;/code&gt;, &lt;code&gt;F1&lt;/code&gt;, &lt;code&gt;F2&lt;/code&gt;, etc).</source>
          <target state="translated">For keyboard events, &lt;a href=&quot;#key&quot;&gt; &lt;code&gt;key&lt;/code&gt; &lt;/a&gt; contains a value indicating which key was activated, and &lt;a href=&quot;#modifiers&quot;&gt; &lt;code&gt;modifiers&lt;/code&gt; &lt;/a&gt; contains the modifiers for that event. For the KEY_PRESS and KEY_RELEASE event ids, the value of &lt;code&gt;key&lt;/code&gt; is the unicode character code for the key. For KEY_ACTION and KEY_ACTION_RELEASE, the value of &lt;code&gt;key&lt;/code&gt; is one of the defined action-key identifiers in the &lt;code&gt;Event&lt;/code&gt; class ( &lt;code&gt;PGUP&lt;/code&gt; , &lt;code&gt;PGDN&lt;/code&gt; , &lt;code&gt;F1&lt;/code&gt; , &lt;code&gt;F2&lt;/code&gt; , etc).</target>
        </trans-unit>
        <trans-unit id="4f376632644072537f9164c8002757250815e1ed" translate="yes" xml:space="preserve">
          <source>For left to right orientations, the size is determined from the current AbstractLayoutCache. For RTL orientations, the preferred size becomes the width minus the minimum x position.</source>
          <target state="translated">For left to right orientations, the size is determined from the current AbstractLayoutCache. For RTL orientations, the preferred size becomes the width minus the minimum x position.</target>
        </trans-unit>
        <trans-unit id="da9058e03b6adc44700d838fbdd67dfe65cb75f3" translate="yes" xml:space="preserve">
          <source>For maximum portability, a call's &lt;code&gt;ResultSet&lt;/code&gt; objects and update counts should be processed prior to getting the values of output parameters.</source>
          <target state="translated">For maximum portability, a call's &lt;code&gt;ResultSet&lt;/code&gt; objects and update counts should be processed prior to getting the values of output parameters.</target>
        </trans-unit>
        <trans-unit id="39b24e3909cb8f16d11a9b4e3cf43043aff83dc4" translate="yes" xml:space="preserve">
          <source>For messages being sent &lt;code&gt;true&lt;/code&gt; indicates that the message is complete, &lt;code&gt;false&lt;/code&gt; indicates that the message is not complete. How the send channel interprets this value depends on the value of its &lt;a href=&quot;sctpstandardsocketoptions#SCTP_EXPLICIT_COMPLETE&quot;&gt;&lt;code&gt;SCTP_EXPLICIT_COMPLETE&lt;/code&gt;&lt;/a&gt; socket option.</source>
          <target state="translated">전송되는 메시지의 &lt;code&gt;true&lt;/code&gt; 는 메시지가 완료 되었음을 나타내고 &lt;code&gt;false&lt;/code&gt; 는 메시지가 완료 되지 않았 음을 나타냅니다. 송신 채널이이 값을 해석하는 방법은 &lt;a href=&quot;sctpstandardsocketoptions#SCTP_EXPLICIT_COMPLETE&quot;&gt; &lt;code&gt;SCTP_EXPLICIT_COMPLETE&lt;/code&gt; &lt;/a&gt; 소켓 옵션 의 값에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="09cc51be0ad57f631b9b037d5a5c1ec3cc09b637" translate="yes" xml:space="preserve">
          <source>For method and constructor parameters, the name of each parameter must be distinct from the names of all other parameters of the same executable. If the original source names are not available, an implementation may synthesize names subject to the distinctness requirement above.</source>
          <target state="translated">메소드 및 생성자 매개 변수의 경우 각 매개 변수의 이름은 동일한 실행 파일의 다른 모든 매개 변수 이름과 달라야합니다. 원래 소스 이름을 사용할 수없는 경우 구현시 위의 구별 요구 사항에 따라 이름을 합성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7aa481bebd670386bf813c89465c530eee7a4d3e" translate="yes" xml:space="preserve">
          <source>For methods that can throw &lt;a href=&quot;instancenotfoundexception&quot;&gt;&lt;code&gt;InstanceNotFoundException&lt;/code&gt;&lt;/a&gt;, this exception is thrown for a non-existent MBean, regardless of permissions. This is because a non-existent MBean has no &lt;code&gt;className&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;instancenotfoundexception&quot;&gt; &lt;code&gt;InstanceNotFoundException&lt;/code&gt; &lt;/a&gt; 을 발생시킬 수있는 메소드의 경우 , 권한에 관계없이 존재하지 않는 MBean에 대해이 예외가 발생합니다. 존재하지 않는 MBean에 &lt;code&gt;className&lt;/code&gt; 이 없기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="76774b41448928d2dea1d49da68288f4b72f5eb8" translate="yes" xml:space="preserve">
          <source>For methods that return a textual representation as output value, the first form, i.e. a dotted-quad string, is used.</source>
          <target state="translated">텍스트 표현을 출력 값으로 리턴하는 메소드의 경우, 첫 번째 양식, 즉 점진 쿼드 문자열이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bf7ab1ce5e7d929aee2f17a0a3acfac53a1554a0" translate="yes" xml:space="preserve">
          <source>For methods that return a textual representation as output value, the full form is used. Inet6Address will return the full form because it is unambiguous when used in combination with other textual data.</source>
          <target state="translated">텍스트 표현을 출력 값으로 리턴하는 메소드의 경우 전체 양식이 사용됩니다. Inet6Address는 다른 텍스트 데이터와 함께 사용될 때 모호하지 않기 때문에 전체 형식을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8f24aa23e5872e59ccfbd9ed068b2210966f6b77" translate="yes" xml:space="preserve">
          <source>For more details on declaring service providers, and the JAR format in general, see the  JAR File Specification.</source>
          <target state="translated">서비스 제공자 선언 및 일반적인 JAR 형식에 대한 자세한 정보는 JAR 파일 스펙을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="643a9476ed6ecbe548cc662cd1b19fe7604623bf" translate="yes" xml:space="preserve">
          <source>For more details on declaring service providers, and the JAR format in general, see the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/jar/jar.html&quot;&gt; JAR File Specification&lt;/a&gt;.</source>
          <target state="translated">서비스 제공자 선언 및 일반적인 JAR 형식에 대한 자세한 정보는 &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/jar/jar.html&quot;&gt;JAR 파일 스펙을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae8a4f018bd5638b094a31e219c904b99c0f2995" translate="yes" xml:space="preserve">
          <source>For more developer information on how to use these interfaces, including information on how to design &lt;code&gt;Key&lt;/code&gt; classes for hardware devices, please refer to the cryptographic provider developer guide:</source>
          <target state="translated">하드웨어 장치의 &lt;code&gt;Key&lt;/code&gt; 클래스 를 설계하는 방법에 대한 정보를 포함하여 이러한 인터페이스를 사용하는 방법에 대한 자세한 개발자 정보 는 암호화 제공자 개발자 안내서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="81e3cc80113990862f7e618b47a2e12565303132" translate="yes" xml:space="preserve">
          <source>For more developer information on how to use these interfaces, including information on how to design &lt;code&gt;Key&lt;/code&gt; classes for hardware devices, please refer to these cryptographic provider developer guides:</source>
          <target state="translated">하드웨어 장치의 &lt;code&gt;Key&lt;/code&gt; 클래스 를 설계하는 방법에 대한 정보를 포함하여 이러한 인터페이스를 사용하는 방법에 대한 자세한 개발자 정보는 다음 암호화 제공자 개발자 안내서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7d9204267faf9117d206239d345f2c3370d63bca" translate="yes" xml:space="preserve">
          <source>For more flexible initialization, please see &lt;a href=&quot;#init(javax.net.ssl.ManagerFactoryParameters)&quot;&gt;&lt;code&gt;init(ManagerFactoryParameters)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">For more flexible initialization, please see &lt;a href=&quot;#init(javax.net.ssl.ManagerFactoryParameters)&quot;&gt; &lt;code&gt;init(ManagerFactoryParameters)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b9fda7de9da51760582b2ea855ba85a39fd18514" translate="yes" xml:space="preserve">
          <source>For more flexible initialization, please see &lt;a href=&quot;keymanagerfactory#init-javax.net.ssl.ManagerFactoryParameters-&quot;&gt;&lt;code&gt;init(ManagerFactoryParameters)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">보다 유연한 초기화는 &lt;a href=&quot;keymanagerfactory#init-javax.net.ssl.ManagerFactoryParameters-&quot;&gt; &lt;code&gt;init(ManagerFactoryParameters)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff1200e59956243f9672ac2eced7edb97e653f86" translate="yes" xml:space="preserve">
          <source>For more flexible initialization, please see &lt;a href=&quot;trustmanagerfactory#init-javax.net.ssl.ManagerFactoryParameters-&quot;&gt;&lt;code&gt;init(ManagerFactoryParameters)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">보다 유연한 초기화는 &lt;a href=&quot;trustmanagerfactory#init-javax.net.ssl.ManagerFactoryParameters-&quot;&gt; &lt;code&gt;init(ManagerFactoryParameters)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5fd06cc6e7479451e3716a9760936425212c4e1f" translate="yes" xml:space="preserve">
          <source>For more information about &lt;code&gt;SecurityManager&lt;/code&gt; changes made in the JDK and advice regarding porting of 1.1-style security managers, see the security documentation.</source>
          <target state="translated">에 대한 자세한 내용은 &lt;code&gt;SecurityManager&lt;/code&gt; JDK를 만들어와 조언을 1.1 형식의 시큐러티 매니저를 이식 변경에 관한 보안 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a08a4a16ece0e8c8fdf593bd2a70e2beea2d6bca" translate="yes" xml:space="preserve">
          <source>For more information about introspection and design patterns, please consult the &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html&quot;&gt;JavaBeans specification&lt;/a&gt;.</source>
          <target state="translated">인트로 스펙 션 및 디자인 패턴에 대한 자세한 내용은 &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html&quot;&gt;JavaBeans 사양을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b48c85d76a708f58e3b1d3720fdc1490243108d" translate="yes" xml:space="preserve">
          <source>For more information about introspection and design patterns, please consult the &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html&quot;&gt;JavaBeans&amp;trade; specification&lt;/a&gt;.</source>
          <target state="translated">검사 및 디자인 패턴에 대한 자세한 정보는 &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html&quot;&gt;JavaBeans &amp;trade; 스펙을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e826a923d21ca0ae7f2bc333eae1ef3ba5d5d1d0" translate="yes" xml:space="preserve">
          <source>For more information about the operation of the built-in JPEG plug-ins, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG metadata format specification and usage notes&lt;/a&gt;.</source>
          <target state="translated">For more information about the operation of the built-in JPEG plug-ins, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG metadata format specification and usage notes&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1b27d702c47799618b4c6eee0d51e8df10dff887" translate="yes" xml:space="preserve">
          <source>For more information about the operation of the built-in JPEG plug-ins, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG metadata format specification and usage notes&lt;/a&gt;.</source>
          <target state="translated">내장 JPEG 플러그인 작동에 대한 자세한 내용은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG 메타 데이터 형식 사양 및 사용 참고 사항을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="01a99e9d7949612b1e41eea534d474e4c6c23dbb" translate="yes" xml:space="preserve">
          <source>For more information about the operation of the built-in JPEG plug-ins, see the JPEG metadata format specification and usage notes.</source>
          <target state="translated">내장 JPEG 플러그인 작동에 대한 자세한 내용은 JPEG 메타 데이터 형식 사양 및 사용 메모를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ca7cab63f922f3f1dbb72be8cb139b2c682dc7a6" translate="yes" xml:space="preserve">
          <source>For more information about the operation of the standard JPEG plug-in, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG metadata format specification and usage notes&lt;/a&gt;</source>
          <target state="translated">For more information about the operation of the standard JPEG plug-in, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG metadata format specification and usage notes&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96ef9df10914781567843d85e087f208994e6385" translate="yes" xml:space="preserve">
          <source>For more information about the operation of the standard JPEG plug-in, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG metadata format specification and usage notes&lt;/a&gt;</source>
          <target state="translated">표준 JPEG 플러그인 작동에 대한 자세한 내용은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG 메타 데이터 형식 사양 및 사용 참고 사항을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c3811c966c9c719a30361e2707e6b04cc1227e5b" translate="yes" xml:space="preserve">
          <source>For more information about the operation of the standard JPEG plug-in, see the JPEG metadata format specification and usage notes</source>
          <target state="translated">표준 JPEG 플러그인 작동에 대한 자세한 내용은 JPEG 메타 데이터 형식 사양 및 사용 정보를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a7874053f8215f8f069529c92d7fce008faba07b" translate="yes" xml:space="preserve">
          <source>For more information about using resource bundles with the XMLEncoder, see &lt;a href=&quot;http://www.oracle.com/technetwork/java/persistence4-140124.html#i18n&quot;&gt; Creating Internationalized Applications&lt;/a&gt;,</source>
          <target state="translated">For more information about using resource bundles with the XMLEncoder, see &lt;a href=&quot;http://www.oracle.com/technetwork/java/persistence4-140124.html#i18n&quot;&gt; Creating Internationalized Applications&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="bf4eb80e08fdbf7afe2002f9657ceb53a408645b" translate="yes" xml:space="preserve">
          <source>For more information about using resource bundles with the XMLEncoder, see http://java.sun.com/products/jfc/tsc/articles/persistence4/#i18n</source>
          <target state="translated">XMLEncoder와 함께 자원 번들을 사용하는 방법에 대한 자세한 내용은 http://java.sun.com/products/jfc/tsc/articles/persistence4/#i18n을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b0eebce63cb322ab248193b87a12e8c1789a810f" translate="yes" xml:space="preserve">
          <source>For more information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">For more information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="333b90c344c7e7f4a6d48007bd9d8179f7d1f61a" translate="yes" xml:space="preserve">
          <source>For more information and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">자세한 내용과 예제 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="578e9a2249248ae3a0b9437101f71f2e9428f7e5" translate="yes" xml:space="preserve">
          <source>For more information including algorithms used to create &lt;code&gt;UUID&lt;/code&gt;s, see &lt;a href=&quot;http://www.ietf.org/rfc/rfc4122.txt&quot;&gt; &lt;i&gt;RFC 4122: A Universally Unique IDentifier (UUID) URN Namespace&lt;/i&gt;&lt;/a&gt;, section 4.2 &quot;Algorithms for Creating a Time-Based UUID&quot;.</source>
          <target state="translated">&lt;code&gt;UUID&lt;/code&gt; 를 생성하는 데 사용되는 알고리즘을 포함한 자세한 내용 은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc4122.txt&quot;&gt;&lt;i&gt;RFC 4122 : UUID (Universally Unique Identifier) ​​URN 네임 스페이스&lt;/i&gt;&lt;/a&gt; , 4.2 &quot;시간 기반 UUID 생성 알고리즘&quot;섹션을 참조하십시오. &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="ba8b1407dfbd73a80e0f18eb4cfbef2b392c96ad" translate="yes" xml:space="preserve">
          <source>For more information including algorithms used to create &lt;code&gt;UUID&lt;/code&gt;s, see &lt;a href=&quot;https://www.ietf.org/rfc/rfc4122.txt&quot;&gt; &lt;i&gt;RFC 4122: A Universally Unique IDentifier (UUID) URN Namespace&lt;/i&gt;&lt;/a&gt;, section 4.2 &quot;Algorithms for Creating a Time-Based UUID&quot;.</source>
          <target state="translated">&lt;code&gt;UUID&lt;/code&gt; 생성에 사용되는 알고리즘을 포함한 자세한 내용 은 &lt;a href=&quot;https://www.ietf.org/rfc/rfc4122.txt&quot;&gt;&lt;i&gt;RFC 4122 : UUID (Universally Unique IDentifier) ​​URN 네임 스페이스&lt;/i&gt;&lt;/a&gt; , 섹션 4.2 &quot;시간 기반 UUID 생성 알고리즘&quot;을 참조하십시오. &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="24cf73d2cec75865fec392cca4fce7bcf51ce26c" translate="yes" xml:space="preserve">
          <source>For more information on TrueType and OpenType fonts, see the OpenType specification. ( &lt;a href=&quot;http://www.microsoft.com/typography/otspec/&quot;&gt;http://www.microsoft.com/typography/otspec/&lt;/a&gt; ).</source>
          <target state="translated">For more information on TrueType and OpenType fonts, see the OpenType specification. ( &lt;a href=&quot;http://www.microsoft.com/typography/otspec/&quot;&gt;http://www.microsoft.com/typography/otspec/&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="186debb813d7076cd6849988823d3a2f569c02f8" translate="yes" xml:space="preserve">
          <source>For more information on TrueType and OpenType fonts, see the OpenType specification. ( &lt;a href=&quot;https://www.microsoft.com/typography/otspec/&quot;&gt;http://www.microsoft.com/typography/otspec/&lt;/a&gt; ).</source>
          <target state="translated">TrueType 및 OpenType 글꼴에 대한 자세한 내용은 OpenType 사양을 참조하세요. ( &lt;a href=&quot;https://www.microsoft.com/typography/otspec/&quot;&gt;http://www.microsoft.com/typography/otspec/&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="cdd0deee19a74716ce69b0928bbf21dc4e66a7ed" translate="yes" xml:space="preserve">
          <source>For more information on content panes and other features that root panes provide, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/toplevel.html&quot;&gt;Using Top-Level Containers&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">For more information on content panes and other features that root panes provide, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/toplevel.html&quot;&gt;Using Top-Level Containers&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="c7b1c7fe5f49ca613b002d2dff163fa45d746698" translate="yes" xml:space="preserve">
          <source>For more information on content panes and other features that root panes provide, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/toplevel.html&quot;&gt;Using Top-Level Containers&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">컨텐츠 창 및 루트 창이 제공하는 기타 기능에 대한 자세한 내용 &lt;em&gt;은 Java Tutorial의 &lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/toplevel.html&quot;&gt;Using Top-Level Containers&lt;/a&gt; 를 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4824abf981bf81ee2ff53f62ff7bb011062e10ef" translate="yes" xml:space="preserve">
          <source>For more information on full-screen exclusive mode API, see the &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/extra/fullscreen/index.html&quot;&gt; Full-Screen Exclusive Mode API Tutorial&lt;/a&gt;.</source>
          <target state="translated">For more information on full-screen exclusive mode API, see the &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/extra/fullscreen/index.html&quot;&gt; Full-Screen Exclusive Mode API Tutorial&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9b8786ac4d9337c8262f5f808fc7b6268f93a62f" translate="yes" xml:space="preserve">
          <source>For more information on full-screen exclusive mode API, see the &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/extra/fullscreen/index.html&quot;&gt; Full-Screen Exclusive Mode API Tutorial&lt;/a&gt;.</source>
          <target state="translated">전체 화면 전용 모드 API에 대한 자세한 내용은 전체 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/extra/fullscreen/index.html&quot;&gt;화면 전용 모드 API 자습서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9157dadc80922a9a5d11e1c0eb4437fd9bd802bf" translate="yes" xml:space="preserve">
          <source>For more information on the &lt;code&gt;Document&lt;/code&gt; class, see &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/tech/articles-jsp-139072.html&quot;&gt;The Swing Connection&lt;/a&gt; and most particularly the article, &lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/text/element_interface&quot;&gt; The Element Interface&lt;/a&gt;.</source>
          <target state="translated">For more information on the &lt;code&gt;Document&lt;/code&gt; class, see &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/tech/articles-jsp-139072.html&quot;&gt;The Swing Connection&lt;/a&gt; and most particularly the article, &lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/text/element_interface&quot;&gt; The Element Interface&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="33759175457013b2e6d7889bccdc9919f7498bcf" translate="yes" xml:space="preserve">
          <source>For more information on the user space coordinate system and the rendering process, see the &lt;code&gt;Graphics2D&lt;/code&gt; class comments.</source>
          <target state="translated">For more information on the user space coordinate system and the rendering process, see the &lt;code&gt;Graphics2D&lt;/code&gt; class comments.</target>
        </trans-unit>
        <trans-unit id="9065a8abeebf95664c0a281aa11db9e70161c3c6" translate="yes" xml:space="preserve">
          <source>For more information on these subjects, see the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;Swing package description&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;The Java Tutorial&lt;/em&gt; section &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/jcomponent.html&quot;&gt;The JComponent Class&lt;/a&gt;.</source>
          <target state="translated">For more information on these subjects, see the &lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;Swing package description&lt;/code&gt; &lt;/a&gt; and &lt;em&gt;The Java Tutorial&lt;/em&gt; section &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/jcomponent.html&quot;&gt;The JComponent Class&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4330b0d94b0d0326bd2e928bf7934b24637e0567" translate="yes" xml:space="preserve">
          <source>For more information on these subjects, see the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;Swing package description&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;The Java Tutorial&lt;/em&gt; section &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/jcomponent.html&quot;&gt;The JComponent Class&lt;/a&gt;.</source>
          <target state="translated">이러한 주제에 대한 자세한 내용은 &lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;Swing package description&lt;/code&gt; &lt;/a&gt; 및 &lt;em&gt;The Java Tutorial&lt;/em&gt; 섹션 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/jcomponent.html&quot;&gt;The JComponent Class를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e77e85d84c97791f93f22cb3eeb63334102c0bd" translate="yes" xml:space="preserve">
          <source>For more information on this topic, see section 14.2, &quot;Condition Queues,&quot; in Brian Goetz and others' &lt;em&gt;Java Concurrency in Practice&lt;/em&gt; (Addison-Wesley, 2006) or Item 69 in Joshua Bloch's &lt;em&gt;Effective Java, Second Edition&lt;/em&gt; (Addison-Wesley, 2008).</source>
          <target state="translated">For more information on this topic, see section 14.2, &quot;Condition Queues,&quot; in Brian Goetz and others' &lt;em&gt;Java Concurrency in Practice&lt;/em&gt; (Addison-Wesley, 2006) or Item 69 in Joshua Bloch's &lt;em&gt;Effective Java, Second Edition&lt;/em&gt; (Addison-Wesley, 2008).</target>
        </trans-unit>
        <trans-unit id="fd6df08100fcb4e0392469e47d0f1c198809b889" translate="yes" xml:space="preserve">
          <source>For more information on using Java Sound see:</source>
          <target state="translated">For more information on using Java Sound see:</target>
        </trans-unit>
        <trans-unit id="a3c227b2aee29a2d9a82f7e55ab6f087bec84d33" translate="yes" xml:space="preserve">
          <source>For more information on using data transfer with Swing see the &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt;How to Use Drag and Drop and Data Transfer&lt;/a&gt;, section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">For more information on using data transfer with Swing see the &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt;How to Use Drag and Drop and Data Transfer&lt;/a&gt;, section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="339ba2cc5acac3af981e48e6807e7c854f380ff6" translate="yes" xml:space="preserve">
          <source>For more information on using data transfer with Swing see the &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt;How to Use Drag and Drop and Data Transfer&lt;/a&gt;, section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">Swing에서 데이터 전송 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt;을 사용&lt;/a&gt; 하는 방법 에 대한 자세한 내용 은 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 How to Use Drag and Drop and Data Transfer 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="924cf796f95fe65f04f10759d8ebc0d0480f1be0" translate="yes" xml:space="preserve">
          <source>For more information on what expanded state means, see the &lt;a href=&quot;jtree&quot;&gt;&lt;code&gt;JTree description&lt;/code&gt;&lt;/a&gt; above.</source>
          <target state="translated">For more information on what expanded state means, see the &lt;a href=&quot;jtree&quot;&gt; &lt;code&gt;JTree description&lt;/code&gt; &lt;/a&gt; above.</target>
        </trans-unit>
        <trans-unit id="aa58ed474d6ceaf5b1697038f1320fe3f16736ac" translate="yes" xml:space="preserve">
          <source>For more information you might also want to check out &lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/persistence3&quot;&gt;Long Term Persistence of JavaBeans Components: XML Schema&lt;/a&gt;, an article in &lt;em&gt;The Swing Connection.&lt;/em&gt;</source>
          <target state="translated">자세한 내용 &lt;em&gt;은 Swing Connection&lt;/em&gt; 의 기사 &lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/persistence3&quot;&gt;인 JavaBeans 구성 요소의 장기 지속성 : XML 스키마&lt;/a&gt; 를 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="beed59bdd4e48ec33361f1a310f9787e27db5082" translate="yes" xml:space="preserve">
          <source>For more information you might also want to check out &lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/persistence4&quot;&gt;Using XMLEncoder&lt;/a&gt;, an article in &lt;em&gt;The Swing Connection.&lt;/em&gt;</source>
          <target state="translated">자세한 내용 &lt;em&gt;은 Swing Connection&lt;/em&gt; 의 기사 인 &lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/persistence4&quot;&gt;Using XMLEncoder&lt;/a&gt; 를 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fdd77c4acf8523af4881e0ec52f0a004e43c75d8" translate="yes" xml:space="preserve">
          <source>For more information you might also want to check out &lt;a href=&quot;http://www.oracle.com/technetwork/java/persistence3-139471.html&quot;&gt; Long Term Persistence of JavaBeans Components: XML Schema&lt;/a&gt;, an article in &lt;em&gt;The Swing Connection.&lt;/em&gt;</source>
          <target state="translated">For more information you might also want to check out &lt;a href=&quot;http://www.oracle.com/technetwork/java/persistence3-139471.html&quot;&gt; Long Term Persistence of JavaBeans Components: XML Schema&lt;/a&gt;, an article in &lt;em&gt;The Swing Connection.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ee1df522655b7bbb3e3266971a02cdfe17d684cf" translate="yes" xml:space="preserve">
          <source>For more information you might also want to check out &lt;a href=&quot;http://www.oracle.com/technetwork/java/persistence4-140124.html&quot;&gt; Using XMLEncoder&lt;/a&gt;, an article in &lt;em&gt;The Swing Connection.&lt;/em&gt;</source>
          <target state="translated">For more information you might also want to check out &lt;a href=&quot;http://www.oracle.com/technetwork/java/persistence4-140124.html&quot;&gt; Using XMLEncoder&lt;/a&gt;, an article in &lt;em&gt;The Swing Connection.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e3a8126f411e59d515eedaa4745571aeed4e1e7" translate="yes" xml:space="preserve">
          <source>For more information, refer to Java Plug-In's guides,  Applet Security Basics and  usePolicy Permission.</source>
          <target state="translated">자세한 정보는 Java 플러그인 안내서, 애플릿 보안 기본 사항 및 usePolicy Permission을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="566805fa6faf03baabb71ea15c05e3b1b5d50ffa" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html#transferTiming&quot;&gt;Timing Focus Transfers&lt;/a&gt;, a section in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/&quot;&gt;The Swing Tutorial&lt;/a&gt;.</source>
          <target state="translated">For more information, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html#transferTiming&quot;&gt;Timing Focus Transfers&lt;/a&gt;, a section in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/&quot;&gt;The Swing Tutorial&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9adb545b1df02cb7b81e0401d795a177674ce56e" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="translated">For more information, see &lt;a href=&quot;http://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="635ee25f145a41ce7f17a98821b60a12cf6621b7" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt;RFC 3280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt;RFC 3280 : Internet X.509 공개 키 인프라 인증서 및 CRL 프로필을 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fe462f8fbe2a4fc311617d213131726523dbae66" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt; Using the Multiplexing Look and Feel.&lt;/a&gt;</source>
          <target state="translated">For more information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt; Using the Multiplexing Look and Feel.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4db738fec2e273a4c05f6d3a516c4b48630b7b9c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt; Using the Multiplexing Look and Feel.&lt;/a&gt;</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt;은 멀티플렉싱 룩앤필 사용을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6105a854c78a15fe859d0c64ad2b9b3c51aa441e" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html#transferTiming&quot;&gt;Timing Focus Transfers&lt;/a&gt;, a section in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/&quot;&gt;The Swing Tutorial&lt;/a&gt;.</source>
          <target state="translated">더 자세한 정보 는 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/&quot;&gt;The Swing Tutorial의 &lt;/a&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html#transferTiming&quot;&gt;Timing Focus Transfers&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6515e5d0818b09f399d3348c9c6741ab773e04fc" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280 : 인터넷 X.509 공개 키 인프라 인증서 및 CRL 프로필을 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6fe9cc110a33a9ed5dac1d410fccea21446d9ecc" translate="yes" xml:space="preserve">
          <source>For more sophisticated patterns, you can use a &lt;code&gt;ChoiceFormat&lt;/code&gt; to produce correct forms for singular and plural:</source>
          <target state="translated">보다 정교한 패턴의 경우 &lt;code&gt;ChoiceFormat&lt;/code&gt; 을 사용하여 단수 및 복수에 대한 올바른 양식을 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f2abe7e06ae2851d23daf12e439ccac89684d3e2" translate="yes" xml:space="preserve">
          <source>For more specialized uses, a connector client can be created by directly instantiating a class that implements the &lt;a href=&quot;jmxconnector&quot;&gt;&lt;code&gt;JMXConnector&lt;/code&gt;&lt;/a&gt; interface, for example the class &lt;a href=&quot;../../../../java.management.rmi/javax/management/remote/rmi/rmiconnector&quot;&gt;&lt;code&gt;RMIConnector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">For more specialized uses, a connector client can be created by directly instantiating a class that implements the &lt;a href=&quot;jmxconnector&quot;&gt; &lt;code&gt;JMXConnector&lt;/code&gt; &lt;/a&gt; interface, for example the class &lt;a href=&quot;../../../../java.management.rmi/javax/management/remote/rmi/rmiconnector&quot;&gt; &lt;code&gt;RMIConnector&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1d899f3432679880d6489926be6b9f61a595cb6d" translate="yes" xml:space="preserve">
          <source>For more specialized uses, a connector client can be created by directly instantiating a class that implements the &lt;a href=&quot;jmxconnector&quot;&gt;&lt;code&gt;JMXConnector&lt;/code&gt;&lt;/a&gt; interface, for example the class &lt;a href=&quot;rmi/rmiconnector&quot;&gt;&lt;code&gt;RMIConnector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">보다 특수한 용도로, &lt;a href=&quot;jmxconnector&quot;&gt; &lt;code&gt;JMXConnector&lt;/code&gt; &lt;/a&gt; 인터페이스 를 구현하는 클래스 ( 예 : 클래스 &lt;a href=&quot;rmi/rmiconnector&quot;&gt; &lt;code&gt;RMIConnector&lt;/code&gt; )&lt;/a&gt; 를 직접 인스턴스화하여 커넥터 클라이언트를 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="63abd7908da19a58e133fd6971c8f4d3dfa821bd" translate="yes" xml:space="preserve">
          <source>For most operating systems, mapping a file into memory is more expensive than reading or writing a few tens of kilobytes of data via the usual &lt;a href=&quot;#read(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#write(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods. From the standpoint of performance it is generally only worth mapping relatively large files into memory.</source>
          <target state="translated">For most operating systems, mapping a file into memory is more expensive than reading or writing a few tens of kilobytes of data via the usual &lt;a href=&quot;#read(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#write(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; methods. From the standpoint of performance it is generally only worth mapping relatively large files into memory.</target>
        </trans-unit>
        <trans-unit id="e257e80e52e23bb1f5097e9f135dc6baef407e33" translate="yes" xml:space="preserve">
          <source>For most operating systems, mapping a file into memory is more expensive than reading or writing a few tens of kilobytes of data via the usual &lt;a href=&quot;filechannel#read-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;filechannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods. From the standpoint of performance it is generally only worth mapping relatively large files into memory.</source>
          <target state="translated">대부분의 운영 체제에서 파일을 메모리에 매핑하는 것은 일반적인 &lt;a href=&quot;filechannel#read-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;filechannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; 방법을 통해 수십 킬로바이트의 데이터를 읽거나 쓰는 것보다 비용이 많이 듭니다 . 성능의 관점에서 볼 때 일반적으로 비교적 큰 파일을 메모리에 매핑하는 것만으로 가치가 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8d47aef9dfdaffead563198406171ed3ff9a633" translate="yes" xml:space="preserve">
          <source>For most readers, which only accept input from an &lt;code&gt;ImageInputStream&lt;/code&gt;, a single-element array containing &lt;code&gt;ImageInputStream.class&lt;/code&gt; should be returned.</source>
          <target state="translated">단지로부터 입력을 받아 대부분의 독자 대해서는 &lt;code&gt;ImageInputStream&lt;/code&gt; 가 포함하는 단일 요소 배열 &lt;code&gt;ImageInputStream.class&lt;/code&gt; 반환되어야한다.</target>
        </trans-unit>
        <trans-unit id="0737e1146c46eaedda574254b184a05ef178c0d8" translate="yes" xml:space="preserve">
          <source>For most writers, which only output to an &lt;code&gt;ImageOutputStream&lt;/code&gt;, a single-element array containing &lt;code&gt;ImageOutputStream.class&lt;/code&gt; should be returned.</source>
          <target state="translated">로만 출력 가장 작가 들면 &lt;code&gt;ImageOutputStream&lt;/code&gt; 함유하는 단일 소자 어레이 &lt;code&gt;ImageOutputStream.class&lt;/code&gt; 이 반환되어야한다.</target>
        </trans-unit>
        <trans-unit id="d93e5b1bff26af04219f8bdd441a9eafbac77a05" translate="yes" xml:space="preserve">
          <source>For multiple-selection scrolling lists, it is considered a better user interface to use an external gesture (such as clicking on a button) to trigger the action.</source>
          <target state="translated">For multiple-selection scrolling lists, it is considered a better user interface to use an external gesture (such as clicking on a button) to trigger the action.</target>
        </trans-unit>
        <trans-unit id="8141e1359276458bda25227189f84a7dc2c470e8" translate="yes" xml:space="preserve">
          <source>For mutable sources, arbitrary and non-deterministic behavior may occur if the source is structurally interfered with (elements added, replaced, or removed) between the time that the Spliterator binds to its data source and the end of traversal. For example, such interference will produce arbitrary, non-deterministic results when using the &lt;code&gt;java.util.stream&lt;/code&gt; framework.</source>
          <target state="translated">변경 가능한 소스의 경우 소스가 Spliterator가 해당 데이터 소스에 바인딩 된 시간과 순회 종료 사이에 구조적으로 간섭 (요소 추가, 교체 또는 제거)되는 경우 임의적이고 비 결정적 동작이 발생할 수 있습니다. 예를 들어, 이러한 간섭은 &lt;code&gt;java.util.stream&lt;/code&gt; 프레임 워크를 사용할 때 임의의 비 결정적 결과를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="25193b196b4f7600b5dbdd467bd6c547e23b4a19" translate="yes" xml:space="preserve">
          <source>For named modules, the returned set contains an element for each package in the module.</source>
          <target state="translated">For named modules, the returned set contains an element for each package in the module.</target>
        </trans-unit>
        <trans-unit id="78b0c05700e618c811cbdeb91b30a28661eb895a" translate="yes" xml:space="preserve">
          <source>For nodes of any type other than &lt;code&gt;ELEMENT_NODE&lt;/code&gt; and &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt; and nodes created with a DOM Level 1 method, such as &lt;code&gt;Document.createElement()&lt;/code&gt;, this is always &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ELEMENT_NODE&lt;/code&gt; 및 &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt; 이외의 모든 유형의 노드와 &lt;code&gt;Document.createElement()&lt;/code&gt; 와 같은 DOM 레벨 1 메서드로 생성 된 노드의 경우 항상 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6892baceeeb04510a39a946267b15b55509adb7b" translate="yes" xml:space="preserve">
          <source>For nodes of any type other than &lt;code&gt;ELEMENT_NODE&lt;/code&gt; and &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt; and nodes created with a DOM Level 1 method, such as &lt;code&gt;createElement&lt;/code&gt; from the &lt;code&gt;Document&lt;/code&gt; interface, this is always &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이외의 다른 유형의 노드의 &lt;code&gt;ELEMENT_NODE&lt;/code&gt; 및 &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt; 같은 DOM 레벨 1 방법으로 생성 및 노드 &lt;code&gt;createElement&lt;/code&gt; 로부터 &lt;code&gt;Document&lt;/code&gt; 인터페이스, 이것은 항상 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f278ad171d850a8af543d2f081a00db12840525e" translate="yes" xml:space="preserve">
          <source>For non-&lt;em&gt;line-optimal&lt;/em&gt; charsets the stream source's spliterator has poor splitting properties, similar to that of a spliterator associated with an iterator or that associated with a stream returned from &lt;a href=&quot;../../io/bufferedreader#lines()&quot;&gt;&lt;code&gt;BufferedReader.lines()&lt;/code&gt;&lt;/a&gt;. Poor splitting properties can result in poor parallel stream performance.</source>
          <target state="translated">&lt;em&gt;라인에 최적화되지&lt;/em&gt; 않은 문자 세트의 경우 스트림 소스의 분할자는 반복기와 연관된 분할기 또는 &lt;a href=&quot;../../io/bufferedreader#lines()&quot;&gt; &lt;code&gt;BufferedReader.lines()&lt;/code&gt; &lt;/a&gt; 에서 반환 된 스트림과 연관된 분할기의 분할기와 유사한 분할 속성이 좋지 않습니다 . 분할 속성이 좋지 않으면 병렬 스트림 성능이 저하 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="282aa7c260e2aae49eeff8198a51995a4a15b876" translate="yes" xml:space="preserve">
          <source>For non-concurrent collectors, any result returned from the result supplier, accumulator, or combiner functions must be serially thread-confined. This enables collection to occur in parallel without the &lt;code&gt;Collector&lt;/code&gt; needing to implement any additional synchronization. The reduction implementation must manage that the input is properly partitioned, that partitions are processed in isolation, and combining happens only after accumulation is complete.</source>
          <target state="translated">비 동시 콜렉터의 경우 결과 공급 업체, 누산기 또는 결합기 기능에서 리턴 된 모든 결과는 직렬로 스레드 제한되어야합니다. 이를 통해 &lt;code&gt;Collector&lt;/code&gt; 가 추가 동기화를 구현할 필요 없이 수집을 병렬 로 수행 할 수 있습니다. 축소 구현에서는 입력이 올바르게 분할되고 분할이 분리되어 처리되며 누적이 완료된 후에 만 ​​결합이 수행되도록 관리해야합니다.</target>
        </trans-unit>
        <trans-unit id="2438b72799366ac407374d286bd01f0c4166089c" translate="yes" xml:space="preserve">
          <source>For objects of type &lt;code&gt;Class,&lt;/code&gt; by executing a synchronized static method of that class.</source>
          <target state="translated">&lt;code&gt;Class,&lt;/code&gt; 유형의 객체의 경우 해당 클래스 의 동기화 된 정적 메소드를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="2393833e8c76843229b97d3096ce8ec39cd225c2" translate="yes" xml:space="preserve">
          <source>For once-off notifications, the notification is delivered immediately.</source>
          <target state="translated">일회성 알림의 경우 알림이 즉시 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="3f4ed89b54bd26be6870100c57685d81eb9d6db9" translate="yes" xml:space="preserve">
          <source>For operation under a 1.1 virtual machine, this uses the value returned by &lt;code&gt;toString&lt;/code&gt; concatenated to the classname. The value returned by toString should not have the class reference in it (ie it should be reimplemented from the definition in Object) in order to be the same when recomputed later.</source>
          <target state="translated">1.1 가상 머신에서 작동 하는 경우 클래스 이름에 연결된 &lt;code&gt;toString&lt;/code&gt; 에서 반환 된 값을 사용합니다 . toString에 의해 반환 된 값은 나중에 다시 계산 될 때 동일하도록하기 위해 클래스 참조가 없어야합니다 (즉, Object의 정의에서 다시 구현되어야 함).</target>
        </trans-unit>
        <trans-unit id="eb01da6b90e46d6f44e5d813ee9681cba49cc8a0" translate="yes" xml:space="preserve">
          <source>For options that take a particular type as a parameter, getOption(int) will return the parameter's value, else it will return java.lang.Boolean(false):</source>
          <target state="translated">특정 유형을 매개 변수로 사용하는 옵션의 경우, getOption (int)는 매개 변수 값을 리턴하고 그렇지 않으면 java.lang.Boolean (false)를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1349eb15a8a9be1a8e6e057dc2ac8b33f793323e" translate="yes" xml:space="preserve">
          <source>For options that take a particular type as a parameter, getOption(int) will return the parameter's value, else it will return java.lang.Boolean.FALSE:</source>
          <target state="translated">특정 유형을 매개 변수로 사용하는 옵션의 경우 getOption (int)은 매개 변수의 값을 반환하고 그렇지 않으면 java.lang.Boolean.FALSE를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0c0acc100e32fc6234c0c7457cf6dc7e5450a156" translate="yes" xml:space="preserve">
          <source>For ordered streams, the selection of distinct elements is stable (for duplicated elements, the element appearing first in the encounter order is preserved.) For unordered streams, no stability guarantees are made.</source>
          <target state="translated">순서가 지정된 스트림의 경우 고유 한 요소 선택이 안정적입니다 (중복 된 요소의 경우 발생 순서에서 맨 처음 나타나는 요소가 유지됩니다). 순서가 지정되지 않은 스트림의 경우 안정성이 보장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="001abdbdf15e42842cf7a21df9e3b1a4e78dc160" translate="yes" xml:space="preserve">
          <source>For ordered streams, the sort is stable. For unordered streams, no stability guarantees are made.</source>
          <target state="translated">정렬 된 스트림의 경우 정렬이 안정적입니다. 정렬되지 않은 스트림의 경우 안정성이 보장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6c729397bf989a0e1b25cc2c57e1b20cd8e4b8c6" translate="yes" xml:space="preserve">
          <source>For out going messages the &lt;code&gt;timeToLive&lt;/code&gt; parameter is a time period that the sending side SCTP stack may expire the message if it has not been sent. This time period is an indication to the stack that the message is no longer required to be sent after the time period expires. It is not a hard timeout and may be influenced by whether the association supports the partial reliability extension, &lt;a href=&quot;https://www.ietf.org/rfc/rfc3758.txt&quot;&gt;RFC 3758 &lt;/a&gt;.</source>
          <target state="translated">나가는 메시지의 경우 &lt;code&gt;timeToLive&lt;/code&gt; 매개 변수는 전송되지 않은 경우 보내는 쪽 SCTP 스택이 메시지를 만료시킬 수있는 기간입니다. 이 기간은 기간이 만료 된 후 더 이상 메시지를 보낼 필요가 없음을 스택에 표시합니다. 이는 하드 타임 아웃이 아니며 연관이 부분 신뢰도 확장 &lt;a href=&quot;https://www.ietf.org/rfc/rfc3758.txt&quot;&gt;RFC 3758을&lt;/a&gt; 지원하는지 여부에 따라 영향을받을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0cc3c03d940589c6746e4c70b9692c35da706494" translate="yes" xml:space="preserve">
          <source>For overview, architecture, and tutorial documentation, please see:</source>
          <target state="translated">개요, 아키텍처 및 자습서 설명서는 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d8bfdf98afbbde02f03df613f17f462dca795146" translate="yes" xml:space="preserve">
          <source>For overviews, tutorials, examples, and guides, please see:</source>
          <target state="translated">개요, 자습서, 예제 및 가이드는 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8e018fd62c549e8e2179cc594ca3a679f6ac03ca" translate="yes" xml:space="preserve">
          <source>For overviews, tutorials, examples, guides, and other documentation, please see:</source>
          <target state="translated">개요, 튜토리얼, 예제, 가이드 및 기타 문서는 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="62f1d3f7834b33683db871654f454196f1523b2d" translate="yes" xml:space="preserve">
          <source>For overviews, tutorials, examples, guides, and tool documentation, please see &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=imf_overview&quot;&gt;Input Method Framework Overview&lt;/a&gt;.</source>
          <target state="translated">개요, 자습서, 예제, 가이드 및 도구 설명서는 &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=imf_overview&quot;&gt;입력기 프레임 워크 개요&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c0ce3cec54e96b8406619a3ad08ba8f9250c72f" translate="yes" xml:space="preserve">
          <source>For overviews, tutorials, examples, guides, and tool documentation, please see &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=imf_overview&quot;&gt;Input Method Framework Overview&lt;/a&gt;.</source>
          <target state="translated">개요, 자습서, 예제, 가이드 및 도구 설명서는 &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=imf_overview&quot;&gt;입력기 프레임 워크 개요&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d68439e8f07c23e343822db92fbf1f865a4c58c7" translate="yes" xml:space="preserve">
          <source>For overviews, tutorials, examples, guides, and tool documentation, please see:</source>
          <target state="translated">개요, 자습서, 예제, 가이드 및 도구 설명서는 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f86ceb74f740cac0f77b81c7bf321ec528a40fdb" translate="yes" xml:space="preserve">
          <source>For parallel stream pipelines, the action may be called at whatever time and in whatever thread the element is made available by the upstream operation. If the action modifies shared state, it is responsible for providing the required synchronization.</source>
          <target state="translated">병렬 스트림 파이프 라인의 경우, 업스트림 작업에서 요소를 사용할 수있는 스레드 및 시간에 관계없이 작업을 호출 할 수 있습니다. 조치가 공유 상태를 수정하면 필요한 동기화를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="f0fc793c5384edf9a979ea96ace2f88d94083d6a" translate="yes" xml:space="preserve">
          <source>For parallel stream pipelines, this operation does &lt;em&gt;not&lt;/em&gt; guarantee to respect the encounter order of the stream, as doing so would sacrifice the benefit of parallelism. For any given element, the action may be performed at whatever time and in whatever thread the library chooses. If the action accesses shared state, it is responsible for providing the required synchronization.</source>
          <target state="translated">병렬 스트림 파이프 라인의 경우이 작업은 스트림 의 발생 순서를 준수한다고 보장 하지는 &lt;em&gt;않습니다&lt;/em&gt; . 병렬 처리의 이점을 희생 할 수 있습니다. 주어진 요소에 대해, 언제 어디서나 라이브러리가 선택한 스레드에서 작업이 수행 될 수 있습니다. 조치가 공유 상태에 액세스하는 경우 필요한 동기화를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="c2e0c24ab6772aaaf6d162d55ee00363ff393680" translate="yes" xml:space="preserve">
          <source>For parallel streams, relaxing the ordering constraint can sometimes enable more efficient execution. Certain aggregate operations, such as filtering duplicates (&lt;code&gt;distinct()&lt;/code&gt;) or grouped reductions (&lt;code&gt;Collectors.groupingBy()&lt;/code&gt;) can be implemented more efficiently if ordering of elements is not relevant. Similarly, operations that are intrinsically tied to encounter order, such as &lt;code&gt;limit()&lt;/code&gt;, may require buffering to ensure proper ordering, undermining the benefit of parallelism. In cases where the stream has an encounter order, but the user does not particularly &lt;em&gt;care&lt;/em&gt; about that encounter order, explicitly de-ordering the stream with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;unordered()&lt;/code&gt;&lt;/a&gt; may improve parallel performance for some stateful or terminal operations. However, most stream pipelines, such as the &quot;sum of weight of blocks&quot; example above, still parallelize efficiently even under ordering constraints.</source>
          <target state="translated">병렬 스트림의 경우 순서 제한을 완화하면 때때로 더 효율적인 실행이 가능할 수 있습니다. 중복 필터링 ( &lt;code&gt;distinct()&lt;/code&gt; ) 또는 그룹화 된 축소 ( &lt;code&gt;Collectors.groupingBy()&lt;/code&gt; ) 와 같은 특정 집계 작업 은 요소 순서가 적절하지 않은 경우보다 효율적으로 구현할 수 있습니다. 마찬가지로 &lt;code&gt;limit()&lt;/code&gt; 과 같이 발생 순서에 본질적으로 연결된 작업은 적절한 순서를 보장하기 위해 버퍼링이 필요할 수 있으며, 이는 병렬 처리의 이점을 약화시킵니다. 스트림에 만남 순서가 있지만 사용자가 그 만남 순서에 특별히 &lt;em&gt;신경 쓰지&lt;/em&gt; 않는 경우 , &lt;a href=&quot;basestream#unordered()&quot;&gt; &lt;code&gt;unordered()&lt;/code&gt; &lt;/a&gt; 하여 명시 적으로 스트림 순서 를 취소합니다.일부 상태 저장 또는 터미널 작업의 병렬 성능을 향상시킬 수 있습니다. 그러나 위의 &quot;블록 가중치 합계&quot;예제와 같은 대부분의 스트림 파이프 라인은 순서 제약 조건에서도 여전히 효율적으로 병렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="4a022d17d72acbe4095f5d82c97b6b3416972a03" translate="yes" xml:space="preserve">
          <source>For parallel streams, relaxing the ordering constraint can sometimes enable more efficient execution. Certain aggregate operations, such as filtering duplicates (&lt;code&gt;distinct()&lt;/code&gt;) or grouped reductions (&lt;code&gt;Collectors.groupingBy()&lt;/code&gt;) can be implemented more efficiently if ordering of elements is not relevant. Similarly, operations that are intrinsically tied to encounter order, such as &lt;code&gt;limit()&lt;/code&gt;, may require buffering to ensure proper ordering, undermining the benefit of parallelism. In cases where the stream has an encounter order, but the user does not particularly &lt;em&gt;care&lt;/em&gt; about that encounter order, explicitly de-ordering the stream with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;unordered()&lt;/code&gt;&lt;/a&gt; may improve parallel performance for some stateful or terminal operations. However, most stream pipelines, such as the &quot;sum of weight of blocks&quot; example above, still parallelize efficiently even under ordering constraints.</source>
          <target state="translated">병렬 스트림의 경우 순서 제약 조건을 완화하면 더 효율적인 실행이 가능할 수 있습니다. 중복 요소 필터링 ( &lt;code&gt;distinct()&lt;/code&gt; ) 또는 그룹화 된 축소 ( &lt;code&gt;Collectors.groupingBy()&lt;/code&gt; ) 와 같은 특정 집계 작업 은 요소 순서가 관련이없는 경우보다 효율적으로 구현 될 수 있습니다. 마찬가지로 &lt;code&gt;limit()&lt;/code&gt; 과 같이 순서를 만나기 위해 본질적으로 연결된 작업 은 병렬 처리의 이점을 손상시키는 적절한 순서를 보장하기 위해 버퍼링이 필요할 수 있습니다. 스트림에 발생 순서가 있지만 사용자가 해당 발생 순서를 특별히 &lt;em&gt;신경 쓰지&lt;/em&gt; 않는 경우 &lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;unordered()&lt;/code&gt; &lt;/a&gt; 스트림 순서를 명시 적으로 순서 변경합니다일부 상태 저장 또는 터미널 작업의 병렬 성능을 향상시킬 수 있습니다. 그러나 위의 &quot;블록의 가중치 합계&quot;예제와 같은 대부분의 스트림 파이프 라인은 순서 제약 조건에서도 여전히 효율적으로 병렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="9e73b1d1f2d18bb67b976ff90a09775a27eb548e" translate="yes" xml:space="preserve">
          <source>For parser interface characteristics that are described as objects, a separate namespace is defined. The objects in this namespace are again identified by URI, and the standard property URIs have the prefix &lt;code&gt;http://xml.org/sax/properties/&lt;/code&gt; before an identifier such as &lt;code&gt;lexical-handler&lt;/code&gt; or &lt;code&gt;dom-node&lt;/code&gt;. Manage those properties using &lt;em&gt;setProperty()&lt;/em&gt;. Those identifiers are:</source>
          <target state="translated">객체로 설명되는 파서 인터페이스 특성의 경우 별도의 네임 스페이스가 정의됩니다. 이 네임 스페이스의 개체는 URI로 다시 식별되며 표준 속성 URI에는 &lt;code&gt;lexical-handler&lt;/code&gt; 또는 &lt;code&gt;dom-node&lt;/code&gt; 와 같은 식별자 앞에 &lt;code&gt;http://xml.org/sax/properties/&lt;/code&gt; 접두사가 있습니다 . &lt;em&gt;setProperty ()를&lt;/em&gt; 사용하여 이러한 속성을 관리합니다 . 이러한 식별자는 다음과 같습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf900feffef41cc4b28ed04126fec2aa9d3d70eb" translate="yes" xml:space="preserve">
          <source>For parsing with the abbreviated year pattern (&quot;y&quot; or &quot;yy&quot;), &lt;code&gt;SimpleDateFormat&lt;/code&gt; must interpret the abbreviated year relative to some century. It does this by adjusting dates to be within 80 years before and 20 years after the time the &lt;code&gt;SimpleDateFormat&lt;/code&gt; instance is created. For example, using a pattern of &quot;MM/dd/yy&quot; and a &lt;code&gt;SimpleDateFormat&lt;/code&gt; instance created on Jan 1, 1997, the string &quot;01/11/12&quot; would be interpreted as Jan 11, 2012 while the string &quot;05/04/64&quot; would be interpreted as May 4, 1964. During parsing, only strings consisting of exactly two digits, as defined by &lt;a href=&quot;../lang/character#isDigit(char)&quot;&gt;&lt;code&gt;Character.isDigit(char)&lt;/code&gt;&lt;/a&gt;, will be parsed into the default century. Any other numeric string, such as a one digit string, a three or more digit string, or a two digit string that isn't all digits (for example, &quot;-1&quot;), is interpreted literally. So &quot;01/02/3&quot; or &quot;01/02/003&quot; are parsed, using the same pattern, as Jan 2, 3 AD. Likewise, &quot;01/02/-3&quot; is parsed as Jan 2, 4 BC.</source>
          <target state="translated">축약 된 연도 패턴 ( &quot;y&quot;또는 &quot;yy&quot;)을 사용하여 구문 분석하는 경우 &lt;code&gt;SimpleDateFormat&lt;/code&gt; 은 약식 연도를 세기를 기준으로 해석해야합니다. &lt;code&gt;SimpleDateFormat&lt;/code&gt; 인스턴스가 생성 되기 전 80 년과 20 년 후로 날짜를 조정하여이를 수행합니다 . 예를 들어 1997 년 1 월 1 일에 생성 된 &quot;MM / dd / yy&quot;패턴과 &lt;code&gt;SimpleDateFormat&lt;/code&gt; 인스턴스를 사용하면 문자열 &quot;01/11/12&quot;는 2012 년 1 월 11 일로 해석되고 문자열 &quot;05 / 04 / 64 &quot;는 1964 년 5 월 4 일로 해석됩니다. 구문 분석 중 &lt;a href=&quot;../lang/character#isDigit(char)&quot;&gt; &lt;code&gt;Character.isDigit(char)&lt;/code&gt; &lt;/a&gt; 정의 된대로 정확히 두 자리 숫자로 구성된 문자열 만, 기본 세기로 구문 분석됩니다. 1 자리 문자열, 3 자리 이상의 문자열 또는 모든 숫자가 아닌 2 자리 문자열 (예 : &quot;-1&quot;)과 같은 다른 숫자 문자열은 문자 그대로 해석됩니다. 따라서 &quot;01/02/3&quot;또는 &quot;01/02/003&quot;은 AD Jan 2, 3 AD와 동일한 패턴을 사용하여 구문 분석됩니다. 마찬가지로 &quot;01 / 02 / -3&quot;은 BC 1 월 2 일 4 일로 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="f59f9b594d7dd4a34f5d782945a41831c3266165" translate="yes" xml:space="preserve">
          <source>For parsing with the abbreviated year pattern (&quot;y&quot; or &quot;yy&quot;), &lt;code&gt;SimpleDateFormat&lt;/code&gt; must interpret the abbreviated year relative to some century. It does this by adjusting dates to be within 80 years before and 20 years after the time the &lt;code&gt;SimpleDateFormat&lt;/code&gt; instance is created. For example, using a pattern of &quot;MM/dd/yy&quot; and a &lt;code&gt;SimpleDateFormat&lt;/code&gt; instance created on Jan 1, 1997, the string &quot;01/11/12&quot; would be interpreted as Jan 11, 2012 while the string &quot;05/04/64&quot; would be interpreted as May 4, 1964. During parsing, only strings consisting of exactly two digits, as defined by &lt;a href=&quot;../lang/character#isDigit(int)&quot;&gt;&lt;code&gt;Character.isDigit(char)&lt;/code&gt;&lt;/a&gt;, will be parsed into the default century. Any other numeric string, such as a one digit string, a three or more digit string, or a two digit string that isn't all digits (for example, &quot;-1&quot;), is interpreted literally. So &quot;01/02/3&quot; or &quot;01/02/003&quot; are parsed, using the same pattern, as Jan 2, 3 AD. Likewise, &quot;01/02/-3&quot; is parsed as Jan 2, 4 BC.</source>
          <target state="translated">축약 된 연도 패턴 ( &quot;y&quot;또는 &quot;yy&quot;)을 사용하여 구문 분석하는 경우 &lt;code&gt;SimpleDateFormat&lt;/code&gt; 은 약식 연도를 세기를 기준으로 해석해야합니다. &lt;code&gt;SimpleDateFormat&lt;/code&gt; 인스턴스가 생성 되기 전 80 년과 이후 20 년 이내로 날짜를 조정하여이를 수행합니다 . 예를 들어 1997 년 1 월 1 일에 생성 된 &quot;MM / dd / yy&quot;패턴과 &lt;code&gt;SimpleDateFormat&lt;/code&gt; 인스턴스를 사용하면 문자열 &quot;01/11/12&quot;는 2012 년 1 월 11 일로 해석되고 문자열 &quot;05 / 04 / 64 &quot;는 1964 년 5 월 4 일로 해석됩니다. 구문 분석 중에 &lt;a href=&quot;../lang/character#isDigit(int)&quot;&gt; &lt;code&gt;Character.isDigit(char)&lt;/code&gt; &lt;/a&gt; 정의 된대로 정확히 두 자리 숫자로 구성된 문자열 만, 기본 세기로 구문 분석됩니다. 1 자리 문자열, 3 자리 이상의 문자열 또는 모든 숫자가 아닌 2 자리 문자열 (예 : &quot;-1&quot;)과 같은 다른 모든 숫자 문자열은 문자 그대로 해석됩니다. 따라서 &quot;01/02/3&quot;또는 &quot;01/02/003&quot;은 AD Jan 2, 3 AD와 동일한 패턴을 사용하여 구문 분석됩니다. 마찬가지로 &quot;01 / 02 / -3&quot;은 BC 1 월 2 일 4 일로 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="c570a798086e94379323b4fd869f2a44d713a877" translate="yes" xml:space="preserve">
          <source>For parsing with the abbreviated year pattern (&quot;y&quot; or &quot;yy&quot;), &lt;code&gt;SimpleDateFormat&lt;/code&gt; must interpret the abbreviated year relative to some century. It does this by adjusting dates to be within 80 years before and 20 years after the time the &lt;code&gt;SimpleDateFormat&lt;/code&gt; instance is created. For example, using a pattern of &quot;MM/dd/yy&quot; and a &lt;code&gt;SimpleDateFormat&lt;/code&gt; instance created on Jan 1, 1997, the string &quot;01/11/12&quot; would be interpreted as Jan 11, 2012 while the string &quot;05/04/64&quot; would be interpreted as May 4, 1964. During parsing, only strings consisting of exactly two digits, as defined by &lt;a href=&quot;../lang/character#isDigit-char-&quot;&gt;&lt;code&gt;Character.isDigit(char)&lt;/code&gt;&lt;/a&gt;, will be parsed into the default century. Any other numeric string, such as a one digit string, a three or more digit string, or a two digit string that isn't all digits (for example, &quot;-1&quot;), is interpreted literally. So &quot;01/02/3&quot; or &quot;01/02/003&quot; are parsed, using the same pattern, as Jan 2, 3 AD. Likewise, &quot;01/02/-3&quot; is parsed as Jan 2, 4 BC.</source>
          <target state="translated">약식 연도 패턴 ( &quot;y&quot;또는 &quot;yy&quot;)으로 구문 분석 하려면 &lt;code&gt;SimpleDateFormat&lt;/code&gt; 이 약 세기를 기준으로 약식 연도를 해석해야합니다. &lt;code&gt;SimpleDateFormat&lt;/code&gt; 인스턴스가 생성 된 시간의 80 년 전과 20 년 내에 날짜를 조정하여이를 수행합니다 . 예를 들어, &quot;MM / dd / yy&quot;패턴과 1997 년 1 월 1 일에 생성 된 &lt;code&gt;SimpleDateFormat&lt;/code&gt; 인스턴스를 사용하면 &quot;01/11/12&quot;문자열은 2012 년 1 월 11 일로 해석되고 &quot;05 / 04 / 64 &quot;는 1964 년 5 월 4 일로 해석됩니다. 구문 분석 중 &lt;a href=&quot;../lang/character#isDigit-char-&quot;&gt; &lt;code&gt;Character.isDigit(char)&lt;/code&gt; &lt;/a&gt; 정의 된대로 정확히 두 자리 숫자로 구성된 문자열 만기본 세기로 파싱됩니다. 1 자리 문자열, 3 개 이상의 숫자 문자열 또는 모든 숫자가 아닌 2 자리 문자열 (예 : &quot;-1&quot;)과 같은 다른 숫자 문자열은 문자 그대로 해석됩니다. 따라서 &quot;01/02/3&quot;또는 &quot;01/02/003&quot;은 AD 1 월 2 일 3 일과 동일한 패턴을 사용하여 구문 분석됩니다. 마찬가지로 &quot;01 / 02 / -3&quot;은 BC 4 월 1 일 2 일로 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="4a764f5159f9e22afe179e63808190284e10eb12" translate="yes" xml:space="preserve">
          <source>For parsing, &lt;a href=&quot;#rfc822timezone&quot;&gt;RFC 822 time zones&lt;/a&gt; are also accepted.</source>
          <target state="translated">구문 분석을 위해 &lt;a href=&quot;#rfc822timezone&quot;&gt;RFC 822 시간대&lt;/a&gt; 도 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="baabe17164e63bd44c3000ec7a5be5ff380b1df0" translate="yes" xml:space="preserve">
          <source>For parsing, &lt;a href=&quot;#timezone&quot;&gt;general time zones&lt;/a&gt; are also accepted.</source>
          <target state="translated">구문 분석의 경우 &lt;a href=&quot;#timezone&quot;&gt;일반 시간대&lt;/a&gt; 도 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="fac8c5ed0886874a6aa7b271e61c544b5d8be575" translate="yes" xml:space="preserve">
          <source>For parsing, &lt;code&gt;&quot;Z&quot;&lt;/code&gt; is parsed as the UTC time zone designator. &lt;a href=&quot;#timezone&quot;&gt;General time zones&lt;/a&gt; are &lt;em&gt;not&lt;/em&gt; accepted.</source>
          <target state="translated">구문 분석의 경우 &lt;code&gt;&quot;Z&quot;&lt;/code&gt; 는 UTC 시간대 지정자로 구문 분석됩니다. &lt;a href=&quot;#timezone&quot;&gt;일반 시간대&lt;/a&gt; 는 허용 &lt;em&gt;되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="1e6618bdd467f78f58afb023c88a8cc4afa3e44a" translate="yes" xml:space="preserve">
          <source>For parsing, if the number of pattern letters is more than 2, the year is interpreted literally, regardless of the number of digits. So using the pattern &quot;MM/dd/yyyy&quot;, &quot;01/11/12&quot; parses to Jan 11, 12 A.D.</source>
          <target state="translated">구문 분석의 경우 패턴 문자 수가 2를 초과하면 연도는 자릿수에 관계없이 문자 그대로 해석됩니다. 따라서 &quot;MM / dd / yyyy&quot;패턴을 사용하면 &quot;01/11/12&quot;는 AD 12 월 1 일 11 일로 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="26ab4b1f4f2fedc9dbe0601284ca2ee8e4aeac44" translate="yes" xml:space="preserve">
          <source>For performance reasons, &lt;code&gt;Component&lt;/code&gt;s with zero width or height aren't considered to need painting when they are first shown, and also aren't considered to need repair.</source>
          <target state="translated">성능상의 이유로 너비 또는 높이가 0 인 &lt;code&gt;Component&lt;/code&gt; 는 처음 표시 될 때 페인팅이 필요하지 않으며 수리가 필요한 것으로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7160eed7fa1346d63fcd7925944e1d727500c617" translate="yes" xml:space="preserve">
          <source>For performance reasons, it is preferable that &lt;code&gt;Raster&lt;/code&gt; objects passed to the &lt;code&gt;compose&lt;/code&gt; method of a &lt;a href=&quot;compositecontext&quot;&gt;&lt;code&gt;CompositeContext&lt;/code&gt;&lt;/a&gt; object created by the &lt;code&gt;AlphaComposite&lt;/code&gt; class have premultiplied data. If either the source &lt;code&gt;Raster&lt;/code&gt; or the destination &lt;code&gt;Raster&lt;/code&gt; is not premultiplied, however, appropriate conversions are performed before and after the compositing operation.</source>
          <target state="translated">성능상의 이유로 &lt;code&gt;AlphaComposite&lt;/code&gt; 클래스에 의해 생성 된 &lt;a href=&quot;compositecontext&quot;&gt; &lt;code&gt;CompositeContext&lt;/code&gt; &lt;/a&gt; 객체 의 &lt;code&gt;compose&lt;/code&gt; 메소드에 전달 된 &lt;code&gt;Raster&lt;/code&gt; 객체 에는 데이터가 미리 곱 해져있는 것이 좋습니다. 그러나 소스 &lt;code&gt;Raster&lt;/code&gt; 또는 대상 &lt;code&gt;Raster&lt;/code&gt; 가 미리 곱해지지 않은 경우 합성 작업 전후에 적절한 변환이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="2c001c6ebfd8657baca1812a75f6899a1d0dbf06" translate="yes" xml:space="preserve">
          <source>For periodic notifications, the first notification is delivered immediately and the subsequent ones are spaced as specified by the period parameter.</source>
          <target state="translated">주기적 알림의 경우 첫 번째 알림이 즉시 전달되고 후속 알림은 period 매개 변수에 지정된 간격으로 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="c073373dd230874d620a8da3acd5b596dbfa99f6" translate="yes" xml:space="preserve">
          <source>For primitive arrays the &lt;a href=&quot;#getElementOpenType()&quot;&gt;&lt;code&gt;getElementOpenType()&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;simpletype&quot;&gt;&lt;code&gt;SimpleType&lt;/code&gt;&lt;/a&gt; corresponding to the wrapper type of the primitive type of the array.</source>
          <target state="translated">기본 배열의 경우 &lt;a href=&quot;#getElementOpenType()&quot;&gt; &lt;code&gt;getElementOpenType()&lt;/code&gt; &lt;/a&gt; 메서드는 배열의 기본 유형의 래퍼 유형에 해당 하는 &lt;a href=&quot;simpletype&quot;&gt; &lt;code&gt;SimpleType&lt;/code&gt; 을&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5f821990434cda12a37c22f0b70c7a915410fdb2" translate="yes" xml:space="preserve">
          <source>For primitive arrays the &lt;a href=&quot;arraytype#getElementOpenType--&quot;&gt;&lt;code&gt;getElementOpenType()&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;simpletype&quot;&gt;&lt;code&gt;SimpleType&lt;/code&gt;&lt;/a&gt; corresponding to the wrapper type of the primitive type of the array.</source>
          <target state="translated">기본 배열의 경우 &lt;a href=&quot;arraytype#getElementOpenType--&quot;&gt; &lt;code&gt;getElementOpenType()&lt;/code&gt; &lt;/a&gt; 메소드는 기본 배열 유형의 랩퍼 유형에 해당 하는 &lt;a href=&quot;simpletype&quot;&gt; &lt;code&gt;SimpleType&lt;/code&gt; 을&lt;/a&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="1852a857e6c6604b004e3458ad42f21fe5e162d7" translate="yes" xml:space="preserve">
          <source>For primitive values, such as &lt;code&gt;opaque&lt;/code&gt;, the method &lt;code&gt;
 installProperty&lt;/code&gt; should be invoked. &lt;code&gt;installProperty&lt;/code&gt; only changes the corresponding property if the value has not been changed by the developer.</source>
          <target state="translated">&lt;code&gt;opaque&lt;/code&gt; 와 같은 기본 값의 경우 &lt;code&gt; installProperty&lt;/code&gt; 메소드를 호출해야합니다. &lt;code&gt;installProperty&lt;/code&gt; 는 개발자가 값을 변경하지 않은 경우에만 해당 속성을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="4ad66ae8d5664bf576a41f20650fa30d06e9cd67" translate="yes" xml:space="preserve">
          <source>For purposes of concurrency control, a Context operation that returns a &lt;code&gt;NamingEnumeration&lt;/code&gt; is not considered to have completed while the enumeration is still in use, or while any referrals generated by that operation are still being followed.</source>
          <target state="translated">동시성 제어를 위해 열거가 여전히 사용 중이거나 해당 작업에서 생성 된 참조가 계속 수행되는 동안 &lt;code&gt;NamingEnumeration&lt;/code&gt; 을 반환하는 컨텍스트 작업 은 완료된 것으로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9f3974f591009726983466072bceba6e0651cf09" translate="yes" xml:space="preserve">
          <source>For purposes of the methods in this class, colors are represented as arrays of color components represented as floats in a normalized range defined by each &lt;code&gt;ColorSpace&lt;/code&gt;. For many &lt;code&gt;ColorSpaces&lt;/code&gt; (e.g. sRGB), this range is 0.0 to 1.0. However, some &lt;code&gt;ColorSpaces&lt;/code&gt; have components whose values have a different range. Methods are provided to inquire per component minimum and maximum normalized values.</source>
          <target state="translated">이 클래스의 메서드에서 색상은 각 &lt;code&gt;ColorSpace&lt;/code&gt; 에 의해 정의 된 정규화 된 범위의 부동 소수점으로 표현되는 색상 구성 요소의 배열로 표현됩니다 . 많은 &lt;code&gt;ColorSpaces&lt;/code&gt; (예 : sRGB)의 경우이 범위는 0.0 ~ 1.0입니다. 그러나 일부 &lt;code&gt;ColorSpaces&lt;/code&gt; 에는 값의 범위가 다른 구성 요소가 있습니다. 구성 요소 별 최소 및 최대 정규화 값을 조회하는 방법이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="5b70912ee937c9b1afb11355852437a3c9e2750e" translate="yes" xml:space="preserve">
          <source>For purposes of the methods in this class, colors are represented as arrays of color components represented as floats in a normalized range defined by each ColorSpace. For many ColorSpaces (e.g. sRGB), this range is 0.0 to 1.0. However, some ColorSpaces have components whose values have a different range. Methods are provided to inquire per component minimum and maximum normalized values.</source>
          <target state="translated">이 클래스의 메서드에서 색상은 각 ColorSpace에 의해 정의 된 정규화 된 범위의 부동 소수점으로 표현되는 색상 구성 요소의 배열로 표현됩니다. 많은 ColorSpaces (예 : sRGB)의 경우이 범위는 0.0 ~ 1.0입니다. 그러나 일부 ColorSpaces에는 값의 범위가 다른 구성 요소가 있습니다. 성분 별 최소 및 최대 정규화 값을 조회하는 방법이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="5cb8df1427c2607eeb964dabbba2a3f6332dd9c2" translate="yes" xml:space="preserve">
          <source>For received messages &lt;code&gt;true&lt;/code&gt; indicates that the message was completely received. For messages being sent &lt;code&gt;true&lt;/code&gt; indicates that the message is complete, &lt;code&gt;false&lt;/code&gt; indicates that the message is not complete. How the send channel interprets this value depends on the value of its &lt;a href=&quot;sctpstandardsocketoptions#SCTP_EXPLICIT_COMPLETE&quot;&gt;&lt;code&gt;SCTP_EXPLICIT_COMPLETE&lt;/code&gt;&lt;/a&gt; socket option.</source>
          <target state="translated">수신 된 메시지의 &lt;code&gt;true&lt;/code&gt; 는 메시지가 완전히 수신되었음을 나타냅니다. 전송되는 메시지의 &lt;code&gt;true&lt;/code&gt; 는 메시지가 완료 되었음을 나타내고 &lt;code&gt;false&lt;/code&gt; 는 메시지가 완료 되지 않았 음을 나타냅니다. 송신 채널이이 값을 해석하는 방법은 &lt;a href=&quot;sctpstandardsocketoptions#SCTP_EXPLICIT_COMPLETE&quot;&gt; &lt;code&gt;SCTP_EXPLICIT_COMPLETE&lt;/code&gt; &lt;/a&gt; 소켓 옵션 의 값에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="18e33a6b1d1aec8bfa5947f6b05e341ac3dfef4d" translate="yes" xml:space="preserve">
          <source>For resources in named modules then the method must implement the rules for encapsulation specified in the &lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;module#getResourceAsStream(java.lang.String)&quot;&gt;&lt;code&gt;getResourceAsStream&lt;/code&gt;&lt;/a&gt; method. Additionally, it must not find non-&quot;&lt;code&gt;.class&lt;/code&gt;&quot; resources in packages of named modules unless the package is &lt;a href=&quot;module#isOpen(java.lang.String)&quot;&gt;&lt;code&gt;opened&lt;/code&gt;&lt;/a&gt; unconditionally.</source>
          <target state="translated">명명 된 모듈의 리소스에 대해 메서드는 &lt;code&gt;Module&lt;/code&gt; &lt;a href=&quot;module#getResourceAsStream(java.lang.String)&quot;&gt; &lt;code&gt;getResourceAsStream&lt;/code&gt; &lt;/a&gt; 메서드에 지정된 캡슐화 규칙을 구현해야합니다 . 또한 패키지가 무조건 &lt;a href=&quot;module#isOpen(java.lang.String)&quot;&gt; &lt;code&gt;opened&lt;/code&gt; &lt;/a&gt; 않는 한 명명 된 모듈의 패키지에서 비 &quot; &lt;code&gt;.class&lt;/code&gt; &quot;리소스를 찾지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="6af3b8b702cec551453071655b308d7ec1304eee" translate="yes" xml:space="preserve">
          <source>For retransformations, the retransformation incapable transformers are not called, instead the result of the previous transformation is reused. In all other cases, this method is called. Within each of these groupings, transformers are called in the order registered. Native transformers are provided by the &lt;code&gt;ClassFileLoadHook&lt;/code&gt; event in the Java Virtual Machine Tool Interface).</source>
          <target state="translated">재 변환의 경우, 재 변환 불가능 변환기는 호출되지 않고 대신 이전 변환의 결과가 재사용됩니다. 다른 모든 경우에는이 메소드가 호출됩니다. 이러한 각 그룹 내에서 등록 된 순서대로 변압기가 호출됩니다. 원시 변환기는 Java Virtual Machine Tool Interface 의 &lt;code&gt;ClassFileLoadHook&lt;/code&gt; 이벤트에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="7dd2facb3f68ee424622ebbb379381658dbe37eb" translate="yes" xml:space="preserve">
          <source>For security reasons, it is often desirable to use an &lt;code&gt;ActiveEvent&lt;/code&gt; to avoid calling untrusted code from a critical thread. For instance, peer implementations can use this facility to avoid making calls into user code from a system thread. Doing so avoids potential deadlocks and denial-of-service attacks.</source>
          <target state="translated">보안상의 이유로 중요한 스레드에서 신뢰할 수없는 코드를 호출하지 않도록 &lt;code&gt;ActiveEvent&lt;/code&gt; 를 사용하는 것이 바람직합니다 . 예를 들어 피어 구현은이 기능을 사용하여 시스템 스레드에서 사용자 코드를 호출하는 것을 방지 할 수 있습니다. 이렇게하면 잠재적 인 교착 상태 및 서비스 거부 공격을 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68aca3f784675cc07cb4e0642cca8613fe19a4fb" translate="yes" xml:space="preserve">
          <source>For security reasons, mapping of streams and keys exists for each codebase. In other words, applet from one codebase cannot access the streams created by an applet from a different codebase</source>
          <target state="translated">보안상의 이유로 각 코드베이스에 대한 스트림 및 키 매핑이 존재합니다. 즉, 한 코드베이스의 애플릿은 다른 코드베이스의 애플릿이 생성 한 스트림에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="090a205944e041a23c2af870eee91a2ad52fe770" translate="yes" xml:space="preserve">
          <source>For security reasons, mapping of streams and keys exists for each codebase. In other words, applet from one codebase cannot access the streams created by an applet from a different codebase.</source>
          <target state="translated">보안상의 이유로 각 코드베이스에 대한 스트림 및 키 매핑이 존재합니다. 즉, 한 코드베이스의 애플릿은 다른 코드베이스의 애플릿에 의해 생성 된 스트림에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3aaf586cff8e4109d1052cda9cf2048cf817c051" translate="yes" xml:space="preserve">
          <source>For security reasons, the same named values may not be visible across different access control contexts.</source>
          <target state="translated">보안상의 이유로, 동일한 이름의 값이 다른 액세스 제어 컨텍스트에서 보이지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="07a616bdd03b87c7c8b36c86cf798f970d625046" translate="yes" xml:space="preserve">
          <source>For security reasons, this method is deprecated. Use the &lt;code&gt;* getPassword&lt;/code&gt; method instead.</source>
          <target state="translated">보안상의 이유로이 방법은 더 이상 사용되지 않습니다. 사용 &lt;code&gt;* getPassword&lt;/code&gt; 대신 방법을.</target>
        </trans-unit>
        <trans-unit id="b9a153d78438e600a61dd60f37ea36fd771a9301" translate="yes" xml:space="preserve">
          <source>For security reasons, this method is deprecated. Use the &lt;code&gt;getPassword&lt;/code&gt; method instead.</source>
          <target state="translated">보안상의 이유로이 방법은 더 이상 사용되지 않습니다. 대신 &lt;code&gt;getPassword&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5bc2c1eacdb9df0b1e19143b671c79f00c7d88d8" translate="yes" xml:space="preserve">
          <source>For security reasons, this option may imply the &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;LinkOption.NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option. In other words, if the option is present when opening an existing file that is a symbolic link then it may fail (by throwing &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">보안상의 이유로이 옵션은 &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;LinkOption.NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt; 옵션을 의미 할 수 있습니다. 즉, 기호 링크 인 기존 파일을 열 때 옵션이 있으면 &lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; 을&lt;/a&gt; 발생시켜 실패 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1e48b929136f5e9d3672a30cfe645fb8bf5a7c9f" translate="yes" xml:space="preserve">
          <source>For sensitive information, a &lt;a href=&quot;httpsserver&quot;&gt;&lt;code&gt;HttpsServer&lt;/code&gt;&lt;/a&gt; can be used to process &quot;https&quot; requests secured by the SSL or TLS protocols. A HttpsServer must be provided with a &lt;a href=&quot;httpsconfigurator&quot;&gt;&lt;code&gt;HttpsConfigurator&lt;/code&gt;&lt;/a&gt; object, which contains an initialized &lt;a href=&quot;../../../../../java.base/javax/net/ssl/sslcontext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt;. HttpsConfigurator can be used to configure the cipher suites and other SSL operating parameters. A simple example SSLContext could be created as follows:</source>
          <target state="translated">민감한 정보의 경우 &lt;a href=&quot;httpsserver&quot;&gt; &lt;code&gt;HttpsServer&lt;/code&gt; &lt;/a&gt; 를 사용하여 SSL 또는 TLS 프로토콜로 보호되는 &quot;https&quot;요청을 처리 할 수 ​​있습니다. HttpsServer는 초기화 된 &lt;a href=&quot;../../../../../java.base/javax/net/ssl/sslcontext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt; 를 포함하는 &lt;a href=&quot;httpsconfigurator&quot;&gt; &lt;code&gt;HttpsConfigurator&lt;/code&gt; &lt;/a&gt; 객체 와 함께 제공되어야합니다 . HttpsConfigurator를 사용하여 암호 스위트 및 기타 SSL 운영 매개 변수를 구성 할 수 있습니다. 간단한 예제 SSLContext는 다음과 같이 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48e8cccc24afd200b00b6d417f9f7eb38448e719" translate="yes" xml:space="preserve">
          <source>For sequential streams, the presence or absence of an encounter order does not affect performance, only determinism. If a stream is ordered, repeated execution of identical stream pipelines on an identical source will produce an identical result; if it is not ordered, repeated execution might produce different results.</source>
          <target state="translated">순차적 스트림의 경우 발생 순서의 유무는 성능에 영향을 미치지 않으며 결정성에 만 영향을줍니다. 스트림이 주문 된 경우 동일한 소스에서 동일한 스트림 파이프 라인을 반복 실행하면 동일한 결과가 생성됩니다. 순서가 지정되지 않은 경우 반복 된 실행으로 인해 다른 결과가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="612299030742e36a518e5bbd5b2e467622413307" translate="yes" xml:space="preserve">
          <source>For service formatted print data, the print data representation class is typically one of the following (although other representation classes are permitted). Nested classes inside class &lt;code&gt;DocFlavor&lt;/code&gt; declare predefined static constant &lt;code&gt;DocFlavor&lt;/code&gt; objects for these example doc flavors; class &lt;code&gt;DocFlavor&lt;/code&gt;'s constructor can be used to create an arbitrary doc flavor.</source>
          <target state="translated">서비스 형식 인쇄 데이터의 경우 인쇄 데이터 표현 클래스는 일반적으로 다음 중 하나입니다 (다른 표현 클래스도 허용됨). &lt;code&gt;DocFlavor&lt;/code&gt; 클래스 내의 중첩 클래스 는 이러한 예제 문서 특징에 대해 미리 정의 된 정적 상수 &lt;code&gt;DocFlavor&lt;/code&gt; 객체를 선언 합니다 . &lt;code&gt;DocFlavor&lt;/code&gt; 클래스 의 생성자를 사용하여 임의의 문서 풍미를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26bb61cb564ead626c2bde55cc602f10668817ef" translate="yes" xml:space="preserve">
          <source>For service formatted print data, the print data representation class is typically one of the following (although other representation classes are permitted). Nested classes inside class DocFlavor declare predefined static constant DocFlavor objects for these example doc flavors; class DocFlavor's constructor can be used to create an arbitrary doc flavor.</source>
          <target state="translated">서비스 형식 인쇄 데이터의 경우 인쇄 데이터 표현 클래스는 일반적으로 다음 중 하나입니다 (다른 표현 클래스도 허용됨). DocFlavor 클래스 내부의 중첩 클래스는이 예제 doc 후 레이 바에 대해 미리 정의 된 정적 상수 DocFlavor 객체를 선언합니다. DocFlavor 클래스의 생성자를 사용해 임의의 doc 후 레이 바를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e47563fc5b992c913402209b3b12d7e051476c9a" translate="yes" xml:space="preserve">
          <source>For simple applications requiring only line-oriented reading, use &lt;a href=&quot;#readLine(java.lang.String,java.lang.Object...)&quot;&gt;&lt;code&gt;readLine(java.lang.String, java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">라인 지향 읽기만 필요한 간단한 애플리케이션의 경우 &lt;a href=&quot;#readLine(java.lang.String,java.lang.Object...)&quot;&gt; &lt;code&gt;readLine(java.lang.String, java.lang.Object...)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ca1d6d31248f3efa59038d05d967fd0679416a5d" translate="yes" xml:space="preserve">
          <source>For simple applications requiring only line-oriented reading, use &lt;code&gt;&lt;a href=&quot;console#readLine-java.lang.String-java.lang.Object...-&quot;&gt;&lt;code&gt;readLine(java.lang.String, java.lang.Object...)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">행 지향 읽기만 필요한 간단한 애플리케이션의 경우 &lt;code&gt;&lt;a href=&quot;console#readLine-java.lang.String-java.lang.Object...-&quot;&gt;&lt;code&gt;readLine(java.lang.String, java.lang.Object...)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10110bc1b4d00e0dc3d5198a1f41849e4846b830" translate="yes" xml:space="preserve">
          <source>For simple stand-alone Java applications, a typical way to write a line of output data is:</source>
          <target state="translated">간단한 독립형 Java 애플리케이션의 경우 출력 데이터 라인을 작성하는 일반적인 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="08ab4d80904580e41702f8742bdd05a4e07d7c29" translate="yes" xml:space="preserve">
          <source>For situations where a set of algorithm-specific parameters already exists (e.g., so-called</source>
          <target state="translated">알고리즘 별 파라미터 세트가 이미 존재하는 상황 (예 : 소위</target>
        </trans-unit>
        <trans-unit id="55d2efc269d07ba41c86c8d0158f4502fe21c27a" translate="yes" xml:space="preserve">
          <source>For situations where a set of algorithm-specific parameters already exists, there are two &lt;a href=&quot;#init(java.security.spec.AlgorithmParameterSpec)&quot;&gt;&lt;code&gt;init&lt;/code&gt;&lt;/a&gt; methods that have an &lt;code&gt;AlgorithmParameterSpec&lt;/code&gt; argument. One also has a &lt;code&gt;SecureRandom&lt;/code&gt; argument, while the other uses the SecureRandom implementation of the highest-priority installed provider as the source of randomness (or a system-provided source of randomness if none of the installed providers supply a SecureRandom implementation).</source>
          <target state="translated">알고리즘 특정 매개 변수 세트가 이미 존재하는 상황의 경우 &lt;code&gt;AlgorithmParameterSpec&lt;/code&gt; 인수가 있는 두 개의 &lt;a href=&quot;#init(java.security.spec.AlgorithmParameterSpec)&quot;&gt; &lt;code&gt;init&lt;/code&gt; &lt;/a&gt; 메소드가 있습니다 . 하나는 또한 &lt;code&gt;SecureRandom&lt;/code&gt; 인수를 가지고있는 반면, 다른 하나는 임의성 소스 (또는 설치된 공급자가 SecureRandom 구현을 제공하지 않는 경우 시스템에서 제공 한 임의성 소스)로 가장 우선 순위가 높은 설치된 공급자의 SecureRandom 구현을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="95eedb101c336b80a564e4cdfc54df965d97f306" translate="yes" xml:space="preserve">
          <source>For situations where a set of algorithm-specific parameters already exists, there are two &lt;a href=&quot;keygenerator#init-java.security.spec.AlgorithmParameterSpec-&quot;&gt;&lt;code&gt;init&lt;/code&gt;&lt;/a&gt; methods that have an &lt;code&gt;AlgorithmParameterSpec&lt;/code&gt; argument. One also has a &lt;code&gt;SecureRandom&lt;/code&gt; argument, while the other uses the SecureRandom implementation of the highest-priority installed provider as the source of randomness (or a system-provided source of randomness if none of the installed providers supply a SecureRandom implementation).</source>
          <target state="translated">알고리즘 특정 매개 변수 세트가 이미 존재 하는 경우 &lt;code&gt;AlgorithmParameterSpec&lt;/code&gt; 인수 를 갖는 두 개의 &lt;a href=&quot;keygenerator#init-java.security.spec.AlgorithmParameterSpec-&quot;&gt; &lt;code&gt;init&lt;/code&gt; &lt;/a&gt; 메소드가 있습니다 . 하나는 &lt;code&gt;SecureRandom&lt;/code&gt; 인수를 가지고있는 반면, 다른 하나는 우선 순위가 가장 높은 설치된 제공자의 SecureRandom 구현을 무작위 소스 (또는 설치된 제공자가 SecureRandom 구현을 제공하지 않는 경우 시스템 제공 무작위 소스)를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f8119c10712b80271b387c627507ed293ca218ad" translate="yes" xml:space="preserve">
          <source>For sockets accepted from a ServerSocket, this must be done by calling &lt;a href=&quot;serversocket#setReceiveBufferSize(int)&quot;&gt;&lt;code&gt;ServerSocket.setReceiveBufferSize(int)&lt;/code&gt;&lt;/a&gt; before the ServerSocket is bound to a local address.</source>
          <target state="translated">ServerSocket에서 수락 된 소켓의 경우 ServerSocket이 로컬 주소에 바인딩되기 전에 &lt;a href=&quot;serversocket#setReceiveBufferSize(int)&quot;&gt; &lt;code&gt;ServerSocket.setReceiveBufferSize(int)&lt;/code&gt; &lt;/a&gt; 를 호출하여 수행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a85dbc709a9f2ba6465c3e2a6e42e17a0cb8fa6b" translate="yes" xml:space="preserve">
          <source>For sockets accepted from a ServerSocket, this must be done by calling &lt;a href=&quot;serversocket#setReceiveBufferSize-int-&quot;&gt;&lt;code&gt;ServerSocket.setReceiveBufferSize(int)&lt;/code&gt;&lt;/a&gt; before the ServerSocket is bound to a local address.</source>
          <target state="translated">ServerSocket에서 수락 된 소켓의 경우 ServerSocket이 로컬 주소에 바인딩되기 전에 &lt;a href=&quot;serversocket#setReceiveBufferSize-int-&quot;&gt; &lt;code&gt;ServerSocket.setReceiveBufferSize(int)&lt;/code&gt; &lt;/a&gt; 를 호출하여 수행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b5d9e449f3c30af13b7c3df63d138eee7bd155c9" translate="yes" xml:space="preserve">
          <source>For some &lt;code&gt;CertStore&lt;/code&gt; types, the resulting &lt;code&gt;Collection&lt;/code&gt; may not contain &lt;b&gt;all&lt;/b&gt; of the &lt;code&gt;CRL&lt;/code&gt;s that match the selector. For instance, an LDAP &lt;code&gt;CertStore&lt;/code&gt; may not search all entries in the directory. Instead, it may just search entries that are likely to contain the &lt;code&gt;CRL&lt;/code&gt;s it is looking for.</source>
          <target state="translated">일부 &lt;code&gt;CertStore&lt;/code&gt; 유형, 결과 &lt;code&gt;Collection&lt;/code&gt; 포함되어 있지 않을 수 있습니다 &lt;b&gt;모두&lt;/b&gt; 의 &lt;code&gt;CRL&lt;/code&gt; 의 선택기 일치들. 예를 들어, LDAP &lt;code&gt;CertStore&lt;/code&gt; 는 디렉토리의 모든 항목을 검색하지 않을 수 있습니다. 대신 찾고 있는 &lt;code&gt;CRL&lt;/code&gt; 을 포함 할 가능성이있는 항목 만 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2d2bd5d4910b94aed8dde240f220cd40623a6895" translate="yes" xml:space="preserve">
          <source>For some &lt;code&gt;CertStore&lt;/code&gt; types, the resulting &lt;code&gt;Collection&lt;/code&gt; may not contain &lt;b&gt;all&lt;/b&gt; of the &lt;code&gt;Certificate&lt;/code&gt;s that match the selector. For instance, an LDAP &lt;code&gt;CertStore&lt;/code&gt; may not search all entries in the directory. Instead, it may just search entries that are likely to contain the &lt;code&gt;Certificate&lt;/code&gt;s it is looking for.</source>
          <target state="translated">일부 &lt;code&gt;CertStore&lt;/code&gt; 유형, 결과 &lt;code&gt;Collection&lt;/code&gt; 포함되어 있지 않을 수 있습니다 &lt;b&gt;모두&lt;/b&gt; 의 &lt;code&gt;Certificate&lt;/code&gt; 의 선택기를 일치합니다. 예를 들어, LDAP &lt;code&gt;CertStore&lt;/code&gt; 는 디렉토리의 모든 항목을 검색하지 않을 수 있습니다. 대신 찾고자하는 &lt;code&gt;Certificate&lt;/code&gt; 를 포함 할 가능성이있는 항목 만 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="22e94a6fa8a45a9ac9e87cc4182da53a7e5c4700" translate="yes" xml:space="preserve">
          <source>For some document formats (such as &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt;), the desired orientation of the print-stream pages is specified within the document data. This information is generated by a device driver prior to the submission of the print job. Other document formats (such as &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt;) do not include the notion of desired orientation within the document data. In the latter case it is possible for the printer to bind the desired orientation to the document data after it has been submitted. It is expected that a printer would only support the &lt;code&gt;OrientationRequested&lt;/code&gt; attribute for some document formats (e.g., &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; or &lt;code&gt;&quot;text/html&quot;&lt;/code&gt;) but not others (e.g. &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt;). This is no different from any other job template attribute, since a print job can always impose constraints among the values of different job template attributes. However, a special mention is made here since it is very likely that a printer will support the &lt;code&gt;OrientationRequested&lt;/code&gt; attribute for only a subset of the supported document formats.</source>
          <target state="translated">일부 문서 형식 (예 : &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt; )의 경우 인쇄 스트림 페이지의 원하는 방향이 문서 데이터 내에 지정됩니다. 이 정보는 인쇄 작업을 제출하기 전에 장치 드라이버에 의해 생성됩니다. 다른 문서 형식 (예 : &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; )에는 문서 데이터 내에서 원하는 방향 개념이 포함되지 않습니다. 후자의 경우 프린터는 문서 데이터가 제출 된 후 원하는 방향을 문서 데이터에 바인딩 할 수 있습니다. 프린터는 일부 문서 형식 (예 : &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;text/html&quot;&lt;/code&gt; )에 대해서만 &lt;code&gt;OrientationRequested&lt;/code&gt; 속성 만 지원하고 다른 문서 형식 (예 : &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt; ). 인쇄 작업은 항상 다른 작업 템플릿 속성 값 사이에 제약 조건을 부과 할 수 있기 때문에 다른 작업 템플릿 속성과 다르지 않습니다. 그러나 프린터가 지원 되는 문서 형식의 하위 집합에 대해서만 &lt;code&gt;OrientationRequested&lt;/code&gt; 속성을 지원할 가능성이 높기 때문에 여기서 특별히 언급 합니다.</target>
        </trans-unit>
        <trans-unit id="a5305c849ef834d436ddf738002d87d9d625028c" translate="yes" xml:space="preserve">
          <source>For some document formats (such as &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt;), the desired orientation of the print-stream pages is specified within the document data. This information is generated by a device driver prior to the submission of the print job. Other document formats (such as &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt;) do not include the notion of desired orientation within the document data. In the latter case it is possible for the printer to bind the desired orientation to the document data after it has been submitted. It is expected that a printer would only support the OrientationRequested attribute for some document formats (e.g., &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; or &lt;code&gt;&quot;text/html&quot;&lt;/code&gt;) but not others (e.g. &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt;). This is no different from any other job template attribute, since a print job can always impose constraints among the values of different job template attributes. However, a special mention is made here since it is very likely that a printer will support the OrientationRequested attribute for only a subset of the supported document formats.</source>
          <target state="translated">일부 문서 형식 (예 : &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt; )의 경우 인쇄 스트림 페이지의 원하는 방향이 문서 데이터 내에 지정됩니다. 이 정보는 인쇄 작업을 제출하기 전에 장치 드라이버에 의해 생성됩니다. 다른 문서 형식 (예 : &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; )에는 문서 데이터 내에서 원하는 방향에 대한 개념이 포함되지 않습니다. 후자의 경우, 프린터는 제출 된 후 원하는 방향을 문서 데이터에 바인딩 할 수 있습니다. 프린터는 일부 문서 형식 (예 : &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;text/html&quot;&lt;/code&gt; )에 대해서만 OrientationRequested 속성을 지원 하지만 다른 것 (예 : &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt; )은 지원하지 않습니다.). 인쇄 작업은 항상 다른 작업 템플리트 속성 값 사이에 제한 조건을 부과 할 수 있기 때문에 다른 작업 템플리트 속성과 다르지 않습니다. 그러나 프린터가 지원되는 문서 형식의 서브 세트에 대해서만 OrientationRequested 속성을 지원할 가능성이 높기 때문에 여기서 특별히 언급됩니다.</target>
        </trans-unit>
        <trans-unit id="0fe557112ee4ca1e72435e187056ad881c86ceb4" translate="yes" xml:space="preserve">
          <source>For some shorthand properties that take missing values from other sides, such as the &lt;code&gt;margin&lt;/code&gt;, &lt;code&gt;padding&lt;/code&gt;, and &lt;code&gt;border-[width|style|color]&lt;/code&gt; properties, the minimum number of sides possible should be used; i.e., &quot;0px 10px&quot; will be returned instead of &quot;0px 10px 0px 10px&quot;.</source>
          <target state="translated">&lt;code&gt;margin&lt;/code&gt; , &lt;code&gt;padding&lt;/code&gt; , &lt;code&gt;border-[width|style|color]&lt;/code&gt; 속성 과 같이 다른 쪽에서 누락 된 값을 취하는 일부 속기 속성 의 경우 가능한 최소 변 수를 사용해야합니다. 즉, &quot;0px 10px 0px 10px&quot;대신 &quot;0px 10px&quot;가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="09018bb506a1cc69eba6480b165cb1aba8eb22a7" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;#doubleStream(java.util.Spliterator.OfDouble,boolean)&quot;&gt;&lt;code&gt;doubleStream(java.util.Spliterator.OfDouble, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;IMMUTABLE&lt;/code&gt; 또는 &lt;code&gt;CONCURRENT&lt;/code&gt; 의 특성을보고 하거나 &lt;a href=&quot;../spliterator#binding&quot;&gt;후기 바인딩&lt;/a&gt; 인 &lt;a href=&quot;#doubleStream(java.util.Spliterator.OfDouble,boolean)&quot;&gt; &lt;code&gt;doubleStream(java.util.Spliterator.OfDouble, boolean)&lt;/code&gt; &lt;/a&gt; 경우 doubleStream (java.util.Spliterator.OfDouble, boolean)을 대신 사용하는 것이 더 효율적일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6266d2745dcb22de483d0dc7b876171ca4cabb70" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;#intStream(java.util.Spliterator.OfInt,boolean)&quot;&gt;&lt;code&gt;intStream(java.util.Spliterator.OfInt, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;IMMUTABLE&lt;/code&gt; 또는 &lt;code&gt;CONCURRENT&lt;/code&gt; 의 특성을보고 하거나 &lt;a href=&quot;../spliterator#binding&quot;&gt;후기 바인딩&lt;/a&gt; 인 &lt;a href=&quot;#intStream(java.util.Spliterator.OfInt,boolean)&quot;&gt; &lt;code&gt;intStream(java.util.Spliterator.OfInt, boolean)&lt;/code&gt; &lt;/a&gt; 대신 intStream (java.util.Spliterator.OfInt, boolean) 을 사용하는 것이 더 효율적일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5f350f6770ebd5851eaeb91f7a7cf7e4a21b8a4d" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;#longStream(java.util.Spliterator.OfLong,boolean)&quot;&gt;&lt;code&gt;longStream(java.util.Spliterator.OfLong, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;IMMUTABLE&lt;/code&gt; 또는 &lt;code&gt;CONCURRENT&lt;/code&gt; 의 특성을보고 하거나 &lt;a href=&quot;../spliterator#binding&quot;&gt;후기 바인딩&lt;/a&gt; 인 &lt;a href=&quot;#longStream(java.util.Spliterator.OfLong,boolean)&quot;&gt; &lt;code&gt;longStream(java.util.Spliterator.OfLong, boolean)&lt;/code&gt; &lt;/a&gt; 대신 longStream (java.util.Spliterator.OfLong, boolean) 을 사용하는 것이 더 효율적일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="148567bd1b6747400177d4608517d55a74fd6918" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;#stream(java.util.Spliterator,boolean)&quot;&gt;&lt;code&gt;stream(java.util.Spliterator, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">의 특성보고 spliterators를 들어 &lt;code&gt;IMMUTABLE&lt;/code&gt; 또는 &lt;code&gt;CONCURRENT&lt;/code&gt; 된다, 또는 &lt;a href=&quot;../spliterator#binding&quot;&gt;런타임에 바인딩을&lt;/a&gt; , 그것은 가능성이 더 사용에 효율적입니다 &lt;a href=&quot;#stream(java.util.Spliterator,boolean)&quot;&gt; &lt;code&gt;stream(java.util.Spliterator, boolean)&lt;/code&gt; &lt;/a&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="fad206ccade197d1c3cdd9d97321b934f1f258a2" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;streamsupport#doubleStream-java.util.Spliterator.OfDouble-boolean-&quot;&gt;&lt;code&gt;doubleStream(java.util.Spliterator.OfDouble, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;IMMUTABLE&lt;/code&gt; 또는 &lt;code&gt;CONCURRENT&lt;/code&gt; 의 특성을보고 하거나 &lt;a href=&quot;../spliterator#binding&quot;&gt;바인딩&lt;/a&gt; 이 늦은 &lt;a href=&quot;streamsupport#doubleStream-java.util.Spliterator.OfDouble-boolean-&quot;&gt; &lt;code&gt;doubleStream(java.util.Spliterator.OfDouble, boolean)&lt;/code&gt; &lt;/a&gt; 경우 doubleStream (java.util.Spliterator.OfDouble, boolean)을 대신 사용하는 것이 더 효율적일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="10d39936197a6f658bf70a8886338926a7e07f8f" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;streamsupport#intStream-java.util.Spliterator.OfInt-boolean-&quot;&gt;&lt;code&gt;intStream(java.util.Spliterator.OfInt, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;IMMUTABLE&lt;/code&gt; 또는 &lt;code&gt;CONCURRENT&lt;/code&gt; 의 특성을보고 하거나 &lt;a href=&quot;../spliterator#binding&quot;&gt;바인딩&lt;/a&gt; 이 늦은 &lt;a href=&quot;streamsupport#intStream-java.util.Spliterator.OfInt-boolean-&quot;&gt; &lt;code&gt;intStream(java.util.Spliterator.OfInt, boolean)&lt;/code&gt; &lt;/a&gt; 대신 intStream (java.util.Spliterator.OfInt, boolean) 을 사용하는 것이 더 효율적 입니다.</target>
        </trans-unit>
        <trans-unit id="20fb5d2059249e6adb6fc28ea0b2d832633b253a" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;streamsupport#longStream-java.util.Spliterator.OfLong-boolean-&quot;&gt;&lt;code&gt;longStream(java.util.Spliterator.OfLong, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;IMMUTABLE&lt;/code&gt; 또는 &lt;code&gt;CONCURRENT&lt;/code&gt; 의 특성을보고 하거나 &lt;a href=&quot;../spliterator#binding&quot;&gt;바인딩&lt;/a&gt; 이 늦은 &lt;a href=&quot;streamsupport#longStream-java.util.Spliterator.OfLong-boolean-&quot;&gt; &lt;code&gt;longStream(java.util.Spliterator.OfLong, boolean)&lt;/code&gt; &lt;/a&gt; 경우 longStream (java.util.Spliterator.OfLong, boolean)을 대신 사용하는 것이 더 효율적일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4160b6cd117fad4ed84680b4ead6ade57d473b25" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;streamsupport#stream-java.util.Spliterator-boolean-&quot;&gt;&lt;code&gt;stream(java.util.Spliterator, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;IMMUTABLE&lt;/code&gt; 또는 &lt;code&gt;CONCURRENT&lt;/code&gt; 의 특성을보고 하거나 &lt;a href=&quot;../spliterator#binding&quot;&gt;바인딩&lt;/a&gt; 이 늦은 스플리터의 경우 대신 &lt;a href=&quot;streamsupport#stream-java.util.Spliterator-boolean-&quot;&gt; &lt;code&gt;stream(java.util.Spliterator, boolean)&lt;/code&gt; &lt;/a&gt; 을 사용하는 것이 더 효율적일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="26f58254cdff2a06f3d6d9734d80dbfafad4e87f" translate="yes" xml:space="preserve">
          <source>For strict parsing, the number of characters allowed by &lt;code&gt;width&lt;/code&gt; to &lt;code&gt;maxWidth&lt;/code&gt; are parsed. For lenient parsing, the number of characters must be at least 1 and less than 10. If the number of digits parsed is equal to &lt;code&gt;width&lt;/code&gt; and the value is positive, the value of the field is computed to be the first number greater than or equal to the &lt;code&gt;baseValue&lt;/code&gt; with the same least significant characters, otherwise the value parsed is the field value. This allows a reduced value to be entered for values in range of the baseValue and width and absolute values can be entered for values outside the range.</source>
          <target state="translated">엄격한 구문 분석의 경우 &lt;code&gt;width&lt;/code&gt; 에서 &lt;code&gt;maxWidth&lt;/code&gt; 까지 허용되는 문자 수가 구문 분석됩니다. 관용적 인 구문 분석의 경우 문자 수는 1 이상 10 미만이어야합니다. 구문 분석 된 자릿수가 &lt;code&gt;width&lt;/code&gt; 와 같고 값이 양수이면 필드 값이 첫 번째 숫자보다 크거나 같은 것으로 계산됩니다. 받는 사람 &lt;code&gt;baseValue&lt;/code&gt; 같은 최하위 문자로, 그렇지 않으면 구문 분석 값은 필드의 값입니다. 이를 통해 baseValue 및 width 범위의 값에 대해 감소 된 값을 입력 할 수 있으며 범위 밖의 값에 대해서는 절대 값을 입력 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7454110d6c362813ee11506433ae73a93c3882b6" translate="yes" xml:space="preserve">
          <source>For style sheet languages that support the concept of style sheet inclusion, this attribute represents the including style sheet, if one exists.</source>
          <target state="translated">스타일 시트 포함 개념을 지원하는 스타일 시트 언어의 경우이 속성은 포함하는 스타일 시트 (있는 경우)를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3c44c1fef329f7f25959b79f780bae4c4660a5dc" translate="yes" xml:space="preserve">
          <source>For style sheet languages that support the concept of style sheet inclusion, this attribute represents the including style sheet, if one exists. If the style sheet is a top-level style sheet, or the style sheet language does not support inclusion, the value of this attribute is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">스타일 시트 포함 개념을 지원하는 스타일 시트 언어의 경우이 속성은 포함하는 스타일 시트 (있는 경우)를 나타냅니다. 스타일 시트가 최상위 스타일 시트이거나 스타일 시트 언어가 포함을 지원하지 않는 경우이 속성의 값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5df93252e1ef16c3279772a8887b08c66190d6d6" translate="yes" xml:space="preserve">
          <source>For systems that do not support federation, the name arguments (in either &lt;code&gt;Name&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt; forms) and the names returned in &lt;code&gt;NamingEnumeration&lt;/code&gt; may be names in their own namespace rather than names in a composite namespace, at the discretion of the service provider.</source>
          <target state="translated">페더레이션을 지원하지 않는 시스템의 경우 이름 공급자 ( &lt;code&gt;Name&lt;/code&gt; 또는 &lt;code&gt;String&lt;/code&gt; 형식)와 &lt;code&gt;NamingEnumeration&lt;/code&gt; 에 반환 된 이름은 서비스 공급자의 판단에 따라 복합 네임 스페이스의 이름이 아닌 자체 네임 스페이스의 이름 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c36c0d5e03fbbc8eeeb250c08d04988226b782f" translate="yes" xml:space="preserve">
          <source>For systems that support federation, &lt;code&gt;String&lt;/code&gt; name arguments to &lt;code&gt;Context&lt;/code&gt; methods are composite names. Name arguments that are instances of &lt;code&gt;CompositeName&lt;/code&gt; are treated as composite names, while &lt;code&gt;Name&lt;/code&gt; arguments that are not instances of &lt;code&gt;CompositeName&lt;/code&gt; are treated as compound names (which might be instances of &lt;code&gt;CompoundName&lt;/code&gt; or other implementations of compound names). This allows the results of &lt;code&gt;NameParser.parse()&lt;/code&gt; to be used as arguments to the &lt;code&gt;Context&lt;/code&gt; methods. Prior to JNDI 1.2, all name arguments were treated as composite names.</source>
          <target state="translated">연합을 지원하는 시스템의 경우 &lt;code&gt;Context&lt;/code&gt; 메소드에 대한 &lt;code&gt;String&lt;/code&gt; 이름 인수 는 복합 이름입니다. &lt;code&gt;CompositeName&lt;/code&gt; 의 인스턴스 인 이름 인수는 복합 이름으로 취급되는 반면, &lt;code&gt;CompositeName&lt;/code&gt; 의 인스턴스가 아닌 &lt;code&gt;Name&lt;/code&gt; 인수는 복합 이름 ( &lt;code&gt;CompoundName&lt;/code&gt; 의 인스턴스 또는 다른 복합 이름 구현 일 수 있음)으로 취급됩니다 . 이를 통해 &lt;code&gt;NameParser.parse()&lt;/code&gt; 의 결과를 &lt;code&gt;Context&lt;/code&gt; 메소드의 인수로 사용할 수 있습니다 . JNDI 1.2 이전에는 모든 이름 인수가 복합 이름으로 처리되었습니다.</target>
        </trans-unit>
        <trans-unit id="f935a46a38882498b2fd69c4831dee68e2e937c5" translate="yes" xml:space="preserve">
          <source>For target values which will be frequently updated, consider using a &lt;a href=&quot;volatilecallsite&quot;&gt;volatile call site&lt;/a&gt; instead.</source>
          <target state="translated">자주 업데이트되는 대상 값의 경우 &lt;a href=&quot;volatilecallsite&quot;&gt;일시적 통화 사이트를&lt;/a&gt; 대신 사용해보십시오.</target>
        </trans-unit>
        <trans-unit id="cfa72173fbc4e278072cdd080d8c5237f40fa65a" translate="yes" xml:space="preserve">
          <source>For text deletion, the &lt;code&gt;oldValue&lt;/code&gt; is an &lt;code&gt;AccessibleTextSequence&lt;/code&gt; specifying the text that was deleted and the &lt;code&gt;newValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">텍스트 삭제의 경우 &lt;code&gt;oldValue&lt;/code&gt; 는 삭제 된 텍스트를 지정 하는 &lt;code&gt;AccessibleTextSequence&lt;/code&gt; 이고 &lt;code&gt;newValue&lt;/code&gt; 는 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7269ea0cc24dd493dddf3eac9f6e8cccb42ee32f" translate="yes" xml:space="preserve">
          <source>For text insertion, the &lt;code&gt;oldValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and the &lt;code&gt;newValue&lt;/code&gt; is an &lt;code&gt;AccessibleTextSequence&lt;/code&gt; specifying the text that was inserted.</source>
          <target state="translated">텍스트 삽입의 경우 &lt;code&gt;oldValue&lt;/code&gt; 는 &lt;code&gt;null&lt;/code&gt; 이고 &lt;code&gt;newValue&lt;/code&gt; 는 삽입 된 텍스트를 지정 하는 &lt;code&gt;AccessibleTextSequence&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3d9e3c5d8fa00a75d19707b2f2902a47b97f60b0" translate="yes" xml:space="preserve">
          <source>For text replacement, the &lt;code&gt;oldValue&lt;/code&gt; is an &lt;code&gt;AccessibleTextSequence&lt;/code&gt; specifying the old text and the &lt;code&gt;newValue&lt;/code&gt; is an &lt;code&gt;AccessibleTextSequence&lt;/code&gt; specifying the new text.</source>
          <target state="translated">텍스트 대체의 경우 &lt;code&gt;oldValue&lt;/code&gt; 는 이전 텍스트를 지정 하는 &lt;code&gt;AccessibleTextSequence&lt;/code&gt; 이고 &lt;code&gt;newValue&lt;/code&gt; 는 새 텍스트를 지정 하는 &lt;code&gt;AccessibleTextSequence&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b8365274e15659426f7246197d05cab03f982ba1" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#getAttribute(javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, attribute, name, &quot;getAttribute&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;a href=&quot;#getAttribute(javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, attribute, name, &quot;getAttribute&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="23f273aef5167ca16f1d1df68e6919c8910a5d3d" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#getAttributes(javax.management.ObjectName,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;getAttributes&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;getAttribute&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each attribute &lt;em&gt;a&lt;/em&gt; in the &lt;a href=&quot;attributelist&quot;&gt;&lt;code&gt;AttributeList&lt;/code&gt;&lt;/a&gt;, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;getAttribute&quot;)&lt;/code&gt;&lt;/a&gt;, the MBean server will behave as if that attribute had not been in the supplied list.</source>
          <target state="translated">의 경우 &lt;a href=&quot;#getAttributes(javax.management.ObjectName,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;getAttributes&lt;/code&gt; &lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;getAttribute&quot;)&lt;/code&gt; &lt;/a&gt; . 또한 &lt;a href=&quot;attributelist&quot;&gt; &lt;code&gt;AttributeList&lt;/code&gt; 의&lt;/a&gt; 각 속성 &lt;em&gt;a&lt;/em&gt; 에 대해 호출자의 권한이 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;getAttribute&quot;)&lt;/code&gt; &lt;/a&gt;&lt;em&gt;a&lt;/em&gt; , name, &quot;getAttribute&quot;)를 암시하지 않으면 MBean 서버는 해당 속성이 제공된 목록에없는 것처럼 작동합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e082abdbf8b25df918965d8fd0a7c66abff5bd6e" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#getClassLoader(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getClassLoader&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, loaderName,
 &quot;getClassLoader&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;a href=&quot;#getClassLoader(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getClassLoader&lt;/code&gt; 를의&lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, loaderName, &quot;getClassLoader&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="190c1b9a4e8b5dc26519eb318f65181b9defc626" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#getClassLoaderFor(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getClassLoaderFor&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, mbeanName,
 &quot;getClassLoaderFor&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;a href=&quot;#getClassLoaderFor(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getClassLoaderFor&lt;/code&gt; 를의&lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, mbeanName, &quot;getClassLoaderFor&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7dc275ddd537d8d7c349ba29e9c411ab2ea02398" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#getClassLoaderRepository()&quot;&gt;&lt;code&gt;getClassLoaderRepository&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(null, null, null, &quot;getClassLoaderRepository&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;a href=&quot;#getClassLoaderRepository()&quot;&gt; &lt;code&gt;getClassLoaderRepository&lt;/code&gt; &lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(null, null, null, &quot;getClassLoaderRepository&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c53b1b8f34b83d9ed1250c21b9352597438cda11" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#queryMBeans(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt;&lt;code&gt;queryMBeans&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(null, null, null, &quot;queryMBeans&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each MBean &lt;em&gt;n&lt;/em&gt; that matches &lt;code&gt;name&lt;/code&gt;, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, &lt;em&gt;n&lt;/em&gt;, &quot;queryMBeans&quot;)&lt;/code&gt;&lt;/a&gt;, the MBean server will behave as if that MBean did not exist.</source>
          <target state="translated">를 들어 &lt;a href=&quot;#queryMBeans(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt; &lt;code&gt;queryMBeans&lt;/code&gt; &lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(null, null, null, &quot;queryMBeans&quot;)&lt;/code&gt; &lt;/a&gt; . 또한, &lt;code&gt;name&lt;/code&gt; 과 일치하는 각 MBean &lt;em&gt;n&lt;/em&gt; 에 대해 호출자의 권한이 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, &lt;em&gt;n&lt;/em&gt;, &quot;queryMBeans&quot;)&lt;/code&gt; &lt;/a&gt;&lt;em&gt;n&lt;/em&gt; , &quot;queryMBeans&quot;)을 암시하지 않으면 MBean 서버는 해당 MBean이 존재하지 않는 것처럼 작동합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="778605b295314d4a6d32d7a0c2fb6f1feac04d44" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#queryNames(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt;&lt;code&gt;queryNames&lt;/code&gt;&lt;/a&gt; method, the checks are the same as for &lt;code&gt;queryMBeans&lt;/code&gt; except that &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; is used instead of &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; in the &lt;code&gt;MBeanPermission&lt;/code&gt; objects. Note that a &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; permission implies the corresponding &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; permission.</source>
          <target state="translated">들어 &lt;a href=&quot;#queryNames(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt; &lt;code&gt;queryNames&lt;/code&gt; 에&lt;/a&gt; 있어서, 상기 검사와 동일 &lt;code&gt;queryMBeans&lt;/code&gt; 것 이외에는 &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; 대신 사용되는 &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; 에 &lt;code&gt;MBeanPermission&lt;/code&gt; 가 개체. 참고는 것을 &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; 권한은 해당 의미 &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; 권한을.</target>
        </trans-unit>
        <trans-unit id="b6d30f6448a4da148b2ba1a363fbb778821a0e8e" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#registerMBean(java.lang.Object,javax.management.ObjectName)&quot;&gt;&lt;code&gt;registerMBean&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;registerMBean&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;a href=&quot;#registerMBean(java.lang.Object,javax.management.ObjectName)&quot;&gt; &lt;code&gt;registerMBean&lt;/code&gt; &lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;registerMBean&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a46688ec74cb638650657f0ae04c971ba2c8493" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#setAttribute(javax.management.ObjectName,javax.management.Attribute)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, attrName, name, &quot;setAttribute&quot;)&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;attrName&lt;/code&gt; is &lt;a href=&quot;attribute#getName()&quot;&gt;&lt;code&gt;attribute.getName()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의 경우 &lt;a href=&quot;#setAttribute(javax.management.ObjectName,javax.management.Attribute)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, attrName, name, &quot;setAttribute&quot;)&lt;/code&gt; &lt;/a&gt; 여기서 &lt;code&gt;attrName&lt;/code&gt; 있다 &lt;a href=&quot;attribute#getName()&quot;&gt; &lt;code&gt;attribute.getName()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3127e4fe03e65d132a348b4a4c15804187a89206" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#setAttributes(javax.management.ObjectName,javax.management.AttributeList)&quot;&gt;&lt;code&gt;setAttributes&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;setAttribute&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each attribute &lt;em&gt;a&lt;/em&gt; in the &lt;a href=&quot;attributelist&quot;&gt;&lt;code&gt;AttributeList&lt;/code&gt;&lt;/a&gt;, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;setAttribute&quot;)&lt;/code&gt;&lt;/a&gt;, the MBean server will behave as if that attribute had not been in the supplied list.</source>
          <target state="translated">를 들어 &lt;a href=&quot;#setAttributes(javax.management.ObjectName,javax.management.AttributeList)&quot;&gt; &lt;code&gt;setAttributes&lt;/code&gt; 의&lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;setAttribute&quot;)&lt;/code&gt; &lt;/a&gt; . 또한 &lt;a href=&quot;attributelist&quot;&gt; &lt;code&gt;AttributeList&lt;/code&gt; 의&lt;/a&gt; 각 속성 &lt;em&gt;a&lt;/em&gt; 에 대해 호출자의 권한이 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;setAttribute&quot;)&lt;/code&gt; &lt;/a&gt;&lt;em&gt;a&lt;/em&gt; , name, &quot;setAttribute&quot;)를 암시하지 않으면 MBean 서버는 해당 속성이 제공된 목록에없는 것처럼 작동합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="599fec1bc61d3b18b6bb471c85bdf5d2c3831da9" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#unregisterMBean(javax.management.ObjectName)&quot;&gt;&lt;code&gt;unregisterMBean&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;unregisterMBean&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;a href=&quot;#unregisterMBean(javax.management.ObjectName)&quot;&gt; &lt;code&gt;unregisterMBean&lt;/code&gt; &lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;unregisterMBean&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="07a529682b90dbb4f21872bf4c556169d936d61f" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getAttribute-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, attribute, name, &quot;getAttribute&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;a href=&quot;mbeanserver#getAttribute-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, attribute, name, &quot;getAttribute&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ddbaf08a3d47f1c0d9927806eb60a1f290a58c7b" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getAttributes-javax.management.ObjectName-java.lang.String:A-&quot;&gt;&lt;code&gt;getAttributes&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;getAttribute&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each attribute &lt;em&gt;a&lt;/em&gt; in the &lt;a href=&quot;attributelist&quot;&gt;&lt;code&gt;AttributeList&lt;/code&gt;&lt;/a&gt;, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;getAttribute&quot;)&lt;/code&gt;&lt;/a&gt;, the MBean server will behave as if that attribute had not been in the supplied list.</source>
          <target state="translated">의 경우 &lt;a href=&quot;mbeanserver#getAttributes-javax.management.ObjectName-java.lang.String:A-&quot;&gt; &lt;code&gt;getAttributes&lt;/code&gt; &lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;getAttribute&quot;)&lt;/code&gt; &lt;/a&gt; . 또한 &lt;a href=&quot;attributelist&quot;&gt; &lt;code&gt;AttributeList&lt;/code&gt; 의&lt;/a&gt; 각 속성 &lt;em&gt;a&lt;/em&gt; 에 대해 호출자의 권한이 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;getAttribute&quot;)&lt;/code&gt; &lt;/a&gt;&lt;em&gt;a&lt;/em&gt; , name, &quot;getAttribute&quot;)를 암시하지 않으면 MBean 서버는 해당 속성이 제공된 목록에없는 것처럼 작동합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf51b6429c6774bbbbb436da1863834e3f600b2e" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getClassLoader-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getClassLoader&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, loaderName,
 &quot;getClassLoader&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;a href=&quot;mbeanserver#getClassLoader-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getClassLoader&lt;/code&gt; 를의&lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, loaderName, &quot;getClassLoader&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3fe5e86cb960b8bf74a81e8cf6836ae546034489" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getClassLoaderFor-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getClassLoaderFor&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, mbeanName,
 &quot;getClassLoaderFor&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;a href=&quot;mbeanserver#getClassLoaderFor-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getClassLoaderFor&lt;/code&gt; 를의&lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, mbeanName, &quot;getClassLoaderFor&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d13aa3f80a8c0aa789c154b81017939d57a4df0e" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getClassLoaderRepository--&quot;&gt;&lt;code&gt;getClassLoaderRepository&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(null, null, null, &quot;getClassLoaderRepository&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;a href=&quot;mbeanserver#getClassLoaderRepository--&quot;&gt; &lt;code&gt;getClassLoaderRepository&lt;/code&gt; &lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(null, null, null, &quot;getClassLoaderRepository&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="36aa2847328675e1fd0ef997bc609841c5ffdba8" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getDomains--&quot;&gt;&lt;code&gt;getDomains&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(null, null, null, &quot;getDomains&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each domain &lt;var&gt;d&lt;/var&gt; in the returned array, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(null, null, new ObjectName(&quot;&lt;var&gt;d&lt;/var&gt;:x=x&quot;),
 &quot;getDomains&quot;)&lt;/code&gt;&lt;/a&gt;, the domain is eliminated from the array. Here, &lt;code&gt;x=x&lt;/code&gt; is any &lt;var&gt;key=value&lt;/var&gt; pair, needed to satisfy ObjectName's constructor but not otherwise relevant.</source>
          <target state="translated">를 들어 &lt;a href=&quot;mbeanserver#getDomains--&quot;&gt; &lt;code&gt;getDomains&lt;/code&gt; 의&lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(null, null, null, &quot;getDomains&quot;)&lt;/code&gt; &lt;/a&gt; . 또한 반환 된 배열의 각 도메인 &lt;var&gt;d&lt;/var&gt; 에 대해 호출자의 권한이 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(null, null, new ObjectName(&quot;&lt;var&gt;d&lt;/var&gt;:x=x&quot;), &quot;getDomains&quot;)&lt;/code&gt; &lt;/a&gt; 암시하지 않으면 도메인이 배열에서 제거됩니다. 여기서 &lt;code&gt;x=x&lt;/code&gt; 는 &lt;var&gt;key=value&lt;/var&gt; 쌍이며 ObjectName의 생성자를 만족시키는 데 필요하지만 관련이 없습니다.</target>
        </trans-unit>
        <trans-unit id="35ded60bc9272f51bebab45845bcfea544ce03dd" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getMBeanInfo-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getMBeanInfo&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;getMBeanInfo&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;a href=&quot;mbeanserver#getMBeanInfo-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getMBeanInfo&lt;/code&gt; 메소드의&lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;getMBeanInfo&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cbc22db4e65eb35d8c1286bbd27476f8bfe46541" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getObjectInstance-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getObjectInstance&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;getObjectInstance&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의 경우 &lt;a href=&quot;mbeanserver#getObjectInstance-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getObjectInstance&lt;/code&gt; &lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;getObjectInstance&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2d65efe8a2194085110664d672435aca72c22b0c" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#invoke-javax.management.ObjectName-java.lang.String-java.lang.Object:A-java.lang.String:A-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, operationName, name, &quot;invoke&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;a href=&quot;mbeanserver#invoke-javax.management.ObjectName-java.lang.String-java.lang.Object:A-java.lang.String:A-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, operationName, name, &quot;invoke&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f5ec4bf97218bf65b28d8302d714f45e4025fe7" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#isInstanceOf-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;isInstanceOf&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;isInstanceOf&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;a href=&quot;mbeanserver#isInstanceOf-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;isInstanceOf&lt;/code&gt; 의&lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;isInstanceOf&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="858b78f3418d32b14c78d61a0f9406ea6c007add" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#queryMBeans-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt;&lt;code&gt;queryMBeans&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(null, null, null, &quot;queryMBeans&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each MBean &lt;em&gt;n&lt;/em&gt; that matches &lt;code&gt;name&lt;/code&gt;, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, &lt;em&gt;n&lt;/em&gt;, &quot;queryMBeans&quot;)&lt;/code&gt;&lt;/a&gt;, the MBean server will behave as if that MBean did not exist.</source>
          <target state="translated">를 들어 &lt;a href=&quot;mbeanserver#queryMBeans-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt; &lt;code&gt;queryMBeans&lt;/code&gt; &lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(null, null, null, &quot;queryMBeans&quot;)&lt;/code&gt; &lt;/a&gt; . 또한 &lt;code&gt;name&lt;/code&gt; 과 일치하는 각 MBean &lt;em&gt;n&lt;/em&gt; 에 대해 호출자의 권한이 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, &lt;em&gt;n&lt;/em&gt;, &quot;queryMBeans&quot;)&lt;/code&gt; &lt;/a&gt;&lt;em&gt;n&lt;/em&gt; , &quot;queryMBeans&quot;)을 암시하지 않으면 MBean 서버는 해당 MBean이없는 것처럼 작동합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ec1a6bbead7c891292d17ad2571fba7958073a8" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#queryNames-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt;&lt;code&gt;queryNames&lt;/code&gt;&lt;/a&gt; method, the checks are the same as for &lt;code&gt;queryMBeans&lt;/code&gt; except that &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; is used instead of &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; in the &lt;code&gt;MBeanPermission&lt;/code&gt; objects. Note that a &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; permission implies the corresponding &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; permission.</source>
          <target state="translated">들어 &lt;a href=&quot;mbeanserver#queryNames-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt; &lt;code&gt;queryNames&lt;/code&gt; 에&lt;/a&gt; 있어서, 상기 검사와 동일 &lt;code&gt;queryMBeans&lt;/code&gt; 것 이외에는 &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; 대신 사용되는 &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; 에 &lt;code&gt;MBeanPermission&lt;/code&gt; 가 개체. 참고는 것을 &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; 권한은 해당 의미 &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; 권한을.</target>
        </trans-unit>
        <trans-unit id="dd26c7a9cbf6a5c71bccc701e255f8feaa4c4fff" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#registerMBean-java.lang.Object-javax.management.ObjectName-&quot;&gt;&lt;code&gt;registerMBean&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;registerMBean&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;a href=&quot;mbeanserver#registerMBean-java.lang.Object-javax.management.ObjectName-&quot;&gt; &lt;code&gt;registerMBean&lt;/code&gt; &lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;registerMBean&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fa5fa7717acc4a5f69b8a3ba980fc0b65552537b" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#setAttribute-javax.management.ObjectName-javax.management.Attribute-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, attrName, name, &quot;setAttribute&quot;)&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;attrName&lt;/code&gt; is &lt;a href=&quot;attribute#getName--&quot;&gt;&lt;code&gt;attribute.getName()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의 경우 &lt;a href=&quot;mbeanserver#setAttribute-javax.management.ObjectName-javax.management.Attribute-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, attrName, name, &quot;setAttribute&quot;)&lt;/code&gt; &lt;/a&gt; 여기서 &lt;code&gt;attrName&lt;/code&gt; 있다 &lt;a href=&quot;attribute#getName--&quot;&gt; &lt;code&gt;attribute.getName()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a90e1d8dab00350d546cff27eec4811d28de3f6" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#setAttributes-javax.management.ObjectName-javax.management.AttributeList-&quot;&gt;&lt;code&gt;setAttributes&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;setAttribute&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each attribute &lt;em&gt;a&lt;/em&gt; in the &lt;a href=&quot;attributelist&quot;&gt;&lt;code&gt;AttributeList&lt;/code&gt;&lt;/a&gt;, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;setAttribute&quot;)&lt;/code&gt;&lt;/a&gt;, the MBean server will behave as if that attribute had not been in the supplied list.</source>
          <target state="translated">를 들어 &lt;a href=&quot;mbeanserver#setAttributes-javax.management.ObjectName-javax.management.AttributeList-&quot;&gt; &lt;code&gt;setAttributes&lt;/code&gt; 의&lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;setAttribute&quot;)&lt;/code&gt; &lt;/a&gt; . 또한 &lt;a href=&quot;attributelist&quot;&gt; &lt;code&gt;AttributeList&lt;/code&gt; 의&lt;/a&gt; 각 속성 &lt;em&gt;a&lt;/em&gt; 에 대해 호출자의 권한이 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;setAttribute&quot;)&lt;/code&gt; &lt;/a&gt;&lt;em&gt;a&lt;/em&gt; , name, &quot;setAttribute&quot;)를 암시하지 않으면 MBean 서버는 해당 속성이 제공된 목록에없는 것처럼 작동합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="498e8bad40ab2aba1376c2975dbe1109a057e4b5" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#unregisterMBean-javax.management.ObjectName-&quot;&gt;&lt;code&gt;unregisterMBean&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;unregisterMBean&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;a href=&quot;mbeanserver#unregisterMBean-javax.management.ObjectName-&quot;&gt; &lt;code&gt;unregisterMBean&lt;/code&gt; &lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;unregisterMBean&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="894a79786652fd406dbe2d9b1d75421314a9f30e" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserverconnection#getDomains()&quot;&gt;&lt;code&gt;getDomains&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(null, null, null, &quot;getDomains&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each domain &lt;var&gt;d&lt;/var&gt; in the returned array, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(null, null, new ObjectName(&quot;&lt;var&gt;d&lt;/var&gt;:x=x&quot;),
 &quot;getDomains&quot;)&lt;/code&gt;&lt;/a&gt;, the domain is eliminated from the array. Here, &lt;code&gt;x=x&lt;/code&gt; is any &lt;var&gt;key=value&lt;/var&gt; pair, needed to satisfy ObjectName's constructor but not otherwise relevant.</source>
          <target state="translated">를 들어 &lt;a href=&quot;mbeanserverconnection#getDomains()&quot;&gt; &lt;code&gt;getDomains&lt;/code&gt; 의&lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(null, null, null, &quot;getDomains&quot;)&lt;/code&gt; &lt;/a&gt; . 또한 반환 된 배열의 각 도메인 &lt;var&gt;d&lt;/var&gt; 에 대해 호출자의 권한이 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(null, null, new ObjectName(&quot;&lt;var&gt;d&lt;/var&gt;:x=x&quot;), &quot;getDomains&quot;)&lt;/code&gt; &lt;/a&gt; 암시하지 않는 경우 해당 도메인은 배열에서 제거됩니다. 여기서 &lt;code&gt;x=x&lt;/code&gt; 는 ObjectName의 생성자를 충족하는 데 필요하지만 다른 관련성이없는 모든 &lt;var&gt;key=value&lt;/var&gt; 쌍입니다.</target>
        </trans-unit>
        <trans-unit id="b9a75913ab49da09f34c1757df1d0cef5c86881f" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserverconnection#getMBeanInfo(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getMBeanInfo&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;getMBeanInfo&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;a href=&quot;mbeanserverconnection#getMBeanInfo(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getMBeanInfo&lt;/code&gt; 메소드의&lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;getMBeanInfo&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="adf78cdbd31e96ea013ba638e3fc8f84eaac9a97" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserverconnection#getObjectInstance(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getObjectInstance&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;getObjectInstance&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의 경우 &lt;a href=&quot;mbeanserverconnection#getObjectInstance(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getObjectInstance&lt;/code&gt; &lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;getObjectInstance&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f7424be29688688d940bd63416f7bf39a2ff8bd" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserverconnection#invoke(javax.management.ObjectName,java.lang.String,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, operationName, name, &quot;invoke&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;a href=&quot;mbeanserverconnection#invoke(javax.management.ObjectName,java.lang.String,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, operationName, name, &quot;invoke&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5e9b66f4d611a96f9a5aa9f7bc1b8dc5bbdda644" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserverconnection#isInstanceOf(javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;isInstanceOf&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;isInstanceOf&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;a href=&quot;mbeanserverconnection#isInstanceOf(javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;isInstanceOf&lt;/code&gt; 의&lt;/a&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;isInstanceOf&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6e2e70f14d21bee3396ce0d422cb726137c3a8e2" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;H1&lt;/code&gt; to &lt;code&gt;H6&lt;/code&gt; elements.</source>
          <target state="translated">들어 &lt;code&gt;H1&lt;/code&gt; 에 &lt;code&gt;H6&lt;/code&gt; 의 요소.</target>
        </trans-unit>
        <trans-unit id="57c743c047bf384a5b3deea57092610323a385da" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;H1&lt;/code&gt; to &lt;code&gt;H6&lt;/code&gt; elements. See the H1 element definition in HTML 4.0.</source>
          <target state="translated">들어 &lt;code&gt;H1&lt;/code&gt; 에 &lt;code&gt;H6&lt;/code&gt; 의 요소. HTML 4.0의 H1 요소 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2f5106a75bcd658e2922a5b6c1b1bae014d5206d" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;Q&lt;/code&gt; and &lt;code&gt;BLOCKQUOTE&lt;/code&gt; elements.</source>
          <target state="translated">용 &lt;code&gt;Q&lt;/code&gt; 와 &lt;code&gt;BLOCKQUOTE&lt;/code&gt; 요소.</target>
        </trans-unit>
        <trans-unit id="ed360b4d95045d8fe15e50d3174409e817d17c24" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;Q&lt;/code&gt; and &lt;code&gt;BLOCKQUOTE&lt;/code&gt; elements. See the Q element definition in HTML 4.0.</source>
          <target state="translated">용 &lt;code&gt;Q&lt;/code&gt; 와 &lt;code&gt;BLOCKQUOTE&lt;/code&gt; 요소. HTML 4.0의 Q 요소 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8b8f600b2d3f51c19e43ce489ac69af6701f49a5" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;addNotificationListener&lt;/code&gt; methods, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name,
 &quot;addNotificationListener&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;code&gt;addNotificationListener&lt;/code&gt; 의 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;addNotificationListener&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="158c487d95ccee5e697a4a0b3019a2af7484037b" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;addNotificationListener&lt;/code&gt; methods, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name,
 &quot;addNotificationListener&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;code&gt;addNotificationListener&lt;/code&gt; 의 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;addNotificationListener&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="587aaae3639acfe81cc64afdee6d0ade23c7b75b" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;createMBean&lt;/code&gt; methods, the caller's permissions must imply the permissions needed by the equivalent &lt;code&gt;instantiate&lt;/code&gt; followed by &lt;code&gt;registerMBean&lt;/code&gt;.</source>
          <target state="translated">의 경우 &lt;code&gt;createMBean&lt;/code&gt; 방법, 호출자의 권한은 해당가 필요로하는 권한을 의미한다 &lt;code&gt;instantiate&lt;/code&gt; 다음 &lt;code&gt;registerMBean&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="20ffdfa868345763a88829877c0b37aeb75759a9" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;instantiate&lt;/code&gt; methods, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, null, &quot;instantiate&quot;)&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;className&lt;/code&gt; is the name of the class which is to be instantiated.</source>
          <target state="translated">를 들어 &lt;code&gt;instantiate&lt;/code&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, null, &quot;instantiate&quot;)&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;className&lt;/code&gt; 인스턴스화하는 클래스의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="734e386c7b6f7d6551a6fee63ca653f21ab334bd" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;instantiate&lt;/code&gt; methods, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, null, &quot;instantiate&quot;)&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;className&lt;/code&gt; is the name of the class which is to be instantiated.</source>
          <target state="translated">를 들어 &lt;code&gt;instantiate&lt;/code&gt; 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, null, &quot;instantiate&quot;)&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;className&lt;/code&gt; 인스턴스화하는 클래스의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="9510b3d070ff7025d9a516b8a230d3fe5f87a5f3" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;remove&lt;/code&gt; methods that take two arguments, the following is returned:</source>
          <target state="translated">두 개의 인수 를 사용하는 &lt;code&gt;remove&lt;/code&gt; 메서드의 경우 다음이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="ebcde0e97f3d9e96e3386a8a5f4e4db451f65870" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;removeNotificationListener&lt;/code&gt; methods, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name,
 &quot;removeNotificationListener&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;code&gt;removeNotificationListener&lt;/code&gt; 의 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;removeNotificationListener&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="69f05a461e498d5392d695eac6a4d13e36407ae8" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;removeNotificationListener&lt;/code&gt; methods, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name,
 &quot;removeNotificationListener&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">를 들어 &lt;code&gt;removeNotificationListener&lt;/code&gt; 의 방법, 호출자의 권한을 의미한다 &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;removeNotificationListener&quot;)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b9271dae0fba74ef21f22433d478a297260a46d6" translate="yes" xml:space="preserve">
          <source>For the assertion &quot;someCount=127&quot;, for example, &lt;code&gt;attr&lt;/code&gt; is &quot;someCount&quot; and &lt;code&gt;value&lt;/code&gt; is &quot;127&quot;. The provider determines, based on the attribute ID (&quot;someCount&quot;) (and possibly its schema), that the attribute's value is an integer. It then parses the string &quot;127&quot; appropriately.</source>
          <target state="translated">예를 들어 어설 션 &quot;someCount = 127&quot;의 경우 &lt;code&gt;attr&lt;/code&gt; 은 &quot;someCount&quot;이고 &lt;code&gt;value&lt;/code&gt; 은 &quot;127&quot;입니다. 공급자는 속성 ID ( &quot;someCount&quot;) (및 가능한 스키마)를 기반으로 속성 값이 정수인지 확인합니다. 그런 다음 문자열 &quot;127&quot;을 적절하게 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="bee936b5f5b2889b9390a8fc111ae587011b69cf" translate="yes" xml:space="preserve">
          <source>For the bound coordinates to be well formed, their types must be &lt;code&gt;T1, T2 ... Tn &lt;/code&gt;, where &lt;code&gt;T1, T2 ... Tn&lt;/code&gt; are the coordinate types starting at position &lt;code&gt;pos&lt;/code&gt; of the target var handle.</source>
          <target state="translated">바인딩 된 좌표가 제대로 형성 되려면 해당 유형이 &lt;code&gt;T1, T2 ... Tn &lt;/code&gt; 이어야합니다 . 여기서 &lt;code&gt;T1, T2 ... Tn&lt;/code&gt; 은 대상 var 핸들의 위치 &lt;code&gt;pos&lt;/code&gt; 에서 시작하는 좌표 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="14b2db76fc639b775a1752f6f4ab2e07b10c5889" translate="yes" xml:space="preserve">
          <source>For the boxing and unboxing filters to be well formed, their types must be of the form &lt;code&gt;(A... , S) -&amp;gt; T&lt;/code&gt; and &lt;code&gt;(A... , T) -&amp;gt; S&lt;/code&gt;, respectively, where &lt;code&gt;T&lt;/code&gt; is the type of the target var handle. If this is the case, the resulting var handle will have type &lt;code&gt;S&lt;/code&gt; and will feature the additional coordinates &lt;code&gt;A...&lt;/code&gt; (which will be appended to the coordinates of the target var handle).</source>
          <target state="translated">boxing 및 unboxing 필터가 제대로 형성 되려면 해당 유형이 각각 &lt;code&gt;(A... , S) -&amp;gt; T&lt;/code&gt; 및 &lt;code&gt;(A... , T) -&amp;gt; S&lt;/code&gt; 형식이어야합니다 . 여기서 &lt;code&gt;T&lt;/code&gt; 는 대상 var 핸들 이 경우 결과 var 핸들은 유형 &lt;code&gt;S&lt;/code&gt; 를 가지며 추가 좌표 &lt;code&gt;A...&lt;/code&gt; (대상 var 핸들의 좌표에 추가됨)를 특징으로합니다 .</target>
        </trans-unit>
        <trans-unit id="62cdf9a055c7ff004e4e70c28dab11d33378e893" translate="yes" xml:space="preserve">
          <source>For the column &lt;code&gt;UPDATE_RULE&lt;/code&gt;, indicates that a primary key may not be updated if it has been imported by another table as a foreign key.</source>
          <target state="translated">&lt;code&gt;UPDATE_RULE&lt;/code&gt; 열의 경우, 다른 테이블에서 외래 키로 가져온 경우 기본 키가 업데이트되지 않을 수 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2e35eed0cacf929c0a53c316cd4e08f72ef75dcf" translate="yes" xml:space="preserve">
          <source>For the column &lt;code&gt;UPDATE_RULE&lt;/code&gt;, indicates that a primary key may not be updated if it has been imported by another table as a foreign key. For the column &lt;code&gt;DELETE_RULE&lt;/code&gt;, indicates that a primary key may not be deleted if it has been imported by another table as a foreign key.</source>
          <target state="translated">&lt;code&gt;UPDATE_RULE&lt;/code&gt; 열의 경우, 다른 테이블에서 외래 키로 가져온 경우 기본 키가 업데이트되지 않을 수 있음을 나타냅니다. &lt;code&gt;DELETE_RULE&lt;/code&gt; 열의 경우 다른 테이블에서 외래 키로 가져온 경우 기본 키를 삭제할 수 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d724b744995e198fb7e69fc0f57d38e67e2ea58e" translate="yes" xml:space="preserve">
          <source>For the column &lt;code&gt;UPDATE_RULE&lt;/code&gt;, indicates that when the primary key is updated, the foreign key (imported key) is changed to agree with it.</source>
          <target state="translated">&lt;code&gt;UPDATE_RULE&lt;/code&gt; 열의 경우 기본 키가 업데이트 될 때 외래 키 (가져온 키)가 이에 동의하도록 변경됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d6ef279dd538e07a259a0e964b5d39e024933826" translate="yes" xml:space="preserve">
          <source>For the column &lt;code&gt;UPDATE_RULE&lt;/code&gt;, indicates that when the primary key is updated, the foreign key (imported key) is changed to agree with it. For the column &lt;code&gt;DELETE_RULE&lt;/code&gt;, it indicates that when the primary key is deleted, rows that imported that key are deleted.</source>
          <target state="translated">&lt;code&gt;UPDATE_RULE&lt;/code&gt; 열의 경우 기본 키가 업데이트 될 때 외래 키 (가져온 키)가 이에 동의하도록 변경됨을 나타냅니다. &lt;code&gt;DELETE_RULE&lt;/code&gt; 열의 경우 기본 키가 삭제되면 해당 키를 가져온 행이 삭제됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3ed7d546c07bf7bb43d070a3cd2adfaf92570184" translate="yes" xml:space="preserve">
          <source>For the columns &lt;code&gt;UPDATE_RULE&lt;/code&gt; and &lt;code&gt;DELETE_RULE&lt;/code&gt;, indicates that if the primary key has been imported, it cannot be updated or deleted.</source>
          <target state="translated">&lt;code&gt;UPDATE_RULE&lt;/code&gt; 및 &lt;code&gt;DELETE_RULE&lt;/code&gt; 열의 경우 기본 키를 가져온 경우 업데이트하거나 삭제할 수 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="652b817332b8bd073038d1acd7eb2577785a3489" translate="yes" xml:space="preserve">
          <source>For the columns &lt;code&gt;UPDATE_RULE&lt;/code&gt; and &lt;code&gt;DELETE_RULE&lt;/code&gt;, indicates that if the primary key is updated or deleted, the foreign key (imported key) is set to the default value.</source>
          <target state="translated">&lt;code&gt;UPDATE_RULE&lt;/code&gt; 및 &lt;code&gt;DELETE_RULE&lt;/code&gt; 열의 경우 기본 키가 업데이트되거나 삭제되면 외래 키 (가져온 키)가 기본값으로 설정됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b7fcdd681027f98f9b0a5865b40fc52b7bea0a33" translate="yes" xml:space="preserve">
          <source>For the columns &lt;code&gt;UPDATE_RULE&lt;/code&gt; and &lt;code&gt;DELETE_RULE&lt;/code&gt;, indicates that when the primary key is updated or deleted, the foreign key (imported key) is changed to &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;UPDATE_RULE&lt;/code&gt; 및 &lt;code&gt;DELETE_RULE&lt;/code&gt; 열의 경우 기본 키가 업데이트되거나 삭제 될 때 외래 키 (가져온 키)가 &lt;code&gt;NULL&lt;/code&gt; 로 변경됨을 나타 냅니다.</target>
        </trans-unit>
        <trans-unit id="0e81d4ac40547bcfb74b63ec729125f5e1c6b88a" translate="yes" xml:space="preserve">
          <source>For the constructors and static &lt;code&gt;exportObject&lt;/code&gt; methods, the stub for a remote object being exported is obtained as described in &lt;a href=&quot;../server/unicastremoteobject&quot;&gt;&lt;code&gt;UnicastRemoteObject&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">생성자 및 정적 &lt;code&gt;exportObject&lt;/code&gt; 메서드의 경우 &lt;a href=&quot;../server/unicastremoteobject&quot;&gt; &lt;code&gt;UnicastRemoteObject&lt;/code&gt; 에&lt;/a&gt; 설명 된대로 내보내고있는 원격 개체에 대한 스텁을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="8db9cd3eaad5c22591d41a15feec87cd973ac5e8" translate="yes" xml:space="preserve">
          <source>For the convenience of layout managers, calculates information about the size and position of components.</source>
          <target state="translated">레이아웃 관리자의 편의를 위해 구성 요소의 크기 및 위치에 대한 정보를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="3ab6053cfb18d310258a73ec8d4622a5c35199e6" translate="yes" xml:space="preserve">
          <source>For the convenience of layout managers, calculates information about the size and position of components. All size and position calculation methods are class methods that take arrays of SizeRequirements as arguments. The SizeRequirements class supports two types of layout:</source>
          <target state="translated">레이아웃 관리자의 편의를 위해 구성 요소의 크기 및 위치에 대한 정보를 계산합니다. 모든 크기 및 위치 계산 메서드는 SizeRequirements의 배열을 인수로 사용하는 클래스 메서드입니다. SizeRequirements 클래스는 두 가지 유형의 레이아웃을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="6e83ebacad213ea3f65edbf4cbfeab6eefb09772" translate="yes" xml:space="preserve">
          <source>For the coordinate filters to be well formed, their types must be of the form &lt;code&gt;S1 -&amp;gt; T1, S2 -&amp;gt; T1 ... Sn -&amp;gt; Tn&lt;/code&gt;, where &lt;code&gt;T1, T2 ... Tn&lt;/code&gt; are the coordinate types starting at position &lt;code&gt;pos&lt;/code&gt; of the target var handle.</source>
          <target state="translated">좌표 필터가 제대로 형성 되려면 해당 유형은 &lt;code&gt;S1 -&amp;gt; T1, S2 -&amp;gt; T1 ... Sn -&amp;gt; Tn&lt;/code&gt; 형식이어야합니다 . 여기서 &lt;code&gt;T1, T2 ... Tn&lt;/code&gt; 은 위치 &lt;code&gt;pos&lt;/code&gt; 에서 시작하는 좌표 유형 입니다. 대상 var 핸들</target>
        </trans-unit>
        <trans-unit id="fa93951bb48d44f6c5191751b6a1e590e5224950" translate="yes" xml:space="preserve">
          <source>For the default &lt;code&gt;LoggerFinder&lt;/code&gt; implementation using &lt;code&gt;java.util.logging&lt;/code&gt; as its backend, refer to &lt;a href=&quot;../../../java.logging/java/util/logging/package-summary&quot;&gt;&lt;code&gt;java.util.logging&lt;/code&gt;&lt;/a&gt; for logging configuration. For the default &lt;code&gt;LoggerFinder&lt;/code&gt; implementation returning simple loggers when the &lt;code&gt;java.logging&lt;/code&gt; module is absent, the configuration is implementation dependent.</source>
          <target state="translated">백엔드로 &lt;code&gt;java.util.logging&lt;/code&gt; 을 사용 하는 기본 &lt;code&gt;LoggerFinder&lt;/code&gt; 구현에 대해서는 로깅 구성에 대한 &lt;a href=&quot;../../../java.logging/java/util/logging/package-summary&quot;&gt; &lt;code&gt;java.util.logging&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 . &lt;code&gt;java.logging&lt;/code&gt; 모듈이 없을 때 간단한 로거를 반환 하는 기본 &lt;code&gt;LoggerFinder&lt;/code&gt; 구현의 경우 구성은 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="e323244daf1540708498ed48a430fbf93176610a" translate="yes" xml:space="preserve">
          <source>For the deprecated &lt;code&gt;deserialize&lt;/code&gt; methods, the required permissions are the same as for the methods that replace them.</source>
          <target state="translated">더 이상 사용되지 않는 &lt;code&gt;deserialize&lt;/code&gt; 메소드의 경우 필수 권한은 해당 메소드를 대체하는 메소드와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="a73e6ebc41f1d4baf8f59c549e375b1223b0077c" translate="yes" xml:space="preserve">
          <source>For the first selected row expandedness will be toggled.</source>
          <target state="translated">처음 선택한 행의 경우 확장 성이 토글됩니다.</target>
        </trans-unit>
        <trans-unit id="38687a8b8af780e9dffdd379f23c6d1d05a7d5ca" translate="yes" xml:space="preserve">
          <source>For the fixed-length type JDBC &lt;code&gt;CHAR&lt;/code&gt;, the &lt;code&gt;String&lt;/code&gt; object returned has exactly the same value the SQL &lt;code&gt;CHAR&lt;/code&gt; value had in the database, including any padding added by the database.</source>
          <target state="translated">고정 길이 유형 JDBC &lt;code&gt;CHAR&lt;/code&gt; 의 경우 반환 된 &lt;code&gt;String&lt;/code&gt; 객체 는 데이터베이스에서 추가 한 패딩을 포함하여 데이터베이스에있는 SQL &lt;code&gt;CHAR&lt;/code&gt; 값 과 정확히 동일한 값을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="bb59ec91472ba3cd68ed0417d37ca0bf997762d7" translate="yes" xml:space="preserve">
          <source>For the fixed-length type JDBC &lt;code&gt;NCHAR&lt;/code&gt;, the &lt;code&gt;String&lt;/code&gt; object returned has exactly the same value the SQL &lt;code&gt;NCHAR&lt;/code&gt; value had in the database, including any padding added by the database.</source>
          <target state="translated">고정 길이 유형 JDBC &lt;code&gt;NCHAR&lt;/code&gt; 의 경우 반환 된 &lt;code&gt;String&lt;/code&gt; 객체 는 데이터베이스에서 추가 한 패딩을 포함하여 데이터베이스에있는 SQL &lt;code&gt;NCHAR&lt;/code&gt; 값 과 정확히 동일한 값을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="e46aca6eab86f2b8c52afd99c9d142dfe56791c8" translate="yes" xml:space="preserve">
          <source>For the floating-point conversions &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'A'&lt;/code&gt;, &lt;code&gt;'e'&lt;/code&gt;, &lt;code&gt;'E'&lt;/code&gt;, and &lt;code&gt;'f'&lt;/code&gt; the precision is the number of digits after the radix point. If the conversion is &lt;code&gt;'g'&lt;/code&gt; or &lt;code&gt;'G'&lt;/code&gt;, then the precision is the total number of digits in the resulting magnitude after rounding.</source>
          <target state="translated">부동 소수점 변환 &lt;code&gt;'a'&lt;/code&gt; , &lt;code&gt;'A'&lt;/code&gt; , &lt;code&gt;'e'&lt;/code&gt; , &lt;code&gt;'E'&lt;/code&gt; 및 &lt;code&gt;'f'&lt;/code&gt; 의 정밀도는 기수 뒤의 자릿수입니다. 변환이 &lt;code&gt;'g'&lt;/code&gt; 또는 &lt;code&gt;'G'&lt;/code&gt; 이면 정밀도는 반올림 후 결과 크기의 총 자릿수입니다.</target>
        </trans-unit>
        <trans-unit id="2edef0880ff500c3be071a1041e2785dfd7f0756" translate="yes" xml:space="preserve">
          <source>For the general mechanism to load service providers, see &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt;, which is the underlying standard mechanism used by this class.</source>
          <target state="translated">서비스 제공자를로드하는 일반적인 메커니즘 은이 클래스에서 사용하는 기본 표준 메커니즘 인 &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="24e6785472989839f3d8e9a7b3e91c6d6d57cacd" translate="yes" xml:space="preserve">
          <source>For the getter methods, a JDBC driver attempts to convert the underlying data to the Java type specified in the getter method and returns a suitable Java value. The JDBC specification has a table showing the allowable mappings from SQL types to Java types that can be used by the &lt;code&gt;ResultSet&lt;/code&gt; getter methods.</source>
          <target state="translated">getter 메소드의 경우 JDBC 드라이버는 기본 데이터를 getter 메소드에 지정된 Java 유형으로 변환하려고 시도하고 적절한 Java 값을 리턴합니다. JDBC 스펙에는 SQL 유형에서 &lt;code&gt;ResultSet&lt;/code&gt; getter 메소드 에서 사용할 수있는 Java 유형으로의 허용 가능한 맵핑을 보여주는 테이블이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9c2caf26b9b9eb99484dcfe9c272d224c15db32d" translate="yes" xml:space="preserve">
          <source>For the header bytes CLA, INS, P1, and P2 the Java type &lt;code&gt;int&lt;/code&gt; is used to represent the 8 bit unsigned values. In the constructors, only the 8 lowest bits of the &lt;code&gt;int&lt;/code&gt; value specified by the application are significant. The accessor methods always return the byte as an unsigned value between 0 and 255.</source>
          <target state="translated">헤더 바이트 CLA, INS, P1 및 P2의 경우 Java 유형 &lt;code&gt;int&lt;/code&gt; 는 8 비트 부호없는 값을 나타내는 데 사용됩니다. 생성자에서는 응용 프로그램에서 지정한 &lt;code&gt;int&lt;/code&gt; 값 의 가장 낮은 8 비트 만 중요합니다. 접근 자 메서드는 항상 바이트를 0에서 255 사이의 부호없는 값으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="35be51934ab76e85073b98fe584645e3abdc336b" translate="yes" xml:space="preserve">
          <source>For the implementations of the methods described below, which all take a &lt;code&gt;String&lt;/code&gt; parameter named &lt;code&gt;codebase&lt;/code&gt; that is a space-separated list of URLs, each invocation has an associated</source>
          <target state="translated">아래 설명 된 메소드의 구현의 경우 모두 공백으로 구분 된 URL 목록 인 &lt;code&gt;codebase&lt;/code&gt; 라는 &lt;code&gt;String&lt;/code&gt; 매개 변수를 사용 하며 각 호출에는 연관된</target>
        </trans-unit>
        <trans-unit id="337b49be1ff6af10af540e0ace529d5ec996ff66" translate="yes" xml:space="preserve">
          <source>For the labels to be drawn on the slider, the returned &lt;code&gt;Hashtable&lt;/code&gt; must be passed into &lt;code&gt;setLabelTable&lt;/code&gt;, and &lt;code&gt;setPaintLabels&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">슬라이더에 레이블을 &lt;code&gt;setLabelTable&lt;/code&gt; 려면 반환 된 &lt;code&gt;Hashtable&lt;/code&gt; 을 setLabelTable에 전달 하고 &lt;code&gt;setPaintLabels&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="06aaf863b78d2db68b84de64f043b5884e2a38d6" translate="yes" xml:space="preserve">
          <source>For the mathematically inclined, the</source>
          <target state="translated">수학적으로 기울어 진</target>
        </trans-unit>
        <trans-unit id="4bf557c4e1091ca7cd2e9c48b51e297e05ef3bbb" translate="yes" xml:space="preserve">
          <source>For the method to be valid it must return a &lt;code&gt;SettingControl&lt;/code&gt; and only have one parameter, which should be a non-abstract subclass of &lt;a href=&quot;settingcontrol&quot;&gt;&lt;code&gt;SettingControl&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">메서드가 유효하려면 &lt;code&gt;SettingControl&lt;/code&gt; 을 반환하고 하나의 매개 변수 만 있어야합니다.이 매개 변수는 &lt;a href=&quot;settingcontrol&quot;&gt; &lt;code&gt;SettingControl&lt;/code&gt; &lt;/a&gt; 의 비추 상 하위 클래스 여야합니다.</target>
        </trans-unit>
        <trans-unit id="cd365d472dc61c689cd01391bb26b289a209fa1a" translate="yes" xml:space="preserve">
          <source>For the methods that do not take an explicit source name and method name, the Logging framework will make a &quot;best effort&quot; to determine which class and method called into the logging method. However, it is important to realize that this automatically inferred information may only be approximate (or may even be quite wrong!). Virtual machines are allowed to do extensive optimizations when JITing and may entirely remove stack frames, making it impossible to reliably locate the calling class and method.</source>
          <target state="translated">명시 적 소스 이름 및 메소드 이름을 사용하지 않는 메소드의 경우, 로깅 프레임 워크는 로깅 메소드로 호출 된 클래스 및 메소드를 판별하기 위해 &quot;최선의 노력&quot;을합니다. 그러나이 자동으로 유추 된 정보는 대략적인 것일 수 있습니다 (또는 상당히 잘못된 것일 수도 있음). 가상 머신은 JITing시 광범위한 최적화를 수행 할 수 있으며 스택 프레임을 완전히 제거하여 호출 클래스 및 메소드를 안정적으로 찾을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="918c0b7e8f769b516391a049b47963d833e03898" translate="yes" xml:space="preserve">
          <source>For the next level up, the writer checks to see if there are any conflicts, and if there are, it does not write anything to the data source. The problem with this concurrency level is that if another party has modified the corresponding data in the data source since the &lt;code&gt;RowSet&lt;/code&gt; object got its data, the changes made to the &lt;code&gt;RowSet&lt;/code&gt; object are lost. The &lt;code&gt;RIOptimisticProvider&lt;/code&gt; implementation uses this level of synchronization.</source>
          <target state="translated">다음 레벨 업을 위해 작성기는 충돌이 있는지 확인하고 충돌이있는 경우 데이터 소스에 아무것도 쓰지 않습니다. 이 동기 레벨에는 뒤 다른 사용자가 데이터 소스에서 해당 데이터를 수정 한 경우이다 &lt;code&gt;RowSet&lt;/code&gt; 객체가 데이터를 취득한의에 대한 변경 &lt;code&gt;RowSet&lt;/code&gt; 객체가 손실됩니다. &lt;code&gt;RIOptimisticProvider&lt;/code&gt; 구현은이 동기 레벨을 사용한다.</target>
        </trans-unit>
        <trans-unit id="c5e212e3a9074256ce77a7e927e229b849e01470" translate="yes" xml:space="preserve">
          <source>For the purpose of loading, a service is represented by a single type, that is, a single interface or abstract class. (A concrete class can be used, but this is not recommended.) A provider of a given service contains one or more concrete classes that extend this</source>
          <target state="translated">로드를 위해 서비스는 단일 유형, 즉 단일 인터페이스 또는 추상 클래스로 표시됩니다. (구체적인 클래스를 사용할 수 있지만 권장하지는 않습니다.) 지정된 서비스 제공 업체는이를 확장하는 하나 이상의 콘크리트 클래스를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="1288ddcc9c4db5a49c8d29b85bd92bc7b437561a" translate="yes" xml:space="preserve">
          <source>For the returned &lt;code&gt;SynthLookAndFeel&lt;/code&gt; to be useful you need to invoke &lt;code&gt;load&lt;/code&gt; to specify the set of &lt;code&gt;SynthStyle&lt;/code&gt;s, or invoke &lt;code&gt;setStyleFactory&lt;/code&gt;.</source>
          <target state="translated">반환 된 &lt;code&gt;SynthLookAndFeel&lt;/code&gt; 을 유용하게 사용하려면 &lt;code&gt;load&lt;/code&gt; 를 호출 하여 &lt;code&gt;SynthStyle&lt;/code&gt; 집합을 지정 하거나 &lt;code&gt;setStyleFactory&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="420e1533712c545c003744acf9162a0f799d5639" translate="yes" xml:space="preserve">
          <source>For the reverse process, when an object is bound into the namespace, JNDI provides &lt;em&gt;state factories&lt;/em&gt;. Continuing with the printer example, suppose the printer object is updated and rebound:</source>
          <target state="translated">역 프로세스의 경우, 오브젝트가 네임 스페이스에 바인드 될 때 JNDI는 &lt;em&gt;상태 팩토리를&lt;/em&gt; 제공합니다 . 프린터 예제를 계속하여 프린터 개체가 업데이트되고 리바운드되었다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="dd2ddad0a154f707a981a1a5aae2c41c34d69c2c" translate="yes" xml:space="preserve">
          <source>For the sake of brevity and clarity, pseudo-code is used throughout the descriptions of &lt;code&gt;BigDecimal&lt;/code&gt; methods. The pseudo-code expression &lt;code&gt;(i + j)&lt;/code&gt; is shorthand for &quot;a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is that of the &lt;code&gt;BigDecimal&lt;/code&gt;&lt;code&gt;i&lt;/code&gt; added to that of the &lt;code&gt;BigDecimal&lt;/code&gt;&lt;code&gt;j&lt;/code&gt;.&quot; The pseudo-code expression &lt;code&gt;(i == j)&lt;/code&gt; is shorthand for &quot;&lt;code&gt;true&lt;/code&gt; if and only if the &lt;code&gt;BigDecimal&lt;/code&gt;&lt;code&gt;i&lt;/code&gt; represents the same value as the &lt;code&gt;BigDecimal&lt;/code&gt;&lt;code&gt;j&lt;/code&gt;.&quot; Other pseudo-code expressions are interpreted similarly. Square brackets are used to represent the particular &lt;code&gt;BigInteger&lt;/code&gt; and scale pair defining a &lt;code&gt;BigDecimal&lt;/code&gt; value; for example [19, 2] is the &lt;code&gt;BigDecimal&lt;/code&gt; numerically equal to 0.19 having a scale of 2.</source>
          <target state="translated">간결하고 명료하게하기 위해 의사 코드는 &lt;code&gt;BigDecimal&lt;/code&gt; 메소드 설명에서 사용됩니다 . 의사 코드 식 &lt;code&gt;(i + j)&lt;/code&gt; 속기이다 &quot;는 &lt;code&gt;BigDecimal&lt;/code&gt; 의 값의 인 &lt;code&gt;BigDecimal&lt;/code&gt; 의 &lt;code&gt;i&lt;/code&gt; 의 그 첨가 &lt;code&gt;BigDecimal&lt;/code&gt; &lt;code&gt;j&lt;/code&gt; .&quot; 의사 코드 표현식 &lt;code&gt;(i == j)&lt;/code&gt; 은 &quot; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;code&gt;i&lt;/code&gt; 가 &lt;code&gt;BigDecimal&lt;/code&gt; &lt;code&gt;j&lt;/code&gt; 와 동일한 값을 나타내는 경우에만 &lt;code&gt;true&lt;/code&gt; &quot;의 약어입니다 . 다른 의사 코드 표현식도 비슷하게 해석됩니다. 대괄호는 특정 &lt;code&gt;BigInteger&lt;/code&gt; 을 나타내는 데 사용됩니다. 및 스케일 쌍 . &lt;code&gt;BigDecimal&lt;/code&gt; 값; 예를 들어 [19, 2]는 숫자가 0.19 인 &lt;code&gt;BigDecimal&lt;/code&gt; 은 2의 스케일을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="a3e36c82a3b0dbeb638b77cfd214bb7c619f87cb" translate="yes" xml:space="preserve">
          <source>For the sake of brevity and clarity, pseudo-code is used throughout the descriptions of BigInteger methods. The pseudo-code expression &lt;code&gt;(i + j)&lt;/code&gt; is shorthand for &quot;a BigInteger whose value is that of the BigInteger &lt;code&gt;i&lt;/code&gt; plus that of the BigInteger &lt;code&gt;j&lt;/code&gt;.&quot; The pseudo-code expression &lt;code&gt;(i == j)&lt;/code&gt; is shorthand for &quot;&lt;code&gt;true&lt;/code&gt; if and only if the BigInteger &lt;code&gt;i&lt;/code&gt; represents the same value as the BigInteger &lt;code&gt;j&lt;/code&gt;.&quot; Other pseudo-code expressions are interpreted similarly.</source>
          <target state="translated">간결하고 명료하게하기 위해 의사 코드는 BigInteger 메소드 설명에서 사용됩니다. 의사 코드 표현식 &lt;code&gt;(i + j)&lt;/code&gt; 은 &quot;BigInteger &lt;code&gt;i&lt;/code&gt; 의 값 에 BigInteger &lt;code&gt;j&lt;/code&gt; 의 값을 더한 BigInteger&quot;의 약어입니다 . 의사 코드 표현식 &lt;code&gt;(i == j)&lt;/code&gt; 은 &quot; BigInteger &lt;code&gt;i&lt;/code&gt; 가 BigInteger &lt;code&gt;j&lt;/code&gt; 와 동일한 값을 나타내는 경우에만 &lt;code&gt;true&lt;/code&gt; &quot;의 약어입니다 . 다른 의사 코드 표현식도 비슷하게 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="1ef274c4392b2a272a81c02a6bbbe1acf4470fbd" translate="yes" xml:space="preserve">
          <source>For the sake of speed, this method does no checking for name conflicts or well-formedness: such checks are the responsibility of the application.</source>
          <target state="translated">속도를 위해이 방법은 이름 충돌이나 형식이 올바른지 확인하지 않습니다. 이러한 확인은 응용 프로그램의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="5f5c1893f57fef781a72da0605607bfefe31f220" translate="yes" xml:space="preserve">
          <source>For the sake of speed, this method does no checking to see if the attribute is already in the list: that is the responsibility of the application.</source>
          <target state="translated">속도를 높이기 위해이 메소드는 속성이 이미 목록에 있는지 확인하지 않습니다. 이는 애플리케이션의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="6421651edc95497cb158a89700f5d65270e20e34" translate="yes" xml:space="preserve">
          <source>For the segment from 1972-11-03 (exact boundary discussed below) until further notice, the consensus international time scale is UTC (with leap seconds). In this segment, the Java Time-Scale is identical to &lt;a href=&quot;http://www.cl.cam.ac.uk/~mgk25/time/utc-sls/&quot;&gt;UTC-SLS&lt;/a&gt;. This is identical to UTC on days that do not have a leap second. On days that do have a leap second, the leap second is spread equally over the last 1000 seconds of the day, maintaining the appearance of exactly 86400 seconds per day.</source>
          <target state="translated">1972-11-03 (아래에 논의 된 정확한 경계)에서 추후 공지가있을 때까지의 합의 국제 시간 척도는 UTC (윤초 포함)입니다. 이 세그먼트에서 Java Time-Scale은 &lt;a href=&quot;http://www.cl.cam.ac.uk/~mgk25/time/utc-sls/&quot;&gt;UTC-SLS와&lt;/a&gt; 동일합니다 . 이것은 윤초가없는 날의 UTC와 동일합니다. 윤초가있는 날에는 윤초가 하루의 마지막 1000 초에 동일하게 분산되어 하루에 정확히 86400 초의 모양을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="93c5667c98fb4c1cbb9fa0c8ce2360fb9ed70491" translate="yes" xml:space="preserve">
          <source>For the segment from 1972-11-03 (exact boundary discussed below) until further notice, the consensus international time scale is UTC (with leap seconds). In this segment, the Java Time-Scale is identical to &lt;a href=&quot;https://www.cl.cam.ac.uk/~mgk25/time/utc-sls/&quot;&gt;UTC-SLS&lt;/a&gt;. This is identical to UTC on days that do not have a leap second. On days that do have a leap second, the leap second is spread equally over the last 1000 seconds of the day, maintaining the appearance of exactly 86400 seconds per day.</source>
          <target state="translated">추후 공지가있을 때까지 1972-11-03 (아래에 설명 된 정확한 경계) 세그먼트의 경우 합의 국제 시간 척도는 UTC (윤초 포함)입니다. 이 세그먼트에서 Java Time-Scale은 &lt;a href=&quot;https://www.cl.cam.ac.uk/~mgk25/time/utc-sls/&quot;&gt;UTC-SLS와&lt;/a&gt; 동일합니다 . 윤초가없는 날의 UTC와 동일합니다. 윤초가있는 날에는 윤초가 하루의 마지막 1000 초 동안 균등하게 분산되어 하루에 정확히 86400 초의 모양을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="1219d8605bba4589bebfd58c531fef13fd1ec85d" translate="yes" xml:space="preserve">
          <source>For the segment prior to 1972-11-03, extending back arbitrarily far, the consensus international time scale is defined to be UT1, applied proleptically, which is equivalent to the (mean) solar time on the prime meridian (Greenwich). In this segment, the Java Time-Scale is identical to the consensus international time scale. The exact boundary between the two segments is the instant where UT1 = UTC between 1972-11-03T00:00 and 1972-11-04T12:00.</source>
          <target state="translated">1972-11-03 이전의 세그먼트의 경우, 임의의 시간으로 다시 합의 된 국제 합의 시간 척도는 UT1으로 정의되며, 이는 전적으로 자오선 (그리니치)의 (평균) 태양 시간과 같습니다. 이 세그먼트에서 Java Time-Scale은 컨센서스 국제 시간 스케일과 동일합니다. 두 세그먼트 사이의 정확한 경계는 1972-11-03T00 : 00과 1972-11-04T12 : 00 사이의 UT1 = UTC입니다.</target>
        </trans-unit>
        <trans-unit id="62147cec184303427ef9bddf6cf83bee6e3ce949" translate="yes" xml:space="preserve">
          <source>For the server, this is the client's host; and for the client, it is the server's host. The name may not be a fully qualified host name or even a host name at all as it may represent a string encoding of the peer's network address. If such a name is desired, it might be resolved through a name service based on the value returned by this method.</source>
          <target state="translated">서버의 경우 이것은 클라이언트의 호스트입니다. 클라이언트의 경우 서버의 호스트입니다. 피어의 네트워크 주소의 문자열 인코딩을 나타낼 수 있으므로 완전한 호스트 이름이나 호스트 이름이 아닐 수도 있습니다. 그러한 이름이 필요한 경우,이 메소드가 리턴 한 값을 기반으로 이름 서비스를 통해 분석 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf7ed42141cfec99708063e665d4db5f25de170e" translate="yes" xml:space="preserve">
          <source>For the server, this is the client's port number; and for the client, it is the server's port number.</source>
          <target state="translated">서버의 경우 이는 클라이언트의 포트 번호입니다. 클라이언트의 경우 서버의 포트 번호입니다.</target>
        </trans-unit>
        <trans-unit id="0e9197788cd85e2a5147c42cfaf919f20524e0e7" translate="yes" xml:space="preserve">
          <source>For the static methods in this class that embody the arithmetic operators, we do not actually perform the operation in question as that would snapshot the values of the properties of the method's arguments at the time the static method is called. Instead, the static methods create a new &lt;code&gt;Spring&lt;/code&gt; instance containing references to the method's arguments so that the characteristics of the new spring track the potentially changing characteristics of the springs from which it was made. This is a little like the idea of a &lt;em&gt;lazy value&lt;/em&gt; in a functional language.</source>
          <target state="translated">산술 연산자를 구현하는이 클래스의 정적 메서드의 경우 정적 메서드가 호출 될 때 메서드 인수의 속성 값을 스냅 샷으로 표시하므로 실제로 해당 작업을 수행하지 않습니다. 대신, 정적 메서드 는 메서드의 인수에 대한 참조를 포함 하는 새 &lt;code&gt;Spring&lt;/code&gt; 인스턴스를 생성하여 새 스프링 의 특성이 그것이 만들어진 스프링의 잠재적으로 변경되는 특성을 추적하도록합니다. 이것은 기능적 언어에서 &lt;em&gt;게으른 값&lt;/em&gt; 이라는 아이디어와 약간 비슷합니다 .</target>
        </trans-unit>
        <trans-unit id="270fcfa4c23fefd34f6067dfc14da88db6edf11e" translate="yes" xml:space="preserve">
          <source>For this case to work, the JNDI API must have been configured appropriately to supply the information about what directory to use.</source>
          <target state="translated">이 경우 작동하려면 사용할 디렉토리에 대한 정보를 제공하도록 JNDI API가 적절하게 구성되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="b682781178515ee0e34c97bf7e010a636e03f5b2" translate="yes" xml:space="preserve">
          <source>For this to work correctly, the document must have an &lt;code&gt;HTMLEditorKit.Parser&lt;/code&gt; set. This will be the case if the document was created from an HTMLEditorKit via the &lt;code&gt;createDefaultDocument&lt;/code&gt; method.</source>
          <target state="translated">이것이 올바르게 작동하려면 문서에 &lt;code&gt;HTMLEditorKit.Parser&lt;/code&gt; 세트 가 있어야합니다 . 이는 문서가 &lt;code&gt;createDefaultDocument&lt;/code&gt; 메서드 를 통해 HTMLEditorKit에서 생성 된 경우 입니다.</target>
        </trans-unit>
        <trans-unit id="86afe932c6f36f674d651c4b0a0385d6e02afc2f" translate="yes" xml:space="preserve">
          <source>For this to work correctly, the document must have an HTMLEditorKit.Parser set. This will be the case if the document was created from an HTMLEditorKit via the &lt;code&gt;createDefaultDocument&lt;/code&gt; method.</source>
          <target state="translated">이것이 올바르게 작동하려면 문서에 HTMLEditorKit.Parser 세트가 있어야합니다. 이는 문서가 &lt;code&gt;createDefaultDocument&lt;/code&gt; 메서드 를 통해 HTMLEditorKit에서 생성 된 경우 입니다.</target>
        </trans-unit>
        <trans-unit id="31c03e704c64da6039aa6cc23e4bc0d4e38cac66" translate="yes" xml:space="preserve">
          <source>For those components that automatically display a drop location during drag and drop, accepting the transfer, by default, tells them to show the drop location. This can be changed by calling &lt;code&gt;setShowDropLocation&lt;/code&gt; on the &lt;code&gt;TransferSupport&lt;/code&gt;.</source>
          <target state="translated">끌어서 놓기 중에 자동으로 놓기 위치를 표시하는 구성 요소의 경우 전송을 수락하면 기본적으로 놓기 위치를 표시하도록 지시합니다. &lt;code&gt;TransferSupport&lt;/code&gt; 에서 &lt;code&gt;setShowDropLocation&lt;/code&gt; 을 호출하여 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2786feaac3ba78dc455492c27da01f02b62e3263" translate="yes" xml:space="preserve">
          <source>For those methods that use a primitive array pixel representation of type &lt;code&gt;transferType&lt;/code&gt;, the array length is always one. The transfer types supported are &lt;code&gt;DataBuffer.TYPE_BYTE&lt;/code&gt; and &lt;code&gt;DataBuffer.TYPE_USHORT&lt;/code&gt;. A single int pixel representation is valid for all objects of this class, since it is always possible to represent pixel values used with this class in a single int. Therefore, methods that use this representation do not throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; due to an invalid pixel value.</source>
          <target state="translated">&lt;code&gt;transferType&lt;/code&gt; 유형의 기본 배열 픽셀 표현을 사용하는 메소드의 경우 배열 길이는 항상 1입니다. 지원되는 전송 유형은 &lt;code&gt;DataBuffer.TYPE_BYTE&lt;/code&gt; 및 &lt;code&gt;DataBuffer.TYPE_USHORT&lt;/code&gt; 입니다. 단일 int 픽셀 표현은이 클래스의 모든 객체에 대해 유효합니다.이 클래스와 함께 사용되는 픽셀 값을 단일 int로 표현할 수 있기 때문입니다. 따라서이 표현을 사용하는 메서드 는 잘못된 픽셀 값으로 인해 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 을 throw하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="99cf5ba3304c383a2df51118708e0986bac1d0ac" translate="yes" xml:space="preserve">
          <source>For those methods that use a primitive array pixel representation of type &lt;code&gt;transferType&lt;/code&gt;, the array length is the same as the number of color and alpha samples. Color samples are stored first in the array followed by the alpha sample, if present. The order of the color samples is specified by the &lt;code&gt;ColorSpace&lt;/code&gt;. Typically, this order reflects the name of the color space type. For example, for &lt;code&gt;TYPE_RGB&lt;/code&gt;, index 0 corresponds to red, index 1 to green, and index 2 to blue.</source>
          <target state="translated">&lt;code&gt;transferType&lt;/code&gt; 유형의 기본 배열 픽셀 표현을 사용하는 메소드의 경우 배열 길이는 색상 및 알파 샘플의 수와 동일합니다. 색상 샘플은 배열에 먼저 저장되고 그 뒤에 알파 샘플 (있는 경우)이 저장됩니다. 색상 샘플의 순서는 &lt;code&gt;ColorSpace&lt;/code&gt; 에 의해 지정됩니다 . 일반적으로이 순서는 색상 공간 유형의 이름을 반영합니다. 예를 들어 &lt;code&gt;TYPE_RGB&lt;/code&gt; 의 경우 인덱스 0은 빨간색, 인덱스 1은 녹색, 인덱스 2는 파란색에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="56e76dca6435248ee5f5c1c729db49347e93fef4" translate="yes" xml:space="preserve">
          <source>For top efficiency, consider wrapping an InputStreamReader within a BufferedReader. For example:</source>
          <target state="translated">효율성을 높이려면 BufferedReader 내에 InputStreamReader를 래핑하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0654848a089140d2007dcfe1b9715ed583001722" translate="yes" xml:space="preserve">
          <source>For top efficiency, consider wrapping an OutputStreamWriter within a BufferedWriter so as to avoid frequent converter invocations. For example:</source>
          <target state="translated">효율성을 높이려면 잦은 변환기 호출을 피하기 위해 BufferedWriter 내에 OutputStreamWriter를 래핑하는 것이 좋습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2788ca71aa05651818266f4a2d3abb2660aaaca4" translate="yes" xml:space="preserve">
          <source>For transformation errors, a &lt;code&gt;Transformer&lt;/code&gt; must use this interface instead of throwing an &lt;code&gt;Exception&lt;/code&gt;: it is up to the application to decide whether to throw an &lt;code&gt;Exception&lt;/code&gt; for different types of errors and warnings. Note however that the &lt;code&gt;Transformer&lt;/code&gt; is not required to continue with the transformation after a call to &lt;a href=&quot;#fatalError(javax.xml.transform.TransformerException)&quot;&gt;&lt;code&gt;fatalError(TransformerException exception)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">변환 오류의 경우 &lt;code&gt;Transformer&lt;/code&gt; 는 &lt;code&gt;Exception&lt;/code&gt; 를 발생시키는 대신이 인터페이스를 사용해야합니다 . 다양한 유형의 오류 및 경고에 대해 &lt;code&gt;Exception&lt;/code&gt; 를 발생 시킬지 여부를 결정하는 것은 애플리케이션에 달려 있습니다. 그러나 &lt;code&gt;Transformer&lt;/code&gt; 는 &lt;a href=&quot;#fatalError(javax.xml.transform.TransformerException)&quot;&gt; &lt;code&gt;fatalError(TransformerException exception)&lt;/code&gt; &lt;/a&gt; 호출 후 변환을 계속할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="7c081b54696fcba2289120fbf328c3f2ca017882" translate="yes" xml:space="preserve">
          <source>For two &lt;code&gt;DocumentType&lt;/code&gt; nodes to be equal, the following conditions must also be satisfied:</source>
          <target state="translated">두 &lt;code&gt;DocumentType&lt;/code&gt; 노드가 동일하려면 다음 조건도 충족되어야합니다.</target>
        </trans-unit>
        <trans-unit id="b464d383cd3cfa532b3f2034d87a15caddd8db94" translate="yes" xml:space="preserve">
          <source>For two ACL entries to be considered equals requires that they are both the same type, their who components are equal, their permissions components are equal, and their flags components are equal.</source>
          <target state="translated">두 개의 ACL 항목이 동일하다고 간주 되려면 두 항목이 모두 동일한 유형이고, 누가 구성 요소가 동일하고, 권한 구성 요소가 동일하며, 플래그 구성 요소가 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="a33b6dc4fc08ac58790e30247b0b5e0d86acb3d4" translate="yes" xml:space="preserve">
          <source>For two URIs to be considered equal requires that either both are opaque or both are hierarchical. Their schemes must either both be undefined or else be equal without regard to case. Their fragments must either both be undefined or else be equal.</source>
          <target state="translated">두 URI를 동일하게 간주하려면 둘 다 불투명하거나 둘 다 계층 적이어야합니다. 그들의 체계는 정의되지 않았거나 대소 문자와 상관없이 동일해야합니다. 그들의 조각은 정의되지 않았거나 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="9fda39dc260b35491a35fb6ef8135edfdb1fed3f" translate="yes" xml:space="preserve">
          <source>For two hierarchical URIs to be considered equal, their paths must be equal and their queries must either both be undefined or else be equal. Their authorities must either both be undefined, or both be registry-based, or both be server-based. If their authorities are defined and are registry-based, then they must be equal. If their authorities are defined and are server-based, then their hosts must be equal without regard to case, their port numbers must be equal, and their user-information components must be equal.</source>
          <target state="translated">두 개의 계층 적 URI가 동일한 것으로 간주 되려면 경로가 같아야하고 쿼리가 정의되지 않았거나 같지 않아야합니다. 해당 권한은 정의되지 않았거나 레지스트리 기반이거나 서버 기반이어야합니다. 해당 권한이 정의되고 레지스트리 기반 인 경우 동일해야합니다. 그들의 권한이 정의되고 서버 기반 인 경우, 호스트는 대소 문자와 상관없이 동일해야하며 포트 번호는 동일해야하며 사용자 정보 구성 요소는 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="81a9827d6416dd4007c6cdbdb1c378d41a9bc98a" translate="yes" xml:space="preserve">
          <source>For two opaque URIs to be considered equal, their scheme-specific parts must be equal.</source>
          <target state="translated">두 개의 불투명 한 URI가 동일한 것으로 간주 되려면 구성표 특정 부분이 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="1773f4b25e986b1b1e47cbc4ac4abf1a37e430f8" translate="yes" xml:space="preserve">
          <source>For type-safety and to represent all attributes uniformly, the Java Print Service API defines each attribute category as a class, such as class &lt;code&gt;Copies&lt;/code&gt;, class &lt;a href=&quot;standard/sides&quot;&gt;Sides&lt;/a&gt;, and class &lt;a href=&quot;standard/printerresolution&quot;&gt;PrinterResolution&lt;/a&gt;. Each attribute class wraps one or more primitive data items containing the attribute's value. Attribute set operations perform frequent comparisons between attribute category objects when adding attributes, finding existing attributes in the same category, and looking up an attribute given its category. Because an attribute category is represented by a class, fast attribute-value comparisons can be performed with the &lt;code&gt;Class.equals&lt;/code&gt; method.</source>
          <target state="translated">유형 안전 및 모든 속성을 균일하게 표현하기 위해 Java Print Service API는 각 속성 카테고리를 클래스 &lt;code&gt;Copies&lt;/code&gt; , class &lt;a href=&quot;standard/sides&quot;&gt;Sides&lt;/a&gt; 및 &lt;a href=&quot;standard/printerresolution&quot;&gt;PrinterResolution&lt;/a&gt; 클래스 와 같은 클래스로 정의합니다 . 각 속성 클래스는 속성 값을 포함하는 하나 이상의 기본 데이터 항목을 래핑합니다. 속성 세트 작업은 속성을 추가하고 동일한 범주에서 기존 속성을 찾고 해당 범주에서 지정된 속성을 찾을 때 속성 범주 개체를 자주 비교합니다. 속성 범주는 클래스로 표시되므로 &lt;code&gt;Class.equals&lt;/code&gt; 메소드를 사용하여 빠른 속성 값 비교를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c8151a77e532da63512e95e962382939ed80a1a3" translate="yes" xml:space="preserve">
          <source>For unnamed modules, this method is the equivalent to invoking the &lt;a href=&quot;classloader#getDefinedPackages()&quot;&gt;&lt;code&gt;getDefinedPackages&lt;/code&gt;&lt;/a&gt; method of this module's class loader and returning the set of package names.</source>
          <target state="translated">이름이 지정되지 않은 모듈의 경우이 메소드는 이 모듈의 클래스 로더의 &lt;a href=&quot;classloader#getDefinedPackages()&quot;&gt; &lt;code&gt;getDefinedPackages&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하고 패키지 이름 세트를 리턴하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="7551f08b32c51469006c7e84becb9b47d73a193b" translate="yes" xml:space="preserve">
          <source>For unparsed entities, the name of the notation for the entity.</source>
          <target state="translated">파싱되지 않은 항목의 경우 항목에 대한 표기법의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="7f0cd9f0f4cc8493c530713ad6f5e4863c851932" translate="yes" xml:space="preserve">
          <source>For unparsed entities, the name of the notation for the entity. For parsed entities, this is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">파싱되지 않은 항목의 경우 항목에 대한 표기법의 이름입니다. 파싱 ​​된 항목의 경우 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7eaf32e1bfec30e70663490c30bbb45f99fe9fb3" translate="yes" xml:space="preserve">
          <source>For validating parsers, the checks are made on the original document, before any modification by the filter. No validity checks are made on any document modifications made by the filter.</source>
          <target state="translated">구문 분석기의 유효성을 검사하기 위해 필터에 의해 수정되기 전에 원본 문서에 대한 검사가 수행됩니다. 필터에 의해 수정 된 문서에 대해서는 유효성 검사가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d5c1648f641165c8a91e6ceb25b78ba9c26bdae2" translate="yes" xml:space="preserve">
          <source>For values other than &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt; NaN and &amp;plusmn;Infinity, this constructor is compatible with the values returned by &lt;a href=&quot;../lang/float#toString(float)&quot;&gt;&lt;code&gt;Float.toString(float)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../lang/double#toString(double)&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt;. This is generally the preferred way to convert a &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt; into a BigDecimal, as it doesn't suffer from the unpredictability of the &lt;a href=&quot;#%3Cinit%3E(double)&quot;&gt;&lt;code&gt;BigDecimal(double)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 및 &lt;code&gt;double&lt;/code&gt; NaN 및 &amp;plusmn; Infinity 이외의 값의 경우이 생성자는 &lt;a href=&quot;../lang/float#toString(float)&quot;&gt; &lt;code&gt;Float.toString(float)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../lang/double#toString(double)&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt; 반환 된 값과 호환됩니다 . 이것은 일반적으로 &lt;code&gt;float&lt;/code&gt; 또는 &lt;code&gt;double&lt;/code&gt; 을 BigDecimal로 변환하는 데 선호되는 방법 입니다.&lt;a href=&quot;#%3Cinit%3E(double)&quot;&gt; &lt;code&gt;BigDecimal(double)&lt;/code&gt; &lt;/a&gt; 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="769dd5ea1ba79523c383adcf407ff9b0c4811341" translate="yes" xml:space="preserve">
          <source>For vertical scrolling, the following rules are used:</source>
          <target state="translated">수직 스크롤의 경우 다음 규칙이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8961949ac0861281f381f9244791d180b3d7373a" translate="yes" xml:space="preserve">
          <source>ForLoopTree</source>
          <target state="translated">ForLoopTree</target>
        </trans-unit>
        <trans-unit id="b03f826ea2ede997abbd73c87f99f4f7f6c05e54" translate="yes" xml:space="preserve">
          <source>Force a line break.</source>
          <target state="translated">줄 바꿈을 강제합니다.</target>
        </trans-unit>
        <trans-unit id="d6aa6cfdb6fd89911c92131158050aad0c7134cf" translate="yes" xml:space="preserve">
          <source>Force a line break. See the BR element definition in HTML 4.0.</source>
          <target state="translated">줄 바꿈을 강제합니다. HTML 4.0의 BR 요소 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c468aeea91404a1c8265133c126661b29c8366b4" translate="yes" xml:space="preserve">
          <source>Force a method to return before it reaches a return statement.</source>
          <target state="translated">return 문에 도달하기 전에 메서드를 강제로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="518f2d66d8adadf9f6d027b476ccdc25ad385da7" translate="yes" xml:space="preserve">
          <source>Force all system buffers to synchronize with the underlying device.</source>
          <target state="translated">모든 시스템 버퍼가 기본 장치와 동기화되도록합니다.</target>
        </trans-unit>
        <trans-unit id="54f4d8d19a42658228ac7ae908ce569b6f16fb5b" translate="yes" xml:space="preserve">
          <source>Force all system buffers to synchronize with the underlying device. This method returns after all modified data and attributes of this FileDescriptor have been written to the relevant device(s). In particular, if this FileDescriptor refers to a physical storage medium, such as a file in a file system, sync will not return until all in-memory modified copies of buffers associated with this FileDescriptor have been written to the physical medium. sync is meant to be used by code that requires physical storage (such as a file) to be in a known state For example, a class that provided a simple transaction facility might use sync to ensure that all changes to a file caused by a given transaction were recorded on a storage medium. sync only affects buffers downstream of this FileDescriptor. If any in-memory buffering is being done by the application (for example, by a BufferedOutputStream object), those buffers must be flushed into the FileDescriptor (for example, by invoking OutputStream.flush) before that data will be affected by sync.</source>
          <target state="translated">모든 시스템 버퍼가 기본 장치와 동기화되도록합니다. 이 메소드는이 FileDescriptor의 모든 수정 된 데이터 및 속성이 관련 장치에 기록 된 후 리턴됩니다. 특히,이 FileDescriptor가 파일 시스템의 파일과 같은 실제 저장 매체를 참조하는 경우이 FileDescriptor와 연관된 메모리에서 수정 된 버퍼의 모든 사본이 실제 매체에 기록 될 때까지 동기화가 리턴되지 않습니다. sync는 실제 스토리지 (예 : 파일)가 알려진 상태에 있어야하는 코드에 의해 사용됩니다. 예를 들어, 간단한 트랜잭션 기능을 제공 한 클래스는 sync를 사용하여 주어진 거래는 저장 매체에 기록되었다. sync는이 FileDescriptor의 다운 스트림 버퍼에만 영향을줍니다.응용 프로그램 (예 : BufferedOutputStream 객체)이 메모리 내 버퍼링을 수행하는 경우 해당 버퍼는 FileDescriptor로 플러시되어야 (예 : OutputStream.flush 호출) 해당 데이터가 동기화의 영향을받습니다.</target>
        </trans-unit>
        <trans-unit id="db658f27e687d892a5022ac035400f638bcb31a7" translate="yes" xml:space="preserve">
          <source>Force the original target method handle &lt;code&gt;MH0&lt;/code&gt; to the required type, as &lt;code&gt;MH1 = MH0.asType(TN)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MH1 = MH0.asType(TN)&lt;/code&gt; 과 같이 원래 대상 메소드 핸들 &lt;code&gt;MH0&lt;/code&gt; 을 필수 유형으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a2e70d2878a9d5aa38cb5618572b46c26f02088" translate="yes" xml:space="preserve">
          <source>ForcedBreakWeight</source>
          <target state="translated">ForcedBreakWeight</target>
        </trans-unit>
        <trans-unit id="5939f444f5d0d9a52f72fc6e0d0b730f6e796ebd" translate="yes" xml:space="preserve">
          <source>Forces any changes in the contents of this preference node and its descendants to the persistent store.</source>
          <target state="translated">이 기본 설정 노드 및 해당 하위 항목의 내용을 영구 저장소로 강제 변경합니다.</target>
        </trans-unit>
        <trans-unit id="1c9b10af1449bad784be1cde6e9a43551892676f" translate="yes" xml:space="preserve">
          <source>Forces any changes in the contents of this preference node and its descendants to the persistent store. Once this method returns successfully, it is safe to assume that all changes made in the subtree rooted at this node prior to the method invocation have become permanent.</source>
          <target state="translated">이 환경 설정 노드 및 해당 하위 항목의 컨텐츠 변경 사항을 지속적 저장소로 강제 변경합니다. 이 메소드가 성공적으로 리턴되면 메소드 호출 이전에이 노드에서 루팅 된 서브 트리의 모든 변경 사항이 영구적으로되었다고 가정하는 것이 안전합니다.</target>
        </trans-unit>
        <trans-unit id="866add102857888eac0356740813a95c72761659" translate="yes" xml:space="preserve">
          <source>Forces any changes made to a region of this buffer's content to be written to the storage device containing the mapped file.</source>
          <target state="translated">이 버퍼의 내용 영역에 대한 변경 사항이 매핑 된 파일이 포함 된 저장 장치에 기록되도록합니다.</target>
        </trans-unit>
        <trans-unit id="b6577447f3397789dd5b59325424ee56567c7eed" translate="yes" xml:space="preserve">
          <source>Forces any changes made to a region of this buffer's content to be written to the storage device containing the mapped file. The region starts at the given &lt;code&gt;index&lt;/code&gt; in this buffer and is &lt;code&gt;length&lt;/code&gt; bytes.</source>
          <target state="translated">이 버퍼의 내용 영역에 대한 변경 사항이 매핑 된 파일이 포함 된 저장 장치에 기록되도록합니다. 영역은 이 버퍼 의 지정된 &lt;code&gt;index&lt;/code&gt; 에서 시작하며 &lt;code&gt;length&lt;/code&gt; 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="a680e483ca6950b6c2d33e9ce98ce8a59904a423" translate="yes" xml:space="preserve">
          <source>Forces any changes made to this buffer's content to be written to the storage device containing the mapped file.</source>
          <target state="translated">이 버퍼의 내용에 대한 모든 변경 사항이 매핑 된 파일을 포함하는 저장 장치에 기록되도록합니다.</target>
        </trans-unit>
        <trans-unit id="979293701c2da21f6b5259ef695a3cf808e4e7c1" translate="yes" xml:space="preserve">
          <source>Forces any changes made to this segment's content to be written to the storage device containing the mapped file.</source>
          <target state="translated">이 세그먼트의 내용에 대한 변경 사항이 매핑 된 파일이 포함 된 저장 장치에 기록되도록합니다.</target>
        </trans-unit>
        <trans-unit id="deea8a87216b9ce28d84e11ea2b2562f15768162" translate="yes" xml:space="preserve">
          <source>Forces any updates to this channel's file to be written to the storage device that contains it.</source>
          <target state="translated">이 채널 파일에 대한 모든 업데이트가 해당 채널 파일을 포함하는 저장 장치에 기록되도록합니다.</target>
        </trans-unit>
        <trans-unit id="77d782523eb2a73cd90e8e918ae7fac2208133bf" translate="yes" xml:space="preserve">
          <source>Forces the current value to be taken from the &lt;code&gt;AbstractFormatter&lt;/code&gt; and set as the current value.</source>
          <target state="translated">&lt;code&gt;AbstractFormatter&lt;/code&gt; 에서 현재 값을 가져 오도록합니다. 설정하도록합니다.</target>
        </trans-unit>
        <trans-unit id="ec9382053ccf38d457c53ee8300e84d872701416" translate="yes" xml:space="preserve">
          <source>Forces the current value to be taken from the &lt;code&gt;AbstractFormatter&lt;/code&gt; and set as the current value. This has no effect if there is no current &lt;code&gt;AbstractFormatter&lt;/code&gt; installed.</source>
          <target state="translated">&lt;code&gt;AbstractFormatter&lt;/code&gt; 에서 현재 값을 가져 와서 현재 값으로 설정하도록합니다. 전류가 없으면 효과가 없습니다. &lt;code&gt;AbstractFormatter&lt;/code&gt; 가 설치되어 .</target>
        </trans-unit>
        <trans-unit id="5e0e8d66fb65d640dc6fc57b52309f8c8b4fc141" translate="yes" xml:space="preserve">
          <source>Forces the data to match the state specified in the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; variable.</source>
          <target state="translated">데이터가 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 에 지정된 상태와 일치 하도록합니다. 변수에 합니다.</target>
        </trans-unit>
        <trans-unit id="7247ff20e823272d20fd969a4770a9eb59049fe9" translate="yes" xml:space="preserve">
          <source>Forces the data to match the state specified in the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; variable. It may multiply or divide the color raster data by alpha, or do nothing if the data is in the correct state.</source>
          <target state="translated">데이터가 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 에 지정된 상태와 일치 하도록합니다. 변수에 합니다. 색상 래스터 데이터를 알파로 곱하거나 나눌 수 있으며 데이터가 올바른 상태이면 아무 작업도 수행하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3cb1bac84088d2f373c2cf2dd831c6a1d91a81f2" translate="yes" xml:space="preserve">
          <source>Forces the given value to be returned as a result.</source>
          <target state="translated">주어진 값이 결과로 반환되도록합니다.</target>
        </trans-unit>
        <trans-unit id="dbce88f263ac9d740c92b1f1edd27fb2fa3fda52" translate="yes" xml:space="preserve">
          <source>Forces the given value to be returned as a result. This method is designed to support extensions, and should not in general be called otherwise.</source>
          <target state="translated">주어진 값이 결과로 반환되도록합니다. 이 메소드는 확장을 지원하도록 설계되었으며 일반적으로 다르게 호출해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="da9dbd45f463b58f2240e5185c7d5cf9102f825b" translate="yes" xml:space="preserve">
          <source>Forces the raster data to match the state specified in the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; variable, assuming the data is currently correctly described by this &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">데이터가 현재이 &lt;code&gt;ColorModel&lt;/code&gt; 에 의해 올바르게 설명되어 있다고 가정하고, 래스터 데이터가 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 변수에 지정된 상태와 일치하도록 강제 합니다. .</target>
        </trans-unit>
        <trans-unit id="4549cc0416b7cda2bd6ba87f5c0839294f8bd757" translate="yes" xml:space="preserve">
          <source>Forces the raster data to match the state specified in the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; variable, assuming the data is currently correctly described by this &lt;code&gt;ColorModel&lt;/code&gt;. It may multiply or divide the color raster data by alpha, or do nothing if the data is in the correct state. If the data needs to be coerced, this method also returns an instance of this &lt;code&gt;ColorModel&lt;/code&gt; with the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; flag set appropriately. Since &lt;code&gt;ColorModel&lt;/code&gt; can be subclassed, subclasses inherit the implementation of this method and if they don't override it then they throw an exception if they use an unsupported &lt;code&gt;transferType&lt;/code&gt;.</source>
          <target state="translated">데이터가 현재이 &lt;code&gt;ColorModel&lt;/code&gt; 에 의해 올바르게 설명된다고 가정하고, 래스터 데이터가 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 변수에 지정된 상태와 일치하도록 강제 합니다 . 색상 래스터 데이터를 알파로 곱하거나 나눌 수 있으며 데이터가 올바른 상태이면 아무 작업도 수행하지 않을 수 있습니다. 데이터 요구를 강요 할 경우,이 메서드는이 인스턴스를 반환 &lt;code&gt;ColorModel&lt;/code&gt; 의 와 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 적절하게 설정 플래그. &lt;code&gt;ColorModel&lt;/code&gt; 은 서브 클래 싱 될 수 있기 때문에 , 서브 클래스는이 메서드의 구현을 상속하고, 오버라이드하지 않으면 지원되지 않는 &lt;code&gt;transferType&lt;/code&gt; 을 사용하는 경우 예외를 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="988c07f1ed2980fbf5a6ea7e9086a5c86550e09c" translate="yes" xml:space="preserve">
          <source>Forces the raster data to match the state specified in the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; variable, assuming the data is currently correctly described by this &lt;code&gt;ColorModel&lt;/code&gt;. It may multiply or divide the color raster data by alpha, or do nothing if the data is in the correct state. If the data needs to be coerced, this method will also return an instance of this &lt;code&gt;ColorModel&lt;/code&gt; with the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; flag set appropriately. This method will throw a &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if it is not supported by this &lt;code&gt;ColorModel&lt;/code&gt;. Since &lt;code&gt;ColorModel&lt;/code&gt; is an abstract class, any instance is an instance of a subclass. Subclasses must override this method since the implementation in this abstract class throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">데이터가 현재이 &lt;code&gt;ColorModel&lt;/code&gt; 에 의해 올바르게 설명된다고 가정하고, 래스터 데이터가 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 변수에 지정된 상태와 일치하도록 강제 합니다 . 색상 래스터 데이터를 알파로 곱하거나 나눌 수 있으며 데이터가 올바른 상태이면 아무 작업도 수행하지 않을 수 있습니다. 데이터를 강요 할 필요가있는 경우,이 메소드는이 인스턴스 반환 &lt;code&gt;ColorModel&lt;/code&gt; 와 와 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 적절하게 플래그를 설정합니다. 이 &lt;code&gt;ColorModel&lt;/code&gt; 에 의해 지원 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 경우 ,이 메서드는 UnsupportedOperationException 을 던집니다 . &lt;code&gt;ColorModel&lt;/code&gt; 이후추상 클래스이고 모든 인스턴스는 하위 클래스의 인스턴스입니다. 이 추상 클래스의 구현은 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 던지기 때문에 서브 클래스는이 메서드를 재정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="118377b2f181faacd93bb631f27279c6cd8907a0" translate="yes" xml:space="preserve">
          <source>Forces the raster data to match the state specified in the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; variable, assuming the data is currently correctly described by this &lt;code&gt;ColorModel&lt;/code&gt;. It may multiply or divide the color raster data by alpha, or do nothing if the data is in the correct state. If the data needs to be coerced, this method will also return an instance of this &lt;code&gt;ColorModel&lt;/code&gt; with the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; flag set appropriately. This method will throw a &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this transferType is not supported by this &lt;code&gt;ColorModel&lt;/code&gt;. Since &lt;code&gt;ColorModel&lt;/code&gt; can be subclassed, subclasses inherit the implementation of this method and if they don't override it then they throw an exception if they use an unsupported transferType.</source>
          <target state="translated">데이터가 현재이 &lt;code&gt;ColorModel&lt;/code&gt; 에 의해 올바르게 설명된다고 가정하고, 래스터 데이터가 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 변수에 지정된 상태와 일치하도록 강제 합니다 . 색상 래스터 데이터를 알파로 곱하거나 나눌 수 있으며 데이터가 올바른 상태이면 아무 작업도 수행하지 않을 수 있습니다. 데이터를 강요 할 필요가있는 경우,이 메소드는이 인스턴스 반환 &lt;code&gt;ColorModel&lt;/code&gt; 와 와 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 적절하게 플래그를 설정합니다. 이 TransferType이이 &lt;code&gt;ColorModel&lt;/code&gt; 에 의해 지원 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 경우이 메서드는 UnsupportedOperationException 을 던집니다 . &lt;code&gt;ColorModel&lt;/code&gt; 이후 서브 클래스가 될 수 있고, 서브 클래스는이 메서드의 구현을 상속하며,이를 재정의하지 않으면 지원되지 않는 transferType을 사용하는 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f80d2a26537684a8a826907dd42b699f6d7f7f82" translate="yes" xml:space="preserve">
          <source>Forces the specified components to have the same size along the specified axis regardless of their preferred, minimum or maximum sizes.</source>
          <target state="translated">지정된 구성 요소가 기본, 최소 또는 최대 크기에 관계없이 지정된 축을 따라 동일한 크기를 갖도록합니다.</target>
        </trans-unit>
        <trans-unit id="fb20e053b06a3e6b80f33343837372a070455de0" translate="yes" xml:space="preserve">
          <source>Forces the specified components to have the same size along the specified axis regardless of their preferred, minimum or maximum sizes. Components that are linked are given the maximum of the preferred size of each of the linked components. For example, if you link two components along the horizontal axis and the preferred width is 10 and 20, both components are given a width of 20.</source>
          <target state="translated">지정된 구성 요소가 기본, 최소 또는 최대 크기에 관계없이 지정된 축을 따라 동일한 크기를 갖도록합니다. 링크 된 구성 요소에는 링크 된 각 구성 요소의 최대 기본 크기가 제공됩니다. 예를 들어 가로 축을 따라 두 구성 요소를 연결하고 기본 너비가 10과 20 인 경우 두 구성 요소 모두 너비가 20으로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="7508af74e0b645d0e8673f26b3c2909a94bbfe96" translate="yes" xml:space="preserve">
          <source>Forces the specified components to have the same size regardless of their preferred, minimum or maximum sizes.</source>
          <target state="translated">선호, 최소 또는 최대 크기에 관계없이 지정된 구성 요소가 동일한 크기를 갖도록합니다.</target>
        </trans-unit>
        <trans-unit id="1bb12d9e5c29c262c5c0b442af8ebd90c800f627" translate="yes" xml:space="preserve">
          <source>Forces the specified components to have the same size regardless of their preferred, minimum or maximum sizes. Components that are linked are given the maximum of the preferred size of each of the linked components. For example, if you link two components with a preferred width of 10 and 20, both components are given a width of 20.</source>
          <target state="translated">선호, 최소 또는 최대 크기에 관계없이 지정된 구성 요소가 동일한 크기를 갖도록합니다. 링크 된 구성 요소에는 링크 된 각 구성 요소의 최대 기본 크기가 제공됩니다. 예를 들어, 선호하는 너비가 10과 20 인 두 구성 요소를 링크하면 두 구성 요소 모두 너비가 20이됩니다.</target>
        </trans-unit>
        <trans-unit id="dde1b8ae3d0a842d68726e659939eb0c5c7f8545" translate="yes" xml:space="preserve">
          <source>Forces the thread to stop executing.</source>
          <target state="translated">스레드가 강제로 실행을 중지하도록합니다.</target>
        </trans-unit>
        <trans-unit id="3d1c1c7583df36349c8a3dc399a306938d49a073" translate="yes" xml:space="preserve">
          <source>Forces this phaser to enter termination state.</source>
          <target state="translated">이 페이저를 강제 종료 상태로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="c3e0e32becf1c3ad394aa3f4fdb2ae0464a0dd19" translate="yes" xml:space="preserve">
          <source>Forces this phaser to enter termination state. Counts of registered parties are unaffected. If this phaser is a member of a tiered set of phasers, then all of the phasers in the set are terminated. If this phaser is already terminated, this method has no effect. This method may be useful for coordinating recovery after one or more tasks encounter unexpected exceptions.</source>
          <target state="translated">이 페이저가 강제로 종료 상태가되도록합니다. 등록 된 당사자 수에는 영향을 미치지 않습니다. 이 페이저가 계층화 된 페이저 세트의 멤버이면 세트의 모든 페이저가 종료됩니다. 이 페이저가 이미 종료 된 경우이 방법은 효과가 없습니다. 이 방법은 하나 이상의 작업에 예기치 않은 예외가 발생한 후 복구를 조정하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="acffb05348f752c59e5d294b6dc5985b876136be" translate="yes" xml:space="preserve">
          <source>Forcibly causes subsequent invocations of method &lt;a href=&quot;#get()&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and related methods to throw the given exception, whether or not already completed.</source>
          <target state="translated">이미 완료되었는지 여부에 관계없이 &lt;a href=&quot;#get()&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 메서드 및 관련 메서드 의 후속 호출 에서 지정된 예외를 강제로 발생시킵니다 .</target>
        </trans-unit>
        <trans-unit id="5445c45650785e4ad2937d1d5d9d5487d8c3ce5f" translate="yes" xml:space="preserve">
          <source>Forcibly causes subsequent invocations of method &lt;a href=&quot;#get()&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and related methods to throw the given exception, whether or not already completed. This method is designed for use only in error recovery actions, and even in such situations may result in ongoing dependent completions using established versus overwritten outcomes.</source>
          <target state="translated">이미 완료되었는지 여부에 관계없이 &lt;a href=&quot;#get()&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 메서드 및 관련 메서드 의 후속 호출 에서 지정된 예외를 강제로 발생시킵니다 . 이 방법은 오류 복구 작업에만 사용하도록 설계되었으며 이러한 상황에서도 설정된 결과와 덮어 쓰기 된 결과를 사용하여 지속적인 종속 완료가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9d25990145c83fbe30b7ec71eb0f5ee823cb07f" translate="yes" xml:space="preserve">
          <source>Forcibly causes subsequent invocations of method &lt;a href=&quot;completablefuture#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and related methods to throw the given exception, whether or not already completed. This method is designed for use only in error recovery actions, and even in such situations may result in ongoing dependent completions using established versus overwritten outcomes.</source>
          <target state="translated">&lt;a href=&quot;completablefuture#get--&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 메소드 및 관련 메소드 의 후속 호출로 인해 이미 완료되었는지 여부에 관계없이 지정된 예외가 발생합니다. 이 방법은 오류 복구 작업에만 사용하도록 설계되었으며 이러한 상황에서도 확립 된 결과와 덮어 쓴 결과를 사용하여 지속적인 종속 완료를 초래할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c81377834f3334c2907fec28b26737276865107a" translate="yes" xml:space="preserve">
          <source>Forcibly sets or resets the value subsequently returned by method &lt;a href=&quot;#get()&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and related methods, whether or not already completed.</source>
          <target state="translated">이미 완료되었는지 여부에 관계없이 &lt;a href=&quot;#get()&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 메서드 및 관련 메서드에서 이후에 반환되는 값을 강제로 설정하거나 재설정합니다 .</target>
        </trans-unit>
        <trans-unit id="9c3f9e363addc3b76fcf9fdc62ce15eccc5454dc" translate="yes" xml:space="preserve">
          <source>Forcibly sets or resets the value subsequently returned by method &lt;a href=&quot;#get()&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and related methods, whether or not already completed. This method is designed for use only in error recovery actions, and even in such situations may result in ongoing dependent completions using established versus overwritten outcomes.</source>
          <target state="translated">이미 완료되었는지 여부에 관계없이 &lt;a href=&quot;#get()&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 메서드 및 관련 메서드에서 이후에 반환되는 값을 강제로 설정하거나 재설정합니다 . 이 방법은 오류 복구 작업에만 사용하도록 설계되었으며 이러한 상황에서도 설정된 결과와 덮어 쓰기 된 결과를 사용하여 지속적인 종속 완료가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e2c4695f4300e5fd7114ef140e2386285715a22" translate="yes" xml:space="preserve">
          <source>Forcibly sets or resets the value subsequently returned by method &lt;a href=&quot;completablefuture#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and related methods, whether or not already completed. This method is designed for use only in error recovery actions, and even in such situations may result in ongoing dependent completions using established versus overwritten outcomes.</source>
          <target state="translated">&lt;a href=&quot;completablefuture#get--&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 메소드와 관련 메소드가 이미 완료했는지 여부에 따라 이후에 리턴되는 값을 강제로 설정하거나 재설정합니다 . 이 방법은 오류 복구 작업에만 사용하도록 설계되었으며 이러한 상황에서도 확립 된 결과와 덮어 쓴 결과를 사용하여 지속적인 종속 완료를 초래할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3dc9b793d4f642b58f87c9edc48942b364f96f2b" translate="yes" xml:space="preserve">
          <source>Forcibly terminates the currently running Java virtual machine.</source>
          <target state="translated">현재 실행중인 Java 가상 머신을 강제로 종료합니다.</target>
        </trans-unit>
        <trans-unit id="36e93f57eedd9a54ddda92bd9479c29c2239c76f" translate="yes" xml:space="preserve">
          <source>Forcibly terminates the currently running Java virtual machine. This method never returns normally.</source>
          <target state="translated">현재 실행중인 Java 가상 머신을 강제로 종료합니다. 이 메소드는 정상적으로 리턴되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1613ff18a51063a1ec5a75856a9d23412b1fa962" translate="yes" xml:space="preserve">
          <source>Forcing reading of fields corresponding to &lt;code&gt;TIFFTag&lt;/code&gt;s not in any of the allowed &lt;code&gt;TIFFTagSet&lt;/code&gt;s may be effected via &lt;a href=&quot;#setReadUnknownTags(boolean)&quot;&gt;&lt;code&gt;setReadUnknownTags&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">허용 된 &lt;code&gt;TIFFTagSet&lt;/code&gt; 에 없는 &lt;code&gt;TIFFTag&lt;/code&gt; 에 해당하는 필드를 강제로 읽는 것은 setReadUnknownTags 를 통해 영향을 &lt;a href=&quot;#setReadUnknownTags(boolean)&quot;&gt; &lt;code&gt;setReadUnknownTags&lt;/code&gt; &lt;/a&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f7745efdedae8430f407638389ab56b4f858eeed" translate="yes" xml:space="preserve">
          <source>Foreground</source>
          <target state="translated">Foreground</target>
        </trans-unit>
        <trans-unit id="eb08eb0b266d650d7a34350fb36997b3bc618533" translate="yes" xml:space="preserve">
          <source>ForegroundAction</source>
          <target state="translated">ForegroundAction</target>
        </trans-unit>
        <trans-unit id="fccd10bd01f081e772ab55fdf5e2bd560958bf1a" translate="yes" xml:space="preserve">
          <source>ForkJoinPool</source>
          <target state="translated">ForkJoinPool</target>
        </trans-unit>
        <trans-unit id="f39d8a7e89b599a5922f299f82b1a8c6acd3a87a" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.ForkJoinWorkerThreadFactory</source>
          <target state="translated">ForkJoinPool.ForkJoinWorkerThreadFactory</target>
        </trans-unit>
        <trans-unit id="ad028608dc5cc21b9f19de41ba8ea82f9a2aa0f6" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.ForkJoinWorkerThreadFactory.newThread()</source>
          <target state="translated">ForkJoinPool.ForkJoinWorkerThreadFactory.newThread()</target>
        </trans-unit>
        <trans-unit id="7ecdf21d4b2f0d280dd6c19b3ab787e93ef269a6" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.ManagedBlocker</source>
          <target state="translated">ForkJoinPool.ManagedBlocker</target>
        </trans-unit>
        <trans-unit id="5eb0e257ecb6476a08bc37c22217a81973f1c833" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.ManagedBlocker.block()</source>
          <target state="translated">ForkJoinPool.ManagedBlocker.block()</target>
        </trans-unit>
        <trans-unit id="c23a407322375c571854eaba3582b74df262d4da" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.ManagedBlocker.isReleasable()</source>
          <target state="translated">ForkJoinPool.ManagedBlocker.isReleasable()</target>
        </trans-unit>
        <trans-unit id="5d07a96e3f41b39dad5d76d32a59480cd45ff59d" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.awaitQuiescence()</source>
          <target state="translated">ForkJoinPool.awaitQuiescence()</target>
        </trans-unit>
        <trans-unit id="ce226f283a258522ba29450ec73ffb2a3449205a" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.awaitTermination()</source>
          <target state="translated">ForkJoinPool.awaitTermination()</target>
        </trans-unit>
        <trans-unit id="3aa52c8a1e44e47a16bbd49172332d24b2715623" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.commonPool()</source>
          <target state="translated">ForkJoinPool.commonPool()</target>
        </trans-unit>
        <trans-unit id="385ac479751a78d054ac18b246c415aed5ab64b6" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.drainTasksTo()</source>
          <target state="translated">ForkJoinPool.drainTasksTo()</target>
        </trans-unit>
        <trans-unit id="5b4130a21005c5f67b0ea532e393df7b096450c3" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.execute()</source>
          <target state="translated">ForkJoinPool.execute()</target>
        </trans-unit>
        <trans-unit id="a2f334663e796ecc9858263dc71a34e0a30f739e" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getActiveThreadCount()</source>
          <target state="translated">ForkJoinPool.getActiveThreadCount()</target>
        </trans-unit>
        <trans-unit id="28fbff92fd675f66b94eeb30de0b190127eeb544" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getAsyncMode()</source>
          <target state="translated">ForkJoinPool.getAsyncMode()</target>
        </trans-unit>
        <trans-unit id="e6179f341847929d36d77692104083832b3030f1" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getCommonPoolParallelism()</source>
          <target state="translated">ForkJoinPool.getCommonPoolParallelism()</target>
        </trans-unit>
        <trans-unit id="6f34a8e32f7e690865dafd75e80ec571296cdbd6" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getFactory()</source>
          <target state="translated">ForkJoinPool.getFactory()</target>
        </trans-unit>
        <trans-unit id="1a03e04b00b20c2269390bbd12bfd81012839466" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getParallelism()</source>
          <target state="translated">ForkJoinPool.getParallelism()</target>
        </trans-unit>
        <trans-unit id="4bc046d6b8640b3d2504821b5c135ded1d833fd6" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getPoolSize()</source>
          <target state="translated">ForkJoinPool.getPoolSize()</target>
        </trans-unit>
        <trans-unit id="6c06d0b4ff54a653996ee5b2aa8080fadf00b2a4" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getQueuedSubmissionCount()</source>
          <target state="translated">ForkJoinPool.getQueuedSubmissionCount()</target>
        </trans-unit>
        <trans-unit id="f33076b722e1cad6390534ecf825abac4fc3aaf2" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getQueuedTaskCount()</source>
          <target state="translated">ForkJoinPool.getQueuedTaskCount()</target>
        </trans-unit>
        <trans-unit id="12f81fb17b2bb940a0951076fa5c61dd0be3099c" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getRunningThreadCount()</source>
          <target state="translated">ForkJoinPool.getRunningThreadCount()</target>
        </trans-unit>
        <trans-unit id="3f8d7459d72c6b4ac7a4f2c49c0cf21720d83ccc" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getStealCount()</source>
          <target state="translated">ForkJoinPool.getStealCount()</target>
        </trans-unit>
        <trans-unit id="82bee117026169a5497bd3efac03b4c75e2532a9" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getUncaughtExceptionHandler()</source>
          <target state="translated">ForkJoinPool.getUncaughtExceptionHandler()</target>
        </trans-unit>
        <trans-unit id="4b336964ea7affe439f1c3559fc0da6b4359ac36" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.hasQueuedSubmissions()</source>
          <target state="translated">ForkJoinPool.hasQueuedSubmissions()</target>
        </trans-unit>
        <trans-unit id="379dfbf47fcbad302f0a0ea85ff96b5796cad7dd" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.invoke()</source>
          <target state="translated">ForkJoinPool.invoke()</target>
        </trans-unit>
        <trans-unit id="931e5430fc6c6213aba1a9bcb4b17c34cab25307" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.invokeAll()</source>
          <target state="translated">ForkJoinPool.invokeAll()</target>
        </trans-unit>
        <trans-unit id="d07fee2abe17748f58fdbcd25ef6b487f6ae6b65" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.isQuiescent()</source>
          <target state="translated">ForkJoinPool.isQuiescent()</target>
        </trans-unit>
        <trans-unit id="3ca358ce8f82d43cdc85b7565f3136661b6ad6c7" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.isShutdown()</source>
          <target state="translated">ForkJoinPool.isShutdown()</target>
        </trans-unit>
        <trans-unit id="63e491a96c2d56b401d9fb6b86161de85a051551" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.isTerminated()</source>
          <target state="translated">ForkJoinPool.isTerminated()</target>
        </trans-unit>
        <trans-unit id="fdb7780bd7a291bb10007d9da6ae6b0eb9e54de2" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.isTerminating()</source>
          <target state="translated">ForkJoinPool.isTerminating()</target>
        </trans-unit>
        <trans-unit id="d8394094624d0503d79c4a04cb1552f61949d4bf" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.managedBlock()</source>
          <target state="translated">ForkJoinPool.managedBlock()</target>
        </trans-unit>
        <trans-unit id="94fa97addee2bb016fa7ad0dba60f03e0174f651" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.newTaskFor()</source>
          <target state="translated">ForkJoinPool.newTaskFor()</target>
        </trans-unit>
        <trans-unit id="948cf8a07fe3440136e940fe1bf2780e9308f719" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.pollSubmission()</source>
          <target state="translated">ForkJoinPool.pollSubmission()</target>
        </trans-unit>
        <trans-unit id="d8298ff24e07678c64b2477a81e0aba73e8d0e27" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.shutdown()</source>
          <target state="translated">ForkJoinPool.shutdown()</target>
        </trans-unit>
        <trans-unit id="e92dc1fa038cb558325a32141647a6b89a3bf76e" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.shutdownNow()</source>
          <target state="translated">ForkJoinPool.shutdownNow()</target>
        </trans-unit>
        <trans-unit id="7c2afced7fedfcef83ba19435784c2707f27cfc8" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.submit()</source>
          <target state="translated">ForkJoinPool.submit()</target>
        </trans-unit>
        <trans-unit id="ea35f6d6d1e2525a9bf9fbed7c02fa29586a7cb5" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.toString()</source>
          <target state="translated">ForkJoinPool.toString()</target>
        </trans-unit>
        <trans-unit id="23ac2c518680958cf19f36c2fafaa6479ef0f3ae" translate="yes" xml:space="preserve">
          <source>ForkJoinTask</source>
          <target state="translated">ForkJoinTask</target>
        </trans-unit>
        <trans-unit id="492eb83820d55a644e618c8afafd921055639859" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.adapt()</source>
          <target state="translated">ForkJoinTask.adapt()</target>
        </trans-unit>
        <trans-unit id="ee8d9ae1739cf8b336587f8783a3849bb685fe58" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.cancel()</source>
          <target state="translated">ForkJoinTask.cancel()</target>
        </trans-unit>
        <trans-unit id="7e48208733c4012a55ab36f052964bca4003b2a1" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.compareAndSetForkJoinTaskTag()</source>
          <target state="translated">ForkJoinTask.compareAndSetForkJoinTaskTag()</target>
        </trans-unit>
        <trans-unit id="94b15ff04b08a6eb6b1de30659c59f6e63b714f0" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.complete()</source>
          <target state="translated">ForkJoinTask.complete()</target>
        </trans-unit>
        <trans-unit id="9bc884392d7037bd7863201a2bbbc62d6d48e432" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.completeExceptionally()</source>
          <target state="translated">ForkJoinTask.completeExceptionally()</target>
        </trans-unit>
        <trans-unit id="7837dc8a9d9af718ac92c7ffd144281e74869bf8" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.exec()</source>
          <target state="translated">ForkJoinTask.exec()</target>
        </trans-unit>
        <trans-unit id="1ad0a80adc32bf635c8a3b60a23e5ab096e8d5ce" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.fork()</source>
          <target state="translated">ForkJoinTask.fork()</target>
        </trans-unit>
        <trans-unit id="b655d7110805dcfef615f12711e9c1935f46291d" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.get()</source>
          <target state="translated">ForkJoinTask.get()</target>
        </trans-unit>
        <trans-unit id="82c37a27c81d5be46eaabb49e37965eef5d787f2" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.getException()</source>
          <target state="translated">ForkJoinTask.getException()</target>
        </trans-unit>
        <trans-unit id="04d0e9910c2fae1b75675a431ddddc7cb005c19e" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.getForkJoinTaskTag()</source>
          <target state="translated">ForkJoinTask.getForkJoinTaskTag()</target>
        </trans-unit>
        <trans-unit id="0d13ff10dc6ea2d242e5a16af56572ec62728dbc" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.getPool()</source>
          <target state="translated">ForkJoinTask.getPool()</target>
        </trans-unit>
        <trans-unit id="75e02c9328661a1c949f8637fb6921b870fc6f72" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.getQueuedTaskCount()</source>
          <target state="translated">ForkJoinTask.getQueuedTaskCount()</target>
        </trans-unit>
        <trans-unit id="5b3a64e0ddf0601d8c368714d74c4ec34e6ba1cc" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.getRawResult()</source>
          <target state="translated">ForkJoinTask.getRawResult()</target>
        </trans-unit>
        <trans-unit id="e93d5dc2d0a6e324cac0016b71230fe47ab6d260" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.getSurplusQueuedTaskCount()</source>
          <target state="translated">ForkJoinTask.getSurplusQueuedTaskCount()</target>
        </trans-unit>
        <trans-unit id="c72a935c3bdf49a46a2f68c7f844e212b99b3a9f" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.helpQuiesce()</source>
          <target state="translated">ForkJoinTask.helpQuiesce()</target>
        </trans-unit>
        <trans-unit id="25af2dc288d8d7258c4a924add3faa3c3363d09c" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.inForkJoinPool()</source>
          <target state="translated">ForkJoinTask.inForkJoinPool()</target>
        </trans-unit>
        <trans-unit id="4c8230bf67d85984c78649ebbdaa9022214ac726" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.invoke()</source>
          <target state="translated">ForkJoinTask.invoke()</target>
        </trans-unit>
        <trans-unit id="bb2578235be5a1d80b49286f382c02652722d1a6" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.invokeAll()</source>
          <target state="translated">ForkJoinTask.invokeAll()</target>
        </trans-unit>
        <trans-unit id="46c7234f20e7ff5558eecb6f85a763355ab3a356" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.isCancelled()</source>
          <target state="translated">ForkJoinTask.isCancelled()</target>
        </trans-unit>
        <trans-unit id="3c53578c67a3d5dc3fae2b6213adfeab5408052b" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.isCompletedAbnormally()</source>
          <target state="translated">ForkJoinTask.isCompletedAbnormally()</target>
        </trans-unit>
        <trans-unit id="64c6052d0b139df19ec14840b22cb668cfa8a699" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.isCompletedNormally()</source>
          <target state="translated">ForkJoinTask.isCompletedNormally()</target>
        </trans-unit>
        <trans-unit id="3cf941db3592a3bd14771662fa3711a9ae5520fe" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.isDone()</source>
          <target state="translated">ForkJoinTask.isDone()</target>
        </trans-unit>
        <trans-unit id="a5eb02bf25628b76b9df59e667c00401866fc1e6" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.join()</source>
          <target state="translated">ForkJoinTask.join()</target>
        </trans-unit>
        <trans-unit id="f3e6da96efd8c2d0493ec1fccabe1253b7e0cacf" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.peekNextLocalTask()</source>
          <target state="translated">ForkJoinTask.peekNextLocalTask()</target>
        </trans-unit>
        <trans-unit id="6d79698b971753cda3eae311a5d1c9cf50528add" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.pollNextLocalTask()</source>
          <target state="translated">ForkJoinTask.pollNextLocalTask()</target>
        </trans-unit>
        <trans-unit id="d5b8dd9e0601a48a2a9413f5c28964b1c66fd4f9" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.pollTask()</source>
          <target state="translated">ForkJoinTask.pollTask()</target>
        </trans-unit>
        <trans-unit id="c9b9bd8d4d1df6a87ec42b885261aa46f726a561" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.quietlyComplete()</source>
          <target state="translated">ForkJoinTask.quietlyComplete()</target>
        </trans-unit>
        <trans-unit id="c8ffabdba5c635ce350bc64adca02711eaf8d512" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.quietlyInvoke()</source>
          <target state="translated">ForkJoinTask.quietlyInvoke()</target>
        </trans-unit>
        <trans-unit id="1e5d69359e294c620cfe630d7684c08767394fb7" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.quietlyJoin()</source>
          <target state="translated">ForkJoinTask.quietlyJoin()</target>
        </trans-unit>
        <trans-unit id="de0df6fd3f44a36068c6c8700906462505936195" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.reinitialize()</source>
          <target state="translated">ForkJoinTask.reinitialize()</target>
        </trans-unit>
        <trans-unit id="782d35350e2bb520475ccb484b619b4ff0dc3c87" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.setForkJoinTaskTag()</source>
          <target state="translated">ForkJoinTask.setForkJoinTaskTag()</target>
        </trans-unit>
        <trans-unit id="157793f053a4ed6b66175aa00177f39b8c52fbe1" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.setRawResult()</source>
          <target state="translated">ForkJoinTask.setRawResult()</target>
        </trans-unit>
        <trans-unit id="14e13b4f0828cc7e9569f65c318e9bb4f7c7ee7d" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.tryUnfork()</source>
          <target state="translated">ForkJoinTask.tryUnfork()</target>
        </trans-unit>
        <trans-unit id="e33265d16d3575aaf320d5b191427cdfaa3266f6" translate="yes" xml:space="preserve">
          <source>ForkJoinTasks are &lt;code&gt;Serializable&lt;/code&gt;, which enables them to be used in extensions such as remote execution frameworks. It is sensible to serialize tasks only before or after, but not during, execution. Serialization is not relied on during execution itself.</source>
          <target state="translated">ForkJoinTasks는 &lt;code&gt;Serializable&lt;/code&gt; 이므로 원격 실행 프레임 워크와 같은 확장에 사용할 수 있습니다. 실행 전 또는 후에 만 ​​태스크를 직렬화하는 것이 합리적입니다. 직렬화는 실행 자체에 의존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bd5b71f4d9e3bb8d68310798b2e570d8ff14474a" translate="yes" xml:space="preserve">
          <source>ForkJoinTasks should perform relatively small amounts of computation. Large tasks should be split into smaller subtasks, usually via recursive decomposition. As a very rough rule of thumb, a task should perform more than 100 and less than 10000 basic computational steps, and should avoid indefinite looping. If tasks are too big, then parallelism cannot improve throughput. If too small, then memory and internal task maintenance overhead may overwhelm processing.</source>
          <target state="translated">ForkJoinTask는 비교적 적은 양의 계산을 수행해야합니다. 큰 작업은 일반적으로 재귀 적 분해를 통해 작은 하위 작업으로 분할해야합니다. 매우 대략적인 규칙으로, 작업은 100 회 이상 10000 회 미만의 기본 계산 단계를 수행해야하며 무한 반복을 피해야합니다. 작업이 너무 큰 경우 병렬 처리는 처리량을 향상시킬 수 없습니다. 너무 작 으면 메모리 및 내부 작업 유지 관리 오버 헤드가 처리를 압도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1031cd9059d05e6af3dd9bce421a8a905ec7317b" translate="yes" xml:space="preserve">
          <source>ForkJoinWorkerThread</source>
          <target state="translated">ForkJoinWorkerThread</target>
        </trans-unit>
        <trans-unit id="edb483d1de1c698134ee111f9b84e356ae013c28" translate="yes" xml:space="preserve">
          <source>ForkJoinWorkerThread.getPool()</source>
          <target state="translated">ForkJoinWorkerThread.getPool()</target>
        </trans-unit>
        <trans-unit id="007655f701cc69ac5304814368f7a4e9cf42a0a9" translate="yes" xml:space="preserve">
          <source>ForkJoinWorkerThread.getPoolIndex()</source>
          <target state="translated">ForkJoinWorkerThread.getPoolIndex()</target>
        </trans-unit>
        <trans-unit id="c3220bb92b11d439b4fc2d6fd4c6baaff306dd9d" translate="yes" xml:space="preserve">
          <source>ForkJoinWorkerThread.onStart()</source>
          <target state="translated">ForkJoinWorkerThread.onStart()</target>
        </trans-unit>
        <trans-unit id="f9bbb0eb86558f820cea5dd375880bfe1fe8952c" translate="yes" xml:space="preserve">
          <source>ForkJoinWorkerThread.onTermination()</source>
          <target state="translated">ForkJoinWorkerThread.onTermination()</target>
        </trans-unit>
        <trans-unit id="0c2c89bcd318db6a40f6e343725881ec2dd59c52" translate="yes" xml:space="preserve">
          <source>ForkJoinWorkerThread.run()</source>
          <target state="translated">ForkJoinWorkerThread.run()</target>
        </trans-unit>
        <trans-unit id="f56ea20d95bae68d52ee1e3ac06ab54ddc4cac3f" translate="yes" xml:space="preserve">
          <source>Forks all tasks in the specified collection, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown.</source>
          <target state="translated">지정된 컬렉션의 모든 작업을 &lt;code&gt;isDone&lt;/code&gt; 하고 각 작업에 대해 isDone이 보류되거나 (확인되지 ​​않은) 예외가 발생하는 경우를 반환 합니다.이 경우 예외가 다시 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e1bf7f04dc91d95646b89f43aa5927c7ad2482df" translate="yes" xml:space="preserve">
          <source>Forks all tasks in the specified collection, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown. If more than one task encounters an exception, then this method throws any one of these exceptions. If any task encounters an exception, others may be cancelled. However, the execution status of individual tasks is not guaranteed upon exceptional return. The status of each task may be obtained using &lt;a href=&quot;#getException()&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; and related methods to check if they have been cancelled, completed normally or exceptionally, or left unprocessed.</source>
          <target state="translated">지정된 컬렉션의 모든 작업을 &lt;code&gt;isDone&lt;/code&gt; 하고 각 작업에 대해 isDone이 보류되거나 (확인되지 ​​않은) 예외가 발생 하면 반환 합니다.이 경우 예외가 다시 발생합니다. 둘 이상의 작업에서 예외가 발생하면이 메서드는 이러한 예외 중 하나를 throw합니다. 작업에 예외가 발생하면 다른 작업이 취소 될 수 있습니다. 단, 예외적 반환시 개별 작업의 실행 상태는 보장되지 않습니다. 각 작업의 상태는 &lt;a href=&quot;#getException()&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt; 및 관련 메서드를 사용하여 가져올 수 있으며 , 취소되었는지, 정상적으로 또는 예외적으로 완료되었는지 또는 처리되지 않은 상태로 남아 있는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="07e592a3c48252cf7f9fcf1dc6663e80ef967130" translate="yes" xml:space="preserve">
          <source>Forks all tasks in the specified collection, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown. If more than one task encounters an exception, then this method throws any one of these exceptions. If any task encounters an exception, others may be cancelled. However, the execution status of individual tasks is not guaranteed upon exceptional return. The status of each task may be obtained using &lt;a href=&quot;forkjointask#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; and related methods to check if they have been cancelled, completed normally or exceptionally, or left unprocessed.</source>
          <target state="translated">지정된 컬렉션의 모든 작업을 포크 하여 각 작업에 대해 &lt;code&gt;isDone&lt;/code&gt; 이 보류되거나 검사되지 않은 예외가 발생 하면 반환됩니다 .이 경우 예외가 다시 발생합니다. 둘 이상의 작업에서 예외가 발생하면이 메서드는 이러한 예외 중 하나를 발생시킵니다. 어떤 작업에 예외가 발생하면 다른 작업이 취소 될 수 있습니다. 그러나 예외적 인 반환으로 개별 작업의 실행 상태가 보장되는 것은 아닙니다. 각 작업의 상태는 &lt;a href=&quot;forkjointask#getException--&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt; 및 관련 메소드를 사용하여 가져 와서 취소, 정상 또는 예외적으로 완료되었는지 또는 처리되지 않은 상태인지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f4766b8846819a882dbe8026c24b5ed399b2cfc" translate="yes" xml:space="preserve">
          <source>Forks the given tasks, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown.</source>
          <target state="translated">주어진 작업을 포크하고 각 작업에 대해 &lt;code&gt;isDone&lt;/code&gt; 이 보류되거나 (확인되지 ​​않은) 예외가 발생 하면 반환 합니다.이 경우 예외가 다시 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2290a44156b3b58593fa8c972feb4c3d0d3e2780" translate="yes" xml:space="preserve">
          <source>Forks the given tasks, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown. If more than one task encounters an exception, then this method throws any one of these exceptions. If any task encounters an exception, others may be cancelled. However, the execution status of individual tasks is not guaranteed upon exceptional return. The status of each task may be obtained using &lt;a href=&quot;#getException()&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; and related methods to check if they have been cancelled, completed normally or exceptionally, or left unprocessed.</source>
          <target state="translated">주어진 작업을 포크하고 각 작업에 대해 &lt;code&gt;isDone&lt;/code&gt; 이 보류되거나 (확인되지 ​​않은) 예외가 발생 하면 반환 합니다.이 경우 예외가 다시 발생합니다. 둘 이상의 작업에서 예외가 발생하면이 메서드는 이러한 예외 중 하나를 throw합니다. 작업에 예외가 발생하면 다른 작업이 취소 될 수 있습니다. 단, 예외적 반환시 개별 작업의 실행 상태는 보장되지 않습니다. 각 작업의 상태는 &lt;a href=&quot;#getException()&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt; 및 관련 메서드를 사용하여 가져올 수 있으며 , 취소되었는지, 정상적으로 또는 예외적으로 완료되었는지 또는 처리되지 않은 상태로 남아 있는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04917135e1237009b50bf463b498a6bf21064d37" translate="yes" xml:space="preserve">
          <source>Forks the given tasks, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown. If more than one task encounters an exception, then this method throws any one of these exceptions. If any task encounters an exception, others may be cancelled. However, the execution status of individual tasks is not guaranteed upon exceptional return. The status of each task may be obtained using &lt;a href=&quot;forkjointask#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; and related methods to check if they have been cancelled, completed normally or exceptionally, or left unprocessed.</source>
          <target state="translated">주어진 작업을 포크하여 각 작업에 대해 &lt;code&gt;isDone&lt;/code&gt; 이 보류되거나 (체크되지 않은) 예외가 발생하면 예외가 다시 발생합니다. 둘 이상의 작업에서 예외가 발생하면이 메서드는 이러한 예외 중 하나를 발생시킵니다. 어떤 작업에 예외가 발생하면 다른 작업이 취소 될 수 있습니다. 그러나 예외적 인 반환으로 개별 작업의 실행 상태가 보장되는 것은 아닙니다. 각 작업의 상태는 &lt;a href=&quot;forkjointask#getException--&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt; 및 관련 메소드를 사용하여 가져 와서 취소, 정상 또는 예외적으로 완료되었는지 또는 처리되지 않은 상태인지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="75ca61e1c6bb032b25e0459b71a078e13bd40c81" translate="yes" xml:space="preserve">
          <source>Forks the given tasks, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown. If more than one task encounters an exception, then this method throws any one of these exceptions. If any task encounters an exception, the other may be cancelled. However, the execution status of individual tasks is not guaranteed upon exceptional return. The status of each task may be obtained using &lt;a href=&quot;#getException()&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; and related methods to check if they have been cancelled, completed normally or exceptionally, or left unprocessed.</source>
          <target state="translated">주어진 작업을 포크하고 각 작업에 대해 &lt;code&gt;isDone&lt;/code&gt; 이 보류되거나 (확인되지 ​​않은) 예외가 발생 하면 반환 합니다.이 경우 예외가 다시 발생합니다. 둘 이상의 작업에서 예외가 발생하면이 메서드는 이러한 예외 중 하나를 throw합니다. 작업에 예외가 발생하면 다른 작업이 취소 될 수 있습니다. 단, 예외적 반환시 개별 작업의 실행 상태는 보장되지 않습니다. 각 작업의 상태는 &lt;a href=&quot;#getException()&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt; 및 관련 메서드를 사용하여 가져 와서 취소되었는지, 정상적으로 또는 예외적으로 완료되었는지 또는 처리되지 않은 상태인지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5381ba0db46417dd20ad2bece1549ce15b6b5747" translate="yes" xml:space="preserve">
          <source>Forks the given tasks, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown. If more than one task encounters an exception, then this method throws any one of these exceptions. If any task encounters an exception, the other may be cancelled. However, the execution status of individual tasks is not guaranteed upon exceptional return. The status of each task may be obtained using &lt;a href=&quot;forkjointask#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; and related methods to check if they have been cancelled, completed normally or exceptionally, or left unprocessed.</source>
          <target state="translated">주어진 작업을 포크하여 각 작업에 대해 &lt;code&gt;isDone&lt;/code&gt; 이 보류되거나 (체크되지 않은) 예외가 발생 하면 반환됩니다 .이 경우 예외가 다시 발생합니다. 둘 이상의 작업에서 예외가 발생하면이 메서드는 이러한 예외 중 하나를 발생시킵니다. 어떤 작업에 예외가 발생하면 다른 작업이 취소 될 수 있습니다. 그러나 예외적 인 반환으로 개별 작업의 실행 상태가 보장되는 것은 아닙니다. 각 작업의 상태는 &lt;a href=&quot;forkjointask#getException--&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt; 및 관련 메소드를 사용하여 가져 와서 취소, 정상 또는 예외적으로 완료되었는지 또는 처리되지 않은 상태인지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80446347ede53cf9ce56b3d59fda4b5c96dc25c4" translate="yes" xml:space="preserve">
          <source>Form</source>
          <target state="translated">Form</target>
        </trans-unit>
        <trans-unit id="b6599e900a80e606201260c58a85f8e2ace5c069" translate="yes" xml:space="preserve">
          <source>Form control or object name when submitted with a form.</source>
          <target state="translated">양식과 함께 제출할 때 양식 컨트롤 또는 개체 이름입니다.</target>
        </trans-unit>
        <trans-unit id="f8c7c15ff5ddeb2f968880451afe8fec85073daf" translate="yes" xml:space="preserve">
          <source>Form control or object name when submitted with a form. See the name attribute definition in HTML 4.0.</source>
          <target state="translated">양식과 함께 제출할 때 양식 컨트롤 또는 개체 이름입니다. HTML 4.0의 이름 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2c4f3b3e50f579bcd7cd4f5b9f98d212944a5e92" translate="yes" xml:space="preserve">
          <source>Form control.</source>
          <target state="translated">양식 제어.</target>
        </trans-unit>
        <trans-unit id="49fbe067e62d9d1f99d11581553216776a353999" translate="yes" xml:space="preserve">
          <source>Form control. Note. Depending upon the environment in which the page is being viewed, the value property may be read-only for the file upload input type. For the &quot;password&quot; input type, the actual value returned may be masked to prevent unauthorized use. See the INPUT element definition in HTML 4.0.</source>
          <target state="translated">양식 제어. 노트. 페이지를 보는 환경에 따라 파일 업로드 입력 유형에 대해 value 속성이 읽기 전용 일 수 있습니다. &quot;암호&quot;입력 유형의 경우, 반환 된 실제 값은 무단 사용을 방지하기 위해 마스킹 될 수 있습니다. HTML 4.0의 INPUT 요소 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="86ed21bf9ffb423b422c29d8a25008b83227239d" translate="yes" xml:space="preserve">
          <source>Form field label text.</source>
          <target state="translated">양식 필드 레이블 텍스트.</target>
        </trans-unit>
        <trans-unit id="86f3e3a3612b0943158133c984400a8f5cc0980e" translate="yes" xml:space="preserve">
          <source>Form field label text. See the LABEL element definition in HTML 4.0.</source>
          <target state="translated">양식 필드 레이블 텍스트. HTML 4.0의 LABEL 요소 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f8da4c6326fb637b2f9272903fa59e8779424979" translate="yes" xml:space="preserve">
          <source>Form the list of return types (in clause order), omitting all occurrences of &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">반환 유형 목록 (절 순서대로)을 구성하고 &lt;code&gt;void&lt;/code&gt; 를 모두 생략합니다 .</target>
        </trans-unit>
        <trans-unit id="58bc8d840f13f2aa6d5e8156e1fe4a711b1790a1" translate="yes" xml:space="preserve">
          <source>FormAction</source>
          <target state="translated">FormAction</target>
        </trans-unit>
        <trans-unit id="29a85675fe66fe8e6532f318420e4f1524cb9d4e" translate="yes" xml:space="preserve">
          <source>FormSubmitEvent</source>
          <target state="translated">FormSubmitEvent</target>
        </trans-unit>
        <trans-unit id="6c0da694941094618e6e144d8c557f655973519c" translate="yes" xml:space="preserve">
          <source>FormSubmitEvent is used to notify interested parties that a form was submitted.</source>
          <target state="translated">FormSubmitEvent는 양식이 제출되었음을 이해 당사자에게 알리는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d989329d84d432a6d2e3ade91d913cd3a1f3c3bc" translate="yes" xml:space="preserve">
          <source>FormSubmitEvent.MethodType</source>
          <target state="translated">FormSubmitEvent.MethodType</target>
        </trans-unit>
        <trans-unit id="c34f993c9e5f06888785af71ab0173c412b97960" translate="yes" xml:space="preserve">
          <source>FormView</source>
          <target state="translated">FormView</target>
        </trans-unit>
        <trans-unit id="a9f27196158fedc001eb2410797af212b59869fa" translate="yes" xml:space="preserve">
          <source>FormView.MouseEventListener</source>
          <target state="translated">FormView.MouseEventListener</target>
        </trans-unit>
        <trans-unit id="c232e93c157d8ff6df15790349e5f218511859e4" translate="yes" xml:space="preserve">
          <source>Formal parameter declaration</source>
          <target state="translated">공식 매개 변수 선언</target>
        </trans-unit>
        <trans-unit id="b547394b3b9aa7e3fdb1acc6e742bf32f412025b" translate="yes" xml:space="preserve">
          <source>Formally the computation is defined as follows. First, we can assume that two &lt;code&gt;Duration&lt;/code&gt;s are both positive without losing generality. (i.e., &lt;code&gt;(-X)-Y=-(X+Y)&lt;/code&gt;, &lt;code&gt;X-(-Y)=X+Y&lt;/code&gt;, &lt;code&gt;(-X)-(-Y)=-(X-Y)&lt;/code&gt;)</source>
          <target state="translated">공식적으로 계산은 다음과 같이 정의됩니다. 첫째, 두 개의 &lt;code&gt;Duration&lt;/code&gt; 은 일반성을 잃지 않고 모두 양수 라고 가정 할 수 있습니다 . (즉, &lt;code&gt;(-X)-Y=-(X+Y)&lt;/code&gt; , &lt;code&gt;X-(-Y)=X+Y&lt;/code&gt; , &lt;code&gt;(-X)-(-Y)=-(X-Y)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8168ab7b1148461cbeb5cb0070afdd613dac8dbd" translate="yes" xml:space="preserve">
          <source>Formally, the computation is defined as follows.</source>
          <target state="translated">공식적으로 계산은 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="9a67d939d17da1c3e4bd65461e1391834195935d" translate="yes" xml:space="preserve">
          <source>Formally, the computation is done as follows:</source>
          <target state="translated">공식적으로 계산은 다음과 같이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="ba429414c74079c2156fd97089b7aa008df8b44e" translate="yes" xml:space="preserve">
          <source>Formally, the following holds for any &lt;code&gt;Duration&lt;/code&gt;&lt;code&gt;Object&lt;/code&gt; x:</source>
          <target state="translated">공식적으로 다음은 모든 &lt;code&gt;Duration&lt;/code&gt; &lt;code&gt;Object&lt;/code&gt; x에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="e0e31adb6cc861ffe4700cf93625baf412604bf7" translate="yes" xml:space="preserve">
          <source>Format String Syntax</source>
          <target state="translated">형식 문자열 구문</target>
        </trans-unit>
        <trans-unit id="f531d541f5613113b7c853d36bf388cf8a0c233d" translate="yes" xml:space="preserve">
          <source>Format a LogRecord into a standard XML format.</source>
          <target state="translated">LogRecord를 표준 XML 형식으로 형식화하십시오.</target>
        </trans-unit>
        <trans-unit id="04e6011f57b4d7c03296826caf852d4e6c1c8796" translate="yes" xml:space="preserve">
          <source>Format a long to produce a string.</source>
          <target state="translated">문자열을 생성하려면 long 형식을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="ae2ffe5a7a236541d8dd38a2b35d11b8ed237835" translate="yes" xml:space="preserve">
          <source>Format and publish a &lt;code&gt;LogRecord&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LogRecord&lt;/code&gt; 를 형식화하고 공개하십시오 .</target>
        </trans-unit>
        <trans-unit id="40fe786e1cb4c2e3fc346b6346949102b40ff14b" translate="yes" xml:space="preserve">
          <source>Format identifier. O means the OSI CCR format.</source>
          <target state="translated">형식 식별자. O는 OSI CCR 형식을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="78f46621d9683df48e3daa89a9237afa18bbe597" translate="yes" xml:space="preserve">
          <source>Format instance used for converting from/to Strings</source>
          <target state="translated">문자열 변환에 사용되는 형식 인스턴스</target>
        </trans-unit>
        <trans-unit id="9e613d3ff5aba0492bf29fcc59a7b0e5f6759964" translate="yes" xml:space="preserve">
          <source>Format specifiers can reference arguments in three ways:</source>
          <target state="translated">형식 지정자는 세 가지 방법으로 인수를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71e82333b671f19dfc603692509556dcfffc70d1" translate="yes" xml:space="preserve">
          <source>Format the &lt;code&gt;BigDecimal&lt;/code&gt; as a decimal number.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 을 10 진수로 형식화하십시오 .</target>
        </trans-unit>
        <trans-unit id="7076f5049495f161d64978e61538fda9e34ca46e" translate="yes" xml:space="preserve">
          <source>Format the &lt;code&gt;BigDecimal&lt;/code&gt; in computerized scientific notation.</source>
          <target state="translated">컴퓨터 화 된 과학 표기법으로 &lt;code&gt;BigDecimal&lt;/code&gt; 을 형식화하십시오 .</target>
        </trans-unit>
        <trans-unit id="8926957abccd383147f72e6cc92305b1a9cb0fab" translate="yes" xml:space="preserve">
          <source>Format the given LogRecord.</source>
          <target state="translated">주어진 LogRecord를 포맷하십시오.</target>
        </trans-unit>
        <trans-unit id="c75529fcb251f3b2ccfd0d825d210ae6f152b712" translate="yes" xml:space="preserve">
          <source>Format the given log record and return the formatted string.</source>
          <target state="translated">주어진 로그 레코드를 형식화하고 형식화 된 문자열을 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="664761aede593637664129c3039e828e577b1efa" translate="yes" xml:space="preserve">
          <source>Format the given message to XML.</source>
          <target state="translated">주어진 메시지를 XML로 형식화하십시오.</target>
        </trans-unit>
        <trans-unit id="568d6e3238de37c4ce635fc088441f7e5b62a0cd" translate="yes" xml:space="preserve">
          <source>Format.Field</source>
          <target state="translated">Format.Field</target>
        </trans-unit>
        <trans-unit id="17b45075ee0434d1d3bcaea22c022ed6d6419499" translate="yes" xml:space="preserve">
          <source>Format.Field constants associated with the text at the given position.</source>
          <target state="translated">지정된 위치에서 텍스트와 관련된 Format.Field 상수입니다.</target>
        </trans-unit>
        <trans-unit id="0a4d1139c52c45a3084446e69c46f83d34a51f0c" translate="yes" xml:space="preserve">
          <source>Format.clone()</source>
          <target state="translated">Format.clone()</target>
        </trans-unit>
        <trans-unit id="0df50e364976426751d2bcf69343ab4001064807" translate="yes" xml:space="preserve">
          <source>Format.format()</source>
          <target state="translated">Format.format()</target>
        </trans-unit>
        <trans-unit id="0ced8f81caf0da4ac0dfc0eba834286734d88d3f" translate="yes" xml:space="preserve">
          <source>Format.formatToCharacterIterator()</source>
          <target state="translated">Format.formatToCharacterIterator()</target>
        </trans-unit>
        <trans-unit id="3e467ba00a6a3b8abc3bd44c809e3d589436b4d1" translate="yes" xml:space="preserve">
          <source>Format.parseObject()</source>
          <target state="translated">Format.parseObject()</target>
        </trans-unit>
        <trans-unit id="dcdcdb1e1335fbf3b14ef4fce03347d948ed4048" translate="yes" xml:space="preserve">
          <source>Format: &quot;RAW&quot;</source>
          <target state="translated">형식 : &quot;RAW&quot;</target>
        </trans-unit>
        <trans-unit id="9df120b5cbab90d63a2d0715c4be0010f9933f1d" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider</source>
          <target state="translated">FormatConversionProvider</target>
        </trans-unit>
        <trans-unit id="9b0236c42f4b1c55f31dc51c6b16246f0024b98f" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.getAudioInputStream()</source>
          <target state="translated">FormatConversionProvider.getAudioInputStream()</target>
        </trans-unit>
        <trans-unit id="bcda1d0483ec19f835f2069ed89711071d6a6159" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.getSourceEncodings()</source>
          <target state="translated">FormatConversionProvider.getSourceEncodings()</target>
        </trans-unit>
        <trans-unit id="66eaee8c30598e5d40566ae6742f7cebe650d5a0" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.getTargetEncodings()</source>
          <target state="translated">FormatConversionProvider.getTargetEncodings()</target>
        </trans-unit>
        <trans-unit id="6c2cf875bc1836ab1258a6f0f8d189cfd43155e0" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.getTargetFormats()</source>
          <target state="translated">FormatConversionProvider.getTargetFormats()</target>
        </trans-unit>
        <trans-unit id="11a5d55a4cbc0b2be37622296b521a52db1d0825" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.isConversionSupported()</source>
          <target state="translated">FormatConversionProvider.isConversionSupported()</target>
        </trans-unit>
        <trans-unit id="131c566041bead3406f2d986da597583b8ec36d9" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.isSourceEncodingSupported()</source>
          <target state="translated">FormatConversionProvider.isSourceEncodingSupported()</target>
        </trans-unit>
        <trans-unit id="4f9999fe896487bae407fc43e5c49bbbe4879efd" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.isTargetEncodingSupported()</source>
          <target state="translated">FormatConversionProvider.isTargetEncodingSupported()</target>
        </trans-unit>
        <trans-unit id="db383ed0e067b8f757f7b98b368d2afe5c7313d9" translate="yes" xml:space="preserve">
          <source>FormatElement</source>
          <target state="translated">FormatElement</target>
        </trans-unit>
        <trans-unit id="412dca0cbf64716453dbf40f4f38618282c9db98" translate="yes" xml:space="preserve">
          <source>FormatFlagsConversionMismatchException</source>
          <target state="translated">FormatFlagsConversionMismatchException</target>
        </trans-unit>
        <trans-unit id="1c066917f62e00249cbf26f067524db353a8e820" translate="yes" xml:space="preserve">
          <source>FormatFlagsConversionMismatchException.getConversion()</source>
          <target state="translated">FormatFlagsConversionMismatchException.getConversion()</target>
        </trans-unit>
        <trans-unit id="15da17fbdd9c43b5956dad3cae4b34ed59242a4e" translate="yes" xml:space="preserve">
          <source>FormatFlagsConversionMismatchException.getFlags()</source>
          <target state="translated">FormatFlagsConversionMismatchException.getFlags()</target>
        </trans-unit>
        <trans-unit id="19963e30c388216c737deca1e7a2454088da9869" translate="yes" xml:space="preserve">
          <source>FormatFlagsConversionMismatchException.getMessage()</source>
          <target state="translated">FormatFlagsConversionMismatchException.getMessage()</target>
        </trans-unit>
        <trans-unit id="1a635b1e375ae58994f98e2dafdb962dda0f1247" translate="yes" xml:space="preserve">
          <source>FormatStyle</source>
          <target state="translated">FormatStyle</target>
        </trans-unit>
        <trans-unit id="21fe696c76bc40f63a4659f3f62bdde305c3f921" translate="yes" xml:space="preserve">
          <source>FormatStyle.valueOf()</source>
          <target state="translated">FormatStyle.valueOf()</target>
        </trans-unit>
        <trans-unit id="3193a241219c0156048d278b1c6c46750899a195" translate="yes" xml:space="preserve">
          <source>FormatStyle.values()</source>
          <target state="translated">FormatStyle.values()</target>
        </trans-unit>
        <trans-unit id="a577d37f0089a3ba893412a7be689f31f9997051" translate="yes" xml:space="preserve">
          <source>FormatType</source>
          <target state="translated">FormatType</target>
        </trans-unit>
        <trans-unit id="4d564dfb2534b5a8fabedc87954bce9e0f66c438" translate="yes" xml:space="preserve">
          <source>Formats a &lt;a href=&quot;../util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; into a date-time string.</source>
          <target state="translated">포맷 &lt;a href=&quot;../util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 날짜 - 시간 문자열로합니다.</target>
        </trans-unit>
        <trans-unit id="5b4f5f799cb36ddff2082d5b48b5b543f6d03c75" translate="yes" xml:space="preserve">
          <source>Formats a &lt;a href=&quot;../util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; into a date-time string. The formatted string is appended to the given &lt;code&gt;StringBuffer&lt;/code&gt;.</source>
          <target state="translated">포맷 &lt;a href=&quot;../util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 날짜 - 시간 문자열로합니다. 형식화 된 문자열이 지정된 &lt;code&gt;StringBuffer&lt;/code&gt; 에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="07073d6e0f6c54cdcb241bb922b045b2fd8d9e05" translate="yes" xml:space="preserve">
          <source>Formats a Date into a date/time string.</source>
          <target state="translated">날짜를 날짜 / 시간 문자열로 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="d895c48c811c4a15b835a302b66aae80bd7bfb83" translate="yes" xml:space="preserve">
          <source>Formats a date in the date escape format yyyy-mm-dd.</source>
          <target state="translated">날짜 이스케이프 형식 yyyy-mm-dd로 날짜를 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="54f8fd862c2a92d11dcde61cfc7f6d8e793d879d" translate="yes" xml:space="preserve">
          <source>Formats a date-time object to an &lt;code&gt;Appendable&lt;/code&gt; using this formatter.</source>
          <target state="translated">이 포맷터를 사용하여 날짜-시간 객체를 &lt;code&gt;Appendable&lt;/code&gt; 로 포맷합니다.</target>
        </trans-unit>
        <trans-unit id="9be1bf7a7f7e377cf813b5f734ac2e3d2a2aa436" translate="yes" xml:space="preserve">
          <source>Formats a date-time object using this formatter.</source>
          <target state="translated">이 포맷터를 사용하여 날짜-시간 객체를 포맷합니다.</target>
        </trans-unit>
        <trans-unit id="2ea4b02a698ffd70e20c0bc95795dda05c4da5b5" translate="yes" xml:space="preserve">
          <source>Formats a double to produce a string representing its compact form.</source>
          <target state="translated">double 형식을 지정하여 압축 형식을 나타내는 문자열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="0bf02beedd6f1bce58518eddc5808fefdade7b69" translate="yes" xml:space="preserve">
          <source>Formats a double to produce a string.</source>
          <target state="translated">문자열을 생성하기 위해 double을 포맷합니다.</target>
        </trans-unit>
        <trans-unit id="2aaf6b450fc4ef07da6fda4aa4d75590adf1828c" translate="yes" xml:space="preserve">
          <source>Formats a long to produce a string representing its compact form.</source>
          <target state="translated">long 형식을 지정하여 압축 형식을 나타내는 문자열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="112e331e98d840c220f1dc8f00487d91925c3d95" translate="yes" xml:space="preserve">
          <source>Formats a number and appends the resulting text to the given string buffer.</source>
          <target state="translated">숫자를 형식화하고 결과 텍스트를 주어진 문자열 버퍼에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="d04e67cc414adf66ebecc3ce08b87154e076b882" translate="yes" xml:space="preserve">
          <source>Formats a number and appends the resulting text to the given string buffer. The number can be of any subclass of &lt;a href=&quot;../lang/number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">숫자를 포맷하고 결과 문자열을 주어진 문자열 버퍼에 추가합니다. 숫자는 &lt;a href=&quot;../lang/number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; 의&lt;/a&gt; 서브 클래스 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6af93d8ac8831bbfcefd34453745cbe5dee11e8c" translate="yes" xml:space="preserve">
          <source>Formats a number to produce a string representing its compact form.</source>
          <target state="translated">숫자 형식을 지정하여 압축 형식을 나타내는 문자열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="731ebfb98425d98ec93d25e054510745ff003307" translate="yes" xml:space="preserve">
          <source>Formats a number to produce a string representing its compact form. The number can be of any subclass of &lt;a href=&quot;../lang/number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">숫자 형식을 지정하여 압축 형식을 나타내는 문자열을 생성합니다. 번호는 &lt;a href=&quot;../lang/number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; 의 모든 하위 클래스가 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4c38a6c1e349504e7c81867767dd8fa321e52f5d" translate="yes" xml:space="preserve">
          <source>Formats a time in JDBC time escape format.</source>
          <target state="translated">JDBC 시간 이스케이프 형식으로 시간을 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="a635ecde511422bb0806f2d67e35eb5cd42f3049" translate="yes" xml:space="preserve">
          <source>Formats a timestamp in JDBC timestamp escape format.</source>
          <target state="translated">JDBC 타임 스탬프 이스케이프 형식으로 타임 스탬프를 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="54a0aaa2ae5f803534da575b822ef04706be6745" translate="yes" xml:space="preserve">
          <source>Formats a timestamp in JDBC timestamp escape format. &lt;code&gt;yyyy-mm-dd hh:mm:ss.fffffffff&lt;/code&gt;, where &lt;code&gt;fffffffff&lt;/code&gt; indicates nanoseconds.</source>
          <target state="translated">JDBC 타임 스탬프 이스케이프 형식으로 타임 스탬프를 형식화합니다. &lt;code&gt;yyyy-mm-dd hh:mm:ss.fffffffff&lt;/code&gt; , 여기서 &lt;code&gt;fffffffff&lt;/code&gt; 는 나노초를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="724afb2150bad053f43b86fef598f4a48739a4e6" translate="yes" xml:space="preserve">
          <source>Formats an Object producing an &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 를 생성하는 객체를 포맷합니다 .</target>
        </trans-unit>
        <trans-unit id="0665c20061fe5f4b47c2dff46ad0383201d84aa3" translate="yes" xml:space="preserve">
          <source>Formats an Object producing an &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;. The returned &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; can be used to build the resulting string, as well as to determine information about the resulting string.</source>
          <target state="translated">&lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 를 생성하는 객체를 포맷합니다 . 반환 된 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 는 결과 문자열을 빌드하고 결과 문자열에 대한 정보를 결정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7869ed7c2765ecd200324b00ea3d1d924e8762e0" translate="yes" xml:space="preserve">
          <source>Formats an Object producing an &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;. You can use the returned &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; to build the resulting String, as well as to determine information about the resulting String.</source>
          <target state="translated">&lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 를 생성하는 Object 형식을 지정합니다 . 리턴 된 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 를 사용하여 결과 문자열을 빌드하고 결과 문자열에 대한 정보를 판별 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="935d245fe455147d9c757e999ebd8388d0b692bf" translate="yes" xml:space="preserve">
          <source>Formats an array of objects and appends the &lt;code&gt;MessageFormat&lt;/code&gt;'s pattern, with format elements replaced by the formatted objects, to the provided &lt;code&gt;StringBuffer&lt;/code&gt;.</source>
          <target state="translated">객체의 배열을 포맷 해, 포맷 된 객체에 의해 포맷 요소를 &lt;code&gt;MessageFormat&lt;/code&gt; 패턴을 제공된 &lt;code&gt;StringBuffer&lt;/code&gt; 에 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="7c03c37cf08dd4617eecfb4b80423fbece656cbd" translate="yes" xml:space="preserve">
          <source>Formats an array of objects and appends the &lt;code&gt;MessageFormat&lt;/code&gt;'s pattern, with format elements replaced by the formatted objects, to the provided &lt;code&gt;StringBuffer&lt;/code&gt;. This is equivalent to</source>
          <target state="translated">객체의 배열을 포맷 해, 포맷 된 객체에 의해 포맷 요소를 &lt;code&gt;MessageFormat&lt;/code&gt; 패턴을 제공된 &lt;code&gt;StringBuffer&lt;/code&gt; 에 추가 합니다. 이것은</target>
        </trans-unit>
        <trans-unit id="dc17b532fb50dda274c6bd3b042cf1935b3b091d" translate="yes" xml:space="preserve">
          <source>Formats an array of objects and inserts them into the &lt;code&gt;MessageFormat&lt;/code&gt;'s pattern, producing an &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;.</source>
          <target state="translated">객체의 배열을 형식화하고이를 &lt;code&gt;MessageFormat&lt;/code&gt; 의 패턴에 삽입 하여 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="21297b414ce0029faaca682aeb10c15afb91174c" translate="yes" xml:space="preserve">
          <source>Formats an array of objects and inserts them into the &lt;code&gt;MessageFormat&lt;/code&gt;'s pattern, producing an &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;. You can use the returned &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; to build the resulting String, as well as to determine information about the resulting String.</source>
          <target state="translated">객체 배열을 &lt;code&gt;MessageFormat&lt;/code&gt; 하고 MessageFormat 의 패턴에 삽입 하여 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 를 생성합니다 . 리턴 된 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 를 사용하여 결과 문자열을 빌드하고 결과 문자열에 대한 정보를 판별 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9cea71f618fb3ffb49644be00236b83d57f0606f" translate="yes" xml:space="preserve">
          <source>Formats an object and appends the resulting text to a given string buffer.</source>
          <target state="translated">개체를 형식화하고 결과 텍스트를 지정된 문자열 버퍼에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="1a22d7749925a09720265c0ac9d11263b68df807" translate="yes" xml:space="preserve">
          <source>Formats an object and appends the resulting text to a given string buffer. If the &lt;code&gt;pos&lt;/code&gt; argument identifies a field used by the format, then its indices are set to the beginning and end of the first such field encountered.</source>
          <target state="translated">객체를 포맷하고 결과 문자열을 주어진 문자열 버퍼에 추가합니다. 경우] &lt;code&gt;pos&lt;/code&gt; 인수 식별 형식에 의해 이용되는 필드는 다음 인덱스가 발생한 최초의 필드의 시작 부분과 끝 부분에 설정된다.</target>
        </trans-unit>
        <trans-unit id="37ed6a3230e4949ccf7355a51282ad42ea2737e5" translate="yes" xml:space="preserve">
          <source>Formats an object to produce a string.</source>
          <target state="translated">개체를 형식화하여 문자열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3a28e2667660d3aa12cbe5d58992c3eadbf6aa76" translate="yes" xml:space="preserve">
          <source>Formats an object to produce a string. This is equivalent to</source>
          <target state="translated">문자열을 생성하도록 객체를 포맷합니다. 이것은</target>
        </trans-unit>
        <trans-unit id="7c0a5adf713797b1e88d1ed1b05fb283e5fc9075" translate="yes" xml:space="preserve">
          <source>Formats are generally not synchronized. It is recommended to create separate format instances for each thread. If multiple threads access a format concurrently, it must be synchronized externally.</source>
          <target state="translated">형식은 일반적으로 동기화되지 않습니다. 각 스레드마다 별도의 형식 인스턴스를 작성하는 것이 좋습니다. 여러 스레드가 동시에 형식에 액세스하는 경우 외부에서 동기화해야합니다.</target>
        </trans-unit>
        <trans-unit id="aefb58f1cc1cb3eb81f84a3c57abd7926f4f2238" translate="yes" xml:space="preserve">
          <source>Formats such as &quot;raw,&quot; which can potentially attempt to read nearly any stream, should return &lt;code&gt;false&lt;/code&gt; in order to avoid being invoked in preference to a closer match.</source>
          <target state="translated">거의 모든 스트림을 읽으려고 시도 할 수있는 &quot;raw&quot;와 같은 형식 은 더 가까운 일치에 우선하여 호출되지 않도록 &lt;code&gt;false&lt;/code&gt; 를 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="312a5f525f8b10dfb4ad63090301d64356edce01" translate="yes" xml:space="preserve">
          <source>Formats the argument as a Unicode character as described in &lt;a href=&quot;../lang/character#unicode&quot;&gt;Unicode Character Representation&lt;/a&gt;. This may be more than one 16-bit &lt;code&gt;char&lt;/code&gt; in the case where the argument represents a supplementary character.</source>
          <target state="translated">&lt;a href=&quot;../lang/character#unicode&quot;&gt;유니 코드 문자 표현에&lt;/a&gt; 설명 된대로 인수를 유니 코드 문자로 형식화 합니다. 인수가 보충 문자를 나타내는 경우 16 비트 &lt;code&gt;char&lt;/code&gt; 이상이 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0570fb471e9afbb2f306caffe87460c9188dcc29" translate="yes" xml:space="preserve">
          <source>Formats the argument as a decimal integer. The &lt;a href=&quot;#L10nAlgorithm&quot;&gt;localization algorithm&lt;/a&gt; is applied.</source>
          <target state="translated">인수를 10 진 정수로 형식화합니다. &lt;a href=&quot;#L10nAlgorithm&quot;&gt;파악 알고리즘이&lt;/a&gt; 적용된다.</target>
        </trans-unit>
        <trans-unit id="3cfff0fa6dbf122d692c0742ddcf6c5629c7b0cb" translate="yes" xml:space="preserve">
          <source>Formats the argument as an integer in base eight. No localization is applied.</source>
          <target state="translated">기본 8에서 인수를 정수로 형식화합니다. 현지화가 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="abdda238fb46a84a701714dfa86485fddeb68760" translate="yes" xml:space="preserve">
          <source>Formats the argument as an integer in base sixteen. No localization is applied.</source>
          <target state="translated">기본 16 진에서 인수를 정수로 형식화합니다. 현지화가 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="55eeadb3f1c2dfee435c57ecf4db62a0d6032358" translate="yes" xml:space="preserve">
          <source>Formats the given &lt;code&gt;Date&lt;/code&gt; into a date/time string and appends the result to the given &lt;code&gt;StringBuffer&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;Date&lt;/code&gt; 를 날짜 / 시간 문자열로 형식화하고 결과를 주어진 &lt;code&gt;StringBuffer&lt;/code&gt; 에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="a19ac0f7123a01bbaed07c557a97d49e3cd0ec52" translate="yes" xml:space="preserve">
          <source>Formats the given &lt;code&gt;Object&lt;/code&gt; into a date-time string.</source>
          <target state="translated">주어진 &lt;code&gt;Object&lt;/code&gt; 를 날짜-시간 문자열로 포맷합니다 .</target>
        </trans-unit>
        <trans-unit id="b5163d7a45c0deabefaa7eb426556c9ad41dbb0b" translate="yes" xml:space="preserve">
          <source>Formats the given &lt;code&gt;Object&lt;/code&gt; into a date-time string. The formatted string is appended to the given &lt;code&gt;StringBuffer&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;Object&lt;/code&gt; 를 날짜-시간 문자열로 포맷합니다 . 형식화 된 문자열은 주어진 &lt;code&gt;StringBuffer&lt;/code&gt; 에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="74e028adfd5ea9f1e03ddc3e4aaec41d58efd862" translate="yes" xml:space="preserve">
          <source>Formats the object using the provided &lt;a href=&quot;formatter&quot;&gt;&lt;code&gt;formatter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">제공된 &lt;a href=&quot;formatter&quot;&gt; &lt;code&gt;formatter&lt;/code&gt; &lt;/a&gt; 사용하여 객체를 포맷 합니다.</target>
        </trans-unit>
        <trans-unit id="7d5d90b0b4d12a460062ea991f8fdf7f7e42e5f2" translate="yes" xml:space="preserve">
          <source>Formats this date using the specified formatter.</source>
          <target state="translated">지정된 포맷터를 사용하여이 날짜를 포맷합니다.</target>
        </trans-unit>
        <trans-unit id="21460715a9e761e72bd9b1e44f4ae8f543367854" translate="yes" xml:space="preserve">
          <source>Formats this date-time using the specified formatter.</source>
          <target state="translated">지정된 포맷터를 사용하여이 날짜-시간을 포맷합니다.</target>
        </trans-unit>
        <trans-unit id="50891c12b61aa2bbc0baa1a9008a341a319ab97b" translate="yes" xml:space="preserve">
          <source>Formats this month-day using the specified formatter.</source>
          <target state="translated">지정된 포맷터를 사용하여 이번 달의 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b33863404be77fa78615877db0a295721489855e" translate="yes" xml:space="preserve">
          <source>Formats this time using the specified formatter.</source>
          <target state="translated">이번에는 지정된 포맷터를 사용하여 포맷합니다.</target>
        </trans-unit>
        <trans-unit id="d8f653b32726183250759a52c2cf358e88df1902" translate="yes" xml:space="preserve">
          <source>Formats this year using the specified formatter.</source>
          <target state="translated">올해 지정된 포맷터를 사용하여 포맷합니다.</target>
        </trans-unit>
        <trans-unit id="f5dfa57ee3604286edab15ae77ed93a4c94f2f22" translate="yes" xml:space="preserve">
          <source>Formats this year-month using the specified formatter.</source>
          <target state="translated">지정된 포맷터를 사용하여 올해 한 달에 포맷합니다.</target>
        </trans-unit>
        <trans-unit id="ee72b0a2802a4004e2ed8dfbd23e7d0bf17e9e7f" translate="yes" xml:space="preserve">
          <source>Formats using this string as the format string, and the supplied arguments.</source>
          <target state="translated">이 문자열을 형식 문자열 및 제공된 인수로 사용하여 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="4f7c7364f655788e4b3118b68f3797a1b9213c05" translate="yes" xml:space="preserve">
          <source>Formattable</source>
          <target state="translated">Formattable</target>
        </trans-unit>
        <trans-unit id="24a5daf1c05412467919e0ab706235f8a90fecdc" translate="yes" xml:space="preserve">
          <source>Formattable.formatTo()</source>
          <target state="translated">Formattable.formatTo()</target>
        </trans-unit>
        <trans-unit id="cfa6c7a48792619cf5ad6d7179a2420ac429949a" translate="yes" xml:space="preserve">
          <source>FormattableFlags</source>
          <target state="translated">FormattableFlags</target>
        </trans-unit>
        <trans-unit id="1647870bbfd4c4e7eb98722f1f2217f1c51503b6" translate="yes" xml:space="preserve">
          <source>FormattableFlags are passed to the &lt;a href=&quot;formattable#formatTo(java.util.Formatter,int,int,int)&quot;&gt;&lt;code&gt;Formattable.formatTo()&lt;/code&gt;&lt;/a&gt; method and modify the output format for &lt;a href=&quot;formattable&quot;&gt;Formattables&lt;/a&gt;.</source>
          <target state="translated">FormattableFlags는에 전달 &lt;a href=&quot;formattable#formatTo(java.util.Formatter,int,int,int)&quot;&gt; &lt;code&gt;Formattable.formatTo()&lt;/code&gt; &lt;/a&gt; 방법에 대한 출력 포맷 수정 &lt;a href=&quot;formattable&quot;&gt;Formattable는이&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2e10af3c2869f4474eab6514b4e12aada331a46d" translate="yes" xml:space="preserve">
          <source>FormattableFlags are passed to the &lt;a href=&quot;formattable#formatTo(java.util.Formatter,int,int,int)&quot;&gt;&lt;code&gt;Formattable.formatTo()&lt;/code&gt;&lt;/a&gt; method and modify the output format for &lt;a href=&quot;formattable&quot;&gt;Formattables&lt;/a&gt;. Implementations of &lt;a href=&quot;formattable&quot;&gt;&lt;code&gt;Formattable&lt;/code&gt;&lt;/a&gt; are responsible for interpreting and validating any flags.</source>
          <target state="translated">FormattableFlags는에 전달 &lt;a href=&quot;formattable#formatTo(java.util.Formatter,int,int,int)&quot;&gt; &lt;code&gt;Formattable.formatTo()&lt;/code&gt; &lt;/a&gt; 방법에 대한 출력 포맷 수정 &lt;a href=&quot;formattable&quot;&gt;Formattable는이&lt;/a&gt; . &lt;a href=&quot;formattable&quot;&gt; &lt;code&gt;Formattable&lt;/code&gt; 의&lt;/a&gt; 구현은 모든 플래그를 해석하고 검증 할 책임이 있습니다.</target>
        </trans-unit>
        <trans-unit id="787f0634c99e31e8d07616a8164a5dd380caba61" translate="yes" xml:space="preserve">
          <source>Formattables are not necessarily safe for multithreaded access. Thread safety is optional and may be enforced by classes that extend and implement this interface.</source>
          <target state="translated">포맷팅 테이블은 멀티 스레드 액세스에 반드시 안전한 것은 아닙니다. 스레드 안전성은 선택 사항이며이 인터페이스를 확장하고 구현하는 클래스에 의해 시행 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="032e219ce652424b62e2f5cbcae7876f52a41343" translate="yes" xml:space="preserve">
          <source>Formatted Text</source>
          <target state="translated">서식있는 텍스트</target>
        </trans-unit>
        <trans-unit id="186bfa811d3c12e2d6d2a163cd1d14fa1220da87" translate="yes" xml:space="preserve">
          <source>Formatted printing for the Java language is heavily inspired by C's &lt;code&gt;printf&lt;/code&gt;. Although the format strings are similar to C, some customizations have been made to accommodate the Java language and exploit some of its features. Also, Java formatting is more strict than C's; for example, if a conversion is incompatible with a flag, an exception will be thrown. In C inapplicable flags are silently ignored. The format strings are thus intended to be recognizable to C programmers but not necessarily completely compatible with those in C.</source>
          <target state="translated">Java 언어의 형식화 된 인쇄는 C의 &lt;code&gt;printf&lt;/code&gt; 에서 많은 영향을받습니다 . 형식 문자열은 C와 유사하지만 Java 언어를 수용하고 일부 기능을 활용하도록 일부 사용자 정의가 수행되었습니다. 또한 Java 형식화는 C보다 더 엄격합니다. 예를 들어, 변환이 플래그와 호환되지 않으면 예외가 발생합니다. C에서는 적용 할 수없는 플래그는 자동으로 무시됩니다. 따라서 형식 문자열은 C 프로그래머가 인식 할 수 있지만 C 언어와 완전히 호환되는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="224a21b58aa618be5c77da4364e1d8dc9574f3e2" translate="yes" xml:space="preserve">
          <source>Formatted string.</source>
          <target state="translated">형식화 된 문자열.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
