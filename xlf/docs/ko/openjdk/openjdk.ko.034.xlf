<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="cacba501db40175a13ef41b80f586a906ebcc5f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DatabaseMetaData&lt;/code&gt; methods to return PseudoColumns and if a generated key is always returned</source>
          <target state="translated">&lt;code&gt;DatabaseMetaData&lt;/code&gt; PseudoColumns를 반환하고 생성 된 키가 항상 반환되는 경우 DatabaseMetaData 메서드</target>
        </trans-unit>
        <trans-unit id="aa32dfe10e8a610bc08ac344c2fad5ce58a2f68d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DatabaseMetaData&lt;/code&gt; methods to return maximum Logical LOB size and if Ref Cursors are supported</source>
          <target state="translated">&lt;code&gt;DatabaseMetaData&lt;/code&gt; 최대 논리적 LOB 크기를 반환하고 참조 커서가 지원되는 경우 DatabaseMetaData 메서드</target>
        </trans-unit>
        <trans-unit id="50a1a5b584a01d2242b7dbee0459dde430cac23f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Date&lt;/code&gt; class -- mapping for SQL &lt;code&gt;DATE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Date&lt;/code&gt; 클래스-SQL &lt;code&gt;DATE&lt;/code&gt; 매핑</target>
        </trans-unit>
        <trans-unit id="f1784f171a73635ccdb68cb9354974f2e943ea23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormat&lt;/code&gt; helps you to format and parse dates for any locale. Your code can be completely independent of the locale conventions for months, days of the week, or even the calendar format: lunar vs. solar.</source>
          <target state="translated">&lt;code&gt;DateFormat&lt;/code&gt; 을 사용하면 모든 로캘의 날짜를 형식화하고 구문 분석 할 수 있습니다. 코드는 월, 요일 또는 달력 형식 인 음력 대 태양에 대한 로캘 규칙과 완전히 독립적 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f50521d542dee5c5af6d8ea854e3ca1bd6ff74b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormat&lt;/code&gt; is an abstract class for date/time formatting subclasses which formats and parses dates or time in a language-independent manner.</source>
          <target state="translated">&lt;code&gt;DateFormat&lt;/code&gt; 은 언어 독립적 인 방식으로 날짜 또는 시간을 형식화하고 구문 분석하는 날짜 / 시간 형식화 서브 클래스에 대한 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="29f62771fd780387e1c2a9b447d2c5473efac054" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormat&lt;/code&gt; is an abstract class for date/time formatting subclasses which formats and parses dates or time in a language-independent manner. The date/time formatting subclass, such as &lt;a href=&quot;simpledateformat&quot;&gt;&lt;code&gt;SimpleDateFormat&lt;/code&gt;&lt;/a&gt;, allows for formatting (i.e., date &amp;rarr; text), parsing (text &amp;rarr; date), and normalization. The date is represented as a &lt;code&gt;Date&lt;/code&gt; object or as the milliseconds since January 1, 1970, 00:00:00 GMT.</source>
          <target state="translated">&lt;code&gt;DateFormat&lt;/code&gt; 은 언어 독립적 인 방식으로 날짜 또는 시간을 형식화하고 구문 분석하는 날짜 / 시간 형식화 서브 클래스에 대한 추상 클래스입니다. &lt;a href=&quot;simpledateformat&quot;&gt; &lt;code&gt;SimpleDateFormat&lt;/code&gt; &lt;/a&gt; 과 같은 날짜 / 시간 형식화 서브 클래스 는 형식화 (예 : 날짜 &amp;rarr; 텍스트), 구문 분석 (텍스트 &amp;rarr; 날짜) 및 정규화를 허용합니다. 날짜는 1970 년 1 월 1 일 00:00:00 GMT 이후 &lt;code&gt;Date&lt;/code&gt; 객체 또는 밀리 초로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="db10af39b813a7b46842289dc7d504656eca81b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormat&lt;/code&gt; provides many class methods for obtaining default date/time formatters based on the default or a given locale and a number of formatting styles. The formatting styles include &lt;a href=&quot;#FULL&quot;&gt;&lt;code&gt;FULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#LONG&quot;&gt;&lt;code&gt;LONG&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#MEDIUM&quot;&gt;&lt;code&gt;MEDIUM&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#SHORT&quot;&gt;&lt;code&gt;SHORT&lt;/code&gt;&lt;/a&gt;. More detail and examples of using these styles are provided in the method descriptions.</source>
          <target state="translated">&lt;code&gt;DateFormat&lt;/code&gt; 은 기본 또는 지정된 로케일 및 여러 형식화 스타일을 기반으로 기본 날짜 / 시간 포맷터를 얻기위한 많은 클래스 메소드를 제공합니다. 서식 스타일에는 &lt;a href=&quot;#FULL&quot;&gt; &lt;code&gt;FULL&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#LONG&quot;&gt; &lt;code&gt;LONG&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#MEDIUM&quot;&gt; &lt;code&gt;MEDIUM&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#SHORT&quot;&gt; &lt;code&gt;SHORT&lt;/code&gt; 가&lt;/a&gt; 있습니다. 이러한 스타일 사용에 대한 자세한 내용과 예제는 메서드 설명에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="5b035c794cb89fd3270eb68d8bbd9da71d5ac1e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormat&lt;/code&gt; provides many class methods for obtaining default date/time formatters based on the default or a given locale and a number of formatting styles. The formatting styles include &lt;a href=&quot;dateformat#FULL&quot;&gt;&lt;code&gt;FULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dateformat#LONG&quot;&gt;&lt;code&gt;LONG&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dateformat#MEDIUM&quot;&gt;&lt;code&gt;MEDIUM&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;dateformat#SHORT&quot;&gt;&lt;code&gt;SHORT&lt;/code&gt;&lt;/a&gt;. More detail and examples of using these styles are provided in the method descriptions.</source>
          <target state="translated">&lt;code&gt;DateFormat&lt;/code&gt; 은 기본 또는 지정된 로캘 및 여러 서식 스타일을 기반으로 기본 날짜 / 시간 포맷터를 얻기위한 많은 클래스 메서드를 제공합니다. 서식 스타일에는 &lt;a href=&quot;dateformat#FULL&quot;&gt; &lt;code&gt;FULL&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;dateformat#LONG&quot;&gt; &lt;code&gt;LONG&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;dateformat#MEDIUM&quot;&gt; &lt;code&gt;MEDIUM&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;dateformat#SHORT&quot;&gt; &lt;code&gt;SHORT&lt;/code&gt; 가&lt;/a&gt; 있습니다. 이러한 스타일 사용에 대한 자세한 내용과 예제는 메소드 설명에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="7102570a3872fc2eccd96900b02ead6fa6e5467b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormatSymbols&lt;/code&gt; is a public class for encapsulating localizable date-time formatting data, such as the names of the months, the names of the days of the week, and the time zone data.</source>
          <target state="translated">&lt;code&gt;DateFormatSymbols&lt;/code&gt; 는 월 이름, 요일 이름 및 시간대 데이터와 같이 지역화 가능한 날짜-시간 형식화 데이터를 캡슐화하기위한 공용 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="f17c3accd23ff6eb64c0dd51be77e36f0a89b198" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormatSymbols&lt;/code&gt; is a public class for encapsulating localizable date-time formatting data, such as the names of the months, the names of the days of the week, and the time zone data. &lt;code&gt;SimpleDateFormat&lt;/code&gt; uses &lt;code&gt;DateFormatSymbols&lt;/code&gt; to encapsulate this information.</source>
          <target state="translated">&lt;code&gt;DateFormatSymbols&lt;/code&gt; 는 월 이름, 요일 이름 및 시간대 데이터와 같이 지역화 가능한 날짜-시간 형식화 데이터를 캡슐화하기위한 공용 클래스입니다. &lt;code&gt;SimpleDateFormat&lt;/code&gt; 은 &lt;code&gt;DateFormatSymbols&lt;/code&gt; 를 사용하여이 정보를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="b931b83548968bc9b09b5a12dc104ee6f1e36cfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormatSymbols&lt;/code&gt; objects are cloneable. When you obtain a &lt;code&gt;DateFormatSymbols&lt;/code&gt; object, feel free to modify the date-time formatting data. For instance, you can replace the localized date-time format pattern characters with the ones that you feel easy to remember. Or you can change the representative cities to your favorite ones.</source>
          <target state="translated">&lt;code&gt;DateFormatSymbols&lt;/code&gt; 객체는 복제 가능합니다. &lt;code&gt;DateFormatSymbols&lt;/code&gt; 객체 를 얻을 때 날짜-시간 형식화 데이터를 자유롭게 수정하십시오. 예를 들어 현지화 된 날짜-시간 형식 패턴 문자를 기억하기 쉬운 문자로 바꿀 수 있습니다. 또는 대표 도시를 좋아하는 도시로 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba14072c622b98365c8f93d49048f23cac5387bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DayOfWeek&lt;/code&gt; is an enum representing the 7 days of the week - Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday.</source>
          <target state="translated">&lt;code&gt;DayOfWeek&lt;/code&gt; 는 월요일, 화요일, 수요일, 목요일, 금요일, 토요일 및 일요일의 7 일을 나타내는 열거 형입니다.</target>
        </trans-unit>
        <trans-unit id="7aa33573e5e4c4ee84673e9a302c8f8b44547021" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DayOfWeek&lt;/code&gt; is an enum representing the 7 days of the week. This factory allows the enum to be obtained from the &lt;code&gt;int&lt;/code&gt; value. The &lt;code&gt;int&lt;/code&gt; value follows the ISO-8601 standard, from 1 (Monday) to 7 (Sunday).</source>
          <target state="translated">&lt;code&gt;DayOfWeek&lt;/code&gt; 는 주 7 일을 나타내는 열거 형입니다. 이 팩토리는, 열거 치를 &lt;code&gt;int&lt;/code&gt; 치 로부터 취득 할 수 있도록합니다 . &lt;code&gt;int&lt;/code&gt; 값은 7 일 (일요일)에 대한 ISO-8601 표준, 1 일 (월)에 따른다.</target>
        </trans-unit>
        <trans-unit id="4dd1311030562ce950b326d49e5d1cbf37181043" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DayOfWeek&lt;/code&gt; returns &lt;code&gt;DAYS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DayOfWeek&lt;/code&gt; 는 &lt;code&gt;DAYS&lt;/code&gt; 를 반환합니다</target>
        </trans-unit>
        <trans-unit id="c91c3a0022f19f52c352b7d692a4c1367bc2738b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DayOfWeek&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;DayOfWeek&lt;/code&gt; 는 null을 반환</target>
        </trans-unit>
        <trans-unit id="312f426d7d11f3683c933095b436500109d070f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DayOfWeek&lt;/code&gt; returns null (shared across chronologies)</source>
          <target state="translated">&lt;code&gt;DayOfWeek&lt;/code&gt; 는 null을 반환합니다 (연대순 공유).</target>
        </trans-unit>
        <trans-unit id="36f3ee3ea939b71acf1555d4ffe33a177f2bf4ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DecimalFormat&lt;/code&gt; is a concrete subclass of &lt;code&gt;NumberFormat&lt;/code&gt; that formats decimal numbers.</source>
          <target state="translated">&lt;code&gt;DecimalFormat&lt;/code&gt; 은 10 진수를 형식화 하는 &lt;code&gt;NumberFormat&lt;/code&gt; 의 구체적인 하위 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="1e06e90b92f127303652caaf26a73456f99be709" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DecimalFormat&lt;/code&gt; is a concrete subclass of &lt;code&gt;NumberFormat&lt;/code&gt; that formats decimal numbers. It has a variety of features designed to make it possible to parse and format numbers in any locale, including support for Western, Arabic, and Indic digits. It also supports different kinds of numbers, including integers (123), fixed-point numbers (123.4), scientific notation (1.23E4), percentages (12%), and currency amounts ($123). All of these can be localized.</source>
          <target state="translated">&lt;code&gt;DecimalFormat&lt;/code&gt; 은 10 진수를 형식화 하는 &lt;code&gt;NumberFormat&lt;/code&gt; 의 구체적인 하위 클래스입니다 . Western, Arabic 및 Indic 자릿수 지원을 포함하여 모든 로케일에서 숫자를 구문 분석하고 형식화 할 수 있도록 설계된 다양한 기능이 있습니다. 또한 정수 (123), 고정 소수점 숫자 (123.4), 과학적 표기법 (1.23E4), 백분율 (12 %) 및 통화 금액 ($ 123)을 포함하여 다양한 종류의 숫자를 지원합니다. 이들 모두 현지화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="296ebefaa86f8a8a1d922cd3d2a1418a021465d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DecimalFormat&lt;/code&gt; parses all Unicode characters that represent decimal digits, as defined by &lt;code&gt;Character.digit()&lt;/code&gt;. In addition, &lt;code&gt;DecimalFormat&lt;/code&gt; also recognizes as digits the ten consecutive characters starting with the localized zero digit defined in the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;DecimalFormat&lt;/code&gt; 은 &lt;code&gt;Character.digit()&lt;/code&gt; 의해 정의 된 십진수를 나타내는 모든 유니 코드 문자를 구문 분석합니다 . 또한 &lt;code&gt;DecimalFormat&lt;/code&gt; 은 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; 객체에 정의 된 지역화 된 0 자리로 시작하는 10 개의 연속 문자를 숫자로 인식 합니다.</target>
        </trans-unit>
        <trans-unit id="73481d290bc9a0bc3a623a91a94f73d95954c437" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DecimalFormat&lt;/code&gt; patterns have the following syntax:</source>
          <target state="translated">&lt;code&gt;DecimalFormat&lt;/code&gt; 패턴의 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="48bbd87a3a8178de393d41e1f9a4dc20ff90f13c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DecimalFormat&lt;/code&gt; provides rounding modes defined in &lt;a href=&quot;../math/roundingmode&quot;&gt;&lt;code&gt;RoundingMode&lt;/code&gt;&lt;/a&gt; for formatting. By default, it uses &lt;a href=&quot;../math/roundingmode#HALF_EVEN&quot;&gt;&lt;code&gt;RoundingMode.HALF_EVEN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DecimalFormat&lt;/code&gt; 은 형식화를 위해 &lt;a href=&quot;../math/roundingmode&quot;&gt; &lt;code&gt;RoundingMode&lt;/code&gt; &lt;/a&gt; 에 정의 된 반올림 모드를 제공합니다 . 기본적으로 &lt;a href=&quot;../math/roundingmode#HALF_EVEN&quot;&gt; &lt;code&gt;RoundingMode.HALF_EVEN&lt;/code&gt; &lt;/a&gt; 을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="eaa7ef50faa5ba6a7437543f357f52489ac278f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DeclarationSnippet&lt;/code&gt; is immutable: an access to any of its methods will always return the same result. and thus is thread-safe.</source>
          <target state="translated">&lt;code&gt;DeclarationSnippet&lt;/code&gt; 은 변경할 수 없습니다. 메서드에 대한 액세스는 항상 동일한 결과를 반환합니다. 따라서 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="8e1b6f07144283290279351996fc7e9520525743" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Default&lt;/code&gt; - a default value.</source>
          <target state="translated">&lt;code&gt;Default&lt;/code&gt; -기본값입니다.</target>
        </trans-unit>
        <trans-unit id="74881dff9189c4c783328b65bea467f4ead78f8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Default&lt;/code&gt; - the default value.</source>
          <target state="translated">&lt;code&gt;Default&lt;/code&gt; -기본값입니다.</target>
        </trans-unit>
        <trans-unit id="013ad656021a30c0fcc5b39c3840413a1b4d25f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultFormatter&lt;/code&gt; formats arbitrary objects.</source>
          <target state="translated">&lt;code&gt;DefaultFormatter&lt;/code&gt; 는 임의의 개체를 포맷합니다.</target>
        </trans-unit>
        <trans-unit id="b1a3c706ae4fdaf19fc797fbdf54f6ee28ed6e27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultFormatter&lt;/code&gt; formats arbitrary objects. Formatting is done by invoking the &lt;code&gt;toString&lt;/code&gt; method. In order to convert the value back to a String, your class must provide a constructor that takes a String argument. If no single argument constructor that takes a String is found, the returned value will be the String passed into &lt;code&gt;stringToValue&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DefaultFormatter&lt;/code&gt; 는 임의의 개체를 포맷합니다. 형식화는 &lt;code&gt;toString&lt;/code&gt; 메소드 를 호출하여 수행됩니다 . 값을 다시 String으로 변환하려면 클래스에서 String 인수를받는 생성자를 제공해야합니다. String을 취하는 단일 인수 생성자가 없으면 반환되는 값은 &lt;code&gt;stringToValue&lt;/code&gt; 에 전달 된 String 입니다.</target>
        </trans-unit>
        <trans-unit id="b63bdff99c08cc0803b28dfa4c7ee1ec923132ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultMetalTheme&lt;/code&gt; uses bold fonts for many controls. To make all controls (with the exception of the internal frame title bars and client decorated frame title bars) use plain fonts you can do either of the following:</source>
          <target state="translated">&lt;code&gt;DefaultMetalTheme&lt;/code&gt; 는 많은 컨트롤에 굵은 글꼴을 사용합니다. 모든 컨트롤 (내부 프레임 제목 표시 줄 및 클라이언트 장식 프레임 제목 표시 줄 제외)이 일반 글꼴을 사용하도록하려면 다음 중 하나를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8530508038c8b24055b893842eef1cd4d28d0b46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultRowSorter.ModelWrapper&lt;/code&gt; is responsible for providing the data that gets sorted by &lt;code&gt;DefaultRowSorter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DefaultRowSorter.ModelWrapper&lt;/code&gt; 은 으로 분류됩니다 데이터를 제공 할 책임이 &lt;code&gt;DefaultRowSorter&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="29873af872a40852989ab9782213e3c555b4127e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultRowSorter.ModelWrapper&lt;/code&gt; is responsible for providing the data that gets sorted by &lt;code&gt;DefaultRowSorter&lt;/code&gt;. You normally do not interact directly with &lt;code&gt;ModelWrapper&lt;/code&gt;. Subclasses of &lt;code&gt;DefaultRowSorter&lt;/code&gt; provide an implementation of &lt;code&gt;ModelWrapper&lt;/code&gt; wrapping another model. For example, &lt;code&gt;TableRowSorter&lt;/code&gt; provides a &lt;code&gt;ModelWrapper&lt;/code&gt; that wraps a &lt;code&gt;TableModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DefaultRowSorter.ModelWrapper&lt;/code&gt; 은 으로 분류됩니다 데이터를 제공 할 책임이 &lt;code&gt;DefaultRowSorter&lt;/code&gt; 를 . 일반적으로 &lt;code&gt;ModelWrapper&lt;/code&gt; 와 직접 상호 작용하지 않습니다 . &lt;code&gt;DefaultRowSorter&lt;/code&gt; 의 서브 클래스는 다른 모델을 래핑 하는 &lt;code&gt;ModelWrapper&lt;/code&gt; 의 구현을 제공합니다 . 예를 들어, &lt;code&gt;TableRowSorter&lt;/code&gt; 는 &lt;code&gt;TableModel&lt;/code&gt; 을 래핑하는 &lt;code&gt;ModelWrapper&lt;/code&gt; 를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="4afdd229f8b121d7cdb57ceb13a8e95f4b4f7280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultRowSorter&lt;/code&gt; has two formal type parameters. The first type parameter corresponds to the class of the model, for example &lt;code&gt;DefaultTableModel&lt;/code&gt;. The second type parameter corresponds to the class of the identifier passed to the &lt;code&gt;RowFilter&lt;/code&gt;. Refer to &lt;code&gt;TableRowSorter&lt;/code&gt; and &lt;code&gt;RowFilter&lt;/code&gt; for more details on the type parameters.</source>
          <target state="translated">&lt;code&gt;DefaultRowSorter&lt;/code&gt; 에는 두 가지 형식 유형 매개 변수가 있습니다. 첫 번째 유형 매개 변수는 모델의 클래스에 해당합니다 (예 : &lt;code&gt;DefaultTableModel&lt;/code&gt; ) . 두 번째 유형 매개 변수는 &lt;code&gt;RowFilter&lt;/code&gt; 에 전달 된 식별자의 클래스에 해당합니다 . 참조 &lt;code&gt;TableRowSorter&lt;/code&gt; 의 와 &lt;code&gt;RowFilter&lt;/code&gt; 유형의 매개 변수에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="f05dcd2d1e9a51b9437f7e57a3a4e51a0e10484b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultRowSorter&lt;/code&gt; is an abstract class. Concrete subclasses must provide access to the underlying data by invoking &lt;code&gt;setModelWrapper&lt;/code&gt;. The &lt;code&gt;setModelWrapper&lt;/code&gt; method &lt;b&gt;must&lt;/b&gt; be invoked soon after the constructor is called, ideally from within the subclass's constructor. Undefined behavior will result if you use a &lt;code&gt;
 DefaultRowSorter&lt;/code&gt; without specifying a &lt;code&gt;ModelWrapper&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DefaultRowSorter&lt;/code&gt; 는 추상 클래스입니다. 구체적인 하위 클래스는 &lt;code&gt;setModelWrapper&lt;/code&gt; 를 호출하여 기본 데이터에 대한 액세스를 제공해야 합니다 . &lt;code&gt;setModelWrapper&lt;/code&gt; 의 방법이 &lt;b&gt;있어야&lt;/b&gt; 생성자가 이상적으로 서브 클래스의 생성자 내에서 호출 된 후 즉시 호출. &lt;code&gt;ModelWrapper&lt;/code&gt; 를 지정하지 않고 &lt;code&gt; DefaultRowSorter&lt;/code&gt; 를 사용하면 정의되지 않은 동작이 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="8d7e3d656af321377b0de756c2f2d297b453de34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Deque&lt;/code&gt; implementations generally do not define element-based versions of the &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt; methods, but instead inherit the identity-based versions from class &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Deque&lt;/code&gt; 구현은 일반적으로 &lt;code&gt;equals&lt;/code&gt; 및 &lt;code&gt;hashCode&lt;/code&gt; 메소드 의 요소 기반 버전을 정의하지 않고 대신 &lt;code&gt;Object&lt;/code&gt; 클래스에서 ID 기반 버전을 상속합니다 .</target>
        </trans-unit>
        <trans-unit id="40cffbac4a1f83e6256195266a7d20f5564b4d94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DialogType.COMMON&lt;/code&gt;, &lt;code&gt;DialogType.NATIVE&lt;/code&gt;, or &lt;code&gt;DialogType.NONE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DialogType.COMMON&lt;/code&gt; , &lt;code&gt;DialogType.NATIVE&lt;/code&gt; 또는 &lt;code&gt;DialogType.NONE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c53d0fb64a00ee4cb716575127743bcda6209fc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DiffieHellman&lt;/code&gt; (1024)</source>
          <target state="translated">&lt;code&gt;DiffieHellman&lt;/code&gt; (1024)</target>
        </trans-unit>
        <trans-unit id="914677f73256948b55184ea61d5c17ff0123eeb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DiffieHellman&lt;/code&gt; (1024, 2048)</source>
          <target state="translated">&lt;code&gt;DiffieHellman&lt;/code&gt; (1024, 2048)</target>
        </trans-unit>
        <trans-unit id="0a6b42bc4d64ddd0f190d08d4d10625c706c5375" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DiffieHellman&lt;/code&gt; (1024, 2048, 4096)</source>
          <target state="translated">&lt;code&gt;DiffieHellman&lt;/code&gt; (1024, 2048, 4096)</target>
        </trans-unit>
        <trans-unit id="a89ea9c0771a38eb80fdae677e70a1bdfd4cd7a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DirContext&lt;/code&gt; also behaves as a naming context by extending the &lt;code&gt;Context&lt;/code&gt; interface in the &lt;code&gt;javax.naming&lt;/code&gt; package. This means that any directory object can also provide a naming context. For example, the directory object for a person might contain the attributes of that person, and at the same time provide a context for naming objects relative to that person such as his printers and home directory.</source>
          <target state="translated">&lt;code&gt;DirContext&lt;/code&gt; 는 &lt;code&gt;javax.naming&lt;/code&gt; 패키지 에서 &lt;code&gt;Context&lt;/code&gt; 인터페이스를 확장하여 이름 지정 컨텍스트로 작동 합니다. 이는 모든 디렉토리 객체가 명명 컨텍스트를 제공 할 수도 있음을 의미합니다. 예를 들어, 개인의 디렉토리 객체는 해당 개인의 속성을 포함 할 수 있으며 동시에 프린터 및 홈 디렉토리와 같이 해당 개인에 대한 객체의 이름을 지정하기위한 컨텍스트를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5792729aa4540c3123da205e3eb0ace9a9fe61c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DirContext&lt;/code&gt; contains methods for performing content-based searching of the directory. In the simplest and most common form of usage, the application specifies a set of attributes--possibly with specific values--to match, and submits this attribute set, to the &lt;code&gt;search()&lt;/code&gt; method. There are other overloaded forms of &lt;code&gt;search()&lt;/code&gt; that support more sophisticated &lt;em&gt;search filters&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;DirContext&lt;/code&gt; 는 디렉토리의 컨텐츠 기반 검색을 수행하는 메소드를 포함합니다. 가장 단순하고 가장 일반적인 사용 형식에서 응용 프로그램은 특정 값으로 속성 집합을 지정하여이 속성 집합을 &lt;code&gt;search()&lt;/code&gt; 메서드에 제출합니다 . 보다 정교한 &lt;em&gt;검색 필터&lt;/em&gt; 를 지원 하는 다른 오버로드 된 형태의 &lt;code&gt;search()&lt;/code&gt; 가 &lt;em&gt;있습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="09df54d6c818038812565940d73a4163f3e53360" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DirectoryManager.getObjectInstance()&lt;/code&gt; successively loads in object factories. If it encounters a &lt;code&gt;DirObjectFactory&lt;/code&gt;, it will invoke &lt;code&gt;DirObjectFactory.getObjectInstance()&lt;/code&gt;; otherwise, it invokes &lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt;. It does this until a factory produces a non-null answer.</source>
          <target state="translated">&lt;code&gt;DirectoryManager.getObjectInstance()&lt;/code&gt; 는 객체 팩토리에서 연속적으로로드됩니다. &lt;code&gt;DirObjectFactory&lt;/code&gt; 가 발생하면 &lt;code&gt;DirObjectFactory.getObjectInstance()&lt;/code&gt; 호출합니다 . 그렇지 않으면 &lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt; 호출합니다 . 공장에서 널이 아닌 응답을 생성 할 때까지이 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="f86324db481587886f342c04b19ddf73e6679064" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt; successively loads in state factories. If a factory implements &lt;code&gt;DirStateFactory&lt;/code&gt;, &lt;code&gt;DirectoryManager&lt;/code&gt; invokes this method; otherwise, it invokes &lt;code&gt;StateFactory.getStateToBind()&lt;/code&gt;. It does this until a factory produces a non-null answer.</source>
          <target state="translated">&lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt; 연속적으로로드됩니다. 팩토리가 &lt;code&gt;DirStateFactory&lt;/code&gt; 를 구현 하면 &lt;code&gt;DirectoryManager&lt;/code&gt; 는이 메소드를 호출합니다. 그렇지 않으면 &lt;code&gt;StateFactory.getStateToBind()&lt;/code&gt; 호출합니다 . 공장에서 널이 아닌 응답을 생성 할 때까지이 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="2064d6f94b778843b611daf1f37f67fd34ec2d37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DirectoryManager&lt;/code&gt; is safe for concurrent access by multiple threads.</source>
          <target state="translated">&lt;code&gt;DirectoryManager&lt;/code&gt; 는 여러 스레드가 동시에 액세스하는 데 안전합니다.</target>
        </trans-unit>
        <trans-unit id="a92c0395bd973c1d7a5990789758ae8d67cdc80f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocAttribute&lt;/code&gt;s which are to be specified on the &lt;code&gt;Doc&lt;/code&gt; must be included in this set to accurately represent the context.</source>
          <target state="translated">&lt;code&gt;DocAttribute&lt;/code&gt; &lt;code&gt;Doc&lt;/code&gt; 지정 될 DocAttribute 는 컨텍스트를 정확하게 표현하기 위해이 세트에 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="0c6a919f97734d4e67d8dbc26bb50eaa928e4894" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DockingListener&lt;/code&gt; for &lt;code&gt;MetalToolBarUI&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DockingListener&lt;/code&gt; 용 &lt;code&gt;MetalToolBarUI&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="543ebc95484a5c30bb8a17d799a0d20faa874af7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document.inputEncoding&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;Document.inputEncoding&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="b45f1d389e09ebca5519e73cf3a872524800a7ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document.xmlEncoding&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Document.xmlEncoding&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="7b407aa8b7ae77dbddfbfe395e59ea6177846984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document&lt;/code&gt; nodes are written, including the XML declaration (unless the parameter &quot;xml-declaration&quot; is set to &lt;code&gt;false&lt;/code&gt;) and a DTD subset, if one exists in the DOM. Writing a &lt;code&gt;Document&lt;/code&gt; node serializes the entire document.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; XML 선언 (매개 변수 &quot;xml-declaration&quot;이 &lt;code&gt;false&lt;/code&gt; 로 설정되지 않은 경우 ) 및 DTD 서브 세트 (DOM에 존재하는 경우)를 포함하여 문서 노드가 작성 됩니다. &lt;code&gt;Document&lt;/code&gt; 노드를 작성 하면 전체 문서가 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="b37d487719ba02c4168d6e8b316b96235c3e38d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document&lt;/code&gt; nodes cannot be adopted.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; 노드는 채택 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="95ed47064f6dad9b43129d869396522461467783" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document&lt;/code&gt; nodes cannot be imported.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; 노드를 가져올 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0d766e16445218d1589b4eaa94bf64c97df9a921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document&lt;/code&gt; result of parsing the &lt;code&gt;InputStream&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; &lt;code&gt;InputStream&lt;/code&gt; 구문 분석 결과 문서화</target>
        </trans-unit>
        <trans-unit id="0c492d3683adb0835b33cde3d91883965efbf45b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document&lt;/code&gt;, &lt;code&gt;DocumentType&lt;/code&gt;, &lt;code&gt;DocumentFragment&lt;/code&gt;, &lt;code&gt;Notation&lt;/code&gt;, &lt;code&gt;Entity&lt;/code&gt; , and children of &lt;code&gt;Attr&lt;/code&gt; nodes are not passed to the filter. The child nodes of an &lt;code&gt;EntityReference&lt;/code&gt; node are only passed to the filter if the &lt;code&gt;EntityReference&lt;/code&gt; node is skipped by the method &lt;code&gt;LSParserFilter.acceptNode()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; , &lt;code&gt;DocumentType&lt;/code&gt; , &lt;code&gt;DocumentFragment&lt;/code&gt; , &lt;code&gt;Notation&lt;/code&gt; , &lt;code&gt;Entity&lt;/code&gt; 및 &lt;code&gt;Attr&lt;/code&gt; 노드의 하위 노드는 필터에 전달되지 않습니다. &lt;code&gt;EntityReference&lt;/code&gt; 노드 의 자식 노드는 &lt;code&gt;LSParserFilter.acceptNode()&lt;/code&gt; 메서드가 &lt;code&gt;EntityReference&lt;/code&gt; 노드를 건너 뛰는 경우에만 필터에 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="4bb2c607723c47087e45826c3c7cb4428361e527" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentBuilder&lt;/code&gt; is reset to the same state as when it was created with &lt;a href=&quot;documentbuilderfactory#newDocumentBuilder()&quot;&gt;&lt;code&gt;DocumentBuilderFactory.newDocumentBuilder()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;reset()&lt;/code&gt; is designed to allow the reuse of existing &lt;code&gt;DocumentBuilder&lt;/code&gt;s thus saving resources associated with the creation of new &lt;code&gt;DocumentBuilder&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;DocumentBuilder&lt;/code&gt; 는 &lt;a href=&quot;documentbuilderfactory#newDocumentBuilder()&quot;&gt; &lt;code&gt;DocumentBuilderFactory.newDocumentBuilder()&lt;/code&gt; &lt;/a&gt; 로 생성되었을 때와 동일한 상태로 재설정됩니다 . &lt;code&gt;reset()&lt;/code&gt; 은 기존 &lt;code&gt;DocumentBuilder&lt;/code&gt; 의 재사용을 허용하여 새 &lt;code&gt;DocumentBuilder&lt;/code&gt; 생성과 관련된 리소스를 절약 하도록 설계되었습니다 .</target>
        </trans-unit>
        <trans-unit id="81d2cf523601208f09d89c363fd2bc11e1d5b9b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentFilter&lt;/code&gt;, as the name implies, is a filter for the &lt;code&gt;Document&lt;/code&gt; mutation methods.</source>
          <target state="translated">&lt;code&gt;DocumentFilter&lt;/code&gt; 이름에서 알 수 있듯이,의에 대한 필터입니다 &lt;code&gt;Document&lt;/code&gt; 돌연변이 방법.</target>
        </trans-unit>
        <trans-unit id="9f7baec10ddb03e92b7880ce7dd440573017b206" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentFilter&lt;/code&gt;, as the name implies, is a filter for the &lt;code&gt;Document&lt;/code&gt; mutation methods. When a &lt;code&gt;Document&lt;/code&gt; containing a &lt;code&gt;DocumentFilter&lt;/code&gt; is modified (either through &lt;code&gt;insert&lt;/code&gt; or &lt;code&gt;remove&lt;/code&gt;), it forwards the appropriate method invocation to the &lt;code&gt;DocumentFilter&lt;/code&gt;. The default implementation allows the modification to occur. Subclasses can filter the modifications by conditionally invoking methods on the superclass, or invoking the necessary methods on the passed in &lt;code&gt;FilterBypass&lt;/code&gt;. Subclasses should NOT call back into the Document for the modification instead call into the superclass or the &lt;code&gt;FilterBypass&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DocumentFilter&lt;/code&gt; 이름에서 알 수 있듯이,의에 대한 필터입니다 &lt;code&gt;Document&lt;/code&gt; 돌연변이 방법. &lt;code&gt;Document&lt;/code&gt; Filter를 포함하는 &lt;code&gt;DocumentFilter&lt;/code&gt; 가 수정 되면 ( &lt;code&gt;insert&lt;/code&gt; 또는 &lt;code&gt;remove&lt;/code&gt; 를 통해 ) 적절한 메서드 호출을 &lt;code&gt;DocumentFilter&lt;/code&gt; 로 전달합니다 . 기본 구현에서는 수정이 발생할 수 있습니다. 서브 클래스는 슈퍼 클래스에서 조건부로 메서드를 호출하거나 &lt;code&gt;FilterBypass&lt;/code&gt; 에 전달 된에 필요한 메서드를 호출하여 수정 사항을 필터링 할 수 있습니다 . 서브 클래스는 수정을 위해 문서로 다시 호출해서는 안되며 대신 수퍼 클래스 또는 &lt;code&gt;FilterBypass&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4ccfd2a5dcdb05e199a7df560efc65280cd3e8ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentFragment&lt;/code&gt; is a &quot;lightweight&quot; or &quot;minimal&quot; &lt;code&gt;Document&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;DocumentFragment&lt;/code&gt; 는 &quot;경량&quot;또는 &quot;최소&quot; &lt;code&gt;Document&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="4ac63a67802d1b43d585cfac083f7d21e3b1595f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentFragment&lt;/code&gt; is a &quot;lightweight&quot; or &quot;minimal&quot; &lt;code&gt;Document&lt;/code&gt; object. It is very common to want to be able to extract a portion of a document's tree or to create a new fragment of a document. Imagine implementing a user command like cut or rearranging a document by moving fragments around. It is desirable to have an object which can hold such fragments and it is quite natural to use a Node for this purpose. While it is true that a &lt;code&gt;Document&lt;/code&gt; object could fulfill this role, a &lt;code&gt;Document&lt;/code&gt; object can potentially be a heavyweight object, depending on the underlying implementation. What is really needed for this is a very lightweight object. &lt;code&gt;DocumentFragment&lt;/code&gt; is such an object.</source>
          <target state="translated">&lt;code&gt;DocumentFragment&lt;/code&gt; 는 &quot;경량&quot;또는 &quot;최소&quot; &lt;code&gt;Document&lt;/code&gt; 객체입니다. 문서 트리의 일부를 추출하거나 문서의 새 조각을 생성하려는 것은 매우 일반적입니다. 조각을 이동하여 문서를 자르거나 재배 열하는 것과 같은 사용자 명령을 구현한다고 상상해보십시오. 이러한 조각을 보유 할 수있는 객체를 갖는 것이 바람직하며 이러한 목적으로 노드를 사용하는 것은 매우 자연스러운 일입니다. &lt;code&gt;Document&lt;/code&gt; 객체가이 역할을 수행 할 수 있다는 것은 사실이지만 &lt;code&gt;Document&lt;/code&gt; 객체는 기본 구현에 따라 잠재적으로 무거운 객체가 될 수 있습니다. 이를 위해 정말로 필요한 것은 매우 가벼운 물체입니다. &lt;code&gt;DocumentFragment&lt;/code&gt; 는 그러한 객체입니다.</target>
        </trans-unit>
        <trans-unit id="b902b96377a51b8b38b72a56177252d7d4579c68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentFragment&lt;/code&gt; nodes are serialized by serializing the children of the document fragment in the order they appear in the document fragment.</source>
          <target state="translated">&lt;code&gt;DocumentFragment&lt;/code&gt; 노드는 문서 조각에 나타나는 순서대로 문서 조각의 자식을 직렬화하여 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="659895d243b0c297153cbbe188cfdd0d9cdb35bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentTraversal&lt;/code&gt; contains methods that create &lt;code&gt;NodeIterators&lt;/code&gt; and &lt;code&gt;TreeWalkers&lt;/code&gt; to traverse a node and its children in document order (depth first, pre-order traversal, which is equivalent to the order in which the start tags occur in the text representation of the document).</source>
          <target state="translated">&lt;code&gt;DocumentTraversal&lt;/code&gt; 에는 &lt;code&gt;NodeIterators&lt;/code&gt; 와 &lt;code&gt;TreeWalkers&lt;/code&gt; 를 생성 하여 문서 순서대로 노드와 그 자식을 순회하는 메서드가 포함되어 있습니다 (문서의 텍스트 표현에서 시작 태그가 발생하는 순서와 동일한 깊이 우선, 사전 주문 순회).</target>
        </trans-unit>
        <trans-unit id="c2fcf6c0454a88db8728e286edbaddcc0e999a37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentTraversal&lt;/code&gt; contains methods that create &lt;code&gt;NodeIterators&lt;/code&gt; and &lt;code&gt;TreeWalkers&lt;/code&gt; to traverse a node and its children in document order (depth first, pre-order traversal, which is equivalent to the order in which the start tags occur in the text representation of the document). In DOMs which support the Traversal feature, &lt;code&gt;DocumentTraversal&lt;/code&gt; will be implemented by the same objects that implement the Document interface.</source>
          <target state="translated">&lt;code&gt;DocumentTraversal&lt;/code&gt; 에는 &lt;code&gt;NodeIterators&lt;/code&gt; 와 &lt;code&gt;TreeWalkers&lt;/code&gt; 를 생성 하여 문서 순서대로 노드와 그 자식을 순회하는 메서드가 포함되어 있습니다 (문서의 텍스트 표현에서 시작 태그가 발생하는 순서와 동일한 깊이 우선, 사전 주문 순회). Traversal 기능을 지원하는 DOM에서 &lt;code&gt;DocumentTraversal&lt;/code&gt; 은 Document 인터페이스를 구현하는 동일한 객체에 의해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="d381ad218fdf0fca28cd300d73912b49f9158dfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentType&lt;/code&gt; nodes cannot be adopted.</source>
          <target state="translated">&lt;code&gt;DocumentType&lt;/code&gt; 노드는 채택 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f54d62aa176ae72ad1969fa2a268a0a5b07edafd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentType&lt;/code&gt; nodes cannot be imported.</source>
          <target state="translated">&lt;code&gt;DocumentType&lt;/code&gt; 노드를 가져올 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9048d91e0f8c8d923c9e8cb627c66dcf1cc58c9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Double(-0.0)&lt;/code&gt; if both &lt;code&gt;isParseBigDecimal()&lt;/code&gt; and &lt;code&gt;isParseIntegerOnly()&lt;/code&gt; are false.</source>
          <target state="translated">&lt;code&gt;Double(-0.0)&lt;/code&gt; &lt;code&gt;isParseBigDecimal()&lt;/code&gt; 및 &lt;code&gt;isParseIntegerOnly()&lt;/code&gt; 가 모두 false 인 경우 Double (-0.0) 입니다.</target>
        </trans-unit>
        <trans-unit id="9da8cff5c95b35967306da5e5b2f8c9fad055766" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Double.NaN&lt;/code&gt; is considered by this method to be equal to itself and greater than all other &lt;code&gt;double&lt;/code&gt; values (including &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Double.NaN&lt;/code&gt; 이 메소드에서는 Double.NaN 이 자신과 같고 다른 모든 &lt;code&gt;double&lt;/code&gt; 값 ( &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt; 포함 ) 보다 큰 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="4dd312cf923103aca3696c7f4775ff77c24070dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DoubleStream.iterate&lt;/code&gt; should produce the same sequence of elements as produced by the corresponding for-loop:</source>
          <target state="translated">&lt;code&gt;DoubleStream.iterate&lt;/code&gt; 는 해당 for 루프에서 생성 된 것과 동일한 요소 시퀀스를 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="beb0f3783d20d53b34997322c5fa55b324d54a20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DoubleSummaryStatistics&lt;/code&gt; can be used as a &lt;a href=&quot;stream/stream#collect(java.util.stream.Collector)&quot;&gt;reduction&lt;/a&gt; target for a &lt;a href=&quot;stream/stream&quot;&gt;stream&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;DoubleSummaryStatistics&lt;/code&gt; 는 &lt;a href=&quot;stream/stream&quot;&gt;스트림&lt;/a&gt; 의 &lt;a href=&quot;stream/stream#collect(java.util.stream.Collector)&quot;&gt;감소&lt;/a&gt; 대상 으로 사용할 수 있습니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="8dbc465130bcec70ae126f81e19d9136dabeb003" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DoubleSummaryStatistics&lt;/code&gt; can be used as a &lt;a href=&quot;stream/stream#collect-java.util.stream.Collector-&quot;&gt;reduction&lt;/a&gt; target for a &lt;a href=&quot;stream/stream&quot;&gt;stream&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;DoubleSummaryStatistics&lt;/code&gt; 는 &lt;a href=&quot;stream/stream&quot;&gt;스트림&lt;/a&gt; 의 &lt;a href=&quot;stream/stream#collect-java.util.stream.Collector-&quot;&gt;축소&lt;/a&gt; 대상 으로 사용할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="36167a6d8ef9e69497700eec1acae687e88e8b1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DragSourceEvent&lt;/code&gt;s are generated whenever the drag enters, moves over, or exits a drop site, when the drop action changes, and when the drag ends. The location for the generated &lt;code&gt;DragSourceEvent&lt;/code&gt; specifies the mouse cursor location in screen coordinates at the moment this event occurred.</source>
          <target state="translated">&lt;code&gt;DragSourceEvent&lt;/code&gt; 는 드래그가 드롭 사이트에 들어가거나, 이동하거나, 나갈 때, 드롭 동작이 변경 될 때, 드래그가 끝날 때 생성됩니다. 생성 된 &lt;code&gt;DragSourceEvent&lt;/code&gt; 의 위치는이 이벤트가 발생한 시점의 화면 좌표에서 마우스 커서 위치를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="14bf5fa06cba37be55b3590487b71d48993380ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Driver&lt;/code&gt; interface -- provides the API for registering and connecting drivers based on JDBC technology (&quot;JDBC drivers&quot;); generally used only by the &lt;code&gt;DriverManager&lt;/code&gt; class</source>
          <target state="translated">&lt;code&gt;Driver&lt;/code&gt; 인터페이스-JDBC 기술 ( &quot;JDBC 드라이버&quot;)을 기반으로 드라이버를 등록하고 연결하기위한 API를 제공합니다. 일반적으로 &lt;code&gt;DriverManager&lt;/code&gt; 클래스 에서만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dc514f897b1c82361eeeb08f2c0916b30f7f5506" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DriverManager&lt;/code&gt; class -- makes a connection with a driver</source>
          <target state="translated">&lt;code&gt;DriverManager&lt;/code&gt; 클래스-드라이버와 연결</target>
        </trans-unit>
        <trans-unit id="76034b55e4d0e1e48f244f47e3a2bf96a7116609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DriverManager&lt;/code&gt; initialization is done lazily and looks up service providers using the thread context class loader. The drivers loaded and available to an application will depend on the thread context class loader of the thread that triggers driver initialization by &lt;code&gt;DriverManager&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DriverManager&lt;/code&gt; 초기화는 느리게 수행되며 스레드 컨텍스트 클래스 로더를 사용하여 서비스 공급자를 찾습니다. 로드되고 응용 프로그램에서 사용할 수있는 드라이버는 &lt;code&gt;DriverManager&lt;/code&gt; 에 의해 드라이버 초기화를 트리거하는 스레드의 스레드 컨텍스트 클래스 로더에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="2353186265de4b132202e3a99ad04eb87e53996d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DriverPropertyInfo&lt;/code&gt; class -- provides properties for a JDBC driver; not used by the general user</source>
          <target state="translated">&lt;code&gt;DriverPropertyInfo&lt;/code&gt; 클래스 -JDBC 드라이버에 대한 속성을 제공합니다. 일반 사용자가 사용하지 않음</target>
        </trans-unit>
        <trans-unit id="1c1004d82e6f836c5fca36164c84bebdaad75e4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DropTarget&lt;/code&gt; objects manifest &quot;Drag Under&quot; feedback to the user, in the typical case, by rendering animations into their associated GUI &lt;code&gt;Component&lt;/code&gt;(s) under the GUI Cursor.</source>
          <target state="translated">&lt;code&gt;DropTarget&lt;/code&gt; 개체는 일반적인 경우 GUI 커서 아래의 관련 GUI &lt;code&gt;Component&lt;/code&gt; 애니메이션을 렌더링하여 사용자에게 &quot;드래그 언더&quot;피드백을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="ea562f4880999384cb9584bc386c0a82713cbfff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Duration&lt;/code&gt; of years and months of this &lt;code&gt;Duration&lt;/code&gt; as days.</source>
          <target state="translated">&lt;code&gt;Duration&lt;/code&gt; 의 &lt;code&gt;Duration&lt;/code&gt; (일)입니다.</target>
        </trans-unit>
        <trans-unit id="0882532caac551c9de94e6fa0a0c59351867e102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DynamicUtilTreeNode&lt;/code&gt; can wrap vectors/hashtables/arrays/strings and create the appropriate children tree nodes as necessary.</source>
          <target state="translated">&lt;code&gt;DynamicUtilTreeNode&lt;/code&gt; 는 벡터 / 해시 테이블 / 배열 / 문자열을 래핑하고 필요에 따라 적절한 자식 트리 노드를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b94df8ae8c2b3667e474d3108259cd82e1598b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DynamicUtilTreeNode&lt;/code&gt; can wrap vectors/hashtables/arrays/strings and create the appropriate children tree nodes as necessary. It is dynamic in that it will only create the children as necessary.</source>
          <target state="translated">&lt;code&gt;DynamicUtilTreeNode&lt;/code&gt; 는 벡터 / 해시 테이블 / 배열 / 문자열을 래핑하고 필요에 따라 적절한 자식 트리 노드를 만들 수 있습니다. 필요한 경우에만 자식을 생성한다는 점에서 역동적입니다.</target>
        </trans-unit>
        <trans-unit id="0faa3cb9d71752dc2c186446730225f2317ec969" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The base class of elements held in this array</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 이 배열에 포함 된 기본 요소 클래스</target>
        </trans-unit>
        <trans-unit id="bf1437cc83c446bf4aa593e17085e1af9ba9ce95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The class of the elements in the collection</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 컬렉션의 요소 클래스</target>
        </trans-unit>
        <trans-unit id="361e98d763634ad8ec7a10bf657261ee37729657" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The class of the elements in the enum set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 열거 세트의 요소 클래스</target>
        </trans-unit>
        <trans-unit id="8ec8941e9851ee55fe24c26103e577c50d64baea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The class of the elements in the set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 세트의 요소의 클래스</target>
        </trans-unit>
        <trans-unit id="7d76cc61fcf088a06b26e3a5f7d98b04e375009c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The class of the parameter elements and of the set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 매개 변수 요소 및 세트의 클래스</target>
        </trans-unit>
        <trans-unit id="b25490b1c8ed44bbd9edd0693726eed05004841d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The class of the specified element and of the set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 지정된 요소와 세트의 클래스</target>
        </trans-unit>
        <trans-unit id="d2de7ed4a566f06b473b0513e7b5f8989042d895" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The enum type for which a constant value is to be returned</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 상수 값이 반환되는 열거 형</target>
        </trans-unit>
        <trans-unit id="ad253a36a7d7b3b3a100cec773acd949f4c61316" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The enum type subclass</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 열거 형 서브 클래스</target>
        </trans-unit>
        <trans-unit id="297cda062ba4927b388aa132a3b710de3d42ce41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - Type of component elements</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 구성 요소 유형</target>
        </trans-unit>
        <trans-unit id="bf2496dabd6861a8a3375b92943a60260dc05350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the &lt;code&gt;List&lt;/code&gt;'s element type</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - &lt;code&gt;List&lt;/code&gt; 의 요소 유형</target>
        </trans-unit>
        <trans-unit id="524cc3c0c1c76c6cb03e13a0bc5f633f19a22757" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the &lt;code&gt;Set&lt;/code&gt;'s element type</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - &lt;code&gt;Set&lt;/code&gt; 의 요소 유형</target>
        </trans-unit>
        <trans-unit id="dec398885250622eb9629f1fa14fcf6bde23d555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the Java type that described instances must have</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 설명 된 인스턴스에 있어야하는 Java 유형</target>
        </trans-unit>
        <trans-unit id="c72a0eaef3c43f14fb8eba41af201909d684d8c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the class of the map keys and of the objects in the returned set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 맵 키의 클래스와 반환 된 세트의 오브젝트</target>
        </trans-unit>
        <trans-unit id="9f86769f0bada4e55235e6b1c975d051e63c8d3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the class of the objects in the collection</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 컬렉션 내의 객체의 클래스</target>
        </trans-unit>
        <trans-unit id="7fc113d7abe10ac7f2fc4eb5bb2af975a242c727" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the class of the objects in the list</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 리스트 내의 객체의 클래스</target>
        </trans-unit>
        <trans-unit id="69601f08684e4e26ce097f560e0fc1583618dbfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the class of the objects in the queue</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 큐에있는 객체의 클래스</target>
        </trans-unit>
        <trans-unit id="12fa27c904b9b0de01918fc369202a3951fc403b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the class of the objects in the set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 세트 내의 객체의 클래스</target>
        </trans-unit>
        <trans-unit id="0f086297c933260861f3f493814f7d98364778e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements held in this collection</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 이 컬렉션에 포함 된 요소의 유형</target>
        </trans-unit>
        <trans-unit id="cefaab8a71cf76be7a437b56508cb0b3d45edf86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements held in this deque</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 이 데크에 포함 된 요소 유형</target>
        </trans-unit>
        <trans-unit id="0695e7f9d1279d77cdf133ec26175ff3b0d937d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements held in this list</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 이 목록에 포함 된 요소 유형</target>
        </trans-unit>
        <trans-unit id="d88da2df9071d078e83dc963f539d08e43070408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements held in this queue</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 이 큐에 보유 된 요소 유형</target>
        </trans-unit>
        <trans-unit id="0c05513393245baadd78c93632560368cb7e8974" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements held in this set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 이 세트에 포함 된 요소 유형</target>
        </trans-unit>
        <trans-unit id="7d52f8802f1780fa99fea81b4cc597fb84353327" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements in this collection</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 이 컬렉션의 요소 유형</target>
        </trans-unit>
        <trans-unit id="47bf0a88e642d5ced3075e45b22161ea6cae79b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements in this list</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -이리 스트 내의 요소의 타입</target>
        </trans-unit>
        <trans-unit id="98ec22579763e9440abdcf6f96ae2666c72c4ae1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements maintained by this set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 이 세트에 의해 유지되는 요소의 타입</target>
        </trans-unit>
        <trans-unit id="7c2862c0bd229619f4f8345dd2fa1c0a2be89520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements returned by this iterator</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 이 반복자가 돌려주는 요소의 타입</target>
        </trans-unit>
        <trans-unit id="4f509f05e252c39b1801ac266a69457b08f83615" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of the elements of this combo box</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 이 콤보 상자의 요소 유형</target>
        </trans-unit>
        <trans-unit id="58b481b9a5308e41fbf722a42fbe2607e51807f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of the elements of this list</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 이 목록의 요소 유형</target>
        </trans-unit>
        <trans-unit id="6a33816c08a58aadb803fa75f7b77b179ff344af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of the elements of this model</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 이 모델의 요소 유형</target>
        </trans-unit>
        <trans-unit id="2340a924dee854a31040a1da235db94cb5d00c2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of the enum constant</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 열거 형 상수의 유형</target>
        </trans-unit>
        <trans-unit id="315e17caea7b0a2448bc434639bc139188d21662" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of values this renderer can be used for</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 이 렌더러가 사용할 수있는 값의 유형</target>
        </trans-unit>
        <trans-unit id="6ddf4a863c5be0beaf9068a557e640b0e5335d4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - type of elements, if there were any, in the set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - 세트에 존재하는 요소의 유형</target>
        </trans-unit>
        <trans-unit id="c7e37d0a4f1a261fd00413c2e238eb392794c1a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EPOCH_DAY&lt;/code&gt; - If present, this is converted to a &lt;code&gt;LocalDate&lt;/code&gt; and all other date fields are then cross-checked against the date.</source>
          <target state="translated">&lt;code&gt;EPOCH_DAY&lt;/code&gt; - 존재하는 경우이 값은 &lt;code&gt;LocalDate&lt;/code&gt; 로 변환되고 다른 모든 날짜 필드는 날짜와 교차 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="0cc19a47c9bf9256cbb4905ca348e76e7ea08359" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EPOCH_DAY&lt;/code&gt; - If present, this is converted to a date and all other date fields are then cross-checked against the date.</source>
          <target state="translated">&lt;code&gt;EPOCH_DAY&lt;/code&gt; - 존재하는 경우 날짜로 변환되고 다른 모든 날짜 필드는 날짜와 교차 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="8aa6cf32a77705b393f789573e90523569e4533f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EPOCH_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified epoch-day. This completely replaces the date and is equivalent to &lt;a href=&quot;#ofEpochDay(long)&quot;&gt;&lt;code&gt;ofEpochDay(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;EPOCH_DAY&lt;/code&gt; - 지정된 epoch-day 로 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환합니다 . 이것은 날짜를 완전히 대체하며 &lt;a href=&quot;#ofEpochDay(long)&quot;&gt; &lt;code&gt;ofEpochDay(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="f7121d811ef992feec385966eb2e4889abb23c78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EPOCH_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified epoch-day. This completely replaces the date and is equivalent to &lt;a href=&quot;localdate#ofEpochDay-long-&quot;&gt;&lt;code&gt;ofEpochDay(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;EPOCH_DAY&lt;/code&gt; - 지정된 시간을 가진 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환합니다 . 이것은 날짜를 완전히 대체하며 &lt;a href=&quot;localdate#ofEpochDay-long-&quot;&gt; &lt;code&gt;ofEpochDay(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d055afcf83204542d1a5eb967ddb5a854a77b5dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERA&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified era. The year-of-era and month will be unchanged. The day-of-month will also be unchanged, unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;ERA&lt;/code&gt; 는 - 반환 &lt;code&gt;LocalDate&lt;/code&gt; 지정된 시대에 있습니다. 연도 및 월은 변경되지 않습니다. 새 월과 연도에 유효하지 않은 한, 월도 변경되지 않습니다. 이 경우 월은 새 달과 연도의 최대 유효 값으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="7192bcbcaa950d940ddff2aac0b184ee2878fd2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERA&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified era. The year-of-era will be unchanged.</source>
          <target state="translated">&lt;code&gt;ERA&lt;/code&gt; - 지정된 &lt;code&gt;Year&lt;/code&gt; 의 연도 를 반환합니다 . 연도는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5592ee89ee78259f7422a7461ebb8100053d8828" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERA&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified era. The month and year-of-era will be unchanged.</source>
          <target state="translated">&lt;code&gt;ERA&lt;/code&gt; 는 - 반환 &lt;code&gt;YearMonth&lt;/code&gt; 지정된 시대에 있습니다. 월과 연도는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="92d60b1fa4241d1b363fe6a15064ffb7756f3c10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERAS&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of eras added. Only two eras are supported so the amount must be one, zero or minus one. If the amount is non-zero then the year is changed such that the year-of-era is unchanged. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;ERAS&lt;/code&gt; - 지정된 기간이 추가 된 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환합니다 . 두 개의 기간 만 지원되므로 금액은 1, 0 또는-1이어야합니다. 양이 0이 아닌 경우 연도는 변경되지 않도록 연도가 변경됩니다. 새 월과 연도에 유효하지 않은 한, 월은 변경되지 않습니다. 이 경우 월은 새 달과 연도의 최대 유효 값으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="436c7c34644682dc6664730ace48d38160ccfce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERAS&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified number of eras added. Only two eras are supported so the amount must be one, zero or minus one. If the amount is non-zero then the year is changed such that the year-of-era is unchanged.</source>
          <target state="translated">&lt;code&gt;ERAS&lt;/code&gt; - 지정된 &lt;code&gt;Year&lt;/code&gt; 가 추가 된 연도 를 반환합니다 . 두 개의 기간 만 지원되므로 금액은 1, 0 또는-1이어야합니다. 양이 0이 아닌 경우 연도는 변경되지 않도록 연도가 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="1699937a84ba6ad8bd1a082586a5e1944f13a06f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERAS&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of eras added. Only two eras are supported so the amount must be one, zero or minus one. If the amount is non-zero then the year is changed such that the year-of-era is unchanged.</source>
          <target state="translated">&lt;code&gt;ERAS&lt;/code&gt; - 지정된 &lt;code&gt;YearMonth&lt;/code&gt; 가 추가 된 YearMonth 를 반환합니다 . 두 개의 기간 만 지원되므로 금액은 1, 0 또는-1이어야합니다. 양이 0이 아닌 경우 연도는 변경되지 않도록 연도가 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="a9422738414f8bc460037cdc3be55582ba06ad65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERROR&lt;/code&gt; level: usually used to log error messages.</source>
          <target state="translated">&lt;code&gt;ERROR&lt;/code&gt; 수준 : 일반적으로 오류 메시지를 기록하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5419867910ba863344df43054bf633f2cbf4df88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERROR&lt;/code&gt; level: usually used to log error messages. This level &lt;a href=&quot;#getSeverity()&quot;&gt;severity&lt;/a&gt; is &lt;code&gt;1000&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ERROR&lt;/code&gt; 수준 : 일반적으로 오류 메시지를 기록하는 데 사용됩니다. 이 수준의 &lt;a href=&quot;#getSeverity()&quot;&gt;심각도&lt;/a&gt; 는 &lt;code&gt;1000&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0fd8828d44db21a3c67a6fc02ed7689a1bab858b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXIT_ON_CLOSE&lt;/code&gt; (defined in &lt;code&gt;WindowConstants&lt;/code&gt;): Exit the application using the &lt;code&gt;System&lt;/code&gt;&lt;code&gt;exit&lt;/code&gt; method. Use this only in applications.</source>
          <target state="translated">&lt;code&gt;EXIT_ON_CLOSE&lt;/code&gt; ( &lt;code&gt;WindowConstants&lt;/code&gt; 에 정의 됨 ) : &lt;code&gt;System&lt;/code&gt; &lt;code&gt;exit&lt;/code&gt; 메소드를 사용하여 애플리케이션을 종료 합니다. 응용 프로그램에서만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4292064b88de46c02ba526ea6e79d012512d7d31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ElementIterator&lt;/code&gt;, as the name suggests, iterates over the &lt;code&gt;Element&lt;/code&gt; tree.</source>
          <target state="translated">&lt;code&gt;ElementIterator&lt;/code&gt; 이름에서 알 수 있듯이 ElementIterator 는 &lt;code&gt;Element&lt;/code&gt; 트리를 반복합니다 .</target>
        </trans-unit>
        <trans-unit id="26d2a3b87d52fd9f32afa8afa957a0eea56b362c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ElementIterator&lt;/code&gt;, as the name suggests, iterates over the &lt;code&gt;Element&lt;/code&gt; tree. The constructor can be invoked with either &lt;code&gt;Document&lt;/code&gt; or an &lt;code&gt;Element&lt;/code&gt; as an argument. If the constructor is invoked with a &lt;code&gt;Document&lt;/code&gt; as an argument then the root of the iteration is the return value of &lt;code&gt;document.getDefaultRootElement()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ElementIterator&lt;/code&gt; 이름에서 알 수 있듯이 ElementIterator 는 &lt;code&gt;Element&lt;/code&gt; 트리를 반복합니다 . 생성자는 &lt;code&gt;Document&lt;/code&gt; 또는 &lt;code&gt;Element&lt;/code&gt; 를 인수로 사용하여 호출 할 수 있습니다 . 생성자가 &lt;code&gt;Document&lt;/code&gt; 를 인수로 사용하여 호출되는 경우 반복의 루트는 &lt;code&gt;document.getDefaultRootElement()&lt;/code&gt; 의 반환 값입니다 .</target>
        </trans-unit>
        <trans-unit id="8e5a65e686d575c44f22ac408a8801a25074e345" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EmptySelectionModel&lt;/code&gt; is a &lt;code&gt;TreeSelectionModel&lt;/code&gt; that does not allow anything to be selected.</source>
          <target state="translated">&lt;code&gt;EmptySelectionModel&lt;/code&gt; 은 아무것도 선택할 수없는 &lt;code&gt;TreeSelectionModel&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0ba9184609fdda58a17d4ca99ec16ca7f8538f62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Entity&lt;/code&gt; nodes can be imported, however in the current release of the DOM the &lt;code&gt;DocumentType&lt;/code&gt; is readonly. Ability to add these imported nodes to a &lt;code&gt;DocumentType&lt;/code&gt; will be considered for addition to a future release of the DOM.On import, the &lt;code&gt;publicId&lt;/code&gt;, &lt;code&gt;systemId&lt;/code&gt;, and &lt;code&gt;notationName&lt;/code&gt; attributes are copied. If a &lt;code&gt;deep&lt;/code&gt; import is requested, the descendants of the the source &lt;code&gt;Entity&lt;/code&gt; are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</source>
          <target state="translated">&lt;code&gt;Entity&lt;/code&gt; 노드를 가져올 수 있지만 현재 DOM 릴리스에서 &lt;code&gt;DocumentType&lt;/code&gt; 은 읽기 전용입니다. 이러한 가져온 노드를 &lt;code&gt;DocumentType&lt;/code&gt; 에 추가하는 기능은 향후 DOM 릴리스에 추가 할 수 있도록 고려됩니다. 가져 오기시 &lt;code&gt;publicId&lt;/code&gt; , &lt;code&gt;systemId&lt;/code&gt; 및 &lt;code&gt;notationName&lt;/code&gt; 속성이 복사됩니다. 경우 &lt;code&gt;deep&lt;/code&gt; 가져 오기가 요청되면, 소스의 자손 &lt;code&gt;Entity&lt;/code&gt; 재귀 적으로 수입되고 결과 노드는 해당 서브 트리를 형성하기 위해 재 조립.</target>
        </trans-unit>
        <trans-unit id="2ece41806e5911c85908381b8e2a153c52badab3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Entity&lt;/code&gt; nodes cannot be adopted.</source>
          <target state="translated">&lt;code&gt;Entity&lt;/code&gt; 노드는 채택 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2cb6a6158fd92155f5b9b63ec7bb51d344ef21c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Entity&lt;/code&gt; nodes, when written directly by &lt;code&gt;LSSerializer.write&lt;/code&gt;, outputs the entity expansion but no namespace fixup is done. The resulting output will be valid as an external entity.</source>
          <target state="translated">&lt;code&gt;Entity&lt;/code&gt; &lt;code&gt;LSSerializer.write&lt;/code&gt; 에 의해 직접 작성된 엔티티 노드 는 엔티티 확장을 출력하지만 네임 스페이스 수정은 수행되지 않습니다. 결과 출력은 외부 엔티티로 유효합니다.</target>
        </trans-unit>
        <trans-unit id="2bd6af26cb179e2c9c63c07856120ebfe1563820" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EntityReference&lt;/code&gt; nodes may be used to represent an entity reference in the tree.</source>
          <target state="translated">&lt;code&gt;EntityReference&lt;/code&gt; 노드는 트리에서 엔티티 참조를 나타내는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c71b309f4451b904dd8b954021969ec850b75700" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EntityReference&lt;/code&gt; nodes may be used to represent an entity reference in the tree. Note that character references and references to predefined entities are considered to be expanded by the HTML or XML processor so that characters are represented by their Unicode equivalent rather than by an entity reference. Moreover, the XML processor may completely expand references to entities while building the &lt;code&gt;Document&lt;/code&gt;, instead of providing &lt;code&gt;EntityReference&lt;/code&gt; nodes. If it does provide such nodes, then for an &lt;code&gt;EntityReference&lt;/code&gt; node that represents a reference to a known entity an &lt;code&gt;Entity&lt;/code&gt; exists, and the subtree of the &lt;code&gt;EntityReference&lt;/code&gt; node is a copy of the &lt;code&gt;Entity&lt;/code&gt; node subtree. However, the latter may not be true when an entity contains an unbound namespace prefix. In such a case, because the namespace prefix resolution depends on where the entity reference is, the descendants of the &lt;code&gt;EntityReference&lt;/code&gt; node may be bound to different namespace URIs. When an &lt;code&gt;EntityReference&lt;/code&gt; node represents a reference to an unknown entity, the node has no children and its replacement value, when used by &lt;code&gt;Attr.value&lt;/code&gt; for example, is empty.</source>
          <target state="translated">&lt;code&gt;EntityReference&lt;/code&gt; 노드는 트리에서 엔티티 참조를 나타내는 데 사용될 수 있습니다. 문자 참조 및 사전 정의 된 엔티티에 대한 참조는 HTML 또는 XML 프로세서에 의해 확장 된 것으로 간주되므로 문자는 엔티티 참조가 아닌 해당 유니 코드로 표시됩니다. 또한 XML 프로세서는 &lt;code&gt;EntityReference&lt;/code&gt; 노드 를 제공하는 대신 &lt;code&gt;Document&lt;/code&gt; 를 빌드하는 동안 엔티티에 대한 참조를 완전히 확장 할 수 있습니다 . 그러한 노드를 제공 하는 경우 알려진 엔티티에 대한 참조를 나타내는 &lt;code&gt;EntityReference&lt;/code&gt; 노드의 경우 &lt;code&gt;Entity&lt;/code&gt; 가 존재하고 &lt;code&gt;EntityReference&lt;/code&gt; 노드 의 서브 트리는 &lt;code&gt;Entity&lt;/code&gt; 의 사본입니다.노드 하위 트리. 그러나 엔터티에 바인딩되지 않은 네임 스페이스 접두사가 포함 된 경우 후자는 사실이 아닐 수 있습니다. 이러한 경우 네임 스페이스 접두사 확인은 엔터티 참조가있는 위치에 따라 다르므로 &lt;code&gt;EntityReference&lt;/code&gt; 노드 의 하위 항목이 다른 네임 스페이스 URI에 바인딩 될 수 있습니다. 때 &lt;code&gt;EntityReference&lt;/code&gt; 의해 사용될 때 노드가 알려진 개체에 대한 참조를 나타내고, 노드에는 아이와 대체 값을주지 &lt;code&gt;Attr.value&lt;/code&gt; 예 비어있다.</target>
        </trans-unit>
        <trans-unit id="c6c8c75a843a696aa22bb97cbd1c0166de9cd0b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Era&lt;/code&gt; returns &lt;code&gt;ERAS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Era&lt;/code&gt; 는 &lt;code&gt;ERAS&lt;/code&gt; 를 반환</target>
        </trans-unit>
        <trans-unit id="583e47b2348bb953596dfef107cbc3d6bf478432" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Era&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;Era&lt;/code&gt; 는 null을 반환</target>
        </trans-unit>
        <trans-unit id="79fc68e18753cfbbe2367d304206e532d69df9df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Era&lt;/code&gt; returns the associated chronology</source>
          <target state="translated">&lt;code&gt;Era&lt;/code&gt; 는 연대기를 돌려 준다</target>
        </trans-unit>
        <trans-unit id="7663a3eee3e4b4a9d845bf69b416e73656374f90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ErroneousSnippet&lt;/code&gt; is immutable: an access to any of its methods will always return the same result. and thus is thread-safe.</source>
          <target state="translated">&lt;code&gt;ErroneousSnippet&lt;/code&gt; 은 변경할 수 없습니다. 메서드에 대한 액세스는 항상 동일한 결과를 반환합니다. 따라서 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="b0bd94277b509521f6b0d76b3f181090c5e24828" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Event&lt;/code&gt; is a platform-independent class that encapsulates events from the platform's Graphical User Interface in the Java 1.0 event model. In Java 1.1 and later versions, the &lt;code&gt;Event&lt;/code&gt; class is maintained only for backwards compatibility. The information in this class description is provided to assist programmers in converting Java 1.0 programs to the new event model.</source>
          <target state="translated">&lt;code&gt;Event&lt;/code&gt; 는 Java 1.0 이벤트 모델에서 플랫폼의 그래픽 사용자 인터페이스의 이벤트를 캡슐화하는 플랫폼 독립적 인 클래스입니다. Java 1.1 이상 버전에서 &lt;code&gt;Event&lt;/code&gt; 클래스는 이전 버전과의 호환성을 위해서만 유지됩니다. 이 클래스 설명의 정보는 프로그래머가 Java 1.0 프로그램을 새 이벤트 모델로 변환하는 데 도움을주기 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="90b4c5122f384da2b33a8c47aee335116a89598a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EventQueue&lt;/code&gt; is a platform-independent class that queues events, both from the underlying peer classes and from trusted application classes.</source>
          <target state="translated">&lt;code&gt;EventQueue&lt;/code&gt; 는 기본 피어 클래스와 신뢰할 수있는 애플리케이션 클래스 모두에서 이벤트를 큐에 넣는 플랫폼 독립적 인 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="e61fc6572bdbb2cf438572e25d30fb15b1fc1837" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExpressionSnippet&lt;/code&gt; is immutable: an access to any of its methods will always return the same result. and thus is thread-safe.</source>
          <target state="translated">&lt;code&gt;ExpressionSnippet&lt;/code&gt; 은 변경할 수 없습니다. 메서드에 액세스하면 항상 동일한 결과가 반환됩니다. 따라서 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="61a107bd16a84ea6bf0780cdb11a06c3d6e516c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; - the class implementing &lt;a href=&quot;typedescriptor.offield&quot;&gt;TypeDescriptor.OfField&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;F&lt;/code&gt; - &lt;a href=&quot;typedescriptor.offield&quot;&gt;TypeDescriptor.OfField를&lt;/a&gt; 구현하는 클래스</target>
        </trans-unit>
        <trans-unit id="5be692751fb19ebf9647e17be2c244dfc7b8cc3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; - the kind of file object forwarded to by this object</source>
          <target state="translated">&lt;code&gt;F&lt;/code&gt; - 이 객체가 전송 한 파일 객체의 종류</target>
        </trans-unit>
        <trans-unit id="d79bfe74e17123ea5e773ba3c7f55480d2bc8686" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; - the type representing field type descriptors</source>
          <target state="translated">&lt;code&gt;F&lt;/code&gt; - 필드 유형 설명자를 나타내는 유형</target>
        </trans-unit>
        <trans-unit id="cba960ec4c81ca0de97fa7fd5a5b2acef3592fc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_ACCEPT&lt;/code&gt; if the &lt;code&gt;Element&lt;/code&gt; should be included in the DOM document being built.</source>
          <target state="translated">&lt;code&gt;FILTER_ACCEPT&lt;/code&gt; &lt;code&gt;Element&lt;/code&gt; 가 빌드중인 DOM 문서에 포함되어야하는 경우 FILTER_ACCEPT .</target>
        </trans-unit>
        <trans-unit id="cdb365489828fe5f7aa7e7e89f053527e5b53fce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_ACCEPT&lt;/code&gt; if this &lt;code&gt;Node&lt;/code&gt; should be included in the DOM document being built.</source>
          <target state="translated">&lt;code&gt;FILTER_ACCEPT&lt;/code&gt; 이 &lt;code&gt;Node&lt;/code&gt; 가 빌드중인 DOM 문서에 포함되어야하는 경우 FILTER_ACCEPT .</target>
        </trans-unit>
        <trans-unit id="f5d22d13b475a2e19e2f36de25e79b3abc15fe49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_INTERRUPT&lt;/code&gt; if the filter wants to stop the processing of the document. Interrupting the processing of the document does no longer guarantee that the resulting DOM tree is XML well-formed. The &lt;code&gt;Element&lt;/code&gt; is rejected.</source>
          <target state="translated">&lt;code&gt;FILTER_INTERRUPT&lt;/code&gt; 필터가 문서 처리를 중지하려는 경우 FILTER_INTERRUPT 입니다. 문서 처리를 중단한다고해서 결과 DOM 트리가 XML 형식이 올바른지 더 이상 보장하지 않습니다. &lt;code&gt;Element&lt;/code&gt; 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="2f9b2f9c0745c204bfc472facf3e22d57ddb382e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_INTERRUPT&lt;/code&gt; if the filter wants to stop the processing of the document. Interrupting the processing of the document does no longer guarantee that the resulting DOM tree is XML well-formed. The &lt;code&gt;Node&lt;/code&gt; is accepted and will be the last completely parsed node.</source>
          <target state="translated">&lt;code&gt;FILTER_INTERRUPT&lt;/code&gt; 필터가 문서 처리를 중지하려는 경우 FILTER_INTERRUPT 입니다. 문서 처리를 중단한다고해서 결과 DOM 트리가 XML 형식이 올바른지 더 이상 보장하지 않습니다. &lt;code&gt;Node&lt;/code&gt; 허용됩니다 마지막 완전하게 해석 노드가 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="aa9be6163725d49380f8a0d3232fb6457d3efa2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_REJECT&lt;/code&gt; if the &lt;code&gt;Element&lt;/code&gt; and all of its children should be rejected.</source>
          <target state="translated">&lt;code&gt;FILTER_REJECT&lt;/code&gt; &lt;code&gt;Element&lt;/code&gt; 및 모든 하위 요소를 거부 해야하는 경우 FILTER_REJECT .</target>
        </trans-unit>
        <trans-unit id="4c6bf521cf55c183abb0baa51d7c2137eab0204f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_REJECT&lt;/code&gt; if the &lt;code&gt;Node&lt;/code&gt; and all of its children should be rejected.</source>
          <target state="translated">&lt;code&gt;FILTER_REJECT&lt;/code&gt; 경우 생성 &lt;code&gt;Node&lt;/code&gt; 와 모든 자식은 거부되어야한다.</target>
        </trans-unit>
        <trans-unit id="6a43f64dd5b6cd50eac4a1bc25d94a1d5d9603d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_SKIP&lt;/code&gt; if the &lt;code&gt;Element&lt;/code&gt; should be skipped. All of its children are inserted in place of the skipped &lt;code&gt;Element&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;FILTER_SKIP&lt;/code&gt; &lt;code&gt;Element&lt;/code&gt; 를 건너 뛰어야 하는 경우 FILTER_SKIP . 모든 자식이 건너 뛴 &lt;code&gt;Element&lt;/code&gt; 노드 대신 삽입됩니다 .</target>
        </trans-unit>
        <trans-unit id="1b4dd3bdcef625de6de84a7811e612f2f55f8f53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_SKIP&lt;/code&gt; if the &lt;code&gt;Node&lt;/code&gt; should be skipped and the &lt;code&gt;Node&lt;/code&gt; should be replaced by all the children of the &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FILTER_SKIP&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 생략되어야하며 &lt;code&gt;Node&lt;/code&gt; 의 모든 자식에 의해 대체되어야 &lt;code&gt;Node&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="629d29c206731a97fc916c39b34395adad34522c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FONT&lt;/code&gt; is used for special situations where clients already have a &lt;code&gt;Font&lt;/code&gt; instance but still need to use &lt;code&gt;Map&lt;/code&gt;-based APIs. Typically, there will be no other attributes in the &lt;code&gt;Map&lt;/code&gt; except the &lt;code&gt;FONT&lt;/code&gt; attribute. With &lt;code&gt;Map&lt;/code&gt;-based APIs the common case is to specify all attributes individually, so &lt;code&gt;FONT&lt;/code&gt; is not needed or desirable.</source>
          <target state="translated">&lt;code&gt;FONT&lt;/code&gt; 는 클라이언트가 이미 &lt;code&gt;Font&lt;/code&gt; 인스턴스를 가지고 있지만 여전히 &lt;code&gt;Map&lt;/code&gt; 기반 API 를 사용해야 하는 특수한 상황 에 사용 됩니다. 일반적으로 &lt;code&gt;Map&lt;/code&gt; 에는 &lt;code&gt;FONT&lt;/code&gt; 속성을 제외한 다른 속성이 없습니다 . 함께 &lt;code&gt;Map&lt;/code&gt; API를 기반 그래서 일반적인 경우는 개별적으로 모든 속성을 지정하는 것입니다 &lt;code&gt;FONT&lt;/code&gt; 이 필요하거나 바람직하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f1c4f0e5d2f3ee6dd6ba02bb13ae2f21c342fed0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FOREGROUND&lt;/code&gt; and &lt;code&gt;BACKGROUND&lt;/code&gt; use &lt;code&gt;Paint&lt;/code&gt; values. The subclass &lt;code&gt;Color&lt;/code&gt; is serializable, while &lt;code&gt;GradientPaint&lt;/code&gt; and &lt;code&gt;TexturePaint&lt;/code&gt; are not.</source>
          <target state="translated">&lt;code&gt;FOREGROUND&lt;/code&gt; 및 &lt;code&gt;BACKGROUND&lt;/code&gt; 는 &lt;code&gt;Paint&lt;/code&gt; 값을 사용 합니다. 하위 클래스 &lt;code&gt;Color&lt;/code&gt; 는 직렬화 가능하지만 &lt;code&gt;GradientPaint&lt;/code&gt; 및 &lt;code&gt;TexturePaint&lt;/code&gt; 는 직렬화 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e3ab6915a15e18ace8239e0d1239fd06842d0f81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FieldPosition&lt;/code&gt; is a simple class used by &lt;code&gt;Format&lt;/code&gt; and its subclasses to identify fields in formatted output.</source>
          <target state="translated">&lt;code&gt;FieldPosition&lt;/code&gt; 은 형식화 된 출력에서 ​​필드를 식별하기 위해 &lt;code&gt;Format&lt;/code&gt; 및 해당 서브 클래스에서 사용하는 간단한 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="fda64cbfb2561fa529680eb4dcd35983f4574716" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FieldPosition&lt;/code&gt; is a simple class used by &lt;code&gt;Format&lt;/code&gt; and its subclasses to identify fields in formatted output. Fields can be identified in two ways:</source>
          <target state="translated">&lt;code&gt;FieldPosition&lt;/code&gt; 은 형식화 된 출력에서 ​​필드를 식별하기 위해 &lt;code&gt;Format&lt;/code&gt; 및 해당 서브 클래스에서 사용하는 간단한 클래스 입니다. 필드는 두 가지 방법으로 식별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66d8c4e02a9ae1f6d9d57f566aefd6d9839cc41b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FieldPosition&lt;/code&gt; keeps track of the position of the field within the formatted output with two indices: the index of the first character of the field and the index of the last character of the field.</source>
          <target state="translated">&lt;code&gt;FieldPosition&lt;/code&gt; 은 필드의 첫 번째 문자 색인과 필드의 마지막 문자 색인이라는 두 개의 색인으로 형식화 된 출력 내에서 필드 위치를 추적합니다.</target>
        </trans-unit>
        <trans-unit id="2bb0a06ff0f9e0567e91d312b3f3769ebc3d0845" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileFilter&lt;/code&gt; is an abstract class used by &lt;code&gt;JFileChooser&lt;/code&gt; for filtering the set of files shown to the user.</source>
          <target state="translated">&lt;code&gt;FileFilter&lt;/code&gt; 는 사용자에게 표시되는 파일 세트를 필터링하기 위해 &lt;code&gt;JFileChooser&lt;/code&gt; 에서 사용하는 추상 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="bd6c31e0bc4c051ed7a19ff8a1acf19468ee3512" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileFilter&lt;/code&gt; is an abstract class used by &lt;code&gt;JFileChooser&lt;/code&gt; for filtering the set of files shown to the user. See &lt;code&gt;FileNameExtensionFilter&lt;/code&gt; for an implementation that filters using the file name extension.</source>
          <target state="translated">&lt;code&gt;FileFilter&lt;/code&gt; 는 사용자에게 표시되는 파일 세트를 필터링하기 위해 &lt;code&gt;JFileChooser&lt;/code&gt; 에서 사용하는 추상 클래스 입니다. 파일 이름 확장자를 사용하여 필터링하는 구현 은 &lt;code&gt;FileNameExtensionFilter&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bda55279bf1395102f4c2fd5b7ba10266002c018" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileInputStream&lt;/code&gt; is meant for reading streams of raw bytes such as image data. For reading streams of characters, consider using &lt;code&gt;FileReader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileInputStream&lt;/code&gt; 은 이미지 데이터와 같은 원시 바이트 스트림을 읽는 데 사용됩니다. 문자 스트림을 읽으 &lt;code&gt;FileReader&lt;/code&gt; 사용을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="ada3748517c825d7b93819ccfd538cc1bf08cb90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileOutputStream&lt;/code&gt; is meant for writing streams of raw bytes such as image data. For writing streams of characters, consider using &lt;code&gt;FileWriter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileOutputStream&lt;/code&gt; 은 이미지 데이터와 같은 원시 바이트 스트림을 쓰는 데 사용됩니다. 문자 스트림을 쓰 &lt;code&gt;FileWriter&lt;/code&gt; 사용을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="e3b4a87bff782fbf99e63f9b586a9fd6571b5349" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileReader&lt;/code&gt; is meant for reading streams of characters. For reading streams of raw bytes, consider using a &lt;code&gt;FileInputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileReader&lt;/code&gt; 는 문자 스트림을 읽는 데 사용됩니다. 원시 바이트 스트림을 읽으 &lt;code&gt;FileInputStream&lt;/code&gt; 사용을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="ac15f3d7a2af52f0935898602d2d48b66b7a0979" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileTime&lt;/code&gt; can store points on the time-line further in the future and further in the past than &lt;code&gt;Instant&lt;/code&gt;. Conversion from such further time points saturates to &lt;a href=&quot;../../../time/instant#MIN&quot;&gt;&lt;code&gt;Instant.MIN&lt;/code&gt;&lt;/a&gt; if earlier than &lt;code&gt;Instant.MIN&lt;/code&gt; or &lt;a href=&quot;../../../time/instant#MAX&quot;&gt;&lt;code&gt;Instant.MAX&lt;/code&gt;&lt;/a&gt; if later than &lt;code&gt;Instant.MAX&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileTime&lt;/code&gt; 은 타임 라인에 포인트를 미래에 그리고 과거에 더 멀리 &lt;code&gt;Instant&lt;/code&gt; 에 저장할 수 있습니다 . 그러한 더욱 시점 포화에서 변환 &lt;a href=&quot;../../../time/instant#MIN&quot;&gt; &lt;code&gt;Instant.MIN&lt;/code&gt; &lt;/a&gt; 이상의 경우 이전 &lt;code&gt;Instant.MIN&lt;/code&gt; 또는 &lt;a href=&quot;../../../time/instant#MAX&quot;&gt; &lt;code&gt;Instant.MAX&lt;/code&gt; &lt;/a&gt; 경우 늦어도 &lt;code&gt;Instant.MAX&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca56c87eb1dc576b27179980fc510da7644e22f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileView&lt;/code&gt; defines an abstract class that can be implemented to provide the filechooser with UI information for a &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileView&lt;/code&gt; 는 &lt;code&gt;File&lt;/code&gt; 에 대한 UI 정보를 filechooser에 제공하기 위해 구현할 수있는 추상 클래스를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="a27524f79276ffe7f2c58d564637073c4b609ef4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileView&lt;/code&gt; defines an abstract class that can be implemented to provide the filechooser with UI information for a &lt;code&gt;File&lt;/code&gt;. Each L&amp;amp;F &lt;code&gt;JFileChooserUI&lt;/code&gt; object implements this class to pass back the correct icons and type descriptions specific to that L&amp;amp;F. For example, the Microsoft Windows L&amp;amp;F returns the generic Windows icons for directories and generic files. Additionally, you may want to provide your own &lt;code&gt;FileView&lt;/code&gt; to &lt;code&gt;JFileChooser&lt;/code&gt; to return different icons or additional information using &lt;a href=&quot;../jfilechooser#setFileView(javax.swing.filechooser.FileView)&quot;&gt;&lt;code&gt;JFileChooser.setFileView(javax.swing.filechooser.FileView)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;FileView&lt;/code&gt; 는 &lt;code&gt;File&lt;/code&gt; 에 대한 UI 정보를 filechooser에 제공하기 위해 구현할 수있는 추상 클래스를 정의합니다 . 각 L &amp;amp; F &lt;code&gt;JFileChooserUI&lt;/code&gt; 객체는이 클래스를 구현하여 해당 L &amp;amp; F에 특정한 올바른 아이콘과 유형 설명을 전달합니다. 예를 들어 Microsoft Windows L &amp;amp; F는 디렉터리 및 일반 파일에 대한 일반 Windows 아이콘을 반환합니다. 또한 &lt;a href=&quot;../jfilechooser#setFileView(javax.swing.filechooser.FileView)&quot;&gt; &lt;code&gt;JFileChooser.setFileView(javax.swing.filechooser.FileView)&lt;/code&gt; &lt;/a&gt; 사용하여 다른 아이콘이나 추가 정보를 반환 하기 위해 &lt;code&gt;JFileChooser&lt;/code&gt; 에 고유 한 &lt;code&gt;FileView&lt;/code&gt; 를 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a790825a9e717827b75ebf3946247521a25807c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileWriter&lt;/code&gt; is meant for writing streams of characters. For writing streams of raw bytes, consider using a &lt;code&gt;FileOutputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileWriter&lt;/code&gt; 는 문자 스트림을 작성하기위한 것입니다. 원시 바이트 스트림을 쓰 &lt;code&gt;FileOutputStream&lt;/code&gt; 사용을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="0e9e751657ebec6ebbc76a771274c62f7a59ce8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FlavorEvent&lt;/code&gt; is used to notify interested parties that available &lt;a href=&quot;dataflavor&quot;&gt;&lt;code&gt;DataFlavor&lt;/code&gt;&lt;/a&gt;s have changed in the &lt;a href=&quot;clipboard&quot;&gt;&lt;code&gt;Clipboard&lt;/code&gt;&lt;/a&gt; (the event source).</source>
          <target state="translated">&lt;code&gt;FlavorEvent&lt;/code&gt; 는 사용 가능한 &lt;a href=&quot;dataflavor&quot;&gt; &lt;code&gt;DataFlavor&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;clipboard&quot;&gt; &lt;code&gt;Clipboard&lt;/code&gt; &lt;/a&gt; (이벤트 소스) 에서 변경 되었음을 이해 당사자에게 알리는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="1436c5ba3e88606e2237f1f1f8ec20d656ec1846" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FlavorException&lt;/code&gt;. If the document has a flavor not supported by this print job.</source>
          <target state="translated">&lt;code&gt;FlavorException&lt;/code&gt; . 문서에이 인쇄 작업에서 지원하지 않는 특징이있는 경우.</target>
        </trans-unit>
        <trans-unit id="765e7b336ed61134d2c9e5cd2128f29f7276e436" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Float.NaN&lt;/code&gt; is considered by this method to be equal to itself and greater than all other &lt;code&gt;float&lt;/code&gt; values (including &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Float.NaN&lt;/code&gt; 은이 메소드에서 자신과 같고 다른 모든 &lt;code&gt;float&lt;/code&gt; 값 ( &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt; 포함 ) 보다 큰 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="637ef1470aa27d35e688638b0badff5e9cf0a4c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FocusListener&lt;/code&gt; that are attached to the &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FocusListener&lt;/code&gt; &lt;code&gt;JTable&lt;/code&gt; 에 첨부 된 FocusListener .</target>
        </trans-unit>
        <trans-unit id="d6a6d3e6a36cc50c4ca6ec901f02a2f3548442f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FocusListener&lt;/code&gt; that attached to &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FocusListener&lt;/code&gt; &lt;code&gt;JList&lt;/code&gt; 에 첨부 된 FocusListener .</target>
        </trans-unit>
        <trans-unit id="d47124dca2bc4d669a09c09246ac4abaee8ea3ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Font&lt;/code&gt; in this &lt;code&gt;GraphicsEnvironment&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; 이 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; 의글꼴 입니다 .</target>
        </trans-unit>
        <trans-unit id="c55f8b6ca0604a6285d7b7b0add2ef888859fdad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Font&lt;/code&gt; in this &lt;code&gt;GraphicsEnvironment&lt;/code&gt;. A created font is one that was returned from calling &lt;a href=&quot;font#createFont(int,java.io.InputStream)&quot;&gt;&lt;code&gt;Font.createFont(int, java.io.InputStream)&lt;/code&gt;&lt;/a&gt;, or derived from a created font by calling &lt;a href=&quot;font#deriveFont(int,float)&quot;&gt;&lt;code&gt;Font.deriveFont(int, float)&lt;/code&gt;&lt;/a&gt;. After calling this method for such a font, it is available to be used in constructing new &lt;code&gt;Font&lt;/code&gt;s by name or family name, and is enumerated by &lt;a href=&quot;#getAvailableFontFamilyNames()&quot;&gt;&lt;code&gt;getAvailableFontFamilyNames()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getAllFonts()&quot;&gt;&lt;code&gt;getAllFonts()&lt;/code&gt;&lt;/a&gt; within the execution context of this application or applet. This means applets cannot register fonts in a way that they are visible to other applets.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; 이 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; 의글꼴 입니다 . 생성 된 글꼴은 &lt;a href=&quot;font#createFont(int,java.io.InputStream)&quot;&gt; &lt;code&gt;Font.createFont(int, java.io.InputStream)&lt;/code&gt; &lt;/a&gt; 호출에서 반환 되거나 &lt;a href=&quot;font#deriveFont(int,float)&quot;&gt; &lt;code&gt;Font.deriveFont(int, float)&lt;/code&gt; &lt;/a&gt; 호출하여 생성 된 글꼴에서 파생 된 글꼴 입니다. 이러한 글꼴에 대해이 메서드를 호출 한 후 이름 또는 계열 이름으로 새 &lt;code&gt;Font&lt;/code&gt; 를 구성하는 데 사용할 수 &lt;a href=&quot;#getAllFonts()&quot;&gt; &lt;code&gt;getAllFonts()&lt;/code&gt; &lt;/a&gt; 응용 프로그램 또는 애플릿의 실행 컨텍스트 내에서 &lt;a href=&quot;#getAvailableFontFamilyNames()&quot;&gt; &lt;code&gt;getAvailableFontFamilyNames()&lt;/code&gt; &lt;/a&gt; 및 getAllFonts ()에 의해 열거됩니다 . 즉, 애플릿은 다른 애플릿에서 볼 수있는 방식으로 글꼴을 등록 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0e182e216ed621f72714d3893bd0a590ca28b868" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Font&lt;/code&gt; supports most &lt;code&gt;TextAttribute&lt;/code&gt;s. This makes some operations, such as rendering underlined text, convenient since it is not necessary to explicitly construct a &lt;code&gt;TextLayout&lt;/code&gt; object. Attributes can be set on a Font by constructing or deriving it using a &lt;code&gt;Map&lt;/code&gt; of &lt;code&gt;TextAttribute&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; 는 대부분의 &lt;code&gt;TextAttribute&lt;/code&gt; 를 지원합니다 . 이렇게하면 &lt;code&gt;TextLayout&lt;/code&gt; 개체 를 명시 적으로 구성 할 필요가 없기 때문에 밑줄이 그어진 텍스트 렌더링과 같은 일부 작업이 편리해 집니다. 속성 은 &lt;code&gt;TextAttribute&lt;/code&gt; 값 의 &lt;code&gt;Map&lt;/code&gt; 을 사용하여 생성하거나 파생하여 글꼴에 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="016ca9568911c6fae35586d06c0d33cf0e9cabf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Font&lt;/code&gt; used to create this &lt;code&gt;GlyphVector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; 이 &lt;code&gt;GlyphVector&lt;/code&gt; 를 만드는 데 사용되는 글꼴 입니다.</target>
        </trans-unit>
        <trans-unit id="fd1a90f175dfa8abb6d76861f25d4b4c96620e51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Font&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="faf7e468c322d805314bfe554b4394cf7eff07eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FontRenderContext&lt;/code&gt; used to create this &lt;code&gt;GlyphVector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FontRenderContext&lt;/code&gt; 이 &lt;code&gt;GlyphVector&lt;/code&gt; 를 만드는 데 사용되는 FontRenderContext 입니다.</target>
        </trans-unit>
        <trans-unit id="6c80c194d85330eba1df1471b0c8a7010ea54635" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Format&lt;/code&gt; defines the programming interface for formatting locale-sensitive objects into &lt;code&gt;String&lt;/code&gt;s (the &lt;code&gt;format&lt;/code&gt; method) and for parsing &lt;code&gt;String&lt;/code&gt;s back into objects (the &lt;code&gt;parseObject&lt;/code&gt; method).</source>
          <target state="translated">&lt;code&gt;Format&lt;/code&gt; 은 로케일에 민감한 객체를 &lt;code&gt;String&lt;/code&gt; &lt;code&gt;format&lt;/code&gt; 하고 ( format 메소드) &lt;code&gt;String&lt;/code&gt; 을 객체로 다시 파싱하기위한 &lt;code&gt;parseObject&lt;/code&gt; ( parseObject 메소드)를 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="c59f9e8d3608aea2b5056402fc29df21518df4bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Format&lt;/code&gt; is an abstract base class for formatting locale-sensitive information such as dates, messages, and numbers.</source>
          <target state="translated">&lt;code&gt;Format&lt;/code&gt; 은 날짜, 메시지 및 숫자와 같은 로케일 구분 정보를 형식화하기위한 추상 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="da7bcc736d2882db7bc7fc0eded36953550dc16e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FractionalSecond&lt;/code&gt; is optional and has a value of &lt;code&gt;null&lt;/code&gt; when it is undefined.</source>
          <target state="translated">&lt;code&gt;FractionalSecond&lt;/code&gt; 는 선택 사항이며 정의되지 않은 경우 &lt;code&gt;null&lt;/code&gt; 값을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="8e1ef4f87d3f427db9ce18ec1f8cb30a45e0fe25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Frame.NORMAL&lt;/code&gt; or &lt;code&gt;Frame.ICONIFIED&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Frame.NORMAL&lt;/code&gt; 또는 &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe72b97ebf3428cbb8bb5cc6319b3975c4535280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET&lt;/code&gt; corresponds to the GET form method</source>
          <target state="translated">&lt;code&gt;GET&lt;/code&gt; 은 GET 양식 메소드에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="17ba9144146a6b5a003341c14bd43055be4547f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GcInfo&lt;/code&gt; is a &lt;a href=&quot;../../../../java.management/javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; The GC-specific attributes can be obtained via the CompositeData interface. This is a historical relic, and other classes should not copy this pattern. Use &lt;a href=&quot;../../../../java.management/javax/management/openmbean/compositedataview&quot;&gt;&lt;code&gt;CompositeDataView&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;GcInfo&lt;/code&gt; 는 &lt;a href=&quot;../../../../java.management/javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; 입니다&lt;/a&gt; . GC 관련 속성은 CompositeData 인터페이스를 통해 얻을 수 있습니다. 이것은 역사적인 유물이며 다른 클래스는이 패턴을 복사해서는 안됩니다. 대신 &lt;a href=&quot;../../../../java.management/javax/management/openmbean/compositedataview&quot;&gt; &lt;code&gt;CompositeDataView&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c6c9299d58f79aee24fe71d25c4094de847fd5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GcInfo&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../../java.management/javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; with attributes as specified in the &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;GcInfo&lt;/code&gt; 는 &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 속성 을 사용하여 &lt;a href=&quot;../../../../java.management/javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; 에&lt;/a&gt; 매핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="996bae03ecfe64c70dbcd63440edd88798972644" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GeneralPath&lt;/code&gt; is a legacy final class which exactly implements the behavior of its superclass &lt;a href=&quot;path2d.float&quot;&gt;&lt;code&gt;Path2D.Float&lt;/code&gt;&lt;/a&gt;. Together with &lt;a href=&quot;path2d.double&quot;&gt;&lt;code&gt;Path2D.Double&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;path2d&quot;&gt;&lt;code&gt;Path2D&lt;/code&gt;&lt;/a&gt; classes provide full implementations of a general geometric path that support all of the functionality of the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; interfaces with the ability to explicitly select different levels of internal coordinate precision.</source>
          <target state="translated">&lt;code&gt;GeneralPath&lt;/code&gt; 는 수퍼 클래스 &lt;a href=&quot;path2d.float&quot;&gt; &lt;code&gt;Path2D.Float&lt;/code&gt; &lt;/a&gt; 의 동작을 정확히 구현하는 레거시 최종 클래스입니다 . 함께 &lt;a href=&quot;path2d.double&quot;&gt; &lt;code&gt;Path2D.Double&lt;/code&gt; &lt;/a&gt; 상기 &lt;a href=&quot;path2d&quot;&gt; &lt;code&gt;Path2D&lt;/code&gt; &lt;/a&gt; 클래스의 기능을 모두 지원하는 일반적인 기하학적 경로의 완전한 구현을 제공하는 &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt; 명시 좌표 내부 정밀도의 상이한 레벨을 선택할 수있는 능력을 가진 인터페이스.</target>
        </trans-unit>
        <trans-unit id="b1f322f9576a1567586923394a42f31058e731d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GenericArrayType&lt;/code&gt; represents an array type whose component type is either a parameterized type or a type variable.</source>
          <target state="translated">&lt;code&gt;GenericArrayType&lt;/code&gt; 은 구성 요소 유형이 매개 변수화 된 유형이거나 유형 변수 인 배열 유형을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2bb4eb7ff6a8be3c5843cac4ed24136d23fe97c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GraphicsConfiguration&lt;/code&gt; is the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; of the &lt;code&gt;Component&lt;/code&gt; on which the drag gesture for the current drag operation was recognized. If the cursor location is outside the bounds of the initiator &lt;code&gt;GraphicsConfiguration&lt;/code&gt;, the reported coordinates are clipped to fit within the bounds of that &lt;code&gt;GraphicsConfiguration&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GraphicsConfiguration&lt;/code&gt; 은 현재 드래그 작업에 대한 드래그 제스처가 인식 된 &lt;code&gt;Component&lt;/code&gt; 의 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 입니다 . 커서 위치가 이니시에이터 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 경계를 벗어난 경우보고 된 좌표가 해당 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 경계 내에 맞도록 잘립니다 .</target>
        </trans-unit>
        <trans-unit id="7c6b825eade96f846f628d2d3d18fa928a0567eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GraphicsConfiguration&lt;/code&gt;. The</source>
          <target state="translated">&lt;code&gt;GraphicsConfiguration&lt;/code&gt; . 그만큼</target>
        </trans-unit>
        <trans-unit id="5d2b1320d4ccb976126c9779aa03486dbf1dcf13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GraphicsDevice&lt;/code&gt; corresponding to the pointer</source>
          <target state="translated">&lt;code&gt;GraphicsDevice&lt;/code&gt; 포인터에 해당하는 GraphicsDevice</target>
        </trans-unit>
        <trans-unit id="ea6114ac0b5bca275d6c5f44233cbba34c6c7f2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GregorianCalendar&lt;/code&gt; implements &lt;em&gt;proleptic&lt;/em&gt; Gregorian and Julian calendars. That is, dates are computed by extrapolating the current rules indefinitely far backward and forward in time. As a result, &lt;code&gt;GregorianCalendar&lt;/code&gt; may be used for all years to generate meaningful and consistent results. However, dates obtained using &lt;code&gt;GregorianCalendar&lt;/code&gt; are historically accurate only from March 1, 4 AD onward, when modern Julian calendar rules were adopted. Before this date, leap year rules were applied irregularly, and before 45 BC the Julian calendar did not even exist.</source>
          <target state="translated">&lt;code&gt;GregorianCalendar&lt;/code&gt; 는 &lt;em&gt;proleptic&lt;/em&gt; Gregorian 및 Julian 달력을 구현 합니다. 즉, 날짜는 현재 규칙을 무기한 앞뒤로 시간을 외삽하여 계산됩니다. 결과적으로 &lt;code&gt;GregorianCalendar&lt;/code&gt; 는 수년 동안 의미 있고 일관된 결과를 생성하는 데 사용될 수 있습니다. 그러나 &lt;code&gt;GregorianCalendar&lt;/code&gt; 를 사용하여 얻은 날짜 는 현대 율리우스 달력 규칙이 채택 된 AD 4 년 3 월 1 일 이후로만 정확합니다. 이 날짜 이전에는 윤년 규칙이 불규칙적으로 적용되었으며 기원전 45 년 이전에는 율리우스 력이 없었습니다.</target>
        </trans-unit>
        <trans-unit id="ddf1c29076c0f6197dc9ff1b322c41f015d287a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GregorianCalendar&lt;/code&gt; is a concrete subclass of &lt;code&gt;Calendar&lt;/code&gt; and provides the standard calendar system used by most of the world.</source>
          <target state="translated">&lt;code&gt;GregorianCalendar&lt;/code&gt; 는 &lt;code&gt;Calendar&lt;/code&gt; 의 구체적인 하위 클래스이며 대부분의 세계에서 사용되는 표준 달력 시스템을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="94759b7172a9bedfbb466e01aed3eaebe49b5707" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GregorianCalendar&lt;/code&gt; is a hybrid calendar that supports both the Julian and Gregorian calendar systems with the support of a single discontinuity, which corresponds by default to the Gregorian date when the Gregorian calendar was instituted (October 15, 1582 in some countries, later in others). The cutover date may be changed by the caller by calling &lt;a href=&quot;#setGregorianChange(java.util.Date)&quot;&gt;&lt;code&gt;setGregorianChange()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GregorianCalendar&lt;/code&gt; 는 그레고리력이 제정 된 그레고리력 날짜 (일부 국가에서는 1582 년 10 월 15 일, 나중에 다른 국가에서는 1582 년 10 월 15 일)에 기본적으로 해당하는 단일 불연속성을 지원하는 율리우스 력 및 그레고리력 시스템을 모두 지원하는 하이브리드 캘린더입니다. 컷 오버 날짜는 &lt;a href=&quot;#setGregorianChange(java.util.Date)&quot;&gt; &lt;code&gt;setGregorianChange()&lt;/code&gt; &lt;/a&gt; 를 호출하여 호출자가 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1088c8f0e4b9e54f2b41f4e0f3a6ea2cf397c790" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GregorianCalendar&lt;/code&gt; is a hybrid calendar that supports both the Julian and Gregorian calendar systems with the support of a single discontinuity, which corresponds by default to the Gregorian date when the Gregorian calendar was instituted (October 15, 1582 in some countries, later in others). The cutover date may be changed by the caller by calling &lt;a href=&quot;gregoriancalendar#setGregorianChange-java.util.Date-&quot;&gt;&lt;code&gt;setGregorianChange()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GregorianCalendar&lt;/code&gt; 는 단일 불연속을 지원하여 Julian 및 Gregorian 캘린더 시스템을 모두 지원하는 하이브리드 캘린더입니다. 이는 기본적으로 Gregorian 캘린더가 시작된 그레고리력 날짜에 해당합니다 (일부 국가에서는 1582 년 10 월 15 일, 다른 국가에서는 나중에). 컷 오버 날짜는 호출자가 &lt;a href=&quot;gregoriancalendar#setGregorianChange-java.util.Date-&quot;&gt; &lt;code&gt;setGregorianChange()&lt;/code&gt; &lt;/a&gt; 를 호출하여 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8ba962651252d77c200e1e3da4e48691cc3b0985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GridBagConstraints.CENTER&lt;/code&gt; (the default)</source>
          <target state="translated">&lt;code&gt;GridBagConstraints.CENTER&lt;/code&gt; (기본값)</target>
        </trans-unit>
        <trans-unit id="6ecb6ad7b3fcfb423b1672c87862145fa073880d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Group&lt;/code&gt; provides the basis for the two types of operations supported by &lt;code&gt;GroupLayout&lt;/code&gt;: laying out components one after another (&lt;a href=&quot;grouplayout.sequentialgroup&quot;&gt;&lt;code&gt;SequentialGroup&lt;/code&gt;&lt;/a&gt;) or aligned (&lt;a href=&quot;grouplayout.parallelgroup&quot;&gt;&lt;code&gt;ParallelGroup&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;Group&lt;/code&gt; 은 &lt;code&gt;GroupLayout&lt;/code&gt; 에서 지원하는 두 가지 유형의 작업에 대한 기반을 제공합니다 . 구성 요소를 차례로 배치 ( &lt;a href=&quot;grouplayout.sequentialgroup&quot;&gt; &lt;code&gt;SequentialGroup&lt;/code&gt; &lt;/a&gt; ) 또는 정렬 ( &lt;a href=&quot;grouplayout.parallelgroup&quot;&gt; &lt;code&gt;ParallelGroup&lt;/code&gt; &lt;/a&gt; )합니다.</target>
        </trans-unit>
        <trans-unit id="50204599fc141672bb54402eb7e28e56f6669dd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Group&lt;/code&gt; provides the basis for the two types of operations supported by &lt;code&gt;GroupLayout&lt;/code&gt;: laying out components one after another (&lt;a href=&quot;grouplayout.sequentialgroup&quot;&gt;&lt;code&gt;SequentialGroup&lt;/code&gt;&lt;/a&gt;) or aligned (&lt;a href=&quot;grouplayout.parallelgroup&quot;&gt;&lt;code&gt;ParallelGroup&lt;/code&gt;&lt;/a&gt;). &lt;code&gt;Group&lt;/code&gt; and its subclasses have no public constructor; to create one use one of &lt;code&gt;createSequentialGroup&lt;/code&gt; or &lt;code&gt;createParallelGroup&lt;/code&gt;. Additionally, taking a &lt;code&gt;Group&lt;/code&gt; created from one &lt;code&gt;GroupLayout&lt;/code&gt; and using it with another will produce undefined results.</source>
          <target state="translated">&lt;code&gt;Group&lt;/code&gt; 은 &lt;code&gt;GroupLayout&lt;/code&gt; 에서 지원하는 두 가지 유형의 작업에 대한 기반을 제공합니다 . 구성 요소를 차례로 배치 ( &lt;a href=&quot;grouplayout.sequentialgroup&quot;&gt; &lt;code&gt;SequentialGroup&lt;/code&gt; &lt;/a&gt; ) 또는 정렬 ( &lt;a href=&quot;grouplayout.parallelgroup&quot;&gt; &lt;code&gt;ParallelGroup&lt;/code&gt; &lt;/a&gt; )합니다. &lt;code&gt;Group&lt;/code&gt; 및 하위 클래스에는 공용 생성자가 없습니다. 하나를 만들려면 &lt;code&gt;createSequentialGroup&lt;/code&gt; 또는 &lt;code&gt;createParallelGroup&lt;/code&gt; 중 하나를 사용하십시오 . 또한 하나의 &lt;code&gt;GroupLayout&lt;/code&gt; 에서 생성 된 &lt;code&gt;Group&lt;/code&gt; 을 다른 GroupLayout 과 함께 사용하면 정의되지 않은 결과가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="9e775e94c1a699fe7db608341bec9a1f3129432e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupLayout&lt;/code&gt; is a &lt;code&gt;LayoutManager&lt;/code&gt; that hierarchically groups components in order to position them in a &lt;code&gt;Container&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GroupLayout&lt;/code&gt; 은 &lt;code&gt;Container&lt;/code&gt; 에 배치하기 위해 구성 요소를 계층 적으로 그룹화 하는 &lt;code&gt;LayoutManager&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="fdf4c2ce3f17a0487e172b88a4d5e60ea53dd2ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupLayout&lt;/code&gt; is a &lt;code&gt;LayoutManager&lt;/code&gt; that hierarchically groups components in order to position them in a &lt;code&gt;Container&lt;/code&gt;. &lt;code&gt;GroupLayout&lt;/code&gt; is intended for use by builders, but may be hand-coded as well. Grouping is done by instances of the &lt;a href=&quot;grouplayout.group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt; class. &lt;code&gt;
 GroupLayout&lt;/code&gt; supports two types of groups. A sequential group positions its child elements sequentially, one after another. A parallel group aligns its child elements in one of four ways.</source>
          <target state="translated">&lt;code&gt;GroupLayout&lt;/code&gt; 은 &lt;code&gt;Container&lt;/code&gt; 에 배치하기 위해 구성 요소를 계층 적으로 그룹화 하는 &lt;code&gt;LayoutManager&lt;/code&gt; 입니다 . &lt;code&gt;GroupLayout&lt;/code&gt; 은 빌더가 사용하기위한 것이지만 직접 코딩 할 수도 있습니다. 그룹화는 &lt;a href=&quot;grouplayout.group&quot;&gt; &lt;code&gt;Group&lt;/code&gt; &lt;/a&gt; 클래스의 인스턴스에 의해 수행됩니다 . &lt;code&gt; GroupLayout&lt;/code&gt; 은 두 가지 유형의 그룹을 지원합니다. 순차 그룹은 하위 요소를 차례로 차례로 배치합니다. 병렬 그룹은 네 가지 방법 중 하나로 자식 요소를 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="20d65a6d452d2a3e66918629b47cff47f0769242" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupLayout&lt;/code&gt; provides the ability to insert gaps between &lt;code&gt;Component&lt;/code&gt;s. The size of the gap is determined by an instance of &lt;code&gt;LayoutStyle&lt;/code&gt;. This may be turned on using the &lt;code&gt;setAutoCreateGaps&lt;/code&gt; method. Similarly, you may use the &lt;code&gt;setAutoCreateContainerGaps&lt;/code&gt; method to insert gaps between components that touch the edge of the parent container and the container.</source>
          <target state="translated">&lt;code&gt;GroupLayout&lt;/code&gt; 은 &lt;code&gt;Component&lt;/code&gt; 사이에 간격을 삽입하는 기능을 제공합니다 . 간격의 크기는 &lt;code&gt;LayoutStyle&lt;/code&gt; 의 인스턴스에 의해 결정됩니다 . 이것은 &lt;code&gt;setAutoCreateGaps&lt;/code&gt; 메소드 를 사용하여 켤 수 있습니다 . 마찬가지로 &lt;code&gt;setAutoCreateContainerGaps&lt;/code&gt; 메서드를 사용 하여 부모 컨테이너와 컨테이너의 가장자리에 닿는 구성 요소 사이에 간격을 삽입 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c1a79c6653641b512b3d9cda866565bd88bb68b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupLayout&lt;/code&gt; treats each axis independently. That is, there is a group representing the horizontal axis, and a group representing the vertical axis. The horizontal group is responsible for determining the minimum, preferred and maximum size along the horizontal axis as well as setting the x and width of the components contained in it. The vertical group is responsible for determining the minimum, preferred and maximum size along the vertical axis as well as setting the y and height of the components contained in it. Each &lt;code&gt;Component&lt;/code&gt; must exist in both a horizontal and vertical group, otherwise an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown during layout, or when the minimum, preferred or maximum size is requested.</source>
          <target state="translated">&lt;code&gt;GroupLayout&lt;/code&gt; 은 각 축을 독립적으로 처리합니다. 즉, 가로축을 나타내는 그룹과 세로축을 나타내는 그룹이 있습니다. 수평 그룹은 수평 축을 따라 최소, 기본 및 최대 크기를 결정하고 그 안에 포함 된 구성 요소의 x 및 너비를 설정합니다. 수직 그룹은 수직 축을 따라 최소, 기본 및 최대 크기를 결정하고 여기에 포함 된 구성 요소의 y 및 높이를 설정합니다. 각 &lt;code&gt;Component&lt;/code&gt; 는 수평 및 수직 그룹에 있어야합니다. 그렇지 않으면 레이아웃 중에 또는 최소, 선호 또는 최대 크기가 요청 될 때 &lt;code&gt;IllegalStateException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="124830507ddf0d5eaaf2e64ea8d09214f1e187ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;H&lt;/code&gt; - the height of the &lt;code&gt;Rectangle&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;H&lt;/code&gt; - &lt;code&gt;Rectangle&lt;/code&gt; 의 높이</target>
        </trans-unit>
        <trans-unit id="6b4cbca4d3fe15fb7b895c66b2086d15751c5231" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HALF_DAYS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of half-days added. This is equivalent to &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 43,200 (12 hours).</source>
          <target state="translated">&lt;code&gt;HALF_DAYS&lt;/code&gt; - 지정된 반일 수가 추가 된 &lt;code&gt;Instant&lt;/code&gt; 을 반환합니다 . 이는 43,200 (12 시간)을 곱한 &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="0cc8134ab443eb4f429cd4a13865ed0f4eba41dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HALF_DAYS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of half-days added. This is equivalent to &lt;a href=&quot;#plusHours(long)&quot;&gt;&lt;code&gt;plusHours(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 12.</source>
          <target state="translated">&lt;code&gt;HALF_DAYS&lt;/code&gt; - 지정된 반일 수가 추가 된 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 양에 12를 곱한 &lt;a href=&quot;#plusHours(long)&quot;&gt; &lt;code&gt;plusHours(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="7ef2428e099a376ff0ca3d4874d88d3ddab5836e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HALF_DAYS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of half-days added. This is equivalent to &lt;a href=&quot;localtime#plusHours-long-&quot;&gt;&lt;code&gt;plusHours(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 12.</source>
          <target state="translated">&lt;code&gt;HALF_DAYS&lt;/code&gt; - 지정된 반일 수가 추가 된 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이는 양에 12를 곱한 &lt;a href=&quot;localtime#plusHours-long-&quot;&gt; &lt;code&gt;plusHours(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="a9fa6e6639a74cbd80c4a4878a027b64dee7ec3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HALF_DAYS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of half-days added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 43,200 (12 hours).</source>
          <target state="translated">&lt;code&gt;HALF_DAYS&lt;/code&gt; - 지정된 반일 수가 추가 된 &lt;code&gt;Instant&lt;/code&gt; 를 반환합니다 . 이것은 &lt;a href=&quot;#plusSeconds(long)&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt; 에 43,200 (12 시간)을 곱한 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d2e683184741e9a320e1b093390059b153e3f19d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HIDE_ON_CLOSE&lt;/code&gt; (defined in &lt;code&gt;WindowConstants&lt;/code&gt;): Automatically hide the dialog after invoking any registered &lt;code&gt;WindowListener&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;HIDE_ON_CLOSE&lt;/code&gt; ( &lt;code&gt;WindowConstants&lt;/code&gt; 에 정의 됨 ) : 등록 된 &lt;code&gt;WindowListener&lt;/code&gt; 개체를 호출 한 후 자동으로 대화 상자를 숨 깁니다 .</target>
        </trans-unit>
        <trans-unit id="93523687d5449333476d93cc59ef735ec73959d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HIDE_ON_CLOSE&lt;/code&gt; (defined in &lt;code&gt;WindowConstants&lt;/code&gt;): Automatically hide the frame after invoking any registered &lt;code&gt;WindowListener&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;HIDE_ON_CLOSE&lt;/code&gt; ( &lt;code&gt;WindowConstants&lt;/code&gt; 에 정의 됨 ) : 등록 된 &lt;code&gt;WindowListener&lt;/code&gt; 개체를 호출 한 후 자동으로 프레임을 숨 깁니다 .</target>
        </trans-unit>
        <trans-unit id="17a0b849b2586a2cb52e8c4c77b8bfa0e24007e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HORIZONTAL&lt;/code&gt; or &lt;code&gt;VERTICAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HORIZONTAL&lt;/code&gt; 또는 &lt;code&gt;VERTICAL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4b90ce04e423e60422a73e763cd652a64042621" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HORIZONTAL&lt;/code&gt;: Make the component wide enough to fill its display area horizontally, but do not change its height.</source>
          <target state="translated">&lt;code&gt;HORIZONTAL&lt;/code&gt; : 디스플레이 영역을 수평으로 채울 수있을만큼 구성 요소를 넓 히지 만 높이는 변경하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="85016515254065489b3026630c065fccdcc5686d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOURS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of hours added. This is equivalent to &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 3,600.</source>
          <target state="translated">&lt;code&gt;HOURS&lt;/code&gt; - 지정된 시간이 추가 된 &lt;code&gt;Instant&lt;/code&gt; 을 반환합니다 . 이는 양에 3,600을 곱한 &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="8c33c5e3931c0a4918502f136f81dfe78bbec516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOURS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of hours added. This is equivalent to &lt;a href=&quot;#plusHours(long)&quot;&gt;&lt;code&gt;plusHours(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;HOURS&lt;/code&gt; 는 - 반환 &lt;code&gt;LocalTime&lt;/code&gt; 추가 시간의 지정된 번호를. 이것은 &lt;a href=&quot;#plusHours(long)&quot;&gt; &lt;code&gt;plusHours(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="948c34d01c92eee1bb29cc183a83d9babdf61038" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOURS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of hours added. This is equivalent to &lt;a href=&quot;localtime#plusHours-long-&quot;&gt;&lt;code&gt;plusHours(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;HOURS&lt;/code&gt; 는 - 반환 &lt;code&gt;LocalTime&lt;/code&gt; 추가 시간의 지정된 번호를. 이것은 &lt;a href=&quot;localtime#plusHours-long-&quot;&gt; &lt;code&gt;plusHours(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="a1e780e1f7265bff9ccb184801153876c8f30ca5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOURS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of hours added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 3,600.</source>
          <target state="translated">&lt;code&gt;HOURS&lt;/code&gt; - 지정된 시간이 추가 된 &lt;code&gt;Instant&lt;/code&gt; 를 반환합니다 . 이것은 양에 3,600을 곱한 &lt;a href=&quot;#plusSeconds(long)&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="20d6de7da97fd2ce2eae7be6b1f905d5e1e4b3e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOUR_OF_AMPM&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified hour-of-am-pm. The AM/PM, minute-of-hour, second-of-minute and nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;HOUR_OF_AMPM&lt;/code&gt; - 지정된 오전 시간으로 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 오전 / 오후, 분, 초 및 나노초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3448c8c6d8cbdb203548ac51e774b574ad6b7b93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOUR_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified hour-of-day. The minute-of-hour, second-of-minute and nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;HOUR_OF_DAY&lt;/code&gt; - 지정된 시간으로 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 분, 초 및 나노초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="480fbc78f1f24a847a4c4c2362a1bafca7902cdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTMLEditorKit.createDefaultDocument&lt;/code&gt; will set the parser for you. If you create an &lt;code&gt;HTMLDocument&lt;/code&gt; by hand, be sure and set the parser accordingly.</source>
          <target state="translated">&lt;code&gt;HTMLEditorKit.createDefaultDocument&lt;/code&gt; 가 파서를 설정합니다. &lt;code&gt;HTMLDocument&lt;/code&gt; 를 직접 작성하는 경우 그에 따라 구문 분석기를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="526a609bbcca3d331e1ea8860b3c31e279e64830" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Handler&lt;/code&gt; classes typically use &lt;code&gt;LogManager&lt;/code&gt; properties to set default values for the &lt;code&gt;Handler&lt;/code&gt;'s &lt;code&gt;Filter&lt;/code&gt;, &lt;code&gt;Formatter&lt;/code&gt;, and &lt;code&gt;Level&lt;/code&gt;. See the specific documentation for each concrete &lt;code&gt;Handler&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;Handler&lt;/code&gt; 클래스는 일반적으로 &lt;code&gt;LogManager&lt;/code&gt; 속성을 사용 하여 &lt;code&gt;Handler&lt;/code&gt; 의 &lt;code&gt;Filter&lt;/code&gt; , &lt;code&gt;Formatter&lt;/code&gt; 및 &lt;code&gt;Level&lt;/code&gt; 대한 기본값을 설정합니다 . 각 구체적인 &lt;code&gt;Handler&lt;/code&gt; 클래스에 대한 특정 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0288ba468f1edff8e8fe620576d0b70f8b4719e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Handler&lt;/code&gt; that buffers requests in a circular buffer in memory.</source>
          <target state="translated">&lt;code&gt;Handler&lt;/code&gt; 메모리의 순환 버퍼에서 요청을 버퍼링하는 핸들러 입니다.</target>
        </trans-unit>
        <trans-unit id="00da1c453b813694b52e9c716cf92707d2e80b47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HttpHeaders&lt;/code&gt; instances are immutable.</source>
          <target state="translated">&lt;code&gt;HttpHeaders&lt;/code&gt; 인스턴스는 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b5ea1b6135a1ffc196e6540fb72c78084aef39a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HttpsURLConnection&lt;/code&gt; extends &lt;code&gt;HttpURLConnection&lt;/code&gt; with support for https-specific features.</source>
          <target state="translated">&lt;code&gt;HttpsURLConnection&lt;/code&gt; 은 https 관련 기능을 지원하여 &lt;code&gt;HttpURLConnection&lt;/code&gt; 을 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="2452fdf7156c7cd9635cca800bbfd27507d77463" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I&lt;/code&gt; - the identifier supplied to the filter</source>
          <target state="translated">&lt;code&gt;I&lt;/code&gt; - 필터에 제공된 식별자</target>
        </trans-unit>
        <trans-unit id="9ef05e31546ec0abd8f05f33d98fb7788f04dfc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I&lt;/code&gt; - the type of the identifier passed to the &lt;code&gt;RowFilter&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;I&lt;/code&gt; - &lt;code&gt;RowFilter&lt;/code&gt; 에 전달 된 식별자의 유형</target>
        </trans-unit>
        <trans-unit id="7c3ccb6c442ddb7dd1d1f76da061d832e9b51fde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I&lt;/code&gt; - the type of the identifier; when using &lt;code&gt;TableRowSorter&lt;/code&gt; this will be &lt;code&gt;Integer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;I&lt;/code&gt; - 식별자의 유형. &lt;code&gt;TableRowSorter&lt;/code&gt; 를 사용할 때 이것은 &lt;code&gt;Integer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f5f317e9f8e734ae7b9f5316144e757140022c68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ID&lt;/code&gt; - The time zone ID which is given to this object.</source>
          <target state="translated">&lt;code&gt;ID&lt;/code&gt; - 이 객체에 제공된 시간대 ID</target>
        </trans-unit>
        <trans-unit id="cb8f2d905964f73467653a60cf68edb92903c568" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ID&lt;/code&gt; - The time zone name that is given to this instance.</source>
          <target state="translated">&lt;code&gt;ID&lt;/code&gt; - 이 인스턴스에 제공된 시간대 이름</target>
        </trans-unit>
        <trans-unit id="aad7b55de5995caef3f57461e861f0dc2be533d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ID&lt;/code&gt; - a time zone ID string</source>
          <target state="translated">&lt;code&gt;ID&lt;/code&gt; - 시간대 ID 문자열</target>
        </trans-unit>
        <trans-unit id="bc9ff596b1493ada8f15a4e1e11e83aa035a46cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ID&lt;/code&gt; - the ID for a &lt;code&gt;TimeZone&lt;/code&gt;, either an abbreviation such as &quot;PST&quot;, a full name such as &quot;America/Los_Angeles&quot;, or a custom ID such as &quot;GMT-8:00&quot;. Note that the support of abbreviations is for JDK 1.1.x compatibility only and full names should be used.</source>
          <target state="translated">&lt;code&gt;ID&lt;/code&gt; - &lt;code&gt;TimeZone&lt;/code&gt; 의 ID , &quot;PST&quot;와 같은 약어, &quot;America / Los_Angeles&quot;와 같은 전체 이름 또는 &quot;GMT-8 : 00&quot;와 같은 사용자 지정 ID 약어 지원은 JDK 1.1.x 호환성만을위한 것이며 전체 이름을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="409a85e3b5f09d277a588807ed62379b0d76d23e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ID&lt;/code&gt; - the new time zone ID.</source>
          <target state="translated">&lt;code&gt;ID&lt;/code&gt; - 새로운 시간대 ID</target>
        </trans-unit>
        <trans-unit id="16f10c877b65167347c059317cd08215c8aa74c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IMAGE_INCOMPATIBLE&lt;/code&gt; if the image is incompatible with the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; object passed into the &lt;code&gt;validate&lt;/code&gt; method. Incompatibility implies that the image may need to be recreated with a new &lt;code&gt;Component&lt;/code&gt; or &lt;code&gt;GraphicsConfiguration&lt;/code&gt; in order to get an image that can be used successfully with this &lt;code&gt;GraphicsConfiguration&lt;/code&gt;. An incompatible image is not checked for whether restoration was necessary, so the state of the image is unchanged after a return value of &lt;code&gt;IMAGE_INCOMPATIBLE&lt;/code&gt; and this return value implies nothing about whether the image needs to be restored.</source>
          <target state="translated">&lt;code&gt;IMAGE_INCOMPATIBLE&lt;/code&gt; 이미지가 &lt;code&gt;validate&lt;/code&gt; 메소드에 전달 된 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 객체 와 호환되지 않는 경우 IMAGE_INCOMPATIBLE 입니다. 비 호환성 은이 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 과 함께 성공적으로 사용할 수있는 이미지를 얻기 위해 새로운 &lt;code&gt;Component&lt;/code&gt; 또는 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 으로 이미지를 다시 만들어야 할 수 있음을 의미합니다 . 호환되지 않는 이미지는 복원이 필요한지 여부를 확인하지 않으므로 이미지의 상태는 &lt;code&gt;IMAGE_INCOMPATIBLE&lt;/code&gt; 의 반환 값 이후에 변경되지 않으며이 반환 값은 이미지를 복원해야하는지 여부를 의미하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6660b9f0d0673107d7714fa4a6cd596ab34629dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IMAGE_OK&lt;/code&gt; if the image did not need validation</source>
          <target state="translated">&lt;code&gt;IMAGE_OK&lt;/code&gt; 이미지에 유효성 검사가 필요하지 않은 경우 IMAGE_OK</target>
        </trans-unit>
        <trans-unit id="ad8dcff493a0d3c16cd0bcf850a908d009b28fd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IMAGE_RESTORED&lt;/code&gt; if the image needed restoration. Restoration implies that the contents of the image may have been affected and the image may need to be re-rendered.</source>
          <target state="translated">&lt;code&gt;IMAGE_RESTORED&lt;/code&gt; 이미지 복원이 필요한 경우 IMAGE_RESTORED 입니다. 복원은 이미지의 내용이 영향을 받았을 수 있으며 이미지를 다시 렌더링해야 할 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f4ffc8e36f8525f7d84e5118df9edbe7b47ef074" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INFO&lt;/code&gt; level: usually used to log information messages.</source>
          <target state="translated">&lt;code&gt;INFO&lt;/code&gt; 수준 : 일반적으로 정보 메시지를 기록하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="68db4d44c771cfe646a6742d3f28ccff5850b97e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INFO&lt;/code&gt; level: usually used to log information messages. This level &lt;a href=&quot;#getSeverity()&quot;&gt;severity&lt;/a&gt; is &lt;code&gt;800&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INFO&lt;/code&gt; 수준 : 일반적으로 정보 메시지를 기록하는 데 사용됩니다. 이 수준의 &lt;a href=&quot;#getSeverity()&quot;&gt;심각도&lt;/a&gt; 는 &lt;code&gt;800&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fb8286c60bf174dbf1a52ff17c347bca85989b16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INNER_JOIN&lt;/code&gt; - the default if no &lt;code&gt;JOIN&lt;/code&gt; type has been set</source>
          <target state="translated">&lt;code&gt;INNER_JOIN&lt;/code&gt; - &lt;code&gt;JOIN&lt;/code&gt; 유형이 설정 되지 않은 경우 기본값</target>
        </trans-unit>
        <trans-unit id="86b463a184732abf0f41437ba4a0ba319aca0952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INPUT_METHOD_HIGHLIGHT&lt;/code&gt; uses &lt;code&gt;InputMethodHighlight&lt;/code&gt; values, which are not serializable. See &lt;a href=&quot;im/inputmethodhighlight&quot;&gt;&lt;code&gt;InputMethodHighlight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;INPUT_METHOD_HIGHLIGHT&lt;/code&gt; 는 직렬화 할 수없는 &lt;code&gt;InputMethodHighlight&lt;/code&gt; 값을 사용합니다 . &lt;a href=&quot;im/inputmethodhighlight&quot;&gt; &lt;code&gt;InputMethodHighlight&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0ef7b28e4d3d9f4f9a99b95a87e7a125737ba1f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSERT&lt;/code&gt; - one or more rows and/or columns have been inserted</source>
          <target state="translated">&lt;code&gt;INSERT&lt;/code&gt; - 하나 이상의 행 및 / 또는 열이 삽입되었습니다.</target>
        </trans-unit>
        <trans-unit id="82f189e497a0d70871e7ca9aa0d85434a16ccd00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSTANT_SECONDS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified epoch-second. The nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;INSTANT_SECONDS&lt;/code&gt; - 지정된 에포크 초를 가진 &lt;code&gt;Instant&lt;/code&gt; 을 반환합니다 . 나노초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="884650ae4eae993a0ec7a597bcb7a32091aa2c49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IV&lt;/code&gt;: Initialization Vector (IV)</source>
          <target state="translated">&lt;code&gt;IV&lt;/code&gt; : 초기화 벡터 (IV)</target>
        </trans-unit>
        <trans-unit id="f163789351aa87e3a08da7731a7e414640753e6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown</source>
          <target state="translated">&lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="d31eb4cde08c0ee9263bd6229c87968680e5983f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown if the input buffer is not in valid Base64 encoding scheme. The position of the input buffer will not be advanced in this case.</source>
          <target state="translated">&lt;code&gt;IllegalArgumentException&lt;/code&gt; 입력 버퍼가 유효한 Base64 인코딩 체계가 아닌 경우 IllegalArgumentException 이 발생합니다. 이 경우 입력 버퍼의 위치는 전진하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="80a441081531d8a599e712331cd27d79118676af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown if any of the following restrictions is violated:</source>
          <target state="translated">&lt;code&gt;IllegalArgumentException&lt;/code&gt; 다음 제한 사항 중 하나라도 위반되면 IllegalArgumentException 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="25a6dbceb7c32563fdcbbfb1abdda8b839413452" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImageReader&lt;/code&gt; objects are normally instantiated by the service provider interface (SPI) class for the specific format. Service provider classes (e.g., instances of &lt;code&gt;ImageReaderSpi&lt;/code&gt;) are registered with the &lt;code&gt;IIORegistry&lt;/code&gt;, which uses them for format recognition and presentation of available format readers and writers.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 객체는 일반적으로 특정 형식의 SPI (Service Provider Interface) 클래스에 의해 인스턴스화됩니다. 서비스 제공 업체 클래스 (예 : &lt;code&gt;ImageReaderSpi&lt;/code&gt; 인스턴스 )는 &lt;code&gt;IIORegistry&lt;/code&gt; 에 등록되며 ,이를 사용하여 형식 인식 및 사용 가능한 형식 리더 및 작성자의 프리젠 테이션에 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ef33e288b67701c24a861558997dcb7853df94a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImageReader&lt;/code&gt;s that do not support setting of the source render size may ignore this value.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 소스 렌더링 크기 설정을 지원하지 않는 ImageReader 는이 값을 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b500dbb0f638633f0db3963336fdbdc9e2e308fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImageReader&lt;/code&gt;s that do not support setting of the source render size should set this value to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 소스 렌더링 크기 설정을 지원하지 않는 ImageReader 는이 값을 &lt;code&gt;false&lt;/code&gt; 로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="406cefd978145765934d99c7349bccdd08a9b643" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImageWriter&lt;/code&gt; objects are normally instantiated by the service provider class for the specific format. Service provider classes are registered with the &lt;code&gt;IIORegistry&lt;/code&gt;, which uses them for format recognition and presentation of available format readers and writers.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; 객체는 일반적으로 특정 형식에 대해 서비스 공급자 클래스에 의해 인스턴스화됩니다. 서비스 제공자 클래스는 &lt;code&gt;IIORegistry&lt;/code&gt; 에 등록되어 있으며 ,이를 사용하여 형식 인식 및 사용 가능한 형식 리더 및 작성자의 프리젠 테이션에 사용합니다.</target>
        </trans-unit>
        <trans-unit id="277ebc8be481476d23f2184b1e893031fb8d8040" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImportSnippet&lt;/code&gt; is immutable: an access to any of its methods will always return the same result. and thus is thread-safe.</source>
          <target state="translated">&lt;code&gt;ImportSnippet&lt;/code&gt; 은 변경할 수 없습니다. 메서드에 대한 액세스는 항상 동일한 결과를 반환합니다. 따라서 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="3e28c1473fed9c9f42e3c3710f6b4c36dab3863e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InputMap&lt;/code&gt; provides a binding between an input event (currently only &lt;code&gt;KeyStroke&lt;/code&gt;s are used) and an &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;InputMap&lt;/code&gt; 은 입력 이벤트 (현재 &lt;code&gt;KeyStroke&lt;/code&gt; 만 사용됨)와 &lt;code&gt;Object&lt;/code&gt; 간의 바인딩을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="0186cbf4fdcc81e96895ac727fd24d21b1e9f6da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InputMap&lt;/code&gt; provides a binding between an input event (currently only &lt;code&gt;KeyStroke&lt;/code&gt;s are used) and an &lt;code&gt;Object&lt;/code&gt;. &lt;code&gt;InputMap&lt;/code&gt;s are usually used with an &lt;code&gt;ActionMap&lt;/code&gt;, to determine an &lt;code&gt;Action&lt;/code&gt; to perform when a key is pressed. An &lt;code&gt;InputMap&lt;/code&gt; can have a parent that is searched for bindings not defined in the &lt;code&gt;InputMap&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;InputMap&lt;/code&gt; 은 입력 이벤트 (현재 &lt;code&gt;KeyStroke&lt;/code&gt; 만 사용됨)와 &lt;code&gt;Object&lt;/code&gt; 간의 바인딩을 제공합니다 . &lt;code&gt;InputMap&lt;/code&gt; 은 일반적으로 &lt;code&gt;ActionMap&lt;/code&gt; 과 함께 사용되어 키를 누를 때 수행 할 &lt;code&gt;Action&lt;/code&gt; 을 결정합니다 . &lt;code&gt;InputMap&lt;/code&gt; 에 정의 바인딩을 검색하는 부모가 할 수 &lt;code&gt;InputMap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b3e52db9842641fd18ff547c88682ba9942c744" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InputStream&lt;/code&gt; through which the partial &lt;code&gt;Blob&lt;/code&gt; value can be read.</source>
          <target state="translated">&lt;code&gt;InputStream&lt;/code&gt; 부분 &lt;code&gt;Blob&lt;/code&gt; 값을 읽을 수있는 InputStream 입니다.</target>
        </trans-unit>
        <trans-unit id="c009719418adcf7d42aea467fa64571c4800bf89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; can store points on the time-line further in the future and further in the past than &lt;code&gt;Date&lt;/code&gt;. In this scenario, this method will throw an exception.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; 는 미래에 그리고 &lt;code&gt;Date&lt;/code&gt; 보다 과거에 타임 라인에 포인트를 저장할 수 있습니다 . 이 시나리오에서이 메소드는 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="aa134bd1f75399bc7781fff961870a9b2e8b870b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; is the closest equivalent class to &lt;code&gt;java.util.Date&lt;/code&gt;. &lt;code&gt;ZonedDateTime&lt;/code&gt; is the closest equivalent class to &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; 는 &lt;code&gt;java.util.Date&lt;/code&gt; 와 가장 유사한 클래스 입니다. &lt;code&gt;ZonedDateTime&lt;/code&gt; 은 &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt; 와 가장 유사한 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="d10b3c5ea0c355cfcf9354f410a7fac28f94deb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; returns &lt;code&gt;NANOS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; 반품 &lt;code&gt;NANOS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="489a3cc302b61344308b8cf9e6d8de209a02be72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; 는 null을 반환</target>
        </trans-unit>
        <trans-unit id="ad42bbc428fc6f915c39ece2daa07897b692dd17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; returns null (does not represent a date)</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; 은 null을 반환합니다 (날짜를 나타내지 않음)</target>
        </trans-unit>
        <trans-unit id="00d7da128e9dcb0029aa870ecbf560f510800458" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; uses a precision of nanoseconds, whereas &lt;code&gt;Date&lt;/code&gt; uses a precision of milliseconds. The conversion will trancate any excess precision information as though the amount in nanoseconds was subject to integer division by one million.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; 는 나노초 의 정밀도를 사용 하지만 &lt;code&gt;Date&lt;/code&gt; 는 밀리 초의 정밀도를 사용합니다. 변환은 나노초 단위의 양이 백만 분의 정수로 나뉘어 진 것처럼 초과 정밀도 정보를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="22947d123c87ac99fabaa692c24d7d62800431c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; uses a precision of nanoseconds, whereas &lt;code&gt;Date&lt;/code&gt; uses a precision of milliseconds. The conversion will truncate any excess precision information as though the amount in nanoseconds was subject to integer division by one million.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; 는 나노초의 정밀도를 사용하는 반면 &lt;code&gt;Date&lt;/code&gt; 는 밀리 초의 정밀도를 사용합니다. 변환은 마치 나노초 단위의 양이 100 만 단위로 정수 분할 된 것처럼 초과 정밀도 정보를 자릅니다.</target>
        </trans-unit>
        <trans-unit id="96984a798524fb70da361b9d15f265e505e95265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IntStream.iterate&lt;/code&gt; should produce the same sequence of elements as produced by the corresponding for-loop:</source>
          <target state="translated">&lt;code&gt;IntStream.iterate&lt;/code&gt; 는 해당 for 루프에서 생성 된 것과 동일한 요소 시퀀스를 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="b673966989262dc2de450a295e652501c6dde358" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IntSummaryStatistics&lt;/code&gt; can be used as a &lt;a href=&quot;stream/stream#collect(java.util.stream.Collector)&quot;&gt;reduction&lt;/a&gt; target for a &lt;a href=&quot;stream/stream&quot;&gt;stream&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;IntSummaryStatistics&lt;/code&gt; 는 &lt;a href=&quot;stream/stream&quot;&gt;스트림&lt;/a&gt; 의 &lt;a href=&quot;stream/stream#collect(java.util.stream.Collector)&quot;&gt;감소&lt;/a&gt; 대상 으로 사용할 수 있습니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="efbdc2e5ab1a95f4c01cced9efaa42caed4e921e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IntSummaryStatistics&lt;/code&gt; can be used as a &lt;a href=&quot;stream/stream#collect-java.util.stream.Collector-&quot;&gt;reduction&lt;/a&gt; target for a &lt;a href=&quot;stream/stream&quot;&gt;stream&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;IntSummaryStatistics&lt;/code&gt; 는 &lt;a href=&quot;stream/stream&quot;&gt;스트림&lt;/a&gt; 의 &lt;a href=&quot;stream/stream#collect-java.util.stream.Collector-&quot;&gt;축소&lt;/a&gt; 대상 으로 사용할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="de04aa860f9254de370b5655f9592aa115418acf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; (as specified by &lt;a href=&quot;blockingqueue#remainingCapacity()&quot;&gt;&lt;code&gt;BlockingQueue.remainingCapacity()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; ( &lt;a href=&quot;blockingqueue#remainingCapacity()&quot;&gt; &lt;code&gt;BlockingQueue.remainingCapacity()&lt;/code&gt; &lt;/a&gt; 의해 지정됨 )</target>
        </trans-unit>
        <trans-unit id="f10e22b7d65a6887a91fb513ed9582789f93c402" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; (as specified by &lt;a href=&quot;blockingqueue#remainingCapacity--&quot;&gt;&lt;code&gt;BlockingQueue.remainingCapacity&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; ( &lt;a href=&quot;blockingqueue#remainingCapacity--&quot;&gt; &lt;code&gt;BlockingQueue.remainingCapacity&lt;/code&gt; 에&lt;/a&gt; 의해 지정된대로 )</target>
        </trans-unit>
        <trans-unit id="be7bfaf45f65c0824f09169bae91b3496ffef726" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; always</source>
          <target state="translated">&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; 항상</target>
        </trans-unit>
        <trans-unit id="f6e79cfcede6096bb5c0298312c9592495399732" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt;, etc</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; , &lt;code&gt;Boolean&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="6338c153f250ef81745f3004fb310a7288d787b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;ObjectName&lt;/code&gt;, etc</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; , &lt;code&gt;ObjectName&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="3331529aaf6e845963846c592f00ed0bac7ed32c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InternationalFormatter&lt;/code&gt; extends &lt;code&gt;DefaultFormatter&lt;/code&gt;, using an instance of &lt;code&gt;java.text.Format&lt;/code&gt; to handle the conversion to a String, and the conversion from a String.</source>
          <target state="translated">&lt;code&gt;InternationalFormatter&lt;/code&gt; 는 &lt;code&gt;java.text.Format&lt;/code&gt; 의 인스턴스를 사용하여 String으로의 변환과 String에서의 변환을 처리 하는 &lt;code&gt;DefaultFormatter&lt;/code&gt; 를 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="2cc2d8ab1140f9ecdd79ce4beabb6c81c987179d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InternationalFormatter&lt;/code&gt; implements &lt;code&gt;stringToValue&lt;/code&gt; in this manner so that you can specify an alternate Class than &lt;code&gt;Format&lt;/code&gt; may return.</source>
          <target state="translated">&lt;code&gt;InternationalFormatter&lt;/code&gt; 는 &lt;code&gt;Format&lt;/code&gt; 이 반환 할 수있는 대체 클래스를 지정할 수 있도록 이러한 방식으로 &lt;code&gt;stringToValue&lt;/code&gt; 를 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="ee137fae54c4cea8b2088f0ef6457821116103c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InternationalFormatter&lt;/code&gt;'s behavior of &lt;code&gt;stringToValue&lt;/code&gt; is slightly different than that of &lt;code&gt;DefaultTextFormatter&lt;/code&gt;, it does the following:</source>
          <target state="translated">&lt;code&gt;InternationalFormatter&lt;/code&gt; 의 &lt;code&gt;stringToValue&lt;/code&gt; 동작은 &lt;code&gt;DefaultTextFormatter&lt;/code&gt; 의 동작과 약간 다르며 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="5ef7409c4b47ce43d825d9e4094126501b146adf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InvocationHandler&lt;/code&gt; is the interface implemented by the</source>
          <target state="translated">&lt;code&gt;InvocationHandler&lt;/code&gt; 는</target>
        </trans-unit>
        <trans-unit id="c527833daa9300953a05dbfdf160201cc738ca5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IsoEra&lt;/code&gt; is an enum representing the ISO eras of BCE/CE. This factory allows the enum to be obtained from the &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;IsoEra&lt;/code&gt; 는 BCE / CE의 ISO 시대를 나타내는 열거 형입니다. 이 팩토리는, 열거 치를 &lt;code&gt;int&lt;/code&gt; 치 로부터 취득 할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="879476c65678c7bca891731cffd2e531f1ed33d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Iterator&lt;/code&gt; for all prefixes bound to the Namespace URI in the current scope</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; 현재 범위의 네임 스페이스 URI에 바인딩 된 모든 접두사에 대한 반복기</target>
        </trans-unit>
        <trans-unit id="45e87b228485535623057c3224f04fb14268a993" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Iterator&lt;/code&gt; over prefixes bound to Namespace URI in the current scope in an arbitrary, &lt;strong&gt;implementation dependent&lt;/strong&gt;, order</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; 임의의 &lt;strong&gt;구현에 따라 달라지는&lt;/strong&gt; 순서로 현재 범위의 Namespace URI에 바인딩 된 접두사에 대한 반복기</target>
        </trans-unit>
        <trans-unit id="f62ff1974b6b3148df0f420949fb5e19be43636a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Iterator&lt;/code&gt; with one element set to &lt;code&gt;XMLConstants.XMLNS_ATTRIBUTE&lt;/code&gt; (&quot;xmlns&quot;)</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; 하나의 요소가 &lt;code&gt;XMLConstants.XMLNS_ATTRIBUTE&lt;/code&gt; ( &quot;xmlns&quot;)로 설정된 반복기</target>
        </trans-unit>
        <trans-unit id="35c64831e809bb3406e92be705b3932c30cffb0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Iterator&lt;/code&gt; with one element set to &lt;code&gt;XMLConstants.XML_NS_PREFIX&lt;/code&gt; (&quot;xml&quot;)</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; 하나의 요소가 &lt;code&gt;XMLConstants.XML_NS_PREFIX&lt;/code&gt; ( &quot;xml&quot;)로 설정된 반복기</target>
        </trans-unit>
        <trans-unit id="106cf98e5df497b025ce3a9503ba79a90aa2401f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JColorChooser&lt;/code&gt; provides a pane of controls designed to allow a user to manipulate and select a color.</source>
          <target state="translated">&lt;code&gt;JColorChooser&lt;/code&gt; 는 사용자가 색상을 조작하고 선택할 수 있도록 설계된 컨트롤 창을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="44ed52d5ff3e19fad4ae9d8d23aea7ab427f9fa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JColorChooser&lt;/code&gt; provides a pane of controls designed to allow a user to manipulate and select a color. For information about using color choosers, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/colorchooser.html&quot;&gt;How to Use Color Choosers&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JColorChooser&lt;/code&gt; 는 사용자가 색상을 조작하고 선택할 수 있도록 설계된 컨트롤 창을 제공합니다. 색상 선택기 사용에 대한 자세한 내용은 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/colorchooser.html&quot;&gt;How to Use Color Choosers를&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7bf290706ec1413102c365ec34e0374bd40744f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JColorChooser&lt;/code&gt; provides a pane of controls designed to allow a user to manipulate and select a color. For information about using color choosers, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/colorchooser.html&quot;&gt;How to Use Color Choosers&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JColorChooser&lt;/code&gt; 는 사용자가 색상을 조작하고 선택할 수 있도록 설계된 컨트롤 창을 제공합니다. 색상 선택기 사용에 대한 자세한 내용은 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/colorchooser.html&quot;&gt;How to Use Color Choosers를&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7603bfdccd10a6ab059f029c69fbea275bdf2c5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JComponent&lt;/code&gt; and its subclasses document default values for certain properties. For example, &lt;code&gt;JTable&lt;/code&gt; documents the default row height as 16. Each &lt;code&gt;JComponent&lt;/code&gt; subclass that has a &lt;code&gt;ComponentUI&lt;/code&gt; will create the &lt;code&gt;ComponentUI&lt;/code&gt; as part of its constructor. In order to provide a particular look and feel each &lt;code&gt;ComponentUI&lt;/code&gt; may set properties back on the &lt;code&gt;JComponent&lt;/code&gt; that created it. For example, a custom look and feel may require &lt;code&gt;JTable&lt;/code&gt;s to have a row height of 24. The documented defaults are the value of a property BEFORE the &lt;code&gt;ComponentUI&lt;/code&gt; has been installed. If you need a specific value for a particular property you should explicitly set it.</source>
          <target state="translated">&lt;code&gt;JComponent&lt;/code&gt; 및 하위 클래스는 특정 속성에 대한 기본값을 문서화합니다. 예를 들어, &lt;code&gt;JTable&lt;/code&gt; 의 문서 (16) 각각과 같은 기본 행 높이 &lt;code&gt;JComponent&lt;/code&gt; 에의 가지고 서브 클래스 &lt;code&gt;ComponentUI&lt;/code&gt; 생성한다 &lt;code&gt;ComponentUI&lt;/code&gt; 생성자의 일부로. 특정 룩앤필을 제공하기 위해 각 &lt;code&gt;ComponentUI&lt;/code&gt; 는이 를 생성 한 &lt;code&gt;JComponent&lt;/code&gt; 에서 속성을 다시 설정할 수 있습니다 . 예를 들어, 사용자 정의 룩앤필은 &lt;code&gt;JTable&lt;/code&gt; 에서 행 높이가 24 인 것을 요구할 수 있습니다 . 문서화 된 기본값은 &lt;code&gt;ComponentUI&lt;/code&gt; 이전 의 속성 값입니다.설치되었습니다. 특정 속성에 대한 특정 값이 필요한 경우 명시 적으로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="a527e2994de1518dc31e3334f491619cf306117f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JComponent&lt;/code&gt; subclasses that need to be painted when any of their children are repainted should override this method to return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JComponent&lt;/code&gt; 자식이 다시 그려 질 때 그려야하는 JComponent 서브 클래스는 &lt;code&gt;true&lt;/code&gt; 를 반환하도록이 메서드를 재정의해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="beded7b134b029e3666b8d9a4b8619013141607b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JConsoleContext&lt;/code&gt; notifies any &lt;code&gt;PropertyChangeListeners&lt;/code&gt; about the &lt;a href=&quot;#CONNECTION_STATE_PROPERTY&quot;&gt;&lt;i&gt;ConnectionState&lt;/i&gt;&lt;/a&gt; property change to &lt;a href=&quot;jconsolecontext.connectionstate#CONNECTED&quot;&gt;&lt;code&gt;CONNECTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;jconsolecontext.connectionstate#DISCONNECTED&quot;&gt;&lt;code&gt;DISCONNECTED&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;JConsoleContext&lt;/code&gt; instance will be the source for any generated events.</source>
          <target state="translated">&lt;code&gt;JConsoleContext&lt;/code&gt; 는 &lt;a href=&quot;#CONNECTION_STATE_PROPERTY&quot;&gt;&lt;i&gt;ConnectionState&lt;/i&gt;&lt;/a&gt; 속성이 &lt;a href=&quot;jconsolecontext.connectionstate#CONNECTED&quot;&gt; &lt;code&gt;CONNECTED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;jconsolecontext.connectionstate#DISCONNECTED&quot;&gt; &lt;code&gt;DISCONNECTED&lt;/code&gt; 로&lt;/a&gt; 변경 되었음을 &lt;code&gt;PropertyChangeListeners&lt;/code&gt; 에 알립니다 . &lt;code&gt;JConsoleContext&lt;/code&gt; 의 인스턴스가 생성되는 모든 이벤트의 소스가됩니다.&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="175416413d4fb9620990f0d5c050f80ea101c2a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JConsoleContext&lt;/code&gt; represents a JConsole connection to a target application.</source>
          <target state="translated">&lt;code&gt;JConsoleContext&lt;/code&gt; 는 대상 응용 프로그램에 대한 JConsole 연결을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2b3868bc233636db4d38d59db5b2035c838c1fc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFileChooser&lt;/code&gt; first looks to see if there is a user defined &lt;code&gt;FileView&lt;/code&gt;, if there is, it gets type information from there first. If &lt;code&gt;FileView&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt; for any method, &lt;code&gt;JFileChooser&lt;/code&gt; then uses the L&amp;amp;F specific view to get the information. So, for example, if you provide a &lt;code&gt;FileView&lt;/code&gt; class that returns an &lt;code&gt;Icon&lt;/code&gt; for JPG files, and returns &lt;code&gt;null&lt;/code&gt; icons for all other files, the UI's &lt;code&gt;FileView&lt;/code&gt; will provide default icons for all other files.</source>
          <target state="translated">&lt;code&gt;JFileChooser&lt;/code&gt; 는 먼저 사용자 정의 &lt;code&gt;FileView&lt;/code&gt; 가 있는지 확인하고,있는 경우 먼저 유형 정보를 가져옵니다. 경우 &lt;code&gt;FileView&lt;/code&gt; 반환 &lt;code&gt;null&lt;/code&gt; 어떤 방법을 위해, &lt;code&gt;JFileChooser&lt;/code&gt; 로는 다음 정보를 얻기 위해 L &amp;amp; F 특정보기를 사용합니다. 예를 들어, JPG 파일에 대한 &lt;code&gt;Icon&lt;/code&gt; 을 반환 하고 다른 모든 파일에 대해 &lt;code&gt;null&lt;/code&gt; 아이콘을 반환하는 &lt;code&gt;FileView&lt;/code&gt; 클래스를 제공 하면 UI의 &lt;code&gt;FileView&lt;/code&gt; 는 다른 모든 파일에 대한 기본 아이콘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7ee79c41dfcf6f92948da9c9fbf9bcee6a9a7899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFileChooser&lt;/code&gt; provides a simple mechanism for the user to choose a file.</source>
          <target state="translated">&lt;code&gt;JFileChooser&lt;/code&gt; 는 사용자가 파일을 선택할 수있는 간단한 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b1ae99fbe784b42aa7527beb889b91d151661956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFileChooser&lt;/code&gt; provides a simple mechanism for the user to choose a file. For information about using &lt;code&gt;JFileChooser&lt;/code&gt;, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;How to Use File Choosers&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JFileChooser&lt;/code&gt; 는 사용자가 파일을 선택할 수있는 간단한 메커니즘을 제공합니다. &lt;code&gt;JFileChooser&lt;/code&gt; 사용에 대한 자세한 내용은 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;How to Use File Choosers를&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="530ca5b5720340f9c60906130c2b84f4178fb4e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFileChooser&lt;/code&gt; provides a simple mechanism for the user to choose a file. For information about using &lt;code&gt;JFileChooser&lt;/code&gt;, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;How to Use File Choosers&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JFileChooser&lt;/code&gt; 는 사용자가 파일을 선택할 수있는 간단한 메커니즘을 제공합니다. &lt;code&gt;JFileChooser&lt;/code&gt; 사용에 대한 자세한 내용은 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;How to Use File Choosers를&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a1fb51de2ad213046ddadd20440cb91ad363752a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; is also responsible for determining when values are committed to the &lt;code&gt;JFormattedTextField&lt;/code&gt;. Some &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt;s will make new values available on every edit, and others will never commit the value. You can force the current value to be obtained from the current &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; by way of invoking &lt;code&gt;commitEdit&lt;/code&gt;. &lt;code&gt;commitEdit&lt;/code&gt; will be invoked whenever return is pressed in the &lt;code&gt;JFormattedTextField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; 는 값이 &lt;code&gt;JFormattedTextField&lt;/code&gt; 에 커밋되는시기를 결정하는 역할도합니다 . 일부 &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; 는 모든 편집에서 새 값을 사용할 수 있도록하고 다른 일부는 값을 커밋하지 않습니다. &lt;code&gt;commitEdit&lt;/code&gt; 를 호출 하여 현재 &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; 에서 현재 값을 강제로 가져올 수 있습니다 . &lt;code&gt;JFormattedTextField&lt;/code&gt; 에서 return을 누를 때마다 &lt;code&gt;commitEdit&lt;/code&gt; 가 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="92b55cf9238083c742347f07fe26e5831d2d0895" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField&lt;/code&gt; allows configuring what action should be taken when focus is lost. The possible configurations are:</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; 를 사용하면 포커스를 잃었을 때 취해야 할 조치를 구성 할 수 있습니다. 가능한 구성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f3e143dafd7434c7bd687b6669c51fbaad5815a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField&lt;/code&gt; allows the focus to leave, even if the currently edited value is invalid. To lock the focus down while the &lt;code&gt;JFormattedTextField&lt;/code&gt; is an invalid edit state you can attach an &lt;code&gt;InputVerifier&lt;/code&gt;. The following code snippet shows a potential implementation of such an &lt;code&gt;InputVerifier&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; 를 사용하면 현재 편집 된 값이 유효하지 않은 경우에도 포커스를 떠날 수 있습니다. &lt;code&gt;JFormattedTextField&lt;/code&gt; 가 유효하지 않은 편집 상태 일 때 포커스를 잠 그려면 &lt;code&gt;InputVerifier&lt;/code&gt; 를 첨부 할 수 있습니다 . 다음 코드 스 니펫은 이러한 &lt;code&gt;InputVerifier&lt;/code&gt; 의 잠재적 구현을 ​​보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="49cbb6148263e7269a076333a72993b96f8cf566" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField&lt;/code&gt; does not do the formatting it self, rather formatting is done through an instance of &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; which is obtained from an instance of &lt;code&gt;JFormattedTextField.AbstractFormatterFactory&lt;/code&gt;. Instances of &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; are notified when they become active by way of the &lt;code&gt;install&lt;/code&gt; method, at which point the &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; can install whatever it needs to, typically a &lt;code&gt;DocumentFilter&lt;/code&gt;. Similarly when &lt;code&gt;JFormattedTextField&lt;/code&gt; no longer needs the &lt;code&gt;AbstractFormatter&lt;/code&gt;, it will invoke &lt;code&gt;uninstall&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; 로는 다소의 인스턴스를 통해 이루어집니다 포맷은 그것을 포맷 자체를하지 않습니다 &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; 의 인스턴스에서 얻을 수있다 &lt;code&gt;JFormattedTextField.AbstractFormatterFactory&lt;/code&gt; . &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; 의 인스턴스는 &lt;code&gt;install&lt;/code&gt; 메서드 를 통해 활성화 될 때 알림을받습니다. 이때 &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; 는 필요한 모든 것을 설치할 수 있습니다 . 일반적으로 &lt;code&gt;DocumentFilter&lt;/code&gt; . 유사하게 &lt;code&gt;JFormattedTextField&lt;/code&gt; 가 더 이상 &lt;code&gt;AbstractFormatter&lt;/code&gt; 를 필요로하지 않을 때 , 그것은 &lt;code&gt;uninstall&lt;/code&gt; 을 호출 할 것 입니다.</target>
        </trans-unit>
        <trans-unit id="a5eebc1724a3b2ed75af911e5e4fb2942c7a5ed1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField&lt;/code&gt; extends &lt;code&gt;JTextField&lt;/code&gt; adding support for formatting arbitrary values, as well as retrieving a particular object once the user has edited the text.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; 는 사용자가 텍스트를 편집 한 후 특정 개체를 검색 할뿐만 아니라 임의 값 서식 지정에 대한 지원을 추가하는 &lt;code&gt;JTextField&lt;/code&gt; 를 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="2d33f62b99f836614b3345ef6242a567c59b4336" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField&lt;/code&gt; extends &lt;code&gt;JTextField&lt;/code&gt; adding support for formatting arbitrary values, as well as retrieving a particular object once the user has edited the text. The following illustrates configuring a &lt;code&gt;JFormattedTextField&lt;/code&gt; to edit dates:</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; 는 사용자가 텍스트를 편집 한 후 특정 개체를 검색 할뿐만 아니라 임의 값 서식 지정에 대한 지원을 추가하는 &lt;code&gt;JTextField&lt;/code&gt; 를 확장 합니다. 다음은 날짜를 편집하기 위해 &lt;code&gt;JFormattedTextField&lt;/code&gt; 를 구성하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="8de2c393530108fb48973a702fbfb63cf8eadec7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField&lt;/code&gt; typically queries the &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; for an &lt;code&gt;AbstractFormat&lt;/code&gt; when it gains or loses focus. Although this can change based on the focus lost policy. If the focus lost policy is &lt;code&gt;JFormattedTextField.PERSIST&lt;/code&gt; and the &lt;code&gt;JFormattedTextField&lt;/code&gt; has been edited, the &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; will not be queried until the value has been committed. Similarly if the focus lost policy is &lt;code&gt;JFormattedTextField.COMMIT&lt;/code&gt; and an exception is thrown from &lt;code&gt;stringToValue&lt;/code&gt;, the &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; will not be queried when focus is lost or gained.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; 로는 일반적으로 쿼리 &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; 에 대한 &lt;code&gt;AbstractFormat&lt;/code&gt; 을 가 포커스를 얻거나 잃을 때. 이는 포커스 손실 정책에 따라 변경 될 수 있습니다. 포커스 손실 정책이 &lt;code&gt;JFormattedTextField.PERSIST&lt;/code&gt; 이고 &lt;code&gt;JFormattedTextField&lt;/code&gt; 가 편집 된 경우 값이 커밋 될 때까지 &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; 가 쿼리되지 않습니다. 정책을 잃은 초점이 유사하면 &lt;code&gt;JFormattedTextField.COMMIT&lt;/code&gt; 및 예외가에서 발생합니다 &lt;code&gt;stringToValue&lt;/code&gt; 에 의 &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; 포커스를 분실하거나 얻은 경우 조회되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c4825a454e1efc9ea32e8b5998d0d0a25051f9ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayer&lt;/code&gt; delegates the handling of painting and input events to a &lt;a href=&quot;plaf/layerui&quot;&gt;&lt;code&gt;LayerUI&lt;/code&gt;&lt;/a&gt; object, which performs the actual decoration.</source>
          <target state="translated">&lt;code&gt;JLayer&lt;/code&gt; 는 실제 데코레이션을 수행 하는 &lt;a href=&quot;plaf/layerui&quot;&gt; &lt;code&gt;LayerUI&lt;/code&gt; &lt;/a&gt; 객체 에 페인팅 및 입력 이벤트 처리를 위임합니다 .</target>
        </trans-unit>
        <trans-unit id="5658d1fc91ec90d609cf7e545fccb07006a043d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayer&lt;/code&gt; is a good solution if you only need to do custom painting over compound component or catch input events from its subcomponents.</source>
          <target state="translated">&lt;code&gt;JLayer&lt;/code&gt; 는 복합 구성 요소에 대해 사용자 지정 페인팅을 수행하거나 하위 구성 요소에서 입력 이벤트를 포착해야하는 경우에 좋은 솔루션입니다.</target>
        </trans-unit>
        <trans-unit id="1cfa5807b40e968fb11105f6d8e9d30ae6521ad0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayer&lt;/code&gt; is a universal decorator for Swing components which enables you to implement various advanced painting effects as well as receive notifications of all &lt;code&gt;AWTEvent&lt;/code&gt;s generated within its borders.</source>
          <target state="translated">&lt;code&gt;JLayer&lt;/code&gt; 는 다양한 고급 페인팅 효과를 구현 하고 경계 내에서 생성 된 모든 &lt;code&gt;AWTEvent&lt;/code&gt; 의 알림을받을 수 있도록하는 Swing 구성 요소의 범용 데코레이터입니다 .</target>
        </trans-unit>
        <trans-unit id="dae3e634d4e19647cd61699bb22003d2a8179264" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayeredPane&lt;/code&gt; adds depth to a JFC/Swing container, allowing components to overlap each other when needed.</source>
          <target state="translated">&lt;code&gt;JLayeredPane&lt;/code&gt; 은 JFC / Swing 컨테이너에 깊이를 추가하여 필요할 때 구성 요소가 서로 겹칠 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="485c8639befdb7591dd512dac093f4a950d4120a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayeredPane&lt;/code&gt; adds depth to a JFC/Swing container, allowing components to overlap each other when needed. An &lt;code&gt;Integer&lt;/code&gt; object specifies each component's depth in the container, where higher-numbered components sit &quot;on top&quot; of other components. For task-oriented documentation and examples of using layered panes see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/layeredpane.html&quot;&gt;How to Use a Layered Pane&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JLayeredPane&lt;/code&gt; 은 JFC / Swing 컨테이너에 깊이를 추가하여 필요할 때 구성 요소가 서로 겹칠 수 있도록합니다. &lt;code&gt;Integer&lt;/code&gt; 목적은 높은 번호의 구성 요소는 다른 구성 요소의 &quot;위에&quot;앉아 용기에 각 구성 요소의 깊이를 지정한다. 작업 지향 문서 및 계층화 된 창 사용 예제는 &lt;em&gt;Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/layeredpane.html&quot;&gt;How to Use a Layered Pane을&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="98e02eaf0193391b2bde17935fc29631d593e7df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayeredPane&lt;/code&gt; adds depth to a JFC/Swing container, allowing components to overlap each other when needed. An &lt;code&gt;Integer&lt;/code&gt; object specifies each component's depth in the container, where higher-numbered components sit &quot;on top&quot; of other components. For task-oriented documentation and examples of using layered panes see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/layeredpane.html&quot;&gt;How to Use a Layered Pane&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JLayeredPane&lt;/code&gt; 은 JFC / Swing 컨테이너에 깊이를 추가하여 필요할 때 구성 요소가 서로 겹칠 수 있도록합니다. &lt;code&gt;Integer&lt;/code&gt; 목적은 높은 번호의 구성 요소는 다른 구성 요소의 &quot;위에&quot;앉아 용기에 각 구성 요소의 깊이를 지정한다. 작업 지향 문서 및 계층화 된 창 사용 예제는 &lt;em&gt;Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/layeredpane.html&quot;&gt;How to Use a Layered Pane을&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="96ed1919ccda17cbb871a15b03f600f1f6ee7af6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayeredPane&lt;/code&gt; manages its list of children like &lt;code&gt;Container&lt;/code&gt;, but allows for the definition of a several layers within itself. Children in the same layer are managed exactly like the normal &lt;code&gt;Container&lt;/code&gt; object, with the added feature that when children components overlap, children in higher layers display above the children in lower layers.</source>
          <target state="translated">&lt;code&gt;JLayeredPane&lt;/code&gt; 은 &lt;code&gt;Container&lt;/code&gt; 와 같은 자식 목록을 관리 하지만 그 자체로 여러 레이어를 정의 할 수 있습니다. 동일한 레이어의 자식은 일반 &lt;code&gt;Container&lt;/code&gt; 객체 와 똑같이 관리 되며 자식 구성 요소가 겹치면 상위 레이어의 자식이 하위 레이어의 자식 위에 표시된다는 추가 기능이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="a0bda5d0bd1b60d17cd7346425b4c3c8cc93f71b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JList&lt;/code&gt; doesn't implement scrolling directly. To create a list that scrolls, make it the viewport view of a &lt;code&gt;JScrollPane&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;JList&lt;/code&gt; 는 스크롤링을 직접 구현하지 않습니다. 스크롤되는 목록을 만들려면 &lt;code&gt;JScrollPane&lt;/code&gt; 의 뷰포트 뷰로 만듭니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="55f8e3b4df354ba954f8b7f55a2e805688f37c78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JList&lt;/code&gt; doesn't provide any special handling of double or triple (or N) mouse clicks, but it's easy to add a &lt;code&gt;MouseListener&lt;/code&gt; if you wish to take action on these events. Use the &lt;code&gt;locationToIndex&lt;/code&gt; method to determine what cell was clicked. For example:</source>
          <target state="translated">&lt;code&gt;JList&lt;/code&gt; 는 이중 또는 삼중 (또는 N) 마우스 클릭에 대한 특별한 처리를 제공하지 않지만 이러한 이벤트에 대한 조치를 취하려는 경우 &lt;code&gt;MouseListener&lt;/code&gt; 를 쉽게 추가 할 수 있습니다. &lt;code&gt;locationToIndex&lt;/code&gt; 메서드를 사용하여 클릭 한 셀을 확인합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="7cfe7bb2790141c82b668eaf1d38714fbf5f2b6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JList&lt;/code&gt; supports the following drop modes:</source>
          <target state="translated">&lt;code&gt;JList&lt;/code&gt; 는 다음 드롭 모드를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="51dfeb4e7cb7476d93f7a530d56e5f4c66f1c567" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JMImplementation:type=MBeanServerDelegate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JMImplementation:type=MBeanServerDelegate&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="59a2b620c313da2a435b69a817319b85d4467e21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JOptionPane&lt;/code&gt; makes it easy to pop up a standard dialog box that prompts users for a value or informs them of something.</source>
          <target state="translated">&lt;code&gt;JOptionPane&lt;/code&gt; 을 사용하면 사용자에게 값을 입력하거나 무언가를 알리는 표준 대화 상자를 쉽게 팝업 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58d29c83736d46256bcd531f94d98c7e14761eee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JOptionPane&lt;/code&gt; makes it easy to pop up a standard dialog box that prompts users for a value or informs them of something. For information about using &lt;code&gt;JOptionPane&lt;/code&gt;, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;How to Make Dialogs&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JOptionPane&lt;/code&gt; 을 사용하면 사용자에게 값을 입력하거나 무언가를 알리는 표준 대화 상자를 쉽게 팝업 할 수 있습니다. &lt;code&gt;JOptionPane&lt;/code&gt; 사용에 대한 자세한 내용은 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;How to Make Dialogs를&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="517f34b62e406f30bbcc9b4ce0bcfb2c7ca50c1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JOptionPane&lt;/code&gt; makes it easy to pop up a standard dialog box that prompts users for a value or informs them of something. For information about using &lt;code&gt;JOptionPane&lt;/code&gt;, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;How to Make Dialogs&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JOptionPane&lt;/code&gt; 을 사용하면 사용자에게 값을 입력하거나 무언가를 알리는 표준 대화 상자를 쉽게 팝업 할 수 있습니다. &lt;code&gt;JOptionPane&lt;/code&gt; 사용에 대한 자세한 내용은 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;How to Make Dialogs를&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eab64e6a5c9c3c5957a4e4b76257f9fce08caca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JOptionPane&lt;/code&gt; that the receiver is providing the look and feel for.</source>
          <target state="translated">&lt;code&gt;JOptionPane&lt;/code&gt; 수신자가 룩앤필을 제공하는 JOptionPane .</target>
        </trans-unit>
        <trans-unit id="ff37d16ae6ac2004a4f2c3929c33004527e7c2c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPanel&lt;/code&gt; is a generic lightweight container.</source>
          <target state="translated">&lt;code&gt;JPanel&lt;/code&gt; 은 일반적인 경량 컨테이너입니다.</target>
        </trans-unit>
        <trans-unit id="548b97d7ce70cdd68abfeb12617a4fd40d41b06f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPanel&lt;/code&gt; is a generic lightweight container. For examples and task-oriented documentation for JPanel, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/panel.html&quot;&gt;How to Use Panels&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JPanel&lt;/code&gt; 은 일반적인 경량 컨테이너입니다. JPanel에 대한 예제 및 작업 지향 문서 는 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/panel.html&quot;&gt;How to Use Panels을&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b1b772636804cc2f255b361a1e4328c8d02d0fed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPanel&lt;/code&gt; is a generic lightweight container. For examples and task-oriented documentation for JPanel, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/panel.html&quot;&gt;How to Use Panels&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JPanel&lt;/code&gt; 은 일반적인 경량 컨테이너입니다. JPanel에 대한 예제 및 작업 지향 문서 는 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/panel.html&quot;&gt;How to Use Panels을&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b61171be88dd8f716c3c9e99aa55c5538537364" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPasswordField&lt;/code&gt; is a lightweight component that allows the editing of a single line of text where the view indicates something was typed, but does not show the original characters.</source>
          <target state="translated">&lt;code&gt;JPasswordField&lt;/code&gt; 는보기가 입력 된 내용을 나타내지 만 원래 문자를 표시하지 않는 한 줄의 텍스트를 편집 할 수있는 경량 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="77b9076cae2e4c91e7983362180178af747ed236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPasswordField&lt;/code&gt; is a lightweight component that allows the editing of a single line of text where the view indicates something was typed, but does not show the original characters. You can find further information and examples in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;How to Use Text Fields&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;JPasswordField&lt;/code&gt; 는보기가 입력 된 내용을 나타내지 만 원래 문자를 표시하지 않는 한 줄의 텍스트를 편집 할 수있는 경량 구성 요소입니다. &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;How to Use Text Fields&lt;/a&gt; 에서 추가 정보와 예제를 찾을 수 있습니다 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a71bbcbb0f2fdb870588421fd53186a350fac0a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPasswordField&lt;/code&gt; is a lightweight component that allows the editing of a single line of text where the view indicates something was typed, but does not show the original characters. You can find further information and examples in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;How to Use Text Fields&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;JPasswordField&lt;/code&gt; 는보기가 입력 된 내용을 나타내지 만 원래 문자를 표시하지 않는 한 줄의 텍스트를 편집 할 수있는 경량 구성 요소입니다. &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;How to Use Text Fields&lt;/a&gt; 에서 추가 정보와 예제를 찾을 수 있습니다 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07e3e9fdc1a796b9d8877250e87aba14bba4a8f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPasswordField&lt;/code&gt; is intended to be source-compatible with &lt;code&gt;java.awt.TextField&lt;/code&gt; used with &lt;code&gt;echoChar&lt;/code&gt; set. It is provided separately to make it easier to safely change the UI for the &lt;code&gt;JTextField&lt;/code&gt; without affecting password entries.</source>
          <target state="translated">&lt;code&gt;JPasswordField&lt;/code&gt; 는 &lt;code&gt;echoChar&lt;/code&gt; 세트 와 함께 사용되는 &lt;code&gt;java.awt.TextField&lt;/code&gt; 와 소스 호환되도록 고안되었습니다 . 비밀번호 입력에 영향을주지 않고 &lt;code&gt;JTextField&lt;/code&gt; 의 UI를보다 쉽게 ​​안전하게 변경할 수 있도록 별도로 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="52712d3a5ca640a791f1ccbf642d9b8b84ead558" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPopupMenu&lt;/code&gt; assigned for this component or &lt;code&gt;null&lt;/code&gt; if no popup assigned</source>
          <target state="translated">&lt;code&gt;JPopupMenu&lt;/code&gt; 이 컴포넌트에 할당 된 JPopupMenu 또는 할당 된 팝업이 &lt;code&gt;null&lt;/code&gt; 경우 null</target>
        </trans-unit>
        <trans-unit id="0f45e4a6129beaab4110a8b85afa60ba9ebebfa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPopupMenu&lt;/code&gt;, &lt;code&gt;JToolBar&lt;/code&gt; and &lt;code&gt;JMenu&lt;/code&gt; all provide convenience methods for creating a component and setting the &lt;code&gt;Action&lt;/code&gt; on the corresponding component. Refer to each of these classes for more information.</source>
          <target state="translated">&lt;code&gt;JPopupMenu&lt;/code&gt; , &lt;code&gt;JToolBar&lt;/code&gt; 및 &lt;code&gt;JMenu&lt;/code&gt; 는 모두 컴포넌트를 생성 하고 해당 컴포넌트 에서 &lt;code&gt;Action&lt;/code&gt; 을 설정하는 편리한 메소드를 제공합니다 . 자세한 내용은 각 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="799fa21b1eda4fc60a9187dd4e770fca16b103e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JProgressBar&lt;/code&gt; uses a &lt;code&gt;BoundedRangeModel&lt;/code&gt; as its data model, with the &lt;code&gt;value&lt;/code&gt; property representing the &quot;current&quot; state of the task, and the &lt;code&gt;minimum&lt;/code&gt; and &lt;code&gt;maximum&lt;/code&gt; properties representing the beginning and end points, respectively.</source>
          <target state="translated">&lt;code&gt;JProgressBar&lt;/code&gt; 는 &lt;code&gt;BoundedRangeModel&lt;/code&gt; 을 데이터 모델로 사용합니다. &lt;code&gt;value&lt;/code&gt; 속성은 작업의 &quot;현재&quot;상태를 나타내고 &lt;code&gt;minimum&lt;/code&gt; 및 &lt;code&gt;maximum&lt;/code&gt; 속성은 각각 시작 및 끝 지점을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1b516a434f9f3ef95f9f9e851378e62a62eae793" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSeparator&lt;/code&gt; provides a general purpose component for implementing divider lines - most commonly used as a divider between menu items that breaks them up into logical groupings.</source>
          <target state="translated">&lt;code&gt;JSeparator&lt;/code&gt; 는 구분선을 구현하기위한 범용 구성 요소를 제공합니다. 가장 일반적으로 메뉴 항목을 논리적 그룹으로 나누는 구분선으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b36fd04b0fc62f41cd7781d0f17d099e4e59b249" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSeparator&lt;/code&gt; provides a general purpose component for implementing divider lines - most commonly used as a divider between menu items that breaks them up into logical groupings. Instead of using &lt;code&gt;JSeparator&lt;/code&gt; directly, you can use the &lt;code&gt;JMenu&lt;/code&gt; or &lt;code&gt;JPopupMenu&lt;/code&gt;&lt;code&gt;addSeparator&lt;/code&gt; method to create and add a separator. &lt;code&gt;JSeparator&lt;/code&gt;s may also be used elsewhere in a GUI wherever a visual divider is useful.</source>
          <target state="translated">&lt;code&gt;JSeparator&lt;/code&gt; 는 구분선을 구현하기위한 범용 구성 요소를 제공합니다. 가장 일반적으로 메뉴 항목을 논리적 그룹으로 나누는 구분선으로 사용됩니다. &lt;code&gt;JSeparator&lt;/code&gt; 를 직접 사용하는 대신 &lt;code&gt;JMenu&lt;/code&gt; 또는 &lt;code&gt;JPopupMenu&lt;/code&gt; &lt;code&gt;addSeparator&lt;/code&gt; 메서드를 사용하여 구분 기호를 만들고 추가 할 수 있습니다 . &lt;code&gt;JSeparator&lt;/code&gt; 는 시각적 구분선이 유용 할 때마다 GUI의 다른 곳에서도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6db90e53a9985e0f7adf31f2ddc167a0cde83a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSpinner&lt;/code&gt; ancestor; &lt;code&gt;null&lt;/code&gt; if none of the ancestors are a &lt;code&gt;JSpinner&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;JSpinner&lt;/code&gt; 조상; 조상이 &lt;code&gt;JSpinner&lt;/code&gt; 가 아닌 경우 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5ce35029df4d40232dfb701b71813f555e739ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSplitPane&lt;/code&gt; is used to divide two (and only two) &lt;code&gt;Component&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;JSplitPane&lt;/code&gt; 은 두 개 (그리고 두 개만) &lt;code&gt;Component&lt;/code&gt; 를 나누는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="86b77964cdd1e61da5138c190a52bc82fc0bb927" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSplitPane&lt;/code&gt; is used to divide two (and only two) &lt;code&gt;Component&lt;/code&gt;s. The two &lt;code&gt;Component&lt;/code&gt;s are graphically divided based on the look and feel implementation, and the two &lt;code&gt;Component&lt;/code&gt;s can then be interactively resized by the user. Information on using &lt;code&gt;JSplitPane&lt;/code&gt; is in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/splitpane.html&quot;&gt;How to Use Split Panes&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JSplitPane&lt;/code&gt; 은 두 개 (그리고 두 개만) &lt;code&gt;Component&lt;/code&gt; 를 나누는 데 사용됩니다 . 두 개의 &lt;code&gt;Component&lt;/code&gt; 는 룩앤필 구현을 기반으로 그래픽으로 구분되며 두 개의 &lt;code&gt;Component&lt;/code&gt; 는 사용자가 대화식으로 크기를 조정할 수 있습니다. 사용에 대한 정보 &lt;code&gt;JSplitPane&lt;/code&gt; 의은 에 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/splitpane.html&quot;&gt;사용하는 방법 분할 창]&lt;/a&gt; 에서 &lt;em&gt;자바 튜토리얼&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="62ae7bd215cf3af44bf44c20a29f3df0bbb2513c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSplitPane&lt;/code&gt; is used to divide two (and only two) &lt;code&gt;Component&lt;/code&gt;s. The two &lt;code&gt;Component&lt;/code&gt;s are graphically divided based on the look and feel implementation, and the two &lt;code&gt;Component&lt;/code&gt;s can then be interactively resized by the user. Information on using &lt;code&gt;JSplitPane&lt;/code&gt; is in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/splitpane.html&quot;&gt;How to Use Split Panes&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JSplitPane&lt;/code&gt; 은 두 개 (그리고 두 개만) &lt;code&gt;Component&lt;/code&gt; 를 나누는 데 사용됩니다 . 두 개의 &lt;code&gt;Component&lt;/code&gt; 는 룩앤필 구현을 기반으로 그래픽으로 구분되며 두 개의 &lt;code&gt;Component&lt;/code&gt; 는 사용자가 대화식으로 크기를 조정할 수 있습니다. 사용에 대한 정보 &lt;code&gt;JSplitPane&lt;/code&gt; 의은 에 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/splitpane.html&quot;&gt;사용하는 방법 분할 창]&lt;/a&gt; 에서 &lt;em&gt;자바 튜토리얼&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b5de9a5fc81e16d6dc5f31c98411c11523cecfda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTable&lt;/code&gt; supports the following drop modes:</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 은 다음 드롭 모드를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="7606fe914e7d81929dfff4717fa95f2b0ed10207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTable&lt;/code&gt;'s row-based methods and &lt;code&gt;JTable&lt;/code&gt;'s selection model refer to the view and not the underlying model. Therefore, it is necessary to convert between the two. For example, to get the selection in terms of &lt;code&gt;myModel&lt;/code&gt; you need to convert the indices:</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 의 행 기반 메서드와 &lt;code&gt;JTable&lt;/code&gt; 의 선택 모델은 기본 모델이 아닌 뷰를 참조합니다. 따라서 둘 사이의 변환이 필요합니다. 예를 들어, &lt;code&gt;myModel&lt;/code&gt; 측면에서 선택을 얻으려면 인덱스를 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="caa017b6686d727916808a78c96c6ef105c58db9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTable&lt;/code&gt;s are typically placed inside of a &lt;code&gt;JScrollPane&lt;/code&gt;. By default, a &lt;code&gt;JTable&lt;/code&gt; will adjust its width such that a horizontal scrollbar is unnecessary. To allow for a horizontal scrollbar, invoke &lt;a href=&quot;#setAutoResizeMode(int)&quot;&gt;&lt;code&gt;setAutoResizeMode(int)&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;AUTO_RESIZE_OFF&lt;/code&gt;. Note that if you wish to use a &lt;code&gt;JTable&lt;/code&gt; in a standalone view (outside of a &lt;code&gt;JScrollPane&lt;/code&gt;) and want the header displayed, you can get it using &lt;a href=&quot;#getTableHeader()&quot;&gt;&lt;code&gt;getTableHeader()&lt;/code&gt;&lt;/a&gt; and display it separately.</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 은 일반적으로 &lt;code&gt;JScrollPane&lt;/code&gt; 내부에 배치됩니다 . 기본적으로 &lt;code&gt;JTable&lt;/code&gt; 은 가로 스크롤바가 필요하지 않도록 너비를 조정합니다. 수평 스크롤바를 허용하려면 &lt;code&gt;AUTO_RESIZE_OFF&lt;/code&gt; 와 함께 &lt;a href=&quot;#setAutoResizeMode(int)&quot;&gt; &lt;code&gt;setAutoResizeMode(int)&lt;/code&gt; &lt;/a&gt; 를 호출하십시오 . 독립형 뷰 ( &lt;code&gt;JScrollPane&lt;/code&gt; 외부)에서 &lt;code&gt;JTable&lt;/code&gt; 을 사용 하고 헤더를 표시하려는 경우 &lt;a href=&quot;#getTableHeader()&quot;&gt; &lt;code&gt;getTableHeader()&lt;/code&gt; &lt;/a&gt; 사용하여 가져 와서 별도로 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6eb8d9d3cb483a6a13db69f01e132ddaa6a891d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextComponent&lt;/code&gt; is the base class for swing text components.</source>
          <target state="translated">&lt;code&gt;JTextComponent&lt;/code&gt; 는 스윙 텍스트 구성 요소의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="dcc1b5f2bf4b9f1ea87c929136493fea70e539f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextComponent&lt;/code&gt; is the base class for swing text components. It tries to be compatible with the &lt;code&gt;java.awt.TextComponent&lt;/code&gt; class where it can reasonably do so. Also provided are other services for additional flexibility (beyond the pluggable UI and bean support). You can find information on how to use the functionality this class provides in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/generaltext.html&quot;&gt;General Rules for Using Text Components&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;JTextComponent&lt;/code&gt; 는 스윙 텍스트 구성 요소의 기본 클래스입니다. 합리적으로 할 수 있는 &lt;code&gt;java.awt.TextComponent&lt;/code&gt; 클래스 와 호환되도록 시도합니다 . 추가 유연성을위한 기타 서비스도 제공됩니다 (플러그 가능한 UI 및 Bean 지원을 넘어서). 이 클래스가 제공하는 기능을 사용하는 방법에 대한 정보 는 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/generaltext.html&quot;&gt;Text Components 사용을위한 일반 규칙&lt;/a&gt; 에서 찾을 수 있습니다 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="558992402a772c9da63b96fc28d64b179dc5cd86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextComponent&lt;/code&gt; is the base class for swing text components. It tries to be compatible with the &lt;code&gt;java.awt.TextComponent&lt;/code&gt; class where it can reasonably do so. Also provided are other services for additional flexibility (beyond the pluggable UI and bean support). You can find information on how to use the functionality this class provides in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/generaltext.html&quot;&gt;General Rules for Using Text Components&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;JTextComponent&lt;/code&gt; 는 스윙 텍스트 구성 요소의 기본 클래스입니다. 합리적으로 할 수 있는 &lt;code&gt;java.awt.TextComponent&lt;/code&gt; 클래스 와 호환되도록 시도합니다 . 추가 유연성을위한 기타 서비스도 제공됩니다 (플러그 가능한 UI 및 Bean 지원을 넘어서). 이 클래스가 제공하는 기능을 사용하는 방법에 대한 정보 는 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/generaltext.html&quot;&gt;텍스트 구성 요소 사용을위한 일반 규칙&lt;/a&gt; 에서 찾을 수 있습니다 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd86112155bd8ab808f845dfa0e7719361f3dc31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextComponents&lt;/code&gt; support the following drop modes:</source>
          <target state="translated">&lt;code&gt;JTextComponents&lt;/code&gt; 는 다음 드롭 모드를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="249c5f2b33a773ceea4a522fc3384cbe691d233b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextField&lt;/code&gt; has a method to establish the string used as the command string for the action event that gets fired. The &lt;code&gt;java.awt.TextField&lt;/code&gt; used the text of the field as the command string for the &lt;code&gt;ActionEvent&lt;/code&gt;. &lt;code&gt;JTextField&lt;/code&gt; will use the command string set with the &lt;code&gt;setActionCommand&lt;/code&gt; method if not &lt;code&gt;null&lt;/code&gt;, otherwise it will use the text of the field as a compatibility with &lt;code&gt;java.awt.TextField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JTextField&lt;/code&gt; 에는 발생되는 액션 이벤트에 대한 명령 문자열로 사용되는 문자열을 설정하는 메서드가 있습니다. &lt;code&gt;java.awt.TextField&lt;/code&gt; 의는 에 대한 명령 문자열로 필드의 텍스트를 사용 &lt;code&gt;ActionEvent&lt;/code&gt; . &lt;code&gt;JTextField&lt;/code&gt; 는 &lt;code&gt;null&lt;/code&gt; 이 아닌 경우 &lt;code&gt;setActionCommand&lt;/code&gt; 메서드로 설정된 명령 문자열을 사용하고 , 그렇지 않으면 필드의 텍스트를 &lt;code&gt;java.awt.TextField&lt;/code&gt; 와의 호환성으로 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="93e9584291de7455790b0357847da0fc1f817f51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextField&lt;/code&gt; is a lightweight component that allows the editing of a single line of text.</source>
          <target state="translated">&lt;code&gt;JTextField&lt;/code&gt; 는 한 줄의 텍스트를 편집 할 수있는 경량 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="4a1fd03bab5db3521fa449bc489afcc01fcd4373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextField&lt;/code&gt; is a lightweight component that allows the editing of a single line of text. For information on and examples of using text fields, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;How to Use Text Fields&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;JTextField&lt;/code&gt; 는 한 줄의 텍스트를 편집 할 수있는 경량 구성 요소입니다. 에 대한 정보와 텍스트 필드를 사용하는 예를 들어, 참조 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;사용 방법 텍스트 필드&lt;/a&gt; 에서 &lt;em&gt;자바 튜토리얼.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ad6775b979fc65774f73982613d2b24793985249" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextField&lt;/code&gt; is a lightweight component that allows the editing of a single line of text. For information on and examples of using text fields, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;How to Use Text Fields&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;JTextField&lt;/code&gt; 는 한 줄의 텍스트를 편집 할 수있는 경량 구성 요소입니다. 에 대한 정보와 텍스트 필드를 사용하는 예를 들어, 참조 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;사용 방법 텍스트 필드&lt;/a&gt; 에서 &lt;em&gt;자바 튜토리얼.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="db2d5b2fc957016529f40c6da6e79efca4096132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextField&lt;/code&gt; is intended to be source-compatible with &lt;code&gt;java.awt.TextField&lt;/code&gt; where it is reasonable to do so. This component has capabilities not found in the &lt;code&gt;java.awt.TextField&lt;/code&gt; class. The superclass should be consulted for additional capabilities.</source>
          <target state="translated">&lt;code&gt;JTextField&lt;/code&gt; 는 적절한 경우 &lt;code&gt;java.awt.TextField&lt;/code&gt; 와 소스 호환이 가능 합니다. 이 구성 요소에는 &lt;code&gt;java.awt.TextField&lt;/code&gt; 클래스 에없는 기능이 있습니다 . 추가 기능에 대해서는 수퍼 클래스를 참조해야합니다.</target>
        </trans-unit>
        <trans-unit id="d2ce0cf272ba250797b53f3787838f87c19684f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JToggleButton&lt;/code&gt;, &lt;code&gt;JCheckBox&lt;/code&gt;, &lt;code&gt;JRadioButton&lt;/code&gt;, &lt;code&gt;JCheckBoxMenuItem&lt;/code&gt; and &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;JToggleButton&lt;/code&gt; , &lt;code&gt;JCheckBox&lt;/code&gt; , &lt;code&gt;JRadioButton&lt;/code&gt; , &lt;code&gt;JCheckBoxMenuItem&lt;/code&gt; 및 &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a94ee21261936d748fb093ab1194f83ce8644c20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JToolBar&lt;/code&gt; provides a component that is useful for displaying commonly used &lt;code&gt;Action&lt;/code&gt;s or controls.</source>
          <target state="translated">&lt;code&gt;JToolBar&lt;/code&gt; 는 일반적으로 사용되는 &lt;code&gt;Action&lt;/code&gt; 또는 컨트롤 을 표시하는 데 유용한 구성 요소를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="f25c6d0f33277a31cc5cec0601adad51e336ea85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JToolBar&lt;/code&gt; provides a component that is useful for displaying commonly used &lt;code&gt;Action&lt;/code&gt;s or controls. For examples and information on using tool bars see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/toolbar.html&quot;&gt;How to Use Tool Bars&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JToolBar&lt;/code&gt; 는 일반적으로 사용되는 &lt;code&gt;Action&lt;/code&gt; 또는 컨트롤 을 표시하는 데 유용한 구성 요소를 제공 합니다. 도구 모음 사용에 대한 예제와 정보 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/toolbar.html&quot;&gt;How to Use Tool Bars를&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0fd31c2f0610bd665ec08d55068c7bea206d545" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JToolBar&lt;/code&gt; provides a component that is useful for displaying commonly used &lt;code&gt;Action&lt;/code&gt;s or controls. For examples and information on using tool bars see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/toolbar.html&quot;&gt;How to Use Tool Bars&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JToolBar&lt;/code&gt; 는 일반적으로 사용되는 &lt;code&gt;Action&lt;/code&gt; 또는 컨트롤 을 표시하는 데 유용한 구성 요소를 제공 합니다. 도구 모음 사용에 대한 예제와 정보 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/toolbar.html&quot;&gt;How to Use Tool Bars를&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="545f76a44333f3ce6627c792c6823f554ec44b63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTree&lt;/code&gt; and its related classes make extensive use of &lt;code&gt;TreePath&lt;/code&gt;s for identifying nodes in the &lt;code&gt;TreeModel&lt;/code&gt;. If a &lt;code&gt;TreeModel&lt;/code&gt; returns the same object, as compared by &lt;code&gt;equals&lt;/code&gt;, at two different indices under the same parent than the resulting &lt;code&gt;TreePath&lt;/code&gt; objects will be considered equal as well. Some implementations may assume that if two &lt;code&gt;TreePath&lt;/code&gt;s are equal, they identify the same node. If this condition is not met, painting problems and other oddities may result. In other words, if &lt;code&gt;getChild&lt;/code&gt; for a given parent returns the same Object (as determined by &lt;code&gt;equals&lt;/code&gt;) problems may result, and it is recommended you avoid doing this.</source>
          <target state="translated">&lt;code&gt;JTree&lt;/code&gt; 및 관련 클래스 는 &lt;code&gt;TreeModel&lt;/code&gt; 에서 노드를 식별하기 위해 &lt;code&gt;TreePath&lt;/code&gt; 를 광범위하게 사용 합니다 . 경우 &lt;code&gt;TreeModel&lt;/code&gt; 를가 함으로써 비해 동일한 객체 리턴 &lt;code&gt;equals&lt;/code&gt; 결과보다 동일한 부모 아래에서 두 개의 서로 다른 인덱스를 &lt;code&gt;TreePath&lt;/code&gt; 오브젝트 아니라 동일한 것으로 간주한다. 일부 구현에서는 두 &lt;code&gt;TreePath&lt;/code&gt; 가 같으면 동일한 노드를 식별 한다고 가정 할 수 있습니다 . 이 조건이 충족되지 않으면 페인팅 문제 및 기타 이상이 발생할 수 있습니다. 즉, 주어진 부모에 대한 &lt;code&gt;getChild&lt;/code&gt; 가 동일한 Object ( &lt;code&gt;equals&lt;/code&gt; 로 결정됨)를 반환하면 문제가 발생할 수 있으므로이를 피하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5c513c289f58d0471f1eaef0e0451185c2d64100" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTree&lt;/code&gt; instance listening too.</source>
          <target state="translated">&lt;code&gt;JTree&lt;/code&gt; 인스턴스도 듣고 있습니다.</target>
        </trans-unit>
        <trans-unit id="1aba9a9e59002555242f73b4a8cda8061b293812" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTree&lt;/code&gt; supports the following drop modes:</source>
          <target state="translated">&lt;code&gt;JTree&lt;/code&gt; 는 다음 드롭 모드를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="707cf5ee063f62698d0be7a76353051f290d8776" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JobState&lt;/code&gt; is a printing attribute class, an enumeration, that identifies the current state of a print job.</source>
          <target state="translated">&lt;code&gt;JobState&lt;/code&gt; 는 인쇄 작업의 현재 상태를 식별하는 열거 형인 인쇄 속성 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="d5d6a5c8a568cb33231bb583a7be5eb643c6308f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JobState&lt;/code&gt; is a printing attribute class, an enumeration, that identifies the current state of a print job. Class &lt;code&gt;JobState&lt;/code&gt; defines standard job state values. A Print Service implementation only needs to report those job states which are appropriate for the particular implementation; it does not have to report every defined job state. The &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute augments the &lt;code&gt;JobState&lt;/code&gt; attribute to give more detailed information about the job in the given job state.</source>
          <target state="translated">&lt;code&gt;JobState&lt;/code&gt; 는 인쇄 작업의 현재 상태를 식별하는 열거 형인 인쇄 속성 클래스입니다. &lt;code&gt;JobState&lt;/code&gt; 클래스 는 표준 작업 상태 값을 정의합니다. 인쇄 서비스 구현은 특정 구현에 적합한 작업 상태 만보고하면됩니다. 정의 된 모든 작업 상태를보고 할 필요는 없습니다. &lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; 속성은&lt;/a&gt; 보강에게 속성 &lt;code&gt;JobState&lt;/code&gt; 가 주어진 작업 상태에서 작업에 대한 자세한 정보를 제공하는 속성을.</target>
        </trans-unit>
        <trans-unit id="91518f1203fb584c25d36533968bb5bb1afa6652" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;July&lt;/code&gt;; &lt;code&gt;Jul&lt;/code&gt;; &lt;code&gt;07&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;July&lt;/code&gt; ; &lt;code&gt;Jul&lt;/code&gt; ; &lt;code&gt;07&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44cc6d7a6a6f2e0fe1dc06353c2890a74d802d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; type of then map keys</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; - &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; 한 후지도 키의 유형</target>
        </trans-unit>
        <trans-unit id="07fc0ca4437a126863a6f1173268bf388ad94d50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the &lt;code&gt;Map&lt;/code&gt;'s key type</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; - &lt;code&gt;Map&lt;/code&gt; 의 키 유형</target>
        </trans-unit>
        <trans-unit id="52c513e3a95ba55a9158e6d9497540077cdfacb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the class of the map keys</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; - 맵 키의 클래스</target>
        </trans-unit>
        <trans-unit id="9342a0ae454e755e09dcfcd765e885d49c896320" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the element type of the returned set</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; - 돌려 주어진 세트의 요소 형</target>
        </trans-unit>
        <trans-unit id="4b796ac99576adddcb26ba0d79aeb9f52baa9050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the key's type</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; - 키의 유형</target>
        </trans-unit>
        <trans-unit id="326d2bdfabb0c34b57b9174ca11e81b63731848a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the output type of the key mapping function</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; - 키 맵핑 기능의 출력 유형</target>
        </trans-unit>
        <trans-unit id="e7460ccfe2e406676ace0a64c960bd17443b48e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the type of keys maintained by this map</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; - 이 맵에 의해 유지되는 키의 종류</target>
        </trans-unit>
        <trans-unit id="b814f5cc3dc2d8322ab691f546272e3be800cc6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the type of the keys</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; - 키의 종류</target>
        </trans-unit>
        <trans-unit id="c311265dbddc5089d39ac2a0212516fbd115348a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the type of the map keys</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; - 맵 키의 유형</target>
        </trans-unit>
        <trans-unit id="9a186af7c485f74dd35835ddff394e6f821c3f31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - type of map keys</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; - 맵 키 유형</target>
        </trans-unit>
        <trans-unit id="b912d08b4cb540fbad74e69760a53f63a0912b18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KEY_PRESSED&lt;/code&gt; and &lt;code&gt;KEY_RELEASED&lt;/code&gt; events are not intended for reporting of character input. Therefore, the values returned by this method are guaranteed to be meaningful only for &lt;code&gt;KEY_TYPED&lt;/code&gt; events.</source>
          <target state="translated">&lt;code&gt;KEY_PRESSED&lt;/code&gt; 및 &lt;code&gt;KEY_RELEASED&lt;/code&gt; 이벤트는 문자 입력보고 용이 아닙니다. 따라서이 메서드가 반환하는 값은 &lt;code&gt;KEY_TYPED&lt;/code&gt; 이벤트에 대해서만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="253cb144964913578f52b727b9d200ca37424dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyEvent.KEY_PRESSED&lt;/code&gt;, &lt;code&gt;KeyEvent.KEY_TYPED&lt;/code&gt;, or &lt;code&gt;KeyEvent.KEY_RELEASED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;KeyEvent.KEY_PRESSED&lt;/code&gt; , &lt;code&gt;KeyEvent.KEY_TYPED&lt;/code&gt; 또는 &lt;code&gt;KeyEvent.KEY_RELEASED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3bcdc42d52710ffd469d36294eb5e4dccc14e6fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyInfo&lt;/code&gt; objects can also be marshalled to XML by invoking the &lt;a href=&quot;#marshal(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;KeyInfo&lt;/code&gt; 개체는 &lt;a href=&quot;#marshal(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하여 XML로 마샬링 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9facf2e0242425ccc01bccf4fb2737bae6062ad1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyInfoFactory&lt;/code&gt; implementations are registered and loaded using the &lt;a href=&quot;../../../../../../java.base/java/security/provider&quot;&gt;&lt;code&gt;Provider&lt;/code&gt;&lt;/a&gt; mechanism. For example, a service provider that supports the DOM mechanism would be specified in the &lt;code&gt;Provider&lt;/code&gt; subclass as:</source>
          <target state="translated">&lt;code&gt;KeyInfoFactory&lt;/code&gt; 구현은 &lt;a href=&quot;../../../../../../java.base/java/security/provider&quot;&gt; &lt;code&gt;Provider&lt;/code&gt; &lt;/a&gt; 메커니즘을 사용하여 등록 및로드됩니다 . 예를 들어 DOM 메커니즘을 지원하는 서비스 공급자는 &lt;code&gt;Provider&lt;/code&gt; 하위 클래스에 다음과 같이 지정 됩니다.</target>
        </trans-unit>
        <trans-unit id="23d62b9ad68e06cba7bf1e4a1c5866c9b7220c50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyListener&lt;/code&gt; that are attached to the &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;KeyListener&lt;/code&gt; &lt;code&gt;JTable&lt;/code&gt; 에 첨부 된 KeyListener 입니다 .</target>
        </trans-unit>
        <trans-unit id="31a46f8e065592007c532eb083fa0cbebb0b7cee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyManager&lt;/code&gt;s are created by either using a &lt;code&gt;KeyManagerFactory&lt;/code&gt;, or by implementing one of the &lt;code&gt;KeyManager&lt;/code&gt; subclasses.</source>
          <target state="translated">&lt;code&gt;KeyManager&lt;/code&gt; 는 &lt;code&gt;KeyManagerFactory&lt;/code&gt; 를 사용 하거나 &lt;code&gt;KeyManager&lt;/code&gt; 서브 클래스 중 하나를 구현 하여 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="f3ea9ba3304be11cff444bb5e929fefa7efef714" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyManager&lt;/code&gt;s are responsible for managing the key material which is used to authenticate the local SSLSocket to its peer. If no key material is available, the socket will be unable to present authentication credentials.</source>
          <target state="translated">&lt;code&gt;KeyManager&lt;/code&gt; 는 로컬 SSLSocket을 피어에 인증하는 데 사용되는 키 자료를 관리합니다. 사용 가능한 키 자료가 없으면 소켓은 인증 자격 증명을 제시 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="717d4a231e62fc113a072100b883d6cdade1d2de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;L&lt;/code&gt;&lt;em&gt;N&lt;/em&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;L&lt;/code&gt;&lt;em&gt;N&lt;/em&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90b936b8bdf424dc6fb197a7392c56332b718d38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LIGHT&lt;/code&gt; is used for the property &lt;code&gt;Tree.collapsedIcon&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LIGHT&lt;/code&gt; 는 &lt;code&gt;Tree.collapsedIcon&lt;/code&gt; 속성에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="e3174e8c9e822c80f9fb583f7f332b80eeb4b400" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSInput&lt;/code&gt; objects belong to the application. The DOM implementation will never modify them (though it may make copies and modify the copies, if necessary).</source>
          <target state="translated">&lt;code&gt;LSInput&lt;/code&gt; 객체는 애플리케이션에 속합니다. DOM 구현은 그것들을 절대 수정하지 않습니다 (필요하다면 복사본을 만들고 수정할 수 있습니다).</target>
        </trans-unit>
        <trans-unit id="664aaeea2ca3a59c0693f642988bf423fe117b56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSOutput.encoding&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;LSOutput.encoding&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="30d4fb0b3b1c8dd2b8a90ee99a83d32d8faa9298" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSOutput&lt;/code&gt; objects belong to the application. The DOM implementation will never modify them (though it may make copies and modify the copies, if necessary).</source>
          <target state="translated">&lt;code&gt;LSOutput&lt;/code&gt; 객체는 응용 프로그램에 속합니다. DOM 구현은 그것들을 절대 수정하지 않습니다 (필요하다면 복사본을 만들고 수정할 수 있습니다).</target>
        </trans-unit>
        <trans-unit id="d41359c88fd70ac492e585d8e251588b90b64e3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSParser&lt;/code&gt; provides an API for parsing XML and building the corresponding DOM document structure. A &lt;code&gt;LSParser&lt;/code&gt; instance can be obtained by invoking the &lt;code&gt;DOMImplementationLS.createLSParser()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;LSParser&lt;/code&gt; 는 XML을 구문 분석하고 해당 DOM 문서 구조를 구축하기위한 API를 제공합니다. &lt;code&gt;LSParser&lt;/code&gt; 에의 인스턴스를 호출하여 얻을 수있다 &lt;code&gt;DOMImplementationLS.createLSParser()&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="a8f04b5acbb539ddb9c6081c40f613adc04830ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSParserFilter&lt;/code&gt;s provide applications the ability to examine nodes as they are being constructed while parsing.</source>
          <target state="translated">&lt;code&gt;LSParserFilter&lt;/code&gt; 는 구문 분석하는 동안 노드가 구성 될 때 노드를 검사하는 기능을 애플리케이션에 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3da36f7925cf63f6a47bf4d1542a0c5da40791c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSParserFilter&lt;/code&gt;s provide applications the ability to examine nodes as they are being constructed while parsing. As each node is examined, it may be modified or removed, or the entire parse may be terminated early.</source>
          <target state="translated">&lt;code&gt;LSParserFilter&lt;/code&gt; 는 구문 분석하는 동안 노드가 구성 될 때 노드를 검사하는 기능을 애플리케이션에 제공합니다. 각 노드를 검사 할 때 수정 또는 제거되거나 전체 구문 분석이 조기에 종료 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6724960f548208794f001d66bd8d40673d635654" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSResourceResolver&lt;/code&gt; provides a way for applications to redirect references to external resources.</source>
          <target state="translated">&lt;code&gt;LSResourceResolver&lt;/code&gt; 는 애플리케이션이 참조를 외부 리소스로 리디렉션하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="900760c626833d318beceffc058fd647ef15c085" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSSerializer&lt;/code&gt; accepts any node type for serialization. For nodes of type &lt;code&gt;Document&lt;/code&gt; or &lt;code&gt;Entity&lt;/code&gt;, well-formed XML will be created when possible (well-formedness is guaranteed if the document or entity comes from a parse operation and is unchanged since it was created). The serialized output for these node types is either as a XML document or an External XML Entity, respectively, and is acceptable input for an XML parser. For all other types of nodes the serialized form is implementation dependent.</source>
          <target state="translated">&lt;code&gt;LSSerializer&lt;/code&gt; 는 직렬화를 위해 모든 노드 유형을 허용합니다. &lt;code&gt;Document&lt;/code&gt; 또는 &lt;code&gt;Entity&lt;/code&gt; 유형의 노드의 경우 가능한 경우 올바른 형식의 XML이 생성됩니다 (문서 또는 엔터티가 구문 분석 작업에서 제공되고 생성 된 이후 변경되지 않은 경우 올바른 형식이 보장됨). 이러한 노드 유형에 대한 직렬화 된 출력은 각각 XML 문서 또는 외부 XML 엔티티이며 XML 구문 분석기에 허용되는 입력입니다. 다른 모든 유형의 노드의 경우 직렬화 된 형식은 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="a7acee96b3e5a9c8f50f59ab39fe3ea11280aff8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSSerializerFilter&lt;/code&gt;s provide applications the ability to examine nodes as they are being serialized and decide what nodes should be serialized or not.</source>
          <target state="translated">&lt;code&gt;LSSerializerFilter&lt;/code&gt; 는 노드가 직렬화 될 때 노드를 검사하고 어떤 노드를 직렬화할지 여부를 결정할 수있는 기능을 애플리케이션에 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2ad61db5c66abeafc9d06184ecb18aea19821ed9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSSerializerFilter&lt;/code&gt;s provide applications the ability to examine nodes as they are being serialized and decide what nodes should be serialized or not. The &lt;code&gt;LSSerializerFilter&lt;/code&gt; interface is based on the &lt;code&gt;NodeFilter&lt;/code&gt; interface defined in [&lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt;] .</source>
          <target state="translated">&lt;code&gt;LSSerializerFilter&lt;/code&gt; 는 노드가 직렬화 될 때 노드를 검사하고 어떤 노드를 직렬화할지 여부를 결정할 수있는 기능을 애플리케이션에 제공합니다. &lt;code&gt;LSSerializerFilter&lt;/code&gt; 를의 인터페이스는에 기초 &lt;code&gt;NodeFilter&lt;/code&gt; [정의 인터페이스 &lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM 레벨 2 순회 및 범위&lt;/a&gt; ].</target>
        </trans-unit>
        <trans-unit id="c30f64c3b389e1bdb13c13f1694e1884b012e8ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSSerializerFilter&lt;/code&gt;s provide applications the ability to examine nodes as they are being serialized and decide what nodes should be serialized or not. The &lt;code&gt;LSSerializerFilter&lt;/code&gt; interface is based on the &lt;code&gt;NodeFilter&lt;/code&gt; interface defined in [&lt;a href=&quot;https://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt;] .</source>
          <target state="translated">&lt;code&gt;LSSerializerFilter&lt;/code&gt; 는 노드가 직렬화 될 때 노드를 검사하고 어떤 노드를 직렬화할지 여부를 결정할 수있는 기능을 애플리케이션에 제공합니다. &lt;code&gt;LSSerializerFilter&lt;/code&gt; 를의 인터페이스는에 기초 &lt;code&gt;NodeFilter&lt;/code&gt; [정의 인터페이스 &lt;a href=&quot;https://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM 레벨 2 순회 및 범위&lt;/a&gt; ].</target>
        </trans-unit>
        <trans-unit id="48c6a27663ab28f7c04836ac7c5e997c089d10b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LabelUI&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;LabelUI&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="ee39e660515ded42a6fbda28547851471b1041ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LayoutStyle&lt;/code&gt; provides information about how to position components.</source>
          <target state="translated">&lt;code&gt;LayoutStyle&lt;/code&gt; 은 구성 요소를 배치하는 방법에 대한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="83028f700e447cb92db4328157f99769b597b9d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LayoutStyle&lt;/code&gt; provides information about how to position components. This class is primarily useful for visual tools and layout managers. Most developers will not need to use this class.</source>
          <target state="translated">&lt;code&gt;LayoutStyle&lt;/code&gt; 은 구성 요소를 배치하는 방법에 대한 정보를 제공합니다. 이 클래스는 주로 시각적 도구 및 레이아웃 관리자에 유용합니다. 대부분의 개발자는이 클래스를 사용할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="975a021496115d6781efed95e7ca1fa7bef79ee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LazyInputMap&lt;/code&gt; will create a &lt;code&gt;InputMap&lt;/code&gt; in its &lt;code&gt;createValue&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;LazyInputMap&lt;/code&gt; 은 &lt;code&gt;createValue&lt;/code&gt; 메소드 에서 &lt;code&gt;InputMap&lt;/code&gt; 을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="2bd063a22a2bed8185d4bb68d4f90396d3ceb7d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LazyInputMap&lt;/code&gt; will create a &lt;code&gt;InputMap&lt;/code&gt; in its &lt;code&gt;createValue&lt;/code&gt; method. The bindings are passed in the constructor. The bindings are an array with the even number entries being string &lt;code&gt;KeyStrokes&lt;/code&gt; (eg &quot;alt SPACE&quot;) and the odd number entries being the value to use in the &lt;code&gt;InputMap&lt;/code&gt; (and the key in the &lt;code&gt;ActionMap&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;LazyInputMap&lt;/code&gt; 은 &lt;code&gt;createValue&lt;/code&gt; 메소드 에서 &lt;code&gt;InputMap&lt;/code&gt; 을 생성합니다 . 바인딩은 생성자에 전달됩니다. 바인딩은 짝수 항목이 문자열 &lt;code&gt;KeyStrokes&lt;/code&gt; (예 : &quot;alt SPACE&quot;)이고 홀수 항목이 &lt;code&gt;InputMap&lt;/code&gt; (및 &lt;code&gt;ActionMap&lt;/code&gt; 의 키)에서 사용할 값인 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="9a519258100423707f0968c203607a1ce8a9aba7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LdapName&lt;/code&gt; will properly parse all valid names, but does not attempt to detect all possible violations when parsing invalid names. It is &quot;generous&quot; in accepting invalid names. The &quot;validity&quot; of a name is determined ultimately when it is supplied to an LDAP server, which may accept or reject the name based on factors such as its schema information and interoperability considerations.</source>
          <target state="translated">&lt;code&gt;LdapName&lt;/code&gt; 은 유효한 모든 이름을 올바르게 구문 분석하지만 유효하지 않은 이름을 구문 분석 할 때 가능한 모든 위반을 감지하지는 않습니다. 유효하지 않은 이름을 받아들이면 &quot;관대합니다&quot;. 이름의 &quot;유효성&quot;은 최종적으로 LDAP 서버에 제공 될 때 결정되며, 스키마 정보 및 상호 운용성 고려 사항과 같은 요인에 따라 이름을 승인하거나 거부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="75c16543fa6d774a575de4f098eb2fb1b7caf5cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LineBreakMeasurer&lt;/code&gt; implements the most commonly used line-breaking policy: Every word that fits within the wrapping width is placed on the line. If the first word does not fit, then all of the characters that fit within the wrapping width are placed on the line. At least one character is placed on each line.</source>
          <target state="translated">&lt;code&gt;LineBreakMeasurer&lt;/code&gt; 는 가장 일반적으로 사용되는 줄 바꿈 정책을 구현합니다. 줄 바꿈 너비에 맞는 모든 단어가 줄에 배치됩니다. 첫 단어가 맞지 않으면 줄 바꿈 너비에 맞는 모든 문자가 줄에 배치됩니다. 각 줄에 적어도 하나의 문자가 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="15fa6f2b1cfa84a440d7ce92b496498dc4c85afa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LineBreakMeasurer&lt;/code&gt; is constructed with an iterator over styled text. The iterator's range should be a single paragraph in the text. &lt;code&gt;LineBreakMeasurer&lt;/code&gt; maintains a position in the text for the start of the next text segment. Initially, this position is the start of text. Paragraphs are assigned an overall direction (either left-to-right or right-to-left) according to the bidirectional formatting rules. All segments obtained from a paragraph have the same direction as the paragraph.</source>
          <target state="translated">&lt;code&gt;LineBreakMeasurer&lt;/code&gt; 는 스타일이 지정된 텍스트에 대한 반복기로 구성됩니다. 반복기의 범위는 텍스트의 단일 단락이어야합니다. &lt;code&gt;LineBreakMeasurer&lt;/code&gt; 는 텍스트에서 다음 텍스트 세그먼트의 시작 위치를 유지합니다. 처음에는이 위치가 텍스트의 시작입니다. 양방향 서식 규칙에 따라 단락에는 전체 방향 (왼쪽에서 오른쪽 또는 오른쪽에서 왼쪽)이 지정됩니다. 단락에서 얻은 모든 세그먼트는 단락과 동일한 방향을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="f586310c053ffa95ccc0b35ac9d4a247d8cbddab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;List&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;List&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0367347003be39d8a7fbfcb37b6e968265cdc4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;List&amp;lt;? extends AnnotationValue&amp;gt;&lt;/code&gt; (representing the elements, in declared order, if the value is an array)</source>
          <target state="translated">&lt;code&gt;List&amp;lt;? extends AnnotationValue&amp;gt;&lt;/code&gt; 합니다 (값이 배열 인 경우 선언 된 순서대로 요소를 나타냄)</target>
        </trans-unit>
        <trans-unit id="957e21563e2786d4b55037aefd935e8a6999a397" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListDataListener&lt;/code&gt; that attached to &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ListDataListener&lt;/code&gt; &lt;code&gt;JList&lt;/code&gt; 에 첨부 된 ListDataListener .</target>
        </trans-unit>
        <trans-unit id="ca656788abf2eef40b1501dbe90f5693b06e3bd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListResourceBundle&lt;/code&gt; is an abstract subclass of &lt;code&gt;ResourceBundle&lt;/code&gt; that manages resources for a locale in a convenient and easy to use list.</source>
          <target state="translated">&lt;code&gt;ListResourceBundle&lt;/code&gt; 은 편리하고 사용하기 쉬운 목록에서 로케일에 대한 &lt;code&gt;ResourceBundle&lt;/code&gt; 을 관리 하는 ResourceBundle 의 추상 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="a6a9a9d27e1eede167eb175cc65fa7393ffafa85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListResourceBundle&lt;/code&gt; is an abstract subclass of &lt;code&gt;ResourceBundle&lt;/code&gt; that manages resources for a locale in a convenient and easy to use list. See &lt;code&gt;ResourceBundle&lt;/code&gt; for more information about resource bundles in general.</source>
          <target state="translated">&lt;code&gt;ListResourceBundle&lt;/code&gt; 은 편리하고 사용하기 쉬운 목록에서 로케일에 대한 &lt;code&gt;ResourceBundle&lt;/code&gt; 을 관리 하는 ResourceBundle 의 추상 서브 클래스입니다 . 일반적으로 자원 번들에 대한 자세한 정보는 &lt;code&gt;ResourceBundle&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7401235292d816014a85119baff0346ec67ae456" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListSelectionListener&lt;/code&gt; that attached to &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ListSelectionListener&lt;/code&gt; &lt;code&gt;JList&lt;/code&gt; 에 첨부 된 ListSelectionListener .</target>
        </trans-unit>
        <trans-unit id="dba22fc604261a1babc290c09524d08b9cc705f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListSelectionModel.MULTIPLE_INTERVAL_SELECTION&lt;/code&gt; - In this mode, there's no restriction on what can be selected.</source>
          <target state="translated">&lt;code&gt;ListSelectionModel.MULTIPLE_INTERVAL_SELECTION&lt;/code&gt; - 이 모드에서는 선택할 수있는 항목에 대한 제한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="1eb84dd12d67adca7c254290bda202be1163effb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListSelectionModel.MULTIPLE_INTERVAL_SELECTION&lt;/code&gt; - In this mode, there's no restriction on what can be selected. This mode is the default.</source>
          <target state="translated">&lt;code&gt;ListSelectionModel.MULTIPLE_INTERVAL_SELECTION&lt;/code&gt; - 이 모드에서는 선택할 수있는 항목에 대한 제한이 없습니다. 이 모드가 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="0ceb767d70cf5d4533eb5a18135179abbf98c126" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListSelectionModel.SINGLE_INTERVAL_SELECTION&lt;/code&gt; - Only one contiguous interval can be selected at a time. In this mode, &lt;code&gt;addSelectionInterval&lt;/code&gt; behaves like &lt;code&gt;setSelectionInterval&lt;/code&gt; (replacing the current selection), unless the given interval is immediately adjacent to or overlaps the existing selection, and can therefore be used to grow it.</source>
          <target state="translated">&lt;code&gt;ListSelectionModel.SINGLE_INTERVAL_SELECTION&lt;/code&gt; - 한 번에 하나의 연속 간격 만 선택할 수 있습니다. 이 모드에서 &lt;code&gt;addSelectionInterval&lt;/code&gt; 은 지정된 간격이 기존 선택에 바로 인접하거나 겹치지 않는 한 &lt;code&gt;setSelectionInterval&lt;/code&gt; (현재 선택 대체) 처럼 작동 하므로 확장하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d691b6597f6d0de647fe7ac0aead6854f9542767" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListSelectionModel.SINGLE_INTERVAL_SELECTION&lt;/code&gt; - Only one contiguous interval can be selected at a time. In this mode, &lt;code&gt;addSelectionInterval&lt;/code&gt; behaves like &lt;code&gt;setSelectionInterval&lt;/code&gt; (replacing the current selection}, unless the given interval is immediately adjacent to or overlaps the existing selection, and can be used to grow the selection.</source>
          <target state="translated">&lt;code&gt;ListSelectionModel.SINGLE_INTERVAL_SELECTION&lt;/code&gt; - 한 번에 하나의 연속 간격 만 선택할 수 있습니다. 이 모드에서 &lt;code&gt;addSelectionInterval&lt;/code&gt; 은 &lt;code&gt;setSelectionInterval&lt;/code&gt; (현재 선택 대체} 처럼 작동합니다 . 단, 지정된 간격이 기존 선택에 바로 인접하거나 겹치지 않는 한 선택 영역을 늘리는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="17fd096a7fe71d81552943c7156afc9c76feda47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListSelectionModel.SINGLE_SELECTION&lt;/code&gt; - Only one list index can be selected at a time. In this mode, &lt;code&gt;setSelectionInterval&lt;/code&gt; and &lt;code&gt;addSelectionInterval&lt;/code&gt; are equivalent, both replacing the current selection with the index represented by the second argument (the &quot;lead&quot;).</source>
          <target state="translated">&lt;code&gt;ListSelectionModel.SINGLE_SELECTION&lt;/code&gt; - 한 번에 하나의 목록 인덱스 만 선택할 수 있습니다. 이 모드에서 &lt;code&gt;setSelectionInterval&lt;/code&gt; 및 &lt;code&gt;addSelectionInterval&lt;/code&gt; 은 동일하며, 둘 다 현재 선택을 두 번째 인수 ( &quot;lead&quot;)가 나타내는 인덱스로 대체합니다.</target>
        </trans-unit>
        <trans-unit id="bd6cc2bf16660d492a4b7ea7dcb0e4a0596a929b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoaderHandler&lt;/code&gt; is an interface used internally by the RMI runtime in previous implementation versions. It should never be accessed by application code.</source>
          <target state="translated">&lt;code&gt;LoaderHandler&lt;/code&gt; 는 이전 구현 버전에서 RMI 런타임이 내부적으로 사용하는 인터페이스입니다. 애플리케이션 코드로 액세스해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="0ed15ee2ee38bd494d6a4a680be1ddb607b94b5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDate&lt;/code&gt; implements this interface as it represents a set of fields that are contiguous from days to forever and require no external information to determine the validity of each date. It is therefore able to implement plus/minus correctly.</source>
          <target state="translated">&lt;code&gt;LocalDate&lt;/code&gt; 는이 인터페이스를 며칠부터 연속하여 각 날짜의 유효성을 결정하기 위해 외부 정보가 필요없는 일련의 필드를 나타내 므로이 인터페이스를 구현합니다. 따라서 플러스 / 마이너스를 올바르게 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b164d30df690ada780a7e4a4e896d59973145ee1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDate&lt;/code&gt; is an immutable date-time object that represents a date, often viewed as year-month-day. Other date fields, such as day-of-year, day-of-week and week-of-year, can also be accessed. For example, the value &quot;2nd October 2007&quot; can be stored in a &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LocalDate&lt;/code&gt; 는 날짜를 나타내는 변경 불가능한 날짜-시간 개체이며, 종종 연도-월-일로 표시됩니다. 일, 요일 및 주와 같은 다른 날짜 필드에도 액세스 할 수 있습니다. 예를 들어 &quot;2007 년 10 월 2 일&quot;값은 &lt;code&gt;LocalDate&lt;/code&gt; 에 저장 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="60170d11336300553c83286800fe3fe502330942" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDate&lt;/code&gt; returns &lt;code&gt;DAYS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LocalDate&lt;/code&gt; 는 &lt;code&gt;DAYS&lt;/code&gt; 를 반환</target>
        </trans-unit>
        <trans-unit id="c81d531e769bd9ae681a95232e11ab8654e6e3c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDate&lt;/code&gt; returns &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LocalDate&lt;/code&gt; 는 &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c5320f46bcbe47a3a9fa891e4ec41a81c90424fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDate&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;LocalDate&lt;/code&gt; 는 null을 반환</target>
        </trans-unit>
        <trans-unit id="a419ab33f8557e8bea7860ae514e2d9c02811fad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDateTime&lt;/code&gt; is an immutable date-time object that represents a date-time, often viewed as year-month-day-hour-minute-second. Other date and time fields, such as day-of-year, day-of-week and week-of-year, can also be accessed. Time is represented to nanosecond precision. For example, the value &quot;2nd October 2007 at 13:45.30.123456789&quot; can be stored in a &lt;code&gt;LocalDateTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; 은 날짜-시간을 나타내는 변경 불가능한 날짜-시간 객체이며, 종종 연-월-일-시-분-초로 표시됩니다. 일별, 주별 및 주별과 같은 다른 날짜 및 시간 필드에도 액세스 할 수 있습니다. 시간은 나노초 정밀도로 표시됩니다. 예를 들어, &quot;2007 년 10 월 2 일 13 : 45.30.123456789&quot;값은 &lt;code&gt;LocalDateTime&lt;/code&gt; 에 저장 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a3efcb9931bf615bb0e029072548769f4931553d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDateTime&lt;/code&gt; returns &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; 은 &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ca3bc7a0598ce7093020620768b609a00bf2584a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDateTime&lt;/code&gt; returns &lt;code&gt;NANOS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; 은 &lt;code&gt;NANOS&lt;/code&gt; 를 반환</target>
        </trans-unit>
        <trans-unit id="5c083245c0527d4043ca70dd4876067710b6c7ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDateTime&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; 은 null을 반환</target>
        </trans-unit>
        <trans-unit id="e47ab7cc24703b37a4970dcf8e824a8ddcf6943d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDateTime&lt;/code&gt; uses a precision of nanoseconds, whereas this class uses a precision of milliseconds. The conversion will truncate any excess precision information as though the amount in nanoseconds was subject to integer division by one million.</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; 은 나노초의 정밀도를 사용하는 반면이 클래스는 밀리 초의 정밀도를 사용합니다. 변환은 마치 나노초 단위의 양이 100 만 단위로 정수 분할 된 것처럼 초과 정밀도 정보를 자릅니다.</target>
        </trans-unit>
        <trans-unit id="c2178509e97c86a408c6cc9dcdc43de58b9784f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalTime&lt;/code&gt; implements this interface as it represents a set of fields that are contiguous from nanos to within days and require no external information to determine validity. It is able to implement plus/minus correctly, by wrapping around the day.</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; 은 나노에서 며칠 이내에 연속 된 필드 세트를 나타내며 유효성을 판단하기 위해 외부 정보가 필요하지 않으므로이 인터페이스를 구현합니다. 하루 종일 포장하여 플러스 / 마이너스를 올바르게 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b1ff1a7e083726a18ec2548b2ac82070642d37a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalTime&lt;/code&gt; is an immutable date-time object that represents a time, often viewed as hour-minute-second. Time is represented to nanosecond precision. For example, the value &quot;13:45.30.123456789&quot; can be stored in a &lt;code&gt;LocalTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; 은 시간을 나타내는 불변의 날짜-시간 객체로, 종종시-분-초로 표시됩니다. 시간은 나노초 정밀도로 표시됩니다. 예를 들어, &quot;13 : 45.30.123456789&quot;값은 &lt;code&gt;LocalTime&lt;/code&gt; 에 저장할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4831478f50a9606abb9443e1d405e0f064c0d78b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalTime&lt;/code&gt; returns &lt;code&gt;NANOS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; 은 &lt;code&gt;NANOS&lt;/code&gt; 를 반환</target>
        </trans-unit>
        <trans-unit id="8474d3a63814f4d7570b6a0ff081a32a34d4ed9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalTime&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; 은 null을 반환</target>
        </trans-unit>
        <trans-unit id="621730de2bb2243f31b0beaf83d3aed58b728952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalTime&lt;/code&gt; returns null (does not represent a date)</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; 은 null을 반환합니다 (날짜를 나타내지 않음).</target>
        </trans-unit>
        <trans-unit id="e31c54ebc280fc6d9da2ac5b2c982b9624bf1fca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Locale(&quot;no&quot;, &quot;NO&quot;, &quot;POSIX&quot;)&lt;/code&gt; would generate the same list except that locales with &quot;no&quot; would appear before the corresponding locales with &quot;nb&quot;.</source>
          <target state="translated">&lt;code&gt;Locale(&quot;no&quot;, &quot;NO&quot;, &quot;POSIX&quot;)&lt;/code&gt; 은 &quot;no&quot;가있는 로케일이 &quot;nb&quot;가있는 해당 로케일 앞에 나타나는 것을 제외하고는 동일한 목록을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="a6814649d068191641c350a4ac7c9314232b04f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocateRegistry&lt;/code&gt; is used to obtain a reference to a bootstrap remote object registry on a particular host (including the local host), or to create a remote object registry that accepts calls on a specific port.</source>
          <target state="translated">&lt;code&gt;LocateRegistry&lt;/code&gt; 는 특정 호스트 (로컬 호스트 포함)에서 부트 스트랩 원격 오브젝트 레지스트리에 대한 참조를 얻거나 특정 포트에서 호출을 수락하는 원격 오브젝트 레지스트리를 작성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8d8e92f7df41403e727bd170263d9f91d8697676" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lock&lt;/code&gt; implementations provide additional functionality over the use of &lt;code&gt;synchronized&lt;/code&gt; methods and statements by providing a non-blocking attempt to acquire a lock (&lt;a href=&quot;#tryLock()&quot;&gt;&lt;code&gt;tryLock()&lt;/code&gt;&lt;/a&gt;), an attempt to acquire the lock that can be interrupted (&lt;a href=&quot;#lockInterruptibly()&quot;&gt;&lt;code&gt;lockInterruptibly()&lt;/code&gt;&lt;/a&gt;, and an attempt to acquire the lock that can timeout (&lt;a href=&quot;#tryLock(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;tryLock(long, TimeUnit)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;Lock&lt;/code&gt; 구현은 잠금 획득을위한 비 차단 시도 ( &lt;a href=&quot;#tryLock()&quot;&gt; &lt;code&gt;tryLock()&lt;/code&gt; &lt;/a&gt; ), 중단 될 수있는 잠금 획득 시도 ( &lt;a href=&quot;#lockInterruptibly()&quot;&gt; &lt;code&gt;lockInterruptibly()&lt;/code&gt; &lt;/a&gt; ) 및 획득 시도를 제공하여 &lt;code&gt;synchronized&lt;/code&gt; 메서드 및 명령문 사용에 대한 추가 기능 을 제공합니다. 시간 초과 할 수있는 잠금 ( &lt;a href=&quot;#tryLock(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;tryLock(long, TimeUnit)&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c33cf344eddf551fcccfa7a6fff8450bd67f550b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lock&lt;/code&gt; implementations provide additional functionality over the use of &lt;code&gt;synchronized&lt;/code&gt; methods and statements by providing a non-blocking attempt to acquire a lock (&lt;a href=&quot;lock#tryLock--&quot;&gt;&lt;code&gt;tryLock()&lt;/code&gt;&lt;/a&gt;), an attempt to acquire the lock that can be interrupted (&lt;a href=&quot;lock#lockInterruptibly--&quot;&gt;&lt;code&gt;lockInterruptibly()&lt;/code&gt;&lt;/a&gt;, and an attempt to acquire the lock that can timeout (&lt;a href=&quot;lock#tryLock-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;tryLock(long, TimeUnit)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;Lock&lt;/code&gt; 구현은 잠금 을 획득하기위한 비 블로킹 시도 ( &lt;a href=&quot;lock#tryLock--&quot;&gt; &lt;code&gt;tryLock()&lt;/code&gt; &lt;/a&gt; ), 중단 될 수있는 잠금을 획득하려는 시도 ( &lt;a href=&quot;lock#lockInterruptibly--&quot;&gt; &lt;code&gt;lockInterruptibly()&lt;/code&gt; &lt;/a&gt; 및 획득하려는 시도)를 제공함으로써 &lt;code&gt;synchronized&lt;/code&gt; 메소드 및 명령문 사용에 대한 추가 기능 을 제공합니다. 제한 시간을 초과 할 수있는 잠금 ( &lt;a href=&quot;lock#tryLock-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;tryLock(long, TimeUnit)&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="5673096caf43b509458ac48821caba1c37ff2d0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lock&lt;/code&gt; implementations provide more extensive locking operations than can be obtained using &lt;code&gt;synchronized&lt;/code&gt; methods and statements.</source>
          <target state="translated">&lt;code&gt;Lock&lt;/code&gt; 구현은 &lt;code&gt;synchronized&lt;/code&gt; 메소드 및 명령문을 사용하여 얻을 수있는 것보다 더 광범위한 잠금 조작을 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="c77ac305aad6dbe832b47a89e75ccb3bc94d9d14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lock&lt;/code&gt; implementations provide more extensive locking operations than can be obtained using &lt;code&gt;synchronized&lt;/code&gt; methods and statements. They allow more flexible structuring, may have quite different properties, and may support multiple associated &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;code&gt;Lock&lt;/code&gt; 구현은 &lt;code&gt;synchronized&lt;/code&gt; 메소드 및 명령문을 사용하여 얻을 수있는 것보다 더 광범위한 잠금 조작을 제공 합니다. 그들은 더 유연한 구조화를 허용하고, 상당히 다른 속성을 가질 수 있으며, 여러 관련 &lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt; 지원할 수 있습니다 객체를 있습니다.</target>
        </trans-unit>
        <trans-unit id="08a19829fa13ac8eeb1d4a6736c0ebad77e95bd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LockInfo&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; as specified in the &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;LockInfo&lt;/code&gt; 는 &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt; 메서드에 지정된대로 &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; 에&lt;/a&gt; 매핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="d3d29d3664efbeba95a5c2c7b8e16d15e3405fcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LockInfo&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; as specified in the &lt;a href=&quot;lockinfo#from-javax.management.openmbean.CompositeData-&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;LockInfo&lt;/code&gt; 는 &lt;a href=&quot;lockinfo#from-javax.management.openmbean.CompositeData-&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt; 메소드에 지정된대로 &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; 에&lt;/a&gt; 맵핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="c29857290d6c7476b2ee7ba595096c91939db848" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LockInfo&lt;/code&gt; of an object for which the thread is blocked waiting if any; &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;LockInfo&lt;/code&gt; 스레드가있는 경우 대기중인 스레드가 차단 된 LockInfo 입니다. 그렇지 않은 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb91e6cd1754ca35d21c20ae401cfb45358a347a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LogRecords&lt;/code&gt; are published to a given &lt;code&gt;java.io.OutputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LogRecords&lt;/code&gt; 는 지정된 &lt;code&gt;java.io.OutputStream&lt;/code&gt; 에 공개됩니다 .</target>
        </trans-unit>
        <trans-unit id="6b9d32f93c9de2f3bebb3a15d07b0ed263c1da50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LogRecords&lt;/code&gt; are published to a network stream connection. By default the &lt;code&gt;XMLFormatter&lt;/code&gt; class is used for formatting.</source>
          <target state="translated">&lt;code&gt;LogRecords&lt;/code&gt; 는 네트워크 스트림 연결에 게시됩니다. 기본적으로 &lt;code&gt;XMLFormatter&lt;/code&gt; 클래스는 형식화에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="feb0884875afa29bf98a02930fa7b49fbb9c52f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LogStream&lt;/code&gt; provides a mechanism for logging errors that are of possible interest to those monitoring a system.</source>
          <target state="translated">&lt;code&gt;LogStream&lt;/code&gt; 은 시스템을 모니터링하는 사람들이 관심을 가질 수있는 오류를 로깅하기위한 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b994775ffa12a3bcd16f3afcd3037edea64983e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoggingMXBean&lt;/code&gt; is no longer a &lt;a href=&quot;../../../../java.management/java/lang/management/platformmanagedobject&quot;&gt;&lt;code&gt;platform MXBean&lt;/code&gt;&lt;/a&gt; and is replaced with &lt;a href=&quot;../../../../java.management/java/lang/management/platformloggingmxbean&quot;&gt;&lt;code&gt;PlatformLoggingMXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;LoggingMXBean&lt;/code&gt; 은 더 이상 &lt;a href=&quot;../../../../java.management/java/lang/management/platformmanagedobject&quot;&gt; &lt;code&gt;platform MXBean&lt;/code&gt; &lt;/a&gt; 이 아니며 &lt;a href=&quot;../../../../java.management/java/lang/management/platformloggingmxbean&quot;&gt; &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; &lt;/a&gt; 으로 대체됩니다 .</target>
        </trans-unit>
        <trans-unit id="0fa38de80a015e11b4309d61ef002e7cc06af7c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoggingMXBean&lt;/code&gt; is no longer a &lt;a href=&quot;../../../../java.management/java/lang/management/platformmanagedobject&quot;&gt;&lt;code&gt;platform MXBean&lt;/code&gt;&lt;/a&gt; and is replaced with &lt;a href=&quot;../../../../java.management/java/lang/management/platformloggingmxbean&quot;&gt;&lt;code&gt;PlatformLoggingMXBean&lt;/code&gt;&lt;/a&gt;. It will not register in the platform &lt;code&gt;MBeanServer&lt;/code&gt;. Use &lt;code&gt;ManagementFactory.getPlatformMXBean(PlatformLoggingMXBean.class)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;LoggingMXBean&lt;/code&gt; 은 더 이상 &lt;a href=&quot;../../../../java.management/java/lang/management/platformmanagedobject&quot;&gt; &lt;code&gt;platform MXBean&lt;/code&gt; &lt;/a&gt; 이 아니며 &lt;a href=&quot;../../../../java.management/java/lang/management/platformloggingmxbean&quot;&gt; &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; &lt;/a&gt; 으로 대체됩니다 . &lt;code&gt;MBeanServer&lt;/code&gt; 플랫폼에 등록되지 않습니다 . 사용 &lt;code&gt;ManagementFactory.getPlatformMXBean(PlatformLoggingMXBean.class)&lt;/code&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="bafc9d5d2b42fcd6cc057a7201f7806f1bed16df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoginModule&lt;/code&gt; describes the interface implemented by authentication technology providers.</source>
          <target state="translated">&lt;code&gt;LoginModule&lt;/code&gt; 은 인증 기술 제공자가 구현 한 인터페이스를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="33dc38c10d3809b30c11d4aac67a4f11cdba26b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoginModule&lt;/code&gt; describes the interface implemented by authentication technology providers. LoginModules are plugged in under applications to provide a particular type of authentication.</source>
          <target state="translated">&lt;code&gt;LoginModule&lt;/code&gt; 은 인증 기술 제공자가 구현 한 인터페이스를 설명합니다. LoginModule은 특정 유형의 인증을 제공하기 위해 응용 프로그램에 연결되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f866ed1761767576e0395095240c4a27b8e02380" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoginModule&lt;/code&gt; is configured and succeeds, then only the</source>
          <target state="translated">&lt;code&gt;LoginModule&lt;/code&gt; 이 구성되고 성공한 후</target>
        </trans-unit>
        <trans-unit id="aa876cf2d06335f653a7c76c2d3df0cf4cd70552" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoginModule&lt;/code&gt; must succeed.</source>
          <target state="translated">&lt;code&gt;LoginModule&lt;/code&gt; 이 성공해야합니다.</target>
        </trans-unit>
        <trans-unit id="b4fac527fa58329a3ffd016f3f81f59cc95cefe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoginModule&lt;/code&gt; need to have succeeded for the overall authentication to succeed. If no</source>
          <target state="translated">&lt;code&gt;LoginModule&lt;/code&gt; 전체 인증이 성공하려면 LoginModule 이 성공해야합니다. 그렇지 않다면</target>
        </trans-unit>
        <trans-unit id="6ee9cc4d98d18b2cfc904839ca2abf435888e29f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Long(0)&lt;/code&gt; if &lt;code&gt;isParseBigDecimal()&lt;/code&gt; is false and &lt;code&gt;isParseIntegerOnly()&lt;/code&gt; is true,</source>
          <target state="translated">&lt;code&gt;Long(0)&lt;/code&gt; &lt;code&gt;isParseBigDecimal()&lt;/code&gt; 이 false이고 &lt;code&gt;isParseIntegerOnly()&lt;/code&gt; 가 true 인 경우 Long (0) ,</target>
        </trans-unit>
        <trans-unit id="12306d267038cb4cda55bb56e12d8917381bd5f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LongStream.iterate&lt;/code&gt; should produce the same sequence of elements as produced by the corresponding for-loop:</source>
          <target state="translated">&lt;code&gt;LongStream.iterate&lt;/code&gt; 는 해당 for 루프에서 생성 된 것과 동일한 요소 시퀀스를 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="c06c1ce8a39c986dc062094680d50f906264fd51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LongSummaryStatistics&lt;/code&gt; can be used as a &lt;a href=&quot;stream/stream#collect(java.util.stream.Collector)&quot;&gt;reduction&lt;/a&gt; target for a &lt;a href=&quot;stream/stream&quot;&gt;stream&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;LongSummaryStatistics&lt;/code&gt; 는 &lt;a href=&quot;stream/stream&quot;&gt;스트림&lt;/a&gt; 의 &lt;a href=&quot;stream/stream#collect(java.util.stream.Collector)&quot;&gt;감소&lt;/a&gt; 대상 으로 사용할 수 있습니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="fe40cf5a0c540e512a970d39b1fe3e2ed2a27a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LongSummaryStatistics&lt;/code&gt; can be used as a &lt;a href=&quot;stream/stream#collect-java.util.stream.Collector-&quot;&gt;Stream.collect(Collector)&lt;/a&gt; reduction} target for a &lt;a href=&quot;stream/stream&quot;&gt;stream&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;LongSummaryStatistics&lt;/code&gt; 는 &lt;a href=&quot;stream/stream&quot;&gt;스트림&lt;/a&gt; 의 &lt;a href=&quot;stream/stream#collect-java.util.stream.Collector-&quot;&gt;Stream.collect (Collector)&lt;/a&gt; reduction} 대상 으로 사용할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="10b1ffb40eaff00c7a1433afcc696364c75a8d14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LookAndFeel&lt;/code&gt;, as the name implies, encapsulates a look and feel.</source>
          <target state="translated">&lt;code&gt;LookAndFeel&lt;/code&gt; 은 이름에서 알 수 있듯이 모양과 느낌을 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="aebfe27b59099d91cecf8d4bb4ddf83d069a7002" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LookAndFeel&lt;/code&gt;, as the name implies, encapsulates a look and feel. Beyond installing a look and feel most developers never need to interact directly with &lt;code&gt;LookAndFeel&lt;/code&gt;. In general only developers creating a custom look and feel need to concern themselves with this class.</source>
          <target state="translated">&lt;code&gt;LookAndFeel&lt;/code&gt; 은 이름에서 알 수 있듯이 모양과 느낌을 캡슐화합니다. 모양과 느낌을 설치하는 것 외에 대부분의 개발자는 &lt;code&gt;LookAndFeel&lt;/code&gt; 과 직접 상호 작용할 필요가 없습니다 . 일반적으로 사용자 지정 모양과 느낌을 만드는 개발자 만이 클래스에 관심을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="74ab60559847002c89effe2ad75cd5bf7dfe41c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M1&lt;/code&gt; reads &lt;code&gt;M2&lt;/code&gt;, and</source>
          <target state="translated">&lt;code&gt;M1&lt;/code&gt; 은 판독 &lt;code&gt;M2&lt;/code&gt; 를 하고</target>
        </trans-unit>
        <trans-unit id="4a05f73864fe496c03dc6bfda3c6a49e891bcd6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M1&lt;/code&gt;&lt;a href=&quot;../module#canRead(java.lang.Module)&quot;&gt;&lt;code&gt;reads&lt;/code&gt;&lt;/a&gt;&lt;code&gt;M2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;M1&lt;/code&gt;&lt;a href=&quot;../module#canRead(java.lang.Module)&quot;&gt;&lt;code&gt;reads&lt;/code&gt;&lt;/a&gt;&lt;code&gt;M2&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="96c2a0466195134cca9247fd56536682abaef33e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M2&lt;/code&gt;&lt;a href=&quot;../module#isOpen(java.lang.String,java.lang.Module)&quot;&gt;&lt;code&gt;opens&lt;/code&gt;&lt;/a&gt; the package containing the target class to at least &lt;code&gt;M1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;M2&lt;/code&gt; 는 대상 클래스가 포함 된 패키지를 &lt;code&gt;M1&lt;/code&gt; 이상으로 &lt;a href=&quot;../module#isOpen(java.lang.String,java.lang.Module)&quot;&gt; &lt;code&gt;opens&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2556e2e6cf25b9176bcbfb7c18cdf21bf46d4158" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the class implementing &lt;a href=&quot;typedescriptor.ofmethod&quot;&gt;TypeDescriptor.OfMethod&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - &lt;a href=&quot;typedescriptor.ofmethod&quot;&gt;TypeDescriptor.OfMethod를&lt;/a&gt; 구현하는 클래스</target>
        </trans-unit>
        <trans-unit id="69076c6772cd965e02c6c47b9fb650c6866211c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the kind of file manager forwarded to by this object</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; 이 객체에 의해 전송 된 파일 관리자의 종류</target>
        </trans-unit>
        <trans-unit id="dca1ab3b491612f56682eb781666eec867316456" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the model</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - 모델 유형</target>
        </trans-unit>
        <trans-unit id="77d261006b8e07101f7bcedc43e7f6fb1c4f4f9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the model the &lt;code&gt;RowFilter&lt;/code&gt; applies to</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - &lt;code&gt;RowFilter&lt;/code&gt; 가 적용되는 모델의 유형</target>
        </trans-unit>
        <trans-unit id="bfc4570005edffbd39ee303a9b120a663d80f244" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the model to which the &lt;code&gt;RowFilter&lt;/code&gt; applies</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - &lt;code&gt;RowFilter&lt;/code&gt; 가 적용되는 모델의 유형</target>
        </trans-unit>
        <trans-unit id="d00e40668e0df86397f02daa21c0937f56a79825" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the model, which must be an implementation of &lt;code&gt;TableModel&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - &lt;code&gt;TableModel&lt;/code&gt; 의 구현이어야하는 모델의 유형</target>
        </trans-unit>
        <trans-unit id="272b9f141e22803e983aa961786e91b506716e85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the model; for example &lt;code&gt;PersonModel&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - 모델의 유형; 예를 들어 &lt;code&gt;PersonModel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68a8b4dfea9599cfe86bf0512d623759d8e9e013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the resulting &lt;code&gt;ConcurrentMap&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - 결과 &lt;code&gt;ConcurrentMap&lt;/code&gt; 의 유형</target>
        </trans-unit>
        <trans-unit id="53f43757309e4e44acf3be6d255188e86e6fccf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the resulting &lt;code&gt;Map&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - 결과 &lt;code&gt;Map&lt;/code&gt; 의 유형</target>
        </trans-unit>
        <trans-unit id="f980e11347e5a103e5f2d981d468daa74f9a2216" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the underlying model</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - 기본 모델의 유형</target>
        </trans-unit>
        <trans-unit id="0aceb7282d98fbd98293227151377de51093bfd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MBeanServerPermission(&quot;createMBeanServer&quot;)&lt;/code&gt; implies &lt;code&gt;MBeanServerPermission(&quot;newMBeanServer&quot;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MBeanServerPermission(&quot;createMBeanServer&quot;)&lt;/code&gt; 의미 &lt;code&gt;MBeanServerPermission(&quot;newMBeanServer&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="275620a4a0e33bba654cf67432c0cba90dfdc542" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICROS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of microseconds added. This is equivalent to &lt;a href=&quot;instant#plusNanos-long-&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MICROS&lt;/code&gt; - 지정된 마이크로 초 수를 더한 &lt;code&gt;Instant&lt;/code&gt; 를 반환합니다 . 이것은 1,000을 곱한 &lt;a href=&quot;instant#plusNanos-long-&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="dc8ae6ce638ccefcc165409d1db5067ca7eb46b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICROS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of microseconds added. This is equivalent to &lt;a href=&quot;#plusNanos(long)&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MICROS&lt;/code&gt; - 지정된 수의 마이크로 초가 추가 된 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 양에 1,000을 곱한 &lt;a href=&quot;#plusNanos(long)&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="758cfad5f3eb63bd7ade931e37341b4dd68153a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICROS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of microseconds added. This is equivalent to &lt;a href=&quot;localtime#plusNanos-long-&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MICROS&lt;/code&gt; - 지정된 수의 마이크로 초가 추가 된 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 1,000을 곱한 &lt;a href=&quot;localtime#plusNanos-long-&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="4960b9e0a4ec57c6d69dab4d83595b7edb3a661f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICROS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of microseconds added. This is equivalent to &lt;a href=&quot;#plusNanos(long)&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MICROS&lt;/code&gt; - 지정된 수의 마이크로 초가 추가 된 &lt;code&gt;Instant&lt;/code&gt; 를 반환합니다 . 이것은 양에 1,000을 곱한 &lt;a href=&quot;#plusNanos(long)&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d865c617ce03e7f5e2fc344256727da3c5f4fbcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICRO_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified micro-of-day. This completely replaces the time and is equivalent to using &lt;a href=&quot;#ofNanoOfDay(long)&quot;&gt;&lt;code&gt;ofNanoOfDay(long)&lt;/code&gt;&lt;/a&gt; with the micro-of-day multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MICRO_OF_DAY&lt;/code&gt; - 지정된 마이크로 일 의 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 시간을 완전히 대체하며 &lt;a href=&quot;#ofNanoOfDay(long)&quot;&gt; &lt;code&gt;ofNanoOfDay(long)&lt;/code&gt; &lt;/a&gt; 를 마이크로-오브-데이에 1,000을 곱한 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="78d8aed84e75340fccec40c838f77b07bfd67fbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICRO_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified micro-of-day. This completely replaces the time and is equivalent to using &lt;a href=&quot;localtime#ofNanoOfDay-long-&quot;&gt;&lt;code&gt;ofNanoOfDay(long)&lt;/code&gt;&lt;/a&gt; with the micro-of-day multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MICRO_OF_DAY&lt;/code&gt; - 지정된 날짜를 가진 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 시간을 완전히 대체하며 &lt;a href=&quot;localtime#ofNanoOfDay-long-&quot;&gt; &lt;code&gt;ofNanoOfDay(long)&lt;/code&gt; &lt;/a&gt; 를 사용하는 것과 같습니다. 을 1,000에 곱한 오늘의 .</target>
        </trans-unit>
        <trans-unit id="fb086ce993caad7fcbf5885ba9e7089553c08000" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICRO_OF_SECOND&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the nano-of-second replaced by the specified micro-of-second multiplied by 1,000. The hour, minute and second will be unchanged.</source>
          <target state="translated">&lt;code&gt;MICRO_OF_SECOND&lt;/code&gt; - 초를 나노초로 지정한 초 단위로 1,000을 곱한 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 시, 분 및 초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="73cfb94a8463eee9d517d161e0190472d9b30d5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICRO_OF_SECOND&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the nano-of-second replaced by the specified micro-of-second multiplied by 1,000. The epoch-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;MICRO_OF_SECOND&lt;/code&gt; - 지정된 초 단위에 1,000을 곱한 초 단위의 나노초로 &lt;code&gt;Instant&lt;/code&gt; 를 반환합니다 . 에포크 초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3157be627b93fb984f98af52c04b7586dc625fe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLENNIA&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of millennia added. This is equivalent to calling &lt;a href=&quot;#plusYears(long)&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;MILLENNIA&lt;/code&gt; - 지정된 천년이 더해진 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환합니다 . 이는 1,000을 곱한 금액으로 &lt;a href=&quot;#plusYears(long)&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 . 새 달과 연도에 대해 유효하지 않은 경우 날짜는 변경되지 않습니다. 이 경우 날짜는 새 월과 연도의 최대 유효 값으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="2b222e9423ffdc15611372113c2cebd20aa090b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLENNIA&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of millennia added. This is equivalent to calling &lt;a href=&quot;localdate#plusYears-long-&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;MILLENNIA&lt;/code&gt; - 지정된 수의 천년이 추가 된 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환합니다 . 이는 1,000을 곱한 &lt;a href=&quot;localdate#plusYears-long-&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt; 호출과 동일합니다 . 새 월과 연도에 유효하지 않은 한, 월은 변경되지 않습니다. 이 경우 월은 새 달과 연도의 최대 유효 값으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="3872fc60eafce889212bc09ad0b8f08230b3893e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLENNIA&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified number of millennia added. This is equivalent to calling &lt;a href=&quot;#plusYears(long)&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MILLENNIA&lt;/code&gt; - 지정된 천년을 더한 &lt;code&gt;Year&lt;/code&gt; 를 반환합니다 . 이는 1,000을 곱한 금액으로 &lt;a href=&quot;#plusYears(long)&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="011b340b99bba91e92a8fe40dd62c56e37aee39a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLENNIA&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified number of millennia added. This is equivalent to calling &lt;a href=&quot;year#plusYears-long-&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MILLENNIA&lt;/code&gt; - 지정된 수의 천년이 추가 된 &lt;code&gt;Year&lt;/code&gt; 를 반환합니다 . 이는 1,000을 곱한 &lt;a href=&quot;year#plusYears-long-&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt; 호출과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="27a6370c7b40d4826a6d1fb48880788fadc620a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLENNIA&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of millennia added. This is equivalent to calling &lt;a href=&quot;#plusYears(long)&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MILLENNIA&lt;/code&gt; - 지정된 천년을 더한 &lt;code&gt;YearMonth&lt;/code&gt; 를 반환합니다 . 이는 1,000을 곱한 금액으로 &lt;a href=&quot;#plusYears(long)&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="3c064d23f75e51fc6ce892da9fc8437f36a4bc04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLENNIA&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of millennia added. This is equivalent to calling &lt;a href=&quot;yearmonth#plusYears-long-&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MILLENNIA&lt;/code&gt; - 지정된 수의 천년이 추가 된 &lt;code&gt;YearMonth&lt;/code&gt; 를 반환합니다 . 이는 1,000을 곱한 &lt;a href=&quot;yearmonth#plusYears-long-&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt; 호출과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="3b5b9c5c0c7482ef9da87f2ea19a85b1ab3b0b56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLIS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of milliseconds added. This is equivalent to &lt;a href=&quot;instant#plusNanos-long-&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000,000.</source>
          <target state="translated">&lt;code&gt;MILLIS&lt;/code&gt; - 지정된 밀리 초가 추가 된 &lt;code&gt;Instant&lt;/code&gt; 을 반환합니다 . 이는 1,000,000을 곱한 &lt;a href=&quot;instant#plusNanos-long-&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f048ddc272f621cb1afa076a1e24ce34e431e97d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLIS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of milliseconds added. This is equivalent to &lt;a href=&quot;#plusNanos(long)&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000,000.</source>
          <target state="translated">&lt;code&gt;MILLIS&lt;/code&gt; - 지정된 밀리 초가 추가 된 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 양에 1,000,000을 곱한 &lt;a href=&quot;#plusNanos(long)&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ec1240411ee90ccaa40430da6eecf66a0a0b2b5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLIS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of milliseconds added. This is equivalent to &lt;a href=&quot;localtime#plusNanos-long-&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000,000.</source>
          <target state="translated">&lt;code&gt;MILLIS&lt;/code&gt; - 지정된 밀리 초가 추가 된 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이는 1,000,000을 곱한 &lt;a href=&quot;localtime#plusNanos-long-&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="64e2494098e102b1e1cf05595d5a4ff1116dfab9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLIS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of milliseconds added. This is equivalent to &lt;a href=&quot;#plusNanos(long)&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000,000.</source>
          <target state="translated">&lt;code&gt;MILLIS&lt;/code&gt; - 지정된 밀리 초가 추가 된 &lt;code&gt;Instant&lt;/code&gt; 를 반환합니다 . 이것은 양에 1,000,000을 곱한 &lt;a href=&quot;#plusNanos(long)&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="0c7a3319d5b32bb8eddc107c5a6a97fd80f476b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLI_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified milli-of-day. This completely replaces the time and is equivalent to using &lt;a href=&quot;#ofNanoOfDay(long)&quot;&gt;&lt;code&gt;ofNanoOfDay(long)&lt;/code&gt;&lt;/a&gt; with the milli-of-day multiplied by 1,000,000.</source>
          <target state="translated">&lt;code&gt;MILLI_OF_DAY&lt;/code&gt; - 지정된 밀리- 오일 의 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 시간을 완전히 대체하며 , 밀리-오브 일에 1,000,000을 곱한 &lt;a href=&quot;#ofNanoOfDay(long)&quot;&gt; &lt;code&gt;ofNanoOfDay(long)&lt;/code&gt; &lt;/a&gt; 를 사용하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="1cdb67c5d2d1731ec4727e2be70579e5f5895edb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLI_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified milli-of-day. This completely replaces the time and is equivalent to using &lt;a href=&quot;localtime#ofNanoOfDay-long-&quot;&gt;&lt;code&gt;ofNanoOfDay(long)&lt;/code&gt;&lt;/a&gt; with the milli-of-day multiplied by 1,000,000.</source>
          <target state="translated">&lt;code&gt;MILLI_OF_DAY&lt;/code&gt; - 지정된 날짜를 가진 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 시간을 완전히 대체하며 &lt;a href=&quot;localtime#ofNanoOfDay-long-&quot;&gt; &lt;code&gt;ofNanoOfDay(long)&lt;/code&gt; &lt;/a&gt; 를 백만 분의 1을 곱한 값으로 사용하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="4be7716ab1b357a7a7487ad9eff06d2f3b85afdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLI_OF_SECOND&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the nano-of-second replaced by the specified milli-of-second multiplied by 1,000,000. The hour, minute and second will be unchanged.</source>
          <target state="translated">&lt;code&gt;MILLI_OF_SECOND&lt;/code&gt; - 지정된 밀리 초로 1,000,000을 곱한 초 단위의 나노초로 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 시, 분 및 초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f0706116c4949378dc73354dba353d09564af583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLI_OF_SECOND&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the nano-of-second replaced by the specified milli-of-second multiplied by 1,000,000. The epoch-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;MILLI_OF_SECOND&lt;/code&gt; - 지정된 밀리 초로 1,000,000을 곱한 초 단위 나노초로 &lt;code&gt;Instant&lt;/code&gt; 를 반환합니다 . 에포크 초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="986faa0149ffbe6e7a1f8f2ae3cf153c34ee5cf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MIMEType&lt;/code&gt; - a &lt;code&gt;String&lt;/code&gt; containing a file suffix (</source>
          <target state="translated">&lt;code&gt;MIMEType&lt;/code&gt; - &lt;code&gt;String&lt;/code&gt; 파일 접미사를 포함하는 (</target>
        </trans-unit>
        <trans-unit id="dfd8077c71e40a35b7c069b386fa98a10b3a2aaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MIMETypes&lt;/code&gt; - an array of &lt;code&gt;String&lt;/code&gt;s indicating the format's MIME types. If no MIME types are defined, &lt;code&gt;null&lt;/code&gt; should be supplied. An array of length 0 will be normalized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MIMETypes&lt;/code&gt; - 형식의 MIME 타입을 나타내는 &lt;code&gt;String&lt;/code&gt; 배열 MIME 유형이 정의되어 있지 않으면 &lt;code&gt;null&lt;/code&gt; 을 제공해야합니다. 길이가 0 인 배열은 &lt;code&gt;null&lt;/code&gt; 로 정규화됩니다 .</target>
        </trans-unit>
        <trans-unit id="4d6f2f33fe0292fb3746649f633b15a900c87701" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MIMETypes&lt;/code&gt; - an array of &lt;code&gt;String&lt;/code&gt;s indicating the format's MIME types. If no suffixes are defined, &lt;code&gt;null&lt;/code&gt; should be supplied. An array of length 0 will be normalized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MIMETypes&lt;/code&gt; - 형식의 MIME 타입을 나타내는 &lt;code&gt;String&lt;/code&gt; 배열 접미사가 정의되어 있지 않으면 &lt;code&gt;null&lt;/code&gt; 을 제공해야합니다. 길이가 0 인 배열은 &lt;code&gt;null&lt;/code&gt; 로 정규화됩니다 .</target>
        </trans-unit>
        <trans-unit id="c00d6797f122b2e0a2040e8b3e291b32dde186d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINUTES&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of minutes added. This is equivalent to &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 60.</source>
          <target state="translated">&lt;code&gt;MINUTES&lt;/code&gt; - 지정된 시간 (분)이 추가 된 &lt;code&gt;Instant&lt;/code&gt; 를 반환합니다 . 양에 60을 곱한 &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="aec0242da4a5b45ccd580835c85b902f794143dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINUTES&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of minutes added. This is equivalent to &lt;a href=&quot;#plusMinutes(long)&quot;&gt;&lt;code&gt;plusMinutes(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MINUTES&lt;/code&gt; - 반환 &lt;code&gt;LocalTime&lt;/code&gt; 추가 지정된 시간 (분)으로한다. 이것은 &lt;a href=&quot;#plusMinutes(long)&quot;&gt; &lt;code&gt;plusMinutes(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="fc6581c95b350aae6e7561ffa5b274f87a40e296" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINUTES&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of minutes added. This is equivalent to &lt;a href=&quot;localtime#plusMinutes-long-&quot;&gt;&lt;code&gt;plusMinutes(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MINUTES&lt;/code&gt; - 반환 &lt;code&gt;LocalTime&lt;/code&gt; 추가 지정된 시간 (분)으로한다. 이것은 &lt;a href=&quot;localtime#plusMinutes-long-&quot;&gt; &lt;code&gt;plusMinutes(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="5f9301edfad0a968ce8d21372577cb347891c181" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINUTES&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of minutes added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 60.</source>
          <target state="translated">&lt;code&gt;MINUTES&lt;/code&gt; - 지정된 시간 (분)이 추가 된 &lt;code&gt;Instant&lt;/code&gt; 을 반환합니다 . 이는 양에 60을 곱한 &lt;a href=&quot;#plusSeconds(long)&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="6b43e03380bd9feb31e7706b7d0b89b0aecd7d64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINUTE_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified minute-of-day. The second-of-minute and nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;MINUTE_OF_DAY&lt;/code&gt; - 지정된 요일이 있는 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 초와 나노초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5e5386981cecab229ba147fbf04cfdf412444a5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINUTE_OF_HOUR&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified minute-of-hour. The hour, second-of-minute and nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;MINUTE_OF_HOUR&lt;/code&gt; - 지정된 시간으로 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 시간, 초 및 나노초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="68d5ffe9725bdeacc3d1f8879b27212371fc3c5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODELESS&lt;/code&gt; dialog doesn't block any top-level windows.</source>
          <target state="translated">&lt;code&gt;MODELESS&lt;/code&gt; 대화 상자는 최상위 창을 차단하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0482e5082ef0b5fecb1a5cde873fb57bdc5139f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; - The image will conform to the metadata object passed in to a write. &lt;code&gt;setTiling&lt;/code&gt; will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; - 이미지는 쓰기로 전달 된 메타 데이터 개체를 따릅니다. &lt;code&gt;setTiling&lt;/code&gt; 은 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="de4c3e7e43bf04eb98d2586edad699178fc54444" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; - The output image will use whatever progression parameters are found in the metadata objects passed into the writer.</source>
          <target state="translated">&lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; - 출력 이미지는 라이터로 전달 된 메타 데이터 개체에서 찾은 진행 매개 변수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="06b48f2ba2e8d422b131232ba5b83710bca0fbd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; - Use whatever compression parameters are specified in metadata objects passed in to the writer.</source>
          <target state="translated">&lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; - 기록기에 전달 된 메타 데이터 개체에 지정된 압축 매개 변수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8450b8a8e562cb70ca9bb009dd21772bec303c2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_DEFAULT&lt;/code&gt; - The image will be tiled using default parameters. &lt;code&gt;setTiling&lt;/code&gt; will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MODE_DEFAULT&lt;/code&gt; - 이미지는 기본 매개 변수를 사용하여 바둑판 식으로 배열됩니다. &lt;code&gt;setTiling&lt;/code&gt; 은 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="37d9f7063eed0f08ff989209aefe7373a5e5cf9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_DEFAULT&lt;/code&gt; - The image will be written progressively, with parameters chosen by the writer.</source>
          <target state="translated">&lt;code&gt;MODE_DEFAULT&lt;/code&gt; - 라이터가 선택한 매개 변수를 사용하여 이미지가 점진적으로 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="a638892fe2001d5254d0071c363e02a7228a4f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_DEFAULT&lt;/code&gt; - Use default compression parameters.</source>
          <target state="translated">&lt;code&gt;MODE_DEFAULT&lt;/code&gt; - 기본 압축 매개 변수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="528da00ce58da145cebea2c4dab97be90a8c91dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_DISABLED&lt;/code&gt; - If the mode is set to &lt;code&gt;MODE_DISABLED&lt;/code&gt;, methods that query or modify the compression type or parameters will throw an &lt;code&gt;IllegalStateException&lt;/code&gt; (if compression is normally supported by the plug-in). Some writers, such as JPEG, do not normally offer uncompressed output. In this case, attempting to set the mode to &lt;code&gt;MODE_DISABLED&lt;/code&gt; will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; and the mode will not be changed.</source>
          <target state="translated">&lt;code&gt;MODE_DISABLED&lt;/code&gt; - 모드가 &lt;code&gt;MODE_DISABLED&lt;/code&gt; 로 설정된 경우 압축 유형 또는 매개 변수를 조회하거나 수정하는 메소드는 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생시킵니다 (일반적으로 플러그인이 압축을 지원하는 경우). JPEG와 같은 일부 작성자는 일반적으로 압축되지 않은 출력을 제공하지 않습니다. 이 경우 모드를 &lt;code&gt;MODE_DISABLED&lt;/code&gt; 로 설정하려고 하면 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 이 발생 하고 모드가 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f206e6196afc4ad94c8df84d4d3e5579127b6325" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_DISABLED&lt;/code&gt; - No progression. Use this to turn off progression.</source>
          <target state="translated">&lt;code&gt;MODE_DISABLED&lt;/code&gt; - 진행되지 않습니다. 진행을 끄려면 이것을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b50b40acbcde82ffcf24c01be42755116db76fde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_DISABLED&lt;/code&gt; - The image will not be tiled. &lt;code&gt;setTiling&lt;/code&gt; will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MODE_DISABLED&lt;/code&gt; - 이미지가 바둑판 식으로 배열되지 않습니다. &lt;code&gt;setTiling&lt;/code&gt; 은 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="5560582ceb954a684763a67ee6047633da9f9b47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_EXPLICIT&lt;/code&gt; - Compress using the compression type and quality settings specified in this &lt;code&gt;ImageWriteParam&lt;/code&gt;. Any previously set compression parameters are discarded.</source>
          <target state="translated">&lt;code&gt;MODE_EXPLICIT&lt;/code&gt; - 이 &lt;code&gt;ImageWriteParam&lt;/code&gt; 에 지정된 압축 유형 및 품질 설정을 사용하여 압축합니다 . 이전에 설정된 압축 매개 변수는 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="680145e8265ebb943e714b525c627b831ccab0c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_EXPLICIT&lt;/code&gt; - The image will be tiled according to parameters given in the &lt;a href=&quot;#setTiling(int,int,int,int)&quot;&gt;&lt;code&gt;setTiling&lt;/code&gt;&lt;/a&gt; method. Any previously set tiling parameters are discarded.</source>
          <target state="translated">&lt;code&gt;MODE_EXPLICIT&lt;/code&gt; - 이미지는 &lt;a href=&quot;#setTiling(int,int,int,int)&quot;&gt; &lt;code&gt;setTiling&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 매개 변수에 따라 타일링됩니다 . 이전에 설정된 타일링 매개 변수는 모두 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="e62c8ed22e04601d262ad72623d5093f995262bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_EXPLICIT&lt;/code&gt; - The image will be tiled according to parameters given in the &lt;a href=&quot;imagewriteparam#setTiling-int-int-int-int-&quot;&gt;&lt;code&gt;setTiling&lt;/code&gt;&lt;/a&gt; method. Any previously set tiling parameters are discarded.</source>
          <target state="translated">&lt;code&gt;MODE_EXPLICIT&lt;/code&gt; - 이미지는 &lt;a href=&quot;imagewriteparam#setTiling-int-int-int-int-&quot;&gt; &lt;code&gt;setTiling&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 매개 변수에 따라 바둑판 식으로 배열됩니다 . 이전에 설정된 타일링 매개 변수는 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="d9e6697c2c353a18d4331a09ee2ccabfb2c1cb06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MONTHS&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of months added. This is equivalent to &lt;a href=&quot;#plusMonths(long)&quot;&gt;&lt;code&gt;plusMonths(long)&lt;/code&gt;&lt;/a&gt;. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;MONTHS&lt;/code&gt; - 지정된 개월 수가 추가 된 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환합니다 . 이것은 &lt;a href=&quot;#plusMonths(long)&quot;&gt; &lt;code&gt;plusMonths(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 . 새 달과 연도에 대해 유효하지 않은 경우 날짜는 변경되지 않습니다. 이 경우 날짜는 새 월과 연도의 최대 유효 값으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="35fd54ca93a59bacc3006f1ce3027ace744edf73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MONTHS&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of months added. This is equivalent to &lt;a href=&quot;localdate#plusMonths-long-&quot;&gt;&lt;code&gt;plusMonths(long)&lt;/code&gt;&lt;/a&gt;. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;MONTHS&lt;/code&gt; - 지정된 개월 수가 추가 된 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환합니다 . 이것은 &lt;a href=&quot;localdate#plusMonths-long-&quot;&gt; &lt;code&gt;plusMonths(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 . 새 월과 연도에 유효하지 않은 한, 월은 변경되지 않습니다. 이 경우 월은 새 달과 연도의 최대 유효 값으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="602fb31be003841ee46a4c305ee2778b480b95a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MONTHS&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of months added. This is equivalent to &lt;a href=&quot;#plusMonths(long)&quot;&gt;&lt;code&gt;plusMonths(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MONTHS&lt;/code&gt; - 반환 &lt;code&gt;YearMonth&lt;/code&gt; 추가 개월의 지정된 번호를. 이것은 &lt;a href=&quot;#plusMonths(long)&quot;&gt; &lt;code&gt;plusMonths(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="4765ed8e635693fee304cc0c7c22eb226d0ee681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MONTHS&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of months added. This is equivalent to &lt;a href=&quot;yearmonth#plusMonths-long-&quot;&gt;&lt;code&gt;plusMonths(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MONTHS&lt;/code&gt; - 반환 &lt;code&gt;YearMonth&lt;/code&gt; 추가 개월의 지정된 번호를. 이것은 &lt;a href=&quot;yearmonth#plusMonths-long-&quot;&gt; &lt;code&gt;plusMonths(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="a7b9a1c53940311a0d34ddca6467ea28bb9c8280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified month-of-year. The year will be unchanged. The day-of-month will also be unchanged, unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; - 지정된 연도 의 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환합니다 . 연도는 변경되지 않습니다. 새 월과 연도에 유효하지 않은 한, 월도 변경되지 않습니다. 이 경우 월은 새 달과 연도의 최대 유효 값으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="376c694ce18aaf2f716de71060cfc2fe6c3e6124" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified month-of-year. The year will be unchanged.</source>
          <target state="translated">&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; - 지정된 연도 의 &lt;code&gt;YearMonth&lt;/code&gt; 를 반환합니다 . 연도는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="121eab465441f63a73c8383822bab0e7ce4515eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; events are delivered to the &lt;code&gt;Component&lt;/code&gt; in which the mouse button was pressed until the mouse button is released (regardless of whether the mouse position is within the bounds of the &lt;code&gt;Component&lt;/code&gt;). Due to platform-dependent Drag&amp;amp;Drop implementations, &lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; events may not be delivered during a native Drag&amp;amp;Drop operation. In a multi-screen environment mouse drag events are delivered to the &lt;code&gt;Component&lt;/code&gt; even if the mouse position is outside the bounds of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; associated with that &lt;code&gt;Component&lt;/code&gt;. However, the reported position for mouse drag events in this case may differ from the actual mouse position:</source>
          <target state="translated">&lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; 이벤트는 마우스 버튼을 놓을 때까지 마우스 버튼을 눌렀 던 &lt;code&gt;Component&lt;/code&gt; 에 전달됩니다 (마우스 위치가 &lt;code&gt;Component&lt;/code&gt; 경계 내에 있는지 여부에 관계없이 ). 플랫폼에 따라 달라지는 Drag &amp;amp; Drop 구현으로 인해 &lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; 이벤트는 기본 Drag &amp;amp; Drop 작업 중에 전달되지 않을 수 있습니다. 다중 화면 환경에서 마우스 드래그 이벤트는 마우스 위치가 해당 &lt;code&gt;Component&lt;/code&gt; 와 관련된 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 경계를 벗어난 경우에도 &lt;code&gt;Component&lt;/code&gt; 에 전달됩니다 . 그러나이 경우 마우스 끌기 이벤트에 대해보고 된 위치는 실제 마우스 위치와 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24d1182915192717959f1a97d1cb1c6b57d86b39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Map&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Map&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff63702eaeb0fd043018a7488668a3494a4523b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MarshalledObject&lt;/code&gt; facilitates passing objects in RMI calls that are not automatically deserialized immediately by the remote peer.</source>
          <target state="translated">&lt;code&gt;MarshalledObject&lt;/code&gt; 는 원격 피어에 의해 즉시 자동으로 역 직렬화되지 않는 RMI 호출에서 개체를 전달하는 것을 용이하게합니다.</target>
        </trans-unit>
        <trans-unit id="0fb6dd037a96250c328c8d92ced4aeb04bf7b380" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaskFormatter&lt;/code&gt; is used to format and edit strings.</source>
          <target state="translated">&lt;code&gt;MaskFormatter&lt;/code&gt; 는 문자열을 형식화하고 편집하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4b44d2f2c495f04c3c1f363e40a7a654ebda789e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaskFormatter&lt;/code&gt; is used to format and edit strings. The behavior of a &lt;code&gt;MaskFormatter&lt;/code&gt; is controlled by way of a String mask that specifies the valid characters that can be contained at a particular location in the &lt;code&gt;Document&lt;/code&gt; model. The following characters can be specified:</source>
          <target state="translated">&lt;code&gt;MaskFormatter&lt;/code&gt; 는 문자열을 형식화하고 편집하는 데 사용됩니다. &lt;code&gt;MaskFormatter&lt;/code&gt; 의 동작은 &lt;code&gt;Document&lt;/code&gt; 모델 의 특정 위치에 포함될 수있는 유효한 문자를 지정하는 문자열 마스크를 통해 제어됩니다 . 다음 문자를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56346b54ddc05b5bad96363388a06e5337fb8a1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MediaSize&lt;/code&gt; is not yet used to specify media. Its current role is as a mapping for named media (see &lt;a href=&quot;mediasizename&quot;&gt;&lt;code&gt;MediaSizeName&lt;/code&gt;&lt;/a&gt;). Clients can use the mapping method &lt;code&gt;MediaSize.getMediaSizeForName(MediaSizeName)&lt;/code&gt; to find the physical dimensions of the &lt;code&gt;MediaSizeName&lt;/code&gt; instances enumerated in this API. This is useful for clients which need this information to format &amp;amp; paginate printing.</source>
          <target state="translated">&lt;code&gt;MediaSize&lt;/code&gt; 는 아직 미디어를 지정하는 데 사용되지 않습니다. 현재 역할은 명명 된 미디어에 대한 매핑입니다 ( &lt;a href=&quot;mediasizename&quot;&gt; &lt;code&gt;MediaSizeName&lt;/code&gt; &lt;/a&gt; 참조 ). 클라이언트는 매핑 메서드 &lt;code&gt;MediaSize.getMediaSizeForName(MediaSizeName)&lt;/code&gt; 을 사용 하여이 API에 열거 된 &lt;code&gt;MediaSizeName&lt;/code&gt; 인스턴스 의 물리적 크기를 찾을 수 있습니다. 이것은 인쇄를 포맷하고 페이지를 매기는 데이 정보가 필요한 클라이언트에게 유용합니다.</target>
        </trans-unit>
        <trans-unit id="6b338ba3ddb2c6a300cb5e6c334e45ac7bf2bb10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MediaSizeName&lt;/code&gt; matching these dimensions, or &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MediaSizeName&lt;/code&gt; 이 차원과 일치하는 MediaSizeName 또는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc94883fc9e07c6c8d5f85a6e3870288443c3944" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MemoryUsage&lt;/code&gt; is a &lt;em&gt;model-specific class&lt;/em&gt;. With Standard MBeans, a client of the MBean Server cannot access the &lt;code&gt;Usage&lt;/code&gt; attribute if it does not know the class &lt;code&gt;MemoryUsage&lt;/code&gt;. Suppose the client is a generic console based on JMX technology. Then the console would have to be configured with the model-specific classes of every application it might connect to. The problem is even worse for clients that are not written in the Java language. Then there may not be any way to tell the client what a &lt;code&gt;MemoryUsage&lt;/code&gt; looks like.</source>
          <target state="translated">&lt;code&gt;MemoryUsage&lt;/code&gt; 는 &lt;em&gt;모델 별 클래스&lt;/em&gt; 입니다. 표준 MBean을 사용하면 MBean 서버의 클라이언트가 &lt;code&gt;MemoryUsage&lt;/code&gt; 클래스를 모르면 &lt;code&gt;Usage&lt;/code&gt; 속성에 액세스 할 수 없습니다 . 클라이언트가 JMX 기술에 기반한 일반 콘솔이라고 가정하십시오. 그런 다음 콘솔은 연결할 수있는 모든 응용 프로그램의 모델 별 클래스로 구성해야합니다. Java 언어로 작성되지 않은 클라이언트의 경우 문제가 더욱 악화됩니다. 그러면 클라이언트에게 &lt;code&gt;MemoryUsage&lt;/code&gt; 의 모양 을 알려주는 방법이 없을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2631a6c8258f4f1c679e020fd0f7232d7ea4cdff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MemoryUsage&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; with attributes as specified in the &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;MemoryUsage&lt;/code&gt; 는 &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 속성 을 사용하여 &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; 에&lt;/a&gt; 맵핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="9e76812395aa6e5732329df1c79c4c9edb846ec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MemoryUsage&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; with attributes as specified in the &lt;a href=&quot;memoryusage#from-javax.management.openmbean.CompositeData-&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;MemoryUsage&lt;/code&gt; 는 &lt;a href=&quot;memoryusage#from-javax.management.openmbean.CompositeData-&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 속성 을 사용하여 &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; 에&lt;/a&gt; 맵핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="5b986b604d7d375068f37a30961d975d461c9911" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MessageFormat&lt;/code&gt; provides a means to produce concatenated messages in a language-neutral way.</source>
          <target state="translated">&lt;code&gt;MessageFormat&lt;/code&gt; 은 언어 중립적 인 방식으로 연결된 메시지를 생성하는 수단을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9520869e6e04c0dbfdf170a31127c8e8e4df4ea6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MessageFormat&lt;/code&gt; provides a means to produce concatenated messages in a language-neutral way. Use this to construct messages displayed for end users.</source>
          <target state="translated">&lt;code&gt;MessageFormat&lt;/code&gt; 은 언어 중립적 인 방식으로 연결된 메시지를 생성하는 수단을 제공합니다. 이를 사용하여 최종 사용자에게 표시되는 메시지를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="9ef1967fdaaeaaa97e2c583a8747c5532b6c8a68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MessageFormat&lt;/code&gt; takes a set of objects, formats them, then inserts the formatted strings into the pattern at the appropriate places.</source>
          <target state="translated">&lt;code&gt;MessageFormat&lt;/code&gt; 은 일련의 객체를 가져 와서 포맷 한 다음 형식이 지정된 문자열을 적절한 위치의 패턴에 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="c3cf391f8a99415be580806a8d0e01562d5f4047" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MessageFormat&lt;/code&gt; uses patterns of the following form:</source>
          <target state="translated">&lt;code&gt;MessageFormat&lt;/code&gt; 은 다음 형식의 패턴을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="62f430bb779d8ad3533271f4020a770ecdd52bb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MessageInfo&lt;/code&gt; instances are not safe for use by multiple concurrent threads. If a MessageInfo is to be used by more than one thread then access to the MessageInfo should be controlled by appropriate synchronization.</source>
          <target state="translated">&lt;code&gt;MessageInfo&lt;/code&gt; 인스턴스는 여러 동시 스레드에서 사용하기에 안전하지 않습니다. MessageInfo가 둘 이상의 스레드에서 사용되는 경우 MessageInfo에 대한 액세스는 적절한 동기화에 의해 제어되어야합니다.</target>
        </trans-unit>
        <trans-unit id="fee9acc35c10ee430a5974eec9c8f5a90db1abf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalLookAndFeel&lt;/code&gt; derives it's color palette and fonts from &lt;code&gt;MetalTheme&lt;/code&gt;. The default theme is &lt;code&gt;OceanTheme&lt;/code&gt;. The theme can be changed using the &lt;code&gt;setCurrentTheme&lt;/code&gt; method, refer to it for details on changing the theme. Prior to 1.5 the default theme was &lt;code&gt;DefaultMetalTheme&lt;/code&gt;. The system property &lt;code&gt;&quot;swing.metalTheme&quot;&lt;/code&gt; can be set to &lt;code&gt;&quot;steel&quot;&lt;/code&gt; to indicate the default should be &lt;code&gt;DefaultMetalTheme&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MetalLookAndFeel&lt;/code&gt; 은 &lt;code&gt;MetalTheme&lt;/code&gt; 에서 색상 팔레트와 글꼴을 가져옵니다 . 기본 테마는 &lt;code&gt;OceanTheme&lt;/code&gt; 입니다. 테마는 &lt;code&gt;setCurrentTheme&lt;/code&gt; 메소드를 사용하여 변경할 수 있습니다 . 테마 변경에 대한 자세한 내용은이를 참조하십시오. 1.5 이전의 기본 테마는 &lt;code&gt;DefaultMetalTheme&lt;/code&gt; 입니다. 시스템 속성 &lt;code&gt;&quot;swing.metalTheme&quot;&lt;/code&gt; 를 &lt;code&gt;&quot;steel&quot;&lt;/code&gt; 로 설정 하여 기본값이 &lt;code&gt;DefaultMetalTheme&lt;/code&gt; 여야 함을 나타낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2590625a9a9683e4bd7d3869bc8cf6bf18e0d5b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalLookAndFeel&lt;/code&gt; maintains the current theme that the the &lt;code&gt;ComponentUI&lt;/code&gt; implementations for metal use. Refer to &lt;a href=&quot;metallookandfeel#setCurrentTheme(javax.swing.plaf.metal.MetalTheme)&quot;&gt;&lt;code&gt;MetalLookAndFeel.setCurrentTheme(MetalTheme)&lt;/code&gt;&lt;/a&gt; for details on changing the current theme.</source>
          <target state="translated">&lt;code&gt;MetalLookAndFeel&lt;/code&gt; 은 금속 사용을위한 &lt;code&gt;ComponentUI&lt;/code&gt; 구현 이 현재 테마를 유지합니다 . 를 참조하십시오 &lt;a href=&quot;metallookandfeel#setCurrentTheme(javax.swing.plaf.metal.MetalTheme)&quot;&gt; &lt;code&gt;MetalLookAndFeel.setCurrentTheme(MetalTheme)&lt;/code&gt; &lt;/a&gt; 현재의 테마를 변경하는 방법에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="c9f53fb25fbb023dd23903d230e78d50776306de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalRootPaneUI&lt;/code&gt; provides support for the &lt;code&gt;windowDecorationStyle&lt;/code&gt; property of &lt;code&gt;JRootPane&lt;/code&gt;. &lt;code&gt;MetalRootPaneUI&lt;/code&gt; does this by way of installing a custom &lt;code&gt;LayoutManager&lt;/code&gt;, a private &lt;code&gt;Component&lt;/code&gt; to render the appropriate widgets, and a private &lt;code&gt;Border&lt;/code&gt;. The &lt;code&gt;LayoutManager&lt;/code&gt; is always installed, regardless of the value of the &lt;code&gt;windowDecorationStyle&lt;/code&gt; property, but the &lt;code&gt;Border&lt;/code&gt; and &lt;code&gt;Component&lt;/code&gt; are only installed/added if the &lt;code&gt;windowDecorationStyle&lt;/code&gt; is other than &lt;code&gt;JRootPane.NONE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MetalRootPaneUI&lt;/code&gt; 는 &lt;code&gt;JRootPane&lt;/code&gt; 의 &lt;code&gt;windowDecorationStyle&lt;/code&gt; 속성에 대한 지원을 제공합니다 . &lt;code&gt;MetalRootPaneUI&lt;/code&gt; 는 사용자 정의 &lt;code&gt;LayoutManager&lt;/code&gt; , 적절한 위젯을 렌더링 하는 개인 &lt;code&gt;Component&lt;/code&gt; 및 개인 &lt;code&gt;Border&lt;/code&gt; 를 설치하여이를 수행 합니다. &lt;code&gt;LayoutManager&lt;/code&gt; 관계없이 항상의 값에 설치되어 &lt;code&gt;windowDecorationStyle&lt;/code&gt; 의 특성,하지만 &lt;code&gt;Border&lt;/code&gt; 및 &lt;code&gt;Component&lt;/code&gt; 경우에만 설치 / 추가 &lt;code&gt;windowDecorationStyle&lt;/code&gt; 이 이외 &lt;code&gt;JRootPane.NONE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d68288751909ed7d5ecee1048c477e01e2dad650" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalTheme&lt;/code&gt; is abstract, see &lt;code&gt;DefaultMetalTheme&lt;/code&gt; and &lt;code&gt;OceanTheme&lt;/code&gt; for concrete implementations.</source>
          <target state="translated">&lt;code&gt;MetalTheme&lt;/code&gt; 는 추상 입니다. 구체적인 구현 은 &lt;code&gt;DefaultMetalTheme&lt;/code&gt; 및 &lt;code&gt;OceanTheme&lt;/code&gt; 를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="9fff4e537b4a9182e7eb89277f216c1273922a9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalTheme&lt;/code&gt; provides a number of public methods for getting colors. These methods are implemented in terms of a handful of protected abstract methods. A subclass need only override the protected abstract methods (&lt;code&gt;getPrimary1&lt;/code&gt;, &lt;code&gt;getPrimary2&lt;/code&gt;, &lt;code&gt;getPrimary3&lt;/code&gt;, &lt;code&gt;getSecondary1&lt;/code&gt;, &lt;code&gt;getSecondary2&lt;/code&gt;, and &lt;code&gt;getSecondary3&lt;/code&gt;); although a subclass may override the other public methods for more control over the set of colors that are used.</source>
          <target state="translated">&lt;code&gt;MetalTheme&lt;/code&gt; 는 색상을 얻기위한 다양한 공개 방법을 제공합니다. 이러한 메서드는 보호 된 추상 메서드의 측면에서 구현됩니다. 서브 클래스는 보호 된 추상 메서드 ( &lt;code&gt;getPrimary1&lt;/code&gt; , &lt;code&gt;getPrimary2&lt;/code&gt; , &lt;code&gt;getPrimary3&lt;/code&gt; , &lt;code&gt;getSecondary1&lt;/code&gt; , &lt;code&gt;getSecondary2&lt;/code&gt; 및 &lt;code&gt;getSecondary3&lt;/code&gt; ) 만 재정의하면됩니다 . 사용되는 색상 세트를 더 잘 제어하기 위해 하위 클래스가 다른 공용 메서드를 재정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="39c5f184c133a129c1d46365a4a2cd94174db342" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalTheme&lt;/code&gt; provides the color palette and fonts used by the Java Look and Feel.</source>
          <target state="translated">&lt;code&gt;MetalTheme&lt;/code&gt; 는 Java Look and Feel에서 사용하는 색상 팔레트와 글꼴을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7912e8cfe14ca9cd1892901356cff75ec9a881d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalTreeUI&lt;/code&gt; allows for configuring how to visually render the spacing and delineation between nodes. The following hints are supported:</source>
          <target state="translated">&lt;code&gt;MetalTreeUI&lt;/code&gt; 를 사용하면 노드 간의 간격과 묘사를 시각적으로 렌더링하는 방법을 구성 할 수 있습니다. 다음 힌트가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="fee985ebf8d9c77eee32e04d50e8622204fbaa23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MethodSnippet&lt;/code&gt; is immutable: an access to any of its methods will always return the same result. and thus is thread-safe.</source>
          <target state="translated">&lt;code&gt;MethodSnippet&lt;/code&gt; 은 변경할 수 없습니다. 해당 메서드에 대한 액세스는 항상 동일한 결과를 반환합니다. 따라서 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="1ad9f5aeb9a85beb3ae2195036e7be21db838e0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MethodType&lt;/code&gt; objects are sometimes derived from bytecode instructions such as &lt;code&gt;invokedynamic&lt;/code&gt;, specifically from the type descriptor strings associated with the instructions in a class file's constant pool.</source>
          <target state="translated">&lt;code&gt;MethodType&lt;/code&gt; 객체는 때때로 &lt;code&gt;invokedynamic&lt;/code&gt; 과 같은 바이트 코드 명령어 , 특히 클래스 파일의 상수 풀에있는 명령어와 관련된 형식 설명자 문자열에서 파생됩니다 .</target>
        </trans-unit>
        <trans-unit id="e7eb915d538d5617b4efd4c2d02820c4afb3fcdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiDevice&lt;/code&gt; is the base interface for all MIDI devices.</source>
          <target state="translated">&lt;code&gt;MidiDevice&lt;/code&gt; 는 모든 MIDI 장치의 기본 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="26fe6a8452f631ee24f8b497f415179f3fdfa388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiDevice&lt;/code&gt; is the base interface for all MIDI devices. Common devices include synthesizers, sequencers, MIDI input ports, and MIDI output ports.</source>
          <target state="translated">&lt;code&gt;MidiDevice&lt;/code&gt; 는 모든 MIDI 장치의 기본 인터페이스입니다. 일반적인 장치로는 신디사이저, 시퀀서, MIDI 입력 포트 및 MIDI 출력 포트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="405225ae64a16ff62ec079f1d60dce0ec42e6f47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiDeviceReceiver&lt;/code&gt; is a &lt;code&gt;Receiver&lt;/code&gt; which represents a MIDI input connector of a &lt;code&gt;MidiDevice&lt;/code&gt; (see &lt;a href=&quot;mididevice#getReceiver()&quot;&gt;&lt;code&gt;MidiDevice.getReceiver()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;MidiDeviceReceiver&lt;/code&gt; 는 A는 &lt;code&gt;Receiver&lt;/code&gt; (A)의 MIDI 입력 커넥터 나타내는 &lt;code&gt;MidiDevice&lt;/code&gt; 에가 (참조 &lt;a href=&quot;mididevice#getReceiver()&quot;&gt; &lt;code&gt;MidiDevice.getReceiver()&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0d8560ce74ba97d352f2e900a13909e682085f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiDeviceReceiver&lt;/code&gt; is a &lt;code&gt;Receiver&lt;/code&gt; which represents a MIDI input connector of a &lt;code&gt;MidiDevice&lt;/code&gt; (see &lt;a href=&quot;mididevice#getReceiver--&quot;&gt;&lt;code&gt;MidiDevice.getReceiver()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;MidiDeviceReceiver&lt;/code&gt; 는 A는 &lt;code&gt;Receiver&lt;/code&gt; (A)의 MIDI 입력 커넥터 나타내는 &lt;code&gt;MidiDevice&lt;/code&gt; 에가 (참조 &lt;a href=&quot;mididevice#getReceiver--&quot;&gt; &lt;code&gt;MidiDevice.getReceiver()&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a7b6cd9103cfaed812877522dcfcfc8fdfab0369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; is a &lt;code&gt;Transmitter&lt;/code&gt; which represents a MIDI input connector of a &lt;code&gt;MidiDevice&lt;/code&gt; (see &lt;a href=&quot;mididevice#getTransmitter()&quot;&gt;&lt;code&gt;MidiDevice.getTransmitter()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; 는 A는 &lt;code&gt;Transmitter&lt;/code&gt; (A)의 MIDI 입력 커넥터 나타내는 &lt;code&gt;MidiDevice&lt;/code&gt; 에가 (참조 &lt;a href=&quot;mididevice#getTransmitter()&quot;&gt; &lt;code&gt;MidiDevice.getTransmitter()&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="195d91d5fc1464655aaec4aa20de063d7858bace" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; is a &lt;code&gt;Transmitter&lt;/code&gt; which represents a MIDI input connector of a &lt;code&gt;MidiDevice&lt;/code&gt; (see &lt;a href=&quot;mididevice#getTransmitter--&quot;&gt;&lt;code&gt;MidiDevice.getTransmitter()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; 는 A는 &lt;code&gt;Transmitter&lt;/code&gt; (A)의 MIDI 입력 커넥터 나타내는 &lt;code&gt;MidiDevice&lt;/code&gt; 에가 (참조 &lt;a href=&quot;mididevice#getTransmitter--&quot;&gt; &lt;code&gt;MidiDevice.getTransmitter()&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b2039df56725431a9a6773410c88c9c90a3f9da5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiMessage&lt;/code&gt; includes methods to get, but not set, these values. Setting them is a subclass responsibility.</source>
          <target state="translated">&lt;code&gt;MidiMessage&lt;/code&gt; 에는 이러한 값을 가져 오지만 설정하지 않는 메소드가 포함되어 있습니다. 그것들을 설정하는 것은 서브 클래스 책임입니다.</target>
        </trans-unit>
        <trans-unit id="ed042f848775afd38fb16b7ed17b1f10e0c7a1c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiMessage&lt;/code&gt; is the base class for MIDI messages.</source>
          <target state="translated">&lt;code&gt;MidiMessage&lt;/code&gt; 는 MIDI 메시지의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="c08ba538afce075697225999b176a47b8db644a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiMessage&lt;/code&gt; is the base class for MIDI messages. They include not only the standard MIDI messages that a synthesizer can respond to, but also &quot;meta-events&quot; that can be used by sequencer programs. There are meta-events for such information as lyrics, copyrights, tempo indications, time and key signatures, markers, etc. For more information, see the Standard MIDI Files 1.0 specification, which is part of the Complete MIDI 1.0 Detailed Specification published by the MIDI Manufacturer's Association (&lt;a href=&quot;http://www.midi.org&quot;&gt;http://www.midi.org&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;MidiMessage&lt;/code&gt; 는 MIDI 메시지의 기본 클래스입니다. 여기에는 신디사이저가 응답 할 수있는 표준 MIDI 메시지뿐만 아니라 시퀀서 프로그램에서 사용할 수있는 &quot;메타 이벤트&quot;도 포함됩니다. 가사, 저작권, 템포 표시, 시간 및 키 서명, 마커 등의 정보에 대한 메타 이벤트가 있습니다. 자세한 내용은 표준 MIDI 파일 1.0 사양을 참조하십시오. MIDI 제조업체 협회 ( &lt;a href=&quot;http://www.midi.org&quot;&gt;http://www.midi.org&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="86298ca308c9018cb4234698f85245e854878994" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MinguoEra&lt;/code&gt; is an enum representing the Minguo eras of BEFORE_ROC/ROC. This factory allows the enum to be obtained from the &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;MinguoEra&lt;/code&gt; 는 BEFORE_ROC / ROC의 Minguo 시대를 나타내는 열거 형입니다. 이 팩토리는, 열거 치를 &lt;code&gt;int&lt;/code&gt; 치 로부터 취득 할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="47b2c431155112d67b907341379ef8ea9df308bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModelWrapper&lt;/code&gt; makes a distinction between values as &lt;code&gt;Object&lt;/code&gt;s and &lt;code&gt;String&lt;/code&gt;s. This allows implementations to provide a custom string converter to be used instead of invoking &lt;code&gt;toString&lt;/code&gt; on the object.</source>
          <target state="translated">&lt;code&gt;ModelWrapper&lt;/code&gt; 는 값을 &lt;code&gt;Object&lt;/code&gt; 및 &lt;code&gt;String&lt;/code&gt; 으로 구분합니다 . 이를 통해 구현시 개체에서 &lt;code&gt;toString&lt;/code&gt; 을 호출하는 대신 사용할 사용자 지정 문자열 변환기를 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a17cad9396d74724601a9916024400e728758ca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModuleDescriptor&lt;/code&gt; defines the &lt;a href=&quot;moduledescriptor#newModule(java.lang.String,java.util.Set)&quot;&gt;&lt;code&gt;newModule&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;moduledescriptor#newOpenModule(java.lang.String)&quot;&gt;&lt;code&gt;newOpenModule&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;moduledescriptor#newAutomaticModule(java.lang.String)&quot;&gt;&lt;code&gt;newAutomaticModule&lt;/code&gt;&lt;/a&gt; methods to create builders for building &lt;em&gt;normal&lt;/em&gt;, open, and automatic modules.</source>
          <target state="translated">&lt;code&gt;ModuleDescriptor&lt;/code&gt; 는 정의 &lt;a href=&quot;moduledescriptor#newModule(java.lang.String,java.util.Set)&quot;&gt; &lt;code&gt;newModule&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;moduledescriptor#newOpenModule(java.lang.String)&quot;&gt; &lt;code&gt;newOpenModule&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;moduledescriptor#newAutomaticModule(java.lang.String)&quot;&gt; &lt;code&gt;newAutomaticModule&lt;/code&gt; 의&lt;/a&gt; 구축 빌더를 만들 수있는 방법 &lt;em&gt;정상&lt;/em&gt; 개방, 자동 모듈.</target>
        </trans-unit>
        <trans-unit id="aa9f4b530f678df9fcc1a1769e9e4474daf7622e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModuleDescriptor&lt;/code&gt; objects are immutable and safe for use by multiple concurrent threads.</source>
          <target state="translated">&lt;code&gt;ModuleDescriptor&lt;/code&gt; 객체는 여러 동시 스레드에서 사용하기에 불변하고 안전합니다.</target>
        </trans-unit>
        <trans-unit id="96ca82ac6d53abce80dada33b416776e964cc71f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonitorInfo&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; with attributes as specified in the &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;MonitorInfo&lt;/code&gt; 는 &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 속성 을 사용하여 &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; 에&lt;/a&gt; 맵핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="a8cdb01369e01f3dedba8852c7b75c937295ece3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonitorInfo&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; with attributes as specified in the &lt;a href=&quot;monitorinfo#from-javax.management.openmbean.CompositeData-&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;MonitorInfo&lt;/code&gt; 는 &lt;a href=&quot;monitorinfo#from-javax.management.openmbean.CompositeData-&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 속성 을 가진 &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; 에&lt;/a&gt; 맵핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="ebcf84a871263b6dbd5e43fbf162230b7727e862" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Month&lt;/code&gt; is an enum representing the 12 months of the year - January, February, March, April, May, June, July, August, September, October, November and December.</source>
          <target state="translated">&lt;code&gt;Month&lt;/code&gt; 은 1 월, 2 월, 3 월, 4 월, 5 월, 6 월, 7 월, 8 월, 9 월, 10 월, 11 월 및 12 월의 12 개월을 나타내는 열거 형입니다.</target>
        </trans-unit>
        <trans-unit id="57f29d4394ab40d0a748fd0e494f79c61d2e354c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Month&lt;/code&gt; is an enum representing the 12 months of the year. This factory allows the enum to be obtained from the &lt;code&gt;int&lt;/code&gt; value. The &lt;code&gt;int&lt;/code&gt; value follows the ISO-8601 standard, from 1 (January) to 12 (December).</source>
          <target state="translated">&lt;code&gt;Month&lt;/code&gt; 는 해당 연도의 12 개월을 나타내는 열거 형입니다. 이 팩토리는, 열거 치를 &lt;code&gt;int&lt;/code&gt; 치 로부터 취득 할 수 있도록합니다 . &lt;code&gt;int&lt;/code&gt; 값은 12 (12 월) 1 (년 1 월)에서 ISO-8601 표준을 따른다.</target>
        </trans-unit>
        <trans-unit id="e52c26c31ad3e0d356c866a23a748fc1098c94d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Month&lt;/code&gt; returns &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Month&lt;/code&gt; 은 &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="67bee7fd3d103a4c688f71811bd554f2d17ea0f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Month&lt;/code&gt; returns &lt;code&gt;MONTHS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Month&lt;/code&gt; 은 &lt;code&gt;MONTHS&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b7f2e0af6d8b9f20cff50fa4bdd489195f53fbf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Month&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;Month&lt;/code&gt; 은 null을 반환</target>
        </trans-unit>
        <trans-unit id="4dc683f0bfc8790b020b9839b52b55382b5fe41a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonthDay&lt;/code&gt; is an immutable date-time object that represents the combination of a month and day-of-month. Any field that can be derived from a month and day, such as quarter-of-year, can be obtained.</source>
          <target state="translated">&lt;code&gt;MonthDay&lt;/code&gt; 는 변경 불가능한 날짜-시간 객체로 월과 일의 조합을 나타냅니다. 분기와 같이 월과 일에서 파생 될 수있는 모든 필드를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd469d958e54ff45b0e6f662d91e1d7d60507ee3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonthDay&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;MonthDay&lt;/code&gt; 는 null을 반환</target>
        </trans-unit>
        <trans-unit id="51421d3c0b56c0062b370587258d51af7289349b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonthDay&lt;/code&gt; returns null (does not represent a complete date or time)</source>
          <target state="translated">&lt;code&gt;MonthDay&lt;/code&gt; 는 null을 반환합니다 (완전한 날짜 또는 시간을 나타내지 않음)</target>
        </trans-unit>
        <trans-unit id="7e104804f5763e262284dd8a1601b5e7fac5b571" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonthDay&lt;/code&gt; returns null &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MonthDay&lt;/code&gt; null를 돌려줍니다 &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt; 을</target>
        </trans-unit>
        <trans-unit id="4e934c2578f4b6a829793be8efc1665460fa70f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonthDay&lt;/code&gt;, the combination of month-of-year and day-of-month, does not implement this interface. While the combination is contiguous, from days to months within years, the combination does not have sufficient information to define the valid range of values for day-of-month. As such, it is unable to implement plus/minus correctly.</source>
          <target state="translated">&lt;code&gt;MonthDay&lt;/code&gt; 년과 월의 조합 인 MonthDay 는이 인터페이스를 구현하지 않습니다. 조합이 연속되어 있지만 수년 내에 며칠에서 몇 달까지 지속되지만이 조합에는 유효한 월 값 범위를 정의하기에 충분한 정보가 없습니다. 따라서 플러스 / 마이너스를 올바르게 구현할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="99160db0e1f9f9e289d7b5e412bf5baa2ddb6d63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MouseInfo&lt;/code&gt; provides methods for getting information about the mouse, such as mouse pointer location and the number of mouse buttons.</source>
          <target state="translated">&lt;code&gt;MouseInfo&lt;/code&gt; 는 마우스 포인터 위치 및 마우스 단추 수와 같은 마우스에 대한 정보를 가져 오는 메서드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0dc0c531a21fa5d0fa52b7d7a7d9d5a421e4788e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MouseInputListener&lt;/code&gt; that are attached to the &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MouseInputListener&lt;/code&gt; &lt;code&gt;JTable&lt;/code&gt; 에 첨부 된 MouseInputListener .</target>
        </trans-unit>
        <trans-unit id="87e0ad612e015f3114d0402d4efd42c36b02c394" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MouseInputListener&lt;/code&gt; that attached to &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MouseInputListener&lt;/code&gt; &lt;code&gt;JList&lt;/code&gt; 에 첨부 된 MouseInputListener .</target>
        </trans-unit>
        <trans-unit id="3e8054e67a87654d667d8f32ebad101271b80481" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NAME = &lt;/code&gt;&lt;var&gt;mbeanname&lt;/var&gt;</source>
          <target state="translated">&lt;code&gt;NAME = &lt;/code&gt; &lt;var&gt;mbeanname&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="9da2bf96c6148955e43c58216af629bfaa07941d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANOS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of nanoseconds added. This is equivalent to &lt;a href=&quot;instant#plusNanos-long-&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NANOS&lt;/code&gt; - 지정된 나노초 수가 추가 된 &lt;code&gt;Instant&lt;/code&gt; 을 반환합니다 . 이것은 &lt;a href=&quot;instant#plusNanos-long-&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="5858ed006b01eb0219b0446df2fcc10aa97be73a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANOS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of nanoseconds added. This is equivalent to &lt;a href=&quot;#plusNanos(long)&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NANOS&lt;/code&gt; - 지정된 수의 나노초가 추가 된 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 &lt;a href=&quot;#plusNanos(long)&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="1a99ec50942f14620b5e3d876b47d131754b8621" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANOS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of nanoseconds added. This is equivalent to &lt;a href=&quot;localtime#plusNanos-long-&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NANOS&lt;/code&gt; - 지정된 나노초 수가 추가 된 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 &lt;a href=&quot;localtime#plusNanos-long-&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="14d3b699722a37162938678071b56c793fc5e1ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANOS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of nanoseconds added. This is equivalent to &lt;a href=&quot;#plusNanos(long)&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NANOS&lt;/code&gt; - 지정된 수의 나노초가 추가 된 &lt;code&gt;Instant&lt;/code&gt; 를 반환합니다 . 이것은 &lt;a href=&quot;#plusNanos(long)&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="6b52dc6ae65e63be82bb97fb2aeb5af28e442768" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANO_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified nano-of-day. This completely replaces the time and is equivalent to &lt;a href=&quot;#ofNanoOfDay(long)&quot;&gt;&lt;code&gt;ofNanoOfDay(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NANO_OF_DAY&lt;/code&gt; - 지정된 나노 하루 의 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 시간을 완전히 대체하며 &lt;a href=&quot;#ofNanoOfDay(long)&quot;&gt; &lt;code&gt;ofNanoOfDay(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="8b36aeb5ce4c969166cfb457a07417d59d8803a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANO_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified nano-of-day. This completely replaces the time and is equivalent to &lt;a href=&quot;localtime#ofNanoOfDay-long-&quot;&gt;&lt;code&gt;ofNanoOfDay(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NANO_OF_DAY&lt;/code&gt; - 지정된 나노 일로 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 시간을 완전히 대체하며 &lt;a href=&quot;localtime#ofNanoOfDay-long-&quot;&gt; &lt;code&gt;ofNanoOfDay(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="6eeececab1f16b8c765bd9831190626e99ccb087" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANO_OF_SECOND&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified nano-of-second. The hour, minute and second will be unchanged.</source>
          <target state="translated">&lt;code&gt;NANO_OF_SECOND&lt;/code&gt; - 지정된 나노초로 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 시, 분 및 초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="68d2ccd536d498cc08e835b63acc425d64d3df07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANO_OF_SECOND&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified nano-of-second. The epoch-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;NANO_OF_SECOND&lt;/code&gt; - 지정된 초 단위의 &lt;code&gt;Instant&lt;/code&gt; 을 반환합니다 . 에포크 초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e30462139c3babdfb78ca3dcb7434a96cc974e37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NClob&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;NCLOB&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NClob&lt;/code&gt; 인터페이스-SQL &lt;code&gt;NCLOB&lt;/code&gt; 매핑</target>
        </trans-unit>
        <trans-unit id="69b56c115b67ab432819f031e752a8eecbc86383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NEVER_UPDATE&lt;/code&gt;: the caret stays at the same absolute position in the document regardless of any document updates, except when document length becomes less than the current caret position due to removal. In that case caret position is adjusted to the end of the document. The caret doesn't try to keep itself visible by scrolling the associated view when using this policy.</source>
          <target state="translated">&lt;code&gt;NEVER_UPDATE&lt;/code&gt; : 제거로 인해 문서 길이가 현재 캐럿 위치보다 작아지는 경우를 제외하고 캐럿은 문서 업데이트에 관계없이 문서에서 동일한 절대 위치에 유지됩니다. 이 경우 캐럿 위치는 문서의 끝으로 조정됩니다. 캐럿은이 정책을 사용할 때 연결된보기를 스크롤하여 자신을 계속 표시하려고하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c903da937c120083927738d07d2688b708396156" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NOBUTTON&lt;/code&gt;, &lt;code&gt;BUTTON1&lt;/code&gt;, &lt;code&gt;BUTTON2&lt;/code&gt; or &lt;code&gt;BUTTON3&lt;/code&gt; if support for the extended mouse buttons is &lt;a href=&quot;../toolkit#areExtraMouseButtonsEnabled()&quot;&gt;&lt;code&gt;disabled&lt;/code&gt;&lt;/a&gt; by Java</source>
          <target state="translated">&lt;code&gt;NOBUTTON&lt;/code&gt; , &lt;code&gt;BUTTON1&lt;/code&gt; , &lt;code&gt;BUTTON2&lt;/code&gt; 또는 &lt;code&gt;BUTTON3&lt;/code&gt; ( Java 에서 확장 마우스 단추 지원을 &lt;a href=&quot;../toolkit#areExtraMouseButtonsEnabled()&quot;&gt; &lt;code&gt;disabled&lt;/code&gt; &lt;/a&gt; 한 경우)</target>
        </trans-unit>
        <trans-unit id="9e7151d6f3ed327dc35788c5d098e3052166b620" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NONE&lt;/code&gt;: Do not resize the component.</source>
          <target state="translated">&lt;code&gt;NONE&lt;/code&gt; : 구성 요소의 크기를 조정하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4c565387ab34ab593403d5a537bfca5e1bcf6269" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NULL_ATTRIBUTE_VALUE&lt;/code&gt; used in cases where the value for the attribute has not been specified.</source>
          <target state="translated">&lt;code&gt;NULL_ATTRIBUTE_VALUE&lt;/code&gt; 속성 값이 지정되지 않은 경우 NULL_ATTRIBUTE_VALUE가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2e09080dfbf2deb2898bf93fa2eab4796a224515" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; - the string representing &quot;not a number&quot;</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; - &quot;숫자가 아님&quot;을 나타내는 문자열</target>
        </trans-unit>
        <trans-unit id="c34288688d4e817ea265514b818f564a79442b14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; is formatted as a string, which typically has a single character &lt;code&gt;&amp;amp;#92;uFFFD&lt;/code&gt;. This string is determined by the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object. This is the only value for which the prefixes and suffixes are not used.</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; 은 일반적으로 단일 문자 &lt;code&gt;&amp;amp;#92;uFFFD&lt;/code&gt; 가있는 문자열로 형식이 지정됩니다 . 이 문자열은 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; 개체에 의해 결정됩니다 . 접두사와 접미사가 사용되지 않는 유일한 값입니다.</target>
        </trans-unit>
        <trans-unit id="f7923f945b5badac0adc7bdb118b9bc4f6ac0493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; is formatted as a string, which typically has a single character &lt;code&gt;\uFFFD&lt;/code&gt;. This string is determined by the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object. This is the only value for which the prefixes and suffixes are not used.</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; 은 문자열로 형식화되며 일반적으로 단일 문자 &lt;code&gt;\uFFFD&lt;/code&gt; 있습니다. 이 문자열은 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; 객체에 의해 결정됩니다 . 접두사와 접미사가 사용되지 않는 유일한 값입니다.</target>
        </trans-unit>
        <trans-unit id="1a6a7aeb0a2894d956910a6b4911723daf4d8dfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Class-Path&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Class-Path&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="101a7a108e633b6b4fbb89dfc51d8da27aa902fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Class-Path&lt;/code&gt; manifest attribute. Bundled extensions can use this attribute to find other JAR files containing needed classes.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Class-Path&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 . 번들 확장은이 속성을 사용하여 필요한 클래스가 포함 된 다른 JAR 파일을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6654cd7280ebd2d5dfce0c0318300e21d0609a9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Content-Type&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Content-Type&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="95da2853ab970bd4edb49bc10c8dfdf3c2f477c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-Installation&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Extension-Installation&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="d87e841ebb45a7150d76ed1a2f28074f3bb82330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-List&lt;/code&gt; manifest attribute used for declaring dependencies on installed extensions.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 설치된 확장에 대한 종속성을 선언하는 데 사용되는 &lt;code&gt;Extension-List&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="9e14cb2ea87b1d044e05d03e887dd9e68e3652e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-List&lt;/code&gt; manifest attribute used for the extension mechanism that is no longer supported.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 더 이상 지원되지 않는 확장 메커니즘에 사용되는 &lt;code&gt;Extension-List&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="76d242a455b81a66698a1a596505593f54d5e39c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-Name&lt;/code&gt; manifest attribute used for declaring dependencies on installed extensions.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 설치된 확장에 대한 종속성을 선언하는 데 사용되는 &lt;code&gt;Extension-Name&lt;/code&gt; 매니페스트 속성의 Name 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="826f19171430ac572058166d84a99f493236e347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-Name&lt;/code&gt; manifest attribute used for the extension mechanism that is no longer supported.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 더 이상 지원되지 않는 확장 메커니즘에 사용되는 &lt;code&gt;Extension-Name&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="aae384968af91d1d14b71db2e96a5823478da8fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-Name&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Extension-Name&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="2c860d78e955b5b599147931d72161aa3e0a42cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-Name&lt;/code&gt; manifest attribute. used for the extension mechanism that is no longer supported.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Extension-Name&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 . 더 이상 지원되지 않는 확장 메커니즘에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="29b5b898d03b4b9e75bb44bfc0199efec1907a15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-Title&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 패키지 버전 관리에 사용되는 &lt;code&gt;Implementation-Title&lt;/code&gt; Manifest 속성의 Name 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="054f9ef5fdf2f394e4fab7fdb7bcadaaea1a4c92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-URL&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 패키지 버전 관리에 사용되는 &lt;code&gt;Implementation-URL&lt;/code&gt; manifest 속성의 Name 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="eff2ee3407a5d95b509418d9ca1bcac096fa166e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-URL&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Implementation-URL&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="820f281ef9969d6bb50289f79c4e8e7f9c5d4f10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-Vendor-Id&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 패키지 버전 관리에 사용되는 &lt;code&gt;Implementation-Vendor-Id&lt;/code&gt; Manifest 속성의 Name 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="9ec931851cbced412f5ce4e6169a92e1cf4a984f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-Vendor-Id&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Implementation-Vendor-Id&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="4bb43e73882adede71fb8e848ce659cbc9a2fd42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-Vendor&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 패키지 버전 관리에 사용되는 &lt;code&gt;Implementation-Vendor&lt;/code&gt; 매니페스트 속성의 Name 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="fae56761a20760d61939eb3fbeeb84150b351012" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-Version&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 패키지 버전 관리에 사용되는 &lt;code&gt;Implementation-Version&lt;/code&gt; Manifest 속성의 Name 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="239d226962d8f7fb63db0d86f7228fa6cb341b1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Main-Class&lt;/code&gt; manifest attribute used for launching applications packaged in JAR files.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; JAR 파일에 패키지 된 응용 프로그램을 시작하는 데 사용되는 &lt;code&gt;Main-Class&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="24366770dc570f2f5b633058a6838f0a271637dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Main-Class&lt;/code&gt; manifest attribute used for launching applications packaged in JAR files. The &lt;code&gt;Main-Class&lt;/code&gt; attribute is used in conjunction with the &lt;code&gt;-jar&lt;/code&gt; command-line option of the &lt;code&gt;java&lt;/code&gt; application launcher.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; JAR 파일에 패키지 된 응용 프로그램을 시작하는 데 사용되는 &lt;code&gt;Main-Class&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 . &lt;code&gt;Main-Class&lt;/code&gt; 속성은 함께 사용됩니다 &lt;code&gt;-jar&lt;/code&gt; 의 명령 줄 옵션 &lt;code&gt;java&lt;/code&gt; 응용 프로그램 실행기.</target>
        </trans-unit>
        <trans-unit id="0c93e12f9a6889a1277855927439bed82251ac5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Manifest-Version&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Manifest-Version&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="6f05b54a28cd813420114981c64ba24f38fa58a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Manifest-Version&lt;/code&gt; manifest attribute. This attribute indicates the version number of the manifest standard to which a JAR file's manifest conforms.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Manifest-Version&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 . 이 속성은 JAR 파일의 매니페스트가 준수하는 매니페스트 표준의 버전 번호를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ce7b67d87efd00f4bf99d32f8dbc323187fd9dfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Multi-Release&lt;/code&gt; manifest attribute that indicates this is a multi-release JAR file.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 다중 릴리스 JAR 파일임을 나타내는 &lt;code&gt;Multi-Release&lt;/code&gt; 매니페스트 속성의 이름 오브젝트입니다 .</target>
        </trans-unit>
        <trans-unit id="233db5a58c168cde66546f727e09a2541aa09a72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Sealed&lt;/code&gt; manifest attribute used for sealing.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Sealed&lt;/code&gt; 사용 된 봉인 된 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="291017efe44c9301310dc04279e049aec72a7d7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Signature-Version&lt;/code&gt; manifest attribute used when signing JAR files.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; JAR 파일을 서명 할 때 사용되는 서명 &lt;code&gt;Signature-Version&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="36432e9123ad8d3d1de130d3d0e733bfaf7bd710" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Specification-Title&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 패키지 버전 관리에 사용되는 &lt;code&gt;Specification-Title&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="3a9f39386bfa7266d984f41d525adebcd04511d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Specification-Vendor&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 패키지 버전 관리에 사용되는 &lt;code&gt;Specification-Vendor&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="0e09f828f9a6428b437c6fa59632c64ff7b0d393" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Specification-Version&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 패키지 버전 관리에 사용되는 &lt;code&gt;Specification-Version&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="1dc0371053a1f0434316d53a3d60058cd0b5afac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NamedNodeMap&lt;/code&gt; objects in the DOM are live.</source>
          <target state="translated">&lt;code&gt;NamedNodeMap&lt;/code&gt; DOM의 NamedNodeMap 객체는 라이브입니다.</target>
        </trans-unit>
        <trans-unit id="17cd49e3414bb9cba7a7c1cd9d63e5333e1184ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NamingEvent&lt;/code&gt; represents an event that occurs in a naming or directory service. There are two categories of naming events:</source>
          <target state="translated">&lt;code&gt;NamingEvent&lt;/code&gt; 는 이름 지정 또는 디렉토리 서비스에서 발생하는 이벤트를 나타냅니다. 명명 이벤트에는 두 가지 범주가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1db2f5e519e46461d928a970d7c295fab04e8930" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NamingManager.getObjectInstance()&lt;/code&gt; successively loads in object factories and invokes this method on them until one produces a non-null answer. When an exception is thrown by an object factory, the exception is passed on to the caller of &lt;code&gt;NamingManager.getObjectInstance()&lt;/code&gt; (and no search is made for other factories that may produce a non-null answer). An object factory should only throw an exception if it is sure that it is the only intended factory and that no other object factories should be tried. If this factory cannot create an object using the arguments supplied, it should return null.</source>
          <target state="translated">&lt;code&gt;NamingManager.getObjectInstance()&lt;/code&gt; 는 객체 팩토리에 연속적으로로드되어 널이 아닌 응답을 생성 할 때까지이 메소드를 호출합니다. 객체 팩토리에서 예외가 발생하면 &lt;code&gt;NamingManager.getObjectInstance()&lt;/code&gt; 호출자에게 예외가 전달됩니다 (널이 아닌 응답을 생성 할 수있는 다른 팩토리는 검색되지 않습니다). 오브젝트 팩토리가 유일한 팩토리이고 다른 오브젝트 팩토리를 시도해서는 안되는 경우에만 오브젝트 팩토리가 예외를 처리해야합니다. 이 팩토리가 제공된 인수를 사용하여 객체를 만들 수 없으면 null을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="d64280ca1e45b694b8ae4874b022d2eee1f18d8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NamingManager.getStateToBind()&lt;/code&gt; successively loads in state factories and invokes this method on them until one produces a non-null answer. &lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt; successively loads in state factories. If a factory implements &lt;code&gt;DirStateFactory&lt;/code&gt;, then &lt;code&gt;DirectoryManager&lt;/code&gt; invokes &lt;code&gt;DirStateFactory.getStateToBind()&lt;/code&gt;; otherwise it invokes &lt;code&gt;StateFactory.getStateToBind()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NamingManager.getStateToBind()&lt;/code&gt; 는 상태 팩토리에 연속적으로로드되어 널이 아닌 응답을 생성 할 때까지이 메소드를 호출합니다. &lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt; 연속적으로로드됩니다. 공장 구현하는 경우 &lt;code&gt;DirStateFactory&lt;/code&gt; 는 다음 &lt;code&gt;DirectoryManager&lt;/code&gt; 가 호출 &lt;code&gt;DirStateFactory.getStateToBind()&lt;/code&gt; ; 그렇지 않으면 &lt;code&gt;StateFactory.getStateToBind()&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="37b7486bfec76e1ea72808e8bad65133fb5f28d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NavigationFilter&lt;/code&gt; can be used to restrict where the cursor can be positioned.</source>
          <target state="translated">&lt;code&gt;NavigationFilter&lt;/code&gt; 를 사용하여 커서를 배치 할 수있는 위치를 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ae8914d40c81648f3e49bd74d0fcd8af7daba0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NavigationFilter&lt;/code&gt; can be used to restrict where the cursor can be positioned. When the default cursor positioning actions attempt to reposition the cursor they will call into the &lt;code&gt;NavigationFilter&lt;/code&gt;, assuming the &lt;code&gt;JTextComponent&lt;/code&gt; has a non-null &lt;code&gt;NavigationFilter&lt;/code&gt; set. In this manner the &lt;code&gt;NavigationFilter&lt;/code&gt; can effectively restrict where the cursor can be positioned. Similarly &lt;code&gt;DefaultCaret&lt;/code&gt; will call into the &lt;code&gt;NavigationFilter&lt;/code&gt; when the user is changing the selection to further restrict where the cursor can be positioned.</source>
          <target state="translated">&lt;code&gt;NavigationFilter&lt;/code&gt; 를 사용하여 커서를 배치 할 수있는 위치를 제한 할 수 있습니다. 기본 커서 위치 지정 작업이 커서 위치를 변경하려고 하면 &lt;code&gt;JTextComponent&lt;/code&gt; 에 null이 아닌 &lt;code&gt;NavigationFilter&lt;/code&gt; 세트 가 있다고 가정하여 &lt;code&gt;NavigationFilter&lt;/code&gt; 를 호출 합니다. 이러한 방식으로 &lt;code&gt;NavigationFilter&lt;/code&gt; 는 커서가 위치 할 수있는 위치를 효과적으로 제한 할 수 있습니다. 유사하게 &lt;code&gt;DefaultCaret&lt;/code&gt; 은 사용자가 커서가 위치 할 수있는 위치를 더 제한하기 위해 선택을 변경할 때 &lt;code&gt;NavigationFilter&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="1b02b3a9b17a7c6cda60e7655c9a99c73f643a17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NoSuchElementException&lt;/code&gt; - if this vector has no components</source>
          <target state="translated">&lt;code&gt;NoSuchElementException&lt;/code&gt; - 이 벡터에 컴포넌트가없는 경우</target>
        </trans-unit>
        <trans-unit id="bf0ca623ba94785698d7e451a3ca572babd13ca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Node&lt;/code&gt; -- &lt;code&gt;Node.class&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; - &lt;code&gt;Node.class&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47bdc81cda3e7e7f0daa60ec88d87aa20b530842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NodeFilters&lt;/code&gt; do not need to know how to traverse from node to node, nor do they need to know anything about the data structure that is being traversed. This makes it very easy to write filters, since the only thing they have to know how to do is evaluate a single node. One filter may be used with a number of different kinds of traversals, encouraging code reuse.</source>
          <target state="translated">&lt;code&gt;NodeFilters&lt;/code&gt; 는 노드에서 노드로 이동하는 방법을 알 필요가 없으며 이동중인 데이터 구조에 대해 알 필요도 없습니다. 이렇게하면 필터를 작성하기가 매우 쉽습니다. 수행하는 방법을 알아야하는 유일한 것은 단일 노드를 평가하는 것입니다. 여러 종류의 순회에 하나의 필터를 사용하여 코드 재사용을 장려 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2edca722138d3b1139699c656c7cea8c7d4a39d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NodeIterators&lt;/code&gt; are used to step through a set of nodes, e.g.</source>
          <target state="translated">&lt;code&gt;NodeIterators&lt;/code&gt; 는 노드 집합을 단계별로 실행하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c53e05a98286f7bc9ba514419c61933b80e450e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NodeIterators&lt;/code&gt; are used to step through a set of nodes, e.g. the set of nodes in a &lt;code&gt;NodeList&lt;/code&gt;, the document subtree governed by a particular &lt;code&gt;Node&lt;/code&gt;, the results of a query, or any other set of nodes. The set of nodes to be iterated is determined by the implementation of the &lt;code&gt;NodeIterator&lt;/code&gt;. DOM Level 2 specifies a single &lt;code&gt;NodeIterator&lt;/code&gt; implementation for document-order traversal of a document subtree. Instances of these &lt;code&gt;NodeIterators&lt;/code&gt; are created by calling &lt;code&gt;DocumentTraversal&lt;/code&gt;&lt;code&gt;.createNodeIterator()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NodeIterators&lt;/code&gt; 는 노드 집합 (예 : &lt;code&gt;NodeList&lt;/code&gt; 의 노드 집합 , 특정 &lt;code&gt;Node&lt;/code&gt; 가 관리하는 문서 하위 트리 , 쿼리 결과 또는 기타 노드 집합)을 단계별로 실행하는 데 사용 됩니다. 반복 할 노드 집합은 &lt;code&gt;NodeIterator&lt;/code&gt; 구현에 의해 결정됩니다 . DOM 레벨 2 는 문서 서브 트리의 문서 순서 순회를위한 단일 &lt;code&gt;NodeIterator&lt;/code&gt; 구현을 지정합니다 . 이러한 &lt;code&gt;NodeIterators&lt;/code&gt; 인스턴스는 &lt;code&gt;DocumentTraversal&lt;/code&gt; &lt;code&gt;.createNodeIterator()&lt;/code&gt; 호출하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="6705e7796155d0ab638bdb0eab1c503c594536d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Nodeset&lt;/code&gt; -- &lt;code&gt;XPathNodes.class&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Nodeset&lt;/code&gt; - &lt;code&gt;XPathNodes.class&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7431568a4e997688dcd2fe8485a0ecf5e645a47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Notation&lt;/code&gt; nodes can be imported, however in the current release of the DOM the &lt;code&gt;DocumentType&lt;/code&gt; is readonly. Ability to add these imported nodes to a &lt;code&gt;DocumentType&lt;/code&gt; will be considered for addition to a future release of the DOM.On import, the &lt;code&gt;publicId&lt;/code&gt; and &lt;code&gt;systemId&lt;/code&gt; attributes are copied. Note that the &lt;code&gt;deep&lt;/code&gt; parameter has no effect on this type of nodes since they cannot have any children.</source>
          <target state="translated">&lt;code&gt;Notation&lt;/code&gt; 노드를 가져올 수 있지만 현재 DOM 릴리스에서는 &lt;code&gt;DocumentType&lt;/code&gt; 이 읽기 전용입니다. 이러한 가져온 노드를 &lt;code&gt;DocumentType&lt;/code&gt; 에 추가하는 기능은 DOM의 향후 릴리스에 추가 할 때 고려됩니다. 가져 오기시 &lt;code&gt;publicId&lt;/code&gt; 및 &lt;code&gt;systemId&lt;/code&gt; 속성이 복사됩니다. 점을 유의 &lt;code&gt;deep&lt;/code&gt; 그들이 어떤 아이를 가질 수 없기 때문에 매개 변수는 노드의이 유형에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a5570bb694562e5a548ac75bc58bdaaf2e740c82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Notation&lt;/code&gt; nodes cannot be adopted.</source>
          <target state="translated">&lt;code&gt;Notation&lt;/code&gt; 노드는 채택 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="08f520ff0b2c1120a1b1efb420b122d27bab1db1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Number&lt;/code&gt; -- &lt;code&gt;Number.class&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; - &lt;code&gt;Number.class&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="69704c9f6d1a18a613bb40d5045ce4bac49f8125" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormat&lt;/code&gt; helps you to format and parse numbers for any locale. Your code can be completely independent of the locale conventions for decimal points, thousands-separators, or even the particular decimal digits used, or whether the number format is even decimal.</source>
          <target state="translated">&lt;code&gt;NumberFormat&lt;/code&gt; 을 사용하면 모든 로캘의 숫자를 형식화하고 구문 분석 할 수 있습니다. 코드는 소수점, 천 단위 구분자 또는 사용 된 특정 소수 자릿수 또는 숫자 형식이 10 진수인지에 대한 로케일 규칙과 완전히 독립적 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a62dcdecdb771696235e908fc00600289aedc2c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormat&lt;/code&gt; is the abstract base class for all number formats.</source>
          <target state="translated">&lt;code&gt;NumberFormat&lt;/code&gt; 은 모든 숫자 형식의 추상 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="3f8b124e4dcf0afad09b7b86e28e457462dac5df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormat&lt;/code&gt; is the abstract base class for all number formats. This class provides the interface for formatting and parsing numbers. &lt;code&gt;NumberFormat&lt;/code&gt; also provides methods for determining which locales have number formats, and what their names are.</source>
          <target state="translated">&lt;code&gt;NumberFormat&lt;/code&gt; 은 모든 숫자 형식의 추상 기본 클래스입니다. 이 클래스는 숫자 형식화 및 구문 분석을위한 인터페이스를 제공합니다. &lt;code&gt;NumberFormat&lt;/code&gt; 은 숫자 형식이있는 로케일과 이름이 무엇인지 판별하는 방법도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c3ba2e72dcc3a147bbf1b505e678ea6aa3b97354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormatter&lt;/code&gt; provides slightly different behavior to &lt;code&gt;stringToValue&lt;/code&gt; than that of its superclass. If you have specified a Class for values, &lt;a href=&quot;defaultformatter#setValueClass(java.lang.Class)&quot;&gt;&lt;code&gt;DefaultFormatter.setValueClass(java.lang.Class&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt;, that is one of of &lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt;, &lt;code&gt;Double&lt;/code&gt;, &lt;code&gt;Byte&lt;/code&gt; or &lt;code&gt;Short&lt;/code&gt; and the Format's &lt;code&gt;parseObject&lt;/code&gt; returns an instance of &lt;code&gt;Number&lt;/code&gt;, the corresponding instance of the value class will be created using the constructor appropriate for the primitive type the value class represents. For example: &lt;code&gt;setValueClass(Integer.class)&lt;/code&gt; will cause the resulting value to be created via &lt;code&gt;Integer.valueOf(((Number)formatter.parseObject(string)).intValue())&lt;/code&gt;. This is typically useful if you wish to set a min/max value as the various &lt;code&gt;Number&lt;/code&gt; implementations are generally not comparable to each other. This is also useful if for some reason you need a specific &lt;code&gt;Number&lt;/code&gt; implementation for your values.</source>
          <target state="translated">&lt;code&gt;NumberFormatter&lt;/code&gt; 는 수퍼 클래스 와는 약간 다른 동작을 &lt;code&gt;stringToValue&lt;/code&gt; 에 제공합니다 . 당신이 값 클래스를 지정한 경우, &lt;a href=&quot;defaultformatter#setValueClass(java.lang.Class)&quot;&gt; &lt;code&gt;DefaultFormatter.setValueClass(java.lang.Class&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의 중 하나입니다, &lt;code&gt;Integer&lt;/code&gt; , &lt;code&gt;Long&lt;/code&gt; , &lt;code&gt;Float&lt;/code&gt; , &lt;code&gt;Double&lt;/code&gt; , &lt;code&gt;Byte&lt;/code&gt; 또는 &lt;code&gt;Short&lt;/code&gt; 과 형식의 &lt;code&gt;parseObject&lt;/code&gt; 의 인스턴스를 반환 &lt;code&gt;Number&lt;/code&gt; 는 값 클래스의 해당 인스턴스는 값 클래스가 나타내는 기본 유형에 적합한 생성자를 사용하여 생성됩니다. 예 : &lt;code&gt;setValueClass(Integer.class)&lt;/code&gt; 결과 값은 &lt;code&gt;Integer.valueOf(((Number)formatter.parseObject(string)).intValue())&lt;/code&gt; 를 통해 생성됩니다 . 다양한 &lt;code&gt;Number&lt;/code&gt; 구현이 일반적으로 서로 비교할 수 없기 때문에 최소 / 최대 값을 설정하려는 경우 일반적으로 유용합니다 . 어떤 이유로 값에 특정 &lt;code&gt;Number&lt;/code&gt; 구현 이 필요한 경우에도 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="828d002b3afbbcc2f93875ba43578cbc4de28fc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormatter&lt;/code&gt; subclasses &lt;code&gt;InternationalFormatter&lt;/code&gt; adding special behavior for numbers.</source>
          <target state="translated">&lt;code&gt;NumberFormatter&lt;/code&gt; 는 숫자에 대한 특별한 동작을 추가하는 &lt;code&gt;InternationalFormatter&lt;/code&gt; 의 하위 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="bb16e6e39a618c2251cd1e1b2d85f0006ce3d55b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormatter&lt;/code&gt; subclasses &lt;code&gt;InternationalFormatter&lt;/code&gt; adding special behavior for numbers. Among the specializations are (these are only used if the &lt;code&gt;NumberFormatter&lt;/code&gt; does not display invalid numbers, for example, &lt;code&gt;setAllowsInvalid(false)&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;NumberFormatter&lt;/code&gt; 는 숫자에 대한 특별한 동작을 추가하는 &lt;code&gt;InternationalFormatter&lt;/code&gt; 의 하위 클래스 입니다. 전문화 중에는 다음과 같은 것들이 있습니다 ( 예 : &lt;code&gt;setAllowsInvalid(false)&lt;/code&gt; 같이 &lt;code&gt;NumberFormatter&lt;/code&gt; 가 유효하지 않은 숫자를 표시하지 않는 경우에만 사용됨 ).</target>
        </trans-unit>
        <trans-unit id="ee0419c27c215157223e7ab8eab3f6c49e979585" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumericShaper&lt;/code&gt; Constants</source>
          <target state="translated">&lt;code&gt;NumericShaper&lt;/code&gt; 상수</target>
        </trans-unit>
        <trans-unit id="8185e03fc7c6426082a3f24e65952aa655667088" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OBJECT = &lt;/code&gt;&lt;var&gt;serfile&lt;/var&gt;</source>
          <target state="translated">&lt;code&gt;OBJECT = &lt;/code&gt; &lt;var&gt;serfile&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="e8eeb23fb07ae1cee8d44619de7607f778f1e9f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPAQUE&lt;/code&gt; if all colors used by this &lt;code&gt;Paint&lt;/code&gt; object are opaque, &lt;code&gt;TRANSLUCENT&lt;/code&gt; if at least one of the colors used by this &lt;code&gt;Paint&lt;/code&gt; object is not opaque.</source>
          <target state="translated">&lt;code&gt;OPAQUE&lt;/code&gt; 은 이 사용하는 모든 색상 경우 &lt;code&gt;Paint&lt;/code&gt; 객체가 불투명, &lt;code&gt;TRANSLUCENT&lt;/code&gt; 이가 사용하는 색상의 적어도 하나의 경우 &lt;code&gt;Paint&lt;/code&gt; 객체는 불투명하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="80f10e18d714ff767c08003d54dacb63050f4bd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt; references whose legal values are defined as a range must implement the &lt;code&gt;Comparable&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 유효한 값이 범위로 정의 된 객체 참조는 &lt;code&gt;Comparable&lt;/code&gt; 인터페이스를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ca87a14235f184e15de9592b8154a4d1e9bbd4fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt; representation of text</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 텍스트의 객체 표현</target>
        </trans-unit>
        <trans-unit id="c9f2653079246ad0302e9b55a05b78d3f74924cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetDateTime&lt;/code&gt; is an immutable representation of a date-time with an offset. This class stores all date and time fields, to a precision of nanoseconds, as well as the offset from UTC/Greenwich. For example, the value &quot;2nd October 2007 at 13:45.30.123456789 +02:00&quot; can be stored in an &lt;code&gt;OffsetDateTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OffsetDateTime&lt;/code&gt; 은 오프셋이있는 날짜-시간을 변경할 수없는 표현입니다. 이 클래스는 모든 날짜 및 시간 필드를 정밀한 나노초 및 UTC / 그리니치 오프셋으로 저장합니다. 예를 들어, &quot;2007 년 10 월 2 일 13 : 45.30.123456789 +02 : 00&quot;값은 &lt;code&gt;OffsetDateTime&lt;/code&gt; 에 저장 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd5d11805842ba2f963fc4088087af559a9b8cae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetDateTime&lt;/code&gt; is an immutable representation of a date-time with an offset. This class stores all date and time fields, to a precision of nanoseconds, as well as the offset from UTC/Greenwich. For example, the value &quot;2nd October 2007 at 13:45:30.123456789 +02:00&quot; can be stored in an &lt;code&gt;OffsetDateTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OffsetDateTime&lt;/code&gt; 은 오프셋이있는 날짜-시간의 변경 불가능한 표현입니다. 이 클래스는 모든 날짜 및 시간 필드를 나노초의 정밀도와 UTC / 그리니치로부터의 오프셋으로 저장합니다. 예를 들어 '2007 년 10 월 2 일 13 : 45 : 30.123456789 +02 : 00'값은 &lt;code&gt;OffsetDateTime&lt;/code&gt; 에 저장할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0d3f6ee4197f3b2b983bca3cca829db904232908" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetDateTime&lt;/code&gt; returns &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OffsetDateTime&lt;/code&gt; 은 IsoChronology를 반환합니다 &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6edaafd79341b725c5f8e6ebeccc458c11de8581" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetDateTime&lt;/code&gt; returns &lt;code&gt;NANOS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OffsetDateTime&lt;/code&gt; 는 반환 &lt;code&gt;NANOS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05fe4e4a096b20b61d48662f41d683e52ee7c4bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetDateTime&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;OffsetDateTime&lt;/code&gt; 은 null을 반환</target>
        </trans-unit>
        <trans-unit id="cc0f13b6a3cd72c40fc03bdbbbdfd8afab8c8cde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetDateTime&lt;/code&gt;, &lt;a href=&quot;zoneddatetime&quot;&gt;&lt;code&gt;ZonedDateTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt; all store an instant on the time-line to nanosecond precision. &lt;code&gt;Instant&lt;/code&gt; is the simplest, simply representing the instant. &lt;code&gt;OffsetDateTime&lt;/code&gt; adds to the instant the offset from UTC/Greenwich, which allows the local date-time to be obtained. &lt;code&gt;ZonedDateTime&lt;/code&gt; adds full time-zone rules.</source>
          <target state="translated">&lt;code&gt;OffsetDateTime&lt;/code&gt; , &lt;a href=&quot;zoneddatetime&quot;&gt; &lt;code&gt;ZonedDateTime&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; 는&lt;/a&gt; 모두 타임 라인에 순간을 나노초 단위로 저장합니다. &lt;code&gt;Instant&lt;/code&gt; 는 가장 간단하며 단순히 인스턴트를 나타냅니다. &lt;code&gt;OffsetDateTime&lt;/code&gt; 은 UTC / 그리니치로부터의 오프셋을 순간에 추가하여 현지 날짜-시간을 얻을 수있게합니다. &lt;code&gt;ZonedDateTime&lt;/code&gt; 은 표준 시간대 규칙을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="747ef8ee3778f91e8ac9d910664411561a55c9d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetTime&lt;/code&gt; is an immutable date-time object that represents a time, often viewed as hour-minute-second-offset. This class stores all time fields, to a precision of nanoseconds, as well as a zone offset. For example, the value &quot;13:45.30.123456789+02:00&quot; can be stored in an &lt;code&gt;OffsetTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OffsetTime&lt;/code&gt; 은 시간을 나타내는 불변의 날짜-시간 객체로, 종종 시분 초 오프셋으로 표시됩니다. 이 클래스는 모든 시간 필드를 정밀한 나노초 및 영역 오프셋으로 저장합니다. 예를 들어, &quot;13 : 45.30.123456789 + 02 : 00&quot;값은 &lt;code&gt;OffsetTime&lt;/code&gt; 에 저장 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a77af86f7130ef19d25ae4ebac7f5a5386ebc24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetTime&lt;/code&gt; is an immutable date-time object that represents a time, often viewed as hour-minute-second-offset. This class stores all time fields, to a precision of nanoseconds, as well as a zone offset. For example, the value &quot;13:45:30.123456789+02:00&quot; can be stored in an &lt;code&gt;OffsetTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OffsetTime&lt;/code&gt; 은 시간을 나타내는 변경 불가능한 날짜-시간 객체로, 종종 시간-분-초-오프셋으로 표시됩니다. 이 클래스는 모든 시간 필드를 나노초 단위의 정밀도와 영역 오프셋으로 저장합니다. 예를 들어 &quot;13 : 45 : 30.123456789 + 02 : 00&quot;값은 &lt;code&gt;OffsetTime&lt;/code&gt; 에 저장할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fb556f1d044c93dd78fc127a07542edfbf5c323d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetTime&lt;/code&gt; returns &lt;code&gt;NANOS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OffsetTime&lt;/code&gt; 은 &lt;code&gt;NANOS&lt;/code&gt; 를 반환</target>
        </trans-unit>
        <trans-unit id="a6c69736d03b4fa389637a846b670c2e73d679e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetTime&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;OffsetTime&lt;/code&gt; 은 null을 반환</target>
        </trans-unit>
        <trans-unit id="32491c76af56dd803b6d0f847510706d254ed46f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetTime&lt;/code&gt; returns null (does not represent a date)</source>
          <target state="translated">&lt;code&gt;OffsetTime&lt;/code&gt; 은 null을 반환합니다 (날짜를 나타내지 않음)</target>
        </trans-unit>
        <trans-unit id="dbc436631db3e42ab64490a5d3372bc7f7c11731" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Optional&lt;/code&gt; contains a copy of the context or empty if context is null.</source>
          <target state="translated">&lt;code&gt;Optional&lt;/code&gt; 은 컨텍스트의 사본을 포함하거나 컨텍스트가 널인 경우 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7309fc575e1f2c3685e6ad0e704892b1c62eb4fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Optional&lt;/code&gt; is primarily intended for use as a method return type where there is a clear need to represent &quot;no result,&quot; and where using &lt;code&gt;null&lt;/code&gt; is likely to cause errors. A variable whose type is &lt;code&gt;Optional&lt;/code&gt; should never itself be &lt;code&gt;null&lt;/code&gt;; it should always point to an &lt;code&gt;Optional&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;Optional&lt;/code&gt; 은 주로 &quot;결과 없음&quot;을 나타내야하는 분명한 필요가 있고 &lt;code&gt;null&lt;/code&gt; 을 사용 하면 오류가 발생할 가능성이 있는 메서드 반환 유형으로 사용하기위한 것입니다 . 유형이 &lt;code&gt;Optional&lt;/code&gt; 인 변수는 자체적으로 &lt;code&gt;null&lt;/code&gt; 이 아니어야합니다 . 항상 &lt;code&gt;Optional&lt;/code&gt; 인스턴스를 가리켜 야 합니다.</target>
        </trans-unit>
        <trans-unit id="f1f24b3fba50109e527e904488bb44e22ec470ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OptionalDouble&lt;/code&gt; is primarily intended for use as a method return type where there is a clear need to represent &quot;no result.&quot; A variable whose type is &lt;code&gt;OptionalDouble&lt;/code&gt; should never itself be &lt;code&gt;null&lt;/code&gt;; it should always point to an &lt;code&gt;OptionalDouble&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;OptionalDouble&lt;/code&gt; 은 주로 &quot;결과 없음&quot;을 나타내야하는 분명한 요구가있는 메서드 반환 유형으로 사용하기위한 것입니다. 유형이 &lt;code&gt;OptionalDouble&lt;/code&gt; 인 변수는 자체적으로 &lt;code&gt;null&lt;/code&gt; 이 아니어야합니다 . 항상 &lt;code&gt;OptionalDouble&lt;/code&gt; 인스턴스를 가리켜 야 합니다.</target>
        </trans-unit>
        <trans-unit id="b877a4fccfde4c8156b8c47ee8b462ef38c2bc9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OptionalInt&lt;/code&gt; is primarily intended for use as a method return type where there is a clear need to represent &quot;no result.&quot; A variable whose type is &lt;code&gt;OptionalInt&lt;/code&gt; should never itself be &lt;code&gt;null&lt;/code&gt;; it should always point to an &lt;code&gt;OptionalInt&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;OptionalInt&lt;/code&gt; 는 기본적으로 &quot;결과 없음&quot;을 나타내야하는 명확한 요구가있는 메서드 반환 형식으로 사용하기위한 것입니다. 유형이 &lt;code&gt;OptionalInt&lt;/code&gt; 인 변수는 자체적으로 &lt;code&gt;null&lt;/code&gt; 이 아니어야합니다 . 항상 &lt;code&gt;OptionalInt&lt;/code&gt; 인스턴스를 가리켜 야 합니다.</target>
        </trans-unit>
        <trans-unit id="cf2607c5b1175552b80c75c09227eae06be75347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OptionalLong&lt;/code&gt; is primarily intended for use as a method return type where there is a clear need to represent &quot;no result.&quot; A variable whose type is &lt;code&gt;OptionalLong&lt;/code&gt; should never itself be &lt;code&gt;null&lt;/code&gt;; it should always point to an &lt;code&gt;OptionalLong&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;OptionalLong&lt;/code&gt; 은 주로 &quot;결과 없음&quot;을 나타내야하는 분명한 필요성이있는 메서드 반환 유형으로 사용하기위한 것입니다. 유형이 &lt;code&gt;OptionalLong&lt;/code&gt; 인 변수는 자체적으로 &lt;code&gt;null&lt;/code&gt; 이 아니어야합니다 . 항상 &lt;code&gt;OptionalLong&lt;/code&gt; 인스턴스를 가리켜 야 합니다.</target>
        </trans-unit>
        <trans-unit id="77dac311fc96d660e341cef7460eeea0f8d7c514" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;P&lt;/code&gt; - the type of the additional parameter to the visitor's methods</source>
          <target state="translated">&lt;code&gt;P&lt;/code&gt; - 방문자의 메소드에 대한 추가 매개 변수 유형</target>
        </trans-unit>
        <trans-unit id="922006ae4f2d58df64f97acb7a01b82595c3d105" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;P&lt;/code&gt; - the type of the additional parameter to this visitor's methods.</source>
          <target state="translated">&lt;code&gt;P&lt;/code&gt; - 이 방문자의 메소드에 대한 추가 매개 변수의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="c62ebd37997a8e857f60b36d7ca67d9b0351d5f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;P&lt;/code&gt; - the type of the additional parameter to this visitor's methods. Use &lt;code&gt;Void&lt;/code&gt; for visitors that do not need an additional parameter.</source>
          <target state="translated">&lt;code&gt;P&lt;/code&gt; - 이 방문자의 메소드에 대한 추가 매개 변수의 유형입니다. 추가 매개 변수가 필요하지 않은 방문자에게는 &lt;code&gt;Void&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf991d6427ef4a01b1368453ba715a86e4b880b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POST&lt;/code&gt; corresponds to the POST from method</source>
          <target state="translated">&lt;code&gt;POST&lt;/code&gt; 는 POST from 메소드에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="0b739bd423f77c49d62539efaa695b288e8c1955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRI1.in(C1)&lt;/code&gt; different package</source>
          <target state="translated">&lt;code&gt;PRI1.in(C1)&lt;/code&gt; 다른 패키지</target>
        </trans-unit>
        <trans-unit id="feed3ab8e83141c1f42159d756b92bb27015d5de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRI1.in(C1)&lt;/code&gt; same package</source>
          <target state="translated">&lt;code&gt;PRI1.in(C1)&lt;/code&gt; 동일한 패키지</target>
        </trans-unit>
        <trans-unit id="6bbd61e7beca9d012e4886a31aea5799d4167365" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRI1.in(D)&lt;/code&gt; different module</source>
          <target state="translated">&lt;code&gt;PRI1.in(D)&lt;/code&gt; 다른 모듈</target>
        </trans-unit>
        <trans-unit id="d51c61e85021fdf1b9b1b4c2c3c8f8e9498af09b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRI2.in(C1)&lt;/code&gt; hop back to module</source>
          <target state="translated">&lt;code&gt;PRI2.in(C1)&lt;/code&gt; 모듈로 다시 홉</target>
        </trans-unit>
        <trans-unit id="5266800496eef635886f55e9444658748627f071" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRI2.in(D2)&lt;/code&gt; different package</source>
          <target state="translated">&lt;code&gt;PRI2.in(D2)&lt;/code&gt; 다른 패키지</target>
        </trans-unit>
        <trans-unit id="6222dc65e125077f0ef1c930dbcb5d43631a967b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRI2.in(D2)&lt;/code&gt; same package</source>
          <target state="translated">&lt;code&gt;PRI2.in(D2)&lt;/code&gt; 동일한 패키지</target>
        </trans-unit>
        <trans-unit id="c390f8eef7c3475f69261b39aab83fb3b199a5ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRI2.in(E)&lt;/code&gt; hop to third module</source>
          <target state="translated">&lt;code&gt;PRI2.in(E)&lt;/code&gt; 세 번째 모듈로의 PRI2.in (E) 홉</target>
        </trans-unit>
        <trans-unit id="0cb04a7ab75fc7c438013c18d6beb8308c6ff2b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRO&lt;/code&gt; indicates &lt;a href=&quot;#PROTECTED&quot;&gt;&lt;code&gt;PROTECTED&lt;/code&gt;&lt;/a&gt; bit set, &lt;code&gt;PRI&lt;/code&gt; indicates &lt;a href=&quot;#PRIVATE&quot;&gt;&lt;code&gt;PRIVATE&lt;/code&gt;&lt;/a&gt; bit set, &lt;code&gt;PAC&lt;/code&gt; indicates &lt;a href=&quot;#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt; bit set, &lt;code&gt;MOD&lt;/code&gt; indicates &lt;a href=&quot;#MODULE&quot;&gt;&lt;code&gt;MODULE&lt;/code&gt;&lt;/a&gt; bit set, &lt;code&gt;1R&lt;/code&gt; and &lt;code&gt;2R&lt;/code&gt; indicate &lt;a href=&quot;#PUBLIC&quot;&gt;&lt;code&gt;PUBLIC&lt;/code&gt;&lt;/a&gt; bit set, &lt;code&gt;U&lt;/code&gt; indicates &lt;a href=&quot;#UNCONDITIONAL&quot;&gt;&lt;code&gt;UNCONDITIONAL&lt;/code&gt;&lt;/a&gt; bit set, &lt;code&gt;IAE&lt;/code&gt; indicates &lt;code&gt;IllegalAccessException&lt;/code&gt; thrown.</source>
          <target state="translated">&lt;code&gt;PRO&lt;/code&gt; 는 &lt;a href=&quot;#PROTECTED&quot;&gt; &lt;code&gt;PROTECTED&lt;/code&gt; &lt;/a&gt; 비트 세트, &lt;code&gt;PRI&lt;/code&gt; 는 &lt;a href=&quot;#PRIVATE&quot;&gt; &lt;code&gt;PRIVATE&lt;/code&gt; &lt;/a&gt; 비트 세트, &lt;code&gt;PAC&lt;/code&gt; 는 &lt;a href=&quot;#PACKAGE&quot;&gt; &lt;code&gt;PACKAGE&lt;/code&gt; &lt;/a&gt; 비트 세트, &lt;code&gt;MOD&lt;/code&gt; 는 &lt;a href=&quot;#MODULE&quot;&gt; &lt;code&gt;MODULE&lt;/code&gt; &lt;/a&gt; 비트 세트, &lt;code&gt;1R&lt;/code&gt; 및 &lt;code&gt;2R&lt;/code&gt; 은 &lt;a href=&quot;#PUBLIC&quot;&gt; &lt;code&gt;PUBLIC&lt;/code&gt; &lt;/a&gt; 비트 세트, &lt;code&gt;U&lt;/code&gt; 는 &lt;a href=&quot;#UNCONDITIONAL&quot;&gt; &lt;code&gt;UNCONDITIONAL&lt;/code&gt; &lt;/a&gt; 비트 세트, &lt;code&gt;IAE&lt;/code&gt; 는 &lt;code&gt;IllegalAccessException&lt;/code&gt; throw를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="4187f6d523accc36108f687c2d15a65e8a549328" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; - If present, then it is split into the &lt;code&gt;YEAR&lt;/code&gt; and &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;. If the mode is strict or smart then the field is validated.</source>
          <target state="translated">&lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; -있는 경우 &lt;code&gt;YEAR&lt;/code&gt; 및 &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; 로 분할됩니다 . 모드가 엄격하거나 스마트하면 필드의 유효성이 검사됩니다.</target>
        </trans-unit>
        <trans-unit id="8e4c2b1bef8f7b831de2ce63ea052d62bf4486ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified proleptic-month. The day-of-month will be unchanged, unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; - 지정된 proleptic-month 로 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환합니다 . 새 월과 연도에 유효하지 않은 한, 월은 변경되지 않습니다. 이 경우 월은 새 달 및 연도의 최대 유효 값으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="e09b11fee61d275d63c2254d9be273d616ad7a90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified proleptic-month. This completely replaces the year and month of this object.</source>
          <target state="translated">&lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; - 지정된 proleptic-month가 있는 &lt;code&gt;YearMonth&lt;/code&gt; 를 반환합니다 . 이것은이 객체의 연도와 월을 완전히 대체합니다.</target>
        </trans-unit>
        <trans-unit id="1066d40dc72f60175bf2efce878721170c292b34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PUB.in(D).in(E)&lt;/code&gt; third module</source>
          <target state="translated">&lt;code&gt;PUB.in(D).in(E)&lt;/code&gt; 세 번째 모듈</target>
        </trans-unit>
        <trans-unit id="eb050715279f9becb8d52d29ef4fad30f9c5c542" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PUB.in(D)&lt;/code&gt; different module</source>
          <target state="translated">&lt;code&gt;PUB.in(D)&lt;/code&gt; 다른 모듈</target>
        </trans-unit>
        <trans-unit id="6a733f517cf6ef22d5273ea3306a50eb5b611e09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pacific Standard Time&lt;/code&gt;; &lt;code&gt;PST&lt;/code&gt;; &lt;code&gt;GMT-08:00&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Pacific Standard Time&lt;/code&gt; ; &lt;code&gt;PST&lt;/code&gt; ; &lt;code&gt;GMT-08:00&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12c3c1a284fc6b9d375f248307f17359a66ab888" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Package&lt;/code&gt; objects contain version information about the implementation and specification of a Java package.</source>
          <target state="translated">&lt;code&gt;Package&lt;/code&gt; 객체에는 Java 패키지의 구현 및 사양에 대한 버전 정보가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4308eb4729e35d6bf10b5f07656f4548fe66e043" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Package&lt;/code&gt; objects contain version information about the implementation and specification of a Java package. This versioning information is retrieved and made available by the &lt;a href=&quot;classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt; instance that loaded the class(es). Typically, it is stored in the manifest that is distributed with the classes.</source>
          <target state="translated">&lt;code&gt;Package&lt;/code&gt; 객체에는 Java 패키지의 구현 및 사양에 대한 버전 정보가 포함되어 있습니다. 이 버전 정보는 클래스를로드 한 &lt;a href=&quot;classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; &lt;/a&gt; 인스턴스 에서 검색하여 사용할 수 있습니다 . 일반적으로 클래스와 함께 배포되는 매니페스트에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="3184fcc28bfbb3e3652e068c94ac106af122eec3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Painter&lt;/code&gt;s are simply encapsulations of Java2D code and make it fairly trivial to reuse existing &lt;code&gt;Painter&lt;/code&gt;s or to combine them together. Implementations of this interface are also trivial to write, such that if you can't find a &lt;code&gt;Painter&lt;/code&gt; that does what you need, you can write one with minimal effort. Writing a &lt;code&gt;Painter&lt;/code&gt; requires knowledge of Java2D.</source>
          <target state="translated">&lt;code&gt;Painter&lt;/code&gt; 는 단순히 Java2D 코드의 캡슐화이며 기존 &lt;code&gt;Painter&lt;/code&gt; 를 재사용 하거나 함께 결합하는 것이 매우 간단 합니다. 이 인터페이스의 구현은 작성하기가 간단하므로 필요한 작업을 수행 하는 &lt;code&gt;Painter&lt;/code&gt; 를 찾을 수없는 경우 최소한의 노력으로 작성할 수 있습니다. &lt;code&gt;Painter&lt;/code&gt; 를 작성 하려면 Java2D에 대한 지식이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="2ae426ea16f6c01f7525e4fb9b8daa7c7ee0008a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Panel&lt;/code&gt; is the simplest container class.</source>
          <target state="translated">&lt;code&gt;Panel&lt;/code&gt; 은 가장 간단한 컨테이너 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="bf58b12f094b17fd0230c881bc1c6f20e1e4a93a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Panel&lt;/code&gt; is the simplest container class. A panel provides space in which an application can attach any other component, including other panels.</source>
          <target state="translated">&lt;code&gt;Panel&lt;/code&gt; 은 가장 간단한 컨테이너 클래스입니다. 패널은 응용 프로그램이 다른 패널을 포함하여 다른 구성 요소를 연결할 수있는 공간을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f88524b1c692827b9287752ed80bb843e014e773" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParagraphView&lt;/code&gt; instances are breakable along the &lt;code&gt;Y_AXIS&lt;/code&gt; only, and only if &lt;code&gt;len&lt;/code&gt; is after the first line.</source>
          <target state="translated">&lt;code&gt;ParagraphView&lt;/code&gt; 인스턴스는 &lt;code&gt;Y_AXIS&lt;/code&gt; 를 따라서 만 깨질 수 있으며 &lt;code&gt;len&lt;/code&gt; 이 첫 번째 줄 뒤에있는 경우에만 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="59266e78d3708d29d7685fac4eae848b92d30711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParagraphView&lt;/code&gt; instances are breakable along the &lt;code&gt;Y_AXIS&lt;/code&gt; only, and only if &lt;code&gt;len&lt;/code&gt; is after the first row. If the length is less than one row, a value of &lt;code&gt;BadBreakWeight&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;ParagraphView&lt;/code&gt; 인스턴스는 &lt;code&gt;Y_AXIS&lt;/code&gt; 를 따라서 만 깨질 수 있으며 &lt;code&gt;len&lt;/code&gt; 이 첫 번째 행 뒤에있는 경우에만 가능합니다 . 길이가 한 행 미만이면 &lt;code&gt;BadBreakWeight&lt;/code&gt; 값 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3c941976ba8bbde2caadcd614cc35eb62f4e4de0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParallelGroup&lt;/code&gt;s created with an alignment other than &lt;code&gt;BASELINE&lt;/code&gt; align elements that are smaller than the size of the group in one of three ways: centered, anchored to the leading edge, or anchored to the trailing edge.</source>
          <target state="translated">&lt;code&gt;ParallelGroup&lt;/code&gt; &lt;code&gt;BASELINE&lt;/code&gt; 이외의 선형으로 작성된 ParallelGroup 은 세 가지 방법 중 하나로 그룹 크기보다 작은 요소를 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="4f1bef79e76b3c298b8f1e0ea0107bf3710c853a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParameterMetaData&lt;/code&gt; interface -- provides information about the parameters to &lt;code&gt;PreparedStatement&lt;/code&gt; commands</source>
          <target state="translated">&lt;code&gt;ParameterMetaData&lt;/code&gt; 인터페이스 &lt;code&gt;PreparedStatement&lt;/code&gt; 명령에 매개 변수에 대한 정보를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="d332e015aea351b8b9c98d96fad816ef5c64bd2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParsePosition&lt;/code&gt; is a simple class used by &lt;code&gt;Format&lt;/code&gt; and its subclasses to keep track of the current position during parsing.</source>
          <target state="translated">&lt;code&gt;ParsePosition&lt;/code&gt; 은 구문 분석 중 현재 위치를 추적하기 위해 &lt;code&gt;Format&lt;/code&gt; 및 해당 서브 클래스에서 사용하는 간단한 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="0b01d465e11f55069c6f0d71183162dfea21a9b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParsePosition&lt;/code&gt; is a simple class used by &lt;code&gt;Format&lt;/code&gt; and its subclasses to keep track of the current position during parsing. The &lt;code&gt;parseObject&lt;/code&gt; method in the various &lt;code&gt;Format&lt;/code&gt; classes requires a &lt;code&gt;ParsePosition&lt;/code&gt; object as an argument.</source>
          <target state="translated">&lt;code&gt;ParsePosition&lt;/code&gt; 은 구문 분석 중 현재 위치를 추적하기 위해 &lt;code&gt;Format&lt;/code&gt; 및 해당 서브 클래스에서 사용하는 간단한 클래스 입니다. 다양한 &lt;code&gt;Format&lt;/code&gt; 클래스 의 &lt;code&gt;parseObject&lt;/code&gt; 메서드 에는 &lt;code&gt;ParsePosition&lt;/code&gt; 객체가 인수로 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="54bb2ec20881507a99c401abc6b56363280e79a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Path2D&lt;/code&gt; provides exactly those facilities required for basic construction and management of a geometric path and implementation of the above interfaces with little added interpretation. If it is useful to manipulate the interiors of closed geometric shapes beyond simple hit testing then the &lt;a href=&quot;area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class provides additional capabilities specifically targeted at closed figures. While both classes nominally implement the &lt;code&gt;Shape&lt;/code&gt; interface, they differ in purpose and together they provide two useful views of a geometric shape where &lt;code&gt;Path2D&lt;/code&gt; deals primarily with a trajectory formed by path segments and &lt;code&gt;Area&lt;/code&gt; deals more with interpretation and manipulation of enclosed regions of 2D geometric space.</source>
          <target state="translated">&lt;code&gt;Path2D&lt;/code&gt; 는 기하학적 경로의 기본 구성 및 관리와 위 인터페이스의 구현에 필요한 기능을 거의 추가 해석없이 제공합니다. 단순한 적중 테스트를 넘어 닫힌 기하학적 모양의 내부를 조작하는 것이 유용하다면 &lt;a href=&quot;area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt; 클래스는 닫힌 그림을 특별히 대상으로하는 추가 기능을 제공합니다. 두 클래스 모두 명목상 &lt;code&gt;Shape&lt;/code&gt; 인터페이스를 구현하지만 목적이 다르며 함께 &lt;code&gt;Path2D&lt;/code&gt; 가 주로 경로 세그먼트로 형성된 궤적 을 처리 하고 &lt;code&gt;Area&lt;/code&gt; 가 2D 기하학적 공간의 밀폐 된 영역의 해석 및 조작을 더 많이 처리 하는 기하학적 모양에 대한 두 가지 유용한보기를 제공 합니다. .</target>
        </trans-unit>
        <trans-unit id="725f5ddf7763d423eda66951a1d4efd989748e21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PersistentSnippet&lt;/code&gt; is immutable: an access to any of its methods will always return the same result. and thus is thread-safe.</source>
          <target state="translated">&lt;code&gt;PersistentSnippet&lt;/code&gt; 은 변경할 수 없습니다. 메서드에 대한 액세스는 항상 동일한 결과를 반환합니다. 따라서 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="bd85a37b9664d4f2321ca036855aff097361659f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Popup&lt;/code&gt; does not descend from &lt;code&gt;Component&lt;/code&gt;, rather implementations of &lt;code&gt;Popup&lt;/code&gt; are responsible for creating and maintaining their own &lt;code&gt;Component&lt;/code&gt;s to render the requested &lt;code&gt;Component&lt;/code&gt; to the user.</source>
          <target state="translated">&lt;code&gt;Popup&lt;/code&gt; 은 &lt;code&gt;Component&lt;/code&gt; 의 자손이 아니라, &lt;code&gt;Popup&lt;/code&gt; 구현은 요청 된 &lt;code&gt;Component&lt;/code&gt; 를 사용자 에게 렌더링하기 위해 자신의 &lt;code&gt;Component&lt;/code&gt; 를 만들고 유지하는 책임 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb740f402aa150f39d20bfb1c1a658728470a780" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PopupFactory&lt;/code&gt;, as the name implies, is used to obtain instances of &lt;code&gt;Popup&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;PopupFactory&lt;/code&gt; 이름에서 알 수 있듯이 PopupFactory 는 &lt;code&gt;Popup&lt;/code&gt; 의 인스턴스를 얻는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ab474a9710faea400895816054c5d100740d952f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PopupFactory&lt;/code&gt;, as the name implies, is used to obtain instances of &lt;code&gt;Popup&lt;/code&gt;s. &lt;code&gt;Popup&lt;/code&gt;s are used to display a &lt;code&gt;Component&lt;/code&gt; above all other &lt;code&gt;Component&lt;/code&gt;s in a particular containment hierarchy. The general contract is that once you have obtained a &lt;code&gt;Popup&lt;/code&gt; from a &lt;code&gt;PopupFactory&lt;/code&gt;, you must invoke &lt;code&gt;hide&lt;/code&gt; on the &lt;code&gt;Popup&lt;/code&gt;. The typical usage is:</source>
          <target state="translated">&lt;code&gt;PopupFactory&lt;/code&gt; 이름에서 알 수 있듯이 PopupFactory 는 &lt;code&gt;Popup&lt;/code&gt; 의 인스턴스를 얻는 데 사용됩니다 . &lt;code&gt;Popup&lt;/code&gt; S는 디스플레이에 사용되는 &lt;code&gt;Component&lt;/code&gt; 다른 상기 &lt;code&gt;Component&lt;/code&gt; 특정 봉쇄 계층들. 일반 계약은 당신이 얻을 일단 있다는 것이다 &lt;code&gt;Popup&lt;/code&gt; A로부터 &lt;code&gt;PopupFactory&lt;/code&gt; , 당신이 호출해야 &lt;code&gt;hide&lt;/code&gt; 온 &lt;code&gt;Popup&lt;/code&gt; . 일반적인 사용법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0f0413c8cf1cdf77186650256b11a1e2936e0d3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Position&lt;/code&gt; with an offset of 0 is a special case. It never changes its offset while document content is altered.</source>
          <target state="translated">&lt;code&gt;Position&lt;/code&gt; 오프셋이 0 인 위치 는 특별한 경우입니다. 문서 내용이 변경되는 동안에는 오프셋이 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="79f3a6ee69b3394457b9595b0feea4b5ceeb2b05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PreparedStatement&lt;/code&gt; -- used to send prepared statements or basic SQL statements (derived from &lt;code&gt;Statement&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;PreparedStatement&lt;/code&gt; - 준비된 문 또는 기본 SQL 문을 보내는 데 사용됩니다 ( &lt;code&gt;Statement&lt;/code&gt; 에서 파생 됨 ).</target>
        </trans-unit>
        <trans-unit id="ddfec47f813ac5bfe133b54d7e1655ef912631f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrintJob&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;PrintJob&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="24d03c1feaac5c5d678afd40cc4c37019901508f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrintJobAttribute&lt;/code&gt; is a tagging interface which a printing attribute class implements to indicate the attribute describes the status of a Print Job or some other characteristic of a Print Job.</source>
          <target state="translated">&lt;code&gt;PrintJobAttribute&lt;/code&gt; 는 인쇄 작업의 상태 또는 인쇄 작업의 다른 특성을 설명하는 속성을 나타 내기 위해 인쇄 속성 클래스가 구현하는 태그 지정 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="20bfd128f1b76f898859d45fa950060bf5c041a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrintJobAttribute&lt;/code&gt; is a tagging interface which a printing attribute class implements to indicate the attribute describes the status of a Print Job or some other characteristic of a Print Job. A Print Service instance adds a number of &lt;code&gt;PrintJobAttributes&lt;/code&gt; to a Print Job's attribute set to report the Print Job's status. If an attribute implements &lt;a href=&quot;printrequestattribute&quot;&gt;&lt;code&gt;PrintRequestAttribute&lt;/code&gt;&lt;/a&gt; as well as &lt;code&gt;PrintJobAttribute&lt;/code&gt;, the client may include the attribute in a attribute set to specify the attribute's value for the Print Job.</source>
          <target state="translated">&lt;code&gt;PrintJobAttribute&lt;/code&gt; 는 인쇄 작업의 상태 또는 인쇄 작업의 다른 특성을 설명하는 속성을 나타 내기 위해 인쇄 속성 클래스가 구현하는 태그 지정 인터페이스입니다. 인쇄 서비스 인스턴스는 인쇄 작업의 상태를보고하기 위해 인쇄 작업의 속성 세트에 여러 &lt;code&gt;PrintJobAttributes&lt;/code&gt; 를 추가합니다 . 속성이 &lt;a href=&quot;printrequestattribute&quot;&gt; &lt;code&gt;PrintRequestAttribute&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;PrintJobAttribute&lt;/code&gt; 를 구현하는 경우 클라이언트는 속성 세트에 속성을 포함하여 인쇄 작업에 대한 속성 값을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49f9e3feaf5d8167b442ce9300d0511dcf6c6795" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; is just an &lt;a href=&quot;attributeset&quot;&gt;&lt;code&gt;AttributeSet&lt;/code&gt;&lt;/a&gt; whose constructors and mutating operations guarantee an additional invariant, namely that all attribute values in the &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; must be instances of interface &lt;a href=&quot;printrequestattribute&quot;&gt;&lt;code&gt;PrintRequestAttribute&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#add(javax.print.attribute.Attribute)&quot;&gt;&lt;code&gt;add(Attribute)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#addAll(javax.print.attribute.AttributeSet)&quot;&gt;&lt;code&gt;addAll(AttributeSet)&lt;/code&gt;&lt;/a&gt; operations are respecified below to guarantee this additional invariant.</source>
          <target state="translated">&lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; 를이 단지입니다 &lt;a href=&quot;attributeset&quot;&gt; &lt;code&gt;AttributeSet&lt;/code&gt; 에&lt;/a&gt; 그 생성자와 돌연변이의 조작의 모든 속성 값, 즉 것을 추가 불변 보장 &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; 를이 인터페이스의 인스턴스해야 &lt;a href=&quot;printrequestattribute&quot;&gt; &lt;code&gt;PrintRequestAttribute&lt;/code&gt; 을&lt;/a&gt; . &lt;a href=&quot;#add(javax.print.attribute.Attribute)&quot;&gt; &lt;code&gt;add(Attribute)&lt;/code&gt; &lt;/a&gt; , 및 &lt;a href=&quot;#addAll(javax.print.attribute.AttributeSet)&quot;&gt; &lt;code&gt;addAll(AttributeSet)&lt;/code&gt; &lt;/a&gt; 작업이 추가 불변을 보장하기 위해 아래 respecified된다.</target>
        </trans-unit>
        <trans-unit id="f899e09674ba72d841f60ba92cefab52905c6fe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrintService&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;PrintService&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="eef3f14e5df3d0d2706edd64e3b8ca579f73575a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrintService&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;PrintService&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="e01793b4167c22062078a543832e66af0d0719e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrinterResolution&lt;/code&gt; is used in multiple ways:</source>
          <target state="translated">&lt;code&gt;PrinterResolution&lt;/code&gt; 은 여러 방법으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cb0094c2401044684191945838ede7bd2b46a2c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Process&lt;/code&gt; provides control of native processes started by ProcessBuilder.start and Runtime.exec.</source>
          <target state="translated">&lt;code&gt;Process&lt;/code&gt; 는 ProcessBuilder.start 및 Runtime.exec에 의해 시작된 기본 프로세스를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="3b8ec7db8395b083ec838a28db64a25bf83b3930" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Process&lt;/code&gt; provides control of native processes started by ProcessBuilder.start and Runtime.exec. The class provides methods for performing input from the process, performing output to the process, waiting for the process to complete, checking the exit status of the process, and destroying (killing) the process. The &lt;a href=&quot;processbuilder#start()&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;runtime#exec(java.lang.String%5B%5D,java.lang.String%5B%5D,java.io.File)&quot;&gt;&lt;code&gt;Runtime.exec&lt;/code&gt;&lt;/a&gt; methods create a native process and return an instance of a subclass of &lt;code&gt;Process&lt;/code&gt; that can be used to control the process and obtain information about it.</source>
          <target state="translated">&lt;code&gt;Process&lt;/code&gt; 는 ProcessBuilder.start 및 Runtime.exec에 의해 시작된 기본 프로세스를 제어합니다. 이 클래스는 프로세스에서 입력을 수행하고, 프로세스에 출력을 수행하고, 프로세스가 완료 될 때까지 대기하고, 프로세스의 종료 상태를 확인하고, 프로세스를 파괴 (종료)하는 메서드를 제공합니다. &lt;a href=&quot;processbuilder#start()&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;runtime#exec(java.lang.String%5B%5D,java.lang.String%5B%5D,java.io.File)&quot;&gt; &lt;code&gt;Runtime.exec&lt;/code&gt; 의의&lt;/a&gt; 방법은 기본 프로세스를 생성하는 서브 클래스의 인스턴스를 리턴 &lt;code&gt;Process&lt;/code&gt; 프로세스를 제어하고 정보의 취득을 할 수있다.</target>
        </trans-unit>
        <trans-unit id="9c966b2587f0f3e6f3eadbe2c03d187ad210d483" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeEvent&lt;/code&gt; which indicates that a change has occurred in a component's bounds.</source>
          <target state="translated">&lt;code&gt;PropertyChangeEvent&lt;/code&gt; 구성 요소의 경계에서 변경이 발생했음을 나타내는 PropertyChangeEvent .</target>
        </trans-unit>
        <trans-unit id="f33b28a5934c627cd00b184f0c2b45891534112f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeEvent&lt;/code&gt; which indicates that a change has occurred in a component's bounds. The &lt;code&gt;oldValue&lt;/code&gt; is the old component bounds and the &lt;code&gt;newValue&lt;/code&gt; is the new component bounds.</source>
          <target state="translated">&lt;code&gt;PropertyChangeEvent&lt;/code&gt; 구성 요소의 경계에서 변경이 발생했음을 나타내는 PropertyChangeEvent . &lt;code&gt;oldValue&lt;/code&gt; 입니다은 기존의 구성 요소 경계하고 &lt;code&gt;newValue&lt;/code&gt; 새 구성 요소 경계입니다.</target>
        </trans-unit>
        <trans-unit id="1fc6054b990682647628eab0832fedebb8332f62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeEvent&lt;/code&gt; which indicates that a significant change has occurred to the children of a component like a tree or text.</source>
          <target state="translated">&lt;code&gt;PropertyChangeEvent&lt;/code&gt; 트리 또는 텍스트와 같은 구성 요소의 자식에 중요한 변경이 발생했음을 나타내는 PropertyChangeEvent .</target>
        </trans-unit>
        <trans-unit id="60571f7c0debfd7d9c48d0c61bd9e8edf99bb1e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeEvent&lt;/code&gt; which indicates that a significant change has occurred to the children of a component like a tree or text. This change notifies the event listener that it needs to reacquire the state of the subcomponents. The &lt;code&gt;oldValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and the &lt;code&gt;newValue&lt;/code&gt; is the component whose children have become invalid.</source>
          <target state="translated">&lt;code&gt;PropertyChangeEvent&lt;/code&gt; 트리 또는 텍스트와 같은 구성 요소의 자식에 중요한 변경이 발생했음을 나타내는 PropertyChangeEvent . 이 변경은 이벤트 리스너에게 하위 구성 요소의 상태를 다시 획득해야 함을 알립니다. &lt;code&gt;oldValue&lt;/code&gt; 입니다은 입니다 &lt;code&gt;null&lt;/code&gt; 과 &lt;code&gt;newValue&lt;/code&gt; 그 아이들 무효가 한 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="7ff8dd3094c5297ae6a9b431bb15f8519d14a511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeEvent&lt;/code&gt; which indicates that text attributes have changed.</source>
          <target state="translated">&lt;code&gt;PropertyChangeEvent&lt;/code&gt; 텍스트 속성이 변경되었음을 나타내는 PropertyChangeEvent .</target>
        </trans-unit>
        <trans-unit id="7d5e1b9441a9527d77606d4a9630d0f10c32ae68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeEvent&lt;/code&gt; which indicates that text has changed.</source>
          <target state="translated">&lt;code&gt;PropertyChangeEvent&lt;/code&gt; 텍스트가 변경되었음을 나타내는 PropertyChangeEvent .</target>
        </trans-unit>
        <trans-unit id="7e58a8d75baba6e6d89910e2db7656658699c50d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeListener&lt;/code&gt; installed on the scroll pane.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; 스크롤 창에 설치된 PropertyChangeListener .</target>
        </trans-unit>
        <trans-unit id="ba06b0dd08ce4d57a239a3b9dddd4a16a33ab51d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeListener&lt;/code&gt; returned from &lt;code&gt;createPropertyChangeListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; &lt;code&gt;createPropertyChangeListener&lt;/code&gt; 에서 반환 된 PropertyChangeListener 입니다.</target>
        </trans-unit>
        <trans-unit id="a6958e056e94f9d39980355fd9db462d2f00a97c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeListener&lt;/code&gt; returned from &lt;code&gt;createPropertyChangeListener&lt;/code&gt;. You should not need to access this field, rather if you want to customize the &lt;code&gt;PropertyChangeListener&lt;/code&gt; override &lt;code&gt;createPropertyChangeListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; &lt;code&gt;createPropertyChangeListener&lt;/code&gt; 에서 반환 된 PropertyChangeListener 입니다. &lt;code&gt;PropertyChangeListener&lt;/code&gt; 재정의 &lt;code&gt;createPropertyChangeListener&lt;/code&gt; 를 사용자 정의하려는 경우이 필드에 액세스 할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="399b556c838e2cf11db4df4893f7c0f77933070c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeListener&lt;/code&gt; that attached to &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; &lt;code&gt;JList&lt;/code&gt; 에 첨부 된 PropertyChangeListener 입니다 .</target>
        </trans-unit>
        <trans-unit id="2d699fbd7532c65d9b67bd95b5a209a336df8924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeListeners&lt;/code&gt; are notified asynchronously on the</source>
          <target state="translated">&lt;code&gt;PropertyChangeListeners&lt;/code&gt; 는</target>
        </trans-unit>
        <trans-unit id="59067153cfbf767bf0eae368624ecf2fda3e6023" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeSupport&lt;/code&gt; for this &lt;code&gt;SwingWorker&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PropertyChangeSupport&lt;/code&gt; 이 &lt;code&gt;SwingWorker&lt;/code&gt; 에 대한 PropertyChangeSupport</target>
        </trans-unit>
        <trans-unit id="18dd12e6b13bdc8d1392690785a89b93fd970019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyListener&lt;/code&gt; for &lt;code&gt;JSlider.isFilled&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyListener&lt;/code&gt; &lt;code&gt;JSlider.isFilled&lt;/code&gt; 용 PropertyListener .</target>
        </trans-unit>
        <trans-unit id="a005f47c2c8e6ab97de822319cbb1d41c63fc760" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyResourceBundle&lt;/code&gt; can be constructed either from an &lt;code&gt;InputStream&lt;/code&gt; or a &lt;code&gt;Reader&lt;/code&gt;, which represents a property file. Constructing a &lt;code&gt;PropertyResourceBundle&lt;/code&gt; instance from an &lt;code&gt;InputStream&lt;/code&gt; requires that the input stream be encoded in &lt;code&gt;UTF-8&lt;/code&gt;. By default, if a &lt;a href=&quot;../nio/charset/malformedinputexception&quot;&gt;&lt;code&gt;MalformedInputException&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../nio/charset/unmappablecharacterexception&quot;&gt;&lt;code&gt;UnmappableCharacterException&lt;/code&gt;&lt;/a&gt; occurs on reading the input stream, then the &lt;code&gt;PropertyResourceBundle&lt;/code&gt; instance resets to the state before the exception, re-reads the input stream in &lt;code&gt;ISO-8859-1&lt;/code&gt;, and continues reading. If the system property &lt;code&gt;&lt;span id=&quot;java.util.PropertyResourceBundle.encoding&quot;&gt;java.util.PropertyResourceBundle.encoding&lt;/span&gt;&lt;/code&gt; is set to either &quot;ISO-8859-1&quot; or &quot;UTF-8&quot;, the input stream is solely read in that encoding, and throws the exception if it encounters an invalid sequence. If &quot;ISO-8859-1&quot; is specified, characters that cannot be represented in ISO-8859-1 encoding must be represented by Unicode Escapes as defined in section 3.3 of</source>
          <target state="translated">&lt;code&gt;PropertyResourceBundle&lt;/code&gt; 은 속성 파일을 나타내는 &lt;code&gt;InputStream&lt;/code&gt; 또는 &lt;code&gt;Reader&lt;/code&gt; 에서 생성 할 수 있습니다 . 구축 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 가 된 에서 인스턴스 &lt;code&gt;InputStream&lt;/code&gt; 입력 스트림이 인코딩 될 것을 요구 &lt;code&gt;UTF-8&lt;/code&gt; . 기본적으로 입력 스트림을 읽을 때 &lt;a href=&quot;../nio/charset/malformedinputexception&quot;&gt; &lt;code&gt;MalformedInputException&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../nio/charset/unmappablecharacterexception&quot;&gt; &lt;code&gt;UnmappableCharacterException&lt;/code&gt; 이&lt;/a&gt; 발생하면 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 인스턴스가 예외 이전 상태로 재설정되고 &lt;code&gt;ISO-8859-1&lt;/code&gt; 에서 입력 스트림을 다시 읽고 계속 읽습니다. 시스템 속성 &lt;code&gt;&lt;span id=&quot;java.util.PropertyResourceBundle.encoding&quot;&gt;java.util.PropertyResourceBundle.encoding&lt;/span&gt;&lt;/code&gt; &quot;ISO-8859-1&quot;또는 &quot;UTF-8&quot;로 설정되면 입력 스트림은 해당 인코딩으로 만 읽히고 유효하지 않은 시퀀스가 ​​발견되면 예외가 발생합니다. &quot;ISO-8859-1&quot;이 지정된 경우 ISO-8859-1 인코딩으로 표시 할 수없는 문자는의 섹션 3.3에 정의 된대로 유니 코드 이스케이프로 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="749c70a759310b6c0ac6be6b8e9326bb4117feac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyResourceBundle&lt;/code&gt; can be constructed either from an &lt;code&gt;InputStream&lt;/code&gt; or a &lt;code&gt;Reader&lt;/code&gt;, which represents a property file. Constructing a &lt;code&gt;PropertyResourceBundle&lt;/code&gt; instance from an &lt;code&gt;InputStream&lt;/code&gt; requires that the input stream be encoded in &lt;code&gt;UTF-8&lt;/code&gt;. By default, if a &lt;a href=&quot;../nio/charset/malformedinputexception&quot;&gt;&lt;code&gt;MalformedInputException&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../nio/charset/unmappablecharacterexception&quot;&gt;&lt;code&gt;UnmappableCharacterException&lt;/code&gt;&lt;/a&gt; occurs on reading the input stream, then the &lt;code&gt;PropertyResourceBundle&lt;/code&gt; instance resets to the state before the exception, re-reads the input stream in &lt;code&gt;ISO-8859-1&lt;/code&gt;, and continues reading. If the system property &lt;code&gt;java.util.PropertyResourceBundle.encoding&lt;/code&gt; is set to either &quot;ISO-8859-1&quot; or &quot;UTF-8&quot;, the input stream is solely read in that encoding, and throws the exception if it encounters an invalid sequence. If &quot;ISO-8859-1&quot; is specified, characters that cannot be represented in ISO-8859-1 encoding must be represented by Unicode Escapes as defined in section 3.3 of</source>
          <target state="translated">&lt;code&gt;PropertyResourceBundle&lt;/code&gt; 은 속성 파일을 나타내는 &lt;code&gt;InputStream&lt;/code&gt; 또는 &lt;code&gt;Reader&lt;/code&gt; 에서 생성 할 수 있습니다 . 구축 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 가 된 에서 인스턴스 &lt;code&gt;InputStream&lt;/code&gt; 입력 스트림이 인코딩 될 것을 요구 &lt;code&gt;UTF-8&lt;/code&gt; . 기본적으로 입력 스트림을 읽을 때 &lt;a href=&quot;../nio/charset/malformedinputexception&quot;&gt; &lt;code&gt;MalformedInputException&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../nio/charset/unmappablecharacterexception&quot;&gt; &lt;code&gt;UnmappableCharacterException&lt;/code&gt; 이&lt;/a&gt; 발생하면 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 인스턴스가 예외 이전 상태로 재설정되고 &lt;code&gt;ISO-8859-1&lt;/code&gt; 에서 입력 스트림을 다시 읽고 계속 읽습니다. 시스템 속성 &lt;code&gt;java.util.PropertyResourceBundle.encoding&lt;/code&gt; &quot;ISO-8859-1&quot;또는 &quot;UTF-8&quot;로 설정되면 입력 스트림은 해당 인코딩으로 만 읽히고 유효하지 않은 시퀀스가 ​​발견되면 예외가 발생합니다. &quot;ISO-8859-1&quot;이 지정된 경우 ISO-8859-1 인코딩으로 표시 할 수없는 문자는의 섹션 3.3에 정의 된대로 유니 코드 이스케이프로 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="fc24baabfee4175aa3af89492a6508e2fc036e98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyResourceBundle&lt;/code&gt; is a concrete subclass of &lt;code&gt;ResourceBundle&lt;/code&gt; that manages resources for a locale using a set of static strings from a property file.</source>
          <target state="translated">&lt;code&gt;PropertyResourceBundle&lt;/code&gt; 은 속성 파일의 정적 문자열 집합을 사용하여 로캘에 대한 &lt;code&gt;ResourceBundle&lt;/code&gt; 를 관리 하는 ResourceBundle 의 구체적인 하위 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="e96ec8b508fe11d2f8bb4f08f31370e4ecf1c82a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyResourceBundle&lt;/code&gt; is a concrete subclass of &lt;code&gt;ResourceBundle&lt;/code&gt; that manages resources for a locale using a set of static strings from a property file. See &lt;a href=&quot;resourcebundle&quot;&gt;&lt;code&gt;ResourceBundle&lt;/code&gt;&lt;/a&gt; for more information about resource bundles.</source>
          <target state="translated">&lt;code&gt;PropertyResourceBundle&lt;/code&gt; 은 속성 파일의 정적 문자열 집합을 사용하여 로캘에 대한 &lt;code&gt;ResourceBundle&lt;/code&gt; 를 관리 하는 ResourceBundle 의 구체적인 하위 클래스입니다 . 자원 번들에 대한 자세한 정보는 &lt;a href=&quot;resourcebundle&quot;&gt; &lt;code&gt;ResourceBundle&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="408b51230bab9b7150ec7ee422a6ef3e7f58e82e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; throws &lt;code&gt;IllegalArgumentException&lt;/code&gt; for the same reasons that &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; does.</source>
          <target state="translated">&lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; 가 발생 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 하는 것과 같은 이유로 &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; 의는 않습니다.</target>
        </trans-unit>
        <trans-unit id="da530510929fe6c96f463bc0c49e1ee92cd5450a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Proxy&lt;/code&gt; provides static methods for creating dynamic proxy classes and instances, and it is also the superclass of all dynamic proxy classes created by those methods.</source>
          <target state="translated">&lt;code&gt;Proxy&lt;/code&gt; 는 동적 프록시 클래스 및 인스턴스를 작성하기위한 정적 메소드를 제공하며 해당 메소드로 작성된 모든 동적 프록시 클래스의 수퍼 클래스이기도합니다.</target>
        </trans-unit>
        <trans-unit id="60c8ecf884af360e6a1a2e1af05573b45adf00c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Proxy&lt;/code&gt; provides static methods for creating objects that act like instances of interfaces but allow for customized method invocation.</source>
          <target state="translated">&lt;code&gt;Proxy&lt;/code&gt; 는 인터페이스의 인스턴스처럼 작동하지만 사용자 지정 메서드 호출을 허용하는 개체를 만들기위한 정적 메서드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7f206786bed47d96888a69848c08426679cc5eb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Proxy&lt;/code&gt; provides static methods for creating objects that act like instances of interfaces but allow for customized method invocation. To create a proxy instance for some interface &lt;code&gt;Foo&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Proxy&lt;/code&gt; 는 인터페이스의 인스턴스처럼 작동하지만 사용자 지정 메서드 호출을 허용하는 개체를 만들기위한 정적 메서드를 제공합니다. 일부 인터페이스 &lt;code&gt;Foo&lt;/code&gt; 에 대한 프록시 인스턴스를 만들려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="ca585ada7df00c4b1d8fea4d54987978ddbccd39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; constructor specifying the Namespace URI and local part.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 네임 스페이스 URI 및 로컬 부분을 지정하는 QName 생성자.</target>
        </trans-unit>
        <trans-unit id="e2eedc4571c3eec827bcfe60939843df95e4d603" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; constructor specifying the Namespace URI, local part and prefix.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 네임 스페이스 URI, 로컬 부분 및 접두사를 지정하는 QName 생성자.</target>
        </trans-unit>
        <trans-unit id="c55545fb2750e34975ef7192b5fb00823b2a74ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; constructor specifying the local part.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 로컬 부분을 지정하는 QName 생성자.</target>
        </trans-unit>
        <trans-unit id="bbd029620df34bd9762a8223840db541c1dc8110" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; corresponding to the given &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 주어진 &lt;code&gt;String&lt;/code&gt; 해당하는 QName</target>
        </trans-unit>
        <trans-unit id="a8c85a6a30518746adb38fbd850ec25ed2cf89cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; derived from parsing the formatted &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 형식화 된 &lt;code&gt;String&lt;/code&gt; 구문 분석에서 파생 된 QName .</target>
        </trans-unit>
        <trans-unit id="81e9568b1ff909b6fedc25500eaba911395070d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; is immutable.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 은 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4c6e14f13a0f624db15eb12df316be14fa9502ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; represents a &lt;strong&gt;qualified name&lt;/strong&gt; as defined in the XML specifications: &lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#QName&quot;&gt;XML Schema Part2: Datatypes specification&lt;/a&gt;, &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#ns-qualnames&quot;&gt;Namespaces in XML&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 은 XML 사양 ( &lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#QName&quot;&gt;XML Schema Part2 : Datatypes specification&lt;/a&gt; , &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#ns-qualnames&quot;&gt;Namespaces in XML)에&lt;/a&gt; 정의 된 &lt;strong&gt;정규화 된 이름&lt;/strong&gt; 을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="bba3fa47be657a119757384c57fc90d0f4e99588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; represents a &lt;strong&gt;qualified name&lt;/strong&gt; as defined in the XML specifications: &lt;a href=&quot;https://www.w3.org/TR/xmlschema-2/#QName&quot;&gt;XML Schema Part2: Datatypes specification&lt;/a&gt;, &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/#ns-qualnames&quot;&gt;Namespaces in XML&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 은 XML 사양 ( &lt;a href=&quot;https://www.w3.org/TR/xmlschema-2/#QName&quot;&gt;XML Schema Part2 : Datatypes specification&lt;/a&gt; , &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/#ns-qualnames&quot;&gt;Namespaces in XML)에&lt;/a&gt; 정의 된 &lt;strong&gt;정규화 된 이름&lt;/strong&gt; 을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b396eea9383cb4b88b5b025775c976d9863badd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Queue&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;Queue&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="0b93516b8e1e330d60d039e95c0fb02772feaad9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Queue&lt;/code&gt; implementations generally do not allow insertion of &lt;code&gt;null&lt;/code&gt; elements, although some implementations, such as &lt;a href=&quot;linkedlist&quot;&gt;&lt;code&gt;LinkedList&lt;/code&gt;&lt;/a&gt;, do not prohibit insertion of &lt;code&gt;null&lt;/code&gt;. Even in the implementations that permit it, &lt;code&gt;null&lt;/code&gt; should not be inserted into a &lt;code&gt;Queue&lt;/code&gt;, as &lt;code&gt;null&lt;/code&gt; is also used as a special return value by the &lt;code&gt;poll&lt;/code&gt; method to indicate that the queue contains no elements.</source>
          <target state="translated">&lt;code&gt;Queue&lt;/code&gt; &lt;a href=&quot;linkedlist&quot;&gt; &lt;code&gt;LinkedList&lt;/code&gt; &lt;/a&gt; 와 같은 일부 구현에서는 &lt;code&gt;null&lt;/code&gt; 삽입을 금지하지 않지만 큐 구현에서는 일반적으로 &lt;code&gt;null&lt;/code&gt; 요소를 삽입 할 수 없습니다 . 심지어 허용 구현에서는 &lt;code&gt;null&lt;/code&gt; (A) 내로 삽입되지 않아야 &lt;code&gt;Queue&lt;/code&gt; 로서, &lt;code&gt;null&lt;/code&gt; 또한 의해 특수 반환 값으로서 사용된다 &lt;code&gt;poll&lt;/code&gt; 큐 요소가없는 것을 나타내는 방법.</target>
        </trans-unit>
        <trans-unit id="8679c55cdb78a70e595d02b028825709fb730408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Queue&lt;/code&gt; implementations generally do not define element-based versions of methods &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt; but instead inherit the identity based versions from class &lt;code&gt;Object&lt;/code&gt;, because element-based equality is not always well-defined for queues with the same elements but different ordering properties.</source>
          <target state="translated">&lt;code&gt;Queue&lt;/code&gt; 구현은 일반적으로 요소 기반 버전의 메소드 &lt;code&gt;equals&lt;/code&gt; 및 &lt;code&gt;hashCode&lt;/code&gt; 를 정의하지 않지만 대신 요소 기반 동등성이 요소는 동일하지만 순서 특성이 다른 큐에 대해 잘 정의되어 있기 때문에 &lt;code&gt;Object&lt;/code&gt; 클래스에서 ID 기반 버전을 상속합니다 .</target>
        </trans-unit>
        <trans-unit id="aedadaa81438ca4b05b6f2bd835c8da0741ec96a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R1&lt;/code&gt; - the result type of the first collector</source>
          <target state="translated">&lt;code&gt;R1&lt;/code&gt; - 첫 번째 수집기의 결과 유형</target>
        </trans-unit>
        <trans-unit id="ed0d668f5625376f91185a665c267beebefa8f55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R2&lt;/code&gt; - the result type of the second collector</source>
          <target state="translated">&lt;code&gt;R2&lt;/code&gt; - 두 번째 수집기의 결과 유형</target>
        </trans-unit>
        <trans-unit id="d5b3084d90510a484a935829d3ff8b444a3ddac6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - The element type of the new stream</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 새 스트림의 요소 유형</target>
        </trans-unit>
        <trans-unit id="f629e4a546cc14c51a7987f2aef05acc9d7d69ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - The final result type of the new collector</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 새 수집기의 최종 결과 유형</target>
        </trans-unit>
        <trans-unit id="60d3b1beb316e1205baef79de9638a11fef62fd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - The type of intermediate accumulation result, and final result, for the new collector</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 새 수집기의 중간 누적 결과 유형 및 최종 결과</target>
        </trans-unit>
        <trans-unit id="c630e5a81467b58eb9e79f30ab7efe65928479f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - class of the result</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 결과 클래스</target>
        </trans-unit>
        <trans-unit id="7754430553251d06e99e56218086c9955a5ef401" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - result type of collector</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 수집기의 결과 유형</target>
        </trans-unit>
        <trans-unit id="16d793d0e9e37a8b2abb141bcb19ff1586f17209" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - result type of the downstream collector</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 다운 스트림 콜렉터의 결과 유형</target>
        </trans-unit>
        <trans-unit id="c5c1ff4a10db643c11d376d93ee63250190fd7ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - result type of this operation.</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 이 작업의 결과 유형입니다.</target>
        </trans-unit>
        <trans-unit id="a9fefc0a83d1467f3d4c7949842b896632be396e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the final result type</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 최종 결과 유형</target>
        </trans-unit>
        <trans-unit id="33f562cfb608d3acccf73609f1456db5167a2834" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the published item type</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 게시 된 항목 유형</target>
        </trans-unit>
        <trans-unit id="8c76b51e69a0849c323c7465e221b08f87a89bc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the result type of the reduction operation</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 감소 연산의 결과 유형</target>
        </trans-unit>
        <trans-unit id="1f05c5bda74f948a003c8606ea1462bb62baf4ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the return type of the visitor's methods</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 방문자 메소드의 리턴 유형</target>
        </trans-unit>
        <trans-unit id="4560e8e675a7acc63ca504ce2fb3e54fb35b188c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the return type of this visitor's methods</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 이 방문자 메소드의 리턴 유형</target>
        </trans-unit>
        <trans-unit id="c77aeb842dafaa1f8c1e5e71b034081d5ff32c0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the return type of this visitor's methods. Use &lt;a href=&quot;../../../../../java.base/java/lang/void&quot;&gt;&lt;code&gt;Void&lt;/code&gt;&lt;/a&gt; for visitors that do not need to return results.</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - the return type of this visitor's methods. Use &lt;a href=&quot;../../../../../java.base/java/lang/void&quot;&gt; &lt;code&gt;Void&lt;/code&gt; &lt;/a&gt; for visitors that do not need to return results.</target>
        </trans-unit>
        <trans-unit id="918c3fc3373408ca6ce2da43c8190d3ed0fd5c58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the return type of this visitor's methods. Use &lt;a href=&quot;../../../../java/lang/void&quot;&gt;&lt;code&gt;Void&lt;/code&gt;&lt;/a&gt; for visitors that do not need to return results.</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 이 방문자 메소드의 리턴 유형 결과를 반환하지 않아도되는 방문자에게는 &lt;a href=&quot;../../../../java/lang/void&quot;&gt; &lt;code&gt;Void&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="fc83d57ed38eebfff120b35ee913384621bf2606" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the return type of this visitor's methods. Use &lt;code&gt;Void&lt;/code&gt; for visitors that do not need to return results.</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 이 방문자 메소드의 리턴 유형 결과를 반환하지 않아도되는 방문자에게는 &lt;code&gt;Void&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d28a3271151222f7a67611f53075a5b628c7cce1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the type of the Temporal object</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 임시 객체의 유형</target>
        </trans-unit>
        <trans-unit id="7313d88e31203e0f8d42968a231940bba48838e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the type of the mutable result container</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - the type of the mutable result container</target>
        </trans-unit>
        <trans-unit id="4eb784ce6b9c857b370cc34ebb112c5f7d8a53a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the type of the result</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 결과의 유형</target>
        </trans-unit>
        <trans-unit id="4bb6dfc6fe71a4ea2106649887d0bbe1aee5753e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the type of the result of the function</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 함수 결과의 유형</target>
        </trans-unit>
        <trans-unit id="6752128866cc67ce79fe2fab671aa74da246532d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the type returned from the query</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 쿼리에서 반환 된 유형</target>
        </trans-unit>
        <trans-unit id="572787d050c17378048bd8d95bf105f18ac9a20c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - type of the result</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 결과 유형</target>
        </trans-unit>
        <trans-unit id="2da7795b3a4eeb517c388139fe41c4fd5c716d59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REF_getField&lt;/code&gt; which matches to &lt;code&gt;GETTER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REF_getField&lt;/code&gt; 와 일치하는 &lt;code&gt;GETTER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a920b19c5d1c4d51615317f225ebc34e10bec35f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REF_getStatic&lt;/code&gt; which matches to &lt;code&gt;STATIC_GETTER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REF_getStatic&lt;/code&gt; 와 일치하는 &lt;code&gt;STATIC_GETTER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fdcbbd80ac70589b00c94e6efa45afd0433081ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REF_invokeInterface&lt;/code&gt; which matches to &lt;code&gt;INTERFACE_VIRTUAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REF_invokeInterface&lt;/code&gt; &lt;code&gt;INTERFACE_VIRTUAL&lt;/code&gt; 과 일치하는 REF_invokeInterface</target>
        </trans-unit>
        <trans-unit id="8df7101c16b0b81b99947800c3db422a7d80b0b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REF_invokeSpecial&lt;/code&gt; which matches to &lt;code&gt;SPECIAL&lt;/code&gt; or &lt;code&gt;INTERFACE_SPECIAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REF_invokeSpecial&lt;/code&gt; &lt;code&gt;SPECIAL&lt;/code&gt; 또는 &lt;code&gt;INTERFACE_SPECIAL&lt;/code&gt; 과 일치하는 REF_invokeSpecial</target>
        </trans-unit>
        <trans-unit id="5d0f1205c2fce7ff0e8f978bd6adcb944e03bb56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REF_invokeStatic&lt;/code&gt; which matches to &lt;code&gt;STATIC&lt;/code&gt; or &lt;code&gt;INTERFACE_STATIC&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REF_invokeStatic&lt;/code&gt; &lt;code&gt;STATIC&lt;/code&gt; 또는 &lt;code&gt;INTERFACE_STATIC&lt;/code&gt; 과 일치하는 REF_invokeStatic</target>
        </trans-unit>
        <trans-unit id="3cd664d7deb0f9461573a59cc39b837faecde9fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REF_invokeVirtual&lt;/code&gt; which matches to &lt;code&gt;VIRTUAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REF_invokeVirtual&lt;/code&gt; &lt;code&gt;VIRTUAL&lt;/code&gt; 과 일치하는 REF_invokeVirtual</target>
        </trans-unit>
        <trans-unit id="71a9c5c609c68ccb8718a8cf6bb3b5fd7545a31f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REF_newInvokeSpecial&lt;/code&gt; which matches to &lt;code&gt;CONSTRUCTOR&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REF_newInvokeSpecial&lt;/code&gt; &lt;code&gt;CONSTRUCTOR&lt;/code&gt; 와 일치하는 REF_newInvokeSpecial</target>
        </trans-unit>
        <trans-unit id="0d5e602e70c3a619edc70bad4edc5dc10ea69fb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REF_putField&lt;/code&gt; which matches to &lt;code&gt;SETTER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REF_putField&lt;/code&gt; 에 일치 &lt;code&gt;SETTER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dce8667a6efa13aa9d2a7de788ecd2bde0b48c36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REF_putStatic&lt;/code&gt; which matches to &lt;code&gt;STATIC_SETTER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REF_putStatic&lt;/code&gt; 와 일치하는 &lt;code&gt;STATIC_SETTER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67bcbbb823d949e9a2614deae5bef9e0749cea1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RMIClassLoader&lt;/code&gt; comprises static methods to support dynamic class loading with RMI.</source>
          <target state="translated">&lt;code&gt;RMIClassLoader&lt;/code&gt; comprises static methods to support dynamic class loading with RMI.</target>
        </trans-unit>
        <trans-unit id="21a3551f68fe0e3f44babcb2d8c844e6f30a03db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RMIClassLoader&lt;/code&gt; comprises static methods to support dynamic class loading with RMI. Included are methods for loading classes from a network location (one or more URLs) and obtaining the location from which an existing class should be loaded by remote parties. These methods are used by the RMI runtime when marshalling and unmarshalling classes contained in the arguments and return values of remote method calls, and they also may be invoked directly by applications in order to mimic RMI's dynamic class loading behavior.</source>
          <target state="translated">&lt;code&gt;RMIClassLoader&lt;/code&gt; comprises static methods to support dynamic class loading with RMI. Included are methods for loading classes from a network location (one or more URLs) and obtaining the location from which an existing class should be loaded by remote parties. These methods are used by the RMI runtime when marshalling and unmarshalling classes contained in the arguments and return values of remote method calls, and they also may be invoked directly by applications in order to mimic RMI's dynamic class loading behavior.</target>
        </trans-unit>
        <trans-unit id="d88506e3e9135913bcd88803f18d035564e60855" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; is the service provider interface for &lt;code&gt;RMIClassLoader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; is the service provider interface for &lt;code&gt;RMIClassLoader&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de0c91bac67fc2222fd604f4ed7d597fa8904b7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; is the service provider interface for &lt;code&gt;RMIClassLoader&lt;/code&gt;. In particular, an &lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; instance provides an implementation of the following static methods of &lt;code&gt;RMIClassLoader&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; is the service provider interface for &lt;code&gt;RMIClassLoader&lt;/code&gt; . In particular, an &lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; instance provides an implementation of the following static methods of &lt;code&gt;RMIClassLoader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="21dff0411f1aca90f50abcb44a1221d16817046c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RMISecurityManager&lt;/code&gt; implements a policy identical to the policy implemented by &lt;a href=&quot;../../../java.base/java/lang/securitymanager&quot;&gt;&lt;code&gt;SecurityManager&lt;/code&gt;&lt;/a&gt;. RMI applications should use the &lt;code&gt;SecurityManager&lt;/code&gt; class or another appropriate &lt;code&gt;SecurityManager&lt;/code&gt; implementation instead of this class. RMI's class loader will download classes from remote locations only if a security manager has been set.</source>
          <target state="translated">&lt;code&gt;RMISecurityManager&lt;/code&gt; implements a policy identical to the policy implemented by &lt;a href=&quot;../../../java.base/java/lang/securitymanager&quot;&gt; &lt;code&gt;SecurityManager&lt;/code&gt; &lt;/a&gt;. RMI applications should use the &lt;code&gt;SecurityManager&lt;/code&gt; class or another appropriate &lt;code&gt;SecurityManager&lt;/code&gt; implementation instead of this class. RMI's class loader will download classes from remote locations only if a security manager has been set.</target>
        </trans-unit>
        <trans-unit id="064d766acc118d90826f3cd801ec7ee46447bff0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RR&lt;/code&gt; - result type of the resulting collector</source>
          <target state="translated">&lt;code&gt;RR&lt;/code&gt; - 결과 콜렉터의 결과 유형</target>
        </trans-unit>
        <trans-unit id="08e56083939315acb3ac8d6d9eb96ef047650fb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSA/ECB/OAEPWithSHA-1AndMGF1Padding&lt;/code&gt; (1024, 2048)</source>
          <target state="translated">&lt;code&gt;RSA/ECB/OAEPWithSHA-1AndMGF1Padding&lt;/code&gt; (1024, 2048)</target>
        </trans-unit>
        <trans-unit id="cf4f7e3a6ec30bd47895fa42228f3c7581d40155" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSA/ECB/OAEPWithSHA-256AndMGF1Padding&lt;/code&gt; (1024, 2048)</source>
          <target state="translated">&lt;code&gt;RSA/ECB/OAEPWithSHA-256AndMGF1Padding&lt;/code&gt; (1024, 2048)</target>
        </trans-unit>
        <trans-unit id="08d0860727c4a7d941dce0f8a1ee3917b24f840b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSA/ECB/PKCS1Padding&lt;/code&gt; (1024, 2048)</source>
          <target state="translated">&lt;code&gt;RSA/ECB/PKCS1Padding&lt;/code&gt; (1024, 2048)</target>
        </trans-unit>
        <trans-unit id="62b2f4466d958c3f3ed5b550a38c7c0f1729fce5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSA&lt;/code&gt; (1024, 2048)</source>
          <target state="translated">&lt;code&gt;RSA&lt;/code&gt; (1024, 2048)</target>
        </trans-unit>
        <trans-unit id="3dd51987ef2d55d99d3b337efe4ed149d3974ae4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSA&lt;/code&gt; (1024, 2048, 4096)</source>
          <target state="translated">&lt;code&gt;RSA&lt;/code&gt; (1024, 2048, 4096)</target>
        </trans-unit>
        <trans-unit id="815e3a487397227803232ef66641e18db3fd87f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rdn&lt;/code&gt; will properly parse all valid RDNs, but does not attempt to detect all possible violations when parsing invalid RDNs. It is &quot;generous&quot; in accepting invalid RDNs. The &quot;validity&quot; of a name is determined ultimately when it is supplied to an LDAP server, which may accept or reject the name based on factors such as its schema information and interoperability considerations.</source>
          <target state="translated">&lt;code&gt;Rdn&lt;/code&gt; 은 유효한 모든 RDN을 올바르게 구문 분석하지만 유효하지 않은 RDN을 구문 분석 할 때 가능한 모든 위반을 감지하지는 않습니다. 유효하지 않은 RDN을 허용하는 것은 &quot;관대합니다&quot;. 이름의 &quot;유효성&quot;은 최종적으로 LDAP 서버에 제공 될 때 결정되며, 스키마 정보 및 상호 운용성 고려 사항과 같은 요인에 따라 이름을 승인하거나 거부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b2bd8531858a5408bab3b061558434deab0f7b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reader&lt;/code&gt; through which the partial &lt;code&gt;Clob&lt;/code&gt; value can be read.</source>
          <target state="translated">&lt;code&gt;Reader&lt;/code&gt; through which the partial &lt;code&gt;Clob&lt;/code&gt; value can be read.</target>
        </trans-unit>
        <trans-unit id="cb89420b5a6168c1926ef1a349b07badce26d93f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reader&lt;/code&gt; through which the partial &lt;code&gt;SerialClob&lt;/code&gt; value can be read.</source>
          <target state="translated">&lt;code&gt;Reader&lt;/code&gt; through which the partial &lt;code&gt;SerialClob&lt;/code&gt; value can be read.</target>
        </trans-unit>
        <trans-unit id="190d6ea7948cbea5101e314c49f2d828b4a3a990" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RectangularShape&lt;/code&gt; is the base class for a number of &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; objects whose geometry is defined by a rectangular frame.</source>
          <target state="translated">&lt;code&gt;RectangularShape&lt;/code&gt; is the base class for a number of &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; objects whose geometry is defined by a rectangular frame.</target>
        </trans-unit>
        <trans-unit id="bca0b3b9feaae8ba2603c7480c12bc9b507327ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RectangularShape&lt;/code&gt; is the base class for a number of &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; objects whose geometry is defined by a rectangular frame. This class does not directly specify any specific geometry by itself, but merely provides manipulation methods inherited by a whole category of &lt;code&gt;Shape&lt;/code&gt; objects. The manipulation methods provided by this class can be used to query and modify the rectangular frame, which provides a reference for the subclasses to define their geometry.</source>
          <target state="translated">&lt;code&gt;RectangularShape&lt;/code&gt; is the base class for a number of &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; objects whose geometry is defined by a rectangular frame. This class does not directly specify any specific geometry by itself, but merely provides manipulation methods inherited by a whole category of &lt;code&gt;Shape&lt;/code&gt; objects. The manipulation methods provided by this class can be used to query and modify the rectangular frame, which provides a reference for the subclasses to define their geometry.</target>
        </trans-unit>
        <trans-unit id="b405d689b832d3e935123ce31bb2b643c2b65904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Redirect&lt;/code&gt; policy is set through the &lt;a href=&quot;httpclient.builder#followRedirects(java.net.http.HttpClient.Redirect)&quot;&gt;Builder.followRedirects&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;Redirect&lt;/code&gt; policy is set through the &lt;a href=&quot;httpclient.builder#followRedirects(java.net.http.HttpClient.Redirect)&quot;&gt;Builder.followRedirects&lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="3270607507eec3e0380e86661b6b97a44f66cb59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ref&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;REF&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Ref&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;REF&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e171fb3a12d4c7971286d8920295e04b989404f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReferralException&lt;/code&gt; is an abstract class. Concrete implementations determine its synchronization and serialization properties.</source>
          <target state="translated">&lt;code&gt;ReferralException&lt;/code&gt; 은 추상 클래스입니다. 구체적인 구현은 동기화 및 직렬화 속성을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="0abee82700c66126c40567a46238d65513f57497" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Registry&lt;/code&gt; is a remote interface to a simple remote object registry that provides methods for storing and retrieving remote object references bound with arbitrary string names.</source>
          <target state="translated">&lt;code&gt;Registry&lt;/code&gt; is a remote interface to a simple remote object registry that provides methods for storing and retrieving remote object references bound with arbitrary string names.</target>
        </trans-unit>
        <trans-unit id="ffa9f67a6e6e8cc3751736392cd46e339e63274d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Registry&lt;/code&gt; is a remote interface to a simple remote object registry that provides methods for storing and retrieving remote object references bound with arbitrary string names. The &lt;code&gt;bind&lt;/code&gt;, &lt;code&gt;unbind&lt;/code&gt;, and &lt;code&gt;rebind&lt;/code&gt; methods are used to alter the name bindings in the registry, and the &lt;code&gt;lookup&lt;/code&gt; and &lt;code&gt;list&lt;/code&gt; methods are used to query the current name bindings.</source>
          <target state="translated">&lt;code&gt;Registry&lt;/code&gt; is a remote interface to a simple remote object registry that provides methods for storing and retrieving remote object references bound with arbitrary string names. The &lt;code&gt;bind&lt;/code&gt; , &lt;code&gt;unbind&lt;/code&gt; , and &lt;code&gt;rebind&lt;/code&gt; methods are used to alter the name bindings in the registry, and the &lt;code&gt;lookup&lt;/code&gt; and &lt;code&gt;list&lt;/code&gt; methods are used to query the current name bindings.</target>
        </trans-unit>
        <trans-unit id="fed59a121a01f78e1d40cee1c3e9e212b4884dfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegistryHandler&lt;/code&gt; is an interface used internally by the RMI runtime in previous implementation versions. It should never be accessed by application code.</source>
          <target state="translated">&lt;code&gt;RegistryHandler&lt;/code&gt; is an interface used internally by the RMI runtime in previous implementation versions. It should never be accessed by application code.</target>
        </trans-unit>
        <trans-unit id="3991f2a2d42fbb14855a3e612c11e7d44be6a32d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RemoteCall&lt;/code&gt; is an abstraction used solely by the RMI runtime (in conjunction with stubs and skeletons of remote objects) to carry out a call to a remote object. The &lt;code&gt;RemoteCall&lt;/code&gt; interface is deprecated because it is only used by deprecated methods of &lt;code&gt;java.rmi.server.RemoteRef&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RemoteCall&lt;/code&gt; is an abstraction used solely by the RMI runtime (in conjunction with stubs and skeletons of remote objects) to carry out a call to a remote object. The &lt;code&gt;RemoteCall&lt;/code&gt; interface is deprecated because it is only used by deprecated methods of &lt;code&gt;java.rmi.server.RemoteRef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70b15fba3fa84029ec247e5de0cb62463efb7d62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RemoteObjectInvocationHandler&lt;/code&gt; implements this method as follows:</source>
          <target state="translated">&lt;code&gt;RemoteObjectInvocationHandler&lt;/code&gt; implements this method as follows:</target>
        </trans-unit>
        <trans-unit id="68faf08f5939f3b3edd3d6736a08fe3892a2bc16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RemoteRef&lt;/code&gt; represents the handle for a remote object.</source>
          <target state="translated">&lt;code&gt;RemoteRef&lt;/code&gt; represents the handle for a remote object.</target>
        </trans-unit>
        <trans-unit id="f96ccdf7740dbaec50ae8c3f8d8d081f971af8b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RemoteRef&lt;/code&gt; represents the handle for a remote object. A &lt;code&gt;RemoteStub&lt;/code&gt; uses a remote reference to carry out a remote method invocation to a remote object.</source>
          <target state="translated">&lt;code&gt;RemoteRef&lt;/code&gt; represents the handle for a remote object. A &lt;code&gt;RemoteStub&lt;/code&gt; uses a remote reference to carry out a remote method invocation to a remote object.</target>
        </trans-unit>
        <trans-unit id="d612181669519d05eb73f1a010b91c5bc950e970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResolvedModule&lt;/code&gt; defines the &lt;a href=&quot;#configuration()&quot;&gt;&lt;code&gt;configuration&lt;/code&gt;&lt;/a&gt; method to get the configuration that the resolved module is in. It defines the &lt;a href=&quot;#reference()&quot;&gt;&lt;code&gt;reference&lt;/code&gt;&lt;/a&gt; method to get the reference to the module's content.</source>
          <target state="translated">&lt;code&gt;ResolvedModule&lt;/code&gt; defines the &lt;a href=&quot;#configuration()&quot;&gt; &lt;code&gt;configuration&lt;/code&gt; &lt;/a&gt; method to get the configuration that the resolved module is in. It defines the &lt;a href=&quot;#reference()&quot;&gt; &lt;code&gt;reference&lt;/code&gt; &lt;/a&gt; method to get the reference to the module's content.</target>
        </trans-unit>
        <trans-unit id="7002152bf7373912ffbca68bcdc0b39553fb6bb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; factory methods during the bundle loading process.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt; factory methods during the bundle loading process.</target>
        </trans-unit>
        <trans-unit id="d3aaf853b7b606795204fe52223c22b18f4e96f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;resourcebundle#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; factory methods during the bundle loading process.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;resourcebundle#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt; factory methods during the bundle loading process.</target>
        </trans-unit>
        <trans-unit id="1b8639d51169c0c5effd0eb8b76da726ad17c9eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;resourcebundle#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; factory methods during the bundle loading process. In other words, a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; collaborates with the factory methods for loading resource bundles. The default implementation of the callback methods provides the information necessary for the factory methods to perform the &lt;a href=&quot;resourcebundle#default_behavior&quot;&gt;default behavior&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;resourcebundle#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt; factory methods during the bundle loading process. In other words, a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; collaborates with the factory methods for loading resource bundles. The default implementation of the callback methods provides the information necessary for the factory methods to perform the &lt;a href=&quot;resourcebundle#default_behavior&quot;&gt;default behavior&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9bc668c8bbed6dc5bb76e0f70a605ac7573114b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; factory methods during the bundle loading process.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.Control&lt;/code&gt; 은 번들로드 프로세스 중에 &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt; 팩토리 메소드에 의해 호출되는 콜백 메소드 세트를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="8e93382bf5a4bd6d45990819ce9ad24466ec435c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; factory methods during the bundle loading process. In other words, a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; collaborates with the factory methods for loading resource bundles. The default implementation of the callback methods provides the information necessary for the factory methods to perform the &lt;a href=&quot;resourcebundle#default_behavior&quot;&gt;default behavior&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.Control&lt;/code&gt; 은 번들로드 프로세스 중에 &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt; 팩토리 메소드에 의해 호출되는 콜백 메소드 세트를 정의합니다 . 즉, &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 은 자원 번들을로드하기위한 팩토리 메소드와 협업합니다. 콜백 메소드의 기본 구현은 팩토리 메소드가 &lt;a href=&quot;resourcebundle#default_behavior&quot;&gt;기본 동작&lt;/a&gt; 을 수행하는 데 필요한 정보를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="b4eaf806b6b4e5c2ab3718eb76827fa1167c3d5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle.Control&lt;/code&gt; is not supported in named modules. If the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; method with a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; is called in a named module, the method will throw an &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;. Any service providers of &lt;a href=&quot;spi/resourcebundlecontrolprovider&quot;&gt;&lt;code&gt;ResourceBundleControlProvider&lt;/code&gt;&lt;/a&gt; are ignored in named modules.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.Control&lt;/code&gt; is not supported in named modules. If the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; method with a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; is called in a named module, the method will throw an &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;. Any service providers of &lt;a href=&quot;spi/resourcebundlecontrolprovider&quot;&gt; &lt;code&gt;ResourceBundleControlProvider&lt;/code&gt; &lt;/a&gt; are ignored in named modules.</target>
        </trans-unit>
        <trans-unit id="631d53d09c73a80467cf823de9d98a388619ab47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle&lt;/code&gt; of the given &lt;code&gt;baseName&lt;/code&gt; and &lt;code&gt;locale&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if no resource bundle is found</source>
          <target state="translated">&lt;code&gt;ResourceBundle&lt;/code&gt; of the given &lt;code&gt;baseName&lt;/code&gt; and &lt;code&gt;locale&lt;/code&gt; , or &lt;code&gt;null&lt;/code&gt; if no resource bundle is found</target>
        </trans-unit>
        <trans-unit id="b8c05ab03857e0e09e08e9100b575af7d33249f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundleProvider&lt;/code&gt; is a service provider interface for resource bundles.</source>
          <target state="translated">&lt;code&gt;ResourceBundleProvider&lt;/code&gt; is a service provider interface for resource bundles.</target>
        </trans-unit>
        <trans-unit id="0ccb808daa165b14dbbb698c6c5ff159bd58486e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundleProvider&lt;/code&gt; is a service provider interface for resource bundles. It is used by &lt;a href=&quot;../resourcebundle#getBundle(java.lang.String)&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; factory methods to locate and load the service providers that are deployed as modules via &lt;a href=&quot;../serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ResourceBundleProvider&lt;/code&gt; is a service provider interface for resource bundles. It is used by &lt;a href=&quot;../resourcebundle#getBundle(java.lang.String)&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt; factory methods to locate and load the service providers that are deployed as modules via &lt;a href=&quot;../serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a4c954169d57604e9a0c6c189ae2fa340694e007" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet.TYPE_FORWARD_ONLY&lt;/code&gt;, &lt;code&gt;ResultSet.TYPE_SCROLL_INSENSITIVE&lt;/code&gt;, or &lt;code&gt;ResultSet.TYPE_SCROLL_SENSITIVE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ResultSet.TYPE_FORWARD_ONLY&lt;/code&gt; , &lt;code&gt;ResultSet.TYPE_SCROLL_INSENSITIVE&lt;/code&gt; , or &lt;code&gt;ResultSet.TYPE_SCROLL_SENSITIVE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a666ccf1634b9e5f0677cbe41c2a500bf0a8f95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row describes a stored procedure parameter or column</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row describes a stored procedure parameter or column</target>
        </trans-unit>
        <trans-unit id="19b7b0a589025cbcfb6a4b1905708eb16d587ca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row describes a user function parameter, column or return type</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row describes a user function parameter, column or return type</target>
        </trans-unit>
        <trans-unit id="4a0456197c8cf4c0b3a0da8e6e8ba419471f1e7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a column description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row is a column description</target>
        </trans-unit>
        <trans-unit id="965d886d08cb7bc3c7c54206ece75834c564a66a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a column privilege description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row is a column privilege description</target>
        </trans-unit>
        <trans-unit id="e74705730655155da6310bb90a817d5d3c01462c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a foreign key column description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row is a foreign key column description</target>
        </trans-unit>
        <trans-unit id="1721e34c1dfcb5a1dbc19b26e34f4448c895c681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a function description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row is a function description</target>
        </trans-unit>
        <trans-unit id="72e7841c8e3a8213bccb775b04db24de85e0f00c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a primary key column description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row is a primary key column description</target>
        </trans-unit>
        <trans-unit id="fd09482cc86833da653ab8c54602d9662610bd0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a procedure description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row is a procedure description</target>
        </trans-unit>
        <trans-unit id="659a085aade031f021812f066a8e58efcdb9402b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a table description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row is a table description</target>
        </trans-unit>
        <trans-unit id="cae558a7051ea9a7111c08597ce537782d5d3c25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a table privilege description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row is a table privilege description</target>
        </trans-unit>
        <trans-unit id="fd54fff16f1300e9793c28198f2d030ec7e24c75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is an index column description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row is an index column description</target>
        </trans-unit>
        <trans-unit id="0e78e7fcda18bca9e2ed8a0f523e0310209e866b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; holdability -- ability to specify whether cursors should be held open or closed at the end of a transaction</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; holdability -- ability to specify whether cursors should be held open or closed at the end of a transaction</target>
        </trans-unit>
        <trans-unit id="b05cd551de56bd90029b38b7ae884cd394685efe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; interface</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; interface</target>
        </trans-unit>
        <trans-unit id="2513acd82505e81f2dde2ba7576159ee9369894a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; object in which each row describes a UDT</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; object in which each row describes a UDT</target>
        </trans-unit>
        <trans-unit id="a1658e8024878241ba251caea41c2d3133894bc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSetMetaData&lt;/code&gt; interface -- provides information about the columns of a &lt;code&gt;ResultSet&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;ResultSetMetaData&lt;/code&gt; interface -- provides information about the columns of a &lt;code&gt;ResultSet&lt;/code&gt; object</target>
        </trans-unit>
        <trans-unit id="c2d9f791677a368b321a608cb8eec1ce67b0e10e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RoundingMode&lt;/code&gt; corresponding to the given integer.</source>
          <target state="translated">&lt;code&gt;RoundingMode&lt;/code&gt; 주어진 정수에 해당하는 RoundingMode .</target>
        </trans-unit>
        <trans-unit id="1fdcf84ed5053a874f5d4162c341a513473a7e63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowFilter&lt;/code&gt; has two formal type parameters that allow you to create a &lt;code&gt;RowFilter&lt;/code&gt; for a specific model. For example, the following assumes a specific model that is wrapping objects of type &lt;code&gt;Person&lt;/code&gt;. Only &lt;code&gt;Person&lt;/code&gt;s with an age over 20 will be shown:</source>
          <target state="translated">&lt;code&gt;RowFilter&lt;/code&gt; has two formal type parameters that allow you to create a &lt;code&gt;RowFilter&lt;/code&gt; for a specific model. For example, the following assumes a specific model that is wrapping objects of type &lt;code&gt;Person&lt;/code&gt; . Only &lt;code&gt;Person&lt;/code&gt; s with an age over 20 will be shown:</target>
        </trans-unit>
        <trans-unit id="54f6778f7acce0cfe887ed685880049c58947337" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowFilter&lt;/code&gt; is used to filter out entries from the model so that they are not shown in the view.</source>
          <target state="translated">&lt;code&gt;RowFilter&lt;/code&gt; is used to filter out entries from the model so that they are not shown in the view.</target>
        </trans-unit>
        <trans-unit id="5e7a2b096ed31692163aec67d7170f9ce5401c2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowFilter&lt;/code&gt; is used to filter out entries from the model so that they are not shown in the view. For example, a &lt;code&gt;RowFilter&lt;/code&gt; associated with a &lt;code&gt;JTable&lt;/code&gt; might only allow rows that contain a column with a specific string. The meaning of &lt;em&gt;entry&lt;/em&gt; depends on the component type. For example, when a filter is associated with a &lt;code&gt;JTable&lt;/code&gt;, an entry corresponds to a row; when associated with a &lt;code&gt;JTree&lt;/code&gt;, an entry corresponds to a node.</source>
          <target state="translated">&lt;code&gt;RowFilter&lt;/code&gt; is used to filter out entries from the model so that they are not shown in the view. For example, a &lt;code&gt;RowFilter&lt;/code&gt; associated with a &lt;code&gt;JTable&lt;/code&gt; might only allow rows that contain a column with a specific string. The meaning of &lt;em&gt;entry&lt;/em&gt; depends on the component type. For example, when a filter is associated with a &lt;code&gt;JTable&lt;/code&gt; , an entry corresponds to a row; when associated with a &lt;code&gt;JTree&lt;/code&gt; , an entry corresponds to a node.</target>
        </trans-unit>
        <trans-unit id="a62bad87bb32530e6b909097040d2be3c34b03ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowFilter&lt;/code&gt;'s &lt;code&gt;include&lt;/code&gt; method is passed an &lt;code&gt;Entry&lt;/code&gt; that wraps the underlying model. The number of columns in the &lt;code&gt;Entry&lt;/code&gt; corresponds to the number of columns in the &lt;code&gt;ModelWrapper&lt;/code&gt;. The identifier comes from the &lt;code&gt;ModelWrapper&lt;/code&gt; as well.</source>
          <target state="translated">&lt;code&gt;RowFilter&lt;/code&gt; 's &lt;code&gt;include&lt;/code&gt; method is passed an &lt;code&gt;Entry&lt;/code&gt; that wraps the underlying model. The number of columns in the &lt;code&gt;Entry&lt;/code&gt; corresponds to the number of columns in the &lt;code&gt;ModelWrapper&lt;/code&gt; . The identifier comes from the &lt;code&gt;ModelWrapper&lt;/code&gt; as well.</target>
        </trans-unit>
        <trans-unit id="dd6fa59398a489e40df155285814ed3fd335b1ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowId&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;ROWID&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RowId&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;ROWID&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ffb3b24ad73205966a8adeadd3569c92ed985423" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSet&lt;/code&gt; implementations can use the method &lt;code&gt;RowSet.getURL()&lt;/code&gt; to retrieve a &lt;code&gt;java.net.URL&lt;/code&gt; object, which can be used to manipulate the external data.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; implementations can use the method &lt;code&gt;RowSet.getURL()&lt;/code&gt; to retrieve a &lt;code&gt;java.net.URL&lt;/code&gt; object, which can be used to manipulate the external data.</target>
        </trans-unit>
        <trans-unit id="b4a1850613de664696cd804e54eb0f449203871b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSet&lt;/code&gt; implementations can use the method &lt;code&gt;RowSet.getURL&lt;/code&gt; to retrieve a &lt;code&gt;java.net.URL&lt;/code&gt; object, which can be used to manipulate the external data.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; implementations can use the method &lt;code&gt;RowSet.getURL&lt;/code&gt; to retrieve a &lt;code&gt;java.net.URL&lt;/code&gt; object, which can be used to manipulate the external data.</target>
        </trans-unit>
        <trans-unit id="09de9dca764ed588784c655b559a3e3b5ada030a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSet&lt;/code&gt; objects that implement the &lt;code&gt;Joinable&lt;/code&gt; interface must ensure that a key-like constraint continues to be enforced until the method &lt;code&gt;CachedRowSet.unsetKeyColumns&lt;/code&gt; has been called on the designated column.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; objects that implement the &lt;code&gt;Joinable&lt;/code&gt; interface must ensure that a key-like constraint continues to be enforced until the method &lt;code&gt;CachedRowSet.unsetKeyColumns&lt;/code&gt; has been called on the designated column.</target>
        </trans-unit>
        <trans-unit id="44784d9b5d29a68624b98bd2ded6ab9ac38490c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSet&lt;/code&gt; technology -- providing a convenient means of handling and passing data</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; technology -- providing a convenient means of handling and passing data</target>
        </trans-unit>
        <trans-unit id="0eda6ada678c264b134ad0f4a5400d6cf8f6280f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorter&lt;/code&gt; implementations typically don't have a one-to-one mapping with the underlying model, but they can. For example, if a database does the sorting, &lt;code&gt;toggleSortOrder&lt;/code&gt; might call through to the database (on a background thread), and override the mapping methods to return the argument that is passed in.</source>
          <target state="translated">&lt;code&gt;RowSorter&lt;/code&gt; implementations typically don't have a one-to-one mapping with the underlying model, but they can. For example, if a database does the sorting, &lt;code&gt;toggleSortOrder&lt;/code&gt; might call through to the database (on a background thread), and override the mapping methods to return the argument that is passed in.</target>
        </trans-unit>
        <trans-unit id="821dd02c989cffdebf359529b5bc977c97ee2587" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorter&lt;/code&gt; provides notification of changes by way of &lt;code&gt;RowSorterListener&lt;/code&gt;. Two types of notification are sent:</source>
          <target state="translated">&lt;code&gt;RowSorter&lt;/code&gt; provides notification of changes by way of &lt;code&gt;RowSorterListener&lt;/code&gt; . Two types of notification are sent:</target>
        </trans-unit>
        <trans-unit id="9e9dd4a551b7e19a7005465bc5eb7a68e6b0d0e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorter&lt;/code&gt; provides the basis for sorting and filtering.</source>
          <target state="translated">&lt;code&gt;RowSorter&lt;/code&gt; provides the basis for sorting and filtering.</target>
        </trans-unit>
        <trans-unit id="62560c806671aaf7d19a928c426d7819649dcc57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorter&lt;/code&gt; provides the basis for sorting and filtering. Beyond creating and installing a &lt;code&gt;RowSorter&lt;/code&gt;, you very rarely need to interact with one directly. Refer to &lt;a href=&quot;table/tablerowsorter&quot;&gt;&lt;code&gt;TableRowSorter&lt;/code&gt;&lt;/a&gt; for a concrete implementation of &lt;code&gt;RowSorter&lt;/code&gt; for &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RowSorter&lt;/code&gt; provides the basis for sorting and filtering. Beyond creating and installing a &lt;code&gt;RowSorter&lt;/code&gt; , you very rarely need to interact with one directly. Refer to &lt;a href=&quot;table/tablerowsorter&quot;&gt; &lt;code&gt;TableRowSorter&lt;/code&gt; &lt;/a&gt; for a concrete implementation of &lt;code&gt;RowSorter&lt;/code&gt; for &lt;code&gt;JTable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db818f86fe7f0686c4451718d966191a1373bb41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorter&lt;/code&gt;'s primary role is to provide a mapping between two coordinate systems: that of the view (for example a &lt;code&gt;JTable&lt;/code&gt;) and that of the underlying data source, typically a model.</source>
          <target state="translated">&lt;code&gt;RowSorter&lt;/code&gt; 's primary role is to provide a mapping between two coordinate systems: that of the view (for example a &lt;code&gt;JTable&lt;/code&gt; ) and that of the underlying data source, typically a model.</target>
        </trans-unit>
        <trans-unit id="b8f8a1e97f3f4066ed71031f59df29b426956d2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorterEvent.Type.SORTED&lt;/code&gt; &amp;mdash; notifies listeners that the mapping maintained by the &lt;code&gt;RowSorter&lt;/code&gt; has changed in some way.</source>
          <target state="translated">&lt;code&gt;RowSorterEvent.Type.SORTED&lt;/code&gt; &amp;mdash; notifies listeners that the mapping maintained by the &lt;code&gt;RowSorter&lt;/code&gt; has changed in some way.</target>
        </trans-unit>
        <trans-unit id="9f504c4d653176c0e43badac606389ab84a8bdb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorterEvent.Type.SORT_ORDER_CHANGED&lt;/code&gt; &amp;mdash; notifies listeners that the sort order has changed. This is typically followed by a notification that the sort has changed.</source>
          <target state="translated">&lt;code&gt;RowSorterEvent.Type.SORT_ORDER_CHANGED&lt;/code&gt; &amp;mdash; notifies listeners that the sort order has changed. This is typically followed by a notification that the sort has changed.</target>
        </trans-unit>
        <trans-unit id="55ea85ba15fd90e0b02644c32317b957685b6952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorterEvent&lt;/code&gt; provides notification of changes to a &lt;code&gt;RowSorter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RowSorterEvent&lt;/code&gt; provides notification of changes to a &lt;code&gt;RowSorter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86e5506758545dc0f1ab2d607a1c53706cc9cb74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorterEvent&lt;/code&gt; provides notification of changes to a &lt;code&gt;RowSorter&lt;/code&gt;. Two types of notification are possible:</source>
          <target state="translated">&lt;code&gt;RowSorterEvent&lt;/code&gt; provides notification of changes to a &lt;code&gt;RowSorter&lt;/code&gt; . Two types of notification are possible:</target>
        </trans-unit>
        <trans-unit id="45061a9ac389f705c96fdc1e4deed6c56d6ca0b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorterListener&lt;/code&gt; notification that the &lt;code&gt;RowSorter&lt;/code&gt; has changed in some way.</source>
          <target state="translated">&lt;code&gt;RowSorterListener&lt;/code&gt; notification that the &lt;code&gt;RowSorter&lt;/code&gt; has changed in some way.</target>
        </trans-unit>
        <trans-unit id="3828badaa4cdbafd77514b7d80b2e45ab1745819" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorterListener&lt;/code&gt;s are notified of changes to a &lt;code&gt;RowSorter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RowSorterListener&lt;/code&gt; s are notified of changes to a &lt;code&gt;RowSorter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="386e45f1522a57e8d24fa65f7237c39a4cd48149" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuleBasedCollator&lt;/code&gt; automatically processes its rule table to include both pre-composed and combining-character versions of accented characters. Even if the provided rule string contains only base characters and separate combining accent characters, the pre-composed accented characters matching all canonical combinations of characters from the rule string will be entered in the table.</source>
          <target state="translated">&lt;code&gt;RuleBasedCollator&lt;/code&gt; 는 자동으로 규칙 테이블을 처리하여 악센트 문자의 사전 구성 및 결합 문자 버전을 모두 포함합니다. 제공된 규칙 문자열에 기본 문자와 별도의 결합 악센트 문자 만 포함되어 있어도 규칙 문자열의 모든 표준 조합 문자와 일치하는 미리 작성된 악센트 문자가 테이블에 입력됩니다.</target>
        </trans-unit>
        <trans-unit id="b5ca2151532edc56020ec873d9966225698866fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuleBasedCollator&lt;/code&gt; has the following restrictions for efficiency (other subclasses may be used for more complex languages) :</source>
          <target state="translated">&lt;code&gt;RuleBasedCollator&lt;/code&gt; 에는 효율성에 대한 다음 제한 사항이 있습니다 (다른 서브 클래스는 더 복잡한 언어에 사용될 수 있음).</target>
        </trans-unit>
        <trans-unit id="aed8291a7ad5e60c2d511c9d7c2bc1c5e9514b8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuntimeException&lt;/code&gt; and its subclasses are &lt;em&gt;unchecked exceptions&lt;/em&gt;. Unchecked exceptions do &lt;em&gt;not&lt;/em&gt; need to be declared in a method or constructor's &lt;code&gt;throws&lt;/code&gt; clause if they can be thrown by the execution of the method or constructor and propagate outside the method or constructor boundary.</source>
          <target state="translated">&lt;code&gt;RuntimeException&lt;/code&gt; 및 그 서브 클래스는 &lt;em&gt;미확인의 예외&lt;/em&gt; 입니다. 확인되지 않은 예외는 메소드 또는 생성자의 실행에 의해 발생하고 메소드 또는 생성자 경계 외부로 전파 될 수있는 경우 메소드 또는 생성자의 &lt;code&gt;throws&lt;/code&gt; 절 에서 선언 될 필요 가 &lt;em&gt;없습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ee89d7519d663a3f64bd7e4162d4413889ee0d23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuntimeException&lt;/code&gt; is the superclass of those exceptions that can be thrown during the normal operation of the Java Virtual Machine.</source>
          <target state="translated">&lt;code&gt;RuntimeException&lt;/code&gt; 은 Java Virtual Machine의 정상적인 작동 중에 발생할 수있는 예외의 수퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="fa2ba50f3b3f6212cb9e965aa1c39a14f6c55abb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - The service type</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - The service type</target>
        </trans-unit>
        <trans-unit id="607167fa6edcd61a86ed92347a5f708ed5ce5f90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - The type of the service to be loaded by this loader</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - 이 로더가로드 할 서비스의 유형</target>
        </trans-unit>
        <trans-unit id="aa7614aaa5d4f31668a529139146e6102c7b4f33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the class of the service type</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - 서비스 유형의 클래스</target>
        </trans-unit>
        <trans-unit id="0361ea17a61d6bdbcce0b1fb0fa44e097e82f58b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the memory segment type</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - 메모리 세그먼트 유형</target>
        </trans-unit>
        <trans-unit id="b456f70b973c54cd2560b6686e7a22c746d10e90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the service class</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - the service class</target>
        </trans-unit>
        <trans-unit id="927b65107d7f9a534c7cdbd3229a37c2f62bcca7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of of the stream implementing &lt;code&gt;BaseStream&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - &lt;code&gt;BaseStream&lt;/code&gt; 을 구현하는 스트림 유형</target>
        </trans-unit>
        <trans-unit id="548414ab1abf4affd37801c91b1896419aba2800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of source object used by this diagnostic</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - 이 진단에서 사용하는 소스 객체의 유형</target>
        </trans-unit>
        <trans-unit id="923b305de01acd1b3e85477885db89643548d938" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of source objects used by diagnostics received by this listener</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - 이 청취자가 수신 한 진단에 의해 사용되는 소스 객체의 타입</target>
        </trans-unit>
        <trans-unit id="3f2104735ab5900bc917a3c463944fa7a95f51e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of source objects used by diagnostics received by this object</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - 이 객체가 수신 한 진단에 사용되는 소스 객체의 유형</target>
        </trans-unit>
        <trans-unit id="e76302bbafeacbd22b0dda6b5b6514a1a75a10fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of the Subscriber</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - the type of the Subscriber</target>
        </trans-unit>
        <trans-unit id="10a980d8f23cdd89adb02637640b16ac5ed158f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of the stream implementing &lt;code&gt;BaseStream&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - the type of the stream implementing &lt;code&gt;BaseStream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca0fc77f39061845f23b81c1416f2d8b6edb4a38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of the thread local's value</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - 스레드 로컬 값의 유형</target>
        </trans-unit>
        <trans-unit id="5a936b609567701f674df21513fe38d96d018bc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SAXParser&lt;/code&gt; is reset to the same state as when it was created with &lt;a href=&quot;saxparserfactory#newSAXParser()&quot;&gt;&lt;code&gt;SAXParserFactory.newSAXParser()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;reset()&lt;/code&gt; is designed to allow the reuse of existing &lt;code&gt;SAXParser&lt;/code&gt;s thus saving resources associated with the creation of new &lt;code&gt;SAXParser&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SAXParser&lt;/code&gt; is reset to the same state as when it was created with &lt;a href=&quot;saxparserfactory#newSAXParser()&quot;&gt; &lt;code&gt;SAXParserFactory.newSAXParser()&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;reset()&lt;/code&gt; is designed to allow the reuse of existing &lt;code&gt;SAXParser&lt;/code&gt; s thus saving resources associated with the creation of new &lt;code&gt;SAXParser&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="f27f6467b7b3911aebccb5f1ecc6dd64a3a6d2c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCROLLBARS_BOTH&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;SCROLLBARS_BOTH&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="92bc058aa5512a5acc8b9fe578de2b07fd794e68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCROLLBARS_HORIZONTAL_ONLY&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;SCROLLBARS_HORIZONTAL_ONLY&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="47c2269c028775e7b57c9959022e7c0cd0de20c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCROLLBARS_NONE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SCROLLBARS_NONE&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="a3169927a13b8ae78e660803e302207f5475c1c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCROLLBARS_VERTICAL_ONLY&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;SCROLLBARS_VERTICAL_ONLY&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="083db2bc433e705fdbdc2302b4fd77c5cf1db1e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECONDS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of seconds added. This is equivalent to &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SECONDS&lt;/code&gt; - 지정된 시간 (초)이 추가 된 &lt;code&gt;Instant&lt;/code&gt; 을 반환합니다 . 이것은 &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="8daa819d4664a473d84d152122968917b7078334" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECONDS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of seconds added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SECONDS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of seconds added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="da8c097475c769ccd39c187184fe7a13eec9caa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECONDS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of seconds added. This is equivalent to &lt;a href=&quot;localtime#plusSeconds-long-&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SECONDS&lt;/code&gt; - 반환 &lt;code&gt;LocalTime&lt;/code&gt; 추가 지정된 시간 (초)에 있습니다. 이것은 &lt;a href=&quot;localtime#plusSeconds-long-&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="2a9f10907263955203ea7c5a553c4ed004b8cde3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECONDS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of seconds added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SECONDS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of seconds added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7034306b5bc65e85fe377cb02c4fd3599a6a8bdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECOND_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified second-of-day. The nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;SECOND_OF_DAY&lt;/code&gt; - 지정된 요일이 있는 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 나노초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6842382cc3006eb68d8b59c27b0f511e0e9fb383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified second-of-minute. The hour, minute and nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; - 지정된 분 단위의 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 시, 분 및 나노초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ab6a7728328b9be64727231fc085295cecab0b7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with its own specified binding.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with its own specified binding.</target>
        </trans-unit>
        <trans-unit id="4ab9f055d4326082fe06c53eee2c0cf10701caf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with the specified binding.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with the specified binding.</target>
        </trans-unit>
        <trans-unit id="6347cd0491acb8347236f100472700863890005e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- For each separate input doc, its own specified page ranges will be printed.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- For each separate input doc, its own specified page ranges will be printed.</target>
        </trans-unit>
        <trans-unit id="ccf283f83435567d18ec74050bd29449c6deb5b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- For each separate input doc, the specified page ranges will be printed.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- For each separate input doc, the specified page ranges will be printed.</target>
        </trans-unit>
        <trans-unit id="9beda333d4a836f62192f3e0f6a2e6643e5da185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media impression will consist of</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media impression will consist of</target>
        </trans-unit>
        <trans-unit id="a93e331637f6fd9bd3256f375b9f510a887ff2af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media sheet will consist of</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media sheet will consist of</target>
        </trans-unit>
        <trans-unit id="f49da7ed0a139da1b3fad1754c030eee7f46f759" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. For input doc</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. For input doc</target>
        </trans-unit>
        <trans-unit id="8b55e046de6824337553dda006227aecb2651efa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The result will be the first input document, the second input document, . . . the last input document, the group of documents being repeated</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The result will be the first input document, the second input document, . . . the last input document, the group of documents being repeated</target>
        </trans-unit>
        <trans-unit id="a6d5354f4169de474e66ec2ec5b2be74d114b9e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with its own specified binding.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with its own specified binding.</target>
        </trans-unit>
        <trans-unit id="fb9b7c8d7450f822cfc2b40569db13a0e4001f08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with the specified binding.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with the specified binding.</target>
        </trans-unit>
        <trans-unit id="1cd2f03eb02556539762d77ade16a2db8b82fc7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- For each separate input doc, its own specified page ranges will be printed.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- For each separate input doc, its own specified page ranges will be printed.</target>
        </trans-unit>
        <trans-unit id="f7d1c776009c54c4959cf568c548bc24270781f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- For each separate input doc, the specified page ranges will be printed.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- For each separate input doc, the specified page ranges will be printed.</target>
        </trans-unit>
        <trans-unit id="6f121433c698e8ff2fe2ad8a4e153959a0ec0997" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media impression will consist of</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media impression will consist of</target>
        </trans-unit>
        <trans-unit id="8e0810edae4d87f2e7d2c1d211d38b1c4655612c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media sheet will consist of</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media sheet will consist of</target>
        </trans-unit>
        <trans-unit id="2587d4f86db5bdeaddd06c692c256e7332e525a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. For input doc</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. For input doc</target>
        </trans-unit>
        <trans-unit id="210594f2cd002c755cc021facd147c1df9f8ae40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The result will be</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The result will be</target>
        </trans-unit>
        <trans-unit id="a5748cd343f6cdf345d9cff9449b2a51d598ea4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHIFT-TAB&lt;/code&gt; on &lt;code&gt;KEY_PRESSED&lt;/code&gt;, &lt;code&gt;CTRL-SHIFT-TAB&lt;/code&gt; on &lt;code&gt;KEY_PRESSED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SHIFT-TAB&lt;/code&gt; on &lt;code&gt;KEY_PRESSED&lt;/code&gt; , &lt;code&gt;CTRL-SHIFT-TAB&lt;/code&gt; on &lt;code&gt;KEY_PRESSED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26950784cf000632a2bbcff7001eed528ba0fe51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be bound together as one output document with the specified binding.</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be bound together as one output document with the specified binding.</target>
        </trans-unit>
        <trans-unit id="48b4d0f440d9a4632ee4e1ab6c1d1ca2f3a4ef05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media impression will consist of</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media impression will consist of</target>
        </trans-unit>
        <trans-unit id="c680e0fba084cf66acab19081ed0dc5bb1779eb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media sheet will consist of</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media sheet will consist of</target>
        </trans-unit>
        <trans-unit id="de8fee43c483a13dd9c4f9dd4a0f495579009952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be combined together into one output document. The specified page ranges of that output document will be printed.</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be combined together into one output document. The specified page ranges of that output document will be printed.</target>
        </trans-unit>
        <trans-unit id="f3f31b4bdc3174848c8e179b65054503546b9a4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- The result will be</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- The result will be</target>
        </trans-unit>
        <trans-unit id="3b26c8e40fea57b0d38ed587c63d23997b4ccf5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; is the same as &lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; with respect to ordering of print-stream pages, but not media sheet generation, since &lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; will put the first page of the next document on the back side of a sheet if an odd number of pages have been produced so far for the job, while &lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; always forces the next document or document copy on to a new sheet.</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; is the same as &lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; with respect to ordering of print-stream pages, but not media sheet generation, since &lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; will put the first page of the next document on the back side of a sheet if an odd number of pages have been produced so far for the job, while &lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; always forces the next document or document copy on to a new sheet.</target>
        </trans-unit>
        <trans-unit id="0927f05eef173a899f75065bebef4a7132163637" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be bound together as one output document with the specified binding, and the first impression of each input doc will always start on a new media sheet.</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be bound together as one output document with the specified binding, and the first impression of each input doc will always start on a new media sheet.</target>
        </trans-unit>
        <trans-unit id="0931ecdef69e8e5bd3af0cad3d9ff0ef67e6283a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be combined together into one output document, and the first impression of each input doc will always start on a new media sheet. The specified page ranges of that output document will be printed.</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be combined together into one output document, and the first impression of each input doc will always start on a new media sheet. The specified page ranges of that output document will be printed.</target>
        </trans-unit>
        <trans-unit id="5b9ed75db8c5da2a8b35d314b80be3505c2b57ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media impression will consist of</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media impression will consist of</target>
        </trans-unit>
        <trans-unit id="fabb1b8ef5e998d853356a02979098fd6094277f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media sheet will consist of</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media sheet will consist of</target>
        </trans-unit>
        <trans-unit id="d9338cdd4e544485897b042b4bf2ef15c7fa4e5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- The result will be</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- The result will be</target>
        </trans-unit>
        <trans-unit id="f3cbbad3b7929587ebfb11751f16a3791b2a765c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SNIMatcher&lt;/code&gt; objects are immutable. Subclasses should not provide methods that can change the state of an instance once it has been created.</source>
          <target state="translated">&lt;code&gt;SNIMatcher&lt;/code&gt; 객체는 변경할 수 없습니다. 서브 클래스는 생성 된 인스턴스의 상태를 변경할 수있는 메소드를 제공해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="12bf6f9be7c1428c486b2da202c2c67d5c1852f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SNIServerName&lt;/code&gt; objects are immutable. Subclasses should not provide methods that can change the state of an instance once it has been created.</source>
          <target state="translated">&lt;code&gt;SNIServerName&lt;/code&gt; 오브젝트는 변경할 수 없습니다. 서브 클래스는 생성 된 인스턴스의 상태를 변경할 수있는 메소드를 제공해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="a10380367af0114ace1aac4951a2770e8534310f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLData&lt;/code&gt; interface -- specifies the mapping of a UDT to an instance of this class</source>
          <target state="translated">&lt;code&gt;SQLData&lt;/code&gt; 인터페이스-이 클래스의 인스턴스에 대한 UDT 매핑을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2b7155e66a20ff83c051a18fac2935325e3abaa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLException&lt;/code&gt; -- thrown by most methods when there is a problem accessing data and by some methods for other reasons</source>
          <target state="translated">&lt;code&gt;SQLException&lt;/code&gt; - 데이터 액세스에 문제가있을 때 대부분의 메서드에서 발생하고 다른 이유로 인해 일부 메서드에서 발생</target>
        </trans-unit>
        <trans-unit id="85f7ee54affd1251e2412911fc8d6b52ac71b1de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLInput&lt;/code&gt; interface -- provides methods for reading UDT attributes from a stream</source>
          <target state="translated">&lt;code&gt;SQLInput&lt;/code&gt; 인터페이스-스트림에서 UDT 속성을 읽는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d4cb807b69d5277300f5667d62d674001a729cef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLOutput&lt;/code&gt; interface -- provides methods for writing UDT attributes back to a stream</source>
          <target state="translated">&lt;code&gt;SQLOutput&lt;/code&gt; 인터페이스-UDT 속성을 스트림에 다시 쓰는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="09efcbdf7586109e577d7fad691ee5bd1a6f6a5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLPermission&lt;/code&gt; class -- provides permission when code running within a Security Manager, such as an applet, attempts to set up a logging stream through the &lt;code&gt;DriverManager&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SQLPermission&lt;/code&gt; 클래스-애플릿과 같은 보안 관리자 내에서 실행되는 코드가 &lt;code&gt;DriverManager&lt;/code&gt; 를 통해 로깅 스트림을 설정하려고 할 때 권한을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0bdb5b8e6def6cb0fcf4bd36bd5d471b39015774" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLState&lt;/code&gt; - an XOPEN code identifying the warning; if a non standard XOPEN</source>
          <target state="translated">&lt;code&gt;SQLState&lt;/code&gt; - 경고를 식별하는 XOPEN 코드. 비표준 XOPEN 인 경우</target>
        </trans-unit>
        <trans-unit id="8da05d2d7563c425db843a8204e1b1ff0d74e2fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLState&lt;/code&gt; - an XOPEN or SQL:2003 code identifying the exception</source>
          <target state="translated">&lt;code&gt;SQLState&lt;/code&gt; - 예외를 식별하는 XOPEN 또는 SQL : 2003 코드</target>
        </trans-unit>
        <trans-unit id="a147eab74994e05107b5fe8882f54d43d9f00aca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLState&lt;/code&gt; - an XOPEN or SQL:2003 code identifying the warning</source>
          <target state="translated">&lt;code&gt;SQLState&lt;/code&gt; - 경고를 식별하는 XOPEN 또는 SQL : 2003 코드</target>
        </trans-unit>
        <trans-unit id="ddfd7f3af12152280ead5a5d8a5fa085b5cb540a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLType&lt;/code&gt; - the column's SQL type</source>
          <target state="translated">&lt;code&gt;SQLType&lt;/code&gt; - 열의 SQL 유형</target>
        </trans-unit>
        <trans-unit id="d0bf228575646ed283a6e706d05753a737448583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLType&lt;/code&gt; - the designated column's SQL type, which must be one of the constants in the class &lt;code&gt;java.sql.Types&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SQLType&lt;/code&gt; - 지정된 열의 SQL 유형. &lt;code&gt;java.sql.Types&lt;/code&gt; 클래스의 상수 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="b034a56720b573ab6b1faf386635a56eba8baaaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLWarning&lt;/code&gt; -- thrown to indicate a warning</source>
          <target state="translated">&lt;code&gt;SQLWarning&lt;/code&gt; - 경고를 나타 내기 위해 발생</target>
        </trans-unit>
        <trans-unit id="632c8c3c9e45befc0bcba234f66777737fadab06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLXML&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;XML&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SQLXML&lt;/code&gt; 인터페이스-SQL &lt;code&gt;XML&lt;/code&gt; 매핑</target>
        </trans-unit>
        <trans-unit id="f6ff64a6c409ff2f4d27d351ef9a48df78196a84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLEngine&lt;/code&gt; application data buffers must be large enough to hold the application data from any inbound network application data packet received. Typically, outbound application data buffers can be of any size.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 애플리케이션 데이터 버퍼는 수신 된 인바운드 네트워크 애플리케이션 데이터 패킷의 애플리케이션 데이터를 보유 할 수있을 정도로 커야합니다. 일반적으로 아웃 바운드 응용 프로그램 데이터 버퍼는 임의의 크기 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52b5f6df8a8bd32a9beddeb5913cb0fa3f281bb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLEngine&lt;/code&gt; implementations may use the &lt;code&gt;peerHost&lt;/code&gt; and &lt;code&gt;peerPort&lt;/code&gt; parameters as hints for their internal session reuse strategy.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 구현은 사용할 수 &lt;code&gt;peerHost&lt;/code&gt; 와 &lt;code&gt;peerPort&lt;/code&gt; 을 내부 세션의 재사용에 관한 힌트 같은 파라미터.</target>
        </trans-unit>
        <trans-unit id="4cb4bc4aa36ce9c29b5969f549ad3158ac08d8d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLEngine&lt;/code&gt; operations may require the results of operations that block, or may take an extended period of time to complete. This method is used to obtain an outstanding &lt;a href=&quot;../../../java/lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; operation (task). Each task must be assigned a thread (possibly the current) to perform the &lt;a href=&quot;../../../java/lang/runnable#run()&quot;&gt;&lt;code&gt;run&lt;/code&gt;&lt;/a&gt; operation. Once the &lt;code&gt;run&lt;/code&gt; method returns, the &lt;code&gt;Runnable&lt;/code&gt; object is no longer needed and may be discarded.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 작업은 차단 된 작업의 결과를 요구하거나 완료하는 데 오랜 시간이 걸릴 수 있습니다. 이 방법은 뛰어난 &lt;a href=&quot;../../../java/lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt; 작업 (작업) 을 얻는 데 사용됩니다 . &lt;a href=&quot;../../../java/lang/runnable#run()&quot;&gt; &lt;code&gt;run&lt;/code&gt; &lt;/a&gt; 작업 을 수행하려면 각 작업에 스레드 (현재 작업)가 할당되어야합니다 . &lt;code&gt;run&lt;/code&gt; 메서드가 반환 되면 &lt;code&gt;Runnable&lt;/code&gt; 개체는 더 이상 필요하지 않으며 버릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e124743cbfae1376018f7988b134ed5eadc09910" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLEngine&lt;/code&gt; operations may require the results of operations that block, or may take an extended period of time to complete. This method is used to obtain an outstanding &lt;a href=&quot;../../../java/lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; operation (task). Each task must be assigned a thread (possibly the current) to perform the &lt;a href=&quot;../../../java/lang/runnable#run--&quot;&gt;&lt;code&gt;run&lt;/code&gt;&lt;/a&gt; operation. Once the &lt;code&gt;run&lt;/code&gt; method returns, the &lt;code&gt;Runnable&lt;/code&gt; object is no longer needed and may be discarded.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 조작은 차단하는 조작 결과가 필요할 수 있거나 완료하는 데 오랜 시간이 걸릴 수 있습니다. 이 방법은 뛰어난 &lt;a href=&quot;../../../java/lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt; 작업 (작업) 을 얻는 데 사용됩니다 . &lt;a href=&quot;../../../java/lang/runnable#run--&quot;&gt; &lt;code&gt;run&lt;/code&gt; &lt;/a&gt; 작업 을 수행하려면 각 작업에 스레드 (현재)가 할당되어 있어야합니다 . &lt;code&gt;run&lt;/code&gt; 메소드가 리턴 되면 &lt;code&gt;Runnable&lt;/code&gt; 오브젝트가 더 이상 필요하지 않으므로 버릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e32ee651bece7ee367ccb4b46f18627e0d3f5ca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLServerSocket&lt;/code&gt;s contain several pieces of state data which are inherited by the &lt;code&gt;SSLSocket&lt;/code&gt; at socket creation. These include the enabled cipher suites and protocols, whether client authentication is necessary, and whether created sockets should begin handshaking in client or server mode. The state inherited by the created &lt;code&gt;SSLSocket&lt;/code&gt; can be overriden by calling the appropriate methods.</source>
          <target state="translated">&lt;code&gt;SSLServerSocket&lt;/code&gt; 은 소켓 작성시 &lt;code&gt;SSLSocket&lt;/code&gt; 에 의해 상속되는 여러 상태 데이터 조각을 포함합니다 . 여기에는 활성화 된 암호 제품군 및 프로토콜, 클라이언트 인증이 필요한지 여부 및 생성 된 소켓이 클라이언트 또는 서버 모드에서 핸드 셰이 킹을 시작할지 여부가 포함됩니다. 작성된 &lt;code&gt;SSLSocket&lt;/code&gt; 에 의해 상속 된 상태 는 적절한 메소드를 호출하여 대체 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2857607296e17100bc99874e4f9e9d9ba422abc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLServerSocketFactory&lt;/code&gt;s create &lt;code&gt;SSLServerSocket&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SSLServerSocketFactory&lt;/code&gt; 의 작성 &lt;code&gt;SSLServerSocket&lt;/code&gt; 에 의.</target>
        </trans-unit>
        <trans-unit id="95a5d586a821b29834bc1c2e75c552ba7da26391" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLSocket&lt;/code&gt;s returned from &lt;code&gt;accept()&lt;/code&gt; inherit this setting.</source>
          <target state="translated">&lt;code&gt;SSLSocket&lt;/code&gt; &lt;code&gt;accept()&lt;/code&gt; 에서 리턴 된 SSLSocket 은이 설정을 상속합니다.</target>
        </trans-unit>
        <trans-unit id="3a920b9ddb24cfbe3c3e189e7152a5b3d3902d64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLSocketFactory&lt;/code&gt;s create &lt;code&gt;SSLSocket&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SSLSocketFactory&lt;/code&gt; 의 생성 &lt;code&gt;SSLSocket&lt;/code&gt; 의.</target>
        </trans-unit>
        <trans-unit id="0549f5b4b7d9ff54466b0305b66f6a06cc439939" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SUPERSCRIPT&lt;/code&gt; can impact the ascent and descent of a font. The ascent and descent can never become negative, however.</source>
          <target state="translated">&lt;code&gt;SUPERSCRIPT&lt;/code&gt; 는 글꼴의 상승 및 하강에 영향을 줄 수 있습니다. 그러나 상승과 하강은 결코 음수가 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1ef07b1494ed2bd5ac4802d53ef450a14cae38b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SaslClientFactory.&lt;/code&gt;&lt;em&gt;&lt;code&gt;mechanism_name&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SaslClientFactory.&lt;/code&gt;&lt;em&gt;&lt;code&gt;mechanism_name&lt;/code&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bb43c36b48a422fa0d1566e175d57a3ecde2286d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SaslServerFactory.&lt;/code&gt;&lt;em&gt;&lt;code&gt;mechanism_name&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SaslServerFactory.&lt;/code&gt;&lt;em&gt;&lt;code&gt;mechanism_name&lt;/code&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5415aad73aed2b0e551b3de1b6bc9accedf9e89d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Savepoint&lt;/code&gt; -- provides savepoints in a transaction</source>
          <target state="translated">&lt;code&gt;Savepoint&lt;/code&gt; - 트랜잭션의 세이브 포인트를 제공한다</target>
        </trans-unit>
        <trans-unit id="9fca6c6c59b1a6ea6962493157917a5c4eae5b05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptContext.ENGINE_SCOPE&lt;/code&gt; - The set of named values representing the state of this &lt;code&gt;ScriptEngine&lt;/code&gt;. The values are generally visible in scripts using the associated keys as variable names.</source>
          <target state="translated">&lt;code&gt;ScriptContext.ENGINE_SCOPE&lt;/code&gt; - 이 &lt;code&gt;ScriptEngine&lt;/code&gt; 상태를 나타내는 명명 된 값 세트입니다 . 일반적으로 값은 관련 키를 변수 이름으로 사용하여 스크립트에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="e118f3e4518f17cee7aadc6517dfbb89fb5ce521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptContext.ENGINE_SCOPE&lt;/code&gt; - The specified &lt;code&gt;Bindings&lt;/code&gt; replaces the engine scope of the &lt;code&gt;ScriptEngine&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ScriptContext.ENGINE_SCOPE&lt;/code&gt; - 지정된 &lt;code&gt;Bindings&lt;/code&gt; 이 &lt;code&gt;ScriptEngine&lt;/code&gt; 의 엔진 범위를 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="166244d545ed7d8bfcf528a37381f43f7ff22f86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptContext.GLOBAL_SCOPE&lt;/code&gt; - The set of named values representing global scope. If this &lt;code&gt;ScriptEngine&lt;/code&gt; is created by a &lt;code&gt;ScriptEngineManager&lt;/code&gt;, then the manager sets global scope bindings. This may be &lt;code&gt;null&lt;/code&gt; if no global scope is associated with this &lt;code&gt;ScriptEngine&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ScriptContext.GLOBAL_SCOPE&lt;/code&gt; - 전역 범위를 나타내는 명명 된 값 집합입니다. 이 경우 &lt;code&gt;ScriptEngine&lt;/code&gt; a로 만들어 &lt;code&gt;ScriptEngineManager&lt;/code&gt; 는 , 매니저는 글로벌 스코프 바인딩을 설정합니다. 이 &lt;code&gt;ScriptEngine&lt;/code&gt; 과 관련된 전역 범위가 없으면 &lt;code&gt;null&lt;/code&gt; 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="474e614bb8e94409fe202102a2daf20b4a3c29c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptContext.GLOBAL_SCOPE&lt;/code&gt; - The specified &lt;code&gt;Bindings&lt;/code&gt; must be visible as the &lt;code&gt;GLOBAL_SCOPE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ScriptContext.GLOBAL_SCOPE&lt;/code&gt; - 지정된 &lt;code&gt;Bindings&lt;/code&gt; 이 &lt;code&gt;GLOBAL_SCOPE&lt;/code&gt; 로 표시되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="e8b358949ab228606096ee7355ef135a4ab3ef4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptEngine&lt;/code&gt; is the fundamental interface whose methods must be fully functional in every implementation of this specification.</source>
          <target state="translated">&lt;code&gt;ScriptEngine&lt;/code&gt; 은이 사양의 모든 구현에서 메서드가 완벽하게 작동해야하는 기본 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="ec19a99d3619511a11056d3247195323fe7f40bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptEngineFactory&lt;/code&gt; is used to describe and instantiate &lt;code&gt;ScriptEngines&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ScriptEngineFactory&lt;/code&gt; 에는 설명하고 인스턴스화를하는 데 사용됩니다 &lt;code&gt;ScriptEngines&lt;/code&gt; 에 .</target>
        </trans-unit>
        <trans-unit id="642a3ce02f0b38ed5fbcb81b5c3b8d38266c4320" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptException&lt;/code&gt; constructor specifying message, filename, line number and column number.</source>
          <target state="translated">&lt;code&gt;ScriptException&lt;/code&gt; 메시지, 파일 이름, 줄 번호 및 열 번호를 지정하는 ScriptException 생성자</target>
        </trans-unit>
        <trans-unit id="75c266ed7cce5f778bb83ab49d48b6dad41999af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SecureRandom&lt;/code&gt; objects are safe for use by multiple concurrent threads.</source>
          <target state="translated">&lt;code&gt;SecureRandom&lt;/code&gt; 개체는 여러 동시 스레드에서 사용하기에 안전합니다.</target>
        </trans-unit>
        <trans-unit id="9ceb0398a6944486fbe1ea4d23d0947ec6cc2714" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SecureRandom&lt;/code&gt; will call the applicable engine methods without any synchronization.</source>
          <target state="translated">&lt;code&gt;SecureRandom&lt;/code&gt; 은 동기화없이 적용 가능한 엔진 메서드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="2a82e5d1100f7738a7dfdea6f8b77faf3a473f1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SerialBlob&lt;/code&gt; methods make it possible to make a copy of a &lt;code&gt;SerialBlob&lt;/code&gt; object as an array of bytes or as a stream. They also make it possible to locate a given pattern of bytes or a &lt;code&gt;Blob&lt;/code&gt; object within a &lt;code&gt;SerialBlob&lt;/code&gt; object and to update or truncate a &lt;code&gt;Blob&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;SerialBlob&lt;/code&gt; 메서드를 사용하면 &lt;code&gt;SerialBlob&lt;/code&gt; 개체 의 복사본 을 바이트 배열 또는 스트림으로 만들 수 있습니다. 그들은 또한 가능 지정된 바이트 패턴이나 찾을 수 있도록 &lt;code&gt;Blob&lt;/code&gt; 내에서 객체를 &lt;code&gt;SerialBlob&lt;/code&gt; 의 개체를 업데이트하거나 절단 &lt;code&gt;Blob&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="74419653c1f40ff91cfe62d1189834d049f6a220" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SerialBlob&lt;/code&gt; methods make it possible to make a copy of a &lt;code&gt;SerialBlob&lt;/code&gt; object as an array of bytes or as a stream. They also make it possible to locate a given pattern of bytes or a &lt;code&gt;Blob&lt;/code&gt; object within a &lt;code&gt;SerialBlob&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;SerialBlob&lt;/code&gt; 메서드를 사용하면 &lt;code&gt;SerialBlob&lt;/code&gt; 개체 의 복사본 을 바이트 배열 또는 스트림으로 만들 수 있습니다. 또한 &lt;code&gt;SerialBlob&lt;/code&gt; 개체 내에서 지정된 바이트 패턴 또는 &lt;code&gt;Blob&lt;/code&gt; 개체 를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9fc439651f33039d5a719055108c01235fcfc2b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SerialClob&lt;/code&gt; methods make it possible to get a substring from a &lt;code&gt;SerialClob&lt;/code&gt; object or to locate the start of a pattern of characters.</source>
          <target state="translated">&lt;code&gt;SerialClob&lt;/code&gt; 메서드를 사용하면 &lt;code&gt;SerialClob&lt;/code&gt; 개체 에서 하위 문자열을 가져 오거나 문자 패턴의 시작 위치를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11aef03e8b2e55e04fb03b654f6005371127ed30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SerializedLambda&lt;/code&gt; has a &lt;code&gt;readResolve&lt;/code&gt; method that looks for a (possibly private) static method called &lt;code&gt;$deserializeLambda$(SerializedLambda)&lt;/code&gt; in the capturing class, invokes that with itself as the first argument, and returns the result. Lambda classes implementing &lt;code&gt;$deserializeLambda$&lt;/code&gt; are responsible for validating that the properties of the &lt;code&gt;SerializedLambda&lt;/code&gt; are consistent with a lambda actually captured by that class.</source>
          <target state="translated">&lt;code&gt;SerializedLambda&lt;/code&gt; 에는 캡처 클래스에서 &lt;code&gt;$deserializeLambda$(SerializedLambda)&lt;/code&gt; 라는 (비공개) 정적 메서드를 찾고 &lt;code&gt;readResolve&lt;/code&gt; 메서드가있어 이를 첫 번째 인수로 사용하여 결과를 반환합니다. &lt;code&gt;$deserializeLambda$&lt;/code&gt; 구현하는 Lambda 클래스 는 &lt;code&gt;SerializedLambda&lt;/code&gt; 의 속성이 해당 클래스에서 실제로 캡처 한 람다와 일치하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2e8a2a9f1c6675667be2c3609e26630eaad05e33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Set&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Set&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c3814ace93a00dd1c189266f962c46ceee25663" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleAttributeSet&lt;/code&gt; containing the attributes</source>
          <target state="translated">&lt;code&gt;SimpleAttributeSet&lt;/code&gt; 속성을 포함하는 SimpleAttributeSet</target>
        </trans-unit>
        <trans-unit id="b01d9ce1e35c15847c93cfb4f475071af6d3549f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleDateFormat&lt;/code&gt; allows you to start by choosing any user-defined patterns for date-time formatting. However, you are encouraged to create a date-time formatter with either &lt;code&gt;getTimeInstance&lt;/code&gt;, &lt;code&gt;getDateInstance&lt;/code&gt;, or &lt;code&gt;getDateTimeInstance&lt;/code&gt; in &lt;code&gt;DateFormat&lt;/code&gt;. Each of these class methods can return a date/time formatter initialized with a default format pattern. You may modify the format pattern using the &lt;code&gt;applyPattern&lt;/code&gt; methods as desired. For more information on using these methods, see &lt;a href=&quot;dateformat&quot;&gt;&lt;code&gt;DateFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleDateFormat&lt;/code&gt; 을 사용하면 날짜-시간 형식에 대한 사용자 정의 패턴을 선택하여 시작할 수 있습니다. 그러나 &lt;code&gt;getTimeInstance&lt;/code&gt; , &lt;code&gt;getDateInstance&lt;/code&gt; 또는 &lt;code&gt;DateFormat&lt;/code&gt; 에서 &lt;code&gt;getDateTimeInstance&lt;/code&gt; 를 사용하여 날짜-시간 포맷터를 작성하는 것이 좋습니다 . 이러한 각 클래스 메소드는 기본 형식 패턴으로 초기화 된 날짜 / 시간 포맷터를 리턴 할 수 있습니다. 원하는대로 &lt;code&gt;applyPattern&lt;/code&gt; 메소드를 사용하여 형식 패턴을 수정할 수 있습니다 . 이러한 메서드 사용에 대한 자세한 내용은 &lt;a href=&quot;dateformat&quot;&gt; &lt;code&gt;DateFormat&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3e2d9b63de5c9f9c4dc26179609fceee4ae162a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleDateFormat&lt;/code&gt; also supports &lt;em&gt;localized date and time pattern&lt;/em&gt; strings. In these strings, the pattern letters described above may be replaced with other, locale dependent, pattern letters. &lt;code&gt;SimpleDateFormat&lt;/code&gt; does not deal with the localization of text other than the pattern letters; that's up to the client of the class.</source>
          <target state="translated">&lt;code&gt;SimpleDateFormat&lt;/code&gt; 은 &lt;em&gt;현지화 된 날짜 및 시간 패턴&lt;/em&gt; 문자열 도 지원합니다 . 이 문자열에서 위에서 설명한 패턴 문자는 다른 로케일 종속 패턴 문자로 대체 될 수 있습니다. &lt;code&gt;SimpleDateFormat&lt;/code&gt; 은 패턴 문자 이외의 텍스트 지역화를 처리하지 않습니다. 그것은 클래스의 클라이언트에 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="eee60a82249fad86b3f9c641534c50c42eef0c6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleDateFormat&lt;/code&gt; is a concrete class for formatting and parsing dates in a locale-sensitive manner.</source>
          <target state="translated">&lt;code&gt;SimpleDateFormat&lt;/code&gt; 은 로케일 구분 방식으로 날짜를 형식화하고 구문 분석하기위한 구체적인 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="095aeb3228774faa5db7939d6aba2e728fda82cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleDateFormat&lt;/code&gt; is a concrete class for formatting and parsing dates in a locale-sensitive manner. It allows for formatting (date &amp;rarr; text), parsing (text &amp;rarr; date), and normalization.</source>
          <target state="translated">&lt;code&gt;SimpleDateFormat&lt;/code&gt; 은 로케일 구분 방식으로 날짜를 형식화하고 구문 분석하기위한 구체적인 클래스입니다. 형식화 (날짜 &amp;rarr; 텍스트), 구문 분석 (텍스트 &amp;rarr; 날짜) 및 정규화가 가능합니다.</target>
        </trans-unit>
        <trans-unit id="3999b0fcea53cbfca5b6860f2e79adffedf9aeb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleTimeZone&lt;/code&gt; is a concrete subclass of &lt;code&gt;TimeZone&lt;/code&gt; that represents a time zone for use with a Gregorian calendar.</source>
          <target state="translated">&lt;code&gt;SimpleTimeZone&lt;/code&gt; 은 Gregorian 달력과 함께 사용할 &lt;code&gt;TimeZone&lt;/code&gt; 를 나타내는 TimeZone 의 구체적인 하위 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="582a5d3ad210edcd948f728205b52043091f02c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleTimeZone&lt;/code&gt; is a concrete subclass of &lt;code&gt;TimeZone&lt;/code&gt; that represents a time zone for use with a Gregorian calendar. The class holds an offset from GMT, called &lt;em&gt;raw offset&lt;/em&gt;, and start and end rules for a daylight saving time schedule. Since it only holds single values for each, it cannot handle historical changes in the offset from GMT and the daylight saving schedule, except that the &lt;a href=&quot;#setStartYear(int)&quot;&gt;&lt;code&gt;setStartYear&lt;/code&gt;&lt;/a&gt; method can specify the year when the daylight saving time schedule starts in effect.</source>
          <target state="translated">&lt;code&gt;SimpleTimeZone&lt;/code&gt; 은 그레고리력과 함께 사용할 &lt;code&gt;TimeZone&lt;/code&gt; 를 나타내는 TimeZone 의 구체적인 하위 클래스입니다 . 클래스에는 &lt;em&gt;원시 오프셋&lt;/em&gt; 이라고하는 GMT의 오프셋 과 일광 절약 시간표에 대한 시작 및 종료 규칙이 있습니다. 각각에 대해 단일 값만 보유하므로 &lt;a href=&quot;#setStartYear(int)&quot;&gt; &lt;code&gt;setStartYear&lt;/code&gt; &lt;/a&gt; 메서드가 일광 절약 시간 일정이 적용되는 연도를 지정할 수 있다는 점을 제외하고는 GMT 오프셋 및 일광 절약 일정의 과거 변경 사항을 처리 할 수 ​​없습니다 .</target>
        </trans-unit>
        <trans-unit id="226a45adfe31c45f833557c019715ad02ab8ca9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleTimeZone&lt;/code&gt; is a concrete subclass of &lt;code&gt;TimeZone&lt;/code&gt; that represents a time zone for use with a Gregorian calendar. The class holds an offset from GMT, called &lt;em&gt;raw offset&lt;/em&gt;, and start and end rules for a daylight saving time schedule. Since it only holds single values for each, it cannot handle historical changes in the offset from GMT and the daylight saving schedule, except that the &lt;a href=&quot;simpletimezone#setStartYear-int-&quot;&gt;&lt;code&gt;setStartYear&lt;/code&gt;&lt;/a&gt; method can specify the year when the daylight saving time schedule starts in effect.</source>
          <target state="translated">&lt;code&gt;SimpleTimeZone&lt;/code&gt; 은 Gregorian 달력과 함께 사용할 &lt;code&gt;TimeZone&lt;/code&gt; 를 나타내는 TimeZone 의 구체적인 하위 클래스입니다 . 이 클래스는 &lt;em&gt;raw 오프셋&lt;/em&gt; 이라는 GMT의 오프셋 과 일광 절약 시간표의 시작 및 종료 규칙을 보유합니다. 각 값에 대해 단일 값만 보유하므로 &lt;a href=&quot;simpletimezone#setStartYear-int-&quot;&gt; &lt;code&gt;setStartYear&lt;/code&gt; &lt;/a&gt; 메소드가 일광 절약 시간제 스케줄이 시작되는 연도를 지정할 수 있다는 점을 제외하고 GMT 및 일광 절약 시간표의 오프셋에서 히스토리 변경 사항을 처리 할 수 ​​없습니다 .</target>
        </trans-unit>
        <trans-unit id="abba4a41eeae3163007a16e87e6b0405572fa2d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleType.BOOLEAN&lt;/code&gt;, etc</source>
          <target state="translated">&lt;code&gt;SimpleType.BOOLEAN&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="6aa5dfe01213bf072f10976c42910c732f519f72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleType.INTEGER&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;SimpleType.INTEGER&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="4f5a93921ed72e648946d8e1a7f8f8f11c1d8f4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SnippetEvent&lt;/code&gt; is immutable: an access to any of its methods will always return the same result. and thus is thread-safe.</source>
          <target state="translated">&lt;code&gt;SnippetEvent&lt;/code&gt; 는 변경 불가능합니다. 메서드에 대한 액세스는 항상 동일한 결과를 반환합니다. 따라서 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="a1987884fcdf95bdb93f7b3c08f2df127eb74ae1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Socket s = new Socket(Proxy.NO_PROXY);&lt;/code&gt; will create a plain socket ignoring any other proxy configuration.</source>
          <target state="translated">&lt;code&gt;Socket s = new Socket(Proxy.NO_PROXY);&lt;/code&gt; 다른 프록시 구성을 무시하고 일반 소켓을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="844a32d79478574daff7a859b0c6c5512155a1a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Socket s = new Socket(new Proxy(Proxy.Type.SOCKS, new InetSocketAddress(&quot;socks.mydom.com&quot;, 1080)));&lt;/code&gt; will create a socket connecting through the specified SOCKS proxy server.</source>
          <target state="translated">&lt;code&gt;Socket s = new Socket(new Proxy(Proxy.Type.SOCKS, new InetSocketAddress(&quot;socks.mydom.com&quot;, 1080)));&lt;/code&gt; 지정된 SOCKS 프록시 서버를 통해 연결하는 소켓을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="a022cddd8f9c2721d5f1ffe4ca29c34995c4183a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SortedMap&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SortedMap&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0ac90c4479b724b8cea60590d7ac28464fe6838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SortedSet&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; (see below)</source>
          <target state="translated">&lt;code&gt;SortedSet&amp;lt;&lt;/code&gt; &lt;em&gt;E &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; (아래 참조)</target>
        </trans-unit>
        <trans-unit id="10fef87c15836ea8ed0aa5b594adea95be454925" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Soundbank&lt;/code&gt; includes methods that return &lt;code&gt;String&lt;/code&gt; objects containing the sound bank's name, manufacturer, version number, and description. The precise content and format of these strings is left to the implementor.</source>
          <target state="translated">&lt;code&gt;Soundbank&lt;/code&gt; 에는 사운드 뱅크의 이름, 제조업체, 버전 번호 및 설명이 포함 된 &lt;code&gt;String&lt;/code&gt; 객체 를 반환하는 메서드가 포함되어 있습니다 . 이러한 문자열의 정확한 내용과 형식은 구현 자에게 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f15aba6026499e033d5684305223819fded0093" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Source&lt;/code&gt; / &lt;code&gt;Result&lt;/code&gt; Accepted</source>
          <target state="translated">&lt;code&gt;Source&lt;/code&gt; / &lt;code&gt;Result&lt;/code&gt; 승인</target>
        </trans-unit>
        <trans-unit id="db3ceaf3c4770bdebad4cbd65e7667ad6893277c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SpringLayout&lt;/code&gt; also provides a way to solve many of the difficult layout problems that cannot be solved by nesting combinations of &lt;code&gt;Box&lt;/code&gt;es. That said, &lt;code&gt;SpringLayout&lt;/code&gt; honors the &lt;code&gt;LayoutManager2&lt;/code&gt; contract correctly and so can be nested with other layout managers -- a technique that can be preferable to creating the constraints implied by the other layout managers.</source>
          <target state="translated">&lt;code&gt;SpringLayout&lt;/code&gt; 은 또한 &lt;code&gt;Box&lt;/code&gt; es의 중첩 조합으로 해결할 수없는 어려운 레이아웃 문제를 해결하는 방법을 제공합니다 . 즉, &lt;code&gt;SpringLayout&lt;/code&gt; 은 &lt;code&gt;LayoutManager2&lt;/code&gt; 계약을 올바르게 준수 하므로 다른 레이아웃 관리자와 중첩 될 수 있습니다.이 기술은 다른 레이아웃 관리자가 암시하는 제약 조건을 만드는 것보다 선호 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec91ed8f9123d61216804a6acde10441218f9889" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StAXSource&lt;/code&gt;s are consumed during processing and are not reusable.</source>
          <target state="translated">&lt;code&gt;StAXSource&lt;/code&gt; 는 처리 중에 사용되며 재사용 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ea0b7335f020836736aa6dff2f652b1c0bff086a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StackTraceElement&lt;/code&gt; for this stack frame.</source>
          <target state="translated">&lt;code&gt;StackTraceElement&lt;/code&gt; 이 스택 프레임에 대한 StackTraceElement 입니다.</target>
        </trans-unit>
        <trans-unit id="8041bd6384dd3ecdb1e93b1a2a106bb847aeb068" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StackTraceElement&lt;/code&gt; that locked the object monitor, or &lt;code&gt;null&lt;/code&gt; if not available.</source>
          <target state="translated">&lt;code&gt;StackTraceElement&lt;/code&gt; 객체 모니터를 잠근 StackTraceElement . 사용할 수 &lt;code&gt;null&lt;/code&gt; 경우는 null</target>
        </trans-unit>
        <trans-unit id="29a2aa694d97d15db4eceb1116c8181fecb83ff9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StackWalker&lt;/code&gt; is thread-safe. Multiple threads can share a single &lt;code&gt;StackWalker&lt;/code&gt; object to traverse its own stack. A permission check is performed when a &lt;code&gt;StackWalker&lt;/code&gt; is created, according to the options it requests. No further permission check is done at stack walking time.</source>
          <target state="translated">&lt;code&gt;StackWalker&lt;/code&gt; 는 스레드로부터 안전합니다. 여러 스레드가 단일 &lt;code&gt;StackWalker&lt;/code&gt; 객체를 공유하여 자체 스택을 탐색 할 수 있습니다. 요청하는 옵션에 따라 &lt;code&gt;StackWalker&lt;/code&gt; 가 생성 될 때 권한 검사가 수행됩니다 . 스택 워킹 시간에는 추가 권한 검사가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1d6a1f969d0d5ebd472a51875d672053d4129edc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StartTlsRequest&lt;/code&gt;/&lt;code&gt;StartTlsResponse&lt;/code&gt; are used to establish a TLS connection over the existing LDAP connection associated with the JNDI context on which &lt;code&gt;extendedOperation()&lt;/code&gt; is invoked. Typically, a JNDI program uses these classes as follows.</source>
          <target state="translated">&lt;code&gt;StartTlsRequest&lt;/code&gt; / &lt;code&gt;StartTlsResponse&lt;/code&gt; 는 &lt;code&gt;extendedOperation()&lt;/code&gt; 이 호출 되는 JNDI 컨텍스트와 연관된 기존 LDAP 연결을 통해 TLS 연결을 설정하는 데 사용 됩니다. 일반적으로 JNDI 프로그램은 다음과 같이 이러한 클래스를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ef9f730de20dae7770242297e64e70f83abcd6ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StateFactory&lt;/code&gt; is intended for use with service providers that implement only the &lt;code&gt;Context&lt;/code&gt; interface. &lt;code&gt;DirStateFactory&lt;/code&gt; is intended for use with service providers that implement the &lt;code&gt;DirContext&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;StateFactory&lt;/code&gt; 는 &lt;code&gt;Context&lt;/code&gt; 인터페이스 만 구현하는 서비스 제공자와 함께 사용하도록 설계되었습니다 . &lt;code&gt;DirStateFactory&lt;/code&gt; 는 &lt;code&gt;DirContext&lt;/code&gt; 인터페이스 를 구현하는 서비스 제공자와 함께 사용하기위한 것입니다 .</target>
        </trans-unit>
        <trans-unit id="129618728f6b3efccfa306aa06ad990999b3aa4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Statement.EXECUTE_FAILED&lt;/code&gt; to indicate that the command failed to execute successfully</source>
          <target state="translated">&lt;code&gt;Statement.EXECUTE_FAILED&lt;/code&gt; - 명령 실행에 실패했음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="59506452a3f530aa4dfdbecfe44bad38215c7572" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Statement.SUCCESS_NO_INFO&lt;/code&gt; to indicate that the command executed successfully but the number of rows affected is unknown</source>
          <target state="translated">&lt;code&gt;Statement.SUCCESS_NO_INFO&lt;/code&gt; 는 명령이 성공적으로 실행되었지만 영향을받은 행 수를 알 수 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9e3ea72d63719f308a4865dc35ef821859cd95be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Statement&lt;/code&gt; -- used to send basic SQL statements</source>
          <target state="translated">&lt;code&gt;Statement&lt;/code&gt; -기본 SQL 문을 보내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8b0fda723e343d630648335a8457d55193716336" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StatementSnippet&lt;/code&gt; is immutable: an access to any of its methods will always return the same result. and thus is thread-safe.</source>
          <target state="translated">&lt;code&gt;StatementSnippet&lt;/code&gt; 은 변경이 불가능합니다. 메소드에 대한 액세스는 항상 동일한 결과를 반환 할 것입니다. ㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ 따라서 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="fc42993ba6fcf2f2814531fad6877f29d0d25725" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StaticClass&lt;/code&gt; objects representing Java array types will act as constructors taking a single int argument and create an array of the specified size.</source>
          <target state="translated">&lt;code&gt;StaticClass&lt;/code&gt; Java 배열 유형을 나타내는 StaticClass 객체는 단일 int 인수를 사용하는 생성자 역할을하며 지정된 크기의 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0a2666a6c024cb35ccf78992d06447056310480a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Stream.iterate&lt;/code&gt; should produce the same sequence of elements as produced by the corresponding for-loop:</source>
          <target state="translated">&lt;code&gt;Stream.iterate&lt;/code&gt; 는 해당 for 루프에서 생성 된 것과 동일한 요소 시퀀스를 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="83d3fb42133bff3d5aa29cddfe8b40c597c0ee1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; -- &lt;code&gt;String.class&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; - &lt;code&gt;String.class&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a838b39decfb2294c0b8862c0f9fc0659f60422" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; -- The print data consists of the Unicode characters in the string.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; -인쇄 데이터는 문자열의 유니 코드 문자로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="e96e53f605a844ffcd002c2930bca38bba8f524f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; representation of this &lt;code&gt;QName&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 이 &lt;code&gt;QName&lt;/code&gt; 의 문자열 표현</target>
        </trans-unit>
        <trans-unit id="25b29359bc12a29ea3a6b38dbf0cbf432ae9e931" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; representation of this &lt;code&gt;QName&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 이 &lt;code&gt;QName&lt;/code&gt; 의 문자열 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="104a0ccb552a1e7671deec21d6324d5564b5b36a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; version of this two-dimensional size attribute</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 이 2 차원 크기 속성의 문자열 버전</target>
        </trans-unit>
        <trans-unit id="17d26d0e56342b14556b773585795dc7f60f72e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringBuffer&lt;/code&gt; implements &lt;code&gt;Comparable&lt;/code&gt; but does not override &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;. Thus, the natural ordering of &lt;code&gt;StringBuffer&lt;/code&gt; is inconsistent with equals. Care should be exercised if &lt;code&gt;StringBuffer&lt;/code&gt; objects are used as keys in a &lt;code&gt;SortedMap&lt;/code&gt; or elements in a &lt;code&gt;SortedSet&lt;/code&gt;. See &lt;a href=&quot;comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../util/sortedmap&quot;&gt;&lt;code&gt;SortedMap&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../util/sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;StringBuffer&lt;/code&gt; 는 &lt;code&gt;Comparable&lt;/code&gt; 을 구현 하지만 &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 를&lt;/a&gt; 재정의하지 않습니다 . 따라서 &lt;code&gt;StringBuffer&lt;/code&gt; 의 자연스러운 순서는 같음과 일치하지 않습니다. &lt;code&gt;StringBuffer&lt;/code&gt; 객체가 &lt;code&gt;SortedMap&lt;/code&gt; 의 키 또는 &lt;code&gt;SortedSet&lt;/code&gt; 의 요소 로 사용되는 경우주의해야합니다 . 자세한 내용은 &lt;a href=&quot;comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../util/sortedmap&quot;&gt; &lt;code&gt;SortedMap&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../util/sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ce4ba99eb1531465f93022e15257d7af0a594df5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringBuilder&lt;/code&gt; implements &lt;code&gt;Comparable&lt;/code&gt; but does not override &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;. Thus, the natural ordering of &lt;code&gt;StringBuilder&lt;/code&gt; is inconsistent with equals. Care should be exercised if &lt;code&gt;StringBuilder&lt;/code&gt; objects are used as keys in a &lt;code&gt;SortedMap&lt;/code&gt; or elements in a &lt;code&gt;SortedSet&lt;/code&gt;. See &lt;a href=&quot;comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../util/sortedmap&quot;&gt;&lt;code&gt;SortedMap&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../util/sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;StringBuilder&lt;/code&gt; 는 &lt;code&gt;Comparable&lt;/code&gt; 을 구현 하지만 &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 를&lt;/a&gt; 재정의하지 않습니다 . 따라서 &lt;code&gt;StringBuilder&lt;/code&gt; 의 자연스러운 순서는 같음과 일치하지 않습니다. &lt;code&gt;StringBuilder&lt;/code&gt; 객체가 &lt;code&gt;SortedMap&lt;/code&gt; 의 키 또는 &lt;code&gt;SortedSet&lt;/code&gt; 의 요소 로 사용되는 경우주의해야합니다 . 자세한 내용은 &lt;a href=&quot;comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../util/sortedmap&quot;&gt; &lt;code&gt;SortedMap&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../util/sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="05442803e74defea6168462ab72660a17f23ec67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringCharacterIterator&lt;/code&gt; implements the &lt;code&gt;CharacterIterator&lt;/code&gt; protocol for a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StringCharacterIterator&lt;/code&gt; 는 &lt;code&gt;String&lt;/code&gt; 의 &lt;code&gt;CharacterIterator&lt;/code&gt; 프로토콜을 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="e99f4eccee869a2545780e0c78bad182a3e54dc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringCharacterIterator&lt;/code&gt; implements the &lt;code&gt;CharacterIterator&lt;/code&gt; protocol for a &lt;code&gt;String&lt;/code&gt;. The &lt;code&gt;StringCharacterIterator&lt;/code&gt; class iterates over the entire &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StringCharacterIterator&lt;/code&gt; 는 &lt;code&gt;String&lt;/code&gt; 의 &lt;code&gt;CharacterIterator&lt;/code&gt; 프로토콜을 구현합니다 . &lt;code&gt;StringCharacterIterator&lt;/code&gt; 의 클래스는 전체 반복 할 &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5abba757a9c8a22ad071ad0672f0b19b7011fd05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringJoiner&lt;/code&gt; is used to construct a sequence of characters separated by a delimiter and optionally starting with a supplied prefix and ending with a supplied suffix.</source>
          <target state="translated">&lt;code&gt;StringJoiner&lt;/code&gt; 는 분리 문자로 구분되고 선택적으로 제공된 접 두부로 시작하고 제공된 접미 부로 끝나는 일련의 문자를 구성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dc1a831a4a48a82bad38250223afca4dab93dd1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringTokenizer&lt;/code&gt; is a legacy class that is retained for compatibility reasons although its use is discouraged in new code. It is recommended that anyone seeking this functionality use the &lt;code&gt;split&lt;/code&gt; method of &lt;code&gt;String&lt;/code&gt; or the java.util.regex package instead.</source>
          <target state="translated">&lt;code&gt;StringTokenizer&lt;/code&gt; 는 새 코드에서는 사용을 권장하지 않지만 호환성 이유로 유지되는 레거시 클래스입니다. 이 기능을 원하는 사람 은 &lt;code&gt;String&lt;/code&gt; 또는 java.util.regex 패키지 의 &lt;code&gt;split&lt;/code&gt; 메소드를 대신 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="846fd30669f7f4ca899e139ae5970d2a57205b3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Struct&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;STRUCT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Struct&lt;/code&gt; 인터페이스-SQL &lt;code&gt;STRUCT&lt;/code&gt; 매핑</target>
        </trans-unit>
        <trans-unit id="3b71bdaf4c82c6a53941ee7bb7364d0884eee9be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Style&lt;/code&gt; is an enum which represents the style for formatting a number within a given &lt;code&gt;NumberFormat&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;Style&lt;/code&gt; 은 주어진 &lt;code&gt;NumberFormat&lt;/code&gt; 인스턴스 내에서 숫자 형식을 지정하기위한 스타일을 나타내는 열거 형입니다 .</target>
        </trans-unit>
        <trans-unit id="4682346c146b15c4dc8c13a975c3f9e9461682ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingConstants.CENTER&lt;/code&gt; (the default)</source>
          <target state="translated">&lt;code&gt;SwingConstants.CENTER&lt;/code&gt; (기본값)</target>
        </trans-unit>
        <trans-unit id="f0874a1f56e0ae79da5bffb09836e6a186e663b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingConstants.TRAILING&lt;/code&gt; (the default)</source>
          <target state="translated">&lt;code&gt;SwingConstants.TRAILING&lt;/code&gt; (기본값)</target>
        </trans-unit>
        <trans-unit id="ac04e74360d0d3d91962f23cc215a9dfcee5b829" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingConstants.VERTICAL&lt;/code&gt; or &lt;code&gt;SwingConstants.HORIZONTAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SwingConstants.VERTICAL&lt;/code&gt; 또는 &lt;code&gt;SwingConstants.HORIZONTAL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="235df273db625a404bd9f26deaf887e4d80c6f4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingEventMonitor&lt;/code&gt; extends &lt;a href=&quot;awteventmonitor&quot;&gt;&lt;code&gt;AWTEventMonitor&lt;/code&gt;&lt;/a&gt; by adding a suite of listeners conditionally installed on every Swing component instance in the Java Virtual Machine.</source>
          <target state="translated">&lt;code&gt;SwingEventMonitor&lt;/code&gt; 는 Java Virtual Machine의 모든 Swing 구성 요소 인스턴스에 조건부로 설치된 리스너 제품군을 추가하여 &lt;a href=&quot;awteventmonitor&quot;&gt; &lt;code&gt;AWTEventMonitor&lt;/code&gt; &lt;/a&gt; 를 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="38820cf2dd10c1b10792fc31de4ac221b184b358" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingEventMonitor&lt;/code&gt; extends &lt;a href=&quot;awteventmonitor&quot;&gt;&lt;code&gt;AWTEventMonitor&lt;/code&gt;&lt;/a&gt; by adding a suite of listeners conditionally installed on every Swing component instance in the Java Virtual Machine. The events captured by these listeners are made available through a unified set of listeners supported by &lt;code&gt;SwingEventMonitor&lt;/code&gt;. With this, all the individual events on each of the AWT and Swing component instances are funneled into one set of listeners broken down by category (see &lt;a href=&quot;eventid&quot;&gt;&lt;code&gt;EventID&lt;/code&gt;&lt;/a&gt; for the categories).</source>
          <target state="translated">&lt;code&gt;SwingEventMonitor&lt;/code&gt; 는 Java Virtual Machine의 모든 Swing 구성 요소 인스턴스에 조건부로 설치된 리스너 제품군을 추가하여 &lt;a href=&quot;awteventmonitor&quot;&gt; &lt;code&gt;AWTEventMonitor&lt;/code&gt; &lt;/a&gt; 를 확장 합니다. 이러한 리스너가 캡처 한 이벤트는 &lt;code&gt;SwingEventMonitor&lt;/code&gt; 가 지원하는 통합 리스너 세트를 통해 사용할 수 있습니다 . 이를 통해 각 AWT 및 Swing 구성 요소 인스턴스의 모든 개별 이벤트가 범주별로 분류 된 하나의 리스너 세트로 유입됩니다 (범주에 대해서는 &lt;a href=&quot;eventid&quot;&gt; &lt;code&gt;EventID&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="5f5f5ee2142f8256579bd407a7ac24d418c39441" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingWorker&lt;/code&gt; is &lt;code&gt;DONE&lt;/code&gt; after &lt;code&gt;doInBackground&lt;/code&gt; method is finished.</source>
          <target state="translated">&lt;code&gt;SwingWorker&lt;/code&gt; 의가 있다 &lt;code&gt;DONE&lt;/code&gt; 후 &lt;code&gt;doInBackground&lt;/code&gt; 의 방법이 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="200f683304c2ec654cbb098c762d92d50845d6d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingWorker&lt;/code&gt; is &lt;code&gt;STARTED&lt;/code&gt; before invoking &lt;code&gt;doInBackground&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SwingWorker&lt;/code&gt; &lt;code&gt;doInBackground&lt;/code&gt; 를 호출 &lt;code&gt;STARTED&lt;/code&gt; 전에 SwingWorker 가 시작 됩니다.</target>
        </trans-unit>
        <trans-unit id="6228bde435579fa2ab039b856d9dedfe6aa34441" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingWorker&lt;/code&gt; is designed for situations where you need to have a long running task run in a background thread and provide updates to the UI either when done, or while processing. Subclasses of &lt;code&gt;SwingWorker&lt;/code&gt; must implement the &lt;a href=&quot;#doInBackground()&quot;&gt;&lt;code&gt;doInBackground()&lt;/code&gt;&lt;/a&gt; method to perform the background computation.</source>
          <target state="translated">&lt;code&gt;SwingWorker&lt;/code&gt; 는 백그라운드 스레드에서 장기 실행 작업을 실행하고 완료시 또는 처리 중에 UI에 업데이트를 제공해야하는 상황을 위해 설계되었습니다. &lt;code&gt;SwingWorker&lt;/code&gt; 의 서브 클래스는 백그라운드 계산을 수행하기 위해 &lt;a href=&quot;#doInBackground()&quot;&gt; &lt;code&gt;doInBackground()&lt;/code&gt; &lt;/a&gt; 메서드를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7daf9cd552f9f62ea5601a1993af472e55c4b229" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingWorker&lt;/code&gt; is only designed to be executed once. Executing a &lt;code&gt;SwingWorker&lt;/code&gt; more than once will not result in invoking the &lt;code&gt;doInBackground&lt;/code&gt; method twice.</source>
          <target state="translated">&lt;code&gt;SwingWorker&lt;/code&gt; 는 한 번만 실행되도록 설계되었습니다. &lt;code&gt;SwingWorker&lt;/code&gt; 를 두 번 이상 실행 해도 &lt;code&gt;doInBackground&lt;/code&gt; 메서드가 두 번 호출되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="4196f1bfcc657773ada73b70fea09e6b8b5af309" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SyncProvider&lt;/code&gt; implementations that supply XML data reader capabilities such as output XML stream capabilities can implement this interface to provide standard &lt;code&gt;XmlReader&lt;/code&gt; objects to &lt;code&gt;WebRowSet&lt;/code&gt; implementations.</source>
          <target state="translated">&lt;code&gt;SyncProvider&lt;/code&gt; 출력 XML 스트림 기능과 같은 XML 데이터 판독기 기능을 제공하는 SyncProvider 구현은이 인터페이스를 구현 하여 &lt;code&gt;WebRowSet&lt;/code&gt; 구현에 표준 &lt;code&gt;XmlReader&lt;/code&gt; 개체를 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d9d52f5eac3295025057315703f33bdfe14d4896" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SyncProvider&lt;/code&gt; implementations that supply XML data writer capabilities such as output XML stream capabilities can implement this interface to provide standard &lt;code&gt;XmlWriter&lt;/code&gt; objects to &lt;code&gt;WebRowSet&lt;/code&gt; implementations.</source>
          <target state="translated">&lt;code&gt;SyncProvider&lt;/code&gt; 출력 XML 스트림 기능과 같은 XML 데이터 기록기 기능을 제공하는 SyncProvider 구현은이 인터페이스를 구현 하여 &lt;code&gt;WebRowSet&lt;/code&gt; 구현에 표준 &lt;code&gt;XmlWriter&lt;/code&gt; 개체를 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c07ed42b19c910960415bc8be913c8bb2aed3274" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SynthPainter&lt;/code&gt; is abstract in so far as it does no painting, all the methods are empty. While none of these methods are typed to throw an exception, subclasses can assume that valid arguments are passed in, and if not they can throw a &lt;code&gt;NullPointerException&lt;/code&gt; or &lt;code&gt;IllegalArgumentException&lt;/code&gt; in response to invalid arguments.</source>
          <target state="translated">&lt;code&gt;SynthPainter&lt;/code&gt; 는 페인팅을하지 않는 한 추상적이며 모든 메소드는 비어 있습니다. 이러한 메소드 중 어느 것도 예외를 발생하도록 형식화되지 않았지만 서브 클래스는 유효한 인수가 전달되었다고 가정 할 수 있으며 그렇지 않은 경우 유효하지 않은 인수에 대한 응답으로 &lt;code&gt;NullPointerException&lt;/code&gt; 또는 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 을 발생시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0738580db4ef00684ffad070f1a83a1ffc56d380" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SynthPainter&lt;/code&gt; is used for painting portions of &lt;code&gt;JComponent&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SynthPainter&lt;/code&gt; 는 &lt;code&gt;JComponent&lt;/code&gt; 의 일부를 칠하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b03301bff08ea3d1cda6ec5b9a0c6e81568f0cf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SynthPainter&lt;/code&gt; is used for painting portions of &lt;code&gt;JComponent&lt;/code&gt;s. At a minimum each &lt;code&gt;JComponent&lt;/code&gt; has two paint methods: one for the border and one for the background. Some &lt;code&gt;JComponent&lt;/code&gt;s have more than one &lt;code&gt;Region&lt;/code&gt;, and as a consequence more paint methods.</source>
          <target state="translated">&lt;code&gt;SynthPainter&lt;/code&gt; 는 &lt;code&gt;JComponent&lt;/code&gt; 의 일부를 칠하는 데 사용됩니다 . 최소한 각 &lt;code&gt;JComponent&lt;/code&gt; 에는 테두리와 배경에 대한 두 가지 페인트 메서드가 있습니다. 일부 &lt;code&gt;JComponent&lt;/code&gt; 에는 둘 이상의 &lt;code&gt;Region&lt;/code&gt; 이 있으며 결과적으로 더 많은 페인트 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a07e5cfaeabd910b7f59d499497be9d62bc1aadd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SynthStyle&lt;/code&gt; is a set of style properties.</source>
          <target state="translated">&lt;code&gt;SynthStyle&lt;/code&gt; 은 스타일 속성 집합입니다.</target>
        </trans-unit>
        <trans-unit id="6921afa3434d09c5dc37b05583cc85391ef9d493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SynthStyle&lt;/code&gt; is a set of style properties. Each &lt;code&gt;SynthUI&lt;/code&gt; references at least one &lt;code&gt;SynthStyle&lt;/code&gt; that is obtained using a &lt;code&gt;SynthStyleFactory&lt;/code&gt;. You typically don't need to interact with this class directly, rather you will load a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth File Format file&lt;/a&gt; into &lt;code&gt;SynthLookAndFeel&lt;/code&gt; that will create a set of SynthStyles.</source>
          <target state="translated">&lt;code&gt;SynthStyle&lt;/code&gt; 은 스타일 속성 집합입니다. 각 &lt;code&gt;SynthUI&lt;/code&gt; 의 참조 적어도 하나 개 &lt;code&gt;SynthStyle&lt;/code&gt; 하여 얻어지는 &lt;code&gt;SynthStyleFactory&lt;/code&gt; . 일반적으로이 클래스와 직접 상호 작용할 필요는 없습니다. 대신 SynthStyles 집합을 생성하는 &lt;code&gt;SynthLookAndFeel&lt;/code&gt; 에&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth 파일 형식 파일&lt;/a&gt; 을 로드합니다 .</target>
        </trans-unit>
        <trans-unit id="1ad1c4f50e3d0e061c146f22242c12cb28efccf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SynthStyle&lt;/code&gt; is a set of style properties. Each &lt;code&gt;SynthUI&lt;/code&gt; references at least one &lt;code&gt;SynthStyle&lt;/code&gt; that is obtained using a &lt;code&gt;SynthStyleFactory&lt;/code&gt;. You typically don't need to interact with this class directly, rather you will load a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth File Format file&lt;/a&gt; into &lt;code&gt;SynthLookAndFeel&lt;/code&gt; that will create a set of SynthStyles.</source>
          <target state="translated">&lt;code&gt;SynthStyle&lt;/code&gt; 은 스타일 속성 집합입니다. 각 &lt;code&gt;SynthUI&lt;/code&gt; 의 참조 적어도 하나 개 &lt;code&gt;SynthStyle&lt;/code&gt; 하여 얻어지는 &lt;code&gt;SynthStyleFactory&lt;/code&gt; . 일반적으로이 클래스와 직접 상호 작용할 필요가 없습니다. 대신 SynthStyles 집합을 생성하는 &lt;code&gt;SynthLookAndFeel&lt;/code&gt; 에&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth 파일 형식 파일&lt;/a&gt; 을 로드합니다 .</target>
        </trans-unit>
        <trans-unit id="585e31788aacba94cba584cfb189bf6a2d162739" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;System.Logger&lt;/code&gt; instances log messages that will be routed to the underlying logging framework the &lt;a href=&quot;system.loggerfinder&quot;&gt;&lt;code&gt;LoggerFinder&lt;/code&gt;&lt;/a&gt; uses.</source>
          <target state="translated">&lt;code&gt;System.Logger&lt;/code&gt; 인스턴스는 &lt;a href=&quot;system.loggerfinder&quot;&gt; &lt;code&gt;LoggerFinder&lt;/code&gt; 가&lt;/a&gt; 사용 하는 기본 로깅 프레임 워크로 라우팅 될 메시지를 로깅 합니다.</target>
        </trans-unit>
        <trans-unit id="6b6780e7d3d88e8db41659a81dda648f999d2bc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;System.Logger&lt;/code&gt; instances log messages that will be routed to the underlying logging framework the &lt;a href=&quot;system.loggerfinder&quot;&gt;&lt;code&gt;LoggerFinder&lt;/code&gt;&lt;/a&gt; uses. &lt;code&gt;System.Logger&lt;/code&gt; instances are typically obtained from the &lt;a href=&quot;system&quot;&gt;&lt;code&gt;System&lt;/code&gt;&lt;/a&gt; class, by calling &lt;a href=&quot;system#getLogger(java.lang.String)&quot;&gt;&lt;code&gt;System.getLogger(loggerName)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;system#getLogger(java.lang.String,java.util.ResourceBundle)&quot;&gt;&lt;code&gt;System.getLogger(loggerName, bundle)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;System.Logger&lt;/code&gt; 인스턴스는 &lt;a href=&quot;system.loggerfinder&quot;&gt; &lt;code&gt;LoggerFinder&lt;/code&gt; 가&lt;/a&gt; 사용 하는 기본 로깅 프레임 워크로 라우팅 될 메시지를 로깅 합니다. &lt;code&gt;System.Logger&lt;/code&gt; 인스턴스는 일반적으로 &lt;a href=&quot;system#getLogger(java.lang.String)&quot;&gt; &lt;code&gt;System.getLogger(loggerName)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;system#getLogger(java.lang.String,java.util.ResourceBundle)&quot;&gt; &lt;code&gt;System.getLogger(loggerName, bundle)&lt;/code&gt; &lt;/a&gt; 을 호출 하여 &lt;a href=&quot;system&quot;&gt; &lt;code&gt;System&lt;/code&gt; &lt;/a&gt; 클래스 에서 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="432722d984024862451f1393e1a4cffc94321b3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T2&lt;/code&gt; (or a third thread) then calls &lt;code&gt;CV.remove(C)&lt;/code&gt;, undoing &lt;code&gt;T2&lt;/code&gt;'s work</source>
          <target state="translated">&lt;code&gt;T2&lt;/code&gt; (또는 세 번째 스레드)는 &lt;code&gt;CV.remove(C)&lt;/code&gt; 를 호출 하여 &lt;code&gt;T2&lt;/code&gt; 의 작업을 취소 합니다.</target>
        </trans-unit>
        <trans-unit id="de1282e67caa3cb38bdb0f2d862a36bd5576eef7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T2&lt;/code&gt; quickly computes a similar time-dependent value &lt;code&gt;V1&lt;/code&gt; and installs it on &lt;code&gt;CV.get(C)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T2&lt;/code&gt; 는 유사한 시간 종속 값 &lt;code&gt;V1&lt;/code&gt; 을 신속하게 계산하여 &lt;code&gt;CV.get(C)&lt;/code&gt; 에 설치합니다.</target>
        </trans-unit>
        <trans-unit id="6dcc2e3370d8ea9d35631dea5f935d793c3aa5e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - Allows the compiler to check that &lt;code&gt;implementation&lt;/code&gt; does indeed implement the class described by &lt;code&gt;mbeanInterface&lt;/code&gt;. The compiler can only check this if &lt;code&gt;mbeanInterface&lt;/code&gt; is a class literal such as &lt;code&gt;MyMBean.class&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러가 &lt;code&gt;implementation&lt;/code&gt; 이 실제로 &lt;code&gt;mbeanInterface&lt;/code&gt; 에 의해 설명 된 클래스 를 구현 하고 있는지 확인할 수 있습니다. 컴파일러는 &lt;code&gt;mbeanInterface&lt;/code&gt; 가 &lt;code&gt;MyMBean.class&lt;/code&gt; 와 같은 클래스 리터럴 인 경우에만이를 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d98ea9921663d2eacd8470ef000aa084e7f8f117" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The class type that will be returned by the XPath expression.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -XPath 표현식에서 반환 할 클래스 유형입니다.</target>
        </trans-unit>
        <trans-unit id="95ba15351f5078dff161ba24372e003a68f416dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The enum type whose constant is to be returned</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 정수를 돌려주는 열거 형</target>
        </trans-unit>
        <trans-unit id="7f9a40bdea403cdddb5226c4132dbd7b9793393f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The result type returned by this future's &lt;code&gt;join&lt;/code&gt; and &lt;code&gt;get&lt;/code&gt; methods</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이 퓨처의 &lt;code&gt;join&lt;/code&gt; 및 &lt;code&gt;get&lt;/code&gt; 메서드 에서 반환 된 결과 유형</target>
        </trans-unit>
        <trans-unit id="adb8a31e81b655e7f510ab545971bf3ae795456d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of element returned by the iterator</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 반복자가 돌려주는 요소의 타입</target>
        </trans-unit>
        <trans-unit id="6088a6251bfb20139b5be1dd3e2a158f1974fb42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of input elements for the new collector</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 새 콜렉터의 입력 요소 유형</target>
        </trans-unit>
        <trans-unit id="f02a7da6353446ba19cd5914ba3176b873e0b361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of reference to the files</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 파일에 대한 참조 유형</target>
        </trans-unit>
        <trans-unit id="44831613362015ca2008c05c75dfd96b1aaa0efa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of stream elements</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 스트림 요소의 유형</target>
        </trans-unit>
        <trans-unit id="965cdc28bc507dd4bd91b771600cf6b9c635e15a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the array elements</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 배열 요소의 유형</target>
        </trans-unit>
        <trans-unit id="1fa4d7ab5d76c4e58980dc3aa5d17150c167f5cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the attachment</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 첨부 파일 유형</target>
        </trans-unit>
        <trans-unit id="e6402813030ed7b2e5d5a05f2a0dec650ef8cebb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the context object associated with the event</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이벤트와 연관된 컨텍스트 오브젝트의 유형</target>
        </trans-unit>
        <trans-unit id="dd7f818faad1c693c82a8da3fe094263c7051013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the file attribute value</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 파일 속성 값의 유형</target>
        </trans-unit>
        <trans-unit id="66b4f8d985a4070895126cbddfb33899bdafbfbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the non-existent value</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 존재하지 않는 값의 유형</target>
        </trans-unit>
        <trans-unit id="bf65765ca32b37f80aa36c04120fdb51a1cfe043" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the object attached to the receive operation</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 수신 작업에 연결된 개체의 유형</target>
        </trans-unit>
        <trans-unit id="4f715de3a93d4a1325adf7976bf1e0519b30c7f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the object holding the updatable field</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 업데이트 가능한 필드를 보유한 오브젝트의 유형</target>
        </trans-unit>
        <trans-unit id="f0b5c4b9ea15d28815a39982c4ed017559037b72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the result of applying the function to the stream of &lt;a href=&quot;stackwalker.stackframe&quot;&gt;stack frame&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -&lt;a href=&quot;stackwalker.stackframe&quot;&gt;스택 프레임&lt;/a&gt; 의 스트림에 함수를 적용한 결과의 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="fced19de39fdc49f3543cd4b98a3f618545229bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the socket option value</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 소켓 옵션 값의 유형</target>
        </trans-unit>
        <trans-unit id="c8eeb6eeda1a3d4c7860c0bd3637a9fca5325e80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the socket option value.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 소켓 옵션 값의 유형</target>
        </trans-unit>
        <trans-unit id="9e13b8b435198952685a0fb5f9ebe33f58446c2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - Type of elements</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 요소 유형</target>
        </trans-unit>
        <trans-unit id="664c82518d7dbe51d95dc0376308c7b080b24885" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - Type of the non-existent value</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 존재하지 않는 값의 유형</target>
        </trans-unit>
        <trans-unit id="6fc5b2ce6f49c66d4978328ac73e2cccd63806b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to check that the &lt;code&gt;
 defaultValue&lt;/code&gt; and &lt;code&gt;legalValues&lt;/code&gt;, if non-null, have the correct Java type for the given &lt;code&gt;openType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러가 null이 아닌 경우 &lt;code&gt; defaultValue&lt;/code&gt; 및 &lt;code&gt;legalValues&lt;/code&gt; 가 주어진 &lt;code&gt;openType&lt;/code&gt; 에 대해 올바른 Java 유형을 갖는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47053d5a6e7d312d26e0ae45310c2370314009ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to check that the &lt;code&gt;
 defaultValue&lt;/code&gt;, &lt;code&gt;minValue&lt;/code&gt;, and &lt;code&gt;maxValue&lt;/code&gt;, if non-null, have the correct Java type for the given &lt;code&gt;
 openType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러가 &lt;code&gt; defaultValue&lt;/code&gt; , &lt;code&gt;minValue&lt;/code&gt; 및 &lt;code&gt;maxValue&lt;/code&gt; 가 널이 아닌 경우 주어진 &lt;code&gt; openType&lt;/code&gt; 에 대해 올바른 Java 유형을 가지고 있는지 확인할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="2cca368ab1d05f403a456411366a46a54d041c50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to check that the &lt;code&gt;defaultValue&lt;/code&gt; and &lt;code&gt;legalValues&lt;/code&gt;, if non-null, have the correct Java type for the given &lt;code&gt;openType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러는 null이 아닌 경우 &lt;code&gt;defaultValue&lt;/code&gt; 및 &lt;code&gt;legalValues&lt;/code&gt; 가 지정된 &lt;code&gt;openType&lt;/code&gt; 에 대해 올바른 Java 유형을 가지고 있는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7da93c037f6bd746c409db9a9a1b00223431a0dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to check that the &lt;code&gt;defaultValue&lt;/code&gt;, &lt;code&gt;minValue&lt;/code&gt;, and &lt;code&gt;maxValue&lt;/code&gt;, if non-null, have the correct Java type for the given &lt;code&gt;openType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러가 &lt;code&gt;defaultValue&lt;/code&gt; , &lt;code&gt;minValue&lt;/code&gt; 및 &lt;code&gt;maxValue&lt;/code&gt; 가 null이 아닌 경우 주어진 &lt;code&gt;openType&lt;/code&gt; 에 대해 올바른 Java 유형을 가지고 있는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d38da2b8f1415f0bfea67001da1e7a786c9c7e92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to check that the &lt;code&gt;defaultValue&lt;/code&gt;, if non-null, has the correct Java type for the given &lt;code&gt;openType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러가 null이 아닌 경우 &lt;code&gt;defaultValue&lt;/code&gt; 가 지정된 &lt;code&gt;openType&lt;/code&gt; 에 대해 올바른 Java 유형을 가지고 있는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a7cb62e7104db5f392c61ea3e8a79952ec6f7aea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to know that if the &lt;code&gt;
 interfaceClass&lt;/code&gt; parameter is &lt;code&gt;MyMBean.class&lt;/code&gt;, for example, then the return type is &lt;code&gt;MyMBean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러가 예를 들어 &lt;code&gt; interfaceClass&lt;/code&gt; 매개 변수가 &lt;code&gt;MyMBean.class&lt;/code&gt; 인 경우 반환 유형이 &lt;code&gt;MyMBean&lt;/code&gt; 임을 알 수 있도록 합니다.</target>
        </trans-unit>
        <trans-unit id="a57394c155db5ba75faeb0bd09208f6ccbeda1d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to know that if the &lt;code&gt;
 interfaceClass&lt;/code&gt; parameter is &lt;code&gt;MyMXBean.class&lt;/code&gt;, for example, then the return type is &lt;code&gt;MyMXBean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러가 예를 들어 &lt;code&gt; interfaceClass&lt;/code&gt; 매개 변수가 &lt;code&gt;MyMXBean.class&lt;/code&gt; 인 경우 반환 유형이 &lt;code&gt;MyMXBean&lt;/code&gt; 임을 알 수 있도록 합니다.</target>
        </trans-unit>
        <trans-unit id="019ca4079877b49738764e49ac125a3ff05a9261" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to know that if the &lt;code&gt;interfaceClass&lt;/code&gt; parameter is &lt;code&gt;MyMBean.class&lt;/code&gt;, for example, then the return type is &lt;code&gt;MyMBean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러는 &lt;code&gt;interfaceClass&lt;/code&gt; 매개 변수가 &lt;code&gt;MyMBean.class&lt;/code&gt; 인 경우 리턴 유형이 &lt;code&gt;MyMBean&lt;/code&gt; 임을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf87baaa7eb6ff571f806e206e747d483737fb70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to know that if the &lt;code&gt;interfaceClass&lt;/code&gt; parameter is &lt;code&gt;MyMXBean.class&lt;/code&gt;, for example, then the return type is &lt;code&gt;MyMXBean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러는 &lt;code&gt;interfaceClass&lt;/code&gt; 매개 변수가 &lt;code&gt;MyMXBean.class&lt;/code&gt; 인 경우 리턴 유형이 &lt;code&gt;MyMXBean&lt;/code&gt; 임을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f5d25a6903901fb9d715669cfb586215f9e259f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - an &lt;code&gt;mxbeanInterface&lt;/code&gt; type parameter</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - &lt;code&gt;mxbeanInterface&lt;/code&gt; 타입의 파라미터</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
